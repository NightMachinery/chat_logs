[00:00:04] *** Quits: Colt (~Colt@user/colt) (Read error: Connection reset by peer)
[00:00:51] *** Quits: cyrus_mc (~cyrus_mc@c-98-232-162-73.hsd1.or.comcast.net) (Quit: Connection closed)
[00:02:54] *** Joins: cyberpear (uid364019@fedora/cyberpear)
[00:03:43] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[00:03:50] *** Quits: grooverman (~grooverma@177.102.119.40) (Read error: Connection reset by peer)
[00:03:55] *** Joins: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il)
[00:04:31] *** Joins: grooverman (~grooverma@177.102.119.40)
[00:04:58] *** Joins: miique (~miique@181.46.139.166)
[00:06:46] *** Quits: yotsuba420 (~yotsuba@93-172-241-53.bb.netvision.net.il) (Ping timeout: 268 seconds)
[00:08:32] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[00:09:38] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[00:12:13] *** Quits: xaltsc (~xaltsc@user/xaltsc) (Quit: WeeChat 3.3)
[00:14:12] *** Joins: bcmyers (~bcmyers@cpe-76-92-188-7.kc.res.rr.com)
[00:15:32] *** Joins: bcmyers_ (~bcmyers@cpe-76-92-188-7.kc.res.rr.com)
[00:16:04] *** Quits: magla (~gelignite@55d4dfc1.access.ecotel.net) (Quit: Stay safe!)
[00:16:18] *** Quits: bcmyers_ (~bcmyers@cpe-76-92-188-7.kc.res.rr.com) (Client Quit)
[00:16:20] *** Joins: imp_ (~imp@192-141-191-231.alternativaip.net.br)
[00:17:49] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[00:19:15] *** Quits: tomitek_ (~tomitek@host-80-238-118-45.jmdi.pl) (Quit: Leaving)
[00:20:05] *** Quits: imp (~imp@138.255.144.170) (Ping timeout: 256 seconds)
[00:20:07] *** imp_ is now known as imp
[00:21:22] *** Quits: delvian (~delvian@41.13.220.94) (Remote host closed the connection)
[00:21:26] *** Joins: xaltsc (~xaltsc@user/xaltsc)
[00:21:47] *** Quits: onichomp (~onichomp@2806:264:4404:80d0:40cd:e3cf:fbd2:3023) (Read error: Connection reset by peer)
[00:21:53] *** Joins: delvian (~delvian@41.13.220.94)
[00:22:24] *** Joins: onichomp (~onichomp@2806:264:4404:80d0:40cd:e3cf:fbd2:3023)
[00:24:15] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[00:25:42] *** Quits: rendar_ (~rendar@user/rendar) (Quit: Leaving)
[00:30:32] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[00:31:29] *** Quits: xaltsc (~xaltsc@user/xaltsc) (Quit: WeeChat 3.3)
[00:31:39] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-dc4d-6917-5b3a-2857.res6.spectrum.com) (Read error: Connection reset by peer)
[00:32:58] *** Joins: xaltsc (~xaltsc@user/xaltsc)
[00:35:19] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[00:36:30] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 260 seconds)
[00:36:39] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[00:41:39] *** Quits: Warped (~Warped@user/warped) (Quit: We Gone! Bye Bye)
[00:42:33] *** Quits: grooverman (~grooverma@177.102.119.40) (Remote host closed the connection)
[00:44:47] *** Quits: zer0bitz (~zer0bitz@185.112.82.230) (Read error: Connection reset by peer)
[00:45:44] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca)
[00:45:54] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Ping timeout: 276 seconds)
[00:46:09] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[00:46:12] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[00:48:55] *** Quits: EgonX_ (~EgonX@2001:558:6022:6d:6971:a5f0:543e:eb4d) (Quit: Textual IRC Client: www.textualapp.com)
[00:52:22] *** Joins: noarb (~noarb@user/noarb)
[00:54:15] *** Quits: arinov_ (~arinov@178.240.175.124) (Ping timeout: 268 seconds)
[00:54:49] *** Joins: zepolen (~zepolen@ppp-94-66-223-200.home.otenet.gr)
[00:55:07] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:a46b:aa5a:38d2:4074)
[00:56:31] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[01:00:19] *** Quits: upsala (~zcb@185.209.196.169) (Quit: WeeChat 3.4)
[01:01:30] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[01:03:29] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[01:03:41] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[01:04:29] *** Joins: Roey (~Roey@user/Roey)
[01:05:43] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:06:19] *** Joins: Ev0l (~gabriel@181.223.199.100)
[01:09:31] *** Quits: ttys000 (~ttys000@user/ttys000) (Quit: Textual IRC Client: www.textualapp.com)
[01:09:43] *** Joins: grooverman (~grooverma@177.102.117.95)
[01:13:21] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[01:13:49] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[01:17:01] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[01:21:19] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:b1ec:c200:85e1:4f7d) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[01:23:25] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:25:37] *** Quits: foxbox (~cammy@user/cammy) (Ping timeout: 240 seconds)
[01:26:17] *** Quits: NeoCore (~neocore@195.200.221.197) (Quit: Leaving)
[01:26:23] *** Joins: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy)
[01:26:47] *** Joins: arinov_ (~arinov@213.194.126.155)
[01:29:14] *** Joins: vladoski (~foo@93-36-221-58.ip62.fastwebnet.it)
[01:30:34] *** Joins: ano (~ano@user/ano)
[01:32:13] *** Joins: jokoon (~eio@2a01:e0a:542:b20:c1b1:3552:fd0a:3a58)
[01:33:50] *** Quits: trampel (~trampel@2601:602:9c00:921:7115:782b:d2ca:2f9f) (Quit: Leaving)
[01:33:56] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Quit: AmigaOS PPC 4.1 +E +U1 // AmIRC 68K)
[01:34:57] *** Quits: jokoon (~eio@2a01:e0a:542:b20:c1b1:3552:fd0a:3a58) (Client Quit)
[01:35:30] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Quit: Leaving)
[01:37:39] *** Joins: Macuser (~Macuser@2600:1003:b441:3a96:81c4:f905:3cd5:db19)
[01:38:35] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[01:39:17] *** Joins: kittonian (~kittonian@cpe-70-114-148-180.austin.res.rr.com)
[01:39:37] *** Joins: XV8 (~XV8@2601:5cb:c001:50:3d6e:cfa4:63ac:b4be)
[01:39:53] *** Quits: XV8 (~XV8@2601:5cb:c001:50:3d6e:cfa4:63ac:b4be) (Client Quit)
[01:39:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[01:39:59] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[01:40:12] *** Quits: wovixo (~wovixo@128.104.205.49) (Read error: Connection reset by peer)
[01:41:34] *** Joins: XV8 (~XV8@2601:5cb:c001:50:3d6e:cfa4:63ac:b4be)
[01:41:44] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[01:42:04] *** Joins: fikran (~fikran@user/fikran)
[01:42:36] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[01:43:08] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[01:43:36] *** Quits: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il) (Read error: Connection reset by peer)
[01:44:08] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[01:45:46] *** Quits: xaltsc (~xaltsc@user/xaltsc) (Quit: WeeChat 3.3)
[01:46:37] *** Quits: XV8 (~XV8@2601:5cb:c001:50:3d6e:cfa4:63ac:b4be) (Ping timeout: 240 seconds)
[01:47:33] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Ping timeout: 250 seconds)
[01:49:02] *** Joins: clarkk (~clarkk@host86-165-12-159.range86-165.btcentralplus.com)
[01:49:17] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 250 seconds)
[01:49:37] *** Quits: vladoski (~foo@93-36-221-58.ip62.fastwebnet.it) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:50:27] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[01:50:31] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[01:50:37] *** Quits: madduck (~madduck@user/madduck) (Ping timeout: 240 seconds)
[01:50:57] *** Joins: jmd (~user@de.cellform.com)
[01:50:59] *** Quits: Ev0l (~gabriel@181.223.199.100) (Quit: leaving)
[01:51:37] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[01:52:22] *** Quits: withered_wolf (~withered_@97.112.15.92) (Remote host closed the connection)
[01:53:31] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[01:53:35] *** Joins: aslicedbanjo (~aslicedba@host31-48-146-252.range31-48.btcentralplus.com)
[01:53:52] *** Joins: withered_wolf (~withered_@97.112.15.92)
[01:54:31] *** Joins: henistein (~henistein@2001:8a0:c18a:f601:e0b9:9d3b:2bec:5f70)
[01:56:17] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:fdb9:e1eb:f99b:dc41)
[01:57:07] *** Quits: parv (~quass@user/parv) (Quit: parv)
[01:59:50] *** Quits: Strom (strom@fedora/strom) ()
[02:01:41] *** Joins: vladoski (~foo@93-36-221-58.ip62.fastwebnet.it)
[02:02:02] *** Joins: Strom (~strom@fedora/strom)
[02:02:10] <kittonian> hi all. i am generating an OTP code and encoding it into a json string so I can retrieve it via swiftUI into an iOS app, but I also need it the generated code to send to the user via e-mail.
[02:03:04] <kittonian> I have a script where I can parse the json and get the code to send via e-mail (all works) but I also need to return the full json string so I can use it in my swiftUI code to store the OTP variable for verification/matching
[02:03:16] <kittonian> here's the script that calls to the function - https://bpa.st/KWFA
[02:03:37] *** Quits: gr1m (~gr1m@45.83.220.192) (Ping timeout: 240 seconds)
[02:04:01] <kittonian> I cannot seem to figure out how to return both. as I've shown in my paste, if I return x, d which is a tuple it throws an error. I can just return x and I can just return d, but not both
[02:04:31] *** Joins: foxbox (~cammy@user/cammy)
[02:04:37] <nedbat> kittonian: you haven't show the code that is calling the function.
[02:04:39] <kittonian> or perhaps I am thinking about it all wrong. i am certainly open to suggestions
[02:04:53] <ChrisWarrick> kittonian: from a security perspective, I don’t think the iOS app should know the OTP code
[02:04:55] <kittonian> nedbat, I haven't show the function
[02:04:57] *** Quits: Macuser (~Macuser@2600:1003:b441:3a96:81c4:f905:3cd5:db19) (Ping timeout: 240 seconds)
[02:05:16] <nedbat> kittonian: if you could pastebin the code and the complete error report, we can help fix it up
[02:05:21] <kittonian> ChrisWarrick, of course the iOS app would need to know the OTP code. how else would you verify that the user has entered the correct code?
[02:05:29] <ChrisWarrick> kittonian: the backend should do that
[02:06:08] <ChrisWarrick> kittonian: (as it does with passwords)
[02:06:37] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 240 seconds)
[02:06:50] *** Joins: oatmealraisin (~ryan@2603-7000-3e00-c4a0-a7ed-02af-6607-1304.res6.spectrum.com)
[02:06:59] <kittonian> hmmm, if that's the case then I would also have to store the OTP on the backend somewhere
[02:07:07] <kittonian> with my solution that wouldn't be necessary
[02:07:11] *** Quits: cosimone (~user@93-47-231-248.ip115.fastwebnet.it) (Ping timeout: 256 seconds)
[02:07:13] <oatmealraisin> Hello, for SQLAlchemy, can it set up tables on its own?
[02:07:21] <oatmealraisin> I thought that was a feature but can't seem to figure out how
[02:07:29] <kittonian> nedbat, you want to see the function?
[02:07:38] *** Quits: humbertowoody (~humbertow@189.132.138.198) (Ping timeout: 268 seconds)
[02:07:43] <nedbat> kittonian: i think that is where the error is, riight?
[02:07:48] <kittonian> nedbat, no
[02:07:53] <ChrisWarrick> kittonian: show us the code that is involved in the "tuple indices must be integers or slices, not str" error
[02:08:01] <nedbat> kittonian: can you show the complete error report?
[02:08:05] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[02:08:28] <ChrisWarrick> oatmealraisin: there’s https://docs.sqlalchemy.org/en/14/core/metadata.html#creating-and-dropping-database-tables
[02:08:28] <kittonian> nedbat, if you look at the paste I have comments that show you returning a tuple produces the error (and I showed the error), while the other return d works just fine but only returns d instead of x and d
[02:08:42] <kittonian> nedbat, there is no complete error report. it's an error msg
[02:08:43] <oatmealraisin> ChrisWarrick: thank you!
[02:08:47] <nedbat> kittonian: please: the full error report. there's no code in that paste that would cause an error.
[02:08:55] <nedbat> kittonian: where is the error message coming from?
[02:08:59] *** Joins: Macuser (~Macuser@2600:1003:b44f:86ad:f9ed:75cc:5e1c:61d2)
[02:09:06] *** Joins: akk (~akk@174-28-122-47.albq.qwest.net)
[02:09:15] <nedbat> kittonian: how are you running the program? Where do you see the error message?
[02:09:16] <kittonian> nedbat, yes there is because the return is a string and not an integer
[02:09:43] <nedbat> kittonian: i don't know what that means.
[02:09:45] <nedbat> kittonian: how are you running the program? Where do you see the error message?
[02:10:39] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[02:10:40] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:c0e5:e221:e934:5fac) (Read error: Connection reset by peer)
[02:12:21] <kittonian> nedbat, if you really want to see the function here's everything https://bpa.st/WOTQ
[02:12:31] <nedbat> kittonian: can you answer my questions?
[02:12:48] <kittonian> that error message is pretty standard btw. there's tons of people dealing with it when searching google
[02:13:39] <nedbat> kittonian: how are you running the program? Where do you see the error message?
[02:13:47] <kittonian> it's a python script in zope
[02:14:02] <kittonian> and the error is in the error log
[02:14:11] <nedbat> ok, and doesn't zope give you more details about where the error is occurring?
[02:14:50] <kittonian> in this case there is no additional information in the error log, but i know where it's occuring
[02:15:03] <ChrisWarrick> kittonian: where is it occurring?
[02:15:04] <kittonian> it's occurs when trying to return a tuple
[02:15:11] <kittonian> like i showed in my paste
[02:15:20] <ChrisWarrick> kittonian: in plain python, you can return a tuple just fine
[02:15:22] <nedbat> kittonian: if you say it's on the line "return x, d", then I don't see how that is possible.  It must be in the caller of that function.
[02:15:24] <kittonian> returning either x or d without the other works perfectly
[02:15:26] *** Quits: emx (~emx@adsl-84-226-68-198.adslplus.ch) (Ping timeout: 260 seconds)
[02:15:29] <ChrisWarrick> kittonian: how is zope trying to use the return value?
[02:15:34] <nedbat> kittonian: the caller is failing.  We need to see the caller.
[02:15:54] <kittonian> not even doing anything with zope using anything. it's literally a python script and clicking test which simply runs the script
[02:15:55] <nedbat> kittonian: also, your latest paste doesn't show the "return x, d" line in context.
[02:16:10] <nedbat> kittonian: can you pastebin that complete script, with the "x, d" line?
[02:16:19] <kittonian> nedbat, can you not see my paste?
[02:16:22] <kittonian> it's right there
[02:16:28] <nedbat> kittonian: you have a return line, but it's not in a function.
[02:16:29] <kittonian> even has a comment over it
[02:16:34] <nedbat> that isn't runnable code.
[02:16:39] <kittonian> yes it is
[02:16:49] <kittonian> I posted my functions above it
[02:16:52] <nedbat> kittonian: it's a syntax error. double-check what you are running.
[02:16:59] <kittonian> then in zope you create a python script and this is how it works
[02:17:18] <kittonian> it's calling to what's known as an external method
[02:17:20] <nedbat> kittonian: ok, then zope is odd, and we don't understand it, and you have to seek help elsewhere I guess.
[02:17:23] <kittonian> which is where the functions are defined
[02:17:45] <kittonian> nedbat, see? this is why I didn't want to answer you. it always turns out exactly the same, and it never has anything to actually do with my question
[02:17:57] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 240 seconds)
[02:18:10] <nedbat> kittonian: the fact remains that the error is not in the return line. It's what zope is doing with the return.
[02:18:20] <kittonian> i promise you it's not
[02:18:30] <nedbat> kittonian: the return causes it, but it's not from the return line itself.
[02:18:33] <kittonian> which is why so many others have asked about the same error
[02:18:38] <nedbat> kittonian: ok, ask one of them.
[02:18:40] <kittonian> and there are tons of answers, which I understand
[02:18:41] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 245 seconds)
[02:18:45] <kittonian> but that's not the question
[02:19:00] <kittonian> the question is simply how to return two strings instead of just one
[02:19:01] <nedbat> kittonian: we don't know the answer. sorry.
[02:19:08] <nedbat> kittonian: "return x, y" will return two strings.
[02:19:20] <nedbat> kittonian: zope is doing something unusual, and we don't know what it is.
[02:19:38] <kittonian> nedbat, you. you don't know the answer. don't speak for everyone else and cast me aside because you don't like that I'm using zope
[02:19:50] <nedbat> kittonian: ok, feel free to wait for someone else.
[02:19:54] <kittonian> zope is not doing anything unusal
[02:19:57] *** Quits: sudomannn (~sudomann@2601:155:8402:4960:f4b6:2f5c:9895:3a33) (Ping timeout: 240 seconds)
[02:19:58] <kittonian> *unusual
[02:19:59] * ChrisWarrick does not know anything about zope either
[02:20:00] <nedbat> kittonian: i assure you it is.
[02:20:06] <kittonian> you don't need to know about zope
[02:20:10] <kittonian> forget zope
[02:20:15] <Yhg1s> kittonian: it's not unusual *for zope users*, but it is a significantly different environment.
[02:20:16] <nedbat> kittonian: stop this.
[02:20:29] <nedbat> kittonian: the way to return two values is exactly how you are doing it. it creates a tuple.
[02:20:31] <kittonian> i'm sorry, me? stop what?
[02:20:41] <nedbat> kittonian: that tuple is being used by zope, which is why the error is about tuples.
[02:20:51] <kittonian> you can return multiple values as an array, as a dict, as a tuple, etc.
[02:21:08] *** Joins: sudomannn (~sudomann@89.46.62.128)
[02:21:18] <nedbat> kittonian: "return a, b" makes a tuple of two values, and returns it. it's the standard way to "return two values". You are doing it right.
[02:21:19] <kittonian> is this person using zope too? https://stackoverflow.com/questions/54186567/dataframe-cant-be-iterated-through-getting-following-error-tuple-indices-must/54186688
[02:21:30] <kittonian> or this one? https://stackoverflow.com/questions/35359969/typeerror-tuple-indices-must-be-integers-not-str
[02:21:31] <nedbat> kittonian: look, no one here knows.
[02:21:36] <ChrisWarrick> kittonian: This exception can happen in many cases.
[02:21:50] <kittonian> ChrisWarrick, exactly my point
[02:21:52] <nedbat> kittonian: i know you are frustrated, because this interaction has happened here before.
[02:21:56] <kittonian> that's why I am asking for assistance
[02:22:02] <Yhg1s> kittonian: the case you're dealing one appears very much to be zope-specific.
[02:22:20] <kittonian> Yhg1s, run it from the command line and you'll get the same error
[02:22:23] <kittonian> has nothing to do with zope
[02:22:25] <Yhg1s> kittonian: solutions for different cases isn't going to help you here.
[02:22:33] <nedbat> kittonian: it has everything to do with zope.
[02:22:39] <ChrisWarrick> kittonian: The minimum code to cause this exception is:  a_tuple = 1,2; a_tuple["x"]
[02:22:42] <nedbat> kittonian: the caller of your code is failing.
[02:22:47] <kittonian> nedbat, really? than why do I get the same error on the command line?
[02:22:56] <nedbat> kittonian: how are you running it on the command line?
[02:23:02] <nedbat> kittonian: with zope, yes?
[02:23:04] <kittonian> python generateOTP
[02:23:04] *** Quits: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) (Quit: Leaving.)
[02:23:07] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:fdb9:e1eb:f99b:dc41) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[02:23:09] <kittonian> not with zope
[02:23:19] <nedbat> if not, then pastebin the complete file, without editing it, and show us.
[02:23:21] <ChrisWarrick> kittonian: can you pastebin the entirety of the generateOT fileP?
[02:23:26] <kittonian> i did
[02:23:29] <nedbat> kittonian: you cannot have a return statement outside of a function.
[02:23:34] <kittonian> that's the top of the paste
[02:24:31] <nedbat> kittonian: that file gives me this:  TypeError: generateOTP() missing 1 required positional argument: 'self'
[02:24:45] <nedbat> kittonian: are you sure that's what you are running?
[02:25:12] <nedbat> kittonian: line 5 has a self argument, line 36 isn't providing one.
[02:25:32] *** Quits: fannagoganna (uid110488@id-110488.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[02:25:57] *** Quits: miique (~miique@181.46.139.166) (Ping timeout: 240 seconds)
[02:26:13] <nedbat> kittonian: i want to help you, and I'm willing to work with you on this.
[02:26:50] *** Joins: Themis3000 (~Thunderbi@user/themis3000)
[02:27:12] *** Joins: kosh (~kosh@user/kosh)
[02:27:41] *** Quits: remote (~self@user/hackers) (Remote host closed the connection)
[02:28:43] *** Joins: humbertowoody (~humbertow@189.132.138.198)
[02:28:54] <kittonian> i appreciate that
[02:29:06] <kittonian> i don't want to argue constantly just because I use zope as my app server
[02:29:13] <bjs> kittonian: where did you put this `return x, d` line?
[02:29:14] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:29:27] <kittonian> bjs, in the python script in zope
[02:29:33] <bjs> kittonian: not inside a function?
[02:29:33] <kittonian> the way it works is like this
[02:29:48] <kittonian> you write what's called an external method because zope uses restricted python
[02:30:06] <kittonian> then you create an external method in zope to call to that file (which resides on the file system in a special directory)
[02:30:19] <kittonian> then you create a python script to call to that function
[02:30:26] <bjs> kittonian: so there's no `def` in the Python script?
[02:30:27] <kittonian> and you can return a value
[02:30:42] *** Joins: junebug (~junebug@2600:1700:3db0:2540:4974:3ab:902:fcc7)
[02:30:44] <kittonian> correct, the def goes in the python script on the file system which is known as an external method
[02:30:55] <bjs> kittonian: that's very weird, Python doesn't let you do that. (in normal Python you aren't even *allowed* to write a `return` outside of a `def`)
[02:31:07] <nedbat> kittonian: you said you have a command line program that failed the same way. Can we see that program?
[02:31:11] <kittonian> i understand, but this is sort of the same thing with a workaround
[02:31:18] <bjs> kittonian: well... what/where/how is calling this "external" method
[02:31:18] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:29ad:19a:fa15:e17c)
[02:31:31] <kittonian> the context.jsonOTP() line
[02:31:56] <bjs> kittonian: isn't that line inside your "external function" file?
[02:32:06] *** Joins: Noxturminal (~thelounge@user/noxturminal)
[02:32:08] <bjs> it's calling itself?
[02:32:13] <kittonian> jsonOTP is the external method that calls the def inside that file. you can have as many different functions in one .py as you want and then each external method defines which function you want to work with
[02:32:23] *** Roey is now known as WokeWookieWiki
[02:32:36] <bjs> kittonian: what def?  you just said the file doesn't have a def
[02:32:46] <bjs> kittonian: this file https://bpa.st/KWFA  is this actually a .py file you have anywhere?
[02:32:48] <bjs> with the two returns
[02:32:48] <kittonian> the def is in the external method .py file on the filesystem
[02:32:59] <bjs> kittonian: I don't know what that means.
[02:33:13] <nedbat> kittonian: can we talk about the command-line program you have?
[02:33:15] *** Quits: humbertowoody (~humbertow@189.132.138.198) (Ping timeout: 256 seconds)
[02:33:30] <kittonian> perhaps this will help
[02:33:31] <kittonian> https://zope.readthedocs.io/en/latest/zopebook/ScriptingZope.html#using-external-methods
[02:33:44] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[02:33:53] <bjs> kittonian: but your file with the `return` didn't have any `def`s in it?  I'm still confused.  What is this about a command-line program?
[02:35:01] <kittonian> forget the running it from the command line. it was just me playing around with it earlier. check the link i posted and you'll understand the flow
[02:35:18] <bjs> kittonian: I do not understand the flow, your link had some `return` statements that were *not* inside a `def`
[02:35:24] <bjs> are those actually part of the program?
[02:35:35] <kittonian> the zope link i just posted to explain external methods
[02:35:37] *** WokeWookieWiki is now known as Roey
[02:35:38] <bjs> kittonian: this file https://bpa.st/KWFA those returns look weird, because you have one after the other and not inside a def
[02:35:41] <kittonian> that's what I'm saying to check out
[02:35:49] <bjs> kittonian: yes, and it has `def`s in all the examples?
[02:35:51] <bjs> so i'm confused
[02:35:55] <nedbat> kittonian: the docs page is good, thanks.  Those examples are all def's that return strings.
[02:35:57] <kittonian> the two returns mentioned are not actually both being used
[02:36:00] *** Quits: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy) (Ping timeout: 268 seconds)
[02:36:08] <bjs> kittonian: but they're both in the file?
[02:36:11] <bjs> one after the other like that?
[02:36:12] <kittonian> they were in there as an example which is why I commented above to explain
[02:36:19] <kittonian> no, they are not, it's just an example
[02:36:22] <bjs> kittonian: what is the *actual file* that contains your "external method" ?
[02:36:41] <kittonian> again, the external method is the top portion (before the ----------)
[02:36:51] <kittonian> the one with the defs
[02:36:51] <bjs> kittonian: what is the ---- and after/
[02:36:57] *** Quits: aslicedbanjo (~aslicedba@host31-48-146-252.range31-48.btcentralplus.com) (Quit: Leaving.)
[02:37:05] <nedbat> kittonian: portion above the ----- doesn't have a return of two things.
[02:37:05] <bjs> is that just... a mistake? a typo? should we ignore the --- and below?
[02:37:14] *** Joins: humbertowoody (~humbertow@189.132.138.198)
[02:37:24] <ChrisWarrick> kittonian: could you make one paste with the latest code that throws the error and only that code?
[02:37:45] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[02:39:28] <kittonian> ChrisWarrick, lines 1-36 is the external method (a .py file that resides on the file system outside of zope)
[02:39:34] <ChrisWarrick> kittonian: could you make one paste with the latest code that throws the error and only that code?
[02:39:53] <kittonian> ChrisWarrick, lines 40-49 is the python script in zope
[02:39:57] <kittonian> it's all right there
[02:39:59] *** Quits: clarkk (~clarkk@host86-165-12-159.range86-165.btcentralplus.com) (Quit: Leaving)
[02:40:00] <nedbat> kittonian: your error is from a line like "return x, d", but line 1-36 don't have a line like that.
[02:40:08] <nedbat> kittonian: how can we fix code that isn't broken?
[02:40:20] <kittonian> nedbat, I just explained that
[02:40:24] <nedbat> kittonian: we don't get it.
[02:40:30] <nedbat> make a file that fails, and pastebin that file.
[02:40:40] <nedbat> not a summary, not an example. the actual file that actually fails.
[02:40:50] <kittonian> those are the actual files
[02:41:03] <kittonian> what you are asking is not possible
[02:41:04] <nedbat> kittonian: what line in 1-36 is causing the problem?
[02:41:18] <bjs> kittonian: well the second file looks very strange,  but is the stuff above the --- in https://bpa.st/WOTQ really the file that has the problem?
[02:41:19] <kittonian> there is no error in the external method
[02:41:28] <kittonian> bjs, no
[02:41:37] <kittonian> lines 1-36 have no issue at all
[02:41:44] <nedbat> kittonian: i know you don't want me to say this, but zope is central to this problem.
[02:41:57] <kittonian> and if I return d OR return x the python script works just fine too
[02:42:08] <bjs> kittonian: okay so let's talk about the other lines then, that `return x, d` line looks *very strange* to me because there is no `def` in that file
[02:42:09] <kittonian> it's only when I try to return multiple values that I get the error
[02:42:10] *** Quits: humbertowoody (~humbertow@189.132.138.198) (Ping timeout: 268 seconds)
[02:42:19] <bjs> kittonian: am I being dumb or is that correct?  Is there a `def` in the file that has `return x, d` ?
[02:42:25] <nedbat> kittonian: yes: zope is trying to use your tuple as if it were a dict. we don't know why.
[02:42:41] <kittonian> bjs, yes, i hate to say it but this whole back and forth is getting dumb
[02:43:01] <bjs> kittonian: why do your lines 40-49 not have a def then?
[02:43:02] <nedbat> kittonian: do you have some dtml that uses the external method?
[02:43:02] <kittonian> if no one wants to take 2 minutes and read how zope using external methods, i can't keep repeating myself over and over again
[02:43:14] *** Joins: humbertowoody (~humbertow@189.132.138.198)
[02:43:15] <nedbat> kittonian: that page doesn't show an external method like yours
[02:43:18] <kittonian> nedbat, no. i'm not even doing anything with dtml yet
[02:43:20] <bjs> kittonian: I did take the time to read, its examples have `def`s in the external methods and no defs in the scripts
[02:43:26] <bjs> you are saying you have a def in your script
[02:43:30] <kittonian> bjs, YES!!!!
[02:43:33] <kittonian> you understand
[02:43:35] <bjs> kittonian: yes it has a def?
[02:43:38] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[02:43:42] <kittonian> defs are in the external method NOT in the python script
[02:43:48] <kittonian> those are two different things
[02:43:49] <bjs> kittonian: you *just said* there was a def in your script
[02:43:51] <bjs> no wonder we're confused
[02:43:59] <kittonian> i did not say that
[02:44:05] <kittonian> in fact I said the opposite of that
[02:44:10] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[02:44:14] <kittonian> lines 1-36 is the external method
[02:44:21] <kittonian> lines 40-49 is the python script in zope
[02:44:28] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:44:35] *** Quits: foxbox (~cammy@user/cammy) (Ping timeout: 256 seconds)
[02:44:40] <bjs> kittonian: I asked you very very explicitly whether the file you wrote that had the `return x, d` line in it (the script) had a `def` in it. You said "yes"
[02:44:45] <bjs> but I'm glad we cleared that up
[02:44:59] <kittonian> bjs, no i did not, but i'm glad you understand now
[02:45:12] <kittonian> i said the defs go in the external method NOT in the python script in zope
[02:45:24] <bjs> kittonian: <bjs> kittonian: am I being dumb or is that correct?  Is there a `def` in the file that has `return x, d` ?  <kittonian> bjs, yes,
[02:46:17] <kittonian> bjs, sorry, the yes was in response to the am I being dumb part (though i would say that the back and forth is dumb, not you)
[02:46:27] *** Quits: junebug (~junebug@2600:1700:3db0:2540:4974:3ab:902:fcc7) (Quit: Leaving)
[02:46:27] <kittonian> did not mean to be confusing
[02:46:53] <kittonian> that's why I have repeatedly explained that lines 1-36 are the external method and lines 40-49 is the python script
[02:47:23] <nedbat> kittonian: do you have a link to the zope docs that explain how lines 40-49 get used?
[02:47:32] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 240 seconds)
[02:48:06] <bjs> kittonian: okay well zope scripts are very very strange things (as they're not valid Python files).  It appears from the Zope documentation that "scripts" can be used in many different ways.
[02:48:15] <kittonian> nedbat, the line x = context.jsonOTP() is saying x equals the external method
[02:48:20] *** Quits: humbertowoody (~humbertow@189.132.138.198) (Ping timeout: 268 seconds)
[02:48:26] *** Joins: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is)
[02:48:46] <bjs> kittonian: but that line is in the script,  that's not an answer to nedbat's question.
[02:48:49] <kittonian> jsonOTP is the external method you create in zope that references the file system .py
[02:49:00] <nedbat> kittonian: yes but what makes lines 40-49 run? What calls it, and how is the return used?
[02:49:09] <kittonian> and context simply means it's in the same path as the python script
[02:49:17] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:e4d8:bccb:135f:f542) (Ping timeout: 252 seconds)
[02:49:19] <kittonian> oh, ok i can see that can be confusing
[02:49:22] <nedbat> kittonian: how did you know how to write lines 40-49?
[02:49:30] <kittonian> there is a tab you can click to test your python script
[02:49:31] *** Joins: saunders (~nicholas@172.103.152.184)
[02:49:35] <kittonian> that's all I've done
[02:49:46] <kittonian> so it just runs the script
[02:49:49] <nedbat> kittonian: can you put a screenshot of that tab on imgur.com?
[02:50:00] <kittonian> a screenshot? it's text that says test
[02:50:09] <bjs> kittonian: well what exactly does "test" mean, maybe test means it expects it to return a certain value?
[02:50:15] <kittonian> you click it and it runs the script. if there's output it prints it to the screen
[02:50:35] <kittonian> it's the same as simply doing python test.py from the command line
[02:50:40] <bjs> kittonian: a tab in what?
[02:50:41] <kittonian> you're just running a script
[02:50:44] <bjs> kittonian: you say it's the same, it's clearly not
[02:50:49] <nedbat> kittonian: it is not the same as running test.py from the command line.
[02:50:50] <bjs> the zope "script" is not a valid Python file.
[02:51:07] <kittonian> bjs, it is when using an external method
[02:51:14] <bjs> kittonian: I don't know what you mean
[02:51:32] <nedbat> kittonian: can you please give us a screenshot of the browser with the tab you mean? It might help.
[02:51:54] <bjs> kittonian: okay let me try make this more clear and less confusing.  https://bpa.st/KWFA  this file is the contents of your script or whatever, and this is not a valid .py file.  Python would not accept it as a Python script.
[02:52:00] <nedbat> kittonian: you are using a little-used idiosyncratic system that we don't know. We are willing to learn about it but you have to help us.
[02:52:00] <kittonian> if I edit the python script in zope and put in print(x) and print(d) and return printed and click test, it will print both variables
[02:52:09] <bjs> kittonian: zope obviously will, because zope is doing some hackery to make it work
[02:52:21] <nedbat> kittonian: do you accept that this is not a runnable python script without zope?
[02:52:34] <kittonian> nedbat, of course
[02:52:47] *** Joins: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy)
[02:53:36] <nedbat> kittonian: ok, do you have docs that explained how to write and use that script? where are those?
[02:54:20] <nedbat> kittonian: btw, you say "of course", but you had just said, "it's the same as simply doing python test.py from the command line" so it's hard to follow you sometimes.
[02:54:50] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[02:55:09] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[02:55:14] <kittonian> nedbat, zope docs kind of suck but here's an old one on using scripts https://old.zope.org/Documentation/Books/ZopeBook/2_5_edition/ScriptingZope.stx.1
[02:55:24] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Quit: ThePhilgrim)
[02:55:46] <bjs> kittonian: this "test" tab/button thing is clearly doing some work, to make the script runnable, to run it, and then to do something with the value it returns.
[02:55:49] <bjs> kittonian: what is the actual error you see?
[02:56:36] *** Quits: withered_wolf (~withered_@97.112.15.92) (Remote host closed the connection)
[02:56:51] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:29ad:19a:fa15:e17c) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[02:57:51] <kittonian> bjs, tuple indices must be integers or slices, not str
[02:58:00] <bjs> kittonian: in Python it's totally okay to return whatever you want from a function,  and since Zope is the thing *using* whatever you returned with your `return x, d` line it stands to reason it's what Zope is doing that causes the problem (maybe because you've written the script wrong or whatever)
[02:59:33] <bjs> kittonian: hmm,  that error is pretty cryptic without the whole traceback. I would guess it's trying to treat your return as if it returned just 1 thing (a dict).
[03:00:02] *** Joins: madduck (~madduck@user/madduck)
[03:01:11] <bjs> kittonian: it's a little hard to help because you've not said (maybe you dont know?) what Zope is doing with the return value or why/how it's using it
[03:01:29] <kittonian> as far as I know it's doing nothing with it
[03:01:37] <kittonian> because i haven't asked it to do anything yet
[03:02:00] <kittonian> it should quite literally just show me the return printed on the screeen
[03:02:09] <kittonian> which is exactly what it does if I do return d
[03:02:12] <kittonian> or return x
[03:02:14] *** Quits: Noxturminal (~thelounge@user/noxturminal) (Quit: The Lounge - https://thelounge.chat)
[03:02:21] <bjs> kittonian: well it must be doing something, at the very least it's indexing it with a str.
[03:02:35] <bjs> kittonian: what do you actually *see* if you return d?
[03:02:46] <kittonian> a 6 digit number from the json string
[03:02:52] <kittonian> which is correct
[03:02:59] <kittonian> and return x shows me the entire json string
[03:03:00] <bjs> kittonian: so it's not actually showing you the thin you returned
[03:03:07] <kittonian> sure it si
[03:03:09] <kittonian> is
[03:03:19] <kittonian> that's what d equals
[03:03:33] <bjs> kittonian: do you see {'otp': 012345} or do you just see 012345
[03:03:38] <bjs> (or whatever 6-digit number)
[03:04:05] <kittonian> return d shows {'otp': '550006'}
[03:04:14] *** Joins: Noxturminal (~Noxturmin@user/noxturminal)
[03:04:24] <kittonian> return x shows {"otp": "221526"}
[03:05:07] <kittonian> but if I print(y["otp"]) and return printed it will show 660005
[03:05:36] <Repiphany> If you print(y["otp"]) and don't return anything what happens
[03:05:44] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[03:05:47] <kittonian> it's says printed but not read
[03:06:04] <Repiphany> zope sounds stupid
[03:06:12] <bjs> kittonian: can you `return {"x": x, "d": d}` and does it work? Maybe Zope does something weird if it's tuples
[03:06:17] <bjs> kittonian: zope is doing something weird
[03:06:20] <kittonian> and it will not run
[03:06:21] <nedbat> Repiphany: let's keep the judgement to a minimum
[03:06:58] <kittonian> bjs, yup, that works just fine {'x': '{"otp": "127866"}', 'd': {'otp': '127866'}}
[03:07:07] *** Quits: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy) (Quit: WeeChat 3.3)
[03:07:10] <bjs> kittonian: so then, it's pretty clear it's zope doing something weird
[03:07:16] <bjs> is it not?
[03:07:21] <kittonian> no it's not
[03:07:45] <bjs> kittonian: I don't follow
[03:07:56] <kittonian> because if you return tuples the error i get is exactly the same as so many others. apparently you have to reference the indicie of the tuple rather than return a string
[03:08:05] <kittonian> according to what i've read
[03:08:10] <bjs> kittonian: read where?
[03:08:19] <kittonian> the stackoverflow links i posted
[03:08:21] *** Quits: stockholm (~Andreas@p200300d2c7032100d900c53210f4ddfd.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[03:08:26] <bjs> the error you gave "tuple indices must be integers not str" is a very generic error message you can get for all kinds of reasons
[03:08:52] <bjs> kittonian: Python is perfectly fine with you going `return x, d` there is nothing wrong with that. At least not from Python's point-of-view
[03:09:12] <bjs> Zope is doing something weird, and that's why you're seeing the error (if nothing other than that `return` is changing)
[03:10:55] *** Joins: foxbox (~cammy@user/cammy)
[03:11:24] <kittonian> this doesn't work at the moment (don't understand why) but this would be a command line single .py file you could try and run to recreate the error
[03:11:25] <kittonian> https://bpa.st/FVYA
[03:11:34] <kittonian> can't get the print statement to work for some reason
[03:11:43] <bjs> kittonian: this doesn't work because there's no `self`
[03:11:50] <bjs> well that's at least one reason, I haven't run it
[03:12:11] <kittonian> i tried print(self.jsonOTP()) and it says it doesn't know what self is
[03:12:27] <bjs> kittonian: yes, that's another thing Zope is doing that's weird
[03:12:44] <kittonian> the self thing in each def?
[03:12:59] <kittonian> that's even in the docs on geeksforgeeks for python3 and has nothing to do with zope
[03:13:15] <bjs> kittonian: notice how in zope your external method has a `self` but in your script does not mention self and doesn't pass any arguments
[03:13:41] <kittonian> correct
[03:13:43] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-1c51-9998-c8b0-ddb4.res6.spectrum.com) (Quit: jarthur)
[03:13:46] <bjs> kittonian: okay why do you come here to ask Python experts about Python who have literal decades of experience, who know the internals of how it works inside out better than you could dream of and constantly try to rebuke every comment.  I am going to be clear here: I am *telling* you how Python works.
[03:14:15] <kittonian> i understand. i was just saying the def blah(self): thing was not specific to zope
[03:14:26] <kittonian> believe me. you know way more about python that I ever will
[03:14:34] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[03:14:47] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:15:01] <nedbat> kittonian: a top-level function with a self argument doesn't make sense in standard python. if it works in zope, it's a zope-specific thing.
[03:15:05] <bjs> You are literally just doing it again.
[03:15:18] <nedbat> kittonian: the other examples you found online were for methods defined in a class.
[03:15:37] <kittonian> my other point was that you all had continuously asked for a command line way to test this, so I wrote one. perhaps you can make it work so that it prints both variables that are being returned
[03:15:51] <nedbat> kittonian: but your command-line program doesn't run. that's not our fault.
[03:16:14] <bjs> kittonian: well the problem is that zope is doing weird things and it's zope doing the weird thing that causes your problem (I think), that's why you struggle to make a command-line version
[03:16:16] <kittonian> i said that. perhaps you with your expertise it would be easy to figure out why
[03:16:21] <bjs> kittonian: if you just remove "self" from everywhere in your command-line version
[03:16:36] <nedbat> kittonian: and your command-line program doesn't have the "return x, d" line that you were trying to get to work, so we're confused.
[03:16:38] <bjs> (and possibly also from your external method in zope, although I don't know whether zope also messes with scoping in the external method files)
[03:16:56] <bjs> nedbat: their most recent version https://bpa.st/FVYA does on line 41
[03:17:09] *** Quits: cliluw (~cliluw@47.147.73.223) (Read error: Connection reset by peer)
[03:17:58] <nedbat> kittonian: here is your program, fixed: https://gist.github.com/e4967ba1121307013870e755eeb2fd88
[03:18:09] <nedbat> it prints:   ('{"otp": "330807"}', {'otp': '330807'})
[03:18:09] <kittonian> remove all the self entries throughout the command line and you get ....... TypeError: string indices must be integers, not float
[03:18:16] <kittonian> same basic error zope is throwing
[03:18:16] <nedbat> kittonian: no you don't.
[03:18:21] <kittonian> i literally just ran it
[03:18:24] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[03:18:25] <nedbat> kittonian: not in the command-line program you don't.
[03:18:33] <kittonian> yes from the command line on my mac
[03:18:36] <kittonian> created test.py
[03:18:47] <nedbat> kittonian: can you pastebin the fixed file that fails on the command-line?
[03:18:49] <bjs> integers not float?
[03:18:52] <bjs> that's a Python 2 error message
[03:19:07] <bjs> no wait that's for a string indices, not a tuple
[03:19:19] <kittonian> ahh, you're right. it was defaulting to python2 on my mac
[03:19:26] <kittonian> if I run python3 test.py it works
[03:19:57] <bjs> I recommend not using Python 2, for what it's worth :P
[03:20:03] <kittonian> ok, so that's good to know. without the self stuff it comes back with ('{"otp": "233470"}', {'otp': '233470'})
[03:20:17] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 256 seconds)
[03:20:21] <kittonian> of course. i don't do python dev on my mac. i was just trying to test from the command line
[03:20:37] <nedbat> kittonian: considering the two values you are returning are basically the same information in two different forms, are you sure you need both?
[03:20:55] <kittonian> well that is the million dollar question and the answer is i don't know
[03:20:58] <ham5urg> Is there some class which is like a dict but "with" members as keys? I would like to have something like my_dict.key0 == some_val instead of using a dict with parenthesis.
[03:21:19] <Wulf> ham5urg: dataclasses?
[03:21:28] <Wulf> ham5urg: or simplenamespace if you have to
[03:21:33] <kittonian> the reason I needed to define d in the first place was because I needed to make a dictionary so that I could call <dtml-var otp> from somewhere else
[03:21:33] <nedbat> ham5urg: what dict operations do you need on it?
[03:21:35] <bjs> ham5urg: for some fixed set of keys you mean? that's basically a class.  for arbitrary keys (like dicts)? Nothing builtin
[03:22:13] <kittonian> and I need to return json because in swiftUI I need to decode that json to store the otp code in order to match against it for the user to verify their e-mail address
[03:22:20] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[03:22:39] <nedbat> kittonian: how will the value get from the python script to the swiftUI?
[03:23:11] *** Joins: hackers (~self@user/hackers)
[03:23:19] *** hackers is now known as remote
[03:23:46] <ham5urg> Yes, it's basically a class. I was curious if something builitin exist for that.
[03:24:02] <nedbat> ham5urg: dataclass is the builtin thing that makes that the easiest
[03:24:23] <bjs> ham5urg: typically objects don't have both .attr and ["attr"] at the same time.  There are builtin things like dataclasses to help make "normal" classes
[03:25:39] *** Quits: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[03:25:44] <kittonian> nedbat, you can process the return in swiftui and store the variable in a class
[03:25:51] <kittonian> or an @state private var
[03:26:15] *** Joins: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be)
[03:26:18] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[03:26:31] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[03:26:55] <nedbat> kittonian: i would recommend returning a dict with the values you need, since that seems to work, and a tuple does not.  We don't understand why, but there it is.
[03:27:49] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 240 seconds)
[03:28:11] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[03:29:54] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:30:32] *** Quits: vladoski (~foo@93-36-221-58.ip62.fastwebnet.it) (Quit: Textual IRC Client: www.textualapp.com)
[03:31:38] *** Joins: beli6147 (~Thunderbi@cpe-72-132-224-120.dc.res.rr.com)
[03:31:43] <kittonian> nedbat, the issue is whether or not I'll be able to call the specific variable i need if I return a dict like that
[03:32:14] <nedbat> kittonian: yes, that is something to figure out.  But you thought you could handle two values somehow, so you must have some control over what happens to the returned values
[03:33:13] *** Quits: bcmyers (~bcmyers@cpe-76-92-188-7.kc.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:33:49] *** Quits: DaNeenjah (~jake@adsl-74-230-9-185.hsv.bellsouth.net) (Quit: WeeChat 3.4)
[03:33:51] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[03:34:06] *** Joins: bcmyers (~bcmyers@cpe-76-92-188-7.kc.res.rr.com)
[03:35:06] *** Quits: bcmyers (~bcmyers@cpe-76-92-188-7.kc.res.rr.com) (Client Quit)
[03:35:53] *** Joins: bcmyers (~bcmyers@cpe-76-92-188-7.kc.res.rr.com)
[03:36:13] <kittonian> nedbat, very true
[03:36:37] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[03:36:42] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:36:43] *** Joins: zepolen_ (~zepolen@2a02:1388:2096:52af:5a5:477:a137:ce70)
[03:36:59] *** Quits: bcmyers (~bcmyers@cpe-76-92-188-7.kc.res.rr.com) (Client Quit)
[03:37:03] *** Quits: zepolen (~zepolen@ppp-94-66-223-200.home.otenet.gr) (Ping timeout: 268 seconds)
[03:37:43] *** Noxturminal is now known as NoxTurminal
[03:38:37] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 240 seconds)
[03:38:58] *** Joins: ketiv (~ketiv@92.40.199.121.threembb.co.uk)
[03:39:42] *** Joins: jmd (~user@de.cellform.com)
[03:40:01] *** Joins: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu)
[03:40:45] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[03:44:26] *** Joins: jmd (~user@de.cellform.com)
[03:44:38] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:45:26] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[03:45:51] *** Quits: oatmealraisin (~ryan@2603-7000-3e00-c4a0-a7ed-02af-6607-1304.res6.spectrum.com) (Ping timeout: 250 seconds)
[03:46:01] *** Joins: jmd (~user@de.cellform.com)
[03:46:12] *** Quits: Throgkt (~Throgkt@user/throgkt) (Quit:  )
[03:46:21] *** Joins: ecool (~ecool@user/ecool)
[03:46:28] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[03:47:07] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[03:47:09] *** Joins: Xano (~Xano@2a00:23c4:4204:700:f3bb:8fee:3640:84bd)
[03:47:52] *** Joins: Throgkt (~Throgkt@user/throgkt)
[03:47:57] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[03:48:01] <Xano> Where do I find the documentation on __copy__() and __deepcopy__()? They're mentioned in the copy() and deepcopy() documentation (https://docs.python.org/3/library/copy.html), but there are no details
[03:48:38] *** Joins: mug3n_ (~mugen@gateway/tor-sasl/mugen)
[03:49:22] *** Joins: jmd (~user@de.cellform.com)
[03:49:45] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[03:49:53] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[03:50:19] *** Joins: CoolRick (~CoolRick@d118-75-73-234.col.wideopenwest.com)
[03:50:23] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:50:44] <CoolRick> hello can someone assist me with ```os,join```
[03:51:10] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[03:51:25] *** Joins: fikran (~fikran@user/fikran)
[03:52:04] <Xano> CoolRick, Hiya! Just ask your question, and if someone knows the answer, they'll respond :)
[03:53:08] <CoolRick> I am working in google colab. and working in python
[03:53:09] <CoolRick> I am trying to have a text field as input then call this variable later
[03:53:09] <CoolRick> the input is working and looks something like this
[03:53:10] <CoolRick> Code: base_storage_dir = '/content/drive/My Drive/colab/'  #@param {type: "string"}
[03:53:10] <CoolRick> ______________________________________________________________
[03:53:11] <CoolRick> Enter the output directory
[03:53:11] *** litharge sets mode: +q $a:CoolRick
[03:53:43] *** litharge sets mode: -q $a:CoolRick
[03:55:12] <jinsun> CoolRick: use https://bpa.st/+python, don't paste code here
[03:55:16] <CoolRick> I am working in google colab. and working in python I am trying to have a text field as input then call this variable later
[03:55:17] <CoolRick> the input is working  I then in another script down the page call the variable like below by joining this variable with the path
[03:55:17] <CoolRick> I have tried this
[03:55:18] <CoolRick> output_directory = os.path.join(base_storage_dir, "/outdir")
[03:55:18] <CoolRick> and this
[03:55:19] <CoolRick> output_directory = (os.path.join(base_storage_dir, '/outdir'))
[03:55:19] *** litharge sets mode: +q $a:CoolRick
[03:55:50] *** litharge sets mode: -q $a:CoolRick
[03:56:00] <CoolRick> did that work at all? sorry im new at this chat
[03:56:27] *** Joins: bcmyers (~bcmyers@cpe-76-92-188-7.kc.res.rr.com)
[03:56:52] <CoolRick> I am working in google colab. and working in python. I am trying to have a text field as input then call this variable later
[03:56:53] <CoolRick> I then in another script down the page call the variable like below by joining this variable with the path. But for some reason it is not working. and it is not giving any output to why.
[03:56:53] <CoolRick> https://bpa.st/IQDQ
[03:58:03] <nedbat> Xano: i think that page is the docs for __copy__ and __deepcopy__
[03:58:36] <Xano> nedbat, hah, thanks
[04:00:11] <CoolRick> I have updated it to be a bit easier to read. would anyone be able to help with this? Thanks for looking. https://bpa.st/MLYQ
[04:01:14] *** Quits: Thanatos (~Thanatos@197.210.47.93) (Read error: Connection reset by peer)
[04:01:32] <Xano> I'm trying to write a __copy__() to deep-copy a specific attribute when copying an instance through copy.copy(). It appears __copy__() is responsible for creating the copied object itself such as through __new__(), but I'm not sure how to achieve this using a generic solution that is unaware of __new__() arguments and will work for any class
[04:01:39] *** Joins: Thanatos (~Thanatos@197.210.47.93)
[04:01:54] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[04:02:09] <nedbat> CoolRick: you say it doesn't work.  Can you give more details? What happens?
[04:02:12] <Xano> CoolRick, What does "not working" mean?
[04:02:48] *** Joins: humbertowoody (~humbertow@189.132.138.198)
[04:02:55] <Xano> CoolRick, What kind of output were you expecting?
[04:03:11] <CoolRick> i know.. i hate saying that. it dosent give any output. like the model does not save
[04:03:21] *** Quits: ketiv (~ketiv@92.40.199.121.threembb.co.uk) (Ping timeout: 256 seconds)
[04:03:50] <Xano> To continue my earlier copy issue: is __reduce__() somehow called by copy()?
[04:04:00] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:04:09] *** Quits: rajkosto (~rajkosto@178.220.166.84) (Read error: Connection reset by peer)
[04:04:34] <nedbat> CoolRick: can you add `print(output_directory)` to see what the value is?
[04:05:13] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:05:22] <CoolRick> it is a "tacotron" Machine learning model
[04:05:22] <CoolRick> nedbat That is a good idea. one moment
[04:05:56] <nedbat> Xano: you could try implementing __copy__ and super().__copy__() inside i
[04:05:58] <Xano> CoolRick, One detail: path.join() inserts slashes for you, because they're different depending on the operating system. That means the strings you pass it shouldn't include any.
[04:05:59] <nedbat> inside it
[04:06:04] *** Quits: Macuser (~Macuser@2600:1003:b44f:86ad:f9ed:75cc:5e1c:61d2) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:07:11] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:07:34] <CoolRick> Xano OMG *facepalm* yup that made it /content/drive/My Drive/colab/outdir
[04:07:34] <CoolRick> let me see if it will work now
[04:07:53] *** Quits: henistein (~henistein@2001:8a0:c18a:f601:e0b9:9d3b:2bec:5f70) (Quit: Client closed)
[04:08:01] <CoolRick> it was just /outdir
[04:09:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[04:10:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[04:10:37] <Xano> nedbat, Yes, except what do I do if there's no super().__copy__()? How do I get a plain copy of self if I'm already inside __copy__()?
[04:10:47] <Xano> Does that make sense?
[04:11:11] <Xano> CoolRick, Hah yeah, so that print() statement should have shown duplicate slashes in the combined path. Glad it's been resolved :)
[04:11:21] <CoolRick> That worked, Thanks so much Xano
[04:11:23] <nedbat> Xano: yes, i guess object doesn't have __copy__
[04:11:33] <Yhg1s> there is no 'plain copy', yes.
[04:11:46] *** Joins: fikran (~fikran@user/fikran)
[04:11:58] <Yhg1s> You have to do all the work to create a new instance of your class with the same values, whatever that means for your class.
[04:13:56] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[04:14:30] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:15:57] *** Quits: CoolRick (~CoolRick@d118-75-73-234.col.wideopenwest.com) (Quit: Client closed)
[04:18:44] *** Joins: Macuser (~Macuser@202.sub-174-206-65.myvzw.com)
[04:19:24] <Xano> Yhg1s, Thanks for clarifying that. I found out that __reduce__() is called by copy.copy() as well, but so far I haven't found this in the docs
[04:19:47] <Xano> And object.__reduce__() is a thing
[04:20:02] *** Quits: Payam (~Payam@c83-250-236-236.bredband.tele2.se) (Ping timeout: 260 seconds)
[04:20:17] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[04:20:22] *** Joins: jmd (~user@de.cellform.com)
[04:20:59] <ham5urg> Is there a way to force csv.DictReader to expect several columns and to raise an exception if one is missing?
[04:21:04] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[04:22:11] <yitz> >>> help(str.__reduce__)   =>  Helper for pickle.       What?
[04:22:12] <Yhg1s> Xano: the copy module will use the pickle protocol if the object doesn't have __copy__, yes. (I don't recommend implementing the pickle protocol, since it's not a good idea by any measure, but I also recommend not copying things, so...)
[04:22:40] <yitz> ham5urg: assert all(c in row[0] for c in ...)
[04:23:20] <Yhg1s> Docstrings for individual methods aren't that helpful. The various methods pickling/unpickling can call are described in the pickle module docs. (I don't recommend bothering with it.)
[04:24:06] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 245 seconds)
[04:24:16] <yitz> I opened the data model docs to find __reduce__ ... but didn't see it there. I wouldn't have known to check pickle for a str method
[04:24:42] *** Quits: grimvar (~grimvar@i5C75F63E.versanet.de) (Ping timeout: 260 seconds)
[04:24:51] <Xano> Yhg1s, Gotcha. Yeah this is all to pickle a large complex graph anyway. *chuckles maniacally*
[04:25:17] <Yhg1s> yitz: https://docs.python.org/3/search.html?q=__reduce__
[04:26:00] *** Joins: ircuser (~ircuser@40.117.38.45)
[04:26:09] *** Joins: grimvar (~grimvar@i5C75F49B.versanet.de)
[04:26:20] <ircuser> hi
[04:26:42] <ircuser> Can anyone help me integrate a small python code?
[04:26:58] <ircuser> I have an api that outputs a result(true/false)
[04:27:22] <yitz> ircuser: if you have a question, ask it. Preferably in the first message and preferably in one or two lines
[04:27:24] <ircuser> i want to read content from a file ,change the variable and if true output it in a .txt file
[04:27:32] <ircuser> Sorry!
[04:28:15] *** Joins: jmd (~user@de.cellform.com)
[04:28:51] *** Quits: sudomannn (~sudomann@89.46.62.128) (Ping timeout: 256 seconds)
[04:29:29] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[04:29:36] <ircuser> https://bpa.st/OFBA
[04:29:43] *** Joins: sudomannn (~sudomann@2601:155:8402:4960:f4b6:2f5c:9895:3a33)
[04:30:30] <ircuser> Anyone can guide me on what to look? i only know little php.
[04:30:37] *** Quits: maggotbrain (~maggotbra@c-73-225-163-217.hsd1.wa.comcast.net) (Quit: Gone to Croatan...)
[04:30:40] <Yhg1s> ircuser: I would recommend using the requests package, which can handle JSON data for you transparently, but if you insist on using urllib2, you probably want to use the json module to decode the JSON in response_body.
[04:30:57] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 240 seconds)
[04:32:08] <ircuser> @Yhg1s  this is the api example itself,i will look on the requests package,however i have no clue on how to write the code to read the contents from a file
[04:32:53] *** Joins: Wulf (~Wulf@user/wulf)
[04:32:56] <Yhg1s> ircuser: ok, that question doesn't seem related to the code you pasted. Are you looking for help to learn Python, or do you want someone to write the code for you?
[04:33:27] <ircuser> @Yhg1s  i'm looking to code it myself,
[04:33:50] *** Joins: noona (~noona@194.36.25.26)
[04:34:16] <ircuser> In php i would have used $variable ="file_get_contents"
[04:34:21] <Yhg1s> ircuser: okay, well, docs.python.org/tutorial is a short tutorial, but it may be too short depending on how much experience you have.
[04:34:24] <ircuser> What is the equivalent in python?
[04:34:52] <jinsun> ircuser: see https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files
[04:35:28] <ircuser> Though this is not a good answer,its i have lots of stress and things to take care and a python course is like being blessed with a  first country passport
[04:35:41] <ircuser> Can't have the luxury to spend time learning right now
[04:35:47] <ircuser> I am taking a look at the link you gave
[04:35:54] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[04:36:19] <Yhg1s> ircuser: well, you said you wanted to write it yourself, it's going to be tough to do that without learning Python.
[04:36:37] *** Quits: martums (~martums@user/martums) (Read error: Connection reset by peer)
[04:36:50] <ircuser> @Yhg1s  i know bro,just thought i could do it easily :P
[04:37:05] *** Joins: jmd (~user@de.cellform.com)
[04:37:40] *** Joins: martums (~martums@user/martums)
[04:37:51] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[04:38:01] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[04:38:29] *** Joins: oafish (~oafish@2a05:f480:2000:1325::)
[04:38:30] <ircuser> Yhg1s i think this is what im looking for https://bpa.st/LS7A
[04:38:39] <ircuser> for reading contents of a file,right?
[04:38:42] <oafish> > Argument 1 to "maketrans" of "str" has incompatible type "Dict[str, str]"; expected "Union[Dict[int, int], Dict[str, int], Dict[Union[str, int], int]]"
[04:38:47] <oafish> what in the goodness
[04:39:04] *** Quits: gothicserpent (~gothicser@2604:a880:2:d0::2204:b001) (Quit: WeeChat 3.2)
[04:39:09] <oafish> this makes it sound like {str:str} is fine https://docs.python.org/3.3/library/stdtypes.html?highlight=maketrans#str.maketrans
[04:39:33] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[04:39:40] *** Joins: gothicserpent (~gothicser@2604:a880:2:d0::2204:b001)
[04:40:10] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[04:40:14] *** Joins: TechTheory (~lwait@2600:8800:7c03:c400:dd92:3746:a186:d8b5)
[04:40:36] *** Joins: OsKaR31415 (~OsKaR3141@pop.92-184-117-63.mobile.abo.orange.fr)
[04:40:45] <TechTheory> hello I am new here
[04:40:48] <Yhg1s> oafish: it is, yes. It sounds like the type hint for str.maketrans is wrong.
[04:41:05] <oafish> Yhg1s: ok! is there a way I can PR a fix for this? I assume cpython somewhere?
[04:41:06] <Yhg1s> ircuser: well, it's not particularly common to call readline manually like that, but sure.
[04:41:15] <Yhg1s> oafish: there are no type hints in CPython, no.
[04:41:29] <oafish> interesting. does mypy have its own?
[04:41:29] <Yhg1s> oafish: it'll be in typeshed or in whatever type checker you're using.
[04:41:33] <oafish> ah!
[04:41:40] <oafish> thanks
[04:42:20] <oafish> https://docs.python.org/3.3/library/stdtypes.html?highlight=maketrans#str.maketrans
[04:42:24] <oafish> err
[04:42:26] <oafish> https://github.com/python/typeshed/blob/1ec2387da13a9066b8ee9d1a664dfeac1dccf0ea/stdlib/builtins.pyi#L424
[04:42:29] <oafish> i assume it's that
[04:42:45] <Yhg1s> oafish: I would check, not assume.
[04:43:06] <ircuser> Yhg1s  so i have &email=email@example.org ,how can i change it to variable ?
[04:43:13] <ircuser> @yhg
[04:43:16] <oafish> ah there's actually a few maketranses around
[04:43:30] <oafish> how very queer ~
[04:43:34] <oafish> anyway. thanks!
[04:43:41] <ircuser> Yhg1s like $email="%%dynamic data pulled from txt"
[04:43:50] <Yhg1s> ircuser: you would use string formatting. Really, it would be a lot faster if you just read docs.python.org/tutorial.
[04:44:20] <TechTheory> what the best to way to learn ai in python
[04:45:33] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[04:45:44] *** Joins: jmd (~user@de.cellform.com)
[04:47:25] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[04:47:49] *** Joins: jmd (~user@de.cellform.com)
[04:49:09] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[04:49:38] *** Joins: jmd (~user@de.cellform.com)
[04:50:21] <grym> TechTheory: https://cs231n.github.io/  is a nice primer
[04:50:49] <grym> with a focus on image processing neural networks
[04:51:04] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[04:52:11] <ircuser>  >>> f = open('value.txt',/n)
[04:52:12] <ircuser>     ^^
[04:52:12] <ircuser> SyntaxError: invalid syntax
[04:52:27] *** Joins: jmd (~user@de.cellform.com)
[04:52:36] *** Joins: frost (~frost@user/frost)
[04:53:06] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[04:53:13] <TechTheory> Thank you
[04:54:20] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[04:54:29] *** Joins: jmd (~user@de.cellform.com)
[04:54:32] <nedbat> ircuser: what was /n meant to be there?
[04:55:11] <ircuser> nedbat to start new line
[04:55:25] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[04:55:38] <nedbat> ircuser: start a new line where?
[04:55:46] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[04:56:10] <ircuser> :D  bro im clueless,trying to code something
[04:56:19] <ircuser> Should i use ''W'?
[04:57:29] <TechTheory> do you anything about programming or computers
[04:57:33] *** Joins: jmd (~user@de.cellform.com)
[04:58:12] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[04:59:31] <ircuser> I suppose i need to spend time reading docs before trying to get my hands on coding
[04:59:45] <ircuser> Are you Supposed to use >>>
[04:59:54] <ircuser> or these are just for comment coding on websites
[05:00:42] <InPhase> ircuser: That ">>>" is the input prompt for the interactive use of Python.
[05:00:48] *** Joins: oneadvent (~oneadvent@068-116-241-031.res.spectrum.com)
[05:01:36] *** Joins: audiobirb (~audio@user/audio)
[05:02:02] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[05:02:08] <InPhase> ircuser: It's certainly worth finding a good tutorial to go through to get your feet wet with using Python, at least until you get to the point where you can solve your first starter problem.  It's helpful to be comfortable with the basic syntax first.  Then when you get to doing specific things like "open", you'll want to read the document page for each function you use for the first time.
[05:02:13] *** Joins: driib27 (~driib@185.65.135.252)
[05:02:39] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[05:03:06] <InPhase> ircuser: It's a good idea to do a tutorial or book interactively, meaning to enter and run examples yourself, and play around with modifying them a little bit as you go.
[05:03:28] <ircuser> InPhase i see.Thanks! just troubles on the pandemic,i will try to learn soon
[05:03:45] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[05:03:57] *** Quits: driib2 (~driib@185.65.135.247) (Ping timeout: 240 seconds)
[05:03:57] *** driib27 is now known as driib2
[05:04:22] <hrob> yeah dont use >>> :D    thankfully its not a valid syntax... but maybe in python 4.0 lol
[05:04:46] <hrob> python is bloating I feel :S
[05:05:10] <grym> hrob: about 20 years ago, yes :P
[05:05:30] <grym> one man's bloat is another man's "batteries included!"
[05:05:35] <nedbat> hrob: what do you see as bloat?
[05:07:37] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[05:07:42] *** Quits: {4144} (~{4144}@46.56.64.187) (Ping timeout: 268 seconds)
[05:08:01] *** Quits: oneadvent (~oneadvent@068-116-241-031.res.spectrum.com) (Quit: leaving)
[05:09:43] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[05:09:57] <ircuser> :D  lol
[05:13:01] <ircuser> https://bpa.st/WFYQ
[05:13:20] <ircuser> Only the first line is printed,others are ignored
[05:13:52] <hrob> I suppose the constant new syntax that Im discovering with new versions :S    f"" instead of .format ... etc,  type annotations which I like but also hate lol
[05:13:56] *** Parts: TechTheory (~lwait@2600:8800:7c03:c400:dd92:3746:a186:d8b5) ()
[05:14:09] <hrob> it seems like more syntax is coming in than going out
[05:14:40] <grym> f-strings aren't exactly "new" any more
[05:14:56] <grym> they're in kindergarden now!
[05:14:56] <hrob> walrus... although like it, but feel sorry for newcomers to the language
[05:16:03] <nedbat> hrob: f-strings are the best
[05:16:05] <hrob> I suppose I cam in to the language in 2.6 or so, and was quickly readable and implications understandable.
[05:16:10] <mefistofeles> are there some formal metrics to estiamte "bloat"?
[05:16:18] <mefistofeles> in programming languages, that is
[05:16:24] <mefistofeles> *estimate
[05:16:40] *** Joins: frost (~frost@user/frost)
[05:16:43] <grym> mefistofeles: i mean, i can put on a tie and then tell you some numnbers
[05:16:44] <grym> if you like
[05:17:08] <mefistofeles> grym: formal as in mathematical formality
[05:17:09] <mefistofeles> :P
[05:17:33] <grym> mefistofeles: let's compute the hamming distance between symbols!
[05:17:46] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[05:18:18] <hrob> nedbat yeah they are great :)    but still,  it's pretty dynamic I feel python
[05:19:09] <hrob> would love to see a graph of new syntax vs.  python versions... feel like its been growing compound, but maybe Im wrong
[05:20:38] <grym> grepping the what's new posts shouldn't be too hard
[05:20:47] <hrob> walrus encourages non-explicitness in statements, bothered me... but see now more and more of if <some list>:     or   if <some string>:   a kind of antipattern in old days
[05:21:05] <oafish> Yhg1s: update
[05:21:50] *** Joins: {4144} (~{4144}@46.56.66.225)
[05:22:08] <oafish> Yhg1s: i was doing `def __init__(self, table: Optional[Dict[str, str]]): transtable: Optional[Dict[int, int]] = None; if table is not None: transtable = str.maketrans(table)`
[05:22:09] <grym> isn't walrus _more_ explicit?
[05:22:16] <grym> = and := now disambiguate intent
[05:22:44] <hrob> if :=<some list>: do something?
[05:23:09] <oafish> Yhg1s: maketrans is dict[union[str, int], _T] (or similar) so typehinting it to be dict[int, int] as a return type make it want dict[..., int]
[05:23:09] *** Quits: OsKaR31415 (~OsKaR3141@pop.92-184-117-63.mobile.abo.orange.fr) (Quit: WeeChat 3.4)
[05:23:10] <hrob> sorry if  x:=<some iterable>: do something
[05:23:34] <grym> hrob: like re.match?
[05:23:41] <grym> (that's the canonical use case, afaik)
[05:23:55] <grym> or re.search, whichever one isn't weird
[05:24:06] <hrob> well, I can read those
[05:24:14] <hrob> as a baby pythoner
[05:24:57] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[05:24:59] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[05:25:04] <hrob> when did the  def foo(*, bla, boo, gaga)  come in?
[05:25:18] <oafish> Yhg1s: here's what i mean ... https://bpa.st/DARKODRU5JEZ4CRPXECZSX6QVM
[05:25:30] <hrob> again not obvious
[05:25:51] <oafish> line 6 kicks up a warning but line 9 doesn't for the now-obvious reason :)
[05:26:57] <hrob> def foo(*, bla, boo, gaga)   is maybe my best case in point ;)
[05:29:17] *** Quits: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[05:29:19] <hrob> a lot of syntactic sugar basically I feel, not bad I suppose, but makes it hard to keep up
[05:29:53] *** Joins: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be)
[05:30:08] <hrob> and much of it not that readable
[05:30:35] <hrob> + encourages what I once felt was an antipattern
[05:32:11] *** Quits: bcmyers (~bcmyers@cpe-76-92-188-7.kc.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:32:32] *** Quits: esv (~esv@74.124.178.154) (Quit: Leaving)
[05:35:56] *** Joins: chowmeined (~chowmeine@user/chowmeined)
[05:36:17] *** Quits: foxbox (~cammy@user/cammy) (Ping timeout: 240 seconds)
[05:36:30] *** Joins: Enitin (~Enitin@82.102.22.84)
[05:38:33] *** Quits: saunders (~nicholas@172.103.152.184) (Ping timeout: 256 seconds)
[05:39:53] *** Joins: zmt01 (~zmt00@user/zmt00)
[05:40:25] *** Quits: twobitsprite (~twobitspr@195.181.171.237) (Read error: Connection reset by peer)
[05:41:32] *** Parts: akk (~akk@174-28-122-47.albq.qwest.net) (+++)
[05:42:17] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:42:26] <yamchah2> Is there some kind of resource which lists best practices/the modern way to do things? Like using pathlib over strings or fstrings over .format() etc?
[05:42:57] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: leaving)
[05:42:57] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 240 seconds)
[05:42:57] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[05:43:14] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:43:26] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[05:45:59] <hrob> yamchah2  best I know is https://www.python.org/dev/peps/pep-0008/   but is way before fstrings I think
[05:47:15] <hrob> yamchah2  you can pip install flake8   and run it on your src dir
[05:48:07] <yamchah2> hrob i usually use vs code and black, not sure which linter vs code uses but it probably catches these right?
[05:48:46] *** Joins: bcmyers (~bcmyers@cpe-76-92-188-7.kc.res.rr.com)
[05:49:11] <hrob> yamchah2  don't think they do the same thing in my experience.  I run both
[05:49:34] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Quit: Leaving)
[05:49:35] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:49:41] *** Quits: bcmyers (~bcmyers@cpe-76-92-188-7.kc.res.rr.com) (Client Quit)
[05:50:30] <yamchah2> oh i had flake8 as my linter already
[05:50:41] <hrob> flake8 gives more technical instructions I feel and identifies unused / unnecessary vars for example
[05:51:04] <hrob> black is pretty minimal, a code style formatter in my book
[05:51:28] *** Quits: ircuser (~ircuser@40.117.38.45) (Quit: Client closed)
[05:52:09] <hrob> https://github.com/psf/black   black says so :)
[05:53:18] <yamchah2> yeah i run black after. sometimes it does weird stuff for line lengths but otherwise i like what it does
[05:53:38] *** Quits: Macuser (~Macuser@202.sub-174-206-65.myvzw.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:54:01] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:ec59:ebbb:92c6:2f4)
[05:56:00] *** Quits: a0z1 (~a0z1@194.36.25.30) (Quit: Leaving)
[05:56:41] <hrob> yeah black defaults to 88 chars on comments and line lengths I think, but can prob config.  But to get working with other tools like docformatter need add --wrap-summaries=88 --wrap-descriptions=88  ... and hm isort need a config also
[05:57:10] <hrob> too many tools...
[05:58:14] <hrob> forget about isort in my book... flake8 + black pretty good.  With type checking I would add mypy
[05:58:19] <causasui> 5
[05:58:20] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[05:58:22] <causasui> oops
[05:58:43] *** Joins: black_13 (~jjosb@2600:1700:1100:61c0:c9b8:d709:9ae6:53d8)
[05:58:57] *** Quits: qpdb (~qpdb@user/qpdb) (Ping timeout: 256 seconds)
[05:59:37] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 240 seconds)
[05:59:38] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:00:03] *** brabrax_ is now known as brabrax
[06:00:16] *** Joins: bcmyers (~bcmyers@cpe-76-92-188-7.kc.res.rr.com)
[06:01:58] *** Joins: foxbox (~cammy@user/cammy)
[06:04:11] *** Joins: MetricT (~MetricT@075-131-120-170.res.spectrum.com)
[06:04:30] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[06:04:44] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[06:08:18] *** Quits: mug3n_ (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[06:08:31] *** Quits: noona (~noona@194.36.25.26) (Quit: noona)
[06:09:36] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[06:09:43] *** Quits: Thanatos (~Thanatos@197.210.47.93) (Ping timeout: 256 seconds)
[06:10:53] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[06:13:01] *** Joins: qpdb (~qpdb@user/qpdb)
[06:13:31] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Client Quit)
[06:16:31] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[06:16:45] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[06:17:19] *** Joins: dob1_ (~dob1@user/dob1)
[06:17:47] *** Joins: nattiestnate (~nate@114.122.105.227)
[06:18:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[06:19:49] *** Quits: dob1 (~dob1@user/dob1) (Ping timeout: 240 seconds)
[06:21:08] *** Joins: fikran (~fikran@user/fikran)
[06:22:25] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:23:05] *** Joins: Mechanismus (~LabMonkey@206.255.106.67)
[06:24:34] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:25:11] *** Joins: nomic (~nomic@185.198.243.18)
[06:25:29] *** Joins: afidegnum (~user@102.176.94.184)
[06:25:37] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:26:45] *** Joins: xaltsc (~xaltsc@user/xaltsc)
[06:27:46] <afidegnum> hi, i'm trying to recursively print the parent/child of a nested dictionary record, but i'm failing, can you please give a hand ? https://code.labstack.com/1mrVrXTI
[06:28:07] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[06:30:53] *** Quits: infernix (nix@2a02:22a0:bbb1:d500::2) (Quit: ZNC - http://znc.sourceforge.net)
[06:32:23] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 256 seconds)
[06:32:40] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[06:33:14] <black_13> afidegnum, i have actually seen example code for this google it on python recipes
[06:33:24] <black_13> afidegnum, but you will have to do some work
[06:33:29] <afidegnum> ok,
[06:33:34] *** Joins: Terexen (~terexen@user/terexen)
[06:33:47] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[06:34:30] <black_13> look at stackoverflow
[06:35:44] <afidegnum> i've seen handful of examples on SO but it's not matching the needed output
[06:35:56] <black_13> then get it where it is
[06:36:08] <black_13> you are going to have to do some coding
[06:36:55] <black_13> nedbat, is there a channel for deep learning
[06:37:09] *** Joins: Vonter (~Vonter@user/vonter)
[06:37:09] *** Joins: Warped (~Warped@user/warped)
[06:38:52] <grym> ##machinelearning-general perhaps
[06:38:58] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 268 seconds)
[06:40:37] *** Joins: millido (~millido@84.210.150.128)
[06:40:50] *** Quits: yolk (~yolk@ec2-18-220-87-120.us-east-2.compute.amazonaws.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[06:42:11] *** Joins: yolk (~yolk@2600:1f16:f4a:2100:77f5:a0ec:35f:147b)
[06:43:57] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[06:44:27] <aphysically> iirc I ran into typing problems with maketrans before and it ended with finding a thread where Guido called maketrans a dinosaur :D
[06:45:14] <aphysically> found it https://github.com/python/mypy/issues/4374#issuecomment-352164419
[06:45:37] <aphysically> cc oafish
[06:49:32] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[06:51:48] *** Quits: ideopathic (~ideopathi@2600:1702:8b0:a500:c44:b005:6ec6:f8a8) (Quit: Textual IRC Client: www.textualapp.com)
[06:52:14] *** Quits: mat001 (~mat001@c-69-181-158-251.hsd1.ca.comcast.net) ()
[06:52:15] *** Joins: saunders (~nicholas@172.103.152.184)
[06:52:23] *** Quits: roman_ (~roman@mob-194-230-147-129.cgn.sunrise.net) (Ping timeout: 250 seconds)
[06:56:03] *** Joins: ideopathic (~ideopathi@2600:1702:8b0:a500:d981:d23c:67fb:1d7c)
[06:57:44] *** Joins: buzzard (~quassel@23.108.92.179)
[06:58:42] *** Quits: humbertowoody (~humbertow@189.132.138.198) (Ping timeout: 268 seconds)
[06:59:53] *** Joins: oncall-pokemon (uid134758@id-134758.uxbridge.irccloud.com)
[07:01:51] *** Quits: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[07:02:25] *** Quits: binary01 (~binary01@cpe-74-71-15-170.nyc.res.rr.com) (Ping timeout: 256 seconds)
[07:02:41] *** Joins: parv (~quass@user/parv)
[07:02:59] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[07:02:59] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:02:59] *** finn_elija is now known as FinnElija
[07:04:45] <oncall-pokemon> Hi I am a bit stuck. I have a class and in that class I have a class variable to be shared around the different instances. I have getter and setter functions to set attributes created in the constructor of the class per instance. The issue is, when I run though each instance and try to run a setter function to do a computation. If I do it in a list comprehension like `[obj.set_number() for path, obj in FO.instances.items()]`
[07:04:45] <oncall-pokemon> it works fine. But if I try to parallelize the computation using Joblib parralel/delayed. Then it just doesn't seem to update the specific instance with the set_number function. It's like the set_number never ran. Any ideas on why the list comprehension works fine but pulling obj.set_number to a secondary function just doesn't work at all for setting the variable?
[07:06:11] *** Quits: gjvc (~gjvc@29.68.246.35.bc.googleusercontent.com) (Quit: leaving)
[07:08:58] *** Quits: theo (~theo@user/theo) (Ping timeout: 260 seconds)
[07:10:03] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:11:41] *** Quits: Forsaken87 (~quassel@ip-109-43-114-36.web.vodafone.de) (Remote host closed the connection)
[07:13:30] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 268 seconds)
[07:14:55] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[07:17:50] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:d06f:74a7:1060:5672)
[07:19:32] *** Joins: adeliktas8 (~adeliktas@i59F4A2E7.versanet.de)
[07:19:38] <oncall-pokemon> is this the unregistered channel?
[07:19:56] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[07:20:00] <leduyquang753> No.
[07:20:19] <oncall-pokemon> oh ok i see. channel mode up above says it was.
[07:21:17] *** Quits: adeliktas (~adeliktas@i59F52E80.versanet.de) (Ping timeout: 240 seconds)
[07:21:17] *** adeliktas8 is now known as adeliktas
[07:23:03] *** Joins: upsala (~zcb@185.209.196.169)
[07:23:15] *** Joins: infernix (nix@2a02:22a0:bbb1:d500::2)
[07:26:22] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[07:26:27] *** Quits: Xano (~Xano@2a00:23c4:4204:700:f3bb:8fee:3640:84bd) (Ping timeout: 268 seconds)
[07:26:49] *** Joins: Deana (~sysadmin@185.46.198.220)
[07:28:09] <oncall-pokemon> The issue i've found is anytime I use `Parallel(n_jobs=2)(delayed(runner)(obj) for _, obj in FO.instances.items())` it kinda is unable to do the work and save the data.
[07:28:18] *** Quits: zepolen_ (~zepolen@2a02:1388:2096:52af:5a5:477:a137:ce70) (Ping timeout: 268 seconds)
[07:28:28] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Read error: Connection reset by peer)
[07:28:31] *** Joins: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il)
[07:29:16] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[07:31:03] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[07:31:37] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[07:35:01] <oncall-pokemon> Issue was process based multiprocessing vs threading. bloody hell
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:59] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:37:11] *** Quits: moog (~moog@107.126.53.93) (Remote host closed the connection)
[07:39:33] *** Joins: bytehackr (~Sandipan@43.252.250.123)
[07:41:17] *** Quits: Jong (~Jong@2620:10d:c090:400::5:da53) (Ping timeout: 240 seconds)
[07:42:37] *** Quits: ckdCreations (~ckdCreati@2607:fb90:b27f:ff2:dc32:a7c3:ccb:5ae6) (Ping timeout: 240 seconds)
[07:44:22] *** Joins: XV8 (~XV8@2601:5cb:c001:50:3d6e:cfa4:63ac:b4be)
[07:44:22] *** Joins: ckdCreations (~ckdCreati@147.55.133.142)
[07:47:22] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[07:49:10] *** Joins: ham5urg_ (~ham5urg@2a04:4540:6807:7800:dfdf:3e4e:1de5:1e03)
[07:49:16] *** Quits: XV8 (~XV8@2601:5cb:c001:50:3d6e:cfa4:63ac:b4be) (Ping timeout: 268 seconds)
[07:49:33] <foo> Is either of these more "pythonic" ? https://bpa.st/YEAQ -> It's 2 lines of code, trying to figure out a standard here?
[07:49:41] <foo> Or if there is any best practices
[07:50:59] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[07:51:17] <skullY> I would typically use option b, or now = user.token_created = datetime.datetime.now(pytz.utc) if I really needed two variables for some reason
[07:51:32] *** Quits: nyah (~nyah@94.6.71.219) (Remote host closed the connection)
[07:51:44] *** Quits: ham5urg (~ham5urg@2a04:4540:680b:6b00:dd18:ef75:2fc9:9d1d) (Ping timeout: 268 seconds)
[07:52:36] <foo> skullY: oh, I just looked at the next line in this code review... he actually does use now again. Ha. He has this: token_created = now.strftime("%m%d%Y%H%M%S")
[07:53:34] <foo> skullY: I added all the code: https://bpa.st/HTDQ -> I feel like line 21 and 23 can be merged. This specific dev does this often,
[07:53:37] * foo cleans it up in pastebin
[07:54:55] <foo> any other clean up anyone can spot? https://bpa.st/4XXQ
[07:55:14] <afidegnum> hi, any insight about my question?
[07:55:59] <skullY> finding the right balance between understandability and avoiding unnecessary variables can be a diminishing returns situation
[07:56:48] <parv> foo: Only thing: is "now" really needed, as the other variable is not used "too often", nor is its spelling too long?
[07:56:56] <foo> skullY: I do appreciate that. I am open to the fact that I'm obsessing here.
[07:56:56] <skullY> while I'd combine line 21 and 23 too, I'm wary of playing code golf too often :)
[07:57:14] <foo> skullY: How do you define "code gulf" ? Enlighten me, please. I might be a victim of the game. :)
[07:57:52] <skullY> golf is a game where the lower score is better, when you play code golf you're trying to reduce the amount of code you write as much as possible
[07:57:58] *** Joins: esv (~esv@74.124.178.154)
[07:58:27] <skullY> nothing wrong with it in general, but it can be a big time sink
[07:58:33] <foo> skullY: and why are you "wary of playing" ? Probably the diminishing returns of it?
[07:58:34] <parv> I would say point is to use minimum of characters
[07:58:46] <skullY> exactly, the diminishing returns
[07:58:49] <foo> skullY: yes, I spend a ton of time vocalizing stuff like this. And it's probably not the best use of my time.
[07:59:17] <foo> skullY: ... but I feel like tidy is pythonic, in the name of readability. But I get your point, there is diminishing returns
[07:59:57] *** Quits: black_13 (~jjosb@2600:1700:1100:61c0:c9b8:d709:9ae6:53d8) (Ping timeout: 240 seconds)
[08:00:12] *** Quits: nurupo (~nurupo.ga@user/nurupo) (Quit: nurupo.ga)
[08:00:43] *** Joins: nurupo (~nurupo.ga@user/nurupo)
[08:00:52] <skullY> tidy is definitely pythonic
[08:01:02] <skullY> and isn't a nice short name like now tidy? :)
[08:01:29] <foo> skullY: :) thank you.
[08:01:47] <skullY> that's why I like the multiple assignment pattern, assign two variables on the same line
[08:01:58] <parv> .oO( Long is shorter than short )
[08:02:06] <foo> As an aside, this is the full code: using this to create "magic links" that we create and expire that lasts for 24 hours: https://bpa.st/FPNQ - this is the first time we've used this in a tiny project. I believe this is the way to do it, using Flask. Open to any other thoughts on this, though.
[08:02:11] <foo> skullY: I do like that.
[08:05:15] *** Joins: lalitmee_ (~lalitmee@180.94.33.76)
[08:06:27] *** Quits: junktext__ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 256 seconds)
[08:07:49] *** Quits: saunders (~nicholas@172.103.152.184) (Ping timeout: 240 seconds)
[08:13:02] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:16:15] *** Joins: goldcrest (goldcrest@gateway/vpn/airvpn/goldcrest)
[08:16:52] <goldcrest> Does anyone know why Stack Overflow is so mean? I'm a new programmer and I've posted a few questions on there but they seem to get downvoted for no reason. Then I lose the ability to post because people have downvoted me.
[08:20:09] <aphysically> the reason objected oriented programmers are mean on stack exchange is because they think every question is for a Class
[08:20:15] <InPhase> goldcrest: If the questions themselves are downvoted it is probably because the questions don't meet the expected format for what sorts of questions are desired on the site.  They tend to be particular about question type.
[08:20:38] * aphysically got their bad joke out of the way and will see themselves out
[08:20:45] <afidegnum> i'm trying to access, key, values from a nested dictionary, can you please give a hand? this doesn't work properly https://code.labstack.com/1mrVrXTI
[08:20:59] <InPhase> goldcrest: I'd suggest reading a set of other beginner questions which got up-voted, and look at what's different about them.
[08:21:17] *** Quits: cthulchu (~Cthulchu@184-090-172-137.res.spectrum.com) (Ping timeout: 240 seconds)
[08:21:37] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[08:22:00] <goldcrest> Ok will do :) thanks
[08:22:06] <goldcrest> Haha nice @aphysically
[08:22:32] *** Joins: imp_ (~imp@192-141-191-236.alternativaip.net.br)
[08:22:53] *** Joins: drupin (uid7837@id-7837.uxbridge.irccloud.com)
[08:23:49] *** Quits: imp (~imp@192-141-191-231.alternativaip.net.br) (Ping timeout: 240 seconds)
[08:23:49] *** imp_ is now known as imp
[08:24:25] <drupin> hi there how can i get the python 3 syntax for this code  https://github.com/xenomorph1096/hotstar-vlc/blob/master/go.py
[08:25:33] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca) (Quit: Client closed)
[08:25:54] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca)
[08:26:53] <ssbr> drupin: you can try automatic conversion. It'll probably work alright.
[08:27:00] <ssbr> (e.g. futurize)
[08:27:14] <ssbr> I'd do it by hand personally, that isn't a lot of code.
[08:27:22] <drupin> 2to3 i tried its not working
[08:27:59] *** Quits: julia (~quassel@user/julia) (Ping timeout: 256 seconds)
[08:28:02] *** Quits: sreve (~quassel@p4ff44d81.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[08:28:05] <aphysically> there's still a few linux ecosystem things that never made the switch to python 3
[08:28:16] <aphysically> they just got dropped from distros though
[08:28:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[08:28:27] <drupin> i am not a python guy so do not know much about the  new syntax
[08:28:40] *** Joins: sreve (~quassel@p4ff44cad.dip0.t-ipconnect.de)
[08:29:10] <aphysically> o looks like it's using urllib2
[08:29:24] <aphysically> probably you want to convert it to using requests
[08:30:00] <afidegnum> any insight ?
[08:30:07] <drupin> yes i tried that
[08:30:29] *** Joins: fikran (~fikran@user/fikran)
[08:30:34] <phy1729> honestly looks like it could be a shell script with curl and jq
[08:31:23] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[08:32:20] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Remote host closed the connection)
[08:32:49] <phy1729> foo() { vlc "$(curl "http://getcdn.hotstar.com/AVS/besc?action=GetCDN&asJson=Y&channel=TABLET&id=${1##*/}&type=VOD" | jq .resultObj.src)"; }
[08:34:17] *** Quits: goldcrest (goldcrest@gateway/vpn/airvpn/goldcrest) (Quit: Leaving)
[08:35:03] <drupin> ok
[08:35:04] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[08:36:01] <foo> phy1729: I am more than that!
[08:36:30] <InPhase> foo: Go back to the bar.
[08:36:47] *** Joins: \mSg (mSg@user/msg/x-0285936)
[08:36:48] <foo> InPhase: Yes 'em. /me grabs a beer from the fridge, doesn't need to be told twice
[08:36:54] <foo> Enter, bar.
[08:37:17] *** Quits: buzzard (~quassel@23.108.92.179) (Ping timeout: 240 seconds)
[08:42:34] *** Joins: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[08:43:09] *** Joins: Thanatos (~Thanatos@197.210.47.93)
[08:45:42] *** Quits: tkazi (~tkazi@user/tkazi) (Quit: Disconnected)
[08:46:01] *** Joins: tkazi (~tkazi@user/tkazi)
[08:46:02] *** Quits: tkazi (~tkazi@user/tkazi) (Remote host closed the connection)
[08:46:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[08:48:45] *** Joins: tkazi (~tkazi@user/tkazi)
[08:50:57] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 240 seconds)
[08:51:48] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:ed35:ef78:1ded:9eb5) (Read error: Connection reset by peer)
[08:52:32] *** Quits: Bombo (atom@user/bombo) (Ping timeout: 240 seconds)
[08:52:32] *** Joins: Rum (~bourbon@user/rum)
[09:01:50] *** Joins: maxtim (~maxtim__@c-71-228-128-153.hsd1.ga.comcast.net)
[09:01:57] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[09:02:39] <maxtim> help me out here. What is it called when you need a full path, not like shortcuts (i.e. /home/user/somedir instead of ~/somedir)
[09:02:56] <maxtim> I wanna say implicit, but I don't think that's right
[09:02:59] <daddy> absolute path
[09:03:05] <maxtim> that's the one!
[09:03:08] <maxtim> thanks daddy
[09:03:13] <daddy> and technically ~/somedir *is* an absolute path, because it expands to the absolute path
[09:03:19] <daddy> what you're probably thinking is a "relative" path.
[09:03:28] <daddy> which is, something relative to the working directory
[09:06:24] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[09:06:40] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[09:10:16] *** Joins: humbertowoody (~humbertow@189.132.138.198)
[09:12:17] *** Quits: ideopathic (~ideopathi@2600:1702:8b0:a500:d981:d23c:67fb:1d7c) (Ping timeout: 240 seconds)
[09:12:29] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:13:21] *** Joins: kdc (~kdc@196.211.197.159)
[09:14:25] *** Quits: Rum (~bourbon@user/rum) (Quit: WeeChat 3.4)
[09:18:05] *** Joins: ideopathic (~ideopathi@2600:1702:8b0:a500:d981:d23c:67fb:1d7c)
[09:18:11] *** Joins: manti7 (~manti7@176.10.104.94)
[09:18:53] *** Quits: p-i- (~Ohmu@2403:6200:8978:eb29:85a4:2121:8f52:ab6b) (Read error: Connection reset by peer)
[09:19:33] *** Joins: p-i- (~Ohmu@2403:6200:8978:35fc:2893:deb2:6991:2866)
[09:19:39] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[09:22:08] *** Quits: upsala (~zcb@185.209.196.169) (Quit: WeeChat 3.4)
[09:24:21] *** Joins: eson123 (~sss@118.69.128.37)
[09:24:35] *** Quits: bindu (~bindu@user/bindu) (Quit: Leaving)
[09:24:57] *** Joins: bindu (~bindu@user/bindu)
[09:25:05] <eson123> does raw socket in python by default have keepalive set from within ? i am trying to have a connection which it helps me keeping the connection alive even tho nothing is sent in a long period
[09:26:22] *** Parts: MetricT (~MetricT@075-131-120-170.res.spectrum.com) (Leaving)
[09:26:56] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[09:27:56] *** Quits: humbertowoody (~humbertow@189.132.138.198) (Ping timeout: 268 seconds)
[09:29:16] <sudomann> I have a Dockerfile where I have been building python so far. I want to speed up the build process by copying the python files and directory structure from an official python image. I imagine I just copy one or two folders into my image and use `update-alternatives` (ubuntu) to make `python` call `python3.8` for example
[09:29:32] <sudomann> Which folders do I copy?
[09:30:18] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[09:30:49] *** Quits: dulanic (~dulanic@47.187.144.163) (Remote host closed the connection)
[09:31:08] *** Joins: julia (~quassel@user/julia)
[09:31:11] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Quit: Leaving)
[09:31:14] *** Joins: dulanic (~dulanic@47.187.144.163)
[09:31:48] <sudomann> I have found the binary at `/usr/local/bin/python3.7` but I dont imagine that's all I must copy
[09:31:57] <energizer> why dont you use an official 3.8 image?
[09:34:06] <sudomann> I am building tensorflow, which requires a different base image. I cant use anything other than that image because only through it can I get a specific gcc version it builds with
[09:35:16] *** Joins: lalitmee__ (~lalitmee@180.94.33.171)
[09:36:09] <energizer> i dont know if copying directories will be successful
[09:37:02] <sudomann> Building python from source before buildig tf is working so far, but I'd like to attempt and confirm that it doesnt work before I move on.
[09:37:05] *** Quits: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[09:37:23] <sudomann> using a 64 core arm instance, this might shave 10 mins of build time
[09:37:41] *** Quits: lalitmee_ (~lalitmee@180.94.33.76) (Ping timeout: 256 seconds)
[09:37:41] *** Joins: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be)
[09:38:46] <sudomann> Just found this other path /usr/local/lib/python3.8/. Might that do?
[09:40:51] <drew> I'm trying to use a heapq with complex numbers, so like heapq.heappush(myheap, (1, complex(1, 2)))
[09:40:56] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[09:41:47] <drew> but if the heap looks like this [(1, complex(0, 0))] and I try to heapq.heappush(myheap, (1, complex(1, 1))), then it will compare 1 to 1, see they are the same, then try to compare the complex numbers and raise an exception
[09:42:35] <drew> in my case, the order when the first number is the same is arbitrary. Is there a way I can still use a heapq if one of the elements of my heap items doesn't handle the < operator?
[09:42:39] *** Joins: badsektor (~badsektor@user/badsektor)
[09:42:44] *** Quits: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[09:43:57] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[09:46:19] <drew> I guess, complex.__lt__ is not defined, can I define it for my program?
[09:48:57] *** Quits: Thanatos (~Thanatos@197.210.47.93) (Ping timeout: 240 seconds)
[09:49:03] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:49:58] *** Joins: vanessa (~farawayas@103.160.128.7)
[09:51:01] *** Joins: Thanatos (~Thanatos@197.210.47.93)
[09:52:06] *** Joins: humbertowoody (~humbertow@189.132.138.198)
[09:53:29] *** Quits: vanessa (~farawayas@103.160.128.7) (Client Quit)
[09:56:17] *** Quits: jayray (~jayray@user/jayray) (Ping timeout: 240 seconds)
[09:56:51] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[09:56:55] *** Quits: humbertowoody (~humbertow@189.132.138.198) (Ping timeout: 268 seconds)
[09:57:11] *** Joins: vanessa (~farawayas@103.160.128.7)
[09:57:55] <energizer> drew: you can make it (1, AlwaysLess(), complex(1,2))
[09:58:01] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Remote host closed the connection)
[09:58:22] <energizer> then when it compares it will stop at the second one
[09:58:41] *** Joins: saunders (~nicholas@172.103.152.184)
[09:58:50] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[09:58:52] <drew> that's perfect
[09:58:54] <drew> thanks energizer
[09:59:17] *** Quits: badsektor (~badsektor@user/badsektor) (Remote host closed the connection)
[09:59:37] <energizer> you're welcome
[10:00:29] <drew> where does AlwaysLess() come from? or is this a function I have to make?
[10:00:44] <energizer> class AlwaysLess: def __lt__(self, other): return True
[10:00:55] <drew> ah
[10:00:58] <drew> thanks again
[10:02:03] *** Joins: phineas (~farawayas@103.160.128.7)
[10:02:09] *** Quits: phineas (~farawayas@103.160.128.7) (Remote host closed the connection)
[10:04:13] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 240 seconds)
[10:07:13] *** Quits: maxtim (~maxtim__@c-71-228-128-153.hsd1.ga.comcast.net) (Quit: Leaving)
[10:12:39] *** Quits: eson123 (~sss@118.69.128.37) (Quit: Leaving)
[10:13:00] *** Quits: Thanatos (~Thanatos@197.210.47.93) (Read error: Connection reset by peer)
[10:13:22] *** Joins: Thanatos (~Thanatos@197.210.47.93)
[10:16:45] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_dog)
[10:18:11] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[10:24:02] *** Quits: Thanatos (~Thanatos@197.210.47.93) (Read error: Connection reset by peer)
[10:24:21] *** Joins: Thanatos (~Thanatos@197.210.47.93)
[10:30:00] *** Quits: vanessa (~farawayas@103.160.128.7) (Quit: Leaving)
[10:31:14] *** Joins: ValentynOG-MWE (~ValentynO@31.40.105.59)
[10:34:59] *** Quits: kdc (~kdc@196.211.197.159) (Quit: Leaving)
[10:36:20] *** Joins: vanessa (~farawayas@103.160.128.7)
[10:37:06] *** Quits: saunders (~nicholas@172.103.152.184) (Ping timeout: 260 seconds)
[10:37:46] *** Joins: gulzar (~gulzar@14.139.123.36)
[10:38:14] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[10:38:46] *** Quits: oncall-pokemon (uid134758@id-134758.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[10:39:16] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[10:39:50] *** Joins: fikran (~fikran@user/fikran)
[10:40:45] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[10:40:46] *** Quits: Themis3000 (~Thunderbi@user/themis3000) (Quit: Themis3000)
[10:43:45] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:43:54] *** Quits: bcmyers (~bcmyers@cpe-76-92-188-7.kc.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:44:30] *** Joins: bcmyers (~bcmyers@cpe-76-92-188-7.kc.res.rr.com)
[10:45:48] <gulzar> Hi. I have a website on a machine. apache + cgi.   I made a script to fetch data from it via requests. It works from my local machine. But If I place the script on the same machine as website and run the script, I get error https://paste.debian.net/ .  What might be wrong? I tried setting timeout=5 on session.post().  but same issue
[10:48:16] <supakeen> That's not the correct paste link :)
[10:48:54] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[10:49:33] <gulzar> https://paste.debian.net/1225016/
[10:49:42] <gulzar> there was no line break, paste got rejected
[10:50:34] *** Joins: carl- (~carl-@185.103.188.130)
[10:51:48] *** Quits: Thanatos (~Thanatos@197.210.47.93) (Ping timeout: 268 seconds)
[10:51:50] <gulzar> supakeen: ^
[10:52:30] <supakeen> Well, there's plenty of reasons why that could happen mostly depending on network configuration, firewalls, etc.
[10:52:54] <supakeen> Bit hard to debug, if you have a shell on the server, can you curl that website from the command line?
[10:53:02] <gulzar> supakeen: yes
[10:53:07] <gulzar> whcih command
[10:53:28] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:54:21] *** Joins: seednode (~seednode@user/seednode)
[10:55:46] *** Joins: lalitmee_ (~lalitmee@180.94.32.181)
[10:55:46] *** Quits: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[10:57:15] *** Joins: Thanatos (~Thanatos@197.210.47.93)
[10:57:57] *** Quits: lalitmee__ (~lalitmee@180.94.33.171) (Ping timeout: 240 seconds)
[10:57:58] <gulzar> spaceone: curl -I site, works on local but is stuck on server
[10:58:08] *** Joins: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[10:58:10] <gulzar> supakeen:
[10:59:10] <deniska> That means server is not configured correctly to deal with requests coming from the same machine
[10:59:28] <gulzar> deniska: what can be done
[10:59:44] <gulzar> its' apache
[11:00:27] <supakeen> That'd be a question for the person that maintains/is responsible for that server.
[11:01:15] <gulzar> supakeen: what config can be used? what should I websearch.
[11:02:02] <deniska> Depends. Perhaps not really a python question at this point. Maybe it runs on a non-standard port locally, or maybe the website doesn't know its own domain name properly, or maybe it resolves the external address of the firewall which does port forwarding, and the firewall doesn't expect connections from inside the local network to these ports
[11:02:11] <deniska> Many things could get wrong, hard to say
[11:02:24] <gulzar> deniska: supakeen: ok. will check . Thank You
[11:03:00] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[11:03:04] <supakeen> As deniska says, there's many reasons on why this could happen too many to take a guess but once you find the right one the system administrator can probably fix it for you quickly.
[11:03:31] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[11:03:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:35fc:2893:deb2:6991:2866) (Ping timeout: 240 seconds)
[11:05:07] *** Joins: rendar (~rendar@user/rendar)
[11:08:11] <afidegnum> any answer for my question?
[11:09:23] *** Joins: Jong (~Jong@2620:10d:c090:400::5:f0a6)
[11:10:23] <supakeen> Perhaps it's still too early for recursion afidegnum, that needs at least a few cups of coffee ;)
[11:10:36] <energizer> what is your question afidegnum
[11:11:33] *** Joins: p-i- (~Ohmu@2001:44c8:4616:ce32:c99b:a4c2:c4ba:3ff4)
[11:11:35] *** Joins: mrwick (~mrwick@user/mrwick)
[11:12:11] *** Quits: ValentynOG-MWE (~ValentynO@31.40.105.59) (Ping timeout: 256 seconds)
[11:12:14] <afidegnum> hi, i'm having a little issue with the code using recursion. I need return the parent and child from the function but the results still include an empty list and  not properly structured. how do i adjust the code ? https://code.labstack.com/1mrVrXTI   I need an output like   parent: "html" children: ["head","body"] etc...
[11:12:39] *** Joins: p-i-_ (~Ohmu@182.232.229.219)
[11:12:44] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[11:13:41] <energizer> what is the output type supposed to be
[11:13:53] <afidegnum> parent: "html" children: ["head","body"]
[11:14:02] <energizer> you just want to print?
[11:14:07] <energizer> not return anything?
[11:14:37] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 268 seconds)
[11:14:42] <afidegnum> that's what i need for now, but I will integrate into a different module, where i can control the result
[11:15:30] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:f7ef:1a1c:4183:60be)
[11:15:51] *** Quits: p-i- (~Ohmu@2001:44c8:4616:ce32:c99b:a4c2:c4ba:3ff4) (Ping timeout: 250 seconds)
[11:16:03] *** Quits: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Read error: Connection reset by peer)
[11:17:41] *** Joins: aniketgm (~Aniket@49.36.107.251)
[11:17:49] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[11:18:14] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[11:18:16] *** Joins: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[11:18:54] <energizer> print(f"Parent: {v}") is that what you mean?
[11:19:18] <afidegnum> yes, that's for the parent, but how do i obtain the children?
[11:19:32] <energizer> why is that the parent?
[11:20:12] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Client Quit)
[11:20:33] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[11:20:39] <energizer> you defined a variable prnt and never used it
[11:21:12] <afidegnum> from the dictionary, there is "tag" representing the current node. then the "children" of the current tag, which contains other tags
[11:21:56] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[11:23:55] <afidegnum> energizer
[11:23:58] <afidegnum> what do you suggest?
[11:24:28] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[11:24:34] <energizer> did you mean https://bpa.st/AE5Q
[11:27:42] *** Joins: NeoCore (~neocore@195.200.221.196)
[11:27:57] *** Joins: the_lanetly_052 (~the_lanet@185.30.90.39)
[11:28:30] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:d06f:74a7:1060:5672) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[11:28:48] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 268 seconds)
[11:29:32] <afidegnum> it's not fully formatted,
[11:29:35] <afidegnum> hold a sec
[11:31:49] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[11:31:55] *** Joins: grooverman_ (~grooverma@177.102.117.95)
[11:32:29] <afidegnum> energizer, this is the result https://bpa.st/25SA
[11:32:45] <energizer> yeah i know, i wrote it
[11:33:14] *** Quits: aniketgm (~Aniket@49.36.107.251) (Quit: leaving)
[11:33:49] <afidegnum> I need to integrate into tkinter's treeview, so i want to be able to pass in the parent and child nodes to it
[11:34:02] <afidegnum> so i can have a tree structure in the GUI
[11:34:50] *** Joins: palasso (~palasso@user/palasso)
[11:34:52] <energizer> print("this:", d['tag'], "children:", [c['tag'] for c in d['children']])
[11:34:58] <energizer> replace the print line with that
[11:34:59] *** Quits: grooverman (~grooverma@177.102.117.95) (Ping timeout: 256 seconds)
[11:35:46] *** Joins: smoke (~smoke@user/smoke)
[11:36:33] <afidegnum> yes, it's better, but how do i track the index of the previous tag
[11:36:35] <afidegnum> ?
[11:38:50] *** Joins: lalitmee__ (~lalitmee@180.94.33.245)
[11:38:51] *** Joins: emx (~emx@adsl-84-226-68-198.adslplus.ch)
[11:39:07] *** Joins: gusto (~Augustus@109.255.100.54)
[11:41:13] *** Quits: lalitmee_ (~lalitmee@180.94.32.181) (Ping timeout: 256 seconds)
[11:42:14] *** Joins: ValentynOG-MWE (~ValentynO@31.40.105.59)
[11:43:23] *** Quits: nattiestnate (~nate@114.122.105.227) (Quit: WeeChat 3.4)
[11:43:42] *** Quits: vaio (~gary@user/ghost) (Ping timeout: 276 seconds)
[11:44:13] <energizer> i'm not sure what you mean
[11:45:04] <afidegnum> i'm trying to pass the result to tkinter treeview
[11:45:18] <afidegnum> which requires an index
[11:45:29] <afidegnum> to enumerate the list of items inserted
[11:45:57] <energizer> i'm gonna call it quits on this question
[11:47:11] *** Quits: ckdCreations (~ckdCreati@147.55.133.142) (Read error: Connection reset by peer)
[11:47:35] *** Joins: ckdCreations (~ckdCreati@2607:fb90:8352:571e:4c5b:4bff:5de3:55a6)
[11:51:46] *** Joins: lalitmee_ (~lalitmee@180.94.32.85)
[11:51:52] *** Quits: ValentynOG-MWE (~ValentynO@31.40.105.59) (Quit: Client closed)
[11:52:23] *** Joins: agonhajdari (~textual@user/agonhajdari)
[11:52:36] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[11:52:59] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[11:54:02] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[11:54:15] *** Quits: arinov_ (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[11:54:24] *** Quits: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il) (Read error: Connection reset by peer)
[11:54:34] *** Quits: lalitmee__ (~lalitmee@180.94.33.245) (Ping timeout: 260 seconds)
[11:57:57] *** Joins: cosimone (~user@93-47-231-248.ip115.fastwebnet.it)
[11:58:26] *** Joins: arinov_ (~arinov@213.194.126.155)
[12:01:29] *** Joins: VaniaPy (~VaniaPy@46.12.11.60.dsl.dyn.forthnet.gr)
[12:06:13] *** Joins: babilen (~babilen@user/babilen)
[12:08:37] *** Joins: Fremen (~Fremen@161.9.187.28)
[12:08:43] <Fremen> Hello everyone
[12:08:51] *** Joins: pycode1 (~pycode3@2001:b07:5d28:551:e22:805c:2760:70c1)
[12:08:59] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:09:19] <Fremen> is it advisable or workable to run spyder from pipenv shell to use this virtual environment?
[12:10:41] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 256 seconds)
[12:14:01] *** Joins: p-i- (~Ohmu@2001:44c8:4616:ce32:290c:8704:ebb5:f11)
[12:14:39] *** Joins: p-i-__ (~Ohmu@mx-ll-180.183.72-213.dynamic.3bb.co.th)
[12:16:22] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[12:16:31] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[12:16:54] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Ping timeout: 268 seconds)
[12:16:55] *** Quits: p-i-_ (~Ohmu@182.232.229.219) (Ping timeout: 256 seconds)
[12:17:11] *** Joins: bim9262 (~bim9262@user/bim9262)
[12:17:18] *** Joins: weedmic (~weedmic@5.102.235.240)
[12:17:34] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Remote host closed the connection)
[12:17:54] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[12:18:32] *** Quits: p-i- (~Ohmu@2001:44c8:4616:ce32:290c:8704:ebb5:f11) (Ping timeout: 252 seconds)
[12:18:49] *** Quits: smoke (~smoke@user/smoke) (Quit: Leaving)
[12:18:55] *** Quits: apteryx (~maxim@dsl-10-128-55.b2b2c.ca) (Ping timeout: 250 seconds)
[12:20:39] *** Joins: AlanMD (~AlanMD@86.121.179.183)
[12:20:44] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (Read error: Connection reset by peer)
[12:21:03] *** Joins: jayray (~jayray@user/jayray)
[12:21:51] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[12:22:27] *** Quits: the_lanetly_052 (~the_lanet@185.30.90.39) (Ping timeout: 268 seconds)
[12:23:08] *** Joins: stockholm (~Andreas@p200300d2c705110054749d4aa8d74816.dip0.t-ipconnect.de)
[12:23:14] *** Joins: luigibu (~luigibu@91.126.243.41)
[12:23:22] <Jong> Anyone know a better way to do what I'm doing here with the additional_args variable? https://bpa.st/3B4A
[12:23:57] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[12:25:54] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[12:25:56] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[12:26:09] *** Joins: Denver (~Denver@174-16-236-178.hlrn.qwest.net)
[12:26:33] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 256 seconds)
[12:26:36] <grawity> well, I'm not sure if this is *better* https://bpa.st/Y6OQ
[12:26:58] <grawity> I'd probably just choose a shorter name than additional_args
[12:27:51] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[12:28:37] *** Quits: afidegnum (~user@102.176.94.184) (Ping timeout: 268 seconds)
[12:30:26] <Jong> thank you grawity
[12:30:27] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:30:29] <Jong> I like your way
[12:30:31] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[12:30:54] <grawity> maybe https://bpa.st/GYSA to make it clear that those are exclusive options
[12:31:29] *** Quits: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de) (Remote host closed the connection)
[12:31:49] *** Joins: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de)
[12:31:52] <Jong> nicely done!
[12:32:22] *** Joins: the_lanetly_052 (~the_lanet@194.135.154.89)
[12:32:36] *** Joins: apteryx (~maxim@dsl-141-140.b2b2c.ca)
[12:33:40] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[12:34:00] *** Quits: zmt01 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[12:34:18] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[12:34:37] *** Joins: henbruas (~henbruas@ti0003a400-4203.bb.online.no)
[12:34:45] *** Joins: zmt01 (~zmt00@user/zmt00)
[12:35:06] *** Joins: jinsun (~quassel@user/jinsun)
[12:35:23] *** Quits: imp (~imp@192-141-191-236.alternativaip.net.br) (Quit: imp)
[12:36:46] *** Joins: the_lanetly_052_ (~the_lanet@185.30.90.26)
[12:37:57] *** Quits: the_lanetly_052 (~the_lanet@194.135.154.89) (Ping timeout: 240 seconds)
[12:38:14] *** Quits: fredd (~fredd@user/fredd) (Quit: Away)
[12:38:23] <Wulf> Jong: https://bpa.st/6DBA
[12:38:32] *** Quits: nomic (~nomic@185.198.243.18) (Remote host closed the connection)
[12:39:08] *** Joins: aslicedbanjo (~aslicedba@host86-160-16-113.range86-160.btcentralplus.com)
[12:39:09] *** Joins: kosh (~kosh@user/kosh)
[12:39:13] *** Joins: theo (~theo@user/theo)
[12:39:46] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:39:54] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[12:40:46] *** Quits: arinov_ (~arinov@213.194.126.155) (Ping timeout: 245 seconds)
[12:44:02] *** Quits: luigibu (~luigibu@91.126.243.41) (Ping timeout: 268 seconds)
[12:46:00] *** Joins: luigibu (~luigibu@91.126.243.41)
[12:47:31] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[12:48:11] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[12:48:40] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[12:48:47] *** Joins: synbiose (~synbiose@user/synbiose)
[12:48:47] *** Joins: stonkey (~stonkey@user/stonkey)
[12:49:03] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[12:49:11] *** Joins: fikran (~fikran@user/fikran)
[12:49:19] *** Joins: idontneedanick (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se)
[12:49:54] *** Joins: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[12:50:02] *** Quits: the_lanetly_052_ (~the_lanet@185.30.90.26) (Ping timeout: 240 seconds)
[12:50:21] *** Quits: luigibu (~luigibu@91.126.243.41) (Ping timeout: 256 seconds)
[12:50:36] <parv> Wulf, In the last "case", need two "_"?
[12:51:33] <Wulf> parv: _ might be gettext
[12:51:48] <nvz> dunderscore!
[12:51:57] *** Quits: carl- (~carl-@185.103.188.130) (Ping timeout: 240 seconds)
[12:52:00] <grawity> yeah I think _ shouldn't be gettext in python
[12:52:29] <nvz> reminds me of reading this blog, and finding it amusing https://nedbatchelder.com/blog/200605/dunder.html
[12:52:44] <Wulf> docs say "This function [gettext.gettext] is usually aliased as _() in the local namespace"
[12:53:29] <parv> Wulf, Interesting
[12:53:31] <grawity> I know it's the convention in C, but then C didn't have the "_ to discard" convention, and Python does
[12:55:26] <Wulf> nvz: is that how "dunder" came to be?
[12:56:15] <Wulf> ah, never mind. Blog says it's not.
[12:57:48] <nvz> the blog comments refer to a post on the python mailing lists back in 2002
[12:58:20] <nvz> I just recall reading that a few years ago and getting a laugh particularly about the final words on "dunderhead"
[12:59:25] <Wulf> parv: oh, I found that "_" should be used in case.
[13:00:07] <parv> Wulf, Thanks for the update.
[13:00:08] *** Joins: nomic (~nomic@51.52.78.152)
[13:00:15] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[13:01:31] *** Joins: raxor2k (~raxor2k@78.158.236.72)
[13:01:39] <raxor2k> what are the disadvantages using try and except?
[13:02:03] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[13:02:37] *** Quits: idontneedanick (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se) (Ping timeout: 240 seconds)
[13:02:40] <Denver> error checking?
[13:02:56] <supakeen> This has been discussed at length in the history of programming, you can look up "LBYL vs EAFP"
[13:03:12] <Wulf> https://bpa.st/GJWQ  shows that on line 10, 10 is *not* assigned to _. But on line 24, 10 is assigned to __.
[13:03:49] <supakeen> But the general answer is that you just can't do some of the LBYL stuff without introducing TOCTOU and other races.
[13:04:11] *** Joins: upsala (~zcb@185.209.196.169)
[13:05:34] <nvz> raxor2k: try and except clauses are pythons standard way of error handling in code, you wrap code that could generate an error like an http(s) request in a try block and then specify except blocks to catch and handle errors
[13:06:21] <nvz> raxor2k: the drawbacks have to do mostly with how you implement it, you generally want each block to be as narrow as possible perhaps the try block being a single line and specific exceptions to handle
[13:06:53] <nvz> if you wrap too much code in a try block with an except block with no specific exception to handle, you wind up just ignoring errors
[13:07:23] <Wulf> "the interactive interpreter makes the result of the last evaluation available in the variable _"  How come I never noticed that?
[13:08:40] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (Read error: Connection reset by peer)
[13:08:51] *** Quits: nomic (~nomic@51.52.78.152) (Quit: Leaving)
[13:09:10] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[13:09:24] <nvz> raxor2k: an example of such can be found in here where I had programmed this function to handle errors both with the request and the parsing of the response https://github.com/enveezee/INRI/blob/main/plugin.py#L207
[13:10:41] <nvz> making your error handling narrowly scoped like that allows for the script to fail when new unforseen issues arise so you can further define specific exceptions
[13:10:44] <Denver> "# ! Most this code is meaningless, the API doesn't return properly."
[13:10:59] <Denver> :)
[13:11:12] <supakeen> Wulf: I only use it if I'm using the interpreter as a quick calculator ;)
[13:11:21] <nvz> Denver: xD
[13:11:51] <nvz> yes well, the response to such a request should be of type application/json or whatever
[13:12:29] <nvz> the changes I just made to that plugin a few days ago addresses another issue with the json respons where it sometimes returns more than you asked for
[13:12:41] *** Joins: luigibu (~luigibu@91.126.243.41)
[13:12:58] <Denver> https://stackoverflow.blog/2021/12/23/best-practices-for-writing-code-comments/
[13:13:03] <Jong> Suppose a library made an update that had an interface change. The interface change breaks your code. So you update your code. What do you write in the commit message? "Updating xyz.py to be compatible with latest version of library A."
[13:13:50] *** Quits: weedmic (~weedmic@5.102.235.240) (Quit: Konversation terminated!)
[13:13:55] *** Joins: georgios (~georgios@user/georgios)
[13:14:38] <Jong> "Capatiblize" the code?
[13:14:45] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Read error: Connection reset by peer)
[13:15:00] <energizer> "Remove lib_a dependency because it keeps making breaking changes." ayyyy
[13:15:00] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[13:15:03] <nvz> Denver: the ! in that causes a plugin in vscode to color code that comment.. such smart comments are mostly for me to spot areas of the code I plan to do something with
[13:15:37] *** Joins: plastico (~plastico@neomutt/plastico)
[13:15:46] <nvz> I only started working on improving my coding habits, learning a coding editor, github, etc in the last year.. and use of such smart comments has been very helpful to me
[13:16:14] *** Quits: emx (~emx@adsl-84-226-68-198.adslplus.ch) (Ping timeout: 260 seconds)
[13:16:32] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[13:16:32] <Denver> nvz I was more referring to how essentially every thing is commented than that specific one which would be a hard no go on any team I've been on. But I was also just having some fun and joking around.
[13:16:33] <raxor2k> nvz: thanks for info
[13:17:12] <nvz> Denver: http://nvz.farted.online/comments.png
[13:17:45] <Denver> nvz I get what you are saying.. I'm talking about the normal comments
[13:17:48] *** Joins: nomic (~nomic@51.52.78.152)
[13:18:00] <nvz> Denver: yeah I dont really claim to be a programmer.. heh.. I taught myself back when I was like 6 years old and never had any real training or collaboration on anything.. so I got lots of bad habits I came a long way with in the last year
[13:18:08] <nvz> I call myself a dabbler
[13:18:14] <Denver> nvz for example lines 194, 197, 191, etc
[13:18:17] <nvz> I code when I got an itch I think I can scratch
[13:18:24] <Denver> haha fair
[13:18:38] <Denver> again, I was really just laughing. it's not serious.
[13:19:13] <nvz> Denver: yes well even to me, having obviously coded a limnoria plugin or two, when I read that code, those comments you mention are necessary as I dont offhand recall what those parts of the bot's API do without explaination
[13:20:02] <nvz> Denver: I can look at line 191 and I dont need to go dig in limnorias documentation for what msg.nick and irc.nick mean when compared like that
[13:20:07] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca) (Quit: Client closed)
[13:20:42] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca)
[13:20:42] <Denver> nvz yeah the difference is nobody else is expected to read it. I have never worked on a team where that would be okay.
[13:21:08] <nvz> I have never worked on a team at all so. :D
[13:21:21] <Denver> thats fair
[13:21:27] <nvz> I got things I've been wanting to do for a decade or more, just cant get anyone to help out
[13:21:39] <nvz> that damn reptangles game is one of the simpler things
[13:21:50] <nvz> what I did so far I did in 3 days after more than a decade wanting to
[13:21:54] *** Quits: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul) (Quit: Leaving)
[13:22:20] *** Joins: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul)
[13:22:20] *** nos0u1 is now known as flea
[13:22:20] <nvz> today I added like 9 lines I didnt commit cause its just trivial crap trying to get the GUI ready to test what I written so far *groans*
[13:22:56] *** Joins: henbruas (~henbruas@ti0003a400-4203.bb.online.no)
[13:23:21] <supakeen> When I'm working on some code I'll have '# XXX' or '# TODO' comments but they won't go into the commit :)
[13:23:54] <supakeen> But usually I only do comments like this: https://github.com/supakeen/pinnwand/blob/master/pinnwand/utility.py#L46
[13:24:04] <nvz> yeah well I still more often than not edit the files on the github website cause how to commit properly much less strip certain comments is far beyond me
[13:24:14] <parv> Just rewrite history!🤷‍
[13:24:18] <supakeen> Or for longer: https://github.com/supakeen/pinnwand/blob/master/pinnwand/utility.py#L97
[13:24:27] <supakeen> But it's mostly just when an expression is mathy or terse.
[13:24:35] <supakeen> Or it isn't exactly clear why something is being done.
[13:24:51] *** Quits: nomic (~nomic@51.52.78.152) (Quit: Leaving)
[13:24:58] <nvz> I managed my first time using vscode to clone that pianobar-windows thing into vscode on win10, but then couldnt for the life of me figure out how to commit back because the repo I cloned was some kinda linked repo to some other repo and it all just confused me to no end
[13:25:34] <deniska> The real pro move is to have a whole directory of useful scripts that you keep in the repo checkout but never commit
[13:26:57] <nvz> a lot of this stuff may seem obvious to people who went to school for computer science after having a full primary education, taught the fundamentals, practices, and then having used them in the field as professionals. but when you are a small child figuring stuff out on your own and run with that method for decades.. its totally different
[13:27:59] <supakeen> That's why it's hard to write comments, it's hard to guess at what other people find implausible.
[13:28:13] <supakeen> Or in general why it's hard to write clear code :)
[13:28:20] <Denver> the comment should be a last resort
[13:28:22] <nvz> back when I was a kid in the late 80s early 90s, we were programming because we had to mostly.. the way you downloaded a game was to get a book or magazine like apple magazine and then spend the day punching in code just to play a dumb game
[13:28:49] <nvz> I found if I dont comment heavily I wont remember what any of the code means 6mo or more later when I revisit it
[13:28:52] <supakeen> But if you can you comment the 'why' not the how :)
[13:29:20] <Denver> honestly... https://stackoverflow.blog/2021/12/23/best-practices-for-writing-code-comments/ and https://news.ycombinator.com/item?id=29671450 for discussion. If I was working through a code review and saw some of what was on nvz, I'd instantly cry inside.
[13:29:39] <supakeen> I wouldn't care since they're comments.
[13:30:01] *** Quits: bcmyers (~bcmyers@cpe-76-92-188-7.kc.res.rr.com) (Ping timeout: 256 seconds)
[13:30:15] <nvz> oh I used to do some things just for comedic effect.. I once wrote a bit of code in python many years ago I believe I shared here.. that had on a single line _ = __ and if you removed that line it had no effect on the program
[13:30:19] <nvz> I did it simply because I could
[13:30:39] <Denver> supakeen I can't tell if you are trolling or not
[13:30:47] <nvz> I was quite amused at the time I could use such nonsense without the interpreter barking at me
[13:31:18] <supakeen> I'm not, I care very little about it and it has improved the team spirit greatly if everyone isn't trying to find (mostly irrelevant) things in code reviews. If that comment helps someone it helps someone.
[13:31:26] <supakeen> Even if it's just the person creating the PR.
[13:31:36] <Denver> Good god that is brutal
[13:31:38] *** Quits: inomoz (~inomoz@85.26.165.50) (Ping timeout: 260 seconds)
[13:32:01] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[13:32:26] <supakeen> I've seen too many a team end up in trench warfare over coding (and comment) style ;)
[13:32:41] <parv> Does anyone know of cron-software which would get the 'tabs from a VCS (instead of keeping a copy in VCS & other in user crontab in sync)?
[13:32:49] <supakeen> Totally obliterating any productivity and every reviews becomes a 'im going to give it to ya' vibes.
[13:32:53] <supakeen> Something I want to avoid.
[13:33:18] <nvz> mind you I spent my first idk.. probably 10 years or more coding not only entirely self taught, but coding things like basica, gwbasic, qbasic, ti-basic.. and when youre coding on such limited platforms like the TI-82 or such.. you learn to get "creative" and by that I mean dirty/sloppy/crazy :P
[13:33:35] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[13:33:42] <nvz> we're talking about a language where you are limited to what like 27 integers, 10 strings, 10 matricies.. etc
[13:34:33] <parv> .oO( Ah TI-82 programming ... fun times when hardwork vanishes on a crash ... )
[13:34:36] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[13:34:52] <supakeen> Anyways, we've mostly automated all the style-related things so everyone can be mad at the tooling instead of eachother ;)
[13:34:57] *** Quits: onichomp (~onichomp@2806:264:4404:80d0:40cd:e3cf:fbd2:3023) (Ping timeout: 250 seconds)
[13:35:21] <Denver> suspakeen if someone commented every single line of a function and not an explanation of the function itself which is named "iam" that is likely to cause issues further down the road. Maybe you and I have just worked on completely different teams but that shit would never fly.
[13:35:31] <nvz> I have yet to put my hands on one of these modern n-spire type deals but the idea of having hundreds of megs, a color screen, a touchpad, and the ability to use Lua rather than just TI BASIC.. just makes me angry
[13:35:49] <Denver> it's beyond just "im going to give it to ya" vibes and entering wtf is this territory
[13:36:11] <supakeen> Perhaps, but it's all context sensitive and interpersonal which makes it hard to put absolutes on it :)
[13:36:24] *** Joins: onichomp (~onichomp@177.231.43.15)
[13:37:07] <Denver> i don't even know what to respond to that lol. Agree to disagree,
[13:37:37] <nvz> Denver: maybe you should look at some of my less developed code xD  https://github.com/enveezee/reptangles/blob/main/src/tile.py
[13:37:43] <Denver> I've worked FAANG, finance, and the startup world here in Denver and nowhere would be okay with that as it completely destroys productivity
[13:38:06] <Denver> hahah this is amazing
[13:38:07] <Denver> I love it
[13:38:07] <nvz> has larger docstring style comments for the functions but the coding itself is pretty damn hard to understand at all without commentary
[13:38:59] <nvz> when I am coding something somewhat complex for the first time I resort back to my old coding style and one problem I always had was coming up with names for vars, so I often use stuff I will only understand for that few minutes while I'm working out the math
[13:39:31] *** Quits: aslicedbanjo (~aslicedba@host86-160-16-113.range86-160.btcentralplus.com) (Quit: Leaving.)
[13:40:21] <Denver> haha
[13:41:08] <nvz> if it works and I get to expanding on it, I go back and flesh it out more but doing so while coding it makes me lose sight of what I'm doing cause my brain really gets hung up on trivial stuff like what to even call something
[13:41:32] <energizer> Denver: the key is that what's helpful communication depends on the audience. if it's faang python experts, commenting basic stuff is more distraction than help. if it's newbies, commenting basic stuff is helpful because then they don't have to go read new doc pages every line
[13:41:51] <Denver> 100% agree.. that was my point.
[13:42:02] <Denver> If it's just them, there is absolutely no issue and I was just messing around.
[13:42:23] <nvz> right now that tile.py is most the logic of the game and I'm sure most coders would've storyboarded the entire app first, then did this stuff last.. I did it backwards I did the nitty gritty stuff first then coded the rest around it
[13:42:37] *** Joins: legola (~legola@46.235.101.65)
[13:43:06] *** Quits: thekingofbandit (~thekingof@user/thekingofbandit) (Remote host closed the connection)
[13:43:09] <nvz> well started to anyhow.. thats why I coded for 3 days and stalled cause I am unsure how to link all the pieces together and I absolutely loath GUI design
[13:43:17] *** Joins: tobybl (~tobybl@213.31.132.151)
[13:43:19] <Denver> energizer i was more laughing at the fact that every line within the function was commented, however the actual function itself wasn't - and had a ambiguous name.
[13:43:45] <nvz> Denver: its from the bible, before jesus was, I am.. I thought it was funny
[13:44:09] *** Joins: thekingofbandit (~thekingof@user/thekingofbandit)
[13:44:11] <nvz> and I'm of a mind having read the stories, that Jesus had quite a sense of humor
[13:44:23] *** Joins: agonhajdari (~textual@user/agonhajdari)
[13:44:42] *** Quits: luigibu (~luigibu@91.126.243.41) (Ping timeout: 260 seconds)
[13:44:51] *** Joins: KeiraT (~k@lulzsec.co.uk)
[13:45:02] <Swayze> yeah he iddnt exist
[13:45:05] <Swayze> that was his biggest joke
[13:45:09] <Swayze> anyway #offtopic
[13:45:13] <Denver> lol
[13:45:14] <nvz> yeah..
[13:45:43] *** Joins: inomoz (~inomoz@85.26.165.50)
[13:46:17] *** Joins: KvL (~KvL@user/KvL)
[13:46:44] *** Joins: maximousblk (~maximousb@2405:205:1107:8460:a0d1:40ca:3238:f17c)
[13:47:35] *** Quits: Thanatos (~Thanatos@197.210.47.93) (Ping timeout: 256 seconds)
[13:48:04] *** Quits: maximousblk (~maximousb@2405:205:1107:8460:a0d1:40ca:3238:f17c) (Client Quit)
[13:48:28] <Wulf> pagios: https://ideone.com/ziMAA9
[13:48:38] <Wulf> wrong channel
[13:48:49] *** Quits: KvL (~KvL@user/KvL) (Client Quit)
[13:49:17] *** Joins: KvL (~KvL@user/KvL)
[13:52:24] <deniska> It's useful to comment the lines for which reading the docs doesn't make the issue any clearer :)
[13:52:50] <deniska> A line like `if k == 0.0: k = 0.0` probably deserves a comment
[13:53:06] <Wulf> deniska: what are you referring to?
[13:53:28] <deniska> Wulf: there was a discussion a bit ago what and what not to comment
[13:53:42] <sudomann> I have built tensorflow wheel but when I try to install with pip: ERROR: tensorflow-2.6.1-cp37-cp37m-linux_aarch64.whl is not a supported wheel on this platform.
[13:53:44] *** Joins: Thanatos (~Thanatos@197.210.47.93)
[13:54:02] <Wulf> sudomann: what's your platform?
[13:54:07] <nvz> idk my github says it all really.. heh. I'm just a dabbler who hasn't really written anything of note.. the closest thing I have to a complete app was merely a test jig to help me coding that repiles game I may never finish :P  https://github.com/enveezee/ptsg
[13:54:08] <sudomann> arch returns: aarch64
[13:54:48] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:55:01] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[13:55:26] <sudomann> I learned the other day that cp37m meant python with malloc. Is it possible my python installation does not have that feature
[13:55:32] <Denver> deniska a line like if k == 0.0: k = 0.0` shouldn't exist...
[13:55:45] <sudomann> I cant see anything else in the wheel name that could be mismatched
[13:55:55] <Denver> the comment shouldnt be a bandaid to poorly written code
[13:56:07] *** Lord_of_Life_ is now known as Lord_of_Life
[13:56:09] <deniska> Denver: negative 0 also shouldn't exist, and yet here we are
[13:56:21] <Denver> fair
[13:56:23] <Denver> lol
[13:57:16] <Denver> wow... 3:30 in the morning. Time for bed. Cheers all.
[13:57:37] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[13:59:41] *** Joins: Naan (~naan@user/naan)
[14:00:13] *** Joins: luigibu (~luigibu@91.126.243.41)
[14:01:17] *** Quits: parv (~quass@user/parv) (Quit: parv)
[14:03:09] *** stella is now known as deepy`
[14:03:35] *** deepy` is now known as stella
[14:04:35] *** Quits: luigibu (~luigibu@91.126.243.41) (Ping timeout: 256 seconds)
[14:08:21] *** Joins: arinov_ (~arinov@178.240.175.124)
[14:08:27] *** Joins: luigibu (~luigibu@91.126.243.41)
[14:10:13] *** Quits: _janus (~janus@blotter.ld-linux.so) (Quit: once upon a time...)
[14:11:08] *** Joins: vaio (~gary@user/ghost)
[14:11:25] *** Joins: MikZyth (~MikZyth@host-20-157-66-217.spbmts.ru)
[14:12:26] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[14:13:57] *** Joins: _janus (~janus@blotter.ld-linux.so)
[14:14:05] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca) (Ping timeout: 256 seconds)
[14:14:11] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (Read error: Connection reset by peer)
[14:14:12] *** Joins: nomic (~nomic@185.198.243.236)
[14:15:38] *** Quits: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is) (Quit: Client closed)
[14:16:17] *** Joins: lalitmee__ (~lalitmee@180.94.32.14)
[14:16:34] *** Quits: tobybl (~tobybl@213.31.132.151) (Remote host closed the connection)
[14:17:52] *** Joins: zepolen_ (~zepolen@ppp-94-66-223-200.home.otenet.gr)
[14:17:59] *** Joins: esther (~esther@2607:fb90:5fed:63f9:cf32:6f50:78c0:8572)
[14:18:45] *** Quits: lalitmee_ (~lalitmee@180.94.32.85) (Ping timeout: 256 seconds)
[14:18:53] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[14:19:07] *** Joins: vladoski (~foo@93-36-221-58.ip62.fastwebnet.it)
[14:19:35] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[14:19:38] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[14:21:57] *** Quits: esther (~esther@2607:fb90:5fed:63f9:cf32:6f50:78c0:8572) (Ping timeout: 240 seconds)
[14:22:22] *** Joins: henbruas (~henbruas@ti0003a400-4203.bb.online.no)
[14:22:41] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[14:23:59] *** Joins: mokulus (~mokulus@user/mokulus)
[14:24:43] *** Joins: lina (~lina@user/lina)
[14:25:29] *** Quits: mokulus (~mokulus@user/mokulus) (Client Quit)
[14:26:12] <lina> when you use pip3 install some-package, should you use a virtualenv to do this?
[14:27:05] *** Joins: JingleJazzy (~jaziz@user/jaziz)
[14:27:30] *** Joins: Julian (~tos9@python/site-packages/Julian)
[14:29:07] <vladoski> it's recommended, yes
[14:29:23] <vladoski> except if you need that package globally installed
[14:29:32] <vladoski> but I'll suggest to use something like pyenv
[14:30:19] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Remote host closed the connection)
[14:30:36] *** Quits: luigibu (~luigibu@91.126.243.41) (Ping timeout: 240 seconds)
[14:30:54] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[14:33:58] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:36:37] *** Quits: vladoski (~foo@93-36-221-58.ip62.fastwebnet.it) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:36:58] *** Joins: lxwulf (~lxwulf@user/lxwulf)
[14:37:17] *** Joins: weedmic (~weedmic@5.102.235.240)
[14:37:24] *** Joins: LordVan (~lordvan@gentoo/developer/lordvan)
[14:39:02] *** Parts: lxwulf (~lxwulf@user/lxwulf) ()
[14:39:37] *** Quits: arinov_ (~arinov@178.240.175.124) (Ping timeout: 240 seconds)
[14:41:40] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[14:41:59] *** Quits: Thanatos (~Thanatos@197.210.47.93) (Ping timeout: 256 seconds)
[14:41:59] *** Joins: The_Loko (~The_Loko@79.116.24.80)
[14:42:46] *** Joins: noona (~noona@194.36.25.26)
[14:43:03] *** Quits: Denver (~Denver@174-16-236-178.hlrn.qwest.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[14:43:45] *** Quits: noona (~noona@194.36.25.26) (Client Quit)
[14:43:54] *** Joins: zeden (~zeden@user/zeden)
[14:44:45] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[14:45:25] *** Joins: binary01 (~binary01@cpe-74-71-15-170.nyc.res.rr.com)
[14:45:38] *** Joins: miique (~miique@181.46.139.166)
[14:46:36] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[14:46:43] <gulzar> supakeen: deniska: apacche error solved
[14:46:57] *** Joins: Thanatos (~Thanatos@197.210.47.93)
[14:47:32] <deniska> pyenv is not an alternative to venv
[14:47:32] *** Quits: portalrat (~portalrat@user/portalrat) (Remote host closed the connection)
[14:47:41] *** Joins: luigibu (~luigibu@91.126.243.41)
[14:47:52] *** Joins: portalrat (~portalrat@user/portalrat)
[14:47:53] <deniska> pyenv is a tool for installing pythons, venv is a tool for creating semi-isolated python environments
[14:48:32] *** Joins: ice9 (~ice9@user/ice9)
[14:49:39] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[14:49:58] <twainwek> what's the easiest way of showing a PIL image (pil_obj.show()) in a non-blocking way? Right now I'm using matplotlib but to be it seems excessive
[14:52:35] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[14:53:00] <lericson> how do people check in jupyter code?
[14:53:08] <lericson> i mean, jupyter notebooks?
[14:53:19] <lericson> in git specifically
[14:53:33] <lericson> the problem that arises is that you get these 10k+ line diffs because svgs and so on
[14:53:54] <lericson> i'm now going to tell git to treat them as binary files to avoid this particular issue but it seems inelegant
[14:55:19] *** Quits: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[14:55:43] *** Joins: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[14:56:43] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[14:57:32] <lericson> hmm i guess you could set a different diff driver for jupyter notebooks
[14:58:32] *** Joins: fikran (~fikran@user/fikran)
[14:59:31] *** JingleJazzy is now known as jazzy
[15:00:37] *** Quits: Thanatos (~Thanatos@197.210.47.93) (Ping timeout: 240 seconds)
[15:02:23] *** Quits: luigibu (~luigibu@91.126.243.41) (Ping timeout: 256 seconds)
[15:03:24] *** Joins: Thanatos (~Thanatos@197.210.47.93)
[15:03:27] *** Joins: JingleJazzy (~jaziz@user/jaziz)
[15:03:34] *** Quits: JingleJazzy (~jaziz@user/jaziz) (Remote host closed the connection)
[15:05:16] *** Joins: morning_dew_drop (~Guest27__@86-198-18-212.ipv4.consistec.de)
[15:05:53] *** Joins: luigibu (~luigibu@91.126.243.41)
[15:06:03] <morning_dew_drop> names #python-unregistered
[15:06:11] *** Quits: Terexen (~terexen@user/terexen) (Remote host closed the connection)
[15:07:58] * morning_dew_drop First time here
[15:09:47] *** Joins: Oco[A]de (~OCode@user/Ocode)
[15:11:03] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[15:11:22] <supakeen> Do you have a Python question? :)
[15:12:17] *** Quits: OCode (~OCode@user/Ocode) (Ping timeout: 240 seconds)
[15:12:26] <pycode1> hello, i still have the problem with multiprocessing.Pool basically when imap_unordered(my_func, my_gen()) i am profiling my_func and i see that after each task the memory is growing
[15:12:45] <pycode1> i do not for some reason i have some global var somewhere that hold the values
[15:12:50] <pycode1> very hard to find the error
[15:13:02] *** Quits: stockholm (~Andreas@p200300d2c705110054749d4aa8d74816.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[15:13:29] *** Joins: cdown (~cdown@163.114.131.1)
[15:13:51] <supakeen> Can't you set a breakpoint on that with pdb?
[15:13:57] <supakeen> Actually, don't know if you can :(
[15:16:56] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[15:17:37] <pycode1> very hard i added @profile in my_func()
[15:17:46] <pycode1> and i see that for somereason the memory at the point is growing
[15:17:53] <pycode1> that function is called from the pool
[15:18:08] <pycode1> so i have somewhere a global var that is growing
[15:18:14] *** Quits: nomic (~nomic@185.198.243.236) (Quit: Leaving)
[15:18:42] <pycode1> the parameter imap_unordered is passing to my_func has been checked too
[15:18:44] <pycode1> with getsizeof
[15:18:56] <pycode1> i see the parameter have the same size for every call
[15:18:59] <pycode1> and that's correct
[15:19:11] <bjs> pycode1: Python tends to keep hold of memory to re-use it later,  unless a large chunk gets freed at once it will often stay about
[15:19:15] <pycode1> so in my_func i have something that store something in dictionary or list or something
[15:19:29] <bjs> (Python doesn't allocate memory per-object, but instead if allocates large chunks of memory at a time)
[15:20:00] <pycode1> bjs, yes but after few minutes in need to block the pool with ctrl-c the memory is growiing too much
[15:20:09] <bjs> pycode1: can you share your my_func ?
[15:20:16] <supakeen> (also programs in general can't really give back memory under normal circumstances)
[15:20:22] <pycode1> bjs i can share it but it has many dependecies
[15:20:38] <bjs> supakeen: that part shouldn't normally matter, as the memory doesn't actually get used
[15:20:56] <pycode1> bjs, https://bpa.st/DXCA
[15:21:02] <bjs> it's very normal for a process to "hold" far more virtual memory than physical memory it's actually using
[15:21:26] <pycode1> bjs, https://bpa.st/24HA
[15:21:34] <bjs> pycode1: you have maxtasksperchild=1 ?  okay what i've been talking about probably isn't what's happening.
[15:21:35] <pycode1> (process = my_func)
[15:21:54] <pycode1> bjs i tried to set it to 1
[15:21:59] <pycode1> but the problem peersist
[15:22:09] <bjs> pycode1: what is my_generator doing?
[15:22:19] <pycode1> bjs, yes it is correct to hold memory but here the memory is growing
[15:22:32] <pycode1> bjs, a list that pass dataframe and other parameter (dictionaries)
[15:22:38] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[15:22:39] <pycode1> prices is a pandas dataframe
[15:22:43] <bjs> pycode1: well if you have maxtasksperchild=1 then the Python process is killed at the end, so it can't hold onto memory
[15:22:59] <pycode1> bjs, so the problem is not process function ?
[15:23:06] <pycode1> maybe the code of the POOL?
[15:23:10] *** Quits: Deana (~sysadmin@185.46.198.220) (Quit: Konversation terminated!)
[15:23:13] <bjs> pycode1: what happens if you comment out the pool, and write `for _ in my_generator(): pass`
[15:23:21] *** Quits: gulzar (~gulzar@14.139.123.36) (Ping timeout: 256 seconds)
[15:23:43] <pycode1> bjs, where exactly?
[15:23:46] <pycode1> back in 10 min
[15:24:01] *** Quits: lambda (~weechat@cyka.blyat.vodka) (Quit: WeeChat 3.3)
[15:24:15] <bjs> pycode1: comment out the pool, and where the pool code was, write `for _ in my_generator(): pass`.  It's hard to debug these things if you don't know the "baseline" amount of memory the parent is actually using
[15:24:20] *** Joins: lambda (~weechat@cyka.blyat.vodka)
[15:25:33] *** Quits: MikZyth (~MikZyth@host-20-157-66-217.spbmts.ru) (Quit: WeeChat 3.4)
[15:25:34] <bjs> pycode1: btw, in-general fork is going to be the less memory efficient way
[15:25:59] <bjs> (spawn is generally better, all round)
[15:27:12] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[15:28:24] *** Quits: trace987 (~trace@ip5b42963a.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[15:29:22] *** Quits: raxor2k (~raxor2k@78.158.236.72) (Remote host closed the connection)
[15:29:56] *** Quits: Thanatos (~Thanatos@197.210.47.93) (Ping timeout: 245 seconds)
[15:30:40] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:31:15] *** Joins: thiras (~thiras@user/thiras)
[15:31:41] <supakeen> Is that the case for multiprocessing where you'd want the of the process?
[15:32:17] *** Joins: weedmic_ (~weedmic@5.102.235.240)
[15:32:32] <bjs> supakeen: did you accidentally a word
[15:32:43] <supakeen> I accidentally forgot memory, which is fitting.
[15:33:11] <supakeen> I always learned posix_spawn to specifically be fork (or nowadays clone) + exec which doesn't seem to mesh with multiprocessing :)
[15:33:33] *** Quits: luigibu (~luigibu@91.126.243.41) (Ping timeout: 256 seconds)
[15:33:58] *** Joins: Thanatos (~Thanatos@197.210.47.93)
[15:34:13] *** Joins: badsektor (~badsektor@user/badsektor)
[15:34:36] <bjs> supakeen: oh what I mean was that simply fork would copy over all of the pages of the parent process, and quite often that can inflate how much memory the process appears to be using (and with refcounting especially can induce a huge amount of unnecessary copying)
[15:34:37] *** Quits: weedmic (~weedmic@5.102.235.240) (Ping timeout: 240 seconds)
[15:34:52] <supakeen> Ah yes.
[15:35:05] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[15:35:06] <bjs> spawn will start a fresh interpreter without the opportunity for that to happen
[15:35:39] <supakeen> It'd be better if it was the default for multiprocessing since it already acts like spawn on windows.
[15:35:53] <bjs> supakeen: and Mac !
[15:35:57] <bjs> it's only unix that doesn't spawn
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:22] <bjs> (by default)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:39] <supakeen> * Linux.
[15:36:56] <bjs> I think it's historical accident, there used to only be fork
[15:37:25] <supakeen> There's been a lot of approaches to fork-like syscalls; some systems don't have them at all because they're constrained.
[15:37:35] <supakeen> So they defined a posix_spawn which doesn't need fork (or its semantics).
[15:37:46] <bjs> it's basically fork+exec all in one
[15:38:17] <supakeen> For the Linux implementation, yes (or vfork, or fork with flags, or whatever they do now).
[15:38:31] <bjs> but 'fork' mode doesn't do the exec portion
[15:38:34] <bjs> in multiprocessing
[15:38:35] <supakeen> (or clone)
[15:38:52] <supakeen> Nope and that's my *main* gripe with multiprocessing, everyone uses it in fork mode.
[15:39:08] <pycode1> bjs, back
[15:39:09] <supakeen> While spawn mode by default would make much more sense and have you set up explicit communication.
[15:39:24] *** Joins: henistein (~henistein@2001:8a0:c18a:f601:35cf:5152:f3f7:8def)
[15:39:30] <bjs> supakeen: well Windows only supports spawn,  and Mac now defaults to spawn.  I guess it's just historical accident than *nix defaults to fork
[15:39:32] <supakeen> On the other hand, a fork-based thing can just be a drop in.
[15:40:15] *** Quits: weedmic_ (~weedmic@5.102.235.240) (Quit: Konversation terminated!)
[15:40:29] *** Joins: weedmic_ (~weedmic@5.102.235.240)
[15:40:36] <pycode1> bjs, the real problem here is that i am not asking why the task get big amount of memory, i am asking why py is holding in memory and for other tasks the memory usage is high
[15:40:38] <bjs> It used to be "there are some 'limitations' on Windows" and then eventually they realised that making the Windows mode a standard mode was a good idea, they called it 'spawn'.  Now Mac defaults to it too.  Possibly eventually the linux versions should too
[15:40:58] <pycode1> https://bpa.st/DXCA
[15:40:59] <pycode1> see?
[15:41:07] <pycode1> at every call the memory is bigger
[15:41:12] <bjs> pycode1: well you can't answer the second without knowing the first, right?
[15:41:25] *** Joins: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il)
[15:41:27] *** Quits: drupin (uid7837@id-7837.uxbridge.irccloud.com) ()
[15:41:46] <pycode1> bjs, i know the task is heavy and i also find a funny thing
[15:41:52] <pycode1> inside the class StrategyRunner
[15:41:56] <pycode1> at some point i have
[15:41:57] <bjs> pycode1: but see my previous comments about the generator and baseline usage, and about fork vs spawn
[15:42:17] <bjs> I mean there can be a million-and-one reasons why a program uses memory.
[15:42:34] <pycode1> https://bpa.st/665Q
[15:42:43] <pycode1> if i comment the line 7
[15:42:43] <nedbat> just listing all the reasons could use a good chunk of memory! :)
[15:42:49] <pycode1> i do not have that problem with memory -_-
[15:42:57] <bjs> pycode1: what do you mean
[15:43:32] <pycode1> bjs, when i run everything... i have the problem i told you....BUT...looking inside the code in a method of StrategyRunner (strategyrunner is the class i am using in the task)...
[15:43:37] <pycode1> if i comment that line
[15:43:37] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Ping timeout: 240 seconds)
[15:43:42] <pycode1> the memory is ok
[15:43:55] <pycode1> if i leave it there the memory always increase
[15:44:18] <pycode1> really nonsense to me
[15:44:37] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 240 seconds)
[15:44:51] <pycode1> basically with that line i am copying series inside the df variable (dataframe)
[15:44:58] <bjs> pycode1: well, it could be something as simple as your generator producing inputs that take more and more work/memory overall as time goes on
[15:45:10] <bjs> it's hard to know whether the multiprocessing even has anything to do with what you see
[15:45:18] <pycode1> yes i understand you are right
[15:45:23] <pycode1> i need to analyze it line by line -_-
[15:45:35] <lericson> just run it sequentially in one process pycode1
[15:45:49] <bjs> pycode1: well no,  like I said there are a few experiments you can do.  e.g. commenting out the pool and doing things inside the parent only
[15:46:05] <pycode1> ok
[15:46:19] * supakeen shoos nedbat
[15:46:21] <bjs> work out how much memory gets used just by the generator,  how much gets used by just running that "process" sequentially etc.  Then you at least will know how much overhead each stage is bringing in.
[15:46:32] <pycode1> ok
[15:46:37] <pycode1> i am going to test it
[15:48:47] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[15:49:04] <pycode1> bjs, trying  for _ in prices(): pass the memory is at 1.9GB
[15:49:10] *** Quits: cosimone (~user@93-47-231-248.ip115.fastwebnet.it) (Read error: Connection reset by peer)
[15:49:23] <bjs> is prices my_generator ?
[15:49:24] <pycode1> still going and the memory is always at 1.9gb
[15:49:26] <pycode1> yes
[15:49:27] <pycode1> exactly
[15:49:30] <pycode1> pardon
[15:49:41] <pycode1> the real generator i am using
[15:50:05] <pycode1> 464845 damiano   20   0 2579528   1,9g  33308 R 100,3   6,2   2:08.74 python
[15:50:20] <pycode1> ok so the problem is not the generator
[15:50:29] <pycode1> 1.9GB is ok because it loads a big pandas dataframe
[15:50:37] <pycode1> so i can expect 1.9gb
[15:50:39] <pycode1> its ok
[15:50:49] <pycode1> (i have 32 gb on this machine)
[15:51:36] <pycode1> now i try to call my process function without the pool
[15:51:40] *** Joins: nomic (~nomic@185.198.243.236)
[15:53:03] *** Quits: nomic (~nomic@185.198.243.236) (Remote host closed the connection)
[15:54:40] <pycode1> i will use @profile  on process function to see if that function will be called with different amount usage (at that point)
[15:55:37] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[15:55:39] *** Quits: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il) (Ping timeout: 256 seconds)
[15:56:36] <pycode1> bjs,  this is the first https://bpa.st/YUUA which is correct because as i wrote the generator takes 1.9gb so the process function has that memory usage at that point
[15:56:46] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[15:57:08] <pycode1> rising https://bpa.st/2ZDQ
[15:57:13] <pycode1> :'(
[15:57:26] <pycode1> still running
[15:57:36] *** Quits: badsektor (~badsektor@user/badsektor) (Quit: Leaving)
[15:59:05] <pycode1> https://bpa.st/QCLQ
[15:59:17] *** Joins: nomic (~nomic@185.198.243.236)
[15:59:37] *** Joins: vladoski (~foo@93-36-221-58.ip62.fastwebnet.it)
[16:00:35] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[16:01:08] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[16:01:55] <pycode1> bjs, here the strange thing is...ok i know the methods i am calling are requiring some memory but then...why python still has that memory usage...i mean whne a function is done is done if a function requires 100mb of ram...then the job is finished i suppose python freed that 100mb
[16:01:56] <pycode1> no ?
[16:02:25] <pycode1> what's wrong about that explanation ? (bad english aside)
[16:02:53] *** Quits: Batzy (~quassel@user/batzy) (Ping timeout: 256 seconds)
[16:04:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[16:05:17] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[16:05:53] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[16:07:50] *** Joins: withered_wolf (~withered_@97.112.15.92)
[16:08:30] *** Quits: zepolen_ (~zepolen@ppp-94-66-223-200.home.otenet.gr) (Quit: Konversation terminated!)
[16:09:21] <pycode1> can anyone explain this? https://bpa.st/IM6A ok that method used 175.0 MiB   but then? why python does not freed it after the "return None" ?
[16:09:50] <pycode1> python is not freed it because the next process' call has the same amount of memory usage
[16:09:56] <pycode1> so it is like python is holding something
[16:09:56] *** Joins: dvyd (~dvyd@autolab1-pc.eng.tau.ac.il)
[16:11:02] *** Quits: vanessa (~farawayas@103.160.128.7) (Quit: Leaving)
[16:11:14] *** Joins: thejonjon (~thejonjon@c-68-58-94-6.hsd1.in.comcast.net)
[16:12:23] <dvyd> Is there a way to get a list of files that match wildcards like on the Windows commandline? e.g. files = os.listdir(r"D:\this\path\*.csv")  ?
[16:12:40] *** Joins: stockholm (~Andreas@p200300d2c705110054749d4aa8d74816.dip0.t-ipconnect.de)
[16:12:43] <supakeen> dvyd: glob.glob, pathlib.glob, etc :)
[16:13:01] <dvyd> OK. thanks
[16:13:22] *** Joins: thevishy (~Nishant@2405:201:f005:c007:1d22:93e8:b240:6332)
[16:14:04] <thejonjon> dvyd: you can always os.walk() then parse yourself to get files-- see: https://www.tutorialspoint.com/python/os_walk.htm
[16:15:22] * thejonjon facepalms, grabbed link quickly- and assumed top result was going to be the python docs... darn you search engine
[16:15:43] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[16:16:56] <thejonjon> Question for room-- what version of python do you generally find yourself running in production environments? For myself, I try to edge new projects for 3.8, but most run 3.6- some 3.4-- but (I may be a bit of a luddite) only finally got off of 2.7 for some environments 4 or 5 years ago
[16:17:10] *** Quits: fbiagent_ (~fbiagent@user/fbiagent) (Quit: Leaving)
[16:17:25] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:17:28] <dvyd> thanks thejonjon. supakeen, glob.glob works perfectly for me. very intuitive,
[16:17:32] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[16:17:44] <supakeen> thejonjon: Currently for "us" everything is 3.8 as it's in the LTS we host on.
[16:17:52] <thejonjon> (I blame the long delay getting off of 2.7 on my own stubborness + NLTK was not a quick shift over to totally support python3)
[16:18:28] <supakeen> While moving away from that slowly with different deployments we try to track the latest stable release (3.10 at the moment) but that's still very experimental for us :)
[16:18:34] <thejonjon> supakeen: I am so happy they have the walrus operator- out of all the "usefull only in certain situations) it was something I really liked that PERL Had...
[16:19:02] <supakeen> If I *had* to put a number on it everything > 3.6 is OK as long as it still gets patches.
[16:19:03] *** Joins: Julian (~tos9@python/site-packages/Julian)
[16:19:08] <thejonjon> supakeen: I tried to do a mad push at one point- but ended up with some constraints-- and adopted some newer string formatting features to early
[16:19:28] <thejonjon> heh-- maybe in 2030 Debian's default will be 3.6
[16:19:56] <ChrisWarrick> define “default”?
[16:19:57] <thejonjon> (Not knocking Debian, it's a great flavor, but such a slow release cycle for their repos)
[16:20:13] <ChrisWarrick> debian stable ships with 3.7
[16:20:14] <thejonjon> At least last I checked-- I think it was defaulting 3.4
[16:20:17] *** Quits: henistein (~henistein@2001:8a0:c18a:f601:35cf:5152:f3f7:8def) (Quit: Client closed)
[16:20:20] <ChrisWarrick> sorry, 3.9*
[16:20:27] <thejonjon> ChrisWarrick- I must be using some old ass images then
[16:20:28] <thejonjon> haha
[16:20:39] <ChrisWarrick> buster (oldstable) is 3.7
[16:21:15] <ChrisWarrick> debian is slow (sid is still at 3.9), but not that slow
[16:21:56] <thejonjon> The slowness is what makes it pass the "pacemaker test" which is a term I use professionally... very very tried trusted and stable ersions
[16:22:37] <Yhg1s> (I'm afraid people have an extremely inflated idea of the stability of pacemakers.)
[16:23:20] <ChrisWarrick> thejonjon: I would consider building your own Python a good idea, especially if you’re dealing with Debian (which is famously crap when it comes to packaging Python)
[16:23:24] <thejonjon> Yhg1s- it's more of an unattainable idea-- if you write software- ask yourself, if you had a pacemaker would you trust it
[16:24:08] <Yhg1s> thejonjon: I wouldn't trust Debian on my pacemaker, no. It would undoubtedly fail to work with whatever my doctor uses to check on it.
[16:24:19] <thejonjon> ChrisWarrick: Thanks- but to be honest, I was just making some conversation -- just joined libera chat- I come from dalnet (when I was a children) then freenode a decade ago...
[16:24:26] <avu> the 'stable' in Debian refers more to the "does not change" definition of stable than the "has no bugs" one anyway
[16:24:42] <thejonjon> Yhg1s- But in a trapped on an island with no doctors- I'd trust Debian to keep ticking away
[16:24:57] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 240 seconds)
[16:24:58] <Yhg1s> yeah, still not doing that.
[16:25:04] <thejonjon> What would you run?
[16:25:14] <thejonjon> Assuming the battery powering your pacemaker would last for 10 years
[16:25:27] <Yhg1s> (It's also not *designed* to do that, because it's open-source to a fault. It's about the ability to keep it working, not the guarantee that it keeps working)
[16:25:40] <thejonjon> I totally agree--- debian is open source to a fault
[16:25:44] <Yhg1s> thejonjon: I doubt I would trust any OS that far.
[16:25:55] <thejonjon> Yhg1s that's why it's not a literal question
[16:26:12] <Yhg1s> thejonjon: perhaps the hypotheticals aren't worth considering then.
[16:26:24] *** Joins: Julian (~tos9@python/site-packages/Julian)
[16:26:26] <supakeen> We had a chat over here that quite some medical equipment comes with full schematics and history (likely also source?).
[16:27:03] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[16:27:15] <thejonjon> I disagree, Yhg1s- it's merely to encourage stable and reliable programming-- even if an unacheiveable goal-- I mean, in reality, in 10 years, technology changes a lot
[16:27:51] *** Joins: pagios (~pagios@life.is-a.beauty)
[16:27:57] <pagios> hello, i  have a file that  has a certain pattern,  i am greeing on smbPassword:      and want to get that line and the line+5 underneath it , how can i easily do that  tried grep -A5 it takes lineX,2,3,4,5 , i need only LineX and Line 5 to be printed out
[16:28:13] *** Quits: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[16:28:14] *** Quits: {4144} (~{4144}@46.56.66.225) (Ping timeout: 252 seconds)
[16:28:32] <thejonjon> pagios: In command line or in Python code?
[16:28:33] <Yhg1s> pagios: are you asking how you'd do it in Python, or with grep?
[16:28:57] <pagios> anything that works hopnestly
[16:29:14] <Yhg1s> pagios: well, in Python code you'd read the 5 lines and then just grab the first and fifth.
[16:29:19] <thejonjon> pagios: If you're using python- you could use readline when opening the file find what you're looking for-- then count to 5
[16:29:26] *** Quits: withered_wolf (~withered_@97.112.15.92) (Remote host closed the connection)
[16:30:07] *** Joins: ketiv (~ketiv@92.40.194.226.threembb.co.uk)
[16:30:10] <pagios> awk 'c&&!--c;/pattern/{c=N}' something like this
[16:30:14] *** Quits: five6433 (~five6@8.40.26.21) (Quit: The Lounge - https://thelounge.chat)
[16:30:28] <Yhg1s> pagios: this isn't really the place to ask about awk.
[16:30:39] <thejonjon> pagios: I think you're hoping Python will do something magical-- everyone seeks files more or less the same way
[16:30:41] *** Joins: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[16:30:47] *** Joins: withered_wolf (~withered_@97.112.15.92)
[16:30:47] <pagios> thanks
[16:30:50] <thejonjon> with open(filename) as file:
[16:31:02] <thejonjon> Whoops thought shift enter would endilne not submit
[16:31:04] <thejonjon> heh
[16:31:18] <avu> thejonjon: there are no multiline messages on IRC
[16:31:18] <Yhg1s> thejonjon: that's not how IRC works, no. It's strictly one line per message.
[16:31:32] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[16:31:34] <thejonjon> Been a moment since I was using IRC... and no idea what client -- I'm using a chromebook right now
[16:32:01] <thejonjon> Yhg1s: it's funny how quickly we become creatures of habit...
[16:32:28] <thejonjon> I still type /me and /afk on slack, gchat (or whatever it's called now) I don't care if it does not do it like it should
[16:32:50] *** Joins: {4144} (~{4144}@46.56.70.224)
[16:33:16] *** Quits: georgios (~georgios@user/georgios) (Ping timeout: 245 seconds)
[16:33:20] <thejonjon> since /afk predates brb-- oh internet lingo-- I was such an early nerd
[16:33:32] <petemc>  /me works on slack
[16:33:38] *** Joins: ham5urg__ (~ham5urg@84.46.6.172.dynamic-pppoe.dt.ipv4.wtnet.de)
[16:33:41] *** Joins: Forsaken87 (~quassel@2a02:908:1866:e360:63f3:d802:2473:110d)
[16:33:42] * thejonjon used to work on gchat until the recent update
[16:33:49] <thejonjon>  /me used
[16:34:00] <hexnewbie> That may be a job for pexpect... smb = pexpect.spawn('smbclient', [arg1, arg2]); smb.expect('smbPassword:'); smb.readline() # five times; smb.interact()
[16:34:37] *** Joins: slowtyper (~slowtyper@user/slowtyper)
[16:34:52] <thejonjon> hexnewbie: Do you use pexpect on a regular basis?
[16:34:54] *** Joins: luigibu (~luigibu@91.126.243.41)
[16:34:58] *** Joins: georgios (~georgios@user/georgios)
[16:35:01] <hexnewbie> thejonjon: No.
[16:35:25] <thejonjon> hexnewbie: No reason for me to ask just was curious...
[16:36:15] *** Joins: jamea (~jamea@177.239.81.39)
[16:36:32] *** Quits: ham5urg_ (~ham5urg@2a04:4540:6807:7800:dfdf:3e4e:1de5:1e03) (Ping timeout: 268 seconds)
[16:36:37] *** Quits: Thanatos (~Thanatos@197.210.47.93) (Ping timeout: 240 seconds)
[16:36:53] <jamea> hi i am connected to sql server... not specify the port... connected.. is possible get the port number used?
[16:36:56] <deniska> smbpasswd has -s argument for accepting passwords from stdin
[16:36:57] *** Parts: pagios (~pagios@life.is-a.beauty) (Leaving...)
[16:37:00] <thejonjon> pagios: If it were me- I'd just read in the file using open and using readline- find the line you want as starting-- then loop 5 or x times- then grab the following
[16:37:07] <thejonjon> 3306
[16:37:21] <Yhg1s> jamea: how are you connected to it?
[16:37:30] *** Joins: five6433 (~five6@8.40.26.24)
[16:37:35] <jamea> with connstr... only seE:
[16:37:51] <thejonjon> jamea: Default SQL port is 3306--
[16:37:55] <Yhg1s> jamea: which module, what classes or functions or methods.
[16:38:03] <jamea> DRIVER={ODBC Driver 17 for SQL Server};SERVER=DESKTOP-FFVBM70\DBITSOL;DATABASE=dbitsol;UID=sa;PWD=123
[16:38:10] <jamea> via pyodbc
[16:38:25] <thejonjon> jamea: I'd say it's connecting on 3306 or reference your odb driver config in /etc
[16:38:39] <jamea> thejonjon not mysql
[16:38:44] <avu> thejonjon: there is no such thing as a "default sql port"
[16:38:46] <jamea> its mssqlserver and no no use 1433
[16:38:57] <thejonjon> my bad
[16:39:14] *** Quits: luigibu (~luigibu@91.126.243.41) (Ping timeout: 252 seconds)
[16:39:20] <Yhg1s> jamea: I doubt you can find it out from pyodbc without poking at internals, and even then you could get the wrong answer. Why do you need to know the port?
[16:40:13] <jamea> i need do the same program with java.. and in java need know the port... if not, cant connect
[16:40:44] <Yhg1s> jamea: it's probably something you'll have to figure out from the server config, then, not the pyodbc connection.
[16:40:45] <thejonjon> ... you could always portscan yourself
[16:40:54] *** Quits: infernix (nix@2a02:22a0:bbb1:d500::2) (Quit: ZNC - http://znc.sourceforge.net)
[16:41:06] *** Quits: Forsaken87 (~quassel@2a02:908:1866:e360:63f3:d802:2473:110d) (Quit: No Ping reply in 180 seconds.)
[16:41:12] <jamea> any sql command?
[16:41:12] <thejonjon> Yhg1s: Agreed- if it's a non-standard port it would be in the odbc config not the pyodbc connection
[16:41:33] <thejonjon> jamea: Now that's a good question... not off the top of my head
[16:42:19] <thejonjon> but I don't use mssql unless forced to due to client constraints... I"m more of a MariaDB/MySQL sorta gentleman
[16:42:23] *** Joins: Forsaken87 (~quassel@2a02:908:1866:e360:88b0:2032:220f:3f73)
[16:42:31] <jamea> ok. in this sql connstr string:
[16:42:34] <jamea> DRIVER={ODBC Driver 17 for SQL Server};SERVER=DESKTOP-FFVBM70\DBITSOL;DATABASE=dbitsol;UID=sa;PWD=123
[16:42:40] <jamea> how to specify the portnumber?
[16:43:16] <Yhg1s> jamea: 'SERVER=servername,portnumber'
[16:43:19] <gitesh> why is it called django __model__ ?
[16:43:19] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[16:43:26] <thejonjon> comma after your sever before; and enter port
[16:43:26] <gitesh> what is a model in it?
[16:43:37] *** Joins: ianliu (~ianliu@179.93.19.87)
[16:43:44] <gitesh> model means A three-dimensional representation of a person or thing or of a proposed structure,
[16:43:49] <thejonjon> gitesh: It's called Model, because it's it's a ORM Database model--
[16:43:56] *** Joins: Thanatos (~Thanatos@197.210.47.93)
[16:44:00] <jamea> ok, worked
[16:44:09] <gitesh> thejonjon: is it 3d?
[16:44:11] <Yhg1s> gitesh: many things mean different things in different contexts.
[16:44:16] <thejonjon> gitesh- when talking about databases- model means "schema"
[16:44:19] <gitesh> oh ok
[16:44:21] <Yhg1s> gitesh: it is not the same as a three-dimensional representation.
[16:44:29] <thejonjon> English is a funny language
[16:44:47] <thejonjon> You could think of Model in this case like a "mold"
[16:44:55] <ianliu> I want to build a comprehension like so: [f(x) for x in iterable if cond(f(x))], but I dont want to call f(x) twice. Is it possible to use the walrus operator to avoid calling f twice? I tried [(y := f(x)) for y in iterable if cond(y)], but this doesnt work
[16:45:19] <thejonjon> a mold is a 3d cast to pour something into so it fits- so a Model in this term is a schema or "cast" in which fits the database
[16:45:31] *** Joins: whaley (~whaley@097-082-197-228.res.spectrum.com)
[16:45:39] <Yhg1s> ianliu: [x for y in iterable if (x := cond(y)]
[16:45:57] <thejonjon> ialiu: I'm really enjoying my first day in libera chat-- yes! That is a great place to use the walrus operator
[16:46:24] <ianliu> Yhg1s: thanks! any good reason why the other way doesn't work?
[16:46:43] <Yhg1s> ianliu: the condition has to be evaluated first.
[16:46:50] <ianliu> oh, ok
[16:46:52] <ianliu> makes sense
[16:46:56] <ianliu> thanks
[16:47:01] <thejonjon> (Other python nuances I really love-- the for...else structure-- it's not always useful but when it is-- it sure is handy)
[16:48:14] <ianliu> is thejonjon a bot?
[16:48:21] <Yhg1s> ianliu: no, just over-excited.
[16:48:25] <ianliu> hahaha
[16:48:37] <morning_dew_drop> I am just starting out with IRC since I need to do something with it for my software testing project.. I need a way to programmatically send IRC commands to a test server, in Python.. do you guys have any ideas?
[16:48:40] <thejonjon> I really wish python supported function overloading though...
[16:49:12] <thejonjon> morning_dew_drop: irc package
[16:49:21] <Yhg1s> morning_dew_drop: sure, that's called 'an IRC bot', and it's unfortunately a very common starter project for people. IRC is not an easy protocol. There are libraries that you can use for the difficult bits.
[16:49:34] <Yhg1s> morning_dew_drop: I recommend using one that uses twisted or trio or asyncio.
[16:49:57] <Bkid> just do what I did and read the entire IRC RFC top to bottom
[16:50:10] <Bkid> (do not actually do this)
[16:50:12] <thejonjon> Bkid: haha
[16:50:40] <thejonjon> morning_dew_drop: THere is a bit of a learning curve on NLTK- but they have a chatbot already written- I'd not be supprised if they also have samples deploying it on IRC
[16:50:42] <morning_dew_drop> my project is about software testing using fuzzing methods.. so I need to generate and send lots of inputs to the IRC server.. I don't need to parse the results so much, just for basic stuff like getting users..
[16:50:53] <thejonjon> morning_dew_drop: Fuzzy Logic?
[16:50:55] <Bkid> I was at some job, a call center I think, with very limited internet access, but enough to access RFCs, and I was just bored enough...
[16:51:07] <thejonjon> morning_dew_drop: As long as you don't use your project for evil...
[16:51:31] *** Joins: cosimone (~user@93-47-231-248.ip115.fastwebnet.it)
[16:51:44] <ianliu> thejonjon: I wish python extended comprehensions with a where clause :P
[16:51:48] <morning_dew_drop> no, fuzzing techniques to generate random inputs in an attempt to crash a program/find bugs.. in this case, an IRC server
[16:52:14] <ianliu> [thingy for x in iterable if cond(thingy) where thingy = f(x)]
[16:52:14] <morning_dew_drop> thejonjon: haha, not yet.. this one is just for learning..
[16:52:50] *** Joins: luigibu (~luigibu@91.126.243.41)
[16:52:53] <thejonjon> morning_dew_drop: not yet? Try not to strive to be evil :)
[16:53:23] <morning_dew_drop> but, I played around with IRC a bit. First, it seemed a bit complex with the event loop and Reactor pattern, and second, I didn't have much success, I tried sending the "NAMES" command to get list of users, but just got back an invalid command..
[16:53:36] <thejonjon> Bkid: I'm trying to think of the organization that "owns" all the technical specs-- and it's really depressing if you're not a university they try to charge like 300 bucks to get your hands on them
[16:54:13] <morning_dew_drop> thejonjon: haha! was just having fun, I try to be useful as much as possible!
[16:54:36] <Yhg1s> thejonjon: you're thinking of ISO, which is not the case with IRC. It's not relevant here.
[16:54:37] *** Joins: Xano (~Xano@2a00:23c4:4204:700:328f:5a5a:8290:3794)
[16:55:10] <Yhg1s> morning_dew_drop: well, taht's why I recommended using a library to handle it for you. If you really want to do it manually, that means figuring out all those details.
[16:55:11] <thejonjon> Yhg1s: (sorry, I was joking with Bkid but I think you're right, it's ISO not IEEE)
[16:55:33] <jamea> done the java problem, now i want run with python the program (run with python in win environment) now want run on linux...
[16:55:37] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Ping timeout: 240 seconds)
[16:55:44] *** Quits: five6433 (~five6@8.40.26.24) (Quit: The Lounge - https://thelounge.chat)
[16:56:10] *** Quits: llh (~llh@user/llh) (Read error: Connection reset by peer)
[16:56:11] <thejonjon> jamea: Which linux distro?
[16:56:12] <Bkid> just connect to an IRC server via terminal/command prompt, you'll figure it all out soon enough :P
[16:56:21] <jamea> debian 9
[16:56:51] <thejonjon> jamea: ```sudo apt-get install python3``` ? is that what you mean?
[16:56:57] *** Quits: luigibu (~luigibu@91.126.243.41) (Ping timeout: 240 seconds)
[16:57:36] *** Joins: llh (~llh@user/llh)
[16:57:40] *** Joins: XV8 (~XV8@2601:5cb:c001:50:bd72:41d1:6a0f:1d3a)
[16:58:20] <morning_dew_drop> Yhg1s: Yes, even I want to use a library for the basic stuff.. although I did not intuitive understand the IRC library.. I didn't find a way to get response for my command in a synchronous way, is it just how IRC protocol is designed?
[16:58:34] <Yhg1s> morning_dew_drop: it's how all network I/O works, really.
[16:58:47] <Yhg1s> morning_dew_drop: I don't know which library you mean by "the IRC library", though.
[16:59:00] <thejonjon> Yhg1s: I think morning_dew_drop might be asking about what you previous suggested using async vs. a single thread
[16:59:23] *** Joins: ychaouche (~ychaouche@user/ychaouche)
[16:59:25] <Yhg1s> thejonjon: please let them ask the question.
[16:59:53] <ychaouche> Hey guys, I'd like to compile python3 from the sources, I am looking at https://www.python.org/ftp/python/3.11.0/ and don't know which one to choose ? arch is amd64, os is linux.
[17:00:12] <morning_dew_drop> Yhg1s: https://pypi.org/project/irc/
[17:00:16] <ychaouche> but I see amd64a1/2/3, I don't know what that is
[17:00:34] <Yhg1s> ychaouche: the source is in the .tar.xz or .tgz files.
[17:00:52] <ychaouche> Yhg1s: what is a1,a2,a3 ?
[17:00:53] <Yhg1s> ychaouche: but that is the alpha for 3.11. You should start with 3.10.
[17:00:57] <Yhg1s> ychaouche: pre-releases.
[17:01:02] <ychaouche> oh alpha, ok
[17:01:25] *** Joins: Pickchea (~private@user/pickchea)
[17:01:29] <ChrisWarrick> ychaouche: also, consider using pyenv, it will build stuff for you
[17:01:35] <Yhg1s> ychaouche: I also recommend reading through devguide.python.org so you know what to expect and what to look out for.
[17:01:45] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[17:02:09] <thejonjon> morning_dew_drop: are you using irc.client_aio or irc.client?
[17:02:26] <morning_dew_drop> Yhg1s: I was hoping for a built-in function which would just return a list of users for me..
[17:02:34] <ychaouche> thank you guys
[17:02:34] *** Joins: semeion (~semeion@user/semeion)
[17:02:42] <morning_dew_drop> Yhg1s: I used the irc.client
[17:02:43] *** Quits: Thanatos (~Thanatos@197.210.47.93) (Read error: Connection reset by peer)
[17:02:44] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[17:02:54] <ychaouche> I'll take a look at pyenv
[17:02:56] <thejonjon> morning_dew_drop: So you want a "blocking" request. You send it then it returns the values straight and to the point?
[17:03:05] *** semeion is now known as mnemonic
[17:03:06] *** Joins: Thanatos (~Thanatos@197.210.47.93)
[17:03:08] <Yhg1s> morning_dew_drop: yeah, none of the libraries quite have that. You need to start an IRC client, have it connect, respond to events from the server and then send commands and process the resulting input.
[17:03:17] *** Quits: jamea (~jamea@177.239.81.39) (Ping timeout: 240 seconds)
[17:03:18] <morning_dew_drop> Yhg1s exactly!
[17:03:20] <Yhg1s> morning_dew_drop: IRC is not like HTTP.
[17:04:51] <thejonjon> morning_dew_drop: You'd have to wrap it youself-- IRC -- not 100% sure if it's half or full duplex
[17:05:03] *** Joins: trace987 (~trace@ip5b42963a.dynamic.kabel-deutschland.de)
[17:05:25] <Yhg1s> You can't provide a blocking interface to IRC, because you have to respond to messages from the server.
[17:06:01] *** Joins: arinov (~arinov@213.194.126.155)
[17:06:07] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[17:06:08] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[17:06:27] <thejonjon> Figured as much--- if there was blocking it'd be at a wrapper layer-- holding on the response waiting to return until satisifed
[17:07:15] <thejonjon> "simulating" blocking at the soft layer of it- not  in the communication protocol
[17:07:40] <morning_dew_drop> Yhg1s: I did not understand the pattern well enough. I wanted to get al list of channels and users first. And, then use this information in other commands.. And, with the SimpleIRCClient, once I start the client, it runs in the background..
[17:07:41] *** Quits: naranja (~orange@user/orangeboxcutter) (Remote host closed the connection)
[17:07:44] *** Joins: infernix (nix@spirit.infernix.net)
[17:07:53] *** Joins: fikran (~fikran@user/fikran)
[17:07:58] <Yhg1s> morning_dew_drop: not in the background. In the foreground. You need to do everything with callbacks.
[17:08:02] *** Joins: B4re (~l4yer@178.239.168.223)
[17:08:04] <thejonjon> morning_dew_drop: You might find a website to scrape that on a regular basis refreshes it's list of things
[17:08:56] *** Quits: ianliu (~ianliu@179.93.19.87) (Quit: WeeChat 3.4)
[17:09:06] *** Quits: l4yer (~l4yer@178.239.168.223) (Ping timeout: 260 seconds)
[17:09:28] *** Joins: naranja (~orange@user/orangeboxcutter)
[17:09:40] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[17:09:42] <thejonjon> morning_dew_drop: Are you trying to make something like: https://github.com/ipachev/irc_chatbot ? maybe it'll have a pattern you can look at?
[17:10:00] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[17:11:23] <morning_dew_drop> Yhg1s: Yes, you're right. Foreground..
[17:11:55] <Yhg1s> morning_dew_drop: the asyncio version makes it a little easier to write the code. (The callbacks are coroutines instead.)
[17:12:19] <morning_dew_drop> Yhg1s: So what I need to do is: (i) get channels and users (ii) execute fuzzed commands(using the channel and user names) without worrying about output (iii) PONG should be handled transparently
[17:12:37] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:13:25] <morning_dew_drop> what part goes in the callback, and what part before the client start up?
[17:13:42] <morning_dew_drop> thejonjon: looks useful.. gives me an idea of how to use the callbacks, will be reading it.. thank you!
[17:13:53] <Yhg1s> morning_dew_drop: nothing goes before the client startup. You do everything in callbacks.
[17:14:15] <Yhg1s> (although as I said, if you use the asyncio interface you write the callbacks as coroutines instead.)
[17:14:48] <morning_dew_drop> Yhg1s I haven't read up about the asyncio features and coroutines, so you mean they are easier..
[17:15:29] <Yhg1s> morning_dew_drop: yes.
[17:15:29] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[17:16:04] <morning_dew_drop> one more question: the callback paradigm of doing things is new to be, how do I write a generic dispatched with SimpleIRCClient which gets called for all events
[17:16:17] <morning_dew_drop> *is new to me
[17:16:27] <Yhg1s> morning_dew_drop: I'm not sure what you're asking, sorry.
[17:16:37] *** Joins: zaquest (~notzaques@5.130.79.72)
[17:17:54] <morning_dew_drop> sorry. I meant to ask, from what I explored SimpleIRCClient allow to write 'on-{event}' type callbacks which get triggered on respective events.. Is there a way to write a callback which is triggered for all events?
[17:18:57] <deniska> morning_dew_drop: what is SimpleIRCClient?
[17:19:25] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[17:19:42] <Yhg1s> morning_dew_drop: well, that would be the thing that dispatches to all the other events. It's the '_dispatcher' method.
[17:19:44] <morning_dew_drop> deniska: https://github.com/jaraco/irc/blob/main/irc/client.py
[17:19:51] <Yhg1s> deniska: python-irc.readthedocs.io
[17:20:05] *** Quits: thejonjon (~thejonjon@c-68-58-94-6.hsd1.in.comcast.net) (Remote host closed the connection)
[17:20:37] *** Quits: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com) (Quit: csmiga)
[17:20:38] *** Quits: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[17:20:44] <ychaouche> ChrisWarrick: I have an old pyenv install it seems, but pyenv install --list doesn't have a version that is more recent than 3.6 : https://clbin.com/pyX79
[17:20:54] *** Joins: _thejonjon (~thejonjon@c-68-58-94-6.hsd1.in.comcast.net)
[17:20:59] <ChrisWarrick> ychaouche: how did you install pyenv?
[17:21:04] <ychaouche> I don't even remember
[17:21:04] *** Joins: luigibu (~luigibu@91.126.243.41)
[17:21:13] *** Joins: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be)
[17:21:28] *** Quits: kindablue (~kindablue@irc.tpurist.com) (Quit: System Rebooting..)
[17:21:31] <morning_dew_drop> Yhg1s: yes, I see! I just need to overwrite this method..
[17:21:34] <ChrisWarrick> ychaouche: figure it out (`which pyenv`? check with your package manager?) and upgrade it
[17:21:36] <ychaouche> which pyenv says it is in : /home/ychaouche/.pyenv/bin/pyenv
[17:21:51] *** Joins: kindablue (~kindablue@irc.tpurist.com)
[17:21:54] *** _thejonjon is now known as thejonjon
[17:22:04] <deniska> ychaouche: is ~/.pyenv a git repo? Then you may try `git pull` when in this dir
[17:22:36] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:23:02] <ychaouche> deniska: I'm not too familiar with git, I tried git status inside of .pyenv it says I'm up-to-date with origin-master
[17:23:24] <ChrisWarrick> ychaouche: git pull origin master
[17:23:28] <ychaouche> https://gist.github.com/ychaouche/456723c8a0cb3685dce0d6e1546ebbab
[17:23:45] <thejonjon> ychaouche: up to date does not mean "up to date" it just means up to date since you're last pull
[17:23:58] <deniska> ychaouche: it's up to date with the local idea of 'origin/master', because git is not confusing at all
[17:24:03] <thejonjon> *your
[17:24:10] <ychaouche> :o)
[17:24:34] <thejonjon> ychaouche: As far as your last pull knows-- it's "Up to date" with itself
[17:24:40] *** Joins: five6433 (~five6@8.40.26.66)
[17:25:24] <ychaouche> I know this is not a git support channel, but what command do I issue to know if a particular directory is controled with git or not ?
[17:25:25] *** Joins: badsektor (~badsektor@user/badsektor)
[17:25:42] <morning_dew_drop> Yhg1s: so the IRC package would work well for my purpose? or, should I check out the twister library also?
[17:25:43] <ChrisWarrick> ychaouche: `git status`
[17:25:45] *** Quits: luigibu (~luigibu@91.126.243.41) (Ping timeout: 256 seconds)
[17:26:03] <thejonjon> ychaouche: .git is a hidden directory that contains all the info for what you're asking
[17:26:13] <Yhg1s> morning_dew_drop: 'twisted'. It depends on what you're looking to fuzz. If you really want to fuzz the protocol implementation, you probably need to write your own.
[17:26:25] <Yhg1s> (using twisted or trio or asyncio)
[17:26:46] <thejonjon> Probably first time installing IRC on windows in at least a decade- what's a decent IRC client fro windows? I know this is not a python question- but Konversation keeps locking up annoyingly
[17:27:00] <morning_dew_drop> Yhg1s: Yes, I need to test the protocol implementation. So, mostly I would be using the send_raw to send commands directly
[17:27:35] <morning_dew_drop> Yhg1s: I'll be using a Grammar-based fuzzer to generate fuzzed commands. and send them directly..
[17:28:01] <thejonjon> morning_dew_drop: Props to whatever teacher or class you're taking requiring this-- IRC is such a thow back-- I fugred most projects would ask people to make Twitter bots or something even more trendy... ha
[17:30:17] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 240 seconds)
[17:30:20] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[17:30:28] <morning_dew_drop> thejonjon: the material and assignments are well-thought, have a look, https://www.fuzzingbook.org/html/Grammars.html
[17:30:47] *** Quits: martums (~martums@user/martums) (Ping timeout: 268 seconds)
[17:31:50] *** Joins: luigibu (~luigibu@91.126.243.41)
[17:31:58] <morning_dew_drop> also, only because of this assignment, I got into IRC.. and everyone I have talked to here seems nice and polite! Never thought anonymous chats could be so nice..
[17:32:05] <thejonjon> morning_dew_drop: One of my co-workers who is a statistition has been collecting up Python books recently- I'll reccomend it to him.
[17:34:28] <morning_dew_drop> thejonjon: It's not about Python directly, but uses it quite well.. Also, a course book in the form of Jupyter notebook is such a great idea..
[17:34:43] <badsektor> thejonjon, hexchat
[17:35:36] *** Quits: pepper (~pepper@user/pepper) (Quit: Leaving)
[17:35:37] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[17:35:47] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[17:35:53] <thejonjon> morning_dew_drop: That's good to know-- and fits-- he is a programmer but more of a stats person-- but we are in big data- and Jypter notebooks does come in handy on how it blocks code chunks up-- since doing some deep learning and modeling is time consuming-- so  took me a realize to see it's value... since I'm a vanilla python person myself.
[17:37:11] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[17:37:36] <thejonjon> badsektor: /me tips hat- thanks..
[17:37:44] *** Quits: thejonjon (~thejonjon@c-68-58-94-6.hsd1.in.comcast.net) (Quit: Konversation terminated!)
[17:39:03] *** Joins: thejonjon (~thejonjon@c-68-58-94-6.hsd1.in.comcast.net)
[17:40:13] <morning_dew_drop> Yhg1s: One more question about how IRC servers respond: For a command like the 'users', why does the server has three different events..
[17:40:15] <morning_dew_drop>     "392": "usersstart",
[17:40:15] <morning_dew_drop>     "393": "users",
[17:40:16] <morning_dew_drop>     "394": "endofusers"
[17:40:28] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[17:40:29] *** Quits: luigibu (~luigibu@91.126.243.41) (Ping timeout: 256 seconds)
[17:40:45] <ChrisWarrick> morning_dew_drop: read the IRC protocol spec?
[17:40:46] <morning_dew_drop> what's the canonical way to parse and retrieve list of users?
[17:40:54] <Yhg1s> morning_dew_drop: because that's how IRC works. The list of users doesn't necessarily fit in a single message, so it does it that way.
[17:42:37] <bjs> IRC really is not a very good protocol :P
[17:43:20] *** Quits: KvL (~KvL@user/KvL) (Quit: KvL)
[17:43:23] <grym> it's the very best protocol cooked up with a wicked hangover in a dorm room, though!
[17:44:03] <morning_dew_drop> Yhg1s: oh man.. so my logic to get the list of users would be spread across these three callbacks? is there a piece of code I can use that does it for me?
[17:44:08] <thejonjon> bjs, grym: hey- back in the 1990s it was pretty amazing
[17:44:30] <grym> thejonjon: the eighties, too
[17:44:52] <morning_dew_drop> bjs: haha!
[17:45:02] <Yhg1s> morning_dew_drop: I'm sure some IRC libraries have support for that, sure. I don't know how well it would work with your desire to fuzz everything, though.
[17:45:06] <thejonjon> grym: at risk of exposing my actual age (a/s/l?? Haha) I was in middle school in the DALnet days
[17:45:13] <Yhg1s> morning_dew_drop: as for 'three separate callbacks', I'll refer back to coroutines.
[17:46:36] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[17:46:36] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[17:46:42] <thejonjon> grym: My older brother and his friends started off in Undernet I believe... but when I was a kiddo I DALnet was the new up and coming force...
[17:46:53] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[17:47:10] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[17:48:08] *** Quits: Fremen (~Fremen@161.9.187.28) (Quit: Leaving)
[17:48:14] *** Joins: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com)
[17:48:29] <morning_dew_drop> Yhg1s: okay, do you know if the IRC package supports that? I want to get the list of channels and users, and use that for my fuzzer(instead of random names).. I'll look at coroutines, seems like they solve many problems!
[17:49:12] <morning_dew_drop> thejonjon: I looked up DALnet, it says about itself 'is widely regarded as the most "friendly" of the major IRC networks'.. is that so? are there other networks with a good Python community?
[17:50:19] <thejonjon> morning_dew_drop: This was back in the day- until I randomly stumbled on libera last I checked it was freenode that had all the good programming channels and what not- but aparently there was some drama- and libera comes from people who left freenode or something- not really sure
[17:51:05] <Bkid> do irc servers even have a NAMES option outside of channels? I don't think they do. According to the RFC, a channel name is specified
[17:51:45] <thejonjon> Bkid: That's a good question-- morning_dew_drop- which IRC server are you trying to scrape usernames from?
[17:52:04] <Yhg1s> morning_dew_drop: I think 'irc' keeps track of users in the Channel object, but I don't remember the details.
[17:52:17] *** Quits: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com) (Ping timeout: 240 seconds)
[17:52:31] *** Joins: Klinda (~superleag@user/klinda)
[17:52:43] <Bkid> ahh wait yeah you can. From the RFC under "NaMES message": If no <channel> parameter is given, a list of all channels and their
[17:52:44] <morning_dew_drop> I thought the channel and server argument for the NAMES command was optional..
[17:52:44] *** Joins: Auron (~Auron956@user/auron)
[17:52:45] <Bkid>    occupants is returned.
[17:53:02] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 240 seconds)
[17:53:04] <Bkid> it's optional per the RFC but probably restricted by the IRCd
[17:53:55] <morning_dew_drop> I want to fuzz the program https://github.com/jrosdahl/miniircd.. so, a server with random clients created using miniircd
[17:54:47] *** Quits: grooverman_ (~grooverma@177.102.117.95) (Read error: Connection reset by peer)
[17:56:10] <Bkid> ahh, very simple IRC servers may not have that restriction
[17:56:13] <morning_dew_drop> do you get any output when you run the /NAMES command without channel name
[17:56:52] *** Joins: grooverman (~grooverma@177.102.117.95)
[17:57:20] <morning_dew_drop> I am using the lebara web-client, and it doesn't do anything with the names command
[17:58:02] <morning_dew_drop> doesn't even come up in auto-complete.. does it work for other clients?
[17:58:23] <thejonjon> ah- security focus--- not my field specifically- I am sufficently confused by your statement about using the lebara web-client-- are you pin testing the client or the server itself...
[17:58:46] * thejonjon is out of his element I'm just going to see if my buddy Little Bobby Tables is hanging around
[17:59:24] *** Joins: Julian (~tos9@python/site-packages/Julian)
[18:00:05] <morning_dew_drop> right now, I am just using the web-client to get a feel for the IRC.. later, I want to fuzz random commands programatically, and hit them on the miniature MINIIRC and try to crash it/find bugs..
[18:01:04] <thejonjon> (You're using the IRC on the line ;))
[18:01:20] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:03:18] <Bkid> some clients restrict use of the NAMES command as well. For example, weechat (or maybe glowing-bear?) don't allow its use in the server buffer, and requires you to execute it only in a channel
[18:03:22] <thejonjon> Are you trying to Fuzz an IRC framework deployed, the server it's running on, or trying to find exploits in the protocol itself?
[18:04:24] <remote> I wish I could signal my python process to reload its code
[18:04:29] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 250 seconds)
[18:04:40] <thejonjon> remote: Are you using Jyptier notebooks?
[18:05:35] <remote> no, just asyncio
[18:05:50] *** Joins: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com)
[18:05:57] <thejonjon> morning_dew_drop: Looking to Fuzz IRC's protocol would be akin to looking for explotes in XMPP, HTTP, etc
[18:06:19] <thejonjon> remote- you can reload modules using the reload() builtin (depending on the python version).
[18:06:30] <Bkid> https://i.imgur.com/KfokEUD.png   NAMES does appear to work on miniircd, fwiw
[18:07:00] <thejonjon> remote: you could setup a Command and Control trigger- to force a reload of the code itself, not sure if that would actually work with asyncio or anything-- but in general that will force a reload of an import
[18:07:03] <remote> interesting, maybe I should modularize my irc client functions and reload on a certain syscall
[18:07:15] <remote> err.. not syscall but process signal
[18:07:33] <Yhg1s> remote: reloading is problematic for many reasons. I don't recommend it.
[18:07:43] <Yhg1s> remote: restart the process instead. You can do so without losing connections.
[18:08:04] <thejonjon> remote: I agree with Yhg1s-- it absolutly is problematic--- if you're doing it for fun- no worries- but I'd never do that in any production environment
[18:08:09] <remote> that's what I'm trying to avoid but how can I keep the connection alive through a process restart?
[18:08:20] <thejonjon> remote: Pickel it?
[18:08:35] <remote> ah ok
[18:08:42] *** Joins: nyah (~nyah@94.6.71.219)
[18:08:51] <remote> awesome, thanks!
[18:08:52] <thejonjon> remote: Why does the connection need to stay alive? You could make a secondary process that is just the connection and communicate with it... (pickeling it will most likely NOT work)--
[18:08:56] <Yhg1s> god no, never pickle.
[18:08:59] <thejonjon> haha
[18:09:03] <Yhg1s> (you can't pickle connections anyway.)
[18:09:15] <thejonjon> Yhg1s: As it never should of been even considered :)
[18:09:36] <remote> it's just annoying me, it doesn't need to stay alive, though I can anticipate being throttled at some point and that could become even more annoying
[18:09:48] <Yhg1s> remote: the thing to do is write a status file somewhere describing what each connection's state is, clear the close-on-exec flag on the file descriptors, and exec the next process.
[18:09:49] <thejonjon> then serialize your spot
[18:09:53] <thejonjon> then load it in on load
[18:10:12] <Yhg1s> remote: but if you don't actually need to keep the connections open, easier to just reconnect.
[18:10:17] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[18:10:49] <thejonjon> remote: if if you want to be extra badass, using a message broker and a direct queue to stack all tasks- then you can run as many processors as you want and they'll just pop off tasks FIFO-- and if they die or restart- they'll just keep processing the stack when back online
[18:11:02] <remote> yeah it's a bit overkill for the need and pointless to seperate the connection from the process since it'll die without it shortly anyway
[18:11:21] <Bkid> Windows when I go to delete the miniircd folder: "miniircd.py is a system file. If you delete it..."  Umm, thanks for the concern Windows, but I don't think it is.
[18:11:29] *** Quits: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com) (Ping timeout: 268 seconds)
[18:11:41] <remote> thejonjon: I want to be extra bad ass for sure
[18:11:56] <remote> you sound bad ass yourself maybe you could help me write this search engine
[18:12:20] <thejonjon> remote: install RabbitMQ - you can use either MQTT or AMQP it's one of my favorite things-- beacuse of it's crazy stablity compared to the norm.
[18:12:54] <thejonjon> Spin it up wherever- use python pika to pop off items from a task list direct queue-- then you can spin up as many processors as you like assuming it does not need to be liner
[18:13:18] <remote> with celery?
[18:13:25] <morning_dew_drop> 'There are two types of channels allowed by this protocol.  One is a distributed channel which is known to all the servers that are connected to the network. These channels are marked by the first character being a only clients on the server where it exists may join it. These are distinguished by a leading '&' character. ' - this is what the RFC
[18:13:26] <morning_dew_drop> says, and I cannot understand the 3rd sentence at all..
[18:13:26] <thejonjon> and if you have to restart them or what not- that's fine-- the queue will just build up. So you have one program that adds tasks to the queue, another program that pops FIFO items out and runs them...
[18:13:42] <remote> I haven't played with that for a while now but am eager to get back into it
[18:13:59] <remote> pika?
[18:13:59] *** Quits: weedmic_ (~weedmic@5.102.235.240) (Read error: Connection reset by peer)
[18:14:03] <Yhg1s> morning_dew_drop: channels starting with '#' are shared between IRC servers. Channels starting with '&' are not shared between IRC servers.
[18:14:12] <thejonjon> It's a RabbitMQ python wrapper
[18:14:14] <thejonjon> (client)
[18:14:17] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[18:14:31] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[18:16:29] <remote> in the end I think you're right, I'll ship everything directly in queues
[18:16:55] <thejonjon> remote: I have several things in production right now that use this pattern, granted they're already for live streaming machine sensors that run all day long, so we already were using message brokering, but some legacy systems were doing cron dumps into CSV files and required regular refeshing into the message stream. So I use watchdog (which is a great python package that monitors file system read and writes very effiecnetly) to
[18:16:55] <thejonjon> detect new file drops and when they're done beting written, toss them into a processing queue with their absolute location-- then wait for the processor infinate worker for that type to pop them off, and convert them into AMQP events line by line using effiecenet buffering)
[18:17:02] *** Joins: PJBoy (~PJBoy@user/pjboy)
[18:17:27] <thejonjon> It's not a bad pattern... but I mean, again-- there is probably and easier way to do it if you're not already needing a message broker server or it's not that critical
[18:17:29] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[18:17:32] <morning_dew_drop> Yhg1s: thank you, I was reading the old RFC, and it has grammatical mistakes.. I started reading the 'Message format grammar'..
[18:18:07] <morning_dew_drop> 'command    =  1*letter / 3digit' - I can't quite understand what does 1*letter mean?
[18:18:22] <morning_dew_drop> I know all commands have 3 digit numeric codes.. are there also letters for commands
[18:18:24] <Bkid> I don't know that & channels are used anymore
[18:19:01] *** PJBoy is now known as Guest6061
[18:19:01] *** Quits: Guest6061 (~PJBoy@user/pjboy) (Killed (osmium.libera.chat (Nickname regained by services)))
[18:19:36] *** Joins: PJBoy (~PJBoy@user/pjboy)
[18:21:37] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-5470-5f5b-0780-9db5.res6.spectrum.com)
[18:23:49] *** Quits: infernix (nix@spirit.infernix.net) (Ping timeout: 268 seconds)
[18:24:09] <ychaouche> ChrisWarrick: is there something similar to install latest version of pip ?
[18:24:15] <ychaouche> pip install --upgrade pip failed
[18:24:21] <ChrisWarrick> ychaouche: how did it fail?
[18:24:36] <leitz> Those of you whose teams work in multiple programming languages; do you do language specific options when there's a common option? For example, Python's str.formt, f string, and the C style printf.
[18:25:00] <ChrisWarrick> leitz: if you’re writing python, write python, not pycjavaperlrust.
[18:25:06] <ychaouche> ChrisWarrick: https://gist.githubusercontent.com/ychaouche/f62eb94751843120f7ae8fc3c6840517/raw/1af0cd5e9e0112beece422f8814bcc00dcd36068/gistfile1.txt
[18:25:16] <ChrisWarrick> leitz: f-strings are the most natural way to write formatted strings in python
[18:25:36] <ychaouche> my current python install doesn't know about the new syntax introducing types
[18:25:40] <ychaouche> I guess
[18:25:41] <ChrisWarrick> ychaouche: it looks like your `pip` is for a dead python 2
[18:25:56] <ychaouche> so, install from sources ?
[18:25:57] <ChrisWarrick> ychaouche: no
[18:26:11] <ChrisWarrick> ychaouche: use the pip appropriate for your modern python install
[18:26:17] *** Quits: ychaouche (~ychaouche@user/ychaouche) (Quit: Konversation terminated!)
[18:26:19] <ChrisWarrick> ychaouche: that might be `pip3`, or` python3 -m pip`
[18:26:22] *** Joins: Julian (~tos9@python/site-packages/Julian)
[18:26:41] <Bkid> guess he didn't like the answer xD
[18:27:15] <leitz> ChrisWarrick, sadly enough I'm often the language instigator at work sites. While f strings are better, helping folks transition from other languages is often easier done by keeping things similar.
[18:27:22] <supakeen> leitz: Aside from that, they're not common they might look alike.
[18:27:36] *** Joins: TechTheory2 (~lwait@ip68-110-3-17.tc.ph.cox.net)
[18:27:39] <supakeen> But %-formatting in Python is merely printf-like.
[18:28:01] <thejonjon> leitz: It really depends. I'm not sure what you're asking really-- string templating in general is highly varied across languages (interpreted vs. primitives'). I mean, if someone who is specialized in a different language- they should be able to pick up on any other syntax-- even if it's not their native language
[18:28:22] <leitz> And, ChrisWarrick, I don't know about *your* brain capacity, but mine is pretty limited. I'd love to be able to keep multiple langauge skills in my head, but that doesn't seem to be the case. I'm mildly jealous of those of you who can.
[18:28:23] <SnoopJ> leitz, I'm on a multi-language team, we use f-strings and occasionally str.format()
[18:28:23] *** Joins: hackers (~hackers@user/hackers)
[18:28:40] <thejonjon> leitz: Ahh- I see your point. You're between a rock and a hard place. People don't like to change, but if you find "common ground" you might alienate everyone.
[18:29:00] *** Joins: ychaouche (~ychaouche@user/ychaouche)
[18:29:09] <ychaouche> ChrisWarrick: there is no modern python install
[18:29:14] <ChrisWarrick> ychaouche: ?
[18:29:18] <ChrisWarrick> ychaouche: do you not have a python 3?
[18:29:22] <ychaouche> I do
[18:29:25] <ychaouche> oh
[18:29:39] <ChrisWarrick> leitz: string formatting is just one example, but there are many differences between, say, python and java, be it public/private access levels, everything-is-a-class, etc etc etc
[18:29:41] <ychaouche> is there a pip3 ?
[18:29:44] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:29:47] <ChrisWarrick> ychaouche: pip3, or python3 -m pip
[18:29:51] <ychaouche> I can only see pip and pip2
[18:29:52] <ychaouche> ok
[18:29:53] <SnoopJ> ychaouche, there often is, but I recommend `python3 -m pip`
[18:29:59] <thejonjon> leitz: I am actually dyslexic when it comes to human langauge- but code is pretty easy for me to read. It's just logic with generally similar concepts with different syntax. I mean, we always can just google [language] string formatting if we don't know it off top of head
[18:30:05] <TechTheory2> are you on windows?
[18:30:07] <ChrisWarrick> leitz: “writing java in python” typically leads to bad code
[18:30:23] <thejonjon> ChrisWarrick: Hahah! Totally agree
[18:30:23] <leitz> thejonjon, yeah. Far as I can tell, Python 3 has everything i'm interesting in doing.
[18:30:27] <TechTheory2> you have to go to python.org and download it
[18:30:30] *** Joins: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com)
[18:30:35] <SnoopJ> which is sometimes part of a "look, we wrote an AI to translate [other language] to bad Python" paper :/
[18:30:41] <thejonjon> leitz: So are you looking to convert the multi-language team into a python shop?
[18:30:47] <TechTheory2> then do pip3 install whatever the package is
[18:31:26] <ychaouche> ok thanks SnoopJ
[18:31:33] *** Joins: luigibu (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net)
[18:31:36] <leitz> After the first time I learned Python, my shell, perl, C, and Ruby started to look a lot like Python. Once I got used to the "whitespace as syntax", my code got a lot better.
[18:31:38] <thejonjon> leitz: My biggest concern would not be string formatting-- it'd be getting people over whitespace as blocks... string formatting is
[18:31:44] <TechTheory2> do you guys code in the cloud like replit or locally just curious
[18:31:51] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 268 seconds)
[18:31:51] <thejonjon> leitz: Ha- I was just about to mention that
[18:31:57] <ChrisWarrick> leitz: At $dayjob, we use a fairly obscure language, which most folks learn on the job, and we often take interns too. We don’t limit ourselves regarding language features too much just because someone might not have seen a language feature, clarity of code is more important to us than some arbitrary common ground.
[18:32:09] <ychaouche> I get : /usr/bin/python3: No module named pip
[18:32:19] <SnoopJ> ychaouche, is this a Debian or Ubuntu system?
[18:32:21] <ychaouche> python3 -m pip install --upgrade pip
[18:32:21] *** Joins: Julian (~tos9@python/site-packages/Julian)
[18:32:24] <TechTheory2> pip3 install
[18:32:31] <ychaouche> there is non pip3
[18:32:34] <thejonjon> TechTheory2: I code on my local development computer- There are some benifits to coding in "the could" since setting up a local environment is a common hurdle (espeically if you're like me and are a consultant) which requires sooooo many slight varations
[18:32:44] <ychaouche> SnoopJ: it is an old linux mint yes
[18:33:04] <leitz> ChrisWarrick, sounds like your $dayjob has more brains than a lot of places.
[18:33:10] <TechTheory2> what ever the package is there package on here https://pypi.org/
[18:33:18] <thejonjon> TechTheory2: There are benifits and draw backs to both. Espeically with people being remote -- if it was back at the office- they'd have their office computer we could have clean and ready to go for them-- with the correct versions of docker, python, etc, etc, etc, etc, etc...
[18:33:19] <SnoopJ> ychaouche, you probably need to install the python3-pip package.
[18:33:24] *** Joins: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com)
[18:33:27] <SnoopJ> (Debian really likes breaking Python)
[18:33:28] <ychaouche> ok
[18:34:42] <thejonjon> ChrisWarrick: I am in the same boat as you are-- we have a lot of [not named programming language] "programmers" I say it in quotes because... I mean, sure technically they program, but I'd not really call them "normal" developers
[18:35:06] <leitz> thejonjon, is that "normal" in a good way, or?
[18:35:09] *** Quits: naranja (~orange@user/orangeboxcutter) (Ping timeout: 276 seconds)
[18:35:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[18:35:21] <ChrisWarrick> leitz: Does it really require more brains? Nowadays tech stacks are very diverse, so that skills acquired in job/school A might not transfer to job B, and then there is understanding the business itself
[18:35:23] <SnoopJ> it is difficult to imagine how such a division could be good
[18:35:52] <ychaouche> I don't understand how is this a successful install : https://gist.githubusercontent.com/ychaouche/07aae59b69b820592edc6713d228f264/raw/65a25e87f74428e326ac1a8003f345bdae1f3ba1/gistfile1.txt
[18:36:01] *** Quits: luigibu (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[18:36:01] *** Joins: Macuser (~Macuser@2600:1003:b45f:85f8:ddd8:6ee8:fe69:91ea)
[18:36:07] <thejonjon> leitz: Let's just say when people call me "an open source developer" or call something "The open source solution" die a little inside... since you can just say "developer" and "open source solution" is not technically right
[18:36:12] <TechTheory2> is window good for programmers because I have an desktop and I woundering if I should install linux for programming
[18:36:17] <ChrisWarrick> ychaouche: python3 --version?
[18:36:22] *** Joins: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy)
[18:36:26] <leitz> thejonjon, the reason I ask is that my career growth has been mostly self taught, so I've missed out on a lot of compsci background.
[18:36:42] <ychaouche> ChrisWarrick: 3.4.3
[18:36:47] <ChrisWarrick> TechTheory2: nowadays, windows 10/11 + wsl 2 are pretty great for many things
[18:36:55] <ChrisWarrick> ychaouche: that’s ancient
[18:36:57] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 240 seconds)
[18:37:00] <ChrisWarrick> ychaouche: perhaps upgrade your OS first?
[18:37:06] <ychaouche> not fun
[18:37:15] *** remote is now known as alphabeta
[18:37:15] <ychaouche> installing from sources is fun
[18:37:21] <SnoopJ> TechTheory2, you don't need to change operating systems to program, especially with Python.
[18:37:25] <thejonjon> ChrisWarrick, leitz: That's why I love me some functional programming and micro services-- who cares what language- rid of the legacy rotted out massive dependency base. Let programs be free and talk to eachother using a common language like JSON and simply share some good documentation
[18:37:26] <leitz> ChrisWarrick, I've had to change languages a few times, and I usually struggle with syntax for a long time.
[18:37:39] *** Quits: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com) (Ping timeout: 250 seconds)
[18:37:58] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[18:38:08] <TechTheory2> I know that but why do people say linux is better for programmers
[18:38:09] <leitz> thejonjon, have you read the book "Grokking Simplicity"? It's about FP, and explained it in a way I understood.
[18:38:11] <thejonjon> ychaouche: I detect sarcasm... make sure you do the -j and enter the correct # of cores
[18:39:04] <thejonjon> leitz: Boooook? read? hmm.... not heard of it.. unless-- did I write it?
[18:39:20] <ChrisWarrick> ychaouche: you’re on a 2015-era distro, that’s ancient in unix times
[18:39:33] <thejonjon> leitz: Kidding I think I'd recall if I wrote a title that said Grokking in it... maybe
[18:39:55] <leitz> thejonjon, ChrisWarrick a friend, who is a much better programmer than I, feels 90% of what we do today will be serverless in the some near term future.
[18:40:00] <SnoopJ> ychaouche, you'll need to install a specific version of pip compatible with your (indeed very outdated) Python. Try: `python3 -m pip install "pip<=19.2"`
[18:40:14] <SnoopJ> err, sorry, that should be "pip<19.2"
[18:40:18] <leitz> Okay, I need to go read up on f strings.
[18:40:24] <SnoopJ> (19.2 is the version of pip that dropped support for 3.4)
[18:40:30] <thejonjon> leitz: Don't you just love the term "serverless" since... I don't think I have to point it out.. really they're just syaing everything will be FaaS
[18:41:09] <ychaouche> thejonjon: no I was not being sarcastic at all
[18:41:17] <thejonjon> leitz: I honestly think 90% is a bit of an overshoot. the Serverless Module has benifits for sure-- but just like everything else there is no "perfect fit for all"
[18:41:19] <leitz> thejonjon, oddly enough, I really love it. I come from a server ops background and taught myself to code so I could fix all the crap the developers threw over the wall.
[18:41:26] <SnoopJ> leitz, they're pretty straightforward, all the same stuff you're used to with regular string literals, with interpolation syntax that is basically exactly what str.format() uses, but without all the boilerplate it demands.
[18:41:33] <ChrisWarrick> leitz: if you understand str.format, f-strings are basically the same, except they use variables from your current locals/globals namespace
[18:41:56] <ychaouche> thejonjon: I've had very few troubles installing from sources  compared to the many confusing errors I get when using package managers of any sorts
[18:42:13] <thejonjon> ychaouche: Your workplace is lucky to have you. That one person who really loves installing things from source. I used to have a guy who LOVED writing unit tests.. and would be like- hey, want me to write test for you. He got such satisfaction doing that... I envy that... every office needs someone like that
[18:42:28] *** alphabeta is now known as alphabeta[m]
[18:42:31] <ChrisWarrick> leitz: target = "world"; greeting = f"hello {target}"   is the same as   target = "world"; greeting = "hello {target}".format(target=target)
[18:42:33] <SnoopJ> ychaouche, installing from source or not-source does not change the fact that your attempt to upgrade pip here is giving you a version that explicitly does not support 3.4. You will need to install a version before 19.2 if you want to use this old version.
[18:42:39] <SnoopJ> a pip* version before 19.2
[18:43:09] <TechTheory2> how would Learn ai with python
[18:43:11] <ychaouche> SnoopJ: no I want to use latest version everywhere
[18:43:16] <SnoopJ> ychaouche, you can't.
[18:43:25] <ychaouche> SnoopJ: including python3
[18:43:28] <ChrisWarrick> ychaouche: you should use the latest version of your distro then
[18:43:42] <SnoopJ> ychaouche, in pip 19.2, support for 3.4 was dropped, flat out. More modern versions do not support anything older than 3.6.
[18:43:55] <thejonjon> TechTheory2: There are some good books I can find you some titles if you like. NTLK is always a deep dive- but very statistical
[18:43:57] <ychaouche> SnoopJ: then I'll install a new python3
[18:44:14] <SnoopJ> ychaouche, that would be a very good idea. I recommend 3.8
[18:44:25] <ychaouche> SnoopJ: I was going to install it with pyenv
[18:44:29] <SnoopJ> pyenv is great
[18:44:30] <ychaouche> but pyenv relies on pip
[18:44:37] <ychaouche> so now I want latest pip
[18:44:43] <ychaouche> but pip relies on python3
[18:44:48] <TechTheory2> just fyi python 3.9 out
[18:44:51] <SnoopJ> pyenv most certainly does not have pip as a dependency, can you explain what you mean?
[18:44:53] <thejonjon> SnoopJ: I still use venv
[18:44:54] <ChrisWarrick> ychaouche: pyenv is independent of pip and python
[18:45:02] <SnoopJ> thejonjon, venv and pyenv don't do the same thing
[18:45:03] *** alphabeta[m] is now known as remote
[18:45:13] <ychaouche> ah, then I need to paste that error message again
[18:45:13] *** Quits: xaltsc (~xaltsc@user/xaltsc) (Read error: Connection reset by peer)
[18:45:14] <SnoopJ> (pyenv is very badly named)
[18:45:14] <thejonjon> SnoopJ, ah-- What am I thinking of--
[18:45:15] <sudomann> Does pip parse glob-like names badly or something? I have a step in my Dockerfile: `pip install /mnt/tensorflow-*.whl` which returns "ERROR: tensorflow-2.6.1-cp37-cp37m-linux_aarch64.whl is not a supported wheel on this platform.", while `pip install $(find /mnt/tensorflow-*.whl)` works just fine
[18:45:20] <sudomann> Whats hapeneing here
[18:45:21] <SnoopJ> thejonjon, pipenv maybe
[18:45:57] <Yhg1s> sudomann: pip wouldn't be the thing parsing the glob. That would be the shell.
[18:46:46] <ChrisWarrick> sudomann: and in the second example, the shell does the glob, not find
[18:46:50] <SnoopJ> I have done `pip install path/to/something*.whl` before, but only ever in cases where there is just one such wheel and it is platform-appropriate
[18:46:50] <thejonjon> oh SnoopJ: I was thinking of virtualenvwrapper... virtualenv works fine for me-- since I have to have half a dozen python versions installed across my projects...
[18:47:12] <TechTheory2> I will come back later talk later guys
[18:47:14] <SnoopJ> thejonjon, okay. pyenv doesn't manage environments. It downloads and compiles Python.
[18:47:19] *** Parts: TechTheory2 (~lwait@ip68-110-3-17.tc.ph.cox.net) ()
[18:47:23] *** Joins: jokoon (~eio@2a01:e0a:542:b20:99ae:cc95:93c6:4076)
[18:47:23] <thejonjon> SnoopJ, Oh-- that's totally different
[18:47:26] <SnoopJ> indeed
[18:47:27] *** Joins: TechTheory2 (~lwait@ip68-110-3-17.tc.ph.cox.net)
[18:47:29] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[18:47:34] *** Parts: TechTheory2 (~lwait@ip68-110-3-17.tc.ph.cox.net) ()
[18:47:52] <ychaouche> Ok I misread the error message
[18:47:54] <ychaouche> https://gist.githubusercontent.com/ychaouche/d8555c0ce94ba812acb9e1f54dd142b5/raw/e16c89bc07f4b4fda7daac0de6f4630bd461e50f/gistfile1.txt
[18:48:01] <thejonjon> SnoopJ: Why is that needed? Use with pipeline deployments and containers I'd imagine?
[18:48:03] <ychaouche> still says successful install
[18:48:05] <ChrisWarrick> sudomann: try:  pip install -i /mnt tensorflow
[18:48:06] *** Joins: damonlynch (~ngaio@static-68-235-44-37.cust.tzulo.com)
[18:48:08] *** Joins: junktext__ (~junktext@gateway/vpn/pia/junktext)
[18:48:28] *** Quits: hackers (~hackers@user/hackers) (Remote host closed the connection)
[18:48:30] <ChrisWarrick> sudomann: or perhaps -f
[18:48:41] <sudomann> SnoopJ: there's only 1 wheel in /mnt
[18:48:51] <ychaouche> and still no recent version of python shown with pyenv versions
[18:48:52] <ychaouche> https://gist.github.com/ychaouche/dd726b6cb5afa4a0e41b0d78e7fe9e69
[18:48:53] <SnoopJ> ychaouche, install the libssl-dev package if you want the ssl extension
[18:49:19] *** Joins: xaltsc_ (~xaltsc@user/xaltsc)
[18:49:22] <ChrisWarrick> ychaouche: it tells you to look at https://github.com/pyenv/pyenv/wiki/Common-build-problems
[18:50:03] *** Joins: zeden (~zeden@user/zeden)
[18:50:06] <ychaouche> Ok, I'll try that tomorrow, let's call it a day
[18:50:10] <SnoopJ> sudomann, are you sure you used the same pip in these two invocations? That error message looks an awful lot like the wheel you were trying to install is platform-incompatible with the target runtime
[18:50:12] <ychaouche> thank you all guys, you all rock
[18:50:18] <ychaouche> especially you Yhg1s
[18:50:30] *** Parts: ychaouche (~ychaouche@user/ychaouche) (Konversation terminated!)
[18:51:55] *** xaltsc_ is now known as xaltsc
[18:54:08] <SnoopJ> thejonjon, it's a convenient way to install versions locally, and it has a little "shim" system that sits in your PATH and determines which thing `python3` actually points at based on your global and local configuration. I don't use that stuff all that much, though, it has some jank.
[18:54:56] <sudomann> SnoopJ: There is only 1 wheel and I built it, so it should work without a hitch on the same machine i built on
[18:54:57] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[18:55:17] <SnoopJ> sudomann, I don't know if that means "yes" or "no" to the question I asked you.
[18:55:24] *** Joins: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com)
[18:55:33] *** Joins: mickey8 (~user@user/mickey)
[18:55:49] <jokoon> I wrote this: thing_str = f' {" | ".join([f'({" ".join(c)})' for c in thing]) if thing != [] else "x"}'
[18:56:01] <jokoon> I think I went too far
[18:56:07] <sco1> Yeah
[18:56:08] *** Joins: TechTheory2 (~lwait@ip68-110-3-17.tc.ph.cox.net)
[18:56:22] <thejonjon> jokoon- yep- not very pythonic
[18:56:28] <sco1> Good for twitter though
[18:56:31] <jokoon> I can't nest f"" strings?
[18:57:04] <SnoopJ> you can, but that doesn't make it any less illegible
[18:57:14] <jokoon> why not pythonic?
[18:57:24] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[18:57:24] <thejonjon> SnoopJ, I'll take your word on it-- using virtualenv (other then spelling it right) it works to keep all my environments nice and seperated-- other than non- pip package requirements... hmmm...
[18:57:31] <deniska> jokoon: you can, just use different quotes: f"{f'{1+1}'}"
[18:57:34] <jokoon> I'm proud of illegible code that works
[18:57:47] <sudomann> SnoopJ: oh yes, without a doubt
[18:57:58] <jokoon> my own code golf or something
[18:58:07] *** Quits: ketiv (~ketiv@92.40.194.226.threembb.co.uk) (Ping timeout: 256 seconds)
[18:58:08] <SnoopJ> sudomann, I don't know what's going on, then. I've only ever seen pip give that message when it is actually an incompatible target
[18:58:47] <thejonjon> jokoon, just wait when you try to figure out your own code in a couple months from now and are like-- wtf was I doing- I really forget but I remember being proud
[18:59:21] <ChrisWarrick> sudomann: take your working and non-working Dockerfiles, and replace `pip` with `echo`. What do you get as output?
[18:59:22] <sudomann> Looks like I must stick with the $(find) technique, which returns the full path to the file. pip install -i and -f dont work: https://bpa.st/EDDA
[18:59:37] *** Quits: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com) (Ping timeout: 240 seconds)
[19:00:01] <SnoopJ> thejonjon, and that's fine, if your environments should all be the same version of Python. pyenv is handy for managing multiple versions of Python, although honestly I don't really use the shims, I just use it as a "go get and compile a Python for me" tool, and then make my venvs directly from the results.
[19:00:03] <ChrisWarrick> sudomann: pip install -f /mnt tensorflow
[19:00:09] *** Quits: Payam (~Payam@c83-250-236-236.bredband.tele2.se) (Client Quit)
[19:00:26] *** Quits: PJBoy (~PJBoy@user/pjboy) (Quit: Ping timeout: 252 seconds)
[19:00:59] <sudomann> beaauuutiful it works, thanks
[19:01:17] <sudomann> Jeez so much fiddling to make the smallest things work :_)
[19:01:28] <ChrisWarrick> sudomann: out of curiosity, can you still try the echo thing and tell us the outputs?
[19:03:14] <sudomann> Sure, so the step should be: `RUN echo install $(find /mnt/tensorflow-*.whl)`?
[19:03:18] *** Joins: akk (~akk@174-28-122-47.albq.qwest.net)
[19:03:41] *** Quits: tdsmith (~tdsmith@kvm.kumokasumi.org) (Quit: Bye!)
[19:03:43] <ChrisWarrick> sudomann: yes, and similarly without find
[19:04:13] *** Joins: tdsmith (~tdsmith@kvm.kumokasumi.org)
[19:05:05] <sudomann> with find: https://bpa.st/ETHQ
[19:05:39] *** Joins: moog (~moog@107.126.53.61)
[19:06:06] *** Joins: Julian (~tos9@python/site-packages/Julian)
[19:06:08] <jokoon> I have unmatched '[' with a f string...
[19:06:32] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[19:06:54] <sudomann> without find: https://bpa.st/IZIQ
[19:07:06] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Client Quit)
[19:07:25] <sudomann> seems to match the file correctly
[19:07:42] <TechTheory2> how do you learn ai in python
[19:08:23] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[19:11:25] <thejonjon> SnoopJ, I'm saying I do this specifically because they run different versions of python. I just have a bunch installed. And they don't share packages... virtualenv -ppython3.6 ./env (for example) will do a copy of my python3.6 install (without any extra packages) then once you drop into the environment, pip install -r requirements.txt or what not-- and it only installs it to the environment... I think we're having a
[19:11:25] <thejonjon> misunderstanding or maybe I'm hearing you wrong or something...
[19:12:15] <SnoopJ> thejonjon, virtualenv cannot install a new Python for you, is my point
[19:12:17] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 256 seconds)
[19:12:23] <SnoopJ> that is pyenv's raison d'être
[19:12:27] <thejonjon> SnoopJ- I almost never run (unless I'm just messing around in the shell to test some random stuff) run python outside a virtualenv... since my local installs always end up witha  ton of bs I randomly play with and don't rid of
[19:12:40] <thejonjon> SnoopJ, Ohhh Isee what you mean
[19:13:18] <thejonjon> SnoopJ, Yep-- correct. I suppose once I get a fresh python 3.4, 3.5, 2.7, 3.8, 3.whatever on my system (and don't cluster up my path) I don't have to think about it much anymore.
[19:14:11] <sudomann> SnoopJ: as to you saying earlier that you've only ever seen pip give the incompatible platform messsage when it is *actually* an incompatible platform, I was in here 2 weeks ago asking whether installing wheels would work correctly if I renamed the wheel file. I stated my assumption at the time: there is probably metadata or a manifest of some sort within the wheel that pip will go off of, and the
[19:14:17] <sudomann> filename is just to be human friendly. Somebody suggested it probably worked that like that, as there's no way pip install would fall apart over a simply rename right?  NOPE. It falls apart. This was the very wheel I renamed back then, to tensorflow.whl, and got this: `ERROR: tensorflow.whl is not a valid wheel filename.`
[19:14:45] <sudomann> Why such a flimsy implementation?
[19:14:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[19:16:49] *** Joins: luigibu (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net)
[19:17:02] <SnoopJ> sudomann, it's not "flimsy" it's PEP 427: https://www.python.org/dev/peps/pep-0427/#file-name-convention
[19:17:13] *** Joins: fikran (~fikran@user/fikran)
[19:17:22] <SnoopJ> But here I am assuming the question was asked in good faith
[19:19:21] *** Quits: kittonian (~kittonian@cpe-70-114-148-180.austin.res.rr.com) (Quit: Leaving)
[19:20:15] *** Joins: Viewday111 (~Viewday@user/viewday)
[19:20:59] <sudomann> Well, yes I am not trying to be snarky :) sorry if it comes off that way. I just wonder why not have those properties defined within the wheel so pip can inspect from within when the file is a local one?? i understand that forcing the names that way means devs and package maintaners wont get goofy and upload incompatible packages to pypi, but for local files at least, it would be nice to rename as I
[19:21:05] <sudomann> please
[19:21:06] <thejonjon> SnoopJ, whoah there good buddy... While I agree flimsy is a bit harsh- it's fine to disagree with PEP. Since a lot of thought goes into it- does not mean one has to agree with it.
[19:21:55] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[19:21:55] *** Viewday111 is now known as Viewday11
[19:23:00] <thejonjon> (I hate super strict JavaScript Linting- but yet I use it even though I almost always have some random tiny thing that stops the gulp release as I curse the strictness setup on some of the repos... I still don't disable it even though it commonly pisses me off :)
[19:23:00] *** Quits: luigibu (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[19:23:12] *** Joins: PJBoy (~PJBoy@user/pjboy)
[19:24:04] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:24:05] <SnoopJ> thejonjon, the question was not about the PEP, the question was why pip did X and the answer is "because pip is responding to constraints that pip didn't create"
[19:25:06] *** Quits: PJBoy (~PJBoy@user/pjboy) (Client Quit)
[19:26:30] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 276 seconds)
[19:26:30] *** Joins: slav0nic (slav0nic@python.su)
[19:27:36] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[19:27:39] <SnoopJ> sudomann, I don't know why the filename was considered a critical part of the specification of wheels, but among other things, you don't have to do unpack it to just see what it's supposed to be compatible with, which seems like a win
[19:29:29] *** Joins: white_shadow (~white_sha@user/white-shadow/x-1132694)
[19:30:22] <leitz> f-string question; lines 29-30, and 34. Most of the data set should be NULL, some isn't. The current code inserts a test NULL vice a database null. Can that be fixed in the f-string?    https://github.com/LeamHall/CharacterBible/blob/write_db_via_sql/demo/cadet_csv_to_people_data.py
[19:31:08] *** Joins: Julian (~tos9@python/site-packages/Julian)
[19:32:17] <SnoopJ> leitz, yes, you could do "{notes or 'NULL'}". I would prefer it the way you currently have it, though, personally. And obligatory warning here about building SQL queries this way instead of using a library to sanitize strings for you
[19:32:32] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 240 seconds)
[19:34:47] <leitz> SnoopJ, understood. If I was doing this "for real", I'd be using SQLAlchemy or similar. In this case I'm trying to re-learn Python core and standard library while provding gamers and authors a useful tool.
[19:35:05] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[19:35:42] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[19:35:48] <leitz> SnoopJ, the issue with the current is in the generated sql. The last NULL is quoted.  INSERT INTO people ( last_name, first_name, middle_name, suffix_name, other_name, gender, birthdate, plot, temperament, notes) VALUES ( "Fry", "Antonia", NULL, NULL, NULL, "f", 1416282, NULL, NULL, "NULL" );
[19:36:05] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 256 seconds)
[19:36:20] <TechTheory2> whats the issue I just got back?
[19:36:22] <SnoopJ> leitz, perhaps you mean `{notes}` instead of `"{notes}"` ?
[19:36:29] <SnoopJ> On L34
[19:36:37] *** Quits: Macuser (~Macuser@2600:1003:b45f:85f8:ddd8:6ee8:fe69:91ea) (Ping timeout: 240 seconds)
[19:36:53] *** Joins: Julian (~tos9@python/site-packages/Julian)
[19:37:04] <SnoopJ> assuming that `notes` is already properly quoted when it's not-null
[19:37:14] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[19:37:37] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[19:38:22] *** Joins: cthulchu (~Cthulchu@184-090-172-137.res.spectrum.com)
[19:38:49] *** Quits: c10l (~c10l@user/c10l) (Quit: The Lounge - https://thelounge.chat)
[19:39:03] *** Joins: Enitin (~Enitin@82.102.22.85)
[19:39:07] <leitz> SnoopJ, the csv file doesn't quote the text, so any text filling "notes" needs quotes for SQL.
[19:39:27] <SnoopJ> leitz, I don't know your domain, but if quoting the thing you're interpolating is a problem, the solution is to not-do that
[19:39:34] *** Joins: c10l (~c10l@user/c10l)
[19:39:42] <SnoopJ> this comes down to f'"{thing}"' vs f'{thing}'
[19:40:13] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[19:40:37] *** Quits: Thanatos (~Thanatos@197.210.47.93) (Ping timeout: 256 seconds)
[19:40:57] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[19:41:26] *** Joins: luigibu (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net)
[19:41:38] <leitz> SnoopJ, preprocessing my be required. A text value in a SQLite insert needs to be quoted, hence the f' "{notes}" '.
[19:41:45] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 256 seconds)
[19:42:14] <leitz> I probably need to look at fixing it outside of the f-string, so that an actual string value is pre-quoted for the SQL.
[19:42:28] *** Joins: PJBoy (~PJBoy@user/pjboy)
[19:42:36] *** Joins: Julian (~tos9@python/site-packages/Julian)
[19:43:04] *** Quits: legola (~legola@46.235.101.65) (Remote host closed the connection)
[19:44:03] <SnoopJ> leitz, `notes = f'"{notes}"' if notes else "NULL"` perhaps.
[19:44:17] *** Joins: legola (~legola@46.235.101.65)
[19:44:21] *** Quits: legola (~legola@46.235.101.65) (Remote host closed the connection)
[19:44:23] <SnoopJ> If you don't want to use someone else's preprocessing from an existing library, I guess you'll be rolling your own
[19:45:10] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[19:45:32] *** Joins: grooverman_ (~grooverma@177.102.117.95)
[19:45:44] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Max SendQ exceeded)
[19:45:48] *** Joins: legola (~legola@46.235.101.65)
[19:46:11] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[19:46:37] *** Quits: grooverman (~grooverma@177.102.117.95) (Ping timeout: 240 seconds)
[19:47:15] *** Quits: jazzy (~jaziz@user/jaziz) (Quit: Beddie bye-bye)
[19:47:25] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 256 seconds)
[19:48:22] *** Joins: Julian (~tos9@python/site-packages/Julian)
[19:49:05] <pycode1> ok, could a noble soul explain this sh*t ? https://bpa.st/M4LQ
[19:49:17] <pycode1> different classes same ID ????
[19:49:58] <ChrisWarrick> pycode1: we’d need to see more context
[19:50:15] *** Quits: legola (~legola@46.235.101.65) (Ping timeout: 256 seconds)
[19:50:30] <SnoopJ> preferably a complete program
[19:50:30] <pycode1> ChrisWarrick, yes you are right, but looks absurd..
[19:50:31] <BtbN> Probably just a class implementing a lot of "interface" via mass multi inheritance. But impossible to tell just from that.
[19:50:32] <ChrisWarrick> pycode1: if your code is allocating logic_instance, printing, and then deallocating it, Python might just be reusing the location in memory
[19:50:33] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[19:50:44] *** Quits: matrixbot_bartab (~matrixbot@lfbn-idf1-1-1565-7.w90-90.abo.wanadoo.fr) (Read error: Connection reset by peer)
[19:51:07] *** Joins: matrixbot_bartab (~matrixbot@lfbn-idf1-1-1565-7.w90-90.abo.wanadoo.fr)
[19:51:14] <ChrisWarrick> BtbN: python doesn’t work like this, `id` is the memory address in cpython
[19:51:33] <bjs> pycode1: The IDs cannot be used to distinguish dead objects with living ones, which is probably what's happening here.
[19:51:39] <bjs> Just generally the id cannot be used for very much...
[19:51:44] <pycode1> ChrisWarrick, ok i try storing the instance inside a dictionary to see if the id is the same
[19:51:45] *** Joins: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com)
[19:52:35] <bjs> pycode1: `id(a) == id(b)` if and only if `a is b`,  this is the only property you can really rely on for `id`, and it only applies when both a and b exist at the same time
[19:52:53] <ChrisWarrick> pycode1: also, if you’re stil doing multiprocessing stuff, then memory spaces are separate between processes
[19:52:59] <pycode1> bjs, yes ok i am saving the instances in a list
[19:53:05] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (Ping timeout: 256 seconds)
[19:53:12] *** Joins: legola (~legola@46.235.101.65)
[19:53:18] <pycode1> ChrisWarrick, no no still one process as bjs adviced me
[19:53:20] <pycode1> still debugging
[19:53:24] <bjs> Yeah and it only applies for a single Python process, different processes can have different objects that happen to have the same ID
[19:54:15] <moonmoon> the more straightforward answer is that the object is being created inside of the loop, printed, and then gets overwritten in the next loop iteration so the memory address is re-used
[19:54:28] <moonmoon> (aka the objects are *not* all live at the same time)
[19:54:51] <SnoopJ> moonmoon, that's a possible answer, but we can't be sure of it with only the output
[19:54:57] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[19:54:59] <SnoopJ> (it does seem likely, though)
[19:55:15] <moonmoon> it seems like the most likely scenario given no other information about what the code is like
[19:55:25] <bjs> I will point out, there was no loop in the paste pycode1 gave us so it's a total guess (but a reasonable one)
[19:55:38] <ChrisWarrick> perhaps we should stop guessing
[19:55:42] <SnoopJ> +1
[19:55:47] <ChrisWarrick> pycode1: show your full code
[19:55:55] <moonmoon> the code pycode1 gave us was printing a single item, and had multiple lines of output, so there's gotta be a loop somewhere :)
[19:56:02] <pycode1> yeah if i hold the instances inside a list i see different IDs
[19:56:23] <pycode1> so basically py reusing the same ID
[19:56:28] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:56:31] <moonmoon> python re-using the same memory address
[19:56:43] <moonmoon> and it's a cpython implementation detail that id(foo) gives foo's memory address
[19:57:08] <SnoopJ> you're only given guarantees about it during the object's lifetime
[19:57:22] <pycode1> ok
[19:57:26] <SnoopJ> if the object is garbage collected, the identity is no longer meaningful
[19:57:41] <leitz> SnoopJ, most of the places I work are leery of "pip install" anything, so I tend to stick with the standard library. I've been relearning python and Go for a little bit, but Python got a higher priority on Thanksgiving week. We found out our entire team would be out of work in short order.
[19:58:06] <SnoopJ> leitz, sqlite3 is in the stdlib
[19:58:12] *** Joins: Barones (~Barones@189.50.80.77)
[19:58:13] <leitz> I sell myself as an automation guy, and Python is great for that.
[19:58:35] <leitz> SnoopJ, is the parser you're talking about in the sqlite library?
[19:58:55] *** Joins: pepper (~pepper@user/pepper)
[19:59:01] * leitz goes to research.
[19:59:07] <SnoopJ> https://docs.python.org/3/library/sqlite3.html
[19:59:30] <SnoopJ> I don't know what you mean by parser but if you're talking about interpolating values into a SQL query, it can do that safely, yes
[20:00:09] <SnoopJ> https://docs.python.org/3/library/sqlite3.html#sqlite3-placeholders talks about it some
[20:00:14] *** Joins: nanobot567 (~pi@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[20:00:29] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[20:01:20] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[20:01:22] *** Joins: Macuser (~Macuser@2600:1003:b450:1683:10c0:eb04:3ea0:7733)
[20:01:35] <leitz> Hmm...so I could use the lang_list example with executmany().
[20:02:30] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[20:02:35] <Wulf> In sphinx, how can I create a link to a python method and overwrite the caption? :py:meth:`~.Tarile.close` would display "close". But what if I want "foo" instead?
[20:02:59] *** Joins: kosh (~kosh@user/kosh)
[20:05:39] *** Joins: klu (~klu@user/klu)
[20:06:42] <Wulf> ah, got it. :py:meth:`foo <Tarfile.close>`
[20:07:01] *** Quits: stockholm (~Andreas@p200300d2c705110054749d4aa8d74816.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[20:07:26] *** Quits: white_shadow (~white_sha@user/white-shadow/x-1132694) (Quit: Leaving)
[20:08:16] <moonmoon> leitz: whenever you're making raw db queries and populating them with user-specified values, you should always look into using the db library itself to populate said values instead of preprocessing them. Avoids SQL injection vulnerabilities
[20:08:57] <moonmoon> exact terminology varies between dbs/libraries, but placeholders, parameterized queries, or prepared statements are all common terms for that
[20:09:12] <moonmoon> should help you look things up if you're interested in learning more about it :)
[20:10:19] <leitz> moonmoon, understood. I'm in the early stages of this, and was originally writing sql-scripts so others could use them with different programming languages. Using the library to write the data directly ties it to python. Not a bad idea, just a shift in priorities.  :)
[20:10:36] *** Joins: dude-x (~textual@72.76.74.165)
[20:10:40] *** Quits: dude-x_ (~textual@72.76.74.165) (Read error: Connection reset by peer)
[20:11:57] *** Quits: luigibu (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[20:12:04] <moonmoon> to avoid security or other nasty surprises, close coupling is probably your best bet
[20:12:09] <moonmoon> unfortunately
[20:12:30] <moonmoon> the way to properly secure a db query in python is massively different than, say, C
[20:12:35] *** Quits: vladoski (~foo@93-36-221-58.ip62.fastwebnet.it) (Quit: Textual IRC Client: www.textualapp.com)
[20:12:37] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 240 seconds)
[20:12:44] <SnoopJ> sqlite3 is a relatively thin set of bindings to SQLite, this functionality is not specific to Python https://www.sqlite.org/lang_expr.html#parameters
[20:13:08] <SnoopJ> in other words, you should be doing it this way in any other language, too
[20:13:16] *** Quits: legola (~legola@46.235.101.65) (Remote host closed the connection)
[20:13:18] <moonmoon> (and in languages without some common abstraction for databases, the way to do it properly in other languages will differ based on which database software you're talking to)
[20:13:22] *** Joins: kek_ (~kek_@2a02:168:200f:1f10:dcde:2774:1301:baad)
[20:13:45] <SnoopJ> possibly not on top of SQLite, but any engine worth using should have a way to do safe interpolation
[20:13:47] <moonmoon> although I think even db-api isn't consistent; sqlite uses :foo but others may use @foo
[20:14:37] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[20:14:41] *** Joins: legola (~legola@46.235.101.65)
[20:16:00] *** Joins: dez (uid92154@user/dez)
[20:16:17] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Ping timeout: 240 seconds)
[20:16:19] <Yhg1s> DB-API is consistent, it just has different paramstyles. They're defined in the DB-API. (I don't know of any that use @, though.)
[20:18:57] *** Quits: legola (~legola@46.235.101.65) (Ping timeout: 240 seconds)
[20:19:08] <kek_> hi, the following code leads to a memory overflow on my GPU. The issue is, that I append samples[i to triggers in line 22. At the start, I sent samples to the gpu. So now I'd have to do samples[i].cpu() to first send it back to the cpu. Now times is also a tensor but I never sent it to the GPU, also triggers is a normal list, so on the cpu/memory, no? I'm a bit confused as to why it even works. Does python just store a list and note to
[20:19:08] <kek_> itself "ah yeah, the samples, they currently live on the GPU memory"?
[20:19:18] <kek_> https://bpa.st/KJ5A
[20:19:58] <SnoopJ> kek_, Python is not aware of this distinction at all, PyTorch is doing all the lifting. I can't follow your question, though.
[20:22:06] <moonmoon> Yhg1s: yeah I was mistaken, after looking through some of my codebases I was actually thinking of the printf-style %s, %d, etc. version of unnamed parameters vs the ? style of unnamed parameters, rather than differences in named ones
[20:22:19] <kek_> SnoopJ, I basically do: triggers = [] and then triggers.append([A, B]) whereas (if I understand correctly) A lives on my systems normal memory and B was sent to the GPU thus living on its memory. I'm confused as to why I can mix it. Usually pyTorch just screams "tensors aren't on the same device" at me if I do something stupid. Trying to figure out what exactly goes on. Thanks though. :)
[20:23:19] <SnoopJ> kek_, that code creates a list and it sounds like you're putting Tensor objects into that list. This has no bearing on where PyTorch will store the data for those, though
[20:23:57] *** Quits: lalitmee__ (~lalitmee@180.94.32.14) (Ping timeout: 240 seconds)
[20:23:57] <SnoopJ> kek_, but it *could* keep those Tensors alive longer than you're actually using them, including all the memory they need.
[20:24:20] *** Quits: mad_moses (~ps@2a02:810b:f3f:f0d0:d250:99ff:fe86:b052) (Remote host closed the connection)
[20:25:38] <SnoopJ> kek_, i.e. you send `samples` to what I assume is your GPU device, and then you store part of `samples` in this list. As long as that part is still alive somewhere, it will be allocated on the GPU
[20:25:50] <SnoopJ> (or in general, allocated *somewhere*)
[20:26:52] *** Joins: ianliu (~ianliu@179.93.19.87)
[20:27:31] *** Joins: agonhajdari (~textual@user/agonhajdari)
[20:27:38] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:28:32] *** Quits: agonhajdari (~textual@user/agonhajdari) (Client Quit)
[20:29:40] *** Joins: agonhajdari (~textual@user/agonhajdari)
[20:29:57] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:30:08] <kek_> SnoopJ, ok thanks - yeah I think I really noticed my lack of knowledge when it comes to cuda here. Gonna have to read more about it and what exactly happens when I send data to the gpu etc. etc. I think my confusion comes from missing that knowledge.
[20:30:11] *** Joins: gdd (~gdd@129.199.146.230)
[20:30:13] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[20:30:26] <pycode1> an abstract class that extends ABC can have the __init__
[20:30:27] <pycode1> ?
[20:30:36] <ianliu> When using Pandas in fluent style, how would you do this operation: df[df.column.isin(vals)]?
[20:31:15] <SnoopJ> kek_, when you use to() in PyTorch, you're basically asking it to allocate the backing memory for that Tensor on the requested device, unless it's already there
[20:31:35] <SnoopJ> and the memory that backs a Tensor is held for as long as the Tensor object exists somewhere
[20:32:22] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:32:46] <SnoopJ> if you want to store results streaming off the GPU or something, you probably want to call cpu() on the Tensor before you store it, to get a CPU-side copy.
[20:33:04] *** Joins: tobybl (~tobybl@213.31.132.151)
[20:33:06] <kek_> SnoopJ, yeah, that's clear or at least I simply assumed so. But that doesn't explain why the above code would lead to more allocated memory. If you remove the append() in the above code, everythings fine. So using to() repeatedly doesn't matter. It's only the append(). I have no idea what exactly the append appends here.
[20:33:32] <SnoopJ> kek_, because you are append()ing a Tensor that is allocated on the GPU to this list, which keeps the Tensor object alive, which holds the GPU memory.
[20:33:39] <kek_> SnoopJ, yeah that's how I solved it currently.
[20:33:40] <SnoopJ> (at least, this is my best guess)
[20:34:01] *** Quits: grooverman_ (~grooverma@177.102.117.95) (Read error: Connection reset by peer)
[20:34:32] <SnoopJ> kek_, let me turn it around: GPU memory is freed when a Tensor that is backed by the GPU is garbage collected. If you append `samples` or part of it to a list, you create a reference to that Tensor object and prevent it from being garbage collected. So the GPU memory isn't released.
[20:34:34] <kek_> SnoopJ, yeah something like that of course but I'd love to understand some more details here, how gpu memory and cpu memory "interact" here. :) Sadly I never had a cuda lecture. :(
[20:34:47] <SnoopJ> you don't really need to know anything about CUDA to understand this
[20:35:04] *** Joins: grooverman (~grooverma@177.102.117.95)
[20:35:23] *** Joins: damonlynch_ (~ngaio@c-98-32-237-193.hsd1.in.comcast.net)
[20:35:56] <SnoopJ> the CPU and GPU have their own memory spaces, and data lives in one or the other. When you want to put data on the GPU or take it off the GPU, you copy between these spaces. This is what to() (and cpu() and gpu()) does
[20:36:00] <kek_> SnoopJ, so the garbage collector sees a reference to some tensor object and checks its ref. counter and since I appended it, that's never 0, so it never tells the gpu to free the memory?
[20:36:29] <SnoopJ> kek_, right, the list is holding a reference to a Tensor that is backed by GPU memory
[20:36:55] *** Joins: Tas-sos (~Tas-sos@ppp005054047017.access.hol.gr)
[20:37:07] *** Joins: georgios (~georgios@user/georgios)
[20:37:16] <SnoopJ> so even once the rest of your PyTorch code is done with it (when you replace the Tensor on another iteration, I guess), the list is still keeping that original one alive, so the GPU memory isn't released.
[20:37:37] *** Quits: damonlynch (~ngaio@static-68-235-44-37.cust.tzulo.com) (Ping timeout: 240 seconds)
[20:37:49] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-9411-5ab1-d842-d165.res6.spectrum.com)
[20:38:24] *** Joins: legola (~legola@46.235.101.65)
[20:38:29] *** Quits: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52) (Ping timeout: 252 seconds)
[20:38:39] <kek_> SnoopJ, yeah I see where I went wrong in my thought process. Thanks.
[20:39:08] *** Quits: Tas-sos (~Tas-sos@ppp005054047017.access.hol.gr) (Client Quit)
[20:39:10] <kek_> That helped a lot. Thanks. :)
[20:39:14] *** Quits: legola (~legola@46.235.101.65) (Remote host closed the connection)
[20:40:26] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:ec59:ebbb:92c6:2f4) (Quit: Leaving)
[20:40:33] *** Joins: resmo (~resmo@2a00:d420:9:8a00:4072:38bc:a9e6:8cad)
[20:40:48] *** Quits: damonlynch_ (~ngaio@c-98-32-237-193.hsd1.in.comcast.net) (Quit: Leaving)
[20:40:56] *** Joins: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52)
[20:41:49] *** Joins: Tas-sos (~Tas-sos@ppp005054047017.access.hol.gr)
[20:44:39] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Ping timeout: 256 seconds)
[20:45:40] *** Quits: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52) (Ping timeout: 268 seconds)
[20:45:59] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[20:46:11] *** Joins: Betal (~Betal@user/betal)
[20:49:08] *** Joins: maromau (~mauro@151.95.237.215)
[20:49:10] *** Joins: ExeciN (~ExeciN@user/nicexe)
[20:49:41] <leitz> sqlite named parameter learning. The DB gets touched but has no people data. What am I missing?   https://bpa.st/KFOA
[20:52:51] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[20:53:12] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[20:53:40] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 268 seconds)
[20:55:52] *** Quits: nanobot567 (~pi@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Quit: WeeChat 3.0)
[20:56:33] *** Joins: nanobot567 (~pi@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[20:58:14] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[20:59:43] *** Joins: luigibu (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net)
[21:00:02] *** Quits: ianliu (~ianliu@179.93.19.87) (Quit: WeeChat 3.4)
[21:01:20] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[21:01:40] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[21:01:41] *** Quits: jokoon (~eio@2a01:e0a:542:b20:99ae:cc95:93c6:4076) (Ping timeout: 268 seconds)
[21:01:49] *** Joins: rsx (~dummy@ppp-188-174-133-88.dynamic.mnet-online.de)
[21:02:13] *** Quits: slackcals (~slackcals@user/slackcals) (Ping timeout: 256 seconds)
[21:05:35] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[21:06:00] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 268 seconds)
[21:06:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[21:06:56] *** Joins: oncall-pokemon (uid134758@id-134758.uxbridge.irccloud.com)
[21:07:50] *** Joins: lethu (~lethu@user/lethu)
[21:08:55] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[21:09:15] *** Joins: Klinda (~superleag@user/klinda)
[21:09:49] *** Quits: rsx (~dummy@ppp-188-174-133-88.dynamic.mnet-online.de) (Quit: rsx)
[21:10:44] *** Quits: kek_ (~kek_@2a02:168:200f:1f10:dcde:2774:1301:baad) (Quit: Leaving)
[21:11:32] *** Quits: gdd (~gdd@129.199.146.230) (Ping timeout: 240 seconds)
[21:11:39] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Read error: Connection reset by peer)
[21:13:06] *** Joins: MmeQuignon (~MmeQuigno@2a01:e0a:1ab:f090:dffd:9c45:c071:6a62)
[21:13:17] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[21:13:54] <Payam> What color should be used for colorblinds? when it comes to pipeline status?
[21:14:57] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[21:15:00] *** Joins: s33ker (~s33ker@89-212-68-200.dynamic.t-2.net)
[21:15:34] *** Parts: TechTheory2 (~lwait@ip68-110-3-17.tc.ph.cox.net) ()
[21:15:44] *** Quits: grooverman (~grooverma@177.102.117.95) (Read error: Connection reset by peer)
[21:16:32] *** Joins: Enitin (~Enitin@82.102.22.84)
[21:16:48] *** Joins: grooverman (~grooverma@177.102.117.95)
[21:17:11] <barometz> The big trick there is to avoid using only color - add shapes and words for accessibility, and you can keep red/green which is immediately clear to non-impaired folks
[21:18:00] *** Joins: zebrag (~chris@user/zebrag)
[21:18:37] <barometz> (that said, nothing wrong with making sure the luminosity differs enough as well)
[21:18:40] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[21:21:18] *** Quits: badsektor (~badsektor@user/badsektor) (Remote host closed the connection)
[21:22:21] *** Joins: Julian (~tos9@python/site-packages/Julian)
[21:22:21] <Karyon> leitz: Might have something to do with committing the transaction, can you try `con.commit()` after you execute the statement. https://docs.python.org/3/library/sqlite3.html#controlling-transactions
[21:22:51] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[21:23:07] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[21:24:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[21:24:18] *** Joins: slackcals (~slackcals@user/slackcals)
[21:24:51] *** Joins: TechTheory (~lwait@ip68-110-3-17.tc.ph.cox.net)
[21:25:05] *** Parts: TechTheory (~lwait@ip68-110-3-17.tc.ph.cox.net) ()
[21:25:10] <leitz> Karyon, thanks! That did it!
[21:25:47] *** Quits: pycode1 (~pycode3@2001:b07:5d28:551:e22:805c:2760:70c1) (Ping timeout: 252 seconds)
[21:26:01] <Karyon> leitz: You're welcome :)
[21:26:34] *** Joins: fikran (~fikran@user/fikran)
[21:26:52] *** Joins: TechTheory (~lwait@ip68-110-3-17.tc.ph.cox.net)
[21:27:17] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 240 seconds)
[21:27:43] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Client Quit)
[21:28:32] *** Joins: senj (~tc@user/senj)
[21:28:46] *** Joins: skipworthy (~quassel@174-16-243-202.hlrn.qwest.net)
[21:28:57] *** Joins: nattiestnate (~nate@114.122.107.61)
[21:29:17] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[21:29:25] *** Joins: emx (~emx@mob-194-230-144-24.cgn.sunrise.net)
[21:30:25] <TechTheory> Does anyone here use https://replit.com to code I also code locally not to mention
[21:30:39] *** Joins: ExeciN (~ExeciN@user/nicexe)
[21:31:28] *** Quits: tobybl (~tobybl@213.31.132.151) (Remote host closed the connection)
[21:31:56] *** Joins: rajkosto (~rajkosto@93-86-92-233.dynamic.isp.telekom.rs)
[21:32:13] *** Quits: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu) (Ping timeout: 240 seconds)
[21:33:12] *** Parts: TechTheory (~lwait@ip68-110-3-17.tc.ph.cox.net) ()
[21:33:15] *** Joins: TechTheory (~lwait@ip68-110-3-17.tc.ph.cox.net)
[21:34:31] *** Quits: emx (~emx@mob-194-230-144-24.cgn.sunrise.net) (Ping timeout: 256 seconds)
[21:34:56] *** Parts: TechTheory (~lwait@ip68-110-3-17.tc.ph.cox.net) ()
[21:34:57] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[21:36:04] *** Joins: magla (~gelignite@55d4d2a6.access.ecotel.net)
[21:36:46] *** Joins: MrFantastik (~f@2607:f598:bbda:f0:d632:e505:b2a4:110f)
[21:37:15] *** Quits: MmeQuignon (~MmeQuigno@2a01:e0a:1ab:f090:dffd:9c45:c071:6a62) (Ping timeout: 250 seconds)
[21:37:21] *** Joins: Pr0phet (sid505706@id-505706.hampstead.irccloud.com)
[21:37:40] *** Joins: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu)
[21:38:16] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 245 seconds)
[21:38:18] *** Joins: bloody (~bloody@user/bloody)
[21:38:35] *** Joins: raxor2k (~raxor2k@78.158.236.72)
[21:38:37] <raxor2k> bjs: are you here
[21:39:22] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[21:39:56] *** Quits: Macuser (~Macuser@2600:1003:b450:1683:10c0:eb04:3ea0:7733) (Ping timeout: 245 seconds)
[21:40:02] <SnoopJ> raxor2k, let's assume the answer is yes, what is your question?
[21:40:03] *** Joins: Julian (~tos9@python/site-packages/Julian)
[21:41:25] *** Quits: thevishy (~Nishant@2405:201:f005:c007:1d22:93e8:b240:6332) (Quit: Leaving)
[21:41:52] <raxor2k> Im getting some strange errors in one of my async functions
[21:42:09] *** Quits: VaniaPy (~VaniaPy@46.12.11.60.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[21:42:15] *** Joins: Viewday115 (~Viewday@user/viewday)
[21:42:53] *** Quits: Jigsy (~Jigsy@user/jigsy) (Ping timeout: 250 seconds)
[21:43:00] *** Quits: akk (~akk@174-28-122-47.albq.qwest.net) (Quit: +++)
[21:43:01] *** Quits: luigibu (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[21:43:58] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 260 seconds)
[21:43:59] *** Viewday115 is now known as Viewday11
[21:44:43] *** Joins: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net)
[21:46:23] *** Joins: Jigsy (~Jigsy@user/jigsy)
[21:46:37] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:39bc:7f06:1559:f901)
[21:47:00] *** Quits: LordVan (~lordvan@gentoo/developer/lordvan) (Quit: Leaving)
[21:47:06] *** Joins: emx (~emx@adsl-84-226-68-198.adslplus.ch)
[21:50:19] *** Quits: MrFantastik (~f@2607:f598:bbda:f0:d632:e505:b2a4:110f) (Remote host closed the connection)
[21:51:40] *** Joins: humbertowoody (~humbertow@189.132.138.198)
[21:51:45] *** Quits: slav0nic (slav0nic@python.su) (Remote host closed the connection)
[21:52:02] *** Quits: bytehackr (~Sandipan@43.252.250.123) (Ping timeout: 240 seconds)
[21:52:24] <rindolf> raxor2k: can you show code? https://github.com/shlomif/how-to-share-code-online
[21:53:38] <bjs> raxor2k: sorry I can't be bothered to read your messages, I'm too lazy. Ask someone else
[21:55:49] *** Quits: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 240 seconds)
[21:55:56] *** Quits: ham5urg__ (~ham5urg@84.46.6.172.dynamic-pppoe.dt.ipv4.wtnet.de) (Quit: Leaving)
[21:56:35] *** Joins: junebug (~junebug@2600:1700:3db0:2540:f063:bfd2:8964:234f)
[21:58:22] *** Joins: TechTheory (~lwait@ip68-110-3-17.tc.ph.cox.net)
[21:58:23] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-9411-5ab1-d842-d165.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[21:58:30] *** Parts: TechTheory (~lwait@ip68-110-3-17.tc.ph.cox.net) ()
[21:59:15] *** Joins: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[21:59:19] *** Quits: jim (~jim@about/linux/staff/jim) (Ping timeout: 256 seconds)
[21:59:43] *** Joins: TechTheory (~lwait@ip68-110-3-17.tc.ph.cox.net)
[21:59:46] <grym> Payam: https://davidmathlogic.com/colorblind/  you might find some help here
[22:00:02] *** Parts: TechTheory (~lwait@ip68-110-3-17.tc.ph.cox.net) ()
[22:00:52] *** Joins: TechTheory (~lwait@ip68-110-3-17.tc.ph.cox.net)
[22:01:01] *** Parts: TechTheory (~lwait@ip68-110-3-17.tc.ph.cox.net) ()
[22:04:36] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 268 seconds)
[22:05:15] *** Quits: Vonter (~Vonter@user/vonter) (Quit: WeeChat 3.4)
[22:05:58] *** skipworthy is now known as skip-away
[22:06:39] *** Quits: Forsaken87 (~quassel@2a02:908:1866:e360:88b0:2032:220f:3f73) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:08:13] *** Joins: luigibu (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net)
[22:09:11] *** Joins: stonkey (~stonkey@user/stonkey)
[22:09:56] *** Joins: Forsaken87 (~quassel@2a02:908:1866:e360:88b0:2032:220f:3f73)
[22:10:36] *** Joins: TechTheory (~lwait@ip68-110-3-17.tc.ph.cox.net)
[22:10:43] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca)
[22:10:44] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[22:11:58] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[22:12:37] *** Quits: luigibu (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[22:14:56] <PJBoy> I use https://colorbrewer2.org/ for my colour blind safe palettes
[22:15:01] *** Quits: grooverman (~grooverma@177.102.117.95) (Read error: Connection reset by peer)
[22:16:51] *** Joins: grooverman (~grooverma@177.95.12.14)
[22:19:37] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[22:20:43] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[22:21:54] *** Joins: idontneedanick (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se)
[22:22:49] <SnoopJ> see also https://bids.github.io/colormap/ for a fairly robust discussion of how matplotlib navigated this when introducing new colormaps. When in doubt, there's probably a simulator you can at least use to check
[22:23:11] <InPhase> PJBoy: A few of those seem decent.  I'm often finding myself contemplating color choices for gradients in data plots.  There's this constant struggle between the three things of maximizing the amount of hue contrast you can use to represent more subtleties in the data, having color-blind safe plots, and having plots that do not make you want to gouge your eyes out if you have to stare at them a lot.
[22:23:15] <SnoopJ> +1 to just indicating something with not-color, too.
[22:24:08] <SnoopJ> InPhase, I've usually found that if a plot is trying to communicate a *lot* of nuance, it may not be very much fun to look at no matter how carefully it is constructed
[22:24:33] * SnoopJ glances meaningfully at astro-ph
[22:25:28] <InPhase> SnoopJ: Sure.  But what often happens is that there's different nuance at different levels in different adjacent plots, but you want to keep them normalized the same for relative information display.  Then you are left with needing something that has contrast at many levels.
[22:25:50] <InPhase> SnoopJ: But again, without hurting, to the extent possible.  :)
[22:25:51] *** Quits: Barones (~Barones@189.50.80.77) (Remote host closed the connection)
[22:26:01] <SnoopJ> I'm relatively happy with matplotlib's defaults in a plotting context, and there's always cubehelix if I'm not
[22:26:09] <InPhase> SnoopJ: Rainbow plots are sometimes good for this.
[22:26:21] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:6ca3:1933:1d08:7ad8)
[22:26:24] <SnoopJ> InPhase, as in jet, or like-jet-but-not-nearly-so-awful
[22:26:26] *** Quits: mwichmann (~mats@209-188-119-117.taosnet.com) (Ping timeout: 260 seconds)
[22:26:39] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 256 seconds)
[22:27:27] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[22:27:47] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 256 seconds)
[22:28:02] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[22:28:25] <InPhase> The full White-to-Red-Rainbow-to-Blue-to-Black can work pretty well for a lot of levels without being horrendous to look at, but it is not quite color-blind safe.
[22:29:08] *** Quits: morning_dew_drop (~Guest27__@86-198-18-212.ipv4.consistec.de) (Quit: Client closed)
[22:29:58] *** Quits: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[22:30:51] *** Joins: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[22:31:47] <Karyon> There is numerous of studies on contrast for the visually impaired in html/css that you could use
[22:33:06] <SnoopJ> preferring luminosity over hue is a rough rule of thumb, but "don't use load-bearing color" is even better
[22:34:02] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[22:34:19] *** Joins: ubert (~Thunderbi@p200300ecdf0994eb50cdffdede185786.dip0.t-ipconnect.de)
[22:34:56] *** Joins: jim (~jim@about/linux/staff/jim)
[22:35:10] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[22:35:19] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 250 seconds)
[22:35:39] *** Joins: epony (epony@user/epony)
[22:36:31] <ChrisWarrick> make your pipelines green and red, but also add checkmark/cross icons to them
[22:36:32] *** Quits: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) (Quit: Leaving.)
[22:37:08] <senj> Hoping for help with qtile/pyautogui. I just wanted to get mouse cursor out of the way. At risk of too much information: https://bpa.st/BGSQ. No clue what else to do. Help, please?
[22:37:42] * senj new to qtile, pyautogui and weechat
[22:37:50] *** Joins: lethu (~lethu@user/lethu)
[22:39:36] * senj and python
[22:41:11] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 245 seconds)
[22:41:53] *** Joins: teut (~teut@2401:4900:1c68:4942:1567:d5bb:75de:61d9)
[22:42:33] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[22:42:49] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 268 seconds)
[22:44:05] *** Quits: mnemonic (~semeion@user/semeion) (Quit: WeeChat 3.4)
[22:45:06] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[22:46:13] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-9411-5ab1-d842-d165.res6.spectrum.com)
[22:47:03] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 256 seconds)
[22:47:10] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[22:47:28] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[22:50:56] <rindolf> senj: there is a defaut python sys.path
[22:51:03] *** Joins: s0k1t (~s0k1t@66.115.189.132)
[22:52:01] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 245 seconds)
[22:52:22] *** Quits: tdsmith (~tdsmith@kvm.kumokasumi.org) (Read error: Connection reset by peer)
[22:52:33] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[22:52:53] <senj> rindolf: Yes. Shown by '>>> sys.path'. Is that what you are referring to?
[22:52:57] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[22:53:53] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-9411-5ab1-d842-d165.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[22:55:10] *** Joins: tdsmith (~tdsmith@kvm.kumokasumi.org)
[22:55:53] <rindolf> senj: yes, pyautogui may be there
[22:57:14] <rindolf> senj: did you try using venv yet?
[22:57:35] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[22:57:47] <senj> rindolf: I have not. I do not know what it is.
[22:58:14] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[22:58:33] *** Joins: Thanatos (~Thanatos@197.210.47.93)
[22:58:44] *** Joins: fraggle (~fraggle@cpc158559-rdng30-2-0-cust199.15-3.cable.virginm.net)
[22:58:55] <rindolf> senj: ah
[22:59:08] *** Quits: Forsaken87 (~quassel@2a02:908:1866:e360:88b0:2032:220f:3f73) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:59:30] <senj> Okay, it is a virtual environment. That would seem to complicate things by adding to the mix.
[22:59:54] <ChrisWarrick> venvs would not complicate things
[23:00:27] <ChrisWarrick> although I don’t see the relevance of the environment to your issues
[23:00:51] *** Joins: Forsaken87 (~quassel@2a02:908:1866:e360:88b0:2032:220f:3f73)
[23:01:13] <senj> Does this mean I can't do this without a virtual environment?
[23:01:48] *** Joins: akk (~akk@174-28-122-47.albq.qwest.net)
[23:01:55] *** Joins: henistein (~henistein@2001:8a0:c18a:f601:1861:a984:7f7c:5a12)
[23:01:57] * senj thought it would be much simpler - just move the cursor
[23:02:16] *** Quits: s0k1t (~s0k1t@66.115.189.132) (Quit: Leaving)
[23:02:30] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:02:35] *** Joins: s0k1t (~s0k1t@66.115.189.132)
[23:03:59] *** Joins: jokoon (~eio@2a01:e0a:542:b20:99ae:cc95:93c6:4076)
[23:04:53] <ChrisWarrick> venvs aren’t relevant to your issue
[23:05:06] <ChrisWarrick> the issue seems to be in qtile/pyautogui
[23:05:14] *** Quits: s0k1t (~s0k1t@66.115.189.132) (Client Quit)
[23:06:34] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[23:07:00] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Quit: Leaving)
[23:07:13] *** Joins: djhankb (~djhankb@208.113.164.68)
[23:07:26] *** Joins: agonhajdari (~textual@user/agonhajdari)
[23:08:35] <fraggle> Hi, I need to migrate from R (tidyverse in R Studio) to Python for my job. I've done a few basic tutorials, tried out Jupyter notebooks vs Pycharm, and now I need to find my way around the scikit_learn package. I think I'm kinda looking for something like Jupyter but with a variable explorer so I can keep track of what I've saved into each dataframe as I go. Does anyone have any suggestions?
[23:08:52] <senj> It was a bit of a struggle to get pyautogui set up. Not sure if that is relavent.
[23:09:06] *** Quits: raxor2k (~raxor2k@78.158.236.72) (Remote host closed the connection)
[23:10:17] *** Quits: Forsaken87 (~quassel@2a02:908:1866:e360:88b0:2032:220f:3f73) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:11:07] *** Joins: Julian (~tos9@python/site-packages/Julian)
[23:12:00] *** Joins: Forsaken87 (~quassel@2a02:908:1866:e360:88b0:2032:220f:3f73)
[23:12:04] *** Joins: tobybl (~tobybl@213.31.132.151)
[23:14:57] *** Quits: junebug (~junebug@2600:1700:3db0:2540:f063:bfd2:8964:234f) (Ping timeout: 240 seconds)
[23:15:01] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 240 seconds)
[23:15:53] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:78d0:dbf8:2bc2:cf2c)
[23:15:57] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 256 seconds)
[23:17:10] *** Quits: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[23:17:45] *** Joins: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be)
[23:17:59] *** Quits: withered_wolf (~withered_@97.112.15.92) (Ping timeout: 252 seconds)
[23:23:41] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[23:24:47] *** Quits: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Remote host closed the connection)
[23:24:54] *** Quits: jokoon (~eio@2a01:e0a:542:b20:99ae:cc95:93c6:4076) (Quit: Leaving)
[23:26:07] <Wulf> How could I get someone started who wishes to learn some python? Will probably use Windows and currently does some VBA programming at work. E.g. what software (editor/IDE/etc.) could I suggest to them? And how would they install python?  I don't know a thing about Windows :)
[23:26:22] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[23:26:29] *** Quits: tobybl (~tobybl@213.31.132.151) (Remote host closed the connection)
[23:26:52] <The-Compiler> Wulf: what do they use for VBA?
[23:27:11] <Wulf> The-Compiler: I think Excel
[23:27:20] <The-Compiler> oh, that won't do for Python I guess
[23:27:25] *** Quits: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 240 seconds)
[23:27:26] *** Quits: s33ker (~s33ker@89-212-68-200.dynamic.t-2.net) (Quit: Client closed)
[23:27:33] <The-Compiler> Wulf: as for installing Python, the python.org installer is probably the easiest way (or the MS store, but I think e.g. poetry breaks with that)
[23:27:37] <ChrisWarrick> Wulf: how -> go to python.org and download the installer
[23:27:52] <The-Compiler> Wulf: as for editor, I like to recommend VS Code or if people want a more IDE-like thing, PyCharm
[23:28:07] *** Joins: arinov (~arinov@213.194.126.155)
[23:28:13] *** Joins: Denver (~Denver@174-16-236-178.hlrn.qwest.net)
[23:28:19] <ChrisWarrick> +1 for pycharm or vscode
[23:28:32] *** Joins: s0k1t (~s0k1t@66.115.189.132)
[23:28:36] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-5470-5f5b-0780-9db5.res6.spectrum.com) (Read error: Connection reset by peer)
[23:28:51] <Denver> +1 for Pycharm. JetBrains is a gold standard at this point.
[23:29:24] *** Quits: ubert (~Thunderbi@p200300ecdf0994eb50cdffdede185786.dip0.t-ipconnect.de) (Remote host closed the connection)
[23:29:25] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 240 seconds)
[23:30:27] <Wulf> thanks. I'll report back how it goes. Might take a few Months though!
[23:31:08] *** Quits: nomic (~nomic@185.198.243.236) (Quit: Leaving)
[23:31:48] <Wulf> can one of {"vscode", "pycharm"} handle virtual envs and package installation?
[23:31:59] *** Joins: apchar (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu)
[23:32:03] <ChrisWarrick> pycharm can
[23:32:21] <ChrisWarrick> vscode understands venvs, but I’m not sure if it can create them or install packages
[23:32:26] <ChrisWarrick> do teach them python3 -m venv and pip
[23:33:08] *** Joins: Julian (~tos9@python/site-packages/Julian)
[23:33:32] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[23:34:17] <SnoopJ> I think it *can* but I've only ever had headaches when VSCode tries to be helpful in this way. It may be a nicer experience if you take the time to learn its idiosyncrasies in detail
[23:34:27] *** Joins: junebug (~junebug@2600:1700:3db0:2540:42ba:57e2:4425:3400)
[23:35:47] *** Quits: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 256 seconds)
[23:35:55] *** Joins: fikran (~fikran@user/fikran)
[23:36:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[23:36:50] *** Joins: audiobirb (~audio@user/audio)
[23:37:20] *** Quits: fraggle (~fraggle@cpc158559-rdng30-2-0-cust199.15-3.cable.virginm.net) (Changing host)
[23:37:20] *** Joins: fraggle (~fraggle@user/fraggle)
[23:39:11] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[23:39:25] *** Joins: JarbonFeh (~JarbonFeh@197.15.105.66)
[23:40:03] *** Joins: ExpiredKebab (~sgreadly@2407:7000:a239:503:8c:bfd3:b9c3:2aee)
[23:40:39] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 276 seconds)
[23:41:14] *** Joins: sazawal (~sazawal@122.161.85.84)
[23:41:33] *** Joins: s0k1t_ (~s0k1t@68.235.43.30)
[23:41:37] *** Quits: junebug (~junebug@2600:1700:3db0:2540:42ba:57e2:4425:3400) (Ping timeout: 240 seconds)
[23:41:49] *** Joins: withered_wolf (~withered_@97.112.15.92)
[23:41:51] *** Joins: tejr (~tejr@user/tejr)
[23:43:50] *** Joins: ketiv (~ketiv@92.40.196.142.threembb.co.uk)
[23:44:01] *** Joins: junebug (~junebug@2600:1700:3db0:2540:128d:5e50:6657:edb)
[23:44:02] *** Quits: truth (~truth@user/truth) (Ping timeout: 240 seconds)
[23:44:26] *** Joins: truth (~truth@user/truth)
[23:44:33] *** Quits: JarbonFeh (~JarbonFeh@197.15.105.66) (Quit: Quit)
[23:45:01] *** Quits: s0k1t (~s0k1t@66.115.189.132) (Ping timeout: 240 seconds)
[23:46:23] *** Quits: TechTheory (~lwait@ip68-110-3-17.tc.ph.cox.net) (Ping timeout: 250 seconds)
[23:51:03] *** Joins: jello_ (~joe@cpe-67-247-57-25.nyc.res.rr.com)
[23:51:08] *** Joins: s0k1tisgay (~s0k1t@193.27.13.184)
[23:51:25] *** dob1_ is now known as dob1
[23:52:32] *** Parts: jello_ (~joe@cpe-67-247-57-25.nyc.res.rr.com) ()
[23:53:08] *** Quits: akk (~akk@174-28-122-47.albq.qwest.net) (Quit: +++)
[23:54:32] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 240 seconds)
[23:55:03] *** Quits: s0k1t_ (~s0k1t@68.235.43.30) (Ping timeout: 256 seconds)
[23:55:43] *** skip-away is now known as skipworthy
[23:56:06] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[23:56:07] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Client Quit)
[23:56:51] *** Joins: Barones (~Barones@189.50.80.77)
[23:57:46] *** Quits: roguelazer (~jbrown@sietchtabr.roguelazer.net) (Quit: Gone)
[23:57:59] *** Joins: luigibu (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net)
[23:58:04] *** Joins: roguelazer (~jbrown@sietchtabr.roguelazer.net)
[23:58:50] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Remote host closed the connection)
[23:59:09] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[23:59:56] *** Quits: greenbagels (~gb@user/greenbagels) (Ping timeout: 245 seconds)
