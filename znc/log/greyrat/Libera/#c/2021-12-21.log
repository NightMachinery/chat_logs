[00:00:02] *** Quits: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy) (Ping timeout: 240 seconds)
[00:00:04] *** Quits: Hax0r (~Hax0r@46.38.81.225) (Remote host closed the connection)
[00:00:22] *** Joins: Hax0r (~Hax0r@46.38.81.225)
[00:00:34] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[00:00:34] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[00:00:34] *** Joins: wroathe (~wroathe@user/wroathe)
[00:01:19] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[00:01:42] *** Quits: sysctl (~sysctl@88.215.77.255) (Quit: leaving)
[00:02:48] *** Quits: bud (~bud@user/bud) (Quit: Leaving.)
[00:04:48] *** Quits: arinov (~arinov@213.194.126.155) (Quit: WeeChat 3.3)
[00:06:10] *** Joins: Darkcoal (~user@2001:16a2:7a75:f800:7ae2:9bb1:6de0:1674)
[00:09:50] *** Quits: mahmutov (~mahmutov@5.176.32.84) (Ping timeout: 268 seconds)
[00:12:29] *** Quits: Darkcoal (~user@2001:16a2:7a75:f800:7ae2:9bb1:6de0:1674) (Quit: Darkcoal)
[00:15:49] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[00:16:17] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 240 seconds)
[00:16:45] *** Quits: alch (~alch@151.36.79.133) (Read error: Connection reset by peer)
[00:20:54] *** Joins: alch (~alch@151.68.106.173)
[00:24:44] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[00:25:15] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-70b2-1b29-14df-adcf.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[00:27:15] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[00:27:50] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Quit: Leaving)
[00:28:31] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[00:29:05] *** Quits: begriffs (~begriffs@user/begriffs) (Quit: Leaving)
[00:32:03] *** Joins: brad_mssw|mbp (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[00:38:47] *** Parts: Franciman (~Franciman@mx1.fracta.dev) (WeeChat 3.3)
[00:39:25] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 268 seconds)
[00:39:50] *** Joins: inlight (~inlight@157.35.8.6)
[00:39:50] *** Quits: inlight (~inlight@157.35.8.6) (Changing host)
[00:39:50] *** Joins: inlight (~inlight@user/inlight)
[00:43:01] *** Joins: seninha (~seninha@user/seninha)
[00:49:40] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 256 seconds)
[00:51:19] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[00:53:31] *** Joins: Viewday11 (~Viewday@user/viewday)
[00:54:23] *** Joins: Thedarkb-Desktop (~Thedarkb@2001:bb6:b403:e042:211d:e242:8bb6:e66b)
[00:54:24] *** Quits: u0_a391 (~u0_a391@2603-6010-a141-6fa3-88f4-4cc9-a7b6-7571.res6.spectrum.com) (Read error: Network is unreachable)
[00:54:33] *** Joins: u0_a391 (~u0_a391@2603-6010-a141-6fa3-88f4-4cc9-a7b6-7571.res6.spectrum.com)
[00:54:47] *** Quits: CaCode (~CaCode@user/cacode) (Quit: Leaving)
[00:56:43] *** Joins: alarm (~alarm@2a01:e34:ee9f:a480:1843:4745:b5e1:cf0f)
[00:57:51] *** Quits: alarm (~alarm@2a01:e34:ee9f:a480:1843:4745:b5e1:cf0f) (Client Quit)
[00:58:18] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-3538-b015-ba08-d9e4.res6.spectrum.com)
[00:58:20] *** Quits: Thedarkb1-Deskto (~Thedarkb@2001:bb6:b403:e042:8422:a007:2837:346c) (Ping timeout: 252 seconds)
[01:01:32] *** Quits: plastico (~plastico@neomutt/plastico) (Ping timeout: 240 seconds)
[01:03:16] *** Joins: plastico (~plastico@neomutt/plastico)
[01:06:25] *** Quits: ZedHedTed (~ZedHedTed@user/zedhedted) (Quit: leaving)
[01:07:55] *** Joins: ZedHedTed (~ZedHedTed@user/zedhedted)
[01:10:18] *** johnjay__ is now known as bigjonny
[01:11:34] *** Quits: Hax0r (~Hax0r@46.38.81.225) (Remote host closed the connection)
[01:12:59] *** Quits: majors_ (~majors@user/majors) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[01:14:47] *** Joins: majors (~majors@user/majors)
[01:15:48] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[01:17:06] *** Joins: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy)
[01:18:57] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-3538-b015-ba08-d9e4.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[01:20:16] *** Quits: sonny (~sonny@8.6.144.252) (Ping timeout: 256 seconds)
[01:20:41] *** Quits: Dreg (~Dreg@fr33project.org) (Read error: Connection reset by peer)
[01:20:45] *** Joins: sbrothy (~sbrothy@23.102.41.137)
[01:20:47] *** Joins: Dreg- (~Dreg@fr33project.org)
[01:22:10] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[01:24:10] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[01:24:14] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[01:28:00] *** Joins: constxd (~brad@142.134.38.68)
[01:30:04] *** Quits: Libero (~Libero@77.49.184.64.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[01:30:54] *** Joins: j-james (~apropos@dhcp-206-87-152-169.ubcsecure.wireless.ubc.ca)
[01:34:05] *** Quits: Kev_ (~Kev@2a01cb0400149f005804b7059195ba5a.ipv6.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[01:36:19] *** Quits: pulse (~pulse@user/pulse) (Quit: Join a gamedev community https://indiedevs.net/)
[01:37:07] *** Quits: strajder (~strajder@user/strajder) (Quit: gn)
[01:38:21] *** Quits: kish` (~sid742412@user/aqua) (Ping timeout: 276 seconds)
[01:38:34] *** Joins: CaCode (~CaCode@user/cacode)
[01:40:51] *** Quits: u0_a391 (~u0_a391@2603-6010-a141-6fa3-88f4-4cc9-a7b6-7571.res6.spectrum.com) (Quit: WeeChat 3.0.1)
[01:41:07] *** Quits: j-james (~apropos@dhcp-206-87-152-169.ubcsecure.wireless.ubc.ca) (Quit: leaving)
[01:41:29] *** Joins: j-james (~apropos@dhcp-206-87-152-169.ubcsecure.wireless.ubc.ca)
[01:43:17] *** Joins: PortableDave (~portabled@220.253.22.64)
[01:43:21] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[01:46:13] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[01:48:04] *** Quits: magla (~gelignite@55d4e80d.access.ecotel.net) (Quit: Stay safe!)
[01:48:37] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 240 seconds)
[01:48:45] *** Quits: sbrothy (~sbrothy@23.102.41.137) (Quit: leaving)
[01:51:09] *** Joins: sbrothy (~sbrothy@23.102.41.137)
[01:57:45] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[02:01:43] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[02:03:35] *** Quits: j-james (~apropos@dhcp-206-87-152-169.ubcsecure.wireless.ubc.ca) (Quit: leaving)
[02:04:20] *** Joins: masterbuilder (~user@user/masterbuilder)
[02:04:37] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[02:04:39] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-3538-b015-ba08-d9e4.res6.spectrum.com)
[02:05:05] *** Joins: kish` (~sid742412@user/aqua)
[02:09:35] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[02:09:43] *** Joins: CaCode_ (~CaCode@user/cacode)
[02:10:37] *** Quits: pnill_ (~pnill@ip170.ip-54-39-37.net) (Ping timeout: 240 seconds)
[02:11:59] <constxd> any1 else wish there was a way to check if a two pointers point into the same object
[02:12:24] *** Quits: CaCode (~CaCode@user/cacode) (Ping timeout: 256 seconds)
[02:12:35] <constxd> very cringe that u cannot
[02:12:36] *** Joins: rgrinberg (~textual@187.223.23.238)
[02:12:47] <sham1> a == b?
[02:13:07] <omegatron> ^
[02:13:07] <sham1> Where a and b are pointers? That's what it means to point to the same object
[02:13:07] <constxd> no
[02:13:26] <constxd> not point to the same object, point *into* the same object
[02:13:45] <Twix> *a == *b
[02:13:54] *** Joins: stonkey (~stonkey@user/stonkey)
[02:14:09] <Twix> if a and b are pointers to pointers
[02:14:19] <Twix> ah
[02:14:39] <constxd> consider: char s[] = "based", *a = s + 2, *b = s + 4;
[02:14:39] <omegatron> if you know the exact size of your object ..
[02:15:52] <Twix> a >= s && a < s+sizeof(s) && b >= s && b < s+sizeof(s)
[02:16:12] *** Joins: Torr (~Torr@user/torr)
[02:16:15] <constxd> that is not allowed
[02:16:20] *** Joins: sonny (~sonny@2a09:bac0:14::806:90fc)
[02:16:28] <constxd> that's my point
[02:16:35] <Twix> why is that not allowed?
[02:16:42] *** Joins: Guest24 (~textual@63.119.181.194)
[02:16:58] *** Quits: Guest24 (~textual@63.119.181.194) (Client Quit)
[02:17:03] <constxd> because if a or b do not point into s, then such comparisons are UB
[02:18:08] <omegatron> where is UB?
[02:18:33] <twkm> you can write a test, though it would not be "fast".
[02:21:48] <Twix> omegatron, i think constxd might be right, even i'm not sure which rule that is. But c does not gurantee that all your objects are in the same address space
[02:22:06] *** Joins: dead1 (~dead1@user/dead1)
[02:22:07] *** Quits: Senicar (~Senicar@gateway/tor-sasl/senicar) (Remote host closed the connection)
[02:22:11] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[02:22:25] *** Joins: Senicar (~Senicar@gateway/tor-sasl/senicar)
[02:23:08] <constxd> ,c11 6.5.8p5
[02:23:10] <candide> http://www.iso-9899.info/n1570.html#6.5.8p5 [Relational operators] When two pointers are compared, the result depends on the relative locations in the address space of the objects pointed to. If two pointers to object types both point to the same object, or both point one past the last element of the same array object, they compare equal. If the objects pointed to are members of the same aggregate object,... <truncated; https://0x0.st/-C4g.txt>
[02:23:59] *** Joins: teepee (~teepee@openscad/teepee)
[02:24:12] <caze> constxd: Deal with it in the same way that you deal with overflow, or buffer overruns.
[02:24:27] <caze> e.g., check if it will trigger the condition, before you trigger it.
[02:24:41] *** Joins: UsbSick (~UsbSick@2600:6c48:757f:e654:217f:9d34:6545:b1a6)
[02:25:50] <System_Error> because if a or b do not point into s <- and how it happens if a >= s && a < s+sizeof(s)? Like giving it null?
[02:25:56] <caze> constxd: What problem are you trying to solve.
[02:26:23] <caze> ?
[02:27:05] <caze> System_Error: That would be defining the behavior.
[02:30:44] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[02:30:59] *** Joins: teepee (~teepee@openscad/teepee)
[02:33:46] *** Quits: pizdets (~pizdets@183.182.111.2) (Ping timeout: 250 seconds)
[02:33:53] *** Joins: pizdets_ (~pizdets@183.182.110.80)
[02:34:07] *** Quits: soul-d (~uknown@user/soul-d) (Read error: Connection reset by peer)
[02:35:04] <constxd> caze: i have a dynamically-sized array of T, and i have a list of pointers to T. some of the pointers in the list point into the array, but others do not. if i need to grow the array of T, i'd like to be able to go through the list of pointers and figure out which ones point into T so that i can update them after growing the array
[02:35:22] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:35:32] <System_Error> can I rant a bit about signed? Some coders do really stupid things. I've fixd few buffer overruns based on negative lengths and so on. Why coders even dare to think of negative lenths?
[02:35:59] <caze> constxd: YOu already have a bigger problem. When you realloc, the entire array might bet moved to an entirely different region, rendering *ever single* pointer invalid.
[02:36:21] <caze> constxd: Instead of storing pointers, store indices.
[02:36:22] <constxd> caze: yes that's exactly the problem i'm talking about
[02:36:43] <constxd> i can't store indices because not all of the pointers in my list are elements of this array
[02:37:40] <caze> constxd: Then you need another layer of abstraction.
[02:37:53] <constxd> i could store tagged unions of index | pointer
[02:38:15] <constxd> but then i pay a price every time i want to dereference
[02:38:22] <constxd> the underlying array grows infrequently
[02:38:43] <constxd> it makes more sense to just "fix" the invalidated pointers whenever the array grows
[02:38:55] <constxd> than it does to introduce any more indirection
[02:39:11] <constxd> but it's "illegal" because C is cringe
[02:39:35] <caze> constxd: Then before you realloc, you need to go through each pointer and calculate and store each offset. Then after the realloc, regenerate each pointer value using that stored offset.
[02:39:55] <constxd> yes that's illegal, that's the whole problem here
[02:40:07] <caze> constxd: Since you say you resize infrequently, it shouldn't be a performance hit.
[02:40:18] <caze> constxd: What is illegal?
[02:40:27] <constxd> not all of the pointers in the list point into that array
[02:40:41] *** Quits: highrate (~presonic@111-22-237-24.gci.net) (Read error: Connection reset by peer)
[02:40:46] <caze> Tag the ones that do.
[02:40:51] <caze> Keep them in a list.
[02:40:59] <constxd> see this is cringe
[02:41:02] *** Joins: highrate (~presonic@111-22-237-24.gci.net)
[02:41:08] * cousteau points out that there's a difference between "pointers that point TO the same object" and "INTO the same object"
[02:41:10] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[02:41:25] <caze> constxd: I wouldn't do it that way in the first place.
[02:41:31] <constxd> how would you do it
[02:41:36] <caze> constxd: Have you considered not reallocing at all?
[02:41:40] <cousteau> constxd: imagine a union { char A[2]; char B[3]; }
[02:42:08] <cousteau> and you have char *p = &u.A[0]
[02:42:15] <constxd> caze: yes but that's not really appropriate here
[02:42:21] <cousteau> does that point into u.A or into u.B or into both?
[02:42:36] <caze> constxd: Well I don't know what problem you're trying to solve, and what constraint you're under.
[02:43:11] <cousteau> the only way to figure out where does a pointer point into would be to provide more information to it
[02:43:31] <cousteau> so, pointers would be larger in size, contain more metadata
[02:43:37] <cousteau> and quite more complex
[02:44:08] <constxd> writing a VM for a dynamic programming language. the array in question is the VM's stack of values
[02:44:16] *** Joins: kurahaupo (~kurahaupo@pa49-182-131-41.pa.qld.optusnet.com.au)
[02:44:52] <caze> constxd: You could also store the pointers separately, and have one big array of pointer to pointer.
[02:45:07] <cousteau> how can a pointer either point into that stack or not?  Where else would it point?
[02:45:19] <constxd> well
[02:45:29] <cousteau> (this is more a rhetoric question than an "I didn't want to read the whole conversation so I probably missed it")
[02:45:36] <cousteau> (I mean, the latter is true too but)
[02:45:57] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:81c1:fdbc:2b2:4c4a) (Read error: Connection reset by peer)
[02:47:26] <constxd> the way assignment works is, the address of the "lvalue" is pushed onto a "target stack", and then later the address is popped from the target stack and the value is written at that address
[02:47:58] <cousteau> ...anyway, I don't think you're committing a crime if you do pointer arithmetic to see if the pointer points into boundaries.  It's probably technically UB, but you may check if most compilers actually support that
[02:48:04] <constxd> if the target of the assignment is a local variable, then the pointer points into the stack. if it's, say, a member of an object, then it does not
[02:49:04] *** Joins: ferdna (~ferdna@user/ferdna)
[02:49:24] <cousteau> maybe you need a struct { void *ptr; int is_stack; }
[02:50:21] <constxd> yes
[02:50:33] <constxd> i just wish that was not necessary
[02:50:38] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[02:50:51] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[02:51:00] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-3538-b015-ba08-d9e4.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[02:51:24] *** Quits: stonkey (~stonkey@user/stonkey) (Quit: Leaving)
[02:51:33] <caze> It's not.
[02:51:45] *** Quits: inlight (~inlight@user/inlight) (Remote host closed the connection)
[02:51:54] *** Quits: Akuli (~Akuli@82-203-166-212.bb.dnainternet.fi) (Quit: Akuli)
[02:51:59] <caze> Just keep the pointers separate, and have an array of pointer to pointers.
[02:52:36] <caze> You never have to regenerate the array of pointer to pointers.
[02:52:48] <cousteau> how would you make it not necessary?
[02:52:52] <caze> Only the array of pointers that the pointer to pointers is pointing into.
[02:53:04] <caze> By adding an extra level of indirection as I just described.
[02:53:45] <cousteau> the only reasonable thing you could complain of is that you're not allowed to do (p1 < p2 || p1 > p3) if p1 does not point into the same object as p2 and p3
[02:54:02] <cousteau> since that would solve the issue
[02:54:05] <caze> That is exactly what he is complaining about.
[02:54:33] <cousteau> I thought he was complaining that you can't test whether two pointers point into the same object
[02:54:49] <caze> Isn't that the same?
[02:55:23] <cousteau> no, checking that would also need information about which object do those pointers point into
[02:55:41] <cousteau> so, more information than just an adddress
[02:55:53] <caze> Where is that information?
[02:56:22] <cousteau> nowhere, that's why a mere pointer wouldn't work unless you changed the information pointers contain
[02:56:41] <caze> I don't understand what point you're trying to make.
[02:56:46] <cousteau> and instead of just an address they contain an address plus the object they point into
[02:58:22] <caze> I will write an example of my suggestion.
[02:59:08] *** Joins: soapsudsxx (~soapsudsx@209.221.40.139)
[02:59:53] *** Quits: moog (~moog@107.126.53.64) (Remote host closed the connection)
[03:00:19] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:00:49] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[03:01:02] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[03:01:17] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 240 seconds)
[03:07:45] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:08:22] *** Quits: rgrinberg (~textual@187.223.23.238) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:08:46] *** Joins: shivesh (~shivesh@user/shivesh)
[03:10:44] *** Joins: typeswitch (~textual@user/typeswitch)
[03:21:17] *** Quits: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy) (Ping timeout: 240 seconds)
[03:23:48] *** Quits: rahl (~rahl@102.114.76.77) (Ping timeout: 256 seconds)
[03:24:03] *** Joins: AbleBacon_ (~AbleBacon@user/AbleBacon)
[03:25:02] *** Joins: lragyslmtdwnbt^ (~lragyslmt@64.253.22.77)
[03:25:32] *** Joins: rahl (~rahl@102.114.28.121)
[03:26:37] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Ping timeout: 240 seconds)
[03:32:17] *** Joins: euouae (~euouae@user/euouae)
[03:36:00] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[03:36:13] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[03:38:28] *** Quits: euouae (~euouae@user/euouae) (Read error: Connection reset by peer)
[03:38:32] *** Quits: constxd (~brad@142.134.38.68) (Ping timeout: 256 seconds)
[03:41:02] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 240 seconds)
[03:42:25] *** AbleBacon_ is now known as AbleBacon
[03:42:50] *** Joins: Wulf (~Wulf@user/wulf)
[03:45:10] *** Quits: System_Error (~SystemErr@user/systemerror) (Remote host closed the connection)
[03:51:01] <caze> constxo: It'd probably be easier if you just store a base pointer plus offset.
[03:52:57] *** Joins: rgrinberg (~textual@187.223.23.238)
[03:53:01] *** Quits: nyah (~nyah@94.6.71.219) (Quit: leaving)
[03:54:27] <caze> constxo: Then when you need to grow your array, instead of doing realloc, you would first make a new array with the new size, copy the contents of the old array to the new bigger array, obtain the new base pointer, go through the big list looking for entries that have the old base address, and replace it with the new address.
[03:54:45] <caze> Then free the old array.
[03:55:30] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[03:55:48] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[03:57:17] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[03:57:17] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[03:57:17] *** Joins: wroathe (~wroathe@user/wroathe)
[03:59:27] *** Joins: chenqisu1 (~bhca7d@183.217.201.63)
[04:00:25] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d834-b7f2-fd3e-c3e9.res6.spectrum.com)
[04:01:41] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[04:01:54] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[04:08:41] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[04:09:18] *** Joins: malina (~malina@user/malina)
[04:11:22] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[04:11:35] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[04:12:07] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[04:14:57] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Ping timeout: 240 seconds)
[04:18:33] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[04:19:17] *** Quits: alch (~alch@151.68.106.173) (Ping timeout: 240 seconds)
[04:21:16] *** Joins: alch (~alch@151.82.102.52)
[04:21:17] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 240 seconds)
[04:21:33] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[04:21:36] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[04:21:46] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[04:28:10] *** Joins: rlp (~rlp@2600:1011:b035:1648:d91b:2625:e8d:38fb)
[04:31:14] *** Quits: CaCode_ (~CaCode@user/cacode) (Ping timeout: 256 seconds)
[04:31:44] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[04:31:57] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[04:33:30] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[04:34:09] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[04:35:24] *** Quits: Elladan (~elladan@user/elladan) (Quit: ZNC - http://znc.in)
[04:35:29] *** Quits: rlp (~rlp@2600:1011:b035:1648:d91b:2625:e8d:38fb) (Quit: Leaving)
[04:36:22] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[04:36:48] *** Joins: Elladan (~elladan@user/elladan)
[04:37:06] *** Joins: bindu (~bindu@user/bindu)
[04:37:28] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[04:44:14] *** Quits: sonny (~sonny@2a09:bac0:14::806:90fc) (Ping timeout: 268 seconds)
[04:45:30] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Read error: Connection reset by peer)
[04:45:39] *** Quits: defjam (~eb0t@90.210.94.161) (Ping timeout: 250 seconds)
[04:47:17] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (Ping timeout: 240 seconds)
[04:47:40] *** Quits: random-nick (~random-ni@87.116.180.98) (Ping timeout: 256 seconds)
[04:51:18] *** Joins: defjam (~eb0t@90.198.61.46)
[04:52:26] *** Quits: chomwitt (~chomwitt@2a02:587:dc19:a500:12c3:7bff:fe6d:d374) (Ping timeout: 245 seconds)
[04:52:30] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[04:56:12] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[05:01:25] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[05:01:38] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[05:04:17] *** Quits: rgrinberg (~textual@187.223.23.238) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:05:47] *** Joins: constxd (~brad@142.134.38.68)
[05:05:58] <constxd> caze: did you finish your example?
[05:06:38] <caze> constxd: Sort of, but then I ran into the problem of if you want to grow your table of pointers, then you have the same problem.
[05:07:02] <caze> It'd probably be easier if you just store a base pointer plus offset.
[05:07:12] <caze> Then when you need to grow your array, instead of doing realloc, you would first make a new array with the new size, copy the contents of the old array to the new bigger array, obtain the new base pointer, go through the big list looking for entries that have the old base address, and replace it with the new address.
[05:07:24] <caze> Then free the old array.
[05:08:02] <caze> Which is basically what realloc does.
[05:08:36] <caze> I mean you could just save the old base address, do the realloc, and then run through the array looking for reference to the old address.
[05:08:42] <caze> It's just an equality check.
[05:08:52] <caze> Although technically it's ID.
[05:09:08] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d834-b7f2-fd3e-c3e9.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[05:09:51] <caze> If you avoid realloc and manually do the copying to the new array like I just described, but update all references to the old array before freeing the old array, then you avoid that ID.
[05:10:01] <caze> I don't think it's worth it though.
[05:11:00] <caze> You would be copying over the entire array every single time, as opposed to only some of the time with realloc.
[05:11:53] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Remote host closed the connection)
[05:13:37] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[05:13:41] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Remote host closed the connection)
[05:14:05] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[05:15:08] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[05:17:40] *** Joins: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[05:17:42] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[05:18:15] *** Joins: sonny (~sonny@2a09:bac0:14::806:90fc)
[05:18:23] *** Quits: sonny (~sonny@2a09:bac0:14::806:90fc) (Client Quit)
[05:18:35] <caze> constxd: Here's the concept anyway. https://ideone.com/jySpOd
[05:18:46] *** Joins: fe23 (~fe23@2409:8a34:468:83d0:bc40:3ce4:280d:6ff1)
[05:20:13] <caze> constxd: big_list is the array of pointers that would point into both array1 and array2.
[05:20:21] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 245 seconds)
[05:20:38] <caze> constxd: But it actually points to an intermediate array of pointers for each of array1 and array2.
[05:21:23] <caze> constxd: So when array1 is realloced to be 200x bigger, the array is moved, and the pointer values from array1_pointers is updated to reflect that.
[05:21:38] <caze> big_list doesn't need updating, because nothing it points to has moved.
[05:22:06] <caze> The problem is when you need to grow array1_pointers. Then you're back to the original problem.
[05:23:33] <caze> It could be solved by making array1_pointers a linked list.
[05:24:06] <caze> But the whole thing could be avoided if you just stored the base address plus offset, and update the base address as needed.
[05:28:25] <caze> It works even if you point to e.g., a single int not in an array, because the base address would just be the address of the int, with 0 offset.
[05:34:47] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[05:37:10] <smallvil_> https://imgur.com/a/kfpLMwv how can i get gcc to have the correct cursor position when printing unicode?
[05:37:28] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[05:37:32] *** Quits: kanton (kanton@gateway/vpn/airvpn/kanton) (Ping timeout: 256 seconds)
[05:37:41] <smallvil_> as the first 2 are correct but the last one is not correct 
[05:37:55] <smallvil_> as the cursor is off by one
[05:38:07] *** Quits: chenqisu1 (~bhca7d@183.217.201.63) (Quit: Leaving)
[05:38:14] <smallvil_> also the " is overlaping for some reason
[05:39:04] *** Quits: typeswitch (~textual@user/typeswitch) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[05:39:18] <caze> Use a unicode library.
[05:39:57] <smallvil_> wow even clang has this same problem
[05:40:21] <smallvil_> https://imgur.com/a/tCYOLAp
[05:41:19] <smallvil_> should i just completely ignore unicode and do ASCII only?
[05:41:20] <danielcamiel> smallvil_: wing chang chun
[05:42:02] <MrMobius> can you modify a gcc object file to remove things you dont need?
[05:42:41] <MrMobius> ie void foo(){return 5;}void bar(){return 7;}int main(){return foo();}
[05:43:59] <MrMobius> could you chop out bar somehow or has the call to foo in main already been turned into a relative branch with a magic number displacement skipping over bar to the beginning of foo?
[05:44:16] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[05:44:22] <constxd> smallvil_: i seem to recall reading something about diagnostic message column indices and multibyte characters in the release notes for a recent GCC
[05:45:10] <constxd> but up until now gcc assumed 1 byte = 1 column
[05:45:31] <smallville7123> oof after restarting my terminal i get this https://imgur.com/a/D3UcozZ
[05:46:25] <smallville7123> definely does not support unicode :)
[05:46:36] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[05:46:56] <constxd> can you paste that code
[05:47:00] <wroathe> MrMobius: You're not calling bar there, and so it won't impact the running time of your program at all. The definition for bar will still be in the compiled object though, because it's got external linkage and the optimizer doesn't have the authority to just drop routines that might be linked into other objects
[05:47:25] <wroathe> MrMobius: If you were to do static void bar(); then the optimizer would completely omit it from the compiled object (since you're not calling it)
[05:47:58] <smallville7123> wroathe: -whole-program-optimization maybe?
[05:48:08] <wroathe> ?
[05:48:08] <floatcomplex> smallville7123: i think that was clang both times, unless you did something weird like install gcc and put it before your default path
[05:48:10] <wroathe> No, just -O
[05:48:14] <floatcomplex> which you should not do
[05:48:40] <MrMobius> wroathe, I get that. im trying to reduce file size on an embedded system where saving 10k is meaningful. the tool chain im using includes everything such as the entire floating point library so hello world is 26k
[05:48:56] <smallville7123> well then cpp redirects to clang o.o
[05:49:29] <smallville7123> Matthews-MacBook-Pro:MainApplication_CPP smallville7123$ cpp --help
[05:49:29] <smallville7123> OVERVIEW: clang LLVM compiler
[05:49:45] <wroathe> MrMobius: Well, at compile time you should prioritize making routines have internal linkage whenever possible, and the optimizer will then automatically either omit them if they're not called or inline them if they are
[05:50:08] <wroathe> MrMobius: There's various tuning settings for the optimizer that I don't have the energy to look up that will let you specify that you also want to optimize for size
[05:50:30] <wroathe> MrMobius: After that, you could see if link time optimization helps at all (LTO)
[05:51:36] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[05:51:41] <MrMobius> wroathe, hmm, seems the internal linkage would apply to my own code though. i dont want to wade into the bowels of the floating point stuff and all the other random crap they threw in just in case. ive brought this up to the people who put it together and they dont care
[05:51:49] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[05:51:57] <smallville7123> welp imma just abandon unicode support as it seems very difficult (even GCC/G++/clang/clang++ does not support this and those have been around for ages)
[05:51:57] <wroathe> Yup, it would just be for your code
[05:53:16] <wroathe> MrMobius: You could look into building that FP library from source and tweak the compiler settings to see if you can get a smaller version of that library
[05:53:19] <MrMobius> wroathe, ok i can check out linker optimization. currently compiling with -Os. the problem is that they just throw in everything imaginable just in case. in theory, does the linker have enough information in the object file that you could tell it to omit any functions it doesnt see used?
[05:53:50] <constxd> smallville7123: https://imgur.com/a/mK2WIqm
[05:54:09] <MrMobius> wroathe, the point is not that the fp library is too big the point is that hello world should be less than 1k since you dont need fp for that. it adds an extra 10k or more for fp even when you dont use it. ditto for other crap you dont use
[05:55:16] <wroathe> MrMobius: No, the linker doesn't have enough information on it's own. You need to tell it to build objects suitable for LTO IIRC
[05:56:25] <wroathe> MrMobius: But based on what you're saying is going on you should look into building your own version of the libraries you're dependent on from source first before you look into LTO
[05:56:38] *** Joins: malina (~malina@user/malina)
[05:56:51] <MrMobius> wroathe, the point is to exclude those libraries entirely. they are dead weight in my case
[05:57:19] <wroathe> MrMobius: Right, but something is linking them in. Is the platform compiler toolchain doing that?
[05:57:21] <floatcomplex> -ffunction-sections -Wl,-gc-sections -Wl,-s
[05:57:32] <floatcomplex> ^ should give you almost all the weight savings lto could
[05:57:39] <cousteau> also -fdata-sections ?
[05:58:05] <floatcomplex> if you like. usually doesn't do much
[05:58:16] <cousteau> ok.  Just an option I recalled using.
[05:58:32] <MrMobius> wroathe, exactly. I asked the maintainers about this and that is their plan.  include everything  just in case even if it's never used
[05:58:40] <cousteau> also, reasonable use of `static` in file-scope declarations can do wonders.
[05:58:41] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[05:58:42] <wroathe> Punch em in the dicks 
[05:59:00] <MrMobius> wroathe, im very nice to them since they are giving me something for free :)
[05:59:27] <oldlaptop> You should ask for your money back!
[06:00:14] <smallville7123> imma just stick to ASCII and just error out on any non ASCII byte encountered
[06:00:20] <wroathe> So it's an FP library that gets automatically linked into the final program by the compiler toolchain 
[06:01:08] <wroathe> Maybe you can run the build with verbose output and have it spit out the linker commands it runs
[06:01:23] <wroathe> And then you could just run those with the libs you want omitted 
[06:01:28] <MrMobius> yes and other shit like routines to write to FLASH and manipulate the LCD
[06:01:47] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[06:01:49] <MrMobius> wroathe, thats a good idea
[06:01:51] <smallville7123> MrMobius: why are you doing this?
[06:01:58] <wroathe> I hear that a lot 
[06:02:00] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[06:02:17] *** Joins: chenqisu1 (~bhca7d@183.217.201.63)
[06:02:42] *** Quits: chenqisu1 (~bhca7d@183.217.201.63) (Remote host closed the connection)
[06:03:01] *** Joins: chenqisu1 (~bhca7d@183.217.201.63)
[06:03:09] <MrMobius> smallville7123, to conserve limited flash space
[06:03:35] *** Quits: cousteau (~cousteau@user/cousteau) (Quit: ♫ I can't forget the day I shot that network down ♫)
[06:04:00] <caze> MrMobius: Maybe use a smaller libc?
[06:05:02] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 268 seconds)
[06:05:36] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[06:09:41] *** Joins: loganlee (~Thunderbi@user/loganlee)
[06:11:28] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[06:11:29] *** finstern1s is now known as finsternis
[06:11:33] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[06:11:42] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[06:13:00] <smallville7123> try -Os
[06:13:06] <dave0> maw
[06:13:32] <smallville7123> maw
[06:15:38] *** Quits: malloy (~jimery@116.30.221.255) (Ping timeout: 250 seconds)
[06:17:30] *** Joins: malloy (~jimery@116.30.221.255)
[06:21:27] *** Joins: halkony (~halkony@199.58.86.204)
[06:22:00] *** Quits: finsternis (~X@23.226.237.192) (Quit: leaving)
[06:22:40] *** Joins: finsternis (~X@23.226.237.192)
[06:30:33] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: leaving)
[06:32:57] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 240 seconds)
[06:34:52] *** Joins: zensei (~zensei@user/zensei)
[06:35:36] *** Quits: zensei (~zensei@user/zensei) (Client Quit)
[06:43:57] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 240 seconds)
[06:44:39] *** Joins: Viewday113 (~Viewday@user/viewday)
[06:46:05] *** Joins: imm_ (~imm_@user/imm/x-3405860)
[06:46:15] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[06:46:16] *** Viewday113 is now known as Viewday11
[06:47:42] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[06:50:21] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:152:f162:2b1b:5a42) (Quit: Quit)
[06:53:42] *** Quits: lragyslmtdwnbt^ (~lragyslmt@64.253.22.77) (Remote host closed the connection)
[06:54:30] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:54:31] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[06:57:40] *** Quits: novns (~novns@user/novns) (Quit: ZNC 1.8.2 - https://znc.in)
[07:03:57] *** Quits: Charadon (~Charadon@155.138.164.183) (Ping timeout: 240 seconds)
[07:05:13] *** Joins: Viewday117 (~Viewday@user/viewday)
[07:05:56] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Ping timeout: 256 seconds)
[07:06:56] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net)
[07:07:31] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d834-b7f2-fd3e-c3e9.res6.spectrum.com)
[07:07:38] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[07:07:38] *** Viewday117 is now known as Viewday11
[07:08:39] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[07:10:55] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:10:57] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[07:11:34] *** Quits: masterbuilder (~user@user/masterbuilder) (Remote host closed the connection)
[07:12:20] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Client Quit)
[07:17:21] *** Quits: ckdCreations (~ckdCreati@147.55.133.131) (Read error: Connection reset by peer)
[07:17:22] *** Quits: halkony (~halkony@199.58.86.204) (Remote host closed the connection)
[07:17:38] *** Quits: bindu (~bindu@user/bindu) (Quit: Leaving)
[07:17:39] *** Quits: fluter (~fluter@user/fluter) (Quit: WeeChat 3.3)
[07:17:56] *** Joins: ckdCreations (~ckdCreati@2607:fb90:8357:35f0:5094:958:f5f3:5548)
[07:18:15] *** Joins: bindu (~bindu@user/bindu)
[07:21:37] *** Quits: rahl (~rahl@102.114.28.121) (Ping timeout: 240 seconds)
[07:21:54] <wroathe> Lol, you really can't do dick with the free tier from Azure. Windows 10 doesn't run with only a single core and a gig of memory. 
[07:24:26] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Quit: This computer has gone to sleep)
[07:26:06] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[07:26:25] *** Joins: nostart (~nostar@107.175.102.75)
[07:27:07] <floatcomplex> azure runs windows? what for
[07:27:31] <wroathe> Ostensibly to keep the MS software dream alive
[07:27:51] *** Joins: bindu (~bindu@user/bindu)
[07:28:11] <wroathe> They've really got the corporate world dependent on them 
[07:28:37] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Ping timeout: 240 seconds)
[07:29:06] <floatcomplex> yeah but for like client side stuff
[07:29:54] <floatcomplex> outlook and powerpoint and
[07:30:08] <floatcomplex> not sure why you'd want to run those in a cloud
[07:30:38] *** Joins: larry87 (~quassel@c-73-6-106-85.hsd1.tx.comcast.net)
[07:31:39] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[07:32:43] <wroathe> AD
[07:33:49] <wroathe> My personal use case is debugging why Docker Desktop for Windows is in a sorry state in a highly restricted corporate workstation environment
[07:34:04] <wroathe> I don't own a Windows machine, and so it's handy to be able to get a Win 10 VM in the cloud
[07:35:18] <floatcomplex> they have microsoft VMs for developers for that purpose don't they
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:11] <wroathe> Yeah, they do
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:40] <wroathe> But running a VM locally on this mac laptop when I need to also have hyper-v installed requires nested virtualization
[07:36:48] <wroathe> Which you don't get with an OSX host 
[07:37:24] <wroathe> Well, not nested for Windows guests, anyway
[07:37:26] <floatcomplex> wtf
[07:37:31] <floatcomplex> i do that all the time
[07:37:57] <floatcomplex> with virtualbox, with windows guest images from ms, on a macos host
[07:38:32] <floatcomplex> intel mac tho. haven't had a chance to try it on an arm mac, i imagine it doesn't work at all or is fiddly due to emulation
[07:38:54] <wroathe> Right, but do you do OSX host -> Windows guest with Hyper-V enabled -> More Windows guests hosted by the first windows VM
[07:39:26] <wroathe> I need to install Docker and host windows containers in the guest to figure out my networking issues 
[07:39:27] <floatcomplex> oh. no, i do not do that...why are you doing that
[07:40:00] <wroathe> Anyway, the cloud VM is just easier
[07:40:05] <wroathe> Technically a local VM would probably  work
[07:40:18] *** Quits: NEYi (~NEYi@109.251.216.38) (Quit: Leaving)
[07:40:32] <wroathe> Because I don't actually need to host guests of a guest windows VM. I just need hyper-v enabled so Docker can use it's networking features on the Windows guest
[07:42:52] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[07:42:58] <wroathe> That said, I seem to remember that the last time I tried enabling Hyper-V in a windows guest it threw an error when starting one of the core Hyper-V services
[07:43:14] <wroathe> That I just assumed was it protesting being run inside of a VM inside of an OSX host
[07:43:25] *** Joins: fluter (~fluter@user/fluter)
[07:45:14] *** Quits: puke (~puke@user/puke) (Quit: puke)
[07:45:32] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 268 seconds)
[07:46:46] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[07:48:43] *** Joins: kdc (~kdc@196.211.197.159)
[07:48:57] *** Quits: mr_ab (~nobody@bnc.ab.hl9.net) (Read error: Connection reset by peer)
[07:50:13] *** Joins: bud (~bud@user/bud)
[07:52:30] *** Joins: duuude (~user@user/duuude)
[07:53:44] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:b90c:86ca:3fd:ed2a)
[07:55:04] *** Quits: smeso (~smeso@user/smeso) (Quit: smeso)
[07:56:23] *** Joins: stultusv_ (~stultusv@p7176066-ipoefx.ipoe.ocn.ne.jp)
[07:57:03] *** Joins: malina (~malina@user/malina)
[07:58:58] <wroathe> And of course Azure only supports VMX for specific sizes of VMs
[07:59:04] <wroathe> @#$%
[07:59:26] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[08:03:13] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d834-b7f2-fd3e-c3e9.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[08:03:24] *** Joins: smeso (~smeso@user/smeso)
[08:04:04] *** Quits: reset (~reset@user/reset) (Quit: reset)
[08:04:20] *** stultusv_ is now known as stultusv
[08:04:29] *** Quits: stultusv (~stultusv@p7176066-ipoefx.ipoe.ocn.ne.jp) (Changing host)
[08:04:29] *** Joins: stultusv (~stultusv@user/stultusv)
[08:04:50] *** Joins: bindu_ (~bindu@user/bindu)
[08:04:58] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Quit: This computer has gone to sleep)
[08:05:23] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[08:05:27] *** Quits: bindu (~bindu@user/bindu) (Quit: Leaving)
[08:05:45] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[08:05:46] <SamuelMarks> hi
[08:05:53] *** Joins: Jck_true8 (~jcktrue@user/jck-true/x-0200799)
[08:05:54] *** Joins: reset (~reset@user/reset)
[08:05:58] <SamuelMarks> On Ubuntu but not Debian I'm getting: "/usr/include/string.h:33:10: fatal error: 'stddef.h' file not found". Any ideas?
[08:06:14] <SamuelMarks> LLVM https://github.com/SamuelMarks/type-correct/runs/4583832029?check_suite_focus=true#step:7:104
[08:06:15] <candide> Title of SamuelMarks's link: [.github/workflows/x86-ubuntu-llvm-from-sources.yml] Debug `ctest` failure · SamuelMarks/type-correct@802c554 · GitHub
[08:06:36] *** bindu_ is now known as bindu
[08:06:37] *** Quits: Jck_true (~jcktrue@user/jck-true/x-0200799) (Ping timeout: 240 seconds)
[08:06:37] *** Jck_true8 is now known as Jck_true
[08:07:08] *** Quits: chenqisu1 (~bhca7d@183.217.201.63) (Ping timeout: 256 seconds)
[08:07:19] *** Joins: codethulu (~codethulu@cpe-173-174-108-148.austin.res.rr.com)
[08:07:36] *** Quits: stultusv (~stultusv@user/stultusv) (Quit: Leaving)
[08:07:53] *** Joins: stultusv (~stultusv@user/stultusv)
[08:09:55] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[08:10:14] *** Quits: stultusv (~stultusv@user/stultusv) (Client Quit)
[08:10:23] *** Quits: codethulu (~codethulu@cpe-173-174-108-148.austin.res.rr.com) (Client Quit)
[08:10:26] *** Joins: stultusv (~stultusv@user/stultusv)
[08:14:50] *** Joins: Viewday115 (~Viewday@user/viewday)
[08:15:05] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:15:21] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[08:15:21] *** Viewday115 is now known as Viewday11
[08:15:37] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:a702:8888:6dc4:476) (Ping timeout: 240 seconds)
[08:19:02] *** Quits: alch (~alch@151.82.102.52) (Ping timeout: 256 seconds)
[08:20:10] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Read error: Connection reset by peer)
[08:20:26] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[08:20:43] *** Joins: alch (~alch@151.34.112.171)
[08:23:10] *** Joins: rgrinberg (~textual@187.223.23.238)
[08:24:46] *** Quits: dead1 (~dead1@user/dead1) (Quit: Leaving)
[08:26:02] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[08:26:50] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[08:29:05] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[08:29:14] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[08:30:57] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 240 seconds)
[08:34:49] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[08:35:19] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[08:37:15] *** Joins: pingpongball (~pingpongb@user/pingpongball)
[08:37:30] <pingpongball> Hey guys i'm getting error when compiling.
[08:37:36] <pingpongball> `configure: error: C compiler cannot create executables`
[08:37:44] <pingpongball> when putting CFLAGS
[08:38:09] <pingpongball> These are my flags
[08:38:24] <pingpongball> `CFLAGS='-O3 -finline-functions -mieee-fp -fforce-mem -fschedule-insns -fstrict-aliasing -fomit-frame-pointer -fmove-all-movables -funroll-loops -ftracer -momit-leaf-frame-pointer -fprefetch-loop-arrays  -pipe -funswitch-loops -flto -march=native'`
[08:38:42] <pingpongball> Would you please tell me what flag is giving this error?
[08:41:15] <bparker> are you using ccache
[08:41:51] <pingpongball> no i'm not using ccahe
[08:42:41] *** Quits: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net) (Quit: b1101)
[08:43:37] <pingpongball> Is there any way to check while compilation that , oh that flag is causing error?
[08:44:16] *** Joins: kaph (~kaph@net-2-47-236-216.cust.vodafonedsl.it)
[08:44:31] *** Joins: Viewday111 (~Viewday@user/viewday)
[08:44:37] *** Joins: gco (~gco@2601:647:4c80:2424:514d:4f7d:2eff:e8d2)
[08:45:25] <pingpongball> oh i found where error was coming :)
[08:46:14] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[08:46:15] *** Viewday111 is now known as Viewday11
[08:46:23] <pingpongball> in config.log those `fmove-all-movables` and `-fforce-mem` were causing that error,
[08:46:29] <pingpongball> now it is compiling
[08:46:55] <floatcomplex> is this more gentoo madness
[08:47:08] *** Joins: pnill (~pnill@ip170.ip-54-39-37.net)
[08:47:36] <floatcomplex> you cannot simply use whatever cflags you like to compile software you didn't write, overriding whatever the maintainers provided
[08:47:45] <floatcomplex> and expect anything to work
[08:47:51] <floatcomplex> we've been over this
[08:48:36] <pingpongball> i'm trying to optimizing for performance as much as possible, i'm fine if it break program, but i want to do experimentation , on adding clfags
[08:48:49] <floatcomplex> then do it on your own code
[08:48:49] <pingpongball> :)
[08:49:21] <pingpongball> whats difference betwn `Ofast` and `O3`
[08:50:32] <floatcomplex> we had this exact conversation
[08:50:36] <floatcomplex> a few days ago
[08:50:45] <pingpongball> =$
[08:50:48] <floatcomplex> about -Ofast in particular
[08:50:53] <rcf> poe's law strikes again 
[08:51:26] <wroathe> What's the difference between -Ofast and -Oludicriouslyfast
[08:52:10] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[08:52:49] <wroathe> When I finally build my compiler I'm going to add an optimization level that just emits an executable without any code other than the main routine that calls exit immediately
[08:53:04] <wroathe> fast, faster, fastest
[08:53:35] <floatcomplex> smh
[08:55:14] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[08:56:03] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[08:56:43] <wroathe> There must be a special rung of hell for people who refer to restaurants as concepts 
[08:57:13] <pingpongball> i've a question, like if i used flag `-Ofast`
[08:57:34] <pingpongball> i'm getting error
[08:57:35] <pingpongball> `floatfns.c:56:3: error: #error Emacs cannot be built with -ffinite-math-only  56 |  #error Emacs cannot be built with -ffinite-math-only`
[08:57:53] <pingpongball> got error when compile, that `-ffinite-math-only` gave error,
[08:58:39] <pingpongball> Is there any way to tell in CFLAGS that,   "Listen i want to use `-Ofast` but i dont want to use `--ffinite-math-only` ?
[08:58:52] <pingpongball> is there any way?
[08:59:04] <floatcomplex> yes, but i'm not going to tell you because that's the tip of the iceberg
[08:59:46] <floatcomplex> that check is a special fuck you to gentoo users from emacs devs. they should refactor their math. but YOU should not assume other peoples' code can be compiled with whatever cflags you want
[08:59:48] <pingpongball> tellme christmas is coming  :)
[09:00:40] <floatcomplex> pingpongball: what cflags does emacs want to use before you try to override it
[09:00:58] <pingpongball> oh dont get angry , you could just tell no i'll accept happiliy.
[09:01:00] <pingpongball> :)
[09:01:11] <wroathe> no
[09:04:44] *** Joins: chenqisu1 (~bhca7d@183.217.201.63)
[09:04:46] <oldlaptop> wroathe: I think -Oludicrouslyfast involves plaid.
[09:04:56] *** Quits: nostart (~nostar@107.175.102.75) (Quit: Leaving)
[09:05:11] *** Joins: Viewday113 (~Viewday@user/viewday)
[09:05:16] <floatcomplex> plaid is the linker
[09:05:51] * wroathe doesn't know what plaid means in this context, and so just smiles and nods enthusiastically 
[09:06:02] <pony> i use vim btw
[09:07:02] <wroathe> For fucks sake
[09:07:06] <floatcomplex> ahahaha
[09:07:12] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[09:07:46] *** Joins: Viewday11 (~Viewday@user/viewday)
[09:07:52] <wroathe> This meatball of a security guy said he was able to reproduce this issue with Docker I've been having on my corporate laptop with his personal PC that has the firewall disabled 
[09:07:54] <pony> pls ignore me
[09:07:59] <wroathe> And so it couldn't be the firewall
[09:08:07] <wroathe> I just tested it, and of course everything works perfectly
[09:08:11] <wroathe> Fucking meatballs
[09:08:46] *** Quits: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com) (Remote host closed the connection)
[09:09:22] *** Quits: Viewday113 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[09:09:55] <wroathe> He just had that look about him that says "Well, I'm kind of an idiot, and I'm about to do fucking nothing about this ticket you just submitted"
[09:11:49] <floatcomplex> pony: you use vim as your linker tho?
[09:12:33] <pony> nah
[09:12:57] <pony> I never know what to say here, so I just end up saying stupid shit
[09:13:40] <pingpongball>  Hy i compiled using alot of flags, that https://gcc.gnu.org/onlinedocs/gcc/Optimize-Options.html provided , searched with "performance"
[09:13:44] *** Quits: pingpongball (~pingpongb@user/pingpongball) (Quit: Client closed)
[09:14:36] <dave0> more flags=more better
[09:15:20] <caze> https://www.shlomifish.org/humour/by-others/funroll-loops/Gentoo-is-Rice.html
[09:16:11] <floatcomplex> wroathe: every day lately i have been reminded violently that just because some people are paid to know what a public key is, doesn't mean the people paying them know how to actually hire for that
[09:18:01] <oldlaptop> wroathe: I am shocked and horrified at this display of cultural illiteracyt. https://www.youtube.com/watch?v=mk7VWcuVOf0
[09:18:02] <candide> Title of oldlaptop's link: Spaceballs - They've gone into plaid - YouTube
[09:20:24] <wroathe> oldlaptop: Hahaha, I've seen that movie many times, but I didn't remember the plaid detail 
[09:20:38] <wroathe> oldlaptop: My brain is so full of useless details that they occasionally leak out 
[09:20:53] <oldlaptop> my brain only leaks useful details
[09:21:04] <wroathe> I miss Rick Moranis 
[09:21:49] <floatcomplex> he's still alive
[09:22:00] <floatcomplex> you can probably go have a pint with him
[09:22:01] <oldlaptop> his family needed him more than we did :(
[09:22:24] <wroathe> floatcomplex: I mean miss him in movies 
[09:22:51] *** Joins: dsrt^ (~dsrt@64.253.22.77)
[09:23:03] <dave0> maybe he should turn to directing
[09:23:42] <caze> I never got that.
[09:23:44] <caze> plaid.
[09:24:23] <floatcomplex> if they'd made it a few years later it would have been flying toasters
[09:24:45] <caze> I miss the fat one too.
[09:25:01] <floatcomplex> john candy?
[09:25:05] <caze> He's actually dead thogh.
[09:25:14] <caze> Del Griffith
[09:25:42] <oldlaptop> John Candy, in that movie.
[09:26:15] <oldlaptop> (Mel Brooks and multiple SCTV cast members, bound to end well)
[09:26:55] *** Joins: node1 (~node1@user/node1)
[09:27:43] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[09:28:28] *** Quits: gco (~gco@2601:647:4c80:2424:514d:4f7d:2eff:e8d2) (Quit: ZZZzzz…)
[09:28:30] <caze> Now I want to watch Princess Bride.
[09:29:03] *** Joins: pingpongball (~pingpongb@user/pingpongball)
[09:29:05] <floatcomplex> the one with pedro pascal?
[09:29:55] <caze> Andre the Giant
[09:29:57] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[09:31:37] <wroathe> caze: It's been a long time since I've seen that movie, but they recently did a table read for charity that's on youtube
[09:31:43] <caze> https://www.youtube.com/watch?v=wObPiiHV4pY
[09:31:44] <candide> Title of caze's link: 'Andre's Flatulence' Official Clip | Andre The Giant | HBO - YouTube
[09:31:47] <wroathe> Was pretty good IMO
[09:33:48] <pingpongball> Hey guys
[09:33:58] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[09:35:46] <wroathe> It feels like we didn't need another Matrix movie
[09:36:09] <oldlaptop> pingpongball: In case you haven't worked it out yet: Adding lots of random compiler optimization flags without understanding what they do (or with understanding what they do, for that matter) is not a good idea.
[09:36:40] *** Joins: Viewday111 (~Viewday@user/viewday)
[09:36:48] <caze> pingpongball: Do you know C?
[09:37:10] <pingpongball> yes i know but i'vent tried to use those flag based
[09:37:32] <oldlaptop> Some of gcc's optimization flags are documented to cause it to behave incorrectly (which is what emacs is complaining about for you). Adding the other ones is still more likely to expose subtle compiler bugs, and some of them can often actually make your program slower in practice.
[09:37:44] <floatcomplex> i'm pretty sure pingpongball is a social experiment being conducted by the university of minnesota
[09:37:53] *** Joins: novns (~novns@user/novns)
[09:38:03] <wroathe> floatcomplex: As a Minnesotan this makes me sad 
[09:38:18] <pingpongball> no guys, i'm far away from your location
[09:38:20] <oldlaptop> If an optimization is not performed by -O2 (or -Os), there's usually a good reason for that.
[09:38:22] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[09:38:23] *** Viewday111 is now known as Viewday11
[09:38:23] <neshpion> wroathe: we *never* needed another matrix movie, and there is only 1
[09:38:55] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[09:39:10] <wroathe> I didn't hate the last two. They had their moments. 
[09:40:03] <floatcomplex> oldlaptop: i am firmly in the camp that if you are writing new code that doesn't behave qualitatively correctly under both -Ofast and -Os then you need to refactor it. but expecting other people's existing code to magically have been refactored thus is just stupid. like, untestably stupid
[09:40:25] <floatcomplex> pingpongball says they don't care if things break but how would you even tell?
[09:41:00] <oldlaptop> floatcomplex: No argument.
[09:41:05] <pingpongball> aummm yes but partially,
[09:41:32] <pingpongball> if my emacs runs as lightening fast , but i know it is stupid idea to use those without any knowledge :)
[09:41:50] <floatcomplex> why do you need emacs to be fast?
[09:41:55] <wroathe> fucking lol
[09:41:58] <floatcomplex> at the possible expense of behaving correctly?
[09:42:00] <caze> Why does emacs need to run any faster than you can type?
[09:42:15] <wroathe> I highly doubt that the one thing the Emacs maintainers didn't consider is compiler optimizations 
[09:42:20] <pingpongball> aummm i want as fast as vim.
[09:42:27] <floatcomplex> by what metric?
[09:42:31] <wroathe> floatcomplex: Holy shit you might actually be right
[09:42:35] <pingpongball> oh i didnt told you guys what thing i put when compilation.
[09:43:13] <oldlaptop> emacs doesn't have anything to do with how quickly you'll be able to compile a program, if that's what you're trying to say
[09:43:33] <pingpongball> yes but recent version contains native compilation
[09:43:45] <pingpongball> `CFLAGS='-O3 -fbranch-probabilities -fprofile-values -fprofile-reorder-functions -fvpt -frename-registers -fschedule-fusion -fpeel-loops -fsplit-loops -fversion-loops-for-strides -ffunction-sections -fdata-sections -fstdarg-opt -fsection-anchors -fgcse -fipa-cp -ftree-loop-distribution -floop-interchange -freorder-blocks-and-partition
[09:43:45] <pingpongball> -fprofile-partial-training -fcode-hoisting -finline-functions -mieee-fp -fstrict-aliasing -fomit-frame-pointer -funroll-loops -ftracer -momit-leaf-frame-pointer -fprefetch-loop-arrays -pipe -funswitch-loops -flto -march=native' CPU_FLAGS_X86='mmx mmxext sse sse2 sse3'`
[09:43:53] <floatcomplex> candide: ^
[09:43:53] <candide> ^ is the bitwise exclusive OR (XOR) binary operator
[09:43:59] <floatcomplex> no dammit
[09:44:07] <wroathe> floatcomplex: yes it is
[09:44:07] <pingpongball> :)
[09:44:26] *** Joins: katnis (uid15849@id-15849.helmsley.irccloud.com)
[09:44:30] <caze> pingpongball: Do you know what any of those do?
[09:44:33] <oldlaptop> pingpongball: Without careful testing, you have no way of knowing all that nonsense doesn't actually /slow it down/.
[09:44:57] <oldlaptop> Some of them can make the generated code much larger, which can (sometimes) be (catastrophically) bad for performance, on modern CPUs.
[09:45:05] <pingpongball> =L  yes if it slows down , i'll be victim.
[09:45:13] *** Quits: diiirt (~diiirt@user/diiirt) (Remote host closed the connection)
[09:45:14] <oldlaptop> (okay, "catastrophically" is overwrought)
[09:45:28] <caze> "victim" as if you would notice the difference either way.
[09:45:55] <pingpongball> i've compiled emacs before using not any flags
[09:46:02] <pingpongball> but anyway
[09:46:09] <caze> And what happened?
[09:46:21] <floatcomplex> pingpongball: and what cflags did it use, when you did not override them
[09:46:29] <pingpongball> i dont know but everywhere i see `gmon.out`
[09:46:34] <pingpongball> so i'm recompiling
[09:46:34] *** Joins: mattil (~mattil@helsinki.portalify.com)
[09:46:48] <pingpongball> :D  done compilation
[09:46:50] <pingpongball> :*
[09:47:01] <caze> pingpongball: Do you know C?
[09:47:09] <pingpongball> yes i know
[09:47:14] *** Quits: inomoz (~inomoz@85.26.165.145) (Quit: WeeChat 3.3)
[09:47:37] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 240 seconds)
[09:47:57] <caze> pingpongball: No you don't.
[09:48:04] <floatcomplex> i'm pretty sure pingpongball is an experiment being conducted by the AI department at the university of minnesota
[09:48:22] <pingpongball> no man , i'm from Nepal
[09:48:24] <caze> pingpongball: ,cc char a[3]; printf("%zu", sizeof a);
[09:48:24] <pingpongball> :)
[09:48:26] <candide> pingpongball: 3
[09:48:43] <pingpongball> ahhhhh, whats that
[09:48:45] <caze> pingpongball: What is char a[3]; printf("%zu", sizeof (a + 0));
[09:48:53] <caze> What will be output?
[09:49:10] <pingpongball> :]  let me think
[09:49:19] <pingpongball> nothing
[09:49:25] <pingpongball> %zu isnt for int
[09:50:00] <caze> %zu is for size_t
[09:50:14] <caze> which is the type yielded by sizeof.
[09:50:23] <Learath2> The AI doesn't seem to have learned the less common print format specifiers
[09:50:23] <pingpongball> =L  oh
[09:51:19] <caze> pingpongball: ,cc char a[3]; printf("%zu", sizeof (a + 0));
[09:51:22] <candide> pingpongball: 8
[09:51:31] <caze> pingpongball: What optimization flag caused that result?
[09:52:01] <oldlaptop> floatcomplex: No way the IRB would let them cruelly expose an AI to #c
[09:52:01] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Quit: This computer has gone to sleep)
[09:52:04] <pingpongball> guys i'm not c hardcore fans, just love it because linus torvald love it
[09:52:24] <caze> pingpongball: Maybe you should learn it.
[09:52:29] <floatcomplex> oldlaptop: i'm reasonably sure that has happened
[09:52:32] <caze> If you love it so much.
[09:52:37] <pingpongball> aummm yes, but i need more time, i'm js developer :(
[09:53:33] <floatcomplex> pingpongball: do you understand that you cannot simply replace the cflags the developer/maintainer of a piece of software shipped with their software with whatever you want and expect it to work?
[09:53:41] <floatcomplex> this isn't like a c specific concept
[09:53:51] <floatcomplex> this is a basic troubleshooting concept
[09:54:21] <pingpongball> yes i understand, and fully aware . but as a fun
[09:54:26] <oldlaptop> In principle, the ones that aren't documented to cause the compiler to behave incorrectly shouldn't affect the program's behavior. (In practice, compilers are not perfect.)
[09:54:33] <floatcomplex> this is like, a corollary of the scientific method itself
[09:54:51] <floatcomplex> if you have no ability to test a hypothesis then you're just fucking around
[09:55:11] <oldlaptop> Even in an imaginary fairyland where there are no bugs, they can still make it slower. (Particularly the ones that tell it to waste space.)
[09:55:34] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[09:55:34] <pingpongball> ok guys
[09:55:39] <pingpongball> see you later
[09:55:53] <pingpongball> have a great day and smile on face :)
[09:55:56] *** Quits: pingpongball (~pingpongb@user/pingpongball) (Quit: Client closed)
[09:55:59] *** Joins: rahl (~rahl@102.114.134.73)
[09:56:03] <Learath2> I'm so sure he is just GPT3, it even used the singular form of linus torvalds
[09:57:15] <floatcomplex> oldlaptop: also re: the irb, that's why i said that university in particular, they are known to be asleep at the wheel w/r foss stuff
[09:58:43] <oldlaptop> I still refuse to believe they'd condone blatant cruelty to AIs
[09:58:55] *** Joins: xa0s (~xa0s@mab.sdf.org)
[09:59:22] <caze> They trolled Linus.
[09:59:38] <caze> I thought it was kinds funny.
[10:00:18] <wroathe> No, I refuse to smile
[10:00:24] <wroathe> How dare he tell me to smile
[10:00:37] <wroathe> I am become death
[10:03:13] <pony> how many torvalds does it take to screw in a light bulb
[10:04:49] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[10:06:16] <floatcomplex> same number it takes to screw anywhere else i'd imagine
[10:06:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[10:09:37] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[10:10:25] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[10:10:55] *** Joins: Enitin (~Enitin@82.102.22.86)
[10:12:57] *** Quits: kaph (~kaph@net-2-47-236-216.cust.vodafonedsl.it) (Ping timeout: 240 seconds)
[10:12:58] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[10:12:58] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[10:12:58] *** Joins: wroathe (~wroathe@user/wroathe)
[10:13:50] *** Joins: Viewday115 (~Viewday@user/viewday)
[10:13:58] *** Quits: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (Quit: mikoto-chan)
[10:15:12] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[10:15:13] *** Viewday115 is now known as Viewday11
[10:17:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[10:17:42] *** Joins: nostar (~nostar@68.51.221.108)
[10:18:11] *** Joins: node1 (~node1@user/node1)
[10:18:48] *** Quits: stultusv (~stultusv@user/stultusv) (Remote host closed the connection)
[10:21:34] *** Quits: duuude (~user@user/duuude) (Ping timeout: 268 seconds)
[10:23:30] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[10:23:53] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[10:26:38] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[10:27:04] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[10:27:22] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[10:27:44] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[10:27:46] *** Quits: Senicar (~Senicar@gateway/tor-sasl/senicar) (Remote host closed the connection)
[10:27:59] *** Joins: Senicar (~Senicar@gateway/tor-sasl/senicar)
[10:30:57] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[10:31:17] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[10:31:40] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[10:33:13] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[10:35:19] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: my cats are fighting)
[10:35:24] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[10:40:51] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[10:42:57] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[10:42:58] *** Quits: PortableDave (~portabled@220.253.22.64) (Ping timeout: 256 seconds)
[10:44:11] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[10:47:06] *** Joins: duuude (~user@user/duuude)
[10:50:46] *** Joins: Enitin (~Enitin@82.102.22.85)
[10:52:49] *** Quits: Haxxa (~Haxxa@202-130-211-204.ip4.superloop.com) (Quit: Haxxa flies away.)
[10:54:31] *** Joins: slidercrank (~slidercra@user/slidercrank)
[10:55:17] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[10:55:32] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[10:56:36] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[10:58:04] *** Joins: mphojele (~mphojelem@2001:470:69fc:105::35ab)
[10:58:16] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[10:58:31] *** Quits: mphojele (~mphojelem@2001:470:69fc:105::35ab) (Quit: Reconnecting)
[10:58:34] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[10:58:45] *** Joins: mphojele (~mphojelem@2001:470:69fc:105::35ab)
[10:59:31] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[11:05:07] *** Joins: Viewday110 (~Viewday@user/viewday)
[11:05:34] *** Joins: Haxxa (~Haxxa@202-130-211-204.ip4.superloop.com)
[11:05:49] *** Joins: Libero (~Libero@77.49.184.64.dsl.dyn.forthnet.gr)
[11:07:20] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[11:07:20] *** Viewday110 is now known as Viewday11
[11:08:53] *** Joins: yo (~0xfe0@49.36.186.18)
[11:08:53] *** Joins: kaph (~kaph@151.35.8.156)
[11:11:50] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[11:14:17] *** Quits: constxo (~brad@142.134.38.68) (Ping timeout: 240 seconds)
[11:15:55] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[11:16:57] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[11:17:23] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[11:18:27] *** Joins: Klinda (~superleag@user/klinda)
[11:19:39] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[11:19:52] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[11:21:59] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[11:22:59] *** Joins: mrig (~AdiIRC@user/mrig)
[11:25:19] *** Quits: kaph (~kaph@151.35.8.156) (Remote host closed the connection)
[11:31:47] *** Quits: lemontree (~chat@46.23.89.241) (Quit: WeeChat 3.1)
[11:34:26] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[11:34:54] *** Joins: rcoote (~rcoote@2a02:908:69a:58a0:96c4:319a:a3f9:e211)
[11:35:49] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[11:36:30] *** Joins: Viewday116 (~Viewday@user/viewday)
[11:37:06] *** Joins: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy)
[11:37:20] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[11:37:33] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[11:38:30] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[11:38:30] *** Viewday116 is now known as Viewday11
[11:38:37] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:b90c:86ca:3fd:ed2a) (Ping timeout: 240 seconds)
[11:39:39] *** Quits: gothicserpent (~gothicser@89.45.90.225) (Quit: Leaving)
[11:41:39] *** Joins: gproto23 (~gproto23@user/gproto23)
[11:42:10] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[11:42:28] *** Quits: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy) (Ping timeout: 256 seconds)
[11:44:23] *** Joins: MajorBiscuit (~MajorBisc@c-001-015-014.client.tudelft.eduvpn.nl)
[11:44:44] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[11:46:02] *** Joins: Rounin (~david@84.212.130.215)
[11:46:13] *** Quits: sbrothy (~sbrothy@23.102.41.137) (Remote host closed the connection)
[11:48:30] *** Quits: constxd (~brad@142.134.38.68) (Ping timeout: 268 seconds)
[11:49:31] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[11:49:44] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[11:51:17] *** rcf is now known as DanglingKiller
[11:52:08] *** Joins: gothicserpent (~gothicser@2604:a880:2:d0::2204:b001)
[11:52:50] *** Joins: Darkcoal (~user@2001:16a2:7a75:f800:7ae2:9bb1:6de0:1674)
[11:53:26] *** DanglingKiller is now known as rcf
[11:54:15] *** Joins: chomwitt (~chomwitt@94.66.63.187)
[11:57:09] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[12:03:17] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[12:03:37] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[12:04:13] *** Joins: Enitin (~Enitin@82.102.22.84)
[12:04:33] *** Quits: Darkcoal (~user@2001:16a2:7a75:f800:7ae2:9bb1:6de0:1674) (Ping timeout: 268 seconds)
[12:06:01] *** Joins: Darkcoal (~user@2001:16a2:7a75:f800:7ae2:9bb1:6de0:1674)
[12:06:58] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:b90c:86ca:3fd:ed2a)
[12:07:12] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[12:07:25] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[12:08:17] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[12:09:01] *** Joins: Enitin (~Enitin@82.102.22.86)
[12:10:36] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[12:11:37] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[12:12:16] *** Joins: duuude (~user@user/duuude)
[12:13:17] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[12:13:44] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[12:13:44] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[12:13:44] *** Joins: wroathe (~wroathe@user/wroathe)
[12:13:59] *** Joins: Viewday114 (~Viewday@user/viewday)
[12:15:34] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[12:15:35] *** Viewday114 is now known as Viewday11
[12:15:57] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[12:16:28] *** Joins: Enitin (~Enitin@82.102.22.84)
[12:16:39] *** Quits: alch (~alch@151.34.112.171) (Read error: Connection reset by peer)
[12:18:32] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[12:21:06] *** Joins: alch (~alch@151.34.105.15)
[12:23:46] *** Joins: asen (~asen@2408:821a:618:18f0:8897:d604:5f77:77c9)
[12:23:50] *** Quits: kurahaupo (~kurahaupo@pa49-182-131-41.pa.qld.optusnet.com.au) (Ping timeout: 256 seconds)
[12:29:58] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Remote host closed the connection)
[12:30:11] *** Quits: Roman[m] (~wrongt@2001:470:69fc:105::341e) (Quit: You have been kicked for being idle)
[12:30:21] *** Joins: PortableDave (~portabled@220.253.22.64)
[12:30:55] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[12:31:00] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[12:31:02] *** Quits: _4p3 (~ape@kanonenjagd.panzer.ninja) (Quit: Lost terminal)
[12:31:25] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[12:32:17] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Read error: Connection reset by peer)
[12:34:36] *** Quits: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[12:35:01] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[12:36:11] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[12:36:47] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[12:38:53] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[12:39:06] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[12:40:15] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[12:40:50] *** Quits: apotheon (~apotheon@copyfree/founder/apotheon) (Ping timeout: 256 seconds)
[12:41:25] *** Joins: apotheon (~apotheon@copyfree/founder/apotheon)
[12:43:46] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[12:44:52] *** Joins: Viewday119 (~Viewday@user/viewday)
[12:46:17] *** Joins: plastico (~plastico@neomutt/plastico)
[12:46:24] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[12:46:24] *** Viewday119 is now known as Viewday11
[12:47:15] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:47:34] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[12:47:47] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[12:51:02] *** Quits: Darkcoal (~user@2001:16a2:7a75:f800:7ae2:9bb1:6de0:1674) (Ping timeout: 260 seconds)
[12:51:56] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:52:44] *** Joins: Darkcoal (~user@167.86.149.23)
[12:52:53] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[12:53:21] *** Joins: nicholaus04 (~nicholaus@2607:fb90:e570:ba57:54e7:4c10:0:281)
[12:56:36] *** Quits: clamiax (~clamiax@net-93-144-125-193.cust.vodafonedsl.it) (Ping timeout: 240 seconds)
[12:56:52] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[12:57:07] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[12:59:38] <supakeen> counterpoint is of course that not everyone is a native english speaker and not all languages have that possesive form
[12:59:39] <supakeen> but eh
[12:59:45] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[12:59:54] *** Quits: rgrinberg (~textual@187.223.23.238) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:59:58] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[13:04:13] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[13:05:03] *** Joins: Viewday118 (~Viewday@user/viewday)
[13:05:47] *** Joins: stultusv (~stultusv@user/stultusv)
[13:06:36] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[13:06:36] *** Viewday118 is now known as Viewday11
[13:08:41] *** Quits: nicode (~nic@2607:f2c0:9422:4500:c3a0:cf3e:273a:1698) (Ping timeout: 245 seconds)
[13:10:18] *** Quits: chenqisu1 (~bhca7d@183.217.201.63) (Ping timeout: 256 seconds)
[13:10:35] *** Joins: nicode (~nic@2607:f2c0:9368:e200:da27:df65:cb31:3c2)
[13:12:03] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[13:16:23] *** Joins: |7| (~seachdamh@user/seachdamh)
[13:17:26] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[13:17:39] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[13:18:17] *** Quits: dsrt^ (~dsrt@64.253.22.77) (Ping timeout: 240 seconds)
[13:19:06] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[13:20:37] *** Quits: |7| (~seachdamh@user/seachdamh) (Client Quit)
[13:21:05] *** Joins: |7| (~seachdamh@user/seachdamh)
[13:22:30] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[13:22:49] *** Quits: Teukka (~teukka@user/Teukka) (Read error: Connection reset by peer)
[13:23:40] *** Joins: _4p3 (~ape@kanonenjagd.panzer.ninja)
[13:24:03] *** Joins: loganlee (~Thunderbi@user/loganlee)
[13:25:50] *** Joins: Teukka (~teukka@84-216-41-232.customers.ownit.se)
[13:25:50] *** Quits: Teukka (~teukka@84-216-41-232.customers.ownit.se) (Changing host)
[13:25:50] *** Joins: Teukka (~teukka@user/Teukka)
[13:27:29] *** Joins: soul-d (~uknown@user/soul-d)
[13:31:16] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[13:33:46] *** Joins: aradesh (~aradesh@user/aradesh)
[13:34:14] *** Quits: gproto23 (~gproto23@user/gproto23) (Read error: Connection reset by peer)
[13:34:15] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Client Quit)
[13:35:54] *** Joins: gproto23 (~gproto23@user/gproto23)
[13:36:37] *** Joins: Viewday110 (~Viewday@user/viewday)
[13:38:04] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[13:38:05] *** Viewday110 is now known as Viewday11
[13:46:19] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[13:47:38] *** Joins: rgrinberg (~textual@2806:101e:1:83af:8095:9213:668b:97a8)
[13:48:17] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[13:48:58] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[13:49:34] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:49:58] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[13:52:20] *** Lord_of_Life_ is now known as Lord_of_Life
[13:52:47] *** Joins: op0x0f05 (uid512716@id-512716.tinside.irccloud.com)
[13:55:45] *** Joins: MarcoFe (~marcofe@5.170.16.125)
[13:56:21] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[13:59:37] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[13:59:39] *** Joins: jinsun__ (~quassel@user/jinsun)
[13:59:51] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[14:00:31] *** Quits: MarcoFe (~marcofe@5.170.16.125) (Client Quit)
[14:00:37] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 240 seconds)
[14:00:50] *** Joins: audgirka (~audgirka@2402:e280:3e16:e48:d5ba:7034:2ac9:4275)
[14:01:00] *** Joins: stonkey (~stonkey@user/stonkey)
[14:02:10] *** Joins: elroo (~elroo@45.133.4.33)
[14:02:10] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[14:03:29] *** Joins: ko (~i.am@user/marlboro)
[14:03:38] *** Joins: jinsun (~quassel@user/jinsun)
[14:04:25] *** Quits: elroo (~elroo@45.133.4.33) (Client Quit)
[14:04:49] *** Joins: elroo (~elroo@45.133.4.33)
[14:04:52] *** Joins: jinsun___ (~quassel@user/jinsun)
[14:06:42] *** Quits: elroo (~elroo@45.133.4.33) (Client Quit)
[14:07:17] *** Quits: jinsun__ (~quassel@user/jinsun) (Ping timeout: 240 seconds)
[14:07:17] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 240 seconds)
[14:07:37] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 240 seconds)
[14:07:57] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 240 seconds)
[14:08:11] *** Quits: rgrinberg (~textual@2806:101e:1:83af:8095:9213:668b:97a8) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:08:22] *** Joins: clamiax (~clamiax@net-93-144-125-193.cust.vodafonedsl.it)
[14:12:32] *** Quits: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it) (Ping timeout: 252 seconds)
[14:13:43] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[14:14:00] *** Joins: mikoto-chan (~mikoto-ch@2a00:1d50:3:0:d35c:a450:4ccc:94ac)
[14:14:20] *** Joins: Klinda (~superleag@user/klinda)
[14:14:32] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[14:14:32] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[14:14:32] *** Joins: wroathe (~wroathe@user/wroathe)
[14:17:19] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[14:17:32] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[14:17:35] *** Joins: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it)
[14:17:40] *** Joins: jinsun (~quassel@user/jinsun)
[14:18:57] *** Quits: deflected (~deflected@user/deflected) (Ping timeout: 250 seconds)
[14:19:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[14:20:13] *** Joins: malina (~malina@user/malina)
[14:21:42] *** Quits: jinsun___ (~quassel@user/jinsun) (Ping timeout: 256 seconds)
[14:25:29] *** Joins: toastloop (toastloop@user/toastloop)
[14:27:48] *** Quits: PortableDave (~portabled@220.253.22.64) (Ping timeout: 240 seconds)
[14:29:02] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 260 seconds)
[14:29:08] *** Joins: typeswitch (~typeswitc@user/typeswitch)
[14:31:17] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[14:31:29] *** Joins: Enitin (~Enitin@82.102.22.86)
[14:31:51] *** Joins: deflected (~deflected@user/deflected)
[14:32:27] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:33:12] *** Joins: csrf (~csrf@user/csrf)
[14:33:50] *** Quits: nortoh (~nortoh@user/nortoh) (Quit: this is not importent)
[14:34:42] *** Joins: nortoh (~nortoh@bishop.xerrero.com)
[14:34:42] *** Quits: nortoh (~nortoh@bishop.xerrero.com) (Changing host)
[14:34:42] *** Joins: nortoh (~nortoh@user/nortoh)
[14:35:17] *** Quits: larry87 (~quassel@c-73-6-106-85.hsd1.tx.comcast.net) (Ping timeout: 240 seconds)
[14:37:39] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[14:38:30] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[14:38:43] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[14:39:45] *** Joins: random-nick (~random-ni@87.116.167.125)
[14:39:47] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[14:43:07] *** Joins: Phil-Work (~phil@62.3.100.20)
[14:44:11] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Quit: This computer has gone to sleep)
[14:44:44] *** Joins: Viewday114 (~Viewday@user/viewday)
[14:45:18] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[14:45:18] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[14:45:18] *** Joins: wroathe (~wroathe@user/wroathe)
[14:46:18] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[14:46:19] *** Viewday114 is now known as Viewday11
[14:46:40] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[14:47:25] *** Joins: Kev_ (~Kev@2a01cb0400149f00f5d4de1a0e99d4da.ipv6.abo.wanadoo.fr)
[14:47:59] *** Joins: pulse (~pulse@user/pulse)
[14:48:17] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 240 seconds)
[14:49:41] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Client Quit)
[14:50:36] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[14:52:36] *** Parts: bud (~bud@user/bud) (Leaving.)
[14:57:31] *** Joins: toastloopex (toastloop@user/toastloop)
[14:57:31] *** Quits: typeswitch (~typeswitc@user/typeswitch) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[14:58:51] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[14:59:41] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[14:59:48] *** Joins: Klinda (~superleag@user/klinda)
[14:59:54] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[14:59:58] *** Joins: blindguard (~blindguar@2a02:908:1864:c200:e9df:eeac:1563:f38a)
[15:00:50] *** Quits: toastloopex (toastloop@user/toastloop) (Remote host closed the connection)
[15:00:54] *** Quits: toastloop (toastloop@user/toastloop) (Ping timeout: 268 seconds)
[15:02:55] *** Joins: Viewday117 (~Viewday@user/viewday)
[15:04:46] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[15:04:47] *** Viewday117 is now known as Viewday11
[15:06:30] *** Joins: seninha (~seninha@user/seninha)
[15:06:45] *** Quits: mikoto-chan (~mikoto-ch@2a00:1d50:3:0:d35c:a450:4ccc:94ac) (Quit: mikoto-chan)
[15:07:17] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 240 seconds)
[15:07:37] *** Quits: phryk (~totallyno@user/phryk) (Quit: ZNC 1.8.2 - https://znc.in)
[15:09:13] *** Joins: earnestly (~earnest@user/earnestly)
[15:09:22] *** Joins: pingpongball (~pingpongb@user/pingpongball)
[15:11:36] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[15:12:26] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 260 seconds)
[15:13:24] *** Joins: kaph (~kaph@151.37.203.0)
[15:14:28] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 268 seconds)
[15:15:32] *** Joins: phryk (~totallyno@user/phryk)
[15:16:07] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[15:16:07] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[15:16:07] *** Joins: wroathe (~wroathe@user/wroathe)
[15:17:53] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[15:19:37] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[15:19:52] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[15:20:05] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[15:20:17] *** Joins: Enitin (~Enitin@82.102.22.86)
[15:21:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[15:24:32] *** Quits: kaph (~kaph@151.37.203.0) (Read error: Connection reset by peer)
[15:24:50] *** Joins: kaph (~kaph@151.37.203.0)
[15:25:09] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Quit: This computer has gone to sleep)
[15:27:07] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[15:28:03] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[15:28:40] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[15:29:37] *** Quits: kaph (~kaph@151.37.203.0) (Read error: Connection reset by peer)
[15:29:50] *** Joins: kaph (~kaph@151.37.203.0)
[15:32:12] *** Joins: malina (~malina@user/malina)
[15:32:50] *** Joins: Viewday116 (~Viewday@user/viewday)
[15:34:48] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[15:34:49] *** Viewday116 is now known as Viewday11
[15:34:54] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:c545:211c:aaf8:e74)
[15:34:54] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:c545:211c:aaf8:e74) (Changing host)
[15:34:54] *** Joins: skapata (~Skapata@user/skapata)
[15:35:56] *** Quits: kaph (~kaph@151.37.203.0) (Ping timeout: 256 seconds)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:41] *** Quits: pingpongball (~pingpongb@user/pingpongball) (Quit: Client closed)
[15:39:33] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[15:39:46] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[15:40:12] *** Joins: kaph (~kaph@151.37.203.0)
[15:40:17] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 240 seconds)
[15:40:43] *** Joins: Guest60 (~Guest60@198-84-222-216.cpe.teksavvy.com)
[15:42:43] *** Joins: lemontree (~chat@user/lemontree)
[15:43:10] *** Quits: nicholaus04 (~nicholaus@2607:fb90:e570:ba57:54e7:4c10:0:281) (Remote host closed the connection)
[15:43:14] *** Joins: inlight (~inlight@157.35.64.71)
[15:43:14] *** Quits: inlight (~inlight@157.35.64.71) (Changing host)
[15:43:14] *** Joins: inlight (~inlight@user/inlight)
[15:43:29] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[15:44:45] <Guest60> hello! I was wondering about something and hope someone will be able to help here.
[15:44:53] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[15:44:54] *** Quits: ztx (~ztx@user/ztx) (Quit: ztx)
[15:45:23] <Guest60> Why would passing a two string literals as arguments cause memcmp to return incorrect value??
[15:45:56] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 268 seconds)
[15:45:59] <Guest60> char s1[] = "ko", s2[] = "ki"; printf("%d\n", memcmp(s1, s2, 2));  printf("%d\n", memcmp("ko", "ki", 2));
[15:46:52] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[15:46:52] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[15:46:52] *** Joins: wroathe (~wroathe@user/wroathe)
[15:48:23] <Guest60> The first call of memcpy works fine as expected on all compiler (returns 6 on clang, and 1536 on gcc) while the second call returns 1 on both clang and gcc ... however pcc and cparser returns 6 in both calls which is correct.
[15:49:43] <Guest60> https://stackoverflow.com/questions/50433145/bsd-memcmp3-difference-between-manual-and-implementation
[15:49:46] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 260 seconds)
[15:49:56] <supakeen> It's undefined behaviour (which is why you see different behaviors), "ko" is a char[3] type.
[15:49:58] <Guest60> It says here that this behavior is a compile bug
[15:50:02] <Guest60> compiler*
[15:50:08] *** Joins: inlight (~inlight@157.35.15.142)
[15:50:08] *** Quits: inlight (~inlight@157.35.15.142) (Changing host)
[15:50:08] *** Joins: inlight (~inlight@user/inlight)
[15:50:47] <koollman> Guest60: any positive integer returned would be correct, technically :)
[15:51:48] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[15:52:27] <supakeen> I also misread your snippet so you can ignore me :)
[15:52:28] *** Quits: asen (~asen@2408:821a:618:18f0:8897:d604:5f77:77c9) (Quit: Leaving)
[15:53:37] *** Joins: hxztnxt (~hxztnxt@218.red-83-54-57.dynamicip.rima-tde.net)
[15:53:51] *** Joins: seninha (~seninha@user/seninha)
[15:54:10] <Guest60> koollman: yes you're right about that but it just felt weird that algorithm produces two different results for the same input in these two cases (one when passing pointers, and one when passing string literals) ... I still don't understand why!
[15:54:34] *** Joins: nyah (~nyah@94.6.71.219)
[15:54:42] <hxztnxt> if chars are 1 byte, but ascii only goes from 0-127 then what's in the other 128 bits?
[15:54:52] <supakeen> hxztnxt: The sign bit.
[15:54:53] <koollman> but it is not the same input. and the compiler is allowed to optimize it in any way it wants
[15:55:05] <Guest60> supakeen: never mind
[15:55:20] <hxztnxt> supakeen: 128 bits for sign?
[15:55:35] <supakeen> hxztnxt: No, one bit, a char is 8 bits, one for the sign, 7 left for your stuff.
[15:55:40] <supakeen> But 128 values, sure.
[15:55:56] <koollman> Guest60: my guess would be that one version is inlined or using memcmp internal implementation, and the other is not. But it's not a bug, since the value is correct
[15:56:03] <hxztnxt> oh right
[15:56:05] *** Joins: meandrain (~meandrain@86.123.72.102)
[15:56:31] <hxztnxt> why do chars need signs?
[15:56:56] <koollman> Guest60: any positive int is correct. and if you put the arguments in the other order, you also get a negative value, which is correct
[15:56:59] *** Joins: retro_ (~retro@05412d78.skybroadband.com)
[15:57:33] <Guest60> koollman: I agree with you that the compiler is allowed to do so but how would it know that "any positive" value is correct in this case, the implementation of libc's memcpy does not say so .. may be I need to read more about how compiler optimization techniques
[15:57:34] <supakeen> hxztnxt: They don't *need* to but char is usually signed for easy of comparison to other signed types.
[15:57:47] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Quit: This computer has gone to sleep)
[15:58:51] <supakeen> The real question you want to ask is why is ASCII 7-bit and that's because it predates the idea of a byte being 8 bits being common.
[15:58:54] <koollman> Guest60: "hey, those are litteral strings right there with memcmp, I can remplace memcmp with an inline version that ends up optimized as constant, either -1, 0 or 1"
[15:59:28] <supakeen> Then afterwards 8-bit bytes became super popular :)
[15:59:41] <clarity> Guest60: it knows any positive value is correct because the standard says so
[15:59:44] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[15:59:47] <robyndrake> is there a reason to use printf when fputc(foo, STDIN) would be more appropriate?
[15:59:48] <Guest60> Guest60: I also tried the same example with my own assembly language implementation of memcmp and in this case all compilers returned the values I expected .. so this definitely has something to do with optimization
[15:59:56] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[15:59:58] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[16:00:39] *** Joins: constxd (~brad@142.134.38.68)
[16:00:43] *** Quits: retroid_ (~retro@05412d78.skybroadband.com) (Ping timeout: 268 seconds)
[16:00:49] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:01:07] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Client Quit)
[16:01:33] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:01:47] <Guest60> clarity: then this will happen only with standard functions? If, let's say that I've another function called foobar which accepts the same type of arguments as memcmp, the compiler won't play smart?
[16:01:57] <clarity> That's right
[16:02:24] <Guest60> clarity: that's worth a try! thanks for the hint :)
[16:02:27] <clarity> I mean it can try to play smart, if it can determine that the absolute value returnerd by foobar is never used
[16:02:37] <dave0> robyndrake: hmm if you made everything printf it might count towards consistency
[16:02:50] <clarity> But in the case of stadard functions like memcmp, it only needs to know what the standard specifies.
[16:02:51] <koollman> Guest60: usually, yes. Or, said differently: the compiler probably contains special cases for well-known functions that are worth optimizing
[16:03:23] <robyndrake> thank you dave0 
[16:03:24] <dave0> robyndrake: always using printf is also less things to learn and remember
[16:03:48] <robyndrake> for this project, it's an operating system, so effiency matters
[16:03:55] <koollman> for some of those functions, it may never even call the libc version of the function, but replace with its own implementation, or optimize it away entirely
[16:04:20] <Guest60> Thanks folks for the help ... I'll give it a try with a custom function and I'll see if this wasn't the case anymore
[16:04:43] *** Quits: Libero (~Libero@77.49.184.64.dsl.dyn.forthnet.gr) (Remote host closed the connection)
[16:05:01] <dave0> robyndrake: that's interesting... are you going to implement printf?
[16:05:10] *** Joins: Libero (~Libero@77.49.184.64.dsl.dyn.forthnet.gr)
[16:05:23] <Guest60> koollman: I'm sure I was using -fno-builtin or something (don't remember exactly)
[16:05:38] <dave0> robyndrake: printf could replace a few functions, which could save memory (if you are going to implement printf anyway)
[16:05:39] *** Quits: kaph (~kaph@151.37.203.0) (Ping timeout: 268 seconds)
[16:06:04] <robyndrake> I'm just waiting for the project lead to get to keyboard
[16:06:10] *** Joins: kaph (~kaph@151.37.203.0)
[16:06:47] <koollman> Guest60: you probably were not. or missing it at some point in the compilation
[16:07:41] <koollman> Guest60: with gcc -fno-builtin, I get 1536 and 1536 :)
[16:08:45] <Guest60> koollman: you were right .. I copied the implementation of memcmp and renamed it something else .. and indeed the compiler didn't optimize and returned the expected values in both cases .. Thanks again for the help :)
[16:09:12] *** Quits: kaph (~kaph@151.37.203.0) (Read error: Connection reset by peer)
[16:09:28] *** Joins: kaph (~kaph@151.37.203.0)
[16:10:15] *** Quits: Libero (~Libero@77.49.184.64.dsl.dyn.forthnet.gr) (Remote host closed the connection)
[16:10:39] *** Joins: Libero (~Libero@77.49.184.64.dsl.dyn.forthnet.gr)
[16:12:27] *** Quits: Libero (~Libero@77.49.184.64.dsl.dyn.forthnet.gr) (Max SendQ exceeded)
[16:12:39] <Guest60> koollman: yes you were right on this one too, I wasn't using -fno-builtin
[16:14:00] <Guest60> koollman: with -fno-builtin, I can confirm that the behavior is gone with clang at least .. I don't have gcc installed on machine to confirm if this is the case with gcc or not (at first I tried the example on codechef to confirm clang's behavior)
[16:14:30] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 260 seconds)
[16:14:32] <Guest60> koollman: thanks a lot for the help!
[16:17:25] *** Quits: alch (~alch@151.34.105.15) (Read error: Connection reset by peer)
[16:17:42] *** Joins: mattil (~mattil@helsinki.portalify.com)
[16:19:00] *** Quits: kaph (~kaph@151.37.203.0) (Ping timeout: 256 seconds)
[16:19:32] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[16:19:56] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[16:20:09] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[16:20:25] *** Joins: CaCode (~CaCode@user/cacode)
[16:21:04] *** Joins: alch (~alch@pd-18-116-174.service.infuturo.it)
[16:21:37] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 240 seconds)
[16:22:24] *** Joins: inlight (~inlight@157.35.59.16)
[16:22:24] *** Quits: inlight (~inlight@157.35.59.16) (Changing host)
[16:22:24] *** Joins: inlight (~inlight@user/inlight)
[16:25:48] *** Joins: evocatus (~evocatus@62.182.78.42)
[16:27:57] *** Quits: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 240 seconds)
[16:28:00] *** Joins: CaCode_ (~CaCode@user/cacode)
[16:28:42] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[16:30:54] *** Quits: CaCode (~CaCode@user/cacode) (Ping timeout: 256 seconds)
[16:31:53] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[16:33:07] *** Joins: Viewday112 (~Viewday@user/viewday)
[16:33:13] *** Quits: dacav (~dacav@h94-245-9-196.cust.a3fiber.se) (Quit: leaving)
[16:33:28] *** Quits: boreas (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2) (Remote host closed the connection)
[16:34:52] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[16:34:52] *** Viewday112 is now known as Viewday11
[16:34:57] *** Joins: bebyx (~Thunderbi@user/bebyx)
[16:35:27] *** Joins: dacav (~dacav@h94-245-9-196.cust.a3fiber.se)
[16:39:02] *** Quits: evocatus (~evocatus@62.182.78.42) (Ping timeout: 240 seconds)
[16:39:37] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[16:39:50] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[16:41:18] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:ea20:d6db:daa:1f1d)
[16:42:53] *** Quits: concrete-houses (~g@209.6.150.53) (Remote host closed the connection)
[16:44:15] *** Joins: larry87 (~quassel@c-73-6-106-85.hsd1.tx.comcast.net)
[16:44:18] *** Joins: kaph (~kaph@151.47.131.129)
[16:45:02] *** Joins: Viewday117 (~Viewday@user/viewday)
[16:46:46] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[16:46:47] *** Viewday117 is now known as Viewday11
[16:47:15] <smallvil_> welp in "#define bar x" "#define foo(bar) bar()"       i got "foo()" to be expanded to "()" but "foo(bar)" expands to "xx()" :(
[16:49:08] *** Joins: tejr_ (~tejr@user/tejr)
[16:49:28] *** Quits: Guest60 (~Guest60@198-84-222-216.cpe.teksavvy.com) (Quit: Client closed)
[16:52:08] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[16:54:48] *** Joins: constxo (~brad@142.134.38.68)
[16:58:24] *** Quits: dacav (~dacav@h94-245-9-196.cust.a3fiber.se) (Quit: leaving)
[16:58:32] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[16:58:34] *** Joins: dacav (~dacav@h94-245-9-196.cust.a3fiber.se)
[16:59:02] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[16:59:37] <NRK[m]> smallvil_: w-what are you trying to do?
[17:01:02] *** Quits: kdc (~kdc@196.211.197.159) (Remote host closed the connection)
[17:01:05] <smallvil_> macro expansion
[17:02:06] <clarity> well that "suxx()" :(
[17:02:25] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[17:03:34] <omegatron> is there a particular need to resort to macros ?
[17:03:47] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:b90c:86ca:3fd:ed2a) (Quit: Leaving)
[17:03:57] <smallvil_> lol
[17:05:08] *** Joins: Viewday113 (~Viewday@user/viewday)
[17:05:12] <omegatron> macros are also known as "how to write shitty code, noone can read/understand (including the author after some weeks), because what you see is not the actual code"   -_-
[17:06:35] *** Quits: audgirka (~audgirka@2402:e280:3e16:e48:d5ba:7034:2ac9:4275) (Quit: Leaving)
[17:06:36] <dacav> but also the only way of doing certain things.  Must be used wisely :)
[17:06:55] <omegatron> ys
[17:06:56] <omegatron> yes
[17:06:57] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[17:07:10] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[17:07:11] *** Viewday113 is now known as Viewday11
[17:08:18] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[17:08:31] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[17:08:53] <omegatron> it's ok to use the preprocessor's capabilities to define and use constant values or for include guards, but macros require a delicate balance between the actual need and code readability (at least for me)
[17:09:44] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:7d33:9c49:8a76:cfa0)
[17:10:49] *** Joins: humky (~humky@user/humky)
[17:11:06] *** Joins: obby303 (~Guest26@65.207.90.10)
[17:11:37] *** Joins: duuude (~user@user/duuude)
[17:12:22] *** Quits: mattil (~mattil@helsinki.portalify.com) (Read error: Connection reset by peer)
[17:16:12] <smallvil_> oof    bash: /dev/null: Too many open files in system
[17:17:45] <koollman> maybe don't open so many files ? :)
[17:17:49] *** Joins: teepee (~teepee@openscad/teepee)
[17:18:07] <smallvil_> :)
[17:18:26] *** Quits: brad_mssw|mbp (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Quit: This computer has gone to sleep)
[17:18:57] <koollman> smallvil_: /proc/sys/fs/file-max , maybe
[17:19:24] <smallvil_> it just does that sometimes lol
[17:20:14] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[17:20:15] *** Joins: brad_mssw|mbp (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[17:20:21] *** Joins: sunsh1ne_warrior (~sunsh1ne_@46.148.141.240)
[17:24:55] *** Quits: Darkcoal (~user@167.86.149.23) (Quit: Darkcoal)
[17:25:13] *** Quits: stultusv (~stultusv@user/stultusv) (Remote host closed the connection)
[17:27:53] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[17:27:53] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[17:27:53] *** Joins: wroathe (~wroathe@user/wroathe)
[17:30:26] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[17:31:02] *** Quits: duuude (~user@user/duuude) (Ping timeout: 260 seconds)
[17:32:08] *** Joins: supajerm (~supajerm@gateway/vpn/pia/supajerm)
[17:32:44] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[17:33:17] *** Quits: |7| (~seachdamh@user/seachdamh) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[17:33:21] *** Joins: Enitin (~Enitin@82.102.22.85)
[17:34:28] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[17:36:19] *** Joins: Viewday116 (~Viewday@user/viewday)
[17:37:29] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[17:37:42] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[17:38:20] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[17:38:21] *** Viewday116 is now known as Viewday11
[17:43:09] *** Joins: heiner_ (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[17:45:52] *** Quits: CaCode_ (~CaCode@user/cacode) (Quit: Leaving)
[17:47:34] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[17:47:34] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Client Quit)
[17:47:37] *** Quits: constxd (~brad@142.134.38.68) (Ping timeout: 240 seconds)
[17:48:57] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[17:49:03] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[17:49:40] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[17:49:53] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[17:50:23] *** Joins: Enitin (~Enitin@82.102.22.84)
[17:52:33] *** Quits: op0x0f05 (uid512716@id-512716.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[17:54:43] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[17:55:58] *** Joins: duuude (~user@user/duuude)
[17:59:18] *** Joins: Tempesta (~Tempesta@user/tempesta)
[18:00:41] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:00:41] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:00:41] *** Joins: wroathe (~wroathe@user/wroathe)
[18:02:11] *** Joins: moog (~moog@107.126.53.64)
[18:02:54] <smallvil_> yay i got function expansion working :)
[18:03:57] *** Joins: Libero (~Libero@77.49.184.64.dsl.dyn.forthnet.gr)
[18:04:00] *** Quits: Libero (~Libero@77.49.184.64.dsl.dyn.forthnet.gr) (Remote host closed the connection)
[18:04:41] *** Joins: shivesh (~shivesh@user/shivesh)
[18:05:39] *** Quits: gproto23 (~gproto23@user/gproto23) (Read error: Connection reset by peer)
[18:05:57] *** Quits: constxo (~brad@142.134.38.68) (Ping timeout: 240 seconds)
[18:06:29] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[18:07:27] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[18:08:05] *** Joins: ffguest (~ffguest@178.151.94.123)
[18:08:33] *** Quits: heiner_ (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2) (Remote host closed the connection)
[18:08:56] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[18:09:25] *** Quits: inlight (~inlight@user/inlight) (Remote host closed the connection)
[18:09:51] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[18:10:05] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[18:11:11] *** Joins: constxo (~brad@142.134.38.68)
[18:12:14] <smallville7123> https://gist.github.com/mgood7123/a6c7a1b64a13fefe6947efd1cade72a1
[18:12:15] <candide> Title of smallville7123's link: a.c · GitHub
[18:12:19] <smallville7123> :)
[18:13:40] *** Joins: Viewday116 (~Viewday@user/viewday)
[18:14:37] *** Quits: shailangsa (~shailangs@host86-186-127-224.range86-186.btcentralplus.com) (Ping timeout: 240 seconds)
[18:15:17] *** Quits: rcoote (~rcoote@2a02:908:69a:58a0:96c4:319a:a3f9:e211) (Ping timeout: 240 seconds)
[18:15:44] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[18:15:45] *** Viewday116 is now known as Viewday11
[18:16:18] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[18:17:42] *** Joins: kurahaupo (~kurahaupo@pa49-182-131-41.pa.qld.optusnet.com.au)
[18:20:07] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Quit: Leaving)
[18:20:17] *** Quits: LucaTM (~LucaTM@user/lucatm) (Ping timeout: 240 seconds)
[18:20:25] *** Joins: Libero (~Libero@77.49.184.64.dsl.dyn.forthnet.gr)
[18:21:29] <smallville7123> how do i implement macro rescan without infinite recursion?
[18:22:49] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[18:24:06] <smallville7123> would i just while loop until nothing has been expanded?
[18:24:20] *** Joins: evocatus (~evocatus@62.182.78.42)
[18:25:36] <smallville7123> eg      while(expand(&str, &data))) {}; // expand returns true if an expansion has occured
[18:25:55] *** Joins: LucaTM (~LucaTM@user/lucatm)
[18:26:30] *** Quits: kurahaupo (~kurahaupo@pa49-182-131-41.pa.qld.optusnet.com.au) (Ping timeout: 256 seconds)
[18:27:09] <smallville7123> tho would the compiler optimize out this while loop since it has no body?
[18:27:36] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[18:29:36] <wroathe> No
[18:29:52] <wroathe> and  you can just do while ();  
[18:29:59] <wroathe> without the empty block
[18:30:15] <smallville7123> oki :)]
[18:30:18] <smallville7123> oki :)
[18:30:37] *** Quits: ffguest (~ffguest@178.151.94.123) (Ping timeout: 240 seconds)
[18:30:57] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[18:30:57] * smallville7123 attempts to modify my code to return a boolean if expansion has taken place instead of returning void
[18:31:02] *** Quits: sunsh1ne_warrior (~sunsh1ne_@46.148.141.240) (Ping timeout: 256 seconds)
[18:31:17] *** Joins: malina (~malina@user/malina)
[18:32:48] *** Joins: Viewday116 (~Viewday@user/viewday)
[18:34:22] *** Joins: Enitin (~Enitin@82.102.22.86)
[18:34:42] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[18:34:42] *** Viewday116 is now known as Viewday11
[18:35:03] <smallville7123> "If the name of the macro being replaced is found during this scan of the replacement list (not including the rest of the source file’s preprocessing tokens), it is not replaced"
[18:36:58] <smallville7123> does that mean, that if i do #define bar a \n #define a a bar \n     bar      then when "bar" > "a bar" > "a bar" and "a bar" is rescanned neither "bar" nor "a" will be expanded?
[18:37:12] *** Joins: shailangsa_ (~shailangs@host109-159-108-207.range109-159.btcentralplus.com)
[18:38:27] *** Quits: evocatus (~evocatus@62.182.78.42) (Quit: Leaving)
[18:39:01] *** Joins: puke (~puke@user/puke)
[18:39:24] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[18:39:33] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[18:39:43] *** Joins: ffguest (~ffguest@178.151.94.123)
[18:39:46] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[18:40:22] *** Quits: ffguest (~ffguest@178.151.94.123) (Client Quit)
[18:44:39] *** Joins: Viewday116 (~Viewday@user/viewday)
[18:46:00] *** Quits: fe23 (~fe23@2409:8a34:468:83d0:bc40:3ce4:280d:6ff1) (Quit: fe23)
[18:46:20] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[18:46:21] *** Viewday116 is now known as Viewday11
[18:49:44] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[18:50:49] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[18:51:02] *** Joins: terminalpusher (~terminalp@2a01:586:968a:1:2075:621e:ac7b:a6ff)
[18:53:55] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[18:54:43] *** Quits: nostar (~nostar@68.51.221.108) (Remote host closed the connection)
[18:56:23] *** Joins: meator (~meator@user/meator)
[18:57:00] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:57:00] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:57:00] *** Joins: wroathe (~wroathe@user/wroathe)
[18:58:17] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[18:58:32] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 252 seconds)
[18:59:28] *** Joins: rcoote (~rcoote@ip-176-198-113-232.hsi05.unitymediagroup.de)
[18:59:37] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[19:01:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[19:02:11] *** Joins: cow_2001 (~un@user/cow-2001/x-5712099)
[19:02:25] *** Joins: bolovanos__ (~bolovanos@user/bolovanos)
[19:04:27] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[19:06:10] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 256 seconds)
[19:07:49] *** Joins: Viewday115 (~Viewday@user/viewday)
[19:09:44] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[19:09:57] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[19:09:57] *** Joins: ffguest (~ffguest@178.151.94.123)
[19:10:08] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[19:10:12] *** Viewday115 is now known as Viewday11
[19:12:46] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[19:15:17] *** Quits: ffguest (~ffguest@178.151.94.123) (Ping timeout: 240 seconds)
[19:16:34] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[19:18:38] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[19:23:47] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[19:25:41] *** Parts: cow_2001 (~un@user/cow-2001/x-5712099) ()
[19:30:24] *** Joins: breaeth (~breaeth@191.110.112.78.rev.sfr.net)
[19:32:54] *** Joins: mahmutov (~mahmutov@37.155.49.19)
[19:36:02] *** Quits: breaeth (~breaeth@191.110.112.78.rev.sfr.net) (Remote host closed the connection)
[19:36:33] *** Joins: Viewday112 (~Viewday@user/viewday)
[19:38:28] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[19:39:02] *** Joins: Viewday11 (~Viewday@user/viewday)
[19:39:55] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[19:40:08] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[19:41:18] *** Quits: Viewday112 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[19:44:44] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[19:46:24] *** Quits: constxo (~brad@142.134.38.68) (Ping timeout: 256 seconds)
[19:48:17] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[19:49:17] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 240 seconds)
[19:52:13] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[19:52:33] *** Joins: mahmutov_ (~mahmutov@5.176.23.209)
[19:53:00] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[19:54:37] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[19:55:28] *** Quits: mahmutov (~mahmutov@37.155.49.19) (Ping timeout: 256 seconds)
[19:55:31] *** Quits: bebyx (~Thunderbi@user/bebyx) (Remote host closed the connection)
[19:56:05] *** Joins: constxo (~brad@142.134.38.68)
[19:56:32] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[19:57:18] *** Joins: duuude (~user@user/duuude)
[19:57:44] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[19:58:31] *** Joins: Klinda (~superleag@user/klinda)
[19:58:53] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[19:59:36] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[19:59:49] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[20:03:17] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 240 seconds)
[20:03:24] *** Quits: rahl (~rahl@102.114.134.73) (Ping timeout: 256 seconds)
[20:03:54] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[20:05:05] *** Joins: rahl (~rahl@102.114.167.205)
[20:06:39] *** Joins: mrig (~mrig@user/mrig)
[20:09:04] *** Quits: jaeckel (~jaeckel@sleipnir.jaeckel.eu) (Ping timeout: 256 seconds)
[20:09:42] *** Joins: jaeckel (~jaeckel@sleipnir.jaeckel.eu)
[20:11:13] *** Joins: NEYi (~NEYi@109.251.216.38)
[20:11:31] *** Joins: john99 (~john99@158.246.103.34.bc.googleusercontent.com)
[20:15:15] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[20:17:35] *** Quits: alch (~alch@pd-18-116-174.service.infuturo.it) (Read error: Connection reset by peer)
[20:18:14] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:499c:186d:f10d:6a24)
[20:19:37] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 240 seconds)
[20:19:54] *** Joins: Viewday114 (~Viewday@user/viewday)
[20:20:02] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d834-b7f2-fd3e-c3e9.res6.spectrum.com)
[20:20:04] <hxztnxt> why is getchar returning 1??
[20:20:18] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[20:20:18] *** Viewday114 is now known as Viewday11
[20:21:26] *** Joins: alch (~alch@151.68.96.99)
[20:21:41] <hxztnxt> oh god, parenthesis...
[20:22:56] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[20:23:06] *** Joins: shivesh (~shivesh@user/shivesh)
[20:23:28] <SoF> hi, I was wondering what's an analyzer I can use to check if I check all calloc/malloc results for NULL before continuing?
[20:24:26] *** Quits: hxztnxt (~hxztnxt@218.red-83-54-57.dynamicip.rima-tde.net) (Quit: Leaving)
[20:27:17] *** Quits: constxo (~brad@142.134.38.68) (Ping timeout: 240 seconds)
[20:27:40] <pragma-> SoF: clang analyzer can probably do that, I'd expect
[20:27:41] *** Joins: mahmutov (~mahmutov@37.155.49.19)
[20:29:28] *** Quits: mahmutov_ (~mahmutov@5.176.23.209) (Ping timeout: 256 seconds)
[20:30:09] <SoF> pragma-: I tried "scan-build clang src.c" but it's not reporting an immediate write to a malloc'd pointer
[20:30:22] <SoF> (char* x = malloc(...); *x = 5)
[20:31:15] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[20:31:55] *** Joins: nuxil (~nuxil@141.195.51.213)
[20:32:43] <pragma-> SoF: perhaps you need to opt in to that specific checker, if it's even available.
[20:33:47] <pragma-> Maybe it only has actually-tried-to-deref-null checkers and not a should-test-for-null-first checker
[20:33:53] * pragma- shrugs.
[20:33:54] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 268 seconds)
[20:34:34] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[20:35:37] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 240 seconds)
[20:36:00] *** Joins: hoho (hoho@user/hoho)
[20:36:53] *** Joins: karakedi (~eAC53C340@user/karakedi)
[20:37:24] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 256 seconds)
[20:39:46] *** Quits: atulu[m] (~atulumatr@2001:470:69fc:105::d50c) (Quit: Reconnecting)
[20:39:47] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[20:39:58] *** Joins: atulu[m] (~atulu@2001:470:69fc:105::d50c)
[20:40:01] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[20:42:55] *** Quits: atulu[m] (~atulu@2001:470:69fc:105::d50c) (Client Quit)
[20:43:09] *** Joins: atulu[m] (~atulu@2001:470:69fc:105::d50c)
[20:43:41] *** Quits: kaph (~kaph@151.47.131.129) (Ping timeout: 245 seconds)
[20:44:08] *** Joins: tewrvd^ (~tewrvd@64.253.22.77)
[20:48:24] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[20:48:49] *** Joins: constxo (~brad@142.134.38.68)
[20:48:57] *** Joins: kspalaiologos (~kspalaiol@user/kspalaiologos)
[20:50:25] *** Joins: Akiva (~Akiva@user/Akiva)
[20:50:58] *** Joins: Kit (~u0_a391@cpe-76-190-178-139.neo.res.rr.com)
[20:51:23] *** atulu[m] is now known as atulu
[20:51:42] <Matt|home> on a scale of 1 to 10.. how trustworthy is the dev team behind gcc...
[20:52:02] *** Quits: atulu (~atulu@2001:470:69fc:105::d50c) (Quit: Reconnecting)
[20:52:09] <Matt|home> im getting a compile warning i shouldn't be.. so... what's more likely
[20:52:16] *** Joins: atulu (~atulu@2001:470:69fc:105::d50c)
[20:52:18] <Matt|home> i made a mistake, or _they_ did.. and im leaning towards them
[20:52:45] <Kit> -32iπ trustworthy points
[20:52:52] <Amun-Ra> paste test case somewhere
[20:53:01] <pragma-> lol
[20:53:05] <Matt|home> https://pastebin.com/YhRhPr6H
[20:53:06] <Matt|home> https://pastebin.com/hJ2EYKQM
[20:53:08] <floatcomplex> Matt|home: have you plugged the code into godbolt and tested whether you get the same warning from clang, or different versions of gcc
[20:53:16] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[20:53:23] <Matt|home> nop. just using gcc-7
[20:53:25] *** Quits: atulu (~atulu@2001:470:69fc:105::d50c) (Client Quit)
[20:53:34] <Kit> gcc 7?
[20:53:37] <pragma-> Matt|home is the guy who thought you could tell gcc that the user passed one argument to main by simply doing int main(int argc, char **argv) { argc = 1; ... } and now he thinks gcc is broken.
[20:53:39] *** Joins: atulu (~atulu@2001:470:69fc:105::d50c)
[20:53:39] * pragma- laughs.
[20:53:44] <Amun-Ra> GCC 7 is almost as good as GCC 2
[20:53:47] <Kit> arent they on 11 now
[20:53:51] <Matt|home> idk
[20:53:59] <Kit> (im a clang user idk)
[20:54:09] <Matt|home> im fairly up to date on this system, if i hit alt-tab on gcc it only shows me 7 as the highest
[20:54:22] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[20:54:26] <pragma-> >hit alt-tab on gcc
[20:54:29] <Kit> what system us it?
[20:54:33] <gerogerigegege> alt ... tab?
[20:54:35] <Matt|home> ubuntu
[20:54:40] <Matt|home> not alt tab, sorry, tab complete. tab complete
[20:54:40] <Kit> which ver
[20:54:52] <Matt|home> Linux rfranklin 5.4.0-91-generic #102~18.04.1-Ubuntu SMP Thu Nov 11 14:46:36 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux
[20:55:01] <Kit> aha
[20:55:01] <pragma-> ,gcc --version
[20:55:02] <candide> pragma-: gcc (GCC) 11.2.1 20210728 (R​ed Hat 11.2.1-1)
[20:55:05] <Amun-Ra> it's usually good to switch to testing branch on .dev workstations
[20:55:10] <Kit> isnt 18 EOL?
[20:55:19] <Amun-Ra> .deb*
[20:55:23] <pragma-> Hm, might be time to upgrade candide's gcc.
[20:55:33] <pragma-> almost 6 months out of date!
[20:55:41] <pragma-> ,clang --version
[20:55:42] <candide> pragma-: clang version 12.0.1 (Fedora 12.0.1-2.fc35) Target: x86_64-unknown-linux-gnu Thread model: posix InstalledDir: /usr/bin
[20:55:56] <Kit> isnt ubuntu 18.04 EOL?
[20:55:59] *** Joins: Klinda (~superleag@user/klinda)
[20:56:15] <Matt|home> oh...... oh i see what the problem is. it's not gcc's fault
[20:56:21] <Matt|home> to be fair though it should be -_-
[20:56:23] <pragma-> No way!
[20:56:32] <pragma-> Say it ain't so, Joe. 
[20:56:35] <Amun-Ra> Matt|home: nah, I bet it's gcc ;)
[20:56:38] <Amun-Ra> Kit: https://en.wikipedia.org/wiki/Ubuntu_version_history#Table_of_versions
[20:57:22] <Kit> huh
[20:57:26] <Kit> okay
[20:57:28] <Kit> cool
[20:57:32] <Amun-Ra> standard support until apt 2023, hmm
[20:57:51] <Kit> but why are they on such an old version of gcc
[20:57:56] *** Quits: flynn (~mcbloch@user/flynn) (Quit: The Lounge - https://thelounge.chat)
[20:58:02] <Amun-Ra> tho it doesn't mean it's old as
[20:58:51] *** Joins: tiotags (~tiotags@user/tiotags)
[20:59:01] *** Quits: atulu (~atulu@2001:470:69fc:105::d50c) (Quit: Reconnecting)
[20:59:16] *** Joins: atulu (~atulum]@2001:470:69fc:105::d50c)
[20:59:39] *** Joins: flynn (~mcbloch@user/flynn)
[21:01:03] <Matt|home> oooooh
[21:01:05] <Matt|home> i understand
[21:01:24] <Matt|home> K&R knew i'd get confused and intentionally made the language difficult for me. yeah that  makes more sense
[21:01:45] *** Joins: boreas (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[21:02:35] <Matt|home> because -APPARENTLY- assigning a void** to a void* is legal and _not_ a fcking type error
[21:02:51] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Ping timeout: 245 seconds)
[21:03:01] *** Quits: katnis (uid15849@id-15849.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[21:04:43] <gerogerigegege> I was looking at the gcc behind this IDE and it's gcc 4.3.6 (but it's also for an 8 bit cpu target)
[21:04:43] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[21:04:46] *** Joins: Viewday113 (~Viewday@user/viewday)
[21:05:14] <pragma-> Kit: LTS just gets security updates, afaik
[21:05:21] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[21:06:06] <pragma-> ,recall me "void pointer" -b 50
[21:06:08] <candide> [1d3h ago] <o​megatron> how silly could it be, that you don't want to post it here? [1d3h ago] <M​att|home> yes. [1d3h ago] <bud> embrace the cringe [1d3h ago] <p​ragma-> Private conversations with a single individual means you're subject to that individual's knowledge which may or may not be correct. Public conversations in the channel allows everyone a chance to correct misspoken or incorrect info... <truncated; https://0x0.st/-C30.txt>
[21:06:26] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[21:06:36] <pragma-> Matt|home: sheesh, I literally told you this about void pointers 3 or 4 times yesterday!
[21:06:52] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[21:06:53] *** Viewday113 is now known as Viewday11
[21:06:54] <Kit> lol
[21:07:41] *** Quits: kspalaiologos (~kspalaiol@user/kspalaiologos) (Quit: Leaving)
[21:07:55] <Matt|home> i'll finish it if it kills me and everyone in my life -_- including on irc
[21:09:22] *** Quits: brad_mssw|mbp (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Quit: Leaving)
[21:09:42] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[21:10:15] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[21:18:01] *** Quits: boreas (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2) (Remote host closed the connection)
[21:19:16] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[21:19:29] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[21:19:42] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[21:25:03] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:ea20:d6db:daa:1f1d) (Quit: Leaving)
[21:25:39] *** Joins: strajder (~strajder@user/strajder)
[21:28:24] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Remote host closed the connection)
[21:29:51] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[21:35:28] *** Joins: nvmd (~nvmd@user/nvmd)
[21:35:34] *** Quits: MajorBiscuit (~MajorBisc@c-001-015-014.client.tudelft.eduvpn.nl) (Ping timeout: 268 seconds)
[21:36:25] *** Joins: Viewday116 (~Viewday@user/viewday)
[21:38:02] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[21:38:03] *** Viewday116 is now known as Viewday11
[21:39:20] *** Joins: Betal (~Betal@user/betal)
[21:39:40] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[21:39:53] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[21:42:26] *** Joins: magla (~gelignite@55d4a813.access.ecotel.net)
[21:48:17] *** Joins: aradesh (~aradesh@user/aradesh)
[21:49:07] *** Joins: xa0s (~xa0s@mab.sdf.org)
[21:49:21] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[21:49:21] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[21:49:21] *** Joins: wroathe (~wroathe@user/wroathe)
[21:54:15] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[21:54:37] *** Quits: ko (~i.am@user/marlboro) (Ping timeout: 240 seconds)
[21:56:06] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[21:56:34] *** Joins: ko (~i.am@177.40.115.71)
[21:56:34] *** Quits: ko (~i.am@177.40.115.71) (Changing host)
[21:56:34] *** Joins: ko (~i.am@user/marlboro)
[21:57:33] *** Joins: kspalaiologos (~kspalaiol@user/kspalaiologos)
[21:58:13] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[21:58:17] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 240 seconds)
[21:58:29] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[21:59:00] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[22:01:31] *** Joins: findiggle (~user@2601:601:9f00:5c60:dfe7:ec34:7bba:73c5)
[22:02:56] *** Quits: rany (~rany@user/rany) (Quit: The Lounge - https://thelounge.chat)
[22:02:58] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[22:03:08] *** Joins: rany (~rany@user/rany)
[22:03:26] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[22:03:26] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[22:03:26] *** Joins: wroathe (~wroathe@user/wroathe)
[22:03:42] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[22:04:26] *** Quits: meator (~meator@user/meator) (Ping timeout: 252 seconds)
[22:04:59] *** Joins: Viewday114 (~Viewday@user/viewday)
[22:06:56] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[22:06:57] *** Viewday114 is now known as Viewday11
[22:08:15] *** Quits: tewrvd^ (~tewrvd@64.253.22.77) (Remote host closed the connection)
[22:08:21] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[22:08:34] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[22:09:43] *** Joins: boreas (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[22:12:32] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[22:12:56] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[22:13:09] *** Quits: humky (~humky@user/humky) (Quit: Leaving)
[22:16:57] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 240 seconds)
[22:17:08] *** Joins: X-Scale` (~ARM@206.46.158.5.rev.vodafone.pt)
[22:17:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[22:19:13] *** Joins: humky (~humky@user/humky)
[22:19:32] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[22:19:45] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[22:19:57] *** Joins: Akuli (~Akuli@213.216.211.146)
[22:20:25] *** Quits: X-Scale (~ARM@83.223.243.175) (Ping timeout: 256 seconds)
[22:20:25] *** X-Scale` is now known as X-Scale
[22:21:36] *** Joins: begriffs (~begriffs@user/begriffs)
[22:21:40] *** Quits: humky (~humky@user/humky) (Client Quit)
[22:29:31] *** Quits: Thedarkb1 (~Thedarkb@86-42-4-182-dynamic.agg3.kny.prp-wtd.eircom.net) (Read error: No route to host)
[22:29:54] *** Joins: Thedarkb (~Thedarkb@2001:bb6:b403:e042:eefd:c6c7:bba0:4cad)
[22:30:48] *** Joins: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy)
[22:31:37] *** Quits: plantman (~plantman@2601:405:4680:1b0::f) (Ping timeout: 240 seconds)
[22:31:42] *** Joins: meator (~meator@user/meator)
[22:32:47] *** Joins: Viewday119 (~Viewday@user/viewday)
[22:33:08] *** Quits: Thedarkb (~Thedarkb@2001:bb6:b403:e042:eefd:c6c7:bba0:4cad) (Remote host closed the connection)
[22:33:39] *** Joins: Thedarkb (~Thedarkb@2001:bb6:b403:e042:eefd:c6c7:bba0:4cad)
[22:34:27] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[22:34:27] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[22:34:27] *** Joins: wroathe (~wroathe@user/wroathe)
[22:34:42] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[22:34:43] *** Viewday119 is now known as Viewday11
[22:34:51] *** Joins: shivesh (~shivesh@user/shivesh)
[22:34:58] <Matt|home> so im not sure what the correct way to do this is.
[22:36:35] *** Joins: humky (~humky@user/humky)
[22:36:53] <Matt|home> like like to give my program some command line arguments. right now, i've got two functions: one for handling 32-bit and one for 64-bit files. if the user enters an option like "print out this portion of the file", that means i have to pass every single potential command line argument to both functions right?
[22:37:03] <Matt|home> i'd like to*
[22:37:19] <Matt|home> i don't see another way of doing it, except to have a lot of redundant code
[22:38:13] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[22:38:26] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[22:38:41] *** Quits: Thedarkb (~Thedarkb@2001:bb6:b403:e042:eefd:c6c7:bba0:4cad) (Ping timeout: 245 seconds)
[22:39:05] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[22:39:08] *** Joins: Thedarkb (~Thedarkb@2001:bb6:b403:e042:eefd:c6c7:bba0:4cad)
[22:39:33] <vdamewood> Matt|home: It's usually best if you parse the command-line arguments in main() and convert them to something more usable by the functions you call.
[22:39:33] *** Joins: ffguest (~ffguest@178.151.94.123)
[22:40:49] <pragma-> or in a parse_argv() function!
[22:40:56] *** Quits: ffguest (~ffguest@178.151.94.123) (Client Quit)
[22:41:06] *** Quits: Inline (~Inline@aftr-37-201-240-204.unity-media.net) (Quit: Leaving)
[22:41:43] <Matt|home> ... how exactly would that work.. like.. i grab the arguments from main() .. "parse them" and then what, pass some kind of array or something to both functions?
[22:41:57] *** Joins: Akiva (~Akiva@user/Akiva)
[22:42:32] <vdamewood> It depends a lot on what the arguments do.
[22:42:56] <vdamewood> on/off flags can be mapped to bitfields.
[22:42:58] <Matt|home> yeah.. haven't worked out all the details yet
[22:43:15] <Matt|home> somebody suggested global flags
[22:43:22] <nomagno> Boolean expressions in C are evaluated lazily, correct? So 'if ((1 - 1) && ( 1 + 1))' should never compute 1 + 1
[22:43:34] <pragma-> smh. global state is poor-man's laziness.
[22:43:47] <Matt|home> for e.g. a non-optional argument is filename
[22:43:51] <pragma-> pass a state structure around instead
[22:43:54] <vdamewood> nomagno: That's not lazy, that's short-circuiting.
[22:44:03] <vdamewood> nomagno: And yes, C short circuits.
[22:44:19] <Matt|home> .. what does short circuiting mean in this context..
[22:44:30] <nomagno> Ah, TIL what that word means
[22:44:31] <caze> IT has nothing to do with "boolean expressions".
[22:44:40] <nomagno> Matt|home: Cutting a circuit short, I imagine
[22:44:45] <Matt|home> -_-
[22:44:51] <caze> It has to do with the && operator (and || also)
[22:44:56] <vdamewood> nomagno: If an expressions evaluation is meaningless, it's not evaluated.
[22:45:02] <vdamewood> expression's
[22:45:03] *** Joins: rgrinberg (~textual@2806:101e:1:83af:8095:9213:668b:97a8)
[22:45:08] *** Quits: Haxxa (~Haxxa@202-130-211-204.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:20] <vdamewood> nomagno: So, for example, if A and B and A is false, since B is meaningless at that point, B is not evaluated.
[22:45:30] <Matt|home> so tl;dr the _idea_ is grab the arguments list from main and then pass them all at once as a big chunk to different functions? 
[22:45:38] <vdamewood> err in (A and B) if A is false.
[22:45:43] <nomagno> That's good, saves me a good headache that would result from an unwanted side-effect
[22:46:28] *** Quits: rcoote (~rcoote@ip-176-198-113-232.hsi05.unitymediagroup.de) (Read error: No route to host)
[22:46:28] <Matt|home> i feel like a significant portion of code is going into argument parsing in this case..
[22:46:31] <vdamewood> nomagno: It's often used like that. For example if (my_struct_ptr && my_struct_ptr->foo) to make sure the access to ->foo doesn't cause a segfault.
[22:46:39] *** Joins: rcoote (~rcoote@ip-176-198-113-232.hsi05.unitymediagroup.de)
[22:46:53] <nomagno> OOOOOH! That sounds insanely useful
[22:47:13] <nomagno> I often wondered how people made sure you weren't accessing NULL without a lot of boilerplate.
[22:48:00] <pragma-> some people consider that to be a lot of boilerplate
[22:48:17] *** Joins: Haxxa (~Haxxa@202-130-211-204.ip4.superloop.com)
[22:48:20] * pragma- squints at kotlin programmers
[22:48:20] *** Quits: nvmd (~nvmd@user/nvmd) (Ping timeout: 268 seconds)
[22:49:29] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:49:41] *** Joins: nvmd (~nvmd@user/nvmd)
[22:50:10] <pragma-> They'd just use their null-saftey operator and write something like `if (my_struct_ptr?->foo)`
[22:51:20] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[22:52:26] *** Joins: slidercrank (~slidercra@user/slidercrank)
[22:53:05] *** Quits: bolovanos__ (~bolovanos@user/bolovanos) (Quit: Leaving)
[22:55:57] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[22:56:25] *** Joins: constxd (~brad@142.134.38.68)
[22:59:46] <nomagno> You know, how hard would it actually be to write a preprocessor shorthand for array bound-checking?
[23:00:03] *** Joins: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com)
[23:02:16] *** Joins: zzzod (~user@160.178.6.111)
[23:03:11] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:7d33:9c49:8a76:cfa0) (Quit: Quit)
[23:03:58] <vdamewood> nomagno: What if you don't know the bounds of the array?
[23:04:51] <Kit> i like to have a struct with a pointer to an array and a var telling it how big the array is
[23:04:54] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[23:05:03] <nomagno> vdamewood: Then you can't do bound-checking, so you wouldn't use a preprocessor macro for array bound-checking.
[23:05:15] *** Joins: Viewday115 (~Viewday@user/viewday)
[23:05:30] <nomagno> Kit: At that point you can just have a struct with an array
[23:05:42] <Kit> ...thats what i meant
[23:05:44] *** Quits: nuxil (~nuxil@141.195.51.213) (Read error: Connection reset by peer)
[23:06:01] <nomagno> Huh?
[23:06:11] <nomagno> I mean, arrays inside structs do not decay to pointers
[23:06:16] <nomagno> it's the main advantage
[23:06:40] <nomagno> If you have a pointer and the size, it's useful but you could do it with separate function arguments
[23:07:00] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[23:07:01] *** Viewday115 is now known as Viewday11
[23:07:21] *** Joins: nuxil (~nuxil@141.195.51.213)
[23:08:03] *** Quits: obby303 (~Guest26@65.207.90.10) (Quit: Client closed)
[23:11:39] *** Joins: ldlework (~hexeme@user/hexeme)
[23:11:50] <ldlework> Is there a popular library for vector/hashmaps
[23:11:55] <ldlework> I'm new to C
[23:11:59] <ldlework> "new"
[23:12:15] <pragma-> We use malloc around here, buddy.
[23:12:28] <ldlework> hehe
[23:12:32] <ldlework> Yeah but surely someone has packaged something up?
[23:13:21] <ldlework> I found, https://github.com/cher-nov/Gena/ but it only documents its vector support (which is nice), I can't figure out how to use its map support
[23:13:22] <candide> Title of ldlework's link: GitHub - cher-nov/Gena: Generic pseudo-templated containers for C. Written entirely in C89 with design inspired by the C++ STL. /// DOCS ARE SLIGHTLY OUTDATED, PROJECT IS STABLE AND STILL IN ACTIVE DEVELOPMENT
[23:13:25] <csjp> haha
[23:13:34] <ldlework> I found https://github.com/peterr-s/hash_map for maps, which is nice
[23:13:35] <candide> Title of ldlework's link: GitHub - peterr-s/hash_map: A simple C hash map implementation
[23:13:43] <ldlework> But ultimately a unified library would be better
[23:15:10] *** Joins: ffguest (~ffguest@178.151.94.123)
[23:16:49] *** Quits: larry87 (~quassel@c-73-6-106-85.hsd1.tx.comcast.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:17:05] *** Quits: terminalpusher (~terminalp@2a01:586:968a:1:2075:621e:ac7b:a6ff) (Remote host closed the connection)
[23:17:38] *** Joins: terminalpusher (~terminalp@2a01:586:968a:1:2075:621e:ac7b:a6ff)
[23:17:46] *** Quits: constxd (~brad@142.134.38.68) (Ping timeout: 256 seconds)
[23:17:47] <Kit> does anybody know how not to have a mental breakdown bc your code keeps not working no matter what you do aaaaaaaaa
[23:17:55] *** Quits: ffguest (~ffguest@178.151.94.123) (Remote host closed the connection)
[23:18:33] <NRK[m]> yes
[23:18:37] <NRK[m]> just write code that works
[23:18:42] *** Joins: Inline (~Inline@aftr-37-201-240-204.unity-media.net)
[23:18:51] * Kit screams
[23:18:59] <ldlework> 1. Draw the Owl
[23:19:18] <Kit> lmfao
[23:19:24] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[23:19:37] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[23:20:36] *** Quits: nuxil (~nuxil@141.195.51.213) (Ping timeout: 256 seconds)
[23:21:48] *** Joins: cousteau (~cousteau@user/cousteau)
[23:21:56] *** Joins: banc- (banc@gateway/vpn/airvpn/banc)
[23:22:18] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 256 seconds)
[23:27:40] *** Joins: nuxil (~nuxil@141.195.51.213)
[23:27:44] <zzzod> gdb is a miracle
[23:28:01] *** Joins: bebyx (~Thunderbi@user/bebyx)
[23:29:27] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Remote host closed the connection)
[23:29:49] *** Joins: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[23:31:39] *** Joins: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[23:34:08] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[23:34:20] *** Quits: humky (~humky@user/humky) (Remote host closed the connection)
[23:34:28] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[23:34:40] <tiotags> nobody comes to the internet to complain that their code works, I find this disturbing, what if all the people who have working code are abducted by aliens, I say write code that doesn't work just to be sure
[23:35:08] <floatcomplex> ,hashtable
[23:35:09] <candide> hashtable is https://git.zx2c4.com/wireguard-tools/tree/src/wincompat/include/hashtable.h
[23:36:07] *** Quits: terminalpusher (~terminalp@2a01:586:968a:1:2075:621e:ac7b:a6ff) (Remote host closed the connection)
[23:36:32] *** Joins: Viewday111 (~Viewday@user/viewday)
[23:37:42] *** Quits: john99 (~john99@158.246.103.34.bc.googleusercontent.com) (Quit: Client closed)
[23:38:44] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[23:38:45] *** Viewday111 is now known as Viewday11
[23:41:10] *** Joins: Satin (uid193953@user/Seten)
[23:44:11] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[23:49:18] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[23:49:34] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[23:49:35] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[23:49:38] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[23:49:48] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[23:49:54] <ldlework> ,vector
[23:50:42] <ldlework> that hash table doesn't seem very useful
[23:51:00] *** Joins: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[23:51:11] *** Quits: kspalaiologos (~kspalaiol@user/kspalaiologos) (Quit: Leaving)
[23:54:29] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[23:56:51] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[23:57:06] *** Joins: john99 (~john99@158.246.103.34.bc.googleusercontent.com)
[23:57:51] *** Quits: duuude (~user@user/duuude) (Ping timeout: 245 seconds)
[23:58:48] *** Joins: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[23:59:06] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:59:46] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
