[00:00:11] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 260 seconds)
[00:02:03] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[00:02:37] *** Quits: zstix (~zstix@4.15.128.42) (Quit: Goodbye)
[00:02:59] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[00:04:05] *** Quits: lembron (~admin@user/lembron) (Ping timeout: 250 seconds)
[00:04:52] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 260 seconds)
[00:05:01] *** Joins: i0e (~is0ke3@user/is0ke3)
[00:05:26] *** Joins: nomic (~nomic@185.217.117.249)
[00:05:38] *** Quits: ckdCreations (~ckdCreati@147.55.133.134) (Read error: Connection reset by peer)
[00:05:39] *** Quits: nomic (~nomic@185.217.117.249) (Client Quit)
[00:06:07] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[00:06:15] *** Quits: i0e (~is0ke3@user/is0ke3) (Client Quit)
[00:06:21] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:e4ee:8819:6d77:cf26)
[00:07:20] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 272 seconds)
[00:08:06] *** Joins: nomic (~nomic@185.217.117.249)
[00:09:56] <skylite> ljharb: and why do we need map + find combined? for example why is find itself not enough?
[00:10:36] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[00:10:41] <skylite> (I'm sorry but I'm a bit stuck at this one and want to understand it well)
[00:11:05] <banana_> can you repeat?
[00:11:27] <banana_> just joined. I could try to help depends
[00:12:24] <skylite> banana_: https://codesandbox.io/s/mystifying-chatelet-wy5fz8?file=/src/index.js:1332-1528
[00:12:36] <ljharb> skylite: your code was locating one item, but then transforming it
[00:12:58] <ljharb> skylite: but to transform it, you need the original item, so you can’t find first
[00:13:14] <skylite> https://codesandbox.io/s/recursivefetchoriginal-tldfsu
[00:13:23] <skylite> here is the original
[00:13:35] <skylite> but I don't think i'm transforming anything
[00:13:52] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[00:13:53] <skylite> I'm just checking for something and putting it inside meta if exists
[00:14:19] <ljharb> skylite: but the thing you’re putting inside meta isn’t the thing you’re checking, it’s a nested property of it
[00:14:28] <ljharb> skylite: `object.a.b` is a transform
[00:14:39] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[00:15:25] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[00:16:01] <skylite> I'm checking for something inside meta and if that exists I'm saving everyhing inside meta
[00:16:14] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[00:17:28] *** Quits: mud (~mud@user/kadoban) (Quit: quit)
[00:17:35] *** Quits: nomic (~nomic@185.217.117.249) (Quit: Leaving)
[00:18:06] <ljharb> skylite: ok, sure. But the thing you’re checking is inside the whole thing
[00:18:20] <skylite> true
[00:18:31] <ljharb> skylite: and it’s nested inside other conditionals and loops
[00:21:16] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Ping timeout: 272 seconds)
[00:22:37] *** Joins: kakashiA1 (~kakashi@105.156.9.83)
[00:24:53] *** Quits: kakashiAL (~kakashi@41.143.8.67) (Ping timeout: 250 seconds)
[00:28:07] *** Quits: maroloccio (~marolocci@pousada3ja.mma.com.br) (Quit: WeeChat 3.0)
[00:29:43] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (Quit: Konversation terminated!)
[00:30:04] *** Joins: cotko (~cotko@188-230-251-153.dynamic.t-2.net)
[00:32:18] *** Quits: ttys000 (~ttys000@user/ttys000) (Quit: Textual IRC Client: www.textualapp.com)
[00:32:25] *** Quits: iffraff (~quassel@2605:a601:aae0:4a00:2a66:7863:a0d2:38ad) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:32:26] *** Quits: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[00:32:57] *** Joins: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net)
[00:33:07] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Quit: junktext_)
[00:35:08] *** Quits: jumpcutking (uid459573@id-459573.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[00:36:59] *** Joins: nomic (~nomic@185.217.117.249)
[00:37:33] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[00:37:57] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[00:38:35] *** Joins: _wovixo_ (~wovixo@128.104.205.49)
[00:38:53] *** Joins: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net)
[00:39:13] *** Joins: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[00:39:34] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[00:39:53] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[00:40:10] *** Joins: realies1 (~realies@user/realies)
[00:40:43] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[00:41:47] *** Quits: wovixo (~wovixo@128.104.205.49) (Read error: Connection reset by peer)
[00:41:47] *** Quits: realies (~realies@user/realies) (Quit: Ping timeout (120 seconds))
[00:41:47] *** realies1 is now known as realies
[00:43:50] <skylite> ljharb: how about using map insdead of flatMap and removing the arrays from the return statement?
[00:44:00] *** Quits: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net) (Remote host closed the connection)
[00:44:10] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:e4ee:8819:6d77:cf26) (Quit: Client closed)
[00:44:37] *** Quits: bambanxx (~bambanx@2800:150:106:1061:ddab:8549:6a:7a63) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:44:52] <systemfault> 2 days on a snippet of code involving .flatMap ? :P
[00:44:54] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Quit: Client closed)
[00:44:59] *** Joins: pajaroherido_ (uid152904@id-152904.ilkley.irccloud.com)
[00:45:21] *** Joins: bambanxx (~bambanx@2800:150:106:1061:ddab:8549:6a:7a63)
[00:45:24] <systemfault> Is it Groundhog day?
[00:45:24] <skylite> :D yes but with a lot of interupts
[00:45:34] *** Joins: howdoi_ (uid224@id-224.lymington.irccloud.com)
[00:45:40] *** Joins: varaindemian_ (uid73404@id-73404.ilkley.irccloud.com)
[00:46:28] *** Quits: pajaroherido (uid152904@id-152904.ilkley.irccloud.com) (Read error: Connection reset by peer)
[00:46:28] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Read error: Connection reset by peer)
[00:46:28] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Read error: Connection reset by peer)
[00:46:28] *** pajaroherido_ is now known as pajaroherido
[00:46:28] *** varaindemian_ is now known as varaindemian
[00:46:28] *** howdoi_ is now known as howdoi
[00:47:33] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:48:02] <skylite> I know I should just be happy that it's nice and it works and move on
[00:48:36] <systemfault> Would be nice if JS has something like .filterMap/.collect... but in an untyped language without an "Option" type, I don't believe that works... .flatMap is probably the way to go
[00:49:03] *** Joins: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net)
[00:49:08] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 272 seconds)
[00:49:49] *** Quits: bambanxx (~bambanx@2800:150:106:1061:ddab:8549:6a:7a63) (Ping timeout: 240 seconds)
[00:58:13] *** Quits: chandash (~chandash@ip-115-87.wireless.oberlin.edu) (Ping timeout: 256 seconds)
[00:58:42] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[01:00:39] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[01:01:46] *** Joins: chandash (~chandash@ip-115-87.wireless.oberlin.edu)
[01:03:19] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[01:05:29] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[01:06:09] *** Quits: chandash (~chandash@ip-115-87.wireless.oberlin.edu) (Ping timeout: 256 seconds)
[01:07:40] <ThePendulum> couldn't filterMap take a second argument that's the same as filter's primary argument?
[01:07:49] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:08:09] *** Quits: bomb (~bomb@user/bomb) (Quit: o/)
[01:09:10] <systemfault> So, two functions?
[01:09:20] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[01:09:31] <systemfault> Might as well use .map then .filter... and it wouldn't be that flexible.
[01:10:10] <ThePendulum> not quite sure I understand what filterMap would add otherwise anyway
[01:10:32] <ThePendulum> n> function filterMap(data, mapFn, filterFn = Boolean) { return data.map(mapFn).filter(filterFn); } console.log(filterMap([1, 2, 3], (value) => value - 1), filterMap([1, 2, 3], (value => value - 1), (value) => value > 1))
[01:10:33] <jellobot> (okay) [ 1, 2 ] [ 2 ]
[01:11:06] <systemfault> The point is mostly performance.
[01:11:25] <systemfault> One iteration is faster than 2.
[01:11:44] <systemfault> The clojure world created transducers to do similar.
[01:12:05] <grapheti> What's the _most_ performant way to dig down three levels of arrays of objects?
[01:12:21] <grapheti> _most performance driven_ blah
[01:12:47] <systemfault> When unused, mutation is always faster... but leads to more difficult to read/maintain code.
[01:12:56] <systemfault> Up to you to use that power 'wisely'
[01:13:06] <grapheti> heh
[01:13:16] <systemfault> (And actually be sure that performance is IMPORTANT in that specific function)
[01:13:19] <stenno> .take is in iterator helpers
[01:13:37] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[01:13:40] <grapheti> yeah, that's a good point
[01:13:43] <howdoi> yup
[01:13:56] <grapheti> identify what is important :D
[01:14:49] <howdoi> looks like Rust is more equipped with itertools
[01:16:11] *** Quits: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net) (Read error: Connection reset by peer)
[01:16:24] *** Joins: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net)
[01:17:25] <ThePendulum> systemfault: wouldn't you need to check for an Option type or whatever anyway? how is that different from checking a Boolean or some other default?
[01:17:34] <ThePendulum> it's still one iteration
[01:17:55] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 240 seconds)
[01:18:07] <stenno> n> const takeUntil = (ary) => (cb) => ary.slice(0, ary.findIndex(cb) ?? Infinity); takeUntil([1,2,3,4,5])(i => i > 3)
[01:18:07] <jellobot> (okay) [ 1, 2, 3 ]
[01:19:34] *** Joins: chandash (~chandash@ip-115-87.wireless.oberlin.edu)
[01:19:53] <stenno> i guess ary.length instead of Infinity
[01:20:09] <ThePendulum> I figured internally it would do some sort of optimized version of data.reduce((acc, value) => if (filterFn(value)) { return acc.concat(mapFn(value)) } return acc; , [])
[01:20:25] <ThePendulum> } somewhere
[01:21:54] <systemfault> Nearly anything involving a complete iteration of an array can be written with .reduce
[01:21:54] *** Quits: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net) (Read error: Connection reset by peer)
[01:22:03] <systemfault> .reduce is the "for loop" of the FP world.
[01:22:10] *** Joins: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net)
[01:22:19] <stenno> which cannot?
[01:22:42] <hacks> sparse arrays?
[01:22:47] <systemfault> stenno: You cannot write a proper Array#find with .reduce
[01:23:05] <systemfault> Proper as "should stop on first match"
[01:23:06] <stenno> systemfault: well any short-circuited methods then
[01:23:29] <stenno> yeah but you can get the same result without short circuiting
[01:23:45] <systemfault> That's what I wanted to say by "involving a complete iteration of an array"... I should have said it better
[01:23:48] <stenno> find, findIndex, every, some
[01:23:56] *** Quits: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net) (Client Quit)
[01:24:02] <systemfault> every is not part of that :p
[01:24:11] <stenno> right, gotcha
[01:24:19] <stenno> every short circuits too
[01:24:26] <stenno> on first falsy
[01:24:41] <systemfault> In FP, they're usually handled with recursion... (Not JS friendly..)
[01:24:48] <systemfault> For now at least..
[01:25:10] *** Quits: Guest716 (riotz@is.only.here.for-some.fun) (Changing host)
[01:25:10] *** Joins: Guest716 (riotz@user/riotz)
[01:25:26] *** Quits: dmanto (~dmanto@host239.186-108-253.telecom.net.ar) (Ping timeout: 268 seconds)
[01:25:30] *** Guest716 is now known as riotz
[01:26:09] <systemfault> ThePendulum: When using flatMap, the [element] or [] acts like an Option type
[01:26:15] <stenno> i heard haskell has an an infinite stack
[01:27:14] <stenno> hm actually
[01:27:18] <systemfault> You could say that... but if you try left folding a huge list, you'll get an OOM error.
[01:27:54] <systemfault> Because Haskell is a lazy language, and the way foldl works, it's going to accumulate "thunks" in memory until it reaches the end of the List
[01:28:30] <systemfault> So Haskell often use foldr... or some strict version of foldl to fix that
[01:30:16] <stenno> oh findIndex returns -1 if nothing is found, bleh
[01:30:28] *** Joins: jazzy (~jaziz@user/jaziz)
[01:30:40] <systemfault> Don't we love magic constants?
[01:30:46] <systemfault> Best thing EVAR
[01:31:04] <stenno> i guess null or undefined would also be bad
[01:31:16] <stenno> that is how it is in php in certain situations
[01:31:36] <systemfault> Most other languages I've worked with still use -1 as the value for "not found" but they also add a constant on the class
[01:31:43] *** Joins: fef (~thedawn@user/thedawn)
[01:31:59] <stenno> now that we have ?? we could justify null imo
[01:32:01] <stenno> right
[01:32:08] <systemfault> const index = myArray.findIndex(....); if (index !== Array.NOT_FOUND) {}
[01:32:11] <systemfault> (or similar)
[01:32:38] <stenno> blep lol
[01:32:56] <systemfault> Not saying it's great... but at least, it's not -1
[01:34:16] <systemfault> I'm at a point where "personally", when I have to use indexOf/findIndex, it gives me a hint that I may be doing something wrong
[01:34:49] *** Quits: average_ (uid473595@id-473595.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[01:38:23] <stenno> yeah, direct index is probably very often code smell
[01:38:50] <stenno> but not if you want to implement a takeUntil :P (like i did)
[01:39:35] *** Quits: Digit (~user@user/digit) (Ping timeout: 260 seconds)
[01:40:36] <stenno> but unfortunately the code is a bit more ugly than my one-liner
[01:42:21] *** Quits: kakashiA1 (~kakashi@105.156.9.83) (Ping timeout: 252 seconds)
[01:43:16] <stenno> n> const takeUntil = (ary) => (cb) => { const idx = ary.findIndex(cb); return ary.slice(0, idx >= 0 ? ary.length : idx}); takeUntil([1,2,3,4,5])(i => i > 5)
[01:43:17] <jellobot> (fail) SyntaxError: missing ) after argument list
[01:43:23] <systemfault> I don't mind going full mutation/imperative in a library function that is used as if it was 100% immutable(input/output), as long as the mutable stuff is "contained" and the result is more performant (it matters functions like takeUntil that is going to be used over and over), I don't feel bad for it.
[01:44:02] <stenno> n> const takeUntil = (ary) => (cb) => { const idx = ary.findIndex(cb); return ary.slice(0, idx >= 0 ? ary.length : idx)}; takeUntil([1,2,3,4,5])(i => i > 5)
[01:44:02] <jellobot> (okay) [ 1, 2, 3, 4 ]
[01:44:17] <stenno> blep
[01:44:19] <stenno> +1
[01:44:31] <stenno> systemfault: so like immer?
[01:45:11] <systemfault> Haha, I love the lib, will use it for sure if one day... I ever do frontend again. But I have never used it.
[01:45:37] <systemfault> I've used, unfortunately, ImmutableJS though
[01:45:38] <sheetjs> n> ((x,y) => new Uint8Array(new Uint16Array([x, y]).buffer))(2,3)
[01:45:39] <jellobot> (okay) Uint8Array(4) [ 2, 0, 3, 0 ]
[01:45:45] <sheetjs> ^^ better way of doing that?
[01:46:18] <stenno> DataView ?
[01:46:22] <stenno> or whatsitcalled
[01:46:36] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 245 seconds)
[01:46:38] <stenno> hmm thats probably not beetter
[01:46:47] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[01:47:01] <stenno> huh, wait
[01:47:06] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[01:47:32] <systemfault> Hmm, can endianess change in the browser?
[01:47:50] <systemfault> If so, what you're doing could be not portable.
[01:48:00] <sheetjs> DataView APIs ask for endianness
[01:48:04] <stenno> DataView-
[01:48:06] <stenno> yeah
[01:48:34] <systemfault> But not Uint16, so, in a big endian system, you could get (okay) Uint8Array(4) [ 0, 2, 0, 3 ]
[01:48:36] <systemfault> No?
[01:48:45] *** Joins: pavonia (~user@user/siracusa)
[01:48:48] <systemfault> DataView should work everywhere
[01:51:29] <blueagain> immer's name should imma. but no one would get it
[01:51:46] <systemfault> I must admit that I don't get it either...
[01:52:11] <blueagain> it's german for 'always', but it's spoken 'imma'
[01:52:44] <stenno> :I
[01:52:53] *** Quits: trafficjam (~qubes@119-12-218-129.dynamic.ipstaraus.com) (Read error: Connection reset by peer)
[01:53:04] <systemfault> For a second, I thought it was "immer" said by Arnold
[01:53:20] <systemfault> "Get to the choppa" style..
[01:53:23] *** Joins: trafficjam (~qubes@119-12-218-129.dynamic.ipstaraus.com)
[01:53:24] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[01:54:05] <stenno> n> Uint8Array.from(Uint16Array.of(2,3))
[01:54:06] <jellobot> (okay) Uint8Array(2) [ 2, 3 ]
[01:54:19] <stenno> damn
[01:54:35] <stenno> ooh wait
[01:56:02] <stenno> hm i don't get it
[01:56:16] *** Quits: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[01:57:16] <systemfault> It just copies the value
[01:57:21] <stenno> yeah i see
[01:58:33] <systemfault> The safest way is to create the Uint8Array directly
[01:58:46] <systemfault> Unless for some reason that wasn't said.. sheetjs  cannot.
[01:59:42] <stenno> well thats how he did it in his initial code
[01:59:49] <sheetjs> it can be done directly
[02:00:06] <sheetjs> just explicitly masking off the low and high byte
[02:00:32] <sheetjs> new Uint8Array([x & 0xFF, (x>>8) & 0xFF, y & 0xFF, (y>>8) & 0xFF])
[02:00:48] <stenno> oh i have it
[02:01:01] <sheetjs> problem is google is putting pressure on us to reduce code size
[02:01:17] <sheetjs> so we gotta pick our bytes carefully
[02:01:51] <stenno> i wouldn't call that 'better' then lol
[02:02:16] <stenno> i mean, depends on what you actually mean with 'better'
[02:02:41] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[02:03:00] <systemfault> sheetjs:  Uint8ClampedArray ?
[02:03:11] <systemfault> Instead of &0xFF
[02:03:26] <sheetjs> it would just be Uint8Array, not clamped
[02:03:37] <sheetjs> n> new Uint8ClampedArray([256])
[02:03:38] <jellobot> (okay) Uint8ClampedArray(1) [ 255 ]
[02:03:53] <sheetjs> n> new Uint8Array([256, 256>>8])
[02:03:54] <jellobot> (okay) Uint8Array(2) [ 0, 1 ]
[02:06:31] *** Joins: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net)
[02:07:00] <systemfault> Anyway, the Clamped versions avoids under/overflow... and & 0xFF is used to avoid overflow.
[02:07:13] <systemfault> Just thought it would help making the code slightly cleaner.
[02:09:28] *** Joins: GreenDog (~greendog@cpe-76-176-54-209.san.res.rr.com)
[02:10:01] <GreenDog> I just took LinkedIn's JavaScript skills assessment and didn't pass. I don't know what to think of my life anymore.
[02:11:05] <systemfault> RIP, time to study is a field like sociology where truth is subjective and cannot be empirically verified.
[02:11:16] <blueagain> ^
[02:11:53] <GreenDog> yup
[02:12:06] <grapheti> math is the opposite on the spectrum
[02:12:31] <grapheti> closest thing to purity
[02:13:17] <blueagain> what spectrum
[02:13:30] <GreenDog> FOund a page with the answers. Realizing I read at least 2 questions wrong.
[02:13:59] <blueagain> imho those tests are useless, lots of them are based on gotchas
[02:14:33] <grapheti> blueagain: https://xkcd.com/435/
[02:14:41] <systemfault> I may try it for fun later... but if it's some algorithmic heavy shit in JS, I'll fail for sure
[02:15:26] <GreenDog> It's not really algorithmic, at least not in the sense of leetcode
[02:15:43] <grapheti> Success = Failure + Determination
[02:15:44] <GreenDog> But there's definitely some, "hey, let's code this is obscurely as possible" things.
[02:15:54] <systemfault> "You can retake this assessment once if you don’t earn a badge." WAT
[02:15:58] <systemfault> That's dumb
[02:16:03] <blueagain> ^
[02:16:08] <GreenDog> Yeah
[02:16:17] <systemfault> It should be allowed to retake it... but, in 6 months or something
[02:16:22] <suss> does anyone used to react?
[02:16:43] <grapheti> systemfault: That's how they get you!
[02:16:44] <systemfault> suss: What do you mean?
[02:16:46] <GreenDog> I've used React, but it's been a while, and evidently I don't know JavaScript, so bleh
[02:17:08] <grapheti> Maybe you can pay to retake. Pay to win!
[02:17:45] <grapheti> Aren't all the cool kids using svelte?
[02:17:48] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[02:17:55] <blueagain> GreenDog: learning things by heart is stupid and that's what a lot of these tests are based on. it's far more relevant that you understand universal cs concepts like abstraction, algorithmic growth and so on
[02:18:07] *** Joins: dea__ (~dea@31.210.96.68)
[02:19:08] <GreenDog> Nope, I've been unable to convince anyone at work to even look at svelte, and they are all cool kids.
[02:19:25] <blueagain> what's svelte
[02:19:32] <blueagain> isn't react bad enough, why do we need more
[02:19:37] <grapheti> Yet Another JS Framework
[02:19:55] <grapheti> https://svelte.dev/
[02:20:17] *** Quits: dea_ (~dea@213.128.80.36) (Ping timeout: 240 seconds)
[02:20:32] <blueagain> "voted the most loved web framework"
[02:20:36] <blueagain> I already hate it
[02:20:47] <grapheti> :D
[02:21:26] <grapheti> It has a compiler
[02:21:26] <systemfault> Veganism, voted the most loved diet by vegans
[02:21:28] <grapheti> so it be fast
[02:21:51] *** spynx is now known as spynxic
[02:21:58] <grapheti> > Whereas traditional frameworks like React and Vue do the bulk of their work in the browser, Svelte shifts that work into a compile step that happens when you build your app.
[02:22:17] <blueagain> react has ssr with next or whatever it's called
[02:22:17] <suss> systemfault i was copying the part of WYSIWYG editor in reactjs, the problem is that when i update state in `onInput' event then in `onSelect' event,  cursor moved to the start position of the line within a contenteditable div
[02:22:23] <blueagain> that's literally a non-factor
[02:22:38] <GreenDog> svelte is no fun, it doesn't call thousands of functions when I trigger a redux event.
[02:22:44] <grapheti> Yeah, next is neat
[02:23:24] *** Quits: colordrops (~erahhal@2603-8001-9600-7b60-0010-0100-0001-8d7d.res6.spectrum.com) (Ping timeout: 268 seconds)
[02:23:25] <sheetjs> GreenDog: after years of changing standards, we're entering a phase informally called "framework fatigue"
[02:23:29] <GreenDog> Fun fact: The creator of svelte works at next
[02:23:49] <grapheti> framework fatigue wouldn't exist if you do what blueagain said
[02:23:51] <sheetjs> "refractory refactoring"
[02:23:58] <grapheti> > GreenDog: learning things by heart is stupid and that's what a lot of these tests are based on. it's far more relevant that you understand universal cs concepts like abstraction, algorithmic growth and so on
[02:24:01] *** Joins: colordrops (~erahhal@2603-8001-9600-7b60-0010-0100-0001-d4eb.res6.spectrum.com)
[02:24:23] <grapheti> And knowing the domain for specific project
[02:24:53] <blueagain> I kind of agree with sheetjs here, I don't really like react myself, but I'd rather we stuck to it then moved on again all the time
[02:25:04] <blueagain> than*
[02:25:12] *** Quits: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net) ()
[02:25:42] <sheetjs> but you face the dual problem that react itself changes enough to be considered a different library
[02:26:08] <blueagain> yeah, I mostly use vanilla myself anyway. at work we do some react
[02:26:08] <grapheti> The basic cs concepts last forever, the frameworks change often
[02:26:15] <grapheti> do what last forever dawg
[02:27:45] <grapheti> just don't make a js framework lol jkjk
[02:28:06] <sheetjs> go back to excel or numbers
[02:29:05] <blueagain> excel is actually incredibly reactive
[02:29:07] <sheetjs> https://user-images.githubusercontent.com/6070939/157599532-e3978b11-c4be-4873-a2a3-e02e68ad0c3b.mp4 nuxt hot reload -- you can edit the spreadsheet in numbers and it automatically updates the website
[02:29:25] <blueagain> when I took a uni course about reactive programming, it was the most lucid explanation we got during intorduction
[02:30:43] <suss> i have this issue in reactjs that within contenteditable div, cursor moved to the start position when update state, can anyone fix it? https://0bin.net/paste/o3IVvL66#b7gH-9m4fXZEOr16nAn7HKvusznPAiufcqfQJjJYRo+
[02:31:33] <suss> its how facebook draftjs works, i just copy it
[02:31:52] <blueagain> sheetjs: so you need like over 200 years to get that the 100th president, or just many people dying
[02:32:04] <blueagain> get to*
[02:32:37] <grapheti> What's the _best practice_ way to get to c with the schema a[0].b[0].c ?
[02:32:37] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[02:32:43] <sheetjs> harrison died within a few months
[02:32:48] *** Quits: cobwebs (~cobwebs@2600:1700:9296:8090:588d:acfd:9a3b:b8ed) (Quit: Leaving)
[02:33:00] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 272 seconds)
[02:33:03] *** Quits: nomic (~nomic@185.217.117.249) (Quit: Leaving)
[02:33:24] <blueagain> Harrison died just 31 days after his inauguration in 1841
[02:33:29] <blueagain> that's barely a month
[02:33:43] <blueagain> also who is this guy, I never heard of him
[02:33:46] <sheetjs> on the other side is FDR
[02:34:03] <blueagain> that's before you had the 2 term limit, right?
[02:34:33] <sheetjs> the two-term limit was informal since george washington stepped down after 2 terms.  it was formalized after FDR
[02:35:01] <blueagain> great, you need an outlier to challenge an honour code to make it formal
[02:35:19] <grapheti> We only count President's who have slept in the White House.
[02:35:25] <grapheti> Presidents*
[02:35:28] <blueagain> US presidency, just like software development
[02:35:37] <GreenDog> suss: I don't know how to fix it, but the issue is likely the react is redrawing the component, which puts the cursor back to the start. This probably doesn't help you, sorry :(
[02:36:49] <suss> the cursor got reset came by document.getSelection()
[02:37:11] *** Joins: Fozzworth (~Fozzworth@user/fozzworth)
[02:37:26] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 272 seconds)
[02:37:56] <blueagain> so if you serve a full one term, that's always 1461 days, 2922 days for two terms
[02:38:00] <systemfault> blueagain: I'm beginning to believe that the US president should be randomly selected among all americans...
[02:38:02] <suss> it should have worked if i know where it did wrong
[02:38:22] <blueagain> systemfault: like a lottery?
[02:38:48] <systemfault> blueagain: Sure, with that lottery, there's actually a non-zero chance the US is going to get a good president.
[02:39:47] <blueagain> I always prefer incompetent policians, they do less harm
[02:40:13] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 256 seconds)
[02:40:28] <blueagain> so a lottery'd probably work for me
[02:41:23] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[02:43:28] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[02:43:48] *** Quits: chandash (~chandash@ip-115-87.wireless.oberlin.edu) (Ping timeout: 240 seconds)
[02:45:58] <theskillwithin> what an odd music video https://youtu.be/04v-SdKeEpE
[02:45:59] <skillbot> YouTube Title: George Harrison - My Sweet Lord (Official Music Video)
[02:46:03] <GreenDog> Welcome to #politics
[02:47:21] *** Joins: chandash (~chandash@ip-115-87.wireless.oberlin.edu)
[02:47:40] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[02:47:41] <systemfault> GreenDog: Just did the test, they don't actually give you the result...
[02:47:54] <systemfault> GreenDog: I guess that's why you can retake it as many times as you can
[02:48:07] <GreenDog> They said I didn't pass and needed to be in the top 30% to pass. I was in the top 47%
[02:48:31] <GreenDog> Which means I really really need to up my game
[02:48:33] <systemfault> "Great Work! You earned a badge. You're in the top 5% of 1.7M people who took this"
[02:48:51] <GreenDog> Though I'm looking through the questions on some other site and most are simple. I don't know how I got all these obscure ones.
[02:48:53] <systemfault> Doesn't tell me if I missed a question...
[02:48:54] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 252 seconds)
[02:49:21] <GreenDog> https://ebazhanov.github.io/linkedin-skill-assessments-quizzes/javascript/javascript-quiz.html
[02:50:00] <GreenDog> Anyway, I suck at JS
[02:50:09] <GreenDog> Which is why I'm here so people can make me not suck
[02:50:34] <xisop> GreenDog was a terrible sega game
[02:50:57] <grapheti> I suck at sucking
[02:51:24] <systemfault> Don't ever work as a vaccum then...
[02:51:27] <GreenDog> Dang, had I gotten questions 1 through 5 I would have easily passed this dumb thing
[02:51:29] <grapheti> :D
[02:51:39] *** Joins: dea_ (~dea@178.211.43.68)
[02:51:47] <ThePendulum> systemfault: that is a more PG occupation than what came to my mind
[02:51:57] <grapheti> I quit cold turkey
[02:52:06] <grapheti> I'll never eat warm turkey again
[02:52:19] <grapheti> Wait. :D
[02:52:37] *** Joins: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com)
[02:52:40] <theskillwithin> GreenDog those answers seem correct to me...
[02:52:45] <sheetjs> GreenDog: we tried hiring but its hard to find people familiar with the subset of JS we use
[02:52:59] <GreenDog> theskillwithin: Yup, they all seem correct
[02:53:00] *** Quits: chandash (~chandash@ip-115-87.wireless.oberlin.edu) (Ping timeout: 240 seconds)
[02:53:33] <systemfault> sheetjs: They don't want to do the job even if you told them that their first task would be to modernize it?
[02:54:01] <sheetjs> greenfield projects (no existing codebase but similar themes)
[02:54:11] <ThePendulum> grapheti: I suppose if you quit cold turkey, you'd only ever eat warm turkey?
[02:54:25] <grapheti> yeah, I ruined the joke lol
[02:54:29] <sheetjs> basic familiarity with bitwise operations and math
[02:54:32] *** Quits: dea__ (~dea@31.210.96.68) (Ping timeout: 272 seconds)
[02:54:33] <grapheti> ThePendulum: ^
[02:54:42] <ThePendulum> hehe
[02:54:51] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Ping timeout: 268 seconds)
[02:55:04] <GreenDog> I know how to add. That's math!
[02:55:06] <grapheti> https://sadtrombone.com/
[02:55:27] <systemfault> sheetjs: Change Math for Meth then....
[02:55:31] <ThePendulum> I'd like a little frog-based tutorial game for bitwise operators like there is for flexbox
[02:55:46] *** Joins: frege (~frege@d205-250-152-220.bchsia.telus.net)
[02:55:48] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[02:56:28] <GreenDog> bitwise operators are pretty easy
[02:56:59] <ThePendulum> think I used them years ago for this lights out game
[02:57:01] *** Quits: colordrops (~erahhal@2603-8001-9600-7b60-0010-0100-0001-d4eb.res6.spectrum.com) (Ping timeout: 240 seconds)
[02:57:19] <grapheti> I remember those in an old cs course
[02:57:26] <grapheti> I've slept since then
[02:57:28] <systemfault> I've only used them in JS a few years ago when I was fiddling on a GB emulator
[02:58:08] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:58:24] *** Joins: Digit (~user@user/digit)
[02:58:37] <GreenDog> OK, had I gotten the first 15 questions from https://ebazhanov.github.io/linkedin-skill-assessments-quizzes/javascript/javascript-quiz.html, I think I would have gotten them all correct, though I think Q10 has two correct answers.
[02:59:38] <systemfault> What is question 10?
[02:59:46] <suss> i know a square game wrote by nodejs but forgot the name
[03:00:04] <sheetjs> systemfault: in fairness, some of this is pretty modern and written in typescript
[03:00:05] <systemfault> GreenDog: Q10 on the link... or no your actual test
[03:00:18] <sheetjs> 	var docroot: IWAMessage = M?.[1]?.[0]?.meta?.[1]?.[0].data && varint_to_i32(M[1][0].meta[1][0].data) == 1 && M[1][0]; it technically uses modern JS constructs
[03:00:37] <GreenDog> on the link. https://ebazhanov.github.io/linkedin-skill-assessments-quizzes/javascript/javascript-quiz.html#q10-which-statement-creates-a-new-function-called-discountprice
[03:00:51] <systemfault> GreenDog: The answer is right, only the first works
[03:00:58] * GreenDog tries it
[03:01:28] <GreenDog> Nope, last works as well
[03:01:39] <systemfault> GreenDog: Yup.. in a REPL or in sloppy mode.
[03:01:46] <systemfault> Creates a global
[03:01:49] <grapheti> lmao
[03:01:54] <grapheti> #1
[03:02:01] <systemfault> GreenDog: Wouldn't compile in any modern environment.
[03:02:08] <GreenDog> It didn't specify non global
[03:02:16] <GreenDog> It's perfectly valid JS.
[03:02:17] <grapheti> That last one is nasty
[03:02:31] <grapheti> I guess it assumes you know
[03:02:32] <GreenDog> Your linters may whine at you
[03:02:37] <GreenDog> But it's valid.
[03:02:39] <systemfault> n> "use strict"; discountPrice = function (price) { return price * 0.85; }
[03:02:39] <jellobot> (fail) ReferenceError: discountPrice is not defined
[03:02:40] <grapheti> tru
[03:02:56] <GreenDog> No where does it say strict mode
[03:03:06] <grapheti> What is the _best_ answer type questions
[03:03:08] <grapheti> :D
[03:03:32] <GreenDog> There was one that I got that I also thought had two answers. Let me see if I can find it.
[03:03:53] <systemfault> Nobody competent doesn't use strict mode... A lot of ES6+ features only work in strict mode.
[03:03:54] <GreenDog> I probably chose the wrong one
[03:04:08] <grapheti> I mean two of them literally don't make sense, one creates a global, the other local
[03:04:32] <GreenDog> Jesus, why didn't I get any of these easy ones?
[03:04:38] <GreenDog> Like 80% of these questions are easy
[03:04:39] <grapheti> :D
[03:05:16] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[03:05:21] <GreenDog> WTF, there's a reactjs question in here
[03:06:06] <GreenDog> I probably would have gotten that one wrong
[03:06:08] <howdoi> lol
[03:06:19] <GreenDog> Oh geez, a useEffect() question
[03:06:23] <ThePendulum> would you use /[+,]/ or /\+|,/ ?
[03:06:33] <GreenDog> Do they assume that because you use JavaScript you also use React?
[03:06:41] <howdoi> useSideEffect()
[03:06:51] <systemfault> GreenDog: Maybe it's that website that mixes JS and React? (No clue)
[03:06:51] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 260 seconds)
[03:07:14] <howdoi> *.tsx
[03:07:42] <blueagain> those questions are legit bad
[03:07:49] <blueagain> q9, a closure has nothing to do with returning stuff
[03:07:51] <blueagain> oO
[03:08:04] <GreenDog> Ahh, here's the other one that I thought had two answers, and this doc shows it as well. I wonder if LinkedIn allowed both: https://ebazhanov.github.io/linkedin-skill-assessments-quizzes/javascript/javascript-quiz.html#q96-which-line-could-you-add-to-this-code-to-print-jaguar-to-the-console
[03:08:10] <grapheti> You just need to know this: while(1){}
[03:08:13] <grapheti> solves all your problems
[03:08:46] <howdoi> does the type gaurd look fine here? const isHTMLElement = (target: Window | HTMLElement): target is HTMLElement => (target as HTMLElement).getBoundingClientRect() !== undefined;
[03:08:48] <blueagain> almost as if the person who wrote JS didn't take CS 101
[03:08:49] <systemfault> GreenDog: It's worded a bit strangely... but none of the other answers make sense
[03:08:55] <blueagain> the JS test*
[03:09:06] *** Joins: chandash (~chandash@ip-115-87.wireless.oberlin.edu)
[03:09:26] <systemfault> howdoi: No, it's bad.
[03:09:35] <GreenDog> I couldn't decide between animals.reverse() and animals.pop(). I think I went with animals.pop() since he console.log also used pop()
[03:09:36] <howdoi> systemfault: hah hah
[03:09:46] <GreenDog> s/he/the
[03:10:11] <systemfault> howdoi: You're saying "target" can be window or HTMLElement, then to check you're calling getBoundingClientRect instead of checking for its presence on target
[03:10:28] <systemfault> calling getBoundingClientRect on window will just explode
[03:10:49] <systemfault> You just want to check if the function is present
[03:10:50] <howdoi> hence, I care less about types
[03:10:52] <GreenDog> Oh wait
[03:11:21] <howdoi> I know what GreenDog is thinking now :D
[03:11:34] <GreenDog> You do?
[03:11:37] <systemfault> howdoi: const isHTMLElement = (target: Window | HTMLElement): target is HTMLElement => 'getBoundingClientRect' in target
[03:11:43] <GreenDog> Not even I know what I'm thinking!
[03:12:22] <GreenDog> Anyway, I'm done. I'm gonna resign and become a high school lunchroom cook.
[03:12:27] *** Joins: k8yun (~k8yun@user/k8yun)
[03:12:33] <GreenDog> or maybe college dining hall cook
[03:12:42] <blueagain> You can also become a philosopher
[03:12:43] <GreenDog> Can I get free classes as a college dining hall cook?
[03:12:48] <howdoi> target.getBoundingClientRect?.call()
[03:13:14] <grapheti> You can review products on YouTube
[03:13:16] <systemfault> howdoi: The .call part doesn't make sense
[03:13:21] <grapheti> Then sell them on amazon.
[03:13:24] *** Quits: chandash (~chandash@ip-115-87.wireless.oberlin.edu) (Ping timeout: 240 seconds)
[03:13:25] <howdoi> > You can also become a philosopher
[03:13:25] <howdoi> My dream
[03:13:30] <GreenDog> I can unbox toys like Ryan!
[03:13:36] <GreenDog> But be an old man
[03:13:40] <GreenDog> Nothing weird about that
[03:13:43] <howdoi> Or a theoretical physicists
[03:14:01] <howdoi> systemfault: nods
[03:14:13] <systemfault> howdoi: target.getBoundingClientRect?.();
[03:14:22] <howdoi> ^ better
[03:14:40] <grapheti> Wait, the products are open - sell them on marketplace
[03:14:44] <howdoi> with AI picking up, philosophers will be in demand
[03:14:51] <GreenDog> The test is also somewhat poor in that each person gets a different test. If one person gets a bunch of hard questions and one person gets a bunch of easy questions, does it really provide accurate feedback?
[03:14:58] <grapheti> Then tweet, instagram, etc about it
[03:15:01] <grapheti> tikotk
[03:15:15] <grapheti> market it on all platforms
[03:15:24] <grapheti> That's your ticket out of this
[03:15:32] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[03:15:46] <grapheti> or children's books
[03:16:15] <blueagain> you can also become a crypto bro
[03:16:16] <grapheti> then you never have to deal with this language ever again
[03:16:22] <blueagain> just create an nft of your dog or smth
[03:16:32] <grapheti> :D
[03:16:57] <grapheti> pics of my dog on fansonly
[03:17:06] <grapheti> $5 each
[03:17:42] <grapheti> Fine. I'll end my rant. Ugh.
[03:18:14] <blueagain> GreenDog: probably not. but again, those tests are pretty stupid
[03:18:22] <systemfault> Yup...
[03:18:26] <grapheti> They are
[03:18:35] <grapheti> I think we all can agree with that
[03:18:38] <systemfault> I would have never tried one if you had no talked about it.. haha
[03:18:44] <systemfault> I hate linkedin
[03:18:49] <blueagain> ^
[03:18:59] <grapheti> They're as stupid as knowing the fourth word in the Declaration of Indepedence
[03:19:03] <grapheti> WTF is the point?!?
[03:20:34] <blueagain> at least the decalaration of independence had a point
[03:20:41] <blueagain> declaration*
[03:20:52] <blueagain> something about a king, I don't know anymore
[03:22:04] *** Joins: chandash (~chandash@ip-115-87.wireless.oberlin.edu)
[03:22:26] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[03:22:36] <grapheti> It's been tea bagged since then
[03:24:06] *** Quits: chandash (~chandash@ip-115-87.wireless.oberlin.edu) (Read error: Connection reset by peer)
[03:24:17] <grapheti> later gents!
[03:24:21] *** Quits: grapheti (~grapheti@dynamic42-98-142-74.dobsonteleco.com) (Remote host closed the connection)
[03:24:29] *** Joins: chandash (~chandash@ip-115-87.wireless.oberlin.edu)
[03:24:56] <blueagain> sheetjs: you use vue?
[03:25:02] <ThePendulum> huh interesting chrome has Error.isError
[03:25:17] <blueagain> I guess since many customers are from CJK it makes sense?
[03:26:18] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 252 seconds)
[03:27:30] <sheetjs> blueagain: 5 years ago we did the react equivalent
[03:27:57] <sheetjs> https://npm.im/gatsby-transformer-excel
[03:28:46] <suss> its Capitalized 'E' so seems nothing wrong
[03:29:54] <blueagain> sheetjs: oh, cool
[03:30:01] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[03:30:21] <sheetjs> @nuxt/content has a logical problem
[03:30:27] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[03:30:39] *** Quits: chandash (~chandash@ip-115-87.wireless.oberlin.edu) (Ping timeout: 260 seconds)
[03:31:09] <sheetjs> it reads data and interprets as UTF8 string before passing to a content handler.  the handler does not have access to the original binary data, so the demo works around it by re-reading the file
[03:31:24] *** Joins: chandash (~chandash@ip-115-87.wireless.oberlin.edu)
[03:31:38] <sheetjs> https://github.com/nuxt/content/blob/main/packages/content/lib/database.js#L233
[03:33:42] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[03:34:11] *** Joins: pizdets_ (~pizdets@183.182.111.160)
[03:34:51] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 260 seconds)
[03:34:57] *** Quits: pizdets (~pizdets@183.182.111.79) (Ping timeout: 256 seconds)
[03:37:44] *** Joins: Alex123 (~Adium@lib-07-subnet-138.rdns.cenic.net)
[03:38:54] *** Quits: arthur_melo (~IRC@user/arthur-melo/x-6822691) ()
[03:39:41] *** Quits: chandash (~chandash@ip-115-87.wireless.oberlin.edu) (Quit: WeeChat 3.4)
[03:40:37] *** Joins: Alex1231 (~Adium@lib-07-subnet-138.rdns.cenic.net)
[03:40:37] *** Quits: Alex123 (~Adium@lib-07-subnet-138.rdns.cenic.net) (Read error: Connection reset by peer)
[03:42:38] <average> I am writing javascript now
[03:42:48] <average> for a personal experiment
[03:42:53] <average> I haven't written code in 6 months now..
[03:42:54] *** Quits: remote (~self@user/hackers) (Ping timeout: 260 seconds)
[03:42:59] <average> it has been a while..
[03:45:41] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[03:46:39] <voltage_> write deez
[03:48:18] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[03:48:37] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[03:50:15] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 260 seconds)
[03:51:14] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:52:48] *** Quits: pmercado (~pmercado@186.107.58.34) (Ping timeout: 272 seconds)
[04:02:53] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.4.1)
[04:02:54] *** Joins: l__q (~modinfo@user/modinfo)
[04:03:51] <ProfSimm> Apparently VS Code's editor is also a separate project: Monado Editor
[04:03:54] <ProfSimm> Pretty nais
[04:04:31] *** Joins: colordrops (~erahhal@216.240.44.138)
[04:05:11] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[04:05:11] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[04:05:37] *** Joins: monoxane1 (~monoxane@user/monoxane)
[04:06:44] *** Quits: monoxane (~monoxane@user/monoxane) (Ping timeout: 272 seconds)
[04:06:45] *** monoxane1 is now known as monoxane
[04:09:05] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (Remote host closed the connection)
[04:09:24] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[04:09:53] *** Joins: cotko (~cotko@188-230-251-153.dynamic.t-2.net)
[04:10:01] <systemfault> Just wish themes would be shareable between the two
[04:10:23] <systemfault> But nope.... Monaco has its way, VSCode has a different one
[04:10:23] <average> I am still using vim, but VS Code is really nice
[04:10:29] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[04:11:05] <average> considering how complicated the stuff I'm writing is.. and how little I know about it, the IDE is the last problem I have
[04:11:12] *** Joins: kakashiA1 (~kakashi@105.156.9.83)
[04:13:43] *** Quits: biberu (~biberu@user/biberu) (Read error: Connection reset by peer)
[04:13:55] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (Client Quit)
[04:14:10] *** Joins: biberu (~biberu@user/biberu)
[04:14:21] *** Joins: cotko (~cotko@188-230-251-153.dynamic.t-2.net)
[04:17:45] *** Joins: ferdna (~ferdna@user/ferdna)
[04:18:46] <suss> does vs code has a local version in linux?
[04:19:10] <blueagain> `pacman -S code`
[04:20:02] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 272 seconds)
[04:20:03] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-0874-3206-ce5b-fa50.res6.spectrum.com) (Quit: Leaving)
[04:20:16] *** Joins: Guest6063 (~blahboyba@c-67-161-97-216.hsd1.wa.comcast.net)
[04:20:59] *** Quits: EgonX (~EgonX@c-73-115-70-244.hsd1.tx.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:21:13] <average> is it possible to do enums in javascript now? or do I just declare a lot of const ?
[04:21:42] *** Quits: Alex1231 (~Adium@lib-07-subnet-138.rdns.cenic.net) (Quit: Leaving.)
[04:22:45] *** Joins: EgonX (~EgonX@c-73-115-70-244.hsd1.tx.comcast.net)
[04:25:05] <systemfault> average: No enum in JS, you emulate then using a frozen object
[04:25:29] <systemfault> const MyEnum = Object.freeze({ FOO: 0, BAR: 1, BAZ: 2 })
[04:25:55] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-25e7-2817-2baa-33e2.res6.spectrum.com)
[04:26:31] *** Joins: dave0 (~dave0@069.d.003.ncl.iprimus.net.au)
[04:26:32] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[04:28:48] *** Joins: jazzy2 (~jaziz@user/jaziz)
[04:30:01] <average> systemfault: yup, I'll use that one then
[04:32:43] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[04:36:10] *** Joins: prawnsalad (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk)
[04:39:28] *** Joins: chandash (~chandash@ip-115-87.wireless.oberlin.edu)
[04:39:59] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:313d:2ab8:4ced:8c26) (Remote host closed the connection)
[04:40:44] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:313d:2ab8:4ced:8c26)
[04:43:27] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 260 seconds)
[04:44:03] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[04:44:06] <banana_> yo
[04:44:21] <banana_> event type firing order
[04:44:27] <banana_> help
[04:45:17] <systemfault> The order they're bound?
[04:45:35] *** Joins: mynickisregister (~mynickisr@2001:1af8:4700:b0e0:fa00::)
[04:45:46] <banana_> like precedence order in which each of multiple event types are propagated to the event handlers
[04:45:51] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:313d:2ab8:4ced:8c26) (Ping timeout: 268 seconds)
[04:46:25] <banana_> actually dumb questin maybe didnt think this out
[04:46:40] <banana_> basically there's this custom event that's triggered on keydown
[04:46:54] <banana_> bootstrap modal event. that's triggered from a keydown
[04:47:17] <banana_> I want to intercept that keydown listener
[04:47:30] <banana_> that bootstrap obviously binds
[04:49:03] <banana_> damn it. cant figure it out, i have a workaround for my issue but it bugs me my undeerstanding on this is limited
[04:49:05] <systemfault> Well, it's depends on a lot of things... is the event listener on the element itself or a parent, do you use capture or bubbling...
[04:49:18] <banana_> bubbling
[04:49:30] <theskillwithin> just e.preventDefault keydown, they might not be able to type but itll do the trick
[04:49:41] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[04:49:47] *** Joins: chenqisu1 (~chenqisu1@183.217.201.88)
[04:49:55] <banana_> i think bootstrap binds to a further down descendant than im binding to
[04:50:12] <banana_> of the keydown event type
[04:50:47] <banana_> theskillwithin: specifically with the escape key
[04:51:39] <banana_> i had to make my own bootstrap modal component that wraps the jquery plugin because my team didnt want to use a third party library for our framework
[04:53:01] <banana_> anyway gah. it's probably bootstrap is binding to a descendant further down the dom tree
[04:53:07] <theskillwithin> https://github.com/twbs/bootstrap/blob/main/js/src/modal.js
[04:53:46] <banana_> its an older version of bootstrap :/
[04:55:19] <banana_> i just need to use dev tools better
[04:55:30] <banana_> and be better at finding the element that's bound
[04:57:25] <banana_> anyway if it makes everyone feel better went running for a bit all I could think of is this problem
[04:57:44] <ProfSimm> Is there a way to kill a worker thread if it works for too long.
[04:58:13] <theskillwithin> or really coulda been stopPropagation instead of preventDefault, but prob won't work still
[04:58:39] <banana_> https://getbootstrap.com/docs/3.3/javascript/
[04:58:45] <banana_> dam
[04:59:01] <banana_> so if you use dev tools and inspect element and see. they're doing capturing event listeners
[04:59:11] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[05:00:07] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[05:01:00] *** Quits: dea_ (~dea@178.211.43.68) (Ping timeout: 240 seconds)
[05:01:43] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:02:49] *** Joins: dea_ (~dea@178.211.43.68)
[05:05:55] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 240 seconds)
[05:08:24] <banana_> https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#usecapture
[05:08:38] <banana_> "For event listeners attached to the event target, the event is in the target phase, rather than the capturing and bubbling phases. Event listeners in the capturing phase are called before event listeners in any non-capturing phases."
[05:09:13] <banana_> Can someone explain what they mean by phases here.
[05:12:52] <banana_> so apparently bootstrap uses event capturing for their listeners
[05:15:55] *** Joins: nomic (~nomic@185.217.117.249)
[05:18:17] *** Joins: fef (~thedawn@user/thedawn)
[05:19:15] *** Quits: EgonX (~EgonX@c-73-115-70-244.hsd1.tx.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:21:35] *** Joins: Lazenca (~lazenca@user/lazenca)
[05:22:06] *** Quits: Guest6063 (~blahboyba@c-67-161-97-216.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[05:22:17] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[05:22:41] <banana_> https://www.quirksmode.org/js/events_order.html has a good explanation on this
[05:23:09] <average> I write javascript only when I want to
[05:23:38] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[05:24:16] <systemfault> You really show javascript who's the mf'ing boss!
[05:24:32] <banana_> you mean jscript?
[05:24:33] <banana_> jk
[05:24:59] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 260 seconds)
[05:25:05] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 252 seconds)
[05:26:50] <ProfSimm> Is there a way to detect a debugging session is active in JS in a browser?
[05:27:06] *** Quits: BUSY (~BUSY@user/busy) (Remote host closed the connection)
[05:28:47] <banana_> open dev tools?
[05:28:48] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[05:28:48] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[05:28:48] *** Joins: wroathe (~wroathe@user/wroathe)
[05:29:45] *** Quits: kakashiA1 (~kakashi@105.156.9.83) (Quit: WeeChat 3.4.1)
[05:29:59] *** Joins: kakashiAL (~kakashi@105.156.9.83)
[05:31:25] <average> systemfault: yes I do
[05:31:55] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 240 seconds)
[05:32:21] *** Joins: BUSY (~BUSY@user/busy)
[05:33:23] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 256 seconds)
[05:33:37] *** Quits: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[05:33:40] <average> ProfSimm: I think there must be. I've noticed some shady online movies sites (artistic movies I should add, not the frivolous kind) would on purpose emit "debugger;" when I had the web console open and that would prohibit me from using the website altogether. In other words they didn't want me to reverse-engineer or snoop through the browser requests..
[05:35:12] <average> https://x-c3ll.github.io/posts/javascript-antidebugging/ ; https://www.usenix.org/system/files/sec21-musch.pdf
[05:35:37] <average> seems like anti-debugging tricks involve replacing some logger built-in methods or some timing techniques..
[05:36:39] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[05:37:58] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[05:38:12] *** Joins: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net)
[05:38:19] *** Joins: mud (~mud@user/kadoban)
[05:38:54] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[05:38:54] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:40:11] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[05:44:51] <average> sometimes I ask myself "why am I even writing js when I could be writing Ocaml or Rust"
[05:45:08] <sheetjs> you can write JS that vaguely looks like rust
[05:46:14] *** Joins: Guest225 (~blahboyba@c-67-161-97-175.hsd1.wa.comcast.net)
[05:48:36] *** Quits: colordrops (~erahhal@216.240.44.138) (Ping timeout: 240 seconds)
[05:50:13] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[05:50:52] <average> sheetjs: but what about all the benfits
[05:53:08] <average> what do people think of ReasonMl ?
[05:53:13] <blueagain> the main feud I have with type languages is that if they don't actually serve to help you interfacing with memory (c, c++, rust), they're useless (java, typescript)
[05:53:20] <blueagain> typed*
[05:53:37] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[05:53:55] <sheetjs> typescript is actually pretty good for catching object errors
[05:54:32] <sheetjs> but you have to go all-in to see the benefits
[05:56:49] <KevinX> today I learned that typescript doesn't run at runtime
[05:57:35] <blueagain> I just don't think typed languages add any pure value for people. sure, if they help work memory they're great, but the moment memory isn't a factor anymore, they're just a hindrance
[05:58:01] <sheetjs> blueagain: was mildly surprised that typescript could handle a deep getter like `M?.[1]?.[0]?.meta?.[1]?.[0].data`
[05:58:08] <KevinX> Useful to me on projects I won't touch very often
[05:58:29] <KevinX> or very complex objects like just mentioned
[05:58:32] <blueagain> sheetjs: oh, I see
[05:58:43] *** Joins: humanBird (~humanBird@2603-8001-7000-3642-89da-56d2-0bad-5a2d.res6.spectrum.com)
[05:59:23] <blueagain> KevinX: the point I have there is that projects with a high complexity will usually have potentially much graver issues than types. things like typescript gives you a false sense of security
[05:59:52] <blueagain> instead, reducing complexity and adding tests for good coverage will result in much better quality
[05:59:56] <sheetjs> again, you have to go all-in
[06:00:09] <sheetjs> types help with refactoring moreso than tests
[06:00:40] <blueagain> that's something an ide should be able to take care
[06:00:43] <blueagain> of
[06:00:51] *** Quits: ryoshu (~kamil@apn-46-169-211-81.dynamic.gprs.plus.pl) (Ping timeout: 252 seconds)
[06:02:36] <sheetjs> sure
[06:02:45] *** Joins: ryoshu (~kamil@apn-46-169-206-148.dynamic.gprs.plus.pl)
[06:02:52] <blueagain> in that sense, typescript and an ide are both tools
[06:03:01] <blueagain> and it's perfectly ok to use typescript as a tool like that
[06:03:23] <blueagain> but I prefer the clarity of sticking to JS
[06:05:03] <systemfault> There's no false sense of security, it's just a thing people who hate TS love to say.. A competent TS dev makes as many tests as the JS dev... and all devs should do their best to reduce complexity.
[06:05:10] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 272 seconds)
[06:05:46] <systemfault> It's fine to simply dislike static types and/or TS
[06:05:58] <systemfault> I don't like Python, it's fine
[06:06:00] <sickdyd> is it me or vscode is getting insanely slow with TS and fairly large projects?
[06:06:09] <systemfault> sickdyd: Yes, it's not you
[06:06:13] <blueagain> As said, I don't inherently dislike types, just if they don't serve any purpose related to using memory
[06:06:19] *** Joins: pmercado (~pmercado@186.107.58.34)
[06:06:29] <blueagain> I more see types for computers than for humans
[06:06:37] <systemfault> sickdyd: How slow it gets depends on what you do though...
[06:06:41] <sickdyd> it's a pain, it also hangs when using the "Organize Imports" feature
[06:07:14] <systemfault> I use eslint for that (with format on save enabled)
[06:07:30] <systemfault> (and prettier..)
[06:07:36] <sickdyd> systemfault: interesting, I'll look into it
[06:07:48] <sickdyd> we use prettier too
[06:09:39] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[06:12:42] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[06:13:40] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:313d:2ab8:4ced:8c26)
[06:17:15] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 260 seconds)
[06:17:23] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[06:18:28] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[06:20:05] *** Quits: frege (~frege@d205-250-152-220.bchsia.telus.net) (Ping timeout: 256 seconds)
[06:20:29] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Remote host closed the connection)
[06:20:39] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (Ping timeout: 256 seconds)
[06:25:09] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[06:26:53] <theskillwithin> I guess using types just insn't your type
[06:29:52] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 272 seconds)
[06:31:33] *** Joins: wyclif (~wyclif@user/wyclif)
[06:31:46] *** Quits: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com) (Ping timeout: 272 seconds)
[06:32:24] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[06:32:33] *** Quits: kakashiAL (~kakashi@105.156.9.83) (Ping timeout: 256 seconds)
[06:34:45] <average> pun intended
[06:34:56] *** Quits: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net) (Ping timeout: 272 seconds)
[06:35:09] <average> theskillwithin: js ppl should declare their MBTI so we can match types easier
[06:35:40] <theskillwithin> i think im INTJ
[06:38:00] <theskillwithin> https://psychologia.co/intj/
[06:38:15] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:313d:2ab8:4ced:8c26) (Ping timeout: 252 seconds)
[06:38:34] <theskillwithin> "one of the rarest personality types and, perhaps, the most misunderstood type of all."  =\
[06:41:40] <theskillwithin> its fun, but I don't think knowing my myers briggs has ever effected nor helped in anyway practical
[06:42:26] <KevinX> I've always said I'm INTP but who knows
[06:43:24] <systemfault> I'm INTP too
[06:44:13] *** Joins: kakashiAL (~kakashi@105.156.9.83)
[06:44:48] <systemfault> MBTI doesn't have a great reputation in general... OCEAN has been found to be better
[06:45:10] <systemfault> (Sometimes called "The big five personality traits")
[06:45:32] <ThePendulum> don't remember if I'm INTP or INTJ
[06:45:44] <ThePendulum> but yeah, I've heard it described as an advanced horoscope
[06:46:54] <systemfault> It's a bit of an exaggeration... I mean, the input is still your own... not floating rocks in the void of spaces.
[06:47:08] *** Joins: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com)
[06:47:13] *** Joins: frege (~frege@d205-250-152-220.bchsia.telus.net)
[06:48:08] *** Joins: dea__ (~dea@213.128.80.36)
[06:48:52] *** Quits: kakashiAL (~kakashi@105.156.9.83) (Ping timeout: 272 seconds)
[06:48:56] <systemfault> Ask a ton of personal questions to X people.... assuming they answered truthfully, those that answered similarly are probably more similar in behavior than those who answered the opposite...
[06:49:22] <systemfault> I don't personally believe there's anything remotely controversial about that...
[06:50:07] <systemfault> But, is it good? I don't know... but those in the field find OCEAN to be better.
[06:50:51] *** Quits: dea_ (~dea@178.211.43.68) (Ping timeout: 260 seconds)
[06:52:26] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[06:53:17] <theskillwithin> i don't think any rocks float in space, they are still effected by the same gravity
[06:54:07] *** Quits: Guest225 (~blahboyba@c-67-161-97-175.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[06:54:20] <theskillwithin> so ya i agree
[06:56:02] *** Joins: Everything (~Everythin@37.115.210.35)
[06:59:09] *** Joins: powftw (uid448161@id-448161.lymington.irccloud.com)
[06:59:51] *** Quits: muffin_storm (~muffin_st@user/muffin-storm/x-3740471) (Read error: Connection reset by peer)
[07:02:11] *** Quits: pizdets_ (~pizdets@183.182.111.160) (Ping timeout: 265 seconds)
[07:03:26] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 272 seconds)
[07:03:55] *** Joins: thojanssens (~thojansse@ppp-124-122-47-68.revip2.asianet.co.th)
[07:10:29] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[07:11:05] *** Quits: nomic (~nomic@185.217.117.249) (Quit: Leaving)
[07:11:25] *** Joins: nomic (~nomic@185.217.117.249)
[07:18:30] *** Quits: wand (~user@gateway/tor-sasl/wand) (Remote host closed the connection)
[07:18:48] *** Joins: wand (~user@gateway/tor-sasl/wand)
[07:21:39] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[07:26:46] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[07:27:22] *** Joins: colordrops (~erahhal@2603-8001-9600-7b60-0010-0100-0001-8d7d.res6.spectrum.com)
[07:30:57] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[07:32:03] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 256 seconds)
[07:32:17] *** Quits: dea__ (~dea@213.128.80.36) (Ping timeout: 240 seconds)
[07:32:37] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 256 seconds)
[07:36:47] *** Quits: guest (~guest@2804:14c:6583:6001:b19:38fe:b614:5cfc) (Remote host closed the connection)
[07:38:21] *** Joins: stenno (~stenno@user/stenno)
[07:38:57] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[07:39:29] <theskillwithin> https://youtu.be/riV_8g_Yruo
[07:39:29] <skillbot> YouTube Title: Network connectivity problems
[07:40:14] *** Joins: makoto2600 (~makoto260@94.86-180-91.adsl-dyn.isp.belgacom.be)
[07:41:34] *** Quits: makoto2600 (~makoto260@94.86-180-91.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[07:42:31] *** Quits: GreenDog (~greendog@cpe-76-176-54-209.san.res.rr.com) (Quit: Leaving...)
[07:43:09] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 252 seconds)
[07:43:39] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[07:46:06] <ox1eef> a lot of psychology is bullshit
[07:49:53] <dave0> in school they told me that if you push something, it will go in that direction forever until a different force acts on it... but is that true? if you are in outer space and push something will it go on forever? wouldn't it eventually slow down and stop?
[07:50:44] <KevinX> that's deep
[07:50:55] <ljharb> ox1eef: lol no it's not
[07:51:10] <ljharb> some of it is, like anything, but claiming "most of it" makes you sounds like a scientologist
[07:52:36] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[07:56:59] *** Quits: frege (~frege@d205-250-152-220.bchsia.telus.net) (Ping timeout: 256 seconds)
[07:58:21] <Maxdamantus> I suspect it's probably more true for psychology than most subjects.
[07:58:35] <Maxdamantus> My psycholinguistics professor basically implied that.
[07:58:46] <ox1eef> not a scientologist, and those personality categories are interesting - however, when people start introducing themselves with them, using them on social media, on dating profiles, and trying to assess possible matches according to them it has become a fallacy at that point
[07:59:11] *** Joins: Maxc4m (~Maxc4m@5.167.13.217)
[07:59:13] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[07:59:15] <systemfault> Nobody does that...
[07:59:24] <ox1eef> they do because ive seen it
[07:59:29] <systemfault> It's been mostly used as a tool by employers.
[07:59:45] *** Joins: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca)
[07:59:57] *** Parts: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca) ()
[08:00:38] <theskillwithin> welp ljharb Maxdamantus whats your myers brigs?
[08:01:00] <Maxdamantus> I've got INTP the three or four times I tried one of those things.
[08:01:43] <sheetjs> bundlephobia's exports analysis appears to be useless
[08:01:45] *** Joins: kakashiAL (~kakashi@105.156.9.83)
[08:01:45] *** Joins: grapheti (~grapheti@2600:8803:a80d:3e00:bcb2:8a44:c238:ec22)
[08:01:47] <ljharb> i think i'm either INTJ or ENFP depending on how i take it
[08:02:05] <grapheti> I'm an INTJ
[08:02:13] <theskillwithin> btw id rather go through physical pain than sit thru a session with a therapist/pychologist
[08:02:14] <ljharb> and i've taken the MBTI enough times that i can make the results say whatever i want, it's useless
[08:02:24] <grapheti> I agree with that
[08:02:28] <ljharb> theskillwithin: lol that, by itself, is the biggest reason you need to go to therapy
[08:02:32] <grapheti> It's like a lot of test
[08:02:34] <grapheti> useless
[08:02:36] <theskillwithin> grapheti same im INTJ
[08:02:52] <ljharb> grapheti: most tests aren't useless. they just might be testing the wrong things.
[08:03:00] <ljharb> grapheti: or rather, their results might be interpreted incorrectly.
[08:03:26] <systemfault> ljharb: You're expecting to answer truthfully in those tests... but sure, you can make them say what you want.
[08:03:31] <systemfault> *expected
[08:03:35] <grapheti> generalizations scheneralizations
[08:03:37] <grapheti> :D
[08:03:39] <Maxdamantus> The problem is that it's not clear what the truth is.
[08:03:42] <ljharb> ^
[08:03:50] <theskillwithin> ljharb idk maybe, but really not everyone needs therapy
[08:03:52] <ljharb> systemfault: also that there's often more than one truthful answer
[08:03:55] <Maxdamantus> It's basically just asking how you see yourself.
[08:03:57] <grapheti> Math is pretty clear
[08:03:59] <grapheti> :D
[08:04:01] <KevinX> there's bias
[08:04:02] <ljharb> theskillwithin: yes, every single human being does, without exception
[08:04:09] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[08:04:17] <KevinX> Especially when people hear some personality types are rare
[08:04:25] <Maxdamantus> It might as well say "do you think you're introverted? okay, first letter is 'I'"
[08:04:27] <KevinX> "I want to be rare too!"
[08:04:53] * dave0 puts KevinX on the grill for 2 minutes
[08:04:55] <theskillwithin> ljharb do therapists need therapy?
[08:04:57] <grapheti> Maybe that's why we like programming... we have a set of rules - our domain
[08:05:20] <dave0> grapheti: nah, i'm just a control freak :-)
[08:05:23] <grapheti> (I'm very tongue and cheek if you don't know me)
[08:05:25] <grapheti> :D
[08:05:30] <ljharb> theskillwithin: yes, and the vast majority of them go to it
[08:05:40] <grapheti> dave0: lol
[08:05:47] <ljharb> computers can eliminate all the jobs, and we'll still need therapists
[08:05:50] <KevinX> they know too much
[08:06:02] <grapheti> ljharb: biology will eliminate therapist
[08:06:02] <systemfault> Unless you're bullshitting, you should have more or less the same result all the time... except if you really in the middle for some letters, then it's possible you'll get J in one test.. and P in another.
[08:06:16] <ljharb> grapheti: lol
[08:06:19] <grapheti> :D
[08:06:22] <ox1eef> i would love to see trump's result
[08:06:24] <systemfault> But again...MBTI is not recommended by psychologists.
[08:06:31] <ljharb> not anymore, at least
[08:06:32] <ox1eef> you can be sure it wouldnt be honest
[08:06:37] *** Quits: kakashiAL (~kakashi@105.156.9.83) (Ping timeout: 256 seconds)
[08:06:39] <theskillwithin> ljharb i disagree, i think for majority of people therapy is a glorified life coach
[08:06:43] <ljharb> ox1eef: indeed, these kinds of tests don't work on pathological liars
[08:06:49] <ljharb> theskillwithin: you can certainly use it that way
[08:07:03] <ljharb> theskillwithin: but maybe a life coach is just an underglorified therapist? have you actually met one and worked with one
[08:07:12] <grapheti> Math is the closest thing to the truth we have
[08:07:12] <KevinX> i lie to myself all the time, or at least I assume I do
[08:07:16] <Maxdamantus> Why can't we just use ELIZA?
[08:07:17] <grapheti> use it wisely guise
[08:07:45] <Maxdamantus> https://upload.wikimedia.org/wikipedia/commons/7/79/ELIZA_conversation.png
[08:07:48] <theskillwithin> ljharb I do agree however with normalizing it and such,  to encourage people who actually need it to do it
[08:08:03] <KevinX> Every thought I have comes with so much bias that if I think it's an important thought, i question it heavily
[08:08:09] <ljharb> theskillwithin: right. but everybody actually needs it.
[08:08:30] <ljharb> theskillwithin: and someone who would rather endure *physical pain* - the thing we evolved millions of years to hate the most - than to talk to someone for an hour probably isn't in a position to be disagreeing
[08:08:43] <grapheti> WHY do they need it?
[08:09:19] <ljharb> the cause? no idea. maybe because entropy is constantly disordering our mental order
[08:09:21] <grapheti> socioeconomically stress?
[08:09:27] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[08:09:30] <KevinX> its like a PC that needs a good defrag
[08:09:36] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[08:09:47] <ljharb> i'm sure that capitalism causes a lot of stress for people, sure. but i doubt we'd be free of mental issues even if we surpassed capitalism
[08:09:47] <grapheti> Life sucks and we tend to blackhole the negative?
[08:09:52] <ox1eef> there's cases where they simply fall short - schizophrenia is the best example. all the treatments, the medicine is based on theories that dont add up, and the meds were discovered by accident. so i think there's a huge chance for them to do active harm, out of ignorance.
[08:10:07] <ljharb> ox1eef: oh sure. i said everyone needs therapy, not that therapy cures everyone :-)
[08:10:16] <systemfault> Let's just create a new religion based on JavaScript
[08:10:24] <dave0> ox1eef: yep anti-psychotics have annoying side effects
[08:10:32] <Maxdamantus> Advertising causes therapy.
[08:10:35] <ljharb> sin, and i will defenestrate you with this carbon fiber semicolon
[08:10:43] <grapheti> Dust off the ol' https://www.amazon.com/Subtle-Art-Not-Giving-Counterintuitive/dp/0062457713
[08:10:53] <Maxdamantus> (according to one song I know)
[08:11:30] <grapheti> Next on JavaScript After Hours
[08:13:08] <grapheti> Need a companion? https://www.amazon.com/Attached-Science-Adult-Attachment-YouFind/dp/1585429139
[08:13:19] <grapheti> Before the singularity...
[08:13:22] <grapheti> :D
[08:13:27] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 260 seconds)
[08:14:37] <grapheti> Need to be a parent before an app takes over? - https://www.amazon.com/How-Talk-Kids-Will-Listen/dp/1451663889
[08:15:05] *** Quits: prawnsalad (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:15:14] <theskillwithin> thats 3 self help books in a row, i think hitting capacity here
[08:15:47] <grapheti> Information overload
[08:15:48] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[08:16:47] <grapheti> Need ideas on how to design terrible pots? - https://www.amazon.com/Design-Everyday-Things-Revised-Expanded/dp/0465050654
[08:16:53] <grapheti> okay, I'll stop
[08:17:37] *** Quits: pmercado (~pmercado@186.107.58.34) (Ping timeout: 240 seconds)
[08:17:40] <theskillwithin> at some point there will be an echart tolle book prob
[08:19:48] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[08:20:45] *** Joins: wroathe (~wroathe@user/wroathe)
[08:21:53] <grapheti> systemfault: preach eval() is evil
[08:22:11] <theskillwithin> sign me up
[08:22:15] <grapheti> slap the rhino book and REPENT!
[08:22:55] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[08:23:24] <theskillwithin> today some missionaries knocked on my door, like wtf who let them into the building, not ok
[08:24:13] <grapheti> yeah, that's bad building security
[08:24:16] <systemfault> I don't mind mormons... It's the Jehovas I don't like
[08:24:24] *** Quits: Donitz (~Donitz4@88-115-149-215.elisa-laajakaista.fi) (Quit: Leaving)
[08:24:31] <systemfault> That said, not many mormons where I live...
[08:24:49] <grapheti> I like mormons because of the broadway show - they showed me the light
[08:25:50] <systemfault> I just don't like the idea of parents letting their kids die because "blood transfusions are against their faith"
[08:25:59] <theskillwithin> before that about 6 months ago someone let some internet provider into the buliding, and they were annoying as fuck. literally my alarm was going off cuz what i was cooking in my oven was done, but i had to try to end the convo like 3 times before just shutting the door
[08:26:26] <theskillwithin> MY FOOD IS BURNING, BYE
[08:26:52] <grapheti> pity
[08:27:17] <theskillwithin> or no, it was a cell provider trying to sell internet, that was prob worse than comcast
[08:28:44] <grapheti> First hit's free man
[08:28:46] *** Joins: average_ (uid473595@id-473595.hampstead.irccloud.com)
[08:29:27] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[08:32:23] *** Quits: Maxc4m (~Maxc4m@5.167.13.217) (Quit: Quit)
[08:33:14] <average> Shia LaBoeuf said "Don't let your dreams be dreams"
[08:33:37] <theskillwithin> about 2 years ago my mom gave my address to the mormon church, and they sent 2 girls knocking on my door.  i answer confused.  hi we are hoping to take you out.  huh? then i started hearing some mormon lingo, and i literally just had to slowly close the door on them
[08:34:13] <average> I think we as javascript code writers, need to embrace this quote(possibly even tatoo it on our buttocks) and we need to improve our javascript code so we can stand tall and wave the flag of javascript while all our women look at us with pride
[08:34:18] *** Quits: kristijonas (~kristijon@cl-78-158-23-234.fastlink.lt) (Ping timeout: 252 seconds)
[08:34:23] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[08:34:43] <average> flag.wave();
[08:34:43] <grapheti> I have a dream!
[08:34:54] <average> grapheti: don't let your dream be a dream
[08:35:05] <grapheti> I will not be blocked by one thread!
[08:35:08] <systemfault> I really take it seriously when rich people tell me what I should do.</s>
[08:35:24] <grapheti> But I'll have the freedom of multiple threads
[08:35:43] <theskillwithin> I would love to date a women who knows js, but there isn't an app for that
[08:36:08] <grapheti> Be the change. Make it!
[08:36:09] <average> theskillwithin: sorry, all js women are married
[08:37:16] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[08:37:40] <average> grapheti: do you believe we can change the world together using javascript and html ?
[08:37:50] <average> grapheti: i think we can do it if we try really hard
[08:38:09] <systemfault> LaBeouf looks like very badly written french.
[08:38:26] <grapheti> average: no
[08:38:31] <grapheti> I think that's the wrong direction
[08:39:01] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:313d:2ab8:4ced:8c26)
[08:39:03] <theskillwithin> people who try to change the world are often wrong, the ego in thinking you know whats right for others
[08:39:30] <theskillwithin> its better to change yourself, be the change you want to see in the world
[08:39:44] <average> theskillwithin: but look at Facebook, they knew what was right for billions of people, and they strive to bring justice and ethics and morals to every single citizen of the world
[08:39:49] <grapheti> That's it. Michael Jackson Man in the Mirror
[08:40:31] <EdFletcher> is it opposite day in here?
[08:40:53] <average> theskillwithin: Facebook was built using javascript (and animal behavior specialists, aka psychologists)
[08:41:05] <grapheti> it's double opposite day
[08:41:55] <theskillwithin> if its opposite day, you can't say its opposite day, you have to say its normal day
[08:41:56] <ljharb> lol wth are you talking about
[08:42:12] <ljharb> not you theskillwithin, sorry
[08:42:14] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 272 seconds)
[08:42:16] <ljharb> i'm so confused at this conversation
[08:42:20] <average> ljharb: we're trying to change the world using javascript and html
[08:42:43] <ljharb> that's been done many many times, what's your point
[08:42:46] <EdFletcher> crap theskillwithin is right. i broke the first rule of normal day.
[08:42:55] <average> ljharb: obviously it's not been done enough..
[08:43:05] <ljharb> average: of course it has. many times.
[08:43:22] <EdFletcher> average: you can't honestly be serious about Facebook right? "justice and ethics"?!?!
[08:43:31] <average> ljharb: as an intermediate speaker of french, let me say: encore une fois !
[08:43:35] <grapheti> Just look at all the wonderful frameworks there are
[08:44:12] <grapheti> svelte, next, the other stuff
[08:44:17] <systemfault> average: That's a Daft Punk song!
[08:44:27] <average> lol yeah !
[08:45:21] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[08:46:51] <dave0> je t'aime
[08:47:17] <systemfault> Moi aussi mon cher programmeur JavaScript.
[08:47:24] <systemfault> Un bisou sur la joue?
[08:47:28] <grapheti> chic le freak
[08:47:37] <KevinX> Is Truth Social built with JS?
[08:47:49] <grapheti> Le freak, c'est chic
[08:47:49] <systemfault> There has to be JS somewhere...
[08:48:20] <systemfault> IIRC, that Truth Social website is using some AGPL, already made thing...
[08:48:50] <systemfault> Was reading an article about it 3-4 months ago on HN
[08:49:42] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 252 seconds)
[08:50:06] <theskillwithin> je ne saise quo
[08:50:40] *** Joins: kakashiAL (~kakashi@105.156.9.83)
[08:50:41] <systemfault> "Je ne sais quoi"
[08:50:49] <systemfault> (I don't know what...)
[08:51:34] <KevinX> My joke was that Truth Social was changing the world :P
[08:51:41] <average> Macron was caught writing javascript at his desk, on paper..
[08:53:47] <theskillwithin> systemfault I love that french saying, cuz its used in english at least to reference an undescribably quality in a positive sense
[08:53:50] <average> KevinX: Trump will be running again in 2024..
[08:54:09] <theskillwithin> ugh i can't spell things in english either =]
[08:54:23] <systemfault> The French have a candidate right know that makes Trump look like Bernie Sanders.
[08:54:23] <average> javascript will save the United States through Truth Social
[08:54:25] <KevinX> either way he wil be taking donations for it
[08:54:38] <systemfault> *right now
[08:55:21] *** Quits: kakashiAL (~kakashi@105.156.9.83) (Ping timeout: 256 seconds)
[08:55:42] <average> KevinX: I'm sure he will direct some of it to Mastodon..
[08:55:52] <theskillwithin> systemfault i also like how you say butter,  its like buuh
[08:56:15] <average> KevinX: Trump has always been a fair man, he always kept his promises, even to Stormy Daniels
[08:56:31] <theskillwithin> and how they pronounce onion is cool as well
[08:57:19] *** Quits: chenqisu1 (~chenqisu1@183.217.201.88) (Ping timeout: 260 seconds)
[08:57:37] <average> ogniooh
[08:57:41] <theskillwithin> yess
[08:59:44] <syco> nope, thts belgian/carolo accent
[09:00:07] <syco> in french you pronounce the final "n"
[09:00:22] <systemfault> We also do in Canada.
[09:01:06] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[09:01:10] <systemfault> Tons of stupid mute letters in french...
[09:01:33] <syco> well, depends on the regions ..
[09:01:37] <average> systemfault: Canada needs to build a trans-atlantic highway and railway to France, so people can travel freely between the two
[09:02:51] <average> systemfault: if done correctly, this could save many millions of dollars by only spending a few billions
[09:02:58] <systemfault> :p
[09:03:07] <systemfault> Sounds like a good plan!
[09:03:23] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Read error: Connection reset by peer)
[09:03:45] <theskillwithin> thats pretty much the cost analysis of all the plans politicians sign off on it seems
[09:04:36] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:06:18] <average> we need to rewrite all the COBOL core banking systems in javascript, and then have it running on raspberry pis
[09:06:41] <EdFletcher> i just found this and am confused: https://www.npmjs.com/package/async-lock "However, if you have any async code inside your critical section (it can be simply triggered by any I/O operation, or timer), your critical logic will across multiple event loops, therefore it's not concurrency safe!" -- is this true?
[09:07:29] <EdFletcher> i thought run-to-completion ensured that locks were never needed? https://developer.mozilla.org/en-US/docs/Web/JavaScript/EventLoop#run-to-completion
[09:07:46] <EdFletcher> (i've never seen locks used in javascript before, this is weirding me out)
[09:08:34] <sheetjs> EdFletcher: key word is "async"
[09:09:01] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:313d:2ab8:4ced:8c26) (Ping timeout: 240 seconds)
[09:09:18] <sheetjs> n> setTimeout(() => console.log("async"), 0); console.log("sync");
[09:09:19] <jellobot> (okay) sync undefinedasync
[09:09:28] <EdFletcher> even then though, i understood run-to-completion as ensure no data race because no function can be preempted
[09:09:47] <sheetjs> consider the setTimeout example
[09:09:51] <EdFletcher> yes the ordering of function results is nondeterminstic
[09:10:01] <EdFletcher> so if data consistency depends on ordering then i guess i get it
[09:10:09] <sheetjs> look at the example
[09:10:33] <EdFletcher> i don't understand how it's demonstrating a race?
[09:10:42] <theskillwithin> sheetjs setTimeout of 0, what is that some sort of trick on the call stack?
[09:10:44] <sheetjs> its the same reason atomic intrinsics are used in C
[09:11:03] <EdFletcher> theskillwithin: it's the same as setImmediate IIRC
[09:11:33] <sheetjs> theskillwithin: it won't be evaluated immediately
[09:11:55] <EdFletcher> right so that's just demonstrating the ordering inconsistency, that i get
[09:11:58] <sheetjs> n> setTimeout(() => console.log("async"),0); while(1);
[09:12:04] <jellobot> (timeout)
[09:12:11] <sheetjs> n> console.log("async"); while(1);
[09:12:16] <jellobot> (timeout) async
[09:12:20] <EdFletcher> but i'm right about functions themselves not being pre-emptible because of run-to-completion, right?
[09:12:42] *** Joins: adroitmachine (~adroitmac@182.64.104.84)
[09:12:45] <sheetjs> pure JS functions that do not use any potentially async operations
[09:13:19] <sheetjs> for example, the read / write functions in sheetjs do not sleep or use any async operations since it's pure string and byte manipulation
[09:13:32] <sheetjs> those will lock up your browser if not run in a web worker
[09:14:21] <EdFletcher> yup of course i meant non-async functions re: pre-emptibility, should've specified
[09:15:48] <sheetjs> so the examples they gave involved operations outside of the core event loop
[09:15:49] <average> EdFletcher: why don't you just use some job/task queue..
[09:16:14] <average> EdFletcher: in other words, delegate/defer these things to a specialized thing
[09:16:15] <EdFletcher> this isn't for me, someone in another channel asked about that npm package and i was curious
[09:16:25] <sheetjs> even callbacks can be synchronous
[09:16:31] <average> EdFletcher: oh, you are asking for a friend
[09:16:33] <EdFletcher> i follow the no-locks/shared-nothing philosophy zealously, i don't even use locks in C++
[09:16:49] <sheetjs> think about forEach over an array -- that uses a callback but is synchronous
[09:16:53] <EdFletcher> average: no, i'm genuinely just curious and i know there are language experts here who can answer my query
[09:16:57] <average> lock-free they say is the best..
[09:16:59] <EdFletcher> https://nolocks.org/
[09:17:51] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 260 seconds)
[09:18:26] *** Joins: han-solo (~han-solo@user/han-solo)
[09:18:37] <EdFletcher> sheetjs: yeah exactly, so in that forEach example, there is absolutely no chance of race or pre-emption, hence no critical section
[09:18:46] <EdFletcher> thanks a lot for the feedback, appreciate it a bunch
[09:19:52] <sheetjs> actually this came up recently EdFletcher
[09:20:03] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[09:20:11] <sheetjs> https://github.com/nodejs/node/issues/42407
[09:21:56] <EdFletcher> sheetjs: woah, this data race related?
[09:22:08] *** Quits: adroitmachine (~adroitmac@182.64.104.84) (Ping timeout: 252 seconds)
[09:22:21] <sheetjs> the issue here is that an allocation failed but the error wasn't properly pushed to the REPL
[09:22:21] *** Quits: pulse (~pulse@user/pulse) (Quit: { https://indiedevs.net/ })
[09:22:46] <sheetjs> so when the inspector tried to autocomplete, it tried to access something that ... wasn't available
[09:22:52] <EdFletcher> holy moly
[09:23:06] <sheetjs> software is hard
[09:23:10] *** Joins: kakashiAL (~kakashi@105.156.9.83)
[09:24:54] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[09:27:24] *** Quits: kakashiAL (~kakashi@105.156.9.83) (Ping timeout: 240 seconds)
[09:27:39] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[09:28:29] *** Joins: wyclif (~wyclif@user/wyclif)
[09:28:46] <average> was it ever easy..
[09:30:12] <sheetjs> a large class of problems have easier solutions compared to 10 years ago
[09:30:45] <EdFletcher> true on both sides. the hard things get easier, the really hard things become doable.
[09:30:59] <EdFletcher> https://jvns.ca/blog/2022/02/20/things-that-used-to-be-hard-and-are-now-easy/
[09:32:45] <sheetjs> very excited about this numbers export
[09:33:13] <EdFletcher> sheetjs: nice, you added Numbers export?!
[09:33:57] <sheetjs> https://jsfiddle.net/pc1xnkqh/
[09:34:38] <sheetjs> unfortunately apple never published any sort of specs
[09:34:55] <sheetjs> but there are lots of cool tools for tinkering with files
[09:35:38] <sheetjs> wrote some stuff to do hex editing within a zip file
[09:37:34] <sheetjs> there's definitely a long way to go to supporting multiple tables in a file
[09:39:56] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 245 seconds)
[09:41:18] *** Quits: average (~average@user/average) (Ping timeout: 260 seconds)
[09:52:49] <EdFletcher> still, very cool! nice work
[09:53:07] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[09:55:04] *** Quits: humanBird (~humanBird@2603-8001-7000-3642-89da-56d2-0bad-5a2d.res6.spectrum.com) (Quit: Client closed)
[09:57:16] *** Joins: ferdna (~ferdna@user/ferdna)
[09:58:14] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[10:01:08] *** Quits: nomic (~nomic@185.217.117.249) (Quit: Leaving)
[10:04:29] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 256 seconds)
[10:05:35] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[10:13:24] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[10:16:39] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 260 seconds)
[10:17:52] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 272 seconds)
[10:18:36] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[10:19:41] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[10:19:48] *** Quits: thojanssens (~thojansse@ppp-124-122-47-68.revip2.asianet.co.th) (Quit: Leaving)
[10:19:54] *** Quits: colordrops (~erahhal@2603-8001-9600-7b60-0010-0100-0001-8d7d.res6.spectrum.com) (Ping timeout: 252 seconds)
[10:24:08] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[10:26:40] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:31:17] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[10:33:07] *** Quits: Lazenca (~lazenca@user/lazenca) (Remote host closed the connection)
[10:38:25] *** Quits: average_ (uid473595@id-473595.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[10:38:57] *** Quits: powftw (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[10:41:41] <grapheti> I'm trying to filter out the property Citation from this data set. Any help is appreciated! - https://jsfiddle.net/graphettion/ev4gqa5L/32/
[10:42:12] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 240 seconds)
[10:45:40] <Maxdamantus> grapheti: categories.flatMap(({ Items }) => items.map(({ Citation }) => ({ Citation })))
[10:46:56] <theskillwithin> Maxdamantus thats filtering it in, not out?
[10:47:39] <grapheti> Doesn't seem to work unless I'm logging it wrong - https://jsfiddle.net/graphettion/ev4gqa5L/36/
[10:47:44] <Maxdamantus> It should match the "desired output", dunno what filtering in/out means.
[10:47:51] <Maxdamantus> though I accidentally wrote `items` instead of `Items`.
[10:48:12] <grapheti> oh, yup that works
[10:48:44] <theskillwithin> Maxdamantus oh ya, i failed to read the desired output
[10:50:11] <Maxdamantus> I guess this is actually a cleaner way of writing it: categories.flatMap(({ Items }) => Items).map(({ Citation }) => ({ Citation }))
[10:55:21] *** Joins: stenno (~stenno@user/stenno)
[10:55:30] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[10:56:23] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Client Quit)
[11:01:40] <grapheti> Now I just need to merge the dataset with this one - https://jsfiddle.net/graphettion/ev4gqa5L/48/
[11:03:13] *** Joins: kristijonas (~kristijon@cl-78-158-23-234.fastlink.lt)
[11:03:17] *** Quits: alystair (~alystair@user/alystair) (Ping timeout: 240 seconds)
[11:04:19] <grapheti> I guess I just needed an array of values then push that to it
[11:05:53] *** Joins: kakashiAL (~kakashi@105.156.9.83)
[11:07:28] *** Quits: chandash (~chandash@ip-115-87.wireless.oberlin.edu) (Quit: WeeChat 3.4)
[11:10:39] *** Quits: kakashiAL (~kakashi@105.156.9.83) (Ping timeout: 268 seconds)
[11:10:56] *** Joins: audio (~audio@user/audio)
[11:18:12] *** Joins: chenqisu1 (~chenqisu1@183.217.201.88)
[11:22:37] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 240 seconds)
[11:30:48] <grapheti> got it, just wish the property Citation was lowercase - https://jsfiddle.net/graphettion/ev4gqa5L/65/
[11:35:24] *** Joins: pizdets (~pizdets@183.182.111.82)
[11:37:40] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:40:37] *** Joins: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be)
[11:42:19] *** Joins: vysn (~vysn@user/vysn)
[11:42:29] *** Joins: kakashiAL (~kakashi@105.156.9.83)
[11:42:31] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[11:43:10] *** paule32_ is now known as paule32
[11:46:15] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 252 seconds)
[11:49:24] *** Quits: Everything (~Everythin@37.115.210.35) (Ping timeout: 240 seconds)
[11:49:32] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 252 seconds)
[11:50:22] *** Joins: Lindrian (~Lindrian@about/regex/lindrian)
[11:50:26] *** Joins: Everything (~Everythin@37.115.210.35)
[11:50:56] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[11:54:18] *** Joins: maret (~maret@195.12.158.102)
[11:54:46] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:57:57] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[11:58:33] *** Quits: grapheti (~grapheti@2600:8803:a80d:3e00:bcb2:8a44:c238:ec22) (Remote host closed the connection)
[11:59:50] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[12:00:17] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[12:01:26] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[12:03:50] <friend> let arr=oldarr.splice(0,0,"test") should put "test" in the first position followed by the values in oldarr, right?
[12:11:51] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[12:12:39] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[12:17:07] *** Joins: stenno (~stenno@user/stenno)
[12:18:20] *** Joins: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[12:24:37] *** Joins: gproto23 (~gproto23@user/gproto23)
[12:27:55] *** Joins: mattil (~mattil@helsinki.portalify.com)
[12:32:19] *** Joins: prawnsalad (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk)
[12:34:06] *** Joins: rendar (~rendar@user/rendar)
[12:36:12] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[12:37:48] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[12:38:20] *** Quits: wyclif (~wyclif@user/wyclif) (Quit: leaving)
[12:39:11] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[12:40:42] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[12:42:51] <farn> friend: splice changes the array you call it on and returns only the elements that were removed from that array. what you want can be done using the spread syntax among other things: let arr = ["test", ...oldarr]
[12:43:06] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[12:43:54] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[12:43:56] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[12:44:22] *** Quits: Batman__ (~OhTheCode@59-102-101-124.tpgi.com.au) (Read error: Connection reset by peer)
[12:44:47] *** Joins: Batman__ (~OhTheCode@59-102-101-124.tpgi.com.au)
[12:45:21] <friend> brilliant, thanks a lot. If I want to insert a value in the middle of an array, will splice work? oldarry.split(3,0,"something") so that it insiders something at 3?
[12:45:44] <friend> *splice, not split
[12:48:49] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[12:51:01] *** Joins: hans (uid529825@id-529825.helmsley.irccloud.com)
[12:52:05] <Maxdamantus> friend: yes.
[12:58:12] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 240 seconds)
[12:59:39] *** Joins: VoidSync (~sync@user/voidsync)
[13:01:51] *** Quits: kakashiAL (~kakashi@105.156.9.83) (Ping timeout: 260 seconds)
[13:03:36] *** Quits: matthewcroughan (~quassel@static.211.38.12.49.clients.your-server.de) (Remote host closed the connection)
[13:03:56] *** Joins: matthewcroughan (~quassel@static.211.38.12.49.clients.your-server.de)
[13:04:13] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[13:06:32] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:313d:2ab8:4ced:8c26)
[13:14:27] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 260 seconds)
[13:16:42] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:16:54] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[13:19:50] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Quit: leaving)
[13:21:19] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[13:22:10] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[13:23:57] *** Joins: cotko (~cotko@188-230-251-153.dynamic.t-2.net)
[13:25:06] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-5d6aa3-110.dhcp.inet.fi)
[13:25:20] *** Quits: plitter (~plitter@user/plitter) (Ping timeout: 272 seconds)
[13:27:20] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[13:27:23] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Client Quit)
[13:27:27] *** Joins: sickdyd_ (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[13:27:35] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[13:27:59] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Client Quit)
[13:28:08] *** Quits: sickdyd_ (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Client Quit)
[13:28:18] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[13:30:56] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[13:34:44] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:34:59] *** Joins: fr4nkiee (~Fr4nk@89.108.142.216)
[13:39:00] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[13:39:09] *** Joins: keypusher (~keypusher@user/keypusher)
[13:40:06] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:313d:2ab8:4ced:8c26) (Ping timeout: 252 seconds)
[13:44:19] *** Quits: keypusher (~keypusher@user/keypusher) (Ping timeout: 260 seconds)
[13:49:52] *** Joins: gulzar (~gulzar@49.206.240.149)
[13:56:22] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-5d6aa3-110.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:56:46] *** Quits: g00fy782 (~g00fy@user/g00fy) (Quit: The Lounge - https://thelounge.chat)
[13:56:55] *** Joins: shuck (~shuck@user/shuck)
[13:57:12] *** Joins: g00fy782 (~g00fy@user/g00fy)
[13:57:21] *** Quits: Flannel (~flannel@cpe-76-175-193-181.socal.res.rr.com) (Read error: Connection reset by peer)
[14:01:13] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[14:02:56] *** Joins: Flannel (~flannel@cpe-76-175-193-181.socal.res.rr.com)
[14:08:22] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[14:09:52] *** Joins: llorllale (~llorllale@198.98.119.85)
[14:10:30] <last1> I am trying to parse an html document from string using this line: myText = new DOMParser().parseFromString(e.clipboardData.getData('text').toString(),"text/html");
[14:10:50] <last1> I do have a proper document object but it's lacking the stylesheets
[14:11:32] <last1> myText.styleSheets reports: length 0 despite the original string have <style>  data
[14:11:35] <last1> what am I doing wrong ?
[14:13:01] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[14:19:26] <audio> any vue.js devs in here?
[14:20:02] <audio> last1, are you open to using jquery?
[14:20:14] <audio> if so, i can help
[14:21:13] *** Quits: shuck (~shuck@user/shuck) (Ping timeout: 250 seconds)
[14:21:14] <audio> last1, without it though, you need to check, maybe in the console, to see if `e.clipboardData.getData('text').toString()` actually has data in it
[14:21:41] <last1> yeah it does
[14:21:43] <audio> my guess is that it doesn't, or parseFromString has some quirky error about it
[14:21:50] *** Joins: shuck (~shuck@user/shuck)
[14:21:54] <audio> last1, show the code for how you tested
[14:22:03] <last1> sure, one second
[14:23:17] <audio> and you might try pasting the raw string in `myText = new DOMParse().parseFromString('<raw string>'), "text/html"); just to check out its behavior
[14:23:31] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:23:46] <Cork> n> new DOMParser()
[14:23:47] <jellobot> (fail) ReferenceError: DOMParser is not defined
[14:24:32] <last1> https://jsfiddle.net/#&togetherjs=ytEvdPCsv2
[14:24:55] <last1> and I am pasting this data: https://pastebin.com/YpgcyU5V
[14:25:01] <last1> just a regular html
[14:26:09] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[14:26:46] <last1> jsfiddle seems quite slow for sharing, do you recommend another js paste site ?
[14:27:05] <Cork> last1: ok if i put the data in a jsfiddle?
[14:27:17] <last1> cork: of course
[14:28:29] <Cork> last1: https://jsfiddle.net/gev82fcq/
[14:28:38] <Cork> so, wfm
[14:30:26] <last1> yeah, that's what I'm saying - why is it empty ?
[14:30:34] <Cork> it isn't
[14:31:00] <Cork> length: 7
[14:31:12] <last1> hmm, I see this in Chrome on your page: "<a class='gotoLine' href='#124:30'>124:30</a> Uncaught TypeError: Cannot read properties of undefined (reading 'rules')"
[14:31:28] <Cork> ah, so a chrome thing...
[14:31:31] * Cork tries
[14:32:08] <last1> yep, works in FF
[14:32:15] <Cork> interesting
[14:32:53] <last1> chrome/edge = no go
[14:33:02] <Cork> i wonder...
[14:34:37] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-5d6aa3-110.dhcp.inet.fi)
[14:36:33] <Cork> ah, seams like chrome parses it as a fragment
[14:37:54] <last1> I'm not sure what that means :P
[14:38:19] <Cork> i means it wraps the input string in a <body> and parses it as content for the page
[14:38:57] *** Quits: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com) (Ping timeout: 240 seconds)
[14:39:19] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[14:40:25] <last1> hmm, is that normal ? can I get around it somehow ?
[14:40:44] <Cork> i just found it out so not sure
[14:43:28] *** Quits: chenqisu1 (~chenqisu1@183.217.201.88) (Quit: Leaving)
[14:45:10] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[14:47:30] <last1> alright
[14:48:44] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[14:49:11] *** Joins: plitter (~plitter@192.108.100.200)
[14:49:12] *** Quits: plitter (~plitter@192.108.100.200) (Changing host)
[14:49:12] *** Joins: plitter (~plitter@user/plitter)
[14:56:46] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[14:57:04] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[14:59:58] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[15:00:46] *** Quits: hans (uid529825@id-529825.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[15:01:11] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[15:01:15] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[15:01:20] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[15:02:11] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:02:52] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 272 seconds)
[15:03:42] <Cork> last1: sucky as hell, but looks like chrome doesn't parse the stylesheets until it renders the document
[15:04:53] <last1> but I don't want to render the document
[15:05:20] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 252 seconds)
[15:06:05] <last1> I just want to extract some css data from an html input
[15:07:05] *** Quits: VoidSync (~sync@user/voidsync) (Remote host closed the connection)
[15:07:23] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[15:09:27] *** Joins: nomic (~nomic@185.217.117.249)
[15:11:03] <Cork> last1: you could give https://github.com/jsdom/jsdom a try, it might work :shrugs:
[15:11:36] *** Joins: keypusher (keypusher@user/keypusher)
[15:11:40] <last1> if I could use NodeJS I'd use Juice
[15:11:50] <last1> it does exactly what I need but I wanted a pure JS solution
[15:12:02] <Cork> you don't need node, you will have to browserify it though
[15:12:40] <last1> yeah, I can browserify juice too :P didn't want that either
[15:12:54] * Cork nods
[15:12:55] <Cork> got you
[15:12:56] *** Joins: otis^ (~otis@96-91-136-49-static.hfc.comcastbusiness.net)
[15:13:08] <last1> browserify makes like 10kb source code
[15:13:09] <Cork> well chrome doesn't follow the spec so not much you can do there
[15:13:11] <last1> my function is like 10 lines
[15:13:33] <last1> this sucks :|
[15:14:35] <last1> should I submit a bug request to Chrome dev team ?
[15:14:51] <last1> or this could be some obscure security related intended behavior
[15:15:20] <Cork> no clue, your guess is as good as mine
[15:21:00] *** Joins: han-solo (~han-solo@user/han-solo)
[15:21:14] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:23:14] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[15:23:19] *** Joins: vantage|work (~vantage@ip-193-121-152-141.dsl.scarlet.be)
[15:25:29] *** Quits: fr4nkiee (~Fr4nk@89.108.142.216) (Remote host closed the connection)
[15:26:21] *** Quits: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be) (Ping timeout: 256 seconds)
[15:26:52] *** Quits: maret (~maret@195.12.158.102) (Quit: maret)
[15:28:48] <friend> can you parse the data as a string and use regex to grab the stylesheet data you want?
[15:30:33] <Maxdamantus> Presumably it would be simpler to just do something like `[...document.getElementsByTagName("style")].map(e => e.textContent).join("")`
[15:30:43] <Maxdamantus> and more reliable.
[15:30:51] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[15:31:22] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 272 seconds)
[15:32:11] *** Quits: vantage|work (~vantage@ip-193-121-152-141.dsl.scarlet.be) (Quit: Leaving)
[15:32:31] *** Joins: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be)
[15:32:43] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[15:33:14] <Maxdamantus> but I would have thought the issue was that they were expecting the browser to parse the stylesheets, rather than having to deal with the stylesheet text themselves.
[15:33:58] <Maxdamantus> (or just passing the stylesheet to a stylesheet parser)
[15:35:48] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 272 seconds)
[15:37:59] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:313d:2ab8:4ced:8c26)
[15:38:01] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Ping timeout: 256 seconds)
[15:38:37] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[15:38:58] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[15:40:38] <last1> friend: I thought doing it via regex would be overly complicated
[15:40:50] <last1> when DOMParser presents it all nice
[15:44:10] *** Joins: stenno (~stenno@user/stenno)
[15:47:51] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[15:52:53] <last1> Maxdamantus: can I load that style data back into the DOMParser and get it after ?
[15:53:02] <last1> and by after I mean right away :)
[15:53:35] *** Joins: aruns (~aruns@2.217.44.61)
[15:53:37] *** Parts: aruns (~aruns@2.217.44.61) ()
[15:53:42] *** Joins: aruns (~aruns@2.217.44.61)
[15:53:47] <aruns> How do I install an NPM package from GitHub with a version constraint? My Node version is 16.14.1, and the package I want is https://github.com/hernansartorio/jquery-nice-select/releases/tag/v1.0, I have tried npm install -D git+https://git@github.com/hernansartorio/jquery-nice-select@1.0, npm install -D git+https://git@github.com/hernansartorio/jquery-nice-select#1.0, npm install -D
[15:53:53] <aruns> git+https://git@github.com/hernansartorio/jquery-nice-select@v1.0 etc, none of which have worked, only npm install -D git+https://git@github.com/hernansartorio/jquery-nice-select works.
[15:55:03] <last1> right now my code iterates through origHtml.styleSheets[0].cssRules  which is nice and clean
[15:55:49] *** Quits: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be) (Ping timeout: 256 seconds)
[15:58:13] <Maxdamantus> last1: sure, but you'll have to maintain the CSS as a string rather than as a `CSSStyleSheet` objects.
[15:58:44] <Maxdamantus> last1: I'd probably just use a CSS parsing/printing library.
[15:59:30] <Maxdamantus> I've used one before, where it just turns a CSS string into something similar to `cssRules`, and then you can manipulate that and turn it back into a string.
[16:00:53] <Maxdamantus> https://www.npmjs.com/package/css
[16:01:44] <last1> ah, node.js. nothing in pure js ?
[16:01:51] <Maxdamantus> It is pure JS.
[16:02:03] <Maxdamantus> It doesn't depend on node.
[16:02:29] <han-solo> aruns: <protocol>://[<user>[:<password>]@]<hostname>[:<port>][:][/]<path>[#<commit-ish> | #semver:<semver>] # so maybe try `npm install -D git+https://git@github.com/hernansartorio/jquery-nice-select#v1.0` # ?
[16:02:39] *** Joins: iomari891 (~iomari891@105.112.138.38)
[16:04:16] *** Quits: src (~src@user/src) (Quit: leaving)
[16:05:00] *** Quits: llorllale (~llorllale@198.98.119.85) (Ping timeout: 240 seconds)
[16:05:17] <last1> I'd rather not add another module, if possible. right now I have: myText = new DOMParser().parseFromString(e.clipboardData.getData('text/html'),"text/html"); mystyle = [...myText.getElementsByTagName("style")].map(e => e.textContent).join("");
[16:05:31] <last1> can I get mystyle applied to myText somehow ?
[16:05:44] <Maxdamantus> What do you mean by "applied"?
[16:05:49] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:06:11] <last1> well, it seems parseFromString ignores the style data
[16:06:13] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[16:06:19] <last1> I want to force it inside somehow :)
[16:06:31] <Maxdamantus> What do you expect the result will be?
[16:06:53] <last1> mytext.styleSheets to contain the style data
[16:07:43] *** Quits: shan (shan@cyblog/maintainer/shan) (Ping timeout: 256 seconds)
[16:08:34] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[16:09:38] <Maxdamantus> Why?
[16:10:58] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:313d:2ab8:4ced:8c26) (Ping timeout: 268 seconds)
[16:11:16] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 272 seconds)
[16:11:17] <last1> well, partly because I wrote and tested all my code only on FF and I make extensive use of cssRules
[16:11:36] <last1> myText.styleSheets[0].cssRules
[16:11:51] <last1> now I'd have to somehow convert that style data to cssRules
[16:12:09] <Maxdamantus> Maybe you could temporarily append it into your main document.
[16:12:28] *** Quits: plitter (~plitter@user/plitter) (Read error: Connection reset by peer)
[16:13:12] <Maxdamantus> const se = document.body.appendChild(document.createElement("style")); se.appendChild(document.createTextNode(cssText)); /* do stuff with `se.sheet` */ document.body.removeChild(se);
[16:13:34] <last1> but won't that style my actual main document ?
[16:13:50] <Maxdamantus> Yes, that's why there's code to remove it too.
[16:14:23] <Maxdamantus> As long as you add and remove it synchronously, it shouldn't have any visible effect.
[16:14:42] *** Joins: arthur_melo (~IRC@user/arthur-melo/x-6822691)
[16:15:22] <last1> I guess, I wonder if it opens up any security issues since my data comes from the clipboard
[16:15:41] <Maxdamantus> in fact, it looks like can keep using the stylesheet after removing it from the main document, just have to have it in there in order to access `sheet`.
[16:16:30] <Maxdamantus> function cssToStyleSheet(cssText){ const se = document.body.appendChild(document.createElement("style")); se.appendChild(document.createTextNode(cssText)); const { sheet } = se; document.body.removeChild(se); return sheet; }
[16:17:12] <Maxdamantus> Then you can just do `const sheet = cssToStyleSheet(".foo { color: red; }"); css.cssRules...`
[16:17:42] <Maxdamantus> s/\<sheet\>/css/
[16:18:32] *** Joins: kakashiAL (~kakashi@105.156.9.83)
[16:18:59] <last1> that's a very interesting solution. I better document it well or otherwise people will think I'm crazy :))
[16:21:40] *** Joins: han-solo_ (~han-solo@user/han-solo)
[16:22:14] *** Quits: han-solo (~han-solo@user/han-solo) (Killed (NickServ (GHOST command used by han-solo_)))
[16:22:19] *** han-solo_ is now known as han-solo
[16:22:26] *** Quits: ivanf (~ivan@user/ivanf) (Quit: Textual IRC Client: www.textualapp.com)
[16:22:47] <last1> you beautiful s.o.b. , this actually works as expected
[16:22:58] <last1> without any modules and all
[16:23:07] *** Joins: maret (~maret@195.12.158.102)
[16:23:35] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 256 seconds)
[16:24:54] *** Quits: gulzar (~gulzar@49.206.240.149) (Quit: gulzar)
[16:27:28] <Maxdamantus> actually, you can just construct a `CSSStyleSheet` directly then use `replaceSync` to do the same thing.
[16:27:58] *** Joins: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be)
[16:28:05] <Maxdamantus> function cssToStyleSheet(cssText){ const sheet = new CSSStyleSheet(); sheet.replaceSync(cssText); return sheet; }
[16:28:29] <Maxdamantus> Hm, though maybe that's not as well supported.
[16:30:23] <Maxdamantus> Yeah, I guess the `appendChild` way is probably better, for compatibility reasons. Looks like constructing stylesheets directly is a relatively new thing, but accessing `.sheet` goes back to Firefox 1 and IE 9.
[16:31:00] *** Joins: shan (shan@cyblog/maintainer/shan)
[16:31:59] <last1> gotcha, thank you! this was exactly what I was looking for
[16:32:15] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[16:33:46] *** Sherpard2_ is now known as Sherpard2
[16:36:36] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Ping timeout: 272 seconds)
[16:40:52] *** Joins: pmercado (~pmercado@186.107.58.34)
[16:41:15] *** Joins: lapsi (~lapsi@85.14.25.194)
[16:42:03] *** Joins: nulixes (~Thunderbi@gateway/vpn/pia/nulixes)
[16:42:53] <nulixes> i have a textarea with some content in it, also some newlines so the content is 4 lines long
[16:43:24] <nulixes> when i set the textarea to disabled, all content is shown on one line, anyone have an idea why that is?
[16:44:26] <Cork> nulixes: your just setting elm.disabled = true or are you using some thing party wrapper?
[16:44:37] <Cork> cause that shouldn't happen if it is just changing to disabled
[16:45:17] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[16:45:17] <nulixes> the native one, no wrappers
[16:46:02] <nulixes> elem.value gives me a string where i can see the newlines in \n format
[16:46:20] <nulixes> if i set it to disabled false everything is back to normal
[16:46:38] <nulixes> but i have some custom code as well, so i will check that first
[16:47:03] <Cork> nulixes: https://jsfiddle.net/vm4gkwL5/
[16:47:43] <nulixes> Cork: i think it is because i set it to white-space:nowrap
[16:47:50] <nulixes> had it on pre-wrap
[16:48:06] <Cork> hmm, don't think so
[16:48:36] <Cork> ah, of cource
[16:49:52] <Cork> ya, nowrap is causing it, interesting
[16:50:10] *** Joins: thiras (~thiras@user/thiras)
[16:51:13] <nulixes> Cork: thx for your help
[16:51:29] <Cork> np, interesting finding, didn't know that was a problem
[16:51:57] *** Quits: shuck (~shuck@user/shuck) (Ping timeout: 240 seconds)
[17:03:26] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[17:10:12] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[17:11:48] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[17:16:20] *** Quits: stagas (~stagas@2a02:587:c49f:caa2:d11b:a263:3b58:a581) (Ping timeout: 268 seconds)
[17:17:46] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 272 seconds)
[17:18:04] *** Joins: ivanf (~ivan@user/ivanf)
[17:20:03] *** Quits: Maxattax (~max@50-195-160-193-static.hfc.comcastbusiness.net) (Quit: WeeChat 3.4)
[17:22:24] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:a866:835b:6218:6499)
[17:22:46] *** Joins: vqueiroz (uid340368@id-340368.hampstead.irccloud.com)
[17:23:49] *** Joins: Maxattax (~max@50-195-160-193-static.hfc.comcastbusiness.net)
[17:26:03] *** Parts: Lindrian (~Lindrian@about/regex/lindrian) (Textual IRC Client: www.textualapp.com)
[17:26:29] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 256 seconds)
[17:26:38] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 272 seconds)
[17:33:07] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[17:36:57] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[17:37:18] *** Quits: kakashiAL (~kakashi@105.156.9.83) (Ping timeout: 268 seconds)
[17:39:27] *** Quits: Ducki (~ducki@user/ducki) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[17:40:18] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[17:42:15] *** Joins: voltage_ (voltage@user/voltage)
[17:43:52] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:a866:835b:6218:6499) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:45:14] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:4156:bbe5:9259:5976)
[17:48:45] *** Joins: kakashiAL (~kakashi@105.156.9.83)
[17:52:14] *** Quits: aruns (~aruns@2.217.44.61) (Killed (iridium.libera.chat (Nickname regained by services)))
[17:53:59] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 260 seconds)
[17:55:36] *** Joins: stenno (~stenno@user/stenno)
[17:55:57] *** Joins: taupiqueur_ (~taupiqueu@238.106.204.77.rev.sfr.net)
[17:56:13] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Quit: Leaving)
[17:56:19] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[17:56:40] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[17:59:27] *** Joins: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[18:00:41] *** Joins: dionysus70 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[18:04:00] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Ping timeout: 272 seconds)
[18:04:01] *** dionysus70 is now known as dionysus69
[18:07:21] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[18:08:45] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:313d:2ab8:4ced:8c26)
[18:09:19] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 256 seconds)
[18:10:09] *** Joins: Slade (uid128877@user/slade)
[18:14:07] *** Joins: dea__ (~dea@213.128.80.36)
[18:18:57] *** Quits: Enissay (~Enissay@user/enissay) (Quit: WeeChat 3.0)
[18:20:38] *** Joins: Enissay (~Enissay@user/enissay)
[18:24:11] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[18:25:27] *** Quits: maret (~maret@195.12.158.102) (Quit: maret)
[18:25:58] *** Joins: maret (~maret@195.12.158.102)
[18:26:17] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[18:28:53] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 250 seconds)
[18:32:29] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[18:32:59] *** Quits: taupiqueur_ (~taupiqueu@238.106.204.77.rev.sfr.net) (Ping timeout: 250 seconds)
[18:34:39] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 268 seconds)
[18:38:43] *** Joins: adroitmachine (~adroitmac@182.64.104.84)
[18:39:20] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[18:39:57] *** Quits: dea__ (~dea@213.128.80.36) (Ping timeout: 240 seconds)
[18:40:21] *** Quits: otis^ (~otis@96-91-136-49-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[18:40:57] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:313d:2ab8:4ced:8c26) (Ping timeout: 252 seconds)
[18:46:31] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[18:46:51] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[18:50:17] *** Quits: Decker (~d3x0r@user/d3x0r) (Ping timeout: 252 seconds)
[18:52:47] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[18:55:02] *** Joins: taupiqueur_ (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[18:55:13] *** Quits: moldorcoder7 (~moldorcod@37.120.143.29) (Ping timeout: 256 seconds)
[18:55:55] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[18:56:51] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[18:57:16] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[18:58:17] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[18:59:56] *** Quits: _wovixo_ (~wovixo@128.104.205.49) (Quit: Leaving)
[19:00:13] *** Joins: wovixo (~wovixo@128.104.205.49)
[19:00:54] *** Quits: lapsi (~lapsi@85.14.25.194) (Quit: Bye bye people :))
[19:00:55] *** Quits: m5zs7k (aquares@web10.mydevil.net) (Read error: Connection reset by peer)
[19:01:06] *** Joins: moldorcoder7 (~moldorcod@37.120.143.30)
[19:01:06] *** Joins: m5zs7k_ (~m5zs7k@web10.mydevil.net)
[19:01:34] *** m5zs7k_ is now known as m5zs7k
[19:05:04] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[19:05:39] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[19:08:12] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[19:08:35] *** Joins: average (~average@2a02:2f04:405:d600:f516:46b1:9c42:4fa2)
[19:08:35] *** Quits: average (~average@2a02:2f04:405:d600:f516:46b1:9c42:4fa2) (Changing host)
[19:08:35] *** Joins: average (~average@user/average)
[19:09:05] *** Joins: shuck (~shuck@user/shuck)
[19:09:10] *** Joins: stenno (~stenno@user/stenno)
[19:09:52] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[19:11:37] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[19:14:13] *** Joins: pulse (~pulse@user/pulse)
[19:17:53] <KevinX> Who's tried this already? https://developer.mozilla.org/en-US/plus#subscribe
[19:20:19] *** Quits: taupiqueur_ (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[19:20:56] *** Joins: dvanloon4 (~dvanloon@user/dvanloon)
[19:21:15] *** Quits: dvanloon (~dvanloon@user/dvanloon) (Ping timeout: 260 seconds)
[19:21:16] *** dvanloon4 is now known as dvanloon
[19:21:36] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[19:22:08] *** Quits: adroitmachine (~adroitmac@182.64.104.84) (Ping timeout: 268 seconds)
[19:22:47] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[19:22:57] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 240 seconds)
[19:24:58] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Remote host closed the connection)
[19:26:22] *** Joins: hackers (~self@user/hackers)
[19:27:17] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[19:28:14] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[19:28:33] *** Quits: kmh (~kmh@2a00:6020:5004:6800:5555:27f0:7629:76f0) (Quit: Leaving)
[19:31:43] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[19:33:11] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[19:36:04] *** Quits: shuck (~shuck@user/shuck) (Read error: Connection reset by peer)
[19:36:32] *** Joins: shuck (~shuck@user/shuck)
[19:37:01] *** Joins: zebrag (~chris@user/zebrag)
[19:37:12] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[19:37:15] *** Quits: shuck (~shuck@user/shuck) (Max SendQ exceeded)
[19:37:36] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 252 seconds)
[19:38:04] *** Joins: shuck (~shuck@user/shuck)
[19:42:10] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 272 seconds)
[19:43:03] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[19:43:12] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:4156:bbe5:9259:5976) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:43:35] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[19:44:47] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[19:46:53] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[19:47:30] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[19:47:41] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[19:50:03] *** Joins: sa0 (~sa0sin@88.120.82.205)
[19:50:25] *** Quits: cosd (~c0nundrum@097-071-188-147.biz.spectrum.com) (Ping timeout: 256 seconds)
[19:50:44] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[19:51:37] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[19:51:48] *** Quits: shuck (~shuck@user/shuck) (Ping timeout: 240 seconds)
[19:53:26] <average> if I have a dict like this: aa = { "key1" };
[19:54:01] <average> and I want to do   aa.key2 but want the expression to evaluate to some default value in case key2 doesn't exist..
[19:55:52] <nulixes> built some class for it?
[19:56:10] <nulixes> *build
[19:56:13] *** Joins: vysn (~vysn@user/vysn)
[19:56:24] *** Joins: taupiqueur_ (~taupiqueu@240.244.204.77.rev.sfr.net)
[19:57:22] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 272 seconds)
[19:57:39] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[20:01:55] *** Parts: suss (~user@user/suss) (ERC (IRC client for Emacs 27.2))
[20:02:37] *** Joins: l__q (~modinfo@user/modinfo)
[20:04:35] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 256 seconds)
[20:04:46] *** Joins: skmo (eskimo@iglooirc.com)
[20:05:01] <skmo> howdy
[20:05:32] <skmo> is it possible to generate a webserver cert with the web crypto api
[20:05:39] <skmo> i can't seem to find anything on googlez
[20:05:43] *** Quits: moldorcoder7 (~moldorcod@37.120.143.30) (Ping timeout: 256 seconds)
[20:06:13] <teresko> why not just use LetsEncrypt?
[20:06:54] <banana_> general question on an focused element where the dom is re-rendered by some library or framework
[20:07:31] <banana_> is it up to the rendering engine to maintain previously focused elements?
[20:07:37] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (Ping timeout: 240 seconds)
[20:08:31] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Killed (NickServ (GHOST command used by Sven_vB_)))
[20:08:33] *** Joins: Sven_vB_ (~sven@user/sven-vb/x-2094958)
[20:09:07] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[20:10:05] <skmo> teresko: because that won't work for what i'm doing
[20:10:12] <skmo> i'm trying to generate self signed certs in browser
[20:10:34] *** Joins: cotko (~cotko@188-230-251-153.dynamic.t-2.net)
[20:11:01] *** Joins: moldorcoder7 (~moldorcod@37.120.143.28)
[20:13:20] *** Joins: shuck (~shuck@user/shuck)
[20:14:08] *** Quits: shuck (~shuck@user/shuck) (Max SendQ exceeded)
[20:15:30] *** Joins: shuck (~shuck@user/shuck)
[20:17:59] *** Quits: maret (~maret@195.12.158.102) (Quit: maret)
[20:18:52] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[20:21:16] *** Joins: maret (~maret@195.12.158.102)
[20:22:24] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[20:22:57] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[20:23:47] *** Quits: taupiqueur_ (~taupiqueu@240.244.204.77.rev.sfr.net) (Ping timeout: 260 seconds)
[20:24:26] *** Joins: on^ (~on@96-91-136-49-static.hfc.comcastbusiness.net)
[20:24:54] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[20:25:00] *** Joins: Naan (~Naan@user/naan)
[20:26:17] <average> skmo: https://github.com/DigitalArsenal/openssl.js
[20:27:15] <skmo> heh this actually looks interesting
[20:28:28] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:4156:bbe5:9259:5976)
[20:28:38] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:4156:bbe5:9259:5976) (Client Quit)
[20:29:31] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[20:31:57] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:4156:bbe5:9259:5976)
[20:32:07] *** Quits: maret (~maret@195.12.158.102) (Quit: maret)
[20:33:53] *** Joins: bomb (~bomb@user/bomb)
[20:35:11] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[20:36:06] *** Joins: stenno (~stenno@user/stenno)
[20:36:33] *** Joins: zstix (~zstix@c-76-115-137-165.hsd1.or.comcast.net)
[20:37:12] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Remote host closed the connection)
[20:37:53] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[20:46:08] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 272 seconds)
[20:49:21] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[20:50:10] *** Quits: trafficjam (~qubes@119-12-218-129.dynamic.ipstaraus.com) (Read error: Connection reset by peer)
[20:50:34] *** Joins: dmanto (~dmanto@host91.186-125-4.telecom.net.ar)
[20:52:18] *** Quits: nomic (~nomic@185.217.117.249) (Quit: Leaving)
[20:52:37] *** Joins: dea__ (~dea@31-210-107-196.turkrdns.com)
[20:54:30] *** Quits: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be) (Read error: Connection reset by peer)
[20:55:11] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Remote host closed the connection)
[20:55:28] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[20:57:27] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[20:58:36] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[20:58:43] *** Joins: pulse (~pulse@user/pulse)
[21:01:56] *** Joins: trafficjam (~qubes@119-12-218-129.dynamic.ipstaraus.com)
[21:02:41] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[21:03:26] *** Joins: john_doe_jr (~Adium@206.212.5.4)
[21:03:42] <john_doe_jr> Is there a way to find all function signatures in a string of code?
[21:05:02] <bomb> john_doe_jr like how IDEs do?
[21:05:23] *** Joins: qswz (~caub@89-80-20-125.abo.bbox.fr)
[21:05:35] <qswz> Can someone explain to me the 1. point here: https://developers.google.com/identity/gsi/web/guides/verify-google-id-token
[21:06:05] <qswz> the example is in python, how would that translate in nodejs?
[21:08:32] <qswz> does someone talks pythonese here?
[21:10:03] <qswz> alguien parla calabrese?
[21:10:29] <blueagain> qswz: you just need to verify the cookie value and the request parameter value match
[21:10:43] <blueagain> qswz: https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html#double-submit-cookie
[21:10:50] *** Quits: nulixes (~Thunderbi@gateway/vpn/pia/nulixes) (Ping timeout: 272 seconds)
[21:10:57] <john_doe_jr> @bomb given a javascript file that has been turned into a string…how would I get all the function names in that string?  Regex?
[21:11:43] <bomb> john_doe_jr nah, definitely not regex. you'd want a code analysis library
[21:12:07] <qswz> blueagain: ok
[21:12:20] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[21:12:26] *** Quits: trafficjam (~qubes@119-12-218-129.dynamic.ipstaraus.com) (Read error: Connection reset by peer)
[21:12:36] <qswz> john_doe_jr: a AST parser
[21:12:45] <qswz> acorn, babel-core, esprima, ..
[21:13:01] <qswz> it looks hard but it's not
[21:13:19] <qswz> https://astexplorer.net/
[21:14:24] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 252 seconds)
[21:15:03] <john_doe_jr> @qswz what ast parser would you recommend?
[21:15:10] <qswz> acorn
[21:15:25] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[21:16:48] *** Joins: masber (~masber@213.55.224.91)
[21:18:36] <average> I wrote js today but only because I wanted to
[21:19:10] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[21:19:35] <blueagain> average: you're making a progress here
[21:19:40] <han-solo> hear hear!
[21:20:38] *** Quits: stenno (~stenno@user/stenno) (Quit: WeeChat 3.3)
[21:21:23] <average> blueagain: yes, I strive to achieve perfection, but I won't show you my js code yet because it doesn't do that much, also I know how we software engineers/developers can be highly critical of each others writing, just like 17th or 18th century writers would critique eachother using pamphlets and epistoles..
[21:21:26] *** Sven_vB_ is now known as Sven_vB
[21:22:52] <qswz> criticism is gold
[21:23:02] <qswz> constructive one
[21:23:04] <han-solo> s/^/constructive /
[21:23:06] <blueagain> ^
[21:24:42] *** Joins: muffin_storm (~muffin_st@50-233-189-146-static.hfc.comcastbusiness.net)
[21:24:42] *** Quits: muffin_storm (~muffin_st@50-233-189-146-static.hfc.comcastbusiness.net) (Changing host)
[21:24:42] *** Joins: muffin_storm (~muffin_st@user/muffin-storm/x-3740471)
[21:27:48] *** Joins: frege (~frege@d205-250-152-220.bchsia.telus.net)
[21:30:21] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 252 seconds)
[21:32:41] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[21:34:02] *** Quits: masber (~masber@213.55.224.91) (Quit: Client closed)
[21:37:03] *** Quits: shuck (~shuck@user/shuck) (Ping timeout: 260 seconds)
[21:37:37] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 240 seconds)
[21:37:59] *** Joins: masber (~masber@213.55.224.91)
[21:38:45] *** Joins: l__q (~modinfo@user/modinfo)
[21:39:53] <ljharb> DnzAtWrk: you need to auth with nickserv for anyone to see what you say; see the last link in the topic
[21:40:45] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Read error: Connection reset by peer)
[21:41:11] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[21:41:12] *** Quits: LtHummus (~lthummus@97-126-97-69.tukw.qwest.net) (Read error: Connection reset by peer)
[21:41:53] *** Joins: LtHummus (~lthummus@97-126-97-69.tukw.qwest.net)
[21:42:22] *** Quits: prawnsalad (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:44:51] <theskillwithin> https://www.infoworld.com/article/3654830/ecmascript-2022-endorses-class-fields-top-level-await.html
[21:47:57] *** Joins: stagas (~stagas@2a02:587:c49f:caa2:3392:c233:acaa:5f43)
[21:49:00] *** Joins: colordrops (~erahhal@2603-8001-9600-7b60-0010-0100-0001-d4eb.res6.spectrum.com)
[21:51:00] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[21:53:25] *** Quits: colordrops (~erahhal@2603-8001-9600-7b60-0010-0100-0001-d4eb.res6.spectrum.com) (Ping timeout: 240 seconds)
[21:53:43] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[21:54:21] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[21:54:38] *** Quits: LtHummus (~lthummus@97-126-97-69.tukw.qwest.net) (Quit: ZNC 1.8.2 - https://znc.in)
[21:55:17] *** Joins: colordrops (~erahhal@2603-8001-9600-7b60-0010-0100-0001-8d7d.res6.spectrum.com)
[21:58:50] *** Joins: kmh (~kmh@2a00:6020:5004:6800:a487:bfd9:1cce:4fb7)
[21:59:35] *** Joins: LtHummus (~lthummus@97-126-97-69.tukw.qwest.net)
[21:59:57] <ljharb> theskillwithin: it hasn't actually happened yet, so that's a dumb article
[22:00:53] <austincheney> that really takes the script out of JavaScript
[22:02:26] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[22:03:34] <ljharb> how so
[22:03:46] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[22:03:48] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[22:07:28] *** Joins: shuck (~shuck@user/shuck)
[22:08:28] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 272 seconds)
[22:08:51] *** Joins: taupiqueur_ (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[22:08:51] <blueagain> I already use most of the features from that article...
[22:09:37] <qswz> gitlab not being free anymore for more than 5 users
[22:10:01] <qswz> I think that'll be the addiional reason to move out
[22:11:00] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 272 seconds)
[22:11:55] <sheetjs> you should move out even if it was free for more than 5 users
[22:12:41] <sheetjs> not because gitlab is bad, but because of the whole github copilot thing
[22:14:28] <ljharb> lol what?
[22:15:35] *** Joins: frege45 (~frege@d205-250-152-220.bchsia.telus.net)
[22:16:03] *** Quits: frege (~frege@d205-250-152-220.bchsia.telus.net) (Ping timeout: 256 seconds)
[22:16:34] <sheetjs> github copilot was supposedly trained on the public repos on github.  There's no way to audit that process to ensure that private repos weren't swept up in it.  Overall it seems prudent to not keep proprietary code on a hosted service
[22:16:40] <howdoi> ES2022? Duh, cheap SEO hacks
[22:16:57] <hacks> I'm not cheap! How dare you!
[22:17:04] *** Joins: humanBird (~humanBird@2603-8001-7000-3642-0961-7b0a-4f50-8e44.res6.spectrum.com)
[22:17:45] *** Quits: taupiqueur_ (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[22:18:28] *** Joins: taupiqueur (~taupiqueu@126.147.204.77.rev.sfr.net)
[22:18:55] *** Quits: frege45 (~frege@d205-250-152-220.bchsia.telus.net) (Client Quit)
[22:20:07] *** Joins: prawnsalad (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk)
[22:20:16] *** Joins: voltage_ (voltage@user/voltage)
[22:20:24] <paulcarroty> a lot of people are sceptical about copilot
[22:20:50] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[22:21:03] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[22:22:05] <bomb> paulcarroty privacy concerns, or "AI is taking our jewbs" kind of complaints?
[22:22:06] <austincheney> ljharb, I feel like this language never wanted classes in the first place.  That they were bolted onto ES6 due to industry pressure by people who never wanted to write in this language in the first place.  EVen when classes were added it seemed like there was significant reservation against public/private models, because it felt like if people wanted to write code that way there were already many other languages
[22:22:06] <austincheney> where they could do so without polluting this language.
[22:22:27] <ljharb> austincheney: JS doesn't have classes now, but what it has, it always had
[22:22:35] <ljharb> austincheney: `class` syntax is an objectively and massively superior way to do that
[22:22:43] <ljharb> austincheney: i'd prefer it not have been named "class" but otherwise, it's great
[22:22:54] <ljharb> so i disagree with your take even tho i agree with your dislike of OO
[22:23:02] <ljharb> and private fields are VERY important
[22:23:03] <austincheney> :)
[22:23:24] <sheetjs> bomb: copyright / provenance concerns ?
[22:23:24] <ljharb> and, private fields are a uniquely JS thing that NO OTHER LANGUAGE has
[22:23:40] <ljharb> because it's the only language i know of where "private" things are actually private, even from reflection
[22:23:45] <bomb> sheetjs that too yeah
[22:24:03] <bomb> sheetjs also I keep hearing Copilot is doing a subpar job
[22:25:15] <ljharb> sheetjs: they were saying that was a reason to move out of gitlab, not to move out of github
[22:25:20] <ljharb> copilot's a toy
[22:25:24] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[22:25:46] <ljharb> and it's incredibly easy to ensure no private repos were swept up in it. make some code in a bunch of private repos that's only there, try to autocomplete it later
[22:26:13] <ljharb> anybody should *want* copilot to include their private code, why wouldn't you want a trivially winnable lawsuit against microsoft
[22:26:14] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-5d6aa3-110.dhcp.inet.fi) (Read error: Connection reset by peer)
[22:28:49] <edk> something something cast iron case 50% chance of winning
[22:30:21] *** Quits: dave0 (~dave0@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[22:31:00] *** Joins: nulixes (~Thunderbi@gateway/vpn/pia/nulixes)
[22:31:16] *** Quits: colordrops (~erahhal@2603-8001-9600-7b60-0010-0100-0001-8d7d.res6.spectrum.com) (Quit: WeeChat 3.3)
[22:32:56] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[22:33:49] *** Quits: kmh (~kmh@2a00:6020:5004:6800:a487:bfd9:1cce:4fb7) (Read error: Connection reset by peer)
[22:34:02] *** Joins: kmh (~kmh@2a00:6020:5004:6800:a487:bfd9:1cce:4fb7)
[22:34:28] <qswz> moving away from gitlab, should we use github or sourcehut?
[22:34:35] *** Joins: Akiva (~Akiva@user/Akiva)
[22:34:58] <sheetjs> if it's private code? self-host gitea or gogs or even gitlab CE
[22:35:09] <qswz> sheetjs: yes copilot might be fun, but tons of other github features
[22:35:16] <qswz> managing PRs easier there
[22:35:23] *** Joins: frege (~frege@d205-250-152-220.bchsia.telus.net)
[22:35:24] <blueagain> sourcehut it's horrible, it's run by communists
[22:35:27] <qswz> we don't want self-ghosting
[22:35:34] <qswz> and yes it's private
[22:35:35] <blueagain> is*
[22:35:48] <qswz> blueagain: lol really?
[22:36:02] <sheetjs> self hosting gitea / gogs is straightforward
[22:36:04] <qswz> I thought his creator was reknown
[22:36:59] <qswz> sheetjs surebut still no, in case things go bad
[22:37:17] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 240 seconds)
[22:38:05] <blueagain> ljharb: I actually really the '#' prefix, it makes it very clear with every use of the variable that it's private, and it's aligned with "common" naming scemes of private variables, like _
[22:38:14] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[22:39:00] <qswz> n> class X{#x=1; getX(){return this.#x}} new X().getX()
[22:39:01] <jellobot> (okay) 1
[22:39:03] <ljharb> qswz: github
[22:39:09] <ljharb> qswz: GHE for private stuff
[22:39:09] <qswz> ljharb: ok
[22:39:22] <qswz> hithub enterprise?
[22:39:23] <ljharb> blueagain: and better, because it's actually private, unlike _ which is public
[22:39:31] <ljharb> qswz: yes
[22:42:18] <blueagain> there are some areas though where I don't understand why google doesn't mount an offence against ms. you'd expect them to try and establish a github alternative. and their cloud services are kind of failing in terms of use. they're totally losing to amazon and ms
[22:42:30] <blueagain> it's not like google doesn't have the money to invest in a good product...
[22:43:15] <qswz> Miss Microsoft
[22:43:44] <qswz> google's git hosting failed
[22:43:50] <qswz> hat is it again?
[22:43:57] <blueagain> sheetjs: maybe you should convince google to invest in a github alternative than in bundlephobia
[22:44:16] <howdoi> hacks: lol [late laugh for your joke]
[22:44:16] <sheetjs> we donated to https://bundle.js.org/
[22:44:27] <ljharb> blueagain: google sucks at this stuff tho
[22:44:43] <bomb> s/at this stuff tho//
[22:44:48] <ljharb> also, why would you trust google, they kill good products all the time
[22:44:53] <ljharb> bomb: nah, gmail is the best still
[22:44:59] <sheetjs> the developer is legit and the project is motivated by the same problem (bundlephobia having flawed analysis)
[22:45:00] <ljharb> sheetjs: we who
[22:45:07] <bomb> ljharb try ProtonMail :)
[22:45:12] <sheetjs> scroll to the bottom
[22:45:24] <ljharb> bomb: i have, nowhere near as good
[22:45:41] <bomb> they all look the same from Thunderbird
[22:45:55] <ljharb> sheetjs: lol that seems pretty transparently fawning
[22:46:10] <ljharb> sheetjs: unless this one is better than bundlephobia and that's why?
[22:46:12] <ljharb> maybe that's it
[22:46:17] <sheetjs> because it is better
[22:46:30] <sheetjs> it uses esbuild-wasm and rollup to do the build in the browser
[22:46:30] <qswz> I've some doubt, I'm setting up google oauth signin, and at no point I had to pass the client_secret, only client_id
[22:46:48] <sheetjs> that's exactly how you would approach this problem if you wanted accurate results
[22:50:18] <sheetjs> honestly ljharb if you were going to build an alternative, you'd probably land on a similar approach
[22:50:46] <sheetjs> https://bundle.js.org/faq
[22:50:56] <ljharb> i mean i still don't think this should be approached
[22:51:06] <ljharb> bundle sizes outside of an entire app are misinformation
[22:51:08] <ljharb> at best
[22:52:47] <blueagain> ljharb: sucks or not, there's obviously a market here, evident by gh's success
[22:53:44] *** Quits: masber (~masber@213.55.224.91) (Quit: Client closed)
[22:55:25] <ljharb> blueagain: the existence of a dominant player with a network effect is not a "market"
[22:56:17] <blueagain> call it what you will, people willing to pay for services, gh being virtually a monopoly here
[22:56:37] <blueagain> I don't understand why no other big player is trying to get a slice of the cake
[22:57:44] <ljharb> they did try. they failed. no slices are available.
[22:58:11] <blueagain> the cake is accounted for?
[22:58:15] <ljharb> github has 99% of everything, and gitlab has the other 1%. there's just no room for another player, unless they were able to be SO much better than both so as to have a chance
[22:58:33] <ljharb> and gitlab's only struggling to keep that 1% by having tons of features github lacks
[22:58:52] <qswz> MS owning GH and npm makes this
[22:58:54] <blueagain> you're describing an existing situation though, in the 90s IE was in that same position until firefox came along
[22:59:08] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[22:59:12] <blueagain> I'm only saying I think google has to resources to create a good competitor
[22:59:41] *** Quits: frege (~frege@d205-250-152-220.bchsia.telus.net) (Ping timeout: 256 seconds)
[22:59:42] *** Joins: ckdCreations (~ckdCreati@147.55.133.142)
[22:59:49] <qswz> 90% of googl product fail
[23:00:09] <qswz> or more
[23:01:03] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 260 seconds)
[23:01:06] *** Quits: zstix (~zstix@c-76-115-137-165.hsd1.or.comcast.net) (Quit: Goodbye)
[23:01:23] *** Quits: shuck (~shuck@user/shuck) (Ping timeout: 256 seconds)
[23:01:41] <bomb> MS owns NPM too?
[23:01:45] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[23:01:51] <blueagain> bomb: transitively
[23:02:28] *** Joins: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[23:02:39] <bomb> blueagain Microsoft bought Joyent?
[23:03:02] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[23:03:06] *** Quits: LtHummus (~lthummus@97-126-97-69.tukw.qwest.net) (Quit: ZNC 1.8.2 - https://znc.in)
[23:03:11] *** Joins: dallegos (~dallegos@191.97.196.147)
[23:03:20] <blueagain> bomb: Joyent used to hold the copyright for node
[23:03:32] <blueagain> they transferred it to the js foundation a short while ago
[23:03:36] <qswz> then they became sad
[23:03:38] <blueagain> npm belongs to github
[23:03:50] <blueagain> so transitively to ms
[23:05:00] <MrMobius> if I want to approximate a console program (in node.js for example) with curses on a web page in js, is there a less boneheaded way than just drawing to a canvas object?
[23:05:20] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[23:05:53] *** Joins: LtHummus (~lthummus@97-126-97-69.tukw.qwest.net)
[23:05:58] <qswz> what's wrong with canvas?
[23:06:01] <blueagain> MrMobius: curses as in ncurses?
[23:06:06] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 272 seconds)
[23:06:26] <qswz> as in #!%@
[23:06:29] <MrMobius> qswz, nothing i prefer to do it this way but want to make sure im not overlooking a better way
[23:06:33] <bomb> blueagain is that Isaac guy still on it?
[23:06:35] <bomb> he was annoying
[23:07:04] <qswz> there are many some good lib wrappers for canvas, not familiar
[23:07:04] <MrMobius> blueagain, ya like the screen updates various parts of the screen as the user types, not just the input line
[23:07:29] *** Joins: filename (~kilitary@static.246.201.46.78.clients.your-server.de)
[23:07:34] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[23:07:40] <blueagain> bomb: I don't think so, not sure
[23:09:35] <friend> Didn't google try to compete half-heartedly with GH with  Google Code Platform
[23:09:35] <blueagain> MrMobius: https://github.com/mscdex/node-ncurses
[23:09:53] <blueagain> MrMobius: you mean this? bit outdated, maybe there are more up to date forks
[23:10:11] <blueagain> but mscdex is a cool guy, he's behind ssh2
[23:11:05] *** Quits: l__q (~modinfo@user/modinfo) (Quit: interet cut off, write me memo! it will be send to my mail!)
[23:11:33] <Alexendoo> MrMobius: You could use xterm.js
[23:12:10] <blueagain> oh, I didn't check it myself, the author himself recommends `blessed`
[23:12:15] <stagas> MrMobius: maybe this https://github.com/nrkn/canvas-console haven't used it just had it in my stars but it looks like what you're looking for
[23:13:01] <MrMobius> blueagain, Alexendoo, thanks! sorry, I should have explained better. it will be simple and quick to write to the canvas myself without a library. i just wanted to make sure there wasnt a more clever way to do it with text on the page. ill stick with the canvas if thats not a dumb way to do it
[23:13:05] *** Joins: shuck (~shuck@user/shuck)
[23:13:41] *** Joins: l__q (~modinfo@user/modinfo)
[23:15:42] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[23:16:27] <ljharb> blueagain: sure but "firefox came along" was after IE had neglected itself for years. github isn't doing that.
[23:16:42] <systemfault> DCHECK_EQ
[23:16:44] <blueagain> fair enough
[23:16:47] <systemfault> Wrong terminal
[23:16:51] *** Quits: bomb (~bomb@user/bomb) (Remote host closed the connection)
[23:16:52] <ljharb> bomb: isaac no longer works at npm, but i'm not sure what you mean
[23:17:16] <blueagain> systemfault: are you going through node's code? that smells of node/v8
[23:17:22] <systemfault> blueagain: Yup.
[23:17:37] *** Joins: bomb (~bomb@user/bomb)
[23:18:03] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Quit: WeeChat 3.4)
[23:19:57] <qswz> git commit -m "shit works"
[23:20:04] <qswz> oops wrong terminal
[23:20:20] <systemfault> qswz: You forgot -a
[23:20:36] <qswz> :p
[23:20:58] *** Joins: nomic (~nomic@185.217.117.249)
[23:21:06] <systemfault> Don't forget the force push on master afterward
[23:21:36] *** Quits: justOkay (~justache@user/justache) (Read error: Connection reset by peer)
[23:22:18] *** Joins: justOkay (~justache@user/justache)
[23:23:42] <qswz> --no-verify
[23:23:50] <qswz> always
[23:24:33] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[23:24:37] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[23:24:43] <qswz> I have to put --no-veerufy because I added a hook to prevent this
[23:25:01] <qswz> before I absed force push too much
[23:25:29] <qswz> now I only do it in a 5minute time window
[23:25:50] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:30:02] *** Joins: kerat588 (~keeerat@user/tarek58)
[23:30:21] *** Quits: kerat58 (~keeerat@user/tarek58) (Read error: Connection reset by peer)
[23:32:23] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[23:38:29] *** Joins: jazzy (~jaziz@user/jaziz)
[23:40:14] *** Quits: taupiqueur (~taupiqueu@126.147.204.77.rev.sfr.net) (Quit: taupiqueur)
[23:40:18] *** Joins: alystair (~alystair@user/alystair)
[23:40:48] *** Parts: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Leaving)
[23:41:17] *** Quits: filename (~kilitary@static.246.201.46.78.clients.your-server.de) (Ping timeout: 240 seconds)
[23:41:29] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[23:44:56] *** Joins: diamondbond (~diamondbo@175.157.58.221)
[23:46:19] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 260 seconds)
[23:54:58] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[23:55:35] *** Joins: N4buc0 (~N4buc0@2804:7f4:348b:29b4:28a2:5876:534d:1827)
[23:56:10] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: WeeChat 3.3)
[23:58:03] *** Quits: voltage_ (voltage@user/voltage) (Ping timeout: 256 seconds)
[23:58:45] *** Joins: junebug (~junebug@2600:1700:3db0:2540:4302:423d:8a3e:7573)
[23:59:51] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
