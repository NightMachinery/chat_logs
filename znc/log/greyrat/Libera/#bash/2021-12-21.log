[00:00:02] *** Quits: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy) (Ping timeout: 240 seconds)
[00:00:04] *** Quits: Hax0r (~Hax0r@46.38.81.225) (Remote host closed the connection)
[00:00:22] *** Joins: Hax0r (~Hax0r@46.38.81.225)
[00:00:25] <disfrutar-conchi> then you would just spill the first char [ .. and the last ] .. without anyone noticing it.
[00:01:02] <disfrutar-conchi> sweet sweet lemonade *warble
[00:02:21] *** Joins: michigan (uid507982@id-507982.ilkley.irccloud.com)
[00:02:48] *** Quits: bud (~bud@user/bud) (Quit: Leaving.)
[00:02:54] <xx> well this was a "fun" solution to a problem. In order to get the 2nd last line from a file, they did `myvar=$(tail -2 /path/to/file | head -1)`
[00:03:03] <xx> guess it works, but...
[00:03:46] <koollman> well ... it works :)
[00:04:01] <koollman> how would you do it ? :)
[00:04:18] <disfrutar-conchi> 1> &>5
[00:04:25] <disfrutar-conchi> or something.
[00:04:40] <disfrutar-conchi> a boy in the bush is worth two in a hand
[00:04:41] *** Quits: frm (~frm@user/frm) (Quit: Textual IRC Client: www.textualapp.com)
[00:04:48] *** Quits: arinov (~arinov@213.194.126.155) (Quit: WeeChat 3.3)
[00:04:53] <disfrutar-conchi> i think i could help you get through your exam.
[00:05:47] *** Quits: cognoscente (~cognoscen@75-164-195-169.ptld.qwest.net) (Quit: Textual IRC Client: www.textualapp.com)
[00:07:57] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[00:09:02] <jensen> I have the following err/die(?) function: https://0x0.st/-CWO.txt. I want to add a second argument for it to take where it will execute that argument as a command before the `exit 1`. That way, I can optionally have the function call e.g. the usage function before `exit 1`. Is `eval "$2"` appropriate?
[00:10:22] <Soliton> you need to hand in shell code or is a simple command enough?
[00:10:55] <mknod> koollman, myvar="$(awk 'NR == 2' /path/to/file)", or { read; IFS="" read -r myvar; } < /path/to/file
[00:11:36] <tirnanog> ergo, never use eval unless you need to actually execute shell code. in this case, you might consider something like: shift; if (( $# )); then "$@"; fi
[00:11:56] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[00:12:54] <jensen> what's the difference?
[00:13:04] *** Joins: cheer (~cheer@cpe-76-189-213-198.neo.res.rr.com)
[00:13:11] <disfrutar-conchi> https://www.youtube.com/watch?v=eD174ZztimU | Tocotronic - Imitationen
[00:13:25] <tirnanog> expanding "$@" will work for simple command grammar only, as documented in the manual.
[00:14:08] *** Quits: mspe (~user@tilde.team/user/mspe) (Quit: WeeChat 2.8)
[00:14:11] <tirnanog> for example, you couldn't use it to run a command like foo | bar and expect it to be treated as a pipeline.
[00:14:31] <tirnanog> chances are, it doesn't matter.
[00:15:00] <Soliton> you can hand in variable content safely unlike with eval.
[00:15:16] <jensen> Oh yea. but what's wrong with eval? Its description seems suitable and seemingly less convoluted than "$@" example with the grammar
[00:15:19] <tirnanog> you mentione da function call.
[00:15:23] <jensen> Oh ok i see
[00:15:24] <tirnanog> you don't need eval for that.
[00:15:55] <tirnanog> !eval
[00:15:55] <greybot> 'eval' is a common misspelling of 'evil'. If eval is the answer, surely you are asking the wrong question. See http://mywiki.wooledge.org/BashFAQ/048
[00:16:55] <tirnanog> the only valid use case for eval is in the case that you have composed a string that consists of valid, safe shellcode. sure, if it's just a banal function call with no arguments, it would also work.
[00:17:13] *** Quits: led_belly_ (~led_belly@196.240.57.117) (Ping timeout: 268 seconds)
[00:17:21] <koollman> mknod: that would be 2nd line, not 2nd last line
[00:17:49] <tirnanog> but it's not the kind of thing you just sprinkle into code because it seems less "convoluted". that's not a valid reason in and as of itself.
[00:17:52] <mknod> Ah, misread.
[00:18:08] <tirnanog> instead, it's a great way of setting yourself up for unintended bugs and even vulnerabilities.
[00:18:27] <libc> mknod: hi
[00:19:23] <libc> the noly valid usecase of eval is eval `ssh-agent`
[00:19:26] <libc> and that's pretty much it
[00:20:14] <tirnanog> which is technically a bug. the command substitution should be double-quoted.
[00:20:21] <phy1729> Or other environment changing scripts that need to be portable across shells. Eval is far less evil than cross-shell code imo.
[00:20:44] <emanuele6> IFS=- eval printf '%s' '"${arr[*]}"'
[00:21:07] <emanuele6> or:  IFS=- eval 'var=${arr[*]}'
[00:21:31] <wiscii> is there a preferred spelling to bashism ? capital B or b ?
[00:22:00] <tirnanog> I've never seen anyone capitalize it.
[00:22:18] <tirnanog> well, other than at the beginning of a sentence.
[00:22:21] <wiscii> ok ty
[00:22:27] *** Joins: led_belly (~led_belly@196.240.57.116)
[00:22:31] *** Quits: sandb0y (~pirate@user/sandb0y) (Quit: Time for another great escape)
[00:23:29] <wyre> hi guys, what do you recommend me to deal with stripping strings like in here? https://bpa.st/HWNQ
[00:23:52] <wyre> I mean, how could I strip the script name to drop their extensions? ðŸ¤”
[00:24:05] <Soliton> !basename
[00:24:05] <greybot> basename(1) can strip the directory and extension from a path (dir/subdir/file.ext -> file.ext or file). A parameter expansion can do it cleaner and *much* faster: "${path##*/}", "${path%.*}", at the cost of missing edge cases like path=/ or path=/path/to/dir/
[00:24:11] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:79a8:3e93:e7b7:e2ce)
[00:24:23] <Soliton> !faq 5
[00:24:24] <greybot> https://mywiki.wooledge.org/BashFAQ/005 -- How can I use array variables?
[00:24:30] <koollman> "quick and incorrect" is no way to script stuff :)
[00:27:34] *** Quits: martinus__ (~martin@96.19.201.77.rev.sfr.net) (Ping timeout: 256 seconds)
[00:28:31] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[00:29:56] <michigan> "Get it right the first time" as they say :-)
[00:30:19] *** Joins: grettke (~grettke@184.62.226.206)
[00:31:35] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[00:31:40] <jensen> tirnanog: is the `(( $# ))` check necessary or is "$@" enough in `shift; if (( $# )); then "$@"; fi`? just curious
[00:31:59] *** Joins: dirigible_ (~dirigible@2607:9000:0:3:36a4:cf80:2f7b:6990)
[00:33:24] <Soliton> # f() { "$@"; }; f
[00:33:25] <shbot> Soliton: no output
[00:33:32] <disfrutar-conchi> i prefer being underestimated.
[00:33:49] <disfrutar-conchi> expectations
[00:34:00] <disfrutar-conchi> scu dem.
[00:34:01] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[00:34:07] <disfrutar-conchi> ruful.
[00:35:06] *** Quits: dirigible (~dirigible@2607:9000:0:3:36a4:cf80:2f7b:6990) (Ping timeout: 260 seconds)
[00:35:14] *** Quits: roadie (~user@2a02:8108:ec0:1427:68b7:a824:bbd1:1af9) (Ping timeout: 252 seconds)
[00:35:41] <disfrutar-conchi> i basically go to interviews to flush 4 letter words at useless HR.
[00:36:34] <disfrutar-conchi> oh. like in the times cartoon.. a journalist is getting fired for never having quitted. :)
[00:37:37] <tirnanog> jensen: actually no, it's not necessary. just the shift.
[00:40:02] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Ping timeout: 256 seconds)
[00:40:39] *** Quits: grettke (~grettke@184.62.226.206) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[00:41:03] *** Quits: guardian (~guardian@planet-d.net) (Remote host closed the connection)
[00:42:17] *** Joins: roadie (~user@2a02:8108:ec0:1427:68b7:a824:bbd1:1af9)
[00:43:01] *** Joins: seninha (~seninha@user/seninha)
[00:45:59] <mknod> koollman, with minimal buffering:
[00:46:05] <mknod> # printf '%s\n' {1..1000} | awk -v nth_last_line=4 'BEGIN { l = nth_last_line; sz = l < 0 ? -l : l } { idx = NR-1 % sz; buf[idx] = $0; idx_map[NR] = idx } END { print buf[idx_map[NR-l+1]] }'
[00:46:06] <shbot> mknod: 997
[00:46:21] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[00:47:37] <wyre> why can I see that SSL_INT twice in this output? https://bpa.st/33CQ I guess it has something to do with my bad formatted array ðŸ¤” this is my loop https://bpa.st/2NNA
[00:48:06] <wyre> is there away to split an array in that shape? just for a better preview ðŸ¤”
[00:49:17] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:79a8:3e93:e7b7:e2ce) (Ping timeout: 240 seconds)
[00:49:36] <koollman> mknod: tail and head wouldn't buffer, and seem much easier to reread ;)
[00:49:40] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 256 seconds)
[00:49:56] <mknod> koollman, yeah but they are not fun.
[00:50:11] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[00:50:58] <themachine> ha
[00:51:57] <Soliton> wyre: what is printing SSL_INIT?
[00:52:18] <wyre> Soliton, wget
[00:52:30] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:52:39] <phogg> wyre: that's not how you use arrays
[00:52:41] <wyre> but I'm not sure how should I properly format the array to get it in one column ðŸ¤”
[00:52:56] <wyre> phogg, what do you suggest?
[00:53:04] <phogg> wyre: you have an array with one item in it (a string starting with info- and ending with -aurhelper.sh)
[00:53:21] <phogg> wyre: don't escape the line continuation,
[00:53:26] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[00:53:27] <Soliton> what
[00:53:47] <phogg> actually, it might work anyway due to the indent, but it's certainly not correct
[00:54:06] <Soliton> it's perfectly fine just unnecessary.
[00:54:08] <wyre> phogg, so is there some way to do this in bash?
[00:54:22] <Soliton> what bash issue is there?
[00:54:23] <wyre> am I forced to write it in a single line?
[00:54:31] <Soliton> no...
[00:54:39] <Soliton> just remove the backslashes.
[00:54:45] <wyre> I see
[00:54:47] *** Quits: CaCode (~CaCode@user/cacode) (Quit: Leaving)
[00:54:51] <Soliton> the array is fine either way.
[00:55:07] <koollman> mknod: maybe: tac file | sed -n '2{p;q}' , but I'm not sure how tac works on that. at least I know tail can be pretty efficient if given a file (it will start from the end, very fast)
[00:55:07] <Soliton> whatever you do in bash will not change how wget works anyway.
[00:55:09] <phogg> yeah, I was a little too forceful in saying it's not correct. More like it's not necessary.
[00:55:45] <phogg> looks like this bug maybe https://lists.gnu.org/archive/html/bug-wget/2021-09/msg00010.html
[00:56:40] <phogg> wyre: you tracking this? ^
[01:00:05] *** Joins: mspe (~user@tilde.team/user/mspe)
[01:01:02] *** Quits: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net) (Quit: Leaving)
[01:01:16] *** Joins: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net)
[01:04:58] *** Quits: dreamon (~dreamon@pd9503f67.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[01:08:19] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[01:10:18] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:79a8:3e93:e7b7:e2ce)
[01:11:34] *** Quits: Hax0r (~Hax0r@46.38.81.225) (Remote host closed the connection)
[01:17:06] *** Joins: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy)
[01:17:57] *** Quits: roadie (~user@2a02:8108:ec0:1427:68b7:a824:bbd1:1af9) (Ping timeout: 240 seconds)
[01:21:17] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:79a8:3e93:e7b7:e2ce) (Ping timeout: 240 seconds)
[01:22:10] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[01:23:04] *** Quits: spawnmc (~spawnmc@user/spawnmc) (Quit: Client closed)
[01:23:46] *** Joins: cognoscente (~cognoscen@75-164-195-169.ptld.qwest.net)
[01:24:10] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[01:26:06] *** Joins: shabius (~shabius@2a0e:1c80:2:1021::1001)
[01:26:48] *** Joins: kyr_ (~kyr@167.71.50.12)
[01:26:50] *** Quits: kyr_ (~kyr@167.71.50.12) (Client Quit)
[01:26:55] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Quit: ZNC 1.8.2 - https://znc.in)
[01:27:39] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[01:30:04] *** Quits: Libero (~Libero@77.49.184.64.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[01:30:31] *** Quits: Minvera (~Minvera@162.223.44.49) (Remote host closed the connection)
[01:32:42] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:79a8:3e93:e7b7:e2ce)
[01:33:16] *** Joins: listenurs (~igloo@c-98-240-233-64.hsd1.mn.comcast.net)
[01:33:30] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[01:34:25] *** Quits: andril (~andril@c-66-229-99-96.hsd1.fl.comcast.net) (Quit: WeeChat 3.3)
[01:34:27] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 276 seconds)
[01:36:09] *** Quits: libc (~weechat@user/tessio) (Ping timeout: 268 seconds)
[01:36:57] *** Quits: pmercado (~pmercado@186.107.51.181) (Ping timeout: 240 seconds)
[01:38:34] *** Joins: CaCode (~CaCode@user/cacode)
[01:41:31] *** Quits: ubique (~ubique@user/ubique) (Quit: .)
[01:41:38] *** Joins: LoremIpsum (~loremIpsu@2a02:c7f:140c:9d00:17e4:7f96:a8f8:1919)
[01:44:10] *** Quits: magyar (~magyar@user/magyar) (Remote host closed the connection)
[01:44:15] *** Joins: roadie (~user@2a02:8108:ec0:1427:68b7:a824:bbd1:1af9)
[01:44:34] *** Joins: andril (~andril@c-66-229-99-96.hsd1.fl.comcast.net)
[01:44:42] *** Joins: magyar (~magyar@user/magyar)
[01:44:55] *** Quits: andril (~andril@c-66-229-99-96.hsd1.fl.comcast.net) (Client Quit)
[01:45:26] *** Joins: andril (~andril@c-66-229-99-96.hsd1.fl.comcast.net)
[01:46:15] <foul_owl> Is it possible to somehow tell tail "if the file hasn't updated in xyz time, exit and run a command?" The command in question is: tail -f $(tsp | grep running | awk '{print $3}') basically I want to see output for the currently running job, but that log file changes when a job is finished
[01:46:38] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:79a8:3e93:e7b7:e2ce) (Ping timeout: 268 seconds)
[01:48:04] *** Quits: magla (~gelignite@55d4e80d.access.ecotel.net) (Quit: Stay safe!)
[01:50:16] <ash_worksi> foul_owl: you can pipe `tail -f` to other commands
[01:50:26] <ash_worksi> fwiw
[01:50:56] *** Quits: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk) (Quit: Leaving)
[01:52:03] <ash_worksi> idk what tsp is... task spooler?
[01:52:17] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Ping timeout: 240 seconds)
[01:53:00] *** Joins: sublim20 (~sublim20@user/sublim20)
[01:53:41] *** Quits: roadie (~user@2a02:8108:ec0:1427:68b7:a824:bbd1:1af9) (Ping timeout: 245 seconds)
[01:54:06] <ash_worksi> I guess `tsp` is supposed to show a task list
[01:54:20] *** Quits: knstn (~knstn@ppp-94-66-57-173.home.otenet.gr) (Quit: leaving)
[01:55:38] *** Joins: infidel (~ecrump@75.161.192.46)
[01:55:42] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[01:57:42] <ash_worksi> foul_owl: you might want to just use `watch tsp`
[01:58:31] *** Quits: tercaL (~tercaL@user/tercal) (Quit: halt -p)
[02:02:05] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[02:07:11] <tirnanog> while [[ $(tsp -s) != finished ]]; do tsp -t; done # yes, I went and read the manual
[02:07:17] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Ping timeout: 240 seconds)
[02:09:31] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[02:09:43] *** Joins: CaCode_ (~CaCode@user/cacode)
[02:09:46] *** Joins: rcernin (~rcernin@124.190.149.221)
[02:10:20] <tirnanog> at least, that should suffice where the jobs are all executed sequentially by my reading.
[02:11:56] <ash_worksi> tirnanog: they're awking field 3, so I would guess that they want the output filename for some reason
[02:12:04] <tirnanog> not required.
[02:12:21] <ash_worksi> I mean, that looks like their objective?
[02:12:24] *** Quits: CaCode (~CaCode@user/cacode) (Ping timeout: 256 seconds)
[02:12:27] *** Joins: rgrinberg (~textual@187.223.23.238)
[02:12:31] <tirnanog> it would only be presumed to be required by someone that didn't read the manual.
[02:12:31] <ash_worksi> or maybe I misinterpreted the question
[02:12:43] <tirnanog> no, it's just that you haven't read the manual either ;)
[02:12:47] <tirnanog> I went and looked it up.
[02:13:02] <tirnanog> https://www.mankier.com/1/tsp
[02:13:31] *** Joins: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au)
[02:13:46] <tirnanog> once you see what tsp -t does, it should start to make sense.
[02:13:54] *** Joins: stonkey (~stonkey@user/stonkey)
[02:14:16] <ash_worksi> oh I see
[02:15:54] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 260 seconds)
[02:16:06] <tirnanog> that being said, if no such solution had been possible, I would have mentioned read -t.
[02:16:17] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[02:18:21] *** Quits: LoremIpsum (~loremIpsu@2a02:c7f:140c:9d00:17e4:7f96:a8f8:1919) (Quit: Leaving)
[02:19:57] *** Joins: roadie (~user@2a02:8108:ec0:1427:68b7:a824:bbd1:1af9)
[02:20:56] <tirnanog> or possibly even tail --follow=name (instead of -f), which can work in the case that the writer renames the file after closing.
[02:21:09] <tirnanog> still, none of that appears necessary.
[02:22:06] *** Joins: dead1 (~dead1@user/dead1)
[02:23:14] *** Joins: junebug (~junebug@2600:1700:3db0:2540:c59f:a3d7:1264:73c2)
[02:23:28] *** Quits: ElPresidenteP (~ElPreside@2600:1700:3d10:4870:b1b6:5433:b62d:314e) (Read error: Connection reset by peer)
[02:24:52] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Ping timeout: 256 seconds)
[02:26:45] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[02:29:17] *** Quits: roadie (~user@2a02:8108:ec0:1427:68b7:a824:bbd1:1af9) (Ping timeout: 240 seconds)
[02:31:37] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Ping timeout: 240 seconds)
[02:32:03] *** Quits: cognoscente (~cognoscen@75-164-195-169.ptld.qwest.net) (Read error: Connection reset by peer)
[02:32:17] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[02:32:55] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[02:37:42] *** Joins: cliluw (~cliluw@47.147.73.223)
[02:39:29] <foul_owl> ash_worksi: tsp shows a task list, each task has a log file. I want to tail the log of the active job, and when that job finishes, switch to the new active job log file
[02:40:33] <foul_owl> Which I formulate as this: if current file doesn't get an update for 30 seconds, close "
[02:40:35] <tirnanog> if only there were an option to tail the output of the currently active job until it finishes ...
[02:41:09] <foul_owl> Completely missing the point
[02:41:25] <tirnanog> not at all.
[02:41:39] <foul_owl> When current log file doesn't get updated for 30 seconds, run the following command: tail -f $(tsp | grep running | awk '{print $3}')
[02:41:48] <foul_owl> How do you do that then?
[02:42:04] <foul_owl> I need to dynmaically switch the file that tail is following
[02:43:09] <foul_owl> if 1.log is finished, switch to 2.log, etc
[02:44:16] *** Joins: kurahaupo (~kurahaupo@pa49-182-131-41.pa.qld.optusnet.com.au)
[02:44:58] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[02:45:02] <tirnanog> I stand by my answer. the log file is done with at the point that the job concludes, at which the presently running instance of tsp -t will exit.
[02:45:15] <tirnanog> at which point*
[02:45:57] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:81c1:fdbc:2b2:4c4a) (Read error: Connection reset by peer)
[02:46:11] <tirnanog> thus, looping over tsp -t until such time as the last job in the queue is said to be finished will "dynamically" switch.
[02:46:52] <foul_owl> Ahhhh ok so tsp provides the ability to do this, not tail! Understood, thank you!!
[02:47:00] <tirnanog> yes. you asked an XY question.
[02:47:24] <tirnanog> I suspected it but needed to read the manual to confirm my suspicion.
[02:47:32] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Ping timeout: 256 seconds)
[02:47:37] <tirnanog> it seemed odd that something concerning itself with jobs wouldn't have some feature that's material to the overall goal.
[02:48:01] <foul_owl> That makes sense! Thank you!
[02:48:53] <tirnanog> not only that, but tsp -t gives you the opportunity to observe the exit status value of each job, should it ever matter.
[02:49:04] *** Joins: ferdna (~ferdna@user/ferdna)
[02:50:39] *** Quits: MenschZwoNull (~MenschZwo@p200300c8573fa200b5e9479b31916d2e.dip0.t-ipconnect.de) (Remote host closed the connection)
[02:50:57] *** Joins: MenschZwoNull (~MenschZwo@p200300c8573fa20009c0051200754164.dip0.t-ipconnect.de)
[02:51:06] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[02:51:07] <enyc> hrrm
[02:51:13] <enyc> in my light mounting shenannigans
[02:51:24] *** Quits: stonkey (~stonkey@user/stonkey) (Quit: Leaving)
[02:52:34] <foul_owl> Thank you! :)
[02:52:46] <enyc> Pondering the virtues of mounting an E14-thread on top of my heatsink with bare-LEDs
[02:52:51] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[02:53:06] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[02:53:07] <enyc> would allow to use 'normal' E14 holders and 'screw in' complete heatsink+LED into a polarized connector
[02:53:15] <enyc> rather than working out a whole extra mounting mechanism
[02:53:34] <enyc> and allow them to be swapped, etc etc
[02:53:42] <enyc> e.g. swap 4000k and 5000k leds =))
[02:55:44] *** Joins: roadie (~user@2a02:8108:ec0:1427:68b7:a824:bbd1:1af9)
[02:55:53] *** Joins: horner (~horner@host86-141-1-192.range86-141.btcentralplus.com)
[02:56:36] *** Quits: xx (~xx@user/xx) (Ping timeout: 256 seconds)
[02:56:50] <twkm> not much bash in that enyc.
[02:57:24] *** Joins: codebam (~codebam@user/codebam)
[02:57:29] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:57:45] <enyc> oops
[02:57:48] <enyc> wrong channel ;p
[02:57:54] <enyc> twkm: error in enyc ;p
[02:58:48] *** Joins: LoremIpsum (~loremIpsu@90.202.155.51)
[02:59:04] *** Joins: miique (~miique@181.46.139.166)
[02:59:13] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[02:59:56] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:00:39] *** Quits: roadie (~user@2a02:8108:ec0:1427:68b7:a824:bbd1:1af9) (Ping timeout: 268 seconds)
[03:08:22] *** Quits: rgrinberg (~textual@187.223.23.238) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[03:10:17] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[03:14:25] *** Joins: roadie (~user@2a02:8108:ec0:1427:68b7:a824:bbd1:1af9)
[03:15:01] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:15:39] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[03:17:36] *** Quits: LoremIpsum (~loremIpsu@90.202.155.51) (Changing host)
[03:17:36] *** Joins: LoremIpsum (~loremIpsu@user/loremipsum)
[03:18:10] *** Quits: horner (~horner@host86-141-1-192.range86-141.btcentralplus.com) (Read error: Connection reset by peer)
[03:19:05] *** Joins: Artea (~Lufia@artea.com.pt)
[03:20:01] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:20:38] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[03:21:16] <vancz> There's a linux distribution other than nixos which makes extensive use of bash in some core (package manager?) component, but I don't remember which - does anyone know what I'm thinking of?
[03:21:17] *** Quits: junebug (~junebug@2600:1700:3db0:2540:c59f:a3d7:1264:73c2) (Ping timeout: 240 seconds)
[03:21:17] *** Quits: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy) (Ping timeout: 240 seconds)
[03:22:06] *** Quits: MenschZwoNull (~MenschZwo@p200300c8573fa20009c0051200754164.dip0.t-ipconnect.de) (Remote host closed the connection)
[03:23:19] <twkm> you probably want #linux.
[03:24:21] *** Joins: xizhendu_ (~xizhendu@36.112.188.169)
[03:25:03] *** Joins: lragyslmtdwnbt^ (~lragyslmt@64.253.22.77)
[03:25:11] *** Quits: roadie (~user@2a02:8108:ec0:1427:68b7:a824:bbd1:1af9) (Ping timeout: 252 seconds)
[03:25:15] <koollman> vancz: sourcemage ?
[03:25:35] *** Quits: LoremIpsum (~loremIpsu@user/loremipsum) (Quit: Leaving)
[03:26:29] <vancz> I think I specifically remember someone saying nixos stdenv was bad compared to it
[03:26:46] <vancz> koollman: that doesn't sound familiar but I'll take a look, thanks
[03:28:12] <koollman> probably not that one, then. There are many, many distributions :)
[03:28:27] <vancz> I think it might be it actually
[03:29:55] <vancz> but I need to find the code I remember to confirm..
[03:30:30] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[03:30:31] *** Joins: junebug (~junebug@2600:1700:3db0:2540:b894:f9cc:3c1a:598b)
[03:30:54] *** Joins: MenschZwoNull (~MenschZwo@p200300c8573fa200b5e9479b31916d2e.dip0.t-ipconnect.de)
[03:33:23] *** Quits: MenschZwoNull (~MenschZwo@p200300c8573fa200b5e9479b31916d2e.dip0.t-ipconnect.de) (Remote host closed the connection)
[03:33:42] *** Joins: MenschZwoNull (~MenschZwo@p200300c8573fa20009c0051200754164.dip0.t-ipconnect.de)
[03:33:55] *** Quits: lavaball (~Melissa@31.204.155.215) (Remote host closed the connection)
[03:35:56] *** Quits: MenschZwoNull (~MenschZwo@p200300c8573fa20009c0051200754164.dip0.t-ipconnect.de) (Remote host closed the connection)
[03:38:37] *** Quits: junebug (~junebug@2600:1700:3db0:2540:b894:f9cc:3c1a:598b) (Ping timeout: 240 seconds)
[03:39:06] *** Joins: MenschZwoNull (~MenschZwo@p200300c8573fa20009c0051200754164.dip0.t-ipconnect.de)
[03:39:49] <vancz> koollman: well, didnt find what I'm looking for yet, but I'm pretty sure this is it, so thanks :)
[03:47:02] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Quit: WeeChat 3.5-dev)
[03:49:18] *** Quits: tex (~super@user/dix) (Ping timeout: 256 seconds)
[03:49:51] <foul_owl> command foo produces a newline separated list of numbers to std, command bar does the same thing. How do I combine the output and pipe to sort -n?
[03:49:59] <foul_owl> stdout
[03:51:14] <neshpion> cat <(foo) <(bar) | sort -n
[03:51:36] *** Joins: roadie (~user@2a02:8108:ec0:1427:68b7:a824:bbd1:1af9)
[03:52:07] <vancz> neshpion: what about { foo; bar; } | sort -n?
[03:52:33] *** Joins: rgrinberg (~textual@187.223.23.238)
[03:52:41] <neshpion> Ã¶
[03:53:09] <koollman> (foo; bar) | sort -n
[03:53:37] <neshpion> that's the same as vancz's solution but with an extra subshell
[03:53:40] <vancz> ( koollman: doesnt () create a subshell unnecessarily? )
[03:53:57] <vancz> wow maybe reading the guides and stuff did me some good 0_0
[03:54:03] <vancz> though i still have a lot of reading to do
[03:54:26] <neshpion> i knew forking for cat was suboptimal but {} escaped me for a moment
[03:54:37] <koollman> I would say my solution works
[03:54:38] <neshpion> i did my best T_T
[03:54:58] <neshpion> it works, yes, but it invokes a subshell which exposes you to pedantry.
[03:55:05] <neshpion> prepare yourself
[03:55:07] <vancz> haha
[03:55:11] <koollman> sure. not that I care much ;)
[03:55:34] <vancz> is koollman's solution maybe more posix?
[03:55:45] <vancz> i have no idea what supports what
[03:55:59] <neshpion> i'd be surprised if {} isn't POSIX already
[03:56:12] *** Quits: winstonsmith (~winstonsm@gateway/vpn/pia/winstonsmith) (Remote host closed the connection)
[03:56:20] <neshpion> since i don't know where POSIX ends and bash begins, i'm worried that my process substitutions are bashisms now
[03:56:28] *** Joins: winstonsmith (~winstonsm@gateway/vpn/pia/winstonsmith)
[03:56:40] <koollman> neshpion: they are
[03:56:45] *** Quits: roadie (~user@2a02:8108:ec0:1427:68b7:a824:bbd1:1af9) (Ping timeout: 268 seconds)
[03:56:47] <neshpion> T_T
[03:57:02] <koollman> neshpion: but if you're going to use them anyway (which is fine to me), don't use cat, just use ... sort :)
[03:57:06] * neshpion writes #!/bin/bash always
[03:57:16] <neshpion> oh, right
[03:57:35] <neshpion> i might as well be cat'ing into grep
[03:58:17] <vancz> my default assumption is that anything mildly useful is not posix heh...
[03:59:27] *** Joins: chenqisu1 (~bhca7d@183.217.201.63)
[04:00:11] * wiscii shudders .. no POSIX-World .. NOoooo
[04:01:04] *** Quits: MenschZwoNull (~MenschZwo@p200300c8573fa20009c0051200754164.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[04:01:29] *** Joins: MenschZwoNull (~MenschZwo@p200300c8573fa200b5e9479b31916d2e.dip0.t-ipconnect.de)
[04:02:34] <vancz> foul_owl: a somewhat related example https://mywiki.wooledge.org/BashGuide/TestsAndConditionals#Grouping_Statements "Command grouping can be used for more things than just Conditional Operators. We may also want to group them so that we can redirect input to a group of statements instead of just one: "
[04:02:37] *** Quits: aidalgol (~aidalgol@user/aidalgol) (Ping timeout: 240 seconds)
[04:02:40] <foul_owl> neshpion: thank you!!
[04:02:59] <vancz> foul_owl: it will take a day or two but i highly recommend reading through at least the bash guide
[04:03:01] <foul_owl> vancz: Thank you! I will read that also!
[04:03:07] <vancz> i put it off for years
[04:03:29] <foul_owl> Good idea :)
[04:03:36] <foul_owl> I will do so
[04:03:37] *** Quits: andril (~andril@c-66-229-99-96.hsd1.fl.comcast.net) (Ping timeout: 240 seconds)
[04:04:35] <vancz> depending on your level , this is a bit superficial but also possibly worth a watch: youtube.com/watch?v=ZtqBQ68cfJc
[04:04:52] <axisys_> find /path/env -type l -exec ls -d {}/bin \; works like  ls -d1 /path/env/*/bin .. which is recommended way?
[04:05:13] <axisys_> which one*
[04:05:23] <vancz> i havent checked this, but after that https://www.gnu.org/software/coreutils/manual/coreutils.pdf probably covers the same things in more detail
[04:06:01] <vancz> foul_owl: there's also a new guide mentioned at the top of the guide, the first few chapters look good but its not finished
[04:07:25] <vancz> foul_owl: i havent checked the quality of this but http://linuxcommand.org/tlcl.php might also be good
[04:07:40] <vancz> its a more extensive introduction
[04:07:51] *** Joins: roadie (~user@2a02:8108:ec0:1427:68b7:a824:bbd1:1af9)
[04:07:57] *** Joins: l4yer (~l4yer@178.239.168.223)
[04:08:40] <vancz> people are generally critical of most bash resources, with good reason - everyone and their dog thinks they know something about it and propagate old outdated or wrong knowledge; my impression is you can use these other resources to maybe get a gentler introduction, but then use the bash guide and the wooledge wiki to make sure you got stuff right
[04:08:41] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[04:08:51] <vancz> also the new guide has exercises, which might be interesting
[04:09:18] *** Joins: malina (~malina@user/malina)
[04:09:39] * vancz is going to put all this in a file at some point
[04:09:59] *** Joins: aidalgol (~aidalgol@user/aidalgol)
[04:10:48] <vancz> ok so sgml and bash_preexec are candidates so far, are there any examples of (advanced) bash usage thats good for reading / getting more comfortable with stuff?
[04:10:58] <vancz> *smgl
[04:14:39] *** Quits: roadie (~user@2a02:8108:ec0:1427:68b7:a824:bbd1:1af9) (Ping timeout: 268 seconds)
[04:14:57] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Ping timeout: 240 seconds)
[04:17:57] *** Quits: kj (~kj@kj.aerisnetwork.net) (Ping timeout: 240 seconds)
[04:22:12] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:25:52] <jensen> Is this way best way to match one string against multiple strings? `[[ "$path" = *youtube.com* || "$path" = *youtu.be* || "$path" = *twitch.tv* ]]`. Would a case statement be better for readability/performance? Though for more regex matching, [[ =~ ]] is the go to?
[04:27:51] <mknod> Globs such as *youtube.com* are very loose. Go regex.
[04:28:17] *** Quits: michigan (uid507982@id-507982.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[04:29:27] <mknod> You may be able to get away with a single regex pattern.
[04:30:31] <jensen> What about simple words? That was just an example (matching viable urls properly seems very hard in general without sacrificing readbility). For my purposes, it's just a simple "$2" matching any of the words: window,screen,all,active,pixel,region
[04:30:53] <jensen> "$2" is justa word
[04:31:14] *** Quits: CaCode_ (~CaCode@user/cacode) (Ping timeout: 256 seconds)
[04:31:56] <mknod> @(foo|bar|baz)
[04:32:33] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[04:33:06] <mknod> # for word in foo bar baz qux quux; do [[ $word == @(bar|baz|quux) ]] && echo "$word matched"; done
[04:33:07] <shbot> mknod: bar matched
[04:33:08] <shbot> mknod: baz matched
[04:33:08] <shbot> mknod: quux matched
[04:34:09] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[04:36:47] *** Joins: kj (~kj@kj.aerisnetwork.net)
[04:38:00] <vancz> mknod: what happens if you quote the left side of [[ "$somevar" == whatever ]]? the guide says its not necessary because [[ is a keyword, so the variable can be handled specially by bash
[04:38:06] <vancz> but what if I _do_ quote it?
[04:38:09] <jensen> ty, i never used extglob before
[04:38:44] <mknod> vancz, nothing will happen, that's just useless.
[04:39:28] <vancz> will it expand?
[04:39:39] <vancz> # for word in foo bar baz qux quux; do [[ "$word" == @(bar|baz|quux) ]] && echo "$word matched"; done
[04:39:40] <shbot> vancz: bar matched
[04:39:40] <shbot> vancz: baz matched
[04:39:40] <shbot> vancz: quux matched
[04:39:43] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[04:39:44] <vancz> hm ok
[04:40:10] <mknod> vancz, usually, if filename expansion or world splitting make no sense in the current context, it's safe to leave it unquoted.
[04:40:18] *** Quits: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[04:40:44] <vancz> # asd=lol; [[ '$asd' == "lol" ]]
[04:40:45] <shbot> vancz: no output
[04:40:50] <vancz> whoops
[04:40:52] <mknod> And if it's not treated as a pattern, of course.
[04:41:00] <vancz> # asd=lol; [[ '$asd' == "lol" ]] && echo hi
[04:41:00] <shbot> vancz: no output
[04:41:07] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[04:41:31] <mknod> # [[ '$asd' == \$asd ]] && echo hi
[04:41:32] <shbot> mknod: hi
[04:42:08] <vancz> *thumbs up*
[04:42:32] <vancz> i dont really get how that works but it makes enough sense
[04:42:55] *** Joins: totenkoph (~scythe@user/totenkoph)
[04:43:25] <vancz> I mean, I guess I mean I don't know how the parser and expansion phases work exactly
[04:43:29] <mknod> Single quotes disable any kind of expansion, so whatever is inside is a literal string.
[04:43:35] <vancz> yeah
[04:44:36] <vancz> oh hmm ok
[04:45:01] <vancz> i didnt quite understand what you were getting at here; so the significance is that yes it gets expanded, but it doesnt get split <mknod> vancz, usually, if filename expansion or world splitting make no sense in the current context, it's safe to leave it unquoted.
[04:45:14] <mknod> '$asd' \$asd '$'asd "\$asd" all mean the exact same thing.
[04:45:30] <vancz> but i dont have any sort of heuristic for what makes sense in a contet
[04:45:33] <vancz> context
[04:45:39] *** Quits: defjam (~eb0t@90.210.94.161) (Ping timeout: 250 seconds)
[04:45:54] <mknod> # set -x; echo '$asd' \$asd '$'asd "\$asd"
[04:45:55] <shbot> mknod: + echo '$asd' '$asd' '$asd' '$asd'
[04:45:55] <shbot> mknod: $asd $asd $asd $asd
[04:47:06] <vancz> yeah thats fine
[04:47:17] *** Joins: trollRoger (~trollroge@ti0017q161-1333.bb.online.no)
[04:47:54] <mknod> Hopefully it will come with practice as your understanding of the language will improve.
[04:48:17] <vancz> yeah
[04:48:24] <vancz> its just a bit tautological in that sense :)
[04:48:36] <vancz> once I know what I'm doing, I will know what I'm doing :D
[04:49:34] <mknod> foo=$bar is allowed because you are assigning a scalar variable, so $bar can only be treated as a string.
[04:49:57] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[04:50:17] <mknod> foo=($bar) is different because you are assigning an array, so $bar is subject to word splitting and such.
[04:50:39] *** Joins: Hackerpcs (~user@user/hackerpcs)
[04:51:18] *** Joins: defjam (~eb0t@90.198.61.46)
[04:51:20] <mknod> # bar="a b c"; foo1=$bar foo2=($bar) foo3=("$bar"); declare -p foo1 foo2 foo3
[04:51:21] <shbot> mknod: declare -- foo1="a b c"
[04:51:21] <shbot> mknod: declare -a foo2=([0]="a" [1]="b" [2]="c")
[04:51:21] <shbot> mknod: declare -a foo3=([0]="a b c")
[04:51:58] *** Quits: volgrim (~Volgrim@156-155-224-214.ip.internet.co.za) (Remote host closed the connection)
[04:52:26] *** Quits: chomwitt (~chomwitt@2a02:587:dc19:a500:12c3:7bff:fe6d:d374) (Ping timeout: 245 seconds)
[04:53:41] <vancz> aha
[04:54:55] <mknod> You almost never want foo2=($bar). It's broken. Except when it's not. But for now, just don't.
[04:54:57] <vancz> is there some kind of numbered list of like....the order bash does stuff to a string or something? a relatively concise and precise description of some of this stuff?
[04:55:04] <vancz> id have trouble explaining this to anyone
[04:55:20] <vancz> i think i get it <mknod> You almost never want foo2=($bar). It's broken. Except when it's not. But for now, just don't.
[04:56:15] <vancz> not that I'll ever be teaching any of my classmates bash again, but I did basically try to shove a semester worth of basic commandline usage into their heads in 8 hours, so there is some precedent <vancz> id have trouble explaining this to anyone
[04:56:27] <vancz> with some success
[04:56:59] <mknod> http://aosabook.org/images/bash/bash-article-diagram.png
[04:57:10] <mknod> Taken from http://aosabook.org/en/bash.html
[05:00:20] <vancz> oh sweet, thanks, i hope this helps
[05:00:28] <vancz> ive been wanting to read that book for so long
[05:00:33] *** Quits: aidalgol (~aidalgol@user/aidalgol) (Read error: Connection reset by peer)
[05:01:00] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[05:01:35] *** Joins: ano (~ano@user/ano)
[05:03:45] *** Joins: aidalgol (~aidalgol@user/aidalgol)
[05:04:16] *** Joins: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net)
[05:04:17] *** Quits: rgrinberg (~textual@187.223.23.238) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[05:06:54] *** Joins: halkony (~halkony@199.58.86.204)
[05:06:59] <halkony> hello all
[05:07:26] <halkony> i am serving 200s to log4js GETs, is my machine compromised?
[05:07:30] *** Quits: rcernin (~rcernin@124.190.149.221) (Ping timeout: 256 seconds)
[05:08:52] <mknod> halkony, how is it related to Bash?
[05:09:48] *** Joins: chandoo- (~chandoo@96.240.98.220)
[05:10:03] <halkony> my mistake -- still getting used to navigating IRC
[05:10:16] <halkony> is there a sensible chat to ask that question on this server?
[05:10:34] *** Quits: halkony (~halkony@199.58.86.204) (Remote host closed the connection)
[05:10:36] *** Quits: gpol (~gpol@135.23.207.205) (Quit: The Lounge - https://thelounge.github.io)
[05:10:47] *** Joins: halkony (~halkony@199.58.86.204)
[05:11:29] *** Quits: trollRoger (~trollroge@ti0017q161-1333.bb.online.no) (Quit: WeeChat 3.4)
[05:11:29] <mknod> /list perhaps?
[05:11:47] <vancz> try #security or ##security, i dont know if it exists
[05:12:00] <halkony> oh wow, that command is helpful. thank you
[05:13:13] *** Quits: chandoo (~chandoo@96.240.98.220) (Ping timeout: 268 seconds)
[05:14:35] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[05:14:35] *** Joins: grettke (~grettke@184.62.226.206)
[05:15:28] *** Joins: roadie (~user@2a02:8108:ec0:1427:68b7:a824:bbd1:1af9)
[05:16:01] *** Quits: grettke (~grettke@184.62.226.206) (Client Quit)
[05:17:09] <e36freak> halkony: you can also /msg alis help
[05:17:18] *** Joins: grettke (~grettke@184.62.226.206)
[05:17:24] *** Joins: rcernin (~rcernin@124.190.149.221)
[05:17:40] <e36freak> bit more powerful search than /list
[05:18:42] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[05:19:53] <vancz> ^^^ i always forget the name of that service
[05:22:22] <halkony> i encountered the advanced bash guide on tldp.org recently
[05:22:25] <halkony> very helpful
[05:22:29] *** Quits: roadie (~user@2a02:8108:ec0:1427:68b7:a824:bbd1:1af9) (Ping timeout: 268 seconds)
[05:22:29] <e36freak> heh
[05:22:34] <e36freak> !abs
[05:22:34] <greybot> The infamous "Advanced" Bash Scripting Guide should be avoided unless you know how to filter out the junk. It will teach you to write bugs, not scripts. In that light, the BashGuide was written: http://mywiki.wooledge.org/BashGuide
[05:23:05] <halkony> lmao
[05:23:13] <mknod> !tldp
[05:23:13] <greybot> The TLDP bash guides are outdated, and in some cases just plain wrong. There's a reason they are not in the topic.
[05:24:22] <vancz> oh i didnt even notice the bash hackers wiki
[05:24:40] <halkony> as a bash newbie, can you give me an example of bad advice tldp gives
[05:25:04] <halkony> if any come to memory?
[05:25:27] <mknod> halkony, give us a random page and let's find out.
[05:27:25] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Ping timeout: 268 seconds)
[05:27:25] <halkony> okay, lets start with the functions page: https://tldp.org/LDP/abs/html/functions.html
[05:28:29] <halkony> my naive observation is that chapter 24 seems late for introducing the idea of a function
[05:30:38] <mknod> echo "File "$filename" deleted.";
[05:30:40] <mknod> Oh lord.
[05:31:14] <halkony> not properly escaped?
[05:31:18] <vancz> wwait
[05:31:18] <vancz> wait
[05:31:20] <vancz> what
[05:31:21] <vancz> XD
[05:31:26] <halkony> lol
[05:31:43] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Excess Flood)
[05:31:49] <vancz> what the hell
[05:32:16] <vancz> how can you mess that up that bad?
[05:32:33] <vancz> im looking at it and i dont believe it
[05:32:37] <vancz> there has to be more to it
[05:33:01] <vancz> typo? copy paste failure?
[05:33:23] *** Joins: docmax__ (~docmax@dynamic-095-116-179-043.95.116.pool.telefonica.de)
[05:33:42] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[05:33:48] <halkony> the command seems to run in my shell
[05:33:59] <halkony> could you clarify what stand out about that statement to you?
[05:34:09] <halkony> stands*
[05:34:19] <vancz> the incomprehensible/nonsense quoting
[05:34:42] <halkony> I agree that it looks cumbersome
[05:34:47] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[05:34:52] <vancz> the way its quoted quotes the File and the deleted"
[05:35:01] <vancz> * the way its quoted quotes the "File " and the " deleted"
[05:35:06] <vancz> the variable is left unquoted
[05:35:14] <halkony> oh lmao
[05:35:23] <halkony> the quotes are unecessary
[05:35:35] <vancz> well, yes, either no quotes are necessary, or quote the variable
[05:35:37] <vancz> but not this
[05:35:48] <halkony> this is a very good example, thank you @mknod
[05:35:56] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[05:36:02] *** Quits: docmax_ (~docmax@dynamic-077-010-130-253.77.10.pool.telefonica.de) (Ping timeout: 268 seconds)
[05:36:40] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Ping timeout: 268 seconds)
[05:36:52] <vancz> i am genuinely baffled xd
[05:37:04] *** Quits: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead) (Quit: bye)
[05:37:57] <phy1729> !qefs > vancz
[05:37:57] <greybot> vancz: "$Quote" "$Every" "$Fucking" "$Substitution"
[05:38:07] *** Quits: chenqisu1 (~bhca7d@183.217.201.63) (Quit: Leaving)
[05:38:12] *** Joins: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead)
[05:38:13] <phy1729> No quotes is basically always wrong
[05:38:24] <mknod> # shopt -s nullglob; filename=!(hi).txt; echo "File "$filename" deleted."
[05:38:25] <shbot> mknod: no output
[05:38:31] <e36freak> very strange mix of [ and [[, both of which are used for arithmetic
[05:38:33] <vancz> for educational purposes, yes - but here since its just echo its fine?
[05:38:33] <e36freak> instead of ((
[05:38:49] <phy1729> vancz: not for globs see mknod's example
[05:38:53] <e36freak> vancz: you could still get some rather funky/unexpected output
[05:39:09] <phy1729> I'm a fan of printf and screw echo
[05:39:14] *** Quits: e0 (~x@user/e0) (Ping timeout: 256 seconds)
[05:39:16] <e36freak> and outputting what's basically gibberish is certainly a bug
[05:39:30] <e36freak> phy1729: i agree, at least in scripts
[05:39:40] <e36freak> i'll use a quick echo in an interactive thing
[05:39:58] <phy1729> I once had a bug due to echo interpreting backslashes and never again
[05:40:03] <e36freak> heh
[05:40:05] *** Joins: e0 (ec@rie.sdf.org)
[05:40:05] *** Quits: e0 (ec@rie.sdf.org) (Changing host)
[05:40:05] *** Joins: e0 (ec@user/e0)
[05:40:17] <phy1729> things like that are a pain in the butt to track down
[05:40:17] <vancz> Haha, re printf, point taken but-
[05:40:30] <mknod> I only use it here and interactively.
[05:40:57] *** Quits: totenkoph (~scythe@user/totenkoph) (Remote host closed the connection)
[05:40:58] <phy1729> I do sometimes, but think I more often use printf '%s\n' because I hate echo so
[05:41:40] *** Joins: igemnace (~ian@user/igemnace)
[05:41:41] <vancz> i dont follow mknods example. the glob matches.. something that ends in .txt but doesnt start with hi? (not sure about this, maybe it just matches .txt? id have to check the guide)
[05:41:57] <vancz> then id expect it to do an empty expansion because that file doesnt exist and nullglob is enabled
[05:42:01] <e36freak> !extglob
[05:42:01] <greybot> "Extended globs" (shopt -s extglob) allow you to say things like "all files that do not end in .jpg". See http://mywiki.wooledge.org/glob#extglob
[05:42:43] <e36freak> vancz: correct, it's a glob that matches all *.txt files except hi.txt, and expands to nothing because nothing matches
[05:42:53] <vancz> are globs evaluated during variable setting?
[05:42:55] *** Quits: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead) (Client Quit)
[05:42:59] <vancz> e36freak: ok but that doesnt explain why there is no output
[05:43:04] <e36freak> not with scalars, no
[05:43:26] <vancz> wAIT
[05:43:30] <e36freak> # shopt -s nullglob; var=!(hi).txt; echo "<$var>"; echo "<"$var">"
[05:43:30] <shbot> e36freak: <!(hi).txt>
[05:43:45] <e36freak> heh, don't get the second one at all because it's all concatenated
[05:43:52] <e36freak> # shopt -s nullglob; var=!(hi).txt; echo "<$var>"; echo "<" $var ">"
[05:43:52] <shbot> e36freak: <!(hi).txt>
[05:43:53] <shbot> e36freak: < >
[05:43:53] <mknod> vancz, the glob within $filename is unquoted, so it becomes File !(hi).txt deleted.
[05:44:01] <vancz> is whats happening that the glob is substituted and then its part of the same word and then the word is expanded so you lose the prefix and suffix?
[05:44:08] <vancz> ok
[05:44:10] <e36freak> yes
[05:44:15] <mknod> File !(hi).txt deleted. matches no files
[05:44:37] *** Joins: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead)
[05:44:40] <vancz> bash is hard :P too much to pay attention to
[05:44:43] *** Joins: totenkoph (~scythe@user/totenkoph)
[05:44:47] <e36freak> it's all one word, and since there are unquoted glob characters in it the entire thing is treated as a glob
[05:44:51] <e36freak> which obviously doesn't match anything
[05:46:10] <e36freak> vancz: one thing that i found very helpful:
[05:46:12] <e36freak> !parser
[05:46:12] <greybot> The Bash Parser: http://mywiki.wooledge.org/BashParser -- Simplified Example: http://stuff.lhunath.com/parser.png
[05:46:15] <disfrutar-conchi> finally they arrive.
[05:47:14] <vancz> e36freak: that may complement  this nicely<mknod> http://aosabook.org/images/bash/bash-article-diagram.png <mknod> Taken from http://aosabook.org/en/bash.html
[05:48:28] <e36freak> yeah that's chet's article, it's linked in the first page
[05:48:54] *** Joins: gpol (~gpol@135-23-207-205.cpe.pppoe.ca)
[05:49:09] <vancz> ah yeah i see it
[05:49:19] <e36freak> hard to find a better expert than the guy who maintains bash :)
[05:49:21] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[05:51:40] *** Joins: docmax (~docmax@dynamic-077-001-058-226.77.1.pool.telefonica.de)
[05:52:15] *** Quits: chandoo- (~chandoo@96.240.98.220) (Quit: Leaving... Leaving... Left...)
[05:53:24] *** Quits: docmax__ (~docmax@dynamic-095-116-179-043.95.116.pool.telefonica.de) (Ping timeout: 256 seconds)
[05:53:24] *** Joins: short-bike (~short-bik@centos/community/short-bike)
[05:53:37] *** Quits: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e) (Ping timeout: 240 seconds)
[05:56:38] *** Joins: malina (~malina@user/malina)
[05:58:00] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[05:58:35] *** Joins: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e)
[05:59:07] <jensen> I have a dash script that sources my bash utils script. If the bash script is doing bash things, I can get errors, right?
[06:01:25] *** Quits: halkony (~halkony@199.58.86.204) (Remote host closed the connection)
[06:02:00] <jensen> Also, I'm conflicted on whether to use a bash utils script. It's nice to not see a typical functions like usage, die, cmd_check, etc. defined in all scripts. And scripts should be easy to read/write. But bash being a scripting language than a programming one probably means a util script to be sourced from could have its own caveats?
[06:02:02] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Ping timeout: 240 seconds)
[06:02:17] *** Joins: chenqisu1 (~bhca7d@183.217.201.63)
[06:02:42] *** Quits: chenqisu1 (~bhca7d@183.217.201.63) (Remote host closed the connection)
[06:03:01] *** Joins: chenqisu1 (~bhca7d@183.217.201.63)
[06:03:38] <mknod> jensen, scripting languages are programming languages.
[06:05:59] <mknod> And yes, with some creativity you can write powerful librairies in Bash that are worth hundreds of lines of code.
[06:09:41] *** Joins: loganlee (~Thunderbi@user/loganlee)
[06:11:29] *** finstern1s is now known as finsternis
[06:12:30] *** Joins: halkony (~halkony@199.58.86.204)
[06:16:55] *** Quits: grettke (~grettke@184.62.226.206) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[06:17:34] *** Joins: roadie (~user@2a02:8108:ec0:1427:68b7:a824:bbd1:1af9)
[06:18:25] <vancz> "At this point, a short digression about aliasing is in order. Bash allows the first word of a simple command to be replaced with arbitrary text using aliases. Since they're completely lexical, aliases can even be used (or abused) to change the shell grammar: it's possible to write an alias that implements a compound command that bash doesn't provide. The bash parser implements aliasing completely in the lexical phase, though the parser has to inform the analyzer
[06:18:25] <vancz> when alias expansion is permitted."
[06:18:30] <vancz> lol sweet
[06:18:37] <vancz> where are the alias hacks i want to see them
[06:18:47] <vancz> c preprocessor <3 xD
[06:22:00] *** Quits: finsternis (~X@23.226.237.192) (Quit: leaving)
[06:22:13] *** Quits: roadie (~user@2a02:8108:ec0:1427:68b7:a824:bbd1:1af9) (Ping timeout: 240 seconds)
[06:22:21] <short-bike> I'm attempting to learn my way around creating a bash driven menu for user selection (test purposes only) and I think I am nearly there. Only issue I am hitting is that the options list created spans the screen rather than conventionally listing, which is what I am trying to achieve. This is GNU/Linux 5.8 on CentOS. Any help appreciated. Here is the code...https://paste.centos.org/view/16853ac9
[06:22:40] *** Joins: finsternis (~X@23.226.237.192)
[06:23:40] <short-bike> I have tried echo -e as well as 'S\n'. The latter forces a new line but omts the menu option.
[06:25:13] <short-bike> error ^^ "$\n"
[06:27:16] <djph> short-bike: perhaps this'll help?  https://mywiki.wooledge.org/BashFAQ/115
[06:27:21] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:28:21] <malina> not bad to see centos in the wild in 2021, let alone 5.8
[06:28:34] <malina> the stuff of dreams
[06:29:36] <short-bike> djph: I'll take a look. Thank You.
[06:30:20] <malina> somehow I get a mix of a imagination and a flashback of waking up a cave[wo]man and she goes oh and i discovered how to move fire with stick to new place! along with fowly going fffffire... f-f-f-firee fireee MANUEL!!! :D
[06:30:59] <emanuele6> short-bike: select will print the options based on the size of the terminal using the $COLUMNS variable
[06:31:23] <emanuele6> if you don't want that, i think you can just set COLUMNS=1 and it will print one option per line
[06:31:42] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[06:32:42] <short-bike> emanuele6: where in the code would the COLUMNS arg go ?
[06:32:58] <short-bike> s/arg/variable*
[06:33:03] <emanuele6> COLUMNS=1
[06:33:05] <emanuele6> at the top
[06:33:06] <short-bike> yes
[06:33:09] <short-bike> OK
[06:35:02] <short-bike> emanuele6: Perfecto..... Thank you so much.
[06:35:45] *** Joins: grettke (~grettke@184.62.226.206)
[06:40:10] *** Quits: Hash (~Hash@hashsecurity.org) (Ping timeout: 268 seconds)
[06:40:24] *** Joins: Hash_ (~Hash@hashsecurity.org)
[06:41:03] *** Quits: cheer (~cheer@cpe-76-189-213-198.neo.res.rr.com) (Quit: WeeChat 3.4)
[06:41:44] *** Joins: millido (~millido@84.210.150.128)
[06:41:50] <vancz> what do command vs process substitution look like?
[06:43:03] *** Joins: roadie (~user@2a02:8108:ec0:1427:68b7:a824:bbd1:1af9)
[06:46:14] <neshpion> command substitution is $(), where the command inside gets run and the expression expands to the string value of its output;  process substitution looks like <() and it expands to the name of a file descriptor from whence you can read its output like reading a file;  additionally, process substitution can be >() in which case you can write *to* the file descriptor and the commands inside read its
[06:46:15] <neshpion> contents as stdin
[06:46:25] *** Joins: n4dir (~user@i5E8666A3.versanet.de)
[06:46:40] *** Joins: DynV (~DynV@user/dynv)
[06:46:48] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[06:46:50] <vancz> oh ok, thanks, i wasnt sure
[06:46:52] <DynV> How does one copy files and in doing so only overwrite larger files? Date is to be ignored, only if names match and destination is smaller there's overwriting (and of course if the file doesn't exist in destination it's copied).
[06:47:28] <vancz> i think you messed up something in that sentence
[06:47:37] *** Quits: roadie (~user@2a02:8108:ec0:1427:68b7:a824:bbd1:1af9) (Ping timeout: 240 seconds)
[06:47:38] <Blondie101010> DynV:  you asked that yesterday
[06:47:40] <emanuele6> deja vÃ¹
[06:47:42] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[06:47:44] <Blondie101010> it's a 3 line script
[06:48:12] <DynV> So like 18 hrs ago? That's too soon to ask again?
[06:48:26] <Blondie101010> you already got good replies and apparently ignored them
[06:48:29] <emanuele6> but we gave you an answer
[06:48:30] <neshpion> did you receive and understand the answers that were given yesterday?
[06:49:06] <DynV> I'm sorry I didn't see the script, I looked for nick highlights and thought the scripts were for someone else.
[06:49:12] <Blondie101010> first condition is: [[ -f $filename ]]
[06:49:16] <DynV> Is there a public log of this channel?
[06:49:22] <loganlee> guys in bash can you do `true ? 1 : 0` of that kind?
[06:50:05] <OMGOMG_> !&&|| > loganlee
[06:50:05] <greybot> loganlee: foo && bar || baz is not equivalent to 'if foo; then bar; else baz; fi'. In the former case, baz will happen if *either* foo *or* bar return false. In the latter case, baz will only trigger if foo returns false, regardless of the exit code for bar. See http://mywiki.wooledge.org/BashPitfalls
[06:50:14] <Blondie101010> DynV:  one thing to keep in mind...  support channels are not free service providers other than for actual *assistance*
[06:50:52] <Blondie101010> to check sizes on *linux*, you can use `du`
[06:51:02] *** Quits: jos1 (~jos3@host-091-097-190-081.ewe-ip-backbone.de) (Ping timeout: 240 seconds)
[06:51:06] <DynV> If I seemed like I insisted or used language in which I was entitled to help, know that wasn't my intention.
[06:51:51] <Blondie101010> ok, so how about you start trying to assemble the components I just mentioned
[06:52:33] <Blondie101010> do you know conditions?
[06:53:10] <DynV> sadly not ATM, I may have used one in the past but it's been a long time and for a short duration.
[06:53:42] *** Quits: lragyslmtdwnbt^ (~lragyslmt@64.253.22.77) (Remote host closed the connection)
[06:54:31] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[06:54:40] <DynV> !log
[06:54:40] <greybot> To log all subsequent output (+ stderr): exec >>somefile 2>&1 ## To log all your actions, plus stdout+stderr, add set -x after that. ## To log *and also pass through* see http://mywiki.wooledge.org/BashFAQ/106
[06:55:00] <DynV> !log 24 hrs
[06:55:04] <Blondie101010> DynV:  do you know any programming/scripting languages?
[06:55:35] <DynV> I did some C++ a decade ago.
[06:55:54] <DynV> !log 24:00
[06:55:57] <Blondie101010> then you should know basic programming concepts
[06:55:57] *** Quits: timj (~timj@user/timj) (Ping timeout: 240 seconds)
[06:56:01] <neshpion> there is no public log
[06:56:55] <neshpion> DynV: unless your IRC client doesn't save logs by default or you deleted them, you should have them
[06:56:58] <DynV> Would someone share with me what was mentioned to me after my yesterday's question (that I thought was for someone else) ?
[06:57:07] <Blondie101010> a basic condition example could be: if [[ -f $filename ]]; then echo 'the file exists'; else echo "the file doesn't exist"; fi
[06:57:27] <Blondie101010> $filename refers to a variable
[06:57:51] <DynV> my IRC client only save the last 10 lines of the channel at the leave time.
[06:57:57] <Blondie101010> which would have previously been assigned as: filename=/some/path/file.txt
[06:58:48] <Blondie101010> in your task, you will need to extract data from command output, like with `du`
[07:00:32] <e36freak> DynV: http://ix.io/3J0p not much
[07:01:07] * DynV thumb up
[07:01:15] <DynV> so far I've put in a file everything since my question.
[07:01:47] <e36freak> this like for a backup thing?
[07:01:57] <e36freak> why larger?
[07:03:30] *** Parts: short-bike (~short-bik@centos/community/short-bike) (and on that note...)
[07:03:32] *** Joins: jos1 (~jos3@dyndsl-091-096-040-087.ewe-ip-backbone.de)
[07:04:00] <DynV> the program, which I have *no* control over (other than star & stop) often have multiple versions of a file with something added at the beginning or end or sometimes is cut short, I want the biggest version.
[07:04:57] <Blondie101010> # echo "pizza" > /tmp/pizza; du /tmp/pizza|cut -d $'\t' -f1
[07:04:58] <shbot> Blondie101010: 4
[07:04:59] <e36freak> this all in the same dir? across dirs? recursive?
[07:05:17] <DynV> same dir, there's a subdir with previous versions.
[07:05:45] <Blondie101010> oops... something's wrong with my line :)
[07:05:46] <DynV> but my intention is to only work from the maik dir.
[07:05:57] <DynV> s/maik/main/
[07:06:15] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[07:06:17] <e36freak> so what do multiple versions of the same file look like? different suffixes?
[07:06:17] <Blondie101010> ugh no, it's a size thing
[07:06:37] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 240 seconds)
[07:06:37] <DynV> #s at the end (right before extension.
[07:06:45] <neshpion> you can also use `wc -c` to get filesize in bytes
[07:06:59] <Blondie101010> same thing
[07:07:11] <emanuele6> Blondie101010: you are not checking the size correctly
[07:07:31] <Blondie101010> I agree
[07:07:39] <e36freak> DynV: so problem 1 is determining groups of the "same" file
[07:07:45] <emanuele6> `du file_containing_a' and `du file_containing_aa' will both output 4
[07:07:49] <emanuele6> use stat
[07:07:55] *** Quits: Thanatermesis (~Thanaterm@191.92.148.122) (Ping timeout: 268 seconds)
[07:08:09] <emanuele6> i think DynV wants something like this
[07:08:11] <emanuele6>  http://0x0.st/-CJG.sh
[07:09:01] *** Quits: winstonsmith (~winstonsm@gateway/vpn/pia/winstonsmith) (Remote host closed the connection)
[07:09:01] <e36freak> i didn't gather that there's a separate destination dir, is there?
[07:09:09] <emanuele6> err, the ${dst_du%%[!0-9]*} is unnecessary
[07:09:10] <e36freak> or do you just want to remove everything except the largest file?
[07:09:13] <neshpion> `du -b` would show actual bytes, by default it's KB which may not show the difference in size correctly
[07:09:16] *** Joins: winstonsmith (~winstonsm@gateway/vpn/pia/winstonsmith)
[07:09:32] <DynV> e36freak: I had no intention of comparing in the subdir, as I often wipe it out as it gets large and contain many cut-off files
[07:10:03] <emanuele6> this is what i meant http://0x0.st/-CJD.sh
[07:10:30] <emanuele6> neshpion: oh, or you can use du -b
[07:10:55] <emanuele6> with something like this  http://0x0.st/-CJk.sh
[07:11:05] <emanuele6> du -b instead of stat -b err
[07:11:36] <emanuele6> i just checked and `du -b' is not POSIX
[07:11:49] <emanuele6> it's better to just use stat then
[07:11:55] <emanuele6> no point parsing the output of du
[07:11:56] <neshpion> `wc -c` and `du -b` both also output the filename next to the size;  `stat -c %s` prints *only* the size, which may be more handy
[07:12:00] <DynV> tnx a lot emanuele6. I don't feel so good ATM, but I'll be sure to work in it.
[07:12:40] <emanuele6> huh?
[07:13:23] <DynV> s/work in it/work on it/
[07:13:45] <Blondie101010> stat -c%s $filename # is pretty good
[07:13:58] <emanuele6> stat -c %s -- "$filename"
[07:14:15] <neshpion> always remember your savety dashes
[07:14:35] <emanuele6> at least the quotes
[07:14:41] <emanuele6> Blondie101010: see http://0x0.st/-CJD.sh
[07:15:03] <Blondie101010> nicer
[07:16:45] <emanuele6> oops, it am using the size of $dst twice, lol
[07:17:22] *** Quits: halkony (~halkony@199.58.86.204) (Remote host closed the connection)
[07:17:25] <e36freak> i'd probably do it as http://ix.io/3J0s
[07:17:39] *** Quits: fluter (~fluter@user/fluter) (Quit: WeeChat 3.3)
[07:17:50] <emanuele6> oh, `wc -c' is an option, right
[07:18:06] <e36freak> maybe with a slight adjustment of the PE
[07:18:25] <e36freak> same_files=("${file%%+([0-9]).*}"*)
[07:18:39] <emanuele6> also maybe with `dotglob'
[07:18:46] <e36freak> sure, if desired
[07:19:07] *** Joins: halkony (~halkony@173-31-119-206.client.mchsi.com)
[07:19:15] *** Parts: halkony (~halkony@173-31-119-206.client.mchsi.com) ()
[07:19:22] *** Joins: halkony (~halkony@173-31-119-206.client.mchsi.com)
[07:19:47] <e36freak> and i think cp instead of mv
[07:20:35] <emanuele6> here is my final solution http://0x0.st/-CJn.sh
[07:21:07] <e36freak> i think we interpreted the problem differently
[07:21:21] <e36freak> my understanding was a dir with a bunch of the same files in it and he wants to cp the biggest one
[07:21:25] <e36freak> could be wrong
[07:21:38] <e36freak> same files with different numeric suffixes
[07:22:56] *** Quits: TMan459 (~TMan459@068-113-233-054.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[07:23:50] <emanuele6> oh, i thought he wanted to copy files from one directory to another, but not touching files that are bigger in the destination directory
[07:24:04] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:24:10] <e36freak> it could also be that
[07:24:13] <e36freak> not super clear
[07:24:14] *** Quits: halkony (~halkony@173-31-119-206.client.mchsi.com) (Quit: WeeChat 2.8)
[07:24:18] <e36freak> well now he has scripts to do either
[07:24:26] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Quit: This computer has gone to sleep)
[07:24:50] <DynV> emanuele6: I saved everything, I should look at everything and test it < 24 hrs.
[07:25:29] <emanuele6> we don't even understand what your actual goal is to be honest
[07:25:42] <emanuele6> e36freak's interpretation or my interpretation?
[07:26:03] <DynV> as long as smaller files are overwritten, it will work perfectly.
[07:26:07] <e36freak> or neither!
[07:26:33] <DynV> I saved both your work.
[07:26:46] <DynV> and will test them both.,
[07:26:50] <e36freak> emanuele6: i feel like yours might be more correct
[07:26:59] <e36freak> but whatever, fun little problem to solve
[07:28:43] *** Joins: zostj (~rue@1-162-41-8.dynamic-ip.hinet.net)
[07:33:37] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 240 seconds)
[07:35:51] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:36:46] <emanuele6> i think my script should probably check that dst is not a directory
[07:36:49] <emanuele6> but whatever
[07:40:01] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Client Quit)
[07:40:18] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:41:24] <emanuele6> oh, i am using `wc -c < "$dst"', not `stat -c %s -- "$dst"' so i don't need to
[07:41:26] <emanuele6> smart
[07:42:53] <emanuele6> if $dst is a directory, "$(wc -c < "$dst")" errors and expands to "" and then [ "$(wc -c < "$src")" -gt "" ] errors because "" is not valid
[07:42:55] <emanuele6> nice
[07:43:25] *** Joins: fluter (~fluter@user/fluter)
[07:43:38] <emanuele6> `wc -c' is a very nice way to check a file's size
[07:44:29] <emanuele6> though maybe you should still check that "$dst" is a regular file otherwise it could hang the script if it is a pipe
[07:45:10] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[07:46:00] <loganlee> hello just converted a C code finding binary of unsigned integer to bash: https://termbin.com/4uc0
[07:46:23] <emanuele6> !check
[07:46:24] <checkbot> loganlee: Line 12: Double quote to prevent globbing and word splitting. Line 75: Double quote to prevent globbing and word splitting. See https://shellcheck.net/?id=cb60184 for all 3 issues.
[07:46:46] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[07:47:06] <loganlee> ok cool
[07:47:19] <loganlee> just the double quoting
[07:48:19] <e36freak> that's a lot of comments for like 10 lines of code
[07:48:26] <emanuele6>     remainder_eight=$((i%8)); [ "$remainder_eight" -eq 0 ] && value_binary+=' '
[07:48:33] *** Joins: TMan459 (~TMan459@068-113-233-054.res.spectrum.com)
[07:48:39] <emanuele6> you can just use:   (( i % 8 == 0 )) && value_binary+=' '
[07:48:43] *** Joins: kdc (~kdc@196.211.197.159)
[07:48:57] *** Quits: mr_ab (~nobody@bnc.ab.hl9.net) (Read error: Connection reset by peer)
[07:49:06] <loganlee> emanuele6: nice! thx
[07:49:11] <e36freak> or (( !(i%8) )) if you wanna be extra fancy
[07:49:37] <emanuele6> or even (( i % 8 )) || value_binary+=' '
[07:49:41] <e36freak> yeah
[07:50:13] *** Joins: bud (~bud@user/bud)
[07:50:15] <emanuele6> same deal for   (( value_unsigned_int & mask )) && d=1
[07:50:28] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 268 seconds)
[07:50:37] <emanuele6> and honestly, you can just get rid of d=0 and do directly
[07:50:44] <emanuele6> d=$(( value_unsigned_int & mask ))
[07:50:56] <emanuele6> or   (( d = value_unsigned_int & mask ))   same thing
[07:51:21] *** Joins: N0ZYC (~N0ZYC@173-16-166-245.client.mchsi.com)
[07:51:27] <emanuele6> and actually d is only used once, so you can simply use:   value_binary+=$(( value_unsigned_int & mask ))
[07:53:02] <loganlee> thanks a lot guys
[07:54:37] <loganlee> this was C code for finding binary for an unsigned integer and i converted to bash
[07:56:19] *** Joins: stultusv_ (~stultusv@p7176066-ipoefx.ipoe.ocn.ne.jp)
[07:57:03] *** Joins: malina (~malina@user/malina)
[08:00:15] <emanuele6> loganlee: http://0x0.st/-Cy-.sh
[08:01:57] <emanuele6> ( small correction: print error to stderr: http://0x0.st/-Cyo.sh )
[08:02:03] *** Joins: jmd (~jmdaemon@user/jmdaemon)
[08:03:23] <emanuele6> also should `exit 2' instead of `exit 0' i guess
[08:04:04] *** Quits: reset (~reset@user/reset) (Quit: reset)
[08:04:20] *** stultusv_ is now known as stultusv
[08:04:29] *** Quits: stultusv (~stultusv@p7176066-ipoefx.ipoe.ocn.ne.jp) (Changing host)
[08:04:29] *** Joins: stultusv (~stultusv@user/stultusv)
[08:04:58] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Quit: This computer has gone to sleep)
[08:05:00] *** Quits: jmd (~jmdaemon@user/jmdaemon) (Client Quit)
[08:05:23] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[08:05:54] *** Joins: reset (~reset@user/reset)
[08:07:08] *** Quits: chenqisu1 (~bhca7d@183.217.201.63) (Ping timeout: 256 seconds)
[08:07:36] *** Quits: stultusv (~stultusv@user/stultusv) (Quit: Leaving)
[08:07:52] *** Joins: stultusv (~stultusv@user/stultusv)
[08:09:55] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[08:10:14] *** Quits: stultusv (~stultusv@user/stultusv) (Client Quit)
[08:10:26] *** Joins: stultusv (~stultusv@user/stultusv)
[08:13:49] <loganlee> emanuele6: what does !! do?
[08:13:59] <phy1729> !!
[08:13:59] <greybot> event not found -- These errors only happen in *interactive* shells when you run commands with ! in them with history expansion enabled. Run set +o histexpand (set +H) to disable it, and put it in your ~/.bashrc to disable it in future shell sessions, too. Regardless, it won't affect scripts.
[08:14:07] <emanuele6> phy1729: wrong !!
[08:14:20] <emanuele6> it converts the number to a boolean
[08:14:20] <phy1729> oh
[08:14:34] <emanuele6> it also works in C the same way
[08:14:38] <phy1729> That's a standard C bit twiddling truck
[08:14:59] <emanuele6> # printf %s\\n "$(( !10 ))"
[08:15:00] <shbot> emanuele6: 0
[08:15:05] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:15:05] <emanuele6> 10 negated is 0
[08:15:08] <emanuele6> # printf %s\\n "$(( !!10 ))"
[08:15:09] <shbot> emanuele6: 1
[08:15:23] <emanuele6> 0 negated is 1, so !10 negate is 1
[08:15:38] <emanuele6> that is the same for every number that is not 0
[08:15:55] <emanuele6> if the number is 0, !0 is 1, and !!0 is !1 that is 0
[08:16:10] <emanuele6> so it effectively converts every number that is not 0 to 1
[08:16:32] *** Joins: ravan (~ravan@user/ravan)
[08:16:53] <emanuele6> shell uses C syntax for arithmetic, so you can expect most of the operators to work exactly like C
[08:17:54] <loganlee> # echo "$((!!10))"
[08:17:55] <shbot> loganlee: 1
[08:18:17] <loganlee> # echo "$((!!0))"
[08:18:18] <shbot> loganlee: 0
[08:18:24] <emanuele6> (10 != 0) would have the same effect as ( !!10 )
[08:19:08] <emanuele6> # printf %s\\n "$((10!=0))"
[08:19:09] <shbot> emanuele6: 1
[08:19:11] <emanuele6> # printf %s\\n "$((0!=0))"
[08:19:12] <shbot> emanuele6: 0
[08:20:52] <loganlee> i did $ echo "$((!!0))" twice and i get error:
[08:20:53] <loganlee> echo "$((echo "$((clear0))"0))"
[08:20:53] <loganlee> bash: echo 00: syntax error in expression (error token is "00")
[08:21:15] <emanuele6> now it's really :) !!
[08:21:39] <emanuele6> !! expands to the last command by default in interactive shells
[08:21:41] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[08:21:45] <emanuele6> it's called history expansion
[08:22:02] <emanuele6> you can disable it with `set +H'
[08:22:15] <loganlee> nice! thx!
[08:23:36] *** Joins: rgrinberg (~textual@187.223.23.238)
[08:24:24] *** Quits: TMan459 (~TMan459@068-113-233-054.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[08:24:46] *** Quits: dead1 (~dead1@user/dead1) (Quit: Leaving)
[08:28:02] <loganlee> # echo "$((!!111))"
[08:28:04] <shbot> loganlee: 1
[08:28:05] <loganlee> yay
[08:29:05] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[08:29:15] *** Quits: vishal (~vishal@fedora/vishal) (Quit: ZNC 1.8.2 - https://znc.in)
[08:31:01] *** Joins: vishal (~vishal@fedora/vishal)
[08:34:49] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[08:35:19] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[08:37:34] *** Joins: TMan459 (~TMan459@068-113-228-168.res.spectrum.com)
[08:40:37] *** Joins: eruditass (uid248673@id-248673.uxbridge.irccloud.com)
[08:43:53] *** Joins: roadie (~user@2a02:8108:ec0:1427:68b7:a824:bbd1:1af9)
[08:48:35] *** Quits: roadie (~user@2a02:8108:ec0:1427:68b7:a824:bbd1:1af9) (Ping timeout: 252 seconds)
[08:49:03] *** Quits: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se) (Ping timeout: 268 seconds)
[08:50:33] *** Joins: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se)
[08:55:14] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[08:56:10] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[09:04:44] *** Joins: chenqisu1 (~bhca7d@183.217.201.63)
[09:07:29] <pj> !! in a logical sense doesn't really help much in bash, but in some languages it does.  I use it on a semi-regular basis in javascript, for example.
[09:07:54] *** Joins: janko (~gian@2001:ce8:132:f834:17e6:94c:3238:dcbe)
[09:08:01] <neshpion> well even in javascript it doesn't make much logical sense when you consider why it's a thing in the first place
[09:09:11] <pj> neshpion: often times I end up with a variable that contains some non-boolean value, and a function that I need to pass it to but the function requires a boolean value.  !! evaluates the truthiness of something that is not strictly boolean and converts it to a strict boolean true/false representation.
[09:09:38] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:10:17] <jensen> In this script: https://0x0.st/-CyN.txt, how can I pass the arguments from the script to the bash -s's script? E.g. I want to run `./script echo hey` and it should spit out "hey" as many times in 1 second in order to benchmark it. but it's not spitting out "hey"
[09:10:57] <janko> So yesterday I asked about named pipes and I think I got the gist of how to use them, however today as I was putting in practice I realized I do not understand why would I use the pipe syntax at all when I writing and reading from a temporary file would accomplish the same thing?
[09:11:00] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Remote host closed the connection)
[09:11:14] <disfrutar-conchi> it's managable until you try to break it.
[09:11:17] *** Joins: dsrt^ (~dsrt@64.253.22.77)
[09:11:23] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[09:11:24] <disfrutar-conchi> really*
[09:11:42] *** Joins: junebug (~junebug@2600:1700:3db0:2540:7238:d26c:60a1:e022)
[09:12:08] <disfrutar-conchi> that javascript thing
[09:12:47] <emanuele6> 06:01:48 <emanuele6 > here is an example http://0x0.st/-CL_.txt
[09:14:05] <emanuele6> janko: temp files and pipes are quite different things
[09:14:16] <pj> it comes in very handy in jquery, for methods such as .toggle, which require a boolean to be passed as the arg.
[09:14:17] *** Quits: junebug (~junebug@2600:1700:3db0:2540:7238:d26c:60a1:e022) (Client Quit)
[09:15:38] <emanuele6> there is also `Boolean(arg)'
[09:15:47] <emanuele6> but !!arg is shorter
[09:15:52] <pj> yep
[09:18:53] <emanuele6> i think java is one of the few languages that does not allow !!arg for boolean conversion
[09:19:49] <emanuele6> every time i use java i always get annoyed by the strict typing
[09:20:08] <pj> an example: $("#myContainer").toggle(!!$("#myContainer div.myStuff:visible").length) // only shows the parent container if all the children are visible.
[09:21:12] <emanuele6> one time i was trying to do something like   `if (this.flags & mask) return true;' and it took me almost half an hour to figure out it was not compiling because `if' can only take a boolean
[09:21:27] <pj> oh wow
[09:21:31] <emanuele6> so i need to write it as `if ((this.flags & mask) != 0)'
[09:21:33] <pj> that's damn strict
[09:21:40] *** Joins: roadie (~user@2a02:8108:ec0:1427:68b7:a824:bbd1:1af9)
[09:21:42] <emanuele6> same for `!!number'
[09:21:46] <pj> java has no concept of truthiness?
[09:22:04] *** Quits: miique (~miique@181.46.139.166) (Quit: Leaving)
[09:22:04] <neshpion> java is a lie
[09:22:09] <disfrutar-conchi> it's for the not !<expression> to parse all kind of values non strictly. and some panic in ===  stricy dogma. on the other hand, you will have to take measures to check the input anyway.. in common scenarios
[09:22:37] <emanuele6> pj: in the Boolean contructor, maybe. but generally i don't think so
[09:23:14] <emanuele6> nope, not even in the Boolean contructor
[09:23:18] <pj> wow
[09:23:21] <emanuele6> the only thing that is true is true
[09:23:26] *** Joins: miique (~miique@181.46.139.166)
[09:23:30] <emanuele6> and the only thing that is false is false
[09:23:35] <pj> I mean easy enough to work around by using comparison operators, but really.
[09:24:05] <pj> true is true, false is false and everything else is a type error.
[09:24:23] <emanuele6> indeed
[09:24:39] <neshpion> *post-modernist screeching intensifies*
[09:24:40] <emanuele6> the error for `if (non_bool)' was quite incomprehensible though
[09:24:53] <disfrutar-conchi> amen
[09:24:58] <janko> :emanuele6 In that example the pipe would be just a file right? (tbh I am not sure what the $1 is..)
[09:25:27] <emanuele6> !$n
[09:25:27] <greybot> Handling positional parameters (arguments on commandline): https://wiki.bash-hackers.org/scripting/posparams
[09:25:38] <emanuele6> it's the first argument that you pass to the script
[09:26:06] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[09:26:08] <pj> you would think it would at least be something like: error on line nnn, boolean expected, integer supplied, or somethign to that effect.
[09:26:57] *** Joins: node1 (~node1@user/node1)
[09:28:08] <emanuele6> actually the error message is fine
[09:28:10] <emanuele6> test.java:3: error: incompatible types: int cannot be converted to boolean
[09:28:12] <emanuele6>         if (1)
[09:28:39] <pj> ahhh, yep, that at least seems straight forward.
[09:28:49] <emanuele6> but i had something like   `if (flags1 & mask1 && flags2 & mask2)' so maybe that confused it
[09:29:01] *** Quits: semigloss (~semigloss@d14-69-6-230.try.wideopenwest.com) (Quit: leaving)
[09:29:11] <emanuele6> yep
[09:29:12] <pj> I wonder if java allows for the addition of implicit casts.
[09:29:28] <emanuele6> it's error for `non_bool && non_bool' that is hard to understand
[09:29:38] *** Quits: setesat (~setesat@94.4.156.220) (Quit: The Lounge - https://thelounge.chat)
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:30:05] *** Joins: setesat (~setesat@94.4.156.220)
[09:31:01] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[09:31:03] <emanuele6> janko: run `mkfifo pipe'
[09:31:15] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:31:28] <emanuele6> then in one terminal run `bash ex1 pipe' and, in another terminal, run `bash ex2 pipe'
[09:32:32] <janko> yeah I tried the script.
[09:33:17] <janko> Why use "mkfifo pipe" instead of say "touch pipe"
[09:33:30] <emanuele6> because it is not the same thing?
[09:33:58] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[09:34:21] <disfrutar-conchi> doesn't java has a var type?
[09:34:37] <emanuele6> `var' is like `auto' in c++
[09:34:53] <emanuele6> it is statically typed, but the type is deduced at compile time
[09:35:11] <disfrutar-conchi> good java guy then made c#
[09:35:27] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[09:35:40] <neshpion> my c++ may be auto, but it's still four-wheel-drive
[09:35:58] <disfrutar-conchi> for the purpose of things.
[09:36:14] <disfrutar-conchi> which you can basically outsource to some earthlings.
[09:37:43] <disfrutar-conchi> risk management
[09:38:34] <janko> :emanuele6 I can tell they do different things, as the fifo exclusively outputed from the first script while the latter would save the output. But in terms of interprocess communication, is there any reason to pick one over the other?
[09:38:39] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[09:38:55] *** Joins: unop (~unop@194.154.249.71)
[09:39:06] <disfrutar-conchi> i dont knw where the ms  experts hang out. they probably are out there earning money.
[09:39:19] *** Joins: Mo (~Mo@dynamic-095-116-178-186.95.116.pool.telefonica.de)
[09:39:19] <disfrutar-conchi> :*
[09:39:48] <emanuele6> janko: i really don't get what you are saying
[09:40:03] <emanuele6> you were the one that wanted to use a pipe
[09:40:27] <disfrutar-conchi> pipe good
[09:40:43] <emanuele6> and you seem to be implying that you can write to a file to communicate between two process which simply is not true
[09:41:02] *** Quits: xizhendu_ (~xizhendu@36.112.188.169) (Ping timeout: 240 seconds)
[09:41:48] <emanuele6> if i write to a file, changes are not actually saved until i close the file descriptor
[09:41:52] <disfrutar-conchi> unless it's some mkfifo? or would there be constraints/differences
[09:42:28] <neshpion> but a fifo isn't exactly a file
[09:42:35] <neshpion> it just LARPs as one
[09:42:38] <emanuele6> and if i write to a file; another process that is expecting to read it is not going to wake up/ be notified when i write to it
[09:43:28] <emanuele6> so you can't just replace a fifo with a regular file in that example as you seem to be implying
[09:43:36] <emanuele6> i don't get why you think you can
[09:43:50] <disfrutar-conchi> . o ( unless it is a running process with a fd? )
[09:44:33] <janko> ah, ok that answer my question I think
[09:44:33] <janko> sorry if I made that confusing
[09:44:50] <disfrutar-conchi> fine. ignore my thoughts. those are existential problems tho!
[09:44:57] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[09:45:39] <disfrutar-conchi> at least genuine questions. (which we will need for the real dataa mining later)
[09:46:11] <disfrutar-conchi> m0ther: log hard all the questions please
[09:46:29] *** Quits: saki (~saki@gateway/tor-sasl/saki) (Remote host closed the connection)
[09:46:43] *** Joins: saki (~saki@gateway/tor-sasl/saki)
[09:47:37] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 240 seconds)
[09:51:24] <disfrutar-conchi> .
[09:52:01] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Quit: This computer has gone to sleep)
[09:54:03] <janko> my understanding of file descriptors is quite brittle, I will have to read up a bit more.
[09:54:24] *** Joins: joo-_ (~joo-_@80-62-117-215-mobile.dk.customer.tdc.net)
[09:54:24] *** Quits: joo-_ (~joo-_@80-62-117-215-mobile.dk.customer.tdc.net) (Changing host)
[09:54:24] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[09:55:18] <grawity> even with a regular fd, if it points to a regular file then a basic read() won't block even if there's no data â€“ it'll hit EOF â€“ and similarly poll() will just immediately say "it's readable" every single time
[09:55:52] <grawity> so if you read until EOF, and another process appends to that file, you don't really get informed that there's new data toread
[09:55:57] <grawity> you think you're at EOF and that's it
[09:56:56] <grawity> (unless you a) re-check every second or b) use additional features like inotify, which is what 'tail -f' does)
[09:57:07] <grawity> whereas with pipes or sockets, if there's no more data, read() or poll() *will* wait until you get some more, without needing to do anything special
[09:57:14] <grawity> that's why fifos work and regular files don't
[10:00:24] *** Quits: codebam (~codebam@user/codebam) (Remote host closed the connection)
[10:00:51] <janko> wow, I am not going to lie and say I 100% understand it, but I read the articles on the topics regarding redirection and file descriptors, but I still do not have a clear picture. Where should I dig deeper?
[10:01:00] <emanuele6> janko: http://0x0.st/-Cy1.txt
[10:01:05] <emanuele6> i wrote this
[10:01:28] <emanuele6> it's an example of how you could possibly use a file as a pipe
[10:02:46] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[10:04:57] <emanuele6> and yeah tail-f probably uses inotify instead of checking the mtime as grawity said
[10:05:41] <emanuele6> s/the output of close()/the output of date and then close()/
[10:07:38] <janko> :emanuele6 thanks, that actually helps a bit. I think from now I will stick to the conventions until I have some understanding of the underlying/next abstractions
[10:08:14] <janko> *I will not question conventions until
[10:08:26] <emanuele6> using that `tail -f' approach is a lot more complex than just using a pipe
[10:09:03] <emanuele6> but once again, pipes and regular files are not at all the same thing
[10:09:12] <grawity> it does both (it has a list of filesystems where inotify is known to work well)
[10:09:36] <grawity> still
[10:09:48] <pj> I've found (and this may have changed) that inotify doesn't seem to work across bind mounts.
[10:09:48] <grawity> using 'tail -f | ...' ends up converting the read to ... a pipe.
[10:09:48] <janko>  yeah.. yes sir! lol
[10:10:28] *** Quits: A|an (~Alan@173.216.51.200) (Quit: A|an)
[10:15:42] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[10:16:25] *** Joins: unop (~unop@194.154.249.71)
[10:17:48] *** Quits: grettke (~grettke@184.62.226.206) (Quit: Textual IRC Client: www.textualapp.com)
[10:18:13] *** Joins: node1 (~node1@user/node1)
[10:18:48] *** Quits: stultusv (~stultusv@user/stultusv) (Remote host closed the connection)
[10:18:57] *** Quits: Mo (~Mo@dynamic-095-116-178-186.95.116.pool.telefonica.de) (Ping timeout: 240 seconds)
[10:22:49] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[10:23:26] *** Joins: Mo (~Mo@dynamic-095-116-178-186.95.116.pool.telefonica.de)
[10:23:30] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[10:23:53] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[10:27:22] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[10:27:24] *** Joins: waxfire7 (~waxfire@65.119.2.240)
[10:27:37] *** Quits: cim (~cim@205.185.117.110) (Quit: Ping timeout (120 seconds))
[10:27:44] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[10:27:51] *** Joins: cim (~cim@205.185.117.110)
[10:27:57] *** Quits: waxfire (~waxfire@65.119.2.240) (Ping timeout: 240 seconds)
[10:27:57] *** waxfire7 is now known as waxfire
[10:30:31] *** Quits: TMan459 (~TMan459@068-113-228-168.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[10:31:17] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[10:31:23] *** Quits: janko (~gian@2001:ce8:132:f834:17e6:94c:3238:dcbe) (Quit: WeeChat 2.8)
[10:31:32] *** Joins: TMan459 (~TMan459@068-113-228-168.res.spectrum.com)
[10:31:40] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[10:35:08] *** Joins: keypusher (keypusher@user/keypusher)
[10:35:19] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: my cats are fighting)
[10:37:27] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[10:37:32] *** Quits: dob1 (~dob1@user/dob1) (Quit: quit)
[10:38:40] *** Joins: dob1 (~dob1@user/dob1)
[10:41:01] *** Quits: DynV (~DynV@user/dynv) (Quit: Konversation terminated!)
[10:43:55] *** Quits: rcernin (~rcernin@124.190.149.221) (Quit: WeeChat 3.3)
[10:45:03] *** Joins: rcernin (~rcernin@124.190.149.221)
[10:46:01] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[10:49:44] *** Joins: sinaowolabi (~SinaOwola@41.58.240.230)
[10:54:07] *** Joins: tex (~super@user/dix)
[10:54:16] *** Quits: Mo (~Mo@dynamic-095-116-178-186.95.116.pool.telefonica.de) (Quit: Leaving)
[10:55:31] *** Joins: furrymcgee (~devuan@cgn-89-1-208-9.nc.de)
[10:58:34] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[10:59:31] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[11:00:03] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[11:00:19] *** Joins: unop (~unop@194.154.249.71)
[11:00:25] *** Joins: rendar (~rendar@user/rendar)
[11:05:49] *** Joins: Libero (~Libero@77.49.184.64.dsl.dyn.forthnet.gr)
[11:10:16] *** Quits: terminaldweller (~devi@ip137.ip-145-239-165.eu) (Ping timeout: 268 seconds)
[11:11:48] *** Joins: terminaldweller (~devi@5.115.66.8)
[11:13:21] *** Quits: roadie (~user@2a02:8108:ec0:1427:68b7:a824:bbd1:1af9) (Ping timeout: 268 seconds)
[11:15:07] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[11:15:56] *** Joins: unop (~unop@194.154.249.71)
[11:18:29] *** Quits: terminaldweller (~devi@5.115.66.8) (Read error: Connection reset by peer)
[11:21:04] *** Joins: DynV (~DynV@user/dynv)
[11:21:59] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[11:22:29] *** Joins: john1_ (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[11:23:17] *** Quits: rcernin (~rcernin@124.190.149.221) (Ping timeout: 240 seconds)
[11:23:34] <disfrutar-conchi> legion https://www.youtube.com/watch?v=0XTtga1efdQ aus hagb4rds zauberschatzkiste(tm)
[11:24:10] *** Joins: terminaldweller (~devi@ip137.ip-145-239-165.eu)
[11:24:57] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Ping timeout: 240 seconds)
[11:24:59] <disfrutar-conchi> carpe diem mortal conchi
[11:25:03] *** Joins: rcernin (~rcernin@124.190.149.221)
[11:25:05] *** Joins: roadie (~user@2a02:8108:ec0:1427:68b7:a824:bbd1:1af9)
[11:25:28] *** disfrutar-conchi is now known as earendel
[11:25:48] *** Joins: Mo (~Mo@dynamic-095-116-178-186.95.116.pool.telefonica.de)
[11:25:48] <DynV> sorry about earlier, my head was not into problem solving at all. so I used emanuele6 latest script http://0x0.st/-CJn.sh and added the beginning of e36freak's http://ix.io/3J0s and did up to line 48 on https://pastebin.com/JuyKJnFJ and removed the added part (to get emanuele6's original) and repeated the last 2 commands in vain. I then used the GUI to do the file copy (from src to dst) then did the lines remainder (50 to 106), am I doing something wrong?
[11:25:49] <pasteban> Paste is available without ads on https://pastebin.com/raw/JuyKJnFJ
[11:26:24] <DynV> The original request was: How does one copy files and in doing so only overwrite larger files? Date is to be ignored, only if names match and destination is smaller there's overwriting (and of course if the file doesn't exist in destination it's copied).
[11:27:27] <DynV> e36freak's version won't do as that file structure is in the subdirectory and I'd only work in the main directory.
[11:27:36] *** Quits: n4dir (~user@i5E8666A3.versanet.de) (Remote host closed the connection)
[11:27:45] <DynV> the subdirectory si some sort of cache.
[11:27:49] <DynV> is*
[11:28:09] <tirnanog> what is the script that you are using, as it stands?
[11:28:33] *** Joins: michigan (uid507982@id-507982.ilkley.irccloud.com)
[11:28:34] <DynV> the 1st one (http://0x0.st/-CJn.sh  )
[11:30:09] <tirnanog> as long as no rercusion is required, it looks fine to me.
[11:30:15] <Soliton> and what is the issue?
[11:30:27] <DynV> no rercusion needed
[11:31:25] <DynV> (1) it won't copy the files over (2) when the files are copied then there's a larger version of a file in source, that larger file won't overwrite destination.
[11:31:32] <tirnanog> also, this has no usage function or feature. so the first one is _not_ the script, as it stands.
[11:32:14] *** Joins: tobybl (~tobybl@213.31.132.151)
[11:32:21] <Soliton> show a specific case of what file it does not copy.
[11:32:44] <DynV> from line 63 on https://pastebin.com/JuyKJnFJ
[11:32:44] <pasteban> Paste is available without ads on https://pastebin.com/raw/JuyKJnFJ
[11:33:42] *** Joins: tobybl_ (~tobybl@213.31.132.151)
[11:34:01] <DynV> also from line 22 since there was nothing in destination file, I hoped it would copy.
[11:34:26] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[11:35:05] <tirnanog> alright, but why didn't you show the script that you are actually using?
[11:35:11] <Soliton> it would be really good to see the actual code your un.
[11:35:17] <tirnanog> it is clearly _not_ https://0x0.st/-CJn.sh exactly.
[11:35:37] <DynV> let me get the file as it it right now.
[11:35:55] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[11:35:57] *** Quits: richardm75 (~richardm7@2600:8801:c507:b200:b18a:25c2:9e17:d9f9) (Ping timeout: 240 seconds)
[11:36:13] <DynV> https://pastebin.com/AhH6AvWL
[11:36:13] <pasteban> Paste is available without ads on https://pastebin.com/raw/AhH6AvWL
[11:36:30] <Soliton> this does not care for arguments.
[11:36:37] *** Quits: tobybl (~tobybl@213.31.132.151) (Ping timeout: 240 seconds)
[11:36:38] <tirnanog> still not the script you are using.
[11:37:03] <Soliton> or if it is then sure that won't do anything unless your dirs are "a" and "b".
[11:37:06] *** Joins: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy)
[11:37:22] <tirnanog> indeed.
[11:37:42] <DynV> I'm not sure, I did the commands exactly as above, I did not see any message or progress bar.
[11:37:51] <DynV> and had the exact outputs.
[11:37:58] <tirnanog> do you not understand? your pastebin demonstrating the issue shows:
[11:38:00] <tirnanog> $ ./libera-emanuele6-2112202250.sh
[11:38:02] <tirnanog> usage:  SOURCE_DIR DEST_DIR
[11:38:09] <tirnanog> there is no way the script that you keep pasting could even print that.
[11:38:18] <tirnanog> so we don't even know what code you are running still.
[11:38:34] <DynV> and added the beginning of e36freak's [...] and removed the added part (to get emanuele6's original)
[11:38:41] <tirnanog> that doesn't mean anything to me.
[11:38:51] <DynV> 1 sec
[11:38:52] <tirnanog> show the script that you are running. it's not an unreasonable request.
[11:39:07] *** Joins: irc_user (uid423822@id-423822.lymington.irccloud.com)
[11:39:27] <DynV> I started using https://pastebin.com/21P4y3h3
[11:39:27] <pasteban> Paste is available without ads on https://pastebin.com/raw/21P4y3h3
[11:39:34] <tirnanog> ok. that looks more like it.
[11:39:39] *** Quits: gothicserpent (~gothicser@89.45.90.225) (Quit: Leaving)
[11:39:58] <tirnanog> you need src_dir=$1 and dst_dir=$2 (not a and b)
[11:41:14] <DynV> ok it overwrote, now let me see what if the destination folder is empty
[11:41:48] <DynV> seems to work fine
[11:41:57] <DynV> I'll do a couple more tests.é
[11:42:28] *** Quits: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy) (Ping timeout: 256 seconds)
[11:42:51] *** Joins: tobybl (~tobybl@213.31.132.151)
[11:43:12] *** Joins: xizhendu_ (~xizhendu@36.112.188.169)
[11:44:23] *** Joins: MajorBiscuit (~MajorBisc@c-001-015-014.client.tudelft.eduvpn.nl)
[11:44:24] <DynV> with a few tests, it seems to work perfectly, I put back the usage bit.
[11:44:38] <tirnanog> not that it's technically wrong to use wc -c but I would add that it's a very expensive way of checking the size of a file. you might consider using some other method. for instance, stat -c %s in the case of linux.
[11:44:47] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[11:44:47] <tirnanog> well, gnu, I should say.
[11:44:57] *** Quits: tobybl_ (~tobybl@213.31.132.151) (Ping timeout: 240 seconds)
[11:45:03] *** Joins: unop (~unop@194.154.249.71)
[11:45:05] <DynV> and running the script now sames some seconds, compared to earlier which only took fractions of a second.
[11:45:18] <DynV> s/sames/takes/
[11:45:20] *** Joins: ubique (~ubique@user/ubique)
[11:45:23] <tirnanog> yes, well it could be faster, as per above.
[11:45:43] <tirnanog> calling stat would still incure the cost of a subshell but at least it would stat the file rather than read the entire file.
[11:45:44] <DynV> I'm jsut trying to explain therE's progress.
[11:45:50] <tirnanog> yes, I understand.
[11:46:06] <emanuele6> yeah, i also sent a stat solution before http://0x0.st/-CJD.sh
[11:46:12] <tirnanog> cool.
[11:46:31] <emanuele6> only problem is that in that paste i wrote `$dst' twice
[11:47:12] <emanuele6> the second stat should obviously use $src
[11:49:53] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[11:52:08] *** Joins: gothicserpent (~gothicser@2604:a880:2:d0::2204:b001)
[11:52:40] *** Quits: Mo (~Mo@dynamic-095-116-178-186.95.116.pool.telefonica.de) (Ping timeout: 256 seconds)
[11:53:14] *** Quits: xizhendu_ (~xizhendu@36.112.188.169) (Ping timeout: 256 seconds)
[11:54:15] *** Joins: chomwitt (~chomwitt@94.66.63.187)
[11:56:06] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[12:00:34] <DynV> so I used http://0x0.st/-CJD.sh to make https://pastebin.com/9UiysFUA and got https://pastebin.com/VWD9ixpg the only problem was when I got the errors at line 32
[12:00:34] <pasteban> Paste is available without ads on https://pastebin.com/raw/VWD9ixpg
[12:01:22] *** Quits: roadie (~user@2a02:8108:ec0:1427:68b7:a824:bbd1:1af9) (Quit: ERC (IRC client for Emacs 25.3.50.1))
[12:01:37] <jcbjoe2021> pasteban: wsl2?
[12:02:06] <DynV> it's not much of an issue though.
[12:02:32] <emanuele6> do the error matter?
[12:03:00] *** Joins: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263)
[12:03:02] <emanuele6> the errors are intentional, the script should still work correctly
[12:03:17] <DynV> <DynV> it's not much of an issue though.
[12:03:33] <emanuele6> if you really don't want to have error messages, you can add 2>/dev/null to the stat for $dst
[12:03:52] *** Joins: martinus__ (~martin@2.56.202.77.rev.sfr.net)
[12:04:05] <emanuele6> like so http://0x0.st/-Cyh.sh
[12:05:30] *** Joins: igemnace (~ian@user/igemnace)
[12:05:30] *** Joins: Mo (~Mo@dynamic-095-116-178-186.95.116.pool.telefonica.de)
[12:05:46] <emanuele6> what i am doing in that code is intentionally making stat fail in order to check if the destination fail does not already exist
[12:05:58] <emanuele6> just so i don't have to check it manually
[12:06:33] <tirnanog> an existence test wouldn't be bad, though. stat could fail for other reasons, and it's not as though the procedure is atomic to begin with.
[12:07:21] <emanuele6> tirnanog: the exit code of the `stat' for $src is ignored anyway, but yes
[12:09:16] *** Joins: sinaowolabi_ (~SinaOwola@102.134.114.1)
[12:10:31] <emanuele6> the most correct way to do it is: http://0x0.st/-Ctz.sh
[12:10:36] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[12:10:48] *** Quits: Mo (~Mo@dynamic-095-116-178-186.95.116.pool.telefonica.de) (Ping timeout: 256 seconds)
[12:10:56] <emanuele6> [[ -f $dst ]] is also nice to check since you probably don't want to copy your source file to a directory
[12:11:16] <tirnanog> yes.
[12:11:37] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[12:13:24] <tirnanog> given that it seems to be GNU, another option is just to use cp -T, which will warn where the destination is a directory and do nothing.
[12:16:16] *** Quits: fling (~fling@user/fling) (Remote host closed the connection)
[12:16:17] *** Quits: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[12:16:28] *** Quits: sinaowolabi_ (~SinaOwola@102.134.114.1) (Ping timeout: 256 seconds)
[12:16:29] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[12:16:30] *** Quits: sinaowolabi (~SinaOwola@41.58.240.230) (Ping timeout: 260 seconds)
[12:22:09] <DynV> emanuele6: there was a *tiny* mistake in your script, fixed by s/dst_size$(/dst_size$=(/, tyvm.
[12:23:06] <emanuele6> there is a *tiny* mistake in your regex fixed it by s/dst_size\$(/dst_size$=(/, you are welcome.
[12:23:42] *** Joins: Mo (~Mo@dynamic-095-116-178-186.95.116.pool.telefonica.de)
[12:23:50] *** Quits: kurahaupo (~kurahaupo@pa49-182-131-41.pa.qld.optusnet.com.au) (Ping timeout: 256 seconds)
[12:29:21] *** Joins: xx (~xx@user/xx)
[12:29:43] *** Joins: sinaowolabi_ (~SinaOwola@160.152.55.191)
[12:30:02] *** Joins: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net)
[12:30:55] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[12:31:00] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[12:31:25] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[12:32:17] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Read error: Connection reset by peer)
[12:33:25] *** Joins: Kartagis (~iegg@user/kartagis)
[12:33:28] <Kartagis> hi
[12:34:23] <Kartagis> what terminology is it when I am talking about recipe=$(grep recipe .lando.yml|cut -d : -f 2) ?
[12:34:38] <tirnanog> !$(
[12:34:38] <greybot> Command Substitution: "$(cmd "foo bar")" causes the command 'cmd' to be executed with the argument 'foo bar' and "$(..)" will be replaced by the *output*. See http://mywiki.wooledge.org/BashFAQ/002 and http://mywiki.wooledge.org/CommandSubstitution
[12:34:54] <Kartagis> okay thanks
[12:35:55] *** Quits: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263) (Quit: WeeChat 3.3)
[12:36:11] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[12:36:53] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[12:38:32] <Kartagis> is it possible to use command substitution in an alias or do I need a function?
[12:38:36] *** Joins: mat001_ (~mat001@c-71-202-208-145.hsd1.ca.comcast.net)
[12:39:42] *** Quits: mat001 (~mat001@c-71-202-208-145.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[12:40:50] <geirha> For almost every purpose, aliases are superseded by shell functions.
[12:41:14] <emanuele6> but sure you can use command substitutions in aliases
[12:41:15] <geirha> but yes, aliases can contain any syntax, even syntax errors, unlike function
[12:45:54] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[12:46:42] *** Joins: legola (~legola@46.235.101.65)
[12:47:25] <emanuele6> DynV: by the way, if you want to make it recursive, you simply need to enable `globstar' and use `"$src_dir"/**/*' as the glob
[12:47:42] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[12:48:13] <emanuele6> and also use `dst=$dst_dir/${src#"$src_dir"/}' instead of `dst=$dst_dir/${src##*/}' which is a sensible thing to do anyway
[12:48:22] <mihaiadrian> i generate a json, from a cli app, but the json has weird characters, i guess because the cli utility uses gnu readline
[12:48:23] <mihaiadrian> https://pastebin.com/raw/zdpdnkHD
[12:48:28] <mihaiadrian> how can i remove those characters?
[12:48:29] <emanuele6> (even if you don't need the recursion
[12:48:38] <emanuele6>  http://0x0.st/-CtQ.sh
[12:50:38] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[12:51:43] <emanuele6> mihaiadrian: is that the prompt of the cli program?
[12:51:52] <mihaiadrian> emanuele6: yes
[12:51:56] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:52:06] <emanuele6> what program is this?
[12:52:18] <mihaiadrian> https://github.com/vysheng/tg
[12:52:43] <mihaiadrian> i just want to remove those characters
[12:52:45] <emanuele6> how do you generate the output? how are you using it?
[12:53:12] <emanuele6> just redirecting it to a file?
[12:53:18] <mihaiadrian> (sleep 1; echo "resolve_username myid"; sleep 1; echo "history @myid 1"; sleep 1; echo "quit") | telegram-cli --json -W -N > last_message
[12:53:31] <mihaiadrian> i want to get the last message from a conversation
[12:55:56] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Quit: Leaving)
[12:56:04] <emanuele6> does it not have a -c or -e option pass it commands non interactively?
[12:56:18] <emanuele6> s/pass/to pass/
[12:56:43] <mihaiadrian> no
[12:56:52] <mihaiadrian> i need to write those things in prompt
[12:56:58] <mihaiadrian> in order to get the last message
[12:57:09] *** Joins: arinov (~arinov@213.194.126.155)
[12:57:20] <mihaiadrian> i just want to delete those weird characters xD
[12:58:28] <emanuele6> mihaiadrian: https://github.com/vysheng/tg/blob/6547c0b21b977b327b3c5e8142963f4bc246187a/main.c#L480
[12:59:26] <mihaiadrian> i will try it
[12:59:54] *** Quits: rgrinberg (~textual@187.223.23.238) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[13:00:47] <emanuele6> as far as i can tell ( https://github.com/vysheng/tg/blob/6547c0b21b977b327b3c5e8142963f4bc246187a/loop.c#L793 )
[13:01:09] <emanuele6> you can just use   telegram-cli -e $'resolve_username myid\nhistory @myid 1' --json -W -N > last_message
[13:01:36] <mihaiadrian> emanuele6:
[13:01:40] <mihaiadrian> the same characters appear
[13:01:42] <mihaiadrian> exactly the same
[13:02:04] <emanuele6> well, at least you don't have to pipe
[13:02:15] <mihaiadrian> https://pastebin.com/raw/ZUNzNSWR
[13:02:27] <geirha> what if you pass /dev/null as stdin?   telegram-cli < /dev/stdin -e $'...'
[13:02:34] <mihaiadrian> let me try
[13:02:46] <emanuele6> check if it has a batch mode option or something like that
[13:03:10] <mihaiadrian> same
[13:03:12] <emanuele6> -R disable readline
[13:03:19] <emanuele6> -C disable colours
[13:03:24] <emanuele6> add -R and -C
[13:03:24] <mihaiadrian> will try -R
[13:03:27] <mihaiadrian> ok
[13:03:44] <DynV> emanuele6: for the real case, if the source has subdir, it's not to be copied, and the way I'm trying to run it doesn't seem to help with that as it seems to try to copy it anyway https://pastebin.com/Dj52P4ux
[13:03:44] <pasteban> Paste is available without ads on https://pastebin.com/raw/Dj52P4ux
[13:03:56] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[13:04:05] <mihaiadrian> it works xd
[13:04:13] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[13:04:20] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[13:04:22] <mihaiadrian> but, the problem is i can't split commands by \n
[13:04:35] *** Joins: thiras (~thiras@user/thiras)
[13:04:55] <emanuele6> as far as i can tell from https://github.com/vysheng/tg/blob/6547c0b21b977b327b3c5e8142963f4bc246187a/loop.c#L793,  \n is the delimeter
[13:04:59] <emanuele6> maybe i am wrong
[13:05:14] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[13:05:47] *** Joins: stultusv (~stultusv@user/stultusv)
[13:06:15] <mihaiadrian> i use \n and it reads it as the same command
[13:06:19] <mihaiadrian> so it errors out
[13:06:31] <mihaiadrian> if i use only one command, it's ok
[13:06:33] <mihaiadrian> but i need to use two
[13:06:35] <emanuele6> did you actually use my command line?
[13:06:48] <emanuele6>  $'resolve_username myid\nhistory @myid 1'
[13:06:57] <emanuele6> i am using $'' quotes, not simply '' quotes
[13:07:00] <mihaiadrian> it's ok, don't mind
[13:07:07] <mihaiadrian> to get the last message
[13:07:10] <emanuele6> '\n' is not the same as $'\n'
[13:07:10] <mihaiadrian> works with one command also
[13:07:23] <mihaiadrian> emanuele6: yep, this is how i used it
[13:07:28] *** Quits: sinaowolabi_ (~SinaOwola@160.152.55.191) (Ping timeout: 256 seconds)
[13:08:48] <DynV> emanuele6: I'll keep using the version from ~1 hr ago, it's no issue.
[13:09:37] <emanuele6> i just told you how to add recursion.. if you don't want recursion, obviously, just don't use it.
[13:09:37] *** Quits: joo-_ (~joo-_@fsf/member/joo--) (Ping timeout: 240 seconds)
[13:09:44] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Ping timeout: 256 seconds)
[13:10:18] *** Quits: chenqisu1 (~bhca7d@183.217.201.63) (Ping timeout: 256 seconds)
[13:10:28] *** Quits: Mo (~Mo@dynamic-095-116-178-186.95.116.pool.telefonica.de) (Read error: Connection reset by peer)
[13:10:53] *** Joins: Mo (~Mo@dynamic-095-116-178-186.95.116.pool.telefonica.de)
[13:11:35] <mihaiadrian> emanuele6: thanks a lot man
[13:11:39] <mihaiadrian> it works perfectly :)
[13:11:41] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[13:11:43] <mihaiadrian> really thank you
[13:12:37] *** Joins: libc (~weechat@user/tessio)
[13:14:13] *** Quits: ubique (~ubique@user/ubique) (Ping timeout: 268 seconds)
[13:16:01] *** Joins: lavaball (felix@31.204.155.215)
[13:16:17] *** Quits: Mo (~Mo@dynamic-095-116-178-186.95.116.pool.telefonica.de) (Ping timeout: 240 seconds)
[13:18:17] *** Quits: dsrt^ (~dsrt@64.253.22.77) (Ping timeout: 240 seconds)
[13:19:01] *** Joins: ubique (~ubique@user/ubique)
[13:19:47] <DynV> sorry for the misunderstanding, ty yet another time.
[13:20:11] *** Quits: DynV (~DynV@user/dynv) (Quit: Konversation terminated!)
[13:20:13] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Quit: WeeChat 3.5-dev)
[13:22:06] *** Joins: sinaowolabi (~SinaOwola@41.58.202.218)
[13:23:38] *** Joins: Mo (~Mo@dynamic-095-116-178-186.95.116.pool.telefonica.de)
[13:24:03] *** Joins: loganlee (~Thunderbi@user/loganlee)
[13:31:16] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[13:31:51] *** Joins: shad (~shad@user/shad)
[13:34:15] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Client Quit)
[13:39:30] *** Joins: zaden (~maddx@73.92.207.228)
[13:40:17] *** Quits: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se) (Ping timeout: 240 seconds)
[13:41:27] *** Joins: mithrin (~mithrin@stip-static-62.213-81-207.telecom.sk)
[13:42:35] *** Joins: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se)
[13:47:08] *** Quits: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se) (Ping timeout: 256 seconds)
[13:47:20] *** Joins: rgrinberg (~textual@2806:101e:1:83af:8095:9213:668b:97a8)
[13:48:17] *** Hash_ is now known as Hash
[13:48:56] *** Joins: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se)
[13:49:34] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:49:58] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[13:49:59] *** Quits: libc (~weechat@user/tessio) (Ping timeout: 252 seconds)
[13:52:20] *** Lord_of_Life_ is now known as Lord_of_Life
[13:52:47] *** Joins: op0x0f05 (uid512716@id-512716.tinside.irccloud.com)
[13:54:14] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[13:56:21] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[13:58:14] <wyre> how could I replace an element in an array of strings?
[13:58:59] <emanuele6> !example
[13:58:59] <greybot> Please give us an example of what you want, the input and the output
[13:59:02] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Quit: mihaiadrian)
[13:59:06] <izabera> # arr=({a..z}); arr[7]=meow; declare -p arr
[13:59:08] <shbot> izabera: declare -a arr=([0]="a" [1]="b" [2]="c" [3]="d" [4]="e" [5]="f" [6]="g" [7]="meow" [8]="i" [9]="j" [10]="k" [11]="l" [12]="m" [13]="n" [14]="o" [15]="p" [16]="q" [17]="r" [18]="s" [19]="t" [20]="u" [21]="v" [22]="w" [23]="x" [24]="y" [25]="z")
[13:59:20] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[13:59:39] *** Joins: jinsun__ (~quassel@user/jinsun)
[14:00:37] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 240 seconds)
[14:01:00] *** Joins: stonkey (~stonkey@user/stonkey)
[14:02:05] <wyre> emanuele6, izabera, I've got these two arrays https://bpa.st/E36Q and I have to perform for loops for they separately
[14:02:10] *** Joins: elroo (~elroo@45.133.4.33)
[14:02:14] <wyre> but I'd like to create the second one array from the first one
[14:02:33] *** Joins: andril (~andril@c-66-229-99-96.hsd1.fl.comcast.net)
[14:02:37] <wyre> ups. sorry, wrong paste
[14:02:57] <wyre> this is the right one https://bpa.st/6CCQ
[14:03:11] <wyre> my point is to create the second array by appending the first one at the end
[14:03:33] <izabera> arr1+=("${arr2[@]}")
[14:03:38] *** Joins: jinsun (~quassel@user/jinsun)
[14:03:38] <wyre> but also ... I need to replace "joifi-displays-imx6ull-microgea.ubifs" with "rootfs.ubifs"
[14:04:08] <wyre> in the first one array, and the to add them (or appending the first one to the end of the second one)
[14:04:25] *** Quits: elroo (~elroo@45.133.4.33) (Client Quit)
[14:04:49] *** Joins: elroo (~elroo@45.133.4.33)
[14:04:52] *** Joins: jinsun___ (~quassel@user/jinsun)
[14:05:08] <izabera> right so replace then concatenate
[14:05:52] <wyre> izabera, and how can I do that?
[14:06:15] <Soliton> arr1[42]=replacement
[14:06:31] <izabera> crazy
[14:06:42] *** Quits: elroo (~elroo@45.133.4.33) (Client Quit)
[14:06:55] <wyre> Soliton, have I to use the index? ðŸ¤”
[14:07:17] *** Quits: jinsun__ (~quassel@user/jinsun) (Ping timeout: 240 seconds)
[14:07:19] <emanuele6> for i in "${!arr[@]}"; do if [[ ${arr[i]} == joifi-displays-imx6ull-microgea.ubifs ]]; then arr[i]=rootfs.ubifs; fi; done
[14:07:37] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 240 seconds)
[14:08:11] *** Quits: rgrinberg (~textual@2806:101e:1:83af:8095:9213:668b:97a8) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[14:08:51] <furrymcgee> start with three arrays and concat them as needed
[14:09:22] <izabera> i'll throw in a fourth one for free
[14:09:57] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[14:10:56] *** Quits: mat001_ (~mat001@c-71-202-208-145.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[14:12:18] <wyre> izabera, and could I sum the two arrays in a third one?
[14:12:34] <izabera> yes
[14:12:46] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[14:12:48] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[14:13:14] <wyre> I think it should be something like arr3+=("${arr1[@]}"); arr3+=("${arr2[@]}")
[14:13:16] <wyre> right?
[14:13:43] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[14:13:53] <emanuele6> simply   arr3=( "${arr1[@]}" "${arr2[@]}" )   is also fine
[14:14:54] <emanuele6> or   arr3+=( "${arr1[@]}" "${arr2[@]}" )    if you want to keep the values that arr3 had before the assigment
[14:15:15] <wyre> sure, thank you guys emanuele6, izabera ðŸ˜Š
[14:15:44] <wyre> emanuele6, should not be joifi-displays-imx6ull-microgea.ubifs enquoted? (in your previous example)
[14:16:19] <emanuele6> you can quote it, but there is no reason to do it.
[14:17:10] <emanuele6> there is not any special character in joifi-displays-imx6ull-microgea.ubifs
[14:17:40] *** Joins: jinsun (~quassel@user/jinsun)
[14:18:30] *** Joins: n4dir (~user@i5E8666A3.versanet.de)
[14:19:14] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 260 seconds)
[14:20:13] *** Joins: malina (~malina@user/malina)
[14:21:42] *** Quits: jinsun___ (~quassel@user/jinsun) (Ping timeout: 256 seconds)
[14:23:50] *** Joins: shad (~shad@user/shad)
[14:25:44] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[14:25:50] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Read error: Connection reset by peer)
[14:26:06] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[14:29:02] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 260 seconds)
[14:29:55] *** Quits: dka_ (~code-is-a@ns3059207.ip-193-70-33.eu) (Quit: My Ex-Girlfriend once told me: I'm not a slut, I'm just popular)
[14:31:10] *** Joins: dka (~code-is-a@ns3059207.ip-193-70-33.eu)
[14:32:10] <wyre> emanuele6, I'm having problems to do the replacement as you've said, this is my code https://bpa.st/A2EA
[14:32:24] <wyre> and that's the error I'm having https://bpa.st/LIAQ
[14:33:03] <wyre> which actually complains about line 24 in my paste
[14:33:07] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[14:35:56] <emanuele6> your code is wrong
[14:36:10] <emanuele6> 11:37 <emanuele6> for i in "${!arr[@]}"; do if [[ ${arr[i]} == joifi-displays-imx6ull-microgea.ubifs ]]; then arr[i]=rootfs.ubifs; fi; done
[14:36:15] <emanuele6> for i in "${!arr[@]}
[14:36:23] <emanuele6> not for i in "${arr[@]}"
[14:37:33] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[14:44:11] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Quit: This computer has gone to sleep)
[14:45:10] <emanuele6> wyre: that error is there because you are trying to access elements in img_filenames by their name which is weird
[14:45:23] <emanuele6> you have   file in "${all_filenames[@]}"
[14:45:32] <emanuele6> so file will first be file=zImage
[14:45:57] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[14:46:05] *** Joins: ravan (~ravan@user/ravan)
[14:46:17] <emanuele6> and when you use ${all_filenames[file]}  file will evaluate to zImage which since it is an unset variable will evaluate to 0
[14:46:31] <emanuele6> then at the next iteration file=joifi-displays-imx6ull-microgea.ubifs
[14:46:40] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[14:47:00] <emanuele6> and joifi-displays-imx6ull-microgea.ubifs is not a valid mathematical expression because it contains a .
[14:47:04] <emanuele6> # (( joifi-displays-imx6ull-microgea.ubifs ))
[14:47:05] <shbot> emanuele6: bash: ((: joifi-displays-imx6ull-microgea.ubifs : syntax error: invalid arithmetic operator (error token is ".ubifs ")
[14:47:07] <emanuele6> right?
[14:47:48] <emanuele6> that basically computes joifi - displays - imx6ull - microgea and then there is a .ubifs that is just a syntax error
[14:48:11] <emanuele6> and you are trying to use the result of evalutating that expression as an index to an element in the array
[14:48:30] <emanuele6> that code is not working just because you are not doing it right
[14:49:28] *** Quits: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se) (Ping timeout: 256 seconds)
[14:49:37] *** Quits: skylite_ (~skylite@2E6B2CD6.catv.pool.telekom.hu) (Ping timeout: 240 seconds)
[14:49:41] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Client Quit)
[14:51:12] *** Joins: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se)
[14:52:45] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[14:54:26] <wyre> emanuele6, I see, so I forgot the ! to just use the array indexes, right?
[14:55:27] <emanuele6> wyre: ${arr[@]} means expand to the values of the array $arr, you know?
[14:55:27] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Read error: Connection reset by peer)
[14:56:07] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[14:56:11] <emanuele6> evaluating those as an arithmetic expression is clearly wrong, no?
[14:56:15] <emanuele6> plus i didn't use ${arr[@]} in the code i sent you, i used ${!arr[@]}
[14:56:44] <wyre> sure, thank you ðŸ˜Š
[14:56:45] <emanuele6> so yes, ${arr[@]} is wrong, you should use ${!arr[@]} that expands to the set indices in the array arr
[14:57:56] <bud> isn't it possible to do this also: ${all_filenames[@]//joifi-display-imx6ull-microgea.ubifs/rootfs.ubifs} and skip the loop all together?
[14:58:20] *** Quits: irc_user (uid423822@id-423822.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[14:58:23] <emanuele6> / is a global substitution
[14:58:26] <emanuele6> err
[14:58:28] <emanuele6> /
[14:58:30] <emanuele6> //
[14:58:32] <emanuele6> :)
[14:58:54] <emanuele6> plus joifi-display-imx6ull-microgea.ubifs will match any substring, not just the exact value
[14:59:01] <emanuele6> and these are filenames
[14:59:12] <emanuele6> so you probably really don't want that
[15:00:01] <emanuele6> there is no way to anchor both % and # in the / parameter expansion unfortunately, so no you can't use that
[15:00:36] <bud> whatabout [*]/stuff/new-name}
[15:00:49] <emanuele6> ?
[15:01:14] <emanuele6> what do you mean?
[15:02:30] *** Quits: sinaowolabi (~SinaOwola@41.58.202.218) (Ping timeout: 256 seconds)
[15:02:51] *** Quits: shad (~shad@user/shad) (Ping timeout: 245 seconds)
[15:03:04] <bud> https://0x0.st/-Cv2.txt
[15:03:45] <emanuele6> that is exactly what you wrote before, but with / instead of //
[15:03:53] <bud> yeah
[15:03:54] <emanuele6> / matches any substring
[15:04:01] <emanuele6> not the exact value
[15:04:43] <emanuele6> # a=( labcd dsa abc ); a=( "${a/abc/xyz}" ); declare -p a
[15:04:44] <shbot> emanuele6: declare -a a=([0]="lxyzd")
[15:04:49] <emanuele6> oops
[15:04:52] <emanuele6> # a=( labcd dsa abc ); a=( "${a[@]/abc/xyz}" ); declare -p a
[15:04:53] <shbot> emanuele6: declare -a a=([0]="lxyzd" [1]="dsa" [2]="xyz")
[15:05:19] <emanuele6> the first joifi-displays-imx6ull-microgea.ubifs substring of every element will be substituted
[15:05:28] <emanuele6> not just the elements that are joifi-displays-imx6ull-microgea.ubifs
[15:05:34] <emanuele6> it is not the same thing as the loop
[15:06:21] <bud> but there are no other substring matches in the example, since it is an explicit complete filename including extension.
[15:06:30] *** Joins: seninha (~seninha@user/seninha)
[15:06:53] <emanuele6> these are filenames, you can't just substitute random substrings in all the filenames
[15:07:09] <emanuele6> this literally has no benefit and just makes your code worse
[15:07:10] <bud> ok
[15:08:32] <emanuele6> if you could do something like "${a/=abc/xyz}" to only match exactly abc, sure
[15:09:13] *** Joins: earnestly (~earnest@user/earnestly)
[15:09:14] <emanuele6> but since you can only either match a substring /abc, a prefix /#abc or a suffix /%abc, you should not do this
[15:09:25] <bud> [[ ${a[*]} =~ ([[:space:]]abc[[:space:]]) ]]
[15:09:47] <bud> or i guess ]](abc)[[
[15:09:54] <wyre> emanuele6, well, I actually just wan to modify the basename, the .ubifs extension is right
[15:11:00] <emanuele6> so every *.ubis file should become rootfs.ubifs?
[15:11:11] <wyre> emanuele6, not, just the one I want
[15:11:11] <emanuele6> even if there are many different ubis file?
[15:11:13] <emanuele6> why?
[15:11:21] <emanuele6> wyre: then use a loop.
[15:11:49] *** Joins: shad (~shad@user/shad)
[15:11:59] <wyre> hmm, actually there is a single .ubifs file, but sure, I also think the loop is cleaner ðŸ˜‰
[15:12:43] <emanuele6> the loop is correct, anything but a loop to match an exact value is broken.
[15:14:18] <wyre> emanuele6, this is the whole script ðŸ˜Š https://bpa.st/GIEA
[15:14:59] <emanuele6> !check
[15:15:00] <checkbot> wyre: Line 53: In POSIX sh, indirect expansion is undefined. Line 53: In POSIX sh, array key expansion is undefined. Line 54: In POSIX sh, [[ ]] is undefined. See https://shellcheck.net/?id=cb87100 for all 24 issues.
[15:15:22] <emanuele6> you are using arrays in a /bin/sh script
[15:15:47] <emanuele6> should be a bash script
[15:16:57] <emanuele6> also:   case ${var:0:1} in Y|y) ...;; *) ...; esac
[15:17:15] <emanuele6> can just be   case $var in [Yy]*) ...;; *) ...; esac
[15:17:53] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[15:18:34] *** Joins: thiras (~thiras@user/thiras)
[15:18:37] *** Quits: andril (~andril@c-66-229-99-96.hsd1.fl.comcast.net) (Ping timeout: 240 seconds)
[15:21:01] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[15:22:09] *** Joins: unop (~unop@194.154.249.71)
[15:23:00] <wyre> emanuele6, thank you very much I guess ... better now, right? https://bpa.st/AHCQ
[15:23:11] <wyre> hmm, I'm curious, what's the problem with arrays in sh?
[15:23:20] <emanuele6> !check
[15:23:21] <checkbot> wyre: Line 19: read without -r will mangle backslashes. Line 72: read without -r will mangle backslashes. See https://shellcheck.net/?id=cb87600
[15:23:26] <emanuele6> !-r
[15:23:26] <greybot> Always use read with the -r option, otherwise backslashes are special. http://wiki.bash-hackers.org/commands/builtin/read#read_without_-r
[15:23:46] <emanuele6> always use read-r see above
[15:24:04] <wyre> emanuele6, read-r or read -r?
[15:24:12] <emanuele6> also you are using -n1, but you probably want -N1
[15:24:18] <emanuele6> wyre: with a space
[15:24:18] <wyre> could I use 'read -s -r -n 1 answer'?
[15:24:32] <emanuele6> right, but with -N
[15:24:51] <emanuele6> -n is subtly different from -N and you probably want -N
[15:25:07] <emanuele6> # help read
[15:25:07] <shbot> emanuele6: read: read [-ers] [-a array] [-d delim] [-i text] [-n nchars] [-N nchars] [-p prompt] [-t timeout] [-u fd] [name ...] -- http://ix.io/aQc
[15:25:09] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Quit: This computer has gone to sleep)
[15:25:39] <Soliton> they're checking against empty afterwards.
[15:26:09] <Soliton> would have to check for a newline then.
[15:26:54] <wyre> I can't see this info in my read manpage ðŸ¤”
[15:27:06] <emanuele6> ah, then i guess -n is fine
[15:27:07] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[15:27:13] <emanuele6> !man
[15:27:13] <greybot> bash builtins and keywords do not have separate man-pages, read bash's manual instead or use the help builtin. Rule of thumb: If ''type foo'' says foo is a builtin or keyword, run ''help foo'' or ''man bash'', otherwise try man and/or info.
[15:27:49] <wyre> oh, so I guess this manpage is for another tool also called read which is not the built-in read in bash
[15:28:03] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[15:28:15] <emanuele6> right, probably the posix definition of the read command for posix sh
[15:29:42] *** Joins: jinsun (~quassel@user/jinsun)
[15:29:52] <emanuele6> which is not what bash uses
[15:29:59] <wyre> how can I read the manpage for builtins?
[15:30:08] <emanuele6> man bash
[15:30:15] <emanuele6> or use the help command
[15:30:26] <wyre> I can't see there any match for 'read' string
[15:30:28] <emanuele6> as the !man factoid above says..
[15:30:46] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[15:31:03] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[15:31:10] <Soliton> you've read through the bash manpage and did not see a description of read?
[15:31:22] <emanuele6> wyre: i can see 109
[15:31:27] <emanuele6> $ PAGER=cat man bash | grep -c '\<read\>'
[15:31:30] <emanuele6> 109
[15:32:12] *** Joins: malina (~malina@user/malina)
[15:32:31] <bud> https://www.gnu.org/software/bash/manual/html_node/Bash-Builtins.html#index-read
[15:33:04] <wyre> yes, I can see it now, thank you
[15:33:42] <wyre> there is a whole section for BASH BUILTIN COMMANDS
[15:33:59] *** Joins: zeden (~zeden@user/zeden)
[15:34:54] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:c545:211c:aaf8:e74)
[15:34:54] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:c545:211c:aaf8:e74) (Changing host)
[15:34:54] *** Joins: skapata (~Skapata@user/skapata)
[15:38:26] *** Joins: pmercado (~pmercado@186.107.51.181)
[15:41:18] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[15:44:52] *** Quits: put_in (~put_somew@113.173.227.246) (Quit: Leaving)
[15:44:54] *** Quits: ztx (~ztx@user/ztx) (Quit: ztx)
[15:45:49] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[15:45:56] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 268 seconds)
[15:46:42] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[15:47:11] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[15:47:44] <wyre> well, I guess right now is fine https://bpa.st/TLEA emanuele6 ðŸ˜Š shellcheck doesn't complain about it, hehe
[15:48:00] <wyre> but I'm still curious about the arrays thing in sh shell ðŸ¤”
[15:48:04] <emanuele6> !check
[15:48:04] <checkbot> emanuele6: Looks good to me
[15:48:11] <emanuele6> looks good
[15:48:35] *** Joins: jinsun (~quassel@user/jinsun)
[15:49:15] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[15:50:31] <emanuele6> wyre: arrays are bash feature, not an sh feature
[15:51:02] <wyre> emanuele6, then ... why the script worked when shebang was #!/bin/sh?
[15:51:09] <emanuele6> because you sh is bahs
[15:51:15] <emanuele6> err
[15:51:19] <emanuele6> because your sh is bash
[15:51:21] <wyre> oh, I see
[15:51:27] <emanuele6> but on debian, sh would be dash
[15:51:36] <emanuele6> and dash does not have arrays
[15:52:14] <emanuele6> on other systems it could be ksh93, zsh, mksh, etc.
[15:52:21] *** Joins: libc (~weechat@user/tessio)
[15:52:25] *** Joins: nokturil (~nokturil@fbi241.internetdsl.tpnet.pl)
[15:52:26] <wyre> that was just so simple ðŸ˜† ... But I don't know how people could work without arrays in the past ðŸ˜†
[15:52:55] <emanuele6> shell arrays have been around for at least 30 years.
[15:53:31] <emanuele6> wyre: the issue is not mainly about arrays
[15:53:38] <emanuele6> you are writing bash specific code
[15:53:51] *** Joins: seninha (~seninha@user/seninha)
[15:53:54] <emanuele6> e.g. mksh supports arrays just like bash
[15:54:13] <emanuele6> but in bash    a=b x=(y z)   is valid
[15:54:17] <emanuele6> in mksh it is not
[15:54:25] <wyre> oh, I know the only problem is not with arrays
[15:54:43] <emanuele6> if you write bash specific code, you should use a bash shebang
[15:54:54] <emanuele6> if you write zsh specific code, you should use a zsh shebang
[15:54:56] <emanuele6> etc
[15:55:32] <wyre> but I just was wondering if ... native sh or early versions for all those replacements like (dash, mksh, etc..) doesn't have arrays support ... how people could work in the pass without this ðŸ˜†
[15:55:41] <wyre> s/pass/past/
[15:55:54] <emanuele6> ( in mksh, array assignments cannot be joined with regular variable assignments, i.e. you need a semicolon:   a=b; x=(y z) )
[15:56:39] <emanuele6> sh is not an old standard, the latest specification of POSIX is 2018
[15:57:11] <emanuele6> !crap
[15:57:11] <greybot> The overwhelming majority of bash scripts, code, tutorials, and guides on the Internet are crap. Sturgeon was an optimist.
[15:57:15] <wyre> emanuele6, so ... why people developing the standard still keep arrays outside of it? ðŸ¤”
[15:57:23] <emanuele6> people don't write safe sh code anyway
[15:57:43] <emanuele6> wyre: because shells have implemented them slightly differently for years
[15:57:47] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Quit: This computer has gone to sleep)
[15:57:51] <emanuele6> so it would just piss of everyone
[15:58:19] <emanuele6> it's too late to add arrays to POSIX sh in my opinion
[15:58:44] <wyre> emanuele6, so the thing is with POSIX more than with sh, right?
[15:59:04] <emanuele6> sh is not a shell..
[15:59:09] <emanuele6> sh is the base language
[15:59:12] <wyre> wow
[15:59:13] <Soliton> when people say sh they usually mean a POSIX conformant shell.
[15:59:24] <wyre> I didn't know that ...
[15:59:25] <emanuele6> and there are various implementations of sh that add extensions
[15:59:34] <emanuele6> bash is an implementation of sh
[15:59:38] <wyre> I thought sh was the first version of a functional shell
[15:59:56] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[16:00:02] <emanuele6> POSIX standardises the sh language
[16:00:08] <wyre> but there wasn't a old (and abandoned) shell called just sh?
[16:00:09] *** Quits: ubique (~ubique@user/ubique) (Quit: .)
[16:00:18] <emanuele6> it also standardises awk, sed, etc
[16:00:26] <emanuele6> so there are POSIX awk, POSIX sed, etc
[16:00:32] <emanuele6> and those are standards
[16:00:43] <emanuele6> and then there are various implementations of these languages
[16:00:50] <wyre> I mean ... it wasn't sh the Bourne shell?
[16:00:53] <emanuele6> e.g. gawk (GNU awk), nawk, mawk, etc
[16:01:18] <emanuele6> POSIX sh is based on the Bourne shell, but it is quite different
[16:01:25] <emanuele6> word splitting works differently
[16:01:39] <Soliton> well, POSIX is based on ksh.
[16:01:50] <emanuele6> yeah
[16:01:56] <emanuele6> older ksh
[16:02:01] <emanuele6> # IFS=x; var=axbxc; echo $var; echo axbxc
[16:02:02] <shbot> emanuele6: a b c
[16:02:02] <shbot> emanuele6: axbxc
[16:02:09] <emanuele6> this is the output of this code in POSIX sh
[16:02:11] <emanuele6> b# IFS=x; var=axbxc; echo $var; echo axbxc
[16:02:12] <shbot> emanuele6: a b c
[16:02:12] <shbot> emanuele6: a b c
[16:02:18] <emanuele6> this is the output in bourne
[16:03:26] <emanuele6> wyre: here is the POSIX specification for the sh language if you want to read it https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18
[16:04:43] *** Quits: Libero (~Libero@77.49.184.64.dsl.dyn.forthnet.gr) (Remote host closed the connection)
[16:05:10] *** Joins: Libero (~Libero@77.49.184.64.dsl.dyn.forthnet.gr)
[16:06:02] *** Quits: libc (~weechat@user/tessio) (Quit: WeeChat 3.2)
[16:06:53] *** Joins: timj (~timj@user/timj)
[16:07:03] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[16:08:27] *** Joins: irrgit (~irrgit@192.241.175.183)
[16:08:36] *** Quits: zeraphel (~zeraphel@5.29.16.50) (Quit: zeraphel)
[16:10:15] *** Quits: Libero (~Libero@77.49.184.64.dsl.dyn.forthnet.gr) (Remote host closed the connection)
[16:10:15] *** Quits: Mo (~Mo@dynamic-095-116-178-186.95.116.pool.telefonica.de) (Quit: Leaving)
[16:10:39] *** Joins: Libero (~Libero@77.49.184.64.dsl.dyn.forthnet.gr)
[16:11:04] *** Quits: unixman_home (~unixman2@237-123-35-72.mtaonline.net) (Ping timeout: 256 seconds)
[16:12:27] *** Quits: Libero (~Libero@77.49.184.64.dsl.dyn.forthnet.gr) (Max SendQ exceeded)
[16:12:32] *** Joins: unixman_home (~unixman2@161-220-137-216.mtaonline.net)
[16:12:48] <xx> b# IFS=c; var=axbxc; echo $var; echo axbxc
[16:12:54] <shbot> xx: e: not found
[16:12:54] <shbot> xx: e: not found
[16:12:54] <shbot> xx: e: not found
[16:12:59] <xx> huh
[16:13:11] <Soliton> echo contains c
[16:13:20] <emanuele6> e ho axbx
[16:13:22] <xx> that's what I wanted to test
[16:13:28] <xx> oh I see
[16:13:47] <xx> but why is the output there 3 times?
[16:14:18] <emanuele6> b# IFS=c; var=axbxc; echo $var;
[16:14:18] <shbot> emanuele6: syntax error: `;;' unexpected
[16:14:30] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 260 seconds)
[16:15:35] * xx is very confused, but is glad that bash exists and is a little more sane than that
[16:16:12] <emanuele6> if you run   b# IFS=c; var=axbxc; echo $var   you get this: http://ix.io/3J26
[16:17:01] <emanuele6> it seems to call `e ho o' at the end
[16:17:17] <emanuele6> also it seems to be waiting for input
[16:17:22] <wyre> I guess you are using b# to run code as sh would do, right? (is 'b' because of bourne?)
[16:17:49] <emanuele6> xx: i think it is just a bug of the command line, not necessarily a bourne feature
[16:17:50] <wyre> sh implementations like ksh, I mean
[16:17:55] <wyre> or dash
[16:17:59] <Soliton> b# is bourne which is not a POSIX shell.
[16:17:59] <emanuele6> # triggers
[16:18:00] <shbot> emanuele6: Available triggers: +# bash-devel; 1# bash-1.14; 2# bash-2.05b; 32# bash-3.2; 3# bash-3.2; 42# bash-4.2; 43# bash-4.3; 44# bash-4.4; 4# bash-4.4; 50# bash-5.0; 51# bash-5.1; 5# bash-5.1; # bash-5.1; d# dash-0.5.9; sh# dash-0.5.9; k# ksh 93u+ 2012-08-01; m# mksh R59 2021/01/24; b# bourne; j# bourne(w/job);
[16:18:01] <shbot> Soliton: is: not found
[16:19:06] <wyre> oh, so Bourne shell is not POSIX compliant?
[16:19:08] <wyre> wow
[16:19:16] <xx> it predates posix
[16:19:40] <emanuele6> posix is not that old
[16:19:54] <emanuele6> it has existed only since the mid 90s i think
[16:20:12] <xx> bourne shell is 42 years old, whereas posix is only 33 years old
[16:20:24] <xx> ...
[16:20:25] *** Joins: CaCode (~CaCode@user/cacode)
[16:20:29] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[16:20:32] <xx> when did we get so old? It feels like yesterday.
[16:20:37] <bud> didn't it take them 5 years or something to agree on the first POSIX
[16:20:44] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[16:20:47] <boreas> sh# date
[16:20:48] <shbot> boreas: Tue Dec 21 12:50:47 UTC 2021
[16:20:57] <bud> the name POSIX was suggested by RMS
[16:20:58] <boreas> sh# date
[16:20:59] <shbot> boreas: Tue Dec 21 12:50:58 UTC 2021
[16:21:00] <emanuele6> wyre: bourne is not even the first sh-like shell
[16:21:05] <boreas> b# date
[16:21:06] <shbot> boreas: Tue Dec 21 12:51:06 UTC 2021
[16:21:14] <emanuele6> there was the thompson shell before bourne  https://en.wikipedia.org/wiki/Thompson_shell
[16:21:51] <emanuele6> xx: yeah, i think the commandline of b# glitches if it can't find a command
[16:22:18] <emanuele6> b# cp /bin/echo /bin/e; IFS=c; var=axbxc; echo $var; echo axbxc
[16:22:23] <xx> yeah, it struck me as odd, I kept wondering where the 3rd one came from
[16:22:25] <shbot> emanuele6: ho axbx
[16:22:25] <shbot> emanuele6: ho axbx
[16:22:34] <wyre> thank you guys, I think I'll read something like this https://developer.ibm.com/tutorials/l-linux-shells/
[16:22:37] *** Joins: hentai (~hentai@user/hentai)
[16:22:47] <wyre> to know more about shells history ðŸ˜‰
[16:22:49] <emanuele6> if you make it so it can find a `e' command it does not add the extra stuff at the end
[16:23:28] <bud> >Originally, the name "POSIX" referred to IEEE Std 1003.1-1988, released in 1988... Before 1997, POSIX comprised several standards
[16:24:29] <bud> the shell posix standard, (POSIX.2) was presented 1992
[16:26:11] <bud> apparently macOS is POSIX-certified, but not linux or openBSD
[16:27:28] <tirnanog> a couple of distributions are, though not anything mainstream. Huawei EulerOS was one as I recall.
[16:28:00] *** Joins: CaCode_ (~CaCode@user/cacode)
[16:28:00] <bud> https://0x0.st/-Cvh.png
[16:28:08] <bud> https://en.wikipedia.org/wiki/POSIX#Versions
[16:28:27] <emanuele6> i know mac os has these http://ix.io/3Fos
[16:28:49] <emanuele6> this is the kind of of stuff that gives you POSIX compliance, lol
[16:29:01] <tirnanog> indeed, it's quite amusing.
[16:29:30] <bud> $$$ <- this is the kind of stuff that gives you posix
[16:30:13] <hentai> Can I theoretically make bash use sqlite as a history backend?
[16:30:41] <bud> theoretically, anything is possible
[16:30:41] <Soliton> bash is open source. you can change it however you like.
[16:30:54] *** Quits: CaCode (~CaCode@user/cacode) (Ping timeout: 256 seconds)
[16:31:09] <hentai> I mean, without recompiling. Is it within reach of plugins?
[16:31:50] <hentai> My current solution is using HISTTIMEFORMAT and cron dumping the history into the db. This is an ugly solution
[16:31:53] <Soliton> how do you make a plugin without compiling?
[16:32:16] <hentai> Soliton, "Without maintaining my own branch of bash" I meant
[16:33:28] *** Quits: boreas (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2) (Remote host closed the connection)
[16:34:11] <hentai> Any handle alike command_not_found_handle I can abuse for those nefarious purposes?
[16:34:14] <Soliton> what is easy to do is put whatever command you like in PS1 or PROMPT_COMMAND and do whatever you want with history entries.
[16:34:36] <hentai> Oh, somehow did not think of that
[16:37:14] <Blondie101010> why do you guys store command history in a DB?
[16:38:18] <emanuele6> sqlite all the things
[16:38:34] <hentai> Blondie101010, Centralization
[16:38:57] <Blondie101010> I can only see that as useful if secured
[16:39:04] <Blondie101010> which is not the case of command line history
[16:39:32] *** Joins: mat001 (~mat001@c-69-181-156-104.hsd1.ca.comcast.net)
[16:40:00] <emanuele6> also a sqlite database is a local file, not a network database (like postresql or mysql), so i don't get how it is more centralised than just a bash history file
[16:40:13] <hentai> Blondie101010, Once I understand how to do it with sqlite, I am certain I can then readapt it to postgresql
[16:40:25] <Blondie101010> it still won't be secured
[16:40:41] *** Quits: luva (~luva@37.120.197.44) (Quit: Ping timeout (120 seconds))
[16:41:02] *** Joins: luva (~luva@37.120.197.44)
[16:41:04] <hentai> Blondie101010, What do you understand as "secured"? The history? The database? The access credentials?
[16:41:16] <Blondie101010> the user can change / hide their commands
[16:41:51] <hentai> Blondie101010, I don't care about user being able NOT to submit commands to the database, as long as it is intentional
[16:42:07] *** Joins: sublim20 (~sublim20@user/sublim20)
[16:43:06] <Blondie101010> can't say it's useless, but it seems like a greater risk than benefit
[16:43:24] <hentai> Blondie101010, Risk of what? History disclosure?
[16:43:31] <hentai> Database compromise?
[16:43:46] <Blondie101010> log it and then look for your private information in it :)
[16:44:19] <hentai> I am certain that my db is as secure as the HISTFILE
[16:44:45] <Blondie101010> well I don't understand your use case
[16:44:46] <hentai> All I want, is a slightly different way of accessing it
[16:44:57] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 240 seconds)
[16:45:34] <hentai> Blondie101010, I like sqlite.
[16:45:46] <Blondie101010> ok :)
[16:46:11] <hentai> Blondie101010, It is a format I like, and am used to work with
[16:46:34] <hentai> Unlike having to manually parse HISTFILE, or use the "history" built-in
[16:46:43] <vancz> can i break my shell by setting IFS empty somehow?
[16:46:49] <Blondie101010> so instead of searching for it in a bash-like fashion, you prefer to run queries on it
[16:47:22] <Blondie101010> vancz:  no, but it's annoying
[16:47:26] <hentai> Blondie101010, This sounds embarrassing, but yes, I prefer my bash history as a sqlite table
[16:47:36] <Blondie101010> well it does break anything you do that expects some IFS
[16:48:00] <vancz> so IFS doesnt apply to basic word splitting? what does it apply to?
[16:48:06] <Blondie101010> it does
[16:48:07] <hentai> vancz, By doing anything, you break an unlimited amount of things
[16:48:17] <hentai> "Halting problem" that is
[16:48:19] <vancz> hentai: heh
[16:48:39] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[16:48:52] <Soliton> !wordsplitting
[16:48:52] <greybot> echo $foo; rm $foo -- If you leave $foo unquoted, bash will *remove* all whitespace (newlines, spaces, tabs) while expanding it, take each *word* as a separate argument. `echo` prints these words separated by one space and `rm` deletes each word. So ALWAYS *quote* your parameter expansions: echo "$foo" -- http://mywiki.wooledge.org/WordSplitting
[16:49:00] <hentai> You at very least break everything what presumed you not to do it
[16:49:08] *** Joins: tejr_ (~tejr@user/tejr)
[16:49:54] <Blondie101010> vancz:  if you change it just to see what it could break, then it will certainly break things
[16:50:08] <Blondie101010> but changing it can be intended
[16:50:59] *** Joins: ano (~ano@user/ano)
[16:51:03] <vancz> " If the value of IFS is null, no word splitting occurs."
[16:51:05] <Blondie101010> I sometimes change my IFS to test out some scripting algos
[16:51:08] <vancz> how do I do that? IFS=''?
[16:51:15] <Blondie101010> sure
[16:51:17] <Soliton> unset IFS
[16:51:23] <vancz> Soliton: thats different
[16:51:30] <Soliton> exactly
[16:51:40] <vancz> "If IFS is unset, or its value is exactly <space><tab><newline>, the default, then any sequence of IFS characters serves to delimit words. "
[16:51:51] <Soliton> it acts like the default.
[16:52:08] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[16:52:41] <vancz> ok so what im actually wondering is why IFS='' doesnt break stuff like echo hi
[16:53:03] <Soliton> IFS does not apply to anything there.
[16:53:08] <Blondie101010> try it....  start a new shell, as a way to escape from it easily
[16:53:39] <Soliton> IFS does not change the syntax of the shell.
[16:53:45] <furrymcgee> are tcp connections closed before HISTFILE?
[16:53:49] <furrymcgee> export HISTFILE=/dev/tcp/localhost/12345
[16:53:56] <Blondie101010> it's not called Internal Field Separator for nothing
[16:54:02] <Soliton> it changes how unquoted expansions and read behave.
[16:54:28] <Blondie101010> it's a core command line parsing component
[16:55:58] *** Joins: riskoir (~karaixx@user/riskoir)
[16:56:09] <earnestly> vancz: You can quite easily use the shell with IFS set to '', properly used there are not many places where wordsplitting is used and for the rare cases it is, IFS can be set temporarily
[16:56:12] <vancz> oh i guess thats covered by "Word splitting is performed on the results of almost all unquoted expansions. "
[16:56:35] <earnestly> Such as IFS=' ' read -r f1 f2 f3 ...
[16:56:40] <vancz> of its easier to interpret that correctly after the fact
[16:56:54] <riskoir> hi, I have a function like this: function foo() { declare -r BAR="BAZ"; eval script2.sh }. How can I make variable BAR to be accessible in script2 ?
[16:57:13] <earnestly> riskoir: export it
[16:57:19] <Soliton> what is that eval for?
[16:57:19] *** Joins: pj (~pj@ghettoforge/pj)
[16:57:32] <riskoir> earnestly, I see, declare -x seems to work.
[16:57:35] <earnestly> Yes, I'd question everything else as well besides that
[16:57:40] <Soliton> it looks cool i guess.
[16:58:13] <Soliton> perhaps you want: BAR=BAZ script2
[16:58:32] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[16:58:36] <Soliton> !readonly
[16:58:36] <greybot> Variables marked readonly (declare -r) are intended to be used with a restricted shell, to stop you from trivially changing PATH to escape the restrictions (etc.). They were never intended to be widely used in scripts. If you try, you will see odd results (-r at a global scope is passed down to local scopes).
[16:59:12] <riskoir> Soliton, is it possible to do something like that but with eval ?
[16:59:23] <Soliton> to do what?
[16:59:35] <Soliton> your eval there does nothing.
[16:59:43] <riskoir> BAR=BAZ eval script2
[17:00:05] <earnestly> riskoir: You don't need eval
[17:00:08] <Soliton> BAR=BAZ script2
[17:00:09] *** Joins: libc (~weechat@user/tessio)
[17:00:25] <earnestly> (Or ./script2 if it's not in PATH)
[17:00:27] <libc> is there a way to do sudo for ... ?
[17:00:35] <riskoir> -r does not work, only -x. This code is not mine, so I am reluctant in removing the eval
[17:00:41] <Soliton> sudo is not a shell. use a shell if you want to use for.
[17:00:44] <tirnanog> libc: for is a builtin so no.
[17:00:50] <earnestly> libc: no, sudo is a bernstein chain and expects a command that can be execve'd
[17:00:55] <tirnanog> or a keyword, even.
[17:01:02] *** Quits: kdc (~kdc@196.211.197.159) (Remote host closed the connection)
[17:01:10] <libc> sudo -i and then for then ...
[17:01:10] <Soliton> riskoir: the code you pasted is mostly non-sense. who knows what the goal is.
[17:01:11] <libc> thanks
[17:01:14] <tirnanog> libc: if you want to execute a shell with sudo, then you tell it to execute a shell, basically.
[17:01:15] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[17:01:26] <earnestly> libc: Conceptually you would need to use sudo sh -c ...
[17:01:28] <wwallace> !pe
[17:01:28] <greybot> Parameter Expansion expands parameters: "$foo", "$1". You can use it to perform string or array operations: "${file%.mp3}", "${0##*/}", "${files[@]: -4}". They should *always* be quoted. See: http://mywiki.wooledge.org/BashFAQ/073 and "Parameter Expansion" in man bash. Also see http://wiki.bash-hackers.org/syntax/pe.
[17:01:51] *** Quits: libc (~weechat@user/tessio) (Client Quit)
[17:01:55] <vancz> wow. does ANYTHING in bash work as intended? <Soliton> !readonly
[17:02:04] *** Quits: xx (~xx@user/xx) (Ping timeout: 256 seconds)
[17:02:13] <vancz> also is the bot database readable anywhere?
[17:02:16] *** Joins: betuxy (~betuxy@p579ad46c.dip0.t-ipconnect.de)
[17:02:25] <Soliton> !greybot
[17:02:25] <greybot> I'm a bot. I'm written in perl. My source, factoids, and stats are at http://wooledge.org/~greybot/ . See !help for a list of my commands. git mirror https://github.com/im14/greybot
[17:02:31] <vancz> thanks
[17:02:39] <earnestly> vancz: The shell's design is largely 'evolved' and many of the features were designed for cases that no longer apply
[17:03:19] <vancz> noone should learn bash as a first language and yet here we are
[17:03:44] <Soliton> bash is not a general purpose programming language.
[17:03:56] *** Quits: riskoir (~karaixx@user/riskoir) (Quit: Leaving)
[17:04:15] <Blondie101010> "general purpose" is too general for any language
[17:04:32] <hentai> Soliton, However, it is a programming language used for general (posix) purposes
[17:04:44] <vancz> im trying to take it seriously but its hard not to recoil in horror after every other sentence in here
[17:04:50] <Soliton> !weakness
[17:04:51] <greybot> http://mywiki.wooledge.org/BashWeaknesses
[17:04:54] <earnestly> vancz: the shell is a command language, used to compose idiocyncratic tools
[17:05:11] <earnestly> vancz: I would not, even though it seems minor, call it a 'programming language'
[17:05:14] <Blondie101010> vancz:  no one will try to sell you bash as the ultimate programming tool
[17:05:31] <vancz> ive been putting off reading the guide for years and i finally got around to it
[17:05:43] *** Joins: LoremIpsum (~loremIpsu@2a02:c7f:140c:9d00:17e4:7f96:a8f8:1919)
[17:05:46] * hentai sells CDs with bash, writing "ultimate programming tool" on them
[17:05:49] <earnestly> The shell, properly used, is extremely powerful and better than most common solutions even in high performance situations
[17:06:01] <earnestly> But, it's not exactly using the shell, it's using the shell to connect real programs together
[17:06:08] <vancz> im not so much salty that its not a general purpose language or whatever, as salty that literally anything i do will shoot me in the foort
[17:06:12] <hentai> earnestly, When used improperly, it is even more powerful
[17:06:22] <earnestly> Even just using jq makes slicing up websites the most pleasant experience
[17:06:29] <vancz> yeah
[17:06:42] <earnestly> Understand what it is so that you can play to its strengths
[17:06:47] <vancz> whats that epigram about BASIC?
[17:06:51] <earnestly> Don't try to make it do something it wasn't designed for
[17:07:00] <earnestly> (Like programming)
[17:07:02] <Soliton> vancz: it has its quirks but it's a fairly small language. not that hard to learn its quirks if so inclined.
[17:07:10] *** Joins: libc (~weechat@user/tessio)
[17:07:12] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 276 seconds)
[17:07:45] <vancz> that doesnt seem so easy, but maybe it will trickle out of some more learning... <earnestly> Understand what it is so that you can play to its strengths
[17:07:48] <earnestly> vancz: The wooledge article on bashpitfalls is the best place to start imo
[17:07:57] <vancz> yeah i have that open now
[17:08:13] <earnestly> I always learn new tools by understanding what it's bad at
[17:08:19] *** Quits: michigan (uid507982@id-507982.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:08:21] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[17:08:35] <vancz> im not sure i have a "feel" for judging stuff like that
[17:08:36] <Blondie101010> vancz:  just keep your shell scripting as simple as possible, until you have real requirements to go a bit beyond it
[17:09:04] <earnestly> vancz: Because once you know programming, everything is universal and possible.  The scope is then what cannot be done rather than what can
[17:09:07] <vancz> Blondie101010: thats the thing, i get the impression even the simple stuff is broken in odd ways / there is nothing simple in bash
[17:09:08] <Blondie101010> if you need to run some command with a variable parameter in a loop, you don't need to go do it in C and compile it
[17:09:24] <Blondie101010> vancz:  that's simply due to lack of experience
[17:09:33] <Blondie101010> don't be afraid, experiment
[17:10:12] <vancz> its not so much that im afraid of breaking something, but that im afraid ill forget an edge case somewhere
[17:10:23] <Blondie101010> to do what?
[17:10:31] <earnestly> vancz: (All the weird designs make sense once you grok it, and realise that it's a consequence of the nature of a shell.)
[17:10:41] <earnestly> vancz: shellcheck will warn you, use it
[17:10:48] <vancz> im not sure ill ever grok it
[17:10:48] <wwallace> How do i get just the number that starts with 2021 of this file name and use it as a var?   IMGSOAA_PPD_IE21_202103271746_C_0001.zip
[17:10:49] *** Joins: humky (~humky@user/humky)
[17:10:52] <vancz> yeah shellcheck is cool
[17:11:04] *** Joins: michigan (uid507982@id-507982.ilkley.irccloud.com)
[17:11:34] <vancz> is there some sort of test suite that can catch stuff or is that basically shellcheck
[17:11:42] <vancz> is there a list of stuff shellcheck cant catch?
[17:11:48] <earnestly> vancz: The rest is just experience/knowledge (though keep in mind that knowledge can come quickly or slowly; there are people who've used linux for 21 years and know next to nothing)
[17:11:48] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[17:12:03] <vancz> (e.g. https://github.com/minimaxir/big-list-of-naughty-strings )
[17:12:23] <earnestly> vancz: shellcheck is heuristic, because it's a shell and not a programming language, so the list expands.  You can see issues on github for some
[17:12:36] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:12:43] *** Quits: libc (~weechat@user/tessio) (Quit: WeeChat 3.2)
[17:12:56] <earnestly> But it's very good
[17:12:58] <Soliton> # var=IMGSOAA_PPD_IE21_202103271746_C_0001.zip date=${var#IMGSOAA_PPD_*_} date=${date%%_*}; echo "$date" # wwallace
[17:12:59] <shbot> Soliton: 202103271746
[17:13:00] <earnestly> And you can always ask here
[17:13:20] <wwallace> Thanks Soliton.
[17:13:33] <vancz> huh, you can glob in those expansions? didnt think of that
[17:13:43] <earnestly> !pe
[17:13:43] <greybot> Parameter Expansion expands parameters: "$foo", "$1". You can use it to perform string or array operations: "${file%.mp3}", "${0##*/}", "${files[@]: -4}". They should *always* be quoted. See: http://mywiki.wooledge.org/BashFAQ/073 and "Parameter Expansion" in man bash. Also see http://wiki.bash-hackers.org/syntax/pe.
[17:18:40] *** Joins: koki (~koki@host-87-2-49-221.retail.telecomitalia.it)
[17:20:08] *** Parts: koki (~koki@host-87-2-49-221.retail.telecomitalia.it) ()
[17:20:44] *** Joins: unop (~unop@194.154.249.71)
[17:23:04] *** Joins: koki (~koki@host-87-2-49-221.retail.telecomitalia.it)
[17:25:13] *** Quits: stultusv (~stultusv@user/stultusv) (Remote host closed the connection)
[17:27:17] *** Joins: son0p (~ff@181.136.122.143)
[17:30:26] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[17:32:20] <furrymcgee> export HISTFILE=/dev/tcp/localhost/12345 ?
[17:32:26] *** Quits: john1_ (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Ping timeout: 245 seconds)
[17:32:37] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[17:33:50] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[17:34:28] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[17:35:12] <vancz> furrymcgee: you could try it / strace it, if you know how to do that
[17:36:19] <vancz> i dont really know how socket files work but you could also try using socat to create a socket and connect it to the netowkr
[17:36:20] *** Joins: cdown_ (~cdown@163.114.131.1)
[17:36:22] <vancz> network
[17:36:28] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[17:36:45] *** Joins: Minvera (~Minvera@162.223.44.49)
[17:36:52] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[17:38:37] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 240 seconds)
[17:38:39] *** cdown_ is now known as cdown
[17:41:18] <furrymcgee> stat("/dev/tcp/localhost/12345", 0x7ffda0ecb550) = -1 ENOENT (No such file or directory)
[17:43:09] *** Joins: heiner_ (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[17:43:41] *** Joins: thiras (~thiras@user/thiras)
[17:44:03] <vancz> actually, arent those paths something bash does and they dont actually exist? how does that even work? can readline even see that?
[17:45:52] *** Quits: CaCode_ (~CaCode@user/cacode) (Quit: Leaving)
[17:45:55] *** Joins: totenkoph (~scythe@user/totenkoph)
[17:47:38] <earnestly> Imagine when vancz learns about plan9
[17:48:00] <earnestly> The Windows mindset is hard to break
[17:48:01] <vancz> well, thats different? :P there its done by the system, however that works
[17:48:27] <earnestly> Even the smartest people working on linux can't break through the abstractions to see what they're really doing
[17:48:30] <frojnd> How would I loop through files in a directory that ends with .foo and .bar? I know how to do it only for foo like this: `for app in *foo; do echo "$app"; done` but how can I also loop over .bar ?
[17:48:50] <frojnd> Also over .bar
[17:49:11] <vancz> earnestly: i mean i imagine that these tcp/udp paths only work with file redirections, otherwise bash cant "see" it
[17:49:11] <earnestly> frojnd: for d in *.foo *.bar; do ...
[17:49:15] <jelly> for app in *foo *bar; do ...
[17:49:17] <frojnd> Nice
[17:49:48] <vancz> earnestly: and ls doesnt see these in /dev so its certainly (?) not provided by the os
[17:50:01] <vancz> and I do remember something about bash providing this feature
[17:50:12] <earnestly> vancz: It's a feature of bash
[17:50:29] <vancz> so the problem is that if you arent going through the bash interface that provides this, other programs wont be able to use it
[17:50:34] <vancz> "other programs"
[17:51:05] <vancz> even readline in bash wont be able to use it unless the open() or whatever goes through bash's appropriate file function
[17:51:16] <earnestly> vancz: `cat < a > b' - cat here doesn't need know about files, or their names, etc.
[17:51:32] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[17:51:47] <vancz> yeah but < does
[17:51:59] <earnestly> Right, the shell
[17:52:12] <vancz> you arent doing cat /dev/tcp/...
[17:52:33] *** Quits: op0x0f05 (uid512716@id-512716.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[17:53:21] <earnestly> I didn't use < and > for no reason
[17:54:26] <jelly> double negative meow
[17:54:36] <earnestly> vancz: https://github.com/bminor/bash/blob/master/redir.c
[17:54:45] <earnestly> jelly: No
[17:55:42] <earnestly> vancz: /dev/stdin is just as special to bash as /dev/tcp (if the platform doesn't provide them)
[17:56:15] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[17:56:19] <vancz> /dev/stdin seems to exist on my system so i didnt think it could be a bash thing
[18:01:16] *** Quits: capn (~capn@user/capn) (Quit: Later!)
[18:03:55] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[18:03:57] *** Joins: Libero (~Libero@77.49.184.64.dsl.dyn.forthnet.gr)
[18:04:00] *** Quits: Libero (~Libero@77.49.184.64.dsl.dyn.forthnet.gr) (Remote host closed the connection)
[18:05:51] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[18:07:39] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[18:08:05] *** Joins: ffguest (~ffguest@178.151.94.123)
[18:08:33] *** Quits: heiner_ (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2) (Remote host closed the connection)
[18:08:56] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[18:14:37] *** Quits: shailangsa (~shailangs@host86-186-127-224.range86-186.btcentralplus.com) (Ping timeout: 240 seconds)
[18:15:15] <furrymcgee> # exec 5<>/dev/tcp/localhost/12345 && file /dev/fd/5
[18:15:16] <shbot> furrymcgee: bash: localhost: System error
[18:15:16] <shbot> furrymcgee: bash: /dev/tcp/localhost/12345: Invalid argument
[18:17:42] *** Joins: kurahaupo (~kurahaupo@pa49-182-131-41.pa.qld.optusnet.com.au)
[18:17:56] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[18:17:57] *** Quits: skered (~dereks@user/skered) (Ping timeout: 240 seconds)
[18:18:15] <jensen> In this script: https://0x0.st/-CyN.txt, how can I pass the arguments from the script to the bash -s's script? E.g. I want to run `./script echo hey` and it should spit out "hey" as many times in 1 second in order to benchmark it. but it's not spitting out "hey". The script is meant to be a way to benchmark bash commands/scripts. I'm sure there are probably caveats without having whole suite of
[18:18:17] <jensen> benchmark tools
[18:18:29] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[18:19:16] *** Quits: timj (~timj@user/timj) (Quit: Leaving.)
[18:19:18] *** Quits: tex (~super@user/dix) (Quit: tex)
[18:20:07] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Quit: Leaving)
[18:20:25] *** Joins: Libero (~Libero@77.49.184.64.dsl.dyn.forthnet.gr)
[18:20:48] *** Joins: xx (~xx@user/xx)
[18:20:54] <Soliton> bash -s "$@"
[18:21:35] <jensen> lol ty
[18:21:42] *** Joins: shailangsa_ (~shailangs@host109-159-108-207.range109-159.btcentralplus.com)
[18:22:27] *** Joins: tex (~super@user/dix)
[18:22:55] <tirnanog> vancz: just because it exists on your system doesn't mean that bash doesn't make special provisions for its absence. that was the point.
[18:24:29] <twkm> furrymcgee: there's no networking.
[18:24:44] <tirnanog> (the actual code is in redir.c if interested)
[18:25:21] <ormaaj> vancz: shellcheck is only a linter. So it's a source code static analyzer that doesn't try to attack the running interpreter. A "naughty string list" would be more like something you use with a fuzzer (those come in several types). There are naughty string generators that are more useful IMO such as zaproxy for web apps.
[18:25:38] *** Joins: cdown__ (~cdown@163.114.131.1)
[18:26:15] *** Quits: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au) (Ping timeout: 268 seconds)
[18:26:17] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[18:26:30] *** Quits: kurahaupo (~kurahaupo@pa49-182-131-41.pa.qld.optusnet.com.au) (Ping timeout: 256 seconds)
[18:27:17] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 240 seconds)
[18:27:23] *** cdown__ is now known as cdown
[18:27:27] <vancz> tirnanog: right
[18:27:37] <ormaaj> A fuzzer that needs language awareness usually has to be customized and is a bit of work.
[18:28:49] *** Joins: zeraphel (~zeraphel@2a00:a040:196:56d::1)
[18:30:37] *** Quits: ffguest (~ffguest@178.151.94.123) (Ping timeout: 240 seconds)
[18:31:17] *** Joins: malina (~malina@user/malina)
[18:32:18] *** Joins: zebrag (~chris@user/zebrag)
[18:32:46] <zeraphel> shellcheck is unhappy http://ix.io/3J32, shellcheck isn't helping
[18:34:36] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[18:35:54] <ormaaj> yep
[18:36:26] <phy1729> Seems like a bug
[18:36:50] <ormaaj> it's trying to catch invalid constructs at the same time such as x=((y))
[18:36:59] <ormaaj> can't really have both
[18:37:19] <phy1729> I think it just needs to realize (( doesn't need a \ line continuation
[18:37:31] *** Joins: gabriele (~gabriele@user/gabriele)
[18:37:57] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 240 seconds)
[18:38:32] <phy1729> well now that I look at the body, wtf are you doing?
[18:39:43] *** Joins: ffguest (~ffguest@178.151.94.123)
[18:40:22] *** Quits: ffguest (~ffguest@178.151.94.123) (Client Quit)
[18:40:47] <zeraphel> getting rid of the linebreaks doesnt help it at all,  i think it cannot grok array expansion inside of (( ))
[18:41:01] <zeraphel> phy1729: thought it was clear,  just calculating an average :)
[18:41:07] *** Joins: memphisto (~memphisto@91.195.38.11)
[18:41:39] <memphisto> hi , trying to findout which is my root VG
[18:42:09] <memphisto> depending on OS it could be vg00 , vgkubuntu....etc
[18:42:18] <memphisto> so i want to identify it
[18:42:26] *** Joins: arinov (~arinov@178.240.190.167)
[18:42:37] <memphisto> but /etc/default/grub doesn't have to show grub commandline
[18:43:00] *** Joins: jinsun (~quassel@user/jinsun)
[18:43:04] <memphisto> i could go through /proc/cmdline but i don't know if it's always populated correctly
[18:43:04] <ormaaj> it probably integrates arithmetic into the full grammar (what bash should have done). That approach won't work quite identically.
[18:43:29] <memphisto> don't want to go into greping df output, cause if you have issues with NFS output will hang
[18:43:46] <memphisto> not shure how to proceed
[18:43:49] <Soliton> sounds like you're asking something about linux. perhaps try #linux.
[18:45:10] <memphisto> ok, thanks
[18:46:20] <tirnanog> memphisto: parsing the kernel cmdline isn't the right way. consider "findmnt -no source /" or such.
[18:46:44] *** Quits: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net) (Quit: Leaving)
[18:49:04] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 268 seconds)
[18:50:49] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[18:51:33] <vancz> is "${somearr[@]}" -> "a a" "b b" "c c" ... a special case of expansion behaviour or is it consistent with other stuff?
[18:51:50] <vancz> "other stuff" (im not sure what im thinking of, i guess how other expansions work?)
[18:52:12] <vancz> I guess im just trying to get a feel for it
[18:52:30] <ormaaj> depends on context
[18:52:32] <vancz> or maybe more specifically
[18:52:40] <vancz> the quoting behaviour of it?
[18:52:46] <vancz> i think thats what feels kind of weird
[18:53:14] <vancz> if you quote "$somearr{@}" it expands into "quoted" words, if you dont quote it it expands into stuff that can get word split
[18:53:20] <ormaaj> [@] unpacks arguments into multiple words in contexts that involve word lists.
[18:53:21] <vancz> (https://aosabook.org/images/bash/bash-article-diagram.png)
[18:53:31] *** Quits: LoremIpsum (~loremIpsu@2a02:c7f:140c:9d00:17e4:7f96:a8f8:1919) (Quit: Leaving)
[18:53:50] <vancz> i guess what im scratching my head about is that expansion happens before word splitting, so how/why does quoted array expansion not get word split
[18:54:02] *** Joins: jinsun (~quassel@user/jinsun)
[18:54:05] <ormaaj> that essay is a "high level" overview
[18:54:33] <vancz> because if you take it literally, that array expansion should expand to "a a b b c c ..."
[18:54:51] <vancz> and not "a a" "b b" "c c" ...
[18:54:57] <ormaaj> The shell has to keep track of which words or sections of words were quoted.
[18:55:05] <vancz> am i making any sense?
[18:56:02] <Soliton> not sure why it should expand to "a a b b c c ...". what are you taking literally?
[18:56:23] <vancz> the quotes around $somearr{@}
[18:56:33] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[18:57:04] <vancz> s/take literally/take it as normal quoting
[18:57:16] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:57:33] <Soliton> that would be "${arr[*]}"
[18:58:03] <vancz> 1) good to know 2) so it is a special case then?
[18:58:48] <Soliton> arrays work like arrays and not like other things. maybe that's the question.
[18:58:52] *** Joins: fling (~fling@user/fling)
[18:59:06] <vancz> seems closer to it at least
[18:59:16] *** Quits: mknod (~mknod@user/mknod) (Quit: mknod)
[18:59:26] <vancz> so basically the syntactic similarity is superficial
[18:59:32] *** Quits: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se) (Ping timeout: 240 seconds)
[18:59:37] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[19:01:01] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[19:01:33] *** Joins: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se)
[19:01:53] <Soliton> quotes prevent wordsplitting. they don't change how arrays or other expansions work.
[19:02:52] <ormaaj> between [@] and [*]? They both operate on arrays, just differently. [*] is less useful in general. You only use it when you want the array glued into a single word.
[19:09:29] <vancz> ormaaj: between "$var" and "$arr[@]"
[19:09:57] *** Joins: ffguest (~ffguest@178.151.94.123)
[19:10:46] <gnoo>  $var expands to ${var[0]}
[19:10:51] *** Quits: n4dir (~user@i5E8666A3.versanet.de) (Remote host closed the connection)
[19:10:52] <ormaaj> The latter needs braces
[19:11:02] <vancz> whoops
[19:12:46] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[19:13:37] *** Quits: arinov (~arinov@178.240.190.167) (Ping timeout: 240 seconds)
[19:15:17] *** Quits: ffguest (~ffguest@178.151.94.123) (Ping timeout: 240 seconds)
[19:16:34] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[19:17:09] *** Joins: arinov (~arinov@178.240.190.167)
[19:22:18] *** Quits: tex (~super@user/dix) (Quit: tex)
[19:23:18] *** Quits: nokturil (~nokturil@fbi241.internetdsl.tpnet.pl) (Remote host closed the connection)
[19:23:33] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[19:28:17] *** Joins: travisghansen (~travisgha@192.74.130.86)
[19:29:24] *** Quits: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se) (Ping timeout: 256 seconds)
[19:29:52] <vancz> gnoo: really?
[19:30:00] <vancz> i guess that would make it consistent then
[19:31:16] *** Joins: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se)
[19:32:00] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[19:32:15] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[19:32:35] *** Joins: unop (~unop@194.154.249.71)
[19:35:53] *** Joins: RandomGuy21 (~RandomGuy@202.131.135.217)
[19:37:17] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 240 seconds)
[19:37:51] *** Quits: legola (~legola@46.235.101.65) (Remote host closed the connection)
[19:41:59] *** Joins: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net)
[19:43:08] *** Quits: RandomGuy21 (~RandomGuy@202.131.135.217) (Read error: Connection reset by peer)
[19:43:21] *** Joins: RandomGuy21 (~RandomGuy@202.131.135.217)
[19:45:50] *** Quits: RandomGuy21 (~RandomGuy@202.131.135.217) (Read error: Connection reset by peer)
[19:46:03] *** Joins: RandomGuy21 (~RandomGuy@202.131.135.217)
[19:48:43] *** Joins: skylite (~skylite@2E6B2CD6.catv.pool.telekom.hu)
[19:49:40] *** Joins: greycat (~greg@209.142.155.49)
[19:50:01] *** Joins: tobybl_ (~tobybl@213.31.132.151)
[19:50:28] <ormaaj> meh.
[19:50:31] *** Joins: pj (~pj@ghettoforge/pj)
[19:51:57] *** Quits: tobybl (~tobybl@213.31.132.151) (Ping timeout: 240 seconds)
[19:56:50] *** Quits: hejux (~hejux@146.56.136.247) (Remote host closed the connection)
[19:57:07] *** Joins: hejux (~hejux@146.56.136.247)
[19:57:10] *** Quits: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se) (Ping timeout: 256 seconds)
[19:57:34] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[19:58:39] *** Joins: semigloss (~semigloss@d14-69-6-230.try.wideopenwest.com)
[19:58:58] *** Joins: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se)
[20:02:59] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Quit: Leaving)
[20:03:43] *** Joins: tmm88 (~tmm88@user/tmm88)
[20:03:56] *** Joins: richardm75 (~richardm7@2600:8801:c507:b200:854c:8e7b:c759:e0ca)
[20:04:32] *** Quits: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se) (Ping timeout: 256 seconds)
[20:04:48] *** Quits: RandomGuy21 (~RandomGuy@202.131.135.217) (Quit: Quit)
[20:06:18] *** Joins: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se)
[20:08:12] *** Joins: nitrowheels (~nitrowhee@151.95.83.100)
[20:09:51] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[20:10:41] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[20:11:46] *** Quits: memphisto (~memphisto@91.195.38.11) (Quit: Client closed)
[20:16:36] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[20:16:44] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Read error: Connection reset by peer)
[20:16:51] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[20:17:04] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[20:17:07] *** Joins: unop (~unop@194.154.249.71)
[20:17:19] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[20:17:46] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[20:18:14] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:499c:186d:f10d:6a24)
[20:20:49] *** Joins: igemnace (~ian@user/igemnace)
[20:22:00] *** Joins: et_ (~et@user/et)
[20:22:37] *** Quits: et (~et@user/et) (Ping timeout: 240 seconds)
[20:22:37] *** et_ is now known as et
[20:25:14] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:25:33] *** Joins: skered (~dereks@user/skered)
[20:27:31] *** Joins: timj (~timj@user/timj)
[20:29:15] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[20:30:54] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[20:30:56] *** Joins: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net)
[20:31:26] *** Quits: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se) (Ping timeout: 268 seconds)
[20:32:57] *** Joins: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se)
[20:33:54] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 268 seconds)
[20:34:32] *** Joins: Guest9 (~Guest9@131-193-45-254.cs.uic.edu)
[20:34:58] *** Quits: Guest9 (~Guest9@131-193-45-254.cs.uic.edu) (Client Quit)
[20:36:30] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[20:36:53] *** Joins: karakedi (~eAC53C340@user/karakedi)
[20:40:56] *** Joins: sidy (~sidy@user/sidy)
[20:41:46] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[20:43:32] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Ping timeout: 240 seconds)
[20:43:51] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[20:44:07] *** Joins: tewrvd^ (~tewrvd@64.253.22.77)
[20:44:26] *** Joins: unop (~unop@194.154.249.71)
[20:48:22] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[20:48:38] *** Joins: wstrnr (~wstrnr@user/wstrnr)
[20:48:57] *** Joins: kspalaiologos (~kspalaiol@user/kspalaiologos)
[20:49:52] *** Quits: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se) (Ping timeout: 256 seconds)
[20:51:30] *** Joins: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se)
[20:53:20] *** Joins: ChmEarl (~chmearl@user/chmearl)
[20:54:11] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Quit: Leaving...)
[20:57:57] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 240 seconds)
[20:58:56] *** Quits: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se) (Ping timeout: 256 seconds)
[21:00:44] *** Quits: shabius (~shabius@2a0e:1c80:2:1021::1001) (Quit: Leaving)
[21:00:53] *** Joins: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se)
[21:01:45] *** Joins: boreas (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[21:02:51] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Ping timeout: 245 seconds)
[21:04:25] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[21:05:57] *** Quits: sidy (~sidy@user/sidy) (Ping timeout: 240 seconds)
[21:06:04] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Quit: leaving)
[21:06:26] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[21:07:03] *** Joins: shabius (~shabius@2a0e:1c80:2:1021::1001)
[21:07:41] *** Quits: kspalaiologos (~kspalaiol@user/kspalaiologos) (Quit: Leaving)
[21:08:53] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Client Quit)
[21:09:17] *** Quits: shabius (~shabius@2a0e:1c80:2:1021::1001) (Client Quit)
[21:11:55] *** Joins: pj (~pj@ghettoforge/pj)
[21:12:14] *** Joins: shabius (~shabius@2a0e:1c80:2:1021::1001)
[21:12:16] *** Quits: mat001 (~mat001@c-69-181-156-104.hsd1.ca.comcast.net) (Remote host closed the connection)
[21:12:57] *** Joins: mat001 (~mat001@72.28.108.216)
[21:13:24] *** Quits: shabius (~shabius@2a0e:1c80:2:1021::1001) (Client Quit)
[21:14:17] *** Joins: shabius (~shabius@2a0e:1c80:2:1021::1001)
[21:15:03] *** Joins: sinaowolabi (~SinaOwola@41.58.210.189)
[21:16:05] *** Quits: tmm88 (~tmm88@user/tmm88) (Quit: Lost terminal)
[21:17:52] *** Joins: Kyuzo68 (~Kyuzo@host-82-61-197-112.retail.telecomitalia.it)
[21:18:01] *** Quits: boreas (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2) (Remote host closed the connection)
[21:19:09] <vancz> "A nice feature of bash version >= 4.1 is the variable BASH_XTRACEFD. This allows you to specify the file descriptor to
[21:19:09] <vancz> write the set -x debugging output to."
[21:19:12] <vancz> oooh shiny
[21:20:40] *** Quits: tobybl_ (~tobybl@213.31.132.151) (Remote host closed the connection)
[21:25:00] *** Quits: arinov (~arinov@178.240.190.167) (Ping timeout: 256 seconds)
[21:27:09] *** Joins: earendel (uid498179@user/earendel)
[21:27:24] *** Joins: ttys000 (~ttys000@user/ttys000)
[21:28:17] *** Joins: tuskkk____ (uid18470@id-18470.tinside.irccloud.com)
[21:30:39] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[21:35:28] *** Joins: nvmd (~nvmd@user/nvmd)
[21:35:34] *** Quits: MajorBiscuit (~MajorBisc@c-001-015-014.client.tudelft.eduvpn.nl) (Ping timeout: 268 seconds)
[21:35:37] *** Quits: gabriele (~gabriele@user/gabriele) (Quit: Leaving)
[21:39:20] *** Joins: Betal (~Betal@user/betal)
[21:41:30] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[21:42:09] *** Quits: listenurs (~igloo@c-98-240-233-64.hsd1.mn.comcast.net) (Remote host closed the connection)
[21:42:26] *** Joins: magla (~gelignite@55d4a813.access.ecotel.net)
[21:42:52] <ormaaj> it has uses.
[21:46:03] *** Joins: Mo (~Mo@ip-109-40-2-225.web.vodafone.de)
[21:47:33] <ormaaj> # bash -xc ': durp; { BASH_XTRACEFD=3 set +x; } 3>/dev/null'
[21:47:34] <shbot> ormaaj: + : durp
[21:48:01] *** Joins: tercaL (~tercaL@user/tercal)
[21:48:07] *** Quits: MercilessDeth (~brad@136.49.59.177) (Quit: Konversation terminated!)
[21:51:06] *** Quits: Laskolnyk (~wasyl@89-76-136-17.dynamic.chello.pl) (Quit: leaving)
[21:53:38] *** Quits: saki (~saki@gateway/tor-sasl/saki) (Remote host closed the connection)
[21:54:25] *** Joins: The_Loko (~The_Loko@86.127.232.141)
[21:54:33] *** Joins: saki (~saki@gateway/tor-sasl/saki)
[21:57:31] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[21:57:33] *** Joins: kspalaiologos (~kspalaiol@user/kspalaiologos)
[21:58:17] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 240 seconds)
[22:00:08] *** Quits: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se) (Ping timeout: 256 seconds)
[22:00:42] *** Quits: unixman (~aunixman@209-165-134-1.gci.com) (Ping timeout: 256 seconds)
[22:01:36] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[22:02:07] *** Joins: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se)
[22:03:51] *** Joins: listenurs (~igloo@c-98-240-233-64.hsd1.mn.comcast.net)
[22:06:55] *** Quits: listenurs (~igloo@c-98-240-233-64.hsd1.mn.comcast.net) (Remote host closed the connection)
[22:08:15] *** Quits: tewrvd^ (~tewrvd@64.253.22.77) (Remote host closed the connection)
[22:09:43] *** Joins: boreas (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[22:10:33] *** Joins: Laskolnyk (~wasyl@89-76-136-17.dynamic.chello.pl)
[22:11:37] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 240 seconds)
[22:11:49] *** Joins: alkisg (~alkisg@2001:470:69fc:105::2d3)
[22:13:09] *** Quits: humky (~humky@user/humky) (Quit: Leaving)
[22:13:42] <mihaiadrian> i use a cli utility in a while loop, and whenever a conditions is met, it opens up an imagemagick instance
[22:13:45] <mihaiadrian> how do i kill imagemagick?
[22:14:59] <alkisg> I have a var1="<space>text1<enter>text2<space><enter>" i.e. it may contain various whitespace characters. One easy way to sanitize it is: var2=$(echo $var1). My only problem with that is that shellcheck complains about missing quotes. I can silence it with a #pragma, but is there a better way to do what I want?
[22:15:13] <greycat> !faq trim
[22:15:13] <greybot> https://mywiki.wooledge.org/BashFAQ/067 -- How can I trim leading/trailing white space from one of my variables?
[22:15:23] <alkisg> Ty, reading...
[22:18:16] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[22:18:40] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[22:19:13] *** Joins: humky (~humky@user/humky)
[22:20:05] *** Joins: ubique (~ubique@user/ubique)
[22:21:40] *** Quits: humky (~humky@user/humky) (Client Quit)
[22:24:27] *** Joins: pj (~pj@ghettoforge/pj)
[22:29:43] <twkm> pkill and pray mihaiadrian.
[22:30:48] *** Joins: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy)
[22:31:48] <ormaaj> write an execve LD_PRELOAD that refuses to run anything named "imagemagick" ^^
[22:31:58] *** Joins: zoe (~zoe@fsf/member/zoe)
[22:36:35] *** Joins: humky (~humky@user/humky)
[22:38:04] *** Joins: libc (~weechat@user/tessio)
[22:38:15] <greycat> I thought the question was how to kill one that's been going longer than you like, but without killing the shell loop.
[22:38:42] <ormaaj> or put something in PATH to mask it with a null program, or a directory with symlinks to everything but imagemagick, or same thing with overlayfs or similar.
[22:38:43] <greycat> Not how to prevent all of them from running in the first place.  Putting a symlink to /bin/true from ~/bin/imagemagick would be easier than the LD_PRELOAD thing.
[22:39:33] *** Joins: ffguest (~ffguest@178.151.94.123)
[22:40:56] *** Quits: ffguest (~ffguest@178.151.94.123) (Client Quit)
[22:41:06] *** Quits: Inline (~Inline@aftr-37-201-240-204.unity-media.net) (Quit: Leaving)
[22:41:29] <greycat> Of course, a literal answer to the original question would be "Press Ctrl-C", because they never actually *said* they wanted the shell loop to survive.
[22:41:47] <ormaaj> hehe
[22:42:41] <amrx> .
[22:44:08] *** Quits: Mo (~Mo@ip-109-40-2-225.web.vodafone.de) (Quit: Leaving)
[22:44:34] *** Joins: rgrinberg (~textual@2806:101e:1:83af:8095:9213:668b:97a8)
[22:46:30] *** Parts: wstrnr (~wstrnr@user/wstrnr) ()
[22:48:00] *** Quits: zoe (~zoe@fsf/member/zoe) (Read error: Connection reset by peer)
[22:48:20] *** Quits: nvmd (~nvmd@user/nvmd) (Ping timeout: 268 seconds)
[22:49:29] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:49:41] *** Joins: nvmd (~nvmd@user/nvmd)
[22:50:31] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Read error: Connection reset by peer)
[22:51:35] *** Joins: unixman (~aunixman@209-165-134-1.gci.com)
[22:51:53] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[22:56:35] *** Joins: andril (~andril@c-66-229-99-96.hsd1.fl.comcast.net)
[22:56:56] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[22:58:11] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aÐ»Ð»Ð¸Ð»Ñ¹Ñ–Ð°!)
[22:58:49] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[23:01:20] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[23:01:41] *** Quits: tercaL (~tercaL@user/tercal) (Quit: halt -p)
[23:01:57] *** Quits: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se) (Ping timeout: 240 seconds)
[23:02:50] <ormaaj> also forgot to suggst ptrace hax, binfmt_misc hax, BPF hax, and hardware chip debuggers. (or just patch the damn misbehaving program).
[23:03:20] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[23:04:23] *** Joins: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se)
[23:04:53] *** Quits: zaden (~maddx@73.92.207.228) (Quit: WeeChat 3.5-dev)
[23:04:54] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[23:05:23] *** Joins: Infrastruktur (~Infrastru@78.156.9.105)
[23:06:50] <ormaaj> i don't think they make ICE's for anything resembling modern chips. :/
[23:07:17] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 240 seconds)
[23:10:39] <libc> i like chips
[23:11:04] <libc> especially potato chips
[23:11:22] <libc> ormaaj: you must have been talking aobut other chip
[23:11:23] <ormaaj> not good for you, but concur.
[23:12:16] <libc> !doesntwork greycat
[23:12:28] <libc> !doesntwork > greycat
[23:12:28] <greybot> greycat: Saying something "doesn't work" helps neither you or us. Explain the result you *want* or *expect*, what you are *doing* and *how* it is failing. Copy/paste the commands you use and the errors they produce. Consider set -x to get more information on what is happening.
[23:12:54] <ormaaj> ?
[23:13:14] <libc> ormaaj: i don't know how to say it in indian
[23:13:15] <libc> sry
[23:13:22] <ormaaj> it works!
[23:13:28] *** Parts: Infrastruktur (~Infrastru@78.156.9.105) ()
[23:13:46] <libc> !doesntwork > ormaaj
[23:13:46] <greybot> ormaaj: Saying something "doesn't work" helps neither you or us. Explain the result you *want* or *expect*, what you are *doing* and *how* it is failing. Copy/paste the commands you use and the errors they produce. Consider set -x to get more information on what is happening.
[23:14:54] <libc> !doesntwork > geirha
[23:14:54] <greybot> geirha: Saying something "doesn't work" helps neither you or us. Explain the result you *want* or *expect*, what you are *doing* and *how* it is failing. Copy/paste the commands you use and the errors they produce. Consider set -x to get more information on what is happening.
[23:15:10] *** Joins: ffguest (~ffguest@178.151.94.123)
[23:15:17] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 240 seconds)
[23:15:28] <greycat> Please stop spamming us with random nonsense.
[23:15:46] <ormaaj> shush ðŸ™„
[23:15:49] <libc> technically its not randim
[23:15:49] <libc> random
[23:15:53] <libc> it's your own creation
[23:16:02] *** ChanServ sets mode: +o greycat
[23:16:08] <libc> holly molly NOOOOOOOOOOOOOOOOOOOOOOOOOOOOO!
[23:16:10] *** greycat sets mode: +q $a:tessio
[23:16:18] *** greycat sets mode: -o greycat
[23:16:26] <ffguest> Hello, world!
[23:17:20] <emanuele6> he was already banned +b'd last week for doing the same thing :/ ( repeatedly sending !doesntwork > user )
[23:17:32] <greycat> Good to know.
[23:17:45] <tirnanog> novel.
[23:17:55] *** Quits: ffguest (~ffguest@178.151.94.123) (Remote host closed the connection)
[23:18:20] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 256 seconds)
[23:18:42] *** Joins: Inline (~Inline@aftr-37-201-240-204.unity-media.net)
[23:18:57] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[23:19:12] *** Joins: unop (~unop@194.154.249.71)
[23:20:02] *** Joins: Thanatermesis (~Thanaterm@191.92.148.122)
[23:21:17] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[23:26:04] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[23:28:02] *** Joins: pj (~pj@ghettoforge/pj)
[23:28:36] *** Quits: nitrowheels (~nitrowhee@151.95.83.100) (Quit: Leaving)
[23:31:47] *** Joins: steerpike (~echelon@gateway/tor-sasl/steerpike)
[23:32:03] <steerpike> hi, when i try to do a string substitution by doing..
[23:32:11] <steerpike> test="/usr/lib"
[23:32:25] <steerpike> echo ${test/\//_} .. only replaces the first /
[23:32:39] <emanuele6> yes / only replaces the first match
[23:32:45] <emanuele6> if you want to replace all use //
[23:32:54] <emanuele6> ${test//\//_}
[23:32:59] <steerpike> awesome :)
[23:33:02] <steerpike> thanks
[23:34:20] *** Quits: humky (~humky@user/humky) (Remote host closed the connection)
[23:35:35] *** Joins: capn (~capn@user/capn)
[23:42:14] <Enissay> https://pastebin.com/raw/L0nGWkdP
[23:42:51] <Enissay> Executing a confirmation prompt from heredoc isnt working properly
[23:43:21] <greycat> A here document is just text which is placed in a temp file and fed as stdin to some command.
[23:43:39] <Enissay>  the `REPLY` variable gets the value `e` from the following `echo` then it complains about the unknown cho
[23:43:48] <emanuele6> if you use read, you will read from stdin
[23:43:53] <emanuele6> and stdin is the code...
[23:44:09] *** Joins: shabius_ (~shabius@46.188.18.36)
[23:46:02] <Enissay> Hmmm, so no way to use the prompt within a heredoc then ? it is meant to be run on a remote server and heredoc is convenient for that
[23:46:50] <greycat> Are you saying you are trying to put an INTERACTIVE PROGRAM inside what I'm guessing is a command substitution inside a here document?!
[23:47:19] * greycat reads the rest of that sentence... something about a remote server.  Now it's just MORE confusing.
[23:47:28] <greycat> Does the here document actually contain a SCRIPT?
[23:47:50] *** Quits: shabius (~shabius@2a0e:1c80:2:1021::1001) (Ping timeout: 252 seconds)
[23:48:06] <Enissay> it contains a list of commands to run, it gives some output based on which a prompt asks to continue or not
[23:48:36] <greycat> If the question is actually "I'm feeding a script on stdin to ssh, to be executed on a remote system, but I'd like the script to be able to use stdin which is tied up by ssh reading the script" then the answer is "find some other way to do this".
[23:49:18] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[23:49:25] <greycat> (the bit about a here-doc is a total red herring if this is the case; you'd have the same issue if the script is in a client-side file and being redirected with < to ssh)
[23:49:25] <Enissay> Okay, I wasnt aware of how heredoc works, it makes sense now why it is eating the following lines
[23:49:34] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[23:51:11] *** Quits: kspalaiologos (~kspalaiol@user/kspalaiologos) (Quit: Leaving)
[23:53:39] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[23:54:21] *** Quits: libc (~weechat@user/tessio) (Quit: WeeChat 3.2)
[23:56:24] *** Joins: sublim20 (~sublim20@user/sublim20)
[23:59:06] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
