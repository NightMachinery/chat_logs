[00:15:42] *** Quits: adidas (~adidas@136-24-225-98.cab.webpass.net) (Quit: Client closed)
[00:29:04] <Nicd> josevalim: wow, I made some of my graph components stateful and my diff dropped 50 % in size
[00:29:13] <Nicd> I don't really understand why, but I'm glad it did
[00:29:19] *** Joins: adidas (~adidas@136-24-225-98.cab.webpass.net)
[00:30:00] <Nicd> I guess I assumed "A stateless component is always mounted, updated, and rendered whenever the parent template changes." meant that diffing was still done after the render
[00:35:18] *** Joins: mulander (~mulander@95.179.179.154)
[00:35:39] *** Parts: mulander (~mulander@95.179.179.154) ()
[00:39:14] <adidas> Ok I've narrowed down the alpinejs issue a bit more. Seems to be a problem with DOM patching per https://github.com/phoenixframework/phoenix_live_view/issues/809#issuecomment-637671803. The from.__x property is always undefined so the DOM patching never happens...
[00:41:21] *** Quits: walton (quassel@gateway/vpn/airvpn/walton) (Ping timeout: 268 seconds)
[00:42:08] *** Quits: gitgood (~gitgood@80-44-9-45.dynamic.dsl.as9105.com) (Ping timeout: 265 seconds)
[00:44:27] <Nicd> now I wonder if I'll pay a huge memory cost for all these components
[00:44:36] <Nicd> will have to check it with observer
[00:46:09] <josevalim> Nicd: the additional cost is the component state but, if you were keeping the state in the parent anyway, it is the same state
[00:46:19] <Nicd> nice
[00:46:30] <Nicd> yep all state is top-down
[00:46:48] <josevalim> yeah, so not much to worry about
[00:47:30] <Nicd> looks like my functions with assigns tricks don't kill change tracking either
[00:55:05] *** Quits: DNH (~DNH@8.43.122.6) (Quit: Textual IRC Client: www.textualapp.com)
[01:01:13] <Nicd> my diffs are around 3.5 KB now
[01:01:19] <Nicd> it's not great but it's not terrible either
[01:12:24] <Nicd> aha, so that's why my diff is full of numbers https://usercontent.irccloud-cdn.com/file/3waKWgmx/Screenshot%202021-06-24%20at%2023.42.01.png
[01:27:25] *** Joins: Celeo (~Celeo@user/celeo)
[01:31:01] <Net> I'm getting an error when using Ecto.Query.API.any/1 in an update clause—anyone know if it's supported in Ecto.Query.update?
[01:31:22] *** Quits: adidas (~adidas@136-24-225-98.cab.webpass.net) (Quit: Client closed)
[01:31:34] <Net> not a pretty error either—* 1st argument: not a list; :erlang.length(:acc)
[01:38:38] <Nicd> Show your query
[01:39:06] *** Joins: pera (~pera@user/pera)
[01:39:20] <Nicd> Also good night I'm going to sleep. But show your query so someone else can help
[01:40:58] <Net> query: https://gist.github.com/net/66d8380c216265388f44715c5395eff6
[01:42:08] *** Joins: biermic (~biermic@193-80-14-90.adsl.highway.telekom.at)
[01:45:01] <Net> works fine in a where clause
[01:45:01] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[01:45:08] <Net> just not in update
[01:47:27] *** Quits: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Ping timeout: 256 seconds)
[01:52:49] <Net> it seems subqueries just aren't supported in update: [set: ...]
[02:05:35] *** Quits: pera (~pera@user/pera) (Ping timeout: 256 seconds)
[02:13:09] *** Quits: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[02:15:33] *** Joins: kfajdsl (~sahan@2601:cb:4000:4bf0:8dc9:fff3:313a:c1c6)
[02:16:18] *** Joins: ur5us__ (~ur5us@2406:e002:6afd:5401:dcda:4751:ffe1:3610)
[02:16:49] *** Joins: rahul_j (~rahul_j@49.37.168.72)
[02:21:05] <hoppity> Does anyone know a way to add a "default" style to my website with TailwindCSS? It seems like having to manually add Tailwind classes to all my elements manually is not the way to go.
[02:21:27] *** Quits: rahul_j (~rahul_j@49.37.168.72) (Ping timeout: 256 seconds)
[02:23:42] *** Quits: [deleted] (~livoreno@user/notzmv) (Ping timeout: 258 seconds)
[02:26:18] *** Joins: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net)
[02:28:35] *** Quits: ur5us__ (~ur5us@2406:e002:6afd:5401:dcda:4751:ffe1:3610) (Quit: Leaving)
[02:39:04] *** Joins: ur5us (~ur5us@2406:e002:6afd:5401:dcda:4751:ffe1:3610)
[02:39:58] *** Quits: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net) (Ping timeout: 252 seconds)
[02:42:33] *** Joins: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net)
[02:47:48] *** Quits: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[02:48:03] *** Joins: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net)
[02:49:07] *** Quits: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net) (*.net *.split)
[02:49:08] *** Quits: ur5us (~ur5us@2406:e002:6afd:5401:dcda:4751:ffe1:3610) (*.net *.split)
[02:49:08] *** Quits: kfajdsl (~sahan@2601:cb:4000:4bf0:8dc9:fff3:313a:c1c6) (*.net *.split)
[02:49:08] *** Quits: Celeo (~Celeo@user/celeo) (*.net *.split)
[02:49:08] *** Quits: odoood (~odoood@2601:c8:c003:a550::2) (*.net *.split)
[02:49:08] *** Quits: JSharp (sid4580@id-4580.tooting.irccloud.com) (*.net *.split)
[02:49:08] *** Quits: asonge (sid129041@id-129041.highgate.irccloud.com) (*.net *.split)
[02:49:08] *** Quits: sorentwo (sid39488@id-39488.tinside.irccloud.com) (*.net *.split)
[02:49:08] *** Quits: josephl (sid146137@id-146137.tooting.irccloud.com) (*.net *.split)
[02:49:08] *** Quits: oliv3 (~olivier@2001:bc8:6005:129:208:a2ff:fe0c:46bc) (*.net *.split)
[02:49:08] *** Quits: rrix (~rrix@2620:fc:c000:0:69c1:fa22:c0c9:e2c4) (*.net *.split)
[02:49:08] *** Quits: aaronrenner (sid475276@id-475276.charlton.irccloud.com) (*.net *.split)
[02:49:08] *** Quits: EricLathrop[m] (~ericlathr@2001:470:69fc:105::5e4) (*.net *.split)
[02:49:08] *** Quits: sagax (~sagax@213.138.71.146) (*.net *.split)
[02:49:08] *** Quits: marcos (~marcos@2a01:4f8:c17:e59::2) (*.net *.split)
[02:49:09] *** Quits: ghenry (~ghenry@ghenry.plus.com) (*.net *.split)
[02:49:09] *** Quits: duponin (~duponin@locahlo.st) (*.net *.split)
[02:49:09] *** Quits: madnificent (~madnifice@static.210.74.63.178.clients.your-server.de) (*.net *.split)
[02:49:09] *** Quits: chenghiz_ (uid349735@id-349735.charlton.irccloud.com) (*.net *.split)
[02:49:09] *** Quits: pflanze (~pflanze@2001:1a88:19e:4500:fcd0:b167:3e55:e9f4) (*.net *.split)
[02:49:09] *** Quits: Exa (exa@irc.moe) (*.net *.split)
[02:49:09] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (*.net *.split)
[02:49:09] *** Quits: ChanServ (ChanServ@services.libera.chat) (*.net *.split)
[02:49:09] *** Quits: hendursaga (~weechat@user/hendursaga) (*.net *.split)
[02:49:09] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (*.net *.split)
[02:49:09] *** Quits: hoppity (~hoppity@user/hoppity) (*.net *.split)
[02:49:09] *** Quits: IanWizard (~ianwizard@user/ianwizard) (*.net *.split)
[02:49:09] *** Quits: ouroboros (~ouroboros@user/ouroboros) (*.net *.split)
[02:49:09] *** Quits: flynn (~mcbloch@user/flynn) (*.net *.split)
[02:49:09] *** Quits: damien2 (~damien@248.ip-149-56-13.net) (*.net *.split)
[02:49:09] *** Quits: kpanic (~kpanic@user/kpanic) (*.net *.split)
[02:49:09] *** Quits: waz0wski (~waz0wski@hrothgar.distortion.io) (*.net *.split)
[02:49:09] *** Quits: _axx (~axx@static.246.43.203.116.clients.your-server.de) (*.net *.split)
[02:49:09] *** Quits: Sgeo (~Sgeo@user/sgeo) (*.net *.split)
[02:49:10] *** Quits: aidalgol (~aidalgol@user/aidalgol) (*.net *.split)
[02:49:10] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (*.net *.split)
[02:49:10] *** Quits: lessless_ (~lessless@ip.82.144.211.11.stat.volia.net) (*.net *.split)
[02:49:10] *** Quits: sgn (~sgn@user/sgn) (*.net *.split)
[02:49:10] *** Quits: cdegroot (~quassel@72.142.15.90) (*.net *.split)
[02:49:10] *** Quits: tristan (~tristan@51.15.38.185) (*.net *.split)
[02:49:10] *** Quits: sm2n (~sm2n@user/sm2n) (*.net *.split)
[02:49:10] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (*.net *.split)
[02:49:10] *** Quits: rbino (~rbino@rbino.com) (*.net *.split)
[02:49:10] *** Quits: Heuristic (~Heuristic@108.61.216.82) (*.net *.split)
[02:49:10] *** Quits: void09 (~void@revinin5minute.com) (*.net *.split)
[02:49:10] *** Quits: nickjj (~nickjj@user/nickjj) (*.net *.split)
[02:49:10] *** Quits: Guest5592 (~yp@113.116.20.52) (*.net *.split)
[02:49:10] *** Quits: notzmv (~zmv@user/notzmv) (*.net *.split)
[02:49:11] *** Quits: trufas (~trufas@177.240.218.218) (*.net *.split)
[02:49:11] *** Quits: bodgix (~bodgix@vps-ae17da44.vps.ovh.net) (*.net *.split)
[02:49:11] *** Quits: DeX77 (~Admiral@dragonslave.de) (*.net *.split)
[02:49:11] *** Quits: andreyorst (~andreyors@2.92.125.229) (*.net *.split)
[02:49:11] *** Quits: micro (~micro@user/micro) (*.net *.split)
[02:49:11] *** Quits: someara (sid19135@id-19135.tinside.irccloud.com) (*.net *.split)
[02:49:11] *** Quits: om_henners[m] (~omhenners@2001:470:69fc:105::2d11) (*.net *.split)
[02:49:11] *** Quits: MatrixTravelerbo (~voyagert2@2001:470:69fc:105::22) (*.net *.split)
[02:49:11] *** Quits: czard_ (~czard@host-92-0-171-198.as13285.net) (*.net *.split)
[02:49:11] *** Quits: whk (uid469868@id-469868.tinside.irccloud.com) (*.net *.split)
[02:49:11] *** Quits: equil (~u@user/eq) (*.net *.split)
[02:49:12] *** Quits: Tonger (~dickmanta@signiq.cust.bdr01.per02.wa.VOCUS.net.au) (*.net *.split)
[02:49:12] *** Quits: havenwood (~havenwood@about/ruby/havenwood) (*.net *.split)
[02:49:12] *** Quits: thojanssens (~thojansse@ptr-178-51-144-9.dyn.mobistar.be) (*.net *.split)
[02:49:12] *** Quits: MuffinPimp (~mokou@box.mokou.io) (*.net *.split)
[02:49:12] *** Quits: feld (feld@feld.your.org) (*.net *.split)
[02:49:12] *** Quits: tomku|two (~tomku@user/tomku) (*.net *.split)
[02:49:12] *** Quits: davidw (~davidw@97-120-123-53.ptld.qwest.net) (*.net *.split)
[02:49:12] *** Quits: Rubyn (~Rubyn@user/rubyn) (*.net *.split)
[02:49:12] *** Quits: TakinOver (~TakinOver@47.150.206.35) (*.net *.split)
[02:49:12] *** Quits: rawtaz (~rawtaz@user/rawtaz) (*.net *.split)
[02:49:12] *** Quits: nicholasruunu (~nicholasr@ruu.nu) (*.net *.split)
[02:49:12] *** Quits: Perry (~perry@coffee-break.at) (*.net *.split)
[02:49:12] *** Quits: mathsaey (~mathsaey@user/mathsaey) (*.net *.split)
[02:49:12] *** Quits: hmans (~hmans@user/hmans) (*.net *.split)
[02:49:12] *** Quits: acro (~acro@user/acro) (*.net *.split)
[02:49:12] *** Quits: sepow (~sepow@139.59.158.83) (*.net *.split)
[02:49:12] *** Quits: carloratm (carloratm@tilde.club) (*.net *.split)
[02:49:13] *** Quits: terrorjack (~terrorjac@ec2-54-95-39-30.ap-northeast-1.compute.amazonaws.com) (*.net *.split)
[02:49:13] *** Quits: liberza (~liberza@user/liberza) (*.net *.split)
[02:49:13] *** Quits: adamkittelson (uid82542@id-82542.tinside.irccloud.com) (*.net *.split)
[02:49:13] *** Quits: picasso (mike@potbox.pixor.net) (*.net *.split)
[02:49:13] *** Quits: biermic (~biermic@193-80-14-90.adsl.highway.telekom.at) (*.net *.split)
[02:49:13] *** Quits: href (~href@Sade.random.sh) (*.net *.split)
[02:49:13] *** Quits: Niamkik (~Niamkik@rns0.oci.re) (*.net *.split)
[02:49:14] *** Quits: GIANTWORLDKEEPER (~pjetcetal@2.95.227.207) (*.net *.split)
[02:49:14] *** Quits: sobel (~matt@66.219.34.76) (*.net *.split)
[02:49:14] *** Quits: wolfshappen (~waff@irc.furworks.de) (*.net *.split)
[02:49:14] *** Quits: blambi (~blambi@c-441f524e.011-113-67626725.bbcust.telenor.se) (*.net *.split)
[02:49:14] *** Quits: azazel (~azazel@orphu.arstecnica.it) (*.net *.split)
[02:49:14] *** Quits: creature (~alex@198.98.114.33) (*.net *.split)
[02:49:14] *** Quits: jstoker (~jstoker@user/jstoker) (*.net *.split)
[02:49:14] *** Quits: gwillickers (~gwillicke@user/gwillickers) (*.net *.split)
[02:49:14] *** Quits: norrland (~norrland@92-33-164-4.customers.ownit.se) (*.net *.split)
[02:49:15] *** Quits: krjst (~krjst@2604:a880:800:c1::16b:8001) (*.net *.split)
[02:49:15] *** Quits: ihabunek (~ihabunek@bezdomni.net) (*.net *.split)
[02:49:15] *** Quits: bbhoss (sid18216@id-18216.tinside.irccloud.com) (*.net *.split)
[02:49:15] *** Quits: mveytsman (sid478822@id-478822.tinside.irccloud.com) (*.net *.split)
[02:49:15] *** Quits: sinni800 (~quassel@2a00:1ca8:ae::b0) (*.net *.split)
[02:49:15] *** Quits: ericmj (sid16671@id-16671.tinside.irccloud.com) (*.net *.split)
[02:49:15] *** Quits: dvu (~danielvu@168.235.66.22) (*.net *.split)
[02:49:15] *** Quits: reynir (root@user/reynir) (*.net *.split)
[02:49:15] *** Quits: rkleef (~rolfscrib@oberth.vankleef.me) (*.net *.split)
[02:49:15] *** Quits: sparogy (~andrew@afontaine.dev) (*.net *.split)
[02:49:15] *** Quits: dr-orlovsky (~dr-orlovs@31.14.40.19) (*.net *.split)
[02:49:15] *** Quits: koolazer (~koo@user/koolazer) (*.net *.split)
[02:49:15] *** Quits: jlindgren (~jlindgren@user/jlindgren) (*.net *.split)
[02:49:15] *** Quits: mstruebing (~maex@2001:41d0:8:93c7::1) (*.net *.split)
[02:49:16] *** Quits: mcint (mcint@user/mcint) (*.net *.split)
[02:49:16] *** Quits: ds (~dshoreman@user/ds) (*.net *.split)
[02:49:16] *** Quits: ivan (~ivan@user/ivan) (*.net *.split)
[02:49:16] *** Quits: uhoreg (~uhoreg@2001:470:69fc:105::35f) (*.net *.split)
[02:49:16] *** Quits: penguinbrian (~penguinbr@2001:470:69fc:105::33d2) (*.net *.split)
[02:49:16] *** Quits: carmysilna (~brightly-@2001:470:69fc:105::2190) (*.net *.split)
[02:49:16] *** Quits: harrow (~harrow@static.38.6.217.95.clients.your-server.de) (*.net *.split)
[02:49:16] *** Quits: kvn (~weechat@cpc115982-dals23-2-0-cust605.20-2.cable.virginm.net) (*.net *.split)
[02:49:16] *** Quits: hauleth (~hauleth@2.ip-145-239-81.eu) (*.net *.split)
[02:49:16] *** Quits: b3k1 (~B3k@b3k.pl) (*.net *.split)
[02:49:16] *** Quits: jpaa_ (~jpaa@87.118.126.66) (*.net *.split)
[02:49:16] *** Quits: revere (~revere@static.137.230.130.94.clients.your-server.de) (*.net *.split)
[02:49:16] *** Quits: lanodan (~lanodan@2a01:e0a:d6:9930::35) (*.net *.split)
[02:49:16] *** Quits: damjan (~damjan@user/damjan) (*.net *.split)
[02:49:16] *** Quits: pounce (~pounce@facebook/engineering/pounce) (*.net *.split)
[02:49:16] *** Quits: balo (~balo@128.199.49.128) (*.net *.split)
[02:49:17] *** Quits: SlicerDicer (slicerdice@feld.your.org) (*.net *.split)
[02:49:17] *** Quits: rg (~rg@user/rg) (*.net *.split)
[02:49:17] *** Quits: siiky (~siiky@2001:8a0:ff67:d700:4e5e:9cab:437:a94e) (*.net *.split)
[02:49:17] *** Quits: fjmorazan (~quassel@user/fjmorazan) (*.net *.split)
[02:49:17] *** Quits: sasajuric (sid29842@id-29842.charlton.irccloud.com) (*.net *.split)
[02:49:17] *** Quits: danieli (~danieli@user/danieli) (*.net *.split)
[02:49:17] *** Quits: kawen_ (~quassel@static.208.191.216.95.clients.your-server.de) (*.net *.split)
[02:49:17] *** Quits: koollman (samson_t@user/koollman) (*.net *.split)
[02:49:17] *** Quits: Zarathu (~zarathu@li2222-85.members.linode.com) (*.net *.split)
[02:49:17] *** Quits: m1dnight (~christoph@188.ip-51-91-158.eu) (*.net *.split)
[02:49:17] *** Quits: staceee (~stacy@2001:bc8:47ac:e0a::1) (*.net *.split)
[02:49:17] *** Quits: mjones (sid6844@id-6844.brockwell.irccloud.com) (*.net *.split)
[02:49:17] *** Quits: dzfranklin (sid448589@id-448589.charlton.irccloud.com) (*.net *.split)
[02:49:18] *** Quits: hmanscloud (sid565@user/hmans) (*.net *.split)
[02:49:18] *** Quits: lvlinux (~ruel@falcon.ruhnet.net) (*.net *.split)
[02:49:18] *** Quits: ebb (ebb@user/ebb) (*.net *.split)
[02:49:18] *** Quits: v_ (~NULLx76@80-60-83-220.fixed.kpn.net) (*.net *.split)
[02:49:18] *** Quits: kawzeg (kawzeg@2a01:7e01::f03c:92ff:fee2:ec34) (*.net *.split)
[02:49:18] *** Quits: Liquid_X (~lx@37.221.104.65) (*.net *.split)
[02:49:18] *** Quits: tcit (~tcit@2001:470:69fc:105::8f) (*.net *.split)
[02:49:18] *** Quits: punnie (~punniemat@2001:470:69fc:105::1193) (*.net *.split)
[02:49:18] *** Quits: Poeticode (~Poeticode@user/poeticode) (*.net *.split)
[02:49:18] *** Quits: dutchie (~dutchie@user/dutchie) (*.net *.split)
[02:49:18] *** Quits: vhf (~victor@2607:5300:60:1083::1) (*.net *.split)
[02:49:18] *** Quits: guan (sid222713@id-222713.charlton.irccloud.com) (*.net *.split)
[02:49:18] *** Quits: keathley (sid155969@id-155969.highgate.irccloud.com) (*.net *.split)
[02:49:18] *** Quits: alisdair (sid7471@id-7471.charlton.irccloud.com) (*.net *.split)
[02:49:18] *** Quits: bind1 (~bind@md-dingen.tilaa.cloud) (*.net *.split)
[02:49:18] *** Quits: Shados (~shados@shados.net) (*.net *.split)
[02:49:18] *** Quits: joenoon (sid411732@id-411732.brockwell.irccloud.com) (*.net *.split)
[02:49:18] *** Quits: jeregrine (sid16248@id-16248.tinside.irccloud.com) (*.net *.split)
[02:49:18] *** Quits: kevinsjoberg (sid499516@id-499516.tooting.irccloud.com) (*.net *.split)
[02:49:18] *** Quits: gmc (sid58314@id-58314.charlton.irccloud.com) (*.net *.split)
[02:49:18] *** Quits: hexology (~hexology@user/hexology) (*.net *.split)
[02:49:19] *** Quits: hwrd (sid64402@id-64402.tooting.irccloud.com) (*.net *.split)
[02:49:19] *** Quits: jaydoane (sid66455@id-66455.stonehaven.irccloud.com) (*.net *.split)
[02:49:19] *** Quits: joedevivo (sid16225@id-16225.tinside.irccloud.com) (*.net *.split)
[02:49:19] *** Quits: ryanwinchester (sid147626@id-147626.highgate.irccloud.com) (*.net *.split)
[02:49:19] *** Quits: NightMonkey (~NightMonk@user/nightmonkey) (*.net *.split)
[02:49:19] *** Quits: pepesza (~pawel@user/pepesza) (*.net *.split)
[02:49:19] *** Quits: zups (~meow@2a01:4f9:c010:6036::1) (*.net *.split)
[02:49:19] *** Quits: meredith (~meredith@ramdas.roomag.org) (*.net *.split)
[02:49:19] *** Quits: benwilson512 (sid71699@id-71699.charlton.irccloud.com) (*.net *.split)
[02:49:19] *** Quits: mcrumm (sid467326@id-467326.charlton.irccloud.com) (*.net *.split)
[02:49:19] *** Quits: jtdowney (~jtdowney@user/jtdowney) (*.net *.split)
[02:49:19] *** Quits: niko (~niko@libera/staff/niko) (*.net *.split)
[02:49:19] *** Quits: bitwalker (sid32334@user/bitwalker) (*.net *.split)
[02:49:19] *** Quits: jperras (~jperras@ec2-52-91-134-43.compute-1.amazonaws.com) (*.net *.split)
[02:49:19] *** Quits: eproxus (sid39465@id-39465.charlton.irccloud.com) (*.net *.split)
[02:49:19] *** Quits: serafeim (serafeim@thunix.net) (*.net *.split)
[02:49:19] *** Quits: orhan89 (~orhan89@151.91.188.35.bc.googleusercontent.com) (*.net *.split)
[02:49:20] *** Quits: slothby (~JoshAshby@irc.isin.space) (*.net *.split)
[02:49:20] *** Quits: derfj (sid19429@id-19429.tinside.irccloud.com) (*.net *.split)
[02:49:20] *** Quits: shenghi (~shenghi@chrysocolla.mutablevoid.org) (*.net *.split)
[02:49:20] *** Quits: welterde (welterde@thinkbase.srv.welterde.de) (*.net *.split)
[02:49:20] *** Quits: jakesyl (sid56879@id-56879.stonehaven.irccloud.com) (*.net *.split)
[02:49:20] *** Quits: OliverMT (sid16701@id-16701.stonehaven.irccloud.com) (*.net *.split)
[02:49:20] *** Quits: dbohdan (~dbohdan@user/dbohdan) (*.net *.split)
[02:49:20] *** Quits: Gaffel (~gaffel@h-178-174-170-170.A1405.priv.bahnhof.se) (*.net *.split)
[02:49:20] *** Quits: gamache_ (~gamache@gunyoki.net) (*.net *.split)
[02:49:20] *** Quits: xlii (~xlii@167.172.161.148) (*.net *.split)
[02:49:20] *** Quits: mrus (~mrus@149.28.61.155) (*.net *.split)
[02:49:20] *** Quits: mhmd (~mhmd@37.48.90.208) (*.net *.split)
[02:49:21] *** Quits: res0nat0r (~Fletch@dia.whatbox.ca) (*.net *.split)
[02:49:21] *** Quits: esainane (esainane@antihype.space) (*.net *.split)
[02:49:21] *** Quits: Halcyonicstorm (sid174863@id-174863.brockwell.irccloud.com) (*.net *.split)
[02:49:21] *** Quits: kenichi (~kenichi@nakamura.io) (*.net *.split)
[02:49:21] *** Quits: joshproehl (~quassel@user/joshproehl) (*.net *.split)
[02:49:21] *** Quits: rnewson (sid29161@couchdb/committer/rnewson) (*.net *.split)
[02:49:21] *** Quits: Net (sid313265@tooting.irccloud.com) (*.net *.split)
[02:49:21] *** Quits: andersju (~andersju@fnord.unix.se) (*.net *.split)
[02:49:21] *** Quits: drewolson (~drewolson@user/drewolson) (*.net *.split)
[02:49:21] *** Quits: nox (sid3872@highgate.irccloud.com) (*.net *.split)
[02:49:21] *** Quits: fhunleth___ (sid79501@tooting.irccloud.com) (*.net *.split)
[02:49:21] *** Quits: Ankhers (~Ankhers@ec2-54-196-233-138.compute-1.amazonaws.com) (*.net *.split)
[02:49:21] *** Quits: Seich (~seich@ns513649.ip-198-27-67.net) (*.net *.split)
[02:49:50] *** Joins: ChanServ (ChanServ@services.libera.chat)
[02:49:50] *** iridium.libera.chat sets mode: +o ChanServ
[02:50:10] *** Joins: jstoker (~jstoker@user/jstoker)
[02:50:10] *** Joins: gwillickers (~gwillicke@user/gwillickers)
[02:50:10] *** Joins: norrland (~norrland@92-33-164-4.customers.ownit.se)
[02:50:10] *** Joins: krjst (~krjst@2604:a880:800:c1::16b:8001)
[02:50:10] *** Joins: reynir (root@user/reynir)
[02:50:10] *** Joins: ihabunek (~ihabunek@bezdomni.net)
[02:50:10] *** Joins: bbhoss (sid18216@id-18216.tinside.irccloud.com)
[02:50:10] *** Joins: mveytsman (sid478822@id-478822.tinside.irccloud.com)
[02:50:10] *** Joins: sinni800 (~quassel@2a00:1ca8:ae::b0)
[02:50:10] *** Joins: ericmj (sid16671@id-16671.tinside.irccloud.com)
[02:50:10] *** Joins: dvu (~danielvu@168.235.66.22)
[02:50:10] *** Joins: rkleef (~rolfscrib@oberth.vankleef.me)
[02:50:49] *** Joins: picasso (mike@potbox.pixor.net)
[02:50:49] *** Joins: terrorjack (~terrorjac@ec2-54-95-39-30.ap-northeast-1.compute.amazonaws.com)
[02:50:49] *** Joins: liberza (~liberza@user/liberza)
[02:50:49] *** Joins: adamkittelson (uid82542@id-82542.tinside.irccloud.com)
[02:51:28] *** Joins: shenghi (~shenghi@chrysocolla.mutablevoid.org)
[02:51:28] *** Joins: welterde (welterde@thinkbase.srv.welterde.de)
[02:51:28] *** Joins: jakesyl (sid56879@id-56879.stonehaven.irccloud.com)
[02:51:28] *** Joins: OliverMT (sid16701@id-16701.stonehaven.irccloud.com)
[02:51:28] *** Joins: dbohdan (~dbohdan@user/dbohdan)
[02:51:28] *** Joins: Gaffel (~gaffel@h-178-174-170-170.A1405.priv.bahnhof.se)
[02:51:28] *** Joins: gamache_ (~gamache@gunyoki.net)
[02:51:28] *** Joins: xlii (~xlii@167.172.161.148)
[02:51:28] *** Joins: res0nat0r (~Fletch@dia.whatbox.ca)
[02:51:28] *** Joins: mrus (~mrus@149.28.61.155)
[02:51:28] *** Joins: mhmd (~mhmd@37.48.90.208)
[02:51:28] *** Joins: esainane (esainane@antihype.space)
[02:51:28] *** Joins: Seich (~seich@ns513649.ip-198-27-67.net)
[02:51:28] *** Joins: Halcyonicstorm (sid174863@id-174863.brockwell.irccloud.com)
[02:51:28] *** Joins: kenichi (~kenichi@nakamura.io)
[02:51:28] *** Joins: joshproehl (~quassel@user/joshproehl)
[02:51:28] *** Joins: rnewson (sid29161@couchdb/committer/rnewson)
[02:51:28] *** Joins: Net (sid313265@tooting.irccloud.com)
[02:51:28] *** Joins: andersju (~andersju@fnord.unix.se)
[02:51:28] *** Joins: drewolson (~drewolson@user/drewolson)
[02:51:28] *** Joins: nox (sid3872@highgate.irccloud.com)
[02:51:28] *** Joins: fhunleth___ (sid79501@tooting.irccloud.com)
[02:51:28] *** Joins: Ankhers (~Ankhers@ec2-54-196-233-138.compute-1.amazonaws.com)
[02:51:33] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[02:51:33] *** Joins: hoppity (~hoppity@user/hoppity)
[02:51:33] *** Joins: IanWizard (~ianwizard@user/ianwizard)
[02:51:33] *** Joins: waz0wski (~waz0wski@hrothgar.distortion.io)
[02:51:33] *** Joins: ouroboros (~ouroboros@user/ouroboros)
[02:51:33] *** Joins: flynn (~mcbloch@user/flynn)
[02:51:33] *** Joins: damien2 (~damien@248.ip-149-56-13.net)
[02:51:33] *** Joins: rbino (~rbino@rbino.com)
[02:51:33] *** Joins: kpanic (~kpanic@user/kpanic)
[02:51:33] *** Joins: Heuristic (~Heuristic@108.61.216.82)
[02:51:33] *** Joins: _axx (~axx@static.246.43.203.116.clients.your-server.de)
[02:51:33] *** Joins: void09 (~void@revinin5minute.com)
[02:51:33] *** Joins: Sgeo (~Sgeo@user/sgeo)
[02:51:33] *** Joins: nickjj (~nickjj@user/nickjj)
[02:51:33] *** Joins: Guest5592 (~yp@113.116.20.52)
[02:51:33] *** Joins: notzmv (~zmv@user/notzmv)
[02:51:33] *** Joins: aidalgol (~aidalgol@user/aidalgol)
[02:51:33] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[02:51:33] *** Joins: trufas (~trufas@177.240.218.218)
[02:51:33] *** Joins: lessless_ (~lessless@ip.82.144.211.11.stat.volia.net)
[02:51:33] *** Joins: sgn (~sgn@user/sgn)
[02:51:33] *** Joins: bodgix (~bodgix@vps-ae17da44.vps.ovh.net)
[02:51:33] *** Joins: cdegroot (~quassel@72.142.15.90)
[02:51:33] *** Joins: tristan (~tristan@51.15.38.185)
[02:51:33] *** Joins: DeX77 (~Admiral@dragonslave.de)
[02:51:33] *** Joins: andreyorst (~andreyors@2.92.125.229)
[02:51:33] *** Joins: sm2n (~sm2n@user/sm2n)
[02:51:33] *** Joins: micro (~micro@user/micro)
[02:51:55] *** Joins: hendursaga (~weechat@user/hendursaga)
[02:51:55] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[02:52:00] *** Joins: biermic (~biermic@193-80-14-90.adsl.highway.telekom.at)
[02:52:00] *** Joins: href (~href@Sade.random.sh)
[02:52:00] *** Joins: Niamkik (~Niamkik@rns0.oci.re)
[02:52:00] *** Joins: GIANTWORLDKEEPER (~pjetcetal@2.95.227.207)
[02:52:00] *** Joins: sobel (~matt@66.219.34.76)
[02:52:00] *** Joins: wolfshappen (~waff@irc.furworks.de)
[02:52:00] *** Joins: blambi (~blambi@c-441f524e.011-113-67626725.bbcust.telenor.se)
[02:52:00] *** Joins: azazel (~azazel@orphu.arstecnica.it)
[02:52:00] *** Joins: creature (~alex@198.98.114.33)
[02:52:13] *** Joins: asonge (sid129041@id-129041.highgate.irccloud.com)
[02:52:13] *** Joins: sorentwo (sid39488@id-39488.tinside.irccloud.com)
[02:52:13] *** Joins: josephl (sid146137@id-146137.tooting.irccloud.com)
[02:52:13] *** Joins: oliv3 (~olivier@2001:bc8:6005:129:208:a2ff:fe0c:46bc)
[02:52:13] *** Joins: rrix (~rrix@2620:fc:c000:0:69c1:fa22:c0c9:e2c4)
[02:52:13] *** Joins: aaronrenner (sid475276@id-475276.charlton.irccloud.com)
[02:52:13] *** Joins: EricLathrop[m] (~ericlathr@2001:470:69fc:105::5e4)
[02:52:13] *** Joins: sagax (~sagax@213.138.71.146)
[02:52:13] *** Joins: marcos (~marcos@2a01:4f8:c17:e59::2)
[02:52:13] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[02:52:13] *** Joins: duponin (~duponin@locahlo.st)
[02:52:13] *** Joins: madnificent (~madnifice@static.210.74.63.178.clients.your-server.de)
[02:52:13] *** Joins: chenghiz_ (uid349735@id-349735.charlton.irccloud.com)
[02:52:13] *** Joins: pflanze (~pflanze@2001:1a88:19e:4500:fcd0:b167:3e55:e9f4)
[02:52:13] *** Joins: Exa (exa@irc.moe)
[02:52:13] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[02:52:35] *** Joins: siiky (~siiky@2001:8a0:ff67:d700:4e5e:9cab:437:a94e)
[02:52:35] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[02:52:35] *** Joins: sasajuric (sid29842@id-29842.charlton.irccloud.com)
[02:52:35] *** Joins: koollman (samson_t@user/koollman)
[02:52:35] *** Joins: danieli (~danieli@user/danieli)
[02:52:35] *** Joins: kawen_ (~quassel@static.208.191.216.95.clients.your-server.de)
[02:52:35] *** Joins: Zarathu (~zarathu@li2222-85.members.linode.com)
[02:52:35] *** Joins: m1dnight (~christoph@188.ip-51-91-158.eu)
[02:52:35] *** Joins: staceee (~stacy@2001:bc8:47ac:e0a::1)
[02:52:35] *** Joins: mjones (sid6844@id-6844.brockwell.irccloud.com)
[02:52:35] *** Joins: dzfranklin (sid448589@id-448589.charlton.irccloud.com)
[02:52:35] *** Joins: hmanscloud (sid565@user/hmans)
[02:52:35] *** Joins: lvlinux (~ruel@falcon.ruhnet.net)
[02:52:35] *** Joins: ebb (ebb@user/ebb)
[02:52:35] *** Joins: v_ (~NULLx76@80-60-83-220.fixed.kpn.net)
[02:52:35] *** Joins: kawzeg (kawzeg@2a01:7e01::f03c:92ff:fee2:ec34)
[02:52:35] *** Joins: Liquid_X (~lx@37.221.104.65)
[02:53:26] *** Joins: someara (sid19135@id-19135.tinside.irccloud.com)
[02:53:26] *** Joins: om_henners[m] (~omhenners@2001:470:69fc:105::2d11)
[02:53:26] *** Joins: MatrixTravelerbo (~voyagert2@2001:470:69fc:105::22)
[02:53:26] *** Joins: czard_ (~czard@host-92-0-171-198.as13285.net)
[02:53:26] *** Joins: whk (uid469868@id-469868.tinside.irccloud.com)
[02:53:26] *** Joins: equil (~u@user/eq)
[02:53:26] *** Joins: Tonger (~dickmanta@signiq.cust.bdr01.per02.wa.VOCUS.net.au)
[02:53:26] *** Joins: havenwood (~havenwood@about/ruby/havenwood)
[02:53:28] *** Joins: MuffinPimp (~mokou@box.mokou.io)
[02:53:28] *** Joins: feld (feld@feld.your.org)
[02:53:28] *** Joins: tomku|two (~tomku@user/tomku)
[02:53:28] *** Joins: davidw (~davidw@97-120-123-53.ptld.qwest.net)
[02:53:28] *** Joins: Rubyn (~Rubyn@user/rubyn)
[02:53:28] *** Joins: TakinOver (~TakinOver@47.150.206.35)
[02:53:28] *** Joins: rawtaz (~rawtaz@user/rawtaz)
[02:53:28] *** Joins: nicholasruunu (~nicholasr@ruu.nu)
[02:53:28] *** Joins: Perry (~perry@coffee-break.at)
[02:53:28] *** Joins: mathsaey (~mathsaey@user/mathsaey)
[02:53:28] *** Joins: hmans (~hmans@user/hmans)
[02:53:28] *** Joins: carloratm (carloratm@tilde.club)
[02:53:28] *** Joins: acro (~acro@user/acro)
[02:53:28] *** Joins: sepow (~sepow@139.59.158.83)
[02:53:29] *** Joins: ivan (~ivan@user/ivan)
[02:53:29] *** Joins: carmysilna (~brightly-@2001:470:69fc:105::2190)
[02:53:29] *** Joins: uhoreg (~uhoreg@2001:470:69fc:105::35f)
[02:53:29] *** Joins: penguinbrian (~penguinbr@2001:470:69fc:105::33d2)
[02:53:29] *** Joins: harrow (~harrow@static.38.6.217.95.clients.your-server.de)
[02:53:29] *** Joins: kvn (~weechat@cpc115982-dals23-2-0-cust605.20-2.cable.virginm.net)
[02:53:29] *** Joins: hauleth (~hauleth@2.ip-145-239-81.eu)
[02:53:29] *** Joins: b3k1 (~B3k@b3k.pl)
[02:53:29] *** Joins: jpaa_ (~jpaa@87.118.126.66)
[02:53:29] *** Joins: revere (~revere@static.137.230.130.94.clients.your-server.de)
[02:53:29] *** Joins: lanodan (~lanodan@2a01:e0a:d6:9930::35)
[02:53:29] *** Joins: damjan (~damjan@user/damjan)
[02:53:29] *** Joins: pounce (~pounce@facebook/engineering/pounce)
[02:53:29] *** Joins: balo (~balo@128.199.49.128)
[02:53:29] *** Joins: SlicerDicer (slicerdice@feld.your.org)
[02:53:29] *** Joins: rg (~rg@user/rg)
[02:53:30] *** Quits: om_henners[m] (~omhenners@2001:470:69fc:105::2d11) (Ping timeout: 246 seconds)
[02:53:37] *** Joins: bitwalker (sid32334@user/bitwalker)
[02:53:37] *** Joins: jperras (~jperras@ec2-52-91-134-43.compute-1.amazonaws.com)
[02:53:37] *** Joins: eproxus (sid39465@id-39465.charlton.irccloud.com)
[02:53:37] *** Joins: serafeim (serafeim@thunix.net)
[02:53:37] *** Joins: orhan89 (~orhan89@151.91.188.35.bc.googleusercontent.com)
[02:53:37] *** Joins: slothby (~JoshAshby@irc.isin.space)
[02:53:37] *** Joins: derfj (sid19429@id-19429.tinside.irccloud.com)
[02:53:38] *** Joins: tcit (~tcit@2001:470:69fc:105::8f)
[02:53:38] *** Joins: punnie (~punniemat@2001:470:69fc:105::1193)
[02:53:38] *** Joins: Poeticode (~Poeticode@user/poeticode)
[02:53:38] *** Joins: dutchie (~dutchie@user/dutchie)
[02:53:38] *** Joins: guan (sid222713@id-222713.charlton.irccloud.com)
[02:53:38] *** Joins: vhf (~victor@2607:5300:60:1083::1)
[02:53:38] *** Joins: keathley (sid155969@id-155969.highgate.irccloud.com)
[02:53:38] *** Joins: alisdair (sid7471@id-7471.charlton.irccloud.com)
[02:53:38] *** Joins: bind1 (~bind@md-dingen.tilaa.cloud)
[02:53:38] *** Joins: Shados (~shados@shados.net)
[02:53:38] *** Joins: jeregrine (sid16248@id-16248.tinside.irccloud.com)
[02:53:38] *** Joins: joenoon (sid411732@id-411732.brockwell.irccloud.com)
[02:53:38] *** Joins: kevinsjoberg (sid499516@id-499516.tooting.irccloud.com)
[02:53:38] *** Joins: gmc (sid58314@id-58314.charlton.irccloud.com)
[02:53:38] *** Joins: hexology (~hexology@user/hexology)
[02:53:38] *** Joins: jaydoane (sid66455@id-66455.stonehaven.irccloud.com)
[02:53:38] *** Joins: ryanwinchester (sid147626@id-147626.highgate.irccloud.com)
[02:53:38] *** Joins: joedevivo (sid16225@id-16225.tinside.irccloud.com)
[02:53:38] *** Joins: NightMonkey (~NightMonk@user/nightmonkey)
[02:53:38] *** Joins: pepesza (~pawel@user/pepesza)
[02:53:38] *** Joins: zups (~meow@2a01:4f9:c010:6036::1)
[02:53:38] *** Joins: meredith (~meredith@ramdas.roomag.org)
[02:53:38] *** Joins: benwilson512 (sid71699@id-71699.charlton.irccloud.com)
[02:53:38] *** Joins: mcrumm (sid467326@id-467326.charlton.irccloud.com)
[02:53:38] *** Joins: jtdowney (~jtdowney@user/jtdowney)
[02:54:19] *** Quits: MatrixTravelerbo (~voyagert2@2001:470:69fc:105::22) (Max SendQ exceeded)
[02:54:21] *** Joins: sparogy (~andrew@afontaine.dev)
[02:54:21] *** Joins: dr-orlovsky (~dr-orlovs@31.14.40.19)
[02:54:21] *** Joins: koolazer (~koo@user/koolazer)
[02:54:21] *** Joins: jlindgren (~jlindgren@user/jlindgren)
[02:54:24] *** Joins: ds (~dshoreman@user/ds)
[02:54:24] *** Joins: mstruebing (~maex@2001:41d0:8:93c7::1)
[02:54:24] *** Joins: mcint (mcint@user/mcint)
[02:54:33] <hoppity> damn, was that a netsplit?
[02:54:52] *** Quits: koolazer (~koo@user/koolazer) (Max SendQ exceeded)
[02:55:03] *** Joins: hwrd (sid64402@id-64402.tooting.irccloud.com)
[02:55:03] *** Joins: JSharp (sid4580@id-4580.tooting.irccloud.com)
[02:55:03] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[02:55:03] *** Joins: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net)
[02:55:03] *** Joins: ur5us (~ur5us@2406:e002:6afd:5401:dcda:4751:ffe1:3610)
[02:55:03] *** Joins: kfajdsl (~sahan@2601:cb:4000:4bf0:8dc9:fff3:313a:c1c6)
[02:55:03] *** Joins: Celeo (~Celeo@user/celeo)
[02:55:19] *** Joins: koolazer (~koo@212.47.237.37)
[02:56:42] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (Ping timeout: 250 seconds)
[02:57:45] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[02:58:01] *** Quits: EricLathrop[m] (~ericlathr@2001:470:69fc:105::5e4) (Ping timeout: 250 seconds)
[02:58:01] *** Quits: tcit (~tcit@2001:470:69fc:105::8f) (Ping timeout: 272 seconds)
[02:58:03] *** Quits: punnie (~punniemat@2001:470:69fc:105::1193) (Ping timeout: 272 seconds)
[02:58:25] *** Quits: uhoreg (~uhoreg@2001:470:69fc:105::35f) (Ping timeout: 272 seconds)
[02:58:25] *** Quits: penguinbrian (~penguinbr@2001:470:69fc:105::33d2) (Ping timeout: 272 seconds)
[02:58:26] *** Quits: carmysilna (~brightly-@2001:470:69fc:105::2190) (Ping timeout: 272 seconds)
[03:00:54] *** Joins: niko (~niko@libera/staff/niko)
[03:01:18] *** Quits: ChanServ (ChanServ@services.libera.chat) (*.net *.split)
[03:01:55] *** Joins: ChanServ (ChanServ@services.libera.chat)
[03:01:55] *** iridium.libera.chat sets mode: +o ChanServ
[03:02:08] *** niko is now known as Guest5247
[03:03:53] *** Quits: Guest5247 (~niko@libera/staff/niko) (Quit: i will be back)
[03:04:18] *** Joins: nik0 (~niko@libera/staff/niko)
[03:05:54] *** nik0 is now known as niko
[03:08:00] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[03:08:07] *** Quits: davidw (~davidw@97-120-123-53.ptld.qwest.net) (Ping timeout: 268 seconds)
[03:39:39] *** Quits: odoood (~odoood@2601:c8:c003:a550::2) (Ping timeout: 256 seconds)
[03:48:33] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[03:55:30] *** Quits: odoood (~odoood@2601:c8:c003:a550::2) (Ping timeout: 240 seconds)
[04:05:24] *** Quits: hoppity (~hoppity@user/hoppity) (Ping timeout: 252 seconds)
[04:19:19] *** Quits: kfajdsl (~sahan@2601:cb:4000:4bf0:8dc9:fff3:313a:c1c6) (Ping timeout: 256 seconds)
[04:19:53] *** Joins: kfajdsl (~sahan@2601:cb:4000:4bf0:bddb:2046:520a:12f7)
[04:45:47] *** Joins: rahul_j (~rahul_j@49.37.168.72)
[04:48:17] *** Quits: rahul_j (~rahul_j@49.37.168.72) (Read error: Connection reset by peer)
[04:54:55] *** Quits: biermic (~biermic@193-80-14-90.adsl.highway.telekom.at) (Ping timeout: 265 seconds)
[04:55:34] *** Joins: rahul_j (~rahul_j@49.37.168.72)
[05:17:07] *** Quits: kfajdsl (~sahan@2601:cb:4000:4bf0:bddb:2046:520a:12f7) (Ping timeout: 256 seconds)
[05:18:12] *** Joins: kfajdsl (~sahan@2601:cb:4000:4bf0:a8c4:94fc:8769:7fee)
[05:26:45] *** Quits: ur5us (~ur5us@2406:e002:6afd:5401:dcda:4751:ffe1:3610) (Ping timeout: 256 seconds)
[05:35:58] *** Joins: sheepduck (~sheepduck@user/sheepduck)
[06:15:08] *** Joins: genericjam_ (sid474908@id-474908.charlton.irccloud.com)
[06:17:56] *** Joins: ur5us (~ur5us@2406:e002:6afd:5401:dcda:4751:ffe1:3610)
[06:21:09] *** Quits: kfajdsl (~sahan@2601:cb:4000:4bf0:a8c4:94fc:8769:7fee) (Ping timeout: 256 seconds)
[06:44:04] *** Joins: kfajdsl (~sahan@2601:cb:8200:7eb0:b59b:1e1e:f78b:45ad)
[07:03:30] *** Quits: sheepduck (~sheepduck@user/sheepduck) (Remote host closed the connection)
[07:43:40] *** Quits: whk (uid469868@id-469868.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:47:51] *** Joins: Celeo (~Celeo@user/celeo)
[08:12:36] *** Joins: yp (~yp@113.88.112.40)
[08:12:59] *** yp is now known as Guest7593
[08:15:13] *** Quits: Guest5592 (~yp@113.116.20.52) (Ping timeout: 258 seconds)
[08:20:09] *** Quits: kfajdsl (~sahan@2601:cb:8200:7eb0:b59b:1e1e:f78b:45ad) (Ping timeout: 256 seconds)
[08:20:37] *** Joins: kfajdsl (~sahan@2601:cb:8200:7eb0:dfe5:f554:9f9c:235d)
[08:46:57] *** Joins: erb (~erblack@2603:a050:13f0:0:f4ac:f036:5c66:a497)
[08:48:36] *** Quits: erb (~erblack@2603:a050:13f0:0:f4ac:f036:5c66:a497) (Remote host closed the connection)
[09:22:02] *** Joins: Guest37 (~Guest37@104.28.27.201)
[09:37:25] *** Quits: Guest37 (~Guest37@104.28.27.201) (Quit: Ping timeout (120 seconds))
[09:37:45] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[09:47:20] <serafeim> hello friends
[09:50:55] *** Quits: kfajdsl (~sahan@2601:cb:8200:7eb0:dfe5:f554:9f9c:235d) (Ping timeout: 246 seconds)
[09:58:18] *** Joins: livoreno (~livoreno@user/notzmv)
[10:00:42] *** Quits: ur5us (~ur5us@2406:e002:6afd:5401:dcda:4751:ffe1:3610) (Ping timeout: 240 seconds)
[10:29:37] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[10:30:08] *** Joins: voltone (~voltone@2a02:14c:8a60:1b:c997:1695:5949:9a6e)
[10:33:13] *** Joins: chgr (~ek@nat-91-137-22-15.net.encoline.de)
[10:37:42] *** Joins: EricLathrop[m] (~ericlathr@2001:470:69fc:105::5e4)
[10:42:39] *** Quits: chgr (~ek@nat-91-137-22-15.net.encoline.de) (Quit: WeeChat 3.1)
[10:43:32] *** Joins: chgr (~ek@nat-91-137-22-15.net.encoline.de)
[10:46:15] *** Quits: voltone (~voltone@2a02:14c:8a60:1b:c997:1695:5949:9a6e) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:50:47] *** Joins: voltone (~voltone@2a02:14c:8a60:1b:c997:1695:5949:9a6e)
[10:53:42] *** Joins: mercerist (~mercerist@user/mercerist)
[10:57:55] *** Joins: hendursaga (~weechat@user/hendursaga)
[10:58:11] *** Joins: whk (uid469868@id-469868.tinside.irccloud.com)
[11:02:25] *** Quits: voltone (~voltone@2a02:14c:8a60:1b:c997:1695:5949:9a6e) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:05:25] *** Joins: voltone (~voltone@2a02:14c:8a60:1b:c997:1695:5949:9a6e)
[11:05:59] *** Joins: phaleth (~phaleth@user/phaleth)
[11:06:08] *** Quits: mercerist (~mercerist@user/mercerist) (Ping timeout: 244 seconds)
[11:08:43] *** Joins: mercerist (~mercerist@user/mercerist)
[11:14:15] *** lessless_ is now known as lessless
[11:34:08] *** Quits: mercerist (~mercerist@user/mercerist) (Quit: mercerist)
[11:42:30] *** Joins: mercerist (~mercerist@user/mercerist)
[11:47:35] <Nicd> morning
[11:47:38] <Nicd> it's midsummer \o/
[11:49:48] <serafeim> crazy summer we have like 40 C here
[11:50:07] <serafeim> and they say we'll have these temperatures for like 2 weeks :|
[11:50:15] <serafeim> not good if you are not in the sea
[11:50:32] <Nicd> damn
[11:50:48] <Nicd> we had 30 for a week and that was enough for me
[11:51:07] <serafeim> 30 is great
[11:51:18] <Nicd> 25 is great
[11:51:32] <serafeim> well 25 is not so good for the sea
[11:52:44] <Nicd> anyway get ready to enjoy those temperatures courtesy of climate change
[11:54:26] <serafeim> ha ha ha ha
[11:54:40] <serafeim> Nicd: did you know that michael crichton did not believe in the climate change ?
[11:55:09] <serafeim> (he is one of the greatest authors of all time, also the author of Jurassic Park among others. unfortunately he died young)
[11:55:37] <serafeim> he had also written a book in which the greenpeace agents were the bad guys !
[11:55:42] <Nicd> many of his generation don't
[11:56:00] <Nicd> my dad mostly doesn't. and even those who do are not willing to do anything about it
[11:56:05] <Nicd> so we're screwed
[11:56:10] <Nicd> enjoy it while it lasts
[11:56:13] <serafeim> ha ha ha ha ah
[11:56:43] <serafeim> Nicd: well most people don't do anything about it because they think that "even if i do it won't matter because china will keep polluting"
[11:56:58] <Nicd> that's my dad's line exactly
[11:57:37] <serafeim> well i think it is true
[11:57:54] <serafeim> i guess i am too old :P
[11:59:36] <Nicd> and this is why I believe we're screwed
[11:59:57] <serafeim> yes i guess you're right
[12:00:19] <serafeim> also most people don't believe that anything too bad will happen while they are alive
[12:00:25] <serafeim> or their kids are alive
[12:00:47] <Nicd> of my family and friends I'm the only one that has done any changes in my life. they think I'm a hippy. it's not a thing for people.
[12:01:48] <serafeim> what changes have you made
[12:02:31] *** Joins: biermic (~biermic@193-80-14-90.adsl.highway.telekom.at)
[12:04:08] <Nicd> biogas car, geothermal heating, changed my diet (though not perfect). these are the least I could do, really, and are not difficult. some of these my family and friends could easily do but no one is interested.
[12:04:27] <Nicd> also not flying anywhere
[12:04:37] <serafeim> hm all right these are not big
[12:05:32] <serafeim> also the things about car and heating need some government assistance
[12:05:43] <serafeim> if the govmts give motivation most people will follow
[12:06:03] <Nicd> sure, our government is actually taxing me more due to having a gas car :P
[12:06:44] <Nicd> oh nice, my account has been pwned on Teespring
[12:11:24] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:12:05] <serafeim> what's teespring
[12:12:07] <serafeim> ha ha ha ha
[12:12:24] <serafeim> Nicd: here they give motivation for pure electric cars
[12:12:41] <Nicd> a website I got a t-shirt from a long time ago
[12:12:47] <serafeim> ah yes i remember it
[12:13:06] <serafeim> but i have come to understood that pure electric cars are onyl useful for inside the city
[12:13:15] <serafeim> and here in greece you can't really find charging spots anywhere
[12:13:35] *** Joins: mexen (uid495612@user/mexen)
[12:13:52] <Nicd> the range is getting there, I treat 400–450 km as a personal limit where it starts working
[12:14:02] <Nicd> just waiting for prices to come down
[12:14:18] <serafeim> Nicd: these ranges are fake
[12:14:32] <Nicd> I know that
[12:14:34] <serafeim> they have an asterisk that you can't really run over 80km/h or something
[12:14:45] <Nicd> though the new measurement style is more accurate
[12:14:51] <serafeim> so if i want to go to an autobahn with 140km/h the range is like 100km
[12:15:25] <serafeim> however the lack of charging spots is more problematic for me
[12:15:49] <Nicd> it's logical though. if I drive to my in-laws on the motorway at 120 km/h, our gas tanks are empty when I get there. if I drive another way 80–100, our gas tanks are almost half full at the end
[12:16:31] *** Quits: mercerist (~mercerist@user/mercerist) (Quit: mercerist)
[12:19:36] <serafeim> yes of course it's logical
[12:20:23] <serafeim> but the thing is that if my gas tank empties while i am driving i can stop to a gas station and refill. if my electric charge drops and i'm screwed!
[12:20:43] <serafeim> also re-charging definitely takes a lot more than filling with petrol
[12:24:39] <Nicd> that's why my limit is 400–450 so I can get to my in-laws and back home or at least nearly back home again. there's bound to be at least one free charger on the way. (there are quite many here nowadays)
[12:24:52] <Nicd> free meaning free of cars, not monetarily :P
[12:31:25] <serafeim> ha ha
[12:31:30] <serafeim> how long does it take to recharge
[12:32:05] <Nicd> if it takes 30 mins to get enough to get home, I don't care
[12:33:00] <serafeim> hm ok
[12:37:11] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[12:47:42] *** Joins: mercerist (~mercerist@user/mercerist)
[13:00:19] *** Quits: mercerist (~mercerist@user/mercerist) (Ping timeout: 244 seconds)
[13:02:46] *** Joins: mercerist (~mercerist@user/mercerist)
[13:08:28] *** Joins: floriann (~Thunderbi@2a02:8106:2e:1300:7ca5:b213:8705:48e0)
[13:14:33] *** Quits: mercerist (~mercerist@user/mercerist) (Quit: mercerist)
[13:21:32] *** Joins: pera (~pera@user/pera)
[13:56:54] *** Joins: thojanssens (~thojansse@tribes-c1-dc.benkgroep.eu)
[14:09:25] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 258 seconds)
[14:23:22] *** Joins: bodgix_ (~bodgix@vps-ae17da44.vps.ovh.net)
[14:28:40] *** Joins: mercerist (~mercerist@user/mercerist)
[14:34:03] *** Joins: Avinash (~Avinash@106.217.203.15)
[14:36:20] *** Quits: Avinash (~Avinash@106.217.203.15) (Client Quit)
[14:36:59] *** Quits: bodgix_ (~bodgix@vps-ae17da44.vps.ovh.net) (Remote host closed the connection)
[14:41:44] *** Quits: mercerist (~mercerist@user/mercerist) (Ping timeout: 250 seconds)
[14:42:45] *** Joins: mercerist (~mercerist@user/mercerist)
[14:58:58] *** Quits: EricLathrop[m] (~ericlathr@2001:470:69fc:105::5e4) (Quit: Bridge terminating on SIGTERM)
[14:59:54] *** Joins: EricLathrop[m] (~ericlathr@2001:470:69fc:105::5e4)
[15:01:22] *** Joins: tcit (~tcit@2001:470:69fc:105::8f)
[15:01:22] *** Joins: carmysilna (~brightly-@2001:470:69fc:105::2190)
[15:01:22] *** Joins: om_henners[m] (~omhenners@2001:470:69fc:105::2d11)
[15:01:23] *** Joins: MatrixTravelerbo (~voyagert2@2001:470:69fc:105::22)
[15:01:26] *** Joins: punnie (~punniemat@2001:470:69fc:105::1193)
[15:01:36] *** Joins: uhoreg (~uhoreg@2001:470:69fc:105::35f)
[15:01:36] *** Joins: penguinbrian (~penguinbr@2001:470:69fc:105::33d2)
[15:07:33] *** Joins: bodgix_ (~bodgix@vps-ae17da44.vps.ovh.net)
[15:07:39] <hauleth> Is there a way to use Phoenix template engine that isn't from dependency but is a part of the application?
[15:08:39] <hauleth> I am using Exs template engine that translates @foo to access.foo to match the EEx templates and it is irritating that I need to make it a separate package and import it as a dependency
[15:08:40] *** Quits: bodgix_ (~bodgix@vps-ae17da44.vps.ovh.net) (Remote host closed the connection)
[15:11:01] *** Joins: bodgix_ (~bodgix@vps-ae17da44.vps.ovh.net)
[15:11:43] *** Quits: bodgix_ (~bodgix@vps-ae17da44.vps.ovh.net) (Remote host closed the connection)
[15:12:41] *** Quits: mercerist (~mercerist@user/mercerist) (Ping timeout: 272 seconds)
[15:13:25] *** Joins: mercerist (~mercerist@user/mercerist)
[15:20:20] *** Quits: pera (~pera@user/pera) (Ping timeout: 258 seconds)
[15:20:27] *** Joins: pera (~pera@137.221.132.180)
[15:20:50] *** pera is now known as Guest8389
[15:26:42] *** Quits: mercerist (~mercerist@user/mercerist) (Ping timeout: 240 seconds)
[15:28:06] *** Joins: mercerist (~mercerist@user/mercerist)
[15:38:32] *** Joins: itinerati (uid504895@id-504895.charlton.irccloud.com)
[15:40:35] <itinerati> Trying to launch `alchemist-iex-run` in emacs and getting this error. https://www.irccloud.com/pastebin/E1lKb8Ha/
[15:40:55] *** Quits: mercerist (~mercerist@user/mercerist) (Ping timeout: 246 seconds)
[15:41:24] <itinerati> But if run the shell command `erl` it works no problem.  Any ideas?
[15:42:21] <itinerati> `which erl` => `/opt/homebrew/bin/erl`
[15:43:07] *** Joins: mercerist (~mercerist@user/mercerist)
[15:50:23] *** Quits: mercerist (~mercerist@user/mercerist) (Quit: mercerist)
[16:05:04] <hauleth> itinerati: is `erl` in PATH of Emacs process?
[16:05:53] <hauleth> Also I see that Homebrew finally started using reasonable paths instead of using `/usr/local`
[16:10:02] *** Quits: chgr (~ek@nat-91-137-22-15.net.encoline.de) (Quit: WeeChat 3.2)
[16:10:23] <thojanssens> elixirforum acting weird for me since morning
[16:10:44] *** Joins: pera (~pera@user/pera)
[16:47:31] <josevalim> hauleth: we are probably missing a Code.ensure_compiled? somewhere. that would fix it
[16:58:14] *** Quits: pera (~pera@user/pera) (Ping timeout: 250 seconds)
[17:11:50] *** Joins: mercerist (~mercerist@user/mercerist)
[17:14:25] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[17:21:48] *** Quits: aidalgol (~aidalgol@user/aidalgol) (Ping timeout: 252 seconds)
[17:23:46] *** Joins: aidalgol (~aidalgol@user/aidalgol)
[17:24:20] *** Quits: mercerist (~mercerist@user/mercerist) (Ping timeout: 244 seconds)
[17:26:01] *** Joins: mercerist (~mercerist@user/mercerist)
[17:48:50] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[17:54:34] *** Quits: mercerist (~mercerist@user/mercerist) (Ping timeout: 272 seconds)
[17:56:42] *** Joins: mercerist (~mercerist@user/mercerist)
[17:58:57] *** Joins: Sgeo (~Sgeo@user/sgeo)
[18:15:10] *** Joins: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com)
[18:17:33] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 244 seconds)
[18:24:28] *** Joins: bodgix_ (~bodgix@vps-ae17da44.vps.ovh.net)
[18:25:41] *** Quits: bodgix_ (~bodgix@vps-ae17da44.vps.ovh.net) (Remote host closed the connection)
[18:25:51] *** Quits: mercerist (~mercerist@user/mercerist) (Ping timeout: 272 seconds)
[18:27:25] *** Joins: mercerist (~mercerist@user/mercerist)
[18:28:55] *** Joins: bodgix_ (~bodgix@vps-ae17da44.vps.ovh.net)
[18:28:58] *** Quits: bodgix_ (~bodgix@vps-ae17da44.vps.ovh.net) (Remote host closed the connection)
[18:29:57] *** Joins: bodgix_ (~bodgix@vps-ae17da44.vps.ovh.net)
[18:31:34] *** Quits: bodgix_ (~bodgix@vps-ae17da44.vps.ovh.net) (Remote host closed the connection)
[18:32:14] *** Joins: bodgix_ (~bodgix@vps-ae17da44.vps.ovh.net)
[18:32:43] *** Quits: bodgix_ (~bodgix@vps-ae17da44.vps.ovh.net) (Remote host closed the connection)
[18:33:49] *** Joins: bodgix_ (~bodgix@vps-ae17da44.vps.ovh.net)
[18:34:01] *** Quits: bodgix_ (~bodgix@vps-ae17da44.vps.ovh.net) (Remote host closed the connection)
[18:35:25] *** Joins: bodgix_ (~bodgix@vps-ae17da44.vps.ovh.net)
[18:36:04] *** Quits: bodgix_ (~bodgix@vps-ae17da44.vps.ovh.net) (Remote host closed the connection)
[18:36:55] *** Joins: bodgix_ (~bodgix@vps-ae17da44.vps.ovh.net)
[18:37:34] *** Quits: bodgix_ (~bodgix@vps-ae17da44.vps.ovh.net) (Remote host closed the connection)
[18:38:14] *** Joins: bodgix_ (~bodgix@vps-ae17da44.vps.ovh.net)
[18:39:39] *** Quits: bodgix_ (~bodgix@vps-ae17da44.vps.ovh.net) (Remote host closed the connection)
[18:39:47] *** Quits: mercerist (~mercerist@user/mercerist) (Ping timeout: 272 seconds)
[18:42:12] *** Joins: mercerist (~mercerist@user/mercerist)
[18:55:14] *** Quits: mercerist (~mercerist@user/mercerist) (Ping timeout: 250 seconds)
[18:57:29] *** Joins: mercerist (~mercerist@user/mercerist)
[19:07:12] *** Joins: mekhami (~lawrence@135.84.115.18)
[19:09:04] <mekhami> I'm curious about something.. my company has a tendency to jump to the extremes as far as sysadmin stuff goes; every application gets the full AWS treatment, autoscaling, load balancers, many nodes, etc etc. I understand the need for resilience; but how much of this is really necessary with elixir? I'd imagine having *two* instances, so we don't have a single point of failure, but.. is there a real
[19:09:06] <mekhami> need to have like 10 copies of your elixir app running in production?
[19:09:19] <mekhami> it seems backwards. it seems overcomplicated, but I don't have the experience to make a good argument for simplifying the infrastructure.
[19:10:11] *** Quits: mercerist (~mercerist@user/mercerist) (Ping timeout: 272 seconds)
[19:11:21] *** Quits: bodgix (~bodgix@vps-ae17da44.vps.ovh.net) (Quit: ZNC 1.8.2 - https://znc.in)
[19:12:36] *** Joins: mercerist (~mercerist@user/mercerist)
[19:13:11] <rawtaz> mekhami: it probably is overcomplicated, but in the end it all boils down to the needs and requirements. noone can answer that question without better understanding of that.
[19:13:29] <rawtaz> whether or not you need 10 copies of an elixir app, how can anyone here tell you that
[19:14:26] *** Quits: Perry (~perry@coffee-break.at) (Quit: ZNC - http://znc.in)
[19:15:22] *** Joins: Perry (~perry@coffee-break.at)
[19:18:22] *** Joins: hoppity (~hoppity@66.222.130.63)
[19:18:22] *** Quits: hoppity (~hoppity@66.222.130.63) (Changing host)
[19:18:22] *** Joins: hoppity (~hoppity@user/hoppity)
[19:19:50] <mekhami> i mean the entirety of bleacher report runs on like 3 elixir nodes. it seems unlikely that my smaller company really needs more than that.
[19:21:02] <rawtaz> it does.
[19:21:12] <rawtaz> but what answer are you looking for?
[19:21:39] <rawtaz> it all boils down to what your app needs and how resilient it has to be etc etc
[19:21:50] <rawtaz> its not just about how many instances of the app you run, it's about surrounding infra as well
[19:27:02] *** Quits: mercerist (~mercerist@user/mercerist) (Ping timeout: 272 seconds)
[19:28:02] *** Joins: mercerist (~mercerist@user/mercerist)
[19:31:49] <mekhami> yeah i'm just concerned that the infrastructure concerns (specifically regarding multiple nodes and stuff) will start bleeding into the application/domain logic
[19:32:09] <mekhami> i guess i just need to try it and see but the way they tend to overengineer infrastructure here has me really uncomfortable sometimes
[19:32:38] <mekhami> on another topic, what code analysis tools/linters/etc do you guys use? what are the 'standards'?
[19:37:19] <benwilson512> mekhami: I think it is wise in general for an application to support being run w/ multiple nodes
[19:38:03] <benwilson512> if your ops is running more nodes than you think necessary then that's a waste of resources, but the application logic changes you need to put in place to support 2 nodes should generally scale to 10 nodes just fine
[19:39:45] <mekhami> benwilson512: it rubs me the wrong way to have any application logic changes to support multiple nodes at all; but maybe it's not as painful in elixir as it would be in other languages? where does that sort of logic typically live, how can i keep it as contained as possible?
[19:41:36] *** Quits: mercerist (~mercerist@user/mercerist) (Ping timeout: 250 seconds)
[19:42:06] <benwilson512> mekhami: depends a lot on what you consider to be "application logic" honestly. 
[19:42:25] <benwilson512> to me it's less about designing things to be multinode
[19:42:29] <benwilson512> and more about NOT designing things to be single node
[19:43:14] <benwilson512> and that mostly boils down to "don't write singleton processes that rely on being singletons"
[19:43:19] <mekhami> is there anything you can link to or say to elaborate on what exactly that means, practically? i know it's sorta a 'big question', but yeah
[19:43:27] *** Joins: mercerist (~mercerist@user/mercerist)
[19:43:52] <benwilson512> concretely / practically it just means that your code doesn't have  an _implicit_ unique view on data
[19:44:12] <benwilson512> it might change under neath you because some other request in the same node, or a request on another node is changing the data
[19:44:23] <benwilson512> so if you need to have control over the data, use an explicit locking mechanism
[19:45:50] <mekhami> something i was thinking about is, this application is driven by a queue. It just reads off of a queue,does stuff, and sends the new stuff to a third party service. So how can multiple nodes safely read off of a single queue?
[19:46:09] <benwilson512> is that queue inside your node, or outside?
[19:46:20] <mekhami> Or should I just have a queue per node? that seems wrong because then if a node goes down, it's queue backs up and that's kinda the whole purpose of having multiple nodes is to not have that happen
[19:46:23] <mekhami> outside, on an aws SQS
[19:46:38] <benwilson512> so from SQS's perspective
[19:46:55] <benwilson512> it has _zero_ idea whether you have 10 nodes with 100 processes each requesting messages, or 1 node with 1000 processes requesting messages.
[19:47:01] <benwilson512> your node count doesn't matter
[19:47:07] <mekhami> right
[19:47:22] <mekhami> but i don't want muliple nodes to pull the same item off of the queue (if that's even technologically possible, idk)
[19:47:40] <benwilson512> whether or not SQS lets you do that isn't about your node count
[19:47:46] <benwilson512> SQS fortunately is a good queue, it won't let you do that
[19:47:51] <mekhami> okay that's good to know.
[19:47:55] *** Joins: bodgix (~bodgix@vps-ae17da44.vps.ovh.net)
[19:47:57] <benwilson512> but
[19:48:01] <mekhami> Idempotency with multiple nodes, not sure how that would work
[19:48:08] <benwilson512> how would it work with a single node?
[19:48:29] <benwilson512> my point is that almost every answer to these questions where you would go "well on a single node I can just assume only one thing is happening" is actually false
[19:48:36] <benwilson512> and unreliable
[19:49:30] <benwilson512> the difference in mentality isn't 1 node vs multiple nodes, it's "single threaded one operation at a time vs concurrency"
[19:51:11] <mekhami> right. i'm sorta terrified of assumptions that i'm making about that, that i don't even know i'm making, and own't know until it's time to go live lol
[19:51:52] <benwilson512> fair, but the thing I can't emphasize enough: node count isn't the reason to be afraid
[19:51:56] <benwilson512> these same problems exist even with just 1 node
[19:52:13] <mekhami> right. i hear you, and i'll be mindful of that.
[19:52:32] <benwilson512> hopefully there are other folks you work with that you can rely on to sanity check this stuff
[19:52:35] <mekhami> lack of experience going to production here is the real killer. i love this language/paradigm but i need to actualyl see something through.
[19:52:42] <benwilson512> if you're being guided to use SQS in production but aren't sure of the guarantees it provides
[19:52:50] <benwilson512> then that seems like an area where your company should be supporting you
[19:53:07] <mekhami> we don't have any experienced elixir devs; we have good devops people and systems people in general, but i'm one of like three somewhat experienced with elixir lol
[19:53:12] <benwilson512> the questions you're asking WRT SQS are relevant no matter what language you're using though
[19:53:32] <mekhami> so we're taking a risk on elixir but it's sorta a perfect fit for our business so i'm confident after the bumps in the road, we're going to end up in a much better place.
[19:53:35] <benwilson512> gotcha
[19:54:02] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 258 seconds)
[19:55:08] *** Quits: thojanssens (~thojansse@tribes-c1-dc.benkgroep.eu) (Ping timeout: 268 seconds)
[19:55:17] *** Quits: Guest8389 (~pera@137.221.132.180) (Quit: leaving)
[19:56:13] *** Joins: GIANTWORLDKEEPR_ (~pjetcetal@2.95.227.207)
[19:56:13] *** Quits: GIANTWORLDKEEPR_ (~pjetcetal@2.95.227.207) (Client Quit)
[19:57:12] *** Quits: mercerist (~mercerist@user/mercerist) (Ping timeout: 250 seconds)
[19:58:46] *** Joins: mercerist (~mercerist@user/mercerist)
[20:00:21] <benwilson512> gotcha
[20:00:45] <Nicd> gotcha
[20:00:47] <mekhami> also unsure of things like code analysis/linter stuff. code formatting. we use pre-commit hooks with black/flake8 with python
[20:00:55] <mekhami> and i'd like to get that in the door early on for this elixir stuff
[20:04:08] *** Quits: odoood (~odoood@2601:c8:c003:a550::2) (Ping timeout: 250 seconds)
[20:09:05] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[20:11:44] *** Quits: mercerist (~mercerist@user/mercerist) (Ping timeout: 244 seconds)
[20:12:00] *** Quits: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Ping timeout: 272 seconds)
[20:14:07] *** Joins: mercerist (~mercerist@user/mercerist)
[20:14:10] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[20:15:08] *** Quits: itinerati (uid504895@id-504895.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[20:15:42] <benwilson512> mekhami: formatting is easy, just `mix format --check-formatted`
[20:16:00] <benwilson512> warnings as errors is sometimes desirable as well
[20:23:44] *** Joins: kfajdsl (~sahan@2601:cb:4000:4bf0:5c01:dd38:2e67:ea3)
[20:26:43] *** Quits: mercerist (~mercerist@user/mercerist) (Ping timeout: 244 seconds)
[20:29:12] *** Joins: mercerist (~mercerist@user/mercerist)
[20:34:14] <mekhami> any other code analysis tools you like?
[20:34:19] <mekhami> i've heard mixed reviews on dialyzer
[20:40:03] <mekhami> https://dnlserrano.dev/2019/12/21/behaviours-and-dynamic-dispatch.html I just read this article and my thought is, why aren't they just using a protocol? A `BeveragePrep` protocol which has different `defimpl` for each beverage type, isn't that what protocols are for?
[20:41:42] *** Quits: mercerist (~mercerist@user/mercerist) (Ping timeout: 244 seconds)
[20:44:13] *** Joins: mercerist (~mercerist@user/mercerist)
[20:49:23] *** Joins: gitgood (~gitgood@80-44-9-45.dynamic.dsl.as9105.com)
[20:55:04] *** Quits: czard_ (~czard@host-92-0-171-198.as13285.net) (Remote host closed the connection)
[20:57:26] *** Quits: mercerist (~mercerist@user/mercerist) (Ping timeout: 250 seconds)
[20:59:44] *** Joins: mercerist (~mercerist@user/mercerist)
[21:09:43] <mhmd> Hi, I want to run a function (task) at specific time, with optional retries, timeout and expire time, and live reports of changes in its status
[21:09:55] <mhmd> I tried to specify what I'm looking for with types (and some comments) here: http://p.ip.fi/7gkS
[21:10:07] <mhmd> I need to have the latest status of all tasks in one place, and they need to be updated as soon as they changed
[21:10:27] <mhmd> what do you recommend for implementing this?
[21:10:51] <mhmd> what I currently have in mind is to:
[21:11:00] <mhmd> use a GenServer for managing each task (spawning its function, getting its results, updating state changes, etc)
[21:11:14] <mhmd> use ets tables for storing (and updating) state of each task, and their result (when they were ready)
[21:11:23] <mhmd> tarearbol library is the closest library that I've found that can do some parts of this
[21:11:49] <mhmd> and on discord someone suggested quantum library for timings
[21:12:42] *** Quits: mercerist (~mercerist@user/mercerist) (Ping timeout: 244 seconds)
[21:13:32] <mhmd> what I'm uncertain about is a mechanism to report status changes immediately
[21:14:39] <mhmd> other parts are relatively easier
[21:15:02] *** Joins: mercerist (~mercerist@user/mercerist)
[21:22:32] *** Joins: andreyorst_ (~u0_a177@176.59.42.5)
[21:23:52] *** Quits: gitgood (~gitgood@80-44-9-45.dynamic.dsl.as9105.com) (Ping timeout: 250 seconds)
[21:28:12] *** Quits: mercerist (~mercerist@user/mercerist) (Ping timeout: 244 seconds)
[21:29:56] *** Joins: mercerist (~mercerist@user/mercerist)
[21:32:57] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[21:42:54] *** Joins: gitgood (~gitgood@80-44-9-45.dynamic.dsl.as9105.com)
[21:47:05] *** Joins: thojanssens (~thojansse@ptr-178-51-74-6.dyn.mobistar.be)
[21:47:32] *** Quits: thojanssens (~thojansse@ptr-178-51-74-6.dyn.mobistar.be) (Read error: Connection reset by peer)
[21:47:55] *** Joins: thojanssens (~thojansse@ptr-178-51-74-6.dyn.mobistar.be)
[21:53:18] *** Joins: notzmv (~zmv@user/notzmv)
[21:55:55] <benwilson512> mhmd: I'd use Oban honestly if you're looking for an off the shelf solution
[21:56:51] <benwilson512> it supports scheduled jobs, retries, time outs, etc. and you can subscribe to telemetry events for live updates
[21:56:59] <benwilson512> as well as just query the DB table
[22:03:02] *** Joins: Celeo (~Celeo@user/celeo)
[22:04:46] <mhmd> benwilson512: is using postgres necessary? I think I didn't look into oban more because it was using a database, and I thought I don't need it, because most of my tasks would live less than few seconds
[22:15:51] *** Quits: kfajdsl (~sahan@2601:cb:4000:4bf0:5c01:dd38:2e67:ea3) (Quit: WeeChat 2.9)
[22:24:22] *** Quits: mercerist (~mercerist@user/mercerist) (Ping timeout: 272 seconds)
[22:25:41] *** Joins: mercerist (~mercerist@user/mercerist)
[22:34:48] <mhmd> I'm reading about it, it seems pretty neat!
[22:39:13] <hoppity> How do you guys recommend adding the current logged in user to a changeset avoiding having to cast is since it is not "user passed" data?
[22:39:16] *** Quits: mercerist (~mercerist@user/mercerist) (Ping timeout: 250 seconds)
[22:41:14] *** Joins: mercerist (~mercerist@user/mercerist)
[22:48:54] *** Quits: floriann (~Thunderbi@2a02:8106:2e:1300:7ca5:b213:8705:48e0) (Quit: floriann)
[22:54:26] *** Quits: mercerist (~mercerist@user/mercerist) (Ping timeout: 250 seconds)
[22:56:31] *** Joins: mercerist (~mercerist@user/mercerist)
[23:09:28] *** Quits: mercerist (~mercerist@user/mercerist) (Ping timeout: 244 seconds)
[23:09:48] <thojanssens> hoppity, what?:D
[23:10:37] <hoppity> thojanssens, imagine I am submitting a form but in the end, when the data is actually saved in the database I need a user_id to be saved as well. How do I add said user_id to my changeset without sending it as a form param.
[23:11:45] *** Joins: mercerist (~mercerist@user/mercerist)
[23:11:49] <thojanssens> hoppity, by using put_assoc or put_change
[23:12:16] <thojanssens> changeset |> put_assoc(:user, current_user)
[23:12:45] *** Joins: mexen (uid495612@user/mexen)
[23:15:31] <hoppity> so I have to modify my change set to not only take in params but also a :current_user right? Is this recommended?
[23:15:56] <hoppity> I am sorry if these are stupid questions, I just don't want to start "hacking around" and ignoring best practices etc
[23:17:29] <thojanssens> hoppity, you cast and then you add the user with put_assoc. Not use about recommended ways, I don't see an issue
[23:17:47] <thojanssens> Not sure*
[23:18:14] *** Quits: rahul_j (~rahul_j@49.37.168.72) (Remote host closed the connection)
[23:18:47] <hoppity> thojanssens, thank you, I thought I should not be casting it (not that there is a problem with casting) since the user_id is not information provided by the user and instead is information that the app itself already has
[23:19:37] <thojanssens> hoppity, yeah you don't cast it, you call put_* functions
[23:20:06] <thojanssens> hoppity, cast_* functions for external data, put_* functions for trusted data (as you say, that the app itself already has)
[23:20:42] <hoppity> thojanssens, thank you I will use put functions then
[23:35:36] *** Joins: Snyp (~rksht@49.207.198.3)
[23:35:48] <rawtaz> sneep
[23:36:34] *** Quits: phaleth (~phaleth@user/phaleth) (Quit: phaleth)
[23:39:44] *** Quits: mercerist (~mercerist@user/mercerist) (Ping timeout: 272 seconds)
[23:40:21] *** Joins: rahul_j (~rahul_j@49.37.168.72)
[23:42:03] *** Joins: mercerist (~mercerist@user/mercerist)
[23:42:07] *** Quits: rahul_j (~rahul_j@49.37.168.72) (Read error: Connection reset by peer)
[23:46:52] <Snyp> o_o
[23:47:54] <Snyp> Noticed that you can't have a module attribute map that contains anonymous functions as values inside it. Enum.reduce fails on the map.
[23:50:48] <Nicd> fails how?
[23:50:50] *** Quits: andreyorst_ (~u0_a177@176.59.42.5) (Read error: Connection reset by peer)
[23:50:54] *** Joins: andreyor1 (~u0_a177@176.59.55.64)
[23:52:17] *** andreyor1 is now known as andreyorst_
[23:53:56] <Snyp> Nicd: cannot inject attribute @csv_headers_info into function/macro because cannot escape #Function<1.132559024 in file ... 
[23:54:24] <Snyp> (That's the compiler message)
[23:54:44] <rawtaz> Enum.map() it first?
[23:54:46] <Nicd> interesting
[23:55:05] <Nicd> I don't think map will work either
[23:55:06] *** Quits: mercerist (~mercerist@user/mercerist) (Ping timeout: 250 seconds)
[23:55:42] <rawtaz> mapping with a function that calls the function to return a non-function value, why wouldnt that work?
[23:56:04] <Snyp> rawtaz: same message
[23:56:15] <rawtaz> can you show the code you tried there?
[23:56:25] *** Joins: mercerist (~mercerist@user/mercerist)
[23:56:39] <Snyp> doesn't matter, the Enum.*** function, it's just the module attribute itself
[23:56:44] <rawtaz> ok
[23:56:59] <Snyp> rawtaz:     relevant_columns =
[23:57:02] <Snyp>       Enum.filter(@csv_headers_info, fn {column_name, column_info} ->
[23:57:04] <Snyp>         relevant_for in column_info.relevant_for
[23:57:06] <Snyp>       end)
[23:57:20] <Nicd> I think it'll fail as soon as you use the attribute anywhere
[23:57:34] <rawtaz> conclusion: attributes are bad and evil, stay away
[23:57:39] <rawtaz> - drama llama
[23:58:05] <Snyp> are they? or are they _really_ meant for compile time constants. like, really really compile time constants.
[23:58:37] <rawtaz> im just spreading FUD
[23:58:51] <Snyp> haha
[23:59:40] *** Joins: chonkbit (~chonkbit@2600:1700:2150:1d40:86c5:a6ff:fe3b:ae7a)
