[00:00:13] *** Joins: PowaBanga (~PowaBanga@user/powabanga)
[00:00:18] *** Joins: cthulchu (~Cthulchu@184-090-172-137.res.spectrum.com)
[00:01:06] <ljharb> ?
[00:01:23] <hassoon> ?
[00:01:54] *** Quits: paule32_ (~paul@user/paule32) (Ping timeout: 260 seconds)
[00:02:19] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:e079:3d56:c8cd:8e66)
[00:04:20] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[00:04:20] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[00:04:20] *** Joins: wroathe (~wroathe@user/wroathe)
[00:06:03] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[00:07:49] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[00:11:49] *** Joins: federico_it (~textual@151.36.161.205)
[00:12:43] *** Quits: isflavior (~isflavior@2001:8a0:5dd8:4100:a49f:4aaf:39ba:23d1) (Quit: isflavior)
[00:13:24] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[00:17:41] *** Joins: sidro (~sidro@86.121.200.249)
[00:18:05] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[00:21:27] <banana_> good TDZ refresher
[00:21:56] *** Quits: kevindank (~kevindank@c-76-99-182-66.hsd1.de.comcast.net) (Quit: Client closed)
[00:22:05] <banana_> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let#temporal_dead_zone_tdz
[00:23:01] *** Quits: sidro (~sidro@86.121.200.249) (Quit: Konversation terminated!)
[00:23:24] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[00:24:46] *** Joins: sidro (~sidro@86.121.200.249)
[00:25:25] *** Quits: reezoh (~reezoh@173.168.223.85) (Read error: Connection reset by peer)
[00:27:37] *** Joins: pavonia (~user@user/siracusa)
[00:28:44] <banana_> also to add you can in JS you can shadow over inherited variables in embedded scopes
[00:29:01] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[00:29:01] <banana_> I said you can too much.
[00:29:43] <banana_> I think "shadowing another inherited variable" is a correct way to describe what I'm saying
[00:30:43] *** Joins: electr0n (~electr0n@about/security/founder/electr0n)
[00:32:35] *** Quits: pmercado (~pmercado@190.22.191.172) (Ping timeout: 252 seconds)
[00:34:06] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 245 seconds)
[00:35:05] *** Quits: cthulchu (~Cthulchu@184-090-172-137.res.spectrum.com) (Ping timeout: 256 seconds)
[00:37:16] <Slade> hm, they figured out the definition https://media.discordapp.net/attachments/813965986457583646/926217432006287380/Fbd669F.png
[00:38:23] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[00:40:00] *** Joins: falafel (~falafel@2603-8000-d800-688c-6db4-c125-f693-41cb.res6.spectrum.com)
[00:41:28] *** Quits: kmh (~kmh@2a00:6020:5004:6800:2b29:9500:2873:7d5b) (Quit: Leaving)
[00:41:57] *** Quits: kalen (~kalen@gateway/vpn/pia/kalen) (Quit: Leaving)
[00:42:27] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[00:50:27] <banana_> Slade nice
[00:51:02] *** Quits: dingdreher (~dingdrehe@46.140.25.62) (Quit: dingdreher)
[00:51:13] *** Joins: kmh (~kmh@2a00:6020:5004:6800:fd75:4747:da1e:3268)
[00:58:34] *** Quits: falafel (~falafel@2603-8000-d800-688c-6db4-c125-f693-41cb.res6.spectrum.com) (Remote host closed the connection)
[00:58:52] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[00:58:52] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[00:58:52] *** Joins: wroathe (~wroathe@user/wroathe)
[00:58:57] *** Joins: falafel (~falafel@2603-8000-d800-688c-6db4-c125-f693-41cb.res6.spectrum.com)
[00:59:27] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[01:00:29] *** Joins: h4b17s (~h4b17s@2600:1702:cc6:8440:851a:b689:ede6:c39c)
[01:00:40] *** Quits: sidro (~sidro@86.121.200.249) (Quit: Konversation terminated!)
[01:00:47] *** Quits: zer0bitz (~zer0bitz@194.34.133.91) (Ping timeout: 268 seconds)
[01:02:48] *** Joins: falafel_ (~falafel@2603-8000-d800-688c-6db4-c125-f693-41cb.res6.spectrum.com)
[01:03:10] *** Quits: h4b17s (~h4b17s@2600:1702:cc6:8440:851a:b689:ede6:c39c) (Quit: WeeChat 3.4)
[01:03:25] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[01:05:37] *** Quits: falafel (~falafel@2603-8000-d800-688c-6db4-c125-f693-41cb.res6.spectrum.com) (Ping timeout: 240 seconds)
[01:07:11] <Donitz> do you like using elements such as header, footer and content?
[01:07:19] <Donitz> I'm still a bit undecided
[01:07:26] <Donitz> I kinda prefer to just use divs with a class
[01:07:37] *** Quits: falafel_ (~falafel@2603-8000-d800-688c-6db4-c125-f693-41cb.res6.spectrum.com) (Ping timeout: 240 seconds)
[01:08:00] <hassoon> sure, do whatever you want
[01:08:54] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[01:13:15] <nb-ben> I don't think it's used by anything
[01:13:35] <nb-ben> like, it's supposed to have some semantic value
[01:14:31] <Donitz> yeah, I mean it seems very obvious that it should be able to be picked up by search engines
[01:14:34] <Donitz> just like header tags
[01:14:38] <nb-ben> but nothing seems to really use that semantic meaning, so in reality it's useless
[01:14:38] <Donitz> but is it?
[01:14:48] <Donitz> When I read the description about WHEN they should be used
[01:14:53] <Donitz> it was like "*shrug*"
[01:15:10] <nb-ben> I think there might have been a better case for it back when we were writing webpages
[01:15:13] <Donitz> liek, what is "content"?
[01:15:15] <Donitz> like*
[01:16:00] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[01:16:57] *** Joins: twiclo (~twiclo@2604:7b80:2000:1069:52fc:cedd:fbeb:10c)
[01:18:16] <twiclo> I'm trying to remove electron from a website so it can just be hosted like any old website. I'm using browserify to link all the files together that node was doing with require(). Some global variables aren't being shared across files. Would requiring the file that the global variable was defined in fix this or do I need to look into this "window object" thing?
[01:18:56] *** Joins: pulse (~pulse@user/pulse)
[01:23:11] *** Joins: falafel_ (~falafel@2603-8000-d800-688c-6db4-c125-f693-41cb.res6.spectrum.com)
[01:23:17] *** Joins: dingdreher (~dingdrehe@46.140.25.62)
[01:27:41] *** Joins: falafel__ (~falafel@cpe-76-168-195-162.socal.res.rr.com)
[01:28:09] <Donitz> pff
[01:28:09] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[01:28:22] <Donitz> and that's why I argue that people should learn vanilla js, and not frameworks like electron
[01:28:32] <Donitz> quite frankly, vanilla js is as easy if not more easy than electron
[01:28:43] <Donitz> I mean, react*
[01:28:53] *** Joins: CiaoSen (~Jura@p200300c957347b002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[01:29:11] *** Joins: kalen (~kalen@gateway/vpn/pia/kalen)
[01:29:13] <Donitz> I don't see why you'd pick hosting a website using electron ever
[01:29:18] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:3594:b465:a73d:248e) (Quit: WeeChat 3.4)
[01:29:50] <ljharb> electron or react
[01:30:05] <Donitz> I'm guessing it was some kind of client-side electron app website dashboard
[01:30:09] <ljharb> twiclo: electron has the capabilities of both node and browsers, so you *can't* easily split it up
[01:30:17] <ljharb> Donitz: ok but react has nothing to do with this
[01:30:31] <ljharb> (and it's not about easy vs hard, there's tons of other good reasons to prefer react over vanilla)
[01:30:37] *** Quits: falafel_ (~falafel@2603-8000-d800-688c-6db4-c125-f693-41cb.res6.spectrum.com) (Ping timeout: 240 seconds)
[01:30:59] <Donitz> list 3 valid reasons
[01:31:09] <Donitz> which can't be done with vanilla with a few minutes effort
[01:31:57] *** Quits: falafel__ (~falafel@cpe-76-168-195-162.socal.res.rr.com) (Ping timeout: 240 seconds)
[01:32:42] <ljharb> i mean, one incredibly important reason is "it doesn't take as much effort to do it correctly"
[01:33:01] <ljharb> react, like jquery, papers over a bunch of browser differences that continue to this day, and that no dev should have to think about
[01:33:08] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:33:12] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[01:33:20] <Donitz> such as
[01:33:32] <Donitz> what possible reason is there left after ie is dead
[01:33:33] <ljharb> i don't have a list in my head, because that's the whole point
[01:33:35] <ljharb> there are tons
[01:33:43] <ljharb> each browser will forever have its own unique list of fuckups
[01:33:49] <ljharb> IE was never the only problem
[01:33:59] <ljharb> another very important reason is that the DOM is trash and full of mutations, which are also trash, and using a component framework means you don't have to touch the DOM directly for almost anything
[01:34:00] <Donitz> I know that safari is trying to become the new ie
[01:34:05] <ljharb> no, not at all
[01:34:11] <ljharb> chrome is full of more crap than safari
[01:34:28] <Donitz> naw, chrome has always worked just fine for everything I have made
[01:34:30] <ashnur> i like lots of stuff in chrome
[01:34:30] <Donitz> safari, not so much
[01:34:36] <ashnur> what is crap?
[01:34:41] <ljharb> it's just that chrome's crap is about badly done new features, and trying to kill web standbys, where safari's problems are mostly "they haven't implemented nonstandard stuff"
[01:34:59] <ljharb> Donitz: that's a condemnation of everything you have made, not of a browser, sorry to say
[01:35:00] <Donitz> and you know, they keep f*cking up stuff like audio permissions
[01:35:02] <ashnur> and what's standard was up to them too
[01:35:10] <ljharb> audio stuff, i'll grant you
[01:35:13] <Decker> non-standard stuff like using gradients in SVGs
[01:35:14] <ljharb> ashnur: no it's not
[01:35:41] <ljharb> ashnur: it's up to google mostly, because they abuse their monopoly to force bad standards into the web
[01:35:52] <ashnur> but how can they do that?
[01:36:26] <ljharb> ashnur: by just shipping it, and then going to the standard and saying "look at all the websites that depend on it now and are broken in other browsers, obv it needs to be a standard"
[01:36:38] <ljharb> and then the other browsers eventually have to ship it, so they aren't broken, and then it's a standard
[01:36:47] *** Quits: federico_it (~textual@151.36.161.205) (Quit: Textual IRC Client: www.textualapp.com)
[01:37:02] <ashnur> but then if people use it, then it probably made sense, no? :) (speaking as the devil's advocate i realize)
[01:37:07] <ljharb> be very skeptical of literally anything google pushes into chrome
[01:37:09] <ljharb> ashnur: no
[01:37:19] <twiclo> Donitz I was against electron from the start. Trust me I hate this quite a bit
[01:37:21] <Alexendoo> developers will use anything shiny
[01:37:23] <ljharb> ashnur: or rather, it might mean they want some of the features, sure. but that does not mean that's the way it should be designed
[01:37:26] <ljharb> also, what Alexendoo said
[01:37:27] <ashnur> dunno why people always use what makes no sense and they don't use what makes sense :D
[01:37:42] <ashnur> developers work for money
[01:37:54] <twiclo> So anyways... how do I get a global variable going here?
[01:37:57] *** Quits: apchar (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu) (Quit: Leaving)
[01:38:00] <ljharb> twiclo: you don't want a global variable
[01:38:05] <Alexendoo> But also they do publicise their new things, like hey look at how cool this is, you should use it. [no mention of other browser support]
[01:38:06] <ashnur> if it's only developers' personal sites that use shiny features, that's hardly enough for standards bodies
[01:38:08] <twiclo> Why don't I?
[01:38:16] <ljharb> twiclo: for bundling, you need to make one bundle for the *entire site*
[01:38:26] <twiclo> What is bundling
[01:38:32] <ljharb> twiclo: the thing browserify invented
[01:38:33] <ljharb> and is
[01:38:39] <twiclo> Okay so what should I do
[01:38:40] <ljharb> twiclo: you can have multiple files using bundle splitting, but get it working first with a single bundle per page
[01:38:55] <ljharb> twiclo: you have a single entry point for 100% of the JS that your site needs
[01:39:12] <twiclo> So you're saying instead of a global variable put it all into one file and have a global variable in that file
[01:39:18] <ljharb> ashnur: it is quite enough in many cases
[01:39:36] <ljharb> ashnur: browser dominance is game theory. if people think it's the browsers' fault a site doesn't work, then that browsers is forced to make it work even if it's a bad idea
[01:39:45] <ljharb> twiclo: no, have no global variables ever anywhere
[01:39:47] <twiclo> This is a one page website. I am currently trying to get it working with a single bundle
[01:39:50] <ljharb> twiclo: i'm saying have each module require what it needs
[01:40:01] <ljharb> twiclo: using normal node stuff, require and module.exports =
[01:40:16] <twiclo> Right but there are things that need to be consistent across files
[01:40:24] <ljharb> twiclo: then each file must require it in explicitly
[01:40:31] <twiclo> Okay so you're saying I can just require a variable and the contents of that variable will come along?
[01:40:32] <ljharb> twiclo: that's "using module"
[01:40:39] <ljharb> twiclo: you don't require a variable. you require a module (a file)
[01:40:53] <ljharb> twiclo: and whatever that file exports (`module.exports = whatever`) will be brought in
[01:41:02] <twiclo> Okay so you're saying I can just require a file with a variable in it and the contents of that variable will come along?
[01:41:28] <twiclo> I don't want an empty variable here. I want to be able to modify the variable and have other files that are using it all share that modification
[01:41:56] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[01:44:07] <banana_> twiclo: so youre saying you want the module to maintain state
[01:44:24] <twiclo> I want this variable to be a global variable
[01:44:36] <twiclo> If one file/function edits it that needs to be seen by everything
[01:44:45] <ljharb> twiclo: no
[01:44:50] <ljharb> twiclo: variables never come along
[01:44:51] <banana_> basically a value that can be references in different modules
[01:44:54] <Decker> so export it and import it in another
[01:44:59] <ljharb> twiclo: but a file can EXPORT, explicitly, a VALUE (not a variable)
[01:45:03] <banana_> *referenced*
[01:45:35] <ljharb> twiclo: but also, what is this mutable global state and why is your application structured that way
[01:45:35] <twiclo> Right ljharb so I can say var x = require(file.thisX) and x will have that value and I'll have to export it back when I'm done?
[01:45:40] <banana_> twiclo: yeah so I think you do mean state
[01:45:46] <ljharb> twiclo: no
[01:45:53] <ljharb> twiclo: `var x = require('path/to/file')`
[01:45:55] <twiclo> banana_ okay how is that achieved?
[01:46:05] <ljharb> twiclo: and then the file does `module.exports = { some: 'object' }`
[01:46:14] <banana_> twiclo: what ljharb is saying
[01:46:14] <ljharb> twiclo: this is how everything in node (and electron) works
[01:46:22] <Decker> twiclo it'llbe shared... node even support like const vars = require( 'config.json' );
[01:46:38] <twiclo> Right but how does the new value make it back into path/to/file?
[01:46:44] <ljharb> twiclo: back?
[01:46:46] <Decker> write
[01:46:47] <ljharb> twiclo: it's a value.
[01:46:48] <twiclo> Okay so I don't have to explicitly share it back
[01:46:53] <ljharb> twiclo: objects are mutable, so no
[01:46:55] <ljharb> twiclo: you just mutate it
[01:47:09] <twiclo> I didn't know if it was being passed by reference or by value
[01:47:14] <ljharb> twiclo: BUT separately from "how do you have mutable state without globals", please understand that merely *having mutable state* is bad
[01:47:15] <twiclo> Sounds like reference
[01:47:20] <ljharb> twiclo: everything in JS is ALWAYS by value
[01:47:23] <ljharb> !pass by value @ twiclo
[01:47:23] <jellobot> twiclo, JavaScript has call-by-value semantics in which references to objects are considered to be a type of value. Direct assignment to an argument will never be visible outside of a function. For a detailed explanation, see: https://web.archive.org/web/20161005155047/http://www.jon-carlos.com/2013/is-javascript-call-by-value-or-call-by-reference/
[01:47:43] <ljharb> objects are kind of like a reference, but they're still passed by value, just like everything else
[01:47:46] <twiclo> Okay if it's by value then isn't it simply cloning the value and whatever is done to it in the recieving file won't affect the value of the sending file?
[01:47:55] <ljharb> no
[01:47:57] <Decker> it's just cloning the object pointer/reference
[01:47:59] <ljharb> twiclo: read the article
[01:48:13] <twiclo> It's cloning the reference which is basically to say it's passing by reference
[01:48:15] <ljharb> like, switch from irc, read the article, and only then come back
[01:48:17] <ljharb> twiclo: NO
[01:48:21] <twiclo> I'm not reading that
[01:48:23] <ljharb> twiclo: that violates the definition of "pass by refernce"
[01:48:27] <ljharb> twiclo: then why are you here asking for help
[01:48:37] <ljharb> twiclo: until you read that you're not going to understand javascript
[01:48:38] <twiclo> I just need to know if the changes get applied back and it sounds like it does. I don't care about the specifics or the pedantry
[01:48:42] <ljharb> twiclo: or passing by reference, for that matter
[01:48:49] <ljharb> twiclo: you should, because that's the only way you can know
[01:49:01] <ljharb> twiclo: you need to drop everything and read that artivle.
[01:49:02] <ljharb> *article
[01:49:03] <twiclo> I'm not trying to understand javascript more or rewrite this project to remove global variables. I'm just trying to get it out of electron. It's not my code
[01:49:13] <banana_> yep there's primitive and reference types in javascript. and primitives are immutable but stuff like 'test' === 'test' is true because the operators have a special case for primitive operands
[01:49:17] <ljharb> twiclo: you are not capable of getting it out of electron unless you understand javascript more
[01:49:25] <ljharb> twiclo: and it's your code the instant you touch it. take ownership.
[01:49:33] <ljharb> banana_: that's not accurate
[01:49:33] <twiclo> banana_ The whole === thing has always been funny to me
[01:49:34] *** Quits: nomic (~nomic@185.198.243.161) (Quit: Leaving)
[01:49:37] <ljharb> banana_: every 3 is the same 3
[01:49:40] <ljharb> there's no "special casing"
[01:49:49] <banana_> o wait
[01:49:54] <banana_> what ljharb said
[01:50:00] <ljharb> nothing in JS compares by contents. everything is always and only passed by value.
[01:50:15] <ljharb> every occurrence of a primitive is the *same instance*
[01:50:36] <mikrosis> hi
[01:50:48] <mikrosis> I am using react-async for fetching json (showing a skeleton UI placeholder until it finished)
[01:51:06] <mikrosis> however, I don't think the skeleton will ever be seen because the fetching should happen directly at app start - the user selects a category first
[01:51:21] <mikrosis> that short delay between app start and category selection should be more than enough for fetching the data
[01:51:29] <mikrosis> but how can I fetch stuff with react-async in advance?
[01:51:31] <mikrosis> onosendi: !!!
[01:51:43] <mikrosis> onosendi: so I first tried out react fetch - but they hadn't implemented context support yet
[01:51:44] <mikrosis> :/
[01:51:55] <banana_> ljharb: ok sure. but a lot of js operators do have a protocol based on the operands type
[01:52:29] <ljharb> banana_: ok? not sure how that's relevant
[01:53:02] <banana_> you were saying I was wrong just trying to figure where I know my stuff
[01:53:40] <onosendi> mikrosis: What happened to React Query that I suggested? Is that what you meant by "React Fetch"?
[01:54:14] <banana_> ok so youre saying the operators compare the value if for instance it's a binary operator that has two primitive operands
[01:54:30] <ljharb> banana_: if you do `3 === 3` it's saying they're the same 3
[01:54:39] <ljharb> banana_: if you do `[] !== []` it's saying they're not the same array
[01:54:50] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 260 seconds)
[01:57:08] <banana_> so it's checking the value. and you were saying in javascript a specific value represented by a primitive syntax is the same value every place that primitive syntax is used
[01:57:33] <ljharb> it's checking the identity
[01:57:42] <ljharb> and since every 3 is the same 3, they all also have the same identity
[01:57:47] <banana_> that's the term identity
[01:58:35] *** Joins: cheater (~Username@user/cheater)
[01:58:55] <banana_> so the javascript evaluator determines identity
[01:59:51] *** Joins: z1haze (~z1haze@user/z1haze)
[02:00:13] <banana_> and builtin operators rely on the evaluator to then determine for example if each operand has the same value
[02:00:46] <z1haze> I have these 2 files that have a lot of similarities to them, but when i attempt to abstract some of the logic away, I end up with not such a clean result, eg the helper methods need to take in a handful of args and it just doesnt seem good. any suggestions? https://gist.github.com/z1haze/0c8fc5678be2ff3aedfb56401089fa74
[02:01:07] <banana_> like in `1 === 1` first the left operand is evaluated then right one. then the operation is done
[02:01:07] <twiclo> Couldn't I just access this variable using window.theVariable? Pretty sure Browserify is going to put any global into the window object
[02:01:43] <ljharb> banana_: sure
[02:01:48] <ljharb> twiclo: yes, but you shouldn't
[02:01:59] <ljharb> global variables are bad
[02:02:08] <ljharb> much worse than electron, if you're comparing badness
[02:02:14] <banana_> twiclo: yeah my bad it's the javascript evaluator not operands determining the value
[02:02:14] *** Quits: ckdCreations (~ckdCreati@2607:fb90:8346:bdfd:400d:4e86:1eca:ba46) (Ping timeout: 252 seconds)
[02:03:15] <twiclo> What's the difference if every file is requiring this variable? Genuinley curious
[02:03:32] <twiclo> *genuinely
[02:04:34] <banana_> you sound like you really are talking about saving state
[02:04:45] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[02:05:07] <twiclo> There's just a global array that everything needs to be able to see/modify so if that's what that is then sure
[02:05:12] <ljharb> twiclo: explicit versus implicit
[02:05:23] <ljharb> twiclo: if every file is requiring it, then you at least can *see* it's doing so
[02:05:34] <banana_> everything is sorta tied to a variable or some identifier like a variable. but the general idea I think you mean is sharing state
[02:05:40] <ljharb> twiclo: but i'm also very skeptical that every file needs it. and if so, that almost certainly means your files are too big and need to be refactored
[02:05:40] <twiclo> So it's better organized
[02:05:46] <ljharb> twiclo: yes, which means less bugs
[02:07:13] <banana_> ljharb: so youre saying he should update the shared state in some reusable functions?
[02:07:29] <banana_> and maybe import those functions
[02:07:31] <ljharb> banana_: what i'm really saying is "don't have shared state"
[02:07:41] <ljharb> but if you must, at least explicitly import it wherever you need it
[02:08:13] <banana_> ok. wow so you're saying ideally you shouldn't share state
[02:08:45] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[02:08:57] <banana_> I guess this is getting into architecture
[02:09:34] <banana_> your code should be modular and each of your modules shouldn't be coupled by state
[02:09:36] <ljharb> state sharing should certainly be minimized, at the least
[02:09:38] <ljharb> yes
[02:09:56] *** Quits: CoderCharmander (~CoderChar@20014C4C12563000C96363670EDAE354.catv.pool.telekom.hu) (Ping timeout: 252 seconds)
[02:10:01] <banana_> like at most one module requires the state of another but not the other way around
[02:10:04] <banana_> ?
[02:10:05] <twiclo> Okay here's what I've done. The variable is coming in empty
[02:10:07] <twiclo> main.js
[02:10:09] <twiclo> let x = [ 1, 2, 3 ];
[02:10:11] <twiclo> module.exports= { x };
[02:10:13] <twiclo> second.js
[02:10:15] <twiclo> Woops
[02:10:32] *** Joins: cthulchu (~Cthulchu@184-090-172-137.res.spectrum.com)
[02:10:45] <twiclo> second.js
[02:10:46] <twiclo> var x = require("./main.js")
[02:10:48] <twiclo> console.log(x) //{}
[02:10:54] <twiclo> Should that work?
[02:11:09] <ljharb> twiclo: `x.x` should be the array yes
[02:11:33] <twiclo> Shouldn't the log show the whole object though? It's just an empty object when I log it out
[02:11:37] <ljharb> yes, it should
[02:11:47] <ljharb> which suggests something else is going on. is this being bundled?
[02:11:55] <twiclo> Yeah with browserify
[02:11:57] <ljharb> and are you sure there's nothing else in main.js?
[02:12:02] <ljharb> what browserify command are you running?
[02:12:13] <banana_> oh I think I know
[02:12:16] <twiclo> Well there's plenty in main.js but nothing else that modifies x
[02:12:29] <banana_> main.js isn't evaluated yet
[02:12:48] <twiclo> Interesting. It's the entry point to the website so how could that be?
[02:12:51] <banana_> so it returns an empty object in the other module that is already evaluated
[02:13:00] <ljharb> twiclo: you probably have a circular dependency
[02:13:06] <ljharb> twiclo: does main require "second" also?
[02:13:18] <stagas> if the main component is being required by a thing that it depends on then it's going to be empty
[02:13:22] <ljharb> circular deps should never exist
[02:13:33] <twiclo> Oh look at that it does
[02:13:40] <ljharb> ok then, there's your problem
[02:13:46] <ljharb> put the state part in its own file - that requires nothing else
[02:14:08] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[02:14:22] <banana_> yeah circular dependencies will resolve itself by returning an empty object in one of the modules. forgot which
[02:14:38] <stagas> you can boot at the end of the event loop where everything is ready if u do queueMicrotask(main) where main is your booting function
[02:14:51] <ljharb> don't do that
[02:14:52] <stagas> or Promise.resolve().then(main)
[02:14:54] <banana_> basically like "the module youre importing isn't ready yet let's give you an empty something"
[02:14:55] <ljharb> just avoid circular deps
[02:15:05] <banana_> ljharb knows the details :P
[02:15:07] <twiclo> Seems like a bit of a hacky solution to have just a file of variables. I guess the real solution is rewrite things to try to avoid global variables in the first place
[02:15:42] <ljharb> twiclo: the hacky solution is having shared state in the first place, yes
[02:15:45] <banana_> you'll probably need to share state in your app
[02:16:00] <ljharb> ^ that is true. so when you do, minimize it, and keep it explicit
[02:16:10] <banana_> just dont couple state together.
[02:16:20] *** Quits: iamtheworstdev (~iamthewor@c-98-253-72-149.hsd1.in.comcast.net) (Remote host closed the connection)
[02:16:31] *** Joins: iamtheworstdev (~iamthewor@c-98-253-72-149.hsd1.in.comcast.net)
[02:17:52] <ashnur> ljharb, i scrolled back but i don't see where you respond to "developers' own websites wouldn't be enough for standards bodies", are you saying lots of developers banded up, and forced the standards by ignorance?
[02:17:53] <banana_> I just thought of something, components doing data-down action up imply coupling
[02:18:47] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[02:18:56] <ljharb> ashnur: no
[02:19:11] <ljharb> ashnur: i'm saying that it takes very little usage for other browsers to feel forced to implement
[02:19:19] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[02:19:19] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[02:19:19] *** Joins: wroathe (~wroathe@user/wroathe)
[02:19:21] <ljharb> ashnur: and that standards *must* match "what implementations do"
[02:20:19] <banana_> data down, event up. like you can feed data (state) to the component, the component does something base on that input data i.e. the component could change it's state based on the input data (state given), and then the component invokes an input function that essentially is used by the driver of the component to update its state.
[02:21:01] <banana_> so the driver of the component is relying on the component to update it's state.
[02:21:07] <banana_> idk
[02:21:45] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[02:22:50] <ashnur> ljharb, but then if it's very little usage, then it's hard to see why you need a monopoly to abuse it
[02:23:13] <ljharb> ashnur: because when you have a monopoly, a small % in usage is a large absolute number in usage, and matters more
[02:23:25] *** Quits: thojanssens (~thojansse@ppp-124-121-109-229.revip2.asianet.co.th) (Ping timeout: 240 seconds)
[02:23:46] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Quit: Leaving...)
[02:23:50] <ljharb> ashnur: back in the day, if a website worked on opera and broke on everything else, nobody cared about it, they just fixed the website
[02:23:58] <banana_> so to me, I think using components is coupling state together, components are just super flexible for the driver.
[02:23:59] <ljharb> ashnur: but if it worked on everything and broke on opera, nobody would use opera
[02:24:48] <banana_> so basically composition in general I guess involving passing a callback as an input or argument
[02:25:53] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 268 seconds)
[02:26:49] <banana_> so idk what youd call that. I guess if your API is abstract enough you can couple behavior together.
[02:27:53] <ashnur> well, at some point, nothing will work
[02:28:15] <banana_> idk I guess "coupling state" isn't clearly defined
[02:29:52] <banana_> ah nvm
[02:30:01] *** Quits: Sven_vB_ (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:30] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:30:51] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[02:31:20] <banana_> I guess it's ok to share state through function arguments because it's breaks up your code more nicely
[02:32:34] *** Quits: pizdets_ (~pizdets@183.182.111.125) (Ping timeout: 250 seconds)
[02:33:21] <banana_> also if your function is simple enough you could easily replace it if it supported the same API, same parameters, same return value
[02:33:24] <ashnur> and pure functions are easy to test and compose
[02:33:40] *** Joins: pizdets (~pizdets@183.182.110.8)
[02:33:51] *** Parts: palid (palidhacke@bc01n02.hswaw.net) ()
[02:36:09] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:e079:3d56:c8cd:8e66) (Quit: I have gone to sleep. ZZZzzz…)
[02:36:25] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[02:37:00] <banana_> ashur: yeah but I'm thinking callbacks arguments couple the driver of the function to the function more
[02:37:27] <banana_> why I'm thinking that idk
[02:37:52] <banana_> callbacks make your pure functions more complicated.
[02:38:02] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[02:38:44] *** Quits: kalen (~kalen@gateway/vpn/pia/kalen) (Quit: Leaving)
[02:39:17] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[02:40:15] *** Joins: ferdna (~ferdna@user/ferdna)
[02:40:21] <banana_> unless pure functions dont allow callbacks as parameters
[02:41:26] *** Joins: MrBlue_ (~MrBlue@24.114.96.72)
[02:41:52] <banana_> ok sounds like it. thinking now calling a callback in your function is an "observable side effect"
[02:42:10] <ljharb> it's an observable *effect*
[02:42:12] <ljharb> which is fine
[02:42:46] <banana_> so components like React components aren't pure functions or a lot of them aren't
[02:43:14] <banana_> if youre relying on events from components then yeah that's an observable side effect
[02:43:37] *** Quits: MrBlue (~MrBlue@192.145.80.134) (Ping timeout: 240 seconds)
[02:44:21] <banana_> I got that wrong? side effect vs effect
[02:45:09] *** Quits: MrBlue_ (~MrBlue@24.114.96.72) (Client Quit)
[02:47:05] <banana_> ah ok so having side effects in your code is inevitable but using more pure functions, that dont have these, is cleaner
[02:48:39] <ljharb> banana_: react components are supposed to be pure functions of props and state
[02:48:48] <ashnur> banana_, don't use callbacks then
[02:48:50] <ljharb> banana_: callbacks aren't always side effects, sometimes they are primary effects
[02:48:53] <ljharb> callbacks are fine
[02:49:18] <ashnur> using them exclusively is not fine
[02:49:43] <banana_> this one guy's article says "A side effect is the modification of state through the invocation of a function or expression."
[02:50:03] <ashnur> side effect is the cpu heating up
[02:50:04] <ljharb> banana_: it's the modification that makes it the side effect
[02:50:08] <ljharb> banana_: not the invocation of the function
[02:51:01] <ashnur> everything that happens that's not returned is side effect
[02:51:14] <banana_> ah ok yeah so more refinely callbacks cause side effects
[02:51:26] <ljharb> ashnur: "side" is the operative word.
[02:51:35] <ljharb> banana_: *can* cause. don't inherently cause.
[02:51:48] <banana_> or usually cause side effects why else would you need it unless your callback function didnt do anything
[02:52:00] <banana_> and you wanted it
[02:52:01] <ljharb> banana_: the function you pass to `.filter` is a callback
[02:52:04] <Intelo> Here is what I wanted to do (at bottom) and here is what I got (starting from top) https://i.imgur.com/Djj8Non.png
[02:52:16] <ljharb> banana_: it need not have any side effects, but the filter function needs its return value
[02:52:34] <ljharb> banana_: filter calling the predicate once per item is an *effect* but not a side effect.
[02:53:05] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[02:53:13] <banana_> ah good example
[02:53:36] *** Quits: spinningCat (~spinningC@94.54.234.81) (Changing host)
[02:53:36] *** Joins: spinningCat (~spinningC@about/web/muscles)
[02:56:17] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 240 seconds)
[02:56:44] *** Joins: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au)
[02:57:03] *** Joins: Ilyu (~quassel@gateway/vpn/pia/ilyu)
[02:57:39] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[02:59:47] <banana_> the very next sentence did say " In order for a function or expression to have a side effect, the state it modifies should be out of its local scope."
[03:00:16] *** Joins: kalen (~kalen@gateway/vpn/pia/kalen)
[03:02:56] <cheater> that's not right
[03:03:07] <cheater> the only effects functions have are return values and side effects
[03:03:24] <cheater> calling to another function is not returning a value so it either results in no effects or in side effects
[03:04:13] <cheater> it almost certainly results in some sort of side effects, but they may be insignificant for you
[03:04:44] <cheater> for example, it could mean your function takes longer to execute, which doesn't matter for you, but someone looking to analyze your logic via a side channel can use that to recreate your code
[03:04:57] <cheater> stuff like that
[03:05:03] <ashnur> technically there is always side effect
[03:05:28] <cheater> no
[03:05:49] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[03:06:03] <epolanski> const add = (a, b) => a + b, where's the side effect?
[03:06:06] <ashnur> i just said what you said cheater, i was slow to read
[03:06:25] <ashnur> epolanski, not in the symbolic, algebraic sense, but yes in the technical sense
[03:06:48] <cheater> no
[03:07:19] <ashnur> very specific, you are not
[03:07:26] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:5c05:87c9:9af0:4a4d)
[03:07:29] *** Quits: faLUKE (~paolo@151.47.219.165) (Read error: Connection reset by peer)
[03:07:43] <cheater> yes
[03:09:47] *** Quits: FoodMan (~glucose@user/foodman) (Ping timeout: 256 seconds)
[03:09:59] <epolanski> look, I'll explain it very simple. Every single program has to do something, a side effect, otherwise it's not a program, you're just making calculations without doing anything with them, say you have a js file with `2 + 2` and nothing else, that's valid js, but it does nothing so it can't qualify as a "program"
[03:10:33] *** Joins: faLUKE (~paolo@151.37.185.162)
[03:10:49] <ashnur> sure, but i rather like the non theoretic version of the narrative better
[03:11:06] <ashnur> https://wikimedia.org/api/rest_v1/media/math/render/svg/bfe3616dee43f6287d4a4e2a557de8d48ad24926
[03:11:41] *** Joins: chenqisu12 (~bhca7d@183.217.200.22)
[03:11:48] <epolanski> so how can fp make "pure" programs? by splitting the program from its execution. In Haskell this is pretty obvious because you do not have any side effects by default, same in many other functional programs, elm makes it a bit obvious
[03:12:13] *** Quits: DrowningElysium (uid190788@user/drowningelysium) (Quit: Connection closed for inactivity)
[03:12:15] <epolanski> In JS you need to encode it in your program, basically make everything lazy, and only executing it all together
[03:12:44] <ashnur> or you can use CSP
[03:13:13] <epolanski> so say you have `const log = (s: string) => () => console.log(s)` that function is pure, if you do `log("foo")` it does nothing and you can compose it with any other lazy function or lazy promise and have nothing executed
[03:13:19] <ashnur> there are multiple libraries providing it, so it's not that niche, not sure why it has to be ignored most of the time
[03:13:29] <epolanski> till you do log("foo")() which you do only once
[03:14:11] <ashnur> log("foo") doesn't do nothing, it does return another function
[03:14:47] <epolanski> it _does_ nothing in the sense it has no side effects, actually a good js engine encountering only a declaration and lazy declaration may understand it has to do nothing at all and
[03:15:10] <epolanski> but that's details about runtime and interpreter that neither js nor fp are concerned about
[03:15:16] <epolanski> it may very well do nothing
[03:15:24] <epolanski> not even return a function
[03:15:45] <epolanski> so "doing" has to be defined precisely, because how the runtime works is not under our control nor our concern
[03:16:17] *** Quits: chenqisu12 (~bhca7d@183.217.200.22) (Ping timeout: 240 seconds)
[03:16:36] <epolanski> js engines are extremely clever nowadays and they can do a lot of analysis and often understand that the code does "nothing" so they don't even execute the path I believe
[03:17:17] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[03:17:40] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[03:17:48] <ashnur> when you are debating the meaning of words like 'does' and 'nothing', i think we are safe to say that it's too far :D
[03:17:51] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[03:18:04] <epolanski> not really, definitions are important
[03:18:17] <ashnur> yes, but redefinitions need to be not random
[03:18:23] <epolanski> names aren't important, neither "does" or "nothing"
[03:18:34] <banana_> gotta look up the definition of lazy functions again. so youre saying this laziness is implemented by using a factory function (function that returns a function)
[03:18:38] <epolanski> mathematicians don't give two damns whether natural numbers contain or don't contain 0
[03:18:59] <epolanski> that's just a name, you can call them funky numbers instead of natural
[03:19:18] <epolanski> what they care of is once you define them as positives with 0 you can discuss about them
[03:19:35] <ashnur> mathematicians still insist that it makes sense that the way they define real numbers is that if you pick a real number at random, it's literally unaddressable and undescribeable completely
[03:19:39] <epolanski> whether it's natural, funky or nerdy numbers it doesn't matter, it's just a name, definitions are very important
[03:19:53] <ashnur> so please don't argue with what mathematicians think because they are not always sane
[03:20:17] <epolanski> I mean, maths is literally the biggest open source project in history
[03:20:30] *** Parts: Intelo (~Intelo@88.244.93.98) ()
[03:20:32] <epolanski> and it's the most rigorous from a logical point of view
[03:21:16] <ashnur> well, that's another thing, who is into this kind of comparative argumentation, like why should i care by what definition of your will be true that math is the biggest open source project
[03:21:47] <ashnur> it's exactly the kind of wordplay that stopped to be interesting for a while now
[03:22:45] <epolanski> words _are_ important, if you don't define exactly what a function "does" mean, how can we argue if we have different definitions? we talking about different things.
[03:24:21] <ashnur> this guy I heard about, Kurt, has something to say about it
[03:24:29] <ashnur> and this other guy, Ludwig, too
[03:25:13] *** Joins: Maxattax97 (~max@2603:900a:1501:a7ca::100)
[03:25:18] <banana_> yeah might be good to learn Haskell sometime
[03:26:19] <epolanski> banana_: it's a bit oversimplified but that's the gist of how can we write pure programs in js, by writing functions that returns programs, and split them from their execution
[03:26:47] <epolanski> the program execution will always have side effects, or be useless
[03:27:00] <epolanski> but the functions per se can be kept lazy
[03:27:09] <epolanski> and composed together
[03:27:13] <banana_> see that last clause "and split them from their execution" is over my head
[03:28:21] <banana_> but you said splitting from execution i think allows you to right pure functions from then on out, in javascript
[03:28:31] <banana_> *write pure functions
[03:28:51] <banana_> I was saying "right" to myself
[03:31:40] <banana_> it makes sense, like in React apps, having components that render, HTML UI stuff, to need side effects because the user is interacting with with a GUI and clicking a GUI component should update state somewhere else not part of that GUI component
[03:32:34] *** Quits: m_antis (~znc_admin@ool-44c09a21.dyn.optonline.net) (Read error: Connection reset by peer)
[03:33:16] *** Joins: m_antis (~znc_admin@ool-44c09a21.dyn.optonline.net)
[03:33:17] <banana_> so like not just react apps or HTML pages but any GUI I guess
[03:35:07] <banana_> but youre saying like when you click a button in a GUI component, that's execution of a button click, at some point after you should separate out your code to pure functions
[03:36:00] <epolanski> I can link you an example
[03:37:17] *** Joins: wombawomba (~andre@89-253-80-164.customers.ownit.se)
[03:37:31] *** Joins: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu)
[03:37:50] <banana_> so the button click executes, which causes a side effect by calling a function meant for saving state, but inside that outside function that saves state it calls a bunch of pure functions.
[03:38:17] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Ping timeout: 240 seconds)
[03:39:24] <epolanski> banana_:
[03:39:25] <epolanski> https://replit.com/@aquazilol/SpicyGrippingProcedures#index.js
[03:39:31] <epolanski> see if this example makes it more clear
[03:39:39] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[03:40:54] *** Quits: paule32__ (~paul@user/paule32) (Quit: Leaving)
[03:42:14] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[03:42:39] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 256 seconds)
[03:44:20] <banana_> epolanski: yep thanks
[03:44:31] <epolanski> in any context where you don't have only a "main" function the topic of purity gets more blurry
[03:44:40] <banana_> epolanski: also I thought it logged "bar" then "foo"
[03:44:47] *** Quits: z1haze (~z1haze@user/z1haze) (Read error: Connection reset by peer)
[03:44:48] <banana_> had to verify so wouldnt go crazy
[03:45:21] <epolanski> I probably inverted f1 and f2
[03:45:22] <banana_> but yeah see your point of your example. you have to do stuff like that
[03:45:24] <epolanski> went by memory
[03:46:01] <epolanski> indeed it should be the opposite, the lazy function may very well return a value you want to feed to the second one when chaining
[03:47:12] <epolanski> in a context like react you look at it with the lens of having many main functions you can write and compose with pure functions without side effects, and still executing them together
[03:47:24] <epolanski> say some useEffect
[03:48:30] <banana_> so the main functions are the functions with side effects right
[03:49:04] <banana_> but they're chained, tied however, with pure functions
[03:50:44] <banana_> I think I got it
[03:52:18] <banana_> thanks. so to summarize you'll definitely have side effects it's just best practice to isolate them to specific functions
[03:52:44] <epolanski> hmm no you can't chain two main functions
[03:52:48] <epolanski> https://replit.com/@aquazilol/foobarbazzer
[03:52:58] *** Quits: cthulchu (~Cthulchu@184-090-172-137.res.spectrum.com) (Read error: Connection reset by peer)
[03:53:21] <banana_> i might a main function is chained to pure functions
[03:53:23] <epolanski> there can only be one, in react you can think of many _isolated_ main functions
[03:53:25] <banana_> * i ment
[03:53:32] *** Quits: Maxattax97 (~max@2603:900a:1501:a7ca::100) (Quit: WeeChat 3.4)
[03:53:36] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[03:53:37] <epolanski> a main function is only executed, same as in C or Java
[03:53:45] <epolanski> it doesn't return anything and cannot be chained
[03:53:51] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Client Quit)
[03:53:55] <epolanski> I mean, practically it can, but you can't get pure programs
[03:53:56] <banana_> oh that's what you meant by main function
[03:54:10] <epolanski> you can only run it
[03:54:16] <epolanski> main is better to be thought as "run"
[03:54:34] <banana_> was referring when you said "many main functions"
[03:54:36] <epolanski> run the "pure" program, f()()
[03:54:45] <epolanski> I was thinking of like, two useEffects
[03:55:10] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[03:55:11] <epolanski> those are basically two "run", separate functions you can only be "pure" by feeding them a pure program, but you can't compose them
[03:56:37] *** Joins: Maxattax97 (~max@2603-900a-1501-a7ca-0000-0000-0000-0100.inf6.spectrum.com)
[03:56:41] <epolanski> it's difficult to write pure programs in js or ts, it requires lots of discipline and the libs/frameworks aren't meant to have only one pure function.
[03:56:59] <epolanski> elm, a different front end language has the concept of only having one main function
[03:56:59] <epolanski> https://elm-lang.org/examples/hello
[03:57:29] <epolanski> here, you don't "run" main, the interpreter does, but you never "run" or "execute" main, nor you can compose it
[03:57:43] <epolanski> in js, you "run" main with that ugly f()()
[03:58:13] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Client Quit)
[03:59:06] <epolanski> this renaming should make it more clear what I mean:
[03:59:06] <epolanski> https://replit.com/@aquazilol/foobarbazzerz
[04:01:25] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:03:41] <banana_> so youre considering in an app, the code that executes specifically because of a GUI button click as its own program
[04:04:53] <banana_> fuck im confused now
[04:05:01] <banana_> probably will reflect on this
[04:05:21] <epolanski> in the browser you eventually have to run your function
[04:05:28] <epolanski> say you have an eventListener on some click
[04:05:31] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (Quit: Ping timeout (120 seconds))
[04:05:39] <epolanski> on that click you want idk, change color background
[04:05:55] *** Joins: Flonk (~Flonk@vps-zap441517-1.zap-srv.com)
[04:06:30] <epolanski> you can write a pure function that changes the color background const changeBg = (color) => () => whateverImpureCode(color)
[04:06:49] *** Joins: cthulchu (~Cthulchu@184-090-172-137.res.spectrum.com)
[04:07:00] <banana_> ok yeah that was my understanding from what you said before
[04:07:17] <epolanski> so say you have some button.addEventListener("click", ()=> run(changeBg))
[04:07:22] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[04:07:31] <banana_> but like a button click triggers it's own execution
[04:07:34] <epolanski> that's what I meant about thinking about many separate programs
[04:07:37] <banana_> of code
[04:08:58] <epolanski> it requires a lot of time for these things to sink and be absorbed
[04:09:37] <banana_> but your example your main function is pure
[04:10:05] <epolanski> as I said, when you have one main function and that's it, it's simple, in event based architecture it's different. elm uses commands to do side effects
[04:10:44] <epolanski> https://guide.elm-lang.org/effects/diagrams/sandbox.svg
[04:11:27] <epolanski> the blue part is pure, and then you have a second program that executes it and produces html and sends messages when events happen
[04:12:57] <epolanski> but that's the gist of fp, you write programs, and execute them in some "interpreter", whether it's some compiler that takes a main function in haskell and runs it, or my stupid "run" function, or elm's runtime executing that "main", or in react or dom you either write your own interpreter or treat eventListeners, react hooks, or whatever as many mini programs
[04:14:16] <epolanski> but no, you can't have a "pure" react or browser application, unless you split the part where you write the program with its actions and programs, and the part that executes it
[04:14:44] <epolanski> you can feed react or dom apis pure functions though
[04:17:36] <banana_> wouldn't that be the case for any GUI application
[04:18:00] <banana_> actually
[04:18:12] <epolanski> a node example: you write a function handleRequest(request: Request) => () => SomeResponseType, and then you implement separately const someResponse = run(handleRequest(req)); res.statusCode = someResponse.statusCode; res.write(someResponse.body); res.end();
[04:18:17] <banana_> any user interface at all where the app saves state
[04:18:27] <epolanski> you can keep handleRequest pure, but you need a separate interpreter that will do the dirty job
[04:18:57] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[04:19:38] <epolanski> because there isn't really a "main" function in a node.js app, you create a stream that listens for http requests and executes a function when it receives one
[04:22:48] *** Quits: cthulchu (~Cthulchu@184-090-172-137.res.spectrum.com) (Read error: Connection reset by peer)
[04:22:50] <epolanski> I'm off, if you find it confusing, it's normal, takes time and discipline to get used to have "pure" shells and external "interpreters", even large part of haskell community thinks IO is impure, it's not, it's a tough concept to understand
[04:22:53] <epolanski> gn
[04:23:24] <banana_> GN thanks
[04:23:37] <banana_> appreciate it
[04:24:18] *** Joins: cthulchu (~Cthulchu@184-090-172-137.res.spectrum.com)
[04:24:55] <austincheney> What is the best way to slice a buffer into fragments that do not break multibyte string characters?
[04:27:06] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[04:27:37] *** Quits: beencubed (~beencubed@209.131.238.248) (Ping timeout: 240 seconds)
[04:28:44] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[04:28:44] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[04:28:44] *** Joins: wroathe (~wroathe@user/wroathe)
[04:28:45] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.3)
[04:32:45] *** Joins: onosendi (~onosendi@user/onosendi)
[04:35:21] *** Quits: Arisco (~ckmptnml@201-24-225-211.user3p.brasiltelecom.net.br) (Ping timeout: 256 seconds)
[04:41:02] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[04:41:11] *** Joins: beencubed (~beencubed@209.131.238.248)
[04:42:27] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[04:43:35] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[04:44:23] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:45:09] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[04:45:09] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[04:45:09] *** Joins: wroathe (~wroathe@user/wroathe)
[04:47:02] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Ping timeout: 240 seconds)
[04:50:16] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Remote host closed the connection)
[04:53:01] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:5c05:87c9:9af0:4a4d) (Quit: I have gone to sleep. ZZZzzz…)
[04:53:34] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[04:57:37] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[05:01:45] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:85b6:2c43:f2cd:529c) (Quit: Textual IRC Client: www.textualapp.com)
[05:02:21] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[05:07:02] *** Joins: wroathe_ (~wroathe@206-55-188-8.fttp.usinternet.com)
[05:09:55] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[05:14:53] <ThePendulum> I wish I learned about chrome's shift + delete sooner instead of just hoping I'll soon have visited the site I meant to type in often enough that it will autocomplete first
[05:16:39] <onosendi> haha
[05:17:33] <ThePendulum> switched from gmail to protonmail the other day, it would've taken me to mail.google.com forever and I didn't want to wipe my entire browser history
[05:19:43] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[05:22:20] <onosendi> ThePendulum: That's definitely a good switch. Paid version?
[05:24:05] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[05:29:55] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[05:33:19] *** Quits: pulse (~pulse@user/pulse) (Quit: My hovercraft is full of eels)
[05:34:17] *** Quits: wombawomba (~andre@89-253-80-164.customers.ownit.se) (Ping timeout: 240 seconds)
[05:36:35] *** Quits: doc|home (~doc@user/doc) (Remote host closed the connection)
[05:37:01] *** Joins: doc (~doc@user/doc)
[05:38:11] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[05:39:36] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:ad8b:4124:ff11:29b9)
[05:39:42] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[05:40:10] <ThePendulum> onosendi: yeah, mainly because I wanted to use my own domain so if I ever need to switch agian, I don't need to update a gazillion other accounts
[05:41:05] <onosendi> Yeah, same. My only complaint is their mobile app. It works fine, but can be buggy at times.
[05:41:10] <ThePendulum> comes with a calendar which is nice, although I might use local hosted nextcloud for that. mail is just a bit too finicky and critical to self host for me
[05:41:11] <onosendi> Other than that, I've been really happy with their services.
[05:41:36] <ThePendulum> ah yeah their mobile app definitely falls short of the gmail app, main thing I miss so far is a 1 click archive button, they have a 'move to' button wrapping it
[05:42:20] <onosendi> Yeah, I use Nextcloud for calendar as well. And same... managing an email server is a pain in the ass. You get it set up, it's fine, then later down the road it breaks and you have to spend days relearning everything and fixing it.
[05:42:38] <ThePendulum> yeah, I'm aware they've slipped up here and there on their privacy promise, but I mainly want to move away my data and business from ad driven companies, not government pressure
[05:42:58] <ThePendulum> I've got other apps for that lol
[05:43:01] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 240 seconds)
[05:43:48] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[05:44:28] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[05:45:54] <onosendi> ThePendulum: are you on Android or iOS? Android I have swipe to archive: https://imgur.com/a/11PREUN
[05:46:25] <ThePendulum> android, that's going to be a barrel of fun moving away from google too
[05:46:50] <ThePendulum> oh yeah I knew that too, idk why I forgot, lol, actually thanks for pointing out I can reverse the order
[05:47:16] <ThePendulum> because it's the exact opposite from gmail. I also basically never delete emails, so I can set both to archive
[05:47:40] <onosendi> ThePendulum: away from google, as in Calyx/Graphene?
[05:48:08] <ThePendulum> I think lineage should probably be enough
[05:50:16] <ThePendulum> currently looking for a replacement for google keep, standard notes was suggested but you have to pay an arm and a leg to enable todo lists ($80/year I think)
[05:55:15] *** Quits: sharperguy (~sharpergu@89.244.122.250) (Ping timeout: 256 seconds)
[05:56:40] <onosendi> ThePendulum: my Keep replacement was Nextcloud Notes. Only downside is no image capabilities.
[05:56:45] *** Joins: sharperguy (~sharpergu@88.130.222.167)
[05:57:24] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 268 seconds)
[06:02:14] <ThePendulum> I'll look into that, seems like although it has nice formatting it doesn't really have checklists either?
[06:03:11] *** Joins: wombawomba (~andre@89-253-80-164.customers.ownit.se)
[06:03:35] *** Quits: wroathe_ (~wroathe@206-55-188-8.fttp.usinternet.com) (Quit: leaving)
[06:03:48] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[06:03:48] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[06:03:48] *** Joins: wroathe (~wroathe@user/wroathe)
[06:04:03] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[06:06:26] <ThePendulum> ah I see you can do [x] test, not sure how to 'view' a note though
[06:06:52] <ThePendulum> oh I need to put the checkbox in a list for it to render
[06:07:07] <ThePendulum> that's actually pretty neat, thanks for the suggestion
[06:07:33] <ThePendulum> app costs 3eu I see
[06:07:37] *** Quits: wombawomba (~andre@89-253-80-164.customers.ownit.se) (Ping timeout: 240 seconds)
[06:07:46] <onosendi> ThePendulum: download it off fdroid for free.
[06:07:54] <onosendi> or pay to support.
[06:08:12] <ThePendulum> I'll use it for a bit first
[06:08:51] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[06:14:22] *** Quits: harriet_tubman (~harriet_t@209.202.223.146) (Quit: Client closed)
[06:18:28] *** Joins: Arisc (~ckmptnml@201-24-225-211.user3p.brasiltelecom.net.br)
[06:18:44] *** Joins: jazzy (~jaziz@user/jaziz)
[06:19:17] *** Quits: src (~src@user/src) (Quit: Leaving)
[06:21:31] *** Joins: Rockwood (~Rocky@user/rocky)
[06:23:28] *** Quits: faLUKE (~paolo@151.37.185.162) (Remote host closed the connection)
[06:26:09] <ThePendulum> lol I crashes the note app literally on the first thing I type
[06:26:38] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[06:27:43] *** Joins: faLUKE (~paolo@151.37.185.162)
[06:30:49] *** Quits: adas (adas@adas.shelltalk.net) (Quit: IRCNow and Forever!)
[06:34:57] *** Quits: faLUKE (~paolo@151.37.185.162) (Remote host closed the connection)
[06:35:49] *** Joins: summersault (~summersau@179.221.251.36)
[06:36:25] <Rockwood> tmro will new year :)
[06:36:28] <Rockwood> will be
[06:40:22] <ThePendulum> \o/ any plans?
[06:40:34] *** Quits: summersault (~summersau@179.221.251.36) (Ping timeout: 268 seconds)
[06:42:16] *** Joins: wombawomba (~andre@89-253-80-164.customers.ownit.se)
[06:46:37] *** Quits: wombawomba (~andre@89-253-80-164.customers.ownit.se) (Ping timeout: 240 seconds)
[06:51:13] *** Joins: adas (adas@adas.shelltalk.net)
[06:51:50] <Rockwood> yeah
[06:51:53] <systemfault> Well, we're back to march 2020 where I live...
[06:51:59] <Rockwood> new bottle is waiting for me :D
[06:52:25] <Rockwood> systemfault, hi
[06:52:32] <systemfault> Hey :)
[06:52:37] <Rockwood> why back?
[06:52:48] <Rockwood> due to corona?
[06:52:50] <systemfault> Because of the new covid wave
[06:53:04] <Rockwood> but this one isn't harmful i think
[06:53:20] <nuclearg1> how would one go about determining a reasonable data processing batch size? For example, i'm getting infinite messages over an http stream and I am parsing out json for storage in a db. I would like to leverage some concurrency and process messages in parallel, rather than one at a time, but I don't know how to determine this magical threshold.
[06:53:52] <Rockwood> i am have new idea about IRC rules
[06:54:18] <Rockwood> why not they putting DOB at time registration
[06:54:23] <Decker> nuclearg1 know about workers? service workers or otherwise?
[06:54:54] <nuclearg1> i have a high level understanding. I want to use something like that
[06:55:04] <Rockwood> after it we know to greet him or her and get party :D
[06:56:50] <Decker> nuclearg1 well to get truly parallel processing you'll have to.  https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers  workers are probably all you need; service workers are more annoying; basically you'll feed the code needed to process to a background JS process, and then send it messages with payloads to process...
[06:57:27] <Decker> workers start with almost an empty context... no 'window' no 'document' ...
[06:57:52] <nuclearg1> bear in mind i'm doing this on the backend so i'm not sure that would help me here
[06:58:14] <Decker> then worker-threads in mode
[06:58:16] <Decker> node
[06:58:32] <Decker> https://nodejs.org/api/worker_threads.html
[06:58:44] <systemfault> nuclearg1: Check if you can leverage a worker thread pool implementation like Piscina
[06:59:18] <nuclearg1> ok cool thanks, i was thinking something along the lines of a thread pool
[06:59:29] <nuclearg1> where i put message processing tasks into the pool
[06:59:57] <systemfault> worker threads are expensive to spawn so you really want a threadpool
[07:00:49] <systemfault> I haven't tried it yet.. but it's in my backlog... https://github.com/piscinajs/piscina
[07:01:18] <nuclearg1> makes sense thank you
[07:01:25] <nuclearg1> i was thinking the same thing coming from a c++ background
[07:01:32] <nuclearg1> just didn't know the idiomatic way to do it here
[07:01:40] *** Joins: audiobirb (~audio@user/audio)
[07:02:01] <systemfault> Most of the time, you don't need thread/worker_threads in Node.. because you want concurrency, not parallelism
[07:02:28] <systemfault> You only need it for cases when you need to do blocking expensive computations
[07:02:37] <Decker> this is real work - and parallelism is what is wanted
[07:04:02] <nuclearg1> hmm in my case, i'm doing fairly inexpensive operations and i need to do a lot of them
[07:04:37] <nuclearg1> i'm doing many upserts in a database and i want them to be parallel vs just one at a time as they com ein
[07:04:56] <Decker> nuclearg1 is your current process falling behind? not able to do it fast enough?  is it maxed for cpu usage already?
[07:04:59] <systemfault> nuclearg1: Then you don't need worker threads.
[07:05:31] <Decker> that's just pooling reasults for a bulk upsert
[07:05:45] <systemfault> IO is non-blocking in JS
[07:06:07] <systemfault> So you can start as many DB operations as you want until your event loop explodes.
[07:06:15] <Decker> one database operation 1000 times is slower than 1 operation of 1000 values
[07:06:32] <systemfault> Definitely.
[07:11:58] <systemfault> Still, that's not a parallelism problem, that's a batching problem.... you want to go from a stream of "Message" to a stream of "Batch of Messages" then process each of those batches
[07:12:15] <nuclearg1> right, i'm just not sure what a reasonable batch size is then
[07:12:28] <nuclearg1> how can i magically arrive at that threshold?
[07:12:37] <systemfault> I'm pretty sure you can't.
[07:12:45] <systemfault> You're going to have to test.
[07:13:03] <nuclearg1> gotcha
[07:13:14] <nuclearg1> wish there was a rough calculation i could make
[07:13:17] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[07:14:03] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[07:14:13] <systemfault> It's not as easy as "I have a CPU with 16 logical cores so I'm going to batch them in batches of 16-32 messages"
[07:14:51] <Decker> depends on how big the messages are though; so size is a primary factor
[07:15:12] <systemfault> Yup
[07:18:12] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:18:33] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[07:19:57] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:20:00] <nuclearg1> thank you both for the help, i really appreciate it. I'm going to just go with an arbitrary batch size for now
[07:20:04] <nuclearg1> and adjust as needed
[07:20:15] *** Quits: Arisc (~ckmptnml@201-24-225-211.user3p.brasiltelecom.net.br) (Ping timeout: 256 seconds)
[07:21:24] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[07:22:35] *** Joins: wombawomba (~andre@89-253-80-164.customers.ownit.se)
[07:26:17] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[07:27:37] *** Quits: wombawomba (~andre@89-253-80-164.customers.ownit.se) (Ping timeout: 256 seconds)
[07:28:26] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[07:30:20] *** Quits: adas (adas@adas.shelltalk.net) (Quit: IRCNow and Forever!)
[07:32:43] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[07:33:32] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[07:37:10] *** Joins: paule32 (~paule@p4ff87c9e.dip0.t-ipconnect.de)
[07:37:10] *** Quits: paule32 (~paule@p4ff87c9e.dip0.t-ipconnect.de) (Changing host)
[07:37:10] *** Joins: paule32 (~paule@user/paule32)
[07:38:04] <paule32> hello
[07:38:40] <paule32> some guy or witch here, that program with easyui?
[07:39:02] <paule32> i have a question about ace.io + easyui integration
[07:39:54] <paule32> so, you can have a look to; https://dpaste.com/6SDVC3KC7
[07:39:55] <ThePendulum> !ask
[07:39:56] <jellobot> ThePendulum, Don't ask to ask, nor if anyone is here or alive or uses something. Just ask your question. http://www.mikeash.com/getting_answers.html
[07:40:02] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[07:40:20] *** Quits: iamtheworstdev (~iamthewor@c-98-253-72-149.hsd1.in.comcast.net) (Remote host closed the connection)
[07:40:32] *** Joins: iamtheworstdev (~iamthewor@c-98-253-72-149.hsd1.in.comcast.net)
[07:41:36] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[07:41:47] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[07:41:57] *** Joins: thojanssens (~thojansse@ppp-124-121-109-229.revip2.asianet.co.th)
[07:41:59] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[07:45:11] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[07:52:25] *** Joins: adas (adas@adas.shelltalk.net)
[07:53:01] *** Joins: Leonard (~Administr@114.55.127.80)
[07:53:09] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[07:54:05] <Rockwood> hope coming year good one for everyone best wish from my side :)
[07:54:57] *** Quits: Leonard (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[07:55:02] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[07:55:21] *** Quits: azizLIGHT (~azizLIGHT@user/azizlight) (Ping timeout: 250 seconds)
[07:55:35] *** Joins: Leonard (~Administr@114.55.127.80)
[07:56:57] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[07:58:31] <paule32> same to you
[07:58:39] *** Quits: paule32 (~paule@user/paule32) (Quit: Leaving)
[07:59:08] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[07:59:09] *** Joins: adroitmachine (~adroitmac@182.70.28.200)
[07:59:22] *** Joins: azizLIGHT (~azizLIGHT@user/azizlight)
[08:01:34] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[08:01:34] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[08:01:34] *** Joins: wroathe (~wroathe@user/wroathe)
[08:01:36] <Rockwood> lockdowns still going on other countries too?
[08:02:38] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[08:03:19] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[08:04:27] <systemfault> Curfew, restaurants/gym/theaters/etc closed...
[08:05:00] <Rockwood> in Canada
[08:05:29] <systemfault> Nah, in Quebec only.
[08:05:50] <systemfault> Each province (state really....) have their own covid restrictions
[08:06:09] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[08:07:29] <Rockwood> ah okay
[08:08:39] <Rockwood> but scientist saying its not bad like delta strain and its killing delta
[08:08:57] <Rockwood> and not much harmful like before
[08:10:17] <Rockwood> then why everyone worry from this
[08:11:44] <Slade> ah, #javascript, where i go to find all the expert virologists
[08:12:12] <Rockwood> happens in general
[08:12:20] <Rockwood> human is human
[08:14:04] <Rockwood> i am not saying this its coming with on this virus info
[08:14:07] <Rockwood> anyway
[08:14:15] <Rockwood> i have to go on work
[08:14:19] <Rockwood> cya bye
[08:14:22] <Rockwood> tc all
[08:14:36] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[08:21:02] <adroitmachine> I am stuck with a data transformation issue in an array. Can anyone help with this problem? I have written the input and the desired outcome here:  https://pastebin.ubuntu.com/p/sxZxbnJnd3/
[08:24:25] *** Joins: Arisc (~ckmptnml@201-24-225-211.user3p.brasiltelecom.net.br)
[08:24:46] <systemfault> Hmm, why is your input so bad.. ? :/
[08:24:54] <systemfault> But you could do a map operation
[08:25:22] <systemfault> Hmm, not even... there's no way to do anything clean with that shit data.
[08:26:47] <adroitmachine> Yes, I know it was coming in a worse shape before, I have converted  it to look like this after effort. But, I am stuck with this last part
[08:26:51] <systemfault> Do it the shit way... get all the keys ending with either Text or Details, extract the indices and then map them
[08:28:26] <adroitmachine> systemfault, can you give some pseudo code please
[08:28:38] <systemfault> I guess... give me 2 minutes..
[08:29:01] <adroitmachine> Not able to figure out, how to tackle it. Thanks systemfault
[08:32:14] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.3)
[08:32:53] *** Quits: kalen (~kalen@gateway/vpn/pia/kalen) (Quit: Leaving)
[08:33:03] <adroitmachine> I want to map over the array after the transformation is done, I think somehow it should look like this in the end: {Text: 'Vivamus placerat, enim a tempus ornare.', Details: 'Nullam sit amet varius nisi, at dignissim nulla. Nunc hendrerit feugiat erat eu faucibus. Duis imperdiet tortor et enim cursus, non consectetur neque varius.'},
[08:33:08] *** Quits: Nitrousoxide_ (~msdos@user/nitrousoxide) (Remote host closed the connection)
[08:33:21] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[08:34:24] *** Joins: Nitrousoxide (~msdos@user/nitrousoxide)
[08:36:22] <systemfault> I'm writing a snippet, should be done in a minute
[08:37:49] <systemfault> adroitmachine: Makes me want to puke but... https://jsfiddle.net/wp368n5z/1/
[08:40:25] <adroitmachine> let me check, systemfault
[08:43:17] <theskillwithin> heh odd jsfiddle doesn't seem to like nullish coalescing
[08:43:31] <theskillwithin> or at least its linter doesn't
[08:44:25] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[08:45:13] <systemfault> Why you're in restructuring the data, you could make it less ugly at the same time...
[08:45:16] <systemfault> *While
[08:46:06] <systemfault> Maybe a nice structure would be; { id: 6, text: 'text here', details: 'details here' }
[08:47:03] <adroitmachine> systemfault, yes I am thinking that would be better.
[08:47:24] <adroitmachine> because in the end I want to map over the data
[08:49:03] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[08:49:56] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:56:32] *** Quits: thojanssens (~thojansse@ppp-124-121-109-229.revip2.asianet.co.th) (Ping timeout: 240 seconds)
[08:58:27] <systemfault> https://jsfiddle.net/4dubjra2/2/
[08:59:39] <adroitmachine> this one is perfect systemfault. This will work, thanks for your help.
[08:59:58] *** Quits: Ilyu (~quassel@gateway/vpn/pia/ilyu) (Ping timeout: 260 seconds)
[09:04:12] <adroitmachine> need some time to understand the code.
[09:23:06] *** Joins: wombawomba (~andre@89-253-80-164.customers.ownit.se)
[09:27:37] *** Quits: wombawomba (~andre@89-253-80-164.customers.ownit.se) (Ping timeout: 240 seconds)
[09:29:34] *** Quits: Maxattax97 (~max@2603-900a-1501-a7ca-0000-0000-0000-0100.inf6.spectrum.com) (Quit: WeeChat 3.4)
[09:34:36] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[09:39:05] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[09:41:53] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[09:45:30] *** Joins: nomic (~nomic@185.198.243.161)
[09:55:36] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:58:21] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[09:58:40] *** Quits: hexology (~hexology@user/hexology) (Quit: hex on you ...)
[10:04:44] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[10:05:55] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 268 seconds)
[10:07:11] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[10:17:44] *** Parts: re (~user@user/re) (ERC 5.4.1 (IRC client for GNU Emacs 29.0.50))
[10:21:30] *** Joins: Lazenca (~lazenca@user/lazenca)
[10:23:18] *** Quits: kmh (~kmh@2a00:6020:5004:6800:fd75:4747:da1e:3268) (Read error: Connection reset by peer)
[10:23:29] *** Joins: kmh (~kmh@2a00:6020:5004:6800:fd75:4747:da1e:3268)
[10:24:02] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[10:35:29] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[10:35:33] *** Joins: re (~user@user/re)
[10:36:52] *** Joins: han-solo (~han-solo@user/han-solo)
[10:37:17] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[10:46:44] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[10:46:44] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[10:46:44] *** Joins: wroathe (~wroathe@user/wroathe)
[10:51:58] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[10:55:53] *** Quits: CiaoSen (~Jura@p200300c957347b002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[11:01:00] *** Quits: Leonard (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[11:01:23] *** Joins: Leonard (~Administr@114.55.127.80)
[11:02:15] <sheetjs> n> var x = new Set([1,2,3]); x.forEach(v => x.push(v));
[11:02:17] <jellobot> (fail) TypeError: x.push is not a function
[11:02:23] *** Quits: cthulchu (~Cthulchu@184-090-172-137.res.spectrum.com) (Ping timeout: 256 seconds)
[11:02:34] <sheetjs> n> var x = new Set([1,2,3]); x.forEach(v => x.add(v));
[11:02:35] <jellobot> (okay) undefined
[11:02:51] <sheetjs> n> var x = new Set([1,2,3]); x.forEach(v => { x.delete(v); x.add(v); });
[11:02:56] <jellobot> (timeout)
[11:05:54] <theskillwithin> n> var x = new Set([1,2,3]); x.forEach(v => x.add(v)); x
[11:05:55] <jellobot> (okay) Set(3) { 1, 2, 3 }
[11:06:36] <theskillwithin> sheetjs whatcha up to?
[11:06:55] <sheetjs> work queue
[11:07:18] <sheetjs> so the idea is to maintain an ordered list of items to process, each has dependencies
[11:07:18] <theskillwithin> with a Set?
[11:07:32] <sheetjs> yeah since Set forEach works in insertion order
[11:07:40] <theskillwithin> everything in a set has to be unique tho btw, im sure you know
[11:07:58] <sheetjs> yep
[11:08:12] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 268 seconds)
[11:08:45] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[11:11:22] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[11:13:30] *** Joins: electr0n_ (~electr0n@about/security/founder/electr0n)
[11:16:38] *** Quits: electr0n (~electr0n@about/security/founder/electr0n) (Ping timeout: 252 seconds)
[11:19:37] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[11:24:27] *** Joins: wombawomba (~andre@89-253-80-164.customers.ownit.se)
[11:24:29] *** Quits: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[11:24:33] *** Quits: daniel-k (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:24:45] *** Joins: daniel-k (~daniel-k@fsf/emeritus/daniel-k)
[11:29:01] *** Quits: wombawomba (~andre@89-253-80-164.customers.ownit.se) (Ping timeout: 256 seconds)
[11:35:35] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[11:35:43] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Read error: Connection reset by peer)
[11:40:21] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[11:44:39] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[11:45:49] *** Joins: thojanssens (~thojansse@110.49.33.185)
[11:45:58] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[11:50:53] *** Joins: Ilyu (~quassel@gateway/vpn/pia/ilyu)
[12:00:27] *** Quits: relms (~relms@user/relms) (Quit: UwU)
[12:15:19] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:e4c8:32e9:9167:b387)
[12:16:09] *** Quits: Lazenca (~lazenca@user/lazenca) (Remote host closed the connection)
[12:22:17] *** Quits: mikrosis (~mikrosis@dynamic-046-114-170-245.46.114.pool.telefonica.de) (Ping timeout: 256 seconds)
[12:25:38] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:31:16] *** Quits: adroitmachine (~adroitmac@182.70.28.200) (Quit: Client closed)
[12:33:37] *** Quits: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu) (Ping timeout: 256 seconds)
[12:40:31] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000C96363670EDAE354.catv.pool.telekom.hu)
[12:47:11] *** Quits: CoderCharmander (~CoderChar@20014C4C12563000C96363670EDAE354.catv.pool.telekom.hu) (Ping timeout: 250 seconds)
[12:47:32] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[12:47:32] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[12:47:32] *** Joins: wroathe (~wroathe@user/wroathe)
[12:47:50] *** Joins: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu)
[12:51:04] *** Quits: kmh (~kmh@2a00:6020:5004:6800:fd75:4747:da1e:3268) (Quit: Leaving)
[12:52:23] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[12:56:39] *** Joins: kmh (~kmh@2a00:6020:5004:6800:c2f3:8f69:b738:f6f7)
[12:57:37] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[12:59:32] *** Quits: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu) (Ping timeout: 240 seconds)
[13:01:11] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[13:01:57] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[13:07:08] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[13:18:33] *** Joins: D4mned (~D1mned@212.101.253.41)
[13:22:34] *** Joins: adroitmachine (~adroitmac@182.70.28.200)
[13:23:32] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:e4c8:32e9:9167:b387) (Quit: Client closed)
[13:24:22] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:24:29] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[13:31:39] *** Joins: monoxane2 (~monoxane@user/monoxane)
[13:32:03] *** Joins: wombawomba (~andre@89-253-80-164.customers.ownit.se)
[13:33:41] *** Quits: monoxane (~monoxane@user/monoxane) (Ping timeout: 256 seconds)
[13:33:41] *** monoxane2 is now known as monoxane
[13:39:46] *** Joins: Res1s7 (~tempo@90.252.182.215)
[13:41:10] <Res1s7> If window.status is deprecated what is the replacement ?
[13:41:26] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[13:42:59] <ThePhilgrim> Dear Node & fs-experts.. wth am I doing wrong? https://dpaste.com/6R5U6NW7A console.log(typeof readfile) prints "string" – should be buffer? "hello" does not print, and typeof buf does not print
[13:43:06] <ThePhilgrim> I am horribly confused
[13:44:41] *** Joins: Deneb (~johnch@30.125.7.51.dyn.plus.net)
[13:45:27] <Res1s7> What's "buf" ?
[13:49:04] <ThePhilgrim> Res1s7: I was under the impression that "data" was a Buffer, so I just tried to put it in another var.... ah...
[13:49:19] <ThePhilgrim> Haha, It's the python syntax in me
[13:49:23] <ThePhilgrim> forgot let/const ..
[13:49:25] <ThePhilgrim> LOL
[13:50:53] <Res1s7> Fixed ?
[13:51:48] <ThePhilgrim> Actually no, the output is the same after adding "let buf ="
[13:51:58] <ThePhilgrim> console.log("hello") doesn't run.
[13:52:42] <Res1s7> k
[13:55:41] <Res1s7> Eh ? window.status was removed for security reasons. So there is no replacement. Weird.
[13:58:34] <ThePhilgrim> Huh? What does that mean?
[13:59:27] <Res1s7> Before you joined: "If window.status is deprecated what is the replacement ?".
[13:59:43] <ThePhilgrim> ah
[14:00:50] <D4mned> ThePhilgrim its because u are storing it in a variable
[14:01:07] <D4mned> oh wait
[14:01:16] <ThePhilgrim> D4mned: No, before doing that nothing happens at all
[14:01:21] <ThePhilgrim> when I run the file
[14:01:23] <D4mned> whats wrong with it again ? lol
[14:01:38] <D4mned> its string because its reading the content of the file
[14:02:25] *** Quits: adroitmachine (~adroitmac@182.70.28.200) (Quit: Client closed)
[14:03:19] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[14:03:19] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[14:03:19] *** Joins: wroathe (~wroathe@user/wroathe)
[14:03:28] <D4mned> so if you do console.log(readfile)
[14:03:45] <D4mned> u ll see the text inside the file you targetted
[14:04:02] *** Joins: zer0bitz (~zer0bitz@196.244.192.54)
[14:04:38] <ThePhilgrim> D4mned: Yeah, this is just the start of what I need to do. But if you remove const readfile (the variable), and the console.log(typeof readfile), I would assume that console.log("hello") and console.log(typeof buf) runs
[14:04:41] <ThePhilgrim> But they dont
[14:07:29] <D4mned> try fs.readFile instead of readFileSync
[14:07:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[14:08:30] <D4mned> oh and remove it from the variable
[14:09:27] <ThePhilgrim> I'm trying to do it syncronously tho :/
[14:11:38] <AlbertLast> what is the a good (performance) way to flater object? {a:'asdf';b:[{a:'asdf2';b:{[...]} {a:'asdf3';b:[]}]} different deep
[14:15:19] <D4mned> ThePhilgrim fs.readFileSync(path[, options])
[14:15:21] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[14:15:25] <D4mned> it doesnt take a call back function
[14:15:34] <D4mned> so its not getting triggered in the 1st place
[14:16:12] <ThePhilgrim> Ah, only readFile takes a callback?
[14:16:17] <D4mned> yeah
[14:16:24] <ThePhilgrim> Ohhh
[14:16:34] <ThePhilgrim> "fs.readFile('/Users/joe/test.txt', 'utf8' , (err, data) => {" this is from Node docs
[14:16:40] <ThePhilgrim> I just assumed it was the same
[14:16:48] <D4mned> haha yeah me too
[14:19:28] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[14:27:56] <hassoon>  'morning
[14:28:03] <epolanski> gey
[14:28:06] <epolanski> hey
[14:29:15] <silly> yey
[14:29:36] <hassoon> what's with this your-connection-is-not-private thing with even https websites ?
[14:30:13] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[14:30:39] <D4mned> bad tls certificate ?
[14:30:53] <hassoon> it's everywhere
[14:31:13] <hassoon> does that have sth to do with the recent 4jlog vulnerability thing ?
[14:31:22] <hassoon> or 4logj
[14:31:24] <D4mned> i dont know
[14:31:25] <hassoon> whatever it is called
[14:31:29] <D4mned> where are you getting it ?
[14:31:53] <leduyquang753> The Let's encrypt master certificate expired recently so some older devices won't trust many sites.
[14:32:18] <leduyquang753> And no it has nothing to do with Log4J.
[14:32:25] <hassoon> D4mned: e.g
[14:32:30] <hassoon> https://zapdos.pokecenter.xyz/frontend/
[14:32:51] <hassoon> or maybe my chrome browser is outdated ?
[14:33:14] <leduyquang753> "This server could not prove that it is zapdos.pokecenter.xyz; its security certificate expired 30 days ago."
[14:33:42] <hassoon> leduyquang753: ah i see
[14:34:05] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[14:34:05] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[14:34:05] *** Joins: wroathe (~wroathe@user/wroathe)
[14:34:56] *** Joins: fef (~thedawn@user/thedawn)
[14:37:17] *** Joins: thojanssens_ (~thojansse@110.49.33.185)
[14:38:36] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[14:38:51] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[14:39:04] *** Joins: fef (~thedawn@user/thedawn)
[14:40:10] *** Joins: sudomann (~sudomann@2601:155:8402:4960:f4b6:2f5c:9895:3a33)
[14:41:07] *** Quits: thojanssens (~thojansse@110.49.33.185) (Ping timeout: 256 seconds)
[14:43:26] *** Quits: sudomannn (~sudomann@2601:155:8402:4960:f4b6:2f5c:9895:3a33) (Ping timeout: 260 seconds)
[14:44:33] *** Joins: voltage_ (voltage@user/voltage)
[14:48:02] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[14:48:26] <D4mned> JAVASCRIPT IS GOING TO RULE THE WORLD !!!
[14:48:37] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 240 seconds)
[14:53:57] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 240 seconds)
[15:03:21] *** Quits: m_antis (~znc_admin@ool-44c09a21.dyn.optonline.net) (Read error: Connection reset by peer)
[15:04:52] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[15:04:52] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[15:04:52] *** Joins: wroathe (~wroathe@user/wroathe)
[15:06:02] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[15:07:36] *** Quits: Deneb (~johnch@30.125.7.51.dyn.plus.net) (Remote host closed the connection)
[15:10:01] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[15:14:07] *** Joins: m_antis (~znc_admin@ool-44c09a21.dyn.optonline.net)
[15:14:59] <dave0> it already does!
[15:15:57] *** Quits: D4mned (~D1mned@212.101.253.41) (Quit: Leaving)
[15:23:42] *** Quits: Res1s7 (~tempo@90.252.182.215) (Quit: Konversation terminated!)
[15:25:17] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[15:28:17] *** Quits: thojanssens_ (~thojansse@110.49.33.185) (Ping timeout: 240 seconds)
[15:31:10] *** Joins: aQustic (~anders@251.92-221-169.customer.lyse.net)
[15:33:28] *** Parts: aQustic (~anders@251.92-221-169.customer.lyse.net) ()
[15:33:34] *** Joins: Naan (~naan@user/naan)
[15:38:21] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 256 seconds)
[15:38:22] *** Joins: pmercado (~pmercado@190.22.72.167)
[15:39:06] *** Quits: lukaswilkeer (~lukaswilk@179.152.173.188) (Quit: lukaswilkeer)
[15:39:35] *** Joins: lukaswilkeer (~lukaswilk@2804:14c:5b61:810e:e51f:bbd9:8830:b445)
[15:43:20] *** Joins: andersaloof (~anders@251.92-221-169.customer.lyse.net)
[15:45:18] *** Joins: dalek-caan (~Thunderbi@109.252.124.86)
[15:45:29] *** Parts: dalek-caan (~Thunderbi@109.252.124.86) ()
[15:46:38] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[15:57:12] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[15:58:14] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[16:01:17] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[16:04:47] *** Quits: lukaswilkeer (~lukaswilk@2804:14c:5b61:810e:e51f:bbd9:8830:b445) (Ping timeout: 250 seconds)
[16:06:03] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[16:06:03] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[16:06:03] *** Joins: wroathe (~wroathe@user/wroathe)
[16:07:03] *** Quits: median (~median@user/median) (Remote host closed the connection)
[16:10:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[16:11:24] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[16:12:13] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000C96363670EDAE354.catv.pool.telekom.hu)
[16:12:35] *** Quits: nomic (~nomic@185.198.243.161) (Quit: Leaving)
[16:15:34] <Donitz> oh my god this bug is infurating
[16:15:42] <Donitz> it semi-freezes the page
[16:15:55] *** Joins: pulse (~pulse@user/pulse)
[16:15:58] <Donitz> so the console won't log and other pages won't execute their javascript
[16:16:16] <Donitz> but I'll be damned if I could tell me where it happens because it's not fully frozen
[16:16:18] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 260 seconds)
[16:16:21] <Donitz> it could*
[16:18:32] <Alexendoo> Donitz: F8 maybe?
[16:18:56] <Donitz> it won't do anything
[16:19:01] <Donitz> everything is semi-frozen
[16:19:15] <Donitz> it's just an everloading console
[16:19:28] <Donitz> until I forcibly restart firefox
[16:20:11] <Donitz> it looks very busy gpu wise
[16:20:14] <Donitz> but that can't be
[16:20:18] <Donitz> I'm only drawing a few hundred sprites
[16:20:23] <Donitz> well within what it should be capable of
[16:28:29] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 252 seconds)
[16:34:59] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:35:25] <Donitz> god damnit, this issue makes zero sense at all
[16:35:46] <Donitz> nothing about creating an few hundred offscreen canvases and rendering them in a loop should bottleneck the gpu
[16:35:53] <Donitz> I've done that many times
[16:37:08] <Donitz> and even if it did bottleneck the gpu, I would not expect that to break firefox
[16:39:08] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:497b:a765:e336:cc9b)
[16:39:42] *** Joins: va5c0 (~vasco.nun@31.127.137.56)
[16:40:16] *** Quits: va5c0 (~vasco.nun@31.127.137.56) (Client Quit)
[16:40:39] *** Joins: va5c0 (~vasco.nun@31.127.137.56)
[16:40:41] <Donitz> drawing 50 8x8 canvases should not cause 50 GPU usage!
[16:41:15] <silly> 50? is that a lot?
[16:41:21] <Donitz> 50%
[16:41:28] <leduyquang753> Constantly switching buffers to draw from is not a good thing to do.
[16:41:46] <silly> can i have a gpu meter too?
[16:41:52] <Donitz> This has literally never been an issue before
[16:41:56] <Donitz> Yes, open the task manager
[16:43:43] <silly> intel-gpu-top -  614/ 608 MHz;   30% RC6;  3.11 Watts;     3832 irqs/s
[16:45:27] *** Quits: va5c0 (~vasco.nun@31.127.137.56) (Read error: Connection reset by peer)
[16:45:30] <Donitz> can the f***** performance profiler not freeze
[16:46:10] <Donitz> I SAW THE CALL TREE
[16:46:14] <Donitz> Why did it hide it again!
[16:46:21] <Donitz> firefox you .......
[16:46:54] <silly> shake your fist
[16:47:26] <Donitz> save me from this incompetence chrome
[16:50:43] <silly> we need a new option
[16:52:31] <Donitz> I don't get this shit
[16:52:53] <Donitz> every time I highlight an internval in performance, it just bugs out and shows "start recording performance" again
[16:52:58] <Donitz> interval*
[16:53:37] <silly> have you tried it with only 5 8x8 canvases? does that change anything?
[16:55:37] <Donitz> apparently not
[16:55:53] <Donitz> I have to import the profile into another tab
[16:55:55] <Donitz> to be able to read it
[16:55:58] <Donitz> thanks again firefox
[17:01:48] *** Joins: DrowningElysium (uid190788@user/drowningelysium)
[17:07:01] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[17:08:33] <Donitz> zero issues rendering a single canvas many times
[17:08:41] <Donitz> so what the heck is wrong with using some 25 canvases
[17:08:52] <Donitz> as I said, I've done that countless times before without issues
[17:10:51] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[17:12:09] <silly> so strip it down to some bare minimum
[17:12:20] <Donitz> I have
[17:12:21] <silly> add stuff until it breaks
[17:12:24] <Donitz> 2500 canvases in a loop works fine
[17:12:29] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 252 seconds)
[17:12:33] <Donitz> what is so special about the canvases I create in my component
[17:12:49] <silly> what component?
[17:13:00] <Donitz> my painting component
[17:13:07] <Donitz> I replaced the canvas with just the bare minimum there too
[17:13:13] <Donitz> God, I hate it when bugs don't make sense
[17:13:41] <silly> does your entire component rerender instead of updating the canvas?
[17:14:09] <Donitz> I said I replaced it with the bare minumum
[17:14:14] <Donitz> it just creates an empty canvas
[17:19:39] <Donitz> hmmmm
[17:19:49] <Donitz> without creating a 2d context for the canvases, it doens't slow down
[17:19:53] <Donitz> doesn't*
[17:20:24] <Donitz> so let me get this straight
[17:20:37] <Donitz> draw 2500 canvases in a loop, just fine
[17:20:49] <Donitz> draw 50 canvases where you use getContext('2d'), 50% GPU usage
[17:20:58] <Donitz> DID I MENTION THAT THIS HAS NEVER BEEN AN ISSUE BEFORE
[17:21:54] <Donitz> Oh no, please don't tell me that this is going to become a real problem in the future
[17:22:01] <Donitz> I rely on offscreen canvases all the time
[17:26:29] <Donitz> https://codepen.io/Donitz/pen/NWaYGZP
[17:26:31] <Donitz> F*CK
[17:26:40] <Donitz> oh no
[17:26:55] <Donitz> now what do I do when I need to pre-render sprites
[17:27:19] <dave0> i use an unsupported browser
[17:27:33] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Remote host closed the connection)
[17:28:00] <Alexendoo> Donitz: Could report it as a bug
[17:28:02] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[17:28:10] <Donitz> https://codepen.io/Donitz/pen/NWaYGZP
[17:28:11] <Donitz> try it now
[17:28:13] <Donitz> that is what happens
[17:28:28] <Donitz> but chrome is just as bugged out
[17:28:55] <Donitz> I have made entire landscapes made from canvases before
[17:29:01] <Donitz> from pre-rendering tiles
[17:30:26] <dave0> can't you just build a 2d array and putImageData it?
[17:30:53] <Donitz> putImageData is slow
[17:30:58] <Donitz> afaik
[17:31:07] <Donitz> and I want to store things as images, not as arrays
[17:31:21] <Donitz> damn, damn
[17:31:53] <Donitz> sigh
[17:32:00] <Donitz> well, I guess it makes sense considering getContext
[17:32:08] <Donitz> since it creates another gl context for each I would assume
[17:32:14] <Donitz> so can I close a context?
[17:32:44] <Donitz> maybe it was handled differently before
[17:34:39] <Donitz> Maybe I need to turn the canvas into a real boy
[17:34:41] <Donitz> I mean a real image
[17:36:17] *** Joins: kalen (~kalen@gateway/vpn/pia/kalen)
[17:38:37] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Quit: ThePhilgrim)
[17:40:04] *** Joins: nomic (~nomic@185.198.243.161)
[17:40:27] *** Joins: MrBlue (~MrBlue@24.114.99.5)
[17:42:06] <Donitz> sigh, that works
[17:42:15] <Donitz> const image = new Image(); image.src = canvas.toDataURL();
[17:42:22] <Donitz> but I can see it doesn't render instantly
[17:42:29] <Donitz> I see the images are not loaded immidietely
[17:42:37] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[17:48:08] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[17:51:53] *** Joins: eXistenZ (~biskit@2a02:14c:2a4:8000:41a0:4ab2:c009:ebcf)
[17:52:42] *** Joins: thiras (~thiras@user/thiras)
[17:56:03] *** Quits: Ilyu (~quassel@gateway/vpn/pia/ilyu) (Ping timeout: 256 seconds)
[17:59:13] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:02:57] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Ping timeout: 240 seconds)
[18:07:32] *** Joins: enoq_ (~enoq@2a05:1141:1f5:5600:c134:6a7a:9835:f219)
[18:08:33] *** Joins: Ilyu (~quassel@gateway/vpn/pia/ilyu)
[18:13:37] *** Quits: sudomann (~sudomann@2601:155:8402:4960:f4b6:2f5c:9895:3a33) (Ping timeout: 240 seconds)
[18:13:58] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:1849:a103:e7:7076)
[18:16:33] *** Joins: zwik (~zwik@84-31-21-56.cable.dynamic.v4.ziggo.nl)
[18:19:09] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[18:21:57] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[18:23:22] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[18:23:43] *** Quits: dmanto (~dmanto@181.110.128.50) (Remote host closed the connection)
[18:27:21] *** Quits: enoq_ (~enoq@2a05:1141:1f5:5600:c134:6a7a:9835:f219) (Quit: enoq_)
[18:28:02] *** Quits: zwik (~zwik@84-31-21-56.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[18:29:02] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:29:02] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:29:02] *** Joins: wroathe (~wroathe@user/wroathe)
[18:31:44] *** Joins: Rockwood (~Rocky@user/rocky)
[18:38:37] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[18:41:02] *** Joins: onosendi (~onosendi@user/onosendi)
[18:42:28] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[18:46:37] *** Joins: sudomann (~sudomann@66.44.58.83)
[18:46:45] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[18:47:42] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[18:47:48] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[18:50:01] *** Joins: Rockwood_ (~Rocky@user/rocky)
[18:53:19] *** Quits: kmh (~kmh@2a00:6020:5004:6800:c2f3:8f69:b738:f6f7) (Quit: Leaving)
[18:53:37] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 240 seconds)
[18:54:04] *** Rockwood_ is now known as Rockwood
[19:00:50] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[19:01:22] *** Joins: fef (~thedawn@user/thedawn)
[19:01:52] <onosendi> ThePendulum: I remember that happening to me too with one of the apps I downloaded through fdroid. It was either Nextcloud Deck or Notes. Which ever it was, I just downloaded it from the Google Play store and the issue was gone.
[19:02:39] <Rockwood> Auckland is celebrating 2022 already :)
[19:09:58] *** Quits: Jigsy (~Jigsy@user/jigsy) (Remote host closed the connection)
[19:10:23] *** Joins: Jigsy (~Jigsy@user/jigsy)
[19:12:51] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[19:12:51] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[19:12:51] *** Joins: wroathe (~wroathe@user/wroathe)
[19:13:17] *** Joins: kmh (~kmh@2a00:6020:5004:6800:2016:234c:3680:fc33)
[19:17:05] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[19:17:47] *** Quits: Jigsy (~Jigsy@user/jigsy) (Remote host closed the connection)
[19:18:11] *** Joins: Jigsy (~Jigsy@user/jigsy)
[19:18:14] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[19:18:46] *** Joins: yaalon (~yaalon@189.195.206.142)
[19:22:17] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[19:28:56] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[19:35:52] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[19:36:33] *** Joins: cthulchu (~Cthulchu@184-090-172-137.res.spectrum.com)
[19:36:38] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Read error: Connection reset by peer)
[19:37:03] *** Quits: yaalon (~yaalon@189.195.206.142) (Remote host closed the connection)
[19:37:04] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[19:37:04] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[19:37:04] *** Joins: wroathe (~wroathe@user/wroathe)
[19:37:21] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[19:40:09] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[19:41:08] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[19:41:42] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[19:42:33] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[19:43:42] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[19:45:37] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:1849:a103:e7:7076) (Quit: WeeChat 3.4)
[19:46:22] *** Joins: yaalon (~yaalon@189.195.206.142)
[19:46:54] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[19:47:20] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[19:50:02] *** Quits: Ilyu (~quassel@gateway/vpn/pia/ilyu) (Ping timeout: 260 seconds)
[19:54:15] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[19:56:39] *** Joins: median (~median@user/median)
[20:03:53] *** Quits: yaalon (~yaalon@189.195.206.142) ()
[20:07:13] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[20:08:26] *** Joins: allomancer (~allomance@user/allomancer)
[20:08:56] *** Joins: enoq (~enoq@194-208-178-35.lampert.tv)
[20:09:02] *** Quits: CoderCharmander (~CoderChar@20014C4C12563000C96363670EDAE354.catv.pool.telekom.hu) (Ping timeout: 252 seconds)
[20:09:40] *** Quits: enoq (~enoq@194-208-178-35.lampert.tv) (Client Quit)
[20:09:40] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[20:14:08] *** Quits: median (~median@user/median) (Quit: leaving)
[20:14:34] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 268 seconds)
[20:17:19] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[20:17:34] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[20:17:47] *** Joins: emyrs (~emyrs@user/emyrs)
[20:19:25] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[20:21:57] *** Quits: iamtheworstdev (~iamthewor@c-98-253-72-149.hsd1.in.comcast.net) (Ping timeout: 240 seconds)
[20:39:07] <onosendi> ljharb: talking about always being immutable, what about in a situation like this? https://gist.github.com/onosendi/1bc7a0846e578473c24caa29bc9f8c69
[20:40:08] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:41:45] <epolanski> the two functions are the same onosendi
[20:42:06] <epolanski> mutability in function scope isn't important, as long as the function doesn't have side effects outside its body
[20:42:46] *** Joins: han-solo (~han-solo@user/han-solo)
[20:43:15] <epolanski> (side effects include mutating the outer scope)
[20:43:36] <remote> hi
[20:43:51] <onosendi> epolanski: Indeed. However, he recommends never to mutate. Just wondering what his opinion was in this sutation.
[20:45:15] <epolanski> I don't know what he said, but the two examples have no difference
[20:45:57] <epolanski> you are mutating a block scoped variable (who cares?) in both cases
[20:46:18] <epolanski> if you don't want to mutate anything you can write a constructor
[20:46:57] <ljharb> onosendi: neither
[20:47:02] <ljharb> onosendi: reassignment sucks too
[20:47:35] <onosendi> ljharb: lol, I knew that would be your answer.
[20:47:36] <ljharb> onosendi: `return { ...(values.foo === 'bar' && { foo: 'blah' }), ...(values.bar === 'baz' && { bar: 'blah' }) };`
[20:47:46] <epolanski> return { (...values.bar === "bar" && ...}
[20:47:48] <epolanski> yeah indeed
[20:48:15] <ljharb> epolanski is correct in that mutation is *tolerable* if it's entirely contained within a single scope, so that nobody can *tell* if it was mutated or created all at once. but it's still best avoided at all
[20:48:27] <ljharb> there's also a perf hit if you make an empty object and then add properties to it.
[20:48:38] <onosendi> perf hit?
[20:49:13] <epolanski> for very large objects or very common operations you could have a slower performance
[20:49:29] <onosendi> Ah, performance :P
[20:49:33] <onosendi> Thanks guys.
[20:49:48] <Slade> So, not trying to brag or anything, but i've got enough money to not work for the rest of the year
[20:49:58] <epolanski> that's not impressive
[20:50:00] <epolanski> I do too
[20:50:06] <epolanski> make it rest of your life
[20:50:09] <epolanski> that will impress
[20:50:24] <onosendi> Slade: 14 hours? lol
[20:50:34] <ljharb> lol that was funny, yall are too serious
[20:50:35] <epolanski> oh it was a joke, didn't got it
[20:50:44] <silly> lol
[20:50:44] <Slade> onosendi, damn straight!
[20:50:51] <epolanski> it's already 2022 in some places
[20:50:55] <epolanski> btw :P
[20:50:57] *** Quits: bodiccea_ (~bodiccea@user/bodiccea) (Ping timeout: 268 seconds)
[20:50:59] <epolanski> so some people might've not got it
[20:51:01] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[20:51:20] *** Joins: bodiccea (~bodiccea@user/bodiccea)
[20:51:57] <ljharb> epolanski: those places should be well aware that most of the world is behind them, and should adjust their expectations accordingly
[20:51:57] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[20:52:14] <Slade> my joke got codernalyzed
[20:52:22] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[20:52:37] <epolanski> that's one way to see it ljharb
[20:53:02] <epolanski> the other one is that more than half of the world's population is already in 2022
[20:53:03] <ljharb> it is a global way to see it :-)
[20:53:19] <epolanski> let me check india
[20:53:27] <ljharb> epolanski: so when americans see a movie first, we shouldn't worry about spoiling it for the rest of the world?
[20:53:29] <epolanski> no, not true
[20:53:43] <ljharb> epolanski: or should we instead consider everyone else, since "who's first" isn't what's important
[20:53:56] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[20:55:19] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Client Quit)
[20:56:13] <Slade> epolanski, i'm quite sure that the vast majority of chinese who didnt get my joke wasnt because of the timezone problem
[20:56:20] <ljharb> lol that too
[20:56:22] <onosendi> lol
[20:56:43] <epolanski> i didnt get it and im still in 2021 :(
[20:56:53] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[21:00:26] *** Joins: stenno (~stenno@user/stenno)
[21:01:00] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[21:01:26] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[21:02:56] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[21:03:53] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[21:07:00] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[21:07:41] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 250 seconds)
[21:09:08] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[21:09:12] *** Joins: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu)
[21:09:56] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[21:09:56] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[21:09:56] *** Joins: wroathe (~wroathe@user/wroathe)
[21:11:21] *** OverCoder is now known as UnderCoder
[21:12:04] *** Joins: ferdna (~ferdna@user/ferdna)
[21:13:32] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[21:23:03] <silly> is it friday again? https://imgur.com/a/LvISxIr
[21:30:07] *** Joins: CiaoSen (~Jura@p200300c957347b002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[21:30:15] *** Joins: Akiva (~Akiva@user/Akiva)
[21:40:00] *** Quits: eXistenZ (~biskit@2a02:14c:2a4:8000:41a0:4ab2:c009:ebcf) (Read error: Permission denied)
[21:40:26] *** Joins: eXistenZ (~biskit@2001:4df4:12f:f400:39e0:77d7:4bd:57ab)
[21:45:07] *** Joins: paule32 (~paul@p4ff87c9e.dip0.t-ipconnect.de)
[21:45:07] *** Quits: paule32 (~paul@p4ff87c9e.dip0.t-ipconnect.de) (Changing host)
[21:45:07] *** Joins: paule32 (~paul@user/paule32)
[21:45:19] *** Joins: paule32_ (~paul@p4ff87c9e.dip0.t-ipconnect.de)
[21:45:19] *** Quits: paule32_ (~paul@p4ff87c9e.dip0.t-ipconnect.de) (Changing host)
[21:45:19] *** Joins: paule32_ (~paul@user/paule32)
[21:45:34] *** Joins: src (~src@user/src)
[21:45:35] *** Quits: paule32_ (~paul@user/paule32) (Client Quit)
[21:45:50] <paule32> hello
[21:46:02] <paule32> i have a problem with xterm.js:  https://dpaste.com/7ESU2T3V3
[21:46:16] *** Joins: Betal (~Betal@user/betal)
[21:46:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[21:46:22] <paule32> the error occurs, when i try to capture the delete key 127
[21:49:18] <silly> like this? https://github.com/xtermjs/xterm.js/issues/3050
[21:50:05] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[21:50:31] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[21:56:45] *** Joins: G_w (~example1@196.234.239.97)
[21:58:30] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[21:58:30] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[21:58:30] *** Joins: wroathe (~wroathe@user/wroathe)
[21:59:57] *** Quits: allomancer (~allomance@user/allomancer) (Ping timeout: 240 seconds)
[22:02:57] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:e062:688a:9690:b724)
[22:03:26] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[22:03:30] *** Quits: G_w (~example1@196.234.239.97) (Remote host closed the connection)
[22:03:45] *** Joins: Pectic (~biskit@46-116-84-33.bb.netvision.net.il)
[22:04:20] *** Quits: eXistenZ (~biskit@2001:4df4:12f:f400:39e0:77d7:4bd:57ab) (Ping timeout: 268 seconds)
[22:04:39] *** Joins: G_w (~example1@196.234.239.97)
[22:04:50] *** Quits: G_w (~example1@196.234.239.97) (Remote host closed the connection)
[22:09:00] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[22:11:39] *** Quits: han-solo (~han-solo@user/han-solo) (Read error: Connection reset by peer)
[22:13:11] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:14:14] *** Joins: Pectic1 (~biskit@46-116-84-33.bb.netvision.net.il)
[22:14:33] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:14:42] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[22:15:14] *** Joins: han-solo (~han-solo@103.82.184.207)
[22:16:07] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:16:57] *** Quits: Pectic (~biskit@46-116-84-33.bb.netvision.net.il) (Ping timeout: 240 seconds)
[22:17:00] *** Quits: han-solo (~han-solo@103.82.184.207) (Client Quit)
[22:17:54] *** Joins: G_w (~example1@196.234.239.97)
[22:20:40] *** Quits: G_w (~example1@196.234.239.97) (Remote host closed the connection)
[22:22:13] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[22:24:03] *** Joins: han-solo (~han-solo@user/han-solo)
[22:26:25] *** Joins: tccki_ (~tccki@box.webslate.co.nz)
[22:27:09] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 268 seconds)
[22:28:37] *** Quits: tccki (~tccki@box.webslate.co.nz) (Ping timeout: 256 seconds)
[22:28:37] *** tccki_ is now known as tccki
[22:28:57] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[22:30:52] *** Quits: sudomann (~sudomann@66.44.58.83) (Ping timeout: 268 seconds)
[22:32:35] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 252 seconds)
[22:33:43] *** Quits: Jonno_FTW (~come@user/jonno-ftw/x-0835346) (Ping timeout: 256 seconds)
[22:34:29] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[22:35:23] *** Joins: Jonno_FTW (~come@api.carswap.me)
[22:37:32] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[22:37:32] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[22:37:32] *** Joins: wroathe (~wroathe@user/wroathe)
[22:40:56] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[22:42:56] *** Quits: DrowningElysium (uid190788@user/drowningelysium) (Quit: Connection closed for inactivity)
[22:43:58] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:47:22] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 260 seconds)
[22:49:06] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[22:49:20] *** Joins: pulse (~pulse@user/pulse)
[22:50:04] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.3)
[22:51:50] *** Quits: bodiccea (~bodiccea@user/bodiccea) (Ping timeout: 252 seconds)
[22:55:32] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:8c6b:dd96:883c:e6d3)
[22:59:10] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[23:02:46] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[23:03:15] <hassoon> 'evening
[23:03:42] *** Quits: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu) (Read error: Connection reset by peer)
[23:04:16] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[23:04:16] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[23:04:16] *** Joins: wroathe (~wroathe@user/wroathe)
[23:04:25] *** Joins: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu)
[23:05:09] *** Quits: brw (~bas@haring.bas.sh) (Read error: Connection reset by peer)
[23:05:41] *** Joins: brw (~bas@haring.bas.sh)
[23:06:57] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:497b:a765:e336:cc9b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:10:04] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[23:10:55] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[23:12:05] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Client Quit)
[23:13:34] *** Joins: electr0n (~electr0n@about/security/founder/electr0n)
[23:13:38] *** Quits: pulse (~pulse@user/pulse) (Quit: My hovercraft is full of eels)
[23:14:39] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[23:17:06] *** Quits: electr0n_ (~electr0n@about/security/founder/electr0n) (Ping timeout: 268 seconds)
[23:20:02] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 260 seconds)
[23:27:48] *** Joins: stenno (~stenno@user/stenno)
[23:28:24] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[23:28:24] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[23:28:24] *** Joins: wroathe (~wroathe@user/wroathe)
[23:29:36] *** Quits: kmh (~kmh@2a00:6020:5004:6800:2016:234c:3680:fc33) (Read error: Connection reset by peer)
[23:29:48] *** Joins: kmh (~kmh@2a00:6020:5004:6800:2016:234c:3680:fc33)
[23:32:25] *** Joins: bodiccea (~bodiccea@user/bodiccea)
[23:34:54] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[23:40:35] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[23:41:34] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[23:42:23] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[23:44:18] <silly> weird, some google search results are indented which makes them appear to be related to the previous search result. i don't get it...
[23:44:50] <hassoon> silly: maybe bad css
[23:45:10] <silly> oh i can't believe that
[23:45:31] <silly> https://www.google.com/search?client=firefox-b-d&q=%28electron%3A935234%29%3A+Pango-ERROR+**%3A+21%3A12%3A20.565%3A+Harfbuzz+version+too+old+%281.2.7%29+
[23:45:45] <hassoon> silly: youtube has bad css for comments as well, you can for example have a very long account name, that will overlays the videos container in the right side of the video player
[23:45:47] <silly> there, the 2nd and 5th are indented
[23:45:59] <hassoon> * will overlay *
[23:46:36] <silly> hassoon, is that on a very very narrow window?
[23:47:13] <hassoon> silly: nope, a stretched laptop-screen-sized window
[23:47:20] <hassoon> the likes of 15' laptops
[23:47:39] <silly> i've never noticed it with 1920 width
[23:47:56] <hassoon> silly: ah they have set a padding for that classname, doesn't even seem to be related to any context of a history/older visit https://i.imgur.com/l6FKZ94.png
[23:48:08] <hassoon> .FxLDp
[23:48:24] <hassoon> silly: forgot where the video sample was, lemme check
[23:48:42] *** Joins: onosendi (~onosendi@user/onosendi)
[23:49:22] <hassoon> maybe the user knew about that bad css implementation, their account name was literally a snake-shaped string made of alot of _'s
[23:50:08] <silly> this search results thing seems to be on purpose
[23:51:39] <silly> you still haven't gotten around configuring autodark themes?
[23:52:17] *** Quits: paule32 (~paul@user/paule32) (Quit: Leaving)
[23:53:34] <hassoon> silly: ahahahaha, will do soon
[23:53:35] <hassoon> :P
[23:53:38] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[23:53:40] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[23:53:40] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[23:53:40] *** Joins: wroathe (~wroathe@user/wroathe)
[23:57:23] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
