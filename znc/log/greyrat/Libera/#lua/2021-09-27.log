[01:06:41] *** Quits: GNUHacker (~foobar@fsf/member/GNUHacker) (Quit: Free as in Freedom)
[01:16:00] *** Joins: DixieFlatline_ (~soryuu@pool-173-61-70-58.cmdnnj.fios.verizon.net)
[01:23:46] *** Joins: miasuji (~miasuji@97-118-103-149.hlrn.qwest.net)
[01:54:28] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Quit: Leaving)
[02:33:55] *** Joins: pizdets_ (~pizdets@183.182.111.91)
[02:34:26] *** Quits: pizdets (~pizdets@183.182.111.82) (Ping timeout: 250 seconds)
[02:37:13] *** Joins: cp- (~cp-@b157153.ppp.asahi-net.or.jp)
[02:58:10] *** Quits: Elw3 (~Elw3@x59cc9a6c.dyn.telefonica.de) (Quit: Leaving)
[03:03:00] *** Quits: Tricycle (~CGI273@lfbn-idf1-1-1830-41.w90-91.abo.wanadoo.fr) (Quit: bye)
[03:08:13] *** Quits: miasuji (~miasuji@97-118-103-149.hlrn.qwest.net) (Quit: Leaving)
[03:30:23] *** Quits: Humbedooh (~humbedooh@apache/staff/humbedooh) (Quit: jumpin' jumpin')
[03:31:02] *** Joins: Humbedooh (~humbedooh@humbedooh.com)
[03:31:04] *** Quits: Humbedooh (~humbedooh@humbedooh.com) (Changing host)
[03:31:04] *** Joins: Humbedooh (~humbedooh@apache/staff/humbedooh)
[03:51:36] *** Joins: vnogueira (~vnogueira@user/vnogueira)
[03:52:03] *** Quits: vnogueir- (~vnogueira@user/vnogueira) (Ping timeout: 276 seconds)
[04:10:20] *** Quits: DixieFlatline_ (~soryuu@pool-173-61-70-58.cmdnnj.fios.verizon.net) (Ping timeout: 265 seconds)
[05:12:07] *** Joins: kiril (~kiril@85.91.153.163)
[05:18:47] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[05:37:38] *** Quits: aead (~aead@user/aead) (Killed (NickServ (GHOST command used by aeadio)))
[05:37:59] *** Joins: aeadio (~aead@user/aead)
[05:46:00] *** Joins: Alexwall (~Alexwall@207.41.127.154)
[05:52:49] *** Quits: Alexwall (~Alexwall@207.41.127.154) (Quit: *.net *.split)
[06:05:22] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 265 seconds)
[06:11:47] *** Joins: DixieFlatline_ (~soryuu@pool-173-61-70-58.cmdnnj.fios.verizon.net)
[06:39:19] *** Joins: Carp (~rue@1-162-40-185.dynamic-ip.hinet.net)
[06:44:28] *** Quits: ratchetfreak (~ratchetfr@d8d8779d9.access.telenet.be) (Read error: Connection reset by peer)
[06:44:47] *** Quits: ratchet_freak (~ratchetfr@ptr-82rtos1uhakfz4xnvao.18120a2.ip6.access.telenet.be) (Ping timeout: 240 seconds)
[07:30:02] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.4-dev)
[07:34:32] *** Joins: r3m (~launch@user/r3m)
[08:08:48] *** Joins: ttmrichter (~ttmrichte@user/ttmrichter)
[08:52:33] *** Quits: kiril (~kiril@85.91.153.163) (Read error: Connection reset by peer)
[08:55:16] *** Joins: kiril (~kiril@85.91.153.163)
[08:57:29] *** Quits: kiril (~kiril@85.91.153.163) (Read error: Connection reset by peer)
[09:00:27] *** Joins: kiril (~kiril@85.91.153.163)
[09:02:01] *** Joins: password (~password@user/password2)
[09:17:24] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[09:17:49] *** Joins: ano (~ano@user/ano)
[09:18:33] *** Quits: nmz- (nmz@brought.to.you.by.bnc4free.com) (*.net *.split)
[09:18:44] *** Joins: nmz- (nmz@brought.to.you.by.bnc4free.com)
[09:20:32] *** Quits: fcr (~fran@r186-48-143-167.dialup.adsl.anteldata.net.uy) (Read error: Connection reset by peer)
[09:24:07] *** Joins: uzi_ (~uzi@161.9.200.39)
[09:24:41] *** Quits: sm2n (~sm2n@user/sm2n) (*.net *.split)
[09:24:42] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (*.net *.split)
[09:24:42] *** Quits: Stealth (stealth@sourcemage/archon/stealth) (*.net *.split)
[09:24:43] *** Quits: nolesswrong (~nolesswro@45.32.1.17) (*.net *.split)
[09:24:43] *** Quits: yousef (~root@78.141.193.181) (*.net *.split)
[09:24:43] *** Quits: ShadowNinja (quasselcor@user/shadowninja) (*.net *.split)
[09:24:49] *** Joins: nolesswrong (~nolesswro@45.32.1.17)
[09:24:50] *** Joins: yousef (~root@78.141.193.181)
[09:24:54] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[09:24:56] *** Joins: ShadowNinja (quasselcor@user/shadowninja)
[09:26:10] *** Joins: sm2n (~sm2n@user/sm2n)
[09:27:14] *** Joins: Stealth (stealth@sourcemage/archon/stealth)
[09:29:35] *** Joins: fcr (~fran@r167-60-110-65.dialup.adsl.anteldata.net.uy)
[09:32:43] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[09:44:50] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[10:16:12] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[10:24:58] *** Quits: uzi_ (~uzi@161.9.200.39) (Ping timeout: 260 seconds)
[10:27:38] *** Joins: uzi_ (~uzi@161.9.200.39)
[10:34:23] *** Joins: Yorlik (~Yorlik___@ip6-2a03-7500-050f-5500-70cf-0658-e8f8-c479.dyn.netcomnetz.de)
[10:35:40] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.2.1)
[10:55:46] *** Quits: DixieFlatline_ (~soryuu@pool-173-61-70-58.cmdnnj.fios.verizon.net) (Ping timeout: 252 seconds)
[11:09:35] *** Joins: ratchetfreak (~ratchetfr@d8d8779d9.access.telenet.be)
[11:18:43] *** Quits: ttmrichter (~ttmrichte@user/ttmrichter) (Quit: Client closed)
[11:30:48] *** Joins: macaw (~macaw@176.221.120.196)
[11:43:01] *** Quits: Yorlik (~Yorlik___@ip6-2a03-7500-050f-5500-70cf-0658-e8f8-c479.dyn.netcomnetz.de) (Ping timeout: 245 seconds)
[11:49:04] *** Joins: kipras (~kipras@78-57-120-254.static.zebra.lt)
[13:30:50] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[13:52:27] *** Joins: Yorlik (~Yorlik___@ip6-2a03-7500-050f-5500-7573-5c82-e5d1-a337.dyn.netcomnetz.de)
[14:12:34] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[14:43:01] *** Quits: Yorlik (~Yorlik___@ip6-2a03-7500-050f-5500-7573-5c82-e5d1-a337.dyn.netcomnetz.de) (Ping timeout: 245 seconds)
[14:45:26] *** Quits: andreypopp (~andreypop@94.188.42.16) (Ping timeout: 265 seconds)
[14:52:52] *** Joins: andreypopp (~andreypop@94.188.42.16)
[15:33:05] *** Quits: nmz (~nmz@adsl-64-237-239-174.prtc.net) (Ping timeout: 252 seconds)
[15:40:06] <andreyorst> is it safe to assume that pairs will walk the same table in the same order every time if the table didn't change?
[15:42:09] <andreyorst> in other words the state of the VM doesn't affect that?
[15:42:36] <MattJ> The manual doesn't guarantee that, but in reality in current Lua versions, yes
[15:42:55] <andreyorst> for a more clear example, let's say I've defined a local variable with a table {a = 1, b = 2, c = 3}
[15:42:59] <MattJ> I'm curious what kind of thing you're doing that would need such a guarantee
[15:43:11] <andreyorst> I've walked over it with pairs and got a c b order
[15:43:20] <andreyorst> then my program did a bunch of stuff
[15:43:41] <andreyorst> and I've walked it again, my expectation would be again to see a c b order
[15:44:22] <andreyorst> MattJ: I wanted the keys and vals functions that return keys as a table and vals as another table
[15:44:50] <andreyorst> and if I want to merge them back I need to be sure that the order between two passes over same table object will be the seame
[15:45:38] <MattJ> If you want order preserved, an array is the right data structure to use
[15:45:49] *** Joins: Yorlik (~Yorlik___@ip6-2a03-7500-050f-5500-ddab-849e-90cd-a82c.dyn.netcomnetz.de)
[15:46:01] <andreyorst> I know
[15:46:13] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Quit: leaving)
[15:46:28] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[15:46:37] <andreyorst> I don't need order to be preserved, I need for it to be the same between pairs invocations, I care for it to be the same, not concrete order
[15:47:39] <MattJ> Well, I gave an answer. The choice is up to you :)
[15:48:43] <andreyorst> t = {a=1,b=2,c=3} keys(t) => {"a","c","b"} vals(t) => {1,3,2}, zipmap({"a","c","b"}, {1,3,2}) => {a=1,b=2,c=3}
[15:50:19] <andreyorst> ofcourse I can make {a=1,b=2,c=3} into {{"a",1},{"c",3},{"b",2}} in both keys() and vals() first, and sort it for consistent results
[15:50:35] <andreyorst> it's just way slower
[15:51:04] <MattJ> local keys, vals = split_to_arrays(t)
[15:52:36] <andreyorst> while this is an option thanks to multiple values, in my usecase it's not always optimal
[15:53:25] <andreyorst> but, OK, thanks for pointing out that manual doesn't guarantee this
[15:53:53] <andreyorst> I guess I'll bite the bullet
[16:14:01] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[16:16:53] *** Joins: DixieFlatline_ (~soryuu@pool-173-61-70-58.cmdnnj.fios.verizon.net)
[16:24:50] *** Joins: uzi__ (~uzi@161.9.200.39)
[16:27:11] *** Quits: Yorlik (~Yorlik___@ip6-2a03-7500-050f-5500-ddab-849e-90cd-a82c.dyn.netcomnetz.de) (Ping timeout: 245 seconds)
[16:27:11] *** Quits: uzi_ (~uzi@161.9.200.39) (Ping timeout: 245 seconds)
[16:27:53] *** Joins: uzi_ (~uzi@161.9.200.39)
[16:29:44] *** Quits: uzi__ (~uzi@161.9.200.39) (Ping timeout: 252 seconds)
[16:43:59] *** Quits: uzi_ (~uzi@161.9.200.39) (Ping timeout: 265 seconds)
[16:45:46] *** Joins: uzi_ (~uzi@161.9.200.39)
[16:47:48] *** Joins: uzi__ (~uzi@161.9.200.42)
[16:50:31] *** Quits: uzi_ (~uzi@161.9.200.39) (Ping timeout: 245 seconds)
[17:17:28] *** Joins: Yorlik (~Yorlik___@ip6-2a03-7500-050f-5500-1c78-0579-dfcd-1b36.dyn.netcomnetz.de)
[17:17:38] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-d80f-6fe9-a798-c762.res6.spectrum.com)
[17:40:49] *** Quits: DixieFlatline_ (~soryuu@pool-173-61-70-58.cmdnnj.fios.verizon.net) (Quit: client exit)
[17:41:14] *** Joins: DixieFlatline (~soryuu@pool-173-61-70-58.cmdnnj.fios.verizon.net)
[18:06:42] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_dog)
[18:06:51] *** Joins: parnikkapore (~parnikkap@user/parnikkapore)
[18:07:42] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[18:19:08] *** Quits: emg (~emg@cpe-70-93-247-186.natsow.res.rr.com) (Killed (NickServ (GHOST command used by emg_!~emg_@cpe-70-93-247-186.natsow.res.rr.com)))
[18:22:38] <RhodiumToad> make an array of keys the first time you walk the table, and then use that to traverse again in the same order
[18:34:52] *** Joins: GNUHacker (~foobar@fsf/member/GNUHacker)
[18:41:28] *** Joins: Elw3 (~Elw3@dynamic-002-247-242-218.2.247.pool.telefonica.de)
[18:41:58] *** Quits: parnikkapore (~parnikkap@user/parnikkapore) (Quit: Leaving)
[18:57:47] *** Joins: magla (~gelignite@55d4442a.access.ecotel.net)
[19:13:56] *** Joins: reset (~reset@user/reset)
[19:16:00] <andreyorst> that's not an option unfortunately
[19:44:14] *** Joins: nmz (~nmz@adsl-72-50-4-41.prtc.net)
[19:57:45] *** Parts: Carp (~rue@1-162-40-185.dynamic-ip.hinet.net) (WeeChat 3.2.1)
[19:58:12] *** Quits: nmz (~nmz@adsl-72-50-4-41.prtc.net) (Quit: EXIT)
[20:10:18] *** Parts: strast (~steve@rrcs-162-155-169-18.central.biz.rr.com) ()
[20:15:02] *** Joins: strast (~steve@rrcs-162-155-169-18.central.biz.rr.com)
[20:30:11] *** Quits: Yorlik (~Yorlik___@ip6-2a03-7500-050f-5500-1c78-0579-dfcd-1b36.dyn.netcomnetz.de) (Ping timeout: 265 seconds)
[20:37:56] *** Joins: Yorlik (~Yorlik___@ip6-2a03-7500-050f-5500-3023-351f-c39c-bd94.dyn.netcomnetz.de)
[20:56:42] *** Joins: nmz (~nmz@adsl-72-50-4-176.prtc.net)
[21:07:39] *** Joins: ratchet_freak (~ratchetfr@ptr-82rtos1uhakfz4xnvao.18120a2.ip6.access.telenet.be)
[21:11:28] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:a922:d14c:ccf1:e0e0)
[21:11:28] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:a922:d14c:ccf1:e0e0) (Changing host)
[21:11:28] *** Joins: skapata (~Skapata@user/skapata)
[21:26:19] *** Quits: fcr (~fran@r167-60-110-65.dialup.adsl.anteldata.net.uy) (Ping timeout: 268 seconds)
[21:31:52] *** Joins: fcr (~fran@r167-60-70-38.dialup.adsl.anteldata.net.uy)
[21:55:46] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 252 seconds)
[22:14:35] *** Quits: Yorlik (~Yorlik___@ip6-2a03-7500-050f-5500-3023-351f-c39c-bd94.dyn.netcomnetz.de) (Ping timeout: 265 seconds)
[22:53:51] *** Joins: Tricycle (~CGI273@lfbn-idf1-1-1830-41.w90-91.abo.wanadoo.fr)
[23:28:06] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:e01f:4e2b:c803:177a)
[23:42:44] *** Joins: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469)
[23:45:25] *** Quits: magla (~gelignite@55d4442a.access.ecotel.net) (Quit: Stay safe!)
[23:55:34] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:e01f:4e2b:c803:177a) (Quit: Textual IRC Client: www.textualapp.com)
[23:56:49] *** Quits: Rue (~rue@2001-b011-1000-1f54-7eb3-4a8c-a9e9-9ba2.dynamic-ip6.hinet.net) (Ping timeout: 252 seconds)
[23:59:00] *** Quits: kiril (~kiril@85.91.153.163) (Read error: Connection reset by peer)
[23:59:08] *** Joins: Rue (~rue@2001-b011-1000-18fe-c1c5-8c34-a15c-8faf.dynamic-ip6.hinet.net)
