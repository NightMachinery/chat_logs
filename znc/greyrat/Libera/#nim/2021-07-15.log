[00:03:04] *** Quits: max22- (~maxime@2a01cb0883359800dee60ff75e000856.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[00:11:05] *** Joins: max22- (~maxime@2a01cb0883359800dee60ff75e000856.ipv6.abo.wanadoo.fr)
[00:30:10] *** Quits: max22- (~maxime@2a01cb0883359800dee60ff75e000856.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[00:37:40] *** Joins: max22- (~maxime@2a01cb0883359800dee60ff75e000856.ipv6.abo.wanadoo.fr)
[01:18:12] *** Joins: rockcavera (~rc@192.12.112.199)
[01:18:12] *** Quits: rockcavera (~rc@192.12.112.199) (Changing host)
[01:18:12] *** Joins: rockcavera (~rc@user/rockcavera)
[01:24:41] *** Quits: max22- (~maxime@2a01cb0883359800dee60ff75e000856.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[01:25:05] *** Joins: max22- (~maxime@2a01cb0883359800dee60ff75e000856.ipv6.abo.wanadoo.fr)
[01:46:47] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Ping timeout: 245 seconds)
[01:57:51] *** Quits: max22- (~maxime@2a01cb0883359800dee60ff75e000856.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[02:13:03] *** Joins: max22- (~maxime@2a01cb0883359800c70a2171c06524ea.ipv6.abo.wanadoo.fr)
[02:31:07] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[02:32:59] *** Quits: max22- (~maxime@2a01cb0883359800c70a2171c06524ea.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[03:02:05] <FromDiscord> <Ayy Lmao> What do you all use for text editing? Is there anything good that has good autocomplete and definition finding?
[03:04:24] <FromDiscord> <theangryepicbanana> In reply to @Ayy Lmao "What do you all": I think there's some lsp extensions for nim in vscode
[03:10:13] <FromDiscord> <ElegantBeef> I use saems extension for vscode
[03:16:30] <FromDiscord> <Ayy Lmao> That seems good. I've found the syntax highlighting in the vscode extensions to be a bit wonky sometimes however
[03:25:45] <FromDiscord> <Ayy Lmao> Having the lsp installed is really good though, I didn't have that before
[03:37:04] <FromDiscord> <System64 ~ Flandre Scarlet> Is it possible to use C code in Nim or I have to port it?
[03:39:34] <FromDiscord> <Ayy Lmao> You can use C code, there's an example in here https://nim-lang.org/docs/backends.html
[03:40:39] <FromDiscord> <theangryepicbanana> In reply to @Ayy Lmao "That seems good. I've": yeah I'm hoping to work on the syntax highlighting soon-ish
[03:40:44] <FromDiscord> <theangryepicbanana> it kinda sucks
[03:41:47] <FromDiscord> <System64 ~ Flandre Scarlet> Ooooh alright that's cool!
[03:42:45] <FromDiscord> <System64 ~ Flandre Scarlet> this language is neat
[03:44:27] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @Ayy Lmao "You can use C": and if there is multiple files for my C code, is that a problem too?
[03:44:40] <FromDiscord> <Ayy Lmao> It is. I hope it gains popularity. I have found it to be a great language to work with for pretty much all of my needs so far
[03:44:56] <FromDiscord> <Ayy Lmao> In reply to @System64 "and if there is": It shouldn't be a problem
[03:45:05] <FromDiscord> <System64 ~ Flandre Scarlet> alright should try that
[03:46:21] <FromDiscord> <Ayy Lmao> You can also link compiled c libs, dynamic and static
[03:46:31] <FromDiscord> <System64 ~ Flandre Scarlet> Yeah I know that
[03:46:47] <FromDiscord> <System64 ~ Flandre Scarlet> that's what I did with GameMusicEmu and Tilengine
[04:00:08] <FromDiscord> <ElegantBeef> @garett you know you starred the completely wrong `hottie` mine was just for porting it to linux 😄
[04:00:34] <FromDiscord> <garett> Thanks for the heads up
[04:01:27] <FromDiscord> <ElegantBeef> It was just so i could delete it without confusing you
[04:01:48] <FromDiscord> <garett> Now I’ve starred treeform’s repo
[04:11:16] <FromDiscord> <theangryepicbanana> what's the operator precedence of the deref operator? I can't find it in the docs
[04:31:49] <FromDiscord> <theangryepicbanana> ...
[04:50:43] *** Quits: Jjp137 (~Jjp137@2603-8000-2a01-3406-92fb-a6ff-fee2-6861.res6.spectrum.com) (Quit: Leaving)
[04:53:10] *** Joins: Jjp137 (~Jjp137@2603-8000-2a01-3406-92fb-a6ff-fee2-6861.res6.spectrum.com)
[05:42:08] <FromDiscord> <gogolxdong (liuxiaodong)> Is there any threadPool implementation in Nim?
[05:44:13] <FromDiscord> <ElegantBeef> There is `threadPool` in the stdlib, though there may be other implementations
[05:46:24] <FromDiscord> <gogolxdong (liuxiaodong)> Does spawn or parallel work well?
[05:47:03] <FromDiscord> <gogolxdong (liuxiaodong)> What about CPS?
[05:50:42] <FromDiscord> <gogolxdong (liuxiaodong)> Any other recommanded implementations?
[05:51:59] <FromDiscord> <konsumlamm> In reply to @gogolxdong (liuxiaodong) "Does spawn or parallel": not really afaik
[05:52:19] <FromDiscord> <konsumlamm> In reply to @gogolxdong (liuxiaodong) "What about CPS?": CPS is still experimental/WIP
[05:53:22] <FromDiscord> <konsumlamm> In reply to @gogolxdong (liuxiaodong) "Any other recommanded implementations?": there's weave, but that's quite low level (so not super useful unless you're making a high level wrapper for it), other thab that idk of any
[05:53:50] <FromDiscord> <konsumlamm> i heard there are plans to eventually rewrite the stdlib threadpool
[05:55:23] <FromDiscord> <leorize> cps is working, but it's not a threadpool, it's merely a backbone that you can build a pool on
[05:55:57] <FromDiscord> <konsumlamm> ah, is it finished now?
[05:56:28] <FromDiscord> <leorize> yea, you can check out the collection of examples in cps repo
[05:56:32] <FromDiscord> <konsumlamm> and yeah, it's by no means a threadpool implementation (it isn't even inherently concurrent or anything)
[05:56:44] <FromDiscord> <leorize> currently we are focused in actually using cps to see what can be improved
[05:56:50] <FromDiscord> <konsumlamm> nice
[05:59:13] <FromDiscord> <leorize> if you're interested in playing with cps, zevv is making a tutorial\: https://github.com/zevv/cpstut
[05:59:15] <fn> <12R2D299> 4GitHub: 7"<No Description>"
[06:00:54] <FromDiscord> <konsumlamm> will take a look
[06:08:44] <FromDiscord> <gogolxdong (liuxiaodong)> Why didn't we heard any news about CPS?
[06:11:32] <FromDiscord> <ElegantBeef> Cause you havent been looking closely
[06:12:04] <FromDiscord> <ElegantBeef> It was in last month's this month with nim 😄
[06:17:52] <FromDiscord> <gogolxdong (liuxiaodong)> Anyone played Chia?
[06:26:37] <FromDiscord> <gogolxdong (liuxiaodong)> What's the essential of Continuations ?
[06:29:02] <FromDiscord> <leorize> I think this describes it best\: https://github.com/disruptek/cps/tree/master/docs
[06:58:55] <FromDiscord> <@bracketmaster-5a708063d73408ce4> Can you change the default values of an initialized types?
[06:59:19] <FromDiscord> <@bracketmaster-5a708063d73408ce4> an object with integer members for example defaults the integers to 0
[06:59:30] <FromDiscord> <ElegantBeef> You cannot override defaults
[07:00:08] <FromDiscord> <ElegantBeef> https://github.com/beef331/constructor#defaults you can checkout that for a macro solution for a default constructor
[07:00:10] <fn> <12R2D299> 4GitHub: 7"Nim macros to aid in object construction including event programming, and constructors."
[07:01:51] <FromDiscord> <@bracketmaster-5a708063d73408ce4> of course there a macro solution 😛
[07:02:01] <FromDiscord> <Elegantbeef> Well there always are macros
[07:09:47] <FromDiscord> <Elegantbeef> @Bung\: so i do now support ref objects and sequences, so there is a chance that atleast Nimscript -\> Nim for jsonnodes will work 😀
[07:10:16] *** Quits: Figworm (FiggyWitIt@user/figworm) (Quit: Figworm)
[07:16:24] <FromDiscord> <Bung> why is one way direction
[07:24:17] <FromDiscord> <Bung> hmm , like before use compiler package directly will face compatible problem `Error: undeclared identifier: 'nativeStackTraceSupported'`
[07:25:55] <FromDiscord> <Elegantbeef> Cause i havent got the other way done yet
[07:26:02] <FromDiscord> <Elegantbeef> And yea make sure you're using 1.5.1
[07:27:17] <FromDiscord> <Elegantbeef> I had the same issue but adding compiler as a dep fixed it
[07:27:19] <FromDiscord> <Bung> in this situation the version number does not enough
[07:27:26] <FromDiscord> <Elegantbeef> Yea i know
[07:36:18] <FromDiscord> <Elegantbeef> what's "like before use compiler package directly " about though, not like this can work any other way that i know of \:D
[07:37:58] <FromDiscord> <ajusa> In reply to @ajusa "Is there a zero": Do I need view types for this?
[07:40:27] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:40:46] <FromDiscord> <Elegantbeef> Well you might be able to use https://nim-lang.org/docs/system.html#toOpenArray%2Ccstring%2Cint%2Cint but it doesnt return a string
[07:43:58] <FromDiscord> <Bung> `Error: expression 'multiplyBy10(a)' is of type 'int' and has to be used `
[07:44:08] <FromDiscord> <Elegantbeef> Yea tests dont work yet
[07:44:26] <FromDiscord> <Elegantbeef> `example.nim` is the only thing that presently works
[07:45:38] <FromDiscord> <Elegantbeef> That whole not handling return types is in effect there
[08:00:12] <FromDiscord> <Bung> how to construct argBuffer when call invoke @ElegantBeef
[08:00:21] <FromDiscord> <Elegantbeef> You cannot presently \:D
[08:00:41] <FromDiscord> <Elegantbeef> Like i said only Nimscript -\> Nim is done
[08:01:42] <FromDiscord> <Bung> okay, I'll wait for nim -> nims then
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:36] *** Joins: supakeen (~user@python/site-packages/supakeen)
[09:06:25] <FromDiscord> <gogolxdong (liuxiaodong)> Is it possible to build thread pool based on CPS?
[09:08:01] <FromDiscord> <gogolxdong (liuxiaodong)> I found one in the example.
[09:16:34] <FromDiscord> <gogolxdong (liuxiaodong)> What is jield?
[09:18:26] <FromDiscord> <Rika> A weirder way to say yield I assume
[09:20:42] <FromDiscord> <ElegantBeef> well yield is a keyword so they used jield as their "keyword"
[09:41:54] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[10:00:08] <fn> <11ForumUpdaterBot99> New Nimble package! morepretty - Morepretty - Does more than nimpretty., see https://github.com/treeform/morepretty
[10:00:09] <fn> <12R2D299> 4GitHub: 7"Morepretty - like nimpretty but with more stuff."
[10:36:53] <FromDiscord> <gogolxdong (liuxiaodong)> Is there radix sort in stdlib?
[11:18:30] *** Joins: max22- (~maxime@2a01cb08833598008598112a5a452377.ipv6.abo.wanadoo.fr)
[12:10:01] <FromDiscord> <Tux> wanting to try to learn this language, does anyone know of an ncurses library? im gonna port some old code to nim if possible
[12:10:11] <FromDiscord> <Tux> @ElegantBeef hi
[12:11:55] <FromDiscord> <InventorMatt> https://github.com/johnnovak/illwill
[12:11:57] <fn> <12R2D299> 4GitHub: 7"<No Description>"
[12:12:06] <FromDiscord> <Tux> pog, this will work fine
[12:12:14] <FromDiscord> <Tux> thank ^w^
[12:12:32] <FromDiscord> <ElegantBeef> There are also ncurses bindings of course
[12:12:41] <FromDiscord> <Tux> In reply to @ElegantBeef "There are also ncurses": i see
[12:12:47] <FromDiscord> <Tux> nim looks like python but good
[12:12:54] <FromDiscord> <Tux> so hopefully it wont take too long to understand
[12:13:52] <FromDiscord> <Rika> It’s not similar in usage
[12:14:09] <FromDiscord> <Rika> So do not expect it to be like Python other than in look
[12:15:10] <FromDiscord> <Tux> i see
[12:15:22] <FromDiscord> <Tux> it doesnt have any complex stuff like borrowing from rust does it?
[12:15:32] <FromDiscord> <Tux> if its a normal, sane GC language i should not have too much trouble w/ it
[12:15:33] <FromDiscord> <Rika> It does but not in the same way rust implements it
[12:15:41] <FromDiscord> <Tux> oh god
[12:15:50] <FromDiscord> <Rika> It’s easier
[12:15:54] <FromDiscord> <Rika> And optional
[12:16:01] <FromDiscord> <ElegantBeef> Well it has move semantics but they're not in your face, and also there is a borrow checker as an opt in feature for view types
[12:16:10] <FromDiscord> <Tux> ah
[12:16:11] <FromDiscord> <Tux> ok
[12:16:23] <FromDiscord> <Tux> does it support global vars
[12:16:27] <FromDiscord> <Rika> Yes
[12:16:31] <FromDiscord> <Rika> Not in threaded code though
[12:16:47] <FromDiscord> <Rika> (You shouldn’t do it in threaded code anyway but yeah)
[12:17:21] <FromDiscord> <Tux> ok
[12:20:59] <FromDiscord> <Tux> is nimble fast / powerful
[12:21:03] <FromDiscord> <Tux> or nim
[12:21:05] <FromDiscord> <Tux> sorry
[12:22:01] <FromDiscord> <ElegantBeef> Yes
[12:22:23] <FromDiscord> <Tux> am i in the special club now
[12:22:25] <FromDiscord> <Tux> for using this
[12:22:30] <FromDiscord> <ElegantBeef> An obscure club
[12:22:41] <FromDiscord> <Tux> it looks cool tho
[12:22:50] <FromDiscord> <Tux> imma watch a. vid on it and read the online tutorial maybe
[12:22:58] <FromDiscord> <ElegantBeef> have fun
[12:23:02] <FromDiscord> <Tux> it looks actually usable unlike rust
[12:23:20] <FromDiscord> <Tux> also what's when
[12:23:27] <FromDiscord> <Tux> is it like a special if?
[12:24:02] <FromDiscord> <ElegantBeef> It's compile time if
[12:24:12] <FromDiscord> <ElegantBeef> So anything inside the body is changed based off the conditions
[12:24:57] <FromDiscord> <ElegantBeef> So for generics you can use it for types to change the body of a function, or you can import a specific module based of OS
[12:25:48] <FromDiscord> <Tux> o
[12:25:56] <FromDiscord> <Tux> that's sounds like static if in D
[12:26:09] <FromDiscord> <ElegantBeef> Yea probably is
[12:26:17] <FromDiscord> <Tux> nim looks like if python and d had a baby
[12:27:01] <FromDiscord> <ElegantBeef> They do have some overlap
[12:31:00] *** Joins: fredrikhr (~fredrikhr@89-162-57-126.fiber.signal.no)
[12:32:36] <FromDiscord> <Tux> can i send a shitty meme i made
[12:32:49] <FromDiscord> <Tux>  https://media.discordapp.net/attachments/371759389889003532/865141336252743680/image0.png
[12:33:56] <FromDiscord> <Tux> anyway
[12:34:06] <FromDiscord> <Tux> i'm off to read the docs and stuff
[12:34:08] <FromDiscord> <Tux> and yeah
[12:41:57] <FromDiscord> <Rika> Isn’t Nim older than D
[12:42:35] <FromDiscord> <ElegantBeef> Nah D first released in 2001
[12:42:37] <FromDiscord> <ynfle (ynfle)> Which `--cpu` option do I use for cross compilling for Linux on a  x86\_64 Intel Xeon?
[12:43:05] <FromDiscord> <Rika> In reply to @ElegantBeef "Nah D first released": Funny how we’re more popular from what I recall then
[12:43:42] <FromDiscord> <Tux> sadly d isn't popular which sucks bc it's a nice language
[12:48:04] <FromDiscord> <ElegantBeef> isnt it just `--os:linux`?
[12:48:30] <FromDiscord> <ElegantBeef> `--cpu` is only important for targeting different archs
[12:51:17] <FromDiscord> <richard stallmen(crazy GNU guy)> @Tux helo tox
[12:56:35] <FromDiscord> <ynfle (ynfle)> Oh ok
[12:56:36] <FromDiscord> <ynfle (ynfle)> I'll try that
[13:02:20] <FromDiscord> <richard stallmen(crazy GNU guy)> the eraseScreen() is a bit wrong , like , it does print \n a lot , but doesnt reset the cursor to home
[13:02:30] <FromDiscord> <richard stallmen(crazy GNU guy)> or is it becuase i am in android?
[13:04:51] <FromDiscord> <ynfle (ynfle)> sent a code paste, see https://play.nim-lang.org/#ix=3t3H
[13:07:11] <FromDiscord> <richard stallmen(crazy GNU guy)> i had to use this proc:↵↵proc setCursorPos(f: File; x, y: int) {...}
[13:08:20] <FromDiscord> <Tux> In reply to @richard stallmen(crazy GNU guy) "<@800941608560230441> helo tox": hello rms
[13:21:27] <FromDiscord> <richard stallmen(crazy GNU guy)> hehe
[13:21:29] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f)
[14:02:29] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @Tux "or nim": It uses a C backend so you have C speed
[14:32:36] *** Joins: Vladar (~Vladar@46.162.2.53)
[14:33:33] <arkanoid> I'm refactoring a project and I'm trying to apply some proper effect tracking. Do you know if it is possible to detect which procs are undercover funcs (noSideEffect)?
[14:41:47] <FromDiscord> <haxscramper> https://nim-lang.org/docs/effecttraits.html#hasNoSideEffects%2CNimNode
[14:42:21] <FromDiscord> <haxscramper> Or some other procedures from this module (empty tag list)
[14:42:47] <FromDiscord> <Rika> oh man a new module to read about
[14:44:02] <arkanoid> will this work even even proc is declared as "proc" and "noSideEffect" pragma is present, but proc really has no side effects?
[14:44:45] <arkanoid> from the docs seems that it just detects if pragma is present or not ("Return true if the func/proc/etc fn has noSideEffect")
[14:47:28] <FromDiscord> <ynfle (ynfle)> The compiler automatically generates it
[14:47:29] <FromDiscord> <haxscramper> No, compiler does not automatically add `.noSideEffect.`
[14:47:29] <FromDiscord> <haxscramper> It was added in `1.4.0`↵(@Rika)
[14:47:51] <FromDiscord> <haxscramper> Instead procedure symbol has tag effects store in it's type/definition, and when other procedure calls it the effects are callucated based on
[14:48:09] <FromDiscord> <haxscramper> so you can have `proc test() = discard`, and use it in `func()`
[14:48:38] <FromDiscord> <haxscramper> But if you decide to add some side effect in `test()` then it will break func's compilation
[14:49:11] <FromDiscord> <haxscramper> [Edit](https://discord.com/channels/371759389889003530/371759389889003532/865175321019023380): Instead, a procedure symbol has tag effects stored in its type/definition, and when other procedure calls it the effects are calculated based on
[14:50:00] <FromDiscord> <haxscramper> And some procedures like `echo` are not properly tracked by their side effects alone - they have additional `sideEffect` annotation
[14:50:11] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[14:50:19] <arkanoid> ok, so if I have a project with a tons of procs and I want to refactor them by splitting between total pure {.noSideEffect, raises: [].} procs and others (where I'd use tags) I have to to this manually
[14:50:26] <FromDiscord> <haxscramper> I'm still not sure whether it is a bug or I've missed something in the compiler, but using `echo` does not add `WriteIOEffect`
[14:51:00] *** Joins: xet7 (~xet7@user/xet7)
[14:51:11] <FromDiscord> <haxscramper> And annotate your procs with `.clean.`
[14:51:12] <FromDiscord> <haxscramper> More or less. You can create `{.pragma clean: noSideEffect, raises: [].}`↵(<@709044657232936960_arkanoid=5b=49=52=43=5d>)
[14:51:28] <FromDiscord> <haxscramper> I think you can even `{.push clean.}` so you don't have to manually go over to each procedure and annotate it
[14:51:50] <arkanoid> interesting
[14:51:52] <FromDiscord> <haxscramper> Or `{.push noSideEffect.}`, `{.push: raises: [].}`
[14:52:54] <FromDiscord> <ynfle (ynfle)> How come I can't import effecttraits but `defined(nimHasEffectTraitsModule)` is true
[14:53:07] <arkanoid> I'm not fond of .push as it doesn't go over all proc definitions in the block. In particular it doesn't cover the callback proc types
[14:54:00] <FromDiscord> <Rika> ynfle what issues are you getting
[14:54:42] <FromDiscord> <ynfle (ynfle)> importtest.nim(1, 16) Error\: cannot open file\: effecttraits
[14:55:25] <FromDiscord> <Rika> requires std/ prefix apparently but not shown on docs...
[14:58:33] <arkanoid> I think the pragma definition syntax you suggested is wrong, I'm getting "Error: invalid pragma:  {.pragma, clean: noSideEffect, raises: [].}" (but the code really contains "{.pragma clean: noSideEffect, raises: [].}" without the comma after pragma)
[14:59:41] <FromDiscord> <haxscramper> Yes, I don't always remember correct syntax
[15:00:47] <FromDiscord> <Rika> no comma
[15:00:49] <FromDiscord> <Rika> you added a comma
[15:00:59] <FromDiscord> <Rika> pragma clean vs pragma, clean
[15:01:04] <FromDiscord> <Rika> oh
[15:01:08] <FromDiscord> <Rika> i didnt see the next part lmao
[15:01:16] <FromDiscord> <Rika> thats odd then
[15:01:44] <FromDiscord> <Rika> let me see
[15:02:23] <FromDiscord> <Rika> it's `pragma: clean, nosideeffect...`
[15:07:39] <FromDiscord> <ynfle (ynfle)> @haxscramper\:matrix.org @\_discord\_709044657232936960\_arkanoid=5b=49=52=43=5d\:t2bot.io this works↵\`\`\`nim
[15:08:06] <FromDiscord> <ynfle (ynfle)> The compiler does generate `noSideEffect` for procs
[15:08:17] <arkanoid> whoa! I get "Error: recursive dependency: clean" if I use "{.push clean.}"
[15:09:29] <FromDiscord> <ynfle (ynfle)> sent a long message, see http://ix.io/1L1p
[15:09:53] <FromDiscord> <ynfle (ynfle)> (Not sure if the edits came through)↵\`\`\`nim
[15:10:07] <FromDiscord> <ynfle (ynfle)> sent a code paste, see https://play.nim-lang.org/#ix=1MUs
[15:12:17] <arkanoid> play.nim-lang is not working to me
[15:12:47] <FromDiscord> <haxscramper> https://wandbox.org/
[15:13:27] <arkanoid> this is cool!
[15:14:34] <arkanoid> https://wandbox.org/permlink/AfmBxA9oFtpGHByS
[15:15:16] <arkanoid> it really seems that the compiler is capable of tag noSideEffect automatically
[15:15:29] <FromDiscord> <ynfle (ynfle)> It does
[15:16:09] <arkanoid> I would greatly benefit from this if there's a way to apply that macro to a module full of procs
[15:17:49] <FromDiscord> <ynfle (ynfle)> You can use this to get you started
[15:17:50] <FromDiscord> <ynfle (ynfle)> https://rosettacode.org/wiki/Reflection/List_methods#Nim
[15:18:27] <FromDiscord> <ynfle (ynfle)> Also, ar4q had a script that did this
[15:18:56] <FromDiscord> <Rika> someone told me this, its fine to say araq as it is because he is on discord now
[15:19:20] <FromDiscord> <ynfle (ynfle)> \:thumbsup\:
[15:19:40] <FromDiscord> <ynfle (ynfle)> araq, araq, araq, araq, araq, araq, araq, araq, araq, araq, araq, araq, araq, araq, araq, araq, araq, araq, araq, araq, araq, araq, araq, araq, araq, araq, araq, araq, araq, araq, araq, araq
[15:20:29] <arkanoid> ? was it a rule to don't disturb the great leader?
[15:22:40] <FromDiscord> <ynfle (ynfle)> https://github.com/nim-lang/Nim/pull/14728/files#diff-ffac2d093d390ecc2878eaf5a01b509dda270516f0c1853e8ac5a0229fcbcf46 @\_discord\_709044657232936960\_arkanoid=5b=49=52=43=5d\:t2bot.io see this not merged file
[15:23:26] <FromDiscord> <Rika> arkanoid informally
[15:23:45] <FromDiscord> <ynfle (ynfle)> It says that clybber came up with a better solution
[15:26:48] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Ping timeout: 268 seconds)
[15:30:12] <arkanoid> thanks
[15:32:21] <arkanoid> btw, here's the minimal exaple that shows the pragma recursive dependency problem: https://wandbox.org/permlink/tG1xHMgAcOE3AYZr
[15:33:30] <arkanoid> it works by pushing the two pragmas separately: https://wandbox.org/permlink/tv9TCkuUUgTjb3cV
[15:55:24] *** Joins: beshr (~beshr@78-72-246-187-no2006.tbcn.telia.com)
[15:55:24] *** Quits: beshr (~beshr@78-72-246-187-no2006.tbcn.telia.com) (Changing host)
[15:55:24] *** Joins: beshr (~beshr@user/beshr)
[15:58:23] *** Quits: aeverr (~deodex@ai126162145141.56.access-internet.ne.jp) (Ping timeout: 255 seconds)
[16:00:33] *** Quits: beshr (~beshr@user/beshr) (Read error: Connection reset by peer)
[16:22:55] *** Quits: max22- (~maxime@2a01cb08833598008598112a5a452377.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[16:33:17] *** Joins: beshr (~beshr@78-72-246-187-no2006.tbcn.telia.com)
[16:33:17] *** Quits: beshr (~beshr@78-72-246-187-no2006.tbcn.telia.com) (Changing host)
[16:33:17] *** Joins: beshr (~beshr@user/beshr)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:23] <arkanoid> isn't gcsafe enforced just like noSideEffect? https://wandbox.org/permlink/9BD4kLUk32dwQWNu
[16:36:38] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:38:46] <FromDiscord> <ynfle (ynfle)> What's the issue?
[16:39:00] <FromDiscord> <ynfle (ynfle)> It's only not gcsafe if it would modify a global variable
[16:39:06] <FromDiscord> <ynfle (ynfle)> This is just passed by pointer
[16:39:08] <FromDiscord> <hugogranstrom> arkanoid: if you accessed foo directly in add4 it complains
[16:42:52] <arkanoid> you're right, but it's not a compile error, but a warning https://wandbox.org/permlink/2NqAqCBLSzp0xC4j
[16:43:26] <FromDiscord> <haxscramper> I think you can turn warnings to errors
[16:43:29] <arkanoid> I can enforce warnings as errors, I know, but I was expecting a compiler error just like noSideEffect
[16:43:57] <arkanoid> no problem anyway. What's important is that safety belts are working correctly
[16:47:42] *** Quits: TakinOver (~TakinOver@47.150.206.35) (Ping timeout: 255 seconds)
[16:48:43] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f)
[17:08:46] *** Joins: TakinOver (~TakinOver@47.150.206.35)
[17:36:20] *** Joins: arkurious (~arkurious@user/arkurious)
[17:46:54] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[18:01:41] <arkanoid> if I concat strings and values manually with & like in "value(" & $self.value & ")" I successfully compile with {.noSideEffects, raises: [].}, if I use strformat and &".." operator it complains "can raise unlisted exception: ref ValueError"
[18:02:56] <FromDiscord> <haxscramper> See what strformat generates with `std/macros.expandMacro`
[18:03:12] <FromDiscord> <haxscramper> `expandMacro(< your macro code here >)`
[18:05:08] <arkanoid> got it, it is here: https://github.com/nim-lang/Nim/blob/44e653a9314e1b8503f0fa4a8a34c3380b26fff3/lib/pure/strformat.nim#L552
[18:06:41] <FromDiscord> <haxscramper> In general stdlib does raise
[18:07:08] <FromDiscord> <haxscramper> oh, I know what you can use
[18:08:04] <FromDiscord> <haxscramper> https://wandbox.org/permlink/BcQ2tkpuJBawBmmK
[18:08:11] *** Joins: rockcavera (~rc@192.12.112.203)
[18:08:11] *** Quits: rockcavera (~rc@192.12.112.203) (Changing host)
[18:08:11] *** Joins: rockcavera (~rc@user/rockcavera)
[18:08:12] <FromDiscord> <haxscramper> I used this code to convert exception to result
[18:08:29] <FromDiscord> <haxscramper> wandbox does not have any packages installed, so it does not compile
[18:08:51] <FromDiscord> <haxscramper> But I create temporary procedure and use it in order to get full list of sice effects for a single block of code
[18:10:19] <arkanoid> this is ninja level
[18:10:30] <FromDiscord> <haxscramper> Something like `exceptionalCall(<some expression>) except Handle`
[18:11:13] <arkanoid> I'll implement the same in monad flavour
[18:11:16] <arkanoid> thanks
[18:11:20] <FromDiscord> <haxscramper> But if you are aiming to completely get rid of exceptions you would need something like that
[18:11:52] <FromDiscord> <haxscramper> By the way, do you have your experiments somewhere public/will publish later?
[18:13:21] <arkanoid> no, but is far far from advanced code. Is just some playground around a reimplementation of Option to achieve some common FP pattern (monad chain). It is already present in std/Option with flatMap
[18:15:25] <arkanoid> I just want to learn how to control side effects in nim by applying some FP. So basically I've just to add some monads to catch exceptions and tags I use for functions with sideEffects
[18:16:58] <arkanoid> the nice part (sci-fi from my actual knowledge) would be to use metaprogramming to pick the right monad according to proc tags. For example if a proc as tag "IO" it would be wrapped automatically in a Writer monad to perform the side effect safely in the monad world
[18:17:30] <FromDiscord> <haxscramper> It is possible
[18:17:51] <FromDiscord> <haxscramper> `std/effecttraits` is the go-to module for that
[18:18:08] <FromDiscord> <haxscramper> And you can define your own effects as well
[18:18:09] <arkanoid> it's the main driver that is taking me studying FP side-by-side nim experiments
[18:21:12] <arkanoid> I bet there's already a nim programmer out there that has already implemented this in a rainy afternoon, but let's surf the flow mood
[18:22:06] <arkanoid> btw, I'm trying to use "expandMacros:" block. It compiles but it doesn't print anything
[18:23:22] <arkanoid> I'm using like this: "expandMacros:\n echo some(5).flatMap(add1).flatMap(isEven).toString" where toString is func "if self.isSome: &"some({self.value})" else: &"none({$T})"" that should trigger expandMacros
[18:23:58] <arkanoid> I've tried moving the expandMacros inside the toString func but I get zero addictional output at compile time
[18:34:11] <FromDiscord> <dom96> PMunch: you around? playground is down
[18:35:30] <FromDiscord> <haxscramper> `import std/[macros, strformat]; expandMacros(echo &"{1 + 2}")`
[18:35:54] <FromDiscord> <haxscramper> sent a code paste, see https://paste.rs/xeC
[18:36:38] <FromDiscord> <haxscramper> `formatValue` can be made into `static[string]` btw
[18:37:07] <FromDiscord> <haxscramper> At least in most sane use cases you don't need runtime format specifier
[18:37:24] <FromDiscord> <haxscramper> Or it can be an overload
[18:37:33] <FromDiscord> <haxscramper> Would check format specifier at compile-time, which is IMO better than runtime
[18:37:42] <FromDiscord> <haxscramper> And no `ValueError` exception
[18:45:22] *** Joins: max22- (~maxime@2a01cb0883359800d17eb309a6e03d03.ipv6.abo.wanadoo.fr)
[18:46:34] *** Joins: aeverr (~deodex@ai126162145141.56.access-internet.ne.jp)
[19:01:33] <FromDiscord> <theangryepicbanana> wait so does nobody know what the operator precedence is of the deref operator?
[19:02:40] <FromDiscord> <Rika> deref operator? []?
[19:02:54] <FromDiscord> <theangryepicbanana> yes
[19:03:51] <FromDiscord> <Rika> its not an operator perse
[19:04:11] <FromDiscord> <theangryepicbanana> wait, is it literally just an empty subscript?
[19:04:49] <FromDiscord> <Rika> i dont see how there can be a precedence to []
[19:04:54] <FromDiscord> <theangryepicbanana> well like
[19:05:00] <FromDiscord> <theangryepicbanana> `@a[]`
[19:05:04] <FromDiscord> <theangryepicbanana> how is that grouped
[19:15:24] <FromDiscord> <theangryepicbanana> ?
[19:18:26] *** Quits: fn (~NimBot@ns501209.ip-142-4-210.net) (Remote host closed the connection)
[19:18:39] *** Joins: fn (~NimBot@ns501209.ip-142-4-210.net)
[19:28:58] <arkanoid> haxscramper, could you please rephrase "`formatValue` can be made into `static[string]` btw" for me?
[19:29:50] <fn> <06Prestige99> @theangryepicbanana in that case `@a[]` I think it would deref a, then try to convert to a sequence with @
[19:30:34] <FromDiscord> <haxscramper> This procedure could've accepted `static[string]` as a format specifier, and performed parsing at compile time
[19:30:53] <FromDiscord> <theangryepicbanana> In reply to @fn "<Prestige> <@356108561232953344> in that": yeah but there's still no docs about it lol
[19:31:00] <FromDiscord> <haxscramper> This is not something you can change, I just said it could be fixed in the strformat
[19:31:33] <FromDiscord> <haxscramper> You can try to implement and overload for this one, probably and in that case strformat won't raise exception for invalid format values
[19:32:46] <fn> <06Prestige99> I see some stuff in https://nim-lang.org/docs/manual.html#syntax-precedence about it
[19:34:35] <FromDiscord> <theangryepicbanana> yeah but it doesn't mention the subscript operator
[19:35:16] <fn> <06Prestige99> subscript operator?
[19:35:25] <FromDiscord> <theangryepicbanana> []
[19:37:01] <fn> <06Prestige99> It's not super clear but I also see https://nim-lang.org/docs/manual.html#lexical-analysis-other-tokens
[19:37:11] <fn> <06Prestige99> maybe a good place to improve the docs
[19:37:17] <FromDiscord> <Rika> yes
[19:38:02] <FromDiscord> <Rika> also actually huh, nim says there are no postfix operators but is [] not a postfix op?
[19:38:16] <FromDiscord> <@bracketmaster-5a708063d73408ce4> how many hours do you think araq has put into developing nim so far?
[19:38:37] <fn> <06Prestige99> at least 5
[19:38:53] <fn> <06Prestige99> @Rika that's a good point
[19:39:00] <fn> <06Prestige99> probably a special exception?
[19:39:06] <FromDiscord> <Rika> {}
[19:39:14] <FromDiscord> <Rika> is also a possible "operator"
[19:39:36] <fn> <06Prestige99> 🤔
[19:40:06] <FromDiscord> <@bracketmaster-5a708063d73408ce4> I mean, `.` is also an operator...
[19:41:34] <FromDiscord> <Rika> that's a binary operator
[19:42:08] <FromDiscord> <no name fits> I'm not sure if this is the right place to ask, but is there a way to practice getting better at prototyping and doing it faster? I think my main problem is scoping and my definition of done, but I have no idea how to fix it
[19:42:47] <FromDiscord> <Rika> wdym
[19:43:18] <FromDiscord> <Rika> better at prototyping? idk, i just write down the general idea of the base of what i'm making
[19:43:24] <FromDiscord> <Rika> on like a whiteboard or whatever
[19:43:30] <FromDiscord> <Rika> then i code those components up
[19:45:48] *** Quits: fredrikhr (~fredrikhr@89-162-57-126.fiber.signal.no) (Quit: Disconnecting)
[19:46:04] <FromDiscord> <no name fits> Yeah but I struggle with scoping correctly when it's personal projects
[19:46:40] <fn> <06Prestige99> just have to decide if X feature is actually required, and remove it
[20:01:00] <FromDiscord> <haxscramper> I just dump all design plans in the markdown/org-mode. Sort of personal RFC where I also go over some implementation details
[20:01:26] <FromDiscord> <haxscramper> Rubber duck debugging, except I feel stupid actually talking aloud, so write things down
[20:01:57] <FromDiscord> <haxscramper> And paste tons of links there as well, then it becomes Todo list that I track things in
[20:25:50] <FromDiscord> <enthus1ast> Also a kanban  (kanboard?) can help.↵Also set yourself a deadline.↵(@no name fits)
[20:27:32] <FromDiscord> <no name fits> Yeah I know deadlines for myself help, but I guess it's hard to cut corners on personal projects. I guess it's a skill. Less hard at work because I have a clearer idea of the end product, so I know what can be cut.
[20:28:37] <FromDiscord> <no name fits> Maybe I need to get better at having a clearer end product in mind for personal stuff
[20:35:52] *** Joins: pro (~pro@user/pro)
[20:39:38] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:55:17] <FromDiscord> <ynfle (ynfle)> Is there an equivalent of `-d:` & `when defined(...):` in C?
[20:56:06] <FromDiscord> <haxscramper> `#ifdef`
[20:56:25] <FromDiscord> <haxscramper> well, there is no direct equivalent, but `#ifdef DEBUG` is what people use
[20:58:42] <FromDiscord> <ynfle (ynfle)> How do i define debug? just -g for gcc etc?
[20:59:10] <FromDiscord> <leorize> `-DDEBUG`
[21:00:13] <FromDiscord> <ynfle (ynfle)> thx
[21:04:12] *** Quits: TakinOver (~TakinOver@47.150.206.35) (Ping timeout: 252 seconds)
[21:19:33] <FromDiscord> <TurtleP> @ElegantBeef remember that issue with the `echo` I was having yesterday? Well turns out I was returning an object in a method that is called from `cligen`'s `dispatchMulti`.. 🤦‍♂️
[21:22:23] *** Joins: TakinOver (~TakinOver@47.150.206.35)
[21:30:59] <FromDiscord> <Schelz> is there a way to create a function that return a variable that i can use later in python
[21:31:00] <FromDiscord> <Schelz> ?
[21:31:43] <FromDiscord> <Rika> python? this is a nim server
[21:31:51] <FromDiscord> <Schelz> so i need to use nim
[21:31:55] <FromDiscord> <Rika> huh?
[21:32:02] <FromDiscord> <Schelz> and after i compile it in python
[21:32:10] <FromDiscord> <Schelz> but thats not the point
[21:32:38] <FromDiscord> <Schelz> the point is how to create a function that return a variable as an argument
[21:33:12] <FromDiscord> <Schelz> or if nim can read from a link source code some values
[21:35:18] <FromDiscord> <Schelz> In reply to @Rika "python? this is a": this was the best tip ever thx for your info i didnt know that :)
[21:35:42] <FromDiscord> <Rika> i do not understand what you are even saying
[21:36:15] <FromDiscord> <Schelz> i know for some peoples programming is very hard to understand
[21:37:19] <FromDiscord> <Rika> i will not help you for you are rude, wait for someone else
[21:39:00] <FromDiscord> <Schelz> nvm i found it on google :feelsOk:
[22:12:02] <FromDiscord> <jfmonty2> How do you compare BackwardsIndexes? `^1 == ^1` produces a type mismatch.
[22:12:13] <FromDiscord> <jfmonty2> (edit) "mismatch." => "mismatch, apparently `==` is not defined for that type."
[22:12:27] <FromDiscord> <ynfle (ynfle)> Why do you need to compare them?
[22:12:39] <FromDiscord> <haxscramper> `index1.int == index2.int`
[22:12:41] <FromDiscord> <haxscramper> Or define `==` overload for them
[22:12:50] <FromDiscord> <jfmonty2> special-casing a specific backwards index in a container that I'm working on
