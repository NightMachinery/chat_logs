[00:00:35] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[00:03:04] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[00:15:33] *** Joins: y04nn (~y04nn@91.193.4.154)
[00:31:26] <wallbroken> is there a way to write log on activity?
[00:31:29] <wallbroken> a basic way
[00:31:39] <wallbroken> i just need to have a file for each user
[00:31:44] <wallbroken> a txt file
[00:32:02] <wallbroken> and then print on it what i need around the code
[00:41:26] *** Quits: withered_wolf (~withered_@111.sub-174-192-82.myvzw.com) (Remote host closed the connection)
[00:45:25] <b-rex> wallbroken: https://github.com/soynatan/django-easy-audit
[00:45:34] *** Quits: y04nn (~y04nn@91.193.4.154) (Remote host closed the connection)
[00:46:41] *** Joins: serghei (~egrep@user/serghei)
[00:50:46] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[00:51:03] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[00:57:54] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[01:02:04] *** Joins: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75)
[01:24:23] *** Joins: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl)
[01:26:26] *** audio is now known as audiocat
[01:28:53] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Ping timeout: 252 seconds)
[02:11:23] *** Quits: NeuroWinter (~NeuroWint@107.172.219.233) (Quit: ZNC 1.8.2 - https://znc.in)
[02:12:06] *** Joins: NeuroWinter (~NeuroWint@107.172.219.233)
[02:22:14] *** Parts: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) ()
[02:26:30] *** Quits: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net) (Quit: See you on the flip side.)
[02:29:02] *** Quits: Steve-Dusty (~Steve-Dus@user/steve-dusty) (Quit: Ping timeout (120 seconds))
[02:33:49] *** Joins: Steve-Dusty (~Steve-Dus@user/steve-dusty)
[02:33:54] <Steve-Dusty> https://dpaste.org/G997
[02:34:15] <Steve-Dusty> I have a problem. When I send my deleteclass form POST request it doesn't delete the one that I nwa
[02:35:03] <Steve-Dusty> it deletes in order from top to bottom. so if there's a post in the end and i press the corresponding button to it it'll delete the first one. not the one corresponding to the button
[02:35:13] <Steve-Dusty> i made sure to do class.pk but it doesn't delete the one that I want
[02:35:17] <Steve-Dusty> i don't know what's wrong
[03:04:28] <FunkyBob> what do you mean "in order from top to bottom"?
[03:04:54] *** Joins: Linux77 (~kvirc@187-126-71-30.user3p.veloxzone.com.br)
[03:04:58] <FunkyBob> the template you show is for deleting a single class
[03:06:01] <Linux77> hello cool frinds, i have some doubts about integration of django and nginx, i try read a lot of socs on web about it but no success in setup it on debian, if any can herlp, grateful!
[03:07:07] <FunkyBob> Steve-Dusty: going to need fewer pronouns from ya, mate... be a little more specific :)
[03:07:42] <FunkyBob> Linux77: what are you using to run the django portion of it?  that will influence how you configure nginx
[03:10:31] <Linux77> FunkyBob: i am trying port some shell application with i made in python to web interface, i am trying publish two apps using python classes and i don't known how i can publish django apps ins same nginx server, i am some confused abou proxy ways and etc.
[03:11:42] <Linux77> FunkyBob: with perl catalyst i use fpm and cgui perl resources to publish my catalyst apps, i am tryindo do something like it for python using django
[03:13:19] <FunkyBob> ok, for django you can use, for instance, gunicorn, and http-proxy to it
[03:13:25] <wallbroken> 10:01:26 PM - wallbroken: is there a way to write log on activity?
[03:13:25] <wallbroken> 10:01:28 PM - wallbroken: a basic way
[03:13:25] <wallbroken> 10:01:39 PM - wallbroken: i just need to have a file for each user
[03:13:25] <wallbroken> 10:01:44 PM - wallbroken: a txt file
[03:13:25] <wallbroken> 10:02:02 PM - wallbroken: and then print on it what i need around the code
[03:13:25] <FunkyBob> or uwsgi, and wsgi-proxy to it
[03:13:31] <FunkyBob> wallbroken: don't paste in channel
[03:13:44] <wallbroken> i'm pasting myself
[03:13:48] <FunkyBob> yes
[03:13:49] <FunkyBob> don't
[03:13:59] <wallbroken> why not?
[03:14:05] <FunkyBob> because it's obnoxious
[03:14:17] <wallbroken> and how to repeat what i already said?
[03:14:27] <FunkyBob> ask again.
[03:14:36] <FunkyBob> have you looked at using the standard logging machinery?
[03:15:29] <Linux77> FunkyBob: with uwsgi i can publish on devel environment with success, but when i try put these under nginx environment, not work, i try follow some articles on web but don't solve my troubles, thanks a lot for atention.
[03:15:29] <wallbroken> no
[03:15:39] <wallbroken> but i want something simple and basic
[03:16:13] <FunkyBob> Linux77: https://blog.tinbrain.net/tutorials/simple-django-deploy.html
[03:16:54] <GinFuyou> Linux77, if you have uwsgi running, nginx part can be minimal
[03:16:55] <Linux77> FunkyBob: very thabks, i made a deep lok o it! gratedul all!
[03:20:06] *** Quits: serghei (~egrep@user/serghei) (Ping timeout: 252 seconds)
[03:24:20] <wallbroken> FunkyBob: where i can find "standard logging machinery" ?
[03:24:36] <FunkyBob> https://docs.python.org/3/library/logging.html
[03:24:47] <FunkyBob> https://docs.djangoproject.com/en/3.2/topics/logging/
[03:26:21] <wallbroken> do you think is good for my purpose?
[03:26:32] <wallbroken> my goal is to track user's actions
[03:26:38] <b-rex> wallbroken:  https://github.com/soynatan/django-easy-audit
[03:26:43] *** Joins: dang`r`us (~eismann@pg.afoo.at)
[03:26:53] <wallbroken> for example "user john at time X ordered shoes with ID: 10"
[03:27:04] <wallbroken> b-rex: it's third party stuff
[03:27:45] <FunkyBob> wallbroken: ... you woul get that effectively Free if you fixed your DB schema like we described
[03:28:07] <FunkyBob> since each Order would have all of those details
[03:29:13] <wallbroken> oh i know but to make that, i should make the project from the beginning
[03:29:21] <FunkyBob> yes
[03:29:28] <FunkyBob> that's why what you wrote was only a proof-oc-concept
[03:29:51] <b-rex> wallbroken: that's why i linked you to that
[03:33:22] <FunkyBob> wallbroken: it's a simple fact of development sometimes you head down the wrong path... you're only making your life harder and harder piling on this mistake path
[03:35:07] <wallbroken> FunkyBob: for my point of view is months of painful work
[03:35:16] <wallbroken> with many nights asleep
[03:35:29] <FunkyBob> yes, well, you seemed to enjoy making it far more painful than it needed be
[03:35:55] <FunkyBob> by not reading anything yourself, by lying about your goals and requirements, by ignoring the advice you were given
[03:37:40] <FunkyBob> again... the fixed schema will make almost everything you want to do FAR FAR SIMPLER
[03:38:51] <FunkyBob> mostly because it more accurately models what you need to do
[03:42:22] *** Joins: serghei (~egrep@user/serghei)
[03:46:18] *** Quits: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[03:46:44] *** Quits: serghei (~egrep@user/serghei) (Ping timeout: 256 seconds)
[04:02:45] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[04:06:42] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 240 seconds)
[04:20:46] *** Joins: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net)
[04:29:56] <PaulWay[w]> Do not rely on logging to fix your question of "who ordered what when".
[04:30:22] <PaulWay[w]> The logs cannot be read within Django, for a start.
[04:33:45] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[04:38:13] <Steve-Dusty> FunkyBob I mean exactly what i mean
[04:38:31] <Steve-Dusty> when you "for" over a bunch of classes you display it
[04:38:37] <Steve-Dusty> I literally mean it deletes the top class
[04:38:51] <Steve-Dusty> so it shows 1, 2, 3, 4, 5 diagnally
[04:38:56] <Steve-Dusty> I press delete button on 5
[04:38:58] <Steve-Dusty> it deletes 1
[04:39:05] <Steve-Dusty> so there's 2, 3, 4, 5 left
[04:39:13] <Steve-Dusty> and when I press 5 or 4 or 3 it'll delete 2
[04:39:17] <Steve-Dusty> so there's 3, 4, 5 left
[04:39:27] <Steve-Dusty> that's literally what I mean. From top to bottom
[04:46:54] <FunkyBob> wait... whichi 'it' shows this diagonal list?
[04:47:16] <FunkyBob> you paste shows the model, the delete view, the delete view template...
[04:49:45] <FunkyBob> Steve-Dusty: your delete view takes a pk, and operates on only that Class instance
[04:49:52] <FunkyBob> not sure why you believe it has a list of objects to work on
[04:50:00] <FunkyBob> or even why that template would render any to delete
[04:51:10] *** Quits: explore (uid233125@id-233125.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[04:52:03] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:57:14] <FunkyBob> Steve-Dusty: https://docs.djangoproject.com/en/3.2/ref/class-based-views/generic-editing/#deleteview
[05:02:09] <Steve-Dusty> https://imgur.com/a/WMYuvzO
[05:02:11] <Steve-Dusty> that's what i mean
[05:02:20] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Read error: Connection reset by peer)
[05:02:21] *** Quits: syphar (~syphar@2001:470:69fc:105::2ad6) (Write error: Connection reset by peer)
[05:02:22] *** Quits: allegary (~allegary@apache/committer/gjm) (Read error: Connection reset by peer)
[05:02:22] *** Quits: mambang[m] (~mambang@user/mambang) (Read error: Connection reset by peer)
[05:02:22] *** Quits: kenbolton (~kenbolton@2001:470:69fc:105::2d24) (Write error: Connection reset by peer)
[05:02:22] *** Quits: bmbouter[m] (~bmbouter@2001:470:69fc:105::162f) (Read error: Connection reset by peer)
[05:02:23] *** Quits: theorangeone (~theorange@2001:470:69fc:105::4eb8) (Read error: Connection reset by peer)
[05:02:23] *** Quits: mattcen[mx] (~mattcen@2001:470:69fc:105::5d1) (Write error: Connection reset by peer)
[05:02:24] *** Quits: code1 (~code1@2001:470:69fc:105::c807) (Read error: Connection reset by peer)
[05:02:53] <FunkyBob> Steve-Dusty: ok, but which view is generating that page?
[05:03:11] <Steve-Dusty> ClassListView
[05:03:25] *** Joins: mattcen[mx] (~mattcen@2001:470:69fc:105::5d1)
[05:06:13] <FunkyBob> ok, but you didn't include that or its template in the paste
[05:06:14] *** Joins: theorangeone (~theorange@2001:470:69fc:105::4eb8)
[05:06:14] *** Joins: kenbolton (~kenbolton@2001:470:69fc:105::2d24)
[05:06:14] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[05:06:29] *** Joins: syphar (~syphar@2001:470:69fc:105::2ad6)
[05:06:29] *** Joins: mambang[m] (~mambang@user/mambang)
[05:06:29] *** Joins: bmbouter[m] (~bmbouter@2001:470:69fc:105::162f)
[05:06:29] *** Joins: allegary (~allegary@apache/committer/gjm)
[05:06:43] *** Joins: code1 (~code1@2001:470:69fc:105::c807)
[05:06:56] <Steve-Dusty> https://dpaste.org/eNZV
[05:07:00] <Steve-Dusty> here's all of it
[05:07:25] <FunkyBob> template
[05:08:02] <Steve-Dusty> i included my dashboard.html...
[05:08:20] <FunkyBob> ah, you didn't label it,.... you included it in a paste with the delete view...
[05:08:24] <FunkyBob> so I assumed it was for that
[05:08:56] <Steve-Dusty> classdeleteview have the same view as classlistview
[05:08:58] <Steve-Dusty> template*
[05:09:07] <FunkyBob> well, that can't work
[05:09:11] <FunkyBob> because as I said
[05:09:13] <FunkyBob> and as the docs  show
[05:09:20] <FunkyBob> delet view works only on a single record
[05:10:14] <Steve-Dusty> so django is bad with modal :(
[05:10:18] <FunkyBob> no
[05:10:25] <FunkyBob> this has nothing to do with the modal
[05:10:50] <Steve-Dusty> the only reason I included same template as classlistview and classdeleteview is because of modal
[05:10:56] <Steve-Dusty> modal needs to be placed inside dashboard.html
[05:11:09] <FunkyBob> sure, but what has that to do with the delete view?
[05:11:19] <FunkyBob> you're not submitting anything until the modal is approved
[05:11:20] <Steve-Dusty> because my delete button is in dashboard.html
[05:11:27] <FunkyBob> so you're never actually using the template in the delete view
[05:11:30] <FunkyBob> because you only ever POST to it
[05:12:15] <Steve-Dusty> idk what to do now. should I create a new html page for modal?
[05:12:22] <FunkyBob> no
[05:12:34] <FunkyBob> you seem confused about what is doing what here
[05:12:41] <FunkyBob> the modal is displayed entirely by the front end
[05:12:46] <FunkyBob> django has nothing to do with that
[05:12:49] <Steve-Dusty> yes
[05:12:59] <Steve-Dusty> so what should I put in my template_name
[05:13:07] <FunkyBob> it doesn't matter
[05:13:23] <FunkyBob> also, you don't have to specify a template name.. django will generate a sensible default
[05:14:13] <FunkyBob> the fact you're skipping the GET to that view means the template won't even be used
[05:14:45] <FunkyBob> now, what basic debugging steps have you taken?  have oyu checked in your browser inspector which URL your modal ends up posting  to?
[05:15:03] <Steve-Dusty> yes
[05:15:06] <Steve-Dusty> it says in the terminal
[05:15:07] <FunkyBob> and?
[05:15:23] <FunkyBob> oh, I know the problem
[05:15:26] <Steve-Dusty> it just takes the top one so
[05:15:28] <FunkyBob> you gave the same ID to every modal
[05:15:38] <FunkyBob> https://dpaste.org/G997#L50
[05:15:45] <Steve-Dusty> it goes from /22 to /23 to /24
[05:15:46] <FunkyBob> so Bootstrap is showing the first one
[05:16:11] <FunkyBob> change that to, for instance, id="confirmDeleteModal-{{ class.pk }}"
[05:16:27] <Steve-Dusty> why does bootstrap have so many like
[05:16:28] <FunkyBob> you're generating the same IDs each time through the loop
[05:16:30] <Steve-Dusty> id names
[05:16:41] <FunkyBob> it needs to know how to find the element
[05:16:46] <Steve-Dusty> django takes from frontend id?
[05:16:46] <FunkyBob> unique IDs are good for t hat
[05:16:53] <FunkyBob> no idea why you put an ID on the H5 though
[05:17:02] <FunkyBob> django doesn't ever see that
[05:17:09] <FunkyBob> Steve-Dusty: but look at the rendered page...
[05:17:17] <FunkyBob> bootstrap will find the FIRST modal with the specified ID
[05:17:17] <Steve-Dusty> i copied from bootstrap example
[05:17:42] <FunkyBob> stop copying without understanding
[05:17:57] <FunkyBob> that's what got wallbroken into so much trouble
[05:18:59] <Steve-Dusty> data-bs-toggle
[05:19:06] <FunkyBob> Steve-Dusty: so, in your rendered page, you've got a block for each record
[05:19:18] <FunkyBob> and you tell bootstrap "when someone presses this button, show the modal with ID ...."
[05:19:22] <FunkyBob> but you always put the same ID
[05:19:40] <Steve-Dusty> okay.... i'll remove unnecessary IDs
[05:19:42] <FunkyBob> so bootstrap rightly assumes the ID is unique (it MUST be to be valid HTML)
[05:19:44] <FunkyBob> no
[05:19:47] <FunkyBob> don't remove them
[05:19:49] <FunkyBob> MAKE THEM RIGHT
[05:20:04] <Steve-Dusty> even confirmDeleteModalLabel?
[05:20:20] <FunkyBob> well, that's between you and bootstrap
[05:20:23] <Steve-Dusty> on h1
[05:20:55] <FunkyBob> you mean h5 right?
[05:21:13] <FunkyBob> that one can probably go... but dclean that up later
[05:21:44] <FunkyBob> for now, make data-bs-target="#confirmDeleteModal" and id="confirmDeleteModal" include the Class pk
[05:21:45] <Steve-Dusty> yes
[05:22:45] *** Quits: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte) (Ping timeout: 268 seconds)
[05:22:46] <Steve-Dusty> i heard data- are just made up IDs
[05:23:30] <FunkyBob> data-* is specifically defined in html to let you validly add any extra attributes you want
[05:23:49] <FunkyBob> calling them IDs is misleading
[05:24:10] <Steve-Dusty> oops.. thx it's working now
[05:24:25] <FunkyBob> so when I was asking about which URL it posted to
[05:24:30] <FunkyBob> I wanted to know which pk it put in there
[05:24:35] <FunkyBob> but... we found the error anyway
[05:52:12] <orzel> Hello. The more i test the more i'm lost when trying to filter manytomany. (using https://docs.djangoproject.com/en/3.2/topics/db/models/#many-to-many-relationships) : how do i filter Pizza() to find those with exactly two given Topping ? (ok, that doesn't make sense for pizza, but it does in lot of other topics)
[05:52:51] <orzel> I tried : filter(toppings=[a,b]) filter(toppings__in=[a,b]) and filter(toppings=a).filter(toppings=b)
[05:52:55] <orzel> None works..
[05:53:50] <orzel> the first one seems the most obvious. Use to execute, but now not even, it gives: TypeError: Field 'id' expected a number but got [42579, 42580]
[05:53:59] <orzel> "It used to execute.."
[05:54:27] *** Quits: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net) (Quit: Bye.)
[05:58:25] <hemebond> orzel: Using = means it wants a single value, can't use a list there.
[05:58:51] <hemebond> The last (double filter()) should give you a list of pizzas that have both toppings I think.
[06:00:11] <orzel> gives me nothing
[06:00:25] <orzel> At best i expect it to give me those with at least those two toppings, no ?
[06:04:01] <hemebond> Is your code identical to the tutorial? And the data?
[06:04:11] <Harlin> zomg
[06:04:20] <Harlin> I need to do the Django tu-tutorial
[06:05:44] <FunkyBob> orzel: filter(toppings__in=[a,b]).annotate(topping_count=Count('toppings')).filter(topping_count=2)
[06:06:08] <FunkyBob> assuming a and b are topping model instances
[06:08:26] <GinFuyou> wouldn't it give all pizzas that have exactly 2 topping with at least *one* of them in [a, b] ?
[06:09:42] <FunkyBob> only of matching toppings
[06:09:45] <FunkyBob> i think
[06:10:14] <FunkyBob> otherwise I guess you'd need a sub-query to count them
[06:10:17] <hemebond> I thought the pizza thing was in the tutorial. orzel can you share your code?
[06:11:00] <GinFuyou> doesn't filter(topping=a, topping=b) work for m2m?
[06:11:52] <FunkyBob> python won't let you that way
[06:11:58] <FunkyBob> but perhaps two separate filter calls
[06:12:34] <GinFuyou> ah, right, it's still just kwargs
[06:12:47] <orzel> GinFuyou: Pizza doesn't know about 'topping' (without s)
[06:12:50] <GinFuyou> But I mean, does this apply https://docs.djangoproject.com/en/3.2/topics/db/queries/#spanning-multi-valued-relationships
[06:13:07] <GinFuyou> orzel, or does it?
[06:13:08] <orzel> FunkyBob: your code at least find out one, but not all
[06:13:26] *** Joins: andygmb (~andy@31.169.102.187)
[06:13:37] <orzel> GinFuyou: try it, gives django.core.exceptions.FieldError: Cannot resolve keyword ..
[06:14:08] <GinFuyou> orzel, are you sure? That code at worst case should give more results than fewer
[06:14:37] <orzel> GinFuyou: i'm pretty sure a basic ManyToMany wont create an accessor "singular"
[06:14:55] <GinFuyou> Yeah, it's probably for reverse FK
[06:15:39] <GinFuyou> But doesn't matter anyway, I was referring FunkyBob's code later
[06:15:41] <orzel> hemebond: my code is very similar, but not pizza/topping. There's not Meta, no 'through'. It's quite a common m2m. And i've had this problem on several projects
[06:15:49] <andygmb> is getting all objects from db and filtering that queryset with field__in=[large list of ids] better than filtering one by-one?
[06:16:07] <hemebond> orzel: Well, without your code we won't be able to spot any issues or quickly get a test up and running.
[06:16:21] <hemebond> I'm setting up a test project now but who knows if it matches what you're doing.
[06:16:22] <GinFuyou> andygmb, probably yes
[06:17:35] <andygmb> GinFuyou: being that the latter creates many calls to the DB, right? Sanity checking myself here :)
[06:17:42] <FunkyBob> there's always a through :)
[06:17:46] <GinFuyou> well, going back, what about .filter(Q(toppings=a) & Q(toppings=b)) ? Or it has same issue internally?
[06:18:20] <GinFuyou> andygmb, you didn't really explained what you meant by "one-by-one"
[06:18:29] <FunkyBob> how long is the list of possible toppings?
[06:18:42] <orzel> FunkyBob: i mean i didn't specify one, nitpicker ! :)
[06:18:44] <FunkyBob> is it always 2? or "exactly 2 from set X"?
[06:19:03] <FunkyBob> orzel: remember... you're not the only audience here :)
[06:19:14] <orzel> FunkyBob:  in my case ? Can be 2 or slightly more, no more than 10, 99% of the time it's '2'
[06:19:53] <FunkyBob> orzel: ok, but the size of that list is or is not tied to how many must match?
[06:20:01] <orzel> ah, nope
[06:20:38] <FunkyBob> so "must match exactly M items from list of N items"
[06:20:49] <FunkyBob> whhere M <= N
[06:21:41] <andygmb> GinFuyou: model.objects.all().filter(field_id__in=[foo_id, bar_id ...]) as opposed to model.objects.filter(field_id=foo_id) for each ID
[06:21:46] <orzel> yes (N quite big by the way, ~10k)
[06:21:53] <FunkyBob> andygmb: the .all() is redundant there
[06:22:03] <andygmb> oops
[06:22:18] <hemebond> Using the chained filter() works for me orzel
[06:22:24] <FunkyBob> orzel: you just sait it was no more than 10
[06:22:47] <GinFuyou> andygmb, filter() doesn't cause db hit itself. But yeah if you filter each item and get() it, it's a separate hit for each
[06:23:22] <andygmb> cheers for the clarification :)
[06:23:55] <GinFuyou> you could also make a big chain of OR's, but iirc __in should be better
[06:25:57] <FunkyBob> iirc multiple filter() calls will also mean multiple joins to the same table
[06:29:04] <orzel> FunkyBob: er.. no, M is small (~2), N is big
[06:29:48] <FunkyBob> N is the list [a,b]  in your example
[06:30:39] <orzel> FunkyBob: your first proposal work on my very very small pizzeria exemple. Trying to understand what makes it fail on my real world exemple
[06:30:49] <orzel> hemebond: same for Pizza.objects.filter(toppings=mushroom).filter(toppings=egg)
[06:31:04] <hemebond> orzel: What do you mean "same for"?
[06:31:13] <orzel> "it works"
[06:31:24] <hemebond> Yes, that's what I did.
[06:31:29] <FunkyBob> hemebond: I assume they mean same as my proposed solution, yours works in a trivial test but not real world
[06:31:43] <orzel> hemebond: what i said to FunkyBob: i can reproduce on small ex, but still fail on my real world project
[06:32:00] <hemebond> orzel: Oooh, I just realised you want a pizza with only two toppings and only those two toppings. I missed that part.
[06:32:03] <FunkyBob> orzel: so, how is your 'real world' different to your pizza example?
[06:32:10] <hemebond> ^
[06:32:19] <orzel> FunkyBob: that's the $10k question :-(
[06:32:37] <FunkyBob> hemebond: I understood it to be "given the set of N topings, find all pizzas that have exactly M of them"
[06:33:05] * FunkyBob wonders what the real world models are of
[06:33:28] <hemebond> FunkyBob: orzel said filter(toppings=a).filter(toppings=b) didn
[06:33:32] <FunkyBob> it mayt come that it will help to know how you arrived at the N set
[06:33:37] <FunkyBob> hemebond: yes
[06:33:42] <hemebond> didn't work so I'm not sure what the actual requirement is.
[06:33:52] <hemebond> We need to see code.
[06:33:56] <FunkyBob> that's why I was trying to clarify what the requirement was
[06:34:05] <FunkyBob> it would certainly help to see the real models
[06:34:07] <hemebond> Wasting energy guessing
[06:34:12] <FunkyBob> +1
[06:36:59] <orzel> I got a basic django app, trying to reproduce
[06:37:02] <GinFuyou> hemebond, so what chained filter returns? Just curious
[06:40:19] <hemebond> GinFuyou: Only the pizza that had both of those toppings.
[06:42:07] <GinFuyou> ok, so for same lookup it just works enforcing both requirements
[06:42:45] <hemebond> Yip
[06:43:36] <GinFuyou> so it technically should work with count if we don't allow "doubles" of same topping
[06:44:19] <GinFuyou> doesn't look like an universal solution though
[06:46:10] <NeuroWinter> Hey team just a quick question, say I have 2 models A and B, B has a ForeignKey to A. If I set the on_delete parameter to Cascade, then when I delete any A object where a B object is pointing to it then the B object will be deleted as well right?
[06:46:22] <hemebond> Not sure it can have more than one of the same type.
[06:46:28] <hemebond> GinFuyou: ^
[06:46:34] *** Quits: moldy (~rene@user/moldy) (Ping timeout: 240 seconds)
[06:46:47] <FunkyBob> NeuroWinter: sounds right.
[06:46:59] <GinFuyou> hemebond, normally not I think, but I guess you can allow it
[06:47:01] <NeuroWinter> FunkyBob: Thank you I just wanted to be sure :P
[06:47:26] <hemebond> GinFuyou: A custom through-table would allow it
[06:47:40] <GinFuyou> yeah, exactly
[06:49:12] <FunkyBob> hemebond: but it was explicitly stated there was no such beast, so...
[06:49:36] <hemebond> FunkyBob: Yeah, this is GinFuyou's custom pizzeria now.
[06:49:49] *** Joins: Quacc (~youbuntoe@user/quacc)
[06:49:58] <FunkyBob> yes, just being clear
[06:50:10] * FunkyBob hopes to eat at GinFuyou's pizzeria
[06:50:21] <hemebond> They only have onion and olive toppings.
[06:50:30] <FunkyBob> oh
[06:51:10] <GinFuyou> hahaha, I have to solve a problem how to make double pepperoni
[06:53:31] <Quacc> soo ya guys like javascript frameworks?
[06:54:05] * FunkyBob wonders why Quacc is asking only the guys...
[06:54:33] <hemebond> Quacc: http://vanilla-js.com/ 😛
[06:55:06] <Quacc> soo ya biped creatures like javascript frameworks?
[06:55:49] <Quacc> hemebond: yea i kinda wanted to send that but i diddnt really want to seem unneutral
[06:56:12] <Quacc> oops i wanted to seem unneutral
[06:56:44] <hemebond> All my "frontend" effort is slapping in Twitter Bootstrap
[06:59:18] *** Joins: Steve-Dusty51 (~Steve-Dus@user/steve-dusty)
[06:59:20] <Steve-Dusty51> which nubs here said frameworks ba
[06:59:21] <Steve-Dusty51> bad
[06:59:46] <Steve-Dusty51> hemebond
[06:59:55] <Steve-Dusty51> why didnt you send react.jds instead
[07:00:17] <hemebond> I've used it once. A bit.
[07:00:18] <Steve-Dusty51> Quacc https://reactjs.orgbest js lib
[07:00:53] <Steve-Dusty51> nobody must disrespect king of frameworks
[07:00:53] <Quacc> vanilla-js is such a good framework
[07:01:01] <Quacc> browsers have been loading it since forever
[07:01:03] <Steve-Dusty51> no
[07:01:09] <Steve-Dusty51> react.js best framework
[07:01:24] <Steve-Dusty51> no full stacc devs don't know frontend js frameworks
[07:01:34] <FunkyBob> react is popular
[07:01:36] <FunkyBob> doesn't make it the best
[07:01:58] <Steve-Dusty51> challenge: find a full stak dev that doesnt know a js famework
[07:02:30] <Quacc> brb i have to learn the latest 15 javascript frameworks and their 300 updates
[07:02:48] <Steve-Dusty51> bobbyfunk then what should i learn huh
[07:02:58] <Quacc> vanilla-js
[07:03:08] <FunkyBob> Steve-Dusty51: personally, i'm looking for any excuse to use svelte in anger again
[07:03:22] <FunkyBob> but sure, understanding Js itself will help  you no matter the framework
[07:03:31] <Steve-Dusty51> Quacc see
[07:03:39] <Steve-Dusty51> svelte is a js framework too
[07:03:50] <Steve-Dusty51> why "in anger"
[07:03:59] <Steve-Dusty51> do you dislike js frameworks?
[07:04:07] <FunkyBob> it's just a phrase
[07:04:32] <Steve-Dusty51> k nice
[07:04:34] <FunkyBob> using it in a real project, not just an exploratory toy
[07:04:58] <Steve-Dusty51> why is js harder than python
[07:05:06] <Steve-Dusty51> so many functions
[07:05:07] <Steve-Dusty51> .maps
[07:05:32] <Steve-Dusty51> a lot of async stuff
[07:05:41] <FunkyBob> it's partly a victim of what we call premature standarisation
[07:05:57] <FunkyBob> they have to work hard to maintain backward compatibility for ever
[07:06:28] <FunkyBob> async in JS is, so far as I've seen, mostly syntactic sugar around promises
[07:07:10] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[07:08:43] <Linux77> grateful cool friends, success!
[07:09:29] <FunkyBob> Linux77: huzzah!
[07:09:39] <FunkyBob> success with what, again? :)
[07:10:24] <Steve-Dusty51> linux do you use arch
[07:11:50] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Ping timeout: 272 seconds)
[07:20:47] <Steve-Dusty51> https://www.youtube.com/watch?v=q0JiLxZh8XY
[07:20:49] <Steve-Dusty51> :(
[07:40:20] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75) (Ping timeout: 272 seconds)
[07:42:50] <Linux77> FunkyBob: i use debian on this box, with vm running debian stable under host debian testing, i have two projets working in perl one in php for my work and other two in python some of these projects are under GPL and published on git
[07:43:57] <Linux77> I am very happy because i setup and start coding in catalyst perl mvs laravel php mvc and django, my ideia is port each project to native language used but with mvs for web interfaces.
[07:44:24] <Linux77> realy grateful FunkyBob, your tip help me!
[07:44:56] *** Quits: Steve-Dusty51 (~Steve-Dus@user/steve-dusty) (Quit: Client closed)
[07:57:18] <FunkyBob> cool
[07:57:33] * FunkyBob refrains from commenting on mvc
[08:03:19] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[08:07:58] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 256 seconds)
[08:36:34] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Read error: Connection reset by peer)
[08:37:04] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[08:39:35] *** Joins: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75)
[08:39:54] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Client Quit)
[08:40:42] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[08:48:40] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[08:49:17] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[09:10:56] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:11:31] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[09:19:34] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[09:21:25] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:33:44] *** Joins: mattil (~mattil@helsinki.portalify.com)
[09:36:28] *** Quits: shodan45 (~quassel@107.161.22.155) (*.net *.split)
[09:36:28] *** Quits: daniel-k7 (~daniel-k@192.241.135.211) (*.net *.split)
[09:36:28] *** Quits: deniska (~denis@user/deniska) (*.net *.split)
[09:36:29] *** Quits: hylje (~hylje@ponie.fi) (*.net *.split)
[09:36:29] *** Quits: pjs (~pjs@user/pjs) (*.net *.split)
[09:36:29] *** Quits: saschi (~saschi@user/saschi) (*.net *.split)
[09:36:29] *** Quits: ajb (~ajb@cupid.whatbox.ca) (*.net *.split)
[09:36:29] *** Quits: b-rex (~b@v.dropswitch.net) (*.net *.split)
[09:36:29] *** Quits: wallbroken (wallbroken@user/wallbroken) (*.net *.split)
[09:36:29] *** Quits: jor (~jor@jor.link) (*.net *.split)
[09:36:29] *** Quits: jrabbit (~jack@user/jrabbit) (*.net *.split)
[09:36:30] *** Quits: doismellburning (kg289@django/moderator/doismellburning) (*.net *.split)
[09:36:30] *** Quits: blathijs (~matthijs@tika.stderr.nl) (*.net *.split)
[09:36:34] *** Joins: MaioroiaM (~toor@django/moderator/doismellburning)
[09:36:39] *** Joins: deniska_ (~denis@user/deniska)
[09:36:42] *** Joins: hylje_ (~hylje@ponie.fi)
[09:36:50] *** Joins: daniel-k (~daniel-k@192.241.135.211)
[09:36:50] *** ChanServ sets mode: +v MaioroiaM
[09:37:08] *** Joins: shodan45 (~quassel@107.161.22.155)
[09:38:19] *** Joins: sandeepk (~sandeepk@223.130.30.175)
[09:38:23] *** Joins: b-rex (~b@v.dropswitch.net)
[09:38:25] *** Joins: jrabbit (~jack@user/jrabbit)
[09:38:30] *** Joins: jor (~jor@jor.link)
[09:40:02] *** Joins: wallbroken (wallbroken@user/wallbroken)
[09:46:37] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:47:43] *** Joins: djapo (~archangel@user/djapo)
[09:49:40] *** Quits: Quacc (~youbuntoe@user/quacc) (Quit: WeeChat 3.2)
[09:53:05] *** Quits: Steve-Dusty (~Steve-Dus@user/steve-dusty) (Quit: Client closed)
[10:01:59] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[10:13:49] *** Quits: jjhoo (~jahakala@dsl-trebng21-58c18f-56.dhcp.inet.fi) (Ping timeout: 268 seconds)
[10:14:04] <PaulWay[w]> Well this is going to be amusing.
[10:14:39] <PaulWay[w]> I have to catch a PUT request in DRF to a path with multiple variable parts.
[10:15:32] <PaulWay[w]> I implement a 'plays' view for `maintenance/{plan_id}/playbook/plays` - but now I have to catch a PUT to `maintenance/{plan_id}/playbook/plays/{rule_id}`.
[10:15:38] <PaulWay[w]> I'll let you know how I get on.
[10:18:53] *** deniska_ is now known as deniska
[10:24:32] *** Joins: serghei (~egrep@user/serghei)
[10:28:56] *** Quits: serghei (~egrep@user/serghei) (Ping timeout: 258 seconds)
[10:36:57] *** Quits: djapo (~archangel@user/djapo) (Quit: leaving)
[10:48:58] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75) (Ping timeout: 240 seconds)
[10:49:20] *** Joins: djapo (~archangel@user/djapo)
[10:50:40] *** Joins: Quacc (~youbuntoe@user/quacc)
[10:51:13] *** Quits: Quacc (~youbuntoe@user/quacc) (Client Quit)
[10:52:25] *** Joins: tm007 (uid287041@id-287041.highgate.irccloud.com)
[11:05:51] *** Joins: jjhoo (~jahakala@dsl-trebng21-58c18f-56.dhcp.inet.fi)
[11:06:09] *** Quits: jjhoo (~jahakala@dsl-trebng21-58c18f-56.dhcp.inet.fi) (Client Quit)
[11:06:45] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:06:45] *** ChanServ sets mode: +v EvilDMP
[11:07:26] *** Quits: audiocat (~audio@2603-8081-1800-00ad-df68-b045-38b9-154d.res6.spectrum.com) (Ping timeout: 272 seconds)
[11:07:46] *** Joins: jjhoo (~jahakala@dsl-trebng21-58c18f-56.dhcp.inet.fi)
[11:22:38] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: Textual IRC Client: www.textualapp.com)
[11:25:21] *** Quits: sandeepk (~sandeepk@223.130.30.175) (Ping timeout: 268 seconds)
[11:33:20] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 258 seconds)
[11:40:17] *** Joins: sandeepk (~sandeepk@223.130.30.245)
[11:50:57] *** Joins: audiocat (~audio@2603-8081-1800-00ad-bb52-7b55-5725-a43b.res6.spectrum.com)
[12:01:18] *** Joins: mojtaba (~Guest54@137.74.101.92)
[12:02:36] <mojtaba> Hello, I have created a one-to-one profile model with user. It has an ImageField, and I can verify in the shell that user.profile.image.url has a value; but in the template it is blank.
[12:02:44] <mojtaba> Does anybody know what could be wrong?
[12:05:07] *** Quits: mojtaba (~Guest54@137.74.101.92) (Quit: Client closed)
[12:13:35] *** Quits: audiocat (~audio@2603-8081-1800-00ad-bb52-7b55-5725-a43b.res6.spectrum.com) (Ping timeout: 258 seconds)
[12:16:42] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:51:05] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi)
[12:59:54] *** Joins: bandit_za (~bandit_za@2c0f:ed28:b016:e80::1ed)
[13:19:07] *** Joins: shangxiao (~davids@101.181.108.207)
[13:29:33] *** Joins: dez (uid92154@user/dez)
[13:38:35] *** Joins: audiocat (~audio@2603-8081-1800-00ad-63c9-045d-dd73-f4c7.res6.spectrum.com)
[14:13:18] *** Joins: lorcab (~user@197.251.194.240)
[14:15:04] *** Joins: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[14:15:49] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[14:15:58] *** Joins: knbk_ (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[14:19:39] *** Quits: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 250 seconds)
[14:34:39] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[14:34:40] *** ChanServ sets mode: +v EvilDMP
[14:42:23] *** Joins: kezabelle (~kezabelle@cpc119866-nrwh12-2-0-cust31.4-4.cable.virginm.net)
[14:53:08] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[15:05:25] <serafeim> hello friends. for anybody using django-filters how can i define the order of how the filters will be displayed ?
[15:07:59] *** Joins: moldy (~rene@user/moldy)
[15:13:24] <kezabelle> IIRC filters uses the same underlying Form methodology? Or it used to.
[15:13:45] <kezabelle> So by default it'll be in declared order (ie: x = Field(); y = Field() would come in in x then y order)
[15:14:09] <kezabelle> you can change that by playing with Form.order_fields() or Form.field_order = ...
[15:14:46] <serafeim> kezabelle: interesting... thanks i'll take a look right now
[15:14:48] <kezabelle> I can't recall how easy it is to access the underlying form in the FilterSet (again, assuming that it's still backed by a Form).
[15:15:08] <serafeim> kezabelle: it is backed by a form
[15:15:15] <serafeim> i'll try now to see if i can access the form
[15:16:09] <kezabelle> IIRC it's a property which dynamically creates one, but you can optionally give it a different form class.
[15:16:33] <kezabelle> but the last time I actively had to look at that was in like v0.4 or something so YMMV :)
[15:16:42] <serafeim> i'll try to change it on the __init__ py of the Filter
[15:18:32] <FunkyBob> ooh
[15:18:48] <FunkyBob> the psycopg people are looking to submit patches for psycopg3 into django
[15:19:12] <kezabelle> serafeim: the other option is to modify the .filters on the FilterSet directly, as that's a deepcopy of the declared ones, and is an ordered dict.
[15:19:17] <kezabelle> FunkyBob: yeah I saw. Neat.
[15:19:17] <serafeim> yes it works, adding this to  the ed of the FilterSet.__init__: `self.form.order_fields(['ship_name__icontains', 'ship_type', 'authority__name__icontains', 'niologio__icontains', 'niologio_port__icontains'])`  properly orders the fields (and appends all fields not in that list in the end)
[15:19:22] <serafeim> kezabelle: thanks
[15:19:28] <kezabelle> np
[15:19:29] <serafeim> FunkyBob: there was a discussion on HN yesterday abotu that
[15:19:57] <FunkyBob> serafeim: i've yet to find any reason to read HN
[15:21:28] <serafeim> ha ha ha
[15:21:42] <serafeim> FunkyBob: well i wouldn't know about the psycopg3 if i wasn't reading it
[15:35:33] <serafeim> django allows both fred@example.com and "Fred" <fred@example.com> forms for an email recipient. how can i validate that a random string is legal email recipient ?
[15:37:16] <kezabelle> check for an "@" symbol and move on with life.
[15:37:36] <moldy> serafeim: e-mail addresses are hard to validate. it is often best to just try to send the mail.
[15:37:38] <kezabelle> anything more strict is a fool's errand, given the edge cases. Just try and send an email, is the common wisdom.
[15:37:45] <moldy> checking for the presence of an @ sign doesn't harm, yup :)
[15:38:11] <serafeim> the problem is that i've got many errors with emails like this foo@bar.gr@bar.gr
[15:38:40] <moldy> serafeim: what kind of errors?
[15:38:40] <kezabelle> technically I think the minimum is that x[0] != "@" and x[-1] != '@' and that the minimum valid email is something like ".@." but I could be wrong, so I don't even do that these days :p
[15:39:03] <serafeim> i've got a mail sending api (https://github.com/spapas/mailer_server) and some naive api user tries to add a prefix to an already valid email
[15:39:15] <serafeim> moldy: exceptions that the mail cannot be delivered :)
[15:39:33] <shangxiao> FunkyBob: got a link for that psycopg3 info?
[15:39:35] <moldy> serafeim: you should expect that and handle the errors accordingly
[15:40:02] <moldy> shangxiao: foo@bar.gr@bar.gr is a perfectly valid e-mail address. the only way to find out if you can actually deliver mail to it is to try.
[15:40:14] <serafeim> moldy: these errors are thrown from the smpt server after i have accepted the email for delivery. i want to validate the address and return an error right when the api is called
[15:40:25] <moldy> serafeim: not possible
[15:40:30] <moldy> live with it ;)
[15:40:50] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[15:41:09] <serafeim> well for starters i could change the api to only allow email@email.com addresses (not the funny Name <email@email.com> form) and then not allow more than one @
[15:41:19] <serafeim> so the common errors of foo@foo.gr@foo.gr will go away
[15:41:46] <serafeim> this is the most common error and it fills my failed jobs queue with crap
[15:41:52] <moldy> serafeim: that would be technically wrong, *and* you will probably still get lots of "mailbox doesn't exist" errors
[15:42:02] <kezabelle> well sure, if you control the ingest point you can just be more strict about what you accept, and live with the consequences of that.
[15:42:33] <moldy> the one thing that comes to my mind is that you could do: look up the MX record for bar.gr and then run an smtp VRFY command. but i think many servers don't support that these days...
[15:43:00] <moldy> but honestly, i think what you should really do here is change how you deal with these errors.
[15:43:43] <serafeim> well i am willing to accept some of the errors like nonexistant domains or wrong emails. but i want to forbid bad use of the API (i mean an address of foo@foo.gr@foo.gr is clearly wrong)
[15:43:58] <moldy> debatable :)
[15:44:21] <moldy> but yeah, if you know you have a broken client that cannot be fixed for some reason, sure...
[15:44:53] <moldy> however, if you return an error for that mail, the main problem will still exist until the client gets fixed, right?
[15:45:57] <serafeim> moldy: hmmm yes the mail will still not be delivered. however if the APi returns a 401 bad data instead of a 200 ok the bad client may throw an exception to the user so it may get fixed eventually
[15:46:20] <serafeim> of course if the client just eats the error nothing will change. but i still have hope
[15:47:15] <serafeim> my problem is how to validate both email forms. i can easily validate the foo@bar.gr email using `from django.core.validators import validate_email`... however i don't know what to do with the `"Name" <email@mail.com>` form
[15:49:08] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[15:50:55] <serafeim> what is funny to me is that the `django.core.mail.EmailMessage` does not do any validation for the addresses... it just passes the strings it gets to the smtp server
[15:51:04] *** Joins: kostkon_ (~androirc@ob21aa.static.otenet.gr)
[15:51:36] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[15:52:00] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Read error: Connection reset by peer)
[15:52:15] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[15:52:32] <kezabelle> no it doesn't?
[15:52:58] <kezabelle> it makes use of sanitize_address and the stdlib's Address
[15:53:56] <kezabelle> Validating emails is hard. If it appears like junk is passing through it's either a) probably actually a legitimate address despite your knowledge or b) everyone has punted on it all the way down because it's a nightmare of effort
[15:54:48] <kezabelle> fwiw the stdlib has parseaddr for handling "Name <email>" and "<email>" and "email"
[15:54:56] <kezabelle> how robust is it? Dunno :)
[15:58:15] <serafeim> kezabelle: hey that's what i wanted! `email.utils.parseaddr` saved my day !!! thank you
[15:59:10] <kezabelle> what a saviour I am ;) np :)
[16:00:53] <kezabelle> and now, to find out how many tests I've broken so far today :o)
[16:01:39] <kezabelle> oh. so many. sigh.
[16:02:22] <shangxiao> Break the test, code the test, fix the test... god life is relentless.
[16:02:51] <shangxiao> Brown for main course, white for dessert. Of course I win anyway because I love brown toast.
[16:04:06] <kezabelle> "isinstance() arg 2 must be a type or tuple of types" which version of python is it that'll give me less crap errors? :)
[16:04:15] <kezabelle> grumble grumble.
[16:06:40] *** Joins: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net)
[16:15:45] *** Joins: dez (uid92154@user/dez)
[16:16:49] <serafeim> here's my validation function for anybody that cares: https://dpaste.org/EmMg
[16:21:59] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 258 seconds)
[16:23:33] <shangxiao> serafeim: not a fan of Black? :P
[16:25:32] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:27:00] <kezabelle> r = ...; return x[1] != '' and '@' in r[1] would also work I _think_, if you care :)
[16:28:23] <shangxiao> kezabelle: yeah that's what I was about to post ^_^: https://dpaste.org/CRNo
[16:28:29] <serafeim> kezabelle: yes thank you
[16:28:41] <shangxiao> serafeim: there I applied some cleanup for you ^^ :P
[16:29:13] <shangxiao> woops I should've done != and not "not foo == bar"
[16:29:39] <shangxiao> https://dpaste.org/o3FN
[16:30:01] <shangxiao> I find that slightly easier to read ;)
[16:30:29] <shangxiao> ie don't use mystical single letter vars :P
[16:32:02] <kezabelle> best argument for that is: you will hate interacting with pdb.
[16:32:42] <kezabelle> of course that falls flat on it's face given python as a whole settled on using '*args' ... ugh :p
[16:34:22] <shangxiao> Yeah pargs or pos_args might've been a little more explicit
[16:37:02] <andygmb> will foo = Model.objects.all() -> foo.filter(some_id=bar) hit the db on the foo.filter or will the db be hit on the assignment of foo?
[16:37:06] <moldy> kezabelle: `p p` etc. works in pdb :)
[16:37:33] <kezabelle> who uses p when pp exists? ;)
[16:37:48] <moldy> yeah pp is better for structured values :)
[16:37:58] <moldy> what's really annoying is that list comprehensions break
[16:38:00] <kezabelle> but yeah, now you have to remember to 'p' things. even though just typing them (as long as they don't collide) also gives you the thing
[16:38:10] <kezabelle> moldy: oh gosh yes.
[16:38:55] <GinFuyou> andygmb, filter() doesn't hit DB
[16:39:17] <GinFuyou> what you mean by assignment of foo?
[16:39:56] <GinFuyou> querysets are lazy. It will evaluate when it needs a real value.
[16:40:08] <andygmb> right, so if i'm just filtering foo (if foo is foo = Model.objects.all()), then the only time db is hit is initially when foo is set here?
[16:40:21] <kezabelle> moldy: worst pet peeve is that 'l' marches on.
[16:40:42] *** Joins: mattil (~mattil@d49f4hprpmgknpvrp0k-4.rev.dnainternet.fi)
[16:40:44] *** Quits: mattil (~mattil@d49f4hprpmgknpvrp0k-4.rev.dnainternet.fi) (Remote host closed the connection)
[16:41:13] *** Joins: mattil (~mattil@d49f4hprpmgknpvrp0k-4.rev.dnainternet.fi)
[16:42:21] <shangxiao> ooh that does annoy me
[16:43:25] *** Joins: serghei (~egrep@user/serghei)
[16:44:28] <GinFuyou> andygmb, what you mean by "foo is set"? in `foo = Model.objects.all()` foo is set to non-evaluated queryset
[16:45:09] *** Quits: mattil (~mattil@d49f4hprpmgknpvrp0k-4.rev.dnainternet.fi) (Remote host closed the connection)
[16:45:31] <GinFuyou> If you start evaluating foo, it will hit db. If you cast it to list, it will hit. If you run an aggregation on it will hit
[16:45:46] <andygmb> ahh, that's my misunderstanding so.
[16:46:19] <moldy> kezabelle: marches on?
[16:46:31] *** Quits: sandeepk (~sandeepk@223.130.30.245) (Ping timeout: 258 seconds)
[16:46:35] <moldy> i don't use it much, but i always thought it just prints the source around your position?
[16:46:37] <GinFuyou> oops, I wanted to type "if you start iterating"
[16:46:41] <kezabelle> moldy: haha yes but also no
[16:47:16] *** Joins: mattil (~mattil@d49f4hprpmgknpvrp0k-4.rev.dnainternet.fi)
[16:47:27] <shangxiao> andygmb: to clarify, here's the section in the docs that talks about when querysets are evaluated: https://docs.djangoproject.com/en/3.2/ref/models/querysets/#when-querysets-are-evaluated
[16:47:40] <kezabelle> "l" will print _where you are_ ... but if you type it again, it _moves forward_ 10 lines, so if you stopped to do something like 'pp args' in between, "l" will now not be pointing at where you are
[16:48:01] <kezabelle> you have to use "l ." to stay in the same place (rolleyes) which IIRC didn't even work in py2.
[16:48:26] <moldy> kezabelle: ah, TIL
[16:48:29] *** Quits: serghei (~egrep@user/serghei) (Ping timeout: 268 seconds)
[16:48:48] <moldy> i usually jump around the code in my editor and have a separate window open with pdb :)
[16:49:05] <andygmb> aye, I think my confusion came from querying in the shell and seeing the queryset already evaluated, but of course that's because i'm calling repr() on it which is evaluating it
[16:49:15] <andygmb> thanks GinFuyou shangxiao :)
[16:49:20] <kezabelle> andygmb: yes that'll do it.
[16:49:29] <kezabelle> winds me right up that repr(qs) evaluates
[16:50:25] <kezabelle> partially because it will cause a test with assertNumQueries(...) to fail horribly, and partially because it'll fill connection.queries with noise I don't want :p
[16:51:35] *** Joins: serghei (~egrep@user/serghei)
[16:56:06] *** Quits: serghei (~egrep@user/serghei) (Ping timeout: 256 seconds)
[16:57:02] *** Quits: mattil (~mattil@d49f4hprpmgknpvrp0k-4.rev.dnainternet.fi) (Remote host closed the connection)
[17:01:08] *** Joins: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net)
[17:03:02] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[17:03:16] <shangxiao> oh so "l ." stays in the same place?
[17:03:39] <shangxiao> neato
[17:06:41] <kezabelle> yarp
[17:13:42] *** Joins: Ergo^ (~ergo@91.238.59.144)
[17:14:15] <kezabelle> and now, back to watching tests fail... or not, one might hope.
[17:14:17] *** Joins: thiras (~thiras@user/thiras)
[17:19:32] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:19:33] *** ChanServ sets mode: +v EvilDMP
[17:22:12] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[17:22:47] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[17:28:15] *** Joins: derf- (~derf@unprompted.com)
[17:36:28] <kezabelle> yay tests pass
[17:38:15] *** Joins: mattil (~mattil@d49f4hprpmgknpvrp0k-4.rev.dnainternet.fi)
[17:41:49] *** Quits: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net) (Quit: Konversation terminated!)
[17:42:27] *** Quits: mattil (~mattil@d49f4hprpmgknpvrp0k-4.rev.dnainternet.fi) (Ping timeout: 250 seconds)
[17:43:37] *** Joins: serghei (~egrep@user/serghei)
[17:47:19] *** Joins: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net)
[17:48:14] *** Quits: serghei (~egrep@user/serghei) (Ping timeout: 258 seconds)
[18:23:26] *** Quits: Linux77 (~kvirc@187-126-71-30.user3p.veloxzone.com.br) (Ping timeout: 258 seconds)
[18:30:35] *** Joins: jess (~jess@libera/staff/jess)
[18:39:34] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:40:20] *** Joins: serghei (~egrep@user/serghei)
[18:44:54] *** Quits: serghei (~egrep@user/serghei) (Ping timeout: 256 seconds)
[18:48:11] *** Joins: LuxuryMode (uid91005@id-91005.charlton.irccloud.com)
[18:48:27] <LuxuryMode> When I'm using a Window function e.g. `Window(expression=Sum(), order_by=F('score').desc()`, how can I order by multiple columns?
[18:51:06] <LuxuryMode> Looks like it just accepts a sequence of expressions?
[18:54:53] *** Quits: rje (~rje@50.54.137.153) (Quit: My computer has gone to sleep. ZZZzzz…)
[18:55:15] *** Joins: rje (~rje@65.141.156.170)
[18:56:57] *** Quits: kezabelle (~kezabelle@cpc119866-nrwh12-2-0-cust31.4-4.cable.virginm.net) (Quit: Leaving...)
[19:15:27] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[19:29:36] *** Quits: Harlin (~DonQixote@2603:300b:663:e800:addb:a87a:2c4:cf0e) (Quit: Leaving)
[19:33:36] *** Joins: Harlin (~DonQixote@2603:300b:663:e800:5967:2fb0:cc2f:4c7c)
[19:33:51] <shangxiao> LuxuryMode: wouldn't a sequence of imply the ability to order by multiple columns? :)
[19:36:11] <LuxuryMode> Not sure I understand the question, sorry. Just quoting docs which say "The order_by argument accepts a sequence of expressions on which you can call asc() and desc()." Not sure what this means though in terms of concrete syntax.
[19:37:21] <shangxiao> LuxuryMode: so just looking at the code it accepts an expression, or a sequence of expressions: https://github.com/django/django/blob/ca9872905559026af82000e46cde6f7dedc897b6/django/db/models/expressions.py#L1296
[19:38:12] <shangxiao> so that means you can do order_by=[F('foo').asc(), F('bar').desc()]
[19:38:29] <LuxuryMode> cool thanks, that's what I'm trying now
[19:39:00] <shangxiao> I agree the docs may be a little confusing, they state "sequence of expressions" but the example shown underneath is a 'scalar'
[19:39:36] <shangxiao> Maybe I should submit a PR to clarify :)
[19:39:56] <LuxuryMode> ¯\_(ツ)_/¯
[19:40:37] <LuxuryMode> Oh I see, it takes list or tuple, but then internally promotes that to an ExpressionList: `self.order_by = ExpressionList(*self.order_by)`
[19:41:54] <LuxuryMode> Now I just need to figure out the offset part. I have about half this query translated to Django, gotta figure out the rest https://dpaste.org/g99Z
[19:43:27] <shangxiao> hm well you may have to do some ORM-fu to get that select … from <virtual-table> style subquery
[19:44:18] <shangxiao> Django doesn't support that sort of thing but I believe folks have tricked Django with fake models backed by custom sql
[19:47:54] <LuxuryMode> right
[19:48:38] <LuxuryMode> Doesn't need to be a 1:1 translation, just accomplish the same thing. I think it can be done.
[19:50:01] *** knbk_ is now known as knbk
[19:51:50] <knbk> LuxuryMode: so you have a window on all preceding rows, then select the last row in the offset -- that's just the sum over all items, isn't it? I may be missing something, but I don't think you need the window expression or the offset?
[19:53:37] <LuxuryMode> hmm good question, thinking...
[20:00:29] <LuxuryMode> knbk: I think you're right that it could be done this way: https://dpaste.org/w7pC Will need to see if there's any corner cases that makes this unworkable. This should be easier to implement in Django, right?
[20:04:31] <shangxiao> Anyone know what the current process is for submitting small doc fix PRs is? Last time I did this (2015) you didn't need a ticket… am hoping it's still the same deal?
[20:04:38] <knbk> LuxuryMode: can you describe what you're trying to query?
[20:09:29] *** Joins: cbasah (~armycook2@202.185.71.229)
[20:11:59] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Ping timeout: 268 seconds)
[20:17:17] *** Quits: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net) (Quit: See you on the flip side.)
[20:19:44] *** Quits: kostkon_ (~androirc@ob21aa.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[20:21:06] <davidsmith> shangxiao: If it's a small doc fix then just open the PR.
[20:21:38] <shangxiao> 👍
[20:22:12] *** Joins: Quacc (~youbuntoe@user/quacc)
[20:22:24] *** Quits: Quacc (~youbuntoe@user/quacc) (Client Quit)
[20:26:01] *** Joins: Elzington_ (~Elzington@68.235.43.76)
[20:26:01] *** Quits: Elzington_ (~Elzington@68.235.43.76) (Client Quit)
[20:27:23] *** Quits: Elzington (~Elzington@68.235.43.12) (Ping timeout: 252 seconds)
[20:27:25] *** Joins: Elzington_ (~Elzington@68.235.43.76)
[20:27:51] *** Quits: Elzington_ (~Elzington@68.235.43.76) (Remote host closed the connection)
[20:34:11] *** Quits: bandit_za (~bandit_za@2c0f:ed28:b016:e80::1ed) (Quit: Client closed)
[20:35:26] *** Joins: Elzington (~Elzington@68.235.43.76)
[20:37:26] *** Quits: cbasah (~armycook2@202.185.71.229) (Ping timeout: 272 seconds)
[20:39:02] <withered_wolf> If I wanted to rename a kwarg in a url example: path("users/<int:pk>/", UserDetailView.as_view(), name="user_detail") could I just say something like <int:user_id> instead?
[20:40:58] <withered_wolf> It's a generic CBV, so I don't think I can, was just curious.
[20:43:29] <shangxiao> withered_wolf: yep
[20:44:36] <shangxiao> "The string may contain angle brackets (like <username> above) to capture part of the URL and send it as a keyword argument to the view." from https://docs.djangoproject.com/en/3.2/ref/urls/#path
[20:47:27] <withered_wolf> Yeah, I tried just changing PK to user_id and got: Generic detail view UserDetailView must be called with either an object pk or a slug in the URLconf.
[20:48:05] <withered_wolf> I just wanted to use the same UserPassesTestMixin on two views... but one uses 'pk', the other uses 'user_id' as the kwarg I need to access.
[20:48:54] *** Joins: mattil (~mattil@62-113-176-119.bb.dnainternet.fi)
[20:52:10] <knbk> withered_wolf: you can set `pk_url_kwarg = 'user_id'` on the CBV
[20:53:33] *** Quits: mattil (~mattil@62-113-176-119.bb.dnainternet.fi) (Ping timeout: 250 seconds)
[20:57:10] <withered_wolf> Epic. Thanks @knbk that worked a treat!
[20:57:36] *** Joins: Linux77 (~kvirc@187-126-71-30.user3p.veloxzone.com.br)
[21:03:42] *** Joins: pjs (~pjs@user/pjs)
[21:05:21] *** Quits: pjs (~pjs@user/pjs) (Quit: br)
[21:05:38] *** Joins: pjs (~pjs@user/pjs)
[21:05:57] *** Joins: fleabag (~sirpengi@li587-65.members.linode.com)
[21:10:35] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:21:49] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:25:07] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 245 seconds)
[21:28:29] *** Joins: knbk_ (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[21:29:39] *** Joins: Quacc (~youbuntoe@user/quacc)
[21:29:40] *** Joins: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net)
[21:29:45] *** Quits: Quacc (~youbuntoe@user/quacc) (Client Quit)
[21:30:05] *** Joins: Quacc (~youbuntoe@user/quacc)
[21:31:54] *** Quits: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[21:32:59] *** Joins: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl)
[21:36:29] *** Quits: Quacc (~youbuntoe@user/quacc) (Quit: WeeChat 3.2)
[21:42:56] *** Joins: mattil (~mattilinn@62-113-176-119.bb.dnainternet.fi)
[21:45:24] *** Joins: Crassus (~Crassus@user/crassus)
[22:00:56] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[22:05:13] *** Joins: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[22:08:18] *** Quits: knbk_ (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[22:13:28] *** hylje_ is now known as hylje
[22:14:59] *** Joins: djapo (~archangel@user/djapo)
[22:15:27] *** Joins: saschi (~saschi@user/saschi)
[22:16:31] *** Joins: djacobs (~IceChat95@109.133.171.241)
[22:21:21] *** Quits: audiocat (~audio@2603-8081-1800-00ad-63c9-045d-dd73-f4c7.res6.spectrum.com) (Ping timeout: 252 seconds)
[22:23:44] *** Joins: audiocat (~audio@2603-8081-1800-00ad-45bc-ff66-5742-0276.res6.spectrum.com)
[22:27:04] *** Joins: serghei (~egrep@user/serghei)
[22:29:35] <djacobs> Is it somehow possible to override the 'required' setting for a field/input of a ModelForm from the view where its called upon?
[22:30:58] <djacobs> I was kind of hoping that by declaring a ForeignKey with "blank=True, null=True" would suffice for this. and that i might have broken it by creating a custom view.
[22:36:20] <lorcab> djacobs: what exactly are you trying to achieve?
[22:37:40] *** Joins: monokrome (~monokrome@rrcs-173-198-74-166.west.biz.rr.com)
[22:41:47] *** Quits: monokrome (~monokrome@rrcs-173-198-74-166.west.biz.rr.com) (Ping timeout: 245 seconds)
[22:43:23] <djacobs> lorcab: Well i'm trying to reference a model with 2 ImageFields of which one should be mandetory, from a second model.    Since it makes no sense creating a record without either a photo nor a thumbnail, i thought that setting the photo as mandetory is a logical choice.    However when try to call
[22:43:23] <djacobs> PhotoForm() this mandetory field becomes a mandetor
[22:43:23] <djacobs> y field in the form of the 2nd model, which blocks my attempt to "save" my record.
[22:45:30] <djacobs> Perhaps this will make it more clearer!  https://dpaste.org/xdYF#L27,28,84,85,86,87,88,98,99,100,174,175,209
[23:00:28] *** Joins: blackleitus (~blackleit@189.195.193.124)
[23:00:33] <blackleitus> use open source code in property commercial ??
[23:03:30] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Ping timeout: 240 seconds)
[23:15:53] *** Joins: timdiels (~user@78-22-205-207.access.telenet.be)
[23:24:40] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:26:17] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[23:27:45] <mogad0n> If I am using admin actions shouldn't they generate the following  https://docs.djangoproject.com/en/3.1/ref/contrib/admin/#logentry-objects
[23:29:07] <mogad0n> these are custom actions in question. Nothing seems to be written about them specifically
[23:33:32] <timdiels> Hi, I'm trying to make a form with fields which depend on each other. Background: I was planning to use unpoly for updating/validating the form before it is submitted. unpoly sends ajax POST calls to the form's view, expecting to get the rendered form with validation errors in return and updates the html on the page that changed. I'm generating the choices of both fields in Form.__init__ based on the
[23:33:37] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 258 seconds)
[23:33:38] <timdiels> value of the other field. The first field is the blast program and the other is the blast DB; when nothing is selected, both show all options as the user starts by either picking a program or the DB. When a protein DB is selected only protein programs should be shown, when a protein program is selected, only protein DBs should be shown.
[23:33:43] <timdiels> Now my question, how do I get the value of each field in Form.__init__, is self.fields['program'].clean() alright?
[23:37:01] <hylje> timdiels: this sounds like a task for MyForm.clean
[23:39:04] *** Quits: serghei (~egrep@user/serghei) (Quit: serghei)
[23:47:19] *** Quits: shangxiao (~davids@101.181.108.207) (Quit: WeeChat 3.2)
[23:49:43] <timdiels> hylje: I do get access to cleaned_data that way but I'll have to call clean on GET as well to set up those fields correctly. On POST when actually validating MyForm.clean could call super().clean(), ignore validation errors, use cleaned_data to configure the fields correctly and then call super again. So, not ideal either, not sure which approach is better.
[23:54:39] *** Joins: hyper_dave (~hyper_dav@197.156.107.21)
[23:57:58] *** Quits: LuxuryMode (uid91005@id-91005.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[23:58:54] <timdiels> MyForm.clean() indeed seems better. Judging by _clean_fields, field.clean() has some special cases.
