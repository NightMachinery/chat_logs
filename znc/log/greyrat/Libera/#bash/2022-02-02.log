[00:00:04] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[00:01:00] *** Joins: skapata (~Skapata@user/skapata)
[00:02:33] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[00:02:51] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[00:04:06] *** Quits: Afroboy (~afroboy@105.106.179.18) (Remote host closed the connection)
[00:04:16] *** Joins: yustin (~yustin@user/yustin)
[00:05:19] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[00:06:45] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[00:06:50] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:e15c:b936:df3f:82e6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:07:24] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[00:08:32] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[00:09:27] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[00:12:19] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[00:12:50] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[00:13:06] *** Quits: chronon (~chronon@user/chronon) (Remote host closed the connection)
[00:13:35] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[00:13:50] *** Joins: Betal (~Betal@user/betal)
[00:14:21] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[00:14:57] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[00:15:44] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[00:16:58] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[00:17:58] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:19:21] *** Quits: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de) (Remote host closed the connection)
[00:19:34] <setuid> greycat, twkm, Soliton thanks again, as always!
[00:19:39] *** Parts: setuid (sid191390@canonical/setuid) (off to the next intractable issue)
[00:20:54] *** Quits: johnjaye (~pi@173.209.65.233) (Read error: Connection reset by peer)
[00:21:43] *** Joins: fatal (~0x00@user/fatal)
[00:25:48] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[00:26:12] *** Quits: karabaja4 (~karabaja4@dh207-94-84.xnet.hr) (Ping timeout: 256 seconds)
[00:26:16] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[00:26:39] *** Joins: johnjaye (~pi@173.209.65.233)
[00:26:43] *** Quits: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de) (Quit: WeeChat 3.0)
[00:27:03] *** Joins: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de)
[00:29:18] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[00:30:51] *** Joins: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de)
[00:31:05] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[00:32:02] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[00:33:27] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[00:33:47] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[00:34:29] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:36:55] *** Quits: unop (~unop@195.91.14.193) ()
[00:36:55] *** Quits: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net) (Read error: Connection reset by peer)
[00:37:28] *** Quits: magla (~gelignite@55d4daf5.access.ecotel.net) (Read error: Connection reset by peer)
[00:37:30] *** Joins: geli (~gelignite@55d4daf5.access.ecotel.net)
[00:38:45] *** Joins: unop (~unop@195.91.14.193)
[00:40:20] *** Joins: karabaja4 (~karabaja4@dh207-95-244.xnet.hr)
[00:42:09] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[00:43:42] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:e15c:b936:df3f:82e6)
[00:44:27] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[00:45:57] *** Joins: vysn (~vysn@user/vysn)
[00:46:20] *** Quits: geli (~gelignite@55d4daf5.access.ecotel.net) (Quit: Stay safe!)
[00:50:41] *** Joins: kr11x (kr1x@gateway/vpn/protonvpn/kr1x)
[00:50:49] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[00:50:57] *** Quits: Minvera (~Minvera@user/Minvera) (Remote host closed the connection)
[00:51:19] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[00:53:24] *** Quits: kr1x (~kr1x@170.249.0.122) (Ping timeout: 256 seconds)
[00:54:33] *** Quits: MonoL (~MonoL@user/MonoL) (Quit: Leaving)
[00:54:49] *** Joins: seninha (~seninha@user/seninha)
[00:54:53] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[00:55:11] *** Joins: Minvera (~Minvera@user/Minvera)
[00:55:58] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[00:57:18] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[00:58:57] *** Joins: dConstruct (~dConstruc@2404:440c:1762:8900:7507:47bb:2d06:6c01)
[01:00:20] *** Quits: fling (~fling@user/fling) (Remote host closed the connection)
[01:00:38] *** Quits: dConstruct (~dConstruc@2404:440c:1762:8900:7507:47bb:2d06:6c01) (Client Quit)
[01:00:41] *** Joins: fling (~fling@user/fling)
[01:02:00] *** Quits: Minvera (~Minvera@user/Minvera) (Remote host closed the connection)
[01:04:10] *** Quits: hqdruxn08 (~hqdruxn08@user/hqdruxn08) (Read error: Connection reset by peer)
[01:04:35] *** Joins: hqdruxn08 (~hqdruxn08@user/hqdruxn08)
[01:05:05] *** Quits: martinus__ (~martin@153.27.202.77.rev.sfr.net) (Ping timeout: 256 seconds)
[01:05:24] *** Quits: karabaja4 (~karabaja4@dh207-95-244.xnet.hr) (Remote host closed the connection)
[01:06:58] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[01:07:02] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[01:07:25] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[01:07:26] *** Quits: beco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73) (Ping timeout: 260 seconds)
[01:08:08] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[01:13:36] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[01:15:04] *** Joins: rcernin (~rcernin@101.189.141.138)
[01:15:23] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[01:16:28] *** Joins: beco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73)
[01:17:11] *** Joins: kriket__ (~kr1x@170.249.0.122)
[01:18:23] *** Joins: malina (~malina@user/malina)
[01:19:49] *** Quits: kr11x (kr1x@gateway/vpn/protonvpn/kr1x) (Ping timeout: 256 seconds)
[01:20:23] *** Quits: Intelo (~Intelo@88.246.74.142) (Ping timeout: 256 seconds)
[01:20:57] *** Quits: sinaowolabi_ (~SinaOwola@160.152.13.25) (Ping timeout: 256 seconds)
[01:24:30] *** Joins: zebrag (~chris@user/zebrag)
[01:27:21] *** Quits: zebrag (~chris@user/zebrag) (Client Quit)
[01:28:21] *** Joins: volga629 (~volga629@72.139.93.26)
[01:28:32] *** Quits: dreamon (~dreamon@pd9503a7e.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[01:29:50] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[01:30:21] *** Quits: zaden (~maddx@73.92.207.228) (Quit: WeeChat 3.5-dev)
[01:32:55] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[01:33:37] *** Joins: MonoL (~MonoL@user/MonoL)
[01:34:09] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[01:35:20] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Client Quit)
[01:35:26] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 260 seconds)
[01:37:34] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:39:10] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[01:40:00] *** Quits: unop (~unop@195.91.14.193) (Remote host closed the connection)
[01:40:39] *** Joins: unop (~unop@195.91.14.193)
[01:40:43] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[01:41:43] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[01:44:20] *** Joins: andril (~andril@c-66-229-99-96.hsd1.fl.comcast.net)
[01:45:09] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:47:06] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 276 seconds)
[01:49:53] *** Joins: Atque (~Atque@user/atque)
[01:50:06] *** Quits: ryo (foobar@user/ryo) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[01:50:40] *** Quits: ekathva (~ekathva@2001:999:51:be01:35a5:6efe:4821:a5c8) (Remote host closed the connection)
[01:51:03] *** Parts: thd (~user@45.76.37.129) ()
[01:51:53] *** Joins: ryo (foobar@athena.nocsrv.de)
[01:52:07] *** Quits: ryo (foobar@athena.nocsrv.de) (Changing host)
[01:52:07] *** Joins: ryo (foobar@user/ryo)
[01:53:00] *** Quits: nvmd (~weechat@user/nvmd) (Quit: WeeChat 3.4)
[01:53:59] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[01:56:50] *** Joins: akoana (~ah@user/akoana)
[01:56:52] *** Quits: jmew (~jmew@user/jmew) (Ping timeout: 256 seconds)
[01:56:52] *** Quits: tex (~super@user/dix) (Ping timeout: 256 seconds)
[01:56:58] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[01:57:38] *** Quits: sinhue (~mithrin@188-167-233-152.dynamic.chello.sk) (Quit: Leaving)
[01:59:14] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 260 seconds)
[02:01:01] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.4)
[02:02:04] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[02:03:26] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[02:03:41] *** Quits: mat001 (~mat001@72.28.108.216) (Ping timeout: 256 seconds)
[02:04:06] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[02:04:23] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[02:06:14] *** Quits: chomwitt (~chomwitt@athedsl-02411.home.otenet.gr) (Remote host closed the connection)
[02:06:24] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[02:06:45] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[02:10:59] *** Joins: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au)
[02:15:09] *** Quits: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[02:15:21] *** Quits: kj (~kj@beta.aerisnetwork.net) (Ping timeout: 256 seconds)
[02:16:36] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[02:16:39] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[02:20:10] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[02:20:51] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[02:21:17] *** Quits: drd (~drd@2001:b07:6468:1782:1e9c:163f:3faa:8058) (Ping timeout: 240 seconds)
[02:21:25] *** Quits: brw (~bas@haring.bas.sh) (Read error: Connection reset by peer)
[02:21:51] *** Joins: brw (~bas@haring.bas.sh)
[02:24:04] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 250 seconds)
[02:24:04] *** Quits: adac (~adac@213-47-252-7.cable.dynamic.surfer.at) (Ping timeout: 256 seconds)
[02:24:40] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:e15c:b936:df3f:82e6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:25:07] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[02:26:28] *** Joins: ka80 (~ka80@111.60.138.34.bc.googleusercontent.com)
[02:27:44] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[02:27:51] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[02:28:44] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[02:29:44] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[02:31:42] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[02:32:34] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[02:33:21] *** Quits: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net) (Ping timeout: 250 seconds)
[02:35:41] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[02:35:47] <emg> I know it's a lost cause but man what I wouldn't give to be able to forcibly teach xmb some netiquette.  Those mailing list threads just get painful.
[02:36:19] *** Joins: kj (~kj@kj.aerisnetwork.net)
[02:39:52] <larryv> mmmmhm :(
[02:40:38] *** Joins: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net)
[02:41:04] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[02:41:28] *** Quits: bomb-on_ (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[02:41:50] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 252 seconds)
[02:42:18] *** Quits: kli (~kli@ip-89-177-122-45.net.upcbroadband.cz) (Quit: Leaving)
[02:42:32] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[02:42:34] *** Joins: kli (~kli@ip-89-177-122-45.net.upcbroadband.cz)
[02:43:28] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[02:45:54] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[02:48:13] *** Quits: andril (~andril@c-66-229-99-96.hsd1.fl.comcast.net) (Quit: WeeChat 3.4)
[02:51:38] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[02:52:08] *** Joins: karabaja4 (~karabaja4@dh207-95-244.xnet.hr)
[02:52:58] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[02:53:10] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[02:54:37] *** Joins: ferdna (~ferdna@user/ferdna)
[02:54:57] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[02:55:17] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[02:56:04] *** Parts: kli (~kli@ip-89-177-122-45.net.upcbroadband.cz) (Leaving)
[02:58:36] *** Joins: tatarqa (~kli@ip-89-177-122-45.net.upcbroadband.cz)
[02:58:40] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[02:58:58] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[02:59:33] *** Quits: smrtz (~smrtz@user/smrtz) (Ping timeout: 256 seconds)
[03:00:36] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[03:01:14] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[03:03:08] *** Quits: fedenix__ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:05:00] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[03:05:06] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Ping timeout: 276 seconds)
[03:06:16] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[03:06:35] *** Quits: yustin (~yustin@user/yustin) (Ping timeout: 252 seconds)
[03:07:08] *** Quits: zoe (~zoe@fsf/member/zoe) (Ping timeout: 256 seconds)
[03:09:25] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[03:10:20] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[03:10:47] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:12:32] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[03:12:58] *** Joins: zman_ (~zman@209-180-64-47.sxfl.qwest.net)
[03:13:20] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[03:15:01] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:15:38] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[03:15:50] *** zman_ is now known as zzman
[03:18:24] *** Joins: arinov (~arinov@213.194.126.155)
[03:20:01] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:20:38] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[03:26:07] *** Guest1199 is now known as az
[03:26:27] *** Quits: az (az@stable.bnc.by.bnc4you.xyz) (Changing host)
[03:26:27] *** Joins: az (az@user/azz)
[03:28:15] *** Quits: skered (~dereks@user/skered) (Quit: ircII EPIC5-2.1.6 -- Are we there yet?)
[03:28:28] *** Joins: Oleg (~Oleg@ool-45745511.dyn.optonline.net)
[03:28:48] *** Joins: Betal (~Betal@user/betal)
[03:30:25] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[03:31:58] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[03:32:00] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[03:34:09] *** Joins: skered (~dereks@user/skered)
[03:34:20] <Oleg> can you please tell me how I can combine this into one command:
[03:34:29] <Oleg> printf "%s " "$@" ; printf "\n"
[03:34:32] <Oleg> ?
[03:34:41] <greycat> You can't.
[03:34:56] <greycat> Why do you think it matters?
[03:36:37] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[03:36:57] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[03:38:55] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[03:40:20] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[03:41:23] <Oleg> well, I just want it to have the same output as echo "$@" but with printf, I could find a shorter way than using two commands
[03:41:37] <Oleg> I mean, I couldn't
[03:46:50] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[03:49:02] *** Joins: willyg_cos (~willyg_co@user/willyg-cos/x-4994202)
[03:49:22] *** Joins: james (~james@2607:b400:24:0:6911:fb23:ae44:9a00)
[03:49:59] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[03:54:27] <Oleg> there is really no shorter way of doing it with printf?
[03:55:02] <greycat> unicorn:~$ cat bin/args
[03:55:02] <greycat> #!/bin/sh
[03:55:02] <greycat> printf "%d args:" "$#"
[03:55:02] <greycat> test "$#" -gt 0 && printf " <%s>" "$@"
[03:55:02] <greycat> echo
[03:57:45] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[03:58:59] *** Quits: ryo (foobar@user/ryo) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[03:59:50] *** Quits: luva (~luva@45.141.152.54) (Quit: Ping timeout (120 seconds))
[04:00:08] *** Joins: luva (~luva@45.141.152.54)
[04:01:02] *** Joins: mauz (~mauz@2a01:e0a:994:7ed0:c12b:4bd7:d283:325b)
[04:01:14] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[04:01:43] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[04:01:57] *** Quits: b0b (~bob@user/b0b) (Quit: o/)
[04:02:17] *** Joins: b0b (~bob@user/b0b)
[04:03:18] *** Quits: mauz (~mauz@2a01:e0a:994:7ed0:c12b:4bd7:d283:325b) (Remote host closed the connection)
[04:07:03] *** Quits: zro (~zro@user/zro) (Quit: WeeChat 3.4)
[04:08:04] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 250 seconds)
[04:08:32] *** Quits: willyg_cos (~willyg_co@user/willyg-cos/x-4994202) (Quit: Leaving)
[04:09:10] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[04:09:28] *** Quits: rcernin (~rcernin@101.189.141.138) (Ping timeout: 256 seconds)
[04:09:50] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 268 seconds)
[04:11:37] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[04:12:50] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[04:15:24] *** Quits: tatarqa (~kli@ip-89-177-122-45.net.upcbroadband.cz) (Quit: Leaving)
[04:16:18] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[04:16:34] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[04:17:56] *** Joins: rcernin (~rcernin@101.189.141.138)
[04:21:28] *** Joins: nitro_ (~nitro_@c-73-165-183-88.hsd1.pa.comcast.net)
[04:21:50] *** Joins: volga629 (~volga629@72.139.93.26)
[04:21:59] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[04:22:11] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[04:23:40] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[04:25:28] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[04:28:28] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[04:29:25] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[04:29:47] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[04:29:51] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[04:30:00] *** Quits: bertptrs (~quassel@user/bertptrs) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[04:30:34] *** Joins: bertptrs (~quassel@user/bertptrs)
[04:31:25] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[04:31:52] *** Quits: james (~james@2607:b400:24:0:6911:fb23:ae44:9a00) (Quit: james)
[04:34:15] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 250 seconds)
[04:38:23] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:39:19] *** Joins: Nintendo (~smb3@user/great)
[04:43:29] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[04:44:48] *** Joins: totenkoph (~scythe@user/totenkoph)
[04:45:07] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[04:45:24] *** Joins: ano (~ano@user/ano)
[04:50:06] *** Joins: masoudd (~masoudd@user/masoudd)
[04:52:13] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:e15c:b936:df3f:82e6)
[04:57:08] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[04:58:38] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[04:59:10] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[05:00:47] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[05:01:05] *** Quits: fatal (~0x00@user/fatal) (Remote host closed the connection)
[05:01:30] *** Joins: fatal (~0x00@user/fatal)
[05:03:50] *** Quits: ormaaj2 (~ormaaj2@user/ormaaj) (Quit: Client closed)
[05:04:08] *** Joins: ormaaj2 (~ormaaj2@user/ormaaj)
[05:06:50] *** Joins: crashrep (~crashrep@user/crashrep)
[05:08:24] *** Quits: liveacoustic (~adison@user/liveacoustic) (Ping timeout: 256 seconds)
[05:09:02] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[05:09:46] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[05:10:55] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[05:11:08] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[05:11:24] *** Joins: volga629 (~volga629@72.139.93.26)
[05:14:21] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[05:15:32] *** Quits: volga629 (~volga629@72.139.93.26) (Read error: Connection reset by peer)
[05:16:48] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[05:20:44] *** Joins: Betal (~Betal@user/betal)
[05:21:28] <pj> # set -- foo bar baz; printf '%s ' "$@" $'\n'; printf 'next\n'
[05:21:30] <shbot> pj: foo bar baz
[05:21:30] <shbot> pj:  next
[05:21:43] <pj> This is close, but you get a space after the \n ^^^^
[05:22:35] *** Quits: freep (~freepppp@46.246.189.172.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[05:23:11] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[05:23:51] <pj> # set -- foo bar baz; printf '%s\n' "$*"; printf 'next\n' # You could do it this way, which relies on IFS
[05:23:53] <shbot> pj: foo bar baz
[05:23:53] <shbot> pj: next
[05:25:14] *** Quits: kriket__ (~kr1x@170.249.0.122) (Quit: Leaving)
[05:25:23] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[05:25:40] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[05:29:53] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[05:29:59] <greycat> echo() { local IFS=' '; printf '%s\n' "$*"; }
[05:30:05] <greycat> is not the worst thing you can do
[05:30:20] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:47] *** Quits: knstn (~knstn@ppp-94-66-57-96.home.otenet.gr) (Quit: leaving)
[05:31:14] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[05:32:17] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[05:32:52] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[05:32:54] *** Joins: edlou (uid413273@id-413273.helmsley.irccloud.com)
[05:32:58] *** Joins: vlm (~vlm@user/vlm)
[05:33:15] * Nintendo wonders why #bash seems preoccupied with reinventing echo "$*"...
[05:33:36] <greycat> you can't pass arbitrary strings to echo and get consistent results
[05:34:03] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 250 seconds)
[05:34:32] <greycat> in some versions, if you pass "-n" you'll get "-n" and in others you'll get nothing.  in some versions, passing "\c" will get nothing, and so on.
[05:34:40] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[05:35:00] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[05:35:10] <Nintendo> You can get consistent results according to POSIX, though I do understand implementations continue to screw the pooch with this one.
[05:35:19] <pj> and in bash it's nearly impossible to echo a line that starts with -e
[05:35:31] <pj> echo -e
[05:35:35] <greycat> Nintendo: you are mistaken.
[05:35:35] <pj> # echo -e
[05:35:36] <shbot> pj: no output
[05:35:41] <pj> # echo -- -e
[05:35:43] <shbot> pj: -- -e
[05:35:48] <pj> # echo -e -e
[05:35:49] <shbot> pj: no output
[05:36:02] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[05:36:08] <Nintendo> What do you mean, greycat?
[05:36:12] <greycat>        string    A string to be written to standard output. If the first oper‐
[05:36:12] <greycat>                  and  is  -n,  or if any of the operands contain a <backslash>
[05:36:12] <greycat>                  character, the results are implementation-defined.
[05:36:21] <greycat> POSIX echo(1p)
[05:37:02] <Nintendo> That's ridiculous because of the section just above it:  “Implementations shall not support any options.”
[05:37:10] * Nintendo gets a pitchfork.
[05:37:37] *** Joins: vysn (~vysn@user/vysn)
[05:37:39] <Blondie101010> oh, echo -e is tricky
[05:37:41] <greycat> -n isn't a supported option.  It's an operand ("input") that gives implementation-defined results.
[05:38:06] <greycat> and you know why, so don't play dumb
[05:38:36] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[05:39:00] *** Quits: xx (~xx@user/xx) (Ping timeout: 256 seconds)
[05:39:52] <Blondie101010> # echo '' '-e' # is the closest I've gotten so far without any other commands
[05:39:54] <shbot> Blondie101010:  -e
[05:39:55] *** Quits: clime (~clime@37-48-57-231.nat.epc.tmcz.cz) (Ping timeout: 256 seconds)
[05:40:48] <Blondie101010> doh that doesn't count as it's not better than: echo ' -e'
[05:41:07] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[05:43:34] <Blondie101010> # echo '-e '
[05:43:35] <shbot> Blondie101010: -e
[05:43:47] <Blondie101010> that solves it visually
[05:43:49] <Nintendo> I see one fact that might validate the option/operand distinction technically (albeit annoyingly), but it's not -n, as that is a “first operand”.
[05:43:49] *** Joins: luckiswithme (~luckiswit@149.167.138.15)
[05:44:26] <akoana> # echo -e '\x2d\x65'
[05:44:28] <shbot> akoana: -e
[05:44:32] <greycat> Or, you could accept that echo is doomed and that we (AND POSIX!) have a reason for suggesting people not use it with non-constant arguments in new scripts.
[05:44:50] <Nintendo> That goes without saying.
[05:45:14] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[05:46:13] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[05:47:30] <Nintendo> Still, I am willing to concede that the “if any of the operands contain a <backslash> character” part holds water when distinguishing “options” from “operands” and might even explain why echo is the way it is.  I can finally put this one to rest.  Thank you.
[05:48:10] *** Quits: rcernin (~rcernin@101.189.141.138) (Ping timeout: 250 seconds)
[05:48:43] *** Joins: LiftLeft (~LiftLeft@187.170.244.154)
[05:50:42] <Nintendo> Also, I am flattered that you would think I might play dumb as opposed to being the real deal ;)
[05:51:10] *** Joins: cdown_ (~cdown@188.214.11.14)
[05:53:47] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 250 seconds)
[05:53:57] *** cdown_ is now known as cdown
[05:57:23] *** Quits: luckiswithme (~luckiswit@149.167.138.15) (Remote host closed the connection)
[05:58:00] *** Joins: luckiswithme (~luckiswit@149.167.138.15)
[05:58:44] <pj> Yes, if you try really hard you can get echo to print -e, but the point is that you have to try really hard, and what if you have: echo "$1" and someone passes -e as the first arg, how are you supposed to know to jump through those hoops, or whether you even should?
[05:59:02] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:e15c:b936:df3f:82e6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:59:24] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[05:59:52] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[06:01:15] *** Quits: luckiswithme (~luckiswit@149.167.138.15) (Client Quit)
[06:01:19] *** Joins: rcernin_ (~rcernin@101.189.141.138)
[06:01:56] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:e15c:b936:df3f:82e6)
[06:03:51] *** Quits: nunggu (~q@user/nunggu) (Ping timeout: 276 seconds)
[06:06:39] *** Joins: nunggu (~q@user/nunggu)
[06:10:11] *** Joins: luckiswithme (~luckiswit@149.167.138.15)
[06:11:13] *** Quits: luckiswithme (~luckiswit@149.167.138.15) (Client Quit)
[06:11:34] <greycat> I don't know if you've ever read a GNU configure script (or similar, e.g. perl's configure script), but one of the first things they typically do is try to figure out which version of echo they're dealing with, by trial and error.
[06:12:13] *** Joins: luckiswithme (~luckiswit@149.167.138.15)
[06:12:36] <greycat> so you end up with things like   echo $n "foobar$c"  where n is either empty or -n, and c is either empty or \c, having been set in the early part of the script.
[06:13:06] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[06:13:10] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[06:13:27] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[06:16:24] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[06:16:44] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[06:22:40] *** Quits: johnjaye (~pi@173.209.65.233) (Read error: Connection reset by peer)
[06:24:47] *** Quits: winstonsmith (~winstonsm@gateway/vpn/pia/winstonsmith) (Remote host closed the connection)
[06:25:05] *** Joins: winstonsmith (~winstonsm@gateway/vpn/pia/winstonsmith)
[06:25:21] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[06:25:34] *** Joins: Swahili_ (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[06:25:57] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[06:26:44] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Ping timeout: 250 seconds)
[06:27:22] *** Quits: nehsou^ (~nehsou@128-092-164-034.biz.spectrum.com) (Remote host closed the connection)
[06:28:02] *** Quits: ormaaj2 (~ormaaj2@user/ormaaj) (Quit: Client closed)
[06:28:13] *** Joins: johnjaye (~pi@173.209.65.233)
[06:28:33] *** Joins: ormaaj2 (~ormaaj2@user/ormaaj)
[06:30:20] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[06:30:41] *** Joins: chronon (~chronon@user/chronon)
[06:31:00] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[06:31:28] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[06:33:00] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[06:33:45] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Ping timeout: 276 seconds)
[06:35:26] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[06:35:40] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[06:35:50] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 250 seconds)
[06:36:08] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[06:38:16] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Client Quit)
[06:43:48] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[06:45:32] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[06:46:26] <pj> greycat: yeah, that's insane when you can just use printf and get predictable results every time.
[06:46:59] <greycat> those scripts are written for systems/shells where printf may not exist
[06:47:04] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[06:47:46] <pj> damn that would have to be a very old system, then.
[06:50:45] *** Quits: ozzzo_work (~ozzzo_wor@h87.s239.verisign.com) (Ping timeout: 256 seconds)
[06:50:59] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[06:51:42] *** Joins: LordofLive (uid530989@id-530989.helmsley.irccloud.com)
[06:51:53] <wiscii> or small
[06:52:02] *** LordofLive is now known as Guest2087
[06:52:16] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[06:52:38] *** Quits: ormaaj2 (~ormaaj2@user/ormaaj) (Quit: Client closed)
[06:53:52] *** Quits: jos1 (~jos3@dyndsl-095-033-174-060.ewe-ip-backbone.de) (Ping timeout: 268 seconds)
[06:54:24] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[06:55:40] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[06:56:01] *** Quits: zzman (~zman@209-180-64-47.sxfl.qwest.net) (Quit: zzman)
[06:58:55] <Oleg> greycat: don't posix-compliant shells always have the built-in printf command?.. You said that printf may not exist in some shells.
[06:59:04] *** Joins: fedenix__ (~fedenix@gateway/tor-sasl/fedenix)
[06:59:14] <greycat> configure scripts are written to run on Bourne shells
[06:59:33] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[06:59:45] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 276 seconds)
[06:59:51] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[07:00:56] *** Joins: dsrt^ (~dsrt@128-092-164-034.biz.spectrum.com)
[07:02:21] *** Quits: fatal (~0x00@user/fatal) (Ping timeout: 276 seconds)
[07:02:21] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[07:02:21] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Ping timeout: 276 seconds)
[07:02:43] <Oleg> greycat: so, there are a lot of Bourne shells out there that don't care about posix and portability?
[07:03:12] <greycat> You're using the present tense.  Configure scripts are meant to run on *anything*, past or present.
[07:03:28] *** Joins: fatal (~0x00@user/fatal)
[07:03:43] *** Joins: ano (~ano@user/ano)
[07:03:56] <greycat> Commercial unix systems tend to remain in production for a super long time.  Well past end of life.
[07:04:15] <greycat> And remember, Solaris shipped a fucking Bourne shell as /bin/sh well into the 2000s.
[07:05:51] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[07:06:00] *** Joins: lispy (~lispy@user/lispy)
[07:06:03] *** Joins: jos1 (~jos3@dyndsl-091-096-035-050.ewe-ip-backbone.de)
[07:07:04] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[07:07:39] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[07:08:53] *** Quits: LiftLeft (~LiftLeft@187.170.244.154) (Ping timeout: 256 seconds)
[07:08:53] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 256 seconds)
[07:11:48] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 250 seconds)
[07:11:51] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[07:13:25] <llua> aix still ships a bourne shell, tho it isn't linked to sh by default.
[07:13:51] <llua> (and ksh88)
[07:13:59] *** Joins: CoolerY (~CoolerX@user/coolerx)
[07:14:54] *** Joins: masoudd (~masoudd@user/masoudd)
[07:14:56] *** Quits: CoolerX (~CoolerX@user/coolerx) (Read error: Connection reset by peer)
[07:15:14] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[07:16:20] <llua> https://www.ibm.com/docs/en/aix/7.3?topic=concepts-available-shells
[07:17:03] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[07:18:38] <greycat> when I used AIX in 1993-1994, the whole ecosystem was built around ksh
[07:19:13] *** Quits: beco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73) (Quit: Leaving)
[07:20:13] <greycat> that and their weird proprietary tools and their centralized binary database that was definitively not called a registry, but was, in reality, a registry
[07:20:35] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[07:20:59] <greycat> the basic unix paradigm of "edit this config file, then restart that process" did not apply
[07:21:19] *** Joins: MadcapJake (~MadcapJak@2600:6c44:257f:e1f7::1a29)
[07:22:57] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[07:24:04] *** Joins: junebug (~junebug@2600:1700:3db0:2540:4368:9dd6:c255:95c1)
[07:24:07] <llua> the odm
[07:26:59] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[07:28:44] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[07:33:57] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 268 seconds)
[07:35:44] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:37:22] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[07:38:12] *** Quits: johnjaye (~pi@173.209.65.233) (Read error: Connection reset by peer)
[07:39:12] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[07:40:01] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Client Quit)
[07:40:18] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:40:20] *** Quits: lispy (~lispy@user/lispy) (Quit: Leaving)
[07:41:10] <wiscii> llua: odm ? any ref ?
[07:42:01] <greycat> https://www.ibm.com/docs/en/aix/7.1?topic=concepts-object-data-manager
[07:42:03] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[07:42:55] <wiscii> gotcha
[07:44:04] *** Joins: johnjaye (~pi@173.209.65.233)
[07:44:44] *** Quits: MrA (MrA@2602:ff75:7:3ccc::20) (Ping timeout: 250 seconds)
[07:45:00] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[07:45:30] *** Quits: rcernin_ (~rcernin@101.189.141.138) (Ping timeout: 260 seconds)
[07:45:32] *** Quits: greycat (~greg@209.142.155.49) (Quit: Bye)
[07:45:42] *** Joins: MrA (MrA@2602:ff75:7:3ccc::20)
[07:45:49] <llua> wonder how long that export example has been broken
[07:46:03] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[07:47:22] <wiscii> the spaces ?
[07:47:43] <llua> yeah
[07:48:07] <wiscii> as long as pkexec ;-)
[07:49:56] *** Quits: MrA (MrA@2602:ff75:7:3ccc::20) (Ping timeout: 250 seconds)
[07:49:56] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 250 seconds)
[07:49:58] *** Joins: totenkoph (~scythe@user/totenkoph)
[07:50:35] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[07:55:00] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[07:56:14] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[07:56:14] *** Joins: rcernin (~rcernin@101.189.141.138)
[07:58:47] *** Quits: malina (~malina@user/malina) (Quit: malina)
[08:02:12] *** Joins: callq (~callq@2409:4062:2e9e:2081:73:e6d7:2365:394e)
[08:07:54] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 260 seconds)
[08:08:25] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[08:09:09] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[08:09:24] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[08:09:35] *** Joins: que11en (~oem@dynamic-046-114-173-069.46.114.pool.telefonica.de)
[08:09:45] *** Joins: MrA (MrA@2602:ff75:7:3ccc::20)
[08:10:42] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[08:12:30] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[08:12:56] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[08:18:51] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[08:19:08] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[08:19:24] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 250 seconds)
[08:24:39] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[08:25:05] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[08:25:47] *** Joins: mooz (~none@173.208.98.70)
[08:26:51] *** Quits: nunggu (~q@user/nunggu) (Ping timeout: 276 seconds)
[08:27:53] <wiscii> how big a number can bash count to ?
[08:28:02] *** Joins: n4dir (~user@mue-88-130-56-036.dsl.tropolys.de)
[08:28:44] *** Joins: nunggu (~q@user/nunggu)
[08:28:55] <omegatron> # echo $((2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2))
[08:28:56] <shbot> omegatron: 2147483648
[08:29:35] <omegatron> wow - 31 twos with the first try?  =D
[08:29:57] <omegatron> # echo $((2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2))
[08:29:58] <shbot> omegatron: 4294967296
[08:30:13] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[08:30:57] <pj> echo $(( 1<<63 ))
[08:31:01] <pj> # echo $(( 1<<63 ))
[08:31:03] <shbot> pj: -9223372036854775808
[08:31:08] <pj> # echo $(( 1<<63 - 1 ))
[08:31:10] <shbot> pj: 4611686018427387904
[08:31:25] <pj> there ^^^^
[08:31:54] <phy1729> iirc it's long long not int64_t
[08:31:54] <omegatron> so, a signed 64-bit integer
[08:31:59] <wiscii> nice - tyvm!
[08:32:12] <pj> yeah, looks like it
[08:32:14] <e36freak> 2^63 - 1
[08:32:36] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[08:33:53] <pj> 2^n is basically the same as 1<<n
[08:36:28] <larryv> # echo "$(( 1<<63 - 1 ))"
[08:36:30] <shbot> larryv: 4611686018427387904
[08:36:35] <larryv> # echo "$(( (1<<63) - 1 ))"
[08:36:36] <shbot> larryv: 9223372036854775807
[08:36:47] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[08:36:58] <wiscii> for my use, a 32bit wrapper (as in reset to zero) should not experience any issue (everything is qefs'd)
[08:37:17] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[08:37:47] <e36freak> pj: sure, just clarifying if someone doesn't know bit shifts
[08:38:32] <pj> yep
[08:38:55] <pj> larryv: good catc h
[08:39:03] <pj> *catch
[08:39:27] <pj> strangely enough RANDOM is only 15 bits, though.
[08:39:51] <pj> and is unsigned (it can't go negative)
[08:40:50] <pj> but you can do this for bigger random numbers...
[08:41:15] <pj> # echo $(( (RANDOM<<15) + RANDOM ))
[08:41:16] <shbot> pj: 621303787
[08:42:07] <wiscii> thar be dragons
[08:42:07] <kurahaupo1> pj: $(( RANDOM << 15 | RANDOM )) # be aware that sampling the C function rand() multiple times may not provide 30 bits of entropy.
[08:42:27] <pj> yeah, well.
[08:42:48] <larryv> https://git.savannah.gnu.org/cgit/bash.git/tree/expr.c#n22
[08:42:57] <larryv> "All arithmetic is done as intmax_t integers with no checking for overflow (though division by 0 is caught and flagged as an error)."
[08:44:04] <wiscii> also, adding rand to rand is a swamp
[08:44:31] <kurahaupo1> wiscii: my point exactly
[08:44:59] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[08:45:06] <wiscii> kurahaupo1: +1
[08:45:07] <kurahaupo1> s
[08:45:19] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[08:45:52] <pj> yeah, well I'm not entirely sure where RANDOM gets its seeds from, I am aware that you can trigger the exact same sequence by seeding it manually.
[08:47:09] <pj> but it appears as if it can be seeded with values higher than 32767 and it doesn't wrap (just from trial and error).
[08:47:22] <pj> # RANDOM=0; echo $RANDOM
[08:47:23] <shbot> pj: 20814
[08:47:29] <pj> # RANDOM=32768; echo $RANDOM
[08:47:31] <shbot> pj: 8403
[08:47:43] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[08:48:03] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[08:48:09] * wiscii is not sure of the point
[08:48:31] <pj> well, I'm trying to see if the entropy is there to get higher than 15 bit numbers.
[08:48:59] <wiscii> in bash ?
[08:49:45] *** Quits: que11en (~oem@dynamic-046-114-173-069.46.114.pool.telefonica.de) (Ping timeout: 256 seconds)
[08:49:56] <larryv> RANDOM is defined to only ever expand to 0-32767
[08:49:58] *** Quits: mooz (~none@173.208.98.70) (Ping timeout: 256 seconds)
[08:51:04] <larryv> # echo "$SRANDOM"
[08:51:06] <shbot> larryv: 593275053
[08:51:13] <larryv> ^ 32-bit, if you've got it
[08:51:33] <wiscii> # echo "$(( RANDOM * RANDOM ))"
[08:51:33] *** Joins: mooz (~none@173.208.98.70)
[08:51:34] <shbot> wiscii: 516590865
[08:51:41] <wiscii> hehehe
[08:52:37] <wiscii> # echo "$(( RANDOM * RANDOM ))"
[08:52:38] <shbot> wiscii: 586743950
[08:53:01] *** Joins: bluedust (~bluedust@59.89.212.127)
[08:53:08] <wiscii> # echo "$RANDOM $RANDOM $(( RANDOM * RANDOM ))"
[08:53:09] <shbot> wiscii: 21779 30411 530926990
[08:54:20] <wiscii> one last time ..
[08:54:39] <wiscii> # echo "$RANDOM $RANDOM $RANDOM $(( RANDOM * RANDOM * RANDOM ))"
[08:54:40] <shbot> wiscii: 26646 20446 24630 1111398607584
[08:56:03] *** Joins: Obscenity (~Obscenity@user/obscenity)
[08:56:30] <wiscii> statistically not random
[08:57:16] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:59:26] <pj> yeah
[08:59:41] <pj> and yeah SRANDOM is better, but isn't on older bash
[09:00:22] <pj> 42# echo $SRANDOM
[09:00:40] <pj> 42# echo $(( RANDOM<<15 | RANDOM ))
[09:00:52] *** Joins: que11en (~oem@dynamic-046-114-173-069.46.114.pool.telefonica.de)
[09:00:55] <pj> hrmmm
[09:01:24] *** Joins: f-chymera (~chymera@ns1000526.ip-51-81-46.us)
[09:01:34] <pj> !shbot
[09:01:39] *** Quits: chymera (~chymera@ns1000526.ip-51-81-46.us) (Ping timeout: 256 seconds)
[09:02:19] *** Quits: MadcapJake (~MadcapJak@2600:6c44:257f:e1f7::1a29) (Quit: MadcapJake)
[09:02:36] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Ping timeout: 276 seconds)
[09:02:52] *** f-chymera is now known as chymera
[09:03:43] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[09:05:32] *** Joins: domicron (~domicron@gateway/tor-sasl/domicron)
[09:06:09] *** Quits: junebug (~junebug@2600:1700:3db0:2540:4368:9dd6:c255:95c1) (Quit: Leaving)
[09:06:26] <pj> I get the feeling we're about to see a massive netsplit or something.
[09:07:19] *** Quits: luva (~luva@45.141.152.54) (Ping timeout: 256 seconds)
[09:08:05] *** Quits: luckiswithme (~luckiswit@149.167.138.15) (Quit: Konversation terminated!)
[09:08:12] *** Quits: Obscenity (~Obscenity@user/obscenity) (*.net *.split)
[09:08:12] *** Quits: mooz (~none@173.208.98.70) (*.net *.split)
[09:08:12] *** Quits: rcernin (~rcernin@101.189.141.138) (*.net *.split)
[09:08:12] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (*.net *.split)
[09:08:12] *** Quits: masoudd (~masoudd@user/masoudd) (*.net *.split)
[09:08:12] *** Quits: CoolerY (~CoolerX@user/coolerx) (*.net *.split)
[09:08:12] *** Quits: Swahili_ (~Swahili@a95-94-208-187.cpe.netcabo.pt) (*.net *.split)
[09:08:12] *** Quits: nitro_ (~nitro_@c-73-165-183-88.hsd1.pa.comcast.net) (*.net *.split)
[09:08:12] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (*.net *.split)
[09:08:12] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (*.net *.split)
[09:08:12] *** Quits: karabaja4 (~karabaja4@dh207-95-244.xnet.hr) (*.net *.split)
[09:08:12] *** Quits: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net) (*.net *.split)
[09:08:12] *** Quits: unop (~unop@195.91.14.193) (*.net *.split)
[09:08:12] *** Quits: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de) (*.net *.split)
[09:08:12] *** Quits: ttys000 (~ttys000@user/ttys000) (*.net *.split)
[09:08:12] *** Quits: sdu (~sidu@185.44.146.61) (*.net *.split)
[09:08:12] *** Quits: mpagano (~quassel@gentoo/developer/mpagano) (*.net *.split)
[09:08:12] *** Quits: TenochSLB (~Tenochyy@108-216-74-215.lightspeed.wchtks.sbcglobal.net) (*.net *.split)
[09:08:12] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (*.net *.split)
[09:08:12] *** Quits: moldorcoder7 (~moldorcod@37.120.143.28) (*.net *.split)
[09:08:12] *** Quits: Thanatermesis (~Thanaterm@191.92.148.122) (*.net *.split)
[09:08:12] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (*.net *.split)
[09:08:12] *** Quits: riddle (~riddle@user/riddle) (*.net *.split)
[09:08:12] *** Quits: skylite_ (~skylite@2E6B2CD6.catv.pool.telekom.hu) (*.net *.split)
[09:08:12] *** Quits: Gerlo_ (~Gerlo@user/gerlo) (*.net *.split)
[09:08:12] *** Quits: karakedi (~eAC53C340@user/karakedi) (*.net *.split)
[09:08:12] *** Quits: Laskolnyk (~wasyl@89-76-136-17.dynamic.chello.pl) (*.net *.split)
[09:08:12] *** Quits: Roedy (Roedy@user/roedy) (*.net *.split)
[09:08:12] *** Quits: Tabmow (~tabmow@user/tabmow) (*.net *.split)
[09:08:12] *** Quits: aidalgol (~aidalgol@user/aidalgol) (*.net *.split)
[09:08:12] *** Quits: infernix (~nix@spirit.infernix.net) (*.net *.split)
[09:08:12] *** Quits: axisys (~axisys@ec2-52-207-123-244.compute-1.amazonaws.com) (*.net *.split)
[09:08:12] *** Quits: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net) (*.net *.split)
[09:08:12] *** Quits: emg (~emg@cpe-70-93-247-186.natsow.res.rr.com) (*.net *.split)
[09:08:12] *** Quits: flipchan (~filip@user/flipchan) (*.net *.split)
[09:08:12] *** Quits: ncrowl (~ncrowl@c-fda770d5.022-170-6c756e3.cust.ownit.se) (*.net *.split)
[09:08:12] *** Quits: [diablo] (~diablo]@user/diablo/x-9068044) (*.net *.split)
[09:08:12] *** Quits: Distemper (~harry@li1089-127.members.linode.com) (*.net *.split)
[09:08:12] *** Quits: maledictium (~crux@bl23-232-57.dsl.telepac.pt) (*.net *.split)
[09:08:12] *** Quits: polve (~polve@user/polve) (*.net *.split)
[09:08:12] *** Quits: foul_owl (~kerry@94.140.8.107) (*.net *.split)
[09:08:12] *** Quits: haliucinas (~haliucina@5.20.153.21) (*.net *.split)
[09:08:12] *** Quits: Dotz0cat (~Dotz0cat@h55.84.187.173.dynamic.ip.windstream.net) (*.net *.split)
[09:08:12] *** Quits: mw_ (~mw@catv-80-98-128-161.catv.fixed.vodafone.hu) (*.net *.split)
[09:08:12] *** Quits: reset (~reset@user/reset) (*.net *.split)
[09:08:12] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-46-67-70-100-72.dsl.bell.ca) (*.net *.split)
[09:08:12] *** Quits: Nintendo (~smb3@user/great) (*.net *.split)
[09:08:12] *** Quits: zouhair (~zouhair@lnsm1-montreal02-142-119-49-188.internet.virginmobile.ca) (*.net *.split)
[09:08:12] *** Quits: justGhost (~justache@user/justache) (*.net *.split)
[09:08:13] *** Quits: Hackerpcs (~user@user/hackerpcs) (*.net *.split)
[09:08:13] *** Quits: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt) (*.net *.split)
[09:08:13] *** Quits: samnob (~samnob@user/samnob) (*.net *.split)
[09:08:13] *** Quits: wodencafe (wodencafe@woden.cafe) (*.net *.split)
[09:08:13] *** Quits: arooni (~arooni@li1062-244.members.linode.com) (*.net *.split)
[09:08:13] *** Quits: ds (~ds@user/ds) (*.net *.split)
[09:08:13] *** Quits: JyZyXy (~jyz@88-112-115-81.elisa-laajakaista.fi) (*.net *.split)
[09:08:13] *** Quits: dodo (~dodo@user/dodo) (*.net *.split)
[09:08:13] *** Quits: chodonne (~chodonne@ec2-3-18-56-136.us-east-2.compute.amazonaws.com) (*.net *.split)
[09:08:13] *** Quits: Dan39 (~dan@user/dan39) (*.net *.split)
[09:08:13] *** Quits: itu (~wp@wikipedia/itu) (*.net *.split)
[09:08:13] *** Quits: scoobydoo (~scooby@user/scoobydoo) (*.net *.split)
[09:08:13] *** Quits: peeps[zen] (~peepsalot@openscad/peepsalot) (*.net *.split)
[09:08:13] *** Quits: itachi19 (~itachi19@46.232.210.60) (*.net *.split)
[09:08:13] *** Quits: hid3 (~arnoldas@78.157.71.116) (*.net *.split)
[09:08:13] *** Quits: przemoc (~przemoc@89-72-24-4.dynamic.chello.pl) (*.net *.split)
[09:08:13] *** Quits: _val_ (~valentin@82-169-14-137.biz.kpn.net) (*.net *.split)
[09:08:13] *** Quits: wwilliam (~afernande@63.240.73.102) (*.net *.split)
[09:08:13] *** Quits: bobo (~bobo@irc.webirc.eu) (*.net *.split)
[09:08:13] *** Quits: armands_ (~armands@46.109.8.165) (*.net *.split)
[09:08:13] *** Quits: [R] (~rs@genoce.org) (*.net *.split)
[09:08:13] *** Quits: queue- (~nerd@user/queue/x-7267619) (*.net *.split)
[09:08:13] *** Quits: dino- (~dino@user/din0) (*.net *.split)
[09:08:13] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (*.net *.split)
[09:08:13] *** Quits: muirrum (~muirrum@sourcehut/user/muirrum) (*.net *.split)
[09:08:13] *** Quits: jwash (~jwash@c-73-254-46-148.hsd1.wa.comcast.net) (*.net *.split)
[09:08:13] *** Quits: sixwheeledbeast (~zem@user/sixwheeledbeast) (*.net *.split)
[09:08:13] *** Quits: Spydar007 (~spydar007@user/spydar007) (*.net *.split)
[09:08:13] *** Quits: simplicity (~yti@user/simplicity) (*.net *.split)
[09:08:13] *** Quits: stevenm (~stevenm@stevenm.keele.netcentral.co.uk) (*.net *.split)
[09:08:13] *** Quits: setesat (~setesat@94.4.156.220) (*.net *.split)
[09:08:13] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (*.net *.split)
[09:08:13] *** Quits: MDingas (~MDingas@static.155.53.55.162.clients.your-server.de) (*.net *.split)
[09:08:13] *** Quits: dlam (~dlam@dlam.me) (*.net *.split)
[09:08:13] *** Quits: pooby (~pooby@167.99.100.8) (*.net *.split)
[09:08:13] *** Quits: voiceofreason (~voiceofre@207.148.10.181) (*.net *.split)
[09:08:13] *** Quits: whaa (~whaa@c-75-67-72-65.hsd1.ma.comcast.net) (*.net *.split)
[09:08:13] *** Quits: compuguy (~ahall@user/compuguy) (*.net *.split)
[09:08:13] *** Quits: bertieb (~bertieb@217.155.39.147) (*.net *.split)
[09:08:13] *** Quits: hubvu_ (sid495858@tinside.irccloud.com) (*.net *.split)
[09:08:13] *** Quits: sahilister (~sahiliste@user/sahilister) (*.net *.split)
[09:08:13] *** Quits: koollman (~samson_t@user/koollman) (*.net *.split)
[09:08:13] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (*.net *.split)
[09:08:13] *** Quits: Soliton (~Soliton@wesnoth/developer/soliton) (*.net *.split)
[09:08:13] *** Quits: tinystoat (~squeek@user/tinystoat) (*.net *.split)
[09:08:13] *** Quits: phogg (~phogg@static-108-51-94-2.washdc.fios.verizon.net) (*.net *.split)
[09:08:13] *** Quits: nickodd (~nickodd@user/nickodd) (*.net *.split)
[09:08:13] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (*.net *.split)
[09:08:13] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (*.net *.split)
[09:08:13] *** Quits: n4dir (~user@mue-88-130-56-036.dsl.tropolys.de) (*.net *.split)
[09:08:13] *** Quits: johnjaye (~pi@173.209.65.233) (*.net *.split)
[09:08:13] *** Quits: Guest2087 (uid530989@id-530989.helmsley.irccloud.com) (*.net *.split)
[09:08:13] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (*.net *.split)
[09:08:13] *** Quits: vlm (~vlm@user/vlm) (*.net *.split)
[09:08:13] *** Quits: edlou (uid413273@id-413273.helmsley.irccloud.com) (*.net *.split)
[09:08:13] *** Quits: bertptrs (~quassel@user/bertptrs) (*.net *.split)
[09:08:14] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (*.net *.split)
[09:08:14] *** Quits: Oleg (~Oleg@ool-45745511.dyn.optonline.net) (*.net *.split)
[09:08:14] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (*.net *.split)
[09:08:14] *** Quits: kj (~kj@kj.aerisnetwork.net) (*.net *.split)
[09:08:14] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (*.net *.split)
[09:08:14] *** Quits: MonoL (~MonoL@user/MonoL) (*.net *.split)
[09:08:14] *** Quits: hqdruxn08 (~hqdruxn08@user/hqdruxn08) (*.net *.split)
[09:08:14] *** Quits: TheSilentLink (~TheSilent@user/thesilentlink) (*.net *.split)
[09:08:14] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (*.net *.split)
[09:08:14] *** Quits: boreas (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2) (*.net *.split)
[09:08:14] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (*.net *.split)
[09:08:14] *** Quits: maryo87 (~Maryo@user/maryo) (*.net *.split)
[09:08:14] *** Quits: hdb2 (~josh@user/hdb2) (*.net *.split)
[09:08:14] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (*.net *.split)
[09:08:14] *** Quits: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net) (*.net *.split)
[09:08:14] *** Quits: tercaL (~tercaL@user/tercal) (*.net *.split)
[09:08:14] *** Quits: dmonschein (dmonschein@2600:3c03::f03c:91ff:fe05:7562) (*.net *.split)
[09:08:14] *** Quits: skipper (~whatsupbo@user/scobydoo) (*.net *.split)
[09:08:14] *** Quits: goose (goose@bucket.goose.ws) (*.net *.split)
[09:08:14] *** Quits: tsp (~tsp@srv1.xen.prgmr.com) (*.net *.split)
[09:08:14] *** Quits: hays (rootvegeta@fsf/member/hays) (*.net *.split)
[09:08:14] *** Quits: bloodElk (~bloodElk@user/bloodelk) (*.net *.split)
[09:08:14] *** Quits: odc (sid197788@id-197788.helmsley.irccloud.com) (*.net *.split)
[09:08:14] *** Quits: ztrawhcse (3d1f427b6a@archlinux/bugwrangler/eschwartz) (*.net *.split)
[09:08:14] *** Quits: _sgen (~sgen@2607:fea8:7ce1:c8e0:ec63:8eee:4635:2aa8) (*.net *.split)
[09:08:14] *** Quits: Furai (~Furai@furai.pl) (*.net *.split)
[09:08:14] *** Quits: dre (~dre@2001:8003:c932:c301:77c0:cff4:f6dd:6abf) (*.net *.split)
[09:08:14] *** Quits: CoreISP (~LvH@simplemachines/serverteam/CoreISP) (*.net *.split)
[09:08:14] *** Quits: XV8 (~XV8@2601:5cb:c001:50:f81d:9eae:67e3:1b35) (*.net *.split)
[09:08:14] *** Quits: oprypin (~irc@pryp.in) (*.net *.split)
[09:08:14] *** Quits: CrtxReavr (crtxreavr@shodan.trioptimum.com) (*.net *.split)
[09:08:14] *** Quits: BlueShark (sid10311@user/blueshark) (*.net *.split)
[09:08:14] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (*.net *.split)
[09:08:14] *** Quits: dunc (sid16@id-16.uxbridge.irccloud.com) (*.net *.split)
[09:08:14] *** Quits: karstensrage (~karstensr@user/karstensrage) (*.net *.split)
[09:08:14] *** Quits: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8) (*.net *.split)
[09:08:14] *** Quits: Murray7501 (~Murray@89.109-247-180.customer.lyse.net) (*.net *.split)
[09:08:14] *** Quits: waxfire6 (~waxfire@65.119.2.240) (*.net *.split)
[09:08:14] *** Quits: SuperLag (~akulbe@user/superlag) (*.net *.split)
[09:08:14] *** Quits: kolbe (~kolbe@user/kolbe) (*.net *.split)
[09:08:14] *** Quits: int (~int@0x4.cx) (*.net *.split)
[09:08:14] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (*.net *.split)
[09:08:14] *** Quits: Sketch (sketch@2604:180:2::a506:5c0d) (*.net *.split)
[09:08:14] *** Quits: gpol (~gpol@135-23-207-205.cpe.pppoe.ca) (*.net *.split)
[09:08:14] *** Quits: PeGaSuS (ubuntu@user/pegasus) (*.net *.split)
[09:08:14] *** Quits: hentai (~hentai@user/hentai) (*.net *.split)
[09:08:14] *** Quits: bidouille (~user_name@trois.potager.org) (*.net *.split)
[09:08:14] *** Quits: cornfeedhobo (~cornfeedh@user/cornfeedhobo) (*.net *.split)
[09:08:14] *** Quits: fsg (^^@2600:3c00::f03c:92ff:fec6:da18) (*.net *.split)
[09:08:14] *** Quits: tm512 (~tm512@user/tm512) (*.net *.split)
[09:08:14] *** Quits: edr (~edr@user/edr) (*.net *.split)
[09:08:14] *** Quits: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4) (*.net *.split)
[09:08:14] *** Quits: Blondie101010 (~Blondie10@user/blondie101010) (*.net *.split)
[09:08:14] *** Quits: swoolley (~seth@user/swoolley) (*.net *.split)
[09:08:14] *** Quits: lazycat (~lazycat@user/lazycat) (*.net *.split)
[09:08:14] *** Quits: davef (dave@user/davef) (*.net *.split)
[09:08:14] *** Quits: fluter (~fluter@user/fluter) (*.net *.split)
[09:08:14] *** Quits: nochi (~nochi@2a01:4f8:10b:3074::4) (*.net *.split)
[09:08:14] *** Quits: moviuro (~moviuro@znc.popho.be) (*.net *.split)
[09:08:14] *** Quits: aaro (aaro@user/aaro) (*.net *.split)
[09:08:14] *** Quits: shbot (~shbot@37.139.2.101) (*.net *.split)
[09:08:15] *** Quits: Bercik (~Redomen@user/bercik) (*.net *.split)
[09:08:15] *** Quits: chrfle (~chrfle@217-209-195-249-no206.tbcn.telia.com) (*.net *.split)
[09:08:15] *** Quits: mixfix41 (~homefame@user/mixfix41) (*.net *.split)
[09:08:15] *** Quits: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070) (*.net *.split)
[09:08:15] *** Quits: avu (~jan@user/avu) (*.net *.split)
[09:08:15] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (*.net *.split)
[09:08:15] *** Quits: grossing (~grossing@user/grossing) (*.net *.split)
[09:08:15] *** Quits: rkta (~rkta@2001:4ba0:cafe:eaf::1) (*.net *.split)
[09:08:15] *** Quits: af (~af@awalgarg.me) (*.net *.split)
[09:08:15] *** Quits: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf) (*.net *.split)
[09:08:15] *** Quits: akelly (24aca7a63b@2604:bf00:561:2000::152) (*.net *.split)
[09:08:15] *** Quits: hwrd (aa272caead@2604:bf00:561:2000::137) (*.net *.split)
[09:08:15] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (*.net *.split)
[09:08:15] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (*.net *.split)
[09:08:15] *** Quits: ProperNoun (~holyShizn@user/propernoun) (*.net *.split)
[09:08:15] *** Quits: sky- (~sky@user/sky-) (*.net *.split)
[09:08:15] *** Quits: lewisje (~lewisje@72.49.207.113) (*.net *.split)
[09:08:15] *** Quits: Andrew (andrew@andrewyu.org) (*.net *.split)
[09:08:15] *** Quits: Chex (~Chex@user/chex) (*.net *.split)
[09:08:15] *** Quits: Mmike_ (~mario@li1411-253.members.linode.com) (*.net *.split)
[09:08:15] *** Quits: shush (sid21719@id-21719.tinside.irccloud.com) (*.net *.split)
[09:08:15] *** Quits: Razva (sid17541@user/razva) (*.net *.split)
[09:08:15] *** Quits: jsatk__ (sid304796@id-304796.helmsley.irccloud.com) (*.net *.split)
[09:08:15] *** Quits: overrider (~overrider@user/overrider) (*.net *.split)
[09:08:15] *** Quits: raz (~raz@user/raz) (*.net *.split)
[09:08:16] *** Quits: cfaber (~cfaber@c-71-237-84-236.hsd1.co.comcast.net) (*.net *.split)
[09:08:16] *** Quits: bunny (~bunny@user/bunny) (*.net *.split)
[09:08:16] *** Quits: xayto (~xayto@cpc69403-oxfd27-2-0-cust296.4-3.cable.virginm.net) (*.net *.split)
[09:08:16] *** Quits: hata (~hata@hata.moe) (*.net *.split)
[09:08:16] *** Quits: eldritch_ (~eldritch@user/eldritch/x-9272577) (*.net *.split)
[09:08:16] *** Quits: zeamp (ze@korea.wwwnet.org) (*.net *.split)
[09:08:16] *** Quits: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr) (*.net *.split)
[09:08:16] *** Quits: ninjabuffet (~ninjabuff@user/ninjabuffet) (*.net *.split)
[09:08:16] *** Quits: ParkerR (~ParkerR@znc.withg.org) (*.net *.split)
[09:08:16] *** Quits: p3rL (~uid0@user/p3rl) (*.net *.split)
[09:08:16] *** Quits: az (az@user/azz) (*.net *.split)
[09:08:16] *** Quits: teear (~teear@cbharraste.eu) (*.net *.split)
[09:08:16] *** Quits: dramz (~anders@145.51-174-96.customer.lyse.net) (*.net *.split)
[09:08:16] *** Quits: dstein64 (~dstein64@dannyadam.com) (*.net *.split)
[09:08:16] *** Quits: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net) (*.net *.split)
[09:08:16] *** Quits: vmeson (~rmacleod@198-48-226-187.cpe.pppoe.ca) (*.net *.split)
[09:08:16] *** Quits: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de) (*.net *.split)
[09:08:16] *** Quits: edk (edk@libera/staff/edk) (*.net *.split)
[09:08:16] *** Quits: kyr (~kyr@167.71.50.12) (*.net *.split)
[09:08:16] *** Quits: magyar (~magyar@user/magyar) (*.net *.split)
[09:08:16] *** Quits: winter (~winter@user/winter) (*.net *.split)
[09:08:16] *** Quits: hyper_ch (~hyper_ch@user/hyper-ch/x-8215596) (*.net *.split)
[09:08:16] *** Quits: Gerula (~Gerula@user/gerula) (*.net *.split)
[09:08:16] *** Quits: lopid (~lopid@user/lopid) (*.net *.split)
[09:08:16] *** Quits: useretail (~useretail@185.132.19.151) (*.net *.split)
[09:08:16] *** Quits: noarb (~noarb@user/noarb) (*.net *.split)
[09:08:16] *** Quits: at_work (~at_work@user/at-work/x-5282331) (*.net *.split)
[09:08:16] *** Quits: Baggypants (~baggypant@cpc94362-ward12-2-0-cust376.10-2.cable.virginm.net) (*.net *.split)
[09:08:16] *** Quits: deltab (~deltab@user/deltab) (*.net *.split)
[09:08:16] *** Quits: lungaro (~lungaro@99-117-118-33.lightspeed.sndgca.sbcglobal.net) (*.net *.split)
[09:08:16] *** Quits: Bayes (~Bayes@user/bayes) (*.net *.split)
[09:08:16] *** Quits: cim (~cim@205.185.117.110) (*.net *.split)
[09:08:16] *** Quits: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (*.net *.split)
[09:08:16] *** Quits: niko (~niko@libera/staff/niko) (*.net *.split)
[09:08:16] *** Quits: gr33nR10t (~greenriot@user/gr33nr10t) (*.net *.split)
[09:08:16] *** Quits: joo-_ (~joo-_@fsf/member/joo--) (*.net *.split)
[09:08:16] *** Quits: wiscii (~tct@user/wiscii) (*.net *.split)
[09:08:16] *** Quits: TMan459 (~TMan459@068-113-235-150.res.spectrum.com) (*.net *.split)
[09:08:16] *** Quits: iliv (~iliv@user/iliv) (*.net *.split)
[09:08:16] *** Quits: bliminse (~bliminse@host86-188-36-166.range86-188.btcentralplus.com) (*.net *.split)
[09:08:16] *** Quits: slaughter (~slaughter@europa.whatbox.ca) (*.net *.split)
[09:08:16] *** Quits: omnigoat (~omnigoat@user/omnigoat) (*.net *.split)
[09:08:16] *** Quits: obiwahn (~heini@user/obiwahn) (*.net *.split)
[09:08:16] *** Quits: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com) (*.net *.split)
[09:08:16] *** Quits: chunky (~chunky@i.dont.know.how.com.puters.work) (*.net *.split)
[09:08:16] *** Quits: tccki (~tccki@box.webslate.co.nz) (*.net *.split)
[09:08:16] *** Quits: tnewman (~tnewman@61-216-158-211.hinet-ip.hinet.net) (*.net *.split)
[09:08:16] *** Quits: lorimer (~lorimer@user/lorimer) (*.net *.split)
[09:08:16] *** Quits: bkhl (~bkhl@user/bkhl) (*.net *.split)
[09:08:16] *** Quits: invra (~invra@mail.aletheianature.es) (*.net *.split)
[09:08:16] *** Quits: rawgreaze (~rawgreaze@user/rawgreaze) (*.net *.split)
[09:08:16] *** Quits: Memory (~user_name@user/memory) (*.net *.split)
[09:08:16] *** Quits: randm (~randm@user/randm) (*.net *.split)
[09:08:16] *** Quits: eggbean (~eggbean@user/eggbean) (*.net *.split)
[09:08:16] *** Quits: indy (~indy@dsl-static-104.213-160-167.telecom.sk) (*.net *.split)
[09:08:16] *** Quits: chemsmith (~chemsmith@user/chemsmith) (*.net *.split)
[09:08:16] *** Quits: steam (~steam@user/steam) (*.net *.split)
[09:08:16] *** Quits: unixman_home (~unixman2@62-199-137-216.mtaonline.net) (*.net *.split)
[09:08:17] *** Quits: Scarecr0w (scarecr0w@user/scarecr0w) (*.net *.split)
[09:08:17] *** Quits: GTAXL (~gtaxlnetw@user/gtaxl) (*.net *.split)
[09:08:17] *** Quits: juhop (~anon@192.3.81.147) (*.net *.split)
[09:08:17] *** Quits: fcser (~fcser@booty.farted.net) (*.net *.split)
[09:08:17] *** Quits: gumbo (~joeb@user/gumbo) (*.net *.split)
[09:08:17] *** Quits: BUSY (~BUSY@user/busy) (*.net *.split)
[09:08:17] *** Quits: flying_sausages (~flying_sa@user/flying-sausages/x-2113186) (*.net *.split)
[09:08:17] *** Quits: Oddly (~sacr@mailserver.rshs.nl) (*.net *.split)
[09:08:17] *** Quits: YoungFrog (~youngfrog@39.129-180-91.adsl-dyn.isp.belgacom.be) (*.net *.split)
[09:08:17] *** Quits: lunario (~no@vmi455770.contaboserver.net) (*.net *.split)
[09:08:17] *** Quits: guifipedro (~quassel@207.188.174.249) (*.net *.split)
[09:08:17] *** Quits: mingdao (~mingdao@wireguard/tunneler/mingdao) (*.net *.split)
[09:08:17] *** Quits: DLange (~DLange@about/linux/staff/DLange) (*.net *.split)
[09:08:17] *** Quits: greybot (~greybot@remote.wooledge.org) (*.net *.split)
[09:08:17] *** Quits: Pokey (~pokey@spikeyCactus/hoosky) (*.net *.split)
[09:08:17] *** Quits: steven_saus (~steven_sa@cpe-74-131-36-220.kya.res.rr.com) (*.net *.split)
[09:08:17] *** Quits: w0ng (~w0ng@103.1.212.158) (*.net *.split)
[09:08:17] *** Quits: d1rewolf (sid312924@id-312924.helmsley.irccloud.com) (*.net *.split)
[09:08:17] *** Quits: Exterminador (sid116151@user/pegasus) (*.net *.split)
[09:08:17] *** heiner is now known as boreas
[09:08:22] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Read error: Connection reset by peer)
[09:08:38] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[09:08:56] <pj> ...and there it goes
[09:09:29] <larryv> D:
[09:12:21] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Ping timeout: 276 seconds)
[09:12:25] *** Quits: bluedust (~bluedust@59.89.212.127) (Ping timeout: 256 seconds)
[09:12:25] *** Quits: phr3ak (~noreply@gnet.hu) (Ping timeout: 256 seconds)
[09:12:27] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 250 seconds)
[09:13:03] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[09:13:51] *** Joins: phr3ak (~noreply@gnet.hu)
[09:14:47] *** Joins: fef (~thedawn@user/thedawn)
[09:16:22] *** Joins: bluedust (~bluedust@59.89.212.127)
[09:21:15] *** Joins: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[09:21:15] *** Joins: ninjabuffet (~ninjabuff@user/ninjabuffet)
[09:21:15] *** Joins: ParkerR (~ParkerR@znc.withg.org)
[09:21:15] *** Joins: p3rL (~uid0@user/p3rl)
[09:21:15] *** Joins: az (az@user/azz)
[09:21:15] *** Joins: teear (~teear@cbharraste.eu)
[09:21:15] *** Joins: dramz (~anders@145.51-174-96.customer.lyse.net)
[09:21:15] *** Joins: dstein64 (~dstein64@dannyadam.com)
[09:21:15] *** Joins: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net)
[09:21:15] *** Joins: vmeson (~rmacleod@198-48-226-187.cpe.pppoe.ca)
[09:21:15] *** Joins: winter (~winter@user/winter)
[09:21:15] *** Joins: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de)
[09:21:15] *** Joins: edk (edk@libera/staff/edk)
[09:21:15] *** Joins: kyr (~kyr@167.71.50.12)
[09:21:15] *** Joins: Memory (~user_name@user/memory)
[09:21:15] *** Joins: magyar (~magyar@user/magyar)
[09:21:15] *** Joins: hyper_ch (~hyper_ch@user/hyper-ch/x-8215596)
[09:21:15] *** Joins: Gerula (~Gerula@user/gerula)
[09:21:15] *** Joins: lopid (~lopid@user/lopid)
[09:21:15] *** Joins: useretail (~useretail@185.132.19.151)
[09:21:15] *** Joins: noarb (~noarb@user/noarb)
[09:21:15] *** Joins: at_work (~at_work@user/at-work/x-5282331)
[09:21:15] *** Joins: Baggypants (~baggypant@cpc94362-ward12-2-0-cust376.10-2.cable.virginm.net)
[09:21:15] *** Joins: deltab (~deltab@user/deltab)
[09:21:15] *** Joins: lungaro (~lungaro@99-117-118-33.lightspeed.sndgca.sbcglobal.net)
[09:21:15] *** Joins: Bayes (~Bayes@user/bayes)
[09:21:15] *** Joins: cim (~cim@205.185.117.110)
[09:21:15] *** Joins: niko (~niko@libera/staff/niko)
[09:21:15] *** Joins: gr33nR10t (~greenriot@user/gr33nr10t)
[09:21:15] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[09:21:15] *** Joins: wiscii (~tct@user/wiscii)
[09:21:15] *** Joins: TMan459 (~TMan459@068-113-235-150.res.spectrum.com)
[09:21:15] *** Joins: iliv (~iliv@user/iliv)
[09:21:15] *** Joins: bliminse (~bliminse@host86-188-36-166.range86-188.btcentralplus.com)
[09:21:15] *** Joins: slaughter (~slaughter@europa.whatbox.ca)
[09:21:15] *** Joins: omnigoat (~omnigoat@user/omnigoat)
[09:21:15] *** Joins: obiwahn (~heini@user/obiwahn)
[09:21:15] *** Joins: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com)
[09:21:15] *** Joins: chunky (~chunky@i.dont.know.how.com.puters.work)
[09:21:15] *** Joins: tnewman (~tnewman@61-216-158-211.hinet-ip.hinet.net)
[09:21:15] *** Joins: tccki (~tccki@box.webslate.co.nz)
[09:21:15] *** Joins: lorimer (~lorimer@user/lorimer)
[09:21:15] *** Joins: bkhl (~bkhl@user/bkhl)
[09:21:15] *** Joins: invra (~invra@mail.aletheianature.es)
[09:21:15] *** Joins: rawgreaze (~rawgreaze@user/rawgreaze)
[09:21:15] *** Joins: randm (~randm@user/randm)
[09:21:15] *** Joins: eggbean (~eggbean@user/eggbean)
[09:21:15] *** Joins: indy (~indy@dsl-static-104.213-160-167.telecom.sk)
[09:21:15] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[09:21:15] *** Joins: steam (~steam@user/steam)
[09:21:15] *** Joins: unixman_home (~unixman2@62-199-137-216.mtaonline.net)
[09:21:15] *** Joins: Scarecr0w (scarecr0w@user/scarecr0w)
[09:21:15] *** Joins: GTAXL (~gtaxlnetw@user/gtaxl)
[09:21:15] *** Joins: juhop (~anon@192.3.81.147)
[09:21:15] *** Joins: fcser (~fcser@booty.farted.net)
[09:21:15] *** Joins: gumbo (~joeb@user/gumbo)
[09:21:15] *** Joins: BUSY (~BUSY@user/busy)
[09:21:15] *** Joins: flying_sausages (~flying_sa@user/flying-sausages/x-2113186)
[09:21:15] *** Joins: Oddly (~sacr@mailserver.rshs.nl)
[09:21:15] *** Joins: YoungFrog (~youngfrog@39.129-180-91.adsl-dyn.isp.belgacom.be)
[09:21:15] *** Joins: lunario (~no@vmi455770.contaboserver.net)
[09:21:15] *** Joins: guifipedro (~quassel@207.188.174.249)
[09:21:15] *** Joins: mingdao (~mingdao@wireguard/tunneler/mingdao)
[09:21:15] *** Joins: DLange (~DLange@about/linux/staff/DLange)
[09:21:15] *** Joins: greybot (~greybot@remote.wooledge.org)
[09:21:15] *** Joins: Pokey (~pokey@spikeyCactus/hoosky)
[09:21:15] *** Joins: steven_saus (~steven_sa@cpe-74-131-36-220.kya.res.rr.com)
[09:22:43] *** boreas is now known as 076AAFO7U
[09:22:45] *** Joins: n4dir (~user@mue-88-130-56-036.dsl.tropolys.de)
[09:22:45] *** Joins: johnjaye (~pi@173.209.65.233)
[09:22:45] *** Joins: Guest2087 (uid530989@id-530989.helmsley.irccloud.com)
[09:22:45] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[09:22:45] *** Joins: vlm (~vlm@user/vlm)
[09:22:45] *** Joins: edlou (uid413273@id-413273.helmsley.irccloud.com)
[09:22:45] *** Joins: bertptrs (~quassel@user/bertptrs)
[09:22:45] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[09:22:45] *** Joins: Oleg (~Oleg@ool-45745511.dyn.optonline.net)
[09:22:45] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[09:22:45] *** Joins: kj (~kj@kj.aerisnetwork.net)
[09:22:45] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[09:22:45] *** Joins: MonoL (~MonoL@user/MonoL)
[09:22:45] *** Joins: hqdruxn08 (~hqdruxn08@user/hqdruxn08)
[09:22:45] *** Joins: TheSilentLink (~TheSilent@user/thesilentlink)
[09:22:45] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[09:22:45] *** Joins: boreas (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[09:22:45] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[09:22:45] *** Joins: maryo87 (~Maryo@user/maryo)
[09:22:45] *** Joins: hdb2 (~josh@user/hdb2)
[09:22:45] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[09:22:45] *** Joins: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net)
[09:22:45] *** Joins: tercaL (~tercaL@user/tercal)
[09:22:45] *** Joins: skipper (~whatsupbo@user/scobydoo)
[09:22:45] *** Joins: dmonschein (dmonschein@2600:3c03::f03c:91ff:fe05:7562)
[09:22:45] *** Joins: goose (goose@bucket.goose.ws)
[09:22:45] *** Joins: tsp (~tsp@srv1.xen.prgmr.com)
[09:22:45] *** Joins: hays (rootvegeta@fsf/member/hays)
[09:22:45] *** Joins: bloodElk (~bloodElk@user/bloodelk)
[09:22:45] *** Joins: odc (sid197788@id-197788.helmsley.irccloud.com)
[09:22:45] *** Joins: ztrawhcse (3d1f427b6a@archlinux/bugwrangler/eschwartz)
[09:22:45] *** Joins: _sgen (~sgen@2607:fea8:7ce1:c8e0:ec63:8eee:4635:2aa8)
[09:22:45] *** Joins: Furai (~Furai@furai.pl)
[09:22:45] *** Joins: dre (~dre@2001:8003:c932:c301:77c0:cff4:f6dd:6abf)
[09:22:45] *** Joins: XV8 (~XV8@2601:5cb:c001:50:f81d:9eae:67e3:1b35)
[09:22:45] *** Joins: oprypin (~irc@pryp.in)
[09:22:45] *** Joins: CrtxReavr (crtxreavr@shodan.trioptimum.com)
[09:22:45] *** Joins: BlueShark (sid10311@user/blueshark)
[09:22:45] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[09:22:45] *** Joins: dunc (sid16@id-16.uxbridge.irccloud.com)
[09:22:45] *** Joins: karstensrage (~karstensr@user/karstensrage)
[09:22:45] *** Joins: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8)
[09:22:45] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[09:22:45] *** Joins: waxfire6 (~waxfire@65.119.2.240)
[09:22:45] *** Joins: SuperLag (~akulbe@user/superlag)
[09:22:45] *** Joins: kolbe (~kolbe@user/kolbe)
[09:22:45] *** Joins: int (~int@0x4.cx)
[09:22:45] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[09:22:45] *** Joins: Sketch (sketch@2604:180:2::a506:5c0d)
[09:22:45] *** Joins: gpol (~gpol@135-23-207-205.cpe.pppoe.ca)
[09:22:45] *** Joins: hentai (~hentai@user/hentai)
[09:22:45] *** Joins: PeGaSuS (ubuntu@user/pegasus)
[09:22:45] *** Joins: bidouille (~user_name@trois.potager.org)
[09:22:45] *** Joins: cornfeedhobo (~cornfeedh@user/cornfeedhobo)
[09:22:45] *** Joins: fsg (^^@2600:3c00::f03c:92ff:fec6:da18)
[09:22:45] *** Joins: tm512 (~tm512@user/tm512)
[09:22:45] *** Joins: edr (~edr@user/edr)
[09:22:45] *** Joins: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4)
[09:22:45] *** Joins: Blondie101010 (~Blondie10@user/blondie101010)
[09:22:45] *** Joins: swoolley (~seth@user/swoolley)
[09:22:45] *** Joins: lazycat (~lazycat@user/lazycat)
[09:22:45] *** Joins: davef (dave@user/davef)
[09:22:45] *** Joins: fluter (~fluter@user/fluter)
[09:22:45] *** Joins: Andrew (andrew@andrewyu.org)
[09:22:45] *** Joins: nochi (~nochi@2a01:4f8:10b:3074::4)
[09:22:45] *** Joins: moviuro (~moviuro@znc.popho.be)
[09:22:45] *** Joins: aaro (aaro@user/aaro)
[09:22:45] *** Joins: shbot (~shbot@37.139.2.101)
[09:22:45] *** Joins: Bercik (~Redomen@user/bercik)
[09:22:45] *** Joins: chrfle (~chrfle@217-209-195-249-no206.tbcn.telia.com)
[09:22:45] *** Joins: mixfix41 (~homefame@user/mixfix41)
[09:22:45] *** Joins: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070)
[09:22:45] *** Joins: avu (~jan@user/avu)
[09:22:45] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[09:22:45] *** Joins: grossing (~grossing@user/grossing)
[09:22:45] *** Joins: rkta (~rkta@2001:4ba0:cafe:eaf::1)
[09:22:45] *** Joins: af (~af@awalgarg.me)
[09:22:45] *** Joins: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf)
[09:22:45] *** Joins: hwrd (aa272caead@2604:bf00:561:2000::137)
[09:22:45] *** Joins: akelly (24aca7a63b@2604:bf00:561:2000::152)
[09:22:45] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[09:22:45] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[09:22:45] *** Joins: ProperNoun (~holyShizn@user/propernoun)
[09:22:45] *** Joins: sky- (~sky@user/sky-)
[09:22:45] *** Joins: lewisje (~lewisje@72.49.207.113)
[09:22:45] *** Joins: Chex (~Chex@user/chex)
[09:22:45] *** Joins: Mmike_ (~mario@li1411-253.members.linode.com)
[09:22:45] *** Joins: shush (sid21719@id-21719.tinside.irccloud.com)
[09:22:45] *** Joins: Razva (sid17541@user/razva)
[09:22:45] *** Joins: jsatk__ (sid304796@id-304796.helmsley.irccloud.com)
[09:22:45] *** Joins: overrider (~overrider@user/overrider)
[09:22:45] *** Joins: raz (~raz@user/raz)
[09:22:45] *** Joins: cfaber (~cfaber@c-71-237-84-236.hsd1.co.comcast.net)
[09:22:45] *** Joins: bunny (~bunny@user/bunny)
[09:22:45] *** Joins: xayto (~xayto@cpc69403-oxfd27-2-0-cust296.4-3.cable.virginm.net)
[09:22:45] *** Joins: hata (~hata@hata.moe)
[09:22:45] *** Joins: eldritch_ (~eldritch@user/eldritch/x-9272577)
[09:22:45] *** Joins: zeamp (ze@korea.wwwnet.org)
[09:22:45] *** Joins: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr)
[09:23:00] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[09:23:35] *** Joins: dreamon (~dreamon@pd9503a7e.dip0.t-ipconnect.de)
[09:23:35] *** Joins: Obscenity (~Obscenity@user/obscenity)
[09:23:35] *** Joins: mooz (~none@173.208.98.70)
[09:23:35] *** Joins: rcernin (~rcernin@101.189.141.138)
[09:23:35] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[09:23:35] *** Joins: masoudd (~masoudd@user/masoudd)
[09:23:35] *** Joins: CoolerY (~CoolerX@user/coolerx)
[09:23:35] *** Joins: Swahili_ (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[09:23:35] *** Joins: Nintendo (~smb3@user/great)
[09:23:35] *** Joins: nitro_ (~nitro_@c-73-165-183-88.hsd1.pa.comcast.net)
[09:23:35] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[09:23:35] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[09:23:35] *** Joins: karabaja4 (~karabaja4@dh207-95-244.xnet.hr)
[09:23:35] *** Joins: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net)
[09:23:35] *** Joins: unop (~unop@195.91.14.193)
[09:23:35] *** Joins: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de)
[09:23:35] *** Joins: ttys000 (~ttys000@user/ttys000)
[09:23:35] *** Joins: peeps[zen] (~peepsalot@openscad/peepsalot)
[09:23:35] *** Joins: sdu (~sidu@185.44.146.61)
[09:23:35] *** Joins: mpagano (~quassel@gentoo/developer/mpagano)
[09:23:35] *** Joins: TenochSLB (~Tenochyy@108-216-74-215.lightspeed.wchtks.sbcglobal.net)
[09:23:35] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[09:23:35] *** Joins: moldorcoder7 (~moldorcod@37.120.143.28)
[09:23:35] *** Joins: riddle (~riddle@user/riddle)
[09:23:35] *** Joins: skylite_ (~skylite@2E6B2CD6.catv.pool.telekom.hu)
[09:23:35] *** Joins: Gerlo_ (~Gerlo@user/gerlo)
[09:23:35] *** Joins: karakedi (~eAC53C340@user/karakedi)
[09:23:35] *** Joins: Laskolnyk (~wasyl@89-76-136-17.dynamic.chello.pl)
[09:23:35] *** Joins: Roedy (Roedy@user/roedy)
[09:23:35] *** Joins: Tabmow (~tabmow@user/tabmow)
[09:23:35] *** Joins: aidalgol (~aidalgol@user/aidalgol)
[09:23:35] *** Joins: infernix (~nix@spirit.infernix.net)
[09:23:35] *** Joins: axisys (~axisys@ec2-52-207-123-244.compute-1.amazonaws.com)
[09:23:35] *** Joins: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net)
[09:23:35] *** Joins: emg (~emg@cpe-70-93-247-186.natsow.res.rr.com)
[09:23:35] *** Joins: flipchan (~filip@user/flipchan)
[09:23:35] *** Joins: ncrowl (~ncrowl@c-fda770d5.022-170-6c756e3.cust.ownit.se)
[09:23:35] *** Joins: [diablo] (~diablo]@user/diablo/x-9068044)
[09:23:35] *** Joins: Distemper (~harry@li1089-127.members.linode.com)
[09:23:35] *** Joins: maledictium (~crux@bl23-232-57.dsl.telepac.pt)
[09:23:35] *** Joins: polve (~polve@user/polve)
[09:23:35] *** Joins: foul_owl (~kerry@94.140.8.107)
[09:23:35] *** Joins: haliucinas (~haliucina@5.20.153.21)
[09:23:35] *** Joins: Dotz0cat (~Dotz0cat@h55.84.187.173.dynamic.ip.windstream.net)
[09:23:35] *** Joins: mw_ (~mw@catv-80-98-128-161.catv.fixed.vodafone.hu)
[09:23:35] *** Joins: reset (~reset@user/reset)
[09:23:35] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-46-67-70-100-72.dsl.bell.ca)
[09:23:35] *** Joins: zouhair (~zouhair@lnsm1-montreal02-142-119-49-188.internet.virginmobile.ca)
[09:23:35] *** Joins: justGhost (~justache@user/justache)
[09:23:35] *** Joins: Hackerpcs (~user@user/hackerpcs)
[09:23:35] *** Joins: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt)
[09:23:35] *** Joins: samnob (~samnob@user/samnob)
[09:23:35] *** Joins: wodencafe (wodencafe@woden.cafe)
[09:23:35] *** Joins: arooni (~arooni@li1062-244.members.linode.com)
[09:23:35] *** Joins: ds (~ds@user/ds)
[09:23:35] *** Joins: JyZyXy (~jyz@88-112-115-81.elisa-laajakaista.fi)
[09:23:35] *** Joins: dodo (~dodo@user/dodo)
[09:23:35] *** Joins: chodonne (~chodonne@ec2-3-18-56-136.us-east-2.compute.amazonaws.com)
[09:23:35] *** Joins: Dan39 (~dan@user/dan39)
[09:23:35] *** Joins: itu (~wp@wikipedia/itu)
[09:23:35] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[09:23:35] *** Joins: itachi19 (~itachi19@46.232.210.60)
[09:23:35] *** Joins: hid3 (~arnoldas@78.157.71.116)
[09:23:35] *** Joins: przemoc (~przemoc@89-72-24-4.dynamic.chello.pl)
[09:23:35] *** Joins: _val_ (~valentin@82-169-14-137.biz.kpn.net)
[09:23:35] *** Joins: wwilliam (~afernande@63.240.73.102)
[09:23:35] *** Joins: bobo (~bobo@irc.webirc.eu)
[09:23:35] *** Joins: armands_ (~armands@46.109.8.165)
[09:23:35] *** Joins: [R] (~rs@genoce.org)
[09:23:35] *** Joins: queue- (~nerd@user/queue/x-7267619)
[09:23:35] *** Joins: dino- (~dino@user/din0)
[09:23:35] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[09:23:35] *** Joins: muirrum (~muirrum@sourcehut/user/muirrum)
[09:23:35] *** Joins: jwash (~jwash@c-73-254-46-148.hsd1.wa.comcast.net)
[09:23:35] *** Joins: sixwheeledbeast (~zem@user/sixwheeledbeast)
[09:23:35] *** Joins: Spydar007 (~spydar007@user/spydar007)
[09:23:35] *** Joins: simplicity (~yti@user/simplicity)
[09:23:35] *** Joins: stevenm (~stevenm@stevenm.keele.netcentral.co.uk)
[09:23:35] *** Joins: setesat (~setesat@94.4.156.220)
[09:23:35] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[09:23:35] *** Joins: MDingas (~MDingas@static.155.53.55.162.clients.your-server.de)
[09:23:35] *** Joins: dlam (~dlam@dlam.me)
[09:23:35] *** Joins: pooby (~pooby@167.99.100.8)
[09:23:35] *** Joins: voiceofreason (~voiceofre@207.148.10.181)
[09:23:35] *** Joins: whaa (~whaa@c-75-67-72-65.hsd1.ma.comcast.net)
[09:23:35] *** Joins: compuguy (~ahall@user/compuguy)
[09:23:35] *** Joins: bertieb (~bertieb@217.155.39.147)
[09:23:35] *** Joins: hubvu_ (sid495858@tinside.irccloud.com)
[09:23:35] *** Joins: sahilister (~sahiliste@user/sahilister)
[09:23:35] *** Joins: koollman (~samson_t@user/koollman)
[09:23:35] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[09:23:35] *** Joins: Soliton (~Soliton@wesnoth/developer/soliton)
[09:23:35] *** Joins: tinystoat (~squeek@user/tinystoat)
[09:23:35] *** Joins: phogg (~phogg@static-108-51-94-2.washdc.fios.verizon.net)
[09:23:35] *** Joins: nickodd (~nickodd@user/nickodd)
[09:24:07] *** Joins: w0ng (~w0ng@103.1.212.158)
[09:24:51] *** Joins: d1rewolf (sid312924@id-312924.helmsley.irccloud.com)
[09:24:51] *** Joins: Exterminador (sid116151@user/pegasus)
[09:27:26] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (Ping timeout: 250 seconds)
[09:27:43] *** Quits: phr3ak (~noreply@gnet.hu) (Ping timeout: 256 seconds)
[09:27:52] *** Joins: phr3ak (~noreply@gnet.hu)
[09:28:30] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 256 seconds)
[09:28:51] *** Quits: bluedust (~bluedust@59.89.212.127) (Ping timeout: 256 seconds)
[09:28:54] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[09:29:09] *** Quits: demonbane (~demonbane@71.247.72.217) (Ping timeout: 250 seconds)
[09:29:26] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[09:29:54] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[09:29:56] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 252 seconds)
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:30:12] *** Quits: polve (~polve@user/polve) (Ping timeout: 256 seconds)
[09:30:25] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:e15c:b936:df3f:82e6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:30:25] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[09:30:29] *** Joins: demonbane (~demonbane@71.247.72.217)
[09:31:01] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[09:31:09] *** Joins: bluedust (~bluedust@59.89.212.127)
[09:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:31:44] *** Quits: timj (~timj@user/timj) (Ping timeout: 268 seconds)
[09:32:07] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:e15c:b936:df3f:82e6)
[09:32:10] *** Joins: polve (~polve@user/polve)
[09:35:12] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[09:35:32] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:e15c:b936:df3f:82e6) (Client Quit)
[09:36:32] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:37:11] *** Joins: ekathva (~ekathva@2001:999:51:be01:ece4:95d6:ed47:f97a)
[09:37:55] *** Joins: rgrinberg (~textual@187.223.115.137)
[09:38:12] *** Quits: rgrinberg (~textual@187.223.115.137) (Client Quit)
[09:39:49] *** Joins: SWISSMANN (~SWISSMANN@2001-4dd2-5e3c-0-df30-62d1-7594-7534.ipv6dyn.netcologne.de)
[09:42:11] *** Quits: larryv (~larryv@zsh/patchmanager/larryv) (Quit: larryv)
[09:44:43] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 256 seconds)
[09:45:31] *** Joins: timj (~timj@user/timj)
[09:47:18] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 260 seconds)
[09:47:50] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:6cc9:c3d7:2ed9:3825)
[09:51:51] *** Joins: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de)
[09:55:01] *** Joins: karakedi (~eAC53C340@user/karakedi)
[09:56:36] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:57:12] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[09:57:42] *** Quits: SWISSMANN (~SWISSMANN@2001-4dd2-5e3c-0-df30-62d1-7594-7534.ipv6dyn.netcologne.de) (Quit: WeeChat 3.4)
[09:58:39] *** Quits: qub411 (~user@118.209.243.10) (Quit: WeeChat 3.4)
[10:00:10] *** Joins: SWISSMANN (~SWISSMANN@2001-4dd2-5e3c-0-df30-62d1-7594-7534.ipv6dyn.netcologne.de)
[10:00:42] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[10:01:12] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[10:01:50] *** Quits: dtux (~dtux@2601:646:8f00:3f2:ca4d:c18b:77e8:457) (Ping timeout: 252 seconds)
[10:03:37] *** Quits: SWISSMANN (~SWISSMANN@2001-4dd2-5e3c-0-df30-62d1-7594-7534.ipv6dyn.netcologne.de) (Client Quit)
[10:03:50] *** Joins: SWISSMANN (~SWISSMANN@2001-4dd2-5e3c-0-df30-62d1-7594-7534.ipv6dyn.netcologne.de)
[10:05:09] *** Joins: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net)
[10:06:47] *** Joins: museee (~museee@user/museee)
[10:06:49] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 256 seconds)
[10:07:19] *** Quits: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net) (Client Quit)
[10:09:20] *** Joins: fef (~thedawn@user/thedawn)
[10:13:13] *** Quits: TenochSLB (~Tenochyy@108-216-74-215.lightspeed.wchtks.sbcglobal.net) (Quit: Leaving)
[10:13:18] *** Joins: domicron0 (~domicron@gateway/tor-sasl/domicron)
[10:13:52] *** Joins: Mo (~Mo@dynamic-077-000-072-132.77.0.pool.telefonica.de)
[10:14:06] *** Joins: mat001 (~mat001@213.143.69.121)
[10:14:32] *** Quits: domicron (~domicron@gateway/tor-sasl/domicron) (Remote host closed the connection)
[10:14:33] *** domicron0 is now known as domicron
[10:16:42] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[10:18:30] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[10:20:49] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[10:21:23] *** Quits: Guest2087 (uid530989@id-530989.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[10:23:02] *** Joins: jmew (~jmew@user/jmew)
[10:28:41] *** Quits: museee (~museee@user/museee) (Quit: Leaving)
[10:32:38] *** Joins: thevishy (~Nishant@2405:201:f005:c007:3c07:8d1a:dd0:be31)
[10:34:01] *** Quits: kristianpaul (~paul@user/kristianpaul) (Ping timeout: 256 seconds)
[10:34:10] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[10:36:22] *** Joins: kristianpaul (~paul@user/kristianpaul)
[10:36:33] *** Joins: moto (~moto@user/moto)
[10:37:30] *** Quits: apos (~apos@gateway/tor-sasl/apos) (Ping timeout: 276 seconds)
[10:38:46] *** Joins: Xeroine (~Xeroine@user/xeroine)
[10:39:20] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[10:42:18] *** Joins: sinaowolabi_ (~SinaOwola@185.209.196.174)
[10:44:33] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[10:45:19] *** Joins: apos (~apos@gateway/tor-sasl/apos)
[10:45:50] <Xeroine> https://bpa.st/XOFA if I use the alias I get a firefox popup saying profile name is incorrect so I guess if I run "ffox-num 1" then *.nightly$1 isn't converted to *.nightly1, why?
[10:46:24] <Xeroine> in the paste you can see I ran the command directly as well with 1 instead of $1 and it worked
[10:46:48] <osse> Xeroine: you cannot use $1 in aliases. use a function
[10:47:25] <osse> ffox-num() { /usr/local/bin/firefox/firefox --no-remote --profile "/home/xer/.mozilla/firefox/*.nightly$1"; }
[10:48:11] <Xeroine> oh I didn't know that, thanks
[10:49:02] <Xeroine> https://bpa.st/HF7A how come this works tho?
[10:51:23] <osse> it doesn't. not in the way you think
[10:51:42] <osse> the alias is expanded to SOMEVAR= echo {blank} and then you type something else after it
[10:51:48] *** Quits: nunggu (~q@user/nunggu) (Ping timeout: 276 seconds)
[10:51:57] <osse> replace echo with env and you'll see see that SOMEVAR is blank or non-existent
[10:52:21] <Xeroine> oh
[10:52:33] <Xeroine> alright ty
[10:53:23] <osse> !faq 104 > Xeroine
[10:53:23] <greybot> Xeroine: https://mywiki.wooledge.org/BashFAQ/104 -- Why doesn't foo=bar echo "$foo" print bar?
[10:54:11] *** Quits: bluedust (~bluedust@59.89.212.127) (Read error: Connection reset by peer)
[10:54:12] *** Joins: tex (~super@user/dix)
[10:54:17] *** Joins: nunggu (~q@user/nunggu)
[10:54:24] *** Joins: bluedust (~bluedust@103.160.194.110)
[10:59:48] *** Joins: ekathva_ (~ekathva@93-90-58-246.welcomnet.fi)
[11:00:00] *** Quits: unop (~unop@195.91.14.193) (Remote host closed the connection)
[11:00:15] *** Quits: nunggu (~q@user/nunggu) (Ping timeout: 276 seconds)
[11:00:15] *** Joins: unop (~unop@195.91.14.193)
[11:03:43] <ncrowl> NrA=$(( RANDOM%10 )); NrB=$(( RANDOM%10 )); echo "$NrA * $NrB = $(( $NrA * $NrB ))" #Can this be made without variable, pipe?
[11:04:04] *** Quits: kj (~kj@kj.aerisnetwork.net) (Read error: Connection reset by peer)
[11:04:18] *** Joins: kj (~kj@kj.aerisnetwork.net)
[11:04:25] *** Joins: martinus__ (~martin@153.27.202.77.rev.sfr.net)
[11:05:34] *** Joins: MajorBiscuit (~MajorBisc@c-001-021-032.client.tudelft.eduvpn.nl)
[11:06:19] <kurahaupo1> ncrowl: there is no pipe there
[11:06:48] <kurahaupo1> ncrowl: What do you want to achieve?
[11:06:57] <llua> magic
[11:08:31] <kurahaupo1> # echo $(( $( echo $((RANDOM%10)) | tee /dev/stderr ) + $( echo $((RANDOM%10)) | tee /dev/stderr ) ))
[11:08:33] <shbot> kurahaupo1: 2
[11:08:33] <shbot> kurahaupo1: 7
[11:08:33] <shbot> kurahaupo1: 9
[11:09:08] <kurahaupo1> ncrowl: did you mean, you want that output without assigning anything to a variable?
[11:10:09] <kurahaupo1> # echo ${RANDOM: -1:1}+${RANDOM: -1:1} > t ; echo "$(< t) = $(( $(<t) ))" ; r\m t
[11:10:11] <shbot> kurahaupo1: 5+5 = 10
[11:10:34] <ncrowl> karakedi: yea, sortof $1 $2 or $@ (or what the input usetobe)
[11:10:50] <kurahaupo1> ncrowl: try "ku" <tab>
[11:11:59] <kurahaupo1> # set -- ${RANDOM: -1:1}+${RANDOM: -1:1} ; echo "$1 = $(( $1 ))"
[11:12:00] <shbot> kurahaupo1: 7+7 = 14
[11:12:05] <kurahaupo1> # set -- ${RANDOM: -1:1}+${RANDOM: -1:1} ; echo "$1 = $(( $1 ))"
[11:12:07] <shbot> kurahaupo1: 3+2 = 5
[11:12:20] <kurahaupo1> ncrowl: like that ^^^ ?
[11:13:09] <ncrowl> karakedi: yea, thx
[11:13:24] <kurahaupo1> ncrowl: I'm not karakedi
[11:13:48] <ncrowl> sorry. kurahaupo1 (thx)
[11:14:46] *** Quits: rcernin (~rcernin@101.189.141.138) (Quit: WeeChat 3.4)
[11:14:56] *** Quits: n4dir (~user@mue-88-130-56-036.dsl.tropolys.de) (Remote host closed the connection)
[11:15:01] *** Quits: unop (~unop@195.91.14.193) (Remote host closed the connection)
[11:15:37] *** Joins: unop (~unop@195.91.14.193)
[11:17:39] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 256 seconds)
[11:17:46] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[11:18:30] *** Quits: noarb (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[11:20:19] *** Joins: noarb (~noarb@user/noarb)
[11:21:25] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:22:27] *** kurahaupo1 is now known as martin
[11:23:16] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[11:24:11] *** Quits: SWISSMANN (~SWISSMANN@2001-4dd2-5e3c-0-df30-62d1-7594-7534.ipv6dyn.netcologne.de) (Quit: WeeChat 3.4)
[11:25:50] *** Joins: iomari891 (~iomari891@105.112.138.38)
[11:25:59] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 252 seconds)
[11:32:11] <frojnd> I'm trying to build a string that I'm inside for loop. I would also like to add double quote and append comma at the end of a string. Problem is that I also get a comma at the last string which I would not like to append:
[11:32:14] <frojnd> # arr=("foo" "bar" "baz"); s=""; for i in "${arr[@]}"; do s+="\"$i\", "; done; echo $s
[11:32:16] <shbot> frojnd: "foo", "bar", "baz",
[11:32:51] <frojnd> So I could just use cut or smth to cut last comma from the $s ? Or is there a betterway?
[11:32:58] *** Joins: tobybl_ (~tobybl@214.242.200.146.dyn.plus.net)
[11:33:01] *** Quits: tex (~super@user/dix) (Quit: tex)
[11:33:39] *** Joins: nunggu (~q@user/nunggu)
[11:34:21] *** Joins: drd (~drd@93-45-53-200.ip101.fastwebnet.it)
[11:34:26] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[11:34:39] <martin> # arr=( frojnd foo bar baz ) ; printf '"%s", ' "${arr[@]}" ; printf '\n'
[11:34:40] <shbot> martin: "frojnd", "foo", "bar", "baz",
[11:34:41] *** Quits: unop (~unop@195.91.14.193) (Read error: Connection reset by peer)
[11:34:42] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 276 seconds)
[11:34:56] *** Joins: unop (~unop@195.91.14.193)
[11:35:16] *** Quits: unop (~unop@195.91.14.193) (Client Quit)
[11:35:31] <martin> # arr=( frojnd foo bar baz ) ; printf '"%s"' "${arr[0]}" ; printf ', "%s"' "${arr[@]:1}" ; printf '\n'
[11:35:33] <shbot> martin: "frojnd", "foo", "bar", "baz"
[11:36:00] <frojnd> martin: ok but this should be inside variable
[11:36:00] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Ping timeout: 256 seconds)
[11:36:01] <martin> # arr=( frojnd foo bar baz ) ; printf -v var '"%s", ' "${arr[@]}" ; printf '%s\n' "${var%', '}"
[11:36:02] <shbot> martin: "frojnd", "foo", "bar", "baz"
[11:36:08] <frojnd> ah
[11:36:13] *** Joins: Atque (~Atque@user/atque)
[11:36:24] <martin> Why do you want quote marks inside a variable?
[11:36:30] *** Quits: ekathva_ (~ekathva@93-90-58-246.welcomnet.fi) (Remote host closed the connection)
[11:36:39] <frojnd> I will add to json
[11:36:55] *** Joins: unop (~unop@195.91.14.193)
[11:36:57] *** Quits: zaz\ (~zaz@poneybl.eu) (Quit: bye)
[11:37:02] <emanuele6> use jq.
[11:37:44] <emanuele6> # arr=( frojnd foo bar baz ); jq -cn '$ARGS.positional' --args -- "${arr[@]}"
[11:37:46] <shbot> emanuele6: ["frojnd","foo","bar","baz"]
[11:37:54] <martin> Does json prohibit the trailing comma?
[11:37:59] <emanuele6> yes.
[11:38:03] *** Joins: ekathva_ (~ekathva@93-90-58-246.welcomnet.fi)
[11:38:41] *** Joins: rendar (~rendar@user/rendar)
[11:39:09] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[11:39:18] *** Joins: zaz\ (~zaz@poneybl.eu)
[11:40:48] *** martin is now known as kurahaupo
[11:43:34] *** Joins: yustin (~yustin@user/yustin)
[11:46:26] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[11:46:42] *** Joins: Rue_ (~rue@61-231-135-188.dynamic-ip.hinet.net)
[11:47:42] *** Quits: maryo87 (~Maryo@user/maryo) (Quit: Leaving)
[11:49:54] <ncrowl> remove the last comma, pipe  | sed 's/,$/ /'
[11:50:00] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[11:50:28] *** Joins: fef (~thedawn@user/thedawn)
[11:50:36] <emanuele6> don't
[11:51:16] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:6cc9:c3d7:2ed9:3825) (Quit: Client closed)
[11:51:18] *** Quits: dreamon (~dreamon@pd9503a7e.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[11:51:39] <emanuele6> either do it as kurahaupo showed with a PE, or don't add it to begin with using: var=${arr[0]}; printf -v var ', "%s"' "${arr[@]:1}"
[11:51:52] <emanuele6> sed does not make sense here
[11:52:15] <emanuele6> but really don't do it since quoting a string to inject into json putting "" around is a terrible idea
[11:52:21] <emanuele6> just use jq and do it safely
[11:53:04] <emanuele6> ( err:  printf -v var ', "%s"' "${arr[@]:1}"; var=${arr[0]}$var   not the other way around )
[11:53:19] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[11:57:01] <geirha> easy to do with python as well, if jq isn't available but python is
[11:57:04] *** Joins: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys)
[11:58:10] <emanuele6> yeah   python3 -c 'import json, sys; print(json.dumps(sys.argv))' -- "${arr[@]}"
[11:58:12] <emanuele6> something like that
[11:58:40] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 256 seconds)
[11:59:15] <geirha> python3 -c 'import sys, json; json.dump(sys.argv[1:], sys.stdout)' foo bar
[11:59:17] <emanuele6> ( no: python3 -c 'import json, sys; print(json.dumps(sys.argv[1:]))' "${arr[@]}"
[11:59:21] <emanuele6> ah, yes
[11:59:38] <avu> also see `python -mjson.tool`
[11:59:50] *** Quits: bluedust (~bluedust@103.160.194.110) (Remote host closed the connection)
[11:59:55] <emanuele6> without -- and skipping argv[0] and json.dumps can print to stdout directly
[12:00:47] <emanuele6> s/dumps/dump/
[12:01:12] <geirha> -mjson.tool requires json as input though, so not applicable for this specific case
[12:01:17] *** Quits: tobybl_ (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[12:01:36] <emanuele6> -mjson.tool doesn't seem useful here
[12:02:20] <emanuele6> it just json.loads() stdin calls json_dumps_pretty() on it and writes it to stdout
[12:03:28] *** Joins: SWISSMANN (~SWISSMANN@2001-4dd2-5e3c-0-df30-62d1-7594-7534.ipv6dyn.netcologne.de)
[12:04:08] <emanuele6> s/calls json_dumps_pretty()/calls json.dumps() with ident=4/
[12:06:03] *** Joins: adac (~adac@clnet-b03-098.ikbnet.co.at)
[12:06:57] *** Quits: flying_sausages (~flying_sa@user/flying-sausages/x-2113186) (Ping timeout: 240 seconds)
[12:16:11] *** Quits: sinaowolabi_ (~SinaOwola@185.209.196.174) (Ping timeout: 245 seconds)
[12:18:43] *** Joins: _gabriele (~gabriele@host-95-249-111-197.retail.telecomitalia.it)
[12:18:43] *** Quits: _gabriele (~gabriele@host-95-249-111-197.retail.telecomitalia.it) (Changing host)
[12:18:43] *** Joins: _gabriele (~gabriele@user/gabriele)
[12:18:43] *** _gabriele is now known as gabriele
[12:20:05] *** Joins: dreamon (~dreamon@ppp-88-217-91-105.dynamic.mnet-online.de)
[12:28:48] *** Joins: sinaowolabi_ (~SinaOwola@193.27.14.150)
[12:28:55] *** Joins: shad (~shad@user/shad)
[12:29:01] *** Quits: nunggu (~q@user/nunggu) (Remote host closed the connection)
[12:30:58] *** Joins: nunggu (~q@user/nunggu)
[12:32:28] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[12:32:46] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[12:32:57] *** Joins: clime (~clime@37-48-57-231.nat.epc.tmcz.cz)
[12:35:41] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[12:35:46] *** Quits: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[12:36:45] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Read error: Connection reset by peer)
[12:39:20] *** Joins: freep (~freepppp@46.246.189.172.dsl.dyn.forthnet.gr)
[12:40:10] *** Joins: domicron0 (~domicron@gateway/tor-sasl/domicron)
[12:40:26] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 260 seconds)
[12:40:33] *** Quits: ekathva_ (~ekathva@93-90-58-246.welcomnet.fi) (Remote host closed the connection)
[12:41:18] *** Joins: bluedust (~bluedust@103.160.194.110)
[12:41:39] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[12:41:48] *** Joins: john_johnk (~Thunderbi@232.58.140.77.rev.sfr.net)
[12:41:59] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Quit: Leaving)
[12:42:57] *** Quits: domicron (~domicron@gateway/tor-sasl/domicron) (Ping timeout: 276 seconds)
[12:42:58] *** domicron0 is now known as domicron
[12:43:32] *** Joins: arinov (~arinov@213.194.126.155)
[12:52:05] *** Joins: bluedust_ (~bluedust@59.89.212.127)
[12:53:01] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 250 seconds)
[12:55:41] *** Quits: bluedust (~bluedust@103.160.194.110) (Ping timeout: 256 seconds)
[12:56:28] *** Joins: lavaball (felix@31.204.155.215)
[12:57:47] *** Quits: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e) (Ping timeout: 250 seconds)
[12:58:53] *** Joins: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e)
[12:59:55] *** Joins: iomari891 (~iomari891@105.112.138.38)
[13:00:52] *** Joins: tobybl (~tobybl@dhcp-199-233.inf.ed.ac.uk)
[13:01:44] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[13:09:57] *** Quits: gr33nR10t (~greenriot@user/gr33nr10t) (Ping timeout: 240 seconds)
[13:11:23] *** Joins: gr33nR10t (~greenriot@user/gr33nr10t)
[13:14:12] *** Quits: bluedust_ (~bluedust@59.89.212.127) (Remote host closed the connection)
[13:15:59] *** Quits: YHVH (~yhvh@2601:982:8300:8090:a51c:fe3b:be0d:82c0) (Ping timeout: 250 seconds)
[13:20:03] *** Quits: sinaowolabi_ (~SinaOwola@193.27.14.150) (Ping timeout: 256 seconds)
[13:20:23] *** Joins: remirol (~lorimer@user/lorimer)
[13:20:23] *** Quits: lorimer (~lorimer@user/lorimer) (Killed (NickServ (GHOST command used by remirol)))
[13:20:31] *** remirol is now known as lorimer
[13:20:44] *** Joins: luva (~luva@146.70.62.244)
[13:23:06] *** Quits: jmew (~jmew@user/jmew) (Ping timeout: 256 seconds)
[13:28:32] *** Quits: Lunatrius (~Lunatrius@77.38.76.5) (Ping timeout: 268 seconds)
[13:28:42] *** Joins: YHVH (~yhvh@c-98-235-30-231.hsd1.pa.comcast.net)
[13:30:25] *** Joins: laureee (~laureee@p200300c57708aa0080f9192a5b1049e6.dip0.t-ipconnect.de)
[13:32:34] *** Quits: ekathva (~ekathva@2001:999:51:be01:ece4:95d6:ed47:f97a) (Remote host closed the connection)
[13:32:53] *** Joins: ekathva (~ekathva@2001:999:51:be01:60a9:bdc2:476c:b11b)
[13:33:08] *** Quits: fmirkes (~fmirkes@user/fmirkes) (Quit: ZNC - https://znc.in)
[13:33:27] *** Joins: fmirkes (~fmirkes@user/fmirkes)
[13:33:41] *** Joins: sinaowolabi_ (~SinaOwola@185.213.155.232)
[13:34:06] *** Quits: ekathva (~ekathva@2001:999:51:be01:60a9:bdc2:476c:b11b) (Read error: Connection reset by peer)
[13:34:33] *** Joins: ekathva (~ekathva@2001:999:51:be01:2c4a:6b25:b5d5:f2c9)
[13:34:42] *** Quits: petemc (~pete@vps-80fad31a.vps.ovh.net) (Ping timeout: 268 seconds)
[13:36:08] *** Joins: petemc (~pete@vps-80fad31a.vps.ovh.net)
[13:43:30] *** Quits: sinaowolabi_ (~SinaOwola@185.213.155.232) (Ping timeout: 256 seconds)
[13:48:38] *** Joins: irl25519 (~irl25519@2a02:c7f:1ec1:4000:fb1d:8b4f:b34a:83c6)
[13:56:06] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.4)
[13:57:47] *** Quits: unop (~unop@195.91.14.193) (Remote host closed the connection)
[13:58:27] *** Joins: unop (~unop@195.91.14.193)
[13:59:34] <MonoL> Can't find pipe on this 60% keyboard :(
[13:59:42] <MonoL>  fml
[13:59:49] *** Joins: Lunatrius (~Lunatrius@77.38.76.5)
[14:00:33] *** Quits: apos (~apos@gateway/tor-sasl/apos) (Remote host closed the connection)
[14:00:41] *** Joins: Lunatrius` (~Lunatrius@77.38.76.5)
[14:01:14] *** Joins: sinaowolabi_ (~SinaOwola@102.134.114.1)
[14:01:30] <selckin> |
[14:02:58] <MonoL> Thanks
[14:03:15] <Soliton> bind '"pipe":"|"'
[14:04:15] *** Quits: Lunatrius (~Lunatrius@77.38.76.5) (Ping timeout: 256 seconds)
[14:04:15] *** Lunatrius` is now known as Lunatrius
[14:07:11] *** Quits: john_johnk (~Thunderbi@232.58.140.77.rev.sfr.net) (Quit: john_johnk)
[14:08:07] *** Quits: CoolerY (~CoolerX@user/coolerx) (Quit: Leaving)
[14:08:19] *** Joins: vysn (~vysn@user/vysn)
[14:09:02] *** Joins: bluedust (~bluedust@59.89.212.127)
[14:09:21] *** Quits: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[14:10:45] *** Joins: apos (~apos@gateway/tor-sasl/apos)
[14:11:27] *** Joins: john_johnk (~Thunderbi@232.58.140.77.rev.sfr.net)
[14:12:01] *** Joins: seninha (~seninha@user/seninha)
[14:12:45] *** Quits: Nintendo (~smb3@user/great) (Quit: Game over.)
[14:12:51] *** Joins: flying_sausages (~flying_sa@83.149.106.219)
[14:12:51] *** Quits: flying_sausages (~flying_sa@83.149.106.219) (Changing host)
[14:12:51] *** Joins: flying_sausages (~flying_sa@user/flying-sausages/x-2113186)
[14:16:06] *** Quits: john_johnk (~Thunderbi@232.58.140.77.rev.sfr.net) (Client Quit)
[14:16:34] *** Joins: john_johnk (~Thunderbi@232.58.140.77.rev.sfr.net)
[14:18:05] <selckin> didn't know bind worked like that, thats handy
[14:19:08] *** Quits: john_johnk (~Thunderbi@232.58.140.77.rev.sfr.net) (Client Quit)
[14:20:08] *** Quits: Swahili_ (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[14:20:20] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[14:21:18] *** Quits: bluedust (~bluedust@59.89.212.127) (Remote host closed the connection)
[14:21:19] <MonoL> Omg double pipe is only do this secong thing if the first one fails
[14:21:28] <MonoL> second
[14:22:08] <emanuele6> !||
[14:22:08] <greybot> Short-circuit control operators <http://mywiki.wooledge.org/BashSheet#Tests> A || B means "Run A. If A fails, run B." A && B means "Run A. If A succeeds, run B." Example: foobar || { echo "error" >&2; exit 1; }
[14:22:53] <geirha> !&&||
[14:22:53] <greybot> foo && bar || baz is not equivalent to 'if foo; then bar; else baz; fi'. In the former case, baz will happen if *either* foo *or* bar return false. In the latter case, baz will only trigger if foo returns false, regardless of the exit code for bar. See http://mywiki.wooledge.org/BashPitfalls
[14:23:10] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:23:19] *** Quits: kyr (~kyr@167.71.50.12) (Quit: Lost terminal)
[14:23:39] *** Joins: kyr (~kyr@167.71.50.12)
[14:24:05] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[14:24:28] *** Lord_of_Life_ is now known as Lord_of_Life
[14:24:29] <emanuele6> !&&if
[14:24:30] <greybot> Beware: ''a && b || c'' is NOT THE SAME as ''if a; then b; else c; fi''. The former will run 'c' if EITHER 'a' or 'b' fails. The if will run 'c' ONLY if 'a' fails.
[14:24:37] <emanuele6> duplicate factoid
[14:24:39] *** Quits: Lunatrius (~Lunatrius@77.38.76.5) (Ping timeout: 256 seconds)
[14:29:55] *** Quits: tobybl (~tobybl@dhcp-199-233.inf.ed.ac.uk) (Remote host closed the connection)
[14:32:01] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Ping timeout: 256 seconds)
[14:33:09] <chilversc> in glob patterns, can I say match everything except /?
[14:33:44] <emanuele6> * can't match /
[14:33:52] <chilversc> such as for something like /foo-*/bar, which I would only want to match things like /foo-1/bar, but not /foo-/test/bar
[14:34:02] <emanuele6> * cannot match /
[14:34:17] <osse> depends on the context, no?
[14:34:23] <emanuele6> # mkdir -p /foo-1/bar /foo-/test/bar; echo /foo-*/bar
[14:34:24] <shbot> emanuele6: /foo-1/bar
[14:34:39] <chilversc> as an example; [[ "/foo-/test/bar" == /foo-*/bar ]]; echo $?
[14:34:49] <emanuele6> ok, then yes
[14:35:13] <osse> *([^/])
[14:35:17] <emanuele6> [[ /foo-/test/bar == /foo-*([!/])/bar ]]
[14:35:46] *** Quits: irl25519 (~irl25519@2a02:c7f:1ec1:4000:fb1d:8b4f:b34a:83c6) (Quit: irl25519)
[14:36:45] <chilversc> bah, how do I turn off ! when testing this out at the command line
[14:36:46] <emanuele6> or:  [[ /foo-/test/bar == /foo-!(*/*)/bar ]]
[14:37:10] <emanuele6> chilversc: that does not trigger history expansion.
[14:37:16] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[14:37:20] <chilversc> -bash: ![/]: event not found
[14:37:31] <emanuele6> ![/] is nonsensical
[14:37:38] <emanuele6> [!/]
[14:37:40] <chilversc> ah, I missed the ^
[14:38:11] <emanuele6> what ^?
[14:38:15] <emanuele6> there is no ^
[14:38:30] <emanuele6> # [[ /foo-/test/bar == /foo-*([!/])/bar ]]; echo "$?"
[14:38:31] <shbot> emanuele6: 1
[14:38:40] <emanuele6> # [[ /foo-/test/bar == /foo-!(*/*)/bar ]]; echo "$?"
[14:38:41] <shbot> emanuele6: 1
[14:38:48] <emanuele6> # [[ /foo-x/bar == /foo-*([!/])/bar ]]; echo "$?"
[14:38:49] <shbot> emanuele6: 0
[14:38:56] <emanuele6> # [[ /foo-x/bar == /foo-!(*/*)/bar ]]; echo "$?"
[14:38:57] <shbot> emanuele6: 0
[14:39:22] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[14:39:23] <chilversc> thanks, so couple of options but not exactly friendly or what people are used to when dealing with path globs
[14:39:25] <emanuele6> either way, you can turn off history expansion with `set +H'
[14:39:43] *** Quits: laureee (~laureee@p200300c57708aa0080f9192a5b1049e6.dip0.t-ipconnect.de) (Quit: Client closed)
[14:39:52] <chilversc> I assume there's no way to make the test behave the same way as a standard path glob so that * won't match /?
[14:39:52] <emanuele6> not friendly?
[14:40:11] <emanuele6> that is not how `[[ ==' works.
[14:40:51] <chilversc> the actual pattern is supposed to be user input (from a config file), its a list of paths to match/include, so people will be used to how path globs work
[14:41:19] *** Joins: n4dir (~user@mue-88-130-56-036.dsl.tropolys.de)
[14:41:26] <emanuele6> but you may use something like:    if ! (shopt -s nullglob; for i in /foo-*/bar; do [[ $i == /foo-/test/bar ]] || break; done)
[14:41:50] <emanuele6> err: /foo-x/bar instead of /foo-/test/bar
[14:41:58] <chilversc> issue is the path doesn't exist locally, this is a filter for paths that need to be mounted
[14:42:13] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[14:42:17] <emanuele6> to check if a file named /foo-x/bar exists and is matched by /foo-*/bar
[14:42:35] <emanuele6> chilversc: that was just an alternative.
[14:42:45] <chilversc> effectively I'm going to run showmount -e to get a list of exports from a server, then filter it through a list of include patterns
[14:42:49] <emanuele6> i don't see the issue with !(*/*) or *([!/]).
[14:43:01] <osse> I suppose you can replace * with *([!/]) when reading the patterns from the config file...
[14:43:16] <emanuele6> that is not a good idea
[14:43:41] <chilversc> osse: that gets complex as if someone has something like; *(...) I would turn that into *([!/])(...)
[14:44:30] <osse> yep
[14:44:54] <emanuele6> again, what is the issue with or counterintuitive about !(*/*) or *([!/]*)?
[14:45:04] <chilversc> the main issue with needing to use something like *([!/]) is I'm working with paths, and people are used to path globs working a certain way
[14:45:28] *** Joins: sinaowolabi (~SinaOwola@160.152.13.25)
[14:45:36] <chilversc> so its just going to become an easy source of mis-configuration as an admin might enter; /foo-*/... expecting it to work like any other path glob
[14:45:43] <emanuele6> these globs are already documented in the bash manual.
[14:46:23] <emanuele6> you can just forward to that documentation.
[14:47:18] <chilversc> yeah, its just a bit of extra complexity, as now I have to explain that these are not path globs, they're string globs, and admins need to then remember that as it would be easy for someone in the future to just edit a config file, and see what looks like a list of path globs without reading the docs
[14:47:56] <chilversc> as much as possible I think systems should work the way people expect, and be designed to avoid such mis-matches between what one expects, and what the system actually does
[14:48:01] <emanuele6> what are these globs used for?
[14:48:27] <chilversc> effectively; showmount -e "$REMOTE" | filter-exports | mount-exports
[14:48:45] <emanuele6> where are the globs used there?
[14:48:46] *** Quits: m5zs7k (aquares@web10.mydevil.net) (Ping timeout: 260 seconds)
[14:49:10] <chilversc> a list of include patters so you could say; /home/*:/foo-*/assets etc
[14:49:25] <emanuele6> ...
[14:49:28] <emanuele6> you said
[14:49:38] <emanuele6> <chilversc > as an example; [[ "/foo-/test/bar" == /foo-*/bar ]]; echo $?
[14:49:43] *** Joins: m5zs7k (aquares@web10.mydevil.net)
[14:49:51] <emanuele6> now you say it is a list of colon separated patterns?
[14:49:59] <emanuele6> does bash even interpret those patterns?
[14:50:18] <chilversc> oh, the patterns are split into an array, filter-exports would then loop through that list of patterns checking if any match
[14:50:34] <emanuele6> why are there colons?
[14:52:43] <chilversc> for consistency with the input arguments, I'd have prefered something like a new line but that's not what the current script uses, changing it would be a breaking change for existing users
[14:53:47] <emanuele6> what?
[14:54:06] *** Quits: ekathva (~ekathva@2001:999:51:be01:2c4a:6b25:b5d5:f2c9) (Ping timeout: 245 seconds)
[14:54:07] <emanuele6> so those are colon separated what?
[14:54:10] <chilversc> but the delimiter isn't really an issue here, as it doesn't normally show up in patterns and would get split out when fetching the config value
[14:54:13] <emanuele6> colon separated sh patterns?
[14:54:17] *** Joins: bluedust (~bluedust@59.89.212.127)
[14:54:55] <emanuele6> if there are existing users, what is the problem? i don't get it
[14:55:00] <emanuele6> what are you doing?
[14:55:40] <chilversc> I'm adding support to filter the mounts by an include pattern, currently it just has effectively; showmount -e "$REMOTE" | mount-exports
[14:56:05] *** Joins: bluedust_ (~bluedust@185.206.227.142)
[14:56:35] <chilversc> ideally I'd like that pattern to follow the standard way bash matches globs against paths, but that doesn't seem to be possible
[14:57:41] <emanuele6> you keep failing to show where the patterns are used
[14:57:48] <emanuele6> i don't know what mount-exports is
[14:58:33] <chilversc> it just reads each line from showmount, and runs "mount -t nfs ..."
[14:58:46] <emanuele6> but where are the patterns used then?
[14:59:25] <emanuele6> <chilversc > oh, the patterns are split into an array, filter-exports would then loop through that list of patterns checking if any match
[14:59:26] *** Quits: sinaowolabi (~SinaOwola@160.152.13.25) (Ping timeout: 256 seconds)
[14:59:32] <emanuele6> you said filter-exports was using them
[14:59:47] *** Quits: bluedust (~bluedust@59.89.212.127) (Ping timeout: 256 seconds)
[14:59:47] *** Quits: sinaowolabi_ (~SinaOwola@102.134.114.1) (Ping timeout: 256 seconds)
[14:59:57] * Earnestly .oO(recreate filesystem skeleton using directories and empty files, then have globs work over this to produce resolved paths)
[14:59:58] <chilversc> that's the new function I'm adding into that pipeline that will just have something like; while readline l do; for p in "${INCLUDE_PATTERNS[@]}" do; if [[ $l == $p ]] echo $l; done; done
[15:00:25] <Earnestly> pls no use uppercase variables
[15:00:45] <emanuele6> [[ $l == $p ]] is the existing behaviour.
[15:00:53] <emanuele6> or not?
[15:01:27] <Earnestly> chilversc: always use -r with read
[15:01:31] <chilversc> yeah, that's what I was currently testing out, and I was looking at some sample patterns that people are likely to use, and obviously being a string match it doesn't behave the way you would expect with at path
[15:01:41] *** Joins: Lunatrius (~Lunatrius@77.38.76.5)
[15:01:57] <emanuele6> if it is, keep the same behaviour for remote files, or completely redesign your tool since pat1:pat2:pat3 is an horrible design.
[15:02:23] <emanuele6> also why is "${INCLUDE_PATTERNS[@]}" now an array and not pat1:pat2:pat3
[15:02:50] <chilversc> because I split them before running the script into an array
[15:02:56] <Earnestly> : can exist in filename
[15:03:35] *** Joins: tatarqa (~kli@ip-89-177-122-45.net.upcbroadband.cz)
[15:03:50] <Earnestly> If patterns come from config directive, just allow repeating directive instead of DSV
[15:03:52] <chilversc> I know, but its the same delimiter all the other input parameters use, so changing it now would make this one parameter odd and different to the rest
[15:03:55] <emanuele6> why is it configured with a colon separated list of patterns instead of directly with an arraY?
[15:03:56] <osse> Tell that to my execve() !!
[15:04:09] <Earnestly> osse: PATH ikr lol
[15:04:18] <emanuele6> or list of arguments at the end
[15:04:30] <Earnestly> emanuele6: seems like badness baked in at higher level
[15:04:33] <Earnestly> can't fix
[15:04:47] <chilversc> emanuele6: because the parameters need to be supplied through simple variables to a VM
[15:05:08] <emanuele6> well, if the existing behaviour is [[ $l == $p ]] and you care about compatibility i don't see why you want to change it
[15:05:31] <emanuele6> chilversc: i don't get what you are saying.
[15:05:36] <chilversc> emanuele6: no, that's not the existing behaviour, that's my current behaviour for the new function I'm writing / testing
[15:05:58] <emanuele6> then why did you not show how patterns are currently being used
[15:06:07] <emanuele6> i asked that and you showed [[ $l == $p ]]
[15:06:30] <chilversc> they're not being used yet, I'm currently writing that function
[15:06:41] <emanuele6> ..
[15:06:55] <emanuele6> you said they are used for local files already
[15:07:09] <emanuele6> and i asked "how are they being used?"
[15:07:11] *** Quits: bliminse (~bliminse@host86-188-36-166.range86-188.btcentralplus.com) (Quit: leaving)
[15:07:14] *** Joins: xx (~xx@user/xx)
[15:07:40] <chilversc> no, you were asking about using : as a separator, that syntax is being used for other input parameters that take a list of values
[15:08:49] <emanuele6> well, how are patterns used for local files?
[15:09:03] <chilversc> they're not, there are no local files
[15:09:47] *** Joins: bluedust (~bluedust@59.89.212.127)
[15:10:57] <emanuele6> then your program does not use patterns yet?
[15:11:25] <chilversc> no, I'm adding that support right now
[15:12:02] <emanuele6> then you shouldn't need to be passing patterns as a colon separated list, no?
[15:13:17] <chilversc> its an already established convention that list of values are passed to the script using a delimited list of values, I don't really want to go changing that convention right now
[15:13:25] *** Quits: bluedust_ (~bluedust@185.206.227.142) (Ping timeout: 250 seconds)
[15:13:33] *** Joins: millido (~millido@84.210.150.128)
[15:14:00] <chilversc> though that isn't relevent as colon is unlikely to appear in most export paths, and its split out quite early in the script into an array
[15:14:19] <emanuele6> well, is * likely to appear in file names?
[15:14:39] <chilversc> this isn't file names, these are export paths from an NFS server
[15:15:06] <emanuele6> yes, that whatever
[15:15:14] <emanuele6> is it likely to appear?
[15:15:31] *** Joins: sinaowolabi_ (~SinaOwola@160.152.13.25)
[15:15:31] *** Joins: bliminse (~bliminse@host86-188-36-166.range86-188.btcentralplus.com)
[15:15:31] <chilversc> not really, most of the time it seems people use simple alpha-numeric
[15:16:17] <emanuele6> then build your own pattern matcher
[15:16:21] <emanuele6> that only supports *
[15:16:47] <chilversc> that's quite a lot of work, especially in bash?
[15:16:52] <emanuele6> ?
[15:17:25] *** Quits: yetoo (~yetoo@user/yetoo) (Remote host closed the connection)
[15:17:40] *** Joins: ekathva (~ekathva@2001:999:51:be01:2c4a:6b25:b5d5:f2c9)
[15:18:20] <chilversc> I couldn't see any simple way to safely quote a string for use in a pattern, so I can't just do something like replace * with *([!/]), then use [[ $l == $p ]]
[15:18:46] <emanuele6> just build your own matcher, it is not hard at all
[15:20:41] <emanuele6> str=$to_check; IFS=* read -ra parts <<< "$pat*"; if [[ $a == ${parts[0]} ]]; then for p in "${parts[@]:1}"; do [[ $str == "$p"* ]] || break; str=${str#"$p"}; done
[15:20:44] <emanuele6> something like that
[15:21:49] <emanuele6> doesn't work, maybe there is a typo
[15:22:20] <emanuele6> oh, yeah
[15:22:34] <emanuele6> it should be [[ $a == "${parts[0]}"* ]]
[15:24:04] <geirha> I don't see a being assigned anywhere though
[15:24:19] <emanuele6> right that should be str
[15:24:20] *** Joins: sinaowolabi (~SinaOwola@160.152.13.25)
[15:26:10] <emanuele6> also it is missing checking the end
[15:26:15] <chilversc> I guess if I wanted to also support ** for recursive match (i.e. include /), I can just nested that, so the outer loop uses IFS=**, and the inner loop IFS=*
[15:27:41] <geirha> IFS=** and IFS=* will be treated identically
[15:28:59] <chilversc> would they? I was thinking nested loops so the outer one would chunk "/a/**/b/*/c" into "/a/", "/b/*/c", then the inner loop would work with each of those sections separately
[15:29:18] <emanuele6> also [[ $str == "$p"* ]] || break does not break with false as i expected
[15:29:45] <chilversc> emanuele6: did you mean [[ $str == "$p"*([!/]) ]]
[15:29:58] <emanuele6> oh, well, yes
[15:30:05] <emanuele6> that is kind of the point of all this lol
[15:30:10] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[15:30:25] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[15:30:30] <chilversc> also need the same thing for str; str=${str#"$p"*([!/])}
[15:30:41] <emanuele6> yeah yeah
[15:31:09] <emanuele6> well
[15:31:27] <emanuele6> that one should just be  str=${str#"$p"}, not "$p"*
[15:31:34] <emanuele6> is that the final error? :D
[15:32:03] <emanuele6> maybe not
[15:32:14] <emanuele6> oh, no way
[15:32:19] <emanuele6> s/way/wait/
[15:32:19] *** Joins: rMdes (~rmdes@my.armada.digital)
[15:32:29] <emanuele6> i messed up the logic a little
[15:32:32] *** Quits: unop (~unop@195.91.14.193) (Remote host closed the connection)
[15:32:46] <chilversc> but the general principle seems sound, and it does give me simple globs that behave the way someone would expect and I don't really need the advanced glob patterns
[15:32:47] *** Joins: unop (~unop@195.91.14.193)
[15:33:10] <chilversc> that's ok, I have a unit test using bats to fine tune all the edge cases
[15:33:51] <chilversc> I didn't think of using IFS and read to split the pattern, that makes parsing it myself a lot simpler than I thought
[15:34:02] *** Quits: johnjaye (~pi@173.209.65.233) (Ping timeout: 250 seconds)
[15:35:07] <emanuele6> i fixed it!
[15:36:03] <emanuele6> match () { local str=$1 parts p; IFS=* read -ra parts <<< "$2*"; [[ $str == "${parts[0]}"*"${parts[-1]}" ]] && for p in "${parts[@]:${#parts[@]}}"; do [[ $str == "$p"* ]] || return 1; str=${str#!(*/*)"$p"}; done ;}
[15:36:19] <emanuele6> # match () { local str=$1 parts p; IFS=* read -ra parts <<< "$2*"; [[ $str == "${parts[0]}"*"${parts[-1]}" ]] && for p in "${parts[@]:${#parts[@]}}"; do [[ $str == "$p"* ]] || return 1; str=${str#!(*/*)"$p"}; done ;}; match 'abcdef' 'a*c*'
[15:36:21] <shbot> emanuele6: no output
[15:36:23] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[15:36:24] <emanuele6> oops, yeah
[15:36:26] <emanuele6> # match () { local str=$1 parts p; IFS=* read -ra parts <<< "$2*"; [[ $str == "${parts[0]}"*"${parts[-1]}" ]] && for p in "${parts[@]:${#parts[@]}}"; do [[ $str == "$p"* ]] || return 1; str=${str#!(*/*)"$p"}; done ;}; match 'abcdef' 'a*c*'; echo "$?"
[15:36:28] <shbot> emanuele6: 0
[15:36:39] <emanuele6> # match () { local str=$1 parts p; IFS=* read -ra parts <<< "$2*"; [[ $str == "${parts[0]}"*"${parts[-1]}" ]] && for p in "${parts[@]:${#parts[@]}}"; do [[ $str == "$p"* ]] || return 1; str=${str#!(*/*)"$p"}; done ;}; match 'abcdef' 'a*c*d'; echo "$?"
[15:36:40] <shbot> emanuele6: 1
[15:37:17] <emanuele6> # match () { local str=$1 parts p; IFS=* read -ra parts <<< "$2*"; [[ $str == "${parts[0]}"*"${parts[-1]}" ]] && for p in "${parts[@]:${#parts[@]}}"; do [[ $str == "$p"* ]] || return 1; str=${str#!(*/*)"$p"}; done ;}; match '/path/dir-x/c' '/path/dir-*/c'; echo "$?"
[15:37:18] <shbot> emanuele6: 0
[15:37:25] <emanuele6> # match () { local str=$1 parts p; IFS=* read -ra parts <<< "$2*"; [[ $str == "${parts[0]}"*"${parts[-1]}" ]] && for p in "${parts[@]:${#parts[@]}}"; do [[ $str == "$p"* ]] || return 1; str=${str#!(*/*)"$p"}; done ;}; match '/path/dir-a/x/c' '/path/dir-*/c'; echo "$?"
[15:37:26] <shbot> emanuele6: 0
[15:37:33] <emanuele6> em
[15:37:42] <emanuele6> oh, right
[15:37:47] <emanuele6> * should be !(*/*)
[15:38:11] <emanuele6> # shopt extglob
[15:38:13] <shbot> emanuele6: extglob         on
[15:38:55] *** Quits: sinaowolabi (~SinaOwola@160.152.13.25) (Read error: No route to host)
[15:40:29] <emanuele6> the case with only two parts is a little awkward
[15:40:36] *** Joins: igemnace (~ian@user/igemnace)
[15:41:32] *** Joins: Intelo (~Intelo@88.246.74.142)
[15:42:15] *** Joins: sinaowolabi (~SinaOwola@160.152.13.25)
[15:43:37] <emanuele6> because you want to check "${parts[0]}"*"${parts[-1]}" if there are three or more parts and "${parts[0]}"!(*/*)"${parts[-1]}" if there are one or two parts
[15:43:49] <emanuele6> i guess you can just put an if then else fi for that
[15:45:55] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[15:46:57] <Earnestly> "write your own pattern parser, it's not hard at all"
[15:47:31] <emanuele6> because it is not
[15:47:57] <Earnestly> not sure why they want to have custom patterns, just use glob.  but i want to support pathological shit, just don't, make users type globs
[15:48:23] <Earnestly> 'but i want /foo/* to match /foo and /foo/stuff'  is idiotic, just don't support such requirement
[15:48:23] <emanuele6> i just wrote it from the irc prompt without testing and made a swimming pool of small errors :p
[15:48:52] <Earnestly> emanuele6: dark corners are fractal
[15:49:04] <Earnestly> and here be the land of shadow
[15:50:22] <chilversc> Earnestly: yeah, its just patterns such as '/foo-*/bar' get a little odd, as a system admin thinking about paths wouldn't expect that to match /foo-1/other/bar
[15:50:35] <Earnestly> If it were me, with what I know, and these strange reqs.  Clearly the target list of files are known quantity, I would make real skeleton in /tmp, have globs work over real example, give resolved results to program
[15:51:05] <Earnestly> chilversc: /foo-*/bar would not match /foo-1/other/bar
[15:51:20] <Earnestly> /foo-*/*/bar would
[15:51:34] <chilversc> Earnestly: not with the skeleton path idea, it would with [[
[15:51:47] <Earnestly> no it would not
[15:51:55] <emanuele6> # shopt -s extglob; match () { local str=$1 parts p; IFS=* read -ra parts <<< "$2*"; if [ "${#parts[@]}" -lt 2 ]; then [[ $str == "${parts[0]}"*"${parts[-1]}" ]]; else [[ $str == "${parts[0]}"!(*/*)"${parts[-1]}" ]] && for p in "${parts[@]:${#parts[@]}}"; do [[ $str == "$p"* ]] || return 1; str=${str#!(*/*)"$p"}; done; fi ;}; match '/path/dir-x/c' '/path/dir-*/c'; echo "$?"
[15:51:57] <shbot> emanuele6: 0
[15:52:00] <Earnestly> emanuele6: just no, pls
[15:52:05] <emanuele6> # shopt -s extglob; match () { local str=$1 parts p; IFS=* read -ra parts <<< "$2*"; if [ "${#parts[@]}" -lt 2 ]; then [[ $str == "${parts[0]}"*"${parts[-1]}" ]]; else [[ $str == "${parts[0]}"!(*/*)"${parts[-1]}" ]] && for p in "${parts[@]:${#parts[@]}}"; do [[ $str == "$p"* ]] || return 1; str=${str#!(*/*)"$p"}; done; fi ;}; match '/path/dir-/x/c' '/path/dir-*/c'; echo "$?"
[15:52:07] <shbot> emanuele6: 1
[15:52:12] <emanuele6> here i fixed the error
[15:52:14] *** Joins: elena_re (~elena@213.194.126.155)
[15:52:24] <emanuele6> Earnestly: i am just saying, it is basically what i sent initially
[15:52:35] <Earnestly> it should make you feel ill
[15:52:35] <emanuele6> i just had a couple mistakes
[15:54:06] <Earnestly> chilversc: Oh, right.  [[  is doing pattern matching, not file path glob
[15:54:19] <emanuele6> that is the point :D
[15:54:29] *** Quits: sinaowolabi (~SinaOwola@160.152.13.25) (Read error: No route to host)
[15:54:37] <Earnestly> this is stupid in extreme and will always be pain, fires everywhere
[15:54:49] <Earnestly> but they will press on, into the abyss
[15:55:02] <emanuele6> ( also, it should be [[ $str == !(*/*)"$p"* ]] not [[ $str == "$p"* ]] )
[15:55:11] <Earnestly> emanuele6: dark corners are fractal
[15:55:25] <Earnestly> bwk quote
[15:55:34] *** Joins: sinaowolabi (~SinaOwola@160.152.13.25)
[15:55:40] <emanuele6> if i had written in a text editor from the start, i would have not made such mistakes
[15:55:53] *** Quits: Spawns (~Spawns_Ca@user/spawns-carpeting/x-6969421) (Ping timeout: 256 seconds)
[15:55:59] <Earnestly> it is visually ugly, this is enough
[15:56:02] <emanuele6> but since i wrote it in IRC without testing now i have to notice them :(
[15:56:06] <chilversc> yeah, I like the skeleton in /tmp approach, as then I can just test if the glob matches anything
[15:56:30] <Earnestly> when patterns are given to user its usually patterns that some tool understands, like rsync --exclude or such
[15:57:01] <chilversc> Earnestly: in this case I'm writing that tool
[15:57:02] *** Joins: masber (~masber@2001:620:808:1200:8000::13)
[15:57:06] <Earnestly> no
[15:57:11] <emanuele6> yes that is why i was asking what was using the patterns when i thought your program was already using patterns
[15:57:21] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[15:57:21] <Earnestly> this is bad idea
[15:57:26] <emanuele6> ^
[15:57:28] <Earnestly> especially in bash
[15:57:29] <emanuele6> terrible idea
[15:57:33] *** Joins: Spawns (~Spawns_Ca@user/spawns-carpeting/x-6969421)
[15:57:48] <chilversc> Earnestly: what tool should I use instead then?
[15:58:15] <Earnestly> bash/shell is for commands and preparing argument vectors for them.  if you want to reinvent rsync, borg, etc. then write it in real programming language
[15:58:31] *** Quits: bluedust (~bluedust@59.89.212.127) (Remote host closed the connection)
[15:58:34] <emanuele6> Earnestly: ( though i don't think this looks that ugly personally https://0x0.st/oHY2.txt )
[15:58:41] <Earnestly> emanuele6: it should
[15:58:51] <chilversc> Earnestly: this is as a filter between "showmount -e" and "mount -t nfs"
[15:59:31] *** Quits: Gerula (~Gerula@user/gerula) (Quit: Leaving)
[15:59:41] <emanuele6> another mistake :((( http://0x0.st/oHY_.txt
[15:59:46] <Earnestly> fractal
[15:59:52] *** Parts: Intelo (~Intelo@88.246.74.142) ()
[16:00:39] <Earnestly> chilversc: borg and rsync both have nice filter files where complex patterns can be described
[16:01:15] <chilversc> Earnestly: I'm not sure how that helps here though?
[16:01:16] <Earnestly> rsync is less intuitive when involving recursive patterns (**) in a whitelist design
[16:02:16] <Earnestly> mount -t won't even allow you to handle spaces in filenames
[16:02:24] <Earnestly> if mountpoints are the focus
[16:03:12] <chilversc> I've not seen an export that contains a space in its path though
[16:03:38] *** Joins: beco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73)
[16:04:20] <emanuele6> ( also i have [[ $str == "${parts[0]}"!(*/*)"${parts[-1]}" ]] and [[ $str == "${parts[0]}"*"${parts[-1]}" ]] mixed up )
[16:04:50] *** Joins: cdown (~cdown@188.214.11.14)
[16:05:33] <emanuele6> still, it's only 11 lines of code. if you pay attention when you write it, it is not hard; that was the point
[16:05:43] <Earnestly> chilversc: findmnt might give you better control
[16:05:53] <emanuele6> it's just a matcher that understands '*'
[16:09:40] *** Joins: Aodka (~blscoe@cpc78653-glfd7-2-0-cust223.6-2.cable.virginm.net)
[16:09:45] <chilversc> Earnestly: findmnt only searches the local system though, I havn't mounted these exports yet, currently the script mounts every export from the remote, and I'm adding an include filter that accepts patterns
[16:09:52] <Aodka> Hi, what is the difference between `sudo su` and `sudo -s`?
[16:10:24] <Earnestly> But anyway, we don't know exactly what chilversc is doing and they probably cannot tell us.  The approach taken will always be difficult, this is all
[16:10:43] <Aodka> Or `sudo su -` and `sudo -i`?
[16:10:59] <Soliton> one calls su for no reason?
[16:11:20] <Earnestly> Aodka: This isn't a bash question, but sudo su is quite pointless.  For the rest, you can read respective manuals to see what - and -i and -s do
[16:12:28] <emanuele6> `sudo su' is `sudo bash' with extra steps; `sudo -s' simply tells sudo to run a shell
[16:12:34] <Aodka> Already read the manuals.
[16:12:51] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[16:12:58] <emanuele6> ( well, `sudo "$SHELL_of_the_root_user"' )
[16:13:17] <Aodka> So, one is less efficient. I see. thanks
[16:13:51] <emanuele6> efficiency doesn't matter at all for those things.
[16:13:58] <emanuele6> it is just that `sudo su' is pointless
[16:14:37] <emanuele6> it's extra unnecessary steps
[16:14:45] <Aodka> So, it is a stylistic matter?
[16:15:08] <emanuele6> is (( x + 1 == y + 2 -1 )) over (( x == y )) stylistic matter?
[16:16:31] <Soliton> (( x+0 == y+0 )) looks cooler.
[16:16:35] <Aodka> So, they are exactly the same in every other wya.
[16:16:44] <Aodka> way
[16:16:45] *** Parts: marlun (~marlun@46.101.246.245) (WeeChat 2.3)
[16:16:48] <emanuele6> or  python -c 'import os; os.system("sh -c \"echo hello\"")'   over   echo hello ?
[16:18:24] <Earnestly> chilversc: What I would do is turn your patterns into grep -f file and just use that over showmounts -e, or whatever you're doing.  grep -f patterns <(showmount -e), or whatever.  E.g. https://0x0.st/oHYO.txt - it's all pretty sketchy, but no more sketchy than what you're relying on
[16:20:15] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 256 seconds)
[16:20:34] <chilversc> right, but what I want is a way that isn't sketchy
[16:20:37] <Earnestly> findmnt -lnt tmpfs -o target -J | jq -r --arg pattern '/r.*' '.filesystems[] | select(.target | test($pattern)).target'
[16:20:39] <Earnestly> lol
[16:21:28] <Earnestly> chilversc: You will have to find a way that can produce your remote files in a way that doesn't mix data and code.  Like using : to separate patterns, like assuming newlines or spaces don't exist in files
[16:21:38] <Earnestly> I don't know showmount well enough to know if it has what you want
[16:21:58] <chilversc> it's a pitty there isn't a bash function to escape strings to make them safe for a regular expression or glob, as then I could easily transform the pattern
[16:22:06] *** Joins: keypusher (~keypusher@user/keypusher)
[16:22:35] <Earnestly> I like using real filesystems for this sort of thing, such as the /tmp skeleton idea.  But if you can supply filenames exactly, such as with findmnt -J using json encoding, then you can safely use regex against them
[16:22:39] <chilversc> Earnestly: yeah, but the : delimiter is a separate issue, one that would need re-writing the whole script to accept a config file, which probably means replacing the script with some other language
[16:23:06] <Earnestly> You cannot fix using : with another language
[16:23:12] <Earnestly> It's just straight bad design
[16:23:31] <chilversc> Earnestly: with another language I could easily accept a YAML or JSON file as config
[16:23:34] <Earnestly> grep is fine, jq is fine.  The problem is the inputs
[16:23:42] <Earnestly> pls no json as config files
[16:23:46] <Earnestly> world suffers enough
[16:24:18] <emanuele6> m4 as config file
[16:24:20] <chilversc> yeah, I'd likely go with HCL, since this is a VM created using Terraform, so they'll already be using HCL for configuration
[16:24:25] <Earnestly> emanuele6: tcl as config file :o
[16:24:29] *** Quits: Aodka (~blscoe@cpc78653-glfd7-2-0-cust223.6-2.cable.virginm.net) (Quit: Client closed)
[16:24:34] <emanuele6> tcl as config file is good
[16:24:55] <Earnestly> The ideal is probably something like dhall but no time
[16:25:00] <emanuele6> there is a tcl build system that has great syntax
[16:25:23] <Earnestly> chilversc: Give examples of showmount -e output, and what you want as result
[16:25:51] <Earnestly> emanuele6: config should be configurable, but language must be total.  dhall is the only one I know of which allows this
[16:26:03] <Earnestly> I hate config files that have no programming logic
[16:26:16] <chilversc> HCL has limited logic available
[16:26:19] <Earnestly> But understand programming logic in configs can lead to halting problem
[16:26:36] *** Quits: ekathva (~ekathva@2001:999:51:be01:2c4a:6b25:b5d5:f2c9) (Quit: Leaving)
[16:26:44] *** Joins: keypushe- (keypusher@user/keypusher)
[16:26:56] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[16:26:57] <chilversc> unless you deny constructs that lead to the halting problem, which I guess is what dhall does?
[16:26:57] *** Joins: ekathva (~ekathva@2001:999:51:be01:2c4a:6b25:b5d5:f2c9)
[16:26:58] <Earnestly> chilversc: Yeah, if it has tools (like jq) to query config, you can use it in shell
[16:27:17] <Earnestly> chilversc: dhall is total language
[16:27:49] <Earnestly> https://en.wikipedia.org/wiki/Total_language
[16:27:56] *** Quits: keypusher (~keypusher@user/keypusher) (Ping timeout: 252 seconds)
[16:28:41] <Earnestly> chilversc: But yes, you restrict the specific things which produce universal language
[16:30:02] *** keypushe- is now known as keypusher
[16:30:32] *** Joins: tobybl (~tobybl@dhcp-199-233.inf.ed.ac.uk)
[16:31:00] <Earnestly> chilversc: HCL2 is turing complete
[16:31:07] <chilversc> Earnestly: here's an example list of mounts https://paste.centos.org/view/782b4fc7
[16:31:32] <chilversc> the main patterns I need are; suffixes on a path component, and a directory and all its decendants
[16:31:55] <chilversc> thus patterns such as /source-*/a1/**
[16:33:29] <chilversc> that would produce a list such as https://paste.centos.org/view/106367b3
[16:34:44] <emanuele6> Earnestly: jq as config file?
[16:34:57] <emanuele6> :D
[16:36:11] *** Quits: tobybl (~tobybl@dhcp-199-233.inf.ed.ac.uk) (Ping timeout: 252 seconds)
[16:36:23] <emanuele6> jq is kind of similar to dhall afaict
[16:36:41] <Earnestly> chilversc: I'd use grep -f tbh https://0x0.st/oHYy.png (for colour)
[16:36:50] <Earnestly> emanuele6: except turing complete
[16:36:55] <Earnestly> emanuele6: (infinite loop possible)
[16:37:18] <emanuele6> oh, right
[16:37:32] <emanuele6> Earnestly: i think you want -x -f
[16:37:34] <Earnestly> chilversc: Or /tmp trick, but at least with grep you can use regex
[16:37:52] <Earnestly> emanuele6: -x just transforms $pattern to ^$pattern$
[16:37:58] <Earnestly> But you might want it for sure
[16:38:05] <chilversc> yeah, wanted to avoid regex as those have awkward syntax when it comes to matching individual path components
[16:38:07] <Earnestly> I tend to use -F and -x
[16:38:23] <Earnestly> chilversc: It does?
[16:38:32] <emanuele6> [^/]*
[16:38:35] *** Joins: Gerula (~Gerula@user/gerula)
[16:38:49] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[16:38:56] <Earnestly> Are you thinking of sed and such when you have to do /\/\/\/ everywhere?
[16:39:25] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[16:39:29] <chilversc> naw, for sed I just change the delimiter to | when using paths
[16:39:39] *** Quits: freep (~freepppp@46.246.189.172.dsl.dyn.forthnet.gr) (Remote host closed the connection)
[16:39:39] <emanuele6> no, he didn't like bash extglobs because he had to use !(*/*) or *([!/]) instead of *
[16:39:48] <emanuele6> regex is basically the same: [^/]*
[16:40:06] *** Joins: freep (~freepppp@46.246.189.172.dsl.dyn.forthnet.gr)
[16:40:07] *** Joins: seninha (~seninha@user/seninha)
[16:40:11] *** Joins: liveacoustic (~adison@user/liveacoustic)
[16:40:26] <chilversc> its just I find a lot of people don't actually know how to write regexs, and would end up writing /source-.*/a1/.*
[16:40:26] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Client Quit)
[16:40:50] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[16:41:29] <emanuele6> then write your own matcher that only understands `*' (as `!(*/*)') and `**' as (`*').
[16:41:35] <Earnestly> :(
[16:41:39] <Earnestly> This is silly
[16:41:44] <emanuele6> yes it is silly
[16:41:51] <emanuele6> just use regexes or extglobs
[16:42:01] <emanuele6> and stop being silly
[16:43:10] <chilversc> paths globs just have a nice simple syntax that is easy to read
[16:43:16] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 245 seconds)
[16:44:27] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[16:44:36] <Earnestly> chilversc: https://0x0.st/oHYY.txt
[16:44:38] <chilversc> and there's very little with a basic path glob that only uses * and ** for someone to get wrong
[16:44:57] <Earnestly> heh
[16:45:10] <Earnestly> (This paste is ploy, don't believe it)
[16:45:31] <Earnestly> Actually, no nevermind
[16:45:41] *** Joins: twy (~twy@2400:1a00:b011:1c31:11bd:27a4:956d:678b)
[16:45:48] <Earnestly> It does work
[16:45:56] *** Quits: Gerula (~Gerula@user/gerula) (Quit: Leaving)
[16:46:32] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 256 seconds)
[16:46:49] <chilversc> ah, yeah because that set of inputs doesn't contain anything awkward like; /source-01/foo/a1/b8
[16:47:26] <emanuele6> unless you use -x, that will also match a/source-/a1/
[16:48:03] <chilversc> I just took that straight from my current test server, I havn't created a proper test data set that contains difficult paths
[16:48:47] <chilversc> it can be done though; grep -x '/source-[^/]*/a1/.*' mounts
[16:49:10] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[16:49:32] *** Joins: shad (~shad@user/shad)
[16:50:02] <chilversc> its just not quite as simple to explain and document compared to /source-*/a1/**
[16:50:14] *** Quits: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com) (Remote host closed the connection)
[16:50:19] *** Joins: nyex (~Thunderbi@177.84.107.56)
[16:51:41] *** Joins: tobybl (~tobybl@dhcp-199-233.inf.ed.ac.uk)
[16:52:31] <Earnestly> chilversc: "It's regex" is much easier than "here's my custom globbing system"
[16:52:55] <Earnestly> And with GNU you have -P which means all those regex websites that use PCRE are relevant
[16:52:59] <chilversc> I didn't want a custom globbing system, I only wanted to match path globs against a string :)
[16:53:20] *** Quits: moldorcoder7 (~moldorcod@37.120.143.28) (Ping timeout: 256 seconds)
[16:53:28] <Earnestly> Then use skel tree and use real globs
[16:53:32] *** Quits: armin (~armin@unix.porn) (Ping timeout: 240 seconds)
[16:53:41] <Earnestly> Or implement in language and use glob(3) (won't give you extglobs though)
[16:54:41] <Earnestly> chilversc: Remember, like regex, glob is standard language.  If you have linux, you probably have both glob(7) and regex(7) which serve as documentation for both
[16:55:02] <emanuele6> and bash(1) for extglobs
[16:55:45] *** Joins: armin (~armin@unix.porn)
[16:55:49] <emanuele6> 12:15:43 <emanuele6 > these globs are already documented in the bash manual.
[16:55:55] <emanuele6> 12:16:23 <emanuele6 > you can just forward to that documentation.
[16:56:54] <emanuele6> but chilversc was only ok with `*' as `!(*/*)' and nothing else.
[16:57:27] <chilversc> it was about context, if you're working with paths you're going to expect globs to match as paths, not strings
[16:58:05] <chilversc> I'm used to things like /foo-*/bar matching, so I wouldn't be expecting to have to now start using /foo-*([!/])/bar
[16:58:09] *** Quits: freep (~freepppp@46.246.189.172.dsl.dyn.forthnet.gr) (Remote host closed the connection)
[16:58:11] <emanuele6> if you are stubborn and you are only ok with that, implement your custom glob matcher.
[16:58:35] <chilversc> its not about being stubborn or what I want, its about matching user's expectations
[16:58:36] *** Joins: freep (~freepppp@46.246.189.172.dsl.dyn.forthnet.gr)
[16:59:00] <emanuele6> yes, whatever. that is what you have to do if you want that.
[16:59:29] *** Joins: han-solo (~hanish@user/han-solo)
[17:03:02] <Swahili> Q: A timeout only occurs some X time after the last I/O of a running process, right? How can I word this correctly? The reason why I ask, is that someone asked to increase a timeout for a service from 15m to 20m to allow build a frontend project (thats quite unusual, to have to wait 15m to build), I believe he needs  to spend time in improving the perf of the app
[17:03:10] <Swahili> so would like to understand how a timeout occurs
[17:03:43] <emanuele6> !nabq
[17:03:43] <greybot> Not a #bash question. We're no experts in that software or OS; consider asking the channel or mailing list with experts on that topic (eg. #linux #openssh #ubuntu #zsh #systemd ##kernel or PM alis with "list keyword" to search for channels).
[17:04:15] *** Quits: twy (~twy@2400:1a00:b011:1c31:11bd:27a4:956d:678b) (Quit: Leaving)
[17:04:19] *** Joins: revolve (~u0_a227@82-132-236-173.dab.02.net)
[17:04:34] <emanuele6> what is this question about? github actions? systemd?
[17:04:37] *** Joins: ozzzo_work (~ozzzo_wor@h87.s239.verisign.com)
[17:04:52] <emanuele6> there are channel for those things, i have no idea what you are referring to though.
[17:04:58] <Swahili> emanuele6: sorry, thought could ask here.
[17:05:13] <emanuele6> but i have no idea of what you are talking about.
[17:05:29] *** Joins: kotteletfisk (~kotteletf@customer-185-24-169-81.ip4.gigabit.dk)
[17:06:11] *** Joins: bluedust (~bluedust@117.222.188.38)
[17:06:41] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[17:07:03] <emanuele6> i don't know what a timeout is in this context. it's not a bash thing. unless you are referring to `read -t' in which case i don't understand what you are asking.
[17:07:44] <emanuele6> but you said "timeout for a service"; service of what? bash does not have services
[17:08:02] *** Joins: moldorcoder7 (~moldorcod@37.120.143.221)
[17:09:20] <Earnestly> chilversc: (glob(3) works on paths, fnmatch(3) as well has gnu extensions which expose extglob)
[17:10:16] *** Quits: luva (~luva@146.70.62.244) (Read error: Connection reset by peer)
[17:10:35] <kotteletfisk> Hello! Does anyone know the "no return" value in bash? ex: "None" in Python
[17:10:57] <emanuele6> ?
[17:11:18] <emanuele6> unset?
[17:11:21] <Earnestly> !return
[17:11:21] <greybot> Every Unix process returns an exit status code to its parent. This is an unsigned 8-bit integer, 0 to 255 inclusive, with 0 meaning "success" and 1-255 meaning "failure". A script returns the exit status of the last command executed, unless you call "exit" with an argument. Functions "return" an 8-bit status code also.
[17:11:24] <emanuele6> i don't understand the question at all
[17:11:24] <kotteletfisk> as in if a function has no return value, what is the default<+
[17:11:29] <Earnestly> !weaknesses > kotteletfisk
[17:11:29] <greybot> kotteletfisk: http://mywiki.wooledge.org/BashWeaknesses
[17:11:42] <emanuele6> functions don't return values.
[17:11:48] <emanuele6> they return exit statuses
[17:12:01] *** Quits: liveacoustic (~adison@user/liveacoustic) (Ping timeout: 245 seconds)
[17:12:24] *** Joins: luva (~luva@45.141.152.52)
[17:12:36] *** Quits: moldorcoder7 (~moldorcod@37.120.143.221) (Ping timeout: 256 seconds)
[17:12:39] <emanuele6> # help return
[17:12:40] <shbot> emanuele6: return: return [n] -- http://ix.io/aQf
[17:14:35] *** Joins: liveacoustic (~adison@user/liveacoustic)
[17:14:37] <Soliton> functions in shell work like commands, not like functions in other languages.
[17:16:54] <kotteletfisk> okay, i seem to have misundertood. Thank you for the dokumentation greybot
[17:17:28] <emanuele6> !iamabot
[17:17:28] <greybot> I am only a software bot, programmed to hand out information. Talk to the person who last said something beginning with "!" before I spoke; that's the person who asked me to say something.
[17:18:53] <Earnestly> chilversc: (As user, knowing its regex is easier to grasp.  Many tools expose regex for this purpose, it's easy to google and find out.  Dry-run feature also helps)
[17:19:26] <Earnestly> rsync uses custom logic, and it was much more painful to learn because many edge case, especially with recursive notation but also wanting to include deeply nested items
[17:19:47] <Earnestly> borg has more sensible approach but also lets you use regex or sh-globs with prefix
[17:20:05] *** Joins: odoood (~odoood@c-71-204-80-147.hsd1.ga.comcast.net)
[17:20:18] <Earnestly> chilversc: E.g. https://0x0.st/oHY5.txt
[17:20:24] *** Joins: omnio (~omnio@user/omnio)
[17:20:48] <emanuele6> git also has custom globs
[17:20:51] <chilversc> yeah, I might go with regex for now, it is my hope to replace this with a config file in the future that could let me add other options
[17:20:58] <Earnestly> borg-patterns(1) give ideas
[17:21:20] <kotteletfisk> haha okay, thanks anyway
[17:21:26] <Earnestly> chilversc: You might want to see if borg uses and copy their code, make your tool in python, use nfs api directly instead of showmount
[17:22:05] *** Quits: bluedust (~bluedust@117.222.188.38) (Remote host closed the connection)
[17:22:43] *** Quits: kj (~kj@kj.aerisnetwork.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:22:46] <chilversc> Earnestly: yup, but I don't have time for a full re-write at the moment just to add an extra filter function
[17:24:08] <chilversc> which is also a reason I don't really want to use those extended globs such as *([!/]), as that would be a pain later if I wanted to use python instead of bash, while something simple like /foo-*/bar/** I could pretty much get working in any language
[17:24:27] *** Joins: moldorcoder7 (~moldorcod@188.95.55.24)
[17:24:29] <chilversc> regex is similar, I just have to check on what style of regex is best for compatability
[17:24:58] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[17:25:19] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:25:22] *** Joins: TomyWork (~TomyLobo@p200300e80f0067007d97dd849101fee4.dip0.t-ipconnect.de)
[17:26:00] <Earnestly> Probably PCRE, unfortunately
[17:27:16] <chilversc> seems that way, looks like that's the format used by both python and go
[17:27:39] <Earnestly> chilversc: Or write fnmatch(1) tool will -p flag that uses FNM_PATHNAME with fnmatch(3) over list of input strings
[17:27:41] *** Joins: bluedust (~bluedust@117.222.188.38)
[17:27:44] <Earnestly> Or stdin
[17:28:03] <Earnestly> will/with
[17:28:25] *** Quits: almostdvs (~almostdvs@074-135-071-059.res.spectrum.com) (Ping timeout: 268 seconds)
[17:28:44] <Earnestly> Might be a bit too much of a project, with multiple patterns
[17:29:10] *** Joins: zoe (~zoe@fsf/member/zoe)
[17:30:49] <chilversc> I guess globstar to support ** is a bash specific extension
[17:31:02] <emanuele6> git globs also have **
[17:31:05] <Earnestly> It's GNU fnmatch(3)
[17:31:11] <Earnestly> Which globstar uses
[17:31:23] <Earnestly> bash uses custom implementation of glob(3) though, not library function
[17:32:14] <Earnestly> chilversc: also I know with regex on paths that it's matching strings, not "paths", so my mental model isn't the same
[17:33:04] *** Joins: Gerula (~Gerula@user/gerula)
[17:33:42] <chilversc> yeah, hence why I don't think '/foo-[^/]*/' is as bad with a regex
[17:34:41] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[17:35:12] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[17:35:30] <Earnestly> chilversc: I would use /foo-.*/bar instead as user
[17:35:58] <Earnestly> Which may not work out, so I'd use -dry-run to see
[17:36:28] <emanuele6> i would read the documentation and use the syntax described by the documentation as a user :p
[17:36:29] <chilversc> I don't really have a simple dry-run ability, as this is built into a start up script for a VM
[17:36:30] <Earnestly> I'm surprised there perhaps isn't a fnmatch tool which just exposes fnmatch(1)
[17:37:31] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[17:37:40] *** Quits: unlaudable (~unlaudabl@129.232.131.162) (Quit: Client closed)
[17:37:54] <Earnestly> https://github.com/hamstergene/pathmatch this one provides tool
[17:37:56] *** Joins: unlaudable (~unlaudabl@129.232.131.162)
[17:38:04] <emanuele6> ( and if the documentation says it uses BRE or ERE or PCRE, it makes my life much easier. )
[17:38:05] <Earnestly> But requires dir
[17:38:09] <Earnestly> Meh
[17:38:57] <emanuele6> Earnestly: afaict, that tool finds files
[17:39:08] <chilversc> alas, it seems go has implemented their own match instead of calling fnmatch
[17:39:20] <emanuele6> it does not try to match a strings with a fnmatch() pattern
[17:39:28] *** Quits: odoood (~odoood@c-71-204-80-147.hsd1.ga.comcast.net) (Remote host closed the connection)
[17:39:48] <Earnestly> And git plumbing doesn't seem to have standalone tool for theirs
[17:39:57] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[17:40:16] <Earnestly> emanuele6: i mentioned this downside 'requires dir'
[17:40:43] *** Joins: ChmEarl (~chmearl@user/chmearl)
[17:40:53] <chilversc> yeah, I'm sure I've run into this issue in the past and every time I'm supprised there's not a simple way to check if one path matches a glob without the path needing to exist
[17:41:15] *** Joins: johnjaye (~pi@173.209.65.233)
[17:41:30] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[17:42:10] <emanuele6> well, if it requires files, you can just use   find . -path 'fnmatchpattern'.
[17:42:32] *** Joins: Atque (~Atque@user/atque)
[17:42:34] <emanuele6> or './fnmatchpattern' i guess
[17:42:58] <emanuele6> or does find-path not use fnmatch?
[17:43:50] <Earnestly> emanuele6: Still needs path to exist
[17:43:55] <emanuele6> yes, exactly
[17:44:15] <Earnestly> fnmatch is designed to take string as input, which is why I suggest fnmatch(1) style tool
[17:44:25] <Earnestly> Should probably make it
[17:44:26] <emanuele6> that tool is just like find-path
[17:44:33] <emanuele6> yeah, it is a simple c program
[17:45:45] <emanuele6> int main (int argc, char *argv[]) { if (argc != 3) return 2; return fnmatch(argv[1], argv[2], 0); }
[17:46:22] <Earnestly> Yes, but more like: fnmatch [-fed0] [-p file] [pattern...]
[17:47:12] <Earnestly> So printf '%s\0' path path ... | fnmatch -0f '/foo*/bar' ...
[17:48:13] <Earnestly> -fed being POSIX flags, could add -lcx for leading_dir, casefold and extmatch
[17:49:40] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 250 seconds)
[17:49:53] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 252 seconds)
[17:51:07] *** Joins: Thanatermesis (~Thanaterm@191.92.148.122)
[17:51:32] *** Joins: The_Blode_ (uid537595@user/the-blode/x-7164444)
[17:51:49] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[17:52:45] *** Joins: CoreISP (~LvH@simplemachines/serverteam/CoreISP)
[17:54:37] *** Joins: noarb (~noarb@user/noarb)
[17:55:24] *** Joins: cdown_ (~cdown@163.114.131.1)
[17:57:18] *** Joins: luva6 (~luva@37.120.197.52)
[17:57:57] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 256 seconds)
[17:58:01] *** cdown_ is now known as cdown
[17:58:38] *** Quits: foul_owl (~kerry@94.140.8.107) (Read error: Connection reset by peer)
[17:58:46] <emanuele6> i am surprised FNM_CASEFOLD is a GNU extension
[17:59:25] *** Quits: luva (~luva@45.141.152.52) (Ping timeout: 256 seconds)
[17:59:25] *** luva6 is now known as luva
[17:59:48] *** Quits: w0ng (~w0ng@103.1.212.158) (Ping timeout: 250 seconds)
[18:02:06] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[18:03:02] <Earnestly> emanuele6: Oh, gawk has @load "fnmatch"
[18:03:15] <emanuele6> python also has fnmatch.
[18:03:21] <Earnestly> Yes, but gawk is available
[18:03:25] <Earnestly> Typically
[18:03:58] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 250 seconds)
[18:03:58] *** The_Blode_ is now known as The_Blode
[18:06:41] *** Quits: Rue_ (~rue@61-231-135-188.dynamic-ip.hinet.net) (Quit: WeeChat 3.4)
[18:09:02] *** Quits: omnio (~omnio@user/omnio) (Quit: Konversation terminated!)
[18:09:06] <emanuele6> # printf '%s\0' '/fooa/bar' '/food/bar' '/foo/x/bar' 'xyz' | gawk -l fnmatch -v RS='\0' 'fnmatch($0, "/foo*/bar", 0)'
[18:09:08] <shbot> emanuele6: gawk: fatal: cannot open shared library `fnmatch' for reading: No such file or directory
[18:09:25] *** Quits: led_belly (~led_belly@83.97.23.14) (Ping timeout: 240 seconds)
[18:09:30] <emanuele6> in shbot, gawk is available, but fnmatch is not? :D
[18:09:37] <Earnestly> @load "fnmatch"
[18:09:42] <Earnestly> oh you used -l
[18:09:45] <emanuele6> -l fnmatch is the same
[18:10:18] <emanuele6> # printf '%s\0' '/fooa/bar' '/food/bar' '/foo/x/bar' 'xyz' | gawk -v RS='\0' '@load "fnmatch"; fnmatch($0, "/foo*/bar", 0)'
[18:10:20] <shbot> emanuele6: gawk: cmd. line:1: error: cannot open shared library `fnmatch' for reading: No such file or directory
[18:10:34] <Earnestly> # find / -path 'gawk/fnmatch.so'
[18:10:35] <shbot> Earnestly: no output
[18:11:19] *** Quits: moldorcoder7 (~moldorcod@188.95.55.24) (Ping timeout: 256 seconds)
[18:11:19] <Earnestly> # find / -path '*/gawk/fnmatch.so'
[18:11:21] <shbot> Earnestly: no output
[18:11:32] <Earnestly> Yeah, not included for some reason
[18:11:38] <Earnestly> # find / -path '*/gawk/*.so'
[18:11:40] <shbot> Earnestly: no output
[18:11:42] <Earnestly> None are
[18:11:53] *** Joins: moldorcoder7 (~moldorcod@188.95.55.24)
[18:12:42] *** Joins: odoood (odoood@gateway/vpn/protonvpn/odoood)
[18:13:01] <emanuele6> Earnestly: https://gitlab.com/geirha/shbot-initramfs/-/blob/master/Makefile#L132
[18:13:20] <emanuele6> gawk is installed with `cp'
[18:13:42] *** Quits: mat001 (~mat001@213.143.69.121) (Remote host closed the connection)
[18:14:24] *** Joins: foul_owl (~kerry@94.140.8.105)
[18:15:02] <Earnestly> emanuele6: Anyway:  printf '%s\0' '/fooa/bar' '/food/bar' '/foo/x/bar' 'xyz' | gawk -l fnmatch -v RS='\0' 'fnmatch("/foo*/bar", $0, FNM["PATHNAME"]) != FNM_NOMATCH'
[18:15:18] *** Joins: led_belly (~led_belly@83.97.23.14)
[18:15:46] <emanuele6> ah, right
[18:15:48] <Earnestly> geirha: ping to request if gawk modules could be added to shbot
[18:16:14] <emanuele6> i think the URL already pinged him xD
[18:17:31] *** Quits: hdb2 (~josh@user/hdb2) (Quit: leaving)
[18:17:33] *** Joins: kj (~kj@beta.aerisnetwork.net)
[18:18:44] *** Quits: dsrt^ (~dsrt@128-092-164-034.biz.spectrum.com) (Remote host closed the connection)
[18:21:58] <emanuele6> Earnestly: also it should be `==0', not `!= FNM_NOMATCH'
[18:22:09] <Earnestly> Why?
[18:22:10] <emanuele6> > The return value is zero on success, 'FNM_NOMATCH' if the string did not match the pattern, or a different nonzero value if an error occurred.
[18:22:56] <Earnestly> I guess
[18:23:18] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[18:23:36] *** ElliotAlderson[m is now known as peace[m]
[18:23:38] <geirha> What does that entail; copying a bunch of extra files into some /usr/share/awk-something?
[18:23:41] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 245 seconds)
[18:24:20] <emanuele6> yeah, /usr/lib/gawk/
[18:24:22] <tirnanog> <libdir>/gawk, usually.
[18:24:35] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-46-67-70-100-72.dsl.bell.ca) (Ping timeout: 256 seconds)
[18:26:25] <geirha> Mh. Better create an issue and/or MR for it on gitlab, else I'll forget it. My dev system for shbot is currently down
[18:26:28] <chilversc> on my system that's /usr/lib/x86_64-linux-gnu/gawk apparently
[18:26:37] *** Quits: adac (~adac@clnet-b03-098.ikbnet.co.at) (Ping timeout: 256 seconds)
[18:32:14] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[18:34:24] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[18:34:29] *** Joins: pieguy128 (~pieguy128@bas8-montreal02-65-93-195-206.dsl.bell.ca)
[18:35:05] *** Joins: lispy (~lispy@user/lispy)
[18:35:25] <emanuele6> chilversc: oh, right you use gawk
[18:36:53] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[18:37:25] *** Joins: zeden (~zeden@user/zeden)
[18:38:15] <emanuele6> huh, why does `showmount' not have a -0 or -z option?
[18:38:43] *** Joins: adac (~adac@static.153.233.47.78.clients.your-server.de)
[18:39:00] <chilversc> I'm not sure an export path can have a new line
[18:40:23] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[18:40:28] *** Joins: nickdiaz1wag209 (~bjpenn_@98.42.87.100)
[18:40:33] <emanuele6> oh, i think NFS doesn't support files with newlines in their name
[18:41:01] *** Quits: sinaowolabi (~SinaOwola@160.152.13.25) (Ping timeout: 256 seconds)
[18:41:10] <emanuele6> oh, well
[18:41:32] <chilversc> I also don't know of any admin that creates exports with newlines in their path
[18:42:40] <Earnestly> emanuele6: No so bad https://0x0.st/oHg2.txt - didn't add reading patterns from file yet, no error handling
[18:42:55] <Earnestly> But since gawk fnmatch exists, less interested
[18:43:03] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 256 seconds)
[18:43:18] <emanuele6> also python
[18:43:22] <Earnestly> Literally just while getdelim; for each pattern, fnmatch pattern, line
[18:43:32] <Earnestly> Yes but python isn't C
[18:43:37] *** Quits: lispy (~lispy@user/lispy) (Ping timeout: 256 seconds)
[18:43:37] *** Quits: igemnace (~ian@user/igemnace) (Ping timeout: 256 seconds)
[18:43:38] <emanuele6> also C then
[18:43:40] <Earnestly> If you include python, you can include any language
[18:44:28] <Earnestly> chilversc: It's not case of does, but can.  Unless your system excludes this from happening, best not to rely on it if you can help it
[18:45:10] *** Joins: igemnace (~ian@user/igemnace)
[18:45:26] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 252 seconds)
[18:48:57] *** Quits: sinaowolabi_ (~SinaOwola@160.152.13.25) (Ping timeout: 256 seconds)
[18:49:47] *** Joins: betuxy (~betuxy@p579ad834.dip0.t-ipconnect.de)
[18:49:53] <emanuele6> showmount -e | gawk -l fnmatch -v config_file="${config_file//\\/\\\\}" 'BEGIN { while ((getline < config_file) == 1) patterns[++p] = $0; close(config_file) } } { for (i = 1; i <= p; ++i) if (fnmatch(patterns[p], $0, FNM["PATHNAME"]) == 0) { print; break } }' | mount-exports
[18:49:55] <emanuele6> neat
[18:50:07] *** Joins: craigbass76 (~craig@rrcs-24-103-199-170.nys.biz.rr.com)
[18:51:11] <emanuele6> or, if you want the silly colon list thing: showmount -e "$remote" | gawk -l fnmatch -v patterns="${patterns//\\/\\\\}" 'BEGIN { p = split($0, patterns, /:/) } ...'
[18:51:50] <craigbass76> cat blah.csv | sed '/^Branch/d' | head <<< This isn't catching the first line of the file. Neither does grep -v '^Branch'  What am I missing?
[18:52:11] <emanuele6> !cr
[18:52:11] <greybot> Carriage Return (ASCII 13). Often represented by ^M or \r. CRs are found just before newlines in text files generated by DOS/Windows apps. You can see them with ''sed -n l''. See http://mywiki.wooledge.org/BashFAQ/052 to get rid of them.
[18:52:25] *** Joins: ori (~atdt@user/ori)
[18:53:01] <emanuele6> ah, no. that would make 'something$' not work, not '^Branch'
[18:53:22] <Soliton> # grep -v '^Branch' <<< Branch
[18:53:24] <shbot> Soliton: no output
[18:53:43] <Soliton> what exactly does not work?
[18:54:51] <osse> BOM perhaps?
[18:55:17] <Soliton> could be.
[18:55:33] <Soliton> sed -n l blah.csv
[18:55:37] <craigbass76> grep -v '^Branch:' blah.csv gets rid of he other lines starting with Branch, but not the first line of the file. That sed -n l shows \357\273\277 ahead of that first line,
[18:55:55] <osse> goddammit I'm a genius
[18:55:59] <emanuele6> :o
[18:56:44] <Soliton> so remove the BOM or adjust the regex.
[18:56:45] <emanuele6> # printf '\\x%x' "$(( 0357 ))" "$(( 0273 ))" "$(( 0277 ))"
[18:56:47] <shbot> emanuele6: \xef\xbb\xbf
[18:56:50] <emanuele6> yep that is bom
[18:57:03] <Soliton> !bom
[18:57:03] <greybot> The unicode byte-order-mark determines the endianness of UTF-N files where N>8. http://unicode.org/faq/utf_bom.html#BOM
[18:57:22] <tirnanog> someone set us up the bom. ok, I'll get my coat.
[18:57:37] <ori> I'd like to be able to define envs vars that propagate to all interactive shells, including ones that were started before the env var was defined. I was thinking of a combination of https://github.com/rcaloras/bash-preexec + an in-memory key-value store. Has anyone done this? Is there a better way?
[18:58:10] *** Quits: Oleg (~Oleg@ool-45745511.dyn.optonline.net) (Quit: WeeChat 3.4)
[18:58:17] <Soliton> do something sane instead?
[18:58:33] <emanuele6> use a variable daemon or files in the filesystem. environemnt variables are not global.
[18:58:36] <emanuele6> !environment
[18:58:37] <greybot> Each process has its own private variable space called the "environment". A child inherits a *copy* of the parent's. See http://mywiki.wooledge.org/Environment
[18:58:56] <craigbass76> osse: thanks.
[18:59:30] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[19:00:24] *** Quits: masber (~masber@2001:620:808:1200:8000::13) (Quit: Client closed)
[19:00:37] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:e15c:b936:df3f:82e6)
[19:01:01] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[19:01:28] *** Joins: Oleg (~Oleg@ool-45745511.dyn.optonline.net)
[19:01:31] *** Quits: thevishy (~Nishant@2405:201:f005:c007:3c07:8d1a:dd0:be31) (Quit: Leaving)
[19:01:53] <Bayes> I'm building a script that has a few commands I typically run in a folder, eg `./script clean`, `./script sync`, `./script list`, `./script check`. I was thinking of having doA, doB, doC functions and then a case statement to call the right function based on $1. Is that a reasonable approach or is there something more natural for this kind of
[19:01:54] <Bayes> things in Bash?
[19:02:10] <Bayes> I checked the bashFAQs and I didn't find anything relevant
[19:02:15] <tirnanog> ori: you can run whatever hare-brained code you want from PROMPT_COMMAND, in the case of bash. no github projects required for that, necessarily.
[19:02:27] <Bayes> and just for reference I don't plan on using flags
[19:02:28] *** Quits: pieguy128 (~pieguy128@bas8-montreal02-65-93-195-206.dsl.bell.ca) (Ping timeout: 250 seconds)
[19:02:52] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[19:03:02] *** Joins: sinaowolabi_ (~SinaOwola@102.134.114.1)
[19:03:10] <Soliton> you could call the functions like the subcommmand then you don't need case.
[19:03:48] *** Quits: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de) (Remote host closed the connection)
[19:04:16] <Soliton> though for error handling case might still be nice.
[19:04:23] <tirnanog> ori: there is no elegant equivalent of zsh preexec, though. it requires (ab)using a DEBUG trap. presumably, that's what said project does.
[19:04:37] <Bayes> ah so you can call the functions right from the script call?
[19:04:56] *** Quits: ullbeking_ (sid5364@id-5364.ilkley.irccloud.com) (Ping timeout: 245 seconds)
[19:05:04] *** Quits: YHVH (~yhvh@c-98-235-30-231.hsd1.pa.comcast.net) (Ping timeout: 250 seconds)
[19:05:09] <Soliton> i don't know what that means. if $1 is the function name then you call the function with: "$1"
[19:05:42] <ori> tirnanog: right, I think so
[19:05:51] *** Quits: tomboy64 (~tomboy64@user/tomboy64) (Ping timeout: 268 seconds)
[19:06:38] *** Joins: tomboy64 (~tomboy64@user/tomboy64)
[19:07:01] *** Quits: yustin (~yustin@user/yustin) (Ping timeout: 245 seconds)
[19:07:56] <Bayes> Soliton ohhhh that's super nice, I didn't think of just doing "$1"
[19:09:53] *** Quits: Oleg (~Oleg@ool-45745511.dyn.optonline.net) (Quit: WeeChat 3.4)
[19:10:02] *** Joins: ullbeking_ (sid5364@ilkley.irccloud.com)
[19:10:13] <emanuele6> you can also do    do"$1"
[19:10:21] *** Quits: que11en (~oem@dynamic-046-114-173-069.46.114.pool.telefonica.de) (Ping timeout: 245 seconds)
[19:10:45] <emanuele6> to run doA, doB, or doC passing A, B, or C
[19:11:02] <chilversc> only thing to be careful with there is validation such as if someone runs `./script unknown`
[19:11:06] *** Joins: ozoned (~odoood@2601:c8:c000:c4e0::3)
[19:11:36] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-46-67-70-100-199.dsl.bell.ca)
[19:11:58] <emanuele6> that is just    hash do"$1" 2> /dev/null && do"$1"    instead of do"$1" directly.
[19:12:40] <chilversc> with the do prefix it's safer, without it you run the risk of running an unintended command
[19:12:45] *** Joins: junebug (~junebug@2600:1700:3db0:2540:11d6:6b43:33af:a788)
[19:12:56] <emanuele6> `declare -f do"$1" >/dev/null' if you only want functions.
[19:13:02] <emanuele6> it depends on what you are trying to do.
[19:13:09] <emanuele6> you could also just have a list
[19:13:31] <emanuele6> [[ $1 == @(A|B|C) ]] || error; do"$1"
[19:13:50] *** Quits: odoood (odoood@gateway/vpn/protonvpn/odoood) (Ping timeout: 260 seconds)
[19:14:57] *** Joins: hqdruxn08_ (~hqdruxn08@user/hqdruxn08)
[19:16:46] *** Quits: hqdruxn08 (~hqdruxn08@user/hqdruxn08) (Ping timeout: 250 seconds)
[19:17:21] *** Joins: hqdruxn08__ (~hqdruxn08@user/hqdruxn08)
[19:18:20] *** Joins: tedwing (~anon@lfbn-idf3-1-1415-210.w109-221.abo.wanadoo.fr)
[19:19:16] *** Joins: frostwork (~frostwork@user/frostwork)
[19:19:56] *** Quits: XV8 (~XV8@2601:5cb:c001:50:f81d:9eae:67e3:1b35) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:20:51] *** Quits: hqdruxn08_ (~hqdruxn08@user/hqdruxn08) (Ping timeout: 250 seconds)
[19:20:59] *** Joins: mat001 (~mat001@213.143.69.121)
[19:21:01] *** Quits: son0p (~ff@181.136.122.143) (Ping timeout: 256 seconds)
[19:21:03] <emanuele6> or even something like: declare -A functions=(); register () { functions[${FUNCNAME[-2]}]= ;}; a () { echo a; register ;}; b () { echo b; register ;}; for f in "${!functions[@]}"; [[ $1 == "$f" ]] && "$f" "${@:1}"; done
[19:22:01] <Bayes> yeah I see that just calling "$1" can not be the best
[19:22:12] <Bayes> a full passthru is always kinda dangerous I guess
[19:22:35] *** Quits: hqdruxn08__ (~hqdruxn08@user/hqdruxn08) (Ping timeout: 250 seconds)
[19:22:38] <Bayes> so far I'm starting with this small script for myself so I think I'm keeping it simple until I get a better sense of shell scripting
[19:23:51] <emanuele6> oh, register inside a function would not work, neverimind.
[19:24:43] *** Joins: Minvera (~Minvera@user/Minvera)
[19:25:26] *** Quits: mat001 (~mat001@213.143.69.121) (Ping timeout: 250 seconds)
[19:26:05] *** Joins: YHVH (~yhvh@2601:982:8300:8090:ee:de5c:a08d:e822)
[19:26:26] <Soliton> pass through is exactly what you asked for.
[19:27:05] <Soliton> for safety you can check what you want to pass through.
[19:27:49] *** Quits: johnjaye (~pi@173.209.65.233) (Ping timeout: 256 seconds)
[19:29:27] <Soliton> not sure what safety means here anyway. are the arguments coming from someone that cannot otherwise run whatever command they like?
[19:29:32] *** Joins: Maxattax97 (~max@71-222-143-249.albq.qwest.net)
[19:34:16] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-46-67-70-100-199.dsl.bell.ca) (Ping timeout: 256 seconds)
[19:34:36] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[19:34:37] *** Joins: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de)
[19:36:42] *** Joins: bluedust_ (~bluedust@185.206.227.142)
[19:36:58] *** Joins: son0p (~ff@181.136.122.143)
[19:37:00] *** Joins: SoniEx2 (~quassel@autistic.space)
[19:37:41] <SoniEx2> how do you add completions to this? https://soniex2.autistic.space/git-repos/bashsession.git/browse/refs/heads/default/tree/session.bash/
[19:37:44] <SoniEx2> completions are confusing :/
[19:37:49] *** SoniEx2 is now known as Soni
[19:38:28] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[19:38:54] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[19:39:28] <Bayes> here's my first attempt: https://pastebin.com/raw/VaBP292t `./script sync data` or `./script sync data-large` to make the right rsync call
[19:39:53] *** Quits: bluedust (~bluedust@117.222.188.38) (Ping timeout: 252 seconds)
[19:40:04] <Soliton> $@ contains $1.
[19:40:37] *** Joins: johnjaye (~pi@173.209.65.233)
[19:40:50] <Soliton> instead of $(pwd) you can use $PWD.
[19:40:53] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-45-67-70-24-105.dsl.bell.ca)
[19:41:49] <Soliton> for some reason sync ignores $1.
[19:42:19] <Soliton> if you call  sync data  then data is $1.
[19:42:33] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 256 seconds)
[19:42:33] <emanuele6> "${@:1}"
[19:42:45] <Soliton> just "$@" is fine.
[19:42:45] <Bayes> oh nice
[19:42:50] <Bayes> thanks for the feedback
[19:43:34] <emanuele6> well, it would not have worked
[19:43:42] <Bayes> is there a proper way to conditionally add some flags to the rsync call?
[19:43:43] <OMGOMG> < Soliton> if you call  sync data  then data is $1.
[19:43:50] <OMGOMG> if you call sync sync data then data is $2
[19:44:08] <Soliton> sure, but i already mentioned that is silly.
[19:44:37] *** Joins: bluedust (~bluedust@117.222.188.38)
[19:45:44] <Soliton> Bayes: add the flags to an array and call rsync with that.
[19:45:57] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-45-67-70-24-105.dsl.bell.ca) (Ping timeout: 256 seconds)
[19:46:18] <Bayes> Soliton ah gotcha, so the whole business of building the right rsync call is done via an array
[19:46:24] <Bayes> ie add or remove array elements as needed
[19:47:30] *** Quits: tobybl (~tobybl@dhcp-199-233.inf.ed.ac.uk) (Remote host closed the connection)
[19:47:50] <Soliton> i would only add but sure.
[19:47:58] *** Quits: bluedust_ (~bluedust@185.206.227.142) (Ping timeout: 250 seconds)
[19:48:36] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-50-65-93-192-46.dsl.bell.ca)
[19:48:48] <Bayes> thanks, lot to learn
[19:49:20] <Earnestly> emanuele6: https://0x0.st/oHEN.txt (it's pretty meh, but poc/wip)
[19:49:55] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Ping timeout: 256 seconds)
[19:50:03] *** Joins: hqdruxn08 (~hqdruxn08@user/hqdruxn08)
[19:50:23] *** Joins: A|an (~Alan@173.218.175.171)
[19:54:34] *** Quits: bluedust (~bluedust@117.222.188.38) (Remote host closed the connection)
[19:55:08] *** Joins: Adoi (~Adoi@user/adoi)
[19:55:34] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Remote host closed the connection)
[19:56:12] *** Quits: kotteletfisk (~kotteletf@customer-185-24-169-81.ip4.gigabit.dk) (Remote host closed the connection)
[19:56:53] *** Joins: hqdruxn08_ (~hqdruxn08@user/hqdruxn08)
[19:57:51] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[19:59:08] *** Quits: adac (~adac@static.153.233.47.78.clients.your-server.de) (Ping timeout: 252 seconds)
[19:59:19] *** Quits: glider (~glider@user/glider) (Quit: ZNC 1.9.x-git-111-f2cdc3db - https://znc.in)
[19:59:19] *** Quits: anderson (~ande@user/anderson) (Quit: bye)
[19:59:20] *** Quits: eldritch_ (~eldritch@user/eldritch/x-9272577) (Quit: bye)
[19:59:33] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-50-65-93-192-46.dsl.bell.ca) (Ping timeout: 256 seconds)
[20:00:58] *** Quits: hqdruxn08 (~hqdruxn08@user/hqdruxn08) (Ping timeout: 260 seconds)
[20:01:23] *** Joins: eldritch_ (~eldritch@user/eldritch/x-9272577)
[20:03:45] *** Quits: ekathva (~ekathva@2001:999:51:be01:2c4a:6b25:b5d5:f2c9) (Ping timeout: 250 seconds)
[20:04:16] <emanuele6> i think the patterns in the file should also be NUL delimited
[20:04:23] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[20:05:04] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:a529:1406:bd3:aa5d)
[20:05:04] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:a529:1406:bd3:aa5d) (Changing host)
[20:05:04] *** Joins: skapata (~Skapata@user/skapata)
[20:05:15] *** Quits: _sgen (~sgen@2607:fea8:7ce1:c8e0:ec63:8eee:4635:2aa8) (Quit: Leaving)
[20:05:30] *** Joins: sgen (~sgen@2607:fea8:7ce1:c8e0:f141:ba0b:da0:3c4d)
[20:05:34] *** Joins: glider (~glider@user/glider)
[20:05:42] *** Quits: sgen (~sgen@2607:fea8:7ce1:c8e0:f141:ba0b:da0:3c4d) (Read error: Connection reset by peer)
[20:05:54] *** Joins: sgen (~sgen@2607:fea8:7ce1:c8e0:f141:ba0b:da0:3c4d)
[20:06:35] *** Quits: unop (~unop@195.91.14.193) (Remote host closed the connection)
[20:07:14] *** Joins: unop (~unop@195.91.14.193)
[20:07:40] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[20:08:19] <Earnestly> nah
[20:08:26] <Earnestly> terrible ui
[20:08:44] <emanuele6> there is no way to match \n in the pattern otherwise.
[20:08:55] <Earnestly> would rather just not have patterns in file at all, read patterns on stdin and input data as file
[20:09:02] <Earnestly> ik
[20:09:51] *** Joins: lavaball (felix@31.204.155.215)
[20:09:53] *** Joins: anderson (~ande@user/anderson)
[20:10:47] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-37-70-24-250-112.dsl.bell.ca)
[20:10:54] <emanuele6> `-F' (NL delimited file), `-f' (LF delimited file), `-e' (LF delimited pattern), `-E' (full pattern), `-l' (arguments are full patterns by default)
[20:10:59] <emanuele6> something like that
[20:11:02] <Earnestly> emanuele6: proper solution would be to parse \n (and \\n escape) in pattern file as dsl
[20:11:09] <emanuele6> yuck
[20:11:16] <emanuele6> syntax on top of syntax
[20:11:18] <Earnestly> emanuele6: chsum and such do this
[20:11:42] <Earnestly> emanuele6: If you digest file with nonsense, hash name gets \ prepended to line, same as xattrs
[20:11:45] <emanuele6> s/NL/NUL/
[20:11:59] *** Quits: elena_re (~elena@213.194.126.155) (Quit: Konversation terminated!)
[20:12:11] <Earnestly> So not without precedent
[20:12:19] <emanuele6> i would just rather have separate options to load an LF delimited file and a NUL delimited file
[20:13:07] <emanuele6> ( also maybe make the arguments LF delimited lists patterns by default à la grep and add an option to disable that behaviour )
[20:13:17] <emanuele6> s/lists/& of/
[20:14:19] <emanuele6> so you can have    printf '%s\0' "${strings[@]}" | fnmatch -0l -- "${patterns[@]}"
[20:15:25] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[20:15:48] *** Joins: becks` (~becks`@bbcs-125-80.pub.wingo.ch)
[20:16:04] <emanuele6> also maybe something like `-V' (all patterns are negated by default), `-v' (the patterns specified by the next -f/-F/-e/-E are negated)
[20:16:13] *** Quits: callq (~callq@2409:4062:2e9e:2081:73:e6d7:2365:394e) (Quit: callq)
[20:20:28] *** Joins: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net)
[20:23:16] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-37-70-24-250-112.dsl.bell.ca) (Ping timeout: 245 seconds)
[20:24:59] *** Joins: mat001 (~mat001@213.143.69.121)
[20:25:30] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[20:25:31] <Earnestly> emanuele6: Actually would just remove -f feature entirely, have all patterns as argv
[20:25:46] <emanuele6> that makes more sense, yes
[20:25:52] *** Parts: foo (~foo@user/foo/x-8763512) ()
[20:26:04] <emanuele6> but if it uses something like -f, it should behave similarly to grep-f imo
[20:27:10] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[20:28:16] *** Quits: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 250 seconds)
[20:28:45] *** Quits: mat001 (~mat001@213.143.69.121) (Remote host closed the connection)
[20:29:02] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:29:23] *** Joins: mat001 (~mat001@72.28.108.216)
[20:30:19] *** Quits: junebug (~junebug@2600:1700:3db0:2540:11d6:6b43:33af:a788) (Quit: Leaving)
[20:31:36] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 276 seconds)
[20:31:51] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-46-67-70-100-151.dsl.bell.ca)
[20:32:05] *** Joins: ghoust (~ghoust@46.246.4.134)
[20:32:43] *** Quits: revolve (~u0_a227@82-132-236-173.dab.02.net) (Read error: Connection reset by peer)
[20:34:46] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[20:36:11] *** Quits: ozoned (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 245 seconds)
[20:38:37] *** Quits: YHVH (~yhvh@2601:982:8300:8090:ee:de5c:a08d:e822) (Ping timeout: 240 seconds)
[20:39:13] *** Quits: hqdruxn08_ (~hqdruxn08@user/hqdruxn08) (Ping timeout: 256 seconds)
[20:40:27] *** Quits: unop (~unop@195.91.14.193) (Remote host closed the connection)
[20:40:34] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[20:40:35] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-46-67-70-100-151.dsl.bell.ca) (Ping timeout: 256 seconds)
[20:40:42] *** Joins: unop (~unop@195.91.14.193)
[20:41:56] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[20:42:07] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[20:42:58] *** Joins: XV8 (~XV8@2601:5cb:c001:50:b02a:1289:ddb1:fbc8)
[20:43:00] *** Quits: Maxattax97 (~max@71-222-143-249.albq.qwest.net) (Ping timeout: 250 seconds)
[20:44:23] *** Quits: n4dir (~user@mue-88-130-56-036.dsl.tropolys.de) (Remote host closed the connection)
[20:44:29] *** Quits: frostwork (~frostwork@user/frostwork) (Quit: Leaving)
[20:45:07] *** Quits: dreamon (~dreamon@ppp-88-217-91-105.dynamic.mnet-online.de) (Ping timeout: 256 seconds)
[20:45:31] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[20:46:01] *** Joins: kilobyte_ch (~kbch@213.55.225.21)
[20:46:16] *** Quits: ghoust (~ghoust@46.246.4.134) (Quit: ghoust)
[20:46:59] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 252 seconds)
[20:48:05] *** Quits: potamides (~amnifiliu@2003:a:270f:c400:28d8:e046:7d92:3970) (Ping timeout: 252 seconds)
[20:48:17] *** Quits: kilobyte2 (~kbch@77.109.171.85) (Ping timeout: 256 seconds)
[20:51:06] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-45-67-70-24-115.dsl.bell.ca)
[20:51:32] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[20:53:32] *** Joins: Maxattax97 (~max@71-222-143-249.albq.qwest.net)
[20:55:41] *** Quits: Maxattax97 (~max@71-222-143-249.albq.qwest.net) (Remote host closed the connection)
[20:55:52] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:59:38] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-45-67-70-24-115.dsl.bell.ca) (Ping timeout: 252 seconds)
[20:59:49] <Bilge> I want to log everything, STDOUT and STDERR to a log file, (e.g. 2>&1 | tee -a) but then somehow re-split the channels so that I can omit STDOUT so cron doesn't email me everything also (only errors)
[21:00:01] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[21:00:11] <Bilge> Why does this seem to be a common problem without a decent solution?
[21:00:28] *** Quits: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de) (Remote host closed the connection)
[21:01:46] <Bilge> The only decent solution I found is some vaporware that only exists on the archived web and would need to be compiled from source if you actually wanted to use it https://web.archive.org/web/20170409100908/http://www.uow.edu.au/~sah/cronwrap-1.0-man.txt
[21:01:59] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:e15c:b936:df3f:82e6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:02:30] *** Quits: ProperNoun (~holyShizn@user/propernoun) (Ping timeout: 250 seconds)
[21:03:06] <Bilge> Of course, that's not a general stream merging/splitting solution, it's something more specific to my use-case
[21:03:15] *** Joins: ProperNoun (~holyShizn@user/propernoun)
[21:03:34] <kolbe> Bilge: you say you want to put everything into a single file but then re-split it. can you envision some logical way to do that?
[21:04:06] *** Joins: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de)
[21:04:55] <Bilge> No
[21:05:03] <kolbe> ok :-)
[21:05:28] <Soliton> { cmd > logfile; } 2>&1 | tee -a logfile
[21:05:28] <Bilge> Merging them is a folley since they're already correct to begin with, a folley that only exists because we want to log everything
[21:05:43] <kolbe> why put them in the same file in the first place?
[21:05:45] <Soliton> relative ordering of stdout and stderr may change.
[21:06:27] *** Quits: sinaowolabi_ (~SinaOwola@102.134.114.1) (Read error: Connection reset by peer)
[21:06:46] *** Quits: MajorBiscuit (~MajorBisc@c-001-021-032.client.tudelft.eduvpn.nl) (Ping timeout: 260 seconds)
[21:07:18] <Bilge> I don't really understand what that does
[21:07:33] <Soliton> output stderr and log both.
[21:07:48] <Bilge> How does it only output stderr?
[21:08:08] <Soliton> by only piping stderr to tee.
[21:08:24] *** Joins: gamara (~gamara@cpe9050cade20e3-cm9050cade20e0.cpe.net.cable.rogers.com)
[21:08:39] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-57-65-92-163-175.dsl.bell.ca)
[21:09:01] <Bilge> Why/when would ordering change?
[21:09:31] <gamara> is it possible to loop connect to ssh servers copy data from a file, then save that into a file on the host machine?
[21:09:51] <Soliton> the logfile is written through different descriptors.
[21:09:59] <Soliton> even different processes here.
[21:10:14] <Friithian> like scp server@server:/…/thing.txt ./localFolder/thing.txt ? gamara
[21:10:18] <Bilge> Even so, it's handled a line at a time isn't it? Or does buffering happen?
[21:10:24] <gamara> so connect to ssh server -> save_file_contents to variable -> exit ssh server -> save contents to host file
[21:10:25] <Friithian> wait we're not supposed to use scp anymore are we
[21:10:31] *** Joins: museee (~museee@user/museee)
[21:10:33] <Soliton> !scp
[21:10:33] <greybot> "The scp protocol is outdated, inflexible and not readily fixed." <https://www.openssh.com/txt/release-8.0> If you have problems with scp, stop using it. Consider sftp or rsync, or ssh u@h 'cat > remotefile' < localfile, or tar cf - dir | ssh u@h 'cd /somewhere && tar xf -'
[21:10:48] <phy1729> iirc they're fixing scp
[21:10:48] <Friithian> I always forget lol
[21:11:09] <Friithian> I dont actually have issues with scp is it bad to continue use?
[21:11:29] <Soliton> i'd rather use rsync.
[21:11:45] *** Joins: dreamon (~dreamon@pd9503995.dip0.t-ipconnect.de)
[21:11:48] <gamara> anyone have an example snippet of code?
[21:11:52] <Friithian> but if for the simple tasks I use scp for is it bad to use it?
[21:12:00] <Soliton> but the issues with scp are not super common that it will break all the time certainly.
[21:12:02] <phy1729> https://www.openssh.com/releasenotes.html / https://marc.info/?l=openbsd-cvs&m=163114389928309&w=2
[21:12:26] <Friithian> I quite literally have never had an issue with scp in the couple years I have used it
[21:12:44] <Soliton> phy1729: sounds like they're just using sftp instead.
[21:12:52] <phy1729> basically
[21:13:13] <gamara> so I should look up sftp kind of a noob with bash
[21:13:23] *** Quits: kilobyte_ch (~kbch@213.55.225.21) (Ping timeout: 252 seconds)
[21:13:49] <Friithian> you should look up rsync
[21:14:01] <gamara> thank you you guys are great :)
[21:14:02] <Soliton> or you can use ssh.
[21:14:27] <Soliton> it sounds like you may just want to print a remote file and redirect it to a local file.
[21:15:29] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-57-65-92-163-175.dsl.bell.ca) (Ping timeout: 256 seconds)
[21:15:32] *** Joins: adac (~adac@static.153.233.47.78.clients.your-server.de)
[21:16:28] <Soliton> for host in ...; do ssh "$host" 'cat /path/to/remote/file' < /dev/null; done > local_aggregate_file
[21:16:44] *** Joins: Night-Shade (~Tim@ip1f11e523.dynamic.kabel-deutschland.de)
[21:16:48] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[21:18:01] *** Joins: YHVH (~yhvh@c-98-235-30-231.hsd1.pa.comcast.net)
[21:18:21] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[21:19:20] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[21:20:29] *** Joins: sinaowolabi_ (~SinaOwola@160.152.13.25)
[21:20:32] *** Quits: unop (~unop@195.91.14.193) (Remote host closed the connection)
[21:20:33] <gamara> https://pastebin.com/BwQMEiZQ
[21:20:33] <pasteban> Paste is available without ads on https://pastebin.com/raw/BwQMEiZQ
[21:20:43] <Friithian> !check
[21:20:45] <checkbot> gamara: Line 6: Use [ x = y ] to compare values (or quote '==' if literal). Line 1: Don't use $ on the left side of assignments. See https://shellcheck.net/?id=cb24245
[21:21:09] *** Joins: unop (~unop@195.91.14.193)
[21:21:10] <gamara> would this work for sshing and saving contents of a file
[21:21:20] <gamara> between ssh servers
[21:21:38] <Soliton> looks like mostly non-sense.
[21:21:47] <gamara> ok then no haha
[21:21:51] <jelly> scp is absolutely fine for single files and I loved using it with zsh extended globs until upstream broke then "fixing" security issues
[21:22:16] <Soliton> when you call  ssh host  then you get an interactive shell on the host. your script will not magically continue to run on the remote.
[21:22:52] <Bilge> Well anyway, thanks Soliton, I think your solution will work for my purposes ¦)
[21:23:31] <Soliton> there is no better solution anyway.
[21:25:29] <Soliton> gamara: since that is really pretty wild guessing i would suggest to read the bash guide in the topic for starters.
[21:26:16] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-45-67-70-24-195.dsl.bell.ca)
[21:27:43] *** Quits: gabriele (~gabriele@user/gabriele) (Quit: Leaving)
[21:28:02] *** Joins: fef (~thedawn@user/thedawn)
[21:28:12] *** Joins: kilobyte_ch (~kbch@77.109.171.85)
[21:28:30] <Bilge> Why isn't there just a utility that logs both stdout AND stderr to the same file?
[21:28:52] *** Quits: maledictium (~crux@bl23-232-57.dsl.telepac.pt) (Remote host closed the connection)
[21:29:00] <Bilge> Without redirection
[21:29:02] <Soliton> that is trivial but that wasn't your goal.
[21:29:16] <gamara> alright I will :)  thanks
[21:29:27] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[21:29:48] <emanuele6> Bilge: cmd 2>&1 > log    or     cmd 2>&1 | tee log | other_command
[21:30:04] <emanuele6> err, cmd > log 2>&1
[21:30:25] *** Quits: adac (~adac@static.153.233.47.78.clients.your-server.de) (Ping timeout: 250 seconds)
[21:32:07] *** Quits: unop (~unop@195.91.14.193) (Remote host closed the connection)
[21:32:21] *** Joins: unop (~unop@195.91.14.193)
[21:33:03] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-45-67-70-24-195.dsl.bell.ca) (Ping timeout: 256 seconds)
[21:33:18] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[21:34:44] <Soliton> # cmd() { echo err >&2; echo out; }; { cmd > logfile; } 2>&1 | tee -a logfile; sed s/^/logfile:/ logfile
[21:34:46] <shbot> Soliton: err
[21:34:46] <shbot> Soliton: logfile:out
[21:34:46] <shbot> Soliton: logfile:err
[21:35:26] <Soliton> once you separate the streams there is no way to guarantee that the order stays the same.
[21:37:22] *** Joins: crashrep (~crashrep@user/crashrep)
[21:39:17] *** Quits: sinaowolabi_ (~SinaOwola@160.152.13.25) (Ping timeout: 256 seconds)
[21:39:17] *** Joins: vindex10 (~vindex10@gateway/tor-sasl/vindex10)
[21:39:46] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-53-65-93-195-206.dsl.bell.ca)
[21:39:56] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[21:40:38] *** Quits: Mo (~Mo@dynamic-077-000-072-132.77.0.pool.telefonica.de) (Ping timeout: 250 seconds)
[21:42:24] *** Joins: ozoned (~odoood@2601:c8:c000:c4e0::3)
[21:43:48] *** ozoned is now known as odoood
[21:44:57] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Quit: Leaving)
[21:46:39] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-53-65-93-195-206.dsl.bell.ca) (Ping timeout: 256 seconds)
[21:47:51] *** Quits: masoudd (~masoudd@user/masoudd) (Quit: Leaving)
[21:50:51] *** Quits: vindex10 (~vindex10@gateway/tor-sasl/vindex10) (Quit: vindex10)
[21:50:56] *** Joins: jmew (~jmew@host-78-147-81-209.as13285.net)
[21:50:56] *** Quits: jmew (~jmew@host-78-147-81-209.as13285.net) (Changing host)
[21:50:56] *** Joins: jmew (~jmew@user/jmew)
[21:52:50] <kolbe> Bilge: the only way for any utility to see both stderr and stdout is via redirection
[21:56:26] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[21:57:59] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-224.dsl.bell.ca)
[21:59:23] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[21:59:45] *** Joins: junebug (~junebug@2600:1700:3db0:2540:b872:5e21:461f:e72c)
[21:59:49] *** Joins: sinaowolabi (~SinaOwola@160.152.13.25)
[21:59:55] *** Joins: nickdiazswag209 (~bjpenn_@13.110.54.38)
[22:01:11] *** Quits: finsternis (~X@23.226.237.192) (Remote host closed the connection)
[22:02:44] *** Quits: nickdiaz1wag209 (~bjpenn_@98.42.87.100) (Ping timeout: 256 seconds)
[22:03:10] *** Joins: finsternis (~X@23.226.237.192)
[22:06:01] *** Joins: magla (~gelignite@55d436fa.access.ecotel.net)
[22:06:36] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[22:09:55] *** Joins: knstn (~knstn@ppp-94-66-57-96.home.otenet.gr)
[22:10:24] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[22:11:11] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:e15c:b936:df3f:82e6)
[22:13:48] *** Joins: off^ (~off@128-092-174-141.biz.spectrum.com)
[22:13:59] *** Quits: unlaudable (~unlaudabl@129.232.131.162) (Quit: Client closed)
[22:14:16] *** Joins: unlaudable (~unlaudabl@129.232.131.162)
[22:16:54] <craigbass76> cat file | sed '/^[0-9]$|^[1-9][0-9]$|^(100)$/d'  << I've been dorking with this a bit, and can't figure out what I'm missing. I am trying to delete any line that begins with a number 1-100. Not a line number, just the text 1, 55, 76, etc.
[22:17:55] <Soliton> (100) matches (100)
[22:18:05] <Soliton> cat is useless there, btw.
[22:18:23] <koala_man> the easiest way to debug anything is finding a MCVE
[22:18:25] <larryv> craigbass76: iirc POSIX basic regular expressions don't support branches (i.e., treating | as special)
[22:18:31] <koala_man> # echo a | sed '/a|b/d'
[22:18:32] <shbot> koala_man: a
[22:19:31] *** Quits: TomyWork (~TomyLobo@p200300e80f0067007d97dd849101fee4.dip0.t-ipconnect.de) (Quit: Leaving)
[22:19:37] <Soliton> !bre
[22:19:37] <greybot> Basic Regular Expressions. See http://mywiki.wooledge.org/RegularExpression or (POSIX) https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap09.html#tag_09_03
[22:19:44] <Soliton> sed uses BRE.
[22:20:01] <Soliton> you can probably use sed -E to get ERE though.
[22:20:33] <craigbass76> There are only about 3 line in this file that are going to match -- figured that might be small enough. Then I was going to grab the mother lode...
[22:20:36] <Soliton> or just split into multiple commands.
[22:21:05] <larryv> plus, each branch tries to match a whole line, not just the beginnings
[22:21:15] *** Joins: The_Blod- (~Blode@user/the-blode/x-7164444)
[22:21:47] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[22:21:48] *** Quits: betuxy (~betuxy@p579ad834.dip0.t-ipconnect.de) (Quit: Connection closed)
[22:24:21] <craigbass76> sed '/^[0-9] /d' nixes one of them I was after (4), so now just pass that output through another sed you think?
[22:24:36] <larryv> # printf '%s\n' a 0 z | sed -e '/^[0-9]/d' -e '/^[1-9][0-9]/d' -e '/^100/d'
[22:24:38] <shbot> larryv: a
[22:24:38] <shbot> larryv: z
[22:24:39] <Soliton> no, add more sed commands instead.
[22:25:15] <Soliton> you can also use semicolons to separate commands.
[22:25:16] <larryv> could probably just glue them together with semicolons, i didn't try it
[22:25:19] <larryv> ^ yeah
[22:25:46] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[22:26:56] <larryv> # printf '%s\n' a 100 z | sed '/^[0-9]/d; /^[1-9][0-9]/d; /^100/d'
[22:26:58] <shbot> larryv: a
[22:26:58] <shbot> larryv: z
[22:27:58] <Soliton> it seems they also want to match the next character to avoid matching 222 for example.
[22:28:22] *** Joins: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de)
[22:28:55] <Soliton> could also use awk: awk '$1+0 > 100'
[22:31:57] *** Joins: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys)
[22:33:11] *** Quits: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com) (Quit: csmiga)
[22:34:03] *** Joins: ekathva (~ekathva@2001:999:51:be01:2c4a:6b25:b5d5:f2c9)
[22:34:48] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 250 seconds)
[22:36:08] *** Quits: unlaudable (~unlaudabl@129.232.131.162) (Quit: Client closed)
[22:36:20] *** Joins: unlaudable (~unlaudabl@129.232.131.162)
[22:37:45] *** Joins: medard (~mithrin@stip-static-62.213-81-207.telecom.sk)
[22:38:01] *** Joins: ka80_ (~ka80@111.60.138.34.bc.googleusercontent.com)
[22:38:24] *** Joins: akaporu9 (~akaporu@hs23.make2.me)
[22:38:29] *** Quits: mithrin (~mithrin@stip-static-62.213-81-207.telecom.sk) (Remote host closed the connection)
[22:38:29] *** Quits: ka80 (~ka80@111.60.138.34.bc.googleusercontent.com) (Remote host closed the connection)
[22:38:29] *** Quits: akaporu (~akaporu@hs23.make2.me) (Quit: Ping timeout (120 seconds))
[22:38:29] *** Quits: masterkorp (~masterkor@user/masterkorp) (Quit: Ping timeout (120 seconds))
[22:38:30] *** akaporu9 is now known as akaporu
[22:38:31] *** Joins: masterkorp3 (~masterkor@user/masterkorp)
[22:39:08] *** Quits: flipchan (~filip@user/flipchan) (Remote host closed the connection)
[22:39:41] *** Joins: nickdiaz1wag209 (~bjpenn_@13.110.54.38)
[22:40:03] *** Joins: craig_ (~craig@rrcs-24-103-199-170.nys.biz.rr.com)
[22:40:16] *** Joins: medard__ (~mithrin@stip-static-62.213-81-207.telecom.sk)
[22:40:24] *** Quits: The_Blode (uid537595@user/the-blode/x-7164444) (Quit: Connection closed for inactivity)
[22:40:50] *** Joins: masterkorp (~masterkor@user/masterkorp)
[22:41:03] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-224.dsl.bell.ca) (Ping timeout: 256 seconds)
[22:41:09] *** Joins: sinaowolabi_ (~SinaOwola@160.152.13.25)
[22:41:51] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-224.dsl.bell.ca)
[22:42:01] *** Quits: ozzzo_work (~ozzzo_wor@h87.s239.verisign.com) (Quit: Client closed)
[22:42:10] *** Quits: masterkorp3 (~masterkor@user/masterkorp) (Read error: Connection reset by peer)
[22:42:11] *** Quits: nickdiazswag209 (~bjpenn_@13.110.54.38) (Ping timeout: 256 seconds)
[22:42:23] *** Joins: Betal (~Betal@user/betal)
[22:42:45] *** Quits: medard (~mithrin@stip-static-62.213-81-207.telecom.sk) (Ping timeout: 256 seconds)
[22:42:45] *** Quits: craigbass76 (~craig@rrcs-24-103-199-170.nys.biz.rr.com) (Ping timeout: 256 seconds)
[22:42:56] *** Quits: arinov (~arinov@213.194.126.155) (Read error: Connection reset by peer)
[22:43:30] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[22:44:34] *** Quits: junebug (~junebug@2600:1700:3db0:2540:b872:5e21:461f:e72c) (Quit: Leaving)
[22:44:47] *** Joins: PapaChub (~PapaChub@vzw-54.parabon.com)
[22:45:42] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[22:46:36] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Remote host closed the connection)
[22:46:46] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[22:47:10] <chilversc> emanuele6, Earnestly: thanks for the help earlier, the gawk wrapper around fnmatch works pretty well, I created a quick bats test to try out the various patterns https://paste.centos.org/view/f107a498 https://paste.centos.org/view/992c4517
[22:47:56] <Earnestly> chilversc: I made fnmatch tool https://0x0.st/oH6Q.c lol
[22:48:15] <Earnestly> But I would use gawk's because it's available
[22:48:25] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[22:48:48] *** ouestbillie is now known as cedb
[22:49:07] *** cedb is now known as ouestbillie
[22:49:11] *** Joins: arinov (~arinov@213.194.126.155)
[22:49:21] <chilversc> I expanded the gawk to also check for errors, and operate in include or exclude mode
[22:49:22] *** Joins: smrtz (~smrtz@user/smrtz)
[22:49:26] <Earnestly> chilversc: You can use environment variable instead of -v so that you don't need to escape \
[22:49:47] <Earnestly> chilversc: Yes, this is good.  Slowly gawk will replace entire script
[22:49:52] <chilversc> yeah, I'll tidy that command up tomorrow and wire it into my main script
[22:50:16] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[22:50:29] <Earnestly> chilversc: You can supply $1 and such via -v flags too
[22:50:42] <Earnestly> -v mode=$1
[22:50:45] <Earnestly> "$1" *
[22:51:23] <Earnestly> chilversc: Instead of using <<< "$input", make function take file/stdin directly
[22:52:24] <Earnestly> chilversc: gawk can also do file operations https://www.gnu.org/software/gawk/manual/html_node/Extension-Sample-File-Functions.html
[22:52:39] <Earnestly> I like the idea of invert, might do that with my thing
[22:52:49] <tirnanog> woah, stat. nice.
[22:54:50] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[22:55:15] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 276 seconds)
[22:56:24] <Earnestly> tirnanog: ikr, used it once or twice: https://0x0.st/-7Cu.sh
[22:58:29] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[22:58:36] *** Joins: arinov_ (~arinov@213.194.126.155)
[22:58:37] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[22:58:37] *** Quits: demonbane (~demonbane@71.247.72.217) (Ping timeout: 256 seconds)
[22:58:51] *** Joins: demonbane (~demonbane@71.247.72.217)
[22:59:05] *** Joins: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com)
[23:00:14] *** Joins: ano (~ano@user/ano)
[23:00:45] <chilversc> Earnestly: I will, the <<<$input was just for the test function, in the main script this will be a filter function so that it accepts pipes
[23:01:53] *** Quits: gamara (~gamara@cpe9050cade20e3-cm9050cade20e0.cpe.net.cable.rogers.com) (Quit: Client closed)
[23:02:41] <Earnestly> chilversc: Yes, this is good.  As much as you can make everything filter, just read stdin
[23:03:47] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[23:04:12] <emanuele6> echo "$pattern" >"$patterns_file" ... patterns_file="${patterns_file//\\/\\\\}"  ... while ((getline < patterns_file) == 1) patterns[++p] = $0;
[23:04:14] <emanuele6> what?
[23:04:17] <emanuele6> what's the point of that?
[23:04:28] *** Joins: elena_re (~elena@213.194.126.155)
[23:04:30] *** Quits: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 256 seconds)
[23:04:42] *** Quits: elena_re (~elena@213.194.126.155) (Client Quit)
[23:05:06] <chilversc> emanuele6: just setting up the test
[23:05:31] <emanuele6> huh?
[23:05:31] <chilversc> most of that match function is just to verify the gawk command
[23:06:30] <Soliton> bats is some test framework.
[23:06:32] <chilversc> tomorrows task is to put that gawk command into a proper filter function and process stdin->stdout
[23:07:15] <chilversc> that current match function was just a small wrapper to test the cases file, one test case at a time, so one pattern and one input
[23:08:11] *** Joins: skylite (~skylite@2E6B2CD6.catv.pool.telekom.hu)
[23:08:29] *** Quits: skylite_ (~skylite@2E6B2CD6.catv.pool.telekom.hu) (Ping timeout: 256 seconds)
[23:08:34] <chilversc> the only important thing in that is the gawk command, all the rest is just test harnes
[23:12:48] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[23:12:59] *** Quits: becks` (~becks`@bbcs-125-80.pub.wingo.ch) (Quit: Client closed)
[23:14:51] *** Joins: ano (~ano@user/ano)
[23:15:33] *** Joins: Atque (~Atque@user/atque)
[23:16:12] *** haro_ is now known as haro
[23:18:35] *** Joins: auk (auk@gateway/vpn/protonvpn/auk)
[23:20:20] *** Joins: vegetux (~vegetux@user/vegetux)
[23:21:53] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[23:23:33] <Earnestly> chilversc: btw, invert like that only really makes sense for one pattern
[23:24:01] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[23:24:02] <Earnestly> Hm
[23:24:07] *** Quits: vegetux (~vegetux@user/vegetux) (Client Quit)
[23:24:18] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[23:25:35] *** Joins: vegetux (~vegetux@user/vegetux)
[23:25:59] *** Quits: vegetux (~vegetux@user/vegetux) (Client Quit)
[23:26:36] *** Joins: vegetux (~vegetux@user/vegetux)
[23:26:39] <emanuele6> also why does your loop start from 0?
[23:26:56] <emanuele6> that can't be right
[23:27:00] <Earnestly> hash tables might need to get involved ('seen' style)
[23:34:07] *** Quits: Strom (strom@fedora/strom) ()
[23:34:12] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[23:35:49] <emanuele6> <emanuele6 > showmount -e | gawk -l fnmatch -v config_file="${config_file//\\/\\\\}" 'BEGIN { while ((getline < config_file) == 1) patterns[++p] = $0; close(config_file) } } { for (i = 1; i <= p; ++i) if (fnmatch(patterns[p], $0, FNM["PATHNAME"]) == 0) { print; break } }' | mount-exports
[23:35:56] <emanuele6> mine did not start from 0
[23:36:10] <emanuele6> it does not make sense that it starts from 0
[23:36:18] *** Joins: Strom (~strom@fedora/strom)
[23:37:29] *** Joins: zro (zro@user/zro)
[23:38:29] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:40:06] <emanuele6> $ gawk -l fnmatch 'BEGIN { print fnmatch("", "xxx", FNM["PATHNAME"]) }'
[23:40:08] <emanuele6> 1
[23:40:17] <emanuele6> it only works because empty patterns don't match
[23:40:55] <emanuele6> but in your exclude mode, there will always be a pattern that does not match everything because of that
[23:41:06] *** Quits: martinus__ (~martin@153.27.202.77.rev.sfr.net) (Ping timeout: 250 seconds)
[23:42:00] <emanuele6> that script is filled with weirdness and mistakes
[23:42:10] *** Joins: yustin (~yustin@user/yustin)
[23:43:13] <emanuele6> ( well, empty pattern only match "" actually )
[23:44:06] *** Quits: dmvrtx (dmvrtx@2a01:7e01::f03c:92ff:fefd:6ed6) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[23:44:21] *** Joins: dmvrtx (~dmvrtx@znc.dmvrtx.me)
[23:47:41] *** Joins: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys)
[23:48:12] *** Quits: unop (~unop@195.91.14.193) (Remote host closed the connection)
[23:48:51] *** Joins: unop (~unop@195.91.14.193)
[23:52:04] <Earnestly> emanuele6: cfg=$con... awk 'ENVIRON[cfg]', no need for \ escaping
[23:52:14] <Earnestly> ["cfg"] *
[23:52:42] <emanuele6> sure.
[23:52:56] *** Quits: Memory (~user_name@user/memory) (Remote host closed the connection)
[23:53:04] <Earnestly> emanuele6: I did that c version, https://0x0.st/oH6h.c - as its streaming, can't really do invert
[23:53:50] *** Quits: jensen (~jensen@65.78.100.184) (Ping timeout: 260 seconds)
[23:53:57] *** Joins: Masterphi (~Masterphi@user/masterphi)
[23:54:58] *** Quits: zro (zro@user/zro) (Ping timeout: 250 seconds)
[23:55:23] <emanuele6> Earnestly: aren't you missing a break?
[23:55:29] *** Quits: Masterphi (~Masterphi@user/masterphi) (Client Quit)
[23:55:39] <Earnestly> nah
[23:55:57] <Earnestly> (nor a default)
[23:56:09] <emanuele6> does that not print an input string multiple times
[23:56:11] *** Joins: adac (~adac@static.153.233.47.78.clients.your-server.de)
[23:56:22] <emanuele6> if it matches more than one pattern?
[23:56:42] <Earnestly> Yeah it would
[23:56:48] *** Joins: zro (~zro@user/zro)
[23:56:55] <emanuele6> i have not tested it, but i see that you have: for(i = optind; i < argc; ++i) if(fnmatch(argv[i], line, flags) == 0) printf("%s%c", line, sep);
[23:57:06] <Earnestly> Very basic
[23:57:10] <emanuele6> so it prints line for every pattern that matches
[23:57:33] <Earnestly> Yeah, I suppose I could continue it
[23:57:39] <emanuele6> shouldn't that not be: if(fnmatch(argv[i], line, flags) == 0) { printf("%s%c", line, sep); break; }
[23:57:53] <Earnestly> emanuele6: Could do that
[23:58:14] <emanuele6> # <<< hello grep -e l -e l
[23:58:15] <shbot> emanuele6: hello
[23:58:17] <emanuele6> # <<< hello grep -e l -e o
[23:58:19] <shbot> emanuele6: hello
[23:59:04] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[23:59:37] *** Joins: rigid- (~rigid@user/rigid)
[23:59:49] *** Quits: rigid (~rigid@user/rigid) (Ping timeout: 240 seconds)
