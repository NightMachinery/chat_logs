[00:00:22] <andrewrk> alright stream now, chores later! https://www.twitch.tv/andrewrok/
[00:04:09] *** Joins: rawrrr (uid540880@id-540880.lymington.irccloud.com)
[00:07:07] *** Quits: notapenguin (~ryu@2804:14d:5685:96c7::4) (Quit: WeeChat 3.4.1)
[00:07:27] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[00:07:52] <lemmi> whee
[00:18:22] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[00:19:17] <haze> reverse psychology folks
[00:19:34] *** Joins: mikezackles_ (~mikezackl@gateway/tor-sasl/mikezackles)
[00:20:01] <lemmi> why? maybe this is putting himself first
[00:21:07] *** Quits: kenran (~kenran@200116b82b1f7700d4eceb26990aed28.dip.versatel-1u1.de) (Quit: WeeChat info:version)
[00:21:35] *** Quits: mikezackles (~mikezackl@gateway/tor-sasl/mikezackles) (Ping timeout: 240 seconds)
[00:22:00] *** Joins: tane (~tane@dslb-002-201-234-175.002.201.pools.vodafone-ip.de)
[00:22:00] *** Quits: tane (~tane@dslb-002-201-234-175.002.201.pools.vodafone-ip.de) (Changing host)
[00:22:00] *** Joins: tane (~tane@user/tane)
[00:40:04] <haze> its okay
[00:44:47] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2994:1fbd:6642:1fc1) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:46:01] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2994:1fbd:6642:1fc1)
[00:48:36] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 250 seconds)
[00:56:26] <lemmi> (i was joking and forgot to add a smiley :) )
[00:57:59] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[00:59:03] *** Joins: pretty_d1 (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[01:01:24] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 240 seconds)
[01:02:32] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 240 seconds)
[01:08:09] *** Joins: moog_ (~moog@98.97.86.136)
[01:08:27] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[01:10:39] *** Quits: moog (~moog@107.126.53.19) (Ping timeout: 252 seconds)
[01:17:52] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[01:24:49] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:2015:9361:6306:3ac4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:33:39] *** Quits: pkap (~pkap@193.32.127.213) (Ping timeout: 256 seconds)
[01:34:26] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[01:36:02] *** Quits: pretty_d1 (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 240 seconds)
[01:37:05] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[01:39:39] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[01:52:38] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[02:02:21] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[02:23:10] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 260 seconds)
[02:23:44] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[02:27:24] *** Quits: xackus (~xackus@185.15.0.3) (Ping timeout: 250 seconds)
[02:32:19] *** Joins: notapenguin (~ryu@2804:14d:5685:96c7::4)
[02:37:35] *** Quits: d0p1 (~d0p1@gateway/tor-sasl/d0p1) (Ping timeout: 240 seconds)
[02:50:53] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Read error: Connection reset by peer)
[02:51:07] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[02:51:25] *** Quits: mikezackles_ (~mikezackl@gateway/tor-sasl/mikezackles) (Remote host closed the connection)
[02:51:50] *** Joins: mikezackles_ (~mikezackl@gateway/tor-sasl/mikezackles)
[02:57:05] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:5cb2:5682:6969:c42)
[03:03:45] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 256 seconds)
[03:05:53] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2994:1fbd:6642:1fc1) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[03:06:37] *** Quits: ur5us (~ur5us@2406:e002:6845:dc01:b921:6822:fa0e:e017) (Ping timeout: 240 seconds)
[03:19:27] *** Quits: kron (~weechat@user/qaph) (Quit: kron)
[03:22:31] *** Quits: rv1sr (~rv1sr@user/rv1sr) ()
[03:28:20] *** Joins: n8nl (~n8nl@c-24-61-77-34.hsd1.ma.comcast.net)
[03:29:20] *** Quits: notapenguin (~ryu@2804:14d:5685:96c7::4) (Quit: WeeChat 3.4.1)
[03:30:53] *** Joins: acarrico (~acarrico@dhcp-68-142-39-249.greenmountainaccess.net)
[03:48:29] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:5cb2:5682:6969:c42) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:53:55] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 268 seconds)
[03:56:41] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[04:16:37] *** Quits: n8nl (~n8nl@c-24-61-77-34.hsd1.ma.comcast.net) (Ping timeout: 240 seconds)
[04:22:24] *** Joins: ur5us (~ur5us@2406:e002:6845:dc01:b921:6822:fa0e:e017)
[04:25:52] *** Joins: n8nl (~n8nl@c-24-61-77-34.hsd1.ma.comcast.net)
[04:33:06] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4.1)
[04:53:43] *** Quits: freshcoffee (~fresh@user/freshcoffee) (Quit: WeeChat 3.0.1)
[04:54:00] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[05:15:06] *** Quits: ndwk (~ndwk@user/ndwk) (Ping timeout: 250 seconds)
[05:16:21] *** Joins: ndwk (~ndwk@user/ndwk)
[05:19:52] *** Quits: n8nl (~n8nl@c-24-61-77-34.hsd1.ma.comcast.net) (Ping timeout: 250 seconds)
[05:23:33] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[05:35:02] *** Joins: bindu_ (~bindu@user/bindu)
[05:35:15] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 240 seconds)
[05:36:48] *** bindu_ is now known as bindu
[05:38:30] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 250 seconds)
[06:21:02] *** Quits: ndwk (~ndwk@user/ndwk) ()
[06:29:38] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Ping timeout: 252 seconds)
[07:19:27] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[07:19:59] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[07:21:45] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[07:30:06] *** Quits: mooff (mooff@awful.cooking) (Remote host closed the connection)
[07:33:42] *** Joins: mooff (mooff@awful.cooking)
[08:07:08] *** Quits: ur5us (~ur5us@2406:e002:6845:dc01:b921:6822:fa0e:e017) (Ping timeout: 250 seconds)
[08:09:17] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 240 seconds)
[08:39:15] *** Quits: mikezackles_ (~mikezackl@gateway/tor-sasl/mikezackles) (Ping timeout: 240 seconds)
[08:52:30] *** Joins: freshcoffee (~fresh@user/freshcoffee)
[08:53:36] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[09:10:21] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[09:36:27] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[09:42:02] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[09:53:29] *** Joins: syrusakbary (~syrusakba@2601:645:4100:927:3056:cfe8:78e3:86bb)
[09:53:35] *** Quits: syrusakbary (~syrusakba@2601:645:4100:927:3056:cfe8:78e3:86bb) (Client Quit)
[10:41:03] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 256 seconds)
[11:17:48] *** Joins: lehmrob (~rd7@business-176-095-223-081.static.arcor-ip.net)
[11:21:06] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[11:21:10] *** Quits: Gustavo6046_ (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[11:22:31] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[11:23:01] *** Joins: ur5us (~ur5us@2406:e002:6845:dc01:c2e6:9f40:66a8:f76d)
[11:29:28] *** Quits: fengshaun_ (~fengshaun@68.69.214.210) (Remote host closed the connection)
[11:33:38] *** Quits: ur5us (~ur5us@2406:e002:6845:dc01:c2e6:9f40:66a8:f76d) (Quit: Leaving)
[11:34:19] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[11:35:06] *** Joins: ur5us (~ur5us@2406:e002:6845:dc01:c2e6:9f40:66a8:f76d)
[11:40:15] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[11:58:12] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[12:01:21] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Client Quit)
[12:05:44] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[12:39:21] *** Quits: [R] (~rs@genoce.org) (Read error: Connection reset by peer)
[12:46:02] *** Quits: ur5us (~ur5us@2406:e002:6845:dc01:c2e6:9f40:66a8:f76d) (Ping timeout: 240 seconds)
[12:47:30] *** Quits: nakedeyes (~nathan@user/nandormagyar) (Quit: WeeChat 1.9.1)
[12:50:52] *** Joins: jemius (~imperator@200116b82d37d700178c48b50fab1f57.dip.versatel-1u1.de)
[12:55:07] *** Quits: Techcable (~Techcable@168.235.93.147) (Read error: Connection reset by peer)
[12:55:14] *** Joins: Techcable (~Techcable@168.235.93.147)
[13:09:20] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[13:10:27] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:5cb2:5682:6969:c42)
[13:29:02] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 240 seconds)
[13:29:32] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 240 seconds)
[13:54:13] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[14:31:22] *** Joins: pkap (~pkap@193.32.127.225)
[14:33:35] *** Joins: notapenguin (~ryu@2804:14d:5685:96c7::4)
[15:06:19] *** Quits: jemius (~imperator@200116b82d37d700178c48b50fab1f57.dip.versatel-1u1.de) (Quit: Leaving)
[15:07:06] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[15:07:18] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[15:25:03] *** Joins: cren (cren@tilde.team)
[15:28:36] *** Joins: jemius (~imperator@200116b82d37d700178c48b50fab1f57.dip.versatel-1u1.de)
[15:36:57] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 240 seconds)
[15:37:39] *** Quits: pkap (~pkap@193.32.127.225) (Quit: Client closed)
[15:47:14] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[16:11:45] *** Joins: kron (~weechat@user/qaph)
[16:13:34] *** Quits: jemius (~imperator@200116b82d37d700178c48b50fab1f57.dip.versatel-1u1.de) (Quit: Leaving)
[16:35:12] *** Joins: arkurious (~arkurious@user/arkurious)
[16:36:06] *** Quits: freshcoffee (~fresh@user/freshcoffee) (Read error: Connection reset by peer)
[16:36:31] *** Joins: freshcoffee (~fresh@user/freshcoffee)
[16:54:07] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[17:06:42] *** Joins: Guest67 (~Guest67@251.18.133.37.dynamic.jazztel.es)
[17:06:52] *** Joins: mikezackles_ (~mikezackl@gateway/tor-sasl/mikezackles)
[17:14:33] *** Quits: Guest67 (~Guest67@251.18.133.37.dynamic.jazztel.es) (Quit: Client closed)
[17:14:55] *** Joins: juztziggs (~juztziggs@251.18.133.37.dynamic.jazztel.es)
[17:20:21] *** Quits: juztziggs (~juztziggs@251.18.133.37.dynamic.jazztel.es) (Quit: Client closed)
[17:43:58] *** Joins: ComedyIRC (~malin@mail.pletea.de)
[17:44:19] *** Quits: ComedyIRC (~malin@mail.pletea.de) (Client Quit)
[17:50:35] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Ping timeout: 256 seconds)
[17:50:50] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[17:55:36] *** Joins: pkap (~pkap@193.32.127.231)
[17:58:06] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:5cb2:5682:6969:c42) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:59:49] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:5cb2:5682:6969:c42)
[18:25:19] *** Joins: mikezackles__ (~mikezackl@gateway/tor-sasl/mikezackles)
[18:27:15] *** Quits: mikezackles_ (~mikezackl@gateway/tor-sasl/mikezackles) (Ping timeout: 240 seconds)
[18:38:02] *** Joins: phaleth (~user@user/phaleth)
[18:38:04] *** Quits: pkap (~pkap@193.32.127.231) (Quit: Client closed)
[18:40:56] *** Joins: ndwk (~ndwk@user/ndwk)
[18:41:31] *** Quits: notapenguin (~ryu@2804:14d:5685:96c7::4) (Quit: WeeChat 3.4.1)
[18:56:03] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[19:09:30] *** Joins: Matthias1 (~Matthias1@8.6.144.119)
[19:11:39] <Matthias1> Is there a way to get the current hour (or date or minute or etc) in Zig? Or is that something that's missing from the standard library?
[19:20:57] *** Quits: cr1901 (~cr1901@2601:8d:8600:911:88b7:e735:e17c:e37f) (Read error: Connection reset by peer)
[19:21:02] *** Joins: cr1901_ (~cr1901@2601:8d:8600:911:c04a:4dab:dc10:79ba)
[19:22:35] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[19:22:55] *** Joins: bindu (~bindu@user/bindu)
[19:28:41] <ikskuh> std.time.timestamp() + std.time.epoch.EpochSeconds + follow up
[19:29:12] *** Joins: notapenguin (~ryu@2804:14d:5685:96c7::4)
[19:32:20] <Matthias1> That's 
[19:33:02] <Matthias1> *That's just the seconds since epoch
[19:33:46] <Matthias1> I want time.h's localtime() which returns a struct with current date/minute/hour/second broken out
[19:34:56] *** Quits: lehmrob (~rd7@business-176-095-223-081.static.arcor-ip.net) (Quit: Konversation terminated!)
[19:40:24] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:5cb2:5682:6969:c42) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:40:56] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:5cb2:5682:6969:c42)
[19:42:35] <ikskuh> please check out the linked stuff ;)
[19:42:46] <ikskuh> it implements the features to decode it into a gregorian date
[19:44:22] <braewoods> but does it factor in timezone?
[19:46:08] <ikskuh> nope, no time processing further than that in the stdlib
[19:53:49] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:5cb2:5682:6969:c42) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:56:19] *** Joins: terminalpusher (~terminalp@2a01:586:abfb:1:31dc:a4f3:420d:5622)
[19:59:44] <Matthias1> Okay, I did manage to get a 16 out of that. Still not very helpful without the local timezone support
[20:01:16] <braewoods> i assume you could still fallback to libc.
[20:01:32] *** Quits: freshcoffee (~fresh@user/freshcoffee) (Ping timeout: 240 seconds)
[20:04:47] <Matthias1> Yeah that's what I'll have to do
[20:16:11] *** Joins: jemius (~imperator@200116b82d37d700178c48b50fab1f57.dip.versatel-1u1.de)
[20:21:01] *** Joins: freshcoffee (~fresh@user/freshcoffee)
[20:33:16] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:5cb2:5682:6969:c42)
[20:43:01] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 240 seconds)
[20:48:29] *** Quits: yelnah (~felix@2001:44b8:30c9:336:6f0:21ff:fe3c:d4d7) (Quit: ZNC 1.8.2 - https://znc.in)
[20:48:39] *** Joins: yelnah (~felix@2001:44b8:30c9:336:6f0:21ff:fe3c:d4d7)
[20:58:07] *** Quits: ndwk (~ndwk@user/ndwk) (Remote host closed the connection)
[20:58:30] *** Joins: ndwk (~ndwk@2607:fea8:c320:ce00:5980:ac15:b182:dca3)
[20:58:30] *** Quits: ndwk (~ndwk@2607:fea8:c320:ce00:5980:ac15:b182:dca3) (Changing host)
[20:58:30] *** Joins: ndwk (~ndwk@user/ndwk)
[21:00:44] <cot> So, usingnamespace can no longer be used to import all constants/types from a file? Is there any other option, other than manually writing out `const foo = module.foo` for a hundred types?
[21:01:20] <cot> I mean, I like all the newer Zig stuff... but this one hurts.
[21:09:20] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[21:19:24] *** Quits: cr1901_ (~cr1901@2601:8d:8600:911:c04a:4dab:dc10:79ba) (Ping timeout: 240 seconds)
[21:21:07] *** Joins: d0p1_ (~d0p1@gateway/tor-sasl/d0p1)
[21:22:29] <andrewrk> if it makes you feel any better, it's one of a few key language design points that allows the new compiler to be real fast
[21:22:38] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:5cb2:5682:6969:c42) (Quit: Textual IRC Client: www.textualapp.com)
[21:24:00] <bfredl> I'd use `const m = module` in a situation like this
[21:25:29] *** Joins: cr1901 (~cr1901@2601:8d:8600:911:a050:dd5c:be2b:f6f2)
[21:25:46] *** Joins: xackus (~xackus@185.15.0.3)
[21:27:05] <cot> Now I need to figure out what's more annoying, add ~35 lines of `const FooType = @import("types.zig").FooType` to 30 files, or modifying 15k lines to say `t.FooType` instead of `FooType`
[21:27:14] <cot> andrewrk: I want my 0.7.1 back >:(
[21:27:28] <andrewrk> well you have it. 0.7.1 isn't going anywhere
[21:28:16] <cot> Let me rephrase that. "I want my 0.7.1-style usingnamespace back. >:("
[21:28:19] <andrewrk> if you break your functions and types into proper namespaces, it tends to work great without usingnamespace
[21:28:38] <cot> Can you elaborate? I'm not sure I understand
[21:28:50] <andrewrk> e.g. if you have a bunch of functions prefixed with "foo" then make "foo" an actual namespace instead then you can just import foo
[21:29:04] <cot> Ah true
[21:29:29] <cot> but in my case it's mostly types I'm importing, the functions are already neatly tucked away into their respective types (or namespaces)
[21:34:41] *** Quits: terminalpusher (~terminalp@2a01:586:abfb:1:31dc:a4f3:420d:5622) (Remote host closed the connection)
[21:39:15] <andrewrk> I'm happy to make suggestions if you show me the problematic file
[21:43:23] *** Quits: Matthias1 (~Matthias1@8.6.144.119) (Remote host closed the connection)
[21:45:13] *** Quits: freshcoffee (~fresh@user/freshcoffee) (Quit: WeeChat 3.0.1)
[22:01:41] <cot> andrewrk: ty, http://ttm.sh/iN6.zig (mapgen.zig)
[22:01:57] <cot> The types.zig it's importing from is here: http://ttm.sh/iNV.zig
[22:04:10] <andrewrk> cot, tbh this looks like a typical top of a big file in the zig code I write too: https://github.com/ziglang/zig/blob/master/src/Compilation.zig#L1-L37
[22:04:24] <andrewrk> I don't find the header to be any kind of maintenance burden
[22:05:01] <cot> Fair enough
[22:05:09] <andrewrk> I get that it's annoying to have to change your code all at once
[22:05:26] <cot> Guess I'm just feeling salty because I suddenly have to do this, yeah :V
[22:05:50] * cot will shaddup now and get back to work
[22:12:06] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[22:18:26] <andrewrk> that is a reasonable way to feel
[22:18:40] <andrewrk> thanks for suffering through the development process
[22:22:34] <cot> You're welcome :P
[22:22:38] <ifreund> cot: what kinda roguelike are you working on? Is it open source?
[22:23:02] <cot> ifreund: yup, https://github.com/kiedtl/roguelike
[22:23:23] <cot> Though it's not in a compilable state, even with 0.7.1 (it needs some backported stuff from 0.8.0's stdlib which I never added to git)
[22:23:45] <cot> Well that's a lighter note, I can finally delete that backported std.enums file! yay!
[22:24:29] <cot> ifreund: https://tilde.team/~kiedtl/blog/roguelike/ if you want a screenshot or two
[22:24:41] <ifreund> fun :)
[22:28:23] <cot> lots :)
[22:31:53] <Earnest> cot: (Look into JFS++ (Jump Point Search) one day, as an alternative to A*)
[22:32:20] <Earnest> JPS* sorry
[22:33:27] <cot> I think that's the one that requires the map to be static?
[22:35:39] <cot> Ah, it requires a uniform cost for each node
[22:36:09] <cot> Won't work in my case unfortunately, each tile can have differing costs (based on lighting, dangerous terrain, etc)
[22:37:30] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[22:45:07] <Earnest> cot: It's precomputed jump points which would need to be recomputed if the map changed, so there's a cost/benefit tradeoff based on how static or dynamic a map is (most are static, so it ends up being quite effective)
[22:45:12] <ifreund> neat visualization of JPS and others: https://qiao.github.io/PathFinding.js/visual/
[22:46:57] <cot> I'll have to take a closer look, though I doubt it'll work as my maps are pretty dynamic (doors, terrain that might be passable one moment and impassable otherwise, or might be passable for some mobs but not others)
[22:48:08] <ifreund> You're right that JPS won't work for you if I'm not terribly mistaken
[22:51:19] <Earnest> The jump points don't change based on doors or lighting if it's simple on or off, open or closed.  But they would if the door location changes or the light moves, iirc
[22:52:15] <Earnest> If a door is closed then the path simply uses another jump point, by dynamic maps from the gdc talk, it was more about walls that can be destroyed and such
[22:57:02] *** Joins: nagitsu (~nagitsu@r186-50-111-27.dialup.adsl.anteldata.net.uy)
[22:59:11] <ifreund> Earnest: that's not what we're talking about, we're saying that it doesn't work if you have some "mud" tiles that cost 1.2 units of movement, some water that costs 2.3, etc
[22:59:48] <Earnest> I don't see why not
[23:00:48] *** Quits: nagitsu (~nagitsu@r186-50-111-27.dialup.adsl.anteldata.net.uy) (Client Quit)
[23:00:52] <ifreund> Maybe I'm missing something, but the first line of the wikipedia page is "jump point search (JPS) is an optimization to the A* search algorithm for uniform-cost grids"
[23:00:53] <Earnest> (I don't really see how that is related to any path finding algo, more about updating state as it travels about speed and such)
[23:01:27] <ifreund> path finding is about finding the cheapest path in terms of cost from point a to point b
[23:01:27] <Earnest> I don't know of any path finding system which pre-calculates movement penalities if it might go through a 'zone', hmm
[23:01:38] <ifreund> every other algoritm does this
[23:01:45] <ifreund> a star, djirksta's, etc
[23:01:51] <Earnest> Only that 'if standing on mud, set speed 0.8' style callbacks
[23:02:54] <Earnest> ifreund: The GDC talk on it is very nice, when you have time for it
[23:03:32] <ifreund> I'm pretty sure I watched that a few years ago :D
[23:03:51] <Earnest> Some real gems there, the palette swapping stuff is just beautiful
[23:04:15] <ifreund> again, "uniform cost" is in the video description :P
[23:04:43] <ifreund> The whole idea behind it is that you can "jump" over empty space since all the nodes in the graph are uniform cost
[23:04:54] <ifreund> as soon as that stops being true, you're back to A*
[23:05:23] <Earnest> I see what you mean
[23:05:36] <Earnest> ifreund: Seems many people combine the two
[23:06:17] <ifreund> ah, yeah now that seems like a smart thing to do if one has like 90% uniform cost stuff :D
[23:06:30] *** Joins: cabal704 (~cabal704@user/cabal704)
[23:06:55] <Earnest> A very data oriented approach, you might say ;o
[23:06:55] <ifreund> that sounds like fairly tricky code to write though
[23:07:24] *** Quits: cabal704 (~cabal704@user/cabal704) (Client Quit)
[23:09:46] <Earnest> ifreund: Others seem to incorporate the non-uniformity as tweaks on jps so that it considers those nodes especially
[23:10:44] <Earnest> E.g. uniform terrain but perhaps a 'road' element has less cost, so values for the road are precomputed
[23:13:16] <Earnest> Seems like there is new research on this problem too, hmm.  I'll have to learn more
[23:17:01] *** Joins: frmdstryr (~jrm@172.58.206.180)
[23:18:51] <frmdstryr> Anyone know why this is throwing an error https://zig.godbolt.org/z/99sv7hqrM
[23:20:24] <frmdstryr> Ah, seems I have to use @as for each switch branch
[23:24:31] <ifreund> frmdstryr: to be clear, that's a bug/limitation of the stage1 compiler, you shouldn't need any @as() there long term :/
[23:27:23] *** Joins: ur5us (~ur5us@203.86.198.200)
[23:36:12] *** Quits: notapenguin (~ryu@2804:14d:5685:96c7::4) (Quit: WeeChat 3.4.1)
[23:46:46] <haze> how are you doing today ifreund 
[23:47:03] <ifreund> pretty good, pretty busy :)
[23:58:10] *** Joins: pkap (~pkap@193.32.127.231)
