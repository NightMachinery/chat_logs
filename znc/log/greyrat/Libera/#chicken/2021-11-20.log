[00:19:53] <wasamasa> advent of code feels slightly less pointless than project euler to me
[00:20:05] <wasamasa> 90% of the challenges are designed to be trivially solved with perl
[00:20:24] <wasamasa> the remaining 10% lend themselves to actually thinking about algorithms and optimization
[00:29:09] <Zipheir> I wish there were a way to get the Advent of Code puzzle data without writing 25 parsers.  It's definitely the most boring part of those puzzles, IMHO.
[00:29:39] <wasamasa> it's cool to spend not too much time on, but in terms of learning, yeah no
[00:29:58] <wasamasa> you'd learn way more using scheme for something otherwise trivial in python :P
[00:30:33] <Zipheir> Yes, it seems to miss the point to just solve those things with Perl/Python tricks.
[00:31:20] <Zipheir> e.g. use miniKanren with no library support. >:)
[00:37:23] <wasamasa> yeah, could be interesting to solve them in something prolog-like
[02:09:09] *** Joins: seepel (~seepel@c-24-4-200-111.hsd1.ca.comcast.net)
[03:40:37] *** Quits: ublx (~ublx@user/ublx) (Quit: ublx)
[04:49:54] *** Quits: markjf (~markjf@cpc115884-addl5-2-0-cust442.6-3.cable.virginm.net) (Quit: Leaving)
[05:16:04] <vandusen> [eggs repo (r40915, by kon)] fix -support module proc types
[05:16:06] *** Quits: mononote (~mononote@user/mononote) (Ping timeout: 260 seconds)
[05:40:14] <mdhughes> A friend of mine did them in prolog one year, and it was unbelievably awful. Many couldn't be solved, at least with the impl she used.
[05:40:47] <mdhughes> My Scheme runs on AoC have been pretty easy, once I made a couple text loading/parsing tools I needed anyway.
[06:17:36] <jcowan> I swore to myself I wouldn't write any more recursive descent parsers (too boring), but then I got annoyed at an interview when I had a whiteboard exercise to write a function to check a string for balanced ()s.
[06:19:15] <jcowan> So I got the bit between my teeth and wrote an LL(1) grammar and an RDP to match.  It worked, but the interviewer was maybe 1/3 my age and had never heard of LL(1) or RDP.  I didn't get that job.
[06:21:03] <mdhughes> "Sir, this is a Wendy's."
[06:22:28] <mdhughes> Last time I interviewed in person was at a Java shop, and the interviewer panicked when I wrote some Scheme, so I switched to Python, which also he didn't know, so I wrote a bit of reflection-based code in Java to solve the problem. Also didn't get that, but the team did buy me lunch.
[06:30:17] <Zipheir> jcowan: Wow.
[06:30:19] <jcowan> Nah, this was plain Python, which had been asked for.
[06:30:42] <jcowan> Wow what I did, or what he didn't know?
[06:31:59] *** Joins: s-liao (~s-liao@101.86.101.64)
[06:32:04] <Zipheir> jcowan: That he didn't know or, presumably, didn't think it was a reasonable solution.
[07:22:18] *** Joins: mononote (~mononote@user/mononote)
[07:47:29] *** Quits: mononote (~mononote@user/mononote) (Ping timeout: 256 seconds)
[07:47:44] *** Joins: mononote (~mononote@user/mononote)
[09:10:00] *** Quits: klovett (~klovett@166.205.90.177) (Quit: ZZZzzzâ€¦)
[10:23:43] <vandusen> "freeee" pasted "freeeee" http://paste.call-cc.org/paste?id=95cbf4f257823101bf6313f9a2820fb19be68135
[10:23:43] <judybot> vandusen: spam 95cbf4f257823101bf6313f9a2820fb19be68135
[10:23:44] <vandusen> judybot: I have deleted 1 paste(s) with hash 95cbf4f257823101bf6313f9a2820fb19be68135 successfully.
[10:37:25] <vandusen> "freeee" pasted "freeeeeee" http://paste.call-cc.org/paste?id=f883cba99d9a9a10c16f087b2c7cc1f3ac327d5f
[10:37:26] <judybot> vandusen: spam f883cba99d9a9a10c16f087b2c7cc1f3ac327d5f
[10:37:26] <vandusen> judybot: I have deleted 1 paste(s) with hash f883cba99d9a9a10c16f087b2c7cc1f3ac327d5f successfully.
[12:00:56] <littleme[m]> why does repl can't use ffi?
[12:33:00] <s-liao> littleme[m] you have to compile those sources with FFI to one so file. Then export functions for your usage in REPL.
[12:34:30] <s-liao> you have to compile those sources with FFI to one so file with export functions for your usage. Then use those export functions in REPL
[13:04:15] <amazigh> where should I report bugs regarding spock?
[13:04:55] <s-liao> What kind of the bug did you find?
[13:05:08] <amazigh> letrec* seems broken, (% 'foobar 'value) has the wrong error message.
[13:06:06] <s-liao> What?
[13:06:20] <s-liao> That is chicken has.
[13:06:52] <s-liao> https://api.call-cc.org/5/doc/chicken/base/letrec%2A
[13:06:53] <amazigh> I am working with http://wiki.call-cc.org/eggref/5/spock
[13:07:39] <s-liao> Yes.I knew that. Yesterday you said that, you would try it.
[13:08:30] <s-liao> Send the logfile for them to have a review
[13:11:08] <s-liao> And also there is a site for bugs http://bugs.call-cc.org
[13:17:39] <amazigh> oktx
[13:18:06] <amazigh> I will gather small example program demonstrating the bug, once I am finished with the current iteration.
[13:18:44] <s-liao> cool
[13:57:30] *** Quits: s-liao (~s-liao@101.86.101.64) (Ping timeout: 256 seconds)
[14:39:15] *** Joins: s-liao (~s-liao@101.86.101.64)
[15:11:53] <amazigh> here is the proof-of-work https://scheme.rs/comparator/
[15:12:01] <amazigh> the code is at https://git.sr.ht/~amirouche/scheme.rs
[15:12:09] <amazigh> feedback welcome as usual.
[15:15:53] <mario-goulart> amazigh: cool!  "Top 3 ecraven's benchmarks" has a off-by-1 bug.
[15:16:33] <amazigh> mario-goulart: yes and no, you mean there is 4 entries?
[15:16:49] <mario-goulart> Yeah
[15:17:20] <amazigh> maybe i shoud fix that.
[15:17:39] <mario-goulart> I feel like CHICKEN is missing in many items.
[15:17:55] <amazigh> yes, please let me know if the flags are wrong.
[15:19:58] <mario-goulart> E.g., OpenBSD, Can be embedded in another program, NetBSD, FreeBSD, Windows, R5RS
[15:21:39] <mario-goulart> CHICKEN can also in a way create binary executables.  Strictly speaking is not really CHICKEN, but just compiling to C is not particularly useful.
[15:22:13] <mario-goulart> Also, I think CHICKEN also works on Android and iOS (but I haven't tested that myself).
[15:22:22] *** Joins: markjf (~markjf@cpc115884-addl5-2-0-cust442.6-3.cable.virginm.net)
[15:22:53] <mario-goulart> It also should probably work on aarch64.  It centainly works on x86.
[15:23:10] <mario-goulart> ... and amd64.
[15:24:05] <mario-goulart> Not exactly sure what "Object-oriented programming" means, but CHICKEN also has a couple of eggs on that too.
[15:25:10] <mario-goulart> "Deployment tools" is also not clear to me.
[15:25:50] <mario-goulart> Also very cool that you've used spock for that!
[15:26:14] <amazigh> things like ansible, puppet, or the ability to sftp easily and run remote shell commands (that is what fabric does)
[15:27:16] <amazigh> yes I will fix those flags you mentioned. 
[15:27:26] <mario-goulart> I see.  I don't know anything like that for CHICKEN.  That would be great to have.
[15:27:41] <amazigh> It is difficult to draw the line, but in the case of chicken you can build binary executables.
[15:27:56] <mario-goulart> Just yesterday I made a presentation on Ansible at work ("Ansible considered incomprehensible").
[15:28:02] <amazigh> +1
[15:28:20] <amazigh> I prefer python's fabric, it is a wrapper around ssh and sftp
[15:28:31] <amazigh> with the ability to  run things in parallel
[15:29:41] <mario-goulart> Cool.  Actually at work e use a CI thing called Zuul and it happens to use Ansible as API for programming CI jobs.  I think "misuse" of Ansible makes even more evident how Ansible sucks for some stuff.
[15:30:00] <mario-goulart> s/I think/I think that/
[15:32:19] *** Quits: markjf (~markjf@cpc115884-addl5-2-0-cust442.6-3.cable.virginm.net) (Quit: Leaving)
[15:32:23] <amazigh> My slides for "How Ansible is incomprehensible" will require one page, it will contain the variable resolution algorithm they use.
[15:32:56] <mario-goulart> I had that too! :-D  A screenshot from their page.
[15:33:10] <mario-goulart> Like more than 20 arbitrary rules.
[15:33:30] <amazigh> In that area (devops-like stuff) I am completly depressed. k8s is also depressing. aws too.
[15:33:40] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[15:34:05] <amazigh> and people keep pushing those, and they do not understand why they project fail or are very painful.
[15:34:17] <mario-goulart> Yeah, everything sucks.
[15:38:56] <amazigh> They are alternatives to ansible, and k8s, but those are not pushed mainstream and remain secret sauce, I guess. Such as Scheme :)
[15:43:10] <s-liao> What is the sauce?
[15:45:30] <amazigh> secret tool
[15:46:13] <amazigh> I mean secret tool, but also secret pratice: before using a tool, try to figure if it solve your *own* problems. 
[15:46:47] <amazigh> k8s and docker solve, in large part, iaas providers problems.
[15:47:19] <amazigh> and they make it more difficult to deploy an app. imo.
[15:47:24] <amazigh> and ime.
[15:49:41] <s-liao> I just use docker, Not like your guys too much develop activities are needed.
[15:51:02] <s-liao> By the way, what is main.js file for in the project of https://scheme.rs/comparator/?
[15:53:12] <amazigh> main.js is compiled from main.scm which is based on code.scm
[15:53:15] <amazigh> give me one sec
[15:53:37] <amazigh> that should explain how it is created https://git.sr.ht/~amirouche/scheme.rs/tree/main/item/comparator/makefile
[15:54:56] *** Quits: Techcable (~Techcable@168.235.93.147) (Quit: ZNC - https://znc.in)
[15:55:42] <s-liao> chicken-spock can generator the js file?
[15:56:06] <s-liao> I have not noticed that.
[15:56:13] *** Joins: Techcable (~Techcable@168.235.93.147)
[15:56:30] <amazigh> yes.
[15:57:08] <amazigh> here is the entry point of the app : https://git.sr.ht/~amirouche/scheme.rs/tree/main/item/comparator/code.scm#L127
[15:57:16] <littleme[m]> <s-liao> "littleme you have to compile..." <- thx
[15:57:50] <amazigh> actually, create-app below will start it, but most of the interesting stuff is in the procedure `view`, and the procedure called inside `view`
[15:59:49] <s-liao> That is cool. What is the different chicken generator js files and chicken-spock generator js files?
[16:00:39] <s-liao> littleme[m] That is Okay.
[16:01:10] <mario-goulart> CHICKEN doesn't generate javascript.  CHICKEN only generates C code.  Spock is an egg, which implements a Scheme->javascript compiler.
[16:01:27] *** Quits: fantazo (~fantazo@192-164-154-92.hdsl.highway.telekom.at) (Ping timeout: 268 seconds)
[16:03:18] <s-liao> Okay. I thought that Gamit can do that. Chicken can do it as well.
[16:03:40] <amazigh> Gambit does have a javascript target, indeed.
[16:04:00] <amazigh> but unlike Gambit, Spock can't re-use chicken's eggs / libraries.
[16:04:30] <amazigh> Gambit is in large part in my opinion still a moving target.
[16:04:31] <s-liao> Yes, it is not an option to generateÂ  js files from scheme filesÂ  in chicken.
[16:04:39] <amazigh> yes
[16:05:42] <s-liao> What do you mean Spock can't re-use chicken's eggs / libraries?
[16:06:41] <mario-goulart> Spock is a different Scheme implementation.  It happens to be implemented in CHICKEN and shipped as an egg, but it is not CHICKEN.  CHICKEN eggs are CHICKEN-specific.
[16:13:29] <s-liao> You mean that plug into the chicken system. A differentÂ  scheme implementation is base on chicken base . it is an egg, specially for chicken.
[16:13:52] <s-liao> It is not an egg specially for chicken.
[16:15:23] <s-liao> That is my fault. I have not learned that clearly yet.
[16:18:48] <s-liao> I have not played around spock yet. your guys were talking about web. I thought that is spiffy egg.
[16:19:09] <s-liao> :')
[16:20:13] <amazigh> no worries.
[16:25:39] <s-liao> Okay. The project create front-end in scheme. The server is http.server python module.
[16:30:01] <s-liao> Look like quite similar to what you did in this project https://git.sr.ht/~amirouche/forward.scm
[16:31:27] <s-liao> mario-goulart thanks
[16:32:16] <mario-goulart> yw
[16:33:42] <amazigh> s-liao: yes.
[16:36:00] <amazigh> both code base (forward.scm and the comparator) are missing xhr support
[16:36:33] <amazigh> if one use preactjs hooks, you can get a way without call/cc but I prefer to use call/cc than hooks
[16:37:14] <amazigh> make-controll must include some prompt-like machinery to be able to pause the PROC during xhr
[16:37:39] <amazigh> I did it already in another project.
[16:38:20] <amazigh> or you can find your way with native javascript without preact at all...
[16:39:42] <amazigh> I will go afk for nap. see you later.
[17:05:54] *** Joins: klovett (~klovett@166.205.90.177)
[17:16:59] *** Quits: mononote (~mononote@user/mononote) (Ping timeout: 256 seconds)
[17:31:37] *** Quits: s-liao (~s-liao@101.86.101.64) (Quit: Client closed)
[17:35:28] *** Joins: s-liao (~s-liao@101.86.101.64)
[17:44:50] *** Quits: nikola2 (~nikola2@93-86-190-207.dynamic.isp.telekom.rs) (Ping timeout: 265 seconds)
[18:30:57] *** Quits: s-liao (~s-liao@101.86.101.64) (Quit: Client closed)
[19:23:49] *** Joins: mononote (~mononote@user/mononote)
[19:26:26] *** Joins: fantazo (~fantazo@192-164-154-92.hdsl.highway.telekom.at)
[21:11:24] <vandusen> [eggs] Error fetching CHICKEN 4 .release-info file for the following eggs: gochan
[21:15:03] *** Joins: nikola2 (~nikola2@93-86-190-207.dynamic.isp.telekom.rs)
[21:56:24] *** Quits: clacke (88d96f2df3@knopi.disroot.org) (Remote host closed the connection)
[23:19:04] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:c043:1d10:b1d0:8d06)
[23:19:04] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:c043:1d10:b1d0:8d06) (Changing host)
[23:19:04] *** Joins: skapata (~Skapata@user/skapata)
[23:42:19] *** Quits: klovett (~klovett@166.205.90.177) (Ping timeout: 256 seconds)
[23:51:48] *** Joins: alexshendi (~alexshend@2a02:8070:8796:7600:f4bc:a78:a5f2:9a84)
[23:52:43] <alexshendi> Good evening. It's already late. Time for bed.
