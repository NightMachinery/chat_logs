[00:01:54] *** Quits: mouseghost (~draco@user/mouseghost) (Quit: mew wew)
[00:35:15] *** Joins: mouseghost (~draco@user/mouseghost)
[01:04:02] *** Quits: mahmutov (~mahmutov@176.30.230.126) (Ping timeout: 260 seconds)
[01:29:28] *** Quits: natrys (~natrys@user/natrys) (Quit: natrys)
[02:18:36] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[02:21:37] *** Quits: mouseghost (~draco@user/mouseghost) (Quit: mew wew)
[02:52:53] *** Quits: fub (uid190747@id-190747.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[03:01:23] *** Joins: humberto1 (~humbertow@2806:107e:f:2338:38c9:c2c7:4eb4:63ee)
[03:04:32] *** Quits: humbertowoody (~humbertow@187.202.213.176) (Ping timeout: 252 seconds)
[03:08:09] *** Quits: gitgood (~gitgood@80-44-12-204.dynamic.dsl.as9105.com) (Quit: Leaving)
[03:14:42] *** Quits: ur5us_ (~ur5us@203.86.198.200) (Ping timeout: 260 seconds)
[03:35:46] <rawtaz> has lumen development practically stopped?
[03:36:16] <bitwalker> rawtaz: still going, albeit slowly due to obligations at my day job
[03:36:46] <rawtaz> i see. i hope you still find it interesting so it's not just a big burden
[03:36:59] <rawtaz> is it you that was on a podcast talking about it a while back? :)
[03:39:17] *** Joins: Guest62 (~textual@047-006-082-079.res.spectrum.com)
[03:45:16] *** Joins: ur5us_ (~ur5us@2406:e002:6bd3:6701:ed2b:d166:a5fd:8ce5)
[03:53:12] *** Joins: yauhsien (~yauhsien@118-167-48-21.dynamic-ip.hinet.net)
[03:57:53] *** Quits: yauhsien (~yauhsien@118-167-48-21.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[04:05:15] *** Joins: livoreno (~livoreno@user/notzmv)
[04:19:20] *** Quits: arpunk (~arpunk@user/arpunk) (Ping timeout: 252 seconds)
[04:20:58] *** Quits: aidalgol (~aidalgol@user/aidalgol) (Ping timeout: 265 seconds)
[04:26:26] *** Joins: aidalgol (~aidalgol@user/aidalgol)
[04:42:29] *** Quits: Guest62 (~textual@047-006-082-079.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:00:46] *** Joins: Guest62 (~textual@047-006-082-079.res.spectrum.com)
[05:17:33] *** Joins: yauhsien (~yauhsien@118-167-48-21.dynamic-ip.hinet.net)
[05:22:06] *** Quits: yauhsien (~yauhsien@118-167-48-21.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[06:29:18] *** Quits: spiun_ (~spiun@2a01:4b00:86a9:fb00:85b5:d577:5855:502c) (Ping timeout: 260 seconds)
[06:31:00] *** Joins: yauhsien (~yauhsien@118-167-48-21.dynamic-ip.hinet.net)
[07:20:00] *** Quits: Guest77 (~Guest77@p200300c8cf120f00436777980c911f5f.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[07:22:29] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 252 seconds)
[07:36:14] *** Quits: yauhsien (~yauhsien@118-167-48-21.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[07:52:44] *** Joins: voltone (~voltone@85.64.15.73.dynamic.barak-online.net)
[07:53:11] <Nicd> those darn day jobs
[08:00:18] *** Quits: ur5us_ (~ur5us@2406:e002:6bd3:6701:ed2b:d166:a5fd:8ce5) (Ping timeout: 260 seconds)
[08:07:37] *** Quits: voltone (~voltone@85.64.15.73.dynamic.barak-online.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:19:07] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[08:22:40] *** Joins: Guest77 (~Guest77@p200300c8cf120f00c3fb2b9ff2f8c3dd.dip0.t-ipconnect.de)
[08:27:57] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 265 seconds)
[08:44:22] *** Joins: voltone (~voltone@mailgw3.be-all.com)
[09:13:29] <serafeim> hello friends
[09:15:49] <Nicd> message received
[09:16:18] <serafeim> i asked last time... let's suppose i do this: `Map.put(%{}, list, "A")`. what will happen if `lst` is a really large array ? 
[09:16:25] <serafeim> will it be too slow ?
[09:17:20] <Nicd> did you try it?
[09:17:23] <serafeim> or if I do MapSet.put(MapSet.new, really_big_list)
[09:17:28] <serafeim> no
[09:18:20] <Nicd> I'm not sure if Erlang equality check does a pointer comparison first to avoid iterating the whole list
[09:18:33] *** Quits: duponin (~duponin@locahlo.st) (*.net *.split)
[09:18:33] *** Quits: danieli (~danieli@user/danieli) (*.net *.split)
[09:18:34] *** Quits: adamkittelson (uid82542@id-82542.tinside.irccloud.com) (*.net *.split)
[09:18:34] *** Quits: marcos (~marcos@2a01:4f8:c17:e59::2) (*.net *.split)
[09:18:34] *** Quits: mveytsman_ (sid478822@id-478822.tinside.irccloud.com) (*.net *.split)
[09:18:34] *** Quits: josephl (sid146137@id-146137.lymington.irccloud.com) (*.net *.split)
[09:18:34] *** Quits: drewolson (~drewolson@user/drewolson) (*.net *.split)
[09:18:43] *** Joins: adamkittelson (uid82542@id-82542.tinside.irccloud.com)
[09:18:50] *** Joins: marcos (~marcos@2a01:4f8:c17:e59::2)
[09:18:56] *** Joins: mveytsman_ (sid478822@id-478822.tinside.irccloud.com)
[09:18:56] *** Joins: josephl (sid146137@id-146137.lymington.irccloud.com)
[09:18:59] <Nicd> worst case it will iterate the whole list when you insert
[09:19:08] <Nicd> (and when you retrieve)
[09:19:09] *** Joins: drewolson (~drewolson@user/drewolson)
[09:19:14] *** Joins: danieli (~danieli@user/danieli)
[09:19:19] <Nicd> but maybe there's some optimisation
[09:19:20] *** Joins: duponin (~duponin@locahlo.st)
[09:19:26] <serafeim> so it will be too slow
[09:19:33] <Nicd> can't say if you don't try it
[09:19:46] <Nicd> why are you storing a big list in a set?
[09:20:12] <serafeim> Nicd: i don't i jsut want to understand how will elixir get the "identity" of an objecct
[09:20:34] <serafeim> for when inserted into a set or used as a key to a map
[09:21:01] <Nicd> MapSet uses Map and Map keys use https://hexdocs.pm/elixir/Kernel.html#===/2 for equality checks
[09:21:30] <serafeim> yes i know
[09:21:59] <serafeim> it doesn't say anywhere though what happens when usign === with various types of things like lists, maps etc
[09:23:46] <Nicd> well, since two different lists are considered equal if they have the same contents, it has to iterate them
[09:24:27] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[09:24:41] *** Quits: sm2n (~sm2n@user/sm2n) (*.net *.split)
[09:24:41] *** Quits: siiky (~siiky@2001:8a0:ff7b:9200:cc32:6dc3:67cc:a3ad) (*.net *.split)
[09:24:42] *** Quits: wess (~wess@188.166.99.85) (*.net *.split)
[09:24:42] *** Quits: ley (sid320610@id-320610.hampstead.irccloud.com) (*.net *.split)
[09:24:42] *** Quits: mrus (~mrus@149.28.224.172) (*.net *.split)
[09:24:42] *** Quits: gmc (sid58314@id-58314.ilkley.irccloud.com) (*.net *.split)
[09:24:42] *** Quits: meredith (~meredith@ramdas.roomag.org) (*.net *.split)
[09:24:42] *** Quits: micro (~micro@user/micro) (*.net *.split)
[09:24:42] *** Quits: guan (sid222713@id-222713.ilkley.irccloud.com) (*.net *.split)
[09:24:42] *** Quits: kevinsjoberg (sid499516@id-499516.lymington.irccloud.com) (*.net *.split)
[09:24:42] *** Quits: sgarciapdx (~serge@irc.shork.io) (*.net *.split)
[09:24:42] *** Quits: ihabunek (~ihabunek@bezdomni.net) (*.net *.split)
[09:24:42] *** Quits: ds (~ds@user/ds) (*.net *.split)
[09:24:43] *** Quits: jeregrine (sid16248@id-16248.tinside.irccloud.com) (*.net *.split)
[09:24:43] *** Quits: vhf (~victor@2607:5300:60:1083::1) (*.net *.split)
[09:24:43] *** Quits: ebb (ebb@user/ebb) (*.net *.split)
[09:24:43] *** Quits: sinni800 (~quassel@2a00:1ca8:ae::b0) (*.net *.split)
[09:24:43] *** Quits: ggVGc (~ggVGc@a.lowtech.earth) (*.net *.split)
[09:24:43] *** Quits: Shados (~shados@shados.net) (*.net *.split)
[09:24:49] *** Joins: micro (~micro@user/micro)
[09:24:52] *** Joins: sinni800 (~quassel@2a00:1ca8:ae::b0)
[09:24:56] *** Joins: ley (sid320610@id-320610.hampstead.irccloud.com)
[09:25:00] *** Joins: vhf (~victor@2607:5300:60:1083::1)
[09:25:03] *** Joins: ggVGc (~ggVGc@a.lowtech.earth)
[09:25:14] *** Joins: kevinsjoberg (sid499516@id-499516.lymington.irccloud.com)
[09:25:14] *** Joins: jeregrine (sid16248@id-16248.tinside.irccloud.com)
[09:25:22] *** Joins: gmc_ (sid58314@id-58314.ilkley.irccloud.com)
[09:25:27] <serafeim> Nicd: all right so i must be careful when i put things in maps or sets
[09:25:36] <serafeim> because if i put something big there i'm doomed
[09:25:37] *** Joins: Shados (~shados@shados.net)
[09:25:47] *** Joins: guan (sid222713@id-222713.ilkley.irccloud.com)
[09:26:08] *** Joins: mrus (~mrus@149.28.224.172)
[09:26:10] *** Joins: sm2n (~sm2n@user/sm2n)
[09:26:31] *** Joins: ds (~ds@user/ds)
[09:26:32] *** Joins: wess (~wess@188.166.99.85)
[09:26:32] *** Joins: ebb (ebb@user/ebb)
[09:26:53] *** Joins: ihabunek (~ihabunek@bezdomni.net)
[09:27:11] <Nicd> usually it's not an issue
[09:27:21] <Nicd> can't make any recommendations without knowing a use case
[09:28:58] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 260 seconds)
[09:29:00] <Nicd> http://erlang.org/pipermail/erlang-questions/2018-March/095135.html -- looks like it does indeed do pointer comparisons
[09:29:04] <serafeim> no problem
[09:29:41] <serafeim> i gues s it will do pointer comparisons if the lists are the same. however if you have two *different* lists  with the same contents it will fallback to checkign their elements anyway
[09:29:59] *** Joins: meredith (~meredith@ramdas.roomag.org)
[09:30:01] *** Joins: siiky (~siiky@2001:8a0:ff7b:9200:cc32:6dc3:67cc:a3ad)
[09:30:30] <serafeim> in any case i guess that's the only way to do it
[09:32:53] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[09:35:02] *** Quits: humberto1 (~humbertow@2806:107e:f:2338:38c9:c2c7:4eb4:63ee) (Ping timeout: 260 seconds)
[09:35:39] *** Joins: dcz_ (~dcz@user/dcz)
[09:39:24] *** Joins: humberto1 (~humbertow@2806:107e:f:2338:880a:ed74:bfb6:2e99)
[09:49:21] *** Quits: voltone (~voltone@mailgw3.be-all.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:50:30] *** Joins: voltone (~voltone@mailgw3.be-all.com)
[09:52:08] *** Joins: chgr (~ek@nat-91-137-16-23.net.encoline.de)
[09:57:08] *** Quits: chgr (~ek@nat-91-137-16-23.net.encoline.de) (Quit: WeeChat 3.2)
[10:07:14] *** Quits: humberto1 (~humbertow@2806:107e:f:2338:880a:ed74:bfb6:2e99) (Ping timeout: 260 seconds)
[10:12:14] *** Joins: sickill7 (~sickill@user/sickill)
[10:14:07] *** Quits: sickill (~sickill@user/sickill) (Ping timeout: 240 seconds)
[10:14:07] *** sickill7 is now known as sickill
[10:15:31] *** Quits: voltone (~voltone@mailgw3.be-all.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:16:50] *** Joins: voltone (~voltone@mailgw3.be-all.com)
[10:18:10] *** Quits: Guest77 (~Guest77@p200300c8cf120f00c3fb2b9ff2f8c3dd.dip0.t-ipconnect.de) (Quit: Client closed)
[10:29:32] *** Joins: LostKobrakai_ (~LostKobra@2001:16b8:2d28:6f00:8c80:97a2:2d90:72d0)
[10:33:55] *** Quits: dcz_ (~dcz@user/dcz) (Ping timeout: 252 seconds)
[10:40:26] *** Joins: ur5us_ (~ur5us@2406:e002:6bd3:6701:534f:b327:a77f:88b3)
[10:44:47] *** Quits: Guest62 (~textual@047-006-082-079.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:46:37] *** Joins: floriann (~Thunderbi@2a02:8106:2e:1300:ea6a:64ff:fe67:369e)
[10:55:49] *** Quits: ur5us_ (~ur5us@2406:e002:6bd3:6701:534f:b327:a77f:88b3) (Read error: Connection reset by peer)
[10:55:51] *** Joins: ur5us (~ur5us@2406:e002:6bd3:6701:534f:b327:a77f:88b3)
[11:02:11] *** Joins: humberto1 (~humbertow@2806:107e:f:2338:a44f:9ac4:f9ae:6b9e)
[11:06:49] *** Quits: humberto1 (~humbertow@2806:107e:f:2338:a44f:9ac4:f9ae:6b9e) (Ping timeout: 252 seconds)
[11:13:23] *** Quits: vhf (~victor@2607:5300:60:1083::1) (Ping timeout: 265 seconds)
[11:19:05] *** Joins: chgr (~ek@nat-91-137-16-23.net.encoline.de)
[11:25:58] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[11:26:36] *** Joins: vhf (~victor@2607:5300:60:1083::1)
[11:30:31] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 245 seconds)
[11:34:42] *** Joins: bandit_za (~bandit_za@185.195.232.173)
[11:37:02] *** Joins: glassofethanol (~ethanmorg@82.16.192.251)
[11:49:59] *** Quits: terrorjack (~terrorjac@ec2-13-37-149-154.eu-west-3.compute.amazonaws.com) (Ping timeout: 265 seconds)
[11:51:12] *** Joins: humberto1 (~humbertow@2806:107e:f:2338:a44f:9ac4:f9ae:6b9e)
[11:52:35] *** Joins: yauhsien (~yauhsien@118-167-48-21.dynamic-ip.hinet.net)
[11:55:31] *** Quits: humberto1 (~humbertow@2806:107e:f:2338:a44f:9ac4:f9ae:6b9e) (Ping timeout: 245 seconds)
[11:56:46] *** Quits: yauhsien (~yauhsien@118-167-48-21.dynamic-ip.hinet.net) (Ping timeout: 245 seconds)
[12:05:24] *** Joins: Guest7835 (~Guest78@p200300c8cf120f00c3fb2b9ff2f8c3dd.dip0.t-ipconnect.de)
[12:05:54] <Guest7835> Hey guys, i've deployed a phoenix app to fly.io using (https://fly.io/docs/getting-started/elixir/#dockerfile), but none of my tailwind styles are included, anyone know how to rectify this?
[12:07:18] *** Quits: bandit_za (~bandit_za@185.195.232.173) (Ping timeout: 256 seconds)
[12:13:14] <Guest7835> also using the tailwind JIT compiler, not sure if thats relevant or not
[12:20:20] *** Joins: spiun_ (~spiun@2a01:4b00:86a9:fb00:85b5:d577:5855:502c)
[12:36:44] <Guest7835> got it working, which involved moving the `COPY lib lib` up a few lines in the Dockerfile
[12:37:32] *** Quits: Guest7835 (~Guest78@p200300c8cf120f00c3fb2b9ff2f8c3dd.dip0.t-ipconnect.de) (Quit: Client closed)
[12:40:01] *** Joins: humberto1 (~humbertow@2806:107e:f:2338:a44f:9ac4:f9ae:6b9e)
[12:41:15] <hauleth> josevalim: would it be desirable to have function like `Macro.function_name/1` that would receive atom with macro name and would return atom for macro function? Because otherwise I do not see how I could list macros in the module without loading given module.
[12:41:29] <hauleth> Or maybe there is some other public API for such magic
[12:44:10] *** Quits: humberto1 (~humbertow@2806:107e:f:2338:a44f:9ac4:f9ae:6b9e) (Ping timeout: 252 seconds)
[12:50:04] *** LostKobrakai_ is now known as LostKobrakai[awa
[12:50:04] *** Quits: LostKobrakai[awa (~LostKobra@2001:16b8:2d28:6f00:8c80:97a2:2d90:72d0) (Quit: LostKobrakai[awa)
[12:57:27] *** Joins: LostKobrakai_ (~LostKobra@2001:16b8:2d28:6f00:8c80:97a2:2d90:72d0)
[12:59:04] *** Joins: natrys (~natrys@user/natrys)
[12:59:46] *** Quits: voltone (~voltone@mailgw3.be-all.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:01:01] *** Joins: voltone (~voltone@mailgw3.be-all.com)
[13:06:46] *** Quits: ur5us (~ur5us@2406:e002:6bd3:6701:534f:b327:a77f:88b3) (Ping timeout: 245 seconds)
[13:22:46] *** Joins: terrorjack (~terrorjac@2a05:d012:f4:f400:3981:7d7e:56ee:2dd9)
[13:24:47] *** Quits: voltone (~voltone@mailgw3.be-all.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:25:39] *** Quits: sepow (~sepow@139.59.158.83) (Quit: Ping timeout (120 seconds))
[13:26:05] *** Joins: sepow (~sepow@139.59.158.83)
[13:27:13] *** Joins: voltone (~voltone@mailgw3.be-all.com)
[13:27:42] *** Joins: humberto1 (~humbertow@2806:107e:f:2338:a44f:9ac4:f9ae:6b9e)
[13:27:46] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[13:31:46] *** Quits: humberto1 (~humbertow@2806:107e:f:2338:a44f:9ac4:f9ae:6b9e) (Ping timeout: 245 seconds)
[13:32:11] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 245 seconds)
[13:54:12] *** Joins: yauhsien (~yauhsien@118-167-48-21.dynamic-ip.hinet.net)
[13:58:29] *** Quits: yauhsien (~yauhsien@118-167-48-21.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[14:16:34] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 252 seconds)
[14:18:44] *** Joins: humberto1 (~humbertow@2806:107e:f:2338:a44f:9ac4:f9ae:6b9e)
[14:23:10] *** Quits: humberto1 (~humbertow@2806:107e:f:2338:a44f:9ac4:f9ae:6b9e) (Ping timeout: 252 seconds)
[14:24:21] <josevalim> hauleth: what do you want to do? load all macros from a .beam file?
[14:30:05] <hauleth> josevalim: List all macros in .beam file
[14:30:12] <hauleth> That would be enough
[14:30:37] <hauleth> I can filter by `MACRO-` prefix, but IIRC it is not future-proof way
[14:31:12] <hauleth> In short I want to tackle these two - https://github.com/hauleth/mix_unused/issues
[14:32:30] *** Joins: brauliobz (~manjaro-u@user/brauliobz)
[14:33:41] <hauleth> As I am planning v0.2.0 and I think if it is feasible to add this as well to new filtering capabilities
[14:40:21] *** Joins: livoreno (~livoreno@user/notzmv)
[14:47:30] <josevalim> yeah, so you actually want to know if something is a macro
[14:47:45] <josevalim> oh, i see
[14:47:54] <josevalim> you actually need to pass name and arity
[14:48:33] <josevalim> `Macro.export_to_definition(name, arity)` or something of sorts... hrm
[15:06:21] *** Joins: humberto1 (~humbertow@2806:107e:f:2338:a44f:9ac4:f9ae:6b9e)
[15:08:24] <hauleth> yeah
[15:10:28] *** Quits: humberto1 (~humbertow@2806:107e:f:2338:a44f:9ac4:f9ae:6b9e) (Ping timeout: 252 seconds)
[15:14:14] <josevalim> doesn't feel like it belongs in `Macro` though
[15:14:27] <josevalim> another options is to have a `Code.fetch_exports` that mirrors `Code.fetch_docs`
[15:18:41] *** gmc_ is now known as gmc
[15:20:57] <hauleth> josevalim: whatever is fine for me
[15:21:19] *** Joins: yauhsien (~yauhsien@118-167-48-21.dynamic-ip.hinet.net)
[15:21:41] <hauleth> di4na on Slack even suggested using `Code.fetch_docs` as current workaround
[15:24:30] <josevalim> that will likely work, yeah
[15:25:56] *** Quits: yauhsien (~yauhsien@118-167-48-21.dynamic-ip.hinet.net) (Ping timeout: 245 seconds)
[15:27:30] <hauleth> Sounds like an temporary alternative, however I think it could be useful to be able to extract the macros list from module without loading it. I know that it will probably be useful only for the tool I am writing, but maybe someone will come with something more clever there.
[15:28:03] <hauleth> However using `Code.fetch_docs` may have additional pros
[15:28:28] <hauleth> Like being able to use documentation tags to mark functions as a externally publci
[15:28:39] <hauleth> s/publci/public/
[15:28:46] <hauleth> I will check out that route
[15:36:13] *** Joins: humberto1 (~humbertow@2806:107e:f:2338:a44f:9ac4:f9ae:6b9e)
[15:45:35] <hauleth> josevalim: small proposal if I am here - `@impl true` and `@impl module` could also result with documentation metadata
[15:46:54] <hauleth> I would add it on my own, but I am not really familar with the behaviour of `@impl` yet
[15:50:06] *** Joins: grundrausch3n (~grundraus@139.142.207.35.bc.googleusercontent.com)
[15:53:00] *** Joins: phaleth (~phaleth@user/phaleth)
[15:53:03] *** Quits: brauliobz (~manjaro-u@user/brauliobz) (Read error: No route to host)
[16:03:27] <josevalim> hauleth: hrm, you can recover that from the behaviour though
[16:03:37] <hauleth> I do
[16:03:46] <josevalim> and for your purpose it won't be enough as people might not add `@impl true`
[16:04:07] <hauleth> I just think that it would be handy to have something like that OotB
[16:04:26] <hauleth> josevalim: well, I would say that it is their wrongdoing
[16:14:59] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 265 seconds)
[16:23:15] <josevalim> you are not required to declare @impl at all
[16:23:21] <josevalim> but you can say it is required as part of your lib
[16:30:16] <hauleth> That is what I am saying. If you want to automatically see these as used, you will need to use `@impl`
[16:37:16] *** Quits: chgr (~ek@nat-91-137-16-23.net.encoline.de) (Quit: WeeChat 3.2)
[16:37:53] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Ping timeout: 264 seconds)
[16:46:03] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[16:48:18] *** Joins: duane (~duane@75-35-193-117.lightspeed.nsvltn.sbcglobal.net)
[16:48:26] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 252 seconds)
[16:48:57] *** Quits: phaleth (~phaleth@user/phaleth) (Quit: phaleth)
[16:50:59] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[16:51:23] *** Quits: spiun_ (~spiun@2a01:4b00:86a9:fb00:85b5:d577:5855:502c) (Remote host closed the connection)
[16:54:10] *** Joins: Guest68 (~Guest68@p200300c8cf120f00c3fb2b9ff2f8c3dd.dip0.t-ipconnect.de)
[17:04:55] *** Quits: voltone (~voltone@mailgw3.be-all.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:09:27] *** Joins: pi1 (~pi@177.223.162.41)
[17:11:21] *** Quits: humberto1 (~humbertow@2806:107e:f:2338:a44f:9ac4:f9ae:6b9e) (Ping timeout: 245 seconds)
[17:23:07] *** Joins: yauhsien (~yauhsien@118-167-48-21.dynamic-ip.hinet.net)
[17:23:08] *** Joins: humberto1 (~humbertow@2806:107e:f:2338:a44f:9ac4:f9ae:6b9e)
[17:25:50] *** Joins: thojanssens (~thojansse@188.190.249.227)
[17:27:46] *** Quits: humberto1 (~humbertow@2806:107e:f:2338:a44f:9ac4:f9ae:6b9e) (Ping timeout: 260 seconds)
[17:27:58] *** Quits: yauhsien (~yauhsien@118-167-48-21.dynamic-ip.hinet.net) (Ping timeout: 265 seconds)
[17:29:43] *** Joins: bit4bit (~bit4bit@181.49.102.14)
[17:39:55] *** Joins: voltone (~voltone@85.64.15.73.dynamic.barak-online.net)
[17:43:09] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[17:43:17] *** Quits: voltone (~voltone@85.64.15.73.dynamic.barak-online.net) (Client Quit)
[17:44:37] *** Quits: Guest68 (~Guest68@p200300c8cf120f00c3fb2b9ff2f8c3dd.dip0.t-ipconnect.de) (Quit: Client closed)
[17:47:04] *** Joins: Sgeo (~Sgeo@user/sgeo)
[17:58:04] *** Joins: brauliobz (~manjaro-u@user/brauliobz)
[17:59:33] *** Joins: voltone (~voltone@85.64.15.73.dynamic.barak-online.net)
[18:00:27] <hauleth> josevalim: used `Code.fetch_docs` and released v0.2.0
[18:04:12] *** sgn_ is now known as sgn
[18:06:15] *** Joins: Guest62 (~textual@047-006-082-079.res.spectrum.com)
[18:12:16] *** Joins: humberto1 (~humbertow@2806:107e:f:2338:a44f:9ac4:f9ae:6b9e)
[18:12:55] *** Quits: duane (~duane@75-35-193-117.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 265 seconds)
[18:14:20] *** Quits: voltone (~voltone@85.64.15.73.dynamic.barak-online.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:14:23] *** Joins: duane (~duane@75-35-193-117.lightspeed.nsvltn.sbcglobal.net)
[18:16:46] *** Quits: humberto1 (~humbertow@2806:107e:f:2338:a44f:9ac4:f9ae:6b9e) (Ping timeout: 260 seconds)
[18:31:16] *** Joins: phaleth (~phaleth@user/phaleth)
[18:31:26] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[18:34:40] *** Joins: humberto1 (~humbertow@2806:107e:f:2338:a44f:9ac4:f9ae:6b9e)
[18:43:01] *** Quits: pi1 (~pi@177.223.162.41) (Read error: Connection reset by peer)
[18:43:27] *** Quits: floriann (~Thunderbi@2a02:8106:2e:1300:ea6a:64ff:fe67:369e) (Quit: floriann)
[19:03:01] *** Quits: thojanssens (~thojansse@188.190.249.227) (Ping timeout: 245 seconds)
[19:22:57] *** Joins: glassofe1hanol (~ethanmorg@92.40.183.212.threembb.co.uk)
[19:23:58] *** Quits: glassofethanol (~ethanmorg@82.16.192.251) (Ping timeout: 265 seconds)
[19:24:31] *** Joins: yauhsien (~yauhsien@118-167-48-21.dynamic-ip.hinet.net)
[19:28:09] *** Quits: glassofe1hanol (~ethanmorg@92.40.183.212.threembb.co.uk) (Quit: leaving)
[19:28:51] *** Quits: yauhsien (~yauhsien@118-167-48-21.dynamic-ip.hinet.net) (Ping timeout: 245 seconds)
[19:32:36] *** Quits: odoood (~odoood@2601:c8:c003:a550::2) (Ping timeout: 245 seconds)
[19:33:51] *** Quits: bit4bit (~bit4bit@181.49.102.14) (Ping timeout: 245 seconds)
[19:34:24] *** Joins: mooff (~mooff@awful.cooking)
[19:34:58] *** Joins: bit4bit (~bit4bit@181.49.102.14)
[19:35:31] <mooff> hi all. are there any production level Elixir web servers around?
[19:36:10] <mooff> in particular, is anyone using Elixir for their edge web servers? e.g. in place of Nginx, or Traefik?
[19:42:18] <phaleth> mooff: hi, webservers are written in erlang, cowboy is a pretty common one that can be setup with https facing WAN directly
[19:46:20] <mooff> thanks phaleth. i've thought of using Couch in that role to serve / update 'Jamstack' style apps
[19:47:31] <mooff> i was thinking that Caddy and Traefik are both a little awkward to configure. at one time i knew Nginx well, but it's written in C, and i think we should broadly move past using C software
[19:49:09] <phaleth> CouchDB?
[19:49:52] <phaleth> I'd suggest haproxy and no looking back, but since you mentioned you don't want software written in C
[19:57:36] <rawtaz> mooff: i guess it boils down to, do you want a web server or do you want a proxy?
[19:58:40] <mooff> rawtaz: i want both. i want the promise of Caddy in other forms
[19:59:21] <mooff> i'm ultimately okay with containerizing Haproxy, Nginx, [Caddy, Traefik]
[19:59:33] <mooff> just curious if the Erlang / Elixir world had any budding solutions :-)
[19:59:41] <phaleth> mooff: what's the promise of Caddy that you have in mind?
[19:59:53] <mooff> a supervision tree is a nice way to specify a web server route / configuration chain
[20:00:17] <mooff> phaleth: the ease of the Caddyfile for configuration. good defaults. automatic, painless ACME HTTPS
[20:00:34] <mooff> fast. not memory unsafe.
[20:02:00] <phaleth> hmm, actually there is acme.sh that can automate cert(s) renew, I have that running in separate docker container and it's working great
[20:02:25] <mooff> the Caddyfile ended up being quite nuanced and non-intuitive for moderately complex setups
[20:06:01] <phaleth> yeah, in the end it's better to split all services
[20:08:32] <phaleth> but anyways, all these mentioned apps have some sort of concept of master and worker processes, so the supervision is kinda there, it's just not hidden to the OS
[20:10:48] *** Joins: thojanssens (~thojansse@178.151.5.79)
[20:28:29] <rawtaz> mooff: isnt traefik pretty darn nice though? one binary, nice configuration, if you use containers you can put lots of it there, automatic lets encrypt, etc.
[20:29:11] *** Joins: sgarciapdx (~serge@irc.shork.io)
[20:35:13] *** Quits: brauliobz (~manjaro-u@user/brauliobz) (Remote host closed the connection)
[20:39:16] <mooff> rawtaz: my only use of it was while trying to learn kubernetes
[20:39:17] * mooff shudders
[20:46:53] *** LostKobrakai_ is now known as LostKobrakai[awa
[20:46:53] *** Quits: LostKobrakai[awa (~LostKobra@2001:16b8:2d28:6f00:8c80:97a2:2d90:72d0) (Quit: LostKobrakai[awa)
[20:54:30] *** Joins: brauliobz (~manjaro-u@user/brauliobz)
[20:57:10] <rawtaz> ah. i guess that left a sour taste :)
[20:57:22] <rawtaz> im using traefik with just docker and docker-compose, it works splendidly and is super simple
[21:07:24] *** Joins: LostKobrakai_ (~LostKobra@2001:16b8:2d28:6f00:8c80:97a2:2d90:72d0)
[21:07:35] *** LostKobrakai_ is now known as LostKobrakai[awa
[21:09:01] *** Quits: LostKobrakai[awa (~LostKobra@2001:16b8:2d28:6f00:8c80:97a2:2d90:72d0) (Client Quit)
[21:09:29] *** Joins: LostKobrakai_ (~LostKobra@2001:16b8:2d28:6f00:8c80:97a2:2d90:72d0)
[21:16:52] *** Quits: grundrausch3n (~grundraus@139.142.207.35.bc.googleusercontent.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:18:22] *** Quits: LostKobrakai_ (~LostKobra@2001:16b8:2d28:6f00:8c80:97a2:2d90:72d0) (Quit: LostKobrakai_)
[21:26:17] *** Joins: yauhsien (~yauhsien@118-167-48-21.dynamic-ip.hinet.net)
[21:30:57] *** Quits: yauhsien (~yauhsien@118-167-48-21.dynamic-ip.hinet.net) (Ping timeout: 265 seconds)
[21:33:33] *** Quits: phaleth (~phaleth@user/phaleth) (Quit: phaleth)
[21:41:20] *** Quits: brauliobz (~manjaro-u@user/brauliobz) (Quit: Konversation terminated!)
[21:47:29] *** Joins: LostKobrakai_ (~LostKobra@2001:16b8:2d28:6f00:8c80:97a2:2d90:72d0)
[21:47:40] *** LostKobrakai_ is now known as LostKobrakai[awa
[21:48:55] *** Quits: LostKobrakai[awa (~LostKobra@2001:16b8:2d28:6f00:8c80:97a2:2d90:72d0) (Client Quit)
[21:59:35] *** Joins: mouseghost (~draco@user/mouseghost)
[22:16:32] <whk> does anyone have thoughts on autogenerating code for an aws api? for example: using something like this? https://github.com/aws/aws-sdk-ruby/blob/version-3/apis/cognito-idp/2016-04-18/api-2.json 
[22:19:01] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Ping timeout: 250 seconds)
[22:20:23] <whk> for now I am just hand coding some operations, but it is getting boring quickly. 
[22:31:55] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[22:44:38] *** Quits: humberto1 (~humbertow@2806:107e:f:2338:a44f:9ac4:f9ae:6b9e) (Ping timeout: 260 seconds)
[22:46:33] *** Joins: humberto1 (~humbertow@2806:107e:f:2338:29f8:c08:f592:7635)
[23:07:45] *** Joins: ur5us (~ur5us@2406:e002:6bd3:6701:534f:b327:a77f:88b3)
[23:26:21] *** Quits: ur5us (~ur5us@2406:e002:6bd3:6701:534f:b327:a77f:88b3) (Ping timeout: 245 seconds)
[23:27:43] *** Joins: yauhsien (~yauhsien@118-167-48-21.dynamic-ip.hinet.net)
[23:32:24] *** Quits: yauhsien (~yauhsien@118-167-48-21.dynamic-ip.hinet.net) (Ping timeout: 265 seconds)
[23:46:39] *** Quits: natrys (~natrys@user/natrys) (Quit: natrys)
[23:49:28] *** Joins: ur5us (~ur5us@2406:e002:6bd3:6701:534f:b327:a77f:88b3)
[23:55:09] *** Joins: hoppity (~user@user/hoppity)
[23:55:45] <hoppity> Hi guys, does anyone know if there is a library for converting a CSV file to Json objects in Exlir?
