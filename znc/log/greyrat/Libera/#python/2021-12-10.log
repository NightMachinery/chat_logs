[00:00:05] <Widdershins> oh i have to clone it inside the pyenv directory
[00:00:07] *** Joins: ccallahan|Backup (~ccallahan@redhat/ccallahan)
[00:00:18] *** Quits: Andrynet (~Andrynet@186.46.201.139) (Ping timeout: 256 seconds)
[00:00:19] <matsaman> I think probably you want python-3.10, without -dev
[00:00:36] *** Joins: sembiance (~sembiance@108.170.16.18)
[00:00:49] <matsaman> maybe you just said you have it =) was hard for me to parse
[00:01:50] *** Joins: Andrynet (~Andrynet@186.46.201.139)
[00:01:52] <sembiance> where can I find full API docs on python builtins? Specifically I have some code that is doing open() as f   then f.read(...) and I'd like to better understand that 'read' is doing and the meaning of the arguments passed in
[00:02:00] *** Quits: imp (~imp@192-141-191-234.alternativaip.net.br) (Ping timeout: 256 seconds)
[00:02:29] *** Quits: ccallahan (~ccallahan@redhat/ccallahan) (Ping timeout: 265 seconds)
[00:02:31] <sembiance> I found open: https://docs.python.org/3/library/functions.html#open
[00:02:56] *** Joins: sandyegg0 (~j03@user/sandyegg0)
[00:02:57] *** Joins: rany_ (~rany@user/rany)
[00:03:02] <sembiance> ahh, actually, that's it. thanks.
[00:03:11] *** Joins: jay-m1261 (~jay-m@129.0.76.219)
[00:03:25] *** Joins: rany__ (~rany@user/rany)
[00:03:27] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[00:03:33] <sandyegg0> i have a string foo = "testing1234", and i set a variable start = 1, and end = 3, i'd like to print a substring of the string foo as foo[start:end] , how can i do this ?
[00:03:33] <matsaman> more junk on apt approach: https://stackoverflow.com/questions/69503329/pip-is-not-working-for-python-3-10-on-ubuntu
[00:03:36] <deniska> docs about builtins could be organized in a better fashion, it always takes me a second to remember where to look up info on sets
[00:03:49] <sandyegg0> every example ive seen only shows hard coded values for substringing
[00:04:10] <jinsun> sandyegg0: you can do what you just wrote
[00:04:13] <deniska> sandyegg0: mm… print(foo[start:end])?
[00:04:16] *** Joins: rany___ (~rany@user/rany)
[00:04:39] <sandyegg0> ok now it worked ... what was i doing wrong before. going back to my console
[00:05:33] *** Quits: rany (~rany@user/rany) (Ping timeout: 276 seconds)
[00:05:35] *** Quits: op0x0f05 (uid512716@id-512716.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[00:07:04] <Widdershins> well i made a pyenv virtualenv and it didn't create a folder and i have no idea where it's put it or how to activate the dang thing
[00:07:12] *** Joins: imp (~imp@192-141-191-233.alternativaip.net.br)
[00:07:42] <deniska> pyenv doesn't create virtualenvs
[00:07:48] <deniska> it installs pythons
[00:08:07] <jinsun> it can with pyenv-virtualenv plugin
[00:08:09] *** Quits: rany_ (~rany@user/rany) (Ping timeout: 276 seconds)
[00:08:32] <jinsun> with that activating is `pyenv activate venv-name`
[00:08:48] *** Quits: rany__ (~rany@user/rany) (Ping timeout: 276 seconds)
[00:08:54] <Widdershins> and that needs to be activated in your bashrc... this is way too much setup
[00:09:00] <Widdershins> which is why i prefer just having a python installed
[00:10:20] <jinsun> yeah one extra line is required in bashrc to make pyenv-virtualenv work
[00:11:25] *** Joins: RasnCain_ (~rasncain@gw1.cox.com)
[00:11:26] <jinsun> you can just do it the usual way with python -m venv too
[00:11:52] *** Joins: rany (~rany@user/rany)
[00:12:12] <Widdershins> two extra lines
[00:12:19] *** Quits: BlueSky_ (~BlueSky@user/bluesky) (Ping timeout: 252 seconds)
[00:12:26] <jinsun> but I like to let pyenv remind me which venvs have to be recreated when I update python
[00:12:35] <jinsun> so I use the pyenv thing
[00:12:46] <Widdershins> jinsun: i could do python -m venv but there's no python to go and find without digging into a zillion hidden pyenv folders to find the binary
[00:13:00] <jinsun> pyenv global 3.10.1
[00:13:06] <jinsun> exec  $SHELL
[00:13:24] <jinsun> then just runnning python wil give python 3.10.1 that you just installed
[00:13:52] <Widdershins> i just want to use the virtualenv not replace every invocation of python
[00:14:21] <deniska> you want to use python of a different version than your debian-like system provides
[00:14:22] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[00:15:01] *** Joins: waynew (~wayne@user/waynew)
[00:15:13] <grym> direnv's also great
[00:15:40] <deniska> unless your debian-like system is ubuntu and you can use deadsnakes-ppa (and you don't mind that it applies the same ubuntu patches leading to some possible problems), any solution which is not pyenv is strictly more work than pyenv
[00:15:44] <Widdershins> ok i ran `pyenv activate` and it changed my PS1 but `python` and `python3` are still the system ones
[00:15:46] *** Quits: Russell (~russell@bnc4free/staff/russell) (Excess Flood)
[00:15:46] *** Quits: mrkajetanp (~mrkajetan@2a01:4b00:ea36:6c00:7994:941c:3f5d:2b88) (Ping timeout: 245 seconds)
[00:15:57] *** Quits: rany___ (~rany@user/rany) (Ping timeout: 276 seconds)
[00:16:02] *** Quits: ludo (ludo@user/ludo) (Ping timeout: 240 seconds)
[00:16:07] *** Joins: Russell (russell@bnc4free/staff/russell)
[00:16:16] <Widdershins> what if i don't want it to hide the virtualenv, god dammit
[00:16:25] <Widdershins> i want it to put it where i tell it to put it like a normal goddamn virtualenv
[00:16:26] *** Joins: mrkajetanp (~mrkajetan@2a01:4b00:ea36:6c00:7994:941c:3f5d:2b88)
[00:17:01] *** Quits: imp (~imp@192-141-191-233.alternativaip.net.br) (Ping timeout: 240 seconds)
[00:17:25] *** Quits: cecep[m] (~cecep@2001:470:69fc:105::3994) (Ping timeout: 240 seconds)
[00:17:25] *** Quits: graingert[m] (~graingert@2001:470:69fc:105::653) (Ping timeout: 240 seconds)
[00:17:32] *** Quits: gloomy (~gloomy@2001:470:69fc:105::ce00) (Ping timeout: 240 seconds)
[00:17:35] *** Joins: srilyk (~wayne@user/waynew)
[00:17:35] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Ping timeout: 250 seconds)
[00:17:35] *** Quits: neolem (~neolem@2001:470:69fc:105::c675) (Ping timeout: 250 seconds)
[00:17:38] *** Quits: jinsun_ (~jinsun@user/jinsun) (Ping timeout: 252 seconds)
[00:17:47] *** Quits: YakoYoku (~yakoyoku@2001:470:69fc:105::780) (Ping timeout: 260 seconds)
[00:17:48] *** Quits: schemanic[m] (~schemanic@2001:470:69fc:105::1:2450) (Ping timeout: 250 seconds)
[00:17:51] <jinsun> ~/.pyenv/versions/3.10.1/bin/python -m venv
[00:18:01] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Ping timeout: 250 seconds)
[00:18:01] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Ping timeout: 250 seconds)
[00:18:01] <Widdershins> yeah that sucks
[00:18:14] *** Quits: smichel17[m] (~smichel17@2001:470:69fc:105::2d32) (Ping timeout: 250 seconds)
[00:18:14] *** Quits: Vipulk (~vipulk@user/vipulk) (Ping timeout: 260 seconds)
[00:18:16] <deniska> you run it once to create a venv though
[00:18:19] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[00:18:24] <deniska> then you can use the venv like you always would
[00:18:34] <Widdershins> pyenv-virtualenv doesn't do that
[00:18:41] *** Joins: waynew (~wayne@user/waynew)
[00:19:01] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Ping timeout: 240 seconds)
[00:19:03] <deniska> that's for people who don't want to put venvs in the same dir as the project
[00:19:06] *** Quits: meatballs (~meatballs@2001:470:69fc:105::633) (Ping timeout: 250 seconds)
[00:19:06] <Widdershins> it also doesn't work at all, `pyenv activate` only changes your ps1 and seems to have no other effect
[00:19:06] *** Quits: srilyk (~wayne@user/waynew) (Read error: Connection reset by peer)
[00:19:17] *** Quits: mindlesstux[m] (~mindlesst@user/mindlesstux) (Ping timeout: 252 seconds)
[00:19:19] *** Quits: DX099 (~dx099@2001:470:69fc:105::21ce) (Ping timeout: 250 seconds)
[00:19:23] *** Joins: sudomann_ (~sudomann@98.219.211.182)
[00:19:25] <sudomann_> protobuf-3.19.1-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl is not a supported wheel on this platform.
[00:19:32] *** Quits: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016) (Ping timeout: 250 seconds)
[00:19:32] *** Quits: morguldir (~morguldir@2001:470:69fc:105::21bd) (Ping timeout: 250 seconds)
[00:19:32] *** Quits: pschmitt[m] (~pschmitt@2001:470:69fc:105::1:24cb) (Ping timeout: 240 seconds)
[00:19:32] *** Quits: bitonic (~bitonic@2001:470:69fc:105::1812) (Ping timeout: 240 seconds)
[00:19:32] *** Joins: srilyk (~wayne@user/waynew)
[00:19:37] <sudomann_> How so?
[00:19:38] *** Quits: cotsuka (~cotsuka@user/cotsuka) (Ping timeout: 260 seconds)
[00:19:38] *** Quits: flashd[m] (~flashdmat@2001:470:69fc:105::1:3d0b) (Ping timeout: 260 seconds)
[00:19:45] *** Quits: ronny (~ronny@2001:470:69fc:105::b57) (Ping timeout: 250 seconds)
[00:19:49] *** Quits: boris[m] (~borisruna@2001:470:69fc:105::32f3) (Ping timeout: 240 seconds)
[00:19:57] *** Quits: kikijiki[m] (~kikijiki@user/kikijiki) (Ping timeout: 250 seconds)
[00:20:02] *** Quits: psydroid (~psydroid@user/psydroid) (Ping timeout: 240 seconds)
[00:20:06] <sudomann_> It installed just fine on my personal machine which is x86_64 as well
[00:20:11] *** Joins: shad (~shad@user/shad)
[00:20:21] <sudomann_> suddenly goes and fails on our CI server
[00:20:23] *** Quits: BrenBarn (~brenbarn@2001:470:69fc:105::2da2) (Ping timeout: 250 seconds)
[00:20:37] *** Quits: novasharper (~novasharp@2001:470:69fc:105::b4a) (Ping timeout: 250 seconds)
[00:20:37] *** Quits: zommKa (~ccctttmat@2001:470:69fc:105::b947) (Ping timeout: 268 seconds)
[00:20:38] *** Quits: allegary (~allegary@apache/committer/gjm) (Ping timeout: 268 seconds)
[00:20:38] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (Ping timeout: 268 seconds)
[00:20:38] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (Ping timeout: 268 seconds)
[00:20:38] *** Quits: berton[m] (~berton@2001:470:69fc:105::ce36) (Ping timeout: 268 seconds)
[00:20:38] *** Quits: canardo (~canardo@2001:470:69fc:105::e110) (Ping timeout: 268 seconds)
[00:20:41] *** Quits: Russell (russell@bnc4free/staff/russell) (Remote host closed the connection)
[00:20:56] *** Joins: Russell (russell@bnc4free/staff/russell)
[00:21:39] *** Quits: shad (~shad@user/shad) (Client Quit)
[00:21:42] <deniska> sudomann_: centos 6?
[00:21:51] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (Ping timeout: 268 seconds)
[00:21:51] *** Quits: saltrocklamp[m] (~hexology@user/hexology) (Ping timeout: 268 seconds)
[00:22:14] <deniska> manylinux2014 targets centos 7
[00:22:43] *** Joins: ttkap (~ttkap@user/ttkap)
[00:23:16] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 265 seconds)
[00:23:47] *** Joins: aztec (~aztec@2804:2238:7ce:f700:1041:4fb3:9398:4161)
[00:23:48] *** Quits: Kalov (~Thunderbi@181.226.249.159) (Quit: Kalov)
[00:24:07] <sudomann_> oh wow, my personal machine is ubuntu 21.04
[00:24:15] <sudomann_> ci server is 20.04 i think
[00:24:22] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[00:25:07] <deniska> 20.04 should work with manylinux2014
[00:25:35] <Widdershins> ubuntu doesn't necessarily imply x86_64
[00:25:48] <Widdershins> it'd be a little weird if it wasn't but it doesn't hurt to check
[00:26:19] <deniska> it'd be hard to get 32 bit 20.04 installed :)
[00:26:48] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[00:27:20] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:27:37] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 265 seconds)
[00:28:00] *** Joins: pschmitt[m] (~pschmitt@2001:470:69fc:105::1:24cb)
[00:28:10] *** Joins: bitonic (~bitonic@2001:470:69fc:105::1812)
[00:28:54] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[00:29:07] <Widdershins> god that was really painful to set up
[00:29:08] <ChrisWarrick> sudomann_: does python version match between your machines?
[00:30:08] *** Quits: BtbN (btbn@ffmpeg/developer/btbn) (Remote host closed the connection)
[00:30:15] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[00:30:54] *** Quits: jay-m126 (~jay-m@129.0.76.219) (Ping timeout: 256 seconds)
[00:30:55] *** Joins: ffledgling (~textual@163.114.132.128)
[00:31:00] *** Quits: rendar (~rendar@user/rendar) (Ping timeout: 265 seconds)
[00:31:28] *** Quits: jay-m1261 (~jay-m@129.0.76.219) (Ping timeout: 256 seconds)
[00:31:29] *** Quits: jay-m126_ (~jay-m@129.0.76.219) (Ping timeout: 265 seconds)
[00:31:40] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: SO LONG SUCKERS!)
[00:31:48] *** Joins: jmcantrell (~jmcantrel@user/jmcantrell)
[00:32:04] *** Joins: rany_ (~rany@user/rany)
[00:32:06] <ChrisWarrick> deniska: weeell… https://cdimage.ubuntu.com/releases/20.04/release/ has an armhf image ;)
[00:32:32] <deniska> ChrisWarrick: "technically"
[00:33:15] <deniska> it's kinda hard to accidentally get armhf ubuntu running :)
[00:33:33] *** Joins: morguldir (~morguldir@2001:470:69fc:105::21bd)
[00:33:34] *** Joins: BtbN (btbn@ffmpeg/developer/btbn)
[00:33:53] *** Joins: rany__ (~rany@user/rany)
[00:34:24] <sudomann_> ChrisWarrick: yep, 3.7
[00:34:33] <sudomann_> Might be a difference in minor version though
[00:34:55] *** Joins: boris[m] (~borisruna@2001:470:69fc:105::32f3)
[00:35:15] <sudomann_> And I am quite confident all hardware involved here is 64 bit
[00:35:27] *** Quits: rany (~rany@user/rany) (Ping timeout: 276 seconds)
[00:35:45] <novapy> is there a tkinter version for 3.11?
[00:35:52] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[00:35:55] *** Joins: psydroid (~psydroid@user/psydroid)
[00:35:57] <deniska> sudomann_: is it actually 20.04, or something older like 18.04?
[00:36:20] *** Joins: fikran (~fikran@user/fikran)
[00:36:22] <deniska> (That reminds me, I have servers I should dist-upgrade… eventually)
[00:36:27] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[00:36:40] *** Joins: novasharper (~novasharp@2001:470:69fc:105::b4a)
[00:36:41] *** Joins: Linux77 (~7Linux7@186.233.183.58)
[00:36:45] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[00:36:47] *** Joins: BrenBarn (~brenbarn@2001:470:69fc:105::2da2)
[00:36:48] *** Quits: audio (~audio@user/audio) (Ping timeout: 265 seconds)
[00:36:57] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[00:37:17] *** Quits: odoood (~odoood@2601:c8:c003:a550::5) (Ping timeout: 265 seconds)
[00:37:29] <sudomann_> ugh sorry the CI server is Ubuntu 20.04, but the docker image is python:3.7-buster
[00:38:03] *** Quits: rany_ (~rany@user/rany) (Ping timeout: 276 seconds)
[00:39:07] <jinsun> novapy: python 3.11? depending on how you got 3.11, it might already come with it, it is in standard library
[00:39:24] *** Quits: Andrynet (~Andrynet@186.46.201.139) (Ping timeout: 256 seconds)
[00:39:31] <sudomann_> oh my god I am falling apart, sorry for wrong info. Been looking at the wrong dockerfile. The image is openjdk:8-slim-buster, and python 3.7 was installed with apt
[00:40:37] <sudomann_> Since the image is a slim variant, is it possible pip needed some system utils (that were absent) to correctly install the package?
[00:41:12] *** Joins: Andrynet (~Andrynet@186.46.201.139)
[00:41:51] <ChrisWarrick> why are you using an openjdk image for python?
[00:41:58] <deniska> sudomann_: https://github.com/pypa/manylinux it has a minimal requirements for pip, python, and effectively glibc versions
[00:42:03] *** Parts: sembiance (~sembiance@108.170.16.18) (deno)
[00:43:06] *** Quits: jochum_ (~quassel@user/jochum) (Quit: No Ping reply in 180 seconds.)
[00:43:27] *** Joins: gloomy (~gloomy@2001:470:69fc:105::ce00)
[00:44:01] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[00:44:31] *** Joins: jochum (~quassel@user/jochum)
[00:44:49] <sudomann_> ChrisWarrick: pyspark is used in the container. I recall i originally started with a python, but all the associated flavors only had newer versions of java via apt. Buildign openjdk from src would take years ofc, so I used an openjdk image instead so I could get python from apt
[00:45:18] <sudomann_> * with a python image
[00:45:30] *** Quits: RasnCain_ (~rasncain@gw1.cox.com) (Remote host closed the connection)
[00:45:48] *** Joins: imp (~imp@192-141-191-232.alternativaip.net.br)
[00:45:52] *** Quits: aztec (~aztec@2804:2238:7ce:f700:1041:4fb3:9398:4161) (Quit: Leaving)
[00:45:55] *** Joins: RasnCain (~rasncain@gw1.cox.com)
[00:45:57] *** Quits: Andrynet (~Andrynet@186.46.201.139) (Ping timeout: 250 seconds)
[00:46:02] <sudomann_> Our people are using pyspark 2.4 or something which relies on java 8 -_-
[00:46:27] *** Quits: cursey (~cursey@user/cursey) (Quit: bye)
[00:46:46] *** Joins: cursey (~cursey@user/cursey)
[00:47:31] *** Joins: Andrynet (~Andrynet@186.46.201.139)
[00:48:12] *** Quits: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com) (Read error: Connection reset by peer)
[00:48:15] *** Quits: N3X15 (~nexis@mail.nexisonline.net) (Quit: ZNC - http://znc.in)
[00:49:49] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[00:50:28] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-e987-051e-5e5c-2913.res6.spectrum.com)
[00:50:30] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:51:03] *** Joins: N3X15 (~nexis@mail.nexisonline.net)
[00:51:36] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[00:51:47] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 265 seconds)
[00:52:01] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:f584:868d:d30a:73b6) (Quit: Client closed)
[00:52:21] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[00:52:40] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 268 seconds)
[00:53:01] *** Quits: sandyegg0 (~j03@user/sandyegg0) (Ping timeout: 240 seconds)
[00:53:24] <matsaman> sudomann_: :/
[00:53:45] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:f584:868d:d30a:73b6)
[00:53:45] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[00:54:08] *** Quits: jellyknight (~gelignite@55d403aa.access.ecotel.net) (Quit: Stay safe!)
[00:55:21] *** Joins: Pickchea (~private@user/pickchea)
[00:55:24] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Read error: Connection reset by peer)
[00:57:01] *** Joins: parv (~quass@user/parv)
[00:58:01] *** Joins: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016)
[00:58:21] *** Joins: schemanic[m] (~schemanic@2001:470:69fc:105::1:2450)
[00:59:32] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:00:13] *** Quits: sazawal (~sazawal@122.161.85.155) (Quit: Leaving)
[01:01:04] *** Joins: kikijiki[m] (~kikijiki@user/kikijiki)
[01:01:17] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[01:01:33] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[01:01:40] *** Joins: cecep[m] (~cecep@2001:470:69fc:105::3994)
[01:02:09] *** Joins: jinsun_ (~jinsun@user/jinsun)
[01:02:26] *** Joins: Bakunin (~maplefing@user/lindis)
[01:02:27] *** Quits: maplefinger (~maplefing@user/lindis) (Killed (NickServ (GHOST command used by Bakunin)))
[01:02:35] *** Bakunin is now known as maplefinger
[01:03:55] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[01:04:05] *** Quits: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d) (Quit: WeeChat 3.3)
[01:04:06] *** Parts: csmiga1 (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com) ()
[01:04:29] *** Joins: csmiga1 (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com)
[01:04:55] *** Quits: bomzh1018 (~user@176.52.41.253) (Quit: Leaving.)
[01:05:01] *** Quits: Andrynet (~Andrynet@186.46.201.139) (Ping timeout: 250 seconds)
[01:07:32] *** Joins: Andrynet (~Andrynet@186.46.201.139)
[01:08:36] <{HD}> do you people do pip questions or just python code? I installed something that needed to upgrade regex to 2021 but then I get an error that another package needed regex <2020, >2019.4...can I install both somehow?
[01:09:26] <grym> {HD}: in separate environments, yes; together, no
[01:10:11] <{HD}> grym: bummer, I know about enviroments but I haven't installed anything liek that yet. I think I am just piping into my global env...
[01:10:53] *** Joins: YakoYoku (~yakoyoku@2001:470:69fc:105::780)
[01:11:00] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[01:11:15] <jinsun> dangerous, better to have a always activated global venv, so you know you can easily fix it if you screw it up
[01:11:32] *** Joins: canardo (~canardo@2001:470:69fc:105::e110)
[01:11:52] <{HD}> jinsun: yea, I don't know enough about enviroments to do that. And I started messing with packages before I knew enviroments existed...
[01:11:54] <{HD}> ¯\_(ツ)_/¯
[01:13:00] <bluss> it's easy to make a new venv though so why not try
[01:13:31] <{HD}> bluss: I guess I will lookup a video or document about it...as I said I have heard of it but never done it.
[01:13:59] *** Joins: rany (~rany@user/rany)
[01:15:34] *** Joins: rany_ (~rany@user/rany)
[01:15:48] <matsaman> python(3/whatevs) -m venv some/path; source some/path/bin/activate; pip install whatevs; stuff; deactivate
[01:15:57] *** Quits: a0z1 (~a0z1@194.36.25.57) (Ping timeout: 265 seconds)
[01:16:35] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-71f8-eb14-0c59-711a.res6.spectrum.com)
[01:16:46] *** Quits: BSaboia (~bsaboia@177.37.198.179) (Quit: This computer has gone to sleep)
[01:17:06] <jinsun> and put the source ... activate global_venv in your bashrc for the convenient global venv that is always activated
[01:17:27] <jinsun> and put export PIP_REQUIRE_VIRTUALENV=true also, so you never install packages outside of venv
[01:17:35] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Ping timeout: 252 seconds)
[01:17:42] *** Quits: rany__ (~rany@user/rany) (Ping timeout: 276 seconds)
[01:17:54] *** Joins: rany__ (~rany@user/rany)
[01:18:33] <{HD}> that all sounds great...Guess I will start looking into it. If I start a new enviroment now will it be empty/naked or since I have packages that might be installed um...*globally* will it inherit those?
[01:18:53] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Quit: Client closed)
[01:18:54] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-e987-051e-5e5c-2913.res6.spectrum.com) (Ping timeout: 260 seconds)
[01:18:56] *** Joins: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[01:19:03] *** Joins: rany___ (~rany@user/rany)
[01:19:31] <jinsun> it won't inherit any pip installed packages, the standard library will be there obviosuly
[01:19:34] <deniska> {HD}: the default behavior for a venv is to be isolated
[01:19:39] *** Quits: rany (~rany@user/rany) (Ping timeout: 276 seconds)
[01:19:53] <deniska> the isolation can be disabled, but it's for niche usecases
[01:19:54] *** Joins: BSaboia (~bsaboia@177.37.198.179)
[01:19:59] *** Quits: Andrynet (~Andrynet@186.46.201.139) (Ping timeout: 250 seconds)
[01:20:22] <{HD}> cool, thanks. I will give it a go. If I am using vscode can I make it automatically select the enviroment?
[01:20:28] *** Quits: rany___ (~rany@user/rany) (Client Quit)
[01:20:41] *** Joins: berton[m] (~berton@2001:470:69fc:105::ce36)
[01:20:41] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[01:20:42] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[01:21:21] <jinsun> you can choose the venv from the status bar and set a default too https://code.visualstudio.com/docs/languages/python#_environments
[01:21:28] <deniska> I vaguely remember its python plugins automatically looking for venvs in common directories people put them in/
[01:21:31] <deniska> ?
[01:21:36] *** Quits: rany_ (~rany@user/rany) (Ping timeout: 276 seconds)
[01:21:51] *** Joins: Andrynet (~Andrynet@186.46.201.139)
[01:22:13] <jinsun> yeah https://code.visualstudio.com/docs/python/environments#_where-the-extension-looks-for-environments
[01:22:24] *** Quits: theprophet (~theprophe@85.114.228.184) (Ping timeout: 256 seconds)
[01:22:51] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[01:23:06] *** Joins: fulljab (~fulljab@paloboi.student.rit.edu)
[01:23:33] *** Quits: rany__ (~rany@user/rany) (Ping timeout: 276 seconds)
[01:24:05] *** Joins: allegary (~allegary@apache/committer/gjm)
[01:25:32] <matsaman> so much automation in the python world for using virtual envs
[01:25:39] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[01:25:55] *** Joins: Macuser (~Macuser@216.30.159.201)
[01:25:58] *** Quits: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[01:25:59] <matsaman> what I mentioned is the most rudimentary utilization
[01:26:04] *** Joins: dre (~dre@2001:8003:c932:c301:c96a:e559:986b:eb26)
[01:26:37] *** Quits: skeemer__ (~skeemer@h-178-174-193-227.NA.cust.bahnhof.se) (Quit: Leaving)
[01:27:15] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[01:28:24] *** Quits: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Quit: Leaving)
[01:29:38] *** Joins: vicfred (~vicfred@user/vicfred)
[01:30:18] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[01:30:37] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:32:06] *** Joins: kevgao (~kevgao@user/kevgao)
[01:32:56] *** Joins: junebug (~junebug@2600:1700:3db0:2540:ecbf:c2cd:3478:8f5a)
[01:33:00] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[01:33:06] <phox> hm, dealing with unittest.mock (not married to it) and looking for a way to conditionally return various values, based on the provided args/kwargs/whatever... the function under test will call the mock several times and needs a different return value depending on the call args.
[01:33:09] *** Joins: dmenz (~dmenz@2804:14d:5cd4:5e94::1)
[01:33:17] *** Joins: sniperwolf (~sniperwol@91.230.98.1)
[01:33:29] <phox> is this possible and/or is there something else that might do this?  I mean I can just write a custom stub but...
[01:34:01] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:12bf:e883:5a9e:e1c0)
[01:34:41] *** Joins: stockholm (~Andreas@p200300d2c70a6100715dce9ce6870f1d.dip0.t-ipconnect.de)
[01:35:50] *** Quits: mactron (~mactron@APN-123-254-163-gprs.simobil.net) (Ping timeout: 268 seconds)
[01:37:01] *** Quits: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi) (Ping timeout: 240 seconds)
[01:38:02] *** Quits: junebug (~junebug@2600:1700:3db0:2540:ecbf:c2cd:3478:8f5a) (Ping timeout: 260 seconds)
[01:38:50] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:f584:868d:d30a:73b6) (Ping timeout: 256 seconds)
[01:39:05] *** Joins: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi)
[01:39:59] *** Quits: dmenz (~dmenz@2804:14d:5cd4:5e94::1) (Quit: Leaving)
[01:40:01] *** Joins: meatballs (~meatballs@2001:470:69fc:105::633)
[01:40:19] *** Quits: kevgao (~kevgao@user/kevgao) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:42:18] *** Quits: ccallahan|Backup (~ccallahan@redhat/ccallahan) (Remote host closed the connection)
[01:42:57] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[01:43:16] <phox> oh it looks like one can use side_effect which seems awful because it's not a side-effect...
[01:43:38] *** Quits: dre (~dre@2001:8003:c932:c301:c96a:e559:986b:eb26) (Ping timeout: 260 seconds)
[01:44:03] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[01:44:08] *** Joins: Viewday114 (~Viewday@user/viewday)
[01:44:54] *** guntbert_ is now known as guntbert
[01:45:34] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[01:45:34] *** Viewday114 is now known as Viewday11
[01:48:13] *** Joins: xsperry (~xs@user/xsperry)
[01:48:15] *** Joins: mindlesstux[m] (~mindlesst@user/mindlesstux)
[01:49:21] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[01:49:37] *** Joins: smichel17[m] (~smichel17@2001:470:69fc:105::2d32)
[01:50:34] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[01:52:04] *** Quits: mindlesstux[m] (~mindlesst@user/mindlesstux) (Write error: Connection reset by peer)
[01:52:04] *** Quits: smichel17[m] (~smichel17@2001:470:69fc:105::2d32) (Read error: Connection reset by peer)
[01:52:04] *** Quits: allegary (~allegary@apache/committer/gjm) (Remote host closed the connection)
[01:52:05] *** Quits: meatballs (~meatballs@2001:470:69fc:105::633) (Read error: Connection reset by peer)
[01:52:05] *** Quits: YakoYoku (~yakoyoku@2001:470:69fc:105::780) (Remote host closed the connection)
[01:52:05] *** Quits: berton[m] (~berton@2001:470:69fc:105::ce36) (Write error: Connection reset by peer)
[01:52:06] *** Quits: cecep[m] (~cecep@2001:470:69fc:105::3994) (Write error: Connection reset by peer)
[01:52:06] *** Quits: boris[m] (~borisruna@2001:470:69fc:105::32f3) (Write error: Connection reset by peer)
[01:52:06] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (Write error: Connection reset by peer)
[01:52:07] *** Quits: jinsun_ (~jinsun@user/jinsun) (Write error: Connection reset by peer)
[01:52:07] *** Quits: graingert[m] (~graingert@2001:470:69fc:105::653) (Write error: Connection reset by peer)
[01:52:07] *** Quits: saltrocklamp[m] (~hexology@user/hexology) (Write error: Connection reset by peer)
[01:52:07] *** Quits: canardo (~canardo@2001:470:69fc:105::e110) (Read error: Connection reset by peer)
[01:52:07] *** Quits: BrenBarn (~brenbarn@2001:470:69fc:105::2da2) (Read error: Connection reset by peer)
[01:52:07] *** Quits: pschmitt[m] (~pschmitt@2001:470:69fc:105::1:24cb) (Write error: Connection reset by peer)
[01:52:07] *** Quits: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016) (Write error: Connection reset by peer)
[01:52:07] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (Read error: Connection reset by peer)
[01:52:07] *** Quits: schemanic[m] (~schemanic@2001:470:69fc:105::1:2450) (Read error: Connection reset by peer)
[01:52:07] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Write error: Connection reset by peer)
[01:52:08] *** Quits: novasharper (~novasharp@2001:470:69fc:105::b4a) (Write error: Connection reset by peer)
[01:52:08] *** Quits: bitonic (~bitonic@2001:470:69fc:105::1812) (Write error: Connection reset by peer)
[01:52:09] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (Read error: Connection reset by peer)
[01:52:09] *** Quits: kikijiki[m] (~kikijiki@user/kikijiki) (Read error: Connection reset by peer)
[01:52:09] *** Quits: psydroid (~psydroid@user/psydroid) (Write error: Connection reset by peer)
[01:52:09] *** Quits: morguldir (~morguldir@2001:470:69fc:105::21bd) (Write error: Connection reset by peer)
[01:52:10] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Write error: Connection reset by peer)
[01:52:10] *** Quits: gloomy (~gloomy@2001:470:69fc:105::ce00) (Write error: Connection reset by peer)
[01:52:19] <magic_ninja> holy netsplit batman
[01:52:54] <sudomann_> what is netsplit
[01:52:58] <mefistofeles> more like matrix failing
[01:53:03] <mefistofeles> or the bridge, probably
[01:53:09] *** Quits: gitly (~gitly@148.252.132.30) (Ping timeout: 252 seconds)
[01:53:28] *** Joins: nomic (~nomic@185.192.69.200)
[01:53:33] *** Joins: yusraDev (~yusraDev@37.17.141.197)
[01:53:37] <mefistofeles> sudomann_: irc networks could have different servers, when servers of the same network lose connection with eachother it's called a netsplit
[01:54:08] <sudomann_> like a mesh network?
[01:54:19] <mefistofeles> I guess, in a way
[01:54:20] *** Quits: yusraDev (~yusraDev@37.17.141.197) (Client Quit)
[01:54:31] *** Joins: morguldir (~morguldir@2001:470:69fc:105::21bd)
[01:55:12] <sudomann_> So does irc have a synchronization protocol to make sure everyone/server connected is getting all lmessages coming through?
[01:55:14] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[01:55:14] *** Joins: mindlesstux[m] (~mindlesst@user/mindlesstux)
[01:55:14] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[01:55:14] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[01:55:14] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[01:55:15] *** Joins: YakoYoku (~yakoyoku@2001:470:69fc:105::780)
[01:55:17] *** Joins: gitly (~gitly@148.252.129.23)
[01:55:25] <sudomann_> or is it just best effort, and bless those who miss out on messages
[01:55:29] *** Joins: BrenBarn (~brenbarn@2001:470:69fc:105::2da2)
[01:55:29] *** Joins: kikijiki[m] (~kikijiki@user/kikijiki)
[01:55:43] *** Joins: meatballs (~meatballs@2001:470:69fc:105::633)
[01:55:43] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[01:55:44] *** Joins: psydroid (~psydroid@user/psydroid)
[01:55:44] *** Joins: novasharper (~novasharp@2001:470:69fc:105::b4a)
[01:55:44] *** Joins: neolem (~neolem@2001:470:69fc:105::c675)
[01:55:44] *** Joins: gloomy (~gloomy@2001:470:69fc:105::ce00)
[01:55:46] *** Quits: Mechanismus (~LabMonkey@206.255.106.67) (Quit: Leaving)
[01:55:58] *** Joins: canardo (~canardo@2001:470:69fc:105::e110)
[01:55:59] *** Joins: allegary (~allegary@apache/committer/gjm)
[01:55:59] *** Joins: cotsuka (~cotsuka@user/cotsuka)
[01:56:00] *** Joins: jmcantrell (~jmcantrel@user/jmcantrell)
[01:56:00] *** Joins: pschmitt[m] (~pschmitt@2001:470:69fc:105::1:24cb)
[01:56:00] *** Joins: ronny (~ronny@2001:470:69fc:105::b57)
[01:56:00] *** Joins: jinsun_ (~jinsun@user/jinsun)
[01:56:00] *** Joins: Vipulk (~vipulk@user/vipulk)
[01:56:00] *** Joins: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016)
[01:56:10] <mefistofeles> sudomann_: I don't know, you might want to ask that in #libera
[01:56:14] *** Joins: berton[m] (~berton@2001:470:69fc:105::ce36)
[01:56:14] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[01:56:14] *** Joins: schemanic[m] (~schemanic@2001:470:69fc:105::1:2450)
[01:56:14] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[01:56:14] *** Joins: boris[m] (~borisruna@2001:470:69fc:105::32f3)
[01:56:14] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[01:56:14] *** Joins: DX099 (~dx099@2001:470:69fc:105::21ce)
[01:56:29] *** Joins: cecep[m] (~cecep@2001:470:69fc:105::3994)
[01:56:29] *** Joins: smichel17[m] (~smichel17@2001:470:69fc:105::2d32)
[01:56:29] *** Joins: bitonic (~bitonic@2001:470:69fc:105::1812)
[01:56:44] *** Quits: graybeard (~graybeard@user/graybeard) (Quit: Leaving)
[01:56:46] *** Quits: darksun (~darksun@user/darksun) (Quit: bye)
[01:57:01] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 240 seconds)
[01:57:11] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 252 seconds)
[01:58:59] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[01:59:18] *** Quits: BSaboia (~bsaboia@177.37.198.179) (Quit: This computer has gone to sleep)
[01:59:37] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Read error: Connection reset by peer)
[01:59:48] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:f584:868d:d30a:73b6)
[01:59:57] *** Quits: nunggu (~q@gateway/tor-sasl/nunggu) (Ping timeout: 276 seconds)
[02:00:26] *** Quits: RasnCain (~rasncain@gw1.cox.com) (Ping timeout: 260 seconds)
[02:00:45] *** Joins: dre (~dre@60.229.45.121)
[02:00:54] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 260 seconds)
[02:01:36] *** Joins: nunggu (~q@gateway/tor-sasl/nunggu)
[02:04:19] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[02:05:36] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[02:05:52] *** Joins: vladoski (~foo@2001:b07:add:d406:bd3f:c789:2b11:5b3d)
[02:06:53] <vladoski> I'm trying to use pyenv on my macOS but I don't understand why I can't have as py2 the system one and as py3 the version that I've installed with pyenv
[02:07:16] *** Joins: blei (~blei@209.201.38.106)
[02:07:42] <blei> would it be possible to have label call label() ?
[02:07:57] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:08:26] *** Quits: Andrynet (~Andrynet@186.46.201.139) (Quit: WeeChat 3.3)
[02:08:28] *** Joins: Skier123 (~Skier123@pool-108-52-47-69.phlapa.fios.verizon.net)
[02:08:40] <Skier123> is there a web client?
[02:08:52] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[02:08:59] <Yhg1s> blei: it depends on what 'label' is, but probably not.
[02:09:26] <blei> its a function name
[02:09:29] <Yhg1s> Skier123: for what?
[02:09:31] <Yhg1s> blei: then no.
[02:09:41] <blei> but it should be possible somehow
[02:09:49] <Yhg1s> blei: it really isn't.
[02:09:50] *** Quits: sudomann_ (~sudomann@98.219.211.182) (Ping timeout: 252 seconds)
[02:10:01] <Yhg1s> blei: you may want to watch or read bit.ly/pynames1 to understand why not.
[02:10:01] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 250 seconds)
[02:10:25] <blei> but with an alias to a function name, perhaps it is possible   ie label2 calls label1()
[02:10:28] <Skier123> is there a web version of python
[02:10:29] *** Joins: Hackerpcs (~user@user/hackerpcs)
[02:10:32] <Yhg1s> blei: no.
[02:10:55] <Skier123> I've heard of tynker are there any others
[02:10:57] <Yhg1s> blei: that's just not how names work. If you reference a name, it doesn't call anything on the object. You have to *do something* with the object.
[02:11:04] <Yhg1s> Skier123: I'm not sure what 'web version' means.
[02:11:12] *** Joins: sudomann_ (~sudomann@98.219.211.182)
[02:11:23] <Skier123> no download on your web browser
[02:11:39] <blei> NameError: name 'test' is not defined   <-- this code could instead call test()
[02:11:49] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:11:50] <Yhg1s> blei: that error means there is no 'test()' to call.
[02:12:18] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[02:12:36] <grym> vladoski: i believe that you can
[02:12:46] <sudomann_> I am building python from source and seeing a lot of test_foo in the output: `load avg: 0.52 [108/416] test_dictcomps`. Is it testing the build output? Can I skip this testing?
[02:12:47] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[02:13:05] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[02:13:13] <Yhg1s> sudomann_: did you enable optimizations in the build?
[02:13:16] <blei> i should be able to use that, i don't need test to be defined, but i need something to happen when I issue test, ie, it checks a dictionary for the name
[02:13:24] *** Joins: camelCase (~camelCase@user/camelCase)
[02:13:32] <grym> vladoski: https://github.com/pyenv/pyenv/blob/master/COMMANDS.md#pyenv-global-advanced
[02:13:37] *** Quits: grooverman (~grooverma@201.91.197.26) (Read error: Connection reset by peer)
[02:13:46] *** Joins: djhankb (~djhankb@208.113.164.68)
[02:13:50] <sudomann_> Yhg1s: yes
[02:13:56] <sudomann_> oh... so thats the tradeoff
[02:14:01] <Yhg1s> blei: Python doesn't work that way. Perhaps what you actually want is to define test in the code surrounding what you're executing? Or perhaps you don't want to execute it *as Python* at all?
[02:14:21] <parv> blei, You could try perl 5 if you insist on calling a function sans parentheses
[02:14:30] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) ()
[02:14:33] <phox> > 14:25 < sudomann_> or is it just best effort, and bless those who miss out on messages
[02:14:35] <Yhg1s> sudomann_: it's the training task. It's running a bunch of tests to establish a profile, and then rebuilding Python with profile-guided optimizations enabled.
[02:14:36] <phox> this ^
[02:14:51] <jinsun> blei: you can try: test except NameError: find_test(), not sure if you wanted something like that
[02:15:00] <phox> there's no eventual consistency, it's IRC you get what you get.  the links are TCP so when things are up that works, but if things are down too bad so sad :)
[02:15:02] <blei> i should be able to use reflection to dynamically rewrite the code that issues a NameError
[02:15:22] <vladoski> grym I've tried that but if i do pyenv global system 3.10.0 doesn't work. I still have system's python3 for python3
[02:15:28] <Yhg1s> blei: You can keep saying "should", but, no, you can't, and you shouldn't be able to.
[02:15:44] <blei> it's a computer, i can do anything a turing machine can do
[02:15:51] <blei> python does not stop you
[02:15:52] <vladoski> grym of course python3.10 points to the correct one but I want to have my 3.10 on python3
[02:15:54] <sudomann_> phox: thanks for explaining!
[02:16:02] <phox> ya
[02:16:09] <Yhg1s> blei: Python does stop you. You can write your own programming language, of course. You can't make Python do it. It's not how Python works.
[02:16:22] <Widdershins> blei: can a turing machine detect the programmer's intent
[02:16:26] <blei> i can rewrite the computers memory. not sure why you are so negative about new ideas
[02:16:35] *** Quits: mindlesstux[m] (~mindlesst@user/mindlesstux) (Quit: Client limit exceeded: 20000)
[02:16:42] *** Quits: neolem (~neolem@2001:470:69fc:105::c675) (Quit: Client limit exceeded: 20000)
[02:16:49] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (Quit: Client limit exceeded: 20000)
[02:16:49] *** Quits: Vipulk (~vipulk@user/vipulk) (Quit: Client limit exceeded: 20000)
[02:16:51] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 265 seconds)
[02:16:53] <Yhg1s> blei: if you want to explore a new idea, go ahead. You asked this in #python, about Python. Python doesn't let you do this.
[02:16:55] *** Joins: mindlesstux[m] (~mindlesst@user/mindlesstux)
[02:16:57] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Quit: Client limit exceeded: 20000)
[02:17:09] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[02:17:12] *** Quits: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016) (Quit: Client limit exceeded: 20000)
[02:17:12] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Quit: Client limit exceeded: 20000)
[02:17:14] *** Joins: Vipulk (~vipulk@user/vipulk)
[02:17:15] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Client limit exceeded: 20000)
[02:17:16] *** Quits: allegary (~allegary@apache/committer/gjm) (Quit: Client limit exceeded: 20000)
[02:17:18] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[02:17:20] <blei> i'm not sure where you unlearned about python, but python allows you to call C code, therefore, I can literally do anything the computer can do from python
[02:17:22] *** Joins: neolem (~neolem@2001:470:69fc:105::c675)
[02:17:26] *** Quits: graingert[m] (~graingert@2001:470:69fc:105::653) (Quit: Client limit exceeded: 20000)
[02:17:35] <blei> that includes calling a name as a function without parens being provided
[02:17:36] *** Joins: allegary (~allegary@apache/committer/gjm)
[02:17:45] <blei> the question was, what is the best way to go about this
[02:17:46] <Yhg1s> blei: good luck with that.
[02:17:47] <sudomann_> Yhg1s: in other words, it not a strong guarantee that i will reap the 10-20% performance gains (as I read on SO) if I build python in a docker image on one machine, but run the image on another (not the same hardware)
[02:17:49] *** Quits: novasharper (~novasharp@2001:470:69fc:105::b4a) (Quit: Client limit exceeded: 20000)
[02:17:50] *** Joins: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016)
[02:17:51] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[02:17:52] *** Quits: saltrocklamp[m] (~hexology@user/hexology) (Quit: Client limit exceeded: 20000)
[02:17:52] *** Quits: cotsuka (~cotsuka@user/cotsuka) (Quit: Client limit exceeded: 20000)
[02:17:54] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[02:17:57] <blei> so you admit you were wrong
[02:18:01] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Quit: Client limit exceeded: 20000)
[02:18:03] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[02:18:04] <blei> many times in a row
[02:18:04] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[02:18:04] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[02:18:05] *** Joins: novasharper (~novasharp@2001:470:69fc:105::b4a)
[02:18:06] *** Quits: morguldir (~morguldir@2001:470:69fc:105::21bd) (Quit: Client limit exceeded: 20000)
[02:18:08] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (Quit: Client limit exceeded: 20000)
[02:18:14] *** Quits: DX099 (~dx099@2001:470:69fc:105::21ce) (Quit: Client limit exceeded: 20000)
[02:18:18] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[02:18:18] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[02:18:20] *** Joins: cotsuka (~cotsuka@user/cotsuka)
[02:18:21] *** ChanServ sets mode: +o Yhg1s
[02:18:26] *** Yhg1s sets mode: +b *!*blei@209.201.38.*
[02:18:26] *** blei was kicked by Yhg1s (go troll somewhere else.)
[02:18:27] *** Quits: schemanic[m] (~schemanic@2001:470:69fc:105::1:2450) (Quit: Client limit exceeded: 20000)
[02:18:29] *** Yhg1s sets mode: -o Yhg1s
[02:18:30] *** Quits: bitonic (~bitonic@2001:470:69fc:105::1812) (Quit: Client limit exceeded: 20000)
[02:18:32] *** Joins: DX099 (~dx099@2001:470:69fc:105::21ce)
[02:18:33] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[02:18:37] <sudomann_> uhh havent been following this other conversation but what the hell was that
[02:18:39] *** Joins: morguldir (~morguldir@2001:470:69fc:105::21bd)
[02:18:40] *** Quits: smichel17[m] (~smichel17@2001:470:69fc:105::2d32) (Quit: Client limit exceeded: 20000)
[02:18:47] *** Joins: bitonic (~bitonic@2001:470:69fc:105::1812)
[02:18:48] *** Joins: schemanic[m] (~schemanic@2001:470:69fc:105::1:2450)
[02:18:52] *** Joins: Andrynet (~Andrynet@186.46.201.139)
[02:18:58] *** Quits: kikijiki[m] (~kikijiki@user/kikijiki) (Quit: Client limit exceeded: 20000)
[02:18:58] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (Quit: Client limit exceeded: 20000)
[02:19:01] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.3)
[02:19:03] *** Quits: boris[m] (~borisruna@2001:470:69fc:105::32f3) (Quit: Client limit exceeded: 20000)
[02:19:04] *** Joins: smichel17[m] (~smichel17@2001:470:69fc:105::2d32)
[02:19:12] *** Quits: sandb0y (~pirate@user/sandb0y) (Quit: Time for another great escape)
[02:19:19] <Yhg1s> sudomann_: well, if the machines are not entirely different architectures, it's very likely to be fine. The majority of the speedup comes from optimising the bytecode evaluator, which doesn't really change between architectures.
[02:19:24] <phox> they mentioned C, maybe they should go try to troll ##c ;D
[02:19:28] *** Joins: BSaboia (~bsaboia@177.37.198.179)
[02:19:30] *** Quits: ronny (~ronny@2001:470:69fc:105::b57) (Quit: Client limit exceeded: 20000)
[02:19:39] <phox> as you troll into the abyss, ...
[02:19:40] *** Joins: kikijiki[m] (~kikijiki@user/kikijiki)
[02:19:41] *** Joins: jmcantrell (~jmcantrel@user/jmcantrell)
[02:19:48] *** Quits: gloomy (~gloomy@2001:470:69fc:105::ce00) (Quit: Client limit exceeded: 20000)
[02:19:48] <phox> possibly 'unto'
[02:19:55] *** Joins: ronny (~ronny@2001:470:69fc:105::b57)
[02:19:55] *** Joins: boris[m] (~borisruna@2001:470:69fc:105::32f3)
[02:19:56] *** Quits: jinsun_ (~jinsun@user/jinsun) (Quit: Client limit exceeded: 20000)
[02:20:03] *** Joins: gloomy (~gloomy@2001:470:69fc:105::ce00)
[02:20:13] *** Joins: jinsun_ (~jinsun@user/jinsun)
[02:20:51] *** Quits: BrenBarn (~brenbarn@2001:470:69fc:105::2da2) (Quit: Client limit exceeded: 20000)
[02:21:00] <phox> ugh I thought unittest.mock autospecing was recursive (says it is) but it's not, it dgaf about call signatures for members of the thing being used as the spec >:|
[02:21:15] *** Joins: BrenBarn (~brenbarn@2001:470:69fc:105::2da2)
[02:21:24] *** Joins: slav0nic (slav0nic@python.su)
[02:21:52] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Remote host closed the connection)
[02:22:46] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:3c2f:545c:4b4f:aa56) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:23:45] *** Quits: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053) (Quit: WeeChat 3.3)
[02:23:46] *** Quits: Andrynet (~Andrynet@186.46.201.139) (Ping timeout: 260 seconds)
[02:24:37] *** Quits: esv (~esv@74.124.178.154) (Ping timeout: 240 seconds)
[02:25:14] *** Joins: Andrynet (~Andrynet@186.46.201.139)
[02:25:24] *** Quits: stockholm (~Andreas@p200300d2c70a6100715dce9ce6870f1d.dip0.t-ipconnect.de) (Quit: Leaving)
[02:27:25] *** Quits: KombuchaKip (~kip@192.252.230.5) (Ping timeout: 240 seconds)
[02:28:26] *** Joins: RasnCain_ (~rasncain@ip174-73-119-77.br.br.cox.net)
[02:29:07] <Skier123> is there a web version of python no download?
[02:29:36] *** Joins: noria (~noria@2a01:e34:ee29:2640:1e1b:dff:fe6e:a27d)
[02:29:51] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[02:29:58] <summonner> to run python code online? yeah there are lots out there
[02:29:59] <Yhg1s> Skier123: what do you mean by a 'web version'?
[02:30:07] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[02:30:41] *** Quits: Skier123 (~Skier123@pool-108-52-47-69.phlapa.fios.verizon.net) (Remote host closed the connection)
[02:31:12] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:31:26] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[02:31:51] <vladoski> so there's no way to set system as py2 and another version on py3 on macOS with pyenv?
[02:31:55] <CrtxReavr> skreech1, try repl.it
[02:32:05] *** Joins: Atque (~Atque@user/atque)
[02:32:08] <CrtxReavr> whoops
[02:32:57] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[02:33:26] <summonner> vladoski, look into direnv in combination with pyenv. You can have different python versions for different folders
[02:33:29] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[02:33:30] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Client Quit)
[02:33:44] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[02:33:47] *** Joins: aivkiv (~aivkiv@server2.kivilius.com)
[02:34:33] <vladoski> summonner I don't need that. I just wanna set globally system for python2 and the latest version for python3
[02:34:41] <vladoski> wth python2 for python
[02:35:02] *** Quits: pyfisch (~pyfisch@user/pyfisch) (Quit: Ping timeout (120 seconds))
[02:35:33] *** Joins: pyfisch (~pyfisch@user/pyfisch)
[02:35:44] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[02:36:11] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 265 seconds)
[02:36:24] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[02:37:01] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 240 seconds)
[02:37:44] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[02:37:49] *** Joins: Mechanismus (~LabMonkey@206.255.106.67)
[02:38:15] *** Quits: emf (~emf@2620:10d:c091:480::1:58ea) (Ping timeout: 252 seconds)
[02:38:55] *** Quits: RasnCain_ (~rasncain@ip174-73-119-77.br.br.cox.net) (Remote host closed the connection)
[02:39:16] *** Joins: KombuchaKip (~kip@192.252.230.5)
[02:39:16] *** Joins: RasnCain (~rasncain@ip174-73-119-77.br.br.cox.net)
[02:40:06] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 260 seconds)
[02:40:32] *** Joins: kevgao (~kevgao@user/kevgao)
[02:41:27] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:42:55] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[02:43:50] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[02:43:53] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[02:45:13] <aphysically> nedbat: do I have to go to coder jail for mutating the basin_points list while iterating over it :( https://bpa.st/5OTA
[02:45:42] *** Joins: fikran (~fikran@user/fikran)
[02:45:49] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 240 seconds)
[02:47:14] *** Joins: tmus (~tmus@host-88-83-8-125.adsl.gl)
[02:48:01] *** Quits: meatballs (~meatballs@2001:470:69fc:105::633) (Quit: Client limit exceeded: 20000)
[02:48:04] *** Quits: BSaboia (~bsaboia@177.37.198.179) (Quit: This computer has gone to sleep)
[02:50:09] *** Joins: junebug (~junebug@2600:1700:3db0:2540:97fa:82bd:d9cd:d744)
[02:51:11] *** Quits: sniperwolf (~sniperwol@91.230.98.1) (Quit: Client closed)
[02:53:55] *** Quits: nyah (~nyah@94.6.71.219) (Remote host closed the connection)
[02:54:00] *** Joins: vimart (~vimart@109.249.179.140)
[02:55:31] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[02:55:49] *** Joins: nyah (~nyah@94.6.71.219)
[02:56:03] *** Quits: fikran (~fikran@user/fikran) (Quit: WeeChat 3.0.1)
[02:56:45] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[02:57:06] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[02:58:01] *** Quits: pschmitt[m] (~pschmitt@2001:470:69fc:105::1:24cb) (Quit: Client limit exceeded: 20000)
[02:58:15] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:59:08] *** jarthur_ is now known as jarthur
[02:59:46] *** Joins: cliluw (~cliluw@47.147.73.223)
[02:59:55] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Remote host closed the connection)
[03:00:13] *** Quits: remolej (~kenoba@user/kenoba) (Ping timeout: 240 seconds)
[03:01:16] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-c014-8934-c8a1-0049.res6.spectrum.com) (Read error: Connection reset by peer)
[03:01:49] *** Quits: junebug (~junebug@2600:1700:3db0:2540:97fa:82bd:d9cd:d744) (Ping timeout: 250 seconds)
[03:01:59] <nedbat> aphysically: it's a mandatory three-month sentence, I'm sorry, it's out of my hands...
[03:02:09] <aphysically> :(
[03:02:15] *** Joins: meatballs (~meatballs@2001:470:69fc:105::633)
[03:02:15] *** Joins: pschmitt[m] (~pschmitt@2001:470:69fc:105::1:24cb)
[03:03:27] *** Quits: jfcaron (~jfcaron@192.252.229.166) (Read error: Connection reset by peer)
[03:03:45] *** Joins: remolej (~kenoba@user/kenoba)
[03:05:19] *** Joins: junebug (~junebug@2600:1700:3db0:2540:fcfc:df77:1c90:5bc2)
[03:05:30] *** Joins: jfcaron (~jfcaron@192.252.229.166)
[03:05:59] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: Leaving)
[03:06:29] *** Quits: JanC (~janc@user/janc) (Ping timeout: 252 seconds)
[03:07:02] *** Joins: c4017w_ (~c4017@209.52.68.8)
[03:07:43] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:09:39] *** Joins: matsaman (~matsaman@user/matsaman)
[03:10:09] *** Quits: junebug (~junebug@2600:1700:3db0:2540:fcfc:df77:1c90:5bc2) (Ping timeout: 252 seconds)
[03:10:59] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 265 seconds)
[03:11:02] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:11:08] *** Joins: waynew (~wayne@user/waynew)
[03:13:49] *** Quits: srilyk (~wayne@user/waynew) (Ping timeout: 252 seconds)
[03:14:59] *** Joins: JanC (~janc@user/janc)
[03:15:11] *** Quits: ExpiredKebab (~sgreadly@2407:7000:a239:503:edec:ade6:eb5f:98e4) (Quit: Textual IRC Client: www.textualapp.com)
[03:15:38] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:16:13] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[03:16:15] *** Quits: noria (~noria@2a01:e34:ee29:2640:1e1b:dff:fe6e:a27d) (Quit: Leaving)
[03:17:10] <{HD}> anyone on mac that can help with PYTHONPATH? I am trying to install a utility https://github.com/yaqwsx/KiKit/blob/master/doc/installation.md and one of the steps is to set the PYTHONPATH to where pcbnew.py is located. Well I know pcbnew.py is @ `/Applications/KiCad/KiCad.app/Contents/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/pcbnew.py` but when I export PYTHONPATH= to that and then echo $PYTHONPATH it is just blank...
[03:17:43] *** Joins: chatcat_ (~chatcat@ip-24-53-119-61.user.start.ca)
[03:17:44] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[03:17:58] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[03:18:06] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[03:18:21] *** Joins: remolej5 (~kenoba@user/kenoba)
[03:18:37] <nedbat> {HD}: seems odd to require changing PYTHONPATH, but the trouble you are having seems like a shell issue.
[03:19:19] <Saxtheowl> do you know why channel.send('k') doesnt seem to be executed in the loop
[03:19:21] *** Quits: remolej (~kenoba@user/kenoba) (Ping timeout: 250 seconds)
[03:19:22] *** remolej5 is now known as remolej
[03:19:22] <{HD}> nedbat: I guess it does seem odd but I think pcbnew.py is a special enviroment that kikit needs access too...
[03:19:28] <Saxtheowl> while 1: channel.send('h') time.sleep(1) channel.send('k') time.sleep(1)
[03:19:29] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:e9a5:f347:4833:9d3b)
[03:19:34] <{HD}> I am running fish so maybe I should switch back to zsh or bash...
[03:20:10] *** Quits: chatcat (~chatcat@ip-24-53-119-61.user.start.ca) (Ping timeout: 265 seconds)
[03:20:10] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[03:20:16] <nedbat> Saxtheowl: you'll have to link to the real code
[03:20:32] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Client Quit)
[03:21:51] <rapha> hi all
[03:22:08] <Saxtheowl> here is my code: https://bpa.st/YRGQ
[03:22:10] <xMopx> what changed in iTerm recently that causes errors like "SyntaxError: multiple statements found while compiling a single statement" when pasting multiple lines into an interactive python interpretor?
[03:22:31] <nedbat> Saxtheowl: why do you say the send-k isn't in the loop?
[03:23:02] <han-`> {HD} https://stackoverflow.com/questions/24308310/how-can-i-set-pythonpath-in-fish
[03:23:17] <han-`> first result in google for "pythonpath fish"
[03:23:17] <Saxtheowl> "k" is never entered
[03:23:20] <Saxtheowl> only "l"
[03:23:35] <nedbat> Saxtheowl: is "l" repeated?
[03:23:44] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:e9a5:f347:4833:9d3b) (Client Quit)
[03:23:51] <nedbat> sorry, "h"
[03:24:09] <Saxtheowl> only "h" is entered yes
[03:24:14] <rapha> is "binning" the same as "smoothing" or "downsampling"? or is it something different?
[03:24:22] <{HD}> han-`: I did exactly that and it never echo'ed back...anyway I switched to bash and now I have a different error.
[03:24:28] <nedbat> Saxtheowl: 1) is "h" repeated, or just once? 2) can youlink us to the full actual program?
[03:24:34] *** Quits: netvor (~amahdal@2a00:ca8:a1f:cd0:b270:f57c:d443:92a1) (Quit: WeeChat 3.3)
[03:25:44] <KirkMcDonald> rapha: Might depend on context, but I would expect that it refers to dividing a set of data into "bins," divided either evenly or logarithmically.
[03:26:18] <KirkMcDonald> (Of course, "binning" can also refer to throwing something away.)
[03:26:31] *** Quits: zodd (~zodd@84-106-80-107.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[03:26:56] <Saxtheowl> I found another solution, thanks
[03:27:58] <braxas> Python must go faster!!!
[03:28:24] <{HD}> any mac users know what `libwx_osx_cocoau_gl-3.1.5.dylib` is? https://dpaste.com/2XTRYRH2X
[03:28:25] * magic_ninja furiously beats the python
[03:28:28] <magic_ninja> faster
[03:28:39] * braxas also beats it for effect
[03:28:50] <braxas> Python is really very awesome, just a pity it is not faster at it
[03:28:54] <nedbat> braxas: python is getting faster
[03:29:02] *** Joins: stonkey (~stonkey@user/stonkey)
[03:29:04] <braxas> That is true
[03:29:10] <rapha> KirkMcDonald: looking at wikipedia (https://en.wikipedia.org/wiki/Data_binning) it seems to be a technical term, but i don't understand much there. it's also marked as needing attention by an expert.
[03:29:18] <magic_ninja> I'm just starting to learn it. It seems like you can write code really quickly with it.
[03:29:39] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[03:29:45] <braxas> well it is a lot less boiler plate than golang that is for sure :D
[03:30:11] *** Quits: tmus (~tmus@host-88-83-8-125.adsl.gl) (Ping timeout: 250 seconds)
[03:30:28] <braxas> and with mypy safer than most languages
[03:31:40] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[03:31:49] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:cf38:164b:b62a:19d1) (Ping timeout: 240 seconds)
[03:32:21] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[03:32:40] <braxas> I actually wonder, if python was just compiled with optimizations, will it make lots of difference, compare to say stock python 3.10 on fedora
[03:32:57] <nedbat> braxas: isn't the stock Python compiled with optimizations?
[03:33:33] <braxas> nedbat: I meant more gentoo ricer style optimizations :D
[03:33:40] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[03:33:57] <Yhg1s> what are those?
[03:34:28] <SnoopJ> generally things that apply across an entire distribution of software
[03:34:45] <Yhg1s> It's unlikely to make much difference beyond the PGO build, then.
[03:34:59] <Yhg1s> couple %, perhaps. It's hard to say, there's a lot of noise in benchmarks.
[03:35:01] *** Quits: hexnewbie (~hexnewbie@user/hexnewbie) (Ping timeout: 240 seconds)
[03:35:13] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[03:35:24] <braxas> like using features/instructions that are only in newer cpus, say from the past 2 years, and are not used in general purpose distributions
[03:36:17] <braxas> of course CPython would have to be written to take advantage of them, but I suspect you are right, couple % if that even
[03:36:23] <Yhg1s> Python's C code is really very simple, you don't get any benefit from the newer instructions. Specific workloads might, if they involved C extensions or libraries that happened to do exactly what those instructions do.
[03:37:00] *** Joins: dohtem (uid524096@user/dohtem)
[03:37:11] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[03:37:32] *** Quits: Andrynet (~Andrynet@186.46.201.139) (Ping timeout: 240 seconds)
[03:38:21] *** Joins: noria (~noria@gateway/tor-sasl/noria)
[03:38:29] <SnoopJ> there's always PyPy, though :)
[03:39:42] *** Joins: Andrynet (~Andrynet@186.46.201.139)
[03:40:36] <nedbat> i have a weird bug that appeared in 3.11.0a3, but I don't know if it's a CPython bug or a tox/virtualenv bug?
[03:41:53] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[03:42:26] <stewie925> to the master pythonistas - do you guys prefer requests over urllib, right?
[03:43:02] <axisys> need to find a proper way to fail it.. return True if subprocess.call(['/usr/sbin/foo', -s]) == 0 else False ..
[03:43:11] *** Quits: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be) (Ping timeout: 250 seconds)
[03:43:29] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[03:43:38] <axisys> I want to check it in two places and then fail .. so it could be /usr/sbin/foo or /usr/bin/foo
[03:44:03] <axisys> if it is not in either place only then fail
[03:44:49] <nedbat> stewie925: yes, requests is very convenient
[03:45:07] <stewie925> thank you nedbat!
[03:45:46] <stewie925> nedbat - I do agree as well :)
[03:48:44] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[03:49:23] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[03:49:39] *** Quits: vladoski (~foo@2001:b07:add:d406:bd3f:c789:2b11:5b3d) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:50:10] *** Joins: grandrew (~grandrew@2600:1700:42f3:9180:f22f:74ff:feac:90a3)
[03:50:58] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[03:51:08] *** Joins: Wulf (~Wulf@user/wulf)
[03:51:17] *** Quits: palasso (~palasso@user/palasso) (Quit: I am not a quitter!)
[03:51:32] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[03:52:25] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:f584:868d:d30a:73b6) (Quit: Client closed)
[03:53:11] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[03:53:15] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.3)
[03:54:34] *** Quits: nadio (ice@starlight.iextreme.org) (Quit: leaving)
[03:54:45] <nedbat> https://bugs.python.org/issue46028
[03:54:55] *** Quits: stonkey (~stonkey@user/stonkey) (Quit: Leaving)
[03:55:25] *** Quits: grimvar (~grimvar@i5C75F6EB.versanet.de) (Ping timeout: 240 seconds)
[03:56:02] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[03:57:22] <axisys> I wonder if this is valid syntax? True if subprocess.call(['/usr/bin/env','foo','-s']) == 0 else False
[03:57:33] *** Joins: grimvar (~grimvar@i5C75F7AB.versanet.de)
[03:57:39] *** Quits: SuperLag (~akulbe@user/superlag) (Ping timeout: 256 seconds)
[03:57:40] <axisys> this way I do not have to hardcode the path and have the system find it
[03:57:51] <nedbat> axisys: instead of `True if xyz == 0 else False`, you can simply use `xyz == 0`
[03:58:22] *** Quits: canardo (~canardo@2001:470:69fc:105::e110) (Quit: Client limit exceeded: 20000)
[03:58:28] *** Quits: kevgao (~kevgao@user/kevgao) (Quit: Textual IRC Client: www.textualapp.com)
[03:58:43] <axisys> nedbat: so just return xyz == 0 ... yep simpler
[03:58:57] *** Joins: canardo (~canardo@2001:470:69fc:105::e110)
[03:59:35] <axisys> so for my case would be return subprocess.call(['/usr/bin/env','foo','-s']) == 0
[03:59:44] <nedbat> axisys: yes
[04:00:01] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[04:00:02] <axisys> so skipping the logic where I wanted to look for it hardcoded paths
[04:00:23] *** Joins: beli6147 (~Thunderbi@174.128.60.162)
[04:00:25] <axisys> nedbat: thanks
[04:00:50] *** Quits: Andrynet (~Andrynet@186.46.201.139) (Ping timeout: 260 seconds)
[04:02:33] *** Joins: Andrynet (~Andrynet@186.46.201.139)
[04:06:10] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[04:07:32] *** Quits: davor (~davor@user/davor) (Ping timeout: 265 seconds)
[04:07:32] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 268 seconds)
[04:07:53] *** Quits: beli6147 (~Thunderbi@174.128.60.162) (Quit: beli6147)
[04:08:02] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Remote host closed the connection)
[04:09:01] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Ping timeout: 240 seconds)
[04:09:14] *** Quits: Andrynet (~Andrynet@186.46.201.139) (Ping timeout: 260 seconds)
[04:10:57] <Helenah> I'm getting data using the socket library, the data is many lines ending with \r\n, how do I put each line into a list?
[04:10:58] *** Joins: Andrynet (~Andrynet@186.46.201.139)
[04:11:00] *** Joins: mags (~mags@097-090-237-145.res.spectrum.com)
[04:11:00] *** Quits: mags (~mags@097-090-237-145.res.spectrum.com) (Client Quit)
[04:11:07] *** Quits: oz4ga (~tim@hator.sunsite.lv) (Quit: ZNC 1.8.2 - https://znc.in)
[04:11:09] <nedbat> Helenah: data.splitlines()
[04:11:09] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 250 seconds)
[04:11:09] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[04:11:15] <Helenah> Thanks. :)
[04:11:34] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[04:12:04] *** Quits: RasnCain (~rasncain@ip174-73-119-77.br.br.cox.net) (Remote host closed the connection)
[04:12:44] <grandrew> is there a way to monkey-patch python program to use decimal instead of float and do rounded calculations?
[04:13:13] <Peng> No
[04:13:52] <grandrew> thanks.. :)
[04:14:19] <InPhase> grandrew: You are aware of the Decimal library?
[04:15:08] <grandrew> yes, I just wanted to know if there is a natural way of making .1 + .1 + .1 == .3 to work
[04:15:32] <grandrew> like, "user"-friendly way
[04:15:47] <InPhase> grandrew: But be advised it does not solve all the problems people think it should solve.  Decimals are not more accurate than binary except for the edge case that decimal fractions represent divisions by powers of 5 accurately.  All the other division primes other than 2 and 5 are still approximated in decimal representation.
[04:15:47] *** Quits: Andrynet (~Andrynet@186.46.201.139) (Ping timeout: 252 seconds)
[04:15:56] *** Joins: brabrax (~brabrax@user/brabrax)
[04:16:17] <phox> running into this a lot in unittest docs, what the heck is call() and what's in it?  doesn't seem to be imported in any of the examples
[04:16:30] <phox> (also a giant pita to google for for obvious raisins)
[04:16:54] <grym> grandrew: use a symbolic package that doesn't use floats.
[04:17:20] *** Joins: Andrynet (~Andrynet@186.46.201.139)
[04:17:23] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:f584:868d:d30a:73b6)
[04:17:40] *** Joins: davor (~davor@user/davor)
[04:17:50] <phox> oh derp, unittest.mock.call
[04:17:56] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[04:18:19] *** Joins: beli6147 (~Thunderbi@174.128.60.162)
[04:18:26] <InPhase> grandrew: If you want to experience what I mean, run:  Decimal('1')/Decimal('3')*Decimal('3')
[04:19:29] <InPhase> grandrew: This is a fundamental mathematical limitation of finite representation of values in the set of reals which you cannot escape.  Fraction libraries avoid this problem but at the cost of fraction sizes growing potentially infinite in size.
[04:19:33] <grandrew> yeah, I wanted something "where the hell is my Excel?"-friendly way..
[04:19:58] <InPhase> grandrew: You can simply round answers to desired precision and you get the desired effect.
[04:20:27] <InPhase> round(0.1+0.1+0.1, 10)
[04:20:33] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 252 seconds)
[04:20:47] <KirkMcDonald> Sort of.
[04:20:47] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[04:20:54] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 260 seconds)
[04:21:39] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[04:21:39] <grandrew> I was wondering if theres a way to "just fix the damn thing" without any disturbing trickery...
[04:21:58] <InPhase> No, because it's not actually broken.  It's fundamental to math.  :)
[04:22:00] <grym> let's go with 'no'
[04:22:30] <InPhase> grandrew: But you are not the first person to look for this, and you will not be the last.  Almost everyone seems to go through this desire until they see its intrinsic nature.
[04:22:35] <KirkMcDonald> It's important to stress that the result of `round(0.1+0.1+0.1, 10)` still isn't actually 0.3.
[04:22:51] <KirkMcDonald> It's just closer to 0.3 than 0.1+0.1+0.1 is.
[04:23:22] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca) (Quit: Client closed)
[04:23:23] <grym> InPhase: including scary people with proofs named after them
[04:23:39] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:23:51] <grandrew> I'm disappointed with this world.
[04:24:01] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca)
[04:24:06] <KirkMcDonald> Floats are a whole thing.
[04:24:06] <grym> it's ok, it'd be true in any other world too
[04:24:10] *** Quits: HawkPrime (~hawkprime@c-98-234-254-103.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[04:24:21] *** Joins: brabrax (~brabrax@user/brabrax)
[04:24:26] <InPhase> grym: Yeah.  :)  I do mean almost everyone.  People have either gone through this, or they haven't thought deeply enough about it.  I spent a looong stretch of time looking for loopholes to solve this.
[04:24:27] * grandrew started looking for a way to phase away to alternative universe
[04:24:52] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Quit: leaving)
[04:25:05] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[04:25:15] <KirkMcDonald> Ultimately, some radixes just have factors in them that aren't 2.
[04:25:33] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 276 seconds)
[04:25:47] <grym> grandrew: it'd be true there, as well
[04:25:58] <grandrew> damn.
[04:26:01] *** Joins: CombatVet (~c4@user/combatvet)
[04:26:08] <grym> that's the way the cookie crumbles
[04:26:16] <grandrew> okay I think I have a solution
[04:26:20] <InPhase> grym: Always in halves.
[04:26:47] <bjs> grandrew: Excel has floats too,  everything has floats
[04:26:54] <grandrew> let's assume the result of the calculation is non-determined until we look at the reports and choose the financial statement that works best?
[04:27:05] <InPhase> bjs: Excel sometimes hides this though to make people feel better.
[04:27:09] <bjs> exact arithmetic is really hard and very inefficient
[04:27:48] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[04:27:52] <bjs> InPhase: fun fact about Excel is that it does calculations in floats, and then sometimes decides to truncate it before writing the value to the cell to appear nice
[04:28:25] <InPhase> bjs: I would say exact arithmetic ranges from easy edge case, through hard and inefficient, up to impossible.  It depends on the calculation.
[04:28:29] <bjs> which means your entire sheet slowly builds up bigger and bigger errors
[04:28:37] <bjs> InPhase: yes
[04:29:18] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[04:29:26] <InPhase> bjs: Fun Excel fact:  It's not good at numerical work.  ;)
[04:29:30] <grym> bjs: and sometimes you also name genes in ways that look like dates, and excel helps you expand those too
[04:29:40] <bjs> InPhase: it is not,  it's for displaying data only not for doing calculations :P
[04:29:47] <InPhase> grym: Or bioinformatics...
[04:29:58] <bjs> grym: yes I heard about that
[04:30:09] <grym> it keeps happening, too :(
[04:30:32] <bjs> grym: it's a very sad story
[04:32:09] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[04:32:10] <grym> equal parts sad and teeth-grinding
[04:32:45] *** Quits: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com) (Remote host closed the connection)
[04:32:52] *** Joins: Terexen (~terexen@user/terexen)
[04:33:28] <grandrew> this somehow works in Wolfram...
[04:33:47] *** Joins: fikran (~fikran@user/fikran)
[04:34:12] <bjs> grandrew: floats are used because they're fast and efficient and work over a very large scale -- to do that they give up precision, after all they're a fixed 64-bit value but that's a finite number
[04:34:32] *** Joins: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com)
[04:34:50] <bjs> You can do exact real arithmetic and symbolic things (e.g. look at sympy) and wolframalpha probably does a mix (it is based on Mathematica after all)
[04:36:15] <grandrew> can I make it both reasonably fast and reasonably accurate?
[04:36:19] <bjs> There is also the Python `decimals` library that can exactly represent decimal numbers
[04:36:42] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[04:37:03] <grandrew> reasonably fast / reasonably accurate / reasonably intuitive
[04:37:07] <bjs> grandrew: floats are reasonably accurate, up to a point.  If you want something that's exact use integers or some library with exact representations of the sets of numbers you're doing
[04:37:38] *** Quits: imp (~imp@192-141-191-232.alternativaip.net.br) (Quit: imp)
[04:37:55] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[04:38:06] <bjs> grandrew: there's no way to change how floats work, or to make Python give you something other than a float when you type them into the program
[04:38:28] *** Quits: flokuehn (~flokuehn@87.123.247.70) (Ping timeout: 265 seconds)
[04:38:50] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[04:39:00] *** Quits: akk (~akk@75.161.146.115) (Quit: +++)
[04:39:11] <InPhase> grandrew: Many times the simplest solution is to choose a different unit.  e.g., do addition and subtraction on cents instead of dollars, and your cents always come out right.
[04:39:31] *** Joins: RasnCain_ (~rasncain@ip174-73-119-77.br.br.cox.net)
[04:40:16] *** Joins: flokuehn (~flokuehn@87.123.247.46)
[04:40:41] <grandrew> there still going to be an issue if I calculate "per unit" value and then try to use that number
[04:40:47] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:40:50] <InPhase> 0.1+0.1+0.1 might mess up in the 15th of a cent place, but 10+10+10 sure doesn't.
[04:40:56] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[04:41:10] <bjs> grandrew: use in what sense?
[04:41:18] <InPhase> grandrew: Yes, but you know at that point you want to round.
[04:41:43] <InPhase> grandrew: Like, applying a tax percentage?  You immediately round (or ceil or floor).
[04:42:30] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[04:42:46] <grandrew> bjs, in a sense that I calculated a cost of unit on a reasonably sized batch of sku, then used that value for a smaller batch and got incorrect report on units sold
[04:43:22] <grandrew> or maybe other way around
[04:43:55] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[04:44:41] <grandrew> in any case all that stuff is unreasonably complicated. It looks that I should better remove the ability to divide numbers
[04:45:09] *** Quits: vimart (~vimart@109.249.179.140) (Ping timeout: 250 seconds)
[04:45:46] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.3)
[04:47:09] <grandrew> alternatively, I can do correct grounding of math operations and then run fast arithmetic on a finite space
[04:49:49] <grandrew> is there anything I could read about this? I understand one can do exact division but what about trigonometric functions? Is it better to leave that non-deterministic or there is a reasonable way to do exact?
[04:50:57] *** Quits: w\W (~code@2a02:8084:20e2:da80:98c9:dc7f:d8dc:6b9c) (Quit: Leaving...)
[04:52:00] *** Joins: paprika (~pepper@user/pepper)
[04:52:59] *** Quits: pepper (~pepper@user/pepper) (Killed (NickServ (GHOST command used by paprika)))
[04:53:07] *** paprika is now known as pepper
[04:53:35] <bjs> grandrew: you're very quickly approaching "very difficult"; either you do things symbolically (never actually compute the values) or some representation of the recursive reals that gives you arbitrarly close approximations
[04:54:15] *** Quits: Andrynet (~Andrynet@186.46.201.139) (Ping timeout: 250 seconds)
[04:54:53] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: The Lounge - https://thelounge.chat)
[04:56:16] *** Joins: Andrynet (~Andrynet@186.46.201.139)
[04:56:25] *** Quits: sudomann_ (~sudomann@98.219.211.182) (Ping timeout: 250 seconds)
[04:59:13] <grandrew> I'm wondering how "arbitrarily" and "exact" relate to "reasonable". Like a unit value should give a full unit when possible, 360 x 1-deg pulses should to a full robotic arm rotation, etc..
[04:59:42] <bjs> grandrew: who draws the line at where "reasonable" is
[04:59:48] *** Joins: lotsofpizza (~lotsofpiz@2601:1c0:8781:2bf0:5dec:80f3:6dad:5d19)
[04:59:55] <bjs> and how can you bound it? you really can't
[05:00:16] <bjs> that's just the problem with math, that any non-0 error can compound to be as big as you want
[05:02:00] <grandrew> I could "mark" some values as describing some physical property, like position or dollars of smth, and let the machine play around that - reasonable is actually easy to define and bound
[05:02:15] <bjs> grandrew: well if you just mean,  use integers, then yes
[05:02:37] <bjs> so long as you don't use division :)
[05:02:59] *** Joins: pcc (~pcc@c-76-119-123-170.hsd1.vt.comcast.net)
[05:03:43] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:12bf:e883:5a9e:e1c0) (Quit: Konversation terminated!)
[05:04:18] <grandrew> I mean, "w" is a rotational position of a shaft. "S" is dollars that my machine creates. There aren't that many things that should be reasonable without wild theory about infinite spaces
[05:04:29] *** Joins: akoana (~ah@user/akoana)
[05:05:02] <bjs> grandrew: well the solution for dollars is to just store an integer number of cents
[05:05:17] <grandrew> I just can't believe the world is that complex. There is something wrong with how we compute :-\
[05:05:32] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:f584:868d:d30a:73b6) (Quit: Client closed)
[05:07:04] <grandrew> bjs, cents don't solve the problem as the next first thing I'd do is divide it by something, or put it into a round barrel
[05:07:42] <bjs> grandrew: well, sadly the world doesn't care whether you believe it to be complex or not.  I guess you're going through that stage that all programmers/compscis do about being horrified by floats and number systems
[05:08:15] <noria> grandrew: use decimal.Decimal? it is build to do that
[05:09:16] <grandrew> noria, as it turns out it is only built to expose some of the internal complexities
[05:09:31] <bjs> grandrew: what do you mean by that?
[05:09:48] <bjs> The decimal module probably works for the two cases you just described (but not the trigoometry one)
[05:10:02] *** Joins: sudomann_ (~sudomann@98.219.211.182)
[05:10:26] <grandrew> I mean, I have to manually choose when to round where and then keep track of those roundings to still be able to fit all those barrels into a freighter and credit account limit
[05:11:39] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[05:11:46] <grandrew> damn the world is broken and no one seems to care!
[05:11:52] * grandrew is in deep crisis
[05:12:02] <bjs> grandrew: haha,  when did you learn about floats?
[05:12:58] <bjs> how long has it taken for this realisation :)
[05:13:05] <grandrew> I don't think I know them. I started reading some of set theory last year
[05:13:29] <bjs> grandrew: everyone agrees with you,  there's little you can do about it
[05:13:46] <bjs> financial institutions even still just use decimal and integers and "deal with it"
[05:13:53] <bjs> usually by rounding in a way that benefits them...
[05:14:37] *** Quits: lotsofpizza (~lotsofpiz@2601:1c0:8781:2bf0:5dec:80f3:6dad:5d19) (Ping timeout: 250 seconds)
[05:14:48] *** Quits: sudomann_ (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[05:15:18] *** Joins: sudomann_ (~sudomann@98.219.211.182)
[05:15:34] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[05:15:40] <grandrew> when someone says "there's little you can do about it" usually means the world needs a hero :) just his time hasnt come yet
[05:15:46] <bjs> even something like WolframAlpha probably isn't enough to do taxes and things accurately :)
[05:16:03] *** Joins: junebug (~junebug@2600:1700:3db0:2540:1d3:676e:e692:af0c)
[05:16:05] <gry> haha
[05:16:21] <grandrew> yes because wolfram is also built by a crazy mathematician not a hero :))
[05:16:32] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[05:16:34] <bjs> it's going to fallback to numerical methods when it encounters those sorts of calculations and those are going to be imprecise
[05:16:42] <bjs> grandrew: well good luck!  better you than me that's what i say..
[05:17:03] <grandrew> haha I'm kind-a kidding of course...
[05:18:04] <grym> the thing that really gets in your craw is when someone says "i can prove that you can't do anything about it"
[05:18:10] <grandrew> but anyways. It's a huge issue. Probably on a scale between a dead species and space-faring civilization
[05:18:18] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:18:30] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[05:18:46] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Ping timeout: 260 seconds)
[05:18:54] *** Joins: newpy (~newpy@206.168.231.90)
[05:20:06] <bjs> grym: well we know you can’t do it for all numbers
[05:20:26] <bjs> but you might be able to do something exact for up to 0% of the numbers
[05:20:29] <bjs> :p
[05:21:16] *** Parts: pcc (~pcc@c-76-119-123-170.hsd1.vt.comcast.net) ()
[05:21:33] *** Quits: nomic (~nomic@185.192.69.200) (Quit: Leaving)
[05:21:37] <grym> bjs: once and exactly once i tried to explain to my biologist friend that some things are provably unprovable and hoo boy did that not go over well
[05:21:39] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Remote host closed the connection)
[05:21:40] *** Joins: Macuser (~Macuser@216.30.159.201)
[05:22:10] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[05:22:11] <grym> we couldn't get past "well, maybe one day in the future someone will think really hard about a new way to get around it, we should do more research!"
[05:22:15] *** Quits: nicholaus04 (~nicholaus@2607:fb90:e58c:fb6a:3ddf:77ed:0:281) (Remote host closed the connection)
[05:23:08] <bjs> grym: heh, uncomputable numbers are fun too
[05:23:10] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[05:23:22] <grym> i wasn't even going to go there
[05:24:04] *** Quits: RasnCain_ (~rasncain@ip174-73-119-77.br.br.cox.net) (Remote host closed the connection)
[05:24:15] <bjs> mathematically speaking almost all numbers are not computable. probably that means humans can never work out the exact value of most numbers
[05:24:52] *** Quits: ffledgling (~textual@163.114.132.128) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:24:56] <grym> "I mean, you may think it's a long way down the road to the chemist's, but that's just peanuts to the reals"
[05:25:10] <bjs> kind of a bummer for any kind of real number library
[05:25:30] *** Quits: sudomann (~sudomann@2601:543:100:4fc8:e5ba:b78c:13ce:d29) (Quit: Leaving)
[05:27:09] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Remote host closed the connection)
[05:28:19] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[05:28:29] *** Joins: vimart (~vimart@109.249.179.182)
[05:28:37] *** Joins: RasnCain_ (~rasncain@ip174-73-119-77.br.br.cox.net)
[05:29:00] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:29:39] *** Joins: willow (~willow@user/willow)
[05:30:58] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:30:59] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Client Quit)
[05:32:31] *** Joins: frost (~frost@user/frost)
[05:33:09] *** Quits: RasnCain_ (~rasncain@ip174-73-119-77.br.br.cox.net) (Ping timeout: 252 seconds)
[05:33:34] *** Joins: audio (~audio@user/audio)
[05:34:37] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 252 seconds)
[05:36:22] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[05:36:30] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[05:41:44] *** Joins: maryo (~Maryo@user/maryo)
[05:41:59] *** Joins: gambl0re (~gambl0re@216.154.40.235)
[05:42:00] *** Joins: whiskers (uid524133@id-524133.ilkley.irccloud.com)
[05:42:18] <whiskers> https://pastebin.com/H18V2NVL -- i have this for employee.py , for the main file, im assuming i would just take inputs but i know i would need to somehow store it in an array to get it for each employee which is where i havent done any progress because im not sure how to do it. any help?
[05:43:16] <whiskers> expected output: https://ibb.co/hRDbRDP
[05:44:19] *** Joins: Viewday113 (~Viewday@user/viewday)
[05:45:05] <grandrew> grym, numbers are not real. They obviously don't describe the universe (think of pi) and yet they are "emulated" in binary then in Turing and von Neumann.. that all sounds like a big mistake. It's not that Im against proofs within certain toy formalisms but I think it's time to move forward
[05:45:31] <grym> grandrew: uhh.  those sure are some words
[05:46:15] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 250 seconds)
[05:46:16] *** Viewday113 is now known as Viewday11
[05:46:35] <whiskers> i don't think we're really moving, moreso falling. all we can do is fall forward and not backwards
[05:46:49] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[05:47:21] <whiskers> any help is appreciated with what im working on though!
[05:47:25] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:49:59] *** Quits: gambl0re (~gambl0re@216.154.40.235) (Quit: WeeChat 3.3)
[05:50:58] *** Quits: justm3 (~Username@82-171-42-20.fixed.kpn.net) (Ping timeout: 265 seconds)
[05:51:04] *** Joins: justm3 (~Username@82-171-42-20.fixed.kpn.net)
[05:55:53] *** Quits: relight (~relight@user/relight) (Ping timeout: 252 seconds)
[05:56:40] *** Joins: relight (~relight@user/relight)
[05:58:42] *** Quits: sharperguy (~sharpergu@88.130.219.176) (Ping timeout: 265 seconds)
[05:59:27] *** Parts: orbisvicis (~orbisvici@user/orbisvicis) (Leaving)
[05:59:31] *** Joins: jenhsun (uid342237@id-342237.hampstead.irccloud.com)
[06:00:00] *** Joins: sharperguy (~sharpergu@89.244.125.219)
[06:00:07] *** Quits: mgedmin (~mg@user/mgedmin) (Quit: ZNC - http://znc.sourceforge.net)
[06:00:17] *** Quits: sudomann_ (~sudomann@98.219.211.182) (Ping timeout: 252 seconds)
[06:00:44] *** Joins: RasnCain_ (~rasncain@ip174-73-119-77.br.br.cox.net)
[06:01:09] *** Joins: syntaxman (~wade@li227-215.members.linode.com)
[06:02:06] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[06:02:47] *** Joins: sudomann (~sudomann@98.219.211.182)
[06:03:32] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[06:03:42] *** Joins: mgedmin (~mg@user/mgedmin)
[06:04:55] *** Joins: greentree (~greentree@pool-173-68-196-254.nycmny.fios.verizon.net)
[06:05:09] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[06:05:14] <greentree> is there a simple way to replace multiple characters in a string (e.g last three characters) with slicing or something of the life
[06:05:18] <greentree> of the like*
[06:05:50] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[06:05:56] <greentree> just foo[:-3]?
[06:06:02] *** Joins: PrinceMachiavell (~PrinceMac@c-174-63-6-58.hsd1.ma.comcast.net)
[06:06:31] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[06:08:14] *** Quits: RasnCain_ (~rasncain@ip174-73-119-77.br.br.cox.net) (Ping timeout: 260 seconds)
[06:09:09] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[06:09:13] *** Quits: maryo (~Maryo@user/maryo) (Ping timeout: 250 seconds)
[06:10:13] <noria> greentree: yes: foo = foo[:-3] + repl
[06:12:16] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[06:12:38] *** Joins: boON (~boON@user/boon)
[06:13:02] *** Joins: ubert1 (~Thunderbi@p200300ecdf0ba2c03cbcafca2ab2631d.dip0.t-ipconnect.de)
[06:14:34] *** Quits: ubert (~Thunderbi@p200300ecdf0ba2f664fe176011d10d59.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[06:14:35] *** ubert1 is now known as ubert
[06:15:14] *** Joins: emf (~emf@2603-6080-9403-11bf-0000-0000-0000-0007.res6.spectrum.com)
[06:16:20] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:16:20] <jfcaron> Is there a container that is like a dict but 1-to-1, like with unique values?
[06:16:38] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 260 seconds)
[06:16:42] *** Joins: ub1 (~Thunderbi@p200300ecdf0ba2c0b11d357caa48ef17.dip0.t-ipconnect.de)
[06:16:43] *** brabrax_ is now known as brabrax
[06:16:46] <jfcaron> I just want to map "ON" <-> True and "OFF" <-> False and be able to easily swap between the two.
[06:16:57] <jfcaron> Using a regular dict is very awkward in the reverse case.
[06:17:38] <jfcaron> My simplest idea is just to use two lists ["ON", "OFF"] and [True, False] and just .index them.
[06:17:45] <jfcaron> But that feels ugly.
[06:18:04] <leduyquang753> There is a `bidict` module.
[06:18:16] *** Quits: ub (~Thunderbi@p200300ecdf0ba2f69d45b59a7f50dcfc.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[06:18:22] <jfcaron> A standard module?
[06:18:24] <leduyquang753> No.
[06:18:28] <jfcaron> =(
[06:18:31] *** Quits: Betal (~Betal@user/betal) (Ping timeout: 265 seconds)
[06:18:35] <leduyquang753> You can easily make two dicts though.
[06:18:58] *** Quits: vimart (~vimart@109.249.179.182) (Ping timeout: 260 seconds)
[06:18:59] *** ub1 is now known as ub
[06:19:20] <jfcaron> oh right
[06:19:28] <grym> foo = {"ON":True, "OFF":False}; antifoo = {v,k for k,v in foo.items()}
[06:19:34] *** Joins: Betal (~Betal@user/betal)
[06:19:50] <grym> er, v:k
[06:19:57] <Peng> You could just put everything in one dict, really
[06:20:04] <jfcaron> lol that too
[06:20:17] <grym> sure could
[06:20:22] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 260 seconds)
[06:20:46] *** Joins: esv (~esv@74.124.178.154)
[06:21:15] *** Quits: bambams (~bambams@user/bambams) (Remote host closed the connection)
[06:22:27] *** Quits: parv (~quass@user/parv) (Ping timeout: 250 seconds)
[06:23:23] *** Joins: RasnCain (~rasncain@ip174-73-119-77.br.br.cox.net)
[06:23:28] *** Joins: bambams (~bambams@user/bambams)
[06:23:51] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[06:25:23] *** Joins: ano (~ano@user/ano)
[06:25:34] <jfcaron> Thanks
[06:25:38] *** Joins: vimart (~vimart@109.249.179.205)
[06:27:40] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[06:29:36] *** Quits: qpdb (~qpdb@user/qpdb) (Ping timeout: 256 seconds)
[06:30:57] *** Quits: noria (~noria@gateway/tor-sasl/noria) (Quit: Leaving)
[06:32:10] *** Quits: emf (~emf@2603-6080-9403-11bf-0000-0000-0000-0007.res6.spectrum.com) (Quit: emf)
[06:32:22] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:32:56] *** Joins: emf (~emf@2603-6080-9403-11bf-0000-0000-0000-0007.res6.spectrum.com)
[06:33:34] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[06:34:40] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:35:21] *** Joins: SteveR (~SteveR@192.146.154.3)
[06:37:17] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[06:37:20] <SteveR> i want to convert this into a python class
[06:37:21] <SteveR> https://bpa.st/TT3A
[06:37:51] <SteveR> but since in the example, they are creating the instance of a class in another class. im facing difficulties
[06:37:57] <SteveR> could someone share me a snippet
[06:39:14] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[06:40:44] *** Quits: nunggu (~q@gateway/tor-sasl/nunggu) (Quit: nunggu)
[06:41:02] <nedbat> SteveR: can you show us what you've got?
[06:41:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[06:43:04] *** Joins: sudomann (~sudomann@98.219.211.182)
[06:43:07] *** Joins: fikran (~fikran@user/fikran)
[06:43:27] *** Joins: qpdb (~qpdb@user/qpdb)
[06:44:21] *** Joins: maryo (~Maryo@user/maryo)
[06:45:52] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b)
[06:46:36] *** Quits: fulljab (~fulljab@paloboi.student.rit.edu) (Read error: Connection reset by peer)
[06:46:47] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[06:46:47] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:46:47] *** finn_elija is now known as FinnElija
[06:47:26] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 260 seconds)
[06:48:27] *** Quits: emf (~emf@2603-6080-9403-11bf-0000-0000-0000-0007.res6.spectrum.com) (Quit: emf)
[06:49:20] <SteveR> nedbat: tried something like this https://bpa.st/JPPQ
[06:49:25] <SteveR> im not so sure though
[06:49:53] <nedbat> SteveR: that's good, now what about the list of orders?
[06:51:59] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[06:52:17] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:52:45] <SteveR> nedbat: https://bpa.st/MY6A
[06:54:10] <nedbat> SteveR: will that work? are you not happy with it?
[06:55:44] <SteveR> i am not so sure.. as i said earlier im doubtful with  creating the instance of a class in another class
[06:56:51] <nedbat> SteveR: here you aren't making the orders in the Limit, you are passing them in from elsewhere
[06:58:06] <SteveR> oh ok
[06:58:08] <SteveR> nedbat: https://bpa.st/NXTQ
[06:58:28] <SteveR> someone gave me this. but i am not sure how to instantiate an object?
[06:58:44] <SteveR> do i need to pass any arguments while i instantiate an object
[06:59:06] <nedbat> SteveR: this won't work: line 3 will be an AttributeError, because self doesn't have an _openPrice attribute
[07:05:06] <SteveR> you mean _openPrice doesnt have any value for that attribute?
[07:05:45] *** Quits: jenhsun (uid342237@id-342237.hampstead.irccloud.com) ()
[07:05:47] <SteveR> how can i fix this
[07:06:11] *** Joins: jenhsun (uid342237@id-342237.hampstead.irccloud.com)
[07:10:03] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:10:39] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[07:11:48] *** Joins: BSaboia (~bsaboia@177.37.198.179)
[07:13:54] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[07:14:30] *** Quits: BSaboia (~bsaboia@177.37.198.179) (Client Quit)
[07:16:37] *** Quits: seanh (1a2a07ea57@2604:bf00:561:2000::201) (Ping timeout: 240 seconds)
[07:16:38] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[07:17:18] *** Joins: seanh (1a2a07ea57@2604:bf00:561:2000::201)
[07:22:53] *** Quits: Andrynet (~Andrynet@186.46.201.139) (Ping timeout: 250 seconds)
[07:25:04] *** Joins: Andrynet (~Andrynet@186.46.201.139)
[07:27:51] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[07:27:58] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[07:28:38] *** Quits: SteveR (~SteveR@192.146.154.3) (Quit: Client closed)
[07:29:27] *** Joins: sudomann (~sudomann@98.219.211.182)
[07:30:22] *** Quits: Andrynet (~Andrynet@186.46.201.139) (Ping timeout: 260 seconds)
[07:30:36] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[07:31:05] *** Joins: lotsofpizza (~lotsofpiz@2601:1c0:8781:2bf0:5dec:80f3:6dad:5d19)
[07:32:26] *** Joins: Andrynet (~Andrynet@186.46.201.139)
[07:33:52] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Read error: Connection reset by peer)
[07:34:01] *** Parts: jenhsun (uid342237@id-342237.hampstead.irccloud.com) ()
[07:35:28] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[07:35:53] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 250 seconds)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:40:07] *** Joins: moog (~moog@107.77.244.89)
[07:41:52] *** Joins: sudomann (~sudomann@98.219.211.182)
[07:43:08] *** Quits: moog (~moog@107.77.244.89) (Quit: Leaving)
[07:43:50] *** Joins: NeilRG_ (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[07:44:13] *** Joins: Viewday116 (~Viewday@user/viewday)
[07:45:12] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[07:45:13] <jfcaron> SteveR: It should be something like this: https://bpa.st/4LSA
[07:45:31] *** Quits: junebug (~junebug@2600:1700:3db0:2540:1d3:676e:e692:af0c) (Ping timeout: 252 seconds)
[07:46:00] <jfcaron> And then you instantiate it with Candlestick(1, 2, 3, 4, 5, 6, 7)
[07:46:05] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 250 seconds)
[07:46:06] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[07:46:06] *** Viewday116 is now known as Viewday11
[07:46:15] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[07:46:26] <NeilRG_> Could someone help me understand this error? https://mypy-play.net/?mypy=latest&python=3.10&gist=ec51e527a58bd719a3bc049e443c9c90
[07:47:14] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[07:47:16] <NeilRG_> Isn't a type a callable?
[07:48:46] <jfcaron> Is "argument 1" the tuple or the l?
[07:48:56] *** Quits: sleepingforest (~sleepingf@user/sleepingforest) (Ping timeout: 256 seconds)
[07:48:58] <jfcaron> Python is zero-indexed everywhere normally
[07:49:01] *** Quits: zebrag (~chris@user/zebrag) (Ping timeout: 240 seconds)
[07:49:10] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[07:49:26] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[07:49:42] <jfcaron> What the hell syntax is the x: thing anyways?
[07:49:54] *** Joins: zebrag (~chris@user/zebrag)
[07:49:59] <NeilRG_> jfcaron: sorry are you asking me?
[07:50:04] <jfcaron> yeah
[07:50:16] <NeilRG_> type annotations
[07:50:41] <jfcaron> So x: is of a type, but that type is an assignment?
[07:50:52] <leduyquang753> It just hints x is this type.
[07:50:54] <NeilRG_> no, the annotations don't do anything
[07:51:30] <jfcaron> Oh right it's this garbage where it's actually x = list(map(tuple, l))
[07:51:40] <jfcaron> and then someone crammed some extra :foo in between.
[07:52:19] <jfcaron> Anyways list(map(tuple, l)) works in my python interpreter, tuple is callable.
[07:52:49] <jfcaron> I get an "'type' object is no subscriptable" error on the type annotation.
[07:53:08] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b) (Quit: Leaving)
[07:53:22] *** Joins: delvian (~delvian@41.13.232.54)
[07:53:32] <jfcaron> But that's 3.8 on my system
[07:57:22] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b)
[07:59:38] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:59:56] <jinsun> NeilRG_: mypy is not inferring types as much as you would like, it treats tuple is tuple[Any, ...], so the result will be list[tuple[Any, ...]] and not list[tuple[int, ...]] like you annotated
[08:00:08] *** Joins: kdc (~kdc@196.211.197.159)
[08:00:32] <NeilRG_> jinsun: yes, but the problem is that it doesn't think it can apply "tuple" in the map
[08:00:37] <NeilRG_> which doesn't make sense to me
[08:00:49] <jinsun> you can write `x: list[tuple[int, ...]] = list(map(tuple[int], l))` to satisfy it
[08:00:49] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b) (Client Quit)
[08:01:17] <jinsun> tuple[int] inside the map too
[08:02:08] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b)
[08:02:14] <NeilRG_> you mean tuple[int, ...]
[08:02:15] <NeilRG_> ?
[08:03:38] <jinsun> ah should have been tuple[int, ...] but mypy can't handle that as well, that one is a existing bug I think
[08:03:51] <jinsun> tuple[int] silences it but not right
[08:05:54] <NeilRG_> okay thanks
[08:06:12] <NeilRG_> I think I can just get rid of the map outright: https://github.com/google/jax/pull/8890/files#diff-a81a5cc54c9a9c2797bcca38f5f1c13d5c9883763ee1e14ae5f0e215aa115bcfR127
[08:06:30] *** Joins: jazzy (~jaziz@user/jaziz)
[08:06:37] <jinsun> well in this case tuple[int] is fine actually since you have one element tuples only
[08:06:54] <NeilRG_> yes, but the case I modified doesn't
[08:06:57] *** Joins: ThePhilgrim (~ThePhilgr@m83-187-186-211.cust.tele2.se)
[08:07:56] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b) (Quit: Leaving)
[08:09:15] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[08:09:15] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b)
[08:09:46] <jinsun> yeah if it is already tuples then the map is pointless
[08:11:15] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b) (Client Quit)
[08:11:18] <NeilRG_> that's what it looks like to me
[08:11:23] <NeilRG_> but maybe I'm missing something
[08:12:47] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b)
[08:13:27] *** Quits: berton[m] (~berton@2001:470:69fc:105::ce36) (Quit: Client limit exceeded: 20000)
[08:15:58] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 265 seconds)
[08:16:22] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[08:17:17] <jinsun> you can just write a listcomp instead of map it seems, mypy handles that fine
[08:17:31] *** Joins: berton[m] (~berton@2001:470:69fc:105::ce36)
[08:17:33] *** Joins: nomic (~nomic@185.192.69.200)
[08:18:01] <jinsun> that is one more reason to use list comprehensions over map I guess, less dealing with bugs in type checkers
[08:18:33] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[08:18:34] <NeilRG_> jinsun: yeah, I found a similar one with filter
[08:18:43] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b) (Quit: Leaving)
[08:18:44] <NeilRG_> and the same fix was to use comprehensions
[08:20:22] <Evolver> Is there a version of `functools.cache` and `functools.lru_cache` that can be pickled? Not being able to pickle it is blocking my use of multiprocessing.
[08:20:37] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b)
[08:21:11] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 250 seconds)
[08:21:11] <NeilRG_> can you inherit and add the __setstate__ and getstate?
[08:21:24] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[08:21:49] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[08:24:10] *** Quits: maryo (~Maryo@user/maryo) (Read error: Connection reset by peer)
[08:24:15] <Evolver> NeilRG_: i would have no idea what to put in them. anyhow, I'm writing the class, so I can do other things too
[08:24:19] *** Joins: maryo (~Maryo@user/maryo)
[08:24:55] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b) (Client Quit)
[08:25:22] <NeilRG_> Evolver: I always forget, just read the docs.  You put what you need to save and load
[08:25:30] <NeilRG_> and python will make the pickle for you
[08:25:41] <Evolver> not enough info for me
[08:25:46] <NeilRG_> ?
[08:25:52] <NeilRG_> what info do you need?
[08:25:54] <Evolver> I'd have to see examples of use of those methods
[08:26:02] <NeilRG_> it's in the docs
[08:26:22] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b)
[08:26:24] <Evolver> ok I'm checking https://docs.python.org/3/library/pickle.html#pickle-state now
[08:26:50] *** Quits: ThePhilgrim (~ThePhilgr@m83-187-186-211.cust.tele2.se) (Quit: ThePhilgrim)
[08:27:05] *** Quits: sreve (~quassel@p4ff446eb.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[08:27:11] *** Joins: ThePhilgrim (~ThePhilgr@m83-187-186-211.cust.tele2.se)
[08:27:33] *** Joins: sreve (~quassel@p4ff44c52.dip0.t-ipconnect.de)
[08:28:24] *** Quits: ThePhilgrim (~ThePhilgr@m83-187-186-211.cust.tele2.se) (Client Quit)
[08:28:26] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b) (Client Quit)
[08:28:42] *** Joins: ThePhilgrim (~ThePhilgr@m83-187-186-211.cust.tele2.se)
[08:29:49] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b)
[08:29:59] *** Joins: alzgh (~alzgh@user/alzgh)
[08:33:55] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[08:34:46] *** Quits: lotsofpizza (~lotsofpiz@2601:1c0:8781:2bf0:5dec:80f3:6dad:5d19) (Ping timeout: 260 seconds)
[08:36:07] *** Quits: jab416171 (~jab416171@c-174-52-177-39.hsd1.ut.comcast.net) (Ping timeout: 252 seconds)
[08:36:11] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b) (Quit: Leaving)
[08:36:25] *** Quits: ThePhilgrim (~ThePhilgr@m83-187-186-211.cust.tele2.se) (Quit: ThePhilgrim)
[08:36:45] *** Joins: ThePhilgrim (~ThePhilgr@m83-187-186-211.cust.tele2.se)
[08:38:36] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:40:05] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:44c9:56a1:ff70:f248)
[08:40:11] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b)
[08:40:30] *** Quits: ThePhilgrim (~ThePhilgr@m83-187-186-211.cust.tele2.se) (Client Quit)
[08:40:51] *** Joins: ThePhilgrim (~ThePhilgr@m83-187-186-211.cust.tele2.se)
[08:41:31] <Evolver> NeilRG_: Instead of messing with my particular class, I'd like to more reusably make and use a version of `functools.cache` of which I can control pickling.
[08:41:34] *** Joins: jab416171 (~jab416171@c-174-52-177-39.hsd1.ut.comcast.net)
[08:41:48] <Evolver> and if I have to do that via set/get state, that's fine
[08:43:26] *** Quits: ThePhilgrim (~ThePhilgr@m83-187-186-211.cust.tele2.se) (Client Quit)
[08:43:47] *** Joins: ThePhilgrim (~ThePhilgr@m83-187-186-211.cust.tele2.se)
[08:44:08] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Remote host closed the connection)
[08:45:02] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 260 seconds)
[08:45:40] *** Quits: whiskers (uid524133@id-524133.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[08:49:37] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[08:50:42] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[08:52:27] *** Joins: fikran (~fikran@user/fikran)
[08:55:14] *** Quits: Andrynet (~Andrynet@186.46.201.139) (Ping timeout: 256 seconds)
[08:55:45] <aphysically> wow using match case on advent of code today was a mistake
[08:55:58] *** Quits: ThePhilgrim (~ThePhilgr@m83-187-186-211.cust.tele2.se) (Quit: ThePhilgrim)
[08:57:08] *** Joins: Andrynet (~Andrynet@186.46.201.139)
[08:57:48] <aphysically> it completely breaks the line indention in vim
[08:58:01] <aphysically> not a fun experience to fix your indentino every time you make a new line while you're trying to code fast :P
[09:01:23] *** Quits: ede (~ede@user/ede) (Remote host closed the connection)
[09:01:46] *** Joins: ede (~ede@user/ede)
[09:07:41] *** Joins: nicholaus04 (~nicholaus@2607:fb90:e58c:fb6a:3ddf:77ed:0:281)
[09:09:14] *** Joins: jkent3 (~john@66.44.44.108)
[09:09:38] *** Quits: Viewday11 (~Viewday@user/viewday) (Quit: The Lounge - https://thelounge.chat)
[09:10:03] *** Joins: Viewday11 (~Viewday@user/viewday)
[09:11:20] *** Quits: jkent3 (~john@66.44.44.108) (Client Quit)
[09:12:37] *** Quits: TML (~tml@user/tml) (Ping timeout: 240 seconds)
[09:13:10] *** Joins: jkent3 (~john@66.44.44.108)
[09:13:10] *** Quits: jkent3 (~john@66.44.44.108) (Client Quit)
[09:13:17] *** Joins: w\W (code@192.99.249.211)
[09:14:25] *** Quits: haps (~haps@hyena.haps.ca) (Ping timeout: 256 seconds)
[09:14:35] *** Joins: jkent3 (~john@66.44.44.108)
[09:14:39] *** Joins: haps (~haps@hyena.haps.ca)
[09:14:50] <aphysically> anyway lesson learned do NOT use match/case
[09:14:56] <aphysically> (yet)
[09:15:09] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[09:15:21] *** Quits: Andrynet (~Andrynet@186.46.201.139) (Ping timeout: 252 seconds)
[09:15:39] *** Quits: ckdCreations (~ckdCreati@147.55.133.136) (Read error: Connection reset by peer)
[09:15:39] <lockywolf> How does distribution() in importlib.metadata get the files list and the entry_points of a package?
[09:15:54] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[09:16:51] *** Quits: leonardo (~leonardo@user/leonardo) (Quit: WeeChat 3.3)
[09:17:14] *** Joins: han-solo (~hanish@user/han-solo)
[09:17:35] *** Joins: Andrynet (~Andrynet@186.46.201.139)
[09:17:42] *** Parts: orbisvicis (~orbisvici@user/orbisvicis) (Leaving)
[09:21:09] *** Joins: ckdCreations (~ckdCreati@147.55.133.129)
[09:22:02] *** Quits: jkent3 (~john@66.44.44.108) (Ping timeout: 268 seconds)
[09:22:05] <lockywolf> I am running importlib.metadata.distribution('certbot').files , and it is empty. but on other machines it is normal
[09:24:27] *** Quits: RasnCain (~rasncain@ip174-73-119-77.br.br.cox.net) (Ping timeout: 250 seconds)
[09:25:08] <jinsun> there is a dist-info or egg-info file next to the package folder that has that information usually
[09:26:08] <jinsun> looking at the source code, it is getting files from 'RECORD' inside dist-info or 'SOURCES.txt' for egg-info
[09:26:41] <lockywolf> jinsun, excellent, thank you
[09:26:49] *** Quits: elderK (uid205007@id-205007.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[09:26:58] <lockywolf> there was a bogus obsolete egg-info in my case
[09:29:33] <twainwek> how 'decent' is randomnes in random.choice? doing a quick look at a very small selection, it appear to be that it's not very uniform?
[09:31:19] *** Joins: stranac (~stranac@195.29.239.126)
[09:31:33] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[09:32:19] <Repiphany> Good randomness isn't uniform, it's random
[09:32:34] <meejah> it's Mersenne Twister .. not for cryptographic use
[09:34:08] <KirkMcDonald> There's always random.SystemRandom()
[09:34:35] <Repiphany> secrets
[09:34:57] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[09:35:16] <jinsun> for a smalll selection there is low chance it will "look" uniform either way
[09:35:58] <jinsun> you have to choose many times to get a "uniform looking" histogram
[09:36:05] *** Joins: wlemuel (~wlemuel@210.22.124.110)
[09:36:32] *** Quits: vimart (~vimart@109.249.179.205) (Quit: WeeChat 2.8)
[09:38:02] <twainwek> would random.choice give a uniform histogram as selection size -> infinity?
[09:38:14] *** Quits: Andrynet (~Andrynet@186.46.201.139) (Ping timeout: 260 seconds)
[09:39:36] <KirkMcDonald> Should do some approximation of that.
[09:40:13] *** Joins: Andrynet (~Andrynet@186.46.201.139)
[09:41:53] *** Quits: oakridge (~oakridge@user/oakridge) (Read error: Connection reset by peer)
[09:45:00] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[09:45:02] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[09:45:02] *** Joins: sazawal (~sazawal@122.161.85.155)
[09:45:10] *** Joins: oakridge (~oakridge@user/oakridge)
[09:45:12] *** Joins: Viewday11 (~Viewday@user/viewday)
[09:47:22] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[09:47:52] *** Joins: parv (~quass@user/parv)
[09:51:49] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 240 seconds)
[09:52:12] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:52:19] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:52:23] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[09:53:02] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 256 seconds)
[09:54:19] <grawity> why do modules use certifi on Linux, instead of using the CA bundle that distros provide?
[09:55:32] *** Quits: eyepeetee (~aa@user/eyepeetee) (Ping timeout: 265 seconds)
[09:58:25] *** Joins: ihristov (~ihristov@85.187.46.226)
[09:58:59] *** Joins: han-solo (~hanish@user/han-solo)
[09:59:01] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 240 seconds)
[10:05:30] *** Quits: Ashburry (~Ashburry@184.69.89.188) (Ping timeout: 256 seconds)
[10:05:40] *** Joins: noord2 (~noord@user/noord)
[10:05:43] *** Quits: noord2 (~noord@user/noord) (Client Quit)
[10:06:28] <jinsun> if you mean requests then you can override that with REQUESTS_CA_BUNDLE environment variable
[10:06:41] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 252 seconds)
[10:07:08] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 265 seconds)
[10:07:40] *** Joins: Enitin (~Enitin@82.102.22.86)
[10:10:01] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[10:10:09] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 250 seconds)
[10:10:57] *** Joins: Themis3000 (~Thunderbi@user/themis3000)
[10:12:27] *** Joins: jkent3 (~john@66.44.44.108)
[10:15:06] *** Quits: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[10:15:29] <grawity> right but I more meant "why is that the default to begin with"
[10:18:01] *** Joins: vd62 (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca)
[10:18:09] *** Joins: grayn (grayn@gateway/vpn/protonvpn/grayn)
[10:18:47] *** Quits: jkent3 (~john@66.44.44.108) (Ping timeout: 252 seconds)
[10:20:25] *** Parts: grayn (grayn@gateway/vpn/protonvpn/grayn) ()
[10:21:51] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca) (Ping timeout: 256 seconds)
[10:23:05] *** Quits: Themis3000 (~Thunderbi@user/themis3000) (Ping timeout: 268 seconds)
[10:23:38] *** Quits: Andrynet (~Andrynet@186.46.201.139) (Ping timeout: 256 seconds)
[10:24:12] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[10:24:28] *** Joins: Themis3000 (~Thunderbi@user/themis3000)
[10:26:58] *** Joins: Andrynet (~Andrynet@186.46.201.139)
[10:27:05] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[10:27:08] *** Parts: NeilRG_ (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Leaving...)
[10:27:10] *** Joins: LBD (LBD@gateway/vpn/protonvpn/lbd)
[10:27:14] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 260 seconds)
[10:30:15] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:31:00] *** Quits: newpy (~newpy@206.168.231.90) (Ping timeout: 256 seconds)
[10:31:10] *** Quits: Kanjizai (~kanjizai@cpe-107-185-193-171.socal.res.rr.com) (Quit: BB2mrw)
[10:31:57] *** Quits: martums (~martums@user/martums) (Read error: Connection reset by peer)
[10:32:01] *** Parts: akoana (~ah@user/akoana) (Leaving)
[10:32:49] *** Joins: martums (~martums@user/martums)
[10:36:33] *** Joins: dohtem (uid524096@user/dohtem)
[10:37:12] *** Joins: teut (~teut@182.68.68.35)
[10:37:24] *** Joins: jay-m126 (~jay-m@129.0.99.138)
[10:37:29] *** Joins: jay-m126_ (~jay-m@129.0.99.138)
[10:37:29] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 252 seconds)
[10:37:30] *** Joins: jay-m1261 (~jay-m@129.0.99.138)
[10:38:07] *** Joins: zepolen (~zepolen@ppp-94-66-223-145.home.otenet.gr)
[10:38:22] *** Quits: zepolen_ (~zepolen@ppp-94-66-223-210.home.otenet.gr) (Ping timeout: 256 seconds)
[10:38:41] *** Quits: noyb (~noyb@user/noyb) (Quit: leaving)
[10:38:51] *** Joins: Enitin (~Enitin@82.102.22.86)
[10:38:53] *** Joins: noyb (~noyb@user/noyb)
[10:39:01] *** Quits: dwt_ (~dwt_@c-98-200-58-177.hsd1.tx.comcast.net) (Ping timeout: 240 seconds)
[10:39:18] *** Joins: whaley (~whaley@2603-6080-a301-33d1-af0f-7bd6-e4db-239a.res6.spectrum.com)
[10:41:28] *** Joins: newpy (~newpy@206.168.231.90)
[10:41:54] *** Quits: newpy (~newpy@206.168.231.90) (Client Quit)
[10:43:00] <Helenah> Please can someone tell me where I'm going wrong here? https://termbin.com/usan
[10:43:50] *** Quits: maplefinger (~maplefing@user/lindis) (Remote host closed the connection)
[10:43:58] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[10:46:37] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:46:45] <aphysically> jinsun: AoC simple today, no golf yet https://bpa.st/XJSQ
[10:46:49] <aphysically> a lot of potential maybe
[10:47:28] <Helenah> This channel is dead at the moment.
[10:50:24] *** Joins: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[10:50:43] *** Joins: Deknos (~someone@user/menace)
[10:52:03] <Repiphany> Helenah: You don't have an instance of serverConnectionThread and you're pointing to the class method
[10:52:26] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 260 seconds)
[10:52:29] <Helenah> Repiphany, A class is what I wanted to point to.
[10:52:47] <Helenah> Repiphany, I don't?
[10:53:27] <Repiphany> The first argument that you pass is `self`
[10:53:45] *** Joins: gusto (~Augustus@109.255.100.54)
[10:53:49] <Repiphany> Only when you call the instance method does self get passed automatically
[10:54:43] <Helenah> Repiphany, I'm wanting to call serverConnectionThread.run()
[10:54:43] *** Joins: ThC27 (~ThC27@130.95.254.12)
[10:54:53] *** Joins: upsala (~zcb@185.213.155.232)
[10:54:57] <Helenah> I'm confused, I thought I specified self where needed?
[10:56:09] <Repiphany> Helenah: https://bpa.st/7EGA
[10:56:37] *** Joins: luigibu (~luigi@80.30.201.209)
[10:56:44] <Helenah> Oh.
[10:57:23] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[10:58:02] *** Quits: jay-m126 (~jay-m@129.0.99.138) (Ping timeout: 260 seconds)
[10:58:13] <jinsun> aphysically: nice, no broken language server today too, except pyright complaining about those empty lists
[10:58:19] *** Quits: davep (uid504677@id-504677.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[10:58:30] *** Quits: jay-m1261 (~jay-m@129.0.99.138) (Ping timeout: 260 seconds)
[10:58:30] *** Quits: jay-m126_ (~jay-m@129.0.99.138) (Ping timeout: 260 seconds)
[10:58:33] <aphysically> heh
[10:58:33] *** Quits: ThC27 (~ThC27@130.95.254.12) (Client Quit)
[10:58:43] <aphysically> I might golf today haven't decided
[10:58:53] *** Joins: ThC27 (ThC27@gateway/vpn/protonvpn/thc27)
[10:59:47] *** Quits: ThC27 (ThC27@gateway/vpn/protonvpn/thc27) (Client Quit)
[10:59:47] <jinsun> ah yeah no golf yet, sothere is still chance
[10:59:51] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[10:59:56] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[11:00:03] *** Joins: ThC27 (ThC27@gateway/vpn/protonvpn/thc27)
[11:00:09] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:00:54] *** Joins: seednode (~seednode@user/seednode)
[11:01:15] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[11:01:47] *** Joins: fikran (~fikran@user/fikran)
[11:02:05] *** Quits: teut (~teut@182.68.68.35) (Ping timeout: 256 seconds)
[11:02:16] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[11:02:38] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[11:03:56] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[11:04:15] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[11:04:46] *** Joins: xardas (~xardas@149.233.51.127)
[11:05:22] *** Quits: xardas (~xardas@149.233.51.127) (Client Quit)
[11:06:05] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[11:07:30] *** Quits: Andrynet (~Andrynet@186.46.201.139) (Ping timeout: 268 seconds)
[11:08:52] *** Joins: Andrynet (~Andrynet@186.46.201.139)
[11:09:20] *** Joins: Enitin (~Enitin@82.102.22.84)
[11:10:29] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[11:10:48] <Helenah> Repiphany, I'm getting the same problem.
[11:12:18] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:12:54] <han-solo> could you share the code ?
[11:13:15] <Repiphany> Helenah: The rest of your class is broken anyway, none of the class methods like connect use self.ircSocket
[11:13:50] <Helenah> Repiphany, I know. I'd only just created the class with a load of already existing code and was getting around to that.
[11:13:50] <Repiphany> Your __init__ doesn't use any of the arguments that it's passed either
[11:13:54] *** Quits: Andrynet (~Andrynet@186.46.201.139) (Ping timeout: 260 seconds)
[11:14:16] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 268 seconds)
[11:15:14] *** Joins: Andrynet (~Andrynet@186.46.201.139)
[11:15:54] <Helenah> Repiphany, Do I need to do that?
[11:16:11] <Repiphany> What's the point in having arguments that you don't use
[11:16:26] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[11:16:50] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[11:17:17] <aphysically> is there some function f(a,b) in stdlib that does {a:b for a,b in zip(a,b)}
[11:17:20] <aphysically> this is important golfing research
[11:17:21] <han-solo> it seems the args in `__init__` and `run` are mostly(if not all) duplicated ?
[11:17:31] <han-solo> `dict(zip(a,b)`
[11:17:47] <han-solo> er, `)`
[11:17:53] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1)
[11:17:57] <aphysically> oh oh course, I forget some stdlib stuff have far too many constructor variants
[11:18:01] <aphysically> :D
[11:18:03] <han-solo> :)
[11:18:18] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:19:10] *** Joins: tobybl (~tobybl@213.31.132.232)
[11:19:53] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[11:20:33] *** Joins: canarts (~stranac@195.29.239.126)
[11:21:59] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[11:22:38] <Helenah> Clearly I'm not understanding how classes work...
[11:23:17] <Helenah> Despite reading about them on 3 pages.
[11:23:42] *** Quits: stranac (~stranac@195.29.239.126) (Ping timeout: 260 seconds)
[11:24:11] *** Quits: vd62 (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca) (Ping timeout: 256 seconds)
[11:24:51] *** Joins: mrwick (~mrwick@user/mrwick)
[11:25:45] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:2d3b:d295:9264:1dc6)
[11:26:03] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Remote host closed the connection)
[11:26:16] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[11:27:06] *** Joins: mcpackey (~pm0001@p5dc1cb61.dip0.t-ipconnect.de)
[11:27:54] *** Joins: jazzy2 (~jaziz@user/jaziz)
[11:28:03] <Helenah> Repiphany, Am I best rewriting or is there a different way or doing this? I wanted to encapsulate a bunch of functions that get handled by a thread. :/
[11:28:37] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[11:29:02] *** Joins: jazzy3 (~jaziz@user/jaziz)
[11:29:26] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Client Quit)
[11:29:31] *** Quits: cecep[m] (~cecep@2001:470:69fc:105::3994) (Quit: Client limit exceeded: 20000)
[11:30:42] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[11:31:29] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[11:31:47] <Repiphany> You could put all of the setup in __init__ and create an instance inside your `for network in...` loop
[11:32:02] *** Joins: cecep[m] (~cecep@2001:470:69fc:105::3994)
[11:32:02] <Repiphany> and point the Thread target to the instance .run method
[11:32:34] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[11:33:44] *** Joins: kosh (~kosh@user/kosh)
[11:34:05] *** Joins: arinov (~arinov@213.194.126.155)
[11:35:55] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Remote host closed the connection)
[11:36:12] <Helenah> Repiphany, Thing with that is the for is to create a thread per IRC network out of my configuration file.
[11:36:31] *** Quits: audio (~audio@user/audio) (Ping timeout: 252 seconds)
[11:36:46] *** Quits: Andrynet (~Andrynet@186.46.201.139) (Ping timeout: 260 seconds)
[11:37:43] <Repiphany> I mean that's what would be done in the for loop
[11:38:51] *** Joins: Andrynet (~Andrynet@186.46.201.139)
[11:39:15] *** Joins: jay-m126 (~jay-m@129.0.99.138)
[11:39:19] *** Joins: jay-m126_ (~jay-m@129.0.99.138)
[11:39:20] *** Joins: jay-m1261 (~jay-m@129.0.99.138)
[11:40:37] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[11:41:16] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[11:41:29] *** Quits: ThC27 (ThC27@gateway/vpn/protonvpn/thc27) (Quit: ThC27)
[11:42:07] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:42:50] *** Joins: leonardo (~leonardo@user/leonardo)
[11:43:17] *** Joins: palasso (~palasso@user/palasso)
[11:43:36] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[11:44:19] *** Joins: Viewday112 (~Viewday@user/viewday)
[11:44:20] <Repiphany> Helenah: https://bpa.st/PEQA
[11:45:18] <Helenah> Repiphany, I'll look into that, thanks.
[11:45:48] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[11:45:48] *** Viewday112 is now known as Viewday11
[11:46:23] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi)
[11:50:32] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Quit: beastDivision)
[11:50:38] *** Quits: LBD (LBD@gateway/vpn/protonvpn/lbd) (Quit: leaving)
[11:50:47] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[11:51:27] *** gitesh is now known as gitish
[11:52:54] *** Joins: vladoski (~foo@2001:b07:add:d406:bd3f:c789:2b11:5b3d)
[11:53:23] *** Joins: Techcable (~Techcable@168.235.93.147)
[11:53:34] *** Quits: whaley (~whaley@2603-6080-a301-33d1-af0f-7bd6-e4db-239a.res6.spectrum.com) (Ping timeout: 260 seconds)
[11:53:44] *** Joins: dwt_ (~dwt_@c-98-198-103-176.hsd1.tx.comcast.net)
[11:54:37] *** gitish is now known as gitesh
[11:54:39] *** Joins: alius (~adrien@2a01:e0a:13c:cd90:6c92:182a:2527:a9f2)
[11:55:04] *** Joins: chele (~chele@user/chele)
[11:56:29] *** Joins: pycode (~pycode3@2001:b07:5d28:551:a1eb:143:9cea:57b3)
[11:57:06] <pycode> hello how should i install pyenv? i am following this: https://github.com/pyenv/pyenv-installer but when i do pyenv update i get command not found
[11:57:08] <ksynwa> Is flake8 able to check if I call a function with the wrong number of arguments? I noticed that pyright is able to catch these errors but flake8 isn't. So was wondering why that is.
[11:57:46] <rk4> you could try it :)
[11:58:01] *** Joins: Pickchea (~private@user/pickchea)
[11:58:06] <rk4> but i would delegate that sort of stuff to pytype and mypy
[11:58:14] *** Quits: sharperguy (~sharpergu@89.244.125.219) (Ping timeout: 260 seconds)
[12:00:01] *** Joins: sharperguy (~sharpergu@193.9.112.86)
[12:01:16] *** Joins: Klinda (~superleag@user/klinda)
[12:01:44] *** Joins: VaniaPy (~VaniaPy@79.103.125.76.dsl.dyn.forthnet.gr)
[12:01:48] <jinsun> pylint also catches it, flake8 should also do it I feel but maybe there is some sort of false positive possible that they want to avoid
[12:02:39] *** Joins: Enitin (~Enitin@82.102.22.86)
[12:02:57] <jinsun> pycode: have you initialized pyenv, there are 5 commands that you have to run to initialize it (which you should just put in your bashrc)
[12:03:39] *** dcaro_away is now known as dcaro
[12:03:57] <pycode> jinsun, mm no i just followed those instructions
[12:04:15] <jinsun> the instructions in the pyenv-installer might be a bit misleading, it would seem that the installer does it for you but it doesn't
[12:04:49] <pycode> jinsun, it just says to follow the prerequisites first https://github.com/pyenv/pyenv/wiki/Common-build-problems#prerequisites
[12:05:17] *** Joins: gusto (~Augustus@109.255.100.54)
[12:05:30] <pycode> jinsun, what instructions should i follow to correctly install pyenv ?
[12:06:16] <jinsun> pycode: see the "Configure your shell's environment for Pyenv" point here https://github.com/pyenv/pyenv#basic-github-checkout
[12:07:40] *** Joins: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr)
[12:07:42] <pycode> oh so i should follow that
[12:07:49] <jinsun> pycode: https://bpa.st/PCMA a very simple way is to just copy the 4 liines from here to your .bashrc
[12:07:53] <pycode> i wonder what i really have installed right now
[12:07:55] <pycode> :)
[12:08:02] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[12:08:21] <pycode> jinsun, thank you , i try
[12:08:26] <jinsun> you have installed pyenv, but it needs to be initialzed before you can use it directly without the full path
[12:09:05] <pycode> ok it is working!
[12:09:10] <pycode> thank you very much
[12:09:54] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[12:10:18] *** Joins: rendar (~rendar@user/rendar)
[12:11:38] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[12:11:40] *** Joins: manti7 (~manti7@176.10.104.94)
[12:12:27] *** Quits: sharperguy (~sharpergu@193.9.112.86) (Ping timeout: 252 seconds)
[12:14:15] *** Joins: sharperguy (~sharpergu@89.244.125.219)
[12:14:32] *** Joins: oz4ga (~tim@hator.sunsite.lv)
[12:14:43] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 268 seconds)
[12:14:53] *** Joins: Enitin (~Enitin@82.102.22.85)
[12:15:00] <VaniaPy> Hello,what is the the best option to store logs in production level? db?
[12:16:35] *** Quits: Lazenca (~lazenca@user/lazenca) (Remote host closed the connection)
[12:17:08] *** Joins: ac_slater (~ac_slater@c-67-168-6-19.hsd1.wa.comcast.net)
[12:17:38] *** Quits: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com) (Ping timeout: 265 seconds)
[12:17:44] <rindolf> VaniaPy: how do you wish to query them, and how often?
[12:17:55] <ac_slater> hey guys. I'm trying to use `python setup.my bdist_wheel`. My package has some native shared libraries. The wheel is marked as `none` but it should be marked as Linux. Any clue how to fix?
[12:19:05] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[12:19:16] *** Joins: hexnewbie (~hexnewbie@user/hexnewbie)
[12:19:33] <rindolf> ac_slater: you can try https://blog.codinghorror.com/learn-to-read-the-source-luke/
[12:19:45] <VaniaPy> rindolf hmm in case that an action x is happening (an earthquake for example) i must be able to check it
[12:20:03] <ac_slater> rindolf: I dont get it
[12:20:17] <rindolf> ac_slater:  also "-m pdb"
[12:20:27] <ac_slater> no no
[12:20:37] <ac_slater> the wheel just doesn't detect the target platform
[12:20:39] <ac_slater> it runs fine
[12:20:50] <ac_slater> I just don't like that is says "none" when it's really for linux
[12:21:33] <rindolf> ac_slater: it's the wheel's creation process that is faulty
[12:21:34] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[12:22:03] *** Joins: betuxy (~betuxy@p579ad9b7.dip0.t-ipconnect.de)
[12:22:47] <rindolf> VaniaPy: then try using a db, but keep backups: https://www.joelonsoftware.com/2009/12/14/lets-stop-talking-about-backups/
[12:22:48] <ac_slater> oh --plat-name
[12:23:13] <rindolf> ac_slater: ah
[12:23:42] <ac_slater> it says "default: linux_x86-64" but it picks "none" ... :-/
[12:23:52] <ac_slater> oh well, I'll force it
[12:23:54] <ac_slater> thanks rindolf
[12:24:55] <rindolf> ac_slater: you're welcome
[12:27:05] *** Quits: matrixbot_bartab (~matrixbot@lfbn-idf1-1-1565-7.w90-90.abo.wanadoo.fr) (Quit: Bridge terminating on SIGTERM)
[12:28:22] <aphysically> jinsun: question: can I avoid duplication of brackets?
[12:28:24] *** Joins: shad (~shad@user/shad)
[12:28:33] <aphysically> answer: yes and it makes it more confusing, but doesn't really save space https://bpa.st/BW2Q
[12:29:44] *** Joins: matrixbot_bartab (~matrixbot@lfbn-idf1-1-1565-7.w90-90.abo.wanadoo.fr)
[12:29:45] *** Quits: Smedles (~quassel@61-245-148-167.3df594.adl.nbn.aussiebb.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[12:30:00] *** Quits: hypoon (~hypoon@pool-108-31-49-4.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[12:30:27] <aphysically> one of those is just pairwise() in stdlib after switching the order around, but, ya know, imports
[12:30:39] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:30:50] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-69-5.poda.cz) (Remote host closed the connection)
[12:31:13] *** Joins: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[12:31:23] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[12:31:37] <deniska> aphysically: you can also replace the last line with another import :)
[12:31:45] *** Joins: de-facto (~de-facto@user/de-facto)
[12:31:49] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[12:32:08] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b) (Quit: Leaving)
[12:32:09] <aphysically> median?
[12:32:14] <deniska> yeah
[12:32:14] <aphysically> yeah
[12:32:24] *** Quits: vladoski (~foo@2001:b07:add:d406:bd3f:c789:2b11:5b3d) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:32:33] <rindolf> aphysically: is this for brainfuck?
[12:32:42] <aphysically> no I'm just playing around
[12:32:46] *** Quits: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[12:32:50] <deniska> AoC2021d10
[12:32:54] *** Joins: vladoski (~foo@2001:b07:add:d406:bd3f:c789:2b11:5b3d)
[12:32:54] <aphysically> ye ^
[12:33:22] <aphysically> I like messing around with the logical structure for a while before I start the hardcore golfing part of it to get an idea where stuff can be squeezed, or maybe come up with an idea for a short comprehension that does multiple at once
[12:33:57] *** Joins: slav0nic (slav0nic@python.su)
[12:34:14] <aphysically> my masterpiece so far is definitely the AoC day 4 bingo one
[12:34:16] <aphysically> https://bpa.st/LPYQ
[12:34:28] <aphysically> solves both part 1 and 2
[12:35:03] *** Quits: rendar (~rendar@user/rendar) (Ping timeout: 268 seconds)
[12:35:15] *** Joins: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[12:35:16] <deniska> aphysically: pairs for {, [, < are two codepoints apart
[12:35:29] <deniska> aphysically: too bad ( and ) are one codepoint apart
[12:35:56] <aphysically> I thought about looking at their code points but I couldn't come up with anything that would end up being useful
[12:36:40] <lesshaste> I have a list of pairs of the form (int, datetime). How can I sum the integers values for each hour?
[12:37:23] <rindolf> lesshaste: sum() and list comprehension
[12:37:38] <lesshaste> rindolf,  but how do  I aggregate by hour?
[12:38:07] <rindolf> lesshaste: use a dict?
[12:38:22] <lesshaste> rindolf, how do I find the hour that a datetime is in?
[12:38:24] <cluelessperson_> is there's an elegant way to get the only value in a set?
[12:38:29] <aphysically> I think I can golf this by making it less efficient though
[12:38:31] <cluelessperson_> a = {1}
[12:38:37] <aphysically> like by always calculating the score and such
[12:38:37] <cluelessperson_> b, = works
[12:38:47] <nyuszika7h> next(iter(a))
[12:38:48] <cluelessperson_> but what about when I'm trying to expand a set into an argument?
[12:38:52] <deniska> cluelessperson_: gun operator: `b ,= a`
[12:39:16] <cluelessperson_> I can't just do.  thing(,a) ?
[12:39:18] <aphysically> maybe I can share the stack with the score
[12:39:23] <cluelessperson_> or something like that
[12:39:24] <deniska> cluelessperson_: thing(*a) might work?
[12:39:25] <rindolf> lesshaste: there is a method.
[12:39:30] <cluelessperson_> deniska, ooh yeah
[12:39:31] <aphysically> cluelessperson_: there's also pop() but it won't work on frozenset
[12:39:32] *** Quits: Jak_o_Shadows (~quassel@user/jak-o-shadows/x-5091859) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[12:39:38] <aphysically> (and it modifies it)
[12:39:39] <lesshaste> rindolf,  :)
[12:39:43] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:40:00] <aphysically> next(iter(a)) will work on frozenset though
[12:40:02] *** Joins: Fluxx (~Fluxx@user/fluxx)
[12:40:04] <cluelessperson_> deniska, close, but I can't use it in a dict
[12:40:16] <cluelessperson_> a_dict[*a_set]
[12:40:26] <cluelessperson_> min(a)
[12:40:31] <rindolf> lesshaste: https://docs.python.org/3/library/datetime.html#datetime.datetime.hour
[12:40:35] <cluelessperson_> but next(iter(a)) might have less overhead
[12:40:45] <deniska> at this point, why is it a set?
[12:40:54] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[12:40:55] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:40:57] <lesshaste> rindolf, that that give 2pm on tuesday as the same as 2pm on wednesday?
[12:40:58] *** Joins: jpic (~jpic@82.142.28.30)
[12:41:07] <lesshaste> won't that give...
[12:41:10] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b)
[12:41:32] <rindolf> lesshaste: yes, it will
[12:41:39] <lesshaste> rindolf,  :(
[12:42:00] <lesshaste> maybe I'll ask on SO
[12:42:04] *** Joins: Jak_o_Shadows (~quassel@user/jak-o-shadows/x-5091859)
[12:42:11] <lesshaste> but they will downvote it twenty times in 1 minute :)
[12:42:28] <rindolf> lesshaste: you can ddo .julianday() * 24 + .hour
[12:42:41] <lesshaste> rindolf, interesting!
[12:44:14] <cluelessperson_> deniska, because it's been reduced from a set.
[12:44:25] <cluelessperson_> now it's the only remaining option
[12:44:27] <cluelessperson_> and I need it
[12:44:48] *** Joins: luigibu (~luigi@80.30.201.209)
[12:47:22] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[12:47:25] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[12:48:19] *** Quits: jay-m126 (~jay-m@129.0.99.138) (Read error: Connection reset by peer)
[12:48:20] *** Quits: jay-m126_ (~jay-m@129.0.99.138) (Read error: Connection reset by peer)
[12:48:20] *** Quits: jay-m1261 (~jay-m@129.0.99.138) (Read error: Connection reset by peer)
[12:49:16] <parv> Hunh. If only want to use hour to keep track of date-time, just as well use epoch second & divide by 3600🤷‍♂️
[12:49:36] *** Quits: dharrigan (~dharrigan@user/dharrigan) (Quit: ZNC - https://znc.in)
[12:50:26] *** Joins: dharrigan (~dharrigan@user/dharrigan)
[12:50:35] <lesshaste> rindolf, datetime.datetime' object has no attribute 'julianday'
[12:50:40] *** Joins: jazzy2 (~jaziz@user/jaziz)
[12:52:36] <rindolf> lesshaste: https://duckduckgo.com/?q=python+julian+day&atb=v140-1&ia=web
[12:52:59] *** Joins: Atque (~Atque@user/atque)
[12:53:24] *** Quits: subopt (~subopt@2603-8081-2302-459a-e03c-e444-9814-8ce3.res6.spectrum.com) (Ping timeout: 265 seconds)
[12:53:33] *** Joins: jay-m126 (~jay-m@154.72.167.162)
[12:53:37] *** Joins: jay-m126_ (~jay-m@154.72.167.162)
[12:54:08] <deniska> lesshaste: it might be overkill for this specific task, but if you do it often, I may expect pandas might be useful
[12:54:19] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[12:54:37] <lesshaste> deniska, That sounds helpful
[12:55:10] *** Quits: jazzy3 (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[12:55:10] <deniska> lesshaste: or you can use collections.Counter, and use datetime.strftime('%Y-%m-%d %H') as a key
[12:55:51] <deniska> strftime('%Y-%m-%d %H:00') even cheekier :)
[12:56:18] <lesshaste> deniska, that looks clever!
[12:56:33] <Repiphany> cluelessperson_: [*a_set][0]
[12:57:03] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b) (Quit: Leaving)
[12:58:08] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b)
[12:58:34] *** Joins: rendar (~rendar@user/rendar)
[12:58:41] *** Joins: jay-m1261 (~jay-m@154.72.167.162)
[13:01:14] *** Quits: betuxy (~betuxy@p579ad9b7.dip0.t-ipconnect.de) (Quit: Connection closed)
[13:02:21] <lesshaste> deniska, your cheeky solution is wonderful. Thank you
[13:03:00] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b) (Client Quit)
[13:03:24] *** Joins: jkent3 (~john@66.44.44.108)
[13:03:34] <rindolf> deniska++
[13:03:50] <jinsun> aphysically: ah that alternate slicing and zipping thing, I've done that in the past too
[13:04:03] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b)
[13:05:41] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Read error: Connection reset by peer)
[13:05:47] *** Joins: guenhael1 (~Thunderbi@193.52.208.98)
[13:06:52] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[13:07:18] *** Quits: guenhael1 (~Thunderbi@193.52.208.98) (Read error: Connection reset by peer)
[13:08:32] *** Quits: jkent3 (~john@66.44.44.108) (Ping timeout: 256 seconds)
[13:08:35] <jinsun> cluelessperson_: generalized to any iterable https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.one
[13:08:55] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[13:10:19] <jinsun> or https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.first if you don't want to throw in case of more than 1 items
[13:11:07] *** Joins: fikran (~fikran@user/fikran)
[13:11:54] <jinsun> with more_itertools I don't miss C# LINQ as much, it provides a lot of things I missed
[13:12:29] <jinsun> though linq was more fun to use, with the chained method calls and lambdas
[13:12:54] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 260 seconds)
[13:14:02] *** Joins: RasnCain (~rasncain@ip174-73-119-77.br.br.cox.net)
[13:14:31] *** Quits: rendar (~rendar@user/rendar) (Ping timeout: 268 seconds)
[13:15:07] *** Joins: plastico (~plastico@neomutt/plastico)
[13:15:21] *** Quits: frost (~frost@user/frost) (Remote host closed the connection)
[13:17:18] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Quit: beastDivision)
[13:17:31] *** Quits: VaniaPy (~VaniaPy@79.103.125.76.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[13:18:08] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[13:18:31] *** Joins: LimeOn (~user@user/limeon)
[13:19:26] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[13:21:38] <LimeOn> Hello, i'm doing some embed youtube-dl script to automate some downloads, and im having the following trouble: I want to use a input command to choose the format of the file i want to download, i tried to convert it to integrer and put it on the code of the program, but i keep getting the following error: Exception "unhandled AttributeError"
[13:21:38] <LimeOn> 'int' object has no attribute 'encode' . The code of what i'm talking about is this: https://bpa.st/W3PQ . Any help would be appreciated. Thanks
[13:24:56] <rindolf> LimeOn: str(ponem) likely
[13:25:40] <jinsun> that error is due to some other part of the code that you didn't show, calling int() cannot give that error
[13:26:20] <rindolf> LimeOn: and see https://github.com/shlomif/how-to-share-code-online
[13:26:26] *** Joins: Enitin (~Enitin@82.102.22.86)
[13:26:49] <jinsun> maybe you are calling .encode() on the result of int(), or you are passing it to some other fucntion that expects string
[13:27:38] <jinsun> and maybe you don't need to call int() if the rest of the code expects str
[13:27:50] *** Quits: RasnCain (~rasncain@ip174-73-119-77.br.br.cox.net) (Ping timeout: 260 seconds)
[13:28:02] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Ping timeout: 240 seconds)
[13:28:38] *** Joins: rendar (~rendar@user/rendar)
[13:31:48] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b) (Quit: Leaving)
[13:33:13] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b)
[13:34:57] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 252 seconds)
[13:34:58] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[13:34:59] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:35:16] <pycode> hello again
[13:35:21] <pycode> should i create the virtualenv via pyenv ?
[13:37:41] <Repiphany> You can use pyenv-virtualenv if you want but it's also fine just to create venvs "normally" with whatever pyenv interpreters you have installed
[13:38:25] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b) (Quit: Leaving)
[13:38:56] <pycode> Repiphany, i do not know i just installed pyenv and running pyenv help i have seen that i can create virtualenv with pyenv too
[13:39:08] <pycode> does it sue a different virtualenv module?
[13:39:12] <pycode> sue/use
[13:39:19] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b)
[13:39:23] <Repiphany> https://github.com/pyenv/pyenv-virtualenv
[13:39:25] *** Quits: onichomp666 (~onichomp@177.231.43.15) (Ping timeout: 240 seconds)
[13:39:28] <LimeOn> rindolf: i was thinking that th eproblem could be some "limitation" in the youtube-dl options, because if i change ponem for, lets say, "18"(one valid format), the program continues without error
[13:40:03] <LimeOn> So i think that the problem is just there(that is why i shared only that part)
[13:40:33] <jinsun> LimeOn: "18" is str not int, so maybe you didn't need to do int()
[13:40:39] <LimeOn> When i run it, it pop ups the youtube-dl.py file, and marks where is the error
[13:40:48] <LimeOn> oh
[13:40:49] <jinsun> directly use the result of input()
[13:40:50] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[13:40:53] <LimeOn> Let me check
[13:41:14] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[13:41:17] *** Quits: nomic (~nomic@185.192.69.200) (Quit: Leaving)
[13:41:23] <LimeOn> Oh, that works
[13:41:38] <LimeOn> Thans jinsun
[13:41:39] <LimeOn> !!
[13:41:41] <pycode> Repiphany, seems good too
[13:43:00] *** Quits: parv (~quass@user/parv) (Quit: parv)
[13:43:14] <jinsun> LimeOn: type("18") is str, type(18) is int, the quotes make it a str
[13:44:07] *** Quits: humberto1 (~humbertow@187.202.191.5) (Ping timeout: 252 seconds)
[13:44:46] <LimeOn> I see
[13:46:58] *** Joins: nyah (~nyah@94.6.71.219)
[13:47:36] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[13:48:37] *** Joins: zaquest (~notzaques@5.130.79.72)
[13:52:44] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[13:52:55] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b) (Remote host closed the connection)
[13:53:23] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 268 seconds)
[13:56:52] *** Joins: Klinda (~superleag@user/klinda)
[13:56:54] *** Quits: dharrigan (~dharrigan@user/dharrigan) (Quit: ZNC - https://znc.in)
[13:56:59] *** Quits: oneforall2 (~guru@S0106ec086bc3574f.mh.shawcable.net) (Quit: Leaving)
[13:57:05] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 268 seconds)
[13:57:36] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[13:58:54] *** Joins: RasnCain (~rasncain@ip174-73-119-77.br.br.cox.net)
[13:59:13] *** Joins: dharrigan (~dharrigan@user/dharrigan)
[13:59:53] <azidhaka> Hi everyone, what is the proper way to run a system command on linux without invoking shell? At the moment, using os.system(command), the command is executed as "sh -c command"
[13:59:59] *** Quits: vladoski (~foo@2001:b07:add:d406:bd3f:c789:2b11:5b3d) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:00:46] <dminuoso> azidhaka: Use the subprocess module
[14:01:06] <supakeen> azidhaka: https://supakeen.com/weblog/executing-commands-safely-from-python.html
[14:01:38] *** Joins: vladoski (~foo@2001:b07:add:d406:bd3f:c789:2b11:5b3d)
[14:01:43] <dminuoso> azidhaka: Consider either subprocess.run or subprocess.Popen, depending on your usecase.
[14:02:41] <azidhaka> I've got a very long and complicated list of arguments to that command, including variables, etc. Is there a way to supply the whole command line to subprocess?
[14:03:04] <dminuoso> azidhaka: Please consult the documentation of subprocess.run()
[14:03:06] <deniska> you supply it as a list of arguments the new process gets as its argv
[14:03:11] <dminuoso> https://docs.python.org/3/library/subprocess.html#subprocess.run
[14:04:13] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 240 seconds)
[14:05:36] <azidhaka> here's the command, its got +args, /arg:value, /arg value: f"xfreerdp /tmp/bora2.rdp +auto-reconnect +clipboard +fonts +heartbeat +home-drive /f {rdp_printers} /client-hostname:{platform.node().split('.')[0]} /cert:ignore /dynamic-resolution /floatbar:sticky:on,default:visible,show:always /t:Bora /u:{platform.node().split('.')[0]} /p:{password()}"
[14:05:44] *** Joins: jkent3 (~john@66.44.44.108)
[14:06:22] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[14:06:27] <supakeen> You can quite literally turn that into a single list split on spaces (do it manually) and pass it to any of the subprocess family of functions that approaches what you want to do the closest.
[14:07:03] <azidhaka> supakeen: will test it, thanks. Thanks to dminuoso and deniska too
[14:07:48] *** pepper is now known as paprika
[14:08:27] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[14:08:29] *** paprika is now known as pepper
[14:08:48] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[14:09:33] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[14:10:01] *** Quits: sharperguy (~sharpergu@89.244.125.219) (Ping timeout: 268 seconds)
[14:11:16] *** Joins: sharperguy (~sharpergu@fnord.cryptophone.de)
[14:11:41] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b)
[14:12:21] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-71f8-eb14-0c59-711a.res6.spectrum.com) (Quit: jarthur)
[14:12:48] *** Quits: dharrigan (~dharrigan@user/dharrigan) (Quit: ZNC - https://znc.in)
[14:13:05] *** Quits: jkent3 (~john@66.44.44.108) (Ping timeout: 252 seconds)
[14:13:40] *** Joins: dharrigan (~dharrigan@user/dharrigan)
[14:15:01] *** Quits: RasnCain (~rasncain@ip174-73-119-77.br.br.cox.net) (Remote host closed the connection)
[14:15:38] *** Joins: nich04 (~nicholaus@172.58.27.238)
[14:18:01] *** Quits: nicholaus04 (~nicholaus@2607:fb90:e58c:fb6a:3ddf:77ed:0:281) (Ping timeout: 250 seconds)
[14:18:38] *** Joins: RasnCain_ (~rasncain@ip174-73-119-77.br.br.cox.net)
[14:19:03] *** Quits: tobybl (~tobybl@213.31.132.232) (Quit: Leaving...)
[14:19:11] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[14:20:38] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[14:21:02] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b) (Quit: Leaving)
[14:21:26] *** Joins: darksun (~darksun@user/darksun)
[14:22:28] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b)
[14:24:35] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[14:25:24] *** Joins: tobybl (~tobybl@213.31.133.71)
[14:26:05] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:26:11] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 245 seconds)
[14:26:21] *** Joins: tga (~tga@user/tga)
[14:27:11] <tga> greets. mypy/typing question: when adding `# type: ignore` first thing in a module, mypy ignores it completely, as if it didn't exist, and all imports from it fail
[14:27:43] <tga> is there a way to ignore typing _errors_ only from a module, but keep everything working?
[14:30:16] <bjs> tga: you can configure mypy with a config file, and enable/disable things per-module https://mypy.readthedocs.io/en/latest/config_file.html
[14:30:34] *** Joins: rany_ (~rany@user/rany)
[14:30:42] *** Joins: nichlas (uid374954@id-374954.uxbridge.irccloud.com)
[14:30:50] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[14:31:23] <tga> ah, maybe the solution is to ignore only certain types of errors for the whole file then
[14:31:36] *** Joins: iflema (~ian@user/iflema)
[14:33:27] <bjs> tga: there is ignore_errors
[14:33:48] <bjs> tga: so you can have [mypy-module.foo.bar] ignore_errors=True  in your config file
[14:34:04] <bjs> see the examples in that link
[14:35:07] *** Joins: Pickchea (~private@user/pickchea)
[14:35:21] <tga> right, I'd prefer to add this to the file itself rather than having a long list in the config file though
[14:35:23] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 265 seconds)
[14:36:29] <bjs> tga: you usually can add configuration options as a comment
[14:36:32] <bjs> like #mypy: ignore_errors
[14:37:02] <tga> oh hmm I must have missed that part
[14:37:13] *** Joins: lethu (~lethu@user/lethu)
[14:37:19] <bjs> tga: it's the "next" section in my link
[14:37:26] *** Quits: treefrob (~treefrob@p57a9652c.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[14:37:50] *** Joins: treefrob (~treefrob@p57a9652c.dip0.t-ipconnect.de)
[14:38:01] <tga> yup, totally missed that part
[14:38:14] <tga> looks like I need to spend some more time with the docs first
[14:38:17] <tga> thanks bjs!
[14:38:38] *** Joins: opaca_lux (~opaca_lux@188.241.156.39)
[14:38:40] *** Joins: frost (~frost@user/frost)
[14:39:06] *** Joins: VaniaPy (~VaniaPy@79.103.125.76.dsl.dyn.forthnet.gr)
[14:40:06] *** Quits: Strom (strom@fedora/strom) ()
[14:40:35] *** Joins: zepolen_ (~zepolen@ppp-94-66-223-145.home.otenet.gr)
[14:40:54] *** Quits: zepolen (~zepolen@ppp-94-66-223-145.home.otenet.gr) (Ping timeout: 256 seconds)
[14:41:15] *** Joins: Tempesta (~Tempesta@user/tempesta)
[14:41:48] *** Joins: Strom (~strom@fedora/strom)
[14:43:02] *** Joins: nicholaus04__ (~nicholaus@2607:fb90:e58c:fb6a:3ddf:77ed:0:281)
[14:44:43] *** Quits: vladoski (~foo@2001:b07:add:d406:bd3f:c789:2b11:5b3d) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:44:44] *** Quits: Themis3000 (~Thunderbi@user/themis3000) (Remote host closed the connection)
[14:44:59] *** Joins: vladoski (~foo@2001:b07:add:d406:bd3f:c789:2b11:5b3d)
[14:45:02] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-70-97.poda.cz)
[14:45:32] *** Quits: nich04 (~nicholaus@172.58.27.238) (Ping timeout: 240 seconds)
[14:45:38] *** Joins: jkent3 (~john@66.44.44.108)
[14:46:25] *** Quits: Fluxx (~Fluxx@user/fluxx) (Ping timeout: 268 seconds)
[14:47:01] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 240 seconds)
[14:47:33] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[14:48:08] *** Joins: binary01 (~binary01@174.141.153.217)
[14:48:53] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[14:49:52] *** Quits: VaniaPy (~VaniaPy@79.103.125.76.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[14:50:43] *** Quits: jkent3 (~john@66.44.44.108) (Ping timeout: 268 seconds)
[14:56:12] <rindolf> Hi all! how can i fix https://paste.centos.org/view/5718e1c9 ? «TypeError: heappush() argument 1 must be list, not array.array»
[14:56:49] <Yhg1s> rindolf: well, the obvious answer is to use a list, not an array.array. Why are you using an array.array?
[14:57:47] <rindolf> Yhg1s: it is faster and consumes less RAM for this case
[14:58:26] <rindolf> Yhg1s: and it works in pypy3.7
[14:59:18] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[15:00:48] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[15:01:13] <Yhg1s> rindolf: okay, well, you can't use them with the heapq module anymore. The heapq module was never meant for arrays. Also, arrays are usually slower, because they have to do a lot of converting back and forth and because growing them is a lot more expensive, but they can use less memory, yes. But if that's what you care about, you may want to use numpy instead.
[15:01:54] *** Quits: binary01 (~binary01@174.141.153.217) (Read error: Connection reset by peer)
[15:02:18] *** Joins: binary01 (~binary01@174.141.153.217)
[15:02:59] <Yhg1s> oh, pypy3.7. In pypy, array is probably just a slightly different interface to lists. It's not supposed to work with the heapq module.
[15:03:32] *** Quits: rendar (~rendar@user/rendar) (Ping timeout: 240 seconds)
[15:04:29] <rindolf> Yhg1s: ah
[15:04:47] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 252 seconds)
[15:05:02] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[15:05:03] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Ping timeout: 250 seconds)
[15:06:01] <leitz> What type of exception would you see if an os.mkdir() failed?
[15:06:16] *** Joins: Enitin (~Enitin@82.102.22.84)
[15:06:22] *** Quits: vladoski (~foo@2001:b07:add:d406:bd3f:c789:2b11:5b3d) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:06:36] <supakeen> something OSError-like.
[15:06:54] <Yhg1s> leitz: depends on why it failed. One of the OSError subclasses, or OSError itself if it's a really obscure error.
[15:07:37] <leitz> Cool, thanks! I'll go with OSError itself, and see what blows up.  :)
[15:10:28] <hexnewbie> rindolf: Perhaps if you take heapq.py, rip out the Python implementations of heappush(), and store them in a file in your package (pyheapq.py), they will work with array.array(). I would suggest you timeit.Timer().timeit(), cause array.array.append() is at least twice as slower as list.append()
[15:11:06] *** Joins: Naan (~Naan@user/naan)
[15:11:49] <rindolf> hexnewbie: i've switched to a list for now
[15:12:04] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[15:12:23] *** Joins: ThC27 (ThC27@gateway/vpn/protonvpn/thc27)
[15:13:17] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 250 seconds)
[15:14:12] *** Joins: Enitin (~Enitin@82.102.22.85)
[15:14:34] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[15:14:37] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[15:14:40] *** Joins: trace987 (~trace@ip5b429834.dynamic.kabel-deutschland.de)
[15:14:44] <hexnewbie> It sounds like the most sensible thing, still, nothing in /usr/lib/python3.7/heapq.py prior to ‘from _heapq import *’ seems to require list, I guess that's a shortcoming of the C implementation.
[15:14:59] *** Joins: aniketgm (~Aniket@49.36.109.129)
[15:15:04] <hexnewbie> s/shortcoming/necessary requirement of relying on low-level list() APIs/
[15:15:07] <lesshaste> for every point in a long list of numbers I would like the cusum of the points before and the cusum of the points after it. Is there a python function for this?
[15:15:22] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:15:46] *** Joins: berkhan (~berkhan@159.146.40.46)
[15:16:12] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[15:16:21] <lesshaste> it's easy if you don't need to scale the sum
[15:16:44] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[15:17:02] *** Quits: pycode (~pycode3@2001:b07:5d28:551:a1eb:143:9cea:57b3) (Ping timeout: 260 seconds)
[15:17:17] <hexnewbie> Is this what you mean? https://en.wikipedia.org/wiki/CUSUM
[15:17:46] <lesshaste> hexnewbie, yes
[15:17:57] *** Quits: NeoCore (~neocore@45.152.181.38) (Quit: Leaving)
[15:18:01] *** Joins: computeiro (~Wender@191.54.182.247)
[15:18:15] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[15:18:31] <berkhan> i want to look in the generated response that is from http.client.HTTPSConnection(). conn.request() includes method type, path, body and header. In my debugger, where can I see the generated request() function?
[15:18:37] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:18:41] <berkhan> s/response/request/g
[15:18:43] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 252 seconds)
[15:19:40] *** Quits: zepolen_ (~zepolen@ppp-94-66-223-145.home.otenet.gr) (Read error: Connection reset by peer)
[15:19:44] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi)
[15:20:27] *** Joins: fikran (~fikran@user/fikran)
[15:22:34] <hexnewbie> lesshaste: tots = 0; cusums = [0]; cusums += (tots := tots + x - w for x, w in zip(values, weights))
[15:22:45] <lesshaste> hexnewbie, thanks!
[15:22:57] <hexnewbie> That's for one direction, you'd have to do it in the other one as well
[15:23:08] <Klinda> in this code df[~((df < (Q1 - 1.5 * IQR)) |(df > (Q3 + 1.5 * IQR))).any(axis=1)], the tilde means that will control the first operator with or > nd the secondo operator of the or < ?
[15:24:04] *** Joins: zepolen_ (~zepolen@ppp-94-66-223-145.home.otenet.gr)
[15:24:05] <Klinda> why is defined like this?
[15:24:19] <hexnewbie> lesshaste: I don't think that's an issue, cause I cannot think of a way to do it without iterating twice
[15:24:42] <lesshaste> hexnewbie, ok thanks
[15:26:03] <hexnewbie> Er, tots = 0; cusums = [0]; cusums += (tots := max(0, tots + x - w) for x, w in zip(values, weights))
[15:27:26] <wyre> why do you think I'm having problems with encoding in basicConfig for logging module? https://bpa.st/EBOQ
[15:27:51] *** Quits: RasnCain_ (~rasncain@ip174-73-119-77.br.br.cox.net) (Remote host closed the connection)
[15:27:54] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[15:27:58] <wyre> apparently it doesn't recognize the argument 'encoding' ... is this because of an older version of logging module? 🤔
[15:28:40] <Yhg1s> wyre: are you using Python 3.9?
[15:29:02] *** Joins: RasnCain_ (~rasncain@gw1.cox.com)
[15:29:19] <wyre> Yhg1s, 3.8.11
[15:29:49] <Yhg1s> wyre: the encoding argument to logging.basicConfig was added in 3.9. See the notes at the end of https://docs.python.org/3/library/logging.html#logging.basicConfig
[15:30:48] <wyre> so ... apparently I could just remove that argument, right?
[15:30:58] <Yhg1s> if you don't actually need it, sure.
[15:31:21] <wyre> Yhg1s, is there some equivalent argument for 3.8?
[15:32:25] *** Joins: rendar (~rendar@user/rendar)
[15:32:44] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[15:33:04] *** Joins: alzgh (~alzgh@user/alzgh)
[15:33:44] <Yhg1s> wyre: not for logging.basicConfig. You would need to not use logging.basicConfig, at least not to configure the FileHandler for 'example.log', if you wanted to explicitly specify the encoding. Or, you can rely on the default encoding.
[15:34:33] *** Joins: swensson (~swensson@host-90-235-18-169.mobileonline.telia.com)
[15:34:39] *** Quits: Wu (~wu@152.red-88-21-0.staticip.rima-tde.net) (Read error: Connection reset by peer)
[15:34:46] *** Joins: Wu (~wu@152.red-88-21-0.staticip.rima-tde.net)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:38:57] *** Quits: spithash (~spithash@user/spithash) (Ping timeout: 276 seconds)
[15:38:58] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Ping timeout: 260 seconds)
[15:39:00] *** Joins: grooverman (~grooverma@177.95.12.14)
[15:39:35] <rindolf> berkhan: pdb allows you to eval python expressions
[15:39:37] *** Joins: spithash (~spithash@user/spithash)
[15:42:54] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[15:44:08] *** Joins: Viewday116 (~Viewday@user/viewday)
[15:44:19] *** Quits: rubemlrm (~rubemlrm@user/rubemlrm) (Quit: The Lounge - https://thelounge.chat)
[15:45:06] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[15:45:23] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[15:45:58] <jinsun> Klinda: ~ does elementwise not in numpy and pandas
[15:45:58] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 260 seconds)
[15:45:58] *** Viewday116 is now known as Viewday11
[15:46:14] <Klinda> jinsun: ??
[15:46:42] <berkhan> rindolf: in vscode plugin ms-python also uses pdb (i guess) but not sure where to look for generated request. I looked deeps in the stack but didn't find maybe you know how to get that information
[15:46:51] <Klinda> as I understand in the end check for > and <
[15:47:21] <Klinda> but why declare something like this?
[15:47:52] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[15:48:04] <rindolf> berkhan: no idea about vscode
[15:48:24] <Helenah> Repiphany, I was falling asleep last night and I did but just to ensure you're thanked and don't feel ignored I studied your last pastebin and then implemented it and it works. Thank you for your time, support and patience. :)
[15:48:31] <Helenah> And hello there rindolf
[15:48:52] *** Joins: acresearch (~acresearc@user/acresearch)
[15:48:58] <Klinda> jinsun: is not the same thing if I use > and < directly without the tilde?
[15:51:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[15:52:23] *** Quits: berkhan (~berkhan@159.146.40.46) (Ping timeout: 268 seconds)
[15:52:25] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[15:53:49] <rindolf> Helenah: hi
[15:54:02] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 240 seconds)
[15:54:06] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.3)
[15:54:39] *** Joins: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr)
[15:54:39] *** Quits: shad (~shad@user/shad) (Ping timeout: 250 seconds)
[15:55:30] *** Joins: akrypha (~akrypha@user/akrypha)
[15:56:59] <Klinda> as I understand maybe jinsun doing this, is more faster?
[16:00:46] *** Joins: Lorthirk (~lorthirk@93-44-176-144.ip98.fastwebnet.it)
[16:01:28] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[16:01:52] *** Joins: xkuru (~xkuru@user/xkuru)
[16:02:09] *** Quits: Lorthirk (~lorthirk@93-44-176-144.ip98.fastwebnet.it) (Client Quit)
[16:02:43] <jinsun> Klinda: nah not about speed, you can replace not with the opposite condtion without not here, but it is not possible always, and sometimes it reads better if you use not
[16:03:00] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[16:03:38] *** Joins: pepper (~pepper@user/pepper)
[16:05:57] *** Quits: delvian (~delvian@41.13.232.54) (Ping timeout: 268 seconds)
[16:09:51] *** Joins: the_lanetly_052 (~the_lanet@185.30.89.29)
[16:11:19] *** Quits: Terexen (~terexen@user/terexen) (Remote host closed the connection)
[16:13:16] *** Quits: akrypha (~akrypha@user/akrypha) (Ping timeout: 256 seconds)
[16:13:41] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[16:13:41] <tga> is there any way of specifying in a type hint that a variable is an object, but otherwise treat it as Any?
[16:14:33] <molt> does anyone know how to get the length and width of an SVG in Python?
[16:14:38] *** Joins: rubemlrm (~rubemlrm@user/rubemlrm)
[16:14:39] <tga> it would help in my case to ensure it's not a dict, but I don't want to get into specifying the exact interface
[16:15:12] *** Joins: zeden (~zeden@user/zeden)
[16:15:50] *** Quits: Andrynet (~Andrynet@186.46.201.139) (Ping timeout: 260 seconds)
[16:15:55] *** Quits: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[16:16:30] *** Joins: sniperwolf (~sniperwol@91.230.98.1)
[16:16:37] <nedbat> tga: there's no such thing as "object but not dict"
[16:16:42] <nedbat> tga: because a dict is an object.
[16:16:47] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[16:17:10] *** Quits: mcpackey (~pm0001@p5dc1cb61.dip0.t-ipconnect.de) (Remote host closed the connection)
[16:17:24] <tga> and we don't get exclusion types
[16:17:42] <tga> I guess I'm stuck with Any until I can clean this up
[16:17:43] *** Joins: Andrynet (~Andrynet@186.46.201.139)
[16:17:48] *** Quits: computeiro (~Wender@191.54.182.247) (Ping timeout: 256 seconds)
[16:18:01] <tga> typing as `object` yells at me for every attribute access
[16:18:06] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[16:18:33] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[16:18:49] <nedbat> tga: why don't you want to define the interface?
[16:19:27] <tga> I was hoping to leave it for later, it's not small
[16:19:37] <tga> Any ftw
[16:21:25] *** Quits: Linux77 (~7Linux7@186.233.183.58) (Ping timeout: 240 seconds)
[16:21:52] *** Joins: delvian (~delvian@41.13.232.67)
[16:22:11] *** Quits: nicholaus04__ (~nicholaus@2607:fb90:e58c:fb6a:3ddf:77ed:0:281) (Remote host closed the connection)
[16:22:39] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[16:23:51] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:24:37] *** Quits: kdc (~kdc@196.211.197.159) (Quit: Leaving)
[16:25:12] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[16:25:18] *** Quits: rubemlrm (~rubemlrm@user/rubemlrm) (Quit: The Lounge - https://thelounge.chat)
[16:25:23] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[16:25:33] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[16:25:52] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Quit: rickybob)
[16:25:52] *** Joins: rubemlrm (~rubemlrm@user/rubemlrm)
[16:25:59] *** Joins: kek_ (~kek_@2a02:168:200f:1f10:dcde:2774:1301:baad)
[16:26:14] <kek_> hi I run a script using python foo.py - is there something like a global error log?
[16:26:16] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[16:26:34] <Yhg1s> kek_: nope.
[16:26:46] <kek_> Yhg1s, thanks
[16:27:26] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Ping timeout: 256 seconds)
[16:28:06] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[16:29:02] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[16:29:08] *** Quits: rubemlrm (~rubemlrm@user/rubemlrm) (Client Quit)
[16:30:16] *** Quits: Andrynet (~Andrynet@186.46.201.139) (Ping timeout: 256 seconds)
[16:30:26] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[16:31:38] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Remote host closed the connection)
[16:31:57] *** Quits: irrgit (~irrgit@192.241.175.183) (Remote host closed the connection)
[16:32:04] *** Joins: Andrynet (~Andrynet@186.46.201.139)
[16:32:27] *** Joins: rubemlrm (~rubemlrm@user/rubemlrm)
[16:32:45] *** Quits: opaca_lux (~opaca_lux@188.241.156.39) (Read error: Connection reset by peer)
[16:34:08] *** Joins: jkent3 (~john@66.44.44.108)
[16:34:10] *** Joins: shad (~shad@user/shad)
[16:34:17] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[16:34:45] *** Quits: ThC27 (ThC27@gateway/vpn/protonvpn/thc27) (Ping timeout: 250 seconds)
[16:35:08] *** Joins: wombawomba (~andre@h95-155-227-157.cust.a3fiber.se)
[16:35:25] *** Quits: rubemlrm (~rubemlrm@user/rubemlrm) (Client Quit)
[16:35:38] <wombawomba> How can I tell if an object is a dict or an array without inspecting the object in any way?
[16:35:42] *** Quits: jkent3 (~john@66.44.44.108) (Client Quit)
[16:35:45] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[16:35:46] *** Joins: irrgit (~irrgit@192.241.175.183)
[16:35:53] <wombawomba> i.e. without looking at types
[16:35:54] *** Joins: theprophet (~theprophe@85.114.228.184)
[16:36:13] *** Joins: rubemlrm (~rubemlrm@user/rubemlrm)
[16:36:37] *** Joins: xkuru (~xkuru@user/xkuru)
[16:36:47] *** Joins: ThC27 (~ThC27@2001:8003:8c8b:e00:3f4a:b666:6210:4f52)
[16:36:54] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[16:37:13] *** Joins: jkent3 (~john@66.44.44.108)
[16:37:57] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Client Quit)
[16:38:04] *** Joins: guenhael1 (~Thunderbi@193.52.208.98)
[16:38:38] *** Quits: guenhael1 (~Thunderbi@193.52.208.98) (Client Quit)
[16:38:50] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[16:39:51] *** Quits: jkent3 (~john@66.44.44.108) (Client Quit)
[16:41:02] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[16:41:20] <jinsun> does isinstance count as not looking at types? then that
[16:41:46] <aniketgm> hey jinsun.
[16:42:02] *** Quits: ThC27 (~ThC27@2001:8003:8c8b:e00:3f4a:b666:6210:4f52) (Ping timeout: 240 seconds)
[16:42:42] <jinsun> aniketgm: hey
[16:42:47] <aniketgm> wombawomba: is there any specific feat, where you don't wanna check types ?
[16:42:59] <aniketgm> I don't see the point.
[16:43:49] <dminuoso> wombawomba: This is the distinction between runtime tagging and static type systems.
[16:44:07] *** Joins: ThC27 (ThC27@gateway/vpn/protonvpn/thc27)
[16:44:40] *** Quits: LimeOn (~user@user/limeon) (Quit: No Ping reply in 180 seconds.)
[16:44:48] *** Quits: rubemlrm (~rubemlrm@user/rubemlrm) (Quit: The Lounge - https://thelounge.chat)
[16:44:52] <jinsun> then the solution to that problem is to just assume it is the "right" type and don't check at runtime
[16:45:41] *** Joins: rubemlrm (~rubemlrm@user/rubemlrm)
[16:46:36] *** Joins: han-solo (~hanish@user/han-solo)
[16:47:05] <leitz> I wonder who to talk to about making the docs.python.org explination for re.sub a bit clearer.
[16:47:09] <Wulf> Is there any good library to extract text from pdf files?
[16:47:16] <jinsun> and to see the type during type checking time, look at the annotation, or do reveal_type(x)
[16:47:28] <bjs> wombawomba: how are you supposed to tell what an object is without looking at the object :P
[16:47:29] <Wulf> leitz: go fix it yourself and open a merge request
[16:47:32] *** Quits: Andrynet (~Andrynet@186.46.201.139) (Ping timeout: 240 seconds)
[16:47:35] *** Joins: VaniaPy (~VaniaPy@79.103.125.76.dsl.dyn.forthnet.gr)
[16:48:02] <han-solo> Wulf: i had some luck with `pdfminer`
[16:48:16] <nedbat> Yhg1s: in a CPython build tree, what are the make targets to rebuild all the C files, but not run configure again? I tried "make clean; make -j", and it somehow started configure again.
[16:48:30] <Wulf> leitz: https://github.com/python/cpython/blob/main/Doc/library/re.rst
[16:48:32] <bjs> leitz: out of interest, what did you want to change ?
[16:48:49] *** Joins: LimeOn (~user@user/limeon)
[16:49:01] <leitz> bjs, just to make the first example simpler, and more to the point. It looks like Perl, not Python.
[16:49:07] <Wulf> han-solo: thanks, I'll give it a try
[16:49:17] <Yhg1s> nedbat: it shouldn't, unless the makefile thinks it needs to be run again (because one of the dependencies of the configure step changed)
[16:49:19] <bjs> ah
[16:49:23] <han-solo> Wulf: have you tried any others ?
[16:49:30] <Wulf> han-solo: nope
[16:49:31] <bjs> perhaps the docs should have more examples in general
[16:49:32] <nedbat> Yhg1s: i was git bisecting, so going back/forth in time
[16:49:33] <aniketgm> leitz: python mailing list can be start.
[16:49:34] *** Joins: Andrynet (~Andrynet@186.46.201.139)
[16:49:36] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[16:49:38] <han-solo> i tried a couple before settling on pfminer i think
[16:49:47] <han-solo> Wulf: Okay
[16:49:59] <han-solo> s/pfminer/pdfminer/
[16:50:04] <Wulf> han-solo: I could write my own for the specific target. But hoping to avoid this :)
[16:50:31] <han-solo> :)
[16:50:36] <leitz> bjs, I agree that docs could use more examples. Part of the challenge, in their defense, is the wide range of reader needs to be met.
[16:50:59] <Yhg1s> nedbat: you _could_ live dangerously and touch config.status manually, but you may end up with outdated configure settings and weird build failures as a result.
[16:51:10] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[16:51:31] <nedbat> Yhg1s: i don't need it often, so I guess a full rebuild is just something to live with.
[16:52:14] *** Joins: vladoski (~foo@2001:b07:add:d406:bd3f:c789:2b11:5b3d)
[16:53:10] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[16:53:38] *** Quits: gitly (~gitly@148.252.129.23) (Ping timeout: 260 seconds)
[16:53:40] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[16:54:38] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:55:07] <Wulf> han-solo: result of "dumppdf -at ..." has 45 MB and a minimal check suggests the desired text is inside the dump. Thanks so far. I'll report back if I can make it work :)
[16:55:22] *** Joins: gitly (~gitly@148.252.133.169)
[16:56:14] <han-solo> Wulf: cool. Thanks
[16:56:15] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[16:56:38] *** Quits: sniperwolf (~sniperwol@91.230.98.1) (Quit: Client closed)
[16:56:50] *** Quits: swensson (~swensson@host-90-235-18-169.mobileonline.telia.com) (Quit: Client closed)
[16:59:42] *** Quits: rendar (~rendar@user/rendar) (Ping timeout: 260 seconds)
[17:02:06] *** Quits: vladoski (~foo@2001:b07:add:d406:bd3f:c789:2b11:5b3d) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:03:45] *** Joins: pycode (~pycode3@2001:b07:5d28:551:8a8b:8f9c:220:4af)
[17:03:59] *** Quits: gitly (~gitly@148.252.133.169) (Ping timeout: 250 seconds)
[17:03:59] *** Quits: Andrynet (~Andrynet@186.46.201.139) (Ping timeout: 250 seconds)
[17:04:04] *** Joins: velgin (~velgin@162.212.106.178)
[17:04:49] *** Joins: vladoski (~foo@2001:b07:add:d406:bd3f:c789:2b11:5b3d)
[17:05:18] *** Quits: remolej (~kenoba@user/kenoba) (Ping timeout: 260 seconds)
[17:05:57] *** Joins: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net)
[17:06:00] *** Joins: gitly (~gitly@185.69.144.149)
[17:06:08] *** Joins: Andrynet (~Andrynet@186.46.201.139)
[17:07:06] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[17:07:40] *** Quits: ThC27 (ThC27@gateway/vpn/protonvpn/thc27) (Ping timeout: 256 seconds)
[17:08:41] *** Quits: aniketgm (~Aniket@49.36.109.129) (Read error: No route to host)
[17:10:35] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[17:10:36] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Read error: Connection reset by peer)
[17:10:55] *** Quits: Andrynet (~Andrynet@186.46.201.139) (Ping timeout: 252 seconds)
[17:10:58] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[17:11:08] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[17:11:16] *** Quits: vladoski (~foo@2001:b07:add:d406:bd3f:c789:2b11:5b3d) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:12:29] *** Joins: Andrynet (~Andrynet@186.46.201.139)
[17:13:20] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[17:13:31] *** Joins: Ecophobia (~Ecophobia@mobile-access-2e8446-62.dhcp.inet.fi)
[17:14:03] *** Joins: aniketgm (~Aniket@49.36.109.129)
[17:17:18] *** Quits: cheeseee (~irrgit@37.120.141.114) (Ping timeout: 256 seconds)
[17:17:52] *** Quits: Andrynet (~Andrynet@186.46.201.139) (Ping timeout: 256 seconds)
[17:18:07] *** Joins: Julian (~tos9@python/site-packages/Julian)
[17:18:12] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[17:18:44] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 268 seconds)
[17:19:08] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[17:19:12] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[17:19:12] <altendky> pyside folks have said they will support android when python supports android.  but i was thinking, python doesn't explicitly support suse or ubuntu or centos, do they?  they just support linux.  is there a specific exclusion made to make android unsupported?
[17:19:31] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[17:19:38] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:19:47] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[17:19:50] *** Joins: Andrynet (~Andrynet@186.46.201.139)
[17:21:04] <Yhg1s> altendky: it's quite a different environment, so it's buildbots, build knowledge, people with sufficient platform knowledge working through bugs and feature requests and PRs.
[17:21:08] <apollo13> altendky: suse/ubuntu/centos are similar enough in most aspects
[17:21:16] <Helion> altendky: IIRC there are either api differences or missing api's.  There was a long BPO ticket about something with python being broken on android, and i dont know if it was ever fixed
[17:21:31] <rindolf> altendky: https://twitter.com/shlomif/status/1363583840640528389
[17:21:38] <apollo13> and then there is also the question of how to actually ship python in an apk
[17:21:58] <apollo13> it is quite a bit overhead and you probably also want good integration with the native (java?) apis
[17:22:17] *** Joins: Klinda (~superleag@user/klinda)
[17:22:34] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 260 seconds)
[17:22:40] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Quit: ERC (IRC client for Emacs 27.1))
[17:22:48] <apollo13> ie running python itself on android is probably easy enough (for some definition of easy) but there is more in the eco system which you'd also want to work (access to notifications, power management etc)
[17:23:18] <altendky> i am aware it is different, thanks.  the question was about the formality and it seems the answer is that there is sufficient difference that it is somewhat implicitly accepted to be a different os.
[17:23:44] <altendky> the concern about distributing an apk seems not relevant given there aren't binaries for 'regular' linux anyways.  https://www.python.org/downloads/release/python-3101/
[17:23:45] <Helion> altendky: there are projects that do take on that support burden, obviously - kivy
[17:23:52] <altendky> pyqt
[17:24:39] *** Joins: a0z1 (~a0z1@185.213.155.160)
[17:25:27] *** Joins: ThC27 (ThC27@gateway/vpn/protonvpn/thc27)
[17:25:30] *** Quits: Ecophobia (~Ecophobia@mobile-access-2e8446-62.dhcp.inet.fi) (Quit: WeeChat 2.8)
[17:25:30] *** Quits: canarts (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:26:18] <Helion> Also, like, python doesn't explicitly support ubuntu, but ubuntu does explicitly support python
[17:26:28] <apollo13> uh that is a stretch :D
[17:26:38] <apollo13> python support on ubuntu is imo subpar *hides*
[17:26:49] *** Joins: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com)
[17:27:11] <apollo13> getting a workable python + pip + venv on ubuntu which isn't patched to death is close to impossible
[17:27:22] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 268 seconds)
[17:27:42] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[17:27:43] *** Joins: emf (~emf@2603-6080-9403-11bf-0000-0000-0000-0007.res6.spectrum.com)
[17:27:43] <Helion> Its really easy ... just >never use one provided by apt<
[17:27:50] *** Joins: Pipip (~Pip@222.184.117.18)
[17:28:05] <grym> ubuntu is, of course, not an OS :D
[17:28:14] <Helion> but that is kinda proving my point, they have their own patch set that they maintain
[17:28:15] <apollo13> I fully agree, and I do not need more than python + pip + venv, but it would be great if at least those building blocks would work
[17:28:26] <grym> apollo13: well, that's why we have pyenv
[17:28:33] <marduk> Why don't they work?
[17:28:51] <grym> marduk: they do, but you have to futz with it a lot
[17:28:53] <apollo13> grym: I honestly never used that and with my current system I never felt the need
[17:29:04] *** Joins: vladoski (~foo@2001:b07:add:d406:bd3f:c789:2b11:5b3d)
[17:29:10] <marduk> grym: in what ways?
[17:29:22] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Quit: guenhael)
[17:29:31] <Helion> marduk: debian based systems tend to break stuff up and patch it so it fits into their apt ideology
[17:29:33] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[17:29:33] <Yhg1s> marduk: they unvendor things in pip and don't ship bits of the stdlib, like venv, by default (until recently, I think)
[17:29:47] *** Joins: fikran (~fikran@user/fikran)
[17:29:51] <marduk> Interesting
[17:29:52] <apollo13> marduk: ubuntu/debian at some point replaced the builtin ensurepip or venv modules with shims that did break other software depending on that to be as provided by python etc
[17:30:31] *** Quits: vladoski (~foo@2001:b07:add:d406:bd3f:c789:2b11:5b3d) (Client Quit)
[17:30:38] <apollo13> like python -mvevn did print "please install python-venv" or similar, which broke stuff in hillarious ways
[17:31:05] *** Quits: xsperry (~xs@user/xsperry) (Remote host closed the connection)
[17:31:16] *** Joins: velgin_ (~velgin@162.212.106.178)
[17:31:30] *** Joins: dez (uid92154@user/dez)
[17:31:57] <grym> hmm.  The Gist is hard to google for
[17:32:36] <Helion> Now, breaking tcl/tk into its own deb makes sense, even on windows thats an optional component
[17:32:43] <kek_> if I leave a function, will the allocated memory get cleaned up?
[17:32:48] <kek_> of local variables
[17:32:54] *** Quits: emf (~emf@2603-6080-9403-11bf-0000-0000-0000-0007.res6.spectrum.com) (Ping timeout: 268 seconds)
[17:33:20] <rindolf> kek_: it may not immediately
[17:33:23] <grym> kek_: when the gc gets around to it
[17:33:29] *** Joins: remolej (~kenoba@user/kenoba)
[17:33:46] *** Quits: velgin (~velgin@162.212.106.178) (Ping timeout: 260 seconds)
[17:33:53] *** Joins: emf (~emf@2620:10d:c091:480::1:ff4b)
[17:34:02] <hexnewbie> kek_: In CPython, in the absence of cyclic references, any object is collected whenever the reference count reaches zero (i.e. the last reference to an object is gone), or if there are cyclic references, whenever the gc runs (or never  if there are __del__ methods)
[17:34:42] <hexnewbie> kek_: So, like, if you kept a reference to the objects in your local variables, they may not be freed when you return from the function. Otherwise, they should be freed almost immediately.
[17:35:25] *** Quits: Pipip (~Pip@222.184.117.18) (Changing host)
[17:35:25] *** Joins: Pipip (~Pip@user/Pipip)
[17:36:32] *** Joins: Zweimer (~Zweimer@2a02:908:d20:26e0:eda1:9abc:dd06:7ba9)
[17:36:34] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Ping timeout: 260 seconds)
[17:37:44] <hexnewbie> kek_: https://bpa.st/XDDA
[17:39:01] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Remote host closed the connection)
[17:39:10] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[17:39:16] <Zweimer> MVC if often explained as one Model, View, Control. I was thinking of spliting the project into different domains first and each of these domains have a model, a view and a control (which is bringing everything together). Would this still be considered MVC per se?
[17:39:23] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[17:39:51] *** Joins: ThePhilgrim (~ThePhilgr@h213-21-116-175.cust.a3fiber.se)
[17:44:13] *** Quits: ThePhilgrim (~ThePhilgr@h213-21-116-175.cust.a3fiber.se) (Client Quit)
[17:44:31] *** Joins: Viewday110 (~Viewday@user/viewday)
[17:44:35] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[17:44:52] *** Joins: ThePhilgrim (~ThePhilgr@h213-21-116-175.cust.a3fiber.se)
[17:45:41] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[17:45:52] *** Quits: Pipip (~Pip@user/Pipip) (Remote host closed the connection)
[17:46:12] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[17:46:12] *** Viewday110 is now known as Viewday11
[17:47:11] *** Quits: Abrax (~Abrax@user/abrax) (Remote host closed the connection)
[17:47:14] <kek_> rindolf, grym hexnewbie ok thanks, seems like I have a memory leak (if one calls it that on python)
[17:47:34] <lesshaste> does anyone understand twitter API? I am trying to learn how to use tweepy. this is perhaps a general twitter API question but.. if I want all the tweets from GB for example, if I used place_country:GB am I right that this only gives me tweets where the tweeter has explicitly put UK in their profile ?
[17:47:35] *** Joins: Abrax (~Abrax@user/abrax)
[17:48:01] <Swayze> you would have to refer to their api doc @ lesshaste
[17:48:04] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[17:48:06] *** Joins: vladoski (~foo@2001:b07:add:d406:bd3f:c789:2b11:5b3d)
[17:48:16] <lesshaste> Swayze, I have but I don't see this question answered
[17:48:17] <kek_> can I explicitly delete it? Like call the gc before I return values or something like that? Or is it just a hint that I do something wrong? I have no structure yet, just a file with a bunch of def foos()
[17:48:32] <Yhg1s> kek_: why do you think you have a memory leak?
[17:48:57] <Swayze> did you check the twitter api doc or the tweepy doc @ lesshaste ?
[17:49:11] <lesshaste> Swayze,  the twitter api docs
[17:49:13] <bss> Zweimer: I would generally consider MVC as a theme and a guideline rather than an exact architecture, so what you're describing seems perfectly in line with that
[17:49:21] *** Quits: vladoski (~foo@2001:b07:add:d406:bd3f:c789:2b11:5b3d) (Client Quit)
[17:49:46] <Zweimer> Right okay.
[17:49:55] <bjs> kek_: Python automatically removes things once you stop using them.  If you make some local variables and don't save them or return them, then they'll be deleted at the end of the function.
[17:50:12] <bjs> You usually don't need to do any explicit work to "clean up" the memory in Python
[17:50:28] <kek_> Yhg1s, I try to generate a big hdf5 file and the memory consumption just went up, which I didn't expect. So I basically removed the hdf part and just did the "data generation part" and I see the memory go up. Basically I have: for i in range(N): data = generate_data(). Now I expect the memory be released once generat_data() returns but since the memory grows, it doesn't => "memory leak".
[17:51:28] <kek_> chacnes are big I just do something dumb. :D
[17:51:43] <Yhg1s> kek_: memory being _used_ does not mean it _leaks_. Also, memory being 'released' is very hard to tell from outside the process. You can't just look at how much was allocated, because that'll usually just be the high water mark.
[17:51:47] <hexnewbie> kek_: If the code isn't private, you can share it (or the non-private portions of it)
[17:51:54] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:52:12] *** Joins: Naan (~Naan@user/naan)
[17:52:30] <Swayze> lesshaste: https://developer.twitter.com/en/docs/tutorials/filtering-tweets-by-location
[17:52:30] <Yhg1s> kek_: if your code looks exactly like that, and there are no other uses of the object returned by 'generate_data()', then you would only have two results of 'generate_data' in memory at once.
[17:53:12] <lesshaste> Swayze, If you read the place_country:  paragraph it doesn't answer the question
[17:53:23] *** Joins: ub1 (~Thunderbi@p548c998b.dip0.t-ipconnect.de)
[17:53:24] *** Joins: ubert1 (~Thunderbi@p200300ecdf1abb7bed76e28c4fd34537.dip0.t-ipconnect.de)
[17:53:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[17:54:15] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 250 seconds)
[17:54:46] *** Quits: ub (~Thunderbi@p200300ecdf0ba2c0b11d357caa48ef17.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[17:54:48] <Swayze> i'll admit its not very helpful indeed. the definition of place does not clarify how a tweet is categorised into these "places"
[17:54:55] <kek_> hexnewbie, ofc I just try to isolate it more.
[17:55:01] <kek_> might ask in a minute
[17:55:14] *** Quits: ubert (~Thunderbi@p200300ecdf0ba2c03cbcafca2ab2631d.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[17:55:14] *** ub1 is now known as ubert
[17:55:17] <Swayze> lesshaste: probably best to look at some return json and see examples of places data
[17:55:19] <kek_> Yhg1s, yeah it might not "leak" but simply works as intended. Chances are high something happens which I simply don't understand.
[17:55:30] <lesshaste> Swayze, that's an interesting idea
[17:55:39] <Yhg1s> kek_: from what you describe, it's just "program uses memory".
[17:55:45] <lesshaste> Swayze,  maybe I should look up myself on twitter
[17:55:54] <Yhg1s> kek_: if you loop twice as much, does the process use twice as much memory?
[17:56:05] *** Parts: VaniaPy (~VaniaPy@79.103.125.76.dsl.dyn.forthnet.gr) ()
[17:57:23] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi)
[17:58:01] <kek_> Yhg1s, gonna check it, I'm currently trying to isolate it and get it as simple as possible but the memory consumption is quit sure depending on the iteration size.
[17:59:21] *** Joins: goldfish (~goldfish@user/goldfish)
[18:00:24] *** Joins: odoood (~odoood@2601:c8:c003:a550::5)
[18:00:33] *** Quits: Andrynet (~Andrynet@186.46.201.139) (Ping timeout: 250 seconds)
[18:00:56] *** Quits: odoood (~odoood@2601:c8:c003:a550::5) (Remote host closed the connection)
[18:01:42] *** Quits: ThePhilgrim (~ThePhilgr@h213-21-116-175.cust.a3fiber.se) (Remote host closed the connection)
[18:02:41] *** Joins: Andrynet (~Andrynet@186.46.201.139)
[18:03:19] *** Joins: phonemic (~phonemic@193.56.117.50)
[18:04:37] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Read error: Connection reset by peer)
[18:04:49] *** Joins: odoood (~odoood@2601:c8:c003:a550::5)
[18:04:59] *** Quits: BlessJah (~BlessJah@user/blessjah) (Remote host closed the connection)
[18:05:40] *** Quits: odoood (~odoood@2601:c8:c003:a550::5) (Remote host closed the connection)
[18:05:50] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:06:04] *** Joins: odoood (~odoood@2601:c8:c003:a550::5)
[18:06:13] *** Quits: ThC27 (ThC27@gateway/vpn/protonvpn/thc27) (Quit: ThC27)
[18:06:17] *** stella is now known as stenna
[18:06:32] <graingert[m]> <kek_> "Yhg1s, I try to generate a big..." <- Maybe pyobjgraph can help?
[18:06:36] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 265 seconds)
[18:06:40] *** Quits: chele (~chele@user/chele) (Quit: Leaving)
[18:06:44] *** Joins: vladoski (~foo@2001:b07:add:d406:bd3f:c789:2b11:5b3d)
[18:07:58] *** Quits: vladoski (~foo@2001:b07:add:d406:bd3f:c789:2b11:5b3d) (Client Quit)
[18:08:02] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:9c69:dee4:375a:463)
[18:08:32] *** Joins: BlessJah (~BlessJah@user/blessjah)
[18:08:34] <kek_> graingert[m], no idea what it is but I try to write a hdf file with h5py using the sec2 driver. As far as I know it shouldn't store the data in memory, mabyeb uffer it. (but the data is bigger than what I expect it to write to hdf anyway, so somethings off)
[18:08:35] *** Quits: kek_ (~kek_@2a02:168:200f:1f10:dcde:2774:1301:baad) (Remote host closed the connection)
[18:09:12] *** Joins: dohtem (uid524096@user/dohtem)
[18:09:17] *** Joins: kek_ (~kek_@2a02:168:200f:1f10:dcde:2774:1301:baad)
[18:09:27] <kek_> sry dc'd, just killed my system
[18:10:24] *** stenna is now known as stella
[18:11:01] *** flooded is now known as _flood
[18:12:13] *** Joins: vladoski (~foo@2001:b07:add:d406:bd3f:c789:2b11:5b3d)
[18:13:22] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[18:13:42] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[18:15:03] *** Quits: Andrynet (~Andrynet@186.46.201.139) (Ping timeout: 250 seconds)
[18:16:34] *** Joins: thiras_ (~thiras@user/thiras)
[18:17:13] *** Joins: Andrynet (~Andrynet@186.46.201.139)
[18:17:57] *** Quits: nme (~nme@gateway/vpn/pia/nme) (Remote host closed the connection)
[18:17:57] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:19:08] *** Joins: ThePhilgrim (~ThePhilgr@h213-21-116-175.cust.a3fiber.se)
[18:19:22] *** Joins: the_lanetly_052_ (~the_lanet@185.30.91.139)
[18:20:13] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[18:20:32] *** Quits: Zweimer (~Zweimer@2a02:908:d20:26e0:eda1:9abc:dd06:7ba9) (Quit: Client closed)
[18:20:41] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[18:21:24] *** Quits: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (Remote host closed the connection)
[18:22:14] *** Quits: the_lanetly_052 (~the_lanet@185.30.89.29) (Ping timeout: 268 seconds)
[18:22:58] <kek_> Okay so I have no idea. Can you see anything that leads to an accumulation of memory here: https://bpa.st/7RWA ?
[18:23:20] *** Quits: phonemic (~phonemic@193.56.117.50) (Quit: WeeChat 3.3)
[18:23:53] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Ping timeout: 252 seconds)
[18:24:06] *** Joins: Elzington (~Elzington@68.235.43.38)
[18:24:54] *** Joins: bomzh1018 (~user@176.52.42.140)
[18:25:21] <SnoopJ> kek_, nothing looks particularly amiss there, if you're seeing a leak it might be in one of the libraries you're calling into
[18:26:18] *** Joins: mactron (~mactron@cpe-146-212-96-217.dynamic.amis.net)
[18:26:29] <kek_> SnoopJ, yeah, that's the next thing I'd look into. I'm just a hard python noob so thought maybe somethings going on I don't get. thanks
[18:26:34] <SnoopJ> or possibly even a not-leak, but some kind of internal cache
[18:27:16] <SnoopJ> kek_, you're seeing steady growth in the resident set of this program during execution?
[18:29:28] *** Quits: ThePhilgrim (~ThePhilgr@h213-21-116-175.cust.a3fiber.se) (Remote host closed the connection)
[18:29:30] *** Joins: bloody (~bloody@user/bloody)
[18:30:20] <kek_> SnoopJ, resident set is the SET column in top right? VIRT and SET grows constantly.
[18:30:25] *** Quits: nichlas (uid374954@id-374954.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[18:30:34] *** Joins: ejjfunky (~ejjfunky@125.163.60.19)
[18:30:38] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Read error: Connection reset by peer)
[18:30:58] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 256 seconds)
[18:31:45] *** Quits: Andrynet (~Andrynet@186.46.201.139) (Ping timeout: 250 seconds)
[18:31:53] *** Joins: ThePhilgrim (~ThePhilgr@h213-21-116-175.cust.a3fiber.se)
[18:31:58] *** Quits: ThePhilgrim (~ThePhilgr@h213-21-116-175.cust.a3fiber.se) (Remote host closed the connection)
[18:32:20] <SnoopJ> kek_, it should be RES in top. VIRT is the size of virtual memory, which isn't terrible indicative here
[18:32:21] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[18:33:03] <SnoopJ> maybe it's called SET in some other version of top, though. I would consult your local manual, I've not seen that column name before and it isn't part of the one I have
[18:33:05] <kek_> SnoopJ, ah yeah RES, sorry. NO idea why I wrote SET.
[18:33:09] <SnoopJ> ah
[18:33:42] *** Joins: Andrynet (~Andrynet@186.46.201.139)
[18:34:33] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:34:54] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-70-97.poda.cz) (Ping timeout: 260 seconds)
[18:35:02] <kek_> I mean if you are bored you can easily get it working by creating a venv like here https://github.com/gwastro/ml-mock-data-challenge-1/wiki/Provided-Software#requirements (should work with any python >= 3.7 - I use 3.7 atm) but otherwise I'll just go and ask the maker of the library or investigate it myself.
[18:35:06] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-64ec-ce3a-a9e2-346d.res6.spectrum.com)
[18:35:08] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b) (Quit: Leaving)
[18:35:50] <lesshaste> what is the correct way to do plt.Axes.set_major_locator(mdates.MonthLocator(bymonth=(1, 7))) ?
[18:35:56] <kek_> actually I think you could just do "pycbc with pip". but anyway, thanks for the help :)
[18:36:01] *** Joins: Julian (~tos9@python/site-packages/Julian)
[18:36:07] <lesshaste> plt.Axes doesn't have an attribute of that name
[18:36:11] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b)
[18:36:33] *** Quits: alzgh (~alzgh@user/alzgh) (Ping timeout: 256 seconds)
[18:37:38] <SnoopJ> kek_, I'm guessing it's PyCBC, but I don't really see any issues on their tracker that seem applicable. It would help to know more specifically what is causing the memory usage, you could hunt that down with the tracemalloc module in stdlib (the docs have some helpful examples), or maybe a memory profiler like pympler.
[18:38:11] *** Joins: mimmy (~mimmy@184.94.118.194)
[18:38:27] *** Quits: Julian (~tos9@python/site-packages/Julian) (Client Quit)
[18:39:53] <kek_> SnoopJ, I checked the lalSuite tracker. It has 2 year old issues so chances are high they just have a memory leak. I might try to implement the same thing in C directly if I can't track it down with tracemalloc. Gonna try that :)
[18:40:11] <kek_> lalsuite is the actual lib usedi n the end to generate the data.
[18:41:09] <kek_> It would just very surprise me because quit a lot of people will generate a ton of data using this lib.
[18:42:49] *** Joins: xsperry (~xs@user/xsperry)
[18:44:25] *** Quits: wovixo (~wovixo@128.104.205.49) (Read error: Connection reset by peer)
[18:46:30] <lesshaste> how do I do this but with only one plot? https://bpa.st/IJAQ That is I don't want subplots but I still want to  use
[18:46:30] <lesshaste>     
[18:46:35] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b) (Quit: Leaving)
[18:46:37] <lesshaste> mdates.ConciseDateFormatter
[18:47:30] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 260 seconds)
[18:48:29] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[18:48:40] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[18:49:25] <lesshaste> I gave up and used fig = plt.figure()
[18:49:25] <lesshaste> ax = fig.add_subplot(1, 1, 1)
[18:49:32] <lesshaste> I wonder if that is really necessary
[18:49:53] *** Joins: powftw (uid448161@id-448161.lymington.irccloud.com)
[18:50:33] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b)
[18:51:01] *** Quits: odoood (~odoood@2601:c8:c003:a550::5) (Ping timeout: 252 seconds)
[18:51:30] <ejjfunky> hey all, when im passing an array into a function, is it by reference or values?
[18:51:43] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[18:51:46] *** Quits: velgin_ (~velgin@162.212.106.178) (Quit: okbye)
[18:52:09] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-71-92.poda.cz)
[18:52:22] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[18:52:45] <Repiphany> There is never passing values
[18:52:53] *** Quits: vladoski (~foo@2001:b07:add:d406:bd3f:c789:2b11:5b3d) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:52:54] <SnoopJ> ejjfunky, it's neither: https://web.archive.org/web/20120201234829/https://effbot.org/zone/call-by-object.htm
[18:53:02] *** Joins: djhankb (~djhankb@208.113.164.68)
[18:53:23] <ejjfunky> so, if i do, arr=[1,2,3]
[18:53:25] <bjs> ejjfunky: by reference is probably the closer of the two,  but Python doesn't work the same as those other languages
[18:53:44] <ejjfunky> def add(arr): arr.append(4)
[18:53:49] <SnoopJ> "call by object reference" is not unreasonable but I think still misleading because names are a reference in a very different sense than the asker of this question is usually used to
[18:54:06] <ejjfunky> when i do print(arr), i got [1,2,3,4] when called outside function?
[18:54:20] <powftw> hey, can somebody tell what is the issue with my logic
[18:54:22] <bjs> ejjfunky: you did? that sounds correct yeah
[18:54:29] <powftw> https://www.irccloud.com/pastebin/BYebQ0aI/
[18:54:39] <ejjfunky> ok. just wanna make sure. thanks.
[18:55:09] <powftw> why is  the issue with my logic? why unboundLocalerror?
[18:55:34] <bjs> powftw: inside a function you can't mix two different variables with the same name; here you're going essentially `def f(): print(x); x = 42`  <- this function will always fail
[18:55:52] <bjs> as it's trying to mix a local "x" (on the assignment) and a non-local/global "x" (on the print).
[18:56:02] <powftw> fixed a typo
[18:56:06] <powftw> https://www.irccloud.com/pastebin/qIzPPJs7/
[18:56:17] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b) (Quit: Leaving)
[18:56:17] <ejjfunky> u can have function within function
[18:56:22] <ejjfunky> cant*
[18:56:26] <bjs> ejjfunky: sure you can
[18:56:48] *** nickdaly-away is now known as nickdaly
[18:57:19] <bjs> powftw: you might want to say `nonlocal new_res` inside the `def bar`
[18:57:19] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b)
[18:57:28] <bjs> powftw: but also maybe you just want a class and make these things attributes.
[18:58:06] <powftw> i need a class to use ```nonlocal new_res```` ?
[18:58:14] <bjs> powftw: no those were two different suggestions
[18:58:22] <bjs> either (use nonlocal) or (make a class)
[18:58:25] <powftw> let me try
[18:58:50] <bjs> powftw: if you're trying to nest functions and "share" variables between different calls or different functions then I usually suggest just having a class
[18:59:55] <powftw> https://www.irccloud.com/pastebin/A63syGHl/
[19:00:01] <powftw> do you mean this?
[19:00:09] <powftw> what about line 18
[19:00:21] <powftw> groupby(new_res)?
[19:00:22] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b) (Client Quit)
[19:00:22] <bjs> powftw: the nonlocal needs to come first
[19:01:15] *** Joins: Linux77 (~kvirc@186.233.183.58)
[19:01:17] <bjs> the nonlocal applies to the entire function for that name, so it should come at the start.
[19:01:26] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b)
[19:01:36] <ejjfunky> u can either pass new_res to bar(new_res) or declare global new_res before using it
[19:01:48] <powftw> bjs: thank you very much, man
[19:02:16] <bjs> powftw: but you should consider using a class because then you can have self.new_res if you want to share it between calls/functions
[19:02:43] *** Joins: mimmy_ (~mimmy@66.115.145.34)
[19:02:49] <powftw> if i use classes, i don't have to use global variables?
[19:02:52] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b) (Remote host closed the connection)
[19:03:03] <bjs> powftw: you're not using global variables at all here
[19:03:05] <ejjfunky> class is good too using self.new_res
[19:03:08] <bjs> so I'm not sure what you mean
[19:03:27] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b)
[19:03:32] *** Quits: mimmy (~mimmy@184.94.118.194) (Ping timeout: 240 seconds)
[19:03:58] <powftw> bjs: say i have many functions, so, if i have to access a varibale inside foo(), i would have to make that variable global first and then call it inside bar()
[19:04:15] <bjs> powftw: well no, like I just said you can use nonlocal
[19:04:22] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b) (Read error: Connection reset by peer)
[19:04:24] *** Joins: TML (~tml@user/tml)
[19:04:32] <bjs> powftw: but I suggest using a class here and making foo and bar methods, it's just nicer
[19:04:34] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b)
[19:04:59] <ejjfunky> why dont u pass bar(my_lis, my_res):
[19:05:15] *** Joins: akk (~akk@75.161.146.115)
[19:05:29] <powftw> using nonlocal, i could call varibles in one function inside another?
[19:05:52] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b) (Read error: Connection reset by peer)
[19:05:55] <bjs> powftw: inside `bar` you call foo() already and it should work
[19:06:05] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b)
[19:06:38] *** Quits: Andrynet (~Andrynet@186.46.201.139) (Ping timeout: 260 seconds)
[19:07:09] <ejjfunky> i wont because my_lis and new_res is outside the bar function
[19:07:22] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b) (Read error: Connection reset by peer)
[19:07:22] <bjs> ejjfunky: you wont what?
[19:07:25] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[19:07:29] <ejjfunky> it*
[19:07:34] <bjs> ejjfunky: what won't work?
[19:07:34] *** Joins: subopt (~subopt@2603-8081-2302-459a-058d-bdb4-f8fd-81ec.res6.spectrum.com)
[19:07:36] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b)
[19:07:43] *** Quits: mimmy_ (~mimmy@66.115.145.34) (Ping timeout: 250 seconds)
[19:07:48] *** Joins: vladoski (~foo@2001:b07:add:d406:bd3f:c789:2b11:5b3d)
[19:08:31] *** Joins: Andrynet (~Andrynet@186.46.201.139)
[19:08:52] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b) (Read error: Connection reset by peer)
[19:09:02] *** Joins: mimmy_ (~mimmy@184.94.118.194)
[19:09:05] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b)
[19:09:07] <bjs> powftw: see for example https://bpa.st/6SIQ
[19:09:53] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[19:11:21] <powftw> bjs: lline-9 why not say nonlocal l
[19:11:26] <bjs> powftw: if you want to read the non-local or global variable (including calling it if it's a function) you can just do it (like in my `foo`);  if you want to *assign* to it, you need to tell Python you want to assign to the nonlocal or global one (with the `nonlocal` or `global` keywords)
[19:11:46] <powftw> lline-9 why not say ```nonlocal l```
[19:11:59] <bjs> powftw: because `l` is a local variable (it's a parameter to the function)
[19:12:06] *** Quits: Andrynet (~Andrynet@186.46.201.139) (Read error: Connection reset by peer)
[19:12:19] <powftw> well, l (param)has x
[19:12:32] *** Joins: kosh (~kosh@user/kosh)
[19:12:41] <powftw> so, nonlocal l means nonlocal x
[19:12:42] <powftw> ?
[19:12:50] <powftw> i thought its how works
[19:12:51] <bjs> powftw: no
[19:12:51] *** Joins: rendar (~rendar@user/rendar)
[19:12:55] <bjs> l != x
[19:13:05] *** Quits: Linux77 (~kvirc@186.233.183.58) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[19:13:08] <bjs> they are different variables, they might happen to refer to the same object
[19:13:32] <powftw> now i dunno what i dunno
[19:13:34] <bjs> powftw: "x" is a variable in the main function,  "l" is a local variable in "baz"
[19:13:43] <powftw> i mean, i learnt that way
[19:13:53] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b) (Client Quit)
[19:14:45] <powftw> let me look into this..
[19:14:46] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b)
[19:15:02] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b) (Client Quit)
[19:15:07] <bjs> powftw: if you want to assign to "x" (the variable in "main") from inside "baz" then you need to tell Python that's what you want to do by telling it "nonlocal x"
[19:15:29] <bjs> i.e. "don't make a new variable also called 'x' in this function, just overwrite the one in the parent function"
[19:15:53] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 268 seconds)
[19:16:04] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b)
[19:16:05] *** Quits: vladoski (~foo@2001:b07:add:d406:bd3f:c789:2b11:5b3d) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:16:13] <bjs> it's the same as the `global` keyword except instead of pointing at the global variable, it points to the one in the "parent" function scope
[19:17:05] *** Joins: vladoski (~foo@2001:b07:add:d406:bd3f:c789:2b11:5b3d)
[19:17:33] <SnoopJ> (or that thing's parent, or...)
[19:17:46] <powftw> and if nothing inside parent fn scope, it takes the one ourside the scope
[19:17:46] <SnoopJ> nonlocal is "somewhere above here, but *not* global"
[19:17:47] <powftw> ?
[19:17:56] *** Joins: Andrynet (~Andrynet@186.46.201.139)
[19:18:01] *** Quits: delvian (~delvian@41.13.232.67) (Quit: Leaving)
[19:18:16] <bjs> powftw: technically it finds the "closest" local variable with that name
[19:18:25] <SnoopJ> or hm, am I wrong about that, is it exclusively the enclosing scope?
[19:18:46] *** Quits: tim__ (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Read error: Connection reset by peer)
[19:18:52] <SnoopJ> oh phew I had it right: "in the nearest enclosing scope excluding globals"
[19:18:58] <bjs> Yes you are right
[19:19:18] <powftw> bjs:  thank you, again!
[19:20:29] <powftw> can i say this? i spent 3 hours just to figure out my mistake
[19:20:39] <powftw> i should have asked here before..
[19:20:45] <powftw> it seem too much
[19:20:57] *** Joins: wovixo (~wovixo@128.104.205.49)
[19:21:05] <powftw> 3 hrs straight...
[19:21:19] *** Joins: damonlynch (~ngaio@static-68-235-44-26.cust.tzulo.com)
[19:21:55] *** Quits: aniketgm (~Aniket@49.36.109.129) (Read error: No route to host)
[19:22:04] <bjs> powftw: one thing I find useful is to "shrink" down the code, to a smaller bit of code with the same problem
[19:22:31] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b) (Quit: Leaving)
[19:22:32] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Ping timeout: 256 seconds)
[19:22:38] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca)
[19:23:33] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b)
[19:25:00] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b) (Read error: Connection reset by peer)
[19:25:14] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b)
[19:25:35] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[19:26:20] *** Joins: delvian (~delvian@41.13.232.67)
[19:26:21] *** Quits: vladoski (~foo@2001:b07:add:d406:bd3f:c789:2b11:5b3d) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:26:26] *** Joins: odoood (~odoood@2601:c8:c003:a550::5)
[19:26:39] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:58c7:6059:f9c3:249b) (Remote host closed the connection)
[19:26:53] <ejjfunky> bjs, good examples. i learnt something today
[19:27:39] *** Joins: d00gy (~d00gy@user/d00gy)
[19:29:48] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[19:31:08] *** Joins: vladoski (~foo@2001:b07:add:d406:bd3f:c789:2b11:5b3d)
[19:32:14] *** Joins: HiccupJul (~HiccupJul@cpc122682-reig6-2-0-cust39.6-3.cable.virginm.net)
[19:32:25] <HiccupJul> is there a point in using pathlib if i am only writing files to the current directory?
[19:32:35] <HiccupJul> or will all operating systems cope fine with those paths?
[19:33:07] <ejjfunky> HiccupJul, if it's current directory, you can leave out the pathlib
[19:33:09] *** Quits: thiras_ (~thiras@user/thiras) (Ping timeout: 268 seconds)
[19:33:24] <HiccupJul> no issues with encoding/special characters or anything like that?
[19:33:31] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[19:33:35] <ejjfunky> i dont think so
[19:33:47] *** Quits: AM (~techman@213.216.208.108) (Ping timeout: 256 seconds)
[19:33:56] <HiccupJul> i guess as long as i am not using special characters in my own filenames, and the libraries/subprocess i'm using aren't, then it will be fine
[19:34:29] <ejjfunky> yea, i think so too
[19:35:18] *** Joins: jdmark2 (~jdmark@user/jdmark)
[19:35:28] *** Joins: AM (~techman@87-94-110-75.bb.dnainternet.fi)
[19:35:36] *** Quits: vladoski (~foo@2001:b07:add:d406:bd3f:c789:2b11:5b3d) (Client Quit)
[19:36:27] *** Joins: superboot (~agentgasm@user/superboot)
[19:36:29] *** Quits: zepolen_ (~zepolen@ppp-94-66-223-145.home.otenet.gr) (Ping timeout: 252 seconds)
[19:37:11] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[19:37:45] *** Joins: twobitsprite (~twobitspr@195.181.171.248)
[19:38:30] <twobitsprite> in celery, what does app.task(bind=True) do? It's shown in example code a few times in the docs, but never explained or mentioned in the API reference
[19:39:07] *** Joins: fikran (~fikran@user/fikran)
[19:39:25] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[19:39:32] *** Quits: jdmark (~jdmark@user/jdmark) (Ping timeout: 256 seconds)
[19:39:37] *** Joins: MockingMoniker (~MockingMo@ip72-201-253-44.ph.ph.cox.net)
[19:40:02] *** Joins: humberto1 (~humbertow@187.202.191.5)
[19:40:15] <bjs> twobitsprite: https://docs.celeryproject.org/en/stable/userguide/tasks.html#example  like here?
[19:40:30] <dminuoso> ```The bind argument to the task decorator will give access to self (the task type instance).```
[19:40:32] <leitz> if "j_data" is a dict, and has a key "key", shouldn't this write the dict as the value in jobs_data?     jobs_dict[j_data['key']] = j_data
[19:40:46] *** Joins: neverfindme (~hayden@158.123.160.43)
[19:40:57] <dminuoso> ```The bind argument means that the function will be a “bound method” so that you can access attributes and methods on the task type instance.```
[19:41:17] <MockingMoniker> So, I'm working with WLST which is based on Jython which is based on Python 2.x and I want to import JSON and work with it. Is there some way I can shoehorn JSON stuff? Can I call wlst from Python in some way and pass a set to it?
[19:41:18] <dminuoso> Right above https://docs.celeryproject.org/en/stable/userguide/tasks.html#logging
[19:41:31] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[19:42:10] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[19:42:11] *** Quits: grandrew (~grandrew@2600:1700:42f3:9180:f22f:74ff:feac:90a3) (Read error: Connection reset by peer)
[19:42:46] <twobitsprite> bjs, dminuoso: so, basically you have access to the task instance itself?
[19:42:57] *** Joins: rsx (~dummy@ppp-188-174-159-54.dynamic.mnet-online.de)
[19:43:10] <bjs> twobitsprite: that's what the docs say
[19:43:19] *** Quits: hudo (~hhudo_@mail.allm-elektro.de) (Quit: Leaving)
[19:43:30] <bjs> but indeed I can't find it in the API reference
[19:43:38] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:44:05] *** Joins: Auron (Auron956@user/auron)
[19:44:05] *** Joins: Viewday117 (~Viewday@user/viewday)
[19:44:16] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[19:44:32] *** Quits: wombawomba (~andre@h95-155-227-157.cust.a3fiber.se) (Read error: Connection reset by peer)
[19:46:06] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 268 seconds)
[19:46:07] *** Viewday117 is now known as Viewday11
[19:46:10] <twobitsprite> yeah, that's why I'm confused. I'm mostly curious because in some existing code I'm looking at, it seems like someone was just copy and pasting examples without reason. so they use bind=True, and accept a "self" argument that's never used
[19:46:37] *** Joins: ozoned (~odoood@2601:c8:c003:a550::5)
[19:46:51] *** Joins: pigweed (~pigweed@97.119.229.83)
[19:46:56] *** Quits: odoood (~odoood@2601:c8:c003:a550::5) (Read error: Connection reset by peer)
[19:47:22] *** Joins: jmd (~user@de.cellform.com)
[19:47:27] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[19:47:47] *** Quits: ozoned (~odoood@2601:c8:c003:a550::5) (Client Quit)
[19:48:10] <bjs> twobitsprite: the docs for task() is https://docs.celeryproject.org/en/stable/reference/celery.html#celery.Celery.task and it has *args and **kwargs and it just points to https://docs.celeryproject.org/en/stable/userguide/tasks.html#task-options which doesn't mention Task.bind specifically
[19:49:14] <twobitsprite> bjs: yeah, but it does show it in a few examples
[19:49:59] <twobitsprite> anyways, I'm assuming that if the task function doesn't make use of "self" it's safe to just remove it and the bind=True param, right?
[19:50:12] <bjs> twobitsprite: I would guess
[19:50:23] <MockingMoniker> twobitsprite, there's a humorous story written by an expert coder who found out why you cannot run two different pieces of software because they were using a mutex based on the global instance of .NET or something.
[19:50:27] *** Joins: aniketgm (~Aniket@49.36.109.129)
[19:50:33] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:51:34] <twobitsprite> MockingMoniker: you think this might be one of those instances? :P
[19:51:53] <MockingMoniker> Why? Because there's a website that has an answer that uses it, and while the answer has been updated, it's still in the history, which lead to another effect for which I forget.
[19:52:26] <MockingMoniker> twobitsprite, it's surely possible... maybe try taking a piece of the questionable code and searching for it literally to see if you get a question with an answer with that code literally.
[19:52:34] *** Quits: Andrynet (~Andrynet@186.46.201.139) (Ping timeout: 256 seconds)
[19:52:42] <twobitsprite> MockingMoniker: ahh, I see what you're saying... yeah, copypasta code awful
[19:52:58] *** Quits: ubert1 (~Thunderbi@p200300ecdf1abb7bed76e28c4fd34537.dip0.t-ipconnect.de) (Remote host closed the connection)
[19:53:19] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:53:23] <MockingMoniker> I was told something that came across super cynical, that online blogs have bad code because those bloggers will post something that was hard for them.
[19:53:40] <twobitsprite> MockingMoniker: pretty sure they just copied the "def" line from the docs
[19:53:46] <MockingMoniker> Another very cynical reality is that a lot of people will make something that works, and they will stop caring at that point.
[19:54:03] <twobitsprite> yep
[19:54:33] *** Joins: Andrynet (~Andrynet@186.46.201.139)
[19:54:45] <MockingMoniker> I'll be fair, coding is hard, and there's no way to know how long to take. It's hard to know if you are truly coding efficiently or if you're frolicking.
[19:55:00] <leitz> Ah, solved the dict issue.
[19:55:34] <twobitsprite> one of my earlier jobs as a sysadmin, there was a guy who apparently had saved a bunch of code from a previous job, and was just copy-pasting it into the code, then mucking around with it until it kinda worked
[19:55:49] <MockingMoniker> There's no way to know if code is junky unless the person who reviews it is sophisticated.
[19:55:49] <grym> twobitsprite: ah, yes, you've met another programmer then
[19:56:14] <leitz> Anyone else see "CoC" in the welcome blurb, and wonder who is playing Call of Cthulhu?
[19:56:22] <twobitsprite> when the management found out he was fired immediately and forcibly kicked out of the building. it was a pretty big scene
[19:56:39] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 252 seconds)
[19:56:52] <MockingMoniker> A lot of times it's someone who lies on their resume who gets the job because the person who did the hiring has expectations that do not jive with reality.
[19:57:08] <MockingMoniker> I've also known people who took all day to do something trivial and then started dominating you.
[19:57:29] <twobitsprite> there are all kinds of shitty people
[19:57:41] <MockingMoniker> Maybe it's the Webber philosophy of work management coming back to haunt us... because some people cannot be trusted.
[19:58:13] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 240 seconds)
[19:58:49] *** Joins: jmd (~user@de.cellform.com)
[19:58:54] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:58:56] <MockingMoniker> My philosophy is I don't care if you're stupid or that you suck, but that you're willing to learn. I also expect respect for my skill and capacity. If you cannot respect me or if you're not willing to learn, I don't like you unless you are someone from whom I may learn.
[19:59:06] <MockingMoniker> I call this the Tao of IT.
[19:59:22] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[19:59:50] *** Joins: jmd (~user@de.cellform.com)
[20:00:13] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[20:00:26] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[20:00:27] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[20:01:14] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: SO LONG SUCKERS!)
[20:02:51] <MockingMoniker> I guess there's not a whole lot of advice out there for those who want to call one Python implementation from another.
[20:03:36] *** Joins: sudomann (~sudomann@98.219.211.182)
[20:03:48] <kek_> aI'd like to use MPI so I looked at mpi4py but it seemd it initializes MPI the moment it gets imported. Does anyone know how I can use MPI only partly like one usually does? I don't really know how I should work with it being initialized from the get go.
[20:04:12] *** Quits: HiccupJul (~HiccupJul@cpc122682-reig6-2-0-cust39.6-3.cable.virginm.net) (Quit: Leaving)
[20:04:42] <SnoopJ> kek_, can you say more about what "only partly" means to you?
[20:05:33] *** Quits: beli6147 (~Thunderbi@174.128.60.162) (Ping timeout: 250 seconds)
[20:06:17] *** Joins: stonkey (~stonkey@user/stonkey)
[20:07:05] *** Quits: Andrynet (~Andrynet@186.46.201.139) (Ping timeout: 250 seconds)
[20:07:18] <SnoopJ> MockingMoniker, can you restate your question? You want to use the stdlib `json` library in an interpreter that predates it, or..?
[20:07:35] *** Joins: greedom (~greedom@dynamic-089-204-155-084.89.204.155.pool.telefonica.de)
[20:08:19] <kek_> SnoopJ, Usually I initialize MPI, do some stuff, then finalize it. before and after my program is just serial. Why does mpi4py init mpi directly? How do people set up their stuff before parallelizing? Do they just go if rank == 0: doSerialStuff() and add a barrier or what?
[20:09:01] *** Joins: Andrynet (~Andrynet@186.46.201.139)
[20:10:21] *** Joins: humbertowoody (~humbertow@187.202.191.5)
[20:11:21] *** Joins: jmd (~user@de.cellform.com)
[20:11:36] <SnoopJ> kek_, yea I think the normal pattern is to run your programs with mpiexec and check the rank. It looks like you can tell it not to initialize at import with an rc file or the MPI4PY_RC_INITIALIZE environment variable: https://mpi4py.readthedocs.io/en/stable/mpi4py.html?highlight=initialize#envvar-MPI4PY_RC_INITIALIZE
[20:11:41] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[20:12:01] <SnoopJ> see also https://mpi4py.readthedocs.io/en/stable/mpi4py.html#runtime-configuration-options
[20:12:02] *** Quits: ihristov (~ihristov@85.187.46.226) (Quit: Connection closed)
[20:13:02] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[20:13:08] <kek_> SnoopJ, ah I just read the note that said "MPI_Init() or MPI_Init_thread() is actually called when you import the MPI module from the mpi4py package" and assumed you can't configure it. haha, I'm an idiot. thanks a lot for finding reading the manual for me :p
[20:13:09] *** Quits: humberto1 (~humbertow@187.202.191.5) (Ping timeout: 252 seconds)
[20:13:18] <leitz>  Can you pprint to a file?
[20:14:12] <SnoopJ> leitz, yes, pass the file object as the `stream` argument
[20:14:12] *** Quits: greedom (~greedom@dynamic-089-204-155-084.89.204.155.pool.telefonica.de) (Read error: Connection reset by peer)
[20:14:36] <novapy> Can a python script be used in a pipeline? If so, how?
[20:14:47] <grym> novapy: what's a script, what's a pipeline
[20:14:55] <SnoopJ> kek_, as far as 'why' it's done that way, presumably it's to make it friendlier for people who don't really want to muck around in all the details of MPI, and power users can opt in to all that fussiness
[20:15:10] *** Joins: bob518 (~bob518@2603-7080-af03-588a-585c-a87b-e51e-6fa1.res6.spectrum.com)
[20:15:35] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[20:15:44] <bob518> anybody know how to extract email (mbox) attachments using Python?
[20:15:51] <leitz> SnoopJ, "indent" also works, with json.dumps.
[20:16:13] <novapy> grym: a python program, and a pipline is linux thing for passing input
[20:16:18] *** Joins: zepolen_ (~zepolen@ppp-94-66-223-145.home.otenet.gr)
[20:16:25] <SnoopJ> leitz, it's a valid argument, yes, but it has nothing to do with the destination of the output
[20:16:35] <grym> novapy: as in like `cat | grep | ... ` ?
[20:16:43] <novapy> exactly
[20:16:45] <grym> novapy: yes, python knows how to handle normal streams
[20:17:01] <MockingMoniker> SnoopJ, well, I should avoid the x/y issue... I want to pull JSON data into a Python script for Python version 2.x.
[20:17:07] <SnoopJ> novapy, as far as "how", read from stdin (i.e. sys.stdin), write to stdout (i.e. sys.stdout)
[20:17:11] <kek_> SnoopJ, ah, now I see. I think it is not unusual to import python modules in the middle of code, can that be? Because the it only initializes MPI once I import the actually MPI module and not the mpi4py package.
[20:17:22] <MockingMoniker> SnoopJ, is there a serialized format that I can use with Python 2.x?
[20:17:27] *** Quits: nosoul (nosoul@gateway/vpn/protonvpn/nosoul) (Quit: Leaving)
[20:17:33] <kek_> in any way: thanks a lot
[20:17:34] *** Quits: maryo (~Maryo@user/maryo) (Ping timeout: 260 seconds)
[20:17:37] <deniska> python2 comes with json module
[20:17:41] <novapy> so, could a script be passed like `ls | pyscript | sed` ?
[20:17:44] <SnoopJ> MockingMoniker, the json library is present from Python 2.6, so the answer to your question is "yes, if you're on 2.6+"
[20:17:52] <SnoopJ> at least in CPython. I have no idea about Jython.
[20:17:58] <grym> MockingMoniker: https://docs.python.org/2.7/library/json.html#module-json
[20:18:18] <MockingMoniker> SnoopJ, and I'm on version 2.2.1. Also, this is a proprietary implementation so there's no hope of upgrading.
[20:18:19] <SnoopJ> novapy, yep
[20:19:03] <MockingMoniker> The JSON module works beautifully, but I'm not able to use it.
[20:19:40] *** Joins: han-solo (~han-solo@user/han-solo)
[20:20:06] *** Joins: NeilRG_ (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[20:20:12] <deniska> And xml comes since 2.5…
[20:20:13] <SnoopJ> MockingMoniker, you might be able to if you copy it over yourself into the site of this (ancient) implementation. You won't get the benefit of the encoder/decoder bits implemented in C, but there are fallbacks written in Python.
[20:20:34] <SnoopJ> Although it's very possible you'd have to do some backporting work to make 2.6-aware code work with 2.2
[20:20:58] <grym> doesn't jython let you reach out to com.whatever in java-land
[20:21:08] <kek_> MockingMoniker, can't you just installed newer python locally in your home dir or something like that and use that?
[20:21:34] <SnoopJ> grym, yea I would assume going to the Java side of things would be more fruitful here, if it has something in its stdlib
[20:21:52] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 268 seconds)
[20:21:58] *** Quits: raek (~raek@h-109-228-152-171.a163.priv.bahnhof.se) (Quit: raek)
[20:22:05] <novapy> What happened to the jython compiler?
[20:22:15] *** Quits: jay-m1261 (~jay-m@154.72.167.162) (Ping timeout: 250 seconds)
[20:22:15] *** Quits: jay-m126_ (~jay-m@154.72.167.162) (Ping timeout: 250 seconds)
[20:22:15] *** Quits: jay-m126 (~jay-m@154.72.167.162) (Ping timeout: 250 seconds)
[20:22:18] <SnoopJ> novapy, happened?
[20:22:22] <MockingMoniker> kek_, it's a proprietary implementation.
[20:22:42] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 260 seconds)
[20:22:43] *** Joins: maryo (~Maryo@user/maryo)
[20:22:54] <bluss> did jython never make it over to Python 3 land?
[20:22:56] <MockingMoniker> System Python is a nice healthy 4.x.
[20:23:03] <SnoopJ> I was going to suggest ujson as well, but it's 3.x only. There's a port (ujson1) that goes back to 2.5, but 2.2 is rather far from that.
[20:23:08] <novapy> SnoopJ when I install it from a package manager, it doesn't include it, and I can't find it anywhere
[20:23:09] <MockingMoniker> bluss, why would it? It's Java + Python.
[20:23:34] <bluss> MockingMoniker: I'm talking about the language version, Python version 3.x
[20:23:43] *** Joins: mactron_ (~mactron@APN-123-244-245-gprs.simobil.net)
[20:23:46] <MockingMoniker> SnoopJ, well, what are the easiest ways to pull in dicts/lists easily?
[20:23:47] <SnoopJ> bluss, I don't think it did, but I don't really know why.
[20:24:13] <MockingMoniker> bluss, oh... and I don't think there's an implementation of Jython in 3.x land.
[20:24:26] <deniska> 2.2 predates dict literals?
[20:24:31] <MockingMoniker> Maybe it did but Oracle hasn't implemented it yet in WLST.
[20:24:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[20:25:34] *** Quits: subopt (~subopt@2603-8081-2302-459a-058d-bdb4-f8fd-81ec.res6.spectrum.com) (Ping timeout: 268 seconds)
[20:25:37] *** Quits: Andrynet (~Andrynet@186.46.201.139) (Ping timeout: 252 seconds)
[20:26:22] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[20:26:27] <SnoopJ> MockingMoniker, for that old version? Not really sure. There's the pickle module, but it comes with some seriously sharp edges (it executes arbitrary code when loading a file, so it's the wrong choice if you don't trust the source of the data)
[20:26:35] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[20:26:41] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[20:26:47] <MockingMoniker> SnoopJ, the only issue I have is that the files aren't human readible.
[20:27:04] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[20:27:07] <SnoopJ> MockingMoniker, if backporting the already-mostly-in-Python library isn't suitable I don't really have alternative suggestions for you.
[20:27:09] *** Joins: maharg101 (~maharg101@savoy.force9.co.uk)
[20:27:18] *** Joins: grandrew (~grandrew@2600:1700:42f3:9180:f22f:74ff:feac:90a3)
[20:27:22] <SnoopJ> If you do that, I'd start with the version introduced in 2.6 to minimize what you do have to backport.
[20:27:22] *** Quits: mactron (~mactron@cpe-146-212-96-217.dynamic.amis.net) (Ping timeout: 260 seconds)
[20:27:31] *** Joins: Andrynet (~Andrynet@186.46.201.139)
[20:27:37] <MockingMoniker> SnoopJ, I get the feeling there's no good way to do what I need to do.
[20:27:53] <SnoopJ> MockingMoniker, or, as grym suggested, call out to Java if there's a suitable JSON encoder/decoder available there
[20:28:01] <MockingMoniker> SnoopJ, I'm starting to think I should just use templating to generate WLST from a JSON file.
[20:28:18] <MockingMoniker> SnoopJ, oh, hm... didn't think of that.
[20:28:45] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 250 seconds)
[20:29:52] <MockingMoniker> I'll admit I was wondering if I was going to get some flack for asking about some outdated proprietary implementation of a weird tool.
[20:30:40] *** Joins: humberto1 (~humbertow@187.202.191.5)
[20:30:53] <SnoopJ> It's about Python, so it's on-topic, just very old :)
[20:31:07] *** Quits: emf (~emf@2620:10d:c091:480::1:ff4b) (Ping timeout: 252 seconds)
[20:31:42] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[20:31:52] *** Joins: qlixed (~qlixed@181.44.129.13)
[20:32:28] *** Joins: nosoul (nosoul@gateway/vpn/protonvpn/nosoul)
[20:33:00] *** Joins: jim87 (~gfurlan@2001:b07:5d37:f91e:c08b:dbe4:b466:4b28)
[20:33:08] *** Joins: sudomann (~sudomann@98.219.211.182)
[20:33:15] *** Quits: jdmark2 (~jdmark@user/jdmark) (Quit: Leaving)
[20:33:33] *** Joins: jdmark (~jdmark@user/jdmark)
[20:33:41] *** Quits: humbertowoody (~humbertow@187.202.191.5) (Ping timeout: 252 seconds)
[20:33:42] <jim87> hello! I'm developing a package, and I wanted to "deploy" it locally in order to test for instance the entry points. Is there a way to do so? Thanks :)
[20:34:02] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[20:35:50] <Wooble> jim87: sure, just install into in a virtualenv. possibly with pip install -e if you want an editable install
[20:35:59] <SnoopJ> jim87, probably make a virtual environment and install the package into it. tox is handy for automating that
[20:36:02] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[20:36:12] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[20:36:24] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[20:36:29] *** Joins: ccallahan (~ccallahan@redhat/ccallahan)
[20:36:29] *** Joins: spithash (~spithash@user/spithash)
[20:36:32] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:36:35] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Remote host closed the connection)
[20:36:59] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[20:37:24] *** Quits: tga (~tga@user/tga) (Ping timeout: 265 seconds)
[20:38:03] <jim87> Wooble: like pip install --user -e . right?
[20:38:21] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[20:40:13] <novapy> with multiple python versions installed, is it better practice to run pip or other packages like python|python3|python3.10 -m pip ?
[20:40:23] <Wooble> jim87: I probably wouldn't use --user ever, let alone for testing.
[20:40:42] *** Quits: schumaml (~schumaml@dslb-188-104-168-024.188.104.pools.vodafone-ip.de) (Quit: WeeChat 3.3)
[20:40:49] <SnoopJ> novapy, it's a good idea to invoke it with -m even with a single version installed: https://snarky.ca/why-you-should-use-python-m-pip/
[20:41:46] <jim87> Wooble: so "pip install -e ." within a virtual environment
[20:41:56] <SnoopJ> tl;dr - the -m spelling guarantees that you get pip for the interpreter you pointed at, which isn't true if you use `pip3` etc.
[20:42:05] *** Joins: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr)
[20:43:09] <jim87> Wooble: and the -e flag means I don't have to install it every time I change a source file, right?
[20:44:00] <SnoopJ> correct, the files in the source directory are what actually backs the installed package, so changes apply immediately
[20:44:02] <Repiphany> You still need to reinstall if you're changing entry points or whatever
[20:44:36] *** Joins: beli6147 (~Thunderbi@EPAM-SYSTEM.ear2.LosAngeles1.Level3.net)
[20:44:36] *** Joins: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[20:44:42] *** Joins: akelly (24aca7a63b@2604:bf00:561:2000::152)
[20:46:33] *** Quits: maryo (~Maryo@user/maryo) (Ping timeout: 268 seconds)
[20:47:07] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[20:48:50] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 260 seconds)
[20:48:52] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[20:49:21] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[20:49:21] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-39ba-7f72-5ad6-ef5a.res6.spectrum.com)
[20:49:56] <jim87> mmm I think I misunderstood how to work with packages. The package's name is py-wgstarman-jim87 and the sources are under src/. Within src I have cli/wgstarman.py (with main function). My console entrypoint is set like the following: wgstarman = wgstarman.cli.wgstarman:main - am I doing anything wrong? Thank you :)
[20:50:02] *** Quits: bob518 (~bob518@2603-7080-af03-588a-585c-a87b-e51e-6fa1.res6.spectrum.com) (Quit: Client closed)
[20:51:03] *** Joins: Pickchea (~private@user/pickchea)
[20:51:03] <SnoopJ> jim87, nothing about what you described sounds amiss. Are you getting an error or somesuch?
[20:51:26] *** Joins: Roey (~Roey@user/Roey)
[20:51:33] <jim87> SnoopJ: No module named 'wgstarman.cli' while attempting to call the cli entrypoint
[20:52:07] <Repiphany> Missing an __init__.py somewhere maybe
[20:52:19] *** Quits: omegatron (~some@p5484973e.dip0.t-ipconnect.de) (Quit: What happened? You quit!)
[20:52:27] <SnoopJ> jim87, if you have the `tree` command installed, it would be handy to see the complete tree of your sources, as well as the contents of your package config
[20:52:46] *** foxbox is now known as cammy
[20:53:13] <jim87> SnoopJ: can I filter away a folder (proof of concept) from tree?
[20:53:15] <SnoopJ> but yea, possibly `cli` isn't set up as a package
[20:53:45] *** Joins: omegatron (~some@p5484973e.dip0.t-ipconnect.de)
[20:54:15] <SnoopJ> jim87, the -I argument lets you ignore a pattern, but you could also pipe the output into a file and edit it. It's often hard to know what to edit out when asking a question, though. Sometimes what is elided is relevant to the question.
[20:54:22] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[20:54:52] <jim87> SnoopJ: here is the result of tree: http://pastie.org/p/5PG0qs4EYDh01eOr8aDJ0M
[20:54:54] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:55:25] <Repiphany> setup.py should be in src/
[20:55:39] <SnoopJ> jim87, can you also share the contents of setup.cfg/setup.py ?
[20:55:51] <Repiphany> wait
[20:56:06] <SnoopJ> Repiphany, there's a lot of things named wgstarman, I think. Possibly 3
[20:56:33] <Repiphany> Ignore me for now
[20:56:40] <jim87> SnoopJ: setup.py http://pastie.org/p/5dUC68UOVo1oIlbadsxGRI setup.cfg http://pastie.org/p/6tHVBmiAY2DOXctJB1ngBY
[20:56:52] *** Quits: rsx (~dummy@ppp-188-174-159-54.dynamic.mnet-online.de) (Quit: rsx)
[20:57:24] <jim87> and pyproject.toml: http://pastie.org/p/5aT4LhYyUGa9CAl8M3fzRR
[20:57:36] <novapy> Why do tutorials put f in front of a string? ex: print(f'string {variable}')
[20:58:06] <Repiphany> novapy: f-string formatting lets you put variables inside '{}' to be expanded out
[20:58:13] <Repiphany> as opposed to str.format and % formatting
[20:58:36] <SnoopJ> jim87, wgstarman in your entrypoint refers to src/wgstarman/, which indeed does not have a package named `cli` inside of it. Perhaps you meant `py_wgstarman_elegos.cli.wgstarman:main` ? I would recommend against this kind of name re-use, personally.
[20:58:36] <jim87> novapy: f lets pass variables within {}, in this case {variable}. Otherwise you'll have to format like 'string {variable}'.format(variable=variable)
[20:58:38] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-39ba-7f72-5ad6-ef5a.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[20:58:40] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:9c69:dee4:375a:463) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:59:00] <novapy> oh, thanks
[20:59:11] <Repiphany> novapy: https://docs.python.org/3/tutorial/inputoutput.html#tut-f-strings
[20:59:24] <jim87> SnoopJ: so the package's name is equal to the module's, right?
[20:59:34] *** Quits: beli6147 (~Thunderbi@EPAM-SYSTEM.ear2.LosAngeles1.Level3.net) (Quit: beli6147)
[20:59:40] <jim87> yeah, I think I'm making self confusion right now
[20:59:44] <SnoopJ> jim87, sorry, I don't understand what you're asking me.
[20:59:58] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:00:37] <jim87> don't worry :D so packages like fastapi are named after it I suppose. I saw though some packages named py-something, but then I had to import them without the prefix (like import something)
[21:00:59] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[21:01:01] <supakeen> The name on `PyPI` has nothing to do with the name of the installed package(s) and/or modules.
[21:01:07] *** Quits: NeilRG_ (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Remote host closed the connection)
[21:01:15] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:01:37] *** Joins: matsaman (~matsaman@user/matsaman)
[21:01:39] <SnoopJ> jim87, console_scripts is going to generate stubs that basically import the thingy you named, then call it.
[21:01:49] <Wooble> "nothing" may be a bit strong there :P
[21:01:50] <SnoopJ> and the name you specify is fully-qualified
[21:02:09] <supakeen> Wooble: Well people are generally nice enough to not put a module called `sys`, and `os` in their package ;)
[21:02:41] *** Joins: ffledgling (~textual@2620:10d:c090:400::5:d6a8)
[21:02:48] *** cammy is now known as foxbox
[21:02:54] <Wooble> it's certainly not random chance that the majority of packages install something with the same name as themselves, outliers notwithstanding :P
[21:02:56] *** Joins: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net)
[21:03:09] <jim87> in the python.org's packaging docs it is encouraged to use the following syntax for the package's name: "example-pkg-YOUR-USERNAME-HERE". So if I call it wgstarman-elegos, I'll have to import with wgstarman_elegos package, and not simply wgstarman, right?
[21:04:35] <SnoopJ> jim87, whatever you put in `metadata.name` becomes the name used to import the package (with - normalized into _)
[21:04:40] *** dcaro is now known as dcaro_away
[21:04:51] <jim87> Thank you very much :)
[21:05:10] <matsaman> for the love of gebus, though, make the two names match as much as possible
[21:05:38] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[21:05:39] <matsaman> it's easy for end users to import under a convenience name, it's harder to understand why something is referred to names
[21:05:39] *** Joins: srilyk (~wayne@user/waynew)
[21:05:40] <SnoopJ> and usually don't have packages with the same name in different parts of your hierarchy
[21:06:10] <matsaman> is referred to by multiple* names
[21:06:28] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[21:07:38] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[21:07:52] *** Joins: waynew (~wayne@user/waynew)
[21:07:55] <sgt_chuckles> why do i like python better than ruby
[21:08:26] <jim87> w00t, it's working :D
[21:08:40] <sgt_chuckles> anyway, is there a python package for creating music?
[21:09:01] <SnoopJ> yep
[21:09:39] <sgt_chuckles> ok, thats all i needed to know, thx
[21:09:50] <SnoopJ> https://www.bespokesynth.com/ is a nice recent release
[21:10:07] *** Joins: greedom (~greedom@p5deb2aaa.dip0.t-ipconnect.de)
[21:10:13] <matsaman> I actually like ruby syntax a lot, or at least one version of each possible approach it has, but
[21:10:21] <SnoopJ> although that's Python-in-DAW more than it is a package. there's a list of music-related libraries here: https://wiki.python.org/moin/PythonInMusic
[21:10:25] <matsaman> the interpreter has some weird wat behavior for some things
[21:10:36] <matsaman> and there are fewer "batteries"
[21:10:42] <matsaman> but everything has its rough edges
[21:10:47] *** Quits: srilyk (~wayne@user/waynew) (Ping timeout: 250 seconds)
[21:11:04] *** Quits: greedom (~greedom@p5deb2aaa.dip0.t-ipconnect.de) (Remote host closed the connection)
[21:11:04] <sgt_chuckles> i was hoping to find something similar to sonic pi
[21:11:06] <SnoopJ> the way calls work hurt my Python-brain
[21:11:23] <jim87> is there a way to let ArgumentParser show the help message, including whether it's a required argument and its default value?
[21:11:38] <SnoopJ> jim87, change the formatter: https://docs.python.org/3/library/argparse.html#argparse.ArgumentDefaultsHelpFormatter
[21:11:43] <matsaman> SnoopJ: cool pricing tier on bespoke
[21:12:00] <SnoopJ> :)
[21:12:04] *** Joins: greedom (~greedom@p200300de672e0d002b0c53ceeb9b5cc3.dip0.t-ipconnect.de)
[21:12:12] <jim87> Thanks :)
[21:12:27] *** Quits: greedom (~greedom@p200300de672e0d002b0c53ceeb9b5cc3.dip0.t-ipconnect.de) (Remote host closed the connection)
[21:12:55] <matsaman> sgt_chuckles: pysynth?
[21:13:20] <matsaman> possibly more bare bones
[21:14:09] <sgt_chuckles> yeah, guess i'll just stick with sonic pi
[21:14:13] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[21:14:18] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[21:14:34] *** Joins: waynew (~wayne@user/waynew)
[21:15:09] <sgt_chuckles> not sure if ruby's threading model beats python for this kind of thing, but i just find python more pleasant to work with.
[21:15:52] *** Quits: ckdCreations (~ckdCreati@147.55.133.129) (Read error: Connection reset by peer)
[21:15:57] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-39ba-7f72-5ad6-ef5a.res6.spectrum.com)
[21:16:08] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[21:16:20] *** Joins: sandb0y (~pirate@user/sandb0y)
[21:16:56] *** Joins: nexgen (~nexgen@li614-178.members.linode.com)
[21:17:18] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 260 seconds)
[21:17:24] <sgt_chuckles> some people go "ooh its the same thing", and im like "uuuh...not quite"
[21:17:27] <matsaman> I think more than anything there are fewer things you _have_ to write yourself in the python world
[21:17:33] *** Quits: tobybl (~tobybl@213.31.133.71) (Remote host closed the connection)
[21:17:50] *** Joins: greedom (~greedom@p200300de672e2f00b96b4015610b80f0.dip0.t-ipconnect.de)
[21:17:52] <matsaman> even if you suffer from NIH as I do and frequently want to replace 3rd party code as much as possible
[21:17:56] <matsaman> it's pretty nice
[21:18:13] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:18:18] *** Quits: greedom (~greedom@p200300de672e2f00b96b4015610b80f0.dip0.t-ipconnect.de) (Remote host closed the connection)
[21:18:29] <matsaman> I mean, you don't want to get hung up on using one language for every situation. It's fine, you can do it, but it's also magical to use a language that is _focused_ specifically on a particular problem, too.
[21:18:45] <matsaman> but python & ruby? Both pretty general purpose indeed
[21:18:54] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[21:19:15] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[21:19:21] <Helenah> No language is perfect, all languages have their pros and cons, their best use cases, their worst use cases, their performance flaws, etc.
[21:19:36] *** Quits: nexgen (~nexgen@li614-178.members.linode.com) (Read error: Connection reset by peer)
[21:19:38] *** Joins: qlixed (~qlixed@181.44.129.13)
[21:19:51] *** Joins: nexgen (~nexgen@li614-178.members.linode.com)
[21:20:20] <SnoopJ> In other words, language is a tool/technology and is subject to all the same asterisks
[21:20:22] *** Joins: juanma (~juanma@2a0c:5a80:1b06:9000:2326:f442:1d8f:9047)
[21:20:24] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[21:20:38] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Quit: AmigaOS PPC 4.1 +E +U1 // AmIRC 68K)
[21:21:48] *** Joins: ThePhilgrim (~ThePhilgr@h213-21-116-175.cust.a3fiber.se)
[21:22:00] <sgt_chuckles> right, i get that. As far as general scripting goes, python all the way. My biggest gripe with ruby is just that most around it is centered on rails
[21:22:07] <matsaman> sgt_chuckles: https://in-thread.sonic-pi.net/t/link-sonic-pi-to-python/2938 ?
[21:22:14] <matsaman> sgt_chuckles: oh yeah
[21:22:16] <matsaman> rails is a dumpster fire
[21:22:20] <matsaman> objectively
[21:22:35] <matsaman> maybe it wasn't in the beginning, I couldn't say; it is now and for some time
[21:22:46] *** Joins: ano (~ano@user/ano)
[21:22:49] *** Quits: nexgen (~nexgen@li614-178.members.linode.com) (Read error: Connection reset by peer)
[21:22:55] <matsaman> and that might be partially to do with gem being kind of rough around the edges
[21:23:05] <matsaman> more in the realm of bugs, I'd say, than _design_
[21:23:08] *** Joins: nexgen (~nexgen@li614-178.members.linode.com)
[21:23:18] <matsaman> which is kind of how I feel about ruby. Fine language, some rough implementation issues
[21:24:04] *** Quits: juanma (~juanma@2a0c:5a80:1b06:9000:2326:f442:1d8f:9047) (Client Quit)
[21:24:12] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:c8c0:4d9c:6ecd:7d0e)
[21:24:37] *** Quits: neverfindme (~hayden@158.123.160.43) (Quit: Leaving)
[21:24:51] *** Quits: rendar (~rendar@user/rendar) (Ping timeout: 250 seconds)
[21:28:41] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[21:29:18] *** Quits: martums (~martums@user/martums) (Read error: Connection reset by peer)
[21:29:21] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[21:29:50] *** Quits: nexgen (~nexgen@li614-178.members.linode.com) (Remote host closed the connection)
[21:29:56] <sgt_chuckles> i had to build a CLI app with ruby when i could've used something more robust like what poetry uses
[21:30:07] *** Joins: martums (~martums@user/martums)
[21:30:08] *** Quits: akk (~akk@75.161.146.115) (Quit: +++)
[21:30:20] *** Joins: nexgen (~nexgen@li614-178.members.linode.com)
[21:30:28] <sgt_chuckles> no better reason to use ruby for this other than the place i work at being a ruby shop
[21:30:35] * SnoopJ would not describe poetry as "robust"
[21:30:36] *** Quits: acresearch (~acresearc@user/acresearch) (Quit: WeeChat 2.8)
[21:30:54] <sgt_chuckles> it's not perfect, but better than thor
[21:31:13] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[21:32:56] <sgt_chuckles> hate being confined to a language just because it's what the company uses primarily for their app
[21:33:10] *** Joins: srilyk (~wayne@user/waynew)
[21:33:52] <SnoopJ> I am feeling that pain acutely this week.
[21:34:13] *** Joins: iomari891 (~iomari891@197.210.53.147)
[21:34:34] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[21:35:06] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[21:35:16] *** Joins: waynew_ (~wayne@user/waynew)
[21:35:17] <matsaman> sgt_chuckles: so much yes
[21:35:29] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:36:08] <sgt_chuckles> it actually limits what you can do elsewhere.
[21:36:08] *** Joins: akk (~akk@75.161.146.115)
[21:36:31] *** Joins: tobybl (~tobybl@213.31.133.71)
[21:37:08] <matsaman> it's just silly
[21:37:15] <matsaman> whoever is doing the work should pick
[21:37:24] <matsaman> clients should rarely if ever dictate implementation details
[21:38:26] <sgt_chuckles> their reasoning behind it is that most engineers in the company know ruby, and so when im no longer around to maintain the project, someone else can easily pick it up.
[21:38:35] *** Quits: srilyk (~wayne@user/waynew) (Ping timeout: 252 seconds)
[21:39:05] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[21:39:15] <sgt_chuckles> but that also wouldn't be the case if engineers knew other languages (which i'm sure a good deal of them do)
[21:39:31] *** Joins: millido (~millido@84.210.150.128)
[21:39:32] <Evolver> (just sharing) One can now sort-of use scipy directly for hyperparameter optimization via a new wrapper package: https://pypi.org/project/wrapdisc/
[21:40:02] *** Quits: RasnCain_ (~rasncain@gw1.cox.com) (Ping timeout: 240 seconds)
[21:41:33] <SnoopJ> Evolver, was scipy not interested in having that contributed upstream?
[21:41:41] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Read error: Connection reset by peer)
[21:41:49] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:42:30] *** Quits: Dotz0cat (~Dotz0cat@h165.65.213.151.dynamic.ip.windstream.net) (Ping timeout: 256 seconds)
[21:43:11] <Evolver> SnoopJ: Didn't ask. The approach is a bit hacky anyway. I will consider having a discussion with them after a few months of use.
[21:43:29] *** Quits: millido (~millido@84.210.150.128) (Client Quit)
[21:43:33] <matsaman> sgt_chuckles: yeah I hear that a lot
[21:44:04] *** Joins: millido (~millido@84.210.150.128)
[21:44:07] *** Joins: Viewday118 (~Viewday@user/viewday)
[21:44:08] <matsaman> as if programming were in assembly these days
[21:44:32] <matsaman> the average programming language as high level as python, with properly written code, it's going to be highly readable and maintainable by anyone
[21:44:35] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Read error: Connection reset by peer)
[21:44:38] <SnoopJ> or as if assembly weren't also a high-level abstraction
[21:44:46] <SnoopJ> s/weren't/wasn't/
[21:44:49] <matsaman> all relative, of course =)
[21:44:51] *** Joins: kostkon_ (~androirc@2a02:1388:182:bc03:7507:8245:10c:674e)
[21:45:06] <SnoopJ> it's abstraction all the way down
[21:45:38] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[21:45:38] *** Quits: aniketgm (~Aniket@49.36.109.129) (Quit: leaving)
[21:45:38] *** Viewday118 is now known as Viewday11
[21:45:45] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Ping timeout: 268 seconds)
[21:45:46] <matsaman> all the way down till you get to the turtles =P
[21:45:57] *** Joins: BSaboia (~bsaboia@177.37.198.59)
[21:46:12] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[21:46:31] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[21:46:35] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[21:46:48] *** Joins: sudomann (~sudomann@98.219.211.182)
[21:46:59] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[21:47:11] <sgt_chuckles> makes me wonder how many people would still be programmers today if assembly was used everywhere
[21:47:22] <sgt_chuckles> like javascript
[21:47:45] <matsaman> it's so hard to imagine such a lack of evolution
[21:47:52] * matsaman continues to try for a moment
[21:48:01] <matsaman> I guess you don't have to imagine
[21:48:10] <matsaman> there were many fewer programmers when that was the state of the art
[21:48:20] <SnoopJ> there were also fewer computers
[21:48:24] <matsaman> even if there were als...yeah
[21:48:24] <matsaman> that
[21:48:28] *** Joins: fikran (~fikran@user/fikran)
[21:48:31] <sgt_chuckles> it's still programming...just 100x harder
[21:48:35] <sgt_chuckles> and more tedius
[21:48:37] *** Joins: rendar (~rendar@user/rendar)
[21:48:55] <matsaman> which is why everyone would immediately invent higher level shortcuts =)
[21:49:08] <sgt_chuckles> true
[21:49:13] <twb> high-level languagese predate computers.
[21:49:19] <SnoopJ> (which is why assembly exists in the first place: it makes tedium go away)
[21:49:32] <sgt_chuckles> twb: how so...
[21:49:44] <sgt_chuckles> what kind of computers
[21:49:48] <matsaman> I wonder what an assembly intro for small children from back in the day looked like
[21:50:15] <twb> Church's untyped lambda calculus, for example.  Or plankalkul.  Or whatever Lady Ada wrote.  Also there were SIMD number crunching operations in India and Scotland
[21:50:27] *** Joins: aniketgm (~Aniket@49.36.109.129)
[21:50:48] <sgt_chuckles> matsaman: probably something gamified with lego blocks
[21:50:49] * SnoopJ glances uncomfortably at the abstraction of non-computery human languages
[21:50:50] *** Joins: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[21:51:25] <sgt_chuckles> twb: ahh, i see wym in that sense
[21:51:39] <twb> Logo is a high-level language that was well known for giving to kids, although a few RealTM things were done in it
[21:51:52] *** Joins: ttys000 (~ttys000@user/ttys000)
[21:52:17] <twb> If you want examples of assembly for kids, see Zachtronics stuff.  Also _One Billion Humans_, and there's a few minecraft things.
[21:52:38] <twb> I don't know offhand of any really old ones
[21:52:56] <SnoopJ> I would be surprised if it even existed
[21:53:01] <matsaman> minecraft is immediately accessible, though
[21:53:06] <twb> I mean... the 8008 came with programs you could enter one instruction at a time with dip switches
[21:53:09] <Wooble> in the days when the only choice was assembly, it's not like kids could get time on a computer to need to learn it.
[21:53:16] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[21:53:16] <sgt_chuckles> damn i wish i learned to program as a child
[21:53:20] <twb> But I guess you mean something with a keyboard
[21:53:24] <SnoopJ> Might have been some assembly instructions in magazines that included the source for games, but that was mostly BASIC AIUI.
[21:53:26] <matsaman> Wooble: yeah back to that problem
[21:53:44] <matsaman> we really need an alternate history with more computers but still where assembly was at the top to play this out
[21:53:45] <aniketgm> Those were the days of microcontrollers
[21:54:04] <twb> The TI-83 in 1997 allowed you to write C, which is kinda-sorta a high-level assembly
[21:54:21] *** Joins: ld (~a0z1@194.36.25.57)
[21:54:28] <twb> HP calculators you just wrote reverse polish lisp, which is definitely not assembly
[21:54:28] <matsaman> which reminds me of determinism and 'devs' and
[21:54:29] <sgt_chuckles> teaching kids to code probably became feasible in the early 90s
[21:54:33] <matsaman> well, don't want to think about that =P
[21:54:56] <aniketgm> I remember playing 8081, back in the days. It's almost obsolete now. You have 8081 GUI programs now.
[21:55:16] *** Quits: BSaboia (~bsaboia@177.37.198.59) (Quit: This computer has gone to sleep)
[21:55:41] <matsaman> this is moving into an actually more interesting topic of teaching children programming =)
[21:56:16] <SnoopJ> sgt_chuckles, children were learning to program well before the 90s
[21:56:37] <matsaman> yikes, just did a search for best languages to teach children programming and 'java' showed up as one =/
[21:56:40] <sgt_chuckles> maybe via chalk and board
[21:56:41] <Helenah> Agreed then it slumped right down in the 90s and 00s which was a shame.
[21:56:43] *** Quits: a0z1 (~a0z1@185.213.155.160) (Ping timeout: 250 seconds)
[21:56:45] *** Quits: akk (~akk@75.161.146.115) (Quit: +++)
[21:56:47] <Helenah> But now it's on the climb again.
[21:56:51] * SnoopJ wouldn't say it slumped
[21:57:04] *** Joins: sudomann (~sudomann@98.219.211.182)
[21:57:05] <Wooble> sgt_chuckles: wut? I was using TRS-80s in school in the early 80s
[21:57:06] <novapy> matsaman yikes indeed
[21:57:09] <matsaman> honestly I feel like python without significant whitespace would probably be ideal
[21:57:10] <Helenah> SnoopJ, Then where were all the teachers to teach it? Where was it in curriculums?
[21:57:17] <sgt_chuckles> anything earlier than 90s might have to require going to some vocational school to be exposed to programming languages
[21:57:32] <grym> i "learned" logo in either 89 or 90
[21:57:38] <Helenah> sgt_chuckles, Not in the 80s.
[21:57:44] <grym> and "learned" basic in 9...5?
[21:57:56] <grym> both in school
[21:58:03] <SnoopJ> Helenah, in places higher than what was available to "children." To say this precludes learning of any kind is unnecessarily reductive.
[21:58:07] <Helenah> In the 80s computers were in high schools and homes.
[21:58:08] <twb> IMO the best first languages are R5RS and any RISC, because they have few extraneous concepts and allow you to cover the essentials from the top down and bottom up in minimum time.
[21:58:10] *** Quits: ffledgling (~textual@2620:10d:c090:400::5:d6a8) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:58:11] <grym> (that i also got a qbasic tutorial from a guy who was on the os/360 dev team is neither here nor there .. )
[21:58:11] *** Quits: tobybl (~tobybl@213.31.133.71) (Remote host closed the connection)
[21:58:27] <grym> Helenah: there was one in my second-grade classroom, however
[21:58:36] <grym> in nowheresville upstate new york
[21:58:46] <Helenah> hmm
[21:59:11] <twb> But I'm assuming children who are already e.g. numerate
[21:59:20] <aniketgm> sgt_chuckles: nah! even in the 90s there were vocational schools for that.
[21:59:22] <matsaman> bet you could get some neat programming language design approaches by sitting with children and experiencing what they get hung up on, and hearing their "but why..."s
[21:59:23] <twb> If you mean toddlers, I don't have a set answer
[21:59:34] *** Joins: akk (~akk@75.161.146.115)
[21:59:35] <sgt_chuckles> computer science began to be established as a distinct academic discipline in the 1950s and early 1960s. Anything earlier than that i'd doubt very little exposure.
[21:59:50] <Helenah> matsaman, :D
[22:00:03] <Helenah> Childs favourite word "why".
[22:00:08] <twb> matsaman: step #1 is to get rid of mutablility because then you don't need to explain equality vs. identity
[22:00:39] <matsaman> not sure you need to worry about age groups; if they have the capacity to grok any general concept, that's the issue I think ... what to encourage and push it forward
[22:00:56] <twb> Which is the absolute worst stumbling-block for first-year undegrads being given Java as their first language by awful people
[22:01:08] <aniketgm> Helenah: no wonder! any that 'why' quiets down as they grow up.
[22:01:10] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[22:01:12] <novapy> matsaman: They have special block code scripts for children, eg. https://scratch.mit.edu or https://code.org/
[22:01:13] <aniketgm> *and
[22:01:18] <matsaman> twb: yeah I can see children getting hung up on that, especially if the syntax were such that it were easier to read
[22:01:27] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[22:01:28] <twb> scratch is basically smalltalk
[22:01:45] <Wooble> twb: my niece, who's a freshman, *wishes* she got java as a first language instead of matlab :)
[22:01:46] *** Quits: mimmy_ (~mimmy@184.94.118.194) (Ping timeout: 268 seconds)
[22:02:17] *** Joins: waynew (~wayne@user/waynew)
[22:02:23] <han-solo> I think, Etoys is a good one to get kids started on programming :)
[22:02:24] <matsaman> man, I didn't realize scratch had all this game stuff
[22:02:26] <matsaman> novapy: thanks
[22:02:39] <theseb> newb question...Does DevOps = automating integration and deployment?  If yes, I don't get why this is some innovative new thing...haven't people ALWAYS been trying to automate these things?
[22:02:51] *** Quits: Saxtheowl (~roro@78.192.226.182) (Ping timeout: 245 seconds)
[22:03:08] <matsaman> theseb: it's just a new buzzword, yes
[22:03:20] <twb> theseb: it means letting devs fuck up the production system and sacking the people who used to clean up their booboos
[22:03:26] <matsaman> but don't say that out loud without taking people's temperature first
[22:03:29] <novapy> matsaman: np
[22:03:40] <sgt_chuckles> theseb: i think since microservices are such a thing now, you have a greater need to organize these things, which can be a project in itself.
[22:03:44] <matsaman> twb: yeah, combining job descriptions & duties frequently
[22:03:46] <theseb> twb: ;)
[22:03:48] <theseb> lol
[22:04:03] <matsaman> novapy: you ever
[22:04:17] <matsaman> seen an explicit tutorial or series on moving from something visual like scratch to text only?
[22:04:28] <theseb> sgt_chuckles: what does devops have to do w/ microservices
[22:05:10] <SnoopJ> theseb, in my experience, "devops" means whatever the person using it thinks it means
[22:05:44] *** Quits: waynew_ (~wayne@user/waynew) (Ping timeout: 256 seconds)
[22:05:50] <twb> matsaman: doesn't scratch let you inspect the underlying text representation?
[22:06:02] <matsaman> I don't know, not real familiar with it
[22:06:06] * matsaman looks
[22:06:25] <novapy> matsaman: I don't believe thats possible, scratch doesn't have a text based code thing
[22:06:30] <sgt_chuckles> theseb microservices are decoupled, so they tend to run in separately, which is why docker is used to containerize them.
[22:06:37] <matsaman> JSON representation?
[22:07:05] <Wulf> han-solo: I'm not finished yet with my pdf extraction, but it looks *very* promising. Remaining work is on par with maybe 3 days of advent of code :)
[22:07:11] <matsaman> https://en.scratch-wiki.info/w/images/JsonTutorial-textEditor.PNG
[22:07:41] <matsaman> it'd just be extra convenient if someone had already fleshed out a path to migrate from visual to purely textual
[22:08:00] <matsaman> even if it were just a well written doc without any special software behind it, I guess
[22:08:04] <han-solo> Wulf: awesome ✨
[22:08:22] <twb> matsaman: try looking for "4GL"
[22:08:22] <novapy> matsaman: Scratch doesn't have a text-based representaion, just the blocks code.
[22:08:35] <sgt_chuckles> theseb also have to manage those containers, have them communicate, deploy them, ect which is another layer of work aside from coding. which is where dev-ops comes in
[22:08:39] *** Quits: delvian (~delvian@41.13.232.67) (Quit: Leaving)
[22:08:51] <SnoopJ> IIRC UE5's Blueprints can be converted to text representations, but I'm not positive
[22:09:04] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[22:09:41] <novapy> matsaman: Google says: A Scratch 3.0 project can be converted to a.app (macOS application) or.exe (Windows application) using a third-party tool called forkphorus and Node.JS.
[22:10:33] <matsaman> "phosphorus runs your Scratch projects really fast by compiling them to JavaScript" interesting
[22:10:36] <matsaman> thanks
[22:10:45] <novapy> np
[22:10:54] *** Joins: mimmy_ (~mimmy@184.94.118.194)
[22:11:17] <Wooble> matsaman: I suspect the compiled javascript *probably* isn't something a beginner is going to want to try to read, let alone hack on :)
[22:11:39] <Wooble> s/a beginner/anyone/
[22:11:59] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[22:12:15] <matsaman> I think really what'd be nice is if inside something like scratch studio it somehow allowed you to slowly de-visual-ize progressively
[22:12:16] *** Quits: kostkon_ (~androirc@2a02:1388:182:bc03:7507:8245:10c:674e) (Ping timeout: 268 seconds)
[22:12:27] <matsaman> no idea how, offhand
[22:12:27] *** Joins: Saxtheowl (~roro@78.192.226.182)
[22:13:04] <Wooble> yeah, that would be neat. I feel like I saw some sort of start at a python-based thing vaguely like that maybe 10-15 years ago but I don't remember any details whatsoever :(
[22:13:25] <novapy> matsaman: It wouldn't be too hard if they just linked text action to the blocks.  It's not hard, i've seen it done before.
[22:13:39] *** Joins: parv (~quass@user/parv)
[22:13:41] *** Joins: Linux77 (~LinuMage@186.233.183.58)
[22:13:42] <matsaman> I don't really believe in hard =)
[22:13:47] <matsaman> just tedious, heh
[22:14:01] <Wooble> oh https://developers.google.com/blockly
[22:14:08] *** Joins: hypoon (~hypoon@pool-108-31-49-4.washdc.fios.verizon.net)
[22:14:14] *** Quits: mactron_ (~mactron@APN-123-244-245-gprs.simobil.net) (Ping timeout: 260 seconds)
[22:14:17] <matsaman> mmm, nice side-by-side
[22:14:29] <Wooble> actually does JS, python, PHP, lua, and dart all in one
[22:14:29] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[22:14:39] <BinarySavior> what is this syntax an example of? Markup('<strong>Hello %s!</strong>') % '<blink>hacker</blink>'
[22:14:47] <BinarySavior> I do not recognize the % here, is that a pipe?
[22:14:48] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[22:14:53] <Wooble> BinarySavior: string formatting
[22:14:56] <BinarySavior> I've never used pipes in python
[22:15:00] <phox> Wooble: I saw a good thing like that from a prof ages ago, but that one the visual formatting is somewhat less parseable which is not ideal for kids... hm
[22:15:05] <Wooble> BinarySavior: (printf style)
[22:15:18] <BinarySavior> oh that's string formatting duh
[22:15:18] <matsaman> I think just having something with the general preferred visual format things use that ultimately maps to a real language is nice for a start, yeah
[22:15:27] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[22:15:36] <Wooble> BinarySavior: .format and f-strings are largely preferred these days.
[22:15:57] <matsaman> or you can ... concatenate =D heh
[22:15:58] <BinarySavior> yea this is from flask docs
[22:16:06] <matsaman> or go full template system
[22:16:24] <Wooble> I sure hope flask is pushing the template system right after that bit :)
[22:16:57] <novapy> Any block code is just too hard to read once you are doing things with 40+ blocks...too messy, and block code doesn't work in vim..
[22:17:19] <matsaman> https://blockly.games/maze coool
[22:17:41] <matsaman> novapy: yeah I was just imagining a future where things were high enough level to do that
[22:17:52] <matsaman> novapy: and it would surely amount to nothing more than a set of checkboxes
[22:17:58] *** Quits: the_lanetly_052_ (~the_lanet@185.30.91.139) (Ping timeout: 260 seconds)
[22:18:05] <matsaman> so much work, for people who need things now =P
[22:19:00] <phox> novapy: probably works in emacs.  neener.
[22:19:02] <phox> ;D
[22:19:20] *** Quits: Andrynet (~Andrynet@186.46.201.139) (Ping timeout: 256 seconds)
[22:19:39] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 252 seconds)
[22:19:52] <Wooble> heh
[22:20:15] <novapy> phox: Probably. according to emacs users, emacs does everthing ;D
[22:20:22] <matsaman> currently repartitioning my hard drives in Emacs
[22:20:23] *** Joins: humbertowoody (~humbertow@187.202.191.5)
[22:20:43] *** Joins: ffledgling (~textual@2620:10d:c090:400::5:d6a8)
[22:21:07] <novapy> matsaman: this is the future of programming: https://github.com/primaryobjects/AI-Programmer
[22:22:18] *** Quits: runelind (~runelind@user/runelind) (Quit: ZNC 1.8.2 - https://znc.in)
[22:22:35] *** Joins: sudomann (~sudomann@98.219.211.182)
[22:22:37] *** Joins: Andrynet (~Andrynet@186.46.201.139)
[22:22:48] <Wooble> novapy: that's 9 years ago, why hasn't the singularity come yet?
[22:23:18] *** Quits: humberto1 (~humbertow@187.202.191.5) (Ping timeout: 256 seconds)
[22:23:19] *** Joins: runelind (~runelind@user/runelind)
[22:23:25] *** Quits: runelind (~runelind@user/runelind) (Remote host closed the connection)
[22:23:26] <matsaman> yeah I just don't know how to respond to that
[22:23:35] <novapy> Not sure, but my guess is there aren't powerful enough computers
[22:23:41] <matsaman> I already know we should be hunting and gathering instead of mushing these dumb electronic devices and staring at flashlights
[22:23:50] <Wooble> also because it generates brainf*ck.
[22:24:00] *** Joins: runelind (~runelind@user/runelind)
[22:24:02] *** Joins: Nivlac (~gabriel@181.223.199.100)
[22:24:20] <novapy> well, brainf*ck is turing complete, so it could techinically do anything
[22:24:31] *** Joins: srilyk (~wayne@user/waynew)
[22:24:42] <phox> novapy: including what it advertises to do
[22:24:44] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[22:25:03] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[22:25:16] <novapy> phox: which is why I leave the AI to do it, rather than use it myself
[22:25:23] <phox> mmhmm
[22:25:34] <Wooble> novapy: tricky to do a lot of things when you can't make syscalls :P
[22:25:50] *** Joins: audio (~audio@user/audio)
[22:25:53] <phox> Wooble: memory-mapped I/O works just fine
[22:26:11] <phox> tfw your IOMMU supports tape
[22:26:16] <Wooble> phox: what's the BF operator for that
[22:26:47] <phox> Wooble: I have not touched BF in forever, but whatever you write to cells on the tape with
[22:26:54] <phox> you just have to write to the correct cells
[22:27:15] *** Quits: nexgen (~nexgen@li614-178.members.linode.com) (Quit: Leaving)
[22:27:24] <matsaman> okay that explains why brainfsck, but what explains C# =P
[22:27:37] <novapy> c# is the AI
[22:27:42] *** Joins: nexgen (~nexgen@li614-178.members.linode.com)
[22:27:43] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 252 seconds)
[22:28:20] <novapy> tbh, there are probably better languages to do it in though
[22:29:30] *** Joins: savolla (~savolla@95.10.206.130)
[22:29:38] *** Quits: pycode (~pycode3@2001:b07:5d28:551:8a8b:8f9c:220:4af) (Ping timeout: 260 seconds)
[22:29:48] <novapy> that program eats my cpu up, according to top, it uses ~250 of my cpu
[22:29:57] <novapy> 250%
[22:30:15] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[22:30:40] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 256 seconds)
[22:31:15] *** Joins: emf (~emf@2620:10d:c091:480::1:a9a4)
[22:31:21] *** Quits: wlemuel (~wlemuel@210.22.124.110) (Read error: Connection reset by peer)
[22:32:02] *** Quits: Nivlac (~gabriel@181.223.199.100) (Ping timeout: 240 seconds)
[22:32:39] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:9c69:dee4:375a:463)
[22:33:05] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[22:33:17] *** Joins: gbear605_ (~gbear605@user/gbear605)
[22:35:02] *** Quits: Andrynet (~Andrynet@186.46.201.139) (Ping timeout: 240 seconds)
[22:35:05] *** Quits: gbear605 (~gbear605@user/gbear605) (Ping timeout: 268 seconds)
[22:35:29] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[22:35:31] <novapy> Can someone direct me to an argument tutorial?
[22:36:09] *** Quits: boON (~boON@user/boon) (Ping timeout: 250 seconds)
[22:37:07] *** Joins: Andrynet (~Andrynet@186.46.201.139)
[22:37:12] <SnoopJ> novapy, "argument?" What task are you solving?
[22:38:31] *** Joins: boON (~boON@user/boon)
[22:39:05] <matsaman> like https://docs.python.org/3/library/argparse.html ?
[22:39:11] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[22:39:18] *** Joins: gbear605 (~gbear605@user/gbear605)
[22:39:22] *** Quits: alius (~adrien@2a01:e0a:13c:cd90:6c92:182a:2527:a9f2) (Quit: Konversation terminated!)
[22:39:40] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[22:41:08] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[22:41:52] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:42:23] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 252 seconds)
[22:42:38] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Remote host closed the connection)
[22:43:05] *** Quits: gbear605_ (~gbear605@user/gbear605) (Ping timeout: 268 seconds)
[22:44:44] *** Joins: Betal (~Betal@user/betal)
[22:45:15] *** Quits: Andrynet (~Andrynet@186.46.201.139) (Ping timeout: 250 seconds)
[22:45:21] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[22:45:59] *** Joins: Dotz0cat (~Dotz0cat@h2.88.187.173.dynamic.ip.windstream.net)
[22:46:31] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Remote host closed the connection)
[22:46:47] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[22:47:04] *** Joins: p-i- (~Ohmu@223.206.145.90)
[22:47:29] *** Joins: Andrynet (~Andrynet@186.46.201.139)
[22:47:29] *** Joins: FluffyMask (~masque@user/fluffymask)
[22:49:40] *** Quits: powftw (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[22:50:59] *** Joins: mactron (~mactron@APN-123-244-245-gprs.simobil.net)
[22:52:12] *** Quits: Andrynet (~Andrynet@186.46.201.139) (Ping timeout: 256 seconds)
[22:53:48] *** Joins: Andrynet (~Andrynet@186.46.201.139)
[22:54:38] *** Joins: darkstarx (~darkstard@50.39.115.145)
[22:55:02] *** Quits: ThePhilgrim (~ThePhilgr@h213-21-116-175.cust.a3fiber.se) (Ping timeout: 256 seconds)
[22:55:13] *** Joins: RasnCain (~rasncain@gw1.cox.com)
[22:55:40] *** Quits: darkstarx (~darkstard@50.39.115.145) (Remote host closed the connection)
[22:56:03] *** Joins: darkstarx (~darkstard@50.39.115.145)
[22:56:10] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[22:56:46] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:57:46] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-71f8-eb14-0c59-711a.res6.spectrum.com)
[22:57:50] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:58:27] *** Quits: Andrynet (~Andrynet@186.46.201.139) (Ping timeout: 250 seconds)
[22:58:53] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[22:59:23] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[22:59:32] *** Joins: sudomann (~sudomann@98.219.211.182)
[23:00:10] *** Joins: Andrynet (~Andrynet@186.46.201.139)
[23:00:15] <matsaman> Wooble: love these little blockly challenges -> right into back pocket for when the time is right
[23:00:16] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[23:00:19] <matsaman> thanks for that
[23:02:56] *** Joins: RasnCa___ (~rasncain@ip174-73-119-77.br.br.cox.net)
[23:04:32] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[23:04:40] *** Quits: beenao (~beenao@user/beenao) (Quit: quit)
[23:04:47] *** Joins: millido (~millido@84.210.150.128)
[23:05:06] *** Quits: RasnCain (~rasncain@gw1.cox.com) (Ping timeout: 260 seconds)
[23:06:32] <Wooble> matsaman: hey I didn't even know the challenges existed but you're welcome :)
[23:06:51] <Wooble> last I saw it, it barely worked at all :)
[23:07:05] <matsaman> some of the JS examples are nice, too, the way they're authored
[23:07:16] *** Quits: millido (~millido@84.210.150.128) (Client Quit)
[23:07:31] <matsaman> you make a loop to navigate a path, and it's like while notArrived() do a thing and so forth
[23:07:52] *** Joins: Narrat (~omnius@p200300df5f0fbf2d06ea56fffe2e7cdc.dip0.t-ipconnect.de)
[23:07:54] *** Joins: millido (~millido@84.210.150.128)
[23:08:03] *** Joins: fulaphex (~fulaphex@2a01:4b00:89da:9a00:e005:fd34:7079:2b02)
[23:08:05] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[23:08:26] <matsaman> others show how JS still has crufty roots, like foo (var i = foo; i<bar; i++) { for a simple range loop
[23:08:50] *** Quits: Andrynet (~Andrynet@186.46.201.139) (Ping timeout: 260 seconds)
[23:09:12] <matsaman> that's a complicated syntax jump, but they can just add another function to manage it
[23:09:24] * matsaman picks nits
[23:09:41] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[23:09:52] <fulaphex> hey, is there a builtin function, that would allow iterating over fixed-sized slices from an iterable? or do I need to do that manually with itertools.islice?
[23:10:25] <fulaphex> I would want [[1,2,3],[4,5,6],[7,8,9],[10]] for [1,2,3,4,5,6,7,8,9,10]
[23:10:37] *** Joins: Andrynet (~Andrynet@186.46.201.139)
[23:11:02] *** Joins: delvian (~delvian@41.13.232.67)
[23:11:07] <Wooble> fulaphex: see the grouper recipe in itertools (or install more_itertools to get it)
[23:11:12] *** Quits: Linux77 (~LinuMage@186.233.183.58) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[23:11:33] *** Joins: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net)
[23:11:38] *** Joins: beenao (~beenao@user/beenao)
[23:11:51] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[23:12:56] <Wooble> fulaphex: err... although that fills the last chunk instead of giving you [10]
[23:13:16] <matsaman> [list[i-1:i+2] for i in list[::3]] ?
[23:13:25] <matsaman> first part is probably dumb, but it works
[23:13:35] *** Quits: ffledgling (~textual@2620:10d:c090:400::5:d6a8) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:13:46] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[23:13:52] <Wooble> uh, i is going to be list items there, not indices :P
[23:14:00] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Killed (NickServ (GHOST command used by jeho1)))
[23:14:04] *** Joins: velix (~velix@user/velix)
[23:14:24] <matsaman> it's just a letter =P
[23:14:25] <Wooble> but I guess if your list is always 1-indexed ints it works
[23:14:29] <novapy> SnoopJ: command line arguments
[23:14:44] <velix> Is there an insane quick to decode crypto methode, which doesn't need to be sooooo secure, but be able to contain a timestamp?
[23:14:45] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[23:14:50] <velix> method*
[23:15:01] *** Quits: Andrynet (~Andrynet@186.46.201.139) (Ping timeout: 252 seconds)
[23:15:19] <matsaman> is your focus security, or checksumming?
[23:15:19] <ChrisWarrick> velix: which encryption scheme is too slow for your needs?
[23:15:46] <velix> matsaman: & ChrisWarrick: Let me explain the problem. Takes some seconds, since I'm not native.
[23:15:54] *** Joins: savolla13 (~savolla@95.10.206.130)
[23:16:01] <matsaman> velix: well you sound it, but fair enough
[23:16:07] *** Quits: Narrat (~omnius@p200300df5f0fbf2d06ea56fffe2e7cdc.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[23:16:34] *** Joins: Narrat (~omnius@p200300df5f0fbf2d06ea56fffe2e7cdc.dip0.t-ipconnect.de)
[23:16:42] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[23:16:57] *** Joins: Andrynet (~Andrynet@186.46.201.139)
[23:17:12] *** Joins: basedovertime (~basedbase@41.62.93.253)
[23:17:17] *** Joins: millido (~millido@84.210.150.128)
[23:17:25] *** Joins: maplefinger (~maplefing@user/lindis)
[23:18:44] *** Quits: savolla13 (~savolla@95.10.206.130) (Client Quit)
[23:18:53] <velix> I have a map application where the map data comes from a different server than the frontend. The user logs in to the frontend and I want to send the authorisation ("user has logged in") to the other server. The fastest way would be a symmetrical encryption that includes a timestamp. The backend then decrypts the received string and checks whether the timestamp is correct. The frontend updates the string e.g. every 10 minutes. It does not have to be highly secure.
[23:19:09] <velix> Okay, that sound a bit like JWT ;)
[23:19:17] <ChrisWarrick> yeah, it looks like you want to reinvent JWT badly
[23:19:38] <velix> ChrisWarrick: sometimes you need to write it down to realize it's bad.
[23:19:41] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 250 seconds)
[23:20:02] <velix> But the problem I'm seeing is the overhead of JWT.
[23:20:09] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 252 seconds)
[23:20:13] <velix> A compressed, encrypted timestamp is like 28hn34ihf8i
[23:20:21] <velix> A JWT is like .............................................
[23:20:23] <ChrisWarrick> is it really overhead?
[23:20:33] <velix> how short is the shorted JWT?
[23:20:41] <ChrisWarrick> it doesn’t matter
[23:20:43] *** Joins: humberto1 (~humbertow@187.202.191.5)
[23:20:44] <velix> It has to be send on _each_ request.
[23:20:56] <velix> So when there are 100 requests in 10 seconds... urghs
[23:21:08] <ChrisWarrick> 100 requests in 10 seconds is nothing
[23:21:15] <basedovertime> it's not much, the internet is very fast
[23:21:35] *** Quits: aniketgm (~Aniket@49.36.109.129) (Quit: leaving)
[23:21:55] <basedovertime> Maybe make a 4 digit number that changes on every request and that both the client and server can calculate?
[23:22:09] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Remote host closed the connection)
[23:22:12] <velix> basedovertime: haha, OTR :-)
[23:22:20] <velix> or what was it..
[23:22:27] <velix> google's 6 digit 2FA
[23:22:43] *** Quits: RasnCa___ (~rasncain@ip174-73-119-77.br.br.cox.net) (Remote host closed the connection)
[23:22:46] <velix> OTP*
[23:22:49] <basedovertime> yea
[23:22:52] <basedovertime> what's OTR?
[23:22:56] <velix> typo
[23:23:02] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 240 seconds)
[23:23:14] <basedovertime> You mean Off the record messaging?
[23:23:22] <velix> x;)
[23:23:32] <velix> 7 minutes until the new Discovery episode!
[23:23:53] <basedovertime> WOHOO YEAH BABYYYYY
[23:23:56] *** Quits: humbertowoody (~humbertow@187.202.191.5) (Ping timeout: 256 seconds)
[23:23:56] *** Joins: RasnCain_ (~rasncain@gw1.cox.com)
[23:24:20] <velix> But this OTP idea really isn't that bad.
[23:24:36] *** Quits: savolla (~savolla@95.10.206.130) (Quit: Connection closed)
[23:24:46] <velix> 1275 other users in here and none is complaining?
[23:25:00] <matsaman> velix: I think you just did? =)
[23:25:08] <ChrisWarrick> prefer existing and proven solutions, don’t invent your own auth schemes
[23:25:23] *** Joins: ffledgling (~textual@2620:10d:c090:400::5:d6a8)
[23:25:24] <velix> ChrisWarrick: OTP isn't my own ;)
[23:25:42] <ChrisWarrick> OTP is not an auth method
[23:26:02] <basedovertime> Chris is right
[23:26:20] <novapy> mhm
[23:27:15] <novapy> it's a second factor to auth
[23:27:33] <phox> I mean, some websites use it as the only factor
[23:27:39] <phox> which kinda makes it AuthN
[23:27:46] *** Joins: Themis3000 (~Thunderbi@user/themis3000)
[23:28:41] <basedovertime> idk man, ive always found forced or recommended doubleauth to be sketchy
[23:28:49] <novapy> Can you really use it as auth though?
[23:29:07] *** Quits: fulaphex (~fulaphex@2a01:4b00:89da:9a00:e005:fd34:7079:2b02) (Quit: Client closed)
[23:29:11] <phox> novapy: homedepot.com lets you use OTP-only if you click forgot password
[23:29:16] <phox> this is definitely A Thing
[23:29:21] <novapy> basedovertime: why would it be sketchy
[23:29:27] <ChrisWarrick> this is definitely a stupid thing though
[23:29:35] <phox> so the only factor is that you have access to your e-mail
[23:29:45] <basedovertime> call me a schizo but i hate it when glowies get my number
[23:29:47] <velix> Discovery!! brb
[23:29:49] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:29:56] <basedovertime> alright velix, enjoy your show
[23:29:59] <phox> at the end of the day this is not particularly worse than near-instant single-factor password reset e-mail+link, so...
[23:30:06] <phox> just saves you resetting it each time
[23:30:06] <novapy> phox: but you have to have a password linked to the account anyway,
[23:30:11] *** Quits: RasnCain_ (~rasncain@gw1.cox.com) ()
[23:30:17] <phox> oh sure, but it's still 1FA
[23:30:31] <phox> and the single factor is not something you know, other than that you apparently knew the account e-mail
[23:30:57] <novapy> more like something you have
[23:31:10] <velix> ChrisWarrick: Remember that the user already HAS authed.
[23:31:11] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[23:31:14] <ChrisWarrick> phox: you know the e-mail address and have access to it
[23:31:17] <phox> kinda.  you can use SMS or e-mail, the former is something you have more-or-less.
[23:31:22] <velix> I'm just abusing OTP to tell another server: user has authed.
[23:31:35] <phox> ChrisWarrick: or it might be something you have because e-mail preview on someone else's phone
[23:31:38] <phox> either way
[23:31:44] <phox> anyways, OTP is used for basically 1FA
[23:32:05] <novapy> anyone else dislike geo authing?
[23:32:07] <ChrisWarrick> phox: in which case you can probably apply a $5 wrench to the user and get access this way
[23:32:13] <phox> novapy: super obnosioux
[23:32:16] <phox> obnoxious
[23:32:24] <phox> ChrisWarrick: best 1FA yes
[23:32:44] <phox> I don't even need a $5 wrench, I'm 6'7, so I have built-in 1FA for most purposes
[23:33:06] <phox> 1FA "something you bought at the hardware store"
[23:33:09] *** Joins: Themis3001 (~Thunderbi@user/themis3000)
[23:33:59] <novapy> discord uses geo auth
[23:34:10] <ChrisWarrick> novapy: geo auth?
[23:34:17] <novapy> somewhere you are
[23:34:32] <novapy> more like an ip address
[23:34:39] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[23:34:50] *** Joins: carl- (~carl-@185.103.188.130)
[23:36:11] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[23:36:12] *** Joins: upsala (~zcb@185.213.155.232)
[23:37:02] *** Quits: Themis3000 (~Thunderbi@user/themis3000) (Ping timeout: 240 seconds)
[23:37:02] *** Themis3001 is now known as Themis3000
[23:37:21] *** Joins: p-i-_ (~Ohmu@mx-ll-223.206.145-90.dynamic.3bb.co.th)
[23:38:14] *** Joins: schumaml (~schumaml@p200300e2ef1de00053c1821a43d17d29.dip0.t-ipconnect.de)
[23:39:00] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-39ba-7f72-5ad6-ef5a.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[23:39:35] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 252 seconds)
[23:39:51] *** Quits: carl- (~carl-@185.103.188.130) (Ping timeout: 250 seconds)
[23:40:04] *** Quits: jab416171 (~jab416171@c-174-52-177-39.hsd1.ut.comcast.net) (Ping timeout: 250 seconds)
[23:40:23] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[23:40:29] *** Quits: p-i- (~Ohmu@223.206.145.90) (Ping timeout: 250 seconds)
[23:40:42] *** Joins: Themis3001 (~Thunderbi@user/themis3000)
[23:41:10] *** Quits: loki_val (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[23:41:26] *** Quits: basedovertime (~basedbase@41.62.93.253) (Quit: Leaving)
[23:41:27] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[23:41:38] *** Quits: sharksauce (sharksauce@user/sharksauce) (Quit: WeeChat 2.8)
[23:42:54] *** Quits: Andrynet (~Andrynet@186.46.201.139) (Ping timeout: 268 seconds)
[23:43:37] *** Quits: Themis3000 (~Thunderbi@user/themis3000) (Ping timeout: 252 seconds)
[23:43:55] *** Joins: Themis3000 (~Thunderbi@user/themis3000)
[23:44:24] *** Joins: Viewday115 (~Viewday@user/viewday)
[23:44:25] *** Joins: Andrynet (~Andrynet@186.46.201.139)
[23:45:54] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[23:45:54] *** Viewday115 is now known as Viewday11
[23:47:44] *** Quits: Themis3001 (~Thunderbi@user/themis3000) (Ping timeout: 256 seconds)
[23:48:01] *** Joins: sudomann (~sudomann@98.219.211.182)
[23:49:26] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Quit: Client closed)
[23:49:54] *** Quits: mimmy_ (~mimmy@184.94.118.194) (Ping timeout: 260 seconds)
[23:51:04] *** Joins: jmd (~user@de.cellform.com)
[23:52:18] *** Joins: QuaternionsRock (~Quaternio@2601:197:a7f:79d6:5c94:a166:37ee:2bab)
[23:54:09] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[23:54:15] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 252 seconds)
[23:54:21] *** Joins: Vision (~Vision@023-084-134-149.res.spectrum.com)
[23:54:53] <QuaternionsRock> Idea: `enumerate` should implement `__reversed__`, `__len__` and `__getitem__` if its argument implements `__len__` and at least one of `__getitem__`, `__reversed__`
[23:54:53] *** Joins: jmd (~user@de.cellform.com)
[23:55:08] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[23:55:40] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[23:55:42] *** Joins: wedof (~wedof@2a02:810c:80:1eb0:24b3:b5ff:fe42:7d51)
[23:56:11] *** Joins: sudomann (~sudomann@98.219.211.182)
[23:56:30] *** Joins: jmd (~user@de.cellform.com)
[23:56:53] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[23:57:02] *** Joins: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com)
[23:57:16] <QuaternionsRock> Well more specifically: `enumerate` should implement `__len__` if its argument implements `__len__`; `__getitem__` if its argument implements `__getitem__`, and `__reversed__` if its argument implements `__len__` and (`__reversed__` and/or `__getitem__`)
[23:57:48] *** Joins: fikran (~fikran@user/fikran)
[23:58:07] *** Joins: jmd (~user@de.cellform.com)
[23:58:44] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[23:58:45] <QuaternionsRock> A reversed enumeration is surprisingly difficult as it is now ( `for i, elt in enumerate(reversed(iterable)): i = len(iterable) - 1 - i; ...` )
[23:59:57] *** Quits: Pixi (~Pixi@user/pixi) (Quit: Leaving)
