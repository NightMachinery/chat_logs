[00:00:00] *** peacefulman is now known as BurritoBob
[00:00:01] <sham1> Well it'd be an automatic memory manager, not a virtual one
[00:00:09] <sham1> Because virtual memory is something OSes do
[00:01:06] <nitrix> No. Virtual Memory is commonly understood to be the address remapping that's done by hardware (MMU).
[00:01:07] <ski> theseb : it's a standard thing to do
[00:01:13] *** Quits: rando25892 (~homefame@user/rando25892) (Ping timeout: 256 seconds)
[00:01:15] *** Joins: nyjets (~zz@2001:8003:1612:d500:586:c933:946e:f1fb)
[00:01:59] <nitrix> theseb, It could fall into the category of data structures, perhaps allocators, maybe an overlap of the two depending how you do it.
[00:02:08] <nitrix> theseb, Definitely not virtual memory though.
[00:02:22] *** Joins: rando25892 (~homefame@user/rando25892)
[00:02:44] *** Quits: Cyp (~cyp@213.237.88.120) (Excess Flood)
[00:03:15] *** Joins: Cyp (~cyp@213.237.88.120)
[00:05:21] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Ping timeout: 276 seconds)
[00:05:59] *** Quits: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Remote host closed the connection)
[00:06:58] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[00:08:30] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[00:08:52] <nitrix> I suppose on a system with virtual memory, any operation becomes "virtual memory management", so it's not an incredibly helpful term when taken literally. Neither conceptually, it refers to a computer architecture / hardware / operating system technique that programs are oblivious of.
[00:11:07] <nitrix> If you were implementation some kind of VM interpreter, whose memory can move around and you had some kind of lookup table for the relations, then I'd maybe say yes -- with the caveat that you only emulated it. Then if you used mmap/sbrk now it'd get more real.
[00:11:14] <nitrix> s/implementation/implementing/
[00:11:19] <ski> if the details of the operation doesn't really care too much about whether there's virtual memory management somewhere in the background, one could question whether the operation is (partly) about that
[00:13:32] *** Joins: shivesh (~shivesh@user/shivesh)
[00:14:29] *** Joins: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[00:14:32] <Inline> heh
[00:17:39] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Ping timeout: 256 seconds)
[00:20:03] *** Joins: oxfuxxx (~oxfuxxx@87.101.92.72)
[00:20:12] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[00:31:21] *** Joins: imp (~imp@138-59-122-25.static.sumicity.net.br)
[00:32:16] *** Joins: alex_ (~alex11@user/alex11)
[00:32:37] *** Quits: alex11 (~alex11@user/alex11) (Ping timeout: 240 seconds)
[00:32:55] *** Quits: alex_ (~alex11@user/alex11) (Client Quit)
[00:32:56] *** Joins: Viewday117 (~Viewday@user/viewday)
[00:34:19] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:34:36] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[00:34:36] *** Viewday117 is now known as Viewday11
[00:38:01] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[00:38:12] *** Quits: masoudd (~masoudd@user/masoudd) (Quit: Leaving)
[00:39:00] *** Quits: mac_n_cheese (~lastc@2607:fa49:553f:2200:2507:759a:1e53:cc02) (Remote host closed the connection)
[00:39:03] *** Joins: joilerv (~joilerv@host86-191-117-90.range86-191.btcentralplus.com)
[00:42:15] *** Quits: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[00:42:48] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[00:43:29] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[00:47:53] *** Quits: clamiax (~clamiax@net-93-144-125-193.cust.dsl.teletu.it) (Remote host closed the connection)
[00:48:14] *** Joins: clamiax (~clamiax@net-93-144-125-193.cust.dsl.teletu.it)
[00:48:37] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Remote host closed the connection)
[00:50:13] *** Joins: bnchs___ (~bnchs@105.157.173.69)
[00:50:37] *** Joins: alex11 (~alex11@user/alex11)
[00:52:03] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[00:53:17] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 240 seconds)
[00:57:27] *** Quits: Kerr (~quassel@2601:602:ce00:c8d0:1f10:2cdc:eae4:98d8) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[01:00:29] *** Quits: nicode (~nic@2607:f2c0:9545:ab00:3e60:8518:dd62:e6e8) (Ping timeout: 256 seconds)
[01:02:35] *** Joins: nicode (~nic@2607:f2c0:9545:fa00:dee7:6718:e07b:924c)
[01:09:25] *** Quits: joilerv (~joilerv@host86-191-117-90.range86-191.btcentralplus.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[01:11:52] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[01:12:41] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[01:12:50] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Quit: Leaving)
[01:13:04] *** GoeJoran is now known as kish
[01:16:09] *** Quits: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Remote host closed the connection)
[01:16:23] *** Joins: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[01:17:17] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[01:18:47] *** Quits: oxfuxxx (~oxfuxxx@87.101.92.72) (Quit: can you please adjust your IRC quit message to be less transphobic?)
[01:19:13] *** Joins: oxfuxxx (~oxfuxxx@87.101.92.72)
[01:20:11] *** Joins: joilerv (~joilerv@host86-191-117-90.range86-191.btcentralplus.com)
[01:21:19] *** Joins: bkhl (~bkhl@user/bkhl)
[01:30:37] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293) (Ping timeout: 250 seconds)
[01:31:00] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[01:37:29] <Inline> why is -Wpedantic only for ISO C ?
[01:37:48] *** Quits: HisShadow (~HisShadow@user/hisshadow) (Ping timeout: 268 seconds)
[01:37:51] <sham1> Well not many other standards now are there
[01:38:09] <sham1> Well, there's C1989 which is ANSI but that's also ratified by ISO as C1990
[01:38:36] <Inline> ah, so whatever the -std is it will be ISO ok
[01:38:53] <nomagno> I think they had a nice thing going with C89, C99, C11...
[01:38:59] <nomagno> Then C23! Boom
[01:39:00] <nomagno> no real pattern
[01:39:08] <nomagno> shouldabeen C22 or somethin'
[01:39:25] <Inline> and -Wabi on it's own will do nothin too, you have to use a std like -Wabi=11 or so
[01:39:32] <Inline> meh
[01:39:33] <zdctg[m]> it does seem like the standards bodies have become far more active as of the last few years
[01:39:37] <tk> it will end up released this year and still end up called C23
[01:39:48] <Inline> yes i already tried the c2x thing
[01:39:54] <sham1> Annoyingly C23
[01:40:09] <Inline> at least for locally building a toolchain...
[01:40:23] <nomagno> zdctg: I'm kinda not very keen on so many new non-optional features
[01:40:29] <nomagno> puts a burden on casual implementors!
[01:41:05] <tk> having a standard full of optional features just meant nobody implemented them and you couldn't rely on them being there
[01:41:23] <tk> but that could have been partially because the features were broken and poorly thought out
[01:41:34] <nomagno> VLAs becoming optional was kinda dumb
[01:41:42] <nomagno> It was almost certainly just Microsoft pushing for it.
[01:42:20] <nomagno> Apostrophe as number separator -> Shouldn't this all of a sudden make it possible to have 'charify' macros?
[01:42:41] <sham1> Meh, VLAs had other problems other than Microsoft not liking them
[01:44:01] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[01:44:28] <zdctg[m]> nomagno: im probably not the best c programmer example, i almost exclusively write c++ anymore, but I hate a lot of the newer features and often for no good reason other than I dislike it. That's how I know I'm getting old, but I'm less familiar with the new features of C and just aware that both have suddenly had pretty active standard bodies
[01:45:25] <nomagno> C++ is kinda a joke at this point. Like, is it even implementable anymore except for massive community wide migrations like with GCC -> Clang?
[01:45:36] <nomagno> I don't know what the standard body is doing
[01:45:45] <nomagno> Are they an R&D division?
[01:46:25] <nomagno> If it were a specification body, well, that's another issue. But standards are meant to be overwhelmingly more descriptive than they are prescriptive.
[01:47:11] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[01:47:42] <neshpion> C++20 looks like a completely different language to me, even compared to C++11
[01:47:49] <nomagno> ,cc #define CAT(x, y, z) x##y,cc #define CAT(x, y, z) x##y##z \n #define CHARIFY(string) CAT(', string, ')\n putchar(CHARIFY(A))
[01:47:50] <candide> nomagno:  error: '#' is not followed by a macro parameter
[01:48:50] <zdctg[m]> nomagno: somewhere some years ago i got hooked on not having to write all of the things the STL provides every time i want to write a program and not having like 50% of my code just being handling strings and errors and stuff. I get grossed out everytime I look at the code in a disassembler, but I've gotten older and lazier plus I always sorta wrote OO looking C code anyways (struct's with function pointers for and object typesand similar)
[01:48:55] <nomagno> ,cc #define CAT(x, y, z) x##y##z \n #define CHARIFY(string) CAT(', string, ')\n putchar(CHARIFY(A))
[01:48:56] <candide> nomagno: error: macro "CAT" requires 3 arguments, but only 1 given
[01:49:07] *** Joins: Fairy (~Fairy@ti0004a400-5385.bb.online.no)
[01:49:26] <zdctg[m]> Have they introduced lambda's in the newer C standards? I remember when I first saw the syntax I thought "oh geez here we go, the language is going to get crazy now"
[01:49:38] <nomagno> Still thinking about it.
[01:50:21] <nomagno> There are two proposals floating about. The first is fairly light, the second is heavier. The second would allow for very simple defer statements, so...
[01:50:55] <tk> it's interesting to see what will happen with that defer statement
[01:51:06] <nomagno> No idea if it'll be (complex defer, light lambda), (light lambda, no defer), or (complex lambda, light defer)
[01:51:09] <tk> On principle, I really like the idea. In reality there's a bit of a debugging issue with it
[01:51:11] *** Joins: malina (~malina@user/malina)
[01:51:23] <nomagno> I honestly don't see the point
[01:51:25] <zdctg[m]> I don't really use lamba's a whole lot but I don't really have a problem with them either it just feels like they're frequently something that's needed when you haven't designed things properly, but my qualm with them is the syntax-- [&]()->int {} that doesn't even look like C/C++ really
[01:51:44] <nomagno> I'd just use a function pointer array
[01:51:48] <nomagno> That is NULL-terminated.
[01:52:12] <nomagno> tagged union that contains function pointers array*
[01:52:23] <nomagno> Bit heavier but much, much less cumbersome to implement
[01:52:25] <tk> the issue with defer arises when it comes to tracebacks and debugging - what goes in the traceback when something goes wrong inside a defer, how do you know where in the code the defer got jumped into from
[01:53:09] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[01:53:27] <nomagno> I'm you know what I'm all for? Having auto-skip labels.
[01:53:41] <nomagno> invisible_qualifier my_label: {code_block}
[01:54:47] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[01:54:52] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[01:55:34] <nomagno> Essentially except when jumped into with GOTO it goes there, then it goes back automatically
[01:55:41] *** Quits: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net) (Ping timeout: 256 seconds)
[01:55:43] <nomagno> kinda definitely like a context-aware macro
[01:59:04] *** Joins: HisShadow (~HisShadow@user/hisshadow)
[01:59:18] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[02:00:31] *** Joins: Masklin (~joel@h-155-4-23-152.A230.priv.bahnhof.se)
[02:03:39] *** Quits: bkhl (~bkhl@user/bkhl) (Remote host closed the connection)
[02:04:03] *** Joins: bkhl (~bkhl@user/bkhl)
[02:08:25] *** Quits: joilerv (~joilerv@host86-191-117-90.range86-191.btcentralplus.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:09:01] *** Quits: enyc (~enyc@user/enyc) (Ping timeout: 240 seconds)
[02:13:07] <nitrix> if (0) { label: ... }
[02:14:43] <nitrix> The resume mechanism is the more complicated part and the macros would need runtime help.
[02:16:19] <neshpion> why not just use a function though
[02:16:23] <nitrix> At some point you have to stop pretending that C is a language that it's not and just embrace its flaws. The code is a little more verbose and you move on.
[02:17:10] <nitrix> The very repetitive parts can become initialization/cleanup functions, you can create your own conventions and it's pretty smooth sailing after that.
[02:17:52] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[02:18:25] <nitrix> I don't understand the crazy of complexifying things. In a way, I'm very happy that C has limitations preventing people from trying to be too clever.
[02:18:40] <nitrix> *craze.
[02:25:06] <nitrix> C has a couple concrete types and functions playing the role of procedures. In an absurd way, it's almost more "functional" than the functional languages, with their purity, monads, implicit arguments, effect system and whatnot. Not mathematically of course, but in terms of the building blocks involved.
[02:26:37] *** Quits: r_n_d (~r_n_d@gateway/tor-sasl/rnd/x-30212483) (Quit: Leaving)
[02:28:03] <nitrix> What is it about procedures that scares people to the point of introducing all this additional complexity?
[02:28:21] <neshpion> it's not HIP
[02:28:44] <nomagno> nitrix: I don't really have anything to fear with subroutines. It's just I don't like the callstack requirement sometimes!
[02:28:47] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[02:29:00] <sham1> If only C had some kind of TCO
[02:29:04] <nomagno> I think I design extremely clean interfaces
[02:29:06] <sham1> Even if opt-in
[02:30:31] <sham1> Even the "return goto" idea is interesting
[02:30:44] *** Joins: System_Error (~SystemErr@user/systemerror)
[02:30:57] <edk> the problem with call stacks is that there aren't enough of them
[02:30:59] <edk> give me coroutines
[02:32:20] *** Quits: Akuli (~Akuli@82-203-162-15.bb.dnainternet.fi) (Quit: Akuli)
[02:32:28] <nitrix> I suspect it's a tradeoff between working slowly with a few building materials vs. working quickly with a ton of prefabricated blocks.
[02:32:42] *** Joins: Viewday118 (~Viewday@user/viewday)
[02:33:11] *** Quits: nyjets (~zz@2001:8003:1612:d500:586:c933:946e:f1fb) (Quit: WeeChat 1.1.1)
[02:33:48] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[02:33:48] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[02:33:48] *** Joins: wroathe (~wroathe@user/wroathe)
[02:33:56] *** Quits: noarb (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[02:34:07] *** Joins: pizdets (~pizdets@183.182.111.45)
[02:34:14] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[02:34:15] *** Viewday118 is now known as Viewday11
[02:34:16] <edk> i do think there are things that don't feel very "big" that it would be nice if we could do in C
[02:34:23] <edk> (coroutines being one)
[02:34:48] *** Quits: pizdets_ (~pizdets@183.182.110.193) (Ping timeout: 250 seconds)
[02:38:39] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:4003:8970:d961:ff06) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[02:39:29] <sham1> The question with coroutines would be if they're stackless or stackful
[02:39:35] *** Joins: auk (auk@gateway/vpn/protonvpn/auk)
[02:39:36] <bkhl> sasl status
[02:39:44] <bkhl> Sorry, wrong window
[02:40:41] <Inline> ask lua the coroutine god ?
[02:40:45] <Inline> lol
[02:44:10] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[02:44:27] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: neshpion)
[02:45:00] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[02:45:05] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:46:17] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 240 seconds)
[02:46:37] <sham1> Lua does full stackful coroutines. It's nice but in C it would be really weird, considering that one ought to be pass arguments whenever the coroutine yields and when it gets restarted again. Of course one could pass around pointers to void, butâ€¦ it'd be tricky
[02:47:51] <edk> i mean presumably they'd be typed
[02:48:20] <sham1> But if we're talking about coroutines in C, call/cc when? We already have delimited continuation stuff by way of setjmp and longjmp if one really squints at them, but yeah
[02:49:09] *** Joins: gproto23 (~gproto23@user/gproto23)
[02:49:18] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[02:49:36] <edk> i don't think call/cc would be a sensible thing for C to try to have
[02:50:05] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 2.8)
[02:51:53] *** Joins: cthi_ (~cthi@097-082-138-151.res.spectrum.com)
[02:52:04] *** Quits: cthi (~cthi@097-082-138-151.res.spectrum.com) (Quit: leaving)
[02:52:48] <kurahaupo_> sham1: without multiple stacks setjmp/longjmp can't do coroutines, only something that resembles exception catching
[02:53:16] <kurahaupo_> sham1: Though I'm not clear what boundaries you're talking about
[02:53:18] <sham1> Indeed, and thus one also includes the squinting
[02:53:41] <DarkUranium> call/cc is kinda shite
[02:53:50] <DarkUranium> I'd be up for *delimited* continuations, though.
[02:54:10] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[02:54:46] <sham1> Yes it is
[02:55:22] <edk> if you want to implement one kind of flow control construct so that anyone writing your language can implement any other kind of flow control i feel like call/cc is a good choice
[02:55:44] <kurahaupo_> DarkUranium: What limits or boundaries are you contemplating seeing on a continuation?
[02:55:48] <sham1> Eh, call/cc isn't all that useful for that it turns out
[02:56:02] <DarkUranium> kurahaupo_: eh?
[02:56:08] <DarkUranium> What do you mean by that?
[02:56:27] <kurahaupo_> delimit = set a boundary or scope
[02:56:36] <edk> delimited continuations are a specific thing
[02:56:39] <DarkUranium> ^
[02:57:47] *** Joins: savolla (~quassel@88.227.92.215)
[02:58:46] <kurahaupo_> edk: How do they differ from regular continuations, if not by the imposition of some limitations? Or which limitations?
[03:00:07] <sham1> Alright, so an undelimited continuation basically stores "the rest of the program" as the state one returns to when invoking the continuation
[03:00:14] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: Disconnecting)
[03:00:26] <sham1> A delimited continuation on the other hand is, well, delimited. It only goes so far
[03:00:31] <sham1> It can't time travel
[03:01:08] <sham1> With an undelimited continuation, you can move up and down the call stack and even laterally
[03:01:30] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[03:01:54] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[03:06:13] <DarkUranium> kurahaupo_: delimited continuations are a *more* powerful concept than undelimited.
[03:06:19] <kurahaupo_> Sorry I was confused by the neologism. "Limit" and "delimit" are not quite synonyms, but they're very close, so it's extremely unusual to use "delimited" as an adjective.
[03:07:36] <DarkUranium> A word from 1852, albeit not *very* old, is hardly a neologism anymore.
[03:08:10] <kurahaupo_> DarkUranium: A new usage for an old word
[03:08:12] <sham1> Delimited continuation are more powerful which is ironic given that the undelimited variety seems at first glance more general
[03:08:19] <DarkUranium> kurahaupo_: an old usage for an old word.
[03:08:25] <DarkUranium> "delimit" was never the opposite of "limit".
[03:08:27] <edk> "delimited continuation" is not from 1852
[03:08:33] <DarkUranium> edk: no, but "delimit" is.
[03:08:53] <DarkUranium> They're delimited in the original meaning of the word. Nothing new here.
[03:08:55] <kurahaupo_> DarkUranium: I'm talking about the coined phrase
[03:09:31] <kurahaupo_> Anyway, that's sorted, I'll read the Wikipedia page for details
[03:10:06] <kurahaupo_> thanks sham1, edk, DarkUranium
[03:10:07] <DarkUranium> kurahaupo_: it's coined phrase in the same sense as to how e.g. "red car" is. "red" is not a new word, and it's not used in a new meaning.
[03:10:17] <DarkUranium> Even if the concept of a car is (relatively) nwe.
[03:10:19] <DarkUranium> new*
[03:10:49] <sham1> Just under 150 years or so
[03:10:50] <kurahaupo_> DarkUranium: can I just quietly admit defeat please
[03:10:51] <DarkUranium> But yeah, what sham1 said.
[03:11:15] <DarkUranium> I mean, on delimited continuations being the more powerful concept.
[03:13:06] <ski> delimited continuations e.g. allow you to turn internal iteration into external iteration
[03:13:24] <DarkUranium> Can also be used to implement (far more naturally than with undelimited) async/await, exceptions, generators, and more.
[03:13:41] <edk> i'm not sure if it's really more powerful
[03:13:44] <edk> call/cc can do all those things
[03:14:09] <DarkUranium> edk: by the same argument, you can do anything without continuations at all (thus, no call/cc).
[03:14:12] <ski> (some library provides a `foreach'-type function, accepting a callback. with del-cont, you can now convert that to a stream, that you can iterate on with `for' or however you want)
[03:14:15] <DarkUranium> You can always reduce things to a turing machine.
[03:14:16] <edk> i mean, yeah, true
[03:14:21] <DarkUranium> But for the usual meaning of "more powerful", they are.
[03:14:22] <ski> edk : `call/cc' *and* state
[03:14:46] *** Quits: freep (~freepppp@46.246.189.172.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[03:14:46] <ski> (with pure undelimited continuations, you can't)
[03:15:13] <DarkUranium> Also, you can trivially implement call/cc with delimited continuations, but not vice-versa.
[03:15:22] <DarkUranium> (just delimit the entire program)
[03:15:25] <ski> anyway, the main point here is that del-cont is often a more convenient interface for what you want to do, and are more easily implemented in a more efficient way
[03:16:36] <DarkUranium> Also, they compose much better IMO.
[03:16:39] <DarkUranium> Delimited, that is.
[03:16:47] <ski> (continuation stuff does interact with the dynamic extent of things, though, so you'll presumably want to coordinate with exception handlers, and other such dynamic resources)
[03:17:54] <edk> there's not really a sensible way for any continuation stuff to interact with stack-unwinding exceptions though
[03:18:25] *** Quits: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it) (Ping timeout: 256 seconds)
[03:19:20] <kurahaupo_> The wiki page is hard going because the examples are all scheme, and it's been a very long time since I read LISP - basically before the 1988 paper that introduced delimited continuations. Are they useful without lazy evaluation?
[03:20:04] <random-nick> scheme doesn't use lazy evaluation
[03:20:24] <kurahaupo_> So the resemblance to LISP is just cosmetic?
[03:20:42] <DarkUranium> Scheme is a Lisp dialect ...
[03:20:49] <DarkUranium> And indeed, does not use lazy evaluation.
[03:21:25] <DarkUranium> So your last question is a non-sequitor. Lazy evaluation has nothing to do with the fact that it's a Lisp. The two issues are orthogonal.
[03:21:26] <ski> SML/NJ and MLton does have continuations. and i recall seeing them implemented in a Smalltalk, maybe also Ruby. hm, Prolog too (del-cont)
[03:21:36] <kurahaupo_> The wiki page special mentions "If we replace cons with stream-cons, we can build lazy streams:". Is that LISP or Scheme?
[03:21:55] <DarkUranium> edk: pretty sure there should be, given that you can implement exceptions with delimited continuations?
[03:22:27] <edk> delimited continuations always have somewhere you can make them return from
[03:22:44] <edk> which would be very destructive if you'd just delimited the entire program
[03:22:45] <ski> you can build lazy suspensions/promises, and build streams out of that, in Scheme, just like you can do in many other languages. that doesn't mean Scheme, as a language, does any lazy or non-strict evaluation
[03:23:16] <edk> you'd basically have ended up doing that if you implemented co-call with delimited continuations, i think, and that's reasonable because if there is nowhere sensible for a coroutine to unwind to but outside the entire program
[03:23:26] <ski> kurahaupo_ : that `stream-cons' is quite possibly from SICP
[03:23:45] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Ping timeout: 256 seconds)
[03:24:47] <DarkUranium> That Wikipedia page honestly looks quite bad (but just skimmed over it)
[03:24:55] <kurahaupo_> damn, I've let all my non-imperative languages atrophy from lack of use. I should have spent more time keeping up with the research
[03:25:41] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[03:25:47] <edk> why would you need to use a language that's not C? :)
[03:25:54] <ski> hm, i also recall seeing stuff linking del-cont to system-level stuff, like file systems, process contexts, ..
[03:26:22] *** Joins: saline_retry_ (auk@gateway/vpn/protonvpn/auk)
[03:26:23] <kurahaupo_> edk: Hey, I have Perl!
[03:26:55] *** Quits: auk (auk@gateway/vpn/protonvpn/auk) (Ping timeout: 256 seconds)
[03:27:29] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:28:56] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[03:33:51] *** Joins: cmburn (~Charlie_B@2601:441:4c00:67d:4108:5d70:704e:57da)
[03:34:25] *** saline_retry_ is now known as auk
[03:35:46] *** Quits: kish (~aqua@user/aqua) (Remote host closed the connection)
[03:36:11] *** Joins: pnbeast (~pnbeast@2601:140:4280:6ce0::1)
[03:36:12] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: Goodbye.)
[03:38:41] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[03:39:14] *** Joins: kish` (~aqua@user/aqua)
[03:40:25] *** Chpy0 is now known as Chompy
[03:44:03] *** Quits: savolla (~quassel@88.227.92.215) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:44:30] *** Joins: savolla (~quassel@88.227.92.215)
[03:44:51] *** Quits: savolla (~quassel@88.227.92.215) (Client Quit)
[03:46:03] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[03:46:15] *** Joins: slidercrank (~slidercra@user/slidercrank)
[03:47:19] *** Quits: bnchs___ (~bnchs@105.157.173.69) (Ping timeout: 256 seconds)
[03:47:33] *** Quits: Dotz0cat (~Dotz0cat@h55.84.187.173.dynamic.ip.windstream.net) (Ping timeout: 256 seconds)
[03:49:23] *** Joins: Satin (uid193953@user/Seten)
[03:51:05] *** Joins: Dotz0cat (~Dotz0cat@h124.175.40.162.dynamic.ip.windstream.net)
[03:52:11] *** Quits: Fairy (~Fairy@ti0004a400-5385.bb.online.no) (Ping timeout: 256 seconds)
[03:53:45] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[03:54:44] *** Joins: savolla (~quassel@88.227.92.215)
[03:55:59] *** Quits: savolla (~quassel@88.227.92.215) (Client Quit)
[03:56:20] *** Joins: savolla (~quassel@88.227.92.215)
[03:56:20] *** Quits: savolla (~quassel@88.227.92.215) (Client Quit)
[03:57:15] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[03:57:31] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 256 seconds)
[03:58:19] *** Joins: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it)
[04:02:19] <nomagno> I managed to figure out how to get a goto return mechanism in C99...
[04:02:21] <nomagno> But it needs functions to work
[04:02:23] <nomagno> ooops
[04:03:25] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[04:03:54] *** Joins: SymbioticFemale (~Symbiotic@user/SymbioticFemale)
[04:04:32] *** Joins: ka80 (~ka80@111.60.138.34.bc.googleusercontent.com)
[04:05:13] *** Joins: Wulf (~Wulf@user/wulf)
[04:07:04] *** Joins: Twipply (~Twipply@user/twipply)
[04:12:50] *** Quits: cmburn (~Charlie_B@2601:441:4c00:67d:4108:5d70:704e:57da) (Read error: Connection reset by peer)
[04:15:21] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[04:15:57] *** Joins: HaMsTeRs (~Thunderbi@210.3.213.4)
[04:17:34] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:d154:b93f:c8:b39)
[04:18:43] *** Quits: mad_enz (~mad_enz@lnsm1-torontoxn-142-120-17-169.internet.virginmobile.ca) (Ping timeout: 256 seconds)
[04:19:51] *** Quits: sr20det (~sr20det@user/sr20det) (Ping timeout: 256 seconds)
[04:21:15] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: Goodbye.)
[04:23:56] *** Joins: acerbic (~acerbic@cs-xdata-50-86-53-98.cspire.com)
[04:31:10] *** Joins: mad_enz (~mad_enz@lnsm4-toronto12-50-101-118-206.internet.virginmobile.ca)
[04:33:09] *** Joins: Viewday112 (~Viewday@user/viewday)
[04:34:40] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[04:34:40] *** Viewday112 is now known as Viewday11
[04:34:52] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[04:36:05] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:36:51] *** Quits: mahmutov (~mahmutov@5.176.26.76) (Ping timeout: 256 seconds)
[04:38:10] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[04:38:40] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[04:40:34] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[04:41:03] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Client Quit)
[04:41:31] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[04:45:41] *** Quits: auk (auk@gateway/vpn/protonvpn/auk) (Quit: Leaving)
[04:50:09] *** Joins: savolla (~quassel@88.227.92.215)
[04:50:25] *** Joins: myon98 (~myon98@user/myon98)
[04:50:49] *** Quits: savolla (~quassel@88.227.92.215) (Remote host closed the connection)
[04:51:12] *** Joins: savolla (~quassel@88.227.92.215)
[04:51:59] *** Quits: savolla (~quassel@88.227.92.215) (Remote host closed the connection)
[04:54:03] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[04:54:23] *** Joins: Viewday11 (~Viewday@user/viewday)
[04:55:15] *** Quits: acerbic (~acerbic@cs-xdata-50-86-53-98.cspire.com) (Read error: Connection reset by peer)
[04:56:23] *** Joins: seninha (~seninha@user/seninha)
[04:58:46] *** Quits: soapsudsxx (~soapsudsx@209.221.40.152) (Remote host closed the connection)
[05:04:23] *** Joins: Torr (~Torr@user/torr)
[05:05:41] *** Joins: Vsg21\[m] (~vtrollmat@2001:470:69fc:105::17a8)
[05:09:10] <Vsg21\[m]> .
[05:12:32] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[05:12:47] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[05:17:22] *** Quits: oriba (~oriba@dynamic-077-191-250-060.77.191.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[05:21:09] *** Quits: kts (~kts@103.73.237.119) (Ping timeout: 256 seconds)
[05:29:19] <ski> nomagno : "goto return" ?
[05:30:40] *** Quits: vancz (~vancz@user/vancz) (Quit: vancz)
[05:33:39] *** Joins: sr20det (~sr20det@user/sr20det)
[05:34:20] *** Joins: vancz (~vancz@user/vancz)
[05:35:28] *** Quits: myth (~myth@173.233.125.203) (Remote host closed the connection)
[05:42:21] *** Quits: steve__ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 256 seconds)
[05:44:17] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 240 seconds)
[05:48:36] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[05:49:04] *** Joins: Fairy (~Fairy@ti0004a400-5385.bb.online.no)
[05:51:18] *** Quits: tusko (~yeurt@copyfree/advocate/tusko) (Remote host closed the connection)
[05:51:34] *** Joins: tusko (~yeurt@copyfree/advocate/tusko)
[05:51:59] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[06:01:21] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[06:01:33] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[06:04:16] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[06:17:18] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:d154:b93f:c8:b39) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[06:22:29] *** Quits: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67) (Quit: Leaving)
[06:25:21] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[06:26:24] *** Quits: HaMsTeRs (~Thunderbi@210.3.213.4) (Quit: HaMsTeRs)
[06:29:43] *** Joins: serbest (~serbest@31.223.94.237)
[06:30:44] *** Quits: serbest (~serbest@31.223.94.237) (Client Quit)
[06:31:18] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[06:32:04] *** Joins: noarb (~noarb@user/noarb)
[06:33:01] *** Joins: Viewday113 (~Viewday@user/viewday)
[06:33:06] *** Joins: serbest (~serbest@31.223.94.237)
[06:33:26] *** Quits: serbest (~serbest@31.223.94.237) (Changing host)
[06:33:26] *** Joins: serbest (~serbest@user/serbest)
[06:33:59] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[06:34:15] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 256 seconds)
[06:34:43] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[06:34:43] *** Viewday113 is now known as Viewday11
[06:37:33] *** Quits: Syroth (~Syroth@pool-96-244-212-50.bltmmd.fios.verizon.net) (Quit: Leaving)
[06:38:17] *** Quits: serbest (~serbest@user/serbest) (Quit: leaving)
[06:39:41] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[06:41:26] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:d154:b93f:c8:b39)
[06:42:07] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Quit: leaving)
[06:43:41] *** Quits: nicode (~nic@2607:f2c0:9545:fa00:dee7:6718:e07b:924c) (Ping timeout: 245 seconds)
[06:45:35] *** Quits: Charadon (~Charadon@155.138.164.183) (Ping timeout: 256 seconds)
[06:47:13] *** Parts: abraxis (~abraxis@user/abraxis) ()
[06:50:21] *** Quits: lucho666 (~admred201@45.178.2.1) (Quit: lucho666)
[06:52:31] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:54:53] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 256 seconds)
[06:55:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[06:55:51] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[06:55:51] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[06:55:51] *** Joins: wroathe (~wroathe@user/wroathe)
[06:56:35] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 256 seconds)
[06:56:38] *** Quits: beco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73) (Read error: Connection reset by peer)
[07:07:00] *** Joins: Emet-Selch (~haise01@user/haise01)
[07:07:35] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[07:07:52] *** Quits: vancz (~vancz@user/vancz) (Quit: vancz)
[07:09:56] *** Quits: Azem (~haise01@user/haise01) (Ping timeout: 250 seconds)
[07:11:04] *** Parts: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) ()
[07:13:34] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[07:17:40] *** Joins: beco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73)
[07:20:54] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[07:23:30] *** Joins: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru)
[07:24:47] *** Joins: asdafasskadkasda (~asdafassk@151.210.135.108)
[07:24:57] *** Parts: asdafasskadkasda (~asdafassk@151.210.135.108) ()
[07:27:25] *** Quits: pulse (~pulse@user/pulse) (Quit: My hovercraft is full of eels)
[07:27:30] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:30:45] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[07:31:50] *** Joins: boB_K7IQ (~boB_K7IQ@ip72-201-138-188.ph.ph.cox.net)
[07:32:36] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[07:33:08] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:04] *** Joins: fe23 (~fe23@2409:8a34:46c:f80:fd48:f083:931c:1bbc)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:33] *** Quits: imp (~imp@138-59-122-25.static.sumicity.net.br) (Quit: imp)
[07:38:26] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:fc0d:abca:2520:17e4) (Read error: Connection reset by peer)
[07:38:59] *** Quits: Fl0pFl1p (~FlipFlop@user/fl1pfl0p) (Quit: Leaving)
[07:39:03] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[07:49:52] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: Goodbye.)
[07:50:23] *** Joins: bindu (~bindu@user/bindu)
[07:51:00] *** Joins: malina (~malina@user/malina)
[07:52:07] *** Quits: SymbioticFemale (~Symbiotic@user/SymbioticFemale) (Quit: leaving)
[07:52:57] *** Quits: Fairy (~Fairy@ti0004a400-5385.bb.online.no) (Ping timeout: 240 seconds)
[07:56:01] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:908a:2473:4e70:b49a)
[07:58:53] *** Joins: vancz (~vancz@user/vancz)
[07:59:35] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[08:00:08] *** Quits: beco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73) (Quit: Leaving)
[08:04:01] *** Joins: imp (~imp@138-59-122-25.static.sumicity.net.br)
[08:12:43] *** Joins: Akiva (~Akiva@user/Akiva)
[08:22:32] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[08:23:14] *** Joins: vire (~vire@106.212.254.159)
[08:24:50] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[08:28:00] *** Joins: Darkcoal (~user@user/Darkcoal)
[08:32:42] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[08:33:01] *** Joins: Viewday112 (~Viewday@user/viewday)
[08:34:33] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[08:34:34] *** Viewday112 is now known as Viewday11
[08:36:01] *** Parts: fmlatghor (~lcoogan@2601:5cd:8100:2890::6) (WeeChat 3.2)
[08:38:02] *** Joins: R[m] (~bellaciao@2001:470:69fc:105::fd1d)
[08:39:49] *** Parts: R[m] (~bellaciao@2001:470:69fc:105::fd1d) ()
[08:40:22] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[08:40:22] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[08:40:22] *** Joins: wroathe (~wroathe@user/wroathe)
[08:41:25] *** Quits: oxfuxxx (~oxfuxxx@87.101.92.72) (Ping timeout: 256 seconds)
[08:47:08] *** Joins: oxfuxxx (~oxfuxxx@87.101.92.119)
[08:51:03] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[08:51:55] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[08:55:01] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[08:56:34] *** Joins: masoudd (~masoudd@user/masoudd)
[08:57:51] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[09:01:02] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[09:04:05] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[09:04:47] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[09:04:50] *** Joins: sonny (~sonny@bras-base-london1483w-grc-30-74-12-157-79.dsl.bell.ca)
[09:10:17] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[09:24:07] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[09:29:33] *** Joins: abraxis (~abraxis@user/abraxis)
[09:30:21] *** Quits: vire (~vire@106.212.254.159) (Quit: vire)
[09:30:51] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[09:33:33] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[09:35:45] *** Joins: bindu (~bindu@user/bindu)
[09:41:17] *** Quits: oxfuxxx (~oxfuxxx@87.101.92.119) (Ping timeout: 240 seconds)
[09:48:20] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[09:49:25] *** Joins: Fairy (~Fairy@ti0004a400-5385.bb.online.no)
[09:49:49] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[09:53:18] *** Joins: Everything (~Everythin@37.115.210.35)
[09:59:33] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[10:01:26] *** Joins: oxfuxxx (~oxfuxxx@87.101.92.72)
[10:04:43] *** Quits: joev (~joev@user/joev) (Ping timeout: 256 seconds)
[10:05:32] *** Joins: joev (~joev@user/joev)
[10:09:20] *** Quits: jancoow (~jancoow@user/jancoow) (Ping timeout: 250 seconds)
[10:22:24] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[10:22:40] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[10:22:40] *** Quits: s1b1 (~s1b1@user/s1b1) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[10:24:31] *** Quits: sonny (~sonny@bras-base-london1483w-grc-30-74-12-157-79.dsl.bell.ca) (Remote host closed the connection)
[10:24:51] *** Joins: sonny (~sonny@bras-base-london1483w-grc-30-74-12-157-79.dsl.bell.ca)
[10:25:57] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:908a:2473:4e70:b49a) (Quit: Quit)
[10:27:16] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[10:27:27] *** Quits: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[10:31:47] *** Quits: sonny (~sonny@bras-base-london1483w-grc-30-74-12-157-79.dsl.bell.ca) (Remote host closed the connection)
[10:32:06] *** Joins: sonny (~sonny@bras-base-london1483w-grc-30-74-12-157-79.dsl.bell.ca)
[10:32:55] *** Joins: Viewday112 (~Viewday@user/viewday)
[10:34:42] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[10:34:42] *** Viewday112 is now known as Viewday11
[10:38:54] *** Joins: joilerv (~joilerv@135.129.250.144)
[10:41:07] *** Quits: imp (~imp@138-59-122-25.static.sumicity.net.br) (Quit: imp)
[10:43:33] *** Quits: joilerv (~joilerv@135.129.250.144) (Ping timeout: 250 seconds)
[10:44:11] *** Quits: sonny (~sonny@bras-base-london1483w-grc-30-74-12-157-79.dsl.bell.ca) (Remote host closed the connection)
[10:46:27] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[10:52:37] *** Joins: mahmutov (~mahmutov@37.155.4.137)
[10:56:39] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 276 seconds)
[10:57:29] *** Joins: kish` (~aqua@user/aqua)
[10:59:55] *** Quits: [R] (~rs@genoce.org) (Ping timeout: 256 seconds)
[11:00:16] *** Joins: [R] (~rs@genoce.org)
[11:04:36] *** Joins: kts (~kts@103.73.237.48)
[11:04:39] *** Joins: s1b1 (~s1b1@user/s1b1)
[11:05:40] *** Joins: ekathva (~ekathva@2001:999:50:cab1:b7e8:130b:c792:9fd)
[11:08:25] *** Quits: ekathva (~ekathva@2001:999:50:cab1:b7e8:130b:c792:9fd) (Max SendQ exceeded)
[11:08:47] *** Joins: ekathva (~ekathva@2001:999:50:cab1:b7e8:130b:c792:9fd)
[11:13:10] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[11:13:57] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[11:14:22] *** Quits: Murray7501 (~Murray@89.109-247-180.customer.lyse.net) (Quit: leaving)
[11:14:41] *** Joins: bindu (~bindu@user/bindu)
[11:15:00] *** Joins: sonny (~sonny@bras-base-london1483w-grc-30-74-12-157-79.dsl.bell.ca)
[11:15:09] *** Parts: sonny (~sonny@bras-base-london1483w-grc-30-74-12-157-79.dsl.bell.ca) ()
[11:18:10] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[11:18:18] *** Quits: kts (~kts@103.73.237.48) (Quit: Konversation terminated!)
[11:19:32] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[11:19:36] *** Joins: Tempesta (~Tempesta@user/tempesta)
[11:26:51] *** Joins: cherrry9 (~jan@aeil171.neoplus.adsl.tpnet.pl)
[11:27:07] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 256 seconds)
[11:30:20] *** Quits: nathanael (~nathanael@user/nathanael) (Quit: connection reset by purr)
[11:31:54] *** Joins: fbiagent_ (~fbiagent@user/fbiagent)
[11:32:59] *** Joins: aradesh (~aradesh@user/aradesh)
[11:34:29] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Ping timeout: 256 seconds)
[11:36:21] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: Goodbye.)
[11:38:37] *** Joins: nathanael (~nathanael@user/nathanael)
[11:39:01] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[11:40:13] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[11:40:13] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[11:40:13] *** Joins: wroathe (~wroathe@user/wroathe)
[11:43:19] *** Quits: oxfuxxx (~oxfuxxx@87.101.92.72) (Ping timeout: 256 seconds)
[11:44:13] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[11:45:21] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[11:46:32] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[11:52:23] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:d154:b93f:c8:b39) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[11:54:16] *** Joins: meator (~meator@user/meator)
[11:55:15] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[11:57:23] *** Joins: savolla (~quassel@88.227.92.215)
[11:57:34] *** Quits: savolla (~quassel@88.227.92.215) (Client Quit)
[11:58:09] *** Joins: savolla (~quassel@88.227.92.215)
[11:58:12] *** Quits: savolla (~quassel@88.227.92.215) (Client Quit)
[11:58:37] <pragma-> ,cc NULL
[11:58:40] <candide> pragma-: no output: NULL = (void *) 0x0
[11:58:46] * pragma- nods.
[11:59:36] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[12:00:03] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[12:00:06] <dave0> hey pragma-
[12:00:40] <pragma-> hola dave0
[12:01:59] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[12:02:22] <pragma-> just fiddling with candide's vm script. finally figured out how to make gdb properly see macros again. apparently dwarf-5 or whatever debug format gcc defaults to now doesn't include macros any longer. had to demand dwarf-2.
[12:02:56] <dave0> cool
[12:04:43] *** Joins: Tempesta (~Tempesta@user/tempesta)
[12:05:21] *** Joins: PaulusNL (~Paulus@80-100-64-239.ip.xs4all.nl)
[12:05:48] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:4003:8970:d961:ff06)
[12:06:24] *** Parts: Everything (~Everythin@37.115.210.35) ()
[12:06:58] *** Joins: ArthurStrong (~ArthurStr@37.115.210.35)
[12:07:04] *** Joins: puke (~puke@user/puke)
[12:10:36] *** Quits: ekathva (~ekathva@2001:999:50:cab1:b7e8:130b:c792:9fd) (Quit: Leaving)
[12:11:37] *** Quits: fe23 (~fe23@2409:8a34:46c:f80:fd48:f083:931c:1bbc) (Ping timeout: 240 seconds)
[12:13:35] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[12:13:50] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[12:14:15] *** Quits: ArthurStrong (~ArthurStr@37.115.210.35) (Remote host closed the connection)
[12:14:39] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[12:15:16] *** Joins: freep (~freepppp@46.246.189.172.dsl.dyn.forthnet.gr)
[12:15:45] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[12:16:27] *** Joins: ArthurStrong (~ArthurStr@37.115.210.35)
[12:17:55] *** Joins: bindu (~bindu@user/bindu)
[12:19:51] *** Joins: joilerv_ (~joilerv@135.129.250.144)
[12:20:31] *** Joins: mrig (~mrig@user/mrig)
[12:22:38] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[12:23:11] *** Joins: meator (~meator@user/meator)
[12:24:15] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[12:24:31] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[12:25:29] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:4003:8970:d961:ff06) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[12:30:20] *** Quits: Ap3 (~ape@kanonenjagd.panzer.ninja) (Quit: bye)
[12:30:25] *** Quits: joilerv_ (~joilerv@135.129.250.144) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[12:30:26] *** Quits: van (~van@46.23.94.214) (Quit: WeeChat 3.1)
[12:32:43] *** Joins: Viewday113 (~Viewday@user/viewday)
[12:34:53] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[12:34:53] *** Viewday113 is now known as Viewday11
[12:42:30] *** Joins: Ap3 (~ape@kanonenjagd.panzer.ninja)
[12:47:35] *** Joins: savolla (~quassel@88.227.92.215)
[12:49:01] *** Quits: savolla (~quassel@88.227.92.215) (Client Quit)
[12:50:08] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:52:30] *** Joins: savolla (~quassel@88.227.92.215)
[12:52:52] *** Quits: savolla (~quassel@88.227.92.215) (Client Quit)
[12:53:55] *** Quits: Fairy (~Fairy@ti0004a400-5385.bb.online.no) (Ping timeout: 256 seconds)
[12:54:19] *** Joins: savolla (~quassel@88.227.92.215)
[12:55:26] *** Quits: savolla (~quassel@88.227.92.215) (Client Quit)
[12:56:18] *** Joins: joilerv (~joilerv@135.129.250.144)
[12:58:14] <puke> What would be a good way to break an array into one or more groups with each group receiving a fixed number of randomly chosen values? (i.e. 3 values chosen at random into group A, and the remaining values into group B, etc)
[12:58:56] *** Joins: savolla (~quassel@88.227.92.215)
[12:59:44] <dave0> puke: you could shuffle the array, and then copy the 3 elements to A and the rest to B or whatever
[12:59:54] <dave0> copy the first 3
[13:00:36] <caze> puke: Have a an array containing pointers to each element of the first array.
[13:01:22] *** Quits: PaulusNL (~Paulus@80-100-64-239.ip.xs4all.nl) (Quit: Konversation terminated!)
[13:01:32] *** Joins: kts (~kts@103.73.237.196)
[13:01:58] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Quit: WeeChat 3.4)
[13:02:15] *** Joins: PaulusNL (~PaulusNL@80-100-64-239.ip.xs4all.nl)
[13:03:31] <puke> hmmm
[13:05:11] <puke> I guess shuffling really is the way to go
[13:06:22] <caze> puke: Is sharing possible between groups? Is mutating the array okay?
[13:06:47] <puke> Mutating is fine yeah
[13:08:00] <puke> The real issue right now is I also have to manually pick out a specific value before the grouping happens
[13:08:19] *** Quits: meator (~meator@user/meator) (Ping timeout: 256 seconds)
[13:09:27] <caze> You can do it while shuffling.
[13:20:27] <dave0> puke: in case you need a shuffle algorithm: https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle
[13:22:55] *** Joins: Satin (uid193953@user/Seten)
[13:24:11] *** Quits: vboykox (~user@95.134.44.64) (Ping timeout: 256 seconds)
[13:25:55] *** Joins: vboykox (~user@233-8-134-95.pool.ukrtel.net)
[13:26:29] *** Emet-Selch is now known as Azem
[13:26:32] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:c49f:99ea:fe:b5c8)
[13:26:32] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:c49f:99ea:fe:b5c8) (Changing host)
[13:26:32] *** Joins: skapata (~Skapata@user/skapata)
[13:29:13] <dave0> and here's some code: https://termbin.com/4isq
[13:37:29] *** Joins: meator (~meator@user/meator)
[13:37:35] <puke> ah
[13:37:48] <puke> I'll just use that one then
[13:37:56] <puke> thanks for the help btw
[13:38:29] <dave0> no worries
[13:40:17] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[13:40:25] *** Joins: Rounin (~david@84.212.130.215)
[13:41:18] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:43:09] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:43:54] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:4003:8970:d961:ff06)
[13:44:58] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[13:45:18] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[13:45:21] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[13:46:10] *** Joins: bnchs (~bnchs@105.157.173.69)
[13:46:32] *** Quits: ncrowl (~ncrowl@c-fda770d5.022-170-6c756e3.cust.ownit.se) (Read error: Connection reset by peer)
[13:51:24] *** Joins: ncrowl (~ncrowl@c-fda770d5.022-170-6c756e3.cust.ownit.se)
[13:52:15] *** Quits: Thymo (~Thymo@NASSP/developer/Thymo) (Ping timeout: 268 seconds)
[13:55:55] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[13:56:04] *** Joins: kts_ (~kts@103.73.237.187)
[13:56:29] *** Quits: kts (~kts@103.73.237.196) (Ping timeout: 256 seconds)
[13:57:44] *** Quits: joilerv (~joilerv@135.129.250.144) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[13:59:18] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:4003:8970:d961:ff06) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[13:59:33] *** Joins: seninha (~seninha@user/seninha)
[14:00:08] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[14:00:30] *** Joins: node1 (~hex@user/node1)
[14:00:32] *** Joins: seninha (~seninha@user/seninha)
[14:00:52] *** Quits: seninha (~seninha@user/seninha) (Client Quit)
[14:02:35] <node1> Hi, How do we check limits(maximum/minimum) of a float numbers ? It looks limit.h has no keyword for float
[14:04:05] *** Quits: kts_ (~kts@103.73.237.187) (Ping timeout: 256 seconds)
[14:04:07] *** Joins: jancoow (~jancoow@user/jancoow)
[14:04:16] *** Joins: Everything (~Everythin@37.115.210.35)
[14:04:36] <dave0> ,cc FLOAT_MAX
[14:04:37] <candide> dave0: error: 'FLOAT_MAX' undeclared; did you mean 'FLT_MAX'?
[14:04:42] <dave0> ,cc FLT_MAX
[14:04:42] *** Joins: plastico (~plastico@neomutt/plastico)
[14:04:44] <candide> dave0: no output: FLT_MAX = 3.40282347e+38
[14:04:56] <dave0> first time that warning ever worked for me
[14:05:13] *** Parts: Everything (~Everythin@37.115.210.35) ()
[14:06:06] *** Joins: fe23 (~fe23@2409:8a34:46c:f80:5d44:95fb:8530:7b02)
[14:06:57] *** Joins: hex_ (~hex@223.230.175.224)
[14:07:32] *** Quits: hex_ (~hex@223.230.175.224) (Remote host closed the connection)
[14:08:36] *** Quits: node1 (~hex@user/node1) (Killed (NickServ (GHOST command used by hex_!~hex@223.230.175.224)))
[14:09:28] <hsv> This is not permitted? - uint64_t bitarray[65536 / sizeof uint64_t];
[14:09:50] <dave0> have to put ()'s on   sizeof(uint64_t)
[14:09:55] *** Joins: seninha (~seninha@user/seninha)
[14:10:31] <hsv> oops. thank you.
[14:10:39] *** Joins: Thymo (~Thymo@82-74-137-251.cable.dynamic.v4.ziggo.nl)
[14:11:09] *** Joins: node1 (~hex@user/node1)
[14:11:47] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[14:11:59] <node1> I'm using gcc and 'FLOAT_MAX' looks  unable to recognised by it
[14:12:48] <dave0> the robot corrected me to FLT_MAX
[14:13:18] <dave0> ,cc DBL_MAX
[14:13:20] <candide> dave0: no output: DBL_MAX = 1.7976931348623157e+308
[14:13:24] <dave0> there's a double
[14:13:51] <dave0> there's a FLT_MIN too
[14:14:06] <hsv> node1: float.h
[14:14:52] <node1> I believe double and float both are similar, but no in range wise.
[14:15:00] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:4003:8970:d961:ff06)
[14:15:28] <dave0> it's kinda like the difference between short and long
[14:15:35] <dave0> same kind of thing, just a larger range
[14:16:37] <node1> ok
[14:16:45] <hsv> ,cc #include <float.h> \n FLT_MAX
[14:16:47] <candide> hsv: no output: FLT_MAX = 3.40282347e+38
[14:16:48] *** Joins: gproto23 (~gproto23@user/gproto23)
[14:18:34] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[14:20:30] *** Joins: bnchs__ (~bnchs@105.157.173.69)
[14:20:32] <hsv> ,cc LDBL_MAX
[14:20:34] <candide> hsv: no output: LDBL_MAX = 1.18973149535723176502e+4932
[14:20:58] *** Quits: bnchs (~bnchs@105.157.173.69) (Remote host closed the connection)
[14:21:50] <dave0> cool didn't know about that one
[14:22:41] <hsv> note, the type also affects precision not just the available range of values.
[14:22:57] *** Joins: terminalpusher (~terminalp@2a01:586:8792:1:272b:416f:33a5:39fb)
[14:24:13] *** Quits: savolla (~quassel@88.227.92.215) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:26:26] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:27:34] <node1> hsv, okay thanks
[14:27:39] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[14:27:43] *** Lord_of_Life_ is now known as Lord_of_Life
[14:29:08] *** Quits: node1 (~hex@user/node1) (Quit: Leaving)
[14:29:39] *** Joins: van (~van@46.23.94.214)
[14:29:56] *** Joins: savolla (~quassel@88.227.92.215)
[14:30:08] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[14:31:32] <hsv> Imagine you have a totaliser, like an electricity/gas/water meter, each second you add the usage in that second.  After a while of operation it freezes... because your chosen float type no longer has the resolution at that magnitude.
[14:32:06] *** Joins: joilerv (~joilerv@135.129.250.144)
[14:32:51] *** Joins: Viewday112 (~Viewday@user/viewday)
[14:34:06] *** Quits: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 250 seconds)
[14:34:11] *** Joins: aqua (~aqua@user/aqua)
[14:34:21] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[14:34:21] *** Viewday112 is now known as Viewday11
[14:34:24] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 276 seconds)
[14:34:24] *** Quits: tusko (~yeurt@copyfree/advocate/tusko) (Ping timeout: 276 seconds)
[14:34:29] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[14:35:00] *** Joins: tusko (~yeurt@copyfree/advocate/tusko)
[14:35:16] *** Quits: joilerv (~joilerv@135.129.250.144) (Client Quit)
[14:35:42] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[14:39:48] *** Joins: bindu (~bindu@user/bindu)
[14:41:25] *** Joins: bebyx (~Thunderbi@user/bebyx)
[14:44:55] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[14:45:58] *** Joins: h4k1m0u (~h4k1m0u@2001:861:3146:5890:ed95:fefa:32db:7c11)
[14:49:11] *** Joins: zx__ (~aqua@user/aqua)
[14:49:16] *** Quits: aqua (~aqua@user/aqua) (Remote host closed the connection)
[14:49:37] *** Quits: mahmutov (~mahmutov@37.155.4.137) (Ping timeout: 240 seconds)
[14:49:52] *** Joins: bindu (~bindu@user/bindu)
[14:50:00] *** Joins: Fairy (~Fairy@ti0004a400-5385.bb.online.no)
[14:50:45] <h4k1m0u> Hi, I came across a code in an xcb tutorial (xlib client: https://xcb.freedesktop.org/tutorial/events/) where the function `xcb_poll_for_event()` returns a `xcb_generic_event_t *` but that pointer is later casted to another pointer of type `xcb_expose_event_t *`. Knowing that these structs (xcb_generic_event_t & xcb_expose_event_t) don't have
[14:50:46] <h4k1m0u> exactly the same fields, I'm curious how this function is coded? Is it common in C to have functions declared to return a pointer to a type, but actually return another type? I have seen that with function accepting parameters of a `void *` generic type, but it's the first time I've seen this.
[14:51:10] *** zx__ is now known as kish
[14:51:38] <dave0> h4k1m0u: you would normally use a union for that
[14:52:13] <h4k1m0u> dave0, exactly, I've seen that used in SDL (with events I think)
[14:52:38] <dave0> yep x11 uses it for events too, but i don't know the specifics of xcb
[14:53:17] <sham1> Or something like `struct xcb_expose_event_t { struct xcb_generic_event_t generic_event; /* ... */};` and then if you have a pointer to struct xcb_expose_event_t you can also have that be a pointer to the first element of said struct, which in this case is xcb_generic_event_t
[14:53:56] <h4k1m0u> dave0, but if I remember correctly though in SDL, struct items are organized the same way as in the generic type which doesn't seem to be the case in X11
[14:54:47] <sham1> In fact, the way I described it is exactly how the event structs are laid out
[14:54:57] <sham1> So you have the generic event be a "header" for the rest of them
[14:55:46] *** Quits: divine (~divine@2001:470:8247:1::31) (Ping timeout: 250 seconds)
[14:55:59] *** Quits: beencubed (~beencubed@209.131.238.248) (Ping timeout: 256 seconds)
[14:56:05] *** Joins: divine (~divine@2001:470:8247:1::31)
[14:56:33] *** Quits: sivoais (~zaki@199.19.225.239) (Ping timeout: 256 seconds)
[14:57:22] <sham1> Looking up the exact layout is difficult at least in the xcb sources itself considering that a lot of it is autogenerated
[14:58:37] <h4k1m0u> sham1, I see, I guess it does explain why `xcb_generic_event_t` has fields `pad[7]` and `full_sequence` that don't appear in `xcb_expose_event_t`
[14:58:49] <sham1> Ye
[14:59:16] <dave0> h4k1m0u: i seem to remember there's a rule that if the initial sequence of members of the structs matches, you can access them through a pointer to either struct
[14:59:26] <dave0> not real sure about that rule though
[14:59:57] <h4k1m0u> dave0, that could make sense in this case as the first three field do match indeed
[15:00:01] <dave0> h4k1m0u: are you sure the xcb_generic_event_t is not in fact a union?
[15:00:52] <h4k1m0u> dave0, none of the two is declared as a union (both are structs)
[15:01:11] <sham1> dave0: it's not a struct
[15:01:27] <sham1> https://gitlab.freedesktop.org/xorg/lib/libxcb/-/blob/master/src/xcb.h#L141-147
[15:01:36] <dave0> phew i dunno.. there might be a rule but i'm not sure
[15:02:47] *** Quits: bnchs__ (~bnchs@105.157.173.69) (Ping timeout: 256 seconds)
[15:04:21] *** Quits: meator (~meator@user/meator) (Remote host closed the connection)
[15:04:40] *** Joins: meator (~meator@user/meator)
[15:04:59] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[15:06:58] <dave0> i would argue that this should have been a union
[15:07:29] *** Joins: sivoais (~zaki@199.19.225.239)
[15:07:41] *** Joins: steve__ (~steve@ool-182c2b80.dyn.optonline.net)
[15:09:18] *** Joins: beencubed (~beencubed@209.131.238.248)
[15:10:09] *** Quits: meator (~meator@user/meator) (Ping timeout: 256 seconds)
[15:10:57] *** Joins: random-nick (~random-ni@87.116.167.125)
[15:13:45] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[15:17:56] *** Joins: imp (~imp@138-59-122-25.static.sumicity.net.br)
[15:18:47] *** Joins: joilerv (~joilerv@host86-191-117-90.range86-191.btcentralplus.com)
[15:19:15] <h4k1m0u> it would've made more sense. dave0: isn't what you talked about earlier called "common initial sequence" rule (came across it during my google search)?
[15:19:45] <dave0> h4k1m0u: that sounds like it, but i don't know the rule
[15:20:07] <dave0> i remember someone quoted the standard
[15:22:43] <dave0> h4k1m0u: there's a different rule that you can cast a pointer to a different type, cast it back to the actual type, and then use the actual type ... that would make more sense in this case
[15:23:25] <dave0> h4k1m0u: if get_next_event actually constructed an expose_event_t and just temporarily casted it to a generic_event_t it would work
[15:23:37] <h4k1m0u> dave0, yes, I see what you mean
[15:23:48] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[15:24:15] <NRK> `struct a { int type; char *stuff; }; union { int type; struct a a; } ua;` it's valid to access `ua.type` here.
[15:24:19] <dave0> i think it's a code smell
[15:24:29] <NRK> xlib uses this technique
[15:25:02] <NRK> so you run a switch over the type and cast accordingly.
[15:25:07] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 256 seconds)
[15:27:36] <dave0> ,cc struct foo { char something[20]; } temp = { "hello" };    struct foo *x = &temp; int *y = (int *)x; struct foo *z = (struct foo *)y; puts(x->something); puts(z->something);
[15:27:38] <candide> dave0: hello hello
[15:27:52] <dave0> i think that round-a-bout way of assigning pointers is valid
[15:28:14] <dave0> as long as you never dereference y (because it does not point to the actual type of struct foo) it is valid
[15:28:53] <dave0> it's ugly
[15:29:13] <NRK> wdym? it's very cool
[15:29:20] <dave0> certainly if y was  void*  it's valid
[15:29:40] *** Quits: joilerv (~joilerv@host86-191-117-90.range86-191.btcentralplus.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[15:30:17] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:31:03] *** Joins: csrf (~csrf@user/csrf)
[15:31:46] *** Joins: meator (~meator@user/meator)
[15:32:26] <NRK> tbh, i kinda like the xlib api. it's pretty cozy once you get over the initial shock. don't know why people hate it so much.
[15:33:09] <h4k1m0u> casting pointers to different struct types work even with different member types, so it explains why the compiler doesn't complain
[15:33:20] *** Joins: joilerv (~joilerv@host86-191-117-90.range86-191.btcentralplus.com)
[15:34:00] <h4k1m0u> NRK, just got started with xcb, and i find it quite intuitive
[15:34:01] <dave0> NRK: it's quite verbose :-)
[15:34:08] <h4k1m0u> true
[15:34:40] *** cvmn is now known as caveman
[15:34:51] <dave0> also CamelCase lol
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:06] *** Joins: GrayArea_ (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net)
[15:39:01] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Quit: Leaving)
[15:39:17] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[15:41:33] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[15:42:52] *** Joins: tmpm697 (~tmpm697@171.224.178.134)
[15:43:59] *** Joins: tech_exorcist_ (txrcst@user/tech-exorcist/x-0447479)
[15:44:01] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[15:44:43] *** Joins: slidercrank (~slidercra@user/slidercrank)
[15:46:21] *** Joins: oem22 (xyz@151.30.129.165)
[15:48:01] *** Quits: h4k1m0u (~h4k1m0u@2001:861:3146:5890:ed95:fefa:32db:7c11) (Quit: Client closed)
[15:51:05] *** Quits: oem22 (xyz@151.30.129.165) (Quit: Going offline, see ya! (www.adiirc.com))
[15:57:25] *** Parts: bkhl (~bkhl@user/bkhl) ()
[15:57:44] *** Joins: bkhl (~bkhl@user/bkhl)
[15:58:42] *** Joins: oem (Username@151.30.129.165)
[15:59:32] *** Quits: oem (Username@151.30.129.165) (Client Quit)
[16:00:12] *** Joins: oxfuxxx (~oxfuxxx@87.101.92.72)
[16:00:36] *** Quits: joilerv (~joilerv@host86-191-117-90.range86-191.btcentralplus.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[16:03:47] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[16:06:36] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 245 seconds)
[16:08:09] *** Joins: bebyx (~Thunderbi@user/bebyx)
[16:08:26] *** Quits: bebyx (~Thunderbi@user/bebyx) (Read error: Connection reset by peer)
[16:08:43] *** Joins: bebyx (~Thunderbi@user/bebyx)
[16:09:08] *** Quits: bebyx (~Thunderbi@user/bebyx) (Read error: Connection reset by peer)
[16:09:26] *** Joins: bebyx (~Thunderbi@user/bebyx)
[16:11:30] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[16:15:30] <fizzie> The "common initial sequence" rule only applies to *structures* inside unions, so does not relate to accessing `u.type` in `union { int type; struct { int type; ... } x; } u` after setting `u.x`.
[16:15:57] <fizzie> If that's valid, it's due to type punning and the first member of a structure always starting from its lowest byte.
[16:17:12] <fizzie> Ref 6.5.2.3p6: "One special guarantee is made in order to simplify the use of unions: if a union contains several structures that share a common initial sequence (see below), and if the union object currently contains one of these structures, it is permitted to inspect the common initial part of any of them anywhere that a declaration of the completed type of the union is visible."
[16:21:04] *** Quits: Beastie (~lcu@user/thebeastie) (Quit: WeeChat 3.4)
[16:21:24] *** Joins: Beastie (~lcu@user/thebeastie)
[16:22:41] *** Quits: GrayArea_ (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net) (Ping timeout: 256 seconds)
[16:23:56] *** Parts: psb___ (sid500598@id-500598.ilkley.irccloud.com) ()
[16:26:40] *** Joins: pehaef (~pehaef@user/pehaef)
[16:27:24] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[16:27:47] *** Quits: pehaef (~pehaef@user/pehaef) (Client Quit)
[16:28:20] *** Joins: pehaef (~pehaef@user/pehaef)
[16:28:36] *** Quits: pehaef (~pehaef@user/pehaef) (Client Quit)
[16:28:57] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[16:29:14] *** Joins: cassepipe (~Thunderbi@176.158.185.110)
[16:29:33] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[16:34:01] *** Joins: acerbic (~acerbic@cs-xdata-50-86-53-98.cspire.com)
[16:35:11] *** Joins: pehaef (~pehaef@user/pehaef)
[16:35:13] *** Joins: pulse (~pulse@user/pulse)
[16:35:31] *** Quits: imp (~imp@138-59-122-25.static.sumicity.net.br) (Read error: Connection reset by peer)
[16:36:05] *** Quits: tmpm697 (~tmpm697@171.224.178.134) (Quit: Lost terminal)
[16:41:17] *** Quits: pnbeast (~pnbeast@2601:140:4280:6ce0::1) (Quit: WeeChat 2.7.1)
[16:42:21] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[16:44:46] *** Joins: meator (~meator@user/meator)
[16:45:22] *** Quits: haniaF (~haniaF@83.24.206.88.ipv4.supernova.orange.pl) (Quit: ZNC 1.8.2 - https://znc.in)
[16:45:26] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:4003:8970:d961:ff06) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[16:48:45] *** Quits: malina (~malina@user/malina) (Ping timeout: 256 seconds)
[17:00:35] *** Quits: pehaef (~pehaef@user/pehaef) (Quit: leaving)
[17:03:10] *** Joins: pehaef (~pehaef@user/pehaef)
[17:04:07] *** Quits: pehaef (~pehaef@user/pehaef) (Client Quit)
[17:04:42] *** Joins: pehaef (~pehaef@user/pehaef)
[17:06:17] *** Joins: SaltHillStroller (~SaltHillS@199.249.111.186)
[17:06:20] *** Quits: savolla (~quassel@88.227.92.215) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[17:06:36] *** Quits: pehaef (~pehaef@user/pehaef) (Client Quit)
[17:07:17] *** Joins: ssj (~jsjsj@a213-22-192-47.cpe.netcabo.pt)
[17:07:59] *** Quits: acerbic (~acerbic@cs-xdata-50-86-53-98.cspire.com) (Read error: Connection reset by peer)
[17:08:06] *** Joins: pehaef (~pehaef@user/pehaef)
[17:10:32] *** Quits: SaltHillStroller (~SaltHillS@199.249.111.186) (Ping timeout: 250 seconds)
[17:11:49] *** Joins: RicardasSim (~RicardasS@78-63-172-44.static.zebra.lt)
[17:12:29] *** Joins: mahmutov (~mahmutov@37.155.4.137)
[17:13:28] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[17:16:57] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[17:18:01] *** Quits: pflanze (~pflanze@5-168-208-80.dyn.fiber.qlnet.ch) (Remote host closed the connection)
[17:19:28] *** Joins: shivesh (~shivesh@user/shivesh)
[17:19:39] *** vassili is now known as vt
[17:27:48] *** Quits: tech_exorcist_ (txrcst@user/tech-exorcist/x-0447479) (Quit: Disconnecting)
[17:27:58] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[17:28:26] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:4003:8970:d961:ff06)
[17:28:59] *** Quits: cassepipe (~Thunderbi@176.158.185.110) (Ping timeout: 256 seconds)
[17:30:21] *** cthi_ is now known as cthi
[17:30:45] *** Joins: cassepipe (~Thunderbi@176.158.185.110)
[17:31:19] *** Quits: pehaef (~pehaef@user/pehaef) (Quit: leaving)
[17:31:44] *** Joins: pehaef (~pehaef@user/pehaef)
[17:33:37] *** Quits: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com) (Remote host closed the connection)
[17:35:28] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[17:41:12] *** Quits: PaulusNL (~PaulusNL@80-100-64-239.ip.xs4all.nl) (Quit: Konversation terminated!)
[17:42:50] *** Quits: ka80 (~ka80@111.60.138.34.bc.googleusercontent.com) (Quit: Leaving)
[17:44:31] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 256 seconds)
[17:45:55] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:4003:8970:d961:ff06) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[17:47:52] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:4003:8970:d961:ff06)
[17:49:41] *** Joins: ka80 (~ka80@111.60.138.34.bc.googleusercontent.com)
[17:51:23] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[17:51:35] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:4003:8970:d961:ff06) (Client Quit)
[17:51:50] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: Disconnecting)
[17:58:32] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[18:01:07] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[18:02:09] *** Joins: Klinda (~superleag@user/klinda)
[18:05:17] *** Joins: joilerv (~joilerv@135.129.250.144)
[18:08:00] *** Joins: savolla (~quassel@88.227.92.215)
[18:09:41] *** Quits: cassepipe (~Thunderbi@176.158.185.110) (Quit: cassepipe)
[18:12:03] *** Quits: meator (~meator@user/meator) (Ping timeout: 256 seconds)
[18:14:11] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41)
[18:14:13] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 250 seconds)
[18:26:10] *** Joins: Akuli (~Akuli@82-203-162-217.bb.dnainternet.fi)
[18:27:46] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:c12f:e1ba:6835:4862)
[18:27:46] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:c12f:e1ba:6835:4862) (Changing host)
[18:27:46] *** Joins: skapata (~Skapata@user/skapata)
[18:29:31] *** Joins: Torr (~Torr@user/torr)
[18:32:48] *** Joins: meator (~meator@user/meator)
[18:36:49] *** Joins: haniaF (~haniaF@83.24.206.88.ipv4.supernova.orange.pl)
[18:41:48] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[18:42:59] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[18:47:23] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[18:51:03] *** Quits: Thymo (~Thymo@82-74-137-251.cable.dynamic.v4.ziggo.nl) (Changing host)
[18:51:03] *** Joins: Thymo (~Thymo@NASSP/developer/Thymo)
[18:52:51] *** Joins: beco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73)
[18:53:39] *** Quits: Fairy (~Fairy@ti0004a400-5385.bb.online.no) (Ping timeout: 256 seconds)
[18:58:27] *** Quits: joilerv (~joilerv@135.129.250.144) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[18:59:46] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[19:01:17] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41) (Ping timeout: 240 seconds)
[19:01:59] *** Parts: ssj (~jsjsj@a213-22-192-47.cpe.netcabo.pt) (Leaving)
[19:04:43] *** Joins: joilerv (~joilerv@135.129.250.144)
[19:10:29] *** Quits: joilerv (~joilerv@135.129.250.144) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[19:14:17] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293)
[19:14:38] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[19:14:54] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[19:15:50] *** Joins: Jong (~Jong@2620:10d:c090:400::5:d8b2)
[19:17:21] *** Quits: RicardasSim (~RicardasS@78-63-172-44.static.zebra.lt) (Quit: Leaving)
[19:17:27] *** Joins: CodePoint (~CodePoint@2600:1700:3070:3790:c540:4db8:d084:c3a0)
[19:17:29] *** Quits: ncrowl (~ncrowl@c-fda770d5.022-170-6c756e3.cust.ownit.se) (Read error: Connection reset by peer)
[19:18:20] *** Quits: mrig (~mrig@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[19:18:30] *** Quits: CodePoint (~CodePoint@2600:1700:3070:3790:c540:4db8:d084:c3a0) (Client Quit)
[19:18:45] *** Quits: fbiagent_ (~fbiagent@user/fbiagent) (Remote host closed the connection)
[19:19:51] *** Joins: libh (~libh@c-24-30-27-91.hsd1.ga.comcast.net)
[19:19:52] *** Quits: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru) (Read error: Connection reset by peer)
[19:20:53] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:4003:8970:d961:ff06)
[19:20:57] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[19:21:08] *** Joins: mrig (~mrig@user/mrig)
[19:22:30] *** Joins: ncrowl (~ncrowl@c-fda770d5.022-170-6c756e3.cust.ownit.se)
[19:28:12] *** Quits: terminalpusher (~terminalp@2a01:586:8792:1:272b:416f:33a5:39fb) (Remote host closed the connection)
[19:34:45] *** Quits: libh (~libh@c-24-30-27-91.hsd1.ga.comcast.net) (Quit: Leaving)
[19:35:21] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 245 seconds)
[19:41:44] *** Joins: kts (~kts@103.73.237.209)
[19:47:31] *** Joins: imp (~imp@138.255.144.233)
[19:51:35] *** Joins: nobody_ (~nobody@host-87-0-178-160.retail.telecomitalia.it)
[19:52:36] *** Joins: acerbic (~acerbic@cs-xdata-50-86-50-32.cspire.com)
[19:53:36] *** Joins: sokan_ (~sokan@2a02:587:9e08:7700:227:eff:fe16:865d)
[19:54:17] *** Quits: sokan (~sokan@athedsl-304416.home.otenet.gr) (Ping timeout: 240 seconds)
[19:54:17] *** sokan_ is now known as sokan
[19:54:35] *** Joins: joilerv (~joilerv@host86-191-117-90.range86-191.btcentralplus.com)
[19:58:39] *** Quits: oxfuxxx (~oxfuxxx@87.101.92.72) (Quit: Yankies Motherfuckers Cock Astroboys)
[19:59:12] *** Joins: oxfuxxx (~oxfuxxx@87.101.92.72)
[19:59:37] *** Quits: oxfuxxx (~oxfuxxx@87.101.92.72) (Client Quit)
[20:00:30] *** Joins: oxfuxxx (~oxfuxxx@10.177.181.107.wiredns.net)
[20:01:44] *** Joins: sokan_ (~sokan@85.73.225.30)
[20:02:02] *** Quits: sokan (~sokan@2a02:587:9e08:7700:227:eff:fe16:865d) (Ping timeout: 252 seconds)
[20:02:08] *** sokan_ is now known as sokan
[20:03:16] *** Quits: zwr (~zwr@2804:d45:b966:fb00:5e88:e8a2:f183:6782) (Ping timeout: 245 seconds)
[20:04:06] *** Joins: zwr (~zwr@2804:d45:b966:fb00:af27:6e8f:df74:3523)
[20:05:59] *** Quits: joilerv (~joilerv@host86-191-117-90.range86-191.btcentralplus.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[20:06:08] *** Quits: nobody_ (~nobody@host-87-0-178-160.retail.telecomitalia.it) (Quit: Leaving)
[20:07:24] *** Joins: joilerv (~joilerv@135.129.250.144)
[20:07:51] *** Joins: magla (~gelignite@55d4c694.access.ecotel.net)
[20:10:37] *** Joins: jrksrjn (~jrksrjn@2a02:810d:4bc0:2120:95e5:df49:6202:3cf9)
[20:11:50] *** Joins: badsektor (~badsektor@user/badsektor)
[20:14:05] *** Joins: alch (~alch@151.38.72.180)
[20:17:33] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[20:18:23] *** Quits: ArthurStrong (~ArthurStr@37.115.210.35) (Remote host closed the connection)
[20:21:04] *** Quits: joilerv (~joilerv@135.129.250.144) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[20:21:51] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[20:21:51] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[20:21:51] *** Joins: wroathe (~wroathe@user/wroathe)
[20:23:03] *** Quits: badsektor (~badsektor@user/badsektor) (Quit: Leaving)
[20:23:18] *** Joins: fsoc (~shynerd@bison.alphaw0lf.xyz)
[20:23:57] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[20:23:58] *** Joins: viv0 (~viv0@2a01:4ff:f0:27d5::1)
[20:24:39] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 256 seconds)
[20:25:08] *** Quits: viv0 (~viv0@2a01:4ff:f0:27d5::1) (Client Quit)
[20:26:07] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[20:26:10] *** Joins: viv0 (~viv0@user/viv0)
[20:26:55] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[20:28:34] <viv0> Hey
[20:29:03] *** Quits: acerbic (~acerbic@cs-xdata-50-86-50-32.cspire.com) (Read error: Connection reset by peer)
[20:32:01] *** Quits: oxfuxxx (~oxfuxxx@10.177.181.107.wiredns.net) (Ping timeout: 256 seconds)
[20:35:13] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[20:35:13] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[20:35:13] *** Joins: wroathe (~wroathe@user/wroathe)
[20:35:22] *** Joins: Fairy (~Fairy@2001:464a:4992:0:8fa:f917:3ddb:7b76)
[20:36:27] * ski stares at viv0
[20:41:04] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[20:41:10] *** Quits: derelict (derelict@user/derelict) (Quit: bye)
[20:41:44] *** Joins: derelict (derelict@user/derelict)
[20:45:05] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:4003:8970:d961:ff06) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[20:47:40] *** Quits: pehaef (~pehaef@user/pehaef) (Quit: leaving)
[20:49:46] *** beco is now known as drbeco
[20:51:24] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[20:51:38] *** Joins: Torr (~Torr@user/torr)
[20:51:51] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[20:53:51] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[20:54:24] * pragma- stares at ski
[20:55:38] * ski averts their eyes
[20:55:44] * clarity meow.
[21:02:55] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:206a:d63d:f8a8:ec3b)
[21:03:57] *** Joins: Satin (uid193953@user/Seten)
[21:05:13] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:4003:8970:d961:ff06)
[21:06:41] *** Joins: acagastya (~acagastya@wikinews/acagastya)
[21:08:28] <homura> wat up homes
[21:09:41] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[21:10:59] * wroathe stares at a loose grain of salt on the table and wonders about the futility of existence 
[21:11:28] <acagastya> Hi, I have two programmes, main.c <https://0x0.st/oXN3.c> and notmain.c <https://0x0.st/oXNY.c> -- main.c prints some words to stdout and notmain is printing the command line arguments.  I think it is more of a UNIX question than C, but ./main | ./notmain is not printing output of the first programme in second -- any idea how to get that done?
[21:11:48] *** Joins: skyfall (~skyfall@user/skyfall)
[21:12:23] <sham1> acagastya: it's not reading the main's printouts from its stdin
[21:12:37] <ski> wroathe : would it happen to be this one <https://i.redd.it/p02yvc29p6141.jpg> ?
[21:13:25] <wroathe> ski: No, just one on my counter top
[21:13:38] <wroathe> But that is an absolute unit of a grain of salt
[21:13:47] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[21:14:52] <ski> (acagastya : i guess i'd be using `fputs' or `puts')
[21:15:05] <nomagno> acagastya: ./foo | ./bar pipes the standard output of ./foo into the standard input of ./bar. Arguments are a different kind of input, and they can only be supplied by doing ./bar args more_args
[21:15:16] <nomagno> you probably want to do ./bar $(./foo)
[21:15:21] <fizzie> The Unix part of the question -- how to get the other program to print the output of the first one, without changing the programs -- would boil down to "how to pass the output of one program as command line arguments of the other", for which reasonable answers could be `./main | xargs ./notmain` or `./notmain $(./main)`.
[21:15:26] <nomagno> which does expand the output of ./foo into arguments to ./bar
[21:15:38] <nomagno> fizzie: Beat you to it! >:)
[21:16:58] <fizzie> Yeah, I was at the last `or` when you mentioned ./bar $(.foo) and then spent a while deciding whether to give up or not. But it was already too long a comment to not finish.
[21:17:19] <sham1> One also must remember that one can have too many arguments if they use the subshell expansion
[21:18:30] *** Quits: skyfall (~skyfall@user/skyfall) (Quit: afk)
[21:18:38] *** Joins: skyfall (~skyfall@user/skyfall)
[21:20:12] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Remote host closed the connection)
[21:24:29] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[21:26:24] *** Quits: fe23 (~fe23@2409:8a34:46c:f80:5d44:95fb:8530:7b02) (Quit: fe23)
[21:28:28] *** Joins: oxfuxxx (~oxfuxxx@10.177.181.107.wiredns.net)
[21:29:49] *** Quits: alch (~alch@151.38.72.180) (Ping timeout: 256 seconds)
[21:30:37] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 240 seconds)
[21:30:51] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[21:30:51] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[21:30:51] *** Joins: wroathe (~wroathe@user/wroathe)
[21:31:32] *** Joins: alch (~alch@151.36.99.120)
[21:35:29] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[21:36:41] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[21:37:46] *** Joins: lightningwright (~lightning@user/lightningwright)
[21:39:57] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 240 seconds)
[21:40:26] *** Joins: libh (~libh@c-24-30-27-91.hsd1.ga.comcast.net)
[21:42:39] *** Quits: skyfall (~skyfall@user/skyfall) (Quit: afk)
[21:42:48] *** Joins: skyfall (~skyfall@user/skyfall)
[21:44:42] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:45:23] *** Quits: skyfall (~skyfall@user/skyfall) (Client Quit)
[21:45:32] *** Joins: skyfall (~skyfall@user/skyfall)
[21:45:54] *** Quits: skyfall (~skyfall@user/skyfall) (Client Quit)
[21:46:03] *** Joins: skyfall (~skyfall@user/skyfall)
[21:46:20] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:46:55] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[21:48:11] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 256 seconds)
[21:48:32] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:49:14] *** ai is now known as nukedclx
[21:49:39] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[21:50:37] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[21:51:01] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[21:51:29] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 252 seconds)
[21:52:25] *** Joins: zmt00 (~zmt00@user/zmt00)
[21:52:34] *** Quits: kts (~kts@103.73.237.209) (Quit: Konversation terminated!)
[21:53:17] *** Joins: kts (~kts@103.73.237.209)
[21:56:02] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[21:56:27] *** Joins: lightningwright_ (~lightning@user/lightningwright)
[21:56:51] *** Quits: lightningwright_ (~lightning@user/lightningwright) (Client Quit)
[21:57:44] *** Joins: lightningwright_ (~lightning@user/lightningwright)
[21:57:49] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[21:58:37] *** Quits: lightningwright (~lightning@user/lightningwright) (Ping timeout: 240 seconds)
[21:59:26] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:d154:b93f:c8:b39)
[22:00:04] *** Quits: libh (~libh@c-24-30-27-91.hsd1.ga.comcast.net) (Quit: Leaving)
[22:00:56] *** Joins: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu)
[22:01:15] *** Joins: FluffyMask (~masque@user/fluffymask)
[22:02:41] *** Quits: oxfuxxx (~oxfuxxx@10.177.181.107.wiredns.net) (Ping timeout: 256 seconds)
[22:03:15] *** Joins: strajder (~strajder@user/strajder)
[22:03:20] *** Joins: NEYi (~NEYi@109.251.216.38)
[22:04:35] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[22:20:35] *** Quits: boB_K7IQ (~boB_K7IQ@ip72-201-138-188.ph.ph.cox.net) (Ping timeout: 256 seconds)
[22:22:24] *** Quits: imp (~imp@138.255.144.233) (Quit: imp)
[22:22:39] *** Quits: magla (~gelignite@55d4c694.access.ecotel.net) (Read error: Connection reset by peer)
[22:22:57] *** Joins: magla (~gelignite@55d4c694.access.ecotel.net)
[22:25:12] *** Joins: Betal (~Betal@user/betal)
[22:28:33] *** Joins: soapsudsxx (~soapsudsx@209.221.40.152)
[22:32:28] *** Parts: acagastya (~acagastya@wikinews/acagastya) ()
[22:41:39] *** Joins: crashrep (~crashrep@user/crashrep)
[22:44:08] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[22:45:04] *** Quits: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:47:11] *** Joins: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com)
[22:51:53] *** Joins: skeev (~skeev@92.86.110.192)
[22:57:54] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:206a:d63d:f8a8:ec3b) (Ping timeout: 260 seconds)
[22:58:15] <markand> o/
[22:58:41] <markand> I always wonder when is va_copy really needed, if I transfer va_list to a function, do I need in the current function to call va_copy before?
[22:58:44] <markand> example: https://bpa.st/PYKA
[22:59:13] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:206a:d63d:f8a8:ec3b)
[23:00:55] <fizzie> If you want to be strictly conforming, yes.
[23:01:59] <fizzie> C11 7.16p3: "The [va_list] object `ap` may be passed as an argument to another function; if that function invokes the `va_arg` macro with parameter `ap`, the value of `ap` in the calling function is indeterminate and shall be passed to the `va_end` macro prior to any further reference to `ap`."
[23:03:23] <fizzie> (Followed by footnote 253: "It is permitted to create a *pointer* to a `va_list` and pass that pointer to another function, in which case the original function may make further use of the original list after the other function returns." But of course in that case the "position" of the list will have advanced to subsequent arguments.)
[23:04:10] <markand> okay thanks, I'll update that
[23:04:16] <fizzie> For that example function, you can also just do va_start several times, rather than using va_copy.
[23:04:53] <markand> yep
[23:05:08] *** Joins: meator (~meator@user/meator)
[23:06:03] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[23:06:33] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[23:07:37] *** Quits: jkotra (~jkotra@223.230.91.108) (Ping timeout: 256 seconds)
[23:10:17] <sham1> ,expand va_copy(dst, src)
[23:10:18] <candide> sham1:  va_copy(dst, src)
[23:10:22] <sham1> neat
[23:10:34] <sham1> ,expand #include <stdarg.h> \n va_copy(dst, src)
[23:10:34] <candide> sham1:  __builtin_va_copy(dst,src)
[23:10:44] <sham1> â€¦I don't know what I expected to be honest
[23:11:38] *** Joins: joilerv (~joilerv@host86-191-117-90.range86-191.btcentralplus.com)
[23:11:57] <pragma-> the bot doesn't need \n after #includes because it can tell where the <> or "" delimiters are
[23:12:19] <sham1> I'll still include it
[23:12:32] <pragma-> hmph
[23:12:55] <pragma-> ,expand #include <stdarg.h>  va_copy(dst, src)
[23:12:55] <candide> pragma-:  __builtin_va_copy(dst,src)
[23:14:59] *** Joins: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com)
[23:17:15] *** Quits: lightningwright_ (~lightning@user/lightningwright) (Ping timeout: 256 seconds)
[23:20:50] *** Quits: masoudd (~masoudd@user/masoudd) (Quit: Leaving)
[23:24:44] *** Quits: joilerv (~joilerv@host86-191-117-90.range86-191.btcentralplus.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:30:31] *** Quits: Darkcoal (~user@user/Darkcoal) (Quit: Darkcoal)
[23:33:48] *** Quits: Cleverness (~Clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Remote host closed the connection)
[23:38:28] *** Joins: lightningwright_ (~lightning@user/lightningwright)
[23:44:39] *** Quits: jrksrjn (~jrksrjn@2a02:810d:4bc0:2120:95e5:df49:6202:3cf9) (Quit: Leaving)
[23:46:31] *** Joins: jkotra (~jkotra@223.230.127.157)
[23:47:16] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[23:48:39] *** Joins: Akiva (~Akiva@user/Akiva)
[23:52:16] *** Quits: savolla (~quassel@88.227.92.215) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:57:06] *** Joins: boB_K7IQ (~boB_K7IQ@wsip-98-174-204-97.ph.ph.cox.net)
[23:57:46] *** Joins: penguino (~mrpenguin@user/mrpenguin)
