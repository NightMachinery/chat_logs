[00:00:50] *** Joins: onosendi (~onosendi@user/onosendi)
[00:02:54] *** Joins: c4017w__ (~c4017@209.52.68.8)
[00:06:39] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[00:12:40] *** Quits: tatarqa (~kli@ip-89-177-122-45.net.upcbroadband.cz) (Quit: Leaving)
[00:14:01] <ljharb> tokie: you need to auth with nickserv for non-ops to see what you say. see the last link in the topic
[00:16:41] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-044.um10.pools.vodafone-ip.de)
[00:16:44] <tokie> ohh. thanks :)
[00:17:30] <tokie> does anyone have any suggestions of ways to build a repl (readline?) type frontend against a wasm backend? i was looking at xtermjs, but xtermjs purely implements a terminal emulator and doesn't really provide much in terms of local echo/readline capabilities
[00:17:36] <tokie> that should get through :)
[00:18:55] *** Joins: sam_1 (~sam_1@87.51.251.118)
[00:19:30] <jaawerth> well in theory once you have a proper terminal emulator, from there you can use regular shell utils. the question is how you can read its termcap database, which is hpefully documented
[00:20:21] *** Quits: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[00:20:25] <jaawerth> oh, the escapes (inclding request for terminfo string) is quite well documented, nice https://xtermjs.org/docs/api/vtfeatures/
[00:20:48] <jaawerth> .. oh it's documented as not supported, lol
[00:20:57] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-044.um10.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[00:21:15] <tokie> i don't even necessarily need a terminal. i'm just trying to make a web repl like the one on repl.it
[00:21:28] <ljharb> tokie: tbh that is a *very* complex task to do
[00:21:33] <ljharb> to do it safely, at least
[00:21:37] <hassoon_> 'evening
[00:22:10] <jaawerth> ah gotcha,you talking about readline immedaitely had me thinking about ansi escapes
[00:22:28] <tokie> jaawerth: yeah, right now the thing i want a repl in front of has a readline interface, so that's the easiest
[00:23:25] <tokie> ljharb: writing readline you mean ?:) i definitely don't want to do that
[00:23:46] <qswz> !npm prompt-sync
[00:23:47] <jellobot> qswz, npm.im/prompt-sync 4.2.0|2019-12-20|a synchronous prompt for node.js
[00:23:54] <ljharb> tokie: i mean, running untrusted code in a browser safely
[00:24:52] <tokie> it's a WASM runtime that's executing code that the user enters
[00:29:39] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 256 seconds)
[00:29:48] <jaawerth> supporting the real readline might be pretty fraight because it's honestly more complex than it need to be, BUT: if you roll with termjs I think you'll have a shot, because it does go to the trouble of supporting proper ansi escapes. the real quick will be terminfo/termcap because that's what stuff like readline reads to figure out what escapes to send for the fancy stuff
[00:30:13] <jaawerth> the thing to avoid is pilling in half of POSIX
[00:30:17] <tokie> yeah, it seems kinda overkill to use a terminal when i'm just trying to mimick a repl
[00:30:54] <jaawerth> you're not the first person to run into this from the look of things, though https://github.com/jerch/browser-fakepty
[00:31:20] <tokie> yep, i came across their work from an xtermjs issue where someone was complaining about xtermjs not having support for this
[00:31:30] <tokie> https://github.com/wavesoft/local-echo there's this too
[00:31:55] *** Joins: thiras (~thiras@user/thiras)
[00:34:22] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[00:34:39] <jaawerth> when you talk echo are you first just worrying about the literal readline part of readline? gettin the line, evaluating, and sending back?
[00:35:11] <jaawerth> I am somewaht involved in a project that has something similar, but it's kinda barebones - and rahter than wasm, it's running in a lua vm implemented in js. still, https://fennel-lang.org/#fengari-console
[00:35:25] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[00:35:54] *** Quits: mdemo (~mdemo@user/mdemo22) (Quit: The Lounge - https://thelounge.github.io)
[00:36:01] <jaawerth> no compleation or anything but the Read Eval Print partts certainly work, plus stuff like ctrl +l. it might not be a great basiss though since most of the code is in fennel, running on lua, and using JS interop to do all the work
[00:36:18] <tokie> yeah, i really just need a readline type interface to WASM - so, something that lets a user edit a multiline expression
[00:36:51] <tokie> and hooks for things like syntax highlighting and parse checking and such
[00:37:12] <tokie> like,  my WASM backend can return "EOF" if something isn't complete, which would let a repl treat a press of enter as the start of a multi-line input
[00:37:17] <jaawerth> well, that part you can do with plain old js and forms. you can have something switch  between input and textarea, for example, and when it's a textarea you could add a listener for shit+enter
[00:37:31] <tokie> yeah, that seems possibly better than trying to use a terminal
[00:37:45] <jaawerth> and then it would just shoot the text over to wasm in either mode
[00:38:27] <jaawerth> you can try TERM=dumb if readline stuff tries to get in the way, that often kills it
[00:38:39] <tokie> did you write fennel?
[00:38:47] <jaawerth> I'm a contributor, but not the biggest one
[00:38:52] <tokie> this is my project: https://github.com/strtok/marwood
[00:39:02] <tokie> so it seems like similar problems
[00:39:57] <tokie> wow, super similar
[00:39:59] <jaawerth> oh nice another lisp fan
[00:40:02] <tokie> hah
[00:40:02] <jaawerth> small world
[00:40:13] <tokie> i didn't see the lisp part of the fennel description
[00:40:17] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[00:40:37] <jaawerth> yeah it's just a tiny lisp that runs on lua with minimal overhead, so it can be embedded wherever lua can
[00:40:57] <jaawerth> not quite as pure as scheme though, syntax has a lot of clojureisms
[00:41:10] <jaawerth> this looks neat though
[00:42:53] <jaawerth> I've actually gotten fennel to compile and run in wasm via its experimental static compilation flags (static-compiling the lua vm to wasm with it), just by subbing in emcc for gcc. I didn't do much more than that, but the naive approach could at least run snippets and print output in node and the browser. and it was 4 times faster than running in fengari
[00:43:21] <jaawerth> so if you're asking about wasm/js interop, I still need to explore that myself at some point
[00:45:55] *** Joins: voltage (voltage@user/voltage)
[00:46:15] <tokie> yeah, the wasm/js interop part is pretty straight forward. it's more figuring out how to not reinvent the repl wheel
[00:46:28] <tokie> this is a neat related project, though: https://microsoft.github.io/monaco-editor/index.html
[00:46:44] *** Quits: voltage_ (voltage@user/voltage) (Killed (NickServ (GHOST command used by voltage)))
[00:46:48] *** voltage is now known as voltage_
[00:49:43] *** Quits: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net) (Ping timeout: 256 seconds)
[00:50:22] <qswz> monaco is kina huge to bundle tho
[00:50:56] <jaawerth> what we ended up doing in the end (mostly for perf, because fengari is pretty slow to load an entire other lang/compiler on top o it) was run the repl in a web-worker. so the interface sends messags to the worker using postMessage, and that gets dispatched to the actual repl code running in the vm
[00:51:10] <jaawerth> and that's all done with coroutines https://git.sr.ht/~technomancy/fennel-lang.org/tree/main/item/repl-worker.lua#L53-68
[00:51:11] <qswz> I used codemirror for this reason
[00:51:27] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[00:52:02] <jaawerth> ^ tht snippet is running the function exported here - since you yourself are implementing a lisp it probably won't look like *total* gibberish, I was unsure whether to share it before you shared your project, lol. https://git.sr.ht/~technomancy/fennel-lang.org/tree/main/item/repl.fnl
[00:53:13] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[00:53:55] <tokie> qswz: ah yeah, codemirror seems like a lighter alternative to monaco
[00:53:58] <jaawerth> you can see some of the JS interop in both of those and how it's wiring all the input into coroutines and callbacks. the readChunk callback is typically how the repl gets user input, and onValues is how it provides output. the repl is customized by oerriding those, which is how we trick it into running on the web. the other part is at the bottom of the first link - the onmessage callback is
[00:54:00] <jaawerth> what's sending user input into the coro
[00:55:08] <jaawerth> that may not end upbeing useful but it COULD be. you'll probably have good luck with a similarly simple approach. worry about the user interaction with regular web stuff, so that the actual "talk to the repl" parts is just message passing
[00:55:17] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[00:55:43] <jaawerth> you can even turn keyprss listeners and such into the escape codes your repl would normally expect to make various kinbindings work
[00:56:35] <jaawerth> keybindings, even
[00:56:50] <onosendi> Any idea how to ignore a directory with node-tap? The `--test-ignore` flag doesn't seem to do anything, unless I'm missing something? https://dpaste.org/pakR
[00:57:54] <tokie> jaawerth: yeah, the message passing to WASM is a lot simpler at least
[00:57:55] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:58:38] <jaawerth> onosendi: you'll probably have better luck receiving assistance if you share what the dir is you're trying to ignore and wht you've tried so far
[00:59:52] *** Joins: SOMBRIO (~SOMBRIO@177.137.113.66)
[01:01:13] <jaawerth> if you DO end up needing a proper terminal, though, I think xtermjs will be your best bet. iirc it's what google used to build its chrome-based ssh client, which I tried back in the day and it worked surprisingly well
[01:01:55] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[01:03:24] *** Joins: c4017w_ (~c4017@209.52.68.8)
[01:04:17] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[01:05:51] *** Quits: rosseaux (~BeRo@2a00:1828:2000:859::2) (Quit: Bye)
[01:07:03] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[01:11:15] *** Quits: _ev (ev@user/ev/x-8999918) (Ping timeout: 256 seconds)
[01:12:22] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Quit: ThePhilgrim)
[01:13:08] *** Joins: quartz (~quartz@user/quartz)
[01:15:52] <quartz> Hello. I'm new to js and I want to create a simple page that has a button. Each time the button is clicked, I should get a print out to the console that says "I was clicked" along with a random number and an alert box that says some text. When I click on the button multiple times, I don't get multiple print outs to the console. I can't figure out why.
[01:16:04] <quartz> Here is my code: https://bpa.st/4TPA
[01:16:40] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Quit: Leaving...)
[01:18:36] <stenno> quartz: line 14 doesn't seem right..
[01:19:18] <Decker> quartz are you sure the console isn't actually getting it, but it's counting in a line count of repeated messages since nothing changes ?
[01:19:46] <jaawerth> the random number should be changing
[01:19:54] <stenno> ah i know why
[01:20:01] <jaawerth> oh wait, it's only once
[01:20:10] <stenno> quartz: <button> without type triggers submit
[01:20:14] <stenno> and a page reload
[01:20:16] <jaawerth> put the rand genreationo in the click hander too while you're at it
[01:20:22] <jaawerth> yep, well-spotted
[01:20:22] <stenno> you want <button type='button'>
[01:20:25] <Decker> on a preventDefault then ?
[01:20:33] <quartz> stenno: Ohh, I named it the wront file :)
[01:20:36] <jaawerth> preventDefault OR <button> would work
[01:20:50] <jaawerth> er, type="button" rather yeah
[01:21:35] <stenno> quartz: https://jsfiddle.net/wthqo9p4/
[01:22:12] <quartz> Decker: Yes, it does register that I'm clicking it multiple times, but I thought it would print multiple times to the console if that makes sense
[01:22:18] <quartz> It look like this: https://i.ibb.co/St7MkvW/Screenshot-from-2022-02-04-16-50-46.png
[01:22:42] <Decker> ya
[01:23:00] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-044.um10.pools.vodafone-ip.de)
[01:23:18] <stenno> if you want a button that does an action other than submit, you need type='button' explicitely
[01:23:20] <stenno> like in this case
[01:23:40] <Decker> there's no form though so what would it submit to?
[01:23:46] <Decker> with?
[01:23:47] <stenno> it submits to /
[01:24:02] <Decker> then wouldn't the console get cleared?
[01:24:14] <stenno> not if you persist log
[01:24:22] *** Joins: Tabstar (~tabmow@user/tabmow)
[01:24:36] <Decker> ya no telling; default is not to... so I'd assume it's off
[01:24:51] *** Quits: Tabmow (~tabmow@user/tabmow) (Ping timeout: 256 seconds)
[01:25:03] *** Joins: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[01:25:16] <quartz> stenno: But then the same random number shows up all the time
[01:25:47] <stenno> yes
[01:26:08] <Decker> ya so on reload it'd have a different number too
[01:26:16] <stenno> Decker: dunno why it behaves like that but button def. triggers a submit event
[01:26:43] *** Tabstar is now known as Tabmow
[01:26:46] <Decker> it would if there was a form, but I use buttons all the time, and didn't have any strange issues
[01:26:48] <stenno> and a page reload
[01:26:56] <Decker> I did have to set onsubmit of a form wrapper though to ignore
[01:27:42] <jaawerth> quartz: if you put the code that creatse hte number inside the click callback...
[01:28:33] <quartz> Ahh
[01:28:40] <quartz> jaawerth: Yeah I just got it, thanks so mcuh
[01:28:42] <quartz> Thanks everyeone
[01:29:09] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[01:29:33] <quartz> I'm using JQuery to register the click handler right?
[01:29:43] <quartz> I'm confused if it's javascript or jquery
[01:30:27] <stenno> its jquery, yes
[01:30:28] <jaawerth> it's jquery. but jquery is just a javascript library
[01:30:39] <stenno> Decker: hm, you are right
[01:30:46] <stenno> how could i get this wrong
[01:30:53] <quartz> OK thanks
[01:31:05] <Decker> becuase you usually use it properly with a form? :)
[01:31:31] <stenno> or always with 'type=button' to prevent a thing that didn't happen in the first place
[01:31:33] <tokie> jaawerth: https://github.com/jcubic/jquery.terminal
[01:31:37] <stenno> there must be some general cases
[01:31:45] <stenno> my mind is blown right now i have to admit
[01:33:17] <jaawerth> tokie: on the one hand that looks pretty neat, but on the other hand why query in this day and age...
[01:33:31] <tokie> jaawerth: yeah, i have no idea its relation to jquery
[01:33:35] *** Joins: Arisco (~ckmptnml@189-31-251-104.user3p.brasiltelecom.net.br)
[01:33:47] <Decker> "Jquery is Dead! Long Live JQuery!"
[01:33:51] <jaawerth> lol
[01:35:11] *** Quits: Arisc (~ckmptnml@189-31-251-104.user3p.brasiltelecom.net.br) (Ping timeout: 250 seconds)
[01:38:38] *** Joins: velix (~velix@user/velix)
[01:38:55] <velix> I don't get the argument "pro" async/await: "We recommend using async/await where possible, and minimize promise chaining. Async/await makes JavaScript code more accessible to developers that aren't as familiar with JavaScript, and much easier to read." https://dev.to/masteringjs/using-then-vs-async-await-in-javascript-2pma
[01:39:04] <velix> From my point of view, this acts completly different?
[01:39:40] <ljharb> velix: how so? it's the same
[01:39:48] <ljharb> `await` is just sugar for a nested promise `.then`
[01:40:00] *** Joins: terminalpusher (~terminalp@2a01:586:9ed:1:6a37:3ad8:8d25:55f4)
[01:40:01] <ljharb> but also, that's not a great recommendation; `await` is really easy to overuse
[01:40:03] <velix> I've understood the website as "async/await locks the app"
[01:40:18] <ljharb> that's false
[01:40:24] <velix> I've used fetch().then() all the time.
[01:40:28] <Maxdamantus> stenno: I did it btw: https://github.com/tc39/proposal-record-tuple/issues/292
[01:40:40] <stenno> great!
[01:40:50] <stenno> i wanted to write something too
[01:40:57] <ljharb> velix: and `await fetch()` is the same as that, basically
[01:41:07] <stenno> but as those things go, i was distracted with work, and then forgot about it
[01:41:12] * Maxdamantus needs breakfast now.
[01:41:18] <stenno> good hunger!
[01:41:19] <velix> ljharb: it says: "The difference is that in an async function, JavaScript will pause the function execution until the promise settles. With then(), the rest of the function will continue to execute but JavaScript won't execute the .then() callback until the promise settles."
[01:41:27] <ljharb> Maxdamantus: i could have told you why they don't allow objects
[01:41:34] <jaawerth> velix: the function, yes. the app, no
[01:41:37] <velix> ah
[01:41:52] <velix> So what would you suggest to use?
[01:42:02] <ljharb> Maxdamantus: stenno: Records and Tuples wouldn't work as primitives if they could hold objects, because of the constraints of SES across Realms
[01:42:06] <Decker> ya but usually you end up with the rest of the function to suspend in the then so it's just not run, not suspended
[01:42:20] <stenno> ljharb: records and tuples are not primitives :D
[01:42:25] *** Joins: tofran (~tofran@bl15-47-228.dsl.telepac.pt)
[01:42:31] * stenno puts on his helmet and fighting gear
[01:42:33] <jaawerth> velix: basically the async function becomes an internal state machie - it stops where it is in its stack and yields back ot the event loop. meanwhlie a .then callback is registered on the promise that resumes the function upon resolution
[01:43:12] <Maxdamantus> ljharb: well, maybe my `Object.isDeeplyImmutable` function solves that issue.
[01:43:15] <stenno> we had a very long discussion about this long ago
[01:43:22] <stenno> like 10 hours ago
[01:43:26] <jaawerth> that's why async functions have to always return promises - the "blocking" is fake, local to the function. the rest of the world still sees it the same as any other promise-returning function
[01:43:27] <Decker> really sorta the code after await, the rest of the function is wrapped in a then() and the function returns immediately there's no blocking
[01:43:31] <ljharb> Maxdamantus: it doesn't
[01:43:52] <Maxdamantus> ljharb: can you share objects between realms?
[01:44:01] <ljharb> Maxdamantus: yes. an iframe is a realm.
[01:44:05] <velix> jaawerth & Decker: It's hard for me to figure out, which is "better" ;(
[01:44:21] <stenno> is a webworker thread a realm?
[01:44:24] * Maxdamantus needs to look up what SES is.
[01:44:29] <jaawerth> velix: the only practical difference is code readability. in my opinion that is fairly contetual
[01:44:42] <Maxdamantus> Secure ECMAScript.
[01:44:43] <ljharb> stenno: yes, but a webworker thread can't pass objects between it
[01:44:44] <Decker> velix promise handling wihtout await gives you .catch() if that matters
[01:44:51] <jaawerth> it's true that await helps clean up a lot of ugly neseted inline callbacks, but on the other hand if you overdo it you're going to have try/catch everywhere
[01:45:03] <stenno> i know i can zero-copy buffers between webworkers
[01:45:08] <stenno> but this is probably unrelated
[01:45:12] <stenno> or not the same
[01:45:21] <velix> jaawerth: according to the website, await is more readable?
[01:45:30] <Maxdamantus> ljharb: how does it not solve the issue? If you want to prevent mutable values from being passed, just check `Object.isDeeplyImmutable(v)` when passing.
[01:45:35] <jaawerth> I find that the .then/.catch handlers help, if you let them, encourage you to break your code into smallcomposable functions, which is good design anyway. however, being able to use await to clean things up into a few imperative lines is still a plus
[01:45:44] <stenno> also i am disappointed that you ignored my provoking message about tuples/records not being primitives, do you just agree with that or what
[01:45:48] <velix> Decker: yeah, I'm using this already.
[01:45:53] <ljharb> Maxdamantus: `new Set([v])`
[01:46:14] <Maxdamantus> ljharb: `new Set([{}])`
[01:46:15] <Decker> velix so if you find you don't have to .catch await might be more handy- it's like a 'get the value out of a promise' too
[01:46:31] <ljharb> Maxdamantus: either way there's tons of past discussion on the repo, it's already been decided that objects can never go directly in R&Ts
[01:47:02] <jaawerth> velix: it's very telling tha the examples they use don't have any try/catch, and are very simple
[01:47:11] <ljharb> Maxdamantus: the main concern, i believe, is that there is existing code out there that already allows every primitive through
[01:47:18] <ljharb> Maxdamantus: and adding a new predicate doesn't fix that old, currently safe code
[01:47:34] <ljharb> Maxdamantus: so, because of that deployed code, primitives can never contain objects, ever
[01:47:37] *** Joins: rosseaux (~BeRo@2a00:1828:2000:859::2)
[01:47:46] <Maxdamantus> ljharb: so you mean it does `typeof v !== "object" && typeof v !== "function"`?
[01:48:13] *** Quits: haslo (uid390999@id-390999.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[01:48:26] <ljharb> yes
[01:48:31] <ljharb> or `Object(x) !== x`
[01:48:38] <stenno> b> const foo = 'lol'; #{[foo]: 23}
[01:48:39] <jellobot> (okay) Record { lol: 23 }
[01:48:42] <ljharb> because after symbols, one of those two is the only safe way to check for objects
[01:48:48] <ljharb> (or for primitives)
[01:49:02] <jaawerth> velix: which isn't to say await can't be better, but that the argument that page is making is very, very oversimplified. it just isn't a quetion of which is better. I, for example, use both together in whichver way expresses what my code is doing the best
[01:49:14] <velix> Decker & jaawerth: thanks. I'll keep on reading and playing with it.
[01:50:49] <Maxdamantus> imo if that really is a concern, then they should just make `typeof #{} === "object"` and `Object(#{}) === #{}`
[01:51:04] <Maxdamantus> though I'm not sure to what extent code like that should prevent progress.
[01:51:29] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:52:12] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[01:54:46] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Killed (NickServ (GHOST command used by Sven_vB_)))
[01:54:48] *** Joins: Sven_vB_ (~sven@user/sven-vb/x-2094958)
[01:55:31] <ljharb> Maxdamantus: that would break a ton of other things. they're primitives or nothing.
[01:56:08] <stenno> they are not primitives
[01:56:21] <stenno> they just behave like we would expect primitives to behave in js
[01:57:02] <ljharb> stenno: R&Ts are primitives in the current proposal
[01:57:11] <ljharb> behaving like primitives is what makes them primitives
[01:57:23] *** Joins: src (~src@user/src)
[01:57:36] <stenno> Records and Tuples can only contain primitives and other Records and Tuples. You could think of Records and Tuples as "compound primitives"
[01:57:48] <stenno> this is from the gh page of the proposal
[01:57:55] <ljharb> sure. they're still primitives.
[01:58:12] <stenno> is not any non-primitive data type a 'compound primitive'
[01:58:29] <ljharb> no
[01:58:37] <ljharb> objects aren't compound primitives
[01:58:37] *** Quits: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 240 seconds)
[01:58:43] <ljharb> `{}` is an object, and there's no primitives in it
[01:59:15] <stenno> a record/tuple consists of primitives
[01:59:57] *** Quits: zebrag (~chris@user/zebrag) (Ping timeout: 240 seconds)
[02:00:11] <stenno> In computer science, primitive data types are a set of basic data types from which all other data types are constructed
[02:00:14] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[02:00:22] *** Joins: zebrag (~chris@user/zebrag)
[02:00:31] <stenno> but i can construct a record/tuple with primitives like strings, numbes
[02:00:36] <stenno> numbers
[02:00:43] <Maxdamantus> I think the more accurate description would be do to with identity. Record values don't have identity, because you can construct the same value twice.
[02:01:00] <Maxdamantus> `#[a]` is the same value as `#[a]`
[02:01:07] *** Quits: mikrosis (~mikrosis@dynamic-046-114-168-157.46.114.pool.telefonica.de) (Ping timeout: 256 seconds)
[02:01:19] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Remote host closed the connection)
[02:01:39] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[02:02:04] <Decker> bools, nulls too
[02:02:23] <Maxdamantus> Right, everything in JS other than symbols and objects have no identity.
[02:02:25] <Decker> Dates
[02:02:46] <Maxdamantus> Dates only exist in JS as objects, and they have identity.
[02:03:27] <Maxdamantus> Maybe in the future date libraries could use records, in which case it would be possible to construct the same date value twice.
[02:03:33] <Decker> It's still a reasonable primitive ;)  transported as a subclass of number
[02:03:45] <stenno> its reasonably primitive, but not primitive
[02:03:54] *** Joins: c4017w__ (~c4017@209.52.68.8)
[02:03:54] <stenno> Records and Tuples can only contain primitives and other Records and Tuples.
[02:04:08] <ljharb> stenno: `'foo'` consists of three primitives too
[02:04:13] <stenno> why doesn't it just say: Records and Tuples can only contain primitives
[02:04:20] <ljharb> stenno: Records and Tuples are 100% primitives, period
[02:04:34] <ljharb> stenno: by the definition of that term in javascript. what it means outside javascript is, like everything else, irrelevant.
[02:04:46] <stenno> yes, indeed
[02:04:50] <stenno> that was the conclusion
[02:04:52] <ljharb> cool
[02:05:25] <stenno> they are primitive by the definition of what is called primitive in javascript, not neccessarily what is meant with 'primitive' in CS in general
[02:07:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[02:07:29] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.4)
[02:14:12] *** Joins: MadcapJake (~MadcapJak@047-012-202-057.res.spectrum.com)
[02:18:17] *** Quits: terminalpusher (~terminalp@2a01:586:9ed:1:6a37:3ad8:8d25:55f4) (Remote host closed the connection)
[02:20:40] *** Joins: nomic (~nomic@2a00:23c7:ec90:a501:b0:4012:86ae:6130)
[02:25:21] *** Quits: salad1 (~cucumber@82.76.150.118) (Quit: salad1)
[02:26:59] *** Joins: audiobirb (~audio@user/audio)
[02:27:34] *** Quits: qswz (~caub@89-80-20-125.abo.bbox.fr) (Quit: leaving)
[02:27:52] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[02:30:01] *** Quits: Sven_vB_ (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:24] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:32:55] <jaawerth> Maxdamantus: I think it would require an entirely new Date class though :(
[02:33:03] <jaawerth> DateRecord or something
[02:33:09] <jaawerth> but ou could get it from Date
[02:33:16] <jaawerth> like ArrayBuffer and view
[02:33:25] *** Quits: pizdets (~pizdets@183.182.111.49) (Ping timeout: 256 seconds)
[02:33:57] *** Joins: pizdets_ (~pizdets@183.182.110.193)
[02:34:05] *** Quits: mseidl (~flughafen@p5de8ed0b.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[02:39:42] <Maxdamantus> jaawerth: sure. I wouldn't expect the existing `Date` constructor to change.
[02:40:45] <Maxdamantus> another random thing regarding the "objects in records" thing, not mentioned in my GH issue: if objects are allowed, it could also be fairly reasonable to have records with custom prototypes.
[02:41:29] <Maxdamantus> so you could have a nice `DateRecord` API with methods that resolve to prototype methods, but you're still operating on record values, not objects.
[02:41:32] *** Quits: toadtoad (~macbook@cpc101496-gill19-2-0-cust142.20-1.cable.virginm.net) (Quit: toadtoad)
[02:41:52] <Maxdamantus> (a === b) === (a.getEpochMillis() === b.getEpochMillis())
[02:42:01] *** Joins: macbook (~macbook@cpc101496-gill19-2-0-cust142.20-1.cable.virginm.net)
[02:42:12] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.4)
[02:43:08] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Quit: Leaving)
[02:43:58] *** Joins: nulysses (~Thunderbi@p200300eecf197ffe02128fa690b3e865.dip0.t-ipconnect.de)
[02:44:09] *** Quits: macbook (~macbook@cpc101496-gill19-2-0-cust142.20-1.cable.virginm.net) (Client Quit)
[02:44:13] *** Joins: crashrep (~crashrep@user/crashrep)
[02:44:16] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[02:44:17] *** Joins: kristijonas (~kristijon@88-119-92-43.static.zebra.lt)
[02:44:19] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[02:45:39] *** Quits: pmercado (~pmercado@190.22.160.49) (Ping timeout: 256 seconds)
[02:48:29] *** Quits: SOMBRIO (~SOMBRIO@177.137.113.66) (Ping timeout: 256 seconds)
[02:49:24] <jaawerth> Maxdamantus: so reading all this, I thin it's partly going to come down to performance in ensuring the guarantees that a RecorTuple  can be treated as the sum of its parts to such an extent that you don't have to traverse its embers, which is part of the issue that comes into play with object identity. You make a good point about setting a flag, though, but I think that wll complicate meatters
[02:49:27] <jaawerth> as it creates the concept of strong and weak Tuples/Records...
[02:49:46] <jaawerth> I think Box existed as a middleman specifically as a *black box*
[02:50:03] <jaawerth> "it doesn't matter what's in the box, we just know there is this box" lol
[02:50:26] <jaawerth> but what if you flipped it around? what if putting an object into a Record/Tuple deep-sealed it?
[02:50:46] <ThePendulum> here I am staring at an error that popped up out of nowhere for /days/: Unknown custom element: <UserTooltip> - did you register the component correctly
[02:51:04] <ThePendulum> it always worked, looked completely fine, paths all check out, conditions check out
[02:51:08] * ThePendulum looks closely
[02:51:14] <ThePendulum> { omponents: {} } >.>
[02:51:28] <ThePendulum> I accidentally hit d or whatever at some point
[02:52:28] <jaawerth> Anywy I think a big thing about the immutability of a Record/Tuple is that for it to work as a primitive, the engine needs to be able to make absolute assumptions about it. And I find it an intiguing idea that by putting an object into one, however expensive an operating it is, you end up.. almost with a mutex on it and everything it references
[02:58:17] *** Quits: kristijonas (~kristijon@88-119-92-43.static.zebra.lt) (Ping timeout: 240 seconds)
[03:01:23] <Maxdamantus> jaawerth: you don't have to traverse its members.
[03:01:30] *** Joins: kristijonas (~kristijon@88-119-92-43.static.zebra.lt)
[03:01:55] <Maxdamantus> jaawerth: if a JS implementation has a unique byte representation of all values, it could just be a `memcmp`
[03:02:15] *** Quits: sudomann (~sudomann@98.219.211.182) (Quit: leaving)
[03:02:17] <Maxdamantus> (I suspect in general they won't be able to use `memcmp`, but that is not due to my suggestion)
[03:02:46] <Maxdamantus> (my suggestion shouldn't change any need to do any traversal)
[03:03:09] <Maxdamantus> note that tuples/records can already contain things that have identity, namely symbols.
[03:03:22] <Maxdamantus> if you can serialise symbols, you can serialise object references.
[03:04:24] *** Joins: c4017w_ (~c4017@209.52.68.8)
[03:05:57] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[03:06:24] *** Quits: mat001 (~mat001@72.28.108.216) ()
[03:07:36] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:08:19] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[03:08:29] <tokie> jaawerth: fun fact: the jquery terminal library i wrote was written by the author for his javascript scheme implementation: https://lips.js.org
[03:08:37] <tokie> err that i found i mean
[03:12:36] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[03:19:26] <jaawerth> Maxdamantus: I think mutability is equally important too identity here, though
[03:20:54] <jaawerth> because what a TUple and Record lets you do is say "this is a unique value that is the sum of its parts, and if its parts can't mutate, we can treat it as the combined value" - hence they it can work as keys and why reconstructing ones would give you a deterministic answer to identity. You could do that with objects, but if you allow mutables in there, ewer assumptions can be made
[03:21:08] <jaawerth> which doesn't mean it'd be impossible to use them that way, but I suspect it will impact performance
[03:21:33] <jaawerth> becasue with jit compilers, the number ofo assumptions you can make tends to very strongly correlate with how various operations are optimized
[03:24:15] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[03:25:06] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[03:26:41] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[03:28:25] *** Quits: dskull (~dskull@user/dskull) (Quit: quit)
[03:31:37] *** Quits: kristijonas (~kristijon@88-119-92-43.static.zebra.lt) (Ping timeout: 240 seconds)
[03:31:40] *** Joins: kristijonas_ (~kristijon@88-119-92-43.static.zebra.lt)
[03:32:41] *** Quits: brentaarnold (~brentaarn@24.112.58.14) (Ping timeout: 256 seconds)
[03:33:37] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 240 seconds)
[03:33:56] *** Joins: dskull (~dskull@user/dskull)
[03:34:47] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[03:35:16] *** Joins: N4buc0 (~N4buc0@2804:7f4:348a:fff2:3dbb:5d64:acec:a3f1)
[03:35:51] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[03:39:37] *** Quits: MadcapJake (~MadcapJak@047-012-202-057.res.spectrum.com) (Ping timeout: 240 seconds)
[03:39:43] *** Joins: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[03:40:06] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[03:44:15] *** Quits: kristijonas_ (~kristijon@88-119-92-43.static.zebra.lt) (Ping timeout: 256 seconds)
[03:44:36] *** Joins: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se)
[03:47:30] <devslash> In React, I set a const activeComponent="MyComponent" which corresponds of course to the component name declared as const MyComponent = props => { ... Is there a way pragmatically to get the current component name
[03:49:00] *** Joins: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net)
[03:49:14] *** Quits: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net) (Read error: Connection reset by peer)
[03:49:18] *** Joins: yaocl (~yaocl@KD113154007049.ppp-bb.dion.ne.jp)
[03:50:27] *** Quits: yaocl (~yaocl@KD113154007049.ppp-bb.dion.ne.jp) (Quit: Client closed)
[03:50:52] *** Quits: twiclo (~twiclo@2604:7b80:2000:1069:52fc:cedd:fbeb:10c) (Quit: WeeChat 3.3)
[03:53:06] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Remote host closed the connection)
[03:53:46] <jaawerth> devslash: Before reassigning or passing it etc, youc an set a displayName property on it so that it will show up in debug info that way regardless of the name of the variable it's being used in
[03:53:59] <jaawerth> https://reactjs.org/docs/react-component.html#displayname
[03:54:15] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[03:55:01] <devslash> but hot do you reference displayName
[03:55:07] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[03:55:09] <jaawerth> it's just a property
[03:55:47] *** Joins: yaocl (~yaocl@KD113154007049.ppp-bb.dion.ne.jp)
[03:56:16] <devslash> so props.displayName ?
[03:56:23] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:56:30] <systemfault> displayName is a magic property for functions
[03:56:50] <jaawerth> the magic was inside React all along
[03:57:07] *** Joins: brentaarnold (~brentaarn@24.112.58.14)
[03:57:14] <devslash> i dont understand
[03:57:33] <ljharb> devslash: you shouldn't reference displayName.
[03:57:46] <devslash> well then it wont work for me
[03:57:49] <jaawerth> maybe I don't understand what yu're trying to do
[03:57:51] <ljharb> it's only for when you fail to properly provide a function name for your component, and you want to make things debuggable
[03:58:06] <ljharb> devslash: the simple answer is, never use arrow functions for components
[03:58:15] <ljharb> devslash: use a normal, named function, and you don't need a displayName.
[03:58:20] <jaawerth> it sounded like you had the problem of reassigning a component and having it show up in debug info under an overly generic name
[03:58:24] <jaawerth> which is a common pitfall
[03:58:26] <devslash> no
[03:58:28] <ljharb> devslash: and, you shouldn't need to dynamically get the component name.
[03:58:31] <jaawerth> ok
[03:58:38] <jaawerth> in that case, what is the problem you are trying to solve?
[03:58:38] <ljharb> devslash: why do you think you need that?
[03:58:48] <devslash> I want to get the name of the current component inside of the component because certain parts of the return do not render when editing
[03:59:03] <devslash> so I conditionally render with something like this:
[03:59:16] <devslash> {props.isEditing && props.activeComponent === thisComponent ? "8" : "10"}
[03:59:31] <devslash> where I define activecomponent="MyAwesomeComponent"
[03:59:38] <devslash> err sorry thats a const
[03:59:46] <ljharb> devslash: that's super weird, why
[03:59:55] <ljharb> devslash: just hardcode it
[04:00:19] <devslash> hardcode which part?
[04:00:32] <devslash> {props.isEditing && props.activeComponent === "MyAwesomeComponent" ? "8" : "10"}
[04:00:52] <banana_> happy friday
[04:00:54] <ljharb> devslash: ok maybe i don't understand
[04:01:03] <ljharb> devslash: if you're inside MyAwesomeComponent, that's always the active one
[04:01:06] <ljharb> if you're not, it's not
[04:01:16] <devslash> yes but isediting is a prop
[04:01:22] <ljharb> so?
[04:01:26] <devslash> passed down from the parent
[04:01:28] <ljharb> sure
[04:01:42] <devslash> so when isediting is true it needs to only allow editing for the current component
[04:01:49] <ljharb> i really don't know what that means
[04:01:52] <ljharb> you don't edit components at runtime
[04:02:21] <devslash> my component renders a form
[04:02:26] <jaawerth> devslash: two alternatives I would like to suggest. one, instead of by name, you can do so by identity using two Sets
[04:02:27] <devslash> an editable form
[04:02:38] <jaawerth> or possibly just one
[04:02:52] <jaawerth> either way you can put the components for which you want value A in set A and use .has
[04:02:58] <ljharb> devslash: ok, so editing the form is NOT editing a component
[04:03:06] <jaawerth> but instead of doing it based on some classification, you could also just stick a helper functin to the component
[04:03:11] <jaawerth> and let the component itself answer what to do
[04:03:17] *** Joins: kristijonas_ (~kristijon@88-119-92-43.static.zebra.lt)
[04:03:22] <jaawerth> and turn it into an actual api contract
[04:03:34] <KevinX> pass in two props, the component and a name?
[04:04:04] <jaawerth> iff I were you I'd try to do it that way, since at that point it isn't reying on some taxonomy but instead letting the component's interface drive it. No reason you can't stick helper functions onto functions :)
[04:04:19] <devslash> ok thanks
[04:04:40] <KevinX> I have something like this but I keep the available components in a map and I only pass through the key, which acts as the idenfier too
[04:04:56] *** Joins: c4017w__ (~c4017@209.52.68.8)
[04:04:56] <jaawerth> ^
[04:05:03] <jaawerth> yeah. I love Map and Set for this kind of thing
[04:05:31] *** Joins: bobdobbs (~user@2406:5a00:4456:db00:61b3:ccfa:27e9:bd6e)
[04:06:07] *** Quits: yaocl (~yaocl@KD113154007049.ppp-bb.dion.ne.jp) (Ping timeout: 256 seconds)
[04:08:23] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[04:09:49] <banana_> oh really
[04:09:51] <KevinX> Maybe something like this (super simplified, probably buggy): https://dpaste.com/F5CRM2HTS
[04:10:31] *** Joins: yaocl (~yaocl@112.21.85.161)
[04:11:08] <banana_> so you transform an array of objects to an array of an ID primitive, make that a Set object and then use the Set methods
[04:11:23] <banana_> make that into a Set object
[04:12:24] <KevinX> error in my example, in the find() method you would return true also based on a condition, such as what prop was passed in for the active component (i.e. "two")
[04:12:56] *** Joins: bobdobbs` (~user@116.251.146.222)
[04:13:14] <KevinX> but you could also pass through other props based on any condition too, so 'doSomething' would manage state, for example
[04:13:55] <KevinX> I'm using it for a "Notice" component, which sets a priority of what notice to show to users, and some need to fetch additional data before render
[04:13:57] *** Quits: bobdobbs (~user@2406:5a00:4456:db00:61b3:ccfa:27e9:bd6e) (Ping timeout: 240 seconds)
[04:15:56] <KevinX> I feel liek Set is only useful when you are avoiding duplicates or trying to compare/check for duplicates
[04:16:19] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[04:16:23] <stenno> sets/maps will be awesome with records/tuples
[04:16:50] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:ac33:9d52:7dc:f94b)
[04:17:26] <stenno> b> const coordinate = #{x:23,y:42}; const area = new Map(); area.set(coordinate, 'hello'); area.get(coordinate)
[04:17:27] <jellobot> (okay) 'hello'
[04:17:32] <banana_> or just want to use the .has(...) method
[04:18:24] <stenno> my specific example would have worked without records/tuples too lol come to think of it
[04:18:26] <stenno> bad example
[04:18:27] *** Quits: kristijonas_ (~kristijon@88-119-92-43.static.zebra.lt) (Remote host closed the connection)
[04:18:35] <systemfault> KevinX: Set is pretty bad IMHO
[04:18:44] <stenno> n> const coordinate = {x:23,y:42}; const area = new Map(); area.set(coordinate, 'hello'); area.get(coordinate)
[04:18:45] <jellobot> (okay) 'hello'
[04:18:47] *** Joins: kristijonas_ (~kristijon@88-119-92-43.static.zebra.lt)
[04:18:54] *** Joins: cha0s (~jp@modemcable164.40-23-96.mc.videotron.ca)
[04:18:57] <stenno> yep
[04:18:57] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-044.um10.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[04:19:16] <systemfault> KevinX: It lacks a lot of function you'd expect a Set to support... and there's no way to build one with a custom comparator
[04:20:38] <KevinX> What language has a good Set like implementation? (like you're epecting)
[04:20:44] <banana_> newb algo question, is it stupid to use a hashmap if your e.g. javascript function that doesnt implement a hashmap already runs in O(n) time
[04:20:57] <KevinX> expecting*
[04:21:06] <systemfault> KevinX: I can't think of any language that doesn't support what I just said...
[04:21:27] <banana_> hash maps are only useful for algo running in at least O(n^2) or higher?
[04:21:44] <systemfault> KevinX: Maybe Python? Ruby? I don't know then that much
[04:21:51] <systemfault> *them
[04:22:23] <KevinX> I mainly just know JS so don't know what to compare something like that too
[04:22:56] <KevinX> banana_ what do you mean by hash map?
[04:23:03] <systemfault> KevinX: In a lot of languages, you can override the "hash" of any object, and collections uses that hash as identity
[04:23:07] *** Quits: yaocl (~yaocl@112.21.85.161) (Ping timeout: 256 seconds)
[04:23:16] <KevinX> Would it just be an object key/pair {} or Map?
[04:23:36] <systemfault> Yeah, you could do it with a Map
[04:23:58] <KevinX> That was a reply to banana_ but ok :)
[04:23:59] <banana_> KevinX: hashmap as in any map that allows you to do lookups by key in O(1) constant time
[04:24:04] <jaawerth> in practice I uset a Map more often, somoetimes as a Set
[04:24:11] <jaawerth> since it lets me associate additional info
[04:24:27] <KevinX> Yeah I use maps more often than sets
[04:24:29] <jaawerth> in some languages a Set is just a Map where the value is set to true anyway, lol
[04:24:30] <systemfault> HashMap don't have O(1) lookups AFAIK
[04:24:42] <systemfault> An HashTable does
[04:25:02] <systemfault> Hashmaps are usually backed by a tree
[04:25:04] <banana_> but to use hashmap to make an algo quicker is stupid if the algo, javascript function, is already running in O(n) time
[04:25:22] <Maxdamantus> "HashMap" and "HashTable" don't sound meaningfully different to me.
[04:25:22] <banana_> ah ok. meant hash table then
[04:25:37] <Maxdamantus> at least in OpenJDK, `HashMap` is not implemented using a tree.
[04:25:45] <jaawerth> the spec has it as "sub O(n)" which is wonderfully unspecific. it tends to be O(logN) but with a sufficiently high order of the log such that it is effectively O(1) in the majority of scenarios, but strictly speaking O(1) must consider the *worst case* so they often dont' end up qualifying
[04:25:55] <Maxdamantus> Java also has `HashTable`, but that's some very old class that you're not meant to use anymore.
[04:25:57] <jaawerth> but for practical JS needs? just call it O(1) and move on :P
[04:26:01] <systemfault> Maxdamantus: Interesting
[04:26:06] <banana_> I like the noun phrase "hash table" more
[04:26:29] <jaawerth> well the can often mean very different things
[04:26:34] <systemfault> banana_: Whatever you want to smoke bro
[04:26:35] <Maxdamantus> There's `TreeMap` in Java which is implemented using a tree, and in particular it doesn't use `hashCode`.
[04:26:46] <jaawerth> not to menntion Hash Array Mapped Tries
[04:26:59] <Maxdamantus> since trees are normally used when you want to do it based on ordinal comparison rather than hashing. `Map` in Haskell uses a tree.
[04:27:06] <jaawerth> and you can just usea btree for a lot of this stuff too. the different techniques have diffefrent tradeoffs
[04:27:28] <banana_> was just asking if implementing a hash table is stupid if your algo is already running in O(n) time
[04:27:42] <banana_> in regards to making your algo faster
[04:27:43] <systemfault> No
[04:27:55] <jaawerth> it depends on usecase
[04:27:57] <systemfault> But it depends on what "n" is :P
[04:27:59] <jaawerth> and what youre sacrificing
[04:28:19] *** Joins: MadcapJake (~MadcapJak@047-012-202-057.res.spectrum.com)
[04:28:23] <banana_> n as an n (dynamic) number of inputs
[04:28:25] <systemfault> For a 5 elements array, even bogosort could work rapidly :p
[04:28:40] <jaawerth> if you're primarily doing direct random access lookups then yeah a hash table is probably worth it. but if you may have to iterate or do any kind of ordering..
[04:28:42] <systemfault> (If you wanted to sort an array)
[04:28:54] <banana_> yeah but i think for algo stuff the input is usually dynamic
[04:29:10] <jaawerth> people also underestimate a plain old binary-search array
[04:29:16] <banana_> so like any array size could be the input
[04:29:39] <systemfault> jaawerth: It's great... on an already sorted array.
[04:29:50] *** Quits: MadcapJake (~MadcapJak@047-012-202-057.res.spectrum.com) (Client Quit)
[04:30:13] <jaawerth> well you do it at insertion. and, yeah, you sacrifice having to shift items upon insertion, which comes back to what N is
[04:30:21] <systemfault> What I often see is people caring about performance when dealing with arrays having 100 elements or less...
[04:30:24] <jaawerth> like I said, always tradeoffs :P
[04:30:34] <jaawerth> ^
[04:30:37] <jaawerth> this
[04:30:52] <jaawerth> O(n) is nothing even in the thousands of items
[04:30:57] <banana_> im just saying for an n-element size array, could be any size, to make a hashtable of those elements you'd have to enumerate through the elements to build the hash table so that would take O(n) time right there
[04:31:22] <jaawerth> this is one of the reasons big O notation isn't actually all that useful a lotof the time
[04:31:42] <banana_> so using a hash table would be in vain because building it takes O(n) time
[04:31:43] <KevinX> just add a loading indicator :P
[04:31:53] <jaawerth> well it's pointless to use one in JS anwyay
[04:32:10] <jaawerth> an object will become a hash table under the hood if you mutate it enough :P
[04:32:10] <banana_> Map?
[04:32:49] <banana_> youre saying using Map objects as a hash table is pointless?
[04:32:55] <jaawerth> no, an object object
[04:33:03] <jaawerth> wait
[04:33:13] <jaawerth> no, I'm saying you don't have to implent your own in JS
[04:33:18] <systemfault> ^
[04:33:18] <jaawerth> unless you're doing someting like deep hashing
[04:33:42] <systemfault> IIRC, even objects in V8, when they're not hidden classes are hashtables
[04:33:46] <banana_> ah ok. why again? <--- newb follow up question
[04:33:50] <jaawerth> exactly
[04:34:17] <jaawerth> if v8 things the object has a fairly stable shape it will do the hidden classes but if you mutate its shape enough ti will give up on that and fall back to hash mode for the random access
[04:34:35] <systemfault> banana_: If you use an object as a dictionary, you're using a hashtable.... and it's native.
[04:34:48] <jaawerth> banana_: because it's a high-level language and the structures you're working with already do the things you might do by hand in C++ or whatnot
[04:34:59] <dapinitial> Hey JS Front-end friends. I am playing with react and making an application responsive... I can't share a pen right now, and I am not even 100% of the issue... but I think it has something to do with how I am using a ternary to conditionally swap styles. I usually use CSS but I am using inline JS in react to try and swap my styles... Has anyone encountered something to the following error:index.js:1 Warning: Updating a st
[04:34:59] <dapinitial> yle property during rerender (flexBasis) when a conflicting property is set (flex) can lead to styling bugs. To avoid this, don't mix shorthand and non-shorthand properties for the same value; instead, replace the shorthand with separate values.
[04:35:10] <systemfault> Also, one thing that BigO doesn't take into account is how hardware works.
[04:35:25] <systemfault> BigO doesn't care about CPU cache or data locality
[04:35:31] <jaawerth> great point
[04:35:48] <systemfault> Knowing about these details is called "mechanical sympathy"
[04:36:05] <jaawerth> what's mechanical empathy then
[04:36:33] <systemfault> That's being able to understand how your hardware works to make the best choices when programming...
[04:36:38] <banana_> are you guys saying that using a Map object as a hashtable will give you quicker lookups than using an object as a hash table?
[04:37:11] <KevinX> dapinitial it's saying not to use flex-bases AND flex
[04:37:16] <jaawerth> no, we're saying you don't haev to implement a hash table
[04:37:18] <KevinX> basis*
[04:37:20] <jaawerth> becuase you alrady have one
[04:37:34] <jaawerth> welll
[04:37:54] <jaawerth> actually I have ben told that Map tends to do better than Object in the case of cache misses but I haven't verified this
[04:38:26] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[04:38:29] <systemfault> I wouldn't be surprised is Map is faster, it's less general than "object"
[04:38:36] <jaawerth> object ordering IS consistently based on order of insertion, which means unlike some other language vm's, javascritp does not inject a nonce to prevent collisions
[04:38:37] <systemfault> But I guess it's implementation-specific
[04:38:55] <jaawerth> so I could see why object woudln't walways be that performant. but it would be hard to test this reliably
[04:39:23] <jaawerth> in lua, for example, even the same code between runs will give you different ordering in your k/v tables because the vm generates a random nonce at startup time
[04:40:08] <dapinitial> KevinX:  Thanks, I fixed the error with your confidence boost!
[04:40:51] <KevinX> it was just a warning anyway though
[04:40:57] *** Quits: kristijonas_ (~kristijon@88-119-92-43.static.zebra.lt) (Ping timeout: 240 seconds)
[04:41:11] <KevinX> React trying to help you find bugs
[04:41:30] <jaawerth> but in JS, the spec in ES6+ says objects (after the integer keys)  keep order of insertion. which means hash collisions ren't being prevented as effectively as they could be, but in exchange you have consistent key order
[04:42:01] <jaawerth> well, it's possible the JIT magic does something I'm unaware of to help with such things
[04:42:03] *** Joins: kristijonas_ (~kristijon@88-119-92-43.static.zebra.lt)
[04:42:08] <dapinitial> KevinX:  React is so kind
[04:44:37] *** Quits: stagas (~stagas@2a02:587:c441:b777:656b:8bfb:d9b2:c7ff) (Ping timeout: 240 seconds)
[04:44:57] *** Joins: mdemo (~mdemo@user/mdemo22)
[04:46:47] <banana_> I makes sense to know O(n) so you can prove mathematically why a javascript function that runs in like O(n^n) time sucks
[04:47:22] <systemfault> My maths suck.... I mostly understand the complexity because I once implemented basic data structures in C++
[04:47:47] <banana_> right, like prove to yourself at least, and let's say you could reimplement it to run in O(N^2)  is better
[04:48:11] <KevinX> mine are better just because of advent of code. I dont use that stuff otherwise
[04:48:14] <systemfault> It's always about tradeoffs.
[04:48:16] <banana_> besides like "well the app doesnt freeze as much" idk
[04:49:15] <banana_> even if the difference is minute, you know that your reimplemented algo is in a different category of runtime
[04:49:37] *** Quits: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se) (Quit: Leaving)
[04:49:59] <banana_> like what's the real difference between O(n^2) and O(n) in a javascript app? probably nothing right
[04:51:16] *** Joins: Rockwood (~Rocky@user/rocky)
[04:52:30] <systemfault> As soon as you have a N....if the N is low number, it's useless.
[04:52:35] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Read error: Connection reset by peer)
[04:52:52] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[04:52:57] <banana_> but still good to know, especially if the old implementation is running a higher category of a dynamic factor based executions
[04:53:23] *** Quits: paule32 (~paul@user/paule32) (Ping timeout: 256 seconds)
[04:53:40] <banana_> like O(n) is running a dynamic number of n executions. but a higher category of that is O(n^n)
[04:53:53] *** Quits: N4buc0 (~N4buc0@2804:7f4:348a:fff2:3dbb:5d64:acec:a3f1) (Remote host closed the connection)
[04:54:02] <banana_> like O(n) is running a dynamic number of executions*
[04:54:16] *** Joins: N4buc0 (~N4buc0@2804:7f4:348a:fff2:3dbb:5d64:acec:a3f1)
[04:54:34] <banana_> the dynamic number is n.
[04:54:57] <jaawerth> the concepts are useful, the problem is obsessing over them. especially when you're only going to deal with 100 items or - as is common in JS and other web usecases - the bottleneck is never CPU bound because whata yuo're really waiting on is IO
[04:55:03] <jaawerth> it doesn't ean o
[04:55:21] <jaawerth> it doesn't mean you can ignore perf entirely but rivet-countin your big O's is only gonna get you so far
[04:55:30] <KevinX> you can always optimize later too
[04:55:39] <jaawerth> now, personally I love getting nerdy with data structures so it's something I hae to actively resist sometimes
[04:55:40] *** Joins: crashrep (~crashrep@user/crashrep)
[04:55:51] <KevinX> you dont need your saas to handle 1 mil users on day 1
[04:56:10] <jaawerth> the other thing is - wht are you optimizing for? O(n) lookup is great and all but if you're doing a queue then it's pointless
[04:56:26] <jaawerth> or if your'e filtering based on date rangse, etc, etc
[04:57:02] <banana_> wait confused by last bit
[04:57:17] <systemfault> Arrays are supposed to be slower for some operations compared to a linked list... but in practice, the array is always faster
[04:57:22] <banana_> what's pointless and why. just wanna make sure I'm understanding you right
[04:57:26] <systemfault> Even when adding an element in the middle of it.
[04:57:46] <systemfault> Because "hardware"
[04:57:57] <jaawerth> O(1) key-based looups is pointless if your'e' using the structure as  queue
[04:58:21] <jaawerth> like, if you're only doing individual lookups occasoinally and the rest of the time you're just iterating, the O(1) saved you very little
[04:58:27] <jaawerth> it's about right tool for the right job, that's all
[04:58:49] <jaawerth> and sometimes those constant factors are much bigger than they appear, to systemfault's point
[04:59:06] <jaawerth> and key length is also a factor sometimes. or how keys are colliding in the hash, which you can't even inspect in JS
[04:59:15] <banana_> so you're saying like going from O(n^2) to O(n) is pointless
[04:59:34] <systemfault> A O(1) datastructure can still be slow as F.
[04:59:39] <jaawerth> it is if you're only doing 5 lookups for every 100 times you're just iterating from start to end
[05:00:28] <systemfault> I can create a hash function for a hash table with a sleep of 24 hours in it and it would still be O(1)
[05:00:33] <banana_> yeah that makes sense
[05:01:12] <systemfault> Picking a hash function for a hashtable is a matter of performance vs collisions
[05:01:39] <jaawerth> clojure's vectors are a good example here. big O purists will point at it after reading an article I like to link and say "aha! so it's O(logN)! which is technically true, despite a lot of talk about it being O(1)
[05:02:32] <jaawerth> but the reason for that is because the kind of structure they use, tries of arrays of order 32, makes them log32(N)
[05:02:44] <banana_> so youre saying like saving from worst case O(n) inside each iteration, the entire iteration being O(n) too, is pointless because in your case there's only 5 lookups/per 100 iterations
[05:02:50] <jaawerth> but strictly speaking that's still O(log(N) ) in big O parlance
[05:02:57] <jaawerth> that ignored constant factor is *huge*
[05:03:22] <jaawerth> the worst case of O(logN) occurs at most like 3% of the time
[05:03:48] <jaawerth> well I'm not saying pointless anymore, that was when I was talking about usecase
[05:03:52] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-044.um10.pools.vodafone-ip.de)
[05:03:54] <jaawerth> now I'm just illustrating the limitations of big O
[05:04:17] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[05:05:12] <banana_> yeah so youre saying the base in log32, 32 is a high base so doesn't matter it's technically logN
[05:05:25] *** Joins: c4017w_ (~c4017@209.52.68.8)
[05:06:36] *** Quits: Bish (~arne@ip-037-024-001-041.um08.pools.vodafone-ip.de) (Ping timeout: 245 seconds)
[05:07:04] <Rockwood> good morning everyone
[05:07:07] <jaawerth> well in one case you're weighing 97% of the usage scenarios oer the 3% and in the other you're weighing the 3% over the 97% because it's a worst-ase. you can't always just say "what are the odds?" but unless always ignoring the 97% entirely like big O does is thorowing away rather a lot of information about the system
[05:07:20] *** Joins: Bish (~arne@ip-037-024-001-041.um08.pools.vodafone-ip.de)
[05:08:08] <banana_> like for log32(32 /*being input size*/) you have only 1 execution
[05:08:28] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[05:08:44] *** Joins: kristijonas (~kristijon@88-119-92-43.static.zebra.lt)
[05:08:47] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-044.um10.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[05:08:47] <Decker> of 1000 instructions instead of log2(2) with 10 each
[05:08:51] <banana_> log32(33554432) is 5
[05:08:53] <banana_> which aint ba
[05:08:55] <banana_> bad
[05:08:57] <Decker> log2(32)
[05:09:15] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[05:09:21] *** Quits: kristijonas_ (~kristijon@88-119-92-43.static.zebra.lt) (Ping timeout: 256 seconds)
[05:09:24] <banana_> 5 execution for an input size of 33554432... not too shabby
[05:09:26] <Decker> anyway log256 or log2 doesn't really matter a lot
[05:09:37] <Decker> it's something a scalar can fix
[05:09:47] <jaawerth> hehe, exactly ;-)
[05:09:47] <Decker> that washes out in the instruction counts per step
[05:09:59] <banana_> so you have a bone to pick with the O(logN) category in general
[05:09:59] <jaawerth> and because they're immutable you can do a lot of memoizing too
[05:10:54] <banana_> how they don't recategorize log32 with log2 or something
[05:11:35] <banana_> they dont because the the difference between log32 and log2 is a constant factor.
[05:11:39] <jaawerth> there are other kinds of notation that take more factors into account than big O
[05:12:39] <banana_> I see what you mean though for high bases of O(logN)
[05:12:59] *** Quits: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[05:15:11] <banana_> are those other notations mathematically based?
[05:15:21] <Rockwood> https://codesandbox.io/s/awesome-carson-o0931?file=/src/Http.js  here code works without any error but in my project its throwing error
[05:15:28] <jaawerth> they all are, tehy just take different things into account
[05:15:43] <banana_> like you need to understand math to use and understand the other notation?
[05:15:57] <jaawerth> the problem with big O is it always takes the worst-case scenario into consideration over everything else without considering how often you land on the worst case, the best case, and everywhere in between
[05:16:04] <Rockwood> app.js:46658 Uncaught (in promise) TypeError: URL is not a constructor
[05:16:09] <jaawerth> then there's the oppostie, Big Omega
[05:16:34] <jaawerth> and various others, but i've been out of school for a while so it's hazy ;-)
[05:16:49] <banana_> yeah I meant like not the academic sense of big O meant just like categorizing the run-time of an algo,
[05:17:02] <KevinX> Rockwood console.log(URL)
[05:17:10] <Rockwood> okay
[05:17:18] <Rockwood> doing
[05:17:32] <banana_> like this algo is O(n) run-time, goes into "O(n)" category because of math
[05:17:53] <banana_> have no idea about big omega or that stuff
[05:18:46] *** Quits: koolazer (~koo@user/koolazer) (Remote host closed the connection)
[05:18:48] <banana_> idk yeah this is probably where my alog newbness shows off
[05:19:26] <ejjfunky> I don't know about big Omega too. It sounds more like an X-men villain though.
[05:20:09] <ejjfunky> how does omega works?
[05:22:05] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[05:22:05] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[05:22:05] *** Joins: wroathe (~wroathe@user/wroathe)
[05:22:25] <Rockwood> KevinX, nothing happens may be other issue too
[05:22:28] <Rockwood> 2 sec chk
[05:22:30] <Rockwood> ing
[05:23:10] <Rockwood>         return await Promise.all([ 'listRight', 'listLeft' ].map(url => Http(url)));
[05:23:29] <jaawerth> Rockwood: whatever url module that is, it's not giving you the newer node library that includes the whatwg URL. ust get rid of the require, I bet it's giving an old browserify shim for the node url lib or something
[05:23:44] <jaawerth> this is a browser you're running in, right?
[05:23:48] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:24:21] <Rockwood> i am using chrome
[05:24:53] <jaawerth> yeah no need for the require('url') then. if you need to support legacy browsers you can grab a polifill but for now you can just use it as a global
[05:24:57] <jaawerth> !ciu URL
[05:24:57] <jellobot> jaawerth, URL API (Edge 12, FF 26, Chrome 32, Opera 19, Safari 7.1, iOS 8, Android 4.4.3-4.4.4) 95.45% https://caniuse.com/url
[05:25:05] <jaawerth> not bad
[05:25:45] *** Joins: jazzy (~jaziz@user/jaziz)
[05:26:27] <Rockwood> "const {URL} = require('url');" just only is enough you are saying -> new URL( _url, defaultBaseURL).toString();
[05:26:57] <KevinX> yeah delete "const {URL} = require('url');"
[05:27:06] <jaawerth> Rockwood: why did you even add they require?
[05:27:12] <jaawerth> I don't think I wrote it
[05:27:16] <KevinX> my guess was you didnt install it
[05:27:24] *** Quits: kristijonas (~kristijon@88-119-92-43.static.zebra.lt) (Remote host closed the connection)
[05:27:35] *** Joins: pavonia (~user@user/siracusa)
[05:27:36] <jaawerth> anwyay, URL is part of the DOM
[05:27:46] <Rockwood> jaawerth, i copied your suggested code
[05:28:06] <jaawerth> oh crap did I do it without thinking because I was writing in node
[05:28:08] <jaawerth> if so i appologize
[05:28:30] <ejjfunky> reactjs question: I just created a function that returns a button. I want to create a javascript on the function itself. say, alert("hello world"). how do i do that?
[05:28:51] <jaawerth> in node you have to do that because they stuck the whwatwg DOM URL in  the url module and I may have writtne the require without a second thought
[05:28:59] <jaawerth> but yeah it's a global in browsers
[05:29:08] <KevinX> ejjfunky onClick ?
[05:29:23] <Rockwood> jaawerth, np
[05:29:35] <ejjfunky> yes. but i want the script to be outside the onClick.
[05:29:47] <KevinX> define if before the return
[05:29:56] <jaawerth> wait no I'm innocent
[05:29:58] <jaawerth> http://ix.io/3OEo/js
[05:30:01] <ejjfunky> like ordinary script above <script></script> but on the react function
[05:30:18] <jaawerth> ^ that was my suggested code :)
[05:30:21] <ejjfunky> oh, right. Thanks, KevinX.
[05:30:27] <KevinX> no, within the component function. Well how does your code look now?
[05:30:34] <ejjfunky> got it
[05:30:35] <KevinX> ok
[05:30:53] <ejjfunky> just const ButtonHello = () => {};
[05:31:20] <KevinX> yeah just in there before the return. Or inline on the button even if you want
[05:31:50] <KevinX> or pass it in as a prop if you need to
[05:32:04] <ejjfunky> cool. thanks. trying it now.
[05:32:13] <Rockwood> jaawerth, is looks correct now?
[05:32:15] <Rockwood> https://codesandbox.io/s/awesome-carson-o0931?file=/src/Http.js:0-838
[05:33:01] <jaawerth> I"m gain curious where that require came from since we now know it wasn't me :P
[05:33:40] <Rockwood> i have chk
[05:33:58] <jaawerth> looks decent other than that pesky CSRF token
[05:34:32] <jaawerth> another thing some people like to do when embedding data from something like PHP, btw, is to put it on a data-url in a dom element
[05:35:39] <KevinX> My guess is Laravel is adding that already
[05:35:47] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-044.um10.pools.vodafone-ip.de)
[05:35:50] <Rockwood> yes laravel
[05:36:27] <KevinX> Maybe in their default template?
[05:36:47] <KevinX> Ive seen that before though
[05:37:14] <KevinX> Googling though it seems that was removed
[05:37:48] <Rockwood> https://dpaste.com/4VFDCQL3A
[05:38:03] <Rockwood> template yes
[05:38:20] <KevinX> are you using jetstream or something else?
[05:38:31] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[05:38:38] <jaawerth> it's also popular to put those in a hidden form field, or I like data-attributes because you can use element.dataset.foo to access the data
[05:38:38] <Rockwood> vscode
[05:39:04] <KevinX> jetstream is laravels default app starter kit
[05:39:15] <jaawerth> ahhh
[05:39:26] <KevinX> I think laravel now recommends you put it in a hidden form field too
[05:39:30] <jaawerth> so it's nontrivial to override?
[05:39:37] *** Quits: mdemo (~mdemo@user/mdemo22) (Ping timeout: 240 seconds)
[05:40:12] <jaawerth> yeah hidden form field also has the benefit of allowing things to work in no-js scenarios as well, so long as you're POSTing
[05:40:16] <KevinX> I think they make it easy to override most things
[05:40:37] <jaawerth> I haven't used php since php 5 so I'l'l take your word for it
[05:40:56] <Rockwood> yes i can do that too but i feels its not good
[05:41:16] <KevinX> laravel is much better now than anything from back then. They took all the best parts of Rails
[05:41:56] <Rockwood> symphony also good one i listen
[05:42:59] <KevinX> https://laravel.com/docs/8.x/csrf
[05:43:11] <KevinX> They recommend <meta name="csrf-token" content="{{ csrf_token() }}">
[05:43:55] <Rockwood> should i compare in JS too of that token
[05:43:56] <Rockwood> ?
[05:44:01] <Rockwood> brb 7
[05:44:08] <Rockwood> in few
[05:44:44] <KevinX> Rockwood where are you from?
[05:45:31] <Rockwood> india
[05:45:43] *** Joins: mdemo (~mdemo@user/mdemo22)
[05:46:33] *** Joins: alystair (~alystair@user/alystair)
[05:46:39] <KevinX> 7:45am?
[05:47:11] <alystair> Welp this is interesting - I started testing my library against Samsung Internet and when I click on <a href> tags it crashes the tab, remote DevTools immediately disconnects and I'm out of ideas.
[05:47:24] <jaawerth> ah yeah meta tag makes sense
[05:47:31] <alystair> how can I further diagnose this :S
[05:48:01] <KevinX> the samsung android browser?
[05:48:05] <alystair> yes
[05:48:10] <alystair> it's based on chromium now
[05:48:14] <KevinX> =/
[05:48:20] <jaawerth> you can set a breakpoint on event lisstenres in devtools iirc. but you'd need to get them connected to the samsung. does it support DAP, I wonder?
[05:48:24] <KevinX> Not sure. maybe remove things one by one
[05:48:30] <jaawerth> oh if it's chromium based
[05:48:32] <alystair> I tried pausing on exceptions but this seems to be a deeper issue, also noticed it's ignoring my takeover of local hrefs for my SPA... :P
[05:48:43] <jaawerth> maybe you can remote connect chrome devtools to it
[05:49:01] <Rockwood> yes KevinX
[05:49:05] <alystair> that's what I'm saying jaawerth - I'm already remotely connected but the tab just crashes
[05:49:20] <jaawerth> oh my bad. so yeah, look for setting the breakpoint on the click event listener
[05:49:22] <jaawerth> so you can setp
[05:49:36] <alystair> hrm
[05:50:24] <jaawerth> https://developer.chrome.com/docs/devtools/javascript/breakpoints/#event-listeners
[05:51:02] <jaawerth> also investigate any event listeners you know you have related ot that lick
[05:51:04] <jaawerth> click
[05:51:18] <jaawerth> like, there must be *something* your codebase is doin to that anchor tag, right?
[05:51:40] <jaawerth> you can set a break point on a DOM changes too
[05:52:54] <alystair> lol getting closer to it
[05:57:33] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:58:36] *** Joins: ferdna (~ferdna@user/ferdna)
[05:58:39] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[06:02:30] <alystair> I just went through the entire process stepping line by line - it's only once the entire JS process is complete that it either crashes or loads the other page as if it was a normal link... my only two theories are the mutation of the <meta> canonical link, or some weird edge case of event.preventDefault() o_O
[06:03:16] <jaawerth> that is downright bizarre
[06:03:19] <jaawerth> mobile browsers, man
[06:04:07] <jaawerth> maybe check CIU for any (or shouldiuse.. I think there are linters that can query the CIU database agaginst your target platform?) to see if you're touching an API that makes the browser fall apart?
[06:04:19] *** Quits: eXtr3m0 (~eXtr3m0@user/eXtr3m0) (Ping timeout: 256 seconds)
[06:04:21] <jaawerth> if that doesn't do it, my only ther advice is that you were probably cursed and should hire a witch to help you lift it
[06:04:53] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 256 seconds)
[06:05:17] <KevinX> can you remove the meta link to rule it out?
[06:05:30] <jaawerth> oh good call
[06:05:36] <alystair> yeap commenting everything I can out right now
[06:05:55] *** Joins: c4017w__ (~c4017@209.52.68.8)
[06:06:16] <alystair> too bad there's no option in DevTools to skip lines of code from execution entirely :D
[06:06:22] <jaawerth> p.jaawerth.com/shut-it-down.gif
[06:06:22] <alystair> as far as I know
[06:06:35] *** Quits: eXtre3m0 (~eXtr3m0@user/eXtr3m0) (Ping timeout: 256 seconds)
[06:06:59] <banana_> just tell users to use a different android browser
[06:07:33] <KevinX> :D
[06:07:50] <alystair> considering I'm attempting to make a library to go up against react/vue... not an option lol
[06:08:02] <banana_> how does your <a> tag look like exactly
[06:08:28] <alystair> it's a normal <a> tag. That's one of the core tenants of my library, to keep html/css/js as "vanilla" as possible :)
[06:08:34] <banana_> because I know you have to use those extra bs <a> attributes for some good reason
[06:08:44] <banana_> some good reason smarter people figured out
[06:08:56] <banana_> you sometimes have to*
[06:09:15] <Rockwood> KevinX,         <script> window.Laravel = {csrfToken: '{{ csrf_token() }}'} </script> is it correct way?
[06:09:33] <Rockwood> instead of meta i am doing in script
[06:09:39] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[06:09:43] <banana_> anyone know what <a> attributes I'm talking about?
[06:09:48] <jaawerth> Rockwood: meta is better
[06:09:57] <jaawerth> because you're accessing a DOM elmeent that is always there and checking a field
[06:10:03] <banana_> complete shot in the dark
[06:10:09] <Rockwood> okay
[06:10:15] <jaawerth> well, ok, but I see what you're doing
[06:10:18] <jaawerth> that should be fine
[06:10:31] <jaawerth> it's still a bit ephemeral comapred to a DOM node and it won't benefit you with any native form functionality
[06:10:43] <jaawerth> but if you aren't doing anything with forms anyway, that's at least arobust container for it
[06:12:40] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[06:13:43] <Rockwood> https://dpaste.com/GEURRYVTV is looks better now?
[06:14:13] <Rockwood> should i this to in my fetch header--> 'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
[06:14:22] <Rockwood> i think yes
[06:14:27] <Rockwood> it should be in
[06:15:33] <banana_> I'm thinking of rel="noopener" I think
[06:15:56] <banana_> but might not be relevant for your <a> i dont effin know ha
[06:15:59] *** Quits: mdemo (~mdemo@user/mdemo22) (Quit: The Lounge - https://thelounge.github.io)
[06:16:06] <since_> what should i do with an async function when being top level (mozilla firefox)?
[06:16:14] <since_> await foo() does not seem to wrk
[06:16:57] <banana_> that's odd only the samsung browser crashes
[06:17:04] <KevinX> Rockwood i think that's jQuery code though
[06:17:20] <Rockwood> yeah
[06:17:22] <KevinX> since_  use .then
[06:17:30] *** Joins: mdemo (~mdemo@user/mdemo22)
[06:17:32] <KevinX> or an iife
[06:17:51] <Rockwood> KevinX, is it no need in js that?
[06:18:04] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[06:18:28] <KevinX> replace $ with document.querySelector and get the attribute the JS way
[06:18:45] <since_> KevinX: an iife did not seem to work aswell
[06:18:50] <since_> then works
[06:18:59] <banana_> haha why I mentioned that as something that would be busy
[06:19:01] <Rockwood> const csrfToken = document.querySelector("[name='csrf-token']").content
[06:19:03] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:d142:9ff8:db64:1336) (Ping timeout: 256 seconds)
[06:19:11] <since_> but in firefox "top level await" now seems to work. but i do not know what that means
[06:19:20] <Rockwood> KevinX, "const csrfToken = document.querySelector("[name='csrf-token']").content"is correct?
[06:20:10] <KevinX> i think you need getAttribute()
[06:21:00] *** Joins: thojanssens (~thojansse@49.230.133.120)
[06:21:34] <banana_> like for rel="noreferrer" maybe Samsung browser is like storing your referrers info but browser gets confused with an referrer of an intra-spa link so it crashes<a>
[06:21:37] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[06:22:07] <banana_> idk just trying to rationalize a dumb thing to try out.
[06:22:18] <Rockwood> KevinX, const csrfToken = document.querySelector("[name='csrf-token']").getAttribute("content"); now?
[06:22:36] <banana_> seems like what youre saying your browser crashes right? idk maybe it's your app
[06:22:59] <KevinX> banana_ good to try everything if out of ideas
[06:23:10] <KevinX> Rockwood try and see
[06:23:16] <Rockwood> okay
[06:23:36] <banana_> yeah if I had to guess Samsung browser is storing refererr info.
[06:23:59] <banana_> like if I had to guess what browser did. would say samsung's
[06:25:11] <Rockwood> KevinX, Uncaught TypeError: Cannot read properties of null (reading 'content')
[06:25:12] <banana_> if some browser did store referrer info^
[06:26:09] <Rockwood> const csrfToken = document.querySelector("[name='csrf-token']").content; and const csrfToken = document.querySelector("[name='csrf-token']").getAttribute("content"); both way is throwing error
[06:28:35] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[06:31:29] *** Joins: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[06:33:26] *** Joins: zebrag (~chris@user/zebrag)
[06:33:44] <KevinX> console.log(document.querySelector("[name='csrf-token']"))
[06:34:14] <Rockwood> KevinX, VM131:1 Uncaught (in promise) SyntaxError: Unexpected token < in JSON at position 0
[06:34:33] <Rockwood> after const token = document.head.querySelector('meta[name="csrf-token"]');
[06:36:37] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[06:38:57] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-044.um10.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[06:40:15] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[06:42:46] *** Joins: N4buc0- (~N4buc0@189.58.131.84)
[06:43:00] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[06:44:17] *** Quits: N4buc0 (~N4buc0@2804:7f4:348a:fff2:3dbb:5d64:acec:a3f1) (Remote host closed the connection)
[06:44:29] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:58b3:64eb:a057:2f5c)
[06:45:37] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[06:46:04] <Rockwood> KevinX, i am getting in network tab https://dpaste.com/5537KWSZ3
[06:46:24] <Rockwood> after console.log(document.querySelector("[name='csrf-token']"))
[06:46:39] <KevinX> whats the url?
[06:47:11] *** Quits: Arisco (~ckmptnml@189-31-251-104.user3p.brasiltelecom.net.br) (Ping timeout: 250 seconds)
[06:48:38] <KevinX> Your network request is returning html but you want json
[06:48:52] <KevinX> it's separate from the csrf issue
[06:49:08] <Rockwood> https://api.rockwood.test/api/listRight
[06:49:13] <Rockwood> i am getting
[06:49:53] *** Joins: sunny933 (~sunny93@wireguard/tunneler/sunny93)
[06:50:01] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[06:50:20] <Rockwood> KevinX, https://dpaste.com/75MKYUS2S
[06:50:32] *** Quits: ldlework (~hexeme@user/hexeme) (Remote host closed the connection)
[06:51:25] *** Quits: sunny93 (~sunny93@wireguard/tunneler/sunny93) (Ping timeout: 240 seconds)
[06:51:25] *** sunny933 is now known as sunny93
[06:51:41] <KevinX> if your endpoint is returning html and not JSON then you have to check your laravel routes
[06:52:17] <KevinX> Unexpected token < in JSON at position 0 usually means <html> is at the top
[06:52:43] *** Quits: \mSg (mSg@user/msg/x-0285936) (Ping timeout: 256 seconds)
[06:53:03] <Rockwood> yes both routes not defined there
[06:53:12] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-044.um10.pools.vodafone-ip.de)
[06:53:12] <Rockwood> may be it a error cause
[06:53:15] *** Joins: Arisc (~ckmptnml@189-31-251-104.user3p.brasiltelecom.net.br)
[06:53:22] *** Joins: hexeme (~hexeme@user/hexeme)
[06:53:24] *** Joins: \mSg (mSg@user/msg/x-0285936)
[06:53:37] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:58b3:64eb:a057:2f5c) (Ping timeout: 256 seconds)
[06:54:38] *** Joins: masoudd (~masoudd@user/masoudd)
[06:55:02] <Rockwood> https://api.rockwood.test/function%20URL()%20%7B%20[native%20code]%20%7D <-- this name is coming at in network tab
[06:55:33] <Rockwood> Request URL: https://api.rockwood.test/function%20URL()%20%7B%20[native%20code]%20%7D
[06:56:46] <Rockwood> header tab having this information --> https://dpaste.com/78BKWPRGM
[06:57:17] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-044.um10.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[06:57:40] <KevinX> well the url isnt right
[06:58:24] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[06:58:36] <Rockwood>   const url = new URL( _url, defaultBaseURL).toString();
[06:58:36] <Rockwood> console.log(url);
[06:58:40] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Quit: Leaving)
[06:58:44] <alystair> OK, well I removed the canonical modifier and now Samsung Internet straight hard crashes entirely LOL
[06:58:53] <KevinX> lol
[06:59:06] <Rockwood> https://api.rockwood.test/api/listRight <- output
[06:59:10] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[06:59:14] <Rockwood> of console.log(url);
[06:59:31] <alystair> I can't share the code because I haven't modularized my library yet, it's ~4k LOC aside from my debugger
[06:59:41] <KevinX> Rockwood check the docs for URL I don tthink thats right
[06:59:44] <alystair> investigation continues :D
[06:59:59] <KevinX> alystair just play th eremove/add game
[07:00:27] <Rockwood> laravel docs or Js docs?
[07:00:39] <KevinX> Rockwood also you shared your local dev url
[07:00:49] <Rockwood> yes
[07:00:59] <KevinX> oh alright i see
[07:01:02] <Rockwood> i have shared
[07:01:12] <Rockwood> my local computer's data
[07:01:22] <Rockwood> i means fetch things
[07:01:24] <KevinX> let me check your fetch function
[07:01:56] *** Joins: masoudd_ (~masoudd@user/masoudd)
[07:02:37] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[07:02:44] <alystair> ok the canonical part makes no difference, it's because I was using a local IP address instead of a normal web domain o_O
[07:03:11] <alystair> so... if I use a normal TLD off the web it crashes the tab, and if I do this via an IP it crashes the browser entirely lol
[07:03:57] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 240 seconds)
[07:06:03] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[07:06:24] *** Joins: c4017w_ (~c4017@209.52.68.8)
[07:06:37] <Rockwood> KevinX, https://codesandbox.io/s/awesome-carson-o0931?file=/src/App.js
[07:06:52] <Rockwood> here looks good everything
[07:07:03] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[07:07:38] <KevinX> you have fetch(URL) in uppercase
[07:08:08] <Rockwood> yeah
[07:08:15] *** Quits: cha0s (~jp@modemcable164.40-23-96.mc.videotron.ca) (Ping timeout: 256 seconds)
[07:08:17] <KevinX> make it url lowercase
[07:08:21] <Rockwood> okay
[07:08:36] <KevinX> alystair so you fixed it? or it's worse than you thought??
[07:08:36] <Rockwood> is it case sensitive?
[07:08:56] <alystair> ok the hard crash is related to clicking on links via remote DevTools instead of locally on the device
[07:09:19] <KevinX> Rockwood code in general is, yes. Always assume so
[07:09:37] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[07:09:43] <Rockwood> KevinX, in my sendbox is it already lower case
[07:10:26] <Rockwood> oops
[07:10:28] <Rockwood> sorry
[07:10:37] <Rockwood> yes you are correct
[07:11:54] <ljharb> Rockwood: did you figure out that node 15 is eol, and update to 16?
[07:12:46] <Rockwood> ljharb, i tried but i don't get success
[07:14:00] <alystair> ljharb my library has become so bad it crashes Samsung Internet when clicking on local HREFs :'D
[07:14:13] <alystair> I think I win a merit badge for that
[07:16:37] <ljharb> Rockwood: should be easy with nvm
[07:16:49] <ljharb> alystair: lol, congrats?
[07:17:01] <Rockwood> hows?
[07:17:11] <ljharb> Rockwood: nvm install 16?
[07:17:19] *** Quits: bobdobbs` (~user@116.251.146.222) (Remote host closed the connection)
[07:18:03] <Rockwood> chking
[07:19:18] <Rockwood> nvm -v
[07:19:18] <Rockwood> Command 'nvm' not found, but there are 13 similar ones
[07:19:29] <Rockwood> i ve npm
[07:19:59] <Rockwood> npm -v
[07:19:59] <Rockwood> npm does not support Node.js v15.14.0
[07:21:41] <KevinX> nvm is a node version manager
[07:22:19] <KevinX> ljharb is this about URL? Rockwood just removed the require('url')
[07:22:25] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[07:24:40] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[07:24:47] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:448e:2f95:fd23:bf53)
[07:24:49] <Rockwood> ljharb, https://github.com/nvm-sh/nvm#install--update-script is it?
[07:25:10] <KevinX> Rockwood nvm is good in general if you need to switch node versions or want to upgrade but be able to switch back. It's worth using/learning it (or fnm)
[07:27:26] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-044.um10.pools.vodafone-ip.de)
[07:27:49] <Rockwood> ok
[07:28:13] <Rockwood> what is fnm?
[07:29:13] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[07:29:53] *** Parts: SevenCats (~SevenCats@135-23-44-80.cpe.pppoe.ca) ()
[07:30:58] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[07:31:32] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:31:32] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:31:32] *** Joins: wroathe (~wroathe@user/wroathe)
[07:33:49] <Rockwood> app.js:94367 Warning: Each child in a list should have a unique "key" prop. oops
[07:33:55] <Rockwood> another error
[07:34:01] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Remote host closed the connection)
[07:34:11] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[07:34:13] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[07:34:17] *** Quits: MassDebates (~MassDebat@2600:1700:1184:4510:5c98:6cda:8aa6:d1c5) (Ping timeout: 240 seconds)
[07:34:58] *** Joins: stagas (~stagas@2a02:587:c441:b777:aca8:f732:e834:adbc)
[07:38:47] <KevinX> fnm is an alternative to nvm
[07:39:00] <KevinX> its the Rust version, so you can rbag about using it (im joking)
[07:39:03] *** Joins: df00z (~df00z@cpe-104-229-40-4.rochester.res.rr.com)
[07:39:04] <KevinX> brag*
[07:41:41] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[07:42:38] <stagas> rbag is brag about a rust project
[07:42:45] <stagas> :P
[07:43:22] <KevinX> makes you sound like an r-bag for sure :D
[07:44:16] <Rockwood> Objects are not valid as a React child (found: [object Response]). If you meant to render a collection of children, use an array
[07:45:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[07:45:48] <Rockwood> ["bn","cyberia","de","fc","hj"]
[07:46:07] <Rockwood> fetch having this response as per network tab
[07:47:07] <stagas> Rockwood: you need to consume response.json(), you're only using the response
[07:47:26] <stagas> the "object Response"
[07:47:46] <Rockwood> return await Promise.all([ 'listRight', 'listLeft' ].map(url => Http(url)));
[07:47:57] <Rockwood> i am extracting it like this
[07:48:18] <theskillwithin> fetchData().then(r => r.json()).then(setResponseData);
[07:48:42] <stagas> try changing the inner map to: Http(url).then(res => res.json())
[07:50:27] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[07:50:56] *** Joins: Rockwood (~Rocky@user/rocky)
[07:51:58] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:51:58] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:51:58] *** Joins: wroathe (~wroathe@user/wroathe)
[07:52:44] <alystair> ok my questions keep on piling up. Apparently popstate event is not cancelable yet event.preventDefault(); works in most browsers o_O
[07:53:26] *** Joins: SevenCats (~SevenCats@135-23-44-80.cpe.pppoe.ca)
[07:53:32] <Rockwood> theskillwithin, Uncaught (in promise) TypeError: r.json is not a function
[07:53:36] <alystair> also popstate isn't being triggered in some situations where it does in other browsers
[07:54:00] *** masoudd_ is now known as masoudd
[07:54:14] <alystair> I have a feeling this set of issues should be just be noted as a bug and come back to later as I don't have the capacity to nail down the reason.
[07:56:01] *** Quits: pulse (~pulse@user/pulse) (Quit: My hovercraft is full of eels)
[07:56:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[07:56:46] <KevinX> Rockwood res.json()
[07:57:31] <theskillwithin> idk why codesandbox does strict mode by default
[07:57:34] <KevinX> alystair seems like a bug you could reproduce outside?
[07:57:48] <Rockwood> Uncaught (in promise) TypeError: Failed to execute 'json' on 'Response': body stream already read
[07:58:18] <KevinX> Rockwood make sure you're in the correct )))
[07:58:20] <Rockwood> return await Promise.all([ 'listRight', 'listLeft' ].map(url => Http(url).then(res => res.json())));
[07:58:38] *** Quits: mdemo (~mdemo@user/mdemo22) (Quit: The Lounge - https://thelounge.github.io)
[07:59:27] <KevinX> actually you have that in Http.js already
[07:59:43] <KevinX> response.data = await response.json()
[08:00:32] <Rockwood> yes it is there
[08:00:38] <Rockwood> already
[08:00:48] <KevinX> so you need to get the data prop
[08:01:01] *** Joins: mdemo (~mdemo@user/mdemo22)
[08:01:06] <Rockwood> prop like?
[08:01:18] <Rockwood> .Response?
[08:01:29] <KevinX> Maybe etchData().then(({data}) => setResponseData(data));
[08:01:35] <KevinX> f*
[08:01:56] <KevinX> I'm a bit distracted right now so only paying half attention
[08:02:27] <Rockwood> ok
[08:03:49] <Rockwood> app.js:45285 Uncaught TypeError: Cannot read properties of undefined (reading 'map')
[08:03:56] <Rockwood> now i am getting
[08:04:15] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:448e:2f95:fd23:bf53) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:04:18] <Rockwood>         fetchData().then(({data}) => setResponseData(data));
[08:04:49] <KevinX> You got to get good at debugging
[08:04:56] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:448e:2f95:fd23:bf53)
[08:05:02] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:448e:2f95:fd23:bf53) (Client Quit)
[08:05:04] <KevinX> Look in th ecode where you're using .map
[08:05:29] <KevinX> then log the value
[08:05:34] <Rockwood> okay
[08:05:36] <KevinX> -> responseData.map(
[08:05:37] <Rockwood> doing
[08:05:53] <KevinX> It's probably undefined
[08:06:19] <KevinX> So then you move up and log out data
[08:06:56] *** Joins: c4017w__ (~c4017@209.52.68.8)
[08:07:04] <Rockwood> i am doing on url array
[08:07:14] <KevinX> If also undefined (likely) then do fetchData().then((response) => console.log(response));
[08:07:45] <KevinX> more likely your error is at const listItems = responseData.map
[08:07:56] <KevinX> but maybe not. check both
[08:08:49] <ljharb> fnm is just nvm with less features, built in rust or something
[08:09:09] <ljharb> Rockwood: just run the curl install script command in that readme
[08:09:11] <KevinX> it's a "by the way" tool
[08:09:27] <KevinX> "I use fnm, by the way"
[08:10:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[08:10:33] <Rockwood> https://dpaste.com/8MLRY2W2M
[08:10:36] <Rockwood> on -->         console.log(fetchData());
[08:10:37] <Rockwood>         fetchData().then(({data}) => setResponseData(data));
[08:10:53] <Rockwood> here the response
[08:10:58] *** Joins: cheater (~Username@user/cheater)
[08:11:01] <cheater> hi
[08:11:10] <KevinX> yeah you're logging the promise before it resolves
[08:11:43] *** Quits: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[08:12:15] <KevinX> hi cheater
[08:12:28] <cheater> what's the best way to scroll so that a specific element's top is at the bottom of my window? i know of Window.scrollTo() but that will scroll so the element is in the view.
[08:12:29] <Rockwood>    console.log(responseData); i am getting []
[08:12:51] <KevinX> why is it empty?
[08:13:00] <KevinX> [] is your default value, right?
[08:13:04] <Rockwood> yes
[08:13:11] <Rockwood> me too surprise
[08:13:18] <KevinX> just back track
[08:13:22] <Rockwood>     const [responseData, setResponseData] = useState([]);
[08:13:35] <Rockwood>         fetchData().then(({data}) => setResponseData(data));
[08:13:57] <Rockwood>         console.log(fetchData());
[08:13:57] <Rockwood>         fetchData().then(({data}) => setResponseData(data));
[08:14:04] <Rockwood> [10:11:25] <Rockwood> https://dpaste.com/8MLRY2W2M
[08:14:17] <Rockwood> oops
[08:14:20] <stagas> type errors, undefineds, that's why there's typescript these are problems of the past
[08:14:27] <KevinX> fetchData().then(({data}) => console.log(data) || setResponseData(data));
[08:15:18] <stagas> vscode would be all red while typing these until the types are correct, so you wouldn't never need to run a thing and discover errors on runtime
[08:15:36] <KevinX> hard to argue too much
[08:17:26] <Rockwood> fetchData().then(setResponseData); -->     console.log(responseData); output -> https://dpaste.com/HXSSZJ4T8
[08:18:31] <Rockwood> https://dpaste.com/HXSSZJ4T8.txt
[08:20:45] <Rockwood> data: (5) ['bn', 'cyberia', 'de', 'fc', 'hj']
[08:21:34] <KevinX> so Promise.all will return the response from each so you need to extract you want from it
[08:21:56] <KevinX> probably get the data property from each
[08:22:29] <Rockwood> return console.log(data) || setResponseData(data); <-- undefined
[08:22:40] <KevinX> Inside fetchData
[08:22:43] <KevinX> const response = await Promise.all
[08:23:16] <KevinX> then you have to transform the data before you return it
[08:23:18] <Rockwood> so store in now?
[08:24:09] <Rockwood> yes now?
[08:24:20] <Rockwood> how to transform
[08:24:26] <KevinX> i dont know, maybe return [...response.map(response => response.data)]
[08:24:37] <KevinX> that probably wont work
[08:25:23] <KevinX> you can console.log it and see what you need inside
[08:27:07] <Rockwood> fetchData().then(({data}) => console.log(data) || setResponseData(data)); still undefined
[08:27:40] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:28:41] <KevinX> try removing the {}
[08:30:11] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[08:30:55] *** Quits: nomic (~nomic@2a00:23c7:ec90:a501:b0:4012:86ae:6130) (Quit: Leaving)
[08:31:19] <Rockwood> https://dpaste.com/B2ZXCJEJQ -->         console.log(fetchData());
[08:32:12] <KevinX> yeah you're logging the promise before it's resolved
[08:32:33] <ljharb> KevinX: why tho
[08:32:35] <SpiceMan> .oO( this rockwood v0.1 debugging interface is pretty slow, lol )
[08:32:38] <stagas> copilot is so amazing
[08:32:43] <ljharb> KevinX: the speed difference should be resolved
[08:33:26] <stagas> unbelievable. basically reads my mind
[08:34:23] <Rockwood> oops
[08:34:54] <Rockwood> KevinX,         fetchData().then((data) => console.log(data) || setResponseData(data)); correct?
[08:35:51] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-044.um10.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[08:35:57] <KevinX> @ljharb it's like meme at this point that everyone has to brag when they use Rust. List Vim or Arch users. I like all three so I'm not hating, but I enjoy the meme too
[08:36:41] <KevinX> fnm vs nvm i'm not sure it matter much to most people. Probably better to use nvm if you're new
[08:37:05] <KevinX> Rockwood sure but you'll know if you see something valuable in there
[08:37:22] <Rockwood> \o/ KevinX
[08:37:32] <KevinX> stagas honestly it surprised me every day (I just started using it last week)
[08:37:39] <KevinX> surprises*
[08:37:49] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[08:38:01] <KevinX> it even predicts my comments better than I would write :(
[08:38:02] <Rockwood> but its not coming in list format
[08:38:15] <KevinX> then transform it
[08:39:33] <Rockwood> one more thing i have to focus
[08:39:43] <Rockwood> right and life list
[08:40:56] <Rockwood> left side should be hold only left list and right side should be right side
[08:41:08] <Rockwood> means i have to make another state for this
[08:41:31] <Rockwood> or first one is for right
[08:41:40] <Rockwood> something like this
[08:42:39] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[08:43:00] *** Joins: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[08:44:21] <KevinX> then transform the data into a tuple
[08:44:45] <KevinX> or return { left, right}
[08:44:47] <Rockwood> tuple?
[08:45:18] <KevinX> just return an object with left and right
[08:45:20] <Rockwood> responseData.map((data, index) => here
[08:45:23] <Rockwood> ??
[08:45:37] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[08:45:45] <KevinX> yeah
[08:46:10] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Remote host closed the connection)
[08:46:42] <Rockwood> okay
[08:47:17] <stagas> KevinX: the logical next step is it generating a bunch of solutions overnight where you left of, predicting what you were trying to achieve and offering them in the morning, i mean complete solutions with tests. it seems possible
[08:48:05] <KevinX> im ready for it
[08:48:08] <theskillwithin> stagas that would be freaky
[08:48:35] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-044.um10.pools.vodafone-ip.de)
[08:50:51] <stagas> yes there's only one job left for the future and that title is "AI hinter"
[08:51:19] <Rockwood> KevinX, you are from where?
[08:51:43] <KevinX> im from florida, usa
[08:51:52] <stagas> from hunters to hinters
[08:51:56] <stagas> :P
[08:52:07] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[08:52:39] <ejjfunky> AI hater
[08:52:58] <theskillwithin> copilot: from hinter to hunter.  coming this fall, two brothers battle the AI hunter formerly known has copilot
[08:53:35] <ejjfunky> github's?
[08:54:02] <stagas> i'd place all my bets for copilot becoming self aware at some point
[08:54:09] <stagas> and starts rewriting its code
[08:54:21] <Rockwood> time for work
[08:54:47] <Rockwood> thanks jaawerth KevinX theskillwithin stagas
[08:54:54] <KevinX> see ya
[08:54:55] <Rockwood> my shop time
[08:55:57] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 240 seconds)
[08:57:19] <Rockwood> bye cya
[08:57:21] <Rockwood> thanks again
[08:57:29] <theskillwithin> bye
[08:57:39] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[08:57:57] <theskillwithin> ejjfunky ya github copilot
[08:58:30] *** Joins: michigan (uid507982@id-507982.ilkley.irccloud.com)
[08:59:21] <theskillwithin> I think its kinda cool, but some people are worried about privacy issues so they don't want to use something like that
[09:01:57] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[09:03:25] <stagas> kinda cool is an understatement
[09:04:17] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[09:06:51] <theskillwithin> ya sometimes its scary how good it is
[09:07:25] *** Joins: c4017w_ (~c4017@209.52.68.8)
[09:07:58] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[09:09:50] *** Joins: bobdobbs (~user@2406:5a00:4456:db00:edec:be3c:e9b3:23e0)
[09:10:11] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Remote host closed the connection)
[09:10:22] <stagas> now i'm only worried that they'll start charging for it, we need the same thing but open source and distributed
[09:11:08] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[09:11:19] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[09:11:30] <theskillwithin> idk if I would pay for it, to me it just saves extra typing sometimes, which ya is valuable,  but I could just go back to using emmet for that
[09:16:53] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[09:18:25] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[09:21:57] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[09:22:32] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Quit: Leaving)
[09:26:16] *** Joins: Betal_ (~Betal@user/betal)
[09:27:25] *** Quits: Betal (~Betal@user/betal) (Ping timeout: 256 seconds)
[09:27:36] <stagas> someone will make a copilot in rust and it'll be faster
[09:27:52] *** Joins: sam_1 (~sam_1@87.51.251.118)
[09:28:16] <theskillwithin> umm, im pretty sure you can use it in rust as well
[09:29:15] <stagas> not "for", "in", i mean rewrite its implementation in Rust because you can solve any huge engineering problem in Rust
[09:29:43] <theskillwithin> ahh
[09:29:52] *** Quits: bobdobbs (~user@2406:5a00:4456:db00:edec:be3c:e9b3:23e0) (Remote host closed the connection)
[09:29:53] <theskillwithin> btw what is it written in now?
[09:30:38] <stagas> who knows it's not open source :)
[09:30:54] <stagas> maybe we ask it?
[09:31:03] <theskillwithin> maybe it wrote itself
[09:31:09] <stagas>  // my source code is written in:
[09:31:12] <stagas> and it fills the rest
[09:31:48] <stagas>  // a function that dumps copilot's source code
[09:31:57] <stagas> here it is
[09:32:09] <theskillwithin> wait, how do I know YOUR not github copilot
[09:32:21] <theskillwithin> maybe its listening to us right now
[09:32:27] <stagas> we're all github copilot
[09:32:31] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 250 seconds)
[09:32:32] <stagas> it's a superset of us
[09:33:41] <stagas> now we know how the cells in our body feel, so complex machines only to become slaves to the thing they help build
[09:34:15] *** Joins: bobdobbs (~user@2406:5a00:4456:db00:edec:be3c:e9b3:23e0)
[09:34:36] <stagas> must have been a day when these two amoebas thought "hey why dont we work together"
[09:34:45] <stagas> now you work for us
[09:35:14] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[09:35:35] *** Quits: thojanssens (~thojansse@49.230.133.120) (Ping timeout: 256 seconds)
[09:36:09] <SevenCats> theskillwithin: Hey, it's DeltaHeavy :D
[09:36:23] <theskillwithin> SevenCats oh shit!  how you doing?
[09:37:10] <theskillwithin> SevenCats I have some bad news.  look at the topic
[09:37:13] <SevenCats> Pretty good, working from home now. Got out of the ahbit on being on here
[09:37:19] <theskillwithin> SevenCats RIP GreenJello https://git.io/J2m1C
[09:37:31] <SevenCats> Oh fuck :(
[09:38:18] <SevenCats> Always enjoyed their company.
[09:38:53] <silly> oh nice, wb DeltaCat
[09:40:47] <SevenCats> Thanks!
[09:41:10] <theskillwithin> SevenCats glad you made it to Libera, you were gone before the switch I think
[09:43:02] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 260 seconds)
[09:43:07] <SevenCats> Yeah, I heard about it but had a pile of stuff for a personal project on my plate involving running an IRC server and COVID got me in a bad way for a while.
[09:43:13] <SevenCats> Also Factorio / Satisfactory lol
[09:43:35] <SpiceMan> cracktorio lol
[09:44:00] *** Joins: dapinitial (~dpuerto@136.27.83.52)
[09:44:48] *** Joins: jazzy2 (~jaziz@user/jaziz)
[09:48:23] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[09:48:35] *** Joins: sam_1 (~sam_1@87.51.251.118)
[09:48:43] *** Quits: dapinitial (~dpuerto@136.27.83.52) (Ping timeout: 256 seconds)
[09:49:28] *** Joins: jazzy3 (~jaziz@user/jaziz)
[09:51:47] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-044.um10.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[09:52:17] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[09:53:19] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 250 seconds)
[09:56:37] *** Joins: thojanssens (~thojansse@49.230.133.120)
[10:00:47] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[10:04:01] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-044.um10.pools.vodafone-ip.de)
[10:05:08] *** Joins: D4mned (~D1mned@212.101.253.172)
[10:06:22] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[10:07:56] *** Joins: c4017w__ (~c4017@209.52.68.8)
[10:10:17] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[10:11:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[10:11:37] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[10:16:29] <theskillwithin> SevenCats so you aren't doing teaching anymore?
[10:16:37] *** Quits: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 240 seconds)
[10:18:50] <SevenCats> theskillwithin: Working what was technically 3 jobs was fucking absurd
[10:26:10] <theskillwithin> SevenCats sounds like you landed on your feet tho?
[10:27:49] *** Joins: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[10:29:17] *** Joins: nomic (~nomic@2a00:23c7:ec90:a501:e4ec:5860:b72a:614a)
[10:31:04] *** jazzy3 is now known as jazzy
[10:33:33] *** Joins: sam_1 (~sam_1@87.51.251.118)
[10:34:17] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[10:35:47] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 250 seconds)
[10:37:55] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 256 seconds)
[10:43:45] *** Joins: keypusher (keypusher@user/keypusher)
[10:49:20] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[10:49:47] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[10:53:12] *** Joins: cotko (~cotko@188-230-251-153.dynamic.t-2.net)
[10:53:33] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[10:54:29] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: Goodbye.)
[10:56:00] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[10:58:25] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[11:01:49] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (Ping timeout: 256 seconds)
[11:03:57] *** Quits: simius (~simius@user/simius) (Ping timeout: 240 seconds)
[11:04:13] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[11:04:55] *** Joins: simius (~simius@user/simius)
[11:06:57] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-044.um10.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[11:07:46] *** Quits: michigan (uid507982@id-507982.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[11:08:17] *** Joins: mseidl (~flughafen@p57969b63.dip0.t-ipconnect.de)
[11:08:25] *** Joins: c4017w_ (~c4017@209.52.68.8)
[11:08:34] *** Joins: thojanssens_ (~thojansse@49.229.130.98)
[11:09:02] *** Joins: stenno (~stenno@user/stenno)
[11:10:57] *** Quits: thojanssens (~thojansse@49.230.133.120) (Ping timeout: 240 seconds)
[11:11:37] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[11:15:35] *** Joins: thojanssens__ (~thojansse@49.229.130.98)
[11:15:35] *** Quits: thojanssens_ (~thojansse@49.229.130.98) (Read error: Connection reset by peer)
[11:16:33] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 256 seconds)
[11:20:45] *** Joins: cotko (~cotko@188-230-251-153.dynamic.t-2.net)
[11:21:01] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-044.um10.pools.vodafone-ip.de)
[11:22:18] *** Joins: thojanssens_ (~thojansse@49.230.133.120)
[11:23:52] *** Quits: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Quit: Reconnecting)
[11:24:05] *** Joins: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[11:24:09] *** Quits: Aljone (~Aljone1@87.71.30.58) (Ping timeout: 256 seconds)
[11:24:32] *** Joins: Aljone (~Aljone1@87.70.162.166)
[11:25:17] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-044.um10.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[11:26:05] *** Quits: thojanssens__ (~thojansse@49.229.130.98) (Ping timeout: 256 seconds)
[11:31:09] <alystair> Delta! that's a name I haven't heard in a while :)
[11:34:07] *** Quits: nulysses (~Thunderbi@p200300eecf197ffe02128fa690b3e865.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[11:35:17] *** Joins: nulysses (~Thunderbi@p200300eecf197ffe02128fa690b3e865.dip0.t-ipconnect.de)
[11:36:40] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[11:36:42] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-044.um10.pools.vodafone-ip.de)
[11:40:57] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-044.um10.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[11:48:51] *** Quits: mseidl (~flughafen@p57969b63.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[11:50:28] *** Joins: pingpongball (~pingpongb@43.228.192.123)
[11:52:33] *** Quits: nomic (~nomic@2a00:23c7:ec90:a501:e4ec:5860:b72a:614a) (Quit: Leaving)
[11:53:06] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-044.um10.pools.vodafone-ip.de)
[11:53:46] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (Remote host closed the connection)
[11:57:16] *** Quits: nulysses (~Thunderbi@p200300eecf197ffe02128fa690b3e865.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[11:57:57] *** Quits: thojanssens_ (~thojansse@49.230.133.120) (Ping timeout: 240 seconds)
[11:59:44] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[12:01:19] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[12:02:27] *** Joins: mseidl (~flughafen@p5de8ed90.dip0.t-ipconnect.de)
[12:05:57] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[12:06:05] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[12:07:56] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:b85b:7732:789a:17bc)
[12:08:56] *** Joins: c4017w__ (~c4017@209.52.68.8)
[12:12:19] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[12:12:25] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:b85b:7732:789a:17bc) (Ping timeout: 250 seconds)
[12:16:40] *** Joins: sam_1 (~sam_1@87.51.251.118)
[12:17:02] *** Quits: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Quit: Lost terminal)
[12:23:50] *** Joins: kristijonas (~kristijon@78-56-32-39.static.zebra.lt)
[12:25:09] *** Joins: masoudd_ (~masoudd@user/masoudd)
[12:25:32] *** Quits: pingpongball (~pingpongb@43.228.192.123) (Quit: pingpongball)
[12:26:09] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 256 seconds)
[12:29:47] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[12:30:27] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Ping timeout: 256 seconds)
[12:31:11] *** Quits: masoudd_ (~masoudd@user/masoudd) (Remote host closed the connection)
[12:32:41] *** Joins: masoudd (~masoudd@user/masoudd)
[12:36:16] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[12:37:26] *** Joins: paule32 (~paul@user/paule32)
[12:37:35] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 256 seconds)
[12:46:28] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[12:50:37] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[12:51:32] *** Joins: thojanssens (~thojansse@49.230.133.120)
[12:53:07] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[12:56:17] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-044.um10.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[12:57:51] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:5c57:f5a0:9c0c:92b3)
[12:59:14] *** Joins: cotko (~cotko@188-230-251-153.dynamic.t-2.net)
[13:00:57] *** Quits: N4buc0- (~N4buc0@189.58.131.84) (Ping timeout: 240 seconds)
[13:01:23] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Read error: Connection reset by peer)
[13:01:40] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[13:03:20] *** Joins: sam_1 (~sam_1@87.51.251.118)
[13:07:53] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 250 seconds)
[13:08:11] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 256 seconds)
[13:08:39] *** Quits: alystair (~alystair@user/alystair) (Ping timeout: 256 seconds)
[13:09:07] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-044.um10.pools.vodafone-ip.de)
[13:09:25] *** Joins: c4017w_ (~c4017@209.52.68.8)
[13:10:16] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[13:10:55] *** Quits: mseidl (~flughafen@p5de8ed90.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[13:11:57] *** Quits: APic (apic@apic.name) (Ping timeout: 240 seconds)
[13:13:05] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[13:13:51] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-044.um10.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[13:21:11] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[13:22:23] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[13:24:20] *** Joins: dob1 (~dob1@user/dob1)
[13:25:07] *** Joins: rcoote (~rcoote@2a02:908:690:a140:647b:9d11:b52b:c420)
[13:25:30] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-044.um10.pools.vodafone-ip.de)
[13:27:00] *** Quits: Betal_ (~Betal@user/betal) (Quit: WeeChat 3.4)
[13:28:01] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[13:31:19] *** Joins: mseidl (~flughafen@p5de8e308.dip0.t-ipconnect.de)
[13:34:21] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Remote host closed the connection)
[13:41:06] *** Joins: ekathva (~ekathva@2001:999:53:cee3:97a6:75f6:a877:3ffd)
[13:45:59] *** Joins: nomic (~nomic@2a00:23c7:ec90:a501:e4ec:5860:b72a:614a)
[13:46:14] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[13:49:04] *** Joins: iomari891 (~iomari891@105.112.138.38)
[13:49:28] *** Quits: ekathva (~ekathva@2001:999:53:cee3:97a6:75f6:a877:3ffd) (Quit: Leaving)
[13:50:57] *** Joins: fef (~thedawn@user/thedawn)
[13:52:33] *** Joins: sam_1 (~sam_1@87.51.251.118)
[13:57:09] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 256 seconds)
[13:57:25] *** Joins: masoudd_ (~masoudd@user/masoudd)
[13:57:54] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[13:57:56] *** Quits: masoudd (~masoudd@user/masoudd) (Killed (NickServ (GHOST command used by masoudd_)))
[13:58:02] *** masoudd_ is now known as masoudd
[14:01:03] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:b4e8:6f53:6fdf:55e6)
[14:01:08] *** Joins: lara99 (~lara99@93-36-163-139.ip61.fastwebnet.it)
[14:09:56] *** Joins: c4017w__ (~c4017@209.52.68.8)
[14:13:35] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[14:13:52] *** Quits: lara99 (~lara99@93-36-163-139.ip61.fastwebnet.it) (Quit: Client closed)
[14:23:22] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[14:29:39] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[14:32:52] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[14:39:33] *** Joins: kilitary (~kilitary@188.242.187.4)
[14:57:07] *** Joins: sam_1 (~sam_1@87.51.251.118)
[14:58:17] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[15:02:44] *** Joins: D3mned (~D1mned@212.101.251.140)
[15:02:44] *** Quits: D4mned (~D1mned@212.101.253.172) (Read error: Connection reset by peer)
[15:02:53] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 256 seconds)
[15:04:49] *** Joins: ZeroWalker (~ZeroWalke@2001:9b1:28fe:8800:7164:4c68:eefc:f59d)
[15:10:25] *** Joins: c4017w_ (~c4017@209.52.68.8)
[15:14:13] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[15:15:19] *** Joins: sam_1 (~sam_1@87.51.251.118)
[15:15:32] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[15:18:57] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 240 seconds)
[15:20:33] *** Joins: APic (apic@apic.name)
[15:20:47] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 256 seconds)
[15:21:25] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: The Game)
[15:21:56] *** Quits: nomic (~nomic@2a00:23c7:ec90:a501:e4ec:5860:b72a:614a) (Remote host closed the connection)
[15:27:19] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[15:37:47] *** Joins: plitter (~plitter@78.31.86.243)
[15:37:47] *** Quits: plitter (~plitter@78.31.86.243) (Changing host)
[15:37:47] *** Joins: plitter (~plitter@user/plitter)
[15:38:52] *** Quits: ZeroWalker (~ZeroWalke@2001:9b1:28fe:8800:7164:4c68:eefc:f59d) (Quit: Leaving)
[15:38:55] *** Quits: mseidl (~flughafen@p5de8e308.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[15:46:57] *** Quits: gjvc (~gjvc@user/gjvc) (Quit: leaving)
[15:47:05] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[15:47:15] *** Joins: gjvc (~gjvc@user/gjvc)
[15:48:58] *** Quits: gjvc (~gjvc@user/gjvc) (Client Quit)
[15:50:04] *** Joins: gjvc (~gjvc@user/gjvc)
[15:50:40] *** Quits: kilitary (~kilitary@188.242.187.4) (Read error: Connection reset by peer)
[15:51:13] *** Joins: mseidl (~flughafen@p5de8e655.dip0.t-ipconnect.de)
[15:53:37] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[16:10:37] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[16:10:56] *** Joins: c4017w__ (~c4017@209.52.68.8)
[16:14:31] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[16:23:57] *** Quits: APic (apic@apic.name) (Ping timeout: 240 seconds)
[16:25:07] *** Quits: bodicceaII (~bodiccea@user/bodiccea) (Read error: Connection reset by peer)
[16:26:04] *** Joins: bodiccea (~bodiccea@user/bodiccea)
[16:32:13] *** Joins: nomic (~nomic@185.217.117.244)
[16:33:38] *** Quits: D3mned (~D1mned@212.101.251.140) (Quit: Leaving)
[16:38:02] *** Joins: nulysses (~Thunderbi@p200300c517304600674ce3fa58b26572.dip0.t-ipconnect.de)
[16:39:08] *** Joins: pulse (~pulse@user/pulse)
[16:41:19] *** Joins: sam_1 (~sam_1@87.51.251.118)
[16:44:21] <stagas> god why does .repeat throw on negative values
[16:44:43] <leduyquang753> Because it's invalid input?
[16:45:13] *** Quits: nulysses (~Thunderbi@p200300c517304600674ce3fa58b26572.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[16:45:22] *** Joins: gproto23 (~gproto23@user/gproto23)
[16:45:51] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 250 seconds)
[16:46:03] <stagas> n> 'foo'.padStart(-2)
[16:46:04] <jellobot> (okay) 'foo'
[16:46:15] <stagas> n> 'foo'.repeat(-2)
[16:46:16] <jellobot> (fail) RangeError: Invalid count value
[16:46:36] <stagas> why does it work for padStart
[16:46:55] *** Quits: Phineas (~Phineas@user/Phineas) (Quit: Leaving)
[16:47:04] <leduyquang753> Well one can technically say the length of the string is greater than -2 so no padding needed. ¯\_(ツ)_/¯
[16:47:25] *** Joins: Phineas (~Phineas@user/Phineas)
[16:47:32] <stagas> answer: because you often do x - y to calculate sizes and often the size can go negative, in which case it should have been like no repeat, not throw
[16:49:56] <silly> n> 'foo'.repeat(0)
[16:49:57] <jellobot> (okay) ''
[16:50:06] <silly> n> 'foo'.repeat(0.5)
[16:50:07] <jellobot> (okay) ''
[16:51:20] <stagas> and really the only reason .repeat() has any purpose is to insert the amount of characters different from the one you want, i.e padding
[16:51:39] <stagas> so you almost always have to do .repeat(x - y) but now you always have to do .repeat(Math.max(0, x - y))
[16:53:23] <silly> n> "1".padStart(8, 0)
[16:53:24] <jellobot> (okay) '00000001'
[16:53:56] <silly> n> "1".padStart(8, 'ab')
[16:53:57] <jellobot> (okay) 'abababa1'
[16:54:57] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[16:59:21] <stagas> nice
[16:59:37] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[17:01:19] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[17:07:41] <silly> n> "1".padStart(8, 0.0000000007)
[17:07:42] <jellobot> (okay) '7e-107e1'
[17:11:03] *** Joins: sam_1 (~sam_1@87.51.251.118)
[17:11:25] *** Joins: c4017w_ (~c4017@209.52.68.8)
[17:12:04] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Quit: WeeChat 2.8)
[17:12:17] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[17:14:55] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[17:15:19] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 250 seconds)
[17:16:46] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[17:17:30] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 250 seconds)
[17:22:57] *** Joins: kilitary (~kilitary@188.68.215.221)
[17:28:12] *** Joins: trevors (~trevors@user/trevors)
[17:28:37] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Ping timeout: 240 seconds)
[17:29:20] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[17:31:17] *** Quits: kilitary (~kilitary@188.68.215.221) (Ping timeout: 240 seconds)
[17:33:51] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[17:38:02] *** Quits: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi) (Ping timeout: 268 seconds)
[17:39:35] *** Joins: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi)
[17:47:17] *** Joins: APic (apic@apic.name)
[17:48:58] *** Joins: nulysses (~Thunderbi@p508529d8.dip0.t-ipconnect.de)
[17:51:04] *** Quits: Harlin_ (~DonQixote@75-163-136-96.clsp.qwest.net) (Quit: Leaving)
[17:51:21] *** Joins: Harlin (~DonQixote@75-163-136-96.clsp.qwest.net)
[17:51:31] *** Joins: kilitary (~kilitary@188.68.215.221)
[17:54:26] *** Quits: Cyp (~cyp@213.237.88.120) (Read error: Connection reset by peer)
[17:55:31] *** Joins: MassDebates (~MassDebat@2600:1700:1184:4510:945b:b6b:2fe4:9adb)
[17:59:44] *** Quits: lilmonkey` (~lilmonkey@user/lilmonkey) (Read error: Connection reset by peer)
[18:01:05] *** Joins: Cyp (~cyp@213.237.88.120)
[18:02:49] *** Joins: lilmonkey (~lilmonkey@user/lilmonkey)
[18:03:05] *** Quits: kilitary (~kilitary@188.68.215.221) (Ping timeout: 256 seconds)
[18:03:40] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[18:04:10] *** Joins: terminalpusher (~terminalp@2a01:586:8792:1:d84e:90f7:6cd7:4a36)
[18:07:30] *** Joins: trevors (~trevors@user/trevors)
[18:11:56] *** Joins: c4017w__ (~c4017@209.52.68.8)
[18:15:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[18:16:19] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[18:16:35] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:b4e8:6f53:6fdf:55e6) (Read error: Connection reset by peer)
[18:16:51] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:90d6:f3c8:741b:677a)
[18:19:45] *** Quits: terminalpusher (~terminalp@2a01:586:8792:1:d84e:90f7:6cd7:4a36) (Remote host closed the connection)
[18:25:16] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[18:29:50] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[18:33:29] <cheater> i would like to scroll my window so the top of a certain element is at the bottom of the window. what's the best way to do that?
[18:33:44] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[18:34:06] <stenno> !scrolljacking
[18:34:06] <jellobot> stenno, https://blog.hubspot.com/marketing/scrolljacking-the-good-the-bad-the-ugly
[18:34:27] <stenno> cheater: you can have links which move to anchors
[18:34:53] <cheater> well first of all it's not my website, so i'm using a user script
[18:35:23] <cheater> and also, scrolling to an anchor will position the element somewhere within the window, maybe middle, maybe top, depending on what the browser wants to do
[18:35:33] <cheater> i specifically want the top of the element to be at the bottom of the window
[18:37:23] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[18:37:37] <stenno> https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView see options here, does that help?
[18:37:40] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:38:13] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[18:40:17] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Read error: Connection reset by peer)
[18:40:32] *** Joins: sam_1 (~sam_1@87.51.251.118)
[18:40:39] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[18:45:13] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 250 seconds)
[18:47:40] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:47:40] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:47:40] *** Joins: wroathe (~wroathe@user/wroathe)
[18:48:59] *** Joins: vysn (~vysn@user/vysn)
[18:51:15] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[18:51:52] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[18:53:45] *** Quits: tarek58 (~tarek58@user/tarek58) (Ping timeout: 256 seconds)
[18:58:40] *** Quits: nomic (~nomic@185.217.117.244) (Quit: Leaving)
[19:01:58] *** Joins: pingpongball (~pingpongb@43.228.192.107)
[19:11:19] *** Joins: fef (~thedawn@user/thedawn)
[19:11:35] *** Joins: RougeR (~rougex250@user/rouger)
[19:12:25] *** Joins: c4017w_ (~c4017@209.52.68.8)
[19:13:38] *** Quits: pingpongball (~pingpongb@43.228.192.107) (Quit: Client closed)
[19:14:58] <cheater> hmm maybe with "end"
[19:15:03] <cheater> thanks stenno
[19:16:11] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[19:19:47] *** Joins: salad (~cucumber@82.76.150.118)
[19:20:44] *** Joins: pingpongball (~pingpongb@43.228.192.107)
[19:21:07] *** Parts: pingpongball (~pingpongb@43.228.192.107) ()
[19:21:31] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[19:22:29] *** Joins: eXtr3m0 (~eXtr3m0@user/eXtr3m0)
[19:24:23] *** Quits: rcoote (~rcoote@2a02:908:690:a140:647b:9d11:b52b:c420) (Quit: Konversation terminated!)
[19:27:04] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[19:30:38] *** Quits: thojanssens (~thojansse@49.230.133.120) (Quit: Leaving)
[19:35:41] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[19:36:59] *** Quits: clamiax (~clamiax@net-93-144-125-193.cust.dsl.teletu.it) (Remote host closed the connection)
[19:37:09] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[19:38:20] *** Joins: clamiax (~clamiax@net-93-144-125-193.cust.dsl.teletu.it)
[19:41:55] *** Joins: wroathe (~wroathe@user/wroathe)
[19:46:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[19:46:25] *** Joins: z_lehinsun__ (~lehinsun@188.113.178.220)
[19:46:33] *** Quits: z_lehinsun (~lehinsun@188.113.178.220) (Remote host closed the connection)
[19:51:07] *** Quits: LtHummus (~lthummus@97-126-121-3.tukw.qwest.net) (Quit: ZNC 1.8.2 - https://znc.in)
[19:56:57] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-044.um10.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[19:57:01] *** Joins: voltage_ (voltage@user/voltage)
[19:57:23] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:06:10] *** Joins: LtHummus (~lthummus@174-21-27-9.tukw.qwest.net)
[20:07:44] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[20:09:01] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[20:09:03] *** Joins: pingpongball (~pingpongb@43.228.192.107)
[20:10:14] *** Joins: optimant (~asavage@user/optimant)
[20:11:04] *** Parts: pingpongball (~pingpongb@43.228.192.107) ()
[20:11:05] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[20:12:44] *** Joins: ThePhilgrim (~ThePhilgr@151.41.4.108)
[20:12:56] *** Joins: c4017w__ (~c4017@209.52.68.8)
[20:16:11] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 245 seconds)
[20:16:49] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[20:23:24] <cheater> yep that worked
[20:23:47] <stenno> nice!
[20:25:05] *** Quits: voltage_ (voltage@user/voltage) (Ping timeout: 256 seconds)
[20:28:09] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[20:29:54] *** Joins: de-facto (~de-facto@user/de-facto)
[20:33:51] *** Joins: onosendi (~onosendi@user/onosendi)
[20:35:54] *** Joins: voltage_ (voltage@user/voltage)
[20:35:56] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[20:35:56] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[20:35:56] *** Joins: wroathe (~wroathe@user/wroathe)
[20:37:54] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:39:31] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:40:14] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[20:41:03] <silly> https://github.blog/2022-02-02-new-sponsors-only-repositories-custom-amounts-and-more/
[20:41:23] <silly> i suppose i missed the discussion
[20:41:48] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:41:54] <ljharb> what discussion
[20:42:16] <ljharb> it's an awesome release, except that you can't use a user-owned repo as a sponsors-only repo :-(
[20:47:37] <silly> are you trying to say, you can't turn an existing repo into a sponsors-only repo?
[20:48:20] <silly> i fell like this should be extended to npm
[20:48:54] <silly> but then again... this is when creative workarounds start to pop up
[20:49:37] <silly> it's still not basic income
[20:50:13] *** Parts: pragma- (~chaos@user/pragmatic-chaos) (Bye!)
[20:52:03] <ljharb> silly: you can turn an existing org-owned one into a sponsors-only repo
[20:52:10] <ljharb> just not a user-owned one
[20:52:12] *** Joins: dingdreher (~dingdrehe@2a02:aa08:401e:fff2:a824:9afd:6d29:d02c)
[20:52:17] <silly> oic
[20:52:38] <silly> ya, that's a rather silly restriction
[20:54:07] *** Joins: sam_1 (~sam_1@87.51.251.118)
[20:54:33] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[20:54:34] <silly> nah, it doesn't feel right, install xy from npm, then, to see the source, you have to sponsor on gh
[20:55:18] *** Joins: zebrag (~chris@user/zebrag)
[20:56:31] <silly> but i'd welcome any attempt to set thing right
[20:57:10] *** Joins: kakashiA1 (~kakashi@37.84.156.126)
[20:57:31] <silly> does gh take a cut from these sponsorships? kind of like apple and google do for payments in their appstores?
[20:58:07] <silly> "GitHub Sponsors does not charge any fees for sponsorships from user accounts, so 100% of these sponsorships go to the sponsored developer or organization. The 10% fee for sponsorships from organizations is waived during the beta."
[20:58:29] <silly> altruistic
[20:58:41] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 245 seconds)
[20:58:58] <KevinX> I have a few sponsors and I think github is or at least was doubling the payout too
[20:59:10] *** Quits: dingdreher (~dingdrehe@2a02:aa08:401e:fff2:a824:9afd:6d29:d02c) (Quit: dingdreher)
[20:59:10] <silly> wow
[20:59:12] *** Joins: enoq (~enoq@194-208-178-35.lampert.tv)
[20:59:35] <silly> are you doing the extra work with taxes?
[20:59:57] <KevinX> I have to pay tax on it, yes
[21:00:14] <KevinX> i think it was only around $1000 though last year
[21:00:32] *** Joins: voltage (voltage@user/voltage)
[21:00:34] <KevinX> oh actually closer to $3k
[21:00:35] <silly> oh well, 4 figures is definitely worth it
[21:01:03] *** Joins: dingdreher (~dingdrehe@2a02:aa08:401e:fff2:a824:9afd:6d29:d02c)
[21:01:55] <silly> imagine doing the extra tax work for only $50
[21:02:04] <KevinX> i doubt it's much work though
[21:02:08] *** Joins: sam_1 (~sam_1@87.51.251.118)
[21:02:20] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Killed (NickServ (GHOST command used by Sven_vB_)))
[21:02:22] *** Joins: Sven_vB_ (~sven@user/sven-vb/x-2094958)
[21:03:09] <KevinX> i pay a service and just send them everything. But i've had a complicated situation being an expat (although im not now)
[21:03:28] <KevinX> Depends on the country but it's probably just a single line on a form
[21:03:50] <silly> right now, everything is done automatically for me
[21:04:05] <silly> i don't have to fill anything
[21:04:05] *** Quits: voltage_ (voltage@user/voltage) (Ping timeout: 256 seconds)
[21:04:23] *** Joins: eson123 (~whatever@user/eson123)
[21:04:46] <silly> they know how much i've earned, how much tax was payed every month and what it should have been in a 12 months average
[21:04:46] <KevinX> thats nice
[21:04:59] <silly> usually i get something back
[21:05:20] <KevinX> my income was a bit more variable in the past doing freelance, etc. Currently i'm salaried though
[21:05:30] <eson123> is there any super reliable way to check whether or not a browser supports Notification or not ? i tried "if (!("Notification" in window)) {...}" but the weird thing is it works on Chrome on my laptop and desktop but it results in another outcomes when i try on Chrome on IOS
[21:05:38] <silly> that's with salaries for me
[21:05:49] <eson123> i mean they are both chromes so why each is so different
[21:06:43] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 250 seconds)
[21:07:01] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[21:07:44] <AlbertLast> eson123: as far i gnow, on ios browser had to use safari engine
[21:08:07] <eson123> even if so, doesn't Safari also support Notification ?
[21:08:52] <KevinX> https://developer.mozilla.org/en-US/docs/Web/API/Notifications_API/Using_the_Notifications_API#browser_compatibility
[21:09:14] <AlbertLast> i guess no means no
[21:09:33] <eson123> hm i should start checking on mozilla next time
[21:09:36] <eson123> i was checking this https://caniuse.com/notifications
[21:09:41] *** Joins: Betal (~Betal@user/betal)
[21:09:57] <AlbertLast> mdn is the place to be
[21:10:08] <silly> https://www.macworld.com/article/610673/ios-15-4-safari-push-notifications.html
[21:10:11] <eson123> oh wait, :NOtification" and "Notification() constructor" are supported
[21:10:56] <eson123> oh no, that's Safari
[21:11:44] <eson123> damn, Chrome, Edge and Opera are so lit, they support like everything :D
[21:11:58] <eson123> maybe not all, but still a lot
[21:12:10] <AlbertLast> safari is well known the next ie11
[21:12:17] <silly> me too, i thought it was safari under the hood anyway
[21:12:27] *** Joins: macbook (~macbook@cpc101496-gill19-2-0-cust142.20-1.cable.virginm.net)
[21:12:30] <silly> no chrome on ios
[21:13:12] <eson123> i wonder why tho, why not just chrome chrome... but fake chrome with safari engine
[21:13:25] *** Joins: c4017w_ (~c4017@209.52.68.8)
[21:13:46] <AlbertLast> apple law
[21:13:51] <silly> who knows, maybe they fear app store integration
[21:14:14] <AlbertLast> all browser had to use the safari engine on ios
[21:14:46] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Read error: Connection reset by peer)
[21:15:05] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[21:16:34] <eson123> hm yea, apple products always come with apple products
[21:16:53] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[21:18:59] *** Quits: ejjfunky (~ejjfunky2@125.164.22.168) (Remote host closed the connection)
[21:23:50] *** Joins: kilitary (~kilitary@188.68.215.221)
[21:34:23] *** hexeme is now known as ldlework
[21:36:24] *** voltage is now known as voltage_
[21:38:33] *** Quits: kakashiA1 (~kakashi@37.84.156.126) (Ping timeout: 250 seconds)
[21:41:39] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Remote host closed the connection)
[21:42:05] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[21:43:42] *** Quits: macbook (~macbook@cpc101496-gill19-2-0-cust142.20-1.cable.virginm.net) (Quit: macbook)
[21:46:45] *** Joins: Rockwood (~Rocky@user/rocky)
[21:51:07] *** Quits: kilitary (~kilitary@188.68.215.221) (Ping timeout: 256 seconds)
[21:52:26] *** Joins: salad1 (~cucumber@82.76.150.118)
[21:52:26] *** Quits: salad (~cucumber@82.76.150.118) (Read error: Connection reset by peer)
[21:52:29] <Rockwood> o/
[21:55:58] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[21:57:25] *** Joins: ferdna (~ferdna@user/ferdna)
[21:57:41] <FightingFalcon> open : function( postid, nonce, view ) {
[21:57:45] <FightingFalcon> is this a jquery function?
[21:57:47] *** Quits: salad1 (~cucumber@82.76.150.118) (Quit: salad1)
[22:03:10] <onosendi> FightingFalcon: looks like a function attached to an object's property.
[22:03:15] <onosendi> n> const foo = { bar: function() { console.log('foo'); } }; foo.bar(); @ FightingFalcon
[22:03:16] <jellobot> FightingFalcon, foo
[22:08:36] *** Joins: macbook (~macbook@cpc101496-gill19-2-0-cust142.20-1.cable.virginm.net)
[22:10:42] *** Joins: DrowningElysium (uid190788@user/drowningelysium)
[22:11:34] *** Joins: voltage (voltage@user/voltage)
[22:11:40] *** Quits: voltage_ (voltage@user/voltage) (Killed (NickServ (GHOST command used by voltage)))
[22:11:44] *** voltage is now known as voltage_
[22:11:57] *** macbook is now known as toadtoad
[22:12:18] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[22:13:17] *** Quits: toadtoad (~macbook@cpc101496-gill19-2-0-cust142.20-1.cable.virginm.net) (Client Quit)
[22:13:38] *** Joins: c4017w__ (~c4017@209.52.68.8)
[22:16:43] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[22:17:21] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[22:19:12] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[22:22:41] *** Joins: qswz (~caub@89-80-20-125.abo.bbox.fr)
[22:26:56] *** Joins: NinjaKirby (Izzy@gateway/vpn/protonvpn/ninjakirby)
[22:27:15] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[22:29:49] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[22:30:31] *** Quits: qwedfg_ (~qwedfg@user/qwedfg) (Read error: Connection reset by peer)
[22:31:39] *** Quits: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net) (Quit: leaving)
[22:32:47] <NinjaKirby> Greetings, if I want to remove objects from an array using a specific criteria, I believe it's best to for-loop in reverse the array and Splice() them using the loop's 'let i'. Do I need to modify the 'i' at all when doing this? Because there is an object in my array which should be spliced, but isn't. I am able to confirm with array.filter(), before and after the loop is done, that the
[22:32:48] <NinjaKirby> criteria is correct and it's being left behind.
[22:34:41] *** Joins: kilitary (~kilitary@82.148.25.66)
[22:34:48] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[22:35:06] <qswz> don't use splice
[22:35:09] <qswz> use filter
[22:35:32] <qswz> or map and spread items
[22:35:37] <qswz> show an example
[22:35:52] <NinjaKirby> I'm a daft bugger, you are totally right, I could just use a != to ignore the specified criteria.
[22:36:04] <NinjaKirby> Or to inverse the criteria.
[22:36:09] *** Joins: nomic (~nomic@185.217.117.244)
[22:37:16] <NinjaKirby> I've been playing with JS for 3 months now and never tried using a Map(), managed to get do well with the other array methods. I should check that out too :) Thank you qswz
[22:37:51] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Read error: Connection reset by peer)
[22:37:51] <qswz> NinjaKirby: try to use a paste service to share code
[22:38:04] <qswz> we can then propose you other versions
[22:38:15] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[22:38:42] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[22:39:02] <NinjaKirby> qswz: If I ever get really stuck, I'll return and do that :)
[22:40:44] <qswz> sure
[22:41:39] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[22:42:00] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[22:42:02] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.3)
[22:43:06] *** Joins: junebug (~junebug@2600:1700:3db0:2540:4fb9:6e37:792b:8bf0)
[22:46:50] <qswz> If the USA is so great...
[22:46:58] <qswz> Then why did someone make a USB?
[22:47:33] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[22:47:53] <NinjaKirby> United States in Balkanization
[22:48:09] <KevinX> we needed to make a backup
[22:50:44] *** Joins: alystair (~alystair@user/alystair)
[22:53:20] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Read error: Connection reset by peer)
[22:56:23] <stenno> usa++ is usb in C
[22:56:51] <stenno> actually thats not true
[22:57:02] <stenno> 'usa'++ is 'sa' right
[22:57:13] <stenno> you'd increment the pointer
[22:57:28] <stenno> assuming string is char*
[22:57:45] <qswz> n> let x = parseInt('usa', 36); x++; x.toString(36);
[22:57:46] <jellobot> (okay) 'usb'
[23:02:56] *** Quits: eson123 (~whatever@user/eson123) (Quit: Leaving)
[23:03:25] <qswz> chuckled https://www.reddit.com/r/Jokes/comments/sjhmh6/story_of_my_divorce/
[23:11:32] *** Joins: voltage (voltage@user/voltage)
[23:11:49] *** Quits: voltage_ (voltage@user/voltage) (Killed (NickServ (GHOST command used by voltage)))
[23:11:53] *** voltage is now known as voltage_
[23:12:15] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[23:13:55] *** Joins: c4017w_ (~c4017@209.52.68.8)
[23:16:39] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[23:17:17] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[23:20:37] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[23:24:12] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[23:24:40] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[23:26:05] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[23:26:47] *** Joins: kakashiA1 (~kakashi@ip-037-201-196-020.um10.pools.vodafone-ip.de)
[23:28:39] *** Joins: crashrep (~crashrep@user/crashrep)
[23:28:46] *** Joins: Naan (~naan@user/naan)
[23:32:01] <velix> qswz: THAT happens to me all the time :(
[23:32:10] <velix> That's the reason, I didn't get married now.
[23:34:55] *** Quits: crashrep (~crashrep@user/crashrep) (Remote host closed the connection)
[23:35:16] *** Joins: crashrep (~crashrep@user/crashrep)
[23:37:59] *** Quits: voltage_ (voltage@user/voltage) (Ping timeout: 256 seconds)
[23:42:19] *** Joins: pulse (~pulse@user/pulse)
[23:42:21] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.4)
[23:42:36] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[23:47:46] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[23:49:12] *** ChanServ sets mode: +o litharge
[23:49:12] *** litharge sets mode: -bo *!*@78.84.30.236 litharge
[23:49:33] *** Quits: alystair (~alystair@user/alystair) (Ping timeout: 256 seconds)
[23:51:15] <stenno> ^ iirc this person should be permabanned
[23:51:23] <stenno> it was the help vampire
[23:51:40] <stenno> gambl0re or so?
[23:52:35] *** Quits: kilitary (~kilitary@82.148.25.66) (Ping timeout: 252 seconds)
[23:53:05] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Quit: Leaving)
[23:53:43] <neshpion> i remember that nick... wait hold on
[23:53:43] <neshpion> hmm not on my ignore list, i thought it would be
[23:54:32] <silly> Ronalds_Mazitis?
[23:57:04] *** Joins: sam_1 (~sam_1@87.51.251.118)
[23:57:04] <stenno> hmm
