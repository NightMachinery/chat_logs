[00:00:32] *** Quits: shlomif (~shlomif@87.68.242.72.adsl.012.net.il) (Ping timeout: 272 seconds)
[00:05:40] *** Joins: Trigon (~reuben@73.127.1.41)
[00:06:54] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[00:11:26] *** Quits: mattil (~mattilinn@87-92-172-201.rev.dnainternet.fi) (Quit: Leaving)
[00:25:54] <buu> perlbot: hello
[00:25:55] <perlbot> buu: Hi :) Have a look around!
[00:30:39] * mst bursts into bloom
[00:31:26] *** Quits: tcohen (~tcohen@192.141.149.69) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:32:07] <v`> https://i.imgur.com/U75uF2i.mp4 ouuuch
[00:32:40] <gordonfish> I knew it, mst is a garden gnome
[00:33:28] <v`> "When you’re waiting behind a stopped truck thinking you’re taking an exit"
[00:34:17] <gordonfish> Hah
[00:34:37] <gordonfish> (Also, filming in portait, why..)
[00:37:59] <gordonfish> At first I thought was a weird dashcam but it's moving too much, so a phone most like. <nitpick>I honestly feel that phones should just default to landscape no matter how it's being held and rotating should be done with a button for when it's really needed. That would seriously cut down on needless portrait videos.</nitpick>
[00:40:39] <gordonfish> I have often found it rather curious how the muscle memory of filing in landscape from the pre-iPhone/smartphone era of point-and-click digital cameras that could record video didn't carry over to the next era very well.
[00:42:19] <gordonfish> Nearly all video was filmed/held in landscape on those cameras, so I would have thought that for most people that would be the most natural, but people rather just film in the same way hold phones for browsing, reading, etc.<rant/>
[00:43:36] *** Quits: habamax (~habamax@user/habamax) (Ping timeout: 272 seconds)
[00:43:56] <v`> a landscape button could work
[00:44:21] <v`> i tend not to hold the phone in landscape because it's easier to drop
[00:46:46] <gordonfish> How do you hold it in landscape? Either two handed or right hand with thumb on bottom allows a good grip (though that might be helped by my case, some phones are more slippery caseless.)
[00:46:49] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[00:47:47] <gordonfish> (Just took the case off and can still get good grib just fine, just a little better with the case.)
[00:53:06] *** Joins: furrymcgee (~devuan@31.179.186.66)
[00:53:07] *** Quits: furrymcgee (~devuan@31.179.186.66) (Client Quit)
[00:54:52] <tirnanog> hello. can the following be adequately explained?
[00:54:56] <perlbot> tirnanog pasted a new file at https://l.perl.bot/p/qmtix5 - run3 breaks binmode
[00:57:06] *** Quits: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net) (Quit: Reconnecting)
[00:57:18] *** Joins: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net)
[00:58:59] *** Quits: WinterStar (~IceLight@user/icelight) (Quit: WeeChat 3.2)
[00:59:42] <gordonfish> tirnanog: Can you elaborate? Your 'before' and 'after' sections look the same.
[01:00:13] <tirnanog> gordonfish: why is there a wide character warning for the second invocation of say? it has to be run in a tty to be see.
[01:00:22] <tirnanog> they look the same ... (exactly).
[01:00:59] <gordonfish> I don't see it in the perl bot output
[01:01:16] <tirnanog> "in a tty"
[01:01:20] <tirnanog> specifically: Wide character in say at binmode-fail line 15
[01:01:35] <tirnanog> it's a side-effect of having used run3 and I don't understand it.
[01:04:13] <djerius> eval: 1 for @x{'a'}; say 'x:',  keys %x; @y{'a'}; say 'y:', keys %y
[01:04:16] <perlbot> djerius: x:a y: 
[01:05:00] <djerius> Any way to get for not to create entries in a hash?  I assume it's because it's aliasing to them and has to create them.  I'd rather not toss in a grep { exists ... }
[01:06:22] <tirnanog> gordonfish: here's a one-liner reproducer: perl -MIPC::Run3 -E 'binmode *STDOUT, ":encoding(UTF-8)"; run3(["printf", "\\n"], \undef, \$out); say $out =~ s/\n/\N{U+2424}/gr'
[01:06:47] <djerius> e.g., 1 for @x[ grep { exists $x{$_}} @keys ]
[01:06:54] *** Quits: gizmomathboy (~gizmomath@206.127.53.107) (Ping timeout: 258 seconds)
[01:07:49] <djerius> I do actually want the aliasing; i just don't want it to create new entries.  I suppose I want too much.
[01:10:38] <choroba> tirnanog: repeating binmode *STDOUT, ':encoding(UTF-8)'; before the the say removes the warning
[01:10:53] <tirnanog> choroba: yes :(
[01:11:51] * GumbyPAN CPAN Upload: Data-Table-Text-20210729 by PRBRENAN https://metacpan.org/release/PRBRENAN/Data-Table-Text-20210729
[01:12:02] <choroba> tirnanog: Reminds me of this bug reported by me: https://github.com/Perl/perl5/issues/15392
[01:12:03] <Paperbot> Link title(s): [ IO layer for STDERR not set · Issue #15392 · Perl/perl5 · GitHub ]
[01:12:45] <choroba> so the problem might be even deeper than IPC::Run3
[01:13:10] <tirnanog> oh my.
[01:13:29] <tirnanog> testing it with my would-be run3 replacement quickly, just to see what happens.
[01:14:17] *** Quits: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net) (Ping timeout: 245 seconds)
[01:14:18] *** Joins: JustMe (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net)
[01:20:40] *** Joins: gizmomathboy (~gizmomath@206.127.53.107)
[01:25:24] *** Joins: troydm (~troydm@host-176-37-124-197.b025.la.net.ua)
[01:34:29] <gordonfish> tirnanog: Back. Looking at the code again. Have you inspected what is in $out, as it is being set by run3 so maybe it needs to be encoded.
[01:36:10] <gordonfish> You have \N{U+2424} in there, after replacing any \n characters with \N{U+2424} characters, which only happens with the run3 call since that is putting the new line in there.
[01:36:53] * GumbyPAN CPAN Upload: Object-Pad-0.48 by PEVANS https://metacpan.org/release/PEVANS/Object-Pad-0.48
[01:36:53] * GumbyPAN CPAN Upload: Object-Pad-SlotAttr-Final-0.02 by PEVANS https://metacpan.org/release/PEVANS/Object-Pad-SlotAttr-Final-0.02
[01:36:56] * GumbyPAN CPAN Upload: Object-Pad-SlotAttr-LazyInit-0.01 by PEVANS https://metacpan.org/release/PEVANS/Object-Pad-SlotAttr-LazyInit-0.01
[01:37:02] * GumbyPAN CPAN Upload: Object-Pad-SlotAttr-Trigger-0.02 by PEVANS https://metacpan.org/release/PEVANS/Object-Pad-SlotAttr-Trigger-0.02
[01:38:47] <gordonfish> Ah I see. Looks like IPC::Run3 overrides the binmode: https://metacpan.org/dist/IPC-Run3/source/lib/IPC/Run3.pm#L95
[01:38:48] <Paperbot> Link title(s): [ lib/IPC/Run3.pm - metacpan.org ]
[01:39:08] <gordonfish> tirnanog, choroba: ^
[01:39:42] <choroba> gordonfish: $out contains just a newline
[01:40:18] <choroba> the unicode character is substituted in the sub and returned and printed to stdout
[01:40:21] <gordonfish> Looks again, any \n is replaced with \N{U+2424}
[01:40:31] <choroba> yes, but not in $out
[01:40:47] <gordonfish> The print statement is: say replace_newlines($out);
[01:40:59] <gordonfish> And the body of that is: return $_[0] =~ s/\n/\N{U+2424}/gr;
[01:41:05] <choroba> yes
[01:41:12] <choroba> the /r means the $out isn't changed
[01:41:24] <gordonfish> But the result is what is printed
[01:41:38] <choroba> yes, the result is printed to stdout, not to $out
[01:42:00] <gordonfish> The warning is 'Wide character in say'
[01:42:09] <choroba> and stdout suddenly doesn't behave as its layers tell us it should
[01:42:22] <gordonfish> Actually it does, see link above
[01:42:32] <gordonfish> IPC::Run3 sets binmode
[01:42:45] <gordonfish> <gordonfish> Ah I see. Looks like IPC::Run3 overrides the binmode: https://metacpan.org/dist/IPC-Run3/source/lib/IPC/Run3.pm#L95
[01:42:45] <Paperbot> Link title(s): [ lib/IPC/Run3.pm - metacpan.org ]
[01:43:09] <choroba> it sets binmode on what?
[01:43:57] <choroba> $out or *STDOUT?
[01:44:01] <tirnanog> gordonfish: yes. in both cases, a string containing "\n" (0A) is being replaced before say is called. I used %vX to check.
[01:45:31] <tirnanog> for what it's worth, my run3 implementation isn't affected - possibly because it dups *STDOUT first in this instance (and doesn't invoke binmode anyway).
[01:46:25] <gordonfish> choroba: https://metacpan.org/dist/IPC-Run3/source/lib/IPC/Run3.pm#L392
[01:46:25] <Paperbot> Link title(s): [ lib/IPC/Run3.pm - metacpan.org ]
[01:46:51] <choroba> gordonfish: I see the code. I just think it's irrelevant to what we observe here.
[01:47:11] <gordonfish> It saves the old STDOUT and restores it later but the prior binmode is not restored, from what I see.
[01:47:27] <choroba> that might be the problem.
[01:48:00] <choroba> which sounds like the bug I linked to: restoring a filehandle doesn't restore its layers
[01:48:20] <tirnanog> yes, indeed. that appears to be the explanation.
[01:48:30] <gordonfish> Oh, I missed that link, will take a look
[01:48:43] <choroba> note that specifying {binmode_stdout=>':utf8'} with run3 doesn't change anything.
[01:50:41] <gordonfish> tirnanog: One work around could be to dupe STDOUT at the beginning, set binmode on and print to the dupe. That should work and will test in a moment.
[01:50:44] <tirnanog> in that event, it seems odd that get_layers reports the same after executing run3.
[01:50:54] <tirnanog> very odd indeed.
[01:51:54] * GumbyPAN CPAN Upload: Nasm-X86-20210730 by PRBRENAN https://metacpan.org/release/PRBRENAN/Nasm-X86-20210730
[01:53:41] <tirnanog> gordonfish: yes. my implementation-in-progress appears to circumvent this issue by duping the standard error streams as a matter of course. I think I'm just going to end up ditching IPC::Run3. this isn't the only issue I've had with it and enough is enough. the API is the part worth keeping.
[01:53:44] <gordonfish> perl -MIPC::Run3 -E 'open my $stdout, ">&", *STDOUT or die "Dup of STDOUT failed: $!"; binmode $stdout, ":encoding(UTF-8)"; run3(["printf", "\\n"], \undef, \$out); say $stdout $out =~ s/\n/\N{U+2424}/gr'
[01:53:50] <gordonfish> tirnanog: This worked for me ^
[01:53:54] <tirnanog> nobody's responding to the bug reports anyway.
[01:53:55] *** Joins: deadmarshal (~deadmarsh@95.38.228.142)
[01:58:20] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 272 seconds)
[01:58:58] *** Quits: deadmarshal (~deadmarsh@95.38.228.142) (Ping timeout: 272 seconds)
[02:00:20] <tirnanog> thank you both.
[02:04:06] *** Quits: EGD (~egd@user/egd) ()
[02:04:40] *** Joins: whynot (~whynot@37.73.42.17)
[02:25:19] *** Joins: gast0n (~g4570n@user/gast0n)
[02:26:58] * GumbyPAN CPAN Upload: Lingua-Conjunction-2.5 by NHORNE https://metacpan.org/release/NHORNE/Lingua-Conjunction-2.5
[02:34:53] *** Quits: magla (~gelignite@55d4c33c.access.ecotel.net) (Quit: Stay safe!)
[02:36:58] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 272 seconds)
[02:43:05] <ology> Conjunction Junction, what's your function?
[02:44:38] *** Joins: N4buc0 (~N4buc0@2001:1284:f013:cc94:ec9:4b7c:1427:9f91)
[02:58:46] *** Joins: tcohen (~tcohen@200.123.98.170)
[03:02:02] * GumbyPAN CPAN Upload: Test2-Harness-1.000064 by EXODIST https://metacpan.org/release/EXODIST/Test2-Harness-1.000064
[03:09:27] *** Quits: niedobry1 (~bbrindle@li1839-111.members.linode.com) (Quit: leaving)
[03:13:24] <gordonfish> ology: Oh saturday mornings, where fore art thou
[03:19:19] *** Joins: N4buc0- (~N4buc0@2001:1284:f013:cc94:ddc6:6db8:a5af:81cb)
[03:23:50] *** Quits: N4buc0 (~N4buc0@2001:1284:f013:cc94:ec9:4b7c:1427:9f91) (Ping timeout: 272 seconds)
[03:24:24] *** Quits: tcohen (~tcohen@200.123.98.170) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:34:08] *** Quits: thunder (~thunder@user/thunder) (Remote host closed the connection)
[03:35:50] *** Quits: choroba (~E_Choroba@89-101-243-80.cust.centrio.cz) (Quit: Leaving)
[03:37:06] * GumbyPAN CPAN Upload: Date-ManipX-Almanac-0.001_02 by WYANT https://metacpan.org/release/WYANT/Date-ManipX-Almanac-0.001_02
[03:48:38] *** Joins: thunder (~thunder@user/thunder)
[03:52:22] *** Quits: tobs (~tobs@taboege.de) (Remote host closed the connection)
[03:52:37] *** Quits: N4buc0- (~N4buc0@2001:1284:f013:cc94:ddc6:6db8:a5af:81cb) (Read error: Connection reset by peer)
[03:52:48] *** Joins: N4buc0- (~N4buc0@2001:1284:f013:cc94:ddc6:6db8:a5af:81cb)
[03:55:45] *** Joins: N4buc0 (~N4buc0@177.220.174.29)
[03:56:35] *** Quits: csrf (~csrf@user/csrf) (Read error: Connection reset by peer)
[03:56:55] *** Joins: csrf (~csrf@user/csrf)
[03:56:56] *** Joins: krismatrix (~krismatri@38.80.149.51)
[03:58:40] *** Quits: N4buc0- (~N4buc0@2001:1284:f013:cc94:ddc6:6db8:a5af:81cb) (Ping timeout: 272 seconds)
[04:02:13] *** Joins: tobs (~tobs@taboege.de)
[04:03:44] *** Quits: JustMe (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net) (Quit: Konversation terminated!)
[04:11:16] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Ping timeout: 272 seconds)
[04:11:26] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[04:12:36] *** Quits: Pali (~pali@user/pali) (Ping timeout: 272 seconds)
[04:13:42] *** Quits: whynot (~whynot@37.73.42.17) (Quit: leaving)
[04:14:17] *** Joins: N4buc0- (~N4buc0@2001:1284:f013:cc94:e64f:25cd:c6c6:f6cc)
[04:15:46] *** Quits: krismatrix (~krismatri@38.80.149.51) (Ping timeout: 272 seconds)
[04:17:54] *** Quits: N4buc0 (~N4buc0@177.220.174.29) (Ping timeout: 240 seconds)
[04:29:00] *** Joins: krismatrix (~krismatri@38.80.149.51)
[04:46:14] *** Quits: krismatrix (~krismatri@38.80.149.51) (Quit: Leaving)
[04:49:55] *** Joins: N4buc0 (~N4buc0@2001:1284:f013:cc94:e64f:25cd:c6c6:f6cc)
[04:49:56] *** Quits: N4buc0- (~N4buc0@2001:1284:f013:cc94:e64f:25cd:c6c6:f6cc) (Read error: Connection reset by peer)
[04:50:18] *** Joins: monkey_ (~user@190.104.116.134)
[04:50:37] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[05:01:04] *** Joins: N4buc0- (~N4buc0@2001:1284:f013:cc94:e64f:25cd:c6c6:f6cc)
[05:01:22] *** Quits: N4buc0 (~N4buc0@2001:1284:f013:cc94:e64f:25cd:c6c6:f6cc) (Ping timeout: 272 seconds)
[05:02:22] *** Quits: happy-dude (~happy-dud@2001:470:69fc:105::b4d7) (Write error: Connection reset by peer)
[05:02:22] *** Quits: Rubin (~rubin@2001:470:69fc:105::17e) (Read error: Connection reset by peer)
[05:02:22] *** Quits: MikeGeorge[m] (~onesuitsa@2001:470:69fc:105::1f88) (Read error: Connection reset by peer)
[05:02:22] *** Quits: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2) (Read error: Connection reset by peer)
[05:02:24] *** Quits: ilmari_ (~ilmari@user/ilmari) (Read error: Connection reset by peer)
[05:02:24] *** Quits: ehuelsmann[m] (~ehuelsman@2001:470:69fc:105::169a) (Read error: Connection reset by peer)
[05:02:24] *** Quits: latk (~latk@2001:470:69fc:105::255) (Read error: Connection reset by peer)
[05:02:24] *** Quits: gordonfish[m] (~gordonfis@2001:470:69fc:105::31) (Read error: Connection reset by peer)
[05:02:24] *** Quits: entonian[m] (~entonianm@2001:470:69fc:105::7ac0) (Read error: Connection reset by peer)
[05:03:46] *** Joins: ilmari_ (~ilmari@user/ilmari)
[05:03:48] *** Quits: bs338 (~pi@host86-188-3-147.range86-188.btcentralplus.com) (Ping timeout: 258 seconds)
[05:05:41] *** Joins: bs338 (~pi@host86-189-175-32.range86-189.btcentralplus.com)
[05:06:34] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 240 seconds)
[05:07:57] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[05:09:39] *** Quits: LSD (~LSD@2.lsd.systems) (Quit: I love you.)
[05:09:53] *** Joins: LSD (~LSD@2.lsd.systems)
[05:10:01] *** Quits: LSD (~LSD@2.lsd.systems) (Excess Flood)
[05:10:40] *** Joins: LSD (~LSD@2.lsd.systems)
[05:12:51] *** Joins: latk (~latk@2001:470:69fc:105::255)
[05:12:51] *** Joins: Rubin (~rubin@2001:470:69fc:105::17e)
[05:12:51] *** Joins: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2)
[05:12:51] *** Joins: gordonfish[m] (~gordonfis@2001:470:69fc:105::31)
[05:12:51] *** Joins: ehuelsmann[m] (~ehuelsman@2001:470:69fc:105::169a)
[05:12:51] *** Joins: happy-dude (~happy-dud@2001:470:69fc:105::b4d7)
[05:13:04] *** Joins: entonian[m] (~entonianm@2001:470:69fc:105::7ac0)
[05:13:04] *** Joins: MikeGeorge[m] (~onesuitsa@2001:470:69fc:105::1f88)
[05:20:35] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 250 seconds)
[05:21:51] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[05:22:54] <ology> gordonfish: Indeed. Sigh...
[05:35:38] *** Quits: gizmomathboy (~gizmomath@206.127.53.107) (Quit: Leaving)
[05:43:00] *** Joins: shlomif (~shlomif@87.68.242.72.adsl.012.net.il)
[05:52:32] *** Joins: gggp (~gggp@123.116.95.154)
[06:04:04] *** Quits: gggp (~gggp@123.116.95.154) (Read error: Connection reset by peer)
[06:04:27] *** Joins: gggp (~gggp@60.10.23.170)
[06:06:12] *** Joins: Su-Shee (~Susanne@p4ff4985a.dip0.t-ipconnect.de)
[06:09:06] *** Quits: Su-Shee_ (~Susanne@p4ffc7819.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[06:12:47] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[06:15:46] *** Joins: Su-Shee_ (~Susanne@p4ff491f9.dip0.t-ipconnect.de)
[06:17:45] *** Quits: Su-Shee (~Susanne@p4ff4985a.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[06:30:02] *** Quits: monkey_ (~user@190.104.116.134) (Ping timeout: 272 seconds)
[06:49:44] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:49:44] *** FinnElija is now known as Guest7136
[06:49:44] *** Quits: Guest7136 (~finn_elij@user/finn-elija/x-0085643) (Killed (mercury.libera.chat (Nickname regained by services)))
[06:49:44] *** finn_elija is now known as FinnElija
[06:52:30] *** Joins: gggp_ (~gggp@123.118.15.132)
[06:55:32] *** Quits: gggp (~gggp@60.10.23.170) (Ping timeout: 245 seconds)
[07:04:25] *** gggp_ is now known as gggp
[07:22:38] <buu> perlbot: utf8 200f
[07:22:45] <perlbot> buu: U+200F (e2 80 8f): RIGHT-TO-LEFT MARK [‏] 
[07:22:51] <buu> wtf
[07:23:10] <revhippie> singular of utf8 2eef
[07:23:10] <buu> perlbot: utf8 200e
[07:23:11] <perlbot> buu: U+200E (e2 80 8e): LEFT-TO-RIGHT MARK [‎] 
[07:23:26] <buu> I hate lots of things
[07:25:11] <buu> Amazon is printing <200f> : <200e>
[07:27:51] <revhippie> well it can't go 200e and THEN 200f or it'd just bounce back and forth
[07:28:24] <shlomif> buu: heh. bidi is pain
[07:29:01] *** Quits: gggp (~gggp@123.118.15.132) (Read error: Connection reset by peer)
[07:31:30] * GumbyPAN CPAN Upload: Text-PO-v0.1.6 by JDEGUEST https://metacpan.org/release/JDEGUEST/Text-PO-v0.1.6
[07:36:14] *** Joins: gggp (~gggp@60.10.23.170)
[07:41:11] *** Joins: Martchus_ (~martchus@dynamic-077-007-070-169.77.7.pool.telefonica.de)
[07:42:53] *** Quits: Martchus (~martchus@dynamic-095-118-014-211.95.118.pool.telefonica.de) (Ping timeout: 258 seconds)
[07:43:13] *** Joins: earthbreaker (~earthbrea@99-140-62-135.lightspeed.chrlnc.sbcglobal.net)
[07:45:34] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 258 seconds)
[07:53:25] *** Joins: gggp_ (~gggp@60.10.23.170)
[07:56:22] *** Quits: gggp (~gggp@60.10.23.170) (Ping timeout: 245 seconds)
[08:03:05] *** Joins: earthbreaker9000 (~earthbrea@li778-229.members.linode.com)
[08:04:25] *** Joins: gggp__ (~gggp@111.192.219.130)
[08:07:12] *** Quits: gggp_ (~gggp@60.10.23.170) (Ping timeout: 245 seconds)
[08:12:53] *** Quits: earthbreaker9000 (~earthbrea@li778-229.members.linode.com) (Quit: I Break D Ert)
[08:13:07] *** Joins: earthbreaker9000 (~earthbrea@li778-229.members.linode.com)
[08:15:49] *** Joins: jaggz (~jaggz@user/jaggz)
[08:16:02] <jaggz> how do I interlace these indexes into an image's rows? for my $y (0 .. $h-1) {
[08:16:36] <jaggz> does range operator have a skip?
[08:16:44] <jaggz> step
[08:17:11] <jaggz> ugh.. map is close?  why perl why? why not have had some syntax for it
[08:18:01] <ology> What? for my $y (0 .. $h-1) { interlaces?
[08:23:53] <jaggz> ology, 0 2 4 6 1 3 5 7
[08:24:26] <zgu> eval: [map {$_ * 2} (0..3)]
[08:24:48] *** Quits: earthbreaker9000 (~earthbrea@li778-229.members.linode.com) (Quit: I Break D Ert)
[08:24:53] <zgu> RIP perlbot
[08:25:04] <perlbot> zgu: timeout at /home/perlbot/perl5/perlbrew/perls/perlbot-main/lib/site_perl/5.30.0/App/EvalServerAdvanced.pm line 118. 
[08:25:13] *** Joins: earthbre- (~earthbrea@li778-229.members.linode.com)
[08:25:52] <zgu> no that wouldn't even work
[08:26:36] * GumbyPAN CPAN Upload: JSON-Schema-Tiny-0.008 by ETHER https://metacpan.org/release/ETHER/JSON-Schema-Tiny-0.008
[08:26:54] <jaggz> I'd also need to halve the max then.. so lame.
[08:27:02] <jaggz> even this has no step https://metacpan.org/pod/Number::Range
[08:27:03] <Paperbot> Link title(s): [ Number::Range - Perl extension defining ranges of numbers and testing if a number is found in the... ]
[08:27:06] <jaggz> what's wrong with perl devs?
[08:28:15] <zgu> i think you need two nested loops
[08:28:38] <jaggz> for for? 
[08:29:00] <zgu> or map map, depending on whether you like imperative or functional style
[08:29:43] <jaggz> for (my $y=0; $y<$h-1; $y+=2) {
[08:29:44] <jaggz> 	for ($y=1; $y<$h-1; $y+=2) {
[08:31:25] <zgu> eval: $h=3; for my $y(0..2) { for my $x (0..3) { print($y*$h + $x, ' '); } }
[08:31:27] <perlbot> zgu: 0 1 2 3 3 4 5 6 6 7 8 9 
[08:31:37] * GumbyPAN CPAN Upload: Unisyn-Parse-20210720 by PRBRENAN https://metacpan.org/release/PRBRENAN/Unisyn-Parse-20210720
[08:32:50] <zgu> eval: $h=2; for my $y(0..1) { for my $x (0..3) { print($y + $x*$h, ' '); } }
[08:32:53] <perlbot> zgu: 0 2 4 6 1 3 5 7 
[08:35:24] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 276 seconds)
[08:36:12] <jaggz> awful stuff
[08:36:33] <jaggz> two for loops without ranges (proper old C style for loops) seems best, thanks
[08:36:35] <jaggz> for reminding
[08:36:43] <jaggz> in the other secret perl channel
[08:37:57] *** Quits: gryphn (~gryphon@191.96.106.193) (Quit: kthxbye)
[08:39:46] *** Quits: earthbre- (~earthbrea@li778-229.members.linode.com) (Quit: I Break D Ert)
[08:40:38] *** Quits: earthbreaker (~earthbrea@99-140-62-135.lightspeed.chrlnc.sbcglobal.net) (Quit: Leaving)
[08:40:46] *** Quits: eseyman (~manu@lfbn-idf1-1-2267-180.w92-151.abo.wanadoo.fr) (Ping timeout: 258 seconds)
[08:41:29] <jaggz> it took 2m45s to transfer just that image to my lcd display over wifi (image is cropped and centered, so not the full 320x240): https://i.imgur.com/vy4f2kE.png
[08:41:37] * GumbyPAN CPAN Upload: JSON-Schema-Modern-0.515 by ETHER https://metacpan.org/release/ETHER/JSON-Schema-Modern-0.515
[08:41:41] *** Joins: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070)
[08:58:09] *** Quits: v` (~v@user/ctrl) (Ping timeout: 276 seconds)
[09:14:55] *** Joins: gggp_ (~gggp@60.10.23.170)
[09:18:18] *** Quits: gggp__ (~gggp@111.192.219.130) (Ping timeout: 276 seconds)
[09:20:40] *** Joins: deadmarshal (~deadmarsh@95.38.228.142)
[09:21:04] *** Parts: jaggz (~jaggz@user/jaggz) (Leaving)
[09:22:35] *** Joins: willow (~willow@173-228-31-194.dsl.static.fusionbroadband.com)
[09:23:51] *** Joins: eseyman (~manu@lfbn-idf1-1-2267-180.w92-151.abo.wanadoo.fr)
[09:24:02] <willow> why does  print "Reason: $e->reason";  output "Reason: Sisimai::Data=HASH(0x5615e1aa0d40)->reason"  instead of outputting the value of $e->reason  ?
[09:25:36] <willow> however  print "Reason: " . $e->reason"  works correctly
[09:26:06] <willow> however  print "Reason: " . $e->reason;
[09:32:03] <xq> that's how interpolation works
[09:32:18] <xq> in your first example only $e gets interpolated into the string
[09:33:07] *** Quits: deadmarshal (~deadmarsh@95.38.228.142) (Ping timeout: 268 seconds)
[09:33:44] *** Joins: mattil (~mattil@helsinki.portalify.com)
[09:34:58] <xq> it is possible to interpolate expressions into a string using dereferencing syntax, but it's messy in my opinion
[09:35:12] <xq> better use sprintf or .
[09:36:28] *** Quits: sl0w (~sl0w@64.225.43.238) (*.net *.split)
[09:36:28] *** Quits: polettix (~polettixx@linode.polettix.it) (*.net *.split)
[09:36:28] *** Quits: marcus (~marcus@mojo/viking/marcus) (*.net *.split)
[09:36:28] *** Quits: icebattle (~wayne@S010600fc8ddfd2b3.vc.shawcable.net) (*.net *.split)
[09:36:28] *** Quits: bleb (~cm@user/bleb) (*.net *.split)
[09:36:28] *** Quits: Getty (getty@stardestroyer.de) (*.net *.split)
[09:36:28] *** Quits: saorge (~saorge@ns378138.ip-5-196-67.eu) (*.net *.split)
[09:36:28] *** Quits: nicomen_ (~nicolas@178.124.223.35.bc.googleusercontent.com) (*.net *.split)
[09:36:28] *** Quits: Jonno_FTW (~come@user/jonno-ftw/x-0835346) (*.net *.split)
[09:36:28] *** Quits: Murray7501 (~Murray@89.109-247-180.customer.lyse.net) (*.net *.split)
[09:36:28] *** Quits: cation (cation@user/cation) (*.net *.split)
[09:36:28] *** Quits: francis (francis@user/francis) (*.net *.split)
[09:36:28] *** Quits: Masklin_Gurder (~joel@93.182.183.85) (*.net *.split)
[09:36:29] *** Quits: ssm (~ssm@shambler.fnord.no) (*.net *.split)
[09:36:29] *** Quits: jdrab (~jdrab@user/jdrab) (*.net *.split)
[09:36:29] *** Quits: arthurpbs (~arthurpbs@168.121.98.198) (*.net *.split)
[09:36:29] *** Quits: yano (~yano@ircpuzzles/staff/yano) (*.net *.split)
[09:36:29] *** Quits: dwxreaper (~quinn@192.155.91.76) (*.net *.split)
[09:36:29] *** Quits: Somni (insomnia@193-227-58-66.gci.net) (*.net *.split)
[09:36:29] *** Quits: Exodist (sid433366@2001:67c:2f08:8::6:9cd6) (*.net *.split)
[09:36:29] *** Quits: itok (sid418430@2001:67c:2f08:3::6:627e) (*.net *.split)
[09:36:29] *** Quits: davebaker (sid143727@2001:67c:2f08:4::2:316f) (*.net *.split)
[09:36:29] *** Quits: pervaya (~pervaya@2001:41d0:602:3007::641b:b74c) (*.net *.split)
[09:36:29] *** Quits: mjones (sid6844@id-6844.brockwell.irccloud.com) (*.net *.split)
[09:36:29] *** Quits: perigrin (sid218253@id-218253.tooting.irccloud.com) (*.net *.split)
[09:36:29] *** Quits: hquirinosmith (~hquirinos@hqs.rocks) (*.net *.split)
[09:36:29] *** Quits: TrechNex (TrechNex@user/trechnex) (*.net *.split)
[09:36:29] *** Quits: integral (sid296274@user/integral) (*.net *.split)
[09:36:29] *** Quits: vanfanel64 (~vanfanel6@user/vanfanel64) (*.net *.split)
[09:36:29] *** Quits: pierrot_ (~pi@user/pierrot) (*.net *.split)
[09:36:30] *** Quits: jjatria (~jjatria@68.183.32.235) (*.net *.split)
[09:36:30] *** Quits: gbristol (gbristol@hermes.gbristol.net) (*.net *.split)
[09:36:30] *** Quits: rozie (~rozie@2001:15e8:110:2913:1:1:1:2) (*.net *.split)
[09:36:30] *** Quits: Dreadnaught (Kulrak@n122-109-226-190.rdl2.qld.optusnet.com.au) (*.net *.split)
[09:36:30] *** Quits: Repaster (~Repaster@perlbot/bot/grinnz/repaster) (*.net *.split)
[09:36:31] *** Joins: dwxreape1 (~quinn@192.155.91.76)
[09:36:32] *** Joins: Jonno_FT1 (~come@api.carswap.me)
[09:36:33] *** Joins: Somni_ (~insomnia@193-227-58-66.gci.net)
[09:36:34] *** Joins: nicomen (~nicolas@178.124.223.35.bc.googleusercontent.com)
[09:36:34] *** Joins: rozie_ (~rozie@2001:15e8:110:2913:1:1:1:2)
[09:36:35] *** Joins: icebattle (~wayne@S010600fc8ddfd2b3.vc.shawcable.net)
[09:36:35] *** Joins: gbristol_ (~gbristol@hermes.gbristol.net)
[09:36:35] *** Joins: davebaker_ (sid143727@id-143727.tooting.irccloud.com)
[09:36:36] *** Joins: jjatria_ (~jjatria@68.183.32.235)
[09:36:36] *** Joins: Getty (getty@stardestroyer.de)
[09:36:36] *** Joins: francis (francis@132.145.48.21)
[09:36:36] *** Joins: arthurpbs_ (~arthurpbs@168.121.98.198)
[09:36:36] *** Joins: Repaster (~Repaster@ool-2f148218.dyn.optonline.net)
[09:36:37] *** Joins: polettix (~polettixx@linode.polettix.it)
[09:36:37] *** Joins: saorge (~saorge@ns378138.ip-5-196-67.eu)
[09:36:37] *** Quits: francis (francis@132.145.48.21) (Changing host)
[09:36:37] *** Joins: francis (francis@user/francis)
[09:36:39] *** Joins: TrechNex (~TrechNex@li462-125.members.linode.com)
[09:36:39] *** Joins: jdrab (~jdrab@2a03:4000:48:1a8:44c5:2fff:fe15:f20d)
[09:36:42] *** Joins: bleb_ (~cm@user/bleb)
[09:36:43] *** jjatria_ is now known as jjatria
[09:36:44] *** Joins: Dreadnaught (Kulrak@n122-109-226-190.rdl2.qld.optusnet.com.au)
[09:36:50] *** Joins: sl0w_ (~sl0w@64.225.43.238)
[09:36:57] *** Joins: integral_ (sid296274@user/integral)
[09:36:57] *** Quits: Repaster (~Repaster@ool-2f148218.dyn.optonline.net) (Changing host)
[09:36:57] *** Joins: Repaster (~Repaster@perlbot/bot/grinnz/repaster)
[09:37:03] *** Quits: jdrab (~jdrab@2a03:4000:48:1a8:44c5:2fff:fe15:f20d) (Changing host)
[09:37:03] *** Joins: jdrab (~jdrab@user/jdrab)
[09:37:04] *** Joins: hquirinosmith (~hquirinos@hqs.rocks)
[09:37:09] *** Joins: Exodist (sid433366@id-433366.stonehaven.irccloud.com)
[09:37:14] *** Joins: perigrin (sid218253@id-218253.tooting.irccloud.com)
[09:37:16] *** Joins: itok (sid418430@id-418430.charlton.irccloud.com)
[09:37:17] *** Joins: mjones (sid6844@id-6844.brockwell.irccloud.com)
[09:37:18] *** TrechNex is now known as Guest1384
[09:37:22] *** Joins: ssm (~ssm@shambler.fnord.no)
[09:38:06] *** Joins: Masklin_Gurder (~joel@93.182.183.85)
[09:38:11] *** Joins: vanfanel64 (~vanfanel6@user/vanfanel64)
[09:38:16] *** Joins: marcus (~marcus@mojo/viking/marcus)
[09:38:19] *** Joins: pierrot (~pi@user/pierrot)
[09:38:19] *** Joins: cation (cation@user/cation)
[09:38:28] *** Joins: pervaya (~pervaya@2001:41d0:602:3007::641b:b74c)
[09:38:35] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[09:41:40] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[09:42:02] *** Joins: gggp__ (~gggp@221.219.76.106)
[09:43:16] *** Joins: bliako (~bliako@62-130-115.netrun.cytanet.com.cy)
[09:44:17] *** Quits: gggp_ (~gggp@60.10.23.170) (Ping timeout: 245 seconds)
[09:46:44] * GumbyPAN CPAN Upload: JSON-Schema-Draft201909-0.129 by ETHER https://metacpan.org/release/ETHER/JSON-Schema-Draft201909-0.129
[09:46:56] *** Quits: randir (~randir@95-25-95-40.broadband.corbina.ru) (Remote host closed the connection)
[09:50:43] *** Joins: deadmarshal (~deadmarsh@95.38.228.142)
[10:02:21] *** Joins: horsepatat (~horsepata@80.89.78.47)
[10:03:24] *** Joins: gggp_ (~gggp@60.10.194.46)
[10:03:36] *** Joins: randir (~randir@93.159.239.42)
[10:04:32] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[10:07:06] *** Quits: gggp__ (~gggp@221.219.76.106) (Ping timeout: 252 seconds)
[10:07:26] *** Joins: gggp__ (~gggp@60.10.23.170)
[10:09:57] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[10:10:56] *** Quits: gggp_ (~gggp@60.10.194.46) (Ping timeout: 256 seconds)
[10:12:41] <ology> or ,
[10:13:49] *** Quits: jjhoo (~jahakala@dsl-trebng21-58c18f-56.dhcp.inet.fi) (Ping timeout: 268 seconds)
[10:19:04] *** Quits: gggp__ (~gggp@60.10.23.170) (Read error: Connection reset by peer)
[10:19:28] *** Joins: gggp__ (~gggp@60.10.23.170)
[10:22:05] <horsepatat> which module should I use to send an email in Perl? only thing I have is 3rd party smtp addr and credentials for it
[10:22:29] <horsepatat> should I use MIME::Lite?
[10:22:42] <horsepatat> or is there Mojo version of things already?
[10:29:18] <ether> Email::Sender::Simple to start
[10:29:26] <thunder> can't speak of mojo cuz I've never used it for mail, but MIME::Lite works well
[10:29:39] <ether> and Email::Stuffer is good
[10:30:00] *** Joins: habamax (~habamax@user/habamax)
[10:30:01] <horsepatat> all my prof career I used to use sendEmail script If ound on teh interwebs some time ago
[10:30:12] <horsepatat> damn thing works very reliably zero deps needed
[10:30:40] <horsepatat> buts its cli tool, if I use that I need to escape --to parameter for command injection which is like blast from the past
[10:30:55] *** Joins: gggp_ (~gggp@123.113.188.99)
[10:30:59] <horsepatat> I'll start with MIME::Lite and go from there
[10:32:17] <thunder> if you need to validate addresses, see Email::Valid->rfc822
[10:32:24] *** Joins: art1 (~romeyke@p200300ccdf065000f7f366874d4498e8.dip0.t-ipconnect.de)
[10:32:52] <horsepatat> thanks for suggestion, but I figured I wont waste my time with that and just check if $email =~ /@/
[10:33:26] <horsepatat> and just let smtp gateway to validate it by itself
[10:33:27] *** Quits: gggp__ (~gggp@60.10.23.170) (Ping timeout: 245 seconds)
[10:33:39] <horsepatat> I dont see a reason why should I do that, do you?
[10:33:53] <thunder> it's up to you, but it's considered best practice to untaint any input data before passing to unvetted methods
[10:34:02] <horsepatat> hear that
[10:35:30] <horsepatat> which basically means I trust MIME::Lite not to screw up with 3rd party input
[10:36:49] * GumbyPAN CPAN Upload: App-ansiecho-0.03 by UTASHIRO https://metacpan.org/release/UTASHIRO/App-ansiecho-0.03
[10:42:41] <thunder> seems like MIME::Lite uses Net::SMTP in the background. though not 100% certain I think it just funnels addresses to the smtp server one at a time and if any fail returns falsey. but it also has a ->verify($address) method fwiw.
[10:43:16] <thunder> pretty sure it has to be both enabled and called explicitly though
[10:43:53] <horsepatat> I am more worried to rate limit app registration per IP so that nobody spams on it
[10:44:10] * thunder nods
[10:44:53] <thunder> captchas are good. though personally I prefer the roll-your-own over the surveillance capitalists like recaptcha and hcaptcha, etc
[10:44:56] *** Joins: gggp__ (~gggp@60.10.23.170)
[10:45:07] <horsepatat> oh, I will roll my own too
[10:45:49] <horsepatat> I think there was a great simple bash script which generates captcha with image magick
[10:47:46] <thunder> yeah. imagick or gd are popular choices. you can also farm out the captcha code (from a session) to your text-to-speech app of preference to produce and audio captcha for seeing impaired
[10:48:28] <horsepatat> Festival or somesuch I know is text to speech
[10:48:39] *** Quits: gggp_ (~gggp@123.113.188.99) (Ping timeout: 276 seconds)
[10:51:29] *** Joins: furrymcgee (~devuan@31.179.186.66)
[10:51:51] <thunder> espeak is another one. good because it has a -stdout option so you don't have to worry about disk caching ephemeral data
[10:52:04] <horsepatat> that is neat, will write it down
[10:52:29] *** gggp__ is now known as gggp
[10:59:02] *** Joins: EGD (~egd@user/egd)
[11:02:54] *** Joins: gggp_ (~gggp@123.113.188.99)
[11:05:51] *** Joins: jjhoo (~jahakala@dsl-trebng21-58c18f-56.dhcp.inet.fi)
[11:05:57] *** Quits: gggp (~gggp@60.10.23.170) (Ping timeout: 245 seconds)
[11:06:09] *** Quits: jjhoo (~jahakala@dsl-trebng21-58c18f-56.dhcp.inet.fi) (Client Quit)
[11:07:01] *** Joins: ufobat (~martin@dynamic-077-009-059-078.77.9.pool.telefonica.de)
[11:07:46] *** Joins: jjhoo (~jahakala@dsl-trebng21-58c18f-56.dhcp.inet.fi)
[11:22:11] *** Joins: jplesnik (~jplesnik@nat-pool-brq-t.redhat.com)
[11:22:16] *** Quits: horsepatat (~horsepata@80.89.78.47) (Read error: Connection reset by peer)
[11:23:00] *** Joins: horsepatat (~horsepata@80.89.78.47)
[11:32:07] *** Joins: Su-Shee (~Susanne@p4ff497f4.dip0.t-ipconnect.de)
[11:33:26] *** Joins: gggp__ (~gggp@60.10.194.46)
[11:33:27] *** Quits: Su-Shee_ (~Susanne@p4ff491f9.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[11:37:24] *** Quits: gggp_ (~gggp@123.113.188.99) (Ping timeout: 276 seconds)
[11:41:25] *** Joins: gggp_ (~gggp@60.10.23.170)
[11:44:27] *** Quits: gggp__ (~gggp@60.10.194.46) (Ping timeout: 258 seconds)
[11:45:44] *** gggp_ is now known as gggp
[11:56:36] *** Joins: drocsid (~drocsid@207.32.160.224)
[11:59:15] *** Quits: horsepatat (~horsepata@80.89.78.47) (Read error: Connection reset by peer)
[11:59:51] *** Joins: horsepatat (~horsepata@80.89.78.47)
[12:02:55] *** Parts: bliako (~bliako@62-130-115.netrun.cytanet.com.cy) ()
[12:07:00] * GumbyPAN CPAN Upload: Fork-Utils-0.06 by CDN https://metacpan.org/release/CDN/Fork-Utils-0.06
[12:11:54] *** Joins: gggp_ (~gggp@60.10.194.46)
[12:14:51] *** Quits: gggp (~gggp@60.10.23.170) (Ping timeout: 250 seconds)
[12:17:57] *** Joins: gggp__ (~gggp@221.219.75.222)
[12:20:25] <Grinnz> huf: well, should we know what's happening in hungary? https://twitter.com/atrupar/status/1422346903262531596
[12:20:25] <Paperbot> Aaron Rupar (@atrupar) 7h49m ago: Tucker Carlson is broadcasting from Hungary
[12:20:34] *** Quits: gggp_ (~gggp@60.10.194.46) (Ping timeout: 240 seconds)
[12:22:25] *** Quits: diskin (~diskin@ec2-18-158-74-148.eu-central-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[12:23:11] *** Joins: diskin (~diskin@31.23.248.176)
[12:27:05] *** Joins: jadesoturi (~jadesotur@user/jadesoturi)
[12:27:06] * shlomif is hungry and eats Hungary
[12:30:31] <huf> Grinnz: what
[12:30:57] <huf> Grinnz: what the hell is he saying about this shithole?
[12:31:10] <Grinnz> dictators are great or something? i dunno i didnt watch it
[12:31:12] *** Joins: Pali (~pali@user/pali)
[12:32:47] <huf> https://twitter.com/clearing_fog/status/1422331474951303169 :D:D:D
[12:32:47] <Paperbot> ClearingTheFog (@clearing_fog) 9h2m ago: After meeting with Hungarian autocrat Orban a few days ago, Tucker Carlson will now speak at Mathias Corvinus Collegium’s far-right MCC Feszt, which got $1.7 billion in grants from the Hungarian government and support from Orbán.  Dennis Prager will too.  https://talkingpointsmemo.com/muckraker/tucker-carlson-summers-with-viktor-orban-touted-as-speaker-at-budapest-far-right-gathering
[12:32:53] <huf> piss and cum prager! even him
[12:33:16] <Grinnz> you can have both of them
[12:33:45] *** Joins: choroba (~E.Choroba@89-101-243-80.cust.centrio.cz)
[12:34:11] <huf> pls no
[12:34:19] <huf> we have them already
[12:37:44] *** Quits: jadesoturi (~jadesotur@user/jadesoturi) (Quit: Even death needs to sleep sometimes...)
[12:38:14] *** Joins: jadesoturi (~jadesotur@user/jadesoturi)
[12:40:30] <japh> I'm doing things https://www.japh.se/2021/08/03/use-perl-modules-in-python3.html
[12:40:31] <Paperbot> Link title(s): [ use perl modules in python3 | http/japh.se ]
[12:43:34] *** Quits: drocsid (~drocsid@207.32.160.224) (Quit: Client closed)
[12:44:38] *** Quits: jadesoturi (~jadesotur@user/jadesoturi) (Ping timeout: 258 seconds)
[12:45:07] *** Joins: jadesoturi (~jadesotur@user/jadesoturi)
[12:45:29] *** Quits: jadesoturi (~jadesotur@user/jadesoturi) (Client Quit)
[12:45:34] *** Quits: francis (francis@user/francis) (Quit: rc)
[12:45:55] *** Joins: francis (francis@user/francis)
[12:46:03] *** Joins: jadesoturi (~jadesotur@user/jadesoturi)
[12:46:41] <LeoNerd> How do I remark in distribution metadata that a certain package is provided by that dist, when it doesn't actually exist as a .pm file internally, but only gets generated from a .pm.PL at build time?
[12:47:02] <LeoNerd> https://rt.cpan.org/Ticket/Display.html?id=138313  -- is relevant
[12:47:03] <Paperbot> Link title(s): [ Bug #138313 for Object-Pad: Object::Pad 0.48 build/install issues <https://rt.cpan.org/Public/Bug/Display.html?id=138313> ]
[12:47:17] <Grinnz> provides metadata, with the .pm.PL file and the appropriate version
[12:48:06] <LeoNerd> Hrm... yes I guess my question is more: what is the process that puts it in there
[12:48:30] <Grinnz> well, i'd say dzil but in your case probably M::B?
[12:48:44] <LeoNerd> Imean I -could- just put it in a meta_merge but is there anything nicer?
[12:48:56] <Grinnz> unlikely
[12:49:14] <LeoNerd> Hrmmmm and I suppose at this point it won't have docs on metacpan.org either, because.. ugh..
[12:49:26] <LeoNerd> So much annoying faff for one tiny build-time string :/
[12:50:37] <Grinnz> looks like it is in your provides, M::B just put the wrong file path
[12:50:38] <tirnanog> LeoNerd: hello. though you might like to know that unpairs(1) segfaults 5.34, as provided by Arch.
[12:51:04] <LeoNerd> tirnanog: OK - can you report bug in the usual place?
[12:51:23] <tirnanog> LeoNerd: what's the place? I don't use GitHub. will that be a problem?
[12:51:34] <LeoNerd> The usual place is wherever metacpan.org says is the place
[12:51:35] <Grinnz> wait, it looks fine to me https://metacpan.org/release/PEVANS/XS-Parse-Sublike-0.12/source/lib/XS/Parse/Sublike/Builder.pm
[12:51:35] <Paperbot> Link title(s): [ lib/XS/Parse/Sublike/Builder.pm - metacpan.org ]
[12:51:38] <LeoNerd> Ihonestly forget. I just click the link
[12:51:48] <Grinnz> that's not a .PL
[12:51:48] <LeoNerd> Grinnz: that's Sublike; not Keyword.
[12:51:57] <Grinnz> oh
[12:52:10] <tirnanog> so, rt is alive. well, that's something.
[12:52:24] <Grinnz> yeah that one doesn't end up in provides at all
[12:52:30] <Grinnz> Module::Metadata bug probably
[12:52:32] <LeoNerd> tirnanog: https://metacpan.org/pod/List::Util - the "Issues" link
[12:52:33] <Paperbot> Link title(s): [ List::Util - A selection of general-utility list subroutines - metacpan.org ]
[12:52:42] <tirnanog> LeoNerd: glad to see it didn't die.
[12:52:50] <LeoNerd> Yah, we got it saved. Eventually
[12:53:13] <LeoNerd> Grinnz: well, ... in this case it's probably plausible.. the dist really doesn't have a .pm file in it, so... perhaps this is correct
[12:53:34] *** LSD is now known as acidsys
[12:53:35] <Grinnz> it's not correct, if there is any provides metadata nothing will scan for the module
[12:53:37] <LeoNerd> Though I'm still wondering whether I should ship the .pm file anyway,..
[12:53:59] <LeoNerd> No I mean more: the tools are doing what they ought to
[12:54:01] <Grinnz> either you need to add the provides entry for the .pm.PL file or remove the provides metadata
[12:54:16] <Grinnz> no, Module::Metadata should recognize it
[12:54:46] <LeoNerd> Hrm.. well,.. OK so I'll call that my third M:M bug then ;)
[12:54:46] <Grinnz> that's should in the correctness sense, not in "what's actually implemented"
[12:54:58] <LeoNerd> After the "it doesn't recognise `class` or `role`"  :)
[12:55:40] <LeoNerd> Though I'm amused that metacpan has decided it will render POD from it - https://metacpan.org/dist/XS-Parse-Keyword/view/lib/XS/Parse/Keyword/Builder.pm.PL
[12:55:41] <Paperbot> Link title(s): [ XS::Parse::Keyword::Builder - build-time support for XS::Parse::Keyword - metacpan.org ]
[12:55:59] <Grinnz> all it needs for documentation is a readable =head1 NAME
[12:56:13] <LeoNerd> Right, but it knows to associate it with that module name
[12:56:20] <Grinnz> yes, via the NAME
[12:56:22] *** Quits: EGD (~egd@user/egd) ()
[12:56:29] <LeoNerd> https://metacpan.org/search?size=20&q=xs%20parse%20keyword%20builder&search_type=modules
[12:56:32] <LeoNerd> top hit
[12:56:46] <Paperbot> Link title(s): [ Search for "xs parse keyword builder" - metacpan.org ]
[12:56:46] <Grinnz> metacpan indexes documentation purely by whatever you write in the =head1 NAME
[12:56:53] <Grinnz> unrelated to filenames or package names
[12:56:56] <LeoNerd> Oooh... not from its ... right. Hrm
[12:58:10] <Grinnz> this also means when you *don't* want the generated documentation in your file to get recognized, you need to indent it
[12:58:24] <LeoNerd> Mmm, fun
[12:58:47] <haarg> Module::Metadata is pretty awful in general
[12:59:24] <LeoNerd> https://rt.cpan.org/Dist/Display.html?Name=Module-Metadata  -- hmmm
[12:59:25] <Paperbot> Link title(s): [ Active bugs for Module-Metadata <https://rt.cpan.org/Public/Dist/Display.html?Name=Module-Metadata> ]
[13:00:57] <haarg> https://github.com/Perl-Toolchain-Gang/Module-Metadata/issues/27 this is the same issue you are having
[13:00:58] <Paperbot> Link title(s): [ Module::Metadata can't parse MLEHMANN/common-sense · Issue #27 · Perl-Toolchain-Gang/Module-Metad... ]
[13:03:54] <LeoNerd> Hrm.. so aside from getting upstream bugs fixed, what are my practical options?
[13:04:11] <LeoNerd> I could meta_merge but that needs me to know the version number :/
[13:04:26] <haarg> meta_merge is the only reasonable option
[13:04:33] <LeoNerd> I could reshape my code -aaagain- to put all the generated stuff in some other file that the real shipped one loads
[13:05:11] *** Quits: jadesoturi (~jadesotur@user/jadesoturi) (Quit: Even death needs to sleep sometimes...)
[13:05:20] <LeoNerd> I could locally fix Module::Metadata so when -I- run it it generates the right `provides`
[13:05:29] <LeoNerd> A risky strategy because that could easily break again on next update
[13:05:35] *** gggp__ is now known as gggp
[13:06:02] *** Quits: furrymcgee (~devuan@31.179.186.66) (Quit: leaving)
[13:08:41] *** Joins: jadesoturi (~jadesotur@user/jadesoturi)
[13:09:06] *** Quits: Pali (~pali@user/pali) (Ping timeout: 240 seconds)
[13:11:30] <haarg> pass a no_index => {} option to Module::Build->new
[13:11:51] <LeoNerd> Then I won't get an index at all
[13:11:54] *** Joins: gggp_ (~gggp@60.10.23.170)
[13:12:19] <haarg> which will prevent it from including provides metadata
[13:12:50] <haarg> which will leave it up to pause, which can parse the package in your .pm.PL file
[13:12:51] <LeoNerd> Isn't that worse that now?
[13:13:02] <LeoNerd> ... wait, PAUSE will scan it again using different code?
[13:13:32] <haarg> if provides is not included in the metadata, PAUSE will do its own scan
[13:14:45] * shlomif sent this pullreq - https://github.com/KalessinD/perl_fork_utils/pull/1 - hail grammar!
[13:15:12] *** Quits: gggp (~gggp@221.219.75.222) (Ping timeout: 252 seconds)
[13:15:13] <LeoNerd> Ugh, I see... :/
[13:19:33] *** Joins: TorgoX (~torgox_li@S010610561194533f.ed.shawcable.net)
[13:19:53] <haarg> subclass Module::Build, override get_metadata, have it fix the provides data
[13:20:26] *** Joins: gggp__ (~gggp@60.10.194.46)
[13:20:42] <haarg> the superclass's get_metadata will include the current provides data, which will have the version number of the other pm file
[13:20:44] <LeoNerd> Ah.. this is annoying. Module::Metadata will stop parsing at the __DATA__ line, so even if I tell it to look inside .pm.PL files, it won't get as far as finding the `package` line -- https://metacpan.org/release/PEVANS/XS-Parse-Keyword-0.10/source/lib/XS/Parse/Keyword/Builder.pm.PL#L36
[13:20:45] <Paperbot> Link title(s): [ lib/XS/Parse/Keyword/Builder.pm.PL - metacpan.org ]
[13:22:28] *** Quits: zakame (~zakame@user/zakame) (Ping timeout: 256 seconds)
[13:23:27] *** Quits: gggp_ (~gggp@60.10.23.170) (Ping timeout: 245 seconds)
[13:23:35] <LeoNerd> ... waaaait I could just put that package line -again- above the __DATA__, the actual script won't care
[13:23:37] *** Joins: zakame (~zakame@user/zakame)
[13:23:49] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 265 seconds)
[13:26:37] <haarg> looking at the code in Module::Build, you're going to have an easier time manually adding the provides data than getting it to scan .PL files
[13:27:08] <LeoNerd> I did a oneline change to make it look in .PL, that was the easy bit. It now emits    "XS::Parse::Keyword::Builder" => { file => "lib/XS/Parse/Keyword/Builder.pm.PL", version => "0.10" },
[13:27:18] <LeoNerd> which makes me wonder that that might not be what I want it to do anyway
[13:27:55] <haarg> when you say a one line change, do you mean in your local Module::Build::Base file?
[13:27:58] *** Quits: rando25892 (~sthk@c-98-240-233-64.hsd1.mn.comcast.net) (Changing host)
[13:27:58] *** Joins: rando25892 (~sthk@user/rando25892)
[13:28:07] <LeoNerd> No, Imean one line in Module/Metadata.pm
[13:28:32] <haarg> yeah that isn't going to work
[13:29:26] <LeoNerd> Bah.. This whole thing is really just there in order to ship the compiletime CFLAGS string, which in almost all cases is empty, other than containing  "+std=c99"  on some HPUX compiler because apparently that is required
[13:29:34] <LeoNerd> except HPUX can't build this anyway for different reasons
[13:29:40] <LeoNerd> ... soooo maybe I should just give up on the whole idea
[13:30:12] <haarg> Module::Build does not use ->provides or ->package_versions_from_directory
[13:30:35] <haarg> you could put this in a subclass https://perlbot.pl/p/zghjn9
[13:30:36] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[13:30:43] <haarg> a Module::Build subclass i mean
[13:31:14] <haarg> Module::Build does its own thing to pick the files for provides: https://metacpan.org/dist/Module-Build/source/lib/Module/Build/Base.pm#L4765-4784
[13:31:14] <Paperbot> Link title(s): [ lib/Module/Build/Base.pm - metacpan.org ]
[13:31:36] <LeoNerd> Right. Because, of course once we have *two* different mechanisms for all this, why stop there? :/
[13:31:38] <haarg> not very convenient to override
[13:31:54] <haarg> because this is Module::Build. nothing is easy to override.
[13:32:17] <haarg> but like i showed, fixing the metadata in a subclass isn't hard
[13:36:54] <LeoNerd> It involves putting information in the "wrong" place though; it embeds the specifics of this dist, into that subclass whose code is hiding away somewhere else
[13:37:05] <LeoNerd> So it's not very tidy
[13:38:58] *** Quits: jadesoturi (~jadesotur@user/jadesoturi) (Ping timeout: 240 seconds)
[13:39:49] <Altreus> > why stop there?  # I believe the idea is you keep going until you solve all the technical problems, and then keep going after that to solve all the interpersonal bitching as well
[13:40:50] <haarg> could use its ->subclass thing
[13:41:20] *** Quits: Trigon (~reuben@73.127.1.41) (Ping timeout: 272 seconds)
[13:44:54] *** Joins: gggp_ (~gggp@60.10.194.46)
[13:46:33] <LeoNerd> Of course, a far simpler solution could be to say we just give up on indexing the ::Builder helper... Have configure_requires jusut look for XS::Parse::Keyword 0.10, and rely on the fact that if that turns up then its ::Builder helper will be there so we can just `use` it
[13:46:40] <LeoNerd> It won't get indexed but we don't care
[13:47:53] *** Quits: gggp__ (~gggp@60.10.194.46) (Ping timeout: 258 seconds)
[13:52:24] <LeoNerd> No, I think what I'll do is split "Builder.pm" into two pieces; the purely static half and the dynamic data half.. the second can get built at install time and get pulled in by the first, which is normal perl to be visible and indexed
[13:55:15] *** Joins: jadesoturi (~jadesotur@user/jadesoturi)
[13:55:26] *** Joins: gggp__ (~gggp@221.219.75.222)
[13:58:37] *** Quits: gggp_ (~gggp@60.10.194.46) (Ping timeout: 258 seconds)
[14:02:25] *** Joins: gggp_ (~gggp@60.10.194.46)
[14:05:15] *** Quits: gggp__ (~gggp@221.219.75.222) (Ping timeout: 252 seconds)
[14:11:55] *** Joins: gggp__ (~gggp@60.10.194.46)
[14:15:06] *** Quits: gggp_ (~gggp@60.10.194.46) (Ping timeout: 258 seconds)
[14:15:16] *** Joins: akaWolf (~akaWolf@akawolf.org)
[14:17:13] * GumbyPAN CPAN Upload: XS-Parse-Keyword-0.11 by PEVANS https://metacpan.org/release/PEVANS/XS-Parse-Keyword-0.11
[14:17:29] <LeoNerd> ^-- contains a static Builder.pm that is easily indexed as normal
[14:17:33] <LeoNerd> Seems the best solution
[14:19:25] *** Joins: gggp_ (~gggp@60.10.194.46)
[14:22:32] *** Quits: gggp__ (~gggp@60.10.194.46) (Ping timeout: 256 seconds)
[14:30:40] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[14:31:16] *** Joins: magla (~gelignite@55d4b6d1.access.ecotel.net)
[14:32:31] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:32:43] <shlomif> LeoNerd: i see you've joined the over-200 club: https://metacpan.org/author/PEVANS - gg and thanks
[14:32:45] <Paperbot> Link title(s): [ Paul Evans (PEVANS) - metacpan.org ]
[14:33:17] *** Joins: csrf (~csrf@user/csrf)
[14:33:26] *** Joins: gggp__ (~gggp@60.10.194.46)
[14:36:34] *** Quits: gggp_ (~gggp@60.10.194.46) (Ping timeout: 258 seconds)
[14:37:21] <LeoNerd> I did that a few weeks ago I think
[14:39:33] *** Joins: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net)
[14:40:38] *** Quits: TorgoX (~torgox_li@S010610561194533f.ed.shawcable.net) (Quit: Going offline, see ya! (www.adiirc.com))
[14:46:33] <shlomif> LeoNerd: did what?
[14:48:41] <LeoNerd> Hit 200
[14:48:58] <shlomif> LeoNerd: ah
[14:53:08] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[14:53:40] *** Joins: mattil (~mattil@helsinki.portalify.com)
[14:53:49] <Altreus> I think LeoNerd is just me from a parallel universe in which I could actually finish a project I started
[14:54:23] <Altreus> If I imagine what I'd have written if I had 200 modules on CPAN it'd probably be the same sort of set
[14:54:37] <Altreus> But it would require me to have developed those skills, and I didn't :D
[14:54:44] *** Joins: TorgoX (~torgox_li@S010610561194533f.ed.shawcable.net)
[14:56:24] *** Quits: deadmarshal (~deadmarsh@95.38.228.142) (Ping timeout: 252 seconds)
[14:57:00] *** gggp__ is now known as gggp
[14:57:39] *** Joins: deadmarshal (~deadmarsh@95.38.228.142)
[15:02:15] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 258 seconds)
[15:02:54] *** Joins: gggp_ (~gggp@60.10.23.170)
[15:06:05] *** Quits: gggp (~gggp@60.10.194.46) (Ping timeout: 258 seconds)
[15:09:28] *** Quits: nperez (~nperez@86-93-223-59.fixed.kpn.net) (Ping timeout: 258 seconds)
[15:10:07] *** Quits: magla (~gelignite@55d4b6d1.access.ecotel.net) (Quit: Stay safe!)
[15:11:17] *** Quits: jadesoturi (~jadesotur@user/jadesoturi) (Quit: Even death needs to sleep sometimes...)
[15:12:56] *** Joins: mattil (~mattil@helsinki.portalify.com)
[15:14:11] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[15:14:39] *** Joins: jadesoturi (~jadesotur@user/jadesoturi)
[15:15:54] *** Quits: deadmarshal (~deadmarsh@95.38.228.142) (Ping timeout: 240 seconds)
[15:15:55] *** Joins: gggp__ (~gggp@60.10.194.46)
[15:16:04] *** integral_ is now known as integral
[15:16:27] <shlomif> Altreus: parallel campaign is the shitz: https://www.shlomifish.org/humour/Blue-Rabbit-Log/ideas.xhtml#what-became-of-gon-and-blor
[15:16:28] <Paperbot> Link title(s): [ Ideas for “The Blue Rabbit’s Log” - Shlomi Fish’s Homesite ]
[15:17:43] *** Joins: gggp (~gggp@60.10.194.46)
[15:18:01] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[15:18:18] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[15:19:17] *** Quits: gggp_ (~gggp@60.10.23.170) (Ping timeout: 245 seconds)
[15:20:04] *** Joins: habamax_ (~habamax@vpn.avast.com)
[15:20:14] *** Quits: habamax_ (~habamax@vpn.avast.com) (Changing host)
[15:20:14] *** Joins: habamax_ (~habamax@user/habamax)
[15:20:14] *** habamax is now known as Guest7389
[15:20:14] *** habamax_ is now known as habamax
[15:20:42] *** Quits: gggp__ (~gggp@60.10.194.46) (Ping timeout: 240 seconds)
[15:21:19] * GumbyPAN CPAN Upload: Fork-Utils-0.07 by CDN https://metacpan.org/release/CDN/Fork-Utils-0.07
[15:22:49] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[15:23:27] *** Quits: Guest7389 (~habamax@user/habamax) (Ping timeout: 245 seconds)
[15:24:37] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 268 seconds)
[15:28:56] <Altreus> whut :)
[15:31:20] *** Joins: N4buc0 (~N4buc0@2001:1284:f013:cc94:b89d:6a1e:d240:3ae2)
[15:31:49] *** Quits: TorgoX (~torgox_li@S010610561194533f.ed.shawcable.net) (Quit: Going offline, see ya! (www.adiirc.com))
[15:35:58] *** Quits: N4buc0- (~N4buc0@2001:1284:f013:cc94:e64f:25cd:c6c6:f6cc) (Ping timeout: 272 seconds)
[15:43:42] *** Joins: diskin_ (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com)
[15:43:42] *** Quits: diskin (~diskin@31.23.248.176) (Killed (zirconium.libera.chat (Nickname regained by services)))
[15:43:42] *** diskin_ is now known as diskin
[15:53:39] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 265 seconds)
[15:53:53] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[15:55:54] <shlomif> Altreus: whut sap?
[15:56:38] *** Joins: nperez (~nperez@86-93-223-59.fixed.kpn.net)
[16:06:39] *** Quits: N4buc0 (~N4buc0@2001:1284:f013:cc94:b89d:6a1e:d240:3ae2) (Ping timeout: 258 seconds)
[16:14:07] *** Joins: v` (~v@user/ctrl)
[16:18:01] *** Joins: deadmarshal (~deadmarsh@95.38.228.142)
[16:34:31] *** Quits: thunder (~thunder@user/thunder) (Remote host closed the connection)
[16:38:33] <japh> shlomif, https://www.japh.se/2021/08/03/use-perl-modules-in-python3.html ; have you used it for something yourself?
[16:38:34] <Paperbot> Link title(s): [ use perl modules in python3 | http/japh.se ]
[16:39:03] <lopid> the battle of the personal web sites begins
[16:40:42] *** Joins: mattil (~mattil@d49f4hprpmgknpvrp0k-4.rev.dnainternet.fi)
[16:40:44] *** Quits: mattil (~mattil@d49f4hprpmgknpvrp0k-4.rev.dnainternet.fi) (Remote host closed the connection)
[16:41:13] *** Joins: mattil (~mattil@d49f4hprpmgknpvrp0k-4.rev.dnainternet.fi)
[16:41:24] <shlomif> japh: only this: https://github.com/shlomif/fc-solve/tree/try-using-pyperl-and-TT3
[16:41:25] <Paperbot> Link title(s): [ GitHub - shlomif/fc-solve at try-using-pyperl-and-TT3 ]
[16:41:47] * pragma- squints the fuck at "pyperl"
[16:45:09] *** Quits: mattil (~mattil@d49f4hprpmgknpvrp0k-4.rev.dnainternet.fi) (Remote host closed the connection)
[16:45:35] *** Joins: mattil (~mattil@d49f4hprpmgknpvrp0k-4.rev.dnainternet.fi)
[16:47:10] *** Quits: mattil (~mattil@d49f4hprpmgknpvrp0k-4.rev.dnainternet.fi) (Remote host closed the connection)
[16:47:16] *** Joins: mattil (~mattil@d49f4hprpmgknpvrp0k-4.rev.dnainternet.fi)
[16:52:32] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Quit: No Ping reply in 180 seconds.)
[16:52:34] <woei> two weeks ago I hacked on http://pecl.php.net/package/perl getting it to compile and run on PHP5.6, which is it itself unmaintained
[16:52:34] <Paperbot> Link title(s): [ PECL :: Package :: perl ]
[16:52:48] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[16:53:32] <woei> the use case is a PHP management website written by one of our network engineers that needs access to some Infoblox Perl modules to register DNS entries
[16:54:13] <ilmari> and shelling out to a perl script was not feasible?
[16:56:26] <woei> that was my suggestion to him as well
[16:57:02] *** Quits: mattil (~mattil@d49f4hprpmgknpvrp0k-4.rev.dnainternet.fi) (Remote host closed the connection)
[16:57:03] <woei> basically, it's PHP with embedded strings of Perl code (and interpolated PHP variables)
[16:57:34] <Altreus> This sounds like an entire structure of don't do that
[16:57:40] <japh> shlomif, that's... a lot of code, where's the actual perlpython code? :p
[16:57:41] <woei> he's rewriting everything in Laravel, but he wanted the current website migrated from an unmaintained Ubuntu 10.04 box to something newer
[16:58:13] <Harzilein> personally with such embeddings, i often wonder why not more languages have a sanctioned way to have placeholders for literals like sql does
[16:58:38] <Altreus> Because SQL is designed for that and languages are not
[16:58:42] <woei> and so I spent the better part of a day installing PHP5.6 on AlmaLinux 8 from some dodgy repo and then hacking on that pecl::perl PHP extension to embed a perl interpreter
[16:59:01] <Altreus> Embedding a language in another is very much a last-ditch hack
[16:59:08] <woei> # fgrep libperl /proc/$(pgrep php-fpm|tail -1)/maps|head -1
[16:59:08] <woei> 7fe256fa0000-7fe2571a6000 r-xp 00000000 fd:00 100811833                  /usr/lib64/libperl.so.5.26.3
[16:59:10] <Altreus> If you want to use more than one language you should have more than one service
[16:59:41] <woei> yes, my suggestion to him was to make a little mojolicious app wrapping the Infoblox perl modules and calling that from his PHP website
[16:59:59] *** Joins: mattil (~mattil@d49f4hprpmgknpvrp0k-4.rev.dnainternet.fi)
[17:00:17] <woei> he'll take that "under advisement". But that PHP5.6 website embedding libperl will probably live on for many years still :-)
[17:00:22] <japh> meh, where's the "oh, this is interesting" philosophy. There's too much "you shouldn't do this"
[17:01:26] <shlomif> japh: https://github.com/shlomif/fc-solve/compare/try-using-pyperl-and-TT3..master
[17:01:27] <woei> there was another brave soul on the internet who did the same thing for PHP7: https://github.com/swthemathwiz/php-perl
[17:01:27] <Paperbot> Link title(s): [ GitHub - swthemathwiz/php-perl: PHP Perl Extension (Updated for PHP7) ]
[17:01:28] <Paperbot> Link title(s): [ Comparing try-using-pyperl-and-TT3..master · shlomif/fc-solve · GitHub ]
[17:02:13] <woei> but I needed it to work on PHP5.6, and PHP's entire C extension API changed drastically between PHP5.x and PHP7
[17:02:43] <Altreus> japh: it's reserved for interesting things
[17:03:02] <japh> you can be interesting
[17:03:33] <Altreus> On occasion
[17:04:52] *** Quits: mattil (~mattil@d49f4hprpmgknpvrp0k-4.rev.dnainternet.fi) (Remote host closed the connection)
[17:06:15] <Altreus> Besides, languages *do* have a way of getting data safely into them - you can use one of many data formats over STDIN
[17:07:51] *** Joins: mattil (~mattil@d49f4hprpmgknpvrp0k-4.rev.dnainternet.fi)
[17:08:18] <Harzilein> Altreus: oh, i'm well aware, the problem is that, for perl, say, the embedding language has to make some effort (usually a companion perl module) to make the passing mechanism transparent to the user
[17:08:35] <Harzilein> s/embedding language/embedding runtime/
[17:09:14] <simcop2387> perldoc: hi
[17:09:15] <perlbot> simcop2387: Your documentation is available at: https://perldoc.perl.org/hi
[17:15:07] *** Joins: tcohen (~tcohen@192.141.149.64)
[17:20:39] *** Quits: mattil (~mattil@d49f4hprpmgknpvrp0k-4.rev.dnainternet.fi) (Remote host closed the connection)
[17:21:30] *** Joins: N4buc0 (~N4buc0@2001:1284:f013:cc94:5d29:e775:49c0:ee3)
[17:22:09] *** Quits: nperez (~nperez@86-93-223-59.fixed.kpn.net) (Ping timeout: 252 seconds)
[17:27:52] *** Joins: MichaelOF (~michael@p200300eb8f196d01315296466d62e3ae.dip0.t-ipconnect.de)
[17:28:44] <LeoNerd> mst: Parallel::Map docs are quite short and don't e.g. explain what the return value is. Is it a Future? Reading the code it appears to ->get itself, so seems not
[17:34:04] <Altreus> sounds like what Java tried to do with its RPC stuff
[17:34:14] <Altreus> all it really did was replace useful stuff with XML
[17:34:47] *** Joins: mattil (~mattil@87-95-94-53.bb.dnainternet.fi)
[17:35:10] <zgu> are you implying that xml isn't useful?
[17:35:20] *** Joins: mattil_ (~mattil@d49f4hprpmgknpvrp0k-4.rev.dnainternet.fi)
[17:36:08] *** Quits: MichaelOF (~michael@p200300eb8f196d01315296466d62e3ae.dip0.t-ipconnect.de) (Quit: Konversation terminated!)
[17:37:42] <LeoNerd> XML is borderline useful for writing prose with semantic markup in it, yah
[17:37:48] *** Quits: mattil_ (~mattil@d49f4hprpmgknpvrp0k-4.rev.dnainternet.fi) (Remote host closed the connection)
[17:37:50] <LeoNerd> It's not that nice as a generic data structure for data
[17:38:02] *** Quits: mattil (~mattil@87-95-94-53.bb.dnainternet.fi) (Read error: Connection reset by peer)
[17:38:15] *** Joins: mattil (~mattil@d49f4hprpmgknpvrp0k-4.rev.dnainternet.fi)
[17:40:14] *** Joins: nperez (~nperez@2a02-a45b-17c4-1-a00-27ff-feab-4723.fixed6.kpn.net)
[17:41:31] <Altreus> I was yes
[17:41:33] * GumbyPAN CPAN Upload: URI-Fast-0.50 by JEFFOBER https://metacpan.org/release/JEFFOBER/URI-Fast-0.50
[17:42:27] *** Quits: mattil (~mattil@d49f4hprpmgknpvrp0k-4.rev.dnainternet.fi) (Ping timeout: 250 seconds)
[17:49:59] *** Quits: choroba (~E.Choroba@89-101-243-80.cust.centrio.cz) (Quit: Leaving)
[18:00:05] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[18:00:44] *** Joins: krismatrix (~krismatri@38.80.149.51)
[18:03:21] *** Joins: bit4bit (~bit4bit@190.128.123.78)
[18:06:36] * GumbyPAN CPAN Upload: Healthchecks-0.01 by LDIDRY https://metacpan.org/release/LDIDRY/Healthchecks-0.01
[18:10:18] *** Quits: gggp (~gggp@60.10.194.46) (Read error: Connection reset by peer)
[18:10:36] *** Joins: gggp (~gggp@60.10.23.170)
[18:11:18] *** Joins: mattil (~mattil@d49f4hprpmgknpvrp0k-4.rev.dnainternet.fi)
[18:11:35] *** Quits: mattil (~mattil@d49f4hprpmgknpvrp0k-4.rev.dnainternet.fi) (Remote host closed the connection)
[18:11:37] * GumbyPAN CPAN Upload: HTML-TableContentParser-0.305 by WYANT https://metacpan.org/release/WYANT/HTML-TableContentParser-0.305
[18:12:08] *** Joins: mattil (~mattil@helsinki.portalify.com)
[18:12:18] <shlomif> japh: i fixed the crash now
[18:18:31] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 258 seconds)
[18:21:17] <genio> zgu: I'll come right out and say it. XML is the devil and is overused and abused for everything under the sun. My work with it over the years has made me _hate_ it.
[18:21:37] <Adura> Yeah, look what it did to the XFL.
[18:22:31] <Altreus> I read an article by someone who examined many uses of XML and found exactly one use that they could not more efficiently and maintainably reïmplement in something like JSON
[18:22:49] <Altreus> it was config for a router, if memory serves
[18:23:26] *** Quits: Linux77 (~kvirc@187-126-71-30.user3p.veloxzone.com.br) (Ping timeout: 258 seconds)
[18:23:31] <shlomif> genio: zgu: i still use xml, and even prefer xhtml5 over HTML5
[18:24:50] <genio> next thing you'll tell me is that you prefer SOAP APIs.  *loads shotgun*
[18:25:39] <shlomif> i also use json, yaml and other formats. right tool for the job
[18:25:57] *** Quits: randir (~randir@93.159.239.42) (Ping timeout: 245 seconds)
[18:26:02] <zgu> i don't understand why they reverted to non-xml for html5 (i know you CAN use xml for html5, but why does the other one exist?)
[18:26:45] <zgu> they add a bunch of new elements, but also go back to making me need an external schema to know that for example <img> doesn't have an end tag
[18:27:08] *** Joins: monkey_ (~user@190.148.252.236)
[18:28:15] <zgu> yaml is probably my favorite, if i want to be human-writable
[18:29:13] *** Joins: randir (~randir@93.159.239.42)
[18:29:47] <Altreus> I have come around on YAML
[18:29:53] <Altreus> I used to have the same objections as I did to python
[18:30:07] <Altreus> But writing JSON is just an exercise in tedium
[18:30:17] <Botje> Altreus: is is the whitespace?
[18:30:24] *** Joins: mattil (~mattil@d49f4hprpmgknpvrp0k-4.rev.dnainternet.fi)
[18:30:27] <shlomif> genio: i didn't work with SOAP a lot
[18:30:29] <zgu> basically the same as json, but you can leave out/replace with newlines some of the punctuation
[18:30:32] *** Joins: jess (~jess@libera/staff/jess)
[18:30:54] <Altreus> Yeah pretty much
[18:31:03] <Altreus> I wanted to say something about line endings but I don't recall
[18:31:11] <Altreus> Might have just forgotten what my problem was :)
[18:31:25] <Altreus> editors guessing at what I mean is kind of frustrating
[18:33:03] *** Joins: gggp_ (~gggp@60.10.194.46)
[18:33:22] *** Quits: gggp_ (~gggp@60.10.194.46) (Remote host closed the connection)
[18:33:51] *** Joins: gggp_ (~gggp@60.10.194.46)
[18:34:22] *** Quits: monkey_ (~user@190.148.252.236) (Remote host closed the connection)
[18:34:30] *** Quits: mcint (mcint@user/mcint) (Ping timeout: 272 seconds)
[18:35:16] *** Quits: gggp (~gggp@60.10.23.170) (Ping timeout: 256 seconds)
[18:36:27] *** Joins: WinterStar (~IceLight@user/icelight)
[18:42:39] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[18:46:14] *** Joins: mcint (mcint@user/mcint)
[18:46:40] * GumbyPAN CPAN Upload: Coro-Multicore-1.07 by MLEHMANN https://metacpan.org/release/MLEHMANN/Coro-Multicore-1.07
[18:47:20] *** Quits: mattil (~mattil@d49f4hprpmgknpvrp0k-4.rev.dnainternet.fi) (Remote host closed the connection)
[18:49:06] * ilmari is disappointed it's not called multicoro
[18:49:48] <LeoNerd> Heee
[18:50:17] * ilmari ponders filing a bug in RT :D
[18:50:21] *** Joins: gryphn (~gryphon@191.96.106.193)
[18:50:37] <Altreus> I guess I thought the phrase "lehmannware" too many times just now
[18:51:06] <LeoNerd> I thought we recently settled on Lehmannade?
[18:51:13] *** Joins: gggp__ (~gggp@60.10.194.46)
[18:51:16] <Altreus> oh I hope so, since that's mine
[18:51:20] <Altreus> :)
[18:51:42] <Altreus> I was pondering whether "It's Lehmannade" is a sufficient description for a ticket to remove various modules
[18:53:01] <Altreus> Also the Radiohead song "Everything In Its Right Place" has the unfortunate effect of making me think MLEHMANN when they say "a lemon"
[18:53:06] *** Quits: bmeneg (~bmeneg@2804:828:f233:5a4b:7e83:50f:9dc1:719b) (Read error: Connection reset by peer)
[18:53:22] <Altreus> One can understand a foul mood if "yesterday I woke up sucking on MLEHMANN"
[18:53:34] <LeoNerd> Did it force your lute?
[18:53:44] *** Joins: tybalt89 (~rick@2600:8800:8d00:8100:2e0:4cff:fe68:617)
[18:53:48] *** Quits: art1 (~romeyke@p200300ccdf065000f7f366874d4498e8.dip0.t-ipconnect.de) (Quit: Leaving.)
[18:53:50] <Altreus> That seems like a reference I'm missing
[18:53:57] <LeoNerd> Technology Connections
[18:54:03] <Altreus> oh I know him
[18:54:16] <LeoNerd> He found it as a weird phrase in an 18th century article from some scientist,... found it a fun phrase
[18:54:20] <LeoNerd> he's been trying to use it lately
[18:54:33] *** Quits: gggp_ (~gggp@60.10.194.46) (Ping timeout: 258 seconds)
[18:54:35] <Altreus> ah that's the one that he could find no meaning for when consulting the lamp manual
[18:54:55] <sjn> When life gives you MLEHMANN, make MLEHMANNade?
[18:55:02] <LeoNerd> Yup
[18:55:08] <Altreus> he makes his own ade
[18:55:54] *** Quits: ufobat (~martin@dynamic-077-009-059-078.77.9.pool.telefonica.de) (Ping timeout: 240 seconds)
[18:57:07] *** Quits: horsepatat (~horsepata@80.89.78.47) (Read error: Connection reset by peer)
[18:57:14] *** Quits: tybalt89 (~rick@2600:8800:8d00:8100:2e0:4cff:fe68:617) (Client Quit)
[18:59:30] *** Joins: bmeneg (~bmeneg@2804:828:f233:5a4b:7e83:50f:9dc1:719b)
[18:59:35] *** Quits: v` (~v@user/ctrl) (Ping timeout: 250 seconds)
[19:01:09] <veesh> if he releases more than one module a day, does he get ades?
[19:03:01] *** Joins: mattil (~mattil@d49f4hprpmgknpvrp0k-4.rev.dnainternet.fi)
[19:03:08] <LeoNerd> Altreus: https://www.reddit.com/r/AskHistorians/comments/obzgn0/it_forced_my_lute_a_1739_letter_to_robert_boyle/
[19:03:09] <Paperbot> Link title(s): [ "It Forced my Lute": A 1739 letter to Robert Boyle uses this phrase to describe the effects of di... ]
[19:06:30] *** Quits: randir (~randir@93.159.239.42) (Remote host closed the connection)
[19:06:35] <ilmari> argh, why is it so hard to browse comments ond reddit?
[19:07:06] *** Quits: mattil (~mattil@d49f4hprpmgknpvrp0k-4.rev.dnainternet.fi) (Ping timeout: 240 seconds)
[19:07:31] <ilmari> "show me the entire conversation (8 comments)" -> shows two, with "continue this thread ->" shows another two
[19:08:29] <ilmari> "show parent comments" -> shows entire thread of four comments. where are the remaining three (in addition to the big pinned automoderator comment)?
[19:11:20] <mjgardner> New blog post on porting a Moo class to Object::Pad: https://phoenixtrap.com/2021/08/03/whats-next-oo-perl/
[19:11:20] *** Quits: N4buc0 (~N4buc0@2001:1284:f013:cc94:5d29:e775:49c0:ee3) (Quit: Leaving)
[19:11:22] <Paperbot> Link title(s): [ What's Next for Object-Oriented Perl? - The Phoenix Trap ]
[19:18:40] <Grinnz> ilmari: this is why i use oldreddit still
[19:19:19] <Grinnz> (and props to reddit for not removing that option to spite its users)
[19:20:15] <ilmari> Grinnz: ah, I forget about s/www/old/
[19:20:46] <Grinnz> the two downsides of oldreddit is that its markdown parser doesn't understand codefences which people use a lot (since newreddit understands it) and there's no dark mode
[19:21:35] *** Joins: gggp_ (~gggp@60.10.194.46)
[19:22:40] <LeoNerd> What's a "codefence"?
[19:23:23] <Botje> i'm guessing ``` foo ```
[19:23:46] <Altreus> ah, a lute!
[19:24:40] * LeoNerd ponders on the subject of a lutebox
[19:24:50] *** Quits: gggp__ (~gggp@60.10.194.46) (Ping timeout: 258 seconds)
[19:25:13] <Altreus> no
[19:25:31] <Botje> lutefisk for the lutefisk god
[19:26:45] <ilmari> mjgardner: couldnt the `$dsn //= ...` inside the `ADJUST` just be a default value for it?
[19:27:12] *** Quits: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[19:27:17] <ilmari> just writing out the DSN instead of the join incantation is shorter
[19:29:17] *** Joins: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[19:30:22] *** gggp_ is now known as gggp
[19:35:31] <Altreus> Alastair "Altreus" Douglas doesn't work nearly as well as Curtis "Ovid" Poe
[19:35:55] <Altreus> Maybe I should have just adopted a name like Homewrecker
[19:36:04] <mjgardner> ilmari: Sure. I'll add that once I can get back to hacking on it.
[19:37:10] <revhippie> Altreus: "The Destroyer" ?
[19:37:58] *** Joins: thrig (~thrig@65.113.153.50)
[19:38:59] <Altreus> Alastair "Technically A" Douglas
[19:40:45] *** Quits: GEttR (~GEttR@user/gettr) (Ping timeout: 250 seconds)
[19:42:18] *** Joins: Su-Shee_ (~Susanne@p4ff499c0.dip0.t-ipconnect.de)
[19:44:10] *** Quits: Su-Shee (~Susanne@p4ff497f4.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[19:47:20] <veesh> Avishai "Veesh" Goldman has a good ring
[19:47:47] <thrig> Audio/Visual Goon?
[19:48:20] <Altreus> Sounds like a term AV nerds would use for themselves
[19:48:31] <thrig> you are the goon squad!
[19:49:22] *** Quits: krismatrix (~krismatri@38.80.149.51) (Ping timeout: 258 seconds)
[19:49:56] <ilmari> Dagfinn Ilmari Mannsåker (no quotes, it's my actual second given name)
[19:50:07] <ilmari> (_not_ middle name)
[19:51:36] <veesh> i wish i knew how to pronounce that
[19:54:02] *** Joins: monkey_ (~user@168.194.72.201)
[19:54:41] <xenu> Grinnz: i find it extremely hard to believe that making both markdown parsers compatible is hard, so it's clear they're making that on purpose
[19:55:00] <xenu> and i'm sure that old reddit experience will be progressively getting worse
[19:55:08] <xenu> it already is
[19:55:24] <xenu> you need to use new reddit to accept cookies
[19:56:17] <xenu> polls are crippled on new reddit etc
[19:56:29] <xenu> er, s/new/old/
[19:56:35] <xenu> it's sad
[19:57:56] <Altreus> My wife has two first names
[19:57:59] <Altreus> With a space
[19:58:08] <Altreus> Most places do not distinguish so it's a middle name now
[19:58:08] <thrig> DROP TABLE ...
[19:58:18] <Adura> Beth Jane
[19:58:40] <Altreus> I suppose I have two first names, although it was a long time before I learned Douglas was a given name as well
[20:00:13] <zgu> little bobby tables
[20:01:07] *** Quits: jplesnik (~jplesnik@nat-pool-brq-t.redhat.com) (Quit: Leaving)
[20:01:09] <mjgardner> ilmari: Fixed
[20:01:16] <gordonfish> zgu: Beat me to it
[20:01:48] * GumbyPAN CPAN Upload: Dist-Zilla-Plugin-Libarchive-0.02 by PLICEASE https://metacpan.org/release/PLICEASE/Dist-Zilla-Plugin-Libarchive-0.02
[20:02:11] * ology .oO(We are the goon squad and we're coming to town - beep beep)
[20:02:39] <gordonfish> Altreus, Adura: I've seen people just use a hyphen in betweem to connect them in cases like that
[20:02:49] <Adura> Yup
[20:03:02] <ilmari> but they are two separate names
[20:03:15] <gordonfish> I have sometimes wondered where multi-first names come from like that (where they are separate names but not middle names.)
[20:03:20] <ilmari> I just put them both in the first name box and accept that people address me by the first one, even though I sign off with the second one
[20:03:38] <thrig> could be worse, see the "Tale of Genji" where characters (now) have names after certain chapters they appear in
[20:04:06] <ilmari> at work I've actually dropped the first one from the global directory, to avoid confusion
[20:04:27] <gordonfish> There was also be Bejorans in DS9 that had sirnames first and given names last.
[20:05:01] <Altreus> I had a friend at school whose given name was William Gary
[20:05:05] <Altreus> His brother was William Thomas
[20:05:37] <Altreus> I understand that parents feel the need to prove that their decision to reproduce is notably different from everyone else's but that must be highly inconvenient
[20:05:48] <gordonfish> William Thomas Riker?
[20:05:49] <Altreus> Some conventions are best followed
[20:07:35] <gordonfish> Most people tend to go be one of the given names or the other though, did William Thomas just go by Thomas or Tom or ?
[20:07:45] <Altreus> Yeah they were Gary and Thomas
[20:07:53] <Altreus> But bureaucratic forms don't care
[20:08:11] <Altreus> Systems would, eventually, decide they were both called William
[20:08:20] <gordonfish> Oh yeah forms like that would be a pain
[20:08:33] <Altreus> This is not the sort of confusion you want to invite on your children just because you want to stand out among the yuppies
[20:08:59] <gordonfish> Could write it as 'Thomas, William' and 'Gary, William' for the first name field.
[20:09:06] <Harzilein> Grinnz: i don't read much code reddits (actually i don't read reddit much at all) but the relatively aggressive browser extension for dark mode works great on oldreddit
[20:09:43] <gordonfish> Yeah I prefer old.reddit.com as well
[20:09:50] <gordonfish> Much less bloated
[20:10:03] <revhippie> Used to know a guy with five names, two of which were "Chainsaw" and "Fencepost."  His parents had... ideas.
[20:10:37] <gordonfish> I do more reddit reading with the 'Sync' app (yeah that's its name) on my phone 
[20:11:29] <gordonfish> revhippie: Where his parents a lumber jack and carpenter?
[20:12:02] <gordonfish> Those name choices are rather wooden
[20:12:16] <revhippie> gordonfish: they just wanted something unique.  which was a shame, because his full name scanned perfectly with "John Jacob Jingleheimer Schmidt".
[20:12:25] <thrig> gordonfish: I have nothing to adz
[20:12:47] <Altreus> Personally I'm axing myself a lot of questions
[20:13:04] <thrig> I saw that one coming
[20:13:34] <Altreus> Don't take offence
[20:13:37] <mjgardner> My mom's first name is Mary Jean, but she often just goes by Jean to avoid issues.
[20:14:12] <Grinnz> I was going to say, Mary Jane and similar names are an example of two-first-names taht's common in English
[20:14:40] <Altreus> American for sure. Not sure how common it is in the UK.
[20:14:48] <Grinnz> I technically have two last names, but nothing knows what that means so I have never used one of them
[20:14:50] <Altreus> Essex notwithstanding
[20:15:01] <gordonfish> I knew a Mary Louise in high school
[20:15:18] <Altreus> Seems to me that "first" and "last" are ordinals, not subject to the whims of technicalities
[20:15:21] <gordonfish> Also a Mary Beth somewhere
[20:15:28] <Grinnz> Altreus: ok, two surnames
[20:15:31] <Altreus> If your given name is Mary Jane then your first name is Mary
[20:15:37] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[20:15:45] <Altreus> Well this is why forms should be clearer with which name they want :)
[20:15:48] <monkey_> Where I live everyone has two "first" names, it's weird when people only have one name
[20:15:51] <Altreus> Ideally, just "all of it"
[20:16:14] <Altreus> "second name" and "middle name" were interchangeable when I was a kid
[20:16:29] <Altreus> No wonder Tom Scott made a video
[20:17:27] <gordonfish> How does two sirnames work? I thought, at least in thr case of merrage, it was more common to make the original/maiden name a middle name with a new name pushed to the end (yes I know in this day and age people do it all sorts of ways now.)
[20:18:14] <gordonfish> Altreus: Yeah with a world wide scope you can't go by one standard
[20:18:15] <Grinnz> my mom didn't change her surname, so i have both
[20:18:49] <Altreus> When I got married we merged our surnames instead of succumbing to patriarchal expectations
[20:18:58] <Altreus> When I got divorced that was an utter pain in the arse
[20:19:05] <Grinnz> oof
[20:19:12] <Altreus> But we hyphenated them so it was still one name
[20:19:32] <LeoNerd> Naming is hard
[20:19:43] <thrig> and so is cache coherency
[20:19:59] <Altreus> This time my wife wanted to start afresh so she took my surname, but a friend of mine and his wife have their maiden names
[20:20:25] <Harzilein> monkey_: i think i watched that trump ramp thing... with that military academy... it wasn't the "name whatever the third" (i think some even "the fourth"?) people who stuck out but those without a middle name.
[20:20:33] <thrig> maybe it should be a blockchain hash id instead of a name?
[20:20:33] <Harzilein> monkey_: in their ceremony.
[20:20:54] <Altreus> I don't have a name, just an NFT
[20:21:13] <Altreus> the implications of that are distressing
[20:21:18] <Altreus> think no further
[20:21:23] <Grinnz> of course it's the people who always specify their middle name you have to watch out for
[20:21:29] <gordonfish> I'd rather have a crazy name than just some number.
[20:21:51] <Altreus> I am not a number
[20:22:55] <Altreus> actually I am 27422320132191603
[20:22:59] <Altreus> in lowercase
[20:22:59] <monkey_> thrig: agree, everyone should have a blockchain hash instead of a name 
[20:24:38] <thrig> and weather balloons summoned when they get out of line
[20:25:38] <veesh> i was considering changing my middle name to danger
[20:25:49] <gordonfish> Altreus: At least it isn't 1-9-8-4
[20:27:45] <Altreus> Was expecting someone to look up Magneto's tattoo
[20:29:21] * veesh shudders
[20:29:46] *** Joins: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de)
[20:30:57] *** Quits: habamax (~habamax@user/habamax) (Ping timeout: 245 seconds)
[20:35:31] *** Quits: Manderson (~manderson@047-028-019-189.res.spectrum.com) (Remote host closed the connection)
[20:35:57] *** Joins: Manderson (~manderson@047-028-019-189.res.spectrum.com)
[20:41:11] *** Joins: gggp_ (~gggp@60.10.194.46)
[20:41:38] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:41:53] * GumbyPAN CPAN Upload: pyperl-1.0.3 by SHLOMIF https://metacpan.org/release/SHLOMIF/pyperl-1.0.3
[20:42:16] *** Quits: gggp (~gggp@60.10.194.46) (Ping timeout: 258 seconds)
[20:44:46] *** Joins: gggp__ (~gggp@60.10.194.46)
[20:45:44] *** gggp__ is now known as gggo
[20:45:48] <mjgardner> LeoNerd: On Reddit we're noting that examining a slot value without a reader in the debugger is quite a mouthful. https://www.reddit.com/r/perl/comments/ox44ao/whats_next_for_objectoriented_perl/h7kc8d7
[20:45:49] <Paperbot> Link title(s): [ What’s Next for Object-Oriented Perl? : perl ]
[20:46:13] <mjgardner> E.g., `Object::Pad::MOP::Class->for_class('ClassName')->get_slot('slot_name')->value($object)`
[20:46:56] <LeoNerd> Yes. You're gutwrenching into an object's internals. Don't do that - it's rude ;)
[20:47:12] <mjgardner> Sometimes when debugging you gotta.
[20:47:33] <LeoNerd> How would you prefer to spell it?
[20:47:55] *** Quits: gggp_ (~gggp@60.10.194.46) (Ping timeout: 250 seconds)
[20:48:10] <mjgardner> It would be nice if it were just as easy as referring to it in a method, e.g., `$slot`.
[20:48:18] <LeoNerd> Isn't it?
[20:48:54] *** Joins: mattil (~mattil@62-113-176-119.bb.dnainternet.fi)
[20:49:16] <haj> For Corinna I'd hope that the debugger itself offers a decent syntax to do that stuff behind the scenes.  "$slot" needs a concrete object to work on.
[20:49:46] <LeoNerd> If you can see lexicals in scope in the current sub, you should be able to see the slots that *that particular method* has bound
[20:49:52] <LeoNerd> Because they are just lexicals
[20:50:51] <mjgardner> I see.
[20:53:33] *** Quits: mattil (~mattil@62-113-176-119.bb.dnainternet.fi) (Ping timeout: 250 seconds)
[20:54:40] <mjgardner> It's just annoying that I can see the object's slot right there in the code but I can't get to it unless it has a reader.  https://www.irccloud.com/pastebin/hDUCKBcO/
[20:54:41] <Paperbot> Link title(s): [ Snippet | IRCCloud ]
[20:54:53] <pragma-> Grinnz: if you're using reddit without RES you're gonna have a not-as-good time
[20:55:23] <LeoNerd> That may be a bug
[20:55:29] <LeoNerd> Honestly, I know nobody who -uses- the debugger
[20:55:41] <thrig> besides mjgardner?
[20:55:49] *** Joins: toretto (~0xe3b7@user/toretto)
[20:55:52] <LeoNerd> I've never touched it.. I don't imagine almost anyone makes a habit of even touching it, let alone testing that things work with it
[20:55:53] <mjgardner> I'm a big fan.
[20:55:53] *** Joins: Linux77 (~kvirc@187-126-71-30.user3p.veloxzone.com.br)
[20:56:05] <LeoNerd> If it can see lexicals in scope then it ought to be able to see these values
[20:56:42] <LeoNerd> Try   class C { has $slot = 123; method m { my $lex = $slot;  # breakpoint here } }    and see what is visible
[20:56:43] <Grinnz> pragma-: i don't use third party website extensions
[20:57:05] * haj also uses the debugger occasionally
[20:58:12] <LeoNerd> I guess I just find that "print stuff to STDERR/fprintf to stderr/toggle GPIO line to blink an LED" quite sufficient for about 95% of debug cases
[20:58:30] <LeoNerd> And the remaining 5% are usually so weird and custom that I basically end up building tooling around it anyway
[20:58:36] *** Joins: GEttR (~GEttR@user/gettr)
[20:58:56] <thrig> it's fun when gdb crashes
[20:58:56] <LeoNerd> across any of Perl, perl core in C, other C on computer, C on MCU, ...
[20:59:08] <LeoNerd> gdb gdb
[20:59:20] <thrig> and then that crashes
[20:59:32] <LeoNerd> So I did once actually point Devel::MAT at the pmat shell
[20:59:34] <LeoNerd> That was not fun
[21:00:22] <mjgardner> LeoNerd:  https://www.irccloud.com/pastebin/U9LgyAJd/
[21:00:23] <Paperbot> Link title(s): [ Snippet | IRCCloud ]
[21:00:41] <pragma-> Grinnz: RES is absolutely phenomenal in improving the Reddit experience a hundred-fold, imo.
[21:00:43] * pragma- shrugs.
[21:00:55] <pragma-> plus it has darkmode
[21:01:03] <pragma-> and probably the code thingies
[21:01:03] <LeoNerd> mjgardner: Huh.. that is most odd
[21:01:27] <thrig> w3m has dark mode everywhere
[21:01:31] <LeoNerd> At that point I'd be tempted to ask how the debugger finds those pad slots.. whether it is looking at the real ones or the fake outside ones that don't quite exist
[21:01:35] <LeoNerd> Any way to ask it?
[21:01:56] * GumbyPAN CPAN Upload: Playwright-0.012 by TEODESIAN https://metacpan.org/release/TEODESIAN/Playwright-0.012
[21:05:29] *** Joins: gggp_ (~gggp@60.10.194.46)
[21:05:49] <mjgardner> If I do the y command to list all lexicals I get this, so that's something: https://www.irccloud.com/pastebin/Vd1j1E32/
[21:05:49] <Paperbot> Link title(s): [ Snippet | IRCCloud ]
[21:06:44] <LeoNerd> Hmmm but it doesn't think the $slot lexical is set
[21:07:05] <LeoNerd> Is it actually seeing that the lexical exists? Would it show different for some other name that doesn't even exist/
[21:07:10] <mjgardner> I'm looking in perldebug and perldebguts to see if there are any other clues.
[21:07:31] <LeoNerd> It may be that I just need to set some PadnameFLAG or somesuch to tell it it's a real live lexical
[21:07:41] <LeoNerd> oooh.. I bet the debugger is upset about the seqnums
[21:08:09] <mjgardner> No, if I try to examine a lexical that isn't there it just says `undef`.
[21:08:20] *** Quits: gggo (~gggp@60.10.194.46) (Ping timeout: 258 seconds)
[21:08:25] <LeoNerd> Righty. So I suspect it's more that it doesn't believe the lexical _exists_, than that it just doesn't have a value
[21:08:45] <LeoNerd> Which would suggest seqnums
[21:08:58] <Altreus> Ah, you've seqfaulted the debugger
[21:09:06] *** Quits: meatbot (~meatbot@perlbot/bot/meatbot) (Ping timeout: 240 seconds)
[21:09:18] <mjgardner> Going above my knowledge here
[21:09:44] *** Quits: metabot (~metabot@perlbot/bot/metabot) (Ping timeout: 272 seconds)
[21:09:55] <mjgardner> Wish that Perl internals Kickstarter course had come to fruition
[21:10:09] <LeoNerd> The pad exists just once for an entire function, not per scope. So for instance in   sub f { my $y; { my $x } { my $x } }  perl has to have some way to know what lexicals are valid when
[21:10:22] <LeoNerd> `$y` is valid in the entire body, but there are two `$x`s with different scopes
[21:10:26] <Altreus> Obvious question is why
[21:10:43] *** Quits: simcop2387 (~simcop238@perlbot/patrician/simcop2387) (Ping timeout: 265 seconds)
[21:10:49] <Altreus> Surely creating a pad per scope is not out of the question, considering the function is already a subpad of the file
[21:10:56] *** Quits: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot) (Ping timeout: 272 seconds)
[21:11:00] <LeoNerd> It does this by a start/end sequence number... each statement in the optree gets an increasing number, and each entry on the pad has a start/end number to say when it is valid. So we'd be able to tell which `$x` is valid at which time
[21:11:12] *** Quits: perldoc (~perldoc@71.76.76.1) (Ping timeout: 265 seconds)
[21:11:39] <LeoNerd> Once the code is compiled, those numbers are basically uninteresting ((except if we have a string eval() which is just evil)); at runtime they're not used. So since I'm doing evil things around the compiler, I don't bother to set them on the pad entries for slots
[21:12:05] <LeoNerd> I suspect the debugger is looking at those numbers to work out which lexicals are valid, and since I don't set them, it doesn't think any of them are
[21:12:45] <djerius> is there a preferred YAML module?  or a front end which allows specifying boolean behavior consistently between backends?  I'm lost between YAML, YAML::Any, YAML::XS, YAML::PP.  
[21:13:02] <LeoNerd> perlbot: YAML
[21:13:16] * LeoNerd pokes perlbot with a stick
[21:13:28] <LeoNerd> Hrm... I think I need a bigger stick
[21:13:43] <djerius> Too confusing for perlbot?
[21:13:46] <thrig> pretty sure I ended up changing YAML with some regex instead of a module (which would randomly change or reorder the Ansible config in wacky ways)
[21:13:47] <mjgardner> LeoNerd: If you get this sussed out I will be… more grateful to you than I already am.
[21:14:24] <LeoNerd> Ohgod getting YAML to preserve order on load/edit/dump is annoyingly nontrivial
[21:15:01] <LeoNerd> mjgardner: I can blink-write code but either you'll have to test edits I make to it for me, or you'll have to explain how I can recreate that test
[21:15:04] <LeoNerd> *blind-write
[21:15:35] <mjgardner> LeoNerd: Sure, I can write up a test scenario.
[21:15:41] <LeoNerd> :)
[21:15:54] <djerius> perlbot: help
[21:15:55] *** Joins: e1f (~user@141.117.1.189)
[21:16:00] *** Joins: Pali (~pali@user/pali)
[21:16:04] *** Quits: bit4bit (~bit4bit@190.128.123.78) (Ping timeout: 272 seconds)
[21:16:08] <djerius> Methinks perlbot is on vacation at the mo.
[21:16:23] <thrig> it is August
[21:16:39] <Altreus> Probably doesn't help that Perl doesn't care for hash ordering
[21:17:00] <djerius> if perlbot is in the US, it doesn't get August off.
[21:17:01] <thrig> older versions do (whoops CVE)
[21:17:40] <mjgardner> LeoNerd: I will get on it right after lunch.
[21:18:27] <LeoNerd> :)
[21:19:16] <thrig> lunch scrubbed due to NASA concerns over the onion-rings
[21:20:25] <Harzilein> hmm
[21:20:37] <Harzilein> that moo.pl example in POE::Component::IRC
[21:20:50] <Altreus> eek
[21:20:52] <Harzilein> it uses a lexical for the session cookie
[21:20:56] * Altreus runs
[21:21:04] <Harzilein> did that use to work?
[21:21:27] <Harzilein> i'd be supposed to have a heap object for things like that, right?
[21:21:57] * GumbyPAN CPAN Upload: AsposeCellsCloud-CellsApi-21.7 by ASPOSE https://metacpan.org/release/ASPOSE/AsposeCellsCloud-CellsApi-21.7
[21:26:22] <thrig> maybe it's just buggy
[21:27:20] <LeoNerd> Actually I suspect this is also currently broken for string-eval() inside methods, and therefore if it indeed is, then a fix for that probably fixes debugger as well
[21:27:46] <alh> https://gist.github.com/wolfsage/6720189f26a1e4543d9320322e1c6473
[21:27:46] <Paperbot> Link title(s): [ PadWalker with Object::Pad · GitHub ]
[21:27:48] <alh> It's PadWalker
[21:29:25] <LeoNerd> Yes another demonstration there
[21:29:37] <alh> (This is where the debugger gets the my vars for the y command)
[21:29:41] <mjgardner> LeoNerd: Here's some help on testing in the debugger: https://gist.github.com/mjgardner/88d459868de5bbdb680abe2f42390456
[21:29:42] <Paperbot> Link title(s): [ object_pad_slot_debugging_scenario.md · GitHub ]
[21:31:37] <LeoNerd> And already I find that the eval() test indeed currently fails. Let me see if I can fix that. I suspect if it works for eval() it'll work for anything else here
[21:31:39] *** Quits: monkey_ (~user@168.194.72.201) (Read error: Connection reset by peer)
[21:32:27] <LeoNerd> https://rt.cpan.org/Ticket/Display.html?id=138399 -- for those following along at home
[21:32:28] <Paperbot> Link title(s): [ Bug #138399 for Object-Pad: Slots aren't visible to string eval() <https://rt.cpan.org/Public/Bug/Display.html?id=138399> ]
[21:40:31] <ilmari> LeoNerd: I just recommended we use Test::ExpectAndCheck instead of Test::Mock(Module|Object) at work :D
[21:40:45] <ilmari> (for a new test, not wholesale replacing existing uses)
[21:41:05] <LeoNerd> Woo :)
[21:41:24] <LeoNerd> Let me know how that goes. I've used it a lot in one module and not anywhere else, so it only has quite niche usage so far
[21:41:31] <LeoNerd> There's likely things to add/change about it
[21:41:34] *** Joins: gizmomathboy (~gizmomath@206.127.53.107)
[21:41:59] * GumbyPAN CPAN Upload: Mojo-Leds-1.03 by EBRUNI https://metacpan.org/release/EBRUNI/Mojo-Leds-1.03
[21:41:59] * GumbyPAN CPAN Upload: Mojolicious-Plugin-AutoRoutePm-0.18 by EBRUNI https://metacpan.org/release/EBRUNI/Mojolicious-Plugin-AutoRoutePm-0.18
[21:42:50] *** Quits: shlomif (~shlomif@87.68.242.72.adsl.012.net.il) (Ping timeout: 256 seconds)
[21:42:56] *** Joins: mattil (~mattilinn@62-113-176-119.bb.dnainternet.fi)
[21:44:40] <Altreus> what's this now
[21:44:48] <Altreus> A better option than Test::MockModule?
[21:49:06] *** Joins: gggp__ (~gggp@60.10.194.46)
[21:49:53] <ilmari> a more declarative way to assert assert expectations and provide return values for a mocked object 
[21:50:14] <ilmari> -assert
[21:52:00] * GumbyPAN CPAN Upload: Dist-Zilla-Plugin-ArchiveTar-0.02 by PLICEASE https://metacpan.org/release/PLICEASE/Dist-Zilla-Plugin-ArchiveTar-0.02
[21:52:25] *** Quits: gggp_ (~gggp@60.10.194.46) (Ping timeout: 258 seconds)
[21:52:29] *** Joins: gggp (~gggp@60.10.194.46)
[21:54:58] *** Quits: gggp__ (~gggp@60.10.194.46) (Ping timeout: 268 seconds)
[22:01:14] *** Joins: EGD (~egd@user/egd)
[22:01:45] *** Joins: gggp_ (~gggp@60.10.194.46)
[22:02:27] *** Quits: gggp_ (~gggp@60.10.194.46) (Remote host closed the connection)
[22:02:48] *** Joins: gggp_ (~gggp@60.10.23.170)
[22:03:45] *** Quits: gggp (~gggp@60.10.194.46) (Ping timeout: 250 seconds)
[22:09:46] *** Joins: gggp__ (~gggp@60.10.194.46)
[22:12:52] *** Quits: gggp_ (~gggp@60.10.23.170) (Ping timeout: 256 seconds)
[22:17:39] <buu> Unrelated, anyone have any recommendations for some kind of virtual pbx? I want to port a phone number used for business and have like, the ability to control where the call is forwarded to when and have maybe a minor ivr or something
[22:18:02] *** Quits: pekster (~rewt@user/pekster) (Quit: "When choosing between two evils, I always like to take the one I've never tried before.")
[22:18:29] *** Quits: tcohen (~tcohen@192.141.149.64) (Ping timeout: 258 seconds)
[22:20:23] <Grinnz> Altreus: past conversation mentioned that Test::MockModule is horribly hacky and better options include Sub::Override and Mock::MonkeyPatch
[22:20:29] <Grinnz> and there was another one
[22:23:01] *** Joins: thunder (~thunder@user/thunder)
[22:23:54] <veesh> Test2 has a good mocking module
[22:24:30] <Grinnz> ah yes, ExpectAndCheck was the other one
[22:24:57] <ilmari> LeoNerd wrote Test::ExpectAndCheck because none of them support the expect/check pattern, you need to do that yourself in the mocked methods
[22:27:33] *** Joins: magla (~gelignite@55d4b7f5.access.ecotel.net)
[22:29:02] <buu> someone
[22:29:07] <buu> implement my perl language server
[22:29:12] <buu> I'll give them a shiny nickel
[22:29:15] <buu> I found it under my couch
[22:29:41] <buu> Maybe we could do a kick starter
[22:30:04] <jdv> at $work lots of tests are littered with the comments "// arrange...// act...// assert".  thanks rando php dev for cargo culting uselessness:)
[22:31:00] <jdv> i'm surprised i haven't found "// get input...// compute...// put output" somewhre yet
[22:31:12] *** Joins: meatbot (~meatbot@perlbot/bot/meatbot)
[22:31:42] *** Joins: metabot (~metabot@perlbot/bot/metabot)
[22:32:12] *** Joins: perldoc (~perldoc@2603-6080-3108-088d-18fc-1230-0f1a-2f6b.res6.spectrum.com)
[22:32:42] *** Joins: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot)
[22:32:42] *** ChanServ sets mode: +v perlbot
[22:33:12] *** Joins: simcop2387 (~simcop238@perlbot/patrician/simcop2387)
[22:37:05] * GumbyPAN CPAN Upload: Dist-Zilla-Plugin-Libarchive-0.03 by PLICEASE https://metacpan.org/release/PLICEASE/Dist-Zilla-Plugin-Libarchive-0.03
[22:37:27] <gordonfish> jdv: Any "Hello World" in there?
[22:37:47] <gordonfish> I once saw someone put a citation source for that.
[22:39:19] *** Joins: KnoP (~KnoP@HSI-KBW-046-005-017-012.hsi8.kabel-badenwuerttemberg.de)
[22:40:37] <gordonfish> That's right, they gave credit for hello world.
[22:41:21] <gordonfish> (I think this was back in VB6)
[22:42:05] * GumbyPAN CPAN Upload: Dist-Zilla-Plugin-ArchiveTar-0.03 by PLICEASE https://metacpan.org/release/PLICEASE/Dist-Zilla-Plugin-ArchiveTar-0.03
[22:44:03] <mst> LeoNerd: right, it's designed for use inside a synchronous program
[22:44:25] <mst> LeoNerd: I wrote it for lacey to use and never got around to expanding the docs
[22:46:15] *** Joins: Trigon (~reuben@73.127.1.41)
[22:47:49] *** Joins: pekster (~rewt@user/pekster)
[22:47:50] <jdv> gordonfish: not yet
[22:53:27] *** Quits: ABLomas (abl@78-58-248-227.static.zebra.lt) (Ping timeout: 245 seconds)
[22:54:34] <simcop2387> sorry for any perlbot instability.  i'm maxing out the io right now copying data around after recovering some hard drives
[22:55:21] <simcop2387> system load is at 60+ because i'm using zfs dedupe temporarily for that dataset
[22:55:57] *** Quits: deadmarshal (~deadmarsh@95.38.228.142) (Ping timeout: 245 seconds)
[22:55:57] <simcop2387> and heavy vompression
[22:57:07] * GumbyPAN CPAN Upload: Dist-Zilla-PluginBundle-Author-Plicease-2.68 by PLICEASE https://metacpan.org/release/PLICEASE/Dist-Zilla-PluginBundle-Author-Plicease-2.68
[22:57:07] * GumbyPAN CPAN Upload: Term-UI-0.48 by BINGOS https://metacpan.org/release/BINGOS/Term-UI-0.48
[22:58:21] *** Quits: gggp__ (~gggp@60.10.194.46) (Ping timeout: 258 seconds)
[23:01:47] *** Walex is now known as Walex_away
[23:01:47] *** raydiak_ is now known as raydiak
[23:02:22] *** Quits: e1f (~user@141.117.1.189) (Quit: brb...server needs rebooting...)
[23:13:48] *** Quits: Murray7501 (~Murray@89.109-247-180.customer.lyse.net) (Quit: leaving)
[23:26:10] <ehuelsmann[m]> Hmm. If Object::Pad isn't blessed-hashref based, do we need a second variant of Role::EventEmitter and all other roles that were factored out of other frameworks because they were somewhat useful in a standalone setting?
[23:26:58] <LeoNerd> Likely just write that as an Object::Pad role, indeed
[23:27:10] * GumbyPAN CPAN Upload: Data-Table-Text-20210730 by PRBRENAN https://metacpan.org/release/PRBRENAN/Data-Table-Text-20210730
[23:27:10] * GumbyPAN CPAN Upload: Pg-Explain-1.13 by DEPESZ https://metacpan.org/release/DEPESZ/Pg-Explain-1.13
[23:27:23] <LeoNerd> mjgardner: patch, likely fixes your issue:  https://rt.cpan.org/Transaction/Display.html?id=2061784
[23:27:24] <Paperbot> Link title(s): [ Public Bug Tracker <https://rt.cpan.org/Public/> ]
[23:27:50] <ehuelsmann[m]> ok. works for me; just making sure.
[23:28:05] <mst> oh, it's Role::Tiny so it pokes at $self directly
[23:28:07] * mst sulks
[23:28:24] <mst> Moo has pluggable accessor generators, it could handle Object::Pad's arrayref storage fine if you let it
[23:28:34] <ehuelsmann[m]> or we teach Role::Tiny about Object::Pad?
[23:28:48] <mst> ehuelsmann[m]: that's impossible
[23:28:58] <mst> I just said you could teach Moo::Role about it just fine though
[23:30:24] <ehuelsmann[m]> ok. Then all Moo roles could be re-used as Object::Pad roles? That'd be great, actually.
[23:32:11] * GumbyPAN CPAN Upload: File-Rename-1.29_05 by RMBARKER https://metacpan.org/release/RMBARKER/File-Rename-1.29_05
[23:34:52] <LeoNerd> There's probably something fancy that can be done one way or other there, yes
[23:35:14] <mst> the code for arrayref handling is in the Moo test suite
[23:37:00] <mst> though we'd presumably need some finagling to tell Object::Pad we'd allocated extra slots
[23:37:18] <mst> might be easier to write a Variable::Magic based Moo accessor so Object::Pad doesn't need to know about the Moo attributes at all
[23:38:46] *** dilfridge is now known as statler_waldorf
[23:41:28] <ehuelsmann[m]> Ok. I'll concentrate on (re)writing Workflow for now and add that to my todo list for later.
[23:42:16] <thrig> you might have a problem if the todo list causes gravitational lensing
[23:44:39] *** Quits: Peppard (~quassel@2001:470:1f0b:751:491:7f69:10f8:cc9b) (Quit: No Ping reply in 180 seconds.)
[23:45:31] <perlbot> LeoNerd pasted a new file at https://l.perl.bot/p/7xdlm9 - Object::Pad + PadWalker
[23:45:35] <LeoNerd> alh: ^--
[23:45:49] *** Joins: Peppard (~quassel@2001:470:1f0b:751:a92d:dfdd:ab2a:6c96)
[23:45:55] <LeoNerd> mjgardner: ^-- given theabove, I suspect your usecase should now work too
[23:46:41] *** Quits: thrig (~thrig@65.113.153.50) (Remote host closed the connection)
[23:47:03] *** Joins: krismatrix (~krismatri@38.80.149.51)
[23:47:28] <krismatrix> Is there a way to get input and chomp combined?
[23:47:48] <LeoNerd> chomp( my $thing = ... );
[23:48:23] <krismatrix> ah...thank you.
[23:48:54] <mjgardner> LeoNerd: It doesn't. 😞
[23:50:08] <LeoNerd> Huh, really? That suggests it's doing something -even- more subtle than PadWalker then
[23:50:23] <ehuelsmann[m]> thrig: yes it tends to do that.
[23:50:26] <mjgardner> I should just be able to examine $slot, right?
[23:50:43] <LeoNerd> Slots really should look like normal lexicals, so I guess whatever you can do with normal lexicals
[23:51:00] <LeoNerd> Hence my example with  `my $lex = $slot;`  to make a comparison
[23:51:32] <mjgardner> Yah, and `x $slot` is still returning `0  undef`.
[23:52:03] <LeoNerd> And you're on a perl 5.22 or newer?
[23:52:16] <mjgardner> 5.34.0
[23:52:36] <alh> nice
[23:52:52] <mjgardner> OH WAIT
[23:53:16] <LeoNerd> WFM
[23:53:46] <perlbot> LeoNerd pasted a new file at https://l.perl.bot/p/7fbuwb - Object::Pad + perl -d
[23:54:23] <mjgardner> Dammit, I only did a --dry-run on the patch.
[23:54:27] <mjgardner> It works now with the patch!
[23:54:35] <LeoNerd> You forgot to moisten it
[23:54:48] <mjgardner> 🙂
[23:55:24] <mjgardner> Happy day
[23:55:27] <LeoNerd> Anyone who's ever repaired a bike tyre should be able to tell you, a dry patch ain't gonna stick
[23:55:54] <mjgardner> Yah yah, I feel stupid.
[23:58:09] <LeoNerd> I might take a look at ADJUSTPARAMS sometime soon
