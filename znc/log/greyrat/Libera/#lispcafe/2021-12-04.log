[00:13:57] <gilberth> Next bug: Language settings are foo. Firefox uses a short German date like dd.mm.yy while I (1) I use English and (2) made sure that I setup ISO format for dates, that is yyyy-mm-dd, so that one could actually read that. And exactly why does Firefox believe that using German dates is ok?
[00:14:45] <gilberth> And why German? Why not Chinese for a change?
[00:24:37] <gilberth> Fun is the accounting software we use. One of the few applications I actually want to use "," as a decimal point. The fun part is: It uses "," at some places and "." in other places in unpredictable ways.
[00:25:06] <pjb> It's high time we standardize that worldwide…
[00:25:49] <gilberth> Actually I would prefer "." as a decimal point, but I communicate with normies. Banks, financial advisors and the like.
[00:26:35] <gilberth> pjb: Where can I sign? It's overdue, if you ask me.
[00:26:51] <pjb> That's what I mean. localization only goes so far, it would have been better if we had been less flexible on that, and imposed the dot with the difussion of computers, world wide.
[00:27:10] <pjb> Well, time machine, have a man-to-man talk with Steve Jobs at the right time.
[00:27:13] <shka> try roman time keeping methods
[00:28:45] <shka> selwyn: filmmaker's new album https://www.youtube.com/watch?v=-sFuEY-QMQA
[00:28:46] -ixelp- FILMMAKER - SCREENING PLEXUS [Full Album] - YouTube
[00:28:58] <gilberth> Well in this particular case, as my German business partners expect me to use ",", it should be an option of the application and not a system-wide. And this particular application is inconsistent as it looks at my locale at times and uses "." and has a perhaps hardcoded "," at other. A mess.
[00:29:50] <gilberth> But there is some obscure trick, I don't remember, to actually tell macos to launch this particular application in a different locale.
[00:31:58] <gilberth> And, besides, what shall I do, when some receiver expecting me to use "." wants some numbers of mine? *sigh*
[00:32:24] <pjb> bah, just give the file format specification always.
[00:32:45] <gilberth> That sure works!
[00:35:12] <gilberth> And I could tell Google a gazillion times that I don't want to see German results, it does not respect that.
[00:37:45] <gilberth> amazon.de on the other hand is funny, it actually respects my language preferences, and speaks in English to me. But this time, I don't want machine translated product descriptions. And why does amazon.de translate in the first place? I setup my browser to send the appropriate header saying: "I prefer English, but also could do with German."
[00:44:21] <gilberth> The ISO date format actually made it into DIN 5008, which is national standard or recommendation for the formatting of letters everyone uses here but the ISO date format. You still get puzzled looks, when you dare to use it.
[01:15:37] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 252 seconds)
[01:25:42] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[01:34:53] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 256 seconds)
[01:35:21] <hayley> https://www.youtube.com/watch?v=tkGsEpMLPJg
[01:35:21] -ixelp- Cadence and Cascade Featuring Adrian Belew - YouTube
[01:36:30] *** Joins: aeth (~aeth@user/aeth)
[01:50:30] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Remote host closed the connection)
[01:53:56] <phoe>  ▲
[01:53:58] <phoe> ▲ ▲
[01:54:11] <phoe> good night
[01:57:33] <moon-child> pjb: yes, but I also want that function to run concurrently
[02:04:42] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 268 seconds)
[02:06:28] *** Joins: waleee (~waleee@h-82-196-111-63.NA.cust.bahnhof.se)
[02:24:50] *** Quits: cranium (~cranium@user/cranium) (Quit: Leaving)
[03:09:52] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[03:10:29] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[03:14:04] <aeth> gilberth: Canadian English is often the way to get English with ISO dates these days. e.g. in KDE
[03:14:19] <aeth> Because Canada made ISO 8601 official even though it's probably still not the most common way to write dates there
[03:14:27] <aeth> Ofc, Canadian English is the odd one
[03:14:35] <aeth> It's like 60% American English and 40% Commonwealth English or something
[03:15:35] <aeth> Now, consistent use of decimals, that's harder
[03:18:14] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[03:27:09] <moon-child> ‘60% American English and 40% Commonwealth English’  yep.  We also mix metric and imperial measure units
[03:30:10] <aeth> well, that's just English
[03:30:18] <aeth> even the US mixes metric and imperial
[03:30:26] <aeth> more on the imperial side than Canada, but still a lot of metric
[03:31:11] <aeth> Cooking's in imperial, but who cooks? Otherwise, it's a mix of metric and imperial for food. e.g. Gallons of milk, liters of soda.
[03:31:31] <aeth> Even when packaged food is listed as imperial (metric), there's a good chance that the metric is the nice, round number
[03:32:58] <moon-child> haha, the opposite happens too
[03:33:11] <moon-child> e.g. ice cream comes in something like a 497mL jar
[03:33:45] <aeth> The places where the US is very imperial/customary instead of metric is human weight/height/etc., driving (MPH, MPG, miles, etc.), temperatures (only Fahrenheit unless it's an international broadcast, which will provide both)
[03:34:10] <moon-child> driving is all km, height is ft.  Weight i don't remember
[03:34:22] <moon-child> my oven measures F, but my thermostat measures C
[03:34:24] <aeth> well, the UK uses stones, which are afaik just some multiple of lb
[03:34:36] <moon-child> scanners use dpi
[03:34:58] <aeth> displays use dpi and (diagonal) inches everywhere because the US set those standards ages ago
[03:35:01] <aeth> afaik
[03:35:06] <aeth> and I guess scanners/printers
[03:35:19] * moon-child nods
[03:35:29] <aeth> Printers will use A4 in most of the world, but more of the world uses US Letter over A4 than uses US customary over metric
[03:35:39] <aeth> (The real mess in standards is trains, where there are like 5 standards)
[03:37:52] <aeth> but e.g. pretty much every ruler, measuring tape, etc., in the US that isn't really old will use both metric and imperial
[03:38:09] <aeth> Schools teach both. Science uses metric. Engineering uses imperial. That must be fun.
[03:40:01] <aeth> An interesting bit of trivia is that while the US has always had a decimal currency (unlike the UK), the US finance system wasn't decimal until fairly recently... maybe around the year 2000
[03:40:19] <aeth> they used to use fractions instead of cents or something
[03:43:31] <hayley> https://www.youtube.com/watch?v=WAEes6wZefo
[03:43:32] -ixelp- Sailor's Tale - YouTube
[04:04:01] * hayley uploaded an image: (226KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/CaKTsdBFPmlPmpIigWfwOpAx/this-meme-is-based-on-nothing.png >
[04:04:49] <White_Flame> (technically, the joker movie was the corporations commit violence and no one bats an eye)
[04:05:29] <hayley> The Stirner quote mentions the state though.
[04:06:03] <hayley> "State behavior is an act of violence, and it calls its violence “legal right”; that of the individual, “crime.”"
[04:06:41] <White_Flame> no, it calls its violence "policing"
[04:06:59] <White_Flame> (at least its admitted violence)
[04:07:23] <aeth> usually called something like 'the monopoly on the use of force'
[04:07:23] <White_Flame> but, all organized authority is based on violence
[04:07:29] * hayley decides it was lost in translation
[04:07:39] <White_Flame> just a little nitpick
[04:08:18] <aeth> White_Flame: In particular, a state's territory comes from the right of conquest... which considerably been dialed back post-WW2 to be sort of a status-quo-at-all-costs (but succession sometimes is possible) situation with borders
[04:08:22] <aeth> (the arbitrary borders)
[04:08:26] <hayley> shka: IIRC Clasp goes Lisp -> AST -> Cleavir HIR -> Cleavir MIR -> LLVM
[04:08:28] <aeth> (which is why most wars are civil wars now)
[04:08:47] <White_Flame> but the specificities are the difference between an accusatory whine vs a description of the issue
[04:08:50] <aeth> s/succession/secession/
[04:12:22] <White_Flame> hayley: but I do agree with that quote generally speaking as a description of what makes the state legitimately the state ;)
[04:13:02] <moon-child> hmm.  Point of the US 1st amendment was specifically contra that
[04:13:11] <moon-child> (...doesn’t seem to have worked out that way in practice though)
[04:14:03] <White_Flame> right, because the state cant' be trusted to stay legitimate
[04:14:17] <hayley> https://changelog.com/posts/the-big-idea-around-unikernels
[04:14:25] <hayley> .oO(CLOSOS is just a multi-user unikernel)
[04:14:30] <White_Flame> (for 2 different meanings of the word)
[04:15:00] <aeth> White_Flame: personally, my theory of the state is... «L'état, c'est moi.»
[04:15:13] <aeth> White_Flame: unfortunately, fewer people recognize my claim than Louis XIV's
[04:16:32] <White_Flame> the state still needs to interact with other states, so if all individuals are states it's still the same politics ;)
[04:16:53] <random-nick> hayley: isn't CLOSOS a language-oriented OS?
[04:17:02] <hayley> random-nick: Yes.
[04:17:31] <hayley> (As per Dan Ingalls, it probably isn't an operating system, as the matters of security/encapsulation are moved into the language.)
[04:18:38] <random-nick> I wonder if TempleOS is actually the most popular language-oriented OS
[04:19:24] <White_Flame> do the commodore 64 ROMs count as a BASIC-oriented OS?
[04:19:34] <moon-child> random-nick: google chrome?
[04:20:39] <random-nick> moon-child: while google chrome does feature many things, like compilers, graphical toolkits and device drivers, I still wouldn't call it an OS
[04:21:22] <moon-child> why?
[04:22:18] <random-nick> well, it must run under another OS
[04:22:24] <moon-child> so?
[04:22:50] <random-nick> ...so it has insufficient functionality to be an OS itself
[04:23:13] <aeth> but why would you use Chrome as an OS when you could use Emacs as an OS?
[04:23:38] <moon-child> my bootloader calls into UEFI to do disc i/o.  Would you say it is not a bootloader, because it has insufficient functionality to be a bootloader itself?
[04:24:35] <moon-child> clasp calls into llvm for code generation.  Would you say it is not a compiler, because it has insufficient functionality to be a compiler itself?
[04:24:41] <random-nick> no, since UEFI falls into firmware
[04:25:01] <random-nick> clasp compiles cleavir ir into llvm ir
[04:25:22] <moon-child> 'falls into firmware' so?  It is just utility code that happens to come packaged with the system.  I could as easily write that code myself and not depend on that part of uefi
[04:25:49] <moon-child> (some parts of uefi are 'utility code'.  Some parts are necessary for interacting with the hardware.  It is similar ot libc in that respect0
[04:26:58] <moon-child> ‘clasp compiles cleavir ir into llvm ir’  exactly.  And just as linux is an os that runs under x86+acpi+pci+..., chrome is an os that runs under linux+x+gl+...
[04:27:22] <moon-child> what if I make a firmware implementation of linux?  Does chrome become an os then?
[04:29:00] <random-nick> well, the distinction between firmware and software is often very arbitrary, but uefi is firmware so it's considered to be a part of the hardware
[04:29:16] <random-nick> and even before UEFI, bootloaders used BIOS routines
[04:30:45] <random-nick> chrome isn't an os in that example because it relies on other software to provide OS functionalities
[04:31:08] <random-nick> chromeos is an os, but that's chrome packaged with lower level parts of android
[04:32:02] <random-nick> chrome needs more than just linux, but yes then it would be an OS on a very weird platform
[04:35:44] <moon-child> so what you’re saying is that the existence of certain hardware is what makes something an os or not?  That is certainly valid, but I think it is a strange and not very useful definition
[04:39:42] <hayley> https://www.youtube.com/watch?v=BvLFBHWNUNA
[04:39:42] -ixelp- I'm an Agent (Live 81) - YouTube
[04:47:53] <random-nick> well, if the hardware is more useful by itself then the OS has to do less things
[05:00:22] *** Joins: ln43 (~ln43@user/ln43)
[05:01:06] <ln43> https://youtu.be/fbqHK8i-HdA
[05:01:07] -ixelp- Markus Eder's The Ultimate Run - The Most Insane Ski Run Ever Imagined - YouTube
[05:06:36] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 245 seconds)
[05:11:55] *** Quits: random-nick (~random-ni@87.116.165.83) (Ping timeout: 256 seconds)
[05:15:16] *** Quits: Catie (~user@user/catie) (Quit: switching clients)
[05:32:16] *** Joins: notzmv (~zmv@user/notzmv)
[05:55:51] <gilberth> What the target platform of an OS is, is pretty much irrelevant. Also the amount of things it has to do. Not even the presence or absence of device drivers. Or would you call what DOS or CP/M has device drivers? I'd say no.
[05:58:25] <gilberth> What you however would expect from an OS is, that it provides an abstraction layer above whatever is used to finally access resources for other programs to build upon in a completely hw-independent way.
[05:59:56] <gilberth> Classical operating systems provide an abstraction of access to mass storage, I/O devices, memory and CPU cycles and sometimes in case of time sharing manage concurrent use.
[06:04:34] <gilberth> I believe the nature to provide an environment for third-party programs to be executed at and interfacing to each other, even if that is only a file system, is the most common aspect of what we might call an operating system.
[06:29:37] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[06:35:33] <ln43> A book i liked about OS was written by A.S.Tanenbaum, second one by A.Silberschatz... but there are for sure a lot more
[06:36:10] <ln43> Ok, really i never finished the reading since the examples involved were not so easy for me to understand and replicate in practice
[06:40:29] *** Joins: Catie (~user@user/catie)
[06:40:33] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[06:41:12] <kakuhen> Quick question, when we use DEFCONSTANT, do we use earmuffs for the variables too? I couldn't find anything specific about this in the hyperspec
[06:41:26] <semz> + instead of *
[06:41:30] <kakuhen> Thanks
[06:45:32] <sm2n> These conventions aren't in the hyperspec anyway
[06:45:43] <sm2n> They came later
[06:45:58] <sm2n> You can still find old code that doesn't follow them
[06:46:05] <sm2n> Even in the spec itself
[06:46:47] <sm2n> (what is most-positive-fixnum ?)
[06:56:06] <aeth> and you do sometimes see +foo+ that aren't constant and *foo* that are constant in people's code
[06:56:19] <aeth> because people don't want to break the API when they switch from DEFVAR/DEFPARAMETER to DEFCONSTANT and vice versa
[06:56:27] <aeth> it looks weird
[06:57:04] <aeth> The hyperspec has a lot of things that don't fit the convention, e.g. they have some things like get-foo
[06:57:15] <aeth> while in CL, unlike in most languages, you shouldn't have the get- prefix
[06:57:26] <aeth> (because it's a Lisp-2, so there's less of a need for it
[06:57:27] <aeth> )
[07:03:22] <semz> The *earmuff* convention is actually in the spec for defparameter, under notes. I wonder how old it is?
[07:11:42] <gilberth> Well, *'s are used to mark special variables, because they behave different from lexical variables. Constants are sth different still and you can't accidentally bind PI or MOST-POSITIVE-FIXNUM. And when I see *FOO* I would expect that this is meant to be bound.
[07:12:29] <gilberth> I don't know who came up with +FOO+, but CLIM uses it for all constants.
[07:13:29] *** Quits: waleee (~waleee@h-82-196-111-63.NA.cust.bahnhof.se) (Ping timeout: 252 seconds)
[07:13:36] <gilberth> The earmuffs are relative new, too. MacLISP doesn't use them, and the CADR doesn't either. Don't know about Zetalisp.
[07:15:40] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[07:21:03] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 268 seconds)
[07:21:58] *** Joins: waleee (~waleee@h-82-196-111-63.NA.cust.bahnhof.se)
[07:23:34] <selwyn> let over lambda is against earmuffs
[07:29:05] <hayley> Yes, Let over Lambda is allowed to be wrong. Like how it states CL-PPCRE compiles.
[07:29:17] <hayley> I'm sure the chapters you can only read by buying the book will state that pigs fly too.
[07:30:48] <selwyn> can't sleep again sigh
[07:30:55] <selwyn> i don't like being nocturnal
[07:47:36] <aeth> semz: that suggests that the *earmuff* convention predates the +constant+ convention
[07:48:24] <gilberth> hayley: Pigs do not fly? Dammit.
[07:48:35] <aeth> gilberth: what's that in German?
[07:48:47] <aeth> sounds like it would sound like a fun phrase in German
[07:49:24] <hayley> TIL you can write Solana smart contracts in C. Do they want you to write buggy contracts, or what?
[07:49:30] <hayley> https://docs.solana.com/developing/on-chain-programs/developing-c
[07:50:44] <gilberth> aeth: What what? Stating the implausible? That would be "There is a funfair in the sky."
[07:51:00] <hayley> https://www.youtube.com/watch?v=mPGv8L3a_sY s/Great Gig/Funfair/
[07:51:00] -ixelp- The Great Gig In The Sky - YouTube
[07:52:26] <gilberth> It goes like "blah blah BS blah more BS" "Yeah, and there is a funfair in the sky."
[07:55:11] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 256 seconds)
[08:02:21] *** Quits: ln43 (~ln43@user/ln43) (Quit: Connection closed)
[08:05:25] <semz> aeth: It would make sense if it does. Excluding CL symbols for a moment, is there a good reason why constants couldn't be lexical and shadowable?
[08:05:33] <semz> The only thing I can think of is that CONSTANTP would be more annoying
[08:07:03] <aeth> shadowing any global is complicated because packages can be locked (like CL can be)
[08:07:25] <aeth> I don't think there's any lexical global shadowing by default
[08:07:35] <aeth> some implementations have lexical globals, as an extension
[08:09:23] *** Joins: makomo (~makomo@user/makomo)
[08:10:51] <gilberth> There might be a reason: Macros. A macro may want to refer to a constant and rely upon it be the constant and not some lexical by accident.
[08:11:02] *** Joins: semz_ (~none@user/semz)
[08:12:00] <aeth> macros are already complicated here because you can't just CONSTANTP
[08:12:04] <aeth> iirc there are several things you have to check
[08:12:07] <aeth> maybe 3-4
[08:12:39] <gilberth> What's the trouble with CONSTANTP?
[08:13:05] <semz_> No way to get the actual constant value, for one
[08:13:15] <aeth> gilberth: (constantp 42) => T
[08:13:32] <gilberth> And? That is perfect, isn't it?
[08:13:34] <aeth> So if it's a constant symbol that you want to get the value of, you have to handle it in a special way, distinct from literals
[08:13:47] <aeth> i.e. two distinct constants
[08:13:56] <aeth> constants that you look up in the macro and constants that are literals
[08:14:26] <aeth> (constantp '+foo+) => NIL
[08:14:32] *** Quits: semz (~none@user/semz) (Ping timeout: 252 seconds)
[08:14:36] <aeth> (defconstant +foo+ 42) (constantp '+foo+) => T
[08:14:46] <gilberth> There still is EVAL. It's rather that EVAL lacks an environment argument.
[08:14:55] * hayley uploaded an image: (137KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/nUnLQYrBPAYvYOViNlYkVBKc/federation-mental-gymnastics.jpg >
[08:14:57] <aeth> Symbol literals aren't constant unless there's an associated DEFCONSTANT, while other literals are constant
[08:15:20] <gilberth> And? CONSTANTP can tell you that.
[08:15:47] *** semz_ is now known as semz
[08:16:26] <aeth> gilberth: my point is, you want something like this: (let ((foo '+foo+)) (or (and (symbolp foo) (constantp foo) (symbol-value foo)) (and (constantp foo) foo)))
[08:16:29] <aeth> so it becomes non-trivial
[08:16:54] <aeth> if it's a symbol referring to a constant, the macro looks it up. If it's a literal, it's just taken literally
[08:17:30] * hayley continues to complain
[08:17:31] <gilberth> SYMBOL-VALUE is the first mistake, it could also be a symbol-macro. And I repeat myself, it's EVAL, which is broken here as it lacks an environment argument.
[08:18:00] <gilberth> I mean CONSTANTP talks about forms, SYMBOL-VALUE talks about symbols.
[08:18:30] <hayley> c.f. the image, apparently people think it is a good idea to grift on shit onto a centralised platform in order to allow more community control, rather than just using a decentralised platform to start with.
[08:18:44] <hayley> The great MAKE-INSTANCE in the sky was cheap on intelligence.
[08:19:37] <gilberth> Can it at least fly?
[08:19:46] <hayley> How do I know?
[08:20:14] <gilberth> I hoped you would have been a master.
[08:20:36] <hayley> Very funny.
[08:20:57] <hayley> .oO(Should I be mocking my ex in #lispcafe like this? All signs point to "yes".)
[08:21:26] <hayley> .oO("Yes"? Like <https://www.youtube.com/watch?v=1fUudna1Xuw>?)
[08:21:27] -ixelp- Yours Is No Disgrace (2008 Remaster) - YouTube
[08:35:22] *** Quits: waleee (~waleee@h-82-196-111-63.NA.cust.bahnhof.se) (Quit: WeeChat 3.3)
[08:38:28] <contrapunctus> hayley: when did the pattern of "I don't like this, don't show it to anyone in the world" silently (?) supersede the pattern of "I don't like this, don't show it to me"? 🤔️
[08:39:35] <hayley> Depends on why you don't like it. And it is somewhat better for n people to only see something unpleasant 1/n times on average, rather than one person once.
[08:40:18] <hayley> But you don't have to make groups to achieve the former, just publish moderation logs!
[08:48:53] <hayley> "I wanted to make censorship-free forums, but I'm done with that now." "Just use Solana...granted you'll be eating glass with Rust." This person knows me very well.
[08:55:02] <hayley> https://www.youtube.com/watch?v=D43PlUr1x_E
[08:55:03] -ixelp- Is Software Engineering Still an Oxymoron? • Alan Kay • GOTO 2021 - YouTube
[08:55:41] <hayley> "Shut down routers and get off the internet? You are about to shut down the entire live Facebook system. [Cancel] [Shutdown Facebook]"
[09:04:31] <moon-child> til you cannot bind constants.  For some reason I assumed they behaved lexically and could be shadowed
[09:05:04] <moon-child> gilberth: ‘A macro may want to refer to a constant and rely upon it be the constant and not some lexical by accident’  that problem exists anyway, with functions
[09:06:32] <moon-child> http://ix.io/3GX7/lisp  e..g.
[09:06:42] <semz> to be fair the only time you'll ever run into it is when some math function has a parameter called t
[09:27:02] <kakuhen> dumb question: what format directive do we use for printing signed integers
[09:27:18] <kakuhen> oh also i know the length beforehand
[09:27:34] <kakuhen> so e.g. I want (format nil "~something...~X" #xfff8) to give me "-8" or whatever
[09:28:45] <moon-child> really, that is not a formatting thing; that is, you want to interpret (or convert) #xfff8 as a signed integer at some bit-width
[09:30:12] <kakuhen> i guess it'd be tough to do this with pure format directives
[09:30:16] <kakuhen> unless maybe I use the conditional ones
[09:30:30] <kakuhen> then I check the sign and optionally add a negative sign
[09:30:44] <moon-child> do you _have_ to do it with format?
[09:30:53] <moon-child> why not preprocess?  Something like (if (>= x #x8000) (- x #x10000) x)
[09:31:04] <moon-child> or accordingly higher depending on what bit-width you target
[09:31:08] <kakuhen> well, it's just a random question i thought to myself
[09:38:10] <kakuhen> oh and another dumb question, I swear there was a macro that let me get the first value of a multi-valued function
[09:38:15] <kakuhen> and no it wasn't multiple-value-bind
[09:38:28] <kakuhen> for now I'm just using (nth-value 0 ...) until i remember what it was
[09:40:37] <Alfr> kakuhen, (values that-one-form)
[09:41:05] <kakuhen> Thank you so much!
[09:42:31] <Alfr> kakuhen, but if you only want to use the first value, as in feed it to something else, you could also just use that-one-form, as only the primary value is used.
[09:42:52] <kakuhen> good to know; my particular use case was to discard the secondary value returned by #'floor
[09:43:24] <Alfr> kakuhen, yeah, that's when it's useful. :)
[09:44:23] <gilberth> moon-child: Good point. When paranoid I could use (funcall 'f ...) :-)
[09:46:55] <gilberth> Anyhow, my first point and hunch why there are earmuffs around special variables and not constants in CL is that semantics of LET change with special variables.
[09:55:33] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[10:06:26] *** Joins: notzmv (~zmv@user/notzmv)
[11:02:04] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[11:02:32] <dave0> maw
[11:08:36] * moon-child wonders why it's 'shan't' and not 'sha'n't'
[11:08:40] * moon-child drowns in a sea of '
[11:09:57] <contrapunctus> moon-child: lots of irritating silly single quotes? :>
[11:10:36] <dave0> LISQ
[11:11:57] <moon-child> LISt Quackery
[11:43:32] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[12:06:23] *** Joins: lisp123 (~lisp123@5.30.23.247)
[12:08:40] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[12:57:58] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Read error: Connection reset by peer)
[13:16:52] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[13:17:29] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[13:22:49] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[14:28:36] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[14:40:03] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[14:43:07] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[14:48:13] *** Joins: random-nick (~random-ni@87.116.165.83)
[14:52:01] <mfiano> Hello
[14:53:48] <sham1> I'mn't sure that it's not sha'n't
[14:53:56] <mfiano> Can the Unix "cut" command handle "from end" indexing? I'm not seeing a way. What would be a good alternative if not?
[14:55:32] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Quit: WeeChat 3.3)
[14:56:04] <moon-child> sham1: don't you mean it'sn't?
[14:56:08] <mfiano> `echo "foo.bar.baz" | rev | cut -d "." -f1 | rev` seems very hacky
[14:56:29] <sham1> moon-child: well yes
[14:57:16] <hayley> non't
[14:58:32] <mfiano> I guess this is a good enough use as any for AWK.
[15:00:12] <shka> yes
[15:00:41] <hayley> https://www.youtube.com/watch?v=IzUoe-9bKa0
[15:00:42] -ixelp- My Homebuilt 200W LASER BAZOOKA!!!!! - YouTube
[15:00:53] <mfiano> Something like awk -F. '{ print $NF }' iirc
[15:01:03] * mfiano god i haven't used AWK in forever
[15:01:11] <hayley> "here is my 200 GB/s laser GC, now just to give you a scope of things this Arc<T> right here is .005 GB/s that's at the crab limit where drew devault won't complain it is bloat, now this SBCL GC is at .5 GB/s which puts it at the highest consing rating for a stop the world GC, which means that just looking at the flamegraph can give you eye damage"
[15:01:21] * contrapunctus _sentences_ sham1 and moon-child to death for crimes against language
[15:01:44] <sham1> How very prescriptivist
[15:10:19] <mfiano> Can anyone help me figure out how to do something with GNU Makefile language?
[15:13:11] <contrapunctus> mfiano: "just ask, don't ask to ask" and all that? :>
[15:13:46] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[15:13:50] <mfiano> https://gist.github.com/mfiano/ef87d2d35c0852a164dceb8eb12d03e7
[15:13:51] -ixelp- Makefile · GitHub
[15:15:25] <mfiano> "files" searches for asd files, and builds binaries and manual pages. The problem is build-program.sh outputs a binary file names "foo" if the Makefile file was "mfiano.scripts.foo.asd", so the "mv" fails.
[15:29:35] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 252 seconds)
[15:31:25] <hayley> https://tutanota.com/blog/posts/germany-right-to-encryption/ Very unexpected.
[15:31:39] <selwyn> yeah
[15:32:33] *** Joins: waleee (~waleee@h-82-196-111-63.na.cust.bahnhof.se)
[16:26:23] *** Joins: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net)
[16:38:11] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[16:38:26] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[16:46:50] <mfiano> solved after digging into the abyss
[16:48:13] <mfiano> TIL (unwind-protect (sb-ext:exit :code 1) (format t "This really prints!~%"))
[17:09:15] <pjb> mfiano: not necessarily. (unwind-protect (sb-ext:exit :code 1) (format t "This really prints!~%") (finish-output) #|there it will really print|#)
[17:09:19] <shka> https://www.youtube.com/watch?v=YnnGbcM-H8c
[17:09:19] -ixelp- 1964 IBM 029 Keypunch Card Punching Demonstration - YouTube
[17:10:46] <shka> damn, i like blue keyboards 
[17:10:56] <shka> well, keyboards with blue keycaps 
[17:11:01] *** Quits: waleee (~waleee@h-82-196-111-63.na.cust.bahnhof.se) (Ping timeout: 256 seconds)
[17:12:58] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[17:17:37] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[17:30:52] *** Joins: Inline (~Inline@aftr-37-201-241-16.unity-media.net)
[18:00:12] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Ping timeout: 276 seconds)
[18:13:38] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[18:16:29] *** Joins: payphone (dd09ba4109@2604:bf00:561:2000::20b)
[18:24:35] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 268 seconds)
[18:39:18] *** Quits: MichaelRaskin (~MichaelRa@ipb21a9944.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[19:01:10] *** Quits: Inline (~Inline@aftr-37-201-241-16.unity-media.net) (Read error: Connection reset by peer)
[19:01:17] *** Joins: Inline (~Inline@aftr-37-201-241-16.unity-media.net)
[19:07:44] *** Quits: Inline (~Inline@aftr-37-201-241-16.unity-media.net) (Read error: Connection reset by peer)
[19:08:03] *** Joins: Inline (~Inline@aftr-37-201-241-16.unity-media.net)
[19:38:08] *** Quits: Inline (~Inline@aftr-37-201-241-16.unity-media.net) (Remote host closed the connection)
[19:39:00] *** Joins: lisp123 (~lisp123@5.30.23.247)
[19:43:19] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 252 seconds)
[19:53:27] *** Joins: treflip (~user@95.79.32.99)
[19:58:55] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Read error: Connection reset by peer)
[19:59:56] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[21:35:08] <dave0> nite all
[21:35:49] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[21:40:36] *** Joins: lisp123 (~lisp123@5.30.23.247)
[21:45:21] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 256 seconds)
[21:54:56] *** Quits: Posterdati (~posterdat@host-87-19-166-231.retail.telecomitalia.it) (Ping timeout: 245 seconds)
[22:08:01] *** Joins: Posterdati (~posterdat@host-87-19-166-231.retail.telecomitalia.it)
[22:31:41] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[22:34:20] *** Quits: treflip (~user@95.79.32.99) (Quit: good night)
[22:37:45] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[22:52:03] *** Joins: sirufer (68f46fc7c3@user/sirufer)
[22:55:07] *** Joins: bjorkintosh (~bjork@2600:1702:6a0:af0:3a85:80da:d37e:b375)
[22:55:32] <bjorkintosh> autolisp? 
[22:59:58] <edgar-rft> in germany "auto" means "car", every lisp has car :-)
[23:00:30] <bjorkintosh> hahahahaha
[23:00:41] <bjorkintosh> not clojure!
[23:11:07] *** Joins: axvr (757f658d76@2604:bf00:561:2000::e1)
[23:20:29] <pl> I think clojure retains car/cdr somehow?
[23:22:14] <edgar-rft> clojure hides car/cdr somewhere unter the carpet :-)
[23:23:07] <mfiano> That would be surprising considering it has no cons cells
[23:24:23] <pl> I was thinking more in terms of aliases over first/rest
[23:25:13] <edgar-rft> how many CPUS in 2021 have decrement registers?
[23:25:46] <edgar-rft> hmm, CPUs? (whatever...)
[23:25:56] <bjorkintosh> IBM 704s still have them.
[23:26:02] <bjorkintosh> there aren't that many though.
[23:37:19] <pl> edgar-rft: well, to make it funnier, it wasn't exactly a register as people would recognize it today?
[23:37:46] <pl> (unsure if it was even an instruction or just assembler macro)
[23:38:33] <pl> the less known sibling of CAR and CDR, CTR would be still alive though given that new SPARCs are made
[23:49:11] <gilberth> Good morning #lispcafe!
[23:49:42] <gilberth> pl: What does CTR do? I only know about CXR.
[23:50:56] <pl> "tag register"
[23:51:00] <pl> there was also "suffix"
[23:51:20] <pl> 36 bit word was constructred, iirc, out of CTR CAR CDR CSR
[23:51:29] <edgar-rft> CTR sends a Coffee Time Request
[23:51:49] <pl> which were appropriately 3 15 15 3 bit long each
[23:51:58] <gilberth> Coffee sound nice.
[23:52:26] <gilberth> pl: What CPU are you talking about?
[23:55:06] <pl> ah, sory, it was CPR, not CSR, for prefix, and layout was 3bit CPR, 15 bit CAR, 3 bit CTR, 15 bit CDR
[23:55:35] <pl> IBM 704
[23:56:24] <gilberth> ok. Are these bytes (in the CL sense) of instructions?
[23:58:18] <edgar-rft> we were talking about lisp in general, it started with a question about autolisp
[23:58:25] <White_Flame> as in (byte <size> <pos>)?  yes
[23:59:24] <pl> gilberth: CPR, CAR, CTR and CDR were essentially macros implementing access to those parts of the word that formed layout of "Type A" instruction in IBM 704
[23:59:44] <pl> Type B had different layout
