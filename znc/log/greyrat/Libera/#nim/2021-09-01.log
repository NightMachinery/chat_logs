[00:29:45] <FromDiscord> <tandy> `Exception message: invalid integer: "1630429373"`
[00:29:47] <FromDiscord> <tandy> when using regular `int`
[00:30:52] <FromDiscord> <tandy> `getBiggestInt` works tho
[00:31:19] <FromDiscord> <tandy> oh it runs but it just returns 0
[00:40:23] *** Quits: PMunch (~PMunch@c01F28BC3.dhcp.as2116.net) (Quit: leaving)
[00:51:47] *** Quits: watzon (~watzon@136.36.149.145) (Quit: WeeChat 3.2)
[01:08:35] *** Joins: watzon (~watzon@136.36.149.145)
[01:18:36] *** Joins: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca)
[01:21:54] *** Quits: max22- (~maxime@2a01cb0883359800979df6351629e372.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[01:22:19] *** Joins: max22- (~maxime@2a01cb0883359800979df6351629e372.ipv6.abo.wanadoo.fr)
[01:23:26] *** Quits: max22- (~maxime@2a01cb0883359800979df6351629e372.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[01:23:48] *** Joins: max22- (~maxime@2a01cb0883359800979df6351629e372.ipv6.abo.wanadoo.fr)
[01:26:28] <NimEventer> New thread by Oden: An equivalent to JAI's "use"?, see https://forum.nim-lang.org/t/8385
[01:34:37] *** Quits: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca) (Ping timeout: 245 seconds)
[01:44:27] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[01:44:50] *** Joins: supakeen (~user@python/site-packages/supakeen)
[01:50:10] <nixfreak_nim[m]> The files I am greping out are too large and kill my memory , I actually have to split them up then run a loop to compare them. How would I write a grep -f file file2 program like that? 
[01:52:13] <FromDiscord> <Elegantbeef> iterate over each line and do it line by line instead of loading the entire file into memory
[01:55:15] <FromDiscord> <SandwichBop> is it unorthodox to use Nim for GUI work? (I can see SDL wrapper going well with Nim tho don't want to go against the grain)
[01:55:30] <FromDiscord> <SandwichBop> (edit) "grain)" => "grain, maybe there's something like Electron for Nim)"
[01:56:21] <FromDiscord> <Elegantbeef> Unorthodox? It's a programming language so i'd hope GUI isnt against the grain \:D
[01:57:22] <FromDiscord> <Elegantbeef> There are bindings for gtk, qml, webview. Then also pure nim solutions/multiplatform stuff like Nimx, Fidget, nigui(might be best to look at if you want to use windows native gui, but also want gtk on unix)
[01:57:30] <FromDiscord> <kaushalmodi> Hello, I have no background in socket or TCP/IP programming. If I want to convert this code to Nim ( https://github.com/amiq-consulting/amiq_blog/blob/master/amiq_sv_python_non_blocking_socket_communication_in_systemverilog_using_dpi_c/client.cc ), which Nim library should I start looking at? Would it be the `net` library?
[01:58:10] <FromDiscord> <kaushalmodi> Once I tackle that, I would like to also convert this Python code ( https://github.com/amiq-consulting/amiq_blog/blob/master/amiq_sv_python_non_blocking_socket_communication_in_systemverilog_using_dpi_c/server.py ) to Nim as well.
[01:59:51] <FromDiscord> <SandwichBop> In reply to @Elegantbeef "There are bindings for": Never knew there were so many solutions, thank you Elegantbeef üôè ‚ÜµGoing to check out Nimx/Fidget/Nigui, never heard of em before but sound worth reading into
[02:01:40] <FromDiscord> <Elegantbeef> Yea kaushal seems like the `net` module would be the best, unless you want lower level stuff
[02:01:56] <FromDiscord> <Elegantbeef> There is also asyncnet if that ticles your fancy
[02:04:20] <FromDiscord> <kaushalmodi> In reply to @Elegantbeef "Yea kaushal seems like": Thanks, I will start reading the `net` doc then.
[02:05:08] <FromDiscord> <kaushalmodi> > unless you want lower level stuff‚ÜµI just want to receive data over a socket and pass it on to another system via a C API function
[02:05:22] <FromDiscord> <Elegantbeef> Then yea net should be fine
[02:11:41] <NimEventer> New post on r/nim by wrestlingwithbadgers: Problem with dom.EmbedElement, see https://reddit.com/r/nim/comments/pffjky/problem_with_domembedelement/
[02:13:50] <FromDiscord> <RattleyCooper> Is it possible to define a template within a template so that the nested template only "exists" if the outer templates conditions are met?
[02:14:16] <FromDiscord> <RattleyCooper> sent a code paste, see https://play.nim-lang.org/#ix=3xA8
[02:14:49] <FromDiscord> <RattleyCooper> I'm trying to recreate the pandas dataframe filter syntax: `df[df.someCol == 5]` to filter values
[02:14:52] <FromDiscord> <Elegantbeef> when statements
[02:15:39] <FromDiscord> <RattleyCooper> Ok, I will look into it
[02:15:41] <FromDiscord> <RattleyCooper> Thanks!
[02:16:35] <FromDiscord> <kaushalmodi> I think I will need to start with `asyncnet` as I need "non-blocking socket communication".
[02:16:39] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3xA9
[02:16:52] <FromDiscord> <Elegantbeef> Notice where the error is in that example rattley
[02:17:06] <FromDiscord> <Elegantbeef> It's in the second block due to passing false
[02:17:30] <FromDiscord> <RattleyCooper> Gotcha
[02:18:45] <FromDiscord> <RattleyCooper> The issue is that `e` should end up equating to the AST for `df.someCol == 5]` but the template that handles `==` doesn't exist
[02:18:56] <FromDiscord> <RattleyCooper> (edit) "5]`" => "5`"
[02:19:11] <FromDiscord> <RattleyCooper> (edit) "exist" => "exist, even though I defined it within the outer template"
[02:23:03] <FromDiscord> <RattleyCooper> I can link to the playground but for some reason the playground doesn't display the error (or anything)
[02:24:06] <FromDiscord> <Elegantbeef> sent a code paste, see https://paste.rs/cB5
[02:24:10] <FromDiscord> <RattleyCooper> Oh wow, I'm a fool lol.  I had another code snippet that was interfering..
[02:24:38] <FromDiscord> <RattleyCooper> sent a code paste, see https://play.nim-lang.org/#ix=3xAb
[02:29:26] *** Quits: max22- (~maxime@2a01cb0883359800979df6351629e372.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[02:56:44] <FromDiscord> <RattleyCooper> Do templates have their own scope?
[03:07:02] <FromDiscord> <RattleyCooper> not exactly sure how to apply `when` to my problem.  Right now I have:
[03:07:14] <FromDiscord> <RattleyCooper> sent a code paste, see https://paste.rs/3kp
[03:07:56] <FromDiscord> <RattleyCooper> to stop the template from redefining that `==` proc in the global scope.  But it's just redefining that proc into a new block every time...
[03:10:03] <FromDiscord> <Recruit_main707> templates are basically copying that code and pasting it wherever you use it, so it will be defined in that scope afaik
[03:10:41] *** Quits: oprypin (~irc@pryp.in) (Quit: Bye)
[03:10:52] *** Joins: oprypin (~irc@pryp.in)
[03:11:45] <FromDiscord> <RattleyCooper> Yeah, I'm just trying to figure out how I can get this syntax to work, while only defining that `==` proc once.  The issue is that if I define it outside the `[]` template it can run anywhere
[03:11:52] <FromDiscord> <RattleyCooper> not just in the `[]`
[03:13:24] <FromDiscord> <Recruit_main707> what are you trying to acomplish with this?
[03:16:13] <FromDiscord> <RattleyCooper> In reply to @Recruit_main707 "what are you trying": I want to make a pandas dataframe filter syntax for an object.  Mostly just learning more about templates/macros
[03:16:57] <FromDiscord> <RattleyCooper> in pandas you can do `d[d.someColumn == 5]` to get filtered data where any value in the column is equal to 5
[03:17:24] <FromDiscord> <RattleyCooper> and I just want to see if it's possible in nim.  It totally is, I just want to figure out how to do it better.
[03:19:13] <FromDiscord> <RattleyCooper> What's odd though is the nim playground doesn't like to show any output, even though it works locally with the same version of nim
[03:20:43] <FromDiscord> <RattleyCooper> oh wow, nvm the playground just decided to tab all my echos over XD
[03:20:59] <FromDiscord> <rb3.nim> Is there a way to disable constructor calls (`Object(a: 1, b: 2)`), using term-rewriting macros for example? I want to enforce usage of init functions, for my c++-interop library
[03:21:44] <FromDiscord> <Elegantbeef> do not export the type but it's not a great way
[03:22:02] <FromDiscord> <rb3.nim> The old trick doesn't seem to work anymore https://forum.nim-lang.org/t/3445
[03:22:19] <FromDiscord> <Elegantbeef> @RattleyCooper\:  https://play.nim-lang.org/#ix=3xAn
[03:22:35] <FromDiscord> <rb3.nim> Ah ya, but my init functions look like `Object.init(1, 2)`
[03:22:48] <FromDiscord> <rb3.nim> So they take a type üò±
[03:23:00] <FromDiscord> <Elegantbeef> So rewrite them as `initObject`
[03:23:53] <FromDiscord> <Elegantbeef> But yea not overly nice
[03:23:57] <FromDiscord> <rb3.nim> The `init` function is actually generated by a separate library I wrote, and is meant to be reusable everywhere, so thats not an option
[03:24:08] <FromDiscord> <rb3.nim> (edit) "library" => "macro"
[03:24:36] <FromDiscord> <rb3.nim> there must be a way with term rewriting macros...
[03:25:13] <FromDiscord> <Elegantbeef> I think there is
[03:25:25] <FromDiscord> <Elegantbeef> I recall doing something similar before
[03:26:25] <FromDiscord> <rb3.nim> sent a code paste, see https://play.nim-lang.org/#ix=3xAo
[03:27:44] <FromDiscord> <RattleyCooper> In reply to @Elegantbeef "<@408056314342932491>\:  https://play.nim-lang.org/": Wow, that is freaking sweet
[03:32:28] <FromDiscord> <RattleyCooper> I feel like that should be in sequtils if there isn't something similar
[03:32:39] <FromDiscord> <Elegantbeef> it's already in called `filterit`
[03:32:46] <FromDiscord> <RattleyCooper> Ah, perfect üòÑ
[03:33:45] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3xAt
[03:34:30] <FromDiscord> <Elegantbeef> As long as you move your `constDestr` to after all your init procs you'll be fine to prevent the user from doing such
[03:37:07] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[03:39:03] <FromDiscord> <Recruit_main707> In reply to @Elegantbeef "<@408056314342932491>\:  https://play.nim-lang.org/": Are you forced to use `{}` instead of `[]`?
[03:39:14] <FromDiscord> <Elegantbeef> sent a code paste, see https://paste.rs/d34
[03:39:40] <FromDiscord> <RattleyCooper> In reply to @Recruit_main707 "Are you forced to": I think if the base type is a seq
[03:39:40] <FromDiscord> <Elegantbeef> I think the `[]` is reasoned to be the generic accessing proc and as such it complains about `it`
[03:40:28] <FromDiscord> <Elegantbeef> Since `proc [](s: seq, index: IndexType)` is more specific than `template [](s: seq, index: untyped)`
[03:40:45] <FromDiscord> <Elegantbeef> Remember untyped/typed do not support overloading
[03:40:46] <FromDiscord> <RattleyCooper> Doesn't proc overloading not work super well with untyped?
[03:40:52] <FromDiscord> <RattleyCooper> Oh lol guess so
[03:41:09] <FromDiscord> <Recruit_main707> the answer before the question xd
[03:41:19] <FromDiscord> <Elegantbeef> I'm just that good üòõ
[03:41:46] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/manual.html#overloading-resolution-lazy-type-resolution-for-untyped
[03:42:26] <FromDiscord> <tandy> when using karax + prologue i cant get css / assets to work when using a route like /home
[03:42:42] <FromDiscord> <Recruit_main707> sent a code paste, see https://play.nim-lang.org/#ix=3xAx
[03:42:45] <FromDiscord> <tandy> anyone know how to fix that?
[03:43:15] <FromDiscord> <Elegantbeef> TRM are post semantic checking so the code has to be valid before it gets to them‚Üµ(@Recruit_main707)
[03:44:48] <FromDiscord> <Recruit_main707> and where is it invalid, at `[bool]`?
[03:45:11] <FromDiscord> <Elegantbeef> `it` isnt valid in the context of `seq[it > 20]`
[03:45:22] <FromDiscord> <Elegantbeef> there is no `it` variable declared
[03:46:57] <FromDiscord> <Recruit_main707> ah right mb, and despite using a trm, `[]` as a function is considered more specific and we get to the same problem?
[03:47:28] <FromDiscord> <Elegantbeef> Well like i said `trm` is post semantic checking, so the code underneath needs to be valid
[03:47:29] <FromDiscord> <Recruit_main707> Of not being able to inject `it`?
[03:48:02] <FromDiscord> <Elegantbeef> So if the code cannot be compiled before the trm it cannot get to the point to apply the trm
[03:48:47] <FromDiscord> <Elegantbeef> > ‚Üµ> Term rewriting macros are macros or templates that have not only a name but also a pattern that is searched for after the semantic checking phase of the compiler\: This means they provide an easy way to enhance the compilation pipeline with user defined optimizations\:‚Üµ>
[03:49:35] <FromDiscord> <Recruit_main707> and since the injection happens within the template it cannot reach it before being invalid (?)
[03:49:52] <FromDiscord> <Elegantbeef> Well the template is never chosen in the semantic check
[03:50:10] <FromDiscord> <Elegantbeef> So it choses the procedure and then checks the expression inside `[]`
[03:50:24] <FromDiscord> <Elegantbeef> That expression is `it > 20` which cannot be resolved since `it` isnt known
[03:50:50] <FromDiscord> <Elegantbeef> It then throws a compiler error there and you have to fix the code or use a different indexing method
[03:51:34] <FromDiscord> <Elegantbeef> Once you have a procedure that matches your template/macro that takes an untyped you need to use a different index method or a more specific procedure
[03:51:39] <FromDiscord> <Recruit_main707> so this happens:‚Üµ> [] as a function is considered more specific
[03:51:55] <FromDiscord> <Recruit_main707> right?
[03:52:01] <FromDiscord> <Elegantbeef> Yes
[03:52:34] <FromDiscord> <Elegantbeef> It doesnt know which `[]` you're using so it attempts to sem the `it > 20`, but then hits a wall of `it` being undefined
[03:53:22] <FromDiscord> <Elegantbeef> So in this case you could actually do `[proc(a: T): bool = a > 20]`
[03:53:26] <FromDiscord> <Elegantbeef> Not overly nice
[03:54:31] <FromDiscord> <Recruit_main707> alright, its just that trm are not able to be prioritised over previously defined functions, thanks for answering my doubts :)
[03:55:03] <FromDiscord> <Elegantbeef> Not that it's fucking clean
[03:55:09] <FromDiscord> <Elegantbeef> But that's not the point of this excersize
[03:55:09] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3xAz
[03:55:25] <FromDiscord> <Elegantbeef> Maybe i'll spell that word right eventually, where is rika to spell it for me
[03:57:12] <FromDiscord> <Elegantbeef> Arent you glad you asked rattley ?
[03:57:21] <FromDiscord> <Elegantbeef> We're now in the deepend of procedure resolution
[03:57:30] <FromDiscord> <RattleyCooper> Hehehe
[03:57:39] <FromDiscord> <RattleyCooper> I'm learning a lot so I'm happy
[03:58:11] <FromDiscord> <Elegantbeef> Do wonder if my solution for the object constructor actually helped them
[03:58:23] <FromDiscord> <Elegantbeef> Radio silence after my solution makes me sad
[03:58:46] *** Joins: luis_ (~luis@179.105.138.153)
[03:59:30] <FromDiscord> <RattleyCooper> Oh it definitely did.  I haven't gotten it done yet but I can see how to actually do it now..
[03:59:49] <FromDiscord> <Elegantbeef> But you werent the one with a problem
[04:00:18] <FromDiscord> <RattleyCooper> Oh lol I forgot you're helping everyone and mine isn't an object constructor üëÄ
[04:07:32] *** Quits: luis_ (~luis@179.105.138.153) (Ping timeout: 245 seconds)
[04:12:05] *** Joins: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca)
[04:15:46] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[04:16:52] *** Joins: flynn (~mcbloch@user/flynn)
[04:24:25] *** Joins: luis_ (~luis@179.105.138.153)
[04:37:52] *** Quits: luis_ (~luis@179.105.138.153) (Ping timeout: 252 seconds)
[04:55:31] <FromDiscord> <SandwichBop> silly question, project idea suggestions for nim? idk the ideas that first come to mind are all gamedev related but at that point I should be using Unreal engine and that defeats the spirit of using nim :nim1:
[04:55:58] <FromDiscord> <SandwichBop> (edit) "silly question, ... project" 03added "for fun"
[04:56:03] <FromDiscord> <Elegantbeef> Seems like an odd take
[04:56:27] <FromDiscord> <SandwichBop> please enligthen me, I'm trying to brainstorm ways to jumpstart my nim learning
[04:56:34] <FromDiscord> <Elegantbeef> Make a game in Nim if you want to, join the club, it's not very exclusive
[04:57:04] <FromDiscord> <Elegantbeef> A good place to start is https://github.com/ftsf/nico
[04:57:06] <nrds> <12R2D299> 4GitHub: 7"a Game Framework in Nim inspired by Pico-8."
[04:57:31] <FromDiscord> <SandwichBop> lol I've made games before with Pico8, it's really cozy but idk it feels like I should be using Lua
[04:57:43] <FromDiscord> <SandwichBop> I don't know better, maybe nim really is much better for gamedev lol
[04:57:47] <FromDiscord> <Elegantbeef> That's not pico
[04:57:51] <FromDiscord> <SandwichBop> O
[04:57:56] <FromDiscord> <SandwichBop> I was misread, sorry lol
[04:58:12] <FromDiscord> <Elegantbeef> My main focus with Nim is gamedev, it's a fantastic language for it imo
[04:58:42] <FromDiscord> <SandwichBop> I think so too, but I was a bit discouraged when I saw that the Unreal Engine Nim Wrappers weren't being maintained
[04:58:56] <FromDiscord> <SandwichBop> I love how Nim can compile to C/C++, would be perfect for working with most if not all game engines
[04:59:02] <FromDiscord> <SandwichBop> (edit) "I love how Nim can compile to C/C++, would be perfect for working with most if not all ... game" 03added "major"
[04:59:31] <FromDiscord> <Elegantbeef> Yea, rolling your own is also a viable path
[05:00:58] <FromDiscord> <impbox [ftsf]> things don't tend to get maintained if they don't get used, so use and maintain them if you like. i maintain nico because i use it for my own games. otherwise maintaining a library that you're not using isn't much fun
[05:01:07] <FromDiscord> <impbox [ftsf]> but yeah, nim is great for gamedev
[05:01:25] <FromDiscord> <impbox [ftsf]> though takes some getting used to if you're from a more OOPy world
[05:02:31] <FromDiscord> <RattleyCooper> In reply to @SandwichBop "silly question, for fun": I've been thinking about trying to make something like google's python fire but am holding off until I'm a bit better with nim and know the stdlib better
[05:02:33] <FromDiscord> <SandwichBop> In reply to @impbox "things don't tend to": O I didn't really think about that, that's a great idea
[05:02:41] <FromDiscord> <SandwichBop> maybe I should maintain the Unreal engine wrappers myself for Nim
[05:03:07] <FromDiscord> <SandwichBop> but I don't think I understand how wrappers are supposed to be maintained, anyone know of reading material? maybe some book for such a task lol
[05:03:13] <FromDiscord> <SandwichBop> (edit) "understand" => ""understand:"
[05:03:16] <FromDiscord> <SandwichBop> (edit) ""understand:" => ""understand""
[05:03:18] <FromDiscord> <RattleyCooper> make nim-fire so I don't have to üòõ
[05:03:36] <FromDiscord> <SandwichBop> In reply to @RattleyCooper "I've been thinking about": same i don't know the nim or stdlib enough to tackle the bigger projects
[05:03:41] <FromDiscord> <SandwichBop> but no reason not try lol
[05:03:44] <FromDiscord> <impbox [ftsf]> but i'd recommend making games instead of libraries/wrappers
[05:03:44] <FromDiscord> <SandwichBop> (edit) "lol" => "lol, lots to learn"
[05:03:57] <FromDiscord> <impbox [ftsf]> make a game and you get the library for free when you're done
[05:04:04] <FromDiscord> <SandwichBop> smart üß†
[05:04:17] <FromDiscord> <SandwichBop> guess I'll play around with SDL2, seems to play well with nim
[05:04:35] <FromDiscord> <impbox [ftsf]> yea, i recommend the sdl2_nim library over sdl2
[05:04:58] <FromDiscord> <impbox [ftsf]> there are two competing sdl2 wrappers for nim
[05:05:07] <FromDiscord> <Elegantbeef> impbox did you manage to take a look at the gpl/png issue i had?
[05:05:14] <FromDiscord> <impbox [ftsf]> not yet, it's on my list for today
[05:05:22] <FromDiscord> <impbox [ftsf]> after piano practice
[05:05:59] <FromDiscord> <SandwichBop> In reply to @impbox "yea, i recommend the": is this the one? o:‚Üµhttps://github.com/Vladar4/sdl2_nim
[05:06:01] <nrds> <12R2D299> 4GitHub: 7"Wrapper of the SDL 2 library for the Nim language."
[05:06:05] <FromDiscord> <impbox [ftsf]> yup
[05:06:11] <FromDiscord> <SandwichBop> ayyy thank you, I'll try it out üôè
[05:06:20] <FromDiscord> <SandwichBop> gonna try and make some N64 tier game
[05:13:50] <FromDiscord> <Elegantbeef> You could also use godot and it's bindings those are maintained üòÄ
[05:15:13] <FromDiscord> <SandwichBop> O I never knew, guess I'll get a 2 in 1, learn Nim and Godot lol
[05:15:25] <FromDiscord> <SandwichBop> wonder if the Godot devs will ever consider using Nim for their engine lol
[05:15:38] <FromDiscord> <Elegantbeef> Nope
[05:15:43] <FromDiscord> <SandwichBop> rip, how come?
[05:15:43] <FromDiscord> <Elegantbeef> Gdnim is probably the best way to use nim in godot
[05:16:25] <FromDiscord> <Elegantbeef> It's written in C++ and what's the benefit to using Nim built in for them, they already have a similar Gdscript
[05:16:27] <FromDiscord> <Elegantbeef> https://github.com/geekrelief/gdnim is what i was talking about
[05:16:30] <nrds> <12R2D299> 4GitHub: 7"godot-nim based bootstrapping framework supporting hot reloading"
[05:17:30] *** Quits: jkl (~jkl@user/jkl) (Quit: Gone.)
[05:18:15] <FromDiscord> <SandwichBop> o looks neat, tho maybe a bit too experimental for me to try out without knowing better lol
[05:18:52] *** Joins: jkl (~jkl@user/jkl)
[05:19:38] <FromDiscord> <Elegantbeef> I'd say Nico is a good place to start, easy to use and setup
[05:21:41] <FromDiscord> <SandwichBop> will try it out, thanks Elegantbeef :nim1:
[05:29:27] *** Quits: krux02 (~krux02@p4ff8b737.dip0.t-ipconnect.de) (Remote host closed the connection)
[05:35:45] <FromDiscord> <Elegantbeef> @impbox [ftsf]\: well i have a PR for the GPL parsing issue, this makes it more intelligent, capable of handing any seperator between the 3 colours
[05:36:04] <FromDiscord> <Elegantbeef> Did look at the colour and have 0 idea why it's failing
[05:36:11] <FromDiscord> <Elegantbeef> at the png\
[05:36:26] <FromDiscord> <Elegantbeef> Think it's cause it's' trying to parse it as a paletted image?
[05:46:36] *** Joins: neurocyte6 (~neurocyte@45.93.108.142)
[05:46:36] *** Quits: neurocyte6 (~neurocyte@45.93.108.142) (Changing host)
[05:46:36] *** Joins: neurocyte6 (~neurocyte@user/neurocyte)
[05:48:49] *** Quits: neurocyte (~neurocyte@user/neurocyte) (Ping timeout: 252 seconds)
[05:48:49] *** neurocyte6 is now known as neurocyte
[06:17:40] <FromDiscord> <impbox [ftsf]> mm loadPaletteFromImage is broken if it's a paletted image
[06:17:47] <FromDiscord> <impbox [ftsf]> easy enough to fix
[06:36:44] <FromDiscord> <Elegantbeef> \anyone else have something for "This month with nim"
[06:36:45] <FromDiscord> <Elegantbeef> anyone else have something for "This month with nim"
[06:40:17] <FromDiscord> <Yardanico> Maybe goodboy galaxy? But you'll have to ask exelotl
[06:40:29] <FromDiscord> <Elegantbeef> Already got that
[06:40:33] <FromDiscord> <Yardanico> heh
[06:41:12] <FromDiscord> <Elegantbeef> Seems it's a dead landscape of nothing cool üòÄ
[06:51:08] <FromDiscord> <retkid> In reply to @SandwichBop "I love how Nim": problem is you gotta shadow the libraries
[06:51:19] <FromDiscord> <retkid> or figure out some way to accsess them
[06:51:21] <FromDiscord> <retkid> (edit) "accsess" => "access"
[06:51:51] <FromDiscord> <Elegantbeef> "shadow"?
[06:51:56] <FromDiscord> <Elegantbeef> You mean bind them
[06:52:23] <FromDiscord> <SandwichBop> what do u mean by shadow? like Unreal engine has their entire source on github so u can make a wrapper for it, hard part would be having someone actually maintaining it as it chages
[06:52:25] <FromDiscord> <SandwichBop> (edit) "chages" => "changes"
[06:52:28] <FromDiscord> <impbox [ftsf]> in the darkness bind them
[06:52:33] <FromDiscord> <SandwichBop> üëª
[06:52:38] <FromDiscord> <impbox [ftsf]> (edit) "in the darkness bind them ... " 03added "= shadow them"
[06:52:54] <FromDiscord> <impbox [ftsf]> sounds cooler
[06:53:19] <FromDiscord> <Elegantbeef> Impbox what happens in your sex dungeon is between you and the consenting adults
[06:53:20] <FromDiscord> <retkid> In reply to @Elegantbeef ""shadow"?": sorry brains on java mode
[06:53:53] <FromDiscord> <retkid>  https://media.discordapp.net/attachments/371759389889003532/882450658068938812/unknown.png
[06:54:20] <FromDiscord> <retkid> this means that nim is getting interpreted when writing this?
[06:54:24] <FromDiscord> <retkid> (edit) "interpreted" => "interprupted"
[06:54:27] <FromDiscord> <retkid> (edit) "interprupted" => "interrupted"
[06:56:15] *** Quits: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca) (Ping timeout: 244 seconds)
[07:07:43] <madprops> is it possible to check echo output in an integration test?
[07:07:45] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[07:08:52] *** Joins: flynn (~mcbloch@user/flynn)
[07:09:34] <madprops> I have a proc that prints something every x seconds
[07:09:36] <madprops> not sure I can test it
[07:22:08] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[07:26:03] *** Joins: rockcavera (~rc@192.12.112.218)
[07:26:03] *** Quits: rockcavera (~rc@192.12.112.218) (Changing host)
[07:26:03] *** Joins: rockcavera (~rc@user/rockcavera)
[07:51:44] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[07:52:05] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:57:00] <FromDiscord> <impbox [ftsf]> @ElegantBeef palette loading should be fixed now, used a smaller change than your commit sorry
[07:57:21] <FromDiscord> <impbox [ftsf]> fixes both GPL and from image and adds tests for that palette you had issues with
[07:58:01] <FromDiscord> <Elegantbeef> Nice
[08:00:38] <madprops> would be nice to have an echo alias. because echo is often used for debugging, so i try to remove those
[08:00:51] <madprops> i mean afte debugging, i ctrl+f and remove the echo's 
[08:00:54] <madprops> but some echos are legit
[08:01:08] <madprops> i guess i could import some module with an alias
[08:01:26] <FromDiscord> <impbox [ftsf]> you can make a debugEcho template that is not compiled in unless compiled with -d:debug or something
[08:01:30] <FromDiscord> <Elegantbeef> You could just make a template that has a `when defined(debug)`
[08:01:38] <FromDiscord> <Elegantbeef> Damn you win this round
[08:02:13] <madprops> i mean i dont'
[08:02:18] <madprops> i don't want to leave the echos there
[08:02:21] <madprops> i removed them after the tests
[08:03:33] <FromDiscord> <impbox [ftsf]> make a tmpEcho template
[08:04:18] <FromDiscord> <impbox [ftsf]> wonder if you can make a template that removes itself after a certain date somehow...
[08:04:38] <madprops> like edit the file?
[08:04:59] <madprops> or become disabled
[08:07:18] <madprops> but what i was trying to say
[08:07:29] <madprops> it would be nice if apart from echo there was dbg or some simple alias built in
[08:07:57] <madprops> but probably redundant
[08:08:03] <FromDiscord> <Elegantbeef> clearly just do `echo(10)` for your debug ones and `echo 10` for your keepers üòõ
[08:08:36] <madprops> that could work if i ctrl+f "echo(" yeah
[08:13:08] <madprops> i should learn to use a debugger more though
[08:13:15] <madprops> i think i rely too much on printing stuff
[08:19:49] <FromDiscord> <retkid> whats the name of "abc'[1 .. 2]
[08:20:39] <FromDiscord> <retkid> ^
[08:20:47] <FromDiscord> <retkid> (edit) "^" => ".^"
[08:20:51] <FromDiscord> <retkid> (edit) ".^" => "...................................................^"
[08:20:53] <FromDiscord> <retkid> that
[08:21:10] <FromDiscord> <retkid> (edit) "...................................................^" => ".........................................^"
[08:21:20] <FromDiscord> <retkid> (edit) ".........................................^" => "...........................................^"
[08:21:25] <FromDiscord> <retkid> (edit) "...........................................^" => ".............................................^"
[08:22:55] <FromDiscord> <Rika> slice?
[08:23:15] <FromDiscord> <Rika> sent a code paste, see https://play.nim-lang.org/#ix=3xB5
[08:24:24] <FromDiscord> <retkid> the []
[08:24:32] <FromDiscord> <retkid> i wanna look at the docs
[08:24:35] <FromDiscord> <retkid> because i dont know the rules
[08:24:45] <FromDiscord> <retkid> but dunno what to loop up
[08:29:14] <FromDiscord> <Rika> the proc name is []
[08:29:37] <FromDiscord> <Rika> https://nim-lang.org/docs/system.html#%5B%5D%2Cstring%2CHSlice%5BT%2CU%5D
[08:31:08] <FromDiscord> <Rika> @retkid
[08:34:15] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:45:17] *** Joins: NeoCron (~NeoCron@p200300c4cf4a8400dde9c021b1b0ad3f.dip0.t-ipconnect.de)
[08:58:09] *** Quits: NeoCron (~NeoCron@p200300c4cf4a8400dde9c021b1b0ad3f.dip0.t-ipconnect.de) (Remote host closed the connection)
[10:16:59] <FromDiscord> <impbox [ftsf]> @Rika did the android thing work for you?
[10:17:24] <FromDiscord> <Rika> i had forgotten, because i programmed something else xd
[10:17:27] <FromDiscord> <Rika> ill try now
[10:49:23] *** Joins: max22- (~maxime@2a01cb08833598001c2c73c755058a4b.ipv6.abo.wanadoo.fr)
[11:19:14] *** Quits: watzon (~watzon@136.36.149.145) (Ping timeout: 244 seconds)
[11:38:20] <arkanoid> Just out of curiosity, how deep nested metaprogramming can go? I mean like call macro that generates and calls a template that generates and call another macro and so on
[11:51:04] <FromDiscord> <Elegantbeef> If you can write the code macros can generate it
[11:51:22] <FromDiscord> <impbox [ftsf]> maybe the compiler will run out of memory if you go too deep?
[11:51:56] <FromDiscord> <Elegantbeef> Probably
[11:52:18] <FromDiscord> <impbox [ftsf]> presumably an infinitely recursive macro won't work
[12:08:00] <FromDiscord> <gogolxdong (liuxiaodong)> Is there any recommended pointer arithmatic library?
[12:09:51] <FromDiscord> <Elegantbeef> https://github.com/kaushalmodi/ptr_math is only one i know of
[12:09:54] <nrds> <12R2D299> 4GitHub: 7"Pointer arithmetic in Nim"
[12:11:00] <FromDiscord> <xflywind> In reply to @gogolxdong (liuxiaodong) "Is there any recommended": copy timotheecour's solution and give him a upvote
[12:11:01] <FromDiscord> <xflywind> https://github.com/nim-lang/fusion/pull/21
[12:12:53] <FromDiscord> <xflywind> (edit) "a" => "an"
[12:16:26] <FromDiscord> <gogolxdong (liuxiaodong)> That would be great!
[12:31:10] *** Joins: PMunch (~PMunch@vpn.dualog.com)
[13:43:07] <madprops> is there a shortcut to echo two things separated by a whitespace?
[13:44:17] <FromDiscord> <Elegantbeef> `echo a, " ", b` is too much?
[13:46:07] <FromDiscord> <haxscramper> ``proc eecho(a: varargs[string, `$`]) = echo a.join(" ")``
[13:47:29] <FromDiscord> <xflywind> https://forum.nim-lang.org/t/7819
[13:49:46] <FromDiscord> <haxscramper> Were some posts deleted from this tread? I think there was some discussion yesterday as well
[13:52:47] <FromDiscord> <impbox [ftsf]> `echo &"{foo} {bar}"`
[13:53:00] <FromDiscord> <joshgoebel> are there any docs on inter-op of data structures between C and Nim... like if I'd like a Nim function to export a data-structure and I know the exact structure on the C side...?
[13:54:03] <PMunch> Well for interop with C you'd need to make sure that none of the types are garbage collected (or handled correctly), what you're left with is mostly types that map 1:1 to C
[13:54:41] <PMunch> But you could use cint, clong, cfloat, cchar, etc. to ensure that they will be the same as int, long, float, char in C
[13:54:55] <FromDiscord> <joshgoebel> it's just const char, pointers, structs, arrays, simple stuff
[13:55:28] <PMunch> const *char is a bit trickier. Nim doesn't seem to like const :P
[13:55:43] <PMunch> But yeah, most of that stuff is straight forward
[13:55:50] <FromDiscord> <joshgoebel> https://github.com/joshgoebel/wren-console/blob/main/src/cli/binary_libs.h#L60 i'm wanting to know if I could write a registryGiverFunc all in Nim code and have it exported properly in a dynamic library?
[13:56:19] <PMunch> You can always check out the generated C files in .cache/nim/ to see what the structures look like as well
[13:57:13] <PMunch> Sure, that should be possible
[13:57:37] <PMunch> I work with a dynamic library written in Nim and loaded by a C program at work
[13:58:13] <PMunch> Even working on auto-wrapping .h files into Nim definitions right now, so that you can do it automatically
[13:59:56] <FromDiscord> <joshgoebel> yeah, I'm trying to see how easy it is to use Nim to build libraries for Wren
[14:00:07] <FromDiscord> <joshgoebel> (edit) "yeah, I'm trying to see how easy it is to use Nim to build libraries for Wren ... " 03added "(which has a C runtime)"
[14:04:10] <PMunch> Should be simple enough
[14:04:16] *** Quits: neurocyte (~neurocyte@user/neurocyte) (Quit: The Lounge - https://thelounge.chat)
[14:04:30] <PMunch> @haxscramper, I've found some issues with the namegen module..
[14:05:12] <PMunch> This name, when passed through newName, will produce the exact same name: __pthread_unwind_buf_t
[14:05:21] <PMunch> Despite not being a valid Nim identifier
[14:07:54] *** Joins: neurocyte (~neurocyte@45.93.108.142)
[14:07:54] *** Quits: neurocyte (~neurocyte@45.93.108.142) (Changing host)
[14:07:54] *** Joins: neurocyte (~neurocyte@user/neurocyte)
[14:10:57] *** Joins: krux02 (~krux02@p4ff8b737.dip0.t-ipconnect.de)
[14:11:06] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[14:12:13] *** Joins: flynn (~mcbloch@user/flynn)
[14:32:41] <madprops>  <Elegantbeef> `echo a, " ", b` is too much?
[14:32:42] <madprops> kinda
[14:33:29] <FromDiscord> <impbox [ftsf]> i do find it a bit of a pain having to do that
[14:45:01] <FromDiscord> <haxscramper> In reply to @PMunch "This name, when passed": I fixed it now, will push new version later today
[14:45:48] <PMunch> @haxscramper, did you also fix that this is going to replace the first character with a "_" in that case? https://github.com/haxscramper/hmisc/blob/master/src/hmisc/algo/namegen.nim#L42
[14:46:09] <PMunch> And could you push it to a different branch so I can test it out until then?
[14:46:57] <FromDiscord> <haxscramper> Okay, I will add more tests now and then push new version
[14:51:54] <arkanoid> how to pass a NimNode as argument to a macro?
[14:52:37] <FromDiscord> <rb3.nim> sent a code paste, see https://play.nim-lang.org/#ix=3xCx
[14:52:45] <arkanoid> if I pass a nnkProcDef as argument to a macro it becomes a nnkSym
[14:54:12] <arkanoid> and static[NimNode] wont work even if the macro is called from a static: block
[14:55:17] <FromDiscord> <haxscramper> Macro accepts either `typed` or `untyped`
[14:55:21] <FromDiscord> <haxscramper> AST
[14:55:31] <FromDiscord> <Rika> Use a proc if you are passing a node I believe
[14:55:36] <FromDiscord> <Rika> Instead of a macro
[14:55:44] <FromDiscord> <haxscramper> If you need to pass proc decl you can do it like `myMacro(procName)`, but it will still be a `nkSym`
[14:56:01] <FromDiscord> <haxscramper> Because you are passing AST with proc name that gets converted to a symbol
[14:56:21] <FromDiscord> <tandy> is there a way to convert unixtime to a datetime?
[14:56:38] <FromDiscord> <tandy> ` fromUnix` just creates a `time` object
[14:56:42] <FromDiscord> <tandy> which cant be formatted in a nice way
[15:00:16] <FromDiscord> <haxscramper> In reply to @haxscramper "Okay, I will add": Done
[15:00:27] <FromDiscord> <tandy> oh you can format `time`objects with a format string
[15:01:53] <FromDiscord> <Rika> https://nim-lang.org/docs/times.html#inZone%2CTime%2CTimezone
[15:17:38] <FromDiscord> <kaushalmodi> sent a long message, see http://ix.io/3xCG
[15:22:35] <FromDiscord> <Rika> Can you change the stream into a string?
[15:25:28] <FromDiscord> <kaushalmodi> In reply to @Rika "Can you change the": I think I tried doing that but it didn't work. I'll try sending `$streamvar` in some time once I get back to the PC. ‚Üµ‚ÜµAlso thinking, would it be possible to send/recv protobuf in binary format without converting it in and out of string? Because I can imagine that that conversion would be very inefficient.
[15:25:50] <FromDiscord> <Rika> Strings in Nim are not necessarily text
[15:25:57] <FromDiscord> <Rika> They can be binary data
[15:26:17] <FromDiscord> <Rika> I don‚Äôt think the module has stream support so no you need to make it a string
[15:26:27] <FromDiscord> <Rika> Conversion would be inefficient indeed
[15:27:25] <arkanoid> I'm trying to build a proc in a "quote do" block like "proc `newName`*(arg1: ptr T1; `inputIdent`) = ...", but it doesn't like `inputIdent` even if it is an IdentDefs node extracted from another proc
[15:29:02] <arkanoid> error is: Error: identifier expected, but found 'tasGetServiceCapabilities: ptr TtasGetServiceCapabilities'
[15:29:13] <arkanoid> that's exactly what inputIdent is
[15:29:19] <FromDiscord> <haxscramper> arkanoid `dumpTree` on the generated code
[15:29:27] <FromDiscord> <kaushalmodi> In reply to @Rika "I don‚Äôt think the": Thanks! I'll get back once I try it out.
[15:29:34] <FromDiscord> <haxscramper> And compare it with what you would write manually
[15:29:49] <FromDiscord> <haxscramper> I need `treeDiffRepr` for `hnimast` ...
[15:30:52] <arkanoid> thanks. I already have to grok all the tooling required for more-than-trivial macros
[15:31:03] <arkanoid> s/already/still
[15:34:27] <arkanoid> oh, it drops an IdentDefs into an IdentDefs
[15:34:40] *** Joins: Vladar (~Vladar@46.162.2.53)
[15:36:05] <arkanoid> this is surprising, how can I overcome this
[15:37:12] <arkanoid> basically it assumes that the argument is an IdentDefs and if I pass an IdentDefs it results in an IdentDefs into an IdentDefs
[15:38:37] <FromDiscord> <haxscramper> With regular quote do this can't be done, you need to construct tree manually
[15:39:55] <arkanoid> :(
[15:40:40] <FromDiscord> <haxscramper> You can just construct a tree and assugn `resut.params[0] = ???`
[15:41:37] <arkanoid> yes, I was on that path yesterday, then I though "let's rewrite in quote do style!"
[15:42:38] <PMunch> @haxscramper, __kernel_time_t still gets returned like that..
[15:42:49] <FromDiscord> <haxscramper> dfasd
[15:43:16] <PMunch> You set result = str on line 69
[15:43:26] <PMunch> So simply just setting it to the input string
[15:44:34] <FromDiscord> <haxscramper> you need to use `fixIdentName`, not `newName`
[15:45:28] <FromDiscord> <haxscramper> see tests for example
[15:46:48] <FromDiscord> <haxscramper> I'm not sure what I was doing with this API exactly
[15:46:51] <PMunch> Aha..
[15:49:05] <FromDiscord> <haxscramper> Ideally `fixIdentName` should be a single entry point that implements different name resolution schemes, but it somehow never got merged into one. `fixIdentName` adds prefix until new ident is consired "actually new", and `newName()` appends number
[15:52:26] <PMunch> Hmm yeah
[15:52:50] <PMunch> Is there no way to get all the declared names in Nim?
[15:53:13] *** Joins: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca)
[15:53:50] <FromDiscord> <enthus1ast> sent a code paste, see https://play.nim-lang.org/#ix=3xCM
[15:53:54] <PMunch> Since I want to be able to call this from a macro it would be nice to have it not try to overwrite existing identifiers
[15:54:41] <PMunch> I know I can call "declared", but that is at compile-time, and I need to run this as an external program since it uses libclang
[15:55:28] <PMunch> It would be nice to write out all the declared identifiers, then staticExec an external helper program which gets fed the declared identifiers and spits out a file that is then included in the Nim program
[15:55:31] <FromDiscord> <haxscramper> You can try to get access to the IdentCache of the compiler if you write external tool
[15:55:58] <FromDiscord> <haxscramper> Or ModuleGraph might have something as well
[15:57:25] <PMunch> Hmm, but that means reparsing the entire thing..
[15:58:12] <PMunch> I guess I could wrap all my definitions in a `when not declared(X)` kind of thing
[15:58:30] <PMunch> But that means I need to break up my type block and therefore handle circular types myself..
[15:59:11] <FromDiscord> <haxscramper> yep, that's how I do it
[15:59:36] <FromDiscord> <haxscramper> parse everything, build explicit graph, infer cycles, merge them to clusters, write separate files, import them
[15:59:44] <FromDiscord> <haxscramper> `hmisc/hgraph`
[15:59:53] <PMunch> That sounds painful..
[15:59:59] <FromDiscord> <haxscramper> `hmisc/other/hgraph`. Probably slow as ass, but right now I'm concerned with API
[16:01:01] <FromDiscord> <haxscramper> https://github.com/haxscramper/hcparse/blob/master/src/hcparse/hc_parsefront.nim#L564
[16:03:22] *** Quits: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca) (Ping timeout: 245 seconds)
[16:08:25] *** Joins: luis_ (~luis@179.105.138.153)
[16:18:23] <PMunch> I guess I could also have my helper tool export a file of formatted "suggestions" that could then be read in by the macro and parsed with declared to spit out the actual code
[16:18:51] <PMunch> Not as pretty as spitting out a file to be included, but it should work..
[16:23:28] <FromDiscord> <demotomohiro> !eval echo typeof(Natural(1));echo typeof(Natural(1) + Natural(2))
[16:23:33] <NimBot> Natural‚Üµint
[16:23:51] <FromDiscord> <demotomohiro> It should be Natural, isn't it?
[16:28:51] <FromDiscord> <xflywind> The signature of matched procs
[16:28:52] <FromDiscord> <xflywind> proc `+`(x, y: int): int {.magic: "AddI", noSideEffect.}
[16:29:42] <FromDiscord> <xflywind> There is no specific `+` proc for Natural types.
[16:29:58] *** Quits: max22- (~maxime@2a01cb08833598001c2c73c755058a4b.ipv6.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[16:30:11] <FromDiscord> <demotomohiro> So, Natural(1) + Natural(2) calls that proc and return type is int.
[16:30:26] <FromDiscord> <xflywind> yeah
[16:33:14] <PMunch> Hmm, this is a bit annoying. It's doing such a good job of wrapping things that it goes all the way down to grabbing the definitions of uint8_t for example. But these are already wrapped in Nim so it would be annoying if my wrapping created a new type for it
[16:33:52] <FromDiscord> <enthus1ast> hey @xflywind i'm again fighting with prologue on windows, i suspect the staticFile caching is not working correctly
[16:35:10] *** Quits: luis_ (~luis@179.105.138.153) (Ping timeout: 240 seconds)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:38:26] <FromDiscord> <demotomohiro> sent a code paste, see https://play.nim-lang.org/#ix=3xD1
[16:41:41] <FromDiscord> <haxscramper> That is expected. Natural is a positive range, and with overflowCheck enabled it raises
[16:41:48] <FromDiscord> <xflywind> In reply to @enthus1ast "hey <@658563905425244160> i'm again": hi, what's wrong with it?
[16:42:30] <FromDiscord> <xflywind> maybe you can open an issue
[16:43:05] <FromDiscord> <enthus1ast> site does not load (sometimes), sometimes images are not delivered, i'll play with it (have removed etag stuff already) and currently i'm building devel to try it on devel
[16:43:14] <FromDiscord> <enthus1ast> i'm not sure what the issue is
[16:43:27] <FromDiscord> <xflywind> thanks
[16:46:12] <FromDiscord> <demotomohiro> In reply to @haxscramper "That is expected. Natural": But I'm not expecting `a = Natural(1) + Natural(2)` become `int` type instead of `Natural`.
[16:46:40] <FromDiscord> <haxscramper> Buy you have explicit : Natural
[16:46:50] <FromDiscord> <haxscramper> (edit) "Buy" => "But"
[16:47:38] <FromDiscord> <kaushalmodi> @Rika Yep, `$` is not defined for streams. Also, I am wondering if the effort to define a `$` is worth it.. because then on the receiving side I would need to do string -> stream -> protobuf conversion, and I am not sure how the conversion from string to stream will work
[16:48:51] <FromDiscord> <demotomohiro> !eval let a = Natural(1); let b = Natural(1) + Natural(2); echo typeof(a), ", ", typeof(b)
[16:48:55] <NimBot> Natural, int
[16:49:33] <FromDiscord> <demotomohiro> I think both `a` and `b` should become Natural.
[16:51:25] <FromDiscord> <haxscramper> Write an overload
[16:51:43] <FromDiscord> <haxscramper> Locally defined overloads have precedence over imported
[16:52:24] <FromDiscord> <joshgoebel> is there same way to get nimgen to pull from main vs master?
[16:52:29] <FromDiscord> <joshgoebel> (edit) "same" => "some"
[16:56:15] <FromDiscord> <demotomohiro> In reply to @haxscramper "Locally defined overloads have": Yes, overloading `+`, `-`, ``, `div` for Natural can fix it.‚ÜµBut I think these overloaded should be exists in stdlib.
[16:57:21] <FromDiscord> <haxscramper> - for natural makes no sense
[16:57:35] <FromDiscord> <haxscramper> 4 - 2 is not a natural, it is an int
[16:58:54] <PMunch> Hmm, the more I think about it I think having an intermediary file format with symbols and their information is a good idea
[17:01:01] <PMunch> Basically something that has the file it was declared in, the nimified name, the kind, and the declaration information. Then the macro will read in this file and grab all the symbols it is interested in, fix their names, and generate the Nim code to define them
[17:03:25] <FromDiscord> <haxscramper> Yes, I've came to the same conclusion
[17:03:46] <FromDiscord> <haxscramper> `hcparse/hc_types.Save<Object/Enum/Alias/Proc>`
[17:04:24] <FromDiscord> <haxscramper> Also allows having multiple frontends for C source parsing, from libclang to literally manual annotations
[17:05:17] <PMunch> That is true
[17:05:53] <PMunch> Now the question becomes, what is the easiest kind of format to parse on Nim compile-time
[17:06:13] <FromDiscord> <haxscramper> json
[17:06:17] <FromDiscord> <haxscramper> jsony works at compile-time
[17:09:08] *** Joins: arkurious (~arkurious@user/arkurious)
[17:11:10] <PMunch> The built-in json module also works on compile-time
[17:11:34] <PMunch> But I don't really need anything as "fancy" as Json..
[17:11:38] <FromDiscord> <kaushalmodi> sent a code paste, see https://play.nim-lang.org/#ix=3xD8
[17:11:41] <PMunch> Eh, it's easy
[17:12:19] <FromDiscord> <kaushalmodi> sent a code paste, see https://play.nim-lang.org/#ix=3xD9
[17:12:25] <FromDiscord> <haxscramper> How json is "fancy"? it is just `ir.toJson()` or `fromJson(IR)`
[17:13:07] <PMunch> @kaushalmodi, it looks like your recvInto is overflowing
[17:13:17] <PMunch> What is ExampleMessage
[17:13:50] <PMunch> @haxscramper, it's fancy as in creates a whole tree structure and supports a bunch of stuff I don't really need
[17:14:01] <PMunch> I could just use a binary format
[17:14:09] <FromDiscord> <kaushalmodi> sent a code paste, see https://play.nim-lang.org/#ix=3xDa
[17:14:11] <FromDiscord> <kaushalmodi> I got that number of 19 from `msg.len`
[17:14:29] <FromDiscord> <kaushalmodi> I learned that the `len` proc is not exported so for now I have hard-coded that value 19 in the server
[17:14:42] <FromDiscord> <enthus1ast> @xflywind\: the issue is asyncfile
[17:14:58] <FromDiscord> <enthus1ast> i've patched it to normal (sync) file io and it works
[17:15:52] <PMunch> msg.len from your example returns 15
[17:16:12] <PMunch> Basically msg.len is the size in bytes required to store the message in the protobuf format
[17:16:33] <PMunch> That means that the variable length ints and strings will make the message larger or smaller
[17:16:59] <FromDiscord> <xflywind> In reply to @enthus1ast "i've patched it to": cool, maybe I should remove `asyncfile`. is there something wrong in `asyncfile` or I misuse it?
[17:17:33] <FromDiscord> <kaushalmodi> PMunch: Thanks! I try the value of 15.. but the msg is unmodified so not sure how that changed.‚Üµ‚ÜµAlso, is there a way to export the protobuf `len`? I found `exportMessage` macro, but cannot figure out how to export the `len` proc
[17:17:52] <PMunch> https://play.nim-lang.org/#ix=3xDd
[17:18:05] <FromDiscord> <kaushalmodi> crashes with value of 15 as well
[17:18:26] <PMunch> My point is that you shouldn't use a hard-coded message length
[17:18:35] <PMunch> Because it will vary depending on the content of your data
[17:18:53] <FromDiscord> <kaushalmodi> yes, I agree with that. For now, the data is constant, not a variable
[17:19:18] <FromDiscord> <kaushalmodi> Once I get the constant data going through asyncnet, I need to learn how to get msg.len work on server side
[17:19:56] <PMunch> Try using the readExampleMessage procedure instead
[17:19:58] <PMunch> That should help
[17:21:37] <FromDiscord> <kaushalmodi> That would require to first convert the protobuf to stream. I am trying to send a protobuf var across sockets
[17:23:06] <PMunch> Or you could read it out from the bodyStream of the response
[17:24:11] <PMunch> Hmm, I guess that would only work for non-async though.. Because I don't think protobuf creates readExampleMessageAsync..
[17:24:54] *** Joins: max22- (~maxime@2a01cb08833598002194f34da34c193e.ipv6.abo.wanadoo.fr)
[17:25:27] <FromDiscord> <kaushalmodi> here's my minimal example: It's expanded over the ChapApp example from dom's book: https://gist.github.com/kaushalmodi/e75bd98468e75b6efdd7e2268bc68596
[17:26:52] <PMunch> You can't read the ExampleMessage like that by the way
[17:27:01] <PMunch> You need to use the stream reader/writer interface
[17:27:23] <PMunch> The ExampleMessage type is just a normal Nim type
[17:27:53] <FromDiscord> <kaushalmodi> oops, sorry, first time fiddling with protobuf
[17:28:28] <FromDiscord> <kaushalmodi> I got the part about using write and readExampleMessage to convert between stream and ExampleMessage. But the roadblock is on how to send that stream through socket
[17:28:36] <PMunch> Basically the way it works is that it parses the protobuf spec you give it and generate a regular Nim type describing the same object and reader/writer procedures that can create and read this type
[17:29:16] <PMunch> That is the tricky part, if you use a non-async socket it's trivial, simply grab the socket from the request/response and use that
[17:29:30] <FromDiscord> <Rika> How do I get started with GPU programming with Nim
[17:29:43] <FromDiscord> <Rika> Or in general
[17:29:57] <PMunch> But async sockets have a FutureStream instead, which the current protobuf implementation doesn't generate reader/writers for
[17:30:29] <PMunch> This means that to use an async socket you probably need to first write it into a string stream, then write that string stream into the socket stream
[17:30:49] <FromDiscord> <kaushalmodi> PMunch: I will need to use async.. I am working on a proof of concept that hooks up SystemVerilog with a C++ model of the hardware via sockets
[17:31:04] <FromDiscord> <Rika> In reply to @Rika "How do I get": Actually never mind, I don‚Äôt think what I plan to do can apply
[17:32:06] <FromDiscord> <kaushalmodi> PMunch:‚Üµ‚Üµ> first write it into a string stream‚ÜµThat's what `stream.write msg` will do, right? So, "socket stream" is the next unknown for me
[17:32:51] <PMunch> `stream.writeExampleMessage(myMessage)` should do that I believe
[17:32:56] <PMunch> If I remember correctly
[17:33:14] <FromDiscord> <kaushalmodi> you have a `write` proc for all protobuf message types
[17:33:16] <PMunch> You can find info about the socket stream in the httpclient documentation
[17:33:23] <PMunch> Ah right
[17:33:25] <PMunch> That makes sense
[17:33:51] <FromDiscord> <enthus1ast> @xflywind\: i really do not know, maybe the issue is now shadowed because it blocks on file read.
[17:34:06] <FromDiscord> <enthus1ast> do you usually test on windows?
[17:34:30] <FromDiscord> <xflywind> I mainly use windows
[17:34:33] <FromDiscord> <xflywind> https://github.com/dom96/jester/blob/a03b5be0b72f1a686b6ca594c145cee665e6db7b/jester.nim#L187
[17:34:53] <FromDiscord> <xflywind> jester uses blocking file read too
[17:35:56] <FromDiscord> <enthus1ast> mh ok, i can imagine that while developing it does not really matter, later when it runs in production nginx/apache should serve static files.
[17:36:30] <FromDiscord> <xflywind> yeah
[17:36:54] <FromDiscord> <xflywind> nginx should be used to serve static files
[17:37:26] <FromDiscord> <enthus1ast> should i open a pr? or do you wan't to do it yourself?
[17:37:39] <FromDiscord> <enthus1ast> i will push to my branch, though
[17:37:50] <FromDiscord> <xflywind> PR is welcome,
[17:38:27] <FromDiscord> <xflywind> after you know the problem better than me
[17:38:32] <FromDiscord> <xflywind> (edit) "after ... you" 03added "all"
[17:38:39] <FromDiscord> <enthus1ast> at least it bites me \:)
[17:39:49] <FromDiscord> <enthus1ast> but it would be nice to know if asyncfile is bugged, but my understanding of how async works is very minimal to be honest
[17:41:08] <FromDiscord> <enthus1ast> jester also uses asyncFile https://github.com/dom96/jester/blob/a03b5be0b72f1a686b6ca594c145cee665e6db7b/jester.nim#L208
[17:42:34] <FromDiscord> <xflywind> your file is small than 20 MB, right?
[17:42:42] <FromDiscord> <enthus1ast> yes
[17:43:27] <FromDiscord> <xflywind> I see
[17:45:24] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[17:45:54] *** Joins: rockcavera (~rc@192.12.112.218)
[17:45:54] *** Quits: rockcavera (~rc@192.12.112.218) (Changing host)
[17:45:54] *** Joins: rockcavera (~rc@user/rockcavera)
[17:46:31] *** Joins: flynn (~mcbloch@user/flynn)
[17:46:48] <arkanoid> what does "Error: expression has no address" means?
[17:47:16] <FromDiscord> <Rika> Exactly as it says. You can‚Äôt get the address of the expression
[17:47:24] <FromDiscord> <Rika> Usually because it‚Äôs a literal or a constant
[17:47:32] <FromDiscord> <Rika> Or a return value
[17:49:18] *** Quits: max22- (~maxime@2a01cb08833598002194f34da34c193e.ipv6.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[17:50:24] <FromDiscord> <joshgoebel> is there a way to install nimble packages locally such as to do development on this while using them, etc?
[17:50:35] <FromDiscord> <enthus1ast> yes
[17:50:38] <FromDiscord> <enthus1ast> nimble develop
[17:51:59] <FromDiscord> <enthus1ast> sent a code paste, see https://play.nim-lang.org/#ix=3xDw
[18:04:40] *** Quits: federico3 (~quassel@debian/federico) (Ping timeout: 252 seconds)
[18:09:05] <arkanoid> Rika, thanks!
[18:09:21] <FromDiscord> <Rika> Did you solve it? Nice
[18:09:22] <arkanoid> "quote do" is the best invention ever after cold beer
[18:09:28] <FromDiscord> <Rika> Lol
[18:12:02] <FromDiscord> <gogolxdong (liuxiaodong)> I didn't find any example of initialization of generic object sequence
[18:12:14] *** Joins: max22- (~maxime@2a01cb0883359800ebf73839d72fccc8.ipv6.abo.wanadoo.fr)
[18:15:11] <FromDiscord> <gogolxdong (liuxiaodong)> sent a code paste, see https://play.nim-lang.org/#ix=3xDI
[18:22:53] <FromDiscord> <MrOkram> Hi, when i try to install Nim on a newly installed Ubuntu 18.04 using Choosenim i get Segmentation fault during the install.  Any clues as to why ? https://media.discordapp.net/attachments/371759389889003532/882624048746598480/unknown.png
[18:26:04] <FromDiscord> <MrOkram> Here's the output of the debug version: https://media.discordapp.net/attachments/371759389889003532/882624850521374820/unknown.png
[18:30:39] *** Quits: PMunch (~PMunch@vpn.dualog.com) (Quit: Leaving)
[18:47:13] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[18:51:34] <FromDiscord> <gogolxdong (liuxiaodong)> Does cps support generics?
[18:58:12] <NimEventer> New thread by Enthus1ast: Concepts, undeclared field., see https://forum.nim-lang.org/t/8386
[19:18:14] <NimEventer> New thread by Miran: This Month with Nim: August 2021, see https://forum.nim-lang.org/t/8387
[19:45:03] <FromDiscord> <marceneiro> sent a code paste, see https://play.nim-lang.org/#ix=3xEr
[19:47:25] <FromDiscord> <haxscramper> Use `startProcess` instead of an `execProcess`
[19:48:08] <FromDiscord> <leorize> not at the moment
[19:56:06] <FromDiscord> <marceneiro> In reply to @haxscramper "Use `startProcess` instead of": Thanks, that worked
[20:15:54] *** Quits: beshr (~beshr@user/beshr) (Read error: Connection reset by peer)
[20:22:45] *** Joins: beshr (~beshr@user/beshr)
[20:52:07] <arkanoid> I really need to pass an argument of type NimNode to a macro, is it really impossible? It would require a bad pattern otherwise
[20:52:51] <arkanoid> I need this as I'm reading a nim file via parseStmt, then I'm filtering some ProcDefs and I need to pass them macro to generate a wrapper
[20:53:21] <arkanoid> the only solution I've found so far is to put the parsing loop inside the macro
[20:54:02] <arkanoid> an alternative solution would require to get all existing procs inside a module at compile time
[20:55:55] <FromDiscord> <haxscramper> Best approach would be to just put all logic inside of a macro, including `parseStmt` etc.
[20:56:18] <FromDiscord> <haxscramper> Why do you want to split `parseStmt` from macro in the first place?
[20:59:05] <arkanoid> as each piece of wrapping logic runs on single ProcDefs independently, I wanted to loop over then and apply a proc or something like that
[20:59:38] <arkanoid> but I'm doing "quote do" inside the wrapping logic so I need it to be template or macro
[20:59:49] <arkanoid> it works inside a singlie big indented macro too
[21:08:08] <FromDiscord> <haxscramper> Honestly, I don't quite understand your setup to begin with. If the code size is a problem, you can split macro logic in procs that accept and return `NimNode`
[21:08:47] <FromDiscord> <haxscramper> "macro accepting NimNode" usually means that you are trying to make a macro that calls other macro that does part of the job for it
[21:09:24] <FromDiscord> <haxscramper> At least most of the time that's the XY problem for managing large macro implementation
[21:11:15] <FromDiscord> <dom96> In reply to @MrOkram "Here's the output of": Very weird. Please report on GitHub
[21:18:10] <arkanoid> yeah, my only aim is to split large macro loop into smaller unit of logic
[21:19:16] <FromDiscord> <haxscramper> Then you should do `proc logicPart(node: NimNode): NimNode`
[21:19:42] <FromDiscord> <haxscramper> If you want to look how \~2.5k SLOC macro is implemented you can check out pattern matching from fusion
[21:26:16] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[21:27:25] *** Joins: flynn (~mcbloch@user/flynn)
[21:51:49] *** Joins: PMunch (~PMunch@c01F28BC3.dhcp.as2116.net)
[21:53:04] <FromDiscord> <MrOkram> In reply to @dom96 "Very weird. Please report": I'll maybe do that tomorrow, as i think this time the VM itself could be at fault. Aka, it wasn't properly configured \:(
[21:54:19] <FromDiscord> <fae> Is there a particular strategy for using c2nim? I‚Äôve successfully used it on smaller header files. But on larger files it just hangs. The most recent one in this example being chipmunk2d main header file. So I just started commenting stuff out until it compiled, but I‚Äôm not sure why that got it working.
[21:54:50] <FromDiscord> <fae> (edit) "compiled," => "transpiled,"
[21:56:03] <FromDiscord> <fae> Like since it‚Äôs just hanging instead of giving some parse error or something I‚Äôm not sure how to properly figure out what‚Äôs going on
[22:01:33] <FromDiscord> <exelotl> I've never had it hang before, that sounds rough :(
[22:02:33] <FromDiscord> <fae> I had to comment out these two blocks to get it working https://github.com/slembcke/Chipmunk2D/blob/master/include/chipmunk/chipmunk.h#L48-L58 https://github.com/slembcke/Chipmunk2D/blob/master/include/chipmunk/chipmunk.h#L177-L179
[22:04:25] <FromDiscord> <haxscramper> Particular strategy of using c2nim is to tweak input header until c2nim is satisfied
[22:04:25] <FromDiscord> <haxscramper> If it it literally hangs then I suppose it is a bug
[22:05:00] <FromDiscord> <fae> So it sounds like I wasn't too far off with just commenting stuff out to satisfy it
[22:07:23] <FromDiscord> <fae> This was another header file that just hangs when trying to transpile https://github.com/brackeen/glfm/blob/master/include/glfm.h
[22:07:39] <FromDiscord> <fae> Honestly thought I was doing something wrong since the first two semi-large header files I tried to transpile it hangs on
[22:08:34] <FromDiscord> <haxscramper> yes
[22:08:35] <FromDiscord> <haxscramper> Though this part itself does not hand c2nim for me
[22:08:36] <FromDiscord> <haxscramper> And full file errors out at `chipmunk.h(48, 25) Error: token expected: ;`
[22:09:06] <FromDiscord> <fae> thats strange, something about my environment perhaps?
[22:10:09] <FromDiscord> <haxscramper> Does it hang on clear, unmodified file?
[22:10:19] <FromDiscord> <haxscramper> For me it just fails
[22:10:27] <FromDiscord> <haxscramper> But does not hang in any way
[22:10:43] <FromDiscord> <haxscramper> Nim version 1.4.8
[22:11:17] <FromDiscord> <fae>  https://media.discordapp.net/attachments/371759389889003532/882681530500145222/Screen_Shot_2021-09-01_at_10.40.23_AM.png
[22:11:27] <FromDiscord> <fae> first run is with that stuff commented out, second run is with it still in there
[22:11:47] <FromDiscord> <fae> i get a warning and it hangs, but then it says syntax error at the end of the line, which is what gave me the hint to comment that out in the first place
[22:12:35] <arkanoid> I'm experiencing a strange quote do behaviour. I have "quote do: myObj.subObj.`nameIdent`(myObj.endpoint, nil, `inputNameIdent`.unsafeAddr, result.unsafeAddr)" that is rendered as "myObj.subObj.funcName(endpoint, nil, arg1.unsafeAddr, result.unsafeAddr)". myObj before endpoint disappears
[22:12:52] <FromDiscord> <fae> this is also with 1.4.8
[22:15:30] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[22:16:02] <arkanoid> treeRepr turns it into a 'Sym "endpoint"' for no apparent reason
[22:16:09] <FromDiscord> <fae> `touch test.h && c2nim test.h` does not hang, it properly errors out
[22:18:16] <arkanoid> should really be a DotExpr node kind afaik
[22:31:39] <FromDiscord> <fae> the hanging also causes memory usage to keep climbing, letting it run for a few sec left the process at like 10gb memory üòì
[22:31:45] <arkanoid> nevermind, found the culprit
[22:33:48] *** Joins: rockcavera (~rc@192.12.112.218)
[22:33:48] *** Quits: rockcavera (~rc@192.12.112.218) (Changing host)
[22:33:48] *** Joins: rockcavera (~rc@user/rockcavera)
[22:39:32] *** Quits: idf (~idf@198.23.223.146) (Remote host closed the connection)
[22:42:32] *** Quits: max22- (~maxime@2a01cb0883359800ebf73839d72fccc8.ipv6.abo.wanadoo.fr) (Ping timeout: 245 seconds)
[22:52:59] *** Joins: SebastianM (~seba@user/sebastianm)
[23:00:15] *** Quits: SebastianM (~seba@user/sebastianm) (Quit: Bye)
[23:07:53] *** Joins: max22- (~maxime@2a01cb0883359800f554d7694bd7e6d3.ipv6.abo.wanadoo.fr)
[23:10:42] *** Quits: PMunch (~PMunch@c01F28BC3.dhcp.as2116.net) (Remote host closed the connection)
[23:58:11] <FromDiscord> <deech> How I force compilation of all my library modules? So if I'm using `clang` I have modules, `A` and `B` and a program `C` that only uses `A` any codegen errors lurking in `B` don't get caught by `clang` .
[23:58:40] <FromDiscord> <deech> (edit) "How I force compilation of all my library modules? So if I'm using `clang` ... I" 03added "as the backend compiler and"
[23:58:44] *** Quits: flynn (~mcbloch@user/flynn) (Ping timeout: 244 seconds)
