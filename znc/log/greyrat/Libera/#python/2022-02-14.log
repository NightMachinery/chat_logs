[00:00:10] <jinsun> doesn't feel right to rely on it, and pyright doesn't let you use it
[00:00:40] *** Quits: singularity00 (~singulari@236.lan-hi1-2.static.rozabg.com) (Ping timeout: 256 seconds)
[00:00:46] <grym> no kidding :D
[00:00:53] <SnoopJ> jinsun, sure, I mean at a minimum the namespace has to be created, and it just kinda makes sense that the way you get "the box inside the box" is to open the outer box first :)
[00:01:06] <SnoopJ> (again, from the language's perspective; I totally understand why users find this confusing)
[00:01:28] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[00:01:40] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[00:02:00] *** Quits: mossman93_ (~quassel@user/mossman93) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:02:17] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[00:02:39] *** Joins: mossman93 (~quassel@user/mossman93)
[00:02:48] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[00:02:50] *** Quits: pulsar12 (~quassel@a95-92-49-154.cpe.netcabo.pt) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:03:17] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 240 seconds)
[00:03:17] *** Joins: cjb (~cjb@user/cjb)
[00:04:51] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[00:05:37] * CrtxReavr rips his hair out.
[00:06:55] <CrtxReavr> Why would 19/19 tc(8) Linux commands run fine if run from a bash script, but only 17/19 of the exact same commands run successfull via a python subprocess?
[00:07:04] *** Joins: purple_cthulhu (~rax@2.186.248.47)
[00:07:20] *** Joins: singularity00 (~singulari@236.lan-hi1-2.static.rozabg.com)
[00:07:41] <CrtxReavr> https://bpa.st/XVZQ
[00:07:45] *** Parts: purple_cthulhu (~rax@2.186.248.47) ()
[00:08:10] *** Joins: shailangsa_ (~shailangs@host86-186-127-164.range86-186.btcentralplus.com)
[00:08:33] *** Joins: purple_cthulhu (~rax@2.186.248.47)
[00:08:35] *** Quits: purple_cthulhu (~rax@2.186.248.47) (Client Quit)
[00:08:49] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[00:08:50] *** Joins: purple_cthulhu (~rax@2.186.248.47)
[00:09:24] *** Joins: zumba_addict (~zumba_add@2601:240:4500:8320:224:1dff:fec8:64f6)
[00:09:36] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[00:09:47] <TML> CrtxReavr: Try with shell=True?
[00:09:57] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[00:11:07] <TML> I've never used tc(8), so I couldn't begin to guess why it would care about that, but it's something that occurs to me to try
[00:11:39] *** Joins: crashrep (~crashrep@user/crashrep)
[00:12:36] <TML> CrtxReavr: Though "RTNETLINK answers: File exists" looks suspiciously like you're running a command which is not idempotent, and you failed to correctly clean up after the successful bash run
[00:12:44] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[00:13:30] <TML> i.e., I would not be surprised to find you get the same error on that specific command with bash if you had run the python first and then the bash
[00:14:13] *** Joins: jmd (~user@de.cellform.com)
[00:15:23] <TML> CrtxReavr: And a bit of googling suggests that perhaps the other error is similarly related:  It declares "Error: Exclusivity flag on, cannot modify." in that situation when the command is re-run again.
[00:16:23] *** Quits: magla (~gelignite@d536720f.access.ecotel.net) (Quit: Stay safe!)
[00:16:28] <CrtxReavr> TML, I know the clean-up routine. . . and I'm running it.
[00:16:41] <CrtxReavr> Literally, iva bash all 19 commands run.
[00:16:52] <TML> CrtxReavr: OK - like I said, I don't know tc(8) at all, so I was guessing
[00:16:57] <CrtxReavr> inside python, only 17 run.
[00:17:19] <SnoopJ> Does knowing the routine guarantee that it is correct?
[00:17:27] <TML> I just know other times when I get that "RTNETLINK answers: File exists", it's because I tried to make the same change to the networking stack twice
[00:17:36] <CrtxReavr> Tried in both subprocess and os.system() for shits & giggles.
[00:17:45] *** Joins: stwange (~j@199.218.6.51.dyn.plus.net)
[00:18:07] <CrtxReavr> I tried shell=True. . . which I think is a good idea, as it's gotta be something environmenttal, but it needs some tweaks for that to work.
[00:19:31] <CrtxReavr> Does shell=True require the command be supplied as a string, instead of an iterator of strings?
[00:19:52] *** Quits: magga (magga@ti0036a400-3577.bb.online.no) (Remote host closed the connection)
[00:20:15] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[00:20:15] <TML> No
[00:20:46] <TML> at least, shell=True works with a tuple - I'm not sure what you mean by "an iterator of strings" in this usage
[00:20:48] <TML> subprocess.run(('ls', '-a', '-l'), shell=True)
[00:21:44] *** Joins: nomic (~nomic@185.192.69.51)
[00:21:51] <jinsun> doesn't require but the docs say, "If shell is True, it is recommended to pass args as a string rather than as a sequence."
[00:21:54] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[00:22:32] <TML> Oh, hm: If args is a sequence, the first item specifies the command string, and any additional items will be treated as additional arguments to the shell itself.
[00:22:39] *** Quits: cosimone (~user@93-34-133-235.ip49.fastwebnet.it) (Read error: Connection reset by peer)
[00:22:44] <CrtxReavr> 'cause now all the sudden it's doesn't like my tc(8) syntax.
[00:22:47] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[00:22:55] <TML> CrtxReavr: ''.join()
[00:23:01] <TML> err - space, not ''
[00:23:22] *** Quits: stwange (~j@199.218.6.51.dyn.plus.net) (Quit: This computer has gone to sleep)
[00:23:35] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[00:24:01] <jinsun> better to shlex.join
[00:24:13] <SnoopJ> Yea because the sequence spelling is the equivalent of /bin/sh -c ...
[00:24:20] <CrtxReavr> Okay, same shit with shell=True.
[00:24:24] <CrtxReavr> grrr
[00:24:36] <CrtxReavr> I need a break from this.
[00:25:23] <SnoopJ> Working on the Python part seems like working the problem in reverse to me
[00:25:24] <TML> jinsun: Never even heard of that one, TIL :)
[00:25:24] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[00:25:26] *** Quits: nomic (~nomic@185.192.69.51) (Client Quit)
[00:25:33] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[00:25:50] <SnoopJ> Since the errors are fairly specific and should be something that can be followed backwards until a point of divergence is identified
[00:25:55] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[00:26:20] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[00:28:33] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Client Quit)
[00:28:41] *** Joins: stwange (~j@199.218.6.51.dyn.plus.net)
[00:28:50] *** Quits: Celeo (~Celeo@user/celeo) (Ping timeout: 272 seconds)
[00:29:09] *** Quits: stwange (~j@199.218.6.51.dyn.plus.net) (Read error: Connection reset by peer)
[00:29:15] <jinsun> yeah feels like a problem in the order things run, and/or the clean-up routine
[00:29:19] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[00:29:21] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[00:30:04] <SnoopJ> or perhaps the shell environment has something special going on that isn't present when running through subprocess
[00:30:19] <SnoopJ> There's just too many possibilities to try and work it forward, and it leaves all that useful error information on the table...
[00:30:29] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[00:30:32] *** Joins: rajkosto (~rajkosto@93-86-127-103.dynamic.isp.telekom.rs)
[00:31:32] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:41ff:b1b1:f31e:d5a1)
[00:32:17] <zen_coder> I have a json file, I want to set this content directly to a python variable. How can I do this? The json object has a lot of quotes ""
[00:32:25] <zen_coder> is there something like raw strings in python?
[00:32:29] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[00:33:31] *** Joins: stwange (~j@199.218.6.51.dyn.plus.net)
[00:34:33] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[00:34:47] <rhombus> zen_coder: there are byte objects...
[00:35:40] <nedbat> zen_coder: why not read the file with json.load?
[00:36:03] <rhombus> zen_coder: yes, there is almost certainly a module that already does what you want :)
[00:36:13] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[00:36:48] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[00:37:02] <zen_coder> unfortunately its as always a little bit complicated, I need to debug something
[00:37:30] <zen_coder> I execute a process, from which I get a json object, now I want to parse it in python
[00:37:40] <SnoopJ> the `json` module can parse any valid JSON document
[00:37:41] <nedbat> zen_coder: you can try wrapping the whole thing in """ quotes """
[00:37:42] <zen_coder> but then i get this error: "Expecting value: line 1 column 1 (char 0)"
[00:37:57] <zen_coder> json.loads(jsonOutput)
[00:38:07] <zen_coder> now I want to debug it
[00:38:26] <zen_coder> I put the json object in an online formatter, no error at all
[00:39:48] <TML> zen_coder: What is the first character of jsonOutput?
[00:39:59] <jinsun> from the error looks jsonOutput is empty
[00:40:06] <jinsun> which is not valid json
[00:40:29] *** Joins: dme86 (~dan@user/dan86)
[00:40:30] <SnoopJ> yep, json.loads("") will produce that error, and the empty string is indeed not a valid JSON document
[00:40:44] <TML> I was wondering if there was like some null byte at the start or something
[00:41:28] <TML> i.e., json.loads(chr(0)+"[1,2,3]") would throw the same error
[00:41:59] <jinsun> oh right any invalid character would give that
[00:42:02] <TML> yeah
[00:42:23] <TML> zen_coder: print(ord(jsonOutput[0]))
[00:42:25] <zen_coder> the first character is a "["
[00:42:38] <zen_coder> ah okay I print it
[00:42:50] *** Joins: c4017w__ (~c4017@209.52.68.8)
[00:43:05] <TML> I'll bet it's some low-ASCII byte
[00:43:08] <SnoopJ> that does seem more likely
[00:43:51] *** Joins: Keeeeg (~Keeeeg@66-211-134-226.static.firstlight.net)
[00:43:55] <TML> or maybe a UTF-8 BOM or something
[00:44:18] *** Quits: bitkiller (~bitkiller@user/bitkiller) (Ping timeout: 256 seconds)
[00:44:23] *** Quits: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52) (Remote host closed the connection)
[00:44:32] *** Joins: ASUS (~ASUS@user/ASUS)
[00:44:59] *** Joins: nomic (~nomic@185.192.69.51)
[00:45:01] <ASUS> Can someone please explain async and await to me? I don't get it.
[00:45:03] <zen_coder> 80
[00:45:48] <jinsun> that's not "["
[00:46:02] <TML> zen_coder: Well, that's definitely not [
[00:46:08] <TML> That's the letter P
[00:46:34] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[00:47:01] *** Quits: shailangsa_ (~shailangs@host86-186-127-164.range86-186.btcentralplus.com) (Remote host closed the connection)
[00:47:15] <TML> zen_coder: print([ord(_) for _ in jsonOutput[0:5]])
[00:47:17] *** Quits: kuahara (kuahara@072-182-135-032.res.spectrum.com) (Ping timeout: 240 seconds)
[00:48:14] <zen_coder> okay, that explains it
[00:48:14] <TML> zen_coder: But the short answer is that you can't begin a JSON value with a bare string that way
[00:48:58] <rhombus> I, too, have an encoding question. The aforementioned email module has the class email.message.EmailMessage.
[00:49:12] <rhombus> Now, if I use the class's get_body method, I get another email.message.EmailMessage object. If I print that object, call it 'msg', the output is the message preceded by a Content-Type line:
[00:49:21] <rhombus> Content-Type: text/plain; charset="iso-8859-1"
[00:49:22] <SnoopJ> TML, well, it's not even a string, it's just text that fits nowhere in the JSON spec
[00:49:23] <zen_coder> I think I got it
[00:49:35] <rhombus> And in the message itself, I see diaresis marks represented by mojibake (junk characters), as in here: M=FCnchen
[00:49:37] <zen_coder> this cmd which I execute, in some cases, it prints other content
[00:49:42] <SnoopJ> Presumably some header or something that precedes the actual JSON content
[00:49:43] <zen_coder> which mess up the json object
[00:50:08] <rhombus> What do I need to do get properly decoded text?
[00:55:06] *** Quits: tr4ck3ur (~tr4ck3ur@user/tr4ck3ur) (Remote host closed the connection)
[00:55:09] <grym> rhombus: .decode('latin-1')
[00:55:12] <zen_coder> is there a python function, where I can check if I have a valid json?
[00:55:21] <zen_coder> or is this done via json.loads?
[00:55:35] <grym> zen_coder: that's a python function :)
[00:55:35] *** Joins: tr4ck3ur (~tr4ck3ur@user/tr4ck3ur)
[00:56:15] *** Joins: bitkiller (~bitkiller@user/bitkiller)
[00:57:35] <SnoopJ> grym, the `email` module does some decoding for you, I think they need to find a way to specify the encoding in there (I vaguely recall someone else asking questions about this a month or two ago)
[00:58:13] *** Joins: jazzy (~jaziz@user/jaziz)
[00:58:42] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[00:59:48] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[01:01:41] *** Joins: dme86_ (~dan@user/dan86)
[01:02:37] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[01:02:46] *** Quits: EgonX (~EgonX@c-73-115-70-244.hsd1.tx.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:03:05] <rhombus> grym: Unfortunately, that doesn't work. I've tried body.as_bytes().decode('latin-1'). Neither that, not .decode('iso-8859-1') nor .decode('utf-8') make any difference.
[01:03:25] <rhombus> SnoopJ: exactly what you said
[01:03:28] *** Joins: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182)
[01:05:24] <rhombus> The thing is that the message comes with the encoding specified, that ought to be sufficient. If I read the same message in my regular e-mail client (Thunderbird) it's rendered correctly.
[01:06:59] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:07:16] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[01:07:29] <bjs> ASUS: that's a broad question,  what did you want to know about async/await ?
[01:07:58] *** Joins: shailangsa (~shailangs@host86-186-127-164.range86-186.btcentralplus.com)
[01:08:36] <SnoopJ> rhombus, I've forgotten the details but as I recall the library just has some serious quirks to it
[01:08:59] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[01:09:03] <SnoopJ> or perhaps it is clients that have quirky behavior amounting to "make a reasonable guess" ?
[01:09:12] <SnoopJ> I suspect the library more though :)
[01:09:37] * rhombus sighs.
[01:09:39] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 276 seconds)
[01:09:51] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[01:10:05] <TML> rhombus: Did you try something other than the default policy?
[01:10:10] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[01:10:26] <TML> I see an email.policy.Compat32 that might be worth trying
[01:10:47] <TML> I believe the policy is what determines the encoding the BytesGenerator uses
[01:12:13] <TML> > When a message is passed to a generator, the generator uses the policy from the message by default, but you can also pass a specific policy to the generator that will override the one stored on the message object.
[01:12:13] <rhombus> TML: I created the object with email.message_from_bytes(). Right now, it uses the email.policy.Compat32 policy by default, but then it generates a legacy object, email.message.Message. I was trying to avoid using legacy components, so I specified "email.policy.default", in order to get the email.message.EmailMessage object.
[01:12:14] *** Quits: Keeeeg (~Keeeeg@66-211-134-226.static.firstlight.net) (Quit: Client closed)
[01:12:27] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[01:13:43] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[01:14:48] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Read error: Connection reset by peer)
[01:15:31] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[01:15:42] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 272 seconds)
[01:15:51] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[01:16:15] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:16:29] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[01:17:49] <purple_cthulhu> ASUS, "async" and "await" are special keywords introduced in Python3.5, used for asynchronous programming. Just check this well-written tutorial series: https://bbc.github.io/cloudfit-public-docs/asyncio/asyncio-part-1.html
[01:18:23] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[01:19:18] *** Joins: Celeo (~Celeo@user/celeo)
[01:19:31] *** Quits: DerpGusta (~quassel@user/derpgusta) (Ping timeout: 250 seconds)
[01:20:29] <noarb> I'm trying to check an IMAP mailbox every 5 seconds, while keeping the connection open. can I pass the connection to https://docs.python.org/3/library/threading.html#timer-objects or is something more like https://github.com/agronholm/apscheduler necessary?
[01:20:35] <ASUS> thanks purple_cthulhu
[01:20:41] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:22:24] <agronholm> noarb: why not just time.sleep(5) between checks, in a loop?
[01:22:54] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[01:23:20] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[01:24:50] *** Joins: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2)
[01:25:17] <purple_cthulhu> zen_coder, To check whether a string represents a valid JSON object, simply try to parse it as a  JSON object! If failure (should raise json.JSONDecodeError), it's not a JSON object.
[01:25:50] *** Quits: Angs (~Angs@2.64.189.27.mobile.tre.se) (Remote host closed the connection)
[01:26:11] *** Joins: Naan (~naan@user/naan)
[01:26:28] <noarb> agronholm: you're right. I was thinking about if the mail processing took longer than the check frequency, but that's not really a problem with what I've got right now
[01:26:32] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[01:27:44] *** Joins: wingsorc (~wingsorc@user/wingsorc)
[01:27:49] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[01:28:03] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Read error: Connection reset by peer)
[01:28:13] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[01:28:43] *** Quits: stwange (~j@199.218.6.51.dyn.plus.net) (Quit: This computer has gone to sleep)
[01:28:49] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[01:29:13] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[01:30:02] *** Joins: arinov (~arinov@213.194.126.155)
[01:30:09] *** Joins: keyehzh (~keyehzh@user/keyehzh)
[01:30:58] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[01:31:26] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:31:45] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[01:31:48] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[01:32:17] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:61dc:6f2c:8135:76b9) (Ping timeout: 240 seconds)
[01:33:33] <agronholm> noarb: if the checking takes 1 minute, do you want the next check to start after 4 minutes then?
[01:34:29] *** Quits: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net) (Ping timeout: 256 seconds)
[01:35:14] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[01:35:46] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[01:35:52] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[01:36:10] <agronholm> doesn't IMAP support push notifications anyway?
[01:36:22] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[01:36:32] *** Quits: maxzor (~maxzor@2a01cb04054faa00b6ef3a907690bb56.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[01:36:48] <noarb> agronholm: ~5 seconds, sub cron intervals
[01:37:14] *** Quits: dreamon (~dreamon@p54b14d36.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[01:37:18] <noarb> if it took longer, id like to start the next check and process the next email at 5 seconds, regardless of how long the last email took to process
[01:37:52] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 272 seconds)
[01:38:07] *** Quits: purple_cthulhu (~rax@2.186.248.47) (Quit: Leaving.)
[01:38:40] <noarb> I'm not sure if gmail and the stdlib imaplib have IDLE support, not sure about push either
[01:39:16] <agronholm> noarb: I don't think you'll need a sophisticated scheduling library then
[01:40:18] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[01:40:49] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[01:42:02] *** Joins: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net)
[01:42:50] *** Quits: five6433334 (~five6@8.40.26.21) (Quit: The Lounge - https://thelounge.chat)
[01:43:20] *** Joins: c4017w_ (~c4017@209.52.68.8)
[01:43:55] *** Quits: singularity00 (~singulari@236.lan-hi1-2.static.rozabg.com) (Quit: The true sign of intelligence is not knowledge but imagination.)
[01:44:17] *** Quits: Anarkitty (~c0a801f8@user/Anarkitty) (Quit: The Lounge - https://thelounge.chat)
[01:44:22] *** Quits: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182) (Remote host closed the connection)
[01:44:43] *** Joins: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182)
[01:45:29] *** Quits: asbel (Shaka@user/shaka) (Quit: ...)
[01:46:33] *** Joins: Anarkitty (~c0a801f8@user/Anarkitty)
[01:46:37] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:f54d:5f11:5f50:e5bc) (Ping timeout: 240 seconds)
[01:46:38] *** Quits: dme86_ (~dan@user/dan86) (Ping timeout: 256 seconds)
[01:46:56] *** Joins: rewish (~cell@ip5f5bd16d.dynamic.kabel-deutschland.de)
[01:47:07] <rewish> hi everyone. I'm working on a linux server, i'm not a root user. i need to update docker-compose, which was installed with pip, probably by the root user. how would i do this? if i run `pip install --user docker-compose`, I get `Requirement already satisfied: docker-compose in /usr/lib/python3/dist-packages (1.25.0)` which is the old version. if i run `pip uninstall docker-compose` it says `Found existing installation:
[01:47:07] <rewish> docker-compose 1.25.0
[01:47:07] <rewish> <rewish> Not uninstalling docker-compose at /usr/lib/python3/dist-packages, outside environment /usr
[01:47:07] <rewish> <rewish> Can't uninstall 'docker-compose'. No files were found to uninstall.`. So I'm stuck?
[01:47:22] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[01:47:29] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[01:48:20] *** Quits: Mechanismus (~LabMonkey@206.255.106.67) (Quit: Leaving)
[01:48:28] *** Quits: bluedust_ (~bluedust@59.89.210.247) (Remote host closed the connection)
[01:48:34] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Ping timeout: 250 seconds)
[01:49:58] <TML> agronholm: There is an extension to IMAP called P-IMAP which allows for push, but it's not super-widely implemented IME; polling is more reliable
[01:50:13] <agronholm> gotcha
[01:50:29] *** Joins: zebrag (~chris@user/zebrag)
[01:51:03] <agronholm> rewish: just FYI: docker-compose 2.2.3 is the latest release
[01:51:44] <agronholm> rewish: perhaps your system's package manager installed that 1.25.0 release?
[01:54:10] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[01:54:10] *** Quits: voidsync (~void@user/voidsync) (Remote host closed the connection)
[01:54:12] <ASUS> hi
[01:54:14] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[01:54:18] <ASUS> hi
[01:56:23] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[01:56:30] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[01:56:50] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[01:57:09] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[01:57:55] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:58:11] *** Quits: ASUS (~ASUS@user/ASUS) (Quit: Leaving)
[01:58:19] *** Joins: ElPresidenteP (~ElPreside@2600:1700:3d10:4870:e4d2:45f9:465e:ee45)
[01:58:19] *** Quits: ElPresidenteP (~ElPreside@2600:1700:3d10:4870:e4d2:45f9:465e:ee45) (Client Quit)
[01:58:48] *** Quits: nomic (~nomic@185.192.69.51) (Quit: Leaving)
[01:59:07] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[01:59:54] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[02:00:29] *** Joins: ElPresid1 (~ElPreside@2600:1700:3d10:4870:e4d2:45f9:465e:ee45)
[02:00:52] *** Quits: ElPresid1 (~ElPreside@2600:1700:3d10:4870:e4d2:45f9:465e:ee45) (Client Quit)
[02:00:54] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[02:01:06] *** Joins: ElPresidenteP (~ElPreside@2600:1700:3d10:4870:e4d2:45f9:465e:ee45)
[02:01:09] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Quit: Leaving)
[02:01:23] *** Quits: nuclearg1 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Ping timeout: 256 seconds)
[02:02:17] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903) (Quit: WeeChat 3.4)
[02:02:26] *** Quits: ElPresidenteP (~ElPreside@2600:1700:3d10:4870:e4d2:45f9:465e:ee45) (Client Quit)
[02:03:02] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:e4d2:45f9:465e:ee45)
[02:03:49] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[02:03:50] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Ping timeout: 272 seconds)
[02:05:01] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:05:09] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[02:05:44] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[02:06:17] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:06:23] *** Quits: Anarkitty (~c0a801f8@user/Anarkitty) (Quit: The Lounge - https://thelounge.chat)
[02:06:38] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[02:07:19] *** Joins: Anarkitty (~c0a801f8@user/Anarkitty)
[02:07:24] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[02:09:29] *** Joins: tomeaton17 (~tomeaton1@92.234.2.175)
[02:09:41] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[02:09:46] *** Joins: Celeo_ (~Celeo@user/celeo)
[02:09:53] *** Quits: Celeo_ (~Celeo@user/celeo) (Remote host closed the connection)
[02:10:30] *** Joins: hanaan (~naan@user/naan)
[02:12:01] *** Quits: greedom (~greedom@p200300de674a2000b1a58fa533a61c74.dip0.t-ipconnect.de) (Remote host closed the connection)
[02:12:03] <foo> I believe rq is an alternative to celery, correct? Any preference here? I'm not married to anything specific
[02:12:47] *** Quits: Naan (~naan@user/naan) (Ping timeout: 256 seconds)
[02:12:48] *** Joins: ElPresidenteP (~ElPreside@2600:1700:3d10:4870:4436:314a:5bdb:f8ca)
[02:13:36] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[02:13:57] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:e4d2:45f9:465e:ee45) (Ping timeout: 240 seconds)
[02:13:59] <foo> Or even, any alternatives to celery these days? Just looking for something simple to deal with rate limiting on an API. I've in the past pulled from a table... if time exceeded current time, then process task. But I think it makes more sense to use rq or celery or such
[02:14:27] *** Joins: dtg01100 (~dtg01100@199.21.141.37)
[02:14:44] *** Joins: Celeo (~znc-admin@user/celeo)
[02:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:39] *** Quits: dob1 (~dob1@user/dob1) (Quit: quit)
[02:15:58] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[02:16:03] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:16:30] *** Quits: axisys_ (~axisys@ec2-52-207-123-244.compute-1.amazonaws.com) (Quit: leaving)
[02:16:47] *** Joins: axisys (~axisys@ec2-52-207-123-244.compute-1.amazonaws.com)
[02:17:07] *** Joins: dob1 (~dob1@user/dob1)
[02:17:32] *** Quits: filename (~kilitary@185.193.143.131) (Remote host closed the connection)
[02:17:33] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[02:18:04] *** Joins: urbo (~igloo@69.161.39.187)
[02:18:08] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[02:19:13] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:22:36] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[02:22:48] *** Quits: upsala (~zcb@185.213.155.252) (Quit: WeeChat 3.4)
[02:22:57] *** Quits: urbo (~igloo@69.161.39.187) (Ping timeout: 240 seconds)
[02:23:15] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[02:24:32] *** Quits: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net) (Ping timeout: 250 seconds)
[02:25:32] *** Quits: dsrt^ (~dsrt@50.235.176.163) (Remote host closed the connection)
[02:26:31] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[02:27:34] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Quit: Leaving)
[02:27:59] *** Joins: dsrt^ (~dsrt@50.235.176.163)
[02:28:27] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[02:28:59] *** Quits: jinsun (~quassel@user/jinsun) ()
[02:29:01] *** Joins: drbeco (~beco@2804:351c:dd01:6600:e4a2:7a5d:e23f:1fd8)
[02:29:19] *** Joins: jinsun (~jinsun@user/jinsun)
[02:29:22] *** Joins: nelson[m] (~nelsonjep@2001:470:69fc:105::1:be17)
[02:30:02] *** Quits: microspray (~microspra@2a02-a44d-ba2a-1-f1e8-706a-2412-b176.fixed6.kpn.net) (Read error: Connection reset by peer)
[02:30:23] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[02:31:33] *** Joins: filename (~kilitary@185.193.143.131)
[02:32:12] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[02:32:13] *** Joins: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it)
[02:32:45] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[02:32:59] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Remote host closed the connection)
[02:32:59] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Remote host closed the connection)
[02:33:19] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[02:33:22] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[02:33:36] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[02:34:46] <jazzy> What's the best way to verify whether to objects are the same?
[02:34:50] <jazzy> == or `is`?
[02:35:17] <bjs> jazzy: depends on your definition of "the same"
[02:35:24] <Timvde> jazzy: depends on what you want, they're not the same
[02:35:27] <bjs> jazzy: `a = [1,2,3]; b = [1,2,3]` are a and b "the same" to you?
[02:35:30] <jazzy> same objects in memory
[02:35:34] <Timvde> Then is
[02:35:34] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[02:35:39] <bjs> jazzy: `is` is probably what you are after.
[02:35:46] <jazzy> cool, thanks
[02:35:47] *** Quits: someone235 (uid419897@id-419897.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:35:55] <bjs> jazzy: in my example, `a == b` but `a is not b`
[02:36:01] <jazzy> ooo I see
[02:36:05] *** Joins: Guest3 (~Guest3@136.226.55.27)
[02:36:05] <bjs> since they are different list objects
[02:36:05] <jazzy> == can be overloaded
[02:36:15] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[02:36:26] *** Joins: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net)
[02:36:44] <Guest3> hello 1st timer here
[02:36:52] <Repiphany> Comparing objects in memory is not what you want to do 99.99% of the time though
[02:37:01] <jazzy> Now that I think about it, someone should make a list of programming 'gotchas' for beginners for things that go against intuition
[02:37:16] <Guest3> learning python for work... can anyone help me with some homework?
[02:37:22] <KirkMcDonald> jazzy: Intution is necessarily personal.
[02:37:22] <jazzy> Probably hard to do, since the experienced have completely changed their intuition haha
[02:37:48] <jazzy> KirkMcDonald, yeah, but there must be some general assumptions that are often contradicted when starting out
[02:37:50] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[02:37:51] <Repiphany> ls
[02:38:03] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 276 seconds)
[02:38:23] <foo> Hmm, if we used rq we'd have to get redis in the mix... which I suppose is fine.
[02:38:27] <nedbat> jazzy: i'm curious why you want to know if two objects are the same object?
[02:38:47] <jazzy> nedbat, in this particular instance, finding a cycle in a linked list
[02:39:13] <jazzy> so comparing the nodes
[02:39:20] <nedbat> jazzy: ok, sounds good.
[02:39:49] <foo> Celery is probably fine, I simply like to "look at our options"
[02:39:57] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c) (Ping timeout: 240 seconds)
[02:40:57] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 240 seconds)
[02:40:58] *** Quits: Guest3 (~Guest3@136.226.55.27) (Quit: Client closed)
[02:41:02] *** Quits: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net) (Ping timeout: 256 seconds)
[02:41:17] <CrtxReavr> nedbat, you happen to see my issue discussed around 15:39ish?
[02:41:30] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:b6a8:844d:3aab:dcba)
[02:41:36] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 256 seconds)
[02:42:28] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 272 seconds)
[02:43:47] *** Quits: filename (~kilitary@185.193.143.131) (Quit: joined libera)
[02:43:51] *** Joins: c4017w__ (~c4017@209.52.68.8)
[02:46:54] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 272 seconds)
[02:47:16] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[02:47:38] *** Joins: filename (~kilitary@185.193.143.131)
[02:47:39] <SnoopJ> jazzy, the gotchas tend to vary by language, but I have a few of the Python ones in a personal collection of code samples
[02:48:06] <jazzy> SnoopJ, cool, whatcha got
[02:48:19] <SnoopJ> And the ones that apply broadly are probably collated in some CS texts that few new programmers will read
[02:48:39] <nedbat> CrtxReavr: the 17/19 problem? I don't know why that would be.
[02:49:04] *** Joins: akk (~akk@75-161-95-245.albq.qwest.net)
[02:49:42] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[02:49:50] <SnoopJ> jazzy, here's an example of a kind of question we used to (??) get frequently when this channel was on another network: https://github.com/SnoopJeDi/playground/blob/master/python/class_attributes_are_wrong.py
[02:50:03] <CrtxReavr> nedbat, I think my next step is to wrap each command in strace(1) and look for clues there.
[02:50:20] <CrtxReavr> Well, strace inside of python.
[02:50:41] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:4948:280c:c9be:14aa) (Quit: Client closed)
[02:50:57] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:1d52:1aeb:7253:3a69)
[02:51:24] <jazzy> SnoopJ, Oh, that's a good one haha, I definitely remember having that issue
[02:51:39] *** Joins: purple_cthulhu (~rax@2.186.248.47)
[02:52:22] *** Quits: filename (~kilitary@185.193.143.131) (Ping timeout: 256 seconds)
[02:52:24] <jazzy> And definitely not something I'd be able to think of as an issue after all this time
[02:52:36] *** Joins: filename_ (~kilitary@185.193.143.131)
[02:53:26] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[02:53:34] <SnoopJ> that's kind of the core of the problem: experts are by definition not in possession of a beginner's perspective :)
[02:53:49] *** Quits: johnkeats7 (~johnkeats@2804:14c:32:a0cc:dd09:7d83:36a5:4a0e) (Ping timeout: 240 seconds)
[02:54:35] <SnoopJ> although expert/beginner is too crude a dichotomy. Anyway, if you pay attention to what people find confusing (especially here), a silhouette of common stuff starts to show up
[02:54:51] *** Quits: ElPresidenteP (~ElPreside@2600:1700:3d10:4870:4436:314a:5bdb:f8ca) (Quit: WeeChat 3.0)
[02:55:20] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:4436:314a:5bdb:f8ca)
[02:56:01] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:57:08] *** Joins: kickingvegas (~cchoi@c-69-181-182-237.hsd1.ca.comcast.net)
[02:57:15] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[02:57:47] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:58:04] *** Quits: tomeaton17 (~tomeaton1@92.234.2.175) (Quit: Client closed)
[02:59:01] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 240 seconds)
[03:00:16] *** Quits: kaivai (~kaivai@user/kaivai) (Quit: ZNC - https://znc.in)
[03:00:52] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[03:01:51] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[03:02:20] *** Quits: filename_ (~kilitary@185.193.143.131) (Read error: Connection reset by peer)
[03:02:55] *** Joins: kaivai (~kaivai@user/kaivai)
[03:04:11] *** themill_ is now known as themill
[03:04:12] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[03:05:09] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:05:34] *** Parts: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it) ()
[03:05:48] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[03:05:49] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:06:05] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[03:06:16] *** Joins: test_ (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[03:06:18] *** Quits: dtg01100 (~dtg01100@199.21.141.37) (Remote host closed the connection)
[03:06:25] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.5-dev)
[03:06:30] *** Quits: newpy (~newpy@206.168.231.90) (Remote host closed the connection)
[03:06:48] *** Joins: newpy (~newpy@206.168.231.90)
[03:07:15] *** Joins: r3m (~launch@user/r3m)
[03:07:27] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[03:07:41] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 256 seconds)
[03:07:43] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:08:26] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[03:08:49] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[03:08:58] *** Joins: filename (~kilitary@185.193.143.131)
[03:09:06] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[03:09:15] *** Quits: nunggu (~q@user/nunggu) (Ping timeout: 276 seconds)
[03:09:32] *** Quits: lystra (~lystra@d53-64-11-169.nap.wideopenwest.com) (Ping timeout: 240 seconds)
[03:09:35] *** Quits: moritz[m]1 (~moritzgeg@2001:470:69fc:105::1:b65b) (Ping timeout: 250 seconds)
[03:09:35] *** Quits: morguldir (~morguldir@2001:470:69fc:105::21bd) (Ping timeout: 250 seconds)
[03:09:35] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Ping timeout: 250 seconds)
[03:09:35] *** Quits: willcl_ark (~willcl-ar@user/willcl-ark/x-8282106) (Ping timeout: 250 seconds)
[03:09:35] *** Quits: M3RELATIVISM[m] (~irelativi@2001:470:69fc:105::1:741f) (Ping timeout: 250 seconds)
[03:09:41] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 256 seconds)
[03:10:01] *** Quits: bl4ackpajamas[m] (~bl4ackpaj@2001:470:69fc:105::1:73f4) (Ping timeout: 250 seconds)
[03:10:01] *** Quits: zardian[m] (~zardi@2001:470:69fc:105::1:4444) (Ping timeout: 250 seconds)
[03:10:01] *** Quits: kolmogorov[m] (~kolmogoro@2001:470:69fc:105::e03b) (Ping timeout: 250 seconds)
[03:10:01] *** Quits: psydroid (~psydroid@user/psydroid) (Ping timeout: 250 seconds)
[03:10:01] *** Quits: Vipulk (~vipulk@user/vipulk) (Ping timeout: 250 seconds)
[03:10:02] <TML> SnoopJ: I like the idea of that Playground repository
[03:10:20] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[03:10:30] *** Joins: lystra (~lystra@d53-64-11-169.nap.wideopenwest.com)
[03:10:46] *** Joins: nunggu (~q@user/nunggu)
[03:10:53] *** Joins: five6433334 (~five6@8.40.26.68)
[03:10:54] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[03:10:59] <SnoopJ> TML, at a certain point I realized I was writing a substantial amount of Python to solve little problems that came up here, and that polishing/holding onto those samples could be useful whenever *I* have that question :)
[03:11:34] <SnoopJ> and it's broadened out a little, e.g. the SWIG samples there are mostly things I wrote when trying to reason through a work problem, but there was too much detail in the way in the 'real' code.
[03:11:57] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[03:12:15] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[03:12:53] <TML> SnoopJ: I've been doing a similar thing, trying to update my 20-year old C++ skills by joining in the SerenityOS project, and finding myself writing a lot of little samples extracting pieces of SerenityOS out
[03:13:01] <TML> I think I may need to steal your idea :)
[03:14:32] <jazzy> SnoopJ, I wish I had kept a log of my roadblocks at the beginning
[03:14:37] *** Quits: aknot (~aknot@2603-900a-1503-17bb-6759-e782-0cdf-5ce6.inf6.spectrum.com) (Ping timeout: 240 seconds)
[03:16:10] <SnoopJ> A few of the bigger incomplete understandings that I've had over the years left impressions that stuck with me, I try to remember how confusing things looked from the other side.
[03:16:40] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:4436:314a:5bdb:f8ca) (Quit: WeeChat 3.0)
[03:16:44] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 256 seconds)
[03:17:21] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[03:17:24] <jazzy> I find myself encouraging a lot of people to try to get into coding, would be made much easier if I could relate to them more
[03:17:26] *** Joins: psydroid (~psydroid@user/psydroid)
[03:17:56] *** Quits: rhombus (~rhombus@ip5b408ee5.dynamic.kabel-deutschland.de) (Ping timeout: 272 seconds)
[03:17:56] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 272 seconds)
[03:19:00] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[03:19:03] <SnoopJ> More relating certainly couldn't hurt matters
[03:19:05] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[03:19:59] <jazzy> I was a bit impatient when trying to coax my sister along, could've done that better
[03:20:14] *** Joins: dtg01100 (~dtg01100@199.21.141.37)
[03:20:32] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[03:20:41] <jazzy> I had no idea how to get my head around her writing stuff like `len(3) = 'banana'`
[03:20:45] *** Joins: junebug (~junebug@2600:1700:3db0:2540:5101:e86d:3ab2:4b8)
[03:21:08] *** Joins: willcl_ark (~willcl-ar@2001:470:69fc:105::1:620a)
[03:21:20] <jazzy> might get that printed on a shirt if she ever gets a job in software haha
[03:21:43] *** Joins: HaMsTeRs (~Thunderbi@210.3.213.4)
[03:21:45] *** Joins: M3RELATIVISM[m] (~irelativi@2001:470:69fc:105::1:741f)
[03:23:00] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[03:23:16] *** Joins: moritz[m]1 (~moritzgeg@2001:470:69fc:105::1:b65b)
[03:23:25] *** Joins: morguldir (~morguldir@2001:470:69fc:105::21bd)
[03:24:11] *** Quits: HaMsTeRs (~Thunderbi@210.3.213.4) (Client Quit)
[03:24:31] *** Joins: emf (~emf@2620:10d:c090:400::5:d01b)
[03:24:58] *** Joins: kolmogorov[m] (~kolmogoro@2001:470:69fc:105::e03b)
[03:25:04] *** Joins: pepper (~pepper@user/pepper)
[03:25:13] *** Joins: Vipulk (~vipulk@user/vipulk)
[03:25:54] *** Joins: ice9 (~ice9@user/ice9)
[03:25:55] *** Quits: wovixo (~wovixo@144.92.194.67) (Read error: Connection reset by peer)
[03:26:18] *** Joins: wovixo (~wovixo@144.92.194.67)
[03:26:49] *** Quits: kreg (~kreg@iqoqi060.uibk.ac.at) (Quit: Client closed)
[03:27:30] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:28:01] *** Joins: bl4ackpajamas[m] (~bl4ackpaj@2001:470:69fc:105::1:73f4)
[03:28:04] *** Joins: zardian[m] (~zardi@2001:470:69fc:105::1:4444)
[03:28:45] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 276 seconds)
[03:30:19] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[03:30:36] *** Quits: lystra (~lystra@d53-64-11-169.nap.wideopenwest.com) (Ping timeout: 272 seconds)
[03:30:36] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Ping timeout: 272 seconds)
[03:30:44] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[03:30:55] *** Joins: nuclearg1 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net)
[03:31:21] *** Quits: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182) (Ping timeout: 276 seconds)
[03:31:37] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[03:31:49] *** Joins: blei (~blei@2601:280:c001:c2b0:3dfa:d8b:2346:5cd2)
[03:32:05] <blei> hi, did Guido's recent parser work make it into Python? https://medium.com/@gvanrossum_83706/left-recursive-peg-grammars-65dab3c580e1
[03:32:06] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[03:32:21] *** Joins: spithash (~spithash@user/spithash)
[03:32:31] <blei> ie does Python have a left-recursive PEG parser implementation now that can be used to implement DSLs?
[03:32:36] *** Quits: MJ (~mjpieters@zopatista.plus.com) (Ping timeout: 256 seconds)
[03:33:18] *** Quits: minip (~minip@user/minip) (Remote host closed the connection)
[03:33:39] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:34:00] *** Joins: MJ (~mjpieters@zopatista.plus.com)
[03:34:36] *** Quits: freefall (~owner@2600:6c40:1600:39ec:3890:fb5c:b28e:333c) (Quit: Leaving)
[03:34:37] *** Quits: purple_cthulhu (~rax@2.186.248.47) (Ping timeout: 256 seconds)
[03:35:03] *** Joins: kaste (~kaste@user/kaste)
[03:35:11] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[03:35:50] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:36:12] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[03:36:28] *** Joins: califax (~califax@user/califx)
[03:36:30] <bjs> blei: i'm not sure the last "that can be used to implement DSLs" part, but yes the old Python parser has been replaced with the PEG one
[03:36:34] <SnoopJ> blei, Python 3.9 switches to a PEG parser
[03:36:39] <kaste> Hello good Sirs and Madams. I am wondering how to deal with a complex initializer. It starts to cross the a monitor's worth of lines boundary and my instinct was first to subdivide it with extra functions that also set instance vars
[03:36:54] <kaste> However after some thinking that seems wrong
[03:36:54] <SnoopJ> blei, if you want to write your own PEG parser, I recommend the library parsimonious (which I believe I recommended to you the last time you were asking about parsing expressions)
[03:37:34] *** Joins: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net)
[03:37:36] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[03:37:42] <blei> thanks. anyone have a link to the new parser code?
[03:38:12] *** Quits: Soni (~quassel@autistic.space) (Ping timeout: 250 seconds)
[03:38:16] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[03:38:26] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[03:38:32] <bjs> blei: which part?  I mean the main actual parser is here https://github.com/python/cpython/tree/main/Parser
[03:38:53] <bjs> but it's generated with a parser generator
[03:39:21] <blei> oh, do you know the stack? is the whole thing custom? where's the grammar spec'd ?
[03:39:40] *** Joins: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182)
[03:39:44] <SnoopJ> Yes, it's rather customized for Python.
[03:40:06] <bjs> blei: yes it's custom, the PEG grammar is here https://github.com/python/cpython/blob/main/Grammar/python.gram
[03:40:27] <SnoopJ> A helpful reduction of that lives in the official documentation: https://docs.python.org/3/reference/grammar.html
[03:40:37] <bjs> the other grammar (the ASDL) is in the previously mentioned directory, and you can find the parser generator ("pegen") at https://github.com/python/cpython/tree/main/Tools/peg_generator/pegen
[03:41:00] *** Joins: HaMsTeRs (~Thunderbi@210.3.213.4)
[03:41:03] *** Quits: tr4ck3ur (~tr4ck3ur@user/tr4ck3ur) (Quit: Leaving)
[03:43:20] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[03:43:21] *** Joins: lystra (~lystra@d53-64-11-169.nap.wideopenwest.com)
[03:43:42] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:f54d:5f11:5f50:e5bc)
[03:43:56] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[03:44:20] *** Joins: c4017w_ (~c4017@209.52.68.8)
[03:44:59] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:4436:314a:5bdb:f8ca)
[03:45:40] <blei> ok i noticed it looks like you could theoretically re-use it, but it would be quite difficult. i will try parsimonious again
[03:45:51] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[03:45:58] <blei> btw did this new parser turn out to be faster?
[03:46:20] <bjs> blei: it's all custom, the PEG parser generator itself is hand-written with its own flavour of PEG in metagrammar.gram there, and that generated parser is used to parse the Python PEG grammar to generate a parser for Python code, which outputs ast nodes defined by the asdl grammar
[03:46:33] <bjs> and it's the latter that you get when you `import ast`
[03:47:17] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[03:47:21] <bjs> blei: when it was added I think it was slightly slower
[03:47:41] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[03:48:13] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[03:48:17] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 240 seconds)
[03:48:44] <SnoopJ> (parsing isn't really a perf bottleneck, though)
[03:48:46] <bjs> blei: they did some experiments e.g. parsing the entire stdlib https://www.python.org/dev/peps/pep-0617/#performance  it "Comparing the last two bullets we find that the new parser is slightly faster but uses slightly (about 10%) more memory. We believe this is acceptable. "
[03:48:54] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[03:49:30] <deltab> kaste: you could use the Builder pattern: create an instance of a builder class, call methods on it to set parameters, then a final method creates and returns an instance of your existing class
[03:49:35] <blei> SnoopJ i don't see any recursion in the parsimonious docs, and i found a TODO "Maybe support left-recursive rules like PyMeta, if anybody cares."
[03:49:36] *** Quits: bitkiller (~bitkiller@user/bitkiller) (Ping timeout: 256 seconds)
[03:49:41] *** Joins: purple_cthulhu (~rax@2.186.248.3)
[03:50:24] <SnoopJ> blei, I'd guess that means it can do right recursion but not left recursion. Perhaps you can make your requirements a little less abstract?
[03:50:44] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:50:46] <deltab> kaste: or do that with local variables in a function
[03:51:25] *** Joins: audiobirb (~audio@user/audio)
[03:51:34] <blei> specific requirements were (1+234+12+...)(...)... which blows up in the parsers i've tried so far
[03:52:17] *** Quits: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net) (Ping timeout: 240 seconds)
[03:52:42] <bjs> blei: i'm surprised that "blows up"
[03:52:50] <bjs> blows up how?
[03:52:54] * SnoopJ is not going to put in effort to understand the "..." since he has offered an exact solution to the example just given
[03:53:04] <SnoopJ> using Python's own parser, no less!
[03:53:06] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[03:53:33] <blei> off-the-shelf parsers i have tried don't produce a single, unique parse given a simple recursive grammar
[03:53:49] *** Quits: KeiraT (~k@lulzsec.co.uk) (Ping timeout: 240 seconds)
[03:54:18] <blei> so i see it as a good example that should generalize to more sophisticated languages, and i am interested in being able to whip up DSLs for "low code / no code"
[03:54:25] *** Quits: Reign (~Username@ip98-161-226-10.ph.ph.cox.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:54:40] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 272 seconds)
[03:54:43] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[03:54:49] <SnoopJ> It's very unclear how left-recursion comes into this.
[03:54:54] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:7485:8b77:1db6:876e) (Quit: Leaving)
[03:55:10] <blei> i am following a lead someone gave me
[03:55:13] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[03:55:18] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 272 seconds)
[03:55:49] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[03:56:12] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[03:56:39] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:56:46] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[03:56:53] *** Joins: Wulf (~Wulf@user/wulf)
[03:57:51] <blei> here's the grammar https://pastebin.com/raw/1B7i5fTv
[03:58:14] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[03:59:46] *** Joins: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net)
[03:59:49] <blei> as you can see there are many ways to parse the expression with this grammar. looking for a methodology that just produces the one parse.
[03:59:49] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[03:59:53] *** Joins: KeiraT (~k@lulzsec.co.uk)
[04:00:02] <bjs> blei: the methodology would be to re-write the grammar to be less ambiguous
[04:00:27] <blei> yes, in which case, you end up specifying, ie, that digits can only be N numbers long, and explicitly writing the rules for all that
[04:00:35] <blei> (or generating them)
[04:01:03] <shrysr> could some one tell me why am i banned from #python-offtopic?
[04:01:12] <bjs> shrysr: did you mean ##python-offtopic
[04:01:21] <jazzy> anyone know why syntax highlighting sometimes just stops working in the IDLE editor?
[04:01:38] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[04:01:47] <bjs> blei: well you'd get something like `digit = "0" | ...; number = digit number | digit`
[04:02:13] <shrysr> bjs: ah. I think i forgot the extra #. I guess i did mean that.
[04:02:24] <SnoopJ> jazzy, IDLE has all kinds of interesting strangeness about it, it's part of why some folks don't use it. Can you share the source that makes the highlighting fail in this case?
[04:02:35] <bjs> shrysr: it changed recently to gain the extra #, i guess the message you get if you try join the old one isn't so useful?
[04:03:14] <jazzy> SnoopJ, was just some mundane function, whole document left unhighlighted
[04:03:16] <SnoopJ> yea +b *@* was the least bad solution to closing the channel after announcing the move
[04:03:21] <shrysr> bjs: I just get a mssage that I am banned and a +b status or something.
[04:03:29] <jazzy> SnoopJ, I saved the file again per a stackoverflow post and it came back
[04:03:36] <SnoopJ> jazzy, without seeing it I would be surprised if someone could tell you why it failed
[04:03:37] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:9562:d0d2:9adf:68b8)
[04:04:03] <shrysr> bjs: i.e no.. message per se or any indication of the extra #
[04:04:03] <nedbat> shrysr: the channel is named ##python-offtopic now.
[04:04:14] <shrysr> nedbat: yea, bjs just helped me with that
[04:04:27] <nedbat> shrysr: ok
[04:04:38] <jazzy> SnoopJ, seems to be independent of what's actually written, happens to me all over the place, but here it is: https://bpa.st/CK3Q
[04:04:46] <SnoopJ> The /topic for #python-offtopic does indicate the new channel, but that's kind of IRC trivia.
[04:04:52] <bjs> nedbat: there has to be a better thing to do than just ban everyone from it,  I'm sure I've seen channels with redirections before
[04:05:03] <bjs> SnoopJ: I don't think you see the topic if you're banned? I'm not sure actually
[04:05:23] <SnoopJ> bjs, you can still /topic #python-offtopic or consult alis to see it, but you can't join the channel
[04:05:32] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[04:05:32] <shrysr> i am using the chat.sr.ht webclient.. i think it does not show the topic.
[04:05:34] <bjs> SnoopJ: nobody is going to do that
[04:05:35] <shrysr> fwiw
[04:05:35] *** Quits: PJBoy (~PJBoy@user/pjboy) (Quit: Ping timeout: 252 seconds)
[04:06:06] <SnoopJ> bjs, I think the philosophy at work was "if anybody will care, they will likely see the announcement" and anybody left after that ~month would probably ask here, just like what is currently happening.
[04:06:30] <shrysr> i.e of the channel that you dont join. Hey why not add it to this channel's topic ?
[04:06:37] *** Quits: pipapipapibo (~w@c-24-17-130-228.hsd1.wa.comcast.net) (Remote host closed the connection)
[04:06:44] <bjs> SnoopJ: it's fine, but i'm like 99.9% sure there is some kind of auto-redirect feature :P
[04:06:54] <SnoopJ> shrysr, the entire point of closing the channel was to increase the distance of association
[04:07:02] <shrysr> ah. ok
[04:07:05] <SnoopJ> (perhaps we can move discussion there, though)
[04:07:30] <bjs> SnoopJ: nedbat: https://libera.chat/guides/channelmodes  "You can append $#channel to any ban to redirect banned users to another channel."
[04:07:32] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[04:07:43] <SnoopJ> cc supakeen ^
[04:07:50] *** Joins: pipapipapibo (~w@c-24-17-130-228.hsd1.wa.comcast.net)
[04:08:08] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[04:09:49] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:41ff:b1b1:f31e:d5a1) (Ping timeout: 240 seconds)
[04:10:03] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[04:10:23] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[04:13:32] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:13:38] *** Quits: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca) (Remote host closed the connection)
[04:14:02] *** Joins: Soni (~quassel@autistic.space)
[04:14:29] *** Joins: Mechanismus (~LabMonkey@206.255.106.67)
[04:14:33] *** Quits: newpy (~newpy@206.168.231.90) (Quit: Leaving)
[04:14:44] <phy1729> usually you'd +if #forwardchannel and set guard
[04:15:28] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[04:17:10] <bjs> blei: SnoopJ: I played around with parsimonious and got something like https://bpa.st/XVIQ
[04:18:06] *** Quits: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net) (Ping timeout: 272 seconds)
[04:18:08] <SnoopJ> bjs, this is the solution I offered the last time: https://bpa.st/QLCA but I fell off the end of the rope-a-dope two or three iterations ago
[04:18:15] *** Quits: KeiraT (~k@lulzsec.co.uk) (Ping timeout: 256 seconds)
[04:18:15] *** Quits: filename (~kilitary@185.193.143.131) (Ping timeout: 256 seconds)
[04:18:15] *** Quits: Z-cat (~Z-cat@user/z-cat) (Ping timeout: 250 seconds)
[04:18:30] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[04:19:01] <SnoopJ> There's only so much solution you can get to an underspecified problem
[04:19:04] <blei> i think thats unfair
[04:19:09] <blei> try this https://lobste.rs/s/3pdhus/left_recursion_recursive_descent
[04:19:13] <bjs> blei: which is unfair?
[04:19:14] <blei> it explains the rationale
[04:19:20] <blei> that i am rope-a-doping him
[04:19:56] *** Joins: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net)
[04:20:04] <SnoopJ> Sorry, impatience is not an excuse for rudeness.
[04:20:18] <psystemupdate> anyone want to buy an autograph
[04:20:24] <psystemupdate> i accept cryptard
[04:20:45] <blei> i suspect the point of wanting to do left recursion that  is that we read and write left-to-right. in the article i just posted, he seems to have developed a heuristic for coming up with a "common sense parse"
[04:20:59] *** Joins: kingfightboy (~kingfight@218.23.109.195)
[04:21:00] *** Joins: denoirctest (~denoircte@cpe-70-95-182-183.san.res.rr.com)
[04:21:16] <bjs> blei: I mean, in general, the rationale for left-recursion is clear. It's just not clear what *you* want it for, and whether or not a right-recursive thing like my grammar is fine
[04:21:26] <psystemupdate> i am the one who single handedly destroyed the lawyer pprofession simply because i hate lawyers, and i did it by gamifying their profession into the trashbin
[04:21:49] <SnoopJ> psystemupdate, are you sure you have the right channel? #python is for discussing the Python programming language.
[04:21:58] <psystemupdate> oh soz, its the booz speaking
[04:22:38] *** Joins: tWqaq (~tWqaq@240e:389:5d1c:ff00:8856:40b7:9eba:30a0)
[04:22:40] *** Quits: denoirctest (~denoircte@cpe-70-95-182-183.san.res.rr.com) (Remote host closed the connection)
[04:22:41] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[04:22:49] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:4436:314a:5bdb:f8ca) (Quit: WeeChat 3.0)
[04:22:50] <bjs> blei: parsimonious docs mention PyMeta which I am not familiar with,  the remark makes it sound like another PEG parser but with left-recursion, if you really need it.
[04:22:55] *** Joins: denoirctest (~denoircte@cpe-70-95-182-183.san.res.rr.com)
[04:22:55] *** Joins: de-facto (~de-facto@user/de-facto)
[04:23:07] *** Quits: denoirctest (~denoircte@cpe-70-95-182-183.san.res.rr.com) (Remote host closed the connection)
[04:23:14] *** Quits: Nahra (~user@static.161.95.99.88.clients.your-server.de) (Remote host closed the connection)
[04:23:20] <psystemupdate> do any of you know engineers who break shit for a living? i break professions for a living.
[04:23:34] <psystemupdate> i break u fix
[04:24:57] <bjs> blei: in the end you're always going to have to re-write your grammar because parser generators are pretty much always going to hate `expression := expression expression | ...`
[04:25:53] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:26:10] *** Joins: aknot (~aknot@2603-900a-1503-17bb-d6bf-53bc-6fd7-78e4.inf6.spectrum.com)
[04:26:31] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[04:26:57] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[04:27:07] *** Joins: davor_ (~davor@user/davor)
[04:27:53] *** Quits: davor (~davor@user/davor) (Ping timeout: 256 seconds)
[04:29:12] *** Joins: KeiraT (~k@lulzsec.co.uk)
[04:29:25] *** Joins: kaiseisei (~Thunderbi@171.116.215.250)
[04:30:33] <blei> for this specific input pattern, we have the following regex ^(\((\d{1,}\+){1,}\d{1,}\)){1,}$
[04:30:38] *** Joins: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca)
[04:30:46] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[04:30:49] *** Joins: dme86 (~dan@user/dan86)
[04:31:28] <bjs> your grammar had nested parens so there is no regex for it
[04:31:32] <bjs> so I’m confused?
[04:32:02] *** Quits: MJ (~mjpieters@zopatista.plus.com) (Ping timeout: 272 seconds)
[04:32:17] <blei> oh, sorry about that, no nested parens
[04:32:26] *** Joins: MJ (~mjpieters@zopatista.plus.com)
[04:32:30] <blei> but yes, thats where the regex solution fails
[04:32:50] <bjs> blei: what’s wrong with the solution I showed?
[04:33:11] <bjs> I’m not seeing the problem, parsimonious seems like a nice little fairly standard PEG parser
[04:34:03] <evidlo> is there a nice way to just specify to include all files as package data in setup.py?
[04:34:10] <SnoopJ> it's a great parser generator, yea
[04:34:20] *** Joins: celeo_irctest (~celeo_irc@cpe-70-95-182-183.san.res.rr.com)
[04:34:39] *** Quits: purple_cthulhu (~rax@2.186.248.3) (Quit: Leaving.)
[04:34:50] <bjs> SnoopJ: I’d never used it but it seemed to work just fine and do what I expected
[04:35:01] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[04:35:07] <bjs> used it before*
[04:35:15] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[04:35:21] <SnoopJ> bjs, I've used it a handful of times, mostly for toys
[04:35:29] *** Quits: hanaan (~naan@user/naan) (Quit: Leaving)
[04:35:30] *** Quits: celeo_irctest (~celeo_irc@cpe-70-95-182-183.san.res.rr.com) (Remote host closed the connection)
[04:35:30] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[04:35:35] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[04:35:50] <bjs> SnoopJ: it seems like it’s designed for just that
[04:35:52] <SnoopJ> I did think about it for a work DSL but `ast` turned out to be all I really needed
[04:36:01] <NeilRG> is there any reason for mypy to use a different typing_extensions than the one in my venv?
[04:36:11] <NeilRG> I checked that mypy and typing_extensions are both in my venv
[04:36:20] <SnoopJ> bjs, I think it'd be perfectly serviceable if I had need of some more complicated grammar, I just never really have :)
[04:36:24] *** Joins: celeo_irctest (~celeo_irc@cpe-70-95-182-183.san.res.rr.com)
[04:37:28] *** Joins: PJBoy (~PJBoy@user/pjboy)
[04:38:01] *** Quits: cybniv (~niv@limbo.cypherpunks.io) (Quit: Powered by LunarBNC: https://LunarBNC.net)
[04:38:08] *** Quits: drbeco (~beco@2804:351c:dd01:6600:e4a2:7a5d:e23f:1fd8) (Quit: Leaving)
[04:38:10] *** Joins: niv (~niv@limbo.cypherpunks.io)
[04:38:38] *** Quits: celeo_irctest (~celeo_irc@cpe-70-95-182-183.san.res.rr.com) (Remote host closed the connection)
[04:38:52] *** Joins: celeo_irctest (~celeo_irc@cpe-70-95-182-183.san.res.rr.com)
[04:39:26] <bjs> SnoopJ: we’ll imagine parsing -
[04:39:31] <bjs> well*
[04:39:42] *** Quits: celeo_irctest (~celeo_irc@cpe-70-95-182-183.san.res.rr.com) (Remote host closed the connection)
[04:39:56] <bjs> or some more obviously left-associative operation
[04:39:57] *** Joins: celeo_irctest (~celeo_irc@cpe-70-95-182-183.san.res.rr.com)
[04:40:33] <blei> this parisomonious solution is quite nice. the RegexNode in particular fixes blowups in nltk.parse.recursivedescent
[04:41:22] *** Quits: akk (~akk@75-161-95-245.albq.qwest.net) (Quit: +++)
[04:41:30] *** Quits: celeo_irctest (~celeo_irc@cpe-70-95-182-183.san.res.rr.com) (Remote host closed the connection)
[04:41:45] *** Joins: celeo_irctest (~celeo_irc@cpe-70-95-182-183.san.res.rr.com)
[04:42:03] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[04:42:27] *** Joins: blackleitus (~blackleit@189.195.195.100)
[04:42:34] *** Quits: celeo_irctest (~celeo_irc@cpe-70-95-182-183.san.res.rr.com) (Remote host closed the connection)
[04:42:57] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[04:44:51] *** Joins: c4017w__ (~c4017@209.52.68.8)
[04:45:11] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[04:45:20] *** Joins: sertsa (~sertsa@209.140.9.178)
[04:45:27] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[04:45:58] *** Joins: celeo_irctest (~celeo_irc@cpe-70-95-182-183.san.res.rr.com)
[04:46:16] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[04:46:38] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[04:47:45] *** Quits: sertsa (~sertsa@209.140.9.178) (Client Quit)
[04:48:12] *** Quits: masoudd (~masoudd@user/masoudd) (Read error: Connection reset by peer)
[04:48:30] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[04:48:43] *** Quits: celeo_irctest (~celeo_irc@cpe-70-95-182-183.san.res.rr.com) (Remote host closed the connection)
[04:50:11] <SnoopJ> bjs, I guess that falls under the list of things I haven't tried to do with it :)
[04:50:36] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[04:51:15] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (Read error: Connection reset by peer)
[04:51:41] *** Quits: foul_owl (~kerry@174-21-76-71.tukw.qwest.net) (Ping timeout: 256 seconds)
[04:53:24] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[04:53:24] *** Quits: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[04:53:54] *** Quits: rye (~rye@wagtail.trojka.no) (Quit: WeeChat 2.8)
[04:56:04] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:57:21] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Remote host closed the connection)
[04:58:27] *** Quits: nunggu (~q@user/nunggu) (Ping timeout: 276 seconds)
[04:59:18] *** Quits: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net) (Ping timeout: 256 seconds)
[05:00:07] *** Joins: nunggu (~q@user/nunggu)
[05:01:41] *** Quits: rewish (~cell@ip5f5bd16d.dynamic.kabel-deutschland.de) (Quit: Leaving)
[05:01:42] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903)
[05:01:48] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[05:01:53] *** Joins: DrBrownBear (~Drbb@2600:1700:9aa1:6bc0::49)
[05:03:07] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[05:04:09] *** Joins: drbeco (~beco@2804:351c:dd01:6600:e4a2:7a5d:e23f:1fd8)
[05:05:10] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[05:05:28] *** Quits: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net) (Quit: because)
[05:05:31] *** Joins: magic_ninja (~sparkie1@ip24-255-216-15.ks.ks.cox.net)
[05:05:40] *** Joins: hams (~hams@73.232.205.0)
[05:05:40] *** Quits: hams (~hams@73.232.205.0) (Changing host)
[05:05:40] *** Joins: hams (~hams@user/hams)
[05:05:43] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[05:06:11] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[05:06:53] *** Joins: foul_owl (~kerry@94.140.8.89)
[05:10:23] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 256 seconds)
[05:11:05] *** Joins: cliluw (~cliluw@47.147.73.223)
[05:12:29] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:12:39] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[05:12:44] <AhmedAmerican> is `yield from` is equal to for loop here ? https://bpa.st/JQUQ
[05:13:23] *** Quits: ska (~ska@user/ska) (Quit: Leaving)
[05:14:31] *** Quits: rajkosto (~rajkosto@93-86-127-103.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[05:14:33] <BtbN> yield seems relatively pointless there, or are the results also delay-loaded in as it iterates?
[05:14:47] <BtbN> Looks like a requests result though
[05:14:56] *** Joins: Viewday113 (~Viewday@user/viewday)
[05:15:04] <nedbat> AhmedAmerican: the two are the same, yes
[05:15:06] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[05:15:13] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[05:15:41] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[05:15:49] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:16:16] <AhmedAmerican> Thank you BtbN nedbat
[05:16:52] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[05:16:53] *** Viewday113 is now known as Viewday11
[05:17:19] <AhmedAmerican> within `ThreadPoolExecutor` can i add a callback from the callback function itself ?
[05:17:34] *** Quits: zumba_addict (~zumba_add@2601:240:4500:8320:224:1dff:fec8:64f6) (Quit: Client closed)
[05:17:46] *** Joins: zumba_addict (~zumba_add@2601:240:4500:8320:224:1dff:fec8:64f6)
[05:18:16] *** Quits: magic_ninja (~sparkie1@ip24-255-216-15.ks.ks.cox.net) (Ping timeout: 272 seconds)
[05:18:28] *** Joins: Seto_Kaiba (~hunterkll@remote.kisaracorporation.com)
[05:18:34] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Killed (NickServ (GHOST command used by Seto_Kaiba!~hunterkll@remote.kisaracorporation.com)))
[05:18:36] *** Seto_Kaiba is now known as Hunterkll
[05:18:58] <AhmedAmerican> https://bpa.st/CI2A meant to run another callback from `get_contract` function.
[05:19:04] *** Joins: remolej7 (~kenoba@user/kenoba)
[05:19:10] *** Quits: remolej (~kenoba@user/kenoba) (Read error: Connection reset by peer)
[05:19:10] *** remolej7 is now known as remolej
[05:20:16] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[05:20:35] *** Quits: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net) (Ping timeout: 256 seconds)
[05:20:49] *** Joins: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net)
[05:21:43] *** Quits: KeiraT (~k@lulzsec.co.uk) (Ping timeout: 256 seconds)
[05:24:34] *** Joins: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net)
[05:24:53] *** Joins: KeiraT (~k@lulzsec.co.uk)
[05:27:25] *** Joins: ravan (~ravan@user/ravan)
[05:29:34] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Ping timeout: 250 seconds)
[05:30:16] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:31] *** Quits: Sargento (uid523534@wikipedia/Sargento-de-Hierro) (Quit: Connection closed for inactivity)
[05:30:50] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[05:31:03] *** Quits: Nutcrawler (~sergio@217-180-232-30.sycmilaa.metronetinc.net) (Ping timeout: 256 seconds)
[05:32:13] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:32:44] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Ping timeout: 256 seconds)
[05:35:02] *** Quits: DrBrownBear (~Drbb@2600:1700:9aa1:6bc0::49) (Remote host closed the connection)
[05:36:42] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[05:38:35] *** Joins: califax- (~califax@user/califx)
[05:38:58] *** Quits: KeiraT (~k@lulzsec.co.uk) (Ping timeout: 256 seconds)
[05:39:00] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-c0be-54b3-db2c-85e9.res6.spectrum.com) (Remote host closed the connection)
[05:39:14] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[05:39:28] *** Joins: hguard (~john@h42.222.186.173.dynamic.ip.windstream.net)
[05:39:36] <AhmedAmerican> 🙄
[05:39:52] *** Joins: bluedust (~bluedust@59.89.210.247)
[05:39:58] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[05:41:04] *** Joins: johnkeats7 (~johnkeats@2804:14c:32:a0cc:b07c:74ab:2cee:7b3b)
[05:41:28] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:41:40] *** Joins: filename (~kilitary@185.193.143.131)
[05:41:42] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:9562:d0d2:9adf:68b8) (Ping timeout: 250 seconds)
[05:42:00] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[05:42:00] *** califax- is now known as califax
[05:42:17] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 240 seconds)
[05:42:17] *** brabrax_ is now known as brabrax
[05:43:06] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:44:10] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:44:38] *** Quits: Dotz0cat (~Dotz0cat@h77.175.40.162.dynamic.ip.windstream.net) (Ping timeout: 256 seconds)
[05:45:20] *** Joins: c4017w_ (~c4017@209.52.68.8)
[05:45:26] *** Parts: hguard (~john@h42.222.186.173.dynamic.ip.windstream.net) (Leaving)
[05:46:10] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[05:46:40] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[05:46:57] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:f54d:5f11:5f50:e5bc) (Ping timeout: 240 seconds)
[05:47:07] *** Joins: Dotz0cat (~Dotz0cat@173.186.192.244)
[05:47:39] *** Joins: magic_ninja (~sparkie1@ip24-255-209-102.ks.ks.cox.net)
[05:48:02] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[05:49:18] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[05:50:12] *** Joins: KeiraT (~k@lulzsec.co.uk)
[05:51:26] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[05:53:17] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[05:53:50] *** Joins: newpy (~newpy@2601:280:4381:1390:b191:bbaf:11f3:3a48)
[05:55:09] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 256 seconds)
[05:57:47] *** Joins: auk (auk@gateway/vpn/protonvpn/auk)
[05:58:33] *** Quits: nuclearg1 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Ping timeout: 256 seconds)
[05:58:48] *** Quits: keyehzh (~keyehzh@user/keyehzh) (Remote host closed the connection)
[06:01:48] *** Joins: mraag (~martinraa@188.213.138.59)
[06:03:06] *** Quits: mraag (~martinraa@188.213.138.59) (Client Quit)
[06:03:22] *** Joins: mraag (~martinraa@188.213.138.59)
[06:03:41] *** Quits: knkay (~knkay@213.190.30.120) (Quit: ZNC 1.8.2 - https://znc.in)
[06:03:48] *** Joins: dtux (~dtux@2601:646:8f00:3f2:1a1f:46b2:5516:9cd2)
[06:04:28] *** Quits: KeiraT (~k@lulzsec.co.uk) (Ping timeout: 256 seconds)
[06:04:34] *** Joins: Viewday111 (~Viewday@user/viewday)
[06:04:37] *** Quits: five6433334 (~five6@8.40.26.68) (Quit: The Lounge - https://thelounge.chat)
[06:05:17] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[06:05:45] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:05:54] *** Quits: ovelny (~ovelny@user/ovelny) (Quit: leaving)
[06:06:10] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[06:06:11] *** Viewday111 is now known as Viewday11
[06:07:51] *** Joins: KeiraT (~k@lulzsec.co.uk)
[06:08:05] *** Quits: wingsorc (~wingsorc@user/wingsorc) (Remote host closed the connection)
[06:08:13] *** Quits: dtg01100 (~dtg01100@199.21.141.37) (Quit: Leaving)
[06:08:18] *** Quits: magic_ninja (~sparkie1@ip24-255-209-102.ks.ks.cox.net) (Ping timeout: 272 seconds)
[06:08:31] *** Joins: dtg01100 (~dtg01100@199.21.141.37)
[06:08:39] *** Quits: kaiseisei (~Thunderbi@171.116.215.250) (Remote host closed the connection)
[06:08:43] *** Joins: wingsorc (~wingsorc@user/wingsorc)
[06:09:10] *** Joins: five6433334 (~five6@8.40.26.82)
[06:09:29] *** Joins: kaiseisei (~Thunderbi@171.116.215.250)
[06:10:27] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 256 seconds)
[06:10:50] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[06:13:34] *** Joins: txtsd (~txtsd@user/txtsd)
[06:15:20] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[06:15:23] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[06:15:25] *** Joins: joaofukuda (~joaofukuk@2804:431:c7f4:a77a:575:562:5f94:3a18)
[06:15:42] *** Quits: Guest95 (~Guest95@88.103.7.38) (Quit: Client closed)
[06:16:50] *** Joins: knkay (~knkay@213.190.30.120)
[06:22:27] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[06:23:00] <rindolf> dg_dg: hi. wrt #perl , you shud read http://shlomifishswiki.branchable.com/Encourage_criticism_and_try_to_get_offended/ . one *can* grow a thicker screen
[06:23:30] *** Joins: magic_ninja (~sparkie1@162-202-44-35.lightspeed.tpkaks.sbcglobal.net)
[06:24:52] <rindolf> dg_dg: https://images3.alphacoders.com/656/656941.jpg too [ ♥ Summer Glau ]
[06:24:57] *** Quits: johnkeats7 (~johnkeats@2804:14c:32:a0cc:b07c:74ab:2cee:7b3b) (Ping timeout: 256 seconds)
[06:25:54] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:27:19] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-5c4e-92cc-80de-49d9.res6.spectrum.com)
[06:28:44] *** Joins: DonLino (~Don@cpe-67-242-4-226.twcny.res.rr.com)
[06:28:46] *** Quits: theo (~theo@user/theo) (Quit: Ping timeout (120 seconds))
[06:28:55] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[06:29:10] *** Joins: theo (~theo@user/theo)
[06:29:42] *** Quits: fofoni_ (~fofoni@user/fofoni) (Remote host closed the connection)
[06:30:13] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[06:31:02] *** Quits: zaz\ (~zaz@poneybl.eu) (Quit: bye)
[06:31:30] *** Joins: zaz\ (~zaz@poneybl.eu)
[06:32:08] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:32:22] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 272 seconds)
[06:32:33] *** Joins: vlm (~vlm@user/vlm)
[06:32:37] <altendky> is `try`/`except BaseException:` `undo_stuff()` `raise` the tidy way to cleanup on anything but successful completion of the whole `try` block?  seems a bit hazardous in terms of converting a `SystemExit` or `asyncio.CancellationError` into something else if the cleanup fails.  i feel like i'm missing some important point here.
[06:32:48] *** Joins: resmo_ (~resmo@143-48-239-77.dyn.cable.fcom.ch)
[06:32:55] *** Parts: DonLino (~Don@cpe-67-242-4-226.twcny.res.rr.com) (Leaving)
[06:34:01] *** Quits: vlm (~vlm@user/vlm) (Client Quit)
[06:34:01] *** Quits: lemonsni- (~lemonsnic@86.4.248.115) (Quit: ZNC 1.8.2 - https://znc.in)
[06:35:04] *** Quits: KeiraT (~k@lulzsec.co.uk) (Ping timeout: 256 seconds)
[06:35:20] *** Quits: aphysically (~aphysical@user/aphysically) (Quit: aphysically)
[06:35:26] *** Quits: resmo (~resmo@2a00:d420:9:8a00:ad0b:ca34:6869:6aa2) (Ping timeout: 250 seconds)
[06:36:43] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[06:38:01] *** Joins: aphysically (~aphysical@user/aphysically)
[06:38:09] *** Quits: montpol (montpol@fine.mouses.xyz) (Remote host closed the connection)
[06:38:33] *** Joins: KeiraT (~k@lulzsec.co.uk)
[06:39:15] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[06:39:19] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:40:15] *** Quits: junebug (~junebug@2600:1700:3db0:2540:5101:e86d:3ab2:4b8) (Quit: Leaving)
[06:40:51] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-5c4e-92cc-80de-49d9.res6.spectrum.com) (Remote host closed the connection)
[06:40:51] *** Joins: zebrag (~chris@user/zebrag)
[06:42:04] *** Joins: montpol (montpol@fine.mouses.xyz)
[06:42:24] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[06:43:30] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[06:44:08] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[06:44:27] *** Quits: JackRye (~JackRye@ool-ae2c037b.dyn.optonline.net) (Ping timeout: 256 seconds)
[06:44:27] *** Joins: frost (~frost@user/frost)
[06:45:14] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[06:45:41] <meejah> try/finally doesn't work?
[06:45:51] *** Joins: c4017w__ (~c4017@209.52.68.8)
[06:46:14] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[06:46:37] *** Quits: MercilessDeth (~brad@136.49.59.177) (Ping timeout: 240 seconds)
[06:46:56] *** Joins: MercilessDeth (~brad@136.49.59.177)
[06:47:19] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[06:47:58] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[06:48:18] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[06:49:28] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[06:49:48] *** Joins: adeliktas5 (~adeliktas@i59F4D79A.versanet.de)
[06:51:04] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Quit: -a- Connection Timed Out)
[06:51:26] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[06:51:27] *** Joins: JimmyRustles (Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net)
[06:51:34] <JimmyRustles> i just made a big speed up in my python script
[06:51:49] *** Quits: adeliktas (~adeliktas@i59f5fa6e.versanet.de) (Ping timeout: 256 seconds)
[06:51:49] *** adeliktas5 is now known as adeliktas
[06:51:50] <JimmyRustles> it's processing chess games
[06:52:00] <JimmyRustles> and before it was processing 2 games per minute
[06:52:05] <JimmyRustles> now it's processing 4k+ games per minute
[06:52:14] <JimmyRustles> sorry i mean 2 games per second
[06:52:20] <JimmyRustles> so 120 games per minute
[06:53:06] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[06:54:33] *** Quits: filename (~kilitary@185.193.143.131) (Remote host closed the connection)
[06:54:39] *** Quits: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net) (Ping timeout: 256 seconds)
[06:55:10] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 272 seconds)
[06:55:10] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[06:55:39] <altendky> meejah: i don't want to cleanup on success so it would involve a flag set false before the try and try at the end of the `try`, which isn't obviously cleaner.  and in the end, it still has the same hazard of de-escalating a `BaseException` to an `Exception`.
[06:56:04] <altendky> JimmyRustles: nicely done!  that's a good good jump there.
[06:56:31] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[06:56:39] *** Quits: KeiraT (~k@lulzsec.co.uk) (Ping timeout: 250 seconds)
[06:57:12] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[06:57:19] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[06:58:00] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[06:58:19] *** Joins: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net)
[06:58:20] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[06:58:29] *** Joins: vlm (~vlm@user/vlm)
[06:59:21] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Ping timeout: 276 seconds)
[07:00:04] *** Quits: zumba_addict (~zumba_add@2601:240:4500:8320:224:1dff:fec8:64f6) (Quit: Client closed)
[07:00:30] *** Joins: KeiraT (~k@lulzsec.co.uk)
[07:00:34] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:00:46] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[07:01:53] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:02:08] *** Quits: cjb (~cjb@user/cjb) (Ping timeout: 260 seconds)
[07:03:09] *** Quits: msek_ (~Username@pd9fb3b7c.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[07:04:28] *** Quits: XV9 (~XV8@2601:5cb:c001:50:e0f2:76b6:d7e0:55b) (Quit: Textual IRC Client: www.textualapp.com)
[07:04:53] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 250 seconds)
[07:06:03] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[07:06:28] *** Joins: blackleitus (~blackleit@189.195.195.100)
[07:06:46] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:06:46] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[07:06:46] *** finn_elija is now known as FinnElija
[07:07:12] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[07:07:26] *** Joins: Azem (~haise01@user/haise01)
[07:08:36] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[07:10:31] *** Quits: Emet-Selch (~haise01@user/haise01) (Ping timeout: 256 seconds)
[07:11:34] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[07:11:50] <meejah> altendky: i don't understand why there's a risk with try/finally?
[07:11:53] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[07:12:04] <meejah> (but, yeah, flag: not-awesome)
[07:12:16] *** Joins: saroy (~Sandipan@115.187.50.151)
[07:12:22] <meejah> maybe a context-manager would work, depending ..
[07:12:28] *** Quits: KeiraT (~k@lulzsec.co.uk) (Ping timeout: 256 seconds)
[07:12:36] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[07:12:47] <altendky> meejah: if you trigger an exception in a finally isn't it going to be what propagates?
[07:13:03] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[07:13:07] *** Quits: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net) (Ping timeout: 250 seconds)
[07:13:23] <altendky> meejah: I'm trying to get more of those in use but they don't change anything other than usability I would expect.
[07:13:56] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:14:01] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[07:14:13] *** Joins: JackRye (~JackRye@ool-ae2c037b.dyn.optonline.net)
[07:14:55] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:15:21] *** Quits: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Read error: Connection reset by peer)
[07:16:15] <altendky> Or maybe you meant the context manager could hide away the ugly flag, in which case, true.
[07:16:46] *** Quits: de-facto (~de-facto@user/de-facto) (Quit: See you around. 💤)
[07:17:09] <meejah> altendky: okay i see what you mean with finally i think (i.e. "if cleanup code wrong")
[07:17:40] <altendky> meejah: or not wrong but fails, yeah
[07:17:49] *** Joins: KeiraT (~k@lulzsec.co.uk)
[07:17:57] *** Quits: aknot (~aknot@2603-900a-1503-17bb-d6bf-53bc-6fd7-78e4.inf6.spectrum.com) (Ping timeout: 240 seconds)
[07:18:06] *** Quits: stdout (~stdout@2605:ab80:b000:7202:3e12:af82:936c:2ff6) (Remote host closed the connection)
[07:18:27] *** Joins: de-facto (~de-facto@user/de-facto)
[07:18:29] *** Joins: stdout (~stdout@2605:ab80:b000:7202:983b:dcb7:16d6:b705)
[07:18:36] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 272 seconds)
[07:19:09] *** Joins: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net)
[07:19:26] *** Quits: JackRye (~JackRye@ool-ae2c037b.dyn.optonline.net) (Read error: Connection reset by peer)
[07:19:37] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[07:20:51] *** Quits: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net) (Read error: Connection reset by peer)
[07:20:59] <altendky> I guess maybe finally wins due to the inability to consume an exception.
[07:21:54] *** Joins: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net)
[07:22:25] <altendky> Let's just add a new `error:` clause for this
[07:22:52] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[07:24:15] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[07:24:31] *** Joins: filename (~kilitary@185.193.143.131)
[07:24:56] <meejah> goto error
[07:24:58] <meejah> ;)
[07:24:59] *** Joins: nuclearg1 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net)
[07:25:03] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[07:25:07] *** Quits: nuclearg1 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Changing host)
[07:25:07] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[07:25:28] *** Joins: blackleitus (~blackleit@189.195.195.100)
[07:25:37] *** Quits: xheimlich (~xheimlich@179.218.1.150) (Ping timeout: 240 seconds)
[07:25:41] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 250 seconds)
[07:25:42] *** Quits: blei (~blei@2601:280:c001:c2b0:3dfa:d8b:2346:5cd2) (Quit: Client closed)
[07:26:52] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[07:27:41] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[07:27:57] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[07:28:07] *** Quits: Syroth (~Syroth@pool-96-244-212-50.bltmmd.fios.verizon.net) (Quit: Leaving)
[07:28:40] *** Joins: duuude (~user@user/duuude)
[07:29:32] <duuude> any libs to cheaply explore a big tsv without loading it all on RAM?
[07:29:49] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:30:00] *** Quits: Luke (~ldm@hacksoc/member) (Quit: o/ 4w 6d 23h 59m 16s)
[07:30:03] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[07:30:09] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:30:28] *** Joins: blackleitus (~blackleit@189.195.195.100)
[07:30:32] <duuude> or for searching a file grep-style
[07:30:55] <rindolf> duuude: csvkit
[07:31:17] *** Quits: foul_owl (~kerry@94.140.8.89) (Ping timeout: 240 seconds)
[07:31:37] <rindolf> duuude: https://www.reddit.com/r/coolgithubprojects/comments/f287du/csvkit_a_suite_of_utilities_for_converting_to_and/
[07:32:36] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[07:33:10] *** Joins: txtsd (~txtsd@user/txtsd)
[07:33:37] <InPhase> duuude: Reading by line doesn't really require a lib.
[07:33:41] *** Joins: Luke (~ldm@hacksoc/member)
[07:34:08] <duuude> InPhase: efficiency-wise
[07:34:12] <InPhase> duuude: It's just a for loop.  For tsv, you can split on tabs.  It would be an absurd file to have tabs inside quotes in a tsv.
[07:34:21] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[07:34:26] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 272 seconds)
[07:34:47] <duuude> I don't need 2GB ram to grep
[07:35:04] <duuude> maybe I am better off doing that part in shell
[07:35:06] <InPhase> Nor would you need it to read a file by lines.
[07:35:29] <duuude> GNU grep does weird performance tricks
[07:36:00] <Repiphany> subprocess grep is a perfectly cromulent solution
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:50] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903) (Ping timeout: 250 seconds)
[07:37:56] <InPhase> duuude: Yes.  And while perl has managed to keep approximate pace with grep's efficiency for 20-some years, Python doesn't.  But it's also 2022 and you're not likely to be doing most of the waiting on the line processing for this.  It will be mostly on IO.
[07:38:57] <InPhase> duuude: I'd say write the line-processing solution with a tab split, benchmark it on your 2GB file, and see how it really compares.
[07:39:09] <twainwek> what is the 'correct' way to remove pylint error 'Instance of 'LookupDict' has no 'ok' member' for 'requests' library
[07:39:23] *** Joins: audiobirb (~audio@user/audio)
[07:39:24] <InPhase> It should be a very quick implementation to write, so it's easy to just try it.
[07:39:47] <twainwek> I can add an inline 'pylint: disable=no-member' comment, but i was looking for a more global solution
[07:41:04] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Remote host closed the connection)
[07:44:16] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:f54d:5f11:5f50:e5bc)
[07:45:00] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:10a2:3d12:19cf:a97a)
[07:45:20] *** Quits: filename (~kilitary@185.193.143.131) (Ping timeout: 256 seconds)
[07:45:38] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:46:21] *** Joins: c4017w_ (~c4017@209.52.68.8)
[07:47:07] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Quit: Leaving)
[07:47:10] *** Quits: karlnashville (~karl@2601:482:4280:4cf0:30ee:d406:3a9a:aa09) (Remote host closed the connection)
[07:47:33] *** Joins: karlnashville (~karl@2601:482:4280:4cf0:69be:8132:2266:1bf9)
[07:48:54] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[07:48:59] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[07:49:43] *** Quits: karlnashville (~karl@2601:482:4280:4cf0:69be:8132:2266:1bf9) (Client Quit)
[07:49:57] *** Joins: karlnashville (~karl@2601:482:4280:4cf0:69be:8132:2266:1bf9)
[07:50:14] *** Joins: foul_owl (~kerry@217.114.38.246)
[07:50:16] *** Quits: duuude (~user@user/duuude) (Ping timeout: 272 seconds)
[07:50:16] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[07:50:26] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:50:33] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[07:50:49] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[07:50:54] *** Quits: sreve (~quassel@p4ff44143.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[07:50:55] *** Joins: sreve_ (~quassel@p549d73fe.dip0.t-ipconnect.de)
[07:50:58] *** Joins: blackleitus (~blackleit@189.195.195.100)
[07:51:01] *** Joins: Lando-SpaceIzzle (~Lando-Spa@user/lando-spacepimp)
[07:51:03] *** Joins: duuude (~user@user/duuude)
[07:52:44] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[07:54:14] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[07:54:24] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[07:54:43] *** Joins: Navid (~Navid@S010608a7c0a531b2.ed.shawcable.net)
[07:54:46] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[07:54:56] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[07:54:58] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[07:55:29] *** Navid is now known as Digital
[07:56:08] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[07:56:15] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:56:47] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[07:58:51] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[07:59:46] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[08:00:47] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[08:01:50] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:02:15] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-d449-2685-1032-d72e.res6.spectrum.com)
[08:04:08] *** Joins: Viewday118 (~Viewday@user/viewday)
[08:05:33] *** Joins: maxzor (~maxzor@2a01cb04054faa0059ee5a859898ca83.ipv6.abo.wanadoo.fr)
[08:05:37] *** Quits: stdout (~stdout@2605:ab80:b000:7202:983b:dcb7:16d6:b705) (Quit: Leaving)
[08:05:44] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[08:05:45] *** Viewday118 is now known as Viewday11
[08:06:44] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[08:07:45] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 256 seconds)
[08:09:02] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[08:09:41] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Remote host closed the connection)
[08:13:20] *** Joins: filename (~kilitary@185.193.143.131)
[08:13:41] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[08:14:00] *** Joins: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com)
[08:15:34] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:10a2:3d12:19cf:a97a) (Read error: Connection reset by peer)
[08:18:32] *** Quits: filename (~kilitary@185.193.143.131) (Read error: Connection reset by peer)
[08:20:44] *** Quits: parv (~quass@user/parv) (Ping timeout: 250 seconds)
[08:21:19] *** Quits: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[08:23:48] *** Quits: Digital (~Navid@S010608a7c0a531b2.ed.shawcable.net) (Remote host closed the connection)
[08:25:11] *** Joins: Masterphi (~Masterphi@user/masterphi)
[08:25:49] *** Quits: Masterphi (~Masterphi@user/masterphi) (Client Quit)
[08:26:38] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Quit: -a- Connection Timed Out)
[08:26:41] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:28:58] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[08:29:49] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[08:29:51] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 256 seconds)
[08:30:06] *** Quits: foul_owl (~kerry@217.114.38.246) (Ping timeout: 256 seconds)
[08:31:07] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[08:35:06] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[08:36:51] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[08:37:06] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[08:37:22] *** Joins: mickey8 (~user@user/mickey)
[08:37:29] *** Quits: dtg01100 (~dtg01100@199.21.141.37) (Quit: Leaving)
[08:37:35] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[08:38:21] *** Joins: filename (~kilitary@185.193.143.131)
[08:40:14] *** Joins: dtg01100 (~dtg01100@199.21.141.37)
[08:40:30] *** Quits: dtg01100 (~dtg01100@199.21.141.37) (Remote host closed the connection)
[08:41:26] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[08:41:32] *** Quits: joaofukuda (~joaofukuk@2804:431:c7f4:a77a:575:562:5f94:3a18) (Ping timeout: 250 seconds)
[08:41:51] *** Joins: dtg01100 (~dtg01100@199.21.141.37)
[08:42:12] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 272 seconds)
[08:42:34] *** Quits: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net) (Ping timeout: 256 seconds)
[08:43:00] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[08:43:10] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[08:43:17] *** Quits: karlnashville (~karl@2601:482:4280:4cf0:69be:8132:2266:1bf9) (Ping timeout: 240 seconds)
[08:44:06] *** Quits: KeiraT (~k@lulzsec.co.uk) (Ping timeout: 272 seconds)
[08:44:07] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 250 seconds)
[08:44:42] *** Joins: foul_owl (~kerry@207.244.125.36)
[08:46:23] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[08:46:39] *** Joins: KeiraT (~k@lulzsec.co.uk)
[08:46:51] *** Joins: c4017w__ (~c4017@209.52.68.8)
[08:46:51] *** Joins: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net)
[08:47:19] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[08:47:35] *** Joins: savolla (~quassel@84.44.28.28)
[08:49:11] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[08:49:44] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[08:50:30] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[08:50:38] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 250 seconds)
[08:51:09] *** Quits: emerent (~quassel@p200300cd57044359ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[08:51:37] *** Joins: emerent (~quassel@p200300cd57044364ba27ebfffed28a59.dip0.t-ipconnect.de)
[08:51:42] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[08:52:31] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[08:53:18] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[08:53:26] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:54:29] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[08:55:12] *** Joins: ASUS (~ASUS@user/ASUS)
[08:55:16] *** Quits: ASUS (~ASUS@user/ASUS) (Client Quit)
[08:56:10] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 256 seconds)
[08:57:56] *** Joins: analoq (~yashi@user/dies)
[08:59:43] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[09:00:15] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[09:00:48] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[09:02:03] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[09:02:28] *** Joins: dvx (~dvx@5.181.92.64)
[09:02:36] <Jonno_FTW> when calling super() and using multiple inheritance, do all the superclasses need to have the same constructor?
[09:03:46] *** Quits: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com) (Quit: jarthur)
[09:04:38] *** Joins: manti7 (~manti7@176.10.104.94)
[09:05:17] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:1d52:1aeb:7253:3a69) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[09:05:32] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:1ad3:6f73:7a3b:18fc)
[09:05:33] *** Joins: Xedtr (~Xedtr@185.97.201.104)
[09:10:46] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[09:10:48] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[09:11:57] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[09:12:43] *** Joins: pepper (~pepper@user/pepper)
[09:13:05] *** Quits: kingfightboy (~kingfight@218.23.109.195) (Quit: Leaving)
[09:16:37] *** Quits: greenbagels (~gb@user/greenbagels) (Remote host closed the connection)
[09:16:42] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:16:58] *** Joins: greenbagels (~gb@user/greenbagels)
[09:18:29] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:3751:3896:183:6a64)
[09:19:47] *** Quits: xaltsc (~xaltsc@user/xaltsc) (Remote host closed the connection)
[09:21:23] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[09:21:46] *** Quits: kinabalu (~kinabalu@about/java/kinabalu) (*.net *.split)
[09:21:46] *** Quits: vince (~vince@75.127.14.76) (*.net *.split)
[09:21:46] *** Quits: Boarders_ (sid425905@id-425905.lymington.irccloud.com) (*.net *.split)
[09:21:46] *** Quits: ThothCastel (sid78195@id-78195.tinside.irccloud.com) (*.net *.split)
[09:21:46] *** Quits: lericson (~lericson@user/lericson) (*.net *.split)
[09:21:46] *** Quits: d1rewolf (sid312924@id-312924.helmsley.irccloud.com) (*.net *.split)
[09:21:46] *** Quits: Evolver (sid32215@user/evolver) (*.net *.split)
[09:21:46] *** Quits: hogarius (hogarius@id-222644.uxbridge.irccloud.com) (*.net *.split)
[09:21:46] *** Quits: bjs (sid190364@user/bjs) (*.net *.split)
[09:21:46] *** Quits: cloudcell (sid48145@id-48145.tinside.irccloud.com) (*.net *.split)
[09:21:46] *** Quits: patchie (sid504252@id-504252.ilkley.irccloud.com) (*.net *.split)
[09:21:46] *** Quits: eichin (sid27120@id-27120.tinside.irccloud.com) (*.net *.split)
[09:21:46] *** Quits: jessicara (~shirogits@user/jessicara) (*.net *.split)
[09:21:46] *** Quits: Affliction (affliction@idlerpg/player/affliction) (*.net *.split)
[09:21:46] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (*.net *.split)
[09:21:46] *** Quits: savolla (~quassel@84.44.28.28) (*.net *.split)
[09:21:46] *** Quits: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net) (*.net *.split)
[09:21:46] *** Quits: dtg01100 (~dtg01100@199.21.141.37) (*.net *.split)
[09:21:46] *** Quits: Viewday11 (~Viewday@user/viewday) (*.net *.split)
[09:21:46] *** Quits: blackleitus (~blackleit@189.195.195.100) (*.net *.split)
[09:21:46] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (*.net *.split)
[09:21:46] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (*.net *.split)
[09:21:46] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (*.net *.split)
[09:21:46] *** Quits: resmo_ (~resmo@143-48-239-77.dyn.cable.fcom.ch) (*.net *.split)
[09:21:46] *** Quits: zaz\ (~zaz@poneybl.eu) (*.net *.split)
[09:21:46] *** Quits: kaiseisei (~Thunderbi@171.116.215.250) (*.net *.split)
[09:21:46] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (*.net *.split)
[09:21:46] *** Quits: JimmyRustles (Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net) (*.net *.split)
[09:21:46] *** Quits: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca) (*.net *.split)
[09:21:46] *** Quits: Wulf (~Wulf@user/wulf) (*.net *.split)
[09:21:46] *** Quits: kaivai (~kaivai@user/kaivai) (*.net *.split)
[09:21:46] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (*.net *.split)
[09:21:46] *** Quits: kickingvegas (~cchoi@c-69-181-182-237.hsd1.ca.comcast.net) (*.net *.split)
[09:21:46] *** Quits: Celeo (~znc-admin@user/celeo) (*.net *.split)
[09:21:46] *** Quits: Anarkitty (~c0a801f8@user/Anarkitty) (*.net *.split)
[09:21:46] *** Quits: jazzy (~jaziz@user/jaziz) (*.net *.split)
[09:21:46] *** Quits: mossman93 (~quassel@user/mossman93) (*.net *.split)
[09:21:46] *** Quits: Betal (~Betal@user/betal) (*.net *.split)
[09:21:46] *** Quits: Roey (~Roey@user/Roey) (*.net *.split)
[09:21:46] *** Quits: ngp (~ngp@199.180.249.183) (*.net *.split)
[09:21:46] *** Quits: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com) (*.net *.split)
[09:21:46] *** Quits: beencubed (~beencubed@209.131.238.248) (*.net *.split)
[09:21:46] *** Quits: Axy (~Axy@user/axy) (*.net *.split)
[09:21:46] *** Quits: thurs80601421053 (~thurs@ip68-225-209-147.ph.ph.cox.net) (*.net *.split)
[09:21:46] *** Quits: pankid (~quassel@pankid.club) (*.net *.split)
[09:21:46] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (*.net *.split)
[09:21:46] *** Quits: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222) (*.net *.split)
[09:21:46] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (*.net *.split)
[09:21:46] *** Quits: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net) (*.net *.split)
[09:21:46] *** Quits: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com) (*.net *.split)
[09:21:46] *** Quits: zaquest (~notzaques@5.130.79.72) (*.net *.split)
[09:21:46] *** Quits: qwedfg (~qwedfg@user/qwedfg) (*.net *.split)
[09:21:46] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (*.net *.split)
[09:21:46] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (*.net *.split)
[09:21:46] *** Quits: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (*.net *.split)
[09:21:46] *** Quits: tomg (~tomg@user/tomg) (*.net *.split)
[09:21:46] *** Quits: fikran (~fikran@user/fikran) (*.net *.split)
[09:21:46] *** Quits: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (*.net *.split)
[09:21:46] *** Quits: mentallyinspired (~mentallyi@h-85-24-146-18.A400.priv.bahnhof.se) (*.net *.split)
[09:21:46] *** Quits: driib2 (~driib@185.195.233.154) (*.net *.split)
[09:21:46] *** Quits: waxfire6 (~waxfire@65.119.2.240) (*.net *.split)
[09:21:46] *** Quits: delarge (~chamigo@ctm.linuxers.cl) (*.net *.split)
[09:21:46] *** Quits: uhu (~uhu@static.101.168.216.95.clients.your-server.de) (*.net *.split)
[09:21:46] *** Quits: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt) (*.net *.split)
[09:21:46] *** Quits: {HD} (~{HD}@gateway/vpn/pia/hd/x-06969157) (*.net *.split)
[09:21:46] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (*.net *.split)
[09:21:46] *** Quits: Kanjizai (~kanjizai@cpe-107-185-193-171.socal.res.rr.com) (*.net *.split)
[09:21:46] *** Quits: NovaXrine (~NovaXrine@zen.novaxrine.com) (*.net *.split)
[09:21:46] *** Quits: rinzewind (~rinzewind@user/rinzewind) (*.net *.split)
[09:21:46] *** Quits: ubert (~Thunderbi@p548c8cd6.dip0.t-ipconnect.de) (*.net *.split)
[09:21:46] *** Quits: wolfshappen (~waff@irc.furworks.de) (*.net *.split)
[09:21:46] *** Quits: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net) (*.net *.split)
[09:21:46] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (*.net *.split)
[09:21:46] *** Quits: suffer (znc@mutant.penguin.fyi) (*.net *.split)
[09:21:46] *** Quits: somlis (~somlis@user/somlis) (*.net *.split)
[09:21:46] *** Quits: zamanf (~dev@user/zamanf) (*.net *.split)
[09:21:46] *** Quits: jug (~jug@user/jug) (*.net *.split)
[09:21:46] *** Quits: fxhp (~fxhp@d-206-53-88-50.ct.cpe.atlanticbb.net) (*.net *.split)
[09:21:46] *** Quits: malwar3hun73r (~malwar3hu@134.122.29.124) (*.net *.split)
[09:21:46] *** Quits: beanzilla (~beanzilla@user/beanzilla) (*.net *.split)
[09:21:46] *** Quits: notepad7 (~notepad@129.159.46.243) (*.net *.split)
[09:21:46] *** Quits: KevinX (~KevinX@user/KevinX) (*.net *.split)
[09:21:46] *** Quits: nepeat (~nepeat@79.110.170.60) (*.net *.split)
[09:21:46] *** Quits: victori (~victori@cpe-76-89-139-69.socal.res.rr.com) (*.net *.split)
[09:21:46] *** Quits: millido (~millido@84.210.150.128) (*.net *.split)
[09:21:46] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (*.net *.split)
[09:21:46] *** Quits: chives (~chives@64.130.100.177) (*.net *.split)
[09:21:46] *** Quits: Hackerpcs (~user@user/hackerpcs) (*.net *.split)
[09:21:46] *** Quits: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net) (*.net *.split)
[09:21:46] *** Quits: Bluefoxicy (~Bluefoxic@c-73-132-244-30.hsd1.md.comcast.net) (*.net *.split)
[09:21:46] *** Quits: RiFo (~RiFo@user/rifo) (*.net *.split)
[09:21:46] *** Quits: gurki (~gurki@user/gurki) (*.net *.split)
[09:21:46] *** Quits: lastmikoi (~lastmikoi@vm-01.lastmikoi.net) (*.net *.split)
[09:21:46] *** Quits: adamchainz (~adamj@51.15.34.126) (*.net *.split)
[09:21:46] *** Quits: lyr (~lyr@user/lyr) (*.net *.split)
[09:21:46] *** Quits: yaraju (~yaraju@user/yaraju) (*.net *.split)
[09:21:46] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (*.net *.split)
[09:21:46] *** Quits: waveform (~quassel@waveform.plus.com) (*.net *.split)
[09:21:46] *** Quits: yac (~user@user/yac) (*.net *.split)
[09:21:46] *** Quits: moose (~moose@user/moose) (*.net *.split)
[09:21:46] *** Quits: asix (~Anders@user/asix) (*.net *.split)
[09:21:46] *** Quits: mrec (~markus@sundtek.de) (*.net *.split)
[09:21:46] *** Quits: Ingvix (~Ingvix@user/ingvix) (*.net *.split)
[09:21:46] *** Quits: LogicAside (~LogicAsid@user/logicaside) (*.net *.split)
[09:21:46] *** Quits: Phlyniii (~alex@84-115-52-62.cable.dynamic.surfer.at) (*.net *.split)
[09:21:46] *** Quits: odrling (~odrling@korone.aidoru.agency) (*.net *.split)
[09:21:46] *** Quits: s1b1 (~s1b1@user/s1b1) (*.net *.split)
[09:21:46] *** Quits: ecool (~ecool@ecool.dev) (*.net *.split)
[09:21:46] *** Quits: Phineas (~Phineas@user/Phineas) (*.net *.split)
[09:21:46] *** Quits: teroshan (~teroshan@static.28.181.130.94.clients.your-server.de) (*.net *.split)
[09:21:46] *** Quits: overrider (~overrider@user/overrider) (*.net *.split)
[09:21:46] *** Quits: Forty-Bot (~kvirc@pool-108-18-137-133.washdc.fios.verizon.net) (*.net *.split)
[09:21:46] *** Quits: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald) (*.net *.split)
[09:21:46] *** Quits: kurfen_ (~kurfen@213.152.188.7) (*.net *.split)
[09:21:46] *** Quits: MootPoot (uid444585@ilkley.irccloud.com) (*.net *.split)
[09:21:46] *** Quits: koopman (sid466269@ilkley.irccloud.com) (*.net *.split)
[09:21:46] *** Quits: angular_mike_ (sid45533@ilkley.irccloud.com) (*.net *.split)
[09:21:46] *** Quits: synic (~squish@li74-118.members.linode.com) (*.net *.split)
[09:21:46] *** Quits: sleepingforest (~sleepingf@user/sleepingforest) (*.net *.split)
[09:21:46] *** Quits: w0rp (~w0rp@w0rp.com) (*.net *.split)
[09:21:46] *** Quits: WayToDoor (~WayToDoor@user/waytodoor) (*.net *.split)
[09:21:46] *** Quits: libussa (~libussa@libussa.net) (*.net *.split)
[09:21:46] *** Quits: georgeisbot (~georgeisb@8.12.22.9) (*.net *.split)
[09:21:46] *** Quits: crunchy_david (~david@pgguru.net) (*.net *.split)
[09:21:46] *** Quits: Mogget (~Mogget@vogon02.moshwire.com) (*.net *.split)
[09:21:46] *** Quits: Pici (~bnrubin@li1014-36.members.linode.com) (*.net *.split)
[09:21:46] *** Quits: swistak (~swistak@185.21.216.141) (*.net *.split)
[09:21:46] *** Quits: civillian (~nick@118.211.117.130) (*.net *.split)
[09:21:46] *** Quits: arooni (~arooni@li1062-244.members.linode.com) (*.net *.split)
[09:21:46] *** Quits: Forkk (~forkk@li926-228.members.linode.com) (*.net *.split)
[09:21:46] *** Quits: Tomassi-1 (~Tomassi-1@ec2-16-170-233-250.eu-north-1.compute.amazonaws.com) (*.net *.split)
[09:21:46] *** Quits: coc0nut (~coc0nut@user/coc0nut) (*.net *.split)
[09:21:46] *** Quits: Neopolitan (~tn5421@45.76.61.24) (*.net *.split)
[09:21:46] *** Quits: cryocaustik7 (~cryocaust@user/cryocaustik) (*.net *.split)
[09:21:46] *** Quits: mage (~julien@orval.bbpf.belspo.be) (*.net *.split)
[09:21:46] *** Quits: queue- (~nerd@user/queue/x-7267619) (*.net *.split)
[09:21:46] *** Quits: Melon_Bread (~Melon_Bre@li958-238.members.linode.com) (*.net *.split)
[09:21:46] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (*.net *.split)
[09:21:46] *** Quits: pr3d4t0r (~zhenya01@user/pr3d4t0r) (*.net *.split)
[09:21:46] *** Quits: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de) (*.net *.split)
[09:21:46] *** Quits: dminuoso (~dminuoso@user/dminuoso) (*.net *.split)
[09:21:46] *** Quits: simplicity (~yti@user/simplicity) (*.net *.split)
[09:21:46] *** Quits: nigelb (~nigel@zeus.nigelb.me) (*.net *.split)
[09:21:46] *** Quits: n1000 (~n1000@user/n1000) (*.net *.split)
[09:21:46] *** Quits: aoei (~aoei@nethackscoreboard/aoei) (*.net *.split)
[09:21:46] *** Quits: Helle (~helle@45.83.235.185) (*.net *.split)
[09:21:46] *** Quits: meejah (~meejah@rutas.meejah.ca) (*.net *.split)
[09:21:46] *** Quits: dlam (~dlam@dlam.me) (*.net *.split)
[09:21:46] *** Quits: hrm (~hrm@nimbus.harmtemolder.nl) (*.net *.split)
[09:21:46] *** Quits: kolcon (~kolcon@v.kolouch.org) (*.net *.split)
[09:21:46] *** Quits: NOTevil (~notevil@user/notevil) (*.net *.split)
[09:21:46] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (*.net *.split)
[09:21:46] *** Quits: peanuter_ (~peanuter@static.190.220.201.138.clients.your-server.de) (*.net *.split)
[09:21:46] *** Quits: streety (~streety@li761-24.members.linode.com) (*.net *.split)
[09:21:46] *** Quits: achilleas (~ach@user/achilleas) (*.net *.split)
[09:21:46] *** Quits: ntdll_ (~ntdll@shion.saiban.me) (*.net *.split)
[09:21:46] *** Quits: Dantali0n (~Dantali0n@251-228-138-45.connected.by.freedominter.net) (*.net *.split)
[09:21:46] *** Quits: ldericher (~LDer@pantalaimon.yavook.de) (*.net *.split)
[09:21:46] *** Quits: lantech19446 (~lantech19@144.202.10.138) (*.net *.split)
[09:21:46] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (*.net *.split)
[09:21:46] *** Quits: han-` (~han`@user/han-/x-0887595) (*.net *.split)
[09:21:46] *** Quits: tinystoat (~squeek@user/tinystoat) (*.net *.split)
[09:21:46] *** Quits: nickodd (~nickodd@user/nickodd) (*.net *.split)
[09:21:46] *** Quits: Nei (~ailin@openSUSE/member/ailin-nemui) (*.net *.split)
[09:21:56] *** Joins: lericson (~lericson@user/lericson)
[09:21:59] *** Joins: bluedust_ (~bluedust@86.106.136.218)
[09:22:01] *** Joins: jessicara (~shirogits@user/jessicara)
[09:22:13] *** Joins: Boarders_ (sid425905@id-425905.lymington.irccloud.com)
[09:22:17] *** Joins: cloudcell (sid48145@2a03:5180:f::bc11)
[09:22:20] *** Joins: hogarius (hogarius@2a03:5180:f:5::3:65b4)
[09:22:22] *** Joins: patchie (sid504252@2a03:5180:f:3::7:b1bc)
[09:22:22] *** Joins: Evolver (sid32215@user/evolver)
[09:22:23] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[09:22:23] *** Joins: savolla (~quassel@84.44.28.28)
[09:22:23] *** Joins: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net)
[09:22:23] *** Joins: dtg01100 (~dtg01100@199.21.141.37)
[09:22:23] *** Joins: Viewday11 (~Viewday@user/viewday)
[09:22:23] *** Joins: blackleitus (~blackleit@189.195.195.100)
[09:22:23] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[09:22:23] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[09:22:23] *** Joins: JimmyRustles (Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net)
[09:22:23] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[09:22:23] *** Joins: resmo_ (~resmo@143-48-239-77.dyn.cable.fcom.ch)
[09:22:23] *** Joins: zaz\ (~zaz@poneybl.eu)
[09:22:23] *** Joins: kaiseisei (~Thunderbi@171.116.215.250)
[09:22:23] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[09:22:23] *** Joins: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca)
[09:22:23] *** Joins: Wulf (~Wulf@user/wulf)
[09:22:23] *** Joins: kaivai (~kaivai@user/kaivai)
[09:22:23] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[09:22:23] *** Joins: kickingvegas (~cchoi@c-69-181-182-237.hsd1.ca.comcast.net)
[09:22:23] *** Joins: Celeo (~znc-admin@user/celeo)
[09:22:23] *** Joins: Anarkitty (~c0a801f8@user/Anarkitty)
[09:22:23] *** Joins: jazzy (~jaziz@user/jaziz)
[09:22:23] *** Joins: mossman93 (~quassel@user/mossman93)
[09:22:23] *** Joins: Betal (~Betal@user/betal)
[09:22:23] *** Joins: Roey (~Roey@user/Roey)
[09:22:23] *** Joins: ngp (~ngp@199.180.249.183)
[09:22:23] *** Joins: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com)
[09:22:23] *** Joins: beencubed (~beencubed@209.131.238.248)
[09:22:23] *** Joins: Axy (~Axy@user/axy)
[09:22:23] *** Joins: thurs80601421053 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[09:22:23] *** Joins: pankid (~quassel@pankid.club)
[09:22:23] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[09:22:23] *** Joins: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222)
[09:22:23] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[09:22:23] *** Joins: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net)
[09:22:23] *** Joins: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com)
[09:22:23] *** Joins: zaquest (~notzaques@5.130.79.72)
[09:22:23] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[09:22:23] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[09:22:23] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[09:22:23] *** Joins: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[09:22:23] *** Joins: tomg (~tomg@user/tomg)
[09:22:23] *** Joins: Hackerpcs (~user@user/hackerpcs)
[09:22:23] *** Joins: fikran (~fikran@user/fikran)
[09:22:23] *** Joins: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[09:22:23] *** Joins: mentallyinspired (~mentallyi@h-85-24-146-18.A400.priv.bahnhof.se)
[09:22:23] *** Joins: driib2 (~driib@185.195.233.154)
[09:22:23] *** Joins: waxfire6 (~waxfire@65.119.2.240)
[09:22:23] *** Joins: delarge (~chamigo@ctm.linuxers.cl)
[09:22:23] *** Joins: uhu (~uhu@static.101.168.216.95.clients.your-server.de)
[09:22:23] *** Joins: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt)
[09:22:23] *** Joins: {HD} (~{HD}@gateway/vpn/pia/hd/x-06969157)
[09:22:23] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[09:22:23] *** Joins: Kanjizai (~kanjizai@cpe-107-185-193-171.socal.res.rr.com)
[09:22:23] *** Joins: NovaXrine (~NovaXrine@zen.novaxrine.com)
[09:22:23] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[09:22:23] *** Joins: ubert (~Thunderbi@p548c8cd6.dip0.t-ipconnect.de)
[09:22:23] *** Joins: wolfshappen (~waff@irc.furworks.de)
[09:22:23] *** Joins: Affliction (affliction@idlerpg/player/affliction)
[09:22:23] *** Joins: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net)
[09:22:23] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[09:22:23] *** Joins: suffer (znc@mutant.penguin.fyi)
[09:22:23] *** Joins: somlis (~somlis@user/somlis)
[09:22:23] *** Joins: zamanf (~dev@user/zamanf)
[09:22:23] *** Joins: jug (~jug@user/jug)
[09:22:23] *** Joins: fxhp (~fxhp@d-206-53-88-50.ct.cpe.atlanticbb.net)
[09:22:23] *** Joins: malwar3hun73r (~malwar3hu@134.122.29.124)
[09:22:23] *** Joins: beanzilla (~beanzilla@user/beanzilla)
[09:22:23] *** Joins: notepad7 (~notepad@129.159.46.243)
[09:22:23] *** Joins: chives (~chives@64.130.100.177)
[09:22:23] *** Joins: KevinX (~KevinX@user/KevinX)
[09:22:23] *** Joins: nepeat (~nepeat@79.110.170.60)
[09:22:23] *** Joins: victori (~victori@cpe-76-89-139-69.socal.res.rr.com)
[09:22:23] *** Joins: millido (~millido@84.210.150.128)
[09:22:23] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[09:22:23] *** Joins: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net)
[09:22:23] *** Joins: Bluefoxicy (~Bluefoxic@c-73-132-244-30.hsd1.md.comcast.net)
[09:22:23] *** Joins: RiFo (~RiFo@user/rifo)
[09:22:23] *** Joins: gurki (~gurki@user/gurki)
[09:22:23] *** Joins: lastmikoi (~lastmikoi@vm-01.lastmikoi.net)
[09:22:23] *** Joins: adamchainz (~adamj@51.15.34.126)
[09:22:23] *** Joins: lyr (~lyr@user/lyr)
[09:22:23] *** Joins: yaraju (~yaraju@user/yaraju)
[09:22:23] *** Joins: Nei (~ailin@openSUSE/member/ailin-nemui)
[09:22:23] *** Joins: nickodd (~nickodd@user/nickodd)
[09:22:23] *** Joins: han-` (~han`@user/han-/x-0887595)
[09:22:23] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[09:22:23] *** Joins: lantech19446 (~lantech19@144.202.10.138)
[09:22:23] *** Joins: ldericher (~LDer@pantalaimon.yavook.de)
[09:22:23] *** Joins: Dantali0n (~Dantali0n@251-228-138-45.connected.by.freedominter.net)
[09:22:23] *** Joins: ntdll_ (~ntdll@shion.saiban.me)
[09:22:23] *** Joins: achilleas (~ach@user/achilleas)
[09:22:23] *** Joins: streety (~streety@li761-24.members.linode.com)
[09:22:23] *** Joins: peanuter_ (~peanuter@static.190.220.201.138.clients.your-server.de)
[09:22:23] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[09:22:23] *** Joins: NOTevil (~notevil@user/notevil)
[09:22:23] *** Joins: kolcon (~kolcon@v.kolouch.org)
[09:22:23] *** Joins: hrm (~hrm@nimbus.harmtemolder.nl)
[09:22:23] *** Joins: dlam (~dlam@dlam.me)
[09:22:23] *** Joins: meejah (~meejah@rutas.meejah.ca)
[09:22:23] *** Joins: Helle (~helle@45.83.235.185)
[09:22:23] *** Joins: aoei (~aoei@nethackscoreboard/aoei)
[09:22:23] *** Joins: n1000 (~n1000@user/n1000)
[09:22:23] *** Joins: nigelb (~nigel@zeus.nigelb.me)
[09:22:23] *** Joins: simplicity (~yti@user/simplicity)
[09:22:23] *** Joins: dminuoso (~dminuoso@user/dminuoso)
[09:22:23] *** Joins: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de)
[09:22:23] *** Joins: pr3d4t0r (~zhenya01@user/pr3d4t0r)
[09:22:23] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[09:22:23] *** Joins: Melon_Bread (~Melon_Bre@li958-238.members.linode.com)
[09:22:23] *** Joins: queue- (~nerd@user/queue/x-7267619)
[09:22:23] *** Joins: mage (~julien@orval.bbpf.belspo.be)
[09:22:23] *** Joins: cryocaustik7 (~cryocaust@user/cryocaustik)
[09:22:23] *** Joins: Neopolitan (~tn5421@45.76.61.24)
[09:22:23] *** Joins: Tomassi-1 (~Tomassi-1@ec2-16-170-233-250.eu-north-1.compute.amazonaws.com)
[09:22:23] *** Joins: coc0nut (~coc0nut@user/coc0nut)
[09:22:23] *** Joins: Forkk (~forkk@li926-228.members.linode.com)
[09:22:23] *** Joins: arooni (~arooni@li1062-244.members.linode.com)
[09:22:23] *** Joins: swistak (~swistak@185.21.216.141)
[09:22:23] *** Joins: Pici (~bnrubin@li1014-36.members.linode.com)
[09:22:23] *** Joins: Mogget (~Mogget@vogon02.moshwire.com)
[09:22:23] *** Joins: crunchy_david (~david@pgguru.net)
[09:22:23] *** Joins: georgeisbot (~georgeisb@8.12.22.9)
[09:22:23] *** Joins: libussa (~libussa@libussa.net)
[09:22:23] *** Joins: WayToDoor (~WayToDoor@user/waytodoor)
[09:22:23] *** Joins: w0rp (~w0rp@w0rp.com)
[09:22:23] *** Joins: sleepingforest (~sleepingf@user/sleepingforest)
[09:22:23] *** Joins: synic (~squish@li74-118.members.linode.com)
[09:22:23] *** Joins: tinystoat (~squeek@user/tinystoat)
[09:22:23] *** Joins: koopman (sid466269@ilkley.irccloud.com)
[09:22:23] *** Joins: angular_mike_ (sid45533@ilkley.irccloud.com)
[09:22:23] *** Joins: MootPoot (uid444585@ilkley.irccloud.com)
[09:22:23] *** Joins: kurfen_ (~kurfen@213.152.188.7)
[09:22:23] *** Joins: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald)
[09:22:23] *** Joins: Forty-Bot (~kvirc@pool-108-18-137-133.washdc.fios.verizon.net)
[09:22:23] *** Joins: overrider (~overrider@user/overrider)
[09:22:23] *** Joins: teroshan (~teroshan@static.28.181.130.94.clients.your-server.de)
[09:22:23] *** Joins: Phineas (~Phineas@user/Phineas)
[09:22:23] *** Joins: ecool (~ecool@ecool.dev)
[09:22:23] *** Joins: s1b1 (~s1b1@user/s1b1)
[09:22:23] *** Joins: odrling (~odrling@korone.aidoru.agency)
[09:22:23] *** Joins: Phlyniii (~alex@84-115-52-62.cable.dynamic.surfer.at)
[09:22:23] *** Joins: LogicAside (~LogicAsid@user/logicaside)
[09:22:23] *** Joins: Ingvix (~Ingvix@user/ingvix)
[09:22:23] *** Joins: mrec (~markus@sundtek.de)
[09:22:23] *** Joins: asix (~Anders@user/asix)
[09:22:23] *** Joins: moose (~moose@user/moose)
[09:22:23] *** Joins: yac (~user@user/yac)
[09:22:23] *** Joins: waveform (~quassel@waveform.plus.com)
[09:22:23] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[09:22:23] *** Joins: civillian (~nick@118.211.117.130)
[09:22:24] *** Joins: d1rewolf (sid312924@id-312924.helmsley.irccloud.com)
[09:22:25] *** Joins: bjs (sid190364@user/bjs)
[09:22:25] *** Joins: ThothCastel (sid78195@2a03:5180:f::1:3173)
[09:22:44] *** Joins: eichin (sid27120@2a03:5180:f::69f0)
[09:23:04] <duuude> AttributeError: module 'selenium' has no attribute 'webdriver'
[09:23:12] <duuude> why?
[09:23:18] <duuude> it is in the help page
[09:23:43] <Jonno_FTW> duuude: got the latest installed? you might need to do a pip install
[09:23:51] *** Quits: Viewday11 (~Viewday@user/viewday) (Max SendQ exceeded)
[09:24:26] <duuude> Jonno_FTW: why should it be non-existent in non-latest still?
[09:24:33] *** Joins: Viewday11 (~Viewday@user/viewday)
[09:24:44] <Jonno_FTW> you might need to install some system packages
[09:25:03] *** Quits: w1kl4s (~w1kl4s@user/w1kl4s) (*.net *.split)
[09:25:03] *** Quits: quesker (~idnet@mail.89vx.net) (*.net *.split)
[09:25:03] *** Quits: MrBurns (~japa@ec2-13-48-124-121.eu-north-1.compute.amazonaws.com) (*.net *.split)
[09:25:03] *** Quits: mattmcc (~matt@li807-33.members.linode.com) (*.net *.split)
[09:25:03] *** Quits: adium (adium@user/adium) (*.net *.split)
[09:25:03] *** Quits: manuels (~manuel@80.211.205.88) (*.net *.split)
[09:25:03] *** Quits: sunyibo (~dorsch@2a04:52c0:101:443::) (*.net *.split)
[09:25:03] *** Quits: kgz (~kragniz@nyaa.kragniz.eu) (*.net *.split)
[09:25:03] *** Quits: Wooble (~Wooble@user/Wooble) (*.net *.split)
[09:25:03] *** Quits: anorthall (~anorthall@user/anorthall) (*.net *.split)
[09:25:03] *** Quits: voldial (~user@user/voldial) (*.net *.split)
[09:25:10] *** Joins: mattmcc (matt@2600:3c00::f03c:91ff:fe89:c2e8)
[09:25:18] *** Joins: sunyibo (~dorsch@2a04:52c0:101:443::)
[09:25:19] *** Joins: MrBurns (~japa@ec2-13-48-124-121.eu-north-1.compute.amazonaws.com)
[09:25:21] *** Joins: voldial (~user@195.179.201.175)
[09:25:23] *** Joins: manuels (~manuel@80.211.205.88)
[09:25:24] *** Joins: quesker (idnet@2600:3c01::f03c:91ff:feac:4ce2)
[09:25:27] *** Joins: anorthall (~anorthall@user/anorthall)
[09:25:28] *** Joins: Wooble (~Wooble@user/Wooble)
[09:25:43] *** Quits: reticuli (~reticuli@user/reticuli) (Ping timeout: 256 seconds)
[09:25:54] *** Quits: bluedust (~bluedust@59.89.210.247) (Ping timeout: 272 seconds)
[09:25:56] *** Joins: kgz (~kragniz@nyaa.kragniz.eu)
[09:25:57] *** Quits: Zweimer (~Zweimer@2a02:908:d20:26e0:3591:c30e:5084:50f8) (Ping timeout: 256 seconds)
[09:26:12] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Ping timeout: 256 seconds)
[09:26:30] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[09:27:18] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[09:27:29] *** Joins: adium (adium@user/adium)
[09:27:55] *** Joins: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net)
[09:28:19] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[09:28:26] *** Quits: filename (~kilitary@185.193.143.131) (Ping timeout: 272 seconds)
[09:28:27] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[09:28:34] *** Joins: w1kl4s (~w1kl4s@user/w1kl4s)
[09:28:36] *** Joins: kanin (~kanin@112.41.64.39)
[09:28:58] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (*.net *.split)
[09:28:58] *** Quits: mickey8 (~user@user/mickey) (*.net *.split)
[09:28:58] *** Quits: de-facto (~de-facto@user/de-facto) (*.net *.split)
[09:28:58] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (*.net *.split)
[09:28:58] *** Quits: califax (~califax@user/califx) (*.net *.split)
[09:28:58] *** Quits: nunggu (~q@user/nunggu) (*.net *.split)
[09:28:58] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (*.net *.split)
[09:28:58] *** Quits: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182) (*.net *.split)
[09:28:58] *** Quits: spithash (~spithash@user/spithash) (*.net *.split)
[09:28:58] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (*.net *.split)
[09:28:58] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (*.net *.split)
[09:28:58] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (*.net *.split)
[09:28:58] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (*.net *.split)
[09:28:58] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (*.net *.split)
[09:28:58] *** Quits: domicron (~domicron@gateway/tor-sasl/domicron) (*.net *.split)
[09:28:58] *** Quits: naranja (~orange@user/orangeboxcutter) (*.net *.split)
[09:28:58] *** Quits: bindu (~bindu@user/bindu) (*.net *.split)
[09:28:58] *** Quits: vaio (~gary@user/ghost) (*.net *.split)
[09:28:58] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (*.net *.split)
[09:28:58] *** Quits: CombatVet (~c4@user/combatvet) (*.net *.split)
[09:28:58] *** Quits: noteness (~noteness@user/noteness) (*.net *.split)
[09:28:58] *** Quits: kevr (~kevr@user/kevr) (*.net *.split)
[09:28:58] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (*.net *.split)
[09:28:58] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (*.net *.split)
[09:28:58] *** Quits: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr) (*.net *.split)
[09:29:15] <duuude> Jonno_FTW: I did `pip install selenium` and it is still not there :(((
[09:29:51] <Jonno_FTW> duuude: pip packages != system packages. Do you have firefox installed?
[09:30:18] *** Joins: de-facto (~de-facto@user/de-facto)
[09:30:18] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[09:30:19] *** Joins: noteness (~noteness@user/noteness)
[09:30:19] *** Joins: CombatVet (~c4@user/combatvet)
[09:30:19] *** Joins: califax (~califax@user/califx)
[09:30:20] *** Joins: bindu (~bindu@user/bindu)
[09:30:21] *** Joins: kevr (~kevr@user/kevr)
[09:30:21] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[09:30:21] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[09:30:23] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[09:30:25] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[09:30:26] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[09:30:29] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[09:30:32] *** Joins: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr)
[09:30:32] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[09:30:33] *** Joins: vaio (~gary@user/ghost)
[09:30:39] *** Joins: mickey8 (~user@user/mickey)
[09:30:39] *** Joins: nunggu (~q@user/nunggu)
[09:30:48] *** Joins: naranja (~orange@user/orangeboxcutter)
[09:30:49] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[09:30:56] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[09:30:59] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[09:31:04] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[09:31:05] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[09:31:19] <Jonno_FTW> also make sure your script isn't called 'selenium.py'
[09:31:23] *** Quits: dtg01100 (~dtg01100@199.21.141.37) (Quit: Leaving)
[09:33:13] *** Joins: dtg01100 (~dtg01100@199.21.141.37)
[09:34:13] *** Joins: ice9 (~ice9@user/ice9)
[09:34:16] *** Joins: spithash (~spithash@user/spithash)
[09:34:19] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:34:25] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[09:35:01] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[09:35:10] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[09:37:52] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 250 seconds)
[09:38:18] *** Quits: berong91 (~noob4ever@75.154.235.153) (Remote host closed the connection)
[09:38:38] *** Quits: portalrat (~portalrat@user/portalrat) (Remote host closed the connection)
[09:38:54] *** Joins: bluedust (~bluedust@59.89.210.247)
[09:39:03] *** Joins: portalrat (~portalrat@user/portalrat)
[09:39:12] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[09:39:47] *** Quits: Zeturic (~Orimendix@50-25-77-41.krmtcmta02.res.dyn.suddenlink.net) (Quit: Leaving)
[09:41:14] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:43:00] *** Quits: bluedust_ (~bluedust@86.106.136.218) (Ping timeout: 272 seconds)
[09:43:28] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:43:50] *** Joins: jmd (~user@de.cellform.com)
[09:44:40] *** Quits: HaMsTeRs (~Thunderbi@210.3.213.4) (Quit: HaMsTeRs)
[09:46:10] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[09:47:12] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[09:47:22] *** Joins: c4017w_ (~c4017@209.52.68.8)
[09:49:51] <duuude> Jonno_FTW: yeah
[09:50:23] <duuude> Jonno_FTW: no 'selenium.py'
[09:50:51] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[09:51:25] <duuude> I originally installed it from apt, then removed it and installed it from pip and the problem persists
[09:51:52] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 272 seconds)
[09:51:56] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[09:53:17] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[09:54:30] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[09:54:48] *** Joins: jmd (~user@de.cellform.com)
[09:55:11] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[09:55:37] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[09:57:20] *** Joins: duuude (~user@user/duuude)
[09:57:41] *** Quits: tykling (~tykling@irc.tyknet.dk) (Ping timeout: 256 seconds)
[09:58:31] *** Quits: savolla (~quassel@84.44.28.28) (Ping timeout: 256 seconds)
[09:59:07] *** Joins: OPK (~OPK@user/opk)
[10:00:46] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[10:03:02] *** Quits: kanin (~kanin@112.41.64.39) (Ping timeout: 256 seconds)
[10:04:18] *** Joins: Viewday112 (~Viewday@user/viewday)
[10:06:07] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[10:06:08] *** Viewday112 is now known as Viewday11
[10:14:09] *** Joins: fef (~thedawn@user/thedawn)
[10:14:33] *** Joins: rhombus (~rhombus@ip5b408ee5.dynamic.kabel-deutschland.de)
[10:14:43] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[10:15:04] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[10:15:45] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:16:04] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[10:17:10] *** Quits: duuude (~user@user/duuude) (Remote host closed the connection)
[10:17:29] *** Joins: _blackeitus (~blackleit@189.195.195.100)
[10:17:37] *** Joins: duuude (~user@user/duuude)
[10:17:39] <Jonno_FTW> check how it's being imported
[10:20:22] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 272 seconds)
[10:20:27] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[10:20:36] *** Quits: blackleitus (~blackleit@189.195.195.100) (Ping timeout: 256 seconds)
[10:20:55] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:21:59] <jinsun> duuude: selenium.webdriver is a submodule of selenium, make sure you import that and not just selenium
[10:26:10] *** Quits: bloody (~bloody@user/bloody) (Quit: okluvyabubye)
[10:26:57] *** Quits: mrkajetanp (~mrkajetan@88.98.245.28) (Ping timeout: 240 seconds)
[10:28:12] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[10:28:44] *** Joins: Origin (~ryan@d-69-161-70-214.nh.cpe.atlanticbb.net)
[10:30:02] *** Joins: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net)
[10:31:47] *** Joins: upsala (~zcb@185.213.155.252)
[10:32:30] *** Joins: parv (~quass@user/parv)
[10:32:43] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[10:32:58] *** Lando-SpaceIzzle is now known as Lando-SpacePimp
[10:34:46] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[10:34:56] *** Quits: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net) (Ping timeout: 272 seconds)
[10:35:15] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:b6a8:844d:3aab:dcba) (Ping timeout: 250 seconds)
[10:35:30] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[10:35:47] *** Joins: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net)
[10:36:40] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[10:36:50] *** Quits: duuude (~user@user/duuude) (Ping timeout: 272 seconds)
[10:38:58] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[10:39:17] *** Quits: Origin (~ryan@d-69-161-70-214.nh.cpe.atlanticbb.net) (Quit: Leaving)
[10:40:05] *** Joins: the_lanetly_052_ (~the_lanet@194.135.153.220)
[10:41:13] *** Quits: dtux (~dtux@2601:646:8f00:3f2:1a1f:46b2:5516:9cd2) (Quit: dtux)
[10:41:23] *** Joins: mrwick (~mrwick@user/mrwick)
[10:44:25] *** Joins: someuser (~user@197.54.81.3)
[10:44:57] *** Joins: Ergo^ (~ergo@91.238.59.144)
[10:45:27] *** Joins: Nahra (~user@static.161.95.99.88.clients.your-server.de)
[10:45:54] *** Quits: portalrat (~portalrat@user/portalrat) (Ping timeout: 250 seconds)
[10:47:20] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:3499:7cdc:6a29:bdb1)
[10:47:24] *** Quits: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net) (Ping timeout: 252 seconds)
[10:47:53] *** Joins: c4017w__ (~c4017@209.52.68.8)
[10:47:53] *** Joins: portalrat (~portalrat@user/portalrat)
[10:50:46] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[10:51:25] *** Quits: portalrat (~portalrat@user/portalrat) (Client Quit)
[10:51:31] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[10:52:48] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:55:31] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[10:56:04] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[10:57:04] *** Joins: mexen (uid495612@user/mexen)
[10:58:23] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[10:59:47] *** Joins: arinov_ (~arinov@213.194.126.155)
[11:00:29] *** Joins: JanC_ (~janc@user/janc)
[11:00:37] *** Quits: JanC (~janc@user/janc) (Killed (lead.libera.chat (Nickname regained by services)))
[11:00:37] *** JanC_ is now known as JanC
[11:01:01] *** Quits: bluedust (~bluedust@59.89.210.247) (Remote host closed the connection)
[11:01:02] *** Quits: rhombus (~rhombus@ip5b408ee5.dynamic.kabel-deutschland.de) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[11:01:17] *** Quits: kickingvegas (~cchoi@c-69-181-182-237.hsd1.ca.comcast.net) (Quit: leaving)
[11:01:32] *** Quits: envex (~envex@cpe-173-91-189-33.neo.res.rr.com) (Ping timeout: 272 seconds)
[11:01:46] *** Joins: bluedust (~bluedust@103.161.144.138)
[11:01:47] *** Joins: kanin (~kanin@112.41.64.39)
[11:02:44] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[11:03:22] *** Quits: newpy (~newpy@2601:280:4381:1390:b191:bbaf:11f3:3a48) (Quit: Leaving)
[11:03:48] *** Quits: the_lanetly_052_ (~the_lanet@194.135.153.220) (Ping timeout: 240 seconds)
[11:03:59] *** Joins: Nutcrawler (~sergio@217-180-232-30.sycmilaa.metronetinc.net)
[11:04:04] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 272 seconds)
[11:06:45] *** Joins: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de)
[11:08:25] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 250 seconds)
[11:09:05] *** Joins: gusto (~Augustus@109.255.100.54)
[11:09:07] *** Joins: rendar (~rendar@user/rendar)
[11:10:30] *** Joins: txtsd (~txtsd@user/txtsd)
[11:11:05] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:880:4bf7:a9e1:bbb3)
[11:12:59] *** Joins: karlnashville (~karl@2601:482:4280:4cf0:7983:b32b:6a05:bde5)
[11:13:32] *** Joins: kosh (~kosh@user/kosh)
[11:13:37] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[11:15:54] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[11:18:24] *** Quits: l4yer (~l4yer@2001:ac8:31:8900:1012:e7e1:6127:52de) (Ping timeout: 250 seconds)
[11:19:14] *** Joins: vsantana (~Thunderbi@170.231.140.234)
[11:19:34] *** Joins: luigibu (~luigi@93.176.155.54)
[11:20:02] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[11:20:11] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[11:20:40] *** Joins: palasso (~palasso@user/palasso)
[11:21:05] *** Joins: kingfightboy (~kingfight@218.23.109.195)
[11:21:10] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 272 seconds)
[11:21:30] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[11:21:50] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[11:22:03] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[11:22:10] *** Joins: supakeen (~user@python/site-packages/supakeen)
[11:22:56] *** Quits: KevinX (~KevinX@user/KevinX) (Ping timeout: 256 seconds)
[11:25:27] *** Joins: magga (magga@ti0036a400-3577.bb.online.no)
[11:25:31] *** Joins: ExeciN (~ExeciN@user/nicexe)
[11:25:52] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[11:28:22] *** Joins: kaiseisei1 (~Thunderbi@183.184.95.155)
[11:29:44] *** Quits: kaiseisei (~Thunderbi@171.116.215.250) (Ping timeout: 256 seconds)
[11:29:45] *** kaiseisei1 is now known as kaiseisei
[11:29:50] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[11:30:37] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[11:30:59] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:31:19] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[11:33:50] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[11:33:53] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Client Quit)
[11:34:13] *** Quits: txtsd (~txtsd@user/txtsd) (Quit: WeeChat 3.4)
[11:34:45] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[11:35:07] *** Joins: chowmeined (~chowmeine@user/chowmeined)
[11:36:51] *** Quits: Guest19 (~Guest19@2601:647:5280:2a50:287d:d59a:8ac0:f02e) (Ping timeout: 256 seconds)
[11:38:01] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[11:40:12] *** Joins: frost (~frost@user/frost)
[11:43:34] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[11:43:39] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[11:43:58] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 272 seconds)
[11:44:18] *** Quits: auk (auk@gateway/vpn/protonvpn/auk) (Quit: Leaving)
[11:45:21] *** Joins: KevinX (~KevinX@user/KevinX)
[11:46:29] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Client Quit)
[11:47:21] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[11:47:29] *** Quits: dbristow_ (~dbristow@user/dbristow) (Read error: Connection reset by peer)
[11:47:33] *** Parts: ntome (~ntome@user/ntome) (WeeChat 3.0.1)
[11:47:41] *** Joins: ice9 (~ice9@user/ice9)
[11:48:21] *** Joins: c4017w_ (~c4017@209.52.68.8)
[11:50:16] *** Joins: dbristow (~dbristow@user/dbristow)
[11:51:09] *** Joins: the_lanetly_052_ (~the_lanet@185.30.89.52)
[11:51:45] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[11:53:24] *** Quits: vsantana (~Thunderbi@170.231.140.234) (Ping timeout: 252 seconds)
[11:54:17] *** Quits: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[11:56:29] *** Joins: andreasbuhr (~quassel@p549dbd68.dip0.t-ipconnect.de)
[11:56:30] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Read error: Connection reset by peer)
[11:56:44] *** Joins: nomic (~nomic@185.192.69.51)
[11:57:02] *** Quits: litharge (litharge@libera/bot/litharge) (Quit: upgrade)
[11:58:33] *** Joins: litharge (litharge@libera/bot/litharge)
[11:58:41] *** ChanServ sets mode: +o litharge
[11:59:29] *** Joins: chele (~chele@user/chele)
[11:59:55] *** Joins: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52)
[12:00:25] *** Joins: cosimone (~user@93-44-187-99.ip98.fastwebnet.it)
[12:00:46] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:02:27] *** Quits: p-i-_ (~Ohmu@mx-ll-183.89.27-225.dynamic.3bb.co.th) (Remote host closed the connection)
[12:03:06] *** Joins: p-i- (~Ohmu@mx-ll-183.89.27-225.dynamic.3bb.co.th)
[12:04:03] *** Quits: led_belly (~led_belly@37.120.197.46) (Ping timeout: 256 seconds)
[12:04:09] *** Joins: Viewday119 (~Viewday@user/viewday)
[12:04:48] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:c97:d6c8:9730:74f6)
[12:04:52] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[12:04:52] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[12:05:00] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[12:05:26] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[12:05:35] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[12:05:35] *** Viewday119 is now known as Viewday11
[12:08:36] *** Joins: tristan_ (~tristan@223.62.163.232)
[12:10:47] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:11:17] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[12:11:37] *** Quits: cosimone (~user@93-44-187-99.ip98.fastwebnet.it) (Remote host closed the connection)
[12:11:51] *** Joins: kts (~kts@103.73.237.0)
[12:12:59] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:f54d:5f11:5f50:e5bc) (Ping timeout: 250 seconds)
[12:13:05] *** Joins: led_belly (~led_belly@37.120.197.45)
[12:13:41] *** Quits: dtg01100 (~dtg01100@199.21.141.37) (Read error: Connection reset by peer)
[12:14:18] *** Quits: frost (~frost@user/frost) (Ping timeout: 252 seconds)
[12:14:20] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[12:14:22] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[12:14:40] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[12:15:00] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[12:15:53] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[12:16:49] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[12:22:21] *** Joins: dme86 (~dan@user/dan86)
[12:23:06] *** Quits: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de) (Ping timeout: 252 seconds)
[12:23:37] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[12:25:03] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[12:25:11] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[12:25:24] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[12:26:10] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[12:26:19] *** Joins: kts_ (~kts@103.73.237.22)
[12:27:02] *** Quits: kts (~kts@103.73.237.0) (Ping timeout: 272 seconds)
[12:28:26] *** Joins: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net)
[12:29:17] *** Joins: Atque (~Atque@user/atque)
[12:29:43] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Quit: WeeChat 2.8)
[12:30:27] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[12:30:29] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[12:31:36] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[12:35:42] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[12:36:13] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 240 seconds)
[12:36:20] *** Quits: kts_ (~kts@103.73.237.22) (Quit: Konversation terminated!)
[12:36:32] *** Joins: shad (~shad@user/shad)
[12:39:13] *** Quits: kaiseisei (~Thunderbi@183.184.95.155) (Quit: kaiseisei)
[12:39:31] *** Joins: kaiseisei (~Thunderbi@183.184.95.155)
[12:40:04] *** Joins: frost (~frost@user/frost)
[12:40:34] *** Quits: kaiseisei (~Thunderbi@183.184.95.155) (Client Quit)
[12:40:48] *** Joins: kaiseisei (~Thunderbi@183.184.95.155)
[12:43:48] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[12:44:38] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[12:45:05] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Client Quit)
[12:45:43] *** Joins: SallyAhaj_ (~SallyAhaj@user/sallyahaj)
[12:45:47] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:45:48] *** Joins: vsantana (~Thunderbi@170.231.140.232)
[12:45:53] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[12:46:36] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[12:47:39] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Ping timeout: 250 seconds)
[12:47:56] *** Quits: tristan_ (~tristan@223.62.163.232) (Ping timeout: 272 seconds)
[12:48:11] *** Quits: andreasbuhr (~quassel@p549dbd68.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[12:48:53] *** Joins: c4017w__ (~c4017@209.52.68.8)
[12:48:54] *** Joins: kts (~kts@103.73.237.22)
[12:49:24] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:51:09] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[12:52:15] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[12:52:44] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[12:52:45] *** Quits: KevinX (~KevinX@user/KevinX) (Read error: Connection reset by peer)
[12:52:51] *** Quits: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de) (Remote host closed the connection)
[12:53:03] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[12:53:46] *** Joins: KevinX (~KevinX@user/KevinX)
[12:53:52] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[12:54:20] *** Joins: kts_ (~kts@103.73.237.217)
[12:54:21] *** Quits: chronon (~chronon@user/chronon) (Quit: leaving)
[12:54:38] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[12:55:32] *** Quits: kts (~kts@103.73.237.22) (Ping timeout: 272 seconds)
[12:57:28] *** Joins: purple_cthulhu (~rax@2.186.248.44)
[12:58:36] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[12:58:47] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[12:58:47] *** Quits: kts_ (~kts@103.73.237.217) (Client Quit)
[12:58:57] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[12:59:06] *** Joins: nunggu_ (~q@user/nunggu)
[12:59:30] *** Quits: nomic (~nomic@185.192.69.51) (Quit: Leaving)
[12:59:48] *** Joins: nomic (~nomic@185.192.69.51)
[13:00:15] *** Quits: nunggu (~q@user/nunggu) (Ping timeout: 240 seconds)
[13:00:15] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 240 seconds)
[13:00:55] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 240 seconds)
[13:01:14] *** Joins: de-facto (~de-facto@user/de-facto)
[13:01:35] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:02:35] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[13:02:36] *** Joins: kts (~kts@103.73.237.217)
[13:04:18] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:05:03] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:05:48] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 240 seconds)
[13:06:02] *** Joins: chronon (~chronon@user/chronon)
[13:06:18] *** Quits: frost (~frost@user/frost) (Ping timeout: 272 seconds)
[13:06:32] *** Joins: alius (~alius@2001:861:4444:49c0:d4c1:b0ac:a0ba:10e2)
[13:07:45] *** Joins: mrkajetanp (~mrkajetan@88.98.245.28)
[13:08:03] *** Joins: andreasbuhr (~quassel@p549dbd68.dip0.t-ipconnect.de)
[13:08:09] *** Joins: NealRame (~a@114.129.191.99)
[13:08:10] *** Quits: andreasbuhr (~quassel@p549dbd68.dip0.t-ipconnect.de) (Client Quit)
[13:08:14] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[13:08:46] *** Joins: duuude (~user@user/duuude)
[13:09:53] <pagios> hi, i would like to copy a file to a user's home directory , currently doing statically shutil.copy("C:\\....
[13:10:05] <pagios> how can i point to a var that points to the user homedir
[13:10:06] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[13:10:30] *** Joins: paul424 (~tom@ip-5-172-238-58.multi.internet.cyfrowypolsat.pl)
[13:11:20] *** Quits: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net) (Quit: Leaving)
[13:12:24] <jinsun> pagios: https://docs.python.org/3/library/pathlib.html#pathlib.Path.home
[13:13:16] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[13:13:23] *** Quits: bluedust (~bluedust@103.161.144.138) (Remote host closed the connection)
[13:13:56] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:14:17] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[13:15:08] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[13:15:48] *** Quits: duuude (~user@user/duuude) (Ping timeout: 272 seconds)
[13:19:23] *** Joins: duuude (~user@user/duuude)
[13:19:45] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[13:20:00] *** Joins: voidsync (~void@user/voidsync)
[13:20:24] *** Joins: plastico (~plastico@neomutt/plastico)
[13:20:33] *** Joins: Masklin_Gurder (~joel@h-5-150-226-94.A230.priv.bahnhof.se)
[13:21:03] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[13:22:47] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[13:23:36] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[13:24:13] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Client Quit)
[13:24:43] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[13:24:46] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[13:24:59] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[13:25:09] <jmcantrell> is there a string replacement field like "{:.1f}" but that omits the fractional part if it's 0?
[13:26:06] *** Joins: eroux (~eroux@102-65-81-186.ftth.web.africa)
[13:28:10] *** Quits: waveform (~quassel@waveform.plus.com) (Ping timeout: 256 seconds)
[13:28:17] <jmcantrell> oh, maybe 'g'?
[13:28:23] *** Joins: waveform (~quassel@waveform.plus.com)
[13:29:32] *** Joins: mcope (~matt@user/mcope)
[13:29:35] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:30:32] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:31:33] <jmcantrell> hmmmm. i don't want exp notation though
[13:34:26] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[13:34:36] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[13:35:52] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903)
[13:35:55] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903) (Client Quit)
[13:36:07] *** Quits: parv (~quass@user/parv) (Quit: parv)
[13:36:19] *** Joins: Z-cat (~Z-cat@user/z-cat)
[13:37:33] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[13:37:51] *** Quits: kts (~kts@103.73.237.217) (Quit: Konversation terminated!)
[13:38:11] <pagios> cannot import Path from ntpath
[13:38:19] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[13:38:21] *** Joins: darksun (~darksun@user/darksun)
[13:38:58] <pagios> i did from os.path import Path ; and using shitil.copy([ Path.home()+"\\test.py" ....
[13:40:10] *** Joins: kts (~kts@103.73.237.217)
[13:41:49] <pagios> ok fixed now i get something else: sutil.copy("C:\\test\\test.py",Path.home()+"\\test.py
[13:41:53] <purple_cthulhu> pagios, https://docs.python.org/3/library/os.path.html#os.path.expanduser
[13:42:02] <pagios> unsupported operatand type for +
[13:42:09] *** Joins: bluedust (~bluedust@103.161.144.138)
[13:42:22] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[13:44:15] *** Joins: walterwhip (~~www@user/walterwhip)
[13:44:19] *** Joins: stardiviner (~stardivin@39.170.214.230)
[13:44:49] <purple_cthulhu> pagios, Path.home() returns a Path object. First get the path string before doing string concatenation: str(pathlib.Path.home())
[13:46:10] *** Parts: stardiviner (~stardivin@39.170.214.230) (Using Circe, the loveliest of all IRC clients)
[13:46:49] *** Joins: Sylhouette (~johan@87.233.191.154)
[13:47:06] *** Quits: walterwhip (~~www@user/walterwhip) (Quit: Leaving)
[13:47:22] *** Joins: walterwhip (~~www@103.251.64.40)
[13:47:22] *** Quits: walterwhip (~~www@103.251.64.40) (Changing host)
[13:47:22] *** Joins: walterwhip (~~www@user/walterwhip)
[13:49:22] *** Joins: c4017w_ (~c4017@209.52.68.8)
[13:49:37] *** Quits: purple_cthulhu (~rax@2.186.248.44) (Ping timeout: 250 seconds)
[13:49:48] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[13:51:11] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[13:52:00] *** Joins: cdown (~cdown@163.114.131.1)
[13:52:12] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[13:53:10] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[13:54:00] <jinsun> or use .joinpath
[13:54:15] <jinsun> Path.home().joinpath("test.py")
[13:55:21] <deniska> Path.home() / 'test.py'
[13:55:22] *** Joins: Syzygy__ (~Syzygy@2001:871:265:1cdc:d127:a364:8ef8:7bcb)
[13:56:54] <pagios> i used str(PAth.home
[13:56:57] <pagios> thansk all
[13:57:34] *** Quits: bluedust (~bluedust@103.161.144.138) (Remote host closed the connection)
[13:57:54] *** Joins: ba (~ba@cpc1-hari17-2-0-cust27.20-2.cable.virginm.net)
[13:58:04] <jinsun> that's naive and error prone way
[13:58:32] <jinsun> shutil accepts path like objects, so better to stick with pathlib methods and use Path objects
[13:58:40] *** Joins: duuude (~user@user/duuude)
[13:58:53] *** Joins: vitali64 (~vitali64@user/vitali64)
[13:59:03] *** Quits: vitali64 (~vitali64@user/vitali64) (Client Quit)
[13:59:17] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[13:59:21] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[13:59:49] <ba> Hey folks. Could anyone recommend books on advanced Python? A friend has done all the usual beginner stuff, and been coding for a couple of years, but wants to learn more.
[13:59:59] <ba> intermediate-advance, more like.
[14:00:18] *** Joins: vitali64 (~vitali64@user/vitali64)
[14:00:23] *** Quits: vitali64 (~vitali64@user/vitali64) (Client Quit)
[14:01:06] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:01:07] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[14:01:53] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[14:02:37] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[14:03:56] *** Quits: duuude (~user@user/duuude) (Ping timeout: 272 seconds)
[14:04:04] *** Joins: Viewday116 (~Viewday@user/viewday)
[14:04:12] *** Quits: kaiseisei (~Thunderbi@183.184.95.155) (Ping timeout: 240 seconds)
[14:04:26] *** Quits: naranja (~orange@user/orangeboxcutter) (Remote host closed the connection)
[14:04:51] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 252 seconds)
[14:04:58] *** Joins: bluedust (~bluedust@103.161.144.138)
[14:05:35] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[14:05:35] *** Viewday116 is now known as Viewday11
[14:05:50] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[14:07:19] *** Quits: bluedust (~bluedust@103.161.144.138) (Remote host closed the connection)
[14:08:33] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[14:08:49] *** Joins: bluedust (~bluedust@117.222.190.30)
[14:08:51] *** Joins: ExeciN (~ExeciN@user/nicexe)
[14:08:52] *** Quits: karlnashville (~karl@2601:482:4280:4cf0:7983:b32b:6a05:bde5) (Remote host closed the connection)
[14:09:15] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 252 seconds)
[14:09:27] *** Joins: karlnashville (~karl@2601:482:4280:4cf0:1be4:d5f8:9a20:32c)
[14:10:07] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:f54d:5f11:5f50:e5bc)
[14:10:42] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[14:11:00] *** Joins: mickey8 (~user@user/mickey)
[14:11:06] *** Joins: bertieb (~bertieb@217.155.39.147)
[14:11:25] *** Quits: zmotaj (~zmotaj@user/zmotaj) (Ping timeout: 240 seconds)
[14:11:40] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[14:12:08] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[14:12:57] *** Joins: portalrat (~portalrat@user/portalrat)
[14:12:59] *** Joins: andreasbuhr (~quassel@p549dbd68.dip0.t-ipconnect.de)
[14:13:17] *** Quits: andreasbuhr (~quassel@p549dbd68.dip0.t-ipconnect.de) (Client Quit)
[14:14:17] *** Joins: zmotaj (~zmotaj@86.61.81.185)
[14:14:17] *** Quits: zmotaj (~zmotaj@86.61.81.185) (Changing host)
[14:14:17] *** Joins: zmotaj (~zmotaj@user/zmotaj)
[14:14:25] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[14:16:20] <bertieb> I thought I grokked pyenv (the manager dealie), but it seems I don't- I have 3.9.5 set as my pyenv version, python --version confirms 3.9.5; I thought pip respected this / pyenv wrapped pip as well, but for some reason, pip seems to be installing packages to a non-managed dir for 3.10... where have I gone wrong?
[14:16:31] *** Quits: bluedust (~bluedust@117.222.190.30) (Remote host closed the connection)
[14:17:01] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[14:17:37] <Repiphany> `which pip`
[14:17:49] *** Joins: bluedust (~bluedust@117.222.190.30)
[14:17:49] <bertieb> right, good thought
[14:17:57] *** Joins: Proxysna (~Proxysna@62.119.254.142)
[14:17:59] *** Joins: nomic2 (~nomic@185.217.117.82)
[14:18:22] <bertieb> I checked that and it opinted to the pyenv shim; but pip --version reports: ip 20.3.4 from /usr/lib/python3.10/site-packages/pip (python 3.10)
[14:18:30] <bertieb> s/opinted/pointed/
[14:18:46] <bertieb> (which pip: /home/bertieb/.pyenv/shims/pip)
[14:18:58] <Repiphany> Check you're initializing pyenv properly for your shell, there have been some changes somewhat recently
[14:19:09] <bertieb> ohh
[14:19:34] <bertieb> that might be it
[14:19:51] <bertieb> let me check
[14:20:48] *** Quits: nomic (~nomic@185.192.69.51) (Ping timeout: 252 seconds)
[14:21:45] <sn_fk_n> bertieb, i found i had to have "eval "$(pyenv init --path)"
[14:21:55] <sn_fk_n> in my bashrc as well as the usual pyenv init
[14:22:11] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[14:22:24] <bertieb> sn_fk_n: thanks, just checking both .bashrc and .profile and checking what the latest install instructions say
[14:22:27] *** Quits: bluedust (~bluedust@117.222.190.30) (Ping timeout: 252 seconds)
[14:22:39] <bertieb> (which is kinda like doing a tricky "spot the differences" puzzle)
[14:22:48] <sn_fk_n> yeah i had some problems with the install instruction on my machine too
[14:22:58] <sn_fk_n> it was sort of fragmented
[14:23:10] <sn_fk_n> between pyenv and pyenv virtualenv
[14:23:11] *** Joins: lavos (~molt@178-222-245-206.static.isp.telekom.rs)
[14:23:14] <bertieb> aye, it was all working fine before, but if there's been a change recently that might have upset things
[14:23:52] *** nomic2 is now known as nomic
[14:24:28] *** Joins: molten (~molt@178-222-245-206.static.isp.telekom.rs)
[14:24:35] *** Quits: molten (~molt@178-222-245-206.static.isp.telekom.rs) (Read error: Connection reset by peer)
[14:25:03] *** Joins: molten (~molt@178-222-245-206.static.isp.telekom.rs)
[14:25:35] <bertieb> I have a pyenv() definition in my .bashrc and can't remember where I got it (:
[14:25:39] *** Quits: willcl_ark (~willcl-ar@2001:470:69fc:105::1:620a) (Changing host)
[14:25:39] *** Joins: willcl_ark (~willcl-ar@user/willcl-ark/x-8282106)
[14:25:41] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:25:53] *** Quits: molten (~molt@178-222-245-206.static.isp.telekom.rs) (Read error: Connection reset by peer)
[14:26:36] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 240 seconds)
[14:26:55] *** Joins: rsx (~dummy@ppp-188-174-151-180.dynamic.mnet-online.de)
[14:27:57] *** Quits: lavos (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 252 seconds)
[14:29:10] <bertieb> aye, even pared back to what install recommends there's still oddness with pip
[14:30:02] <bertieb> pyenv reports it should be in a (user home dir) 3.9.5 environment, python --version reports 3.9.5, but pip is using 3.10 from /usr/local/
[14:30:21] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[14:30:35] <Repiphany> Maybe try manually running `pyenv rehash`
[14:30:59] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[14:31:00] *** Joins: vladoski (~vladoski@2001:b07:add:d406:f84b:bf0c:b1e4:eb1a)
[14:31:03] <bertieb> Repiphany: great suggestion! (I say that as I just finished doing that :P)
[14:31:19] <bertieb> unfortunately that also had no effect
[14:31:23] <jinsun> also use `pyenv which` to see where the shims point to
[14:31:33] <jinsun> `pyenv which python` and `pyenv which pip`
[14:31:56] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[14:32:11] *** Quits: Coniass (~quassel@2a03:4000:57:afc:5883:e3ff:fee1:8fee) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:32:15] <bertieb> jinsun: aha, that's a useful one- python point locally but pip points to the global system pip (/usr/bin)
[14:32:23] *** Joins: fef (~thedawn@user/thedawn)
[14:32:37] *** Quits: cursey_ (~cursey@user/cursey) (Quit: bye)
[14:32:41] *** Joins: damonlynch (~ngaio@static-68-235-44-25.cust.tzulo.com)
[14:32:51] <bertieb> question is now, how do I sort that so that pip also points to the local / user home dir instance
[14:33:34] <jinsun> try `type -a pip` too
[14:33:58] <jinsun> maybe the pyenv shim is there but somehow the /usr/bin is going ahead in the PATH
[14:34:01] <bertieb> ah, there isn't a local? is pip supposed to install site-packages  based on PATH ?
[14:34:19] <jinsun> which shouldn't happen if your pyenv is initialized properly
[14:34:20] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[14:35:10] <Repiphany> I'd also try completely logging out and back in rather than just restarting your terminal if you're using .profile
[14:35:12] <bertieb> I think the shim version is the one being run, but that's pointing to the system pip script in /usr/bin/
[14:35:36] <bertieb> I've re-sourced .bashrc and .profile, but yeah a relog/reboot never hurts
[14:35:41] *** Joins: Coniass (~quassel@2a03:4000:57:afc:5883:e3ff:fee1:8fee)
[14:35:54] <bertieb> (though always feels a bit like cheating)
[14:36:29] <bertieb> I'll give it a go anyway :) brb (ZNC should catch backlog)
[14:39:01] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[14:42:57] *** Quits: jochum (~quassel@user/jochum) (Ping timeout: 240 seconds)
[14:43:11] <bertieb> unfortunately no change in behaviour- pip still wants to install to a non-pyenv 3.10 dir
[14:43:45] *** Joins: jochum (~quassel@user/jochum)
[14:47:18] *** Joins: cursey (~cursey@user/cursey)
[14:47:59] *** Joins: blyat-73 (~hjgkjhgkj@46.235.97.89)
[14:48:04] <jinsun> does this also happen if you create and activate a venv?
[14:48:44] *** Joins: txtsd (~txtsd@user/txtsd)
[14:49:26] <bertieb> jinsun: I can try that; at the mo I am seeing if using the global pyenv to install pip (via get-pip) changes things
[14:49:43] <bertieb> since there's no local pip script in the venv's bin/ dir
[14:49:53] *** Joins: c4017w__ (~c4017@209.52.68.8)
[14:50:17] <bertieb> not sure how pip has bene managing to work 'correctly' (at least in terms of observable behaviour) so far without it
[14:50:25] <bertieb> s/bene/been
[14:50:29] <lesshaste> I really can't follow instructions any more :( I am trying to use github.com/google/… . The example says: >>> import sentencepiece as spm
[14:50:29] <lesshaste> >>> s = spm.SentencePieceProcessor(model_file='spm.model')
[14:50:31] <Repiphany> `python -m pip` instead of just `pip` if python points to the correct version
[14:50:36] <lesshaste> but where does it tell me what spm.model has to be??
[14:50:50] <lesshaste> https://github.com/google/sentencepiece
[14:51:08] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[14:51:14] <bertieb> unless I've just been getting lucky that local pyenv was on 3.9.5 and system pip was on 3.9.5 and that was "close enough"
[14:51:28] <bertieb> but now system pip is on 3.10 it's causing issues
[14:51:57] <bertieb> Repiphany: ah good point, I always forget about running packages as modules (pylint etc)
[14:52:08] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[14:52:16] *** Quits: blyat-73 (~hjgkjhgkj@46.235.97.89) (Client Quit)
[14:53:20] <bertieb> (re)isntalling a local pip seems to have changed things! it's now installing to a pyenv-managed dir :)
[14:53:58] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[14:54:47] <bertieb> thanks for your time and help folks :)
[14:54:54] *** Joins: Klinda (~superleag@user/klinda)
[14:55:00] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[14:55:28] <bertieb> I'll probably have some dependencies to sort out now but hopefully can figure things out from here!
[14:56:00] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[14:58:07] *** Joins: iomari891 (~iomari891@105.112.138.38)
[14:58:16] *** Quits: JimmyRustles (Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net) (Ping timeout: 256 seconds)
[14:58:34] <bertieb> yup, sorted out the original thing -- streamdeck -- which caused this rabbit-hole; thanks again :)
[14:59:31] *** Joins: Barones (~Barones@user/Barones)
[15:00:59] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[15:01:16] *** Joins: shad (~shad@user/shad)
[15:01:48] *** Joins: bitkiller (~bitkiller@user/bitkiller)
[15:02:01] *** Joins: lkthomas (~lkthomas@host81-149-79-114.in-addr.btopenworld.com)
[15:03:46] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[15:05:24] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[15:05:26] <lkthomas> folks, I am trying to make the loop continue when the subprocess.call failed by using try: and except: pass, but it still walk out from the loop and stating error
[15:06:00] <bjs> lkthomas: which loop?
[15:06:04] <bjs> did I miss some context
[15:07:21] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[15:07:25] <bjs> lkthomas: do you have some code you want us to look at?  that might be easier than trying to explain what you're doing/seeing
[15:08:26] *** Joins: drogas (~drogas@jump2.jet.uk)
[15:09:02] <lkthomas> 1 sec
[15:09:37] <jinsun> lkthomas: https://bpa.st/+python+pytb
[15:09:58] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[15:10:32] <lkthomas> https://bpa.st/XAWA
[15:10:44] <lkthomas> bjs, subprocess call is at the bottom
[15:11:01] <bjs> lkthomas: you said something about seeing an error? can you paste that as well?
[15:12:05] <lkthomas> https://bpa.st/DM5A
[15:12:15] <lkthomas> that's intentional, I want to see how it's behave when subprocess failed
[15:12:23] <bjs> lkthomas: okay well these errors aren't coming from Python,  so the try/except isn't going to do anything
[15:12:24] *** Joins: kofuyu0 (~kofuyu@user/kofuyu)
[15:12:36] <lkthomas> F! really !
[15:12:37] <lkthomas> what should I do then ?
[15:12:57] *** Quits: kofuyu (~kofuyu@user/kofuyu) (Ping timeout: 240 seconds)
[15:12:57] *** kofuyu0 is now known as kofuyu
[15:12:58] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 272 seconds)
[15:12:59] *** Quits: Masklin_Gurder (~joel@h-5-150-226-94.A230.priv.bahnhof.se) (Read error: Connection reset by peer)
[15:13:01] *** Joins: et_ (~et@user/et)
[15:13:20] <bjs> lkthomas: well the subprocess call worked just fine, rsync was ran and Python did its job correctly. So your Python loop would continue just fine
[15:13:34] <lkthomas> nope
[15:13:36] <lkthomas> it got exit out
[15:13:55] <jinsun> but that's what your except: pass was going to do right?
[15:13:55] <bjs> lkthomas: well your call()s aren't inside your loop, maybe that is the problem?
[15:14:13] *** Quits: et (~et@user/et) (Ping timeout: 268 seconds)
[15:14:13] *** et_ is now known as et
[15:14:31] <bjs> lkthomas: also call() returns the exitcode of the process, which should tell you whether rsync thinks it failed or succeeded.
[15:14:44] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[15:14:56] <lkthomas> bjs, ok should I hack the exit code and pretend it's working ?
[15:15:10] <bjs> lkthomas: what do you mean "hack the exitcode" and "pretend it's working"?
[15:15:46] <bjs> lkthomas: you can read the exitcode and then decide what you want to do based on whether rsync failed or succeeded. But the reason your loop doesn't go around again after the call()s is that your code doesn't have the call()s inside the loop at all
[15:16:08] <bjs> notice lines 57-onwards are all indented less than the other lines in the loop
[15:16:16] <lkthomas> the loop is coming from section while () ?
[15:16:29] <bjs> lkthomas: line53 is the last line in the loop.
[15:16:47] *** Quits: samuelb (~samuelber@nata01.lip.pt) (Quit: ZNC 1.8.2 - https://znc.in)
[15:17:31] *** Joins: Atque (~Atque@user/atque)
[15:17:47] *** Quits: et (~et@user/et) (Read error: Connection reset by peer)
[15:18:09] <bjs> lkthomas: yes, while is the loop
[15:18:30] <bjs> the code that's indented beneath it are "inside" the loop and its those lines that will repeat.
[15:19:04] <lkthomas> strange, after I move the code into the while loop section after line 53, it also exit the loop
[15:19:19] <bjs> lkthomas: well the fact it was running at all meant the loop had already ended
[15:19:22] <bjs> before you ever did call()
[15:20:21] *** Parts: bertieb (~bertieb@217.155.39.147) (cheers and cheerio)
[15:21:14] <bjs> lkthomas: your output only has 1 'Saved till' in it, which means the loop only went around once.
[15:21:17] *** Joins: samuelbernardo (~samuelber@nata02.lip.pt)
[15:21:29] <bjs> Then the loop ended, *then* it did the call()s.  In your original code.
[15:22:28] *** Quits: paul424 (~tom@ip-5-172-238-58.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[15:22:28] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[15:23:30] <lkthomas> ahha
[15:23:50] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[15:24:49] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:25:43] <wyre> hi guys, I guess this specification is actually for [metadata] sections in pyproject.toml or setup.cfg, ain't it?
[15:26:15] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:c97:d6c8:9730:74f6) (Ping timeout: 252 seconds)
[15:27:00] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[15:27:24] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[15:27:27] *** Joins: Masklin_Gurder (~joel@h-5-150-226-94.A230.priv.bahnhof.se)
[15:27:48] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[15:28:20] *** Joins: Pickchea (~private@user/pickchea)
[15:29:00] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[15:29:10] <lkthomas> ok all good now I think
[15:29:12] <lkthomas> thanks bjs
[15:29:14] *** Joins: dengtianhua (~dengtianh@ns3127991.ip-51-68-205.eu)
[15:30:06] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:30:40] *** Joins: MikZyth (~MikZyth@host-192-158-66-217.spbmts.ru)
[15:31:00] *** Joins: joaofukuda (~joaofukuk@2804:431:c7f4:a77a:575:562:5f94:3a18)
[15:31:44] *** Quits: karlnashville (~karl@2601:482:4280:4cf0:1be4:d5f8:9a20:32c) (Quit: Konversation terminated!)
[15:31:57] *** Joins: karlnashville (~karl@2601:482:4280:4cf0:1be4:d5f8:9a20:32c)
[15:32:32] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:32:40] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[15:33:30] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[15:33:57] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[15:34:12] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[15:34:55] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[15:35:08] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[15:35:17] *** Quits: dengtianhua (~dengtianh@ns3127991.ip-51-68-205.eu) (Remote host closed the connection)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:08] *** Joins: savolla (~quassel@84.44.28.28)
[15:36:26] *** Quits: savolla (~quassel@84.44.28.28) (Client Quit)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:38:17] *** Joins: et (~et@user/et)
[15:38:41] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[15:38:52] *** Joins: dhamla (~dp@2401:4900:1916:1020:9eb1:7ab2:f366:b79c)
[15:39:23] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[15:39:42] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[15:39:46] *** Joins: drogas (~drogas@jump2.jet.uk)
[15:40:13] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[15:41:03] <nomic> z.z.
[15:42:19] <drogas> I wanna get some coding interview practice. Are there any links to relevant questions on leetcode that would be relevant to get through instead of me mindlessly going through random ones
[15:42:30] *** Joins: dtg01100 (~dtg01100@199.21.141.37)
[15:42:42] *** Joins: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182)
[15:43:33] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[15:43:53] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[15:43:59] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[15:44:24] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[15:46:24] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[15:47:19] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[15:47:50] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[15:48:11] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[15:49:09] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[15:49:54] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:3499:7cdc:6a29:bdb1) (Ping timeout: 252 seconds)
[15:50:05] *** Joins: zeden (~zeden@user/zeden)
[15:50:22] *** Joins: c4017w_ (~c4017@209.52.68.8)
[15:50:42] *** Quits: zeden (~zeden@user/zeden) (Client Quit)
[15:50:49] *** Quits: nomic (~nomic@185.217.117.82) (Quit: Leaving)
[15:51:58] *** Quits: dhamla (~dp@2401:4900:1916:1020:9eb1:7ab2:f366:b79c) (Quit: Leaving)
[15:53:33] *** Joins: zeden (~zeden@user/zeden)
[15:53:37] *** Joins: kts_ (~kts@103.73.237.147)
[15:53:45] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[15:54:08] *** Quits: kts (~kts@103.73.237.217) (Ping timeout: 272 seconds)
[15:55:03] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[15:55:04] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:55:22] *** Joins: stwange (~j@199.218.6.51.dyn.plus.net)
[15:55:55] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[15:55:57] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[15:56:17] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[15:56:51] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[15:58:09] *** Quits: kts_ (~kts@103.73.237.147) (Ping timeout: 252 seconds)
[16:00:22] *** Joins: kts (~kts@103.73.237.155)
[16:00:40] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[16:00:49] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:157b:b0a6:78b4:a5b2)
[16:00:49] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:157b:b0a6:78b4:a5b2) (Changing host)
[16:00:49] *** Joins: skapata (~Skapata@user/skapata)
[16:01:01] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[16:01:05] *** Joins: Iamverytired (~Iamveryti@152.26.89.229)
[16:01:21] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c)
[16:03:00] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[16:04:07] *** Joins: Viewday111 (~Viewday@user/viewday)
[16:04:12] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[16:04:27] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[16:05:40] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[16:05:40] *** Viewday111 is now known as Viewday11
[16:07:35] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 240 seconds)
[16:08:03] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[16:10:39] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[16:11:18] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:11:28] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[16:13:23] *** Quits: SallyAhaj_ (~SallyAhaj@user/sallyahaj) (Read error: Connection reset by peer)
[16:13:44] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[16:14:00] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: SO LONG SUCKERS!)
[16:14:12] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:f54d:5f11:5f50:e5bc) (Ping timeout: 240 seconds)
[16:14:23] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[16:14:30] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[16:14:31] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[16:14:31] *** Joins: shad (~shad@user/shad)
[16:14:47] *** Quits: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net) (Quit: Textual IRC Client: www.textualapp.com)
[16:17:13] *** Quits: walterwhip (~~www@user/walterwhip) (Remote host closed the connection)
[16:17:44] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[16:20:48] *** Joins: fef (~thedawn@user/thedawn)
[16:21:37] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[16:23:02] *** Quits: Iamverytired (~Iamveryti@152.26.89.229) (Quit: Connection closed)
[16:23:19] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[16:25:03] *** Joins: gandaro (~gandaro@ip5b41cf21.dynamic.kabel-deutschland.de)
[16:26:01] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[16:27:24] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Ping timeout: 240 seconds)
[16:28:11] *** Quits: vsantana (~Thunderbi@170.231.140.232) (Quit: vsantana)
[16:29:00] *** Quits: kts (~kts@103.73.237.155) (Quit: Konversation terminated!)
[16:30:49] *** Joins: purple_cthulhu (~rax@37.156.240.41)
[16:33:52] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[16:33:52] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[16:33:52] *** Joins: JordiGH (~jordi@user/jordigh)
[16:34:09] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[16:34:39] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:34:42] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[16:34:56] *** Joins: peteyboy1 (~peteyboy1@95.169.226.66)
[16:34:59] *** Joins: mickey8 (~user@user/mickey)
[16:35:03] *** Joins: peteyboy_ (~peteyboy1@95.169.226.66)
[16:35:06] *** Quits: peteyboy1 (~peteyboy1@95.169.226.66) (Client Quit)
[16:35:06] *** Quits: peteyboy_ (~peteyboy1@95.169.226.66) (Remote host closed the connection)
[16:35:10] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[16:35:20] *** Joins: peteyboy1 (~peteyboy1@95.169.226.66)
[16:35:52] *** Quits: shailangsa (~shailangs@host86-186-127-164.range86-186.btcentralplus.com) ()
[16:39:09] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[16:41:46] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[16:45:34] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:359c:70e6:9c13:224e)
[16:45:46] *** Joins: iomari891 (~iomari891@105.112.138.38)
[16:46:05] *** Joins: elias117 (~elias117@user/elias117)
[16:47:30] *** Joins: dme86 (~dan@user/dan86)
[16:47:33] *** Quits: purple_cthulhu (~rax@37.156.240.41) (Quit: Leaving.)
[16:47:37] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[16:47:47] <bjs> drogas: aren't coding interviews mostly mindless exercises
[16:48:03] <bjs> so mindlessly picking random leetcode questions might be a perfect exercise :P
[16:48:15] *** Quits: BinarySavior_ (~BinarySav@josh.vet) (Remote host closed the connection)
[16:48:15] <elias117> Can I use djikstra's to find the shortest path to all nodes in a fully connected graph
[16:48:27] <supakeen> case in point
[16:48:31] <elias117> It seems to tell me the shortest path length from start node to another node
[16:48:32] *** Joins: BinarySavior (~BinarySav@idlerpg/player/BinarySavior)
[16:48:47] <elias117> but I would like to use something to visit all nodes
[16:49:04] <elias117> and tell me the shortest path length and what nodes to visit in what order
[16:49:25] <supakeen> sounds to like you want to do a breadth first search
[16:50:11] <supakeen> but isn't it always '1' in a fully connected graph?
[16:50:19] <bjs> elias117: yes you can, if you just let dijkstra's keep running rather than stopping when you reach the target
[16:50:52] *** Joins: c4017w__ (~c4017@209.52.68.8)
[16:50:57] *** Joins: msek_ (~Username@pd9fb2bd5.dip0.t-ipconnect.de)
[16:51:14] <elias117> yeah supakeen its a weighted fully connected graph. each edge has positive non zero weights
[16:51:42] <elias117> bjs can you give an example
[16:51:49] *** Joins: johnkeats7 (~johnkeats@2804:14c:32:a0cc:e4e9:c93b:c663:fc17)
[16:52:25] <bjs> elias117: well I mean, the way dijkstra's works is that you start at a 'root' node, and then cover all its neighbours caching the distance as the shortest and then you recurse over the graph over each unvisited node one by one until you reach the 'target' node
[16:53:02] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[16:53:25] <elias117> yeah i followed this video on it
[16:53:31] <elias117> and it gave me a table a values at the end
[16:53:47] <bjs> elias117: okay but if you just don't stop and you keep going until you've visited all nodes
[16:54:11] <bjs> then you get what you want
[16:54:15] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[16:54:19] <elias117> until I visited all nodes
[16:54:29] <elias117> i mean thats what I'm doing
[16:54:31] <elias117> https://www.youtube.com/watch?v=pVfj6mxhdMw
[16:54:47] <elias117> I start with two lists one for visited and one for unvisited
[16:54:48] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[16:54:55] <elias117> fuck im going to get fired
[16:55:00] *** Quits: msek_ (~Username@pd9fb2bd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[16:55:29] <bjs> elias117: this video seems to do what you want, no?  it visits all the nodes and you get back a table that works for any node
[16:55:33] <bjs> to get the shortest path back to 'A'
[16:55:48] *** Quits: karlnashville (~karl@2601:482:4280:4cf0:1be4:d5f8:9a20:32c) (Ping timeout: 240 seconds)
[16:56:04] <bjs> using Dijkstra's.
[16:56:05] <elias117> see it gives me a table
[16:56:19] <elias117> that says the shortest length from A to B is x
[16:56:26] <elias117> or A to C is y
[16:56:29] <bjs> elias117: it also gives you the previous/parent node
[16:56:54] <elias117> yeah but there is no way to make sure I visited all the nodes
[16:57:07] <bjs> elias117: I'm not following,  this video *does* visit all the nodes?
[16:57:09] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[16:57:11] <bjs> and you get a table with every node in it
[16:57:22] *** Joins: karlnashville (~karl@2601:482:4280:4cf0:5043:89e8:347:89ec)
[16:57:28] <bjs> there were 5 nodes, A-E and the table has 5 rows
[16:57:43] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:58:14] *** Joins: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net)
[16:58:34] <bjs> and that table tells you the distance of each node from 'A', and where to go if you want to go to A.
[16:58:50] <supakeen> perhaps they want 20 rows, 4 entries for each of A-E for the shortest paths to the other notes
[16:59:04] *** Joins: bluedust (~bluedust@117.222.190.30)
[16:59:06] <bjs> but that's a misunderstanding, because this 4-row table already has all that information
[16:59:36] <bjs> for example, if you want to go from A to C, then you look at C's row. It says previous was E, and E says previous was D, and D says previous was A. So the shortest path from A to C is A->D->E->C
[16:59:48] <bjs> with length 7
[17:00:02] <bjs> sorry 5-row
[17:00:58] <bjs> Dijkstra's doesn't give you the shortest path from every node to every other, but the shortest path from some origin/root node to all the others.
[17:01:07] <supakeen> i am currently not in a graphy mindset but i'll just mention that floyd-warshall is the 'normal' approach to this
[17:01:11] *** Quits: Wooble (~Wooble@user/Wooble) (Quit: WeeChat 3.2)
[17:02:59] *** Joins: JimmyRustles (~Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net)
[17:03:13] *** Joins: shailangsa (~shailangs@host86-186-127-164.range86-186.btcentralplus.com)
[17:03:28] <lkthomas> which option on open() could I use  to overwrite the file ?
[17:03:39] <supakeen> "w"
[17:03:41] <grym> lkthomas: 'w'
[17:04:12] <lkthomas> thanks
[17:05:12] *** Joins: domicron (~domicron@gateway/tor-sasl/domicron)
[17:05:36] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:06:09] *** Joins: thiras (~thiras@user/thiras)
[17:06:25] <lkthomas> TypeError: write() argument must be str, not bytes
[17:06:27] <lkthomas> what is this ...
[17:06:43] <grym> lkthomas: maybe you meant 'wb'
[17:06:52] <grym> or maybe you need to make sure you're writing what you think you are
[17:07:16] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[17:07:28] <lkthomas> that's a CSV file, does "binary" is correct format ?
[17:07:58] <grym> lkthomas: typically i write things to a csv file with the writers in the csv module; and i open the file as 'w'
[17:08:29] <lkthomas> well I don't need to process that CSV file, just download it is fine
[17:08:34] <grym> lkthomas: so the format of 'w' is right, but what you're trying to put in the file seems suspicious now
[17:08:44] *** Joins: structoha (~structoha@gateway/tor-sasl/structoha)
[17:08:47] <grym> lkthomas: oh, are you getting it from requests or something
[17:08:53] <lkthomas> correct
[17:08:56] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[17:09:05] <grym> ah. then i think it's .content.decode() you're wanting
[17:09:15] *** Joins: esther (~esther@2607:fb90:20d2:a546:17e4:1dd8:82d5:f14f)
[17:09:32] <structoha> hey everyone i have been learning python and design patterns, it seems to me i dont know how to apply these patterns, like ok am learning them but i would like to know OOP in real life, any tips how to go about this problem?
[17:09:34] *** Joins: minip (~minip@user/minip)
[17:09:56] <grym> structoha: write small tools that solve real world problems you have
[17:10:01] <jinsun> .text also exists, and it is the same as .content.decode()
[17:10:16] *** Joins: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de)
[17:10:18] <structoha> like what tools? i rewrote my bash scripts in python
[17:10:20] <grym> jinsun: oh ho! you can tell, i use .json() and rarely anything else :P
[17:10:23] <structoha> can't think of something bigger
[17:10:30] <structoha> :O
[17:10:46] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[17:10:46] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 272 seconds)
[17:11:18] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[17:11:50] <structoha> grym: Do you recommend any books or project-based learning material?
[17:12:52] <jinsun> for project ideas this is good https://nedbatchelder.com/text/kindling.html
[17:13:09] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[17:13:17] *** Quits: esther (~esther@2607:fb90:20d2:a546:17e4:1dd8:82d5:f14f) (Ping timeout: 240 seconds)
[17:13:21] <structoha> Thanks alot
[17:13:24] <structoha> cheers !
[17:13:42] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[17:14:28] *** Joins: Wooble (~Wooble@user/Wooble)
[17:15:06] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[17:15:12] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:c84:1582:c796:2258)
[17:15:42] *** Quits: johnkeats7 (~johnkeats@2804:14c:32:a0cc:e4e9:c93b:c663:fc17) (Ping timeout: 252 seconds)
[17:16:09] *** Quits: gandaro (~gandaro@ip5b41cf21.dynamic.kabel-deutschland.de) (Quit: Client closed)
[17:16:18] *** Joins: gandaro (~gandaro@ip5b41cf21.dynamic.kabel-deutschland.de)
[17:16:55] *** Joins: mickey8 (~user@user/mickey)
[17:19:21] *** Joins: glazed (~glazed@108.5.30.126)
[17:19:46] *** Joins: kreg (~kreg@iqoqi060.uibk.ac.at)
[17:21:00] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[17:21:20] *** Joins: test31415 (~test31415@185.158.0.143)
[17:21:30] <glazed> hi, i got a new macbook and am running into an issue installing django with pipenv. i didn't have this issue previously on my old laptop but i don't have access to it to compare installations unfortunately. here is the traceback when i try to pipenv install: https://bpa.st/55UA - it looks like somehow python2.7 is getting used to install things.
[17:21:31] <glazed> when i do "which pipenv" it shows under /Users/me/Library/Python/2.7/bin/pipenv - is this the problem and does anyone know how i can properly install pipenv?
[17:22:18] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[17:22:28] *** Joins: p-i-_ (~Ohmu@mx-ll-183.89.27-225.dynamic.3bb.co.th)
[17:22:49] *** Joins: FreEm1nD (~FreEm1nD@mail.guarapari.store)
[17:23:29] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:bdb1:824b:9e32:41f6)
[17:23:35] *** Joins: msek_ (~Username@pd9fb2bd5.dip0.t-ipconnect.de)
[17:24:29] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:24:45] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[17:24:53] *** Quits: Xedtr (~Xedtr@185.97.201.104) (Quit: Leaving)
[17:25:00] *** Quits: test31415 (~test31415@185.158.0.143) (Remote host closed the connection)
[17:25:18] *** Joins: antaresgades (~antaresga@ieocadiz.cd.ieo.es)
[17:25:58] *** Quits: p-i- (~Ohmu@mx-ll-183.89.27-225.dynamic.3bb.co.th) (Ping timeout: 272 seconds)
[17:26:14] *** Joins: kts (~kts@103.73.237.56)
[17:27:07] *** Quits: karlnashville (~karl@2601:482:4280:4cf0:5043:89e8:347:89ec) (Quit: Konversation terminated!)
[17:27:51] *** Joins: Barones (~Barones@user/Barones)
[17:29:00] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[17:29:30] *** Joins: jm_jj (~jmjj@mobile-user-c3a5cc-243.dhcp.inet.fi)
[17:29:38] *** Parts: jm_jj (~jmjj@mobile-user-c3a5cc-243.dhcp.inet.fi) (Leaving)
[17:32:42] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:1ad3:6f73:7a3b:18fc) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[17:32:56] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[17:33:39] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:35:44] *** Joins: tg (~tg@rockylinux/infra/tg)
[17:35:53] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[17:36:04] *** Quits: minip (~minip@user/minip) (Remote host closed the connection)
[17:38:15] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[17:38:26] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:38:48] *** Parts: gandaro (~gandaro@ip5b41cf21.dynamic.kabel-deutschland.de) ()
[17:40:16] *** Joins: tykling (~tykling@irc.tyknet.dk)
[17:42:34] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[17:43:03] *** Quits: FreEm1nD (~FreEm1nD@mail.guarapari.store) (Quit: Leaving)
[17:43:29] *** Joins: ASUS (~ASUS@user/ASUS)
[17:43:35] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[17:44:02] <glazed> ^^ for the above, in case it's helpful for anyone: i did "pip uninstall pipenv" and "brew install python". i also apparently had put the python2.7 bin dir on my path at one point so that contributed. in a new terminal, i was able to "pip3 install pipenv" and then "which pipenv" pointed to an installation under homebrew and now the django install
[17:44:02] <glazed> works
[17:44:32] <ASUS> did you know the POSIX api and the Linux API are different?
[17:44:35] *** Joins: harpia (~harpia@2804:fc:8de2:e700:f59b:322e:48e2:b259)
[17:44:40] <ASUS> why would linus do such a think
[17:44:42] <ASUS> thing
[17:45:30] *** Joins: keyehzh (~keyehzh@user/keyehzh)
[17:49:19] *** Quits: glazed (~glazed@108.5.30.126) (Quit: Client closed)
[17:49:20] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[17:49:24] *** Joins: triode (~number9@130.70.15.5)
[17:49:25] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[17:49:53] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[17:51:16] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[17:51:22] *** Joins: c4017w_ (~c4017@209.52.68.8)
[17:51:38] <triode> Hello all, I am trying to do some tensorflow from d2l.ai, but I am working on NOT using the d2l uh, library as I want to show my group each function instead of hiding them. In their file they seem to be doing something I do not understand. Specifically, I can not get the d2l.numpy(img) to work by removing d2l (e.g. I am not sure which module this points to... https://bpa.st/7S3Q
[17:51:42] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[17:51:50] *** Quits: ecdhe (~ecdhe@user/ecdhe) (Remote host closed the connection)
[17:51:56] *** Quits: ubert (~Thunderbi@p548c8cd6.dip0.t-ipconnect.de) (Quit: ubert)
[17:51:59] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[17:52:41] <triode> So I have replaced ax.imshow(d2l.numpy(img)) with ax.imshow(np(img)), but that does not work. So I think I have a python understanding issue.
[17:52:49] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[17:53:13] <triode> I do not understand this part, in my paste at bpa.st: d2l = sys.modules[__name__]
[17:54:01] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[17:55:06] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[17:55:07] <zen_coder> I have to read a config file like this: https://github.com/GENIVI/car-data-logger/blob/master/env/commonapi.ini
[17:55:18] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:55:35] <zen_coder> however, when I read it in, via configparser, I get following error:
[17:55:37] <zen_coder> configparser.DuplicateOptionError: While reading from 'etc/test.ini' [line 12]: option 'local' in section 'proxy' already exists
[17:55:54] <zen_coder> can I somehow, read it, with ignoring the error message?
[17:56:18] *** Joins: millido (~millido@84.210.150.128)
[17:57:10] <triode> zen_coder: can you check your /etc/test.ini and see if you indeed have two local options set?
[17:57:45] <zen_coder> it is this file I linked
[17:57:49] <zen_coder> just renamed it
[17:58:11] <zen_coder> so yeah it has this "local:" two times
[17:58:25] <zen_coder> not sure if this is correct, or the ini parser is jut very strict?
[17:59:46] <triode> I do not know which script is calling your file.
[18:00:08] <zen_coder> which script?
[18:00:15] <zen_coder> config = configparser.ConfigParser()
[18:00:20] <zen_coder> config.read("etc/test.ini")
[18:00:22] <triode> Ahhhh,
[18:00:22] <zen_coder> thats all I do
[18:01:18] <triode> Not sure.
[18:01:54] <jinsun> can you change the colon to some other character, like underscore or space?
[18:02:24] <jinsun> configparser allows to specify key: value instead of key=value
[18:02:34] <zen_coder> I can change it, however, I need to write it later again, with this ":"
[18:03:13] *** Joins: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it)
[18:03:38] <jinsun> so it is seeing local:... as local=...
[18:03:40] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[18:03:56] *** Joins: sajuukthanatoskh (~Sajuuktha@ip5f5bd786.dynamic.kabel-deutschland.de)
[18:04:06] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[18:04:15] *** Joins: Viewday112 (~Viewday@user/viewday)
[18:04:17] *** Joins: xheimlich (~xheimlich@179.218.1.150)
[18:04:25] <xheimlich> I'm having trouble with relative imports.
[18:05:10] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[18:05:18] *** Joins: qlixed (~qlixed@181.44.129.13)
[18:05:37] <xheimlich> https://dpaste.org/h7SW
[18:05:48] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 240 seconds)
[18:05:49] *** Viewday112 is now known as Viewday11
[18:05:53] <xheimlich> I thought I had aced this relative import stuff by now.
[18:05:56] <xheimlich> oh stupid me.
[18:06:35] <bjs> xheimlich: is "root" supposed to be a Python package you can import?
[18:07:09] <bjs> if so, it should probably have an __init__.py and you shouldn't run things directly inside it.  Most test runners (e.g. pytest) do not require tests/ to be a sub-package of the parent
[18:07:17] <jinsun> zen_coder: you can customize the configparser defaults https://docs.python.org/3/library/configparser.html#customizing-parser-behaviour
[18:07:30] *** Joins: bloody (~bloody@user/bloody)
[18:07:44] <xheimlich> not yet.
[18:07:59] <jinsun> zen_coder: delimiters is ('=', ':') by default, you can try changing it to just ('=',)
[18:08:04] <bjs> xheimlich: if it's not supposed to be importable then `from .. import` isn't going to work, since that's importing
[18:08:32] <triode> After more reading, I think I just want to chagne this d1l.ai "show images" function to not use d2l, how can I redo the line with d2l.numpy to not have it? I read this, but it is not helping: https://stackoverflow.com/questions/48435229/how-to-plot-a-list-of-image-in-loop-using-matplotlib/48435411   My original paste:https://bpa.st/7S3Q
[18:08:33] <xheimlich> I've been running "test scripts" (not really tests, just random dry runs) living in the "root dir" as follows. and now I see how I suddenly changed my approach.
[18:08:44] <xheimlich> either I used qualified names.
[18:09:01] <xheimlich> or I python -i and imported them. by qualified names. so the relative names worked.
[18:09:02] *** Joins: cdown_ (~cdown@188.214.11.14)
[18:09:02] <bjs> xheimlich: you can go `python -m tests.test_data_handling` instead of `python tests/test_data_handling.py` and then you should be able to `import data`
[18:09:17] <xheimlich> anyway, how do I move my tests to a tests directory
[18:09:23] <bjs> xheimlich: ideally you'd make a virtualenv, and "install" each importable package into the venv so you can just import things from everywhere
[18:09:34] <bjs> rather than relying on exact relative directory paths
[18:10:03] <xheimlich> I'm not entirely sure my subdirectories are all importable packages. They do  have an __init__.py
[18:10:05] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[18:10:40] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:a5f0:9fc5:2:4ed5)
[18:11:48] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 252 seconds)
[18:11:51] *** Quits: Dotz0cat (~Dotz0cat@173.186.192.244) (Read error: Connection reset by peer)
[18:11:59] *** cdown_ is now known as cdown
[18:12:07] <xheimlich> "python -m tests" gives me /home/xheimlich/koort/alec/newenv/bin/python: No module named tests.__main__; 'tests' is a package and cannot be directly executed
[18:12:16] <xheimlich> I might need to install something called tests
[18:12:36] <bjs> xheimlich: I said `python -m tests.test_data_handling`
[18:12:40] <bjs> not `python -m tests`
[18:12:50] *** Quits: shad (~shad@user/shad) (Ping timeout: 272 seconds)
[18:13:03] *** Joins: xkuru (~xkuru@user/xkuru)
[18:13:04] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:13:05] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 250 seconds)
[18:13:19] <xheimlich> Yes, I was trying to figure stuff out. Your command gives me
[18:13:21] <xheimlich> /home/xheimlich/koort/alec/newenv/bin/python: Error while finding module specification for 'tests.test_data_handling.py' (ModuleNotFoundError: No module named 'tests.test_data_handling')
[18:13:39] <bjs> xheimlich: I said `python -m tests.test_data_handling` not `python -m tests.test_data_handling.py`
[18:13:58] <zen_coder> jinsun: indeed there is a strict parsing mode. Which I can disable. However, then I will key in my section only one key
[18:14:05] <zen_coder> this is also not what I want
[18:14:24] *** Joins: shad (~shad@user/shad)
[18:14:37] <zen_coder> I just want to read everything under one section, no matter what
[18:14:53] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[18:14:58] <jinsun> zen_coder: I didn't ask you to use strict parsing, I asked to change the delimiter
[18:15:10] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[18:15:16] <xheimlich> ok
[18:15:20] *** Joins: The_Loko (~The_Loko@86.127.255.193)
[18:15:23] <xheimlich> now I get newenv/bin/python: No module named tests.test_data_handling
[18:15:33] <triode> Ok I am getting closer, but it will only show one image in the list of images. def show_images(imgs, num_rows, num_cols, titles=None, scale=1.5):
[18:15:33] <triode>     #Plot a list of images.
[18:15:33] <triode>     figsize = (num_cols * scale, num_rows * scale)
[18:15:33] <triode>     _, axes = plt.subplots(num_rows, num_cols, figsize=figsize)
[18:15:33] <triode>     axes = axes.flatten()
[18:15:33] <triode>     for i, (ax, img) in enumerate(zip(axes, imgs)):
[18:15:33] *** litharge sets mode: +q $a:triode
[18:15:52] <bjs> triode: use a pastebin if you don't want to incur the wrath of the bot
[18:15:55] *** Joins: Sir_Andrei (~andrei@r167-57-81-34.dialup.adsl.anteldata.net.uy)
[18:15:56] <Sir_Andrei> Hi
[18:15:57] <ASUS> I'm completing the AlgoExpert challenges in Python
[18:16:00] <ASUS> they are fun :)
[18:16:03] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[18:16:05] *** litharge sets mode: -q $a:triode
[18:16:08] <bjs> xheimlich: okay, where are you running this from? does tests have an __init__.py
[18:16:09] <ASUS> I'm completed about three of them
[18:16:17] <grym> bjs: wait, we have a bot now
[18:16:33] <triode> SO, I am getting closer, but it does not plot the list of images, only the first: https://bpa.st/AIKA
[18:16:51] <SnoopJ> grym, it's a network service
[18:16:55] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[18:16:57] <grym> hmm, so it is
[18:17:09] <bjs> grym: it just quiets when it detects flooding
[18:17:16] <grym> nice
[18:17:18] <triode> Yeah, It already gave me a warn, smackdown.
[18:17:36] <triode> Honestly, I thought I had mouse button three, but pressed four.
[18:17:37] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: Hay te huacho!)
[18:18:14] *** Joins: Dotz0cat (~Dotz0cat@98.19.251.149)
[18:18:19] *** Quits: Sir_Andrei (~andrei@r167-57-81-34.dialup.adsl.anteldata.net.uy) (Client Quit)
[18:18:32] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[18:19:17] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[18:19:23] *** Joins: ThePhilgrim2 (~ThePhilgr@151.40.115.120)
[18:19:23] <triode> It would probably be better of me to show the entire code: https://bpa.st/GKSQ I can not get function show_images to plot the list, it only does the first.
[18:19:26] *** Joins: anshupatia (uid29854@id-29854.helmsley.irccloud.com)
[18:19:51] *** Quits: anshupatia (uid29854@id-29854.helmsley.irccloud.com) (Excess Flood)
[18:20:07] *** Joins: anshupatia (uid29854@id-29854.helmsley.irccloud.com)
[18:20:22] <bjs> xheimlich: https://bpa.st/5H4A
[18:20:31] *** Joins: luva5 (~luva@146.70.62.252)
[18:21:06] *** Quits: ThePhilgrim2 (~ThePhilgr@151.40.115.120) (Remote host closed the connection)
[18:21:14] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:21:26] *** Joins: ThePhilgrim2 (~ThePhilgr@151.40.115.120)
[18:21:37] <zen_coder> jinsun: ok, will try it out
[18:22:20] *** Quits: ThePhilgrim2 (~ThePhilgr@151.40.115.120) (Client Quit)
[18:22:43] *** Joins: ASUS_ (~ASUS@user/ASUS)
[18:22:45] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[18:23:03] *** Quits: harpia (~harpia@2804:fc:8de2:e700:f59b:322e:48e2:b259) (Quit: harpia)
[18:23:13] *** Joins: callq (~callq@157.41.35.249)
[18:23:22] <jinsun> zen_coder: you should be able to just do `parser = configparser.ConfigParser(delimiters=('=',))`, then use that parser to read the file
[18:23:29] *** Quits: Syzygy__ (~Syzygy@2001:871:265:1cdc:d127:a364:8ef8:7bcb) (Ping timeout: 250 seconds)
[18:23:30] *** Quits: luva (~luva@37.120.197.38) (Ping timeout: 250 seconds)
[18:23:30] *** luva5 is now known as luva
[18:23:45] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:24:11] *** Quits: ASUS_ (~ASUS@user/ASUS) (Remote host closed the connection)
[18:24:14] <callq> So, for GUIs, is wxPython kind of outdated nowadays? What are people using?
[18:24:21] <wyre> hi guys, I cannot understand what should I set for SETUPTOOLS_SCM_PRETEND_VERSION_FOR_${UPERCASED_DIST_NAME} according to https://github.com/pypa/setuptools_scm#environment-variables
[18:24:21] *** Quits: Nightelf (~Nightelf@156.213.125.175) (Read error: Connection reset by peer)
[18:24:21] *** Quits: ThePhilgrim (~ThePhilgr@151.40.115.120) (Client Quit)
[18:24:34] <wyre> should I just export it? 🤔
[18:24:57] <Wooble> callq: pyside/pyqt. IMP wxpython was kind of outdated 15 years ago :)
[18:25:01] <Wooble> IMO*
[18:25:07] <callq> Cool
[18:25:15] *** Joins: pro_z (~pro_z@37.214.50.160)
[18:25:21] *** Joins: pyfisch9 (~pyfisch@user/pyfisch)
[18:25:29] *** Joins: Nightelf (~Nightelf@156.213.138.244)
[18:25:32] <deniska> is there a mnemonic to remember which db-api driver to use for mysql?
[18:25:39] *** Joins: Fubbe (~ThePhilgr@151.40.115.120)
[18:25:43] <zen_coder> jinsun: I changed it like this: `config = configparser.ConfigParser(delimiters=['='])`
[18:25:44] <zen_coder> right?
[18:25:54] <grym> deniska: i just grep chanlogs for ChrisWarrick :P
[18:26:13] *** Quits: Fubbe (~ThePhilgr@151.40.115.120) (Client Quit)
[18:26:15] <zen_coder> unfortunately, there are really double items, the a complete line is two times in a section
[18:26:18] <ChrisWarrick> deniska: mysqlclient
[18:26:26] *** Joins: wedwards (~wedwards@rtr0.17.31.bogert.cyberfusion.cloud)
[18:26:26] *** Quits: pyfisch (~pyfisch@user/pyfisch) (Ping timeout: 260 seconds)
[18:26:26] *** pyfisch9 is now known as pyfisch
[18:26:44] <Wooble> deniska: I just check if django's docs still recommending mysqlclient or something better replaced it. :)
[18:26:51] <jinsun> zen_coder: that might work too, I used tuple because the default was tuple
[18:27:01] <ChrisWarrick> deniska: source: django and sqlalchemy recommend it
[18:27:25] <ChrisWarrick> and pymysql if you can’t get mysqlclient to install (due to non-python requirements)
[18:27:53] <Wooble> (and then toy with the idea of trying to get our server admins to embrace postgresql already)
[18:28:32] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[18:28:38] *** Quits: ThePhilgrim (~ThePhilgr@151.40.115.120) (Client Quit)
[18:28:48] <deniska> (oh, don't worry, at my current place we use all the databases, including postgres)
[18:28:57] *** Joins: ovelny (~ovelny@user/ovelny)
[18:29:43] <zen_coder> when I now set strict=False, is can read it in
[18:29:57] <triode> Thanks all. I got it figured out.
[18:29:59] *** Parts: triode (~number9@130.70.15.5) ()
[18:30:12] <zen_coder> maybe I should tell you ma original task, I need to merge two ini files of this content: https://github.com/GENIVI/car-data-logger/blob/master/env/commonapi.ini
[18:30:14] <Wooble> deniska: to be fair, picking a single bad one is maybe better than having them all :)
[18:30:45] <zen_coder> but of course, I cannot have two section like "[proxy]" or "[stub]"
[18:30:54] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[18:31:01] <deniska> I assume mysql is legacy stuff, postgresql is newer stuff, and everything else is resume padding :\
[18:31:02] *** Joins: ASUS_ (~ASUS@user/ASUS)
[18:31:20] *** Joins: dme86_ (~dan@user/dan86)
[18:31:30] *** Quits: ThePhilgrim (~ThePhilgr@151.40.115.120) (Client Quit)
[18:31:41] *** Quits: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com) (Remote host closed the connection)
[18:32:14] <deniska> but anyway, that's now why I asked, was helping someone using mysql connector, and saw `mysql.connector.errors.InternalError: Unread result found` which is not the kind of error I ever remember seeing :)
[18:32:18] *** Joins: deviantfero (~deviantfe@179.51.61.253)
[18:32:35] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[18:33:16] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[18:33:29] *** Joins: FluffyMask (~masque@user/fluffymask)
[18:33:38] *** Quits: ThePhilgrim (~ThePhilgr@151.40.115.120) (Client Quit)
[18:33:52] *** Quits: ASUS_ (~ASUS@user/ASUS) (Remote host closed the connection)
[18:34:11] <elias117> bjs this is what I'm trying to do https://www.baeldung.com/cs/shortest-path-visiting-all-nodes
[18:34:16] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[18:34:22] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 272 seconds)
[18:34:23] *** Quits: ThePhilgrim (~ThePhilgr@151.40.115.120) (Client Quit)
[18:34:49] <elias117> what I need to know is starting at point A what steps do I take to visit all nodes in the least amount of distance travelled
[18:35:10] <TML> LOL
[18:35:25] <TML> you and everyone else
[18:35:36] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[18:35:39] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[18:35:44] *** Quits: ThePhilgrim (~ThePhilgr@151.40.115.120) (Client Quit)
[18:35:59] <bjs> elias117: you're describing TSP,  that website gives some solutions.
[18:36:37] <elias117> yeah and I dont really understand the pseudocode for that dijikstra approach
[18:37:34] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[18:37:42] *** ThePhilgrim is now known as Fubbe
[18:37:51] *** Quits: Fubbe (~ThePhilgr@151.40.115.120) (Client Quit)
[18:37:52] <bjs> elias117: which part
[18:38:15] <elias117> the if statement
[18:38:19] <elias117> inside the for loop
[18:38:49] <elias117> like I get we are getting a current node and looping over all the children of the current node on the graph
[18:38:51] *** Joins: Fubbe (~ThePhilgr@151.40.115.120)
[18:38:57] *** Joins: mactron (~mactron@cpe-146-212-96-217.dynamic.amis.net)
[18:38:58] *** Quits: Forsaken87_ (~quassel@2a02:908:1866:e360:b79:88e2:d2ce:2e71) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:39:04] <elias117> so for a fully connected graph thats all of the nodes except the child
[18:39:06] <elias117> that makes sense
[18:39:17] <elias117> so for a fully connected graph thats all of the nodes except the current I mean
[18:39:37] <elias117> and we are getting the weights
[18:39:46] *** Quits: mactron (~mactron@cpe-146-212-96-217.dynamic.amis.net) (Client Quit)
[18:39:48] <elias117> but cost is a matrix?
[18:39:51] *** Parts: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it) ()
[18:40:01] *** Joins: mactron (~mactron@cpe-146-212-96-217.dynamic.amis.net)
[18:40:03] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:c484:c8a1:12bf:1d2f)
[18:40:19] <bjs> elias117: well imagine you ran dijkstra's many times, once starting from each vertex
[18:40:36] <elias117> yup
[18:40:40] *** Quits: Fubbe (~ThePhilgr@151.40.115.120) (Client Quit)
[18:41:15] <TML> elias117: For each child, we check if the cost value of it visiting a specific subset of nodes greater than the current cost plus the weight of the edge that connects the current node with the child.
[18:41:15] *** Joins: Fubbe (~ThePhilgr@151.40.115.120)
[18:41:22] *** Quits: Fubbe (~ThePhilgr@151.40.115.120) (Client Quit)
[18:41:52] *** Joins: Fubbe (~ThePhilgr@151.40.115.120)
[18:42:06] <bjs> elias117: and I think that's basically what it's doing, it's running dijkstra's many times with different starting points, until it has a path that visits every node
[18:42:08] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:42:08] *** Quits: Fubbe (~ThePhilgr@151.40.115.120) (Client Quit)
[18:42:31] <TML> elias117: https://levelup.gitconnected.com/dijkstra-algorithm-in-python-8f0e75e3f16e
[18:42:33] *** Joins: Forsaken87 (~quassel@2a02:908:1866:e360:b79:88e2:d2ce:2e71)
[18:43:07] <bjs> I'm not convinced it's a correct answer given the problem statement
[18:43:24] <bjs> because dijkstra's won't re-visit the same node again
[18:43:49] <bjs> Does it work for their example at the top?
[18:44:00] <xheimlich> bjs: giving tests/ an __init__.py fixed things.
[18:44:06] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[18:44:07] <xheimlich> sorry I took so long, diaper duty.
[18:44:16] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[18:44:22] <xheimlich> thanks
[18:44:35] *** Joins: ASUS_ (~ASUS@user/ASUS)
[18:45:00] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[18:45:00] *** Quits: ASUS_ (~ASUS@user/ASUS) (Remote host closed the connection)
[18:45:10] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[18:45:15] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 256 seconds)
[18:45:16] *** Joins: mickey8 (~user@user/mickey)
[18:45:17] <elias117> hmmm
[18:45:39] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-edbf-7256-c0e4-b9ea.res6.spectrum.com)
[18:45:45] <bjs> elias117: I mean you have just tried to run the algorithm on paper on the example at the top to see what happens, right? :P
[18:45:48] <elias117> TML this might be what I'm looking for
[18:46:03] <elias117> which example bjs?
[18:46:17] <bjs> elias117: the page you linked
[18:46:26] <elias117> oh the one with the pseudo code
[18:46:35] <elias117> no I havent becuase I dont fully understand it
[18:46:47] <elias117> It seems to get me the shortest path length
[18:46:52] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[18:46:59] <elias117> but not the path i.e A->C->B->D
[18:47:08] <elias117> and really thats all I'm looking for
[18:47:19] <bjs> elias117: dijkstra's gives you both a path and a length
[18:47:31] <bjs> but the example didn't have A,B,C,D it had 0,1,2,3,4 no?
[18:48:09] *** Quits: antaresgades (~antaresga@ieocadiz.cd.ieo.es) (Quit: Client closed)
[18:48:13] *** Quits: jpic (~jpic@82.142.19.130) (Ping timeout: 240 seconds)
[18:48:31] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[18:48:42] *** ThePhilgrim is now known as Fubbe
[18:48:44] <bjs> elias117: like in that video you shared earlier of a "classic" Dijkstra's,  where in the end you got a table with 2 columns. One column told you the distance to A and the other told you the path
[18:49:01] *** Quits: Fubbe (~ThePhilgr@151.40.115.120) (Remote host closed the connection)
[18:49:13] *** Joins: Fubbe (~Fabalaba@151.40.115.120)
[18:50:12] *** Joins: jpic (~jpic@188.95.144.208)
[18:50:15] *** Quits: structoha (~structoha@gateway/tor-sasl/structoha) (Ping timeout: 240 seconds)
[18:50:21] <elias117> yeah but if I select one of those A -C for example
[18:50:30] *** Quits: mactron (~mactron@cpe-146-212-96-217.dynamic.amis.net) (Quit: WeeChat 3.4)
[18:50:32] *** Quits: dme86_ (~dan@user/dan86) (Read error: Connection reset by peer)
[18:50:34] <elias117> theres no gurantee that I will use all of the nodes
[18:50:38] <elias117> to get to C
[18:50:50] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 272 seconds)
[18:50:55] <bjs> elias117: yes, so that's what this modified version achieves. By running dijkstra's many times, starting at each node
[18:50:58] <elias117> Do you see what I'm saying?
[18:51:44] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[18:51:49] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[18:51:53] *** Joins: c4017w__ (~c4017@209.52.68.8)
[18:52:00] *** Quits: Fubbe (~Fabalaba@151.40.115.120) (Client Quit)
[18:52:08] <bjs> elias117: essentially the version on that webpage is running a separate dijkstra's each time it reaches a node, once for each child. and then doing it for each starting vertex
[18:52:49] <zen_coder> jinsun: am I an the right track to merge two ini files with this, or is there a simpler solution?
[18:52:50] <elias117> ohhh
[18:52:54] <elias117> thats kind of what I'm doing
[18:52:58] <elias117> already
[18:53:06] <bjs> elias117: so if you have 3 children you run dijkstra's 3 times each with 1 new visitor, rather than one dijkstra's with 3 new visited nodes
[18:53:35] <bjs> each dijkstra's is basically building *a* possible path.  It seems hideously inefficient, and like I said I'm not even convinced it'll work on the example they give at the top of the page
[18:53:37] <bjs> (but I didn't try)
[18:53:57] <elias117> man I have been stuck on this for like a week
[18:54:31] <elias117> I need to see how this will work
[18:54:31] *** Joins: Sargento (uid523534@wikipedia/Sargento-de-Hierro)
[18:54:39] <elias117> its really hard to visualize it
[18:55:08] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[18:55:15] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[18:55:19] <jinsun> zen_coder: merging is arder than reading and writing, but if you are able to read both after that deliiter change, you should be able to loop over the keys of one and add to the other
[18:55:32] *** Joins: dme86 (~dan@user/dan86)
[18:55:40] <jinsun> zen_coder: you just have to decide which one will win in case of conflicts, and loop over that one
[18:56:35] *** Joins: luva7 (~luva@185.168.9.232)
[18:56:41] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[18:58:20] <jinsun> s/arder/harder
[18:58:26] *** Quits: msek_ (~Username@pd9fb2bd5.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[18:58:27] <jinsun> s/deliiter/delimiter
[18:59:06] <bjs> elias117: it might be worth writing it in a different way, like a recursive dijkstras call or something
[18:59:34] <bjs> elias117: because that's basically what it's doing, running a "new" dijkstras for each visited edge, such that the "visited nodes" list is the path
[18:59:39] *** Quits: luva (~luva@146.70.62.252) (Ping timeout: 252 seconds)
[18:59:39] *** luva7 is now known as luva
[18:59:42] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 272 seconds)
[18:59:52] <bjs> except it's doing it in a clever way
[19:00:20] *** Quits: KevinX (~KevinX@user/KevinX) (Ping timeout: 272 seconds)
[19:01:25] <xheimlich> elias117: I googled this https://math.stackexchange.com/questions/8140/find-all-cycles-faces-in-a-graph
[19:01:34] <jinsun> if it is not for learning and ready-made solutions work, then networkx has some TSP functions, could also look at those https://networkx.org/documentation/stable/reference/algorithms/approximation.html#travelling-salesman-problem-tsp
[19:01:51] *** october is now known as pjoter
[19:01:57] *** Joins: KevinX (~KevinX@user/KevinX)
[19:02:24] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:c484:c8a1:12bf:1d2f) (Quit: Textual IRC Client: www.textualapp.com)
[19:02:43] <xheimlich> but that link isn't about what I expected.
[19:03:04] <zen_coder> jinsun: so I use this method to add new values to a config right? https://docs.python.org/3/library/configparser.html#configparser.RawConfigParser.set
[19:03:12] <xheimlich> basically this https://en.wikipedia.org/wiki/Clique_complex
[19:03:16] *** Joins: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net)
[19:04:50] *** Joins: Polyblank (~Polyblank@user/polyblank)
[19:05:37] *** Joins: akk (~akk@75-161-95-245.albq.qwest.net)
[19:07:18] <xheimlich> here s where it relates to tsp https://arxiv.org/pdf/2012.12363.pdf
[19:07:46] *** Joins: iomari891 (~iomari891@105.112.138.38)
[19:08:12] *** Quits: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[19:10:25] *** Joins: laidback_01 (~jax@98.97.66.6)
[19:12:07] *** Joins: han-solo (~hanish@user/han-solo)
[19:14:48] *** Joins: tristan_ (~tristan@223.62.162.74)
[19:15:00] *** Joins: SaltHillStroller (~SaltHillS@206.223.160.26)
[19:15:00] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[19:16:09] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 252 seconds)
[19:16:26] *** Joins: pepper (~pepper@user/pepper)
[19:16:44] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[19:17:08] *** Joins: iomari891 (~iomari891@102.89.3.240)
[19:17:16] *** Joins: revolve (~u0_a227@82-132-239-29.dab.02.net)
[19:17:56] *** Joins: msek_ (~Username@pd9fb2bd5.dip0.t-ipconnect.de)
[19:20:10] <xheimlich> ok, so my data subdirectory has a data_acquisition.py file that opens a csv file, which is in the data subdirectory.
[19:20:56] <xheimlich> I'm now succesfully importing the module, but it seems that the hardcoded csv filename is interpreted as a relative path to where I am now.
[19:21:02] <xheimlich> is there a quickfix?
[19:21:12] *** Quits: dsrt^ (~dsrt@50.235.176.163) (Remote host closed the connection)
[19:21:30] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[19:22:48] <zen_coder> jinsun: https://bpa.st/4UZQ
[19:22:54] <han-solo> use `pathlib.Path(__file__).parent` or something for reference
[19:23:28] * SnoopJ likes to resolve() there, too
[19:23:35] <han-solo> yeah, to be safe
[19:24:11] <jinsun> zen_coder: yeah .set shoould work for you, and the problem in the paste is because you have strict false
[19:24:56] *** Quits: bluedust (~bluedust@117.222.190.30) (Remote host closed the connection)
[19:24:56] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[19:25:56] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[19:26:17] *** Joins: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net)
[19:27:11] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[19:28:12] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 272 seconds)
[19:30:16] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[19:30:17] <jinsun> zen_coder: ah no, it is because the code is just doing that, it is reading the config and writing the same thing again
[19:30:26] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:c84:1582:c796:2258) (Quit: Konversation terminated!)
[19:31:04] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Quit: They told me they fixed it. I trusted them to fix it. It's not my fault!)
[19:31:23] <jinsun> zen_coder: if you wanted it to overwrite, then read the file once, then open it in w mode again so that old contents are truncated
[19:31:24] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[19:31:56] <zen_coder> jinsun: ah okay, the mode will fix it
[19:32:03] <zen_coder> r+, will not overwrite the content
[19:32:32] <jinsun> it can, but you have to do it mannually by seeking and counting bytes
[19:32:59] <jinsun> better to just open in w mode and let it automatically happen
[19:34:36] *** Quits: iomari891 (~iomari891@102.89.3.240) (Read error: Connection reset by peer)
[19:37:09] *** Quits: jayray (~jayray@user/jayray) (Ping timeout: 250 seconds)
[19:37:29] *** Quits: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Quit: Leaving)
[19:37:31] *** Joins: not_not (~not_not@193.178.220.11)
[19:38:23] *** Joins: dsrt^ (~dsrt@50.235.176.163)
[19:38:40] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[19:39:00] <not_not> Hi im in the insane asylum atm
[19:39:37] <t4nk_freenode> what a coincidence
[19:39:46] <not_not> U 2?
[19:39:49] <t4nk_freenode> I just got out!
[19:39:58] *** Joins: iomari891 (~iomari891@105.112.138.38)
[19:40:02] <t4nk_freenode> (provisionally... HAHahaHAHhAHA)
[19:40:10] <not_not> Ahh welcome Home(sanitarium)
[19:40:12] *** Quits: tWqaq (~tWqaq@240e:389:5d1c:ff00:8856:40b7:9eba:30a0) (Quit: Leaving)
[19:40:14] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[19:40:16] *** Joins: Masterphi (~Masterphi@user/masterphi)
[19:40:36] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[19:40:54] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[19:41:16] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:4436:314a:5bdb:f8ca)
[19:41:28] *** Joins: nomic (~nomic@185.217.117.82)
[19:42:00] <not_not> Godt my lawyer making IT expensive hot nurses free valium
[19:42:04] *** Quits: ASUS (~ASUS@user/ASUS) (Quit: Leaving)
[19:42:15] *** Joins: toverna (~uni@2.95.239.158)
[19:42:17] <GreenResponse> hello nurse!
[19:43:01] <not_not> Man love comming out the asylum
[19:43:32] <Wooble> ##python-offtopic?
[19:43:51] *** Joins: mbuf (~Shakthi@223.178.90.64)
[19:44:31] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[19:45:00] *** Quits: pepper (~pepper@user/pepper) (Remote host closed the connection)
[19:45:26] *** Joins: pepper (~pepper@user/pepper)
[19:46:11] <mbuf> How do I remove a mix float-string values, like ,  "\n       4.761904761904762", in a Pandas Series float object?
[19:46:49] <bjs> mbuf: well that's not a float object,  where did it come from
[19:46:58] <bjs> it's a bit weird to have a newline in a column you're calling a "float" :)
[19:47:25] *** Joins: Sqaure (~a@user/square)
[19:47:30] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 252 seconds)
[19:47:43] *** Joins: trueFragment (~trueFragm@2603-8080-6b06-fd1d-fc2e-5e0e-e860-cf1e.res6.spectrum.com)
[19:48:37] *** Joins: tristan__ (~tristan@223.33.165.44)
[19:48:45] *** Quits: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr) (Remote host closed the connection)
[19:49:06] <mbuf> bjs, this is the error that I get, https://bpa.st/A3SA
[19:49:06] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 272 seconds)
[19:49:23] *** Joins: xavie (~xavie@176-139-252-198.abo.bbox.fr)
[19:49:33] *** Joins: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr)
[19:49:41] <bjs> mbuf: this error looks exceptionally strange to me...
[19:49:50] <bjs> what did you do to get it and where is it coming from?
[19:49:54] *** Joins: bluedust (~bluedust@117.222.190.30)
[19:50:01] <mbuf> bjs, reading from a database
[19:50:04] *** xavie is now known as xcombelle
[19:50:17] <bjs> mbuf: reading how exactly?
[19:50:19] *** Joins: haslo (uid390999@id-390999.uxbridge.irccloud.com)
[19:50:33] <bjs> mbuf: usually the format of that kind of error is   KeyError: "the key"
[19:50:45] <bjs> which implies your key was "None of [..." which is a weird key ?
[19:50:56] <bjs> or is that pandas doing something strange
[19:51:05] *** Quits: MikZyth (~MikZyth@host-192-158-66-217.spbmts.ru) (Quit: WeeChat 3.4)
[19:51:08] <jinsun> pandas gives that error if you use a list of values
[19:51:09] <SnoopJ> seems like the latter
[19:51:14] <zen_coder> jinsun: somehow, when writing the file to the desitination, all keys are converted to lowercase, can I disable this behavior?
[19:51:22] <jinsun> None of [1,2,3] are in the columns
[19:51:25] <jinsun> something like that
[19:51:42] <jinsun> so the key was [1,2,3]
[19:51:47] *** Quits: bluedust (~bluedust@117.222.190.30) (Remote host closed the connection)
[19:52:03] <mbuf> bjs, jinsun yes from pandas
[19:52:16] *** Quits: tristan_ (~tristan@223.62.162.74) (Ping timeout: 272 seconds)
[19:52:22] *** Joins: c4017w_ (~c4017@209.52.68.8)
[19:53:02] <jinsun> but having a list with Float64Index and strings is weirder than normal
[19:53:07] *** Joins: Fiji (~Fiji@user/fiji)
[19:53:09] <jinsun> mbuf: show code?
[19:53:49] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:4436:314a:5bdb:f8ca) (Quit: WeeChat 3.0)
[19:54:09] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:4436:314a:5bdb:f8ca)
[19:54:35] *** Joins: tmm88 (~tmm88@user/tmm88)
[19:54:59] *** Quits: shailangsa (~shailangs@host86-186-127-164.range86-186.btcentralplus.com) (Remote host closed the connection)
[19:55:03] *** Parts: Sqaure (~a@user/square) (Leaving)
[19:55:45] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[19:55:56] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[19:56:15] *** ThePhilgrim is now known as Fubbe
[19:56:28] *** Quits: Fubbe (~ThePhilgr@151.40.115.120) (Client Quit)
[19:57:08] <mbuf> jinsun, never mind; I was passing the wrong data type to be used in the data frame
[19:57:18] *** Quits: callq (~callq@157.41.35.249) (Quit: callq)
[19:57:33] *** Quits: toverna (~uni@2.95.239.158) (Quit: Konversation terminated!)
[19:58:17] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:59:15] *** Quits: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de) (Changing host)
[19:59:15] *** Joins: trace987 (~trace@user/trace)
[20:00:27] <jinsun> zen_coder: looks like there is .optionxform that can be overriden to get rid of the case conversion https://docs.python.org/3/library/configparser.html#configparser.ConfigParser.optionxform
[20:02:06] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[20:02:12] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 240 seconds)
[20:02:16] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[20:02:53] *** Quits: not_not (~not_not@193.178.220.11) (Ping timeout: 256 seconds)
[20:03:04] *** Joins: darksun (~darksun@user/darksun)
[20:03:09] *** Quits: magic_ninja (~sparkie1@162-202-44-35.lightspeed.tpkaks.sbcglobal.net) (Ping timeout: 250 seconds)
[20:04:22] *** Joins: Viewday116 (~Viewday@user/viewday)
[20:05:19] *** Quits: saroy (~Sandipan@115.187.50.151) (Ping timeout: 250 seconds)
[20:05:58] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[20:05:58] *** Viewday116 is now known as Viewday11
[20:06:12] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[20:06:18] <elias117> bjs: I think I figured it out
[20:06:20] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:2a65:85ea:282b:a802)
[20:06:22] <elias117> I did it by hand
[20:06:25] <elias117> and it made a lot of sense
[20:06:35] <elias117> so this will tell me the length of the shortest path
[20:06:50] <elias117> Is there a way I can get the actual order of nodes to visit
[20:08:00] <bjs> elias117: dijkstra's gives you both
[20:08:09] <bjs> because you get a table, of both length/distance and of "previous node"
[20:09:11] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[20:10:42] *** Quits: luigibu (~luigi@93.176.155.54) (Quit: WeeChat 3.4)
[20:11:16] *** Quits: nortoh (~nortoh@user/nortoh) (Quit: this is not importent)
[20:11:49] *** Joins: et_ (~et@user/et)
[20:11:54] *** Joins: nortoh (~nortoh@bishop.xerrero.com)
[20:11:54] *** Quits: nortoh (~nortoh@bishop.xerrero.com) (Changing host)
[20:11:54] *** Joins: nortoh (~nortoh@user/nortoh)
[20:12:00] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[20:12:09] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:4865:85c:e916:e599)
[20:12:24] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[20:12:47] *** Joins: Barones (~Barones@user/Barones)
[20:13:10] *** Quits: et (~et@user/et) (Ping timeout: 272 seconds)
[20:13:11] *** et_ is now known as et
[20:13:30] *** Joins: magla (~gelignite@55d42258.access.ecotel.net)
[20:13:52] <elias117> even with the algorthm I linked?
[20:13:54] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[20:13:54] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:a5f0:9fc5:2:4ed5) (Ping timeout: 252 seconds)
[20:13:59] <elias117> https://www.baeldung.com/cs/shortest-path-visiting-all-nodes
[20:14:35] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:14:51] <bjs> elias117: this algorithm is modified so it's not just normal dijkstras.  It still functions the same way as dijkstras and visits all the nodes like dijkstras does, it just doesn't save that second column of the table
[20:14:51] *** Joins: shad (~shad@user/shad)
[20:15:13] <bjs> but you could quite easily do that, the previous of `child` is `current`.
[20:15:43] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:3751:3896:183:6a64) (Quit: pvergain)
[20:16:03] *** Joins: bluedust (~bluedust@117.222.190.30)
[20:16:21] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[20:16:35] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[20:16:49] *** Joins: nuclearg1 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net)
[20:16:51] *** Quits: nuclearg1 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Changing host)
[20:16:51] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[20:18:36] *** Joins: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net)
[20:18:41] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 245 seconds)
[20:18:51] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 252 seconds)
[20:19:00] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[20:19:01] *** Joins: cdown_ (~cdown@163.114.131.1)
[20:19:09] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:e5fe:8c5:2a77:336e)
[20:19:43] *** Joins: kickingvegas (~cchoi@c-69-181-182-237.hsd1.ca.comcast.net)
[20:19:50] *** Joins: iflema (~ian@user/iflema)
[20:20:57] *** Quits: pgib (~textual@173.38.117.82) (Ping timeout: 240 seconds)
[20:21:13] *** Joins: zebrag (~chris@user/zebrag)
[20:21:24] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 240 seconds)
[20:21:36] *** cdown_ is now known as cdown
[20:22:50] *** Joins: mchlumsky8 (~mchlumsky@modemcable106.190-179-173.mc.videotron.ca)
[20:22:50] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[20:23:23] *** Quits: mchlumsky (~mchlumsky@modemcable106.190-179-173.mc.videotron.ca) (Read error: Connection reset by peer)
[20:23:23] *** mchlumsky8 is now known as mchlumsky
[20:23:38] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:24:09] *** Quits: rsx (~dummy@ppp-188-174-151-180.dynamic.mnet-online.de) (Quit: rsx)
[20:24:45] *** Joins: luva7 (~luva@146.70.62.252)
[20:25:16] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Remote host closed the connection)
[20:25:27] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[20:25:37] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[20:26:18] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[20:26:22] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[20:27:07] <elias117> so when we add it to the queue
[20:27:13] <elias117> are we visiting the child
[20:27:39] <elias117> is that what is happening in that if statement
[20:28:12] *** Quits: luva (~luva@185.168.9.232) (Ping timeout: 252 seconds)
[20:28:12] *** luva7 is now known as luva
[20:28:13] <bjs> elias117: well in normal Dijkstra's you have an `if` to check whether you've visited the node before and if not whether it's cheaper than the current shortest path
[20:28:15] <bjs> that's what that if is.
[20:29:08] <elias117> ohhh ok
[20:29:26] <elias117> I just want to have something to track the order I want
[20:29:28] <bjs> elias117: have you written just a normal Dijkstra's "shortest path between A and B" before?
[20:29:35] <elias117> yup
[20:30:36] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 240 seconds)
[20:31:00] *** Joins: the_lanetly_052 (~the_lanet@185.30.91.186)
[20:32:15] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[20:32:16] *** Joins: smoke_ (~smoke@user/smoke)
[20:32:26] *** Joins: Elliria (~littlegir@cpe-66-24-84-219.stny.res.rr.com)
[20:32:36] *** Quits: the_lanetly_052_ (~the_lanet@185.30.89.52) (Ping timeout: 252 seconds)
[20:33:04] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[20:33:36] *** Quits: revolve (~u0_a227@82-132-239-29.dab.02.net) (Read error: Connection reset by peer)
[20:34:25] *** Joins: vsantana (~Thunderbi@170.231.140.232)
[20:35:29] *** Joins: revolve (~u0_a227@82-132-246-92.dab.02.net)
[20:35:54] *** Quits: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de) (Ping timeout: 252 seconds)
[20:36:06] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Client Quit)
[20:36:09] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:36:17] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[20:36:33] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[20:36:54] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[20:37:28] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[20:37:53] *** Quits: Elliria (~littlegir@cpe-66-24-84-219.stny.res.rr.com) (Quit: *POOF*)
[20:38:14] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[20:39:07] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[20:39:40] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[20:40:23] <tmm88> can someone explain me why is this script not working
[20:40:24] <tmm88> ?
[20:40:32] <tmm88> i already installed selenium
[20:40:37] <tmm88> and the other libraries
[20:40:41] <tmm88> as well as chromedriver
[20:40:56] <tmm88> which i copied to the local project file
[20:41:24] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[20:43:10] <nedbat> tmm88: you've told a number of things, but you haven't said how it isn;t working, you haven't shown the program, and you haven't shown the result you get.
[20:43:36] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Ping timeout: 252 seconds)
[20:43:44] <stewie925> good morning
[20:44:05] *** Roey is now known as CoilWine
[20:45:23] *** Quits: alius (~alius@2001:861:4444:49c0:d4c1:b0ac:a0ba:10e2) (Quit: Leaving)
[20:45:57] <foo> Excited to dive into python's rq for task scheduling/processing. I had an synchronous polling loop before, looking to replace it. Celery, while probably powerful, is a monster in the room... rq seems lightweight and simple enough to start with to meet our needs. Nightly processes that fire off, a few on-demand items, dealing with API rate limits and attempts X minutes later... if anyone is strongly against
[20:46:03] <foo> this please let me know, otherwise this seems like a good path.
[20:46:06] *** Quits: msek_ (~Username@pd9fb2bd5.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[20:46:20] *** Quits: kristijonas (~kristijon@78-56-32-39.static.zebra.lt) (Remote host closed the connection)
[20:46:20] *** Quits: kristijonas_ (~kristijon@78-56-32-39.static.zebra.lt) (Remote host closed the connection)
[20:47:00] <deniska> celery never seemed particularly monstrous, considering that it can run on the same redis as you'd use for rq
[20:47:27] *** Joins: mug3n (~mugen@gateway/tor-sasl/mugen)
[20:47:37] <foo> deniska: oh, my perception might be wrong. I know it's been around longer, if nothing more. And might have a little more of a learning curve than rq, perhaps. Thanks for clarifying.
[20:47:45] <meejah> that sounds like "a cron job" to me though...(but maybe there's more?)
[20:47:47] *** Joins: Wh0 (~V@103.240.204.159)
[20:48:08] <tmm88> nedbat: i listed it all down the file
[20:48:12] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[20:48:22] <deniska> (or systemd timer unit)
[20:48:24] <foo> meejah: it's not a single task, dozens of tasks to various APIs
[20:48:28] <tmm88> it is supposed to retrieve user connection data from linkedin api
[20:48:33] <foo> meejah: right now, a cron job does fire things off.
[20:48:36] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[20:48:36] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[20:48:41] <foo> meejah: and it synchronously goes through everything
[20:48:51] <nedbat> tmm88: down what file?
[20:49:04] <nedbat> tmm88: maybe you thought you pasted a link?
[20:49:25] <meejah> foo: I see .. i don't have experience with any of those, so can't generate an opinion on rq vs celery ;)
[20:49:35] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 240 seconds)
[20:50:12] *** Quits: jpic (~jpic@188.95.144.208) (Ping timeout: 252 seconds)
[20:51:50] *** Joins: jpic (~jpic@82.142.19.130)
[20:52:09] *** Quits: tmm88 (~tmm88@user/tmm88) (Quit: Lost terminal)
[20:52:32] *** Joins: dgdg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222)
[20:52:33] *** Joins: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it)
[20:52:35] *** Joins: aandrew (foobar@gromit.mixdown.ca)
[20:52:40] <aandrew> good afternoon, everyone
[20:52:53] *** Joins: c4017w__ (~c4017@209.52.68.8)
[20:53:01] *** Quits: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222) (Ping timeout: 256 seconds)
[20:53:11] *** Joins: Guest67 (~Guest67@2a02:c206:3007:2042::1)
[20:53:15] <aandrew> I have a python (3.x) script that is receiving a "dictonary of dictionaries" over a TCP socket, which I've serialized/deserialzed via json. This is working fine
[20:53:19] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Remote host closed the connection)
[20:53:52] *** Joins: Staunch (~Staunch@150.93.99.34.bc.googleusercontent.com)
[20:54:25] <aandrew> I'd like to walk that dictionary and whichever dictionaries are "inside" I want to make available to my other functions in the script. I can walk the dictionary easily enough: for d in dict_of_dicts: new_dict = d
[20:54:36] *** Quits: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[20:54:38] *** Quits: mbuf (~Shakthi@223.178.90.64) (Quit: Leaving)
[20:55:09] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 252 seconds)
[20:55:24] <aandrew> but I don't know how to say "the name of the dict (d) should be the name of the global new_dict
[20:55:37] <bjs> aandrew: the name?
[20:56:01] <bjs> I'm not really following, doing that assignment of `new_dict = d` inside the loop doesn't seem to do much
[20:56:09] <deniska> aandrew: you can't dynamically create names in python
[20:56:15] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[20:56:22] <grym> aandrew: how predictable is the structure of this data? (do you know the key names ahead of time?)
[20:56:26] *** Joins: tomeaton17 (~tomeaton1@92.234.2.175)
[20:56:27] <aandrew> e.g. dict_of_dicts = { "sub_dict1": {"foo" : [1,2,3,4]}, {"bar": [5,6,7,8} } }
[20:56:39] <SnoopJ> deniska, what do you call mutating globals(), then?
[20:56:50] <deniska> SnoopJ: shenanigans
[20:56:55] <aandrew> I want to have the name of the dicts I'm creating in the receiver script called sub_dict1 and sub_dict2 etc
[20:57:01] <grym> aandrew: why
[20:57:06] <deniska> SnoopJ: more fun: mutating builtins
[20:57:24] *** Joins: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net)
[20:57:35] <aandrew> grym: I'm replacing the "data getting" part of a larger script so it can pull in the varied/variable data coming in to come from a remote computer rather than hardware directly connected
[20:57:39] *** Quits: mchlumsky (~mchlumsky@modemcable106.190-179-173.mc.videotron.ca) (Quit: Ping timeout (120 seconds))
[20:57:45] <phy1729> What do you want to do with the subdicts?
[20:57:57] *** Joins: mchlumsky (~mchlumsky@modemcable106.190-179-173.mc.videotron.ca)
[20:58:09] <deniska> aandrew: if you know what names should be there, just list them: `sub_dict1 = dict_of_dicts['sub_dict1']
[20:58:09] <aandrew> so if I can essentially "import" those sub_dicts then the rest of the script, which does a lot of processing of the data in the dicts) doesn't have to be rewritten to look in a dict_of_dicts instead
[20:58:16] <grym> aandrew: ok, but why does that make you want to make variables whose names you don't know
[20:58:38] <grym> aandrew: just pass dict_of_dicts['the key i want'] to the function that needs it
[20:58:40] <aandrew> deniska: well I can look for specific ones and do that, yes, I was looking for a more generic solution that didn't have to be kept "in sync" with the sender
[20:58:58] <grym> aandrew: there's no getting around API churn :(
[20:59:01] <aandrew> right, that's the kind of thing I was trying to avoid doing, but I can certainly do that
[20:59:16] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[20:59:22] <jinsun> aandrew: if it is a function accepting sub_dict1 and sub_dict2 keyword args, you can do func(**dict_of_dicts)
[20:59:37] *** Quits: maxzor (~maxzor@2a01cb04054faa0059ee5a859898ca83.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[20:59:52] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[21:00:10] *** Quits: bluedust (~bluedust@117.222.190.30) (Remote host closed the connection)
[21:00:11] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[21:00:14] *** Quits: vladoski (~vladoski@2001:b07:add:d406:f84b:bf0c:b1e4:eb1a) (Remote host closed the connection)
[21:00:15] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[21:00:23] <aandrew> jinsun: the data processing is (stupidly) using global dicts. It's due for refactoring but was hoping to avoid it for the moment
[21:00:31] <aandrew> guess there's no rest for the wicked :-)
[21:00:32] *** Joins: DerpGusta (~quassel@user/derpgusta)
[21:00:38] *** Guest67 is now known as blueagain
[21:00:41] <grym> aandrew: how predictable is your incoming data's schema
[21:00:46] <aandrew> grym: fairly predictable
[21:00:48] *** Joins: bluedust (~bluedust@117.222.190.30)
[21:00:48] *** Parts: blueagain (~Guest67@2a02:c206:3007:2042::1) ()
[21:00:58] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[21:01:13] <grym> aandrew: predictable enough to generate or write a class heirarchy to replace the dicts?
[21:01:17] *** Quits: Harlin_ (~DonQixote@75-163-174-136.clsp.qwest.net) (Remote host closed the connection)
[21:01:35] <grym> (then you can have tests that validate construction of that hierarchy, so at least you'll know when you need to fix something)
[21:01:40] <aandrew> I can make a parser that literally looks for the dict names I know about and says my_global_dict["some_dict_name"] = dict_of_dicts["some_dict_name"]
[21:02:46] <jpic>  /j gitlab
[21:02:51] <elias117> bjs https://gist.github.com/elias117/1e5bcdf53bedd674ee9fd5063a61ad15
[21:02:53] <deniska> aandrew: if you really want to, there's globals() dict, and you can mutate it
[21:02:54] *** Joins: shailangsa (~shailangs@host86-186-127-164.range86-186.btcentralplus.com)
[21:02:56] <elias117> is this correct?
[21:03:05] <deniska> aandrew: but that's only for global vars, can't do that for locals
[21:03:12] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 272 seconds)
[21:03:25] <deniska> aandrew: and there be dragons, imagine fun debugging a stray variable called `list` :)
[21:03:26] <elias117> I took the example from the article and created it
[21:04:21] *** Quits: mcope (~matt@user/mcope) (Quit: Konversation terminated!)
[21:04:27] <bjs> elias117: does it work if you run it?
[21:04:30] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 252 seconds)
[21:05:36] *** Quits: bluedust (~bluedust@117.222.190.30) (Ping timeout: 252 seconds)
[21:05:48] *** Quits: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net) (Remote host closed the connection)
[21:06:16] <bjs> elias117: I don't think queue.PriorityQueue is what you want to use, the `queue` module is for concurrent queues so they have a weird API
[21:06:29] *** Joins: masoudd (~masoudd@user/masoudd)
[21:06:32] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Read error: Connection reset by peer)
[21:06:37] *** Joins: mat001 (~mat001@72.28.108.216)
[21:06:49] <bjs> at least it should be `while not q.empty():` not `while q.not_empty`
[21:07:53] <bjs> (i'm not even sure how you found `not_empty` it's definitely not documented)
[21:08:04] *** Joins: bloody_ (~bloody@user/bloody)
[21:08:46] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[21:08:47] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[21:09:02] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[21:09:18] *** Joins: bluedust (~bluedust@117.222.190.30)
[21:09:49] *** Joins: ckdCreations (~ckdCreati@147.55.133.131)
[21:10:16] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[21:10:28] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[21:10:38] *** Joins: maxzor (~maxzor@2a01cb04054faa002a846f07b3ea5054.ipv6.abo.wanadoo.fr)
[21:10:44] *** Joins: chronos (~chronos@c-68-62-193-246.hsd1.fl.comcast.net)
[21:10:54] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:dcfd:93ee:4384:4372)
[21:10:59] *** Quits: maxzor (~maxzor@2a01cb04054faa002a846f07b3ea5054.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[21:11:06] *** chronos is now known as novapy
[21:11:18] *** Joins: maxzor (~maxzor@2a01cb04054faa002a846f07b3ea5054.ipv6.abo.wanadoo.fr)
[21:11:26] *** Quits: bloody (~bloody@user/bloody) (Ping timeout: 272 seconds)
[21:11:58] <novapy> Why is this showing up as invalid? os.mkdir(f"{os.environ["XDG_CONFIG_HOME"]}/yt-feed")
[21:12:01] *** Quits: bluedust (~bluedust@117.222.190.30) (Remote host closed the connection)
[21:12:19] *** Joins: akmod (~akmod@c-73-228-115-212.hsd1.ut.comcast.net)
[21:12:24] <masoudd> f""something""?
[21:12:45] *** Joins: thiras (~thiras@user/thiras)
[21:12:48] <novapy> Is it because I have two sets of "
[21:12:58] <masoudd> yeah
[21:13:08] <SnoopJ> novapy, you will need to escape the inner " or change them to ', yea.
[21:13:10] <novapy> I should make the inner ones ' then
[21:13:10] <masoudd> make the inner " to '
[21:13:18] <elias117> bjs I got it to work
[21:13:25] <elias117> the answer is 6 just like the article says
[21:13:41] <elias117> I just had to change it while not q.empty()
[21:13:58] <elias117> no idea why my intellisense said to use q.not_empty
[21:14:12] <novapy> Thanks, works now, I'm a stupid
[21:14:22] <SnoopJ> You might also be interested in the `appdirs` library which is aware of the XDG base directory specification
[21:14:30] <SnoopJ> (and does sane things on non-POSIX)
[21:14:47] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[21:14:53] <novapy> SnoopJ This won't work on windows or mac you mean?
[21:15:16] *** Joins: dreamon (~dreamon@p54b14d36.dip0.t-ipconnect.de)
[21:15:30] <han-solo> i don't think windows will have an env var with XDG_CONFIG_HOME...
[21:15:44] <SnoopJ> novapy, it's not even guaranteed to work on POSIX systems, tbh, that environment variable may not be defined.
[21:16:24] <novapy> I thought XDG was supposed to be like a standard? on linux anyway
[21:16:30] *** Quits: the_lanetly_052 (~the_lanet@185.30.91.186) (Ping timeout: 272 seconds)
[21:16:43] <SnoopJ> it is, but not all Linux systems implement that standard
[21:16:56] <elias117> bjs now I just need to figure out a way to make a path of nodes
[21:17:11] <SnoopJ> (it's pretty common on modern Linux distributions, though)
[21:17:20] <novapy> appdirs is not standerd library I assume?
[21:17:49] <SnoopJ> it's not part of the standard library, no, but it's more compliant with the XDG Base Dir specification than what you wrote (the specification has behavior for when the env var isn't defined)
[21:17:50] <grym> han-solo: appdirs will work cross platform, however
[21:17:59] <masoudd> you'll have to check. if it doesn't exist, use a fallback like ~/.config/yt-feed and for windows use like %APPDATA%/yt-feed
[21:18:06] *** Joins: pragmaticenigma (~pragmatic@user/pragmaticenigma)
[21:18:08] <han-solo> grym: yes
[21:19:27] <novapy> SnoopJ: Will I be able to just do what I've done here, but with appdirs? os.mkdir(f"{os.environ['XDG_CONFIG_HOME']}/yt-feed")
[21:20:16] *** Joins: savolla (~quassel@95.10.207.85)
[21:20:37] <SnoopJ> novapy, yes, the equivalent spelling is `os.mkdir(os.path.join(appdirs.user_config_dir(), "yt-feed"))`
[21:20:58] <SnoopJ> (and it will do the right thing when the variable is not set, which is *usually*; your code will just raise an exception)
[21:21:17] *** Joins: cuz (~user@38.140.58.234)
[21:21:20] <novapy> ah, ok
[21:21:21] <SnoopJ> «If $XDG_CONFIG_HOME is either not set or empty, a default equal to $HOME/.config should be used.» https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html
[21:21:46] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[21:21:52] *** Joins: summersault (~summersau@179.221.251.36)
[21:21:53] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[21:22:18] <SnoopJ> it's a one-file library licensed under MIT, so it would be easy to vendor it into your application if you don't want to have it as an external dependency :)
[21:22:56] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[21:23:02] *** Joins: sokan_ (~sokan@athedsl-303940.home.otenet.gr)
[21:23:16] *** Quits: sokan (~sokan@2a02:587:9e0b:9500:227:eff:fe16:865d) (Ping timeout: 245 seconds)
[21:23:24] *** sokan_ is now known as sokan
[21:24:11] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[21:24:18] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Ping timeout: 252 seconds)
[21:24:34] *** Joins: Guest6072 (~Guest60@pool-71-184-228-227.bstnma.fios.verizon.net)
[21:25:29] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[21:25:34] *** Parts: Guest6072 (~Guest60@pool-71-184-228-227.bstnma.fios.verizon.net) ()
[21:27:24] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[21:30:13] *** Quits: aphysically (~aphysical@user/aphysically) (Quit: aphysically)
[21:31:46] *** Joins: aphysically (~aphysical@user/aphysically)
[21:32:56] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[21:33:06] *** Quits: dreamon (~dreamon@p54b14d36.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[21:33:47] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[21:34:10] *** Joins: jayray (~jayray@user/jayray)
[21:34:33] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[21:34:52] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 272 seconds)
[21:35:16] *** Joins: djhankb (~djhankb@208.113.164.68)
[21:35:20] *** Joins: christer (~christer@2a02:8109:9f00:3e0c:a8c0:b196:6881:7586)
[21:35:56] *** Joins: aslicedbanjo (~aslicedba@host86-148-108-155.range86-148.btcentralplus.com)
[21:37:02] *** Quits: zmt00 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[21:37:48] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[21:39:09] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[21:39:11] *** cthulchu is now known as cth
[21:39:40] *** Quits: christer (~christer@2a02:8109:9f00:3e0c:a8c0:b196:6881:7586) (Quit: Leaving)
[21:39:55] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[21:41:21] *** Quits: cuz (~user@38.140.58.234) (Ping timeout: 252 seconds)
[21:41:27] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:4865:85c:e916:e599) (Read error: Connection reset by peer)
[21:43:02] *** Quits: ckdCreations (~ckdCreati@147.55.133.131) (Read error: Connection reset by peer)
[21:43:24] *** Joins: bluedust (~bluedust@117.222.190.30)
[21:43:54] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[21:45:04] *** Joins: summersault (~summersau@179.221.251.36)
[21:45:29] *** Quits: bluedust (~bluedust@117.222.190.30) (Remote host closed the connection)
[21:45:39] *** Joins: Qvark- (~christer@2a02:8109:9f00:3e0c:a8c0:b196:6881:7586)
[21:45:48] *** Joins: dreamon (~dreamon@p54b14153.dip0.t-ipconnect.de)
[21:45:48] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[21:46:01] *** Quits: dreamon (~dreamon@p54b14153.dip0.t-ipconnect.de) (Remote host closed the connection)
[21:48:46] *** Joins: summersault2 (~summersau@179.221.251.36)
[21:49:47] *** Quits: rovanion (~rovanion@h-46-59-13-236.A163.priv.bahnhof.se) (Read error: Connection reset by peer)
[21:50:12] *** Joins: greedom (~greedom@p200300de6708b7008831fccd1d5d85b1.dip0.t-ipconnect.de)
[21:50:19] *** Joins: rovanion (~rovanion@h-46-59-13-236.A163.priv.bahnhof.se)
[21:50:42] *** Quits: summersault (~summersau@179.221.251.36) (Ping timeout: 252 seconds)
[21:50:59] *** Quits: greedom (~greedom@p200300de6708b7008831fccd1d5d85b1.dip0.t-ipconnect.de) (Remote host closed the connection)
[21:51:30] *** Quits: summersault2 (~summersau@179.221.251.36) (Remote host closed the connection)
[21:51:47] *** Joins: greedom (~greedom@p200300de6708b7008831fccd1d5d85b1.dip0.t-ipconnect.de)
[21:53:00] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 240 seconds)
[21:53:05] *** Quits: pepper (~pepper@user/pepper) (Remote host closed the connection)
[21:53:20] *** Joins: crashrep (~crashrep@user/crashrep)
[21:53:23] *** Joins: c4017w_ (~c4017@209.52.68.8)
[21:53:28] *** Joins: pepper (~pepper@user/pepper)
[21:54:11] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[21:54:39] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[21:55:40] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[21:55:49] *** Quits: tomeaton17 (~tomeaton1@92.234.2.175) (Quit: Client closed)
[21:56:59] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[21:57:02] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[21:58:40] *** Quits: revolve (~u0_a227@82-132-246-92.dab.02.net) (Read error: Connection reset by peer)
[22:00:06] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[22:00:33] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[22:01:09] *** Quits: NealRame (~a@114.129.191.99) (Ping timeout: 252 seconds)
[22:01:14] *** Joins: djhankb (~djhankb@208.113.164.68)
[22:01:50] *** Quits: dvx (~dvx@5.181.92.64) (Quit: dvx)
[22:02:50] <elias117> cant I just take a graph and choose a start point at one node do dijikstra's then get a list of nodes to visit with a length and pick another node as a start point do dijikstra's and then repeat the process over and over
[22:02:54] *** Joins: parv (~quass@user/parv)
[22:03:09] <elias117> until all the nodes have had a turn to be the start point?
[22:03:21] <ssbr> elias117: what's the question?
[22:03:24] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[22:03:49] <ssbr> elias117: anyway yes, that's a thing you can do for a not very well connected graph, but idk the context here
[22:03:50] *** Joins: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net)
[22:04:15] *** Joins: Viewday116 (~Viewday@user/viewday)
[22:04:56] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:04:56] *** Joins: summersault (~summersau@179.221.251.36)
[22:05:09] *** Joins: NealRame (~a@202-63-70-107.ip4.superloop.com)
[22:05:16] *** Quits: dsrt^ (~dsrt@50.235.176.163) (Ping timeout: 272 seconds)
[22:05:32] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:05:39] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[22:05:39] *** Viewday116 is now known as Viewday11
[22:06:08] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[22:06:23] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:06:38] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:06:58] <elias117> yeah I have a fully connected graph
[22:07:20] <moonmoon> what are you trying to accomplish?
[22:07:37] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[22:08:12] *** Joins: luva3 (~luva@185.168.9.231)
[22:08:36] <savolla> hi everyone o/ I need a python library for visualizing 3d data like .step files or .stl files. Is there any library like that?
[22:08:47] *** Joins: cuz (~user@38.140.58.234)
[22:08:51] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 252 seconds)
[22:08:52] *** Joins: l4yer (~l4yer@2001:ac8:31:8900:1011:a2ec:d550:c4fb)
[22:10:55] <Wooble> blender?
[22:10:57] *** Quits: trueFragment (~trueFragm@2603-8080-6b06-fd1d-fc2e-5e0e-e860-cf1e.res6.spectrum.com) (Read error: Connection reset by peer)
[22:10:59] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:a5f0:9fc5:2:4ed5)
[22:11:16] *** Quits: kreg (~kreg@iqoqi060.uibk.ac.at) (Quit: Client closed)
[22:11:36] <Wooble> (I don't think it has native .step support, but you can buy an add-on or convert them to a format it can do externally)
[22:12:14] *** Quits: luva (~luva@146.70.62.252) (Ping timeout: 272 seconds)
[22:12:15] *** luva3 is now known as luva
[22:12:16] <deniska> savolla: what do you mean by "visualizing"?
[22:12:38] <deniska> savolla: if it's just viewing, I'd subprocess to some existing viewer
[22:12:49] <savolla> deniska: I mean reading the stl file and viewing it in a window
[22:13:24] *** Quits: cuz (~user@38.140.58.234) (Ping timeout: 240 seconds)
[22:13:39] <savolla> I also want to look around using the mouse
[22:14:22] *** Joins: funhouse (~funhouse@user/funhouse)
[22:14:45] <savolla> It would be great if you recommend me a library. then I can try to implement what I just said
[22:15:06] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:e5fe:8c5:2a77:336e) (Quit: Client closed)
[22:15:37] *** Joins: cuz (~user@38.140.58.234)
[22:16:14] *** Joins: canurabus (~canurabus@ip-24-156-182-149.user.start.ca)
[22:17:11] *** Joins: diddly_bop (~diddly_bo@107-196-11-132.lightspeed.wchtks.sbcglobal.net)
[22:18:17] *** Quits: tristan__ (~tristan@223.33.165.44) (Remote host closed the connection)
[22:18:36] *** Joins: tristan__ (~tristan@223.33.165.44)
[22:18:41] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[22:19:10] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[22:21:55] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 240 seconds)
[22:23:15] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[22:27:47] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[22:28:14] *** Joins: Harlin (~DonQixote@75-163-174-136.clsp.qwest.net)
[22:28:28] *** Quits: msk (~Thunderbi@89.205.124.40) (Remote host closed the connection)
[22:29:03] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[22:29:25] *** Quits: trace987 (~trace@user/trace) (Remote host closed the connection)
[22:29:45] *** Joins: summersault (~summersau@179.221.251.36)
[22:30:36] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 272 seconds)
[22:30:55] *** Quits: smoke_ (~smoke@user/smoke) (Remote host closed the connection)
[22:31:12] *** Joins: smoke_ (~smoke@user/smoke)
[22:31:20] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[22:31:59] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[22:32:21] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[22:32:27] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-b815-d0c3-2814-01b3.res6.spectrum.com)
[22:32:29] *** Quits: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it) (Ping timeout: 256 seconds)
[22:33:09] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[22:33:26] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Read error: Connection reset by peer)
[22:33:48] *** Quits: mat001 (~mat001@72.28.108.216) (Ping timeout: 240 seconds)
[22:33:59] *** Joins: mat001 (~mat001@72.28.108.216)
[22:34:28] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:e5fe:8c5:2a77:336e)
[22:34:59] *** Joins: quackattack (~dogworm@2404:440c:1312:6c00:f179:eb5c:b3c5:b813)
[22:35:23] *** Joins: paul424 (~tom@ip-5-172-232-120.multi.internet.cyfrowypolsat.pl)
[22:35:47] *** Joins: summersault (~summersau@179.221.251.36)
[22:36:54] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[22:38:19] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[22:39:06] *** Joins: summersault (~summersau@179.221.251.36)
[22:39:15] *** Joins: trace987 (~trace@user/trace)
[22:39:27] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[22:39:59] *** CoilWine is now known as Roey
[22:40:49] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[22:40:54] *** Joins: slav0nic (slav0nic@python.su)
[22:40:55] *** Quits: mat001 (~mat001@72.28.108.216) (Remote host closed the connection)
[22:41:21] *** Quits: nomic (~nomic@185.217.117.82) (Quit: Leaving)
[22:41:31] <canurabus> I'm trying to run a python script with sudo but I get a ModuleNotFoundError. I guess this is because when running as root, python will not look in my user home directory for modules. So I tried to add the path explicitly ("import sys; sys.path.append('/home/me/.local/lib/python3.6/site-packages'); import somemodule"), but I still get the same error. I printed out sys path and I dont see a difference between running as user and
[22:41:32] <canurabus> running as root once I add that path, but the import still fails. Any one know what I'm doing wrong?
[22:41:40] *** Joins: mat001 (~mat001@72.28.108.216)
[22:42:16] *** Joins: sarab (~sarab@183.87.117.24)
[22:43:25] <mefistofeles> canurabus: what's the output of `sudo python --version` ? Just checking if you may be using a different version for the system/sudo
[22:44:21] <canurabus> Same version, "Python 3.6.9" for both
[22:44:38] <canurabus> same output for `which python3` as well
[22:44:45] *** Quits: quackattack (~dogworm@2404:440c:1312:6c00:f179:eb5c:b3c5:b813) (Quit: Leaving)
[22:44:49] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[22:44:50] *** Quits: sarab (~sarab@183.87.117.24) (Client Quit)
[22:45:04] *** Quits: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:07] *** Joins: sarab (~sarab@183.87.117.24)
[22:45:09] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[22:45:48] *** Quits: nrg (~NRG@user/nrg) (Quit: ZNC - https://znc.in)
[22:46:23] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[22:46:50] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[22:46:58] *** Joins: nrg (~NRG@user/nrg)
[22:47:04] *** Joins: dardevelin (~dardeveli@91.26.38.10)
[22:47:17] <dardevelin> hello everyone
[22:48:51] *** Joins: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com)
[22:48:53] *** Joins: msk (~Thunderbi@89.205.124.7)
[22:50:11] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[22:50:19] *** Quits: msk (~Thunderbi@89.205.124.7) (Remote host closed the connection)
[22:51:03] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[22:51:04] *** Joins: nomic (~nomic@185.217.117.82)
[22:51:58] *** Joins: msk (~Thunderbi@89.205.124.7)
[22:52:34] <jinsun> canurabus: are you able to import it without root?
[22:52:51] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[22:52:53] *** Quits: msk (~Thunderbi@89.205.124.7) (Remote host closed the connection)
[22:53:11] <canurabus> jinsun: yes
[22:53:22] <fofoni> canurabus, if you want to run the system python (usually at /usr/bin/python) as sudo, you probably need to have installed that module with your distribution's package manager
[22:53:36] <fofoni> like apt-get install python-modulename, or something like that
[22:53:54] *** Joins: c4017w__ (~c4017@209.52.68.8)
[22:53:56] <fofoni> i mean, python3-modulename
[22:53:59] <canurabus> the version that ships with my package manager is quite old so I want to use pip to install it. But if I try 'sudo pip3 install <module>' that fails too
[22:54:07] <canurabus> (with another ModuleNotFoundError)
[22:54:21] <fofoni> i'm assuming you're using ubuntu 2018 (which is what ships with python 3.6.9)
[22:54:36] <canurabus> yes
[22:54:54] <jinsun> oh you've run pip as root, big mistake already made
[22:54:56] <fofoni> have you tried sudo python3 -m pip install, instead of pip3 install?
[22:55:08] *** Joins: msk (~Thunderbi@89.205.124.7)
[22:55:14] <fofoni> anyway, jinsun is right, the best thing to do would be create a virtual env
[22:56:06] <canurabus> well it didnt work as root, I initially only installed the package as user
[22:56:18] *** Joins: kristijonas (~kristijon@81-7-103-234.static.zebra.lt)
[22:56:50] <jinsun> running pip as root can lead to these kinds of weird permssion problems, then you have to fight with the os packager to clean it up or reinstall the whole os in the worst case
[22:57:06] <fofoni> last time i did that kind of thing in ubuntu 18, i had to apt-get install python3-distutils, and then create a virtual env with --without-pip, and then, inside the venv, i could finally downlod pip from bootstrap.pypa.org/get-pip.py
[22:57:21] <fofoni> or some url similar to that, i dont remeber the url exactly
[22:57:26] <jinsun> s/packager/package manager
[22:57:50] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[22:57:59] *** Joins: zmt00 (~zmt00@user/zmt00)
[22:58:12] <canurabus> well, the attempt to use pip with sudo failed. So I'm still stuck on not being able to run a python script as root because of the failed import... even though the path is clearly in sys.path.
[22:58:56] <fofoni> you can create a virtual env as a normal user, and install what you want to that venv, also as a normal user
[22:58:57] *** Quits: Wh0 (~V@103.240.204.159) (Quit: Leaving)
[22:59:17] <fofoni> only when finally actually running your application, you can use sudo if the application needs it
[22:59:24] <jinsun> canurabus: and why not run python as normal user where imports are working?
[23:00:16] *** Quits: stwange (~j@199.218.6.51.dyn.plus.net) (Quit: Leaving)
[23:00:31] <canurabus> the python script I'm using needs root. it manipulates iptables
[23:00:50] *** Quits: nomic (~nomic@185.217.117.82) (Quit: Leaving)
[23:01:02] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[23:01:10] *** Joins: dme86 (~dan@user/dan86)
[23:01:19] <pragmaticenigma> also should note, not a good idea to run pip commands outside of a venv in Linux type environments. Use the package manager for those. Many Linux Distros (Ubuntu being one of the more popular) use Python for system admin tools and maintanance. Installing from pip can break (I've done it and regretted and crippled my production systems)
[23:02:25] <jinsun> canurabus: okay, can you show the import error you get?
[23:03:09] <fofoni> canurabus, create venv as normal user, install packages to that venv as normal user, and then run python as root (but make sure you are running the binary inside the venv, not the system python)
[23:03:25] *** Joins: structoha (~structoha@gateway/tor-sasl/structoha)
[23:03:33] <xheimlich> I have a pandas question. Maybe a datetime question, it's blurry to me what belongs where.
[23:03:51] <jinsun> yeah you should have `export PIP_REQUIRE_VIRTUALENV=true` in your bashrc or profile or whatever
[23:04:07] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Quit: leaving)
[23:04:32] <jinsun> so pip would refuse even if you accidentally made the mistake of not using venv
[23:04:37] <pragmaticenigma> jinsun: thanks for that tip, I wasn't aware of it
[23:05:11] *** Quits: msk (~Thunderbi@89.205.124.7) (Remote host closed the connection)
[23:05:22] <xheimlich> anyway, given an index of time pd.DatetimeIndex, how can I get the datetime corresponding to "today at 10AM" for each timestamp?
[23:05:26] *** Joins: msk (~Thunderbi@89.205.124.7)
[23:05:30] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[23:05:43] *** Joins: nabaiste^ (~nabaiste@50.235.176.163)
[23:05:57] <xheimlich> (The daily information to be queried is in another dataframe; I was hoping to get a datetime object or string etc. and do other_df.loc[...] there)
[23:06:38] <xheimlich> pragmaticenigma: does this rule apply to docker containers?
[23:06:49] <fofoni> xheimlich, you want to replace the "time" part of the "datetime" object by "10AM" ?
[23:07:06] <xheimlich> typically based on alpine.
[23:07:11] <xheimlich> fofoni: yes!
[23:07:20] *** Quits: pro_z (~pro_z@37.214.50.160) (Ping timeout: 272 seconds)
[23:07:21] *** Quits: msk (~Thunderbi@89.205.124.7) (Remote host closed the connection)
[23:07:36] *** Joins: msk (~Thunderbi@89.205.124.7)
[23:08:00] <fofoni> looks like there exists a datetime.replace() method
[23:08:04] *** Joins: qbt (~edun@user/edun)
[23:08:40] <xheimlich> I know there are python stdlib datetime objects and sometimes they're not exactly the same as pandas datetime objects although conversion is usually there.
[23:08:56] <qbt> Is there some API that I can use to fetch Python documentation to my application?
[23:09:21] <fofoni> qbt, usually python classes and functions etc have a .__doc__ attribute
[23:09:26] <fofoni> that gives you the docstring
[23:09:35] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[23:09:37] <jinsun> xheimlich: yeah .replace(hour=10, minute=0, second=0, microsecond=0) would do
[23:09:48] *** Quits: greedom (~greedom@p200300de6708b7008831fccd1d5d85b1.dip0.t-ipconnect.de) (Remote host closed the connection)
[23:09:51] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:4436:314a:5bdb:f8ca) (Quit: WeeChat 3.0)
[23:09:52] <jinsun> xheimlich: pandas timestamps are subclass of datetime
[23:09:58] <qbt> fofoni, ah right... I should probably try that
[23:10:11] <jinsun> so datetime methods work on them too
[23:10:13] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903)
[23:10:29] <qbt> I'm writing a Discord bot for a Python course I'm running, and it'd be cool if students could fetch docs directly from there
[23:10:31] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 272 seconds)
[23:10:32] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903) (Client Quit)
[23:10:41] <fofoni> cool!
[23:10:46] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903)
[23:11:08] <qbt> I hope it will be :)
[23:11:18] <pragmaticenigma> xheimlich: I think it's a wise practice on any production environment. I'm not familiar with docker images, though I thought all the things needed had to be provided upfront
[23:11:39] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[23:13:19] *** Quits: Qvark- (~christer@2a02:8109:9f00:3e0c:a8c0:b196:6881:7586) (Quit: WeeChat 3.3)
[23:13:31] *** Joins: sarab97 (~sarab@183.87.117.24)
[23:13:54] <fofoni> I'd guess that an ok rule of thumb is: when using python-provided images (say python:3.7.12-alpine3.15) for a single python app, it is ok to use "system"-wide pip, since inside the container your whole "environment" is the whole "system" anyway
[23:13:55] <canurabus> jinsun: https://bpa.st/ECZQ
[23:13:55] <TML> xheimlich: I use pip rather than the distro packaging in my Docker containers
[23:14:14] <SnoopJ> +1
[23:14:26] *** Quits: sarab97 (~sarab@183.87.117.24) (Max SendQ exceeded)
[23:14:27] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[23:14:41] *** Joins: summersault (~summersau@179.221.251.36)
[23:14:55] *** Joins: sarab97 (~sarab@183.87.117.24)
[23:14:57] <fofoni> but otherwise, I wouldn't be sure how the image has packaged python, and then i might think about virtualenving my app even inside the container
[23:15:08] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[23:15:27] <Batzy> if i have if (a == f(b) and c == f(b)) does python recompute f(b) each time?
[23:15:38] <SnoopJ> Batzy, yes
[23:15:55] <SnoopJ> (it has to because f() might have side effects)
[23:15:57] <fofoni> canurabus, you can `print(yangson)` to make Python tell you from *where* the module was loaded
[23:16:20] <Batzy> so it's better to write this like val = f(b); if(a == val and c == val)
[23:16:25] <fofoni> if it was loaded from ~user/.local/etc then it won't work with sudo system python
[23:16:28] <jinsun> canurabus: can you print yangson.__file__ and yangson.__path__ when you were able to import it
[23:16:38] <SnoopJ> Batzy, it depends what ruler you're using to measure "better"
[23:16:45] <Batzy> SnoopJ: it would be faster
[23:17:11] <SnoopJ> Batzy, "faster" is nebulous. Is it faster-enough to matter? That's a question for your application. If the evaluation is expensive, capturing it to a name will be an improvement.
[23:17:19] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[23:17:28] <Batzy> it's not very expensive
[23:18:00] <Batzy> SnoopJ: it has a cost and it's being done millions and millions of times though
[23:18:00] *** Quits: smoke_ (~smoke@user/smoke) (Remote host closed the connection)
[23:18:03] <SnoopJ> the call itself isn't particularly expensive. it's not *free*, of course, but if you're microoptimizing, you want to be guided by a profile.
[23:18:19] <Batzy> 'guided by a profile' ?
[23:18:20] *** Joins: smoke_ (~smoke@user/smoke)
[23:18:22] <SnoopJ> "measure it"
[23:18:47] <Batzy> right
[23:18:50] <canurabus> Its loaded from the user local site-packages directory. https://bpa.st/ALIA
[23:19:22] <fofoni> usually, I think that what you want in there is for the code to be clear, and assigning to a variable makes it clear to the reader that you *want* `val` to be the same each time
[23:19:31] *** Quits: aslicedbanjo (~aslicedba@host86-148-108-155.range86-148.btcentralplus.com) (Quit: Leaving.)
[23:19:35] *** Quits: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it) (Quit: Leaving.)
[23:19:41] *** Quits: sarab97 (~sarab@183.87.117.24) (Client Quit)
[23:19:47] *** Quits: sarab (~sarab@183.87.117.24) (Quit: Leaving)
[23:20:00] *** Quits: haslo (uid390999@id-390999.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[23:20:11] <fofoni> canurabus, then it wont work
[23:21:02] <canurabus> Could you elaborate? Why can't python running as root load the module from another users home dir?
[23:21:04] <jinsun> yeah looks like permissions
[23:21:21] *** Quits: dardevelin (~dardeveli@91.26.38.10) (Quit: Client closed)
[23:21:27] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 252 seconds)
[23:21:46] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[23:23:20] <deniska> canurabus: it's a potential security risk because you are allowing a user to modify a program written to be run as root
[23:23:35] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[23:23:50] *** Joins: hackers (~self@user/hackers)
[23:23:53] *** hackers is now known as remote
[23:23:56] <SnoopJ> Batzy, e.g. in this trivial example, the question becomes "is ~100 nsec important?"  100 nsec * 10 million is "only" a second. Is that significant? Well, it depends on the application. https://bpa.st/IBRQ
[23:24:40] <Batzy> SnoopJ: im just going to do it
[23:24:42] <SnoopJ> There's not much point in this kind of microoptimization unless you have reason to believe it will offer the kind of speedup you're after.
[23:24:43] <Batzy> it's easy enough
[23:24:57] *** Quits: savolla (~quassel@95.10.207.85) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:25:07] <Batzy> SnoopJ: in my case now though i have some big nested if's
[23:25:14] <Batzy> actually it's just 4 times nested
[23:25:15] <SnoopJ> it can't really hurt anything to capture it to a name, though, names are pretty inexpensive (but not free!)
[23:25:18] <jinsun> canurabus: I never liked the idea of user site packages, so not sure what exactly is preventing the import, I'd just make a venv and install the package there and run the script from the venv python
[23:25:35] <Batzy> SnoopJ: the variables get deallocated pretty quickly
[23:25:36] <Batzy> so
[23:25:46] *** Joins: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net)
[23:25:46] <canurabus> okay I'll try a venv
[23:26:31] *** Quits: upsala (~zcb@185.213.155.252) (Quit: WeeChat 3.4)
[23:26:36] *** Quits: smoke_ (~smoke@user/smoke) (Quit: Leaving)
[23:26:44] <SnoopJ> Batzy, if you're thinking about changing the way you write code up-front, like I said it can't really hurt anything, and sometimes you have many cases for re-use. If you are trying to accelerate something, doing it without some data about the application's existing performance is fraught.
[23:26:50] <nedbat> Batzy: btw, instead of `val = f(b); if(a == val and c == val)` you can use ` if a == c == f(b):`
[23:26:52] *** Joins: smoke_ (~smoke@user/smoke)
[23:27:14] <nedbat> (which is compact, and only evaluates f(b) once)
[23:27:18] <SnoopJ> Sometimes "data" is "I know from a napkin estimate where this application spends a lot of time, and know how to make that faster"
[23:27:23] <Batzy> nedbat: i can't really do it here but thank you
[23:27:32] <nedbat> Batzy: interesting, why not?
[23:27:33] <SnoopJ> and sometimes it's "I profiled the application and look, here are the calls that cost the most time"
[23:27:44] <Batzy> nedbat: for an uninteresting reason
[23:28:09] *** Joins: upsala (~zcb@185.213.155.252)
[23:28:11] *** Joins: Masterphi (~Masterphi@user/masterphi)
[23:28:21] <pragmaticenigma> fofoni: that makes a lot of sense about the env of docker being one instance, for the purposes of running the application. certainly good advice, when in doubt about the global environment, work within a virtual one
[23:28:34] <Batzy> it's more like if f(a, g(a), h(g(a)) == c and f(a, g(a), h(g(a)) == c or something
[23:28:47] <Batzy> so g(a) is being computed multiple times
[23:28:51] <Wooble> nedbat: depends if equality is transitive on your objects :)
[23:29:01] <Batzy> or wait i meant
[23:29:09] <Batzy> something else, but you get the point
[23:29:22] <SnoopJ> those expressions are starting to look like things that are just harder to read without good names, anyway
[23:29:32] <nedbat> Batzy: if those are all pure functions, then it would still work, right?
[23:29:51] *** Joins: sarab (~sarab@183.87.117.24)
[23:30:01] *** Quits: sarab (~sarab@183.87.117.24) (Remote host closed the connection)
[23:30:01] <Batzy> pure function?
[23:30:17] <Repiphany> You could also abuse some walrus
[23:30:35] *** Quits: structoha (~structoha@gateway/tor-sasl/structoha) (Ping timeout: 240 seconds)
[23:30:39] <Batzy> where is walrus? 3.9?
[23:30:45] <Batzy> i forget when it got introduced
[23:30:52] <Repiphany> 3.8
[23:30:53] <fofoni> i think 3.8 or 3.9
[23:31:01] <Wooble> Batzy: that's not walrus, just chaining ==
[23:31:02] <Batzy> ok this is running on 3.9 so i can do that
[23:31:18] *** Quits: Masterphi (~Masterphi@user/masterphi) (Client Quit)
[23:31:23] *** Joins: cgrage (~cgrage@107.175.102.158)
[23:31:25] *** Joins: sarab (~sarab@183.87.117.24)
[23:31:26] <nedbat> Batzy: pure function meaning no side-effects.  the same arguments produce the same return.
[23:31:33] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:31:38] <Batzy> nedbat: yes they're pure functions then
[23:32:13] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[23:32:18] *** Quits: sarab (~sarab@183.87.117.24) (Max SendQ exceeded)
[23:32:29] <Batzy> nedbat: so i had something like if f(a, g(a), h(g(a)) and f(a, i(a), h(i(a))
[23:32:35] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[23:32:47] *** Joins: sarab (~sarab@183.87.117.24)
[23:33:04] <Batzy> so it's better to store g(a) before hand, and if f(a, g(a), h(g(a))) THEN compute and store i(a)
[23:33:23] <Repiphany> f(a, g_a := g(a), h(g_a))
[23:33:35] <Repiphany> Very not reader friendly
[23:33:37] <Batzy> what the fuck is that
[23:33:41] <Batzy> you can do that?
[23:33:49] <Repiphany> That's what I meant by walrus abuse
[23:33:50] <SnoopJ> fofoni, a note about the dockerhub python images: I believe they are maintained by the docker community, I don't think PSF has anything "official"
[23:34:02] <Batzy> Repiphany: oh i was thinking elvis..damn
[23:34:08] <Batzy> that's more readable though
[23:34:09] <Batzy> ill do it
[23:35:17] *** Joins: Guest19 (~Guest19@2601:647:5280:2a50:346d:814b:4421:eb22)
[23:35:17] <fofoni> SnoopJ, oops
[23:35:22] <foo> I noticed one of our devs did: results = list[SomeSQLAlchemyModel] = get_results(db, some_thing) ... I believe this is typing the results to be results with certain database objects. I generally don't do this, although my sense is this is a best practice. The only concern/thought I had is now our database models are imported into even more places... which, loosely, seems to "expand the spiderweb of database
[23:35:28] <foo> models and where they're imported." I do like the readability of this, this easily shows what a function returns. Can someone confirm "yes, he is following best practices" ? I imagine yes.
[23:35:47] <deniska> foo: should be :, not = between the name and the type
[23:35:51] <fofoni> foo, you meant a colon instead of the first = sign there?
[23:35:52] <Batzy> Repiphany: python is smart enough to compute each clause separately right?
[23:36:03] <Batzy> if i have if ( a and b) it stops when a == False
[23:36:06] <Batzy> and never computes b right?
[23:36:14] <Repiphany> If you're using `and`, yes
[23:36:15] <fofoni> Batzy, yes
[23:36:16] <grawity> 'and' short-circuits, yes
[23:36:17] <deniska> Batzy: it stops with the first falsy value, yes
[23:36:29] <foo> deniska / fofoni - whoops, my error, heh. goes to shows, I don't do this.
[23:36:29] *** Joins: Auron (Auron956@user/auron)
[23:36:33] <foo> deniska / fofoni - he had a :
[23:36:46] <foo> deniska / fofoni - safe to assume he's following best practices?
[23:37:07] *** Quits: mat001 (~mat001@72.28.108.216) (Read error: Connection reset by peer)
[23:37:10] <deniska> foo: I don't annotate local vars, I sometimes annotate function args
[23:37:10] <Batzy> right
[23:37:10] <Batzy> ok
[23:37:13] <Batzy> well thanks
[23:37:22] <fofoni> foo, if you're ok with depending on python >=3.9 then ok, otherwise you'd have to `from typing import List` and then use List[SomeType
[23:37:23] *** Quits: sarab (~sarab@183.87.117.24) (Client Quit)
[23:37:46] *** Joins: sarab (~sarab@183.87.117.24)
[23:37:48] <Wooble> foo: honestly if you're using a list of objects of that model in your code it's already pretty coupled to it so importing it doesn't seem like a huge problem
[23:37:53] <foo> deniska: yeah, that's another thing... this is a local var. He also annotates (so this is what it's called) function args.
[23:38:27] *** Quits: msk (~Thunderbi@89.205.124.7) (Remote host closed the connection)
[23:38:28] <foo> Wooble: the importing happens in another python moodule. Yeah, it should be fine. I'm simply trying to standardize our code somehow
[23:38:31] *** Joins: mat001 (~mat001@72.28.108.216)
[23:38:39] *** Quits: sarab (~sarab@183.87.117.24) (Max SendQ exceeded)
[23:38:42] *** Joins: msk (~Thunderbi@89.205.124.7)
[23:38:46] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[23:38:47] <foo> We rarely ever annotate... anywhere... and then we hire someone who annotates everything, function args and local vars... I'm trying to figure out what makes sense for a consistent pattern.
[23:38:48] *** Joins: Wh0 (~V@103.240.204.159)
[23:38:53] <jinsun> foo: a bit unnecesary I would say because usually the return type of a function is known and type checkers can infer it
[23:38:55] <foo> deniska: why don't you annotate local vars?
[23:39:08] *** Joins: sarab (~sarab@183.87.117.24)
[23:39:10] <fofoni> if it's a global var, instead of local to a function, then I believe mypy forces you to annotate them (but i'm not sure)
[23:39:10] <foo> jinsun: a bit unnecessary on function args or local vars?
[23:39:17] <deniska> foo: annotating is really only valuable if are running a type checker
[23:39:26] <deniska> foo: I, mostly, don't
[23:39:31] *** Joins: Fubbe (~ThePhilgr@151.40.115.120)
[23:39:42] <jinsun> foo: local var if it is just the result of a function
[23:40:07] <Wooble> deniska: I mostly annotate things pycharm has trouble inferring when I get annoyed I have to actually type attribute names :)
[23:40:11] <foo> what is a "type checker" ? I wonder if this guy worked on a previous project that did that.
[23:40:16] *** Quits: Fubbe (~ThePhilgr@151.40.115.120) (Client Quit)
[23:40:26] <fofoni> foo, check out mypy
[23:40:40] *** Joins: rajkosto (~rajkosto@93-86-127-103.dynamic.isp.telekom.rs)
[23:40:53] <fofoni> it tells you if you are calling functions with the right argument types
[23:40:54] *** Quits: cuz (~user@38.140.58.234) (Ping timeout: 272 seconds)
[23:40:57] <deniska> foo: there're a few, mypy is one of them
[23:41:01] <fofoni> or if you are forgetting an argument to a function, etc
[23:41:03] <jinsun> foo: there are lots to choose from, mypy, pyright, pyre, pytype and pycharm's built in thing
[23:41:14] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[23:41:30] <foo> jinsun: ok, so I know this dev uses pycharm... so maybe that's why he does this?
[23:41:33] <fofoni> i think they're really useful on large code bases
[23:41:33] <foo> I'll have to ask
[23:41:41] <deniska> Wooble: I use an editor from the 90s which just autocompletes with words from every open file :)
[23:41:45] <jinsun> foo: the ones people normally use are mypy and/or pyright, or pycharm's thing if you are using pycharm
[23:41:47] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[23:41:48] <fofoni> once you become used to annotating everything
[23:42:16] *** Quits: tristan__ (~tristan@223.33.165.44) (Remote host closed the connection)
[23:42:16] <foo> if deniska doesn't do this stuff, and I like how deniska does stuff, then by association - I'm biased to not doing this, haha.
[23:42:19] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:5c57:7f45:b808:8adb)
[23:42:31] <jinsun> foo: yes, with the type checker on, the IDE becomes much better at auto-complete and catches more errors as you type
[23:42:36] <foo> I mean, it doesn't hurt anything. But out of 3 devs we only have 1 guy who does this...
[23:42:36] *** Joins: tristan__ (~tristan@223.33.165.44)
[23:42:37] <deniska> foo: Well, I'm not always doing stuff in the most optimal way :)
[23:42:45] <foo> deniska: :P
[23:42:48] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 272 seconds)
[23:42:51] <deniska> foo: python didn't have annotations for a long time, and I'm just not used to writing them
[23:42:57] <foo> deniska: it's valentines day, I will stay romantic about how I think you do things. :P
[23:42:58] <Batzy> you guys helped me make this really efficient actually. Does anyone know what the fastest lib is for modular matrix multiplication? I'm using sympy currently and i'm noticing most of my time is spent on matrix multiplication
[23:43:12] <foo> deniska: same.
[23:43:15] <foo> well, sorta.
[23:43:23] *** Quits: msk (~Thunderbi@89.205.124.7) (Remote host closed the connection)
[23:43:38] *** Joins: msk (~Thunderbi@89.205.124.7)
[23:44:00] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 252 seconds)
[23:44:14] <foo> I guess, perhaps a different question, would you all advise adopting annotating for function args and local vars? This codebase is touched by 2-3 people, we're not a huge team. Will likely never have over 5 devs.
[23:44:20] <foo> Would be curious what nedbat and ChrisWarrick say about that, too ^
[23:45:09] <ssbr> foo: it makes code clearer for nearly no cost. If it's a pain, you can always fall back to Any.
[23:45:44] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[23:45:53] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:dcfd:93ee:4384:4372) (Ping timeout: 250 seconds)
[23:45:55] <ssbr> I once tried to see if a buggy __mod__ overload was dead code. An impossible task without type annotations. :(
[23:45:57] <deniska> foo: first you have to set up a type checker everyone uses as the part of development process
[23:46:00] <foo> ssbr: thank you. I guess it's less of a pain, but I see it in my code reviews... and it's simply an inconsistency in how we code. I'm trying to decide: do we standardize on doing that? do I have other devs learn annotyping? Do we do function vars only and not local args? Do I just let one guy who cares about it do it?
[23:46:02] <ChrisWarrick> foo: I’m a huge fan of static typing. In a smaller project, you get the advantage of easier adoption.
[23:46:06] *** Joins: bluedust (~bluedust@117.222.190.30)
[23:46:10] <jinsun> foo: it depends on the people working on the code, looks like you have a situation similar to my work where majority doesn't want to annotate, so it is optional, but forcing to not annotate would annoy me, so that is also not done :D
[23:46:11] <deniska> foo: then it's not just a line noise, and does provide value :)
[23:46:40] <ChrisWarrick> foo: code style and best practices is usually something the team should discuss and come to agreement on
[23:46:45] <foo> There is some value to readability on it, I'll give it that.
[23:46:58] *** Joins: cjb (~cjb@user/cjb)
[23:47:08] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[23:47:13] <deniska> I've seen just wrong types specified in our codebase plenty of times because we don't run any checkers :\
[23:47:31] <foo> ChrisWarrick: yeah, I'll start a discussion on this, once I have a bit more context. It sounds like, annotating can be done in function args and locally... options: A) we all do it, B) some people do it, C) no one does it (per jinsun point, C is likely out)
[23:47:45] <foo> deniska: these are checkers that get ran in a CI/CD environment?
[23:47:51] *** Quits: sajuukthanatoskh (~Sajuuktha@ip5f5bd786.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[23:48:02] <deniska> foo: editor hooks, commit hooks, ci/cd checks etc
[23:48:12] <ChrisWarrick> foo: Best option: A') you introduce `mypy --strict` into your CI/CD/precommit and everyone has to do it
[23:48:20] *** Joins: Fubbe (~ThePhilgr@151.40.115.120)
[23:48:44] <foo> deniska: yeah, git commit hooks... I like that.
[23:49:09] *** Joins: bomb-on_ (~bomb-on@194.144.47.113)
[23:49:22] <patchie> https://pastebin.com/skHX6BYm <-- anyone who can help me show images in emails?
[23:49:30] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Ping timeout: 252 seconds)
[23:49:38] <foo> ChrisWarrick: if you say that's the best option, then I like best options and best practices. I assume that would run both in function args and locally, correct?
[23:49:57] <ChrisWarrick> foo: yes
[23:50:03] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[23:50:14] <SnoopJ> Batzy, "modular" as in "modular arithmetic?" Is there a reason you aren't using numpy?
[23:50:18] <foo> the thought of how much we'd have to refactor is a bit overwhelming... but, I'm not opposed to it. And this could be a good task for a newer guy.
[23:50:37] <jinsun> foo: if mypy says you need to annotate, then annotate, otherwise optional (and if you turn on mypy --strict it will ask a lot)
[23:50:40] <Batzy> SnoopJ: i was having a hard time finding how to invert a matrix mod n in numpy
[23:50:59] <SnoopJ> that sounds like a completely separate operation
[23:51:02] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 272 seconds)
[23:51:08] <foo> jinsun: well, ChrisWarrick said so. so....
[23:51:09] *** Quits: bluedust (~bluedust@117.222.190.30) (Ping timeout: 252 seconds)
[23:51:10] <foo> jinsun: :)
[23:51:10] <Batzy> yes, well this made me need sympy
[23:51:20] <Batzy> so i figured why not just use sympy
[23:51:28] <Batzy> is sympy much slower than numpy with matrix mult mod n?
[23:51:36] <SnoopJ> sympy is going to be much slower in general, yes
[23:51:42] <Batzy> great
[23:51:44] *** Quits: sarab (~sarab@183.87.117.24) (Quit: Leaving)
[23:52:02] <SnoopJ> like several orders of magnitude slower, as far as I understand it (sympy is explicitly about symbolic representations)
[23:52:11] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[23:52:40] <Batzy> SnoopJ: there is another problem though
[23:52:45] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[23:52:46] <SnoopJ> but I don't know much about modular arithmetic, not sure if numpy can do it
[23:53:01] <SnoopJ> err, can do modular inverse*, it can certainly do modular arithmetic
[23:53:02] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[23:53:06] <Batzy> say that mod n fits in a numpy 64 bit integer, but if we multiply two residues mod n and then reduce mod n we might produce more than 64 bits
[23:53:07] <SnoopJ> but inversion isn't really arithmetic
[23:53:15] *** Quits: pragmaticenigma (~pragmatic@user/pragmaticenigma) (Quit: Leaving)
[23:53:19] *** Joins: mickey8 (~user@user/mickey)
[23:53:20] *** Quits: Fubbe (~ThePhilgr@151.40.115.120) (Quit: Fubbe)
[23:53:31] <Batzy> I think sympy handles that case better
[23:53:35] <SnoopJ> okay
[23:53:39] <Batzy> because 'unlimited integers'
[23:53:54] *** Joins: Fubbe (~ThePhilgr@151.40.115.120)
[23:54:15] *** Quits: Fubbe (~ThePhilgr@151.40.115.120) (Client Quit)
[23:54:20] *** Joins: cuz (~user@38.140.58.234)
[23:54:23] *** Quits: msk (~Thunderbi@89.205.124.7) (Remote host closed the connection)
[23:54:24] *** Joins: c4017w_ (~c4017@209.52.68.8)
[23:54:35] <canurabus> What is the correct way to run a python script in a venv as root? Its a bit confusing...
[23:54:39] *** Joins: msk (~Thunderbi@89.205.124.7)
[23:54:54] *** Joins: sarab (~sarab@183.87.117.24)
[23:54:56] <SnoopJ> canurabus, run `path/to/venv/bin/python3 path/to/script.py` as root
[23:55:17] <foo> Ok, different question: the value of typing: better readability, less chance of error, easier for new devs to adopt codebase and know what returns what, possibly mypy --strict git hook checks to prevent functions returning incorrect types, better pyCharm / VS Code suggestions, ... anything else?
[23:55:26] <foo> cons of typing: too strict, takes time
[23:55:28] <foo> Am I missing anything?
[23:56:00] <SnoopJ> foo, by "typing" do you mean type annotations in general? There are a few libraries that use annotations for library functionality (pydantic, typer, pycontracts all come to mind)
[23:56:23] <SnoopJ> uh FastAPI too
[23:56:40] <foo> SnoopJ: I think annotations in general, yes. annotating function args / local vars
[23:56:47] <foo> Trying to think through this... it seems like it makes sense to adopt.
[23:56:47] <canurabus> SnoopJ, do I run that after running activate?
[23:56:56] <SnoopJ> canurabus, you don't need to activate the venv to use that
[23:57:06] *** Joins: djapo (~archangel@user/djapo)
[23:57:19] <fofoni> i believe it doesn't "take time" so much, even if you don't consider the time you gain back by avoiding pitfalls and mistakes
[23:57:24] *** Joins: jetchisel (jetchisel@user/jetchisel)
[23:57:26] *** Quits: qbt (~edun@user/edun) (Quit: ChatZilla 0.10 [SeaMonkey 2.53.10.2/20211220132845])
[23:57:32] <Batzy> SnoopJ: so are the options for me like deal with sympy's slowness, deal with numpy's possible overflow, or try a custom implementation?
[23:57:48] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[23:57:53] <SnoopJ> it's also not an all-or-nothing proposition, gradual typing is a thing
[23:58:12] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[23:58:21] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[23:58:46] <jinsun> yeah I you don't go for strict mode directly you can have gradual typing
[23:58:47] <SnoopJ> Batzy, I don't really have a good understanding of your requirements
[23:58:51] <foo> SnoopJ: agreed, and that's a bit of a relief. I have 2 codebases already going, one of them 100k+ lines, another one 10,000 - 20,000 lines of code... so it's a bit overwhelming to imagine refactoring everything.
[23:59:10] <SnoopJ> Batzy, and even if I did, I don't think I know the domain well enough to make recommendations
[23:59:34] <SnoopJ> foo, I think of it in the same vein as coverage: aiming for 100% may very well be foolish
[23:59:43] <Batzy> SnoopJ: it's just modular matrix multiplication and (possibly) inversion
[23:59:49] <Batzy> that's my only requirement
[23:59:53] <Batzy> i want the fastest thing to do that
