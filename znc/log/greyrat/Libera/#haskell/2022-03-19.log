[00:02:10] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[00:05:32] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Ping timeout: 240 seconds)
[00:05:41] <dsal> I found understanding type cardinality helpful.  Though it does open one up to being annoyed when something like `Maybe [a]` shows up.
[00:14:08] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[00:18:33] <dminuoso> dsal: Are you still counting that one?
[00:18:45] <dminuoso> Let me know when you're done!
[00:19:11] *** Joins: _ht (~quassel@231-169-21-31.ftth.glasoperator.nl)
[00:19:22] <dminuoso> Cantor says this one is countable. :>
[00:22:50] <dsal> It effectively just has two zeros.  It's only done because of a limitation in how aeson creates instances.
[00:23:15] *** Joins: acidjnk (~acidjnk@p200300d0c7049f36d0988f567c670268.dip0.t-ipconnect.de)
[00:25:10] <geekosaur> I admit to having used Maybe [a], but only when there was an actual difference between Nothing and Just []
[00:27:28] <monochrom> A parser would have just cause for parsing "abc" to Just ['a', 'b', 'c'], "" to Just [], and "01" to Nothing.
[00:28:03] *** Joins: lbseale (~ep1ctetus@user/ep1ctetus)
[00:28:16] <monochrom> Uh haha I didn't intend the pun on "just" I swear!
[00:36:51] *** Joins: Guest|7 (~Guest|7@dynamic-046-114-005-013.46.114.pool.telefonica.de)
[00:37:02] <Guest|7> i  can not write min 3,4 3,2 why is that?
[00:37:26] <monochrom> Wrong syntax.  minimum [3, 4, 3, 2]
[00:37:36] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[00:37:51] *** Quits: Guest|7 (~Guest|7@dynamic-046-114-005-013.46.114.pool.telefonica.de) (Client Quit)
[00:37:57] *** Quits: yuvi (~uv125@192.54.96.185) (Quit: WeeChat 2.8)
[00:38:34] <geekosaur> I am not sure that was what they meant?
[00:38:37] <geekosaur> :t min
[00:38:38] <lambdabot> Ord a => a -> a -> a
[00:39:09] <geekosaur> `3,4` is not a number (Haskell requires decimal points, not commas) nor is it a tuple (requires parentheses)
[00:39:14] <sm> min (3,4) (3,2) ?
[00:40:05] <monochrom> Oh I see, I misread a space for a comma.
[00:40:13] *** Joins: pavonia (~user@user/siracusa)
[00:40:14] <monochrom> min 3.4 3.2
[00:40:16] *** Joins: kenran (~kenran@200116b82baf00008565b4314491a38d.dip.versatel-1u1.de)
[00:40:20] <monochrom> Still, wrong syntax.
[00:40:48] <geekosaur> in any case they left
[00:41:52] *** Joins: jgeerds (~jgeerds@55d4548e.access.ecotel.net)
[00:42:49] *** Joins: Guest|7 (~Guest|7@dynamic-046-114-005-013.46.114.pool.telefonica.de)
[00:42:59] *** Joins: romesrf (~romes@44.190.189.46.rev.vodafone.pt)
[00:43:26] <Guest|7> hm that did not work either.. maybe because my "prelude" now is ghci and not ghci> ?How can I change that?
[00:43:28] *** Joins: alp (~alp@user/alp)
[00:43:35] *** Quits: alt-romes (~romes@44.190.189.46.rev.vodafone.pt) (Ping timeout: 256 seconds)
[00:44:08] <monochrom> What is the exact unabridged error message?
[00:44:31] <geekosaur> unlikely it's that, but :set prompt "ghci> "
[00:44:32] <Guest|7>  Non type-variable argument in the constraint: Num (t -> a)
[00:44:32] <Guest|7>       (Use FlexibleContexts to permit this)
[00:44:33] <Guest|7>     * When checking the inferred type
[00:44:33] <Guest|7>         it :: forall a t. (Ord a, Num a, Num t, Num (t -> a)) => a
[00:44:42] <geekosaur> (sorry for missing that part the othger day)
[00:44:56] <geekosaur> [18 21:09:09] <geekosaur> `3,4` is not a number (Haskell requires decimal points, not commas) nor is it a tuple (requires parentheses)
[00:45:02] <geekosaur> which I said after you left
[00:45:03] <Guest|7> thank you geekosaur and monochrom of course
[00:46:24] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[00:47:40] <Guest|7> so it does not recognise [3, 4, 3, 2] as numbers? Did i understand that right?
[00:48:14] *** Joins: Akansha (~Akansha@2401:4900:51cc:45cf:d174:6cec:9c35:b85e)
[00:48:36] <geekosaur> monochrom missed it was `min` which takes two numbers, and described `minimum` which takes a list of numbers
[00:48:42] <geekosaur> which did you want?
[00:49:05] <monochrom> Yeah, minimum of 4 numbers? minimum of 2 numbers? minimum of 2 tuples?
[00:49:53] *** Quits: coot (~coot@213.134.190.95) (Quit: coot)
[00:50:12] <dsal> > minimum (1,2)
[00:50:13] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Read error: Connection reset by peer)
[00:50:14] <lambdabot>  2
[00:50:17] <dsal> Nice
[00:50:36] <geekosaur> and that bloody instance, yes
[00:50:48] *** Quits: Akansha (~Akansha@2401:4900:51cc:45cf:d174:6cec:9c35:b85e) (Client Quit)
[00:50:50] *** Joins: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[00:50:52] <monochrom> > minimum (False, 2)
[00:50:53] <dsal> Somewhere, right now, that bug is in production code.
[00:50:54] <lambdabot>  2
[00:51:16] *** Quits: _ht (~quassel@231-169-21-31.ftth.glasoperator.nl) (Remote host closed the connection)
[00:52:51] *** Joins: unyu (~pyon@user/pyon)
[00:54:22] <geekosaur> Guest|7, did we miss an answer?
[00:54:37] <geekosaur> [18 21:19:05] <monochrom> Yeah, minimum of 4 numbers? minimum of 2 numbers? minimum of 2 tuples?
[00:55:01] <Guest|7> <interactive>:28:6: error: parse error on input `,'       this is my error after i typed min 3,4 3,2  what can i do?
[00:55:41] <Guest|7> thank you so much for your effort geekosaur i appreciate it
[00:55:54] <geekosaur> we're not understanding what you are trying to do there
[00:56:17] <geekosaur> is `3,4` supposed to be a floating point number? if so, you must use a decimal point, not a comma
[00:56:28] <geekosaur> is it supposed to be a tuple? if so, it needs parentheses
[00:56:36] <geekosaur> > min 3.4 3.2
[00:56:37] <lambdabot>  3.2
[00:56:44] <geekosaur> > min (3,4) (3,2)
[00:56:45] <lambdabot>  (3,2)
[00:58:00] <dsal> > minimum [3, 4, 3, 2]   -- or less likely, but this one?
[00:58:02] <lambdabot>  2
[01:00:00] *** Quits: Guest|7 (~Guest|7@dynamic-046-114-005-013.46.114.pool.telefonica.de) (Ping timeout: 252 seconds)
[01:00:49] <sm> minimum [3, 43, 2] ?
[01:01:10] *** Quits: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Quit: leaving)
[01:01:28] <geekosaur> guess we lost them again
[01:01:41] <geekosaur> wonder how much of that trhey saw before pinging out
[01:03:18] <sm> enough to resolve this conundrum, we hope
[01:06:47] *** Quits: romesrf (~romes@44.190.189.46.rev.vodafone.pt) (Quit: WeeChat 3.4)
[01:12:15] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 240 seconds)
[01:14:35] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[01:19:17] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 240 seconds)
[01:20:50] *** Joins: deadmarshal_ (~deadmarsh@95.38.229.235)
[01:23:51] *** Joins: sjanssen (~sjanssenm@2001:470:69fc:105::1:61d8)
[01:24:57] *** Quits: deadmarshal_ (~deadmarsh@95.38.229.235) (Ping timeout: 240 seconds)
[01:25:06] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[01:25:42] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[01:30:30] *** Quits: fockerized (~nut@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr) (Quit: WeeChat 3.3)
[01:31:21] *** Quits: jstolarek (~jstolarek@staticline-31-183-185-185.toya.net.pl) (Ping timeout: 252 seconds)
[01:42:02] *** Quits: nexus (~nexus@85-238-77-75.pool.digikabel.hu) (Ping timeout: 240 seconds)
[01:43:47] *** Joins: nexus (~nexus@fibhost-66-208-150.fibernet.hu)
[01:44:39] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[01:49:47] *** Quits: __monty__ (~toonn@user/toonn) (Quit: leaving)
[01:51:30] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[01:54:48] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[01:58:41] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[01:59:10] *** Joins: Tuplanolla (~Tuplanoll@91-159-69-98.elisa-laajakaista.fi)
[02:12:33] *** Quits: kenran (~kenran@200116b82baf00008565b4314491a38d.dip.versatel-1u1.de) (Quit: WeeChat info:version)
[02:13:02] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Ping timeout: 250 seconds)
[02:13:42] *** Quits: lagooned (~jme@108-208-149-42.lightspeed.hstntx.sbcglobal.net) (Ping timeout: 252 seconds)
[02:13:52] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Quit: Leaving)
[02:13:56] *** Quits: michalz (~michalz@185.246.204.43) (Remote host closed the connection)
[02:14:12] *** Quits: cosimone (~user@93-44-187-176.ip98.fastwebnet.it) (Ping timeout: 240 seconds)
[02:14:14] *** Joins: lagooned (~lagooned@108-208-149-42.lightspeed.hstntx.sbcglobal.net)
[02:16:13] *** Quits: acidjnk (~acidjnk@p200300d0c7049f36d0988f567c670268.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[02:18:32] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 240 seconds)
[02:19:31] *** Quits: Midjak (~Midjak@82.66.147.146) (Quit: This computer has gone to sleep)
[02:19:41] *** Quits: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net) (Remote host closed the connection)
[02:19:58] *** Joins: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net)
[02:23:31] *** Quits: dhouthoo (~dhouthoo@178-117-36-167.access.telenet.be) (Quit: WeeChat 3.4)
[02:27:41] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Quit: WeeChat 3.3)
[02:28:33] *** Joins: Pickchea (~private@user/pickchea)
[02:32:17] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 240 seconds)
[02:32:57] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[02:33:50] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[02:34:01] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[02:34:55] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[02:41:29] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-2420-4733-60a5-9d17.res6.spectrum.com)
[02:43:44] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[02:45:25] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[02:50:14] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:dc77:d173:a9b9:d810) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:51:02] *** Quits: vorpuni (~pvorp@2001:861:3881:c690:3f02:cfaf:23c0:9d3b) (Remote host closed the connection)
[02:53:11] *** Joins: yauhsien_ (~yauhsien@61-231-56-96.dynamic-ip.hinet.net)
[02:53:19] *** Joins: k8yun__ (~k8yun@user/k8yun)
[02:56:19] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-2420-4733-60a5-9d17.res6.spectrum.com) (Quit: Leaving)
[02:57:02] *** Quits: k8yun_ (~k8yun@user/k8yun) (Ping timeout: 240 seconds)
[02:57:17] *** Quits: yauhsien_ (~yauhsien@61-231-56-96.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[02:57:20] *** Quits: k8yun__ (~k8yun@user/k8yun) (Remote host closed the connection)
[02:57:45] *** Joins: k8yun__ (~k8yun@user/k8yun)
[02:59:07] *** Joins: NeuralBets (~NeuralBet@139.167.204.168)
[02:59:55] *** Parts: NeuralBets (~NeuralBet@139.167.204.168) (Leaving)
[03:01:14] *** Joins: k8yun_ (~k8yun@user/k8yun)
[03:04:00] *** Quits: flupe (~baboum@radon.sbi.re) (Remote host closed the connection)
[03:04:10] *** Quits: takuan (~takuan@178-116-218-225.access.telenet.be) (Remote host closed the connection)
[03:04:36] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 240 seconds)
[03:05:35] *** Quits: k8yun__ (~k8yun@user/k8yun) (Ping timeout: 256 seconds)
[03:07:41] *** Quits: k8yun_ (~k8yun@user/k8yun) (Read error: Connection reset by peer)
[03:08:07] *** Joins: flupe (~baboum@radon.sbi.re)
[03:08:11] *** Joins: k8yun_ (~k8yun@user/k8yun)
[03:13:15] *** Joins: jushur (~human@user/jushur)
[03:14:29] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[03:16:09] *** Quits: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8) (Remote host closed the connection)
[03:16:35] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[03:17:55] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:22:16] *** Joins: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8)
[03:29:06] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[03:32:33] *** Quits: lbseale (~ep1ctetus@user/ep1ctetus) (Quit: Leaving)
[03:34:14] *** Joins: Guest27 (~Guest27@2601:281:d47f:1590::6b90)
[03:37:35] <Guest27> Does Parsec not export the SourcePos constructor? Trying to use tokenPrim and can't define the position update function because `Not in scope: data constructor 'SourcePos'`
[03:38:57] *** Quits: alp (~alp@user/alp) (Ping timeout: 252 seconds)
[03:40:07] <dminuoso> Guest27: use `updatePosChar`
[03:40:25] <Guest27> dminuoso I'm using custom tokens
[03:40:37] <dminuoso> Guest27: You can reconstruct it with newPos then
[03:41:11] <geekosaur> looks to me like it is in Text.Parsec and Text.Parsec.Pos. what version of parsec?
[03:41:12] <dminuoso> sourceName, sourceLine and sourceColumn are accessors into SourcePos essentially
[03:41:22] <dminuoso> geekosaur: the data constructor is not exported.
[03:41:27] <geekosaur> ah
[03:41:31] <Guest27> geekosaur 3.1.13.0
[03:41:52] <dminuoso> Guest27: so `newPos` is your constructor, and sourceName/sourceLine/sourceColumn let you deconstruct a SourcePos.
[03:41:53] <geekosaur> right"the abstract data type SourcePos"… sorry
[03:41:54] <dminuoso> Is this enough?
[03:42:15] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 240 seconds)
[03:42:21] <Guest27> dminuoso Gotcha, thanks
[03:44:55] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[03:46:32] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[03:47:42] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:52:17] *** Quits: Guest27 (~Guest27@2601:281:d47f:1590::6b90) (Ping timeout: 256 seconds)
[03:52:25] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[03:53:56] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[04:00:00] *** Quits: wroathe (~wroathe@user/wroathe) (Quit: Lost terminal)
[04:03:31] *** Quits: jgeerds (~jgeerds@55d4548e.access.ecotel.net) (Ping timeout: 250 seconds)
[04:05:01] *** Joins: corisco[m] (~coriscokd@2001:470:69fc:105::1:dea6)
[04:07:53] *** Quits: Tuplanolla (~Tuplanoll@91-159-69-98.elisa-laajakaista.fi) (Quit: Leaving.)
[04:08:23] *** Joins: sciencentistguy (~sciencent@hacksoc/ordinary-member)
[04:09:12] *** Quits: yauhsien (~Yau-Hsien@61-231-56-96.dynamic-ip.hinet.net) (Read error: Connection reset by peer)
[04:09:47] *** Quits: bontaq (~user@ool-45779fe5.dyn.optonline.net) (Ping timeout: 250 seconds)
[04:10:35] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[04:13:01] *** Quits: nexus (~nexus@fibhost-66-208-150.fibernet.hu) (Ping timeout: 240 seconds)
[04:13:40] *** Joins: Guest27 (~Guest27@2601:281:d47f:1590::6b90)
[04:15:08] *** Joins: nexus (~nexus@92-249-141-183.pool.digikabel.hu)
[04:15:17] *** Quits: k8yun_ (~k8yun@user/k8yun) (Ping timeout: 256 seconds)
[04:17:46] *** Quits: Topsi (~Tobias@dyndsl-095-033-019-103.ewe-ip-backbone.de) (Read error: Connection reset by peer)
[04:19:15] *** Quits: xff0x (~xff0x@i121-117-52-147.s41.a013.ap.plala.or.jp) (Ping timeout: 256 seconds)
[04:21:06] *** Quits: hughjfchen (~hughjfche@vmi556545.contaboserver.net) (Remote host closed the connection)
[04:21:30] *** Joins: hughjfchen (~hughjfche@vmi556545.contaboserver.net)
[04:30:50] *** Quits: sciencentistguy (~sciencent@hacksoc/ordinary-member) (Ping timeout: 250 seconds)
[04:33:08] *** Parts: jakalx (~jakalx@base.jakalx.net) ()
[04:34:12] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[04:35:07] *** Joins: jakalx (~jakalx@base.jakalx.net)
[04:35:15] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[04:36:31] *** Joins: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67)
[04:38:09] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[04:50:28] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[04:55:14] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.4)
[04:55:55] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[04:56:36] *** Quits: Natch (~natch@c-67bae255.014-297-73746f25.bbcust.telenor.se) (Ping timeout: 240 seconds)
[04:56:53] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Ping timeout: 256 seconds)
[04:56:55] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[04:58:10] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[04:58:38] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[05:02:13] *** Quits: Guest27 (~Guest27@2601:281:d47f:1590::6b90) (Quit: Client closed)
[05:03:17] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[05:06:31] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[05:06:31] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[05:06:31] *** Joins: wroathe (~wroathe@user/wroathe)
[05:09:21] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Ping timeout: 256 seconds)
[05:10:12] *** Joins: razetime (~quassel@117.254.35.162)
[05:12:43] *** Joins: namkeleser (~namkelese@101.175.155.55)
[05:15:15] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[05:16:10] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[05:18:12] *** Quits: Psybur (~Psybur@mobile-166-171-56-243.mycingular.net) (Remote host closed the connection)
[05:18:45] *** Quits: mmhat (~mmh@55d47413.access.ecotel.net) (Quit: WeeChat 3.4.1)
[05:29:20] *** Joins: xff0x (~xff0x@i121-117-52-147.s41.a013.ap.plala.or.jp)
[05:41:31] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-2420-4733-60a5-9d17.res6.spectrum.com)
[05:41:52] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[05:46:55] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[05:48:42] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[05:51:35] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[05:52:46] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4.1)
[06:00:02] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[06:04:19] *** Quits: razetime (~quassel@117.254.35.162) (Ping timeout: 256 seconds)
[06:07:31] *** Joins: vysn (~vysn@user/vysn)
[06:07:57] *** Quits: namkeleser (~namkelese@101.175.155.55) (Quit: Client closed)
[06:10:04] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Ping timeout: 250 seconds)
[06:11:38] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:14:44] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:14:58] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:15:06] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:15:20] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:15:28] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:15:42] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:15:49] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:16:03] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:16:11] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:16:24] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:16:32] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:16:46] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:16:53] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:17:07] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:17:15] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:17:26] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 268 seconds)
[06:17:29] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:17:37] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:17:50] *** Quits: ChaiTRex (~ChaiTRex@user/chaitrex) (Remote host closed the connection)
[06:17:51] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:17:58] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:18:12] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:18:17] *** Joins: ChaiTRex (~ChaiTRex@user/chaitrex)
[06:18:20] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:18:36] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:18:43] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:18:57] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:19:05] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:19:19] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:19:27] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:19:41] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:19:49] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:20:03] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:20:08] *** Joins: razetime (~quassel@117.254.35.162)
[06:20:11] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:20:25] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:20:32] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:20:46] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:20:54] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:21:08] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:21:15] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:21:30] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:21:37] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:21:52] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:21:59] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:22:16] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:22:24] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:22:39] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:22:46] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:22:59] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:23:07] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:23:21] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:23:23] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[06:23:24] *** Quits: nexus (~nexus@92-249-141-183.pool.digikabel.hu) (Ping timeout: 252 seconds)
[06:23:28] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:23:45] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:23:53] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:24:06] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:24:12] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Read error: Connection reset by peer)
[06:24:14] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:24:28] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:24:36] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:24:51] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:24:59] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:25:06] *** Joins: nexus (~nexus@87-97-12-230.pool.digikabel.hu)
[06:25:13] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:25:21] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:25:34] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:25:42] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:25:57] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:26:05] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:26:19] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:26:27] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:26:42] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:26:50] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:27:04] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:27:11] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:27:26] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:27:33] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:27:48] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:27:56] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:28:10] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:28:18] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:28:32] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:28:40] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:28:53] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:29:01] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:29:15] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:29:23] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:29:37] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:29:45] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:30:00] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:30:07] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:30:22] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:30:30] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:30:44] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:30:51] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:31:05] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:31:13] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:31:26] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:31:34] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:31:48] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:31:56] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:32:12] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:32:19] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:32:34] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:32:41] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:32:56] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:33:04] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:33:23] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:33:25] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:33:40] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:33:47] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:34:01] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:34:09] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:34:23] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:34:30] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:34:44] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:34:52] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:35:09] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:35:17] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:35:31] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:35:39] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:35:53] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:36:01] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:36:15] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:36:22] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:36:37] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:36:45] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:37:01] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:37:06] *** Joins: Everything (~Everythin@37.115.210.35)
[06:37:09] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:37:25] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:37:33] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:37:46] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:37:54] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:38:09] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:38:10] *** Quits: wroathe (~wroathe@user/wroathe) (Quit: Lost terminal)
[06:38:16] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:38:34] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:38:41] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:38:55] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:39:03] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:39:17] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:39:25] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:39:40] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:39:47] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:40:01] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:40:09] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:40:23] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:40:31] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:40:45] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:40:52] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:41:07] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:41:14] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:41:29] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:41:36] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:41:50] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:41:58] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:42:12] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:42:19] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:42:33] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:42:41] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:42:55] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:43:03] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:43:11] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[06:43:18] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:43:26] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:43:42] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:43:49] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:44:04] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:44:11] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:44:24] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:44:32] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:44:47] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:44:54] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:45:09] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[06:45:17] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:51:15] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 240 seconds)
[06:51:40] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[06:55:29] *** Joins: k8yun_ (~k8yun@user/k8yun)
[06:58:04] *** Joins: k8yun__ (~k8yun@user/k8yun)
[06:59:54] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[07:01:54] *** Quits: k8yun_ (~k8yun@user/k8yun) (Ping timeout: 252 seconds)
[07:10:03] *** Quits: rekahsoft (~rekahsoft@cpe0008a20f982f-cm64777d666260.cpe.net.cable.rogers.com) (Ping timeout: 256 seconds)
[07:14:36] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[07:26:39] *** Quits: razetime (~quassel@117.254.35.162) (Ping timeout: 252 seconds)
[07:30:57] *** Joins: yauhsien (~yauhsien@61-231-56-96.dynamic-ip.hinet.net)
[07:34:02] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[07:34:12] *** alMalsamo is now known as lumberjack123
[07:35:00] *** Quits: yauhsien (~yauhsien@61-231-56-96.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[07:49:58] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[07:55:21] *** Quits: CiaoSen (~Jura@p200300c95727d4002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[07:56:33] *** Quits: Unicorn_Princess (~Unicorn_P@46-54-248-191.static.kate-wing.si) (Remote host closed the connection)
[08:00:22] *** Joins: deadmarshal_ (~deadmarsh@95.38.231.226)
[08:08:05] *** Joins: yuvi (~uv125@user/yuvi)
[08:08:11] *** Joins: razetime (~quassel@117.254.35.162)
[08:09:40] <yuvi> hi all, im working on a function where given a regex i must return a generator for strings it accepts. my current attempt involves combining multiple generators of chars (Gen Char) into a Gen String to be returned; is this possible to do?
[08:10:01] *** Parts: Everything (~Everythin@37.115.210.35) ()
[08:12:17] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Ping timeout: 240 seconds)
[08:13:16] <pavonia> Depends on what Gen is
[08:13:26] <pavonia> :t sequence
[08:13:27] <lambdabot> (Traversable t, Monad m) => t (m a) -> m (t a)
[08:15:52] <yuvi> unsure what you mean
[08:16:44] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[08:16:44] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[08:16:44] *** Joins: wroathe (~wroathe@user/wroathe)
[08:19:06] <pavonia> You ask if it's possible to do, but the answer certainly depends on how Gen is exactly defined in that question
[08:20:22] <pavonia> Is it the QuickCheck Gen?
[08:21:22] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Ping timeout: 250 seconds)
[08:21:52] *** Joins: dsrt^ (~dsrt@50-243-220-243-static.hfc.comcastbusiness.net)
[08:22:39] *** Joins: yauhsien (~Yau-Hsien@61-231-56-96.dynamic-ip.hinet.net)
[08:22:55] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 256 seconds)
[08:25:17] *** Quits: boxscape_ (~boxscape_@p4ff0b60b.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[08:27:21] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[08:27:38] *** Joins: img (~img@user/img)
[08:29:08] <yuvi> pavonia: yes
[08:29:23] *** Quits: nexus (~nexus@87-97-12-230.pool.digikabel.hu) (Ping timeout: 256 seconds)
[08:31:02] *** Joins: nexus (~nexus@92-249-141-176.pool.digikabel.hu)
[08:41:00] *** Quits: phma (phma@2001:5b0:210d:5e78:4ddc:46f7:a015:1ae8) (Read error: Connection reset by peer)
[08:41:35] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[08:42:12] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 240 seconds)
[08:42:25] *** Joins: phma (phma@2001:5b0:211f:ad58:d57e:9b56:2014:519f)
[08:54:53] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Ping timeout: 256 seconds)
[09:01:53] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[09:02:10] *** Joins: img (~img@user/img)
[09:04:20] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[09:16:02] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[09:16:50] *** Quits: mvk (~mvk@2607:fea8:5cc3:7e00::45ee) (Ping timeout: 250 seconds)
[09:18:08] *** Quits: boborygmy_ (~bob@pool-173-54-217-168.nwrknj.fios.verizon.net) (Ping timeout: 250 seconds)
[09:18:19] <yuvi> got it working! lol
[09:25:38] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:25:44] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[09:26:17] *** Joins: coot (~coot@213.134.190.95)
[09:30:31] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[09:30:31] *** Quits: k8yun__ (~k8yun@user/k8yun) (Quit: Leaving)
[09:32:46] *** Joins: yauhsien_ (~yauhsien@61-231-56-96.dynamic-ip.hinet.net)
[09:39:43] *** Quits: yuvi (~uv125@user/yuvi) (Quit: WeeChat 2.8)
[09:45:37] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 240 seconds)
[09:55:24] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Ping timeout: 240 seconds)
[10:02:01] *** Joins: Intel (~Intel@2604:2800:fff9:aa1:91d6:2ce4:e484:666c)
[10:03:38] *** Joins: Pickchea (~private@user/pickchea)
[10:05:09] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[10:09:42] *** Intel is now known as Intel_
[10:09:43] *** Intel_ is now known as Intel__
[10:09:49] *** Quits: Intel__ (~Intel@2604:2800:fff9:aa1:91d6:2ce4:e484:666c) (Quit: Konversation terminated!)
[10:10:02] *** Joins: Intel__ (~Intel@2604:2800:fff9:aa1:91d6:2ce4:e484:666c)
[10:10:22] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[10:12:19] *** Quits: Intel__ (~Intel@2604:2800:fff9:aa1:91d6:2ce4:e484:666c) (Client Quit)
[10:12:32] *** Joins: Intel__ (~Intel@2604:2800:fff9:aa1:91d6:2ce4:e484:666c)
[10:12:32] *** Intel__ is now known as polaro77Icant
[10:18:13] *** Joins: takuan (~takuan@178-116-218-225.access.telenet.be)
[10:25:11] *** Joins: vglfr (~vglfr@88.155.114.173)
[10:26:02] *** Quits: nexus (~nexus@92-249-141-176.pool.digikabel.hu) (Ping timeout: 240 seconds)
[10:26:58] *** Quits: yauhsien (~Yau-Hsien@61-231-56-96.dynamic-ip.hinet.net) (Quit: Leaving)
[10:27:51] *** Joins: nexus (~nexus@85-238-93-26.pool.digikabel.hu)
[10:32:55] *** Quits: yauhsien_ (~yauhsien@61-231-56-96.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[10:37:11] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[10:46:03] *** Joins: acidjnk (~acidjnk@pd9e0b763.dip0.t-ipconnect.de)
[10:52:13] *** Quits: dsrt^ (~dsrt@50-243-220-243-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[10:55:06] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[10:56:09] *** Quits: razetime (~quassel@117.254.35.162) (Ping timeout: 256 seconds)
[10:56:25] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[10:58:54] *** Joins: ThadeuPaula[m] (~thadeudep@2001:470:69fc:105::1:ded7)
[11:02:15] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[11:04:22] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[11:06:17] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[11:10:44] *** Joins: razetime (~quassel@117.254.35.35)
[11:10:48] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[11:13:12] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[11:14:32] *** Quits: vglfr (~vglfr@88.155.114.173) (Ping timeout: 240 seconds)
[11:15:29] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[11:18:37] *** Quits: razetime (~quassel@117.254.35.35) (Ping timeout: 240 seconds)
[11:19:41] *** Joins: vorpuni (~pvorp@2001:861:3881:c690:82d1:970:67b:8b82)
[11:25:43] *** Quits: vorpuni (~pvorp@2001:861:3881:c690:82d1:970:67b:8b82) (Read error: Connection reset by peer)
[11:26:07] *** Joins: yauhsien (~Yau-Hsien@61-231-56-96.dynamic-ip.hinet.net)
[11:27:08] *** Joins: vorpuni (~pvorp@2001:861:3881:c690:6eb8:8a:422a:cdeb)
[11:32:52] *** Joins: mmhat (~mmh@55d478bb.access.ecotel.net)
[11:33:51] *** Joins: yauhsien_ (~yauhsien@61-231-56-96.dynamic-ip.hinet.net)
[11:34:13] *** Joins: bahamas (~lucian@84.232.140.158)
[11:37:55] *** Joins: razetime (~quassel@117.254.35.215)
[11:39:24] *** Quits: yauhsien_ (~yauhsien@61-231-56-96.dynamic-ip.hinet.net) (Ping timeout: 250 seconds)
[11:39:50] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[11:39:58] *** Joins: yauhsien_ (~yauhsien@61-231-56-96.dynamic-ip.hinet.net)
[11:40:14] *** Quits: Batzy (~quassel@user/batzy) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[11:40:20] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[11:40:26] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[11:40:32] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Ping timeout: 240 seconds)
[11:41:03] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[11:41:16] *** Joins: Batzy (~quassel@user/batzy)
[11:44:15] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[11:44:28] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[11:46:21] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[11:50:55] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[11:52:07] *** Joins: zaquest (~notzaques@5.130.79.72)
[11:53:19] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[11:56:18] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 250 seconds)
[11:56:20] *** Joins: vglfr (~vglfr@88.155.114.173)
[11:59:01] *** Joins: jstolarek (~jstolarek@staticline-31-183-185-185.toya.net.pl)
[12:02:36] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Ping timeout: 240 seconds)
[12:06:03] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[12:06:06] *** Quits: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net) (Quit: zzz)
[12:16:07] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[12:16:48] *** Joins: xkuru (~xkuru@user/xkuru)
[12:20:22] *** Joins: nulluint (uid547282@user/nulluint)
[12:20:28] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Quit: Leaving)
[12:20:35] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 256 seconds)
[12:20:35] *** Quits: polaro77Icant (~Intel@2604:2800:fff9:aa1:91d6:2ce4:e484:666c) (Quit: Konversation terminated!)
[12:27:36] *** Joins: _ht (~quassel@231-169-21-31.ftth.glasoperator.nl)
[12:30:54] *** Quits: coot (~coot@213.134.190.95) (Quit: coot)
[12:32:08] *** Joins: nishant (~Nishant@49.37.242.151)
[12:32:38] *** Joins: briandaed (~root@109.95.142.93.r.toneticgroup.pl)
[12:35:18] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[12:39:32] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Ping timeout: 240 seconds)
[12:41:25] *** Parts: jakalx (~jakalx@base.jakalx.net) ()
[12:46:47] *** Joins: Vajb (~Vajb@2001:999:62:aa00:7f5a:4f10:c894:3813)
[12:46:52] *** Joins: jakalx (~jakalx@base.jakalx.net)
[12:48:44] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[12:49:02] *** Quits: briandaed (~root@109.95.142.93.r.toneticgroup.pl) (Remote host closed the connection)
[12:51:07] *** Joins: fendor (~fendor@77.119.192.235.wireless.dyn.drei.com)
[13:00:33] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[13:01:23] *** Quits: jstolarek (~jstolarek@staticline-31-183-185-185.toya.net.pl) (Ping timeout: 256 seconds)
[13:03:28] *** Quits: nexus (~nexus@85-238-93-26.pool.digikabel.hu) (Ping timeout: 250 seconds)
[13:05:18] *** Joins: nexus (~nexus@85-238-93-86.pool.digikabel.hu)
[13:09:00] *** Joins: mastarija (~mastarija@2a05:4f46:e04:6000:6999:e31b:f6a3:322d)
[13:10:32] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 240 seconds)
[13:12:39] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[13:17:14] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[13:21:32] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 240 seconds)
[13:26:02] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 240 seconds)
[13:34:48] *** Joins: jstolarek (~jstolarek@staticline-31-183-185-185.toya.net.pl)
[13:36:22] *** Joins: romesrf (~romes@44.190.189.46.rev.vodafone.pt)
[13:39:02] *** Joins: Natch (~natch@c-67bae255.014-297-73746f25.bbcust.telenor.se)
[13:39:32] *** Quits: jstolarek (~jstolarek@staticline-31-183-185-185.toya.net.pl) (Ping timeout: 240 seconds)
[13:45:01] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[13:51:42] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[13:51:55] *** Joins: fef (~thedawn@user/thedawn)
[13:59:38] *** Joins: Tuplanolla (~Tuplanoll@91-159-69-98.elisa-laajakaista.fi)
[14:00:12] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[14:00:23] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[14:00:47] *** Quits: yauhsien_ (~yauhsien@61-231-56-96.dynamic-ip.hinet.net) (Remote host closed the connection)
[14:03:49] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:dc77:d173:a9b9:d810)
[14:05:06] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[14:05:47] *** Joins: yauhsien_ (~yauhsien@61-231-56-96.dynamic-ip.hinet.net)
[14:05:59] *** Joins: jgeerds (~jgeerds@55d4548e.access.ecotel.net)
[14:07:27] *** Joins: Midjak (~Midjak@82.66.147.146)
[14:10:21] *** Quits: yauhsien_ (~yauhsien@61-231-56-96.dynamic-ip.hinet.net) (Ping timeout: 245 seconds)
[14:13:39] *** Quits: nexus (~nexus@85-238-93-86.pool.digikabel.hu) (Ping timeout: 252 seconds)
[14:14:31] *** Quits: jgeerds (~jgeerds@55d4548e.access.ecotel.net) (Ping timeout: 245 seconds)
[14:14:45] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[14:15:18] *** Joins: nexus (~nexus@193-226-233-20.pool.digikabel.hu)
[14:20:35] *** Quits: lumberjack123 (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 240 seconds)
[14:22:52] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[14:34:51] *** Joins: unit73e (~emanuel@2001:818:e8dd:7c00:32b5:c2ff:fe6b:5291)
[14:36:06] <unit73e> hello. almost have XP3 extract done. I ended up first making a "Get [File name bytestring]" structure and that makes it much easier to handle IO. Someone suggested here to do that, so thanks to that person.
[14:36:56] <unit73e> you know, I have avoided record syntax lately. using a case works just as good for most cases.
[14:37:39] <unit73e> is record syntax avoided in general or not really, or not really?
[14:38:27] <unit73e> most of a the time I don't need "getters"
[14:40:05] <hpc> you can combine record syntax and generics to generate lenses for all the fields, and then it's super nice
[14:40:57] <hpc> also sometimes, even ignoring getters it's nice to just name all the fields
[14:41:08] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Ping timeout: 252 seconds)
[14:41:19] <hpc> data FooConfig = FooConfig Bool Bool Bool String Bool Int Int Double Bool doesn't really tell you anything
[14:41:27] <unit73e> I did read about that some time ago. It ends up being kind of like OO languages. Yes naming fields is the nice part.
[14:42:53] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[14:43:15] <unit73e> you can use aliases for the Bool Bool Bool, but yeah I guess when the data is complex might as well use record syntax with generics
[14:43:24] *** Quits: razetime (~quassel@117.254.35.215) (Ping timeout: 240 seconds)
[14:43:54] <fendor[m]> Can I re-expose the module documentation for module I am re-exposing?
[14:44:55] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[14:45:01] *** Parts: jakalx (~jakalx@base.jakalx.net) (Error from remote client)
[14:45:42] *** Joins: razetime (~quassel@117.254.35.215)
[14:46:54] <fendor[m]> Mostly, I want to re-expose a module, write a reasonable module header once that's automatically included wherever I am re-exporting my module
[14:46:59] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[14:47:27] <unit73e> so you want to reuse the same documentation?
[14:47:34] <unit73e> in your new module?
[14:47:39] <unit73e> something like that?
[14:47:40] *** Joins: machinedgod (~machinedg@24.105.81.50)
[14:49:12] *** Quits: nexus (~nexus@193-226-233-20.pool.digikabel.hu) (Ping timeout: 250 seconds)
[14:49:34] <unit73e> fendor[m], maybe this? https://haskell-haddock.readthedocs.io/en/latest/markup.html?highlight=reference#re-exporting-an-entire-module
[14:49:39] <unit73e> or the next section?
[14:49:46] *** Joins: nexus (~nexus@80-95-82-203.pool.digikabel.hu)
[14:51:29] <unit73e> I didn't even know that was possible. nice feature
[14:51:47] <fendor[m]> yeah, I re-expose a module twice, but I want at both locations some introduction so users are less confused
[14:52:04] *** Joins: jakalx (~jakalx@base.jakalx.net)
[14:53:08] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[14:53:50] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[14:54:26] *** Joins: boborygmy_ (~bob@pool-173-54-217-168.nwrknj.fios.verizon.net)
[14:54:40] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[14:56:06] <fendor[m]> ah, wtf... If I add a section $doc, and define it a little later, it works, but if I write it directly in the export section, the documentation is swallowed
[14:56:47] <fendor[m]> eh... good enough
[14:56:48] <fendor[m]> thanks!
[15:00:52] <Franciman> hi fendor[m] 
[15:01:48] *** Joins: __monty__ (~toonn@user/toonn)
[15:03:15] <fendor[m]> hi Franciman! 
[15:13:49] *** Joins: `2jt (~jtomas@210.red-88-24-179.staticip.rima-tde.net)
[15:13:57] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[15:17:22] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 250 seconds)
[15:18:40] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[15:22:28] *** Joins: alp (~alp@user/alp)
[15:25:12] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[15:27:30] *** Quits: barrucadu (~barrucadu@carcosa.barrucadu.co.uk) (Quit: Rebooting for upgrades...)
[15:27:47] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[15:28:03] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[15:28:04] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[15:28:10] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Remote host closed the connection)
[15:29:04] *** Quits: `2jt (~jtomas@210.red-88-24-179.staticip.rima-tde.net) (Ping timeout: 250 seconds)
[15:31:22] *** Joins: barrucadu (~barrucadu@carcosa.barrucadu.co.uk)
[15:32:55] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 240 seconds)
[15:37:07] *** Joins: CiaoSen (~Jura@p200300c95727d4002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[15:37:33] *** Quits: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo) (Remote host closed the connection)
[15:37:46] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[15:38:21] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 252 seconds)
[15:42:17] *** Quits: acidjnk (~acidjnk@pd9e0b763.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[15:44:03] *** Quits: __monty__ (~toonn@user/toonn) (Quit: leaving)
[15:47:56] *** Joins: yauhsien_ (~yauhsien@61-231-56-96.dynamic-ip.hinet.net)
[15:53:31] *** Joins: komikat (~komikat@183.82.152.122)
[15:55:29] *** Quits: xff0x (~xff0x@i121-117-52-147.s41.a013.ap.plala.or.jp) (Quit: xff0x)
[15:57:01] *** Joins: bahamas (~lucian@84.232.140.158)
[16:02:29] *** alMalsamo is now known as lumberjack123
[16:02:32] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[16:03:08] *** Joins: sciencentistguy (~sciencent@hacksoc/ordinary-member)
[16:04:03] *** Joins: xff0x (~xff0x@i121-117-52-147.s41.a013.ap.plala.or.jp)
[16:04:34] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[16:04:34] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[16:04:34] *** Joins: wroathe (~wroathe@user/wroathe)
[16:07:12] *** Quits: komikat (~komikat@183.82.152.122) (Remote host closed the connection)
[16:10:25] *** Joins: __monty__ (~toonn@user/toonn)
[16:10:28] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:dc77:d173:a9b9:d810) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:11:08] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[16:13:32] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[16:24:58] *** Joins: coot (~coot@213.134.190.95)
[16:25:52] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[16:26:23] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[16:26:29] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[16:27:06] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[16:27:41] *** Quits: yauhsien_ (~yauhsien@61-231-56-96.dynamic-ip.hinet.net) (Remote host closed the connection)
[16:28:25] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:dc77:d173:a9b9:d810)
[16:32:04] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:6945:2980:3f53:dff8)
[16:32:41] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[16:33:05] <romesrf> Has anyone come across an error when adding reflex to a cabal project regarding "patch"?
[16:33:42] <romesrf> might be OS specific: https://paste.tomsmeding.com/8wKOZy5e
[16:37:26] *** Joins: yauhsien_ (~yauhsien@61-231-56-96.dynamic-ip.hinet.net)
[16:38:18] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[16:38:19] *** Parts: jakalx (~jakalx@base.jakalx.net) (Error from remote client)
[16:38:24] *** Quits: romesrf (~romes@44.190.189.46.rev.vodafone.pt) (Quit: WeeChat 3.4)
[16:38:49] *** Joins: romesrf (~romes@44.190.189.46.rev.vodafone.pt)
[16:40:21] *** Quits: Vajb (~Vajb@2001:999:62:aa00:7f5a:4f10:c894:3813) (Read error: Connection reset by peer)
[16:40:54] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[16:41:49] *** Quits: yauhsien_ (~yauhsien@61-231-56-96.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[16:42:09] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Read error: Connection reset by peer)
[16:43:35] *** Joins: yauhsien_ (~yauhsien@61-231-56-96.dynamic-ip.hinet.net)
[16:44:25] *** Quits: coot (~coot@213.134.190.95) (Quit: coot)
[16:44:40] *** Joins: jakalx (~jakalx@base.jakalx.net)
[16:45:47] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[16:47:17] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 240 seconds)
[16:48:03] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[16:48:09] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[16:48:28] *** Joins: coot (~coot@213.134.190.95)
[16:49:50] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[16:49:50] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[16:49:50] *** Joins: wroathe (~wroathe@user/wroathe)
[16:52:28] *** Quits: _ht (~quassel@231-169-21-31.ftth.glasoperator.nl) (Remote host closed the connection)
[16:58:53] <unit73e> romesrf, no. try cleaning cabal directory. that seems to me more like some kind of ID failure.
[16:59:15] <unit73e> I never bothered figuring why such things happen though
[16:59:43] <unit73e> I'm saying that because it's a GHC lib, apparently
[16:59:59] <unit73e> that was generated by cabal
[17:00:06] <unit73e> but I could be wrong
[17:00:13] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:6945:2980:3f53:dff8) (Remote host closed the connection)
[17:01:05] *** Quits: romesrf (~romes@44.190.189.46.rev.vodafone.pt) (Ping timeout: 256 seconds)
[17:08:29] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[17:09:12] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Client Quit)
[17:09:48] <juri_> hmm. i'm being dumb, somehow. if i write a function thing = otherthing, then all of the passed arguments to thing are passed to otherthing, without me having to name them. how do i do thing = doSomethingWithOutPutOf $ otherThing?
[17:09:57] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Ping timeout: 240 seconds)
[17:10:10] <juri_> (.) in place of the $ doesn't work...
[17:10:34] <Rembane> juri_: You need to add the arguments when you use $ 
[17:10:57] <juri_> ugh.
[17:11:46] <corisco[m]> you need to use composition, otherwise you are partially applying doSomethingWithOutPutOf with otherThing.... or you must use (.), but then "thing" must have only one paramenter
[17:13:06] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[17:13:54] <Rembane> juri_: There's the useful owl though ((.) . (.))
[17:13:59] <Rembane> :t ((.) . (.))
[17:14:00] <lambdabot> (b -> c) -> (a1 -> a2 -> b) -> a1 -> a2 -> c
[17:14:17] <Rembane> :t on -- And this function is also quite handy
[17:14:18] <lambdabot> (b -> b -> c) -> (a -> b) -> a -> a -> c
[17:18:02] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[17:19:36] *** Joins: MajorBiscuit (~MajorBisc@c-001-031-019.client.tudelft.eduvpn.nl)
[17:19:39] *** Joins: romesrf (~romes@44.190.189.46.rev.vodafone.pt)
[17:20:38] <juri_> yeah, i think the owl for what i'm doing might be a bit painful to write.. i've got 8 arguments i'm trying not to name. :)
[17:21:09] <[exa]> juri_: suggestion: make the `otherThing` accept the `doSomethingWithOutput` as extra (first) parameter
[17:21:22] <[exa]> (aka a "continuation" or so)
[17:21:34] <juri_> hmm. that might work.
[17:21:34] <Rembane> juri_: You could also put the eight parameters in a record 
[17:21:47] *** Joins: komikat (~komikat@183.82.152.122)
[17:22:10] <corisco[m]> yeah using records in this case, would be an elegant solution
[17:22:32] *** Quits: unit73e (~emanuel@2001:818:e8dd:7c00:32b5:c2ff:fe6b:5291) (Ping timeout: 240 seconds)
[17:23:57] *** Quits: vglfr (~vglfr@88.155.114.173) (Ping timeout: 252 seconds)
[17:24:44] <corisco[m]> * using records, in
[17:26:34] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[17:27:14] <[exa]> juri_: technically the multi-parameter combinations are complicated because there's ambiguity in how many arguments should be taken by the function and how many should be "left over" for the resulting combined value (function), changing the interface to allow continuation usually clarifies that (at least you can only have the arguments listed at one place)
[17:27:17] *** Quits: boborygmy_ (~bob@pool-173-54-217-168.nwrknj.fios.verizon.net) (Ping timeout: 240 seconds)
[17:27:46] <hpc> polymorphism makes it extra fun too
[17:27:51] <hpc> how many parameters does id take?
[17:27:52] <hpc> :t id
[17:27:53] <lambdabot> a -> a
[17:28:00] <[exa]> btw this might map nicely to some kind of a monad, I'd expect Cont
[17:28:11] *** Quits: komikat (~komikat@183.82.152.122) (Read error: Connection reset by peer)
[17:29:36] <juri_> [exa]: yeah, that makes sense, it's just not what i'd look for here. I'm trying to  propertyTest = doTestOnOutputOf $ generatorOfObject , so adding a continuation to the generator would make it less useful. I call that generator from GHCI, when i'm trying to see what function failed when applied to the generator's output.
[17:31:05] <juri_> naming the variables is the least-ugly solution i can come up with.
[17:31:24] <juri_> (a b c d e f) it is.
[17:31:37] *** Quits: razetime (~quassel@117.254.35.215) (Ping timeout: 240 seconds)
[17:32:35] *** Quits: MajorBiscuit (~MajorBisc@c-001-031-019.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[17:33:14] *** Joins: `2jt (~jtomas@210.red-88-24-179.staticip.rima-tde.net)
[17:34:45] <geekosaur> yes, it'softennot worth it to try to be point free
[17:35:02] <geekosaur> (the lambdabot plugin is called "pointless" for a reason :)
[17:36:00] *** Joins: komikat (~komikat@183.82.152.122)
[17:37:07] *** Joins: Major_Biscuit (~MajorBisc@c-001-024-004.client.tudelft.eduvpn.nl)
[17:37:39] *** Quits: Major_Biscuit (~MajorBisc@c-001-024-004.client.tudelft.eduvpn.nl) (Client Quit)
[17:37:49] *** Joins: Major_Biscuit (~MajorBisc@c-001-024-004.client.tudelft.eduvpn.nl)
[17:37:54] *** Joins: bahamas (~lucian@84.232.140.158)
[17:38:51] *** Joins: bontaq (~user@ool-45779fe5.dyn.optonline.net)
[17:40:02] *** Quits: CiaoSen (~Jura@p200300c95727d4002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[17:42:25] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:6945:2980:3f53:dff8)
[17:42:39] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 252 seconds)
[17:42:48] *** Quits: yauhsien_ (~yauhsien@61-231-56-96.dynamic-ip.hinet.net) (Remote host closed the connection)
[17:43:37] *** Joins: yauhsien_ (~yauhsien@61-231-56-96.dynamic-ip.hinet.net)
[17:44:17] *** Joins: razetime (~quassel@117.254.35.215)
[17:46:51] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:dc77:d173:a9b9:d810) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:47:01] *** Quits: komikat (~komikat@183.82.152.122) (Remote host closed the connection)
[17:47:55] *** Joins: komikat (~komikat@183.82.152.122)
[17:48:22] *** Quits: yauhsien_ (~yauhsien@61-231-56-96.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[17:49:20] *** Quits: Inst (~Liam@c-98-208-218-119.hsd1.fl.comcast.net) (Ping timeout: 268 seconds)
[17:49:31] *** Joins: boborygmy_ (~bob@pool-173-54-217-168.nwrknj.fios.verizon.net)
[17:49:55] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[17:50:57] *** Quits: nexus (~nexus@80-95-82-203.pool.digikabel.hu) (Ping timeout: 256 seconds)
[17:52:40] *** Joins: nexus (~nexus@178-164-208-70.pool.digikabel.hu)
[17:54:25] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Read error: Connection reset by peer)
[17:56:10] *** Quits: edwtjo (~edwtjo@user/edwtjo) (Changing host)
[17:56:10] *** Joins: edwtjo (~edwtjo@fsf/member/edwtjo)
[18:00:27] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[18:00:35] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[18:01:08] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[18:17:38] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[18:17:56] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[18:21:17] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[18:24:55] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.4)
[18:25:51] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 256 seconds)
[18:27:49] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[18:28:17] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[18:29:17] *** Quits: vorpuni (~pvorp@2001:861:3881:c690:6eb8:8a:422a:cdeb) (Remote host closed the connection)
[18:31:19] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[18:31:35] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[18:32:19] *** Quits: __monty__ (~toonn@user/toonn) (Ping timeout: 256 seconds)
[18:34:22] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[18:37:17] *** Quits: komikat (~komikat@183.82.152.122) (Remote host closed the connection)
[18:38:41] *** Joins: Guest|7 (~Guest|7@tmo-101-64.customers.d1-online.com)
[18:38:42] *** Quits: romesrf (~romes@44.190.189.46.rev.vodafone.pt) (Quit: WeeChat 3.4)
[18:42:26] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Ping timeout: 245 seconds)
[18:43:35] *** Quits: fendor (~fendor@77.119.192.235.wireless.dyn.drei.com) (Remote host closed the connection)
[18:43:47] <albet70> a = [[1,2], [3,5]] what's the best way to get [[1,3], [2,5]]?
[18:44:26] <geekosaur> > transpose [[1,2],[3,5]]
[18:44:27] <lambdabot>  [[1,3],[2,5]]
[18:46:39] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[18:47:23] <albet70> with fmap can do it?
[18:47:43] *** Joins: bahamas (~lucian@84.232.140.158)
[18:48:29] <albet70> [[1,2,3], [4,5,6], [7,8,9]] to [[1,4,7], [2,5,8], [3,6,9]]
[18:48:56] <geekosaur> fmap seems like a rather complex way to do it, although it's probably possible
[18:49:02] <geekosaur> transpose does it easily
[18:49:18] <geekosaur> > transpose [[1,2,3], [4,5,6], [7,8,9]]
[18:49:20] <lambdabot>  [[1,4,7],[2,5,8],[3,6,9]]
[18:49:33] <geekosaur> @src transpose
[18:49:33] <lambdabot> transpose []             = []
[18:49:33] <lambdabot> transpose ([]   : xss)   = transpose xss
[18:49:33] <lambdabot> transpose ((x:xs) : xss) = (x : [h | (h:t) <- xss]) : transpose (xs : [ t | (h:t) <- xss])
[18:50:41] <albet70> you're right, transpose is the way
[18:50:43] <c_wraith> you could go via ZipList instead, which is...  less specialized than transpose.  But it also has different behavior when the input isn't rectangular
[18:51:24] *** Quits: razetime (~quassel@117.254.35.215) (Ping timeout: 252 seconds)
[18:52:02] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 240 seconds)
[18:52:03] *** Quits: rembo10 (~rembo10@main.remulis.com) (Quit: ZNC 1.8.2 - https://znc.in)
[18:52:24] <c_wraith> > (getZipList . sequenceA . fmap ZipList) [[1,2,3],[4,5,6],[7,8,9]]
[18:52:26] <lambdabot>  [[1,4,7],[2,5,8],[3,6,9]]
[18:52:33] <c_wraith> also a lot less obvious what it's doing
[18:52:36] <albet70> foldl with zipWith?
[18:53:04] <c_wraith> :t getZipList . sequenceA . fmap ZipList
[18:53:05] <lambdabot> Traversable t => t [a] -> [t a]
[18:53:40] <c_wraith> But that is different from transpose in a significant way other than the type
[18:53:51] <c_wraith> transpose preserves all the elements if the input is ragged
[18:54:08] <c_wraith> that will truncate everything to the length of the shortest sublist
[18:55:22] <c_wraith> > transpose [[1],[2,3],[4,5,6]]
[18:55:23] <lambdabot>  [[1,2,4],[3,5],[6]]
[18:55:48] <c_wraith> > (getZipList . sequenceA . fmap ZipList) [[1],[2,3],[4,5,6]]
[18:55:50] <lambdabot>  [[1,2,4]]
[18:57:21] *** Joins: redj75 (~redj@120.206.226.109.ip.orionnet.ru)
[18:59:26] *** Joins: rembo10 (~rembo10@main.remulis.com)
[19:03:56] *** Joins: razetime (~quassel@117.254.35.162)
[19:05:57] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[19:07:21] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 252 seconds)
[19:09:34] *** Joins: komikat (~komikat@183.82.152.122)
[19:10:56] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[19:10:58] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[19:12:56] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[19:14:32] *** Quits: redj75 (~redj@120.206.226.109.ip.orionnet.ru) (Quit: Client closed)
[19:15:14] *** Quits: robertm (robertm@lattice.rojoma.com) (Quit: WeeChat 3.0)
[19:15:32] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[19:17:09] *** Joins: robertm (robertm@lattice.rojoma.com)
[19:19:56] *** Joins: CiaoSen (~Jura@p200300c95727d4002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[19:21:10] *** Quits: rembo10 (~rembo10@main.remulis.com) (Quit: ZNC 1.8.2 - https://znc.in)
[19:22:14] *** Joins: rembo10 (~rembo10@main.remulis.com)
[19:24:59] *** Joins: boxscape_ (~boxscape_@p4ff0b60b.dip0.t-ipconnect.de)
[19:27:12] *** Quits: yauhsien (~Yau-Hsien@61-231-56-96.dynamic-ip.hinet.net) (Read error: Connection reset by peer)
[19:31:53] *** Joins: yauhsien (~yauhsien@61-231-56-96.dynamic-ip.hinet.net)
[19:32:46] *** Quits: coot (~coot@213.134.190.95) (Quit: coot)
[19:35:15] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[19:36:37] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[19:37:29] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[19:38:31] *** Quits: Guest|7 (~Guest|7@tmo-101-64.customers.d1-online.com) (Quit: Connection closed)
[19:40:04] *** Joins: FragByte_ (~christian@user/fragbyte)
[19:41:00] *** Quits: FragByte (~christian@user/fragbyte) (Ping timeout: 240 seconds)
[19:41:00] *** FragByte_ is now known as FragByte
[19:43:01] *** Joins: mei (~mei@user/mei)
[19:47:00] *** Joins: toulene (~toulene@user/toulene)
[19:47:47] <albet70> if a = [[1,2,3], [4,5,6], [7,8,9], [10,11,12]], let n and n+2 to concat, get [[1,2,3,7,8,9], [4,5,6,10,11,12]
[19:49:15] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:dc77:d173:a9b9:d810)
[19:53:08] <monochrom> I would make the stepping stone of separating [[1,2,3], [4,5,6], [7,8,9], [10,11,12]] into ([[1,2,3], [7,8,9]], [[4,5,6], [10,11,12]]). Then it's a simple zipWith.
[19:53:41] *** Joins: Jeanne-Kamikaze (~Jeanne-Ka@static-198-54-134-169.cust.tzulo.com)
[19:53:52] *** Quits: komikat (~komikat@183.82.152.122) (Remote host closed the connection)
[19:54:12] <monochrom> Err wait that's wrong.
[19:54:35] <albet70> ...
[19:54:56] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[19:55:26] *** Joins: Inst (~Liam@c-98-208-218-119.hsd1.fl.comcast.net)
[19:56:25] *** Joins: jstolarek (~jstolarek@staticline-31-183-185-185.toya.net.pl)
[19:57:30] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[19:57:32] <albet70> there's a ugly way to do it, use the index
[19:57:47] *** Joins: coot (~coot@213.134.190.95)
[19:58:07] *** Quits: `2jt (~jtomas@210.red-88-24-179.staticip.rima-tde.net) (Remote host closed the connection)
[19:58:26] *** Joins: `2jt (~jtomas@210.red-88-24-179.staticip.rima-tde.net)
[19:58:44] <albet70> so make index 0 and 2 to concat, 1 and 3 to concat, but it's ugly...
[19:59:21] <pavonia> Why not defining your own function? It's a trival loop
[20:00:03] <monochrom> Should I make 2 and 4 concat too? Should I actually concat 0, 2, 4 together?
[20:00:09] <albet70> I just wonder if Data.List can do it
[20:00:18] <albet70> "monochrom :Should I make 2 and 4 concat too? Should I actually concat 0, 2, 4 together?", yes
[20:00:46] <albet70> if there's 6, 8. it concat 0,2,4,6,8
[20:01:01] <monochrom> Oh beautiful, then my stepping stone still helps.
[20:02:34] *** Joins: zebrag (~chris@user/zebrag)
[20:02:56] *** Joins: Unicorn_Princess (~Unicorn_P@46-54-248-191.static.kate-wing.si)
[20:02:59] *** Joins: lbseale (~ep1ctetus@user/ep1ctetus)
[20:03:14] *** Quits: razetime (~quassel@117.254.35.162) (Ping timeout: 260 seconds)
[20:03:26] *** Quits: Jeanne-Kamikaze (~Jeanne-Ka@static-198-54-134-169.cust.tzulo.com) (Quit: Leaving)
[20:09:08] *** Joins: Jeanne-Kamikaze (~Jeanne-Ka@static-198-54-134-121.cust.tzulo.com)
[20:09:57] *** Quits: thaumavorio (~thaumavor@thaumavor.io) (Quit: ZNC 1.8.2 - https://znc.in)
[20:11:33] *** Joins: mvk (~mvk@2607:fea8:5cc3:7e00::45ee)
[20:11:39] <albet70> split then reduce
[20:11:46] *** Joins: thaumavorio (~thaumavor@thaumavor.io)
[20:13:49] *** Joins: __monty__ (~toonn@user/toonn)
[20:14:19] *** Joins: faAsade (~faAsade@047-227-183-103.res.spectrum.com)
[20:14:29] *** Quits: yauhsien (~yauhsien@61-231-56-96.dynamic-ip.hinet.net) (Remote host closed the connection)
[20:15:10] *** Joins: yauhsien (~yauhsien@61-231-56-96.dynamic-ip.hinet.net)
[20:17:25] *** Quits: `2jt (~jtomas@210.red-88-24-179.staticip.rima-tde.net) (Ping timeout: 250 seconds)
[20:18:49] *** Joins: rond_ (~rond_@90.254.208.190)
[20:19:48] *** Quits: Inst (~Liam@c-98-208-218-119.hsd1.fl.comcast.net) (Ping timeout: 268 seconds)
[20:20:02] *** Quits: yauhsien (~yauhsien@61-231-56-96.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[20:20:19] *** Quits: __monty__ (~toonn@user/toonn) (Quit: leaving)
[20:21:50] *** Joins: `2jt (~jtomas@210.red-88-24-179.staticip.rima-tde.net)
[20:23:41] *** Quits: lbseale (~ep1ctetus@user/ep1ctetus) (Ping timeout: 245 seconds)
[20:24:39] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[20:26:33] *** Quits: CiaoSen (~Jura@p200300c95727d4002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[20:27:35] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:27:36] *** Joins: bahamas (~lucian@84.232.140.158)
[20:29:59] *** Quits: `2jt (~jtomas@210.red-88-24-179.staticip.rima-tde.net) (Ping timeout: 250 seconds)
[20:31:04] *** Joins: Vajb (~Vajb@2001:999:62:aa00:7f5a:4f10:c894:3813)
[20:31:48] <faAsade> Hi all. I'm using Hspec. My example 'head "" `shouldThrow` anyErrorCall' is a type mismatch and won't compile, so how can I expect the 'empty list' exception?
[20:33:32] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[20:34:54] *** Joins: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[20:34:54] *** Quits: Vajb (~Vajb@2001:999:62:aa00:7f5a:4f10:c894:3813) (Read error: Connection reset by peer)
[20:35:48] <faAsade> nevermind -- the `evaluate` function seems to work
[20:36:01] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[20:37:59] *** Joins: lbseale (~ep1ctetus@user/ep1ctetus)
[20:40:06] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[20:41:11] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[20:42:31] *** Joins: `2jt (~jtomas@210.red-88-24-179.staticip.rima-tde.net)
[20:42:43] *** Quits: faAsade (~faAsade@047-227-183-103.res.spectrum.com) (Quit: Client closed)
[20:43:32] *** Quits: lbseale (~ep1ctetus@user/ep1ctetus) (Ping timeout: 240 seconds)
[20:43:41] *** Quits: nexus (~nexus@178-164-208-70.pool.digikabel.hu) (Ping timeout: 245 seconds)
[20:45:25] *** Joins: nexus (~nexus@217-197-189-23.pool.digikabel.hu)
[20:46:21] *** Quits: alp (~alp@user/alp) (Ping timeout: 252 seconds)
[20:46:30] *** Quits: litharge (litharge@libera/bot/litharge) (Read error: Connection reset by peer)
[20:47:28] *** Joins: faAsade (~faAsade@047-227-183-103.res.spectrum.com)
[20:47:36] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[20:47:59] *** Quits: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[20:49:05] *** Joins: litharge (litharge@libera/bot/litharge)
[20:49:07] *** Joins: litharge` (litharge@libera/bot/litharge)
[20:49:23] *** Quits: litharge` (litharge@libera/bot/litharge) (Read error: Connection reset by peer)
[20:49:26] *** Joins: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net)
[20:52:15] *** Quits: coot (~coot@213.134.190.95) (Quit: coot)
[21:00:32] *** Quits: jstolarek (~jstolarek@staticline-31-183-185-185.toya.net.pl) (Ping timeout: 240 seconds)
[21:02:35] *** Quits: mastarija (~mastarija@2a05:4f46:e04:6000:6999:e31b:f6a3:322d) (Quit: Leaving)
[21:09:54] *** Joins: simendsjo (~user@84.211.91.241)
[21:12:22] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[21:13:39] *** Joins: Pickchea (~private@user/pickchea)
[21:13:39] *** Quits: rond_ (~rond_@90.254.208.190) (Quit: Client closed)
[21:13:46] *** Quits: faAsade (~faAsade@047-227-183-103.res.spectrum.com) (Quit: Client closed)
[21:17:36] <Zemyla> Can someone explain to me why `taking` from the lens library requires a fake Contravariant instance?
[21:19:54] *** Joins: sammelweis (~quassel@2601:401:8200:2d4c:bd9:d04c:7f69:eb10)
[21:23:20] *** Joins: econo (uid147250@user/econo)
[21:23:57] *** Joins: o-90 (~o-90@gateway/tor-sasl/o-90)
[21:27:37] *** Quits: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net) (Ping timeout: 240 seconds)
[21:27:39] *** Joins: yauhsien (~yauhsien@61-231-56-96.dynamic-ip.hinet.net)
[21:29:49] *** Joins: tzh (~tzh@c-24-21-73-154.hsd1.wa.comcast.net)
[21:30:28] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[21:34:32] *** Quits: o-90 (~o-90@gateway/tor-sasl/o-90) (Remote host closed the connection)
[21:34:48] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[21:46:41] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[21:48:32] *** Joins: vglfr (~vglfr@88.155.114.173)
[21:55:25] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[21:56:08] *** Joins: coot (~coot@213.134.190.95)
[21:58:49] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:6945:2980:3f53:dff8) (Remote host closed the connection)
[21:59:47] *** Joins: Sgeo (~Sgeo@user/sgeo)
[22:00:48] *** Joins: romesrf (~romes@44.190.189.46.rev.vodafone.pt)
[22:03:15] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[22:10:42] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Quit: WeeChat 3.4)
[22:11:50] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[22:20:30] *** Joins: segfaultfizzbuzz (~segfaultf@2602:306:cd3c:9350:698a:c772:fe08:7b1d)
[22:21:46] <segfaultfizzbuzz> this is ostensibly more of a mathematics question so please do feel free to ask me to go somewhere else, but i have a feeling that #haskell might be the best place to ask this question:
[22:22:12] *** Quits: yauhsien (~yauhsien@61-231-56-96.dynamic-ip.hinet.net) (Remote host closed the connection)
[22:22:17] <segfaultfizzbuzz> let's say that i have a "statement" such as "the product of two natural numbers is divisible by 2"
[22:22:39] *** Quits: mvk (~mvk@2607:fea8:5cc3:7e00::45ee) (Ping timeout: 250 seconds)
[22:22:53] <segfaultfizzbuzz> there are different ways of writing this same statement and these different methods may require varying numbers of bits to write down
[22:23:01] *** Joins: yauhsien (~yauhsien@61-231-56-96.dynamic-ip.hinet.net)
[22:23:49] <segfaultfizzbuzz> however it seems like there should be a way of establishing in a universal sense that the number of bits required to make this statement is objectively less than some value--for example one billion bits is far more than necessary regardless of however this expression is represented
[22:27:29] *** Quits: yauhsien (~yauhsien@61-231-56-96.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[22:27:30] <segfaultfizzbuzz> so is there a way of doing this? can i write a function in haskell and have some kind of estimate for the number of bits required to express equivalent statements?
[22:27:55] <johnw_> segfaultfizzbuzz: I'm not sure what mathematical statements like this have to do with "bits" at all
[22:28:03] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 256 seconds)
[22:28:10] <johnw_> I would prove the theorem in a setting like Coq or Agda, where such a question wouldn't even make sense
[22:28:23] <segfaultfizzbuzz> well if you speak out loud or write a mathematical statement, you need to represent it somehow, even if it is a drawing or an audio recording
[22:28:35] <johnw_> Do you want to learn a mathematical truth, or are you looking to say something about how a particular machine architecture represents numerical statements?
[22:28:59] <segfaultfizzbuzz> well i have become interested in the concept of probabilistic proofs
[22:29:01] <johnw_> Proofs by induction like the one you presented are fairly economical, in terms of proof-term size
[22:29:17] *** Quits: nishant (~Nishant@49.37.242.151) (Quit: Leaving)
[22:29:21] <segfaultfizzbuzz> for example richard feynman had a very good one page probabilistic proof of fermat's last theorem
[22:30:02] <segfaultfizzbuzz> and so this made me wonder, if you have a mathematical statement in the wild and you check it empirically some number of times, what is the probability that the statement is true?
[22:30:29] <monochrom> This is both complexity theory and information theory combined. This will be a huge project. And that's already probably an understatement.
[22:30:54] <segfaultfizzbuzz> and that made me think that shorter statements can be checked more successfully by random (or not-so-random) empirical testing
[22:31:12] <johnw_> ah, "checked" here is subjective
[22:31:15] <monochrom> However the bottom line is you need to know the basics of both before you can sharpen your question sufficiently to even begin.
[22:31:39] <johnw_> proof by sampling is something that many proof environments do support, but it's just a serious of existentially-quantified witnesses, not a universally-quantified proof
[22:31:46] <segfaultfizzbuzz> no, you can make a statement like i said, like " the product of two numbers is divisible by 2" and then test it by checking it on a bunch of statements
[22:31:48] <johnw_> it's a useful technique to know right away whether your statement is false, though
[22:32:04] <segfaultfizzbuzz> and so then the question is, calculate the probability that your statement is true or false based on your empirical tests
[22:32:13] *** Joins: jstolarek (~jstolarek@staticline-31-183-185-185.toya.net.pl)
[22:32:21] <segfaultfizzbuzz> and my thinking here is that if the statement is shorter, then empirical tests are more meaningful
[22:32:42] <johnw_> an engineer might buy such a statement, but a mathematician wouldn't
[22:32:51] *** johnw_ is now known as johnw
[22:33:05] <segfaultfizzbuzz> but this doesn't matter, because the engineer might start to be able to publish conjectures way before the mathematician can even think of them
[22:33:06] <monochrom> For example one thing both teaches is that you cannot look at an individual sentence in isolation. You have to first draw a line around all possible sentences you allow. Only then it makes sense to ask "what's a reasonable length of my favourite sentence?"
[22:33:38] <johnw> As a "conjecture finder" it could be interesting
[22:34:05] <segfaultfizzbuzz> and furthermore in the real world, if you are using some mathematics, the fact that it is false mathematics doesn't necessarily mean it is useless
[22:34:59] <segfaultfizzbuzz> anyway so my thinking here was that there was a pidgeonhole principle at work
[22:35:28] <segfaultfizzbuzz> if you express "the product of two numbers is divisible by two" in bits, and you check it 10^9 times non-redundantly,
[22:35:52] <segfaultfizzbuzz> then the statement length is less than the associated billion bits, therefore you know conclusively whether it is true or false
[22:36:04] <segfaultfizzbuzz> you don't even need a proof
[22:36:09] <segfaultfizzbuzz> in the traditional sense
[22:36:47] <johnw> The fact that you can express the statement in bits, though, doesn't take into account that there is a recursion involved.
[22:37:14] <segfaultfizzbuzz> recursion doesn't matter? i can write a recursive haskell program in less than 8000 bites
[22:37:17] <segfaultfizzbuzz> 8000 bits
[22:37:29] <johnw> but how do you check that it is true for all inputs?
[22:38:14] <segfaultfizzbuzz> if the statement can be expressed with very few bits, how can it have lots of entropy?
[22:38:51] <segfaultfizzbuzz> it's as simple as that,... at some point you exceed the maximum entropy which can be generated from a statement of that length
[22:39:39] *** Quits: boxscape_ (~boxscape_@p4ff0b60b.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[22:40:14] *** Joins: alp (~alp@user/alp)
[22:40:26] *** Joins: little_mac (~little_ma@2601:410:4300:3ce0::8b2c)
[22:42:01] <johnw> So you are saying that a theorem has a certain information density, and that a proof can be found by attempting to analyze this factor?
[22:42:23] <segfaultfizzbuzz> yes that is what i am thinking about
[22:42:30] * geekosaur wonders what kurt gödel would have to say about that
[22:42:47] <johnw> I'm definitely not qualified to say that you're wrong, but I'd love to read your upcoming thesis. :)
[22:43:49] <segfaultfizzbuzz> and so you might need to generate a lot of tests, but at some point you exceed the entropy which can be represented in statements of the length you are looking at. 
[22:44:23] <segfaultfizzbuzz> and furthermore computers are so fast today that you may be able to generate enough tests so as to actually exceed that representational entropy
[22:44:55] <segfaultfizzbuzz> and if i can speculate here, this phenomenon might explain why software works in the first place
[22:45:17] <johnw> you make me wonder about some proof terms in my category theory library where, although the statement of the theorem is quite trivial, the proof term is hundreds of megabytes in size and takes 30 minutes to calculate....
[22:45:52] <segfaultfizzbuzz> wonder in what way?
[22:46:05] *** Joins: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com)
[22:46:15] <johnw> if your speculation is true, then the vast majority of that complexity should be sheer redundancy, like a single light refracting trillions of times
[22:46:29] <segfaultfizzbuzz> oh you are saying that the proof is an entropic exhaustion of the expression?
[22:46:35] <segfaultfizzbuzz> i don't agree that it is redundancy
[22:46:59] <johnw> doesn't the theorem statement itself contain "all" of the information?
[22:47:06] <johnw> so that if it is brief, then there are only a few bits of true entropy
[22:47:15] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[22:47:25] <segfaultfizzbuzz> yes the entropy of the *statement* is low, but
[22:47:26] <johnw> and the rest of the proof term beyond this size is not entropic, and thus not truly informative, but merely an exposition of that kernel?
[22:47:45] <segfaultfizzbuzz> i am saying that the *proof* of the statement has a maximum necessary size/number of bits
[22:47:48] <monochrom> No no no. The axioms of your theory contains "all" of the information. >:)
[22:47:59] <johnw> yes, monochrom++
[22:48:05] <monochrom> or even, "information" >:) >:)
[22:48:13] <johnw> the axioms are the only information, everything else is restatement
[22:48:44] <johnw> but I think segfaultfizzbuzz means information in a slightly different sense here
[22:48:51] <monochrom> But now this has enlarged to encompass all of complexity theory, information theory, number theory, and logic.
[22:49:10] <johnw> as in, not a thing newly learned, but the informational complexity of the statement itself?
[22:49:19] <segfaultfizzbuzz> all reasoning is practiced by and relevant to mortals and therefore will always contain a finite number of bits
[22:49:21] <johnw> as any good discussion on #haskell should
[22:49:22] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[22:49:43] <monochrom> Like I said even "huge research project" is likely a gross understatement.  More like a "research program" meaning on the scale of hundreds of people and a century.
[22:49:53] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[22:50:02] <segfaultfizzbuzz> that's a good thing, right?
[22:50:24] <monochrom> Well, either that, or Gödel comes along and collapses it with a simple "undecidable".
[22:50:31] <monochrom> (like geekosaur said)
[22:50:32] <segfaultfizzbuzz> godel is boring
[22:50:55] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 240 seconds)
[22:51:08] <segfaultfizzbuzz> mathematics is systematically biased towards boring exceptions to useful rules
[22:51:20] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[22:51:28] <segfaultfizzbuzz> except once in a while the boring exception actually is meaningful
[22:51:48] <geekosaur> meaningful how and/or to whom?
[22:53:28] <segfaultfizzbuzz> to me personally in my own experience
[22:53:51] <segfaultfizzbuzz> anyway whatever you think about this, i do believe there is an interesting and useful way of approaching the pidgeonhole principle in the context of proving things
[22:55:30] <monochrom> Well let me turn "boring" around to what your observed about how the software crisis is not really so doomsday.
[22:55:55] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[22:56:00] <monochrom> It is daily software that's boring. This include both expected behaviour and actual bugs.
[22:57:23] <monochrom> It is why there is so little information that 1000 tests are enough to detect most bugs that matter.
[22:57:50] <monochrom> But sorry Goldbach's conjecture is much less boring than that.
[22:58:22] <segfaultfizzbuzz> right, the tests are probably exhaustive in an entropic sense, for everything that the software can express, especially if the tests are random
[22:58:37] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[22:58:46] <monochrom> And to date we don't even know whether Gödel's curse applies to Goldbach's conjecture. That how not boring Gödel's curse is.
[23:01:12] <segfaultfizzbuzz> this also suggests that if you can non-sequentally test something (for example, if i wanted to test goldbach's conjecture at precisely the number 10^200, rather than the current maximum sequential test up to 10^18) then that would be quite valuable
[23:01:59] <segfaultfizzbuzz> actually scratch that i don't want to weigh down my main point
[23:02:03] *** Quits: romesrf (~romes@44.190.189.46.rev.vodafone.pt) (Quit: WeeChat 3.4)
[23:05:07] <Zemyla> Goldbach's conjecture is either true or false in True Arithmetic. If it's undecidable in Peano Arithmetic, then that's a problem with PA.
[23:08:12] *** Quits: segfaultfizzbuzz (~segfaultf@2602:306:cd3c:9350:698a:c772:fe08:7b1d) (Ping timeout: 240 seconds)
[23:13:28] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[23:15:26] *** Quits: coot (~coot@213.134.190.95) (Quit: coot)
[23:15:58] *** Joins: segfaultfizzbuzz (~segfaultf@2602:306:cd3c:9350:698a:c772:fe08:7b1d)
[23:17:55] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 240 seconds)
[23:20:02] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 240 seconds)
[23:21:03] *** Joins: romesrf (~romes@44.190.189.46.rev.vodafone.pt)
[23:21:17] *** Quits: segfaultfizzbuzz (~segfaultf@2602:306:cd3c:9350:698a:c772:fe08:7b1d) (Ping timeout: 240 seconds)
[23:25:05] *** Joins: lavaman (~lavaman@c-174-63-118-52.hsd1.ma.comcast.net)
[23:25:15] *** Joins: segfaultfizzbuzz (~segfaultf@2602:306:cd3c:9350:698a:c772:fe08:7b1d)
[23:30:36] *** Quits: segfaultfizzbuzz (~segfaultf@2602:306:cd3c:9350:698a:c772:fe08:7b1d) (Ping timeout: 240 seconds)
[23:31:31] <dolio> What's true arithmetic?
[23:35:06] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:35:49] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[23:36:02] *** Quits: deadmarshal_ (~deadmarsh@95.38.231.226) (Ping timeout: 240 seconds)
[23:36:15] *** Joins: Everything (~Everythin@37.115.210.35)
[23:37:51] *** Lord_of_Life_ is now known as Lord_of_Life
[23:37:57] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 240 seconds)
[23:38:18] *** Quits: hexagoxel (~hexagoxel@hexagoxel.de) (Quit: ZNC 1.6.5+deb1+deb9u2 - http://znc.in)
[23:40:28] *** Quits: nexus (~nexus@217-197-189-23.pool.digikabel.hu) (Ping timeout: 250 seconds)
[23:42:12] *** Joins: nexus (~nexus@94-21-55-122.pool.digikabel.hu)
[23:42:52] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[23:46:49] *** Joins: michalz (~michalz@185.246.204.37)
[23:47:09] *** Joins: segfaultfizzbuzz (~segfaultf@2602:306:cd3c:9350:698a:c772:fe08:7b1d)
[23:47:52] <segfaultfizzbuzz> another relevant question here is can i "generate all statements of length N" or "all statements of M bits or fewer"?
[23:48:06] <segfaultfizzbuzz> which is a very haskell-y question i think ;-)
[23:48:33] <Rembane> Sure, do you have until the heat death of the universe? 
[23:49:43] <segfaultfizzbuzz> N might be not a large number
[23:50:03] *** Quits: alp (~alp@user/alp) (Ping timeout: 252 seconds)
[23:50:23] <dolio> (That's a trick question, by the way. :þ)
[23:50:38] *** Joins: mvk (~mvk@2607:fea8:5cc3:7e00::45ee)
[23:51:33] <segfaultfizzbuzz> sorry, dont understand that one. i understand the universe heat death timescale is an important constraint here so there will be natural limits on N
[23:53:19] *** Joins: weekOldRoadkill (~weekOldRo@pool-108-50-225-254.nwrknj.fios.verizon.net)
[23:54:06] <dolio> A logical sentence is a syntax tree, so use the size of said tree represented some way in Haskell.
