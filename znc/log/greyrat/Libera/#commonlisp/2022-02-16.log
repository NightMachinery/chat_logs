[00:00:30] *** Quits: cage (~cage@94-39-220-187.adsl-ull.clienti.tiscali.it) (Quit: rcirc on GNU Emacs 27.1)
[00:01:43] <jcowan> Pointer-heavy, I would say: we are constantly dereferencing boxes of various sizes.  As for fixnums, they can be included in the pointer range by using the bottom 3 bits as a tag.  The same for characters and NIL.
[00:03:06] <jcowan> So pretty much all the atomic primitive types (except other float sizes if you have them) can be represented unboxed.
[00:10:14] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 272 seconds)
[00:17:38] <ecraven> that'd make fixnums even smaller though :-/
[00:18:05] <ecraven> but maybe 47 bit fixnums are enough, and there isn't much difference between 47 and 51 anyway
[00:21:47] <White_Flame> sbcl uses 63-bit fixnums.  all other tags have the lowest bit set, and then use additional low bits
[00:22:33] <White_Flame> as far as numbers/counts go, yeah the range is generally going to be fine about 32 bits.  But then you get things like bitmasks, IDs, etc that want an even 64 bits easily
[00:22:39] <White_Flame> s/about/above/
[00:35:25] <jcowan> The trick there is to do what Chicken Scheme does and optimize short bignums, since almost all bignums represent 64-bit values from the FFI.
[00:38:20] *** Joins: Oladon (~olad@98.43.81.226)
[00:42:29] *** Quits: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net) (Quit: ~ Trillian - www.trillian.im ~)
[00:47:18] *** Joins: Volt (~Volt@c-73-145-161-51.hsd1.mi.comcast.net)
[00:47:52] *** Parts: dmgk (~dmgk@user/dmgk) ()
[00:50:55] *** Quits: kevingal (~quassel@37.228.202.92) (Remote host closed the connection)
[00:51:09] *** Volt is now known as Volt_
[00:54:14] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[00:54:30] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[00:59:29] <ecraven> jcowan: how are they optimised?
[01:03:03] <_death> maybe it places them in a particular address range, so that it doesn't have to tag them
[01:03:05] *** Quits: kevingal_ (~quassel@2a02:8084:4140:f300:e526:add5:5095:49c1) (Remote host closed the connection)
[01:04:36] <_death> I mean, there's still a pointer needed.. but no header
[01:08:42] *** Quits: wacki (~wacki@87.123.142.110) (Quit: Leaving.)
[01:10:22] *** Quits: Dynom (~niels@80-114-12-206.cable.dynamic.v4.ziggo.nl) (Quit: WeeChat 3.4)
[01:13:11] *** Joins: eugercek (~user@user/eugercek)
[01:15:10] <jcowan> Something like that.  I don't know the details.  They live in a special space that is not processed by the normal GC, I know that much.
[01:15:26] <jcowan> (whereas the pointer object is in normal space)
[01:19:31] *** Quits: eugercek (~user@user/eugercek) (Read error: Connection reset by peer)
[01:20:32] *** Joins: eugercek (~user@user/eugercek)
[01:22:49] <ecraven> jcowan: what's the advantage of putting fixnums into the pointer space? you still need to check the high bits on whether it is a double, and then the low bits for what is is exactly? is that better than using multiple different high-bit tags?
[01:23:04] <ecraven> maybe it is, you need to check, but not mask away / unbox...
[01:25:08] <_death> there's a series of posts about numeric tower in chicken https://www.more-magic.net/posts/numeric-tower-part-5.html
[01:25:16] <_death> I've only skimmed it
[01:25:43] <jcowan> Well, you have two spaces in a 64-bit address you can use for tags, so taking advantage of both makes sense to me.  It's a little irritating that fixnump is "high tag is 0, lowest bit in 1" which can't be done in a single mask instruction (I think; my knowledge of assembly-language programming stopped with the PDP-11).
[01:26:25] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[01:27:10] <jcowan> It is also apparently true that Solaris can allocate regions in the top half of memory to the user (as opposed to the kernel) which makes things more complicated.  Fortunately, Solaris is not a dominant platform.
[01:28:17] <ecraven> hm.. actually, you need to shift by the tag, so that isn't any easier than just masking away the high tag bits
[01:32:33] <ecraven> but then,, masking the high bits is (from my limited understanding of the instruction set) more costly (in instruction size at least) than rotating
[01:33:11] *** Joins: Algernon666 (~Algernon6@2a01:e0a:511:6ce0:fcb0:9ced:a8db:5d63)
[01:42:42] *** Quits: attila_lendvai (~alendvai@2a02:ab88:3710:7c80:9130:5abf:96b3:dc0c) (Ping timeout: 252 seconds)
[01:55:00] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 240 seconds)
[01:55:24] *** Quits: shka (~herr@109.231.0.226) (Ping timeout: 240 seconds)
[01:57:09] *** Joins: aeth (~aeth@user/aeth)
[02:02:20] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 272 seconds)
[02:02:42] <ecraven> White_Flame: on unboxing a fixnum, is sign extension done by just setting the highest bit to the second-highest?
[02:02:55] *** Joins: aeth (~aeth@user/aeth)
[02:03:03] <White_Flame> the top 63 bits are used for the number, and the low bit is 0
[02:03:17] <White_Flame> so addition/subtraction/signedness is transparnt
[02:03:21] <ecraven> ah, nice
[02:03:38] <White_Flame> for non-fixnums, the low bit is 1, and then more low bits are used for the type tag
[02:03:42] <ecraven> so each pointer access needs to clear the tag in the low bits before accessing memory?
[02:04:04] <ecraven> or do you use indexed memory accesses for that?
[02:04:55] <White_Flame> sbcl uses indexed memory.  so given a cons cell, whose type tag is probably #b111,  you get [rdx-7] for the car, and [rdx+1] for the cdr
[02:05:11] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: Sorry, I need to scratch my left butt cheek.)
[02:05:15] <ecraven> very nice, thanks!
[02:05:55] <White_Flame> I don't think it's variable-length type tag generally, just 2 different types of tags, showing that you don't need a fixed number for all types
[02:06:02] <ecraven> White_Flame: is there documentation on which tags sbcl uses? which source file might I look at?
[02:06:27] <White_Flame> I mostly looked at the disassembly, but there are some internals .txt files somewhere which are likely out of date but do introduce the concepts
[02:14:35] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Quit: ec)
[02:15:00] *** Quits: Algernon666 (~Algernon6@2a01:e0a:511:6ce0:fcb0:9ced:a8db:5d63) (Quit: Leaving)
[02:18:55] *** Joins: triffid (~triffid@gateway/tor-sasl/triffid)
[02:21:38] *** Joins: orestarod (~orestarod@2a02:2149:8b20:700:2b9d:7f86:7169:61c0)
[02:24:01] <ecraven> hm.. nice, one bit also makes adjusting after multiplication/division simple enough
[02:24:58] *** Quits: rotateq (~user@p200300e78706a00050f72feb644e2401.dip0.t-ipconnect.de) (Quit: ERC (IRC client for Emacs 27.2))
[02:27:24] *** Joins: azimut_ (~azimut@gateway/tor-sasl/azimut)
[02:29:35] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 240 seconds)
[02:30:21] <moon-child> adjust before, otherwise you lose information
[02:30:26] <moon-child> but yes
[02:31:15] <ecraven> yea, not in my case, I have free bits up high ;)
[02:46:11] <alanz> I am trying to call REMOVE-IF-NOT using a lambda stored in the CDR of a dotted pair. But it needs a function designator for the predicate. How can I do it?
[02:46:50] <phoe> lambda stored in the CDR of a dotted pair? what do you mean
[02:46:58] *** Quits: Bike (~Glossina@71.69.170.70) (Quit: Lost terminal)
[02:47:04] <moon-child> (remove-if-not (cdr pair) seq)?
[02:47:14] *** Quits: mepy (~mepy@37.100.156.164) (Quit: Leaving)
[02:47:53] <alanz> moon-child, that is what I would expect to work, but it complains that it expecting a symbol or function
[02:48:02] <phoe> alanz: well, what do you feed it then
[02:48:03] *** Quits: orestarod (~orestarod@2a02:2149:8b20:700:2b9d:7f86:7169:61c0) (Quit: Leaving)
[02:48:09] <phoe> (let ((pair (cons 42 #'oddp))) (remove-if-not (cdr pair) '(1 2 3 4 5))) or something should work
[02:48:30] <phoe> (cons 42 #'oddp) evaluates to a dotted pair
[02:49:18] *** Joins: Bike (~Bike@71.69.170.70)
[02:50:53] <alanz> phoe, hmm, that works. I was doing (let ((pair '(42 . #'oddp))) (remove-if-not (cdr pair) '(1 2 3 4 5)))
[02:51:03] <alanz> which does not. Thanks.
[02:51:28] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (*.net *.split)
[02:51:28] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (*.net *.split)
[02:51:28] *** Quits: megeve (sid523379@id-523379.hampstead.irccloud.com) (*.net *.split)
[02:51:28] *** Quits: semz (~semz@user/semz) (*.net *.split)
[02:51:28] *** Quits: stylewarning (sid241636@2a03:5180:f:1::3:afe4) (*.net *.split)
[02:51:28] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (*.net *.split)
[02:51:28] *** Quits: mixfix41 (~sdenyninn@user/mixfix41) (*.net *.split)
[02:51:28] *** Quits: rdrg109 (~rdrg109@user/rdrg109) (*.net *.split)
[02:51:28] *** Quits: hefner (~hefner@user/hefner) (*.net *.split)
[02:51:28] *** Quits: loke (~loke@junk.nocrew.org) (*.net *.split)
[02:51:28] *** Quits: zagura (~zagura@user/zagura) (*.net *.split)
[02:51:28] *** Quits: Kabriel (~Kabriel@user/kabriel) (*.net *.split)
[02:51:29] <moon-child> #'oddp reads the same as (function oddp)
[02:51:34] <moon-child> which is not a function designator
[02:51:38] <moon-child> but evaluates to one
[02:51:43] *** Joins: orestarod (~orestarod@2a02:2149:8b20:700:2b9d:7f86:7169:61c0)
[02:51:53] <moon-child> you could also do `(42 . ,#'oddp)
[02:52:05] <moon-child> or just '(42 . oddp), as a symbol is a function designator
[02:52:16] <alanz> The problem seems to be using '(42 . #'oddp) vs (cons 43 #'oddp)
[02:52:24] <alanz> 42
[02:53:25] <White_Flame> '(42 . (FUNCTION ODDP))
[02:53:45] <White_Flame> which is '(42 FUNCTION ODDP)
[02:53:46] <alanz> I am happy with the cons form, tbh.
[02:53:46] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[02:53:46] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[02:53:46] *** Joins: megeve (sid523379@id-523379.hampstead.irccloud.com)
[02:53:46] *** Joins: semz (~semz@user/semz)
[02:53:46] *** Joins: stylewarning (sid241636@2a03:5180:f:1::3:afe4)
[02:53:46] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[02:53:46] *** Joins: mixfix41 (~sdenyninn@user/mixfix41)
[02:53:46] *** Joins: rdrg109 (~rdrg109@user/rdrg109)
[02:53:46] *** Joins: hefner (~hefner@user/hefner)
[02:53:46] *** Joins: loke (~loke@junk.nocrew.org)
[02:53:46] *** Joins: zagura (~zagura@user/zagura)
[02:53:46] *** Joins: Kabriel (~Kabriel@user/kabriel)
[02:53:47] *** Quits: mixfix41 (~sdenyninn@user/mixfix41) (Max SendQ exceeded)
[02:53:47] *** Quits: rdrg109 (~rdrg109@user/rdrg109) (Max SendQ exceeded)
[02:54:05] *** Joins: rdrg109 (~rdrg109@user/rdrg109)
[02:54:12] <White_Flame> do you understand the issue, though?
[02:55:13] <White_Flame> same is if you tried '(42 . (+ 1 2)) and expected (42 . 3) instead of (42 + 1 2)
[02:55:19] <alanz> White_Flame, now I do.
[02:55:41] <alanz> thanks
[02:56:56] *** Quits: morganw (~user@80.225.24.132) (Remote host closed the connection)
[02:56:57] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Ping timeout: 250 seconds)
[02:57:46] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[02:58:29] <phoe> I got bitten by #'FOO not being #<FUNCTION FOO> a couple of times
[02:58:46] <phoe> the issue was always in context of quoted data though
[02:59:57] <alanz> This is my first time, at least now I know what to look for.
[03:00:12] <alanz> This reminds me of getting used to inscrutable haskell compiler errors
[03:01:35] <White_Flame> and even quote itself is captured as (QUOTE FOO) unintentionally in some quoted scenarios
[03:02:08] <White_Flame> instead of just FOO
[03:02:51] <phoe> and both of them is a feature
[03:02:58] <phoe> s/is a feature/are features/
[03:03:09] *** Quits: Alfr (~Alfr@user/alfr) (Remote host closed the connection)
[03:03:14] <phoe> especially in case of `',x
[03:03:20] <phoe> although I am yet to see `#',x in practice :D
[03:03:39] *** Joins: Alfr (~Alfr@user/alfr)
[03:03:59] <moon-child> my...
[03:04:49] <moon-child> (note: it is an annoyance that certain reader macros do _not_ expand to lists.  E.G. you cannot say `#c(1 ,(+ 2 2))
[03:04:51] <moon-child> )
[03:11:10] <White_Flame> or `10,(code-char 49)05 for the integer 10105
[03:12:41] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Remote host closed the connection)
[03:16:12] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[03:18:08] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[03:19:30] <moon-child> listen, you
[03:20:10] <White_Flame> :)
[03:20:28] <White_Flame> but that is an interesting thing, to programmatically inject evaluated CL chars into the READ input stream
[03:20:57] <moon-child> #.(read-from-string (format ...))
[03:21:06] <White_Flame> that's a separate token
[03:21:11] <moon-child> sure, yes
[03:21:21] <moon-child> you'd have to build all the tokens in your format
[03:21:27] <moon-child> couldn't insert a ")" or w/e
[03:21:47] <White_Flame> I mean, 10#.(read-from-string ...)05
[03:21:48] <moon-child> but, meh, do you want c macros?  And: you already have reader macros
[03:21:53] <White_Flame> right
[03:22:21] <White_Flame> I have no use for such a thing but it is the endpoint of meta-reading I think
[03:22:34] <moon-child> meh
[03:22:39] <moon-child> I would rather get rid of the reader entirely
[03:22:43] <moon-child> structural editing, baby
[03:22:50] <White_Flame> hard agree
[03:23:23] <White_Flame> other than that, I do have my own reader based on strings and not just chars
[03:23:44] <moon-child> what do you mean by that?
[03:24:02] <White_Flame> eg "<<" can be breaking punctuation so 1<<2>>3 is 5 tokens
[03:24:41] <White_Flame> break up the input string by whitespace, punctuation, and tokens, instead of a character-based regex lexer
[03:25:09] <moon-child> I see
[03:25:40] <White_Flame> for most programming languages it makes the lexing/parsing child's play
[03:28:21] *** Joins: igemnace (~ian@user/igemnace)
[03:30:03] <Alfr> moon-child, note that #c reads the following object, allowing for #c(1 #.(+ 2 2)).
[03:30:17] <moon-child> sure, yes
[03:30:23] <moon-child> but read time is less interesting than run time
[03:31:01] <Alfr> You can always resort to COMPLEX.
[03:37:30] *** Joins: karlosz (~karlosz@47.151.136.69)
[03:38:12] *** Quits: Alfr (~Alfr@user/alfr) (Ping timeout: 240 seconds)
[03:41:35] *** Quits: eugercek (~user@user/eugercek) (Remote host closed the connection)
[03:41:52] *** Joins: eugercek (~user@user/eugercek)
[03:42:06] *** Quits: eugercek (~user@user/eugercek) (Read error: Connection reset by peer)
[03:45:29] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[03:47:29] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[03:51:50] *** Joins: Alfr (~Alfr@user/alfr)
[03:53:43] *** Joins: s-liao (~s-liao@101.86.96.21)
[03:56:21] *** Quits: orestarod (~orestarod@2a02:2149:8b20:700:2b9d:7f86:7169:61c0) (Ping timeout: 252 seconds)
[04:10:06] *** Quits: Alfr (~Alfr@user/alfr) (Remote host closed the connection)
[04:10:32] *** Joins: Alfr (~Alfr@user/alfr)
[04:16:31] *** Quits: pve (~pve@176-93-111-24.bb.dnainternet.fi) (Quit: leaving)
[04:18:23] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[04:24:44] *** Joins: VincentV` (~user@212.97.1.15)
[04:25:15] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[04:26:36] *** Quits: VincentVega (~user@212.97.1.15) (Ping timeout: 252 seconds)
[04:29:54] *** Quits: VincentV` (~user@212.97.1.15) (Ping timeout: 272 seconds)
[04:35:03] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[04:36:46] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[04:53:15] *** Joins: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca)
[05:09:30] *** Quits: karlosz (~karlosz@47.151.136.69) (Ping timeout: 252 seconds)
[05:19:19] *** Joins: karlosz (~karlosz@47.151.136.69)
[05:20:34] *** Quits: Alfr (~Alfr@user/alfr) (Ping timeout: 272 seconds)
[05:35:53] *** Joins: aeth_ (~aeth@user/aeth)
[05:36:04] *** Quits: aeth (~aeth@user/aeth) (Killed (NickServ (GHOST command used by aeth_)))
[05:36:09] *** aeth_ is now known as aeth
[05:37:52] *** Joins: Alfr (~Alfr@user/alfr)
[05:38:14] *** Joins: blacked (~blacked@user/blacked)
[05:41:48] *** Quits: random-nick (~random-ni@87.116.181.150) (Ping timeout: 240 seconds)
[05:41:57] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[05:46:19] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[05:46:50] *** Quits: blacked (~blacked@user/blacked) (Quit: Client closed)
[05:51:48] <Guest74> I kinda wish you could use :initally :finally to collect things in loop.
[05:54:38] <moon-child> you can fake the first
[05:54:50] <moon-child> (loop for flag = t then nil when flag ...)
[05:57:18] *** Quits: Alfr (~Alfr@user/alfr) (Ping timeout: 272 seconds)
[05:58:01] <edgar-rft> whenever you curse LOOP try to imagine what you would DO instead :-)
[05:58:27] <Guest74> a lot more typing  :)
[05:59:33] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[06:01:48] *** Joins: Alfr (~Alfr@user/alfr)
[06:04:01] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[06:05:13] <sm2n> (or you could use ITERATE)
[06:05:56] <Guest74> does it allow that?  Not that I would use it.
[06:06:05] <sm2n> ;; though I don't think that lets you collect in initially/finally
[06:06:17] <sm2n> ...maybe it does, let me check
[06:07:15] <sm2n> nope, it doesn't
[06:23:14] *** Joins: beach` (~user@2a01:cb19:150:3400:8e1d:10b7:9cda:4c33)
[06:26:57] *** Quits: beach (~user@2a01:cb19:150:3400:f284:cdc3:9afa:22f8) (Ping timeout: 240 seconds)
[06:48:29] *** Quits: hineios (~hineios@a95-93-142-124.cpe.netcabo.pt) (Ping timeout: 256 seconds)
[06:55:06] *** Quits: silasfox (~sbv@p4fe8dbf5.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[06:55:46] *** Joins: hineios (~hineios@a95-93-142-124.cpe.netcabo.pt)
[06:57:11] *** Joins: silasfox (~sbv@p200300cec7165400792cbb9734838e19.dip0.t-ipconnect.de)
[07:10:54] *** Quits: Bike (~Bike@71.69.170.70) (Quit: Connection closed)
[07:17:58] *** Joins: pillton (~user@61-68-215-244.tpgi.com.au)
[07:19:02] *** beach` is now known as beach
[07:24:21] *** Quits: mzan (~quassel@mail.asterisell.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[07:30:20] <beach> Good morning everyone!
[07:32:31] *** Quits: azimut_ (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[07:32:49] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[07:33:37] *** Joins: dmh (~dmh@user/dmh)
[07:47:24] *** Quits: hineios (~hineios@a95-93-142-124.cpe.netcabo.pt) (Ping timeout: 240 seconds)
[07:47:26] *** Joins: lisp123 (~lisp123@94.201.199.103)
[07:50:36] *** Joins: hineios (~hineios@a95-93-142-124.cpe.netcabo.pt)
[07:51:03] *** Joins: s-liao (~s-liao@101.86.96.21)
[07:52:36] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Read error: Connection reset by peer)
[08:00:06] *** Quits: lisp123 (~lisp123@94.201.199.103) (Remote host closed the connection)
[08:09:48] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[08:10:16] *** Joins: semz_ (~semz@user/semz)
[08:12:14] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[08:12:51] *** Quits: semz (~semz@user/semz) (Ping timeout: 250 seconds)
[08:15:00] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 240 seconds)
[08:18:15] *** Joins: notzmv (~zmv@user/notzmv)
[08:20:01] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[08:29:53] *** semz_ is now known as semz
[08:32:24] *** Joins: sveit_ (~sveit@2001:19f0:ac01:247:5400:ff:fe5c:689f)
[08:33:17] *** Quits: sveit (~sveit@45.77.0.246) (Ping timeout: 240 seconds)
[08:44:47] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[08:47:23] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[09:14:54] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 272 seconds)
[09:33:00] *** Quits: silasfox (~sbv@p200300cec7165400792cbb9734838e19.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[09:33:18] *** Joins: silasfox (~sbv@p548d1123.dip0.t-ipconnect.de)
[09:39:25] *** Joins: frgo_ (~frgo@p548a3783.dip0.t-ipconnect.de)
[09:39:34] *** Joins: rogersm_ (~rogersm@90.166.180.250)
[09:39:37] *** Quits: danieli (~danieli@user/danieli) (Remote host closed the connection)
[09:39:54] *** Joins: danieli (~danieli@user/danieli)
[09:41:00] *** Quits: rogersm (~rogersm@90.166.180.250) (Ping timeout: 240 seconds)
[09:41:48] *** Quits: frgo (~frgo@p548a3783.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[09:50:10] <opcode> I know that the docs say not to rely on SBCL timers as being structs internally, but what is the syntax to access the timer's slots?  I'm trying to create a minimum working example because I think I found a bug
[09:51:02] <mfiano> This is a question for #sbcl
[09:51:09] <opcode> ok
[09:58:49] *** Quits: jealousmonk (~user@user/jealousmonk) (Quit: ERC 5.4.1 (IRC client for GNU Emacs 27.1))
[10:04:02] *** Quits: derwolf_ (~DerWolf@2a01:4f8:c0c:554a::1) (Ping timeout: 240 seconds)
[10:07:28] <flip214> beach: good morning! Would you happen to know when ELS22 registration starts?
[10:17:15] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 240 seconds)
[10:18:57] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[10:20:28] *** Joins: s-liao (~s-liao@101.86.96.21)
[10:20:38] *** Joins: karlosz_ (~karlosz@47.151.136.69)
[10:21:21] *** Quits: karlosz (~karlosz@47.151.136.69) (Ping timeout: 252 seconds)
[10:21:21] *** karlosz_ is now known as karlosz
[10:25:48] *** Quits: karlosz (~karlosz@47.151.136.69) (Ping timeout: 240 seconds)
[10:31:00] *** Joins: SR-71 (~user@user/SR-71)
[10:37:47] *** Joins: karlosz (~karlosz@47.151.136.69)
[10:40:29] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[10:43:14] *** Joins: jeosol (~jeosol@user/jeosol)
[10:48:27] <beach> flip214: No, sorry.
[10:49:37] <flip214> beach: thanks anyway!
[10:49:47] <flip214> already asking Didi
[10:50:08] *** Joins: shka (~herr@109.231.0.226)
[10:51:39] <beach> Didier, you mean?
[10:52:04] <beach> By email, I suppose, since he does not hang out on IRC.
[10:55:50] *** Joins: Josh_2 (~user@197.184.173.1)
[10:57:16] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Quit: Leaving)
[10:59:30] <flip214> right
[11:00:22] *** Quits: Josh_2 (~user@197.184.173.1) (Remote host closed the connection)
[11:00:44] *** Joins: Josh_2 (~user@197.184.173.1)
[11:01:15] <karlosz> flip214: id also like to know the answer
[11:01:49] <beach> I don't quite understand why that date is important.
[11:05:33] *** Joins: jrx (~user@2a01cb08811c800063c1ee6b254eca0f.ipv6.abo.wanadoo.fr)
[11:17:15] *** Joins: Cymew (~ante@c-0c87225c.023-1144-7570702.bbcust.telenor.se)
[11:17:47] *** Joins: mzan (~quassel@mail.asterisell.com)
[11:23:46] *** Joins: wacki (~wacki@87.122.84.130)
[11:35:38] *** Quits: lagash (lagash@lagash.shelltalk.net) (Quit: ZNC - https://znc.in)
[11:37:05] *** Joins: lagash (lagash@lagash.shelltalk.net)
[11:38:23] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[11:40:57] *** Quits: jrx (~user@2a01cb08811c800063c1ee6b254eca0f.ipv6.abo.wanadoo.fr) (Quit: ERC (IRC client for Emacs 27.2))
[11:41:06] *** Quits: scymtym (~user@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[11:45:38] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 272 seconds)
[11:46:05] *** Joins: amb007 (~a_bakic@172.39.22.93.rev.sfr.net)
[11:52:33] *** Quits: amb007 (~a_bakic@172.39.22.93.rev.sfr.net) (Ping timeout: 250 seconds)
[11:53:32] *** Quits: silasfox (~sbv@p548d1123.dip0.t-ipconnect.de) (Quit: WeeChat 3.4)
[11:55:45] *** Joins: silasfox (~silasfox@p200300cec71654004c832f63ad77a19f.dip0.t-ipconnect.de)
[11:57:57] *** Joins: scymtym (~user@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[12:00:15] *** Joins: razetime (~quassel@49.207.198.36)
[12:00:55] *** Quits: razetime (~quassel@49.207.198.36) (Client Quit)
[12:09:09] *** Quits: karlosz (~karlosz@47.151.136.69) (Ping timeout: 252 seconds)
[12:09:28] *** Joins: JoshYoshi (~user@197.184.170.239)
[12:11:00] *** Quits: Josh_2 (~user@197.184.173.1) (Ping timeout: 240 seconds)
[12:11:27] *** Quits: mzan (~quassel@mail.asterisell.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[12:13:49] <flip214> beach: well, HR reasons
[12:15:05] *** Joins: mzan (~quassel@mail.asterisell.com)
[12:19:52] *** Joins: pve (~pve@87-93-199-48.bb.dnainternet.fi)
[12:21:19] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[12:26:03] *** JoshYoshi is now known as Josh_2
[12:32:12] *** Quits: Josh_2 (~user@197.184.170.239) (Ping timeout: 240 seconds)
[12:33:29] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[12:37:27] *** Joins: Dynom (~niels@80-114-12-206.cable.dynamic.v4.ziggo.nl)
[12:41:06] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[12:45:04] *** Joins: amb007 (~a_bakic@133.151.22.93.rev.sfr.net)
[12:52:19] *** Joins: rgherdt (~rgherdt@83.236.18.121)
[12:59:44] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 272 seconds)
[13:07:59] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[13:14:27] *** Quits: silasfox (~silasfox@p200300cec71654004c832f63ad77a19f.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[13:26:50] *** Joins: silasfox (~silasfox@p548d1123.dip0.t-ipconnect.de)
[13:28:54] <mgl> I've just released PAX v0.1 (https://github.com/melisgl/mgl-pax) with a host of improvements. Changelog: https://quotenil.com/pax-v0.1.html.
[13:28:54] <mgl> (PAX is an extensible documentation generator, with integration into SLIME's M-.)
[13:29:17] *** Joins: s-liao (~s-liao@101.86.96.21)
[13:34:28] <phoe> mgl: nice!
[13:35:14] <phoe> do you use https://github.com/Shinmera/definitions or something similar?
[13:38:30] <Shinmera> So many documentation generators and none use Definitions :(
[13:40:17] <mgl> Well, I was not aware of Definitions, and PAX predates it by years. There is quite a bit of overlap though.
[13:47:03] <mgl> It seems that a pax REFERENCE is basically a definitions DEFINITION.
[13:59:41] *** Quits: pillton (~user@61-68-215-244.tpgi.com.au) (Quit: ERC (IRC client for Emacs 27.2))
[14:01:48] *** Quits: silasfox (~silasfox@p548d1123.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[14:08:12] *** Joins: attila_lendvai (~alendvai@2a02:ab88:3710:7c80:9130:5abf:96b3:dc0c)
[14:10:11] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[14:13:58] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[14:27:48] *** Quits: Dynom (~niels@80-114-12-206.cable.dynamic.v4.ziggo.nl) (Quit: WeeChat 3.4)
[14:44:17] *** Quits: unyu (~pyon@user/pyon) (Ping timeout: 240 seconds)
[14:58:08] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Quit: Client closed)
[15:00:18] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[15:04:27] *** Joins: silasfox (~silasfox@p548d1123.dip0.t-ipconnect.de)
[15:08:16] *** Joins: unyu (~pyon@user/pyon)
[15:09:00] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[15:19:27] *** Quits: attila_lendvai (~alendvai@2a02:ab88:3710:7c80:9130:5abf:96b3:dc0c) (Ping timeout: 252 seconds)
[15:24:28] <dbotton> mgl I really appreciate pax
[15:24:50] <dbotton> It made a huge difference for clog
[15:32:06] *** Quits: hhdave (~hhdave@ip212.ip-193-70-71.eu) (Ping timeout: 252 seconds)
[15:35:04] *** Joins: hhdave (~hhdave@ip212.ip-193-70-71.eu)
[15:36:47] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Quit: Client closed)
[15:39:37] *** Joins: Devon (~devon@c-24-2-157-5.hsd1.ma.comcast.net)
[15:41:55] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[15:42:39] *** Quits: jeosol (~jeosol@user/jeosol) (Quit: Client closed)
[15:42:48] <mgl> dbotton: That's great to hear. Hopefully, it's even better now.
[15:56:19] *** Joins: eugercek (~user@user/eugercek)
[15:58:30] *** Quits: alvaro121_ (~aa@201.230.126.66) (Ping timeout: 252 seconds)
[16:01:33] *** Quits: hhdave (~hhdave@ip212.ip-193-70-71.eu) (Ping timeout: 256 seconds)
[16:02:10] *** Joins: hhdave (~hhdave@ip212.ip-193-70-71.eu)
[16:07:48] *** Quits: silasfox (~silasfox@p548d1123.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[16:09:53] *** Joins: silasfox (~silasfox@p548d1123.dip0.t-ipconnect.de)
[16:14:49] *** Joins: treflip (~user@user/treflip)
[16:17:23] *** Quits: Cymew (~ante@c-0c87225c.023-1144-7570702.bbcust.telenor.se) (Remote host closed the connection)
[16:17:49] *** Joins: Cymew (~ante@c-0c87225c.023-1144-7570702.bbcust.telenor.se)
[16:24:45] *** Joins: dmgk (~dmgk@user/dmgk)
[16:30:58] *** Joins: serbest (~ike@user/serbest)
[16:31:15] *** Joins: Brucio-61 (~Brucio-31@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[16:47:24] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[16:47:37] *** Joins: blacked (~blacked@user/blacked)
[16:53:58] *** Joins: Bike (~Glossina@71.69.170.70)
[16:56:34] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[16:59:55] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 256 seconds)
[17:06:09] *** Joins: attila_lendvai (~alendvai@2a02:ab88:3710:7c80:9130:5abf:96b3:dc0c)
[17:07:36] *** Joins: s-liao (~s-liao@101.86.96.21)
[17:09:43] *** Quits: blacked (~blacked@user/blacked) (Quit: Client closed)
[17:23:16] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[17:27:19] *** Joins: Common-Lisp (~common_li@12.2.190.242)
[17:30:17] *** Joins: lisp123 (~lisp123@94.201.199.103)
[17:31:24] *** Joins: alvaro121 (~aa@201.230.126.66)
[17:36:12] *** Quits: silasfox (~silasfox@p548d1123.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[17:36:57] *** Quits: Brucio-61 (~Brucio-31@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[17:45:45] *** Joins: Everything (~Everythin@37.115.210.35)
[17:45:59] *** Joins: silasfox (~silasfox@p548d1123.dip0.t-ipconnect.de)
[17:48:47] *** Quits: lisp123 (~lisp123@94.201.199.103) (Read error: Connection reset by peer)
[17:49:31] *** Joins: lisp123 (~lisp123@80.227.200.125)
[17:52:12] *** Quits: alvaro121 (~aa@201.230.126.66) (Ping timeout: 240 seconds)
[17:55:00] *** Quits: theBlackDragon (~dragon@fvwm/admin) (Ping timeout: 240 seconds)
[17:55:39] *** Parts: Everything (~Everythin@37.115.210.35) ()
[17:56:54] *** Joins: theBlackDragon (~dragon@fvwm/admin)
[18:01:22] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Quit: Client closed)
[18:06:55] <dieggsy> Is there a way to print a list of all loaded packgaes?
[18:07:00] *** Quits: jcowan (sid325434@id-325434.ilkley.irccloud.com) (Ping timeout: 240 seconds)
[18:07:10] *** Joins: jcowan (sid325434@id-325434.ilkley.irccloud.com)
[18:07:47] *** Joins: sveit (~sveit@2001:19f0:ac01:247:5400:ff:fe5c:689f)
[18:07:48] *** Quits: ahlk (~user@2600:1700:31c0:3a10::43) (Ping timeout: 240 seconds)
[18:08:12] *** Quits: unyu (~pyon@user/pyon) (Ping timeout: 240 seconds)
[18:08:12] *** Quits: SR-71 (~user@user/SR-71) (Ping timeout: 240 seconds)
[18:08:12] *** Quits: sveit_ (~sveit@2001:19f0:ac01:247:5400:ff:fe5c:689f) (Ping timeout: 240 seconds)
[18:08:12] *** Quits: hobo (~hobo@2600:1700:8972:63f:3313:2d33:be9f:8246) (Ping timeout: 240 seconds)
[18:08:12] *** Quits: lottaquestions (~nick@2607:fa49:5041:a200:b555:2e8f:fe4f:2e3d) (Ping timeout: 240 seconds)
[18:08:23] *** Joins: hobo (~hobo@2600:1700:8972:63f:3313:2d33:be9f:8246)
[18:08:29] *** Joins: lottaquestions (~nick@2607:fa49:5041:a200:c52d:7d43:3699:c92e)
[18:08:40] <dieggsy> or, if i can (find-package :package) does that not necessarily imply :package is loaded
[18:08:50] <Bike> clhs list-all-packages
[18:08:51] <specbot> http://www.lispworks.com/reference/HyperSpec/Body/f_list_a.htm
[18:08:53] <Guest74> apropos when you don't know
[18:08:56] <Bike> packages are not systems, though
[18:09:12] *** Joins: ahlk (~user@2600:1700:31c0:3a10::43)
[18:09:14] *** Joins: SR-71 (~user@user/SR-71)
[18:10:29] *** Joins: unyu (~pyon@user/pyon)
[18:10:38] *** Joins: alvaro121 (~aa@201.230.126.66)
[18:10:55] <Bike> packages are just namespaces for symbols. you don't "load" them. if you want a list of loaded asdf systems you can use uh... (asdf:already-loaded-systems), looks like
[18:11:57] *** Joins: lisp123_ (~lisp123@94.203.159.21)
[18:13:46] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[18:14:43] *** Quits: lisp123 (~lisp123@80.227.200.125) (Ping timeout: 256 seconds)
[18:22:05] *** Quits: silasfox (~silasfox@p548d1123.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[18:22:50] *** Joins: cage (~cage@94-39-220-187.adsl-ull.clienti.tiscali.it)
[18:22:57] <dieggsy> what could be causing a package being found in (list-all-packages) but referencing an internal function of that package causes a compiler warning about an undefined function?
[18:23:04] <Guest74> when dealing with foreign memory, would there be any difference between using some sort of cffi to retrieve structs and just getting the array of bytes and assembling the bits yourself?  The latter seems more generalizable(sp?) to writing to networks and disk.
[18:23:43] *** Joins: blacked (~blacked@user/blacked)
[18:24:12] *** blacked is now known as pingpongball
[18:25:06] *** Quits: pingpongball (~blacked@user/blacked) (Client Quit)
[18:28:27] *** Joins: random-nick (~random-ni@87.116.181.150)
[18:29:15] *** Joins: Brucio-61 (~Brucio-5@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[18:30:08] *** Quits: Volt_ (~Volt@c-73-145-161-51.hsd1.mi.comcast.net) (Quit:  )
[18:30:20] *** Joins: blacked (~blacked@user/blacked)
[18:30:34] *** blacked is now known as pingpongball
[18:32:51] *** Quits: lisp123_ (~lisp123@94.203.159.21) (Read error: Connection reset by peer)
[18:32:56] *** Joins: lisp123 (~lisp123@94.203.159.21)
[18:33:21] <Bike> dieggsy: you could have the package definition loaded without the actual code
[18:34:59] <dieggsy> oh right. it's an implementation package, and the warning only shows up when compiling with a batch script vs interactively
[18:35:24] <dieggsy> i don't think it's explicitly :required anywhere, which feels like the correct thing to do regardless
[18:35:38] *** Quits: lisp123 (~lisp123@94.203.159.21) (Read error: Connection reset by peer)
[18:39:06] *** Quits: amb007 (~a_bakic@133.151.22.93.rev.sfr.net) (Ping timeout: 252 seconds)
[18:45:11] <Bike> you can also probably mark implementation systems as dependencies in an asdf system
[18:45:16] <Bike> e.g. :depends-on (:sb-rotate-byte)
[18:46:54] *** Joins: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
[18:50:36] *** Quits: Brucio-61 (~Brucio-5@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[19:04:12] *** Quits: Common-Lisp (~common_li@12.2.190.242) (Ping timeout: 240 seconds)
[19:05:24] *** Quits: pingpongball (~blacked@user/blacked) (Quit: Client closed)
[19:09:22] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[19:27:08] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[19:34:12] *** Quits: Cymew (~ante@c-0c87225c.023-1144-7570702.bbcust.telenor.se) (Ping timeout: 240 seconds)
[19:37:08] *** Joins: silasfox (~silasfox@p548d1123.dip0.t-ipconnect.de)
[19:39:17] *** Quits: silasfox (~silasfox@p548d1123.dip0.t-ipconnect.de) (Client Quit)
[19:40:53] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Quit: Client closed)
[19:43:23] *** Joins: aeth_ (~aeth@user/aeth)
[19:43:37] *** Quits: aeth (~aeth@user/aeth) (Killed (NickServ (GHOST command used by aeth_)))
[19:43:39] *** aeth_ is now known as aeth
[19:48:15] *** Joins: rotateq (~user@p200300e78706a00050f72feb644e2401.dip0.t-ipconnect.de)
[19:51:07] <Guest74> If a macro is written in package A, which uses package B, and the macro expands into something that uses package B functions without a package qualifier, does package C which uses A have to use B as well?
[19:51:29] *** Joins: Dynom (~niels@80-114-12-206.cable.dynamic.v4.ziggo.nl)
[19:51:32] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[19:51:57] <Bike> no. the packages of symbols are set when they are read, i.e. when the macro is defined.
[19:52:21] <Guest74> thanks, I wasn't sure about that.
[19:52:58] *** Joins: lisp123 (~lisp123@94.203.159.21)
[19:53:27] <lisp123> (dotimes (i 10) (make-money)) -> is there a better way to write a loop that doesnt' use i?
[19:53:37] <Bike> (loop repeat 10 do (make-money))
[19:53:47] <lisp123> Bike: That was fast :P
[19:54:01] <dieggsy> Bike: I think that's probably more correct yeah. There's some weird stuff about allegro and when certain implementation systems should or shouldn't be included in images so I need to think about it a bit more I guess
[19:55:11] <Guest74> What's the problem with i?  it's shorter anyways.  More on point, (dotimes ($ 10) (print "money"))
[19:56:27] <lisp123> Yeah I think I like dotimes better - but you should abstract away the implementation (printing money) from the call site ;)
[19:56:44] <lisp123> it could be (mine money) in another currency
[19:57:27] <rotateq> lisp123: we would be again at expressiveness if someone else reads it :)
[19:58:15] <lisp123> rotateq: ;)
[19:59:26] *** Quits: eugercek (~user@user/eugercek) (Remote host closed the connection)
[20:00:15] <Guest74> is there a default key binding for paredit-backwards-slurp-sexp, or remind me of how to look at the keymap?
[20:01:15] <edgar-rft> don't look at C-h b - it's cheating!
[20:01:32] <lisp123> ah
[20:01:37] <lisp123> well i'll keep quiet then
[20:01:46] <Guest74> thanks, i keep forgetting that.
[20:03:14] *** Joins: patrice (~patrice@user/patrice)
[20:05:24] *** Joins: Oladon (~olad@98.43.81.226)
[20:15:41] *** Joins: lisp123_ (~lisp123@94.203.159.21)
[20:15:42] *** Quits: lisp123 (~lisp123@94.203.159.21) (Read error: Connection reset by peer)
[20:20:25] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Remote host closed the connection)
[20:32:09] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Quit: Client closed)
[20:32:59] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[20:38:07] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Quit: Client closed)
[20:39:05] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[20:42:09] *** Joins: cosimone (~user@93-47-229-224.ip115.fastwebnet.it)
[20:45:30] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[20:46:42] *** Quits: SR-71 (~user@user/SR-71) (Remote host closed the connection)
[20:51:35] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 240 seconds)
[20:55:55] *** Joins: lisp123 (~lisp123@94.203.159.21)
[20:55:56] *** Quits: lisp123_ (~lisp123@94.203.159.21) (Read error: Connection reset by peer)
[20:58:55] *** Joins: eugercek (~user@user/eugercek)
[20:59:27] *** Quits: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca) (Quit: Connection closed)
[20:59:47] *** Quits: cosimone (~user@93-47-229-224.ip115.fastwebnet.it) (Quit: i really have to scratch my right butt cheek this time, sorry)
[21:14:56] *** Quits: lisp123 (~lisp123@94.203.159.21) (Read error: Connection reset by peer)
[21:15:16] *** Joins: lisp123 (~lisp123@94.203.159.21)
[21:16:31] *** Joins: lisp123_ (~lisp123@94.203.159.21)
[21:16:31] *** Quits: lisp123 (~lisp123@94.203.159.21) (Read error: Connection reset by peer)
[21:17:15] *** Joins: lisp123 (~lisp123@94.203.159.21)
[21:18:30] *** Joins: cosimone (~user@93-47-229-224.ip115.fastwebnet.it)
[21:19:03] *** Quits: cosimone (~user@93-47-229-224.ip115.fastwebnet.it) (Remote host closed the connection)
[21:19:25] *** Joins: cosimone (~user@93-47-229-224.ip115.fastwebnet.it)
[21:21:27] *** Quits: lisp123_ (~lisp123@94.203.159.21) (Ping timeout: 256 seconds)
[21:24:16] *** Quits: cosimone (~user@93-47-229-224.ip115.fastwebnet.it) (Remote host closed the connection)
[21:25:05] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[21:27:04] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Quit: Client closed)
[21:32:31] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[21:33:20] *** Joins: karlosz (~karlosz@47.151.136.69)
[21:35:24] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 240 seconds)
[21:35:36] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[21:38:28] <lisp123> does anyone ever get strange errors trying (USE-PACKAGE ...) in CL-USER?
[21:39:14] <rotateq> you mean in LispWorks? ;)
[21:39:40] <lisp123> lol ;) I am trying to see if its a LW issue or a me issue ;)
[21:40:06] <lisp123> Maybe we are not meant to USE-PACKAGE in CL-USER
[21:40:33] *** Joins: nature (~nature@45.32.235.173)
[21:42:09] <pjb> lisp123: the contents of CL-USER is implementation dependent. Therefore any USE-PACKAGE in it will be implementation dependent.
[21:42:48] <pjb> lisp123: you can put this in your rc file: https://github.com/informatimago/rc/blob/master/common.lisp#L48  to clean it up.
[21:43:18] <lisp123> pjb: Thanks! You have a solution for everything ;)
[21:43:54] <pjb> That's because I've been using CL since 1996, so I encountered all those problems already.
[21:44:27] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 252 seconds)
[21:44:30] <lisp123> 26 years :)
[21:49:06] <Demosthenex> so is there a way to have variable quantity wildcards in trivia? i'm trying to match an embedded pattern, and i could mapcan over the list but it felt like trivia should be able to do this: (trivia:match* '((1 2 3) (4 5 6) (7 8 9)) ((list 4 a 6) a)) => 5
[21:49:36] <Demosthenex> otherwise i'm having to mapcan over the input list like a giant logical "any" clause
[21:51:05] <pjb> You'd have to read the documentation. Or the source…
[21:51:19] <pjb> Sorry, I can't do this reading right now.
[21:51:43] <Demosthenex> yeah, i'm digging around, they have and/or constructs, but i'm not seeing a way to ever specify a variable # of arguments anywhere.
[21:52:03] <Demosthenex> i can cheat variable tails by matching a cons cell, but i think it's because it's making a matcher macro, not iterating like regexp
[21:52:39] <Demosthenex> pjb: you're always a great help, i don't want you to start from scratch. i was hoping to jog someone's memory =]
[21:53:01] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[21:57:21] *** Quits: lisp123w (~user@80.227.170.170) (Ping timeout: 268 seconds)
[21:59:51] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[22:03:30] *** Quits: Inline (~Inline@2a02:908:1252:7a80::d7) (Remote host closed the connection)
[22:04:05] *** Joins: Inline (~Inline@2a02:908:1252:7a80::1aa)
[22:04:55] *** Joins: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
[22:05:21] *** Quits: Inline (~Inline@2a02:908:1252:7a80::1aa) (Client Quit)
[22:06:05] *** Joins: Inline (~Inline@2a02:908:1252:7a80::1aa)
[22:07:04] *** Joins: cosimone (~user@93-47-229-224.ip115.fastwebnet.it)
[22:09:52] *** Quits: treflip (~user@user/treflip) (Quit: good night!)
[22:11:01] *** Quits: lisp123 (~lisp123@94.203.159.21) (Remote host closed the connection)
[22:11:47] *** Joins: simendsjo (~user@84.211.91.241)
[22:24:12] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 240 seconds)
[22:27:55] *** Quits: simendsjo (~user@84.211.91.241) (Remote host closed the connection)
[22:29:26] *** Joins: lisp123 (~lisp123@94.203.159.21)
[22:32:28] *** Quits: karlosz (~karlosz@47.151.136.69) (Quit: karlosz)
[22:33:35] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 240 seconds)
[22:33:54] *** Quits: cosimone (~user@93-47-229-224.ip115.fastwebnet.it) (Remote host closed the connection)
[22:34:39] *** Joins: simendsjo (~user@84.211.91.241)
[22:35:31] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[22:35:36] *** Joins: gamaliel (~gamaliel@24.171.221.171)
[22:39:46] *** Joins: Guest26 (~Guest26@pcd249195.netvigator.com)
[22:43:15] *** Quits: dmh (~dmh@user/dmh) (Quit: ZNC - https://znc.in)
[22:46:12] *** Quits: eugercek (~user@user/eugercek) (Ping timeout: 272 seconds)
[22:47:58] *** Joins: notzmv (~zmv@user/notzmv)
[22:49:33] <gamaliel> Hi, CL newbie here. I'm not sure if it can be done, but can one specify in a class an "initform" of sorts in a slot that depends on a given initarg? I've been able to reproduce it using an initialize-instance :after method, but I'm curious to see if there is a better way of specifying it. Here's the example: https://plaster.tymoon.eu/view/2951#2951
[22:51:00] *** Quits: igemnace (~ian@user/igemnace) (Ping timeout: 252 seconds)
[22:52:01] <Guest26> (defmethod initialize-instance :after ... )
[22:52:58] <Xach> gamaliel: initialize-instance (or related) methods are the way to do that, not in the defclass form.
[22:53:53] *** Quits: nature (~nature@45.32.235.173) (Remote host closed the connection)
[22:54:25] <gamaliel> Xach: Ok, thank you. I think I'll just set up all my slots in the initialize-instance method then. I don't like splitting the definition of class slots among defclass and the methods.
[22:55:07] <mfiano> That is an odd thing to do. You might want to read Keene's book for as to why.
[22:56:52] <Xach> gamaliel: :default-initargs is another option
[22:57:34] *** Joins: cosimone (~user@93-47-229-224.ip115.fastwebnet.it)
[22:58:01] *** Quits: Guest26 (~Guest26@pcd249195.netvigator.com) (Quit: Client closed)
[23:01:25] <Xach> In general, I think that if initialization requirements are simple, :initform and :default-initargs are fine.
[23:02:10] <gamaliel> @Xach: I'll read up on it. It seems I can write (defclass my-class () ((slot-depending-on-initarg :initargs depend-slot)) (:default-initargs :depend-slot (do-something-with-depend-slot))) to do what I want.
[23:02:35] <gamaliel> @Xach: thank you
[23:03:18] *** Joins: nature (~nature@45.32.235.173)
[23:03:43] <yitzi> gamaliel: I don't the @ sign does anything on IRC. Just "person: bla bla" should suffice.
[23:04:20] *** Joins: igemnace (~ian@user/igemnace)
[23:04:43] <Xach> yitzi: maybe in their client my nick is prefixed with an @ because i am +o in the channel.
[23:04:51] <Xach> but it's true that it's not part of the nick, just some metadata
[23:05:27] <yitzi> Xach: You are probably right. Noted.
[23:05:42] <gamaliel> That is indeed what happens.
[23:07:42] *** Quits: lisp123 (~lisp123@94.203.159.21) (Remote host closed the connection)
[23:10:00] *** Joins: lisp123 (~lisp123@94.203.159.21)
[23:10:09] *** Joins: Guest267 (~Guest267@pcd249195.netvigator.com)
[23:10:18] *** Joins: dmh (~dmh@pclmulqdq.dev)
[23:10:18] *** Quits: dmh (~dmh@pclmulqdq.dev) (Changing host)
[23:10:18] *** Joins: dmh (~dmh@user/dmh)
[23:11:08] *** Quits: Guest267 (~Guest267@pcd249195.netvigator.com) (Client Quit)
[23:11:35] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[23:11:44] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:14:28] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[23:14:32] *** Lord_of_Life_ is now known as Lord_of_Life
[23:18:17] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Remote host closed the connection)
[23:18:39] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[23:22:49] *** Joins: mixfix41 (~homefame@user/mixfix41)
[23:34:21] *** Quits: gamaliel (~gamaliel@24.171.221.171) (Quit: Client closed)
[23:35:36] *** Quits: lisp123 (~lisp123@94.203.159.21) (Remote host closed the connection)
[23:37:18] *** Joins: lisp123 (~lisp123@94.203.159.21)
[23:38:07] *** Quits: sander (~sander@user/sander) (Quit: So long! :))
[23:40:32] *** Quits: lisp123 (~lisp123@94.203.159.21) (Remote host closed the connection)
[23:56:35] *** Joins: Oladon (~olad@98.43.81.226)
