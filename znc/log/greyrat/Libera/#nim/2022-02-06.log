[00:13:49] *** Joins: jsef_5 (~jsef5@2600:381:16a:30f5:93fe:9656:a18f:8ca8)
[00:13:56] *** Quits: jsef5 (~jsef5@2603:9001:101:e300:254c:4414:8513:8c56) (Read error: Connection reset by peer)
[00:14:05] <FromDiscord> <enthus1ast> sent a code paste, see https://play.nim-lang.org/#ix=3OL6
[00:14:37] *** Joins: jsef5 (~jsef5@2603-9001-0101-e300-254c-4414-8513-8c56.inf6.spectrum.com)
[00:17:57] *** Quits: jsef_5 (~jsef5@2600:381:16a:30f5:93fe:9656:a18f:8ca8) (Ping timeout: 240 seconds)
[00:31:15] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:34:43] <FromDiscord> <Tuatarian> anyone have any idea why mapIt is erroring out here?
[00:34:51] <FromDiscord> <Tuatarian> the usual template/generic instantiation thing
[00:34:57] <FromDiscord> <Tuatarian> ``nim
[00:34:59] <FromDiscord> <Tuatarian> oops
[00:35:08] <FromDiscord> <Tuatarian> sent a code paste, see https://play.nim-lang.org/#ix=3OL9
[00:35:29] <FromDiscord> <Tuatarian> musicArr is a seq[Music], IsMusicPlaying is a a (Music) -> bool
[00:35:36] <FromDiscord> <Tuatarian> musicArr is populated
[00:35:49] <FromDiscord> <Tuatarian> mapIt is giving the error here, not foldl
[00:37:35] <FromDiscord> <ynfle> What's the error?
[00:37:50] <FromDiscord> <enthus1ast> error message?
[00:46:21] <FromDiscord> <Tuatarian> template/generic instantiation of `mapIt` from here
[00:46:45] <FromDiscord> <Tuatarian> the template/generic instantiation thing, should have made that more clear
[00:47:21] <FromDiscord> <konsumlamm> that's not the full error message, is it?
[00:47:25] <FromDiscord> <Tuatarian> no it is
[00:48:03] <FromDiscord> <konsumlamm> then can you post a reproducible example?
[00:48:12] <FromDiscord> <konsumlamm> preferrably through the nim playground
[00:48:30] <FromDiscord> <Tuatarian> hard to reproduce
[00:48:37] <FromDiscord> <Tuatarian> it uses a lot of stuff from a library
[00:48:51] <FromDiscord> <Tuatarian> here's the full error log (which weirdly disagrees with the visual studio version)
[00:48:59] <FromDiscord> <Tuatarian> sent a code paste, see https://play.nim-lang.org/#ix=3OLg
[00:49:05] <FromDiscord> <Tuatarian> the above thing is from line 103
[00:49:14] <FromDiscord> <Tuatarian> vscode not visual studio
[00:50:53] <FromDiscord> <Rika> then something is malformed
[00:51:08] <FromDiscord> <Rika> have you checked line 129 as it says
[00:52:23] <FromDiscord> <Tuatarian> yeah
[00:52:26] <FromDiscord> <Tuatarian> thanks for the tip
[00:52:36] <FromDiscord> <Tuatarian> it was some weird issue with indentation elsewhere in the file
[00:53:01] <FromDiscord> <Tuatarian> I copied from somewhere else and somehow something got screwed (probably tab/space replacement) and it gave this error
[00:53:03] <FromDiscord> <xigoi> Have you tried map(IsMusicPlaying) instead of mapIt(IsMusicPlaying it)?
[00:53:15] <FromDiscord> <Tuatarian> it works now that I  fixed the other issue
[00:53:32] <FromDiscord> <Tuatarian> oh that would have been a good idea actually
[00:53:40] <FromDiscord> <Tuatarian> then it would have pointed to the real error
[00:53:43] <FromDiscord> <Tuatarian> didn't occur to me
[00:53:50] <FromDiscord> <Tuatarian> thanks guys
[01:00:01] *** Joins: dtomato (~dtomato@82-64-189-70.subs.proxad.net)
[01:17:19] <FromDiscord> <Waldecir Santos> Is it possible to append sequences like in python oldList += ['1', '2']... ?
[01:17:53] <FromDiscord> <Waldecir Santos> Or I need to implement the operator for it [] and []= ?
[01:18:01] <FromDiscord> <enthus1ast> use &=
[01:18:22] <FromDiscord> <enthus1ast> also valid for strings etc
[01:19:18] <FromDiscord> <ynfle> Or `.add`
[01:19:20] <FromDiscord> <Waldecir Santos> Oh nice, thank you, let me test it
[01:19:48] <FromDiscord> <Waldecir Santos> But add only addes 1 element right @ynfle I want to "concatenate" 2 lists/tuples
[01:20:14] <FromDiscord> <enthus1ast> nope
[01:20:20] <FromDiscord> <enthus1ast> imho &= is an alias for add
[01:20:23] <FromDiscord> <enthus1ast> or the other way around
[01:20:50] <FromDiscord> <Waldecir Santos> Got it, so it's smart, thank you
[01:21:12] <FromDiscord> <enthus1ast> https://nim-lang.org/docs/system.html#%26%3D.t%2Ctyped%2Ctyped
[01:21:27] <FromDiscord> <enthus1ast> `For files an alias for write. If not specialized further, an alias for add.`
[01:23:46] <FromDiscord> <Waldecir Santos> Thank you, I still getting used to nim and its documentation
[01:24:52] <FromDiscord> <enthus1ast> the search in the doc and "theIndex" is your friend
[01:25:10] <FromDiscord> <enthus1ast> https://nim-lang.org/docs/theindex.html
[01:25:38] <FromDiscord> <enthus1ast> i often also use the "source" button to jump directly to the source
[01:26:31] <FromDiscord> <Waldecir Santos> Awesome ! instasave for me 😄
[01:27:07] <FromDiscord> <Phil> I've got my shortcuts for pragmas, the nimtut, nim by example, lib overview and the forum. Indispensable
[01:28:57] <FromDiscord> <enthus1ast> playing with genny the whole evening, i've build some (useless) tool that implements a webserver in nim, does stupid stuff, but drives the async loop from python and uses the computed stuff IN python
[01:29:01] <FromDiscord> <enthus1ast> kinda cool
[01:29:11] <FromDiscord> <enthus1ast> (not that i plan to use python)
[01:30:37] <FromDiscord> <Waldecir Santos> Are you planing to push to git and share ?
[01:30:50] <FromDiscord> <enthus1ast> nah
[01:31:26] <FromDiscord> <enthus1ast> just toying around with treeforms lib
[01:31:52] <FromDiscord> <Waldecir Santos> I've been playing with nim only, I'm trying to implement a full featured framework like Django in nim, It's been a ride lol
[01:32:00] <FromDiscord> <Waldecir Santos> But I'm learning a LOT about nim
[01:32:10] <FromDiscord> <enthus1ast> yeah
[01:32:34] <FromDiscord> <enthus1ast> also want to do this (or use it if one builds it )
[01:32:43] <FromDiscord> <Waldecir Santos> I love how Django does stuff, I hope I can get this sprit with nim in this attempt 😄
[01:32:45] <FromDiscord> <enthus1ast> just use it is prefered \:)
[01:32:55] <FromDiscord> <Waldecir Santos> Right ? 😄
[01:33:12] <FromDiscord> <enthus1ast> if you need a template engine have a look at my nimja template engine
[01:33:27] <FromDiscord> <enthus1ast> https://github.com/enthus1ast/nimja
[01:34:41] <FromDiscord> <Waldecir Santos> Yeah that is awesome, my first try is to do templates like django, but I want to leave the framework open so you can choose any framework including nimja, I love jinja
[01:35:05] <FromDiscord> <Waldecir Santos> I've a basic django template engine working, by basic I mean only string interpolation so far.
[01:37:31] <FromDiscord> <enthus1ast> i do not know the difference between django's and jinja2 templates, but if i just skim over django's templateing they quite look the same
[01:38:46] <FromDiscord> <Waldecir Santos> You cannot call function on django template, they are logic-less templates
[01:38:59] <FromDiscord> <Waldecir Santos> Kinda of "logic-less"
[01:39:14] <FromDiscord> <Waldecir Santos> You do have if and control flow, but you cannot do much there
[01:42:24] <FromDiscord> <Waldecir Santos> How do you guys normally handle logging ? Just add a lot of debug/info/warn and set the level or there is a macro to remove the debug logs when compiling the release version ?
[01:42:40] <FromDiscord> <xx_ns> Django templates are turing complete, so anything is possible 😉
[01:43:01] <FromDiscord> <Waldecir Santos> ahah
[01:44:23] <FromDiscord> <enthus1ast> either echo , treeform/print , enthus1ast/dbg  or for real logging\: https://github.com/status-im/nim-chronicles
[01:44:46] <FromDiscord> <Phil> In reply to @Waldecir Santos "I love how Django": The only thing that's slightly wonky is the database interaction imo
[01:48:03] <FromDiscord> <Phil> So far I'm reasonably happy with it all. With nisane I got the interaction with views and fts5 tables, thanks to enthus1ast's code that he initially threw in for an event system I managed to replicate Django Signals (to some degree), tinypool gives me transactions and norm suffices for most of the basic bits of DB interaction
[01:48:48] <FromDiscord> <enthus1ast> is this a nimble pkg? Or tightly bound to storyfont?
[01:49:32] <FromDiscord> <Phil> Tightly bound to storyfont, Making a "django like" super package out of that is... possible I think, but I think it'd be hurt by the fact that you'd need to use 2 ORMs
[01:51:01] <FromDiscord> <enthus1ast> i mean, if the api is good, and hides the implementation well enough, it can later be changed
[01:51:03] <FromDiscord> <Phil> There's some bits and bobs that just don't mesh well enough to make a framework out of it. It's "good enough" to work with, but I wouldn't necessarily want to do more with it. Once norm or nisane are at a point where I'd say "use that for everything" I'd say make a framework
[01:51:06] <FromDiscord> <Waldecir Santos> In reply to @Isofruit "The only thing that's": Yeah but I've been doing for years now it seems "natural"
[01:52:35] <FromDiscord> <Phil> In reply to @Waldecir Santos "Yeah but I've been": What? Django's ORM?
[01:53:05] <FromDiscord> <Waldecir Santos> Yeah I've been using django for websites for years
[01:53:06] <anddam> I installed nimgl package and opengl from https://github.com/nimgl/opengl , then tried tests/test.nim from https://github.com/nimgl/imgui and got "/home/anddam/Development/GUI/nimgl-imgui-git/src/imgui/impl_opengl.nim(11, 23) Error: cannot open file: nimgl/opengl"
[01:53:16] <anddam> what am I doing wrong in the setup?
[01:54:07] <FromDiscord> <Phil> In reply to @Waldecir Santos "Yeah I've been using": Yeah that level of quality is pretty hard to achieve. We'd need some serious additional contributions to any of the currently existing ORMs to get them to that level
[01:54:55] <FromDiscord> <Waldecir Santos> Yeah totally agree
[01:55:09] <FromDiscord> <Waldecir Santos> Let's see how far I can go, lol
[01:55:47] <FromDiscord> <Phil> Basically if you want to see the heart of my applications database interaction: genericArticleRepository
[01:55:50] <FromDiscord> <Phil> (edit) "genericArticleRepository" => "genericArticleRepository.nim"
[01:56:00] <FromDiscord> <Waldecir Santos> In reply to @enthus1ast "either echo , treeform/print": You mean this one right https://github.com/enthus1ast/nimDbg ?
[01:56:18] <FromDiscord> <Waldecir Santos> In reply to @Isofruit "Basically if you want": I'm definitely going to check it, for sure.
[01:58:27] <FromDiscord> <Phil> In reply to @Waldecir Santos "I'm definitely going to": That's for the simple stuff (`src/applications/genericArticleRepository.nim`), for fts5 table interaction with nisane (`src/applications/search/searchRepository.nim`).↵View interaction I'll eventually implement under a not yet existant `src/applications/allArticles/allArticleRepository.nim`)
[01:58:38] <FromDiscord> <Phil> (edit) "In reply to @Waldecir Santos "I'm definitely going to": That's for the simple stuff (`src/applications/genericArticleRepository.nim`), for fts5 table interaction with nisane (`src/applications/search/searchRepository.nim`).↵View interaction ... I'll" 03added "through nisane"
[01:59:13] <FromDiscord> <ckennedy> Is there a way to provide a generic override of `=` for an object as is being done with the specifc `host=` attribute here: https://nim-lang.org/docs/tut2.html#object-oriented-programming-properties
[01:59:18] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[01:59:38] <FromDiscord> <enthus1ast> @Waldecir Santos\: yes
[01:59:54] <FromDiscord> <enthus1ast> but dbg is dangerous, since it removes code
[01:59:57] <FromDiscord> <Waldecir Santos> In reply to @ckennedy "Is there a way": I don't see why not.
[02:00:33] <FromDiscord> <Elegantbeef> setters are just procedures
[02:00:56] <FromDiscord> <Waldecir Santos> In reply to @enthus1ast "but dbg is dangerous,": Why is it dangerous ?
[02:01:22] <FromDiscord> <enthus1ast> dbg aProcWithSideffects() ↵is removed on release
[02:01:34] <FromDiscord> <Waldecir Santos> OHHHH I see wow
[02:01:47] <FromDiscord> <enthus1ast> and if you rely on sideffects boom \:)
[02:05:27] <FromDiscord> <ckennedy> In reply to @Elegantbeef "setters are just procedures": But a proc needs to be provided for every setter, right? I can't generically say: proc `=`(s: var Socket,  key: ??, value: ??) {.inline.} =
[02:05:50] <FromDiscord> <ckennedy> tried it as a macro but you get the `proc signature must be...` error message alluding to the property specific variation.
[02:06:27] <FromDiscord> <Elegantbeef> Oh you want dotoperators
[02:06:37] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/manual_experimental.html#special-operators-dot-operators
[02:08:08] <FromDiscord> <ynfle> In reply to @ckennedy "tried it as a": You can use a macro that iterates over every field of the type
[02:08:09] <FromDiscord> <Waldecir Santos> @ckennedy maybe this is what you mean https://play.nim-lang.org/#ix=3OLv ?
[02:09:01] *** Quits: enyc (~enyc@user/enyc) (Ping timeout: 240 seconds)
[02:09:42] <FromDiscord> <Elegantbeef> you can define `.=` and `.` operators which allow you to do special things for fields
[02:10:36] <FromDiscord> <ckennedy> In reply to @Waldecir Santos "<@!296348328122384386> maybe this is": That's the attribute specific version.  Was trying to figure out how to do that generically.
[02:11:13] *** Quits: pro (~pro@user/pro) (Ping timeout: 256 seconds)
[02:11:14] <FromDiscord> <Waldecir Santos> so you what the property `host` to be dynamic ?
[02:12:06] <FromDiscord> <ckennedy> In reply to @Elegantbeef "you can define `.=`": Oh, I think `.=` may work.. I was hoping to do it with `=` though to avoid the "I have to remember to use this other form or it's broken problem"
[02:12:45] <FromDiscord> <Waldecir Santos> Can you give me one exemple of what you are trying to accomplish ?
[02:14:14] <FromDiscord> <chancy> In reply to @ynfle "You can use a": I think I found some documentation on this, thanks for the suggestion!
[02:14:27] <FromDiscord> <Elegantbeef> What do you mean generically?
[02:16:22] <FromDiscord> <Elegantbeef> I'm still a bit confused what you're after, would be interesting to understand
[02:16:43] <FromDiscord> <Waldecir Santos> Same
[02:17:00] <FromDiscord> <Elegantbeef> A code example of the behaviour speaks more than english
[02:18:51] <FromDiscord> <chancy> One moment. I'll write up a playground example.
[02:21:28] <FromDiscord> <chancy> https://play.nim-lang.org/#ix=3OLz
[02:23:02] <FromDiscord> <chancy> say something like that, where any assignment to an object field is replaced with a guard to track whether the object has actually changed from its previous values.
[02:23:36] <FromDiscord> <ynfle> In reply to @chancy "I think I found": Is changed a field of the object?
[02:23:37] <FromDiscord> <Waldecir Santos> I think @ElegantBeef was right, you need the dotnotation
[02:23:59] <FromDiscord> <Elegantbeef> Eh you can do it with a template
[02:24:11] <FromDiscord> <chancy> In reply to @ynfle "Is changed a field": `changed` is elsewhere, say just a global
[02:24:54] <FromDiscord> <Waldecir Santos> If `changed` is not part of the object, template is the way I agree with @ElegantBeef
[02:26:02] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3OLA
[02:30:38] <FromDiscord> <chancy> In reply to @Elegantbeef "https://play.nim-lang.org/#ix=3OLA": I think that's definitely more concise though it still suffers from the "remember to do it" problem. I could always do `m.color = "black"` if I forget to follow the convention.
[02:34:53] <FromDiscord> <enthus1ast> you could not export the members
[02:38:14] <FromDiscord> <ckennedy> In reply to @enthus1ast "you could not export": That might be the way to go.  I'll experiment.
[02:38:36] <FromDiscord> <ckennedy> Thanks for help everyone!
[02:38:39] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:4003:8970:d961:ff06) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:58:17] <FromDiscord> <ckennedy> https://play.nim-lang.org/#ix=3OLH
[02:58:56] <FromDiscord> <Elegantbeef> This is to be expected
[02:59:11] <FromDiscord> <ckennedy> The `accessor` template doesn't work if the field isn't exported, but this seems to work. `template(t: Thing, key: untyped, val: typed)` instead
[03:48:38] <FromDiscord> <ynfle> @ckennedy I have a macro solution to your problem
[03:49:16] <FromDiscord> <ckennedy> In reply to @ynfle "<@!296348328122384386> I have a": Oh yeah?
[03:50:21] <FromDiscord> <ynfle>  https://media.discordapp.net/attachments/371759389889003532/939676856473505902/types.nim https://media.discordapp.net/attachments/371759389889003532/939676856687423538/main.nim
[03:50:48] <FromDiscord> <ynfle> In reply to @ckennedy "Oh yeah?": ☝️
[03:58:14] <FromDiscord> <ckennedy> Whoa, nice work! So it loops over the fields and generates the `fieldName` and `setName` for each one?
[04:02:29] <FromDiscord> <ynfle> In reply to @ckennedy "Whoa, nice work! So": Ya
[04:02:29] <FromDiscord> <ynfle> sent a code paste, see https://play.nim-lang.org/#ix=3OLV
[04:05:09] <FromDiscord> <ckennedy> sent a code paste, see https://play.nim-lang.org/#ix=3OLW
[04:06:27] <FromDiscord> <ynfle> In reply to @ckennedy "Got it. Great starting": 👍
[04:16:07] <FromDiscord> <noow> templates and inlined procs should have roughly the same overhead (= close to none), right?
[04:17:00] <FromDiscord> <noow> is there a flag which makes all procs that can be inlined inlined?
[04:18:43] <FromDiscord> <Elegantbeef> The C compiler already will when doing `release`/`danger`
[04:18:44] <FromDiscord> <Elegantbeef> Inline procedures may not be inlined though, whereas templates always will be
[04:27:39] <FromDiscord> <noow> In reply to @Elegantbeef "The C compiler already": ah makes sense
[05:00:36] <FromDiscord> <auxym> templates are inlined by nim, inline procs are inlined by gcc (at its discretion)
[05:46:25] <FromDiscord> <gibson> Karax question: How is it direct dom alterations like HTMX or AlpineJS do not confuse Karax's virtual dom functionality?
[06:05:49] *** Quits: krux02 (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de) (Remote host closed the connection)
[06:38:00] *** Quits: jsef5 (~jsef5@2603-9001-0101-e300-254c-4414-8513-8c56.inf6.spectrum.com) (Quit: CoreIRC for Android - www.coreirc.com)
[06:50:41] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[06:54:35] <FromDiscord> <Sabena Sema> The main reason you use templates instead of a normal proc (that gets inlined, you can use pragmas to add an attribute that will _force_ it to always be inlined, unless you use msvc) is that they don't open new scopes
[06:55:49] <FromDiscord> <Sabena Sema> so like an "assert" procedure that takes a bool can't print the expression that failed, as it's evaluated before the procedure is called and is not longer accessible, and assert macro can access it
[07:13:21] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:29:08] <FromDiscord> <Evrensel Kişilik> sooooooooooooooooooooooo
[07:29:12] <FromDiscord> <Evrensel Kişilik> i wrote this
[07:29:14] <FromDiscord> <Evrensel Kişilik> https://rohanrhu.github.io/gdb-frontend/tutorials/makefile-integration/
[07:35:08] <FromDiscord> <noow> is there a way to tell nim that function calls are illegal within a certain region of code
[07:35:40] <FromDiscord> <noow> (if i want to force myself to rewrite everything in terms of templates)
[07:35:42] <FromDiscord> <Elegantbeef> What do you mean?
[07:36:08] <FromDiscord> <Sabena Sema> yes, but it's not a good idea
[07:36:20] <FromDiscord> <noow> isn't inlining always faster?
[07:36:24] <FromDiscord> <Sabena Sema> no
[07:36:58] <FromDiscord> <noow> oh god
[07:37:24] <FromDiscord> <Sabena Sema> it makes the generated code larger
[07:37:48] <FromDiscord> <Sabena Sema> like if you have a huge function and call it twice it's faster to not inline it
[07:38:13] <FromDiscord> <Sabena Sema> because if you don't inline then the second call executes code that's probably already in the instruction cache
[07:38:17] <FromDiscord> <Sabena Sema> if you inline then it doesn't
[07:38:26] <FromDiscord> <noow> ah thanks
[07:38:27] <FromDiscord> <Sabena Sema> there are other reasons it can be slower too
[07:38:33] <FromDiscord> <noow> that's reasonable
[07:39:02] <FromDiscord> <Sabena Sema> in fact, one of the biggest reason you inline in the first place is that it helps _other_ optimizations down the line
[07:39:23] <FromDiscord> <noow> i thought it was to avoid the overhead of a function clal
[07:39:27] <FromDiscord> <noow> (edit) "clal" => "call"
[07:39:30] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[07:39:50] <FromDiscord> <Sabena Sema> the compiler has to generate the non-inlined code to be suitable for any situation, but after in-lining it can optimize for the specific callsite
[07:39:53] <FromDiscord> <Sabena Sema> that's part of it
[07:40:01] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[07:40:24] <FromDiscord> <Elegantbeef> c compilers generally do inline intelligently
[07:40:24] <FromDiscord> <Sabena Sema> but for smaller functions with few parameters modern calling conventions don't have much more overhead than any other indirect jump
[07:40:30] <FromDiscord> <Sabena Sema> yeah
[07:40:38] <FromDiscord> <Sabena Sema> if you just care about performance it's best to leave it to the compiler
[07:41:14] <FromDiscord> <Sabena Sema> though, sometimes, it can be worth forcing inlining for some functions, especially if you care about debug-mode performance
[07:41:38] <FromDiscord> <Sabena Sema> stuff like c++ style metaprogramming that generates deep callchains of small functions
[07:43:28] <FromDiscord> <noow> thanks for the knowledge
[07:43:35] <FromDiscord> <noow> i shall try to use it the best i can
[07:43:52] <FromDiscord> <Elegantbeef> I tend to think "performance is only an issue when it's an issue"
[07:44:13] <FromDiscord> <Elegantbeef> Write code that works then make it fast
[07:44:36] <FromDiscord> <noow> of course correctness is where most of my time goes
[07:44:45] <FromDiscord> <noow> i just want to learn to profile and optimize
[07:45:04] <FromDiscord> <Sabena Sema> I'm a very "I want the code the look just so" kinda person, but inlining is definitely something where you should let the optimizer do it's thing
[07:45:14] <FromDiscord> <Elegantbeef> Well then get a profiler and profile
[07:45:15] <FromDiscord> <Elegantbeef> Dont just inline cause "I think it's faster"
[07:45:23] <FromDiscord> <Sabena Sema> yeah
[07:45:54] <FromDiscord> <noow> the overhead of calling functions is not something that shows up with valgrind, or?
[07:46:03] <FromDiscord> <Sabena Sema> I mean stuff like C style resizeable arrays having insertion functions that don't double copy the tail and stuff
[07:46:18] <FromDiscord> <Sabena Sema> I think valgrind is an instramentation based profiler (not sure)
[07:46:36] <FromDiscord> <Sabena Sema> if so, it's not great at identifying ... well most perf problems
[07:46:41] <FromDiscord> <Sabena Sema> you want a sampling profiler
[07:46:59] <FromDiscord> <Sabena Sema> you use instrumentation when you really need exact execution traces and callcounts
[07:47:23] <FromDiscord> <noow> ah okay
[07:47:35] <FromDiscord> <Sabena Sema> the usual linux solution is "perf"
[07:47:38] <FromDiscord> <Elegantbeef> If calling functions is what needs optimized you're in a good state
[07:47:42] <FromDiscord> <Sabena Sema> the gold standard imo is intel V-Tune
[07:47:46] <FromDiscord> <Sabena Sema> but it only really works on intel CPUs
[07:47:58] <FromDiscord> <noow> but a sampling profiler would still only tell me which lines are being spent on the most
[07:48:02] <FromDiscord> <noow> right?
[07:48:20] <FromDiscord> <noow> yeah i'm on intel, thanks for the tip for "perf"
[07:48:28] <FromDiscord> <Sabena Sema> In reply to @Elegantbeef "If calling functions is": yeah, but if you use an instrumentation based  is can appear you're spending all your time calling functions when you actually are not
[07:48:40] <FromDiscord> <Sabena Sema> perf works on all (almost all) chips
[07:48:45] <FromDiscord> <Sabena Sema> perf is also just cool
[07:48:47] <FromDiscord> <noow> (edit) "intel," => "intel/linux,"
[07:49:06] <FromDiscord> <Sabena Sema> you can install debug symbols and run "perf top" and just see like globally where _everything_ on your system is spending time
[07:49:20] <FromDiscord> <noow> lol
[07:49:39] <FromDiscord> <noow> In reply to @Sabena Sema "you can install debug": probably needs root permissions then though
[07:50:03] <FromDiscord> <Rika> In reply to @Sabena Sema "the gold standard imo": AMD UProf
[07:50:14] <FromDiscord> <Sabena Sema> imo v-tune is mcuh, much better than uprof
[07:50:26] <FromDiscord> <Rika> It’s same same to me
[07:50:36] <FromDiscord> <Rika> If I can’t use it it’s basically worse to me xd
[07:50:48] <FromDiscord> <Sabena Sema> yeah 😄
[07:50:59] <FromDiscord> <noow>  https://media.discordapp.net/attachments/371759389889003532/939737408390451240/scrn-2022-02-06-05-20-42.png
[07:51:00] <FromDiscord> <noow> lol
[07:51:07] <FromDiscord> <Sabena Sema> that's fine
[07:51:15] <FromDiscord> <Sabena Sema> it can sample from the wrapper
[07:51:27] <FromDiscord> <Rika> Performance tools usually need root for the really good kinda sampling lol
[07:51:28] <FromDiscord> <Sabena Sema> it just won't tell you where in the kernel you're spending time after making a syscall
[07:51:50] <FromDiscord> <Sabena Sema> yeah, you can get basic sampling with just like, the ability to ptrace your own processes
[07:52:10] <FromDiscord> <Sabena Sema> for the like, full uarch overview stuff yeah
[07:52:39] <FromDiscord> <Sabena Sema> (good profilers can sample not just time spent, but also the status of various CPU bits)
[08:04:28] <FromDiscord> <noow> i think perf does not like linux-hardened
[08:07:24] <FromDiscord> <noow> but i finally got a sample
[08:07:38] <FromDiscord> <Rika> oh it wont like hardened kernels
[08:09:05] <FromDiscord> <noow> what would eqcopy stand for
[08:09:31] <FromDiscord> <noow> (edit) "eqcopy" => "eqcopysystem"
[08:14:28] <FromDiscord> <Rika> `=copy` in system.nim
[08:16:27] *** Quits: fowl (~fowlmouth@user/fowl) (Quit: cya pals)
[08:27:02] *** Joins: fowl (~fowlmouth@user/fowl)
[08:42:41] *** Quits: fowl (~fowlmouth@user/fowl) (Quit: cya pals)
[08:48:02] *** Joins: fowl (~fowlmouth@user/fowl)
[08:58:32] *** Quits: fowl (~fowlmouth@user/fowl) (Quit: cya pals)
[08:59:13] *** Joins: fowl (~fowlmouth@user/fowl)
[09:24:49] <FromDiscord> <Hamid_Bluri> hey, why do i get `invalid pragma: dynlib: "..."` ?
[09:25:40] <FromDiscord> <Hamid_Bluri> sent a code paste, see https://play.nim-lang.org/#ix=3OMT
[09:25:58] <FromDiscord> <Elegantbeef> Showing code is wonderful
[09:26:32] <FromDiscord> <Elegantbeef> types arent stored in dynamic libs afaik
[09:26:36] <FromDiscord> <Hamid_Bluri> sent a code paste, see https://play.nim-lang.org/#ix=3OMU
[09:26:40] <FromDiscord> <Elegantbeef> So using `dynlib` for a type makes 0 sense
[09:27:01] <FromDiscord> <Hamid_Bluri> Oh, thanks
[09:27:13] <FromDiscord> <Sabena Sema> yeah types are a convention, they are not stored in object code at all
[09:27:17] <FromDiscord> <Sabena Sema> (rtti excluded)
[09:27:23] <FromDiscord> <slackaduts> Can someone explain to me the difference between a sequence and an array (coming from python, VERY much a novice in Nim)
[09:27:34] <FromDiscord> <Elegantbeef> arrays are static sized
[09:27:57] <FromDiscord> <slackaduts> Oh. I'm assuming sequences can be iterated through as arrays can, correct?
[09:27:57] <FromDiscord> <Elegantbeef> sequences are not
[09:27:57] <FromDiscord> <Elegantbeef> That's all you really need to know
[09:28:03] <FromDiscord> <Elegantbeef> There are more differences but not that should bother you really
[09:28:05] <FromDiscord> <Elegantbeef> Yes
[09:28:11] <FromDiscord> <Elegantbeef> Arrays are compile time fixed collections of T
[09:28:12] <FromDiscord> <slackaduts> cool ty
[09:28:17] <FromDiscord> <Elegantbeef> Sequences are dynamically sized collections of T
[09:28:34] <FromDiscord> <Elegantbeef> Arrays can also be indexed by any ordinal
[09:28:51] <FromDiscord> <Elegantbeef> So you can make `array[bool, int]` for instance
[09:29:05] <FromDiscord> <slackaduts> ah, cool
[09:29:12] <FromDiscord> <Hamid_Bluri> i didn't know bool is ordinal
[09:29:23] <FromDiscord> <Elegantbeef> It's an enum
[09:29:30] <FromDiscord> <Elegantbeef> !eval echo bool is enum
[09:29:34] <NimBot> false
[09:29:43] <FromDiscord> <Elegantbeef> Hey fuck you nimbot
[09:29:47] <FromDiscord> <Hamid_Bluri> lol
[09:30:03] <FromDiscord> <slackaduts> In reply to @Elegantbeef "Hey fuck you nimbot": Matrix 4: Resurrections
[09:30:22] <FromDiscord> <Elegantbeef> sent a code paste, see https://paste.rs/P4N
[09:30:44] <FromDiscord> <Elegantbeef> Bool being magic means it doesnt abide to `enum` typeclass
[09:30:53] <FromDiscord> <Elegantbeef> Ponders if that's a bug
[09:32:17] <FromDiscord> <slackaduts> sent a code paste, see https://paste.rs/7mZ
[09:32:29] <FromDiscord> <Elegantbeef> Yea
[09:32:45] <FromDiscord> <Elegantbeef> `ClientHandler` is a type
[09:32:45] <FromDiscord> <Elegantbeef> Oh nevermind i see the error 😀
[09:32:57] <FromDiscord> <Elegantbeef> My reading skills are second to all
[09:33:34] <FromDiscord> <slackaduts> sent a code paste, see https://play.nim-lang.org/#ix=3ON1
[09:33:46] <FromDiscord> <Elegantbeef> What's `ClientHandler`'s type definition
[09:33:53] <FromDiscord> <Elegantbeef> Did you forget to do `clients: seq[Client]`?
[09:34:10] <FromDiscord> <Hamid_Bluri> export postfix ``
[09:34:20] <FromDiscord> <slackaduts> sent a code paste, see https://play.nim-lang.org/#ix=3ON2
[09:34:24] <FromDiscord> <Elegantbeef> Despite outward appearances Nim is not Python, it actually has module export levels
[09:34:36] <FromDiscord> <slackaduts> I do not know what that means
[09:34:38] <FromDiscord> <slackaduts> anyway
[09:34:47] <FromDiscord> <Elegantbeef> `clients: seq[Client]` is how you make a field accessible from another module
[09:34:52] <FromDiscord> <slackaduts> oh
[09:35:03] <FromDiscord> <Elegantbeef> It's the opposite of the `_thing` in python, but enforced
[09:35:24] <FromDiscord> <Elegantbeef> all top level symbols in Nim are by default private and need `` to export
[09:35:35] <FromDiscord> <Rika> i mean technically its "enforced" in python but here there is no workaround other than exporting
[09:35:50] <FromDiscord> <Elegantbeef> It's not enforced it's a programmer contract the last i checked
[09:36:01] <FromDiscord> <Elegantbeef> The runtime doesnt say "No stop it get some help"
[09:36:09] <FromDiscord> <Rika> not really, you have to do some fuckery to get there
[09:36:23] <FromDiscord> <Elegantbeef> I thought it was just doing `myObject._myField`
[09:37:47] <FromDiscord> <Rika> no
[09:37:52] <FromDiscord> <Rika> it does some mangling too afaik
[09:37:57] <FromDiscord> <Rika> or was that double underscore?
[09:38:03] <FromDiscord> <Rika> one or the other is doing mangling
[09:38:24] <FromDiscord> <Elegantbeef> two underscores mangles
[09:38:31] <FromDiscord> <Elegantbeef> and the mangle is `classNamefieldName`
[09:38:58] <FromDiscord> <Elegantbeef> Actually seems either
[09:39:05] <FromDiscord> <Elegantbeef> > Any identifier of the form \_\_geek (at least two leading underscores or at most one trailing underscore) is replaced with \_classname\_\_geek
[09:39:45] <FromDiscord> <Elegantbeef> So i guess it's safe to say "it's the opposite of Python's `_Field`
[09:40:13] <FromDiscord> <Elegantbeef> Cause you can also technically get the other fields if you really wanted to outside of the base module
[09:41:09] <FromDiscord> <Elegantbeef> As usual i'm still rambling and the person asking for help is in another universe
[09:41:44] *** Quits: fowl (~fowlmouth@user/fowl) (Quit: cya pals)
[09:41:53] <FromDiscord> <slackaduts> In reply to @Elegantbeef "As usual i'm still": sorry
[09:42:07] <FromDiscord> <Elegantbeef> Why are you apologizing i'm the one rambling
[09:42:21] <FromDiscord> <slackaduts> oh, nvm then
[09:42:26] <FromDiscord> <Rika> xd
[09:42:30] <FromDiscord> <slackaduts> "fuck you, I'm not sorry" xd
[09:42:36] <FromDiscord> <Elegantbeef> There we go
[09:42:37] <FromDiscord> <Rika> thats the spirit
[09:42:42] <FromDiscord> <Elegantbeef> You'll fit right in if you keep that behaviour
[09:43:08] <FromDiscord> <Elegantbeef> Atleast that's pretty much how the few active people act 😛
[09:44:03] <FromDiscord> <Elegantbeef> cept evo, he's too positive
[09:44:11] <FromDiscord> <Elegantbeef> Always thanking me for helping, fucking weirdo
[09:44:37] <FromDiscord> <slackaduts> always say crew off to someone who helps you
[09:44:40] <FromDiscord> <slackaduts> :gigachad:
[09:44:49] <FromDiscord> <slackaduts> (edit) "crew" => "screw"
[09:44:50] <FromDiscord> <Elegantbeef> There you go
[09:44:55] <FromDiscord> <Elegantbeef> Make them stay humble
[09:45:46] <FromDiscord> <slackaduts> also holy shit Nim's docs are awful↵↵like I have nothing against the person/people who wrong them but damn
[09:45:57] <FromDiscord> <slackaduts> (edit) "wrong" => "wrote"
[09:46:05] <FromDiscord> <Elegantbeef> "PRs welcome" 😀
[09:46:18] <FromDiscord> <Elegantbeef> Which docs btw?
[09:46:57] <FromDiscord> <slackaduts> I'm looking at nim for python programmers
[09:47:07] <FromDiscord> <slackaduts> it's been genuinely wrong about some things
[09:47:11] <FromDiscord> <Elegantbeef> Ah the wiki github
[09:47:33] <FromDiscord> <Elegantbeef> Feel free to modify it 😀
[09:48:13] <FromDiscord> <slackaduts> sent a code paste, see https://paste.rs/tk8
[09:48:17] <FromDiscord> <Elegantbeef> I dont know python much so cant say much about it 😀
[09:48:25] <FromDiscord> <Elegantbeef> seems like you did `for Client in clients`
[09:48:44] <FromDiscord> <slackaduts> sent a code paste, see https://play.nim-lang.org/#ix=
[09:48:51] <FromDiscord> <Elegantbeef> Hard to say the issure without the code with an error
[09:48:54] <FromDiscord> <slackaduts> (edit) 
[09:49:15] <FromDiscord> <Elegantbeef> Well what's the line it's erroring on
[09:49:15] <FromDiscord> <Elegantbeef> It's clearly not that one
[09:49:41] <FromDiscord> <slackaduts> oh, it's not even erroring in my project
[09:49:50] <FromDiscord> <slackaduts> this is so strange
[09:50:06] <FromDiscord> <Elegantbeef> What's the entire error and what's the code?
[09:50:13] *** Joins: fowl (~fowlmouth@user/fowl)
[09:50:32] <FromDiscord> <slackaduts> getting it, will take a sec
[09:50:42] <FromDiscord> <Rika> whats wrong with the wiki? ill look at it
[09:51:07] <FromDiscord> <Rika> also full error is always appreciated, most lines are pretty useful
[09:51:08] <FromDiscord> <slackaduts> sent a code paste, see https://play.nim-lang.org/#ix=3ON5
[09:51:11] <FromDiscord> <Rika> ok
[09:51:14] <FromDiscord> <slackaduts> lemme get code now
[09:51:39] <FromDiscord> <Elegantbeef> Issue is you dont have hashes imported
[09:51:43] <FromDiscord> <Rika> you're doing something with `[]` that you put a client instead of a string or w/e
[09:52:19] <FromDiscord> <Elegantbeef> They're using a `Table[Client, T]` and did not export `hashes` so cannot do `a[client]` i assume
[09:52:29] <FromDiscord> <Rika> or dont have a hash for client
[09:52:33] <FromDiscord> <slackaduts> sent a code paste, see https://play.nim-lang.org/#ix=3ON6
[09:52:41] <FromDiscord> <Rika> is client your own type
[09:52:46] <FromDiscord> <Elegantbeef> I think 1.6.0 made it so hash works on refs by default
[09:52:47] <FromDiscord> <Rika> you have to implement a hash function for it
[09:53:00] <FromDiscord> <slackaduts> it's not my type it's from a library
[09:53:02] <FromDiscord> <slackaduts> but yes
[09:53:14] <FromDiscord> <slackaduts> (edit) "it's not my type it's from a ... library" 03added "yet to be finished"
[09:53:48] <FromDiscord> <Elegantbeef> Is the library public?
[09:53:49] <FromDiscord> <Elegantbeef> Wait nevermind
[09:54:04] <FromDiscord> <Elegantbeef> `import std/[tables, hashes]`
[09:54:04] <FromDiscord> <Elegantbeef> That should resolve the issue
[09:54:55] <FromDiscord> <slackaduts> In reply to @Elegantbeef "`import std/[tables, hashes]`": same error
[09:55:10] <FromDiscord> <Elegantbeef> then implement a hash procedure for `Client`
[09:55:11] <FromDiscord> <slackaduts> In reply to @Rika "you have to implement": that sounds very complex
[09:55:21] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/hashes.html
[09:55:24] <FromDiscord> <Elegantbeef> Explains how
[09:55:31] <FromDiscord> <Elegantbeef> Uses obscure operators cause fuck you i guess
[09:56:45] <FromDiscord> <slackaduts> gotta love how a simple thing like an iterator is massively overcomplicated for no real reason
[09:56:53] <FromDiscord> <Elegantbeef> It's not the iterator
[09:57:02] <FromDiscord> <slackaduts> client is the iterator here
[09:57:17] <FromDiscord> <slackaduts> sent a code paste, see https://play.nim-lang.org/#ix=
[09:57:43] <FromDiscord> <Elegantbeef> That's not causing this
[09:57:53] <FromDiscord> <Rika> thats not the issue
[09:58:04] <FromDiscord> <Rika> `var client_speeds {.global.} = initTable[Client, int]()` this is technically your issue
[09:58:07] <FromDiscord> <Elegantbeef> the issue is that there isnt a `hash` procedure declared for your `Client`
[09:58:08] <FromDiscord> <Elegantbeef> `nim -v`?
[09:58:26] <FromDiscord> <slackaduts> In reply to @Rika "`var client_speeds {.global.} =": I just looked up how to create an empty table here
[09:58:42] <FromDiscord> <Rika> tables need hashes
[09:59:00] <FromDiscord> <Rika> client doesnt have a hash function
[09:59:08] <FromDiscord> <Rika> therefore you cant use it as a key in a table
[09:59:10] <FromDiscord> <slackaduts> how does one make a hash function
[09:59:17] <FromDiscord> <Rika> In reply to @Elegantbeef "https://nim-lang.org/docs/hashes.html": elaborated here
[10:00:12] <FromDiscord> <Elegantbeef> You can do `-d:nimPreviewHashRef` as a compiler flag
[10:01:08] <FromDiscord> <Elegantbeef> sent a code paste, see https://paste.rs/Ymn
[10:01:18] <FromDiscord> <Elegantbeef> Though i dont recall if it hashes the pointer or the fields
[10:01:32] <FromDiscord> <Elegantbeef> It hashes the pointer
[10:01:43] <FromDiscord> <slackaduts> this language sure is great at giving you the illusion of simplicity
[10:02:13] <FromDiscord> <Rika> In reply to @Elegantbeef "It hashes the pointer": of course it does, two same objects but different refs musnt be ==
[10:02:21] <FromDiscord> <Elegantbeef> It's a systems programming language afterall 😛
[10:02:23] <FromDiscord> <Rika> In reply to @slackaduts "this language sure is": so does python, so does js, so does ...
[10:02:39] <FromDiscord> <Elegantbeef> And to be fair making your own hash isnt the most complex thing
[10:02:49] <FromDiscord> <slackaduts> In reply to @Elegantbeef "And to be fair": sure is seeming like it lmao
[10:03:19] <FromDiscord> <Rika> did you at least read the documentation
[10:03:28] <FromDiscord> <slackaduts> what documentation, it's very scattered
[10:03:36] <FromDiscord> <slackaduts> I've been looking up shit as I can
[10:03:42] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/hashes.html
[10:03:42] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/hashes.html
[10:03:43] <FromDiscord> <Rika> we sent you a link
[10:03:45] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/hashes.html
[10:03:47] <FromDiscord> <slackaduts> yes
[10:03:51] <FromDiscord> <Rika> did you open it
[10:03:52] <FromDiscord> <slackaduts> I've been reading that
[10:03:56] <FromDiscord> <Rika> did you read it wholly
[10:03:59] <FromDiscord> <Rika> not skim
[10:04:00] <FromDiscord> <Elegantbeef> It explains in there how to hash it
[10:04:00] <FromDiscord> <Elegantbeef> The first example
[10:04:01] <FromDiscord> <Rika> not skip
[10:04:01] <FromDiscord> <slackaduts> I thought you meant docs in general, you never specified
[10:04:10] <FromDiscord> <slackaduts> im fucking reading it
[10:04:15] <FromDiscord> <Elegantbeef> We referenced the hash docs 3 times 😀
[10:04:45] <FromDiscord> <Rika> then ask instead of complain, what dont you understand from it
[10:05:00] <FromDiscord> <Rika> so at least we can get somewhere instead of argue
[10:05:16] <FromDiscord> <Elegantbeef> Arguing is fun!
[10:05:19] <FromDiscord> <Rika> its a waste of your time to argue, you'd really prefer to get on with it right? so let us help you
[10:06:25] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/tables.html#basic-usage-hashing also explains the issue
[10:13:30] <FromDiscord> <slackaduts> In reply to @Elegantbeef "https://nim-lang.org/docs/tables.html#basic-usage-h": so what isf there's fields within the Client type that also don't have a hashing function
[10:13:35] <FromDiscord> <slackaduts> (edit) "isf" => "if"
[10:14:04] <FromDiscord> <slackaduts> sent a code paste, see https://play.nim-lang.org/#ix=3ONa
[10:14:57] <FromDiscord> <Elegantbeef> the procedure needs to be named `hash` btw
[10:15:34] <FromDiscord> <Elegantbeef> Depending on the behaviour you want is what you need to hash
[10:15:36] <FromDiscord> <slackaduts> In reply to @Elegantbeef "the procedure needs to": oh.
[10:15:55] <FromDiscord> <Elegantbeef> If you want an object with the same value fields to match you only need to hash the value fields
[10:16:19] <FromDiscord> <Elegantbeef> If you just want a pointer to match you can use the `-d:nimPreviewHashRef`
[10:16:56] <FromDiscord> <Rika> In reply to @slackaduts "so what if there's": then they also need a hash function
[10:17:10] <FromDiscord> <slackaduts> oh boy.
[10:17:11] <FromDiscord> <Rika> beef whip the hash generating macro smh
[10:17:16] <FromDiscord> <Rika> (edit) "beef whip ... the" 03added "out"
[10:17:21] <FromDiscord> <Rika> you better have on
[10:17:22] <FromDiscord> <Rika> (edit) "on" => "one"
[10:17:31] <FromDiscord> <Elegantbeef> I dont cause i dont use reference objects much 😀
[10:17:41] <FromDiscord> <slackaduts> I heard macro's have the potential to break stuff a ton so I haven't looked into them
[10:17:45] <FromDiscord> <slackaduts> (edit) "macro's" => "macros"
[10:18:03] <FromDiscord> <Rika> hammers have the potential to break stuff a ton
[10:18:06] <FromDiscord> <Rika> people still use them
[10:18:08] <FromDiscord> <Elegantbeef> They dont "break stuff a ton"
[10:18:19] <FromDiscord> <Elegantbeef> Anyway the solution could just be that CLI flag
[10:18:24] <FromDiscord> <Elegantbeef> depends on the behaviour you want
[10:18:36] <FromDiscord> <slackaduts> In reply to @Elegantbeef "depends on the behaviour": I don't know enough to answer this
[10:19:15] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3ONb
[10:19:58] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3ONc
[10:20:25] <FromDiscord> <slackaduts> I just want a client to correspond to an integer in a table
[10:20:34] <FromDiscord> <slackaduts> I don't know what either of those even do
[10:20:47] <FromDiscord> <slackaduts> (edit) 04removed "even"
[10:21:32] <FromDiscord> <Elegantbeef> Then try the compiler flag and if that doesnt work for you implement your own hash for the `Client`
[10:21:47] <FromDiscord> <Elegantbeef> The diference is that any instantiation of your object with the same fields gets the same entry in the table, versus each unique instance of client gets it's own entry
[10:22:10] <FromDiscord> <Elegantbeef> Are fields the important delimiter or are instances is the basic question
[10:22:24] <FromDiscord> <slackaduts> In reply to @Elegantbeef "The diference is that": the latter is what I want
[10:23:16] <FromDiscord> <Elegantbeef> Then there you go the compiler flag will work
[10:23:27] <FromDiscord> <slackaduts> ok thanks
[10:24:45] <FromDiscord> <Elegantbeef> Table relations can be complicated depending on what you're after 😀
[10:24:46] <FromDiscord> <Elegantbeef> You can have it behave like a value object or like an integer
[10:24:52] <FromDiscord> <Elegantbeef> By like an integer i mean the pointer is hashed and used
[10:25:23] <FromDiscord> <Elegantbeef> inane ramblings again
[10:25:29] <FromDiscord> <slackaduts> I'm listening
[10:27:01] <FromDiscord> <Rika> beef i dont think what you said is clear
[10:27:16] <FromDiscord> <Elegantbeef> Have i ever been?
[10:27:22] <FromDiscord> <Rika> basically what he means is when it comes to hashing ref objects, you can either hash the inner regular object or the pointer value
[10:27:41] <FromDiscord> <slackaduts> ah
[10:28:20] <FromDiscord> <Rika> the former means that any object (as long as the data is the same) would have the same hash↵the latter means that if the pointers are the same, the hashes are the same, regardless of data (or you can also incorporate the data if wanted, theres a lot of options)
[10:28:49] <FromDiscord> <slackaduts> yeah
[10:29:20] <FromDiscord> <Elegantbeef> There's a reason that by default refs werent automatically done 😀
[10:30:26] <FromDiscord> <Elegantbeef> But now we have a flag that allows us to easily do it and overload if we need to
[10:31:17] <FromDiscord> <Elegantbeef> The flag wont be needed for the next minor nim version iirc, just here for migration
[10:34:49] <FromDiscord> <slackaduts> welp I'm going to bed, my mind and patience are fading fast and I have shit to do tomorrow↵thanks for the help
[10:59:55] *** Quits: [R] (~rs@genoce.org) (Ping timeout: 256 seconds)
[11:00:16] *** Joins: [R] (~rs@genoce.org)
[11:25:13] *** Joins: pro (~pro@user/pro)
[11:34:23] <FromDiscord> <Zajt> In reply to @enthus1ast "maybe also add --gc\:arc": Added those two but doesn't work when I add them. What do you mean with host application?
[11:35:51] <NimEventer> New post on r/nim by timrichardson: Debugging, see https://reddit.com/r/nim/comments/slrk7w/debugging/
[11:37:27] <FromDiscord> <xx_ns> In reply to @Zajt "Added those two but": think he meant to ask whether the application that loads the 64-bit dll is also by itself 64-bit
[11:38:22] <FromDiscord> <Zajt> yeah it is
[11:53:01] <FromDiscord> <0000> i have aids
[12:05:48] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:4003:8970:d961:ff06)
[12:25:29] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:4003:8970:d961:ff06) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:26:36] *** Joins: Kitsune_ (~u0_a154@2001:a61:504d:201:a00a:6ab6:1cf7:76a5)
[12:27:27] *** Quits: Kitsune_ (~u0_a154@2001:a61:504d:201:a00a:6ab6:1cf7:76a5) (Client Quit)
[13:08:12] *** Quits: xaltsc (~xaltsc@user/xaltsc) (Remote host closed the connection)
[13:19:13] <FromDiscord> <Phil> Hmm my google-fu is disappointing me once again
[13:19:28] <FromDiscord> <Phil> Do we have a library for converting a jpeg/png or whatever to webp?
[13:19:50] <FromDiscord> <Phil> I've found pixie so far but I don't think that's what I'm looking for. I just need conversion not image creation
[13:20:57] <FromDiscord> <Elegantbeef> Well pixie can handle conversion but webp isnt supported by it
[13:21:41] <FromDiscord> <Phil> Hmmmmmmmmmmm↵hmmmmmmmmmmm
[13:22:08] <FromDiscord> <Elegantbeef> `libwebp` exists
[13:22:11] <FromDiscord> <Phil> I've never looked into it but am contemplating whether I should just write a python script
[13:22:15] <FromDiscord> <Elegantbeef> But you'd need to wrap it
[13:22:16] <FromDiscord> <Phil> And call that
[13:22:36] <FromDiscord> <Elegantbeef> What kinda  bumfuckery are you doing
[13:22:46] <FromDiscord> <Elegantbeef> https://developers.google.com/speed/webp/docs/api
[13:22:59] <FromDiscord> <Elegantbeef> It's like 2 functions
[13:23:02] <FromDiscord> <Phil> I think asking which bumfuckery I'm not doing is a question with an easier answer
[13:23:18] <FromDiscord> <Phil> Mostly I just want, if users upload images to my webserver, for them to be webp
[13:23:49] <FromDiscord> <Phil> I allow myself to be tyrannical enough that I force webp upon them if they don't.↵Mostly because I've got some overview pages where I display a decent amount of images and I want them to be loading decently fast.
[13:24:11] *** Joins: PMunch (~PMunch@user/pmunch)
[13:24:43] <FromDiscord> <Phil> UI like this https://media.discordapp.net/attachments/371759389889003532/939821399340625940/Screenshot_from_2022-02-06_10-54-23.png
[13:24:47] <FromDiscord> <Elegantbeef> Well you can use cwebp if you're lazy
[13:24:47] <FromDiscord> <Elegantbeef> But the proper thing would be to wrap libwebp
[13:25:10] <FromDiscord> <Phil> ... I guess it would teach me how to wrap libraries
[13:25:22] <FromDiscord> <Phil> Which is a skillset I don't have in nim and is likely to come in handy
[13:25:38] *** Joins: krux02 (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de)
[13:26:02] <FromDiscord> <Elegantbeef> Well it's a simple API so have at -er
[13:26:13] <FromDiscord> <Phil> Given that I haven't wrapped anything ever
[13:26:22] <FromDiscord> <Phil> Is there any sort of stuff I can read into to get an introduction?
[13:26:28] <FromDiscord> <Elegantbeef> Thought it's a windows library so it's a fucking pain to get the library
[13:26:29] <FromDiscord> <Elegantbeef> I mean a google library 😀
[13:26:53] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/manual.html#foreign-function-interface-importc-pragma there isnt much to it really
[13:27:35] <FromDiscord> <Elegantbeef> Oh nice they have easily downloaded libraries
[13:28:02] <FromDiscord> <Elegantbeef> The encode file is 500 loc and heavily commented
[13:29:52] <FromDiscord> <Phil> So there I was
[13:29:54] <FromDiscord> <Elegantbeef> Oh they ship the static libraries
[13:29:58] <FromDiscord> <Phil> Googling if somebody already did the work for me
[13:30:03] <FromDiscord> <Phil> I found juancarlospaco
[13:30:17] <FromDiscord> <Phil> and he apparently only wraps the CLI stuff
[13:30:24] <FromDiscord> <Phil> Dangit!
[13:30:36] <FromDiscord> <Elegantbeef> Let's see if c2nim works with it
[13:30:42] <FromDiscord> <Elegantbeef> It's simple so i assume so
[13:34:17] <FromDiscord> <Phil> I just downloaded the source code tar
[13:34:35] <FromDiscord> <Elegantbeef> You dont need the sourcee code
[13:34:35] <FromDiscord> <Elegantbeef> https://storage.googleapis.com/downloads.webmproject.org/releases/webp/index.html
[13:34:36] <FromDiscord> <Phil> I'm really noticing my lack of experience in C because I'm immediately getting overwhelmed by the fucktons of files in there
[13:34:44] <FromDiscord> <Elegantbeef> You can download the library here
[13:34:53] <FromDiscord> <Elegantbeef> You want the library not the source
[13:34:59] <FromDiscord> <Elegantbeef> There are like 6 C files for the library
[13:35:08] <FromDiscord> <Elegantbeef> You only need to wrap `types.h` `encode.h` and `decode.h`
[13:38:48] <FromDiscord> <Elegantbeef> Let's see if i can get c2nim to work on it and explain how before i sleep
[13:40:24] <FromDiscord> <Phil> So include/webp and...err
[13:40:29] <FromDiscord> <Phil> Well I got the files, I'm seeing the manual
[13:40:33] <FromDiscord> <Phil> I'm not seeing which command to execute
[13:40:49] <FromDiscord> <Elegantbeef> Yea that's it
[13:40:49] <FromDiscord> <Elegantbeef> `c2nim file.h` will convert it
[13:40:56] <FromDiscord> <Elegantbeef> Looking at it further `types` is pretty much useless in Nim
[13:42:21] <FromDiscord> <Phil> It is certainly keeping one of my CPU cores occupied
[13:42:38] <FromDiscord> <Elegantbeef> It took my cpu like 1ms
[13:42:56] <FromDiscord> <Phil> huh, that was the speed I had for encode.h
[13:43:00] <FromDiscord> <Phil> Types.h is still running strong
[13:43:13] <FromDiscord> <Elegantbeef> types.h is empty and useless
[13:43:16] <FromDiscord> <Phil> Look, I know my Lenovo T440 is a potato
[13:43:39] <FromDiscord> <Phil> Can't wait for the frame.work to finally arrive
[13:44:01] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:4003:8970:d961:ff06)
[13:44:41] <FromDiscord> <Phil> Okay I just CTRL+C'd it, there's no way it takes 5 minutes to decode a flipping 2 kb file, must've bugged out onme
[13:45:21] <FromDiscord> <Phil> Particularly not for like 70 lines of file
[13:45:52] <FromDiscord> <Elegantbeef> Ok so replacing `WEBPB_EXTERN` inside `encode.h` gets us on the path of proper code
[13:46:44] <FromDiscord> <Phil> What did you replace it with?
[13:46:58] <FromDiscord> <Elegantbeef> Nothing
[13:47:27] <FromDiscord> <Elegantbeef> It's for exporting C code
[13:48:52] *** Quits: mjsir911 (~bnc@user/mjsir911) (Quit: Goodbye, World!)
[13:49:07] *** Joins: mjsir911 (~bnc@user/mjsir911)
[13:49:33] <FromDiscord> <Elegantbeef> Havent used c2nim much so i'm not the best to walk through it
[13:49:34] <FromDiscord> <Elegantbeef> Generally you want to make c2nim work with the C code so it can generate the wrapper
[13:50:23] <FromDiscord> <Phil> So for wrapping my choices are c2nim (I assume that one is preferred?) and wrapping myself
[13:51:12] <FromDiscord> <Elegantbeef> https://github.com/nim-lang/c2nim/blob/master/doc/c2nim.rst there is the manual
[13:51:12] <FromDiscord> <Elegantbeef> You can try futhark, or nimterop
[13:51:20] <FromDiscord> <Elegantbeef> The code is relatively simple so wrapping yourself isnt a tremendous effort
[13:52:22] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3ONT
[13:52:28] <FromDiscord> <Elegantbeef> But i mean c2nim is faster 😛
[13:52:34] <FromDiscord> <Phil> I'll do lunch, maybe let some time pass and in the end try wrapping myself simply because it'd mean learning more
[13:53:13] <FromDiscord> <Phil> It's faster but I think gaining some understanding before using tools that remove the step could be beneficial
[13:53:16] <FromDiscord> <Elegantbeef> Here's what the C file looked like https://play.nim-lang.org/#ix=3ONU
[13:53:18] <FromDiscord> <Phil> If I have to do tweaking either way
[13:53:40] <FromDiscord> <Elegantbeef> The tweaking isnt much
[13:53:45] <FromDiscord> <Phil> ... That was c2nim right?
[13:53:49] <FromDiscord> <Elegantbeef> Yea
[13:54:06] <FromDiscord> <Elegantbeef> You have to do a few things but it's relatively simple
[13:54:07] <FromDiscord> <Phil> For a second there I believed you hand translated literally 200 lines of code in less than a minute while talking with me
[13:54:14] <FromDiscord> <Elegantbeef> Lol
[13:54:48] <FromDiscord> <Elegantbeef> It will need a `{.push: header: "encode.h".}` and a `{.link: "libwebp.a".}` and the like for windows/mac
[13:55:17] <FromDiscord> <Phil> Ahhh check, so the header provides the proc signatures
[13:55:28] <FromDiscord> <Phil> And the pragma provides the point to where you actually call those procs
[13:55:46] <FromDiscord> <Phil> (edit) "And the pragma provides the point to where you actually call ... those" 03added "the content of"
[13:56:09] <FromDiscord> <Phil> Is that how all C works? A header to define the interface in your binary blob and then you just trust that header?
[13:56:36] <FromDiscord> <Elegantbeef> That's how libraries work yes
[13:56:46] <FromDiscord> <Elegantbeef> System libraries are declared using a C header, your programming language says "Ok that's what this library has" and then you use it like that
[13:57:50] <FromDiscord> <Elegantbeef> the `.a` file on linux is a static library which is compiled into the binary
[13:58:00] <FromDiscord> <Phil> Man
[13:58:04] <FromDiscord> <Elegantbeef> The fun part is you can relatively easily use this with pixie when it's wrapped
[13:58:46] <FromDiscord> <Elegantbeef> Use pixie to load png/jpegs, then pass them to webp to be output as you want
[13:58:52] <FromDiscord> <Phil> Short moment of contemplation here.↵It really speaks for nim that as someone with no compsci experience that is just a python js java webdev can pick up nim and get a relatively complex project going and even start learning about C interop
[13:59:11] <FromDiscord> <Phil> (edit) 04removed "as"
[13:59:12] <FromDiscord> <Elegantbeef> Hey i'm 100% Self taught so... uhhh 😀
[13:59:18] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:4003:8970:d961:ff06) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:59:38] <FromDiscord> <Elegantbeef> People learn what they need
[14:00:00] <FromDiscord> <Phil> I'm just gushing a bit about the really nice learn curve
[14:00:49] <FromDiscord> <Phil> for somebody that already has development experience. I think without that you'd have a tough time either way due to the sheer amount of concepts you have to understand like objects and such
[14:01:44] <FromDiscord> <Elegantbeef> Anyway hopefully this puts you on the path to doing the rest
[14:01:47] <FromDiscord> <Phil> Thanks for the nim file btw! I'll take a stab it and see if I can replicate it after lunch
[14:02:46] <FromDiscord> <Elegantbeef> You wont need it as messy as this but this is what you'll kinda want https://github.com/treeform/staticglfw/blob/master/src/staticglfw.nim#L1-L89
[14:02:58] <FromDiscord> <Elegantbeef> linking the files per OS
[14:03:08] <FromDiscord> <Elegantbeef> passing any flags that are needed
[14:03:40] <FromDiscord> <Elegantbeef> Hopefully when you get around to it someone that knows better is around else i'll have to help tomorrow when i get on
[14:03:48] <FromDiscord> <Rika> With regards to the learning curve
[14:03:58] <FromDiscord> <Rika> I believe it’s just because you are interacting with the community
[14:04:15] <FromDiscord> <Rika> Otherwise it’s probably just as miserable or a little less as every other language
[14:05:27] <FromDiscord> <Elegantbeef> Probably more in this case
[14:05:38] <FromDiscord> <Elegantbeef> Cause converting C into Nim is pretty much a "Here are pragmas help yourself"
[14:06:51] <FromDiscord> <noow> i tried writing a game in C with sdl once
[14:07:03] <FromDiscord> <noow> i couldn't get it to link on windows with mingw
[14:07:09] <FromDiscord> <noow> worked first try on linux
[14:07:22] <FromDiscord> <noow> linking is an arch enemy of mine i guess
[14:07:39] <FromDiscord> <noow> (edit) "linking ... is" 03added "on windows"
[14:08:37] <FromDiscord> <Rika> It is for all of us
[14:08:45] <FromDiscord> <Rika> It’s miserable there I’d say
[14:09:09] <FromDiscord> <noow> oh?
[14:09:25] <FromDiscord> <noow> so it's not just me being stupid?
[14:10:12] <FromDiscord> <noow> the task that i was doing is actually non-trivial? wow
[14:10:27] <FromDiscord> <Rika> I mean I think it is trivial
[14:10:35] <FromDiscord> <Rika> It’s just we’re all dumb
[14:10:50] <FromDiscord> <Rika> I guess that actually means it’s non trivial then lol
[14:14:34] <FromDiscord> <Phil> Regarding the learning curve I'm not sure I'd agree. ↵Yeah a lot of my journey is eased by asking you guys, but (outside of macros, that's a book with seven seals) a lot of those could reasonably also be solved by bashing my head against the problem for a couple hours. ↵↵The same just didn't hold true for Rust for me when i tried it out.You couldn't even get a damn settings import to work without feeling like half a master thesis to le
[14:14:57] <FromDiscord> <Rika> Rust is a massive outlier
[14:15:00] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:4003:8970:d961:ff06)
[14:15:11] <FromDiscord> <Rika> That motherfucker is essentially impossible to learn in a month or whatever
[14:15:38] <FromDiscord> <Rika> You probably would have a quicker learning experience if you got a lobotomy first before learning
[14:16:04] <FromDiscord> <Phil> I like to express it more like Rust's learning curve being a flat wall, but I fully agree with you
[14:16:18] <FromDiscord> <Phil> I think I just gave up after week 6 or sth
[14:17:26] <FromDiscord> <Rika> I tried it before too and yeah, it’s basically “your brain better be made for this or you ain’t having fun”
[14:17:53] <FromDiscord> <Rika> There are a lot of nice concepts from rust that I’d love for Nim to have
[14:19:20] <FromDiscord> <noow> if Rust's learning curve is a flat wall, Haskell's is angled backwards
[14:19:50] <FromDiscord> <Phil> Does nim have something for stupid easy parallelization? Like doing multi threaded work for a "map" operation on an array? I recall rust having a lib for that which was literally trivial to use
[14:19:53] <FromDiscord> <Rika> I learned Haskell easier than rust
[14:20:26] <FromDiscord> <Phil> Ray something or another it was called in rust IIRC
[14:22:12] <FromDiscord> <Rika> Probably weave is the closest to “dead easy”
[14:22:27] <FromDiscord> <noow> would there be a problem with just using sequtils' map and threads
[14:23:31] <FromDiscord> <Rika> Well it’s not too easy to use just map and threads
[14:29:46] <FromDiscord> <Elegantbeef> Anyway i go to sleep
[14:29:47] <FromDiscord> <Elegantbeef> https://github.com/mratsim/weave#data-parallelism↵(@Phil)
[14:32:22] <FromDiscord> <Phil> In reply to @Elegantbeef "Anyway i go to": Sleep well!↵Also looks really cool!
[14:32:32] <FromDiscord> <Rika> I was ignored sadge
[14:32:49] <FromDiscord> <Phil> I saw yours as well, I was just brought back by the ping because I was reading the weave docs at the time
[14:33:13] <FromDiscord> <apahl> In reply to @Isofruit "Does nim have something": Have a look at https://nim-lang.org/docs/system.html#%7C%7C.i%2CS%2CT%2CPositive%2Cstaticstring
[14:33:20] <FromDiscord> <Phil> Naturally thanks to you as well for the pointing out that got me to the initial finding
[14:33:45] <FromDiscord> <noow> why are there no compiler errors for procs that have a return type but 1. contain no return statements 2. no result = 3. no expression at the end
[14:34:25] <FromDiscord> <Rika> Implicit result = default(T) at the start
[14:34:34] <FromDiscord> <noow> any way to turn that off?
[14:34:38] <FromDiscord> <Rika> No
[14:34:44] <FromDiscord> <Rika> Not that I know of
[14:36:20] <FromDiscord> <Tetralux> sent a long message, see https://paste.rs/Zsz
[14:36:40] <FromDiscord> <Tetralux> (edit) "http://ix.io/3OO7" => "http://ix.io/3OO6"
[14:38:08] <FromDiscord> <noow> do we know that that library uses threads and not just coroutines/async
[14:38:34] <FromDiscord> <noow> ah nevermind i re-read the message
[14:38:40] <FromDiscord> <noow> sorry i am half asleep
[14:38:41] <FromDiscord> <Tetralux> If it doesn't use threads, it might not even be faster in the first place 😁
[14:38:55] <FromDiscord> <Tetralux> In fact, probably likely not. 🤣
[14:39:15] <FromDiscord> <noow> well if it's 10 I/O bound activities, maybe yes
[14:39:22] <FromDiscord> <noow> like 10 GUI elements
[14:39:33] <FromDiscord> <noow> altho arrays are a weird data structure for them
[15:12:49] <PMunch> Hmm, are there any way to see where a module is imported into my project?
[15:13:31] <PMunch> I try to run polymorph on a microcontroller but I get /home/peter/.choosenim/toolchains/nim-1.6.2/lib/pure/concurrency/cpuinfo.nim(100, 14) Error: undeclared identifier: 'sysconf'
[15:13:40] <PMunch> But I can't figure out where it is imported
[15:17:26] <FromDiscord> <Phil> Outside of running grep with an appropriate regex / opening that dir in vscode to search with a regex I can't think of anything
[15:17:45] <FromDiscord> <Phil> Assuming you can get the folder structure on your microcontroller onto a normal PC
[15:18:04] <FromDiscord> <Phil> It it must be CLI tools I can only think of grepping
[15:31:07] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[15:37:38] <FromDiscord> <enthus1ast> https://nim-lang.org/docs/posix.html#sysconf%2Ccint
[15:41:49] <PMunch> Hmm, Nim really needs better tracking of when things are actually used..
[15:42:15] <FromDiscord> <Phil> there's a nimgrep binary
[15:42:16] <FromDiscord> <Phil> No idea what it does
[15:42:21] <FromDiscord> <Phil> But has the word "grep" in the name
[15:42:49] <PMunch> Nimgrep is essentially a way to grep for things with Nims style insensitivity
[15:43:32] <PMunch> I found the error, it is a `from std/cpuinfo import countProcessors`
[15:43:50] <PMunch> But that happens in a macro of a branch that shouldn't be evaluated
[15:44:56] <PMunch> Oh wait, it's not in a macro
[15:45:04] <PMunch> Then I see why this doesn't work
[15:47:42] <PMunch> Bummer, I really wanted to see if I could get something like polymorph or pararules to run on an Arduino Uno, would be cool to have a completely different paradigm running on one of these controllers
[15:49:05] <PMunch> Pararules seemed to compile correctly, but it failed because the program it generated was too big
[15:56:06] <FromDiscord> <Phil> pmunch, are you familliar with c2nim?
[15:56:30] <FromDiscord> <Phil> Or how to figure out what a macro stands for
[15:56:41] <FromDiscord> <Phil> (edit) "Or how to figure out what a macro ... stands" 03added "in C in a header file"
[15:58:54] <PMunch> @Phil, familiar enough that I decided to not use it and wrote Futhark instead..
[15:59:28] <FromDiscord> <Phil> Assuming I wanted to wrap this by hand
[15:59:38] <FromDiscord> <Phil> Because I'm dilligent and would like to have any comprehension of what I'm doing
[15:59:44] <PMunch> Oh you're into punishment? Kinky
[16:00:05] <FromDiscord> <Phil> It's 3 very small files
[16:00:13] <PMunch> But seriously, if you're diligent you want things to be done right, the manual process is very error prone
[16:00:13] <FromDiscord> <Phil> But for example
[16:00:24] <FromDiscord> <Phil> `WEBP_EXTERN int WebPPictureImportRGBX(`↵I've got this
[16:00:34] <FromDiscord> <Phil> I have no idea what WEBP_EXTERN is, I think it's a macro
[16:00:44] <PMunch> Do you know what is very good at reading and understanding C code? A C compiler, and Futhark uses Clang to read and understand the C files for you
[16:01:00] <PMunch> Mhm, Futhark knows what WEBP_EXTERN is
[16:01:04] <FromDiscord> <Phil> sent a code paste, see https://play.nim-lang.org/#ix=3OON
[16:01:09] <FromDiscord> <Phil> How the heck did he know that macro turns into "static x"?
[16:01:20] <FromDiscord> <Rika> He probably didn’t
[16:01:40] <PMunch> It's probably a macro that turns on the `extern` flag in C under some conditions
[16:01:44] <FromDiscord> <Phil> But... but he added it to the encode.h file !
[16:02:08] <FromDiscord> <Phil> That c2nim block wasn't there before, I'm comparing the two side by side at the moment to wrap my head around it
[16:02:23] <FromDiscord> <Phil> (edit) "That c2nim block wasn't there before, I'm comparing the two ... side" 03added "(original vs beefs version)"
[16:02:26] <PMunch> Do you know what you don't need to do if you use Futhark? Modify the .h source files
[16:03:07] <PMunch> That way you can just pull new versions and it automatically wraps the new version
[16:03:17] * PMunch waves hand and whispers *magic*
[16:03:40] <FromDiscord> <Phil> There's a subtle message somewhere in there
[16:03:42] <FromDiscord> <Phil> I can feel it
[16:04:23] <PMunch> This is at least one definition of it: https://github.com/webmproject/webp-wic-codec/blob/main/src/libwebp/webp/types.h#L39
[16:04:36] <PMunch> It just adds `extern` to the definition
[16:04:57] <FromDiscord> <Phil> So he just looked through the source code for a definition and accordingly added the block? Huh
[16:05:00] <FromDiscord> <Phil> Fair
[16:05:26] <PMunch> Yup, whether or not he grabbed the correct one for your setup is anyones guess though
[16:06:21] <PMunch> Do you know what would grab the correct version so that you're guaranteed that it will work? Even if you change to a different system which has a different definition? You know like the DEFINE in C is supposed to do?
[16:06:36] <PMunch> I'll give you one guess
[16:07:45] <FromDiscord> <Phil> Is it...
[16:07:46] <FromDiscord> <Phil> hmm
[16:07:52] <FromDiscord> <Phil> I'll need to think on that one
[16:07:56] <FromDiscord> <Phil> Is it my internet connection?
[16:08:21] <FromDiscord> <Phil> Okay okay, fair I actually just read through the first 3 sections of the docs in the meantime
[16:09:21] <FromDiscord> <Phil> The current idea I'm getting is: open new project that uses futhark to deal with c and provides a nicer interface to anyone using it
[16:09:29] <FromDiscord> <Phil> (edit) "project" => "lib-project"
[16:09:37] <PMunch> Pretty much
[16:10:22] <FromDiscord> <Phil> ... nimble install futhark fails? Huh
[16:10:27] <PMunch> I mean I've used it directly a couple of times, but normally I create a module that uses Futhark to wrap a C library and add some utility functions/wrappers
[16:10:32] <PMunch> Fails with what?
[16:10:47] <FromDiscord> <Phil> Ohhh can't find clang
[16:10:49] <PMunch> Forgot to install libclang first?
[16:10:54] <FromDiscord> <Phil> yup
[16:11:26] <FromDiscord> <Phil> I just assumed ubuntu might already have it
[16:12:29] <FromDiscord> <Phil> hmmmm lclang
[16:16:41] <PMunch> Huh?
[16:16:56] <PMunch> apt install libclang-dev
[16:17:11] <PMunch> @Phil ^
[16:17:46] <FromDiscord> <Phil> Huh, I tried sudo apt install clang
[16:18:17] <FromDiscord> <Phil> That installed... something worth 290Mb at least, still didn't make it compile. Libclang also installed something, lets see
[16:18:19] <PMunch> Yes, that gets you the clang compiler, not the clang library
[16:18:23] *** Joins: kobi7 (~kobi@82.166.168.241.fix.netvision.net.il)
[16:18:32] <kobi7> hi
[16:18:35] <PMunch> Hello
[16:18:48] <kobi7> hey PMunch how are you doing?
[16:19:18] <PMunch> Pretty good, just chilling with some FOSDEM talks
[16:20:41] <kobi7> cool
[16:20:57] <kobi7> I am trying to stream from http. How do I do that in Nim?
[16:21:07] <kobi7> https
[16:23:51] <kobi7> nobody knows :-)
[16:24:06] <PMunch> Stream?
[16:27:20] <FromDiscord> <Phil> Welp, let's first go finding that libclang.lib file
[16:27:27] <FromDiscord> <Phil> Oh stream
[16:27:28] <FromDiscord> <Phil> Err
[16:27:43] <FromDiscord> <Phil> Yeah no idea, I stream audiofiles through apache because apache can, that's around it
[16:28:42] <kobi7> I mean, as a client
[16:28:55] <kobi7> this is what i want to do:https://lichess.org/api#operation/tvFeed
[16:29:25] <kobi7> it works in curl, but not in nim, or i don't know how to do it
[16:30:17] <FromDiscord> <Phil> Errr fair, sadly can't help there, I use JS/HTML for my GUI when streaming audiofiles
[16:30:35] <FromDiscord> <Phil> Essentially it's Angular
[16:30:53] <PMunch> Make a request, get the response stream, and read it line by line?
[16:32:37] <kobi7> it doesn't return 
[16:32:50] <kobi7> i think because it's a stream, so it's not over yet
[16:34:03] <kobi7> a user asked this before here: https://forum.nim-lang.org/t/6103
[16:34:28] <kobi7> but recvLine shows nothing... a mystery!
[16:34:43] <FromDiscord> <Phil> Okay I'm dumb, I can't find a `libclang.lib` file. I can find my clang dir with the clang binary in `/usr/lib/llvm-6.0/bin`
[16:35:23] <PMunch> @Phil, yes that is the clang compiler, not the clang library
[16:35:41] <PMunch> And you're not looking for a .lib file, you're looking for a .so file
[16:36:09] <PMunch> But you shouldn't have to look for it at all, if you installed it via apt like I showed you earlier I think it should find it automatically
[16:36:18] <FromDiscord> <Phil> Found it
[16:36:29] <kobi7> is there a way to get more verbose information from the socket?
[16:37:46] <FromDiscord> <Phil> sent a long message, see http://ix.io/3OOW
[16:38:44] <PMunch> @kobi7, well you can use Wireshark
[16:39:41] <PMunch> @Phil, do you have a file called /usr/lib/libclang.so?
[16:40:46] <FromDiscord> <Phil> nope, I've got /usr/lib/llvm-6.0/lib/libclang.so though
[16:43:58] <FromDiscord> <Phil> just made a symlink (`ln -s /usr/lib/llvm-6.0/lib/libclang.so /usr/lib`) to try it out but that didn't change anything, hmm
[16:44:25] <PMunch> Ah, try --passL:"-L/usr/lib/llvm-6.0/lib"
[16:44:38] <FromDiscord> <Phil> Wait, quotation marks?
[16:44:48] <FromDiscord> <Phil> That might explain a lot
[16:45:22] <PMunch> Not sure if you need them tbh
[16:45:26] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:4003:8970:d961:ff06) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[16:47:44] <FromDiscord> <Phil> That did it, may I make a pull request to adjust the command in the readme from `nimble install --passl:-L<path to libclang.lib> futhark` to `nimble install --passL:"-L<path to libclang.lib>" futhark` and maybe as an example for the pattern `nimble install --passL:"-L/usr/lib/llvm-6.0/lib" futhark`
[16:47:50] <FromDiscord> <Phil> (edit) "That did it, may I make a pull request to adjust the command in the readme from `nimble install --passl:-L<path to libclang.lib> futhark` to `nimble install --passL:"-L<path to libclang.lib>" futhark` and maybe as an example for the pattern `nimble install --passL:"-L/usr/lib/llvm-6.0/lib" futhark` ... " 03added "?"
[16:49:10] <kobi7> it seems only curl works
[16:51:42] <PMunch> Those instructions are actually for Windows
[16:52:00] <PMunch> "To install Futhark you first need to have clang installed. On Linux this is as simply as just grabbing it from your package manager."
[16:52:09] <PMunch> That's the only part of that which applies to Linux
[16:52:16] <PMunch> But yes, feel free to rewrite that section :)
[16:59:57] <kobi7> hmm.. doesn't work. no matter
[17:01:59] <FromDiscord> <Phil> Actually, pmunch, ignore my PR, I'll add another commit to it to split linux and windows section
[17:03:47] *** Quits: kobi7 (~kobi@82.166.168.241.fix.netvision.net.il) (Quit: Leaving)
[17:05:51] <PMunch> Hmm, just watched an interesting talk on GUI in Ada
[17:06:36] <PMunch> One takeaway which I thought was interesting is that he added all GUI events to a queue instead of using callbacks
[17:07:06] <PMunch> This meant that his main program was essentially just a simple state machine that could go between states that handled various events and discarded any other events
[17:07:27] <PMunch> And it should be able to handle pretty much any UI layer on top
[17:07:48] <PMunch> I think I might have found one of the missing puzzle pieces for my Nim GUI library
[17:09:29] <FromDiscord> <Phil> Alright, did the minimal readme update
[17:18:53] <FromDiscord> <BhamidipatiNikhil> This code that i wrote is outputting EOF error in the nim playground.... https://media.discordapp.net/attachments/371759389889003532/939880330792402944/unknown.png
[17:19:16] <FromDiscord> <BhamidipatiNikhil> but working fine in my vscode environment https://media.discordapp.net/attachments/371759389889003532/939880426221223997/unknown.png
[17:19:50] <FromDiscord> <BhamidipatiNikhil> I am using the same version of nim(1.6.2) in both.... Any idea guys why this is happening?
[17:21:30] <FromDiscord> <BhamidipatiNikhil> Actually i received runtime error on the atcoder.jp platform too... I have no idea why this EOF error is coming...
[17:22:50] <PMunch> Really hard to know without seeing the code
[17:23:24] <PMunch> But the playground is a fairly limited environment, just the fact that you managed to get an EOF without really having any files available is interesting
[17:26:00] <FromDiscord> <BhamidipatiNikhil> sent a code paste, see https://play.nim-lang.org/#ix=3OPe
[17:26:22] <FromDiscord> <Phil> \`\`\`nim↵\`\`\`
[17:26:50] <FromDiscord> <Phil> works on github, stackoverflow (well, not for nim but most other language) and maybe even reddit
[17:27:41] <FromDiscord> <Phil> essentially just write the language (here nim) after the backticks
[17:28:19] <FromDiscord> <Phil> Given that you're crashing playground though, you could just post a link from there that contains your code
[17:28:23] <FromDiscord> <BhamidipatiNikhil> sent a code paste, see https://play.nim-lang.org/#ix=3OPi
[17:28:28] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:4003:8970:d961:ff06)
[17:28:59] <FromDiscord> <Phil> yeeeeee playground link might be a better idea
[17:30:11] <FromDiscord> <BhamidipatiNikhil> In reply to @Isofruit "yeeeeee playground link might": https://play.nim-lang.org/#ix=3OPj
[17:31:54] <FromDiscord> <BhamidipatiNikhil> https://atcoder.jp/contests/abc238/tasks/abc238_e This is the problem i was attempting to solve!
[17:32:08] <FromDiscord> <Phil> I have some fundamental questions on why you're even using templates
[17:32:28] <FromDiscord> <Phil> But that's not the point
[17:33:02] <PMunch> And there you have your problem, line 112 as it says: stdin.readLine
[17:33:23] <PMunch> The playground doesn't send anything to the program over stdin, so it doesn't have anything to read
[17:34:35] <FromDiscord> <Phil> Ah, dang, Pmunch was faster
[17:34:53] <FromDiscord> <Phil> Just got to that point
[17:35:02] <FromDiscord> <BhamidipatiNikhil> I gave input in the atcoder platform.... https://media.discordapp.net/attachments/371759389889003532/939884392627707924/unknown.png
[17:35:27] <FromDiscord> <BhamidipatiNikhil> Still the same error https://media.discordapp.net/attachments/371759389889003532/939884500769472572/unknown.png
[17:36:28] <FromDiscord> <enthus1ast> well you must break out of your iterator
[17:37:17] <FromDiscord> <BhamidipatiNikhil> In reply to @Isofruit "I have some fundamental": I was using templates because i wanted just readability of code here... and i know i was not applying any procedure...!
[17:37:27] <FromDiscord> <BhamidipatiNikhil> In reply to @enthus1ast "well you must break": Which line... line number?
[17:38:53] <FromDiscord> <enthus1ast> from what i see in the images  line 8
[17:39:39] <FromDiscord> <enthus1ast> might be as easy as catch the EOFError and break
[17:41:23] <FromDiscord> <BhamidipatiNikhil> sent a code paste, see https://play.nim-lang.org/#ix=3OPr
[17:41:49] <FromDiscord> <BhamidipatiNikhil> In reply to @enthus1ast "from what i see": Line 8 worked very well lot of times!
[17:42:37] <FromDiscord> <BhamidipatiNikhil> currently its commented out.. https://media.discordapp.net/attachments/371759389889003532/939886300444643389/unknown.png
[17:42:56] <FromDiscord> <BhamidipatiNikhil> Still the same error!! EOF error!
[17:45:55] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:4003:8970:d961:ff06) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:47:08] <FromDiscord> <Rika> sent a code paste, see https://play.nim-lang.org/#ix=3OPw
[17:47:58] <FromDiscord> <BhamidipatiNikhil> This one? https://media.discordapp.net/attachments/371759389889003532/939887648879820820/unknown.png
[17:48:03] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:4003:8970:d961:ff06)
[17:48:31] <FromDiscord> <Rika> yes
[17:48:41] <FromDiscord> <Rika> its reading too much info
[17:51:35] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:4003:8970:d961:ff06) (Client Quit)
[17:52:38] <FromDiscord> <Waldecir Santos> How do I set async pragma in a proc var ? I'm doing this and no luck
[17:52:46] <FromDiscord> <Waldecir Santos> sent a code paste, see https://play.nim-lang.org/#ix=3OPy
[17:52:58] <FromDiscord> <BhamidipatiNikhil> 2 inputs.... is that too much? https://media.discordapp.net/attachments/371759389889003532/939888903563927573/unknown.png
[17:53:04] <FromDiscord> <BhamidipatiNikhil> 2 per line
[17:54:21] <FromDiscord> <enthus1ast> this code works for me↵(@Waldecir Santos)
[17:54:49] <FromDiscord> <Waldecir Santos> Oh I need to import asyncdispatch I keep forgetting the imports 🤦‍♂️
[17:54:56] <FromDiscord> <enthus1ast> \:)
[17:55:07] <NimEventer> New thread by Icedquinn: Using distinct types for windowed access (ex. index operator abuse), see https://forum.nim-lang.org/t/8871
[17:55:23] <FromDiscord> <Waldecir Santos> Ty
[17:57:11] *** Quits: pro (~pro@user/pro) (Quit: pro)
[17:59:21] *** Joins: arkurious (~arkurious@user/arkurious)
[18:07:22] <FromDiscord> <Phil> Okay
[18:07:50] <FromDiscord> <Phil> so of futhark I comprehend so far that I can use either "path" or "absPath" to define the directory that contains the header files I want to import
[18:08:35] <FromDiscord> <Phil> (edit) "so of futhark I comprehend so far that ... I" 03added "within the `importc` macro"
[18:09:20] <FromDiscord> <Phil> I use define for... sth? I have no comprehension of what goes in there. Is that a name of sth in the C-file? Can I just name that whatever I want?
[18:09:35] <FromDiscord> <Phil> And at the end of the block I give the name of the header file
[18:10:07] <FromDiscord> <Phil> sent a code paste, see https://paste.rs/0SL
[18:10:11] <FromDiscord> <Phil> I think? Pmunch?
[18:12:40] <PMunch> Sounds about right
[18:12:42] <FromDiscord> <Phil> For reference, this is in a file `/home/isofruit/dev/nimlibwebp/src/nimblibwebp/libwebp.nim`↵The resources folder is in `/home/isofruit/dev/nimlibwebp/resources/libwebp-1.2.2-linux-x86-64/include/webp`
[18:12:52] <FromDiscord> <Phil> The docs said path is relative to the project
[18:13:17] <PMunch> `define` adds C `#DEFINE` statements to your import. This is sometimes used similarly to how we do `-d:something` in Nim
[18:13:22] <FromDiscord> <Phil> I'm not sure whether that means relative to the file that calls futhark or the root folder of the project (which would be `/home/isofruit/dev/nimlibwebp`
[18:14:09] <PMunch> Uhm, should be relative to the root of the project IIRC
[18:14:25] <PMunch> Or maybe the main module of the compilation
[18:14:48] <FromDiscord> <Phil> Check, so that path should just start with /resources or start with ../resources
[18:14:56] <FromDiscord> <Phil> I'll keep that in mind!
[18:18:25] <FromDiscord> <Phil> Fun fact, the level to which I acknowledged "-d" so far was "Ah, when I pass this I can manipulate the mode in which my program is compiled", I saw it as little more than just a flag that you can access within the code to see if it's defined or not like a normal flag
[18:19:27] <FromDiscord> <Phil> Just namespaced so that custom flag stuff can be dealt with in any -d flag
[18:19:38] <FromDiscord> <Phil> (edit) "Just namespaced so that custom flag stuff can be dealt with in any -d flag ... " 03added "while the rest stays reserved for nim in general"
[18:21:23] <FromDiscord> <Phil> Either way, that looks to me like it's a way to manipulate how the lib is called and not if I just want to use it without any special flags
[18:21:32] <FromDiscord> <Phil> (edit) "flags" => "flags. So for now not necessary"
[18:21:55] <FromDiscord> <Phil> sent a code paste, see https://play.nim-lang.org/#ix=3OPQ
[18:22:34] <PMunch> Well I mean that is pretty much how the -d flag works
[18:22:48] <PMunch> It's just a way to define arbitrary values to things during compile-time
[18:23:48] <PMunch> You probably need an absPath to the clang stdlib as well
[18:23:52] <PMunch> Like I do in my example
[18:24:03] <PMunch> Otherwise it won't be able to find the definition of normal C types :P
[18:24:11] <FromDiscord> <Phil> Ahhhh fair
[18:24:49] <FromDiscord> <Phil> ... if I ever make this a public package I'll likely have to have the user pass that as an argument somehow, whatever they're compiling for
[18:25:35] <FromDiscord> <Phil> Because I think throwing the clang stdlib into the package might make it too large
[18:31:19] <FromDiscord> <Phil> ... at least I think that generates source code?
[18:31:22] <FromDiscord> <Phil> (edit) "https://paste.rs/yx4" => "https://paste.rs/iry"
[18:31:27] <FromDiscord> <Phil> sent a code paste, see https://paste.rs/Ii4
[18:32:41] <FromDiscord> <Goel> We want a full tutorial on "How to use Futhark" asap
[18:33:23] <FromDiscord> <enthus1ast> lol↵(@Goel)
[18:33:29] <FromDiscord> <Phil> I'll... write an example.md file for pmunch from whatever I learn?
[18:34:15] <FromDiscord> <Phil> I think I'm just severely limited here because this is pretty much the first time I'm even interacting with C or any low level language for the matter, a lot of the moving parts are whiffing past me
[18:35:09] <PMunch> @Phil, if you have a dynamic library you don't need that part
[18:35:20] <PMunch> Simply `passL:"-lmylib"`
[18:35:40] <PMunch> That' just a little bit of logic to compile stb and link it statically
[18:35:59] <PMunch> @Goel, I definitely should..
[18:36:40] <PMunch> And @Phil, you don't have to worry about the clang libraries, they don't get included in your Futhark output, clang just needs to know about them when it is compiling
[18:37:01] <FromDiscord> <Phil> Errr.... I think weblibp is static? Beef mentioned something like that, let me read in the docs if that's mentioned somewhere
[18:37:27] <FromDiscord> <Phil> Oh, it has both dynamic and static libs
[18:38:32] <PMunch> Yeah you probably just need to pass -lwebp on compile-time as long as you have it installed
[18:38:59] <PMunch> Yup, at least on Arch
[18:39:35] <FromDiscord> <Phil> With dynamic library being the superior option for it means that lib is only called as needed and can be updated independently of my wrapper
[18:40:39] <FromDiscord> <Phil> Wait, that means what I did with putting a resources folder into my project was pointless
[18:41:46] <FromDiscord> <Phil> Because I should have the weblibp in... one of my system's lib folders I think and use the path to that weblibp folder to get the header file
[18:51:54] <PMunch> Yes
[18:54:57] <FromDiscord> <Phil> Alright I'll go with static for now. Mostly because I misunderstood and if you want to compile the binary with dynamic linking you'll have to do it yourself, so I've got no .dll files in the folder I downoaded, only .a
[18:55:59] <FromDiscord> <Phil> (edit) "Alright I'll go with static for now. Mostly because I misunderstood and if you want ... tothem" 03added "compiled weblibp dll filesyou'll have" | "the binary with dynamic linking you'll have to do it" => "them"
[18:56:06] <FromDiscord> <adokitkat> Hi, a quick question, I couldn't find it. How do I "unpack" a seq of strings to fill a proc varargs parameter?
[18:56:25] <FromDiscord> <adokitkat> (edit) "it." => "answer."
[18:56:41] <PMunch> @adokitkat, I think you can just pass a seq to a varargs parameter directly
[18:57:11] <FromDiscord> <Rika> yeah, you dont need to "unpack" it
[18:57:20] <PMunch> @Phil, you're on Linux, if you end up with .dll files you've done something very wrong
[18:57:40] <FromDiscord> <Rika> on linux shared/dynamic libs are .so
[18:57:45] <PMunch> If you install libwebp through your package manager you should have libwebp.so in your /usr/lib folder
[18:58:01] <PMunch> And then it's just a matter of `--passL:"-lwebp"` and it should find it
[18:58:30] <FromDiscord> <Phil> Sadly not in apt
[18:58:37] <FromDiscord> <adokitkat> In reply to @PMunch "<@216745055770116106>, I think you": that is unfortunately broken
[18:58:47] <PMunch> For Futhark though you do need some header files to generate the definitions, these are typically installed under "/usr/include/webp" for example
[18:58:58] <FromDiscord> <adokitkat> atleast in one gintro function
[18:59:28] <FromDiscord> <Rika> In reply to @Isofruit "Sadly not in apt": debian based distros usually dont have the best package list
[19:00:03] <PMunch> So if you just name them and then `--passC:"-I/usr/include/webp"` I believe clang should find the .h file directly
[19:00:03] <FromDiscord> <Phil> Currently checking if I can have apt install the package for me by passing it the url somehow
[19:00:29] <PMunch> `apt install libwebp` didn't work?
[19:00:54] <FromDiscord> <adokitkat> there is a varargs parameter but it is a binding to C's GTK3 and when I pass a seq there it just passes it literally like "@[abc]" as a whole string
[19:00:57] <FromDiscord> <Phil> > Reading package lists... Done↵> Building dependency tree       ↵> Reading state information... Done↵> E: Unable to locate package libwebp
[19:01:03] <FromDiscord> <adokitkat> when I pass only one string, it works good
[19:01:20] <FromDiscord> <Phil> Did find a command that can add a repository though
[19:02:42] <FromDiscord> <Phil> Oh screw me it's called libwebp-dev
[19:02:46] <FromDiscord> <Rika> libwebp-dev?
[19:02:47] <FromDiscord> <Rika> yeah
[19:02:48] <FromDiscord> <Rika> i was thinking
[19:02:49] <FromDiscord> <Rika> lmao
[19:03:02] <FromDiscord> <Rika> maybe use apt search first next time 😛
[19:03:39] <FromDiscord> <Phil> I've honestly never ever had to
[19:04:03] <FromDiscord> <Phil> package was either named so I got it the first time or the webpage of the package included the package name to look for
[19:06:20] <FromDiscord> <pmunch> Typically development headers and such normally have the -dev postfix on Ubuntu
[19:06:48] <FromDiscord> <Phil> ~~Learning about the C ecosystem is the hardest part of this exercise~~
[19:13:05] <FromDiscord> <Phil> one import c per header file I assume
[19:13:11] <FromDiscord> <Phil> (edit) "import c" => "importc call"
[19:20:49] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:4003:8970:d961:ff06)
[19:23:01] <FromDiscord> <Skeleton> Im trying to install Nim from nim-lang.org, specifically the 64 bit version for use on Win10 and Windows defender is flagging some part of it as "potentially unwanted software"↵Is this normal?↵It says the file in question is called `Program:Win32/Uwamson.A!ml`
[19:23:23] <FromDiscord> <Skeleton> Im a noob so sorry if I left out some important info
[19:24:16] <FromDiscord> <Rika> it is a false positive. av heuristics are not very smart
[19:25:34] <FromDiscord> <Skeleton> Ah, thanks. Should be all safe then?
[19:27:57] <FromDiscord> <auxym> Yes, there's a long forum thread on the issue
[19:28:07] <FromDiscord> <Phil> Pretty much. What you're describing is sadly a known issue but neight impossible to properly fix since AV's are just throwing machine learning and flagging everything that isn't on a tree by the count of three
[19:28:15] <FromDiscord> <Phil> (edit) "neight" => "neigh"
[19:28:27] <FromDiscord> <Phil> (edit) "Pretty much. What you're describing is sadly a known issue but neigh impossible to properly fix since AV's are just throwing machine learning ... and" 03added "at everything"
[19:28:29] <FromDiscord> <auxym> https://forum.nim-lang.org/t/7885
[19:29:24] <FromDiscord> <auxym> short story is, some people wrote exploits in Nim, now AVs are flagging a bunch of stuff compiled by Nim as a virus
[19:29:37] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[19:30:29] <FromDiscord> <Skeleton> Sad. I've only used Ruby so far but after looking into some other languages, Nim looks very promising. I am going to try it anyways, I believe you guys.
[19:30:42] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[19:30:47] <FromDiscord> <Skeleton> Eventually I am going to switch to some linux distro instead of Win10 and then it wont be an issue I imagine
[19:32:16] <FromDiscord> <Phil> Pretty much
[19:35:39] <FromDiscord> <Skeleton> While Im around, can you guys suggest any digital books that go over Nim's features? Often times when Im not at home I used to read a pdf on a kindle about Ruby to try and understand more, It would be nice to have a Vim equivalent but It seems that Vim is much lower population than Ruby
[19:35:53] <FromDiscord> <Phil> On the one hand, I'm pretty sure giving my normal user write access to `/usr/bin` is a bad idea
[19:36:10] <FromDiscord> <Phil> On the other, it is really annoying me I can't do `nimble install futhark` without sudo
[19:37:54] <FromDiscord> <Phil> https://www.manning.com/books/nim-in-action↵↵Not a free book, but a book.
[19:43:20] <FromDiscord> <Phil> ... I've been stupid with futhark somewhere
[19:43:27] <FromDiscord> <Skeleton> In reply to @Isofruit "https://www.manning.com/books/nim-in-action  Not a": Thank you!
[19:43:36] <FromDiscord> <Phil> > Error: Unable to parse output of opir:↵> /bin/sh: 1: opir: not found
[19:43:48] <FromDiscord> <Phil> Back to reading the docs !
[19:50:33] <FromDiscord> <pmunch> Nope, you can list as many headers as you like in one call↵(@Phil)
[19:51:16] <FromDiscord> <pmunch> How did you install it? If you have the .nimble/bin folder in your path then that should work↵(@Phil)
[19:54:08] <FromDiscord> <Phil> sent a long message, see http://ix.io/3ORM
[19:56:28] <FromDiscord> <Phil> sent a long message, see http://ix.io/3ORN
[19:58:08] <FromDiscord> <Phil> sent a code paste, see https://play.nim-lang.org/#ix=3ORO
[19:59:34] <NimEventer> New thread by Sekao: Two-way communication with the new ORC-friendly channels, see https://forum.nim-lang.org/t/8872
[20:14:27] <PMunch> Uhm, you shouldn't install nimble packages with ude
[20:14:28] <PMunch> sudo*
[20:14:53] <PMunch> That probably put them in the root users home folder and not in your users home folder where they're supposed to go
[20:15:17] <FromDiscord> <Phil> So the solution thus is to changing permissions it seems
[20:18:33] <FromDiscord> <Phil> In reply to @PMunch "That probably put them": Hmmm okay, the error message for not installing with sudo changed to this:↵> Error: unhandled exception: cannot open: /home/isofruit/.cache/nim/opir_r/opir.json [IOError]↵... I'll just give myself read and write to `~/.cache`
[20:19:45] <PMunch> Uhm, try deleting that folder instead
[20:20:02] <PMunch> Probably when you ran as sudo you messed up the permissions in that folder
[20:20:20] <PMunch> Just "sudo rm -rf /home/isofruit/.cache/nim/opir_r"
[20:20:22] <FromDiscord> <Phil> huh
[20:20:25] <FromDiscord> <Phil> Yeah that did it
[20:20:38] <FromDiscord> <Phil> just sudo rm -r ~/.cache
[20:21:07] <Amun-Ra> sudo and ~?
[20:21:43] <FromDiscord> <Phil> ah, sorry, I was already in the correct dir, yeah that would lead to the wrong thing
[20:21:56] <FromDiscord> <Phil> So strictly speaking "sudo rm -r .cache"
[20:22:07] <FromDiscord> <Phil> Since my cwd was /home/isofruit
[20:32:37] <FromDiscord> <Phil> Oh wow
[20:32:51] <FromDiscord> <Phil> Rika wasn't kidding when they said debian doesn't use the most up to date libs
[20:33:34] <FromDiscord> <Phil> Just realized the example has clang 12.0, meanwhile my default install of clang is 6.0
[20:33:41] <FromDiscord> <Rika> lol
[20:33:46] <PMunch> 6.0?
[20:34:14] <FromDiscord> <Phil> > /usr/lib/llvm-6.0/lib/clang/6.0.0
[20:34:22] <PMunch> From 2018 :P
[20:34:54] <PMunch> Meanwhile my machine has updated to 13.0.0
[20:35:14] <FromDiscord> <Phil> Flexing his fancy arch up-to-datedness 😄
[20:35:15] <FromDiscord> <cigolog> One can import nim modules inside python via nimpy and nimporter. Is there some library to do the opposite - use python code inside nim?
[20:36:42] <FromDiscord> <Phil> HAH! New error message!
[20:37:38] <FromDiscord> <Phil> cigolog there's nimpy (I have not used it): https://github.com/yglukhov/nimpy
[20:39:29] <FromDiscord> <Phil> sent a code paste, see https://play.nim-lang.org/#ix=3ORX
[20:39:58] <FromDiscord> <Yepoleb> In reply to @Isofruit "Just realized the example": you can pin that specific package to testing or unstable
[20:40:05] <FromDiscord> <apahl> In reply to @cigolog "One can import nim": Nimpy can do that as well.
[20:40:21] <FromDiscord> <Yepoleb> or just upgrade fully to unstable, i wouldn't do development work on stable
[20:40:29] <FromDiscord> <Yepoleb> it's just a pain
[20:40:34] <FromDiscord> <cigolog> In reply to @apahl "Nimpy can do that": How does it deal with the fact most python code lacks type annotations?
[20:41:20] <FromDiscord> <Phil> In reply to @Yepoleb "or just upgrade fully": I've never ever done any work with C whatsoever, so I assume that's... a flag in apt somewhere to point the repositories to more up-to-date stuff?
[20:41:56] <FromDiscord> <apahl> In reply to @cigolog "How does it deal": Sorry, I am not familiar with the inner workings of Nimpy, just know about this: https://github.com/yglukhov/nimpy#calling-python-from-nim
[20:42:15] <FromDiscord> <Yepoleb> are you familiar with apt beyond basic commands?
[20:43:05] <FromDiscord> <Phil> Not really, apt search, apt autoremove/autoclean/clean, apt install, apt update, apt upgrade, them's the basics and I didn't go much beyond.
[20:45:05] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:4003:8970:d961:ff06) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[20:45:37] <FromDiscord> <cigolog> In reply to @apahl "Sorry, I am not": Looking into tests, it seems like it only honors standard python lib
[20:48:18] <FromDiscord> <Yepoleb> so debian has these 3 branches:↵unstable, where packages are introduced, this is kinda like the arch branch↵testing, where unstable packages go once there are no major bugs anymore↵stable, which is released every couple years as a polished snapshot of testing and only gets stability and security updates, no new versions
[20:48:45] <FromDiscord> <Yepoleb> you specify the branches you want to have available in /etc/apt/sources.list
[20:49:44] <FromDiscord> <apahl> In reply to @cigolog "Looking into tests, it": I guess that is just because it would be difficult to maintain tests on non-stdlib packages?
[20:49:59] <FromDiscord> <Phil> In reply to @Yepoleb "you specify the branches": Checking, reading through that file atm
[20:50:49] <FromDiscord> <Yepoleb> https://wiki.debian.org/DebianTesting this is a more in-depth summary of how the debian release cycle works
[20:54:52] <PMunch> @Phil https://github.com/PMunch/futhark/issues/11
[20:55:20] <PMunch> Essentially there's a bug in the current stable version of Nim (1.6.2). Try the release candidate for 1.6.4, or use devel
[20:55:30] <PMunch> https://github.com/PMunch/futhark/issues/11#issuecomment-1018470611
[20:57:25] <FromDiscord> <Yepoleb> @Phil imo for development you should use at least testing, because a stable release will keep the same old library version indefinitely (which is also the whole point of it, you don't want to update a server and a new version introduces new bugs)
[21:04:57] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:4003:8970:d961:ff06)
[21:06:55] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[21:08:03] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 256 seconds)
[21:13:22] <FromDiscord> <Ayy Lmao> Is it possible to send a ref through a c api expecting a void pointer? I'm trying to send it in with `addr` and then cast it back on the other side but I'm getting out of bounds errors.
[21:14:21] <PMunch> It should work, but refs are GCed so you need to make sure the object you have a ref to isn't being GCed while in C-land
[21:15:13] <FromDiscord> <Ayy Lmao> I'm building to emscripten and running `--gc:arc` so maybe that has something to do with it?
[21:16:19] <FromDiscord> <Phil> In reply to @Yepoleb "<@!180601887916163073> imo for development": I'll potentially play around with debian testing or so on my next machine. Since I have a new one incoming in the next couple weeks I don't think I'm willing to invest the time to do it right now
[21:18:48] <PMunch> @Ayy_Lmao, do you keep a reference to it when you pass it off to C-land?
[21:19:16] <PMunch> Or do you just allocate an object in Nim, pass the pointer to a C library, and then let Nim forget about it at which point it deallocates it?
[21:19:55] <FromDiscord> <Phil> Oh... oh wow, choosenim  update devel really hammers your CPU
[21:21:31] <FromDiscord> <Ayy Lmao> In reply to @PMunch "Or do you just": I'm keeping a reference to it. I'm trying to pass it to `emscripten_set_mousedown_callback` and get back the reference inside that callback. I might be making a problem where there isn't one though, I have a couple other things I can try.
[21:22:36] <PMunch> @Phil, yes it compiles Nim. The GCC compiler likes CPU cycles :P
[21:22:54] <FromDiscord> <Ayy Lmao> Yeah it seems to work to store a hash table of pointer to references and get the reference from the table instead of trying to cast to it
[21:23:13] <PMunch> I think you where just doing it wrong somehow..
[21:23:40] <PMunch> But it's hard to tell without any code
[21:25:13] *** Gustavo6046_ is now known as Gustavo6046
[21:25:39] <FromDiscord> <Ayy Lmao> sent a code paste, see https://play.nim-lang.org/#ix=3OSb
[21:26:45] <FromDiscord> <Phil> Well... new nim new error, let me check first if that already has an issue
[21:28:09] <FromDiscord> <Phil> Cache clearing was once more the issue, that fixed it yehaw
[21:30:01] <FromDiscord> <Phil> sent a long message, see http://ix.io/3OSf
[21:31:31] <FromDiscord> <Phil> (edit) "http://ix.io/3OSf" => "http://ix.io/3OSj"
[21:41:33] <PMunch> It's definitely one of those two
[21:42:42] <PMunch> Could you share you libwebp.nim file and I could try to build it here
[21:42:51] <PMunch> That would narrow it down to one possibility
[21:42:58] <FromDiscord> <Phil> Sure, it's like 6 lines
[21:43:10] <FromDiscord> <Phil> sent a code paste, see https://play.nim-lang.org/#ix=3OSl
[21:46:36] <PMunch> Compiles fine here
[21:47:02] <PMunch> For me it looks like this: http://ix.io/3OSm
[21:48:24] <PMunch> By the way, you can just delete `/home/isofruit/.cache/nim/project_d/r`
[21:48:44] <PMunch> Uhm, that is d/r as in -d:debug or -d:release
[21:49:01] <PMunch> You don't have to wipe the cache of every single program on your machine
[21:51:20] <FromDiscord> <Phil> No think!↵Just delete!
[21:51:51] <PMunch> `sudo rm -rf /` woooo
[21:51:56] <PMunch> Did that by mistake once..
[21:52:13] <FromDiscord> <Phil> it's an older meme, but of quality
[21:52:28] <PMunch> I think actually new version of rm doesn't allow you to do that :P
[21:52:34] <FromDiscord> <Phil> I didn't do that, I did delete some central dir once though
[21:52:55] <FromDiscord> <Phil> Don't recall which one anymore though, I think after that my sudo just was nonexistant
[22:18:48] <FromDiscord> <mlokis> something pinged me , do you know what it was?
[22:18:59] <FromDiscord> <mlokis> on this channel of cource
[22:19:06] <FromDiscord> <mlokis> (edit) "cource" => "course"
[22:19:22] <FromDiscord> <Phil> When did you last look?
[22:19:29] <FromDiscord> <huantian> you can do a mentions search in discord
[22:19:31] <FromDiscord> <Phil> Because there was a ping yesterday for FOSDEM talks
[22:19:48] <FromDiscord> <huantian> ^ it was probably that though
[22:22:28] <PMunch> @Phil, I hade once unpacked the root structure for an SD card I was going to boot from. And by accident I copied the whole thing not into `./` as I had intended, but rather to `/`. So `sudo cp` set to work copying all the nice ARM binaries into my x86 system..
[22:22:30] <PMunch> That was fun
[22:28:08] <FromDiscord> <Yepoleb> a friend once ran `chmod -R 777 /` because he got tired of using root to change files
[22:28:48] <FromDiscord> <Yepoleb> unfortunately a lot of tools check config file permissions and the system was unrecoverable
[22:29:28] <FromDiscord> <Yepoleb> like you can't sudo if the sudoers file is writable by everyone
[22:31:01] <FromDiscord> <slackaduts> sent a code paste, see https://play.nim-lang.org/#ix=3OSy
[22:36:37] <FromDiscord> <demotomohiro> I forget `^=` in python.
[22:37:09] <FromDiscord> <slackaduts> I loved it for "toggling" boolean values
[22:38:05] <NimEventer> New thread by Planetis: Is it a good idea to downcast Hash, see https://forum.nim-lang.org/t/8873
[22:38:10] <nrds> <06Prestige99> Like, foo = not foo?
[22:38:58] <FromDiscord> <slackaduts> i can't tell who's a person here and who's a regular bot lmao
[22:40:56] <FromDiscord> <Phil> Nimevener is bot
[22:41:06] <FromDiscord> <Phil> nrds is a portal for prestige to talk through to us
[22:41:09] <FromDiscord> <Phil> (edit) "to" => "with"
[22:41:30] <FromDiscord> <Phil> (edit) "Nimevener" => "Nimeventer"
[22:41:46] <FromDiscord> <slackaduts> In reply to @nrds "<Prestige> Like, foo =": foo ^= True↵IIRC is the same as setting it to true if it's false, and setting it to false if it's true
[22:42:18] <FromDiscord> <demotomohiro> So `^` is used as bitwise xor operator in both C and python. Nim has `xor` binary bitwise  xor operator.
[22:42:53] <FromDiscord> <demotomohiro> But Nim doesn't have `xor=` operator.
[22:43:02] <FromDiscord> <slackaduts> damn
[22:43:21] <nrds> <06Prestige99> `foo = not foo` should work for that use case though
[22:43:26] <FromDiscord> <slackaduts> oh
[22:44:49] <FromDiscord> <Phil> The way prestige wrote it also looks a lot more readable to me
[22:45:04] <FromDiscord> <slackaduts> yeah
[22:47:28] <FromDiscord> <Phil> ... I maybe should've updated to ubuntu 20 sooner
[22:47:29] <FromDiscord> <Phil> maybe
[22:47:39] <FromDiscord> <slackaduts> I used to use ubuntu
[22:47:49] <FromDiscord> <slackaduts> like 7 years ago
[22:47:52] <FromDiscord> <slackaduts> (edit) "like 7 years ago ... " 03added "roughly"
[22:48:23] <FromDiscord> <Phil> It's been doing its job pretty well for me so far
[22:49:25] <FromDiscord> <Phil> But I did want to at least try a rolling release at one point before I fully settle on something... after having used ubuntu for 5 years now
[22:49:37] <FromDiscord> <slackaduts> yeah I use a debloated and mostly de-spyware'd windows 11 with startallback since the new start menu is complete pisswater
[22:50:08] <FromDiscord> <Arathanis> Using the VS Code Nim extension. Anyone know if there is a way to fix up `config.nims` and other NimScript files so they don't report incorrect errors w/ missing symbols?
[22:50:31] <FromDiscord> <slackaduts> I wish that extension did anything for me
[22:50:44] <FromDiscord> <Arathanis> In reply to @slackaduts "I wish that extension": agreed... it is lacking
[22:50:48] <FromDiscord> <Phil> I've never had any issues ith it so hard for me to say
[22:50:56] <FromDiscord> <Arathanis> but better than nothing, its got most of the basic
[22:50:57] <FromDiscord> <Arathanis> (edit) "basic" => "basics"
[22:50:58] <FromDiscord> <Phil> I'd like for the intellisense to work a bit more consistently but...eh
[22:51:09] <FromDiscord> <Arathanis> yeah the intellisense is a little off
[22:51:25] <FromDiscord> <Arathanis> it almost needs you to reference a symbol in a library first before it starts picking up the symbols in that library
[22:51:51] <FromDiscord> <Phil> The only time I get proper intellisense is right after typing the import statement
[22:51:57] <FromDiscord> <Phil> If I compile in between it's over
[22:52:09] <FromDiscord> <Arathanis> lol yeah its not great
[22:52:11] <FromDiscord> <Phil> After that, I only get name suggestions from stuff I typed previously
[22:52:40] <FromDiscord> <Arathanis> pretty much my experience as well
[22:52:45] <FromDiscord> <Arathanis> at least we got syntax highlighting, right?
[22:52:53] <FromDiscord> <Phil> Yeh, it's nice
[22:54:09] <FromDiscord> <Arathanis> well i found a workaround for `.nims` files
[22:54:16] <FromDiscord> <Arathanis> so that it stops complaining
[22:54:27] <FromDiscord> <Arathanis> its only a little hacky but i guess its better than red lines under everything
[22:58:04] <FromDiscord> <Arathanis> sent a code paste, see https://play.nim-lang.org/#ix=3OSE
[22:58:25] <FromDiscord> <Arathanis> this ext seems to be actively maintained, so maybe ill post a github issue for it see if we can't get it to mature with feedback over time
[23:16:55] <FromDiscord> <Gustavo6046> In reply to @slackaduts "foo ^= True IIRC": wat, that's a bitwise operator, not a logical one
[23:17:03] <FromDiscord> <Gustavo6046> it makes sense if you want bitfields, though
[23:22:07] <PMunch> @slackaduts, I'm a bot though
[23:22:41] <FromDiscord> <slackaduts> lmao
[23:22:57] * PMunch bleep bloop
[23:22:58] <FromDiscord> <Phil> See, some bots tell the truth
[23:23:01] <FromDiscord> <Phil> Like NimEventer
[23:23:05] <FromDiscord> <Phil> And some bots are dirty fucking liars
[23:28:23] <FromDiscord> <Phil> Uh, shiny, Ubuntu 20 comes with clang 10
[23:28:57] <PMunch> Your use of shiny troubles me
[23:28:57] <FromDiscord> <Phil> Which now makes me only... like... 2 years and 3 versions behind
[23:29:24] <PMunch> That's patinated at best
[23:29:55] <FromDiscord> <Phil> Fuck I didn't expect this stomach muscle laughter workout this evening 😄
[23:32:02] <FromDiscord> <Phil> In reply to @PMunch "Your use of shiny": OSholm Syndrome makes so many things shiny
[23:37:11] <FromDiscord> <Phil> Yeeeee either way, Clang 10 is not the solution
[23:38:02] <PMunch> OSholm?
[23:39:16] <FromDiscord> <Phil> sent a code paste, see https://play.nim-lang.org/#ix=3OSR
[23:39:28] <FromDiscord> <Phil> So clang 12 or 13 likely are the target
[23:41:52] <FromDiscord> <Phil> In reply to @PMunch "OSholm?": By the fact I never left Debian for being unwilling to leave my Linux comfort zone while I was dealing with other things
[23:43:00] <PMunch> Aaah :P
[23:44:09] <PMunch> I'm curious, could you send me the JSON file within the cache directory?
[23:44:22] <PMunch> I wonder what is actually stored as unexposed
[23:45:17] <FromDiscord> <Phil>  https://media.discordapp.net/attachments/371759389889003532/939977567342059640/opir_FB883BC581E5EE78.json
[23:46:47] <FromDiscord> <Phil> That was the json you wanted right?↵`.cache/nim/nimlibwebp_d/opir_lotsofnumbers.json`?
[23:47:47] <FromDiscord> <Phil> Here in case the opir.json from `.cache/nim/opir_r/opir.json` https://media.discordapp.net/attachments/371759389889003532/939978197133570058/opir.json
[23:47:53] <FromDiscord> <Phil> (edit) "Here in case the opir.json from `.cache/nim/opir_r/opir.json` ... https://media.discordapp.net/attachments/371759389889003532/939978197133570058/opir.json" 03added "was your goal"
