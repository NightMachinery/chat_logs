[00:00:04] *** Joins: upsala2 (~zcb@185.213.155.232)
[00:00:32] *** Quits: rajkosto (~rajkosto@cable-178-149-127-189.dynamic.sbb.rs) (Ping timeout: 252 seconds)
[00:00:57] <control> hello, how can i generate random string including null value. say random.choice("abcd") including null value ""
[00:01:20] <habnabit_> control, what are the possible return values there?
[00:01:27] <control> abcd
[00:01:38] <habnabit_> control, you want either 'abcd' or '' and no other values?
[00:01:42] <control> yes
[00:01:50] <habnabit_> control, random.choice(['abcd', ''])
[00:02:59] *** Joins: wyclif (~wyclif@user/wyclif)
[00:03:13] *** Quits: upsala1 (~zcb@185.213.155.160) (Ping timeout: 268 seconds)
[00:04:20] *** Joins: pnoud (~pnoud@user/pnoud)
[00:04:57] *** Joins: ice9 (~ice9@user/ice9)
[00:05:07] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:06:30] *** Joins: i0e (~is0ke3@user/is0ke3)
[00:07:39] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[00:07:49] *** Quits: boxelephant (~boxelepha@cpe-71-67-174-31.insight.res.rr.com) (Ping timeout: 268 seconds)
[00:08:14] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[00:10:51] <control> habnabit_ great thanks
[00:10:59] *** Quits: kostkon__ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Remote host closed the connection)
[00:11:12] <control> now how can i randomize variables? random.choice([var0,line,var1,var2,var3,var4]) wont work?
[00:11:19] *** Joins: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[00:11:26] <habnabit_> control, "won't work"?
[00:12:39] *** Joins: Betal (~Beta@user/betal)
[00:12:55] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:13:29] *** Quits: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Read error: Connection reset by peer)
[00:13:48] *** Joins: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[00:14:31] *** Quits: p-i- (~Ohmu@113.53.219.54) (Quit: Leaving...)
[00:15:21] *** Joins: Adois (~Adoi@user/adoi)
[00:15:53] *** Joins: dba (uid502594@id-502594.stonehaven.irccloud.com)
[00:16:14] *** Quits: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com) (Ping timeout: 272 seconds)
[00:16:45] <control> i want to shuffle variables
[00:17:00] <control> newFile.write(random.shuffle([var0,line,var1,var2,var3,var4])+"\n")
[00:17:29] <habnabit_> control, sure; shuffle doesn't return the list. you make the list, call shuffle on it, then use the newly shuffled list
[00:17:46] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 252 seconds)
[00:18:11] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Quit: ZNC - https://znc.in)
[00:18:29] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[00:18:43] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-99ee-aace-56cc-b3af.res6.spectrum.com)
[00:19:46] *** Joins: wyclif (~wyclif@user/wyclif)
[00:21:49] *** Joins: scadman (~scadman@cpc145252-maid8-2-0-cust473.20-1.cable.virginm.net)
[00:22:42] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[00:23:17] <control> but it prints as a string, not as a variable
[00:23:25] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[00:23:29] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[00:23:34] <habnabit_> control, what's the difference?
[00:23:34] *** Joins: ice9 (~ice9@user/ice9)
[00:23:50] <habnabit_> control, i'm not sure what you're seeing vs. what you want instead
[00:24:21] *** Joins: Julian (~tos9@host-79-13-125-128.retail.telecomitalia.it)
[00:25:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[00:25:25] <jamea> xListaIN=[1.0, 56.0, 1.0, 75.0, 1.0, 4.0, 50.0, 1.0, 1.0, 15.0, 1.0, 30.0, 1.0, 1.0, 1.0, 21.0]  xListaInQty= [3.0, 3.0, 2.0, 2.0, 2.0, 2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0]  how to multiply?
[00:25:53] <KirkMcDonald> jamea: [a*b for a, b in zip(xListaIN, yListaInQty)]
[00:26:02] <habnabit_> jamea, with lists, you can use a comprehension to build a new list. easier to use numpy if you want pairwise operations though
[00:26:26] <KirkMcDonald> Also I spelled one of the lists' names wrong.
[00:26:47] <KirkMcDonald> And yeah, numpy makes this simpler.
[00:27:25] *** Quits: emptynine (tkk@cybertron.redlight.li) (Remote host closed the connection)
[00:27:33] *** Quits: a6a45081-2b83 (~aditya@122.163.205.132) (Remote host closed the connection)
[00:27:51] *** Joins: ice99 (~ice9@user/ice9)
[00:27:56] *** Joins: e9 (tkk@cybertron.redlight.li)
[00:28:58] *** Quits: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Read error: No route to host)
[00:29:18] *** Joins: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[00:29:31] *** Joins: Auron (Auron956@user/auron)
[00:29:44] *** Quits: Julian (~tos9@host-79-13-125-128.retail.telecomitalia.it) (Ping timeout: 268 seconds)
[00:30:24] *** Quits: xsperry (~as@user/xsperry) (Ping timeout: 272 seconds)
[00:30:26] <jamea> KirkMcDonald thanks
[00:30:33] <jamea> habnabit_ wity numpy how to?
[00:30:56] <habnabit_> jamea, arr1 * arr2
[00:31:02] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 272 seconds)
[00:31:11] *** Joins: elliewhatever (~elliewhat@cpc94372-ward12-2-0-cust96.10-2.cable.virginm.net)
[00:32:10] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[00:32:12] *** Quits: ice99 (~ice9@user/ice9) (Read error: Connection reset by peer)
[00:32:20] <control> habnabit_ here's part of my code
[00:32:22] <control> https://bpa.st/2UMQ
[00:32:33] *** Joins: female_student_4 (~female_st@2a01:388:243:150::1:51)
[00:32:41] *** Joins: ice9 (~ice9@user/ice9)
[00:32:52] *** e9 is now known as emptynine
[00:32:56] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-147.dsl.bell.ca)
[00:32:58] <habnabit_> control, ok. like i said, random.shuffle doesn't return the list
[00:32:59] <no_gravity> In a simple python project that provides a command line tool and some modules which the tool requires, how do you typically name the dir you put the modules into?
[00:33:25] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:33:39] <jamea> can't multiply sequence by non-int of type 'list' when i try: xListaQtyTotal=xListaIN*xListaInQty
[00:33:57] <habnabit_> jamea, you said 'with numpy'
[00:34:03] <habnabit_> jamea, if you have lists, you're not using numpy
[00:34:07] *** Joins: xa0s (~xa0s@mab.sdf.org)
[00:34:08] <grym> no_gravity: i usually ram cli.py and some_module.py in the same package, whose name is the name of the entry point
[00:34:24] <control> habnabit_ https://bpa.st/C4BQ like this?
[00:34:35] <no_gravity> grym: "ram"?
[00:34:56] <habnabit_> control, closer, but not quite. random.shuffle has to be on a line by itself
[00:34:59] *** Quits: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Read error: Connection reset by peer)
[00:35:05] <grym> no_gravity: as in "cram it all into the same bag"
[00:35:18] *** Joins: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[00:35:26] <habnabit_> control, also you're making a list of one element, which won't be shuffled. you need [var0, var1, ..]
[00:35:46] <no_gravity> grym: I want to put the modules in a module directory. I wonder if "modules" would be a normal choice.
[00:36:00] <grym> no_gravity: no
[00:36:02] <grym> it wouldn't
[00:36:33] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:2537:dba9:7530:9f55)
[00:36:49] <no_gravity> grym: Why not?
[00:37:23] <grym> no_gravity: it's a name without sense.  what's the point of, in myapp/cli.py, `from myapp.modules.useful_module import Foo`?
[00:37:30] *** Joins: wyclif (~wyclif@user/wyclif)
[00:37:34] *** Quits: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-147.dsl.bell.ca) (Ping timeout: 252 seconds)
[00:37:34] <grym> what's your justification for the extra indirection
[00:37:55] <no_gravity> grym: So when you look into myapp/ you see the tools you can call from the command line.
[00:38:14] <grym> no_gravity: ok, so `modules` is doubly silly there
[00:38:21] <grym> because now you explicitly cannot
[00:38:25] <no_gravity> grym: And not a bunch of modules that you cannot use from the command line.
[00:38:46] *** Joins: sco1 (~sco1@charon.whatbox.ca)
[00:38:55] <grym> if i want to know what i can use from the command line i am going to read the scripts or entry_points entries in pyproject.toml, setup.cfg, or setup.py
[00:39:02] <grym> that's what python reads, too
[00:39:08] <grym> so i'll certainly get the truth
[00:39:16] <no_gravity> grym: There is no setup
[00:39:16] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[00:39:19] <grym> no_gravity: whoops
[00:39:29] <grym> i'd fix that first
[00:39:34] <grym> if i can't pip install something
[00:39:36] <grym> i'm not going to use it
[00:39:37] <no_gravity> grym: I don't want a setup
[00:39:41] <no_gravity> grym: I use it.
[00:39:47] *** Joins: Julian (~tos9@host-79-13-125-128.retail.telecomitalia.it)
[00:39:51] <grym> no_gravity: great.  my opinions won't help you, ask someone else
[00:40:21] <deniska> the obvious fix is to add this to modules which you don't want to be invoked like scripts: if __name__ == '__main__': raise RuntimeError('No')
[00:40:32] <jamea> habnabit_: reading: Python Numpy – Create One Dimensional Array
[00:40:39] <deniska> (it's sorta a joke btw)
[00:40:44] <no_gravity> deniska: Are you talking to me?
[00:41:26] <deniska> no_gravity: yes, but ignore me
[00:42:11] <baltazar> no_gravity: also, a sane shell will only tab-complete executable files, and I presume the modules aren't executable. also, `ls` shows them differently, so don't think having all your files in your project root is such a big problem
[00:42:16] <deniska> If it's just a small thing without setup.py, then you're supposed to run it in a special way, and you are aware of that special way, so you don't need this /modules/ thing
[00:42:41] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[00:42:52] <habnabit_> no_gravity, setup.cfg is easy to create. is there a reason you're avoiding it?
[00:42:58] <habnabit_> (setup.py is its obsolete ancestor)
[00:43:00] <no_gravity> baltazar: True. I still don't like the look of it. The modules are implementation details I don't want to see when I look at the available tools.
[00:43:02] *** Joins: trace987 (~trace@ip5b429953.dynamic.kabel-deutschland.de)
[00:43:28] <no_gravity> habnabit_: I don't need it. I cd into my application and run one of the tools. I don't like to set something up.
[00:43:30] *** Quits: aslicedbanjo (~aslicedba@host86-150-115-164.range86-150.btcentralplus.com) (Quit: Leaving.)
[00:44:03] <habnabit_> no_gravity, remember that each language has its own set of idioms. you might not be used to it, but this is standard in the python world
[00:44:07] *** Joins: h4rd3n3D (~h4rd3n3D@wireguard/tunneler/h4rd3n3D)
[00:44:30] <Adois> hello! why is this mismatch between expectation and reality; https://bpa.st/WV4A ? :)
[00:45:06] *** Quits: Haxxa (~Haxxa@122.199.47.41) (Quit: Haxxa flies away.)
[00:45:17] <no_gravity> habnabit_: Yes, and I don't go with idioms that add complexity. No matter the language. One reason I am flirting with Python is that it seems to have fewer of such idioms than PHP.
[00:45:24] <grym> Adois: you can't negate a string, and you're trying to
[00:45:26] <habnabit_> Adois, it seems to be indicating that some of your columns hold strings, not numbers
[00:45:35] <Adois> to make it more complete; https://bpa.st/XFZQ
[00:45:39] *** Quits: rendar (~rendar@user/rendar) ()
[00:45:51] <habnabit_> no_gravity, fortunately, this is one that reduces complexity
[00:45:53] <grym> Adois: in column labeled F
[00:46:14] *** Quits: feriman (~feriman@188.163.113.127) (Ping timeout: 272 seconds)
[00:46:17] <no_gravity> habnabit_: No, it adds a file, changes the state of my machine and I would still have a bunch of different files in my root dir.
[00:46:20] <habnabit_> Adois, what's -'one' ?
[00:46:23] *** kosh_ is now known as kosh
[00:46:34] <Adois> but this is straight from the pandas tutorial, the last example of the "Setting" section; https://pandas.pydata.org/pandas-docs/stable/user_guide/10min.html#setting
[00:47:06] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:2537:dba9:7530:9f55) (Quit: Leaving)
[00:47:21] <grym> Adois: not quite, you have an extra column
[00:47:35] <habnabit_> Adois, it looks like you put the 'one' 'two' column into df, not df2
[00:47:40] *** Parts: Plazma (~weenis@user/plazma) ()
[00:47:42] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[00:47:58] *** Joins: Haxxa (~Haxxa@122.199.47.41)
[00:48:00] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[00:48:25] *** Adois is now known as Adoi
[00:48:28] <control> habnabit_ still cant get it to work
[00:48:34] *** Quits: Meteorhead (~Meteorhea@lfbn-idf1-1-703-113.w86-245.abo.wanadoo.fr) (Quit: Client closed)
[00:48:59] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[00:49:24] <habnabit_> control, as always, show us what you've tried and how it fails
[00:49:33] <baltazar> control: show us the exact code you're running, and the exact problem you're facing, we can't guess your issue from "can't get it to work"
[00:49:51] <control> https://bpa.st/BSJA
[00:50:06] <no_gravity> I went with modules/ now and I am kinda fine with it.
[00:50:10] <control> TypeError: unsupported operand type(s) for +: 'NoneType' and 'str'
[00:50:29] *** Joins: wyclif (~wyclif@user/wyclif)
[00:50:31] <habnabit_> control, i told you that you have to have random.shuffle on a line by itself
[00:51:21] <no_gravity> Has the additional benefit that project imports now are visually identifiable. Even though it's longer. From "import fily" to "import modules.fily as fily".
[00:51:39] <habnabit_> no_gravity, those are usually written as `from . import fily`
[00:51:52] <control> https://bpa.st/U3MA
[00:51:59] <no_gravity> habnabit_: Oh, good idea. Let me try that ...
[00:52:20] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[00:52:20] <habnabit_> no_gravity, it's incompatible with your desired 'modules' layout, so
[00:52:36] <no_gravity> habnabit_: "from modules import fily" seems to work fine.
[00:52:47] <habnabit_> no_gravity, ok, but i said `from . import fily`
[00:53:20] *** Joins: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[00:53:21] <no_gravity> So my style for local modules is "from modules import <module_name>" now. Quite happy with it.
[00:53:41] <habnabit_> control, nearly there. if you want to squash all the letters together into a single string, newFile.write(''.join(my_list) + '\n')
[00:54:01] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[00:54:19] <control> finally! thanks
[00:54:20] *** Quits: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Read error: No route to host)
[00:54:24] <no_gravity> Jesus, this also works: "from modules import fily, commands, url_cache"
[00:54:28] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 272 seconds)
[00:54:41] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[00:54:46] <no_gravity> But I don't like that visually :)
[00:54:52] *** Quits: acresearch (~acresearc@user/acresearch) (Ping timeout: 272 seconds)
[00:55:40] <Adoi> I am trying to drop the string column with "df.drop(columns=['E'])" but it doesnt disappear ?!
[00:55:51] <habnabit_> Adoi, that returns a new df
[00:55:58] *** Quits: h4rd3n3D (~h4rd3n3D@wireguard/tunneler/h4rd3n3D) (Ping timeout: 244 seconds)
[00:56:34] <Adoi> habnabit_ I thought you said you were not familiar with pandas :)
[00:56:42] <habnabit_> Adoi, i'm not!
[00:56:58] <jamea> habnabit_: xListaQtyTotal=np.array(xListaIN)*np.array(xListaInQty)  found the way...
[00:56:59] <habnabit_> my knowledge is patchy at best
[00:57:00] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[00:57:26] *** Quits: darksun (~darksun@user/darksun) (Quit: Lost terminal)
[00:58:05] *** Joins: h4rd3n3D (~h4rd3n3D@wireguard/tunneler/h4rd3n3D)
[00:58:06] *** Quits: h4rd3n3D (~h4rd3n3D@wireguard/tunneler/h4rd3n3D) (Write error: Broken pipe)
[00:59:07] <Adoi> but you knew that I had to define a new df
[00:59:56] <Adoi> maybe it is python knowledge not particular to pandas
[01:00:07] <jamea> why the multiplocation give me items separated with dots? [  3. 168.   2. 150.   2.   8. 100.   1.   1.  15. 1.  30.   1.   0.   0.   0.]
[01:00:25] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[01:00:36] <habnabit_> jamea, numpy arrays don't print with a , delimiter
[01:00:50] *** Joins: acresearch (~acresearc@user/acresearch)
[01:00:54] *** Joins: teut (~teut@182.68.62.72)
[01:01:21] <teut> https://colab.research.google.com/drive/1TX_j6l3njFAxZRCAZOQOq2HYfNSf71Dl?usp=sharing   how to fix this?
[01:02:08] <teut> https://www.sciann.com/getting-started/functional-guide/  I copied this example
[01:02:28] <jim> would those dots be decimal points, and indicate the numbers are floats?
[01:02:34] <habnabit_> jim, yep
[01:04:11] *** Joins: ice99 (~ice9@user/ice9)
[01:04:20] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[01:04:20] *** Joins: glider (~glider@user/glider)
[01:04:40] *** Quits: ice9 (~ice9@user/ice9) (Read error: Connection reset by peer)
[01:05:52] *** Joins: MikZyth (~MikZyth@188.65.242.79)
[01:06:14] *** Quits: teut (~teut@182.68.62.72) (Quit: Connection closed)
[01:07:24] <MrAureliusR> I'm using matplotlib to show a plot inside a GTK3 window. But when I update the plot, it doesn't redraw, unless I resize the window
[01:07:46] <MrAureliusR> Is there a way to safely redraw? Looking at the Figure and Axes classes, I can't see anything that seems correct
[01:07:57] <MrAureliusR> I tried clear() and redraw_in_frame() but that doesn't work correctly
[01:08:24] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[01:08:26] *** Joins: lavadonut (~lavadonut@user/lavadonut)
[01:08:52] <MrAureliusR> here's what I have at the moment: https://bpa.st/QWPA
[01:09:02] <MrAureliusR> well, that's the section that creates and updates the plot, anyway
[01:09:04] *** Quits: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Remote host closed the connection)
[01:09:18] *** Joins: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[01:10:00] *** Joins: Vonter (~Vonter@user/vonter)
[01:10:16] *** Quits: samhain (~samhain@user/samhain) (Quit: ZNC - https://znc.in)
[01:10:16] <KirkMcDonald> jim: If you want to use something other than floats, you can specify that when you make the array.
[01:10:43] *** Joins: ice9 (~ice9@user/ice9)
[01:10:57] *** Quits: ice99 (~ice9@user/ice9) (Read error: Connection reset by peer)
[01:12:01] <MrAureliusR> oh nvm, figured it out. need to call canvas.draw_idle() :)
[01:12:09] <MrAureliusR> yay, now it's working perfectly! \o/
[01:12:26] *** Joins: samhain (~samhain@user/samhain)
[01:12:59] *** Quits: Tier (~tier@37.214.50.18) (Quit: Leaving)
[01:13:20] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[01:13:21] *** Joins: wyclif (~wyclif@user/wyclif)
[01:13:43] *** Joins: taylan (~taylan@user/taylan)
[01:15:55] *** Joins: bilegeek (~bilegeek@2600:1008:b015:3e96:6f34:1a42:6ac5:3b86)
[01:17:38] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:558d:55a0:b0ee:1f34)
[01:17:52] *** Quits: elliewhatever (~elliewhat@cpc94372-ward12-2-0-cust96.10-2.cable.virginm.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:18:22] *** Joins: elliewhatever (~elliewhat@cpc94372-ward12-2-0-cust96.10-2.cable.virginm.net)
[01:18:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[01:18:45] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[01:20:54] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[01:21:32] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 268 seconds)
[01:21:58] *** Joins: cliluw (~cliluw@47.147.80.149)
[01:22:14] *** Quits: RBEL (~jigubigul@2001:1c06:19c3:7000:7901:231:e380:36a0) (Quit: WeeChat 3.2)
[01:22:34] <taylan> hey all, how can I import a module which I know is in a specific relative path to the running script?  example dir structure: https://paste.ubuntu.com/p/grgSNKrwpw/
[01:23:36] <habnabit_> taylan, `from fancy_program.fancy_library import flux_capacitor` or `from ..fancy_library import flux_capacitor`
[01:23:44] *** Joins: azazello (~azazello@109.75.158.195)
[01:24:33] <taylan> habnabit_: that will work (only) if the user scripts are invoked by main.py in some way, correct?  (I think that's fine for my case)
[01:24:52] <habnabit_> taylan, what do you mean by 'invoked'?
[01:26:08] <taylan> e.g. if I ran any of them directly with a command like "python fancy_program/user_extensions/some_script.py", then your examples won't work I think, because then Python won't know what fancy_program is?
[01:26:17] <habnabit_> taylan, correct
[01:26:21] *** Quits: elliewhatever (~elliewhat@cpc94372-ward12-2-0-cust96.10-2.cable.virginm.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:26:24] <habnabit_> taylan, you can't run any module inside a package
[01:26:33] <graingert> taylan: run it with python -m fancy_program.user_extensions.some_script
[01:26:34] <jim> KirkMcDonald, don't plain python lists' repr() use commas to delimit items?
[01:27:01] <KirkMcDonald> jim: They do.
[01:27:05] <taylan> I think I won't need -m but that's good to know too, thanks both!
[01:27:15] <graingert> ?
[01:28:15] <jim> ok, that probably explains why people are surprised to see either no delimiters (when the numbers are ints), or dots (when they're floats)
[01:29:09] <KirkMcDonald> The dots aren't delimiters, as such, they're part of the representation of the individual value.
[01:29:44] <jim> yeah, hence the surprise when (maybe) the person just looked at a python list :)
[01:31:01] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[01:31:43] *** Joins: schumaml (~schumaml@dslb-178-002-190-100.178.002.pools.vodafone-ip.de)
[01:31:45] *** Joins: wyclif (~wyclif@user/wyclif)
[01:32:28] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Ping timeout: 272 seconds)
[01:32:52] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:33:59] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[01:34:46] <jim> another thing, is there a better or more standard way to do this: https://termbin.com/3uux
[01:35:06] <habnabit_> jim, x = bool(y)
[01:35:40] <jim> so...
[01:35:49] <grym> jim: self.debugNoticeTestsP could be a @property
[01:36:31] <jim> yeah, I'm thinking it shouldn't go into self
[01:36:50] <jim> it's really a temporary var
[01:36:54] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[01:37:02] <habnabit_> jim, self.debugNoticeTestsP = bool(self.debugSectsContains("noticetests"))
[01:37:16] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) ()
[01:37:48] *** Joins: blackout69 (~blackout6@net-2-38-155-178.cust.vodafonedsl.it)
[01:38:05] <jim> self.debugSectsContains(string) returns a bool anyway, is there a reason it should still have bool(thatthing)?
[01:38:19] <habnabit_> jim, if it already returns a bool you don't need the bool() around it no
[01:38:36] <taylan> windows-specific question: when a .py has an error, double-clicking on it makes the console window immediately disappear.  is there a way to make it stay and show me the error?  I know I can run it from the console manually but that 1) is annoying, 2) behaves differently and doesn't actually error, to my surprise!
[01:39:33] <jim> habnabit_, ok, good enough, thanks
[01:39:51] *** Quits: lorogue (~lorogue@5.103.210.179.dhcp.fibianet.dk) (Read error: Connection reset by peer)
[01:40:03] <habnabit_> taylan, sys.excepthook = lambda t, v, tb: pdb.post_mortem(tb)
[01:40:18] *** Quits: Akuli (~Akuli@2001:999:40:c1fe:21e:65ff:fe37:6b62) (Quit: Leaving)
[01:40:29] <grym> taylan: it's been a while, but i think this is what pyw.exe is for
[01:40:53] <habnabit_> grym, no, wrong way around. pyw doesn't spawn a console window at all
[01:41:44] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 272 seconds)
[01:42:29] <taylan> habnabit_: neat!  it put me in the debugger, but doesn't show me an error or trace...
[01:42:51] *** Quits: BlessJah (~BlessJah@user/blessjah) (Ping timeout: 258 seconds)
[01:42:54] <taylan> well it shows the trace, but not the error
[01:43:58] <habnabit_> taylan, you might add a traceback.print_exception call in there before the post_mortem call
[01:45:42] *** Joins: greedom (~greedom@i577BC610.versanet.de)
[01:45:49] *** Quits: greedom (~greedom@i577BC610.versanet.de) (Client Quit)
[01:46:25] *** Joins: greedom (~greedom@2001:16b8:2e83:1400:2abb:c11c:d3e8:a677)
[01:47:05] *** Quits: greedom (~greedom@2001:16b8:2e83:1400:2abb:c11c:d3e8:a677) (Read error: Connection reset by peer)
[01:47:52] *** Joins: greedom (~greedom@i577BC610.versanet.de)
[01:48:17] <taylan> I can't seem to get that to work.  tried tb.print_exc() and tb.print_last().  https://paste.ubuntu.com/p/D2Qr36SPjx/
[01:48:28] *** Joins: wyclif (~wyclif@user/wyclif)
[01:48:33] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[01:49:00] <habnabit_> taylan, traceback.print_exception(t, v, tb)
[01:49:10] <taylan> ahh
[01:49:13] <habnabit_> taylan, i did actually mean print_exception and not print_exc ;)
[01:50:46] <justsomeguy> taylan: Also, if you are using cmd.exe to launch the script, "cmd /k python your_script.py".
[01:52:37] *** Joins: ahmed (~ahmed@user/ahmed)
[01:52:44] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 265 seconds)
[01:52:57] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[01:53:54] *** Quits: rememberYou (~someone@user/rememberyou) (Remote host closed the connection)
[01:54:00] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[01:56:30] *** Quits: cedric (~cedric@2a01:cb11:867:c200:3714:2232:1af0:c765) (Quit: Konversation terminated!)
[01:57:44] *** Joins: ice9 (~ice9@user/ice9)
[01:58:05] *** Joins: whaley (~whaley@2603-6080-a312-c426-0402-c38d-e6bc-7223.res6.spectrum.com)
[01:59:58] *** Joins: haenno (~haenno@user/haenno)
[02:01:47] *** Quits: whaley (~whaley@2603-6080-a312-c426-0402-c38d-e6bc-7223.res6.spectrum.com) (Read error: Connection reset by peer)
[02:02:12] *** Joins: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net)
[02:02:21] *** Joins: whaley (~whaley@2603-6080-a312-c426-0402-c38d-e6bc-7223.res6.spectrum.com)
[02:03:01] *** Quits: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net) (Remote host closed the connection)
[02:03:01] *** Quits: whaley (~whaley@2603-6080-a312-c426-0402-c38d-e6bc-7223.res6.spectrum.com) (Read error: Connection reset by peer)
[02:03:22] *** Joins: lightbulbjim (~lightbulb@user/lightbulbjim)
[02:03:37] *** Joins: whaley (~whaley@2603-6080-a312-c426-0402-c38d-e6bc-7223.res6.spectrum.com)
[02:04:31] *** Quits: haenno (~haenno@user/haenno) (Quit: Leaving)
[02:04:42] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 268 seconds)
[02:04:49] *** Quits: especial (~especial@cm-84.214.207.74.getinternet.no) (Remote host closed the connection)
[02:05:16] *** Joins: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net)
[02:05:57] *** Quits: whaley (~whaley@2603-6080-a312-c426-0402-c38d-e6bc-7223.res6.spectrum.com) (Client Quit)
[02:06:03] *** Joins: BlessJah (~BlessJah@user/blessjah)
[02:07:45] <acresearch> hello people
[02:07:56] *** Joins: wyclif (~wyclif@user/wyclif)
[02:08:55] <jim> hi
[02:09:09] <dukwon> hello astroo-
[02:09:12] <dukwon> wait
[02:09:26] *** Joins: anas (~anas@102.27.15.101)
[02:09:40] <jim> when I try to import arrow, I'm getting some strange brokenness: https://termbin.com/x3a2
[02:10:08] <habnabit_> jim, what's sys.version?
[02:10:09] <acresearch> jim: just checking my connection:-)
[02:10:29] <jim> habnabit_, of that python?
[02:10:30] *** Joins: Vonter (~Vonter@user/vonter)
[02:10:37] <habnabit_> jim, whichever one is importing arrow
[02:10:52] *** Joins: pwnd_sfw5 (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[02:10:52] *** Quits: Pynthon (~omar@80-60-40-192.fixed.kpn.net) (Ping timeout: 268 seconds)
[02:10:59] <habnabit_> jim, you could put `print(sys.version)` immediately before the import
[02:11:09] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Ping timeout: 268 seconds)
[02:11:09] *** pwnd_sfw5 is now known as pwnd_sfw
[02:11:40] <jim> yeah maybe that's the best idea just to make sure
[02:13:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[02:13:22] *** Parts: blackout69 (~blackout6@net-2-38-155-178.cust.vodafonedsl.it) ()
[02:13:39] *** Joins: whaley (~whaley@2603-6080-a312-c426-0402-c38d-e6bc-7223.res6.spectrum.com)
[02:14:49] *** Parts: justsomeguy (~justsomeg@user/justsomeguy) (WeeChat 3.0.1)
[02:15:11] *** Quits: whaley (~whaley@2603-6080-a312-c426-0402-c38d-e6bc-7223.res6.spectrum.com) (Read error: Connection reset by peer)
[02:15:13] *** Quits: jpic (~jpic@82.142.10.10) (Remote host closed the connection)
[02:15:18] <jim> habnabit_, I got: 3.7.3 (default, Jul 25 2020, 13:03:44) (\n) [GCC 8.3.0]
[02:16:02] *** Joins: whaley (~whaley@2603-6080-a312-c426-0402-c38d-e6bc-7223.res6.spectrum.com)
[02:16:36] *** Quits: whaley (~whaley@2603-6080-a312-c426-0402-c38d-e6bc-7223.res6.spectrum.com) (Read error: Connection reset by peer)
[02:16:42] *** Quits: upsala2 (~zcb@185.213.155.232) (Quit: WeeChat 3.2)
[02:17:05] *** Quits: ndim (hun@moooo.n-dimensional.de) (Read error: Connection reset by peer)
[02:17:13] *** Joins: tga (~tga@user/tga)
[02:17:14] *** Joins: whaley (~whaley@2603-6080-a312-c426-0402-c38d-e6bc-7223.res6.spectrum.com)
[02:19:50] *** Quits: whaley (~whaley@2603-6080-a312-c426-0402-c38d-e6bc-7223.res6.spectrum.com) (Read error: Connection reset by peer)
[02:20:27] *** Joins: whaley (~whaley@2603-6080-a312-c426-0402-c38d-e6bc-7223.res6.spectrum.com)
[02:21:29] *** Quits: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Read error: Connection reset by peer)
[02:21:39] *** Quits: tga (~tga@user/tga) (Client Quit)
[02:21:49] *** Joins: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[02:22:08] *** Quits: whaley (~whaley@2603-6080-a312-c426-0402-c38d-e6bc-7223.res6.spectrum.com) (Client Quit)
[02:22:39] *** Quits: slavfox (~slavfox@93.158.232.111) (Quit: ZNC 1.8.2 - https://znc.in)
[02:23:27] <jim> habnabit_, last time I installed a package, it said about 150 packages weren't upgraded... so I do that, then try again
[02:23:40] <jim> (debian buster)
[02:23:48] <grym> jim: pyenv is usually a godsend
[02:23:49] *** Quits: rhax (~yannick@user/rhax) (Quit: Leaving)
[02:23:59] <grym> especially on debian
[02:24:16] <jim> would you care to elaborate a bit?
[02:24:34] <grym> pyenv lets you install whatever python you want, without touching apt
[02:25:01] <grym> and without being in sudoers, usually
[02:25:07] <grym> so it's convenient and safe
[02:25:19] *** Joins: wyclif (~wyclif@user/wyclif)
[02:25:19] *** Joins: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[02:25:23] <jim> I understand that... what I'm curious about, is what had you say "especially on debian" :)
[02:25:56] *** Parts: SlaveGeek334269 (~SlaveGeek@179.61.240.164) ()
[02:25:59] *** Joins: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl)
[02:26:08] <grym> https://fullstackfeed.com/negative-python-user-experience-on-debianubuntu/  deb distros have strange ideas about python, from the perspective of a python dev
[02:26:41] <supakeen> For example, Debian splits out the packages that are supposed to be in a default install and add non-standard package locations; it also shares some packages between various versions of Python, etc.
[02:27:10] <Xaroth> the debian devs have had some... interesting choices when it comes to distributing python
[02:27:11] *** Quits: anas (~anas@102.27.15.101) (Read error: Connection reset by peer)
[02:27:19] <grym> jim: err https://gist.github.com/tiran/2dec9e03c6f901814f6d1e8dad09528e , i don't know what that silly link was
[02:27:21] <supakeen> Work is being done on making the epxerience better.
[02:27:31] *** Quits: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Ping timeout: 268 seconds)
[02:27:33] <Xaroth> but if you just install python<version> and the -venv packages you should be good
[02:27:34] *** Quits: BlessJah (~BlessJah@user/blessjah) (Ping timeout: 272 seconds)
[02:27:40] <Xaroth> then you just create a venv for your projects
[02:27:52] <grym> the -full option is probably a positive step, aiui
[02:27:57] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[02:28:04] <grym> i'll have to know about this for dockerized things, but not much else
[02:29:03] *** Joins: boxelephant (~boxelepha@cpe-71-67-174-31.insight.res.rr.com)
[02:29:07] <akk> I'm on debian/ubuntu and I just create a venv with --system-site-packages, and I'm curious what all these horrible problems are that I don't seem to see.
[02:29:15] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[02:29:21] <akk> And how pyenv would make things easier.
[02:29:35] <Xaroth> akk: if you don't have python3-venv installed, for example, pip doesn't work, neither does venv
[02:29:44] <Xaroth> where python norma
[02:29:47] <supakeen> You're already using virtual environments so most of that won't bite you, aside from having to manually install venv/ensurepip/distutils.
[02:29:49] <Xaroth> ... silly cat
[02:29:57] <Xaroth> python normally has the ensurepip module to ensure pip availability
[02:29:58] <akk> Xaroth: Oh, well, of course I do install that before creating my virtualenv.
[02:30:03] <Xaroth> it's.. removed from debian's python packages
[02:30:07] *** Quits: female_student_4 (~female_st@2a01:388:243:150::1:51) (Quit: Client closed)
[02:30:09] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[02:30:28] <akk> I like using debian's packages when they exist ... for one thing, it means I automatically get upgrades.
[02:30:32] <Xaroth> If you have python + python3-venv installed on debian, you're usually good to go.
[02:30:37] <akk> Upgrading packages in a venv seems to be rather difficult.
[02:30:40] <supakeen> akk, the point is that those things are normally default Python things on other distros so you always have to special case any documentation with 'oh btw if youre on a debian-based distro please also install python3-pip python3-venv ... etc'
[02:30:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[02:31:04] <Xaroth> Yes, it's annoying that it trips up people their first time
[02:31:09] <Xaroth> but after that it's not really a nuisance
[02:31:11] <supakeen> Aside from the actual bugs in the linked gist of course.
[02:31:22] *** Quits: azazello (~azazello@109.75.158.195) (Ping timeout: 272 seconds)
[02:31:23] <akk> supakeen: Ah, okay, that's true, but independent of whether I use a venv or debian packages myself.
[02:31:49] *** Joins: BlessJah (~BlessJah@user/blessjah)
[02:33:19] <supakeen> Aside from this when you want other interpreters then those in base you also run into these issues, hence the suggestion is usually to directly move to pyenv and to not bother with the package-provided pythons at all.
[02:33:22] *** Quits: mathgrad (~mathgrad@2600:8806:3003:f756:f5cd:a8c9:c2ee:d59f) (Remote host closed the connection)
[02:33:32] <supakeen> They're necessary for running the system, you can have your own for your own application.
[02:33:46] *** Joins: mathgrad (~mathgrad@2600:8806:3003:f756:f5cd:a8c9:c2ee:d59f)
[02:33:58] *** Quits: boxelephant (~boxelepha@cpe-71-67-174-31.insight.res.rr.com) (Ping timeout: 268 seconds)
[02:34:13] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 258 seconds)
[02:34:15] *** Quits: aquijoule_ (~richbridg@213-225-5-235.nat.highway.a1.net) (Remote host closed the connection)
[02:34:18] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:35:37] *** Quits: mossman93 (~quassel@user/mossman93) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:36:03] *** Joins: mossman93 (~quassel@user/mossman93)
[02:37:00] *** Joins: azazello (~azazello@109.75.158.195)
[02:37:40] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[02:39:14] *** Quits: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[02:39:43] *** Quits: theelous3 (~theelous3@109.255.56.189) (Read error: Connection reset by peer)
[02:42:25] *** Quits: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) (Quit: WeeChat 3.2)
[02:42:46] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[02:42:47] *** Joins: wyclif (~wyclif@user/wyclif)
[02:43:12] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:45:04] *** Quits: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Read error: No route to host)
[02:45:18] *** Joins: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[02:45:26] *** Quits: magla (~gelignite@55d41c60.access.ecotel.net) (Quit: Stay safe!)
[02:45:52] *** Joins: Overflwn (~Overflwn@2a02:8070:c3b7:5b00::ea80)
[02:47:00] *** Quits: azazello (~azazello@109.75.158.195) (Ping timeout: 252 seconds)
[02:47:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[02:48:19] *** Quits: Praise (~Fat@user/praise) (Ping timeout: 265 seconds)
[02:48:37] *** Joins: Fiji (~Fiji@user/fiji)
[02:49:38] *** Joins: mdemo (~mdemo@c-73-40-53-74.hsd1.va.comcast.net)
[02:49:58] <mdemo> do people still like pyenv, or is there something else I should be using?
[02:51:09] *** Quits: jim (~jim@about/linux/staff/jim) (Remote host closed the connection)
[02:52:08] *** Quits: twobitsprite (~twobitspr@107.13.51.62) (Ping timeout: 252 seconds)
[02:52:39] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-4c6d-f742-f661-daa3.res6.spectrum.com) (Read error: Connection reset by peer)
[02:52:49] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[02:53:17] *** Joins: twobitsprite (~twobitspr@107.13.51.62)
[02:55:34] <nedbat> mdemo: pyenv is well-loved for installing specific versions of Python
[02:57:33] *** Joins: CodePoint (~CodePoint@2600:1700:3070:3790::29)
[02:57:35] <mdemo> I think all I need from it is to avoid installing too many pypy packages globally
[02:57:45] <mdemo> wait
[02:57:49] <mdemo> not pypy
[02:58:02] <nedbat> pypi?
[02:58:24] *** Joins: djapo (~archangel@user/djapo)
[02:58:24] <mdemo> yeah, that one
[02:59:14] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:00:32] *** Joins: Praise (~Fat@user/praise)
[03:00:35] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[03:01:35] *** Quits: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3) (Quit: Konversation terminated!)
[03:02:02] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Quit: Leaving)
[03:02:22] *** Joins: wyclif (~wyclif@user/wyclif)
[03:04:06] <grym> mdemo: so there's pyenv: https://github.com/pyenv/pyenv  and then `pyvenv`, which is now deprecated in favor of https://docs.python.org/3/library/venv.html, and they are very, very different things
[03:04:16] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 265 seconds)
[03:04:20] *** Joins: pnoud (~pnoud@user/pnoud)
[03:05:20] *** Quits: lightbulbjim (~lightbulb@user/lightbulbjim) (Quit: Leaving...)
[03:05:54] * ohuwuteu still uses pyenv for virtualenvs, besides python versions
[03:07:42] *** Joins: eldenring0 (uid506233@id-506233.tooting.irccloud.com)
[03:07:50] <grym> pyenv has a virtualenv plugin
[03:08:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[03:08:06] <grym> don't conflate that for the rest of the tool
[03:08:06] <ohuwuteu> yep
[03:08:19] <ohuwuteu> ?
[03:08:32] *** Quits: CodePoint (~CodePoint@2600:1700:3070:3790::29) (Quit: WeeChat 3.0.1)
[03:08:33] <grym> pyenv's primary purpose has nothing to do with virtualenvs
[03:08:33] *** Joins: wyclif (~wyclif@user/wyclif)
[03:09:15] <ohuwuteu> I didn't imply that
[03:09:22] *** Joins: CodePoint (~CodePoint@2600:1700:3070:3790::29)
[03:09:27] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[03:09:28] <grym> i agree. j
[03:09:37] <grym> (but i have teammates who are very very confused about this point!)
[03:09:46] <grym> (so i jumped the gun a bit)
[03:09:46] <ohuwuteu> ah
[03:09:58] <acresearch> hello people, i am trying to setup threading or multiprocessing,   but the function i am trying to repeat has a while loop so it seems that the second process cannot start untill the first one quits that while loop,,, is this normal, is there a way around it to have the function repeating?
[03:10:37] <grym> ohuwuteu: an example: "i can't use -m venv; i have a pyenv python!"
[03:10:38] *** Quits: finsternis (~X@23.226.237.192) (Ping timeout: 258 seconds)
[03:10:43] <grym> ('uhh what')
[03:11:32] *** Quits: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com) (Remote host closed the connection)
[03:11:55] *** Joins: BlessJah_ (~BlessJah@user/blessjah)
[03:12:09] *** Joins: ndim (hun@moooo.n-dimensional.de)
[03:12:16] *** Joins: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com)
[03:12:22] <ohuwuteu> ah
[03:12:28] <ohuwuteu> nonsense
[03:12:31] <ohuwuteu> xD
[03:12:33] *** Quits: mrkz_c (uid503554@user/mrkz-c/x-7247691) (Quit: Connection closed for inactivity)
[03:12:47] <grym> well intentioned, but very very confused
[03:14:59] *** Quits: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Remote host closed the connection)
[03:15:00] *** Quits: BlessJah (~BlessJah@user/blessjah) (Ping timeout: 268 seconds)
[03:15:19] *** Joins: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[03:15:23] *** Quits: greedom (~greedom@i577BC610.versanet.de) (Remote host closed the connection)
[03:19:53] *** Joins: finsternis (~X@23.226.237.192)
[03:20:30] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[03:20:46] *** Quits: ahmed (~ahmed@user/ahmed) (Ping timeout: 272 seconds)
[03:21:14] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[03:21:32] <acresearch> people, i am trying to run three threads using a single for loop as such: https://paste.debian.net/1202626/    it does not work because the P is the same in each loop thus the first process has to finish before the second one complete.      my question is: can i fix this loop so that the 3 threads are run at the same time while still having them inside a single loop rather than three separate
[03:21:34] <acresearch> loops?
[03:22:18] *** BlessJah_ is now known as BlessJah
[03:22:48] *** Quits: CodePoint (~CodePoint@2600:1700:3070:3790::29) (Quit: WeeChat 3.0.1)
[03:23:20] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::4ec1) (Quit: Konversation terminated!)
[03:26:16] <KirkMcDonald> acresearch: Don't join the thread inside the loop.
[03:26:43] <KirkMcDonald> acresearch: Perhaps append the Thread objects to a list, then join them in a second loop.
[03:27:43] *** Quits: samhain (~samhain@user/samhain) (Quit: ZNC - https://znc.in)
[03:29:42] *** Joins: richbridger (~richbridg@213-225-5-235.nat.highway.a1.net)
[03:29:49] *** Joins: samhain (~samhain@user/samhain)
[03:32:40] *** Joins: ahmed (~ahmed@user/ahmed)
[03:33:51] <acresearch> KirkMcDonald: i see
[03:33:58] *** Joins: tm007 (uid287041@id-287041.highgate.irccloud.com)
[03:34:03] *** Joins: Wulf4 (~Wulf@user/wulf)
[03:34:14] *** Quits: ircuser-1 (~Johnny@71.63.241.168) (Ping timeout: 265 seconds)
[03:34:27] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[03:36:10] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[03:36:55] *** Joins: jim (~jim@about/linux/staff/jim)
[03:37:52] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 272 seconds)
[03:37:52] *** Wulf4 is now known as Wulf
[03:38:00] *** Quits: Mulugruntz (~Mulugrunt@2400:4152:2063:3100:1052:b551:7a50:c045) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:38:06] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 265 seconds)
[03:38:53] *** Quits: scadman (~scadman@cpc145252-maid8-2-0-cust473.20-1.cable.virginm.net) (Quit: Konversation terminated!)
[03:39:09] *** Joins: AhmedAmerican (sid470527@id-470527.charlton.irccloud.com)
[03:39:18] <AhmedAmerican> is learning OOP necessary to deep into Django framework ?
[03:40:09] <grym> kinda yeah
[03:40:17] <grym> django does love them a subclassing
[03:40:17] *** Quits: ahmed (~ahmed@user/ahmed) (Ping timeout: 268 seconds)
[03:40:26] <tm007> AhmedAmerican: I would say yes.
[03:40:32] *** Joins: elliewhatever (~elliewhat@2a02:c7f:bb02:b00:856c:9b58:9e16:8efa)
[03:40:33] *** Quits: elliewhatever (~elliewhat@2a02:c7f:bb02:b00:856c:9b58:9e16:8efa) (Client Quit)
[03:41:09] <grym> but i always find "learn OOP" to be a bit of an empty phrase
[03:41:20] <grym> ask 4 people get 7 answers about what it means
[03:41:30] <tm007> OOP isn't as hard as it is made out to be. I would recommend you grab the basics. Start off with Django.
[03:41:31] *** Joins: jimklo (~jimklo@2600:6c52:6f00:ae5f:14f3:6158:a1fd:c107)
[03:41:43] *** Quits: ohuwuteu (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ohuwuteu)
[03:42:20] <grym> > the basics
[03:42:23] <grym> > Django
[03:42:25] <grym> >.>
[03:42:39] <AhmedAmerican> @grym do you recommend any resource for learning OOP ?
[03:43:17] *** Joins: ahmed (~ahmed@user/ahmed)
[03:44:00] <jim> AhmedAmerican, OOP is first, the idea that you can put together your own type of data
[03:44:14] *** Quits: ahmed (~ahmed@user/ahmed) (Read error: Connection reset by peer)
[03:44:29] <nomic> wut is __pycache__
[03:44:33] <jim> so you could have a type called birthday, and birthday has a name, and a birthdate
[03:44:38] <nomic> double underscore pycache
[03:44:59] <jim> AhmedAmerican, how we doin so far?
[03:45:42] <tm007> pycache stores the bytecode
[03:45:52] *** Quits: PJBoy (~PJBoy@user/pjboy) (Quit: Ping timeout: 252 seconds)
[03:46:06] <nomic> why am i only starting to see that now (python3)(
[03:46:13] <AhmedAmerican> @jim Sounds Good, i do have the basics of OOP but am not deeply interact with it. i feel like functions is sweetly covering all
[03:46:14] <AhmedAmerican>  :D
[03:46:14] *** Joins: ahmed (~ahmed@user/ahmed)
[03:46:15] <nomic> is in my home directory
[03:46:50] <AhmedAmerican> but seems that `HTML` and `OOP` is highly required to go with Django clearly
[03:47:18] <jimklo> greetings I got a question WRT python-socketio AsyncClient and awaiting emit.  The await appears to returns, however the client code doesn't appear to actually send anything until the I call asyncio.sleep for a few seconds.  Any thoughts why this would be? It's like the emit is occurring in a separate thread that's blocked before it actually does anything.
[03:48:07] *** Joins: female_student_4 (~female_st@2a01:388:243:150::1:51)
[03:48:37] <jim> AhmedAmerican, what we have so far, is the idea of an abstract data type.... what makes that different from oop, is that a data type can come with tiny little programs that know how to deal with the data... and you call those, to get info about an object, or to change its state
[03:48:37] *** Quits: richbridger (~richbridg@213-225-5-235.nat.highway.a1.net) (Remote host closed the connection)
[03:48:44] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-147.dsl.bell.ca)
[03:49:01] <tm007> nomic: why is it only appearing now is a bit difficult to answer without more perspective.
[03:49:19] <nomic> ok
[03:49:37] <tm007> You shouldn't worry about it as a developer. Python basically optimizes some of your code and stores it there.
[03:50:34] <tm007> For fasterJust don't push this to git, add it to gitignore file.
[03:51:14] <jim> AhmedAmerican, and that's pretty much it... what you usually do with an object, is send it a message, telling it what you want to do... and each of these messages, would be received, and handled, by one of the tiny programs I mentioned earlier, that know how to handle what the message says to do
[03:51:19] *** Quits: zaquest (~notzaques@5.128.210.178) (Remote host closed the connection)
[03:52:34] <tm007> jim: top stuff.
[03:52:38] <tm007> Are you into teaching?
[03:53:11] *** Joins: richbridger (~richbridg@213-225-5-235.nat.highway.a1.net)
[03:53:34] <jim> tm007, I've been known to show people how some things are done
[03:54:08] <tm007> Sir, yes sir!
[03:54:28] <jim> in this case, I just introduced the topic (pretty much)
[03:56:08] <tm007> Yeah
[03:56:44] <tm007> I do feel that OOP is over hyped. Beginners think it's rocket science.
[03:57:04] <jim> AhmedAmerican, one thing you do an awful lot of in OOP, is refactoring... and there is a book by that title, that shows a largish handful of different kinds of refactoring
[03:57:07] *** Joins: matsaman (~matsaman@user/matsaman)
[03:57:24] *** Joins: whaley (~whaley@2603-6080-a312-c426-0402-c38d-e6bc-7223.res6.spectrum.com)
[03:57:25] <grym> jim: i mean that's just coding in general
[03:57:35] <AhmedAmerican> :D
[03:57:40] <jim> sure
[03:57:41] <tm007> Yeah
[03:57:46] <AhmedAmerican> @jim Thanks for clarifying
[03:57:49] <AhmedAmerican> make sense for me.
[03:57:56] <tm007> Heard that Refactoring book is great.
[03:58:33] <tm007> It's in my TBR after Working effectively with legacy code
[03:58:55] <jim> refactoring is basically changing things and moving stuff around, but not changing how the program overall works
[03:59:19] *** Joins: zaquest (~notzaques@5.128.210.178)
[04:00:07] <tm007> jim: another top definition man
[04:00:13] <jim> rocket.launch() # Error: Rocket object doesn't have a property called launch
[04:00:16] <tm007> How long have you been coding?
[04:00:42] <tm007> it's rocket.lunch()
[04:00:50] <jim> since I was like 14
[04:01:04] <jim> I'm about 60 now
[04:01:15] <tm007> seems like you have a passion for it
[04:01:28] <tm007> Have you ever fallen out of love with coding?
[04:01:38] <tm007> Damm man! Some serious experience!
[04:02:11] <jim> oh, I started with basic on a 10-char/sec teletype
[04:02:34] <jim> I'll tell you right now, I hated it... especially line numbers
[04:02:48] *** Joins: easior (~easior@61.155.142.67)
[04:02:50] <nedbat> jim: we're the same vintage :)
[04:03:07] <tm007> nedbat: cool man!
[04:03:08] <jim> are we? cool :)
[04:03:31] *** Quits: ray (~ray@user/re) (Quit: WeeChat 3.1)
[04:03:31] <tm007> You guys must have coded in many languages. Why Python?
[04:03:44] <jim> I've always wondered how old vints are
[04:04:15] <tm007> I assume you guys like it enough to be here in the python channel.
[04:04:20] <jim> tm007, I think for most basic things, python is unusually easy
[04:06:19] *** Joins: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br)
[04:06:29] *** Quits: tailHead69 (~daruncio@2a04:52c0:101:314::5c48) (Quit: WeeChat 2.3)
[04:06:35] *** Quits: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br) (Remote host closed the connection)
[04:07:00] *** Quits: boB_K7IQ (~boB_K7IQ@c-73-254-117-91.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[04:07:10] <nedbat> tm007: Python lets you focus on the code, instead of things like making the compiler happy, or memory management, or implementing hash tables.
[04:07:29] *** Joins: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br)
[04:07:47] *** Joins: cjb (~cjb@user/cjb)
[04:08:58] *** Joins: m1n10n (georgecloo@cpe-76-184-204-251.tx.res.rr.com)
[04:09:01] *** Parts: control (guesswho@user/control) ()
[04:09:30] *** Quits: redgloboli (~redglobol@user/redgloboli) (Ping timeout: 252 seconds)
[04:10:43] *** Joins: redgloboli (~redglobol@user/redgloboli)
[04:10:47] *** Quits: gline (~yashi@p5b241399.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[04:11:23] *** Joins: frostblade (onelegend@user/frostblade)
[04:12:04] *** Joins: gline (~yashi@p5b241f96.dip0.t-ipconnect.de)
[04:12:28] <tm007> great answer nedbat jim
[04:13:07] <tm007> Demand for your levels of experience must be really high in the current market.
[04:14:30] *** Joins: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net)
[04:15:17] <akk> tm007: Also, python has a huge collection of libraries, often (compared to other languages) with clear APIs.
[04:15:42] <akk> (you've probably seen the XKCD on that already)
[04:16:39] <jim> upgraded my debian, the problem with arrow module went away
[04:17:23] <jim> and now my script loads into hexchat no problem
[04:17:57] *** Joins: iNeedKoffee (~ubuntu@public.sa-edbd-dsto-liva1.aarnet.net.au)
[04:18:28] <frostblade> Python is very powerful
[04:18:38] <jim> that too
[04:18:47] <frostblade> NumPy is so frickin useful
[04:19:07] <frostblade> just a great tool for doing statistics
[04:19:10] <frostblade> makes life so easy
[04:19:18] *** Joins: easior_ (~easior@61.155.142.73)
[04:20:11] *** Quits: whaley (~whaley@2603-6080-a312-c426-0402-c38d-e6bc-7223.res6.spectrum.com) (Read error: Connection reset by peer)
[04:20:45] *** Joins: whaley (~whaley@2603-6080-a312-c426-0402-c38d-e6bc-7223.res6.spectrum.com)
[04:21:06] <akk> I was at a big lunch full of techies once, and somebody at the table asked people's opinion on perl vs. python ... I said they were both good languages, but when I wrote something in python it (often) worked first try
[04:21:15] <akk> which never happened in perl
[04:21:41] <matsaman> not once!
[04:21:44] <akk> turned out one of the people at the table was larry wall, oops :)
[04:21:50] <matsaman> ha =)
[04:22:50] *** Quits: easior (~easior@61.155.142.67) (Ping timeout: 272 seconds)
[04:23:52] *** Joins: ray (~ray@user/re)
[04:29:48] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[04:30:08] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[04:30:08] *** Quits: whaley (~whaley@2603-6080-a312-c426-0402-c38d-e6bc-7223.res6.spectrum.com) (Read error: Connection reset by peer)
[04:30:33] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[04:30:37] <tm007> akk: hahah. what was his reaction?
[04:30:49] *** Joins: whaley (~whaley@2603-6080-a312-c426-0402-c38d-e6bc-7223.res6.spectrum.com)
[04:31:39] <akk> tm007: He was nice about it, no drama. And fortunately I didn't say perl sucked or anything, and was clear that it was my opinion and just a personal preference.
[04:32:05] <tm007> akk: must have been some lunch that
[04:32:25] <tm007> you dine with some fine people it seems
[04:32:26] *** Quits: whaley (~whaley@2603-6080-a312-c426-0402-c38d-e6bc-7223.res6.spectrum.com) (Read error: Connection reset by peer)
[04:32:37] <akk> Was a friend's wedding reception, in silicon valley.
[04:33:01] *** Joins: whaley (~whaley@2603-6080-a312-c426-0402-c38d-e6bc-7223.res6.spectrum.com)
[04:33:49] *** Quits: trufas (~trufas@177.240.218.218) (Ping timeout: 258 seconds)
[04:34:10] <lavadonut> does everyone on libera live in silicon valley
[04:34:50] *** Joins: trufas (~trufas@177.240.218.218)
[04:35:00] *** Joins: gggp (~textual@60.10.194.47)
[04:35:08] *** Quits: SuperLag (~akulbe@user/superlag) (Ping timeout: 265 seconds)
[04:35:16] *** Quits: whaley (~whaley@2603-6080-a312-c426-0402-c38d-e6bc-7223.res6.spectrum.com) (Client Quit)
[04:35:23] *** Quits: shibboleth (~shibbolet@gateway/tor-sasl/shibboleth) (Remote host closed the connection)
[04:36:09] <nedbat> lavadonut: no, of course not
[04:37:54] <lavadonut> do you?
[04:38:08] <nedbat> lavadonut: i don't.  why do you think these things? :)
[04:38:17] *** Quits: ncb (~ncb@user/ncb) (Quit: ncb)
[04:38:20] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:38:21] <lavadonut> because you're all big nerds
[04:38:32] <akk> lavadonut: I don't any more, but I did for a while, 'cause that's where the jobs were.
[04:38:39] <nedbat> lavadonut: sure, but nerds are everywhere.
[04:38:58] <lavadonut> although i guess i meant 'every american on libera'
[04:39:00] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 265 seconds)
[04:39:04] *** Quits: gossie (~gossie@2a10:3781:328:1:e1d:50cc:c868:ca94) (Ping timeout: 272 seconds)
[04:39:24] <nedbat> lavadonut: if nerds can live outside america, then they can live outside silicon valley!
[04:39:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[04:39:37] <lavadonut> they can, but do they?
[04:40:17] *** Quits: webmind (~webmind@user/webmind) (Ping timeout: 252 seconds)
[04:40:38] <nedbat> lavadonut: again: yes
[04:40:51] <lavadonut> oh
[04:40:52] <jamea> how to start: how to do this: https://www.mrexcel.com/board/threads/how-to-accumulate-up-to-a-certain-number-can-it-be-done-with-formulas-solver-or-vba.1174951/   here my code:https://bpa.st/7RYA
[04:41:08] <iNeedKoffee> Yes, they do, 'Murica isn't that alluring to most people from first world countries.
[04:41:12] *** Quits: ionface (~ionface@user/ionface) (Ping timeout: 272 seconds)
[04:41:13] *** Quits: codl (~codl@user/codl) (Read error: Connection reset by peer)
[04:41:32] *** Joins: ionface (~ionface@user/ionface)
[04:42:07] *** Joins: s6d7XSaB_ (~{HD}@191.96.185.52)
[04:42:26] *** Quits: radu242 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Read error: Connection reset by peer)
[04:42:30] *** Joins: codl (~codl@user/codl)
[04:42:53] *** Joins: radu2424 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[04:44:22] *** Joins: ncb (~ncb@user/ncb)
[04:44:45] *** Quits: s6d7XSaB_ (~{HD}@191.96.185.52) (Client Quit)
[04:45:11] <tm007> lavadonut: some nerds live in IRC
[04:45:35] <tm007> are you from the valley?
[04:46:16] *** Quits: {HD} (~{HD}@37.19.197.201) (Ping timeout: 272 seconds)
[04:46:43] *** Quits: ahmed (~ahmed@user/ahmed) (Quit: Quitte)
[04:46:54] <lavadonut> i'm moving near it soon
[04:46:56] *** Joins: wyclif (~wyclif@user/wyclif)
[04:46:56] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[04:47:21] *** Joins: {4144} (~{4144}@46.56.70.183)
[04:48:11] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 265 seconds)
[04:49:11] *** Joins: webmind (~webmind@user/webmind)
[04:49:12] <nedbat> lavadonut: i hope there aren't too many nerds :)
[04:49:45] <lavadonut> :'D
[04:50:12] *** Joins: i0e (~is0ke3@user/is0ke3)
[04:50:46] *** Joins: gossie (~gossie@2a10:3781:328:1:e1d:50cc:c868:ca94)
[04:52:22] *** Joins: hanaan (~naan@user/naan)
[04:52:57] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:c51e:2204:5b0e:2468) (Quit: Textual IRC Client: www.textualapp.com)
[04:54:18] *** Quits: Naan (~naan@user/naan) (Ping timeout: 268 seconds)
[04:55:20] <tm007> lavadonut: almost nerd
[04:55:32] *** Joins: {HD} (~{HD}@191.96.185.201)
[04:55:47] <tm007> is it just me or is there a hiring spree going on?
[04:56:46] *** Joins: venmx (~bertie@82-132-235-187.dab.02.net)
[04:56:54] *** Quits: Overflwn (~Overflwn@2a02:8070:c3b7:5b00::ea80) (Quit: Leaving)
[04:58:56] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 272 seconds)
[04:59:16] *** Quits: dba (uid502594@id-502594.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[05:00:12] *** Quits: {HD} (~{HD}@191.96.185.201) (Ping timeout: 272 seconds)
[05:00:24] *** Joins: gggp (~textual@36.112.135.215)
[05:03:23] *** Quits: venmx (~bertie@82-132-235-187.dab.02.net) (Read error: Connection reset by peer)
[05:04:52] *** Quits: mathgrad (~mathgrad@2600:8806:3003:f756:f5cd:a8c9:c2ee:d59f) (Remote host closed the connection)
[05:05:10] *** Joins: pnoud (~pnoud@user/pnoud)
[05:05:16] *** Quits: ntdll (~ntdll@user/ntdll) (Ping timeout: 272 seconds)
[05:05:16] *** Joins: mathgrad (~mathgrad@2600:8806:3003:f756:f5cd:a8c9:c2ee:d59f)
[05:05:17] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[05:06:54] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[05:07:27] *** Quits: cdown (~cdown@89.32.122.5) (Quit: https://chrisdown.name)
[05:08:17] *** Quits: cjb (~cjb@user/cjb) (Quit: brb)
[05:08:43] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[05:10:19] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[05:10:27] *** Joins: envex (~envex@cpe-173-91-189-33.neo.res.rr.com)
[05:11:41] *** Joins: cjb (~cjb@user/cjb)
[05:12:52] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[05:13:42] *** Quits: bjb (~bjb@sourcerer.ca) (Remote host closed the connection)
[05:13:56] *** Joins: bjb (~bjb@sourcerer.ca)
[05:14:01] *** Quits: nyah (~nyah@90.221.186.180) (Ping timeout: 268 seconds)
[05:15:04] *** Joins: {HD} (~{HD}@102.165.16.191)
[05:18:04] <nvz> there is a lot of places short of help
[05:18:19] <nvz> people have gotten lazy
[05:23:00] <nedbat> nvz: lazy?
[05:23:16] *** Quits: ncb (~ncb@user/ncb) (Quit: ncb)
[05:26:47] *** Joins: fcjsx (~fcjsx@2800:a4:802:f400:a53e:966f:ace5:11f7)
[05:27:19] *** Quits: fcjsx (~fcjsx@2800:a4:802:f400:a53e:966f:ace5:11f7) (Client Quit)
[05:27:35] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 268 seconds)
[05:27:47] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:28:14] *** Quits: gggp (~textual@36.112.135.215) (Remote host closed the connection)
[05:28:53] *** Joins: vimart (~vimart@148.252.129.129)
[05:29:03] *** Joins: gggp (~textual@60.10.194.47)
[05:29:59] *** Joins: venmx (~bertie@82-132-235-187.dab.02.net)
[05:30:21] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:30] *** Joins: noyb (~noyb@user/noyb)
[05:30:43] *** Quits: hanaan (~naan@user/naan) (Read error: Connection reset by peer)
[05:30:50] *** Joins: ahmed (~ahmed@user/ahmed)
[05:30:55] *** Quits: ahmed (~ahmed@user/ahmed) (Client Quit)
[05:31:07] *** Joins: PdimH (~pdimh@user/pdimh)
[05:31:14] *** Quits: twobitsprite (~twobitspr@107.13.51.62) (Ping timeout: 272 seconds)
[05:33:08] *** Quits: patchie (~sdf@63.79-160-77.customer.lyse.net) (Ping timeout: 265 seconds)
[05:33:54] *** Quits: venmx (~bertie@82-132-235-187.dab.02.net) (Read error: Connection reset by peer)
[05:34:21] <nvz> yeah.. you know.. unmotivated..
[05:34:29] <nvz> sit around playing video games..
[05:34:51] <nvz> trying to manipulate the system to make a living
[05:34:52] <tm007> nvz: who? where? how do i get that job?
[05:35:06] * nvz wouldnt even /want/ that job
[05:35:22] <tm007> nvz: In my 5 years short career. I've been overworked in every one of my jobs.
[05:35:33] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 265 seconds)
[05:35:39] <tm007> Current work I've done 60 hrs for over 6 months
[05:35:52] *** Quits: gggp (~textual@60.10.194.47) (Remote host closed the connection)
[05:36:31] *** Joins: gggp (~textual@60.10.194.47)
[05:36:43] <nvz> yeah.. I've been noticing more of that too
[05:36:50] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 268 seconds)
[05:36:58] *** Joins: semanticz0 (~Libera@202.164.136.255)
[05:37:24] *** Joins: cliluw (~cliluw@47.147.80.149)
[05:37:26] <nvz> I mean my current job has that all the overtime you want but not mandatory kinda thing going on.. but even just working regular schedule, I am still working twice as much cause on any given day we are like 6-10 people short
[05:37:28] <tm007> At this rate burnout is inevitable
[05:37:35] <nvz> so I wind up doing the work of 2-3 people
[05:38:49] <tm007> My current team is a bit under whelming. One of my seniors is stealing a living.
[05:38:59] <nvz> though whats frustrating me is finding a place to live.. apparently among all this stuff you're talking about there is also a housing shortage cause people are sitting around collecting unemployment, stimulus, whatever and taking advantage of court backlogs, and such and just squatting in places they should've been moved out of
[05:39:06] <tm007> Imagine having to make up for a senior. Lol
[05:39:11] *** Joins: ctrypoph (~ctrypoph@2600:1702:3000:9090:6d7f:1c9d:1aea:24aa)
[05:39:15] <tm007> I'm getting crushed
[05:39:28] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 272 seconds)
[05:39:39] <nvz> I can't imagine anything about what you're actually talking about cause given the channel I assume you work in programming and I'd never do that.. couldnt pay me enough :P
[05:39:56] <nvz> I dabble, out of necessity.. want things, gotta do it myself..
[05:40:07] <nvz> not something I'd want to have to do all the time
[05:40:40] <nvz> most the crap on my github is trivial stuff and can't even get any help with that :P
[05:41:27] <tm007> Sounds fun man
[05:41:35] <tm007> But coding is super power
[05:41:42] <semanticz0> Hey. I'm a 20yo who picked up programming again after dabbling in Ruby, and then PHP and Laravel for a few years (age 11-15). I'm currently finishing law school and realizing that I miss software. Any thoughts on something I should be aware of? I've had one or two software internships but very much an intermediate beginner.
[05:42:04] <tm007> semanticz0: hack away man
[05:42:39] <nvz> yeah idk makes me tired.. been wanting to make this lil game ever since I saw the gopherwood studios game years ago.. put a few days effort into getting it going.. hopin maybe someone would take interest and help develop it :P
[05:42:58] <nvz> thats not really happening.. heh... https://github.com/reptangles
[05:42:59] <tm007> haha
[05:43:00] *** Quits: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[05:43:08] <tm007> not my piece of cake
[05:43:16] <nvz> yeah not really mine either
[05:43:22] <semanticz0> tm007 I appreciate the encouragement. Anything in particular you wish you'd done starting out early?
[05:43:47] <tm007> My starting was a lot of fun actually
[05:43:58] <tm007> I took CS50 online course from Harvard
[05:44:05] <semanticz0> SAME. I just finished CS50. :)
[05:44:11] <nvz> I think maybe if I had gone to school for this stuff and learned to do it, maybe I'd like it more
[05:44:21] <MrAureliusR> It really depends
[05:44:29] <nedbat> nvz: don't you mean https://github.com/enveezee/reptangles ?
[05:44:32] <MrAureliusR> I do programming in C for work, and Python (mostly) for play
[05:44:34] <nvz> but I learned to program on my own as a small child.. and developed a lot of bad habits, and spent most my life trying to unlearn them
[05:44:35] <tm007> I was a EEE major and I played around with arduino and raspberry Pi
[05:44:40] <nvz> nedbat: yeah :D
[05:44:44] <tm007> made mobile apps with MIT app inventor
[05:44:44] <nedbat> i like hearing people take CS50.  edX ftw :)
[05:44:56] <nvz> nedbat: forgot to put my username in there :D
[05:45:00] <tm007> Those days were a lot of fun man!
[05:45:08] <MrAureliusR> Last night and today I just played around with Python for fun, and made this cool little app that draws spirographs: https://git.frozendev.tk/amr/spirographs
[05:45:19] <semanticz0> nedbat: I actually hated edx's interface. cs50.harvard.edu was much nicer to use
[05:45:28] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 268 seconds)
[05:45:30] <nvz> this year I took some time to start learning to use github, vscode, and code more sanely
[05:45:41] <MrAureliusR> (use gitlab) :P
[05:45:47] <tm007> nvz: sounds fun man
[05:45:48] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 272 seconds)
[05:45:48] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[05:45:48] <nvz> I've made some huge strides in a short time.. but now I know how little I know
[05:45:51] <tm007> MrAureliusR: hahahahah
[05:45:51] <nedbat> semanticz0: sorry to hear that
[05:45:59] *** Joins: easior (~easior@61.155.142.67)
[05:46:13] <MrAureliusR> nvz: that's how we all feel, even after many many years of programming
[05:46:33] *** Quits: kilitary (~kilitary@kilitary.ru) (Read error: Connection reset by peer)
[05:46:38] <MrAureliusR> programming for *fun* in your off-time is a great way to sharpen your skills
[05:46:45] <MrAureliusR> if you enjoy what you are working on, you'll learn faster
[05:46:49] <nedbat> nvz: i've been doing some js programming, and i have to google everything
[05:46:50] *** Joins: gggp (~textual@106.37.74.209)
[05:47:01] <MrAureliusR> the secret to programming is Google
[05:47:11] <MrAureliusR> I had to google like 50 things working on that app last night and today
[05:47:15] <nvz> yeah well I put on my github a /dirt/ repo which is some misc crap I coded that was useful over the years.. and just looking at that stuff compared to stuff I coded this year.. its a noticible difference in readability, maintainability..
[05:47:17] <nedbat> MrAureliusR: well, IRC helps when i have deeper questions :)
[05:47:24] <MrAureliusR> couldn't remember the order of things in list comprehensions, etc.
[05:47:32] *** Quits: PdimH (~pdimh@user/pdimh) (Quit: May we meet again)
[05:47:41] <lavadonut> you're in college, you could ask around other departments if any profs have an undergrad research project available
[05:47:53] <nvz> idk I use comprehensions at times but most every time I do it, I feel like I'm wrong for even doing it
[05:48:00] <nedbat> MrAureliusR: like spirographs, I made this thing: https://flourish.nedbat.com
[05:48:01] <MrAureliusR> I started reading this book called Python One-liners and now I'm trying to use list comprehensions whenever it makes sense
[05:48:11] <nvz> its like those arrow functions they got in JS now.. the stuff is just hard to read
[05:48:24] <MrAureliusR> 3D lissajous curves or something?
[05:48:36] *** Quits: easior_ (~easior@61.155.142.73) (Ping timeout: 265 seconds)
[05:48:38] <nedbat> MrAureliusR: yeah, on steroids :)
[05:48:39] <semanticz0> nvz: I LOVE how list comprehensions look
[05:48:42] <MrAureliusR> I was really proud of myself for converting my for loop into a list comprehension earlier
[05:48:52] <nvz> I was just saying in my channel recently about something I coded and a feature I didnt recall even adding, and went back and looked at github and found the commit, couldnt remember doing it..
[05:48:53] <MrAureliusR> self.epiX = np.array([self.calcEpiX(i) for i in np.arange(0, self.highestTheta, self.stepSize)])
[05:49:00] <semanticz0> Also this is my first time on IRC. I was surprised people still use it. But there's a nice throwback vibe here.
[05:49:02] <nvz> that stuff happens.. and thats why your code has to be READABLE
[05:49:02] <lavadonut> what's your channel?
[05:49:09] <nvz> lavadonut: ##cheers
[05:49:21] <MrAureliusR> IRC is still very active in the open source/programmer community
[05:49:38] <MrAureliusR> this network was just founded a few weeks ago, in fact
[05:49:58] <semanticz0> I'm using mIRC here and it looks like crap. Any suggestions on an alternative client?
[05:50:03] <MrAureliusR> hexchat
[05:50:04] <MrAureliusR> all the way
[05:50:13] <MrAureliusR> actually themeable which is so nice
[05:50:33] *** Joins: vlm (~vlm@user/vlm)
[05:50:52] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 272 seconds)
[05:50:54] <nvz> I just run a text based client on my VPS and access it over mosh
[05:51:04] *** Quits: jamea (~jamea77@177.239.82.167) (Ping timeout: 252 seconds)
[05:51:16] *** Joins: easior_ (~easior@61.155.142.73)
[05:51:20] <semanticz0> MrAureliusR: just downloaded hexchat and i never thought i'd install perl
[05:51:31] <MrAureliusR> it's not actually necessary
[05:51:44] <MrAureliusR> but hexchat has some great programmability
[05:51:48] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[05:51:56] <MrAureliusR> unlike mIRC who made up their own language for some reason, you can use Python, Perl, etc to script hexchat
[05:52:12] <rud0lf> mirc script is nice once you learn it
[05:52:15] <nomic> u can use tcl
[05:52:18] <rud0lf> i think it's not turing complete
[05:52:24] <frostblade> I'm using Weechat
[05:52:35] <MrAureliusR> this is what my hexchat looks like: https://i.imgur.com/p6mONqY.png
[05:52:58] <semanticz0> Damn, that looks significantly nicer.
[05:53:00] <frostblade> MrAureliusR: nice setup!
[05:53:01] <nvz> I actually considered trying weechat today.. cause I migrated my setup to a new VPS today.. and this one plugin in irssi has been annoying me and I dont feel like figuring it out :P
[05:53:02] <rud0lf> i like gui programs you can custom the *** out of
[05:53:09] <MrAureliusR> :)
[05:53:20] <rud0lf> unload it, nvz
[05:53:40] <nvz> its /suppose/ to automatically keep track of the channels I'm in and add/remove them to autojoins as I join/part them
[05:53:55] <MrAureliusR> znc does that :)
[05:53:57] *** Joins: venmx (~bertie@82-132-235-187.dab.02.net)
[05:53:59] <nvz> but it doesn't really work right.. my config got all crufted somehow :P
[05:54:03] <MrAureliusR> I've been using znc for a couple years now, I love it
[05:54:17] <rud0lf> me too, MrAureliusR
[05:54:26] <MrAureliusR> it's so nice!
[05:54:33] <rud0lf> it's nice you can compile it with python modules support
[05:54:40] *** Quits: easior (~easior@61.155.142.67) (Ping timeout: 272 seconds)
[05:54:40] *** Joins: TakinOver (~TakinOver@47.150.206.35)
[05:54:50] <nvz> I prefer to just use a text client in mosh.. I can easily run other services like web server on the VPS.. mosh allows me to easily hop around..
[05:54:59] <rud0lf> i made a script that sends me push notifications to phone about highlights when i'm offline
[05:55:12] <MrAureliusR> oh nice
[05:55:18] <MrAureliusR> that's a cool idea
[05:55:19] <frostblade> I'm running weechat in a tmux session
[05:55:36] <MrAureliusR> and yeah mosh + tmux = awesome
[05:55:40] <nvz> frostblade: which means you're a youngin :P
[05:55:47] *** Joins: easior__ (~easior@61.155.142.70)
[05:55:48] <MrAureliusR> heh
[05:55:56] <frostblade> youngin?
[05:56:00] <rud0lf> i suggest PushOver, the program is cheap and it's one-time purchase
[05:56:03] <nvz> I didn't /choose/ screen+irssi over weechat/tmux
[05:56:08] <nvz> they just werent options
[05:56:08] <rud0lf> for android and i think iOS
[05:56:12] <MrAureliusR> lol
[05:56:16] *** Quits: semanticz0 (~Libera@202.164.136.255) (Remote host closed the connection)
[05:56:25] <MrAureliusR> it still surprises me how many people willingly use irssi
[05:56:28] <nvz> and now why incur technical debt for stuff I dont really want anyhow
[05:56:30] <MrAureliusR> I've tried to use it, multiple times
[05:56:37] <rud0lf> i use irssi
[05:56:42] <rud0lf> it's nice
[05:56:44] <nvz> well the window management is pretty gross
[05:56:50] <MrAureliusR> yes
[05:56:52] <nvz> but other than that its always been rather solid
[05:56:53] <MrAureliusR> that was a killer for me
[05:56:58] <rud0lf> in fact i switched to linux to make scripts for irssi
[05:57:07] <nvz> yeah well I dont split screen so..
[05:57:32] *** Joins: semanticz0 (~semanticz@202.164.136.255)
[05:57:44] *** Quits: emerent (~quassel@p200300cd5703bb10ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[05:57:46] <semanticz0> Hey! I got Hexchat. This interface is actually much nicer
[05:57:51] *** Quits: venmx (~bertie@82-132-235-187.dab.02.net) (Read error: Connection reset by peer)
[05:58:16] <nvz> quassel is pretty slick as far as GUI clients go.. even has a client/server model
[05:58:22] *** Joins: emerent (~quassel@p200300cd5703bba5ba27ebfffed28a59.dip0.t-ipconnect.de)
[05:58:24] <nvz> idk if there is a windows port though
[05:58:38] <rud0lf> it's nice that you can customize every chat message
[05:58:39] *** Joins: pete443_ (~pete@user/pete443)
[05:58:47] <frostblade> thelounge.chat
[05:58:53] <frostblade> works in browser
[05:58:59] <nvz> if I were gonna use a gui client I'd probably go with quassel
[05:59:02] *** Quits: easior_ (~easior@61.155.142.73) (Ping timeout: 268 seconds)
[05:59:12] <rud0lf> semanticz0: hint: there's a tickmark to turn "A has opped B, A has opped C" back into "A sets mode +oo B C"
[05:59:19] *** Quits: semanticz0 (~semanticz@202.164.136.255) (Client Quit)
[05:59:41] *** Quits: pete443 (~pete@user/pete443) (Ping timeout: 258 seconds)
[06:00:00] <nvz> too many things work in a browser anymore
[06:00:07] <nvz> which is why browsers are loathesome
[06:00:27] *** Quits: ctrypoph (~ctrypoph@2600:1702:3000:9090:6d7f:1c9d:1aea:24aa) (Quit: -a- IRC for Android 2.1.59)
[06:01:57] <nvz> but anywho, we're way OT.. I'm gonna stfu now.. heh.. unless someone wants to talk in a /social/ channel :P
[06:02:04] *** Quits: easior__ (~easior@61.155.142.70) (Ping timeout: 252 seconds)
[06:02:07] *** Joins: ctrypoph (~ctrypoph@2600:1702:3000:9090:6d7f:1c9d:1aea:24aa)
[06:02:41] *** Joins: easior (~easior@61.155.142.67)
[06:02:45] *** Joins: semanticz0 (~semanticz@202.164.136.255)
[06:03:29] <semanticz0> rud0lf: Okay, getting this themed was a start
[06:03:37] <semanticz0> But nice
[06:03:38] <semanticz0> I like it
[06:03:44] <semanticz0> I feel very 90s Hackerman
[06:05:10] <rud0lf> sure
[06:05:49] <semanticz0> Seriously though. How many people on here are working programmers v. enthusiasts?
[06:05:57] <rud0lf> well, technically IRC is like two ships on the ocean
[06:06:06] *** Quits: derelict (~derelict@user/derelict) (Quit: WeeChat 3.2)
[06:06:08] * nvz is neither working nor enthused :P
[06:06:23] *** Joins: derelict (~derelict@user/derelict)
[06:06:27] <rud0lf> if you don't get the reference, i suggest a minute and 40 of your life to see https://www.youtube.com/watch?v=O2rGTXHvPCQ
[06:06:30] <rud0lf> :)
[06:07:06] *** Quits: gggp (~textual@106.37.74.209) (Remote host closed the connection)
[06:07:10] <semanticz0> good god what the hell is this show
[06:07:13] <nvz> there are good ships, and there are woodships, and ships that sail the sea.. but the best ships are friendships, and may they always be :P
[06:07:17] *** Joins: easior_ (~easior@61.155.142.67)
[06:07:52] *** Quits: hegstal (~hegstal@2a02:c7f:7604:8a00:c6b4:633:2502:e963) (Remote host closed the connection)
[06:08:02] <semanticz0> i came here to ask programming questions
[06:08:12] <semanticz0> i am now theming an IRC client
[06:08:14] <nvz> that seems to be working out well
[06:08:16] *** Joins: gggp (~textual@60.10.194.47)
[06:08:17] <semanticz0> And watching videos
[06:08:23] <semanticz0> An improvement, overall,
[06:08:55] <rud0lf> semanticz0: did you just get social by accident? ;)
[06:09:15] <semanticz0> rud0olf: xD
[06:09:24] <semanticz0> *rud0lf
[06:10:16] *** Joins: easior__ (~easior@61.155.142.70)
[06:10:45] <MrAureliusR> hehe
[06:11:08] *** Quits: easior (~easior@61.155.142.67) (Ping timeout: 272 seconds)
[06:11:15] <tm007> fire away questions
[06:11:43] <MrAureliusR> is there a #python-social ?
[06:11:43] <MrAureliusR> lol
[06:11:57] <Tashtari> There's a #python-offtopic
[06:13:40] *** Quits: easior_ (~easior@61.155.142.67) (Ping timeout: 272 seconds)
[06:14:17] *** Joins: djapo (~archangel@user/djapo)
[06:15:35] <semanticz0> tm007: is one-liner-ing with list comprehensions considered good?
[06:15:57] <nedbat> semanticz0: it's good if a one-line listcomp is a good expression of your idea
[06:16:28] <semanticz0> Makes sense. I suppose gauging that is a result of practice.
[06:16:50] <tm007> nedbat: agreed
[06:17:03] <semanticz0> Another one I've had for a while. Is it worth it to just read the standard library as an exercise if I have a free month?
[06:17:07] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 265 seconds)
[06:17:21] <semanticz0> My biggest confusion is probably deciding what the best use of my time is
[06:17:39] <nedbat> semanticz0: you could learn something by reading the stdlib.  but don't assume it's the best code.
[06:17:43] <semanticz0> I have two years of law school left and I want to upskill rapidly, I guess
[06:17:54] *** Joins: gggp (~textual@124.126.15.211)
[06:17:56] <tm007> allbooks = [(book,language) for book in books for languages in language ]
[06:17:59] <tm007> looks goof this
[06:18:02] *** Joins: eli__ (~eli@i220-99-152-148.s41.a013.ap.plala.or.jp)
[06:18:23] <nedbat> tm007: allbooks = itertools.product(books, languages)
[06:18:49] <altendky> sometimes one-liners are best written on five lines
[06:18:56] <nvz> heh
[06:19:15] <nvz> I did that with some gnarly regex in that bible lookup thing I wrote on Easter Sunday
[06:19:22] <nvz> broke it up across like 5 lines
[06:19:49] <semanticz0> people who know how to do regexes are always impressive.
[06:19:53] <eli__> hi, i've been able to successfully pull out a list of rows from a pandas DataFrame using `iloc` and a predicate, like so: `df.loc[df[0] == "Table"]`
[06:19:58] <semanticz0> like what the hell, man
[06:19:58] <tm007> nedbat: genius stuff man!
[06:20:08] <eli__> now i want to take that `df` and split it based on the rows that match the predicate
[06:20:14] <nvz> https://github.com/enveezee/INRI/blob/3dfd92c17e243fe98076f0335e2b091f8f3e2574/plugin.py#L62
[06:20:15] <eli__> i'm getting stuck on this part
[06:20:23] <nvz> semanticz0: yeah well it took me most of the day to make that one :P
[06:20:35] *** Joins: m4ug (~m4ug@99.72.30.19)
[06:20:50] <semanticz0> (nedbat) is the itertools implementation more readable than the list comprehension?
[06:20:59] <semanticz0> I'm not sure. Probably because I'm not familiar with most of stdlib
[06:21:02] <eli__> (mistake: im using `loc` not `iloc`, its taking me a while to get used to the dataframe api)
[06:21:10] <nedbat> semanticz0: i think it is.  i had to read the listcomp closely to see it was a product
[06:21:28] <nvz> I spent more time on that regex than the entire project
[06:22:08] <semanticz0> nedbat: makes sense
[06:22:11] <nvz> if I hadn't commented it, and seen it work, I wouldnt know what it is
[06:22:20] <tm007> makes me feel i need to go back and look at the stdlib
[06:22:28] <tm007> so much i dont know
[06:22:45] <semanticz0> tm007: people tell me that feeling never goes away
[06:23:07] <tm007> nedbat: how about this one:
[06:23:07] <tm007> allbooks = [(book,language) for book in books for language in languages if language !='English']
[06:23:27] <nedbat> tm007: that gets trickier
[06:23:28] <tm007> semanticz0: it's all about the journey!
[06:24:16] <nedbat> tm007: i might make a non_english_languages list, and then use itertools.product still
[06:24:30] *** Joins: ctrypoph_ (~ctrypoph@2607:fb90:18d2:d088:6395:d5f6:4e7c:245e)
[06:24:32] <tm007> hmm
[06:25:55] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[06:26:27] *** Joins: venmx (~bertie@82-132-235-187.dab.02.net)
[06:27:12] *** Quits: ctrypoph (~ctrypoph@2600:1702:3000:9090:6d7f:1c9d:1aea:24aa) (Ping timeout: 250 seconds)
[06:27:25] *** Quits: lazar (~lazar@user/lazar) (Ping timeout: 268 seconds)
[06:29:30] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 272 seconds)
[06:30:13] <tm007> nedbat: do you work at/with open edx?
[06:30:24] *** Quits: venmx (~bertie@82-132-235-187.dab.02.net) (Read error: Connection reset by peer)
[06:30:39] *** Joins: holbrode (sid339826@id-339826.tinside.irccloud.com)
[06:31:36] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[06:31:56] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[06:33:59] *** Quits: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net) (Quit: Konversation terminated!)
[06:34:28] <MrAureliusR> semanticz0: I seriously recommend the Learning Python book by Mark Lutz. That, plus Python in a Nutshell are two of my favourite Python books
[06:35:19] <nedbat> tm007: I do
[06:35:19] *** Quits: holbrode (sid339826@id-339826.tinside.irccloud.com) (Quit: Updating details, brb)
[06:35:35] *** Quits: jkl (~jkl@user/jkl) (Quit: ZNC 1.8.2 - https://znc.in)
[06:35:37] *** Joins: holbrode (sid339826@id-339826.tinside.irccloud.com)
[06:35:44] <nedbat> tm007: I work at edX on the Open edX project
[06:35:54] <tm007> Nice man!
[06:36:45] *** Joins: salpynx (~salpynx@121.73.84.248)
[06:36:54] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 252 seconds)
[06:39:05] *** Joins: iflema (~ian@user/iflema)
[06:40:23] *** Joins: nepeat (~nepeat@79.110.170.62)
[06:40:23] *** Quits: vimart (~vimart@148.252.129.129) (Quit: WeeChat 2.8)
[06:42:19] *** Quits: ctrypoph_ (~ctrypoph@2607:fb90:18d2:d088:6395:d5f6:4e7c:245e) (Read error: Connection reset by peer)
[06:42:42] *** Joins: ctrypoph (~ctrypoph@99-51-11-77.lightspeed.brhmmi.sbcglobal.net)
[06:43:58] *** Quits: MrFixIt (~samurai_@c-73-246-215-75.hsd1.il.comcast.net) (Remote host closed the connection)
[06:44:44] *** Joins: easior_ (~easior@61.155.142.73)
[06:45:52] *** Quits: bilegeek (~bilegeek@2600:1008:b015:3e96:6f34:1a42:6ac5:3b86) (Quit: Leaving)
[06:46:20] *** Quits: female_student_4 (~female_st@2a01:388:243:150::1:51) (Quit: Client closed)
[06:46:41] *** Joins: venmx (~bertie@82-132-235-187.dab.02.net)
[06:48:03] *** Quits: easior__ (~easior@61.155.142.70) (Ping timeout: 265 seconds)
[06:48:59] *** Quits: gggp (~textual@124.126.15.211) (Ping timeout: 268 seconds)
[06:50:25] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:50:49] *** Joins: gggp (~textual@60.10.194.47)
[06:50:52] *** Quits: venmx (~bertie@82-132-235-187.dab.02.net) (Read error: Connection reset by peer)
[06:51:41] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:52:41] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 268 seconds)
[06:52:48] *** Joins: MrFixIt (~samurai_@c-73-246-215-75.hsd1.il.comcast.net)
[06:55:47] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[06:59:54] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 272 seconds)
[06:59:54] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[07:00:08] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 265 seconds)
[07:00:47] *** Joins: easior__ (~easior@61.155.142.67)
[07:00:58] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:00:58] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (tin.libera.chat (Nickname regained by services)))
[07:00:58] *** finn_elija is now known as FinnElija
[07:01:16] *** Joins: gggp (~textual@36.112.135.215)
[07:02:49] <semanticz0> MrAureliusR: I'm reading Learning Python right now. It's been great so far :)
[07:04:24] *** Quits: easior_ (~easior@61.155.142.73) (Ping timeout: 268 seconds)
[07:05:38] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 268 seconds)
[07:05:39] *** Joins: jpcanepa (~textual@2800:300:62b1:a600::c)
[07:05:53] *** Quits: akk (~akk@174-28-112-132.albq.qwest.net) (Quit: +++)
[07:05:59] *** Joins: pnoud (~pnoud@user/pnoud)
[07:07:16] *** Joins: easior (~easior@61.155.142.73)
[07:08:46] *** Quits: easior__ (~easior@61.155.142.67) (Ping timeout: 272 seconds)
[07:08:50] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[07:08:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:09:05] *** Joins: aquijoule_ (~richbridg@213-225-32-103.nat.highway.a1.net)
[07:10:31] *** Quits: gggp (~textual@36.112.135.215) (Remote host closed the connection)
[07:10:46] *** Joins: easior_ (~easior@61.155.142.67)
[07:11:16] *** Joins: gggp (~textual@60.10.194.47)
[07:11:18] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[07:11:24] <catbeard> question RE: pycharm community latest, when I install the SpeechRecognition package it still says on my import that SpeechRecognition module isn't installed, python3.9 in virtualenv
[07:11:48] *** Quits: richbridger (~richbridg@213-225-5-235.nat.highway.a1.net) (Ping timeout: 268 seconds)
[07:13:12] *** Quits: easior (~easior@61.155.142.73) (Ping timeout: 272 seconds)
[07:14:18] *** Joins: jkl (~jkl@user/jkl)
[07:14:42] *** Joins: easior__ (~easior@61.155.142.67)
[07:15:38] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[07:15:53] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[07:17:38] *** Quits: easior_ (~easior@61.155.142.67) (Ping timeout: 272 seconds)
[07:18:10] *** Joins: easior_ (~easior@61.155.142.73)
[07:18:16] *** Joins: pwnd_sfw1 (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[07:18:16] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 272 seconds)
[07:18:20] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[07:18:46] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Read error: Connection reset by peer)
[07:18:46] *** pwnd_sfw1 is now known as pwnd_sfw
[07:19:13] *** Joins: venmx (~bertie@82-132-235-187.dab.02.net)
[07:20:06] *** Joins: gggp (~textual@60.10.194.47)
[07:20:26] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 268 seconds)
[07:21:06] *** Joins: ssbr_ (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net)
[07:21:26] *** Quits: easior__ (~easior@61.155.142.67) (Ping timeout: 272 seconds)
[07:21:29] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[07:23:17] *** Quits: venmx (~bertie@82-132-235-187.dab.02.net) (Read error: Connection reset by peer)
[07:23:18] *** Joins: i0e (~is0ke3@user/is0ke3)
[07:25:42] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 250 seconds)
[07:27:09] *** Joins: HaMsTeRs (~mx@49.130.89.2)
[07:27:10] *** Joins: mrkz_c (uid503554@user/mrkz-c/x-7247691)
[07:27:23] *** Quits: ericlee (~ericlee@2601:647:4681:3420::1) (Remote host closed the connection)
[07:27:25] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:27:42] *** Joins: ericlee (~ericlee@2601:647:4681:3420::1)
[07:29:47] *** Joins: N4G4R41 (~CircuitLo@user/n4g4r41)
[07:31:27] *** Quits: gggp (~textual@60.10.194.47) (Remote host closed the connection)
[07:31:37] *** Quits: FluffyMask (~FluffyMas@user/fluffymask) (Quit: WeeChat 2.9)
[07:31:58] *** Quits: jpcanepa (~textual@2800:300:62b1:a600::c) (Quit: Textual IRC Client: www.textualapp.com)
[07:32:13] *** Joins: gggp (~textual@60.10.194.47)
[07:32:15] *** Joins: easior__ (~easior@61.155.142.73)
[07:35:54] *** Quits: easior_ (~easior@61.155.142.73) (Ping timeout: 265 seconds)
[07:38:27] *** Quits: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br) (Quit: Leaving)
[07:43:15] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[07:43:44] *** Quits: HaMsTeRs (~mx@49.130.89.2) (Quit: Konversation terminated!)
[07:44:05] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:44:36] *** Quits: NeoCore (~neocore@143.244.56.146) (Ping timeout: 265 seconds)
[07:47:00] *** Joins: kikijiki (~Thunderbi@user/kikijiki)
[07:48:09] *** Quits: gggp (~textual@60.10.194.47) (Remote host closed the connection)
[07:48:46] *** Joins: gggp (~textual@60.10.194.47)
[07:49:43] *** Joins: northernsage (~northerns@187.107.158.146)
[07:51:53] *** Quits: iNeedKoffee (~ubuntu@public.sa-edbd-dsto-liva1.aarnet.net.au) (Ping timeout: 268 seconds)
[07:54:36] *** Joins: bigRoo (~user@131.236.54.84)
[07:54:48] *** Joins: venmx (~bertie@82-132-235-187.dab.02.net)
[07:55:03] *** Quits: N4G4R41 (~CircuitLo@user/n4g4r41) (Quit: Quit)
[07:55:42] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:121:2339:9862:1b9c) (Quit: Leaving)
[07:56:20] <tm007> semanticz0: if you've completed cs50
[07:56:31] <tm007> you can breeze past Python intro
[07:57:56] *** Quits: GrandPa-G (~GrandPa-G@www.rgconsulting.com) (Ping timeout: 252 seconds)
[07:58:47] *** Quits: venmx (~bertie@82-132-235-187.dab.02.net) (Read error: Connection reset by peer)
[07:59:17] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 268 seconds)
[07:59:26] *** Joins: akaWolf (~akaWolf@akawolf.org)
[08:03:22] *** Joins: jinsun (~quassel@user/jinsun)
[08:04:22] *** Joins: pnoud (~pnoud@user/pnoud)
[08:05:42] *** Quits: gggp (~textual@60.10.194.47) (Remote host closed the connection)
[08:06:22] *** Joins: gggp (~textual@60.10.194.47)
[08:07:07] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[08:09:34] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[08:10:45] *** Joins: easior_ (~easior@61.155.142.70)
[08:10:47] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[08:12:09] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 265 seconds)
[08:12:09] *** Lord_of_Life_ is now known as Lord_of_Life
[08:14:05] *** Quits: easior__ (~easior@61.155.142.73) (Ping timeout: 265 seconds)
[08:14:42] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 268 seconds)
[08:15:04] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Quit: WeeChat 2.8)
[08:15:42] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[08:18:51] *** Joins: twobitsprite (~twobitspr@107.13.51.62)
[08:20:22] *** Quits: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-147.dsl.bell.ca) (Ping timeout: 258 seconds)
[08:22:00] *** Quits: enrico (~enrico@gandi.enricozini.org) (Changing host)
[08:22:00] *** Joins: enrico (~enrico@debian/enrico)
[08:22:23] *** Joins: YoungPotato (~user@155.98.131.2)
[08:22:43] *** Quits: OPK (~OPK@user/opk) (Ping timeout: 268 seconds)
[08:22:52] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 272 seconds)
[08:23:49] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[08:24:24] *** Joins: gggp (~textual@60.10.194.47)
[08:24:51] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:558d:55a0:b0ee:1f34) (Read error: Connection reset by peer)
[08:26:25] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:d9f9:7ba2:7c1:ca06)
[08:28:53] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 268 seconds)
[08:29:33] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[08:29:57] *** Joins: northernsage (~northerns@187.107.158.146)
[08:31:02] *** Quits: lunc (~moe@user/lunc) ()
[08:34:13] *** Joins: enrh (~enrh@user/robinho)
[08:34:56] *** Quits: enrh (~enrh@user/robinho) (Client Quit)
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:16] *** Joins: enrh (~enrh@user/enrh)
[08:36:21] *** Quits: lavadonut (~lavadonut@user/lavadonut) (Read error: Connection reset by peer)
[08:36:37] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:39:55] *** Joins: ______GOD______ (~GOD@user/god/x-9778998)
[08:40:40] <Jonno_FTW> is python built with clang faster than python built with gcc?
[08:41:56] <enrh> Seems some people on the Internet think yes
[08:42:28] <Jonno_FTW> I've tried pypy, which was faster but my workload makes use of subprocesses which exhausted my 64gb memory
[08:42:46] <Jonno_FTW> cpython does not exhaust my memory
[08:43:34] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 265 seconds)
[08:44:05] <Jonno_FTW> maybe I'll just branch out into multiple machines
[08:44:27] *** Joins: cliluw (~cliluw@47.147.80.149)
[08:44:50] <enrh> Most of my workloads are CPU intensive so you've peaked my interest with this question
[08:45:26] *** Joins: OPK (~OPK@user/opk)
[08:46:08] *** Joins: Blankspace (~abcd@user/blankspace)
[08:46:10] <Blankspace> Hi
[08:46:17] <Blankspace> !e
[08:46:17] <Blankspace> @__import__
[08:46:17] <Blankspace> @lambda _: _.__name__
[08:46:17] <Blankspace> class __hello__: ...
[08:46:25] <habnabit_> Blankspace, please don't paste here
[08:46:28] <Blankspace> Sorry but how does this work
[08:46:41] <Blankspace> I got this code in some discord
[08:46:52] <Blankspace> Could you please explain :)
[08:46:55] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[08:46:57] <Jonno_FTW> Blankspace: got to the paste site in the topic: https://bpa.st/+python
[08:47:19] <Blankspace> https://bpa.st/GJAQ
[08:47:30] <Blankspace> I am not able to understand
[08:47:34] <Jonno_FTW> well for one there's a bunch of syntax errors
[08:47:50] <Blankspace> It ran on discord
[08:48:16] <Jonno_FTW> anyway it looks like they're using some decorators that aren't defined anywhere
[08:48:51] *** Joins: venmx (~bertie@82-132-235-187.dab.02.net)
[08:48:52] <Jonno_FTW> discord doesn
[08:48:53] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 265 seconds)
[08:48:53] <habnabit_> Blankspace, it's a bunch of cruft to do `import __hello__` but in a more confusing way
[08:48:56] <Jonno_FTW> discord doesn't run code
[08:49:32] *** Joins: gggp (~textual@36.112.134.194)
[08:50:11] <Blankspace> Decorators can be applied to class as well?
[08:50:15] <habnabit_> Blankspace, sure
[08:50:17] <Jonno_FTW> they can be
[08:50:24] *** Joins: djapo (~archangel@user/djapo)
[08:50:41] <Jonno_FTW> also ... is valid syntax, equivalent of pass
[08:50:46] *** Joins: N4G4R41 (~CircuitLo@user/n4g4r41)
[08:51:12] <enrh> I'm kind of interested that lambda _: _.attr worked for me, didn't think you could actually use _ downstream from assignment
[08:51:16] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Quit: MrFantastik)
[08:51:25] <habnabit_> enrh, _ isn't special
[08:51:36] <Jonno_FTW> it's only special in repl
[08:51:38] <habnabit_> enrh, it's a confusing name
[08:51:44] <habnabit_> Jonno_FTW, only sort of
[08:51:55] <Jonno_FTW> depends on your repl
[08:52:31] <enrh> I use it some times with iterating {}.items() when I'm only after the value; for _, value in blah.items(). So this _ is not a special thing?
[08:52:37] <habnabit_> enrh, it is not
[08:52:48] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[08:52:56] <enrh> Interesting
[08:52:56] *** Quits: venmx (~bertie@82-132-235-187.dab.02.net) (Read error: Connection reset by peer)
[08:53:02] <enrh> Thanks habnabit_
[08:53:11] <Blankspace> So is lambda and import decorators here
[08:53:26] *** Quits: N4G4R41 (~CircuitLo@user/n4g4r41) (Client Quit)
[08:53:43] <Jonno_FTW> it's just another variable name, although conventionally it is used when you want to ignore the field
[08:53:47] <habnabit_> Blankspace, a line starting with @ is a decorator
[08:54:26] <enrh> I suppose pylint, flake8, MyPy just choose to ignore it though?
[08:54:27] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[08:54:49] *** Joins: gline_ (~yashi@p5b2412d2.dip0.t-ipconnect.de)
[08:55:01] *** Joins: northernsage (~northerns@187.107.158.146)
[08:56:00] <enrh> For example I never receive a warning about _ being assigned and never used
[08:56:11] <habnabit_> enrh, yes, some tools treat it specially
[08:56:17] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[08:56:41] <enrh> Today I learned
[08:57:21] *** Quits: glumanda (~manu@194-208-201-025.tele.net) (Quit: WeeChat 3.2)
[08:57:48] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[08:58:29] *** Quits: gline (~yashi@p5b241f96.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[09:00:06] *** Quits: Blankspace (~abcd@user/blankspace) (Quit: why did you ban me)
[09:00:57] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[09:01:34] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 268 seconds)
[09:03:59] <Jonno_FTW> enrh: back to your previous interest, the go to is dask for distributed computing of cpu bound tasks
[09:04:23] <no_gravity> I forgot again: Is there something like "x=a['y'] ?? z" in Python?
[09:05:20] *** Joins: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[09:05:41] *** Quits: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Remote host closed the connection)
[09:05:44] <enrh> Jonno_FTW, that was not on my radar. Looks interesting. Thanks for the sharing
[09:06:44] <KirkMcDonald> no_gravity: What does this do?
[09:07:04] <KirkMcDonald> no_gravity: The value in the dict if that key is present, and z otherwise?
[09:07:07] <no_gravity> KirkMcDonald: Assign a value to x. If a['y'] exists use that, otherwise use z.
[09:07:13] <no_gravity> KirkMcDonald: Exactly.
[09:07:16] <KirkMcDonald> no_gravity: a.get('y', z)
[09:07:25] <no_gravity> KirkMcDonald: Nice, thanks.
[09:08:29] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[09:08:49] *** Joins: northernsage (~northerns@187.107.158.146)
[09:10:38] <no_gravity> Does something like this exist for modules as well?
[09:11:07] <KirkMcDonald> no_gravity: As in, for accessing attributes off of modules?
[09:11:33] <KirkMcDonald> There's getattr(), I suppose, but it's rather unusual to not know if a given thing exists in a module or not.
[09:11:48] <no_gravity> Hmm.. that is ugly.
[09:12:06] <KirkMcDonald> In what circumstance is this an unknown?
[09:12:07] <no_gravity> Because I set the _settings module to {} and only load it if it exists.
[09:12:17] *** Joins: rajkosto (~rajkosto@cable-178-149-127-189.dynamic.sbb.rs)
[09:12:20] <habnabit_> so check if it's {}
[09:12:21] <no_gravity> Then I check if it contains certain variables to overwrite the global variables.
[09:12:36] <no_gravity> If {} and modules behave so differently then ... :/
[09:12:41] <habnabit_> it's very weird to have variables conditionally defined
[09:12:52] <habnabit_> set them to some default and check for the default
[09:13:47] <no_gravity> Is there a way to define an empty module inline?
[09:13:47] <KirkMcDonald> You could always pull out the module's __dict__, I suppose.
[09:13:48] <habnabit_> dicts have a get method because they're intended for collections where you don't know the keys in advance
[09:14:07] <habnabit_> no_gravity, you can't define any module inline. what would you do that for?
[09:14:50] <no_gravity> habnabit_: _settings=<emptymodule> ... if exists(settingsmodule) _settings=importlib.import_module(settingsmodule)
[09:15:04] <habnabit_> no_gravity, set it to None and check for None
[09:15:22] <no_gravity> habnabit_: That would make the code more complex.
[09:15:33] <KirkMcDonald> It sounds like it's too late for that.
[09:15:40] *** Quits: gggp (~textual@36.112.134.194) (Ping timeout: 252 seconds)
[09:15:45] <habnabit_> no_gravity, yes, you have inflicted the complexity on yourself
[09:15:45] *** Quits: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Ping timeout: 268 seconds)
[09:16:00] <KirkMcDonald> In extremity, attempt the import and catch the ImportError. But this generally sounds like you're barreling down the path to some nonsense.
[09:16:18] *** Joins: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[09:16:22] <no_gravity> KirkMcDonald: The conditional import is not the problem.
[09:16:36] *** Joins: jhulten (jhulten@gateway/vpn/protonvpn/jhulten)
[09:16:39] <no_gravity> if importlib.find_loader("_local.settings"): _settings = importlib.import_module('_local.settings')
[09:16:43] <no_gravity> Works fine
[09:17:22] <habnabit_> (python modules are an exceptionally poor configuration format anyway)
[09:17:23] <no_gravity> The tricky thing is to have an empty default.
[09:17:26] *** Joins: jhulten_ (jhulten@gateway/vpn/protonvpn/jhulten)
[09:17:39] <habnabit_> for this reason among others
[09:18:00] <no_gravity> One solution could be: else: importlib.import_module('empty_settings')
[09:18:11] <ssbr_> at the very least one should use exec /dicts rather than import/modules
[09:18:29] <ssbr_> (then the empty config is just the empty dict)
[09:18:38] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[09:18:43] *** Joins: gggp (~textual@106.37.74.209)
[09:18:46] <no_gravity> This could be even nicer: else: importlib.import_module('settings_default')
[09:19:05] <KirkMcDonald> And you can override a default by just updating the relevant dict with the new settings.
[09:19:12] <no_gravity> Then the default setting file could go there and a developer who wants to overwrite it can copy it to _local/
[09:19:49] <no_gravity> ssbr_, KirkMcDonald: Can dicts hold functions? Execute code upon being loaded?
[09:20:06] <ssbr_> no_gravity: yes, and you're using exec so of course code is executed
[09:20:35] <ssbr_> no_gravity: using exec, instead of importlib, is the same thing except without interacting with the import system. Probably a good thing, for configs, because the import system hurts way more than it helps.
[09:20:36] <KirkMcDonald> no_gravity: A module is substantially just a bare object with an attribute dict.
[09:20:43] <no_gravity> I see
[09:21:01] <habnabit_> i'd still use toml instead
[09:21:05] <ssbr_> I still am not a fan of using Python code for configuration, but there's a better way and a poorer way to do it.
[09:21:08] *** Quits: jhulten (jhulten@gateway/vpn/protonvpn/jhulten) (Ping timeout: 272 seconds)
[09:21:24] <KirkMcDonald> Or jsonnet or *whatever*.
[09:21:25] <ssbr_> habnabit_: y u no jsonnet
[09:21:31] <ssbr_> KirkMcDonald: damn, you beat me to it
[09:21:56] <habnabit_> ssbr_, i don't like it because i don't know how to pronounce it
[09:21:57] <no_gravity> In most languages, exec() is super bad for performance as the compiler can make less assumptions about the effects.
[09:21:58] <ssbr_> (actually I legitimately dislike all config languages -- none check every box I would want.)
[09:22:05] <KirkMcDonald> habnabit_: J-sonnet
[09:22:10] <ssbr_> habnabit_: wouldn't it be jay sonnet
[09:22:19] <ssbr_> wait have I been pronouncing json wrong all my life
[09:22:28] * ssbr_ has an existential crisis
[09:22:52] <ssbr_> no_gravity: import is literally just exec with some extra steps. Python is not most languages :)
[09:23:02] *** Quits: m1n10n (georgecloo@cpe-76-184-204-251.tx.res.rr.com) ()
[09:23:24] <ssbr_> no_gravity: if you want efficiency, I would recommend not using Python code at all for configs! ;)
[09:24:10] <no_gravity> exec('_local/settings.py') => NameError: name '_local' is not defined
[09:24:28] <ssbr_> no_gravity: exec takes python code as a string literal
[09:24:39] <KirkMcDonald> (I mean, not necessarily a *literal*...)
[09:24:46] <ssbr_> sorry, as a string, oofie
[09:25:11] <no_gravity> Ok, so this: exec(fily.read('_local/settings.py'))
[09:25:13] <ssbr_> (so this is the python code that gets the py attribute of the settings global, and divides the _local global by that -- not what you meant!)
[09:25:25] <no_gravity> That indeed works.
[09:25:38] <ssbr_> well I don't know what that function is but I'll just smile and nod
[09:25:39] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[09:25:45] <ssbr_> habnabit_: wait, then how do you pronounce toml
[09:25:47] <no_gravity> ssbr_: It reads a file.
[09:26:02] <habnabit_> ssbr_, 'tee ohh mel'
[09:26:10] <ssbr_> habnabit_: wtf
[09:26:22] <KirkMcDonald> Man I'd just go with "toe-mell".
[09:26:25] <ssbr_> I thought surely it'd be Tom El, like some kind of Kryptonian demigod
[09:26:47] *** Joins: easior__ (~easior@61.155.142.67)
[09:26:47] *** Joins: glumanda (~manu@194-208-201-025.tele.net)
[09:27:04] <habnabit_> ssbr_, sorry i'm just cackling to myself because no that was the worst i thought of offhand
[09:27:15] <ssbr_> habnabit_: ihu
[09:27:19] *** Joins: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[09:27:28] <habnabit_> ssbr_, it seemed like a silly question; i couldn't resist
[09:27:32] <ssbr_> anyway, RON is a strictly superior data interchange format, I actually really find toml gross
[09:27:47] <habnabit_> ssbr_, isn't there an open source ncl by now
[09:28:01] <ssbr_> habnabit_: jsonnet is the closest I've found
[09:28:05] <KirkMcDonald> habnabit_: That's substantially where jsonnet came from.
[09:28:06] *** Quits: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Read error: No route to host)
[09:28:10] <ssbr_> assuming you mean gcl, which is superior.
[09:28:23] <habnabit_> i couldn't remember which of gcl/ncl was the old one
[09:28:27] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[09:28:30] <ssbr_> habnabit_: "yes"
[09:28:34] <habnabit_> yeah, see
[09:28:37] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[09:28:38] *** Quits: glumanda (~manu@194-208-201-025.tele.net) (Client Quit)
[09:28:43] <KirkMcDonald> Something something tuples.
[09:28:59] *** Quits: YoungPotato (~user@155.98.131.2) (Remote host closed the connection)
[09:29:58] *** Quits: easior_ (~easior@61.155.142.70) (Ping timeout: 252 seconds)
[09:30:54] *** Quits: ______GOD______ (~GOD@user/god/x-9778998) (Quit: Turning off a portion of this simulation.)
[09:31:52] *** Joins: easior (~easior@61.155.142.73)
[09:32:05] *** Joins: stranac (~stranac@195.29.239.126)
[09:33:04] *** Quits: redgloboli (~redglobol@user/redgloboli) (Quit: ended)
[09:33:21] *** Quits: easior__ (~easior@61.155.142.67) (Ping timeout: 265 seconds)
[09:33:44] *** Joins: redgloboli (~redglobol@user/redgloboli)
[09:35:48] *** Joins: boB_K7IQ (~boB_K7IQ@c-73-254-117-91.hsd1.wa.comcast.net)
[09:36:58] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 272 seconds)
[09:37:06] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:37:51] *** Joins: mattf (~matheus@179-189-87-110.goldnettelecom.com.br)
[09:38:00] <mattf> from fastcgiwrap + nginx
[09:38:05] <mattf> how  can i get the user agent?
[09:38:16] <habnabit_> mattf, same as any other http header
[09:38:26] <mattf> oh
[09:38:34] *** Quits: ctrypoph (~ctrypoph@99-51-11-77.lightspeed.brhmmi.sbcglobal.net) (Quit: -a- Connection Timed Out)
[09:38:55] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[09:39:11] <no_gravity> Inside a function of a module, how do I set a module-wide variable?
[09:39:28] *** Joins: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[09:39:36] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:40:40] *** Quits: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Remote host closed the connection)
[09:41:24] *** Quits: semanticz0 (~semanticz@202.164.136.255) (Ping timeout: 272 seconds)
[09:41:35] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Remote host closed the connection)
[09:41:58] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[09:42:32] <no_gravity> I tried this: __dict__[var_name] = 123
[09:42:35] *** Joins: ctrypoph (~ctrypoph@99-51-11-77.lightspeed.brhmmi.sbcglobal.net)
[09:42:41] <no_gravity> But that tells me __dict__ is not defined.
[09:42:49] <BrenBarn> use `global var` then `var = "whatever"`
[09:42:56] *** Joins: venmx (~bertie@82-132-235-187.dab.02.net)
[09:43:06] <no_gravity> BrenBarn: I have the name of the variable in a variable.
[09:43:20] *** Joins: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[09:43:38] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Max SendQ exceeded)
[09:43:55] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[09:44:07] *** Quits: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Read error: No route to host)
[09:44:07] <BrenBarn> You can do `globals()[varname] = value` but if you're storing variable names in variables you should probably rethink what you're doing
[09:44:33] *** Quits: redgloboli (~redglobol@user/redgloboli) (Quit: ended)
[09:44:37] <habnabit_> that's certainly a case crying out for a dict
[09:44:42] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[09:44:46] <no_gravity> BrenBarn: That works, thanks.
[09:45:15] *** Joins: redgloboli (~redglobol@user/redgloboli)
[09:46:06] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[09:46:21] *** Joins: alguien (~alguien@user/alguien)
[09:46:35] *** Quits: LemurP (~lemurp@cm-84.214.104.84.getinternet.no) (Ping timeout: 268 seconds)
[09:46:48] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[09:46:50] *** Quits: venmx (~bertie@82-132-235-187.dab.02.net) (Read error: Connection reset by peer)
[09:46:59] *** Quits: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Read error: Connection reset by peer)
[09:47:18] *** Joins: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[09:48:43] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[09:49:03] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Remote host closed the connection)
[09:49:04] *** Joins: northernsage (~northerns@187.107.158.146)
[09:49:27] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[09:50:03] <mattf> habnabit_: and how do i get any other http header from fastcgi?
[09:50:23] <habnabit_> mattf, are you really writing raw fastcgi?
[09:50:25] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[09:50:51] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[09:50:57] <habnabit_> mattf, some example code might help
[09:51:55] <mattf> i have nothing yet besides print('Content-Type: text/html\n\n')
[09:52:06] <mattf> oh i think i found it
[09:52:10] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 272 seconds)
[09:52:38] <habnabit_> mattf, that's cgi, not fastcgi
[09:52:46] <habnabit_> mattf, you _really_ don't want to use cgi
[09:52:54] <mattf> yeah
[09:53:06] *** kostkon_ is now known as kostkon
[09:53:18] <habnabit_> mattf, look at django if you want to write a thing serving html in python
[09:53:31] <mattf> why not flask
[09:53:32] <no_gravity> Ah, exec() of a file is no alternative to the _settings.py module!
[09:53:45] <habnabit_> mattf, i don't think flask is very good
[09:53:53] <mattf> wtb fastapi
[09:53:55] <no_gravity> I don't want the settings code to be executed in the current scope everywhere settings are accessed.
[09:54:09] <mattf> i find django bloated
[09:54:18] <habnabit_> mattf, what does 'bloated' mean
[09:54:24] *** Quits: Jormungandr89 (~brad@136.49.61.2) (Quit: Konversation terminated!)
[09:54:41] <mattf> bloated means : "more than 90% of it are things i wont ever touch"
[09:55:03] *** Quits: ham (~ham4@user/ham) (Ping timeout: 256 seconds)
[09:55:20] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[09:55:24] <habnabit_> mattf, sounds like python ;)
[09:55:29] <mattf> true
[09:55:46] <habnabit_> mattf, i'd be impressed if you were using even 10% of the python language, let alone 10% of the standard library
[09:56:09] <mattf> you could say the same even for C
[09:56:12] <mattf> maybe even for assembly
[09:56:32] <habnabit_> mattf, yes, which is why it makes no sense that you're drawing a distinction for django
[09:56:41] <mattf> there is a distinction
[09:56:45] <habnabit_> mattf, go on
[09:56:47] <mattf> i already choose python
[09:57:04] *** Quits: gggp (~textual@106.37.74.209) (Ping timeout: 268 seconds)
[09:57:11] *** Quits: jhulten_ (jhulten@gateway/vpn/protonvpn/jhulten) (Remote host closed the connection)
[09:57:44] <mattf> now as for how im serving a html page i didn't make a choice yet. There is more alternatives other than django. As i see django is the most bloated one while as others are more minimalistic and straight to the point
[09:58:08] *** Joins: gggp (~textual@36.112.135.215)
[09:58:21] <jinsun> what is bad about flask? I haven't used it for much but it seemed simpler than django
[09:58:26] <habnabit_> mattf, i'm not sure what you're saying. you didn't make the decision to use python, so it being 'bloated' is ok?
[09:58:27] <mattf> it is
[09:58:32] <mattf> flask is simpler than django
[09:58:48] <mattf> yeah python is the programming language
[09:59:05] <mattf> i bought the hammer, i bought the best hammer, now will i use diamond nails or regular iron nails?
[09:59:23] <habnabit_> jinsun, flask's testing story is abysmal and it scales very poorly outside the case of having a single source file for all your web code
[10:00:06] <mattf> but many projects are single file projects
[10:00:10] <habnabit_> jinsun, they have some half-solutions for multiple source files but none of them are very well documented
[10:00:16] <no_gravity> This returns None: importlib.find_loader("_local.settings"). But this works: importlib.import_module('_local.settings'). What am I missing?
[10:00:42] <jinsun> habnabit_: ah ok that makes sense, the one time I used it I didn't try to scale it, it was really one file for the entire code and no tests
[10:00:49] *** Joins: nre (~nre@55d47ac6.access.ecotel.net)
[10:01:19] <habnabit_> mattf, i'm not disputing that, but people love to claim that flask is usable outside these trivial cases
[10:02:27] <mattf> I understand. I am tired of seeing people throwing django like if it was the optimal solution for everything though
[10:02:27] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[10:02:55] *** Joins: northernsage (~northerns@187.107.158.146)
[10:02:57] <mattf> I believe even pure cgi has it use cases
[10:03:05] <habnabit_> mattf, 'pure cgi' does not have use cases
[10:03:11] <mattf> of course it does
[10:03:17] <habnabit_> mattf, maybe in 1995
[10:04:02] <mattf> Not every use case is a full blown api or website
[10:04:06] *** Quits: Fiji (~Fiji@user/fiji) (Quit: Leaving)
[10:04:07] <northernsage> out of curiosity, why would flask scale poorly?
[10:04:39] <habnabit_> northernsage, the 'app as a module global' pattern they encourage inevitably leads to circular imports
[10:05:13] *** Joins: pnoud (~pnoud@user/pnoud)
[10:06:17] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[10:06:46] <mattf> well i think flask actually doesn't always scale poorly. If all you have is an api with a few endpoints and all the flask code is like on a single file, and the actual things are done with external classes, and you don't have to deal with databases ORM's or any sort of models, it isn't even flask's  code responsibility to need scale then.
[10:06:50] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[10:06:54] *** Quits: Vision (~Vision@024-178-231-009.res.spectrum.com) (Read error: Connection reset by peer)
[10:06:58] <mattf> For example things like the Dog api or opentriviaDB
[10:07:09] <habnabit_> mattf, sounds like something fastapi would be better suited for
[10:07:25] <mattf> thats true
[10:07:42] <mattf> honestly i see flask and fastapi with very similar usecases
[10:07:46] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 250 seconds)
[10:08:06] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[10:08:08] <mdemo> there's a simple way to print everything python knows about a variable, I think, but I can't remember what it's called
[10:08:10] <mattf> is just that fastapi simplifies too much sometimes
[10:08:19] <habnabit_> mattf, yes, except fastapi provides you with substantially more even having written less code
[10:08:27] <mattf> mdemo: __dir__() ?
[10:08:29] *** Joins: anandprabhu (~anand@94.202.243.198)
[10:08:37] <mattf> yeah i dont dislike that
[10:08:38] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Ping timeout: 265 seconds)
[10:08:55] <mdemo> maybe, I thought there was something that would give you the type and a string representation
[10:09:30] <habnabit_> mattf, especially with fastapi, i don't see a niche for flask. small website with no html? fastapi. large website with lots of html? django. anything else? pyramid
[10:09:34] <northernsage> habnabit: I mean, it's simple to avoid circular imports by using the "app factory" pattern and blueprients to group functionality. I had a good experience with flask tbh, but I see what you mean
[10:10:09] <habnabit_> northernsage, do you know how many times i've had to tell someone about the 'app factory pattern' because it's not documented? ;)
[10:10:32] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[10:10:37] <habnabit_> northernsage, it's something better libraries like pyramid obviate
[10:10:44] *** Quits: ericlee (~ericlee@2601:647:4681:3420::1) (Remote host closed the connection)
[10:10:48] <northernsage> https://flask.palletsprojects.com/en/2.0.x/patterns/appfactories/
[10:11:20] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[10:11:27] <mdemo> repr() I think I'm thinking of repr()
[10:11:44] <habnabit_> northernsage, yeah, putting that in a section called 'patterns' with a name like that is pretty much a guarantee nobody will find it unless they were told about it
[10:11:58] <mattf> yeah indeed fastapi is takin flask's place.
[10:12:01] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[10:12:33] <mattf> but im the guy using cgi right now, why use django if you can redo it better ;)
[10:12:51] *** Joins: jhulten (jhulten@gateway/vpn/protonvpn/jhulten)
[10:13:51] <no_gravity> Is this the fastest way to creat an empty object in python? o = type('', (), {})
[10:14:18] *** Quits: gggp (~textual@36.112.135.215) (Remote host closed the connection)
[10:14:20] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[10:14:40] *** Joins: gggp (~textual@60.10.194.47)
[10:14:47] <no_gravity> In JS, the equivalent would be: o = {}
[10:15:13] <habnabit_> no_gravity, nobody creates 'empty objects' in python
[10:15:17] <northernsage> habnabit: I guess it wouldn't hurt to have the "quickstart examples" all use such pattern to introduce people to it from the start
[10:15:18] <habnabit_> no_gravity, what is your goal there?
[10:15:37] <no_gravity> habnabit_: How about answering my question first before asking me a question?
[10:15:52] <no_gravity> habnabit_: Just for ... fairness and friendlyness, you know.
[10:16:00] <habnabit_> no_gravity, i don't know what an 'empty object' means to you, so, mu
[10:16:16] <habnabit_> no_gravity, there is no equivalent of the js `let o = {}`
[10:16:29] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-147.dsl.bell.ca)
[10:16:35] <no_gravity> This seems close enough to me: o = type('', (), {})
[10:16:54] <habnabit_> no_gravity, that makes a class. you want a class?
[10:17:10] <habnabit_> no_gravity, `class o: pass` is shorter
[10:17:11] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[10:17:17] *** Quits: jhulten (jhulten@gateway/vpn/protonvpn/jhulten) (Ping timeout: 258 seconds)
[10:17:22] <no_gravity> habnabit_: Well, I want something where I can access the properties like this: o.name
[10:17:34] <habnabit_> no_gravity, ok, now we're getting somewhere
[10:18:33] *** Joins: derelict (~derelict@user/derelict)
[10:18:34] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[10:18:39] <no_gravity> habnabit_: https://www.online-python.com/Qy0gchmKpk
[10:18:42] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[10:18:45] *** Joins: northernsage (~northerns@187.107.158.146)
[10:18:51] <no_gravity> habnabit_: Not sure how your "class: o pass" version would look like.
[10:19:26] <habnabit_> no_gravity, https://www.online-python.com/jfoXilLK2e
[10:19:32] <ssbr_> no_gravity: `class o: pass` is exactly equivalent to `o = type('o', (), {})`
[10:19:57] <no_gravity> habnabit_: Funky
[10:20:08] <habnabit_> no_gravity, your code does the same but spells it weirdly
[10:20:09] <ssbr_> the three-arg form of type is only useful if you're passing in a dynamically generated dictionary
[10:20:26] <ssbr_> (even then, you don't need it per se)
[10:20:51] <no_gravity> In fact, I *am* passing in a dictionary in my use case.
[10:21:03] <habnabit_> si;gh
[10:21:12] *** Quits: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-147.dsl.bell.ca) (Ping timeout: 265 seconds)
[10:21:26] <no_gravity> This is how my use case looks like:
[10:21:30] <no_gravity> try: _settings = importlib.import_module('x_local.settings')
[10:21:30] <no_gravity> except ImportError: _settings = type('', (), {'tmp_file_path': '/tmp/'})
[10:22:15] <no_gravity> So if there is no local settings file, a default object with default settings will be used.
[10:22:20] <ssbr_> no_gravity: this is not a great use of classes. it only works for some values -- for others you'll accidentally trigger e.g. the descriptor protocol
[10:22:23] *** Joins: xsperry (~as@user/xsperry)
[10:22:40] *** Joins: lavadonut (~lavadonut@user/lavadonut)
[10:23:23] <no_gravity> ssbr_: We'll see.
[10:23:25] <ssbr_> no_gravity: if the set of attributes (like tmp_file_path) is fixed, I'd use http://attrs.org to define a type, or just define one by hand, with that set of attributes. if it's dynamic, types.SimpleNamespace.
[10:23:49] <ssbr_> no_gravity: I don't really think "we'll see" is a good approach. Using a class like this is complex and error-prone and seems to offer zero benefits compared to the alternatives.
[10:23:58] <no_gravity> ssbr_: The set of attributes in the settings is not fixed.
[10:24:04] <ssbr_> no_gravity: then use types.SimpleNamespace
[10:24:20] <no_gravity> ssbr_: How do you mean?
[10:24:59] <ssbr_> no_gravity: >>> my_dynamic_dict = {'a': 'b'}; import types; types.SimpleNamespace(**my_dynamic_dict).a
[10:24:59] <ssbr_> 'b'
[10:25:26] *** Quits: nre (~nre@55d47ac6.access.ecotel.net) (Ping timeout: 268 seconds)
[10:25:40] <ssbr_> no_gravity: using classes where you want SimpleNamespace is disastrous, because special values can override the way lookup works for a class, but not for a SimpleNamespace
[10:25:41] <no_gravity> ssbr_: I don't see what you mean. Can you alter this? https://www.online-python.com/jfoXilLK2e
[10:25:46] *** Joins: ham (~ham4@user/ham)
[10:26:01] *** Joins: nre (~nre@55d47ae6.access.ecotel.net)
[10:26:23] <ssbr_> no_gravity: I don't understand what's hard to understand about my example!
[10:26:26] <ssbr_> no_gravity: https://www.online-python.com/CDNrhKa2fF
[10:26:54] <no_gravity> ssbr_: And how do I pass in my defaults?
[10:27:02] <ssbr_> no_gravity: what defaults?
[10:27:23] <no_gravity> ssbr_: https://www.online-python.com/SvwXfexdqc#
[10:27:31] <ssbr_> no_gravity: if you want name to have a different value, assign it that different value first. Or pass it in the constructor, like `types.SimpleNamespace(name='Mama')`
[10:27:41] <no_gravity> ssbr_: One moment, wrong link
[10:28:05] <no_gravity> ssbr_: I see
[10:28:07] <ssbr_> no_gravity: https://www.online-python.com/NynjsArPuH
[10:28:13] <no_gravity> What is the benefit over type()?
[10:28:20] *** Joins: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[10:28:38] <ssbr_> no_gravity: I mentioned above: using classes where you want SimpleNamespace is disastrous, because special values can override the way lookup works for a class, but not for a SimpleNamespace.
[10:28:57] *** Joins: easior_ (~easior@61.155.142.70)
[10:28:58] <no_gravity> ssbr_: Can you give an example?
[10:29:19] <ssbr_> no_gravity: property(lambda self: 3)
[10:29:35] <ssbr_> no_gravity: on a class, this invokes Dark Magic. on a SimpleNamespace, it gets returned as is.
[10:29:39] <no_gravity> ssbr_: I don't see what you mean. Can you alter tho online-python example?
[10:29:41] *** Quits: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Read error: No route to host)
[10:30:31] <ssbr_> no_gravity: ah, not property, that won't work
[10:30:36] <ssbr_> sure, but it'll take a second
[10:30:42] *** Joins: pnoud (~pnoud@user/pnoud)
[10:30:52] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 265 seconds)
[10:30:54] <habnabit_> even just a lambda without a property will be bound with a descriptor
[10:31:04] *** Joins: cliluw (~cliluw@47.147.80.149)
[10:31:05] *** Joins: N4G4R41 (~CircuitLo@user/n4g4r41)
[10:31:17] *** Quits: gggp (~textual@60.10.194.47) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:31:30] *** Joins: especial (~especial@cm-84.214.207.74.getinternet.no)
[10:31:35] <ssbr_> habnabit_: accessing on the class, not the instance, so I need a data descriptor, and I can't think of any in the stdlib
[10:31:39] <ssbr_> no_gravity: https://www.online-python.com/DVGbqTzj4r
[10:31:56] *** Quits: easior (~easior@61.155.142.73) (Ping timeout: 252 seconds)
[10:32:06] <habnabit_> oh right. i miss unbound methods still
[10:32:19] <ssbr_> no_gravity: I realize that this seems contrived, but that's exactly what's so dangerous about it -- if, one day, something like this happens, the only person that can debug it is a Python expert who understands the object model inside and out.
[10:32:24] *** Joins: pwnd_sfw3 (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[10:32:45] <ssbr_> no_gravity: it's best to avoid using features you don't need that will produce 12h debug sessions if they ever get used by accident
[10:33:09] <no_gravity> ssbr_: The type() solution seems better to me. If I go great lengths to write getter and setter functions, I certainly want them to be used?
[10:33:25] <ssbr_> no_gravity: I thought you were loading a config file?
[10:33:36] <ssbr_> no_gravity: do you really want random configured values to be able to override how lookup works on your config object?
[10:33:45] <ssbr_> no_gravity: why wouldn't they just by the value itself?
[10:33:46] *** Quits: acid (~acid@user/acid) (Ping timeout: 250 seconds)
[10:34:04] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Ping timeout: 268 seconds)
[10:34:05] *** pwnd_sfw3 is now known as pwnd_sfw
[10:34:16] <ssbr_> this is pathological behavior that literally ~0% of people actually want for random module-like sources of data
[10:34:22] <ssbr_> it's used to implement things like caching properties
[10:34:26] *** Joins: acid (~acid@user/acid)
[10:34:30] <no_gravity> ssbr_: If the config file is loaded, the type() does not kick in. settings = type(...) is what I do if there is no config file.
[10:34:56] <ssbr_> no_gravity: what do you do if the config file is loaded?
[10:35:07] <no_gravity> ssbr_: This is my whole solution:
[10:35:11] <no_gravity> try: _settings = importlib.import_module('_local.settings')
[10:35:12] <no_gravity> except ImportError: _settings = type('', (), {'tmp_file_path': '/tmp/'})
[10:35:24] <ssbr_> no_gravity: look, unless you specifically want this behavior, use types.SimpleNamespace. if you do want it, then of course use type, but you didn't even seem to know this behavior existed until a moment ago, so I can't help but suspect it wasn't why you picked type
[10:35:25] <habnabit_> no_gravity, what about type is 'simpler' to you other than 'it has fewer characters than SimpleNamespace'
[10:35:28] *** Joins: kosh (~kosh@user/kosh)
[10:35:35] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[10:35:40] <habnabit_> no_gravity, _settings = SimpleNamespace(tmp_file_path='/tmp/')
[10:36:04] <habnabit_> no_gravity, that is infinitely more readable
[10:36:26] *** Joins: easior__ (~easior@61.155.142.67)
[10:36:27] <no_gravity> habnabit_: Another benefit of type() is that it is built in. I prefer the lowest level tools unless higher level tools offer a benefit.
[10:36:27] <ssbr_> no_gravity: definitely don't use type then, it would give wildly different semantics for successful vs unsucessful loads
[10:36:41] <habnabit_> no_gravity, ...? SimpleNamespace is built in
[10:36:44] <ssbr_> no_gravity: hell, don't use modules either -- they're STILL different to SimpleNamespace
[10:36:44] <no_gravity> ssbr_: Works nicely so far.
[10:36:48] <no_gravity> habnabit_: It needs an import.
[10:36:58] <ssbr_> no_gravity: It only works the same until you hit a pathological case, then it works differently.
[10:36:59] <habnabit_> no_gravity, an import of a module that is already imported
[10:37:02] *** Joins: venmx (~bertie@82-132-235-187.dab.02.net)
[10:37:08] <habnabit_> no_gravity, there is no reason to be afraid of imports in python
[10:37:20] <ssbr_> no_gravity: extremely subtle differences in behavior that occur only as a result of seemingly unrelated changes can produce very long and painful debug sessions.
[10:37:24] <no_gravity> ssbr_: I am curiously looking forward to that pathological case.
[10:37:26] <ssbr_> no_gravity: I do not recommend using type)( for this.
[10:37:32] <ssbr_> no_gravity: I do not recommend using modules for this.
[10:37:47] <ssbr_> no_gravity: use a SimpleNamespace in both cases so that you have uniform semantics which is independent of configured values.
[10:38:03] <ssbr_> there is literally no good reason to do otherwise.
[10:38:08] *** Joins: chele (~chele@user/chele)
[10:38:12] <no_gravity> ssbr_: I don't see what you mean. You tried to write an example, but it came out in favor of type().
[10:38:25] *** Joins: pneff (~pneff@81.6.40.205)
[10:38:27] *** Joins: djapo (~archangel@user/djapo)
[10:38:36] <ssbr_> no_gravity: then use type() for both cases. Why are you only using it for one, giving diverging behavior for the other?
[10:38:48] <ssbr_> no_gravity: decide what semantics you want, and pick it.
[10:38:51] <no_gravity> ssbr_: How would you do it differently?
[10:38:58] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 250 seconds)
[10:39:03] *** Quits: pneff (~pneff@81.6.40.205) (Client Quit)
[10:39:07] <habnabit_> no_gravity, you realize that imports are cached? 'types' is a builtin module anyway; importing it has no cost whatsoever
[10:39:25] *** Joins: easior (~easior@61.155.142.73)
[10:39:31] <habnabit_> no_gravity, optimizing for fewest number of imports is a fool's errand in python
[10:39:33] <no_gravity> habnabit_: It brings in cognitive load to add another import.
[10:39:37] <ssbr_> no_gravity: I would use exec() (to avoid the module import machinery, caching, etc.), and pack the dict into a SimpleNamespace. Or, I would use importlib, and pack it also into a SimpleNamespace in both branches. Or, I would use importlib, and pack it into a class in both branches. Or, finally, I would use importlib, and pack it into a module in both branches.
[10:39:48] <mdemo> I really do forget re.match vs re.search every time
[10:40:00] <ssbr_> no_gravity: remember that the behavior of modules, classes, and SimpleNamespace are all different: it's valuable to have consistency for the behavior of the default vs non-default configs.
[10:40:03] <habnabit_> no_gravity, anyway, this argument is ridiculous, because you've already made your own module and imported it instead of using the builtin open to read from files
[10:40:07] *** Joins: tardisx (~tardisx@2400:8902::f03c:91ff:fe89:d107)
[10:40:18] *** Quits: easior_ (~easior@61.155.142.70) (Ping timeout: 272 seconds)
[10:40:19] <habnabit_> no_gravity, there is no logical consistency here
[10:40:21] <ssbr_> no_gravity: but just picking one at random for one branch, and another one at random for the other branch, and ignoring differences of behavior, is not... super likely to produce a happy time.
[10:40:30] <no_gravity> ssbr_: exec would execute the settings code in the context of the file that wants to read the settings. That would be a terrible thing and lead to a lot of issues.
[10:40:36] <habnabit_> mdemo, re.match is useless; forget it exists
[10:40:44] <ssbr_> no_gravity: exec does not implicitly inherit the caller's context no.
[10:40:53] <no_gravity> ssbr_: I tried it and it did.
[10:40:54] <habnabit_> mdemo, re.search or re.fullmatch
[10:40:57] <ssbr_> no_gravity: er, wait, crap, it does
[10:40:58] *** Quits: venmx (~bertie@82-132-235-187.dab.02.net) (Read error: Connection reset by peer)
[10:41:03] <ssbr_> no_gravity: pass in a dict and it won't :)
[10:41:12] <no_gravity> ssbr_: What do you mean?
[10:41:21] * no_gravity needs another coffee
[10:41:36] <ssbr_> no_gravity: exec(x, my_dict_of_globals); e.g. exec(x, {})
[10:41:45] *** Joins: anas (~anas@41.228.144.142)
[10:41:59] *** Quits: easior__ (~easior@61.155.142.67) (Ping timeout: 265 seconds)
[10:42:36] <ssbr_> no_gravity: remember that module imports are just exec + extra steps-- specifically, a module import is "look up the module in cache if available, otherwise load from disk, exec with some predefined globals, store in a module object that implements dynamic attribute access if the module defines a special constant"
[10:42:39] *** Quits: Abrax (~Abrax@user/abrax) (Quit: Leaving)
[10:42:58] *** Joins: pneff (~pneff@2a02:168:fedc:0:4961:9552:50a:6c11)
[10:43:05] <ssbr_> no_gravity: so of course anything module imports do, you can do by hand -- and should do to match both branches, if that is what you want.
[10:43:19] <ssbr_> if it is not what you want, don't do it, of course.
[10:43:50] <ssbr_> mdemo: I remember it the same way as habnabit_, FWIW ;)
[10:44:11] <no_gravity> So it would be this? exec(fily.read('_local/settings.py',_settings)
[10:44:28] <ssbr_> no_gravity: you mentioned cognitive load before -- the behaviors you are invoking involve incredibly deep magic and don't seem related to what you want. *that* is cognitive load. An import is child's play.
[10:44:29] <no_gravity> Probably I would have to set _settings to {} first?
[10:44:33] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[10:44:42] <ssbr_> no_gravity: yes. Or the default settings -- didn't you have those?
[10:44:51] <habnabit_> (never mind that they've imported their own fily module..)
[10:45:22] *** Quits: nre (~nre@55d47ae6.access.ecotel.net) (Ping timeout: 265 seconds)
[10:45:32] <ssbr_> no_gravity: in particular, if on failure to load the file, you default to the empty string, then there's no other special case for default configs
[10:45:48] <no_gravity> So that *might* be an option.
[10:46:25] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[10:46:33] *** Joins: easior_ (~easior@61.155.142.73)
[10:46:48] *** Joins: northernsage (~northerns@187.107.158.146)
[10:46:52] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:47:13] <no_gravity> habnabit_: Well, there was no good alternative. So I started a file utility lib.
[10:47:38] *** Joins: seednode (~seednode@user/seednode)
[10:47:40] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Ping timeout: 272 seconds)
[10:47:47] *** Quits: anandprabhu (~anand@94.202.243.198) (Quit: Konversation terminated!)
[10:47:49] <habnabit_> no_gravity, isn't that some pretty intense cognitive load?
[10:48:13] <no_gravity> Not from the perspective of the file that uses it. That gets more elegant.
[10:48:23] <no_gravity> So far, fily has these 3 glorious functions: https://www.online-python.com/C5BlqTKH4P
[10:48:34] <ssbr_> My experience is, personally, that helper libraries end up making things harder due to the additional abstractions -- you end up needing to know the underlying API anyway, *plus* the new wrapper on top, producing a lot less benefit than you'd expect.
[10:48:44] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[10:48:48] <habnabit_> no_gravity, looks like pathlib
[10:48:56] <habnabit_> no_gravity, which is also built in
[10:49:01] <ssbr_> and this is true even for APIs far more clunky and error-prone than file IO. (Thinking of e.g. the STL in C++)\
[10:49:12] <KirkMcDonald> Also using the import machinery to *do* things is a bad idea generally.
[10:49:12] <ssbr_> but I'm not gonna object
[10:49:14] <no_gravity> habnabit_: I looked at the alternatives for a while and nothin offered elegant functions to even read/write files.
[10:49:27] <habnabit_> no_gravity, pathlib.Path('whatever').read_text()
[10:49:29] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 268 seconds)
[10:49:32] <habnabit_> no_gravity, looks good to me
[10:49:44] <ssbr_> habnabit_: one battle at a time
[10:49:48] *** Quits: easior (~easior@61.155.142.73) (Ping timeout: 272 seconds)
[10:50:29] *** Joins: easior__ (~easior@61.155.142.70)
[10:50:30] <ssbr_> a custom file library is not very important compared to the issue I really want to push, which is ensuring that both branches of config file loading return the same type and have the same behavior (and preferably the simpler type/behavior -- SimpleNamespace, or modules, or classes, in that order) :(
[10:50:43] <habnabit_> ssbr_, well yes agreed
[10:51:14] <no_gravity> habnabit_: Yeah, kinda fine. But not as cute as fily.read('whatever')
[10:51:45] *** Joins: rememberYou (~someone@user/rememberyou)
[10:52:45] *** Joins: aniruddha (~aniruddha@103.242.197.118)
[10:53:13] <ssbr_> cute is for moe anime, this here is an Industrial Programming Channel
[10:53:34] *** Quits: easior_ (~easior@61.155.142.73) (Ping timeout: 252 seconds)
[10:53:57] *** Joins: easior_ (~easior@61.155.142.67)
[10:54:01] <no_gravity> habnabit_: But ok, your line made it into fily: https://www.online-python.com/PK1bSZ6wqL
[10:54:29] *** Parts: mattf (~matheus@179-189-87-110.goldnettelecom.com.br) ()
[10:54:53] <ssbr_> no_gravity: the write() function should also use a with statement, or else use pathlib and write_text
[10:55:03] <ssbr_> no_gravity: in this case, the cute helper library is adding issues :)
[10:55:04] *** Joins: feriman (~feriman@188.163.113.127)
[10:55:08] <no_gravity> habnabit_: If over time all my fily functions have a "Alternative: pathlib..." comment, then I will simply use pathlib instead of fily.
[10:55:30] *** Joins: venmx (~bertie@82-132-235-187.dab.02.net)
[10:55:44] <no_gravity> ssbr_: It is young! Give it a few decades. Teenagers are expected to raise issues.
[10:56:29] <ssbr_> no_gravity: I offer up infanticide as the far cheaper option
[10:56:34] <no_gravity> ssbr_: Your patch of the write function would be welcome :)
[10:56:45] *** Joins: magla (~gelignite@55d471c8.access.ecotel.net)
[10:57:24] *** Quits: easior__ (~easior@61.155.142.70) (Ping timeout: 272 seconds)
[10:58:02] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 272 seconds)
[10:58:02] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[10:58:18] <ssbr_> pfft. I'm not a programmer anymore, I only write design docs.
[10:58:35] *** Joins: northernsage (~northerns@187.107.158.146)
[10:58:44] <no_gravity> I am putting the alternative comment on top of it: # Alternative: pathlib.Path('path/test.txt').write_text('hello')
[10:59:04] *** Quits: N4G4R41 (~CircuitLo@user/n4g4r41) (Quit: Quit)
[10:59:21] <ssbr_> no_gravity: you should actually change it to that, or else use a with statement.
[10:59:24] <no_gravity> ssbr_: How about this: def write(path,text): with open(path, 'wt') as f: f.write(text)
[10:59:24] *** Joins: dvx (~dvx@185.63.97.64)
[10:59:34] <ssbr_> yes, that's fine.
[10:59:40] *** Quits: venmx (~bertie@82-132-235-187.dab.02.net) (Read error: Connection reset by peer)
[11:00:24] *** Joins: manti7 (~manti7@176.10.104.94)
[11:00:38] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[11:00:56] <ssbr_> no_gravity: if you actually wanted to write the pathlib versions of each, one shan't forget pathlib.Path(...).is_file()  -- https://docs.python.org/3/library/pathlib.html#pathlib.Path.is_file
[11:01:27] <ssbr_> no_gravity: if you store these as paths from the start, rather than as strings, the pathlib.Path() is redundant, and it just becomes my_path.is_file(), my_path.write_text(...), etc.
[11:01:38] <ssbr_> this is kind of the intended way to deal with paths, because it makes them cuter.
[11:01:40] *** Quits: acresearch (~acresearc@user/acresearch) (Quit: WeeChat 2.8)
[11:01:55] <no_gravity> ssbr_: To me, strings have an inherent cuteness that is hard to beat.
[11:01:56] *** Joins: LemurP (~lemurp@109.74.190.250)
[11:02:24] <ssbr_> this really is moe anime debate club
[11:02:48] <no_gravity> ssbr_: Is Pathlibs is_file() really equivalent to os.path.isfile()?
[11:03:10] <ssbr_> no_gravity: I really wish Python had user-defined literals so that you could write p"path/to/foo"
[11:03:14] <ssbr_> no_gravity: yes. There's a full table at https://docs.python.org/3/library/pathlib.html#correspondence-to-tools-in-the-os-module
[11:03:16] *** Joins: upsala (~zcb@185.213.155.232)
[11:04:15] <no_gravity> ssbr_: Ok, I just believe you.
[11:04:47] *** Joins: NeoCore (~neocore@37.120.204.212)
[11:04:57] <no_gravity> The state of fily now: https://www.online-python.com/FM4kNxLPeu
[11:04:59] *** Joins: noneco (~noneco@dslb-090-186-083-254.090.186.pools.vodafone-ip.de)
[11:05:11] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Ping timeout: 265 seconds)
[11:05:31] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[11:05:59] <ssbr_> no_gravity: if you want to be cuter, you could write read as "with open(path) as f: return f.read()"
[11:06:21] *** Joins: easior__ (~easior@61.155.142.73)
[11:06:29] <ssbr_> with statements have their exit method called on any control flow that exits -- whether it's normal next-statement control flow, a return, break, continue, or even an exception.
[11:06:35] *** Quits: NeoCore (~neocore@37.120.204.212) (Read error: Connection reset by peer)
[11:06:37] <no_gravity> ssbr_: I like a single return statement on the end of every function that returns something.
[11:06:45] *** Quits: pneff (~pneff@2a02:168:fedc:0:4961:9552:50a:6c11) (Ping timeout: 268 seconds)
[11:07:24] <ssbr_> no_gravity: FWIW, most style guides that recommended such a thing have walked it back. It was useful in C, is not useful in modern languages with things like with statements / RAII / defer
[11:07:30] *** Joins: pneff (~pneff@2a02:168:fedc:0:4961:9552:50a:6c11)
[11:08:00] <ssbr_> of course there is personal preference to take into account, but these days you can get code that is both simpler and less error prone if you're flexible about where the return statement goes
[11:08:05] <no_gravity> Structure is one thing I value highly in code. And having a return statement at the end of every function that returns something is a very solid structure.
[11:08:07] *** Joins: NeoCore (~neocore@37.120.204.212)
[11:08:22] *** Quits: NeoCore (~neocore@37.120.204.212) (Client Quit)
[11:08:33] <ssbr_> you'd love ML/rust
[11:08:43] <ssbr_> (imagine if it could be `return with ...`!)
[11:08:47] <no_gravity> ssbr_: return statements can go everywhere in my functions. But still I want one at the end if the function is expected to return something.
[11:08:48] *** Quits: milosz (~milosz@user/milosz) (Read error: Connection reset by peer)
[11:08:59] <jinsun> ssbr_: why is it useful in C to force return in the end?
[11:08:59] <ssbr_> no_gravity: I see.
[11:09:11] <ssbr_> jinsun: I misunderstood the prohibition no_gravity was describing
[11:09:26] *** Quits: easior_ (~easior@61.155.142.67) (Ping timeout: 272 seconds)
[11:09:31] <ssbr_> jinsun: I thought it was "no early return", not "always have a return at the end"
[11:09:51] *** Joins: easior_ (~easior@61.155.142.67)
[11:10:13] <ssbr_> (in C, early returns are bad because they sidestep cleanup code at the end of the function)
[11:10:29] <Jonno_FTW> isn't that why you use goto?
[11:10:38] <ssbr_> Jonno_FTW: precisely :)
[11:10:42] <ssbr_> but *not* early return.
[11:10:44] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 268 seconds)
[11:11:13] <jinsun> ah yes, cleanup code that you have to remember to run, C is such a pain
[11:11:49] <Jonno_FTW> the only substantial thing I wrote in C was a doubly linked list, gave it to a friend who then used it in production
[11:11:59] *** Joins: milosz (~milosz@user/milosz)
[11:12:00] <ssbr_> I haven't written C in like five years. Don't miss it. (I'm full time Rust and C++ these days, with some Python on the side. I last programmed C doing extension module stuff with Python (and PyPy), yech!)
[11:12:24] <Jonno_FTW> I write python all day every day
[11:12:49] <ssbr_> I wish :)   atm my only python programming is code reviews and the occasional change to http://refex.rtfd.io/
[11:13:04] *** Joins: Vision (~Vision@024-178-231-009.res.spectrum.com)
[11:13:32] *** Quits: easior__ (~easior@61.155.142.73) (Ping timeout: 268 seconds)
[11:13:57] *** Quits: feriman (~feriman@188.163.113.127) (Quit: WeeChat 3.2)
[11:14:10] <ssbr_> I've been doing, like I said, a lot of Rust -- gives me some really crazy ideas for changes to Refex to support lexical pattern matching better. (In particular, Rust has "token trees" which are SO handy for lexical search/replace)
[11:14:15] *** Joins: bugsniper (~bugsniper@cpe-24-24-180-229.socal.res.rr.com)
[11:14:57] *** Joins: easior (~easior@61.155.142.73)
[11:15:38] <ssbr_> on that note, is there a Python library for token-tree based pattern rewriting? cc habnabit_.  i.e. given the pattern 'foo + $a', one would expect $a to match any "token tree", which is either matched parentheses with stuff inside it, or a non-parenthesis token
[11:16:24] *** Quits: easior_ (~easior@61.155.142.67) (Ping timeout: 272 seconds)
[11:16:25] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[11:17:19] <ssbr_> (obviously this is still a very bad idea for general use, as if you pass it `foo + bar * baz` it will match $a=`bar`, not $a=`bar * baz`. But refex already supports syntactic patterns like that which respect operator precedence.)
[11:17:31] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 268 seconds)
[11:18:15] *** Joins: cliluw (~cliluw@47.147.80.149)
[11:18:28] *** Joins: easior_ (~easior@61.155.142.67)
[11:19:01] *** Joins: gry (~quassel@botters/gry)
[11:20:21] <gry> can i write two lines in one line somehow? like 'a=1' and 'b=2' on one line. what separator? i tried searching on the web, but it returns a lot of poorly relevant results about file operations
[11:20:50] *** Quits: easior (~easior@61.155.142.73) (Ping timeout: 272 seconds)
[11:20:52] *** Joins: easior__ (~easior@61.155.142.70)
[11:20:58] <jinsun> gry: a, b = 1, 2
[11:21:05] <ssbr_> gry: for simple statements like assignment, you can use a semicolon. It isn't a great idea though. `a = 1; b = 2`
[11:21:17] <ssbr_> jinsun: I do not recommend that, at least for any more than two or three variables.
[11:21:29] <ssbr_> just do `a = 1; b = 2`, makes it trivial to see which variable gets which value!
[11:22:01] <ssbr_> (the tuple form makes sense, though, for xyzw, rgba, etc. -- I wouldn't really care if I saw r, g, b, a = (1., 1., 0.5, 1.))
[11:23:22] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[11:23:42] <jinsun> ya in genenal I don't even try to keep them in one line, but sometimes for small cases the tuple form is convenient
[11:23:44] <gry> ssbr_: does semicolon apply to other things that i consider sensible too? like 'foobar(); baz();'?
[11:23:54] <gry> without the last semicolon
[11:24:02] <gry> or only for assignments
[11:24:22] <ssbr_> gry: any non-conmpound statement I believe.
[11:24:25] <ssbr_> gry: so yes
[11:24:27] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[11:24:38] *** Quits: easior_ (~easior@61.155.142.67) (Ping timeout: 268 seconds)
[11:24:41] <gry> thanks! what is a 'compound statement'?
[11:25:26] *** Joins: easior_ (~easior@61.155.142.70)
[11:26:02] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Client Quit)
[11:26:22] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.2)
[11:28:09] <ssbr_> gry: I mean any statement with a colon followed by a sequence of interior statements -- with, def, for, while, try, etc.
[11:28:24] *** Quits: easior__ (~easior@61.155.142.70) (Ping timeout: 252 seconds)
[11:29:00] *** Joins: easior__ (~easior@61.155.142.67)
[11:29:03] *** Joins: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3)
[11:29:09] <gry> ssbr_: ok, thank you
[11:29:28] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[11:30:52] *** Joins: derelict (~derelict@user/derelict)
[11:31:43] *** Joins: tos9_ (~tos9@host-79-13-125-128.retail.telecomitalia.it)
[11:31:44] *** Quits: tos9_ (~tos9@host-79-13-125-128.retail.telecomitalia.it) (Client Quit)
[11:32:14] *** Quits: easior_ (~easior@61.155.142.70) (Ping timeout: 272 seconds)
[11:33:03] *** Joins: easior (~easior@61.155.142.70)
[11:33:32] *** Joins: tos9_ (~tos9@host-79-13-125-128.retail.telecomitalia.it)
[11:33:41] *** Joins: pnoud (~pnoud@user/pnoud)
[11:33:41] *** Quits: tos9_ (~tos9@host-79-13-125-128.retail.telecomitalia.it) (Client Quit)
[11:34:05] *** Quits: finsternis (~X@23.226.237.192) (Remote host closed the connection)
[11:34:28] *** Joins: tos9_ (~tos9@host-79-13-125-128.retail.telecomitalia.it)
[11:34:46] *** Quits: easior__ (~easior@61.155.142.67) (Ping timeout: 272 seconds)
[11:35:24] *** Quits: tos9_ (~tos9@host-79-13-125-128.retail.telecomitalia.it) (Client Quit)
[11:36:46] *** Joins: bytehackr (~Sandipan@43.252.250.72)
[11:38:04] *** Joins: N4G4R41 (uid506268@user/n4g4r41)
[11:38:42] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[11:39:12] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[11:41:27] *** Quits: Julian (~tos9@host-79-13-125-128.retail.telecomitalia.it) (Quit: leaving)
[11:41:44] *** Joins: Julian (~tos9@host-79-13-125-128.retail.telecomitalia.it)
[11:41:55] *** Quits: xsperry (~as@user/xsperry) (Ping timeout: 265 seconds)
[11:42:54] *** Joins: nre (~nre@55d47ae6.access.ecotel.net)
[11:42:59] *** Quits: Julian (~tos9@host-79-13-125-128.retail.telecomitalia.it) (Client Quit)
[11:43:08] *** Joins: acresearch (~acresearc@user/acresearch)
[11:43:38] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[11:43:39] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 272 seconds)
[11:44:00] *** Joins: Julian (~tos9@host-79-13-125-128.retail.telecomitalia.it)
[11:51:01] *** Joins: amogorkon (~amogorkon@port-92-196-97-137.dynamic.as20676.net)
[11:51:04] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[11:51:12] *** Joins: Ergo^ (~ergo@91.238.59.144)
[11:51:14] <amogorkon> hey :)
[11:51:24] <amogorkon> it's been a while
[11:51:42] <lavadonut> sup
[11:51:54] <voldial> Just checking my assumptions... there's no way around ~ being an ambigious relative file specification... right? https://bpa.st/PMAQ
[11:52:18] <amogorkon> greyblue9 and i have been busy :)
[11:52:18] *** Joins: tos9_ (~tos9@host-79-13-125-128.retail.telecomitalia.it)
[11:52:20] *** Quits: tos9_ (~tos9@host-79-13-125-128.retail.telecomitalia.it) (Client Quit)
[11:52:23] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Ping timeout: 268 seconds)
[11:54:04] <amogorkon> we've been working on https://github.com/amogorkon/justuse
[11:54:16] *** Quits: bytehackr (~Sandipan@43.252.250.72) (Ping timeout: 258 seconds)
[11:54:54] <amogorkon> just yesterday we managed to realize inline auto-install and with that, hopefully, dependency-hell :)
[11:55:20] <amogorkon> still need to work out some kinks with that, namely numpy and other c-extension stuff that won't "just work"
[11:56:08] <voldial> haha. that's terrifying. looks fun:)
[11:56:20] <amogorkon> thanks! it most certainly is :)
[11:56:36] *** Joins: squirrel (~sq@user/squirrel)
[11:57:09] <ssbr_> trying to work a star trek VI joke/metaphor to use here, not working well
[11:57:18] <amogorkon> lol ;)
[11:57:38] <ssbr_> voldial: "ambiguous"?
[11:58:13] *** Quits: cjb (~cjb@user/cjb) ()
[11:58:30] <squirrel> in requests, is there a built-in way to get response type (as in "text/html")?
[11:58:34] <ssbr_> voldial: ~ isn't ambiguous, it's just not actually part of the filesystem semantics on any platform, so to expand it requires an extra call
[11:58:36] <voldial> ssbr_: well... in that extreme corner case... where there is a file named ~ in CWD
[11:58:45] <voldial> (see my paste:)
[11:59:02] <amogorkon> ssbr_, Path.home() works just fine on windows and linux
[11:59:11] *** Quits: bigRoo (~user@131.236.54.84) (Remote host closed the connection)
[11:59:30] <ssbr_> amogorkon: I meant in strings :)
[11:59:36] <amogorkon> oh, right
[11:59:42] <ssbr_> voldial: ah, I see. yes.
[11:59:59] *** Joins: Meteorhead (~Meteorhea@static-qvn-qvs-164225.business.bouyguestelecom.com)
[12:00:10] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:00:34] <ssbr_> voldial: how about ./~ ?
[12:01:02] <ssbr_> voldial: since ~ is only special at the start of a path, you should be able to use ./~ or the like just fine
[12:01:08] <voldial> ssbr_: thanks, I'm trying to decide if I want all my cli apps to path = Path(path).expanduser().resolve() or just .resolve()... I think users expect ~ to "work"
[12:01:16] *** Joins: gusto (~Augustus@109.255.100.54)
[12:01:31] <voldial> ssbr_: yea, that works as expected. .expanduser() correctly only parses ~ when it's [0]
[12:01:48] <ssbr_> squirrel: googling around a bit just said to pull it from the headers :(  requests.whatever(...).headers.get('content-type')
[12:02:00] *** Joins: xsperry (~as@user/xsperry)
[12:02:37] <voldial> ssbr_: so, yea, if I wanted to explicitely say "./~" that would be the "price" for making ~ work as expected in this... single I think.. corner case where ~ is in CWD too
[12:03:18] <squirrel> ssbr_: yeah i guess that's the way to go. i remember using `response.info().type` with urllib2
[12:03:27] *** Quits: reset (~reset@user/reset) (Quit: reset)
[12:03:44] <ssbr_> voldial: that seems like the lowest-pain option to me of all the things I can think of.
[12:03:57] <voldial> ssbr_: much appreciated
[12:04:24] <amogorkon> feel free to take justuse for a spin and report any issues :) overall i'm most proud of the general hot auto-reload, that took as effort as auto-install
[12:04:37] <amogorkon> much*
[12:04:43] <ssbr_> voldial: P.S. you may not be aware, but names like `~foo` are also affected (expands to home directory for user named foo)
[12:04:50] *** Joins: R24 (~R24@103.201.150.220)
[12:05:08] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[12:06:29] *** Joins: NeoCore (~neocore@45.152.181.180)
[12:07:05] <voldial> ssbr_: UUG. thanks. no I didnt know that. seems it's only for existing users... otherwise pathlib throws a RuntimeError (I guess that's approprate?) Path('~nonuser').expanduser() -> "RuntimeError: Can't determine home directory for 'nonuser'"
[12:07:50] <voldial> ssbr_: but. now there's a near infinite number of ambigious cases... to whatever char set is allowed in usernames and the max username. bleh.
[12:07:54] <ssbr_> vodkra: interesting. os.path.expanduser is much more hostile (it silently does nothing)
[12:08:16] <KirkMcDonald> Exploding seems preferable.
[12:08:17] <ssbr_> voldial: yes, all of which are identical to what you'd encounter in the shell, and fixed by using ./ for paths relative to cwd
[12:08:26] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.2)
[12:08:51] <ssbr_> voldial: another option, if you don't like ~ (not as well known), is maybe to use $FOO style expansion. Of course, then $ anywhere in the path must be escaped, but maybe it's more expected.
[12:09:17] <voldial> ssbr_: I'm tempted to require paths to start with './' or '~' or '/'
[12:09:24] *** Quits: R24 (~R24@103.201.150.220) (Client Quit)
[12:09:31] <voldial> err... not '~'
[12:09:59] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 258 seconds)
[12:10:12] <voldial> I think that's corner case free...
[12:10:17] <deniska> my paths start with C:\ :(
[12:10:33] <ssbr_> voldial: so that people can't access the home directory, and also can't get surprised when `~` isn't the home directory?\
[12:10:56] <ssbr_> deniska: I've started using B: drive for things because it's hilarious
[12:11:02] <voldial> ssbr_: hm. good point. chewing.
[12:11:10] <ssbr_> my next hard drive will be A:.
[12:11:32] *** Joins: R24 (~R24@103.201.150.220)
[12:11:48] *** Quits: Meteorhead (~Meteorhea@static-qvn-qvs-164225.business.bouyguestelecom.com) (Quit: Client closed)
[12:12:01] <deniska> ssbr_: a machine I rdp into uses A: for a swap partition and it still trips me sometimes when I open explorer
[12:12:33] <amogorkon> what, swapping to floppy?!
[12:12:35] <amogorkon> ;)
[12:12:36] <ssbr_> deniska: honestly at this point there's not much reason to use drive letters anyway (you can mount to a directory)
[12:12:49] <voldial> ssbr_: (maybe fixed?) require paths to start with './' or '~/' or '/'
[12:12:55] <deniska> ssbr_: it's not a drive letter, it's a filesystem root
[12:12:55] <ssbr_> (I think Steam likes drive letters better though)
[12:13:07] <deniska> ssbr_: \\host\share is also a possible filesystem root :)
[12:13:24] <ssbr_> deniska: but... A: is definitely a drive letter
[12:13:50] <deniska> and it probably would be hard to convince windows to create a swap file in a directory>
[12:13:53] <deniska> ?
[12:14:07] *** Joins: varaindemian (~varaindem@86.124.22.73)
[12:14:13] <ssbr_> voldial: IDK, is just doing expanduser so bad? the behavior is expected by people and easily worked around
[12:14:32] <deniska> ssbr_: you still must have at least a single root in windows, and unless you do something really funky, it's going to be a drive letter
[12:14:32] <KirkMcDonald> But if you use A: how will your system maintain compatibility with systems that have two floppy drives and no hard drive?
[12:14:34] <ssbr_> deniska: "not much" reason to use drive letters, not "no" reason!
[12:15:08] <KirkMcDonald> You can't copy files after booting from your DOS boot disk under these conditions!
[12:15:15] <ssbr_> I will hide my expansive statements behind as many weasely qualifiers as I need to in order to get the job done
[12:15:44] <deniska> KirkMcDonald: it's a weird quirk of history how most IBM PC clones only supported two drives, while the controller typically used could drive 4 perfectly fine :)
[12:15:44] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 258 seconds)
[12:16:09] *** Joins: rendar (~rendar@user/rendar)
[12:16:32] *** Quits: N4G4R41 (uid506268@user/n4g4r41) ()
[12:16:43] <KirkMcDonald> I can't even remember the last time I used a floppy disk.
[12:16:56] <voldial> ssbr_: I have a thing against corner cases... the possibility that there might be a file in CWD named ~ I cant get over ... https://github.com/jakeogh/angryfiles
[12:17:08] <KirkMcDonald> Probably in the early 00s sometime?
[12:17:27] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[12:17:33] <ssbr_> voldial: users already have to deal with that.
[12:17:46] <voldial> ssbr_: true
[12:18:05] <ssbr_> voldial: they can still access it via ./~ , which is also how they'd access it in their terminal environment etc., soooooo it's surely fine
[12:18:26] <deniska> I remember keeping a NTLDR boot floppy around in mid-2000's, was handy a few times
[12:19:20] <ssbr_> KirkMcDonald: I use a floppy disk all the time. do you not? how do you save your files if you don
[12:19:24] <ssbr_> 't click the floppy disk???
[12:19:34] <amogorkon> i switch windows
[12:19:35] <ssbr_> (ctrl+S is just the floppy diSk shortcut)
[12:19:36] <amogorkon> <.<
[12:20:01] <amogorkon> auto-safe on losing focus is so very nice :p
[12:20:01] <KirkMcDonald> At some point in there computers could start booting from CD-Rs, which eliminated the one remaining use I had for floppies.
[12:20:40] <KirkMcDonald> And then... I guess I just stopped needing to boot computers from media altogether? Hmm.
[12:20:45] <ssbr_> KirkMcDonald: and now they boot from USB sticks, which means every time I install windows I need to buy a USB drive because I don't freaking know what happened to the last one I bought.
[12:20:58] *** Joins: gggpkm (~gggpkm@60.10.194.47)
[12:21:07] <ssbr_> KirkMcDonald: I mean, you still need it for first-time installation if you're building a PC, but not many people do that.
[12:21:21] <ssbr_> and I'm not even sure you need that much if you're just transferring drives across
[12:21:23] *** Joins: securethemews (~securethe@2a00:23c4:1e98:ef00::4)
[12:21:38] <ssbr_> (I didn't transfer last time, for the same reason I was building a new PC... whole thing kablooie, IIRC.)
[12:21:40] <KirkMcDonald> True. My last desktop build booted the Windows install disc from its optical drive.
[12:21:56] <amogorkon> i have a CD drive in my PC, but it's never been plugged in
[12:22:04] <KirkMcDonald> And... I honestly don't remember how I originally installed Linux on my Linux box.
[12:22:11] <amogorkon> and never felt the need to
[12:22:58] <ssbr_> KirkMcDonald: maybe you formatted the drive from one machine and then plugged it in on the other 😎
[12:23:27] <KirkMcDonald> I will say that on my *previous* Linux box I was rather proud of switching from Gentoo to Ubuntu via some overcomplicated drive-partitioning shenanigans.
[12:23:35] <ssbr_> amogorkon: I keep thinking "I should have offline backups", and then thinking "that sounds really annoying"
[12:23:52] <ssbr_> online backups with file history = maybe good enough
[12:24:10] *** Parts: ssbr_ (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net) (Leaving)
[12:24:13] *** Joins: ssbr_ (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net)
[12:24:44] <amogorkon> i had a "lifetime subscription" for an online backup service that saved incremental backups.. for 3 years
[12:24:59] <amogorkon> and then they ran out of money and cancelled the service
[12:26:18] *** Quits: R24 (~R24@103.201.150.220) (Quit: Client closed)
[12:27:09] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:27:34] *** Quits: notevil (~notevil@user/notevil) (Quit: ZNC - http://znc.in)
[12:27:34] *** Quits: beanzilla (beanzilla@user/beanzilla) (Quit: ZNC 1.8.2 - https://znc.in)
[12:27:41] *** Joins: easior_ (~easior@61.155.142.73)
[12:27:59] *** Joins: beanzilla (~beanzilla@user/beanzilla)
[12:27:59] *** Joins: notevil (notevil@user/notevil)
[12:28:00] *** Joins: GiLgAmEzH (~gilgamezh@181.47.117.104)
[12:28:46] *** Joins: ice9 (~ice9@user/ice9)
[12:29:10] *** Quits: notevil (notevil@user/notevil) (Client Quit)
[12:29:10] *** Quits: beanzilla (~beanzilla@user/beanzilla) (Client Quit)
[12:29:39] *** Joins: beanzilla (~beanzilla@user/beanzilla)
[12:29:40] *** Joins: notevil (~notevil@user/notevil)
[12:30:22] *** Joins: thiras (~thiras@user/thiras)
[12:30:27] *** Quits: Julian (~tos9@host-79-13-125-128.retail.telecomitalia.it) (Quit: leaving)
[12:30:41] *** Quits: easior (~easior@61.155.142.70) (Ping timeout: 258 seconds)
[12:30:42] *** Joins: Julian (~tos9@host-79-13-125-128.retail.telecomitalia.it)
[12:31:08] *** Quits: gggpkm (~gggpkm@60.10.194.47) (Ping timeout: 272 seconds)
[12:31:20] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[12:32:52] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[12:34:13] *** Joins: easior (~easior@61.155.142.73)
[12:35:31] <amogorkon> so, what's been happening in here the last 2 months?
[12:35:39] <amogorkon> anything exciting going on?
[12:36:03] *** Quits: easior_ (~easior@61.155.142.73) (Ping timeout: 258 seconds)
[12:36:19] *** Joins: hendursaga (~weechat@user/hendursaga)
[12:36:22] *** Joins: Norore (~weechat@2a01:e0a:23a:5600:b9d3:ae19:12de:25b)
[12:36:24] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[12:36:25] *** Quits: salpynx (~salpynx@121.73.84.248) (Quit: Connection closed)
[12:36:28] *** Joins: easior_ (~easior@61.155.142.67)
[12:36:32] <amogorkon> and what is this ominous litharge doing up there?
[12:38:01] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 268 seconds)
[12:38:34] *** Joins: easior__ (~easior@61.155.142.67)
[12:38:35] *** Joins: shad (~shad@user/shad)
[12:38:38] *** Quits: hendursa1 (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:39:38] <KirkMcDonald> amogorkon: It's a bot.
[12:40:00] *** Quits: easior (~easior@61.155.142.73) (Ping timeout: 272 seconds)
[12:40:51] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@78.84.19.247)
[12:41:32] <Ronalds_Mazitis_> hey, I be installing pythreejs  with pip
[12:41:37] <Ronalds_Mazitis_> I get pyrsistent requires Python '>=3.5' but the running Python is 2.7.17
[12:41:43] <Ronalds_Mazitis_> ubuntu 18.04
[12:41:54] *** Quits: easior_ (~easior@61.155.142.67) (Ping timeout: 272 seconds)
[12:42:15] *** Quits: securethemews (~securethe@2a00:23c4:1e98:ef00::4) (Quit: Leaving)
[12:43:03] <voldial> ssbr_:  Path('./~nonuser').expanduser() -> RuntimeError
[12:43:19] <voldial> I think that's a bug.
[12:44:09] <Ronalds_Mazitis_> https://pypi.org/project/pythreejs/
[12:44:28] *** Quits: anas (~anas@41.228.144.142) (Ping timeout: 268 seconds)
[12:45:07] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@78.84.19.247) (Client Quit)
[12:47:59] <supakeen> Is there a nice interface over BytesIO to make it socket-like?
[12:48:20] *** Quits: Norore (~weechat@2a01:e0a:23a:5600:b9d3:ae19:12de:25b) (Quit: WeeChat 3.2)
[12:48:28] *** Joins: Norore (~weechat@2a01:e0a:23a:5600:b9d3:ae19:12de:25b)
[12:49:38] <squirrel> what's a good way to update all pip packages in such a way that it does not break?
[12:51:24] *** Joins: jetchisel (jetchisel@user/jetchisel)
[12:54:40] *** Quits: twobitsprite (~twobitspr@107.13.51.62) (Ping timeout: 268 seconds)
[12:55:18] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[12:56:50] *** Joins: N4G4R41 (uid506268@user/n4g4r41)
[12:56:57] *** Quits: magla (~gelignite@55d471c8.access.ecotel.net) (Quit: Stay safe!)
[12:57:17] *** Joins: zothix (~zoth@user/zothix)
[12:57:18] <zothix> Hi how can i get Datetime stamp. YmdHis. example output => (20081117145935)
[12:59:18] <deniska> zothix: datetime objects have a strftime method
[12:59:22] *** Quits: N4G4R41 (uid506268@user/n4g4r41) (Client Quit)
[12:59:37] *** Joins: dav1d (~dav1d@80-109-93-56.cable.dynamic.surfer.at)
[13:01:17] <voldial> uug. Path('./~').expanduser() doesnt work either
[13:02:39] <ssbr_> voldial: ha! of course not.
[13:02:54] *** Joins: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea)
[13:03:00] <ssbr_> voldial: I would guess it should be Path(os.path.expanduser('./~')), since Path doesn't know formatting details like this,
[13:03:32] <zothix> deniska, what is i here? python doesnt seem to recognize it
[13:04:06] <voldial> ssbr_: Path(os.path.expanduser('./~')) -> PosixPath('~') (correct... but... uug... Path... or PosixPath should know this
[13:04:18] *** Joins: easior (~easior@61.155.142.73)
[13:04:27] <ssbr_> voldial: Path/PosixPath don't and can't know the difference between 'x' and './x'
[13:04:35] <voldial> Path(os.path.expanduser('./~user')) -> PosixPath('~user') (also correct)
[13:04:40] <ssbr_> that's my read of it, anyway
[13:04:45] *** Quits: snalty (~Shhh@user/snalty) (Quit: ZNC 1.8.2 - https://znc.in)
[13:04:56] <deniska> zothix: minutes are %M I think
[13:05:24] <voldial> ssbr_: whew. I think I'll write some code to generate a comparison table:)
[13:05:46] *** Quits: easior__ (~easior@61.155.142.67) (Ping timeout: 268 seconds)
[13:06:29] <zothix> i am integrating with something and they said DATE => Datetime stamp. YmdHis. (20081117145935)  , should be like this
[13:06:56] *** Joins: easior_ (~easior@61.155.142.73)
[13:06:58] <zothix> deniska, i could be minutes?
[13:07:18] *** Joins: snalty (~Shhh@user/snalty)
[13:08:15] <deniska> zothix: minutes seem like a thing you would put between hours and seconds, sure
[13:08:46] *** Quits: aniruddha (~aniruddha@103.242.197.118) (Quit: WeeChat 1.9.1)
[13:08:51] <zothix> okai
[13:08:52] <zothix> thanks
[13:09:26] *** Joins: easior__ (~easior@61.155.142.73)
[13:09:29] <deniska> zothix: %Y%m%d%H%M%S seems like the format used
[13:09:54] <zothix> yes i am trying that, thanks <3
[13:10:24] *** Quits: easior (~easior@61.155.142.73) (Ping timeout: 272 seconds)
[13:10:39] *** Joins: upsala (~zcb@185.213.155.232)
[13:11:19] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 268 seconds)
[13:12:07] <lavadonut> if i have a bunch of arrays A, B, C, ...
[13:12:15] <lavadonut> and i want to do a bunch of operations on each one
[13:12:28] *** Quits: easior_ (~easior@61.155.142.73) (Ping timeout: 258 seconds)
[13:12:29] <lavadonut> how do i incorporate the array name into some loop? like
[13:12:42] *** Joins: easior (~easior@61.155.142.70)
[13:12:52] <lavadonut> to be able to input A and get out A_op_1, A_op_2, etc
[13:13:04] <lavadonut> or input B and get out B_op_1, B_op_2
[13:13:07] <amogorkon> you could put the arrays in a dict and loop over that
[13:15:01] *** Quits: easior__ (~easior@61.155.142.73) (Ping timeout: 268 seconds)
[13:15:35] <lavadonut> then still at some point i'm going to have to type out "A_op_1, A_op_2, A_op_3, ... = func(A,...) a bunch of times
[13:15:44] <lavadonut> right
[13:16:35] <lavadonut> can i make it automatically save things like to <matrixname>_op_1.csv
[13:16:42] *** Joins: easior_ (~easior@61.155.142.70)
[13:18:57] *** Joins: easior__ (~easior@61.155.142.70)
[13:19:00] *** Joins: kostkon (~androirc@ob21aa.static.otenet.gr)
[13:19:32] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[13:19:45] *** Quits: easior (~easior@61.155.142.70) (Ping timeout: 258 seconds)
[13:20:01] *** Joins: wattux (~wattux@212.51.23.106)
[13:22:26] *** Quits: easior_ (~easior@61.155.142.70) (Ping timeout: 272 seconds)
[13:23:25] *** Joins: easior (~easior@61.155.142.73)
[13:26:07] *** Quits: easior__ (~easior@61.155.142.70) (Ping timeout: 268 seconds)
[13:26:59] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[13:27:14] *** Joins: JimMadge (~jim@host86-141-21-184.range86-141.btcentralplus.com)
[13:27:14] <jinsun> lavadonut: f"{matrixname}_op_1.csv" ?
[13:28:06] *** Joins: Zweimer (~Zweimer@2a02:908:d20:26e0:d9d4:83a1:db25:1a7)
[13:29:16] *** Joins: szymon (~ugh@staticline-31-183-187-232.toya.net.pl)
[13:30:01] <Zweimer> Is it a good practise to use inner functions in python? I am looking at PyQt5 code and there are a lot of inner functions in inner functions in inner functions ... and the function is always getting straight called after the definition.
[13:30:39] <Zweimer> Do people use inner functions to structure the code or is there a reason to use them?
[13:30:46] <Zweimer> *another
[13:31:39] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:31:56] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[13:32:18] <ssbr_> Zweimer: a function defined inside of another function? Not especially, that's pretty uncommon.
[13:32:36] <ssbr_> Zweimer: it's necessary for passing to things that accept callbacks, which may be what you're seeing.
[13:33:42] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[13:33:50] <Zweimer> hm, right. Thanks.
[13:34:30] *** Joins: pnoud (~pnoud@user/pnoud)
[13:37:34] *** Joins: Corder_000 (~Coder_000@179.83.138.212)
[13:38:18] *** Joins: Deneb (~johnch@58.111.189.80.dyn.plus.net)
[13:38:27] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[13:39:32] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[13:40:04] <Zweimer> ssbr_, could you say it is bad to use inner functions excessively (despite for callbacks)?
[13:40:22] <ssbr_> Zweimer: I am generally opposed to excessive indirection, sure.
[13:40:25] *** Joins: damoreno (~damoreno@redhat/damoreno)
[13:40:27] *** Quits: rememberYou (~someone@user/rememberyou) (Remote host closed the connection)
[13:40:48] <damoreno> Hi. Is there a way to remove from locals() those function arguments that are set to their default value?
[13:41:19] <ssbr_> damoreno: the only way to remove a local `var` is `del var`.
[13:41:34] <Zweimer> ssbr_, well. I guess it is bad to use anything excessively. But do you see any harm in using inner functions at all? Do they make the code harder readable?
[13:41:35] <ssbr_> damoreno: I don't understand what this accomplishes, though -- why do you want to remove the local?
[13:41:52] *** Quits: eli__ (~eli@i220-99-152-148.s41.a013.ap.plala.or.jp) (Ping timeout: 252 seconds)
[13:42:10] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 268 seconds)
[13:42:20] <damoreno> ssbr_: Maybe remove is not the word. I need a dict with all the arguments of a function call that are not set to their default value.
[13:42:45] <ssbr_> Zweimer: of course. "foo = bar + 1" is clearly and obviously worse than `def bar_plus_one(): return bar + 1` followed by `foo = bar_plus_one()`
[13:42:49] <ssbr_> uhhhhh
[13:42:51] <ssbr_> other way around
[13:43:01] <ssbr_> Zweimer: I meant that `foo = bar + 1` is better than the function equivalent :)
[13:43:02] <Zweimer> I get you :)
[13:43:53] <ssbr_> damoreno: if you use `None` consistently, you could use {k: v for k, v in locals().items() if v is not None}. Though really, this use of locals() might get a bit unwieldy and fragile.
[13:44:22] <damoreno> ssbr_: I was using that until the default for some arguments became a different thing
[13:44:25] *** Quits: Corder_000 (~Coder_000@179.83.138.212) (Remote host closed the connection)
[13:44:44] <ssbr_> damoreno: it will be easier to keep the default as None and override it separately.
[13:45:14] <ssbr_> e.g. def foo(bar=None): locals_whatever =  {k: v for k, v in locals().items() if v is not None}; if bar is None: bar = 0.0
[13:45:29] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[13:45:36] *** Joins: RBEL (~jigubigul@2001:1c06:19c3:7000:3581:e61:38ea:4d1)
[13:45:36] <damoreno> ssbr_: yeah, I guess that's the cleanest way
[13:45:37] <ssbr_> I sometimes think all function default arguments should always be None at all times. There's some real benefits to this.
[13:45:50] <ssbr_> (legibility when reading source code, unfortunately, isn't one of them.)
[13:46:26] <ssbr_> damoreno: anyway, going back to your question -- there is know way to know the difference between a default function parameter and a non-default, except by checking its value, as with e.g. None.
[13:46:37] <ssbr_> they look the same otherwise
[13:46:43] <ssbr_> s/parameter/argument/
[13:47:16] <ssbr_> so the main alternative is "doing it by hand", which to be fair has its merits :)
[13:47:16] <damoreno> ssbr_: I was expecting to find something similar to dataclasses fields
[13:47:33] <ssbr_> damoreno: can you elaborate?
[13:48:45] *** Joins: the_emperor (~the_emper@203.95.220.39)
[13:48:49] <damoreno> with dataclasses fields you can get the default values for class fields, so it's easy to get those values that were actually passed when creating an instance
[13:49:22] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[13:50:34] <ssbr_> damoreno: ahhhh. That's a fair point. You can do something similar with functions, but it's very annoying. (the inspect module can help you.)
[13:51:54] <damoreno> ssbr_: yeah, I don't want to add inspect (again) xD
[13:52:10] <damoreno> people tend to get nervous when reviewing my code
[13:53:24] *** Quits: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3) (Quit: Konversation terminated!)
[13:53:43] <ssbr_> damoreno: the locals() trick is already quite bad :)
[13:53:47] *** Quits: Julian (~tos9@host-79-13-125-128.retail.telecomitalia.it) (Changing host)
[13:53:47] *** Joins: Julian (~tos9@python/site-packages/Julian)
[13:53:53] *** Quits: ssbr_ (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net) (Changing host)
[13:53:53] *** Joins: ssbr_ (~ssbr@python/site-packages/ssbr)
[13:54:00] <ssbr_> (though, if it's the *first* line in the function, I'd probably forgive it even in code review at work)
[13:54:00] <damoreno> ssbr_: brilliantly bad you meant? :P
[13:55:46] <damoreno> It's actually quite handly to have less lines of code. I can do something like `_make_call('post', f"{API_URL}/add", **locals())`, keeping endpoint arguments in each function representing and endpoint and handling the response in a single function.
[13:55:53] <damoreno> handy*
[13:56:18] *** Joins: m_tadeu (~quassel@85.247.187.233)
[13:57:54] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:59:34] *** Joins: node1 (~node1@user/node1)
[14:00:10] *** Joins: gggp (~textual@60.10.194.47)
[14:00:19] *** ssbr_ is now known as ssbr
[14:00:55] *** Joins: easior_ (~easior@61.155.142.67)
[14:01:52] *** Quits: easior_ (~easior@61.155.142.67) (Read error: Connection reset by peer)
[14:04:21] *** Quits: easior (~easior@61.155.142.73) (Ping timeout: 268 seconds)
[14:04:35] <amogorkon> or you could have a nice little namedtuple and pass it around instead
[14:05:26] *** Joins: jboy (~jboy@user/jboy)
[14:06:02] <kosh> use attrs or dataclasses instead of a namedtuple
[14:06:32] <amogorkon> that would be the next step of escalation ;)
[14:06:54] <amogorkon> hey kosh :)
[14:06:57] *** Joins: rindolf (~rindolf@87.68.240.240.adsl.012.net.il)
[14:07:35] <kosh> greetings non-sentient life form
[14:07:47] <amogorkon> hey, i take offense to that :p
[14:08:04] <amogorkon> are you calling me dumb? :p
[14:08:14] <damoreno> kosh: amogorkon: example please?
[14:08:44] *** Joins: pnoud (~pnoud@user/pnoud)
[14:08:46] <damoreno> oh, scratch that. I got it.
[14:08:46] <jboy> Any hints for how I can avoid this error when trying to publish my Poetry-managed project to PyPI ("Can't have direct dependency")? https://github.com/jboynyc/textnets/runs/2930340453?check_suite_focus=true#step:6:20
[14:08:49] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 258 seconds)
[14:08:53] <amogorkon> right.
[14:09:00] <squirrel> i'm trying to fetch a page with requests and the exact same code produces different results in py2 and py3 (403 vs 200). logging suggests that the requests are the same in both cases. any idea what could be at fault here? anything i can do to (easily) fix the py2 variant?
[14:09:13] <damoreno> I totally agree actually... The thing is that I would have one for each endpoint and I'm not sure I like that.
[14:09:15] *** Joins: cliluw (~cliluw@47.147.80.149)
[14:11:13] *** Quits: gggp (~textual@60.10.194.47) (Remote host closed the connection)
[14:11:39] <rendar> when i specify an option in __init__ i usually do: self.background = background or self.DEFAULT_BACKGROUND, and __init__ hash background=None by default, it works nicely and with oneliner i can set all parameters, but this doesn't work with bool parameters for obvious reasons :( is there a shortcut like that for bools?
[14:11:44] <jboy> I suspect the answer is "don't put any direct dependencies in pyproject.toml," but that would be unfortunate.
[14:11:51] *** Joins: gggp (~textual@60.10.194.47)
[14:12:01] <nedbat> jboy: it looks like these are for a "test" extra?
[14:12:10] <jboy> yes nedbat
[14:12:14] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 265 seconds)
[14:12:21] <amogorkon> hey nedbat!
[14:12:30] <amogorkon> how have you been?
[14:12:41] <nedbat> jboy: and so, only for developers of your package? I don't usually try to install those in the same way
[14:12:42] *** Quits: gggp (~textual@60.10.194.47) (Client Quit)
[14:12:43] <Julian> rendar: Use attrs, then you can write background = attr.ib(default=DEFAULT_BACKGROUND) and not worry about this :)
[14:12:48] <nedbat> amogorkon: pretty good, chilling over here on Libera
[14:12:57] <amogorkon> haha :)
[14:13:12] <amogorkon> well, i'm back for now :)
[14:13:20] <jboy> nedbat: yes, the dependency is only needed to run tests
[14:13:41] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[14:13:54] <amogorkon> nedbat, did you see how far justuse came since we last talked?
[14:14:04] <nedbat> amogorkon: sorry, i haven't.
[14:14:19] <nedbat> jboy: i'm not sure what the right approach is here.
[14:14:19] *** Quits: the_emperor (~the_emper@203.95.220.39) (Remote host closed the connection)
[14:14:24] <amogorkon> greyblue9 and i are just wrapping up auto-install for pure python packages
[14:14:49] <amogorkon> then you can install them in one line from within your code and import it
[14:14:59] <amogorkon> tests are already passing :)
[14:15:28] <rindolf> kosh: hi, i think that i think - therefore i think that i am
[14:15:32] <jboy> thanks nedbat
[14:15:44] <kosh> rindolf, I have doubts
[14:16:46] <nedbat> amogorkon: that sounds powerful, maybe scary?
[14:16:55] <amogorkon> not at all scary, i love it :)
[14:18:00] <amogorkon> see, when you do test = use("example-pypi-package.examplepy", auto_install=True) it raises a RuntimeWarning, suggesting the latest version and hash
[14:18:08] <amogorkon> then you can just copy&paste that line
[14:18:10] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[14:18:15] <amogorkon>   test = use("example-pypi-package.examplepy", version="0.1.0", hash_value="ce89b1fe92abc55b4349bc58462ba255c42132598df6fe3a416a75b39b872a77", auto_install=True)
[14:18:32] <amogorkon> and get exactly this version with the hash, nothing else
[14:18:48] <amogorkon> no trouble
[14:19:00] <rendar> Julian: attrs is too big for that simple thing
[14:19:08] <Zweimer> How is unstructured and very long code called again? Was it Wall of code or Code wall or something like that?
[14:19:08] <rindolf> kosh: https://twitter.com/alexgoot/status/1335832449067126785
[14:19:41] <rindolf> Zweimer: big ball of mud?
[14:19:48] <Zweimer> Thats it! Thanks
[14:19:55] <rindolf> Zweimer: you're welcome
[14:20:16] *** Joins: shad (~shad@user/shad)
[14:20:23] <Yhg1s> rendar: attrs isn't big.
[14:20:27] <amogorkon> nedbat, then you can have multiple versions of a package installed with no conflicts!
[14:20:32] <Yhg1s> rendar: your manually futzing is bigger.
[14:20:41] <rendar> Yhg1s: huh?
[14:20:50] <amogorkon> sadly c-extensions give us some trouble
[14:20:54] <rendar> Yhg1s: i won't include a new dependency just for a boolean operation...
[14:20:57] <jboy> Is there a channel specifically for Poetry and PEP 517/518 issues?
[14:20:57] <amogorkon> so numpy is out for now
[14:20:58] <nedbat> amogorkon: can you say quickly how you manage to have multiple versions of the same package?
[14:21:07] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[14:21:15] <Yhg1s> rendar: yes, you wouldn't. you would include it to get rid of a lot of your own code.
[14:21:16] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[14:21:35] <amogorkon> nedbat, the quick answer? we don't mess with sys.path or anything related to that, at all ;)
[14:21:42] <rendar> Yhg1s: ok, but i have to study that lib before using it :)
[14:22:24] <nedbat> rendar: i must have missed something, why doesn't your code work for boolean parameters?
[14:23:01] <amogorkon> nedbat, for now, we just download the wheel and use zipimporter to directly import it, which is a bit limited because it won't load .so files etc. so we have to unpack those and need to chdir etc
[14:23:35] <amogorkon> we have our own registry.json to keep track of what we have installed, bypassing the import system
[14:23:51] <amogorkon> so we don't collide with pip and imports
[14:23:52] <nedbat> amogorkon: ok, so long as it isn't scary :)
[14:24:01] *** Joins: logithack (~logithack@p200300cfbf0fd6003b8eda4f54c9e99e.dip0.t-ipconnect.de)
[14:24:23] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[14:24:24] <amogorkon> pip and the classical imports still work as you'd expect, no messing with the import machinery
[14:25:59] *** Joins: jpic (~jpic@82.142.10.10)
[14:27:28] <rendar> nedbat: because if i have `self.hasBackground = has_background or self.DEFAULT_HAS_BACKGROUND` that or won't work properly if i specify has_background=False
[14:27:47] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 268 seconds)
[14:27:51] <rendar> nedbat: i assume that all __init__ paramters are None by default, and if the user specify one, it is != None
[14:28:07] <rendar> nedbat: it works for everything, except something=False
[14:28:10] *** Joins: dambuster (~dambuster@185.193.170.225)
[14:28:26] <nedbat> rendar: oh, i see.  yes, you would need self.hasBackground = has_background if has_background is not None else self.DEFAULT_HAS_BACKGROUND
[14:28:38] <rendar> nedbat: yep that's what i'm using right now
[14:29:09] <nedbat> rendar: it starts to get really wordy.  there's a reason people like attrs :)
[14:29:36] <rendar> nedbat: yeah, i think i'll look into that
[14:29:59] <rendar> nedbat: but before using it, i have to know very well that lib to avoid bugs and so on
[14:30:32] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 268 seconds)
[14:31:09] *** Joins: rsx (~dummy@ppp-188-174-128-157.dynamic.mnet-online.de)
[14:31:56] <nedbat> rendar: it's another thing to learn, it's true.
[14:33:14] <rendar> yep, so for now i'll carry on with 'is not None else'
[14:34:29] *** Quits: xsperry (~as@user/xsperry) (Remote host closed the connection)
[14:34:53] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[14:35:06] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[14:35:15] *** Joins: chronon (~chronon@user/chronon)
[14:38:00] <amogorkon> nedbat, if you want to experiment with it, we just pushed a new release https://pypi.org/project/justuse/ :)
[14:38:16] <nedbat> amogorkon: to be honest, i'm not sure I have the problem that it solves
[14:39:45] *** Joins: N4G4R41 (uid506268@user/n4g4r41)
[14:39:51] <amogorkon> well, it was your comment that lead me there, so maybe you're at least curious ;)
[14:40:19] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[14:41:08] *** Joins: ponadm_ (pony@gateway/vpn/protonvpn/ponadm)
[14:41:09] <lericson> Is there an asyncio.gather but if one task fails, the other tasks are cancelled?
[14:41:22] <Gurkenglas> Is there a debugger that keeps track of multiple runs of the program for different inputs at the same time and breakpoints when the runs diverge, such as at an if statement?
[14:41:31] *** Joins: upsala1 (~zcb@185.213.155.160)
[14:42:01] *** Joins: entuland (~entuland@user/entuland)
[14:42:14] *** Quits: upsala (~zcb@185.213.155.232) (Ping timeout: 272 seconds)
[14:42:35] *** Quits: RBEL (~jigubigul@2001:1c06:19c3:7000:3581:e61:38ea:4d1) (Quit: WeeChat 3.2)
[14:44:08] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[14:44:26] *** Quits: bugsniper (~bugsniper@cpe-24-24-180-229.socal.res.rr.com) (Ping timeout: 268 seconds)
[14:46:28] *** Joins: Corder_000 (~Coder_000@191.33.92.59)
[14:46:29] *** Joins: lmmx (~louis@host-92-0-187-249.as13285.net)
[14:48:06] <lmmx> anyone know the Python equivalent of the Linux shell command `nm` ? "list symbols for object files" (gives a list of functions in a `.so` file)
[14:48:55] *** Joins: cedric (~cedric@2a01:cb11:867:c200:948b:c317:6c54:8b43)
[14:50:22] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[14:50:58] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Client Quit)
[14:51:12] *** Quits: N4G4R41 (uid506268@user/n4g4r41) ()
[14:51:15] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[14:52:20] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-147.dsl.bell.ca)
[14:52:35] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[14:53:51] <nedbat> amogorkon: which comment was that?
[14:54:08] <nedbat> Gurkenglas: i have not heard of that, but it sounds like a fascinating challenge.
[14:54:32] *** Quits: Samian (~Sami@2620:10d:c091:480::1:8d08) (Quit: Textual IRC Client: www.textualapp.com)
[14:55:14] *** Joins: codificat (~pep@66.red-79-154-168.dynamicip.rima-tde.net)
[14:55:39] <amogorkon> nedbat, when i complained about the lack of inline version-pinning or "module annotations" you proposed a functional approach like foo = import("name", version..), which sparked the whole thing
[14:55:49] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[14:55:56] <nedbat> amogorkon: i see.  you aren't going to "pin" this on me! :D
[14:55:57] *** Quits: Zer0xFF (michael@matrix.michaelsasser.org) (Remote host closed the connection)
[14:56:03] <amogorkon> xD
[14:56:31] <rindolf> lmmx: hi
[14:57:09] <rindolf> lmmx: can  you parse nm's output?
[14:57:24] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[14:57:53] *** Joins: Zer0xFF (michael@matrix.michaelsasser.org)
[14:58:30] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[14:59:28] <lericson> hmm
[14:59:48] *** Joins: meatballs (~meatballs@2001:470:69fc:105::633)
[14:59:50] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[15:00:09] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[15:00:39] <lericson> say i make a decorator that calls the decoratee with some contextmanaged thing, like @with_the_database \n def find_dissidents(db): db.query(...)
[15:01:14] <lericson> this is all fine and normal, but now, if find_dissidents is an async def, the with_the_database decorator needs to be rewritten
[15:01:31] <lericson> that makes me a sad panda
[15:02:24] *** Quits: Deneb (~johnch@58.111.189.80.dyn.plus.net) (Quit: Leaving)
[15:03:08] *** Joins: rhax (~yannick@user/rhax)
[15:03:21] *** Quits: damoreno (~damoreno@redhat/damoreno) (Quit: leaving)
[15:03:52] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[15:04:11] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Ping timeout: 268 seconds)
[15:04:29] *** Joins: wyclif (~wyclif@user/wyclif)
[15:05:00] *** Quits: nre (~nre@55d47ae6.access.ecotel.net) (Quit: Leaving.)
[15:05:16] *** Joins: CombatVet (~c4@user/combatvet)
[15:05:49] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[15:06:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[15:06:35] *** Quits: Zer0xFF (michael@matrix.michaelsasser.org) (Remote host closed the connection)
[15:07:00] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:07:17] *** Quits: Mechanismus (~LabMonkey@2602:306:cf62:e270:e4b6:7e80:3dd0:ae03) (Ping timeout: 256 seconds)
[15:07:53] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Remote host closed the connection)
[15:08:13] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[15:09:04] *** Joins: Zer0xFF (michael@matrix.michaelsasser.org)
[15:10:30] *** Quits: Zer0xFF (michael@matrix.michaelsasser.org) (Remote host closed the connection)
[15:11:00] *** Joins: nre (~nre@55d47ae6.access.ecotel.net)
[15:12:19] *** Joins: Zer0xFF (michael@matrix.michaelsasser.org)
[15:12:38] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[15:12:47] <lmmx> rindolf yeah opting for that, seems simplest! I only need to check one function is exported
[15:12:53] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:13:23] <rindolf> lmmx: ah
[15:15:28] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[15:15:38] <rindolf> lmmx: https://en.wikipedia.org/wiki/Binary_File_Descriptor_library
[15:15:48] *** Joins: the_emperor (~the_emper@203.95.220.39)
[15:15:50] *** Quits: logithack (~logithack@p200300cfbf0fd6003b8eda4f54c9e99e.dip0.t-ipconnect.de) (Quit: Leaving)
[15:16:02] *** Joins: bomb-on (~bomb-on@31.217.12.161)
[15:16:10] *** Joins: hyperknot (~hyperknot@2a02:3033:402:d86d:6811:7c54:8315:fb9d)
[15:16:41] <hyperknot> Hi, with pytest how can I move some of my tests into a subdirectory? When I move them they are no longer detected.
[15:16:52] *** Quits: varaindemian (~varaindem@86.124.22.73) (Quit: Client closed)
[15:16:58] *** Joins: darksun (~darksun@user/darksun)
[15:20:03] <nedbat> hyperknot: what did you name the subdirectory?
[15:20:17] <hyperknot> test_api
[15:20:23] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 265 seconds)
[15:20:30] <hyperknot> nedbat: I am now trying to add it explicitly to testpaths
[15:20:53] *** Joins: mxp_ (~mxp@185.219.140.216)
[15:21:18] <hyperknot> OK the issue was that the files also have to start with test_ in the subfolder
[15:24:10] *** Quits: mxp (~mxp@82.98.30.69) (Ping timeout: 252 seconds)
[15:24:14] <nedbat> hyperknot: you can change that pattern also
[15:26:23] <hyperknot> is that python_files?
[15:26:59] *** Quits: szymon (~ugh@staticline-31-183-187-232.toya.net.pl) (Ping timeout: 268 seconds)
[15:27:06] *** Joins: palasso (~palasso@user/palasso)
[15:27:07] *** Quits: palasso (~palasso@user/palasso) (Client Quit)
[15:28:28] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[15:29:06] *** Quits: mxp_ (~mxp@185.219.140.216) (Ping timeout: 272 seconds)
[15:29:11] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:30:05] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 268 seconds)
[15:30:13] *** Joins: akaWolf (~akaWolf@akawolf.org)
[15:30:32] *** Joins: pagnol (~user@014198154145.ctinets.com)
[15:30:33] *** Quits: bomb-on (~bomb-on@31.217.12.161) (Read error: Connection reset by peer)
[15:30:45] *** Joins: mxp (~mxp@94.140.11.43)
[15:30:58] *** Quits: Allegretto (~allegrett@fibhost-67-230-113.fibernet.hu) (Ping timeout: 268 seconds)
[15:32:24] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[15:34:48] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[15:35:00] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:36:50] *** Joins: drew` (~drew@user/drew)
[15:37:02] *** Quits: drew (~drew@user/drew) (Read error: Connection reset by peer)
[15:37:07] *** drew` is now known as drew
[15:38:30] <lericson> is this really the best way to make a decorator that works as expected with coroutines? http://pb.lericson.se/p/JLvgXP/
[15:38:35] *** Joins: Lauxley (~lauxley@2a01:e34:ec55:2700:a596:168e:4b57:f991)
[15:39:19] *** Joins: clawh (~clawh@194.127.167.100)
[15:39:35] *** Joins: varaindemian (~varaindem@86.124.22.73)
[15:39:37] <lericson> i see similar issues arising in basically any decorator pattern
[15:39:43] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[15:40:11] <lericson> nevermind the missing return in the async version
[15:41:00] *** Parts: robyndrake (robyndrake@user/robyndrake) (WeeChat 2.9)
[15:41:47] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[15:42:17] *** Quits: NeoCore (~neocore@45.152.181.180) (Quit: Leaving)
[15:42:22] *** Joins: xcombelle (~xavie@176-139-252-198.abo.bbox.fr)
[15:43:00] *** Joins: Allegretto (~allegrett@91-83-34-167.pool.digikabel.hu)
[15:43:49] *** Quits: Corder_000 (~Coder_000@191.33.92.59) (Quit: WeeChat 3.0.1)
[15:44:04] *** Quits: pneff (~pneff@2a02:168:fedc:0:4961:9552:50a:6c11) (Ping timeout: 272 seconds)
[15:44:16] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 268 seconds)
[15:44:33] <bjs> lericson: pretty much yes
[15:44:52] <lericson> one approach i saw was to force the decoratee to be a coroutine and await it
[15:45:09] <bjs> I mean the way you use the async def is different. You call it and get a return value,  but you still want the exit stack alive while you use the value (await it)
[15:45:21] <lericson> eh i guess that doesn't work
[15:45:35] <bjs> lericson: sure but I thought the point was you wanted a decorator that worked for async and non-async defs?
[15:45:42] <lericson> yeah never mind that
[15:46:43] *** Quits: pagnol (~user@014198154145.ctinets.com) (Read error: Connection reset by peer)
[15:47:20] *** Quits: rindolf (~rindolf@87.68.240.240.adsl.012.net.il) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[15:47:43] *** Quits: shad (~shad@user/shad) (Ping timeout: 258 seconds)
[15:50:28] *** Joins: ohuwuteu (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:51:31] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[15:51:56] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[15:54:37] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Quit: leaving)
[15:54:57] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[15:55:14] <squirrel> lericson: might as well make it work for generators with isasyncgenfunction and isgeneratorfunction :p
[15:55:30] *** Joins: pneff (~pneff@2a02:168:fedc:0:4961:9552:50a:6c11)
[15:55:36] *** Joins: hegstal (~hegstal@2a02:c7f:7604:8a00:ac06:25a4:7233:bcc6)
[15:56:09] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 265 seconds)
[15:57:02] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[15:57:28] <zothix> i am trying to convert this perl code into python code https://dpaste.org/CyaY
[15:57:53] <zothix> whats the python alternative for " strict " , " CGI " , " Digest::HMAC_MD5 qw(hmac_md5_hex); "
[15:58:05] *** Joins: amirouche (~amirouche@user/amirouche)
[15:58:15] <zothix> if there is a tool that i can use to convert perl to python, please recommend
[15:58:43] <amirouche> do you know a good indexation / query strategy for a simhash-like?
[16:00:01] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 265 seconds)
[16:00:49] <amirouche> maybe there is machine-learning take on this.
[16:00:58] *** Joins: Crassus (~Crassus@user/crassus)
[16:02:08] *** Quits: pneff (~pneff@2a02:168:fedc:0:4961:9552:50a:6c11) (Ping timeout: 268 seconds)
[16:03:18] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 272 seconds)
[16:03:24] *** Quits: rajkosto (~rajkosto@cable-178-149-127-189.dynamic.sbb.rs) (Ping timeout: 252 seconds)
[16:03:37] *** Joins: palasso (~palasso@user/palasso)
[16:04:08] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Ping timeout: 252 seconds)
[16:04:31] *** Joins: roppert (~roppert@inb4.se)
[16:04:42] *** Joins: N4G4R41 (uid506268@user/n4g4r41)
[16:04:50] *** Quits: jazzy (~jaziz@2600:380:8753:52bc:1884:3ec0:3ac7:33b1) (Ping timeout: 250 seconds)
[16:06:27] *** Joins: ice9 (~ice9@user/ice9)
[16:08:23] *** Joins: i0e (~is0ke3@user/is0ke3)
[16:09:34] *** Joins: pnoud (~pnoud@user/pnoud)
[16:09:36] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[16:10:09] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 268 seconds)
[16:10:47] *** Quits: wattux (~wattux@212.51.23.106) (Quit: Client closed)
[16:14:28] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[16:14:45] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 268 seconds)
[16:15:22] *** Joins: gggp (~textual@60.10.194.47)
[16:18:29] <entuland> zothix, there seem to be python libraries around to deal with 2checkout, it may be worth investigating it instead of 1 to 1 "translate" that perl script
[16:18:57] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::4ec1)
[16:19:12] <zothix> entuland, i saw that python library, it has no function to validate IPN response sadly
[16:19:14] <zothix> :/
[16:19:30] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[16:20:00] <entuland> https://knowledgecenter.2checkout.com/API-Integration/Webhooks/06Instant_Payment_Notification_(IPN)/Calculate-the-IPN-HASH-signature
[16:20:05] <grawity> hashlib for HMAC, not sure why you need cgi
[16:20:08] <entuland> check the python sample there
[16:21:32] *** Quits: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net) (Quit: Client closed)
[16:21:44] *** Quits: N4G4R41 (uid506268@user/n4g4r41) ()
[16:21:54] *** Joins: pneff (~pneff@2a02:168:fedc:0:4961:9552:50a:6c11)
[16:23:52] *** Joins: Julian (~tos9@python/site-packages/Julian)
[16:25:12] *** Quits: Julian (~tos9@python/site-packages/Julian) (Client Quit)
[16:26:06] *** Joins: wattux (~wattux@212.51.23.106)
[16:26:18] *** Joins: anas (~anas@102.156.159.177)
[16:26:28] <zothix> entuland, i tried that, thats just for validating, to send response these are their sample code
[16:26:29] <zothix> https://knowledgecenter.2checkout.com/API-Integration/Webhooks/06Instant_Payment_Notification_(IPN)/IPN-code-samples
[16:26:43] <lericson> what's the right-adjust syntax for string formatting in python again
[16:27:05] *** Joins: omegatron (~some@p5b056bc7.dip0.t-ipconnect.de)
[16:27:25] *** Joins: phax (~phax@207.229.144.190)
[16:28:15] *** Joins: Luyin (~daisy@user/luyin)
[16:28:17] *** Parts: Luyin (~daisy@user/luyin) (bye bye)
[16:29:07] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:1ddf:df90:39d5:9eb3)
[16:30:11] <entuland> can't tell, just wanted to help finding references / pointers, I have no experience with that specific gateway nor with any of the existing libraries
[16:30:34] <entuland> I guess you could try and contact the 2checkout support if their docs are lacking
[16:31:02] <zothix> hmm thanks <3
[16:31:16] <entuland> yw
[16:32:01] *** __jmcantrell__ is now known as jmcantrell
[16:32:25] *** Quits: hyperknot (~hyperknot@2a02:3033:402:d86d:6811:7c54:8315:fb9d) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:32:40] *** Quits: Crassus (~Crassus@user/crassus) (Quit: Textual IRC Client: www.textualapp.com)
[16:32:44] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[16:33:08] *** Joins: thiras (~thiras@user/thiras)
[16:33:42] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:24] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[16:36:37] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:36:52] *** Quits: Haxxa (~Haxxa@122.199.47.41) (Ping timeout: 272 seconds)
[16:37:02] *** Joins: cdown (~cdown@89.32.122.5)
[16:37:32] <azidhaka> Hi everyone. I've got a program that periodically reads file with pickled data, does some work on it and writes it back. What is the pythonic way to implement locking for that file?
[16:37:33] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 258 seconds)
[16:38:44] *** Quits: ray (~ray@user/re) (Quit: WeeChat 3.1)
[16:39:13] <azidhaka> that's on Linux
[16:39:45] *** Quits: ionface (~ionface@user/ionface) (Read error: Connection reset by peer)
[16:39:58] *** Joins: ray (~ray@user/re)
[16:41:42] *** Joins: ionface (~ionface@user/ionface)
[16:42:41] *** Quits: ksynwa (~ksynwa@v2202009129512127397.nicesrv.de) (Quit: oh no they're here)
[16:43:36] *** Joins: MrFantastik (~Thunderbi@rrcs-184-74-43-235.nys.biz.rr.com)
[16:43:51] *** Joins: ksynwa (~ksynwa@v2202009129512127397.nicesrv.de)
[16:45:15] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[16:45:29] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[16:45:53] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[16:46:01] *** Joins: or4n (~or4n@gerbera.qkka.org)
[16:47:04] *** Joins: ice99 (~ice9@user/ice9)
[16:47:47] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 268 seconds)
[16:47:50] <entuland> there is a filelock library on pypi and there also is this section of the docs, azidhaka: https://docs.python.org/3/library/asyncio-sync.html - not sure if this latter one is what you're looking for, though
[16:49:32] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 272 seconds)
[16:50:14] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 268 seconds)
[16:50:32] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[16:51:30] *** Joins: gggp (~textual@124.126.15.211)
[16:51:49] <azidhaka> entuland: filelock it is, thanks!
[16:52:01] <entuland> yw
[16:52:03] *** Joins: cdown_ (~cdown@163.114.131.1)
[16:52:30] *** Joins: chaosite (~chaosite@user/chaosite)
[16:54:41] *** Joins: wovixo (~wovixo@128.104.205.49)
[16:55:11] *** Quits: cdown (~cdown@89.32.122.5) (Ping timeout: 268 seconds)
[16:55:46] *** Joins: shad (~shad@user/shad)
[16:58:06] *** Quits: entuland (~entuland@user/entuland) (Read error: Connection reset by peer)
[17:02:54] *** Joins: entuland (~entuland@user/entuland)
[17:03:05] *** Joins: knipster (~knipster@user/knipster)
[17:03:48] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[17:04:06] *** Quits: anas (~anas@102.156.159.177) (Ping timeout: 272 seconds)
[17:04:41] *** Joins: Mulugruntz (~Mulugrunt@124-159-50-62.ppp.bbiq.jp)
[17:04:43] *** Joins: Crassus (~Crassus@user/crassus)
[17:04:54] <Yhg1s> azidhaka: you should absolutely move off of pickle at the same time, though. It's a terrible thing to use.
[17:05:04] <Yhg1s> (also, file locking depends on what you want to lock *for*)
[17:05:38] <azidhaka> Yhg1s: i am just saving a dict between runs, sqlite seems overkill for this
[17:05:45] *** Joins: timkofu (~timkofu@user/timkofu)
[17:05:47] <timkofu> Howdy
[17:05:49] *** Joins: jetchisel (jetchisel@user/jetchisel)
[17:06:27] <Yhg1s> azidhaka: I didn't suggest sqlite, but okay. pickle is insecure, fragile, insecure, depending on your code layout, insecure, unupgradable, insecure, inefficient, insecure and unmanageable.
[17:06:28] *** Quits: gggp (~textual@124.126.15.211) (Ping timeout: 252 seconds)
[17:06:38] <Yhg1s> azidhaka: it's to overstate how bad an idea it is to use it.
[17:07:41] *** Joins: gggp (~textual@124.126.15.211)
[17:07:52] *** Quits: varaindemian (~varaindem@86.124.22.73) (Ping timeout: 246 seconds)
[17:07:55] *** Joins: szymon (~ugh@staticline-31-183-187-232.toya.net.pl)
[17:08:18] *** Quits: baltazar (~baltazar@193-110-63-140.cable-modem.hdsnet.hu) (Ping timeout: 252 seconds)
[17:09:06] <azidhaka> Yhg1s: okay, can you please suggest some kind of persistence for basic python data structures?
[17:09:13] *** Joins: boxelephant (~boxelepha@209.143.87.130)
[17:09:31] *** Quits: phax (~phax@207.229.144.190) (Quit: Leaving)
[17:09:34] <Yhg1s> azidhaka: JSON is not an uncommon one. Libraries like attrs and marsmhallow make it easy to serialise to generic formats (and switch formats)
[17:10:12] *** Joins: baltazar (~baltazar@84-236-16-51.pool.digikabel.hu)
[17:10:49] *** Joins: summersault (~summersau@2804:7f0:3886:c810:9cfa:540f:6adf:d4d0)
[17:12:39] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[17:15:30] *** Joins: qunzhong_luxian (~qunzhong_@68.235.43.110)
[17:17:19] *** Joins: Morteza24 (~Morteza24@178.131.53.54)
[17:17:21] *** Joins: lazar (~lazar@user/lazar)
[17:19:19] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:20:34] *** Quits: wovixo (~wovixo@128.104.205.49) (Read error: Connection reset by peer)
[17:21:01] *** Quits: MrFantastik (~Thunderbi@rrcs-184-74-43-235.nys.biz.rr.com) (Remote host closed the connection)
[17:21:11] *** Joins: Nact (~l@host-85-27-126-227.dynamic.voo.be)
[17:21:39] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[17:21:55] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[17:22:37] *** Joins: dhch (~dhch@185.213.154.167)
[17:22:46] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[17:23:38] *** Joins: afidegnum (~user@102.176.94.23)
[17:27:03] <afidegnum> hi, anyone familiar with GPT-2? i have an issue re-training the language model
[17:27:22] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[17:28:16] <grym> afidegnum: from scratch? or are you fine tuning
[17:28:26] <grym> from scratch will probably bankrupt you :P
[17:28:28] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 250 seconds)
[17:29:05] *** Quits: gggp (~textual@124.126.15.211) (Ping timeout: 268 seconds)
[17:29:19] *** Quits: zothix (~zoth@user/zothix) (Quit: Leaving)
[17:29:27] *** Quits: summersault (~summersau@2804:7f0:3886:c810:9cfa:540f:6adf:d4d0) (Ping timeout: 272 seconds)
[17:29:46] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 250 seconds)
[17:29:47] <afidegnum> grym well, i'm still struggingl with the concept, do we download GPT-2 with the initial trained model in order to retrain to fit our context ?
[17:29:53] *** Joins: gggp (~textual@60.10.194.47)
[17:30:34] *** Joins: cheater (~Username@user/cheater)
[17:30:50] <grym> afidegnum: big fat transformer architectures like that are typically trained once, and fine-tuned for different approaches afterwards on pretrained weights
[17:30:53] <grym> on top of*
[17:31:00] *** Joins: Corder_000 (~Coder_000@179.83.138.212)
[17:31:03] *** Joins: Julian (~tos9@python/site-packages/Julian)
[17:31:12] *** Joins: N4G4R41 (uid506268@user/n4g4r41)
[17:31:19] <afidegnum> ok, i'm getting it now,
[17:31:27] *** Parts: Morteza24 (~Morteza24@178.131.53.54) ()
[17:31:42] <afidegnum> grym: do you have some examples i can follow?
[17:32:20] <grym> afidegnum: the canonical transformer reads are probably https://jalammar.github.io/illustrated-transformer/ http://nlp.seas.harvard.edu/2018/04/03/attention.html
[17:32:22] <afidegnum> I have come accross this one: but I need an english version https://colab.research.google.com/github/philschmid/fine-tune-GPT-2/blob/master/Fine_tune_a_non_English_GPT_2_Model_with_Huggingface.ipynb
[17:32:35] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[17:34:55] *** Quits: qunzhong_luxian (~qunzhong_@68.235.43.110) (Quit: Textual IRC Client: www.textualapp.com)
[17:34:59] *** Quits: Crassus (~Crassus@user/crassus) (Quit: Textual IRC Client: www.textualapp.com)
[17:36:12] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 265 seconds)
[17:36:40] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:1ddf:df90:39d5:9eb3) (Quit: Leaving)
[17:36:46] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[17:37:06] *** Joins: cliluw (~cliluw@47.147.80.149)
[17:37:42] *** Joins: vlado_ (~vladoski@2001:b07:add:d406:4d23:3b14:6c48:9caf)
[17:38:35] <afidegnum> grym: what would you suggest between pytort and tensorflow for language training ?
[17:38:43] <afidegnum> i mean retraining
[17:40:33] *** Joins: Crassus (~Crassus@user/crassus)
[17:40:39] *** Quits: especial (~especial@cm-84.214.207.74.getinternet.no) (Remote host closed the connection)
[17:41:07] <hodapp> grym: help, two devs here now think they can use declarative configuration for literally everything
[17:41:22] <hodapp> and now they're on the "whoa, I could make this declarative language MORE POWERFUL!" treadmill
[17:42:22] <grym> afidegnum: torch is probably more common
[17:42:34] <afidegnum> ok
[17:42:35] <grym> hodapp: but.. the point is that you shouldn't .. oy
[17:42:55] <grym> that's how you wind up as a yaml farmer
[17:43:00] <palasso> afidegnum: also check out the huggingface transformers library
[17:43:25] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[17:43:42] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[17:43:48] <hodapp> grym: yeah it's YAML
[17:43:56] <afidegnum> palasso: i'm currently on huggingface which has less documentation and i'm found wanting. https://huggingface.co/models
[17:44:10] <afidegnum> a bit confused on what model to choose
[17:44:18] <palasso> afidegnum: https://huggingface.co/transformers/
[17:44:38] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 258 seconds)
[17:45:07] <hodapp> grym: they've gotten as far as "you can say which class to instantiate here if we make a registry!" and then "but then we'll need args & kwargs fields..."
[17:45:09] *** Joins: nyah (~nyah@90.221.186.180)
[17:45:16] *** Joins: cheater (~Username@user/cheater)
[17:46:14] *** Joins: MrFantastik (~Thunderbi@rrcs-184-74-43-235.nys.biz.rr.com)
[17:46:17] <palasso> afidegnum: you probably want to use the AutoTokenizer and AutoModel classes. Or for a pretrained model for a specific task check the pipelines that are available. Maybe even Trainer for when you want to do training. You could start playing around with e.g. BERT and it should be easy to swap one for the other
[17:46:18] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 272 seconds)
[17:46:22] *** Joins: xsperry (~as@user/xsperry)
[17:46:49] *** Joins: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com)
[17:47:14] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[17:47:58] *** Joins: twobitsprite (~twobitspr@107.13.51.62)
[17:48:08] *** Joins: Confusioned (~AnySomebo@p5b15fbbc.dip0.t-ipconnect.de)
[17:48:26] <afidegnum> palasso: the main objective is to be able to generate few texts from keywords, assuming we are talking about banking, insurances etc.. i just need to input specific keywords than have a draft of generated text which i can use later
[17:48:37] <Confusioned> Hi, I have a somewhat noob question regarding Tensorflow and the code from here: https://github.com/awjuliani/Meta-RL i.e. A3C-Meta-Context.ipynb... how is the number of episodes determined within the code, i.e. when and why does the training end?
[17:49:15] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 265 seconds)
[17:50:21] *** Quits: Corder_000 (~Coder_000@179.83.138.212) (Quit: WeeChat 3.0.1)
[17:50:38] <palasso> afidegnum: so your input is a list of keywords?
[17:50:39] *** Joins: Corder_000 (~Coder_000@177.10.203.30)
[17:50:48] <palasso> afidegnum: an unordered list of keywords?
[17:51:00] <afidegnum> palasso: exactly, not a sentence like it was demonstrated on GPT-2
[17:51:07] <afidegnum> palasso: yes, unordered
[17:53:13] *** Quits: Crassus (~Crassus@user/crassus) (Quit: Textual IRC Client: www.textualapp.com)
[17:53:16] *** Joins: zeden (~zeden@user/zeden)
[17:56:37] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[17:56:50] <afidegnum> palasso: found something ?
[17:56:51] *** Joins: Crassus (~Crassus@user/crassus)
[17:57:53] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[17:57:54] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[17:58:09] <palasso> afidegnum: try finding more text as input per category instead of just a keyword
[17:58:58] *** Quits: wattux (~wattux@212.51.23.106) (Ping timeout: 246 seconds)
[17:59:16] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 252 seconds)
[17:59:16] *** Joins: rajkosto (~rajkosto@cable-178-149-127-189.dynamic.sbb.rs)
[17:59:22] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:1ddf:df90:39d5:9eb3)
[17:59:33] <afidegnum> palasso: secondly, in most examples, it's recommneded to use GPU, i'm currently using AMD which i believe the performance might be low. but i have a server with 8 cores CPU, what do i need to change in order to use the CPU instead? what are he drawbacks ?
[17:59:54] *** Joins: qunzhong_luxian (~qunzhong_@68.235.43.166)
[18:00:00] *** Joins: cheater (~Username@user/cheater)
[18:00:22] *** Quits: sgn (~sgn@user/sgn) (Ping timeout: 252 seconds)
[18:00:32] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-99ee-aace-56cc-b3af.res6.spectrum.com) (Ping timeout: 250 seconds)
[18:00:32] *** Quits: jpic (~jpic@82.142.10.10) (Ping timeout: 268 seconds)
[18:00:55] *** Quits: gggp (~textual@60.10.194.47) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:02:01] *** Quits: GeorgeK (~GeorgeK@cpe-70-92-5-228.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[18:03:00] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[18:03:16] <palasso> afidegnum: it's going to be slow on the CPU, especially if you intend to do training it's not feasible with a large language model
[18:03:29] *** Joins: sgn (~sgn@user/sgn)
[18:03:37] *** Quits: ohuwuteu (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 244 seconds)
[18:04:11] <afidegnum> what servers provide GPU hosting for such tasks ?
[18:07:19] *** Quits: Crassus (~Crassus@user/crassus) (Ping timeout: 268 seconds)
[18:08:28] *** Quits: rsx (~dummy@ppp-188-174-128-157.dynamic.mnet-online.de) (Quit: rsx)
[18:10:25] *** Joins: pnoud (~pnoud@user/pnoud)
[18:10:51] <afidegnum> palasso:pls  do you have an idea?
[18:11:28] <palasso> afidegnum: pretty much all major cloud hosting providers. If you're looking for something free for limited fine-tuning you can try the free version of google colab
[18:11:58] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[18:12:05] <afidegnum> ok, let me give it a try
[18:12:07] *** Quits: Corder_000 (~Coder_000@177.10.203.30) (Quit: WeeChat 3.0.1)
[18:13:04] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[18:13:09] *** Joins: hemmond (~hemmond@mail.artisys.cz)
[18:14:19] *** Joins: ripdog_ (~quassel@user/ripdog)
[18:15:10] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[18:15:12] *** Joins: Valle (~Vallinski@p5dd7d93b.dip0.t-ipconnect.de)
[18:15:16] *** Quits: yano (~yano@ircpuzzles/staff/yano) (Quit: WeeChat, the better IRC client, https://weechat.org/)
[18:15:33] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:d827:a614:8af:2d72)
[18:15:40] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[18:16:08] *** Quits: ripdog (~quassel@user/ripdog) (Ping timeout: 250 seconds)
[18:17:26] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[18:18:14] *** Joins: computeiro (~Wender@189.37.69.220)
[18:18:14] *** Joins: ohuwuteu (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[18:18:21] *** Joins: gggpkm (~gggpkm@60.10.194.47)
[18:18:54] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[18:19:12] <gggpkm>  how to do identity proof of hash
[18:19:45] *** Joins: derelict (~derelict@user/derelict)
[18:21:14] *** Quits: the_emperor (~the_emper@203.95.220.39) (Remote host closed the connection)
[18:22:08] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[18:22:16] <bjs> gggpkm: you're going to have to explain what you mean
[18:22:28] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[18:22:29] *** Joins: Adoi (~Adoi@user/adoi)
[18:22:39] <greyltc> I have I have
[18:22:41] <greyltc> [options.package_data]
[18:22:43] <greyltc> runpanel = system_config.yaml, ui.glade
[18:22:46] <greyltc> in my setup.cfg
[18:23:32] <greyltc> but suddenly (like in the last week or so) the ui.glade file stops making it into my packaged .whl
[18:23:57] <greyltc> why is that?
[18:24:07] *** Quits: janemba (~janemba@94.204.254.193) (Ping timeout: 258 seconds)
[18:24:40] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[18:24:58] <Adoi> hello, I am trying to get the respective error message when the arithmetic operator is '*' or '/', but I get the wrong error message; https://bpa.st/PHJQ
[18:25:30] *** Quits: gggpkm (~gggpkm@60.10.194.47) (Ping timeout: 265 seconds)
[18:26:01] <bjs> Adoi: it's your string that's a problem.  You're using ' inside the string
[18:26:18] <bjs> but Python is getting confused because ' also means the end of the string.
[18:26:23] *** Joins: dba (uid502594@id-502594.stonehaven.irccloud.com)
[18:26:33] <bjs> Well that's one of the problems of this code :)
[18:27:06] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[18:27:28] <bjs> Adoi: you also have `n.isnumeric() or m.isnumeric() == False:` which probably isn't doing what you mean
[18:27:40] *** Quits: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Ping timeout: 268 seconds)
[18:27:48] <bjs> that is the same as saying `if (n.isnumeric() == True) or (m.isnumeric() == False):`
[18:28:33] <Adoi> bjs, ah, that one escaped my attention :) both must be "False", right?
[18:28:54] <bjs> Adoi: yes,  without the quotes
[18:29:13] <Adoi> quotes of the operator signs?
[18:29:15] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 268 seconds)
[18:29:22] <bjs> (also note that `n.isnumeric() == False` might be nicer written as just `not n.isnumeric()`
[18:29:27] <bjs> Adoi: no you put quotes around False
[18:29:45] <bjs> I don't know if you were just putting irc quotes,  but in Python True/False shouldn't have quotes.
[18:29:52] <hemmond> Hi, any pointers how to enable two flags in argparse with one flag? I have argument --foo and --bar (both store_true). What I need is for the --bar to also store True to --foo's destination so user only needs to specify --bar to have --foo & --bar functionalities. Right now I do it after parse_args() - have IF clauses that sets the --foo to True if --bar is set. What I want is to have it as a part of the parser (so I can extract that parser to library and
[18:30:30] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[18:30:31] <briian> a
[18:30:33] <Adoi> bjs, in which line are there quotes around "False" ?
[18:30:42] <bjs> Adoi: in your line, the one you just typed to me here in irc
[18:30:48] <Adoi> there is only one False, and it has no quotes? :)
[18:31:00] <Adoi> ah
[18:31:27] <lericson> Adoi: when we quote code in prose, we tend to use backticks `like_this`
[18:31:27] <Adoi> bjs: " it's your string that's a problem.  You're using ' inside the string"  which line is it?
[18:31:38] <bjs> Adoi: line 21
[18:32:15] <dba> Hi, I am trying to optimize a process for speed, but I can figure a way to do so. My case is that I want to make 1000 requests in the shortest possible time, but I cant do them concurrently or parallel because to make a successful  requests.get2 it requires some response from requests.get1 and to make a successful  requests.get3 it requires some response from requests.get2 and so on...Any thoughts or feedback is highly appreciated.
[18:32:43] <bjs> Adoi: 'a '-' sign'  is not a valid string  for example,  because you cannot put ' directly into '' strings like that.  You have to write it like   "a '-' string"  or 'a \'-\' string'  so that Python knows the ' inside the string are part of the string and aren't supposed to be the end of the string.
[18:33:06] <lericson> dba: for 1k requests, just do them in a for loop
[18:33:31] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[18:33:38] <grym> hodapp: par for the ML course :(
[18:33:50] <dba> lericson, what about 1m?
[18:33:50] <hodapp> grym: ehh?
[18:34:01] <grym> hodapp: the excessive yaml thing
[18:34:18] <lericson> machine learning?
[18:34:28] *** Quits: pneff (~pneff@2a02:168:fedc:0:4961:9552:50a:6c11) (Ping timeout: 268 seconds)
[18:34:32] <Adoi> bjs, but the problem with wrong error message is not related to it; https://bpa.st/EK3Q
[18:34:50] <lericson> dba: i'd make sure to reuse the connection so i don't waste time on tcp and ssl setup/teardown
[18:35:24] <bjs> Adoi: like i said your code has multiple issues ;)
[18:35:32] <lericson> dba: but i have never had a usecase where i need to make 1M requests in short time, typically there is a rate limit
[18:36:06] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-d575-2704-820a-6f5d.res6.spectrum.com)
[18:36:08] <Adoi> bjs, which are...
[18:36:15] <bjs> Adoi: the two things I just listed ...
[18:36:17] <dba> lericson, do you mean reuse the TCP connection
[18:36:24] <lericson> dba: that's what i said
[18:36:35] <lericson> you can do request pipelining in http
[18:36:37] *** Joins: jpic (~jpic@82.142.10.10)
[18:36:43] *** Joins: janemba (~janemba@185.107.80.152)
[18:37:01] <dba> lericson, this is very new to me i didnt think it is doable
[18:37:48] <lericson> https://en.wikipedia.org/wiki/HTTP_pipelining
[18:38:03] <lericson> i guess you don't really want that though
[18:38:11] <Adoi> bjs, now it works; https://bpa.st/ZWFA thank you very much!
[18:40:23] *** Joins: alguien (~alguien@user/alguien)
[18:41:14] *** Quits: jpic (~jpic@82.142.10.10) (Ping timeout: 268 seconds)
[18:42:08] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[18:42:35] <dba> lericson, my server does not support HTTP/1.1
[18:42:40] *** Quits: timkofu (~timkofu@user/timkofu) (Quit: leaving)
[18:43:01] *** Joins: jpic (~jpic@82.142.10.10)
[18:43:22] <lericson> dba: is this some iot server?
[18:43:40] <dba> Yes
[18:43:47] <lericson> ah
[18:43:47] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[18:44:01] *** Quits: Valle (~Vallinski@p5dd7d93b.dip0.t-ipconnect.de) (Quit: Leaving)
[18:44:04] <lericson> so no keep-alive connections?
[18:44:21] <lericson> then I'd want to set TCP_NODELAY
[18:44:35] <lericson> but realistically won't do much
[18:44:37] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[18:44:49] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 258 seconds)
[18:45:03] *** Joins: niv (~niv@limbo.cypherpunks.io)
[18:45:59] *** Joins: pneff (~pneff@2a02:168:fedc:0:4961:9552:50a:6c11)
[18:46:03] *** Gustavo6046_ is now known as Gustavo6046
[18:48:47] *** Joins: mad_moses (~ps@2a02:810b:f3f:f0d0:d250:99ff:fe86:b052)
[18:50:34] <mad_moses> Hi, I try to build a regexp which checks if there are 7 digits within a string. => ^\D*(\d\D*){7,}$ => this is working. But the matching substring should not be longer as 20. Any idea how to formulate this with regexp?
[18:52:01] *** Joins: varaindemian (~varaindem@86.124.78.162)
[18:52:07] <lericson> I'm like decently convinced there's a bug in asyncio
[18:52:21] <lericson> Super intermittent super hard to reproduce
[18:52:24] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 272 seconds)
[18:53:30] *** Joins: Akuli (~Akuli@87-94-110-84.bb.dnainternet.fi)
[18:53:32] *** Joins: shibboleth (~shibbolet@gateway/tor-sasl/shibboleth)
[18:53:50] *** Quits: dld (~davidlowr@2601:197:600:1210:c935:8535:4063:dde3) (Ping timeout: 250 seconds)
[18:55:09] <dba> lericson, thanks, I will do a bit more googleing
[18:55:46] *** Joins: dld (~davidlowr@2601:197:600:1210:ecb4:116f:408c:2cf4)
[18:57:29] *** Joins: shauna (~shauna@pool-108-48-153-94.washdc.fios.verizon.net)
[18:58:20] *** Joins: justinf210 (~justinf21@51.sub-97-43-193.myvzw.com)
[18:58:30] *** Quits: or4n (~or4n@gerbera.qkka.org) (Ping timeout: 272 seconds)
[18:58:30] *** Quits: pneff (~pneff@2a02:168:fedc:0:4961:9552:50a:6c11) (Ping timeout: 268 seconds)
[18:58:36] *** Quits: shauna (~shauna@pool-108-48-153-94.washdc.fios.verizon.net) (Quit: Client closed)
[18:58:52] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:1ddf:df90:39d5:9eb3) (Quit: Leaving)
[18:59:43] <greyltc> could anyone familiar with using setup.cfg to automate packaging have a look at mine? https://gitlab.com/greyltc/runpanel/-/raw/master/setup.cfg
[19:00:50] <greyltc> suddenly and mysteriously my package data file, `ui.glade` has stopped making it into may packaged whl files, and I can't for the life of me figure out why!
[19:01:14] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 252 seconds)
[19:01:33] <greyltc> the other package data file seems to be included correctly
[19:01:48] <greyltc> which is even more confusing
[19:01:53] *** Quits: kostkon (~androirc@ob21aa.static.otenet.gr) (Ping timeout: 268 seconds)
[19:02:08] <Yhg1s> greyltc: I suspect you need to list it in a MANIFEST.in file.
[19:02:32] <altendky> at which point, is `options.data_files` not needed?
[19:03:18] <Yhg1s> oh, data_files should already be added to the manifest, without listing them in MANIFEST.in.
[19:03:22] <Yhg1s> I didn't see that there.
[19:03:33] <Yhg1s> however, I'm never sure which paths are relative to what.
[19:04:16] <greyltc> Yhg1s: is this a new requirement? I've never had a MANIFEST.in file. I've been packaging this project like this for the last ~12 months like this with no issues. and my other data file is included without being in a MANIFEST.in file!
[19:05:18] <greyltc> It's crazy, like setuptools has started filtering out extensions or something?
[19:05:35] *** Quits: justinf210 (~justinf21@51.sub-97-43-193.myvzw.com) (Ping timeout: 268 seconds)
[19:05:36] <Yhg1s> greyltc: no, files explicitly listed in data_files should be included. (I only saw include_package_data=True, not the options.package_data, so I assumed you were relying on setuptools finding the data files for you)
[19:05:46] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[19:06:17] <Yhg1s> eh, not options.data_files, options.package_data.
[19:06:38] <greyltc> I'm not entirely sure how setuptools finds the files honestly. maybe `where = src` helps with that?
[19:07:15] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:08:00] <Yhg1s> for package_data, it finds them inside the packages. (The package name is the key in the package_data dict, or the thing before '=' in the cfg file.)
[19:08:01] *** Joins: viktorivan (~ivan@187.223.237.71)
[19:08:18] <Yhg1s> so as far as I know, what you have should work.
[19:08:51] <greyltc> yeah, this must be a bug. it has always worked
[19:08:53] *** Quits: viktorivan (~ivan@187.223.237.71) (Read error: Connection reset by peer)
[19:09:11] <Yhg1s> you do seem to have a stray '=' in package_dir, but if that's a problem it should be more apparent.
[19:09:16] <greyltc> and the data file listed next to ui.glade works
[19:09:35] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[19:09:46] <greyltc> Yhg1s: then that stray `=` is also a bug in the docs! https://setuptools.readthedocs.io/en/latest/userguide/declarative_config.html#using-a-src-layout
[19:09:54] *** Joins: thiras (~thiras@user/thiras)
[19:09:55] <Yhg1s> greyltc: well, you *also* list system_config.yaml in options.data_files, which may be why it's behaving differently.
[19:09:57] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[19:10:18] *** Joins: pneff (~pneff@2a02:168:fedc:0:4961:9552:50a:6c11)
[19:10:20] <greyltc> That's true
[19:11:37] <Yhg1s> greyltc: oh, no, the =src is right, you're specifying a top-level package dir. It's like '{"": "src"}' in setup.py.
[19:11:44] *** Joins: cheater1__ (~Username@user/cheater)
[19:11:46] <Yhg1s> I forgot package_dir wasn't a single argument,
[19:12:13] *** Joins: Crassus (~Crassus@user/crassus)
[19:12:26] *** Quits: noneco (~noneco@dslb-090-186-083-254.090.186.pools.vodafone-ip.de) (Remote host closed the connection)
[19:12:40] <altendky> does the list of files in setup.cfg get them into the sdist as well?  is MANIFEST.in just a different way to specify the files that some people like?
[19:13:18] *** Joins: alguien (~alguien@user/alguien)
[19:13:18] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 268 seconds)
[19:13:20] *** cheater1__ is now known as cheater
[19:13:32] *** Joins: finsternis (~X@23.226.237.192)
[19:13:44] <greyltc> I've never used MANIFEST.in, and it has worked like this in the past...
[19:13:51] *** Quits: vlado_ (~vladoski@2001:b07:add:d406:4d23:3b14:6c48:9caf) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:13:56] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Ping timeout: 272 seconds)
[19:13:59] <altendky> greyltc: i understand there are many ways to do this and that that is confusing
[19:14:30] <altendky> last i looked i went with MANIFEST.in to actually specify the files.  can't say i remember the details.
[19:14:35] <greyltc> I think I'll try rolling back setuptools to 56.2.0 and see if it starts working again
[19:14:53] <Yhg1s> altendky: the manifest is built up by setuptools out of a bunch of things, like all the to-be-installed package sources, package_data, data_files, et cetera. Anything not explicitly listed in any of them that still needs to be present in the source package (like any files you expect to be picked up by include_package_data, or that rae necessary for setup.py to work) need to be listed in MANIFEST.in.
[19:17:25] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-0458-a457-b653-bd98.res6.spectrum.com)
[19:17:29] *** Joins: viktorivan (~ivan@187.223.237.71)
[19:18:33] *** Quits: zumba_addict (~zumba_add@2601:240:4500:8320:e98b:4b49:12f:23c1) (Quit: Client closed)
[19:18:51] <altendky> Yhg1s: i think that might be a 'yes'?  unless `package_data` and `data_files` achieve other things that `MANIFEST.in` doesn't.
[19:19:24] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[19:19:32] *** Quits: viktorivan (~ivan@187.223.237.71) (Remote host closed the connection)
[19:21:53] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[19:23:15] *** Joins: the_emperor (~the_emper@203.95.220.39)
[19:23:24] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:23:41] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Client Quit)
[19:24:48] <greyltc> argh, rolling back the stuptools version doesn't fix it :(
[19:25:18] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:25:18] <obiwahn> http://paste.debian.net/1202717/ - what is line 8 doing?
[19:26:44] *** Joins: Blankspace (~abcd@user/blankspace)
[19:26:53] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Ping timeout: 268 seconds)
[19:28:27] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:d827:a614:8af:2d72) (Ping timeout: 268 seconds)
[19:29:30] *** Joins: viktorivan (~ivan@187.223.237.71)
[19:30:07] *** Quits: JimMadge (~jim@host86-141-21-184.range86-141.btcentralplus.com) (Quit: WeeChat 3.2)
[19:30:09] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[19:31:27] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[19:31:48] *** Quits: lmmx (~louis@host-92-0-187-249.as13285.net) (Ping timeout: 268 seconds)
[19:33:39] <obiwahn> I think that I might have seen that with named tuples or something does this kind of typing work with plain objects?
[19:34:31] *** Quits: ctrypoph (~ctrypoph@99-51-11-77.lightspeed.brhmmi.sbcglobal.net) (Quit: -a- Connection Timed Out)
[19:35:26] *** Joins: ircuser-1 (~Johnny@71.63.241.168)
[19:36:14] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[19:37:34] *** Quits: viktorivan (~ivan@187.223.237.71) (Remote host closed the connection)
[19:38:29] *** Quits: jpic (~jpic@82.142.10.10) (Ping timeout: 265 seconds)
[19:38:35] <bjs> obiwahn: it's a type hint.  it's a form of documentation that is supposed to hint at what the type of the attributes are
[19:38:36] *** Joins: ctrypoph (~ctrypoph@99-51-11-77.lightspeed.brhmmi.sbcglobal.net)
[19:38:50] <bjs> obiwahn: it's not "doing" anything;  Python  ignores these lines.
[19:39:29] <bjs> (but some tools e.g. mypy and pytype can read your code and check to see if you do something the type doesn't allow)
[19:39:59] *** Joins: ntdll (~ntdll@user/ntdll)
[19:40:12] *** Joins: jpic (~jpic@82.142.10.10)
[19:40:26] *** Joins: vlado (~vladoski@2001:b07:add:d406:4d23:3b14:6c48:9caf)
[19:41:50] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[19:42:50] *** Joins: justinf210 (~justinf21@51.sub-97-43-193.myvzw.com)
[19:43:14] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 250 seconds)
[19:43:17] *** Joins: xkuru (~xkuru@user/xkuru)
[19:44:36] *** Quits: vlado (~vladoski@2001:b07:add:d406:4d23:3b14:6c48:9caf) (Client Quit)
[19:46:42] *** Quits: MrFantastik (~Thunderbi@rrcs-184-74-43-235.nys.biz.rr.com) (Remote host closed the connection)
[19:47:04] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:d827:a614:8af:2d72)
[19:49:10] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[19:49:58] *** Joins: gggpkm (~gggpkm@60.10.194.47)
[19:50:02] *** Joins: MrFantastik (~Thunderbi@rrcs-184-74-43-235.nys.biz.rr.com)
[19:50:29] <gggpkm> why tornado take asyncio in internal use
[19:50:59] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[19:51:18] <bjs> gggpkm: i'm not sure what you mean,  why not?
[19:51:28] *** Quits: xkuru (~xkuru@user/xkuru) (Quit: Unvirtualizing)
[19:52:34] <gggpkm> if use asynio ,why still use tornado
[19:52:46] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 268 seconds)
[19:52:47] <bjs> gggpkm: tornado is a library that uses asyncio
[19:53:02] *** Joins: bilb_ono (~alexmarsh@pool-96-250-84-46.nycmny.fios.verizon.net)
[19:53:04] <bjs> you use tornado if you want the features tornado gives you
[19:53:11] <gggpkm> asyncio include tornado all features
[19:53:24] <gggpkm> async concurrent future ..
[19:53:35] <gggpkm> executor tasks
[19:53:39] <bjs> gggpkm: well no, asyncio isn't very nice to use directly
[19:53:49] *** Joins: vladoski (~vladoski@2001:b07:add:d406:4d23:3b14:6c48:9caf)
[19:53:51] <gggpkm> for example
[19:53:54] <gggpkm> show me the code
[19:54:01] <bjs> gggpkm: "the" code?
[19:54:09] <gggpkm> for example
[19:54:19] <gggpkm> take a example
[19:54:26] <gggpkm> maybe some code
[19:54:29] <bjs> gggpkm: for example, to do the things tornado does. I'm sure its docs have plenty of examples
[19:54:30] <bjs> gggpkm: https://www.tornadoweb.org/en/stable/
[19:54:36] *** Joins: reedrichards (~Thunderbi@rrcs-184-74-43-235.nys.biz.rr.com)
[19:54:39] <gggpkm> oh
[19:54:44] <bjs> oh?
[19:54:55] *** Quits: MrFantastik (~Thunderbi@rrcs-184-74-43-235.nys.biz.rr.com) (Ping timeout: 268 seconds)
[19:54:55] *** reedrichards is now known as MrFantastik
[19:55:12] <gggpkm> how long time do you use ti read though the source code of tornado
[19:55:22] <bjs> I've never read the source code of tornado
[19:55:32] *** Quits: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Remote host closed the connection)
[19:55:49] *** Joins: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[19:55:50] <gggpkm> I mean if you read
[19:56:05] <bjs> gggpkm: are you asking how long would it take me to read and understand the source code of tornado?
[19:56:15] <gggpkm> yep
[19:56:28] <llua> this series of questions is awesome
[19:56:40] <gggpkm> llua, why
[19:56:42] <mastardet> llua: yeah +1
[19:56:58] <bjs> gggpkm: idk,  it'd probably take me a week or two to read it all (it's not small) and a few months to actually understand it. But I've never tried,  I'm just experienced with those kinds of libraries...  obviously how long it would take *you* is dependent on your experience
[19:56:59] <bjs> not mine
[19:57:00] *** Joins: ripdog (~quassel@user/ripdog)
[19:57:17] *** Quits: Crassus (~Crassus@user/crassus) (Quit: Textual IRC Client: www.textualapp.com)
[19:57:27] <gggpkm> bjs, vim navigation is not fast enough ?
[19:57:34] <bjs> gggpkm: what?
[19:57:57] <gggpkm> do you use vim to write python
[19:58:02] <gggpkm> if you can tell
[19:58:18] <bjs> No I do not use vim (anymore), where are these questions going?
[19:58:23] <llua> gggpkm: because i don't think you are asking them in good faith
[19:58:24] *** Quits: ripdog_ (~quassel@user/ripdog) (Ping timeout: 250 seconds)
[19:58:35] <mastardet> llua: +1
[19:58:51] <gggpkm> llua, you are wrong
[19:58:58] *** Joins: especial (~especial@cm-84.214.207.74.getinternet.no)
[19:59:39] *** Quits: wyclif (~wyclif@user/wyclif) (Quit: leaving)
[19:59:44] <bilb_ono> I have a large tuple - 1000 items. how can I add a trailing comma to this? Or make a new tuple with those items and a trailing comma?
[19:59:52] <bilb_ono> tup + (,) ?
[20:00:03] <bjs> bilb_ono: a trailing comma isn't part of the tuple object
[20:00:08] <bjs> bilb_ono: (1,2,) and (1,2) are the same object
[20:00:23] <bjs> bilb_ono: do you mean you want to print the tuple out with a trailing comma?
[20:00:58] <bilb_ono> its for psycopg2. For some reason when there is a trailing comma in my argument parameters it works and if not it says TypeError: not all arguments converted during string formatting
[20:01:12] *** Quits: ice99 (~ice9@user/ice9) (Ping timeout: 265 seconds)
[20:01:12] *** Quits: MrFantastik (~Thunderbi@rrcs-184-74-43-235.nys.biz.rr.com) (Quit: MrFantastik)
[20:01:19] <bjs> bilb_ono: do you mean like `(x,)` works but `(x)` doesn't?
[20:01:21] *** Quits: vladoski (~vladoski@2001:b07:add:d406:4d23:3b14:6c48:9caf) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:01:30] *** Joins: MrFantastik (~Thunderbi@rrcs-184-74-43-235.nys.biz.rr.com)
[20:01:31] *** Quits: MrFantastik (~Thunderbi@rrcs-184-74-43-235.nys.biz.rr.com) (Client Quit)
[20:01:56] <bilb_ono> yeah
[20:01:57] <bjs> bilb_ono: note that `(1)` isn't a tuple,  but `(1,)` is.
[20:02:16] <mastardet> bilb_ono: like this? my_tuple =  ("21",) + ("123123",) + (",",)
[20:02:39] *** Quits: LemurP (~lemurp@109.74.190.250) (Ping timeout: 265 seconds)
[20:03:28] *** Joins: vladoski (~vladoski@2001:b07:add:d406:4d23:3b14:6c48:9caf)
[20:04:39] <bjs> gggpkm: I'm also not really sure where your questions are going
[20:05:14] *** Quits: gggpkm (~gggpkm@60.10.194.47) (Ping timeout: 272 seconds)
[20:06:09] *** Parts: hemmond (~hemmond@mail.artisys.cz) ()
[20:06:25] *** Quits: vladoski (~vladoski@2001:b07:add:d406:4d23:3b14:6c48:9caf) (Client Quit)
[20:07:30] *** Joins: vladoski (~vladoski@2001:b07:add:d406:4d23:3b14:6c48:9caf)
[20:08:28] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[20:08:32] <bilb_ono> mastardet: no. one second, getting a code sample
[20:08:49] <bjs> bilb_ono: isn't it just what i said? this is a common thing people forget, that `(x)` doesn't make a tuple
[20:08:55] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[20:09:22] <bilb_ono> bjs: so if I have a list of items A , and I do tuple(A), youre saing it should put all the items along with a trailing comma?
[20:09:37] <bjs> bilb_ono: the trailing comma has nothing to do with the object. Tuples don't have "trailing commas" inside them
[20:09:47] *** Quits: kikijiki (~Thunderbi@user/kikijiki) (Quit: kikijiki)
[20:09:58] <bjs> bilb_ono: it's just part of the syntax.  In Python the expression `(1,2,3)` makes a tuple and so does `(1,2,3,)` and they make *the same* tuple
[20:10:08] <bjs> bilb_ono: but `(1)` is not even a tuple at all
[20:10:23] <bilb_ono> https://bpa.st/MQPA
[20:10:33] <bjs> bilb_ono: yes, b is not a tuple
[20:10:36] <bjs> it's just a string
[20:10:51] <bilb_ono> I am trying to figure out how to format my list so that its more like a (line 5)
[20:11:06] *** Quits: qunzhong_luxian (~qunzhong_@68.235.43.166) (Quit: Textual IRC Client: www.textualapp.com)
[20:11:10] <bilb_ono> my list is too long to type and comes from another object
[20:11:15] *** Joins: pnoud (~pnoud@user/pnoud)
[20:11:17] <bjs> bilb_ono: what do you mean "format my list".  If you're writing them manually just put a comma on the end if there's only 1 item
[20:11:32] <bjs> bilb_ono: if it's "coming from another object" then you're not typing it manually and so commas are irrelevant
[20:11:33] <bilb_ono> I cant format them manually, its a list of 1000 ids
[20:11:37] <mastardet> bilb_ono: I wouldn't do that. I'd use ','.join(your_list)
[20:11:56] <bjs> bilb_ono: okay but then trailing commas are irrelevant
[20:12:00] <mastardet> that's the way
[20:12:11] *** Quits: upsala1 (~zcb@185.213.155.160) (Ping timeout: 268 seconds)
[20:12:14] <bilb_ono> ok ill remake the code sample with the item in question. I guess its a question of how to properly format something so that it can be used by psycopg
[20:12:21] <bjs> bilb_ono: because tuples and lists don't contain commas in them, that's just how you spell them when you type them manually in a .py file
[20:12:49] <bilb_ono> I understand that.. but I dont know how to make them then, from a list. is it just tuple(some_list) ?
[20:13:00] <bjs> bilb_ono: you should be able to just pass the list
[20:13:06] <bilb_ono> which should work exactly the same as manually entering (1,2,3,)
[20:13:10] <bjs> bilb_ono: but yes, tuple(some_list) will make a tuple
[20:13:19] <bjs> bilb_ono: yes `tuple([1,2,3])` is the same as `(1,2,3)`
[20:13:31] *** Quits: varaindemian (~varaindem@86.124.78.162) (Quit: Client closed)
[20:13:38] <bilb_ono> is that the same as `(1,2,3,)` ?
[20:13:43] <bjs> bilb_ono: yes
[20:13:54] <bilb_ono> so they are all equivalent
[20:14:06] <bjs> bilb_ono: in the same way that 1.0 and 1.00 and 1.000 are all the same number.  Inside the computer you don't actually store a dot and some zeros, they're just part of the grammar
[20:14:19] <bjs> bilb_ono: yes, (1,2,3) and (1,2,3,) are bits of Python code that mean the same thing.
[20:15:13] *** Quits: shibboleth (~shibbolet@gateway/tor-sasl/shibboleth) (Quit: shibboleth)
[20:16:02] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 252 seconds)
[20:16:05] *** Joins: ice9 (~ice9@user/ice9)
[20:16:34] *** Joins: Haxxa (~Haxxa@122-199-10-189.ip4.superloop.com)
[20:16:38] *** Quits: vladoski (~vladoski@2001:b07:add:d406:4d23:3b14:6c48:9caf) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:16:55] *** Quits: clawh (~clawh@194.127.167.100) (Read error: Connection reset by peer)
[20:17:01] *** Joins: p-i- (~Ohmu@125.25.117.240)
[20:17:05] *** Joins: akaWolf (~akaWolf@akawolf.org)
[20:17:17] *** Joins: clawh (~clawh@194.127.167.100)
[20:17:47] <mastardet> bilb_ono: you can answer your questions by doing it in your python terminal. E.g. tuple((1,2,3)) == (1,2,3) will return True
[20:18:31] *** drincruz_ is now known as drincruz
[20:19:01] <mastardet> you can also play with "type". E.g. type((1,2,3))
[20:19:20] *** Quits: clawh (~clawh@194.127.167.100) (Remote host closed the connection)
[20:19:38] *** Quits: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Remote host closed the connection)
[20:19:48] *** Joins: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[20:19:57] *** Joins: clawh (~clawh@194.127.167.100)
[20:20:37] *** Joins: vladoski (~vladoski@2001:b07:add:d406:4d23:3b14:6c48:9caf)
[20:21:04] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 272 seconds)
[20:21:42] <bilb_ono> ok but so why does this happen? https://bpa.st/M7MQ
[20:21:45] <bilb_ono> if a == b
[20:21:50] *** Quits: clawh (~clawh@194.127.167.100) (Remote host closed the connection)
[20:22:17] <bjs> bilb_ono: a != b
[20:22:22] <bjs> bilb_ono: b is a string, a is a tuple there
[20:22:22] *** Joins: clawh (~clawh@194.127.167.100)
[20:22:44] <bilb_ono> because its a single item?
[20:23:06] <bjs> bilb_ono: because `(1+3)*2` is not a tuple either. Putting brackets around things does not make them tuples
[20:23:14] *** Joins: anddt (~anddt@net-93-144-12-118.cust.dsl.teletu.it)
[20:23:37] <bjs> bilb_ono: the commas are required to spell a tuple out in a .py file, and if you only have 1 thing then you *must* type it with a trailing comma.
[20:23:51] *** Quits: clawh (~clawh@194.127.167.100) (Remote host closed the connection)
[20:23:51] *** Quits: vladoski (~vladoski@2001:b07:add:d406:4d23:3b14:6c48:9caf) (Client Quit)
[20:23:51] <bjs> bilb_ono: (1,) is a tuple but (1) is not.
[20:23:58] <bilb_ono> ok Im understanding now
[20:24:04] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[20:24:19] *** Quits: nre (~nre@55d47ae6.access.ecotel.net) (Quit: Leaving.)
[20:24:28] *** Joins: clawh (~clawh@194.127.167.100)
[20:25:09] *** Joins: hyperknot (~hyperknot@dynamic-046-114-092-134.46.114.pool.telefonica.de)
[20:25:20] *** Quits: clawh (~clawh@194.127.167.100) (Remote host closed the connection)
[20:25:27] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 268 seconds)
[20:25:49] *** Joins: clawh (~clawh@194.127.167.100)
[20:26:39] <bilb_ono> but when I do c = tuple(['807b777a-c6aa-484e-81b8-b3221da473d8','887b777a-c6aa-484e-81b8-b3221da473d8']) and cur.execute(query,c) it does the *** TypeError: not all arguments converted during string formatting
[20:26:48] <bilb_ono> and when I do type(c) it says its a tuple
[20:27:05] <bilb_ono> manually entered tuple a is the only one I can get to work properly inthe query
[20:27:15] <bjs> bilb_ono: well c has 2 things in it but your query string only has 1 %s
[20:27:17] *** Quits: mkellis (~Calibellu@2607:9000:0:70::b31e) (Quit: Textual IRC Client: www.textualapp.com)
[20:27:18] *** Quits: node1 (~node1@user/node1) (Ping timeout: 268 seconds)
[20:27:26] <bjs> a only had 1 thing in it
[20:27:30] <bilb_ono> oh
[20:27:52] <bilb_ono> dang I need to insert the actual tuple as a string, not a tuple full of arguments
[20:28:03] <bjs> bilb_ono: what?
[20:28:13] *** Quits: justinf210 (~justinf21@51.sub-97-43-193.myvzw.com) (Read error: Connection reset by peer)
[20:28:15] <bjs> bilb_ono: no you just have multiple %s for each of the things in the tuple
[20:28:33] <bilb_ono> bjs: like I want to check that catalogitemid is in a list of say 1000 ids is the overall goal here
[20:28:45] <bilb_ono> so I cant use %s for all 1000 items
[20:28:48] *** Joins: vladoski (~vladoski@2001:b07:add:d406:4d23:3b14:6c48:9caf)
[20:29:07] <bilb_ono> I need a dynamically sized tuple to actually exist in the resulting sql query
[20:29:32] <amogorkon> tuples can't be "dynamically sized"
[20:29:47] <bjs> bilb_ono: you mean you want to find the rows in the table whose categoryid are in that list of 1000 ids?
[20:29:53] <bjs> or is that not what you meant?
[20:30:11] <bilb_ono> yeah thats what I mean
[20:31:05] *** Joins: jdmark2 (~jdmark@172.58.172.59)
[20:31:09] <bilb_ono> amogorkon: maybe thats the wrong word but im hoping to pass in sql a list of ? length and then the query will check for the rows where the catalogitemid is in that list
[20:31:13] <bjs> bilb_ono: well you can make a string with 1000 %s's (which you can do programmatically safely if you're careful);  maybe it makes sense to make another table in the database to do the search for though?
[20:31:33] *** Quits: jdmark2 (~jdmark@172.58.172.59) (Remote host closed the connection)
[20:31:48] <bjs> because a query with 1000 parameters seems a bit big to me? but I don't think I really know how well things would handle it
[20:31:57] <bilb_ono> ah interesting idea. so insert all items in the list and then join against those?
[20:32:35] <bjs> bilb_ono: I mean SQL is for relational databases so my brain will immediately jump to trying to write it in a relational way
[20:32:41] <bjs> yeah
[20:33:14] <bilb_ono> ok ill try that instead
[20:33:21] <bjs> if you care about performance then maybe that's not the ideal way, I cannot claim to be an expert in this area :)
[20:34:32] *** Quits: ctrypoph (~ctrypoph@99-51-11-77.lightspeed.brhmmi.sbcglobal.net) (Quit: -a- Connection Timed Out)
[20:34:42] *** Quits: jdmark (~jdmark@67.8.137.130) (Ping timeout: 268 seconds)
[20:35:01] *** Quits: acresearch (~acresearc@user/acresearch) (Ping timeout: 272 seconds)
[20:35:35] *** Joins: FluffyMask (~FluffyMas@user/fluffymask)
[20:38:25] *** Quits: pneff (~pneff@2a02:168:fedc:0:4961:9552:50a:6c11) (Ping timeout: 268 seconds)
[20:38:37] *** Joins: ctrypoph (~ctrypoph@2600:1702:3000:9090:6d7f:1c9d:1aea:24aa)
[20:39:21] *** Joins: pneff (~pneff@2a02:168:fedc:0:4961:9552:50a:6c11)
[20:39:30] *** Quits: stultusv (~Stultus_V@user/stultusv) (Quit: WeeChat 3.3-dev)
[20:40:09] *** Quits: vladoski (~vladoski@2001:b07:add:d406:4d23:3b14:6c48:9caf) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:42:11] *** Joins: mekhami (~lawrence@135.84.115.18)
[20:42:15] *** Joins: cidtest (~cidtest@89.238.185.213)
[20:42:34] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:d827:a614:8af:2d72) (Quit: Leaving)
[20:42:41] *** Quits: Blankspace (~abcd@user/blankspace) (Quit: why did you ban me)
[20:43:08] *** Quits: cidtest (~cidtest@89.238.185.213) (Client Quit)
[20:43:25] *** Joins: cidtest (~cidtest@185.156.172.202)
[20:43:37] *** Quits: cidtest (~cidtest@185.156.172.202) (Client Quit)
[20:43:54] *** Joins: cidtest (~cidtest@89.238.185.210)
[20:44:16] *** Joins: Hummer12007 (~Hummer120@static.214.80.76.144.clients.your-server.de)
[20:44:52] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 268 seconds)
[20:45:16] *** Quits: cidtest (~cidtest@89.238.185.210) (Client Quit)
[20:45:33] *** Quits: anddt (~anddt@net-93-144-12-118.cust.dsl.teletu.it) (Quit: Leaving)
[20:45:39] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[20:46:55] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:48:05] <mastardet> bilb_ono: you could do it like this: https://bpa.st/C5KQ
[20:48:13] *** Joins: Laibsch (~leggewie@dynamic-002-243-019-213.2.243.pool.telefonica.de)
[20:49:03] <bjs> mastardet: really no
[20:49:12] <habnabit_> mastardet, please don't suggest sql injecition
[20:49:25] *** Joins: drincruz_ (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com)
[20:49:32] *** Quits: pneff (~pneff@2a02:168:fedc:0:4961:9552:50a:6c11) (Ping timeout: 250 seconds)
[20:49:35] <Laibsch> I am looking for equivalent of "at" to schedule a task with python in the future.  What is a good candidate?  I'm happy to use "at" itself as well.
[20:49:43] <mastardet> habnabit_: I'm not suggesting sql injection
[20:49:55] <bjs> mastardet: that's exactly what your code is though
[20:50:09] <mastardet> bjs: it could be vulnerable, but I'm not suggesting it
[20:50:14] *** Joins: ctrypoph_ (~ctrypoph@2607:fb90:a905:a5a3:fe01:c66d:4cc6:d0d6)
[20:50:17] <mastardet> he is learning
[20:50:35] <habnabit_> mastardet, 'he'? i don't think that learning by writing vulnerable code unintentionally is a good idea
[20:50:45] <bjs> ... maybe let's not suggest doing it like this, even for beginners?
[20:51:07] <mastardet> omg
[20:51:45] <bjs> I mean you are free to, but don't act surprised when a bunch of people go "no don't do that" :)
[20:52:05] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 258 seconds)
[20:52:13] <mastardet> yes, I'm free to do it and that's what I did
[20:52:18] <mastardet> there are steps in learning
[20:52:35] <habnabit_> mastardet, "get owned" is not a step i agree with
[20:52:36] *** Joins: Barones (~Barones@2804:48dc:8500:0:5c70:83ad:f4fc:2180)
[20:52:46] <habnabit_> mastardet, why not teach them the right way?
[20:53:02] <mastardet> he is not building a web service, nor a site
[20:53:04] <mastardet> he is learning
[20:53:16] <habnabit_> mastardet, 'he'? again, why does that have to include writing vulnerable code?
[20:53:25] <mastardet> he/she/it, whatever
[20:53:31] <habnabit_> mastardet, just say 'they' if you don't know
[20:53:37] <mastardet> I will say what I want
[20:53:52] *** Quits: ctrypoph (~ctrypoph@2600:1702:3000:9090:6d7f:1c9d:1aea:24aa) (Ping timeout: 250 seconds)
[20:53:55] <mastardet> you are trying me to behave the way you want
[20:54:05] <habnabit_> mastardet, well, again, don't be surprised if you get chided
[20:54:08] <mastardet> who are you to do that?
[20:54:09] *** Joins: reset (~reset@user/reset)
[20:54:15] *** ChanServ sets mode: +o Yhg1s
[20:54:17] <mastardet> this is a community
[20:54:18] <bjs> mastardet: habnabit_ just wants everyone to treat each other with respect
[20:54:26] <mastardet> you are killing it the way you act
[20:54:28] <Yhg1s> mastardet: this is a community with standards and codes of conduct.
[20:54:33] <mastardet> and I'm not disrespecting anyone
[20:54:43] <mastardet> you should respect that I'm helping someone
[20:54:44] <Yhg1s> mastardet: you very much are. And your suggestion was actively harmful.
[20:54:49] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[20:54:55] <habnabit_> mastardet, i would not consider your suggestion helpful :)
[20:55:06] <mastardet> this is amazing
[20:55:08] *** Yhg1s sets mode: +b *!*mastardet@user/mastardet
[20:55:08] *** mastardet was kicked by Yhg1s (Come back after you've given some thought to what it means to be helpful.)
[20:55:15] *** ChanServ sets mode: +o infobob
[20:55:15] *** infobob sets mode: +b $a:mastardet
[20:55:15] *** infobob sets mode: -b *!*mastardet@user/mastardet
[20:55:48] <habnabit_> it is baffling when people attempt to defend sqli
[20:56:24] *** Quits: mekhami (~lawrence@135.84.115.18) (Quit: WeeChat 2.8)
[20:56:53] *** Yhg1s sets mode: -o Yhg1s
[20:57:28] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 252 seconds)
[20:58:20] <deniska> (well, to be fair, passing things to IN in sql is rather annoying, not that many drivers support it)
[20:58:32] <habnabit_> some do! psycopg2 does
[20:58:50] *** Joins: cliluw (~cliluw@47.147.80.149)
[20:58:59] <habnabit_> and sqlalchemy supports any driver that otherwise doesn't, even without using the ORM or query builder
[20:59:03] <Yhg1s> all the more reason not to suggest SQL, but rather a query builder of some kind :) But even with pure SQL it's not that hard.
[20:59:29] *** Joins: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net)
[20:59:49] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[21:00:15] *** infobob sets mode: -o infobob
[21:00:46] <bjs> habnabit_: I mean who hasn't written code that is sql-injectable at some point
[21:00:53] <bjs> mine did get deployed once though... oops
[21:01:35] *** Joins: Hazza (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[21:02:32] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[21:02:34] <deniska> I too wrote code which would give an unsuspecting programmer a heart attack, but it specifically was never fed user input, just a bunch of SQL queries generated using constants in the code
[21:02:41] *** Joins: pneff (~pneff@2a02:168:fedc:0:4961:9552:50a:6c11)
[21:02:55] <deniska> I could've used a query builder I guess…
[21:03:39] <habnabit_> bjs, i know i wrote some injectable code as some of the first code i wrote.. modifying the punbb php source and i had no idea what i was doing or that sqli was a thing i needed to think about
[21:03:41] *** Quits: Haxxa (~Haxxa@122-199-10-189.ip4.superloop.com) (Ping timeout: 268 seconds)
[21:03:42] *** Quits: shad (~shad@user/shad) (Ping timeout: 268 seconds)
[21:03:57] *** Joins: mekhami (~lawrence@135.84.115.18)
[21:03:58] *** Quits: drincruz_ (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Ping timeout: 258 seconds)
[21:04:07] <bjs> habnabit_: sure i was younger and less careful too, I'd *hope* if I had to touch sql these days I'd not make the same mistake :P
[21:04:14] <habnabit_> (but i would've welcomed someone telling me why i shouldn't)
[21:04:20] *** Joins: ice9 (~ice9@user/ice9)
[21:04:37] *** Quits: MikZyth (~MikZyth@188.65.242.79) (Quit: WeeChat 3.1)
[21:05:04] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[21:05:44] *** Joins: MikZyth (~MikZyth@188.65.242.79)
[21:06:10] <deniska> I'm also very sad when I look at this corner of our ERP which talks to some other databases via a helper function with a single param called "sql" :(
[21:06:18] <bilb_ono> I would not have known that was sql injection for the record
[21:06:33] <deniska> I looked at refactoring it, but then I saw ADO DB and nope, not touching that
[21:07:11] <deniska> bilb_ono: once any kind of string manipulation is involved, assume injection unless carefully proven otherwise
[21:07:51] *** Joins: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com)
[21:07:54] <bjs> bilb_ono: I once got told off for deploying sql-injectable code to someones website, I was much younger and not so careful and it was a bit embarassing but now I have a strong reaction to anything like that
[21:08:04] <bjs> because it's such a simple thing and the consequences can be... unfortunate :)
[21:08:18] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[21:08:41] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[21:08:52] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[21:09:20] *** Quits: ctrypoph_ (~ctrypoph@2607:fb90:a905:a5a3:fe01:c66d:4cc6:d0d6) (Read error: Connection reset by peer)
[21:11:43] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[21:11:46] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 265 seconds)
[21:12:35] *** Quits: mekhami (~lawrence@135.84.115.18) (Quit: WeeChat 2.8)
[21:12:49] *** Joins: ctrypoph (~ctrypoph@99-51-11-77.lightspeed.brhmmi.sbcglobal.net)
[21:12:56] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 268 seconds)
[21:13:08] *** Joins: humanBird2 (~humanBird@2603-8001-7003-5966-75c9-43c6-fd77-9901.res6.spectrum.com)
[21:13:28] *** humanBird2 is now known as humanbird
[21:15:50] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[21:16:23] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[21:16:53] *** Joins: Jormungandr89 (~brad@136.49.61.2)
[21:18:31] *** Quits: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com) (Quit: Leaving)
[21:21:15] *** Quits: boxelephant (~boxelepha@209.143.87.130) (Ping timeout: 268 seconds)
[21:24:36] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[21:24:49] *** Joins: boxelephant (~boxelepha@209.143.87.130)
[21:24:51] *** Joins: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com)
[21:25:08] *** Joins: jinsun_ (~jinsun_@user/jinsun)
[21:25:35] *** Joins: Naan (~naan@user/naan)
[21:26:03] *** Joins: upsala (~zcb@185.213.155.160)
[21:26:09] <bilb_ono> yeah im gonna use sqlalchemy
[21:26:18] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[21:26:31] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:27:16] *** Joins: Betal (~Beta@user/betal)
[21:27:48] *** Quits: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com) (Quit: Leaving)
[21:28:04] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[21:28:10] *** Joins: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com)
[21:28:18] *** Joins: aslicedbanjo (~aslicedba@host81-157-178-154.range81-157.btcentralplus.com)
[21:28:21] *** Joins: magla (~gelignite@55d471c8.access.ecotel.net)
[21:28:54] *** Quits: russw (~russw@174.112.137.191) (Read error: Connection reset by peer)
[21:29:13] *** Joins: GrandPa-G (~GrandPa-G@www.rgconsulting.com)
[21:29:51] <The-Compiler> I'm using an API which used to raise ValueError("DeserializationError") in earlier versions, but raises its own DeserializationError properly now. How do I best unify the two variants? The best thing I could come up with is https://paste.the-compiler.org/view/65795c0a which still seems meh
[21:30:11] <GrandPa-G> I am looking for someone who is willing to dedicate about an hour+-  helping resolve a complex problem with a python application on raspberry pi connected to M4 circuitpython over serial that seems to suspend after some random amount of time. There are $ available if that is allowed.
[21:30:17] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[21:30:56] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[21:31:09] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[21:31:33] *** Joins: mkellis (~Calibellu@68.235.43.158)
[21:32:15] *** Quits: chronon (~chronon@user/chronon) (Quit: leaving)
[21:33:23] *** cvmn is now known as caveman
[21:33:52] <AhmedAmerican> is pipenv is highly used than `venv` ?
[21:33:54] *** Quits: boB_K7IQ (~boB_K7IQ@c-73-254-117-91.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[21:34:09] <The-Compiler> AhmedAmerican: "highly used"?
[21:34:25] *** Joins: tims (~tims@193-82-247-42.tpgi.com.au)
[21:34:29] <The-Compiler> AhmedAmerican: it's also not really a replacement for venv, I'd expect it to use venv under the hood even
[21:34:56] *** Quits: clawh (~clawh@194.127.167.100) (Remote host closed the connection)
[21:35:09] *** Quits: codificat (~pep@66.red-79-154-168.dynamicip.rima-tde.net) (Quit: leaving)
[21:35:40] <jbe> it does, yes.
[21:36:05] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[21:36:22] *** Joins: thekingofbandit (thekingofb@user/thekingofbandit)
[21:37:04] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[21:37:33] *** Joins: clawh (~clawh@194.127.167.100)
[21:38:05] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:1ddf:df90:39d5:9eb3)
[21:38:14] <c4017w> Can @dataclass keys contain whitespace?
[21:38:31] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:38:54] *** Joins: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net)
[21:39:35] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[21:39:41] <sco1> No
[21:40:11] <c4017w> ok
[21:41:32] *** Quits: death916 (~death916@user/death916) (Ping timeout: 258 seconds)
[21:41:44] *** Joins: node1 (~node1@user/node1)
[21:42:08] *** Quits: tims (~tims@193-82-247-42.tpgi.com.au) (Ping timeout: 272 seconds)
[21:43:12] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 244 seconds)
[21:43:52] *** Joins: Sasazuka (~Sasazuka@user/sasazuka)
[21:45:06] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[21:45:56] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[21:49:06] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[21:50:06] *** Joins: spacecadet (~fluiD@66.186.209.60)
[21:50:19] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:50:40] *** Quits: colorado (~fluiD@66.186.209.60) (Read error: Connection reset by peer)
[21:51:46] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-bc1c-de87-81b2-e6e2.res6.spectrum.com)
[21:51:47] *** Quits: HansGeering (~HansGeeri@host86-172-28-182.range86-172.btcentralplus.com) (Ping timeout: 268 seconds)
[21:53:18] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-0458-a457-b653-bd98.res6.spectrum.com) (Ping timeout: 272 seconds)
[21:53:45] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[21:54:25] <greyltc> Yhg1s: you were right in that the only reason my other, .yaml file was making it into the package was because I was also using it later in the `[options.data_files]` section
[21:54:40] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[21:54:59] *** cvmn is now known as caveman
[21:55:12] <greyltc> so now I'm thinking that `[options.package_data]` is entirely broken
[21:55:47] <greyltc> and this is new (since June 7th)
[21:56:06] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[21:56:15] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:56:31] *** Quits: NeuroWinter (~NeuroWint@107.172.219.233) (Ping timeout: 272 seconds)
[21:56:34] <greyltc> but rolling back setuptools doesn't fix it
[21:57:53] *** Quits: noctavian (~noctavian@gateway/tor-sasl/noctavian) (Remote host closed the connection)
[22:01:33] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Ping timeout: 265 seconds)
[22:01:46] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[22:02:03] <greyltc> so I'm so stumped. I can't even get any package_data to be included when I follow the exact syntax in the docs: https://setuptools.readthedocs.io/en/latest/userguide/declarative_config.html?highlight=package_data
[22:02:03] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:02:12] *** Joins: noctavian (~noctavian@gateway/tor-sasl/noctavian)
[22:02:12] *** Joins: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net)
[22:02:53] *** Joins: death916 (~death916@user/death916)
[22:03:26] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[22:03:31] <greyltc> I think I'll just file a bug report and have someone there tell me what I'm doing wrong :P
[22:03:32] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[22:04:47] *** Joins: Narrat (~omnius@p200300df5f3a682506ea56fffe2e7cdc.dip0.t-ipconnect.de)
[22:06:18] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[22:06:36] *** Joins: Auron (~Auron956@user/auron)
[22:07:28] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[22:07:29] *** Quits: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Ping timeout: 272 seconds)
[22:07:44] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[22:07:57] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:08:25] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[22:09:34] *** Joins: mexen (uid495612@user/mexen)
[22:09:57] *** Quits: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com) (Remote host closed the connection)
[22:10:15] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Ping timeout: 265 seconds)
[22:10:25] *** Joins: y04nn (~y04nn@91.193.4.106)
[22:12:04] *** Joins: pnoud (~pnoud@user/pnoud)
[22:12:06] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[22:12:48] *** Quits: node1 (~node1@user/node1) (Read error: No route to host)
[22:12:57] *** Joins: node1 (~node1@user/node1)
[22:13:09] <greyltc> anyone know what `preserve_mode` is here?
[22:13:12] <greyltc> https://github.com/pypa/setuptools/commit/70e95ee66a17e1655f70c9dbda107cea958f583f#diff-8055b82a058bbf8bd5c5563d909e425059dc6a1c8417ad78d6f64479f834e71bL123-R129
[22:13:36] <greyltc> and why this commit might have chucked that option?
[22:15:15] *** Quits: sebastianos (~sebastian@user/sebastianos) (Quit: ZNC 1.8.2 - https://znc.in)
[22:15:44] *** Joins: dwt_ (~dwt_@c-98-200-58-177.hsd1.tx.comcast.net)
[22:16:58] *** Joins: metah4ck1 (~meta@user/metah4ck3r)
[22:17:32] *** Quits: metah4ck1 (~meta@user/metah4ck3r) (Client Quit)
[22:17:36] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[22:17:48] *** Joins: metah4ck1 (~meta@user/metah4ck3r)
[22:18:14] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[22:19:10] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Read error: Connection reset by peer)
[22:19:33] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 268 seconds)
[22:19:40] *** Joins: akaWolf (~akaWolf@akawolf.org)
[22:19:40] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:19:49] *** Quits: JavaBean (~JavaBean@user/javabean) (Read error: Connection reset by peer)
[22:21:42] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[22:21:45] *** Quits: pizdets (~pizdets@183.182.114.175) (Ping timeout: 245 seconds)
[22:22:53] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[22:22:57] <tumbleweed> greyltc: preverse_mode sounds like it copies the mode on the file (i.e. the unix permission bits) as well as the contents
[22:23:35] *** Quits: nvz (~user@nvz.farted.online) (Quit: Lost terminal)
[22:23:46] <enrh> SQLi is the best
[22:23:54] <tumbleweed> the second half of the commit message sounds wrong, it doesn't preserve the mode at all. It just respects umask + makes the file writeable
[22:24:00] *** Quits: metah4ck1 (~meta@user/metah4ck3r) (Ping timeout: 252 seconds)
[22:24:13] * enrh prepares to defend to death
[22:25:10] <mefistofeles> enrh: it is not
[22:25:12] * mefistofeles wins
[22:26:43] <tumbleweed> greyltc: ah, no, copy_file preserves mode by default
[22:27:41] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:28:02] <greyltc> tumbleweed: ok thanks!
[22:28:10] *** Joins: nvz (~user@nvz.farted.online)
[22:28:12] *** Joins: schumaml1 (~schumaml@dslb-178-002-189-095.178.002.pools.vodafone-ip.de)
[22:28:22] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[22:28:53] <greyltc> This is probably not why I can't get package_data to work then!
[22:30:01] *** Quits: schumaml (~schumaml@dslb-178-002-190-100.178.002.pools.vodafone-ip.de) (Ping timeout: 268 seconds)
[22:30:36] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 258 seconds)
[22:30:46] *** Joins: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com)
[22:30:46] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[22:30:59] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Ping timeout: 256 seconds)
[22:31:36] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 268 seconds)
[22:31:43] *** Joins: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[22:33:16] *** Quits: thekingofbandit (thekingofb@user/thekingofbandit) (Remote host closed the connection)
[22:33:43] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 268 seconds)
[22:34:05] *** Joins: HansGeering (~HansGeeri@host86-172-28-182.range86-172.btcentralplus.com)
[22:34:38] *** Quits: afidegnum (~user@102.176.94.23) (Ping timeout: 268 seconds)
[22:34:40] *** Quits: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net) (Quit: Client closed)
[22:36:36] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Ping timeout: 272 seconds)
[22:37:07] *** Joins: jhulten (jhulten@gateway/vpn/protonvpn/jhulten)
[22:37:25] *** Joins: goldfish (~goldfish@user/goldfish)
[22:37:48] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[22:38:13] *** Joins: JavaBean (~JavaBean@user/javabean)
[22:38:15] <Soni> say, can we have TLS-SRP support?
[22:38:18] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[22:39:04] *** Quits: dvx (~dvx@185.63.97.64) (Quit: dvx)
[22:39:04] *** Joins: jhulten_ (jhulten@gateway/vpn/protonvpn/jhulten)
[22:39:13] *** Joins: chronon (~chronon@user/chronon)
[22:39:47] *** Joins: jhulten__ (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[22:41:14] *** Quits: jhulten (jhulten@gateway/vpn/protonvpn/jhulten) (Ping timeout: 252 seconds)
[22:42:29] *** Quits: node1 (~node1@user/node1) (Ping timeout: 258 seconds)
[22:43:38] *** Quits: jhulten_ (jhulten@gateway/vpn/protonvpn/jhulten) (Ping timeout: 258 seconds)
[22:43:39] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[22:44:14] *** Joins: node1 (~node1@user/node1)
[22:45:27] *** Quits: chronon (~chronon@user/chronon) (Quit: leaving)
[22:45:33] *** Joins: Blankspace (~abcd@user/blankspace)
[22:45:56] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Ping timeout: 258 seconds)
[22:46:25] *** Joins: pragmaticenigma (~pragmatic@user/pragmaticenigma)
[22:47:03] *** Joins: goepsilongo (~chacho@2603-7000-ab00-62ed-0000-0000-0000-1000.res6.spectrum.com)
[22:47:18] *** Quits: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Read error: No route to host)
[22:47:21] *** Joins: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[22:49:08] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Ping timeout: 268 seconds)
[22:49:34] *** Quits: pneff (~pneff@2a02:168:fedc:0:4961:9552:50a:6c11) (Ping timeout: 250 seconds)
[22:50:26] *** Joins: thekingofbandit (thekingofb@user/thekingofbandit)
[22:50:38] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[22:51:22] <rockSTONE> this is odd... i have added signal handlers to my asyncio loop to handle ctrl+c and such and it all works fine to shutdown my running program, but if i launch a separate "heartbeat" thread who's only  responsibility is to print a tick every 10sec then ctrl+c never gets handled and the app never terminates ... the heartbeat thread is *dead* simple ... am i doing something very wrong mixing asyncio and my own threads  ?
[22:51:39] <rockSTONE> only "kill -9" will stop the app
[22:52:15] *** Quits: ElectricSheep (~esheep_zn@pool-100-19-29-200.phlapa.fios.verizon.net) (Ping timeout: 272 seconds)
[22:52:32] *** Quits: litharge (litharge@libera/bot/litharge) (Quit: upgrades)
[22:52:35] *** Quits: jinsun_ (~jinsun_@user/jinsun) (Read error: Connection reset by peer)
[22:52:48] *** Joins: litharge (litharge@libera/bot/litharge)
[22:53:12] *** Quits: litharge (litharge@libera/bot/litharge) (Read error: Connection reset by peer)
[22:53:20] *** Joins: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[22:53:31] *** Quits: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Remote host closed the connection)
[22:53:52] *** Joins: litharge (litharge@libera/bot/litharge)
[22:54:16] <bjs> rockSTONE: well, it's hard to say if you're doing it wrong because we don't know how you're doing it.
[22:54:32] *** ChanServ sets mode: +o litharge
[22:54:38] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Remote host closed the connection)
[22:54:40] *** jhulten__ is now known as jhulten
[22:55:11] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[22:55:28] <rockSTONE> just assume i'm doing it the right way :)   lol
[22:55:39] <bjs> rockSTONE: if you're doing it the right way then no there's no problem
[22:55:40] <rockSTONE> gotta love trying to help people with super vague problems
[22:55:41] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 265 seconds)
[22:55:58] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[22:56:23] <bjs> rockSTONE: without seeing the code or really any more detail it's going to be really hard to say whether the signal handlers even have anything to do with it
[22:56:39] *** Joins: derelict (~derelict@user/derelict)
[22:56:51] <rockSTONE> yeah it's not, right after i spoke here on irc i realized something really wonky is going on, a sure sign that i'm doing something stupid
[22:56:56] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Quit: Leaving)
[22:57:36] <rockSTONE> i'm inside an async function calling mythread.start() and it's blocking right there
[22:57:48] <bjs> rockSTONE: calling start won't block
[22:57:51] <bjs> rockSTONE: maybe you can share the code?
[22:58:08] <rockSTONE> hahahaha, i was calling mythread.run()
[22:58:15] <bjs> well that would do it
[22:58:32] <rockSTONE> been far too long since i've been doing python threading
[22:58:39] *** Joins: sebastianos (~sebastian@user/sebastianos)
[22:58:51] <altendky> rockSTONE: what does your thread do that it can't just be an async task?
[22:58:51] <bjs> rockSTONE: I'm sure the threading docs has examples
[22:59:01] *** Joins: qlixed (~qlixed@152.170.36.244)
[22:59:04] <bjs> rockSTONE: also if you're already using async there might not be a need for threads at all :)
[22:59:17] *** Quits: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Read error: No route to host)
[22:59:18] *** Joins: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[22:59:34] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Ping timeout: 252 seconds)
[23:00:11] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[23:00:43] <rockSTONE> this is just a stupid heartbeat thing i wanted to tick and not have to worry about a running loop in some cases
[23:00:57] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:01:11] <altendky> welp, i don't think print is thread safe so expect output mixing etc
[23:01:33] <altendky> but, if your async loop is dead, maybe your heartbeat should be as well... of course, it depends.
[23:01:43] *** Joins: pneff (~pneff@2a02:168:fedc:0:4961:9552:50a:6c11)
[23:01:54] <enrh> What is it called when you can MyArbitaryClass['foo']? Note the [ and ]
[23:02:02] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[23:02:29] *** Quits: defn (~n0b0dy@user/defn) (Ping timeout: 252 seconds)
[23:02:29] <bjs> enrh: generally people say "subscript" or "index" for the generic  x[i] syntax
[23:02:31] *** Joins: sudorm (~sudorm@2a01cb0083a9c100d8c6f179b25d8569.ipv6.abo.wanadoo.fr)
[23:02:46] *** Quits: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Read error: No route to host)
[23:02:46] <altendky> if referring to type hints, that's using `typing.Generic`
[23:02:58] *** Joins: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[23:03:04] <bjs> in Python objects can decide for themselves what the operation actually does,  so it might be that for a particular class a different name is more appropriate
[23:04:15] *** Joins: Dyresen (bjorn@128.39.36.51)
[23:04:58] *** Joins: djapo (~archangel@user/djapo)
[23:06:02] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[23:06:25] *** Quits: pneff (~pneff@2a02:168:fedc:0:4961:9552:50a:6c11) (Ping timeout: 268 seconds)
[23:07:40] *** Joins: knull (~knull@host-92-7-34-43.as13285.net)
[23:08:57] *** Quits: knull (~knull@host-92-7-34-43.as13285.net) (Client Quit)
[23:09:17] *** Joins: Asmodean (~Asmoedean@178.115.128.129.wireless.dyn.drei.com)
[23:11:13] <enrh> Yeah I was hoping I could add a magic method
[23:11:51] <nedbat> enrh: https://docs.python.org/3/reference/datamodel.html#object.__class_getitem__
[23:12:13] *** Joins: hendursaga (~weechat@user/hendursaga)
[23:12:57] <enrh> nedbat, thank you :)
[23:13:02] <enrh> And bjs and altendky
[23:14:07] *** Joins: P1RATEZ (piratez@user/p1ratez)
[23:14:11] *** Joins: anas (~anas@196.224.51.146)
[23:14:34] *** Quits: clawh (~clawh@194.127.167.100) (Remote host closed the connection)
[23:14:46] <altendky> enrh: what is your use case?
[23:14:53] *** Joins: Julian (~tos9@python/site-packages/Julian)
[23:15:12] *** Joins: clawh (~clawh@194.127.167.100)
[23:15:16] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[23:16:05] *** Quits: clawh (~clawh@194.127.167.100) (Remote host closed the connection)
[23:16:12] *** Quits: Zweimer (~Zweimer@2a02:908:d20:26e0:d9d4:83a1:db25:1a7) (Quit: Leaving)
[23:16:30] *** Joins: clawh (~clawh@194.127.167.100)
[23:17:02] *** Quits: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Remote host closed the connection)
[23:17:19] *** Joins: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[23:17:27] *** Quits: ircuser-1 (~Johnny@71.63.241.168) (Quit: because)
[23:17:54] *** Joins: Cr4ft (~jordan@2604:3d09:7179:8a00:d91c:82a8:9021:10e9)
[23:18:19] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[23:18:19] *** Quits: clawh (~clawh@194.127.167.100) (Read error: Connection reset by peer)
[23:18:33] *** Joins: clawh (~clawh@194.127.167.100)
[23:19:39] <altendky> anyways, if for type hinting then afaik https://docs.python.org/3/library/typing.html#typing.Generic is the nominal way to do it.
[23:19:51] *** Joins: dicajo (~dicajo@072-186-122-186.res.spectrum.com)
[23:20:05] *** Joins: pneff (~pneff@2a02:168:fedc:0:4961:9552:50a:6c11)
[23:21:19] *** Joins: imp (~imp@186.205.11.214)
[23:21:29] *** Quits: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Remote host closed the connection)
[23:21:48] *** Joins: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[23:22:34] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[23:24:17] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Quit: ZNC - https://znc.in)
[23:24:30] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[23:25:00] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[23:28:37] *** Joins: Samian (~Sami@2620:10d:c091:480::1:8d08)
[23:28:51] *** Joins: Kaedenn (~kaedenn@137.229.82.89)
[23:29:21] *** Joins: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[23:30:18] *** Quits: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Read error: No route to host)
[23:30:53] *** Joins: female_student_4 (~female_st@2a01:388:243:150::1:51)
[23:31:21] <Samian> I have two python files. One calls the other using subprocess.call.   I want to change the subprocess call so it's a regular function call. Only issue is that both files are in the same folder. For the parent to call the other, the other would need to be in a folder with __init__.py, is that right?
[23:31:48] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[23:32:00] <Samian> subprocess.call sucks for remote debugging.  On my old laptop I could debug through a subprocess.call as if it were a regular function call
[23:32:14] <Samian> but not for remote debugging from what i see
[23:33:20] *** Joins: kostkon__ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[23:33:36] <nedbat> Samian: being in the same directory is fine.    from . import the_other_file;   the_other_file.the_function()
[23:33:51] <Samian> ah yes that's right!
[23:34:04] *** Quits: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Remote host closed the connection)
[23:34:29] <Samian> the child file uses arg parser and there's about 50 --flags passed through the sub process call.
[23:35:05] <altendky> you need both files to be in a package for that which means not running the first one directly and an `__init__.py` or alternative means of making a package.  otherwise you get `ImportError: attempted relative import with no known parent package`.
[23:35:51] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[23:36:10] <Samian> hmm, maybe i can update sys.argv
[23:36:38] <nedbat> Samian: why not pass the arguments as real arguments to the function?
[23:36:51] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[23:37:14] *** Quits: pneff (~pneff@2a02:168:fedc:0:4961:9552:50a:6c11) (Ping timeout: 250 seconds)
[23:37:15] *** Quits: Laibsch (~leggewie@dynamic-002-243-019-213.2.243.pool.telefonica.de) (Ping timeout: 268 seconds)
[23:37:39] <Samian> because there's a bunch of argparse stuff that I'd need to clean up.
[23:38:13] *** Quits: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Ping timeout: 265 seconds)
[23:38:46] <Samian> https://github.com/facebookresearch/dlrm/blob/master/dlrm_s_pytorch.py
[23:38:55] <Samian> search for "def run():"
[23:39:13] *** Quits: kostkon__ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Remote host closed the connection)
[23:39:19] *** Joins: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[23:39:23] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[23:39:30] <Samian> I'll test faking sys.argv
[23:39:35] * Samian is excited!
[23:39:48] *** Joins: supakeen (~user@python/site-packages/supakeen)
[23:39:48] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (Quit: leaving)
[23:40:44] *** Joins: glumanda (~manu@194-208-201-025.tele.net)
[23:42:12] *** Quits: Mulugruntz (~Mulugrunt@124-159-50-62.ppp.bbiq.jp) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:44:38] *** Quits: anas (~anas@196.224.51.146) (Ping timeout: 268 seconds)
[23:45:20] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[23:46:21] <Samian> altendky  woah you predicted the future. That's the exact error I got. otherwise you get `ImportError: attempted relative import with no known parent package`.
[23:46:50] * Samian adds an __init__.py and is excited!
[23:47:28] <altendky> then from the parent directory run `python -m thedir.outerfile`.  but, this will only work in that one directory
[23:47:44] <altendky> importing not-installed stuff is fiddly
[23:47:51] <ferros> You seem very excited tonight, Samian
[23:48:04] <altendky> but, you could just `import y` instead of `from . import y`
[23:48:08] <altendky> (still, fiddly)
[23:49:00] *** Joins: defn (~n0b0dy@user/defn)
[23:49:39] *** Joins: alguien (~alguien@user/alguien)
[23:50:03] *** Joins: ______GOD______ (~GOD@user/god/x-9778998)
[23:50:26] *** Joins: pneff (~pneff@2a02:168:fedc:0:4961:9552:50a:6c11)
[23:51:31] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:52:01] <Samian> darn now I get /home/samiw1/anaconda3/bin/python: Relative module names not supported
[23:52:19] <Samian> this is the thing that should be easy that python makes difficult
[23:52:27] <habnabit_> Samian, how are you starting python?
[23:52:34] <Samian> you know.. I'll just move the benchmark file one up.
[23:52:48] <Samian> habnabit_  I ran this: (base) [samiw1@devgpu002.ftw6 ~/repos] python -m ./dlrm/benchmark_dlrm.py
[23:53:10] *** Joins: Celeo (~Celeo@user/celeo)
[23:53:18] <habnabit_> Samian, -m doesn't take a path
[23:53:29] *** Quits: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Remote host closed the connection)
[23:53:36] * Samian googles the -m flag now
[23:53:45] <habnabit_> Samian, 19:17:28 < altendky> then from the parent directory run `python -m thedir.outerfile`
[23:53:49] *** Joins: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[23:54:16] <Samian> yes that's the instructions I attempted to follow
[23:54:25] <habnabit_> Samian, it's a module name, not a path
[23:54:33] <habnabit_> Samian, -m dlrm.benchmark_dlrm
[23:55:32] *** Quits: pneff (~pneff@2a02:168:fedc:0:4961:9552:50a:6c11) (Ping timeout: 272 seconds)
[23:55:44] *** Parts: jboy (~jboy@user/jboy) (WeeChat 3.1)
[23:55:50] *** Joins: kostkon__ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[23:56:15] <Samian> now packages two folds down are seen. ModuleNotFoundError: No module named 'dlrm_data_pytorch'
[23:56:30] <habnabit_> Samian, pastebin the full traceback
[23:56:42] *** Quits: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Remote host closed the connection)
[23:56:54] <Samian> https://pastebin.com/z6CumrBs
[23:56:55] *** Joins: corn266 (~corn266@ec2-18-217-219-218.us-east-2.compute.amazonaws.com)
[23:57:08] *** Quits: goepsilongo (~chacho@2603-7000-ab00-62ed-0000-0000-0000-1000.res6.spectrum.com) (Quit: Konversation terminated!)
[23:57:20] <habnabit_> Samian, did you mean `from . import dlrm_data_pytorch as dp
[23:57:59] <corn266> issue with caiso wherein the package cannot or does not want to operate on files that exist on filesystems other than the original
[23:58:04] <altendky> also note the `import dlrm_data_pytorch` option
[23:58:04] *** Joins: brickfat (~brickfat@user/brickfat)
[23:58:26] <corn266> aiofile 3.3.3, caio 0.6.3
[23:58:54] <Samian> if you look here https://github.com/facebookresearch/dlrm/ you see dlrm_data_pytorch.py is in the same directory as dlrm_s_pytorch.py
[23:59:23] <Samian> yet dlrm_s_pytorch.py calls it fine, which is similar to what I'm trying to do.. call code in another file in the same directory as __main__
[23:59:26] *** Joins: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3)
