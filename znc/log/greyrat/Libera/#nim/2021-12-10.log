[00:00:05] <FromDiscord> <leorize> @nwilburn\: `--dynlibOverrideAll`, then `--passL` your way to static openssl
[00:00:23] <FromDiscord> <Solitude> In reply to @hmmm "speaking of which, it": https://github.com/technicallyagd/unpack
[00:00:35] <FromDiscord> <nwilburn> hmm ok I'll play around with it. Thanks!
[00:02:47] <FromDiscord> <ni-max> sent a code paste, see https://play.nim-lang.org/#ix=3HvW
[00:03:13] <FromDiscord> <hmmm> my boi solitude that thingy looks like something that can work for me ü•≥
[00:08:01] <PMunch> Stream is live! https://www.twitch.tv/pmunche
[00:14:50] *** Quits: NimBot (~NimBot@mail.nim-lang.org) (Remote host closed the connection)
[00:15:03] *** Joins: NimBot (~NimBot@mail.nim-lang.org)
[00:15:03] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 265 seconds)
[00:18:13] *** Quits: happycorsair[m] (~happycors@2001:470:69fc:105::205) (Ping timeout: 250 seconds)
[00:19:31] *** Quits: nixfreaknim[m] (~reversem3@2001:470:69fc:105::33d1) (Ping timeout: 250 seconds)
[00:20:38] *** Quits: cheer[m] (~cheertchn@2001:470:69fc:105::39de) (Ping timeout: 268 seconds)
[00:23:04] <FromDiscord> <geekrelief> Is there an equivalent of `astGenRepr` for `PNode`?
[00:32:00] *** Joins: krux02 (~krux02@p200300e817365e0034cc1bc883b75341.dip0.t-ipconnect.de)
[00:32:40] *** Joins: cheer[m] (~cheertchn@2001:470:69fc:105::39de)
[00:52:39] *** Joins: nixfreaknim[m] (~reversem3@2001:470:69fc:105::33d1)
[01:06:18] <arkanoid> PMunch: thanks! bye
[01:06:38] <PMunch> Thank you for watching :)
[01:06:39] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: leaving)
[01:08:28] <FromDiscord> <Elegantbeef> PNode means you're playing with the VM?‚Üµ(@geekrelief)
[01:10:15] <FromDiscord> <Elegantbeef> If so you can steal the code here though `parseObject` needs to be replaced, but havent been arsed yet https://github.com/beef331/nimscripter/blob/master/src/nimscripter/vmconversion.nim
[01:29:38] *** Joins: vicfred (~vicfred@user/vicfred)
[01:30:36] *** Quits: terminalpusher (~terminalp@2a01:586:a4a5:1:665d:1191:e0a9:8e5b) (Remote host closed the connection)
[01:49:59] *** Joins: happycorsair[m] (~happycors@2001:470:69fc:105::205)
[01:50:41] <arkanoid> I'm trying to run this line here https://github.com/SciNim/scinim/blob/a6f937ad7a78708333a93e51a1355035491090d7/scinim/numpyarrays.nim#L134 where T is int, I'm getting "numpyarrays.nim(134, 20) Error: cannot instantiate: 'T'". What does it mean?
[01:51:54] <arkanoid> is it because NumpyArray[T] type is not exported?
[01:52:04] *** Quits: happycorsair[m] (~happycors@2001:470:69fc:105::205) (Read error: Connection reset by peer)
[01:52:07] *** Quits: nixfreaknim[m] (~reversem3@2001:470:69fc:105::33d1) (Write error: Connection reset by peer)
[01:52:10] *** Quits: cheer[m] (~cheertchn@2001:470:69fc:105::39de) (Write error: Connection reset by peer)
[01:54:56] *** Joins: cheer[m] (~cheertchn@2001:470:69fc:105::39de)
[01:54:58] <arkanoid> found the problem, I have to use function(obj) instead of obj.function to don't get in the way of nimpy
[01:55:14] *** Joins: happycorsair[m] (~happycors@2001:470:69fc:105::205)
[01:55:14] *** Joins: nixfreaknim[m] (~reversem3@2001:470:69fc:105::33d1)
[02:03:03] <FromDiscord> <Elegantbeef> arkanoid if you want to use a generic proc with method call syntax you need to do `obj.proc[: T]`
[02:03:51] <arkanoid> thanks!
[02:04:16] <FromDiscord> <Elegantbeef> This overrides the ambiguity
[02:12:15] <arkanoid> is there a way to get line by line the total heap size / memory consumption?
[02:12:54] <arkanoid> I'm gettings results by running valgrind after each edit but it's long and boring
[02:13:27] <FromDiscord> <Elegantbeef> Perhaps stepping through the program? I dont know though
[02:16:04] <FromDiscord> <geekrelief> In reply to @Elegantbeef "PNode means you're playing": I'm trying to fix an issue with nimterop where named nested unions aren't being renamed like they are in c2nim.
[02:17:16] <FromDiscord> <Elegantbeef> Ah then i dont know what to say
[02:18:06] <FromDiscord> <geekrelief> no worries, I'll try to muddle through it. Thanks.  I'm hoping to get to use nimscripter soon. üëç
[02:18:13] *** Quits: nixfreaknim[m] (~reversem3@2001:470:69fc:105::33d1) (Quit: Client limit exceeded: 20000)
[02:19:12] *** Quits: cheer[m] (~cheertchn@2001:470:69fc:105::39de) (Quit: Client limit exceeded: 20000)
[02:19:14] *** Joins: nixfreaknim[m] (~reversem3@2001:470:69fc:105::33d1)
[02:19:49] *** Quits: happycorsair[m] (~happycors@2001:470:69fc:105::205) (Quit: Client limit exceeded: 20000)
[02:35:51] <arkanoid> Elegantbeef, the `obj.proc[: T]` trick seems not working in my context
[02:36:03] *** Joins: cheer[m] (~cheertchn@2001:470:69fc:105::39de)
[02:36:04] *** Joins: happycorsair[m] (~happycors@2001:470:69fc:105::205)
[02:36:09] <FromDiscord> <Elegantbeef> Code example?
[02:37:21] <arkanoid> let me reduce to min example
[02:39:15] <arkanoid> Elegantbeef: https://play.nim-lang.org/#ix=3Hx4
[02:39:47] <FromDiscord> <Elegantbeef> Why are you accquoting the entire thing?
[02:40:12] <FromDiscord> <Elegantbeef> pyObj.toTensor0Copyint64 should work
[02:40:28] <FromDiscord> <Elegantbeef> God damn it matrix really destroyed that
[02:40:51] <FromDiscord> <Elegantbeef> Anyway drop the accquotes and it should work
[02:42:02] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3Hx5
[02:42:35] <FromDiscord> <Elegantbeef> The accquotes were just cause some chat clients can render codeblocks/lines and makes life lovely
[02:43:25] <arkanoid> haha, I tough the ` were part of the fix ^^". It is working with [: T] .... but why?
[02:43:41] <FromDiscord> <Elegantbeef> Like i said that overrides the ambiguity
[02:43:55] <FromDiscord> <Elegantbeef> `a.doThing[T]` is taken as `[T](a.doThing)`
[02:44:10] <arkanoid> I'm using IRC so everything is lovely, and by lovely I mean not even parsed
[02:44:19] <FromDiscord> <Elegantbeef> sorry `[](a.doThing, T)`
[02:44:37] <FromDiscord> <Elegantbeef> But `a.doThing[: T]` is `doThing[T](a)`
[02:44:43] <FromDiscord> <Elegantbeef> Oh i know how it is
[02:44:50] <FromDiscord> <Elegantbeef> It's shit, and anyone that says otherwise is a liar
[02:46:28] <arkanoid> possibly, yes, but it works nicely with ssh and tmux
[02:47:11] <FromDiscord> <Elegantbeef> Eh i'm just joking of course whatever works for you
[02:47:20] <FromDiscord> <Elegantbeef> I mean matrix even has TUI üòõ
[02:47:54] <arkanoid> I never explored martrix, don't even know the advantage. What has more than old irc?
[02:48:15] <arkanoid> for a programmer and the community he likes, I mean
[02:49:11] <FromDiscord> <Elegantbeef> It has more modern things like spaces which group channels together, it also has voip and file uploading(of course not that interesting to irc users)
[02:49:26] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[02:50:03] <FromDiscord> <Elegantbeef> Though there is only 1 on 1 voip implemented at the moment
[03:02:16] <arkanoid> Elegantbeef, interesting
[03:03:53] <arkanoid> there's no nim language in client filter list :(
[03:12:37] <FromDiscord> <Elegantbeef> Welcome to the world of tomorrow!
[03:13:13] <FromDiscord> <arkanoid> Damn, too many pixels!
[03:14:03] <FromDiscord> <Elegantbeef> What client are you using?\>
[03:14:47] <FromDiscord> <arkanoid> currently the web based @ element.io, not sure which one to pick, I went to the original. Thinking about trying weechat one \:P
[03:15:21] <FromDiscord> <Elegantbeef> But the code blocks! üòõ
[03:15:32] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Hxb
[03:16:18] <FromDiscord> <arkanoid> cool! how is done? `eval echo "foobar"`
[03:16:59] <FromDiscord> <Elegantbeef> It's 3 backticks for code blocks
[03:17:09] <FromDiscord> <arkanoid> sent a code paste, see https://play.nim-lang.org/#ix=
[03:17:14] <FromDiscord> <Elegantbeef> It's much like github MD
[03:17:26] <FromDiscord> <Elegantbeef> so you can specify a language after the first 3 ticks
[03:18:31] <FromDiscord> <arkanoid> sent a code paste, see https://play.nim-lang.org/#ix=3Hxc
[03:19:10] <FromDiscord> <Elegantbeef> There is an in development matrix sdk for Nim so Nim client soon TM
[03:19:49] <arkanoid> as a system administrator I am interested in setting up private server now
[03:20:37] <FromDiscord> <Elegantbeef> Aw shit you're now in the whole thing üòõ
[03:20:41] <arkanoid> status is sponsor of matrix?
[03:21:09] <FromDiscord> <Elegantbeef> Are they?
[03:21:20] <FromDiscord> <Elegantbeef> Interesting they are
[03:21:41] <arkanoid> are they using matrix as backend for the "im" part?
[03:22:30] <FromDiscord> <Elegantbeef> Doesnt seem they have a library for matrix so i assume not
[03:26:36] <arkanoid> in #<roomname>:<serverhost> does the <roomname> part remain contains across federated servers?
[03:26:46] <arkanoid> s/contains/costant
[03:26:51] <FromDiscord> <Elegantbeef> I believe so
[03:27:15] <arkanoid> feels strange to me, it means that a server may pollute all the others, I'd guess no
[03:27:39] <FromDiscord> <Elegantbeef> How does it pollute?
[03:27:54] <FromDiscord> <Elegantbeef> They're delimited by their host domain
[03:28:20] <arkanoid> manual says "Rooms are distributed and do not exist on any single server"
[03:29:41] <FromDiscord> <Elegantbeef> I think that's just talking about how communication works, afaik the host domain deliminates rooms, cause if i dont have a host domain in my "known rooms" how would another room interfere
[03:30:40] <arkanoid> because of federation?
[03:31:03] <arkanoid> I mean, I think the point is that I can be logged on server X and talk to room that is shared between server X and Y
[03:31:24] <arkanoid> because room doesn't exists on the server but on the federation as a whole
[03:33:10] <FromDiscord> <Elegantbeef> I still think the home server means that even with federation you can have multiple rooms with the same name since there is still information to diferentiate
[03:33:57] <FromDiscord> <Elegantbeef> So yes if you have multiple home servers you may have multiple `X` room but you can join a specific one without confusion afaik
[03:34:31] <arkanoid> well, so the <roomname> doesn't remain constant across federated servers
[03:35:09] <arkanoid> there might be aliases of same room on different servers
[03:35:16] <FromDiscord> <Elegantbeef> Isnt the homeserver apart of the roomname?
[03:35:53] <FromDiscord> <Elegantbeef> Sure
[03:38:45] <arkanoid> well, my matrix server is up, time to reverse proxy
[03:58:28] <FromDiscord> <TryAngle> is there a library to parse math input like‚Üµ`sin(4.328) + tan((3/2)pi) - 2e^(4)`‚Üµinto a "math expression" that may or may not be modified and then be evaluated?
[04:01:56] <FromDiscord> <Sabena Sema> well std.macros parseExpr can kinda do that
[04:02:01] <FromDiscord> <Sabena Sema> what are you actually trying to do?
[04:02:37] <FromDiscord> <Sabena Sema> if it's the "statement expression" thing that some C++ libraries do that's not really something you need to do in nim
[04:04:28] <FromDiscord> <Rika> https://github.com/Yardanico/nim-mathexpr
[04:04:39] <FromDiscord> <Rika> @TryAngle
[04:07:38] <FromDiscord> <TryAngle> In reply to @Sabena Sema "if it's the "statement": I want to add math support to my discord bot
[04:09:16] *** Quits: src (~src@user/src) (Quit: Leaving)
[04:10:16] <FromDiscord> <TryAngle> In reply to @Rika "https://github.com/Yardanico/nim-mathexpr": not all what I want but enough and looks easy to expand, so a good start, thanks!
[04:10:40] <FromDiscord> <Rika> Why not all?
[04:11:31] <FromDiscord> <TryAngle> mainly linalg and some constants
[04:11:34] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[04:12:26] <FromDiscord> <Rika> Eh I would have said it‚Äôs out of scope
[04:14:57] <FromDiscord> <TryAngle> ah I see, that's what I mean then.‚Üµofc. I wouldn't expect any library to have 1:1 what I want / need, that would be way too specific XD
[04:16:12] <FromDiscord> <TryAngle> what I like with this one, I only have to add a custom parseFactor procedure and the additions I like and it should all still work ü§î
[04:20:31] <arkanoid> how can I set a const that is a type? I want a const like "const myType = int64" to use later multiple times like in "cast[myType](...)"
[04:21:40] <FromDiscord> <Rika> `type MyType = int64`
[04:22:33] <arkanoid> yeah I've just found the same and I feel stupid
[04:22:37] <arkanoid> thanks
[04:23:53] <FromDiscord> <TryAngle> what is the recommended way to use a .env file?
[04:24:22] <FromDiscord> <TryAngle> I tried std/os getEnv(<key>), but it seems to not work?
[04:24:54] <FromDiscord> <Sabena Sema> yeah that will only get env vars from the actual environment
[04:25:00] <FromDiscord> <Rika> That‚Äôs not for files
[04:25:07] <FromDiscord> <Sabena Sema> use an ini parser type thing
[04:25:27] <FromDiscord> <TryAngle> or wait does a TOML parser exist, I would prefre that actually
[04:25:34] <FromDiscord> <Sabena Sema> environment variables actually don't generally have any format besides "sequence of zero terminated strings"
[04:25:43] <FromDiscord> <Rika> Honestly I don‚Äôt understand why no one has made a shim program that loads the environment file and runs the program with the environment
[04:25:56] <FromDiscord> <Sabena Sema> what environment file?
[04:26:07] <FromDiscord> <Sabena Sema> oh, just some environment
[04:26:07] <FromDiscord> <Rika> Or rather why they aren‚Äôt popular
[04:26:15] <FromDiscord> <Rika> .env file
[04:27:04] <FromDiscord> <Sabena Sema> well, that's what `env` does
[04:27:33] <FromDiscord> <Sabena Sema> also, the whole reason people use envvars is the parent-to-child inheritance
[04:27:51] <FromDiscord> <Sabena Sema> so running a process with a static, predefined, environment block isn't that useful
[04:28:00] <FromDiscord> <Rika> env can load files?
[04:28:09] <FromDiscord> <Rika> I was under the impression that it did not
[04:28:16] <FromDiscord> <Rika> Ah I guess you can just cat it no
[04:28:21] <FromDiscord> <Rika> Is that safe
[04:28:49] <FromDiscord> <Rika> In reply to @Sabena Sema "so running a process": I was going to say merged but I thought that was already implied
[04:28:51] <FromDiscord> <Sabena Sema> I'm not sure what kind of parsing it does
[04:29:37] <FromDiscord> <Sabena Sema> but if it's merging it has to split the keys from the values (meaning potential problems if you are passing an arbitrary blob that could contain '=')
[04:30:11] <FromDiscord> <TryAngle> tbh TOML with parsetoml is actually pretty decent for envs
[04:30:43] <FromDiscord> <Rika> I don‚Äôt think we know what the other means
[04:31:00] <FromDiscord> <Rika> That‚Äôs not what I mean and I don‚Äôt know what you mean
[04:31:06] <FromDiscord> <Rika> It‚Äôs whatever at this point
[04:38:21] *** Quits: krux02 (~krux02@p200300e817365e0034cc1bc883b75341.dip0.t-ipconnect.de) (Remote host closed the connection)
[04:42:16] <FromDiscord> <Sabena Sema> sent a code paste, see https://play.nim-lang.org/#ix=3Hxz
[04:42:29] <FromDiscord> <Sabena Sema> 10000 bytes is enough for anyone
[04:58:24] <FromDiscord> <TryAngle> I'm trying to run the examples from dimscord but they just error‚Üµusing nimble, it tells me -d:ssl is missing, using nim running with -d:ssl, a fatal error occures from asyncfutures where the discord client gets started
[04:59:30] <FromDiscord> <Elegantbeef> It wasnt suggested but https://github.com/PMunch/stacklang does exist if you want to support maths
[04:59:49] <FromDiscord> <Rika> That would require you to use an unconventional syntax
[04:59:57] <FromDiscord> <Rika> In reply to @TryAngle "I'm trying to run": Well what is the error
[05:00:45] <FromDiscord> <TryAngle> In reply to @Rika "Well what is the":  https://media.discordapp.net/attachments/371759389889003532/918676072529297458/message.txt
[05:01:38] <FromDiscord> <Rika> Wow helpful exception, probably raised by the library
[05:02:47] <FromDiscord> <TryAngle> this happens with‚Üµ`nim r -d:ssl src/kassacord.nim`‚Üµwith nimble run I just get "missing -d:ssl error"
[05:03:00] <FromDiscord> <TryAngle> (edit) "r" => "c -r"
[05:03:01] <FromDiscord> <impbox [ftsf]> you'll definitely need -d:ssl
[05:03:19] <FromDiscord> <TryAngle> I get same errors on WSL Ubuntu and Windows
[05:03:22] <FromDiscord> <Elegantbeef> make a `config.nims` with `-d:ssl` in your project's root
[05:03:33] <FromDiscord> <impbox [ftsf]> I have been using dimscord
[05:03:57] <FromDiscord> <impbox [ftsf]> but maybe different version or different nim version
[05:04:26] <FromDiscord> <TryAngle> In reply to @Elegantbeef "make a `config.nims` with": ok now I can run with nimble thanks,‚ÜµBut sadly I get the same error now as when using nim c -r -d:ssl src/kassacord.nim
[05:04:32] <FromDiscord> <impbox [ftsf]> there is a dimscord discord server you could ask for help in
[05:04:48] <FromDiscord> <impbox [ftsf]> https://discord.gg/paXRAtvn
[05:05:15] <FromDiscord> <TryAngle> ah totally forgot about that, sadly this server looks a bit inactive but I try thanks
[05:15:38] <FromDiscord> <impbox [ftsf]> sent a code paste, see https://play.nim-lang.org/#ix=3HxD
[05:15:45] <FromDiscord> <impbox [ftsf]> any idea what this error means, and how to work around it?
[05:16:28] <FromDiscord> <impbox [ftsf]> why is it trying to evaluate `cursor` at compile time?
[05:19:34] <FromDiscord> <Elegantbeef> Need more code to say
[05:20:10] <arkanoid> what would result in echo type(X) -> "void", what is a void? ptr object?
[05:20:12] <FromDiscord> <Elegantbeef> Nevermind i understand
[05:20:21] <FromDiscord> <Elegantbeef> void is void
[05:20:24] <FromDiscord> <Rika> Void is just void
[05:20:25] <FromDiscord> <Elegantbeef> It means "nothing"
[05:20:35] <arkanoid> is there type "void"?
[05:20:40] <FromDiscord> <Rika> Technically
[05:20:46] <FromDiscord> <Rika> Not really but it ‚Äúexists‚Äù
[05:21:25] <FromDiscord> <impbox [ftsf]> https://play.nim-lang.org/#ix=3HxG
[05:21:41] <arkanoid> running type on this guy results in void https://github.com/yglukhov/nimpy/blob/2f09d0fd934f6c93425f416e9c095608aac2017a/nimpy/py_lib.nim#L133
[05:22:55] <FromDiscord> <Elegantbeef> What is the second `[]` for impbox?
[05:23:10] <FromDiscord> <impbox [ftsf]> to index the tuple
[05:23:14] <FromDiscord> <impbox [ftsf]> (edit) "to index the ... tuple" 03added "ChainRow"
[05:23:16] <FromDiscord> <Elegantbeef> There you go
[05:23:25] <FromDiscord> <Elegantbeef> Tuple indexes need to be static
[05:23:45] <FromDiscord> <impbox [ftsf]> ohh
[05:24:03] <FromDiscord> <Elegantbeef> Didnt notice `ChainRow` was a tuple üòÄ
[05:24:04] <FromDiscord> <impbox [ftsf]> thanks, dang!
[05:24:22] <FromDiscord> <impbox [ftsf]> I guess I'll make it an array with an enum index or something
[05:25:16] <FromDiscord> <IsaacPaul> sent a code paste, see https://play.nim-lang.org/#ix=3HxI
[05:25:24] <FromDiscord> <impbox [ftsf]> it's an operating system thing
[05:25:38] <FromDiscord> <impbox [ftsf]> at runtime
[05:25:50] <FromDiscord> <impbox [ftsf]> on linux an environment variable can be used
[05:25:51] <FromDiscord> <IsaacPaul> bah ok probably some sort of environment variable then?
[05:25:55] <FromDiscord> <impbox [ftsf]> not sure about macos
[05:25:59] <arkanoid> is it possible to get from which module a symbol come from?
[05:26:34] <FromDiscord> <impbox [ftsf]> https://developer.apple.com/library/archive/documentation/DeveloperTools/Conceptual/DynamicLibraries/100-Articles/UsingDynamicLibraries.html
[05:27:14] <FromDiscord> <IsaacPaul> I see that's it
[05:27:37] <FromDiscord> <IsaacPaul> thanks.. was getting tunnel vision lol
[05:28:52] <FromDiscord> <impbox [ftsf]> maybe i can cast to array =\
[05:29:13] <FromDiscord> <impbox [ftsf]> since otherwise tuple behaviour is desired
[05:37:45] <FromDiscord> <Elegantbeef> impbox it's not great but https://play.nim-lang.org/#ix=3HxM
[05:38:04] <FromDiscord> <Elegantbeef> Yes it's possible ark
[05:39:33] <FromDiscord> <Rika> You could just simulate field access with templates and [] on arrays?
[05:39:48] <FromDiscord> <Elegantbeef> You can
[05:40:00] <FromDiscord> <Rika> So I don‚Äôt know why you insist on tuples
[05:40:26] <FromDiscord> <Elegantbeef> I hate tuples so i dont i was just showing impbox how one could
[05:41:05] <FromDiscord> <impbox [ftsf]> yeah, ok, i'll just use arrays
[05:41:19] <FromDiscord> <impbox [ftsf]> thanks <3
[05:41:29] <FromDiscord> <Rika> üëå
[05:43:47] <arkanoid> how does https://nim-lang.github.io/fusion/src/fusion/smartptrs.html#SharedPtr sharedPtr works in nim? is atomicCounter increased/decreased automatically?
[05:43:57] <arkanoid> I'm working with ARC
[05:47:48] <FromDiscord> <Elegantbeef> Here you go ark https://play.nim-lang.org/#ix=3HxO
[05:49:13] <arkanoid> whoa! seems complicated. Thanks
[05:50:34] <FromDiscord> <Elegantbeef> Though i think there is an issue with overloads
[05:55:35] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:00:21] <FromDiscord> <Sabena Sema> yeah smartpointers basically work like the c++ ones
[06:00:37] <FromDiscord> <Sabena Sema> using a ref is _usually_ better
[06:01:47] <FromDiscord> <Rika> What case would the former be better then
[06:26:50] <FromDiscord> <Sabena Sema> interop comes to mind
[06:27:17] <FromDiscord> <Sabena Sema> more immediate refcount ops / frees
[06:32:29] <FromDiscord> <IsaacPaul> sent a long message, see http://ix.io/3HxZ
[06:33:44] <FromDiscord> <IsaacPaul> (edit) "http://ix.io/3HxZ" => "http://ix.io/3Hy0"
[06:35:44] <FromDiscord> <IsaacPaul> For release apps you will need to provide a proper .app package with the dynamic file inside.
[06:50:16] <arkanoid> what's the advantage of useMalloc or not?
[06:50:46] <arkanoid> I'm using it to enable valgrind profiling, but apart from that, is there a reason why I should use useMalloc?
[06:51:22] <FromDiscord> <Elegantbeef> Embedded is one reason
[06:51:24] <FromDiscord> <Rika> When you‚Äôre using a custom allocator that shims malloc?
[06:52:19] <FromDiscord> <hieu.nt> is there any tutorial to upload file to google drive using nim. I found this on nim website https://nim-lang.org/docs/httpclient.html
[06:52:32] <FromDiscord> <hieu.nt> but i dont know how to handle the authentication process with nim
[06:53:04] <FromDiscord> <Elegantbeef> https://github.com/treeform/googleapi/blob/master/src/googleapi/drive.nim
[06:53:34] <FromDiscord> <Elegantbeef> Wait it only has list üòÄ
[06:53:56] <FromDiscord> <Elegantbeef> Either way it shows how
[06:55:09] <FromDiscord> <theSherwood> Is there any way to do hot module reloading in nim?
[06:55:38] <FromDiscord> <Elegantbeef> There is https://nim-lang.org/docs/hotcodereloading.html but i hear the experience isnt great
[06:55:57] <FromDiscord> <Elegantbeef> You could also use a plugin system
[06:57:04] <FromDiscord> <theSherwood> Are there any libraries in the ecosystem that can handle that automagically?
[06:57:05] <FromDiscord> <Elegantbeef> I guess teh better thing would be to link https://nim-lang.org/docs/hcr.html
[06:57:44] <FromDiscord> <Elegantbeef> https://nimble.directory/search?query=plugin there are a few plugin systems
[06:58:01] <FromDiscord> <theSherwood> Cheers!
[06:58:03] <FromDiscord> <Elegantbeef> Why are you after hot code reloading if i may ask?
[06:58:31] <FromDiscord> <theSherwood> I'm a web dev and I've grown accustomed to a rapid feedback cycle during development.
[06:59:05] *** Joins: xet7 (~xet7@user/xet7)
[06:59:50] <FromDiscord> <Elegantbeef> Well to make it a bit faster you can use TCC to get the c compiler time down
[07:00:16] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[07:00:31] <FromDiscord> <theSherwood> Is that a compiler option I can set?
[07:01:00] <FromDiscord> <Elegantbeef> If you have the TCC compiler in your path you can d `--cc:tcc`
[07:01:13] <FromDiscord> <Elegantbeef> Yes i realize `TCC compiler` is redundant
[07:01:29] <FromDiscord> <Elegantbeef> I guess that assumes you're doing C compiled Nim and not JS/C++ compiled
[07:03:53] <FromDiscord> <theSherwood> Yeah, C-compiled-Nim. At the moment I'm just playing around with building a toy terminal editor.
[07:04:48] <FromDiscord> <theSherwood> Thanks for the help, @ElegantBeef
[07:04:55] <FromDiscord> <Elegantbeef> No problem
[07:12:41] <FromDiscord> <hieu.nt> i also want to ask is there a way to share variables between 2 modules or 2 nim file without circular dependency
[07:12:59] <FromDiscord> <hieu.nt> for example partial class in C#
[07:18:27] <FromDiscord> <Elegantbeef> You might be able to if you properly position imports but it requires though to where you import
[07:18:34] <FromDiscord> <Elegantbeef> Generally it's just suggested you dont design code that way
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:52] <FromDiscord> <ajusa> In reply to @ajusa "3ds": Just got this working - Nim's sdl bindings lightly tweaked running fine on a 3DS. Going to work on adding =destroy hooks to make the SDL resources get cleaned up automatically.
[07:40:53] <FromDiscord> <IsaacPaul> Awesome. Looking forward to seeing your progress
[07:58:07] <FromDiscord> <ajusa> For some reason I can't get it to work on my computer though lol, the mp3 plays on the 3DS but it doesn't work normally. I'm probably messing up some dynamic library thing with Nim and the existing SDL bindings
[08:00:00] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[08:00:35] <FromDiscord> <Sabena Sema> In reply to @theSherwood "I'm a web dev": you can have a hook that recompiles your code on changes and just restarts the whole thing
[08:00:52] <FromDiscord> <Sabena Sema> doing actual hot code reloading without a jit or interpreter is super hard
[08:01:53] <FromDiscord> <Sabena Sema> In reply to @hieu.nt "i also want to": you can use importc and exportc
[08:05:04] <FromDiscord> <Sabena Sema> actually .... does nim have a way (besides {.emit.}) to get selectany behavior on a symbol, where the linker is told to just throw out all but one
[08:06:38] <FromDiscord> <Sabena Sema> eagh it's so linker / exe format specific I'd expect not
[08:13:40] <FromDiscord> <demotomohiro> In reply to @hieu.nt "i also want to": Just declare variables with export marker `` in a module and import it in a module you want to use the variable:‚Üµhttps://wandbox.org/permlink/qUkkV1FrZPjoHUX1
[08:28:22] <FromDiscord> <Michal58> In reply to @ni-max "... continued from our": created a PR: https://github.com/nim-lang/Nim/pull/19233
[08:32:58] <FromDiscord> <Sabena Sema> why is that even undefined?
[08:33:39] <FromDiscord> <Sabena Sema> like addLast(result, item) where both result and item have types dependent on T should pull in addLast even if it was defined after toDeque
[08:33:46] <FromDiscord> <Sabena Sema> unless my understanding of how generics work is very wrong
[08:47:57] <FromDiscord> <Elegantbeef> It needs to have a valid symbol that matches the signature for it to work
[08:48:05] <FromDiscord> <Elegantbeef> So it's odd that it didnt cause an issue before
[08:48:44] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Hyq
[09:01:33] <FromDiscord> <Michal58> In reply to @Sabena Sema "like addLast(result, item) where": I don't understand what you are saying
[09:01:40] <FromDiscord> <ajusa> sent a code paste, see https://play.nim-lang.org/#ix=3Hyt
[09:04:32] <FromDiscord> <Sabena Sema> In reply to @Michal58 "I don't understand what": typically generics will look up function names where the result of overload resolution could depend on type parameters in the instantiation context
[09:05:14] <FromDiscord> <Michal58> In reply to @Sabena Sema "typically generics will look": I understand that, but don't udnerstand how it is relevant here.
[09:09:38] <FromDiscord> <Schelz> Anyone know how to compile subhook nim file with cpp ? Please ping me..
[09:18:02] <FromDiscord> <Sabena Sema> In reply to @Michal58 "I understand that, but": well, the result of overload resolution for addLast could well depend on T
[09:18:26] <FromDiscord> <Sabena Sema> oh I see
[09:18:28] <FromDiscord> <Sabena Sema> you need at least one
[10:31:37] <FromDiscord> <Xzight> any users of `dimscord` here? I can't get the quick example from the readme to work lol
[10:33:25] <FromDiscord> <Elegantbeef> What's the issue you're having
[10:33:27] <FromDiscord> <Elegantbeef> That makes life easier
[10:35:02] <FromDiscord> <Xzight> Well I assume the problems are specific to the package but I am getting an "Illformed AST" and "Template/generic instantiation of "event" from here
[10:35:10] <FromDiscord> <Xzight> (edit) "here" => "here""
[10:37:08] <FromDiscord> <Elegantbeef> remove `some` on line 29 and it solves it
[10:37:22] <FromDiscord> <Elegantbeef> The issue was a type mismatch so the error output says the exact issue
[10:42:39] <FromDiscord> <Xzight> Ohh thank you!
[11:02:14] *** PMunch_ is now known as PMunch
[11:12:31] <FromDiscord> <retkid> nim is a system lang and this is off topic (?) but i would just like to say that frontend sucks
[11:12:40] <FromDiscord> <retkid> that is all
[11:15:01] <FromDiscord> <Rika> It's harder for regular programmers
[11:15:15] <FromDiscord> <Rika> You'd prolly be closer to a designer for front end to be easy
[11:44:11] <FromDiscord> <valerga> how can I do `for i, m in needed` in reverse?
[11:44:41] <FromDiscord> <valerga> i should be the index of the item
[11:46:53] <FromDiscord> <valerga> do i need to reverse the seq first?
[11:47:35] <FromDiscord> <retkid> In reply to @Rika "You'd prolly be closer": i can make music, i can program, i can make some kinds of art
[11:47:41] <FromDiscord> <retkid> but this kinda just sucks
[11:48:18] <FromDiscord> <retkid> In reply to @valerga "how can I do": so you can do 1 or 2 things:
[11:48:24] <FromDiscord> <retkid> you c an iterate over len()-1
[11:48:27] <FromDiscord> <retkid> (edit) "c an" => "can"
[11:48:41] <FromDiscord> <retkid> (edit) "len()-1" => "-(len()-1)"
[11:48:45] <FromDiscord> <Rika> Three things actually, you can make a reverse iterator
[11:48:48] <FromDiscord> <retkid> or you can reverse it
[11:48:51] <FromDiscord> <retkid> or make a reverse iterator
[11:48:57] <FromDiscord> <ni-max> In reply to @valerga "how can I do": maybe: `for i in countdown(needed.high, 0)`
[11:49:02] <FromDiscord> <valerga> what about reversed(x) from algorithm?
[11:49:10] <FromDiscord> <Rika> That is reversing the sequence
[11:49:19] <FromDiscord> <retkid> countdown is in the stdlib
[11:49:30] <FromDiscord> <retkid> In reply to @valerga "what about reversed(x) from": well, it that works then do it
[11:49:34] <FromDiscord> <retkid> but
[11:49:39] <FromDiscord> <valerga> reversing the iterator sounds better
[11:50:03] <FromDiscord> <retkid> (edit) "it" => "if"
[11:50:20] <FromDiscord> <retkid> i mean, if you really care, the only differences is readability and speed
[11:50:40] <FromDiscord> <retkid> also guys should i be using .high or be using .len()-1
[11:51:40] <FromDiscord> <Rika> Speed is pretty important
[11:51:52] <FromDiscord> <Rika> Use high as much as possible if you are using them as indexes
[11:51:58] <FromDiscord> <Rika> Indexes indices whichever the word
[11:52:06] <FromDiscord> <retkid> w3ell
[11:52:08] <FromDiscord> <retkid> (edit) "w3ell" => "well"
[11:52:38] <FromDiscord> <retkid>  https://media.discordapp.net/attachments/371759389889003532/918779728045948928/unknown.png
[11:53:02] <FromDiscord> <retkid> theres like another project not on this partition where i did it like 20 times and it caused so many reability problems
[11:53:06] <FromDiscord> <retkid> (edit) "reability" => "readability"
[11:53:19] <FromDiscord> <Rika> That‚Äôs why there is high
[11:53:32] <FromDiscord> <Rika> In reply to @ni-max "maybe: `for i in": Also better to use low over 0 haha
[11:53:40] <FromDiscord> <retkid> really
[11:53:41] <FromDiscord> <retkid> why?
[11:53:53] <FromDiscord> <retkid> isn't 0 faster?
[11:54:07] <FromDiscord> <Rika> It‚Äôs not always correct
[11:54:21] <FromDiscord> <Rika> Arrays can start at any number
[11:54:32] <FromDiscord> <Rika> That matters if you‚Äôre using a generic iterator
[11:54:35] <FromDiscord> <Rika> Or making one
[11:54:43] <FromDiscord> <retkid> i dont usually use arrays
[11:54:44] <FromDiscord> <Rika> If not, I‚Äôd still recommend using it
[11:55:07] <FromDiscord> <Rika> Maybe in the future Nim will get sequences that start at arbitrary numbers
[11:55:21] <FromDiscord> <Rika> Less work to fix your code in the future
[11:55:35] <FromDiscord> <retkid> i dont like that
[11:55:52] <FromDiscord> <retkid> i like just doing [0] and getting the first indice
[11:56:19] <FromDiscord> <Rika> Likewise I don‚Äôt like that üôÇ
[11:56:36] <FromDiscord> <Rika> Do what you want really
[11:56:42] <FromDiscord> <retkid> we must fight do the death
[11:57:13] <FromDiscord> <Rika> Do you want to fight someone trained in martial arts üòõ I‚Äôm joking
[11:57:31] <FromDiscord> <ni-max> üòÜ
[11:57:33] <FromDiscord> <Rika> Not about the martial arts thing though
[11:58:27] <FromDiscord> <ni-max> anyone? https://discordapp.com/channels/371759389889003530/371759389889003532/918601071872602152
[11:59:05] <FromDiscord> <Rika> Didn‚Äôt someone reply to you
[11:59:53] <FromDiscord> <ni-max> Micheal opened a pull request for workaround but I'm not sure what's going on here
[12:01:02] <FromDiscord> <ni-max> I think there's some magic with generics causing this
[12:02:21] <FromDiscord> <ni-max> no problem without generics
[12:03:56] <FromDiscord> <ni-max> also compiles if we re import `deques` in `n.nim`
[12:07:46] <FromDiscord> <ni-max> and already merged by Araq in devel branch‚Üµbut I'm afraid It will get us again somewhere...
[12:08:15] *** Joins: jjido (~Denis@90.213.58.125)
[12:25:26] <FromDiscord> <Sabena Sema> I still think it'
[12:30:18] <FromDiscord> <Sabena Sema> I still don't quite understand why such a dependent function needs to be declared before the declaration context of the generic
[12:30:35] <FromDiscord> <Sabena Sema> how are you even supposed to declare such a function that you expect users to add more overloads of?
[12:31:20] <FromDiscord> <Sabena Sema> (C++ kinda does this too, wherin qualified dependent functions are not required to have a definition but unqualified ones that resolve via ADL are)
[12:34:44] <FromDiscord> <Sabena Sema> it's likely I just have c++ brainworms tho
[12:35:18] <FromDiscord> <Sabena Sema> oh yeah
[12:35:19] <FromDiscord> <Sabena Sema> I do
[12:36:17] <FromDiscord> <Sabena Sema> wait, so a function has to _actually be overloaded_ for dependent references to it to be open in generics?
[12:36:44] <FromDiscord> <Sabena Sema> or if it's actually overloaded (in the definition context of the generic) then it's open no matter if it's dependent or not
[12:41:05] <FromDiscord> <ni-max> I thinks this is the case, Is it ok?
[12:41:12] <FromDiscord> <ni-max> (edit) "thinks" => "think"
[12:42:45] <FromDiscord> <Sabena Sema> I mean it's unexpected (for me) but is probably fine
[12:43:07] <FromDiscord> <Sabena Sema> it's a little odd that adding a second overload of something before a generic definition can cause symbols to become open
[12:47:41] <FromDiscord> <ni-max> I'm still very new to Nim. Guess I should re-evaluate after I work more with templates/generics in Nim
[12:47:56] <FromDiscord> <n00nehere> how can i use proxy with authentication in nim?
[12:48:02] <FromDiscord> <Sabena Sema> tbh this is just me assuming that nim features have the same semantics as c++ ones
[12:48:09] <FromDiscord> <Sabena Sema> and tbh they do tend to be very close
[12:49:22] <FromDiscord> <Sabena Sema> the overload resolution rules are essentially identical (aside from I think not having partial ordering by constraints I think)
[12:49:26] <FromDiscord> <Sabena Sema> (edit) "constraints I think)" => "constraints)"
[12:50:30] <FromDiscord> <ni-max> In reply to @n00nehere "how can i use": `std/httpclient` has support for http/https proxies: https://nim-lang.org/docs/httpclient.html#autolink-3819
[12:52:21] <FromDiscord> <ni-max> (edit) "https://nim-lang.org/docs/httpclient.html#autolink-3819" => "https://nim-lang.org/docs/httpclient.html#proxy"
[12:54:33] <FromDiscord> <ni-max> @Sabena Sema oh by the way in this case that addLast func is also a generic function!
[12:54:37] <FromDiscord> <hieu.nt> hi guys
[12:54:44] <FromDiscord> <hieu.nt> so install some package in nim
[12:54:55] <FromDiscord> <hieu.nt> (edit) "nim" => "nimble"
[12:55:27] <FromDiscord> <hieu.nt> but my project doesnt have something like package-lock.json
[12:56:12] <FromDiscord> <hieu.nt> how do other computer get this dependencies when they pull the project
[12:56:30] <FromDiscord> <Sabena Sema> they resolve the dependencies themselves
[12:56:33] <PMunch> If you define them in your .nimble file then `nimble build` will install them
[12:56:38] <FromDiscord> <Sabena Sema> lock files are an insane default imo
[12:57:01] <FromDiscord> <Sabena Sema> you can use `nimble lock` if you really need one
[12:58:35] <FromDiscord> <hieu.nt> In reply to @PMunch "If you define them": so i have to make a .nimble file then commit them along the project right ? Is there any way to create this file automatically
[12:59:14] <FromDiscord> <Sabena Sema> `nimble init`
[12:59:25] <FromDiscord> <Sabena Sema> the nimble file is the metadata file for your project
[12:59:38] <FromDiscord> <Sabena Sema> like `package.json`
[13:00:33] <FromDiscord> <hieu.nt> thanks @Sabena Sema let me try
[13:01:06] <PMunch> You can also define tasks in it
[13:02:36] <FromDiscord> <Sabena Sema> generally you should need to do _much_ less build system scripting than in C/C++, since the compiler itself has built in support for doing most things (and automatically handles dependency info in those cases) but it's there if ya need it
[13:02:51] <PMunch> It's a mix between a project definition, a dependency list, and a makefile
[13:05:03] <FromDiscord> <hieu.nt> I try and it a bit more complex than my need. Really just want a much more simple and straightforward way to list some of the nimble package that i install on my work machine
[13:05:21] <FromDiscord> <Sabena Sema> in that case ... just list them
[13:05:25] <FromDiscord> <hieu.nt> so other machine can auto pull these package when they pull the project
[13:05:37] <FromDiscord> <hieu.nt> (edit) "machine" => "machines" | "package" => "packages"
[13:06:06] <FromDiscord> <Rika> It isn't complex
[13:06:10] <FromDiscord> <Rika> You initialise the project
[13:06:11] <FromDiscord> <hieu.nt> nimble doesnt seem to install the dependencies in the project folder so i cannot commit them as well.
[13:06:17] <FromDiscord> <Rika> You edit the file to have the dependencies
[13:06:19] <FromDiscord> <Rika> Then that's it
[13:06:52] <FromDiscord> <Sabena Sema> if you want something like python's requirements.txt just write someting that looks like it and do: `xargs -a requirements.txt nimble install` or similar
[13:07:34] <FromDiscord> <hieu.nt> In reply to @Sabena Sema "if you want something": its actually a good idea
[13:07:56] <FromDiscord> <Sabena Sema> but ... really just write a .nimble file
[13:08:09] <FromDiscord> <Rika> It's not much different
[13:08:36] <FromDiscord> <Sabena Sema> sidenote: python's requirements.txt thing is _completely_ nuts
[13:08:49] <FromDiscord> <Rika> Why so? I don't remember much about it
[13:08:53] <FromDiscord> <Rika> Tried not to remember
[13:09:29] <FromDiscord> <Sabena Sema> if you have a setuptools package there's no great way to share the dependency info between requirements.txt and the setuptools package, esp if you want to use the setup.cfg/pyproject.toml format
[13:09:54] <FromDiscord> <Sabena Sema> and thus if you are using those formats it's basically impossible to install the dependencies of a project _without_ installing the project itself
[13:10:36] <FromDiscord> <Sabena Sema> the only way to do it "right" is to use setup.py and run `python setup.py egg-info` then you get like `.egg-info/requirements` that you can pass to pip
[13:11:06] <FromDiscord> <Rika> I don't even follow anymore
[13:11:19] <FromDiscord> <Rika> I don't know what some of these terms are
[13:12:42] <FromDiscord> <Sabena Sema> I'm not actually 100% sure if nimble supports installing all the deps of a package without also installing the package itself
[13:12:58] <FromDiscord> <Sabena Sema> but build will do it
[13:13:37] <FromDiscord> <Sabena Sema> and I bet the nimble maintainers would actually accept such a feature, instead of the setuptools maintainers who basically couldn't imagine why that could ever be useful
[13:14:23] <FromDiscord> <Rika> In reply to @Sabena Sema "and I bet the": So it's a maintainer issue, great
[13:14:56] <FromDiscord> <Sabena Sema> The other issue is that it's muddled with requirements.txt
[13:15:15] <FromDiscord> <Sabena Sema> and requirements.txt is _way_ more than just a list of version specifications
[13:15:54] <FromDiscord> <Rika> It is?
[13:16:13] <FromDiscord> <Sabena Sema> yeah
[13:16:23] <FromDiscord> <Sabena Sema> there's a bunch of pip manipulations you can do
[13:16:43] <FromDiscord> <Sabena Sema> like list some deps, then change the install prefix to a different site-packages, then list more deps
[13:16:45] <FromDiscord> <Sabena Sema> that kinda stuf
[13:16:46] <FromDiscord> <Sabena Sema> (edit) "stuf" => "stuff"
[13:16:58] <FromDiscord> <ni-max> In reply to @Sabena Sema "it's a little odd": I found a relative docs: https://nim-lang.org/docs/manual.html#generics-symbol-lookup-in-generics
[13:17:09] <FromDiscord> <Sabena Sema> yeah, I read that but need to play around
[13:17:22] <FromDiscord> <Sabena Sema> also the example for delegated binding might be misleading
[13:18:00] <FromDiscord> <Rika> That's scary, the requirements file one
[13:18:58] <FromDiscord> <Sabena Sema> yeah, it really is basically a list of command line args
[13:19:04] <FromDiscord> <Sabena Sema> and pip's command line interface is really complex
[13:35:03] <FromDiscord> <pmunch> No it's not‚Üµ(@hieu.nt)
[13:36:59] <PMunch> Just do it the way the ecosystem you're using expects it to be done. Don't try to force a solution based on something from a different ecosystem when we already have a solution for this. It's bound to just create confusion and headaches for everyone.
[13:38:01] <PMunch> And why would you want to commit all your packages anyways? That's not how you're supposed to do it in any language that I'm aware of
[13:38:21] <FromDiscord> <Elegantbeef> Git submodules goes brr‚Üµ(<@709044657232936960_=50=4dunch=5b=49=52=43=5d>)
[13:38:51] <FromDiscord> <Elegantbeef> I may or may not have dumbly hit reply on that message
[13:42:45] <PMunch> I don't really see which message you replied to
[13:42:54] <PMunch> I just see @709044657232936960_=50=4dunch=5b=49=52=43=5d
[13:43:52] <FromDiscord> <Elegantbeef> It was your most recent message
[13:44:06] <FromDiscord> <Elegantbeef> I just dumbly clicked reply
[14:08:30] <FromDiscord> <dom96> In reply to @Sabena Sema "if you want something": Yeah. Please don‚Äôt do this.
[14:08:50] <FromDiscord> <dom96> Grab the new nimble and help us test the lock files
[14:10:33] <FromDiscord> <Sabena Sema> yeah, it's probably not a good idea but it does what he asked for
[14:11:10] <FromDiscord> <Sabena Sema> I can see it being useful in cases where nimble isn't running the show I guess
[14:11:27] <FromDiscord> <Sabena Sema> OK looking at https://nim-lang.org/docs/manual.html#generics-delegating-bind-statements and the whole section just ... makes no sense
[14:11:59] <FromDiscord> <Sabena Sema> the examples don't compile for unrelated reasons (B doesn't import A, so can't write `genericA(x)` no matter what it does with the `init` symbol
[14:12:24] <FromDiscord> <Sabena Sema> also `init` takes a `var O` and the `T` in `genericB` isn't going to bind to that
[14:12:51] <FromDiscord> <Sabena Sema> if those issues are corrected then the bind statement isn't required to make things work
[14:13:19] <FromDiscord> <Sabena Sema> even if B stops importing C and the type definition for O moves to B things _still_ work
[14:14:00] <FromDiscord> <Sabena Sema> is this just a relic from an era where generic symbol binding was insane or is there a real problem here that I'm not able to see
[14:14:11] <FromDiscord> <Sabena Sema> if the first should this whole section be deleted from the docs?
[14:17:50] <FromDiscord> <Sabena Sema> like this all only makes sense to me if the "instantiation context" of genericA is the "_definition_ context" of genericB, but, because the `genericA(x)` function call is dependent it seems to be open (even though there's no overloading involved here)
[14:18:14] <FromDiscord> <Sabena Sema> and, since it's open you'd think the instantiation context would be in `main`
[14:51:45] <FromDiscord> <Araq> create an issue about it
[14:54:02] <FromDiscord> <Araq> but sometimes the manual tries to explain a concept without giving complete, fully compilable examples
[15:25:52] <FromDiscord> <Sabena Sema> yeah, if the solution was just ‚Äúits old info‚Äù id make a pr removing it too
[15:26:04] <FromDiscord> <Sabena Sema> but it seems like an issue will be helpful
[15:26:26] <FromDiscord> <Sabena Sema> Ill create one tomorrow
[15:33:07] <FromDiscord> <Southern_Cross_Au> In reply to @Southern_Cross_Au "": I've solved the issue with the GCC compiler. turns out I had another language installed that also used the same compiler - I think it was Hax or something. After I cleared those Path bindings and uninstalled NIM is working perfectly
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:45:05] <FromDiscord> <Rika> It shouldn't have matteres
[15:45:07] <FromDiscord> <Rika> Mattered
[15:47:37] <PMunch> Maybe the other language had created a gcc wrapper or something
[16:01:19] <FromDiscord> <hmmm> yo how do I get a seq of all the keys in a std/table
[16:09:30] <FromDiscord> <evoalg> `t.keys.toSeq` ?
[16:23:43] <FromDiscord> <hmmm> seems reasonable
[16:26:19] <NimEventer> New Nimble package! spfun - Special Functions of Stats & Physics, see https://github.com/c-blake/spfun
[16:32:31] *** Joins: lumo_e (~enrico@2001:b07:5d38:4002:6f54:321d:5361:e313)
[16:40:41] *** Joins: rockcavera (~rc@192.12.112.230)
[16:40:41] <FromDiscord> <gogolxdong (liuxiaodong)> Is while true + async = memory leaks
[16:40:41] *** Quits: rockcavera (~rc@192.12.112.230) (Changing host)
[16:40:41] *** Joins: rockcavera (~rc@user/rockcavera)
[16:44:50] <FromDiscord> <gogolxdong (liuxiaodong)> Will cps avoid this, and how?
[16:46:30] <FromDiscord> <hmmm> so I have been wanting to ask for a while...if I keep defining procs with the [T] thingy, how is that even different from writing python
[16:46:57] <FromDiscord> <hmmm> I mean, it's possibly something that shouldn't be done excessively right?
[16:47:19] <FromDiscord> <hmmm> ü§î
[16:47:40] <FromDiscord> <konsumlamm> what does that have to do with python?
[16:47:49] <FromDiscord> <hmmm> python has no type checks
[16:48:17] <PMunch> Not quite
[16:48:25] <PMunch> I mean the T will get a type at some point
[16:48:42] <PMunch> So you still won't have runtime errors from calling + 10 on a string for example
[16:48:45] <FromDiscord> <hmmm> I mean the entire reason we annotate the types is that we want the compiler to make the checks right
[16:49:16] <FromDiscord> <gogolxdong (liuxiaodong)> memory grows fast
[16:50:08] <PMunch> Sure, but T is essentially a way of saying "this procedure can take many types, if you try a type and it doesn't work you'll get an error from within it". But in general you only use T for things like seq[T] for example
[16:50:31] <FromDiscord> <hmmm> I see yea
[16:50:49] <PMunch> Like `proc add[T](x: var seq[T], y: T)`. That should obviously work for all T's
[16:51:02] <PMunch> You can also constrict T
[16:51:23] <PMunch> `proc test[T: int or string](x: T)` for example
[16:51:27] <FromDiscord> <hugogranstrom> sent a code paste, see https://play.nim-lang.org/#ix=3HAs
[16:52:00] <PMunch> Yes, this ^
[16:52:01] <FromDiscord> <hmmm> yea yea now I get it, so it's ok to abuse T to make the procs as general as possible when it makes sense
[16:52:13] <PMunch> Of course, that's what it is for
[16:52:24] <FromDiscord> <hmmm> I see üòÉ
[16:52:37] <FromDiscord> <vindaar> the "when it makes sense" really is the important bit here
[16:52:43] <PMunch> If you only pass your procedure along to a container or to a procedure for example it's totally fine
[16:53:21] <PMunch> gogolxdong_(liuxiaodong), while true + async isn't inherently memory leaks. But you certainly need to manage your async pool
[16:54:02] <PMunch> Like if you don't want to call `runForever` you need to somehow call the async runtime to make sure your stuff completes
[16:54:23] <PMunch> If you just schedule a bunch of tasks but never let the runtime run it will pile up memory
[16:59:45] <FromDiscord> <gogolxdong (liuxiaodong)> you mean the cps pattern?
[17:10:34] <PMunch> I don't believe so
[17:10:41] <PMunch> What are you currently doing?
[17:11:28] <FromDiscord> <gogolxdong (liuxiaodong)> runing multiple of this process, memory grows fast, wonder how
[17:14:57] <PMunch> Hard to tell without knowing what you're doing
[17:23:04] *** Joins: src (~src@user/src)
[17:34:45] *** Joins: arkurious (~arkurious@user/arkurious)
[17:35:12] *** Joins: terminalpusher (~terminalp@2a01:586:2220:1:fec:bf3d:488b:50f7)
[17:46:37] <FromDiscord> <0xc45> sent a code paste, see https://play.nim-lang.org/#ix=3HAP
[17:47:14] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[17:48:25] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[17:49:05] <CyberTailor> i can't build nimble from source :(
[17:49:08] <CyberTailor> sha1hashes.nim(37, 10) Error: undeclared identifier: 'isValidSha1Hash'
[17:52:49] <PMunch> The Nimble devel branch probably requires the Nim devel branch to build
[17:53:01] <PMunch> Try `choosenim devel`
[17:53:43] <PMunch> As you can see `isValidSha1Hash` was introduced to support lock files in Nimble, and I don't think that has been merged into a stable release yet: https://github.com/nim-lang/Nim/blame/46275126b89218e64844eee169e8ced05dd0e2d7/lib/std/sha1.nim#L279
[17:57:51] *** Quits: terminalpusher (~terminalp@2a01:586:2220:1:fec:bf3d:488b:50f7) (Remote host closed the connection)
[18:02:14] <FromDiscord> <gogolxdong (liuxiaodong)> I'm listening on 14  of our accounts to transfer BNB if any available , someone else is trying to charge gas fee to claim our rewards, they can transfer ours if we charge.
[18:06:40] <FromDiscord> <gogolxdong (liuxiaodong)> the most important is processes run steady and could let us sleep tight without worrying OOM,  otherwise we will probably lose money.
[18:19:23] <FromDiscord> <gogolxdong (liuxiaodong)> use process instead of thread because the bug post previously.
[18:20:12] <PMunch> That didn't really make it any clearer to me what you're actually doing in your code
[18:25:56] *** Quits: pch (~pch@66.49.131.33) (Ping timeout: 268 seconds)
[18:29:59] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: Leaving)
[18:32:36] <CyberTailor> PMunch: i've built devel branch of nim, now i get this error:
[18:32:38] <CyberTailor> Error: cannot open file: compiler/nimblecmd
[18:35:11] *** Quits: lumo_e (~enrico@2001:b07:5d38:4002:6f54:321d:5361:e313) (Ping timeout: 268 seconds)
[18:42:01] <arkanoid> I have to cluster a folder of man made text files into groups according to the file header. The headers share some similarities but due to being man made in not possible to just consider it a segnature. Possibly a quasi-signature, or fuzzy signature. How would you tackle this?
[18:43:02] <FromDiscord> <gogolxdong (liuxiaodong)> It generally creates web3 connection and keeps sending transaction .
[18:44:49] <FromDiscord> <gogolxdong (liuxiaodong)> Does it work if replace await with waitFor?
[18:46:54] <FromDiscord> <TryAngle> how do I downgrade nim for a project?
[18:47:03] <FromDiscord> <TryAngle> I would like to use nim 1.5 for one
[18:47:31] <FromDiscord> <Rika> nim 1.5 is not a stable version just fyi
[18:48:12] <FromDiscord> <TryAngle> the dimscord bot seems to not work on 1.6.0 but should work on prior versions as far as I understood
[18:48:40] <FromDiscord> <Rika> use 1.4 then (choosenim 1.4 i think)
[18:48:44] <FromDiscord> <Rika> (edit) "(choosenim 1.4" => "(`choosenim 1.4`"
[18:49:43] <CyberTailor> submitting nimble PR without testing feels wrong, but i can't test it :(
[18:55:03] <FromDiscord> <hmmm> hey boiz since our sqlite module was complaining about not finding sqlite_64.dll I went to the official site and downloaded it. But apparently their dll is named sqlite.dll without the _64 part. I ended up renaming it and slapping it in the folder of my nim file but feels like pretty dumb. Should I just make a dedicated folder and add to the PATH?
[18:55:17] *** Joins: lumo_e (~enrico@2001:b07:5d38:4002:46fc:453:4da4:1c19)
[18:56:08] <FromDiscord> <hmmm> or there is an approved way of installing sqlite I don't know of
[18:57:33] <FromDiscord> <gogolxdong (liuxiaodong)> Is there any solution for this code?
[19:13:28] <FromDiscord> <TryAngle> In reply to @Rika "use 1.4 then (`choosenim": ok works ty
[19:21:48] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Remote host closed the connection)
[19:22:39] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[20:46:26] <FromDiscord> <retkid> is there any convenient way to wasm compile?
[21:14:31] *** Joins: xet7 (~xet7@user/xet7)
[21:30:09] <FromDiscord> <TryAngle> what would be the default way to deserialize a type to json?
[21:31:18] <FromDiscord> <TryAngle> sent a code paste, see https://play.nim-lang.org/#ix=3HCo
[22:16:02] *** Joins: advesperacit (~advespera@37.120.131.254)
[22:38:25] <FromDiscord> <hmmm> woa I was fighting an entire afternoon vs db_sqlite when we have the vastly superior tiny_sqlite. After this and JSON -> jsony, my faith in std is shaken. I heard Araq wants to unbundle all the stuff, I thing he is right, we need to use the fresh stuff üßê
[22:42:32] *** Quits: lumo_e (~enrico@2001:b07:5d38:4002:46fc:453:4da4:1c19) (Remote host closed the connection)
[22:42:54] *** Joins: lumo_e (~enrico@2001:b07:5d38:4002:7e53:5d08:4c14:41fb)
[22:46:18] *** Joins: krux02 (~krux02@p200300e817365e0034cc1bc883b75341.dip0.t-ipconnect.de)
[22:53:41] *** Quits: lumo_e (~enrico@2001:b07:5d38:4002:7e53:5d08:4c14:41fb) (Ping timeout: 250 seconds)
[23:08:40] <NimEventer> New question by Netsu: How to get user ID by username/mention - Telegram bot api, see https://stackoverflow.com/questions/70309590/how-to-get-user-id-by-username-mention-telegram-bot-api
[23:10:42] <FromDiscord> <spotlessapple> sent a code paste, see https://play.nim-lang.org/#ix=3HCM
[23:11:10] <FromDiscord> <spotlessapple> (edit) "https://play.nim-lang.org/#ix=3HCM" => "https://play.nim-lang.org/#ix=3HCN"
[23:12:27] <FromDiscord> <hmmm> maybe this: https://github.com/technicallyagd/unpack
[23:15:45] <FromDiscord> <spotlessapple> In reply to @hmmm "maybe this: https://github.com/technicallyagd/unpac": Thanks @hmmm ! I did see that, but I believe that focuses mainly on destructuring into predefined variables. I'm more looking for the case of passing an unknown number of variables from a sequence as arguments to a proc/func
[23:16:53] *** Joins: PMunch (~PMunch@user/pmunch)
[23:20:57] <FromDiscord> <hmmm> hmm I don't know then. Maybe people more skilled than me can craft a macro for it üòÉ
[23:33:02] <FromDiscord> <geekrelief> In reply to @spotlessapple "Thanks <@887269570765791243> ! I": Here's a macro to do it: https://play.nim-lang.org/#ix=3HCU
[23:35:13] <FromDiscord> <geekrelief> actually looks like like there's a bug when I pass in variable that's an array as opposed to a literal
[23:35:29] <advesperacit> is there any way to remove async traceback output?
[23:39:19] *** Joins: terminalpusher (~terminalp@2a01:586:2220:1:fec:bf3d:488b:50f7)
[23:49:13] <FromDiscord> <geekrelief> In reply to @spotlessapple "Thanks <@887269570765791243> ! I": This should work now https://play.nim-lang.org/#ix=3HCZ
[23:50:19] <FromDiscord> <spotlessapple> In reply to @geekrelief "This should work now": Excellent, thanks for the help @geekrelief !
[23:50:44] <FromDiscord> <geekrelief> np, I've been meaning to write this anyway üôÇ I'll put it up on gist
[23:51:53] <FromDiscord> <geekrelief> https://gist.github.com/geekrelief/d786f01f89d20090f30e4d7ef2325a8e
[23:57:14] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[23:57:45] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[23:58:14] <FromDiscord> <geekrelief> In reply to @spotlessapple "Excellent, thanks for the": pushed an update to the gist to also handle seq
