[00:00:28] *** Quits: SuperLag (~akulbe@user/superlag) (Killed (NickServ (GHOST command used by SuperL4g)))
[00:00:38] *** SuperL4g is now known as SuperLag
[00:01:10] <p-i-> graingert: Sorry for being stupid, but I can't get it to work. How can I modify https://bpa.st/OAWA to trap ctrl+C properly?
[00:01:10] *** Joins: dkmueller (~dkmueller@dynamic-095-114-018-228.95.114.pool.telefonica.de)
[00:01:45] *** Joins: TML-prv_ (~TML-prv@ec2-52-32-188-68.us-west-2.compute.amazonaws.com)
[00:02:22] *** Joins: Cata (~Cata@user/cata)
[00:04:27] *** Quits: yskapell (~yskapell@46.246.229.40.dsl.dyn.forthnet.gr) (Quit: Leaving)
[00:05:49] *** Joins: yskapell (~yskapell@46.246.229.40.dsl.dyn.forthnet.gr)
[00:06:16] *** Joins: cliluw (~cliluw@47.147.80.149)
[00:06:51] *** Joins: dme86 (~dan@user/dan86)
[00:07:31] *** Joins: LostInWeb (~quassel@narvi.bifroest.eu)
[00:10:23] *** Quits: Cata (~Cata@user/cata) (Quit: Leaving)
[00:12:42] <graingert> p-i-: are you on windows?
[00:13:22] <maxtim> https://bpa.st/P6PQ
[00:13:24] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[00:13:30] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[00:13:47] <maxtim> Here's the demo of the question I had....
[00:14:00] <maxtim> Note, I use i3WM on Debian 10 Buster
[00:14:23] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 272 seconds)
[00:15:15] <foo> graingert: modernize, thank you
[00:15:31] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[00:15:39] <p-i-> graingert: no, macos, but I need to run the code on linux too
[00:15:45] <graingert> foo: There's also pyupgrade
[00:15:57] <foo> Anyone happen to know how to analyze a qr code and determine various properties, such as box_size, border and error_correction ?
[00:16:15] <graingert> p-i-: the context manager gives you an async iterable of ctrl+c events
[00:16:22] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[00:17:34] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 245 seconds)
[00:17:45] *** Joins: crised (~crised@186.67.181.204)
[00:18:06] <crised> I have a an URL that points to a zip file, How can I download it, then extract it?
[00:18:15] <crised> (I don't want to save the file to disk)
[00:18:45] <bjs> crised: something like requests to do the HTTP part, then something like zipfile to do the zippy stuff
[00:18:58] <crised> bjs: yep, but how to do the zip file part?
[00:19:10] <yitz> import zipfile
[00:19:11] <bjs> crised: sorry, "zipfile" is the name of a module.
[00:19:15] <bjs> crised: https://docs.python.org/3/library/zipfile.html
[00:19:26] <crised> zipfile.ZipFile(requests.get(url).content)
[00:19:38] <graingert> There's a special flag for unseekable streams
[00:19:48] <crised> graingert: interesting
[00:19:51] <graingert> You wanted to stream it?
[00:20:47] <crised> graingert: I don't think so, it's a tiny file
[00:22:34] *** Joins: andrzejv (~andrzejv@78-56-77-187.static.zebra.lt)
[00:22:46] <crised> This worked: z = requests.get(url).content, zf = zipfile.ZipFile(io.BytesIO(z))
[00:22:54] *** Quits: ali1234 (~al@user/ali1234) (Remote host closed the connection)
[00:23:02] <crised> graingert: +1
[00:23:13] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[00:23:26] <p-i-> graingert: How to get the context manager?
[00:23:27] <graingert> crised: .raw will give you a stream
[00:23:49] *** Quits: sunarch (~x@user/sunarch) (Ping timeout: 245 seconds)
[00:23:56] *** Joins: ali1234 (~al@user/ali1234)
[00:23:57] <graingert> p-i-: with anyio.open_signal_reciever(signal.SIGINT) as aiter:
[00:24:56] *** Joins: nepeat_ (~nepeat@79.110.170.62)
[00:24:58] *** Quits: bjb (~bjb@sourcerer.ca) (Ping timeout: 268 seconds)
[00:25:15] *** Joins: m1n10n (georgecloo@cpe-76-184-204-251.tx.res.rr.com)
[00:25:43] <graingert> crised:
[00:25:43] <graingert> with requests.get(url, stream=True) as resp, zipfile.ZipFile(resp.raw, 'x') as zf: ...
[00:26:03] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:91cc:2528:4817:d496)
[00:26:10] *** Joins: bjb (~bjb@sourcerer.ca)
[00:26:36] <p-i-> graingert: ok, so if I use the example here: https://anyio.readthedocs.io/en/stable/signals.html where would I invoke my own async_main code? Underneath the with block?
[00:27:18] *** Quits: f33f046c-a02e (~aditya@223.178.225.24) (Quit: Konversation terminated!)
[00:27:38] *** Quits: henbruas_ (~henbruas@ti0003a400-3211.bb.online.no) (Ping timeout: 252 seconds)
[00:27:47] <graingert> p-i-: where it says `# proceed with starting the actual appli...`
[00:27:58] *** Quits: archwizard (~archwizar@2001:470:69fc:105::929) (Quit: Bridge terminating on SIGTERM)
[00:27:58] *** Quits: bgardner (~bgardner@2001:470:69fc:105::8a8) (Quit: Bridge terminating on SIGTERM)
[00:27:58] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Quit: Bridge terminating on SIGTERM)
[00:28:13] <graingert> p-i-: https://anyio.readthedocs.io/en/stable/signals.html#handling-keyboardinterrupt-and-systemexit
[00:28:28] <p-i-> crap I was reading the wrong chunk.
[00:28:28] *** Quits: magla (~gelignite@55d4cf16.access.ecotel.net) (Quit: Stay safe!)
[00:28:50] <dulanic> If I have a string like this...Test1 AA:Hello AB:1234 AC:1F 322 AD:hj21jkhjk23 and I want to split that to set that to a dict. or I guess even a list.. any ideas? split(':') doesnt really get what i want https://bpa.st/NGZQ
[00:28:55] <p-i-> ok, gottit. That makes sense now.
[00:28:56] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[00:29:53] <graingert> dulanic: can you give an example of the list/dict you want?
[00:29:53] *** Joins: ali1234[m] (~ali1234@user/ali1234)
[00:29:53] *** Joins: ubh (~ubh@2001:470:69fc:105::852)
[00:29:53] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[00:29:53] *** Joins: bgardner (~bgardner@2001:470:69fc:105::8a8)
[00:29:54] *** Joins: codemouse92__ (~codemouse@user/codemouse92)
[00:29:54] *** Joins: archwizard (~archwizar@2001:470:69fc:105::929)
[00:29:54] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[00:30:01] *** Joins: novasharper (~novasharp@2001:470:69fc:105::b4a)
[00:30:01] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[00:30:08] *** Joins: dontwannatell[m] (~dontwanna@2001:470:69fc:105::c27)
[00:30:46] <dulanic> So I'd like it to have [0] be Test1, then [1] be AA:Hello and so on.... or  same overall idea if it was a dict
[00:30:47] *** Joins: Morteza24 (~Morteza24@63.141.236.246)
[00:31:10] <dulanic> If it was a dict for example Id want AA : Hello etc...
[00:32:03] <p-i-> dulanic: that's very muddled. If you give a clear input and expected output, maybe someone can shake you loose.
[00:32:12] <dulanic> Ill map it out
[00:32:30] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[00:33:24] <Morteza24> what's the point of using fsencode and fsdecode here? https://stackoverflow.com/questions/10377998/how-can-i-iterate-over-files-in-a-given-directory
[00:33:31] <Morteza24> there seems to be no difference when I use them and when I don't
[00:34:20] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[00:34:34] <graingert> Morteza24: if you have a str then you don't need it
[00:34:48] <graingert> os.listdir will call os.fsencode or os.fsdecode automatically
[00:35:36] <Morteza24> and when do I need them?
[00:35:48] <dulanic> this is a representation in excel of what I meant... I think dict would be the preferred method, but I can work with either... https://dulanic.com/img/example.png
[00:35:50] <Betal> is there an workaround way to install a package or pip in python3 if don't have sudo/root
[00:35:52] <p-i-> graingert: I've got all my websocket code with asyncio. Given that I'm now going to be using anyio here, should I be using anyio for everything? I see there is some overlap...
[00:36:11] <graingert> p-i-: you can use anyio for everything - but you don't have to
[00:36:47] <dulanic> There is a Typo I see sorry, just replace Test /w Test1 in my sample layout
[00:36:56] <p-i-> dulanic: L = [ f'{k}:{v}' for k,v in D ]
[00:37:00] <graingert> Betal: use a virtual environment
[00:37:27] <Betal> graingert: you mean copy pasting the virtual env from another PC to this one?
[00:37:30] *** Quits: kinabalu (~kinabalu@198.23.166.98) (Changing host)
[00:37:31] *** Joins: kinabalu (~kinabalu@user/kinabalu)
[00:37:41] <Morteza24> graingert thank you
[00:38:04] <p-i-> graingert: what's the relationship between asycnio and anyio? Is anyio just a higher level lib built atop asyncio?
[00:38:15] <graingert> Betal: no, using venv/bin/python -m pip install whatever
[00:38:17] <habnabit_> Betal, creating a virtualenv doens't require root and installing into it doesn't either
[00:38:32] <graingert> p-i-: anyio is a compatibility library between trio and asyncio
[00:38:56] <graingert> and an implementation of Structured Concurrency for asyncio
[00:39:16] <graingert> Betal: but also copying and moving virtual environments doesn't generally work
[00:39:26] <dulanic> p-i-: can you explain? If I set D to that string, that won't work because it doesnt have 2 values, and I dont have a way to split that string up? I cant split on : because that makes it even worse
[00:39:40] <graingert> Morteza24: almost never - pathlib.Path will usually do the right thing
[00:40:00] <Morteza24> thanks again
[00:40:14] <graingert> dulanic: oh you probably want .partition
[00:40:37] *** Joins: jazzy (~jaziz@2600:380:874b:26da:28e9:655f:12b2:c191)
[00:42:06] <graingert> https://www.irccloud.com/pastebin/FOtf1xJv/dulanic.py
[00:42:19] *** Quits: glik22 (~glik22@99.36.164.253) (Ping timeout: 264 seconds)
[00:42:30] <Betal> graingert: but for this ill need venv and pip installed, right? this means it will not work in my specific bad use case
[00:42:40] <graingert> Betal: maybe you want shiv?
[00:42:53] <habnabit_> Betal, what OS is this? you probably already have venv
[00:42:56] <graingert> Betal: virtual environments come with pip
[00:43:03] <graingert> ubuntu's venv is broken by default
[00:43:18] *** Quits: noctavian (~noctavian@gateway/tor-sasl/noctavian) (Remote host closed the connection)
[00:43:19] *** Quits: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[00:44:03] *** Joins: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[00:44:07] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 264 seconds)
[00:44:07] <kosh> graingert, why is ubuntu's venv broken by default?
[00:44:22] <graingert> kosh: because debian's venv is broken by default
[00:44:24] <dulanic> graingert: I can only hope to be able to throw that together fast like you did, I think that works
[00:44:32] *** Joins: noctavian (~noctavian@gateway/tor-sasl/noctavian)
[00:44:46] <nedbat> kosh: do you mean, what's broken about it, or, why did they break it?
[00:44:47] <noarb> what's the best way to remove a python installation done with ./configure; make; make install; on a centos machine? I tried upgrading to python 3.9 on a VM and it's caused some issues
[00:45:04] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 245 seconds)
[00:45:06] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[00:46:27] <dulanic> graingert: Only issue I see is for example AC has a space and I'd want it to keep that space in the result, instead it spits out a 2nd Name. https://bpa.st/QTSA
[00:46:27] <meejah> noarb: usually "make uninstall" if it's well-behaved
[00:46:36] <graingert> noarb: it's a vm - delete the vm and spawn a new one
[00:47:09] <dulanic> And doesnt provide Test1 as the Name
[00:47:28] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[00:47:30] <meejah> graingert: yeah, what's wrong with debian's venv? (I guess I *mostly* use pyenv's one but ..)
[00:47:45] <graingert> dulanic: ah should be return (left, right) if has_colon else ("Name", left)
[00:47:55] *** Quits: neilthereildeil (~neilthere@204.115.183.4) (Quit: Client closed)
[00:49:00] <graingert> dulanic: and you'll want a `items = [parse_item(item) for item in re.split(r" +", value)]`
[00:49:12] <kosh> nedbat, some of both
[00:49:50] <nedbat> kosh: generally, when debian has changed how python is packaged or installed, it's because debian believes the OS should be in charge of those things, and Python believes the language should be.
[00:50:04] *** Joins: blackout69 (~blackout6@net-109-117-245-193.cust.vodafonedsl.it)
[00:50:07] *** Quits: unluckyshrubbery (~unluckysh@097-070-104-004.res.spectrum.com) (Ping timeout: 252 seconds)
[00:50:26] *** Quits: Zajt (~Zajt@84-55-91-237.customers.ownit.se) (Quit: Client closed)
[00:50:37] <kosh> nedbat, I have run into that with debian that some software is broken and trying to build it is a real pain in the neck
[00:50:44] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[00:51:11] <kosh> nedbat, as a result some of the stuff we compile our own versions of libraries in the home directory because the ones included in debian (even for the same version) don't work
[00:51:17] <graingert> really venv should work without ensurepip
[00:51:36] <nedbat> kosh: debian truly hates vendored code
[00:51:45] <graingert> the conflict is about what `python -m ensurepip` should do
[00:52:18] <graingert> `venv/bin/python -m ensurepip` isn't actually controversial
[00:52:20] <dulanic> graingert:: can you put that in https://bpa.st/+python ? Im having trouble getting the quotes to work out right
[00:52:21] <meejah> how is that, "virtualenv is broken"...?
[00:52:22] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:52:23] *** Quits: mesaboogie (cannabis_i@user/mesaboogie) (Ping timeout: 272 seconds)
[00:52:30] <graingert> meejah: venv
[00:52:32] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[00:52:36] <meejah> oh, py3?
[00:52:42] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[00:52:45] <graingert> meejah: no just python
[00:52:51] *** Joins: pyeverything (~mona@c-66-31-107-137.hsd1.ma.comcast.net)
[00:52:52] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:91cc:2528:4817:d496) (Quit: Leaving)
[00:53:03] <graingert> meejah: `apt install python-is-python3`
[00:53:16] <kosh> nedbat, the problem is that for some reason often the debian versions of libraries our software often fails to link to for various reasons
[00:53:31] <kosh> nedbat, stuff like sundials and when we compile it from scratch it works fine, it also works fine on other distributions
[00:53:32] <graingert> kosh: appimage/snap time?
[00:53:53] <kosh> graingert, we are just building conda binaries for windows and linux and having people use that
[00:53:57] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 252 seconds)
[00:54:13] <graingert> D:
[00:54:24] <kosh> graingert, since our python interface and other stuff are already in conda packages and we HIGHLY suggest people use conda because of the high performance libraries
[00:54:33] *** Quits: p-i- (~Ohmu@node-2ug.pool-118-173.dynamic.totinternet.net) (Quit: Leaving...)
[00:55:03] *** Quits: jamea77 (~jamea77@10.189-202-213.bestelclientes.com.mx) (Ping timeout: 252 seconds)
[00:55:25] <kosh> graingert, the source is all gplv3 and people can freely modify it but most people just want to use the simulator not develop it, making windows binaries is easy, making linux ones is much harder
[00:55:49] <kosh> you can make one windows binary and it works on windows 7, 8, 8.1 and 10, server versions etc
[00:56:29] *** Joins: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854)
[00:56:50] *** Joins: Tier (~tier@37.214.79.66)
[00:57:39] *** Joins: p-i- (~Ohmu@node-2ug.pool-118-173.dynamic.totinternet.net)
[00:57:53] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[00:58:05] <dulanic> sorry that should have been https://bpa.st/3IJQ graingert, I get a unexpected EOF using what you put
[00:58:54] *** Joins: dme86 (~dan@user/dan86)
[00:59:58] *** Quits: Quaking (~Quaking@167.89.254.27) (Quit: WeeChat 3.1)
[01:00:49] <dulanic> Correction,  my bad, was a typo, but still sets [4] to ('AC', '1F') instead of AC:1F 322
[01:01:03] *** Quits: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854) (Client Quit)
[01:01:37] <dulanic> https://bpa.st/NGDQ
[01:01:44] *** Quits: Tier (~tier@37.214.79.66) (Remote host closed the connection)
[01:02:15] *** Joins: Lando-HoloNet (~Lando@user/lando-spacepimp)
[01:02:24] *** Joins: cliluw (~cliluw@47.147.80.149)
[01:02:56] *** Quits: dkmueller (~dkmueller@dynamic-095-114-018-228.95.114.pool.telefonica.de) (Quit: WeeChat 3.1)
[01:03:32] *** Joins: jonfen (~jonfen@65-130-223-169.slkc.qwest.net)
[01:04:40] <graingert> dulanic: how do you know if a space something is an item delimiter or a space?
[01:04:50] <dulanic> the :
[01:05:16] <dulanic> nm, I got it, re.compile("(?<!^)\s+(?=[A-Z])(?!.\s)").split(D)
[01:05:54] <graingert> are you kidding me
[01:06:06] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 244 seconds)
[01:06:34] <hexology> what's a weird lookahead, whitespace foll
[01:06:37] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 244 seconds)
[01:06:54] <hexology> whitespace "followed by 1 character but not 1 character and then a whitespace character"
[01:06:58] <dulanic> as stated, im not the best as regex, i pieced it together from google :(
[01:07:09] <dulanic> but it works
[01:08:48] <hexology> dulanic: re.findall(r"(\S+|\S+:\S+)", "Test1 AA:Hello AB:1234 AC:1F 322 AD:hj21jkhjk23")
[01:09:09] <hexology> in fact you don't even need the ()s
[01:09:15] <hexology> r"\S+|\S+:\S+"
[01:09:24] <hexology> then you can use `.split(":")` on each group
[01:09:27] *** Joins: cliluw (~cliluw@47.147.80.149)
[01:09:37] <hexology> oh, this... "AC:1F 322"
[01:09:52] <dulanic> yeah, was going to say that still threw it for a loop
[01:10:05] <hexology> "AC:1F 322 AD:hj21jkhjk23"
[01:10:17] <hexology> what is the rule here? is the 322 part of the previous ":" group or the next ":" group? or neither?
[01:10:27] <dulanic> the groups always change on :
[01:11:22] <dulanic> with the exception of Test1 that always comes before the first group and the only thing that happens is a space before the 1st group... so beforte the AA: though it could be BB: etc...
[01:11:36] *** Joins: MD500_Pilot (~MD500_Pil@gatekeeper.rstechnical.com)
[01:11:46] <hexology> ah
[01:11:46] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 272 seconds)
[01:11:49] <hexology> so "1F 322 AD" is a single group?
[01:11:56] <hexology> and "Test1 AA" is a single group?
[01:12:18] *** Quits: NineBAR (~NineBAR@c-68-56-180-29.hsd1.mi.comcast.net) (Quit: Leaving)
[01:12:41] <dulanic> https://bpa.st/FVIQ
[01:12:45] <dulanic> That make sense?
[01:12:56] <dulanic> It can be dict or list, dont care
[01:13:00] <hexology> but how do you know what the "name" is? it's the first word?
[01:13:28] <dulanic> Thats the challenge... its the first string before AA: iot can have spaces etc.... too
[01:13:50] <MD500_Pilot> I am looking for an easy way to update an existing yaml config file during an upgrade. I want to be able to read the entire `existing` yaml config file, take any keys and values that match a key in the `new` yaml file and update the `new` yaml file with those keys/values.
[01:14:16] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Quit: node-irc says goodbye)
[01:14:26] <dulanic> hjere is 2 kind of examples, with how it can vary
[01:14:26] <dulanic> https://bpa.st/C5UA
[01:14:28] <hexology> dulanic: and what is the rule for the _first_  section?
[01:14:28] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:14:41] *** Joins: dme86 (~dan@user/dan86)
[01:14:42] <MD500_Pilot> I am guessing some type of for loop against the keys but before I started a brute force attempt I thought I would ask for some advice.
[01:15:03] <dulanic> Just that it is [A-Z]{1-5] maybe? so like AA: AAAA: etc...
[01:15:22] <hexology> MD500_Pilot: if both yaml files correspond to python dicts, you can use dict.update
[01:15:45] <hexology> d1 = {'a': 1, 'b': 2}; d2 = {'c': 3, 'b': 99}; d1.update(d2); print(d1)
[01:16:11] <hexology> dulanic: can the text before the ":" in each section have whitespace, or no?
[01:17:02] <dulanic> well no, I'd say [A-Z]{1-5}: should cover it?
[01:17:23] <dulanic> well, it would always have spaces between sections
[01:17:31] <dulanic> sorry a space
[01:18:24] *** Joins: Codaraxis (~Codaraxis@89.45.7.142)
[01:18:28] <dulanic> s I guess it could split with [\S][A-Z]{1-5]: ?
[01:18:59] *** Quits: thunfisch (~thunfisch@user/thunfisch) (Ping timeout: 272 seconds)
[01:19:35] *** Joins: thunfisch (~thunfisch@user/thunfisch)
[01:20:29] <hexology> i wonder if this isn't parseable with regex
[01:21:25] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Quit: afk)
[01:22:16] <dulanic> Yeah this is why im having trouble, i dont care if its regex or what it is, just not sure how to split these darn string to lists or a dict
[01:22:52] <hexology> i see why you went with the lookahead, but i imagine that'd fail at the end of the string
[01:23:27] *** Quits: Mulugruntz (~Mulugrunt@2400:4152:2063:3100:c17c:18d7:d00f:538c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:24:36] *** Joins: mesaboogie (mesaboogie@user/mesaboogie)
[01:25:10] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:26:34] <dulanic> yeah i justt cant figure it out, that is the closest ive gotten, but it still has issues /w the string before the 1st group https://dulanic.com/img/test.py.png
[01:27:04] *** Joins: NineBAR (~NineBAR@c-68-56-180-29.hsd1.mi.comcast.net)
[01:28:06] <dulanic> i have some leftover code in there from graingert recomendation
[01:30:07] *** Quits: trampel (~trampel@2601:602:9c01:22b8:8da2:4741:7389:5660) (Quit: Leaving)
[01:30:18] *** Joins: ssbr (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net)
[01:30:48] *** Quits: alexbk (~alexbk@c-73-157-41-15.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[01:31:21] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[01:34:31] *** Quits: xsperry (~as@user/xsperry) (Ping timeout: 264 seconds)
[01:34:35] *** Joins: sliwkr (~kks@91.193.4.155)
[01:35:12] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 252 seconds)
[01:36:56] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[01:39:15] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 272 seconds)
[01:39:44] <bancroft_> i'm doing a bunch of subprocess commands and I was wondering if there was a linux/python way to get the path of ~
[01:41:09] <dulanic> from os.path import expanduser
[01:41:13] <supakeen> os.path.expanduser("~"), os.environ["HOME"], etc.
[01:41:16] *** Quits: cliluw (~cliluw@47.147.80.149) (Quit: Leaving)
[01:41:51] <odoood> bancroft_: Path.home()
[01:42:00] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:91cc:2528:4817:d496)
[01:42:12] *** Joins: cliluw (~cliluw@47.147.80.149)
[01:44:11] *** Joins: YoungPotato (~user@155.98.225.76)
[01:44:41] <MD500_Pilot> hexology Thanks, I will give that a try!
[01:44:42] *** Quits: rwbrambler (~Thunderbi@65.183.138.202) (Remote host closed the connection)
[01:44:58] *** Joins: rwbrambler (~Thunderbi@65.183.138.202)
[01:45:06] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 252 seconds)
[01:45:20] <MD500_Pilot> script_path = pathlib.Path(__file__).parent.resolve()
[01:45:21] *** Quits: Morteza24 (~Morteza24@63.141.236.246) (Quit: Connection closed)
[01:45:45] <MD500_Pilot> I use that to get the path that my scripts are running out of, not sure if it is of any help
[01:45:49] <dulanic> if your using path_lib, Path.home() works
[01:46:13] *** Joins: xsperry (~as@user/xsperry)
[01:47:02] *** Joins: n0cto (~n0cto@154.21.28.130)
[01:48:46] <MD500_Pilot> I use that as well and it works great `user_home_dir = str(Path.home())`
[01:48:59] <maxtim> In my example: https://bpa.st/P6PQ Is there a more pythonic way to do the function beginning on line 34?
[01:49:36] <maxtim> it just seems pretty clumsy to me
[01:51:33] *** Joins: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854)
[01:53:31] *** Joins: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net)
[01:55:14] <graingert> bancroft_: why do you need it?
[01:56:18] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[01:56:29] <graingert> maxtim: subprocess.run([...], capture_output=True, check=True)
[01:56:41] <squirrel> maxtim: perhaps use subprocess.check_output? and don't split()
[01:57:01] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:57:37] *** Quits: andrew (~andrew@user/andrew) (Ping timeout: 272 seconds)
[01:58:09] <graingert> maxtim: don't use check_output
[01:58:39] <graingert> maxtim: also you can pass subprocess.run([pathlib.Path("~/.scripts/get_workspaces.sh").expanduser()], capture_output=True, check=True)
[01:58:57] <mayhew> Does anyone know why I'm getting these mypy errors? https://bpa.st/XWIA -- I'm especially confused by the one on line 8, doesn't bytes support the SupportsBytes protocol?
[01:59:24] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[02:00:24] <graingert> mayhew: https://mypy-play.net/?mypy=latest&python=3.9&flags=strict
[02:00:26] <graingert> argh
[02:00:35] <squirrel> why not use check_output?
[02:00:37] <graingert> https://mypy-play.net/?mypy=latest&python=3.9&flags=strict&gist=7b5f88970e03327590a933128a59657f
[02:00:52] <graingert> squirrel: docs say not to
[02:01:28] <bancroft_> graingert: i'm trying to have all my updates come from a specific VM, so when I trigger an update I want to run a python script from any local machine that will ssh's into the VM which triggers the updates and that VM will run an ansible-playbooks for updating, etc. The problem is that when I run the update from the VM it always "Could not find or access ..." a resource. But when I run the ansible
[02:01:31] <bancroft_> from any of the laptop it works ...
[02:01:50] <squirrel> hm, i don't see that check_output is deprecated
[02:01:55] <graingert> squirrel: it's only for 3.5 backwards compat and 3.5 has been EOL for a long time
[02:02:08] <mayhew> graingert: ah cool, didn't know about that playground. Do you know why `bytes` isn't accepted in a `SupportsBytes` param?
[02:02:13] <graingert> squirrel: The recommended approach to invoking subprocesses is to use the run() function for all use cases it can handle.
[02:02:21] <graingert> mayhew: it's the other way around
[02:02:29] <graingert> mayhew: SupportsBytes is not a bytes
[02:03:23] *** Quits: kek_ (~kek_@net-2001-067c-10ec-574f-8000-0000-0000-018e.v6.ethz.ch) (Quit: Leaving)
[02:03:59] <squirrel> graingert: why isn't it deprecated then?
[02:05:03] <graingert> squirrel: politics
[02:05:13] <graingert> mayhew: looks like a mypy bug
[02:05:18] <mayhew> graingert: %b requires a bytes-like object, or an object that implements __bytes__ -- do you know what the most flexible typing thing to use?
[02:05:36] <graingert> docs says Bytes (any object that follows the buffer protocol or has __bytes__()).
[02:05:44] <mayhew> I'm trying to accept bytes, memoryview, bytearray, or anything that can be used in a %b format string
[02:09:25] <squirrel> i don't like these kinds of swiss army knife functions as run() that can so drastically change behavior, so i'll keep using check_output for now
[02:09:41] *** Joins: jufawanka (~jufawanka@37.167.252.51)
[02:11:19] <jinsun> mayhew: you can use bytes for all those
[02:11:47] <mayhew> jinsun: ah cool, is that documented anywhere?
[02:12:00] <jinsun> https://docs.python.org/3/library/typing.html#typing.ByteString
[02:12:11] <graingert> mayhew: yeah it's a mypy bug
[02:12:23] <graingert> mayhew: https://github.com/python/mypy/blob/b562cc235dcd2e71d2fed1aad72a4a8400bc307d/mypy/checkstrformat.py#L613-L614
[02:12:32] <graingert> it only supports actual "builtins.bytes"
[02:12:49] <foo> In the tiny chance someone here knows: I wonder, with apple airtags, is there anyway to get emails when location on an airtag changes? I'm trying to somehow programatically read where they are
[02:12:52] <graingert> but it should be _typeshed.ReadableBuffer | typing.SupportsBytes
[02:12:57] <graingert> I think
[02:13:29] *** Joins: rateliux (ratelius@gateway/vpn/protonvpn/ratelius)
[02:13:46] <mayhew> jinsun: sweet, I figured bytes would be nominal and went looking for some fancy protocol. Thanks!!
[02:13:58] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[02:14:24] <graingert> jinsun: mayhew  ?
[02:14:43] *** Quits: DaNeenjah (~jake@adsl-74-230-10-210.hsv.bellsouth.net) (Quit: WeeChat 3.1)
[02:14:52] <graingert> the mypy code is asserting a bytes type
[02:15:10] <graingert> interestingly the %s enforces str
[02:15:17] <graingert> rather than object as the docs say
[02:15:19] *** Quits: ratelius (ratelius@gateway/vpn/protonvpn/ratelius) (Ping timeout: 264 seconds)
[02:15:25] <mayhew> haha that code is way over my head
[02:15:55] <graingert> mayhew: BytesExpr is the %b or %(foo)b
[02:16:13] <graingert> and named_type("builtins.bytes") is like `v: bytes`
[02:16:28] *** Joins: markcerv (~markcerv3@c-24-5-22-21.hsd1.ca.comcast.net)
[02:16:53] *** Joins: andrew (~andrew@user/andrew)
[02:18:21] <jinsun> graingert: well for those 3 types just using bytes works
[02:18:21] <graingert> I think it's actually more useful to take bytes or str there because it can find more bugs
[02:18:39] <graingert> jinsun: which 3 types?
[02:18:54] <jinsun> bytes, memoryview, and bytearray
[02:19:06] <graingert> no it doesn't
[02:20:18] <graingert> oh yes it does, but only for %b
[02:20:29] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 245 seconds)
[02:20:54] *** Quits: markcerv (~markcerv3@c-24-5-22-21.hsd1.ca.comcast.net) (Ping timeout: 245 seconds)
[02:21:00] <jinsun> ah ok, I was testing only with %b
[02:21:01] <mayhew> yeah, I guess the only downside is that my function won't be maximimally flexible accepting everything that %b supports
[02:21:18] <mayhew> %b should work with any type that has __bytes__ I think
[02:22:52] *** Quits: rateliux (ratelius@gateway/vpn/protonvpn/ratelius) (Ping timeout: 250 seconds)
[02:22:55] <graingert> yeah that's what docs.python.org says
[02:23:04] <graingert> but it looks like the types are stricter in mypy mayhew https://github.com/python/mypy/blob/b562cc235dcd2e71d2fed1aad72a4a8400bc307d/mypy/checkstrformat.py#L192-L193
[02:23:08] <graingert> and it's intentional
[02:23:30] <graingert> really `"foo %b " % bytes(x)` gets you the same behaviour
[02:23:38] <ssbr> I do not understand testing. Do I get it right that tox only installs the dependencies listed in the tox-ini section, so I need to respecify dev dependencies there?
[02:24:09] *** Joins: syrius (syrius@titan.stormtek.net)
[02:24:16] <ssbr> my tests are complaining that pygments isn't installed, even though it's listed in [tool.poetry.dev-dependencies]
[02:24:17] *** Joins: rateliux (ratelius@gateway/vpn/protonvpn/ratelius)
[02:24:30] <ssbr> I don't remember how I ran tests before :(  [normally work in closed-source environment]
[02:24:38] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 244 seconds)
[02:24:50] <mkbloke> 1/win list
[02:25:25] *** Joins: cliluw (~cliluw@47.147.80.149)
[02:25:25] <graingert> jinsun: ah those types are automatically promoted
[02:25:33] <graingert> jinsun: https://github.com/python/mypy/blob/b562cc235dcd2e71d2fed1aad72a4a8400bc307d/mypy/semanal_classprop.py#L27-L35
[02:26:13] *** Quits: p-i- (~Ohmu@node-2ug.pool-118-173.dynamic.totinternet.net) (Read error: Connection reset by peer)
[02:26:20] <graingert> jinsun: https://mypy-play.net/?mypy=latest&python=3.9&gist=737c24744d006ea9c9bb1ec0daf1e36e
[02:27:12] <ssbr> ah, here we go: https://python-poetry.org/docs/faq/#is-tox-supported
[02:27:44] *** Joins: metanode (~metanode@user/metanode)
[02:27:44] <jinsun> graingert: cool, so bytes works for those in general, not just with %b
[02:29:11] *** Joins: audio (~audio@2603-8081-1800-00af-75d2-8c02-f70e-3f25.res6.spectrum.com)
[02:29:24] <audio> can anyone help? https://stackoverflow.com/questions/67878975/python-selenium-how-can-i-find-out-exactly-when-an-alert-happens/67879012#67879012
[02:30:57] *** Joins: p-i- (~Ohmu@node-5vi.pool-1-1.dynamic.totinternet.net)
[02:31:05] <mayhew> graingert: thanks for digging around! Very interesting.
[02:32:02] *** audio is now known as audiocat
[02:32:53] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:33:05] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[02:33:09] <jinsun> pyright doesn't complain about using SupportBytes in the rhs of %, it complains about asssigning bytes to SupportBytes though, but that is easily solved by a Union
[02:33:52] *** Joins: markcerv (~markcerv3@c-24-5-22-21.hsd1.ca.comcast.net)
[02:34:21] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 272 seconds)
[02:35:01] *** Joins: disi (~disi@107-131-127-0.lightspeed.sntcca.sbcglobal.net)
[02:35:52] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[02:36:31] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:8032:7380:65ad:ee40)
[02:37:37] <ssbr> https://github.com/ssbr/refex/pull/25/commits/516193c92448ede6778169c2926773322a7df6d8 hooray, tox and poetry actually work together really well
[02:37:37] <Evolver> Can someone translate this to Python? Thx in advance: https://blog.wolfram.com/2021/05/25/sleuthing-darkside-crypto-ransom-payments-with-the-wolfram-language/
[02:37:59] *** Quits: drincruz_ (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Ping timeout: 245 seconds)
[02:38:02] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[02:38:07] *** Quits: Ivyy (~Ivyy@2001:a61:13f0:c401:aaad:8747:f950:e29) (Remote host closed the connection)
[02:38:18] <graingert> audio: seems you need `await page.waitForEvent('dialog')` with playwright
[02:38:20] <maxtim> Thanks graingert, I got that entire function down to one line : x, y = list(filter(None, subprocess.run([Path('~/.scripts/get_workspaces.sh').expanduser()], text=True, capture_output=True, check=True).stdout.split('\n')))
[02:38:59] <graingert> maxtim: you probably want .partition("\n")
[02:39:10] <metanode> hello, I am in ipdb prompt and after typing the first "c", which properly shows the first row of the first code block, I cant proceed to the second row by typing "c" again as my tutorial says I can; when I do that, the terminal hangs.
[02:39:19] <graingert> also list(filter( is normally written as [x for x in xs if x]
[02:39:41] <graingert> metanode: row?
[02:39:51] <metanode> yes, row
[02:39:58] <graingert> metanode: maybe make an asciinema rec?
[02:40:21] *** Quits: seachdamh (~seachdamh@user/seachdamh) (Quit: Going offline, see ya! (www.adiirc.com))
[02:41:03] <metanode> graingert, I am not a brew-installer, so I cant asciinema rec it
[02:41:19] <graingert> metanode: ?
[02:41:24] <metanode> since there is no apt-install way to do it
[02:41:47] <graingert> metanode: there is for me
[02:42:09] <metanode> oh indeed
[02:42:14] <graingert> metanode: https://packages.ubuntu.com/search?keywords=asciinema
[02:42:16] *** Joins: death916 (~death916@user/death916)
[02:42:33] <metanode> its website makes no mention of linux install, therefore I thought so
[02:42:41] <metanode> but now installed
[02:42:58] *** Quits: darksun (~darksun@user/darksun) (Remote host closed the connection)
[02:43:22] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[02:43:34] *** Joins: last1 (last1@modemcable039.93-160-184.mc.videotron.ca)
[02:45:20] *** Joins: rockSTONE (sid315855@id-315855.brockwell.irccloud.com)
[02:45:29] *** Joins: superboot (~agentgasm@user/superboot)
[02:45:54] <rockSTONE> i don't suppose there's a setuptools plugin or some alternative that knows that a new "python setup.py sdist" isn't required since the latest sdist is already in dist folder? it seems python setup.py sdist will rebuild it every time even if nothing has changed and embed timestamps or something somewhere that produces a different sha hash on the resulting tarball
[02:45:57] *** Quits: Akuli (~Akuli@82-203-160-217.bb.dnainternet.fi) (Quit: Leaving)
[02:46:00] *** Joins: Fluxx (~Fluxx@user/fluxx)
[02:46:30] *** Quits: cedric (~cedric@2a01:cb11:867:c200:15fb:f6d:8d36:8b03) (Quit: Konversation terminated!)
[02:46:34] <graingert> rockSTONE: you can use python -m build with SOURCE_DATE_EPOCH
[02:46:40] <metanode> graingert, should I paste the .cast file contents?
[02:47:08] <graingert> metanode: upload it to asciinema.org like https://asciinema.org/a/362612
[02:47:09] <metanode> oh no, I dont want to do that
[02:47:13] <graingert> ok
[02:47:18] <rockSTONE> hm, never heard of that
[02:47:34] <metanode> I have to go through the file to see if there is anything sensitive
[02:47:36] *** Quits: galen (~gaken@user/galen) (Quit: leaving)
[02:47:46] *** Joins: gaken (~gaken@user/galen)
[02:47:56] <graingert> metanode: it's temporary by default
[02:47:56] <rockSTONE> graingert: you're referring to using this project? https://pypi.org/project/build/
[02:48:03] *** Quits: gaken (~gaken@user/galen) (Client Quit)
[02:48:05] <graingert> rockSTONE: yep
[02:48:14] <rockSTONE> cool - looks promising
[02:48:35] <metanode> my question is rather simple. I am new to debugging, but probably most here are experts. In terminal I started ipython, and ran "run -d filename", then I typed "c". it showed the first row. then I typed again, and it hanged. why?
[02:48:37] <graingert> rockSTONE: there's also strip-nondeterminism
[02:48:39] <metanode> this is my question
[02:48:49] *** Quits: loskutak (~loskutak@gw.mecom.cz) (Ping timeout: 245 seconds)
[02:48:50] <metanode> the tutorial says it should move to the next line
[02:48:52] <graingert> metanode: you mean line of code?
[02:48:56] <metanode> yes
[02:48:58] <graingert> metanode: `n` moves to the next line
[02:49:07] *** Joins: gaken (~gaken@user/galen)
[02:49:14] <metanode> ok..strange, why does the guide say "c" then?
[02:49:14] <graingert> c moves to the next breakpoint - which if you only set one is nowhere
[02:49:18] <graingert> url?
[02:49:26] <metanode> it is a book
[02:49:28] *** Quits: nathanjell (~Nathan@d162-157-36-152.abhsia.telus.net) (Quit: Leaving)
[02:49:35] <metanode> on my desktop
[02:49:36] <graingert> send the url to the page....
[02:49:48] <metanode> there is no page. it is a book I downloaded long ago
[02:49:55] <graingert> a tree book?
[02:50:02] *** gaken is now known as galen
[02:50:23] *** Quits: jufawanka (~jufawanka@37.167.252.51) (Read error: Connection reset by peer)
[02:50:35] <metanode> it is Langtangen's "A Primer on Scientific
[02:50:35] <metanode>  Programming with Python" maybe you know
[02:50:56] <metanode> the chapter on debugging
[02:50:59] <graingert> maybe scan that pagE?
[02:51:01] *** Quits: Norore (~weechat@2a01:e0a:23a:5600:b9d3:ae19:12de:25b) (Quit: WeeChat 3.1)
[02:51:03] <metanode> sure
[02:51:16] *** Parts: last1 (last1@modemcable039.93-160-184.mc.videotron.ca) ()
[02:51:36] <graingert> although I think trying to communicate with trees is a mistake...
[02:52:06] *** Joins: komencanto (~trevor@2604:3d09:6583:7100::a972)
[02:52:09] *** niko is now known as o
[02:52:24] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[02:53:15] <metanode> graingert, it was me. when I looked at again just now, it precisely explains that typing on "c" will continue execution until the break point, before which the latter is set.
[02:53:16] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[02:53:21] <metanode> like you said
[02:54:04] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 250 seconds)
[02:54:10] <metanode> sorry, thank you for pointing me there
[02:54:28] *** Joins: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com)
[02:56:59] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[02:57:08] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Remote host closed the connection)
[02:58:02] <audiocat> can anyone help? https://stackoverflow.com/questions/67878975/python-selenium-how-can-i-find-out-exactly-when-an-alert-happens/67879012#67879012
[02:58:10] *** Quits: cliluw (~cliluw@47.147.80.149) (Quit: Leaving)
[02:58:15] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Remote host closed the connection)
[03:00:55] *** Quits: n0cto (~n0cto@154.21.28.130) (Remote host closed the connection)
[03:01:03] <graingert> audiocat: I think you need something async like playwright
[03:01:11] <graingert> so you can do page.waitForEvent("dialog")
[03:01:44] <rockSTONE> graingert: so i'm googling but just getting more confused with the SOURCE_DATE_EPOCH reference for using "-m build" ... don't suppose you have another tip ?
[03:02:05] <graingert> rockSTONE: did you try strip-nondetermism ?
[03:02:16] <rockSTONE> no not yet, i thought they were exclusive options
[03:02:30] <rockSTONE> you mean strip-nondeterminism the C/perl tool?\
[03:02:39] *** Joins: DaNeenjah (~jake@adsl-74-230-10-210.hsv.bellsouth.net)
[03:02:44] <graingert> yeah it changes dates in tgz files and zips and things
[03:03:01] <rockSTONE> gotcha
[03:03:15] <graingert> rockSTONE: you can also build two sdists and check with https://diffoscope.org/ what changed
[03:03:24] *** Quits: odoood (~odoood@2601:c8:c003:a550::2) (Ping timeout: 245 seconds)
[03:03:50] *** Quits: disi (~disi@107-131-127-0.lightspeed.sntcca.sbcglobal.net) (Quit: Client closed)
[03:03:53] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:07:27] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[03:07:57] *** Quits: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Read error: Connection reset by peer)
[03:08:37] <audiocat> graingert, i'd have to refactor the entire scraper for that
[03:08:58] <audiocat> graingert, selenium has something like that, i'll use it
[03:09:00] *** Quits: ElectricSheep (~esheep_zn@pool-100-19-29-200.phlapa.fios.verizon.net) (Ping timeout: 268 seconds)
[03:09:30] <graingert> audiocat: but I don't think you can wait for a dialogue and do anything else with the page
[03:09:43] <NeilRG> graingert, good luck with your try: except E1 | E2 as e proposal!
[03:09:50] <audiocat> graingert, correct
[03:10:10] <graingert> NeilRG: yeah I doubt anyone will go for it
[03:10:24] <graingert> I think re-instating py2 exception isinstance is the way to go
[03:10:29] <NeilRG> graingert, doesn't isinstance(x, A | B) support that now?
[03:10:47] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[03:10:49] <graingert> yeah but `except Type as e` doesn't use isinstance
[03:10:52] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:11:20] <metanode> my original problem is an exercise asking me to debug the given code. running it returns no errors. it nicely prints everything. and then I enter these commands and get a dump of lines of which I have no clue. how on earth will I notice that something is wrong or not?
[03:11:32] <graingert> you have to use: https://www.irccloud.com/pastebin/7yiHCnSp/
[03:11:44] *** Joins: Vonter (~Vonter@user/vonter)
[03:11:59] <graingert> metanode: like reading the Traceback?
[03:12:05] *** Joins: smol (~smol@user/smol)
[03:12:24] <graingert> metanode: there's some clues like looking for where your user code is and looking just below it
[03:12:33] *** Quits: mikkel (~mike@208.110.120.167) (Ping timeout: 252 seconds)
[03:12:56] <graingert> metanode: but also you just have to read a few hundred thousand tracebacks
[03:13:03] <metanode> there is no traceback. I know it. but in these outputs of "n" or "s", there is nothing familiar. sometimes "s" command hangs, and I press enter again, and then it dumps a hoard of gibberish-looking lines
[03:13:35] *** Quits: fofoni (~fofoni@user/fofoni) (Remote host closed the connection)
[03:13:43] <metanode> as I said, there is no error as I know it. that kind of error is easy to notice. so I would conclude that the code is ok, but the exercise doesnt say so
[03:14:22] *** Quits: BigShip (~BigShip@user/bigship) (Quit: BigShip)
[03:14:29] <metanode> gosh, what the heck is this output, for ex. : https://paste.debian.net/hidden/0c1328c5/ ?
[03:15:10] <graingert> metanode: you can press `u` or `d`
[03:15:11] <metanode> if I showed these to a high-school kid learning python, he would run away without looking back
[03:15:26] <graingert> metanode: and use `w` to see where you are
[03:15:38] *** Joins: BigShip (~BigShip@user/bigship)
[03:17:34] <metanode> neither u nor w tells me where I am, but instead keeps showing me the same unknown realm; https://paste.debian.net/plainh/4ed74ef1
[03:17:56] <metanode> I just dont figure how I notice from it whether the code is ok or not
[03:18:03] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 252 seconds)
[03:18:16] <nedbat> metanode: you are seeing the code that implements the debugger, somehow.
[03:18:24] <metanode> or else; debugging is something one should begin with after much, much experience
[03:18:38] *** Parts: blackout69 (~blackout6@net-109-117-245-193.cust.vodafonedsl.it) ()
[03:18:54] <metanode> but I suppose that shouldnt be the case
[03:19:07] <nedbat> metanode: no, you are seeing weird stuff, it's not just you :)
[03:20:25] <metanode> nedbat, I am relieved :) no, I didnt really think it was the code I should be looking at, but in my searches in a dozen resources I havent really found something concrete that tells me "ok, this is debugging, and if you do that, you will see any error if it exists"
[03:20:59] *** Joins: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[03:22:04] *** Joins: stormbytes (~textual@ool-18e4a56c.dyn.optonline.net)
[03:23:01] <NeilRG> graingert, right, I'm just saying that there's precedent to your E1 | E2 notation
[03:23:25] <metanode> I understand there are times when the code may not immediately reveal fault lines, but I still havent figured what to do to see them
[03:23:32] <NeilRG> does anyone know how to make matplotlib's Qt backend work with a figure that needs to call subplots twice (to overwrite the old figures?)
[03:25:01] <graingert> NeilRG: Imho merging except/case would be nicer
[03:25:42] *** Quits: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 250 seconds)
[03:25:46] <graingert> try: foo
[03:25:46] <graingert> except case OSError(v): return v
[03:26:19] *** Quits: jinsun (~quassel@182.77.87.72) (Ping timeout: 245 seconds)
[03:26:23] <NeilRG> graingert, why bother with the case keyword?
[03:26:28] <NeilRG> oh
[03:26:30] <NeilRG> I see
[03:26:32] *** Joins: MrFantastik (~user@2603-7080-ae03-948a-5d48-c19e-d701-04b6.res6.spectrum.com)
[03:26:37] <graingert> NeilRG: To make it like match
[03:26:39] <MrFantastik> is there anyone available for me to pair with on a leetcode problem mock interview style?
[03:26:43] *** Joins: brezanac (~brezanac@dynamic-213-198-222-227.adsl.eunet.rs)
[03:26:48] <metanode> can you perhaps help me know what I should do? should I keep on pressing "n" hoping to see a meaningful notification=?
[03:27:09] <NeilRG> graingert, I think that looks pretty neat, but I don't use exceptions enough to know how useful it would be
[03:27:25] <NeilRG> it seems that exceptions aren't really that rich in Python
[03:27:40] <NeilRG> almost all of them are like ValueError, KeyError, TypeError
[03:27:58] <MrFantastik> You can make your own really easily
[03:28:14] <MrFantastik> class MyNewException(Exception): pass
[03:28:53] <NeilRG> yes, my point is that no one does
[03:29:01] <NeilRG> or not enough, in my experienc
[03:29:09] <NeilRG> numpy should really have a ShapeError
[03:29:12] <NeilRG> for example
[03:29:17] <NeilRG> they just never got around to it
[03:29:47] <MrFantastik> ¯\_(ツ)_/¯
[03:30:06] <MrFantastik> depends on the project I guess
[03:30:21] <MrFantastik> django has lots of exceptions and pretty robust usage
[03:30:30] *** Joins: i0e (~is0ke3@user/is0ke3)
[03:30:44] *** Joins: Crassus (~Crassus@user/crassus)
[03:31:14] <metanode> I think debugging is a good way to hate programming
[03:31:23] <MrFantastik> ya
[03:31:39] *** Quits: brezanac (~brezanac@dynamic-213-198-222-227.adsl.eunet.rs) (Quit: Leaving)
[03:31:59] <metanode> dealing with things you dont even know how they exist and in which form
[03:33:13] *** Joins: schu (~schu@c-24-98-88-246.hsd1.ga.comcast.net)
[03:33:18] *** Quits: metanode (~metanode@user/metanode) (Quit: Leaving)
[03:33:27] <ChrisWarrick> stormbytes: Welcome! To answer your question on the IRC network we don’t use anymore: run -m venv with the python you want to use for the venv (`python3 -m venv`). Or for py2, virtualenv has the -p parameter (which may or may not work).
[03:33:45] *** Quits: schu (~schu@c-24-98-88-246.hsd1.ga.comcast.net) (Client Quit)
[03:34:21] *** Quits: smol (~smol@user/smol) (Quit: smol)
[03:34:24] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[03:35:13] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2-rc1)
[03:35:55] *** Joins: wakeup (~wakeup@user/wakeup)
[03:37:42] *** Joins: insidesources (~insidesou@user/insidesources)
[03:38:00] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[03:39:04] *** Quits: hanaan (~naan@user/naan) (Quit: Leaving)
[03:40:05] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[03:40:38] *** Joins: Wulf4 (~Wulf@user/wulf)
[03:41:02] *** Joins: Cata (~Cata@user/cata)
[03:41:42] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 252 seconds)
[03:42:12] *** Joins: jufawanka (~jufawanka@37.173.43.78)
[03:42:23] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[03:43:54] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[03:43:54] *** Wulf4 is now known as Wulf
[03:44:34] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.1)
[03:44:50] *** Quits: MrFantastik (~user@2603-7080-ae03-948a-5d48-c19e-d701-04b6.res6.spectrum.com) (Remote host closed the connection)
[03:44:51] <llinguini> Hey guys, I'm trying to figure out how to use json
[03:44:54] <mefistofeles> what is the recommended way of making a class serializable to json?
[03:44:57] <llinguini> I have a simple json input https://gist.github.com/adityasule/40a599406d76055161149672e4ee6dd4
[03:45:00] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 252 seconds)
[03:45:01] <mefistofeles> ha, related questions :P
[03:45:18] <llinguini> I'm using the inbuilt json library to read and write it https://gist.github.com/adityasule/e9974a1d93c7c8a23dbc40696e9d97b0
[03:45:48] <llinguini> but my output is a string that is then written to the file rather than the json itself being written to the file
[03:45:49] <llinguini> https://gist.github.com/adityasule/d414e11bee61000c5ce368f6cb264887
[03:45:52] <llinguini> how do I fix that?
[03:45:54] *** Quits: ponadm (pony@gateway/vpn/protonvpn/ponadm) (Ping timeout: 245 seconds)
[03:45:57] <llinguini> mefistofeles: haha yeah, what timing
[03:46:35] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[03:47:54] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[03:48:04] *** Joins: withered_wolf (~withered_@2600:1008:b164:867a:a57f:bd81:676d:f0c4)
[03:49:05] <llinguini> oh
[03:49:07] <llinguini> I see
[03:49:20] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[03:49:20] <llinguini> I'm a giant idiot low on sleep and coffee
[03:49:23] *** Quits: zeenk (~zeenk@2a02:2f04:a310:b600:b098:bf18:df4d:4c41) (Quit: Konversation terminated!)
[03:49:42] <llinguini> I seem to have deleted my line that actually loaded the json into memory lol
[03:49:47] *** Joins: ewdwasright (~ewdwasrig@108.210.81.181)
[03:50:03] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:91cc:2528:4817:d496) (Quit: Leaving)
[03:50:21] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:91cc:2528:4817:d496)
[03:51:39] *** Quits: iNeedKoffee (~ubuntu@public.sa-edbd-dsto-liva1.aarnet.net.au) (Quit: Konversation terminated!)
[03:53:03] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[03:53:51] *** Joins: thiras (~thiras@user/thiras)
[03:57:20] *** Quits: Guddu (~Guddu@59.95.232.23) (Quit: Leaving)
[03:58:28] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[03:58:54] *** Quits: withered_wolf (~withered_@2600:1008:b164:867a:a57f:bd81:676d:f0c4) (Remote host closed the connection)
[04:02:02] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Client Quit)
[04:03:49] *** Quits: ffledgling (~textual@2620:10d:c090:500::4:28c8) (Ping timeout: 245 seconds)
[04:06:15] *** Joins: heco (~redrum@user/redrum88)
[04:10:32] *** Joins: ponadm (pony@gateway/vpn/protonvpn/ponadm)
[04:10:59] *** Joins: qlixed (~qlixed@2800:810:471:2f8::1b7)
[04:11:28] *** rateliux is now known as ratelius
[04:11:35] *** Joins: dez (~dez@user/dez)
[04:12:09] *** Quits: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 245 seconds)
[04:12:14] <NoImNotNineVolt> can someone help me parse this spaghetti?
[04:12:15] <NoImNotNineVolt> https://bpa.st/PPPA
[04:12:26] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 258 seconds)
[04:13:12] <NoImNotNineVolt> is all this apply_tuple stuff just obfuscation of fn(args, kwargs)? :P
[04:13:20] <NoImNotNineVolt> or kargs [sic]
[04:14:04] <NoImNotNineVolt> sorry, fn(*args, **kargs)
[04:14:29] <NoImNotNineVolt> is this additional indirection accomplishing anything?
[04:17:57] *** Quits: frostschutz (~frostschu@2a01:c22:ccac:9e00:c743:ef63:372f:266d) (Remote host closed the connection)
[04:18:35] <meejah> NoImNotNineVolt: yeah, pretty sure that can just be "response = fn(*args, **kwargs)"
[04:20:01] <NoImNotNineVolt> i swear to god these devs make me want to cry sometimes.
[04:20:04] <c4017w> With multiprocessing, can I make the new process use a different Python version? I want a 3.9 process to spawn a 3.7 process. Looks like someone tried with some success, but I wonder if it's even a good idea? https://stackoverflow.com/questions/39372708/spawn-multiprocessing-process-under-different-python-executable-with-own-path
[04:20:56] *** Joins: bboles (~bboles@64.94.212.195)
[04:24:00] *** Quits: aw1 (~aw1@203.171.246.186) (Remote host closed the connection)
[04:24:15] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[04:25:30] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Client Quit)
[04:27:17] *** Joins: dez- (~dez@user/dez)
[04:28:28] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[04:29:50] *** Quits: dez (~dez@user/dez) (Ping timeout: 250 seconds)
[04:29:53] *** Joins: vimart (~vimart@85.255.235.59)
[04:30:13] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[04:31:34] *** Joins: withered_wolf (~withered_@44.sub-174-192-137.myvzw.com)
[04:31:51] *** Joins: f8e4_ (~user@159.89.21.45)
[04:31:54] <f8e4_> hey
[04:32:05] *** Quits: eck0 (~Android@mobile-166-173-61-174.mycingular.net) (Quit: -a- Connection Timed Out)
[04:32:18] *** Quits: withered_wolf (~withered_@44.sub-174-192-137.myvzw.com) (Remote host closed the connection)
[04:33:04] <meejah> c4017w: probably not; i'd try some other inter-process communication instead (also: why do you want the mismatched versions?)
[04:33:28] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[04:34:00] <nedbat> c4017w: i'm also curious why you want mismatched versions
[04:34:07] <nedbat> f8e4_: hey
[04:34:16] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[04:34:30] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:35:02] <c4017w> I have some library that only works up to 3.7, but I'd like to use the latest version in the rest of my code
[04:36:20] <c4017w> I'm already running that library through multiprocessing, so I was wondering if I could easily set the exetable version
[04:37:19] <nedbat> c4017w: you could multiprocessing out to a python function that uses subprocess to run 3.7
[04:38:04] *** Quits: ponadm (pony@gateway/vpn/protonvpn/ponadm) (Ping timeout: 250 seconds)
[04:38:13] *** Joins: withered_wolf (~withered_@2600:1008:b164:867a:a57f:bd81:676d:f0c4)
[04:38:24] <c4017w> I'd have to write a bunch of code to pipe the data then
[04:39:26] *** Quits: withered_wolf (~withered_@2600:1008:b164:867a:a57f:bd81:676d:f0c4) (Remote host closed the connection)
[04:39:37] <nedbat> c4017w: just curious, what stops the library from working on 3.9?
[04:39:46] *** Quits: f8e4_ (~user@159.89.21.45) (Quit: WeeChat 3.1)
[04:40:46] *** Quits: Betal (~Beta@user/betal) (Ping timeout: 272 seconds)
[04:41:20] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[04:41:37] <c4017w> It's a C library with python bindings provided as a dll. I'm sure it would work fine with 3.9, but the developers only build the dll for 3.7 and have no plans of changing
[04:41:41] *** Joins: f8e4 (~user@159.89.21.45)
[04:41:49] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[04:42:12] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 252 seconds)
[04:42:51] *** Quits: f8e4 (~user@159.89.21.45) (Client Quit)
[04:43:21] *** Joins: zstix (~zstix@38.104.105.178)
[04:44:49] *** Joins: f8e4 (~user@159.89.21.45)
[04:45:10] <zstix> Does python have built-in support for flatMap or some way to flatten a nested array?
[04:46:01] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:46:37] *** Parts: sliwkr (~kks@91.193.4.155) (#archlinux goodnight)
[04:47:37] <nedbat> zstix: no, but there are libraries that can help
[04:47:43] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:47:46] <zstix> Gotcha, thanks
[04:49:28] *** Joins: bigRoo (~user@131.236.54.84)
[04:50:11] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[04:50:39] *** Joins: mike18_ (~geri@71-220-52-187.mpls.qwest.net)
[04:50:45] <dale> I need to parse a JSON Schema so I can produce docs from it (not terribly satisfied with the output of existing solutions I've found).  I found json_ref_dict to help parse them.  Anything better to parse and process a JSON Schema?  (As opposed to using a JSON Schema to validate some JSON, mind you.)
[04:51:01] <mike18_> hi i have a 2 json strings to compare, how can i ignore a key in the comparision?
[04:51:23] <mike18_> in my case i dont want the timestamp to compare
[04:51:26] <mike18_> bc they differ
[04:51:30] <[O-O]> mike18_: how big is the json
[04:51:44] <[O-O]> u can drop the timestamp and do simple == comparison
[04:52:40] <mike18_> in kb?
[04:52:44] <[O-O]> u can do ts = json_data['timestamp'], then del json['data']
[04:52:47] <[O-O]> oops\
[04:52:55] <[O-O]> del json_data['timestamp']
[04:53:02] <mike18_> 5900
[04:53:04] <mike18_> bytes
[04:53:10] <mike18_> maybe 1k if big
[04:53:22] <[O-O]> yeah
[04:53:26] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 244 seconds)
[04:53:27] <mike18_> maybe 10k
[04:53:31] <[O-O]> you say they're strings?
[04:53:35] <mike18_> yeah
[04:53:43] <[O-O]> import json
[04:53:52] <[O-O]> then json_data = json.loads(string)
[04:53:56] <mike18_> is there a lib i can use for the compare with exclude key?
[04:54:18] <[O-O]> u dont need one except json
[04:54:35] <mike18_> i might need the timestamp later for print
[04:54:43] <mike18_> in case the compare is wrong...
[04:54:48] <[O-O]> u can save it
[04:54:57] <[O-O]> ts = json_data['timestamp']
[04:55:23] <mike18_> what about https://stackoverflow.com/questions/51485879/how-to-compare-two-json-files-disregarding-a-certain-key ?
[04:55:42] <mike18_> does it take a file here or strings?
[04:57:27] <[O-O]> it takes dicts in that case
[04:57:30] <hexology> zstix: itertools.chain.from_iterable will flatten 1 level of a nested sequence
[04:57:33] <[O-O]> the function signature is a bit misleading
[04:57:53] <mike18_> json_data = json.loads(string) gives me a dict right?
[04:58:00] <[O-O]> yes
[04:58:02] <hexology> zstix: from itertools import chain; assert [1,2,3,4] == list(chain.from_iterable([[1,2], [3,4]]))
[04:58:03] <[O-O]> or list
[04:58:16] <hexology> or a string, int, float, or None :)
[04:58:21] <hexology> (all of which are valid json)
[04:58:23] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[04:58:28] <zstix> hexology: nice...thank you!
[04:58:43] <mike18_> [0-0] so i call print(compare_json(json_data_actual, json_data_expected, ('timestamp',))) ?
[04:59:22] <hexology> zstix: there are lots of interesting "recipes" for things like this in the itertools documentation https://docs.python.org/3/library/itertools.html as well as the 3rd-party toolz library https://toolz.readthedocs.io/
[04:59:43] <[O-O]> mike18_: u can do that i think
[04:59:48] *** Quits: dez- (~dez@user/dez) (Ping timeout: 252 seconds)
[04:59:54] <[O-O]> but i still recommend removing it and adding back
[04:59:59] <[O-O]> as it is more efficient
[05:02:59] *** Joins: Betal (~Beta@user/betal)
[05:03:55] <mike18_> what about the diffjson lib?
[05:04:08] <mike18_> json-diff
[05:04:12] <mike18_> https://pypi.org/project/json-diff/
[05:04:39] <[O-O]> i havent used it
[05:04:46] *** Joins: leduyquang753 (~leduyquan@27.76.191.235)
[05:04:56] <[O-O]> look interesting
[05:04:57] <mike18_> t1 = {"for life": "vegan", "ingredients": ["no meat", "no eggs", "no dairy"]}
[05:04:57] <mike18_> t2 = {"for life": "vegan", "ingredients": ["veggies", "tofu", "soy sauce"]}
[05:04:57] <mike18_> print (DeepDiff(t1, t2, exclude_paths="root['ingredients']"))
[05:05:03] <mike18_> looks like you can do that
[05:05:20] <[O-O]> but why not
[05:05:40] <mike18_> exclude_paths=["root['timestamp']"
[05:05:43] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 264 seconds)
[05:05:45] <mike18_> if it see that right
[05:06:00] <[O-O]> maybe
[05:06:11] <[O-O]> hmm its in quotes
[05:06:39] <[O-O]> yeah i think it shld work
[05:07:58] <vimart> How can I make a tuple of dict?
[05:08:04] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (Ping timeout: 252 seconds)
[05:08:05] *** Quits: gildarts (16abab341f@user/gildarts) (Remote host closed the connection)
[05:08:14] *** Joins: gildarts (16abab341f@user/gildarts)
[05:08:18] *** Parts: zstix (~zstix@38.104.105.178) (Goodbye)
[05:08:32] <vimart> tuple(dict) returns keys
[05:09:09] *** Quits: qlixed (~qlixed@2800:810:471:2f8::1b7) (Quit: That's all folks!!)
[05:09:19] <f8e4> vimart list({1:2}.items())
[05:09:44] <vimart> tuple(zip(dict.keys(),dict.values())) doesnt do what I want
[05:09:55] <vimart> f8e4:  let met try
[05:10:15] <nedbat> vimart: what tuple do you want for {"a":1, "b":2} ?
[05:10:40] *** Joins: cjb (~cjb@user/cjb)
[05:13:01] *** Joins: i0e (~is0ke3@user/is0ke3)
[05:14:19] <vimart> >>> people = {1: {'name': 'John', 'surname': 'Mclachan', 'age': '27', 'city': 'London', 'sex': 'Male', 'married': 'Yes', 'phoneNo': '072374753'}, 2: {'name': 'Marie', 'surname': 'Rose', 'age': '22', 'city': 'London', 'sex': 'Female', 'married': 'No', 'phoneNo': '072374753'}, 3: {'name': 'Luna', 'surname': 'Stallone', 'age': '24', 'city': 'Edinburgh', 'sex': 'Female', 'married': 'No', 'phoneNo':
[05:14:21] <vimart> '072374753'}, 4: {'name': 'Peter', 'surname': 'Griffin', 'age': '29', 'city': 'Edinburgh', 'sex': 'Male', 'married': 'Yes', 'phoneNo': '072374753'}}
[05:15:18] <stormbytes> is there an easy/simple way to install a specific version of python with venv ?
[05:15:19] *** Joins: sm_ (~user@plaintextaccounting/sm)
[05:15:19] <vimart> >>>people[1] output: {'name': 'John', 'surname': 'Mclachan', 'age': '27', 'city': 'London', 'sex': 'Male', 'married': 'Yes', 'phoneNo': '072374753'}
[05:15:28] <vimart> I want:
[05:15:51] <Jonno_FTW> stormbytes: use pyenv. There's pyenv-installer to make it easy to setup on your machine initially
[05:15:53] <vimart> ('name': 'John', 'surname': 'Mclachan', 'age': '27', 'city': 'London', 'sex': 'Male', 'married': 'Yes', 'phoneNo': '072374753')
[05:15:59] <hexology> stormbytes: use pyenv. venv is controlled by a single python installation.
[05:16:01] <Jonno_FTW> vimart: consider using a pasta
[05:16:04] <Jonno_FTW> paste
[05:16:16] *** Joins: sm[m] (~sm@plaintextaccounting/sm)
[05:16:16] <stormbytes> hexology Jonno_FTW thx
[05:16:20] <vimart> yeah could be easier
[05:16:26] <vimart> I'm stoned
[05:16:32] <hexology> https://bpaste.net
[05:16:44] *** Quits: ashwinvis (~avmo@user/ashwinvis) (Ping timeout: 245 seconds)
[05:16:53] <stormbytes> reading up on pyenv now
[05:17:10] <Jonno_FTW> stormbytes: https://github.com/pyenv/pyenv-installer
[05:17:21] <vimart> Yeah I know it but thought I'd be able explain without pasting.
[05:17:24] *** Quits: cthulchu_ (~Cthulchu@195.66.198.226) (Ping timeout: 252 seconds)
[05:17:25] <vimart> My bad
[05:17:28] <stormbytes> Jonno_FTW already installed with Homebrew
[05:17:30] *** Parts: crised (~crised@186.67.181.204) ()
[05:17:34] <Jonno_FTW> ahhhh
[05:17:39] <vimart> I do palogise for any inconvenience in that case.
[05:17:39] <Jonno_FTW> I provide no support for homebrew
[05:17:45] <Jonno_FTW> vimart: what is your question?
[05:17:56] <vimart> damn
[05:18:14] <Jonno_FTW> is your question how to get the the first person from the people dict?
[05:18:22] <Jonno_FTW> because that's people[1]
[05:18:38] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[05:18:48] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 250 seconds)
[05:19:01] <vimart> so  I want the output of people[1] but instead brackets I would like paranthesis
[05:19:16] *** Quits: DaNeenjah (~jake@adsl-74-230-10-210.hsv.bellsouth.net) (Quit: WeeChat 3.1)
[05:19:23] <Jonno_FTW> python shows dicts with curly braces
[05:19:39] *** Quits: emerent (~quassel@p200300cd5703bbe5ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[05:19:40] <Jonno_FTW> if you want parenthesis, you'll have to make the string yourself
[05:19:53] *** Joins: emerent (~quassel@p200300cd5703bb3cba27ebfffed28a59.dip0.t-ipconnect.de)
[05:20:02] *** Quits: Lando-HoloNet (~Lando@user/lando-spacepimp) (Ping timeout: 272 seconds)
[05:21:08] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[05:21:18] <Jonno_FTW> vimart: would look like print("("+ ",".join(f"'{k}': 'v'" for k,v in people.items()) + ")")
[05:21:22] *** Joins: JanC (~janc@user/janc)
[05:21:26] <Jonno_FTW> that's probably wrong but you get the idea
[05:21:59] *** Quits: entuland (~entuland@user/entuland) (Quit: Leaving)
[05:22:19] <vimart> yeah but seems more complicated than I was thinking
[05:22:27] <Jonno_FTW> you can use json.dumps
[05:22:34] <Jonno_FTW> with custom options
[05:22:49] <Jonno_FTW> not sure why you want parenthesis though
[05:22:55] <vimart> will have to break it
[05:23:02] *** Joins: sed (~sed@pool-100-7-53-231.rcmdva.fios.verizon.net)
[05:23:49] <Jonno_FTW> why do you even want this?
[05:25:13] *** Joins: philipp64|work_ (~philipp64@174.27.186.243)
[05:25:21] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 272 seconds)
[05:25:31] *** Quits: philipp64|work (~philipp64@174.27.8.12) (Ping timeout: 264 seconds)
[05:25:31] *** philipp64|work_ is now known as philipp64|work
[05:28:08] *** Quits: maxtim (~maxtim@c-71-228-128-153.hsd1.ga.comcast.net) (Remote host closed the connection)
[05:28:45] *** Quits: Cata (~Cata@user/cata) (Quit: Leaving)
[05:30:21] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:29] <nedbat> vimart: Let's start with a simpler example: what tuple do you want for {"a":1, "b":2} ?
[05:32:32] <vimart> nedbat: ('a':1, 'b':1)
[05:32:45] <nedbat> vimart: if you don't mind me asking, why do you want that syntax?  What will read it?
[05:33:26] <Jonno_FTW> looks sort of like perl
[05:34:11] <vimart> curly braces suck, parathesis are sexy
[05:34:18] <vimart> curly braces suck, paranthesis are sexy
[05:34:26] <ssbr> parentheses
[05:34:30] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:34:39] *** Joins: vlm (~vlm@user/vlm)
[05:34:46] <vimart> txh ssbr
[05:34:47] <nedbat> vimart: Jonno_FTW's code is what you want then (adapted):  "("+ ", ".join(f"{k!r}: {v!r}" for k,v in people.items()) + ")"
[05:34:50] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[05:35:07] *** Quits: jeho (~jehoshaph@c-24-21-32-6.hsd1.or.comcast.net) (Ping timeout: 264 seconds)
[05:35:30] <ssbr> +1, that's what I'd write too. Or it's what I'd write if I remembered the !r format specifier.
[05:36:17] *** Joins: philipp64|work_ (~philipp64@174.27.8.12)
[05:36:59] <Jonno_FTW> parentheticals?
[05:37:02] <vimart> nedbat: something like that, it prints a whole dictionary
[05:37:16] <Jonno_FTW> vimart: put people[1] instead of people in the line then
[05:37:23] <nedbat> vimart: i don't understand.  didn't you want to print the whole dictionary?
[05:37:34] <Jonno_FTW> or write a function that does it and pass w/e you want
[05:37:50] <Jonno_FTW> or write your own dict subclass and overwrite the __repr__ function
[05:37:55] <vimart> yes, see it
[05:37:58] <ssbr> Jonno_FTW: eek.
[05:38:11] <vimart> nedbat: nah, I was explaining earlier
[05:38:12] <nedbat> ssbr: +1, that's what I'd write too :)
[05:38:13] <Jonno_FTW> then you can do w/e format you want
[05:38:21] <vimart> but got it, thx
[05:38:30] <nedbat> vimart: i showed you a two-element dict, you showed both elements in the result.
[05:38:36] *** Quits: YoungPotato (~user@155.98.225.76) (Remote host closed the connection)
[05:38:44] *** Quits: philipp64|work (~philipp64@174.27.186.243) (Ping timeout: 250 seconds)
[05:38:44] *** philipp64|work_ is now known as philipp64|work
[05:39:19] *** Quits: srhm (~ascii@user/srhm) (Ping timeout: 264 seconds)
[05:39:57] *** Quits: theterg (~theterg@pool-141-155-7-155.nycmny.fios.verizon.net) (Ping timeout: 252 seconds)
[05:40:07] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-6d92-43bf-24a8-06bd.res6.spectrum.com) (Read error: Connection reset by peer)
[05:40:25] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[05:40:53] *** Quits: dtux (~dtux@2600:1700:22f0:37bf:eaf3:b54e:2804:fa95) (Quit: dtux)
[05:41:11] <vimart> I don't know if I break it Jonno_FTW .
[05:41:36] <Jonno_FTW> you're going to break something
[05:41:51] *** Joins: theterg (~theterg@pool-141-155-7-155.nycmny.fios.verizon.net)
[05:41:55] <Jonno_FTW> best to accept that brackets are used in a number of languages for mapping types
[05:41:58] *** Joins: xa0s (~xa0s@mab.sdf.org)
[05:42:34] *** Quits: bancroft_ (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca) (Ping timeout: 245 seconds)
[05:42:43] <ssbr> if you hate curly braces, just be glad this isn't C++ where the spelling is {{k, v}, {k2, v2}, ...}
[05:43:01] <Jonno_FTW> you're giving me flashbacks to <<< hell in java templates
[05:44:04] <vimart> nedbat: I get some parts for key,value loop, .join() but {k!r}: {v!r}
[05:44:54] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Ping timeout: 252 seconds)
[05:45:17] <ssbr> Jonno_FTW: I was gonna say no <> required, but apparently the c++20 deduction guides aren't _that_ hot.
[05:45:19] <vimart> nedbat: I was copying the pasta, so was saying about tuple of output
[05:45:47] <ssbr> vimart: what's the question about f'{k!r}: {v!r}' ?
[05:46:02] *** Joins: Preston (~liminalcr@024-181-005-175.res.spectrum.com)
[05:46:29] *** Joins: tkj1028 (~tkj@user/tkj1028)
[05:46:51] <mike18_> hi when i call datetime.now() in python is it always utc time?
[05:46:57] <mike18_> or local time or what?
[05:47:19] <Jonno_FTW> mike18_: it will be local time. for utc do datetime.utcnow()
[05:47:21] <FunkyBob> mike18_: AIUI it's timezone naive
[05:47:30] <FunkyBob> ah, but, yes,
[05:47:37] *** Joins: duso (~duso@130.102.13.110)
[05:47:46] <mike18_> timezone naive?
[05:47:49] *** Quits: pyeverything (~mona@c-66-31-107-137.hsd1.ma.comcast.net) (Quit: Leaving.)
[05:47:50] <ssbr> mike18_: https://docs.python.org/3/library/datetime.html#aware-and-naive-objects
[05:47:52] <Jonno_FTW> by default, there's on timezone set, but the time will be in your local timezone
[05:47:58] <ssbr> AIUI it's a local time, but timezone naive representation of it
[05:48:00] <mike18_> ok
[05:48:10] <Omega037> PyCon 2021 talks so far have been kinda underwhelming...maybe it is just the nature of the virtual aspect
[05:48:19] <mike18_> what happens if i run it in a docker container?
[05:48:25] <mike18_> what timezone will it use than?
[05:48:37] <Jonno_FTW> try it and see
[05:48:39] <ssbr> Omega037: talks are no good unless the presenters are sweating blood from nervousness about the crowd, right
[05:49:00] <ssbr> mike18_: the local time (in the container)
[05:49:16] <mike18_> and how is that set in python:3.9.5 img?
[05:49:40] <ssbr> mike18_: python doesn't set that. It's up to how you've configured it, or where you're running it, or both.
[05:49:44] <Omega037> ssbr, a few seemed only half interested in their own talk
[05:49:52] <ssbr> mike18_: if you don't know, just check by doing it, like Jonno_FTW suggested.
[05:50:01] <Omega037> Also, UK accents are not nearly as impressive via Zoom
[05:50:08] <ssbr> wow rude
[05:50:33] *** Joins: wyclif (~wyclif@user/wyclif)
[05:50:54] *** Quits: FluffyMask (~FluffyMas@user/fluffymask) (Quit: WeeChat 2.9)
[05:51:01] <Omega037> To be fair, I didn't watch keynotes, just random ones of interest
[05:51:28] <Omega037> The whole time I felt like someone had used a GAN to create a video based on a medium article
[05:51:38] <wyclif> hi everybody
[05:53:22] <Jonno_FTW> wyclif: hello
[05:54:03] *** Quits: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) (Quit: WeeChat 3.1)
[05:54:45] *** Joins: ElectricSheep (~esheep_zn@pool-100-19-29-200.phlapa.fios.verizon.net)
[05:56:27] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[06:00:18] *** Quits: argento (~argent0@168-227-96-51.ptr.westnet.com.ar) (Ping timeout: 252 seconds)
[06:02:47] <Preston> I was told to come here and ask you all why my code works here https://github.com/LiminalCrab/auger/blob/main/data/metadata.py because I declared psycopg2's connection and cursor outside of main and closed them at the end of the file. Everything works fine and it embeds data
[06:03:17] *** Quits: akk (~akk@75-161-39-50.albq.qwest.net) (Quit: +++)
[06:06:14] *** Joins: zebrag (~chris@user/zebrag)
[06:07:38] *** Joins: RoadRunner (~kvirc@S010600fc8db51093.vc.shawcable.net)
[06:08:33] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[06:08:38] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[06:10:08] <RoadRunner> can one edit the color scheme in PyCharm CE?
[06:10:28] *** Joins: wyclif (~wyclif@user/wyclif)
[06:11:02] <Jonno_FTW> RoadRunner: yes File -> Settings -> Editor -> Color Scheme
[06:12:03] <duso> Can someone please ELI5 the dict.update method? I have this practice question for an exam and after reading over the help for dict.update, just can't seem to wrap my head around what it is trying to say: https://bpa.st/WIUQ
[06:13:20] <Jonno_FTW> duso: have you tried running it?
[06:13:30] <Jonno_FTW> what's the result of b.get
[06:13:55] <Jonno_FTW> then what happens if you call a.update with the result of the previous step?
[06:14:06] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[06:20:15] <duso> if I run the b.get by itself, i just returns 'Error' as the second field of the dict.update method was changed from the default of None to 'Error'
[06:20:19] <duso> I get that part
[06:21:01] <RoadRunner> Jonno_FTW: regarding Color Scheme, this is where you can pick, import and export schemes but where do you edit them for greater customization? can it be done within PyCharm's gui or must the theme config file be edited manually?
[06:21:57] <duso> there is no key 4 in 'a' to update, and there is no key 4 in 'b' to get, but when I put a key 4 in both 'a' and 'b' it still gave error "ValueError: dictionary update sequence element #0 has length 1; 2 is required"
[06:23:19] <duso> * key _and_ value
[06:24:13] *** Quits: jufawanka (~jufawanka@37.173.43.78) (Read error: Connection reset by peer)
[06:24:23] <Jonno_FTW> RoadRunner: if you click the expando on the "color scheme" you can modify the colours for the selected theme https://imgur.com/tIgiZBX.png
[06:26:22] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[06:26:39] <duso> Jonno_FTW: This article helped: https://www.programiz.com/python-programming/methods/dictionary/update
[06:28:52] *** Joins: wyclif_ (~wyclif@user/wyclif)
[06:28:55] *** Joins: bancroft_ (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca)
[06:29:25] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:91cc:2528:4817:d496) (Quit: Leaving)
[06:29:35] *** Quits: wyclif_ (~wyclif@user/wyclif) (Client Quit)
[06:31:00] <RoadRunner> Jonno_FTW: thank you :)
[06:32:05] <Tashtari> duso: That's your answer, isn't it?
[06:32:07] <duso> I think I get what is happening, the b.get is only returning one element 'error' while a.update is expecting 2 elements so is raising ValueError
[06:32:27] <duso> so the answer is None of the above
[06:32:46] <Tashtari> Not 'd' for error?
[06:32:53] <Tashtari> Like, an actual error, not the string 'Error'
[06:32:57] <duso> but the point is not getting the right answer, but to learn and understand what is going on =)
[06:33:13] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[06:33:26] <duso> Tashtari: Correct. Answer is E: None of the above
[06:34:15] <Tashtari> Seems like a trick question if that's the case.  I'd have picked 'd' because the call to a.update raises an error.
[06:34:16] <duso> IMHO anyway, I don't have the answers for the practice exam
[06:34:24] <RoadRunner> Jonno_FTW: are there more color schemes available for download?
[06:34:39] *** Quits: wyclif (~wyclif@user/wyclif) (Quit: leaving)
[06:35:32] *** Joins: xrogaan_ (~xrogaan@user/xrogaan)
[06:35:42] *** Quits: xrogaan_ (~xrogaan@user/xrogaan) (Remote host closed the connection)
[06:37:01] *** Quits: richbridger (~richbridg@213-225-37-94.nat.highway.a1.net) (Ping timeout: 245 seconds)
[06:37:01] *** Joins: zebrag (~chris@user/zebrag)
[06:37:09] *** Joins: MrFixIt (~samurai@c-73-246-215-75.hsd1.il.comcast.net)
[06:38:51] *** Joins: skyrael (~default@212.102.37.182)
[06:39:19] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 264 seconds)
[06:39:45] *** Joins: cellofellow (~user@166.70.50.58)
[06:40:35] <duso> This is the next question and I feel it is related: https://bpa.st/6MOA. I think the answer is d: None, but only when I run it in idle I got no value for d2, which after I thought about it makes sense as dict.update returns 'None' so that is what will be stored for the value of d2. Is that thinking right?
[06:41:06] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:41:45] *** Quits: andrew (~andrew@user/andrew) (Ping timeout: 268 seconds)
[06:43:39] *** Quits: MrFixIt (~samurai@c-73-246-215-75.hsd1.il.comcast.net) (Quit: Leaving)
[06:43:41] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) ()
[06:44:14] *** Joins: rbtEngrDude (~textual@wsip-66-210-249-144.ph.ph.cox.net)
[06:44:16] <Jonno_FTW> duso: the question wants the value of d2, d2.update returns None on successfuly updating the dict
[06:46:09] <Jonno_FTW> duso: as for the previous question, the exam probably wants d)Error, but calling a.update("Error") raises ValueError, so maybe not strictly correct, it's a poorly worded question in that case
[06:46:51] *** Joins: tijuco (~tijuco@user/tijuco)
[06:46:53] *** Joins: MrFixIt (~samurai_@c-73-246-215-75.hsd1.il.comcast.net)
[06:47:03] *** Quits: tkj1028 (~tkj@user/tkj1028) (Ping timeout: 252 seconds)
[06:47:05] <Jonno_FTW> actually the answer is e), because the contents of a is not listed in the options
[06:48:26] <Tashtari> I suppose that's true.  I don't know, I agree it's a badly worded question.
[06:48:47] <Tashtari> It's not clear what choice 'd' means.  If it's the string 'Error', they should have put it in quotes.
[06:49:01] <Jonno_FTW> the operation raises a value error, the dict contents remain the same
[06:52:09] *** Quits: viktorivan (~ivan@187.223.103.108) (Ping timeout: 245 seconds)
[06:53:27] *** Joins: wyclif (~wyclif@user/wyclif)
[06:57:16] <Tashtari> I dislike trick questions, I don't think they're valuable at anything but making the instructor feel clever.
[07:00:41] *** Quits: wyclif (~wyclif@user/wyclif) (Quit: leaving)
[07:01:04] <Jonno_FTW> sometimes people write questions without realising they're making it ambiguous
[07:01:45] *** Joins: wyclif (~wyclif@user/wyclif)
[07:02:35] *** Quits: decimuscorvinus_ (~jimmy@136.37.105.112) (Quit: Will return)
[07:03:02] *** Quits: vimart (~vimart@85.255.235.59) (Quit: WeeChat 2.8)
[07:04:00] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[07:04:04] *** Quits: nyah (~nyah@90.221.186.180) (Quit: leaving)
[07:04:06] *** Quits: lukka5 (~lucas@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[07:08:38] *** Joins: jetchisel (jetchisel@user/jetchisel)
[07:12:54] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 252 seconds)
[07:14:33] *** Quits: theterg (~theterg@pool-141-155-7-155.nycmny.fios.verizon.net) (Ping timeout: 252 seconds)
[07:14:42] *** Quits: rbtEngrDude (~textual@wsip-66-210-249-144.ph.ph.cox.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[07:15:11] *** Joins: rbtEngrDude (~textual@wsip-66-210-249-144.ph.ph.cox.net)
[07:15:56] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 272 seconds)
[07:18:19] *** Quits: Mrokii (~mrokii@p2e5726e0.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[07:18:36] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[07:19:45] *** Joins: ffledgling (~textual@2620:10d:c090:400::5:dd3f)
[07:22:14] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[07:24:23] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[07:24:49] *** Quits: blizzard (~winter@2603-6011-f901-9e5b-78b5-8b2f-cdb2-4171.res6.spectrum.com) (Ping timeout: 244 seconds)
[07:26:58] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:30:33] <voldial> Is there a lib to manipluate py source code? I want to programatically insert a function. Clearly I can just pick a spot and have it inserted manually... but I figure this is something that might exist... 2to3 has gotta have some similar functionality?
[07:30:36] *** Joins: jinsun (~quassel@182.77.87.72)
[07:31:18] *** Joins: Mrokii (~mrokii@p2e5723b5.dip0.t-ipconnect.de)
[07:32:17] *** Quits: ablegreen (~ablegreen@tsunami.ocf.berkeley.edu) (Quit: leaving)
[07:32:35] *** Quits: rbtEngrDude (~textual@wsip-66-210-249-144.ph.ph.cox.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[07:33:02] *** Quits: markcerv (~markcerv3@c-24-5-22-21.hsd1.ca.comcast.net) (Ping timeout: 272 seconds)
[07:34:11] <duso> Another trick qestion I think: https://bpa.st/Y4XA. I guessed the answer was (b) but when I ran the code I got answer (c). Is this something to do with lists being mutable and the function modifing x in memory in the function as l?
[07:34:58] <duso> so that when you add X after the function has been called, it is now a list with 2 appended?
[07:35:47] <InPhase> voldial: inspect.getsource and dill.source.getsource provide two different approaches to this.
[07:36:03] <voldial> InPhase: awesome. on it!
[07:36:19] *** Joins: ominionx (~ominionx@38.135.235.14)
[07:36:41] <brizz> i installed python 3.9.5 from source, and the python terminal doesn't work correctly, when I press up to get the last input, it outputs ^[[A (which is key code for up).  Pressing other direction keys does the same.  does anyone know what is going on?  I've asked this before and no one seemed to know
[07:37:03] <InPhase> voldial: If I recall correctly, the dill approach is more reliable for dynamic functions in base cpython, but fails in ipython, whereas inspect will also work in ipython.
[07:37:27] *** Joins: ablegreen (~ablegreen@tsunami.ocf.berkeley.edu)
[07:37:39] <InPhase> voldial: Each is a little hacky, and rightly thought of as such.
[07:37:49] *** Joins: rk04 (~rk04@user/rajk)
[07:38:07] *** Quits: wilk (~wilk@user/wilk) (Ping timeout: 264 seconds)
[07:38:16] <InPhase> voldial: Decorators, wrapped cleanly around the outside, is considered more appropriate when this works for your problem domain.
[07:40:03] *** Joins: lukka5 (~lucas@246-60-231-201.fibertel.com.ar)
[07:40:51] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[07:40:56] *** Quits: Crassus (~Crassus@user/crassus) (Ping timeout: 250 seconds)
[07:41:35] <voldial> InPhase: I dont want to do this dynamically... It's common code that got refactored into a lib, so I want to replace the functionality in many source files (all different programs).
[07:41:43] <InPhase> duso: You will benefit a lot from watching this video, so that those questions are more intuitive to you:  https://www.youtube.com/watch?v=_AEJHKGk9ns
[07:43:06] <duso> thanks InPhase
[07:43:13] <InPhase> voldial: Oh, you want to actually edit the files.
[07:43:41] *** Joins: blizzard (~winter@2603-6011-f901-9e5b-78b5-8b2f-cdb2-4171.res6.spectrum.com)
[07:44:04] *** Joins: rbtEngrDude (~textual@wsip-66-210-249-144.ph.ph.cox.net)
[07:44:47] <voldial> InPhase: yea
[07:45:11] *** Quits: lukka5 (~lucas@246-60-231-201.fibertel.com.ar) (Ping timeout: 258 seconds)
[07:45:13] <InPhase> voldial: There is the cheap approach to editing code in place, which is to try to smash your problem into a regular expression.  This is fast and easy, and preferred for once and done changes that you just need to work on a pile of code, and want done quickly.  For more elaborate problems you might want to look up a proper python parser, of which there are many choices.
[07:46:02] <voldial> InPhase: yea, I have a text replacement framework, but I want semantic context options... I'll look into python parsers.
[07:46:49] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[07:47:29] *** Quits: bancroft_ (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca) (Ping timeout: 258 seconds)
[07:50:32] *** Joins: lukka5 (~lucas@246-60-231-201.fibertel.com.ar)
[07:51:04] *** Joins: jamea77 (~jamea77@177.239.81.103)
[07:51:10] *** Joins: ericoc (sid179921@id-179921.highgate.irccloud.com)
[07:51:23] *** Quits: wyclif (~wyclif@user/wyclif) (Quit: leaving)
[07:51:42] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 258 seconds)
[07:52:03] *** Joins: Crassus (~Crassus@user/crassus)
[07:57:14] *** Joins: p3r3grin (~kevin@user/p3r3grin)
[07:58:00] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[07:58:41] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[07:58:50] <jamea77> hi all anyone worked with json?
[07:59:08] *** Quits: RoadRunner (~kvirc@S010600fc8db51093.vc.shawcable.net) (Ping timeout: 250 seconds)
[07:59:55] <alissa> it would probably be more helpful to ask the actual question you came to ask
[08:00:05] <jamea77> how to export a resultset with headers? here my code: https://bpa.st/YBTQ  thanks
[08:00:26] <jamea77> i have this result: [[1, "123456120000", "2021/06/07", 289187], [2, "124578320012", "2021/06/07", 289187], [3, "895623124500", "2021/06/07", 289187]]
[08:00:31] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 258 seconds)
[08:01:00] <Jonno_FTW> jamea77: https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_csv.html
[08:01:42] *** Quits: insidesources (~insidesou@user/insidesources) (Quit: leaving)
[08:01:52] <jamea77> but i want something: [["id":1, "codebar":"123456120000", "date":"2021/06/07", "idmaster":289187]
[08:02:01] <jamea77> Jonno_FTW reading
[08:02:24] <Jonno_FTW> jamea77: you'll also need to use sqlite row_factory: db_connection.row_factory = sqlite3.Row
[08:02:57] <Jonno_FTW> https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.row_factory
[08:03:04] <jamea77> ok
[08:03:52] <Jonno_FTW> you should be able to make a dataframe from a cursor, but I'm not sure
[08:04:10] *** Joins: wyclif (~wyclif@user/wyclif)
[08:05:14] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:05:26] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Quit: Will return)
[08:06:53] *** Joins: Fiji (~Fiji@user/fiji)
[08:07:06] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[08:10:26] *** Quits: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: puadxtub)
[08:11:11] <learath> Note that pandas .to_csv adds "line numbers" starting at None, which is.. uh... very creative :P
[08:11:56] *** Quits: moog (~moog@107.126.48.102) (Quit: Leaving)
[08:15:47] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:16:05] *** Joins: wei2912 (~wei2912@112.199.250.21)
[08:18:40] <hexology> learath: what do you mean by that? the "line numbers" are probably your data frame index values
[08:19:01] *** Joins: xkuru (~xkuru@user/xkuru)
[08:19:49] <hexology> and in a brand new dataframe, they default to integers starting at 0
[08:19:53] <duso> InPhase: Excellent video, thank you very much for the link. I honestly believe youtube / web / IRC is a much better learning resource then University which rush over everyone that you learn of something, but not learn it.
[08:19:58] <hexology> so you must have done something to cause None to end up in your dataframe index
[08:20:11] <jamea77> Jonno_FTW: https://anthonydebarros.com/2020/09/06/generate-json-from-sql-using-python/
[08:20:14] <Jonno_FTW> duso: in uni you're expected to learn things outside of contact hours
[08:20:21] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[08:20:43] *** Quits: ffledgling (~textual@2620:10d:c090:400::5:dd3f) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:21:13] <hexology> that's part of what makes university valuable, in a good school you will be forced to read a lot and study and interact with the material to succeed, not just attend lectures and listen
[08:21:19] <hexology> that's a difficult experience to replicate
[08:21:38] <InPhase> duso: That video presenter was nedbat, sitting right over there.  I hope it helped.  I recall the exact scenario of your problem was in there around the middle.
[08:21:44] <Jonno_FTW> I remember my advanced DB lecturer once saying "do you all understand this?" and I said "I will when I go home and read the textbook"
[08:22:32] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 250 seconds)
[08:23:39] <duso> I need to learn by doing, and that is just impossible with a full uni class load. Going to cut it back to part time so that I can absorb the material and apply it in daily use
[08:23:59] <duso> anyway, bbiab
[08:24:02] *** Joins: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[08:24:03] <foo> Uh, someone just shared with me a link that describes a python list as an array. Are lists also called arrays?
[08:24:10] <InPhase> Jonno_FTW: I taught for 6 years, and I would have loved to have more students announce they were going to go home and read the textbook to understand things.  :)  That used to be expected behavior.
[08:24:16] *** Quits: xkuru (~xkuru@user/xkuru) (Quit: Unvirtualizing)
[08:24:34] <Jonno_FTW> InPhase: she was my favourite lecturer
[08:24:35] *** Joins: xkuru (~xkuru@user/xkuru)
[08:25:13] <Jonno_FTW> people don't understand that often times there is stuff you will have to learn from outside the directly delivered course material
[08:26:25] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 252 seconds)
[08:27:15] *** Joins: argento (~argent0@168-227-96-51.ptr.westnet.com.ar)
[08:27:16] *** Quits: argento (~argent0@168-227-96-51.ptr.westnet.com.ar) (Remote host closed the connection)
[08:27:28] *** Joins: nattiestnate (~nate@180.242.128.159)
[08:27:29] *** Joins: insidesources (~insidesou@user/insidesources)
[08:27:47] <doc> foo: same idea
[08:27:54] <Wulf> foo: no, but they may seem similar.
[08:28:06] <foo> See this: https://www.w3schools.com/python/python_arrays.asp
[08:28:09] <doc> there may be some technical differences I can't think of, but they fulfil the same function
[08:28:09] *** Quits: mike18_ (~geri@71-220-52-187.mpls.qwest.net) (Read error: Connection reset by peer)
[08:28:21] <Jonno_FTW> don't use w3schools
[08:28:23] <foo> Yeah, I know they're similar, I just found it odd such a reputable source called them an array.
[08:28:25] *** Parts: dirtwash (~dirtwash@user/dirtwash) (WeeChat 2.8)
[08:28:26] <doc> foo: well you should start with not using w3schools for anything
[08:28:52] <foo> doc: Yeah, someone else shared it with me - what do you suggest instead? (This was what they cited as their source)
[08:29:35] <doc> someone else might have better suggestions than me for python, I learned from a (now out of date) book, but w3schools has, for decades now, had a reputation for being inaccurate and error prone
[08:29:41] <doc> *error ridden
[08:29:44] *** Joins: hendursaga (~weechat@user/hendursaga)
[08:29:52] <Wulf> foo: https://docs.python.org/3/library/array.html
[08:31:00] *** Quits: insidesources (~insidesou@user/insidesources) (Client Quit)
[08:32:16] <KirkMcDonald> In terms of implementation, a Python list could be described as a dynamic array. But the specific word "array" refers to other things in the context of Python.
[08:32:52] <foo> KirkMcDonald: thank you
[08:32:55] <foo> Wulf: thanks
[08:32:57] <KirkMcDonald> Namely numpy.ndarray, and the standard library's array module.
[08:33:49] <Jonno_FTW> this is all c's fault for giving people rigid ideas about what an array is
[08:34:14] <learath> hexology: Sure, but it does not add a heading for it, hence it starts at None
[08:34:31] <KirkMcDonald> Jonno_FTW: How so?
[08:34:52] <Jonno_FTW> people get taught that an array is a contiguous region of memory with a single type
[08:35:06] <learath> So your csv will look something like ",first name,last name, other name^M1,John,Doe,^M2,Jane,Doe,"
[08:35:18] <KirkMcDonald> I don't think C is alone among its contemporaries in thinking of an array this way.
[08:35:48] *** Joins: vicfred (~vicfred@user/vicfred)
[08:35:59] *** Quits: rk04 (~rk04@user/rajk) (Quit: rk04)
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.1)
[08:36:04] <Jonno_FTW> I think it's the single type thing, where an array can only contain a single type. but c/c++/java are taught as introductory languages in most places
[08:36:30] <learath> Jonno_FTW: wait, where? an array can only hold a single type?
[08:36:32] *** Joins: boB_K7IQ (~boB_K7IQ@c-73-254-117-91.hsd1.wa.comcast.net)
[08:36:36] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:36:57] <Jonno_FTW> in other languages and python's array module this is the case
[08:37:05] <KirkMcDonald> learath: This is, at least, the distinction where Python is concerned. It's the primary feature of numpy arrays and array.array, as compared to a list.
[08:37:06] <learath> oh - I misunderstood what you meant
[08:37:36] <Jonno_FTW> php arrays on the other hand, are whatever you want them to be
[08:38:01] <KirkMcDonald> But, for example, JavaScript is perfectly happy to call its arrays arrays, despite being as dynamically typed as Python's lists.
[08:38:08] <learath> Or whatever the attacker wants them to be, at least for PHP :P
[08:38:51] *** Joins: teut (~teut@182.69.85.39)
[08:39:14] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[08:40:21] <KirkMcDonald> Jonno_FTW: But I think there is an important sense in which that *is* what an array is. It's just a matter of where you draw the line. Perhaps a list is just a PyObject*[], or what-have-you.
[08:40:54] <Jonno_FTW> an array is a sequence of things?
[08:40:55] *** Joins: dtux (~dtux@2600:1700:22f0:37bf:52c7:436d:c1df:5b30)
[08:41:27] <learath> Or an array of pointers
[08:41:32] <Jonno_FTW> pointers are things
[08:42:03] *** Joins: foozle (~foozle@2001-b011-c001-5cdc-40f5-5940-ec9a-1400.dynamic-ip6.hinet.net)
[08:44:54] <KirkMcDonald> You can really confuse matters by making a numpy array with dtype(object)
[08:45:13] *** Joins: pbryan (~pbryan@S010600306d111fac.vf.shawcable.net)
[08:45:25] <KirkMcDonald> The distinction isn't *really* technical.
[08:45:26] <doc> it'd all be so much easier if python just adopted pointers
[08:45:29] * doc hides
[08:45:34] <KirkMcDonald> doc: It's *all* pointers already!
[08:45:42] <doc> you're a pointer!
[08:45:46] * KirkMcDonald points
[08:45:51] <wyclif> doc: That used to be a quite valid criticism of w3cschools, but I've found that they've largely cleaned up their act and responded well to criticism
[08:46:05] <doc> wyclif: clearly not based on that person's question...
[08:46:40] <wyclif> I'm not saying their content is always correct, but they have improved a lot compared to, say, 10 years ago when they had a lot more wrong answers
[08:46:56] <wyclif> competition made them get their act together
[08:46:59] * doc shrugs
[08:47:05] <doc> they got it wrong for far too long
[08:47:23] <wyclif> Well, yes, there is a sense that they had no excuse for how they got going
[08:47:36] <wyclif> and they really should have run a tight ship from the start
[08:47:51] <doc> even the name is scammy
[08:47:55] <wyclif> but I think they got addicted to growth and weren't very careful about vetting their site content
[08:48:43] *** Quits: stormbytes (~textual@ool-18e4a56c.dyn.optonline.net) (Read error: Connection reset by peer)
[08:49:04] *** Quits: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[08:50:08] *** Quits: lukka5 (~lucas@246-60-231-201.fibertel.com.ar) (Quit: Lost terminal)
[08:52:16] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 252 seconds)
[08:52:29] *** Joins: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[08:52:46] <wyclif> Even W3Fools now says that W3Schools is okay-ish, FWIW
[08:53:07] <Jonno_FTW> they probably haven't updated since w3schools expanded into every language under the sun
[08:53:14] <wyclif> I point people to freeCodeCamp which is what I prefer
[08:53:20] <Jonno_FTW> their html/css might be up to date
[08:53:35] *** Joins: insidesources (~insidesou@user/insidesources)
[08:54:54] <wyclif> Code.org and SitePoint also tend to be updated
[08:55:29] <wyclif> StackOverflow has gotten better, I've found, since they started flagging answers as outdated
[08:55:56] <jinsun> for python I don't even look at anything else other than docs.python.org, it is annoying that all search engines put other rando tutorial websites before it
[08:56:11] <wyclif> and letting users with reputation flag outdated answers
[08:56:11] *** Quits: tbcr (~tbcr@user/tbcr) (Ping timeout: 268 seconds)
[08:56:34] <wyclif> jinsun: That's Google's fault
[08:56:43] <wyclif> remember when Google Search was great?
[08:56:49] <wyclif> now it's an SEO wasteland
[08:57:17] <Jonno_FTW> at least google puts the python3 docs instead of python2 docs
[08:57:20] <wyclif> I agree about docs.python.org. The tutorial there is what I point new people to
[08:57:24] <jinsun> bing and duckduckgo are actually worse in this matter, google atleast has it on the first page
[08:58:12] <wyclif> DuckDuckGo = Bing, pretty much. At least in terms of results
[08:59:39] <wyclif> If you're really good at googling and know all the operators, it's still good at finding what you want. It's when you enter terms with no quotes, no `+` or other operands that you see all the garbage results on the first page
[09:02:18] *** Quits: tijuco (~tijuco@user/tijuco) (Quit: Leaving)
[09:07:12] *** Quits: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: puadxtub)
[09:07:37] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[09:08:36] *** Quits: Keira (~unknown@lulzsec.co.uk) (Quit: Keira)
[09:09:32] <duso> Later all, thank you very much for all the study assistance. Have a good night!
[09:09:37] *** Quits: duso (~duso@130.102.13.110) (Quit: leaving)
[09:10:50] *** Quits: insidesources (~insidesou@user/insidesources) (Quit: leaving)
[09:11:11] *** Joins: insidesources (~insidesou@user/insidesources)
[09:13:08] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[09:13:42] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Client Quit)
[09:15:16] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 258 seconds)
[09:15:16] *** Quits: insidesources (~insidesou@user/insidesources) (Client Quit)
[09:15:35] *** Joins: insidesources (~meta@user/insidesources)
[09:16:42] *** Quits: teut (~teut@182.69.85.39) (Ping timeout: 250 seconds)
[09:18:19] *** Quits: insidesources (~meta@user/insidesources) (Client Quit)
[09:18:47] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Quit: afk)
[09:19:25] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:20:32] *** Joins: insidesources (~meta@user/insidesources)
[09:21:01] *** Quits: insidesources (~meta@user/insidesources) (Client Quit)
[09:21:17] *** Joins: pyeverything (~mona@c-66-31-107-137.hsd1.ma.comcast.net)
[09:21:27] *** Joins: oceanicplainsape (~oceanicpl@static-198-54-131-94.cust.tzulo.com)
[09:22:03] <pyeverything> could anyone please help me with this? https://stackoverflow.com/questions/67881193/w-tensorflow-core-common-runtime-gpu-gpu-device-cc1598-cannot-dlopen-some-gpu I don't need to use tensorflow 2.2 but also am confused what exactly is version of my CUDA? since nvidia-smi and nvcc output different things
[09:25:12] *** Quits: komencanto (~trevor@2604:3d09:6583:7100::a972) (Ping timeout: 244 seconds)
[09:26:00] *** Quits: eyepeetee (~aa@096-032-003-075.res.spectrum.com) (Ping timeout: 252 seconds)
[09:26:27] *** Joins: jeho (~jehoshaph@c-24-21-32-6.hsd1.or.comcast.net)
[09:26:44] *** Joins: mikkel (~mike@208.110.120.167)
[09:27:35] *** Joins: stranac (~stranac@195.29.239.126)
[09:28:05] *** Quits: oceanicplainsape (~oceanicpl@static-198-54-131-94.cust.tzulo.com) (Quit: oceanicplainsape)
[09:28:35] <voldial> How should I window through a file (larger than memory) to replace arb byte sequences?
[09:28:49] *** Quits: emerent (~quassel@p200300cd5703bb3cba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 244 seconds)
[09:28:59] *** Quits: ente_ (~ente@p200300dc5f4037016fbea028d47fea8e.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[09:29:39] <Jonno_FTW> voldial: use fh.seek
[09:30:02] *** Joins: emerent (~quassel@p200300cd5703bb3cba27ebfffed28a59.dip0.t-ipconnect.de)
[09:30:11] *** Joins: ente_ (~ente@p200300dc5f4037016fbea028d47fea8e.dip0.t-ipconnect.de)
[09:30:26] <voldial> Jonno_FTW: yea, I guess my hangup is... I must iterate the window start and end exactly one byte at a time for the general replacement case
[09:30:29] <Jonno_FTW> open your source and a destintation file, you read a block into memory, modify it appropriately, write it to destination,
[09:30:53] *** Quits: mesaboogie (mesaboogie@user/mesaboogie) (Ping timeout: 272 seconds)
[09:31:28] <Jonno_FTW> pyeverything: did you make libcudart.so available?
[09:32:02] *** Quits: p3r3grin (~kevin@user/p3r3grin) (Quit: WeeChat 3.1)
[09:32:03] *** Quits: MrFixIt (~samurai_@c-73-246-215-75.hsd1.il.comcast.net) (Remote host closed the connection)
[09:32:26] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[09:32:29] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[09:32:44] *** Quits: blizzard (~winter@2603-6011-f901-9e5b-78b5-8b2f-cdb2-4171.res6.spectrum.com) (Ping timeout: 272 seconds)
[09:32:56] *** Parts: pbryan (~pbryan@S010600306d111fac.vf.shawcable.net) (Good Bye)
[09:32:59] <pyeverything> Jonno_FTW: I am not sure at least I didn't do anything about it.
[09:33:09] *** Quits: {HD} (~{HD}@102.165.16.121) (Ping timeout: 252 seconds)
[09:33:19] <Jonno_FTW> pyeverything: it looks like you are missing that file, the error message says so
[09:33:54] *** rbtEngrDude is now known as rbtGotKicked
[09:33:59] <pyeverything> yes I am aware of that. I am unsure what my CUDA version is though Jonno_FTW
[09:34:52] <pyeverything> nvcc outputs Cuda compilation tools, release 10.0, V10.0.130 but nvidia-smi shows CUDA Version: 11.2 Jonno_FTW
[09:34:54] <Jonno_FTW> pyeverything: `stat /usr/local/cuda` will tell you what the default is
[09:35:20] *** Joins: blizzard (~winter@2603-6011-f901-9e5b-78b5-8b2f-cdb2-4171.res6.spectrum.com)
[09:35:22] <Jonno_FTW> you likely have multiple cuda versions installed, and have tensorflow built with one of them while other stuff is still accessible on the system
[09:35:31] <pyeverything> do you what's the reason for this discrepancy? nvcc outputs Cuda compilation tools, release 10.0, V10.0.130 but nvidia-smi shows CUDA Version: 11.2 Jonno_FTW
[09:36:02] <Jonno_FTW> pyeverything: `which nvidia-smi` will tell you where the file is, same for nvcc
[09:36:18] <Jonno_FTW> i suspect something is wrong with your $PATH
[09:36:41] <Jonno_FTW> there's a bunch of environment variables that tell cuda what version to point to when building tensorflow and other cuda stuff
[09:36:56] <pyeverything> wow interesting this is different from both of outputs of nvidia-smi and nvcc --version and shows 10.2 https://pastebin.com/raw/R6tfHw1e Jonno_FTW
[09:36:57] *** Quits: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee) (Quit: Teleporting ...)
[09:37:53] <Jonno_FTW> so your default cuda is 10.2, maybe your PATH has a different cuda version for nvidia-smi
[09:38:04] *** Quits: rbtGotKicked (~textual@wsip-66-210-249-144.ph.ph.cox.net) (Quit: Textual IRC Client: www.textualapp.com)
[09:38:15] <Jonno_FTW> probably better to use the official docker for this, or anaconda
[09:38:32] *** Joins: rbtEngrDude (~textual@wsip-66-210-249-144.ph.ph.cox.net)
[09:38:35] <Jonno_FTW> since they download the right version of everything that just works, including cuda,python,tf
[09:38:54] <pyeverything> so now that we know cuda version is 10.2 what should we do with the missing dll? which is actually a different version? libcudart.so.10.1 --does it mean tensorflow 2.2 doesn't work with cuda 10.2? do you know which version of tensorflow-gpu works with cuda 10.2? Jonno_FTW
[09:39:03] *** Joins: {HD} (~{HD}@102.165.16.232)
[09:39:56] <Jonno_FTW> pyeverything: https://www.tensorflow.org/install/source#gpu
[09:41:07] *** Joins: dvx (~dvx@185.63.97.64)
[09:41:15] <pyeverything> looking at here I cannot find a version that works with cuda 10.2 https://www.tensorflow.org/install/source#tested_build_configurations
[09:41:27] <Jonno_FTW> do you need that version specifically?
[09:41:34] <pyeverything> Jonno_FTW:  none of them works with CUDA 10.2
[09:41:46] <pyeverything> any version is fine as long as works with CUDA 10.2 Jonno_FTW
[09:41:58] <Jonno_FTW> those are the official release builds, you can build your own tf that works with 10.2 if you want, it's just a huge pain
[09:42:38] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Quit: afk)
[09:43:57] *** Joins: viktorivan (~ivan@187.223.103.108)
[09:44:09] *** Joins: mesaboogie (~mesaboogi@user/mesaboogie)
[09:44:40] <pyeverything> Jonno_FTW:  any idea how can I make symlinking work https://github.com/tensorflow/tensorflow/issues/38194#issuecomment-610738012 for the error I face here https://stackoverflow.com/questions/67881193/w-tensorflow-core-common-runtime-gpu-gpu-device-cc1598-cannot-dlopen-some-gpu
[09:45:53] <Jonno_FTW> pyeverything: what versions of cuda are installed? can you install them yourself?
[09:46:40] *** Joins: MrFixIt (~samurai_@c-73-246-215-75.hsd1.il.comcast.net)
[09:48:43] *** Quits: dtux (~dtux@2600:1700:22f0:37bf:52c7:436d:c1df:5b30) (Quit: dtux)
[09:49:29] *** Quits: blizzard (~winter@2603-6011-f901-9e5b-78b5-8b2f-cdb2-4171.res6.spectrum.com) (Ping timeout: 244 seconds)
[09:49:33] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[09:50:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[09:50:37] *** Quits: m1n10n (georgecloo@cpe-76-184-204-251.tx.res.rr.com) ()
[09:50:42] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 264 seconds)
[09:51:09] *** Joins: alexbk (~alexbk@c-73-157-41-15.hsd1.wa.comcast.net)
[09:51:30] *** Quits: viktorivan (~ivan@187.223.103.108) (Remote host closed the connection)
[09:51:43] <pyeverything> Jonno_FTW:  following https://github.com/tensorflow/tensorflow/issues/38194#issuecomment-629801937   didn't work. output here https://pastebin.com/raw/1ekzTSy1
[09:52:03] *** Joins: oceanicplainsape (~oceanicpl@user/oceanicplainsape)
[09:52:07] *** Quits: jeho (~jehoshaph@c-24-21-32-6.hsd1.or.comcast.net) (Changing host)
[09:52:07] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[09:52:45] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[09:53:14] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[09:53:31] *** Joins: hendursaga (~weechat@user/hendursaga)
[09:53:31] *** Joins: player1 (~player1@user/player1)
[09:53:34] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[09:53:39] *** Joins: blizzard (~winter@2603-6011-f901-9e5b-78b5-8b2f-cdb2-4171.res6.spectrum.com)
[09:56:16] <Jonno_FTW> i don't advise making symlinks
[09:56:22] <Jonno_FTW> just use conda
[09:56:33] <Jonno_FTW> please
[09:56:48] *** Joins: mesa (mesaboogie@user/mesaboogie)
[09:57:48] <Jonno_FTW> pyeverything: https://docs.anaconda.com/anaconda/user-guide/tasks/tensorflow/
[09:59:02] *** Joins: slav0nic (slav0nic@python.su)
[09:59:33] *** Quits: mesaboogie (~mesaboogi@user/mesaboogie) (Ping timeout: 252 seconds)
[10:00:03] *** Quits: radu242 (~radu242@pool-108-41-101-29.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[10:00:25] *** Quits: cjb (~cjb@user/cjb) ()
[10:01:00] <pyeverything> I have to use native python not anaconda python due to a certain conflict Jonno_FTW
[10:01:08] <Jonno_FTW> why is that?
[10:01:19] *** Quits: hiptobecubic (~john@c-73-55-99-95.hsd1.fl.comcast.net) (Ping timeout: 245 seconds)
[10:01:26] <Jonno_FTW> if that's the case consider building it yourself
[10:01:35] <pyeverything> well can you propose a solution for native python Jonno_FTW
[10:01:42] *** Joins: wyclif (~wyclif@user/wyclif)
[10:02:07] <p-i-> Struggling so hard with asyncio. It is making me bitter :(
[10:02:35] <pyeverything> I would have built from source if it covered CUDA 10.2 it doesn't https://www.tensorflow.org/install/source#gpu Jonno_FTW
[10:02:37] <Jonno_FTW> pyeverything: install pyenv, use it to install python3.8, make a venv for tensorflow, activate your venv, get the latest tf release, follow the steps on the build page
[10:02:58] <Jonno_FTW> you can install other cuda versions you know
[10:03:11] *** Quits: blizzard (~winter@2603-6011-f901-9e5b-78b5-8b2f-cdb2-4171.res6.spectrum.com) (Ping timeout: 272 seconds)
[10:03:14] <pyeverything> well I just don't want to use either of conda or pyenv I have used python venv for my virtual env Jonno_FTW
[10:03:41] <Jonno_FTW> what have you got against conda?
[10:03:41] <pyeverything> well I guess you didn't follow my points then. I need to install any version of tensorflow that works for CUDA 10.2
[10:03:55] <Jonno_FTW> conda will fetch the required cuda libraries for you
[10:03:55] <pyeverything> (pointless argument)
[10:04:00] <Jonno_FTW> you can build your own
[10:04:20] *** Quits: mesa (mesaboogie@user/mesaboogie) (Ping timeout: 258 seconds)
[10:04:31] <Jonno_FTW> that uses 10.2, or you can do a symlink, which I wouldn't trust, you need to make sure you put the symlink for the cudart file in the right place
[10:05:54] <Jonno_FTW> pyeverything: the dynamic loader looks in LD_LIBRARY_PATH, you add the directory containing the file tf wants to this
[10:07:10] <Jonno_FTW> pyeverything: your ln -s command probably failed because /usr/lib/x86_64-linux-gnu folder doesn't exist, but that may not be where tf is looking
[10:07:47] *** Joins: blizzard (~winter@2603-6011-f901-9e5b-78b5-8b2f-cdb2-4171.res6.spectrum.com)
[10:08:00] <pyeverything> true but where should I link it to? the comment in git issue wrote that Jonno_FTW ls: cannot access /usr/lib/x86_64-linux-gnu: No such file or directory
[10:08:00] <pyeverything>  
[10:08:10] <Jonno_FTW> that folder doesn't exist
[10:08:29] <Jonno_FTW> it exists on other linux distributions
[10:08:33] <wyclif>  I just upgraded to Big Sur and I have Python 3.9.5. On my previous rig I used pyenv to manage my versions. I was hoping I wouldn't have to do this anymore but it seems like I still do
[10:09:04] *** Quits: rbtEngrDude (~textual@wsip-66-210-249-144.ph.ph.cox.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[10:09:26] <pyeverything> do you know what's the counterpart of /usr/lib/x86_64-linux-gnu in CentOS7? Jonno_FTW
[10:09:35] <wyclif> since macOS now warns people that 2.7x is not recommended and won't be included in future
[10:09:35] <Jonno_FTW> maybe just /usr/lib
[10:10:00] *** Joins: rbtEngrDude (~textual@wsip-66-210-249-144.ph.ph.cox.net)
[10:10:01] <Jonno_FTW> or /usr/local/lib,
[10:10:03] <wyclif> I wonder why you can't just use venv
[10:10:24] <wyclif> since venv is native and pyenv is not
[10:11:24] <pyeverything> ok the linking worked but the script showed 0 GPUs available. I assume I should reinstall the tensorflow 2.2? or what should I do? I am confused Jonno_FTW
[10:11:40] <Jonno_FTW> pyeverything: did it not give the error about finding cudart.so?
[10:11:48] <pyeverything> lemme paste
[10:12:45] <pyeverything> https://pastebin.com/raw/m5SA7wT5 Jonno_FTW
[10:13:11] <Jonno_FTW> pyeverything: did you read the error? 2021-06-08 01:40:39.403438: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcudart.so.10.1'; dlerror: libcudart.so.10.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /usr/local/cuda-10.0/lib64:
[10:13:27] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:8032:7380:65ad:ee40) (Read error: Connection reset by peer)
[10:13:46] <Jonno_FTW> you need to do `export LD_LIBRARY_PATH=/usr/lib` maybe
[10:14:32] <pyeverything> oh Gawd thanks Jonno_FTW <3
[10:14:43] <Jonno_FTW> please read the error message
[10:14:54] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[10:17:31] <pyeverything> gotcha thanks for pointing out
[10:17:44] *** Quits: rbtEngrDude (~textual@wsip-66-210-249-144.ph.ph.cox.net) (Quit: Textual IRC Client: www.textualapp.com)
[10:18:04] <Jonno_FTW> did it fix your issue though?
[10:18:08] *** Joins: mesaboogie (~mesaboogi@user/mesaboogie)
[10:18:21] *** Joins: ffledgling (~textual@c-73-158-250-96.hsd1.ca.comcast.net)
[10:18:26] <Jonno_FTW> I struggled for a long time getting tf to work on a variety of machines. It's gotten better over the yearsa
[10:18:28] *** Quits: player1 (~player1@user/player1) (Read error: Connection reset by peer)
[10:19:01] * [O-O] pats Jonno_FTW on the back
[10:19:02] *** Quits: iflema (~ian@user/iflema) (Remote host closed the connection)
[10:19:19] <Jonno_FTW> flashbacks of trying to get tf to work with opencl
[10:19:37] *** Joins: iflema (~ian@user/iflema)
[10:21:00] *** Quits: blizzard (~winter@2603-6011-f901-9e5b-78b5-8b2f-cdb2-4171.res6.spectrum.com) (Ping timeout: 244 seconds)
[10:22:33] *** Quits: mesaboogie (~mesaboogi@user/mesaboogie) (Client Quit)
[10:23:29] <pyeverything> yeah so initially I was running pointnet and it was showing that it is acquiring GPU (actually both of my GPUs) but GPU utilization was 0 which weird me out and decided to figure what's going on. My manager told me to get the script that I showed you to work and that might fix the problem. I mainly use PyTorch and had forgotten all the crazy intricacies of TF :D  https://github.com/charlesq34/pointnet here's a snapshot showing pointn
[10:23:29] <pyeverything> s solely using CPUs https://pastebin.com/raw/HjTm7NKE Jonno_FTW
[10:24:06] *** Joins: py88 (~py88@50.21.149.170)
[10:24:18] *** Quits: ffledgling (~textual@c-73-158-250-96.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[10:24:53] *** Joins: KeiraT (~unknown@lulzsec.co.uk)
[10:25:24] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 252 seconds)
[10:26:29] *** Quits: jinsun (~quassel@182.77.87.72) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[10:26:47] <Jonno_FTW> pyeverything: that error still appears there about the libcudart.so.10.1 not being found
[10:27:58] <pyeverything> I showed you a previous screenshot (before the fix) Jonno_FTW
[10:28:08] <Jonno_FTW> ah
[10:28:22] <pyeverything> you can check my answer here https://stackoverflow.com/a/67882048/2414957 Jonno_FTW
[10:29:05] *** Joins: mexen (uid495612@user/mexen)
[10:29:09] <Jonno_FTW> good luck with your phd
[10:29:51] <pyeverything> Thanks a lot Jonno_FTW
[10:30:06] <Jonno_FTW> I just hijacked a computer lab to do my phd work
[10:30:30] *** Joins: blizzard (~winter@2603-6011-f901-9e5b-78b5-8b2f-cdb2-4171.res6.spectrum.com)
[10:30:41] *** Quits: LightningB (ellenor@vice-chairwoman.of.freenode.management) (Quit: Bye Open Projects!)
[10:30:48] <Jonno_FTW> no gpu required
[10:34:17] <pyeverything> we have access to a public cluster across university and a private cluster across computer vision group at Boston University. So far, mostly dealing with running repos and modifying so mostly using my laptop from work with a Titan X or my deep learning station with two GPUs (the one at the post).
[10:34:25] <pyeverything> so you ran on CPU?
[10:34:27] <pyeverything> cool
[10:34:40] <pyeverything> I am dealing with images and mainly GPUs are required
[10:34:45] *** Quits: jamea77 (~jamea77@177.239.81.103) (Ping timeout: 252 seconds)
[10:34:49] <Jonno_FTW> i had access to a very old supercomputer cluster
[10:35:32] <Jonno_FTW> I ran some LSTMs (amongst other stuff) to predict timeseries sequence data
[10:35:44] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:36:21] <pyeverything> we have access to Massachusetts supercomputer too but I am not sure if it's worth dealing with so much scripting (at least I am not there but I have registered for access) it's a collaboration between BU and a couple of universities and RedHat
[10:36:45] *** Quits: kickingvegas (~cchoi@c-24-130-175-68.hsd1.ca.comcast.net) (Quit: leaving)
[10:36:56] <Jonno_FTW> I had to use an old centos machine running 6.5 or something, everything was horribly outdated
[10:37:23] <pyeverything> I have trouble with getting OpenDR work on current CentOS machine actually
[10:37:42] <pyeverything> many softwares are just designed for Ubuntu :/
[10:37:47] <Jonno_FTW> I ended up building my own standard lib + gcc toolchain
[10:37:57] <pyeverything> but both my current and past university have CentOS
[10:38:02] <Jonno_FTW> then making my own python, then building tensorflow
[10:38:07] <audiocat> can anyone help? https://stackoverflow.com/questions/67882154/django-rest-framework-update-modelviewset-class-variable
[10:38:36] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[10:38:44] <Jonno_FTW> pyeverything: I've never used opendr, if stuff is open sourced you can usually build it
[10:40:19] <pyeverything> https://superuser.com/questions/1642480/install-opendr-in-centos-7-for-native-python-3-not-anaconda-python Jonno_FTW
[10:40:31] <pyeverything> I honestly gave up on that :D
[10:40:33] *** Quits: blizzard (~winter@2603-6011-f901-9e5b-78b5-8b2f-cdb2-4171.res6.spectrum.com) (Ping timeout: 272 seconds)
[10:41:09] <Jonno_FTW> did you install OSMesa?
[10:41:11] <Jonno_FTW> w/e that is?
[10:41:39] <pyeverything> "did you install OSMesa?" --> I guess no Jonno_FTW (this whole thing is for 2.7 not 3+)
[10:42:02] <Jonno_FTW> pyeverything: if you really need to use it, you can install pyenv and use that to build py2.7
[10:42:15] <Jonno_FTW> then it will work from pip
[10:42:45] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:43:03] *** Joins: bruce_ (~foozle@218-161-104-228.hinet-ip.hinet.net)
[10:43:30] <Jonno_FTW> it maybe work with mesa3d but if they didn't port it to python 3 it might not work
[10:43:50] <pyeverything> yeah my guess it will not work too
[10:44:05] <pyeverything> so far I just turned the visualizations and just dump them to file which works
[10:44:05] *** Joins: Deneb (~johnch@195.213.86.29)
[10:44:14] <pyeverything> *turned off
[10:44:15] *** Quits: foozle (~foozle@2001-b011-c001-5cdc-40f5-5940-ec9a-1400.dynamic-ip6.hinet.net) (Ping timeout: 244 seconds)
[10:44:47] <Jonno_FTW> fair enough
[10:45:51] *** Joins: sodimel (~co@29.172.125.78.rev.sfr.net)
[10:46:58] *** Quits: chha (~chhs@user/chha) (Quit: Leaving)
[10:47:59] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:a95a:ecd2:e57a:3130)
[10:48:34] *** Quits: sed (~sed@pool-100-7-53-231.rcmdva.fios.verizon.net) (Ping timeout: 250 seconds)
[10:49:54] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:50:57] *** Joins: seednode (~seednode@user/seednode)
[10:51:52] *** Quits: Deneb (~johnch@195.213.86.29) (Quit: Leaving)
[10:51:55] <pyeverything> Jonno_FTW:  so I was wrong and the GPU utilization is very low . it shows it is using both GPUs though https://github.com/DirtyHarryLYL/DJ-RN/issues/64 I am dubious please check the screenshot of nvidia-smi over there. The output of script is very long not sure how I can simultaneously dump it elsewhere with a >> while it is being run
[10:52:11] *** Joins: Deneb (~johnch@195.213.86.29)
[10:53:28] <Jonno_FTW> pyeverything: check out nvtop please
[10:53:46] <Jonno_FTW> https://github.com/Syllo/nvtop
[10:54:14] *** Quits: Deneb (~johnch@195.213.86.29) (Client Quit)
[10:54:42] <pyeverything> Jonno_FTW:  https://user-images.githubusercontent.com/76495162/121133688-a6449600-c800-11eb-9893-b2763ebbbaca.png
[10:55:16] <Jonno_FTW> looks like a problem with your program then
[10:55:24] *** Joins: mesaboogie (mesaboogie@user/mesaboogie)
[10:55:34] <pyeverything> not my program :D
[10:55:44] <Jonno_FTW> complain to the devs
[10:55:56] *** Quits: gvsa123 (~gvsa123@d23-17-234-3.abhsia.telus.net) (Quit: Leaving)
[10:56:04] <Jonno_FTW> nvtop should show a plot of gpu usage over time
[10:56:17] <pyeverything> anyways not sure why it assigns a certain GPU (either 0 or 1), and then distributes it to both GPUs! very weird -- and yes I already wrote a git issue and shared the link w you Jonno_FTW
[10:56:37] <pyeverything> why isn't showing though Jonno_FTW?
[10:56:45] <Jonno_FTW> I'm not sure
[10:56:48] <Jonno_FTW> expand the window
[10:56:49] *** Joins: Crassus (~Crassus@user/crassus)
[10:57:45] *** Joins: chele (~chele@user/chele)
[10:59:57] *** Joins: markcerv (~markcerv3@52-119-125-204.PUBLIC.monkeybrains.net)
[11:00:15] *** Quits: Preston (~liminalcr@024-181-005-175.res.spectrum.com) (Quit: WeeChat 3.1)
[11:00:16] <Jonno_FTW> or build the latest version
[11:00:52] *** Joins: Ellenor (~Ellenor@vice-chairwoman.of.freenode.management)
[11:02:17] *** Joins: manti7 (~manti7@176.10.104.94)
[11:03:57] *** Joins: kosh (~kosh@user/kosh)
[11:04:31] *** Quits: markcerv (~markcerv3@52-119-125-204.PUBLIC.monkeybrains.net) (Ping timeout: 264 seconds)
[11:05:29] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[11:05:43] *** Quits: bfahr (~quassel@96.31.208.199) (Ping timeout: 264 seconds)
[11:06:08] *** Joins: mambang (~mambang@user/mambang)
[11:06:22] <pyeverything> I documented it further here hopefully someone from tensorflow might see it https://github.com/tensorflow/tensorflow/issues/50139
[11:07:11] *** Ellenor is now known as LightningB
[11:07:15] *** Joins: gusto (~Augustus@109.255.100.54)
[11:07:31] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:1883:e705:a966:125a)
[11:07:41] <Jonno_FTW> this probably isn't a TF issue
[11:09:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[11:10:09] *** Joins: rendar (~rendar@user/rendar)
[11:10:17] *** Joins: Auron (Auron956@user/auron)
[11:10:19] <Jonno_FTW> pyeverything: the script only uses the 2nd gpu, also you might just not be utilising all the gpu resources
[11:10:24] <pyeverything> yeha honestly I am confused how such an issue should be debugged :( Jonno_FTW
[11:10:48] *** Quits: vicfred (~vicfred@user/vicfred) (Read error: Connection reset by peer)
[11:10:50] <pyeverything> yeah I have told it to use GPU 1 but why is nvidia-smi is showing that it is using both of GPUs? Jonno_FTW
[11:11:32] <Jonno_FTW> tf might be holding onto the other gpu to keep it ready, but idk
[11:12:08] <Jonno_FTW> you probably just need to think about how the program uses the gpu
[11:12:59] <Jonno_FTW> check how big your models/inputs are
[11:13:21] *** Joins: dme86 (~dan@user/dan86)
[11:14:02] *** Quits: rwbrambler (~Thunderbi@65.183.138.202) (Remote host closed the connection)
[11:14:03] <pyeverything> sure I'll do that tomorrow for now thanks a lot and GN
[11:14:07] *** Parts: pyeverything (~mona@c-66-31-107-137.hsd1.ma.comcast.net) ()
[11:14:08] *** Joins: rnm (~mambang@user/mambang)
[11:14:18] *** Joins: rwbrambler (~Thunderbi@65.183.138.202)
[11:14:24] *** Quits: mambang (~mambang@user/mambang) (Read error: Connection reset by peer)
[11:14:29] *** Joins: SoleSoul (~SoleSoul@134.191.232.83)
[11:15:45] <SoleSoul> Hi. In Argparse, is it possible to make the command line arguments case INsensitive? Most of our clients are used to Windows where the commadn line args are case insensitive.
[11:17:05] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[11:17:26] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.1)
[11:20:03] <leduyquang753> Put `type=str.lower`.
[11:22:13] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[11:22:37] *** Quits: somlis (~somlis@user/somlis) (Read error: Connection reset by peer)
[11:23:02] *** Joins: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr)
[11:23:23] *** Quits: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[11:23:50] *** Joins: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr)
[11:24:23] <leduyquang753> That's unless you want the switches themselves to be case insensitive though like -A vs. -a I gotta add.
[11:25:06] *** Joins: iNeedKoffee (~ubuntu@public.sa-edbd-dsto-liva1.aarnet.net.au)
[11:25:26] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[11:25:37] *** Quits: iNeedKoffee (~ubuntu@public.sa-edbd-dsto-liva1.aarnet.net.au) (Client Quit)
[11:26:42] *** Joins: n0cto (~n0cto@2605:a601:ac07:4100:cd6d:e5f5:de7f:3903)
[11:26:52] *** Joins: iNeedKoffee (~ubuntu@public.sa-edbd-dsto-liva1.aarnet.net.au)
[11:27:00] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 252 seconds)
[11:30:35] *** Quits: SoleSoul (~SoleSoul@134.191.232.83) (Quit: Client closed)
[11:33:43] *** Quits: bigRoo (~user@131.236.54.84) (Remote host closed the connection)
[11:33:53] *** Joins: euouae (~user@user/euouae)
[11:33:54] <euouae> Hello
[11:35:26] <euouae> if I write a CLI application, how can I add a GUI for it? Would I have to split between app-cli and app-gui?
[11:35:55] <euouae> Ideally I'd like the GUI to just handle the graphics and invoke the underlying cli application, so that no logic is repeated. Is that a good design choice?
[11:39:49] <mgedmin> I would split the cli-specific parts (comnand-line argument parsing, input/output) from core logic in separate modules, then import the core logic module in the gui part
[11:40:03] *** Joins: wattux (~wattux@212.51.23.106)
[11:41:37] *** Joins: Meteorhead (~Meteorhea@165.225.21.61)
[11:41:47] <euouae> OKay
[11:42:11] <euouae> mgedmin: as for as entrypoints are concerned, do I have two entry points ("binaries") named app-cli and app-gui or one with two options? --cli --gui
[11:42:32] *** Quits: iNeedKoffee (~ubuntu@public.sa-edbd-dsto-liva1.aarnet.net.au) (Quit: Konversation terminated!)
[11:43:10] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[11:43:36] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 250 seconds)
[11:43:38] <mgedmin> interesting question, I can see both approaches having pros and cons
[11:44:02] <mgedmin> without much thinking, I would default to separate entry points
[11:44:32] *** Quits: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854) (Quit: Konversation terminated!)
[11:44:41] *** Quits: N3X15 (~nexis@mail.nexisonline.net) (Ping timeout: 252 seconds)
[11:44:52] <euouae> Okay thank you
[11:44:59] *** Joins: chele_ (~chele@user/chele)
[11:45:09] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:45:26] <euouae> My entry point for my CLI is in __init__.py, defined as main(). I suppose that means I need main_cli() and main_gui()?
[11:45:27] *** Joins: N3X15 (~nexis@mail.nexisonline.net)
[11:46:00] <mgedmin> if you want to
[11:46:07] <evilissimo> euouae: based on --cli/--gui you call whatever function you need to use
[11:46:11] <mgedmin> I'd go with mything.gui:main() and mything.cli:main()
[11:46:15] *** Quits: TML-prv_ (~TML-prv@ec2-52-32-188-68.us-west-2.compute.amazonaws.com) (Ping timeout: 252 seconds)
[11:46:32] <evilissimo> euouae: Does the CLI influence what the GUI does on runtime?
[11:46:38] *** Quits: chele (~chele@user/chele) (Ping timeout: 250 seconds)
[11:46:38] *** chele_ is now known as chele
[11:46:43] <evilissimo> euouae: or is it just the same thing with a different frontend?
[11:46:47] <mgedmin> thing is, guis tend to import extra libraries (e.g. pygobject) and it'd be nice if those wouldn't need to be even installed just to run the cli version
[11:46:52] *** Joins: TML-prv (~TML-prv@ec2-52-32-188-68.us-west-2.compute.amazonaws.com)
[11:46:53] *** Quits: oceanicplainsape (~oceanicpl@user/oceanicplainsape) (Quit: oceanicplainsape)
[11:47:01] <evilissimo> mgedmin: indeed
[11:47:02] <mgedmin> and you could wrap the imports with try/except, but that's a pain
[11:47:21] * evilissimo would have gui in a different module
[11:47:33] <evilissimo> and import that dynamically in main() based on the --gui flag
[11:47:54] <evilissimo> euouae: also you rather do not want --cli and --gui
[11:48:06] <euouae> evilissimo: same thing with different frontend
[11:48:10] <evilissimo> euouae: you want just --gui
[11:48:33] <evilissimo> because it'd be tedious from commandline to call everytime my-app --cli just because I call it from commandline
[11:48:44] <evilissimo> euouae: but
[11:48:46] <euouae> Of course
[11:48:51] <evilissimo> Thinking about it
[11:48:56] <evilissimo> I wouldn't even use a flag
[11:49:07] <euouae> I see the point about the GUI optional installs and separate modules.
[11:49:14] *** Joins: especial (~especial@cm-84.214.207.74.getinternet.no)
[11:49:16] <evilissimo> you just have two different 'entry points'
[11:51:06] <evilissimo> in your setup.py you can use the setup(...., entry_points='[console_scripts]\n my_cli=mypkg.app.cli\n my_gui=mypkg.app.gui\n')
[11:51:21] <evilissimo> that way you just implement two separate mains which do their thing
[11:51:32] <evilissimo> and the common code lives in your package
[11:51:34] <evilissimo> mypkg
[11:52:11] <evilissimo> correction: setup(...., entry_points='[console_scripts]\nmy_cli=mypkg.app.cli:main\nmy_gui=mypkg.app.gui:main\n')
[11:52:26] <evilissimo> where :main specifies the function in mypkg.app.cli
[11:52:34] <evilissimo> that will install two 'applications' for you
[11:52:42] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 272 seconds)
[11:53:15] <euouae> Right thank you. I am going to look into optional dependencies as well
[11:55:07] *** Joins: gloomy_desktop (~ldorigo@81.161.149.37)
[11:57:29] <euouae> Another question, after my program is invoked, I'd like to be able to pass data to a plugin
[11:57:59] <euouae> For example, ./foo calculates the number 42, and then I wish to pass this (say, serialized) data to some other binary/plugin/etc. What is a way to do this?
[11:58:57] <euouae> It seems to me that the way that `git` does it is by having a flag that has output in a certain format that is guaranteed not to change between git versions
[11:59:02] <euouae> and thus appropriate for shell piping, etc
[12:01:48] <mgedmin> heh, maybe use gui_scripts for the gui entry point
[12:02:13] <mgedmin> (important mostly for Windows users who will get an unnecessary command prompt window if you use console_scripts)
[12:02:45] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[12:02:51] <mgedmin> it's easier to pass structured data around if you import the plugin code into your process
[12:03:06] *** Quits: mikkel (~mike@208.110.120.167) (Ping timeout: 250 seconds)
[12:03:24] <euouae> mgedmin: What is the significance of gui_scripts as a name?
[12:03:39] *** Quits: doc (~doc@user/doc) (Ping timeout: 268 seconds)
[12:04:14] <euouae> I'm thinking that the plugin may be written in another language
[12:04:32] <mgedmin> https://packaging.python.org/specifications/entry-points/#use-for-scripts
[12:05:04] <euouae> Nice, thank you
[12:05:29] *** Joins: CombatVet (~c4@user/combatvet)
[12:08:16] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:12:50] *** KeiraT is now known as Keira
[12:13:09] *** Joins: Norore (~weechat@2a01:e0a:23a:5600:b9d3:ae19:12de:25b)
[12:16:00] *** Quits: lavadonut (~lavadonut@172-222-149-079.res.spectrum.com) (Changing host)
[12:16:00] *** Joins: lavadonut (~lavadonut@user/lavadonut)
[12:18:53] *** Joins: ffledgling (~textual@2620:10d:c091:480::1:a332)
[12:20:59] *** Joins: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee)
[12:21:12] *** Joins: hlz (~rue@1-162-41-228.dynamic-ip.hinet.net)
[12:32:39] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a1-135.dhcp.inet.fi)
[12:33:28] *** Joins: Julian (~tos9@151.66.53.132)
[12:35:56] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[12:37:09] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:38:43] *** Quits: Julian (~tos9@151.66.53.132) (Ping timeout: 264 seconds)
[12:40:20] *** Quits: quesker (~idnet@mail.89vx.net) (Ping timeout: 245 seconds)
[12:40:31] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 252 seconds)
[12:40:41] *** Joins: quesker (idnet@2600:3c01::f03c:91ff:feac:4ce2)
[12:40:51] *** Quits: hendursa1 (~weechat@user/hendursaga) (Remote host closed the connection)
[12:41:14] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:41:30] *** Joins: dme86 (~dan@user/dan86)
[12:43:58] *** Quits: hlz (~rue@1-162-41-228.dynamic-ip.hinet.net) (Quit: WeeChat 3.1)
[12:44:23] *** Joins: hlz (~rue@1-162-41-228.dynamic-ip.hinet.net)
[12:46:45] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Read error: Connection reset by peer)
[12:46:46] *** Joins: cthulchu_ (~Cthulchu@195.66.198.226)
[12:50:15] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Quit: Lost terminal)
[12:53:30] *** Quits: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 272 seconds)
[12:53:36] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:ea6f:38ff:fed4:3289)
[12:55:32] *** Joins: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net)
[12:56:40] *** Quits: binarymutt (~binarymut@c-98-194-153-108.hsd1.tx.comcast.net) (Ping timeout: 272 seconds)
[12:57:18] *** Joins: blackop (~ocloud@user/blackop)
[12:57:37] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[12:57:38] *** Parts: domhnall (~developer@user/domhnall/x-2887755) ()
[12:57:54] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[12:58:24] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[13:00:13] *** Joins: Baumfaust (~Bumfaust@2a02:8071:2d6:6b00:5c3d:e556:acdb:4118)
[13:00:15] <Baumfaust> hi
[13:00:26] *** Joins: kdc (~kdc@196.211.197.141)
[13:00:27] *** Joins: dkmueller (~dkmueller@2a01:c22:6e63:5d00:f5b5:2c52:7fd8:66e8)
[13:03:33] <Baumfaust> I made an example for async api calls: https://bpa.st/J6XQ
[13:03:42] *** Quits: justBull (~justache@user/justache) (Remote host closed the connection)
[13:03:52] <Baumfaust> can you tell me why i get the error RuntimeError: Event loop is closed
[13:05:02] *** Joins: justBull (~justache@user/justache)
[13:05:26] *** Quits: ffledgling (~textual@2620:10d:c091:480::1:a332) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:07:11] <euouae> Baumfaust: which line throws that exception?
[13:07:38] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:08:10] <Baumfaust> Exception ignored in: <function _ProactorBasePipeTransport.__del__ at 0x0000018EC35DEEE0>
[13:08:17] *** Joins: loskutak (~loskutak@gw.mecom.cz)
[13:08:18] <Baumfaust> is says no line of my code
[13:08:27] <euouae> Try adding some breakpoint()s and debug your code that way
[13:08:33] *** Joins: ffledgling (~textual@2620:10d:c091:480::1:a332)
[13:08:35] *** Quits: DjLegolas (~DjLegolas@defuq.tk) (Quit: Got a base-kick to the knee)
[13:08:39] <Baumfaust> but: proactor_events.py", line 116, in __del__
[13:08:39] <Baumfaust>     self.close()
[13:08:50] *** Joins: simone7 (~nya@user/sx)
[13:08:56] <euouae> Is that your code? It looks like it closes a loop
[13:09:09] *** Quits: chromis (sid150893@id-150893.tinside.irccloud.com) (Ping timeout: 248 seconds)
[13:09:28] <Baumfaust> no its from: lib\asyncio\proactor_events.py"
[13:09:45] *** Quits: Liexei (Liexei@user/liexei) (Quit: Bye...)
[13:10:01] *** Joins: SpydarOO7 (~spydar007@user/spydar007)
[13:10:14] <Baumfaust> https://www.twilio.com/blog/asynchronous-http-requests-in-python-with-aiohttp
[13:10:19] <Baumfaust> its from that example
[13:10:39] *** Joins: chromis (sid150893@id-150893.tinside.irccloud.com)
[13:10:45] *** Quits: simone (~nya@user/sx) (Ping timeout: 245 seconds)
[13:10:46] *** simone7 is now known as simone
[13:10:52] *** Quits: Spydar007 (~spydar007@user/spydar007) (Ping timeout: 268 seconds)
[13:10:58] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[13:11:01] *** Joins: DjLegolas (~DjLegolas@2a01:4f8:241:4e7::2)
[13:11:35] *** Quits: nigelb (~nigel@zeus.nigelb.me) (Ping timeout: 245 seconds)
[13:11:54] <euouae> I read that this is an aoihttp issue Baumfaust
[13:12:08] <euouae> Baumfaust: there are some ways to fix it, see https://github.com/aio-libs/aiohttp/issues/4324 but basically it's not your mistake
[13:12:15] <Baumfaust> ok
[13:12:38] *** Joins: nigelb (~nigel@zeus.nigelb.me)
[13:12:41] <Baumfaust> its still way to slow... so i try another example
[13:12:59] *** Joins: Liexei (Liexei@user/liexei)
[13:13:00] *** Parts: hlz (~rue@1-162-41-228.dynamic-ip.hinet.net) (WeeChat 3.1)
[13:13:03] <euouae> Baumfaust: I think the 'solution' is to catch and ignore that exception
[13:14:00] *** Quits: ano (~weechat@user/ano) (Remote host closed the connection)
[13:14:25] *** Joins: ano (~weechat@user/ano)
[13:14:59] <pathos> Baumfaust: The way you're using async there, will mean that the requests will not run in parallel. You've got a for loop, and you're awaiting on each request before going ahead and making a new one. What you probably want is to create all the futures without awaiting on them, and then await on all of them at the same time (or do it in batches, to limit the amount of concurrent requests)
[13:15:08] *** Joins: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:15:39] <Baumfaust> pathos, yeah thats what i am doing right now, I will update the example soon
[13:15:42] *** SpydarOO7 is now known as Spydar007
[13:15:52] *** Joins: player1 (~player1@user/player1)
[13:16:20] <pathos> Ah, I see the tutorial gets to that.. `In the original example, we are using await after each individual HTTP request, which isn't quite ideal.`
[13:17:18] *** Joins: gareppa (~gareppa@user/gareppa)
[13:17:52] <pathos> Baumfaust: The issue pasted above suggests using ` asyncio.get_event_loop().run_until_complete(...)` instead of `asyncio.run(...)`, since `run` closes the eventloop, so maybe try that?
[13:19:40] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[13:21:14] *** Joins: jinsun (~quassel@182.77.87.72)
[13:21:54] *** Quits: player1 (~player1@user/player1) (Read error: Connection reset by peer)
[13:24:27] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[13:25:42] <Baumfaust> no version:
[13:25:43] <Baumfaust> https://bpa.st/XIIA
[13:25:58] <Baumfaust> --- async optimized 2.1027462482452393 seconds ---
[13:25:58] <Baumfaust> --- async 11.128577709197998 seconds ---
[13:25:58] <Baumfaust> --- normal 17.93230676651001 seconds ---
[13:26:00] <Baumfaust> thats great
[13:26:30] <[O-O]> good job guys
[13:26:46] <[O-O]> i want to lrn that async stuff
[13:27:04] *** Parts: Rue (~rue@2001-b011-1000-1fa7-9875-5f57-4775-5f01.dynamic-ip6.hinet.net) (WeeChat 3.1)
[13:27:48] *** Joins: zeenk (~zeenk@2a02:2f04:a310:b600:b098:bf18:df4d:4c41)
[13:28:32] *** Joins: Julian (~tos9@151.66.53.132)
[13:34:20] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:36:19] *** LightningB is now known as MelMalik
[13:38:40] *** Joins: somlis (~somlis@user/somlis)
[13:39:00] *** Quits: leduyquang753 (~leduyquan@27.76.191.235) (Ping timeout: 252 seconds)
[13:40:25] *** Quits: bruce_ (~foozle@218-161-104-228.hinet-ip.hinet.net) (Quit: Leaving)
[13:40:45] *** Joins: foozle (~foozle@2001-b011-c001-560d-5d80-4415-4b88-8130.dynamic-ip6.hinet.net)
[13:41:32] *** Joins: leduyquang753 (~leduyquan@27.73.61.122)
[13:42:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[13:44:22] *** Quits: cthulchu_ (~Cthulchu@195.66.198.226) (Ping timeout: 258 seconds)
[13:48:16] <euouae> if a function is documented to return an 'str', can it return None?
[13:49:39] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a1-135.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:51:06] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Quit: Soupy Twist!)
[13:51:28] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[13:52:03] <euouae> Is this code sensible or can I replace it with rest.split()? words = re.sub(r"[^\w\s]", " ", rest).split()
[13:52:21] <euouae> The intent is to replace all UTF-8 whitespace with " ", just in case split() doesn't know about UTF-8 whitespace
[13:53:19] *** Quits: audiocat (~audio@2603-8081-1800-00af-75d2-8c02-f70e-3f25.res6.spectrum.com) (Remote host closed the connection)
[13:53:27] *** Quits: ffledgling (~textual@2620:10d:c091:480::1:a332) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:53:37] *** Joins: audiocat (~audio@2603-8081-1800-00af-d691-561d-0da3-aede.res6.spectrum.com)
[13:54:21] *** Joins: player1 (~player1@user/player1)
[13:55:14] *** Joins: wyclif (~wyclif@user/wyclif)
[13:55:23] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Client Quit)
[13:55:53] <dav1d> In [1]: 'a\xa0b'.split()
[13:55:53] <dav1d> Out[1]: ['a', 'b']
[13:56:19] <dav1d> euouae: ^ just try it out, also if you're already using a regex, just use re.split
[13:56:35] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a1-135.dhcp.inet.fi)
[13:57:23] <euouae> dav1d: I would have to know all UTF-8 whitespace to try it out
[13:57:38] <euouae> plus from implementation to implementation maybe it can differ? I don't see it documented
[13:59:35] <dav1d> or read the docs after emperically verifying that it should work, also you're not operating on an utf-8 string, you're operating on a unicode string, which does not have an encoding
[13:59:43] *** Joins: death916_lap (~Death916@user/death916)
[13:59:58] <euouae> re.split("[^\w]", stuff) is what you're thinking of?
[14:00:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[14:00:58] <euouae> I thought Python 3 uses UTF-8 by default for source files?
[14:01:29] <dav1d> https://docs.python.org/3.9/library/stdtypes.html#str.isspace
[14:01:33] *** Quits: unyu (~pyon@user/pyon) (Quit: WeeChat 3.1)
[14:01:58] <dav1d> UTF-8 is encoded, it is bytes. e.g. "some string".encode("utf-8")
[14:02:10] <Julian> euouae: Documentation doesn't force code to do things :)
[14:02:31] <dav1d> In [11]: 'some string'.encode('utf-8')
[14:02:31] <dav1d> Out[11]: b'some string'
[14:02:33] <euouae> So it is reasonable to assume .split() uses the same determination as str.isspace()?
[14:02:39] <Julian> euouae: Are you asking whether it *should* return None or whether you should mention it may not?
[14:03:15] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[14:03:23] <euouae> Julian: I'm parsing something and return (a, b), where a,b are parsed strings but they may be None. Should I check them and replace them with "" instead? In order to not lie in the documentation
[14:03:33] <euouae> Or is it reasonable to return None where str is expected?
[14:03:56] *** Quits: wattux (~wattux@212.51.23.106) (Quit: Ping timeout (120 seconds))
[14:04:05] *** Quits: Meteorhead (~Meteorhea@165.225.21.61) (Quit: Ping timeout (120 seconds))
[14:04:12] <euouae> dav1d: are you making the point that the str class supports more than UTF-8?
[14:05:13] <Julian> euouae: is it acceptible in your situation that those things are missing?
[14:05:25] <dav1d> euouae, I am making the point, that `str` does not have an encoding like UTF-8, it is unicode. UTF-8 is just a representation
[14:05:30] <euouae> Julian: yeah
[14:05:30] <dav1d> euouae: also here: https://github.com/python/cpython/blob/main/Objects/unicodeobject.c#L10360
[14:05:50] <euouae> dav1d: but the source is UTF-8 encoded. What if anything is the default for "foo" then? Isn't it UTF-8?
[14:05:57] <Julian> euouae: then yes probably you should consider returning ""
[14:06:25] <euouae> Julian: okay, thank you
[14:06:28] <Julian> np
[14:06:31] <dav1d> euouae: you have to differentiate here, just because the source code is utf-8, doesn't mean the string at runtime is utf-8, it's a string not bytes afterall
[14:06:43] <euouae> dav1d: it doesn't mean, but what is?
[14:07:21] <dav1d> euouae, mh? it's a `str` object, which does not carry an encoding. You can think of python internally doing a source_code.decode('utf-8')
[14:08:52] <euouae> dav1d: I feel like you didn't have to bring all this up
[14:09:39] *** Joins: ffledgling (~textual@163.114.130.7)
[14:10:14] <dav1d> isn't that what you asked
[14:10:58] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[14:11:13] *** Joins: wyclif (~wyclif@user/wyclif)
[14:11:15] <dav1d> (ignoring your misunderstanding of a python string and the utf-8 encoding)
[14:12:25] *** Joins: Meteorhead (~Meteorhea@165.225.21.61)
[14:13:45] *** Joins: entuland (~entuland@user/entuland)
[14:13:58] *** Joins: ponadm (pony@gateway/vpn/protonvpn/ponadm)
[14:15:35] <euouae> No you're right
[14:15:49] <euouae> If I knew that string uses Unicode code points I would've felt more reassured in how .strip() behaves
[14:16:08] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 250 seconds)
[14:16:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[14:18:41] *** Quits: player1 (~player1@user/player1) (Quit: _)
[14:20:07] *** Quits: foozle (~foozle@2001-b011-c001-560d-5d80-4415-4b88-8130.dynamic-ip6.hinet.net) (Quit: Leaving)
[14:20:13] <dav1d> euouae, also maybe you missed it, the code checks for unicode whitespaces
[14:20:16] *** Quits: blackop (~ocloud@user/blackop) (Remote host closed the connection)
[14:20:44] <euouae> dav1d: which code? What I realized is that in my code I strip away punctuation!
[14:20:59] <dav1d> euouae, https://github.com/python/cpython/blob/main/Objects/unicodeobject.c#L10360
[14:21:14] <euouae> This: words = re.sub(r"[^\w\s]", " ", "This is, a sentence.").split() ==> ["This", "is", "a", "sentence"]
[14:21:41] <euouae> So I have to keep it, I can't use split() beforehand
[14:23:13] <dav1d> yes
[14:23:29] <dav1d> second part of the code (if you're curios: https://github.com/python/cpython/blob/main/Objects/stringlib/split.h#L66 ) it uses isspace() for splitting
[14:23:55] <euouae> Two implementations may differ
[14:24:06] *** Joins: canarts (~stranac@195.29.239.126)
[14:24:23] <euouae> I'm also not able to read CPython source code, it's too hard for me
[14:24:35] <euouae> Despite knowing C, I've never worked in such a project
[14:24:39] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 252 seconds)
[14:25:09] *** Joins: nichlas (nichlas@gateway/vpn/protonvpn/nichlas)
[14:25:26] <dav1d> the docs for isspace define what counts as a whitespace, later in the some *unicode* str object, split references "whitespace". The code confirms the behaviour (just linked it if you're curious)
[14:25:51] <dav1d> sure, the docs and the implementation may differ for some random python implementation, but the same can happen for re.split
[14:26:10] <euouae> now that I've confirmed the docs I don't care for the implementation :P
[14:26:55] *** Joins: Payam (~Payam@138.106.57.131)
[14:26:56] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[14:27:18] *** Quits: stranac (~stranac@195.29.239.126) (Ping timeout: 258 seconds)
[14:28:38] *** Joins: machine (~machine@user/steam)
[14:28:55] *** Joins: wyclif (~wyclif@user/wyclif)
[14:29:36] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 258 seconds)
[14:29:48] *** Joins: gusto (~Augustus@109.255.100.54)
[14:30:55] <randall> Hi, where do I find current documentation on the % format for string interpolation ("put it here %s" % foo)? Is that deprecated over the .format string interpolation?
[14:31:46] <euouae> Hm...
[14:31:47] <Julian> Fastly is down. Inb4 100 PyPI questions.
[14:31:52] <Julian> randall: It is not deprecated.
[14:31:52] <euouae> I'm getting a lot of 503s
[14:31:58] <euouae> from stackoverflow and python.org and stuff
[14:32:05] <Julian> euouae: See what I just mentioned :)
[14:32:19] *** Quits: Fusl (fusl@user/fusl) (Quit: freenode)
[14:32:31] <bjs> randall: .format() isn't string interpolation.  docs.python.org/ will have the documentation for all of it.
[14:32:51] <Julian> randall: You can find it here: https://docs.python.org/3/tutorial/inputoutput.html#old-string-formatting, and yes the other ways are stylistically preferred for new code, but yeah % still exists.
[14:32:52] *** Quits: iflema (~ian@user/iflema) (Remote host closed the connection)
[14:33:16] <KirkMcDonald> https://status.fastly.com/incidents/vpk0ssybt3bj
[14:33:21] <bjs> randall: except it looks like AWS(?) has exploded so the site is not so stable
[14:33:35] *** Quits: Payam (~Payam@138.106.57.131) (Quit: Client closed)
[14:33:37] <bjs> fastly hm
[14:33:49] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[14:34:16] <KirkMcDonald> Also https://status.python.org/
[14:35:59] <randall> Site still works for me™, and I've got a local copy of the docs installed.
[14:35:59] <euouae> It looks like the internet as we know it is gone. It is up to us here on IRC to rebuild it
[14:36:37] *** Joins: SoleSoul (~SoleSoul@134.191.232.81)
[14:36:56] *** Joins: SparkleKraken (~SparkleKr@97e407ec.skybroadband.com)
[14:37:11] <randall> Oh, it's also called "printf-style String Formatting", good to know. That's a better thing to google than the percent sign. ;)
[14:37:25] <SoleSoul> leduyquang753: Thank you. That's exactly what I'm looking for, that the switches themselves are case insensitive. Is it possible?
[14:37:51] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 245 seconds)
[14:39:13] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[14:39:23] *** Quits: euouae (~user@user/euouae) (Quit: ERC (IRC client for Emacs 26.3))
[14:40:46] <SoleSoul> For context: the question is: Is it possible to have case insensitive argparse switches/flags?
[14:41:04] *** Joins: Death916_lap1 (~Death916@user/death916)
[14:42:05] <KirkMcDonald> Not directly. You would need to normalize the case of the input, I think.
[14:42:32] <SoleSoul> What do you mean?
[14:42:56] *** Quits: Death916_lap1 (~Death916@user/death916) (Client Quit)
[14:43:01] <KirkMcDonald> [s.lower() if s.startswith("-") else s for s in sys.argv]
[14:43:05] <bjs> SoleSoul: before you hand the input to argparse,  make it all lowercase
[14:43:09] <bjs> (or rather, use casefold)
[14:43:19] <KirkMcDonald> True, s.casefold() is the thing.
[14:43:22] *** Joins: wattux (~wattux@212.51.23.106)
[14:43:38] *** Joins: thiras (~thiras@user/thiras)
[14:43:54] *** Quits: death916_lap (~Death916@user/death916) (Ping timeout: 252 seconds)
[14:43:58] <nedbat> that might bork things like `--look-for=Makefile`
[14:44:03] <KirkMcDonald> And this actually isn't the best solution, since starting with '-' doesn't *necessarily* mean it's a flag.
[14:44:11] <KirkMcDonald> Also that.
[14:44:20] <rawplayer> /win/win 26
[14:44:23] <bjs> nedbat: not on a FAT filesystem ;)
[14:44:32] <bjs> it depends *how* case insensitive you want to be
[14:44:37] <KirkMcDonald> I think the correct answer is, "No, argparse can't really do this."
[14:44:56] <SoleSoul> Interesting
[14:45:20] *** Joins: wyclif (~wyclif@user/wyclif)
[14:45:27] <SoleSoul> The request I got is to make it case insensitive as in Windows
[14:45:36] <SoleSoul> or DOS :)
[14:45:52] <SoleSoul> tried to convince them case sensitive is better
[14:46:13] <SoleSoul> but they weren't convinced
[14:46:33] <KirkMcDonald> I mean, it doesn't use /X style switches, either.
[14:46:42] <SoleSoul> still trying to understand which option is better
[14:46:44] *** gr_wity is now known as grawity
[14:46:57] *** Joins: death916_lap (~Death916@user/death916)
[14:46:58] <SoleSoul> exactly what I told them
[14:47:08] <zamba> hi have the following python code that uses trio: https://dpaste.org/6iQG . i want to rewrite it to spawn each new incoming connection (and also corresponding outgoing clients) in a separate process.. so that the memory used can be released back to the OS after termination.. how can i do this simply?
[14:47:23] <nedbat> wow, argparse.py is way more complicated than I imagined...
[14:47:35] <KirkMcDonald> SoleSoul: So I think the options are either "use argparse and live in that world" or "don't use argparse."
[14:47:40] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[14:47:45] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[14:47:50] <gloomy_desktop> can you "subclass" a TypedDict?
[14:48:35] <gloomy_desktop> I'd rtfm but half of the internet is down... :-)
[14:48:54] <Wulf> zamba: if you want one process per client, trio might not be the right tool for you
[14:49:09] *** Quits: audiocat (~audio@2603-8081-1800-00af-d691-561d-0da3-aede.res6.spectrum.com) (Ping timeout: 244 seconds)
[14:49:15] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[14:49:17] <SoleSoul> KirkMcDonald: Thank yuo
[14:49:23] *** Joins: slavfox_ (~slavfox@93.158.232.111)
[14:49:52] *** Joins: dme86 (~dan@user/dan86)
[14:49:57] *** Joins: dunc (sid16@id-16.highgate.irccloud.com)
[14:49:57] *** Quits: Julian (~tos9@151.66.53.132) (Ping timeout: 252 seconds)
[14:50:13] <zamba> Wulf: what do you suggest doing instead?
[14:50:29] *** Quits: slavfox (~slavfox@93.158.232.111) (Ping timeout: 245 seconds)
[14:50:29] *** slavfox_ is now known as slavfox
[14:50:59] <Wulf> zamba: xinetd? ;-)
[14:53:40] *** Joins: Death916_lap1 (~Death916@user/death916)
[14:54:34] <entuland> hello everyone, anyone else having problems accessing pypi.org?
[14:55:06] <Wulf> entuland: huh. They're down. And a news site I regularily read.
[14:55:08] *** Joins: Crys (~Tiran@python/psf/tiran)
[14:55:20] <lericson> AWS issue i think
[14:55:26] <entuland> github.com as well seems a big fumble of CORS errors
[14:55:28] <Wulf> CDN broken?
[14:55:34] <Crys> Fastly CDN has issues
[14:55:45] <Crys> https://status.fastly.com/
[14:55:53] <entuland> half of the internet seems broken due to that :P
[14:55:56] <Peng> https://status.python.org/
[14:56:32] <LordKalma> argparse isn't that bad for simple usage
[14:56:46] <Crys> Ee confirmed that PyPI issues are caused by Fastly CDN degration.
[14:56:48] <jor> fastly status keeps adding more and more datacenters to degraded state... must be one hell of a meteor shower happening ;p
[14:57:12] *** Quits: death916_lap (~Death916@user/death916) (Ping timeout: 258 seconds)
[14:57:17] *** Death916_lap1 is now known as death916_lap
[14:57:27] *** Joins: duso (~duso@pa49-197-12-252.pa.qld.optusnet.com.au)
[14:57:41] <kosh> jor, it is the zombie apocalypse, they are chewing on the cables and making it hard to get the datacenters repaired
[15:00:51] *** Joins: Ivyy (~Ivyy@2001:a61:13f0:c401:aaad:8747:f950:e29)
[15:01:31] *** Joins: iflema (~ian@user/iflema)
[15:02:16] <entuland> crap... I can't install stuff via pip either due to that issue
[15:03:00] <entuland> I have the steam library installed on my previous HDD, can I move that installation around without using pip?
[15:03:22] *** Quits: rnm (~mambang@user/mambang) (Ping timeout: 250 seconds)
[15:04:46] *** Joins: arthem (~rehmat@user/arthem)
[15:04:59] *** Joins: blizzard (~winter@2603-6011-f901-9e5b-78b5-8b2f-cdb2-4171.res6.spectrum.com)
[15:05:12] *** betelgeuse01 is now known as betelgeuse
[15:05:24] <themill> I'm looking to open an existing docx file, locate a table within it, add rows and add text to the table. Is there a recommended package for that sort of activity?
[15:05:37] *** Joins: aw1 (~aw1@203.171.246.186)
[15:06:29] <mgedmin> a quick google gives me https://python-docx.readthedocs.io/en/latest/
[15:06:40] <mgedmin> I remember using some other package once, but iirc it was write-only
[15:07:02] <themill> yeah, I'm hoping for recommendations that go beyond what I can google myself
[15:08:00] <webknjaz> @entuland: use virtualenvs
[15:08:02] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[15:08:44] <entuland> webknjaz, I'll check that, never used them
[15:08:53] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[15:09:47] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[15:10:06] *** Joins: agander_m (sid407952@id-407952.tinside.irccloud.com)
[15:10:23] <zamba> Wulf: hehe
[15:10:31] *** Joins: f1se4 (~f1se4@213.195.98.55)
[15:10:45] <zamba> Wulf: well, i guess that spawns out new processes, so sure :)
[15:11:08] <zamba> Wulf: but it should be doable to just let python spawn out the new processes as well.. and i want to deploy this in user-space as docker containers
[15:11:43] <webknjaz> @entuland: https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/#creating-a-virtual-environment
[15:12:12] <entuland> connection failure for that link here
[15:12:26] *** Joins: Mscrt (~Mscrt@2402:e280:3d22:227:5dcd:6ce1:3fbf:28d1)
[15:12:38] <entuland> with this CDN thing going around it's probably safer to call this a gaming day and ignore any work :P
[15:12:56] <graingert> https://docs.python.org/3.10/library/ssl.html#ssl.PROTOCOL_TLS is deprecated
[15:13:01] <graingert> what's the alternative?
[15:13:10] <Mscrt> Hi any one knows about python-music library?
[15:13:27] <graingert> getting a deprecation warning because of this flag being defaulted to here: https://github.com/graingert/uvicorn/blob/16ee7ded86161675831298d43394577aedfaa9d5/uvicorn/config.py#L159-L160
[15:13:32] <grawity> graingert: hmm, I think you're supposed to use the _CLIENT or _SERVER variants?
[15:13:38] *** Joins: rnm (~mambang@user/mambang)
[15:13:57] <grawity> graingert: see note under https://docs.python.org/3.10/library/ssl.html#ssl.PROTOCOL_SSLv3
[15:15:41] <grawity> previously the OpenSSL C API used to have like "SSLv23_METHOD" (which really meant "any version" despite the name) and took a list of flags on top (like "NO_SSLv2 | NO_SSLv3 | NO_TLSv1"), but now it has switched over to a more straightforward API where you give it the acceptable version bounds
[15:15:49] <dale> Isn't there a stdlib class that exists basically to instantiate and stick attributes on, with no other behavior?  Something probably a bit like argparse.Namespace, but not specific to argparse.  I thought it was in... typing or something?
[15:16:08] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[15:16:27] *** Joins: cmaureir (~cmaureir@201-13-142-46.pool.kielnet.net)
[15:16:35] <nedbat> dale: types.SimpleNamespace
[15:16:43] <nedbat> dale: (it should be in collections, but oh well)
[15:17:16] <dale> nedbat: Thank you.  Also, profanity.  I forgot types even existed.
[15:17:29] <dale> types, typing, collections, sigh.
[15:17:36] *** Quits: Ivyy (~Ivyy@2001:a61:13f0:c401:aaad:8747:f950:e29) (Remote host closed the connection)
[15:18:02] *** Joins: DaNeenjah (~jake@29.sub-72-106-108.myvzw.com)
[15:18:03] *** Quits: n0cto (~n0cto@2605:a601:ac07:4100:cd6d:e5f5:de7f:3903) (Read error: Connection reset by peer)
[15:18:47] <graingert> grawity: so I want ssl.PROTOCL_TLS_SERVER ?
[15:19:05] <graingert> can I do? ssl.PROTOCOL_TLS_CLIENT | ssl.PROTOCOL_TLS_SERVER
[15:19:13] <grawity> I don't think | makes sense for them
[15:19:27] <grawity> if you're making a server socket (accepting clients) then only _SERVER makes sense
[15:19:34] <grawity> if you're making a client socket (connecting) then _CLIENT
[15:20:45] <nedbat> Mscrt: what's your question about the python-music library? it works better here to ask your question directly. People don't often volunteer as experts, and sometimes non-experts can help.
[15:20:50] *** Quits: Strom (strom@fedora/strom) (Ping timeout: 252 seconds)
[15:22:24] *** Quits: f1se4 (~f1se4@213.195.98.55) (Ping timeout: 252 seconds)
[15:22:51] <Crys> graingert: do you have a server-side socket or a client-side socket?
[15:23:07] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Ping timeout: 264 seconds)
[15:23:37] <Crys> graingert: I deprecated most protocols because they were deprecated since OpenSSL 1.1.0. I also split the protocols into server-side and client-side because they get different default options.
[15:23:57] *** Joins: entuland_ (~entuland@user/entuland)
[15:24:01] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[15:24:29] <graingert> Crys: what does TLS_method() do?
[15:24:37] <graingert> (in openssl)
[15:24:44] *** Parts: agander_m (sid407952@id-407952.tinside.irccloud.com) ()
[15:24:50] <Crys> graingert: client-side sockets enforce cert validation and hostname verification. TLS servers rarely validate client-side certificates, unless you do smartcards or APIs with client certs.
[15:24:55] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 264 seconds)
[15:25:01] *** Joins: CoolerX (~CoolerX@202.164.131.24)
[15:25:27] <Crys> graingert: The method returns a struct with various callbacks that perform different steps of the TLS handshake and application layer communication.
[15:26:01] <graingert> Crys: so there's no public-non-deprecated way to use `TLS_method()` anymore?
[15:26:06] <CoolerX> Is fastly CDN down?
[15:26:23] <graingert> CoolerX: I know a guy who knows a guy who said it was down
[15:26:24] <dale> CoolerX: It was having problems as of at least a few minutes ago.
[15:26:32] <mgedmin> fastly is very down: https://status.fastly.com/incidents/vpk0ssybt3bj
[15:26:33] <CoolerX> graingert, it's down for me
[15:26:43] <dale> https://status.fastly.com/incidents/vpk0ssybt3bj
[15:26:45] <CoolerX> dale, I am getting 503 with stackoverflow
[15:27:07] <leduyquang753> It works for me.
[15:27:14] *** Quits: SoleSoul (~SoleSoul@134.191.232.81) (Quit: Client closed)
[15:27:18] <nedbat> the internet is busted: https://downdetector.com/
[15:27:18] *** Joins: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea)
[15:27:36] <graingert> from a whatsapp group "It's Fastly, been told by an informant"
[15:28:06] <graingert> Crys: https://github.com/python/cpython/blob/d56e700d6c7ebf1a424260d0e4f0c291d1f5b3af/Modules/_ssl.c#L3011-L3021
[15:28:16] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[15:28:44] <Crys> graingert: https://github.com/openssl/openssl/blob/master/ssl/ssl_local.h#L486
[15:29:15] *** entuland_ is now known as entuland
[15:29:16] <Crys> graingert: no, because it does not make sense to use the same context for client and server side.
[15:29:45] <Crys> graingert: for clients you always want proper cert validation. For servers you pretty much never want cert validation.
[15:29:46] <p-i-> Finally I have my asyncio websocket streamer working.
[15:29:58] <p-i-> Does this code look decent for the __main__ entrypoint: https://bpa.st/E57Q ?
[15:30:10] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Ping timeout: 258 seconds)
[15:30:10] <graingert> Crys: so what's the difference between TLS_server_method() and TLS_method() ?
[15:30:21] <Crys> and hostname verification does not make any sense for server-side context
[15:30:34] *** Quits: arthem (~rehmat@user/arthem) (Quit: Konversation terminated!)
[15:30:36] <graingert> ?
[15:30:43] <Crys> graingert: https://www.openssl.org/docs/man1.1.1/man3/TLS_method.html
[15:30:51] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[15:31:27] <graingert> so "generic type (for client and server use)" is what uvicorn (asgi webserver) currently uses
[15:31:43] <graingert> and you're saying I want TLS_server_method() selected by ssl.PROTOCOL_TLS_SERVER ?
[15:31:54] <Crys> graingert: yes, and it should not use it any more.
[15:32:05] <graingert> it?  it?
[15:32:08] *** Joins: Strom (strom@fedora/strom)
[15:32:15] *** Joins: bancroft_ (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca)
[15:32:51] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 252 seconds)
[15:32:51] *** Joins: cthulchu_ (~Cthulchu@195.66.198.226)
[15:33:01] <graingert> Crys: you used two "it"s and I don't know which refers to what
[15:33:03] <Crys> graingert: How is the context used? For server-side or for client-side connections?
[15:33:08] *** Joins: blyat-73 (~hjgkjhgkj@79.101.60.163)
[15:33:36] *** Joins: f1se4 (~f1se4@213.195.98.55)
[15:34:08] <graingert> Crys:  https://www.irccloud.com/pastebin/3dcZD8fr/pytest.out
[15:34:24] <graingert> Crys: https://github.com/encode/uvicorn/pull/1070
[15:34:43] <mgedmin> p-i-: I like it, except I would move it to a main() function, so you can use console_scripts entrypoints
[15:34:59] <mgedmin> p-i-: but then I've never used asyncio so my opinion is not very useful
[15:35:03] <graingert> https://github.com/graingert/uvicorn/blob/16ee7ded86161675831298d43394577aedfaa9d5/uvicorn/config.py#L159
[15:35:20] <Crys> graingert: I'm not familiar with uvicorn.
[15:35:21] <mgedmin> I tried to multiplex the output of a couple of subprocesses with asyncio once, gave up after a few hours and wrote a shell script that uses tmux
[15:35:22] <graingert> this line should be `ssl_version=ssl.PROTOCOL_TLS_SERVER` ?
[15:35:27] <graingert> Crys: it's an asgi web server
[15:35:46] <Crys> graingert: if it's a server, then it should PROTOCOL_TLS_SERVER
[15:35:52] <graingert> cool
[15:35:59] <graingert> Crys: are you https://github.com/tiran ?
[15:36:04] <Crys> yes
[15:36:12] <graingert> ah cool
[15:36:13] <Crys> Christian (Crys / Tiran) :)
[15:36:42] *** Quits: pizdets (~pizdets@183.182.115.205) (Ping timeout: 252 seconds)
[15:37:20] <Crys> (and it's a reference to a great SciFi book series)
[15:37:44] <graingert> Crys: ah cool
[15:37:47] <p-i-> Gosh uvicorn looks interesting. Wish I had found it when I was writing socket server/listener code a month back.
[15:38:02] <graingert> p-i-: nah just use anyio.create_tcp_listener
[15:38:13] <graingert> or yeah use asgi and http :p
[15:38:36] <graingert> Crys: https://github.com/tiran/wincertstore/pull/1
[15:39:13] *** Joins: blackop (~ocloud@user/blackop)
[15:39:14] <Crys> graingert: I just migrated the repos from hg ...
[15:39:19] <Crys> took too long :(
[15:39:35] <Crys> then fastly died on my before I could finish the new version
[15:39:35] <graingert> Crys: for some reason conda for windows ships https://anaconda.org/conda-forge/wincertstore as a distutils package
[15:40:05] <graingert> ah ok when the internets' back up I'll continue to harangue you
[15:40:09] <Crys> it's no longer needed
[15:40:12] *** Quits: f1se4 (~f1se4@213.195.98.55) (Ping timeout: 250 seconds)
[15:40:14] <graingert> yeah I know that
[15:40:22] <graingert> but conda is pulling it in and I don't know why
[15:40:56] <Crys> ssl.create_default_context() pulls certs via ssl.enum_certificates() on Windows
[15:41:02] <graingert> yep I know
[15:41:24] <Crys> https://github.com/python/cpython/blob/main/Lib/ssl.py#L588
[15:41:25] <mgedmin> fastly is back up
[15:41:38] <graingert> Crys: but it looks like conda are still trying to use it https://anaconda.org/conda-forge/wincertstore
[15:41:54] *** Joins: Mulugruntz (~Mulugrunt@124-159-50-62.ppp.bbiq.jp)
[15:41:56] <p-i-> "Fastly error: unknown domain: stackoverflow.com." Is SO down for anyone else?
[15:42:00] <graingert> Crys: I need to work out what's got the dep on wincertstore and why they're not using the setuptools version
[15:42:06] <graingert> p-i-: yes the whole internet went down
[15:42:19] <p-i-> srsly?
[15:42:49] <mgedmin> p-i-: https://status.fastly.com/incidents/vpk0ssybt3bj
[15:42:56] <petemc> i didnt realise quite how many sites use fastly
[15:43:58] <p-i-> wow!
[15:44:35] <graingert> https://www.irccloud.com/pastebin/JJSSRqpL/Crys.pytb
[15:44:42] <graingert> argh httpx uses it too
[15:45:43] *** Quits: death916_lap (~Death916@user/death916) (Quit: Going offline, see ya! (www.adiirc.com))
[15:47:25] *** Quits: alexbk (~alexbk@c-73-157-41-15.hsd1.wa.comcast.net) (Ping timeout: 258 seconds)
[15:47:43] <p-i-> This is my working WebSocket code: https://bpa.st/C45A It works, but not sure if it could be cleaner. grateful for feedback...
[15:48:00] *** Quits: Fluxx (~Fluxx@user/fluxx) (Ping timeout: 250 seconds)
[15:49:02] <graingert> Crys: https://github.com/encode/httpx/pull/1671 ?
[15:49:18] *** Quits: CoolerX (~CoolerX@202.164.131.24) (Ping timeout: 250 seconds)
[15:51:03] *** Joins: CoolerX (~CoolerX@202.164.131.24)
[15:52:07] <Crys> graingert: OP_NO_* are also deprecated
[15:52:26] <graingert> E       DeprecationWarning: ssl module: Setting OP_NO_SSL* or SSL_NO_TLS* options is deprecated is deprecated
[15:52:40] <graingert> Crys: your deprecation message is bugged is bugged
[15:53:35] <Crys> https://docs.python.org/3.10/whatsnew/3.10.html#ssl
[15:53:38] *** Quits: duso (~duso@pa49-197-12-252.pa.qld.optusnet.com.au) (Ping timeout: 250 seconds)
[15:53:44] *** Quits: fredrikhl (~fhl@myrsnipa.uio.no) (Ping timeout: 244 seconds)
[15:54:02] <Crys> graingert: could you please file a BPO? I need to get back to work. Fastly is up and running again.
[15:54:17] *** Quits: OMGOMG (~bobrobert@nami.ifi.uio.no) (Ping timeout: 268 seconds)
[15:54:49] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[15:54:52] *** Joins: kek_ (~kek_@2a02:168:200f:1f10:410b:731a:6592:864d)
[15:54:56] <kek_> why is there no do-while?
[15:55:26] <graingert> Crys: https://github.com/python/cpython/pull/26599
[15:55:35] <Helle> kek_: because it doesn't fit well in a block structure that Python has and can be achieved with the existing code
[15:55:40] <Helle> but yes, I miss it as well sometimes
[15:57:26] <kek_> Helle, ah okay thanks for the info
[15:58:11] <p-i-> My WebSocket ctor doesn't connect the socket. Instead it's done in an aio_run method: `self.ws = await session.ws_connect(self.url)`.  This means that another method: `async def send_json(self, J): await self.ws.send_json(J)` risks sending before the socket is ready.
[15:58:19] <p-i-> What's a good solution for this?
[15:58:59] <p-i-> I could set a `did_setup` flag and spin send_json until it's True before actually sending...
[15:59:10] <p-i-> Feels kinda wrong tho'.
[15:59:20] <graingert> Crys: so I do `context.minimum_version = TLSVersion.TLSv1_2`
[16:01:23] <mgedmin> p-i-: either if not self.connected: await self.connect(), or a if not self.connected: raise RuntimeError("not connected")
[16:01:28] <Crys> graingert: yes, but it only works for modern OpenSSL versions.
[16:01:37] <Crys> graingert: not for old LibreSSL or OpenSSL 1.0.2.
[16:02:12] <graingert> Crys: when does python drop that version of OpenSSL?
[16:02:16] <Crys> graingert: 3.10
[16:02:22] <graingert> ahh ok
[16:02:41] <supakeen> Which version of OpenSSL is being dropped?
[16:02:43] <p-i-> mgedmin: `self.ws = await session.ws_connect(self.url)` ... so can I later do `await self.ws` in my sendfunc?
[16:02:47] <Crys> that's why it took so long to deprecated old stuff
[16:03:00] <graingert> so `if sys.version_info >= (3, 10): context.minimum_version = TLSVersion.TLSv1_2`
[16:03:01] <Crys> supakeen: Python 3.10 requires 1.1.1
[16:03:14] <supakeen> Thank you.
[16:03:22] <Crys> supakeen: https://www.python.org/dev/peps/pep-0644/
[16:04:01] <graingert> or  `if ssl.OPENSSL_VERSION_INFO >= (1, 0, 3): context.minimum_version = TLSVersion.TLSv1_2` ?
[16:04:03] <Crys> 3.9 and 3.10 will also support OpenSSL 3.0.0. I got most patches into 3.8 before it reached security-only freeze phase.
[16:04:17] <Crys> graingert: >= (1, 1, 0)
[16:04:22] <graingert> great stuff
[16:05:07] <Crys> supakeen: 3.10 requires APIs that are only in OpenSSL 1.1.1 and not in 1.1.0, 1.0.2, or LibreSSL.
[16:05:33] <supakeen> Yea, I'm just noting that down on the 'legacy infra' todo pit.
[16:06:13] <Crys> and TLS 1.0 and 1.1 are also down the drain.
[16:06:40] *** Quits: Strom (strom@fedora/strom) (Ping timeout: 272 seconds)
[16:06:50] <Crys> You might be able to get it working on some platforms, but it's no longer officially supported.
[16:07:17] <supakeen> Oh no, I'm putting it on the ever mounting list of arguments why these machines should really be deleted :)
[16:08:11] <Crys> 3.10 also enforeces security level 2
[16:08:24] *** Joins: Strom (~strom@fedora/strom)
[16:08:34] <Crys> https://www.openssl.org/docs/manmaster/man3/SSL_CTX_get_security_level.html
[16:08:41] <graingert> Crys: https://github.com/encode/httpx/pull/1671/files#diff-c73be11bcd157d39ddbd8afeeac32c7d503a67a5a8603008247996f2bafaa685R157-R162
[16:08:47] *** Quits: wattux (~wattux@212.51.23.106) (Quit: Client closed)
[16:08:59] <graingert> I've gone for this so pyupgrade can strip it all out once py3.10 is the lowest version ;D
[16:09:08] *** GewoonYorick is now known as shadoozo
[16:09:22] <Crys> Most distros are using OpenSSL 1.1.1 any way
[16:09:41] <Crys> Debian old-stable, CentOS 7, and ancient Ubuntu are on old OpenSSL
[16:09:51] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[16:09:52] <Crys> Debian soon-to-be-ancient-stable actually :)
[16:10:21] *** Quits: iomari891 (~iomari891@105.112.138.38) (Read error: Connection reset by peer)
[16:10:34] *** Joins: duso (~duso@pa49-197-12-252.pa.qld.optusnet.com.au)
[16:11:06] *** Joins: iomari891 (~iomari891@105.112.138.38)
[16:11:56] *** Quits: Strom (~strom@fedora/strom) (Read error: Connection reset by peer)
[16:12:10] *** Joins: magla (~gelignite@55d41093.access.ecotel.net)
[16:13:27] *** Joins: Arc (strom@fedora/strom)
[16:13:51] *** Joins: radu242 (~radu242@pool-108-41-101-29.nycmny.fios.verizon.net)
[16:13:53] *** Quits: machine (~machine@user/steam) (Quit: machine)
[16:16:02] *** Joins: Ivyy (~Ivyy@2001:a61:13f0:c401:aaad:8747:f950:e29)
[16:16:03] <graingert> Crys: E           httpx.ConnectError: [SSL] called a function you should not call (_ssl.c:983)
[16:16:04] <graingert> oh no
[16:16:13] *** Quits: ssbr (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[16:16:56] *** Joins: n00b101 (uid448161@id-448161.tooting.irccloud.com)
[16:19:03] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[16:19:13] <zamba> graingert: you've helped me out earlier with a trio implementation.. i need to rewrite this to use separate processes, to be able to release the memory back to the OS afterwards.. do you have any suggestions on how to do that?
[16:20:48] <Crys> graingert: you are either using server-side socket with a client context or the other way around
[16:20:48] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Quit: So long and thanks for all the fish)
[16:20:54] <Crys> I need to improve error reporting here
[16:20:57] <n00b101> guys.. I have a string "alicebob". It generates a unique hash value. But "bobalice" is different string. But is there any function, module to get same hash value even if the name is inverted as mentioned above? I.e tho the name is inverted it should show same hash or any unique id which is same for both "alicebob" and "bobalice"
[16:20:58] <graingert> Crys: yep
[16:21:07] <habnabit_> n00b101, no
[16:21:08] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[16:21:15] <graingert> Crys: E           httpx.ConnectError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unsupported certificate purpose (_ssl.c:983)
[16:21:16] <mgedmin> def same_hash_value(string): return 42
[16:21:20] *** Joins: wattux (~wattux@212.51.23.106)
[16:21:23] <habnabit_> n00b101, if that were true, it wouldn't be a useful hash function
[16:21:29] <graingert> hmm I think trustme isn't setting the right purpose?
[16:21:44] <n00b101> Is there any workaround?
[16:21:51] <habnabit_> n00b101, 'workaround' for what?
[16:21:52] <mgedmin> you could try for some variety with hash(tuple(sorted(name))
[16:22:50] <habnabit_> n00b101, if you want one canonical hash for a variety of inputs, you can do something like what mgedmin said ^
[16:23:25] <dale> I can't tell if it's OK to arbitrarily rearrange the characters or not, as the problem has been presented.
[16:23:57] <dale> Maybe you want to "rotate" the characters in the string to determine if the two strings are equal after some number of rotations?
[16:24:14] <p-i-> If I have foo = await(bar()), does this mean foo is a promise? How to (from another method) wait until foo is completed?
[16:24:16] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Max SendQ exceeded)
[16:24:22] <kek_> hi
[16:24:43] <habnabit_> p-i-, python doesn't have promises, but if you can await it, it's an awaitable
[16:24:47] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[16:24:59] <habnabit_> p-i-, what does 'until foo is completed' means?
[16:25:09] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[16:27:47] <Crys> graingert: could you please upload a trustme cert somewhere?
[16:28:30] <graingert> Crys: just seeing if it's a trustme bug on py3.10 https://github.com/python-trio/trustme/pull/327
[16:28:40] *** Joins: thiras (~thiras@user/thiras)
[16:29:06] <Crys> the error message is coming from OpenSSL
[16:29:50] *** Quits: radu242 (~radu242@pool-108-41-101-29.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[16:30:57] *** Joins: wyclif (~wyclif@user/wyclif)
[16:31:17] *** Joins: radu242 (~radu242@pool-108-41-101-29.nycmny.fios.verizon.net)
[16:31:32] <Crys> uhm
[16:31:37] <Crys> now that looks wrong
[16:31:50] <Crys> Nathaniel adds EKU to wrong cert
[16:32:14] <p-i-> habnabit_: The line is `self.ws = await session.ws_connect(self.url)`  https://bpa.st/C45A#1L31 .. I need for the connection to be established before sending data to it.
[16:32:34] <Crys> the EE cert is missing KU and EKU
[16:32:44] <habnabit_> p-i-, so what's the question?
[16:32:45] *** Quits: iflema (~ian@user/iflema) (Remote host closed the connection)
[16:33:20] *** Joins: iflema (~ian@user/iflema)
[16:34:24] <p-i-> habnabit_: At the send-point 'async def send_json(self, J): await self.ws.send_json(J)` how to wait until self.ws connected?
[16:34:33] *** Joins: alexbk (~alexbk@c-73-157-41-15.hsd1.wa.comcast.net)
[16:34:44] <habnabit_> p-i-, idk, what do the docs say?
[16:35:07] *** Quits: ffledgling (~textual@163.114.130.7) (Ping timeout: 264 seconds)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.1)
[16:36:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[16:36:39] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:37:32] *** Quits: boB_K7IQ (~boB_K7IQ@c-73-254-117-91.hsd1.wa.comcast.net) ()
[16:37:54] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[16:38:18] *** Joins: arthem (~rehmat@user/arthem)
[16:39:06] *** Quits: Meteorhead (~Meteorhea@165.225.21.61) (Quit: Client closed)
[16:39:29] *** Joins: zeden (~zeden@user/zeden)
[16:39:52] <p-i-> Nothing relevant that I can find, alas.
[16:41:06] <p-i-> There's even `sleep` fudges in the official doc, e.g. https://docs.aiohttp.org/en/stable/client_advanced.html#graceful-shutdown "All if this will eventually become obsolete when the asyncio internals are changed so that aiohttp itself can wait on the underlying connection to close."
[16:41:07] *** Quits: Gerula (~Gerula@user/gerula) (Quit: Leaving)
[16:41:13] <p-i-> So I guess I have to roll my own...
[16:42:12] *** Quits: baldr333 (~baldr333@modemcable034.69-70-69.static.videotron.ca) (Quit: Client closed)
[16:43:52] *** Joins: rookie1 (~rookie@207.154.204.166)
[16:44:48] <Crys> graingert: trustme sets some fields wrong
[16:45:27] *** Quits: NineBAR (~NineBAR@c-68-56-180-29.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[16:45:36] <koopman> hey all, im getting the following error trying to run any module/packages with python Entry points must be listed in groups any ideas what could cause this?
[16:46:06] <Yhg1s> koopman: can you show what you're trying to run and the full output you get?
[16:46:09] <Yhg1s> (preferably in a pastebin)
[16:46:20] <n00b101> Guys.. there are 6 members in a group.   Can I make each of them a one-to-one mapping. For eg: alice,bob ->9a54c likewise for six members can each of them form an Id like this? Of course all one-to-one mapping should be unique
[16:46:53] <koopman> just trying to run python -m flask run
[16:47:08] <graingert> Crys: q.q
[16:47:12] <n00b101> When somebody lookup bob,alice or alice,Bob the id should be same
[16:47:12] *** Joins: Gerula (~Gerula@user/gerula)
[16:47:27] <n00b101> Is this possible?
[16:47:30] <Yhg1s> koopman: okay, and the full output you get?
[16:47:31] <habnabit_> n00b101, map from a frozenset to the value
[16:48:07] <n00b101> How the value can be generated?
[16:48:28] <n00b101> What's fronzenset you mean?
[16:48:30] <koopman> @Yhg1s thanks for replying: here is the full output: https://bpa.st/M55Q
[16:48:55] <habnabit_> n00b101, frozenset is a builtin type
[16:49:49] *** Joins: wyclif (~wyclif@user/wyclif)
[16:50:04] *** Quits: especial (~especial@cm-84.214.207.74.getinternet.no) (Remote host closed the connection)
[16:50:47] <Crys> graingert: https://github.com/python-trio/trustme/pull/328
[16:51:06] <n00b101> habnabit_: can fronzenset solve my issue?
[16:51:12] <habnabit_> n00b101, yes
[16:51:26] <n00b101> The unique value will be generated as well?
[16:51:37] <graingert> Crys: I don't understand any of that
[16:51:39] <n00b101> How the one-to-one id is generated?
[16:51:50] <graingert> Crys: lets hope njs does
[16:51:51] <habnabit_> n00b101, do you know what a dict is?
[16:51:56] <n00b101> Yes
[16:52:00] <n00b101> Dictionary
[16:52:06] <dale> n00b101: Note that frozenset(("alice", "bob")) == frozenset(("bob", "alice")), which is a useful property for your problem.
[16:52:26] <koopman> okay, so running Get-Command python | Select-Object -ExpandProperty Definition, gives me a different location - i think visual studio has installed a second python installation
[16:52:39] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[16:53:27] *** Joins: darksun (~darksun@user/darksun)
[16:54:02] <n00b101> dale: that means md5sum(frozenset(("alice","bob")) and md5sum(frozenset(("bob","alice")) are same?
[16:54:25] <n00b101> Will be same?
[16:54:30] <habnabit_> n00b101, why are we talking about md5sum? python dicts don't use md5sum
[16:54:48] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[16:54:55] <n00b101> Ohh. That's dump question
[16:55:05] *** Joins: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[16:55:10] <mgedmin> n00b101: hash(frozenset(["alice", "bob"])) == hash(frozenset(["bob", "alice"]))
[16:55:32] <koopman> Any idea @Yhg1s  get_entry_map
[16:55:32] <koopman>     ep_map = self._ep_map
[16:56:04] <dale> (But don't use hash() if you really need unique values for a given pairing.)
[16:56:28] *** Joins: emacspenguin (~emacspeng@45.77.216.45)
[16:56:28] <habnabit_> hash just shows that they're the same as dict keys
[16:57:16] <n00b101> Actually, my initial problem was. ["alice","bob"] and ["bob","alice"] should generate SAME HASH.
[16:57:17] *** Quits: CoolerX (~CoolerX@202.164.131.24) (Quit: Leaving)
[16:57:30] <n00b101> Since you guys said it was not possible, I thought about this
[16:58:00] <n00b101> But mgedmin: said it's possible with frozenset?
[16:58:02] <habnabit_> n00b101, you were asking about a single string, not a set of strings
[16:58:12] <habnabit_> n00b101, _i_ said it was possible with frozenset
[16:58:19] *** Quits: cmaureir (~cmaureir@201-13-142-46.pool.kielnet.net) (Remote host closed the connection)
[16:58:40] <n00b101> <n00b101> guys.. I have a string "alicebob". It generates a unique hash value. But "bobalice" is different string. But is there any function, module to get same hash value even if the name is inverted as mentioned above? I.e tho the name is inverted it should show same hash or any unique id which is same for both "alicebob" and "bobalice"
[16:58:46] <n00b101> This was my initial question
[16:58:56] <n00b101> Asked ½hour ago
[16:58:57] *** Joins: jonascj (~jonascj@185.19.132.68)
[16:59:20] <habnabit_> n00b101, yes. there is a very large difference between talking about different single strings and talking about sets of strings
[16:59:29] <n00b101> mgedmin: where hash() can be any hash function?
[16:59:32] <habnabit_> n00b101, they are not the same
[16:59:37] <n00b101> Md5? Or any?
[17:00:10] <habnabit_> n00b101, hash is a python builtin
[17:00:19] <n00b101> Okay, tho they are different strings, I can put them in a list
[17:00:29] <n00b101> I'm happy it can produce same hash
[17:00:33] <jonascj> Anyone faimiliar with the sqlite3.Row (factory)? It apparently allows me to access the row as a dictionary `row['username']`, but also in an attribute-like way `row.username`. Does anyone know what datastructure is behind that?
[17:00:34] <n00b101> Let me try now..
[17:00:57] *** Joins: Meteorhead (~Meteorhea@165.225.21.61)
[17:01:24] <jonascj> A dictionary alone would allow for `row['username']` but not `row.username`. Is sqlite3.Row a class wrapping a dictionary? I can't seem to find out where it is defined in the cPython source.
[17:02:07] <graingert> Crys: I just wanted to fix one DeprecationWarning in one package q.q
[17:02:08] *** Joins: theterg (~theterg@pool-141-155-7-155.nycmny.fios.verizon.net)
[17:02:59] <graingert> Oh it's just a get_event_loop().run_until_complete(main()) -> asyncio.run(main())
[17:03:02] <graingert> Can't be that hard
[17:03:03] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 252 seconds)
[17:03:24] *** Quits: Mscrt (~Mscrt@2402:e280:3d22:227:5dcd:6ce1:3fbf:28d1) (Quit: Client closed)
[17:03:49] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[17:04:23] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[17:04:38] *** Joins: nyah (~nyah@90.221.186.180)
[17:04:43] *** Quits: nyah (~nyah@90.221.186.180) (Client Quit)
[17:04:47] <dale> n00b101: https://bpa.st/UOFQ
[17:05:49] *** Joins: nyah (~nyah@90.221.186.180)
[17:05:58] *** Joins: wyclif (~wyclif@user/wyclif)
[17:07:21] *** Joins: stormbytes (~textual@ool-18e4a56c.dyn.optonline.net)
[17:07:27] <Crys> graingert: welcome to my live :)
[17:09:03] <jonascj> dbapi2.py (https://github.com/python/cpython/blob/main/Lib/sqlite3/dbapi2.py) does "from _sqlite3 import *" but where is the _sqlite3 module which might contain the Row-class?
[17:09:10] <Yhg1s> koopman: well, the error means pkg_resources can't find the metadata for that particular entry point. It may be a version conflict (between setuptools, pip, pkg_resources and/or flask), or it could mean the entry_points.txt file was deleted or corrupted.
[17:09:44] <dale> jonascj: Probably https://github.com/python/cpython/tree/main/Modules/_sqlite
[17:10:08] <koopman> I think i know what has happened, i installed a python interpriter for VS code and i think its stuffed up the paths to packages to be installed in appdata
[17:10:20] *** Joins: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[17:10:41] <koopman> running python -m site shows packages in both appdata and under the python folder on C
[17:10:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[17:11:08] *** Joins: azidhaka (~azidhaka@gateway.videnov.bg)
[17:11:28] <Yhg1s> koopman: using virtualenvs would probably avoid the problem. bit.ly/py-venv
[17:11:52] <jonascj> dale ah yes, right you are. So in the compilation process the C programs becomes something importable from within Python files. I had hoped it was a Python class...
[17:12:27] <habnabit_> jonascj, you just want the x.some_arbitrary_name ability in a python class?
[17:13:37] *** Joins: srji (~srji@static.43.141.203.116.clients.your-server.de)
[17:13:46] <SparkleKraken> What virtualenvs do people here use? I'm pretty basic with Python but was taught to use pipenv with pipfile rather than raw venv + pip
[17:14:18] <mgedmin> I mostly let tox manage virtualenvs for me
[17:14:21] <Yhg1s> SparkleKraken: I've never bothered with pipenv. it's fine for developing applications, but less convenient as a user or when developing libraries.
[17:14:38] <jonascj> habnabit_ I was wondering how sqlite3.Row achieved dictionary and object/attribute-like access at the same time (e.g. row.name and row['name']). But there is no builtin python type with that behaviour I summize
[17:14:42] <mgedmin> I tend to have a Makefile in my projects that creates a local virtualenv named something like .venv
[17:15:01] <Yhg1s> SparkleKraken: for testing, I use nox or tox. pipx for convenient installation of executables. manual virtualenvs all over the place for experiments.
[17:15:02] <mgedmin> and a bin directory with a bunch of symlinks so I can run bin/pip freeze etc.
[17:15:22] <mgedmin> I used to `virtualenv .`, but it started dropping too much garbage (pip-cache.json?) so I stopped
[17:15:40] <SparkleKraken> Yhg1s: Yikes, that sounds... complicated
[17:16:09] <mgedmin> pipx is great for command-line tools available globally (flake8, coverage, tox)
[17:16:38] <Yhg1s> SparkleKraken: what part?
[17:16:44] *** Quits: zeden (~zeden@user/zeden) (Ping timeout: 258 seconds)
[17:17:42] <SparkleKraken> Yhg1s: Just having multiple different tools + manually created virtualenvs. I'd lose track so quickly! But like I say, I'm only really getting into python so I imagine a lot of it comes down to experience
[17:17:43] <mgedmin> it is complicated, we're all just used to it
[17:17:49] <mgedmin> pipenv was a nice dream, shame it didn't go anywhere
[17:17:51] <n00b101> Guys..
[17:18:00] <n00b101> mgedmin: habnabit_ :
[17:18:07] <n00b101> Thank you very much guys
[17:18:15] <n00b101> I don't know how to thank you
[17:18:17] <Yhg1s> SparkleKraken: I don't need to keep track of the virtualenvs I create for experiments. They just live in a directory, and eventually they get deleted when I clean up -- or re-used, if they're there.
[17:18:22] <jonascj> habnabit_ The end goal was to be able to easily pass Flask's render_template() objects which would mimic an sqlite3.Row for testing purposes `return render_template('index.html', users=[{'name': 'whatever'}]`. I suppose that is enough if I go with the dictionary style access
[17:18:35] <n00b101> dale: thank you very much man
[17:19:01] <habnabit_> n00b101, i would accept as thanks if you stopped calling me guys
[17:19:14] <koopman> @Yhg1s any idea how to fix it and make C:\\Program Files\\Python38\\lib\\site-packages the default package location for pytohn.exe
[17:19:36] *** Quits: nichlas (nichlas@gateway/vpn/protonvpn/nichlas) (Quit: WeeChat 3.1)
[17:19:46] <n00b101> habnabit_: thanks
[17:19:48] <n00b101> 😄
[17:20:20] *** Joins: Siecje (~Siecje@157.52.13.86)
[17:20:32] <Yhg1s> koopman: nope, sorry. I suggest using virtualenvs.
[17:20:43] *** Joins: jamea77 (~jamea77@187.185.190.209)
[17:20:51] <Siecje> I already have a long running client (mqtt), with the same codebase how would I add a webserver?
[17:20:55] <jamea77> hi, https://bpa.st/QPNA  why post request not made?
[17:21:16] <gloomy_desktop> Is there anything similar to dataclass but that doesn't require me to instantiate an object to use it?
[17:21:36] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 250 seconds)
[17:21:44] *** Joins: ionface (~ionface@user/ionface)
[17:21:50] <dale> gloomy_desktop: How would that work?
[17:21:59] <gloomy_desktop> I basically just need to store some hierarchical static information (and would like to have type hints, so not a dict)
[17:22:06] <habnabit_> gloomy_desktop, why not just instantiate one instance of the class?
[17:22:13] <habnabit_> gloomy_desktop, it doesn't need to be something special
[17:22:24] <Yhg1s> gloomy_desktop: you can't use anything without instantiating it.
[17:22:34] <Yhg1s> (if you don't instantiate it, it *doesn't exist*.)
[17:22:34] <gloomy_desktop> habnabit_: yes if there's nothing else I'll do that, but that seems less clean
[17:22:52] <habnabit_> gloomy_desktop, it seems more 'clean' to me than pretending it's a special case ;)
[17:23:15] <dale> gloomy_desktop: Can you just make a class and slap some class attributes on it with type annotations?
[17:23:19] <jamea77> forget me, i need use get
[17:23:21] <habnabit_> gloomy_desktop, i think it's much simpler to make a class like normal and only make one instance
[17:23:45] <dale> class Config: foo: int = 42, etc.
[17:24:56] <gloomy_desktop> dale can I then just do Config.foo or do i need to do config = Config(), config.foo?
[17:25:04] <dale> gloomy_desktop: The former.
[17:25:08] <habnabit_> dale, yuck
[17:25:14] <gloomy_desktop> haven't used the OO parts of python much so far
[17:25:15] *** Quits: canarts (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:25:15] *** Quits: jazzy (~jaziz@2600:380:874b:26da:28e9:655f:12b2:c191) (Ping timeout: 272 seconds)
[17:25:16] <habnabit_> much less testable
[17:25:28] *** Quits: Meteorhead (~Meteorhea@165.225.21.61) (Quit: Client closed)
[17:27:49] <dale> gloomy_desktop: If that's what you're doing, I do kind of wonder why you want type hints?  If you're hard coding values, the type is probably obvious to all tooling, no?
[17:28:30] *** Quits: wattux (~wattux@212.51.23.106) (Ping timeout: 250 seconds)
[17:28:47] *** Joins: kmh (~kmh@p200300df5f2f6b008df4c6dd9f18a0d7.dip0.t-ipconnect.de)
[17:29:44] <gloomy_desktop> https://bpa.st/EGNA this is what the data looks like
[17:29:57] <gloomy_desktop> (thhere are many more)
[17:30:31] <pathos> Siecje: If you're using asyncio things, then you can just have a webserver running in the same event loop. Otherwise running the webserver in a separate Thread or Process is probably best.
[17:30:33] *** Quits: cthulchu_ (~Cthulchu@195.66.198.226) (Ping timeout: 252 seconds)
[17:30:40] <dale> gloomy_desktop: Hm, this sure looks like you want a Resource class that you'll make many instances of. :)
[17:30:52] *** Quits: ratelius (ratelius@gateway/vpn/protonvpn/ratelius) (Quit: WeeChat 3.2-dev)
[17:30:53] *** Joins: wyclif (~wyclif@user/wyclif)
[17:31:04] <gloomy_desktop> I want to change the inner dict to something like "Resource" so I can type the outer dict as resources: `Dict[str, Resource]`
[17:32:24] <gloomy_desktop> yes, that does sound very obvious in hindsight
[17:32:49] *** Quits: jonascj (~jonascj@185.19.132.68) (Quit: Connection closed)
[17:32:52] <gloomy_desktop> as I said, haven't used the `class` keyword much so far :D
[17:32:53] <gloomy_desktop> thanks.
[17:32:57] <dale> :)
[17:34:36] *** Joins: komencanto (~trevor@2604:3d09:6583:7100::a972)
[17:34:54] *** Quits: emacspenguin (~emacspeng@45.77.216.45) (Quit: WeeChat 3.1)
[17:34:59] *** Quits: adder (~adder@user/adder) (Remote host closed the connection)
[17:36:21] *** Joins: dme86 (~dan@user/dan86)
[17:36:30] <p-i-> Is there some way to `async for item in my_async_queue:` so it runs forever? And whenever an item appears, it gets processed?
[17:36:33] <p-i-> I can't see it documented.
[17:36:54] *** Joins: ratelius (ratelius@gateway/vpn/protonvpn/ratelius)
[17:37:07] <Yhg1s> p-i-: 'while True: item = await get_item_from_queue(); ...'
[17:37:37] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[17:38:35] *** Quits: alexbk (~alexbk@c-73-157-41-15.hsd1.wa.comcast.net) (Ping timeout: 258 seconds)
[17:41:27] *** Joins: vimart (~vimart@185.69.144.206)
[17:41:27] <DPA> p-i-: Check out generators and async generators.
[17:42:48] *** Joins: zeden (~zeden@user/zeden)
[17:43:15] *** Joins: baldr333 (~baldr333@modemcable034.69-70-69.static.videotron.ca)
[17:43:21] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[17:45:18] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[17:46:03] <graingert> Crys: is there a way to end a ragged EOF and avoid the resource warning from the unclosed wrapped socket?
[17:46:49] <graingert> p-i-: use an anyio.create_memory_object_stream()`
[17:49:18] *** Joins: zebrag (~chris@user/zebrag)
[17:51:32] *** Quits: dkmueller (~dkmueller@2a01:c22:6e63:5d00:f5b5:2c52:7fd8:66e8) (Ping timeout: 244 seconds)
[17:52:19] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:52:43] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:54:05] *** Joins: wattux (~wattux@2a02:810a:1140:4b6c::f428)
[17:54:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[18:00:37] <koopman> So it seems, installing the Python extension for Visual Studio Code wiped all my packages and gave me the endpoint issue.... not happy at all.... https://bpa.st/M55Q
[18:00:49] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 258 seconds)
[18:02:06] <grym> koopman: if your packages were removed, you'd see ModuleNotFound errors
[18:02:52] *** Joins: dme86 (~dan@user/dan86)
[18:03:31] <koopman> @grym thats how i first noticed the error trying to un auto-py-to-exe it would say its not found, yet pip install would say it was installed. I can see all my modules still under C:\Program Files\Python38\Lib\site-packages
[18:04:39] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[18:05:04] *** Quits: andrewSC (~andrewSC@95.179.141.168) (Quit: WeeChat 3.1)
[18:05:35] <kosh> C:\Users\Kooper\AppData\Roaming\Python\Python38\site-packages   that is the path for your error message
[18:06:08] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[18:06:18] *** Joins: wyclif (~wyclif@user/wyclif)
[18:08:58] *** Joins: slav0nic (slav0nic@python.su)
[18:09:42] *** Joins: alexbk (~alexbk@c-73-157-41-15.hsd1.wa.comcast.net)
[18:11:07] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[18:11:33] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:13:58] *** Joins: wovixo (~wovixo@144.92.232.54)
[18:14:09] *** Joins: Payam (~Payam@138.106.57.131)
[18:14:25] <Payam> what do you guys think about the accepted answer here? https://stackoverflow.com/questions/3329361/python-something-like-map-that-works-on-threads
[18:14:28] *** Quits: zeden (~zeden@user/zeden) (Ping timeout: 250 seconds)
[18:14:48] *** Quits: baldr333 (~baldr333@modemcable034.69-70-69.static.videotron.ca) (Quit: Client closed)
[18:16:15] *** Joins: ionface_ (~ionface@user/ionface)
[18:17:06] *** Joins: dkmueller (~dkmueller@2a01:c22:6e63:5d00:f5b5:2c52:7fd8:66e8)
[18:17:51] *** Quits: ionface (~ionface@user/ionface) (Ping timeout: 252 seconds)
[18:19:05] *** Joins: txtsd (~txtsd@user/txtsd)
[18:19:47] <dale> I'm descending a data structure and I'd like to keep objects I've seen in a set so I can guard against a recursive data structure.  Is there a version of set lying around that compares based on object identity?
[18:20:57] <deniska> Payam: multiprocessing module is generally not recommended here. Take a look at concurrent.futures. And if your task is specifically doing multiple http requests at once, look at libraries like aiohttp or httpx
[18:21:14] <deniska> Payam: (or perhaps even at scrapy if you want to crawl a website)
[18:21:25] *** Quits: ionface_ (~ionface@user/ionface) (Read error: Connection reset by peer)
[18:21:56] <dale> I guess I can just add id(obj) into a set.
[18:22:12] *** Quits: dkmueller (~dkmueller@2a01:c22:6e63:5d00:f5b5:2c52:7fd8:66e8) (Ping timeout: 272 seconds)
[18:22:57] <deniska> dale: id() may return identical values for two different objects if one of them gets garbage collected before another is created
[18:23:02] *** Quits: magla (~gelignite@55d41093.access.ecotel.net) (Read error: Connection reset by peer)
[18:23:45] *** Joins: wyclif (~wyclif@user/wyclif)
[18:24:03] <dale> deniska: That's a good point.  OK, dict of ids pointing to objects it is.
[18:25:12] *** Joins: dkmueller (~dkmueller@2a01:c22:6e63:5d00:f5b5:2c52:7fd8:66e8)
[18:25:28] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[18:25:37] *** Joins: insidesouces (~meta@user/insidesources)
[18:26:10] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 250 seconds)
[18:26:38] <Payam> deniska did you look at the accepted answer?
[18:26:46] <cvmn> what's the best way to have a while loop to read a text file line b line?  it's a named pipe that i use for ipc, and i want the server process to block on the named pipe until a new line comes in.  advice please?
[18:27:36] <deniska> Payam: I misunderstood how SO works, I've read the most voted one instead :)
[18:27:50] *** Joins: magla (~gelignite@55d41093.access.ecotel.net)
[18:28:10] *** Quits: SparkleKraken (~SparkleKr@97e407ec.skybroadband.com) (Quit: Leaving)
[18:28:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[18:28:32] *** Parts: death916 (~death916@user/death916) (Closing Window)
[18:28:35] <SnoopJ> cvmn, the assignment expression (NAME := val) introduced in 3.8 is useful for this, if you're using that version: `while (data := buf.read(Nbytes)): do_something(data)` (more examples here: https://www.python.org/dev/peps/pep-0572/#capturing-condition-values)
[18:29:32] *** Quits: azidhaka (~azidhaka@gateway.videnov.bg) (Quit: Leaving)
[18:30:25] <cvmn> SnoopJ: neat.  thanks!
[18:32:38] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[18:32:38] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-8c0a-00e4-95e5-c567.res6.spectrum.com)
[18:33:44] *** Joins: Meteorhead (~Meteorhea@165.225.21.61)
[18:34:39] <SnoopJ> cvmn, I was very skeptical of the "walrus operator" at first, but I'm coming to find I really like this usage of it, and in hindsight I wish that had been the leading argument for it, rather than "`re` has a terrible interface, let's introduce syntax to get around it"
[18:34:42] <Baumfaust> my async io app is running fine when standalone, but when i call it from flask it failes
[18:34:48] <Baumfaust> how can i debug it?
[18:35:00] *** Joins: NineBAR (~NineBAR@c-68-56-180-29.hsd1.mi.comcast.net)
[18:35:25] *** Joins: Tas-sos (~Tas-sos@78-22-216.adsl.cyta.gr)
[18:35:55] *** Joins: tg (~tg@rockylinux/infra/tg)
[18:36:08] <Payam> how do I split [ 1 1 1 2 2 2] in two [1 1 1] och [2 2 2]?
[18:38:23] *** Quits: loskutak (~loskutak@gw.mecom.cz) (Quit: WeeChat 3.1)
[18:38:33] *** Quits: arthem (~rehmat@user/arthem) (Quit: Konversation terminated!)
[18:39:06] <BtbN> Based on what criteria?
[18:39:14] <BtbN> Just first 3 elements, last 3 elements? Different elements?
[18:40:07] *** Joins: wallace_mu200 (~wallace_m@pool-173-66-6-41.washdc.fios.verizon.net)
[18:40:31] <Payam> list A is consisted of different objects. all object have a attribute called prio. so it could be like A = [a.prio , b.prio, c.prio, ....]
[18:41:10] <wallace_mu200> Hi all, is it good practice to initialize all instance variable in __init__ to be None, even tho I know what type it is going to be, forexample , I want a self.result_of_dict = dict(), and my colleague tried to make me to do a self.result_of_dict = None, and do dict() it in the corresponding method
[18:41:15] <BtbN> That didn't exactly answer the question
[18:41:27] *** Joins: wyclif (~wyclif@user/wyclif)
[18:41:29] *** Quits: wallace_mu200 (~wallace_m@pool-173-66-6-41.washdc.fios.verizon.net) (Quit: Client closed)
[18:41:29] <BtbN> I guess you want to split into two lists, based on the prio being different?
[18:43:18] <raek> Payam: do you want to construct a dictionary from priorities to lists of objects with that priority?
[18:43:18] <grym> itertools.groupby, probably
[18:44:58] <raek> Payam: how many different priority values will there be? is it important to handle any possible priority value?
[18:45:02] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
[18:45:06] *** Quits: hexnewbie (~hexnewbie@user/hexnewbie) (Ping timeout: 268 seconds)
[18:45:50] *** Joins: DeadTOm (~deadtom@2001:4b98:dc0:41:216:3eff:fe58:44d0)
[18:46:17] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[18:46:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[18:46:58] *** Joins: tbcr (~tbcr@user/tbcr)
[18:47:46] *** Joins: Quaking (~Quaking@167.89.254.27)
[18:47:57] *** Quits: Quaking (~Quaking@167.89.254.27) (Client Quit)
[18:49:27] <Payam> it could be somewhere between 0-1000
[18:49:48] <Payam> yeah
[18:49:59] <Payam> grym yeah
[18:50:26] *** Joins: hexnewbie (~hexnewbie@user/hexnewbie)
[18:50:26] *** Quits: vimart (~vimart@185.69.144.206) (Quit: WeeChat 2.8)
[18:51:32] <habnabit_> SnoopJ, what's any less terrible of an interface that requires `while (data := buf.read(Nbytes)):` over `for data in buf.read_by(nbytes):`
[18:52:37] *** Quits: wovixo (~wovixo@144.92.232.54) (Quit: Leaving)
[18:53:14] <Payam> grym noo could find anything on groupby for lists
[18:54:00] *** Joins: qlixed (~qlixed@2800:810:471:2f8::1b7)
[18:54:56] <bjs> Payam: itertools.groupby is a function in the "itertools" module, it should be able to do what you want.
[18:54:58] *** blizzard is now known as derelict
[18:55:36] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[18:55:56] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[18:56:07] *** Quits: derelict (~winter@2603-6011-f901-9e5b-78b5-8b2f-cdb2-4171.res6.spectrum.com) (Quit: WeeChat 3.1)
[18:56:25] *** Joins: wyclif (~wyclif@user/wyclif)
[18:58:35] *** Joins: derelict (~winter@2603-6011-f901-9e5b-78b5-8b2f-cdb2-4171.res6.spectrum.com)
[18:58:55] <Payam> Thanks
[18:58:58] *** Joins: nathanjell (~Nathan@d162-157-36-152.abhsia.telus.net)
[18:59:03] <bjs> Payam: https://bpa.st/GK6A
[19:00:33] <Payam> bjs thank you very much. that is beautiful
[19:01:19] *** Joins: Julian (~tos9@151.66.53.132)
[19:02:03] <grym> bjs: isn't there normally a sorted() in there?
[19:02:11] *** Joins: a6a45081-2b83 (~aditya@223.178.225.24)
[19:02:21] <bjs> You can put a sorted in if you want,  I made sure the example had a repeated priority to show what groupby would do
[19:02:38] <grym> gotcha
[19:02:48] <grym> yeah it's a fun surprise otherwise
[19:03:52] *** Joins: cthulchu_ (~Cthulchu@195.66.198.226)
[19:03:55] <Payam> Ar eyou guys europeans? European championship is going on
[19:03:56] <Payam> in soccer
[19:04:27] <mefistofeles> Payam: thanks, feel free to talk about that in #python-offtopic
[19:06:30] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[19:07:14] <flower_> subprocess.Popen(['ps -U $USER | grep nsmd | wc -l'],  shell=True)
[19:07:25] *** Quits: cthulchu_ (~Cthulchu@195.66.198.226) (Read error: Connection reset by peer)
[19:07:33] <flower_> seems to work, but how do I assign the output of the command to a variable?
[19:08:17] <bjs> flower_: Popen (and the other subprocess.* functions) take a `stdout` argument. Usually you want to `PIPE` the output.
[19:08:20] <habnabit_> flower_, use psutil.. much easier to do that kind of calculation
[19:08:24] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:08:27] <bjs> flower_: if you just want to "run" the command and collect the output,  use subprocess.run
[19:08:48] <habnabit_> flower_, piping to grep/wc is a hack
[19:08:50] *** Joins: cthulchu (~Cthulchu@195.66.198.226)
[19:08:51] *** Joins: lulzsadpanda (~lulzsadpa@c-73-125-21-37.hsd1.fl.comcast.net)
[19:08:53] <bjs> flower_: starting a shell to run `ps` then piping grep and then piping wc makes you wonder what the point of using Python was :)
[19:08:59] <grym> or .check_output
[19:09:03] <grym> if you're confident :)
[19:10:23] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:11:41] <flower_> why learn to do it in python if you 'know' how it works in bash
[19:12:25] <flower_> that means quite some extra effort
[19:12:40] <habnabit_> i would say 'works' is a coincidence given the slapdash output formatting
[19:13:20] <habnabit_> maybe with powershell's structured input/output but not grep/wc
[19:14:02] *** Quits: Julian (~tos9@151.66.53.132) (Ping timeout: 258 seconds)
[19:14:31] *** Joins: varaindemian76 (~varaindem@86.124.78.162)
[19:15:25] <varaindemian76> Any idea how I can make https://github.com/di/screenshare faster? It's an old project. Basically I wan to send my screen via browser on some other screens
[19:15:28] <SnoopJ> habnabit_, the `while` spelling lets you do what you want when the implementer didn't bother to give you a nice iterable thing (but yes, I would much rather use *that*)
[19:15:51] <SnoopJ> I'm not quite to "walrus good" yet, but this use has definitely softened me on it some
[19:16:11] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Quit: mogad0n)
[19:16:44] <habnabit_> SnoopJ, meh. i think there's just multiple bad APIs which are getting extra enshrined now instead of being ported to a better one
[19:17:08] <habnabit_> SnoopJ, trio and requests and httpx let you stream bytes in chunks as an iterable
[19:17:46] <SnoopJ> varaindemian76, a good first step is to investigate what portion of it is slow, usually with the help of a good profiler
[19:18:05] <habnabit_> SnoopJ, why not add a method to file objects for it? it's equally backward-incompatible but it's something that six/future can provide
[19:18:12] *** Joins: Julian (~tos9@151.66.53.132)
[19:18:31] <SnoopJ> habnabit_, don't mistake my softening on it for "I think this brand new syntax was worth its complexity"
[19:18:45] *** Joins: jcarl43 (~jcarl@node-1w7jr9qxb23qwk5inqhfljuks.ipv6.telus.net)
[19:18:52] *** Joins: ionface (~ionface@user/ionface)
[19:18:56] <SnoopJ> especially the complexity it introduces for the reader :/
[19:19:29] <varaindemian76> SnoopJ: I mean the windows are moving super slow
[19:19:41] <varaindemian76> do you guys know alternatives for this kind of thing?
[19:19:57] <SnoopJ> varaindemian76, I believe you, but you asked "how can I make X faster" and the very first step there is "understand *why* it's slow"
[19:20:25] <Payam> bjs in the example you provided : https://bpa.st/GK6A you see that obj(6...) with the same prio is not in the same list as obj1 and 2
[19:20:35] *** Joins: Fiji (~Fiji@user/fiji)
[19:21:04] <habnabit_> Payam, you need to sort by the key before you can groupby
[19:21:40] <bjs> Payam: correct,  if you want all the objects with the same priority to appear together you need to sort the list first, so that all the objects with the same priority are next to each other
[19:21:57] <bjs> Payam: sorted(objs, key=lambda o: o.prio)  # somewhere before the groupby
[19:21:59] <varaindemian76> SnoopJ: true
[19:22:24] <flower_> Habbie, so I guess now you give me the command with psutil that does the same as my bash command.
[19:22:25] <grym> Payam: and don't forget to reassign the name; sorted() makes a new list
[19:22:25] <varaindemian76> SnoopJ: now do you know alternatives for that simple thing?
[19:22:43] <habnabit_> flower_, did you mean me?
[19:22:44] *** Quits: a6a45081-2b83 (~aditya@223.178.225.24) (Quit: Konversation terminated!)
[19:22:50] <flower_> habnabit_, , so I guess now you give me the command with psutil that does the same as my bash command.
[19:22:57] <flower_> Habbie, sorry
[19:23:00] *** Quits: Quietus (quasselcor@larch.ratcliffefamily.uk) (Remote host closed the connection)
[19:23:01] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Read error: Connection reset by peer)
[19:23:03] *** Quits: codemouse92__ (~codemouse@user/codemouse92) (Read error: Connection reset by peer)
[19:23:03] *** Quits: archwizard (~archwizar@2001:470:69fc:105::929) (Read error: Connection reset by peer)
[19:23:03] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Read error: Connection reset by peer)
[19:23:03] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Read error: Connection reset by peer)
[19:23:03] *** Quits: ubh (~ubh@2001:470:69fc:105::852) (Read error: Connection reset by peer)
[19:23:03] *** Quits: novasharper (~novasharp@2001:470:69fc:105::b4a) (Read error: Connection reset by peer)
[19:23:04] *** Quits: dontwannatell[m] (~dontwanna@2001:470:69fc:105::c27) (Read error: Connection reset by peer)
[19:23:04] *** Quits: bgardner (~bgardner@2001:470:69fc:105::8a8) (Read error: Connection reset by peer)
[19:23:04] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (Read error: Connection reset by peer)
[19:23:04] *** Quits: ali1234[m] (~ali1234@user/ali1234) (Read error: Connection reset by peer)
[19:23:04] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (Read error: Connection reset by peer)
[19:23:04] *** Quits: sm[m] (~sm@plaintextaccounting/sm) (Read error: Connection reset by peer)
[19:23:07] <SnoopJ> varaindemian76, for screen-sharing? VNC is usually what I reach for (I like the UltraVNC implementation for no particular reason)
[19:23:23] <Habbie> flower_, np
[19:23:25] *** Quits: Baumfaust (~Bumfaust@2a02:8071:2d6:6b00:5c3d:e556:acdb:4118) (Read error: Connection reset by peer)
[19:23:41] <habnabit_> flower_, you're counting the number of nsmd processes owned by some user?
[19:23:52] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[19:24:09] *** Joins: Quietus (quasselcor@larch.ratcliffefamily.uk)
[19:24:12] <flower_> habnabit_, yes. If it's more then 1, I want to abort something
[19:24:13] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 252 seconds)
[19:24:13] *** Joins: ali1234[m] (~ali1234@user/ali1234)
[19:24:18] * flower_ newbie
[19:24:27] *** Joins: ubh (~ubh@2001:470:69fc:105::852)
[19:24:27] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[19:24:27] *** Joins: bgardner (~bgardner@2001:470:69fc:105::8a8)
[19:24:27] *** Joins: codemouse92__ (~codemouse@user/codemouse92)
[19:24:27] *** Joins: archwizard (~archwizar@2001:470:69fc:105::929)
[19:24:27] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[19:24:41] *** Joins: dontwannatell[m] (~dontwanna@2001:470:69fc:105::c27)
[19:25:02] *** Joins: novasharper (~novasharp@2001:470:69fc:105::b4a)
[19:25:02] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[19:25:02] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[19:25:02] *** Joins: sm[m] (~sm@plaintextaccounting/sm)
[19:25:49] *** Quits: evilissimo (~vfeenstr@nat-pool-brq-t.redhat.com) (Changing host)
[19:25:49] *** Joins: evilissimo (~vfeenstr@redhat/evilissimo)
[19:26:05] <varaindemian76> SnoopJ: I just want to project the my screen on other screens. I have a few displays in the office and when I see the opportunity I'd like to quickly share my screen via browser on those screens
[19:26:14] *** Quits: blyat-73 (~hjgkjhgkj@79.101.60.163) (Quit: Leaving)
[19:27:00] <SnoopJ> varaindemian76, I would bet there are good VNC clients for the browser.
[19:27:22] <varaindemian76> and if I wann build one in the browser?
[19:27:23] <ChrisWarrick> varaindemian76: what software is running those displays?
[19:27:27] <varaindemian76> in python*
[19:27:43] <ChrisWarrick> varaindemian76: you probably don’t want to build one yourself, and those things typically aren’t built in python
[19:28:00] <SnoopJ> varaindemian76, sorry, I'm getting confused here: do you want to do the task you just described (sharing a screen), or are you focused on *building* a program that does this, from scratch?
[19:28:08] *** Quits: lulzsadpanda (~lulzsadpa@c-73-125-21-37.hsd1.fl.comcast.net) (Ping timeout: 250 seconds)
[19:28:22] <graingert> Crys: E           httpx.ConnectError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: IP address mismatch, certificate is not valid for '127.0.0.1'. (_ssl.c:983)
[19:28:40] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[19:28:41] <flower_> habnabit_, this might help me https://thispointer.com/python-check-if-a-process-is-running-by-name-and-find-its-process-id-pid/
[19:28:51] <varaindemian76> SnoopJ: focused on doing this myself or improving the other project or something similar
[19:29:04] <habnabit_> flower_, >>> sum(1 for p in psutil.process_iter() if p.username() == 'habnabit') => 310
[19:29:37] <habnabit_> flower_, psutil is prety great
[19:29:37] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a1-135.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:29:45] <Crys> graingert: does the cert have a SAN of type ipaddress for 127.0.0.1?
[19:30:18] <flower_> habnabit_, thx for the pointer to psutil
[19:30:21] <graingert> Crys: trustme.CA().issue_cert("localhost", "127.0.0.1", "::1")
[19:30:32] <SnoopJ> varaindemian76, well, if you want to improve that project, begin by understanding what makes it slow. My guess is that it sends the entire screen instead of just the parts that need to be updated, but that is a *guess*. If you want to make something from scratch, there are a lot of options, but VNC is a pretty good protocol for this task.
[19:30:41] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Client Quit)
[19:30:43] <Crys> graingert: that's probably wrong
[19:30:55] <Crys> graingert: you must have a SAN of type ipaddress, not dnsname
[19:31:05] <Crys> graingert: subject alt names have different subtypes.
[19:31:14] *** Joins: abraxas (~abraxas@2600:8805:c880:3:c7fe:fc8e:f2cc:8056)
[19:31:23] <varaindemian76> ChrisWarrick: those screens only have access to browser
[19:32:03] <Crys> or does trustme do some magic?
[19:32:52] <SnoopJ> varaindemian76, Python in the browser is...not a great story right now. Brython is about as good as it gets, and that's likely to be a bottleneck for speed (because it's a Python runtime written in JS)
[19:33:14] <graingert> Crys: https://github.com/python-trio/trustme/blob/adf0cccd5a6a24198c368e859e8edec989fac190/trustme/__init__.py#L121
[19:33:17] <graingert> Crys: it's supposed to
[19:34:30] <Crys> X509v3 Subject Alternative Name: critical
[19:34:31] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[19:34:35] <Crys>     DNS:localhost, IP Address:127.0.0.1, IP Address:0:0:0:0:0:0:0:1
[19:34:44] *** Quits: leduyquang753 (~leduyquan@27.73.61.122) (Quit: leaving)
[19:34:44] <Crys> looks ok
[19:35:33] <graingert> Crys: ah no it's a different problem
[19:35:57] <graingert> uvicorn didn't even run the fixture to generate the certificate :(
[19:36:54] *** Joins: FluffyMask (~FluffyMas@user/fluffymask)
[19:37:02] <flower_> habnabit_, and if you want to find a file. On Linux you can use find. Actual question is, when do you use bash and stuff like find or other tools outside python, in python?
[19:37:27] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:a95a:ecd2:e57a:3130) (Ping timeout: 244 seconds)
[19:37:28] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[19:37:29] <graingert> Crys: they're using the CA certificate as the server certificate
[19:37:29] <graingert>             ssl_certfile=tls_ca_certificate_pem_path,
[19:37:30] <Crys> flower_: you rarely rely on shell utils with Python.
[19:37:41] <habnabit_> flower_, honestly, i can't remember the last time i needed to find a file in python
[19:38:06] <habnabit_> flower_, it's something i've needed to do but not programmatically
[19:38:33] <flower_> Crys, any further reading resources for that?
[19:38:48] <Crys> flower_: Well written Python code is often platform independent. It can work on Linux, Windows, macOS, BSD, etc.
[19:39:10] *** Joins: zeden (~zeden@user/zeden)
[19:39:20] <Crys> flower_: as soon as you shell out to a shell util, you depend on a specific flavor of the shell util and won't be able to run your script on platforms that don't have shell utils.
[19:39:24] *** Quits: jamea77 (~jamea77@187.185.190.209) (Ping timeout: 250 seconds)
[19:39:37] <flower_> Crys, It's for Linux only
[19:40:16] *** Joins: kickingvegas (~cchoi@c-24-130-175-68.hsd1.ca.comcast.net)
[19:41:22] *** Joins: dme86 (~dan@user/dan86)
[19:42:21] *** Joins: lulzsadpanda (~lulzsadpa@c-73-125-21-37.hsd1.fl.comcast.net)
[19:45:10] *** Joins: PixelRobot (~PixelRobo@139.47.72.247)
[19:46:58] <Crys> flower_: you can use Python like bash and shell out to subprocesses. But that's usually slower and the code is harder to read and debug.
[19:47:29] <flower_> Crys, ok, will see how far I get with Python
[19:47:38] <SnoopJ> Crys, slower than what?
[19:48:26] <Crys> SnoopJ: spawning processes and communication via pipes with their stdin, stdout, and stderr
[19:48:50] *** Joins: jphaynes66 (~TerraFirm@174-16-120-34.hlrn.qwest.net)
[19:49:12] *** Quits: varaindemian76 (~varaindem@86.124.78.162) (Quit: Client closed)
[19:49:21] <SnoopJ> Crys, spawning processes is slower than spawning processes?
[19:50:47] <Crys> SnoopJ: no, spawning processes is typically slower than calling Python functions
[19:51:04] <Crys> SnoopJ: like subprocess.check_output(["ls"]) vs. os.listdir().
[19:51:41] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Quit: mogad0n)
[19:51:47] <SnoopJ> Crys, right, because the latter doesn't spawn a process, but my question was "slower than what" and the answer appeared to be "spwaning processes and ..."
[19:52:17] *** Quits: Geronimo (~Geronimo@user/geronimo) (Quit: I am away)
[19:52:36] <Crys> SnoopJ: I misunderstood your question.
[19:52:51] *** Quits: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[19:53:03] *** Quits: dvx (~dvx@185.63.97.64) (Quit: dvx)
[19:53:13] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[19:53:27] *** Joins: Geronimo (~Geronimo@user/geronimo)
[19:53:43] *** Joins: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr)
[19:55:10] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[19:55:40] *** Quits: Geronimo (~Geronimo@user/geronimo) (Client Quit)
[19:55:55] *** Quits: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[19:56:20] *** Joins: Geronimo (~Geronimo@user/geronimo)
[19:56:55] <graingert> Crys: wow those deprecation warnings are LIFE SAVING
[19:57:03] <graingert> and slightly annoying
[19:57:09] *** Quits: Vision (~Vision@047-034-097-066.res.spectrum.com) (Ping timeout: 245 seconds)
[19:57:20] <graingert> the uvicorn tests were COMPLETELY WRONG
[19:57:24] <Crys> graingert: it's less annoying than keeping old cruft alive :)
[19:57:30] <Crys> graingert: ouch
[19:57:50] <Crys> I guess they never enabled cert validation
[19:58:06] <Crys> because that is now enabled automatically for PROTOCOL_TLS_CLIENT
[19:58:52] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Client Quit)
[19:59:03] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[19:59:08] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[20:00:29] *** Quits: PixelRobot (~PixelRobo@139.47.72.247) (Remote host closed the connection)
[20:01:10] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 245 seconds)
[20:01:41] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[20:01:59] *** Joins: cheater (~Username@user/cheater)
[20:03:19] *** Quits: Julian (~tos9@151.66.53.132) (Ping timeout: 264 seconds)
[20:04:37] *** Joins: anandprabhu (~anandprab@45.134.22.18)
[20:07:10] <enkrypt> lately when I do `pip list --outdated` I get often the following error: AttributeError: module 'html5lib.treebuilders.etree' has no attribute 'getETreeModule'. this is python 3.9 on debian unstable.
[20:07:31] <enkrypt> but not always :/ any ideas what this might be? google doesn't turn up much.
[20:08:13] <ChrisWarrick> enkrypt: did you manually update html5lib with pip?
[20:08:23] *** Joins: rcm888 (~u1@93.190.204.253)
[20:08:30] *** Joins: Vision (~Vision@047-034-097-066.res.spectrum.com)
[20:08:35] <rcm888> hi! gimme fresh atom python setup guide pls!
[20:08:35] <enkrypt> ChrisWarrick: not that I'm aware, no
[20:08:39] *** Joins: timkofu (~timkofu@user/timkofu)
[20:08:40] <webknjaz> @enkrypt: sounds like you need to tell this to Debian — https://gist.github.com/tiran/2dec9e03c6f901814f6d1e8dad09528e
[20:09:13] <ChrisWarrick> enkrypt: yeah, debian on python sucks
[20:09:26] <ChrisWarrick> enkrypt: python on debian*
[20:09:37] <Crys> The Python Steering Council is working with Debian upstream to improve the situation.
[20:09:54] <webknjaz> They tend to repackage Python-related software in a way that it breaks when you follow typical Python practices.
[20:09:54] <Crys> (my gist got stuff moving)
[20:10:02] <enkrypt> hmmm weird I've been using debian since 20+ years, and doing python development for more than half that, without big issues actually
[20:10:10] <grym> Crys: oh, you're tiran?  nice, thanks!
[20:10:21] <Crys> grym: Christian - Crys Tiran :)
[20:10:29] <grym> gotcha
[20:10:48] <enkrypt> so what should I do here? remove my virtualenv, and start over again?
[20:10:49] <webknjaz> @Crys: that's great but their reputation isn't going to improve overnight...
[20:10:52] *** Joins: dtux (~dtux@107-131-127-0.lightspeed.sntcca.sbcglobal.net)
[20:10:59] <ChrisWarrick> enkrypt: probably
[20:11:03] *** Parts: kieto (~kieto@user/kieto) (WeeChat 2.3)
[20:11:42] <supakeen> Debian also isn't the *worst* out there but there are some annoyances (mostly: venv, really).
[20:11:52] <Crys> webknjaz: I'm more concerned that stuff started to move really late and not in scope for next Debian stable.
[20:11:57] *** Joins: ffledgling (~textual@2620:10d:c091:480::1:d6b1)
[20:12:04] <supakeen> For the `pip` stuff I don't care that much as it always goes into a venv :)
[20:12:22] <avu> Crys: things moving now surely won't make it into bullseye, yeah
[20:12:25] <enkrypt> in my case it's pip within a virtualenv that goes wrong :/
[20:12:27] <graingert> Crys: https://github.com/encode/uvicorn/pull/1070/commits/d03333d71423e5b0cafb4b56396dd88a9d85e5eb
[20:12:29] <Crys> webknjaz: Next stable will be released in a couple of months
[20:12:41] <avu> Crys: freeze is already in effect
[20:12:46] <webknjaz> @Crys: exactly, with their support cycle it's going to take years until people start changing the perception
[20:12:54] <Crys> avu: I think the python-full meta-package may make it into next stable.
[20:13:13] <avu> Crys: cool!
[20:13:20] <graingert> Crys: here's where they were using the CA cert https://github.com/encode/uvicorn/pull/1070/commits/d03333d71423e5b0cafb4b56396dd88a9d85e5eb#diff-e52e4ddd58b7ef887ab03c04116e676f6280b824ab7469d5d3080e5cba4f2128L36
[20:13:23] <SnoopJ> that would be great, actually
[20:13:24] <graingert> as a server cert
[20:13:28] *** Quits: squirrel (~sq@host-2-99-74-45.as13285.net) (Excess Flood)
[20:13:35] <Crys> It's not the solution I was hoping for, but it's a first step.
[20:14:05] <SnoopJ> yea, I would so much rather prefer `python` to be...Python...but I wasn't expecting anything until two releases forward the last time I looked at debian-python
[20:14:26] <Crys> graingert: uh :)
[20:15:09] <webknjaz> @enkrypt: was your virtualenv installed from Deb repos? Because if you use a patched venv, it'll probably get you a patched pip in the venv. So you may want to upgrade pip inside of your venv first thing after creating it
[20:15:11] <Crys> I hope that Canonical will move a bit faster and address the concerns in next Ubuntu LTS. Most CIs are using Ubuntu instead of Debian.
[20:15:22] *** Quits: alexbk (~alexbk@c-73-157-41-15.hsd1.wa.comcast.net) (Ping timeout: 258 seconds)
[20:15:33] <avu> at least bullseye already has the `python-is-python3` package ^^
[20:15:39] *** Joins: mike18 (~geri@71-220-52-187.mpls.qwest.net)
[20:16:16] <Crys> webknjaz / enkrypt: virtualenv is patched and used to be de-vendored. pip includes copies of its dependencies. Debian de-vendored the copies and somehow the de-vendored urllib3 got into your virtual envs.
[20:16:20] *** Joins: Julian (~tos9@151.66.53.132)
[20:17:02] <SnoopJ> I hemmed and hawed a little about adding onto the gist that dist-packages being shared between installed versions is awful, but decided against it, it was already pretty busy there.
[20:17:42] <mike18> hi im checking some python code: datetime.now(tz=date_end.tzinfo) ... date_end.tzinfo is a tzinfo=FixedOffset(0) - does that make sense?
[20:17:46] <SnoopJ> awful philosophically, anyway, in practice it's no biggie :)
[20:18:18] *** Quits: lulzsadpanda (~lulzsadpa@c-73-125-21-37.hsd1.fl.comcast.net) (Ping timeout: 252 seconds)
[20:19:46] <Crys> SnoopJ: https://github.com/python/steering-council/blob/main/updates/2021-01-steering-council-update.md#january-18
[20:20:19] <Crys> SnoopJ: the SC discussed the matter on at least six occasions
[20:20:35] <SnoopJ> "the matter" being 'the Debian situation' writ large, I assume
[20:20:56] <enkrypt> Crys / ChrisWarrick / webknjaz: actually, I was confused, it is triggered when I use `pip list --local --outdated` it goes like this: https://dpaste.org/xZ1g
[20:21:32] <SnoopJ> Crys, it seems like there's a pretty good amount of traction on the Debian side of things, so I'm cautiously optimistic for the future, there
[20:22:01] <Crys> enkrypt: Don't use pip outside a virtual env. You'll get confusing on Linux distros or can easily mess your installation.
[20:22:51] *** Joins: wovixo (~wovixo@128.104.205.49)
[20:23:16] <enkrypt> Crys: I only use it to install a handful of utilities that I need cross-projects. I only do that as a regular user, not root.
[20:23:38] *** Joins: alexbk (~alexbk@c-73-157-41-15.hsd1.wa.comcast.net)
[20:24:06] <Crys> SnoopJ: Yeah, to a mix degree. My OSS work was compared to religious war and genocide :)
[20:24:08] *** Joins: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr)
[20:24:15] <SnoopJ> sigh
[20:24:23] <flower_> pff not easy to go from bash to python and use subprocess
[20:24:31] <flower_> find folder -maxdepth 2 -type f -name *.lock
[20:24:34] <flower_> one line
[20:24:40] *** Quits: Quietus (quasselcor@larch.ratcliffefamily.uk) (Quit: No Ping reply in 180 seconds.)
[20:24:47] <flower_> in python you need a whole block code for it
[20:24:54] <mike18> hi im checking some python code: datetime.now(tz=date_end.tzinfo) ... date_end.tzinfo is a tzinfo=FixedOffset(0) - does that make sense?
[20:25:11] <flower_> and then subprocess always seems to return something, so how do I check if it has nothing found?
[20:25:12] <flower_> arghhh
[20:25:15] <Crys> flower_: that's correct. Python is a general purpose language and not a DSL for finding files
[20:25:19] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[20:25:49] *** Joins: Quietus (quasselcor@larch.ratcliffefamily.uk)
[20:25:59] <SnoopJ> Crys, the darkest spot in my last review of it (a few months ago now) was a message on debian-python that seemed to suggest that pip is bad and nobody should use it ever. Upshot: nobody explicitly agreed with that individual, several disagreed.
[20:26:01] <flower_> and if you have a output, it includes all kind of extra print signs, like \n?
[20:26:21] <enkrypt> uh btw should I be using venv instead of virtualenv?
[20:26:23] <flower_> even if I just want to get a number, without \n back
[20:26:30] <flower_> pff
[20:26:35] <grym> flower_: reading the subprocess docs is probably a good start
[20:26:57] <SnoopJ> Crys, I'm glad to be reminded that the SC has taken an active role with it. I'd forgotten that and that leadership is a very fine feather in the council's cap!
[20:26:59] <Crys> enkrypt: they almost the same stuff.
[20:27:02] <ChrisWarrick> enkrypt: venv
[20:27:17] <SnoopJ> the future of the community's new governance model looks very bright :D
[20:27:18] <Crys> enkrypt: venv is a stdlib module, virtualenv is a 3rd party package that has more features.
[20:27:49] *** Joins: markcerv (~markcerv3@52-119-125-204.PUBLIC.monkeybrains.net)
[20:28:01] <webknjaz> @enkrypt: /usr/share? Ouch! Either PYTHONPATH leaks or you don't use pip installed in the virtual
[20:28:02] <Crys> SnoopJ: uh, there seems to be some disconnect between how Python community does stuff and how Linux distros do stuff.
[20:28:40] <SnoopJ> a biiit
[20:28:45] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Ping timeout: 252 seconds)
[20:29:00] <webknjaz> @enkrypt: try using `your_venv_dir/bin/pip`
[20:29:29] <SnoopJ> I was already pretty used to Debian having extremely strong opinions about pretty much everything when I got a deeper understanding of the Python situation
[20:30:03] <ChrisWarrick> enkrypt: and to add to what Crys said, you don’t need the extra features in virtualenv
[20:30:15] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[20:30:44] <Crys> SnoopJ: One of the reasons I moved away from Debian to first Ubuntu and then later to Fedora.
[20:30:56] <enkrypt> ChrisWarrick: ok I'll stop using pip --local and switch from virtualenv to venv. that should do the trick. is there any syntactical sugar to recommend on top of venv?
[20:31:06] <mike18> hi im checking some python code: datetime.now(tz=date_end.tzinfo) ... date_end.tzinfo is a tzinfo=FixedOffset(0) - does that make sense?
[20:31:06] <grym> enkrypt: for cli utils, pipx is rad
[20:31:09] <ChrisWarrick> enkrypt: syntactical sugar?
[20:31:14] <SnoopJ> although some of that is still a little murky to me; AIUI python3-pip exists because some of the vendored packages go (or once went) against the DFSG, but it was hard to work out anything more than that
[20:31:16] <grym> enkrypt: https://pypa.github.io/pipx/
[20:31:42] <Crys> SnoopJ: it's so nice to have even old Python versions shipped in your base distro. I have virtual envs with native extensions > 4 years old that still work on Fedora.
[20:31:44] <enkrypt> ChrisWarrick: I'm used to virtualenvwrapper. it offers some shell aliases I guess, like "mkvirtualenv" and "workon" etc
[20:31:50] <grym> enkrypt: it is "nothing more" than `somepython -m venv somevenv; somevenv/bin/pip install foo; ln -s somevenv/bin/foo ~/.local/bin`, but it's real slick
[20:32:04] <grym> enkrypt: but i think i answered the wrong question: pipx is not for dev work
[20:32:12] <ChrisWarrick> enkrypt: i replaced workon in virtualenvwrapper with a bash one-liner function
[20:33:07] <enkrypt> yeah I guess I'll just add some tweaks to my .bashrc
[20:33:19] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Remote host closed the connection)
[20:33:24] <SnoopJ> Crys, it was I think somewhere in the gist or the ensuing discussion that someone pointed out that the fallout ends up in Python's lap when a distro does something idiosyncratic that frustrates users
[20:34:11] <SnoopJ> I have seen a pretty good amount of that at work (unfortunately from a colleague who was concluding that Python is rubbish because of the frustrating Ubuntu experience)
[20:34:43] <webknjaz> @enkrypt: I like managing my Pythons with pyenv, it also has a virtualenv plugin so I can just cd into a dir and it'll activate the right venv/python
[20:34:54] <Crys> SnoopJ: Yeah, although another IceWeasle situation would be more problematic for Debian and Ubuntu than for Python community.
[20:35:45] <SnoopJ> That's what got me used to the strong opinions of the Debian (& co.) ecosystem
[20:36:10] <ChrisWarrick> enkrypt: function workon { source "$WORKON_HOME/$1/bin/activate" }
[20:36:10] <Crys> SnoopJ: just image what would happen if Debian would no longer be allowed to use the name "Python" in any command or package.
[20:36:11] *** Joins: squirrel (~sq@host-2-99-74-45.as13285.net)
[20:36:26] * SnoopJ gazes into the abyss
[20:36:30] <ChrisWarrick> we’d have one less crappy distro on the market
[20:36:57] <ammar2> apt-get install snake-3
[20:37:10] <SnoopJ> I am sympathetic to the rationale, mind. And what represents a canonical (heh) install is I guess kind of murky?
[20:38:34] <Crys> I'd love to see more involvement from Canonical. They used to employ lots of core devs.
[20:38:44] <SnoopJ> python3-full is a good way to ease the pain while the bigger fix is in the works, so...good news!
[20:39:32] *** Joins: timkofu_ (~timkofu@user/timkofu)
[20:39:44] <Crys> Last time I checked they had one core dev left and they are not a PSF sponsor.
[20:40:19] <SnoopJ> :'(
[20:41:05] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[20:41:31] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[20:41:57] *** Quits: timkofu (~timkofu@user/timkofu) (Remote host closed the connection)
[20:42:02] <Crys> MSFT, Google, and Bloomberg are sponsoring a full person each.
[20:43:06] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[20:43:20] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[20:43:45] *** Quits: sodimel (~co@29.172.125.78.rev.sfr.net) (Quit: Konversation terminated!)
[20:43:53] *** Joins: bikeshedder (~bikeshedd@2001:a62:15e9:d601:add8:a263:5c54:1acc)
[20:47:34] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 245 seconds)
[20:48:59] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[20:49:32] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[20:50:44] *** Joins: Thanatos (~Thanatos@102.89.1.26)
[20:50:57] <Thanatos> Hello everyone
[20:52:47] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:53:24] *** Quits: ffledgling (~textual@2620:10d:c091:480::1:d6b1) (Ping timeout: 245 seconds)
[20:53:56] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 250 seconds)
[20:57:32] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 258 seconds)
[20:58:23] *** Joins: razius (~razius@5-15-16-192.residential.rdsnet.ro)
[20:58:41] *** Quits: razius (~razius@5-15-16-192.residential.rdsnet.ro) (Client Quit)
[20:58:50] *** Joins: razius (~razius@5-15-16-192.residential.rdsnet.ro)
[21:00:34] *** Quits: timkofu_ (~timkofu@user/timkofu) (Quit: leaving)
[21:00:36] <graingert> Crys: can we get ctor kwargs on SSLContext plz: https://github.com/encode/httpx/pull/1671#discussion_r647603848
[21:00:49] <masterkorp> Hello fellow pythonits
[21:00:55] <graingert> Typoing the minimum_version fails silently
[21:01:39] *** Quits: reset (~reset@user/reset) (Quit: reset)
[21:01:52] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[21:01:53] <odoood> Snake gang
[21:01:56] <masterkorp> These 2 blocks do not produce the same  https://bpa.st/WUIQ
[21:02:11] <masterkorp> I though they were the same
[21:02:23] <grym> masterkorp: perhaps you meant .extend ?
[21:03:00] *** Joins: viktorivan (~ivan@187.223.103.108)
[21:04:47] *** Quits: rwbrambler (~Thunderbi@65.183.138.202) (Quit: rwbrambler)
[21:04:53] <grym> masterkorp: https://bpa.st/I4SA
[21:05:38] <rcm888> which ide is for python lightweight and free?
[21:05:52] *** Quits: n00b101 (uid448161@id-448161.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[21:05:53] <ammar2> vscode is a popular choice these days
[21:06:01] <grym> rcm888: vscode, spyder, thonny, ... pycharm's a bit heavy
[21:06:17] *** Joins: Dolor_Avis (~Dolor_Avi@user-5-173-12-31.play-internet.pl)
[21:06:25] <SnoopJ> JupyterLab is relatively "lightweight" in the sense that the UI is just your browser.
[21:07:28] <masterkorp> grym makes total sense, thank you
[21:08:09] <puadxtub> vim/neovim is fine
[21:08:10] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[21:08:25] *** Joins: xkuru (~xkuru@user/xkuru)
[21:09:25] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 258 seconds)
[21:09:27] *** Quits: Tas-sos (~Tas-sos@78-22-216.adsl.cyta.gr) (Ping timeout: 252 seconds)
[21:09:27] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 252 seconds)
[21:09:47] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[21:09:48] <grym> masterkorp: cheers
[21:10:12] *** Joins: Betal (~Beta@user/betal)
[21:10:54] *** Joins: Tier (~tier@37.214.79.66)
[21:11:34] *** Quits: WWelna (~WWelna@user/wwelna) (*.net *.split)
[21:11:34] *** Quits: jootoi (~jootoi@130.61.158.197) (*.net *.split)
[21:11:34] *** Quits: giesen (ggiesen@ego.giesen.me) (*.net *.split)
[21:11:34] *** Quits: hirish (~hirish@ip85.ip-137-74-20.eu) (*.net *.split)
[21:11:34] *** Quits: or4n (~or4n@gerbera.qkka.org) (*.net *.split)
[21:11:34] *** Quits: JTL (~irc@user/jtl) (*.net *.split)
[21:11:34] *** Quits: nurupo (~nurupo.ga@user/nurupo) (*.net *.split)
[21:11:34] *** Quits: njt (~njt@zaph.org) (*.net *.split)
[21:11:34] *** Quits: circuitbone (sid355934@user/circuitbone) (*.net *.split)
[21:11:34] *** Quits: ErgoX (sid219675@tinside.irccloud.com) (*.net *.split)
[21:11:34] *** Quits: maxking (~maxking@54.11.83.34.bc.googleusercontent.com) (*.net *.split)
[21:11:34] *** Quits: gh0s1 (~gh0s1@user/gh0s1) (*.net *.split)
[21:11:34] *** Quits: simon816 (~simon816@ec2-35-178-246-72.eu-west-2.compute.amazonaws.com) (*.net *.split)
[21:11:34] *** Quits: WanderingGlitch (~Wandering@aha/hacker/wanderingglitch) (*.net *.split)
[21:11:34] *** Quits: fossy (~fosslinux@vps-951ce37a.vps.ovh.ca) (*.net *.split)
[21:11:34] *** Quits: FunkyBob (~curtis@vhost3.tinbrain.net) (*.net *.split)
[21:11:34] *** Quits: Stx (~stx@libera/staff/stx) (*.net *.split)
[21:11:34] *** Quits: Yhg1s (sid387777@python/psf/thomas) (*.net *.split)
[21:11:34] *** Quits: MJ94 (mj94@user/mj94) (*.net *.split)
[21:11:34] *** Quits: asd (~noname@user/asd) (*.net *.split)
[21:11:34] *** Quits: Peng (~mnordhoff@fin.mattnordhoff.net) (*.net *.split)
[21:11:34] *** Quits: nanonyme (nanonyme@kapsi.fi) (*.net *.split)
[21:11:34] *** Quits: pizza (~pizzaiolo@user/pizzaiolo) (*.net *.split)
[21:11:34] *** Quits: fuz (~fuz@user/fuz) (*.net *.split)
[21:11:34] *** Quits: habnabit_ (~habnabit@python/site-packages/habnabit) (*.net *.split)
[21:11:34] *** Quits: cohn (~noone@user/cohn) (*.net *.split)
[21:11:34] *** Quits: CrtxReavr (crtxreavr@shodan.trioptimum.com) (*.net *.split)
[21:11:34] *** Quits: allegary (sid142836@apache/committer/gjm) (*.net *.split)
[21:11:34] *** Quits: josh_h (sid301834@brockwell.irccloud.com) (*.net *.split)
[21:11:34] *** Quits: jposer (sid132110@highgate.irccloud.com) (*.net *.split)
[21:11:34] *** Quits: averell (~averell@user/averell) (*.net *.split)
[21:11:35] *** Quits: explodes (~evan@user/explodes) (*.net *.split)
[21:11:35] *** Quits: cark (lp0@tilde.team) (*.net *.split)
[21:11:35] *** Quits: bss (bss@rie.incorporeal.org) (*.net *.split)
[21:11:35] *** Quits: jocke-l (jocke-l@a.x0.is) (*.net *.split)
[21:11:35] *** Quits: nikomo (~quassel@nikomo.fi) (*.net *.split)
[21:11:35] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (*.net *.split)
[21:11:35] *** Quits: noteness (noteness@user/noteness) (*.net *.split)
[21:11:35] *** Quits: SDr (~SDr@user/sdr) (*.net *.split)
[21:11:35] *** Quits: roniez (~roniez@nixsec.se) (*.net *.split)
[21:11:35] *** Quits: ops (~echelon@user/echelon) (*.net *.split)
[21:11:35] *** Quits: TadeusTaD (tadeustad@psifactor.pl) (*.net *.split)
[21:11:35] *** Quits: edr (~edr@user/edr) (*.net *.split)
[21:11:35] *** Quits: petemc (~pete@vps-80fad31a.vps.ovh.net) (*.net *.split)
[21:11:35] *** Quits: EWDurbin (sid38710@tinside.irccloud.com) (*.net *.split)
[21:11:35] *** Quits: gbear605 (~gbear605@user/gbear605) (*.net *.split)
[21:11:35] *** Quits: nedbat (~nedbat@python/psf/nedbat) (*.net *.split)
[21:11:35] *** Quits: RoyK (~roy@user/royk) (*.net *.split)
[21:11:35] *** Quits: InPhase (~InPhase@openscad/inphase) (*.net *.split)
[21:11:35] *** Quits: rawplayer (~ACKbit@filter.mailscreen.nl) (*.net *.split)
[21:11:35] *** Quits: dTal (~quassel@dragonbox/wizzard/dtal) (*.net *.split)
[21:11:35] *** Quits: appletv (~appletv@hey.fucku.org) (*.net *.split)
[21:11:35] *** Quits: fleabag (~sirpengi@li587-65.members.linode.com) (*.net *.split)
[21:11:45] *** Joins: cohn (~noone@user/cohn)
[21:11:45] *** Joins: Peng__ (~mnordhoff@fin.mattnordhoff.net)
[21:11:50] *** Joins: EWDurbin_ (sid38710@id-38710.tinside.irccloud.com)
[21:11:50] *** Joins: allegary_ (sid142836@apache/committer/gjm)
[21:11:55] *** Joins: josh_h (sid301834@id-301834.brockwell.irccloud.com)
[21:11:57] *** Joins: ErgoX (sid219675@id-219675.tinside.irccloud.com)
[21:11:58] *** Joins: asd (~noname@user/asd)
[21:11:59] *** Joins: circuitbone (sid355934@user/circuitbone)
[21:11:59] *** Joins: jposer (sid132110@id-132110.highgate.irccloud.com)
[21:12:01] *** Joins: Yhg1s (sid387777@python/psf/thomas)
[21:12:04] *** Joins: nurupo_ (~nurupo.ga@user/nurupo)
[21:12:08] *** Joins: MJ94_ (mj94@user/mj94)
[21:12:11] *** Quits: jphaynes66 (~TerraFirm@174-16-120-34.hlrn.qwest.net) (Quit: Bye y'all.)
[21:12:22] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:12:24] *** Joins: simon816 (~simon816@ec2-35-178-246-72.eu-west-2.compute.amazonaws.com)
[21:12:25] *** Joins: nanonyme (~nanonyme@kapsi.fi)
[21:12:25] *** Joins: hirish (~hirish@ip85.ip-137-74-20.eu)
[21:12:27] *** Joins: njt (~njt@zaph.org)
[21:12:28] *** Joins: jootoi (~jootoi@130.61.158.197)
[21:12:30] *** Joins: pizzaiolo (~pizzaiolo@user/pizzaiolo)
[21:12:32] *** MJ94_ is now known as MJ94
[21:12:49] *** Joins: petemc (~pete@vps-80fad31a.vps.ovh.net)
[21:12:50] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 245 seconds)
[21:12:59] <puadxtub> https://i.imgur.com/mhtekRk.png
[21:12:59] *** Joins: fuz (~fuz@user/fuz)
[21:13:04] *** Joins: ops (~ops@user/echelon)
[21:13:10] *** Joins: JTL (~irc@user/jtl)
[21:13:36] <SnoopJ> if you like customizing editors, vim/emacs can certainly be made to behave like IDEs
[21:13:42] *** Quits: Tier (~tier@37.214.79.66) (Remote host closed the connection)
[21:14:14] <graingert> Crys: gz on your python-trio invite btw
[21:14:26] *** Quits: Dolor_Avis (~Dolor_Avi@user-5-173-12-31.play-internet.pl) (Quit: Dolor_Avis)
[21:14:49] *** nurupo_ is now known as nurupo
[21:15:00] *** Joins: dTal (quassel@dragonbox/wizzard/dtal)
[21:15:00] <grym> lsp has been very handy at imbuing editors with superpowers in a more consistent way
[21:15:24] <puadxtub> just took that shot over ssh :)
[21:15:40] <SnoopJ> LSP is not very consistent with "lightweight" but it's certainly good for interoperability
[21:15:55] <SnoopJ> and DAP is hopefully doing the same thing for debugging
[21:16:02] *** Peng__ is now known as Peng
[21:16:02] <grym> yeah, they're peas in a pot
[21:16:03] *** Joins: gh0s1 (~gh0s1@user/gh0s1)
[21:16:05] <grym> pod, too
[21:16:11] <SnoopJ> Plain Old Debugger
[21:16:19] *** Joins: andrewSC (~andrewSC@95.179.141.168)
[21:16:20] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[21:16:36] *** Quits: cmagina (~cmagina@user/cmagina) (Quit: ZNC 1.8.2 - https://znc.in)
[21:16:52] *** TML-prv is now known as TML
[21:17:24] *** Quits: wattux (~wattux@2a02:810a:1140:4b6c::f428) (Quit: Client closed)
[21:17:38] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[21:17:48] *** Joins: habnabit_ (~habnabit@python/site-packages/habnabit)
[21:17:58] <Thanatos> How do I speed a database query for 763k rows with column containing a bunch of text.
[21:17:59] *** Quits: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[21:18:06] <Thanatos> *speed up
[21:18:23] <SnoopJ> Thanatos, hard to say without knowing more about the query and the data it's acting over.
[21:18:48] <TML> Thanatos: What part is slow? Finding the row you want in the mix of 763k row? Fetching all 763k rows?
[21:18:59] <graingert> TML: the speed part
[21:19:04] *** Quits: razius (~razius@5-15-16-192.residential.rdsnet.ro) (Ping timeout: 250 seconds)
[21:19:13] *** Joins: gbear605 (~gbear605@user/gbear605)
[21:20:29] <SnoopJ> the only answers that occur to me from the information given: 1) try to do less work 2) partition the search, if possible
[21:20:53] <Thanatos> It's a mssql database. I'm connecting using sqlalchemy. There's 4 columns in the database. ID, Title, Page content, version no. The page content is mark up text intended to be displayed. I'm looking for hyperlinks in the page content.
[21:21:24] <Thanatos> Running a query with "like" and "in" doesn't really speed it up.
[21:21:32] <SnoopJ> Speed it up vs. what?
[21:21:52] *** Joins: binarymutt (~binarymut@c-98-194-153-108.hsd1.tx.comcast.net)
[21:21:57] <SnoopJ> We can't tell you how to go faster than your current benchmark until we understand what that benchmark is.
[21:21:59] <Thanatos> vs just getting all rows
[21:22:24] <Thanatos> What do you mean by benchmark?
[21:22:26] *** Joins: doc (~doc@user/doc)
[21:22:28] <SnoopJ> I mean the status quo
[21:22:44] <Thanatos> It took 50 mins to get 763k rows the first time
[21:23:01] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[21:23:12] <Thanatos> I'm looking for page content that contain a certain url.
[21:23:43] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:a95a:ecd2:e57a:3130)
[21:23:49] *** Joins: dnode (~dnode@user/dnode)
[21:24:05] <SnoopJ> Thanatos, a query with LIKE/IN still has to touch every row, but it sounds like you're comparing "retrieve all matching rows" to "retrieve all rows," but it sounds like a more meaningful comparison would be against "retrieve all rows, then filter out the non-matching rows"
[21:25:43] *** Quits: drew (~drew@user/drew) (Quit: Quit)
[21:25:46] *** Quits: Julian (~tos9@151.66.53.132) (Quit: leaving)
[21:25:54] *** Quits: odoood (~odoood@2601:c8:c003:a550::2) (Ping timeout: 245 seconds)
[21:26:18] <Thanatos> How do I  do "retrieve all, then filter"?
[21:26:23] <Thanatos> Do I request for all rows and then filter the content in code?
[21:26:33] <SnoopJ> yes, that would be a more reasonable comparison, because it performs the same work
[21:27:15] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[21:27:20] <Thanatos> I wasn't sure, I was hoping that the database would be better at filtering than me.
[21:27:29] <SnoopJ> the search itself is "embarrassingly parallel" meaning each row can be accepted/rejected on its own. I don't know MSSQL, but it should be able to parallelize that query if your server is appropriately configuerd.
[21:27:49] *** Quits: alexbk (~alexbk@c-73-157-41-15.hsd1.wa.comcast.net) (Ping timeout: 258 seconds)
[21:28:03] *** pizzaiolo is now known as pizza
[21:28:22] <dnode> does the doc mean, that close_connection should be assigned to every time before handle_one_request() returns or that if close_connection is assigned to, that should be done before the return?
[21:28:25] *** Joins: drew (~drew@user/drew)
[21:28:31] *** Quits: dkmueller (~dkmueller@2a01:c22:6e63:5d00:f5b5:2c52:7fd8:66e8) (Quit: WeeChat 3.1)
[21:28:31] <yitz> Thanatos: in general, it tends to be best to filter before transmitting. The cost of pre-filtering tends to be much lower than the cost of transmission
[21:28:33] <dnode> https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.close_connection
[21:29:02] *** Quits: viktorivan (~ivan@187.223.103.108) (Remote host closed the connection)
[21:29:05] <SnoopJ> Thanatos, it should be faster to do it on the database side because databases are built around exactly this kind of task
[21:29:50] *** Joins: female_student_4 (~female_st@82-132-214-184.dab.02.net)
[21:30:05] <female_student_4> Is anyone here familiar with the open data science conference
[21:30:09] <female_student_4> and if so is it worth your time
[21:30:23] <puadxtub> dap is nice https://i.ibb.co/K721cHC/gif-2021-06-08-135444.gif
[21:30:43] *** Quits: pieguy128 (~pieguy128@bas1-montreal02-65-92-163-194.dsl.bell.ca) (Quit: ZNC 1.8.2 - https://znc.in)
[21:31:19] *** Quits: markcerv (~markcerv3@52-119-125-204.PUBLIC.monkeybrains.net) (Ping timeout: 245 seconds)
[21:31:22] *** Joins: pieguy128 (~pieguy128@bas1-montreal02-65-92-163-194.dsl.bell.ca)
[21:31:33] <Thanatos> So what are the kinds of numbers I should expect for a simple filtering operation like this. My query is basically ">>> select * from pages where pages.content like '%google.com%';"
[21:31:41] <SnoopJ> female_student_4, never heard of it. Looks like they have some talks online, I would see what you think of those.
[21:32:03] <female_student_4> SnoopJ I'm not sure though as I'm somewhat of a novelist when it comes to the topics they present
[21:32:06] <SnoopJ> Thanatos, the question is not particularly meaningful
[21:32:12] *** Joins: m4r35n357 (~ian@host-92-13-130-45.as13285.net)
[21:32:21] <female_student_4> SnoopJ like they have a segment on the fundamentals of NLP and I'm like is that relevant for me? I have no clue
[21:32:41] <SnoopJ> but whenever you talk about "faster" you should be sure to ask yourself "faster than what?" and make comparisons of equivalent solutions
[21:32:42] <Thanatos> SnoopJ, Because the actual data affects filtering performance?
[21:32:56] <SnoopJ> Thanatos, because I don't "expect numbers" a priori in general
[21:33:46] *** Quits: rendar (~rendar@user/rendar) ()
[21:34:06] *** Joins: arthem (~rehmat@user/arthem)
[21:34:06] <Thanatos> Faster than sql alchemy using "session.query(Page).filter(Page.content.like("%google.com%")).all()"
[21:34:39] <SnoopJ> Thanatos, if I were you the first thing I'd do here is see if the server is running the query in parallel. Probably by running the query and seeing how much of the system resources it's using
[21:35:01] <SnoopJ> female_student_4, what are you interested in?
[21:35:11] *** Quits: arthem (~rehmat@user/arthem) (Client Quit)
[21:35:48] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[21:35:55] <female_student_4> SnoopJ I'm just not sure what is relevant for me career-wise, hence thinking about the conference. So I'm not really "sure" what I am interested in. I've signed up to a summer school for machine learning to get more of an idea, just not sure if I will be "missing out" by not attending this conference
[21:35:55] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 268 seconds)
[21:36:21] <Thanatos> SnoopJ, How can I do that please?
[21:36:22] *** Joins: xcm (~xcm@user/xcm)
[21:37:08] *** Quits: drew (~drew@user/drew) (Quit: Quit)
[21:37:14] <female_student_4> SnoopJ https://app.aiplus.training/courses/live-training-june-15th-natural-language-processing-fundamentals-in-python like I could probably pick up a book and learn this right?
[21:37:26] <SnoopJ> female_student_4, well, since it looks like they're putting talks given at the conference online, you won't miss-out on the talks themselves by not attending: you can always watch them later once they're uploaded. You will miss out on the other aspects of conferences, namely networking, but it seems like they're doing virtual-only conferences until November anyway?
[21:37:30] * SnoopJ isn't a big fan of virtual networking
[21:37:33] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Max SendQ exceeded)
[21:37:49] *** Joins: anandprabhu_ (~anandprab@87.201.97.214)
[21:37:50] <female_student_4> SnoopJ not too fussed about networking
[21:37:57] <SnoopJ> female_student_4, the reason I ask what you are interested in is that I have no idea how to answer that question without understanding what "this" it is you seek to learn
[21:38:25] <female_student_4> SnoopJ Natural Language Processing looks interesting
[21:38:27] <female_student_4> https://app.aiplus.training/courses/live-training-june-15th-natural-language-processing-fundamentals-in-python
[21:38:57] <dnode> working out rough asymptotic notation would be better than looking at system resource usage
[21:39:16] *** Joins: ffledgling (~textual@2620:10d:c090:400::5:e083)
[21:39:22] <SnoopJ> Thanatos, look at the CPU/RAM usage on your system, then launch the query and see what changes. If only one core becomes more active when running it, it's likely using one core to do the search (i.e. just one row at a time)
[21:39:37] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[21:39:42] *** Joins: cthulchu_ (~Cthulchu@195.66.198.226)
[21:39:46] *** Joins: drew (~drew@user/drew)
[21:39:52] *** Quits: cthulchu (~Cthulchu@195.66.198.226) (Ping timeout: 250 seconds)
[21:40:02] *** Joins: teut (~teut@182.69.85.39)
[21:40:17] *** Quits: anandprabhu_ (~anandprab@87.201.97.214) (Client Quit)
[21:40:18] *** Quits: anandprabhu (~anandprab@45.134.22.18) (Ping timeout: 250 seconds)
[21:40:57] *** Joins: adder (~adder@user/adder)
[21:40:59] *** Quits: nathanjell (~Nathan@d162-157-36-152.abhsia.telus.net) (Quit: Leaving)
[21:41:01] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Client Quit)
[21:41:15] <SnoopJ> female_student_4, that link looks like a pretty nice introduction to the basics of NLP. I wouldn't personally spend that much for the basics, but that's a matter of personal taste/finance.
[21:41:39] *** Joins: Northwoods (~Northwood@223.130.30.189)
[21:41:39] <female_student_4> SnoopJ that's what I'm assessing yes, I'm thinking it's over-valued, but I am not sure
[21:41:46] *** Joins: egon_ (~egon@181.214.206.136)
[21:41:49] <female_student_4> SnoopJ I wonder if you could learn it from a book
[21:42:17] <SnoopJ> certainly all of the content there has been printed in books before
[21:42:48] <SnoopJ> female_student_4, spaCy maintains a list of books: https://spacy.io/universe/category/books/
[21:43:07] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[21:43:20] <female_student_4> SnoopJ Yeah, if it's in books, I might aswell read the books
[21:43:39] <female_student_4> SnoopJ No benefit of a conference on a CV
[21:43:56] <SnoopJ> counterpoint: "books read" isn't a very compelling entry on a CV either
[21:44:45] <female_student_4> SnoopJ this is valid but its not too much of a personal problem for me
[21:44:57] <female_student_4> SnoopJ also, thank you for the link!
[21:45:06] <grym> female_student_4: and gensim's docs are like 80% his thesis
[21:45:09] <SnoopJ> female_student_4, to me the point of conferences is rapid exchange of information (generally in the form of talks/posters and conversation), where you can cover a lot of ground quickly and get a sense of the state of a field or subfield, and then you follow-up after the fact by reading papers/books etc.
[21:45:32] <SnoopJ> but everybody learns differently and has different learning goals
[21:45:44] *** Joins: famubu (~famubu@user/famubu)
[21:45:57] <female_student_4> SnoopJ
[21:46:16] <female_student_4>  to me, I'd feel stupid spending £600 on a conference when it was super cheaper in books ya know?
[21:46:21] *** Joins: solarjoe4 (~solarjoe4@p57ab206c.dip0.t-ipconnect.de)
[21:46:26] <female_student_4> grym thanks!! yeah and I guess the docs ar efree on line
[21:46:36] <SnoopJ> my point is that a book is strictly not capable of delivering all of the "it" represented by conferences
[21:46:53] <SnoopJ> I guess it's kind of like breadth-first search vs depth-first
[21:47:10] <female_student_4> SnoopJ the "it" in what sense?
[21:47:15] <dnode> anyone know the request handlers in http.server?
[21:47:38] <SnoopJ> female_student_4, no book will by itself be a stand-in for most conferences, because conferences have a lot of breadth, but technical books are almost by definition narrow in scope with lots of depth.
[21:48:01] <SnoopJ> (the exception: things like encyclopediae)
[21:48:20] <ewdwasright> What is the default "end" index value supposed to be in an array slice expression like s[20::-1] supposed to be?
[21:48:38] <famubu> Does anyone know how to make sphinx autodoc not arrange inherited attributes of a class just by its alphabetical order? I was trying to make the base class attributes appear first (in the order in which they are defined. I guess that's what `autodoc_member_order = 'bysource'` does) and then own attributes.
[21:48:39] *** Joins: a6a45081-2b83 (~aditya@171.76.244.212)
[21:48:50] <female_student_4> SnoopJ I'm not too concerned about the breadth as I'm doing a certified ML course this summer. But thank you for the clarification, you have definitely helped my decision
[21:48:52] *** Joins: Akuli (~Akuli@82-203-166-32.bb.dnainternet.fi)
[21:48:56] <SnoopJ> ewdwasright, that translates to English as "Start at index 20, step by -1, stop when you run out of stuff"
[21:49:04] <female_student_4> grym thank you for that point!!
[21:49:10] <female_student_4> SnoopJ also thank you for the link!!
[21:49:51] <SnoopJ> female_student_4, in my estimate, you are a pretty motivated autodidact and would probably get a great start in NLP with any of those books.
[21:50:07] <SnoopJ> (or freely available tutorials/talks in the same ecosystem)
[21:50:43] <solarjoe4> when catching a Exception("some", "info", "here"), how can I access the parameters passed to it?
[21:50:56] <female_student_4> SnoopJ Haha yes, I am a massive autodidact, I have always been that way. I was a massive truant at school too for that reason
[21:51:04] <female_student_4> SnoopJ thanks!!! really helpful advice
[21:51:24] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[21:51:42] <ewdwasright> SnoopJ thanks!  Just struck by the remarkable difference between s[20::-1] and s[20:0:-1], in which s[0] will NOT be included.
[21:52:00] <SnoopJ> ewdwasright, right, because that translates as "Stop when the next index is 0"
[21:52:08] *** Quits: egon_ (~egon@181.214.206.136) (Changing host)
[21:52:08] *** Joins: egon_ (~egon@user/egon)
[21:52:16] * famubu til meaning of autodidact
[21:52:38] <SnoopJ> famubu, I regret using that word when "self-teacher" would have been fine
[21:52:46] <SnoopJ> but it is a nice one :)
[21:52:58] <famubu> Yeah, I learned a new word. :-D
[21:53:18] *** Quits: Thanatos (~Thanatos@102.89.1.26) (Ping timeout: 250 seconds)
[21:53:34] <SnoopJ> solarjoe4, for the Exception class, you want .args; for particular subclasses of it, consult the documentation of that class to see how they make info available https://bpa.st/Q24Q
[21:53:52] <SnoopJ> and if you're raising exceptions yourself, use a subclass for sure.
[21:54:11] *** Quits: sadg (~odd@45.83.220.210) (Quit: WeeChat 3.0.1)
[21:54:52] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[21:54:54] <solarjoe4> SnoopJ, that's exactly what I need. Thanks a lot!
[21:54:56] <ewdwasright> SnoopJ So, what is "next index" in the case of s[20::-1]?  is it -1?  So the "default end" is -1?  But that would mean that we've violated the "step < 0 implies end < start" rule I thought applied to slices.
[21:55:01] <SnoopJ> female_student_4, thank you for making me aware of this conference, since it will be coming to my part of the US next year :)
[21:55:25] * SnoopJ found a talk given at ODSC Europe about knowledge graphs that looks nice
[21:56:38] <SnoopJ> ewdwasright, the default value in the slice() object this creates is None, and None is a special value that basically means "go until you can't iterate any more"
[21:57:07] *** Quits: wei2912 (~wei2912@112.199.250.21) (Quit: Lost terminal)
[21:57:23] <dnode> no http.server experts :( need to look at src ...
[21:58:03] *** egon_ is now known as egon
[21:58:18] <ChrisWarrick> dnode: we don’t recommend using http.server
[21:58:29] *** Quits: Leonarbro_ (~Leonet@user/leonarbro) (Ping timeout: 258 seconds)
[21:58:34] <ChrisWarrick> dnode: there are much better (safer, easier, saner) ways to make a http server with python
[21:58:41] <ewdwasright> SnoopJ Okay, I saw that when I created slices with expressions like:  slice(20,None,-1).  Just felt a bit "irregular" to me.  Thanks!
[21:58:49] <SnoopJ> ewdwasright, if you scroll down to "Sequences" from this link, there's part of an explanation given there: https://docs.python.org/3/reference/datamodel.html#the-standard-type-hierarchy
[21:59:20] *** Joins: vicfred (~vicfred@user/vicfred)
[21:59:22] <SnoopJ> ewdwasright, it's irregular in the sense that the builtins interpret slices that give both `start` and `stop` as half-open intervals of indices
[21:59:37] *** Joins: ente1 (~ente@2a02:908:1396:cb42:cf2c:e976:a4ef:a04)
[21:59:42] <SnoopJ> i.e. [i:j] is the set of indices k such that `i <= j < k`
[22:00:00] *** Quits: ente1 (~ente@2a02:908:1396:cb42:cf2c:e976:a4ef:a04) (Client Quit)
[22:00:04] <dnode> ChrisWarrick seems to work well for my purpose, what is considered better?
[22:00:10] *** Joins: ente1 (~ente@2a02:908:1396:cb42:cf2c:e976:a4ef:a04)
[22:00:17] *** Joins: Thanatos (~Thanatos@102.89.1.26)
[22:00:36] <Thanatos> SnoopJ, The server I'm contacting is not on my machine
[22:00:37] <dnode> just unsure if i'm setting close_connection correctly
[22:00:43] *** ente1 is now known as ente__
[22:01:01] <Thanatos> It's a remote server, so I'm not sure how determine how it processes queries
[22:01:04] <SnoopJ> Thanatos, I would ask whoever administrates the DB for assistance, then.
[22:01:48] *** Quits: rnm (~mambang@user/mambang) (Remote host closed the connection)
[22:01:51] *** Quits: ente__ (~ente@2a02:908:1396:cb42:cf2c:e976:a4ef:a04) (Client Quit)
[22:02:03] *** Quits: egon (~egon@user/egon) (Quit: Textual IRC Client: www.textualapp.com)
[22:02:15] *** Quits: DaNeenjah (~jake@29.sub-72-106-108.myvzw.com) (Ping timeout: 252 seconds)
[22:02:26] *** Joins: ente1 (~ente@2a02:908:1396:cb42:cf2c:e976:a4ef:a04)
[22:02:37] *** Joins: egon (~egon@user/egon)
[22:02:46] <Thanatos> SnoopJ, Okay. But before that is there anything I could be doing wrong /right?
[22:03:58] *** Joins: DaNeenjah (~jake@adsl-74-230-10-210.hsv.bellsouth.net)
[22:04:37] *** Joins: brickfat (~brickfat@user/brickfat)
[22:05:02] <ChrisWarrick> dnode: depends on what you’re doing; you might want something like fastapi or flask
[22:05:14] <ChrisWarrick> dnode: the http.server module is very low level and easy to shoot yourself in the foot with
[22:05:47] *** Quits: a6a45081-2b83 (~aditya@171.76.244.212) (Read error: Connection reset by peer)
[22:06:23] <dnode> ChrisWarrick yes, i need the low http stuff :) it's not a fancy web app
[22:06:25] <SnoopJ> Thanatos, I wouldn't really know since I only know a little bit about the problem and have to guess at the parts you aren't telling us. The only other thing I can think of is trying to set a parallelism hint in your query. It looks like in MSSQL that's setting the MAXDOP option.
[22:06:30] <dnode> *low level
[22:06:38] <ChrisWarrick> dnode: do you really?
[22:06:45] <dnode> yes
[22:07:36] *** Quits: ente1 (~ente@2a02:908:1396:cb42:cf2c:e976:a4ef:a04) (Quit: WeeChat 3.1)
[22:07:54] *** Joins: ente1 (~ente@2a02:908:1396:cb42:cf2c:e976:a4ef:a04)
[22:09:11] *** Joins: a6a45081-2b83 (~aditya@223.226.227.160)
[22:09:14] <dnode> think i found my answer in https://github.com/python/cpython/blob/main/Lib/http/server.py#L423
[22:09:19] *** Joins: srhm (~ascii@user/srhm)
[22:09:34] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:10:00] <dnode> close_connection is set to True when handle() is called which in turn calls handle_one_request()
[22:10:01] *** ente1 is now known as ente__
[22:10:12] *** Quits: famubu (~famubu@user/famubu) (Ping timeout: 250 seconds)
[22:11:08] *** Joins: cmagina (~cmagina@user/cmagina)
[22:12:15] *** Quits: kek_ (~kek_@2a02:168:200f:1f10:410b:731a:6592:864d) (Quit: Leaving)
[22:14:30] *** Joins: OMGOMG (~bobrobert@poppy.ifi.uio.no)
[22:14:32] *** Quits: mesaboogie (mesaboogie@user/mesaboogie) (Ping timeout: 250 seconds)
[22:14:48] <Thanatos> SnoopJ, Thanks. Is there anything else I can add to help understand what I'm asking for. Contacting the db admin is whole task I'd rather avoid.
[22:15:23] *** Quits: jcarl43 (~jcarl@node-1w7jr9qxb23qwk5inqhfljuks.ipv6.telus.net) (Quit: WeeChat 3.1)
[22:15:26] *** Joins: frostschutz (~frostschu@2a01:c22:d487:c600:a7c9:233d:6768:290b)
[22:15:43] <p-i-> I'm using self.Q = asyncio.Queue(). I put 3 items on the queue with self.Q.put_nowait(J). And I have a Task to execute them: while True: J = await self.Q.get(); print(J).
[22:15:48] <p-i-> But It's only printing the first one.
[22:15:48] *** Quits: female_student_4 (~female_st@82-132-214-184.dab.02.net) (Quit: Client closed)
[22:15:54] <SnoopJ> Thanatos, nothing that I can think of
[22:15:56] <p-i-> But the task isn't completing, it's still running.
[22:17:01] <p-i-> Any ideas what might be going wrong?
[22:17:01] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[22:17:47] <SnoopJ> Thanatos, it's worth saying though that if this database is being continuously updated, you might want to scan each page *before* insertion into a table and store anything that looks like a URL or other interesting text in a dedicated field. Then your query could be over that field instead of the page content (which could be pretty big).
[22:18:22] <grym> table design matters a lot
[22:18:38] <ewdwasright> SnoopJ, thanks, I was familiar with that part of the docs, and what's interesting is that for indices < 0, -N <= end < start < 0, and so the slice s[-9:-4] deals with indices k such that -9 <= k < -4, and to get that subsequence in reverse order, one writes s[-5:-10:-1], which seems to specify indices k such that -10 < k <= -5...
[22:19:16] *** Quits: Meteorhead (~Meteorhea@165.225.21.61) (Ping timeout: 250 seconds)
[22:19:27] <Thanatos> SnoopJ, Alright then. Thanks.
[22:19:58] *** Joins: explodes (~explodes@user/explodes)
[22:20:28] <SnoopJ> ewdwasright, it explains extended slicing just below the explanation of slicing and has a similar half-open inequality. I find it easier to think of it in terms of the 'translation' I gave earlier.
[22:20:42] <SnoopJ> (which is pretty directly what CPython does for a list)
[22:20:46] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[22:20:54] *** Quits: solarjoe4 (~solarjoe4@p57ab206c.dip0.t-ipconnect.de) (Quit: Leaving)
[22:21:13] *** Joins: k4rt0ff3lch33t4h (~k4rt0ff3l@178-164-189-247.pool.digikabel.hu)
[22:22:14] <dnode> inline asm when
[22:22:46] <dnode> jk
[22:23:14] <graingert> dnode: just use fastapi
[22:23:15] *** Quits: explodes (~explodes@user/explodes) (Client Quit)
[22:23:22] <graingert> dnode: it will make your life easier
[22:23:26] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[22:23:31] *** Joins: explodes (~explodes@user/explodes)
[22:23:45] <graingert> p-i-: show all your code?
[22:24:00] <SnoopJ> dnode, re: "what is considered better" than http.server: any other option
[22:24:31] *** Joins: rama (~rama@2601:641:400:423:cc11:a08f:1c20:f2eb)
[22:26:26] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[22:27:53] <p-i-> graingert: https://bpa.st/GKAQ ... I realized I needed self.Q.task_done() after processing an item. But still, only the first item is hitting line 23.
[22:29:31] *** Joins: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854)
[22:30:02] *** Joins: InPhase (~InPhase@openscad/inphase)
[22:30:21] *** Joins: Sasazuka (~Sasazuka@user/sasazuka)
[22:30:30] <p-i-> Maybe I need to await the 'put'
[22:33:17] <dnode> graingert honestly compared to making an http server with sys/socket.h and others, http.server is easy in comparison. never used fastapi but i'm making a non-generic web server which only serves certain get requests (posts disabled) where there are no external scripts (webserver itself does all the processing). i'm guessing this isn't possible with
[22:33:17] <dnode> a higher level api.
[22:33:20] <graingert> p-i-: where do you schedule task_message_send ?
[22:33:50] <graingert> dnode: sorry what
[22:33:54] <graingert> dnode: yes you can do that with fastapi
[22:34:03] <graingert> what's an external script?
[22:34:34] *** Quits: Akuli (~Akuli@82-203-166-32.bb.dnainternet.fi) (Quit: Leaving)
[22:34:39] <ChrisWarrick> dnode: if you’re thinking of the PHP/CGI way of things, nobody does python web development like that
[22:35:41] <graingert> p-i-: oh this is you? https://stackoverflow.com/q/67860442/833093
[22:36:08] *** Joins: bss (bss@rie.incorporeal.org)
[22:36:15] <p-i-> graingert: yup
[22:36:24] <p-i-> https://bpa.st/RTIQ#1L126 <-- scheduled here
[22:36:25] <dnode> graingert so u have a webserver (which is one program) which makes calls to other programs (that's what i meant by external scripts). the web server is the only program running
[22:37:11] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[22:37:19] <graingert> dnode: yes FastAPI let's you do that, you might be thinking of FastCGI
[22:37:57] <ChrisWarrick> dnode: in the python world, it’s typical to have nginx in front of a long-running python process that also does http (-ish)
[22:38:15] *** Joins: mesaboogie (mesaboogie@user/mesaboogie)
[22:38:17] <graingert> p-i-: anyio would make that a bit easier for you
[22:38:58] <graingert> That while loop on line 93 is wrong
[22:39:14] *** Quits: a6a45081-2b83 (~aditya@223.226.227.160) (Quit: Konversation terminated!)
[22:39:15] <graingert> Just do await self.Q.get()
[22:40:38] <graingert> p-i-: Also use asyncio.run not loop.run_until_compelte
[22:41:36] <dnode> graingert can you not implement posts (server will not respond to post requests) and set the Content-Type and Content-Disposition http headers for the few get requests it does respond to?
[22:42:30] <p-i-> graingert: my bad, in desperation I had switched to using queue.Queue. And even THAT isn't working.
[22:43:14] <p-i-> If I use asyncio.Queue I think I might need an async method for queueing the item.
[22:43:34] <p-i-> So I thought better to use queue.Queue maybe.
[22:44:14] <p-i-> graingert: It's said everywhere not to use asyncio.run more than once in the project. Is it safe to use it within a thread?
[22:44:35] <p-i-> Suppose I have another object using the same pattern...
[22:44:49] <dnode> graingert fastapi looks good, looks like it can do more than i thought thanks
[22:44:55] <SnoopJ> fastapi +1
[22:45:24] *** Joins: markcerv (~markcerv3@52-119-125-204.PUBLIC.monkeybrains.net)
[22:45:39] *** Quits: Mulugruntz (~Mulugrunt@124-159-50-62.ppp.bbiq.jp) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:47:47] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[22:49:49] <graingert> FastAPI isn't FastCGI or fastai
[22:49:56] *** Joins: kiwichap (~brainz3sl@4.182.132.164.lunanode-rdns.com)
[22:50:00] *** Quits: magla (~gelignite@55d41093.access.ecotel.net) (Quit: Stay safe!)
[22:50:06] *** Quits: markcerv (~markcerv3@52-119-125-204.PUBLIC.monkeybrains.net) (Ping timeout: 252 seconds)
[22:50:12] *** Joins: SebastianM (~seba@user/sebastianm)
[22:50:35] *** Joins: Julian (~tos9@151.66.53.132)
[22:52:18] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 252 seconds)
[22:52:27] *** Quits: nattiestnate (~nate@180.242.128.159) (Quit: WeeChat 3.1)
[22:53:07] *** Joins: baldr333 (~baldr333@modemcable034.69-70-69.static.videotron.ca)
[22:53:25] *** Joins: nattiestnate (~nate@180.242.128.159)
[22:53:44] <dnode> i'm assuming the server will only respond to the requests with the app.get decorators?
[22:54:04] <grym> dnode: or app.post, app.delete, ...
[22:54:57] *** Joins: Akuli (~Akuli@dy44w3jycd5w---v3qqvy-4.rev.dnainternet.fi)
[22:56:16] <dnode> ah yes ofc, regardless of method. i'm assuming it won't respond instead of sending a 4xx/5xx http code
[22:56:32] <graingert> dnode: it has to do something
[22:56:39] <graingert> dnode: by default it will 404
[22:56:50] <grym> functions decorated with @app.method("/someroute") get hit if you hit them
[22:57:04] *** Quits: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854) (Read error: Connection reset by peer)
[22:57:15] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[22:59:08] *** Joins: cliluw (~cliluw@47.147.80.149)
[22:59:18] <int> greetings all. I see that freenode #python channel is active as well. Which channel is main?
[22:59:37] *** Joins: synbiose (~synbiose@user/synbiose)
[22:59:41] <ChrisWarrick> int: this one
[22:59:46] <ChrisWarrick> int: the freenode one isn’t really active
[22:59:59] <SnoopJ> this channel is the canonical location
[23:00:23] <SnoopJ> (see: https://www.python.org/community/irc/)
[23:00:36] *** Quits: Akuli (~Akuli@dy44w3jycd5w---v3qqvy-4.rev.dnainternet.fi) (Quit: Leaving)
[23:01:07] *** Joins: Akuli (~Akuli@82-203-166-32.bb.dnainternet.fi)
[23:01:33] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Quit: Will return)
[23:01:40] <dnode> graingert noooo ... close in terms of what i need it to do. currently my request handler for http.server does nothing besides close the connection in these cases. no response in web dev tools > network, web browser typically displays connection reset by server
[23:02:16] <dnode> yes this is abnormal
[23:02:19] *** Quits: kdc (~kdc@196.211.197.141) (Quit: kdc)
[23:02:43] *** Joins: wallace_mu200 (~wallace_m@pool-173-66-6-41.washdc.fios.verizon.net)
[23:02:49] *** Joins: nedbat (~nedbat@python/psf/nedbat)
[23:02:59] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[23:03:37] <dnode> the only requests it will respond to are 'GET / ...', 'GET /favicon.co ...' and one other one
[23:03:41] <wallace_mu200> Hi all, is it good practice to initialize all instance variable in __init__ to be None, even tho I know what type it is going to be, forexample , I want a self.result_of_dict = dict(), and my colleague tried to make me to assign it to None in the init like: self.result_of_dict = None, and do dict() it in the corresponding method
[23:03:57] <graingert> dnode: you can send an empty message in raw asgi https://pgjones.gitlab.io/hypercorn/discussion/closing.html
[23:04:13] <int> ChrisWarrick, SnoopJ, thanks
[23:04:24] <dnode> this is used in combination with fastapi?
[23:04:31] <dnode> graingert
[23:04:43] *** Quits: ente__ (~ente@2a02:908:1396:cb42:cf2c:e976:a4ef:a04) (Ping timeout: 268 seconds)
[23:04:52] <SnoopJ> wallace_mu200, when declaring "fields" on a class, it's common to use the library attrs (or the built-in dataclasses library, which has a limited subset of the same functionality)
[23:04:55] <squirrel> wallace_mu200: what does the method do?
[23:05:33] *** Quits: bikeshedder (~bikeshedd@2001:a62:15e9:d601:add8:a263:5c54:1acc) (Ping timeout: 272 seconds)
[23:05:36] <habnabit_> wallace_mu200, sounds like https://attrs.rtfd.org/
[23:05:54] <wallace_mu200> squirrel can you elaborate.  it will cache some dict in the instance variable for later reuse
[23:05:58] <SnoopJ> If you do it yourself in __init__(), None is a better choice imo. An empty dict is not necessarily a dict that has never contained anything.
[23:06:01] <graingert> dnode: you'd make an asgi middleware that handles all missing routes, and calls `await send({"type": "http.response.body", "body": b"", "more_body": False})`
[23:06:03] *** Joins: Dolor_Avis (~Dolor_Avi@user-5-173-8-33.play-internet.pl)
[23:06:13] <graingert> dnode: and you can send that before sending headers
[23:06:32] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 250 seconds)
[23:07:02] *** Joins: xheimlich (~xheimlich@179.218.1.150)
[23:07:12] <wallace_mu200> SnoopJ that's one point, but isn't convient if you do dict() in init then in other instance method you can do dict.update() without checking it's None
[23:07:15] *** Joins: GreaseMonkey (greaser@user/greasemonkey)
[23:07:18] <xheimlich> so type annotations are introducing circular imports in my *small* codebase.
[23:07:38] <SnoopJ> wallace_mu200, if convenience is the concern, __init__() is already very inconvenient compared to attrs/dataclasses.
[23:08:03] <SnoopJ> and __init__() that does what you describe can get out of hand *very* quickly
[23:08:08] <dnode> graingert thanks ill finish up my http.server implementation and check this out
[23:08:08] <Staunch> xheimlich: you can do this fancy thing: https://stackoverflow.com/a/39757388
[23:08:35] <wallace_mu200> SnoopJ what do you mean by  attrs/dataclasses. ?
[23:08:39] <graingert> dnode: https://pgjones.gitlab.io/hypercorn/discussion/closing.html#server-disconnection
[23:08:53] <graingert> dnode: https://github.com/pgjones/hypercorn/blob/80235b0608b2c3869694649aacd6aae6b86e2771/src/hypercorn/protocol/http_stream.py#L161-L162
[23:09:01] <xheimlich> previously one file/module was free of database access concerns. So it defined logically a geographic region with some operations etc. And it imported a presumably abstract DB search object that's actually mongo.
[23:09:05] <graingert> dnode: because http2 supports multiple streams over a single tcp connection
[23:09:13] <graingert> so you can't just EOF the socket
[23:09:20] <SnoopJ> wallace_mu200, I mean that using one of those libraries (there are others) to make an object with "fields" is more convenient than the logic you're talking about.
[23:09:33] <xheimlich> but the abstract DB search object isn't abstract enough; it receives a Region object that it then takes care to convert to GeoJSON or whatever.
[23:09:54] *** Joins: cthulchu (~Cthulchu@195.66.198.226)
[23:10:04] *** Quits: cthulchu_ (~Cthulchu@195.66.198.226) (Ping timeout: 245 seconds)
[23:10:06] <xheimlich> This separation actually reflects a remote team of two, one of which actually knows mongodb.
[23:10:19] *** Joins: agumonke` (~user@88.160.31.174)
[23:10:35] <wallace_mu200> SnoopJ ok, i see, that sounds overkill in my case, but i'll def check those libs. I just like to know people opinion on whether init a variable to dict() is good or bad
[23:10:35] *** Joins: dme86 (~dan@user/dan86)
[23:10:48] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[23:11:00] <xheimlich> so now I apparently have to move region-query-defining logic to my module.
[23:11:04] <SnoopJ> wallace_mu200, why does it sound like "overkill?"
[23:11:14] <nedbat> wallace_mu200: if you don't intend to use the dict created in __init__, then don't create it there.
[23:12:06] <xheimlich> to the current topic: it took me a while to grok dataclasses (are these ADTs? Product types? etc). Also vs. Pydantic.
[23:12:26] <wallace_mu200> SnoopJ ok, sorry no argument, i mean i just like to hear some opinion about what I do
[23:12:29] <grym> xheimlich: structishshes
[23:12:31] <grym> :)
[23:12:46] <xheimlich> short answer: @dataclass automatically writes an __init__ method. It almost has a Lisp macro feeling to it.
[23:12:47] <wallace_mu200> nedbat i see. maybe i should change my habit
[23:13:12] *** Quits: Dolor_Avis (~Dolor_Avi@user-5-173-8-33.play-internet.pl) (Quit: Dolor_Avis)
[23:13:50] <xheimlich> I end up using @dataclass on a bunch of thing with significant behavior.
[23:14:06] *** Joins: female_student_4 (~female_st@82-132-214-184.dab.02.net)
[23:14:23] <female_student_4> SnoopJ sorry i disconnected
[23:14:28] <female_student_4> SnoopJ are you a working professional?
[23:14:34] *** Joins: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr)
[23:14:39] <SnoopJ> wallace_mu200, I don't mean to argue, I meant my question seriously: if we know what you don't like about attrs/dataclasses, we can maybe give better feedback.
[23:14:40] <habnabit_> yeah it's a weird thing when people try to say an attrs class/dataclass are for cases when you don't put methods on it
[23:14:50] <grym> xheimlich: attrs/dataclasses are great, yeah
[23:14:51] <SnoopJ> female_student_4, I'm not sure exactly how professional I am, but I work in tech, yes.
[23:14:54] <habnabit_> every class i write uses @attr.s
[23:14:59] <bjs> habnabit_: they are *also* for that purpose is the better phrasing
[23:15:00] <bjs> :)
[23:15:12] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 250 seconds)
[23:15:17] <female_student_4> SnoopJ I mean you get paid to code
[23:15:34] <SnoopJ> female_student_4, yep
[23:15:43] <female_student_4> SnoopJ niiice
[23:16:11] *** Joins: markcerv (~markcerv3@52-119-125-204.PUBLIC.monkeybrains.net)
[23:16:35] <flower_> It seems I can skip a folder when searching with:
[23:16:36] *** Quits: ffledgling (~textual@2620:10d:c090:400::5:e083) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:16:38] <flower_> glob('**/*.lock/')
[23:16:40] <wallace_mu200> SnoopJ gotcha, thanks for the great feedback, i'll check what that attrs classes are
[23:17:01] <flower_> but how do I skip the folders deeper then '**/*.lock/')
[23:17:19] <flower_> glob('**/*.lock/**')
[23:17:22] <flower_> doesn't work
[23:17:41] <wallace_mu200> first time i heard this : attrs/dataclasses stuff, seems like this is a big trend already? I probably live in a well
[23:18:10] <SnoopJ> attrs is extremely common
[23:18:24] <SnoopJ> so common that dataclasses was added to the stdlib
[23:18:27] <flower_> pad = pathlib.Path("/home/debian/sessions/").glob('**/*.lock/')
[23:18:34] <xheimlich> pydantic already has different "semantics"
[23:18:42] <flower_> meh
[23:18:56] <xheimlich> at least when used with fastapi it's meant to enable type annotations
[23:19:16] <xheimlich> as if in something like typescript
[23:19:18] <SnoopJ> xheimlich, I like Pydantic a lot when what I want to do fits its opinions
[23:19:47] <SnoopJ> biggest complaint about it is how ungainly validators are when you need to write your own
[23:19:59] *** Joins: samian (~sami@174.27.107.153)
[23:19:59] <grym> pydantic really shines for me on serialization
[23:20:04] <xheimlich> I come from a scientific programming background but am talking working with web people now.
[23:20:11] <grym> attrs/desert is fine; pydantic Just Works slightly more
[23:20:13] <SnoopJ> xheimlich, I come from exactly the same context
[23:20:28] <grym> xheimlich: and that's three of us :D
[23:20:32] <flower_> find folder -maxdepth 2 -type f -name *.lock
[23:20:39] <flower_> with find you can set -maxdepth
[23:20:50] *** Quits: Thanatos (~Thanatos@102.89.1.26) (Ping timeout: 250 seconds)
[23:20:54] <flower_> how to do it with python
[23:21:15] *** Joins: Thanatos (~Thanatos@102.89.0.164)
[23:21:27] <xheimlich> scientific programming in C/Fortran/MEX/Cython/etc. uses types basically for performance.
[23:21:41] <wallace_mu200> four of us if count me ;D
[23:21:57] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[23:22:13] <p-i->             def worker():
[23:22:13] <p-i->                 self.loop = asyncio.new_event_loop()
[23:22:13] <p-i->                 self.Q = asyncio.Queue(self.loop)  # RuntimeError: There is no current event loop in thread 'websocket_worker'.
[23:22:18] <p-i-> ^ really?
[23:22:29] <p-i-> It's. Right. There.
[23:22:30] <xheimlich> so my code that produces sparse laplacian inverses for potential theory problems with dirichlet boundaries
[23:22:33] <p-i-> comon asyncio
[23:22:39] <samian> suppose you have a numpy array with a bunch of zeros and ones. To get the indices of the ones, indices = np.argwhere(some_np_array > 0).  But how do I go from indices to
[23:22:48] <samian> populating another array?
[23:22:50] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[23:22:50] <bjs> p-i-: what part are you disagreeing with?
[23:22:59] <xheimlich> types are ndarray and float and *bill burr-style chain of expletives*.
[23:23:08] <SnoopJ> samian, you should explain what "populating another array" means
[23:23:13] <samian> a = np.zeros((2,4))    \n     b = np.argwhere(a == 0)
[23:23:13] <bjs> p-i-: you have created an event loop, but you haven't actually done anything with it.
[23:23:22] <samian> I wish I could do a[b] = 1
[23:23:34] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[23:23:42] <SnoopJ> xheimlich, don't forget the OMP pragmas!
[23:23:53] <p-i-> Next thing I do with it is run_until_complete, which doesn't leave much room for defining my Queue object
[23:23:57] <bjs> p-i-: asyncio has asyncio.set_event_loop to actually set the "current" event loop.
[23:24:02] <xheimlich> but when you're like writing an API endpoint
[23:24:13] <bjs> it also has asyncio.run() which just does it all for you
[23:24:18] <ammar2> samian: aah, generally you'd write that like a[a == 0] = 1
[23:24:23] <grym> xheimlich: good old t.Any
[23:24:36] <samian> ammar2,  right right, but I want to do that when I have a list of indexes
[23:24:46] <odoood> scientific programming sounds pretty cool
[23:24:48] <samian> c++ way would be to iterate through the list of indexes
[23:24:48] <ammar2> samian: the docs for argwhere say, "The output of argwhere is not suitable for indexing arrays. For this purpose use nonzero(a) instead.
[23:24:49] <ammar2> "
[23:24:51] <grym> actually endpoints are fairly easy, just because the stuff you can POST without going insane is pretty simple
[23:24:58] <xheimlich> you can pass straight dicts to json.dumps and *bill burr cursewords again*
[23:24:59] <p-i-> bjs: Thanks!
[23:25:14] <grym> what you do to those things afterwards? that's @property def cussin()
[23:25:24] <xheimlich> but people on the other side don't share a culture with you.
[23:25:45] <grym> xheimlich: depends on the niche you're in
[23:26:01] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[23:26:19] *** Quits: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[23:26:23] *** Joins: xkuru (~xkuru@user/xkuru)
[23:26:55] <graingert> dnode: why do you want to just close the connection and not send headers?
[23:27:06] <odoood> xheimlich: so what's scientific programming culture like
[23:27:09] <ammar2> samian: how are you actually obtaining these indices? argwhere? generally you want them in a format where numpy can easily index into an array with them so it goes fast
[23:27:28] <xheimlich> we don't rewrite the same code over and over again.
[23:27:30] <SnoopJ> flower_, you could probably do: `matches = [p for p in ROOT_PATH.glob("**/*.lock") if len(p.relative_to(ROOT_PATH).parts) <= 2]` which is starting to get kind of ugly. I might just write a generator function instead.
[23:27:45] <xheimlich> web programming has a lot of that. but of course with subtle variants.
[23:27:48] <grym> odoood: depends on the niche you're in  :)
[23:28:13] <xheimlich> anyway, web coders in my experience are very type-aware, but to model the problem domain itself.
[23:28:28] <flower_> SnoopJ, thx. generator funtion?
[23:28:32] <odoood> grym: how about your niche then
[23:28:40] <xheimlich> so if I was a web coder I'd write some code for gravity fields here, some more code for electromagnetic fields there...
[23:28:47] <female_student_4> Text analysis is NLP right?
[23:28:53] <SnoopJ> female_student_4, not necessarily
[23:28:55] <ammar2> samian: I'm asking because there's probably a better way to obtain the indices for what you're doing in the first place :)
[23:28:55] <xheimlich> and then I wouldn't have L and phi and rho anymore.
[23:28:56] <bjs> female_student_4: if the text is natural language
[23:29:08] <xheimlich> I would have types, Pydantic style.
[23:29:17] <female_student_4> aaah okay  thank you SnoopJ and bjs !
[23:29:38] <xheimlich> it *is* basically the same sparse laplacian pseudoinverse problem.
[23:29:38] <SnoopJ> xheimlich, sounds not unlike some work I did with FEniCS once upon a time :)
[23:29:59] <SnoopJ> UFL is certainly domain-specific
[23:30:12] <SnoopJ> (but very cleverly so)
[23:30:17] <grym> odoood: very electrical engineering-y
[23:30:17] *** Quits: female_student_4 (~female_st@82-132-214-184.dab.02.net) (Quit: Client closed)
[23:30:37] <xheimlich> but of course in scientific programming physicists are kind of in on the joke.
[23:30:42] *** Joins: female_student_4 (~female_st@82-132-214-184.dab.02.net)
[23:30:58] <odoood> grym: chips/circuits & related things?
[23:31:04] <xheimlich> in web programming clients want a payment info form.
[23:31:49] <SnoopJ> odoood, lots of ears
[23:32:13] <grym> (which are just RLC circuits in disguise!)
[23:32:26] <grym> odoood: lots of matlabby practices, in any language
[23:32:39] <teut> https://bpa.st/TFFA  bjs I tried to print the sigma from https://www.compart.com/en/unicode/U+03C3   , but I instead got an unreadable character
[23:32:41] <MD500_Pilot> How can I check for something not being in two sets? I can't seem to get it correct: `if drive not in formatted_set or in do_not_use_set:`
[23:32:45] <teut> what did I miss?
[23:33:03] <MD500_Pilot> I want to check to make sure something is not in two different sets
[23:33:11] <odoood> grym: ah. matlab...been a long time since i heard that name
[23:33:12] <bjs> teut: again, files contain *bytes* not characters.
[23:33:22] *** Joins: Pleiades (~admin@193.254.47.212)
[23:33:55] <flower_> SnoopJ, https://stackoverflow.com/questions/7159607/list-directories-with-a-specified-depth-in-python
[23:33:57] <bjs> teut: UTF-8 is _one_ way to interpret those bytes as characters.  UTF-8 says that lowercase sigma are the bytes 0xCF 0x83  (that's 2 bytes)
[23:34:02] <odoood> SnoopJ: lots of ears?
[23:34:06] <habnabit_> MD500_Pilot, there is no shorthand for `if a in b or a in c:`
[23:34:15] <grym> odoood: my background's auditory neurosci
[23:34:16] <flower_> SnoopJ, seems to use something with len too
[23:34:17] <habnabit_> MD500_Pilot, or the inverse
[23:34:29] <bjs> teut: if you wrote those 2 bytes to a file,  then a program that interprets the bytes of the file as if it were UTF-8 would see a sigma
[23:34:33] <grym> odoood: and modeling of it in python and matlab
[23:34:41] <teut> oh byte, I was thinking why are you saying byte when you should say bit
[23:34:41] <MD500_Pilot> I thought that is what I wrote but it does not seem to work
[23:34:43] <odoood> grym: very cool
[23:34:50] <teut> but you meant byte only
[23:34:54] <MD500_Pilot> oh wait
[23:34:56] <habnabit_> MD500_Pilot, `or in x:` is not valid
[23:35:04] <MD500_Pilot> I think I see what I did
[23:35:05] *** Quits: female_student_4 (~female_st@82-132-214-184.dab.02.net) (Client Quit)
[23:35:12] *** Quits: DeadTOm (~deadtom@2001:4b98:dc0:41:216:3eff:fe58:44d0) (Quit: DeadTOm)
[23:35:34] <odoood> i'd like to get into the scientific programming world if i can
[23:35:41] <MD500_Pilot> `if drive not in formatted_set or drive not in do_not_use_set:`
[23:35:49] <teut> so that's the 8 in utf-8
[23:35:55] <bjs> teut: a byte is just a 8-digit binary number.
[23:36:00] <habnabit_> MD500_Pilot, you probably want an 'and' there
[23:36:06] <grym> odoood: it's kind of the other way around for a lot of us: "i have this bag of data and i want to shake it until it tells me what i need"
[23:36:25] <MD500_Pilot> `f drive not in formatted_set and drive not in do_not_use:`
[23:36:29] <MD500_Pilot> `if drive not in formatted_set and drive not in do_not_use:`
[23:36:44] <MD500_Pilot> but what if I want it 'or'
[23:36:49] <teut> each packet of 8 digit will be interpreted by the os in some way
[23:36:54] <xheimlich> current HN fashion is avoid ifs
[23:36:58] <MD500_Pilot> if it is in either set I don't want it
[23:37:02] <teut> 8 bits
[23:37:20] <grym> MD500_Pilot: so if drive not in set.union(...) ?
[23:37:25] <greatgatsby> any drawbacks to using click but with class methods?  I want to be able to have multiple commandline tools with the same subcommands and options, but instantiated in different ways.  Was thinking of using click within a class, or possibly pseudo-singleton "globals" instead.
[23:37:29] <bjs> teut: maybe you should move to -offtopic
[23:37:37] <xheimlich> also  parse not wabbawabba
[23:37:40] <teut> ok
[23:37:55] <odoood> grym: that makes sense. but then seems it'd be difficult for anyone who is coming from the opposite direction cause it seems you need that expertise to even begin to approach the problem
[23:38:00] <grym> odoood: yep
[23:38:06] <odoood> sad
[23:38:08] <odoood> lol
[23:38:33] <MD500_Pilot> @grym hummm don't know that one....have to look at it
[23:38:34] *** Joins: waynew (~wayne@user/waynew)
[23:39:24] <odoood> solving problems with code in my science bg is what drove me to programming but ended up in the web development arena
[23:39:36] <xheimlich> scientific programming is sort of an afterthought
[23:40:07] <odoood> xheimlich: that's kind of how programming started for me
[23:40:21] <xheimlich> no one does the -- stand back ima do science -- thing.
[23:41:21] *** Joins: audiocat (~audio@2603-8081-1800-00af-6b30-32e7-252a-a3fd.res6.spectrum.com)
[23:41:33] <odoood> doesn't seem like there'd be any role for someone to whom scientists/researchers could (or would want to) outsource their programming needs
[23:42:46] <kosh> we have support staff that help with programming
[23:42:50] <xheimlich> ahh yes. scientists with forked up code often want this. but who will fund it.
[23:43:03] <kosh> the super computing center here does that
[23:43:23] <odoood> kosh: who is "we" and where's "here"?
[23:43:32] <SnoopJ> odoood, the most relevant field is called "high-performance computing" but there are plenty of niches like what you describe that can be filled outside of HPC
[23:43:45] <kosh> I am a phd  student at forschungzentrum julich
[23:43:50] <SnoopJ> the limiting factor would be your familiarity with the problem domain
[23:44:05] *** Quits: wallace_mu200 (~wallace_m@pool-173-66-6-41.washdc.fios.verizon.net) (Quit: Client closed)
[23:44:28] <odoood> SnoopJ: right - but that sounds like it could be quite a limiting factor :/
[23:44:37] <SnoopJ> odoood, operating as an individual it absolutely can be
[23:45:23] <odoood> kosh: cool - no positions open for that support team are there? lol
[23:45:25] <xheimlich> odoood: then -- if you just wanna be in this for kicks you might want to just talk/dm/email scientists
[23:45:40] <kosh> odoood, not a clue
[23:45:41] <SnoopJ> there are plenty of companies that write software for scientific contexts that employ non-scientists for this-or-that. I once worked with a company that employed a few non-scientists to do their UI stuff for $domain_specific_thing
[23:45:42] *** Joins: ffledgling (~textual@2620:10d:c090:400::5:e083)
[23:45:59] <SnoopJ> (most of their employees were from the relevant subfield of physics, though)
[23:46:06] <xheimlich> young, doing something out of the box.
[23:46:19] <xheimlich> for a while I hung in the slack channel for a group of TDA researchers.
[23:46:21] <NoImNotNineVolt> SnoopJ: how'd you find the pay?
[23:46:25] <xheimlich> = topological data analysis.
[23:46:26] <kosh> scientific code is not that easy to make fast
[23:46:31] <kosh> the problem is understanding the math
[23:47:05] <xheimlich> I was sort of doing some intern/RA work trying out different varieties of an algorithm to see what happens. While they Did The Math when something clicked.
[23:47:05] <NoImNotNineVolt> in my experience the compensation in sciencey contexts is less than stellar.
[23:47:11] <odoood> math I can understand...err I guess that depends on the level
[23:47:13] <SnoopJ> NoImNotNineVolt, I wasn't employed by them, but they are based in Boulder, so...enough to live in Boulder.
[23:47:22] <NoImNotNineVolt> hm. fair enough.
[23:47:33] <xheimlich> This as a bearded 35-y.o. dude. It was gratifying. Made me go back to grad school eventually.
[23:47:58] <SnoopJ> odoood, "just" knowing linear algebra can get you pretty far. If you want to get into it, the SciPy conference would be a good thing to look at. I believe they maintain a jobs listing for each conference
[23:48:14] <SnoopJ> (next meeting is next month!)
[23:48:15] <NoImNotNineVolt> ah, that's good to know.
[23:48:26] <xheimlich> I think we don't consider enough the possibility of doing something for food and something else for the soul.
[23:48:34] <odoood> SnoopJ: thx may try and hit it up
[23:48:42] <xheimlich> Amateurism has a very bad rep nowadays.
[23:48:49] <odoood> xheimlich: it's all i think about
[23:49:09] <emerent> xheimlich: the "for food" thing is eating up so much time tho
[23:49:16] <SnoopJ> NoImNotNineVolt, the downside at that specific place is that they were very much a startup living on whatever was on the wind. Sudden lurches in DOE policy (there were more than a few of them in recent memory...) could change the circumstances in a big way.
[23:49:23] <odoood> emerent: i see what you did there
[23:49:32] <SnoopJ> But this is pretty much how scientific *anything* goes, at least in the US
[23:49:44] <grym> soft money, wooooooo
[23:49:48] <xheimlich> then: I pursued so many lines of personal growth that by the time I was 40 I was a bit jaded. Also clearly not going to make any significant contribution anywhere.
[23:49:52] <NoImNotNineVolt> heh
[23:50:12] *** Joins: wallace_mu200 (~wallace_m@pool-173-66-6-41.washdc.fios.verizon.net)
[23:50:18] <xheimlich> no nobel prize for me.
[23:50:25] *** Joins: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net)
[23:50:26] <odoood> xheimlich: also i don't exactly have a rolodex of scientists I can just contact out-of-the blue to see what projects they're working on that might need some programming support lol
[23:50:39] <xheimlich> I don't regret my 30s, it was just time to move on :)
[23:50:52] <xheimlich> odoood: man, academics are more approachable than one would think on averafe.
[23:50:53] <SnoopJ> odoood, my point re: poking around is that this kind of work (as an individual) is very much about establishing those relationships!
[23:51:08] <xheimlich> The other day Jean-Yves Girard answered an email I sent him.
[23:51:15] *** Quits: Julian (~tos9@151.66.53.132) (Quit: leaving)
[23:51:24] <xheimlich> I almost regret wasting the limited time he still has on this earth.
[23:51:30] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[23:51:50] *** Joins: AlwaysInTime (~AlwaysInT@c83-248-142-40.bredband.tele2.se)
[23:51:57] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 258 seconds)
[23:51:58] <AlwaysInTime> In a pandas dataframe how do I remove all rows that contain numbers except the ones that end or start with 360?
[23:52:00] <odoood> well, this is the beginning of my poking efforts :) I appreciate the recommendations and advice
[23:52:17] *** Joins: thiras (~thiras@user/thiras)
[23:53:05] <rjwiii> Hello. I'm writing a script to pass an argument to a shell script and I want to run the shell script in the background and let the python script end (disown the started shell script?). I'm trying to use subprocess.Popen. Not working so far. Any ideas?
[23:53:32] *** Joins: dkmueller (~dkmueller@2a01:c22:6e63:5d00:b16c:35bc:dfd6:881)
[23:53:43] <odoood> xheimlich: that is cool he responded
[23:54:28] <SnoopJ> rjwiii, is running the script the last thing the Python program will do?
[23:55:34] <rjwiii> SnoopJ: Yes. I have a "ARE YOU SURE" prompt, than the shell script gets executed in an "if" statement ...
[23:55:45] *** Quits: egon (~egon@user/egon) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:56:34] *** Joins: egon (~egon@user/egon)
[23:58:02] *** Joins: crs (~f@91.212.33.50)
[23:58:05] *** Quits: jinsun (~quassel@182.77.87.72) (Ping timeout: 258 seconds)
[23:58:57] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[23:59:19] *** Joins: magla (~gelignite@55d41093.access.ecotel.net)
[23:59:28] <axisys> df[['color','size']] works .. but how do I print only rows where color is red?
