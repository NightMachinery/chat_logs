[00:00:41] *** Quits: y1n (~y1n@84-115-64-46.wifi.dynamic.surfer.at) (Ping timeout: 248 seconds)
[00:04:57] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[00:05:31] *** Joins: wyclif (~wyclif@user/wyclif)
[00:07:28] *** Joins: ubert (~Thunderbi@178.115.55.14.wireless.dyn.drei.com)
[00:08:28] *** Quits: BUSY (~BUSY@user/busy) (Read error: Connection reset by peer)
[00:08:33] *** Quits: Enitin (~Enitin@82.102.22.84) (Remote host closed the connection)
[00:08:51] *** Joins: Enitin (~Enitin@82.102.22.84)
[00:08:58] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[00:09:22] *** Quits: Enitin (~Enitin@82.102.22.84) (Read error: Connection reset by peer)
[00:10:02] *** Quits: georgios (~georgios@user/georgios) (Ping timeout: 272 seconds)
[00:10:39] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[00:11:00] *** Joins: wyclif (~wyclif@user/wyclif)
[00:11:04] *** Quits: schumaml (~schumaml@p57b7e98f.dip0.t-ipconnect.de) (Quit: WeeChat 3.0.1)
[00:12:47] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[00:12:55] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[00:12:56] *** Quits: be3uykpy (~be3uykpy@2a00:a040:19a:b060:6993:c8f6:4710:a4f5) (Ping timeout: 256 seconds)
[00:13:10] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[00:13:16] *** Joins: y1n (~y1n@84-115-64-46.wifi.dynamic.surfer.at)
[00:16:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[00:16:30] *** Joins: wyclif (~wyclif@user/wyclif)
[00:16:49] *** Quits: hyper_dave (~hyper_dav@197.156.107.174) (Ping timeout: 268 seconds)
[00:20:17] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Ping timeout: 258 seconds)
[00:20:31] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[00:20:36] *** Quits: kuler (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[00:21:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[00:22:01] *** Joins: wyclif (~wyclif@user/wyclif)
[00:24:12] *** Joins: Enitin (~Enitin@82.102.22.84)
[00:24:45] *** Joins: yogoyo (~paddy@user/yogoyo)
[00:25:37] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 244 seconds)
[00:27:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[00:27:31] *** Joins: wyclif (~wyclif@user/wyclif)
[00:28:53] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[00:29:07] *** Joins: hyper_dave (~hyper_dav@197.156.95.179)
[00:29:38] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[00:30:29] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[00:30:48] *** Joins: nbao (~nbao@187.20.162.127)
[00:30:50] *** Joins: jinsun (~quassel@user/jinsun)
[00:31:51] *** Quits: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[00:32:09] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[00:32:39] *** Joins: TonyStone (TonyStone@gateway/vpn/airvpn/tonystone)
[00:33:01] *** Joins: wyclif (~wyclif@user/wyclif)
[00:33:26] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:34:20] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[00:35:00] *** Joins: gloomy_desktop (~ldorigo@81.161.149.37)
[00:35:27] *** Quits: Hax0r (~Hax0r@87.101.193.195) (Quit: Leaving)
[00:36:15] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:37:01] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[00:37:53] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[00:39:52] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[00:40:19] *** Quits: jdmark2 (~jdmark@67.8.137.130) (Quit: Leaving)
[00:40:35] *** Joins: jdmark (~jdmark@67.8.137.130)
[00:40:41] *** Joins: georgios (~georgios@user/georgios)
[00:42:05] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[00:43:19] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[00:44:02] *** Joins: wyclif (~wyclif@user/wyclif)
[00:44:03] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Ping timeout: 258 seconds)
[00:44:26] *** Quits: ExeciN (~ExeciN@user/nicexe) (Quit: Client closed)
[00:45:05] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[00:45:50] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[00:47:02] *** Quits: ubert (~Thunderbi@178.115.55.14.wireless.dyn.drei.com) (Ping timeout: 268 seconds)
[00:47:27] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[00:48:53] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 268 seconds)
[00:49:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[00:49:33] *** Joins: wyclif (~wyclif@user/wyclif)
[00:49:53] *** Joins: Enitin (~Enitin@82.102.22.84)
[00:50:52] *** Joins: khrbt (~znc@user/khrbt)
[00:51:50] *** Quits: khrbt_ (~znc@user/khrbt) (Ping timeout: 252 seconds)
[00:52:04] <sybariten> Soo.... I'm getting lots of "unnecessary elif after return" complaints here from my linter, or whatever the term is.... and i'm starting to realize that maybe multiple if's, instead, is not illegal?
[00:52:23] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 252 seconds)
[00:52:55] <nedbat> sybariten: can you link us to the code?
[00:52:57] *** Quits: twobitsprite (~twobitspr@195.181.171.237) (Ping timeout: 248 seconds)
[00:54:15] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[00:55:04] *** Joins: twobitsprite (~twobitspr@195.181.171.237)
[00:55:05] <sybariten> nedbat: yes sure.  Here is what i have now, and which seems to pass the linter without problem. The second function is how it looked before, as far as i can remember. Pretty sure it looked like that. https://bpa.st/YGAA
[00:56:34] *** Quits: TonyStone (TonyStone@gateway/vpn/airvpn/tonystone) (Ping timeout: 256 seconds)
[00:58:52] *** Joins: masber (~masber@vpn-89.cscs.ch)
[00:59:11] <nedbat> sybariten: i don't see why a linter would complain.  if you get the code into a complaining state again, we can look at it.
[00:59:22] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[00:59:33] <sybariten> I mean I can show another one it cmplains about still
[01:00:20] <sybariten> https://bpa.st/VRVQ   but maybe that one is more obvious somehow. I guess the idea here is that i shouldn
[01:00:22] *** Joins: V1mV1m (~VimVim@85.191.5.143)
[01:00:25] *** Quits: torandu (~sean@94.10.125.197) (Ping timeout: 248 seconds)
[01:01:00] <sybariten> shouldn't have an else clause at all, but the default should be to return True, but above that is the if-thing that picks up exceptions from that and then it will exit the clause
[01:01:02] *** Quits: fflam_ (~mdt@ip70-179-20-127.sd.sd.cox.net) (Quit: WeeChat 3.2)
[01:01:13] *** Quits: y1n (~y1n@84-115-64-46.wifi.dynamic.surfer.at) (Ping timeout: 268 seconds)
[01:01:13] *** Joins: torandu (~sean@94.10.125.197)
[01:01:38] *** Joins: extropiator (~extropiat@162.253.68.202)
[01:01:50] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 268 seconds)
[01:02:01] *** Quits: manin (~x@185.242.190.95) (Ping timeout: 248 seconds)
[01:02:27] *** Joins: fflam (~mdt@ip70-179-20-127.sd.sd.cox.net)
[01:03:40] *** Quits: VimVim (~VimVim@85.191.5.103) (Ping timeout: 268 seconds)
[01:04:13] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[01:04:27] *** Quits: magla (~gelignite@55d454e5.access.ecotel.net) (Quit: Stay safe!)
[01:04:29] <nedbat> sybariten: if the complaint is that you don't need the else, then this is a matter of taste.  You can disable those messages perhasp
[01:05:18] <sybariten> nedbat: yeah i can't explicitly do that, this goes through a school system... but i got rid of those complaints by using repeated if's and i think the code still works, so...  :)
[01:05:45] *** Quits: torandu (~sean@94.10.125.197) (Ping timeout: 248 seconds)
[01:06:35] <nedbat> sybariten: ok :)
[01:07:06] <sybariten> I have other complaints now though (well not new ones), that i will need to ask about  ....
[01:08:22] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:09:17] *** Quits: georgios (~georgios@user/georgios) (Ping timeout: 245 seconds)
[01:09:44] <sybariten> https://bpa.st/UV7Q  heres a somewhat out-of-context if-thing which makes the linter say:    W0707: Consider explicitly re-raising using the 'from' keyword (raise-missing-from)     I guess i'm not using the raise thing correctly?
[01:09:55] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[01:09:59] *** Joins: wyclif (~wyclif@user/wyclif)
[01:10:12] *** Quits: extropiator (~extropiat@162.253.68.202) (Quit: Client closed)
[01:10:18] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:991b:cbde:e8e2:bbb2) (Quit: Leaving)
[01:10:37] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[01:11:11] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[01:11:44] <bjs> sybariten: `raise e2 from e1` keeps the "original" exception linked to the new one explicitly
[01:12:03] <bjs> so the error would say something like "the above e1 exception was a direct cause of the following e2"
[01:12:23] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:12:34] <bjs> (or say `from None` to remove mentions of e1 entirely)
[01:12:43] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[01:13:07] *** Joins: extropiator (~extropiat@162.253.68.205)
[01:13:13] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 248 seconds)
[01:14:08] *** Joins: khrbt_ (~znc@user/khrbt)
[01:14:08] *** Joins: y1n (~y1n@84-115-64-46.wifi.dynamic.surfer.at)
[01:14:38] <sybariten> Hmmm i don't really know what error1 and 2 would be in this case....  but actually, for me personally i could just as well get rid of these try except things altogether, this routine is part of an internal thing which never gets user input so once it works it should work...
[01:14:43] *** Gustavo6046_ is now known as Gustavo6046
[01:14:49] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[01:15:15] <bjs> sybariten: well you say `except IndexError: raise ValueError(...)` where you could say `except IndexError as e: raise ValueError(...) from e`  although I think the linter is being a little overzealous here
[01:15:16] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 272 seconds)
[01:15:30] *** Joins: wyclif (~wyclif@user/wyclif)
[01:19:05] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 248 seconds)
[01:20:09] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[01:21:01] *** Joins: wyclif (~wyclif@user/wyclif)
[01:22:14] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 272 seconds)
[01:23:01] *** Joins: Enitin (~Enitin@82.102.22.84)
[01:23:13] *** Quits: akk (~akk@174-28-98-206.albq.qwest.net) (Quit: +++)
[01:24:01] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 268 seconds)
[01:24:15] *** Joins: georgios (~georgios@user/georgios)
[01:25:28] *** Quits: gloomy_desktop (~ldorigo@81.161.149.37) (Ping timeout: 256 seconds)
[01:25:47] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[01:26:01] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[01:26:05] *** Joins: extropiator92 (~extropiat@107.181.178.96)
[01:26:22] *** Quits: extropiator (~extropiat@162.253.68.205) (Ping timeout: 246 seconds)
[01:26:32] *** Joins: wyclif (~wyclif@user/wyclif)
[01:28:26] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:30:03] *** Joins: Wulf (~Wulf@user/wulf)
[01:30:55] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[01:33:11] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[01:33:29] *** Quits: hyper_dave (~hyper_dav@197.156.95.179) (Ping timeout: 248 seconds)
[01:34:32] *** Quits: LiftLeft (~LiftLeft@154.21.28.123) (Ping timeout: 256 seconds)
[01:35:13] <sazawal> Hi all. How do I listen to user inputs from the console in a Twisted framework? Here is my sample code of server and client using Twisted (TCP with TSL) https://bpa.st/5LHA . I know threading is not recommended inside Twisted as it is an event-based system. How do I get a callback if user gives an input in the console running server or client?
[01:35:27] *** Joins: hyper_dave (~hyper_dav@197.156.107.83)
[01:35:52] <sazawal> The sample is a working code.
[01:36:58] *** Quits: rubion (~rubion@cpc124316-ayle4-2-0-cust156.15-2.cable.virginm.net) (Ping timeout: 268 seconds)
[01:37:04] <KirkMcDonald> sazawal: Urwid can interoperate with Twisted, for example.
[01:37:39] <KirkMcDonald> http://urwid.org/reference/main_loop.html#twistedeventloop
[01:37:46] *** Joins: vicfred (~vicfred@user/vicfred)
[01:39:07] <sazawal> KirkMcDonald, Hmm interesting
[01:40:01] *** Quits: extropiator92 (~extropiat@107.181.178.96) (Ping timeout: 246 seconds)
[01:40:30] *** Joins: wolfgang_ (~wolfgang@101.174.6.197)
[01:41:05] <sazawal> Didn't know such a thing exists. Thanks. But I don't want to make an interface really.
[01:42:01] *** Quits: wolfgang (~wolfgang@101.174.170.3) (Ping timeout: 248 seconds)
[01:42:35] *** wolfgang_ is now known as wolfgang
[01:45:19] *** Joins: F0rTh3J3st (~F0rTh3J3s@38.70.11.54)
[01:45:57] *** Quits: F0rTh3J3st (~F0rTh3J3s@38.70.11.54) (Client Quit)
[01:46:00] *** Joins: ogis (~Android@p2037202-ipngn201011tokaisakaetozai.aichi.ocn.ne.jp)
[01:47:20] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:50:25] *** Quits: rememberYou (~someone@user/rememberyou) (Read error: Connection reset by peer)
[01:51:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[01:51:58] *** Quits: sharksauce (~sharksauc@user/sharksauce) (Quit: WeeChat 2.8)
[01:52:06] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[01:52:06] *** Joins: paulo (paulo@paulo.jujube.ircnow.org)
[01:52:14] <paulo> snakes
[01:53:00] *** Joins: wyclif (~wyclif@user/wyclif)
[01:56:51] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[01:57:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[01:58:02] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Ping timeout: 258 seconds)
[01:58:32] *** Joins: wyclif (~wyclif@user/wyclif)
[02:00:01] <sybariten> bjs: ok thanks
[02:00:35] *** Quits: y1n (~y1n@84-115-64-46.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[02:00:35] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 252 seconds)
[02:01:02] <sybariten> bjs: but, i don't know if there's way too few details to comment on this, but.... if you imagine that the raise things were put in there during development, for "debugging" i guess yuou could say....  would you say its okay do don't have them at all now that things work?
[02:01:28] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[02:01:29] <bjs> sybariten: if the things are put there for debugging and are going to get deleted why do you care what the linter says at all?
[02:01:50] <bjs> stuff put in for debugging is almost always horrible code that you *hope* the linter would complain about :)
[02:02:23] <bjs> so yeah, once things work you can remove them
[02:03:07] *** Quits: masber (~masber@vpn-89.cscs.ch) (Ping timeout: 246 seconds)
[02:03:13] *** Joins: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net)
[02:03:24] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[02:03:48] <sybariten> bjs: hehe i was orignally not really thinking of removing them... until i ran it through the linter.
[02:04:02] *** Joins: wyclif (~wyclif@user/wyclif)
[02:04:06] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:04:57] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[02:05:10] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[02:06:26] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[02:07:43] *** Joins: schumaml (~schumaml@dslb-178-007-207-243.178.007.pools.vodafone-ip.de)
[02:09:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[02:09:13] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[02:09:34] *** Joins: wyclif (~wyclif@user/wyclif)
[02:10:38] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Quit: Leaving)
[02:11:45] *** Joins: monkey_ (~user@190.104.116.134)
[02:14:27] *** Joins: y1n (~y1n@84-115-65-252.wifi.dynamic.surfer.at)
[02:14:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[02:15:04] *** Joins: wyclif (~wyclif@user/wyclif)
[02:15:13] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 268 seconds)
[02:16:04] *** Quits: hyper_dave (~hyper_dav@197.156.107.83) (Ping timeout: 272 seconds)
[02:16:24] *** Joins: torandu (~sean@94.10.125.197)
[02:16:34] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:17:45] *** Joins: hyper_dave (~hyper_dav@197.156.107.34)
[02:19:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[02:19:58] *** Quits: sazawal (~sazawal@122.161.189.200) (Quit: Leaving)
[02:20:35] *** Joins: wyclif (~wyclif@user/wyclif)
[02:20:53] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[02:24:56] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 272 seconds)
[02:25:05] *** Quits: torandu (~sean@94.10.125.197) (Ping timeout: 268 seconds)
[02:25:27] <bjs> sybariten: well if you intend to keep them around then I'd think about what the linter says and why (even if quite often you might just decide to disable the linter warning for it after thinking)
[02:25:34] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[02:25:43] <bjs> if you want to remove it then what the linter says doesn't really matter as you're going to remove it anyway :)
[02:25:53] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 252 seconds)
[02:25:55] *** Joins: reset (~reset@user/reset)
[02:26:05] *** Joins: wyclif (~wyclif@user/wyclif)
[02:27:43] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[02:30:48] *** Joins: ogis_ (~Android@p311253-omed01.osaka.ocn.ne.jp)
[02:31:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[02:31:06] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[02:31:21] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Remote host closed the connection)
[02:31:36] *** Joins: wyclif (~wyclif@user/wyclif)
[02:31:45] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[02:31:52] *** Joins: ubert (~Thunderbi@178.115.55.14.wireless.dyn.drei.com)
[02:32:41] *** Quits: ogis (~Android@p2037202-ipngn201011tokaisakaetozai.aichi.ocn.ne.jp) (Ping timeout: 248 seconds)
[02:34:12] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Remote host closed the connection)
[02:34:13] *** Joins: schumaml1 (~schumaml@ipservice-092-211-206-089.092.211.pools.vodafone-ip.de)
[02:35:59] *** Joins: extropiator (~extropiat@107.181.178.91)
[02:36:10] *** Quits: schumaml (~schumaml@dslb-178-007-207-243.178.007.pools.vodafone-ip.de) (Ping timeout: 268 seconds)
[02:36:48] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[02:37:08] *** Joins: wyclif (~wyclif@user/wyclif)
[02:37:32] *** Quits: JavaBean (~JavaBean@user/javabean) (Read error: Connection reset by peer)
[02:38:01] *** Quits: y1n (~y1n@84-115-65-252.wifi.dynamic.surfer.at) (Ping timeout: 248 seconds)
[02:41:27] *** Joins: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa)
[02:42:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[02:42:38] *** Joins: wyclif (~wyclif@user/wyclif)
[02:42:48] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[02:43:57] *** Joins: ExpiredKebab (~sgreadly@2407:7000:a2f5:e803:212d:940:ee89:421f)
[02:44:51] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[02:45:51] *** Joins: seednode (~seednode@user/seednode)
[02:46:03] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 268 seconds)
[02:47:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[02:48:08] *** Joins: wyclif (~wyclif@user/wyclif)
[02:48:39] *** Quits: varaindemian (uid73404@id-73404.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[02:49:44] *** Quits: ubert (~Thunderbi@178.115.55.14.wireless.dyn.drei.com) (Ping timeout: 268 seconds)
[02:50:54] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[02:51:14] *** Joins: y1n (~y1n@84-115-65-117.wifi.dynamic.surfer.at)
[02:54:09] *** Quits: Akuli (~Akuli@82-203-165-39.bb.dnainternet.fi) (Quit: Leaving)
[02:55:27] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[02:55:56] *** Joins: torandu (~sean@94.10.125.197)
[02:57:29] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:58:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[02:58:59] *** Joins: JavaBean (~JavaBean@user/javabean)
[02:59:09] *** Joins: wyclif (~wyclif@user/wyclif)
[02:59:35] *** Joins: Linux77 (~kvirc@187-126-71-30.user3p.veloxzone.com.br)
[03:00:25] *** Quits: torandu (~sean@94.10.125.197) (Ping timeout: 248 seconds)
[03:00:50] *** Quits: IgIgOrzoy (~IgIgOrzoy@user/igigorzoy) (Quit: Client closed)
[03:03:03] *** Joins: lethu (~lethu@user/lethu)
[03:04:09] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[03:04:40] *** Joins: wyclif (~wyclif@user/wyclif)
[03:05:14] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[03:07:14] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[03:09:04] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:11:08] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:12:38] *** Quits: dudek (~dudek@185.150.236.112) (Quit: Leaving)
[03:14:26] *** Joins: torandu (~sean@94.10.125.197)
[03:17:52] *** Joins: cjb (~cjb@user/cjb)
[03:17:58] <sveinse> What's the shortest way to consume a generator when the result aren't actually going to be used? list(mygenerator()) ?
[03:19:01] <nedbat> sveinse: yes, though that makes a list that will be discarded.
[03:19:16] <phy1729> for _ in foo: pass ?
[03:19:20] *** Quits: torandu (~sean@94.10.125.197) (Ping timeout: 268 seconds)
[03:19:57] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[03:20:30] <nedbat> sveinse: if it's a generator of numbers, then sum(mygenerator()) would work too
[03:21:10] *** Joins: wyclif (~wyclif@user/wyclif)
[03:21:23] <sveinse> hmm. yes, then any() and all() also will work
[03:21:45] <sveinse> maybe not any()...
[03:22:12] <sveinse> or all() if any elements returns False
[03:22:36] *** Joins: matsaman (~matsaman@user/matsaman)
[03:23:34] <summonner> defensive coding would be a result = mygenerator()  then if result: blah else: print("no results")
[03:24:12] <summonner> otherwise you'd risk a runtime error being thrown
[03:24:15] *** Quits: monkey_ (~user@190.104.116.134) (Remote host closed the connection)
[03:24:20] *** Quits: Linux77 (~kvirc@187-126-71-30.user3p.veloxzone.com.br) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[03:25:06] *** Joins: dre (~dre@2001:8003:c932:c301:76d5:786e:6c0b:b2c7)
[03:26:01] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[03:26:24] <sveinse> Yes. The use case for not acutally using the results from a generator function is for pytest, where I'm expecting an exception. The test of the actual results are done in another test
[03:26:41] *** Joins: wyclif (~wyclif@user/wyclif)
[03:27:58] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[03:28:37] *** Joins: monkey_ (~user@190.104.116.134)
[03:29:53] *** Quits: monkey_ (~user@190.104.116.134) (Remote host closed the connection)
[03:31:21] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[03:32:11] *** Joins: wyclif (~wyclif@user/wyclif)
[03:33:25] *** Joins: cotsuka (~cameronot@2001:470:69fc:105::8de)
[03:35:15] *** Quits: d3sync (~d3sync@130.43.80.239.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[03:35:42] *** Joins: d3sync (~d3sync@130.43.80.239.dsl.dyn.forthnet.gr)
[03:35:47] *** Quits: jancoow (~jancoow@user/jancoow) (Ping timeout: 258 seconds)
[03:37:13] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[03:37:43] *** Joins: wyclif (~wyclif@user/wyclif)
[03:39:10] *** Joins: Wafficus (~user@70.126.240.148)
[03:39:35] <Wafficus> hey there, can anyone please help me figure out how to utilize the 'wand' module to create imagemagick based thumbnails for my site?
[03:40:57] *** Quits: y1n (~y1n@84-115-65-117.wifi.dynamic.surfer.at) (Ping timeout: 248 seconds)
[03:42:09] <cluelessperson> Wafficus, I feel their documentation is extremely clear about how to use the module.
[03:42:28] <cluelessperson> Wafficus, as for the website, you'll probably want to run the code to convert the image into thumbnails at upload.
[03:42:33] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[03:42:37] <cluelessperson> Wafficus, what specific questions do you have?
[03:42:42] * cluelessperson might take off to go swimming though
[03:43:13] *** Joins: wyclif (~wyclif@user/wyclif)
[03:45:18] <Wafficus> yeah its the question of how I can possibly create a 'thumbs' directory accordingly
[03:45:37] <Wafficus> this is what I have https://bpa.st/DE5Q
[03:45:51] <Wafficus> I believe I would have to do this in Line 38
[03:45:59] <cluelessperson> I remember this code style
[03:46:56] <cluelessperson> Wafficus, I would suggest hashing the image, creating a "thumbnails" directory, and naming the thumbnail the hash of the image.
[03:47:35] <cluelessperson> Wafficus, so, right off, you're finding out that it's getting messy to throw all this code in a single file.
[03:47:49] <Wafficus> so far the image exist on the site in 'images/ArtGallery', and there are separate neat folders for all different art sections
[03:47:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[03:47:54] <cluelessperson> Wafficus, you could create a template function where you pass it some variables to fill in a webpage template.
[03:48:15] <Wafficus> well, lets just stick with this first and refactor later
[03:48:22] <Wafficus> I kind of just want the thumbnails done first
[03:48:23] <cluelessperson> Wafficus, so you'd run a script to make thumbnails for the existing images,  and just thumbnail every future image that's uploaded
[03:48:44] *** Joins: wyclif (~wyclif@user/wyclif)
[03:48:46] <Wafficus> yeah that's the goal, but how to achieve this in the current loop is where I'm a bit lost
[03:48:53] *** Joins: tims (~tims@115-64-241-2.tpgi.com.au)
[03:49:17] <cluelessperson> Wafficus, I just noticed this is a static gallery
[03:49:20] <Wafficus> it was just fine until I realized the page takes forever to load because the images are so dang big (which is fine in terms of it working, but not really that great in terms of page loda)
[03:50:20] <bpalmer> you mean the number of images is causing it to slow down (because you're repeatedly globbing over the directory?), or does the actual image size matter?
[03:50:32] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[03:50:53] *** Joins: Celeo (~Celeo@user/celeo)
[03:50:55] <Wafficus> well, the page itself takes forever to load
[03:50:58] <cluelessperson> Wafficus, when you say page loading,   I would expect you're running this in advance to create a static gallery.
[03:51:00] <bpalmer> oh, you mean, when showing the full size images in the gallery, it's slow; and you want to speed it up by using smaller thumbnails to preview first.
[03:51:05] <Wafficus> bad oversight on my part since the original images are pretty dang big
[03:51:15] <cluelessperson> ah
[03:51:16] <Wafficus> yeah bpalmer I would like to speed it up with just thumbnails, correct
[03:51:30] <cluelessperson> Wafficus, so, the logic is this
[03:51:32] <Wafficus> I know its doable, its just frustrating since I am like 75% totally done
[03:51:50] <cluelessperson> if not thumbails directory:  mkdir thumbnails
[03:52:25] <cluelessperson> for each image:  if not thumbnails/image.ext:  create_thumbnail(path_to_image, thumbnail_path)
[03:52:42] <cluelessperson> then simply provide thumbnail paths in the site instead of the full size
[03:52:50] <cluelessperson> or,  view the thumbnails, and link to the full size
[03:53:36] <Wafficus> yeah that's what I wanted to do
[03:53:38] <Wafficus> the second option
[03:53:52] <Wafficus> 'or, view the thumbnails, and link to the full size'
[03:54:16] <cluelessperson> Wafficus, You'd create a link,  <a href="{full_size_thumbnail_path}"> </a>
[03:54:26] <Wafficus> yeah I already have that present
[03:54:28] <cluelessperson> Wafficus, but inside the link, display an actual an image of the thumbnail
[03:54:32] *** Joins: y1n (~y1n@84-115-65-87.wifi.dynamic.surfer.at)
[03:54:52] <cluelessperson> <a href={full_size_path}><img src={thumbnail} /></a>
[03:55:01] <cluelessperson> That would have a smaller picture that's clickable.
[03:55:02] <Wafficus> right that makes sense
[03:55:09] <Wafficus> its the image magick part that's getting to me
[03:55:20] <cluelessperson> Wafficus, https://docs.wand-py.org/en/0.6.6/
[03:55:30] <cluelessperson> you'd literally copy their example into your code, basically.
[03:55:44] <cluelessperson> accounting for whatever sizing scheme you want to go with.
[03:56:00] <cluelessperson> probably a max_height and max_width, and touch from the inside.
[03:56:36] *** Joins: schumaml2 (~schumaml@dslb-092-074-010-022.092.074.pools.vodafone-ip.de)
[03:56:52] <Wafficus> yeah I just want 25% height and 25% width for all current images
[03:57:35] *** Quits: schumaml1 (~schumaml@ipservice-092-211-206-089.092.211.pools.vodafone-ip.de) (Ping timeout: 268 seconds)
[03:58:07] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[03:58:21] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[03:58:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[03:59:44] *** Joins: wyclif (~wyclif@user/wyclif)
[04:00:01] <AhmedAmerican> is array performance is more better than normal list?
[04:00:22] <cluelessperson> AhmedAmerican, depends on what you mean "better"
[04:00:22] <mefistofeles> AhmedAmerican: as in numpy arrays?
[04:00:27] <AhmedAmerican> Yes
[04:00:40] *** Quits: Caesar-EW (~Caesar-EW@84.213.107.109) (Ping timeout: 268 seconds)
[04:01:01] <cluelessperson> AhmedAmerican, low level arrays *are* faster, but are *limited* to an exact size you set in advance.
[04:01:10] <mefistofeles> AhmedAmerican: it depends on what you want to do with them
[04:01:15] <FunkyBob> after all, python has a built in array lib- https://docs.python.org/3/library/array.html
[04:01:29] <cluelessperson> AhmedAmerican, Think of an array as "cleaning off your desk for exactly how much space you need"
[04:01:34] <mefistofeles> FunkyBob: oh, nice, I didn't know that one
[04:01:35] *** Quits: bitdex_ (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 244 seconds)
[04:01:43] <cluelessperson> AhmedAmerican, Think of a list as "clearing each bit as you need it"
[04:01:45] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[04:01:46] <cluelessperson> they have different uses
[04:02:47] <cluelessperson> AhmedAmerican, for most things, lists are perfectly fine, and you need dynamic sizing anyway.   For things like images, you need as much speed as possible on a limited array, so it makes sense.
[04:02:53] <cluelessperson> AhmedAmerican, but there are always tradeoffs.
[04:03:08] *** Quits: lethu (~lethu@user/lethu) (Quit: Quit())
[04:04:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[04:04:25] <AhmedAmerican> well i were looping over multiple pages and created a generator of generators which i saved it later to a list and then generated a DataFrame using pandas, i was thinking to store the generators into array to gain more performance.
[04:05:05] <cluelessperson> it really depends on what you were doing and how.
[04:05:16] *** Joins: wyclif (~wyclif@user/wyclif)
[04:05:20] <cluelessperson> but you could express that work as
[04:05:51] <AhmedAmerican> Hmm, in that case , here's my code https://bpa.st/DD3A where am looking to change `allin` with an array
[04:05:58] <cluelessperson> loop_1_iterations * loop_2_iterations * amount_of_instructions
[04:06:15] <Wafficus> how do I check if a directory named 'thumbnails' exists?
[04:06:39] <Wafficus> I did write down your previous logic points as comments for todo items though, just trying to act upon them
[04:06:58] <cluelessperson> Wafficus,   I'd google "pathlib check if path exists"
[04:07:01] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2)
[04:07:17] <Wafficus> thanks
[04:07:43] <cluelessperson> Wafficus, I'm more than happy to help you build this stuff out and improve your styling/design,  but there's a boating party on lake union across the street and I want to go swimming, and then I'm going bouldering tonight at 9. :P
[04:08:02] <cluelessperson> I'm online all the time, so feel free to message me and I'll help you more directly.
[04:08:30] <cluelessperson> Wafficus, I feel like you're asking some questions that indicate being a little unconfident, but don't worry, it's really as easy as those steps you might imagine, for the most part. xD
[04:10:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[04:10:35] <AhmedAmerican> 🙃 \o Party niga :D
[04:10:46] *** Joins: wyclif (~wyclif@user/wyclif)
[04:11:02] * AhmedAmerican CoOol
[04:11:38] <cluelessperson> AhmedAmerican, I think it's important that you take the time to understand every line of code, and each part of the line.
[04:11:45] <Wafficus> lets just say I wanted my art gallery to just work though
[04:11:50] <cluelessperson> what a function is,  what arguments are,  what types are.
[04:11:53] <Wafficus> I probably "could" do it
[04:11:55] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:ec72:a5cd:f0a6:2c93) (Quit: Leaving)
[04:12:06] <Wafficus> its just a pain as I get older to be honest, though I do like Python still
[04:12:13] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:ec72:a5cd:f0a6:2c93)
[04:12:39] <cluelessperson> Wafficus, well it seems to me you're pretty close to making it "just work",  probably a few minutes
[04:12:58] <cluelessperson> Wafficus, it feels like to me what's in your way is that build up of each things, so you're kinda grinding against it rather than just doing it. :P
[04:13:09] <cluelessperson> I'll be back in an hourish.
[04:13:27] <Wafficus> no worries
[04:13:44] <AhmedAmerican> cluelessperson: i didn't get you?
[04:14:01] <Wafficus> appreciate the help with the logic, that's pretty much 50% of the battle, as is determining all algorithms ahead of time
[04:15:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[04:16:05] <jinsun> AhmedAmerican: the only thing that you are doing with the list is append in a loop, then changing that to array won't do any good
[04:16:17] *** Joins: wyclif (~wyclif@user/wyclif)
[04:16:30] <jinsun> AhmedAmerican: unless you know beforehand how many loops are going to run, then you could pre allocate a huge array and fill it in a loop, which can be faster
[04:17:00] *** Quits: jim (~jim@about/linux/staff/jim) (Quit: upgrading, back in a few hours)
[04:17:16] *** Joins: monkey_ (~user@190.104.116.134)
[04:20:35] *** Joins: minip (minip@user/minip)
[04:23:58] <AhmedAmerican> jinsun: array is only for storing int?
[04:25:09] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Quit: Leaving)
[04:26:33] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[04:26:40] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[04:27:17] *** Joins: wyclif (~wyclif@user/wyclif)
[04:27:21] *** Quits: besnn (~besnn@user/besnn) (Remote host closed the connection)
[04:29:20] <newdimension> I'm very new to SQLAlchemy. Does it have the concept of migration files similar to the files generated by Django to document changes to a DB?
[04:30:01] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:30:06] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[04:30:15] <FunkyBob> newdimension: last  iused it no... there are separate tools to plug ini for that
[04:30:30] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[04:31:30] <newdimension> Hey FunkyBob! Is that what people usually do or is there a different workflow? I'm wondering if I'm only thinking of migrations because I'm used to Django
[04:32:23] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[04:32:25] <jinsun> AhmedAmerican: you can store arbitrary objects in numpy arrays, but performance will not be good for random objects, they are mostly supposed to be used for numbers ints/floats
[04:32:28] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[04:32:48] *** Joins: wyclif (~wyclif@user/wyclif)
[04:33:21] <jinsun> AhmedAmerican: and you cannot resize an array, so if you want to append in a loop you'll have to create a new array every time
[04:36:21] *** Quits: f8l12 (~f8l12@154.3.42.77) (Ping timeout: 258 seconds)
[04:36:56] *** Quits: monkey_ (~user@190.104.116.134) (Remote host closed the connection)
[04:37:12] *** Joins: Linux77 (~kvirc@187-126-71-30.user3p.veloxzone.com.br)
[04:37:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[04:38:06] *** Joins: Buliarous (~gypsydang@185.207.166.57)
[04:38:18] *** Joins: wyclif (~wyclif@user/wyclif)
[04:38:49] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::682e) (Quit: Konversation terminated!)
[04:39:22] *** Quits: cheater (~Username@user/cheater) (Remote host closed the connection)
[04:40:08] *** Joins: korg815 (~korg815@user/korg815)
[04:41:13] *** Quits: y1n (~y1n@84-115-65-87.wifi.dynamic.surfer.at) (Ping timeout: 248 seconds)
[04:41:59] *** Quits: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[04:42:53] *** Quits: minip (minip@user/minip) (Remote host closed the connection)
[04:43:17] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[04:44:54] *** Quits: emerent (~quassel@p200300cd57058cadba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[04:45:15] *** Joins: emerent (~quassel@p200300cd57058cabba27ebfffed28a59.dip0.t-ipconnect.de)
[04:45:43] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[04:46:23] *** Joins: qpdb| (~qpdb@user/qpdb)
[04:46:51] <cloudbender> Is it possible to ship my script with one or three imported libs and just the interpreter ?
[04:47:11] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:47:59] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[04:48:09] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[04:48:27] <Wafficus> can anyone help me with the iterator object on line 41: https://bpa.st/W5JA
[04:48:54] <Wafficus> I can't remember how the original syntax for the [str(p) for p in picture_paths] originally looked before my later modifications
[04:49:20] *** Joins: wyclif (~wyclif@user/wyclif)
[04:49:23] *** Quits: qpdb_ (~qpdb@user/qpdb) (Ping timeout: 268 seconds)
[04:51:36] *** Joins: dcaro_ (~dcaro@user/dcaro)
[04:52:04] *** Quits: dcaro (~dcaro@user/dcaro) (Ping timeout: 258 seconds)
[04:52:05] *** dcaro_ is now known as dcaro
[04:52:33] *** Joins: tortal (~tortal@ua-84-219-194-210.bbcust.telenor.se)
[04:52:40] <tortal> an application that takes two strings as arguments and will output relationships between the inputs. Like "cool" and "4" will have one output which is "cool" contains 4 letters. Does anybody know of any such script or program? If not I plan to make one. Starting with simple connections and as version number ascends so does the complexity of the relations. In the end it will be able to figure out that "Borat" is from "Kazakstan" etc.
[04:52:40] <tortal> How bout that as a challenging, useful and utterly pointless project? It is as perfect for the first programming homework to a master thesis. Now. Its name. Of course it will be written in Python. Due to its heavy dependency of scrapers, dictionary generators, math and such- My question is basically if someone knows a good name. Another question is more python-related: how should one attempt for great and efficient concurrency. I want
[04:52:40] <tortal> to achieve parallelism when finding mathematical relationships. I want to use a lot of recursive logic (such as finding a relation between cool and 4 will continue looking if there is anything "cool" with four letters.... So. Which topics to dive into when trying to 1. get imperative speed with recursive logic. And 2. How to achieve parallelism efficiently in Python. ?
[04:54:01] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[04:54:12] *** Joins: y1n (~y1n@84-115-65-87.wifi.dynamic.surfer.at)
[04:54:50] *** Joins: wyclif (~wyclif@user/wyclif)
[04:55:25] *** Joins: irreitug (uid23254@id-23254.tooting.irccloud.com)
[04:56:25] <Wafficus> tortal: if not trolling, that sounds like an online search algorithm to me
[04:56:47] <Wafficus> unless you're using some kind of AI with TensorFlow to somehow know the relationships with training
[04:57:37] *** Quits: weibullguy (DRowland@gateway/vpn/protonvpn/weibullguy) (Ping timeout: 245 seconds)
[04:57:47] *** Joins: cloudbender39 (~cloudbend@user/cloudbender)
[04:58:21] <tortal> no trolling here. Im truly interested to hear ideas on how to approach making such an application.
[04:59:02] <tortal> ML can also be interesting to have as a feature. my xp is limited in the field however...
[04:59:15] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Ping timeout: 268 seconds)
[04:59:26] <cloudbender39> @Wafficus I could be mistaken, but picuture_paths does not seem to be assigned when referenced on line 41
[04:59:43] *** Joins: weibullguy (~DRowland@2600:6c4a:7d00:fe22:4ced:6a14:8bb7:6d54)
[04:59:47] <InPhase> tortal: I wrote one in C 21 years ago as a class project, but where the data was pre-arranged.  Now the fancy thing people do for this sort of thing is auto-generation, since there is so much source material available, and there are so many tools and libraries to help with it.
[04:59:51] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[05:00:22] *** Joins: wyclif (~wyclif@user/wyclif)
[05:00:30] <cloudbender39> tortal what type of application ?
[05:00:50] <tortal> online search algorithm.. interesting analogy. But it does share similarity in finding "closeness" to concepts. However that is not the applicaton's goal. It is rather looking for relations that nobody has introduced before
[05:01:17] <InPhase> tortal: If you're exploring though to gain experience with the concepts, maybe start by pre-setting example data, and first figure out how to infer useful transitive relationships.
[05:01:41] <tortal> cloudbender39: the one i described above. The one finding relationships between input of two strings.
[05:02:16] <tortal> My goal is to create the application.. not to learn anything. Even thhough i expect to learn a lot
[05:02:30] *** LabMonkey is now known as Mechanismus
[05:02:58] <cloudbender39> I would say to kraft the algorithms on paper and then write python to match
[05:03:24] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[05:03:32] <Wafficus> cloudbender39: you're right, fixed this earlier
[05:03:44] <cloudbender39> yay I'm not crazy !!!
[05:03:45] <Wafficus> I'm just kind of 50/50 about the thumbnails path in general now
[05:03:50] <Wafficus> trying to think about how to handle it though
[05:03:53] <Wafficus> i'm getting close
[05:04:32] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[05:04:55] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[05:04:58] *** Quits: flyback (~flyback@2601:540:8201:1e60:3501:8e2d:c520:e900) (Remote host closed the connection)
[05:05:07] *** Quits: weibullguy (~DRowland@2600:6c4a:7d00:fe22:4ced:6a14:8bb7:6d54) (Ping timeout: 245 seconds)
[05:05:24] <Wafficus> say I wanted to split a path in half, let's say this one: '/var/www/musimatic/images/ArtGallery/Gifs/GIF-181116_172213.gif' How could I split it from '/var' to '/gifs', and leave the 'GIF-181116_172213.gif' part as a second portion
[05:05:30] <Wafficus> would that be a string split idea from the path itself?
[05:05:40] <InPhase> tortal: A simple example of what my now ancient class project did:  "tortal is a person" and "person consumes food" were known facts, so it would be able to deduce that "tortal consumes food" by following relationships between the relationships.
[05:05:40] *** Quits: beencubed (~beencubed@209.131.238.248) (Remote host closed the connection)
[05:06:15] <cloudbender39> most splitters return an array [0...n] of words
[05:06:20] <Wafficus> for some reason, I think Conway's Game of Life comes into play here, not sure why. You might get some good ideas from looking up what's been done with that tortal
[05:06:28] <cloudbender39> with the spit demarc stripped
[05:06:29] <Wafficus> not sure if it helps, just trying to vibe / brainstorm with you
[05:06:44] <InPhase> tortal: Trying something like that is still probably a good learning exercise on the way to something bigger.
[05:06:57] <Wafficus> cloudbender39: gotcha, I'm trying to see if that particular thumbnail exists, and if it does, etc
[05:07:03] *** Joins: weibullguy (DRowland@gateway/vpn/protonvpn/weibullguy)
[05:07:15] *** Joins: flyback (~flyback@2601:540:8201:1e60:d917:18e:f4c1:e2cf)
[05:07:45] <cloudbender39> WWafficus if you are splitting paths, use the os.paths.split() and related funcs
[05:08:28] <cloudbender39> no sense in reinventing popcorn
[05:09:44] <Wafficus> looks i can use pathlib.PurePath() to get the last directory portion
[05:10:00] <tortal> .. unless it is a torrent client
[05:10:46] <cloudbender39> os.paths.basename().basename() should give you the last directory before the filename
[05:11:08] <cloudbender39> not sure, but it seems so
[05:11:37] <cloudbender39> er, basename(basename()) sorry
[05:11:45] *** Joins: martums9 (martums@user/martums)
[05:12:12] *** Quits: y1n (~y1n@84-115-65-87.wifi.dynamic.surfer.at) (Ping timeout: 268 seconds)
[05:12:19] <cloudbender39> eeeeeuuuuwwww torrent
[05:12:22] *** Joins: brachamh (~brachamh@user/brachamh)
[05:12:25] *** Quits: cloudbender39 (~cloudbend@user/cloudbender) (Quit: Connection closed)
[05:13:48] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[05:13:55] <tortal> https://docs.python.org/3/library/pathlib.html is less low level. More meant for filesystem paths etc. From site: " For low-level path manipulation on strings, you can also use the os.path module."
[05:15:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[05:15:17] *** Quits: martums (martums@user/martums) (Ping timeout: 268 seconds)
[05:15:17] *** martums9 is now known as martums
[05:15:23] <tortal> im saying this because i ran into funky outputs using os.path.. like output that needed guarding of sorts.
[05:15:25] *** Quits: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net) (Quit: bilb_ono)
[05:15:37] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[05:15:56] <nedbat> tortal: guarding?
[05:16:02] <tortal> checks
[05:16:10] <nedbat> tortal: do you have an example?
[05:16:40] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[05:16:58] <tortal> this was many years ago. i only remember that it didn't give expected output. Because it was, as the docs say, low level
[05:17:14] <Wafficus> yeah Pathlib's PurePath() isn't doing it for me either
[05:17:52] <Wafficus> there's gotta be an easier way to split the file path to the lowest directory, so I can have that segment and the filename in two separate parts
[05:18:08] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 258 seconds)
[05:18:23] <tortal> make it into a path object. the check path methods. have you done so? rather than looking for silver-bullet function
[05:19:16] <Wafficus> I'm going to see if PosixPath() is better)
[05:19:37] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[05:19:53] <sybariten> hello folks, i am getting a complaint from the linter for this function. Any obvious way i could rewrite it? https://bpa.st/GR6A   the complaint is   R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
[05:20:42] <vdamewood> sybariten: Add a 'default' return statement after the for loop.
[05:21:17] *** Joins: yonatan (uid158779@id-158779.charlton.irccloud.com)
[05:21:25] <yonatan> This is probably a weird question, and likely platform dependent, but when overwiting a previous line with \r is there a standard way to insert whitespace that does not overwrite the character beneath it? E.g. if it were \w, I'd want "Foo\r\w\wbar" to appear as "Fobar" in the terminal.
[05:21:38] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[05:22:19] <sybariten> vdamewood: return None ?
[05:23:06] <vdamewood> I would return false since the entry wasn't found at all.
[05:23:40] <sybariten> vdamewood: oh. Yeah, that makes sense i guess. Lemme try
[05:23:48] *** Joins: y1n (~y1n@84-115-64-232.wifi.dynamic.surfer.at)
[05:24:11] *** Joins: wyclif (~wyclif@user/wyclif)
[05:25:05] <sybariten> vdamewood: seems to work, thank you so much!
[05:25:34] * tortal feels how people here are eagerly wanting to redesign the function with nicer syntax
[05:27:10] *** Quits: extropiator (~extropiat@107.181.178.91) (Ping timeout: 246 seconds)
[05:28:42] <vdamewood> sybariten: Yeah, so remember, if your function reaches the end of its block, it's like it has an implicit return with no expression.
[05:29:01] <sybariten> Hm, could you explain that again please
[05:29:02] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[05:29:13] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[05:29:40] *** Joins: wyclif (~wyclif@user/wyclif)
[05:30:22] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:47] <sybariten> I did the same on anothe rfunction now. That was not a true-false returning function but rather a function returning different integers from a dicitonary. I had the same complaint for that one. I added a "return None" at the end, after a for loop. Felt a bit wrong but got rid of the linter message. And doesnt seem to have broken functionality...
[05:32:10] <tortal> sybariten, as vdamewood said. You are making the implicit, explicit.
[05:33:00] <vdamewood> And explicit is better than implicit
[05:33:41] <Wafficus> https://bpa.st/KWYA
[05:33:52] <Wafficus> I'm getting this particular error: TypeError: unsupported operand type(s) for +: 'PosixPath' and 'str'
[05:34:04] <vdamewood> Also, remember, thant return and return None aren't the same. One doesn't return the result of an expression, the other does, a NoneType value.
[05:34:11] <Wafficus> for line 53 *
[05:34:33] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[05:35:14] *** Joins: wyclif (~wyclif@user/wyclif)
[05:35:37] <Wafficus> have to convert to a string, nevermind, will try that
[05:35:38] <sybariten> ok
[05:37:01] <tortal> "return" only simply returns from the function. effectively exiting the procedure
[05:37:52] <tortal> ..w/o returning any value (or as mentioned, result of an expression).
[05:38:24] <vdamewood> Well, to the parser, if you specify a value, that's an expression too.
[05:39:05] <vdamewood> And every expression yields a value.
[05:40:02] <nedbat> "return" and "return None" are the same
[05:40:38] <vdamewood> nedbat: Not according to pylint
[05:40:47] <nedbat> vdamewood: right
[05:41:01] <nedbat> vdamewood: the intent is different. but the runtime result is the same
[05:41:02] <vdamewood> (And yes, if you don't specify a return value, you'll get None in the calling code.)
[05:44:33] *** Joins: frost (~frost@59.71.240.119)
[05:45:13] <tortal>  "Value" would by that kind of semantics not have any place in discussion of syntax.  But I guess you are right - interesting tihng that's easy to forget
[05:48:32] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[05:49:26] <newdimension> Anyone use alembic for migrations? It can't find my models.py file, I'm wondering if I need to add the folder to PATH
[05:49:26] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[05:49:41] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[05:50:39] *** Joins: monkey_ (~user@190.104.116.134)
[05:52:07] *** Joins: martums7 (~martums@user/martums)
[05:54:42] *** Quits: y1n (~y1n@84-115-64-232.wifi.dynamic.surfer.at) (Ping timeout: 245 seconds)
[05:54:44] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[05:54:48] <cloudbender> coffee, just sayin
[05:55:57] <cloudbender> <<< addresses a persistent 'coffee low-level" warning light
[05:55:57] *** Quits: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 245 seconds)
[05:56:05] *** Quits: martums (martums@user/martums) (Ping timeout: 258 seconds)
[05:56:06] *** martums7 is now known as martums
[05:57:14] *** Joins: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net)
[05:57:52] *** Joins: vlm (~vlm@user/vlm)
[05:58:33] *** Joins: rubion (~rubion@cpc124316-ayle4-2-0-cust156.15-2.cable.virginm.net)
[05:58:47] <matsaman> cloudbender: good point
[06:04:49] *** Joins: extropiator (~extropiat@107.181.178.71)
[06:06:54] *** Joins: y1n (~y1n@84-115-64-137.wifi.dynamic.surfer.at)
[06:07:50] *** Quits: aead (~aead@pool-96-232-187-142.nycmny.fios.verizon.net) (Quit: aead)
[06:08:52] <luckydonald> I'm having some really strange thing where running `pip install scipy opencv-python-headless` isn't compiling wheels, but when added via a `pip install -r requirements.txt` it is suddenly building a wheel...
[06:10:06] <luckydonald> Trying to move that lengthy wheel building into a separate dockerfile step, so it's cached and not redone for every change to requirements.txt...
[06:11:27] *** Joins: aead (~aead@pool-96-232-187-142.nycmny.fios.verizon.net)
[06:12:54] <Wafficus> is 'Wand' able to resize gifs?
[06:13:06] <Wafficus> I ask because when it tries to do so in my current script, it kills the process
[06:13:08] <Wafficus> not sure why
[06:13:26] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[06:14:46] *** Quits: extropiator (~extropiat@107.181.178.71) (Ping timeout: 246 seconds)
[06:15:35] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[06:15:44] *** Joins: beencubed (~beencubed@209.131.238.248)
[06:15:44] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[06:18:17] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 248 seconds)
[06:18:31] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[06:18:48] *** Quits: aead (~aead@pool-96-232-187-142.nycmny.fios.verizon.net) (Ping timeout: 268 seconds)
[06:19:00] *** Joins: KombuchaKip (~kip@192.252.230.5)
[06:21:12] *** Joins: jim (~jim@about/linux/staff/jim)
[06:21:35] *** Joins: rsrx (~rsrx@103.225.150.81)
[06:22:51] *** Quits: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[06:23:22] *** Joins: extropiator (~extropiat@192.252.220.44)
[06:26:45] *** Joins: aead (~aead@pool-96-232-187-142.nycmny.fios.verizon.net)
[06:26:51] *** A_Dragon is now known as gAy_Dragon
[06:27:06] <jaggz> with open("evalfiles.txt", "r") as F:
[06:27:06] <jaggz>   REAL_FILES = [s.strip() for s in F.readlines() \
[06:27:06] <jaggz>     if not re.match(r'^\s*#', s) and not re.match(r'^\s*$',s) ]
[06:27:15] <jaggz> i'm sure there's a prettier way to do that
[06:27:20] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[06:27:26] <jaggz> (if the line is not a comment, and has something in it)
[06:28:51] *** Quits: hendry (~hendry@210.23.22.2) (Quit: brb)
[06:28:51] <jaggz> if re.match   /^\s*[^#[:space:]]/  ?
[06:29:30] <luckydonald> Maybe first normalize it, and apply REAL_FILES = [s.strip() for ...] on it? that way you can do if `REAL_FILES = [s for s in REAL_FILES if s and not s.startswith('#')]`?
[06:29:30] *** Quits: aead (~aead@pool-96-232-187-142.nycmny.fios.verizon.net) (Quit: aead)
[06:29:56] <luckydonald> *you can do a
[06:30:00] *** Quits: upekkha (~Advanced@2a01:4f8:1c0c:49df::1) (Quit: upekkha)
[06:30:38] *** Joins: upekkha (~Advanced@2a01:4f8:1c0c:49df::1)
[06:30:52] <jaggz> okay.. that's easier (and more nice on my brain than a nested for list comprehension thing)
[06:31:11] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:31:23] <jaggz> 99% of the lines are commented out btw
[06:31:24] <jaggz> but no matter
[06:31:41] <jaggz> (ie. it's gonna grab like 2 lines out of 30 right now :)
[06:32:30] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 258 seconds)
[06:32:31] *** brabrax_ is now known as brabrax
[06:32:41] <jaggz> oh, I still need to test for blank lines
[06:33:35] <luckydonald> the `if s` part does that
[06:34:13] <TJ-> jaggz: ^(#|$)
[06:34:41] <luckydonald> `s = ""; bool(s)` returns False
[06:34:48] <hendursaga> The binary wheels are built & submitted by the package maintainers, right?
[06:35:18] <jaggz> oh I didn't see that.. thanks :)
[06:35:42] <jaggz> I wish python's while loops handled things like:  while line=f.readline(): ...
[06:36:10] <jaggz> ie. the while test done on the lvalue of an assignment there
[06:36:38] *** Quits: jim (~jim@about/linux/staff/jim) (Remote host closed the connection)
[06:36:54] *** portalrat_ is now known as portalrat
[06:37:01] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[06:37:08] *** Joins: jim (~jim@about/linux/staff/jim)
[06:37:20] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[06:38:06] <hendursaga> Sad to see there's not many FreeBSD binary wheels :(
[06:41:22] *** Quits: extropiator (~extropiat@192.252.220.44) (Ping timeout: 246 seconds)
[06:41:22] <Wafficus> is there an actual way to resize gifs in Python 3
[06:41:51] <Wafficus> I just hacked the 'images2gif' module to death using two cryptic Stackoverflow posts, and I can't seem to get it to work
[06:42:06] <Wafficus> I tried 'wand' but that just killed the process upon trying to resize a gif
[06:42:49] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Ping timeout: 248 seconds)
[06:43:31] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[06:47:51] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[06:48:43] *** Quits: winny (~winny@user/winny) (Quit: irc break see you l8r contact irc@winny.tech)
[06:50:20] *** Quits: fabs (~fabs@c-66-31-20-19.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:52:06] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2)
[06:53:49] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:53:49] *** FinnElija is now known as Guest1510
[06:53:49] *** finn_elija is now known as FinnElija
[06:54:01] *** Quits: rubion (~rubion@cpc124316-ayle4-2-0-cust156.15-2.cable.virginm.net) (Ping timeout: 248 seconds)
[06:56:58] *** Quits: Guest1510 (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 256 seconds)
[06:57:02] *** Quits: y1n (~y1n@84-115-64-137.wifi.dynamic.surfer.at) (Ping timeout: 268 seconds)
[06:58:14] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[07:03:40] *** Quits: nbao (~nbao@187.20.162.127) (Quit: leaving)
[07:03:53] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[07:05:00] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[07:06:47] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.3-dev)
[07:07:21] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 248 seconds)
[07:07:23] *** Quits: ska (~ska@user/ska) (Ping timeout: 258 seconds)
[07:08:32] *** Quits: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (Ping timeout: 258 seconds)
[07:10:04] *** Quits: bpalmer (~user@user/bpalmer) (Ping timeout: 258 seconds)
[07:10:16] *** Joins: y1n (~y1n@84-115-64-42.wifi.dynamic.surfer.at)
[07:13:02] *** Joins: r3m (~launch@user/r3m)
[07:13:51] *** Quits: rsrx (~rsrx@103.225.150.81) (Quit: Leaving)
[07:16:11] *** Joins: torandu (~sean@94.10.125.197)
[07:17:49] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:18:53] *** Quits: tortal (~tortal@ua-84-219-194-210.bbcust.telenor.se) (Quit: alis)
[07:19:16] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 258 seconds)
[07:20:00] *** Joins: ska (~ska@user/ska)
[07:20:29] *** Quits: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa) (Remote host closed the connection)
[07:21:47] *** Quits: torandu (~sean@94.10.125.197) (Ping timeout: 245 seconds)
[07:23:29] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Ping timeout: 258 seconds)
[07:23:33] *** Quits: Wafficus (~user@70.126.240.148) (Ping timeout: 268 seconds)
[07:25:16] *** Parts: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte) ()
[07:25:23] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 268 seconds)
[07:27:08] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[07:29:00] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:ec72:a5cd:f0a6:2c93) (Quit: Leaving)
[07:31:05] *** Joins: extropiator (~extropiat@107.181.178.92)
[07:31:55] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[07:35:20] *** Quits: mrgz_ (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: leaving)
[07:37:43] *** Quits: extropiator (~extropiat@107.181.178.92) (Ping timeout: 246 seconds)
[07:38:45] *** Joins: aead (~aead@pool-96-232-187-142.nycmny.fios.verizon.net)
[07:40:05] *** Joins: rubion (~rubion@cpc124316-ayle4-2-0-cust156.15-2.cable.virginm.net)
[07:41:03] *** Quits: reset (~reset@user/reset) (Quit: reset)
[07:42:45] *** Joins: zopsi (~zopsi@irc.dir.ac)
[07:43:02] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 258 seconds)
[07:43:02] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[07:43:16] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[07:43:46] <aphysically> are \n in strings I'm print()'ing converted to os.linesep? (I don't have a windows machine to look)
[07:44:03] <aphysically> I'm printing to console not to a file
[07:44:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[07:45:45] *** Quits: y1n (~y1n@84-115-64-42.wifi.dynamic.surfer.at) (Ping timeout: 248 seconds)
[07:45:57] *** Quits: monkey_ (~user@190.104.116.134) (Remote host closed the connection)
[07:47:06] *** Joins: wyclif (~wyclif@user/wyclif)
[07:48:27] *** Joins: kuler (~kulernil@gateway/tor-sasl/kuler)
[07:49:34] <Batzy> how fast can you make async http requests in python? Is there some point where multithreaded is going to be noticeably faster?
[07:50:04] *** Joins: monkey_ (~user@190.104.116.134)
[07:50:32] *** Quits: Elzington (~Elzington@68.235.43.172) (Quit: Leaving)
[07:50:50] *** Quits: tokerboker (~tokerboke@c-73-71-182-125.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[07:51:08] *** Joins: tokerboker (~tokerboke@c-73-71-182-125.hsd1.ca.comcast.net)
[07:52:14] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[07:52:33] *** Joins: newpy (~newpy@2601:280:4381:1390:d8a2:4368:1fe2:a8e3)
[07:55:08] *** Quits: irreitug (uid23254@id-23254.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[07:57:18] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[07:57:21] *** Quits: yonatan (uid158779@id-158779.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[07:59:19] <AhmedAmerican> Batzy: how about trio with httpx :D
[07:59:25] <Batzy> thats what im doing
[07:59:35] <Batzy> but i need to know if it can keep up with multithreaded
[07:59:36] <AhmedAmerican> Enjoy 10x speed :P
[07:59:40] <Batzy> for making tons of http requests
[08:00:03] *** Quits: aead (~aead@pool-96-232-187-142.nycmny.fios.verizon.net) (Quit: aead)
[08:00:03] <AhmedAmerican> you don't need multi-threaded. even trio can run within thread safe
[08:00:28] <AhmedAmerican> Batzy: https://trio.readthedocs.io/en/stable/reference-core.html#threads-if-you-must
[08:02:08] <AhmedAmerican> using `trio` recently i been able to send like 1.5 Million request to Amazon without any issue with performance.
[08:03:01] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Remote host closed the connection)
[08:04:46] <Batzy> well...how fast
[08:04:54] <Batzy> i have a scenario where ill need to send ~5000 requests/min
[08:07:03] *** Joins: matsaman (~matsaman@user/matsaman)
[08:13:44] <newpy> no luck in #windows, does anyone here know how to run a dockerfile in WSL2?
[08:14:02] <newpy> ie. what do I have to install, can I apt get or do I have to d/l it externally?
[08:18:53] *** Joins: Elzington (~Elzington@68.235.43.108)
[08:24:32] *** Joins: extropiator (~extropiat@162.253.68.172)
[08:26:15] <matsaman> newpy: what's the name of your dockerfile?
[08:27:27] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:27:49] *** Joins: georgios (~georgios@user/georgios)
[08:28:22] <newpy> matsaman, it's a hypothetical dockerfile, I just mean how would I get docker working in wsl2
[08:28:25] *** Quits: philipp64|work (~philipp64@174.27.28.163) (Quit: philipp64|work)
[08:28:41] <newpy> I think I'm going with docker desktop
[08:30:13] <matsaman> docker desktop would be the "normal" way, yeah
[08:30:34] *** Quits: extropiator (~extropiat@162.253.68.172) (Ping timeout: 246 seconds)
[08:33:21] *** Joins: extropiator (~extropiat@67.201.33.41)
[08:34:32] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-b48a-1604-b1a9-4d06.res6.spectrum.com) (Read error: Connection reset by peer)
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:37:14] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[08:37:29] <aphysically> I have a threadpoolexecutor I'm running like this:
[08:37:35] *** Quits: Fiji (~Fiji@user/fiji) (Quit: Leaving)
[08:37:36] <aphysically> durationiter = executor.map(lambda p: probefile(*p), iargs)
[08:37:48] <aphysically> I had to construct the iargs like this:
[08:37:55] <aphysically> iargs = [('duration', str(fpath), None, 'format') for fpath in pathlist]
[08:38:03] <aphysically> None was an optional argument and
[08:38:20] <aphysically> format was a argument I wanted to refer to by keyword, but I couldn't construct the list like that because referring to it by keyword is invalid syntax
[08:38:51] <aphysically> how would I have constructed an argument list while retaining the keywords? is there some manipulation functions that can handle this construction for me?
[08:39:02] * enyc meows aphysically 
[08:39:19] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[08:39:26] <aphysically> e.g. I *wanted* to do this:
[08:39:28] <aphysically> iargs = [('duration', str(fpath), probetype='format') for fpath in pathlist]
[08:39:32] <aphysically> but of course that isn't valid syntax
[08:39:34] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[08:39:35] <enyc> oh I tought this was something I understood on paths, sorry I now see maybe I don't.
[08:39:56] <aphysically> (because I can't have the probetype= in there)
[08:40:42] <aphysically> if I had a different function where it had keyword-only arguments I needed to pass I wouldn't know how to call the executor map at all
[08:40:54] *** Joins: upsala (~zcb@185.213.155.160)
[08:41:39] <aphysically> I guess I could make a wrapper function for the function but that's a dumb solution :P
[08:42:05] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[08:43:42] *** Quits: Geronimo (~Geronimo@user/geronimo) (Quit: I am away)
[08:43:57] *** Joins: Geronimo (~Geronimo@user/geronimo)
[08:45:53] *** Joins: hendry (~hendry@210.23.22.2)
[08:47:25] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 268 seconds)
[08:49:21] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 258 seconds)
[08:49:25] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[08:49:54] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[08:52:23] <dale> aphysically: All I can think of is to make iterables a bunch of functools.partial instances then executor.map(lambda f: f(), your_partials).  Or just use executor.submit and collect up all the futures yourself, perhaps.
[08:53:02] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[08:53:02] *** Joins: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net)
[08:53:11] <aphysically> I guess using submit isn't a bad solution, per se; it's not THAT bad to loop through them
[08:53:24] <aphysically> and if I do it within a with the context manager will clean up for me when I exit it
[08:55:10] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Quit: WeeChat 3.2)
[08:55:18] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[08:55:45] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[08:56:03] *** Quits: V1mV1m (~VimVim@85.191.5.143) (Ping timeout: 268 seconds)
[08:56:21] *** Joins: mei (~mei@user/mei)
[08:56:49] *** Quits: extropiator (~extropiat@67.201.33.41) (Ping timeout: 246 seconds)
[08:57:03] *** Quits: portalrat (~portalrat@user/portalrat) (Quit: Leaving)
[08:57:10] *** Joins: V1mV1m (~VimVim@85.191.5.143)
[08:58:40] *** Quits: DaNeenjah (~jake@adsl-74-230-6-204.hsv.bellsouth.net) (Quit: WeeChat 3.2)
[09:00:54] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[09:02:56] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[09:03:17] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[09:08:06] *** Joins: Wulf (~Wulf@user/wulf)
[09:08:44] *** Quits: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net) (Quit: bilb_ono)
[09:10:25] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[09:11:32] *** Quits: V1mV1m (~VimVim@85.191.5.143) (Ping timeout: 272 seconds)
[09:11:44] *** Joins: portalrat (~portalrat@user/portalrat)
[09:11:53] <aphysically> huh, threadpoolexecutor can't work like daemon
[09:11:55] <aphysically> mmmmmmmmmmmmmmm
[09:11:58] <aphysically> okay
[09:12:38] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (*.net *.split)
[09:12:38] *** Quits: wyclif (~wyclif@user/wyclif) (*.net *.split)
[09:12:38] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (*.net *.split)
[09:12:38] *** Quits: upekkha (~Advanced@2a01:4f8:1c0c:49df::1) (*.net *.split)
[09:12:38] *** Quits: KombuchaKip (~kip@192.252.230.5) (*.net *.split)
[09:12:38] *** Quits: emerent (~quassel@p200300cd57058cabba27ebfffed28a59.dip0.t-ipconnect.de) (*.net *.split)
[09:12:38] *** Quits: dre (~dre@2001:8003:c932:c301:76d5:786e:6c0b:b2c7) (*.net *.split)
[09:12:38] *** Quits: hyper_dave (~hyper_dav@197.156.107.34) (*.net *.split)
[09:12:38] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (*.net *.split)
[09:12:38] *** Quits: jdmark (~jdmark@67.8.137.130) (*.net *.split)
[09:12:38] *** Quits: audiobirb (~audio@2603-8081-1800-00ad-3290-0c64-3212-0442.res6.spectrum.com) (*.net *.split)
[09:12:38] *** Quits: dez (uid92154@user/dez) (*.net *.split)
[09:12:38] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (*.net *.split)
[09:12:38] *** Quits: welrmaron (~welrmaron@sigterm.xyz) (*.net *.split)
[09:12:38] *** Quits: nyah (~nyah@51.146.30.113) (*.net *.split)
[09:12:38] *** Quits: arti (~arti@2001:bb8:4008:2020::f) (*.net *.split)
[09:12:38] *** Quits: EGH (~EGH@185.25.195.104) (*.net *.split)
[09:12:38] *** Quits: computeiro (~Wender@189.37.64.202) (*.net *.split)
[09:12:38] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-519b-3f89-f896-0f8f.res6.spectrum.com) (*.net *.split)
[09:12:38] *** Quits: waxfire (~waxfire@65.119.2.240) (*.net *.split)
[09:12:38] *** Quits: gry (~quassel@botters/gry) (*.net *.split)
[09:12:38] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (*.net *.split)
[09:12:38] *** Quits: wilk (~wilk@user/wilk) (*.net *.split)
[09:12:38] *** Quits: derelict (~derelict@user/derelict) (*.net *.split)
[09:12:38] *** Quits: s1b1 (~s1b1@user/s1b1) (*.net *.split)
[09:12:38] *** Quits: ripdog (~quassel@user/ripdog) (*.net *.split)
[09:12:38] *** Quits: Strom (strom@fedora/strom) (*.net *.split)
[09:12:38] *** Quits: korros (~korros@li1845-92.members.linode.com) (*.net *.split)
[09:12:38] *** Quits: dgw (dgw@sopel/admin/dgw) (*.net *.split)
[09:12:38] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (*.net *.split)
[09:12:38] *** Quits: fxrs_ (~fxrs@192.227.212.130) (*.net *.split)
[09:12:38] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (*.net *.split)
[09:12:38] *** Quits: Vision (~Vision@024-178-231-173.res.spectrum.com) (*.net *.split)
[09:12:38] *** Quits: mogad0n (~mogad0n@user/mogad0n) (*.net *.split)
[09:12:38] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (*.net *.split)
[09:12:38] *** Quits: graingert[m] (~graingert@2001:470:69fc:105::653) (*.net *.split)
[09:12:38] *** Quits: penguinbrian (~penguinbr@2001:470:69fc:105::33d2) (*.net *.split)
[09:12:38] *** Quits: orbatos[m] (~orbatos@user/orbatos) (*.net *.split)
[09:12:39] *** Quits: zBeeble42 (~zBeeble@2001:1928:1::35) (*.net *.split)
[09:12:39] *** Quits: FKAShinobi (~shinobi@2601:18c:d07f:f2e9:fd24:2e5d:b6a0:9496) (*.net *.split)
[09:12:39] *** Quits: hexnewbie (~hexnewbie@user/hexnewbie) (*.net *.split)
[09:12:39] *** Quits: zmt00 (~zmt00@user/zmt00) (*.net *.split)
[09:12:39] *** Quits: jess (~jess@libera/staff/jess) (*.net *.split)
[09:12:39] *** Quits: Leliana (is@the.one.and.only.revthefox.co.uk) (*.net *.split)
[09:12:39] *** Quits: ses1984 (~stephanst@128.27.196.35.bc.googleusercontent.com) (*.net *.split)
[09:12:39] *** Quits: dragonmaster (dragonmast@user/dragonmaster) (*.net *.split)
[09:12:39] *** Quits: no_maam (~chat@gauss.datenzone.de) (*.net *.split)
[09:12:39] *** Quits: ThomasJ (~ThomasJ@user/thomasj) (*.net *.split)
[09:12:39] *** Quits: j00n (~mario@user/j00n) (*.net *.split)
[09:12:39] *** Quits: deepy (deepy@user/deepy) (*.net *.split)
[09:12:39] *** Quits: Koffa (jkohvakk@user/koffa) (*.net *.split)
[09:12:39] *** Quits: PanamaCity3003 (~PanamaCit@skylab/user/panamacity3003) (*.net *.split)
[09:12:39] *** Quits: jor (~jor@jor.link) (*.net *.split)
[09:12:39] *** Quits: Mathisen (mathisen@about/windows/staff/mathisen) (*.net *.split)
[09:12:39] *** Quits: _0ne (~one@user/0ne/x-2101768) (*.net *.split)
[09:12:39] *** Quits: MikachuPi (~Mikachu@2001:bc8:47a8:559::1) (*.net *.split)
[09:12:39] *** Quits: matiss (~matiss@almalinux/web/matiss) (*.net *.split)
[09:12:39] *** Quits: mjsir911 (~bnc@user/mjsir911) (*.net *.split)
[09:12:39] *** Quits: deniska (~denis@user/deniska) (*.net *.split)
[09:12:39] *** Quits: Wegge (~wegge@user/wegge) (*.net *.split)
[09:12:39] *** Quits: `rdvn (~rdvn@user/rdvn) (*.net *.split)
[09:12:39] *** Quits: petemc (~pete@vps-80fad31a.vps.ovh.net) (*.net *.split)
[09:12:39] *** Quits: infernix (~nix@2a02:22a0:bbb1:d500::2) (*.net *.split)
[09:12:39] *** Quits: Neoon (~Neoon@2607:5300:60:23a5::1111) (*.net *.split)
[09:12:39] *** Quits: lorenzosu (~lorenzosu@user/lorenzosu) (*.net *.split)
[09:12:39] *** Quits: Titore (Titore@user/titore) (*.net *.split)
[09:12:39] *** Quits: yemel (~yemel@user/yemel) (*.net *.split)
[09:12:39] *** Quits: phylaz (~phylaz@219.92-221-176.customer.lyse.net) (*.net *.split)
[09:12:39] *** Quits: arza (arza@arza.us) (*.net *.split)
[09:12:39] *** Quits: Henry151 (~bishop@user/henry151) (*.net *.split)
[09:12:39] *** Quits: Amun-Ra (~amun-ra@retro.rocks) (*.net *.split)
[09:12:39] *** Quits: BlackBishop (dexter@user/blackbishop) (*.net *.split)
[09:12:39] *** Quits: quesker (idnet@2600:3c01::f03c:91ff:feac:4ce2) (*.net *.split)
[09:12:39] *** Quits: yolk (~yolk@2600:1f16:f4a:2100:77f5:a0ec:35f:147b) (*.net *.split)
[09:12:39] *** Quits: Henryx (~ebianchi@2a01:4f8:1c0c:76ad::1) (*.net *.split)
[09:12:39] *** Quits: greyltc (~greyltc@user/greyltc) (*.net *.split)
[09:12:39] *** Quits: olasd (~olasd@softwareheritage/olasd) (*.net *.split)
[09:12:39] *** Quits: lericson (~toxik@user/lericson) (*.net *.split)
[09:12:39] *** Quits: Ennea (~Ennea@user/ennea) (*.net *.split)
[09:12:48] <jim> hi... running an irc client script for hexchat, in python3: the part that failed is: https://termbin.com/l032
[09:13:12] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[09:13:12] *** Joins: wyclif (~wyclif@user/wyclif)
[09:13:12] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[09:13:12] *** Joins: upekkha (~Advanced@2a01:4f8:1c0c:49df::1)
[09:13:12] *** Joins: KombuchaKip (~kip@192.252.230.5)
[09:13:12] *** Joins: emerent (~quassel@p200300cd57058cabba27ebfffed28a59.dip0.t-ipconnect.de)
[09:13:12] *** Joins: dre (~dre@2001:8003:c932:c301:76d5:786e:6c0b:b2c7)
[09:13:12] *** Joins: hyper_dave (~hyper_dav@197.156.107.34)
[09:13:12] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[09:13:12] *** Joins: jdmark (~jdmark@67.8.137.130)
[09:13:12] *** Joins: audiobirb (~audio@2603-8081-1800-00ad-3290-0c64-3212-0442.res6.spectrum.com)
[09:13:12] *** Joins: dez (uid92154@user/dez)
[09:13:12] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[09:13:12] *** Joins: welrmaron (~welrmaron@sigterm.xyz)
[09:13:12] *** Joins: nyah (~nyah@51.146.30.113)
[09:13:12] *** Joins: arti (~arti@2001:bb8:4008:2020::f)
[09:13:12] *** Joins: EGH (~EGH@185.25.195.104)
[09:13:12] *** Joins: computeiro (~Wender@189.37.64.202)
[09:13:12] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-519b-3f89-f896-0f8f.res6.spectrum.com)
[09:13:12] *** Joins: waxfire (~waxfire@65.119.2.240)
[09:13:12] *** Joins: gry (~quassel@botters/gry)
[09:13:12] *** Joins: jmcantrell (~jmcantrel@user/jmcantrell)
[09:13:12] *** Joins: wilk (~wilk@user/wilk)
[09:13:12] *** Joins: derelict (~derelict@user/derelict)
[09:13:12] *** Joins: s1b1 (~s1b1@user/s1b1)
[09:13:12] *** Joins: ripdog (~quassel@user/ripdog)
[09:13:12] *** Joins: Strom (strom@fedora/strom)
[09:13:12] *** Joins: lorenzosu (~lorenzosu@user/lorenzosu)
[09:13:12] *** Joins: korros (~korros@li1845-92.members.linode.com)
[09:13:12] *** Joins: dgw (dgw@sopel/admin/dgw)
[09:13:12] *** Joins: fxrs_ (~fxrs@192.227.212.130)
[09:13:12] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[09:13:12] *** Joins: Vision (~Vision@024-178-231-173.res.spectrum.com)
[09:13:12] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[09:13:12] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[09:13:12] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[09:13:12] *** Joins: penguinbrian (~penguinbr@2001:470:69fc:105::33d2)
[09:13:12] *** Joins: orbatos[m] (~orbatos@user/orbatos)
[09:13:12] *** Joins: zBeeble42 (~zBeeble@2001:1928:1::35)
[09:13:12] *** Joins: FKAShinobi (~shinobi@2601:18c:d07f:f2e9:fd24:2e5d:b6a0:9496)
[09:13:12] *** Joins: hexnewbie (~hexnewbie@user/hexnewbie)
[09:13:12] *** Joins: zmt00 (~zmt00@user/zmt00)
[09:13:12] *** Joins: jess (~jess@libera/staff/jess)
[09:13:12] *** Joins: Leliana (is@the.one.and.only.revthefox.co.uk)
[09:13:12] *** Joins: ses1984 (~stephanst@128.27.196.35.bc.googleusercontent.com)
[09:13:12] *** Joins: dragonmaster (dragonmast@user/dragonmaster)
[09:13:12] *** Joins: j00n (~mario@user/j00n)
[09:13:12] *** Joins: no_maam (~chat@gauss.datenzone.de)
[09:13:12] *** Joins: ThomasJ (~ThomasJ@user/thomasj)
[09:13:12] *** Joins: deepy (deepy@user/deepy)
[09:13:12] *** Joins: Koffa (jkohvakk@user/koffa)
[09:13:12] *** Joins: Neoon (~Neoon@2607:5300:60:23a5::1111)
[09:13:12] *** Joins: MikachuPi (~Mikachu@2001:bc8:47a8:559::1)
[09:13:12] *** Joins: matiss (~matiss@almalinux/web/matiss)
[09:13:12] *** Joins: petemc (~pete@vps-80fad31a.vps.ovh.net)
[09:13:12] *** Joins: infernix (~nix@2a02:22a0:bbb1:d500::2)
[09:13:12] *** Joins: mjsir911 (~bnc@user/mjsir911)
[09:13:12] *** Joins: jor (~jor@jor.link)
[09:13:12] *** Joins: PanamaCity3003 (~PanamaCit@skylab/user/panamacity3003)
[09:13:12] *** Joins: Mathisen (mathisen@about/windows/staff/mathisen)
[09:13:12] *** Joins: _0ne (~one@user/0ne/x-2101768)
[09:13:12] *** Joins: `rdvn (~rdvn@user/rdvn)
[09:13:12] *** Joins: deniska (~denis@user/deniska)
[09:13:12] *** Joins: Wegge (~wegge@user/wegge)
[09:13:12] *** Joins: BlackBishop (dexter@user/blackbishop)
[09:13:12] *** Joins: Titore (Titore@user/titore)
[09:13:12] *** Joins: yemel (~yemel@user/yemel)
[09:13:12] *** Joins: phylaz (~phylaz@219.92-221-176.customer.lyse.net)
[09:13:12] *** Joins: arza (arza@arza.us)
[09:13:12] *** Joins: Henry151 (~bishop@user/henry151)
[09:13:12] *** Joins: Amun-Ra (~amun-ra@retro.rocks)
[09:13:12] *** Joins: yolk (~yolk@2600:1f16:f4a:2100:77f5:a0ec:35f:147b)
[09:13:12] *** Joins: greyltc (~greyltc@user/greyltc)
[09:13:12] *** Joins: quesker (idnet@2600:3c01::f03c:91ff:feac:4ce2)
[09:13:12] *** Joins: Henryx (~ebianchi@2a01:4f8:1c0c:76ad::1)
[09:13:12] *** Joins: olasd (~olasd@softwareheritage/olasd)
[09:13:12] *** Joins: Ennea (~Ennea@user/ennea)
[09:13:12] *** Joins: lericson (~toxik@user/lericson)
[09:13:16] *** Quits: waxfire (~waxfire@65.119.2.240) (Max SendQ exceeded)
[09:13:17] <jim> in a moment, I'll get you the git repo
[09:13:24] *** Joins: waxfire8 (~waxfire@65.119.2.240)
[09:14:27] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Quit: Leaving...)
[09:14:52] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[09:14:54] *** Quits: waxfire8 (~waxfire@65.119.2.240) (*.net *.split)
[09:14:54] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (*.net *.split)
[09:14:54] *** Quits: yogoyo (~paddy@user/yogoyo) (*.net *.split)
[09:14:54] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (*.net *.split)
[09:14:54] *** Quits: morrigan (~m0rr1gan@user/m0rr1gan) (*.net *.split)
[09:14:54] *** Quits: WarpedAI (~Warped@user/warped) (*.net *.split)
[09:14:54] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4) (*.net *.split)
[09:14:54] *** Quits: zaquest (~notzaques@5.128.210.178) (*.net *.split)
[09:14:54] *** Quits: mgedmin (~mg@user/mgedmin) (*.net *.split)
[09:14:55] *** Quits: monchi (sid347418@id-347418.charlton.irccloud.com) (*.net *.split)
[09:14:55] *** Quits: Pent (sid313808@id-313808.tooting.irccloud.com) (*.net *.split)
[09:14:55] *** Quits: bjs (sid190364@user/bjs) (*.net *.split)
[09:14:55] *** Quits: hwrd (sid64402@id-64402.tooting.irccloud.com) (*.net *.split)
[09:14:55] *** Quits: coldmountain (sid484352@id-484352.brockwell.irccloud.com) (*.net *.split)
[09:14:55] *** Quits: r0bby (r0bby@user/r0bby) (*.net *.split)
[09:14:55] *** Quits: bn_work (uid268505@id-268505.highgate.irccloud.com) (*.net *.split)
[09:14:55] *** Quits: Freso (sid7914@libera/staff/metabrainz.user.Freso) (*.net *.split)
[09:14:55] *** Quits: cyberpear (uid364019@fedora/cyberpear) (*.net *.split)
[09:14:55] *** Quits: nocko (sid501219@user/nocko) (*.net *.split)
[09:14:55] *** Quits: Knyght (sid365271@id-365271.brockwell.irccloud.com) (*.net *.split)
[09:14:55] *** Quits: pyfisch (~pyfisch@user/pyfisch) (*.net *.split)
[09:14:55] *** Quits: webmind (~webmind@user/webmind) (*.net *.split)
[09:14:55] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (*.net *.split)
[09:14:55] *** Quits: krjst (~krjst@2604:a880:800:c1::16b:8001) (*.net *.split)
[09:14:55] *** Quits: graphitemaster (~graphitem@user/graphitemaster) (*.net *.split)
[09:14:55] *** Quits: acnebs (~acnebs@2604:a880:400:d0::1a64:c001) (*.net *.split)
[09:14:55] *** Quits: Jigsy (~Jigsy@user/jigsy) (*.net *.split)
[09:14:55] *** Quits: mkbloke (~mkbloke@vps.cammo.me.uk) (*.net *.split)
[09:14:55] *** Quits: riposte (~finalripo@2403-5800-3200-5c02--310.ip6.aussiebb.net) (*.net *.split)
[09:14:55] *** Quits: Allegretto (~allegrett@94-21-231-38.pool.digikabel.hu) (*.net *.split)
[09:14:55] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (*.net *.split)
[09:14:55] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (*.net *.split)
[09:14:55] *** Quits: etienneme (~etienne@user/etienneme) (*.net *.split)
[09:14:55] *** Quits: op0x0f05 (uid512716@id-512716.tinside.irccloud.com) (*.net *.split)
[09:14:55] *** Quits: luersuve (uid512702@id-512702.charlton.irccloud.com) (*.net *.split)
[09:14:55] *** Quits: Socra (~Socra@206.217.216.27) (*.net *.split)
[09:14:55] *** Quits: damonlynch (~ngaio@2601:245:c700:2c06:8193:3758:a9ca:44ec) (*.net *.split)
[09:14:55] *** Quits: mcglk (~mcglk@131.191.49.120) (*.net *.split)
[09:14:55] *** Quits: nanonyme (nanonyme@kapsi.fi) (*.net *.split)
[09:14:55] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (*.net *.split)
[09:14:56] *** Quits: kstolen (~kStolen@2a00:fa40:2aaa:1::539:82de) (*.net *.split)
[09:14:56] *** Quits: azidhaka (~azidhaka@user/azidhaka) (*.net *.split)
[09:14:56] *** Quits: enyc (~enyc@user/enyc) (*.net *.split)
[09:14:56] *** Quits: Forkk (forkk@2600:3c00::f03c:91ff:fe84:de4d) (*.net *.split)
[09:14:56] *** Quits: raub (~Raub_Voge@cpe-107-15-44-154.nc.res.rr.com) (*.net *.split)
[09:14:56] *** Quits: luckydonald (~luckydona@user/luckydonald) (*.net *.split)
[09:14:56] *** Quits: ringo_ (~ringo@157.230.117.128) (*.net *.split)
[09:14:56] *** Quits: tone0 (~tone0@071-011-252-111.res.spectrum.com) (*.net *.split)
[09:14:56] *** Quits: SeeM (~SeeM@153.ip-54-38-53.eu) (*.net *.split)
[09:14:56] *** Quits: rgp (~rgp@user/rgp) (*.net *.split)
[09:14:56] *** Quits: braxas (sid508886@id-508886.tooting.irccloud.com) (*.net *.split)
[09:14:56] *** Quits: circuitbone (sid355934@user/circuitbone) (*.net *.split)
[09:14:56] *** Quits: zware (~zach@python/psf/zware) (*.net *.split)
[09:14:56] *** Quits: graingert (sid128301@id-128301.tinside.irccloud.com) (*.net *.split)
[09:14:56] *** Quits: m1dnight (~christoph@188.ip-51-91-158.eu) (*.net *.split)
[09:14:56] *** Quits: enteral (~enteral@discovery.whatbox.ca) (*.net *.split)
[09:14:56] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (*.net *.split)
[09:14:56] *** Quits: shrysr (~shrysr@user/shrysr) (*.net *.split)
[09:14:56] *** Quits: truth (~truth@user/truth) (*.net *.split)
[09:14:56] *** Quits: strudl (~strudl@user/strudl) (*.net *.split)
[09:14:56] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (*.net *.split)
[09:14:56] *** Quits: Lartza (lartza@user/lartza) (*.net *.split)
[09:14:56] *** Quits: tuxifreund (tuxifreund@ubuntuusers/wikiteam/tuxifreund) (*.net *.split)
[09:14:56] *** Quits: sunyibo (~dorsch@2a04:52c0:101:443::) (*.net *.split)
[09:14:56] *** Quits: Luyin (~daisy@user/luyin) (*.net *.split)
[09:14:56] *** Quits: Chex (~Chex@user/chex) (*.net *.split)
[09:14:56] *** Quits: t2mkn (~t2mkn@user/t2mkn) (*.net *.split)
[09:14:56] *** Quits: baloona (~baloona@mail.baloona.de) (*.net *.split)
[09:14:56] *** Quits: Peng_ (~mnordhoff@ultimate1.mnrd.us) (*.net *.split)
[09:14:56] *** Quits: susam (~susam@user/susam) (*.net *.split)
[09:14:56] *** Quits: gin (~gin@user/gin) (*.net *.split)
[09:14:56] *** Quits: fpc (~fpc@user/fpc) (*.net *.split)
[09:14:56] *** Quits: DragoonAethis (~quassel@2a01:4f8:c2c:3359::1) (*.net *.split)
[09:14:56] *** Quits: dale (dale@user/dale) (*.net *.split)
[09:14:56] *** Quits: tnez (~el@user/tnez) (*.net *.split)
[09:14:56] *** Quits: ephemer0l (~ephemer0l@organizedmagnetism.com) (*.net *.split)
[09:14:56] *** Quits: starz (starz@ns378512.ip-37-59-36.eu) (*.net *.split)
[09:14:56] *** Quits: pavelow (~pavelow@opticalchimp.com) (*.net *.split)
[09:14:56] *** Quits: zeus (~user@user/kamyl) (*.net *.split)
[09:14:56] *** Quits: yourfate (~yourfate@cabal.yourfate.org) (*.net *.split)
[09:14:56] *** Quits: simon816 (~simon816@ec2-35-178-246-72.eu-west-2.compute.amazonaws.com) (*.net *.split)
[09:14:56] *** Quits: kafka (~kafka@user/kafka) (*.net *.split)
[09:15:01] <jim> here it is: https://github.com/jwlynch/irc-subst.git
[09:15:14] *** Joins: waxfire8 (~waxfire@65.119.2.240)
[09:15:14] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[09:15:14] *** Joins: yogoyo (~paddy@user/yogoyo)
[09:15:14] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[09:15:14] *** Joins: morrigan (~m0rr1gan@user/m0rr1gan)
[09:15:14] *** Joins: WarpedAI (~Warped@user/warped)
[09:15:14] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4)
[09:15:14] *** Joins: zaquest (~notzaques@5.128.210.178)
[09:15:14] *** Joins: mgedmin (~mg@user/mgedmin)
[09:15:14] *** Joins: Pent (sid313808@id-313808.tooting.irccloud.com)
[09:15:14] *** Joins: monchi (sid347418@id-347418.charlton.irccloud.com)
[09:15:14] *** Joins: bjs (sid190364@user/bjs)
[09:15:14] *** Joins: r0bby (r0bby@user/r0bby)
[09:15:14] *** Joins: hwrd (sid64402@id-64402.tooting.irccloud.com)
[09:15:14] *** Joins: cyberpear (uid364019@fedora/cyberpear)
[09:15:14] *** Joins: bn_work (uid268505@id-268505.highgate.irccloud.com)
[09:15:14] *** Joins: coldmountain (sid484352@id-484352.brockwell.irccloud.com)
[09:15:14] *** Joins: Freso (sid7914@libera/staff/metabrainz.user.Freso)
[09:15:14] *** Joins: nocko (sid501219@user/nocko)
[09:15:14] *** Joins: Knyght (sid365271@id-365271.brockwell.irccloud.com)
[09:15:14] *** Joins: pyfisch (~pyfisch@user/pyfisch)
[09:15:14] *** Joins: webmind (~webmind@user/webmind)
[09:15:14] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[09:15:14] *** Joins: krjst (~krjst@2604:a880:800:c1::16b:8001)
[09:15:14] *** Joins: graphitemaster (~graphitem@user/graphitemaster)
[09:15:14] *** Joins: acnebs (~acnebs@2604:a880:400:d0::1a64:c001)
[09:15:14] *** Joins: riposte (~finalripo@2403-5800-3200-5c02--310.ip6.aussiebb.net)
[09:15:14] *** Joins: enyc (~enyc@user/enyc)
[09:15:14] *** Joins: Jigsy (~Jigsy@user/jigsy)
[09:15:14] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[09:15:14] *** Joins: mkbloke (~mkbloke@vps.cammo.me.uk)
[09:15:14] *** Joins: Allegretto (~allegrett@94-21-231-38.pool.digikabel.hu)
[09:15:14] *** Joins: raub (~Raub_Voge@cpe-107-15-44-154.nc.res.rr.com)
[09:15:14] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[09:15:14] *** Joins: etienneme (~etienne@user/etienneme)
[09:15:14] *** Joins: fpc (~fpc@user/fpc)
[09:15:14] *** Joins: gin (~gin@user/gin)
[09:15:14] *** Joins: op0x0f05 (uid512716@id-512716.tinside.irccloud.com)
[09:15:14] *** Joins: luersuve (uid512702@id-512702.charlton.irccloud.com)
[09:15:14] *** Joins: Socra (~Socra@206.217.216.27)
[09:15:14] *** Joins: damonlynch (~ngaio@2601:245:c700:2c06:8193:3758:a9ca:44ec)
[09:15:14] *** Joins: mcglk (~mcglk@131.191.49.120)
[09:15:14] *** Joins: nanonyme (nanonyme@kapsi.fi)
[09:15:14] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[09:15:14] *** Joins: kstolen (~kStolen@2a00:fa40:2aaa:1::539:82de)
[09:15:14] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[09:15:14] *** Joins: Forkk (forkk@2600:3c00::f03c:91ff:fe84:de4d)
[09:15:14] *** Joins: luckydonald (~luckydona@user/luckydonald)
[09:15:14] *** Joins: ringo_ (~ringo@157.230.117.128)
[09:15:14] *** Joins: tone0 (~tone0@071-011-252-111.res.spectrum.com)
[09:15:14] *** Joins: shrysr (~shrysr@user/shrysr)
[09:15:14] *** Joins: SeeM (~SeeM@153.ip-54-38-53.eu)
[09:15:14] *** Joins: rgp (~rgp@user/rgp)
[09:15:14] *** Joins: braxas (sid508886@id-508886.tooting.irccloud.com)
[09:15:14] *** Joins: circuitbone (sid355934@user/circuitbone)
[09:15:14] *** Joins: zware (~zach@python/psf/zware)
[09:15:14] *** Joins: enteral (~enteral@discovery.whatbox.ca)
[09:15:14] *** Joins: graingert (sid128301@id-128301.tinside.irccloud.com)
[09:15:14] *** Joins: m1dnight (~christoph@188.ip-51-91-158.eu)
[09:15:14] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[09:15:14] *** Joins: truth (~truth@user/truth)
[09:15:14] *** Joins: strudl (~strudl@user/strudl)
[09:15:14] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[09:15:14] *** Joins: Lartza (lartza@user/lartza)
[09:15:14] *** Joins: tuxifreund (tuxifreund@ubuntuusers/wikiteam/tuxifreund)
[09:15:14] *** Joins: sunyibo (~dorsch@2a04:52c0:101:443::)
[09:15:14] *** Joins: Luyin (~daisy@user/luyin)
[09:15:14] *** Joins: Chex (~Chex@user/chex)
[09:15:14] *** Joins: t2mkn (~t2mkn@user/t2mkn)
[09:15:14] *** Joins: baloona (~baloona@mail.baloona.de)
[09:15:14] *** Joins: Peng_ (~mnordhoff@ultimate1.mnrd.us)
[09:15:14] *** Joins: susam (~susam@user/susam)
[09:15:14] *** Joins: tnez (~el@user/tnez)
[09:15:14] *** Joins: DragoonAethis (~quassel@2a01:4f8:c2c:3359::1)
[09:15:14] *** Joins: dale (dale@user/dale)
[09:15:14] *** Joins: ephemer0l (~ephemer0l@organizedmagnetism.com)
[09:15:14] *** Joins: starz (starz@ns378512.ip-37-59-36.eu)
[09:15:14] *** Joins: pavelow (~pavelow@opticalchimp.com)
[09:15:14] *** Joins: zeus (~user@user/kamyl)
[09:15:14] *** Joins: yourfate (~yourfate@cabal.yourfate.org)
[09:15:14] *** Joins: simon816 (~simon816@ec2-35-178-246-72.eu-west-2.compute.amazonaws.com)
[09:15:14] *** Joins: kafka (~kafka@user/kafka)
[09:15:15] *** Quits: graingert[m] (~graingert@2001:470:69fc:105::653) (Max SendQ exceeded)
[09:15:24] *** Quits: waxfire8 (~waxfire@65.119.2.240) (Max SendQ exceeded)
[09:15:24] *** Quits: Pent (sid313808@id-313808.tooting.irccloud.com) (Max SendQ exceeded)
[09:15:24] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Max SendQ exceeded)
[09:15:36] *** Joins: waxfire (~waxfire@65.119.2.240)
[09:16:11] *** Quits: syphar (~syphar@2001:470:69fc:105::2ad6) (Ping timeout: 252 seconds)
[09:16:13] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[09:16:34] *** Quits: allegary (~allegary@apache/committer/gjm) (Ping timeout: 240 seconds)
[09:16:34] *** Quits: gloomy (~gloomy@2001:470:69fc:105::ce00) (Ping timeout: 240 seconds)
[09:16:34] *** Quits: boris[m] (~borisruna@2001:470:69fc:105::32f3) (Ping timeout: 240 seconds)
[09:16:36] *** Quits: cotsuka (~cameronot@2001:470:69fc:105::8de) (Ping timeout: 268 seconds)
[09:16:40] *** Quits: aifa[m] (~aifamatri@2001:470:69fc:105::d06e) (Ping timeout: 272 seconds)
[09:16:40] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Ping timeout: 272 seconds)
[09:16:40] *** Quits: ronny (~ronny@2001:470:69fc:105::b57) (Ping timeout: 272 seconds)
[09:16:40] *** Quits: meatballs (~meatballs@2001:470:69fc:105::633) (Ping timeout: 272 seconds)
[09:16:44] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Ping timeout: 252 seconds)
[09:16:51] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (Ping timeout: 252 seconds)
[09:16:51] *** Quits: psydroid (~psydroid@user/psydroid) (Ping timeout: 252 seconds)
[09:17:00] *** Quits: jwon (~jwon@user/jwon) (Ping timeout: 276 seconds)
[09:17:01] *** Quits: BrenBarn (~brenbarn@2001:470:69fc:105::2da2) (Ping timeout: 276 seconds)
[09:17:01] *** Quits: dontwannatell[m] (~dontwanna@2001:470:69fc:105::c27) (Ping timeout: 276 seconds)
[09:17:01] *** Quits: neolem (~neolem@2001:470:69fc:105::c675) (Ping timeout: 276 seconds)
[09:17:01] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:17:14] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (Ping timeout: 272 seconds)
[09:17:14] *** Quits: penguinbrian (~penguinbr@2001:470:69fc:105::33d2) (Ping timeout: 272 seconds)
[09:17:14] *** Quits: orbatos[m] (~orbatos@user/orbatos) (Ping timeout: 272 seconds)
[09:17:14] *** Quits: binarymutt[m] (~binarymut@user/binarymutt) (Ping timeout: 268 seconds)
[09:17:14] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Ping timeout: 268 seconds)
[09:17:18] *** Quits: morguldir (~morguldir@2001:470:69fc:105::21bd) (Ping timeout: 272 seconds)
[09:17:19] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Ping timeout: 272 seconds)
[09:17:39] *** Quits: cecep[m] (~cecep@2001:470:69fc:105::3994) (Ping timeout: 276 seconds)
[09:17:50] *** Quits: lxdr (~lxdr@user/lxdr) (Quit: Ping timeout (120 seconds))
[09:17:56] *** Joins: Pent (sid313808@id-313808.tooting.irccloud.com)
[09:18:04] *** Quits: thm (~thomas@fedora/thm) (*.net *.split)
[09:18:04] *** Quits: foureyes (foureyes@brought.to.you.by.bnc4free.com) (*.net *.split)
[09:18:04] *** Quits: Sadale (~Sadale@user/sadale) (*.net *.split)
[09:18:04] *** Quits: tomboy64 (~tomboy64@user/tomboy64) (*.net *.split)
[09:18:04] *** Quits: sandipndev (sandipndev@2600:3c00::f03c:92ff:fe8e:dce6) (*.net *.split)
[09:18:04] *** Quits: user3456 (user3456@user/user3456) (*.net *.split)
[09:18:04] *** Quits: bookworm (~bookworm@neomutt/bookworm) (*.net *.split)
[09:18:04] *** Quits: asd (~noname@user/asd) (*.net *.split)
[09:18:04] *** Quits: crackerjack (crackerjac@pear.bnc4free.com) (*.net *.split)
[09:18:04] *** Quits: petaflot (~root@lutolf.vserver.nimag.net) (*.net *.split)
[09:18:04] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (*.net *.split)
[09:18:04] *** Quits: enrh (~enrh@user/enrh) (*.net *.split)
[09:18:04] *** Quits: especial (~especial@2a0a:51c0:0:1f:67a7::2) (*.net *.split)
[09:18:04] *** Quits: MJ94 (mj94@user/mj94) (*.net *.split)
[09:18:04] *** Quits: aluria (~aluria@canonical/aluria) (*.net *.split)
[09:18:04] *** Quits: RavuAlHemio (~ondra@selene.ondrahosek.com) (*.net *.split)
[09:18:04] *** Quits: mspe (~user@tilde.team/user/mspe) (*.net *.split)
[09:18:04] *** Quits: tris (emptystrin@irc1.lessbroken.org) (*.net *.split)
[09:18:04] *** Quits: ThiefMaster (thief@indico/developer/thiefmaster) (*.net *.split)
[09:18:04] *** Quits: gerard (~gerard@user/gerard) (*.net *.split)
[09:18:04] *** Quits: Bato (~plauder@2001:bc8:182c:b39::1) (*.net *.split)
[09:18:04] *** Quits: Exa (exa@irc.moe) (*.net *.split)
[09:18:04] *** Quits: r3m (~launch@user/r3m) (*.net *.split)
[09:18:04] *** Quits: seednode (~seednode@user/seednode) (*.net *.split)
[09:18:04] *** Quits: nyuszika7h (nyuszika7h@lykos/dev/nyuszika7h) (*.net *.split)
[09:18:04] *** Quits: kmikita (uid461814@id-461814.brockwell.irccloud.com) (*.net *.split)
[09:18:04] *** Quits: NiKaN (sid385034@id-385034.brockwell.irccloud.com) (*.net *.split)
[09:18:04] *** Quits: jtanner (sid194399@brockwell.irccloud.com) (*.net *.split)
[09:18:04] *** Quits: BlueShark (sid10311@user/blueshark) (*.net *.split)
[09:18:04] *** Quits: MrNaz (sid133418@id-133418.highgate.irccloud.com) (*.net *.split)
[09:18:04] *** Quits: Alexer (~alexer@alexer.net) (*.net *.split)
[09:18:04] *** Quits: sebastianos (~sebastian@user/sebastianos) (*.net *.split)
[09:18:04] *** Quits: catbeard (~noise@user/catbeard) (*.net *.split)
[09:18:04] *** Quits: securethemews_ (~securethe@2a00:23c4:1e9b:7b00::1) (*.net *.split)
[09:18:04] *** Quits: brachamh (~brachamh@user/brachamh) (*.net *.split)
[09:18:04] *** Quits: jrjsmrtn (~jrjsmrtn@ip-83-134-41-235.dsl.scarlet.be) (*.net *.split)
[09:18:04] *** Quits: toine (~antoine@2001:41d0:e:41f::1) (*.net *.split)
[09:18:04] *** Quits: ericoc (sid179921@id-179921.highgate.irccloud.com) (*.net *.split)
[09:18:04] *** Quits: Affliction (affliction@user/affliction) (*.net *.split)
[09:18:04] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (*.net *.split)
[09:18:04] *** Quits: m4v (~znc@ubuntu/member/m4v) (*.net *.split)
[09:18:04] *** Quits: catdog (~quassel@2001:470:50f7:cdcd::cd1) (*.net *.split)
[09:18:04] *** Quits: bionade24 (~bionade24@server2.oscloud.info) (*.net *.split)
[09:18:04] *** Quits: xikkub (me@user/xikkub) (*.net *.split)
[09:18:04] *** Quits: wisefriday (wisefriday@sempiternity.club) (*.net *.split)
[09:18:04] *** Quits: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070) (*.net *.split)
[09:18:04] *** Quits: xnbq (~xnbq@user/xnbq) (*.net *.split)
[09:18:04] *** Quits: summonner (~summonner@188.24.45.0) (*.net *.split)
[09:18:04] *** Quits: DarthGandalf (user@znc/developer/DarthGandalf) (*.net *.split)
[09:18:04] *** Quits: CyberShadow (vladimir@89.28.117.31) (*.net *.split)
[09:18:04] *** Quits: Harlin (~DonQixote@2603:300b:663:e800:1702:3c:82cb:1afc) (*.net *.split)
[09:18:04] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (*.net *.split)
[09:18:04] *** Quits: phryk (~totallyno@user/phryk) (*.net *.split)
[09:18:04] *** Quits: Nei (~ailin@user/nemui) (*.net *.split)
[09:18:04] *** Quits: w1kl4s (~w1kl4s@user/w1kl4s) (*.net *.split)
[09:18:04] *** Quits: maxking (~maxking@user/maxking) (*.net *.split)
[09:18:04] *** Quits: ldm (~ldm@hacksoc/member) (*.net *.split)
[09:18:04] *** Quits: yitz (~yitz@exercism/yitz) (*.net *.split)
[09:18:04] *** Quits: ChrisWarrick (kwpolska@user/kwpolska) (*.net *.split)
[09:18:04] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (*.net *.split)
[09:18:04] *** Quits: Nahra (~user@static.161.95.99.88.clients.your-server.de) (*.net *.split)
[09:18:04] *** Quits: kofuyu (~kofuyu@user/kofuyu) (*.net *.split)
[09:18:04] *** Quits: Santzes (~Santzes@2400:8901::f03c:92ff:fe49:47a6) (*.net *.split)
[09:18:04] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (*.net *.split)
[09:18:04] *** Quits: mweckbecker (~matthias@weckbecker.name) (*.net *.split)
[09:18:04] *** Quits: d3x (michal@bielaw.ski) (*.net *.split)
[09:18:04] *** Quits: SallyAhaj (sallyahaj@user/sallyahaj) (*.net *.split)
[09:18:04] *** Quits: esaym153 (~esaym153@net153.net) (*.net *.split)
[09:18:04] *** Quits: dab21 (~dab21@pistis.amyanddavid.net) (*.net *.split)
[09:18:04] *** Quits: vishwin (~brioux@2001:470:1f07:302::1) (*.net *.split)
[09:18:04] *** Quits: MrAureliusR (~MrAureliu@user/mraureliusr) (*.net *.split)
[09:18:04] *** Quits: dynos01 (~dynos01@2600:3c01:e000:36a::8400) (*.net *.split)
[09:18:04] *** Quits: jkl (~jkl@user/jkl) (*.net *.split)
[09:18:04] *** Quits: tonitch (~tonitch@user/tonitch) (*.net *.split)
[09:18:04] *** Quits: fructose (~fructose@user/fructose) (*.net *.split)
[09:18:04] *** Quits: Celelibi (celelibi@user/celelibi) (*.net *.split)
[09:18:04] *** Quits: nurupo (~nurupo.ga@user/nurupo) (*.net *.split)
[09:18:05] *** Quits: litharge (litharge@libera/bot/litharge) (*.net *.split)
[09:18:05] *** Quits: Pent (sid313808@id-313808.tooting.irccloud.com) (*.net *.split)
[09:18:05] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (*.net *.split)
[09:18:05] *** Quits: yogoyo (~paddy@user/yogoyo) (*.net *.split)
[09:18:05] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (*.net *.split)
[09:18:05] *** Quits: morrigan (~m0rr1gan@user/m0rr1gan) (*.net *.split)
[09:18:05] *** Quits: WarpedAI (~Warped@user/warped) (*.net *.split)
[09:18:05] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4) (*.net *.split)
[09:18:05] *** Quits: zaquest (~notzaques@5.128.210.178) (*.net *.split)
[09:18:05] *** Quits: mgedmin (~mg@user/mgedmin) (*.net *.split)
[09:18:05] *** Quits: monchi (sid347418@id-347418.charlton.irccloud.com) (*.net *.split)
[09:18:05] *** Quits: bjs (sid190364@user/bjs) (*.net *.split)
[09:18:05] *** Quits: hwrd (sid64402@id-64402.tooting.irccloud.com) (*.net *.split)
[09:18:05] *** Quits: coldmountain (sid484352@id-484352.brockwell.irccloud.com) (*.net *.split)
[09:18:05] *** Quits: r0bby (r0bby@user/r0bby) (*.net *.split)
[09:18:05] *** Quits: bn_work (uid268505@id-268505.highgate.irccloud.com) (*.net *.split)
[09:18:05] *** Quits: Freso (sid7914@libera/staff/metabrainz.user.Freso) (*.net *.split)
[09:18:05] *** Quits: cyberpear (uid364019@fedora/cyberpear) (*.net *.split)
[09:18:05] *** Quits: nocko (sid501219@user/nocko) (*.net *.split)
[09:18:05] *** Quits: Knyght (sid365271@id-365271.brockwell.irccloud.com) (*.net *.split)
[09:18:05] *** Quits: pyfisch (~pyfisch@user/pyfisch) (*.net *.split)
[09:18:05] *** Quits: webmind (~webmind@user/webmind) (*.net *.split)
[09:18:05] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (*.net *.split)
[09:18:05] *** Quits: krjst (~krjst@2604:a880:800:c1::16b:8001) (*.net *.split)
[09:18:05] *** Quits: graphitemaster (~graphitem@user/graphitemaster) (*.net *.split)
[09:18:05] *** Quits: acnebs (~acnebs@2604:a880:400:d0::1a64:c001) (*.net *.split)
[09:18:05] *** Quits: Jigsy (~Jigsy@user/jigsy) (*.net *.split)
[09:18:05] *** Quits: mkbloke (~mkbloke@vps.cammo.me.uk) (*.net *.split)
[09:18:05] *** Quits: riposte (~finalripo@2403-5800-3200-5c02--310.ip6.aussiebb.net) (*.net *.split)
[09:18:05] *** Quits: Allegretto (~allegrett@94-21-231-38.pool.digikabel.hu) (*.net *.split)
[09:18:05] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (*.net *.split)
[09:18:05] *** Quits: etienneme (~etienne@user/etienneme) (*.net *.split)
[09:18:05] *** Quits: op0x0f05 (uid512716@id-512716.tinside.irccloud.com) (*.net *.split)
[09:18:05] *** Quits: luersuve (uid512702@id-512702.charlton.irccloud.com) (*.net *.split)
[09:18:05] *** Quits: Socra (~Socra@206.217.216.27) (*.net *.split)
[09:18:05] *** Quits: damonlynch (~ngaio@2601:245:c700:2c06:8193:3758:a9ca:44ec) (*.net *.split)
[09:18:05] *** Quits: mcglk (~mcglk@131.191.49.120) (*.net *.split)
[09:18:05] *** Quits: nanonyme (nanonyme@kapsi.fi) (*.net *.split)
[09:18:05] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (*.net *.split)
[09:18:05] *** Quits: kstolen (~kStolen@2a00:fa40:2aaa:1::539:82de) (*.net *.split)
[09:18:05] *** Quits: azidhaka (~azidhaka@user/azidhaka) (*.net *.split)
[09:18:05] *** Quits: enyc (~enyc@user/enyc) (*.net *.split)
[09:18:05] *** Quits: Forkk (forkk@2600:3c00::f03c:91ff:fe84:de4d) (*.net *.split)
[09:18:05] *** Quits: raub (~Raub_Voge@cpe-107-15-44-154.nc.res.rr.com) (*.net *.split)
[09:18:05] *** Quits: luckydonald (~luckydona@user/luckydonald) (*.net *.split)
[09:18:05] *** Quits: ringo_ (~ringo@157.230.117.128) (*.net *.split)
[09:18:05] *** Quits: tone0 (~tone0@071-011-252-111.res.spectrum.com) (*.net *.split)
[09:18:05] *** Quits: SeeM (~SeeM@153.ip-54-38-53.eu) (*.net *.split)
[09:18:05] *** Quits: rgp (~rgp@user/rgp) (*.net *.split)
[09:18:05] *** Quits: braxas (sid508886@id-508886.tooting.irccloud.com) (*.net *.split)
[09:18:05] *** Quits: circuitbone (sid355934@user/circuitbone) (*.net *.split)
[09:18:05] *** Quits: zware (~zach@python/psf/zware) (*.net *.split)
[09:18:05] *** Quits: graingert (sid128301@id-128301.tinside.irccloud.com) (*.net *.split)
[09:18:05] *** Quits: m1dnight (~christoph@188.ip-51-91-158.eu) (*.net *.split)
[09:18:05] *** Quits: enteral (~enteral@discovery.whatbox.ca) (*.net *.split)
[09:18:05] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (*.net *.split)
[09:18:05] *** Quits: shrysr (~shrysr@user/shrysr) (*.net *.split)
[09:18:05] *** Quits: truth (~truth@user/truth) (*.net *.split)
[09:18:05] *** Quits: strudl (~strudl@user/strudl) (*.net *.split)
[09:18:05] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (*.net *.split)
[09:18:05] *** Quits: Lartza (lartza@user/lartza) (*.net *.split)
[09:18:05] *** Quits: tuxifreund (tuxifreund@ubuntuusers/wikiteam/tuxifreund) (*.net *.split)
[09:18:05] *** Quits: sunyibo (~dorsch@2a04:52c0:101:443::) (*.net *.split)
[09:18:05] *** Quits: Luyin (~daisy@user/luyin) (*.net *.split)
[09:18:05] *** Quits: Chex (~Chex@user/chex) (*.net *.split)
[09:18:05] *** Quits: t2mkn (~t2mkn@user/t2mkn) (*.net *.split)
[09:18:05] *** Quits: baloona (~baloona@mail.baloona.de) (*.net *.split)
[09:18:05] *** Quits: Peng_ (~mnordhoff@ultimate1.mnrd.us) (*.net *.split)
[09:18:05] *** Quits: susam (~susam@user/susam) (*.net *.split)
[09:18:05] *** Quits: gin (~gin@user/gin) (*.net *.split)
[09:18:05] *** Quits: fpc (~fpc@user/fpc) (*.net *.split)
[09:18:05] *** Quits: DragoonAethis (~quassel@2a01:4f8:c2c:3359::1) (*.net *.split)
[09:18:05] *** Quits: dale (dale@user/dale) (*.net *.split)
[09:18:05] *** Quits: tnez (~el@user/tnez) (*.net *.split)
[09:18:05] *** Quits: ephemer0l (~ephemer0l@organizedmagnetism.com) (*.net *.split)
[09:18:05] *** Quits: starz (starz@ns378512.ip-37-59-36.eu) (*.net *.split)
[09:18:05] *** Quits: pavelow (~pavelow@opticalchimp.com) (*.net *.split)
[09:18:05] *** Quits: zeus (~user@user/kamyl) (*.net *.split)
[09:18:05] *** Quits: yourfate (~yourfate@cabal.yourfate.org) (*.net *.split)
[09:18:05] *** Quits: simon816 (~simon816@ec2-35-178-246-72.eu-west-2.compute.amazonaws.com) (*.net *.split)
[09:18:05] *** Quits: kafka (~kafka@user/kafka) (*.net *.split)
[09:18:05] *** Quits: wyclif (~wyclif@user/wyclif) (*.net *.split)
[09:18:05] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (*.net *.split)
[09:18:05] *** Quits: upekkha (~Advanced@2a01:4f8:1c0c:49df::1) (*.net *.split)
[09:18:05] *** Quits: KombuchaKip (~kip@192.252.230.5) (*.net *.split)
[09:18:05] *** Quits: emerent (~quassel@p200300cd57058cabba27ebfffed28a59.dip0.t-ipconnect.de) (*.net *.split)
[09:18:05] *** Quits: dre (~dre@2001:8003:c932:c301:76d5:786e:6c0b:b2c7) (*.net *.split)
[09:18:05] *** Quits: hyper_dave (~hyper_dav@197.156.107.34) (*.net *.split)
[09:18:05] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (*.net *.split)
[09:18:05] *** Quits: jdmark (~jdmark@67.8.137.130) (*.net *.split)
[09:18:05] *** Quits: audiobirb (~audio@2603-8081-1800-00ad-3290-0c64-3212-0442.res6.spectrum.com) (*.net *.split)
[09:18:05] *** Quits: dez (uid92154@user/dez) (*.net *.split)
[09:18:05] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (*.net *.split)
[09:18:05] *** Quits: welrmaron (~welrmaron@sigterm.xyz) (*.net *.split)
[09:18:05] *** Quits: nyah (~nyah@51.146.30.113) (*.net *.split)
[09:18:05] *** Quits: arti (~arti@2001:bb8:4008:2020::f) (*.net *.split)
[09:18:05] *** Quits: EGH (~EGH@185.25.195.104) (*.net *.split)
[09:18:05] *** Quits: computeiro (~Wender@189.37.64.202) (*.net *.split)
[09:18:05] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-519b-3f89-f896-0f8f.res6.spectrum.com) (*.net *.split)
[09:18:05] *** Quits: gry (~quassel@botters/gry) (*.net *.split)
[09:18:05] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (*.net *.split)
[09:18:05] *** Quits: wilk (~wilk@user/wilk) (*.net *.split)
[09:18:05] *** Quits: derelict (~derelict@user/derelict) (*.net *.split)
[09:18:05] *** Quits: s1b1 (~s1b1@user/s1b1) (*.net *.split)
[09:18:05] *** Quits: ripdog (~quassel@user/ripdog) (*.net *.split)
[09:18:05] *** Quits: Strom (strom@fedora/strom) (*.net *.split)
[09:18:05] *** Quits: korros (~korros@li1845-92.members.linode.com) (*.net *.split)
[09:18:05] *** Quits: dgw (dgw@sopel/admin/dgw) (*.net *.split)
[09:18:05] *** Quits: fxrs_ (~fxrs@192.227.212.130) (*.net *.split)
[09:18:05] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (*.net *.split)
[09:18:05] *** Quits: Vision (~Vision@024-178-231-173.res.spectrum.com) (*.net *.split)
[09:18:05] *** Quits: mogad0n (~mogad0n@user/mogad0n) (*.net *.split)
[09:18:05] *** Quits: zBeeble42 (~zBeeble@2001:1928:1::35) (*.net *.split)
[09:18:05] *** Quits: FKAShinobi (~shinobi@2601:18c:d07f:f2e9:fd24:2e5d:b6a0:9496) (*.net *.split)
[09:18:05] *** Quits: hexnewbie (~hexnewbie@user/hexnewbie) (*.net *.split)
[09:18:05] *** Quits: zmt00 (~zmt00@user/zmt00) (*.net *.split)
[09:18:05] *** Quits: jess (~jess@libera/staff/jess) (*.net *.split)
[09:18:06] *** Quits: Leliana (is@the.one.and.only.revthefox.co.uk) (*.net *.split)
[09:18:06] *** Quits: ses1984 (~stephanst@128.27.196.35.bc.googleusercontent.com) (*.net *.split)
[09:18:06] *** Quits: dragonmaster (dragonmast@user/dragonmaster) (*.net *.split)
[09:18:06] *** Quits: no_maam (~chat@gauss.datenzone.de) (*.net *.split)
[09:18:06] *** Quits: ThomasJ (~ThomasJ@user/thomasj) (*.net *.split)
[09:18:06] *** Quits: j00n (~mario@user/j00n) (*.net *.split)
[09:18:06] *** Quits: deepy (deepy@user/deepy) (*.net *.split)
[09:18:06] *** Quits: Koffa (jkohvakk@user/koffa) (*.net *.split)
[09:18:06] *** Quits: PanamaCity3003 (~PanamaCit@skylab/user/panamacity3003) (*.net *.split)
[09:18:06] *** Quits: jor (~jor@jor.link) (*.net *.split)
[09:18:06] *** Quits: Mathisen (mathisen@about/windows/staff/mathisen) (*.net *.split)
[09:18:06] *** Quits: _0ne (~one@user/0ne/x-2101768) (*.net *.split)
[09:18:06] *** Quits: MikachuPi (~Mikachu@2001:bc8:47a8:559::1) (*.net *.split)
[09:18:06] *** Quits: matiss (~matiss@almalinux/web/matiss) (*.net *.split)
[09:18:06] *** Quits: mjsir911 (~bnc@user/mjsir911) (*.net *.split)
[09:18:06] *** Quits: deniska (~denis@user/deniska) (*.net *.split)
[09:18:06] *** Quits: Wegge (~wegge@user/wegge) (*.net *.split)
[09:18:06] *** Quits: `rdvn (~rdvn@user/rdvn) (*.net *.split)
[09:18:06] *** Quits: petemc (~pete@vps-80fad31a.vps.ovh.net) (*.net *.split)
[09:18:06] *** Quits: infernix (~nix@2a02:22a0:bbb1:d500::2) (*.net *.split)
[09:18:06] *** Quits: Neoon (~Neoon@2607:5300:60:23a5::1111) (*.net *.split)
[09:18:06] *** Quits: lorenzosu (~lorenzosu@user/lorenzosu) (*.net *.split)
[09:18:06] *** Quits: Titore (Titore@user/titore) (*.net *.split)
[09:18:06] *** Quits: yemel (~yemel@user/yemel) (*.net *.split)
[09:18:06] *** Quits: phylaz (~phylaz@219.92-221-176.customer.lyse.net) (*.net *.split)
[09:18:06] *** Quits: arza (arza@arza.us) (*.net *.split)
[09:18:06] *** Quits: Henry151 (~bishop@user/henry151) (*.net *.split)
[09:18:06] *** Quits: Amun-Ra (~amun-ra@retro.rocks) (*.net *.split)
[09:18:06] *** Quits: BlackBishop (dexter@user/blackbishop) (*.net *.split)
[09:18:06] *** Quits: quesker (idnet@2600:3c01::f03c:91ff:feac:4ce2) (*.net *.split)
[09:18:06] *** Quits: yolk (~yolk@2600:1f16:f4a:2100:77f5:a0ec:35f:147b) (*.net *.split)
[09:18:06] *** Quits: Henryx (~ebianchi@2a01:4f8:1c0c:76ad::1) (*.net *.split)
[09:18:06] *** Quits: greyltc (~greyltc@user/greyltc) (*.net *.split)
[09:18:06] *** Quits: olasd (~olasd@softwareheritage/olasd) (*.net *.split)
[09:18:06] *** Quits: lericson (~toxik@user/lericson) (*.net *.split)
[09:18:06] *** Quits: Ennea (~Ennea@user/ennea) (*.net *.split)
[09:18:06] *** Quits: waxfire (~waxfire@65.119.2.240) (*.net *.split)
[09:18:06] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (*.net *.split)
[09:18:06] *** Quits: mei (~mei@user/mei) (*.net *.split)
[09:18:06] *** Quits: upsala (~zcb@185.213.155.160) (*.net *.split)
[09:18:06] *** Quits: supakeen (~user@python/site-packages/supakeen) (*.net *.split)
[09:18:06] *** Quits: Elzington (~Elzington@68.235.43.108) (*.net *.split)
[09:18:06] *** Quits: tokerboker (~tokerboke@c-73-71-182-125.hsd1.ca.comcast.net) (*.net *.split)
[09:18:06] *** Quits: rubion (~rubion@cpc124316-ayle4-2-0-cust156.15-2.cable.virginm.net) (*.net *.split)
[09:18:06] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (*.net *.split)
[09:18:06] *** Quits: beencubed (~beencubed@209.131.238.248) (*.net *.split)
[09:18:06] *** Quits: martums (~martums@user/martums) (*.net *.split)
[09:18:06] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (*.net *.split)
[09:18:06] *** Quits: weibullguy (DRowland@gateway/vpn/protonvpn/weibullguy) (*.net *.split)
[09:18:06] *** Quits: dcaro (~dcaro@user/dcaro) (*.net *.split)
[09:18:06] *** Quits: Buliarous (~gypsydang@185.207.166.57) (*.net *.split)
[09:18:06] *** Quits: d3sync (~d3sync@130.43.80.239.dsl.dyn.forthnet.gr) (*.net *.split)
[09:18:06] *** Quits: JavaBean (~JavaBean@user/javabean) (*.net *.split)
[09:18:06] *** Quits: wolfgang (~wolfgang@101.174.6.197) (*.net *.split)
[09:18:06] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (*.net *.split)
[09:18:06] *** Quits: jinsun (~quassel@user/jinsun) (*.net *.split)
[09:18:06] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (*.net *.split)
[09:18:06] *** Quits: mdemo (~mdemo@c-73-40-53-74.hsd1.va.comcast.net) (*.net *.split)
[09:18:06] *** Quits: erica (~erica@user/erica) (*.net *.split)
[09:18:06] *** Quits: ZedHedTed (~ZedHedTed@user/zedhedted) (*.net *.split)
[09:18:06] *** Quits: mossman93 (~quassel@user/mossman93) (*.net *.split)
[09:18:06] *** Quits: wilz (~michel@modemcable036.177-131-66.mc.videotron.ca) (*.net *.split)
[09:18:06] *** Quits: devcpu (~rusty@108.162.160.184) (*.net *.split)
[09:18:06] *** Quits: iflema (~ian@user/iflema) (*.net *.split)
[09:18:06] *** Quits: withere__ (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (*.net *.split)
[09:18:06] *** Quits: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net) (*.net *.split)
[09:18:06] *** Quits: xakan (~xakan@ns354170.ip-91-121-101.eu) (*.net *.split)
[09:18:06] *** Quits: Ninja3047 (~Ninja3047@3047.ninja) (*.net *.split)
[09:18:06] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (*.net *.split)
[09:18:06] *** Quits: d3vyL (d3vyL@host-87-21-171-60.retail.telecomitalia.it) (*.net *.split)
[09:18:06] *** Quits: Praise (~Fat@user/praise) (*.net *.split)
[09:18:06] *** Quits: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC) (*.net *.split)
[09:18:06] *** Quits: altendky (sid135382@stonehaven.irccloud.com) (*.net *.split)
[09:18:06] *** Quits: fury (uid193779@brockwell.irccloud.com) (*.net *.split)
[09:18:06] *** Quits: matthewwilkes (sid500242@highgate.irccloud.com) (*.net *.split)
[09:18:06] *** Quits: han-` (sid293063@brockwell.irccloud.com) (*.net *.split)
[09:18:06] *** Quits: AhmedAmerican (sid470527@charlton.irccloud.com) (*.net *.split)
[09:18:06] *** Quits: mindlesstux (sid18072@tooting.irccloud.com) (*.net *.split)
[09:18:06] *** Quits: seds (sid492514@user/seds) (*.net *.split)
[09:18:06] *** Quits: hogarius (hogarius@highgate.irccloud.com) (*.net *.split)
[09:18:06] *** Quits: FoodMan_ (~glucose@194.110.13.12) (*.net *.split)
[09:18:06] *** Quits: sharktamer (~sharktame@cpc91312-watf11-2-0-cust697.15-2.cable.virginm.net) (*.net *.split)
[09:18:06] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (*.net *.split)
[09:18:06] *** Quits: roadt (~roadt@36.7.132.7) (*.net *.split)
[09:18:06] *** Quits: yetoo (~yetoo@user/yetoo) (*.net *.split)
[09:18:06] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (*.net *.split)
[09:18:06] *** Quits: BSaboia (~bsaboia@188-178-217-166-cable.dk.customer.tdc.net) (*.net *.split)
[09:18:06] *** Quits: chowmeined (~chowmeine@user/chowmeined) (*.net *.split)
[09:18:06] *** Quits: Vonter (~Vonter@user/vonter) (*.net *.split)
[09:18:06] *** Quits: noarb (~noarb@user/noarb) (*.net *.split)
[09:18:06] *** Quits: Dotz0cat (~Dotz0cat@h41.199.117.75.dynamic.ip.windstream.net) (*.net *.split)
[09:18:06] *** Quits: kmh_ (~kmh@p5dcc649e.dip0.t-ipconnect.de) (*.net *.split)
[09:18:06] *** Quits: NightMonkey (~NightMonk@user/nightmonkey) (*.net *.split)
[09:18:06] *** Quits: shan (shan@cyblog/maintainer/shan) (*.net *.split)
[09:18:06] *** Quits: cache (~cache@user/cacheyourdreams) (*.net *.split)
[09:18:06] *** Quits: frat3rius (~frat3rius@host-85.14.84.172.static.3s.pl) (*.net *.split)
[09:18:06] *** Quits: Deaygo (~Deaygo@let.deaygo.in) (*.net *.split)
[09:18:06] *** Quits: somlis (~somlis@user/somlis) (*.net *.split)
[09:18:06] *** Quits: northernsage (~dobox@138.197.11.208) (*.net *.split)
[09:18:06] *** Quits: oisota (~oisota@user/oisota) (*.net *.split)
[09:18:06] *** Quits: whaley (~whaley@159.65.32.34) (*.net *.split)
[09:18:06] *** Quits: jiffe (~jiffe@mail.nsab.us) (*.net *.split)
[09:18:06] *** Quits: trashcatt (~trashcatt@znc.trashcat.xyz) (*.net *.split)
[09:18:06] *** Quits: zoid (~zoid@user/taxationistheft) (*.net *.split)
[09:18:06] *** Quits: dftrace (~dftrace@hopper.lethalbit.com) (*.net *.split)
[09:18:06] *** Quits: wgwz (~wgwz@45.55.193.150) (*.net *.split)
[09:18:06] *** Quits: Adrixan (~Adrixan@218.72.75.34.bc.googleusercontent.com) (*.net *.split)
[09:18:06] *** Quits: dharrigan (~dharrigan@user/dharrigan) (*.net *.split)
[09:18:06] *** Quits: emika (~emika@83.136.182.164) (*.net *.split)
[09:18:06] *** Quits: cation (cation@user/cation) (*.net *.split)
[09:18:06] *** Quits: Peng (~mnordhoff@flash.mattnordhoff.net) (*.net *.split)
[09:18:06] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (*.net *.split)
[09:18:06] *** Quits: coc0nut (~coc0nut@user/coc0nut) (*.net *.split)
[09:18:06] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (*.net *.split)
[09:18:06] *** Quits: c4017w__ (~c4017@209.52.68.8) (*.net *.split)
[09:18:06] *** Quits: scoobydoo (~scooby@user/scoobydoo) (*.net *.split)
[09:18:06] *** Quits: de-facto (~de-facto@user/de-facto) (*.net *.split)
[09:18:06] *** Quits: luvalon1 (~luva@178.239.167.170) (*.net *.split)
[09:18:06] *** Quits: rigid- (~rigid@user/rigid) (*.net *.split)
[09:18:06] *** Quits: BinarySavior (~BinarySav@user/binarysavior) (*.net *.split)
[09:18:06] *** Quits: mbrndtgn5 (~mbrndtgn@undecidable.de) (*.net *.split)
[09:18:06] *** Quits: rwb (~augh@theguntretort.com) (*.net *.split)
[09:18:06] *** Quits: hexeme (~hexeme@user/hexeme) (*.net *.split)
[09:18:06] *** Quits: akmod (~akmod@c-24-10-154-68.hsd1.ut.comcast.net) (*.net *.split)
[09:18:06] *** Quits: resmo (~resmo@135-58-239-77.dyn.cable.fcom.ch) (*.net *.split)
[09:18:06] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (*.net *.split)
[09:18:06] *** Quits: BigShip (~BigShip@user/bigship) (*.net *.split)
[09:18:06] *** Quits: cnsunyour (~sunyour@129.226.182.99) (*.net *.split)
[09:18:06] *** Quits: Pilate (~pilate@pilate.io) (*.net *.split)
[09:18:06] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (*.net *.split)
[09:18:06] *** Quits: kindablue (znc@irc.tpurist.com) (*.net *.split)
[09:18:06] *** Quits: michele (~eraser@user/michele) (*.net *.split)
[09:18:06] *** Quits: pyre (~pyre@crimeboss.nillas-power.com) (*.net *.split)
[09:18:06] *** Quits: odrling (~odrling@korone.aidoru.agency) (*.net *.split)
[09:18:06] *** Quits: gerty (~gerty@235.ip-51-77-195.eu) (*.net *.split)
[09:18:07] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (*.net *.split)
[09:18:07] *** Quits: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (*.net *.split)
[09:18:07] *** Quits: slavfox (~slavfox@93.158.232.111) (*.net *.split)
[09:18:07] *** Quits: binchickin (~binchicki@165.22.169.69) (*.net *.split)
[09:18:07] *** Quits: newdimension (~newdimnes@ec2-3-129-202-216.us-east-2.compute.amazonaws.com) (*.net *.split)
[09:18:07] *** Quits: samuelbernardo (~samuelber@nata02.lip.pt) (*.net *.split)
[09:18:07] *** Quits: nrg (~NRG@user/nrg) (*.net *.split)
[09:18:07] *** Quits: salparadise (~salparadi@129.146.17.140) (*.net *.split)
[09:18:07] *** Quits: marienz (~marienz@libera/staff/marienz) (*.net *.split)
[09:18:07] *** Quits: daddy (~ryan@hashbang/bdfl) (*.net *.split)
[09:18:07] *** Quits: greenbagels (~gb@user/greenbagels) (*.net *.split)
[09:18:07] *** Quits: enkrypt (~enkrypt@user/enkrypt) (*.net *.split)
[09:18:07] *** Quits: kinabalu (~kinabalu@about/java/kinabalu) (*.net *.split)
[09:18:07] *** Quits: streety (~streety@li761-24.members.linode.com) (*.net *.split)
[09:18:07] *** Quits: blackop (~ocloud@user/blackop) (*.net *.split)
[09:18:07] *** Quits: OMGOMG (~bobrobert@poppy.ifi.uio.no) (*.net *.split)
[09:18:07] *** Quits: syntaxman (~wade@li227-215.members.linode.com) (*.net *.split)
[09:18:07] *** Quits: MrC (Ben@mrbenc.net) (*.net *.split)
[09:18:07] *** Quits: foo (~foo@user/foo/x-8763512) (*.net *.split)
[09:18:07] *** Quits: lgrn_ (~leif@user/lgrn) (*.net *.split)
[09:18:07] *** Quits: polyrob (~rob@user/polyrob) (*.net *.split)
[09:18:07] *** Quits: Joel (~jjshoe@user/joel) (*.net *.split)
[09:18:07] *** Quits: octav1a (~quassel@173.195.145.98) (*.net *.split)
[09:18:07] *** Quits: connor_goodwolf_ (~connor@user/connor-goodwolf/x-2615606) (*.net *.split)
[09:18:07] *** Quits: falx (~falx@user/falx) (*.net *.split)
[09:18:07] *** Quits: sirn (~sirn@user/sirn) (*.net *.split)
[09:18:07] *** Quits: zegalch (~zegalch@178.128.75.133) (*.net *.split)
[09:18:07] *** Quits: Batzy (~Batzy@user/batzy) (*.net *.split)
[09:18:07] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (*.net *.split)
[09:18:07] *** Quits: apollo13 (apollo13@django/moderator/apollo13) (*.net *.split)
[09:18:07] *** Quits: Dan39 (~dan@user/dan39) (*.net *.split)
[09:18:07] *** Quits: bim9262 (~bim9262@cpe-70-113-84-126.austin.res.rr.com) (*.net *.split)
[09:18:07] *** Quits: Milos (~Milos@user/milos) (*.net *.split)
[09:18:07] *** Quits: snalty (~Shhh@user/snalty) (*.net *.split)
[09:18:07] *** Quits: dzz007 (~dzz007@user/dzz007) (*.net *.split)
[09:18:07] *** Quits: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (*.net *.split)
[09:18:07] *** Quits: dulanic (~dulanic@47.187.144.163) (*.net *.split)
[09:18:07] *** Quits: gizmo_ (~gizmo@45.91.125.2) (*.net *.split)
[09:18:07] *** Quits: rud0lf (rud0lf@user/rud0lf) (*.net *.split)
[09:18:07] *** Quits: f8e4 (~user@159.89.21.45) (*.net *.split)
[09:18:07] *** Quits: cryocaustik (~cryocaust@user/cryocaustik) (*.net *.split)
[09:18:07] *** Quits: Hackerpcs (~user@user/hackerpcs) (*.net *.split)
[09:18:07] *** Quits: niko (~niko@libera/staff/niko) (*.net *.split)
[09:18:07] *** Quits: Moyst (~moyst@user/moyst) (*.net *.split)
[09:18:07] *** Quits: Yamakaja (~yamakaja@user/yamakaja) (*.net *.split)
[09:18:07] *** Quits: hirish (~hirish@ip85.ip-137-74-20.eu) (*.net *.split)
[09:18:07] *** Quits: sud (~sud@user/sud) (*.net *.split)
[09:18:07] *** Quits: nedbat (~nedbat@python/psf/nedbat) (*.net *.split)
[09:18:07] *** Quits: ZeroKnight (zeroknight@dimensionzero.net) (*.net *.split)
[09:18:07] *** Quits: bbear (~znc@21212.s.t4vps.eu) (*.net *.split)
[09:18:07] *** Quits: achilleas (~ach@user/achilleas) (*.net *.split)
[09:18:07] *** Quits: asix (~Anders@user/asix) (*.net *.split)
[09:18:07] *** Quits: kungp (~kungp@h-46-59-2-200.A230.priv.bahnhof.se) (*.net *.split)
[09:18:07] *** Quits: purplex (~purplex@user/purplex) (*.net *.split)
[09:18:07] *** Quits: MrBurns (~japa@ec2-13-48-124-121.eu-north-1.compute.amazonaws.com) (*.net *.split)
[09:18:07] *** Quits: hodapp (~mawson@user/hodapp) (*.net *.split)
[09:18:07] *** Quits: rjwiii (~mr-rich@072-187-028-004.res.spectrum.com) (*.net *.split)
[09:18:07] *** Quits: edr (~edr@user/edr) (*.net *.split)
[09:18:07] *** Quits: grateful (~grateful@user/grateful) (*.net *.split)
[09:18:07] *** Quits: Brocker (~NoBody@user/brocker) (*.net *.split)
[09:18:07] *** Quits: newpy (~newpy@2601:280:4381:1390:d8a2:4368:1fe2:a8e3) (*.net *.split)
[09:18:07] *** Quits: monkey_ (~user@190.104.116.134) (*.net *.split)
[09:18:07] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (*.net *.split)
[09:18:07] *** Quits: schumaml2 (~schumaml@dslb-092-074-010-022.092.074.pools.vodafone-ip.de) (*.net *.split)
[09:18:07] *** Quits: tims (~tims@115-64-241-2.tpgi.com.au) (*.net *.split)
[09:18:07] *** Quits: ExpiredKebab (~sgreadly@2407:7000:a2f5:e803:212d:940:ee89:421f) (*.net *.split)
[09:18:07] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (*.net *.split)
[09:18:07] *** Quits: phlixi (~phlixi@aftr-62-216-205-171.dynamic.mnet-online.de) (*.net *.split)
[09:18:07] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (*.net *.split)
[09:18:07] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (*.net *.split)
[09:18:07] *** Quits: el_kevino (~mote@2604:a880:400:d1::901:5001) (*.net *.split)
[09:18:07] *** Quits: rany (~rany@user/rany) (*.net *.split)
[09:18:07] *** Quits: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net) (*.net *.split)
[09:18:07] *** Quits: pycurious (~Adium@user/pycurious) (*.net *.split)
[09:18:07] *** Quits: mboehn (mathias@hh1.nuxis.org) (*.net *.split)
[09:18:07] *** Quits: Skyfire (~pyon@user/pyon) (*.net *.split)
[09:18:07] *** Quits: renrelkha (~renrelkha@user/renrelkha) (*.net *.split)
[09:18:07] *** Quits: dude-x (~textual@pool-173-70-158-124.nwrknj.fios.verizon.net) (*.net *.split)
[09:18:07] *** Quits: Jefren (~Jefren@70.35.66.78) (*.net *.split)
[09:18:07] *** Quits: orzel (~orzel@2a01:e0a:df:6ba0:1cfe:b463:3789:a442) (*.net *.split)
[09:18:07] *** Quits: Duckle (~Duckle@user/duckle) (*.net *.split)
[09:18:07] *** Quits: doko (~doko@2a02:8106:1a:7600:397a:f99e:919a:179b) (*.net *.split)
[09:18:07] *** Quits: majuscule (~majuscule@disinclined.org) (*.net *.split)
[09:18:07] *** Quits: fredrikhl (~fhl@myrsnipa.uio.no) (*.net *.split)
[09:18:07] *** Quits: qwedfg (~qwedfg@user/qwedfg) (*.net *.split)
[09:18:07] *** Quits: noord_ (~noord@user/noord) (*.net *.split)
[09:18:07] *** Quits: leonardus (sid358597@id-358597.tinside.irccloud.com) (*.net *.split)
[09:18:07] *** Quits: holbrode (sid339826@id-339826.tinside.irccloud.com) (*.net *.split)
[09:18:07] *** Quits: EWDurbin (sid38710@id-38710.tinside.irccloud.com) (*.net *.split)
[09:18:07] *** Quits: blddk (~admin@185.233.252.229) (*.net *.split)
[09:18:07] *** Quits: dwt_ (~dwt_@c-98-200-58-177.hsd1.tx.comcast.net) (*.net *.split)
[09:18:07] *** Quits: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com) (*.net *.split)
[09:18:07] *** Quits: sus (thelounge@user/zeromomentum) (*.net *.split)
[09:18:07] *** Quits: mwichmann (~mats@209-188-119-117.taosnet.com) (*.net *.split)
[09:18:07] *** Quits: Superstars111 (~jared@li227-215.members.linode.com) (*.net *.split)
[09:18:07] *** Quits: jbe (~hellother@lysator/root/jbe) (*.net *.split)
[09:18:07] *** Quits: uhu (~uhu@2a01:4f9:c010:1087::2) (*.net *.split)
[09:18:07] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (*.net *.split)
[09:18:07] *** Quits: Isthmusi (~Isthmus@user/isveni) (*.net *.split)
[09:18:07] *** Quits: skreech (~skreech@user/skreech) (*.net *.split)
[09:18:07] *** Quits: BtbN (btbn@ffmpeg/developer/btbn) (*.net *.split)
[09:18:07] *** Quits: lambda (~weechat@cyka.blyat.vodka) (*.net *.split)
[09:18:07] *** Quits: jan6 (jan6@tilde.team/user/jan6) (*.net *.split)
[09:18:07] *** Quits: dbg (~dbg@user/dbg) (*.net *.split)
[09:18:07] *** Quits: doc (~doc@user/doc) (*.net *.split)
[09:18:07] *** Quits: tabakhase (tabakhase@user/tabakhase) (*.net *.split)
[09:18:07] *** Quits: oprypin (~irc@pryp.in) (*.net *.split)
[09:18:07] *** Quits: gaken (~gaken@user/galen) (*.net *.split)
[09:18:07] *** Quits: morgabra (sid500580@user/morgabra) (*.net *.split)
[09:18:07] *** Quits: Pr0phet (sid505706@id-505706.stonehaven.irccloud.com) (*.net *.split)
[09:18:07] *** Quits: crazysim (sid86009@id-86009.stonehaven.irccloud.com) (*.net *.split)
[09:18:07] *** Quits: llinguini (sid257922@id-257922.stonehaven.irccloud.com) (*.net *.split)
[09:18:07] *** Quits: JayDoubleu (sid339529@id-339529.stonehaven.irccloud.com) (*.net *.split)
[09:18:07] *** Quits: Lvl4Sword (sid483043@user/lvl4sword) (*.net *.split)
[09:18:07] *** Quits: raydeeam (uid325131@dgplug/raydeeam) (*.net *.split)
[09:18:07] *** Quits: kadobanana (~mud@user/kadoban) (*.net *.split)
[09:18:07] *** Quits: wolfshappen (~waff@irc.furworks.de) (*.net *.split)
[09:18:07] *** Quits: km (~km@static.55.93.181.135.clients.your-server.de) (*.net *.split)
[09:18:07] *** Quits: Alan (~alan@user/alan) (*.net *.split)
[09:18:07] *** Quits: defn (~n0b0dy@user/defn) (*.net *.split)
[09:18:07] *** Quits: dskull (~dskull@user/dskull) (*.net *.split)
[09:18:08] *** Quits: simone (~nya@user/sx) (*.net *.split)
[09:18:08] *** Quits: kiska (~kiska@user/kiska) (*.net *.split)
[09:18:08] *** Quits: dhch (~dhch@185.213.154.168) (*.net *.split)
[09:18:08] *** Quits: bidouille (~user_name@trois.potager.org) (*.net *.split)
[09:18:08] *** Quits: reenix (~reenix@2a01:238:420e:ae00:1c37:63c1:24c0:ff75) (*.net *.split)
[09:18:08] *** Quits: acid (~acid@user/acid) (*.net *.split)
[09:18:08] *** Quits: Masklin (~joel@89-233-200-127.cust.bredband2.com) (*.net *.split)
[09:18:08] *** Quits: maxpowa (~maxpowa@107.150.39.146) (*.net *.split)
[09:18:08] *** Quits: ajb (~ajb@cupid.whatbox.ca) (*.net *.split)
[09:18:08] *** Quits: Thermoriax (Thermoriax@user/thermoriax) (*.net *.split)
[09:18:08] *** Quits: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net) (*.net *.split)
[09:18:08] *** Quits: Confusioned (~AnySomebo@p5b15fbbc.dip0.t-ipconnect.de) (*.net *.split)
[09:18:08] *** Quits: flay (~flay@user/flay) (*.net *.split)
[09:18:08] *** Quits: Helenah (~helenah@user/helenah) (*.net *.split)
[09:18:08] *** Quits: infobob (~infobob@python/bot/infobob) (*.net *.split)
[09:18:08] *** Quits: fuz (~fuz@user/fuz) (*.net *.split)
[09:18:08] *** Quits: dthpulse (~quassel@podciarou.sk) (*.net *.split)
[09:18:08] *** Quits: NoImNotNineVolt (~fdsa@c-73-248-207-98.hsd1.nj.comcast.net) (*.net *.split)
[09:18:08] *** Quits: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de) (*.net *.split)
[09:18:08] *** Quits: mxp (~mxp@82.98.30.69) (*.net *.split)
[09:18:08] *** Quits: sveinse (~sveinse@2a01:799:55e:1000:c23f:d5ff:fe69:c6fb) (*.net *.split)
[09:18:08] *** Quits: bluss (~bluss@user/bluss) (*.net *.split)
[09:18:08] *** Quits: Fossil (~Fossil@2a03:b0c0:0:1010::398:b001) (*.net *.split)
[09:18:08] *** Quits: libussa (~libussa@libussa.net) (*.net *.split)
[09:18:08] *** Quits: randall (~randall@user/randall) (*.net *.split)
[09:18:08] *** Quits: foxtrot (~foxtrot@user/foxtrot) (*.net *.split)
[09:18:08] *** Quits: ironfroggy (sid495156@id-495156.tooting.irccloud.com) (*.net *.split)
[09:18:08] *** Quits: dTal (quassel@dragonbox/wizzard/dtal) (*.net *.split)
[09:18:08] *** Quits: auri (~admin@fsf/member/auri) (*.net *.split)
[09:18:08] *** Quits: andi_ (~andi@user/andi/x-3467420) (*.net *.split)
[09:18:08] *** Quits: CrtxReavr (crtxreavr@shodan.trioptimum.com) (*.net *.split)
[09:18:08] *** Quits: Darkfoe1 (~chuck@drunk.serverfail.party) (*.net *.split)
[09:18:08] *** Quits: znf (~ibm86@toaster.linge-ma.ro) (*.net *.split)
[09:18:08] *** Quits: LostInWeb (~quassel@narvi.bifroest.eu) (*.net *.split)
[09:18:08] *** Quits: jaggz (~jaggz@user/jaggz) (*.net *.split)
[09:18:08] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (*.net *.split)
[09:18:08] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (*.net *.split)
[09:18:08] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (*.net *.split)
[09:18:08] *** Quits: bomb-on (~bomb-on@194.144.47.113) (*.net *.split)
[09:18:08] *** Quits: hendry (~hendry@210.23.22.2) (*.net *.split)
[09:18:08] *** Quits: Geronimo (~Geronimo@user/geronimo) (*.net *.split)
[09:18:08] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (*.net *.split)
[09:18:08] *** Quits: jim (~jim@about/linux/staff/jim) (*.net *.split)
[09:18:08] *** Quits: [_] (~itchyjunk@user/itchyjunk/x-7353470) (*.net *.split)
[09:18:08] *** Quits: vlm (~vlm@user/vlm) (*.net *.split)
[09:18:08] *** Quits: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net) (*.net *.split)
[09:18:08] *** Quits: frost (~frost@59.71.240.119) (*.net *.split)
[09:18:08] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (*.net *.split)
[09:18:08] *** Quits: qpdb| (~qpdb@user/qpdb) (*.net *.split)
[09:18:08] *** Quits: Linux77 (~kvirc@187-126-71-30.user3p.veloxzone.com.br) (*.net *.split)
[09:18:08] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (*.net *.split)
[09:18:08] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (*.net *.split)
[09:18:08] *** Quits: esv (~esv@72.11.45.232) (*.net *.split)
[09:18:08] *** Quits: adium (adium@user/adium) (*.net *.split)
[09:18:08] *** Quits: Gerula (~Gerula@user/gerula) (*.net *.split)
[09:18:08] *** Quits: Betal (~Betal@user/betal) (*.net *.split)
[09:18:08] *** Quits: rud01f (rud0lf@user/rud0lf) (*.net *.split)
[09:18:08] *** Quits: milosz (~milosz@user/milosz) (*.net *.split)
[09:18:08] *** Quits: struct0 (~struct0@104.248.115.49) (*.net *.split)
[09:18:08] *** Quits: Doffi (~doffi@91.132.197.188) (*.net *.split)
[09:18:08] *** Quits: Foxyloxy_ (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net) (*.net *.split)
[09:18:08] *** Quits: Leonarbro (~Leonet@user/leonarbro) (*.net *.split)
[09:18:08] *** Quits: srji (~srji@static.43.141.203.116.clients.your-server.de) (*.net *.split)
[09:18:08] *** Quits: djhankb (~djhankb@208.113.164.68) (*.net *.split)
[09:18:08] *** Quits: Mechanismus (~LabMonkey@108-246-46-39.lightspeed.rcsntx.sbcglobal.net) (*.net *.split)
[09:18:08] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (*.net *.split)
[09:18:08] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (*.net *.split)
[09:18:08] *** Quits: guntbert (~yesitsme@user/guntbert) (*.net *.split)
[09:18:08] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (*.net *.split)
[09:18:08] *** Quits: poorboy (~poorboy@159.89.189.144) (*.net *.split)
[09:18:08] *** Quits: {HD} (~{HD}@191.96.185.182) (*.net *.split)
[09:18:08] *** Quits: wereii (~wereii@37.205.14.89) (*.net *.split)
[09:18:08] *** Quits: knipster5 (~knipster@user/knipster) (*.net *.split)
[09:18:08] *** Quits: Tiago_Paolini (sid172748@stonehaven.irccloud.com) (*.net *.split)
[09:18:08] *** Quits: TallonRain (sid214799@user/tallonrain) (*.net *.split)
[09:18:08] *** Quits: liam (sid7517@brockwell.irccloud.com) (*.net *.split)
[09:18:08] *** Quits: hsiktas (sid224847@tooting.irccloud.com) (*.net *.split)
[09:18:08] *** Quits: jposer (sid132110@highgate.irccloud.com) (*.net *.split)
[09:18:08] *** Quits: ormiret (sid314108@tooting.irccloud.com) (*.net *.split)
[09:18:08] *** Quits: roolebo (sid64806@charlton.irccloud.com) (*.net *.split)
[09:18:08] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (*.net *.split)
[09:18:08] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (*.net *.split)
[09:18:08] *** Quits: NIXKnight (~NIXKnight@198.98.57.76) (*.net *.split)
[09:18:08] *** Quits: nac (~nac@user/nac) (*.net *.split)
[09:18:08] *** Quits: nickodd (~nickodd@user/nickodd) (*.net *.split)
[09:18:08] *** Quits: realies (~realies@user/realies) (*.net *.split)
[09:18:08] *** Quits: xa0s (~xa0s@mab.sdf.org) (*.net *.split)
[09:18:08] *** Quits: fjmorazan (~quassel@user/fjmorazan) (*.net *.split)
[09:18:08] *** Quits: harleypig (thelounge@harleypig.com) (*.net *.split)
[09:18:08] *** Quits: PocketKiller (PacKetIV@user/packetiv) (*.net *.split)
[09:18:08] *** Quits: dob1 (~dob1@user/dob1) (*.net *.split)
[09:18:08] *** Quits: byzandula (~byzandula@beerbq.net) (*.net *.split)
[09:18:08] *** Quits: energizer (~energizer@user/energizer) (*.net *.split)
[09:18:08] *** Quits: tkazi (~tkazi@user/tkazi) (*.net *.split)
[09:18:08] *** Quits: pan (~quassel@pankid.club) (*.net *.split)
[09:18:08] *** Quits: oz4ga (~tim@93.90.4.233) (*.net *.split)
[09:18:08] *** Quits: fengshaun (~fengshaun@68.69.214.210) (*.net *.split)
[09:18:08] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (*.net *.split)
[09:18:08] *** Quits: srhm (~ascii@user/srhm) (*.net *.split)
[09:18:08] *** Quits: trashbird (~trashbird@user/trashbird) (*.net *.split)
[09:18:08] *** Quits: sleepingforest (~sleepingf@user/sleepingforest) (*.net *.split)
[09:18:08] *** Quits: jay-m126 (~jay-m@41.205.30.141) (*.net *.split)
[09:18:08] *** Quits: lifefir3 (~lifefir3@152.37.120.101) (*.net *.split)
[09:18:08] *** Quits: Kvothe (~weechat@user/elodin) (*.net *.split)
[09:18:08] *** Quits: sgn (~sgn@user/sgn) (*.net *.split)
[09:18:08] *** Quits: SirScott (~SirScott@c-67-176-100-163.hsd1.co.comcast.net) (*.net *.split)
[09:18:08] *** Quits: digilink (~digilink@user/digilink) (*.net *.split)
[09:18:08] *** Quits: nbin (~nbin@user/nbin) (*.net *.split)
[09:18:08] *** Quits: gloin (~gloin@user/gloin) (*.net *.split)
[09:18:08] *** Quits: Burrr (~Burrr@urmomma-fux0rs-with.burrr.nl) (*.net *.split)
[09:18:08] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (*.net *.split)
[09:18:08] *** Quits: shailangsa (~shailangs@host86-145-14-24.range86-145.btcentralplus.com) (*.net *.split)
[09:18:08] *** Quits: Omega037 (~Omega037@047-024-168-024.res.spectrum.com) (*.net *.split)
[09:18:08] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (*.net *.split)
[09:18:08] *** Quits: hays (~rootveget@fsf/member/hays) (*.net *.split)
[09:18:08] *** Quits: dbristow (~dbristow@user/dbristow) (*.net *.split)
[09:18:08] *** Quits: drjp (jeanpaul@112-54-174-82.ftth.glasoperator.nl) (*.net *.split)
[09:18:08] *** Quits: endless (~endlessed@server.zane.wiki) (*.net *.split)
[09:18:08] *** Quits: finsternis (~X@23.226.237.192) (*.net *.split)
[09:18:08] *** Quits: anorthall (~anorthall@user/anorthall) (*.net *.split)
[09:18:08] *** Quits: AM (~techman@87-94-110-167.bb.dnainternet.fi) (*.net *.split)
[09:18:08] *** Quits: b_jonas (~x@catv-176-63-12-67.catv.broadband.hu) (*.net *.split)
[09:18:08] *** Quits: aphysically (~aphysical@user/aphysically) (*.net *.split)
[09:18:08] *** Quits: nuala (~nuala@user/nuala) (*.net *.split)
[09:18:08] *** Quits: lystra_ (~lystra@d53-64-11-169.nap.wideopenwest.com) (*.net *.split)
[09:18:08] *** Quits: ntdll (~ntdll@user/ntdll) (*.net *.split)
[09:18:08] *** Quits: ToAruShiroiNeko (~eva@user/toarushiroineko) (*.net *.split)
[09:18:08] *** Quits: pr3d4t0r (~zhenya01@user/pr3d4t0r) (*.net *.split)
[09:18:08] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (*.net *.split)
[09:18:09] *** Quits: remexre (~nathan@user/remexre) (*.net *.split)
[09:18:09] *** Quits: Jonno_FTW (~come@user/jonno-ftw/x-0835346) (*.net *.split)
[09:18:09] *** Quits: todda7 (~torstein@240.red-81-37-247.dynamicip.rima-tde.net) (*.net *.split)
[09:18:09] *** Quits: launchd (examknow@bitbot/launchd) (*.net *.split)
[09:18:09] *** Quits: saschi (~saschi@user/saschi) (*.net *.split)
[09:18:09] *** Quits: francis (francis@user/francis) (*.net *.split)
[09:18:09] *** Quits: harm_ (~urth@geertswei.nl) (*.net *.split)
[09:18:09] *** Quits: kietop (~kieto@user/kieto) (*.net *.split)
[09:18:09] *** Quits: Fingel_ (~fingel@user/fingel) (*.net *.split)
[09:18:09] *** Quits: mwilson (~mwilson@li159-72.members.linode.com) (*.net *.split)
[09:18:09] *** Quits: wyre (~wyre@user/wyre) (*.net *.split)
[09:18:09] *** Quits: _janus (~janus@blotter.ld-linux.so) (*.net *.split)
[09:18:09] *** Quits: Armen (~Armen@armen138.com) (*.net *.split)
[09:18:09] *** Quits: chilversc (~chilversc@user/chilversc) (*.net *.split)
[09:18:09] *** Quits: janemba (~janemba@94.204.254.193) (*.net *.split)
[09:18:09] *** Quits: Dantali0n (~Dantali0n@217-123-73-108.cable.dynamic.v4.ziggo.nl) (*.net *.split)
[09:18:09] *** Quits: mkoskar (~mkoskar@user/mkoskar) (*.net *.split)
[09:18:09] *** Quits: icy (~icy@user/icy) (*.net *.split)
[09:18:09] *** Quits: Popzi (~Popzi@user/popzi) (*.net *.split)
[09:18:09] *** Quits: roniez_ (~roniez@nixsec.se) (*.net *.split)
[09:18:09] *** Quits: kenwoodfox_ (~quassel@user/kenwoodfox) (*.net *.split)
[09:18:09] *** Quits: sunny93 (~sunny93@wireguard/tunneler/sunny93) (*.net *.split)
[09:18:09] *** Quits: pacbard (~pacbard@user/pacbard) (*.net *.split)
[09:18:09] *** Quits: Classic (~root@user/classic) (*.net *.split)
[09:18:09] *** Quits: kenoba (~kenoba@user/kenoba) (*.net *.split)
[09:18:09] *** Quits: sybariten (~jake@157.90.217.120) (*.net *.split)
[09:18:09] *** Quits: koltrast (~koltrast@h77-53-57-114.cust.a3fiber.se) (*.net *.split)
[09:18:09] *** Quits: portalrat (~portalrat@user/portalrat) (*.net *.split)
[09:18:09] *** Quits: Wulf (~Wulf@user/wulf) (*.net *.split)
[09:18:09] *** Quits: NeilRG (~NeilRG@192.222.196.111) (*.net *.split)
[09:18:09] *** Quits: matsaman (~matsaman@user/matsaman) (*.net *.split)
[09:18:09] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (*.net *.split)
[09:18:09] *** Quits: ska (~ska@user/ska) (*.net *.split)
[09:18:09] *** Quits: brabrax (~brabrax@user/brabrax) (*.net *.split)
[09:18:09] *** Quits: flyback (~flyback@2601:540:8201:1e60:d917:18e:f4c1:e2cf) (*.net *.split)
[09:18:09] *** Quits: tk (~tk@ircpuzzles/staff/tk) (*.net *.split)
[09:18:09] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (*.net *.split)
[09:18:09] *** Quits: ogis_ (~Android@p311253-omed01.osaka.ocn.ne.jp) (*.net *.split)
[09:18:09] *** Quits: fflam (~mdt@ip70-179-20-127.sd.sd.cox.net) (*.net *.split)
[09:18:09] *** Quits: twobitsprite (~twobitspr@195.181.171.237) (*.net *.split)
[09:18:09] *** Quits: gambl0re (~gambl0re@104.247.245.205) (*.net *.split)
[09:18:09] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (*.net *.split)
[09:18:09] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (*.net *.split)
[09:18:09] *** Quits: HurricaneHarry (~quassel@2a02-a455-9d06-1-10d0-99bd-fa0a-4fc9.fixed6.kpn.net) (*.net *.split)
[09:18:09] *** Quits: inom (~inom@176.59.116.194) (*.net *.split)
[09:18:09] *** Quits: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (*.net *.split)
[09:18:09] *** Quits: menace (~someone@user/menace) (*.net *.split)
[09:18:09] *** Quits: daoudr (~daoudr@2a02:1205:c681:1650:eddb:c93b:fa60:14e0) (*.net *.split)
[09:18:09] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (*.net *.split)
[09:18:09] *** Quits: driib (~driib@185.195.233.169) (*.net *.split)
[09:18:09] *** Quits: TML (~tml@user/tml) (*.net *.split)
[09:18:09] *** Quits: c4017_ (~c4017@2604:3d08:747f:7c90:54b4:c0da:a55c:9131) (*.net *.split)
[09:18:09] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (*.net *.split)
[09:18:09] *** Quits: luke-jr (~luke-jr@user/luke-jr) (*.net *.split)
[09:18:09] *** Quits: n1000 (~n1000@user/n1000) (*.net *.split)
[09:18:09] *** Quits: rexbinary (~rexbinary@user/rexbinary) (*.net *.split)
[09:18:09] *** Quits: pjlsergeant (sid143467@stonehaven.irccloud.com) (*.net *.split)
[09:18:09] *** Quits: sharpertool (sid80151@id-80151.stonehaven.irccloud.com) (*.net *.split)
[09:18:09] *** Quits: KnownSyntax (sid233169@user/knownsyntax) (*.net *.split)
[09:18:09] *** Quits: flagrama (sid145621@id-145621.stonehaven.irccloud.com) (*.net *.split)
[09:18:09] *** Quits: WhyNotHugo (sid269118@id-269118.stonehaven.irccloud.com) (*.net *.split)
[09:18:09] *** Quits: nubonix (uid492751@id-492751.charlton.irccloud.com) (*.net *.split)
[09:18:09] *** Quits: wedwards (~wedwards@rtr0.17.31.bogert.cyberfusion.cloud) (*.net *.split)
[09:18:09] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (*.net *.split)
[09:18:09] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (*.net *.split)
[09:18:09] *** Quits: darxun (sid504814@id-504814.tinside.irccloud.com) (*.net *.split)
[09:18:09] *** Quits: Evolver (sid32215@user/evolver) (*.net *.split)
[09:18:09] *** Quits: ziky (sid27087@user/ziky) (*.net *.split)
[09:18:09] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (*.net *.split)
[09:18:09] *** Quits: Pixi (~Pixi@user/pixi) (*.net *.split)
[09:18:09] *** Quits: akaWolf (~akaWolf@akawolf.org) (*.net *.split)
[09:18:09] *** Quits: dyCrazyEd (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (*.net *.split)
[09:18:09] *** Quits: alnr (~alnr@38.125.204.99) (*.net *.split)
[09:18:09] *** Quits: Maikel (~Maikel@130.61.63.136) (*.net *.split)
[09:18:09] *** Quits: birkoff (birkoff@user/birkoff) (*.net *.split)
[09:18:09] *** Quits: shodan45 (~quassel@107.161.22.155) (*.net *.split)
[09:18:09] *** Quits: strungout (znc@mutant.penguin.fyi) (*.net *.split)
[09:18:09] *** Quits: SoF (~skius@user/skius) (*.net *.split)
[09:18:09] *** Quits: tofran (~tofran@37.189.158.134) (*.net *.split)
[09:18:09] *** Quits: daniel-k (~daniel-k@192.241.135.211) (*.net *.split)
[09:18:09] *** Quits: dld (~davidlowr@2601:197:600:1210:2489:889a:8f43:c8c4) (*.net *.split)
[09:18:09] *** Quits: kujo2 (~kujo@188.166.12.52) (*.net *.split)
[09:18:09] *** Quits: utunbu_ (~utunbu@user/utunbu) (*.net *.split)
[09:18:09] *** Quits: quasineutral (~quaisneut@user/quasineutral) (*.net *.split)
[09:18:09] *** Quits: elibrokeit (eschwartz@archlinux/bugwrangler/eschwartz) (*.net *.split)
[09:18:09] *** Quits: bdeshi (~bdeshi@bdeshi.space) (*.net *.split)
[09:18:09] *** Quits: Madda (~Madda@208.249.9.51.dyn.plus.net) (*.net *.split)
[09:18:09] *** Quits: kai (~kai@x50d24799.cust.hiper.dk) (*.net *.split)
[09:18:09] *** Quits: jochum (~jochum@user/jochum) (*.net *.split)
[09:18:09] *** Quits: lack (~lack@user/lack) (*.net *.split)
[09:18:09] *** Quits: Abrax (~Abrax@user/abrax) (*.net *.split)
[09:18:09] *** Quits: baltazar (~baltazar@217-197-181-136.pool.digikabel.hu) (*.net *.split)
[09:18:09] *** Quits: dalan6 (~dalan@14-203-203-26.tpgi.com.au) (*.net *.split)
[09:18:09] *** Quits: greatgatsby (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-7.dsl.bell.ca) (*.net *.split)
[09:18:09] *** Quits: treefrob (~treefrob@p57a9648f.dip0.t-ipconnect.de) (*.net *.split)
[09:18:09] *** Quits: julia (~quassel@user/julia) (*.net *.split)
[09:18:09] *** Quits: Cyp (~cyp@192038129116.mbb.telenor.dk) (*.net *.split)
[09:18:09] *** Quits: shabius (~shabius@2a0e:1c80:2:1021::1001) (*.net *.split)
[09:18:09] *** Quits: dfg (dfg@user/dfg) (*.net *.split)
[09:18:09] *** Quits: JacobFrost (sid494713@id-494713.tinside.irccloud.com) (*.net *.split)
[09:18:09] *** Quits: cloudcell (sid48145@user/cloudcell) (*.net *.split)
[09:18:09] *** Quits: dxrt (~dxrt@user/dxrt) (*.net *.split)
[09:18:09] *** Quits: OnlineCop (~OnlineCop@user/onlinecop) (*.net *.split)
[09:18:09] *** Quits: vince (~vince@75.127.14.76) (*.net *.split)
[09:18:09] *** Quits: kushal (~hopless@dgplug/kushal) (*.net *.split)
[09:18:09] *** Quits: godlike (~godlike@user/godlike) (*.net *.split)
[09:18:09] *** Quits: {4144} (~{4144}@46.56.64.31) (*.net *.split)
[09:18:09] *** Quits: roguelazer (~jbrown@sietchtabr.roguelazer.net) (*.net *.split)
[09:18:09] *** Quits: encukou_ (~quassel@nat-pool-brq-t.redhat.com) (*.net *.split)
[09:18:09] *** Quits: zopsi (~zopsi@irc.dir.ac) (*.net *.split)
[09:18:09] *** Quits: mgubyt_ (u@mgub.yt) (*.net *.split)
[09:18:09] *** Quits: synbiose (~synbiose@user/synbiose) (*.net *.split)
[09:18:09] *** Quits: fleabag (~sirpengi@li587-65.members.linode.com) (*.net *.split)
[09:18:09] *** Quits: frrs (~ferros@vps-eacaba1b.vps.ovh.net) (*.net *.split)
[09:18:09] *** Quits: Bardon (~Bardon@user/Bardon) (*.net *.split)
[09:18:09] *** Quits: cmagina (sid286142@user/cmagina) (*.net *.split)
[09:18:09] *** Quits: OPK (~OPK@user/opk) (*.net *.split)
[09:18:09] *** Quits: marienz__ (~marienz@libera/staff/marienz) (*.net *.split)
[09:18:09] *** Quits: stigz (sid371747@id-371747.tinside.irccloud.com) (*.net *.split)
[09:18:09] *** Quits: Repiphany (~Repiphany@user/repiphany) (*.net *.split)
[09:18:09] *** Quits: mpmc (~mpmc@user/mpmc) (*.net *.split)
[09:18:09] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (*.net *.split)
[09:18:10] *** Quits: rpittau (sid346891@id-346891.tinside.irccloud.com) (*.net *.split)
[09:18:10] *** Quits: syllin (~syllin@user/syllin) (*.net *.split)
[09:18:10] *** Quits: mawk (mawk@wireguard/contributor/mawk) (*.net *.split)
[09:18:10] *** Quits: ElectricSheep (~esheep_zn@pool-100-19-29-200.phlapa.fios.verizon.net) (*.net *.split)
[09:18:10] *** Quits: fluter (~fluter@user/fluter) (*.net *.split)
[09:18:10] *** Quits: RoyK (~roy@user/royk) (*.net *.split)
[09:18:10] *** Quits: jabberwock (~jessy@user/jabberwock) (*.net *.split)
[09:18:10] *** Quits: thinkofher (~thinkofhe@user/thinkofher) (*.net *.split)
[09:18:10] *** Quits: ilmais1n (~il@irc.oh1cgn.fi) (*.net *.split)
[09:18:10] *** Quits: Antibody (~Antibody@107.170.145.30) (*.net *.split)
[09:18:10] *** Quits: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca) (*.net *.split)
[09:18:10] *** Quits: buhman (sid411355@user/buhman) (*.net *.split)
[09:18:10] *** Quits: Somni (insomnia@77-88-237-24.gci.net) (*.net *.split)
[09:18:10] *** Quits: BytesAndCoffee (~libera@bytes.coffee) (*.net *.split)
[09:18:10] *** Quits: AUDaags (~ubuntu@ec2-3-106-166-31.ap-southeast-2.compute.amazonaws.com) (*.net *.split)
[09:18:10] *** Quits: duoi (~duoi@user/duoi) (*.net *.split)
[09:18:10] *** Quits: pieguy128 (~pieguy128@bas1-montreal02-65-92-163-194.dsl.bell.ca) (*.net *.split)
[09:18:10] *** Quits: N3X15 (~nexis@mail.nexisonline.net) (*.net *.split)
[09:18:10] *** Quits: CrunchyChewie (~CrunchyCh@user/crunchychewie) (*.net *.split)
[09:18:10] *** Quits: stoneware (~stoneware@user/stoneware) (*.net *.split)
[09:18:10] *** Quits: alexyov8 (~alexyov@84.22.6.244) (*.net *.split)
[09:18:10] *** Quits: ferz (~ferz@146-241-190-238.dyn.eolo.it) (*.net *.split)
[09:18:10] *** Quits: Falcon| (andreas@user/falcon/x-0540249) (*.net *.split)
[09:18:10] *** Quits: KernelPanic (~KernelPan@user/kernelpanic) (*.net *.split)
[09:18:10] *** Quits: Wu (~wu@158.red-83-50-192.dynamicip.rima-tde.net) (*.net *.split)
[09:18:10] *** Quits: Mikro (leo@libera.ninja) (*.net *.split)
[09:18:10] *** Quits: kevr (~kevr@user/kevr) (*.net *.split)
[09:18:10] *** Quits: Quietus (~quietus@2a04:52c0:101:181::) (*.net *.split)
[09:18:10] *** Quits: feoh (~feoh@ec2-18-224-106-217.us-east-2.compute.amazonaws.com) (*.net *.split)
[09:18:10] *** Quits: visl (visl@user/visl) (*.net *.split)
[09:18:10] *** Quits: fbiagent (~fbiagent@user/fbiagent) (*.net *.split)
[09:18:10] *** Quits: llua (~llua@zsh/developer/llua) (*.net *.split)
[09:18:10] *** Quits: Nothing4You (N4Y@nothing4you.w.tf-w.tf) (*.net *.split)
[09:18:10] *** Quits: neltraus (~neltraus@supernova.neltraus.de) (*.net *.split)
[09:18:10] *** Quits: notepad (~notepad@129.159.46.243) (*.net *.split)
[09:18:10] *** Quits: yano (~yano@ircpuzzles/staff/yano) (*.net *.split)
[09:18:10] *** Quits: gabe (~gabe@user/gabe) (*.net *.split)
[09:18:10] *** Quits: colorado (~fluiD@161.97.231.145) (*.net *.split)
[09:18:10] *** Quits: willcl_ark (~quassel@user/willcl-ark/x-8282106) (*.net *.split)
[09:18:10] *** Quits: koolazer (~koo@user/koolazer) (*.net *.split)
[09:18:10] *** Quits: Dev0n (~Dev0n@user/dev0n) (*.net *.split)
[09:18:10] *** Quits: The-Compiler (~compiler@the-compiler.org) (*.net *.split)
[09:18:10] *** Quits: mikebald (~mikebald@159.203.185.106) (*.net *.split)
[09:18:10] *** Quits: con3 (~con3@2604:a880:4:1d0::be:d000) (*.net *.split)
[09:18:10] *** Quits: tanner (~tanner@tilde.town) (*.net *.split)
[09:18:10] *** Quits: carlio (~carlio@88.198.149.110) (*.net *.split)
[09:18:10] *** Quits: nigelb (~nigel@zeus.nigelb.me) (*.net *.split)
[09:18:10] *** Quits: mgocobachi (~m@ancrae.com) (*.net *.split)
[09:18:10] *** Quits: wintrmute (~wintrmute@bit.pappanaka.com) (*.net *.split)
[09:18:10] *** Quits: bambams (~bambams@user/bambams) (*.net *.split)
[09:18:10] *** Quits: HenryTheLongshot (~Henry@46.101.4.181) (*.net *.split)
[09:18:10] *** Quits: Ara (~Ara@user/ara) (*.net *.split)
[09:18:10] *** Quits: erhandsome (~erhandsom@user/erhandsome) (*.net *.split)
[09:18:10] *** Quits: DCTWD (~dc@uz.utmappro.com) (*.net *.split)
[09:18:10] *** Quits: kgz (~kragniz@nyaa.kragniz.eu) (*.net *.split)
[09:18:10] *** Quits: jfb4 (~jfb4@178.62.2.68) (*.net *.split)
[09:18:10] *** Quits: Karyon (~Karyon@user/karyon) (*.net *.split)
[09:18:10] *** Quits: jootoi (~jootoi@130.61.158.197) (*.net *.split)
[09:18:10] *** Quits: topoi (~topoi@user/topoi) (*.net *.split)
[09:18:10] *** Quits: umimaso (~umimaso@188.166.147.131) (*.net *.split)
[09:18:10] *** Quits: gcbirzan (~gcbirzan@user/gcbirzan) (*.net *.split)
[09:18:10] *** Quits: WayToDoor7 (~WayToDoor@user/waytodoor) (*.net *.split)
[09:18:10] *** Quits: carbolymer (~carbolyme@dropacid.net) (*.net *.split)
[09:18:10] *** Quits: mteo (francis@user/francis) (*.net *.split)
[09:18:10] *** Quits: jiffy (elijah@has.a.fluffy.sh33p.org) (*.net *.split)
[09:18:10] *** Quits: tharkun (tharkun@kvm6.telegraphics.com.au) (*.net *.split)
[09:18:10] *** Quits: habnabit_ (habnabit@python/site-packages/habnabit) (*.net *.split)
[09:18:10] *** Quits: chromis (sid150893@id-150893.tinside.irccloud.com) (*.net *.split)
[09:18:10] *** Quits: dfch (~dfch@user/dfch) (*.net *.split)
[09:18:10] *** Quits: extnct (~extnct@2604:180:2:a54:1::9ce7) (*.net *.split)
[09:18:10] *** Quits: Cienisty (Cienisty@user/cienisty) (*.net *.split)
[09:18:10] *** Quits: hjmcnew (sid86092@tinside.irccloud.com) (*.net *.split)
[09:18:10] *** Quits: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com) (*.net *.split)
[09:18:10] *** Quits: Trashlord (~trash@user/trashlord) (*.net *.split)
[09:18:10] *** Quits: Linkandzelda (~Linkandze@cloudirc.laz.li) (*.net *.split)
[09:18:10] *** Quits: chandankumar (~chandanku@51.159.58.174) (*.net *.split)
[09:18:10] *** Quits: pie_ (~pie_bnc@user/pie/x-2818909) (*.net *.split)
[09:18:10] *** Quits: LuKaRo_ (~LuKaRo@p57b15425.dip0.t-ipconnect.de) (*.net *.split)
[09:18:10] *** Quits: leonardo (~leonardo@user/leonardo) (*.net *.split)
[09:18:10] *** Quits: abyss_ (~robbins@user/robbins) (*.net *.split)
[09:18:10] *** Quits: nullheroes (~nullheroe@168.235.66.22) (*.net *.split)
[09:18:10] *** Quits: tvm (~tom@ip-89-103-250-229.net.upcbroadband.cz) (*.net *.split)
[09:18:10] *** Quits: ops (~ops@user/echelon) (*.net *.split)
[09:18:10] *** Quits: d1b (~db@user/d1b) (*.net *.split)
[09:18:10] *** Quits: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net) (*.net *.split)
[09:18:10] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (*.net *.split)
[09:18:10] *** Quits: micronn (~micronn@user/micronn) (*.net *.split)
[09:18:10] *** Quits: programmerq (~programme@user/programmerq) (*.net *.split)
[09:18:10] *** Quits: nickel8448 (~rahulwadh@147.80.76.34.bc.googleusercontent.com) (*.net *.split)
[09:18:10] *** Quits: CalimeroTeknik (~calimero@user/calimeroteknik) (*.net *.split)
[09:18:10] *** Quits: kstar (~kstar@user/kstar) (*.net *.split)
[09:18:10] *** Quits: jpaa (~jpaa@87.118.126.66) (*.net *.split)
[09:18:10] *** Quits: ulif (~nick@user/ulif) (*.net *.split)
[09:18:10] *** Quits: poxifide (deathspawn@user/poxifide) (*.net *.split)
[09:18:10] *** Quits: towel (~towel@user/towel) (*.net *.split)
[09:18:10] *** Quits: amoe (~amoe@visarend.solasistim.net) (*.net *.split)
[09:18:10] *** Quits: jocke-l (jocke-l@a.x0.is) (*.net *.split)
[09:18:10] *** Quits: argoneus (~argoneus@argoneus.com) (*.net *.split)
[09:18:10] *** Quits: ixjlyons (~kenny@li1177-148.members.linode.com) (*.net *.split)
[09:18:10] *** Quits: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it) (*.net *.split)
[09:18:10] *** Quits: kpcyrd (~kpcyrd@archlinux/trusteduser/kpcyrd) (*.net *.split)
[09:18:10] *** Quits: mdw (~root@159.65.86.163) (*.net *.split)
[09:18:10] *** Quits: SnoopJ (~snoopj@user/snoopj) (*.net *.split)
[09:18:10] *** Quits: mumixam (~m@user/mumixam) (*.net *.split)
[09:18:10] *** Quits: Daemoen (~Daemoen@2604:a880:2:d0::2164:d001) (*.net *.split)
[09:18:10] *** Quits: reda (~reda@user/reda) (*.net *.split)
[09:18:10] *** Quits: tpr (~tpr@user/tpr) (*.net *.split)
[09:18:10] *** Quits: vinnix (~vinnix@user/vinnix) (*.net *.split)
[09:18:10] *** Quits: sale (~sale@ypocit.initech.link) (*.net *.split)
[09:18:10] *** Quits: phantomcircuit (~phantomci@192.241.205.97) (*.net *.split)
[09:18:10] *** Quits: Bluefoxicy (~Bluefoxic@c-73-132-244-30.hsd1.md.comcast.net) (*.net *.split)
[09:18:10] *** Quits: orkim (~orkim@user/orkim) (*.net *.split)
[09:18:11] *** Quits: remedan (~remedan@balak.me) (*.net *.split)
[09:18:11] *** Quits: awygle (~quassel@2604:a880:2:d0::5380:3001) (*.net *.split)
[09:18:11] *** Quits: Spiney (~Spiney@2604:a880:400:d0::1d82:b001) (*.net *.split)
[09:18:11] *** Quits: vodkra (~vodkra@user/vodkra) (*.net *.split)
[09:18:11] *** Quits: ndim (hun@moooo.n-dimensional.de) (*.net *.split)
[09:18:11] *** Quits: paperManu (~paperManu@138.197.128.151) (*.net *.split)
[09:18:11] *** Quits: MightyMu (~MightyMu@104.131.138.31) (*.net *.split)
[09:18:11] *** Quits: zwindl (~abc@user/abc) (*.net *.split)
[09:18:11] *** Quits: Spydar007 (~spydar007@user/spydar007) (*.net *.split)
[09:18:11] *** Quits: erry (~erry@errietta.me) (*.net *.split)
[09:18:11] *** Quits: kantlivelong (~kantlivel@cpe-67-250-125-43.hvc.res.rr.com) (*.net *.split)
[09:18:11] *** Quits: Techcable_ (~Techcable@168.235.93.147) (*.net *.split)
[09:18:11] *** Quits: wbn (~wbn@user/wbn) (*.net *.split)
[09:18:11] *** Quits: thekingofbandit (thekingofb@user/thekingofbandit) (*.net *.split)
[09:18:11] *** Quits: FunkyBob (~curtis@vhost3.tinbrain.net) (*.net *.split)
[09:18:11] *** Quits: DK3 (~DK3@rs000042.fastrootserver.de) (*.net *.split)
[09:18:11] *** Quits: zinc_ (~zinc@163.ip-51-254-203.eu) (*.net *.split)
[09:18:11] *** Quits: Teacup (~teacup@user/teacup) (*.net *.split)
[09:18:11] *** Quits: jab416171 (~jab416171@c-174-52-176-66.hsd1.ut.comcast.net) (*.net *.split)
[09:18:11] *** Quits: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be) (*.net *.split)
[09:18:11] *** Quits: theo (~theo@user/theo) (*.net *.split)
[09:18:11] *** Quits: grandfso (~quassel@199.232.237.35.bc.googleusercontent.com) (*.net *.split)
[09:18:11] *** Quits: BillyZane (~BillyZane@91.196.220.172) (*.net *.split)
[09:18:11] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com) (*.net *.split)
[09:18:11] *** Quits: push-f (~martin@push-f.com) (*.net *.split)
[09:18:11] *** Quits: canton7 (canton7@about/csharp/canton7) (*.net *.split)
[09:18:11] *** Quits: lithammer (~lithammer@arch-vps.cloud.tilaa.com) (*.net *.split)
[09:18:11] *** Quits: supernovah (~supernova@mail.ijk.nz) (*.net *.split)
[09:18:11] *** Quits: Helle (~helle@80-100-16-232.ip.xs4all.nl) (*.net *.split)
[09:18:11] *** Quits: justache (~justache@user/justache) (*.net *.split)
[09:18:11] *** Quits: CuriousErnestBro (~CuriousEr@user/curiousernestbro) (*.net *.split)
[09:18:11] *** Quits: Scotteh (~Scotteh@user/scotteh) (*.net *.split)
[09:18:11] *** Quits: dav1d (~dav1d@user/dav1d) (*.net *.split)
[09:18:11] *** Quits: ablegreen (~ablegreen@tsunami.ocf.berkeley.edu) (*.net *.split)
[09:18:11] *** Quits: xaltsc (~xaltsc@user/xaltsc) (*.net *.split)
[09:18:11] *** Quits: mrus (~mrus@2001:19f0:5:1535:5400:3ff:fe7d:10ae) (*.net *.split)
[09:18:11] *** Quits: AkechiShiro (~licht@user/akechishiro) (*.net *.split)
[09:18:11] *** Quits: tf (~tf@user/tf) (*.net *.split)
[09:18:11] *** Quits: Tashtari (~tashtari@user/tashtari) (*.net *.split)
[09:18:11] *** Quits: taru9 (~realTaru9@user/taru9) (*.net *.split)
[09:18:11] *** Quits: agronholm (sid403424@id-403424.brockwell.irccloud.com) (*.net *.split)
[09:18:11] *** Quits: explodes (~explodes@user/explodes) (*.net *.split)
[09:18:11] *** Quits: Yhg1s (sid387777@python/psf/thomas) (*.net *.split)
[09:18:11] *** Quits: ebb (ebb@user/ebb) (*.net *.split)
[09:18:11] *** Quits: fruitypunk (~user@2a01:7c8:aaaa:12:5054:ff:fe69:1df9) (*.net *.split)
[09:18:11] *** Quits: Byteflux (~byte@byteflux.net) (*.net *.split)
[09:18:11] *** Quits: cole (~cole@user/cole) (*.net *.split)
[09:18:11] *** Quits: tudor (~tudor@tomka.hu) (*.net *.split)
[09:18:11] *** Quits: meridion (~meridion@punt.hetgrotebos.org) (*.net *.split)
[09:18:11] *** Quits: b0nn (~shane@user/b0nn) (*.net *.split)
[09:18:11] *** Quits: percY- (~percY@138.68.239.19) (*.net *.split)
[09:18:11] *** Quits: bboles (~bboles@64.94.212.195) (*.net *.split)
[09:18:11] *** Quits: grym (~grym@user/grym) (*.net *.split)
[09:18:11] *** Quits: noyb (~noyb@user/noyb) (*.net *.split)
[09:18:11] *** Quits: ravish0007 (~quassel@ec2-65-0-45-121.ap-south-1.compute.amazonaws.com) (*.net *.split)
[09:18:11] *** Quits: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr) (*.net *.split)
[09:18:11] *** Quits: Riviera (Riviera@user/riviera) (*.net *.split)
[09:18:11] *** Quits: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3) (*.net *.split)
[09:18:11] *** Quits: meejah (~meejah@rutas.meejah.ca) (*.net *.split)
[09:18:11] *** Quits: gerikson (~gerikson@user/gerikson) (*.net *.split)
[09:18:11] *** Quits: stemid (~nocturnal@i-lands.anark.ist) (*.net *.split)
[09:18:11] *** Quits: adamchainz (~adamj@51.15.34.126) (*.net *.split)
[09:18:11] *** Quits: Gaffel (~gaffel@h-178-174-170-170.A1405.priv.bahnhof.se) (*.net *.split)
[09:18:11] *** Quits: themill (~stuart@debian/stuart) (*.net *.split)
[09:18:11] *** Quits: InPhase (~InPhase@openscad/inphase) (*.net *.split)
[09:18:11] *** Quits: someguy1233 (~someguy@user/someguy123) (*.net *.split)
[09:18:11] *** Quits: dlam (~dlam@dlam.me) (*.net *.split)
[09:18:11] *** Quits: n-st (~n-st@user/n-st) (*.net *.split)
[09:18:11] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (*.net *.split)
[09:18:11] *** Quits: DocMors (~DocMors@web.crypticity.net) (*.net *.split)
[09:18:11] *** Quits: rich (~rich@2a03:4000:3f:f1:b859:16ff:fe45:e87f) (*.net *.split)
[09:18:11] *** Quits: nicksloan (sid195124@user/nicksloan) (*.net *.split)
[09:18:11] *** Quits: samathy (~samathy@user/samathy) (*.net *.split)
[09:18:11] *** Quits: mingdao (~mingdao@wireguard/tunneler/mingdao) (*.net *.split)
[09:18:11] *** Quits: drmessano (sid104353@user/drmessano) (*.net *.split)
[09:18:11] *** Quits: mjh4386 (~mjh4386@165.22.53.231) (*.net *.split)
[09:18:11] *** Quits: ario (~ario@159.65.220.102) (*.net *.split)
[09:18:11] *** Quits: a1paca_ (~a1paca@user/a1paca) (*.net *.split)
[09:18:11] *** Quits: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4) (*.net *.split)
[09:18:11] *** Quits: redj (~quassel@bras-base-bchmpq5707w-grc-24-76-69-197-62.dsl.bell.ca) (*.net *.split)
[09:18:11] *** Quits: Anarchic (~Anarchic@getlegit.co.uk) (*.net *.split)
[09:18:11] *** Quits: dreamer (~dreamer@user/dreamer) (*.net *.split)
[09:18:11] *** Quits: Stx (stx@libera/staff/stx) (*.net *.split)
[09:18:11] *** Quits: trench (trench@user/trench) (*.net *.split)
[09:18:11] *** Quits: Tritium (~tritium@toxin.sdamon.com) (*.net *.split)
[09:18:11] *** Quits: effprime (~effprime@user/effprime) (*.net *.split)
[09:18:11] *** Quits: glider_ (~glider@user/glider) (*.net *.split)
[09:18:11] *** Quits: mabi (~m42e@pb42.de) (*.net *.split)
[09:18:11] *** Quits: njt (~njt@zaph.org) (*.net *.split)
[09:18:11] *** Quits: zingos (~zingos@46.101.6.21) (*.net *.split)
[09:18:11] *** Quits: Ox4 (~int@0x4.cx) (*.net *.split)
[09:18:11] *** Quits: python (~python@user/demon) (*.net *.split)
[09:18:11] *** Quits: CodeGeek (~codegeek@about/java/CodeGeek) (*.net *.split)
[09:18:11] *** Quits: Mogget (Mogget@vogon.moshwire.com) (*.net *.split)
[09:18:11] *** Quits: bjb (~bjb@sourcerer.ca) (*.net *.split)
[09:18:11] *** Quits: mastardet (~mastardet@user/mastardet) (*.net *.split)
[09:18:11] *** Quits: nfc (nfc@tilde.institute) (*.net *.split)
[09:18:11] *** Quits: DaPinkOne (~Dap@user/dap) (*.net *.split)
[09:18:11] *** Quits: ttkap_ (~ttkap@user/ttkap) (*.net *.split)
[09:18:11] *** Quits: Widdershins (widders@ps.mad.cash) (*.net *.split)
[09:18:11] *** Quits: Xavierdarkness (~xavierdar@user/xavierdarkness) (*.net *.split)
[09:18:11] *** Quits: matthewcroughan (~quassel@static.211.38.12.49.clients.your-server.de) (*.net *.split)
[09:18:11] *** Quits: Retr0id (~Retr0id@user/retr0id) (*.net *.split)
[09:18:11] *** Quits: tumbleweed (~stefanor@ubuntu/member/tumbleweed) (*.net *.split)
[09:18:11] *** Quits: Ellenor (ellenor@vice-chairwoman.of.freenode.management) (*.net *.split)
[09:18:11] *** Quits: dmvrtx (dmvrtx@2a01:7e01::f03c:92ff:fefd:6ed6) (*.net *.split)
[09:18:11] *** Quits: Ulti (~matt@ec2-35-178-236-167.eu-west-2.compute.amazonaws.com) (*.net *.split)
[09:18:11] *** Quits: nvz (~user@nvz.farted.online) (*.net *.split)
[09:18:11] *** Quits: tardisx (~tardisx@2400:8902::f03c:91ff:fe89:d107) (*.net *.split)
[09:18:11] *** Quits: sco1 (~sco1@charon.whatbox.ca) (*.net *.split)
[09:18:11] *** Quits: emptynine (tkk@cybertron.redlight.li) (*.net *.split)
[09:18:11] *** Quits: Tempesta (~Tempesta@user/tempesta) (*.net *.split)
[09:18:11] *** Quits: bandit_za (~bandit_za@2c0f:ed28:b016:7760::1ed) (*.net *.split)
[09:18:11] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (*.net *.split)
[09:18:11] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (*.net *.split)
[09:18:11] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (*.net *.split)
[09:18:11] *** Quits: kuler (~kulernil@gateway/tor-sasl/kuler) (*.net *.split)
[09:18:11] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (*.net *.split)
[09:18:11] *** Quits: penguino (~mrpenguin@user/mrpenguin) (*.net *.split)
[09:18:11] *** Quits: hendursaga (~weechat@user/hendursaga) (*.net *.split)
[09:18:11] *** Quits: CombatVet (~c4@user/combatvet) (*.net *.split)
[09:18:11] *** Quits: noctavian (~noctavian@gateway/tor-sasl/noctavian) (*.net *.split)
[09:18:11] *** Quits: ano (~weechat@user/ano) (*.net *.split)
[09:18:11] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (*.net *.split)
[09:18:11] *** Quits: Aminda (~sid12355@Feneas/Mikaela) (*.net *.split)
[09:18:11] *** Quits: mickey (~user@user/mickey) (*.net *.split)
[09:18:11] *** Quits: spithash (~spithash@user/spithash) (*.net *.split)
[09:18:11] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (*.net *.split)
[09:18:11] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (*.net *.split)
[09:18:11] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (*.net *.split)
[09:18:11] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (*.net *.split)
[09:18:11] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (*.net *.split)
[09:18:11] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (*.net *.split)
[09:18:11] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (*.net *.split)
[09:18:11] *** Quits: cjb (~cjb@user/cjb) (*.net *.split)
[09:18:11] *** Quits: Trieste (T@user/pilgrim) (*.net *.split)
[09:18:12] *** Quits: ST47 (~ST47@wikimedia/st47) (*.net *.split)
[09:18:12] *** Quits: vbgunz (~vbgunz@35.141.71.47) (*.net *.split)
[09:18:12] *** Quits: ATAD (~ATAD@user/atad) (*.net *.split)
[09:18:12] *** Quits: HenryG (~quassel@2607:5300:201:3000::f63) (*.net *.split)
[09:18:12] *** Quits: onu (~onufn@gibbs.uberspace.de) (*.net *.split)
[09:18:12] *** Quits: jjhoo (~jahakala@dsl-trebng21-58c18f-56.dhcp.inet.fi) (*.net *.split)
[09:18:12] *** Quits: avu (~jan@user/avu) (*.net *.split)
[09:18:12] *** Quits: murr4y (ali@user/murr4y) (*.net *.split)
[09:18:12] *** Quits: nisstyre (~wes@user/nisstyre) (*.net *.split)
[09:18:12] *** Quits: phy1729 (~phy1729@zsh/wizard/phy1729) (*.net *.split)
[09:18:12] *** Quits: duracrisis (~kkh@user/duracrisis) (*.net *.split)
[09:18:12] *** Quits: JerryXiao (~JerryXiao@user/jerryxiao) (*.net *.split)
[09:18:12] *** Quits: mrkajetanp (~mrkajetan@88.98.245.28) (*.net *.split)
[09:18:12] *** Quits: averell (~averell@user/averell) (*.net *.split)
[09:18:12] *** Quits: ethoxy (~caretaker@cx21.havox.ru) (*.net *.split)
[09:18:12] *** Quits: mchlumsky (~mchlumsky@modemcable106.190-179-173.mc.videotron.ca) (*.net *.split)
[09:18:12] *** Quits: bdeferme1 (~bdeferme@i.ctrl86.com) (*.net *.split)
[09:18:12] *** Quits: elmcrest (~elmcrest@static.48.211.217.95.clients.your-server.de) (*.net *.split)
[09:18:12] *** Quits: peterandre (peterandre@2605:6400:c847:1524::4251) (*.net *.split)
[09:18:12] *** Quits: woky (~woky@li1651-31.members.linode.com) (*.net *.split)
[09:18:12] *** Quits: ouemt (~quassel@user/ouemt) (*.net *.split)
[09:18:12] *** Quits: cyberjunkie (~cyberjunk@wireguard/tunneler/cyberjunkie) (*.net *.split)
[09:18:12] *** Quits: Ninpo (~Ninpo@charlton.qap.la) (*.net *.split)
[09:18:12] *** Quits: k0fein (~esmeralda@user/k0fein) (*.net *.split)
[09:18:12] *** Quits: Yasumoto (~Yasumoto@ec2-34-212-228-153.us-west-2.compute.amazonaws.com) (*.net *.split)
[09:18:12] *** Quits: bss (bss@rie.incorporeal.org) (*.net *.split)
[09:18:12] *** Quits: u4t (~chat@78.ip-139-99-236.net) (*.net *.split)
[09:18:12] *** Quits: barometz (~dvanb@i117058.upc-i.chello.nl) (*.net *.split)
[09:18:12] *** Quits: Aye (jeda@hellomouse/dev/cryb.jeda) (*.net *.split)
[09:18:12] *** Quits: notevil (~notevil@user/notevil) (*.net *.split)
[09:18:12] *** Quits: beanzilla (~beanzilla@user/beanzilla) (*.net *.split)
[09:18:12] *** Quits: pizza (~pizzaiolo@user/pizzaiolo) (*.net *.split)
[09:18:12] *** Quits: neil (~kneel@rockylinux/infra/neil) (*.net *.split)
[09:18:12] *** Quits: hexa- (~hexa-@juno.lossy.network) (*.net *.split)
[09:18:12] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (*.net *.split)
[09:18:12] *** Quits: sabet (~sabet@user/sabet) (*.net *.split)
[09:18:12] *** Quits: _mal (~mal@user/mal/x-8025409) (*.net *.split)
[09:18:12] *** Quits: lf94 (~lf94@2604:a880:cad:d0::cd6:8001) (*.net *.split)
[09:18:12] *** Quits: bjonnh (~jo@about/aquilenet/bjonnh) (*.net *.split)
[09:18:12] *** Quits: Wooble (~Wooble@107.170.27.240) (*.net *.split)
[09:18:12] *** Quits: MacGyver (~macgyver@user/macgyver) (*.net *.split)
[09:18:12] *** Quits: Hobbyboy (Hobbyboy@hobbyboy.co.uk) (*.net *.split)
[09:18:12] *** Quits: gAy_Dragon (A_D@doom-tower.awesome-dragon.science) (*.net *.split)
[09:18:12] *** Quits: CygniX (~CygniX@2605:6400:30:fdc6:68:f4:4e:78) (*.net *.split)
[09:18:12] *** Quits: _moep_ (~moep@user/moep/x-3358975) (*.net *.split)
[09:18:12] *** Quits: mattmcc (matt@2600:3c00::f03c:91ff:fe89:c2e8) (*.net *.split)
[09:18:12] *** Quits: gbear605 (~gbear605@user/gbear605) (*.net *.split)
[09:18:12] *** Quits: ross (sid305269@user/ross) (*.net *.split)
[09:18:12] *** Quits: gossie (~gossie@2a10:3781:328:1:e1d:50cc:c868:ca94) (*.net *.split)
[09:18:12] *** Quits: farn (~farn@2a03:4000:7:3cd:d4ab:85ff:feeb:f505) (*.net *.split)
[09:18:12] *** Quits: debnet (sid330295@python/afpy/debnet) (*.net *.split)
[09:18:12] *** Quits: rockSTONE (sid315855@id-315855.brockwell.irccloud.com) (*.net *.split)
[09:18:12] *** Quits: bertiger (~bertiger@user/bertiger) (*.net *.split)
[09:18:12] *** Quits: confluence (~quassel@2a01:4f8:c17:3ca::2) (*.net *.split)
[09:18:12] *** Quits: oddish (~oddish@2a01:4f8:1c1c:a9da::1) (*.net *.split)
[09:18:12] *** Quits: Catatonic (~Catatonic@ariel.whatbox.ca) (*.net *.split)
[09:18:12] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (*.net *.split)
[09:18:12] *** Quits: Jmtrix (~qed@user/jmtrix) (*.net *.split)
[09:18:12] *** Quits: dnns01 (~quassel@2a02:c207:3003:651::1) (*.net *.split)
[09:18:12] *** Quits: nixture (uid240036@id-240036.brockwell.irccloud.com) (*.net *.split)
[09:18:12] *** Quits: daniel2 (daniel@user/daniel2) (*.net *.split)
[09:18:12] *** Quits: taeaad (~taeaad@user/taeaad) (*.net *.split)
[09:18:12] *** Quits: synic (~squish@li74-118.members.linode.com) (*.net *.split)
[09:18:12] *** Quits: wm (~wmy@2a01:4f8:1c1c:7918::1) (*.net *.split)
[09:18:12] *** Quits: genewitch (~genewitch@triggerwarning.projectftm.com) (*.net *.split)
[09:18:12] *** Quits: rodstewart (~dmartins@188.ip-149-56-97.net) (*.net *.split)
[09:18:12] *** Quits: redkrieg (~redkrieg@user/redkrieg) (*.net *.split)
[09:18:12] *** Quits: masterkorp (~masterkor@user/masterkorp) (*.net *.split)
[09:18:12] *** Quits: mdk (~mdk@python/psf/mdk) (*.net *.split)
[09:18:37] *** Joins: Pent (sid313808@id-313808.tooting.irccloud.com)
[09:18:37] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[09:18:37] *** Joins: waxfire (~waxfire@65.119.2.240)
[09:18:37] *** Joins: kafka (~kafka@user/kafka)
[09:18:37] *** Joins: simon816 (~simon816@ec2-35-178-246-72.eu-west-2.compute.amazonaws.com)
[09:18:37] *** Joins: yourfate (~yourfate@cabal.yourfate.org)
[09:18:37] *** Joins: zeus (~user@user/kamyl)
[09:18:37] *** Joins: pavelow (~pavelow@opticalchimp.com)
[09:18:37] *** Joins: starz (starz@ns378512.ip-37-59-36.eu)
[09:18:37] *** Joins: ephemer0l (~ephemer0l@organizedmagnetism.com)
[09:18:37] *** Joins: dale (dale@user/dale)
[09:18:37] *** Joins: DragoonAethis (~quassel@2a01:4f8:c2c:3359::1)
[09:18:37] *** Joins: tnez (~el@user/tnez)
[09:18:37] *** Joins: susam (~susam@user/susam)
[09:18:37] *** Joins: Peng_ (~mnordhoff@ultimate1.mnrd.us)
[09:18:37] *** Joins: baloona (~baloona@mail.baloona.de)
[09:18:37] *** Joins: t2mkn (~t2mkn@user/t2mkn)
[09:18:37] *** Joins: Chex (~Chex@user/chex)
[09:18:37] *** Joins: Luyin (~daisy@user/luyin)
[09:18:37] *** Joins: sunyibo (~dorsch@2a04:52c0:101:443::)
[09:18:37] *** Joins: tuxifreund (tuxifreund@ubuntuusers/wikiteam/tuxifreund)
[09:18:37] *** Joins: Lartza (lartza@user/lartza)
[09:18:37] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[09:18:37] *** Joins: strudl (~strudl@user/strudl)
[09:18:37] *** Joins: truth (~truth@user/truth)
[09:18:37] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[09:18:37] *** Joins: m1dnight (~christoph@188.ip-51-91-158.eu)
[09:18:37] *** Joins: graingert (sid128301@id-128301.tinside.irccloud.com)
[09:18:37] *** Joins: enteral (~enteral@discovery.whatbox.ca)
[09:18:37] *** Joins: zware (~zach@python/psf/zware)
[09:18:37] *** Joins: circuitbone (sid355934@user/circuitbone)
[09:18:37] *** Joins: braxas (sid508886@id-508886.tooting.irccloud.com)
[09:18:37] *** Joins: rgp (~rgp@user/rgp)
[09:18:37] *** Joins: SeeM (~SeeM@153.ip-54-38-53.eu)
[09:18:37] *** Joins: shrysr (~shrysr@user/shrysr)
[09:18:37] *** Joins: tone0 (~tone0@071-011-252-111.res.spectrum.com)
[09:18:37] *** Joins: ringo_ (~ringo@157.230.117.128)
[09:18:37] *** Joins: luckydonald (~luckydona@user/luckydonald)
[09:18:37] *** Joins: Forkk (forkk@2600:3c00::f03c:91ff:fe84:de4d)
[09:18:37] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[09:18:37] *** Joins: kstolen (~kStolen@2a00:fa40:2aaa:1::539:82de)
[09:18:37] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[09:18:37] *** Joins: nanonyme (nanonyme@kapsi.fi)
[09:18:37] *** Joins: mcglk (~mcglk@131.191.49.120)
[09:18:37] *** Joins: damonlynch (~ngaio@2601:245:c700:2c06:8193:3758:a9ca:44ec)
[09:18:37] *** Joins: Socra (~Socra@206.217.216.27)
[09:18:37] *** Joins: luersuve (uid512702@id-512702.charlton.irccloud.com)
[09:18:37] *** Joins: op0x0f05 (uid512716@id-512716.tinside.irccloud.com)
[09:18:37] *** Joins: gin (~gin@user/gin)
[09:18:37] *** Joins: fpc (~fpc@user/fpc)
[09:18:37] *** Joins: etienneme (~etienne@user/etienneme)
[09:18:37] *** Joins: raub (~Raub_Voge@cpe-107-15-44-154.nc.res.rr.com)
[09:18:37] *** Joins: Allegretto (~allegrett@94-21-231-38.pool.digikabel.hu)
[09:18:37] *** Joins: mkbloke (~mkbloke@vps.cammo.me.uk)
[09:18:37] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[09:18:37] *** Joins: Jigsy (~Jigsy@user/jigsy)
[09:18:37] *** Joins: enyc (~enyc@user/enyc)
[09:18:37] *** Joins: riposte (~finalripo@2403-5800-3200-5c02--310.ip6.aussiebb.net)
[09:18:37] *** Joins: acnebs (~acnebs@2604:a880:400:d0::1a64:c001)
[09:18:37] *** Joins: graphitemaster (~graphitem@user/graphitemaster)
[09:18:37] *** Joins: krjst (~krjst@2604:a880:800:c1::16b:8001)
[09:18:37] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[09:18:37] *** Joins: webmind (~webmind@user/webmind)
[09:18:37] *** Joins: pyfisch (~pyfisch@user/pyfisch)
[09:18:37] *** Joins: Knyght (sid365271@id-365271.brockwell.irccloud.com)
[09:18:37] *** Joins: nocko (sid501219@user/nocko)
[09:18:37] *** Joins: Freso (sid7914@libera/staff/metabrainz.user.Freso)
[09:18:37] *** Joins: coldmountain (sid484352@id-484352.brockwell.irccloud.com)
[09:18:37] *** Joins: bn_work (uid268505@id-268505.highgate.irccloud.com)
[09:18:37] *** Joins: cyberpear (uid364019@fedora/cyberpear)
[09:18:37] *** Joins: r0bby (r0bby@user/r0bby)
[09:18:37] *** Joins: bjs (sid190364@user/bjs)
[09:18:37] *** Joins: monchi (sid347418@id-347418.charlton.irccloud.com)
[09:18:37] *** Joins: mgedmin (~mg@user/mgedmin)
[09:18:37] *** Joins: zaquest (~notzaques@5.128.210.178)
[09:18:37] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4)
[09:18:37] *** Joins: WarpedAI (~Warped@user/warped)
[09:18:37] *** Joins: morrigan (~m0rr1gan@user/m0rr1gan)
[09:18:37] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[09:18:37] *** Joins: yogoyo (~paddy@user/yogoyo)
[09:18:37] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[09:18:37] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[09:18:37] *** Joins: lericson (~toxik@user/lericson)
[09:18:37] *** Joins: Ennea (~Ennea@user/ennea)
[09:18:37] *** Joins: olasd (~olasd@softwareheritage/olasd)
[09:18:37] *** Joins: Henryx (~ebianchi@2a01:4f8:1c0c:76ad::1)
[09:18:37] *** Joins: quesker (idnet@2600:3c01::f03c:91ff:feac:4ce2)
[09:18:37] *** Joins: greyltc (~greyltc@user/greyltc)
[09:18:37] *** Joins: yolk (~yolk@2600:1f16:f4a:2100:77f5:a0ec:35f:147b)
[09:18:37] *** Joins: Amun-Ra (~amun-ra@retro.rocks)
[09:18:37] *** Joins: Henry151 (~bishop@user/henry151)
[09:18:37] *** Joins: arza (arza@arza.us)
[09:18:37] *** Joins: phylaz (~phylaz@219.92-221-176.customer.lyse.net)
[09:18:37] *** Joins: yemel (~yemel@user/yemel)
[09:18:37] *** Joins: Titore (Titore@user/titore)
[09:18:37] *** Joins: BlackBishop (dexter@user/blackbishop)
[09:18:37] *** Joins: Wegge (~wegge@user/wegge)
[09:18:37] *** Joins: deniska (~denis@user/deniska)
[09:18:37] *** Joins: `rdvn (~rdvn@user/rdvn)
[09:18:37] *** Joins: _0ne (~one@user/0ne/x-2101768)
[09:18:37] *** Joins: Mathisen (mathisen@about/windows/staff/mathisen)
[09:18:37] *** Joins: PanamaCity3003 (~PanamaCit@skylab/user/panamacity3003)
[09:18:37] *** Joins: jor (~jor@jor.link)
[09:18:37] *** Joins: mjsir911 (~bnc@user/mjsir911)
[09:18:37] *** Joins: infernix (~nix@2a02:22a0:bbb1:d500::2)
[09:18:37] *** Joins: petemc (~pete@vps-80fad31a.vps.ovh.net)
[09:18:37] *** Joins: matiss (~matiss@almalinux/web/matiss)
[09:18:37] *** Joins: MikachuPi (~Mikachu@2001:bc8:47a8:559::1)
[09:18:37] *** Joins: Neoon (~Neoon@2607:5300:60:23a5::1111)
[09:18:37] *** Joins: Koffa (jkohvakk@user/koffa)
[09:18:37] *** Joins: deepy (deepy@user/deepy)
[09:18:37] *** Joins: ThomasJ (~ThomasJ@user/thomasj)
[09:18:37] *** Joins: no_maam (~chat@gauss.datenzone.de)
[09:18:37] *** Joins: j00n (~mario@user/j00n)
[09:18:37] *** Joins: dragonmaster (dragonmast@user/dragonmaster)
[09:18:37] *** Joins: ses1984 (~stephanst@128.27.196.35.bc.googleusercontent.com)
[09:18:37] *** Joins: Leliana (is@the.one.and.only.revthefox.co.uk)
[09:18:37] *** Joins: jess (~jess@libera/staff/jess)
[09:18:37] *** Joins: zmt00 (~zmt00@user/zmt00)
[09:18:37] *** Joins: hexnewbie (~hexnewbie@user/hexnewbie)
[09:18:37] *** Joins: FKAShinobi (~shinobi@2601:18c:d07f:f2e9:fd24:2e5d:b6a0:9496)
[09:18:37] *** Joins: zBeeble42 (~zBeeble@2001:1928:1::35)
[09:18:37] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[09:18:37] *** Joins: Vision (~Vision@024-178-231-173.res.spectrum.com)
[09:18:37] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[09:18:37] *** Joins: fxrs_ (~fxrs@192.227.212.130)
[09:18:37] *** Joins: dgw (dgw@sopel/admin/dgw)
[09:18:37] *** Joins: korros (~korros@li1845-92.members.linode.com)
[09:18:37] *** Joins: lorenzosu (~lorenzosu@user/lorenzosu)
[09:18:37] *** Joins: Strom (strom@fedora/strom)
[09:18:37] *** Joins: ripdog (~quassel@user/ripdog)
[09:18:37] *** Joins: s1b1 (~s1b1@user/s1b1)
[09:18:37] *** Joins: derelict (~derelict@user/derelict)
[09:18:37] *** Joins: wilk (~wilk@user/wilk)
[09:18:37] *** Joins: jmcantrell (~jmcantrel@user/jmcantrell)
[09:18:37] *** Joins: gry (~quassel@botters/gry)
[09:18:37] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-519b-3f89-f896-0f8f.res6.spectrum.com)
[09:18:37] *** Joins: computeiro (~Wender@189.37.64.202)
[09:18:37] *** Joins: EGH (~EGH@185.25.195.104)
[09:18:37] *** Joins: arti (~arti@2001:bb8:4008:2020::f)
[09:18:37] *** Joins: nyah (~nyah@51.146.30.113)
[09:18:37] *** Joins: welrmaron (~welrmaron@sigterm.xyz)
[09:18:37] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[09:18:37] *** Joins: dez (uid92154@user/dez)
[09:18:37] *** Joins: audiobirb (~audio@2603-8081-1800-00ad-3290-0c64-3212-0442.res6.spectrum.com)
[09:18:37] *** Joins: jdmark (~jdmark@67.8.137.130)
[09:18:37] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[09:18:37] *** Joins: hyper_dave (~hyper_dav@197.156.107.34)
[09:18:37] *** Joins: dre (~dre@2001:8003:c932:c301:76d5:786e:6c0b:b2c7)
[09:18:37] *** Joins: emerent (~quassel@p200300cd57058cabba27ebfffed28a59.dip0.t-ipconnect.de)
[09:18:37] *** Joins: KombuchaKip (~kip@192.252.230.5)
[09:18:37] *** Joins: upekkha (~Advanced@2a01:4f8:1c0c:49df::1)
[09:18:37] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[09:18:37] *** Joins: wyclif (~wyclif@user/wyclif)
[09:18:37] *** Joins: portalrat (~portalrat@user/portalrat)
[09:18:37] *** Joins: Wulf (~Wulf@user/wulf)
[09:18:37] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[09:18:37] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[09:18:37] *** Joins: mei (~mei@user/mei)
[09:18:37] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[09:18:37] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[09:18:37] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[09:18:37] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[09:18:37] *** Joins: hendry (~hendry@210.23.22.2)
[09:18:37] *** Joins: Geronimo (~Geronimo@user/geronimo)
[09:18:37] *** Joins: upsala (~zcb@185.213.155.160)
[09:18:37] *** Joins: supakeen (~user@python/site-packages/supakeen)
[09:18:37] *** Joins: Elzington (~Elzington@68.235.43.108)
[09:18:37] *** Joins: matsaman (~matsaman@user/matsaman)
[09:18:37] *** Joins: newpy (~newpy@2601:280:4381:1390:d8a2:4368:1fe2:a8e3)
[09:18:37] *** Joins: tokerboker (~tokerboke@c-73-71-182-125.hsd1.ca.comcast.net)
[09:18:37] *** Joins: monkey_ (~user@190.104.116.134)
[09:18:37] *** Joins: kuler (~kulernil@gateway/tor-sasl/kuler)
[09:18:37] *** Joins: zopsi (~zopsi@irc.dir.ac)
[09:18:37] *** Joins: rubion (~rubion@cpc124316-ayle4-2-0-cust156.15-2.cable.virginm.net)
[09:18:37] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[09:18:37] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[09:18:37] *** Joins: ska (~ska@user/ska)
[09:18:37] *** Joins: r3m (~launch@user/r3m)
[09:18:37] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[09:18:37] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[09:18:37] *** Joins: jim (~jim@about/linux/staff/jim)
[09:18:37] *** Joins: brabrax (~brabrax@user/brabrax)
[09:18:37] *** Joins: beencubed (~beencubed@209.131.238.248)
[09:18:37] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[09:18:37] *** Joins: vlm (~vlm@user/vlm)
[09:18:37] *** Joins: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net)
[09:18:37] *** Joins: martums (~martums@user/martums)
[09:18:37] *** Joins: frost (~frost@59.71.240.119)
[09:18:37] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[09:18:37] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[09:18:37] *** Joins: brachamh (~brachamh@user/brachamh)
[09:18:37] *** Joins: flyback (~flyback@2601:540:8201:1e60:d917:18e:f4c1:e2cf)
[09:18:37] *** Joins: weibullguy (DRowland@gateway/vpn/protonvpn/weibullguy)
[09:18:37] *** Joins: dcaro (~dcaro@user/dcaro)
[09:18:37] *** Joins: qpdb| (~qpdb@user/qpdb)
[09:18:37] *** Joins: Buliarous (~gypsydang@185.207.166.57)
[09:18:37] *** Joins: Linux77 (~kvirc@187-126-71-30.user3p.veloxzone.com.br)
[09:18:37] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[09:18:37] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[09:18:37] *** Joins: schumaml2 (~schumaml@dslb-092-074-010-022.092.074.pools.vodafone-ip.de)
[09:18:37] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[09:18:37] *** Joins: tims (~tims@115-64-241-2.tpgi.com.au)
[09:18:37] *** Joins: d3sync (~d3sync@130.43.80.239.dsl.dyn.forthnet.gr)
[09:18:37] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[09:18:37] *** Joins: cjb (~cjb@user/cjb)
[09:18:37] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:18:37] *** Joins: JavaBean (~JavaBean@user/javabean)
[09:18:37] *** Joins: seednode (~seednode@user/seednode)
[09:18:37] *** Joins: ExpiredKebab (~sgreadly@2407:7000:a2f5:e803:212d:940:ee89:421f)
[09:18:37] *** Joins: ogis_ (~Android@p311253-omed01.osaka.ocn.ne.jp)
[09:18:37] *** Joins: wolfgang (~wolfgang@101.174.6.197)
[09:18:37] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[09:18:37] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[09:18:37] *** Joins: fflam (~mdt@ip70-179-20-127.sd.sd.cox.net)
[09:18:37] *** Joins: twobitsprite (~twobitspr@195.181.171.237)
[09:18:37] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[09:18:37] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[09:18:37] *** Joins: jinsun (~quassel@user/jinsun)
[09:18:37] *** Joins: esv (~esv@72.11.45.232)
[09:18:37] *** Joins: someguy1233 (~someguy@user/someguy123)
[09:18:37] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[09:18:37] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[09:18:37] *** Joins: adium (adium@user/adium)
[09:18:37] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[09:18:37] *** Joins: mdemo (~mdemo@c-73-40-53-74.hsd1.va.comcast.net)
[09:18:37] *** Joins: erica (~erica@user/erica)
[09:18:37] *** Joins: phlixi (~phlixi@aftr-62-216-205-171.dynamic.mnet-online.de)
[09:18:37] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[09:18:37] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[09:18:37] *** Joins: HurricaneHarry (~quassel@2a02-a455-9d06-1-10d0-99bd-fa0a-4fc9.fixed6.kpn.net)
[09:18:37] *** Joins: Gerula (~Gerula@user/gerula)
[09:18:37] *** Joins: jaggz (~jaggz@user/jaggz)
[09:18:37] *** Joins: Betal (~Betal@user/betal)
[09:18:37] *** Joins: inom (~inom@176.59.116.194)
[09:18:37] *** Joins: rud01f (rud0lf@user/rud0lf)
[09:18:37] *** Joins: sleepingforest (~sleepingf@user/sleepingforest)
[09:18:37] *** Joins: milosz (~milosz@user/milosz)
[09:18:37] *** Joins: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[09:18:37] *** Joins: menace (~someone@user/menace)
[09:18:37] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[09:18:37] *** Joins: struct0 (~struct0@104.248.115.49)
[09:18:37] *** Joins: el_kevino (~mote@2604:a880:400:d1::901:5001)
[09:18:37] *** Joins: ZedHedTed (~ZedHedTed@user/zedhedted)
[09:18:37] *** Joins: rany (~rany@user/rany)
[09:18:37] *** Joins: Doffi (~doffi@91.132.197.188)
[09:18:37] *** Joins: hendursaga (~weechat@user/hendursaga)
[09:18:37] *** Joins: Foxyloxy_ (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net)
[09:18:37] *** Joins: mossman93 (~quassel@user/mossman93)
[09:18:37] *** Joins: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net)
[09:18:37] *** Joins: pycurious (~Adium@user/pycurious)
[09:18:37] *** Joins: wilz (~michel@modemcable036.177-131-66.mc.videotron.ca)
[09:18:37] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[09:18:37] *** Joins: CombatVet (~c4@user/combatvet)
[09:18:37] *** Joins: Tempesta (~Tempesta@user/tempesta)
[09:18:37] *** Joins: nyuszika7h (nyuszika7h@lykos/dev/nyuszika7h)
[09:18:37] *** Joins: devcpu (~rusty@108.162.160.184)
[09:18:37] *** Joins: daoudr (~daoudr@2a02:1205:c681:1650:eddb:c93b:fa60:14e0)
[09:18:37] *** Joins: mboehn (mathias@hh1.nuxis.org)
[09:18:37] *** Joins: iflema (~ian@user/iflema)
[09:18:37] *** Joins: Skyfire (~pyon@user/pyon)
[09:18:37] *** Joins: srji (~srji@static.43.141.203.116.clients.your-server.de)
[09:18:37] *** Joins: noctavian (~noctavian@gateway/tor-sasl/noctavian)
[09:18:37] *** Joins: withere__ (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[09:18:37] *** Joins: djhankb (~djhankb@208.113.164.68)
[09:18:37] *** Joins: dyCrazyEd (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[09:18:37] *** Joins: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net)
[09:18:37] *** Joins: Mechanismus (~LabMonkey@108-246-46-39.lightspeed.rcsntx.sbcglobal.net)
[09:18:37] *** Joins: xakan (~xakan@ns354170.ip-91-121-101.eu)
[09:18:37] *** Joins: renrelkha (~renrelkha@user/renrelkha)
[09:18:37] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[09:18:37] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[09:18:37] *** Joins: Ninja3047 (~Ninja3047@3047.ninja)
[09:18:37] *** Joins: ano (~weechat@user/ano)
[09:18:37] *** Joins: driib (~driib@185.195.233.169)
[09:18:37] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[09:18:37] *** Joins: d3vyL (d3vyL@host-87-21-171-60.retail.telecomitalia.it)
[09:18:37] *** Joins: dude-x (~textual@pool-173-70-158-124.nwrknj.fios.verizon.net)
[09:18:37] *** Joins: TML (~tml@user/tml)
[09:18:37] *** Joins: c4017_ (~c4017@2604:3d08:747f:7c90:54b4:c0da:a55c:9131)
[09:18:37] *** Joins: Batzy (~Batzy@user/batzy)
[09:18:37] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[09:18:37] *** Joins: Praise (~Fat@user/praise)
[09:18:37] *** Joins: guntbert (~yesitsme@user/guntbert)
[09:18:37] *** Joins: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC)
[09:18:37] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[09:18:37] *** Joins: n1000 (~n1000@user/n1000)
[09:18:37] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[09:18:37] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[09:18:37] *** Joins: alnr (~alnr@38.125.204.99)
[09:18:37] *** Joins: poorboy (~poorboy@159.89.189.144)
[09:18:37] *** Joins: {HD} (~{HD}@191.96.185.182)
[09:18:37] *** Joins: wereii (~wereii@37.205.14.89)
[09:18:37] *** Joins: knipster5 (~knipster@user/knipster)
[09:18:37] *** Joins: pjlsergeant (sid143467@stonehaven.irccloud.com)
[09:18:37] *** Joins: Tiago_Paolini (sid172748@stonehaven.irccloud.com)
[09:18:37] *** Joins: sharpertool (sid80151@id-80151.stonehaven.irccloud.com)
[09:18:37] *** Joins: morgabra (sid500580@user/morgabra)
[09:18:37] *** Joins: Pr0phet (sid505706@id-505706.stonehaven.irccloud.com)
[09:18:37] *** Joins: crazysim (sid86009@id-86009.stonehaven.irccloud.com)
[09:18:37] *** Joins: llinguini (sid257922@id-257922.stonehaven.irccloud.com)
[09:18:37] *** Joins: KnownSyntax (sid233169@user/knownsyntax)
[09:18:37] *** Joins: flagrama (sid145621@id-145621.stonehaven.irccloud.com)
[09:18:37] *** Joins: JayDoubleu (sid339529@id-339529.stonehaven.irccloud.com)
[09:18:37] *** Joins: Lvl4Sword (sid483043@user/lvl4sword)
[09:18:37] *** Joins: raydeeam (uid325131@dgplug/raydeeam)
[09:18:37] *** Joins: WhyNotHugo (sid269118@id-269118.stonehaven.irccloud.com)
[09:18:37] *** Joins: NiKaN (sid385034@id-385034.brockwell.irccloud.com)
[09:18:37] *** Joins: nubonix (uid492751@id-492751.charlton.irccloud.com)
[09:18:37] *** Joins: altendky (sid135382@stonehaven.irccloud.com)
[09:18:37] *** Joins: fury (uid193779@brockwell.irccloud.com)
[09:18:37] *** Joins: TallonRain (sid214799@user/tallonrain)
[09:18:37] *** Joins: kmikita (uid461814@id-461814.brockwell.irccloud.com)
[09:18:37] *** Joins: liam (sid7517@brockwell.irccloud.com)
[09:18:37] *** Joins: matthewwilkes (sid500242@highgate.irccloud.com)
[09:18:37] *** Joins: hsiktas (sid224847@tooting.irccloud.com)
[09:18:37] *** Joins: BlueShark (sid10311@user/blueshark)
[09:18:37] *** Joins: jtanner (sid194399@brockwell.irccloud.com)
[09:18:37] *** Joins: mindlesstux (sid18072@tooting.irccloud.com)
[09:18:37] *** Joins: MrNaz (sid133418@id-133418.highgate.irccloud.com)
[09:18:37] *** Joins: han-` (sid293063@brockwell.irccloud.com)
[09:18:37] *** Joins: AhmedAmerican (sid470527@charlton.irccloud.com)
[09:18:37] *** Joins: seds (sid492514@user/seds)
[09:18:37] *** Joins: jposer (sid132110@highgate.irccloud.com)
[09:18:37] *** Joins: ormiret (sid314108@tooting.irccloud.com)
[09:18:37] *** Joins: hogarius (hogarius@highgate.irccloud.com)
[09:18:37] *** Joins: roolebo (sid64806@charlton.irccloud.com)
[09:18:37] *** Joins: Alexer (~alexer@alexer.net)
[09:18:37] *** Joins: wedwards (~wedwards@rtr0.17.31.bogert.cyberfusion.cloud)
[09:18:37] *** Joins: birkoff (birkoff@user/birkoff)
[09:18:37] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[09:18:37] *** Joins: FoodMan_ (~glucose@194.110.13.12)
[09:18:37] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[09:18:37] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[09:18:37] *** Joins: sebastianos (~sebastian@user/sebastianos)
[09:18:37] *** Joins: darxun (sid504814@id-504814.tinside.irccloud.com)
[09:18:37] *** Joins: Evolver (sid32215@user/evolver)
[09:18:37] *** Joins: ziky (sid27087@user/ziky)
[09:18:37] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[09:18:37] *** Joins: realies (~realies@user/realies)
[09:18:37] *** Joins: Aminda (~sid12355@Feneas/Mikaela)
[09:18:37] *** Joins: mickey (~user@user/mickey)
[09:18:37] *** Joins: sharktamer (~sharktame@cpc91312-watf11-2-0-cust697.15-2.cable.virginm.net)
[09:18:37] *** Joins: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[09:18:37] *** Joins: bandit_za (~bandit_za@2c0f:ed28:b016:7760::1ed)
[09:18:37] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[09:18:37] *** Joins: spithash (~spithash@user/spithash)
[09:18:37] *** Joins: roadt (~roadt@36.7.132.7)
[09:18:37] *** Joins: Pixi (~Pixi@user/pixi)
[09:18:37] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[09:18:37] *** Joins: Brocker (~NoBody@user/brocker)
[09:18:37] *** Joins: catbeard (~noise@user/catbeard)
[09:18:37] *** Joins: akaWolf (~akaWolf@akawolf.org)
[09:18:37] *** Joins: NIXKnight (~NIXKnight@198.98.57.76)
[09:18:37] *** Joins: yetoo (~yetoo@user/yetoo)
[09:18:37] *** Joins: nac (~nac@user/nac)
[09:18:37] *** Joins: nickodd (~nickodd@user/nickodd)
[09:18:37] *** Joins: oz4ga (~tim@93.90.4.233)
[09:18:37] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[09:18:37] *** Joins: kmh_ (~kmh@p5dcc649e.dip0.t-ipconnect.de)
[09:18:37] *** Joins: xa0s (~xa0s@mab.sdf.org)
[09:18:37] *** Joins: BSaboia (~bsaboia@188-178-217-166-cable.dk.customer.tdc.net)
[09:18:37] *** Joins: chowmeined (~chowmeine@user/chowmeined)
[09:18:37] *** Joins: Vonter (~Vonter@user/vonter)
[09:18:37] *** Joins: noarb (~noarb@user/noarb)
[09:18:37] *** Joins: Maikel (~Maikel@130.61.63.136)
[09:18:37] *** Joins: securethemews_ (~securethe@2a00:23c4:1e9b:7b00::1)
[09:18:37] *** Joins: Dotz0cat (~Dotz0cat@h41.199.117.75.dynamic.ip.windstream.net)
[09:18:37] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[09:18:37] *** Joins: shodan45 (~quassel@107.161.22.155)
[09:18:37] *** Joins: NightMonkey (~NightMonk@user/nightmonkey)
[09:18:37] *** Joins: shan (shan@cyblog/maintainer/shan)
[09:18:37] *** Joins: cache (~cache@user/cacheyourdreams)
[09:18:37] *** Joins: strungout (znc@mutant.penguin.fyi)
[09:18:37] *** Joins: tofran (~tofran@37.189.158.134)
[09:18:37] *** Joins: SoF (~skius@user/skius)
[09:18:37] *** Joins: daniel-k (~daniel-k@192.241.135.211)
[09:18:37] *** Joins: frat3rius (~frat3rius@host-85.14.84.172.static.3s.pl)
[09:18:37] *** Joins: harleypig (thelounge@harleypig.com)
[09:18:37] *** Joins: Deaygo (~Deaygo@let.deaygo.in)
[09:18:37] *** Joins: somlis (~somlis@user/somlis)
[09:18:37] *** Joins: PocketKiller (PacKetIV@user/packetiv)
[09:18:37] *** Joins: dob1 (~dob1@user/dob1)
[09:18:37] *** Joins: dld (~davidlowr@2601:197:600:1210:2489:889a:8f43:c8c4)
[09:18:37] *** Joins: jrjsmrtn (~jrjsmrtn@ip-83-134-41-235.dsl.scarlet.be)
[09:18:37] *** Joins: kujo2 (~kujo@188.166.12.52)
[09:18:37] *** Joins: Popzi (~Popzi@user/popzi)
[09:18:37] *** Joins: stemid (~nocturnal@i-lands.anark.ist)
[09:18:37] *** Joins: byzandula (~byzandula@beerbq.net)
[09:18:37] *** Joins: energizer (~energizer@user/energizer)
[09:18:37] *** Joins: northernsage (~dobox@138.197.11.208)
[09:18:37] *** Joins: oisota (~oisota@user/oisota)
[09:18:37] *** Joins: whaley (~whaley@159.65.32.34)
[09:18:37] *** Joins: jiffe (~jiffe@mail.nsab.us)
[09:18:37] *** Joins: zoid (~zoid@user/taxationistheft)
[09:18:37] *** Joins: trashcatt (~trashcatt@znc.trashcat.xyz)
[09:18:37] *** Joins: mgocobachi (~m@ancrae.com)
[09:18:37] *** Joins: dftrace (~dftrace@hopper.lethalbit.com)
[09:18:37] *** Joins: utunbu_ (~utunbu@user/utunbu)
[09:18:37] *** Joins: tkazi (~tkazi@user/tkazi)
[09:18:37] *** Joins: wgwz (~wgwz@45.55.193.150)
[09:18:37] *** Joins: Adrixan (~Adrixan@218.72.75.34.bc.googleusercontent.com)
[09:18:37] *** Joins: pan (~quassel@pankid.club)
[09:18:37] *** Joins: quasineutral (~quaisneut@user/quasineutral)
[09:18:37] *** Joins: dharrigan (~dharrigan@user/dharrigan)
[09:18:37] *** Joins: octav1a (~quassel@173.195.145.98)
[09:18:37] *** Joins: emika (~emika@83.136.182.164)
[09:18:37] *** Joins: jan6 (jan6@tilde.team/user/jan6)
[09:18:37] *** Joins: fengshaun (~fengshaun@68.69.214.210)
[09:18:37] *** Joins: cation (cation@user/cation)
[09:18:37] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[09:18:37] *** Joins: ericoc (sid179921@id-179921.highgate.irccloud.com)
[09:18:37] *** Joins: toine (~antoine@2001:41d0:e:41f::1)
[09:18:37] *** Joins: endless (~endlessed@server.zane.wiki)
[09:18:37] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[09:18:37] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[09:18:37] *** Joins: Peng (~mnordhoff@flash.mattnordhoff.net)
[09:18:37] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[09:18:37] *** Joins: srhm (~ascii@user/srhm)
[09:18:37] *** Joins: trashbird (~trashbird@user/trashbird)
[09:18:37] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[09:18:37] *** Joins: Affliction (affliction@user/affliction)
[09:18:37] *** Joins: elibrokeit (eschwartz@archlinux/bugwrangler/eschwartz)
[09:18:37] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[09:18:37] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[09:18:37] *** Joins: coc0nut (~coc0nut@user/coc0nut)
[09:18:37] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[09:18:37] *** Joins: lifefir3 (~lifefir3@152.37.120.101)
[09:18:37] *** Joins: Kvothe (~weechat@user/elodin)
[09:18:37] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[09:18:37] *** Joins: sgn (~sgn@user/sgn)
[09:18:37] *** Joins: kushal (~hopless@dgplug/kushal)
[09:18:37] *** Joins: SirScott (~SirScott@c-67-176-100-163.hsd1.co.comcast.net)
[09:18:37] *** Joins: bdeshi (~bdeshi@bdeshi.space)
[09:18:37] *** Joins: jiffy (elijah@has.a.fluffy.sh33p.org)
[09:18:37] *** Joins: digilink (~digilink@user/digilink)
[09:18:37] *** Joins: c4017w__ (~c4017@209.52.68.8)
[09:18:37] *** Joins: nbin (~nbin@user/nbin)
[09:18:37] *** Joins: gloin (~gloin@user/gloin)
[09:18:37] *** Joins: Burrr (~Burrr@urmomma-fux0rs-with.burrr.nl)
[09:18:37] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[09:18:37] *** Joins: aphysically (~aphysical@user/aphysically)
[09:18:37] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[09:18:37] *** Joins: Omega037 (~Omega037@047-024-168-024.res.spectrum.com)
[09:18:37] *** Joins: shailangsa (~shailangs@host86-145-14-24.range86-145.btcentralplus.com)
[09:18:37] *** Joins: de-facto (~de-facto@user/de-facto)
[09:18:37] *** Joins: luvalon1 (~luva@178.239.167.170)
[09:18:37] *** Joins: m4v (~znc@ubuntu/member/m4v)
[09:18:37] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[09:18:37] *** Joins: rigid- (~rigid@user/rigid)
[09:18:37] *** Joins: catdog (~quassel@2001:470:50f7:cdcd::cd1)
[09:18:37] *** Joins: xikkub (me@user/xikkub)
[09:18:37] *** Joins: bionade24 (~bionade24@server2.oscloud.info)
[09:18:37] *** Joins: wisefriday (wisefriday@sempiternity.club)
[09:18:37] *** Joins: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070)
[09:18:37] *** Joins: hays (~rootveget@fsf/member/hays)
[09:18:37] *** Joins: BinarySavior (~BinarySav@user/binarysavior)
[09:18:37] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[09:18:37] *** Joins: dbristow (~dbristow@user/dbristow)
[09:18:37] *** Joins: xnbq (~xnbq@user/xnbq)
[09:18:37] *** Joins: mbrndtgn5 (~mbrndtgn@undecidable.de)
[09:18:37] *** Joins: summonner (~summonner@188.24.45.0)
[09:18:37] *** Joins: rwb (~augh@theguntretort.com)
[09:18:37] *** Joins: doko (~doko@2a02:8106:1a:7600:397a:f99e:919a:179b)
[09:18:37] *** Joins: hexeme (~hexeme@user/hexeme)
[09:18:37] *** Joins: akmod (~akmod@c-24-10-154-68.hsd1.ut.comcast.net)
[09:18:37] *** Joins: grandfso (~quassel@199.232.237.35.bc.googleusercontent.com)
[09:18:37] *** Joins: resmo (~resmo@135-58-239-77.dyn.cable.fcom.ch)
[09:18:37] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[09:18:37] *** Joins: BigShip (~BigShip@user/bigship)
[09:18:37] *** Joins: DarthGandalf (user@znc/developer/DarthGandalf)
[09:18:37] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[09:18:37] *** Joins: drjp (jeanpaul@112-54-174-82.ftth.glasoperator.nl)
[09:18:37] *** Joins: remexre (~nathan@user/remexre)
[09:18:37] *** Joins: cnsunyour (~sunyour@129.226.182.99)
[09:18:37] *** Joins: Pilate (~pilate@pilate.io)
[09:18:37] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[09:18:37] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[09:18:37] *** Joins: finsternis (~X@23.226.237.192)
[09:18:37] *** Joins: mwichmann (~mats@209-188-119-117.taosnet.com)
[09:18:37] *** Joins: streety (~streety@li761-24.members.linode.com)
[09:18:37] *** Joins: anorthall (~anorthall@user/anorthall)
[09:18:37] *** Joins: AM (~techman@87-94-110-167.bb.dnainternet.fi)
[09:18:37] *** Joins: ferz (~ferz@146-241-190-238.dyn.eolo.it)
[09:18:37] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[09:18:37] *** Joins: b_jonas (~x@catv-176-63-12-67.catv.broadband.hu)
[09:18:37] *** Joins: CyberShadow (vladimir@89.28.117.31)
[09:18:37] *** Joins: nuala (~nuala@user/nuala)
[09:18:37] *** Joins: lystra_ (~lystra@d53-64-11-169.nap.wideopenwest.com)
[09:18:37] *** Joins: Harlin (~DonQixote@2603:300b:663:e800:1702:3c:82cb:1afc)
[09:18:37] *** Joins: Madda (~Madda@208.249.9.51.dyn.plus.net)
[09:18:37] *** Joins: kindablue (znc@irc.tpurist.com)
[09:18:37] *** Joins: michele (~eraser@user/michele)
[09:18:37] *** Joins: pr3d4t0r (~zhenya01@user/pr3d4t0r)
[09:18:37] *** Joins: pyre (~pyre@crimeboss.nillas-power.com)
[09:18:37] *** Joins: gerty (~gerty@235.ip-51-77-195.eu)
[09:18:37] *** Joins: odrling (~odrling@korone.aidoru.agency)
[09:18:37] *** Joins: kai (~kai@x50d24799.cust.hiper.dk)
[09:18:37] *** Joins: Jefren (~Jefren@70.35.66.78)
[09:18:37] *** Joins: ntdll (~ntdll@user/ntdll)
[09:18:37] *** Joins: jochum (~jochum@user/jochum)
[09:18:37] *** Joins: ToAruShiroiNeko (~eva@user/toarushiroineko)
[09:18:37] *** Joins: confluence (~quassel@2a01:4f8:c17:3ca::2)
[09:18:37] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[09:18:37] *** Joins: lack (~lack@user/lack)
[09:18:37] *** Joins: Abrax (~Abrax@user/abrax)
[09:18:37] *** Joins: salparadise (~salparadi@129.146.17.140)
[09:18:37] *** Joins: baltazar (~baltazar@217-197-181-136.pool.digikabel.hu)
[09:18:37] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[09:18:37] *** Joins: Jonno_FTW (~come@user/jonno-ftw/x-0835346)
[09:18:37] *** Joins: dalan6 (~dalan@14-203-203-26.tpgi.com.au)
[09:18:37] *** Joins: orzel (~orzel@2a01:e0a:df:6ba0:1cfe:b463:3789:a442)
[09:18:37] *** Joins: greatgatsby (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-7.dsl.bell.ca)
[09:18:37] *** Joins: treefrob (~treefrob@p57a9648f.dip0.t-ipconnect.de)
[09:18:37] *** Joins: Duckle (~Duckle@user/duckle)
[09:18:37] *** Joins: Superstars111 (~jared@li227-215.members.linode.com)
[09:18:37] *** Joins: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[09:18:37] *** Joins: slavfox (~slavfox@93.158.232.111)
[09:18:37] *** Joins: majuscule (~majuscule@disinclined.org)
[09:18:37] *** Joins: binchickin (~binchicki@165.22.169.69)
[09:18:37] *** Joins: julia (~quassel@user/julia)
[09:18:37] *** Joins: Cyp (~cyp@192038129116.mbb.telenor.dk)
[09:18:37] *** Joins: newdimension (~newdimnes@ec2-3-129-202-216.us-east-2.compute.amazonaws.com)
[09:18:37] *** Joins: samuelbernardo (~samuelber@nata02.lip.pt)
[09:18:37] *** Joins: todda7 (~torstein@240.red-81-37-247.dynamicip.rima-tde.net)
[09:18:37] *** Joins: shabius (~shabius@2a0e:1c80:2:1021::1001)
[09:18:37] *** Joins: nrg (~NRG@user/nrg)
[09:18:37] *** Joins: cloudcell (sid48145@user/cloudcell)
[09:18:37] *** Joins: DocMors (~DocMors@web.crypticity.net)
[09:18:37] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[09:18:37] *** Joins: kinabalu (~kinabalu@about/java/kinabalu)
[09:18:37] *** Joins: vodkra (~vodkra@user/vodkra)
[09:18:37] *** Joins: push-f (~martin@push-f.com)
[09:18:37] *** Joins: fredrikhl (~fhl@myrsnipa.uio.no)
[09:18:37] *** Joins: marienz (~marienz@libera/staff/marienz)
[09:18:37] *** Joins: greenbagels (~gb@user/greenbagels)
[09:18:37] *** Joins: daddy (~ryan@hashbang/bdfl)
[09:18:37] *** Joins: launchd (examknow@bitbot/launchd)
[09:18:37] *** Joins: dlam (~dlam@dlam.me)
[09:18:37] *** Joins: n-st (~n-st@user/n-st)
[09:18:37] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[09:18:37] *** Joins: Exa (exa@irc.moe)
[09:18:37] *** Joins: Bato (~plauder@2001:bc8:182c:b39::1)
[09:18:37] *** Joins: gerard (~gerard@user/gerard)
[09:18:37] *** Joins: ThiefMaster (thief@indico/developer/thiefmaster)
[09:18:37] *** Joins: tris (emptystrin@irc1.lessbroken.org)
[09:18:37] *** Joins: mspe (~user@tilde.team/user/mspe)
[09:18:37] *** Joins: RavuAlHemio (~ondra@selene.ondrahosek.com)
[09:18:37] *** Joins: aluria (~aluria@canonical/aluria)
[09:18:37] *** Joins: MJ94 (mj94@user/mj94)
[09:18:37] *** Joins: especial (~especial@2a0a:51c0:0:1f:67a7::2)
[09:18:37] *** Joins: enrh (~enrh@user/enrh)
[09:18:37] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[09:18:37] *** Joins: petaflot (~root@lutolf.vserver.nimag.net)
[09:18:37] *** Joins: crackerjack (crackerjac@pear.bnc4free.com)
[09:18:37] *** Joins: asd (~noname@user/asd)
[09:18:37] *** Joins: bookworm (~bookworm@neomutt/bookworm)
[09:18:37] *** Joins: user3456 (user3456@user/user3456)
[09:18:37] *** Joins: sandipndev (sandipndev@2600:3c00::f03c:92ff:fe8e:dce6)
[09:18:37] *** Joins: Sadale (~Sadale@user/sadale)
[09:18:37] *** Joins: tomboy64 (~tomboy64@user/tomboy64)
[09:18:37] *** Joins: foureyes (foureyes@brought.to.you.by.bnc4free.com)
[09:18:37] *** Joins: thm (~thomas@fedora/thm)
[09:18:37] *** Joins: dfg (dfg@user/dfg)
[09:18:37] *** Joins: enkrypt (~enkrypt@user/enkrypt)
[09:18:37] *** Joins: nurupo (~nurupo.ga@user/nurupo)
[09:18:37] *** Joins: Celelibi (celelibi@user/celelibi)
[09:18:37] *** Joins: fructose (~fructose@user/fructose)
[09:18:37] *** Joins: tonitch (~tonitch@user/tonitch)
[09:18:37] *** Joins: jkl (~jkl@user/jkl)
[09:18:37] *** Joins: dynos01 (~dynos01@2600:3c01:e000:36a::8400)
[09:18:37] *** Joins: MrAureliusR (~MrAureliu@user/mraureliusr)
[09:18:37] *** Joins: vishwin (~brioux@2001:470:1f07:302::1)
[09:18:37] *** Joins: dab21 (~dab21@pistis.amyanddavid.net)
[09:18:37] *** Joins: esaym153 (~esaym153@net153.net)
[09:18:37] *** Joins: SallyAhaj (sallyahaj@user/sallyahaj)
[09:18:37] *** Joins: d3x (michal@bielaw.ski)
[09:18:37] *** Joins: mweckbecker (~matthias@weckbecker.name)
[09:18:37] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[09:18:37] *** Joins: Santzes (~Santzes@2400:8901::f03c:92ff:fe49:47a6)
[09:18:37] *** Joins: kofuyu (~kofuyu@user/kofuyu)
[09:18:37] *** Joins: Nahra (~user@static.161.95.99.88.clients.your-server.de)
[09:18:37] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[09:18:37] *** Joins: ChrisWarrick (kwpolska@user/kwpolska)
[09:18:37] *** Joins: yitz (~yitz@exercism/yitz)
[09:18:37] *** Joins: ldm (~ldm@hacksoc/member)
[09:18:37] *** Joins: maxking (~maxking@user/maxking)
[09:18:37] *** Joins: Nei (~ailin@user/nemui)
[09:18:37] *** Joins: w1kl4s (~w1kl4s@user/w1kl4s)
[09:18:37] *** Joins: phryk (~totallyno@user/phryk)
[09:18:37] *** Joins: falx (~falx@user/falx)
[09:18:37] *** Joins: MrC (Ben@mrbenc.net)
[09:18:37] *** Joins: saschi (~saschi@user/saschi)
[09:18:37] *** Joins: blackop (~ocloud@user/blackop)
[09:18:37] *** Joins: OMGOMG (~bobrobert@poppy.ifi.uio.no)
[09:18:37] *** Joins: francis (francis@user/francis)
[09:18:37] *** Joins: syntaxman (~wade@li227-215.members.linode.com)
[09:18:37] *** Joins: lgrn_ (~leif@user/lgrn)
[09:18:37] *** Joins: harm_ (~urth@geertswei.nl)
[09:18:37] *** Joins: foo (~foo@user/foo/x-8763512)
[09:18:37] *** Joins: kietop (~kieto@user/kieto)
[09:18:37] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[09:18:37] *** Joins: polyrob (~rob@user/polyrob)
[09:18:37] *** Joins: Joel (~jjshoe@user/joel)
[09:18:37] *** Joins: noord_ (~noord@user/noord)
[09:18:37] *** Joins: connor_goodwolf_ (~connor@user/connor-goodwolf/x-2615606)
[09:18:37] *** Joins: Fingel_ (~fingel@user/fingel)
[09:18:37] *** Joins: mwilson (~mwilson@li159-72.members.linode.com)
[09:18:37] *** Joins: sirn (~sirn@user/sirn)
[09:18:37] *** Joins: wyre (~wyre@user/wyre)
[09:18:37] *** Joins: _janus (~janus@blotter.ld-linux.so)
[09:18:37] *** Joins: Armen (~Armen@armen138.com)
[09:18:37] *** Joins: zegalch (~zegalch@178.128.75.133)
[09:18:37] *** Joins: chilversc (~chilversc@user/chilversc)
[09:18:37] *** Joins: janemba (~janemba@94.204.254.193)
[09:18:37] *** Joins: Dantali0n (~Dantali0n@217-123-73-108.cable.dynamic.v4.ziggo.nl)
[09:18:37] *** Joins: holbrode (sid339826@id-339826.tinside.irccloud.com)
[09:18:37] *** Joins: leonardus (sid358597@id-358597.tinside.irccloud.com)
[09:18:37] *** Joins: EWDurbin (sid38710@id-38710.tinside.irccloud.com)
[09:18:37] *** Joins: JacobFrost (sid494713@id-494713.tinside.irccloud.com)
[09:18:37] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[09:18:37] *** Joins: rich (~rich@2a03:4000:3f:f1:b859:16ff:fe45:e87f)
[09:18:37] *** Joins: mkoskar (~mkoskar@user/mkoskar)
[09:18:37] *** Joins: blddk (~admin@185.233.252.229)
[09:18:37] *** Joins: dwt_ (~dwt_@c-98-200-58-177.hsd1.tx.comcast.net)
[09:18:37] *** Joins: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com)
[09:18:37] *** Joins: icy (~icy@user/icy)
[09:18:37] *** Joins: sus (thelounge@user/zeromomentum)
[09:18:37] *** Joins: Dan39 (~dan@user/dan39)
[09:18:37] *** Joins: apollo13 (apollo13@django/moderator/apollo13)
[09:18:37] *** Joins: roniez_ (~roniez@nixsec.se)
[09:18:37] *** Joins: Milos (~Milos@user/milos)
[09:18:37] *** Joins: bim9262 (~bim9262@cpe-70-113-84-126.austin.res.rr.com)
[09:18:37] *** Joins: kenwoodfox_ (~quassel@user/kenwoodfox)
[09:18:37] *** Joins: dzz007 (~dzz007@user/dzz007)
[09:18:37] *** Joins: snalty (~Shhh@user/snalty)
[09:18:37] *** Joins: sunny93 (~sunny93@wireguard/tunneler/sunny93)
[09:18:37] *** Joins: pacbard (~pacbard@user/pacbard)
[09:18:37] *** Joins: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[09:18:37] *** Joins: dulanic (~dulanic@47.187.144.163)
[09:18:37] *** Joins: gizmo_ (~gizmo@45.91.125.2)
[09:18:37] *** Joins: kadobanana (~mud@user/kadoban)
[09:18:37] *** Joins: grateful (~grateful@user/grateful)
[09:18:37] *** Joins: Classic (~root@user/classic)
[09:18:37] *** Joins: kenoba (~kenoba@user/kenoba)
[09:18:37] *** Joins: dxrt (~dxrt@user/dxrt)
[09:18:37] *** Joins: rud0lf (rud0lf@user/rud0lf)
[09:18:37] *** Joins: nicksloan (sid195124@user/nicksloan)
[09:18:37] *** Joins: f8e4 (~user@159.89.21.45)
[09:18:37] *** Joins: cryocaustik (~cryocaust@user/cryocaustik)
[09:18:37] *** Joins: sybariten (~jake@157.90.217.120)
[09:18:37] *** Joins: koltrast (~koltrast@h77-53-57-114.cust.a3fiber.se)
[09:18:37] *** Joins: fleabag (~sirpengi@li587-65.members.linode.com)
[09:18:37] *** Joins: synbiose (~synbiose@user/synbiose)
[09:18:37] *** Joins: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca)
[09:18:37] *** Joins: Hackerpcs (~user@user/hackerpcs)
[09:18:37] *** Joins: edr (~edr@user/edr)
[09:18:37] *** Joins: samathy (~samathy@user/samathy)
[09:18:37] *** Joins: vince (~vince@75.127.14.76)
[09:18:37] *** Joins: OnlineCop (~OnlineCop@user/onlinecop)
[09:18:37] *** Joins: rjwiii (~mr-rich@072-187-028-004.res.spectrum.com)
[09:18:37] *** Joins: hodapp (~mawson@user/hodapp)
[09:18:37] *** Joins: mingdao (~mingdao@wireguard/tunneler/mingdao)
[09:18:37] *** Joins: wolfshappen (~waff@irc.furworks.de)
[09:18:37] *** Joins: Linkandzelda (~Linkandze@cloudirc.laz.li)
[09:18:37] *** Joins: km (~km@static.55.93.181.135.clients.your-server.de)
[09:18:37] *** Joins: Somni (insomnia@77-88-237-24.gci.net)
[09:18:37] *** Joins: Alan (~alan@user/alan)
[09:18:37] *** Joins: DK3 (~DK3@rs000042.fastrootserver.de)
[09:18:37] *** Joins: drmessano (sid104353@user/drmessano)
[09:18:37] *** Joins: jab416171 (~jab416171@c-174-52-176-66.hsd1.ut.comcast.net)
[09:18:37] *** Joins: niko (~niko@libera/staff/niko)
[09:18:37] *** Joins: Yamakaja (~yamakaja@user/yamakaja)
[09:18:37] *** Joins: wintrmute (~wintrmute@bit.pappanaka.com)
[09:18:37] *** Joins: bambams (~bambams@user/bambams)
[09:18:37] *** Joins: Moyst (~moyst@user/moyst)
[09:18:37] *** Joins: HenryTheLongshot (~Henry@46.101.4.181)
[09:18:37] *** Joins: Ara (~Ara@user/ara)
[09:18:37] *** Joins: kgz (~kragniz@nyaa.kragniz.eu)
[09:18:37] *** Joins: erhandsome (~erhandsom@user/erhandsome)
[09:18:37] *** Joins: DCTWD (~dc@uz.utmappro.com)
[09:18:37] *** Joins: hirish (~hirish@ip85.ip-137-74-20.eu)
[09:18:37] *** Joins: sud (~sud@user/sud)
[09:18:37] *** Joins: jfb4 (~jfb4@178.62.2.68)
[09:18:37] *** Joins: nedbat (~nedbat@python/psf/nedbat)
[09:18:37] *** Joins: Karyon (~Karyon@user/karyon)
[09:18:37] *** Joins: bbear (~znc@21212.s.t4vps.eu)
[09:18:37] *** Joins: ZeroKnight (zeroknight@dimensionzero.net)
[09:18:37] *** Joins: achilleas (~ach@user/achilleas)
[09:18:37] *** Joins: jootoi (~jootoi@130.61.158.197)
[09:18:37] *** Joins: asix (~Anders@user/asix)
[09:18:37] *** Joins: umimaso (~umimaso@188.166.147.131)
[09:18:37] *** Joins: topoi (~topoi@user/topoi)
[09:18:37] *** Joins: gcbirzan (~gcbirzan@user/gcbirzan)
[09:18:37] *** Joins: kungp (~kungp@h-46-59-2-200.A230.priv.bahnhof.se)
[09:18:37] *** Joins: purplex (~purplex@user/purplex)
[09:18:37] *** Joins: frrs (~ferros@vps-eacaba1b.vps.ovh.net)
[09:18:37] *** Joins: MrBurns (~japa@ec2-13-48-124-121.eu-north-1.compute.amazonaws.com)
[09:18:37] *** Joins: WayToDoor7 (~WayToDoor@user/waytodoor)
[09:18:37] *** Joins: carbolymer (~carbolyme@dropacid.net)
[09:18:37] *** Joins: mteo (francis@user/francis)
[09:18:37] *** Joins: ndim (hun@moooo.n-dimensional.de)
[09:18:37] *** Joins: paperManu (~paperManu@138.197.128.151)
[09:18:37] *** Joins: kantlivelong (~kantlivel@cpe-67-250-125-43.hvc.res.rr.com)
[09:18:37] *** Joins: MightyMu (~MightyMu@104.131.138.31)
[09:18:37] *** Joins: godlike (~godlike@user/godlike)
[09:18:37] *** Joins: zwindl (~abc@user/abc)
[09:18:37] *** Joins: Spydar007 (~spydar007@user/spydar007)
[09:18:37] *** Joins: {4144} (~{4144}@46.56.64.31)
[09:18:37] *** Joins: erry (~erry@errietta.me)
[09:18:37] *** Joins: roguelazer (~jbrown@sietchtabr.roguelazer.net)
[09:18:37] *** Joins: thekingofbandit (thekingofb@user/thekingofbandit)
[09:18:37] *** Joins: encukou_ (~quassel@nat-pool-brq-t.redhat.com)
[09:18:37] *** Joins: Techcable_ (~Techcable@168.235.93.147)
[09:18:37] *** Joins: wbn (~wbn@user/wbn)
[09:18:37] *** Joins: mgubyt_ (u@mgub.yt)
[09:18:37] *** Joins: FunkyBob (~curtis@vhost3.tinbrain.net)
[09:18:37] *** Joins: zinc_ (~zinc@163.ip-51-254-203.eu)
[09:18:37] *** Joins: Teacup (~teacup@user/teacup)
[09:18:37] *** Joins: gaken (~gaken@user/galen)
[09:18:37] *** Joins: oprypin (~irc@pryp.in)
[09:18:37] *** Joins: tabakhase (tabakhase@user/tabakhase)
[09:18:37] *** Joins: doc (~doc@user/doc)
[09:18:37] *** Joins: dbg (~dbg@user/dbg)
[09:18:37] *** Joins: lambda (~weechat@cyka.blyat.vodka)
[09:18:37] *** Joins: BtbN (btbn@ffmpeg/developer/btbn)
[09:18:37] *** Joins: skreech (~skreech@user/skreech)
[09:18:37] *** Joins: Isthmusi (~Isthmus@user/isveni)
[09:18:37] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[09:18:37] *** Joins: jbe (~hellother@lysator/root/jbe)
[09:18:37] *** Joins: uhu (~uhu@2a01:4f9:c010:1087::2)
[09:18:37] *** Joins: tharkun (tharkun@kvm6.telegraphics.com.au)
[09:18:37] *** Joins: Bardon (~Bardon@user/Bardon)
[09:18:37] *** Joins: mawk (mawk@wireguard/contributor/mawk)
[09:18:37] *** Joins: Trieste (T@user/pilgrim)
[09:18:37] *** Joins: ElectricSheep (~esheep_zn@pool-100-19-29-200.phlapa.fios.verizon.net)
[09:18:37] *** Joins: OPK (~OPK@user/opk)
[09:18:37] *** Joins: cmagina (sid286142@user/cmagina)
[09:18:37] *** Joins: defn (~n0b0dy@user/defn)
[09:18:37] *** Joins: mpmc (~mpmc@user/mpmc)
[09:18:37] *** Joins: marienz__ (~marienz@libera/staff/marienz)
[09:18:37] *** Joins: dskull (~dskull@user/dskull)
[09:18:37] *** Joins: stigz (sid371747@id-371747.tinside.irccloud.com)
[09:18:37] *** Joins: Repiphany (~Repiphany@user/repiphany)
[09:18:37] *** Joins: simone (~nya@user/sx)
[09:18:37] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[09:18:37] *** Joins: kiska (~kiska@user/kiska)
[09:18:37] *** Joins: rpittau (sid346891@id-346891.tinside.irccloud.com)
[09:18:37] *** Joins: syllin (~syllin@user/syllin)
[09:18:37] *** Joins: fluter (~fluter@user/fluter)
[09:18:37] *** Joins: dhch (~dhch@185.213.154.168)
[09:18:37] *** Joins: RoyK (~roy@user/royk)
[09:18:37] *** Joins: jabberwock (~jessy@user/jabberwock)
[09:18:37] *** Joins: thinkofher (~thinkofhe@user/thinkofher)
[09:18:37] *** Joins: bidouille (~user_name@trois.potager.org)
[09:18:37] *** Joins: reenix (~reenix@2a01:238:420e:ae00:1c37:63c1:24c0:ff75)
[09:18:37] *** Joins: ilmais1n (~il@irc.oh1cgn.fi)
[09:18:37] *** Joins: acid (~acid@user/acid)
[09:18:37] *** Joins: Antibody (~Antibody@107.170.145.30)
[09:18:37] *** Joins: mjh4386 (~mjh4386@165.22.53.231)
[09:18:37] *** Joins: buhman (sid411355@user/buhman)
[09:18:37] *** Joins: habnabit_ (habnabit@python/site-packages/habnabit)
[09:18:37] *** Joins: ario (~ario@159.65.220.102)
[09:18:37] *** Joins: BytesAndCoffee (~libera@bytes.coffee)
[09:18:37] *** Joins: duoi (~duoi@user/duoi)
[09:18:37] *** Joins: AUDaags (~ubuntu@ec2-3-106-166-31.ap-southeast-2.compute.amazonaws.com)
[09:18:37] *** Joins: chromis (sid150893@id-150893.tinside.irccloud.com)
[09:18:37] *** Joins: dfch (~dfch@user/dfch)
[09:18:37] *** Joins: a1paca_ (~a1paca@user/a1paca)
[09:18:37] *** Joins: pieguy128 (~pieguy128@bas1-montreal02-65-92-163-194.dsl.bell.ca)
[09:18:37] *** Joins: N3X15 (~nexis@mail.nexisonline.net)
[09:18:37] *** Joins: CrunchyChewie (~CrunchyCh@user/crunchychewie)
[09:18:37] *** Joins: stoneware (~stoneware@user/stoneware)
[09:18:37] *** Joins: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be)
[09:18:37] *** Joins: ST47 (~ST47@wikimedia/st47)
[09:18:37] *** Joins: extnct (~extnct@2604:180:2:a54:1::9ce7)
[09:18:37] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[09:18:37] *** Joins: alexyov8 (~alexyov@84.22.6.244)
[09:18:37] *** Joins: theo (~theo@user/theo)
[09:18:37] *** Joins: ATAD (~ATAD@user/atad)
[09:18:37] *** Joins: Falcon| (andreas@user/falcon/x-0540249)
[09:18:37] *** Joins: Cienisty (Cienisty@user/cienisty)
[09:18:37] *** Joins: KernelPanic (~KernelPan@user/kernelpanic)
[09:18:37] *** Joins: Wu (~wu@158.red-83-50-192.dynamicip.rima-tde.net)
[09:18:37] *** Joins: Mikro (leo@libera.ninja)
[09:18:37] *** Joins: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4)
[09:18:37] *** Joins: HenryG (~quassel@2607:5300:201:3000::f63)
[09:18:37] *** Joins: redj (~quassel@bras-base-bchmpq5707w-grc-24-76-69-197-62.dsl.bell.ca)
[09:18:37] *** Joins: kevr (~kevr@user/kevr)
[09:18:37] *** Joins: hjmcnew (sid86092@tinside.irccloud.com)
[09:18:37] *** Joins: BillyZane (~BillyZane@91.196.220.172)
[09:18:37] *** Joins: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com)
[09:18:37] *** Joins: Quietus (~quietus@2a04:52c0:101:181::)
[09:18:37] *** Joins: feoh (~feoh@ec2-18-224-106-217.us-east-2.compute.amazonaws.com)
[09:18:37] *** Joins: visl (visl@user/visl)
[09:18:37] *** Joins: Masklin (~joel@89-233-200-127.cust.bredband2.com)
[09:18:37] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com)
[09:18:37] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[09:18:37] *** Joins: maxpowa (~maxpowa@107.150.39.146)
[09:18:37] *** Joins: kpcyrd (~kpcyrd@archlinux/trusteduser/kpcyrd)
[09:18:37] *** Joins: llua (~llua@zsh/developer/llua)
[09:18:37] *** Joins: Thermoriax (Thermoriax@user/thermoriax)
[09:18:37] *** Joins: lf94 (~lf94@2604:a880:cad:d0::cd6:8001)
[09:18:37] *** Joins: Nothing4You (N4Y@nothing4you.w.tf-w.tf)
[09:18:37] *** Joins: canton7 (canton7@about/csharp/canton7)
[09:18:37] *** Joins: neltraus (~neltraus@supernova.neltraus.de)
[09:18:37] *** Joins: ajb (~ajb@cupid.whatbox.ca)
[09:18:37] *** Joins: notepad (~notepad@129.159.46.243)
[09:18:37] *** Joins: onu (~onufn@gibbs.uberspace.de)
[09:18:37] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[09:18:37] *** Joins: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net)
[09:18:37] *** Joins: lithammer (~lithammer@arch-vps.cloud.tilaa.com)
[09:18:37] *** Joins: Trashlord (~trash@user/trashlord)
[09:18:37] *** Joins: gabe (~gabe@user/gabe)
[09:18:37] *** Joins: Anarchic (~Anarchic@getlegit.co.uk)
[09:18:37] *** Joins: dreamer (~dreamer@user/dreamer)
[09:18:37] *** Joins: NoImNotNineVolt (~fdsa@c-73-248-207-98.hsd1.nj.comcast.net)
[09:18:37] *** Joins: fuz (~fuz@user/fuz)
[09:18:37] *** Joins: chandankumar (~chandanku@51.159.58.174)
[09:18:37] *** Joins: colorado (~fluiD@161.97.231.145)
[09:18:37] *** Joins: amoe (~amoe@visarend.solasistim.net)
[09:18:37] *** Joins: jjhoo (~jahakala@dsl-trebng21-58c18f-56.dhcp.inet.fi)
[09:18:37] *** Joins: willcl_ark (~quassel@user/willcl-ark/x-8282106)
[09:18:37] *** Joins: Helenah (~helenah@user/helenah)
[09:18:37] *** Joins: Stx (stx@libera/staff/stx)
[09:18:37] *** Joins: trench (trench@user/trench)
[09:18:37] *** Joins: Tritium (~tritium@toxin.sdamon.com)
[09:18:37] *** Joins: effprime (~effprime@user/effprime)
[09:18:37] *** Joins: Confusioned (~AnySomebo@p5b15fbbc.dip0.t-ipconnect.de)
[09:18:37] *** Joins: pie_ (~pie_bnc@user/pie/x-2818909)
[09:18:37] *** Joins: flay (~flay@user/flay)
[09:18:37] *** Joins: infobob (~infobob@python/bot/infobob)
[09:18:37] *** Joins: dthpulse (~quassel@podciarou.sk)
[09:18:37] *** Joins: bboles (~bboles@64.94.212.195)
[09:18:37] *** Joins: avu (~jan@user/avu)
[09:18:37] *** Joins: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de)
[09:18:37] *** Joins: sveinse (~sveinse@2a01:799:55e:1000:c23f:d5ff:fe69:c6fb)
[09:18:37] *** Joins: supernovah (~supernova@mail.ijk.nz)
[09:18:37] *** Joins: vinnix (~vinnix@user/vinnix)
[09:18:37] *** Joins: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it)
[09:18:37] *** Joins: CodeGeek (~codegeek@about/java/CodeGeek)
[09:18:37] *** Joins: LuKaRo_ (~LuKaRo@p57b15425.dip0.t-ipconnect.de)
[09:18:37] *** Joins: Helle (~helle@80-100-16-232.ip.xs4all.nl)
[09:18:37] *** Joins: justache (~justache@user/justache)
[09:18:37] *** Joins: murr4y (ali@user/murr4y)
[09:18:37] *** Joins: nisstyre (~wes@user/nisstyre)
[09:18:37] *** Joins: phy1729 (~phy1729@zsh/wizard/phy1729)
[09:18:37] *** Joins: CuriousErnestBro (~CuriousEr@user/curiousernestbro)
[09:18:37] *** Joins: Scotteh (~Scotteh@user/scotteh)
[09:18:37] *** Joins: glider_ (~glider@user/glider)
[09:18:37] *** Joins: duracrisis (~kkh@user/duracrisis)
[09:18:37] *** Joins: mabi (~m42e@pb42.de)
[09:18:37] *** Joins: njt (~njt@zaph.org)
[09:18:37] *** Joins: zingos (~zingos@46.101.6.21)
[09:18:37] *** Joins: dav1d (~dav1d@user/dav1d)
[09:18:37] *** Joins: Ox4 (~int@0x4.cx)
[09:18:37] *** Joins: JerryXiao (~JerryXiao@user/jerryxiao)
[09:18:37] *** Joins: mxp (~mxp@82.98.30.69)
[09:18:37] *** Joins: mrkajetanp (~mrkajetan@88.98.245.28)
[09:18:37] *** Joins: averell (~averell@user/averell)
[09:18:37] *** Joins: leonardo (~leonardo@user/leonardo)
[09:18:37] *** Joins: abyss_ (~robbins@user/robbins)
[09:18:37] *** Joins: python (~python@user/demon)
[09:18:37] *** Joins: ablegreen (~ablegreen@tsunami.ocf.berkeley.edu)
[09:18:37] *** Joins: ethoxy (~caretaker@cx21.havox.ru)
[09:18:37] *** Joins: nullheroes (~nullheroe@168.235.66.22)
[09:18:37] *** Joins: xaltsc (~xaltsc@user/xaltsc)
[09:18:37] *** Joins: tvm (~tom@ip-89-103-250-229.net.upcbroadband.cz)
[09:18:37] *** Joins: ops (~ops@user/echelon)
[09:18:37] *** Joins: mchlumsky (~mchlumsky@modemcable106.190-179-173.mc.videotron.ca)
[09:18:37] *** Joins: k0fein (~esmeralda@user/k0fein)
[09:18:37] *** Joins: mrus (~mrus@2001:19f0:5:1535:5400:3ff:fe7d:10ae)
[09:18:37] *** Joins: Mogget (Mogget@vogon.moshwire.com)
[09:18:37] *** Joins: bdeferme1 (~bdeferme@i.ctrl86.com)
[09:18:37] *** Joins: elmcrest (~elmcrest@static.48.211.217.95.clients.your-server.de)
[09:18:37] *** Joins: peterandre (peterandre@2605:6400:c847:1524::4251)
[09:18:37] *** Joins: d1b (~db@user/d1b)
[09:18:37] *** Joins: AkechiShiro (~licht@user/akechishiro)
[09:18:37] *** Joins: tf (~tf@user/tf)
[09:18:37] *** Joins: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net)
[09:18:37] *** Joins: Ninpo (~Ninpo@charlton.qap.la)
[09:18:37] *** Joins: Tashtari (~tashtari@user/tashtari)
[09:18:37] *** Joins: woky (~woky@li1651-31.members.linode.com)
[09:18:37] *** Joins: ouemt (~quassel@user/ouemt)
[09:18:37] *** Joins: cyberjunkie (~cyberjunk@wireguard/tunneler/cyberjunkie)
[09:18:37] *** Joins: b0nn (~shane@user/b0nn)
[09:18:37] *** Joins: Yasumoto (~Yasumoto@ec2-34-212-228-153.us-west-2.compute.amazonaws.com)
[09:18:37] *** Joins: bjb (~bjb@sourcerer.ca)
[09:18:37] *** Joins: nigelb (~nigel@zeus.nigelb.me)
[09:18:37] *** Joins: bss (bss@rie.incorporeal.org)
[09:18:37] *** Joins: u4t (~chat@78.ip-139-99-236.net)
[09:18:37] *** Joins: pmcnabb (~pmcnabb@user/pmcnabb)
[09:18:37] *** Joins: mastardet (~mastardet@user/mastardet)
[09:18:37] *** Joins: nfc (nfc@tilde.institute)
[09:18:37] *** Joins: DaPinkOne (~Dap@user/dap)
[09:18:37] *** Joins: Jmtrix (~qed@user/jmtrix)
[09:18:37] *** Joins: bluss (~bluss@user/bluss)
[09:18:37] *** Joins: Fossil (~Fossil@2a03:b0c0:0:1010::398:b001)
[09:18:37] *** Joins: carlio (~carlio@88.198.149.110)
[09:18:37] *** Joins: barometz (~dvanb@i117058.upc-i.chello.nl)
[09:18:37] *** Joins: ttkap_ (~ttkap@user/ttkap)
[09:18:37] *** Joins: Aye (jeda@hellomouse/dev/cryb.jeda)
[09:18:37] *** Joins: notevil (~notevil@user/notevil)
[09:18:37] *** Joins: beanzilla (~beanzilla@user/beanzilla)
[09:18:37] *** Joins: programmerq (~programme@user/programmerq)
[09:18:37] *** Joins: koolazer (~koo@user/koolazer)
[09:18:37] *** Joins: micronn (~micronn@user/micronn)
[09:18:37] *** Joins: Dev0n (~Dev0n@user/dev0n)
[09:18:37] *** Joins: The-Compiler (~compiler@the-compiler.org)
[09:18:37] *** Joins: taru9 (~realTaru9@user/taru9)
[09:18:37] *** Joins: mikebald (~mikebald@159.203.185.106)
[09:18:37] *** Joins: con3 (~con3@2604:a880:4:1d0::be:d000)
[09:18:37] *** Joins: tanner (~tanner@tilde.town)
[09:18:37] *** Joins: agronholm (sid403424@id-403424.brockwell.irccloud.com)
[09:18:37] *** Joins: explodes (~explodes@user/explodes)
[09:18:37] *** Joins: Yhg1s (sid387777@python/psf/thomas)
[09:18:37] *** Joins: ebb (ebb@user/ebb)
[09:18:37] *** Joins: neil (~kneel@rockylinux/infra/neil)
[09:18:37] *** Joins: pizza (~pizzaiolo@user/pizzaiolo)
[09:18:37] *** Joins: fruitypunk (~user@2a01:7c8:aaaa:12:5054:ff:fe69:1df9)
[09:18:37] *** Joins: hexa- (~hexa-@juno.lossy.network)
[09:18:37] *** Joins: Byteflux (~byte@byteflux.net)
[09:18:37] *** Joins: nickel8448 (~rahulwadh@147.80.76.34.bc.googleusercontent.com)
[09:18:37] *** Joins: gerikson (~gerikson@user/gerikson)
[09:18:37] *** Joins: CalimeroTeknik (~calimero@user/calimeroteknik)
[09:18:37] *** Joins: Widdershins (widders@ps.mad.cash)
[09:18:37] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[09:18:37] *** Joins: bjonnh (~jo@about/aquilenet/bjonnh)
[09:18:37] *** Joins: sabet (~sabet@user/sabet)
[09:18:37] *** Joins: _mal (~mal@user/mal/x-8025409)
[09:18:37] *** Joins: Wooble (~Wooble@107.170.27.240)
[09:18:37] *** Joins: Xavierdarkness (~xavierdar@user/xavierdarkness)
[09:18:37] *** Joins: matthewcroughan (~quassel@static.211.38.12.49.clients.your-server.de)
[09:18:37] *** Joins: Retr0id (~Retr0id@user/retr0id)
[09:18:37] *** Joins: ross (sid305269@user/ross)
[09:18:37] *** Joins: ulif (~nick@user/ulif)
[09:18:37] *** Joins: genewitch (~genewitch@triggerwarning.projectftm.com)
[09:18:37] *** Joins: libussa (~libussa@libussa.net)
[09:18:37] *** Joins: mattmcc (matt@2600:3c00::f03c:91ff:fe89:c2e8)
[09:18:37] *** Joins: CygniX (~CygniX@2605:6400:30:fdc6:68:f4:4e:78)
[09:18:37] *** Joins: CrtxReavr (crtxreavr@shodan.trioptimum.com)
[09:18:37] *** Joins: randall (~randall@user/randall)
[09:18:37] *** Joins: MacGyver (~macgyver@user/macgyver)
[09:18:37] *** Joins: _moep_ (~moep@user/moep/x-3358975)
[09:18:37] *** Joins: foxtrot (~foxtrot@user/foxtrot)
[09:18:37] *** Joins: andi_ (~andi@user/andi/x-3467420)
[09:18:37] *** Joins: ironfroggy (sid495156@id-495156.tooting.irccloud.com)
[09:18:37] *** Joins: auri (~admin@fsf/member/auri)
[09:18:37] *** Joins: dTal (quassel@dragonbox/wizzard/dtal)
[09:18:37] *** Joins: znf (~ibm86@toaster.linge-ma.ro)
[09:18:37] *** Joins: Darkfoe1 (~chuck@drunk.serverfail.party)
[09:18:37] *** Joins: LostInWeb (~quassel@narvi.bifroest.eu)
[09:18:37] *** Joins: Hobbyboy (Hobbyboy@hobbyboy.co.uk)
[09:18:37] *** Joins: gAy_Dragon (A_D@doom-tower.awesome-dragon.science)
[09:18:37] *** Joins: gbear605 (~gbear605@user/gbear605)
[09:18:37] *** Joins: gossie (~gossie@2a10:3781:328:1:e1d:50cc:c868:ca94)
[09:18:37] *** Joins: meridion (~meridion@punt.hetgrotebos.org)
[09:18:37] *** Joins: cole (~cole@user/cole)
[09:18:37] *** Joins: kstar (~kstar@user/kstar)
[09:18:37] *** Joins: jpaa (~jpaa@87.118.126.66)
[09:18:37] *** Joins: tudor (~tudor@tomka.hu)
[09:18:37] *** Joins: tumbleweed (~stefanor@ubuntu/member/tumbleweed)
[09:18:37] *** Joins: Ellenor (ellenor@vice-chairwoman.of.freenode.management)
[09:18:37] *** Joins: percY- (~percY@138.68.239.19)
[09:18:37] *** Joins: Riviera (Riviera@user/riviera)
[09:18:37] *** Joins: poxifide (deathspawn@user/poxifide)
[09:18:37] *** Joins: grym (~grym@user/grym)
[09:18:37] *** Joins: farn (~farn@2a03:4000:7:3cd:d4ab:85ff:feeb:f505)
[09:18:37] *** Joins: litharge (litharge@libera/bot/litharge)
[09:18:37] *** Joins: towel (~towel@user/towel)
[09:18:37] *** Joins: noyb (~noyb@user/noyb)
[09:18:37] *** Joins: rockSTONE (sid315855@id-315855.brockwell.irccloud.com)
[09:18:37] *** Joins: jocke-l (jocke-l@a.x0.is)
[09:18:37] *** Joins: ravish0007 (~quassel@ec2-65-0-45-121.ap-south-1.compute.amazonaws.com)
[09:18:37] *** Joins: argoneus (~argoneus@argoneus.com)
[09:18:37] *** Joins: ixjlyons (~kenny@li1177-148.members.linode.com)
[09:18:37] *** Joins: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr)
[09:18:37] *** Joins: debnet (sid330295@python/afpy/debnet)
[09:18:37] *** Joins: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3)
[09:18:37] *** Joins: mdw (~root@159.65.86.163)
[09:18:37] *** Joins: SnoopJ (~snoopj@user/snoopj)
[09:18:37] *** Joins: mumixam (~m@user/mumixam)
[09:18:37] *** Joins: Daemoen (~Daemoen@2604:a880:2:d0::2164:d001)
[09:18:37] *** Joins: reda (~reda@user/reda)
[09:18:37] *** Joins: meejah (~meejah@rutas.meejah.ca)
[09:18:37] *** Joins: tpr (~tpr@user/tpr)
[09:18:37] *** Joins: adamchainz (~adamj@51.15.34.126)
[09:18:37] *** Joins: sale (~sale@ypocit.initech.link)
[09:18:37] *** Joins: phantomcircuit (~phantomci@192.241.205.97)
[09:18:37] *** Joins: Gaffel (~gaffel@h-178-174-170-170.A1405.priv.bahnhof.se)
[09:18:37] *** Joins: Bluefoxicy (~Bluefoxic@c-73-132-244-30.hsd1.md.comcast.net)
[09:18:37] *** Joins: remedan (~remedan@balak.me)
[09:18:37] *** Joins: orkim (~orkim@user/orkim)
[09:18:37] *** Joins: themill (~stuart@debian/stuart)
[09:18:37] *** Joins: awygle (~quassel@2604:a880:2:d0::5380:3001)
[09:18:37] *** Joins: InPhase (~InPhase@openscad/inphase)
[09:18:37] *** Joins: Spiney (~Spiney@2604:a880:400:d0::1d82:b001)
[09:18:37] *** Joins: bertiger (~bertiger@user/bertiger)
[09:18:37] *** Joins: GreaseMonkey (greaser@user/greasemonkey)
[09:18:37] *** Joins: oddish (~oddish@2a01:4f8:1c1c:a9da::1)
[09:18:37] *** Joins: Catatonic (~Catatonic@ariel.whatbox.ca)
[09:18:37] *** Joins: dnns01 (~quassel@2a02:c207:3003:651::1)
[09:18:37] *** Joins: nixture (uid240036@id-240036.brockwell.irccloud.com)
[09:18:37] *** Joins: daniel2 (daniel@user/daniel2)
[09:18:37] *** Joins: dmvrtx (dmvrtx@2a01:7e01::f03c:92ff:fefd:6ed6)
[09:18:37] *** Joins: Ulti (~matt@ec2-35-178-236-167.eu-west-2.compute.amazonaws.com)
[09:18:37] *** Joins: nvz (~user@nvz.farted.online)
[09:18:37] *** Joins: tardisx (~tardisx@2400:8902::f03c:91ff:fe89:d107)
[09:18:37] *** Joins: sco1 (~sco1@charon.whatbox.ca)
[09:18:37] *** Joins: emptynine (tkk@cybertron.redlight.li)
[09:18:37] *** Joins: mdk (~mdk@python/psf/mdk)
[09:18:38] *** Joins: masterkorp (~masterkor@user/masterkorp)
[09:18:38] *** iridium.libera.chat sets mode: +o litharge
[09:18:38] *** Joins: redkrieg (~redkrieg@user/redkrieg)
[09:18:38] *** Joins: rodstewart (~dmartins@188.ip-149-56-97.net)
[09:18:38] *** Joins: wm (~wmy@2a01:4f8:1c1c:7918::1)
[09:18:38] *** Joins: synic (~squish@li74-118.members.linode.com)
[09:18:38] *** Joins: taeaad (~taeaad@user/taeaad)
[09:18:42] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 272 seconds)
[09:18:42] *** Joins: lxdr (~lxdr@user/lxdr)
[09:18:42] *** Quits: r0bby (r0bby@user/r0bby) (Ping timeout: 256 seconds)
[09:19:01] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[09:19:12] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[09:19:12] *** Joins: hwrd (sid64402@id-64402.tooting.irccloud.com)
[09:19:46] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (Ping timeout: 272 seconds)
[09:20:20] *** Quits: r3m (~launch@user/r3m) (*.net *.split)
[09:20:20] *** Quits: seednode (~seednode@user/seednode) (*.net *.split)
[09:20:20] *** Quits: nyuszika7h (nyuszika7h@lykos/dev/nyuszika7h) (*.net *.split)
[09:20:20] *** Quits: kmikita (uid461814@id-461814.brockwell.irccloud.com) (*.net *.split)
[09:20:20] *** Quits: NiKaN (sid385034@id-385034.brockwell.irccloud.com) (*.net *.split)
[09:20:20] *** Quits: jtanner (sid194399@brockwell.irccloud.com) (*.net *.split)
[09:20:20] *** Quits: BlueShark (sid10311@user/blueshark) (*.net *.split)
[09:20:20] *** Quits: MrNaz (sid133418@id-133418.highgate.irccloud.com) (*.net *.split)
[09:20:20] *** Quits: Alexer (~alexer@alexer.net) (*.net *.split)
[09:20:20] *** Quits: sebastianos (~sebastian@user/sebastianos) (*.net *.split)
[09:20:20] *** Quits: catbeard (~noise@user/catbeard) (*.net *.split)
[09:20:20] *** Quits: securethemews_ (~securethe@2a00:23c4:1e9b:7b00::1) (*.net *.split)
[09:20:20] *** Quits: brachamh (~brachamh@user/brachamh) (*.net *.split)
[09:20:20] *** Quits: jrjsmrtn (~jrjsmrtn@ip-83-134-41-235.dsl.scarlet.be) (*.net *.split)
[09:20:20] *** Quits: toine (~antoine@2001:41d0:e:41f::1) (*.net *.split)
[09:20:20] *** Quits: ericoc (sid179921@id-179921.highgate.irccloud.com) (*.net *.split)
[09:20:20] *** Quits: Affliction (affliction@user/affliction) (*.net *.split)
[09:20:20] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (*.net *.split)
[09:20:20] *** Quits: m4v (~znc@ubuntu/member/m4v) (*.net *.split)
[09:20:20] *** Quits: catdog (~quassel@2001:470:50f7:cdcd::cd1) (*.net *.split)
[09:20:20] *** Quits: bionade24 (~bionade24@server2.oscloud.info) (*.net *.split)
[09:20:20] *** Quits: xikkub (me@user/xikkub) (*.net *.split)
[09:20:20] *** Quits: wisefriday (wisefriday@sempiternity.club) (*.net *.split)
[09:20:20] *** Quits: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070) (*.net *.split)
[09:20:21] *** Quits: xnbq (~xnbq@user/xnbq) (*.net *.split)
[09:20:21] *** Quits: summonner (~summonner@188.24.45.0) (*.net *.split)
[09:20:21] *** Quits: DarthGandalf (user@znc/developer/DarthGandalf) (*.net *.split)
[09:20:21] *** Quits: CyberShadow (vladimir@89.28.117.31) (*.net *.split)
[09:20:21] *** Quits: Harlin (~DonQixote@2603:300b:663:e800:1702:3c:82cb:1afc) (*.net *.split)
[09:20:21] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (*.net *.split)
[09:20:21] *** Quits: phryk (~totallyno@user/phryk) (*.net *.split)
[09:20:21] *** Quits: Nei (~ailin@user/nemui) (*.net *.split)
[09:20:21] *** Quits: w1kl4s (~w1kl4s@user/w1kl4s) (*.net *.split)
[09:20:21] *** Quits: maxking (~maxking@user/maxking) (*.net *.split)
[09:20:21] *** Quits: ldm (~ldm@hacksoc/member) (*.net *.split)
[09:20:21] *** Quits: yitz (~yitz@exercism/yitz) (*.net *.split)
[09:20:21] *** Quits: ChrisWarrick (kwpolska@user/kwpolska) (*.net *.split)
[09:20:21] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (*.net *.split)
[09:20:21] *** Quits: Nahra (~user@static.161.95.99.88.clients.your-server.de) (*.net *.split)
[09:20:21] *** Quits: kofuyu (~kofuyu@user/kofuyu) (*.net *.split)
[09:20:21] *** Quits: Santzes (~Santzes@2400:8901::f03c:92ff:fe49:47a6) (*.net *.split)
[09:20:21] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (*.net *.split)
[09:20:21] *** Quits: mweckbecker (~matthias@weckbecker.name) (*.net *.split)
[09:20:21] *** Quits: d3x (michal@bielaw.ski) (*.net *.split)
[09:20:21] *** Quits: SallyAhaj (sallyahaj@user/sallyahaj) (*.net *.split)
[09:20:21] *** Quits: esaym153 (~esaym153@net153.net) (*.net *.split)
[09:20:21] *** Quits: dab21 (~dab21@pistis.amyanddavid.net) (*.net *.split)
[09:20:21] *** Quits: vishwin (~brioux@2001:470:1f07:302::1) (*.net *.split)
[09:20:21] *** Quits: MrAureliusR (~MrAureliu@user/mraureliusr) (*.net *.split)
[09:20:21] *** Quits: dynos01 (~dynos01@2600:3c01:e000:36a::8400) (*.net *.split)
[09:20:21] *** Quits: jkl (~jkl@user/jkl) (*.net *.split)
[09:20:21] *** Quits: tonitch (~tonitch@user/tonitch) (*.net *.split)
[09:20:21] *** Quits: fructose (~fructose@user/fructose) (*.net *.split)
[09:20:21] *** Quits: Celelibi (celelibi@user/celelibi) (*.net *.split)
[09:20:21] *** Quits: nurupo (~nurupo.ga@user/nurupo) (*.net *.split)
[09:20:37] *** Joins: r0bby (r0bby@user/r0bby)
[09:20:38] *** Joins: r3m (~launch@user/r3m)
[09:20:38] *** Joins: brachamh (~brachamh@user/brachamh)
[09:20:38] *** Joins: seednode (~seednode@user/seednode)
[09:20:38] *** Joins: nyuszika7h (nyuszika7h@lykos/dev/nyuszika7h)
[09:20:38] *** Joins: NiKaN (sid385034@id-385034.brockwell.irccloud.com)
[09:20:38] *** Joins: kmikita (uid461814@id-461814.brockwell.irccloud.com)
[09:20:38] *** Joins: BlueShark (sid10311@user/blueshark)
[09:20:38] *** Joins: jtanner (sid194399@brockwell.irccloud.com)
[09:20:38] *** Joins: MrNaz (sid133418@id-133418.highgate.irccloud.com)
[09:20:38] *** Joins: Alexer (~alexer@alexer.net)
[09:20:38] *** Joins: sebastianos (~sebastian@user/sebastianos)
[09:20:38] *** Joins: catbeard (~noise@user/catbeard)
[09:20:38] *** Joins: securethemews_ (~securethe@2a00:23c4:1e9b:7b00::1)
[09:20:38] *** Joins: jrjsmrtn (~jrjsmrtn@ip-83-134-41-235.dsl.scarlet.be)
[09:20:38] *** Joins: ericoc (sid179921@id-179921.highgate.irccloud.com)
[09:20:38] *** Joins: toine (~antoine@2001:41d0:e:41f::1)
[09:20:38] *** Joins: Affliction (affliction@user/affliction)
[09:20:38] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[09:20:38] *** Joins: m4v (~znc@ubuntu/member/m4v)
[09:20:38] *** Joins: catdog (~quassel@2001:470:50f7:cdcd::cd1)
[09:20:38] *** Joins: xikkub (me@user/xikkub)
[09:20:38] *** Joins: bionade24 (~bionade24@server2.oscloud.info)
[09:20:38] *** Joins: wisefriday (wisefriday@sempiternity.club)
[09:20:38] *** Joins: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070)
[09:20:38] *** Joins: xnbq (~xnbq@user/xnbq)
[09:20:38] *** Joins: summonner (~summonner@188.24.45.0)
[09:20:38] *** Joins: DarthGandalf (user@znc/developer/DarthGandalf)
[09:20:38] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[09:20:38] *** Joins: CyberShadow (vladimir@89.28.117.31)
[09:20:38] *** Joins: Harlin (~DonQixote@2603:300b:663:e800:1702:3c:82cb:1afc)
[09:20:38] *** Joins: phryk (~totallyno@user/phryk)
[09:20:38] *** Joins: w1kl4s (~w1kl4s@user/w1kl4s)
[09:20:38] *** Joins: Nei (~ailin@user/nemui)
[09:20:38] *** Joins: maxking (~maxking@user/maxking)
[09:20:38] *** Joins: ldm (~ldm@hacksoc/member)
[09:20:38] *** Joins: yitz (~yitz@exercism/yitz)
[09:20:38] *** Joins: ChrisWarrick (kwpolska@user/kwpolska)
[09:20:38] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[09:20:38] *** Joins: Nahra (~user@static.161.95.99.88.clients.your-server.de)
[09:20:38] *** Joins: kofuyu (~kofuyu@user/kofuyu)
[09:20:38] *** Joins: Santzes (~Santzes@2400:8901::f03c:92ff:fe49:47a6)
[09:20:38] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[09:20:38] *** Joins: mweckbecker (~matthias@weckbecker.name)
[09:20:38] *** Joins: d3x (michal@bielaw.ski)
[09:20:38] *** Joins: SallyAhaj (sallyahaj@user/sallyahaj)
[09:20:38] *** Joins: esaym153 (~esaym153@net153.net)
[09:20:38] *** Joins: dab21 (~dab21@pistis.amyanddavid.net)
[09:20:38] *** Joins: vishwin (~brioux@2001:470:1f07:302::1)
[09:20:38] *** Joins: MrAureliusR (~MrAureliu@user/mraureliusr)
[09:20:38] *** Joins: dynos01 (~dynos01@2600:3c01:e000:36a::8400)
[09:20:38] *** Joins: jkl (~jkl@user/jkl)
[09:20:38] *** Joins: tonitch (~tonitch@user/tonitch)
[09:20:38] *** Joins: fructose (~fructose@user/fructose)
[09:20:38] *** Joins: Celelibi (celelibi@user/celelibi)
[09:20:38] *** Joins: nurupo (~nurupo.ga@user/nurupo)
[09:20:47] *** Joins: KevinX (~KevinX@185.245.86.84)
[09:21:11] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[09:22:37] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[09:22:42] *** Quits: thm (~thomas@fedora/thm) (*.net *.split)
[09:22:42] *** Quits: foureyes (foureyes@brought.to.you.by.bnc4free.com) (*.net *.split)
[09:22:42] *** Quits: Sadale (~Sadale@user/sadale) (*.net *.split)
[09:22:42] *** Quits: tomboy64 (~tomboy64@user/tomboy64) (*.net *.split)
[09:22:42] *** Quits: sandipndev (sandipndev@2600:3c00::f03c:92ff:fe8e:dce6) (*.net *.split)
[09:22:42] *** Quits: user3456 (user3456@user/user3456) (*.net *.split)
[09:22:42] *** Quits: bookworm (~bookworm@neomutt/bookworm) (*.net *.split)
[09:22:42] *** Quits: asd (~noname@user/asd) (*.net *.split)
[09:22:42] *** Quits: crackerjack (crackerjac@pear.bnc4free.com) (*.net *.split)
[09:22:42] *** Quits: petaflot (~root@lutolf.vserver.nimag.net) (*.net *.split)
[09:22:42] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (*.net *.split)
[09:22:42] *** Quits: enrh (~enrh@user/enrh) (*.net *.split)
[09:22:42] *** Quits: especial (~especial@2a0a:51c0:0:1f:67a7::2) (*.net *.split)
[09:22:42] *** Quits: MJ94 (mj94@user/mj94) (*.net *.split)
[09:22:42] *** Quits: aluria (~aluria@canonical/aluria) (*.net *.split)
[09:22:42] *** Quits: RavuAlHemio (~ondra@selene.ondrahosek.com) (*.net *.split)
[09:22:42] *** Quits: mspe (~user@tilde.team/user/mspe) (*.net *.split)
[09:22:42] *** Quits: tris (emptystrin@irc1.lessbroken.org) (*.net *.split)
[09:22:42] *** Quits: ThiefMaster (thief@indico/developer/thiefmaster) (*.net *.split)
[09:22:42] *** Quits: gerard (~gerard@user/gerard) (*.net *.split)
[09:22:42] *** Quits: Bato (~plauder@2001:bc8:182c:b39::1) (*.net *.split)
[09:22:42] *** Quits: Exa (exa@irc.moe) (*.net *.split)
[09:22:47] *** Joins: gerard_ (~gerard@user/gerard)
[09:22:49] *** Joins: fstd (~fstd@xdsl-78-35-72-109.nc.de)
[09:22:51] *** Joins: Bato (~plauder@2001:bc8:182c:b39::1)
[09:22:52] *** Joins: RavuAlHemio (~ondra@selene.ondrahosek.com)
[09:22:52] *** Joins: ThiefMasterrr (thief@indico/developer/thiefmaster)
[09:22:53] *** Joins: petaflot (~root@lutolf.vserver.nimag.net)
[09:22:55] *** Joins: MJ94_ (mj94@user/mj94)
[09:22:55] *** Joins: asd (~noname@user/asd)
[09:22:55] *** Joins: user3456_ (user3456@user/user3456)
[09:22:55] *** Joins: thm (~thomas@fedora/thm)
[09:22:56] *** Joins: Exagone313 (exa@irc.moe)
[09:23:00] *** Joins: tris (emptystrin@irc1.lessbroken.org)
[09:23:02] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (Ping timeout: 245 seconds)
[09:23:09] *** Joins: tomboy64 (~tomboy64@user/tomboy64)
[09:23:13] *** Joins: crackerjack (crackerjac@pear.bnc4free.com)
[09:23:25] *** Joins: foureyes (foureyes@brought.to.you.by.bnc4free.com)
[09:23:25] *** Joins: enrh (~enrh@user/enrh)
[09:23:27] *** MJ94_ is now known as MJ94
[09:23:27] *** Quits: NiKaN (sid385034@id-385034.brockwell.irccloud.com) (Ping timeout: 245 seconds)
[09:23:28] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[09:23:29] *** Joins: mspe (~user@tilde.team/user/mspe)
[09:23:49] *** ThiefMasterrr is now known as ThiefMaster
[09:23:55] *** Joins: aluria (~aluria@canonical/aluria)
[09:24:03] *** user3456_ is now known as user3456
[09:24:11] *** Quits: Trieste (T@user/pilgrim) (*.net *.split)
[09:24:11] *** Quits: ST47 (~ST47@wikimedia/st47) (*.net *.split)
[09:24:11] *** Quits: vbgunz (~vbgunz@35.141.71.47) (*.net *.split)
[09:24:11] *** Quits: ATAD (~ATAD@user/atad) (*.net *.split)
[09:24:11] *** Quits: HenryG (~quassel@2607:5300:201:3000::f63) (*.net *.split)
[09:24:11] *** Quits: onu (~onufn@gibbs.uberspace.de) (*.net *.split)
[09:24:11] *** Quits: jjhoo (~jahakala@dsl-trebng21-58c18f-56.dhcp.inet.fi) (*.net *.split)
[09:24:11] *** Quits: avu (~jan@user/avu) (*.net *.split)
[09:24:11] *** Quits: murr4y (ali@user/murr4y) (*.net *.split)
[09:24:11] *** Quits: nisstyre (~wes@user/nisstyre) (*.net *.split)
[09:24:11] *** Quits: phy1729 (~phy1729@zsh/wizard/phy1729) (*.net *.split)
[09:24:11] *** Quits: duracrisis (~kkh@user/duracrisis) (*.net *.split)
[09:24:11] *** Quits: JerryXiao (~JerryXiao@user/jerryxiao) (*.net *.split)
[09:24:11] *** Quits: mrkajetanp (~mrkajetan@88.98.245.28) (*.net *.split)
[09:24:11] *** Quits: averell (~averell@user/averell) (*.net *.split)
[09:24:11] *** Quits: ethoxy (~caretaker@cx21.havox.ru) (*.net *.split)
[09:24:11] *** Quits: mchlumsky (~mchlumsky@modemcable106.190-179-173.mc.videotron.ca) (*.net *.split)
[09:24:11] *** Quits: bdeferme1 (~bdeferme@i.ctrl86.com) (*.net *.split)
[09:24:11] *** Quits: elmcrest (~elmcrest@static.48.211.217.95.clients.your-server.de) (*.net *.split)
[09:24:11] *** Quits: peterandre (peterandre@2605:6400:c847:1524::4251) (*.net *.split)
[09:24:11] *** Quits: woky (~woky@li1651-31.members.linode.com) (*.net *.split)
[09:24:11] *** Quits: ouemt (~quassel@user/ouemt) (*.net *.split)
[09:24:11] *** Quits: cyberjunkie (~cyberjunk@wireguard/tunneler/cyberjunkie) (*.net *.split)
[09:24:11] *** Quits: Ninpo (~Ninpo@charlton.qap.la) (*.net *.split)
[09:24:11] *** Quits: k0fein (~esmeralda@user/k0fein) (*.net *.split)
[09:24:11] *** Quits: Yasumoto (~Yasumoto@ec2-34-212-228-153.us-west-2.compute.amazonaws.com) (*.net *.split)
[09:24:11] *** Quits: bss (bss@rie.incorporeal.org) (*.net *.split)
[09:24:11] *** Quits: u4t (~chat@78.ip-139-99-236.net) (*.net *.split)
[09:24:11] *** Quits: barometz (~dvanb@i117058.upc-i.chello.nl) (*.net *.split)
[09:24:11] *** Quits: Aye (jeda@hellomouse/dev/cryb.jeda) (*.net *.split)
[09:24:11] *** Quits: notevil (~notevil@user/notevil) (*.net *.split)
[09:24:11] *** Quits: beanzilla (~beanzilla@user/beanzilla) (*.net *.split)
[09:24:11] *** Quits: pizza (~pizzaiolo@user/pizzaiolo) (*.net *.split)
[09:24:11] *** Quits: neil (~kneel@rockylinux/infra/neil) (*.net *.split)
[09:24:11] *** Quits: hexa- (~hexa-@juno.lossy.network) (*.net *.split)
[09:24:11] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (*.net *.split)
[09:24:11] *** Quits: sabet (~sabet@user/sabet) (*.net *.split)
[09:24:11] *** Quits: _mal (~mal@user/mal/x-8025409) (*.net *.split)
[09:24:11] *** Quits: lf94 (~lf94@2604:a880:cad:d0::cd6:8001) (*.net *.split)
[09:24:11] *** Quits: bjonnh (~jo@about/aquilenet/bjonnh) (*.net *.split)
[09:24:11] *** Quits: Wooble (~Wooble@107.170.27.240) (*.net *.split)
[09:24:11] *** Quits: MacGyver (~macgyver@user/macgyver) (*.net *.split)
[09:24:11] *** Quits: Hobbyboy (Hobbyboy@hobbyboy.co.uk) (*.net *.split)
[09:24:11] *** Quits: gAy_Dragon (A_D@doom-tower.awesome-dragon.science) (*.net *.split)
[09:24:11] *** Quits: CygniX (~CygniX@2605:6400:30:fdc6:68:f4:4e:78) (*.net *.split)
[09:24:11] *** Quits: _moep_ (~moep@user/moep/x-3358975) (*.net *.split)
[09:24:11] *** Quits: mattmcc (matt@2600:3c00::f03c:91ff:fe89:c2e8) (*.net *.split)
[09:24:11] *** Quits: gbear605 (~gbear605@user/gbear605) (*.net *.split)
[09:24:11] *** Quits: ross (sid305269@user/ross) (*.net *.split)
[09:24:11] *** Quits: gossie (~gossie@2a10:3781:328:1:e1d:50cc:c868:ca94) (*.net *.split)
[09:24:11] *** Quits: farn (~farn@2a03:4000:7:3cd:d4ab:85ff:feeb:f505) (*.net *.split)
[09:24:11] *** Quits: debnet (sid330295@python/afpy/debnet) (*.net *.split)
[09:24:11] *** Quits: rockSTONE (sid315855@id-315855.brockwell.irccloud.com) (*.net *.split)
[09:24:11] *** Quits: bertiger (~bertiger@user/bertiger) (*.net *.split)
[09:24:11] *** Quits: confluence (~quassel@2a01:4f8:c17:3ca::2) (*.net *.split)
[09:24:11] *** Quits: oddish (~oddish@2a01:4f8:1c1c:a9da::1) (*.net *.split)
[09:24:11] *** Quits: Catatonic (~Catatonic@ariel.whatbox.ca) (*.net *.split)
[09:24:11] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (*.net *.split)
[09:24:11] *** Quits: Jmtrix (~qed@user/jmtrix) (*.net *.split)
[09:24:11] *** Quits: dnns01 (~quassel@2a02:c207:3003:651::1) (*.net *.split)
[09:24:11] *** Quits: nixture (uid240036@id-240036.brockwell.irccloud.com) (*.net *.split)
[09:24:11] *** Quits: daniel2 (daniel@user/daniel2) (*.net *.split)
[09:24:11] *** Quits: taeaad (~taeaad@user/taeaad) (*.net *.split)
[09:24:11] *** Quits: synic (~squish@li74-118.members.linode.com) (*.net *.split)
[09:24:11] *** Quits: wm (~wmy@2a01:4f8:1c1c:7918::1) (*.net *.split)
[09:24:11] *** Quits: genewitch (~genewitch@triggerwarning.projectftm.com) (*.net *.split)
[09:24:11] *** Quits: rodstewart (~dmartins@188.ip-149-56-97.net) (*.net *.split)
[09:24:11] *** Quits: redkrieg (~redkrieg@user/redkrieg) (*.net *.split)
[09:24:11] *** Quits: masterkorp (~masterkor@user/masterkorp) (*.net *.split)
[09:24:11] *** Quits: mdk (~mdk@python/psf/mdk) (*.net *.split)
[09:24:19] *** Joins: barometz_ (~dvanb@i117058.upc-i.chello.nl)
[09:24:21] *** Joins: jjhoo_ (jahakala@dsl-trebng21-58c18f-56.dhcp.inet.fi)
[09:24:31] *** Joins: daniel3 (daniel@user/daniel2)
[09:24:31] *** Joins: dnns01_ (~quassel@2a02:c207:3003:651::1)
[09:24:34] *** Joins: mchlumsky (~mchlumsky@modemcable106.190-179-173.mc.videotron.ca)
[09:24:34] *** Joins: elmcrest (~elmcrest@static.48.211.217.95.clients.your-server.de)
[09:24:35] *** Joins: notevil_ (~notevil@user/notevil)
[09:24:38] *** Joins: ouemt (~quassel@user/ouemt)
[09:24:41] *** Joins: ST47 (~ST47@wikimedia/st47)
[09:24:41] *** Joins: bertiger_ (~bertiger@user/bertiger)
[09:24:51] *** Joins: A_Dragon (A_D@doom-tower.awesome-dragon.science)
[09:24:55] *** Joins: CygniX (~CygniX@2605:6400:30:fdc6:68:f4:4e:78)
[09:24:55] *** Joins: woky (~woky@li1651-31.members.linode.com)
[09:24:57] *** Joins: bjonnh (~jo@about/aquilenet/bjonnh)
[09:24:58] *** Exagone313 is now known as Exa
[09:24:59] *** Joins: HenryG (~quassel@2607:5300:201:3000::f63)
[09:24:59] *** Joins: masterkorp (~masterkor@user/masterkorp)
[09:25:21] *** Joins: lf94 (~lf94@178.128.239.88)
[09:25:26] *** Joins: beanzilla (~beanzilla@user/beanzilla)
[09:25:30] *** Joins: neil (~kneel@rockylinux/infra/neil)
[09:25:32] *** Joins: Catatonic (~Catatonic@ariel.whatbox.ca)
[09:25:36] *** Joins: Hobbyboy (Hobbyboy@hobbyboy.co.uk)
[09:25:36] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[09:25:36] *** Joins: duracrisis (~kkh@user/duracrisis)
[09:25:36] *** Joins: gbear605 (~gbear605@user/gbear605)
[09:25:36] *** Joins: cyberjunkie (~cyberjunk@wireguard/tunneler/cyberjunkie)
[09:25:39] *** Joins: ATAD (~ATAD@user/atad)
[09:25:39] *** Joins: pizzaiolo (~pizzaiolo@user/pizzaiolo)
[09:25:41] *** Joins: mrkajetanp (~mrkajetan@2a01:4b00:ea36:6c00:7994:941c:3f5d:2b88)
[09:25:46] *** Joins: Trieste (T@user/pilgrim)
[09:25:47] *** Joins: bookworm (~bookworm@neomutt/bookworm)
[09:25:52] *** Joins: sabet (~sabet@user/sabet)
[09:25:58] *** Joins: onu (~onufn@gibbs.uberspace.de)
[09:25:59] *** Joins: _mal (~mal@user/mal/x-8025409)
[09:26:03] *** Joins: taeaad (~taeaad@user/taeaad)
[09:26:09] *** Joins: JerryXiao (~JerryXiao@user/jerryxiao)
[09:26:15] *** Joins: Wooble (~Wooble@107.170.27.240)
[09:26:22] *** Joins: phy1729 (~phy1729@zsh/wizard/phy1729)
[09:26:26] *** Joins: Sadale (~Sadale@user/sadale)
[09:26:53] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[09:27:01] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[09:29:24] *** Joins: Yasumoto (~Yasumoto@ec2-34-212-228-153.us-west-2.compute.amazonaws.com)
[09:30:43] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[09:30:50] *** Quits: monkey_ (~user@190.104.116.134) (Remote host closed the connection)
[09:30:57] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[09:33:05] *** Joins: stranac (~stranac@195.29.239.126)
[09:38:53] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[09:39:24] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[09:39:51] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[09:40:23] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[09:44:20] *** Quits: [_] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[09:44:41] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 248 seconds)
[09:45:42] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.2)
[09:45:50] *** Joins: lordrishav (~LordRisha@user/lordrishav)
[09:46:04] *** lordrishav is now known as LordRishav
[09:47:21] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Ping timeout: 248 seconds)
[09:48:26] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:49:55] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[09:51:04] *** Quits: fflam (~mdt@ip70-179-20-127.sd.sd.cox.net) (Ping timeout: 258 seconds)
[09:51:53] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 244 seconds)
[09:52:58] *** Joins: fflam (~mdt@217.138.252.251)
[09:56:26] *** Joins: 030AAAAAB (~arnoldas@78.157.71.116)
[09:56:49] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Ping timeout: 258 seconds)
[09:56:56] *** Joins: wyclif (~wyclif@user/wyclif)
[09:58:36] *** Joins: torandu (~sean@94.10.125.197)
[09:58:50] *** Quits: noctavian (~noctavian@gateway/tor-sasl/noctavian) (Remote host closed the connection)
[09:59:00] *** Joins: ihristov (~ihristov@85.187.46.226)
[09:59:03] *** Quits: 030AAAAAB (~arnoldas@78.157.71.116) (*.net *.split)
[09:59:15] *** Joins: 030AAAAAB (~arnoldas@78.157.71.116)
[10:00:09] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 248 seconds)
[10:00:09] *** Quits: roadt (~roadt@36.7.132.7) (Ping timeout: 248 seconds)
[10:00:49] *** Joins: roadt (~roadt@36.7.132.7)
[10:05:07] *** Quits: daddy (~ryan@hashbang/bdfl) (Quit: Ultima, my old server, is dying. I'll be reconnecting from a new shell-server.)
[10:05:44] *** Joins: daddy (ryan@hashbang/bdfl)
[10:05:44] *** Joins: noctavian (~noctavian@gateway/tor-sasl/noctavian)
[10:06:22] *** Quits: fflam (~mdt@217.138.252.251) (Ping timeout: 245 seconds)
[10:07:03] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 276 seconds)
[10:07:43] *** Quits: mteo (francis@user/francis) (Quit: rb)
[10:07:57] *** Joins: wyclif (~wyclif@user/wyclif)
[10:08:18] *** Joins: fflam (~mdt@ip70-179-20-127.sd.sd.cox.net)
[10:08:27] *** Joins: syphar (~syphar@2001:470:69fc:105::2ad6)
[10:08:28] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[10:08:30] *** Quits: torandu (~sean@94.10.125.197) (Ping timeout: 256 seconds)
[10:10:16] *** Joins: mteo (francis@user/francis)
[10:10:36] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[10:10:50] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Remote host closed the connection)
[10:10:55] *** Quits: francis (francis@user/francis) (Quit: rb)
[10:12:03] *** Joins: francis (francis@user/francis)
[10:12:12] *** Joins: Obo (~roberto@78.77.166.185)
[10:12:21] *** Joins: torandu (~sean@94.10.125.197)
[10:13:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[10:13:13] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[10:13:30] *** Joins: wyclif (~wyclif@user/wyclif)
[10:13:54] *** Joins: NiKaN (sid385034@id-385034.brockwell.irccloud.com)
[10:15:14] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[10:16:42] *** Quits: torandu (~sean@94.10.125.197) (Ping timeout: 245 seconds)
[10:18:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[10:18:36] *** Parts: endless (~endlessed@server.zane.wiki) (The Lounge - https://thelounge.chat)
[10:18:59] *** Joins: wyclif (~wyclif@user/wyclif)
[10:22:19] *** Joins: kosh (~kosh@user/kosh)
[10:22:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[10:23:52] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[10:24:45] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[10:26:09] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[10:31:53] *** Joins: ExeciN (~ExeciN@user/nicexe)
[10:32:52] *** Quits: zaquest (~notzaques@5.128.210.178) (Ping timeout: 256 seconds)
[10:32:59] *** Joins: dvx (~dvx@185.63.97.64)
[10:34:01] *** Joins: psydroid (~psydroid@user/psydroid)
[10:35:18] *** Joins: torandu (~sean@94.10.125.197)
[10:36:13] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[10:36:28] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[10:37:07] *** Joins: wyclif (~wyclif@user/wyclif)
[10:40:49] <jim> hi... running an irc client script for hexchat, in python3: the part that failed is: https://termbin.com/l032
[10:41:14] <jim> the code: https://github.com/jwlynch/irc-subst.git
[10:41:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[10:43:25] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[10:45:42] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[10:46:10] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:46:32] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 272 seconds)
[10:46:44] *** Joins: seednode (~seednode@user/seednode)
[10:47:52] *** Joins: ronny (~ronny@2001:470:69fc:105::b57)
[10:48:11] *** Joins: jwon (~jwon@user/jwon)
[10:48:11] *** Joins: dontwannatell[m] (~dontwanna@2001:470:69fc:105::c27)
[10:48:11] *** Joins: allegary (~allegary@apache/committer/gjm)
[10:48:12] *** Joins: cecep[m] (~cecep@2001:470:69fc:105::3994)
[10:48:14] *** Joins: neolem (~neolem@2001:470:69fc:105::c675)
[10:48:18] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[10:49:30] *** Joins: meatballs (~meatballs@2001:470:69fc:105::633)
[10:50:38] <cloudcell> hello, I am reading h5py documentation here https://buildmedia.readthedocs.org/media/pdf/h5py/latest/h5py.pdf and I have trouble understanding how to store lists, can anyone give me an example on how to store a list in g5py ?
[10:52:06] <cloudcell> I have a list of sets that I need to store using h5py, how can I do that?
[10:53:03] *** Joins: rendar (~rendar@user/rendar)
[10:54:10] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[10:54:11] *** Joins: wender (~Wender@189.37.69.83)
[10:56:50] *** Joins: wyclif (~wyclif@user/wyclif)
[10:57:56] *** Quits: computeiro (~Wender@189.37.64.202) (Ping timeout: 272 seconds)
[10:58:18] *** Joins: jmcantrell (~jmcantrel@user/jmcantrell)
[10:58:55] *** Quits: moto (~moto@user/moto) (Remote host closed the connection)
[11:00:48] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[11:00:54] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[11:01:27] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[11:02:18] *** Joins: gusto (~Augustus@109.255.100.54)
[11:05:40] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[11:08:35] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-519b-3f89-f896-0f8f.res6.spectrum.com) (Quit: jarthur)
[11:10:11] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[11:10:20] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[11:10:33] *** Quits: sharktamer (~sharktame@cpc91312-watf11-2-0-cust697.15-2.cable.virginm.net) (Ping timeout: 248 seconds)
[11:11:15] *** Joins: szymon (~ugh@staticline-31-183-187-232.toya.net.pl)
[11:13:13] *** Joins: upsala1 (~zcb@81.17.24.203)
[11:14:47] <rendar> what is an async generator?!
[11:15:03] <rendar> an async coroutine that yields something, and then that must be used into an async for loop?
[11:15:39] *** Joins: morguldir (~morguldir@2001:470:69fc:105::21bd)
[11:15:41] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[11:15:49] *** Joins: binarymutt[m] (~binarymut@user/binarymutt)
[11:15:58] *** Joins: boris[m] (~borisruna@2001:470:69fc:105::32f3)
[11:16:19] *** Joins: cheater (~Username@user/cheater)
[11:16:25] *** Quits: upsala (~zcb@185.213.155.160) (Ping timeout: 248 seconds)
[11:16:46] *** Quits: somlis (~somlis@user/somlis) (Read error: Connection reset by peer)
[11:17:07] *** Joins: PyT001 (~PyT001@2402:e280:3d22:227:4155:bf3c:51a5:f007)
[11:19:07] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[11:19:29] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[11:22:04] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[11:22:17] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[11:24:10] *** Quits: PyT001 (~PyT001@2402:e280:3d22:227:4155:bf3c:51a5:f007) (Ping timeout: 246 seconds)
[11:24:42] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[11:26:04] *** Joins: manti7 (~manti7@176.10.104.94)
[11:32:34] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[11:32:54] *** Joins: moto (~moto@user/moto)
[11:33:18] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 268 seconds)
[11:33:48] *** Lord_of_Life_ is now known as Lord_of_Life
[11:36:41] *** Quits: rubion (~rubion@cpc124316-ayle4-2-0-cust156.15-2.cable.virginm.net) (Ping timeout: 248 seconds)
[11:37:42] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[11:38:47] *** Quits: torandu (~sean@94.10.125.197) (Ping timeout: 245 seconds)
[11:39:29] *** Joins: schumaml3 (~schumaml@dslb-178-007-198-199.178.007.pools.vodafone-ip.de)
[11:39:50] *** Joins: kenshiro (~mm@user/kenshiro)
[11:41:10] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:42:20] *** Quits: schumaml2 (~schumaml@dslb-092-074-010-022.092.074.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[11:45:34] *** Joins: penguinbrian (~penguinbr@2001:470:69fc:105::33d2)
[11:45:41] *** Joins: gloomy (~gloomy@2001:470:69fc:105::ce00)
[11:45:42] *** Joins: orbatos[m] (~orbatos@user/orbatos)
[11:45:50] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[11:46:04] *** Quits: audiobirb (~audio@2603-8081-1800-00ad-3290-0c64-3212-0442.res6.spectrum.com) (Ping timeout: 272 seconds)
[11:46:34] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 246 seconds)
[11:47:30] *** Joins: audiobirb (~audio@2603-8081-1800-00ad-6895-e31f-1b1e-ae38.res6.spectrum.com)
[11:49:16] *** Joins: slavaqq (~slavaqq@sdmail.sdserver.cz)
[11:49:34] *** Joins: BrenBarn (~brenbarn@2001:470:69fc:105::2da2)
[11:50:27] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[11:52:49] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[11:53:38] *** Parts: kenshiro (~mm@user/kenshiro) ()
[11:54:35] *** Quits: cthulchu (~Cthulchu@194.44.110.194) (Ping timeout: 252 seconds)
[11:55:11] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[11:56:49] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:58:10] *** Quits: audiobirb (~audio@2603-8081-1800-00ad-6895-e31f-1b1e-ae38.res6.spectrum.com) (Ping timeout: 240 seconds)
[11:59:26] *** Quits: newpy (~newpy@2601:280:4381:1390:d8a2:4368:1fe2:a8e3) (Ping timeout: 272 seconds)
[11:59:27] *** Joins: y1n (~y1n@84-115-65-42.wifi.dynamic.surfer.at)
[11:59:52] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 258 seconds)
[12:10:02] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[12:13:24] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:15:16] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: Textual IRC Client: www.textualapp.com)
[12:16:02] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[12:16:22] *** Quits: cjb (~cjb@user/cjb) (Quit: rcirc on GNU Emacs 28.0.50)
[12:19:18] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[12:19:37] *** jjhoo_ is now known as jjhoo
[12:20:04] *** Joins: shad (~shad@user/shad)
[12:20:13] <agronholm> rendar: yup
[12:22:17] *** Joins: nips (~nips@abv84.internetdsl.tpnet.pl)
[12:22:23] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[12:22:37] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 268 seconds)
[12:23:05] *** Joins: Hax0r (~Hax0r@2001:16a2:c040:253a:7a8a:7af9:77fb:3f86)
[12:23:14] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[12:25:39] *** Quits: sirn (~sirn@user/sirn) (Quit: ZNC 1.8.2 - https://znc.in)
[12:28:22] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 245 seconds)
[12:32:15] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[12:32:35] *** Joins: me-sudoer-dentne (~me-sudoer@2402:e280:3d25:53d:14e4:a16a:66ca:906f)
[12:34:16] *** Quits: rany (~rany@user/rany) (Ping timeout: 272 seconds)
[12:34:33] *** Quits: hyper_dave (~hyper_dav@197.156.107.34) (Quit: WeeChat 3.2)
[12:35:51] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:37:59] *** Quits: raek (~raek@2001:9b1:efe:3200:d250:99ff:fec0:e153) (Quit: raek)
[12:38:18] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[12:38:20] *** Quits: gerty (~gerty@235.ip-51-77-195.eu) (Changing host)
[12:38:20] *** Joins: gerty (~gerty@user/gerty)
[12:38:46] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:39:31] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[12:40:04] *** Joins: raek (~raek@2001:9b1:efe:3200:d250:99ff:fec0:e153)
[12:40:08] *** Joins: iomari891 (~iomari891@105.112.138.38)
[12:40:39] *** Joins: rany (~rany@user/rany)
[12:42:46] *** Joins: Atque (~Atque@user/atque)
[12:43:53] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 248 seconds)
[12:45:08] *** Joins: Ninpo (~Ninpo@charlton.qap.la)
[12:46:10] *** Quits: y1n (~y1n@84-115-65-42.wifi.dynamic.surfer.at) (Ping timeout: 240 seconds)
[12:48:25] *** Joins: sirn (~sirn@user/sirn)
[12:48:41] *** Quits: Praise (~Fat@user/praise) (Ping timeout: 248 seconds)
[12:48:58] *** Joins: Praise (~Fat@user/praise)
[12:51:10] *** Joins: Falc (~Falc@193.191.206.243)
[12:51:18] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[12:51:58] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[12:52:09] <Jonno_FTW> if I want to maintain a list of n largest items, would it be faster to use heapq or bisect?
[12:53:32] *** Joins: hyper_dave (~hyper_dav@197.156.107.34)
[12:54:06] *** Joins: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[12:54:22] <jjhoo> cloudcell: I ended up using pytables for hdf5 storage, https://www.pytables.org/usersguide/tutorials.html
[12:54:43] *** Quits: me-sudoer-dentne (~me-sudoer@2402:e280:3d25:53d:14e4:a16a:66ca:906f) (Quit: Leaving)
[12:56:57] <hexnewbie> Jonno_FTW: bisect.insort() is O(n) average case, which as bad as not using bisect, complexity-wise. heapq is faster (doc states it's O(log n) insert and O(n log n) to sort), I know Twisted callLater uses heapq, which is where I plagiarised the use of it for my own queues
[12:57:00] <cloudcell> thanks jjhoo , I seem to have found the solution: the library "physics-tenpy"
[12:57:59] <Jonno_FTW> hexnewbie: thanks, I'm trying to find the n largest distances in a "distance matrix", except there's no matrix because it won't fit in memory, so it's just a double loop
[12:58:26] <frrs> Jonno_FTW: how's a matrix not fitting in memory?
[12:58:39] <Jonno_FTW> the points have 50 dimensions
[12:59:07] <frrs> Wait, does the matrix not fit into memory (can't possibly be the case) or do things like inversions create problems with memory?
[12:59:19] <Jonno_FTW> in trying to do the intermediate step, scipy had this to say: MemoryError: Unable to allocate 614. GiB for an array with shape (287002, 287002) and data type float64
[12:59:44] *** Joins: y1n (~y1n@84-115-65-42.wifi.dynamic.surfer.at)
[12:59:54] <Jonno_FTW> maybe I did something wrong idk
[12:59:55] *** Joins: avu (~jan@user/avu)
[13:00:12] <frrs> Ah, floats
[13:00:15] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Ping timeout: 268 seconds)
[13:00:19] <frrs> Do you need float64 there?
[13:00:20] <Jonno_FTW> maybe float32 will suffice
[13:00:39] <Jonno_FTW> but that's still half the memory at 307gb
[13:00:47] <hexnewbie> Wait, what does the dimension of the points have to do with the size of the distance matrix? It's number of items**2, regardless of how many dimensions are, the distance is still a single calculated from the 50 dimensions, is it not?
[13:00:55] <Jonno_FTW> yeah that's true
[13:01:49] <hexnewbie> I'd still prefer storing only the n largest, instead of the whole matrix, to find them.
[13:02:13] <Jonno_FTW> that's what I'm doing now
[13:02:42] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[13:02:49] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[13:03:26] <hexnewbie> I wonder if there's a way to optimize this still. But my faint memory is that there wasn't
[13:03:41] <Jonno_FTW> look at it with the cprofiler
[13:03:41] *** Joins: wyclif (~wyclif@user/wyclif)
[13:04:02] *** Joins: Julian (~tos9@python/site-packages/Julian)
[13:04:15] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[13:04:51] <hexnewbie> I mean like, avoid looping over 82370148004 pairs to compute 50 squares for *each* of them
[13:05:24] <hexnewbie> here even the penalty of the O(n) insort will not be that much of a problem, unless the CProfile says it is
[13:05:59] <Jonno_FTW> how do I keep the heap at a constant size though?
[13:06:22] <hexnewbie> Jonno_FTW: When it gets to n elements, pop an element.
[13:06:29] <Jonno_FTW> pop removes the smallest
[13:06:46] <hexnewbie> Jonno_FTW: You said you want the n *largest*
[13:07:15] <Jonno_FTW> does heapify but the largest at the end of the list?
[13:08:22] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[13:08:43] *** Joins: plastico (~plastico@neomutt/plastico)
[13:08:59] <Jonno_FTW> oh wait I see
[13:09:09] *** Joins: wyclif (~wyclif@user/wyclif)
[13:09:14] *** Joins: haroon (~haroon@gw.wmd.de)
[13:09:34] *** Joins: Samian (~Sami@2620:10d:c091:480::1:e746)
[13:10:21] *** Joins: csevast (~csevast@89-64-113-198.dynamic.chello.pl)
[13:10:22] <Jonno_FTW> this is still very slow, takes about 1.27s to do 1 word
[13:11:13] <hexnewbie> Jonno_FTW: Did you CProfile to see where the time is spent? Computing the distance, manipulating the heap, etc?
[13:11:21] *** Quits: portalrat (~portalrat@user/portalrat) (Quit: Leaving)
[13:11:47] <Jonno_FTW> hexnewbie: yeah I am now, here's the code: https://bpa.st/OHNA
[13:12:32] <Jonno_FTW> most time is spent in calculating the distance
[13:13:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[13:14:32] *** Joins: V1mV1m (~VimVim@85.191.5.103)
[13:14:38] <hexnewbie> Jonno_FTW: Don't max_scores.pop(), do heapq.heappop(max_scores)
[13:14:39] *** Joins: wyclif (~wyclif@user/wyclif)
[13:14:55] <Jonno_FTW> ah
[13:15:35] <Jonno_FTW> it will still take 100hrs to run
[13:15:47] <hexnewbie> Jonno_FTW: Also, if you make _find_disimilar to simply yield new_tpl, you can simply do heapq.nlargest(16, _find_disimilar())
[13:15:51] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[13:16:04] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[13:16:31] <hexnewbie> Jonno_FTW: No need, as that essentially does the same heappush/heappop you do (a slightly slower version, as it is stable)
[13:16:42] <hexnewbie> Jonno_FTW: Just saying, it's an option
[13:17:49] <Jonno_FTW> it's slightly faster
[13:18:01] <Jonno_FTW> migh just be easier to write it in c++ or something
[13:18:07] <Jonno_FTW> or java
[13:18:51] *** Quits: csevast (~csevast@89-64-113-198.dynamic.chello.pl) (Quit: IRC for eric IDE)
[13:18:55] <Jonno_FTW> this isn't to say that it's a correct answer to the problem, I'm trying to get an answer that gives the best score for https://www.datcreativity.com/task?
[13:19:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[13:19:36] <Jonno_FTW> this answer may just pick the one word that is an outlier
[13:19:50] <Jonno_FTW> and the other words that are close to it
[13:19:50] *** Joins: mcope (~matt@user/mcope)
[13:20:10] *** Joins: wyclif (~wyclif@user/wyclif)
[13:20:43] *** Joins: csevast (~csevast@89-64-113-198.dynamic.chello.pl)
[13:22:03] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[13:23:26] *** Quits: doc (~doc@user/doc) (Remote host closed the connection)
[13:23:37] *** Quits: csevast (~csevast@89-64-113-198.dynamic.chello.pl) (Client Quit)
[13:24:05] *** Joins: voltron (~voltrin_@ip5f5993ed.dynamic.kabel-deutschland.de)
[13:24:19] *** Joins: csevast (~csevast@89-64-113-198.dynamic.chello.pl)
[13:24:41] *** Joins: doc (~doc@user/doc)
[13:25:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[13:25:25] *** Quits: tims (~tims@115-64-241-2.tpgi.com.au) (Quit: WeeChat 3.2)
[13:25:40] *** Joins: wyclif (~wyclif@user/wyclif)
[13:28:14] *** Quits: csevast (~csevast@89-64-113-198.dynamic.chello.pl) (Client Quit)
[13:28:54] *** Joins: csevast (~csevast@89-64-113-198.dynamic.chello.pl)
[13:29:45] *** Quits: Obo (~roberto@78.77.166.185) (Quit: WeeChat 2.8)
[13:30:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[13:31:10] *** Joins: wyclif (~wyclif@user/wyclif)
[13:34:40] *** Quits: csevast (~csevast@89-64-113-198.dynamic.chello.pl) (Quit: IRC for eric IDE)
[13:34:42] *** Quits: hyper_dave (~hyper_dav@197.156.107.34) (Quit: WeeChat 3.2)
[13:35:03] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[13:35:30] *** Joins: torandu (~sean@94.10.125.197)
[13:35:45] *** Joins: hyper_dave (~hyper_dav@197.156.107.34)
[13:36:39] <daoudr> I get source not found during debug on eclipse even though I added the source
[13:38:22] *** Joins: csevast (~csevast@89-64-113-198.dynamic.chello.pl)
[13:38:46] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[13:38:59] *** Quits: LordRishav (~LordRisha@user/lordrishav) (Read error: Connection reset by peer)
[13:39:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[13:40:19] *** Joins: LordRishav (~LordRisha@user/lordrishav)
[13:40:20] *** Quits: torandu (~sean@94.10.125.197) (Ping timeout: 268 seconds)
[13:40:56] *** Joins: wyclif (~wyclif@user/wyclif)
[13:43:03] *** Quits: csevast (~csevast@89-64-113-198.dynamic.chello.pl) (Read error: Connection reset by peer)
[13:43:37] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 248 seconds)
[13:43:48] *** Joins: csevast (~csevast@89-64-113-198.dynamic.chello.pl)
[13:43:54] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[13:45:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[13:46:25] *** Joins: wyclif (~wyclif@user/wyclif)
[13:46:29] *** Quits: y1n (~y1n@84-115-65-42.wifi.dynamic.surfer.at) (Ping timeout: 268 seconds)
[13:49:31] *** Joins: rakoon (~rakoon@2a02:2149:824f:5900:d56c:279c:675:d08c)
[13:49:55] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[13:50:36] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[13:50:39] *** Quits: haroon (~haroon@gw.wmd.de) (Quit: Client closed)
[13:51:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[13:51:53] *** Joins: wyclif (~wyclif@user/wyclif)
[13:53:49] *** Joins: ubert (~Thunderbi@77.119.161.84.wireless.dyn.drei.com)
[13:54:19] *** Quits: csevast (~csevast@89-64-113-198.dynamic.chello.pl) (Quit: IRC for eric IDE)
[13:54:35] *** Quits: rakoon (~rakoon@2a02:2149:824f:5900:d56c:279c:675:d08c) (Quit: WeeChat 2.8)
[13:54:58] *** Joins: rakoon (~rakoon@2a02:2149:824f:5900:d56c:279c:675:d08c)
[13:55:29] <The-Compiler> jim: hm, https://github.com/jwlynch/irc-subst/commit/61521ebebc0e331eaf2570c60b2e3e587bc2171d - what's your hexchat version?
[13:56:40] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[13:57:05] <gitesh> while slicing a string , it always goes from left to right?
[13:57:21] <gitesh> no matter if you use positive index or negative index
[13:57:29] *** Joins: wyclif (~wyclif@user/wyclif)
[13:59:22] <Repiphany> gitesh: Slicing has a third optional "step" parameter which can be negative
[14:00:00] *** Joins: y1n (~y1n@84-115-64-246.wifi.dynamic.surfer.at)
[14:00:01] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::682e)
[14:00:04] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[14:01:41] <rakoon> In my flask view i commit the user and return his attribute by <user.num>. I was messing around with threads and sometimes i get in the response the previous state  │ bbear
[14:01:42] <rakoon>                │                | of <user.num>, before the commit state I mean (in my code i just do user.num +=1 ). Does anyone know why is that?
[14:01:52] <rakoon> oups sry bad paste
[14:02:07] <Repiphany> gitesh: https://bpa.st/4DQA
[14:02:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[14:02:30] <rakoon> In my flask view i commit the user and return his attribute by <user.num>. I was messing around with threads and sometimes i get in the response the previous state before of <user.num>, before the commit state I mean (in my code i just do user.num +=1 ). Does anyone know why is that?
[14:02:49] <gitesh> Repiphany: trying that
[14:02:59] *** Joins: wyclif (~wyclif@user/wyclif)
[14:05:46] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[14:06:13] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[14:07:40] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[14:08:30] *** Joins: wyclif (~wyclif@user/wyclif)
[14:08:40] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Quit: Leaving)
[14:08:56] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[14:09:04] *** Joins: Karel (~Karel@ptr-9091p582syjwt145iue.18120a2.ip6.access.telenet.be)
[14:11:35] *** Joins: Ergo^ (~ergo@91.238.59.144)
[14:12:10] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:ec72:a5cd:f0a6:2c93)
[14:12:11] <gitesh> Repiphany: i did s[-4:] to get the last 4 digits
[14:12:24] <Karel> I'm using a multiprocessing.Pool to run a bunch of cpu intensive tasks in parallel. Some of these tasks can easily be split up into multiple subtasks, with the possible advantages of reducing latency (it's better if the first few big tasks get results earlier) and exposing more concurrency.
[14:12:24] <Karel> I'm wondering how do do this. The naive approach of just calling pool.apply_async from within an axisting task deadlocks, I assume because the "subtasks" get scheduled at the end while the subprocesses are still stuck on the "main task": https://bpa.st/CQKQ. Is there a nice solution for this?
[14:13:15] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[14:13:22] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[14:14:01] *** Joins: wyclif (~wyclif@user/wyclif)
[14:18:46] *** Quits: Proxysna (~Proxysna@62.119.254.142) (Remote host closed the connection)
[14:18:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[14:18:53] *** Joins: torandu (~sean@94.10.125.197)
[14:19:12] *** Quits: szymon (~ugh@staticline-31-183-187-232.toya.net.pl) (Ping timeout: 245 seconds)
[14:19:33] *** Joins: wyclif (~wyclif@user/wyclif)
[14:22:01] <Falc> Karel: I have little real experience with multiprocessing, but it sort of sounds like you want multiple Pools?
[14:22:48] <Falc> Karel: or maybe it's just that you're mixing sync and async; have you tried replacing your pool.imap() call with pool.map_async()?
[14:24:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[14:24:31] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[14:24:49] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[14:25:03] *** Joins: wyclif (~wyclif@user/wyclif)
[14:25:13] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 248 seconds)
[14:25:22] *** Joins: jinsun (~quassel@user/jinsun)
[14:25:35] <bjs> gitesh: is getting the last 4 digits not what you wanted/
[14:26:10] <gitesh> bjs: yes i wanted to get last 4 digits
[14:26:20] <gitesh> of an integer
[14:26:38] <gitesh> so i did int(str(integer)[4:])
[14:27:03] <bjs> gitesh: isn't the last 4 digits just `integer % 10000`
[14:27:58] <rendar> let's say i have a Command class with a `def execute(self): ...` -- is it an ok design to have subclass of that class which defines `async def execute(self) ...` ?
[14:28:00] <gitesh> bjs: yeah i was trying to get that, got it, i'd know that way
[14:28:25] <bjs> rendar: define "ok"?  I mean Python will let you
[14:29:10] <bjs> and people will be able to write code,  but tools like mypy are quite likely to reject it as it means if I have a function `def f(c: Command) -> None` that goes `c.execute()` then I won't be able to use an instance of your sub-class here
[14:29:26] *** Quits: rud01f (rud0lf@user/rud0lf) (Quit: FREAKSHELLS - https://www.freakshells.net)
[14:29:37] <rendar> bjs: i'm abstracting the command pattern, where i have a list of Command and then i call execute on them, then i thought to have an 'isAsync' flag, and call task_create() on their execute() instead of calling it directly
[14:29:50] <bjs> rendar: it'd be better to have Command and AsyncCommand classes
[14:29:56] <rendar> bjs: ok
[14:30:08] <bjs> obviously the non-async parts of the work might be shared in a BaseCommand class or something, but `execute` is clearly not one of them.
[14:30:15] <rendar> bjs: but Command and AsyncCommand will be in the same list
[14:30:16] <rendar> mixed
[14:30:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[14:30:21] <bjs> rendar: same list?
[14:30:33] *** Joins: wyclif (~wyclif@user/wyclif)
[14:30:39] <rendar> bjs: yes, a list of commands can mix sync and async commands
[14:30:59] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[14:31:01] *** Joins: f8l12 (~f8l12@154.3.40.46)
[14:31:02] <bjs> rendar: okay, again Python will let you and you can write code it might just be a bit weird to do so
[14:31:23] *** Joins: rud01f (rud0lf@user/rud0lf)
[14:31:40] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[14:31:45] <rendar> bjs: i'm forced to do so, because if i have Command and AsyncCommand as you suggest, how'd i be able to run sync and async commands?
[14:32:31] <bjs> rendar: well I guess it comes down to the question of how come you have a list with a mix of them? It's just weird to get to a point in a program and not just *know* whether the thing you're dealing with is async or not
[14:32:41] <bjs> it means you have to scatter your code with a lot of random isinstance() checks (or some other ad-hoc mechanism)
[14:32:50] *** Joins: besnn (~besnn@user/besnn)
[14:32:52] <Karel> Falc, I could create a secondary pool only for the subtasks, but that also stops working when I have multiple levels of subtask switching. It looks like the sync functions call the async versions and just block on them, that's what I'd have to do anyway :/
[14:34:00] <rendar> bjs: nope, the contrary, the check is done only 2 times: 1) the compiler produces a list of Command/AsyncCommand 2) the runtime runs command normally and AsyncCommands with asyncio, that's all
[14:34:48] <bjs> rendar: okay, well then do your check in that one place you run it
[14:35:30] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[14:35:35] <bjs> rendar: but might it not be easier to just make Command's execute also `async`? even if the compiler's generated Command.execute's don't do any awaiting
[14:35:43] *** Quits: noctavian (~noctavian@gateway/tor-sasl/noctavian) (Remote host closed the connection)
[14:35:58] *** Joins: noctavian (~noctavian@gateway/tor-sasl/noctavian)
[14:36:03] *** Joins: wyclif (~wyclif@user/wyclif)
[14:36:09] <rendar> bjs: you mean the Command class has both execute() and executeAsync() ?
[14:36:19] <bjs> rendar: no why not just have `async def execute(self): ...`
[14:36:54] <rendar> because some commands needs to be run immediately...
[14:37:06] <bjs> rendar: yeah so just don't have an `await` in those ones
[14:37:14] <rendar> uhm
[14:37:18] <dthpulse> hey guys, need small help with one function variable handling in function. If you can look to https://pastebin.com/tDK2TfEC  Function is def _get_contact(self, alert) where I don't know how to handle variable 'alert' to this function
[14:37:19] <bjs> uhm?
[14:37:25] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 258 seconds)
[14:37:41] <bjs> dthpulse: what do you mean by "handle"?
[14:38:03] *** Quits: wender (~Wender@189.37.69.83) (Quit: Leaving)
[14:38:45] <dthpulse> bjs, something like sell , don't know right world that is used in Py world :(
[14:39:10] <bjs> dthpulse: on line 79 you say `contacts = self._get_contact()` did you want to say `contacts = self._get_contact(alert)` ?
[14:39:28] *** Joins: ice9 (~ice9@user/ice9)
[14:39:53] *** Joins: varaindemian (uid73404@id-73404.charlton.irccloud.com)
[14:40:44] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[14:40:52] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[14:40:54] *** Quits: LordRishav (~LordRisha@user/lordrishav) (Read error: Connection reset by peer)
[14:41:33] *** Joins: wyclif (~wyclif@user/wyclif)
[14:41:50] <dthpulse> bjs that may work :)
[14:42:09] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Remote host closed the connection)
[14:42:55] <dthpulse> bjs I simply need to implement that there are 2 teams and alerts are send base on team (lines 43 - 46)
[14:43:02] *** Joins: darksun (~darksun@user/darksun)
[14:43:31] <dthpulse> bjs, and yep probably I missed this while calling the function
[14:44:15] <bjs> dthpulse: I'm surprised Python didn't give you some kind of error when you tried to run this
[14:44:28] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[14:45:05] *** Quits: Bardon (~Bardon@user/Bardon) (Ping timeout: 258 seconds)
[14:45:19] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:45:41] <dthpulse> bjs , I did't run it as only way to run it on my production .. :|  ... so was afraid
[14:46:10] <bjs> dthpulse: perhaps a good first thing to do will be to try make an environment you can run it that isn't on production so you can test it :)
[14:46:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[14:46:17] *** Quits: y1n (~y1n@84-115-64-246.wifi.dynamic.surfer.at) (Ping timeout: 245 seconds)
[14:46:18] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[14:46:20] *** Joins: entuland (~entuland@user/entuland)
[14:46:29] <dthpulse> bjs, yep, you are right
[14:46:40] <dthpulse> bjs, but THX anyway!!!
[14:47:05] *** Joins: wyclif (~wyclif@user/wyclif)
[14:47:10] *** Quits: slavaqq (~slavaqq@sdmail.sdserver.cz) (Ping timeout: 246 seconds)
[14:47:37] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 248 seconds)
[14:50:40] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[14:51:04] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:51:42] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[14:51:47] *** Joins: cedric (~cedric@2a01:cb11:867:c200:37c:9327:335e:207b)
[14:52:42] *** Joins: wyclif (~wyclif@user/wyclif)
[14:56:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[14:56:30] *** Joins: MacGyver (~macgyver@user/macgyver)
[14:56:36] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:56:39] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[14:57:45] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[14:57:57] <rendar> i thought that `fn(*args, **kwargs)` was a pretty standard way to call functions, but it seems it doesn't work with function that doesn't accept any argument -- why?
[14:58:08] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[14:58:12] *** Joins: wyclif (~wyclif@user/wyclif)
[14:58:40] *** Joins: acresearch (~acresearc@user/acresearch)
[14:58:56] *** Joins: y1n (~y1n@84-115-64-246.wifi.dynamic.surfer.at)
[14:59:38] <Yhg1s> rendar: it will work for anything that takes the arguments you're actually passing. If args and kwargs are empty, it works fine with functions that take no arguments.
[14:59:51] *** Joins: Proxysna (~Proxysna@62.119.254.142)
[14:59:52] *** Joins: Bardon (~Bardon@user/Bardon)
[14:59:54] <rendar> ok, fine
[15:03:08] *** Joins: georgios (~georgios@user/georgios)
[15:03:11] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: Textual IRC Client: www.textualapp.com)
[15:04:03] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[15:04:10] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:ec72:a5cd:f0a6:2c93) (Quit: Leaving)
[15:04:59] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[15:06:03] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[15:06:16] *** Quits: kuler (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[15:07:06] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[15:07:10] <hexnewbie> It's probably quite common to call functions that take no arguments with f(*args, **kwargs). I have hundreds of those to object.__init__(). The fact that it blows up when someone does pass an argument in (*args, **kwargs) is then a feature
[15:07:10] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[15:07:24] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[15:07:54] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[15:08:28] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:08:31] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[15:08:40] *** Quits: Bardon (~Bardon@user/Bardon) (Ping timeout: 240 seconds)
[15:08:41] *** Joins: Bardon_ (~Bardon@user/Bardon)
[15:09:16] *** Joins: wyclif (~wyclif@user/wyclif)
[15:12:08] *** Joins: jancoow (~jancoow@user/jancoow)
[15:13:27] <rendar> anyone used starlette in production? it seems fastapi extends starlette, so i should start from fastapi?
[15:13:44] <rendar> uvunicorn seems pretty solid
[15:13:50] <rendar> uvicorn* sorry
[15:15:28] <Ninpo> I can highly recommend fastapi, haven't used starlette on its own
[15:15:31] *** Joins: computeiro (~Wender@189.15.113.231)
[15:16:19] *** Joins: peterandre (peterandre@2605:6400:c847:1524::4251)
[15:16:48] <rendar> Ninpo: thanks
[15:18:19] <rendar> also, i met another powerful library: jinja2, how this library can properly be used in production? i mean, if it renders static html pages on the backend, what are its uses, if usually websites make HTTP API calls and then with the JSON data make the html itself in Javascript in the browser?
[15:19:04] *** Joins: henistein (~henistein@2001:8a0:c1b3:6b01:f913:f58d:444c:dd90)
[15:19:06] *** Parts: henistein (~henistein@2001:8a0:c1b3:6b01:f913:f58d:444c:dd90) ()
[15:19:31] <Yhg1s> rendar: if you don't need to do what jinja2 does, which is render templates, then you have no need for jinja2.
[15:19:55] <rendar> ok
[15:22:35] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[15:23:23] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[15:23:46] <push-f> in particular the difference is between client-side and server-side template rendering
[15:24:27] <push-f> so yeah if you're doing client-side templating with JS there is no need for a server-side templating library like Jinja2
[15:25:16] <push-f> although it is also possible to combine both client-side and server-side templating
[15:25:20] <push-f> but usually you don't
[15:26:46] *** Joins: Obo (~roberto@78.77.166.185)
[15:26:52] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 258 seconds)
[15:28:19] *** Joins: node1 (~node1@user/node1)
[15:28:44] *** Joins: haroon (~haroon@gw.wmd.de)
[15:30:10] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[15:31:42] *** Quits: Bardon_ (~Bardon@user/Bardon) (Ping timeout: 245 seconds)
[15:31:46] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[15:33:44] *** Joins: Bardon (~Bardon@user/Bardon)
[15:36:44] *** Quits: voltron (~voltrin_@ip5f5993ed.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[15:38:37] *** Joins: Atque (~Atque@user/atque)
[15:38:51] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[15:40:23] <f8l12> a better strategy is to use both server side rendering and client side rendering
[15:40:50] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:ec72:a5cd:f0a6:2c93)
[15:42:35] *** Joins: voltron (~voltrin_@ip5f5993ed.dynamic.kabel-deutschland.de)
[15:43:23] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[15:43:34] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 272 seconds)
[15:43:38] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[15:43:53] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[15:45:51] *** Joins: henistein (~henistein@2001:8a0:c1b3:6b01:f913:f58d:444c:dd90)
[15:46:26] *** Joins: PJBoy (~PJBoy@user/pjboy)
[15:46:44] *** Quits: y1n (~y1n@84-115-64-246.wifi.dynamic.surfer.at) (Ping timeout: 268 seconds)
[15:47:57] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 245 seconds)
[15:48:31] <deniska> that's js crazy-land, where they compile an interpreted language to itself :)
[15:49:27] <f8l12> you can do the same thing in any language, just not as isomorphically
[15:49:33] <deniska> rendar: there're plenty of sites which don't render everything through js
[15:49:52] *** Quits: {4144} (~{4144}@46.56.64.31) (Ping timeout: 258 seconds)
[15:51:34] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[15:51:58] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[15:52:38] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[15:53:18] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[15:53:24] <rendar> deniska: ok, but what is the purpose? (that's offtopic tho)
[15:54:01] *** Quits: BSaboia (~bsaboia@188-178-217-166-cable.dk.customer.tdc.net) (Quit: This computer has gone to sleep)
[15:54:12] *** Quits: shad (~shad@user/shad) (Ping timeout: 245 seconds)
[15:54:58] *** Quits: jdmark (~jdmark@67.8.137.130) (Ping timeout: 272 seconds)
[15:55:37] *** Joins: szymon (~ugh@staticline-31-183-187-232.toya.net.pl)
[15:55:47] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[15:58:48] *** Joins: y1n (~y1n@84-115-65-145.wifi.dynamic.surfer.at)
[15:58:51] *** Joins: derelict (~derelict@user/derelict)
[15:59:31] <jinsun> the benefit is avoiding JS
[16:00:51] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[16:00:51] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:ec72:a5cd:f0a6:2c93) (Quit: Leaving)
[16:01:58] <gitesh> `for res3 in res['statuses']:`
[16:02:00] <gitesh> `    print(res3['user']['screen_name'], res3['user']['created_at'])`
[16:02:25] <gitesh> Even with this compact code, we can still count off how many levels of nesting we have extracted from, in this case four. res[‘statuses’] says we have descended one level (in a dictionary). for res3 in… says we are have descended another level (in a list). [‘user’] is descending one more level, and [‘screen_name’] is descending one more level.
[16:02:46] <gitesh> I have a hard time to count off how many levels of nesting is there
[16:03:05] <Yhg1s> gitesh: so don't create such nested structures.
[16:03:58] *** Joins: {4144} (~{4144}@46.56.64.31)
[16:05:49] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:ec72:a5cd:f0a6:2c93)
[16:07:03] *** Joins: somlis (~somlis@user/somlis)
[16:07:56] *** Joins: zaquest (~notzaques@5.128.210.178)
[16:11:41] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[16:14:11] *** Joins: jdmark (~jdmark@67.8.137.130)
[16:14:32] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:ec72:a5cd:f0a6:2c93) (Quit: Leaving)
[16:14:42] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[16:14:52] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[16:16:04] *** Joins: kuler (~kulernil@gateway/tor-sasl/kuler)
[16:16:43] *** Joins: death916_lap (~Death916@user/death916)
[16:16:44] *** Quits: death916_lap (~Death916@user/death916) (Excess Flood)
[16:16:59] *** Quits: jinsun (~quassel@user/jinsun) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[16:17:05] *** Joins: death916_lap (~Death916@user/death916)
[16:17:06] *** Quits: death916_lap (~Death916@user/death916) (Excess Flood)
[16:17:18] *** Joins: jinsun (~quassel@user/jinsun)
[16:17:27] *** Joins: death916_lap (~Death916@user/death916)
[16:17:27] *** Quits: death916_lap (~Death916@user/death916) (Excess Flood)
[16:17:48] *** Joins: death916_lap (~Death916@user/death916)
[16:17:49] *** Quits: death916_lap (~Death916@user/death916) (Excess Flood)
[16:18:09] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[16:19:21] <no_gravity> I am reading through the docs of a library and it says to 'echo lib-name >> requirements.txt; pip install -r requirement.txt'
[16:19:53] <no_gravity> So far so good. But then it says 'Make sure that you install its dependencies as well'
[16:20:00] <no_gravity> Wouldn't pip take care of that?
[16:20:09] *** Quits: roadt (~roadt@36.7.132.7) (Ping timeout: 276 seconds)
[16:20:13] <bjs> no_gravity: only if the library tells pip its dependencies, it sounds like the lib is made weirdly
[16:21:21] <bjs> (also it depends on what *kind* of dependency of course, e.g. to have a particular program installed to work)
[16:21:22] <no_gravity> bjs: The lib has a setup.py that seems to install the requirements.
[16:22:52] <bjs> no_gravity: maybe the dependencies it's talking about are some that cannot be included with the package/installed by pip for whatever reason
[16:23:47] <no_gravity> Hmm... maybe. My feeling is that they just wrote the docs very sloppy.
[16:24:09] *** Joins: Voyager2Spirit (~Voyager2S@188.51.170.202)
[16:24:11] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:24:12] <bjs> no_gravity: that's also possible
[16:25:36] *** Quits: georgios (~georgios@user/georgios) (Remote host closed the connection)
[16:26:34] *** Joins: jetchisel (jetchisel@user/jetchisel)
[16:27:13] <no_gravity> What does this do? class C(object): def __init__(self): super(C,self).__int__()
[16:27:26] <bjs> no_gravity: presumably you mean __init__ in the last line
[16:27:40] <bjs> but it creates a class called C whose __init__ calls the superclass' own __init__
[16:28:15] <no_gravity> Yes
[16:28:39] <no_gravity> I guessed so. But what is the superclass?
[16:29:08] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[16:29:13] <bjs> no_gravity: roughly the "parent" of C in the inheritance hierarchy for the object
[16:29:30] <no_gravity> Yes. But what is it? "object"?
[16:29:44] <bjs> no_gravity: it depends on the object ("self")
[16:29:59] <bjs> no_gravity: if you just make an instance of C, then yes it's object
[16:30:17] <no_gravity> I don't understand.
[16:30:42] <bjs> no_gravity: imagine you had a subclass which inherited from multiple base classes
[16:30:53] <no_gravity> Ok
[16:31:17] *** Joins: c10l (~c10l@89.34.167.207)
[16:31:54] <no_gravity> I never used classes in Python. Is it the typical way to define them like this?
[16:32:07] <no_gravity> I mean the whole dance here: class C(object): def __init__(self): super(C,self).__int__()
[16:32:20] <bjs> no_gravity: __init__ you mean,  but generally yes
[16:32:24] <no_gravity> Oh!
[16:32:26] *** Quits: Voyager2Spirit (~Voyager2S@188.51.170.202) (Quit: Leaving...)
[16:32:37] <bjs> I mean it's more common when the obvious parent class has extra behaviour you want to call
[16:32:46] <Ninpo> you don't need (object) anymore do you?
[16:33:00] <bjs> no_gravity: when it's just object (and you're not making classes with multiple inheritance) then probably the super right there would be skipped
[16:33:15] <bjs> no_gravity: and in modern Python 3 you'd just write: `class C: def __init__(self): super().__init__()`
[16:33:20] <no_gravity> bjs: Yeah, I wonder why they call __init__() of object.
[16:33:40] <Yhg1s> no_gravity: because if they don't, it's not called.
[16:33:44] *** Joins: georgios (~georgios@user/georgios)
[16:33:57] <bjs> no_gravity: because the superclass might not be object if you have subclasses that e.g. inherit multiple things.  If you don't call super().__init__() then the superclass' own __init__ won't be called
[16:33:57] <no_gravity> Yhg1s: What does __init__() of object do?
[16:34:17] <no_gravity> bjs: I see.
[16:34:21] <Yhg1s> no_gravity: of object, nothing in particular. But you can't know if the next __init_ method is actually from object.
[16:34:23] <bjs> now object's own __init__ doesn't do anything, but you can't tell what the superclass will be just from the class because it depends on `self` and the class hierarchy of *its* class
[16:34:46] <no_gravity> bjs: I see. Kinda.
[16:35:02] <no_gravity> As for the age: The last commit to this library was 4 years ago.
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:04] <no_gravity> First commit was 6 years ago, but at that point the lib might have been god knows how old already.
[16:36:23] <no_gravity> As the first commit is improvements, not new code.
[16:36:29] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:36:46] <acresearch> people, if i have a numpy array, can i move a column from one position to another?   how?
[16:37:04] *** Quits: haroon (~haroon@gw.wmd.de) (Ping timeout: 246 seconds)
[16:37:16] *** Joins: fassl (~fassl@2a02:8388:1987:9380:c4ee:81c5:625a:a215)
[16:37:22] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[16:37:41] <bjs> no_gravity: take a look at https://bpa.st/YHZA to get a better idea of super() is doing
[16:38:00] <bjs> each super calls the "next" one
[16:38:12] *** Quits: ogis_ (~Android@p311253-omed01.osaka.ocn.ne.jp) (Read error: Connection reset by peer)
[16:38:29] <no_gravity> bjs: Thanks.
[16:38:32] *** Joins: ogis (~Android@p2037202-ipngn201011tokaisakaetozai.aichi.ocn.ne.jp)
[16:38:48] <no_gravity> bjs: Woops .. Python really needs to embrace active code bins :)
[16:39:00] <bjs> no_gravity: active code bins?
[16:39:44] <no_gravity> bjs: Yes. Like this: https://www.online-python.com/aHTe8LnDKA
[16:40:00] <bjs> no_gravity: Oh you meant *me*, that *I* should use one of those instead of a plain pastebin
[16:41:25] <no_gravity> bjs: Maybe. In #php everyone links to 3v4l.org. In #javascript most people use jsfiddle.net. I think here in #python I often encounter 90s style text links.
[16:41:56] <bjs> no_gravity: Python is a 90s language so
[16:41:58] <bjs> it's appropirate.
[16:42:03] <bjs> appropriate*
[16:42:10] <no_gravity> 90s for the win!
[16:42:20] <no_gravity> Yet I think active code bins are more fun.
[16:42:48] <Ninpo> the popup when I went to close that tab is reason enough to not use it
[16:42:49] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[16:42:52] <bjs> I think there are many features pastebins can have to make them more useful and a "run" button is not one of them
[16:43:27] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::f245)
[16:43:32] <no_gravity> Ninpo: It does not give me a popup.
[16:45:28] <bjs> no_gravity: but it's mostly a decision of *this particular channel* to recommend plain text pastebins and not having any Python bots
[16:45:46] <no_gravity> Interesting. I love the js bot on #javascript.
[16:46:17] *** Quits: y1n (~y1n@84-115-65-145.wifi.dynamic.surfer.at) (Ping timeout: 245 seconds)
[16:46:22] <no_gravity> It is super fast and forces people to really make a minimal example of their question.
[16:46:38] <no_gravity> And lets you test different approaches live with the channel.
[16:47:21] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[16:47:43] <bjs> no_gravity: I mean sure, it's not like the people in this channel don't understand how bots work or how they get used
[16:47:50] <bjs> they've just chosen not to have them here
[16:49:06] <bjs> A big reason is probably the verbosity in Python whitespace, it doesn't really work cramming it into one line here so people would try one-linerize their answers a bit too hard if they tried to make it conform to a bot.
[16:49:46] <no_gravity> I see
[16:49:48] *** Quits: fassl (~fassl@2a02:8388:1987:9380:c4ee:81c5:625a:a215) (Quit: Leaving)
[16:50:18] <Yhg1s> Nah, you can make it work by using ';;'. infobob has a repaste mechanism that uses it. However, it's a lot of pointless noise in the channel. If you want to use a pastebin that evaluates Python, you're free to.
[16:50:36] *** Joins: joshcom (~joshcom@2600:8800:a706:2b00:51c9:dd9a:ebbf:de9b)
[16:50:51] <Yhg1s> I prefer not to use them because you can't be sure that other people see the same thing you do. It's always better to reduce complexity and variability when debugging things, especially if you're asking others to help you.
[16:51:55] *** Joins: fassl (~fassl@2a02:8388:1987:9380:c4ee:81c5:625a:a215)
[16:51:58] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:53:10] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[16:54:10] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 240 seconds)
[16:55:15] *** Joins: lordrishav (~LordRisha@user/lordrishav)
[16:55:27] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[16:55:42] *** Joins: shad (~shad@user/shad)
[16:56:04] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[16:56:17] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[16:58:11] *** pizzaiolo is now known as pizza
[16:58:14] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[16:58:39] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 244 seconds)
[16:59:18] *** Joins: y1n (~y1n@84-115-65-145.wifi.dynamic.surfer.at)
[17:01:32] *** Quits: Hax0r (~Hax0r@2001:16a2:c040:253a:7a8a:7af9:77fb:3f86) (Quit: Leaving)
[17:01:33] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[17:02:45] *** Quits: joshcom (~joshcom@2600:8800:a706:2b00:51c9:dd9a:ebbf:de9b) (Quit: Leaving)
[17:03:30] *** Joins: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa)
[17:04:03] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:05:04] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 268 seconds)
[17:05:11] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[17:06:53] *** Joins: stoiclunchbox (~stoiclunc@user/stoiclunchbox)
[17:07:41] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 258 seconds)
[17:13:32] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[17:15:14] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:15:56] *** Quits: henistein (~henistein@2001:8a0:c1b3:6b01:f913:f58d:444c:dd90) (Quit: Client closed)
[17:17:40] *** Joins: portalrat (~portalrat@user/portalrat)
[17:18:13] *** Joins: iomari891 (~iomari891@197.210.70.102)
[17:18:38] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[17:18:40] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[17:19:21] *** Joins: wyclif (~wyclif@user/wyclif)
[17:19:53] *** Quits: Harlin (~DonQixote@2603:300b:663:e800:1702:3c:82cb:1afc) (Quit: Leaving)
[17:20:32] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[17:20:54] *** Joins: daevski (~daevski@76-253-184-89.lightspeed.rlghnc.sbcglobal.net)
[17:21:00] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:23:55] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[17:24:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[17:24:14] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[17:24:37] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 245 seconds)
[17:24:50] *** Joins: wyclif (~wyclif@user/wyclif)
[17:25:45] *** Joins: uuair (~quassel@user/uuair)
[17:26:30] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[17:26:39] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[17:27:02] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:27:52] *** Joins: kulernil (~kulernil@gateway/tor-sasl/kuler)
[17:29:11] *** Quits: kulernil (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[17:29:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[17:29:38] *** Joins: kulernil (~kulernil@gateway/tor-sasl/kuler)
[17:29:47] *** Joins: pycurious (~Adium@user/pycurious)
[17:30:29] *** Quits: dulanic (~dulanic@47.187.144.163) (Quit: The Lounge - https://thelounge.chat)
[17:30:35] *** Quits: Foxyloxy_ (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net) (Quit: Textual IRC Client: www.textualapp.com)
[17:30:43] *** Joins: wyclif (~wyclif@user/wyclif)
[17:30:46] *** Joins: zeden (~zeden@user/zeden)
[17:30:54] *** Joins: haroon (~haroon@gw.wmd.de)
[17:30:56] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[17:31:56] *** Joins: dulanic (~dulanic@47.187.144.163)
[17:32:07] *** Quits: kuler (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[17:33:23] *** Quits: derelict (~derelict@user/derelict) (Quit: WeeChat 3.2)
[17:33:26] *** Quits: launchd (examknow@bitbot/launchd) (Read error: Connection reset by peer)
[17:34:15] *** Joins: p-i- (~Ohmu@2403:6200:8870:d305:1d49:a92d:d62f:c7f3)
[17:35:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[17:36:03] *** Joins: wyclif (~wyclif@user/wyclif)
[17:36:43] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[17:36:46] *** Joins: DSync (~ds@user/deepspace-link)
[17:37:52] *** Quits: raub (~Raub_Voge@cpe-107-15-44-154.nc.res.rr.com) (Ping timeout: 256 seconds)
[17:38:17] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[17:40:37] *** Joins: zeden (~zeden@user/zeden)
[17:40:57] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[17:41:02] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 258 seconds)
[17:41:13] *** Quits: frost (~frost@59.71.240.119) (Quit: Connection closed)
[17:41:24] *** Joins: wyclif (~wyclif@user/wyclif)
[17:43:04] *** Quits: haroon (~haroon@gw.wmd.de) (Quit: Client closed)
[17:43:43] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 258 seconds)
[17:45:57] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[17:46:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[17:46:17] *** Quits: y1n (~y1n@84-115-65-145.wifi.dynamic.surfer.at) (Ping timeout: 245 seconds)
[17:46:54] *** Joins: wyclif (~wyclif@user/wyclif)
[17:47:07] *** Joins: reset (~reset@user/reset)
[17:47:31] *** Joins: seoul_man (~meh@user/seoul-man/x-5066766)
[17:50:48] *** Quits: Abrax (~Abrax@user/abrax) (Quit: Leaving)
[17:50:52] *** Joins: bss (bss@rie.incorporeal.org)
[17:51:12] *** Joins: Abrax (~Abrax@user/abrax)
[17:51:17] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 245 seconds)
[17:51:40] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[17:52:25] *** Joins: wyclif (~wyclif@user/wyclif)
[17:54:55] *** Joins: Julian (~tos9@python/site-packages/Julian)
[17:55:35] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Quit: WeeChat 3.2)
[17:56:13] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi)
[17:56:14] <acresearch> people, i have concatinated two dataframes but now i have repetitive column indexes, how do i reset the column index values?
[17:57:09] *** Joins: Deneb (~johnch@86.111.189.80.dyn.plus.net)
[17:57:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[17:57:55] *** Joins: wyclif (~wyclif@user/wyclif)
[17:59:01] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[18:00:08] *** Joins: y1n (~y1n@84-115-65-145.wifi.dynamic.surfer.at)
[18:02:40] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[18:03:25] *** Joins: wyclif (~wyclif@user/wyclif)
[18:03:53] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[18:03:59] *** Quits: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[18:04:14] *** Joins: DaNeenjah (~jake@adsl-74-230-6-204.hsv.bellsouth.net)
[18:04:31] <jinsun> what do you mean by column indexes? dataframes have columns and index and both are separate things
[18:05:04] <DnzAtWrk> can a time.sleep be put in a list comprehension :D
[18:05:11] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[18:06:09] <octav1a> DnzAtWrk: yes but why lol
[18:06:14] <kosh> it would be better to make a function that takes an iterator and a sleep arguement and then grabs on item, sleeps and yields it
[18:06:18] *** Quits: DaNeenjah (~jake@adsl-74-230-6-204.hsv.bellsouth.net) (Client Quit)
[18:06:21] <kosh> much easier to maintain and work with later
[18:06:27] *** Joins: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[18:06:44] <DnzAtWrk> if all(api.is_online(index) for index in products.index):
[18:07:03] <kosh> def sleep_iter(iter, sleep): for item in iter: time.sleep(sleep)  yield item
[18:07:28] <kosh> [i for i in sleep_iter(some_iteratable, 5.0)]
[18:07:57] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[18:08:00] <DnzAtWrk> ah yes
[18:08:00] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2)
[18:08:48] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[18:08:55] *** Joins: wyclif (~wyclif@user/wyclif)
[18:09:13] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[18:09:22] *** Quits: acresearch (~acresearc@user/acresearch) (Quit: WeeChat 2.8)
[18:09:44] *** Joins: Yorick_ (znc@vps.freegamehosting.eu)
[18:10:31] *** Joins: magla (~gelignite@55d429d0.access.ecotel.net)
[18:12:16] *** Joins: acresearch (~acresearc@user/acresearch)
[18:13:08] <Yorick_> Hi All, does someone know how I do append both results of the one-liner for loop to the same list, instead of creating subgroups within it? https://bpa.st/3NWQ
[18:13:12] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[18:13:40] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 240 seconds)
[18:13:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[18:14:08] <bjs> Yorick_: `[x for var in ['test', 'test2'] for x in ['-var', var]]`
[18:14:23] *** Joins: cthulchu (~Cthulchu@213.174.21.101)
[18:14:28] *** Joins: wyclif (~wyclif@user/wyclif)
[18:14:28] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:14:43] *** Joins: mr-red (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[18:15:02] <hexnewbie> for val in ['test', 'test2']: args.extend(['-var', val])
[18:15:27] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:eca3:57fd:9c7d:1a5a)
[18:15:32] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Ping timeout: 258 seconds)
[18:15:52] *** Joins: BSaboia (~bsaboia@188-178-217-166-cable.dk.customer.tdc.net)
[18:15:56] <Yorick_> Thanks! Let me check.
[18:17:04] *** Joins: monkey_ (~user@190.104.116.134)
[18:17:39] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[18:17:50] *** Quits: lukedashjr (~luke-jr@user/luke-jr) (Ping timeout: 258 seconds)
[18:18:11] <Yorick_> bjs: to make it clear in my brain: the evaluation will be done from left to right, correct?
[18:18:14] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[18:18:24] <bjs> Yorick_: just like normal for loops yeah
[18:18:30] <Yorick_> okay thanks
[18:18:39] <bjs> Yorick_: `[a for b in c for d in e]` is like `for b in c: for d in e: append(a)`
[18:18:42] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[18:18:42] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi)
[18:19:01] <bjs> Yorick_: obviously you can also just use multiple lines and write the for loop append/extend yourself
[18:19:02] <Yorick_> Thanks
[18:19:03] *** Quits: yano (~yano@ircpuzzles/staff/yano) (Quit: WeeChat, the better IRC client, https://weechat.org/)
[18:19:30] <Yorick_> Yeah, I know. But i just wanted to know how to get it to work on a oneliner :)
[18:19:31] <Yorick_> thanks
[18:19:41] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[18:19:41] *** Quits: varaindemian (uid73404@id-73404.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[18:19:41] <jabberwock> readability++
[18:19:57] *** Joins: wyclif (~wyclif@user/wyclif)
[18:20:06] <hexnewbie> 1lccv > readability
[18:20:12] <Yorick_> True, but 2 for loops is still readable (for me at least :) )
[18:20:28] <jabberwock> 1lccv?
[18:20:40] <hexnewbie> jabberwock: I don't know, I wrote that, but I can't recall what it stood for now!
[18:20:45] <jabberwock> lmao
[18:21:42] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[18:21:56] <nedbat> Yorick_: itertools.chain.from_iterable([('-var', var) for var in ['test', 'test2']])
[18:21:56] *** Quits: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa) (Remote host closed the connection)
[18:22:10] *** Joins: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa)
[18:22:46] *** Quits: Obo (~roberto@78.77.166.185) (Quit: WeeChat 2.8)
[18:23:02] *** Joins: Pickchea (~private@user/pickchea)
[18:23:17] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[18:23:25] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[18:23:30] <hexnewbie> Sometimes one can use chain.from_iterable() for this, but I don't think it improves anything especially since it probably requires wrapping it in list()
[18:23:36] *** Quits: lukedashjr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[18:23:40] *** Quits: iomari891 (~iomari891@197.210.70.102) (Ping timeout: 240 seconds)
[18:24:00] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 268 seconds)
[18:24:28] <nedbat> hexnewbie: it depends what the result will be used for.
[18:24:40] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[18:24:46] <nedbat> hexnewbie: i will guess that this is part of build a command for subprocess, so .extend() will work on it.
[18:25:08] *** Joins: iomari891 (~iomari891@197.210.71.192)
[18:25:13] <Yorick_> yeah, packer command
[18:25:29] *** Joins: wyclif (~wyclif@user/wyclif)
[18:26:12] *** Quits: ogis (~Android@p2037202-ipngn201011tokaisakaetozai.aichi.ocn.ne.jp) (Quit: -a- Connection Timed Out)
[18:26:17] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 245 seconds)
[18:26:26] <hexnewbie> args.extend(chain.from_iterable(['-var', var] for var in ['x', 'y', 'z'])) # I don't like it very much, but maybe better than two loops? Maybe not?
[18:26:56] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[18:27:21] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-1055-580a-2b7e-a63c.res6.spectrum.com)
[18:27:40] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[18:28:24] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[18:30:02] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[18:30:12] *** Joins: ogis (~Android@p2037202-ipngn201011tokaisakaetozai.aichi.ocn.ne.jp)
[18:30:29] <jim> The-Compiler, hexchat-2.14.3
[18:33:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[18:33:40] *** Quits: Deneb (~johnch@86.111.189.80.dyn.plus.net) (Quit: Leaving)
[18:33:47] *** Quits: ubert (~Thunderbi@77.119.161.84.wireless.dyn.drei.com) (Ping timeout: 245 seconds)
[18:35:00] *** Joins: wyclif (~wyclif@user/wyclif)
[18:36:08] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[18:37:42] <hexnewbie> Sequence.join = lambda self, it: type(self)(chain.from_iterable(chain.from_iterable(zip(it, repeat(self))))) # Evil? ;p
[18:38:27] *** Joins: akk (~akk@174-28-98-206.albq.qwest.net)
[18:40:25] <The-Compiler> jim: hm, no clue then
[18:40:28] *** Quits: zaquest (~notzaques@5.128.210.178) (Quit: Leaving)
[18:42:05] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[18:42:46] *** Quits: voltron (~voltrin_@ip5f5993ed.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[18:42:49] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 248 seconds)
[18:42:50] *** Quits: Proxysna (~Proxysna@62.119.254.142) (Quit: Leaving)
[18:43:29] *** Joins: zaquest (~notzaques@5.128.210.178)
[18:44:12] *** Quits: mr-red (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 245 seconds)
[18:44:51] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[18:44:59] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[18:45:05] *** Quits: renrelkha (~renrelkha@user/renrelkha) (Quit: bye)
[18:46:10] *** Quits: y1n (~y1n@84-115-65-145.wifi.dynamic.surfer.at) (Ping timeout: 240 seconds)
[18:46:42] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 245 seconds)
[18:47:22] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[18:47:35] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[18:49:12] *** Quits: rakoon (~rakoon@2a02:2149:824f:5900:d56c:279c:675:d08c) (Ping timeout: 245 seconds)
[18:49:16] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 258 seconds)
[18:49:19] *** Joins: Roey (~Roey@user/Roey)
[18:49:41] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[18:49:56] *** Joins: renrelkha (~renrelkha@user/renrelkha)
[18:50:52] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 245 seconds)
[18:51:37] *** Joins: Julian (~tos9@python/site-packages/Julian)
[18:51:41] *** Quits: Julian (~tos9@python/site-packages/Julian) (Client Quit)
[18:52:24] *** Joins: trace1918 (~trace1918@94-137-125-182.customers.ownit.se)
[18:55:32] *** Quits: jaggz (~jaggz@user/jaggz) (*.net *.split)
[18:55:41] *** Joins: rsx (~dummy@ppp-188-174-149-206.dynamic.mnet-online.de)
[18:55:53] *** Joins: jaggz (~jaggz@user/jaggz)
[18:57:35] *** Joins: d00gy (~d00gy@user/d00gy)
[18:58:15] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[18:59:28] *** Joins: Proxysna (~Proxysna@62.119.254.142)
[18:59:48] *** Joins: y1n (~y1n@84-115-65-145.wifi.dynamic.surfer.at)
[19:07:14] <BtbN> Is there some nice pattern for "if somefunction(a): ... \n else [or if TypeError]: ..."
[19:07:18] *** Joins: daevski3 (~daevski@76-253-184-89.lightspeed.rlghnc.sbcglobal.net)
[19:07:27] <BtbN> basically, I want the else branch to run if the function returns False, or if it threw a TypeError
[19:07:43] <BtbN> Without duplicating the entire else branch into a catch block
[19:08:04] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:09:14] <Yhg1s> BtbN: put the call to somefunction in another function, do 'try: somefunction(a); except TypeError: return False'. (However, in general I wouldn't recommend handling TypeErrors like that, as they're easily caused by bugs instead.)
[19:09:23] <SnoopJ> BtbN, if had a wrapper that converted TypeError to False, you could do `if wrapper(a): whatever(); else: whatever_else()`
[19:09:45] <BtbN> hmm, yeah, I guess that's the cleanest solution
[19:09:54] <Yhg1s> eh, 'try: return somefunction(a)' rather.
[19:10:52] *** Quits: daevski (~daevski@76-253-184-89.lightspeed.rlghnc.sbcglobal.net) (Ping timeout: 245 seconds)
[19:10:52] *** daevski3 is now known as daevski
[19:12:20] *** Quits: FKAShinobi (~shinobi@2601:18c:d07f:f2e9:fd24:2e5d:b6a0:9496) (Quit: Leaving)
[19:13:13] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Ping timeout: 248 seconds)
[19:13:27] *** Joins: nisstyre (~wes@user/nisstyre)
[19:13:29] <SnoopJ> I would probably do something like `try: flag = something(a); except TypeError: flag = False;; if flag: whatever(); else: whatever_else()`
[19:13:52] <SnoopJ> and maybe the try/except gets rolled up in a named helper like maybe_something()
[19:14:27] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[19:14:28] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: shgvbvri)
[19:15:16] *** Quits: szymon (~ugh@staticline-31-183-187-232.toya.net.pl) (Quit: szymon)
[19:18:11] *** Quits: devcpu (~rusty@108.162.160.184) (Quit: leaving)
[19:18:22] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:a566:9143:e279:ef46)
[19:18:55] *** Joins: devcpu (~rusty@ec2-35-183-244-153.ca-central-1.compute.amazonaws.com)
[19:19:14] *** Joins: raub (~Raub_Voge@cpe-107-15-44-154.nc.res.rr.com)
[19:20:05] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[19:22:07] *** Joins: lastshell (~lastshell@user/lastshell)
[19:23:12] *** Parts: yogoyo (~paddy@user/yogoyo) (WeeChat 3.2)
[19:25:00] *** Joins: Zeturic (~Orimendix@50-25-46-156.krmtcmta02.res.dyn.suddenlink.net)
[19:25:02] *** Quits: devcpu (~rusty@ec2-35-183-244-153.ca-central-1.compute.amazonaws.com) (Ping timeout: 245 seconds)
[19:26:00] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[19:26:10] *** Quits: y1n (~y1n@84-115-65-145.wifi.dynamic.surfer.at) (Ping timeout: 240 seconds)
[19:26:12] *** Quits: ogis (~Android@p2037202-ipngn201011tokaisakaetozai.aichi.ocn.ne.jp) (Quit: -a- Connection Timed Out)
[19:27:02] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[19:27:10] *** Quits: c10l (~c10l@89.34.167.207) (Ping timeout: 240 seconds)
[19:27:18] *** Joins: devcpu (~rusty@108.162.160.184)
[19:28:29] <cloudbender> Thank you for suggesting chunked reads/updates, much more performant on the disk channel
[19:28:42] <cloudbender> https://bpa.st/H3KQ
[19:29:26] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[19:29:51] <cloudbender> if I make a pseudo digest comprised of sha+md5, does that improve the odds against collisions ?
[19:29:57] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Quit: leaving)
[19:30:12] *** Joins: ogis (~Android@p2037202-ipngn201011tokaisakaetozai.aichi.ocn.ne.jp)
[19:30:40] *** Quits: torandu (~sean@94.10.125.197) (Quit: leaving)
[19:30:48] *** Joins: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net)
[19:31:09] <Yhg1s> cloudbender: random collisions? Yes. Those odds hardly need improving, though. It doesn't make it more _secure_ though.
[19:31:53] <cloudbender> It's not for security, it's for identification
[19:32:07] <cloudbender> I leave security to the big brains
[19:32:27] <cloudbender> I'm rather a "B" student in certain areas
[19:33:00] *** Joins: LuxuryMode (uid91005@id-91005.charlton.irccloud.com)
[19:33:54] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[19:34:20] <cloudbender> Please disregard my not using "with", it does sneaky things in other languages
[19:38:43] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 258 seconds)
[19:39:38] <Yhg1s> cloudbender: the odds of a random sha256 collision are so small, adding md5 along side it doesn't help much. And you really should use with, as your code will leave the file open for much longer than it needs to be in case of exceptions.
[19:40:04] <Yhg1s> (also, don't use bare 'except:'.)
[19:40:17] *** Quits: mwichmann (~mats@209-188-119-117.taosnet.com) (Quit: Leaving)
[19:40:29] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[19:41:11] <jinsun> cloudbender: "it does sneaky things in other languages" ? but you won't run your python code in other lanuguages, would you?
[19:41:22] *** Joins: thiras (~thiras@user/thiras)
[19:41:22] *** Joins: theseb (~cs@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[19:41:53] <cloudbender> No. And trust me, I get it.
[19:41:56] *** Joins: df_data (sid466269@charlton.irccloud.com)
[19:42:29] <cloudbender> My concern is a means to attempt a file.close() on a possibly failed open
[19:42:41] <Yhg1s> cloudbender: the point of 'with' is that you don't need that close.
[19:42:42] *** Quits: Falc (~Falc@193.191.206.243) (Quit: Leaving)
[19:42:49] <df_data> 1Anyone got a script in pyhon that can decrypt reversable encryption of active directory (window server)?
[19:43:01] <bjs> cloudbender: `with` does the right thing. if the open failed then you get an Exception in Python
[19:43:01] <cloudbender> hmmmmm
[19:43:34] <cloudbender> ok
[19:43:54] <cloudbender> I was told f.open() would not auto.close()
[19:44:02] <bjs> cloudbender: it won't, that's what the `with` does
[19:44:08] <cloudbender> ok.
[19:45:03] <cloudbender> <<<< is paranoid about file handling
[19:45:10] <cloudbender> Thanks all
[19:45:14] *** Joins: kosh (~kosh@user/kosh)
[19:45:30] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[19:45:32] <cloudbender> I'll try it, and I'll dig on bare except:
[19:45:33] *** Joins: manin (~x@185.242.190.95)
[19:45:41] <cloudbender> o/
[19:45:51] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Quit: Connection closed)
[19:45:58] <bjs> cloudbender: bare except means just saying `except:` rather than naming the exception you want like `except FileNotFoundError: ...`
[19:46:00] <bjs> ah, well byte
[19:46:18] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: Lost terminal)
[19:46:42] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[19:46:47] *** Joins: launchd (~examknow@bitbot/launchd)
[19:47:23] <jim> hi... running an irc client script for hexchat, in python3: error message: https://termbin.com/l032
[19:47:31] <jim> the code: https://github.com/jwlynch/irc-subst.git
[19:47:55] <jim> and I'm running hexchat-2.14.3
[19:48:02] <Yhg1s> jim: looks like hexchat doesn't define __file__ when it loads files.
[19:48:21] <Yhg1s> jim: you'll have to find out what way hexchat provides for finding the directory of the file, if it has one.
[19:49:03] *** Joins: RougeR (~rougex250@user/rouger)
[19:49:41] <jim> or maybe lack of __file__, hexchat devs would consider a bug? I'll ask them
[19:49:49] <jim> thanks
[19:52:08] *** Quits: dulanic (~dulanic@47.187.144.163) (Quit: The Lounge - https://thelounge.chat)
[19:53:27] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:53:28] *** Joins: dulanic (~dulanic@47.187.144.163)
[19:54:38] *** Joins: mattil (~mattil@87-92-27-39.bb.dnainternet.fi)
[19:56:06] *** Joins: derelict (~derelict@user/derelict)
[19:57:32] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Ping timeout: 272 seconds)
[19:57:42] *** Quits: paulo (paulo@paulo.jujube.ircnow.org) (Remote host closed the connection)
[19:57:47] *** Joins: dulanic0 (~dulanic@47.187.144.163)
[19:57:51] *** Joins: FluffyMask (~masque@user/fluffymask)
[19:58:11] *** Joins: nathanjell (~Nathan@64.141.52.164)
[19:59:17] *** Quits: dulanic (~dulanic@47.187.144.163) (Ping timeout: 245 seconds)
[19:59:17] *** dulanic0 is now known as dulanic
[20:00:05] *** Joins: torandu (~sean@94.10.125.197)
[20:01:17] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[20:01:55] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[20:03:26] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:a566:9143:e279:ef46) (Quit: Leaving)
[20:03:43] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:a566:9143:e279:ef46)
[20:04:57] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 248 seconds)
[20:05:25] *** Quits: devcpu (~rusty@108.162.160.184) (Quit: leaving)
[20:05:42] *** Quits: dulanic (~dulanic@47.187.144.163) (Quit: The Lounge - https://thelounge.chat)
[20:05:50] *** Joins: devcpu (~rusty@108.162.160.184)
[20:06:04] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[20:07:00] *** Joins: dulanic (~dulanic@47.187.144.163)
[20:07:07] *** Quits: RougeR (~rougex250@user/rouger) (Quit: Leaving)
[20:07:16] *** Quits: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa) (Remote host closed the connection)
[20:07:56] *** Joins: Harlin (~DonQixote@2603:300b:663:e800:36b1:82a4:cb60:df91)
[20:08:07] *** Quits: monkey_ (~user@190.104.116.134) (Remote host closed the connection)
[20:08:42] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Changing host)
[20:08:42] *** Joins: betelgeuse (~john2gb@user/john2gb)
[20:08:44] *** notevil_ is now known as notevil
[20:09:10] *** Joins: dcaro_ (~dcaro@user/dcaro)
[20:11:53] *** Quits: dcaro (~dcaro@user/dcaro) (Ping timeout: 248 seconds)
[20:11:53] *** dcaro_ is now known as dcaro
[20:12:14] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[20:15:08] *** Quits: dulanic (~dulanic@47.187.144.163) (Quit: The Lounge - https://thelounge.chat)
[20:15:34] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[20:15:48] *** Joins: aakashi2001 (~aakashi20@103.61.255.28)
[20:15:54] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[20:16:23] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[20:16:26] *** Joins: dulanic (~dulanic@47.187.144.163)
[20:16:28] *** Joins: Vonter (~Vonter@user/vonter)
[20:16:55] *** Joins: cotsuka (~cameronot@2001:470:69fc:105::8de)
[20:16:56] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[20:17:44] <Celelibi> What would be the right way to remove some elements from a dict while iterating on it?
[20:17:45] *** Quits: DSync (~ds@user/deepspace-link) ()
[20:17:57] *** Joins: hexology (~hexology@user/hexology)
[20:18:04] <Celelibi> I could iterate on list(d.items()) instead of d.items().
[20:18:13] *** Quits: ExeciN (~ExeciN@user/nicexe) (Quit: Client closed)
[20:18:20] <Celelibi> I could build a list of items to be removed, and then remove them in a second pass.
[20:18:51] *** Quits: cotsuka (~cameronot@2001:470:69fc:105::8de) (Quit: Reconnecting)
[20:18:52] <hexology> sorry if i missed the above conversation, my irc bouncer is acting up. can you not just filter `d.items()`?
[20:19:10] *** Joins: cotsuka (~cotsuka@2001:470:69fc:105::8de)
[20:19:19] <hexology> as in, `kv_pairs = filter(foo, d.items())`
[20:19:48] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[20:20:02] <Celelibi> You mean, keep the entries instead of removing them?
[20:20:23] <Celelibi> Sure I could. But this will be a long running program. So better not leave old data there.
[20:20:28] *** Joins: zebrag (~chris@user/zebrag)
[20:20:50] <mefistofeles> .wg 33
[20:20:52] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 245 seconds)
[20:22:41] *** Joins: jan1 (~jan@user/jan1)
[20:25:10] <nedbat> Celelibi: why would the old data remain? if you make a new dict, then the old dict will be reclaimed
[20:25:12] <jan1> when I call the type function with the instance of a Class, it returns <class '__main__'.Class> what does the __main__ mean here? I understand its usage with if __name__ == '__main__'
[20:25:26] <nedbat> jan1: __main__ is the module name of your main program.
[20:25:40] <nedbat> jan1: which is why the "if __name__" thing works
[20:25:55] *** Quits: cotsuka (~cotsuka@2001:470:69fc:105::8de) (Changing host)
[20:25:55] *** Joins: cotsuka (~cotsuka@user/cotsuka)
[20:26:22] <Celelibi> nedbat, Ah, I didn't understand hexology proposal this way. I thought he was proposing to filter the dict when using it.
[20:26:57] *** Parts: cotsuka (~cotsuka@user/cotsuka) ()
[20:27:38] <hexology> data = generate_huge_data() ; data = {k: v for k: v in data.items() if not is_bad_entry(k, v)}
[20:27:40] <hexology> like that
[20:28:07] <nedbat> Celelibi: in the loop, make a new dict, and after the loop, make the new dict *the* dict.
[20:28:25] *** Joins: cotsuka (~cotsuka@user/cotsuka)
[20:28:40] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[20:28:44] *** Quits: lordrishav (~LordRisha@user/lordrishav) (Quit: WeeChat 2.8)
[20:28:52] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[20:28:57] <hexology> is there some kind of complicated multi-element logic or state that needs to be updated between checks? again sorry if i am missing some context
[20:28:58] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[20:29:18] *** Quits: dulanic (~dulanic@47.187.144.163) (Quit: The Lounge - https://thelounge.chat)
[20:29:28] *** Joins: DSync (~ds@user/deepspace-link)
[20:30:02] <Celelibi> Well, could do that, indeed. Not very "natural" for my case.
[20:30:34] <Celelibi> Context: I have an IRC client script that record some information based on some messages in a global dict.
[20:30:37] *** Joins: dulanic (~dulanic@47.187.144.163)
[20:30:48] <Celelibi> Every now and then, I want to clean up old entries.
[20:30:56] <jan1> Thanks nedbat
[20:31:32] *** Joins: pschorf (~user@c-73-77-28-188.hsd1.tx.comcast.net)
[20:31:50] <Celelibi> Re-generating the whole global dict doesn't seem to be very natural.
[20:32:07] *** Quits: dulanic (~dulanic@47.187.144.163) (Client Quit)
[20:32:16] *** mcope is now known as mcope_
[20:32:44] <bjs> Celelibi: removing while iterating over is a danger but you could remove while iterating over e.g. a list of pre-determined keys to remove
[20:33:18] *** mcope_ is now known as mcope__
[20:33:22] *** Joins: monkey_ (~user@190.104.116.134)
[20:33:25] *** mcope__ is now known as mcope
[20:34:44] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[20:35:20] *** Joins: dulanic (~dulanic@47.187.144.163)
[20:36:03] <cloudcell> hello, why do i get this error? https://www.irccloud.com/pastebin/ITgPhlU6/
[20:36:20] <bjs> cloudcell: what is f?
[20:36:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[20:36:42] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[20:37:01] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[20:37:20] *** Joins: wyclif (~wyclif@user/wyclif)
[20:37:31] <cloudcell> bjs: ^^ https://www.irccloud.com/pastebin/xh8Kff29/
[20:38:01] <bjs> cloudcell: does that message mean you've solved your question or is there also an error in this code?
[20:38:29] <cloudcell> bjs, this code I just posted gives me the error in my original message
[20:39:05] <bjs> cloudcell: I'm confused ,you posted two pieces of code.
[20:39:45] <cloudcell> the first is the output from the terminal
[20:39:52] <bjs> cloudcell: the first contains code
[20:39:55] *** Quits: lastshell (~lastshell@user/lastshell) (Quit: leaving)
[20:39:55] <cloudcell> the second one is the original code
[20:40:12] <cloudcell> I dont know why they look different tbh
[20:40:20] <bjs> cloudcell: I mean the first paste clearly imports h5py and then makes `data2` and then does some other stuff
[20:40:34] <bjs> cloudcell: okay... well where is the code from the first paste coming from then?
[20:41:01] *** dcaro is now known as dcaro_away
[20:41:46] <cloudcell> bjs: to prefent confusion, let's talk about the second post only. this code produces an error for some reason when I run it in pycharm line by line
[20:42:01] <bjs> cloudcell: what error?
[20:42:04] <cloudcell> the code is a mix of the tutorial and my own data
[20:42:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[20:42:15] <cloudcell> this error:
[20:42:17] *** Quits: shad (~shad@user/shad) (Ping timeout: 248 seconds)
[20:42:19] <cloudcell> https://www.irccloud.com/pastebin/Up2sr1jO/
[20:42:20] <bjs> cloudcell: I can't see what you see, or what you mean by "line by line" in PyCharm
[20:42:47] <cloudcell> bjs, if you press Alt+Shift+E you submit your code line by line to the interpreter
[20:42:49] *** Joins: wyclif (~wyclif@user/wyclif)
[20:43:00] <bjs> cloudcell: if you have a multi-line program then you won't be able to run it a line at a time
[20:43:15] <cloudcell> bjs, oh i see
[20:43:22] <cloudcell> thanks!
[20:43:33] <bjs> cloudcell: usually you put things in files then run the whole file
[20:43:52] *** Joins: Adoi (~Adoi@user/adoi)
[20:44:02] <cloudcell> this is the first time I tried the "line by line" way of running the code in python
[20:44:20] <cloudcell> I've been using R for many years this way, it was ok
[20:45:02] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[20:45:15] *** Quits: theseb (~cs@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[20:45:49] *** Quits: dulanic (~dulanic@47.187.144.163) (Quit: The Lounge - https://thelounge.chat)
[20:46:08] *** Quits: dld (~davidlowr@2601:197:600:1210:2489:889a:8f43:c8c4) (Quit: WeeChat 3.0)
[20:46:23] *** Joins: davidlowryduda (~davidlowr@2601:197:600:1210:8491:b60f:e59c:40e2)
[20:46:47] *** davidlowryduda is now known as dld
[20:46:50] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[20:47:08] *** Quits: computeiro (~Wender@189.15.113.231) (Quit: Leaving)
[20:47:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[20:48:16] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 256 seconds)
[20:48:19] *** Joins: wyclif (~wyclif@user/wyclif)
[20:48:39] *** Joins: dulanic (~dulanic@47.187.144.163)
[20:49:10] *** Quits: jan1 (~jan@user/jan1) (Ping timeout: 240 seconds)
[20:49:26] *** Joins: ckdcreation (~ckdCreati@147.55.133.129)
[20:49:31] *** Quits: Skyfire (~pyon@user/pyon) (Quit: WeeChat 3.2)
[20:50:06] *** Joins: Barones (~Barones@2804:48dc:8500:0:6c0f:c17d:b9b1:b54f)
[20:50:32] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[20:52:25] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 248 seconds)
[20:52:53] *** Joins: Skyfire (~pyon@user/pyon)
[20:53:09] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:53:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[20:53:33] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[20:53:51] *** Joins: wyclif (~wyclif@user/wyclif)
[20:54:44] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[20:55:15] *** Joins: jetchisel (jetchisel@user/jetchisel)
[20:55:36] *** Joins: zeden (~zeden@user/zeden)
[20:56:30] <jinsun> cloudcell: you can treat the entire with block like a single line by selecting it and then pressing that shortcut probably
[20:56:47] *** Joins: y1n (~y1n@84-115-65-86.wifi.dynamic.surfer.at)
[20:57:46] *** Joins: AlanMD (~AlanMD@5-14-42-214.residential.rdsnet.ro)
[20:58:03] *** Quits: nathanjell (~Nathan@64.141.52.164) (Quit: Leaving)
[20:58:22] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[20:58:24] <cloudcell> jinsun: you're right, it worked!
[20:58:29] *** Quits: mcope (~matt@user/mcope) (Quit: Konversation terminated!)
[20:59:21] *** Joins: wyclif (~wyclif@user/wyclif)
[21:00:29] *** Quits: jetchisel (jetchisel@user/jetchisel) (Remote host closed the connection)
[21:02:09] *** Joins: jetchisel (jetchisel@user/jetchisel)
[21:04:10] *** Quits: ST47 (~ST47@wikimedia/st47) (Ping timeout: 240 seconds)
[21:04:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[21:04:19] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: Textual IRC Client: www.textualapp.com)
[21:04:51] *** Joins: wyclif (~wyclif@user/wyclif)
[21:06:00] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:a566:9143:e279:ef46) (Quit: Leaving)
[21:06:36] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:07:33] *** Quits: jetchisel (jetchisel@user/jetchisel) (Read error: Connection reset by peer)
[21:08:58] *** Joins: jetchisel (jetchisel@user/jetchisel)
[21:09:34] *** Quits: rsx (~dummy@ppp-188-174-149-206.dynamic.mnet-online.de) (Quit: rsx)
[21:09:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[21:09:55] *** Joins: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net)
[21:10:14] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[21:10:25] *** Joins: wyclif (~wyclif@user/wyclif)
[21:10:53] <hexology> now that we have & and | for dicts, would - also make sense? it'd be really nice if i could write `{'a': 1, 'b': 2, 'c': 3} - {'a', 'c'}`
[21:11:47] *** Joins: qlixed (~qlixed@181.44.129.13)
[21:12:22] *** Quits: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net) (Client Quit)
[21:12:55] *** Joins: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net)
[21:13:44] <SnoopJ> hexology, what would `{'a': 'a'} - {'a'}` do?
[21:13:47] *** Joins: Betal (~Betal@user/betal)
[21:14:45] *** Joins: computeiro (~Wender@189.37.69.83)
[21:14:52] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[21:15:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[21:15:54] *** Joins: wyclif (~wyclif@user/wyclif)
[21:15:58] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[21:16:39] <hexology> SnoopJ: return `dict()`
[21:17:16] <SnoopJ> hexology, my point is that it isn't clear whether the set on the right-hand side is referring to the keys or items
[21:17:22] <hexology> `dict.__sub__(self, other)` would be `{k:v for k,v in self.items() if k not in other}`
[21:17:34] <hexology> mirroring the semantics of & and | as well as the set-like nature of a dict
[21:17:40] *** Quits: aakashi2001 (~aakashi20@103.61.255.28) (Ping timeout: 240 seconds)
[21:17:47] <hexology> *set-like with respect to keys
[21:20:41] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[21:21:25] *** Joins: wyclif (~wyclif@user/wyclif)
[21:21:34] <hexology> basically, i think we should have all of the set operations work with `dict OP dict` and `dict OP set`: > >= < <= & | - ^ &= |= -= ^=
[21:21:36] *** Joins: lastshell (~lastshell@user/lastshell)
[21:21:48] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[21:21:52] <hexology> all would operate on keys, not values
[21:22:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[21:22:27] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[21:22:29] *** Joins: ST47 (~ST47@wikimedia/st47)
[21:23:00] <SnoopJ> the non-assignment ones I think you have available from .keys() (or .values() if you want)
[21:23:31] <SnoopJ> the view objects behave pretty like sets in that sense
[21:23:39] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:a566:9143:e279:ef46)
[21:23:40] <SnoopJ> pretty much like*
[21:24:13] <SnoopJ> not sure I like the idea of dicts and sets mixing as directly as you're proposing, but don't let that discourage you from writing up a proposal :)
[21:24:30] <hexology> yeah that's useful. but then i still have to do `{k:v for k,v in d.items() if k in d.keys() - s}`
[21:24:59] *** Quits: AlanMD (~AlanMD@5-14-42-214.residential.rdsnet.ro) (Quit: ZZZzzz…)
[21:24:59] <hexology> yeah i have a 2 hour meeting-that-should-be-an-email coming up, good time to draft something for the discussion board
[21:26:16] *** Joins: derpadmin (~derpadmin@cloudbase2.200013.net)
[21:26:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[21:26:44] *** Joins: rubion (~rubion@cpc124316-ayle4-2-0-cust156.15-2.cable.virginm.net)
[21:26:55] *** Joins: wyclif (~wyclif@user/wyclif)
[21:27:40] <SnoopJ> hexology, "I don't have access to [syntactic sugar]" to me doesn't outweigh the high confusability of mixing types without some kind of hint (like .keys() provides) about what's going on. I'm not sure what `{"foo": 42} | {"bar"}` should give me as a dict, for instance, and even if I know the answer, it's not really hinted at in the syntax (where it would be part of a comprehension/etc. in the
[21:27:42] <SnoopJ> current syntax)
[21:28:53] <SnoopJ> I can see how it would be useful in some specific cases, but that makes me wonder if those cases would be better served by a domain-specific mapping type (possibly supplied by the user or a library)
[21:30:01] *** Joins: c10l (~c10l@89.34.167.207)
[21:30:11] *** Quits: wolfgang (~wolfgang@101.174.6.197) (Remote host closed the connection)
[21:30:41] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[21:30:45] <hexology> i recall similar complaints about & and | :)
[21:31:15] *** Joins: djhankb (~djhankb@208.113.164.68)
[21:31:16] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:31:23] *** Joins: georgios (~georgios@user/georgios)
[21:31:28] <SnoopJ> very possible that I am echoing some!
[21:31:40] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[21:31:58] <hexology> python is full of behavior that doesn't make sense unless you read the docs, it doesn't bother me personally and it seems like a very natural/ergonomic operation on dicts, to "subtract" a collection of keys from it
[21:32:08] <hexology> but good to know that some people might find it confusing
[21:32:25] *** Joins: wyclif (~wyclif@user/wyclif)
[21:32:37] <hexology> for example, mappings' `__iter__` and `__contains__` semantics i think are surprising to python newbies too
[21:32:49] *** Joins: xa0s (~xa0s@mab.sdf.org)
[21:32:58] <SnoopJ> I can see the case for removal, but I do still wonder what `{"foo": 42} | {"bar"}` (or the same for +) gives me
[21:33:34] <hexology> those would be meaningless, good point. i shouldn't have included those :) i was just going thru the list in the docs kind of mindlessly
[21:34:04] <hexology> i'll draft up some docstrings and type signatures to solidify the ideas before pitching it in any serious way
[21:34:28] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[21:34:50] *** Joins: wolfgang (~wolfgang@101.174.6.197)
[21:36:23] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[21:37:07] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[21:37:58] *** Joins: wyclif (~wyclif@user/wyclif)
[21:38:04] *** Quits: Omega037 (~Omega037@047-024-168-024.res.spectrum.com) (Killed (NickServ (GHOST command used by Omega037-B)))
[21:38:50] *** Joins: rakoon (~rakoon@2a02:2149:824f:5900:8ec4:be17:17a0:d7ab)
[21:40:25] *** Joins: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com)
[21:40:32] *** Joins: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com)
[21:42:13] *** Joins: sid-maddy (~sid-maddy@103.76.57.36)
[21:42:33] *** Quits: dhch (~dhch@185.213.154.168) (Ping timeout: 276 seconds)
[21:43:05] *** Quits: y1n (~y1n@84-115-65-86.wifi.dynamic.surfer.at) (Ping timeout: 248 seconds)
[21:43:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[21:43:27] *** Joins: wyclif (~wyclif@user/wyclif)
[21:43:58] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[21:44:46] <hexology> is there a "right way" to do this? i want to set the 2nd overload to "x: anything but int". non-working example in mypy: https://mypy-play.net/?mypy=latest&python=3.10&gist=ef17998a1e4ddf9be5536dedc59072a5
[21:45:24] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Ping timeout: 244 seconds)
[21:45:56] *** Joins: wender (~Wender@189.15.113.231)
[21:47:35] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[21:48:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[21:48:25] *** Quits: computeiro (~Wender@189.37.69.83) (Ping timeout: 248 seconds)
[21:48:25] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[21:48:57] *** Joins: wyclif (~wyclif@user/wyclif)
[21:49:51] *** niko is now known as o
[21:50:27] *** Joins: codificat (~pep@187.red-83-46-128.dynamicip.rima-tde.net)
[21:50:33] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Ping timeout: 248 seconds)
[21:51:49] *** Joins: georgios (~georgios@user/georgios)
[21:52:09] <hexology> use case for the above: adding more-precise type annotations when subclassing, e.g. when overriding a method like `Collection.__contains__(self, other: object) -> bool`
[21:52:29] *** Joins: dhch (~dhch@185.213.154.168)
[21:53:04] <jinsun> I would simply keep the int -> bool case
[21:53:26] <hexology> jinsun: in that case, mypy (rightly) complains about violating the liskov substitution principle
[21:53:34] <hexology> maybe not-rightly?
[21:53:40] <rendar> if i have `except BaseException as e: ...`  how can i get the second exception? 'e' as been generated as `raise E1() from other_ex` <- how can i get and print that other_ex ?
[21:53:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[21:53:57] <KirkMcDonald> hexology: I suppose my expectation is that if one of the types is a subset of another, then either the more-specific type would "win," or it would depend on the lexical order.
[21:54:29] *** Joins: wyclif (~wyclif@user/wyclif)
[21:54:52] <KirkMcDonald> rendar: e.__cause__
[21:55:12] <jinsun> hexology: ah ok you are subclassing, then it is a bit of a pain
[21:55:15] <hexology> KirkMcDonald: that makes sense. i was hoping for the lexical ordering, i think "more-specific" might be hard to pin down in python
[21:55:16] <rendar> KirkMcDonald: thanks
[21:56:31] *** Joins: y1n (~y1n@84-115-64-36.wifi.dynamic.surfer.at)
[21:56:59] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:8ce1:69c1:b612:d4f0) (Quit: Textual IRC Client: www.textualapp.com)
[21:57:18] *** Joins: Macuser (~Macuser@2600:1003:b460:a5bd:dd87:b998:89a8:9050)
[21:58:20] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:59:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[21:59:42] *** Quits: Celelibi (celelibi@user/celelibi) (Ping timeout: 245 seconds)
[21:59:59] *** Joins: wyclif (~wyclif@user/wyclif)
[22:00:40] *** Joins: ikus060 (~ikus060@96.127.228.230)
[22:01:17] *** Quits: hyper_dave (~hyper_dav@197.156.107.34) (Ping timeout: 245 seconds)
[22:01:53] *** Joins: gloomy_desktop (~ldorigo@81.161.149.37)
[22:02:47] *** Joins: gildasio (~gildasio@gateway/tor-sasl/gildasio)
[22:03:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[22:04:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[22:05:24] *** Joins: Celelibi (celelibi@user/celelibi)
[22:05:30] *** Joins: wyclif (~wyclif@user/wyclif)
[22:05:37] *** Quits: rendar (~rendar@user/rendar) ()
[22:06:12] *** Quits: Socra (~Socra@206.217.216.27) (Quit: Leaving)
[22:07:20] *** Joins: qlixed (~qlixed@181.44.129.13)
[22:08:20] *** Joins: hyper_dave (~hyper_dav@197.156.107.244)
[22:09:07] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[22:11:00] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[22:12:47] *** Quits: ToAruShiroiNeko (~eva@user/toarushiroineko) (Ping timeout: 268 seconds)
[22:13:57] *** Joins: Adoi (~Adoi@user/adoi)
[22:14:23] *** Joins: mwichmann (~mats@209-188-119-117.taosnet.com)
[22:15:15] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[22:15:28] *** Quits: ogis (~Android@p2037202-ipngn201011tokaisakaetozai.aichi.ocn.ne.jp) (Quit: -a- IRC for Android 2.1.59)
[22:16:30] *** Joins: wyclif (~wyclif@user/wyclif)
[22:17:12] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Quit: Leaving)
[22:17:58] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[22:19:42] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[22:20:00] *** Quits: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com) (Remote host closed the connection)
[22:20:47] *** Joins: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com)
[22:21:10] *** Joins: skapata (~Skapata@user/skapata)
[22:21:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[22:22:01] *** Joins: wyclif (~wyclif@user/wyclif)
[22:22:33] *** Quits: polyrob (~rob@user/polyrob) (Ping timeout: 248 seconds)
[22:22:57] *** Joins: polyrob (~rob@user/polyrob)
[22:23:33] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Ping timeout: 258 seconds)
[22:26:49] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[22:27:32] *** Joins: wyclif (~wyclif@user/wyclif)
[22:28:39] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[22:28:56] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[22:30:27] <AhmedAmerican> i want to match what between `[]` https://regex101.com/r/VtiOTV/1
[22:30:40] <AhmedAmerican> on other words, i want to match that list
[22:30:44] *** Joins: Akuli (~Akuli@82-203-163-212.bb.dnainternet.fi)
[22:32:03] <gitesh> Built-in means what? bjs
[22:32:09] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[22:32:43] <bjs> gitesh: The Python interpreter has a number of functions and types built into it that are always available.
[22:33:02] *** Joins: wyclif (~wyclif@user/wyclif)
[22:33:09] *** Joins: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838)
[22:33:20] *** Joins: jug (~jug@user/jug)
[22:33:24] <dontyouloveshort> hi
[22:33:39] <gitesh> For example if I import copy module
[22:34:11] <gitesh> Shall I say copy.deepcooy is built in function
[22:34:23] <bjs> gitesh: no, it's not built into the interpreter
[22:34:30] <gitesh> *deepcopy
[22:34:38] <bjs> there's a copy.py somewhere on your computer and you're importing it.
[22:35:02] <bjs> gitesh: but does it really matter whether it's built into the interpreter or not? It's just a function
[22:35:09] <bjs> saying "it's a function" happily covers all the cases
[22:36:39] *** Quits: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com) (Remote host closed the connection)
[22:36:44] *** Joins: dba (uid502594@id-502594.stonehaven.irccloud.com)
[22:37:09] *** Joins: ttkpy (501@46-97-229-216.sr2.pon.net)
[22:37:57] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[22:38:33] *** Joins: wyclif (~wyclif@user/wyclif)
[22:38:59] *** Joins: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net)
[22:40:20] <dba> I know that chromium is officially not supporting loading any chrome extension with headless mode, does anybody had a workaround it or knows if Firefox support loading addons with headless mode?
[22:41:46] <SnoopJ> dba, if this question is tied to a particular headless browser library you're using from Python, you should mention it
[22:42:40] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[22:42:40] <dba> SnoopJ, yes it is selenium library
[22:43:06] *** Quits: y1n (~y1n@84-115-64-36.wifi.dynamic.surfer.at) (Ping timeout: 258 seconds)
[22:43:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[22:44:03] *** Joins: wyclif (~wyclif@user/wyclif)
[22:45:00] *** Joins: nergar (~Nergar@177.225.152.13)
[22:47:51] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:48:08] <SnoopJ> dba, I suppose one "workaround" would be not to use it in headless mode, if running chrome in a framebuffer (like Xvfb) is an option.
[22:48:11] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[22:48:21] <nedbat> dontyouloveshort: hey there
[22:48:40] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[22:48:44] <dontyouloveshort> nedbat, was just formulating my question when i found the answer :)
[22:48:54] <nedbat> dontyouloveshort: the system works! :)
[22:48:59] <dontyouloveshort> yes
[22:49:01] <dba> SnoopJ: Thanks let me try it out
[22:49:14] <dontyouloveshort> another statisfied customer
[22:49:33] *** Joins: wyclif (~wyclif@user/wyclif)
[22:49:37] <dontyouloveshort> nedbat, you still do support here, i bet youre over 10 years in here?
[22:49:47] *** Joins: lethu (~lethu@user/lethu)
[22:50:34] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:8590:a7d4:8fbd:995e)
[22:50:38] *** Joins: c10l (~c10l@89.34.167.207)
[22:52:15] <nedbat> dontyouloveshort: i do, and i am :)
[22:53:11] <dontyouloveshort> give me a number
[22:53:27] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[22:53:40] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 240 seconds)
[22:53:56] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[22:54:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[22:55:05] *** Joins: wyclif (~wyclif@user/wyclif)
[22:55:57] <dontyouloveshort> brb
[22:56:03] *** Quits: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838) (Quit: Leaving)
[22:56:34] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 268 seconds)
[22:56:43] <AhmedAmerican> I've been trying to load the following string into JSON but it keeps displayed as string instead of list of dict https://bpa.st/5XRA
[22:58:42] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[22:59:53] <dba> SnoopJ, it worked fine processing few lines/requests and then I get this error https://bpa.st/O7HA would it be thread, hardware or chrome issue?
[23:00:30] <dba> AhmedAmerica, I see it as a list not a string
[23:01:49] *** Quits: bandit_za (~bandit_za@2c0f:ed28:b016:7760::1ed) (Quit: Client closed)
[23:02:21] <AhmedAmerican> dba: it's string as i picked up it from inside a `script` tag within HTML source
[23:02:51] *** Parts: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) ()
[23:03:06] <jinsun> AhmedAmerican: JavaScript code != JSON, that shouldn't even load because line 13 has a "+"  after the string
[23:03:53] <AhmedAmerican> i see
[23:04:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[23:04:19] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[23:05:00] *** Joins: wyclif (~wyclif@user/wyclif)
[23:06:26] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:a566:9143:e279:ef46) (Quit: Leaving)
[23:06:32] *** Joins: extropiator (~extropiat@23.106.85.249)
[23:06:52] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 258 seconds)
[23:06:52] *** Quits: f8l12 (~f8l12@154.3.40.46) (Ping timeout: 258 seconds)
[23:07:22] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[23:08:13] *** Joins: heco (~redrum@user/redrum88)
[23:09:02] *** Joins: jetchisel (jetchisel@user/jetchisel)
[23:10:08] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[23:10:31] *** Joins: wyclif (~wyclif@user/wyclif)
[23:12:27] *** Joins: voltron (~voltrin_@ip5f5993ed.dynamic.kabel-deutschland.de)
[23:12:58] <gbear605> I know Jython is pretty outdated, but does anyone here know how to use Java function objects from Jython? I can't find anything online
[23:14:08] <AhmedAmerican> jinsun: is there workaround for such case?
[23:15:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[23:15:40] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:eca3:57fd:9c7d:1a5a) (Ping timeout: 240 seconds)
[23:16:03] *** Joins: wyclif (~wyclif@user/wyclif)
[23:16:26] *** Joins: _AJ (~AJAlabs@198.54.140.10)
[23:18:47] *** Quits: manin (~x@185.242.190.95) (Ping timeout: 245 seconds)
[23:18:51] <AhmedAmerican> ops, i found solution, my desired data can be picked up from the description directly
[23:19:20] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[23:19:37] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Ping timeout: 245 seconds)
[23:20:08] *** Quits: Linkandzelda (~Linkandze@cloudirc.laz.li) (Quit: Cya)
[23:20:44] *** Joins: f8l12 (~f8l12@154.3.40.120)
[23:21:14] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[23:21:34] *** Joins: wyclif (~wyclif@user/wyclif)
[23:21:34] <jinsun> AhmedAmerican: in general you would probably have to try interpreting the JS code using something like this https://github.com/amol-/dukpy#using-the-javascript-interpreter, or if you are using selenium then it can probably do that for you
[23:22:01] *** Quits: extropiator (~extropiat@23.106.85.249) (Ping timeout: 246 seconds)
[23:24:14] *** Quits: voltron (~voltrin_@ip5f5993ed.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[23:25:24] *** Joins: Socra (~Socra@206.217.216.27)
[23:26:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[23:27:04] *** Joins: wyclif (~wyclif@user/wyclif)
[23:27:43] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:1035:5e3c:e705:f5c1)
[23:29:12] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[23:29:30] *** Joins: daevski7 (~daevski@76-253-184-89.lightspeed.rlghnc.sbcglobal.net)
[23:29:44] *** Joins: bandit_za (~bandit_za@2c0f:ed28:b016:7760::1ed)
[23:31:42] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[23:32:34] *** Joins: wyclif (~wyclif@user/wyclif)
[23:32:57] *** Quits: daevski (~daevski@76-253-184-89.lightspeed.rlghnc.sbcglobal.net) (Ping timeout: 245 seconds)
[23:32:57] *** daevski7 is now known as daevski
[23:33:21] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[23:33:29] *** Quits: monkey_ (~user@190.104.116.134) (Remote host closed the connection)
[23:34:32] *** Joins: extropiator (~extropiat@162.253.68.165)
[23:35:35] *** Joins: c10l (~c10l@89.34.167.207)
[23:35:45] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[23:36:01] *** Joins: Ivyy (~Ivyy@2001:a61:135b:5001:b757:84c0:6614:a165)
[23:36:32] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[23:37:34] *** Joins: Sasazuka (~Sasazuka@user/sasazuka)
[23:37:36] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Client Quit)
[23:37:40] *** Joins: ahooda (~user@pool-173-54-215-57.nwrknj.fios.verizon.net)
[23:37:51] *** Parts: ahooda (~user@pool-173-54-215-57.nwrknj.fios.verizon.net) ()
[23:41:51] *** Joins: manin (~x@185.242.190.95)
[23:43:25] *** Joins: ice9 (~ice9@user/ice9)
[23:43:38] *** Quits: noyb (~noyb@user/noyb) (Ping timeout: 252 seconds)
[23:43:52] *** Joins: Auron (~Auron956@user/auron)
[23:44:36] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[23:45:26] *** Joins: noyb (~noyb@user/noyb)
[23:46:20] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[23:48:29] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[23:48:44] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[23:48:55] *** Joins: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net)
[23:50:10] *** Quits: DSync (~ds@user/deepspace-link) ()
[23:50:35] *** Quits: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (Client Quit)
[23:51:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[23:52:03] *** khrbt_ is now known as khrbt
[23:52:04] *** Joins: monkey_ (~user@190.104.116.134)
[23:54:00] *** Joins: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net)
[23:54:30] *** Joins: audiobirb (~audio@2603-8081-1800-00ad-5755-430d-d5c4-6501.res6.spectrum.com)
[23:54:47] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:55:22] *** Quits: hyper_dave (~hyper_dav@197.156.107.244) (Read error: No route to host)
[23:58:31] *** [itchyjunk] is now known as `{\[itchyjunk\]}
[23:58:38] *** Joins: hyper_dave (~hyper_dav@197.156.107.244)
[23:59:14] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:59:40] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[23:59:59] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
