[00:01:23] *** Quits: Hayek (~xxx@2603-8000-b401-6099-7541-8f40-8f83-6bcb.res6.spectrum.com) (Ping timeout: 258 seconds)
[00:01:59] *** Joins: acidjnk_new3 (~acidjnk@p200300d0c703cb67a588bcb670b337ca.dip0.t-ipconnect.de)
[00:03:01] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 252 seconds)
[00:04:00] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Remote host closed the connection)
[00:04:56] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[00:05:23] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[00:06:01] <[exa]> sclv: oh meh, `curl` was missing and the default ubuntu wrapper made it look like it's not missing or something
[00:06:23] *** Quits: jkaye (~jkaye@2601:281:8300:7530:5bae:6a75:284d:ff5) (Ping timeout: 264 seconds)
[00:06:42] <sclv> cool, sounded like a transport issue, good to know its solved!
[00:07:03] <[exa]> nah, 1000% ubuntu issue
[00:07:32] <[exa]> no precise idea why cabal wouldn't fail because of missing curl though
[00:08:53] <geekosaur> ask maerwald, I think he had major problems trying to make sense of the output of various versions of curl
[00:08:59] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[00:08:59] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[00:08:59] *** Joins: wroathe (~wroathe@user/wroathe)
[00:09:02] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:09:04] <geekosaur> including that apparently there's no reliable version flag
[00:09:44] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 244 seconds)
[00:10:19] <[exa]> this was IMO even without curl
[00:10:32] *** Joins: akspecs__ (~akspecs@user/akspecs)
[00:10:37] <jiribenes> [exa]: that's horrifying
[00:10:39] <[exa]> ubuntu's got this wrapper of everything that tells you "did you mean apt-get install curl" if curl is not installed right?
[00:10:46] <maerwald> yes, ubuntu now uses snap
[00:10:53] <[exa]> oh snap
[00:10:55] <maerwald> it's all broken now
[00:10:56] *** Joins: machinedgod (~machinedg@24.105.81.50)
[00:11:11] <maerwald> some ppl reported that curl is provided by snap
[00:11:12] <monochrom> I thought that was just a shell thing.
[00:11:12] <maerwald> and fails
[00:11:13] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[00:11:41] <monochrom> You can configure cabal-install to use wget.
[00:11:59] *** Joins: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net)
[00:12:19] <monochrom> I haven't tried ubuntu 21.10, I'm on 21.04, but "apt-get install curl" is pretty uneventful.
[00:12:50] <[exa]> yeah, I was more surprised that the lack of curl kinda passes silently without screaing there's no curl
[00:12:57] *** Joins: Hayek (~xxx@2603-8000-b401-6099-7541-8f40-8f83-6bcb.res6.spectrum.com)
[00:13:22] <[exa]> I'll try to dig it a bit eventually and report details if there's something more useful than just "avoid ubuntu" (it's not even on my computer)
[00:13:41] <monochrom> There is nothing left to avoid.
[00:13:42] <maerwald> ghcup config set downloader Wget
[00:13:56] <monochrom> Like, would you seriously recommend slackware?
[00:14:24] <maerwald> but wget is really bad
[00:14:47] <maerwald> 1. it's slow, 2. using etags via If-None-Match is even slower
[00:15:50] <larryba> is stack no longer necessary to avoid cabal hell?
[00:16:00] <monochrom> Right.
[00:16:20] <larryba> I used cabal sandbox in the past. then stack. now I can just use cabal install?
[00:16:27] <sclv> pretty sure cabal does look for curl and fallback if not avail. Its just.. it doesn’t test the thing named curl is “really curl”
[00:16:32] <[exa]> larryba: yes, cabal hell is over
[00:16:46] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 252 seconds)
[00:16:53] <sclv> you can even use plain http transport and require neither wget nor curl
[00:17:07] <monochrom> Now you use "cabal build" or "cabal repl" if you're a developer. "cabal install" if you're an exe user.
[00:17:20] <larryba> how did they solve it? something similar to what stack did?
[00:18:26] <[exa]> larryba: mostly by proper versioning of builds, nix-like
[00:18:30] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[00:18:52] <larryba> nice
[00:19:47] <larryba> when was this solved? just so I have a counter argument when someone mentions cabal hell :P
[00:20:00] <geekosaur> cabal 2.x
[00:20:04] <[exa]> a few years back? :)
[00:20:05] *** Quits: benin (~benin@183.82.207.116) (Ping timeout: 244 seconds)
[00:20:26] *** Quits: peterhil (~peterhil@mobile-access-5672cd-211.dhcp.inet.fi) (Ping timeout: 260 seconds)
[00:21:15] *** Joins: benin (~benin@183.82.207.116)
[00:21:37] *** Joins: jgeerds (~jgeerds@55d40de2.access.ecotel.net)
[00:23:14] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 258 seconds)
[00:24:07] <[exa]> man, curl in snap, what the hell
[00:24:48] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[00:24:59] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Ping timeout: 264 seconds)
[00:26:27] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[00:27:56] *** Joins: peterhil (~peterhil@mobile-access-5672cd-211.dhcp.inet.fi)
[00:29:05] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Remote host closed the connection)
[00:29:29] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[00:29:53] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 244 seconds)
[00:30:40] <merijn> [exa]: *Proper* cabal hell was solved over a decade ago
[00:30:57] <merijn> The one that actually earned that name
[00:31:27] *** Joins: rk04 (~rk04@user/rajk)
[00:31:46] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 245 seconds)
[00:32:04] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[00:32:47] <[exa]> merijn: well you're right, but I forced myself to forget that one forever
[00:32:50] <[exa]> :D
[00:34:35] <merijn> 99% of people talking about cabal hell in 2021 have never experienced cabal hell, tbh
[00:35:45] <merijn> I wish it wasn't such a catchy name >.>
[00:37:05] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[00:37:11] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 245 seconds)
[00:37:47] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[00:39:07] *** Quits: segfaultfizzbuzz (~segfaultf@135-180-0-138.static.sonic.net) (Quit: Leaving)
[00:39:21] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[00:39:42] *** zzz is now known as zero
[00:40:42] *** Joins: jstolarek (~jstolarek@137.220.120.162)
[00:41:09] <zero> cabal purgatory
[00:41:54] <geekosaur> and it was never really cabal hell anyway, it was ghc hell but cabal 1.x forcefully exposed it
[00:42:12] <geekosaur> stack and later cabal came up with ways to beat ghc over the head to make it behave sanely
[00:42:32] <geekosaur> because if you let ghc pick the libraries itself it will pick the wrong ones
[00:42:58] *** Quits: takuan (~takuan@178-116-218-225.access.telenet.be) (Remote host closed the connection)
[00:43:51] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 245 seconds)
[00:45:37] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[00:51:23] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 264 seconds)
[00:51:33] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[00:52:54] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[00:53:10] <merijn> geekosaur: I mean, silently overwriting existing packages was, in fact, cabal's fault
[00:54:12] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Killed (NickServ (GHOST command used by allbery_b)))
[00:54:12] *** Joins: allbery_b (~geekosaur@xmonad/geekosaur)
[00:54:15] *** allbery_b is now known as geekosaur
[00:57:46] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 260 seconds)
[00:58:01] *** Quits: Hayek (~xxx@2603-8000-b401-6099-7541-8f40-8f83-6bcb.res6.spectrum.com) (Ping timeout: 245 seconds)
[00:58:48] *** Joins: d34df00d (~d34df00d@2600:1700:8c60:3a10::48)
[00:58:51] <d34df00d> Hi!
[00:59:00] <d34df00d> What's the cheapest way to get glyph count for a string?
[00:59:10] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[00:59:11] <merijn> define glyph and define string
[00:59:45] <merijn> (seriously, those 2 terms are vaguer than you can imagine)
[01:00:08] <d34df00d> A string is a sequence of UTF-8 codepoints. A glyph is a combination of code points that's being treated as a single entity by an average human.
[01:00:25] <d34df00d> In particular, I want the length of "≡̂" to be 1, while Prelude.length and Data.Text.length think it's 2.
[01:00:26] <merijn> ok, that last part is horrendously difficult and ill-defined, tbh
[01:00:28] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Quit: Leaving)
[01:00:37] <geekosaur> "utf-8 codepoints" isn't really a thing either
[01:00:41] <maerwald> merijn: not sure, I think some languages index strings by glyphs
[01:00:52] <maerwald> so I guess it works
[01:00:58] <merijn> maerwald: For specific, technical definitions of "glyph"
[01:01:04] <geekosaur> Text uses utf-16; String uses unicode codepoints directly and only encodes for I/O
[01:01:25] <merijn> geekosaur: That's honestly not really relevant, Text *also* uses unicode codepoints
[01:01:44] <merijn> The real pedantic thing is that "utf-8 codepoints" is nonsense, because utf-8 is an encoding of unicode codepoints
[01:01:56] <merijn> d34df00d: You probably want text-icu
[01:02:00] <merijn> @hackage text-icu
[01:02:00] <lambdabot> https://hackage.haskell.org/package/text-icu
[01:02:23] <d34df00d> Actually, hold on.
[01:02:29] <maerwald> those sweet C++ bindings
[01:02:43] <d34df00d> Ah, nope, don't hold on, that seems to be a step towards my actual problem anyway, thanks.
[01:02:57] <maerwald> have fun with build issues
[01:03:05] <d34df00d> merijn: oh. I used icu in the past for some other applications, and I remember it being slow.
[01:03:05] *** Joins: nvmd (~nvmd@user/nvmd)
[01:03:19] <d34df00d> But I'll use it sure if there's nothing better.
[01:03:21] <merijn> d34df00d: It's the only thing with a remote hope of being correct, though
[01:03:25] <geekosaur> that's because what it's doing is much more compolex than you think it is
[01:03:31] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 252 seconds)
[01:03:35] <geekosaur> *complex
[01:03:56] <geekosaur> and much more complex than most other programmers think it is, for that matter
[01:03:56] <maerwald> we need more "can do" attitude here :p
[01:03:57] <d34df00d> Hmm, now I need to verify if I actually get glyph count or codepoint count in my specific domain.
[01:04:01] <merijn> d34df00d: Also note that many people don't agree on what "a glyph" is. So any definition of "treated as a single entity by an average human" is a *super* cursed definition
[01:04:21] <merijn> Especially in languages like arabic
[01:04:30] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 260 seconds)
[01:04:53] <d34df00d> We just need some probability distribution monad and return the count in that monad as a distribution.
[01:04:54] <d34df00d> Problem solved.
[01:05:20] <merijn> d34df00d: unicode has a definition of "character" which would count something like é as "1 character", (even if it is two codepoints), but that definition is *very* technical and might not line up with what people expact/want
[01:05:22] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[01:05:48] <hpc> converting a string to upper/lower is already locale-specific
[01:06:28] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[01:06:28] <merijn> character count can be generation specific :p
[01:07:00] *** Joins: Hayek (~xxx@2603-8000-b401-6099-7541-8f40-8f83-6bcb.res6.spectrum.com)
[01:07:02] <maerwald> I'm sure it'll be fine
[01:07:39] <merijn> To me, my name has always been 5 letters, but apparently kids these days are taught it as 6 (not entirely sure) and in Flanders, which generally uses the same locale it's always been 6
[01:08:40] <hpc> there's only one solution - we need to add unicode info to tzdata :D
[01:09:40] <d34df00d> I just wanted to marry neovim and agda using haskell. Now I'm curious why some fun weekend project always ends up in some not so funny details (like, unicode).
[01:10:08] <merijn> Because people are messy :p
[01:10:25] <monochrom> Adga glyph count is more simpler than generalized unicode human language glyph count.
[01:10:32] <monochrom> s/more/much/
[01:10:41] <merijn> d34df00d: Wait, is the point that you wanted to figure out that your example character renders as one terminal character?
[01:10:48] <d34df00d> But nobody stops people from putting almost arbitrary glyphs into their .agda files, right?
[01:11:13] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 244 seconds)
[01:11:30] *** Parts: hrnz (~ethical@vegan.im.it) (der channel hier ist nicht mein niveau ciao)
[01:11:34] <d34df00d> merijn: not sure I parse that correctly, but agda gives me highlighting info in either codepoint or glyph offsets, while vim eats bytes.
[01:11:36] *** Joins: pparmin (~pparmin@p20030006214e0337dcae6b48c40f53cd.dip0.t-ipconnect.de)
[01:11:37] <monochrom> If someone actually puts Middle Earth elf runes there, let us know.
[01:12:07] <merijn> d34df00d: Basically, you can consider a terminal as being a rectangular grid of blocks right, with fixed width characters taking up 1 cell
[01:12:17] <d34df00d> Yep.
[01:12:45] <merijn> d34df00d: The width (in fixed-width terminal cells) of a character can be queried with wcswidth in C
[01:12:55] <merijn> Or wcswidth_l for locale aware
[01:13:07] *** Quits: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr) (Quit: Leaving)
[01:13:35] <merijn> This is why you should be pedantically precise about what you need to do for these kinda niche things ;)
[01:14:20] <hpc> monochrom: careful, someone will get pedantic about sindarin vs quenya :D
[01:14:30] <d34df00d> That's gonna be ridiculously slow to figure out what character corresponds to which byte.
[01:14:48] <merijn> d34df00d: Well, yes,
[01:14:56] <merijn> Live sucks, everything is terrible :)
[01:15:18] * maerwald opens a whisky bottle
[01:15:29] <d34df00d> I hate programming.
[01:15:44] <merijn> Telltale sign of not being clueless ;)
[01:15:56] <maerwald> d34df00d: yeah, I said that in an interview once
[01:16:04] <pparmin> hey everyone :)  I am currently going through learn4haskell for this year's Hacktoberfest and I am having a blast so far!! I am currently trying to solve the last task in the first chapter which basically ask you to recursively remove the last digit until you have the first digit in a number. This is my current solution:
[01:16:04] <pparmin> https://paste.tomsmeding.com/87hmk1co and I am kind of stuck on understanding the error message.  I was hoping someone might be able to give me a hint as to what I am doing wrong. Judging by the error message, I was wondering whether there is an issue with using "* 0.1" as I am specifying integers.
[01:16:04] <merijn> If you don't hate programming, you don't know enough :p
[01:16:27] <merijn> I'm convinced hating programming is required for being good. People who *like* writing code, will inevitably write too much of it :p
[01:16:55] <merijn> pparmin: 0.1 is not an Int
[01:16:57] <d34df00d> Yep, deleting code is the best you can do to the code.
[01:17:03] <d34df00d> Even in haskell and the likes.
[01:17:04] <merijn> pparmin: You cannot multiply an Int by a non-Int
[01:17:05] * zero let x = whisky:x in gulp <$> x
[01:17:16] <geekosaur> also you need moe parentheses
[01:17:30] <merijn> pparmin: You probably want to use  "div" instead
[01:17:39] <geekosaur> firstDigit (...)
[01:17:43] <merijn> > (100 :: Int) * 0.1
[01:17:45] <lambdabot>  error:
[01:17:45] <lambdabot>      • No instance for (Fractional Int) arising from the literal ‘0.1’
[01:17:45] <lambdabot>      • In the second argument of ‘(*)’, namely ‘0.1’
[01:17:50] <merijn> > (100 :: Int) `div` 10
[01:17:52] <lambdabot>  10
[01:18:01] <monochrom> In a math channel someone wrote "x+y/a+b" so I said it's ambiguous, you need more parentheses.
[01:18:02] <pparmin> merijn: Why am I able to multiply an int by 0.1 from within ghci? That's what has confused me
[01:18:17] <merijn> pparmin: You aren't
[01:18:22] <monochrom> The resulting clarification was "(x)+(y)/(a)+(b)"
[01:18:23] <geekosaur> if you used a literal, it wasn't an int
[01:18:33] <geekosaur> :t 5
[01:18:34] <lambdabot> Num p => p
[01:18:36] <merijn> pparmin: If you write "10 * 0.1", then 10 isn't an Int
[01:18:43] <pparmin> ah god damn :D  
[01:18:54] <zero> monochrom: :D
[01:19:04] <merijn> :t fromIntegral -- this is what you want
[01:19:05] <lambdabot> (Integral a, Num b) => a -> b
[01:19:10] <ski> monochrom : how's it ambiguous ?
[01:19:24] <merijn> Or rather, you don't want it, because why convert Int to Double and back if you can use "div" ;)
[01:19:31] <merijn> :t div
[01:19:32] <lambdabot> Integral a => a -> a -> a
[01:19:58] <d34df00d> :t span
[01:19:59] <lambdabot> (a -> Bool) -> [a] -> ([a], [a])
[01:20:04] <d34df00d> Ok some html here.
[01:20:26] <pparmin> I am sorry, i am really new to Haskell and some stuff really confuses me still :D  
[01:20:27] <ski> pparmin : `10' isn't necessarily an `Int'. numeric literals are overloaded. `10' could be of any numeric type (and `0.1' of any floating-point type)
[01:20:36] <ski> > 10 :: Complex Float
[01:20:37] <lambdabot>  10.0 :+ 0.0
[01:20:40] <ski> > 10 :: Rational
[01:20:41] <lambdabot>  10 % 1
[01:20:44] *** Quits: ssipos90 (~ssipos90@86.123.18.123) (Quit: Leaving)
[01:20:59] <pparmin> ski: actually that makes a lot of sense. I didn't think about it that way
[01:21:38] *** Joins: unit73e (~emanuel@2001:818:e8dd:7c00:32b5:c2ff:fe6b:5291)
[01:21:46] <ski> pparmin : but there's no implicit/automatic conversion between different numeric types. if you really need that, use (usually) `fromIntegral' or `realToFrac'. but in this case, if you want integral division, it's better to use `div'
[01:22:37] <pparmin> so basically it should work if I write firstDigit (truncate (n `div` 10))
[01:22:40] *** Joins: ssipos (~ssipos@86.123.18.123)
[01:22:53] <merijn> pparmin: The truncate is redundant there (and doesn't typecheck :p)
[01:22:55] <merijn> :t truncate
[01:22:56] <lambdabot> (RealFrac a, Integral b) => a -> b
[01:22:57] * ski idly recalls a corrector of a math exam not liking `2\(...)' in an answer ..
[01:23:24] <merijn> pparmin: truncate rounds a fractional value to an Int, but div already always returns an Integral value
[01:23:27] <ski> @type [floor,ceiling,round,truncate]
[01:23:27] <lambdabot> (RealFrac a, Integral b) => [a -> b]
[01:23:51] <ski> > 25 `div` 7
[01:23:52] <lambdabot>  3
[01:23:56] <ski> > 25 `mod` 7
[01:23:58] <lambdabot>  4
[01:24:25] <monochrom> firstDigit (n `div` 10) very simply.
[01:24:29] <monochrom> and directly.
[01:25:19] <pparmin> oh my!! it works :D  
[01:25:43] <pparmin> I also understood why you were advising me to put proper parantheses when my recursion went towards infinity :D  
[01:26:43] <pparmin> thank you so much everyone!! this has been a huge help 
[01:27:23] <hpc> > 25 `divMod` 7
[01:27:24] <lambdabot>  (3,4)
[01:27:38] * ski . o O ( "Proposal for Division Operators in Scheme" by Riastradh in 2009,2010,2011 at <https://mumble.net/~campbell/tmp/division.txt> ; "Division and Modulus for Computer Scientists" by Daan Leijen in 2001-12-03 at <https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf> )
[01:29:53] *** Quits: ssipos (~ssipos@86.123.18.123) (Quit: WeeChat 3.3)
[01:30:17] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[01:30:28] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[01:32:36] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 245 seconds)
[01:33:09] *** Joins: ssipos (~ssipos@86.123.18.123)
[01:36:32] *** Quits: jstolarek (~jstolarek@137.220.120.162) (Ping timeout: 244 seconds)
[01:36:35] *** Quits: myShoggoth (~myShoggot@97-120-85-195.ptld.qwest.net) (Read error: Connection reset by peer)
[01:36:53] *** Joins: myShoggoth (~myShoggot@97-120-85-195.ptld.qwest.net)
[01:38:02] *** Joins: pavonia (~user@user/siracusa)
[01:53:50] *** Quits: nvmd (~nvmd@user/nvmd) (Ping timeout: 265 seconds)
[01:56:08] *** Joins: brainfreeze (~brainfree@2a03:1b20:4:f011::20d)
[01:58:47] *** Joins: MQ-17J (~MQ-17J@d192-24-122-179.try.wideopenwest.com)
[01:58:54] *** Quits: ubert (~Thunderbi@77.119.175.138.wireless.dyn.drei.com) (Ping timeout: 260 seconds)
[01:59:29] *** Quits: n3t (n3t@user/n3t) (Ping timeout: 264 seconds)
[01:59:48] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[02:03:55] *** Quits: Guest52 (~Guest52@144.164.185.81.rev.sfr.net) (Ping timeout: 256 seconds)
[02:06:24] *** Joins: MoC (~moc@user/moc)
[02:10:39] *** Quits: peterhil (~peterhil@mobile-access-5672cd-211.dhcp.inet.fi) (Ping timeout: 244 seconds)
[02:10:44] *** Joins: nehsou^ (~nehsou@wsip-68-227-92-38.mc.at.cox.net)
[02:11:30] *** Joins: peterhil (~peterhil@mobile-access-5672cd-211.dhcp.inet.fi)
[02:14:15] *** Quits: benin (~benin@183.82.207.116) (Ping timeout: 244 seconds)
[02:14:20] *** Quits: MoC (~moc@user/moc) (Quit: Konversation terminated!)
[02:14:46] *** Joins: benin (~benin@183.82.207.116)
[02:32:11] *** Quits: Kaiepi (~Kaiepi@156.34.44.192) (Remote host closed the connection)
[02:34:29] *** Joins: cherim (UserNick@host-217-197-197-182.rev.as20985.net)
[02:34:53] *** Parts: cherim (UserNick@host-217-197-197-182.rev.as20985.net) (Closing Window)
[02:35:39] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:36:18] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[02:36:18] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[02:36:18] *** Joins: wroathe (~wroathe@user/wroathe)
[02:40:26] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[02:41:51] <zero> is Rational treated diferently by ghc or could we create it ourselves and do this:
[02:41:58] <zero> > 10.0 :: Rational
[02:41:59] <lambdabot>  10 % 1
[02:42:57] <geekosaur> whatr do you mean differently?
[02:43:03] <geekosaur> > 10 % 1
[02:43:05] <lambdabot>  10 % 1
[02:43:32] <zero> as in you can use literals
[02:43:35] <hpc> Rational is a type alias for Ratio Integer
[02:43:43] <hpc> which is defined at https://hackage.haskell.org/package/base-4.15.0.0/docs/src/GHC-Real.html#Ratio
[02:43:47] <geekosaur> there is some special handling where any literal with a decimal point is converted to a Rational and then fromRational applied to it\
[02:43:51] <hpc> numeric literals are provided by its Num instance
[02:45:02] <hpc> fromInteger x       =  fromInteger x :% 1
[02:45:05] <hpc> fromRational (x:%y) =  fromInteger x % fromInteger y
[02:45:15] <hpc> and you can do that for any type
[02:46:25] <zero> i see, thanks
[02:46:46] <zero> i still get confused somethimes with all the numeric types
[02:47:04] *** Joins: mikoto-chan (~mikoto-ch@185.237.102.117)
[02:48:29] <zero> geekosaur: that was it
[02:48:51] <zero> there is no Ratio Double or Ratio Float
[02:49:40] <davean> I mean what would it mean for there to be? That'd get "fun"
[02:50:09] <davean> I think the why is pretty immediately obvious there
[02:50:11] <geekosaur> but one could argue for being able to work with ratios whose denominator is some multiple of pi
[02:50:19] <zero> oops, i got confused again
[02:50:23] <zero> of course there isnt'
[02:50:37] <geekosaur> thaen again I suppose that's better handled as a newtype over Rational
[02:50:46] <davean> geekosaur: as I said "fun"
[02:50:57] <davean> I didn't say "entirely nonsensical" 
[02:51:38] <zero> this is what confused me:
[02:52:00] <zero> > (10 :: Float) :: Rational
[02:52:01] <lambdabot>  error:
[02:52:01] <lambdabot>      • Couldn't match type ‘Float’ with ‘Ratio Integer’
[02:52:01] <lambdabot>        Expected type: Rational
[02:52:07] <zero> > (10 :: Double) :: Rational
[02:52:08] <lambdabot>  error:
[02:52:09] <lambdabot>      • Couldn't match type ‘Double’ with ‘Ratio Integer’
[02:52:09] <lambdabot>        Expected type: Rational
[02:52:16] <zero> > (10 :: Floating a => a) :: Rational
[02:52:18] <lambdabot>  error:
[02:52:18] <lambdabot>      • No instance for (Floating (Ratio Integer))
[02:52:18] <lambdabot>          arising from an expression type signature
[02:53:04] <zero> but 10.0 :: Rational works
[02:53:13] <zero> so what is 10.0 ?
[02:53:21] <zero> there's the special handling
[02:53:28] <zero> right?
[02:54:03] <ski> because `10.0' gets transformed into `fromRational (10.0 :: Rational)', where `10.0 :: Rational' here (doesn't get transformed and) is directly a value of type `Rational'
[02:54:10] <davean> zero: I mean you said "Its a Float" "Oh wait its a Rational"
[02:54:13] <davean> how COULD that work?
[02:54:20] <davean> You specificly said something directly contradictory
[02:54:23] *** Quits: mikoto-chan (~mikoto-ch@185.237.102.117) (Ping timeout: 264 seconds)
[02:54:48] <davean> Float /= Rational
[02:54:55] <ski> (the `fromRational' converts from `Rational' to any `Fractional' type, like `Rational',`Float',`Double',`Complex Float',`Complex Double',..)
[02:56:06] <zero> right
[02:56:10] <zero> and that makes sense
[02:56:15] <geekosaur> :t 10.0
[02:56:15] <lambdabot> Fractional p => p
[02:56:18] <ski> `:: Rational' is not a "cast", nor a type coercion. it's a type ascription, explicitly stating what type the value already has (often being used to help out the implementation by pinning down what exact type it should have, rather than letting the implementation infer a type, often in a polymorphic way)
[02:56:21] *** Joins: mikoto-chan (~mikoto-ch@185.237.102.117)
[02:56:54] <ski> (`fromInteger' is the same, except for integral literals, converting from `Integer' to any `Integral' type)
[02:57:11] <ski> @type 10
[02:57:11] *** Quits: mikoto-chan (~mikoto-ch@185.237.102.117) (Read error: Connection reset by peer)
[02:57:12] <lambdabot> Num p => p
[02:57:28] <ski> ah, right, any `Num', not any `Integral'
[02:58:29] <zero> so we can't create a type that interprets a literal like Rational does without some magic, right?
[02:59:12] <ski> the numeric literals have special support. but apart from that portion of magic, `Ratio' isn't special
[02:59:22] <zero> right
[02:59:42] <geekosaur> right, you need the compiler to wrap the literal in some function that will convert to any compatible type
[02:59:58] <zero> got it
[03:00:19] <zero> i need to revisit the numeric types graph
[03:00:33] <geekosaur> like it does fr literal integers and fromInteger, literal rationals (which look like floats) and fromRational, and with OverloadedStrings it does the same with literal strings and fromString
[03:01:04] * awpr has been meaning to write an `OverloadedBools` plugin/library
[03:01:09] <geekosaur> I think you could add such a type using a plugin
[03:01:28] <zero> awpr: how so?
[03:01:56] <awpr> `class IsBool b where fromBool :: b -> Bool; toBool :: Bool -> b`, something like that
[03:02:33] *** Joins: evocatus (~evocatus@84.51.113.13)
[03:02:34] <awpr> and then `ifThenElse :: IsBool b => b -> a -> a -> a` and `RebindableSyntax`
[03:02:57] <zero> can you show an example where that would be useful?
[03:03:12] <awpr> oh it's for the acme category for sure
[03:03:41] <zero> acme category?
[03:03:52] <awpr> or at least, I'd call it acme-overloaded-bools or acme-truthiness or something, and then if someone uses it because they miss Python, that's on their conscience
[03:03:53] <zero> i dunno what's that :3
[03:04:02] <awpr> "acme" is the Hackage category for joke packages
[03:04:11] <zero> ah :)
[03:04:12] <geekosaur> stolen from perl
[03:04:14] <awpr> e.g. https://hackage.haskell.org/package/acme-dont
[03:05:15] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[03:05:49] <awpr> although tbh it might be nice in some cases, I do kinda like being able to say `if (something :: Maybe a) then blah else blah`, in a "guilty pleasure" sort of way
[03:06:01] <Hecate> https://twitter.com/eddyb_r/status/1451679543702478860
[03:06:02] <Hecate> DAMN
[03:08:13] <zero> instance IsBool (Maybe a) where { toBool Nothing = False; toBool _ = True; fromBool False = Nothing; fromBool True = ?
[03:08:45] <awpr> would have to split the class for that, I started typing that a bit ago but got distracted
[03:09:50] <awpr> `class IsBool a where fromBool :: Bool -> a` and `class Truthy a where toBool :: a -> Bool`, then `ifThenElse :: Truthy b => b -> a -> a -> a`
[03:09:51] <ski> s/Maybe a/Maybe ()/
[03:10:30] <awpr> also could split even further: `class IsTrue a where fromTrue :: a`, then `instance a ~  b => IsTrue (a :~: b)`
[03:10:44] <awpr> `where fromTrue = Refl`
[03:11:54] <awpr> with enough type-level fiddling, then maybe even `if sameType (typeOf x) (typeOf y) then x else y` could type-check
[03:11:58] <juri_> Hecate: if i had a dollar for every cryptocurrency startup that approached me, it wouldn't matter because fiat is dead.
[03:12:33] *** Joins: n3t (n3t@s45.mydevil.net)
[03:12:34] <juri_> (crypto is bad, mmmkay?)
[03:12:50] *** Quits: rk04 (~rk04@user/rajk) (Ping timeout: 260 seconds)
[03:13:10] *** wootehfoot is now known as Supersaiyan_IV
[03:13:40] *** Supersaiyan_IV is now known as wootehfoot
[03:13:40] *** Joins: mvk (~mvk@2607:fea8:5cc1:300::4b63)
[03:16:21] *** Quits: drdo (~drdo@overlord0.drdo.eu) (Quit: ...)
[03:17:50] <zero> `if then else` is soo lame
[03:18:11] * zero rolls eyes
[03:19:38] <awpr> ♫ `if let x` ♫
[03:22:10] <zero> what now?
[03:22:26] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[03:22:26] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[03:22:26] *** Joins: wroathe (~wroathe@user/wroathe)
[03:24:42] *** Joins: drdo (~drdo@roach0.drdo.eu)
[03:25:08] <awpr> oh no, I can't find it
[03:26:08] <awpr> somebody made a cheesy song about Rust's language feature "if let"
[03:26:20] <awpr> which is basically pattern guards wedged into if-then-else
[03:26:35] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 244 seconds)
[03:28:03] <awpr> https://www.youtube.com/watch?v=ToBqbpm3LDM
[03:28:28] <zero> ah i remember that when i was learning rust before i got angry at the direction the syntax updates were going
[03:28:32] <zero> i hate rust syntax
[03:29:05] <zero> and it's a shame because rust is an interesting lanuage
[03:29:48] <awpr> personally I don't mind it.  if I have to write something in a systems language for some reason, I would want it to be Rust
[03:30:06] <zero> i switched to nim at the time
[03:30:43] <zero> shame it didn't get as populat
[03:30:50] <zero> popular
[03:31:28] *** Quits: unit73e (~emanuel@2001:818:e8dd:7c00:32b5:c2ff:fe6b:5291) (Ping timeout: 252 seconds)
[03:31:38] *** Quits: drdo (~drdo@roach0.drdo.eu) (Quit: The Lounge - https://thelounge.chat)
[03:34:01] *** Joins: drdo (~drdo@roach0.drdo.eu)
[03:35:28] <ski> awpr : it's somewhat similar to `let'-`try' ?
[03:35:49] *** Quits: jgeerds (~jgeerds@55d40de2.access.ecotel.net) (Ping timeout: 265 seconds)
[03:35:50] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:4852:7354:5eb5:641f) (Remote host closed the connection)
[03:36:03] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[03:36:41] <janus> how does try fit into it? i thought it was `if let Some(x) = maybeSomething { <x is bound here> }`
[03:37:04] <awpr> it's like if instead of `case () of _ | Just x <- mx -> x; _ -> somethingElse`, you could write `if Just x <- mx then x else somethingElse`
[03:37:22] <awpr> where the Rust spelling of the latter is like what janus wrote
[03:37:23] <ski> `let'-`try' is for binding a result of an expression, while simultaneously also handling some exceptions
[03:37:33] *** Quits: drdo (~drdo@roach0.drdo.eu) (Client Quit)
[03:37:45] <awpr> this construct is instead just pattern-matching
[03:37:49] *** Joins: drdo (~drdo@roach0.drdo.eu)
[03:38:12] *** Quits: drdo (~drdo@roach0.drdo.eu) (Client Quit)
[03:38:19] <ski>   catchBind :: Exception e => IO a -> (e -> IO b) -> (a -> IO b)
[03:38:21] <awpr> just a particularly convenient form of pattern matching: one non-wildcard pattern and one underscore pattern
[03:38:24] <ski> would give the same functionality
[03:38:27] *** Joins: drdo (~drdo@roach0.drdo.eu)
[03:38:54] <ski> er
[03:38:56] <ski>   catchBind :: Exception e => IO a -> (e -> IO b) -> (a -> IO b) -> IO b
[03:40:51] <ski> it's desired, because a plain `catch :: Exception e => IO a -> (e -> IO a) -> IO a' would have issues with tail calls .. and using e.g. `try :: Exception e => IO a -> IO (Either e a)' would uselessly construct an `Either', only to be taken apart right after (barring a SSC)
[03:42:11] *** Quits: acidjnk_new3 (~acidjnk@p200300d0c703cb67a588bcb670b337ca.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[03:42:32] <Cale> Hecate: https://lib.rs/cryptography/cryptocurrencies hahahaha I love it
[03:42:34] *** Quits: Hayek (~xxx@2603-8000-b401-6099-7541-8f40-8f83-6bcb.res6.spectrum.com) (Ping timeout: 258 seconds)
[03:43:15] <ski> "Exceptional syntax" by Nick Benton,Andrew Kennnedy in 2001 at <https://www.cambridge.org/core/services/aop-cambridge-core/content/view/58206FB399EDC9F197A0D53BC46E4667/S0956796801004099a.pdf/exceptional_syntax.pdf> talks about this
[03:44:32] *** Joins: Hayek (~xxx@2603-8000-b401-6099-7541-8f40-8f83-6bcb.res6.spectrum.com)
[03:44:32] *** Joins: dustee (~dustee@63.81.59.158)
[03:44:37] *** Joins: falafel (~falafel@cpe-76-168-195-162.socal.res.rr.com)
[03:45:43] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 244 seconds)
[03:46:30] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[03:51:18] *** Quits: falafel (~falafel@cpe-76-168-195-162.socal.res.rr.com) (Remote host closed the connection)
[03:52:15] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[03:52:36] *** Quits: Hayek (~xxx@2603-8000-b401-6099-7541-8f40-8f83-6bcb.res6.spectrum.com) (Ping timeout: 245 seconds)
[03:52:43] <kronicmage> does anyone know if it's possible to implement (!!) linearly?
[03:52:49] <kronicmage> linear on both the list and the index
[03:53:19] *** Joins: Kaiepi (~Kaiepi@156.34.44.192)
[03:53:42] *** Quits: nehsou^ (~nehsou@wsip-68-227-92-38.mc.at.cox.net) (Ping timeout: 260 seconds)
[03:53:49] *** Joins: rk04 (~rk04@user/rajk)
[03:54:20] *** Joins: nehsou^ (~nehsou@wsip-68-227-92-38.mc.at.cox.net)
[03:54:55] *** Quits: pparmin (~pparmin@p20030006214e0337dcae6b48c40f53cd.dip0.t-ipconnect.de) (Quit: Client closed)
[03:58:32] *** Quits: rk04 (~rk04@user/rajk) (Ping timeout: 265 seconds)
[03:59:58] *** Quits: dustee (~dustee@63.81.59.158) (Remote host closed the connection)
[04:04:24] <c_wraith> kronicmage: I'm not entirely sure what you are asking.  It *is* linear
[04:04:51] <kronicmage> the (!!) in base is not linear
[04:04:53] <kronicmage> c_wraith
[04:04:56] <c_wraith> yes, it is
[04:05:06] <awpr> linear typing vs. linear time complextiy
[04:05:13] <kronicmage> i do mean typing
[04:05:27] <kronicmage> (!!) in base has multiplicity many on both arguments
[04:05:38] <kronicmage> i want [a] %1-> Int %1 -> a
[04:06:06] <dolio> What does [a] mean linearly?
[04:06:07] <kronicmage> is it possible to do so without Consumable a?
[04:06:17] <kronicmage> dolio: -XLinearTypes
[04:06:23] *** Quits: nehsou^ (~nehsou@wsip-68-227-92-38.mc.at.cox.net) (Ping timeout: 264 seconds)
[04:06:27] <kronicmage> o wait
[04:06:29] <dolio> The function clearly doesn't 'use' all the elements of the list.
[04:06:29] <kronicmage> i see
[04:06:33] <kronicmage> yes the consumable is required
[04:06:35] <kronicmage> my bad
[04:06:41] <kronicmage> thank you dolio
[04:06:52] *** Joins: nehsou^ (~nehsou@wsip-68-227-92-38.mc.at.cox.net)
[04:08:25] *** Joins: Farzad (~FarzadBek@151.238.114.164)
[04:08:32] *** Quits: Farzad (~FarzadBek@151.238.114.164) (Client Quit)
[04:10:08] <kronicmage> does anyone know if there are tagless final mtl-style monad transformer type classes that are linear?
[04:10:25] <kronicmage> i know that linear-base has the explicit _T transformers, but not the typeclasses
[04:12:55] *** Quits: ente_ (~ente@p200300dc5f17790014214a4427ad1af6.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[04:16:02] *** Quits: mc47 (~mc47@xmonad/TheMC47) (Remote host closed the connection)
[04:16:28] *** Joins: Hayek (~xxx@2603-8000-b401-6099-7541-8f40-8f83-6bcb.res6.spectrum.com)
[04:32:10] *** Quits: myShoggoth (~myShoggot@97-120-85-195.ptld.qwest.net) (Ping timeout: 260 seconds)
[04:36:05] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[04:36:22] *** Joins: img (~img@user/img)
[04:37:36] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:4852:7354:5eb5:641f)
[04:37:47] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:41:46] *** Quits: Cajun (~Cajun@user/cajun) (Quit: Client closed)
[04:42:48] *** Joins: Cajun (~Cajun@user/cajun)
[04:48:01] *** Quits: evocatus (~evocatus@84.51.113.13) (Quit: Leaving)
[04:49:46] *** Quits: benin (~benin@183.82.207.116) (Ping timeout: 244 seconds)
[04:53:27] *** Joins: benin (~benin@183.82.207.116)
[04:55:21] *** Quits: brainfreeze (~brainfree@2a03:1b20:4:f011::20d) (Quit: Leaving)
[05:01:44] *** hololeap_ is now known as hololeap
[05:06:37] *** Joins: myShoggoth (~myShoggot@97-120-85-195.ptld.qwest.net)
[05:09:55] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[05:12:31] *** Quits: myShoggoth (~myShoggot@97-120-85-195.ptld.qwest.net) (Ping timeout: 244 seconds)
[05:20:08] *** Quits: larryba (~bc8165b6@217.29.117.252) (Quit: http://www.okay.uz/ (Session timeout))
[05:20:31] *** Quits: xff0x (~xff0x@2001:1a81:52c0:f300:1be9:ff56:80a8:5503) (Ping timeout: 245 seconds)
[05:22:21] *** Joins: xff0x (~xff0x@2001:1a81:52fb:1200:6ff2:1757:36ee:1f2f)
[05:23:30] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[05:26:24] *** Joins: lavaman (~lavaman@98.38.249.169)
[05:26:30] *** Joins: myShoggoth (~myShoggot@97-120-85-195.ptld.qwest.net)
[05:31:05] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 260 seconds)
[05:40:34] *** Quits: MQ-17J (~MQ-17J@d192-24-122-179.try.wideopenwest.com) (Read error: Connection reset by peer)
[05:40:42] *** Joins: MQ-17J (~MQ-17J@d192-24-122-179.try.wideopenwest.com)
[05:53:06] *** Quits: Topsi (~Tobias@dyndsl-095-033-090-025.ewe-ip-backbone.de) (Read error: Connection reset by peer)
[05:53:27] *** Quits: zaquest (~notzaques@5.128.210.178) (Quit: Leaving)
[05:53:55] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[06:03:16] *** Quits: peterhil (~peterhil@mobile-access-5672cd-211.dhcp.inet.fi) (Ping timeout: 252 seconds)
[06:06:23] *** Quits: bitmapper (uid464869@id-464869.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[06:07:12] *** Joins: hololeap_ (~hololeap@user/hololeap)
[06:07:39] *** Quits: hololeap (~hololeap@user/hololeap) (Ping timeout: 276 seconds)
[06:08:49] *** Quits: td_ (~td@muedsl-82-207-238-090.citykom.de) (Ping timeout: 244 seconds)
[06:10:49] *** Joins: td_ (~td@muedsl-82-207-238-060.citykom.de)
[06:12:30] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 260 seconds)
[06:14:09] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:19:41] *** Quits: MQ-17J (~MQ-17J@d192-24-122-179.try.wideopenwest.com) (Read error: Connection reset by peer)
[06:20:04] *** Joins: MQ-17J (~MQ-17J@d192-24-122-179.try.wideopenwest.com)
[06:22:07] <kronicmage> where can one find the default ifThenElse?
[06:22:08] *** Quits: MQ-17J (~MQ-17J@d192-24-122-179.try.wideopenwest.com) (Read error: Connection reset by peer)
[06:22:18] <kronicmage> for RebindableSyntax purposes
[06:23:10] <awpr> oddly enough I don't see it in base.  given that, I'd hazard a guess that it doesn't exist, and RebindableSyntax uses a binding of that name only if there is one in scope.  but that's only a guess
[06:32:17] *** Joins: MQ-17J (~MQ-17J@d192-24-122-179.try.wideopenwest.com)
[06:33:40] *** hololeap_ is now known as hololeap
[06:34:24] <janus> monochrom: lol, the speaker labels mtl as 'completely unusable' in that effects talk you referenced. i had not expected that
[06:35:07] <awpr> hmm, I think I've heard apocryphal tales of someone using mtl before, but I don't have a citation
[06:36:46] <hololeap> the dead sea scrolls foretold this would happen...
[06:39:03] *** Joins: peterhil (~peterhil@mobile-access-5672cd-211.dhcp.inet.fi)
[06:44:30] *** Quits: MQ-17J (~MQ-17J@d192-24-122-179.try.wideopenwest.com) (Read error: Connection reset by peer)
[06:44:37] *** Joins: MQ-17J (~MQ-17J@d192-24-122-179.try.wideopenwest.com)
[06:46:23] *** Joins: jkaye (~jkaye@2601:281:8300:7530:6274:3e6b:ca61:27ef)
[06:51:40] *** Quits: mvk (~mvk@2607:fea8:5cc1:300::4b63) (Ping timeout: 252 seconds)
[06:52:57] *** Joins: mikoto-chan (~mikoto-ch@185.237.102.117)
[06:53:19] *** Quits: peterhil (~peterhil@mobile-access-5672cd-211.dhcp.inet.fi) (Ping timeout: 252 seconds)
[06:57:19] *** Quits: connrs (~connrs@user/connrs) (Read error: Connection reset by peer)
[06:57:43] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 252 seconds)
[06:59:12] *** Joins: connrs (~connrs@user/connrs)
[06:59:16] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 245 seconds)
[07:03:26] *** Quits: mikoto-chan (~mikoto-ch@185.237.102.117) (Ping timeout: 258 seconds)
[07:05:14] *** Joins: mikoto-chan (~mikoto-ch@185.237.102.117)
[07:07:32] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:10:10] *** Quits: mikoto-chan (~mikoto-ch@185.237.102.117) (Ping timeout: 260 seconds)
[07:11:31] *** Joins: mikoto-chan (~mikoto-ch@185.237.102.117)
[07:14:40] *** Joins: InstX1 (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net)
[07:17:15] *** Quits: mikoto-chan (~mikoto-ch@185.237.102.117) (Ping timeout: 260 seconds)
[07:18:48] *** Quits: nehsou^ (~nehsou@wsip-68-227-92-38.mc.at.cox.net) (Remote host closed the connection)
[07:18:48] *** Joins: mikoto-chan (~mikoto-ch@185.237.102.117)
[07:19:35] *** Quits: InstX1 (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net) (Ping timeout: 260 seconds)
[07:23:05] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 260 seconds)
[07:23:40] *** Quits: mikoto-chan (~mikoto-ch@185.237.102.117) (Ping timeout: 260 seconds)
[07:24:15] *** Quits: [_] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[07:25:06] *** Joins: mikoto-chan (~mikoto-ch@185.237.102.117)
[07:27:17] *** Quits: Player001 (~Player001@user/player001) (Quit: Read Hegel and Lacan and Marx)
[07:30:27] *** Quits: mikoto-chan (~mikoto-ch@185.237.102.117) (Ping timeout: 244 seconds)
[07:32:21] *** Joins: mikoto-chan (~mikoto-ch@185.237.102.117)
[07:32:56] *** Quits: jkaye (~jkaye@2601:281:8300:7530:6274:3e6b:ca61:27ef) (Quit: Leaving)
[07:33:09] *** Joins: jkaye (~jkaye@2601:281:8300:7530:6274:3e6b:ca61:27ef)
[07:35:24] *** Joins: caef^ (~caef@wsip-68-227-92-38.mc.at.cox.net)
[07:37:58] *** Quits: mikoto-chan (~mikoto-ch@185.237.102.117) (Ping timeout: 265 seconds)
[07:39:39] *** Joins: mikoto-chan (~mikoto-ch@185.237.102.117)
[07:40:00] *** Quits: caef^ (~caef@wsip-68-227-92-38.mc.at.cox.net) (Ping timeout: 260 seconds)
[07:41:08] *** Joins: jonathanlorimer (~jonathanl@cpebc4dfba75b43-cmbc4dfba75b40.cpe.net.fido.ca)
[07:41:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[07:41:33] *** Joins: JonathanLorimer8 (~JonathanL@cpebc4dfba75b43-cmbc4dfba75b40.cpe.net.fido.ca)
[07:41:38] <jonathanlorimer> hi
[07:41:44] <jonathanlorimer> i am the real jonathanlorimer
[07:41:59] <JonathanLorimer8> Oh no
[07:42:04] <jonathanlorimer> just kidding he is
[07:42:07] *** Quits: jonathanlorimer (~jonathanl@cpebc4dfba75b43-cmbc4dfba75b40.cpe.net.fido.ca) (Client Quit)
[07:42:15] <JonathanLorimer8> Can someone approve jonathanlorimer on hackage?
[07:43:16] *** Quits: JonathanLorimer8 (~JonathanL@cpebc4dfba75b43-cmbc4dfba75b40.cpe.net.fido.ca) (Client Quit)
[07:44:25] *** Quits: mikoto-chan (~mikoto-ch@185.237.102.117) (Ping timeout: 244 seconds)
[07:44:38] *** Joins: caef^ (~caef@wsip-68-227-92-38.mc.at.cox.net)
[07:45:56] *** Joins: mikoto-chan (~mikoto-ch@185.237.102.117)
[07:46:32] <awpr> huh, they both quit.  was gonna say, https://hackage.haskell.org/users/register-request says you need to email Hackage trustees to get enabled (which is what I did just a few months ago)
[07:51:07] *** Quits: mikoto-chan (~mikoto-ch@185.237.102.117) (Ping timeout: 244 seconds)
[07:53:11] *** Joins: mikoto-chan (~mikoto-ch@185.237.102.117)
[07:53:26] *** Joins: bitmapper (uid464869@id-464869.lymington.irccloud.com)
[07:54:59] <awpr> oof, there are so many gotchas in quarantining unsafeCoerces behind safe APIs... just realized I exported a "field selector" generated by a pattern synonym, which can now be used with record update syntax to break type safety
[07:58:05] *** Quits: mikoto-chan (~mikoto-ch@185.237.102.117) (Ping timeout: 260 seconds)
[07:59:28] *** Joins: mikoto-chan (~mikoto-ch@185.237.102.117)
[07:59:50] <awpr> maybe record updates shouldn't be type-changing across type parameters with (declared?) nominal role?
[08:02:17] *** CnnibisIndica is now known as CannabisIndica
[08:05:05] *** Quits: mikoto-chan (~mikoto-ch@185.237.102.117) (Ping timeout: 260 seconds)
[08:06:46] *** Joins: mikoto-chan (~mikoto-ch@185.237.102.117)
[08:09:05] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[08:09:05] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[08:09:05] *** Joins: wroathe (~wroathe@user/wroathe)
[08:11:47] *** Quits: mikoto-chan (~mikoto-ch@185.237.102.117) (Ping timeout: 244 seconds)
[08:14:02] *** Joins: mikoto-chan (~mikoto-ch@185.237.102.117)
[08:17:50] *** Joins: trainlag1602 (~saroa@user/trainlag1602)
[08:17:50] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[08:18:31] *** Quits: mikoto-chan (~mikoto-ch@185.237.102.117) (Ping timeout: 244 seconds)
[08:20:15] *** Joins: rk04 (~rk04@user/rajk)
[08:20:20] *** Joins: mikoto-chan (~mikoto-ch@185.237.102.117)
[08:23:23] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:24:01] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[08:24:55] *** Quits: rk04 (~rk04@user/rajk) (Ping timeout: 260 seconds)
[08:25:44] *** Quits: mikoto-chan (~mikoto-ch@185.237.102.117) (Ping timeout: 244 seconds)
[08:27:36] *** Joins: mikoto-chan (~mikoto-ch@185.237.102.117)
[08:27:54] *** Parts: trainlag1602 (~saroa@user/trainlag1602) ()
[08:28:55] *** Quits: dolio (~dolio@130.44.130.54) (Quit: ZNC 1.8.2 - https://znc.in)
[08:31:56] *** Quits: mikoto-chan (~mikoto-ch@185.237.102.117) (Ping timeout: 244 seconds)
[08:33:51] *** Joins: mikoto-chan (~mikoto-ch@185.237.102.117)
[08:34:01] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[08:34:01] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[08:34:01] *** Joins: wroathe (~wroathe@user/wroathe)
[08:38:15] *** Joins: dolio (~dolio@130.44.130.54)
[08:38:30] *** Quits: dolio (~dolio@130.44.130.54) (Remote host closed the connection)
[08:38:55] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[08:39:18] *** Quits: mikoto-chan (~mikoto-ch@185.237.102.117) (Ping timeout: 260 seconds)
[08:40:19] *** Joins: dolio (~dolio@130.44.130.54)
[08:40:54] *** Quits: dolio (~dolio@130.44.130.54) (Client Quit)
[08:41:08] *** Joins: mikoto-chan (~mikoto-ch@185.237.102.117)
[08:41:40] *** Joins: dolio (~dolio@130.44.130.54)
[08:45:28] *** Joins: ravan (~ravan@user/ravan)
[08:45:59] *** Quits: mikoto-chan (~mikoto-ch@185.237.102.117) (Ping timeout: 264 seconds)
[08:47:25] *** Joins: mikoto-chan (~mikoto-ch@185.237.102.117)
[08:47:25] *** Joins: mbuf (~Shakthi@223.178.97.156)
[08:52:07] *** Quits: MQ-17J (~MQ-17J@d192-24-122-179.try.wideopenwest.com) (Read error: Connection reset by peer)
[08:52:37] *** Quits: mikoto-chan (~mikoto-ch@185.237.102.117) (Ping timeout: 244 seconds)
[08:52:57] *** Quits: dolio (~dolio@130.44.130.54) (Quit: ZNC 1.8.2 - https://znc.in)
[08:53:10] *** Joins: MQ-17J (~MQ-17J@8.21.10.17)
[08:53:50] *** Joins: dolio (~dolio@130.44.130.54)
[08:54:42] *** Joins: mikoto-chan (~mikoto-ch@185.237.102.117)
[09:00:06] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 245 seconds)
[09:00:18] *** Quits: mikoto-chan (~mikoto-ch@185.237.102.117) (Ping timeout: 260 seconds)
[09:01:05] *** Quits: myShoggoth (~myShoggot@97-120-85-195.ptld.qwest.net) (Ping timeout: 260 seconds)
[09:01:58] <Hecate> juri_, Cale for that matter I hihgly respect and support lib.rs' decision
[09:02:00] *** Joins: mikoto-chan (~mikoto-ch@185.237.102.117)
[09:05:31] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 244 seconds)
[09:06:33] *** Quits: mikoto-chan (~mikoto-ch@185.237.102.117) (Ping timeout: 244 seconds)
[09:06:46] *** Joins: ravan (~ravan@42.201.198.151)
[09:06:49] *** Quits: ravan (~ravan@42.201.198.151) (Client Quit)
[09:08:16] *** Joins: mikoto-chan (~mikoto-ch@185.237.102.117)
[09:13:50] *** Quits: mikoto-chan (~mikoto-ch@185.237.102.117) (Ping timeout: 260 seconds)
[09:15:32] *** Joins: mikoto-chan (~mikoto-ch@185.237.102.117)
[09:18:51] *** Joins: zaquest (~notzaques@5.128.210.178)
[09:20:55] *** Quits: mikoto-chan (~mikoto-ch@185.237.102.117) (Ping timeout: 265 seconds)
[09:22:48] *** Joins: mikoto-chan (~mikoto-ch@185.237.102.117)
[09:24:01] *** Quits: Hayek (~xxx@2603-8000-b401-6099-7541-8f40-8f83-6bcb.res6.spectrum.com) (Ping timeout: 252 seconds)
[09:26:21] *** Quits: jkaye (~jkaye@2601:281:8300:7530:6274:3e6b:ca61:27ef) (Ping timeout: 245 seconds)
[09:27:41] *** Quits: mikoto-chan (~mikoto-ch@185.237.102.117) (Ping timeout: 265 seconds)
[09:27:49] *** Joins: lavaman (~lavaman@98.38.249.169)
[09:29:05] *** Joins: mikoto-chan (~mikoto-ch@185.237.102.117)
[09:32:04] *** Quits: mikoto-chan (~mikoto-ch@185.237.102.117) (Read error: No route to host)
[09:32:47] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 264 seconds)
[09:33:42] *** Joins: benin5 (~benin@183.82.207.116)
[09:34:30] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[09:35:47] *** Joins: rk04 (~rk04@user/rajk)
[09:36:05] *** Quits: benin (~benin@183.82.207.116) (Ping timeout: 260 seconds)
[09:36:05] *** benin5 is now known as benin
[09:36:21] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[09:37:21] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:40:26] *** Quits: rk04 (~rk04@user/rajk) (Ping timeout: 260 seconds)
[09:45:59] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 264 seconds)
[09:47:38] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[09:53:18] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 265 seconds)
[09:54:55] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[09:58:45] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[09:59:16] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 244 seconds)
[10:01:12] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[10:06:30] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 244 seconds)
[10:08:21] *** Joins: Hayek (~xxx@2603-8000-b401-6099-b41b-43a8-70e4-3938.res6.spectrum.com)
[10:08:28] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[10:12:15] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[10:12:36] *** Quits: Hayek (~xxx@2603-8000-b401-6099-b41b-43a8-70e4-3938.res6.spectrum.com) (Ping timeout: 245 seconds)
[10:14:11] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 264 seconds)
[10:15:44] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[10:20:17] *** Joins: takuan (~takuan@178-116-218-225.access.telenet.be)
[10:20:51] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 265 seconds)
[10:22:01] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[10:27:37] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 265 seconds)
[10:29:17] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[10:32:09] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Read error: No route to host)
[10:36:26] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[10:36:34] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[10:40:08] *** Joins: Hayek (~xxx@2603-8000-b401-6099-b41b-43a8-70e4-3938.res6.spectrum.com)
[10:40:41] *** Quits: aegon (~mike@174.127.249.180) (Remote host closed the connection)
[10:41:34] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 260 seconds)
[10:42:51] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[10:48:25] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 260 seconds)
[10:50:07] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[10:54:58] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 258 seconds)
[10:56:24] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[10:58:04] *** Quits: Hayek (~xxx@2603-8000-b401-6099-b41b-43a8-70e4-3938.res6.spectrum.com) (Ping timeout: 252 seconds)
[11:01:55] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 252 seconds)
[11:02:36] *** Joins: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr)
[11:03:42] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[11:05:01] *** Joins: alzgh (~alzgh@user/alzgh)
[11:07:57] *** Quits: phma (~phma@host-67-44-208-174.hnremote.net) (Read error: Connection reset by peer)
[11:09:00] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 244 seconds)
[11:09:12] *** Joins: phma (~phma@host-67-44-208-101.hnremote.net)
[11:10:58] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[11:11:58] *** obviyus_ is now known as obviyus
[11:12:35] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[11:15:05] *** Quits: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr) (Remote host closed the connection)
[11:15:40] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 252 seconds)
[11:17:15] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[11:18:14] *** Joins: _ht (~quassel@82-169-194-8.biz.kpn.net)
[11:18:22] *** Joins: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr)
[11:18:36] *** Quits: caef^ (~caef@wsip-68-227-92-38.mc.at.cox.net) (Remote host closed the connection)
[11:18:44] *** Quits: ircbrowse_tom_ (~ircbrowse@static.162.49.55.162.clients.your-server.de) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[11:19:13] *** Joins: ircbrowse_tom (~ircbrowse@2a01:4f8:1c1c:9319::1)
[11:22:31] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:4852:7354:5eb5:641f) (Remote host closed the connection)
[11:22:36] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 245 seconds)
[11:22:42] *** Joins: ubert (~Thunderbi@178.115.74.156.wireless.dyn.drei.com)
[11:24:32] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[11:24:57] *** Quits: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr) (Remote host closed the connection)
[11:26:08] *** Joins: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk)
[11:26:21] *** Joins: unit73e (~emanuel@2001:818:e8dd:7c00:32b5:c2ff:fe6b:5291)
[11:26:43] *** Quits: darkstarx (~darkstard@2601:1c2:300:c8a0::6c32) (Remote host closed the connection)
[11:27:03] *** Joins: darkstarx (~darkstard@2601:1c2:300:c8a0::6c32)
[11:29:16] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 245 seconds)
[11:30:48] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[11:35:46] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:36:15] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 260 seconds)
[11:38:05] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[11:38:30] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:43:50] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 260 seconds)
[11:45:21] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[11:46:30] *** Joins: Hayek (~xxx@2603-8000-b401-6099-b41b-43a8-70e4-3938.res6.spectrum.com)
[11:49:42] *** Joins: wei2912 (~wei2912@138.75.71.147)
[11:50:11] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 264 seconds)
[11:51:23] *** Quits: Hayek (~xxx@2603-8000-b401-6099-b41b-43a8-70e4-3938.res6.spectrum.com) (Ping timeout: 264 seconds)
[11:51:37] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[11:55:16] *** Quits: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net) (Quit: zzz)
[11:56:18] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[11:57:23] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 264 seconds)
[11:58:16] *** Quits: poljar (~poljar@93-139-113-226.adsl.net.t-com.hr) (Remote host closed the connection)
[11:58:29] *** Joins: poljar (~poljar@93-139-113-226.adsl.net.t-com.hr)
[11:59:09] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[12:01:20] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[12:02:17] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:02:56] *** Quits: martin02 (~silas@141.84.69.76) (Quit: WeeChat 3.2)
[12:07:53] *** Joins: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr)
[12:10:14] *** Joins: dsp (~dsp@cpc152107-haye27-2-0-cust227.17-4.cable.virginm.net)
[12:11:04] <maerwald> Hecate: it's not particularly accurate wrt "energy waste"
[12:14:00] *** Joins: acidjnk_new3 (~acidjnk@p200300d0c703cb55ecd1c0be3c49da81.dip0.t-ipconnect.de)
[12:14:18] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[12:18:14] *** Quits: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr) (Remote host closed the connection)
[12:22:55] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:a193:fe09:637c:a86c)
[12:25:29] *** Quits: ozzymcduff (~mathieu@81-234-151-21-no94.tbcn.telia.com) (Remote host closed the connection)
[12:27:23] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:a193:fe09:637c:a86c) (Ping timeout: 264 seconds)
[12:27:29] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[12:27:48] *** Joins: ozzymcduff (~mathieu@81-234-151-21-no94.tbcn.telia.com)
[12:30:14] *** Quits: ixlun (~ixlun@2001:470:69fc:105::41b3) (Quit: You have been kicked for being idle)
[12:32:52] *** Quits: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk) (Remote host closed the connection)
[12:35:51] *** Joins: Hayek (~xxx@2603-8000-b401-6099-b41b-43a8-70e4-3938.res6.spectrum.com)
[12:36:31] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[12:40:35] *** Quits: Hayek (~xxx@2603-8000-b401-6099-b41b-43a8-70e4-3938.res6.spectrum.com) (Ping timeout: 264 seconds)
[12:40:57] *** Joins: rk04 (~rk04@user/rajk)
[12:42:07] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[12:42:16] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[12:44:42] *** Joins: jumper149 (~jumper149@80.240.31.34)
[12:45:04] *** Joins: ulvarrefr (~user@185.24.53.152)
[12:46:21] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Remote host closed the connection)
[12:47:08] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[12:56:59] *** Quits: rk04 (~rk04@user/rajk) (Ping timeout: 244 seconds)
[12:57:20] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 260 seconds)
[12:58:13] *** Quits: tafa (~tafa@2a04:52c0:101:85c::1) (Quit: ZNC - https://znc.in)
[12:58:13] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[12:58:46] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[13:00:50] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 260 seconds)
[13:01:12] *** Joins: jinsun (~quassel@user/jinsun)
[13:02:35] *** Joins: tafa (~tafa@5.2.76.31)
[13:03:10] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Ping timeout: 260 seconds)
[13:05:26] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[13:11:37] *** Joins: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk)
[13:15:21] *** Joins: rk04 (~rk04@user/rajk)
[13:16:02] *** Quits: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk) (Ping timeout: 260 seconds)
[13:17:21] <zincy> Wow I didn't realise how much more optics offered than just "fixing the record problem"
[13:18:10] <zincy> Many complain that code using lens is hard to read.
[13:18:15] *** Joins: mei (~mei@user/mei)
[13:18:17] <zincy> Is that fair?
[13:18:42] <[exa]> [lens_operator_spray_meme.jpg]
[13:18:53] <unit73e>  I don't find it particularly hard
[13:19:03] <unit73e> just kind of quirky with all the ' and _
[13:20:20] <[exa]> the thing I find problematic is that people tend to easily converge to using the 5435th variant of some (^.~~^!%^.) operator, which is not readable at all
[13:20:58] *** Joins: msmhbd^ (~msmhbd@wsip-68-227-92-38.mc.at.cox.net)
[13:24:17] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[13:24:44] *** Joins: gaspare (~gastel@151.63.119.74)
[13:26:52] <zincy> Seems very readable as long as you stray from those longer operators
[13:27:01] *** Quits: gaspare (~gastel@151.63.119.74) (Client Quit)
[13:27:02] *** Joins: Hayek (~xxx@2603-8000-b401-6099-b41b-43a8-70e4-3938.res6.spectrum.com)
[13:27:17] <zincy> And some languages ban infix as unreadable ha
[13:28:48] *** Joins: Guest38 (~Guest38@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[13:29:34] *** Joins: lavaman (~lavaman@98.38.249.169)
[13:31:16] *** Joins: fendor (~fendor@77.119.214.28.wireless.dyn.drei.com)
[13:31:22] *** Quits: Hayek (~xxx@2603-8000-b401-6099-b41b-43a8-70e4-3938.res6.spectrum.com) (Ping timeout: 258 seconds)
[13:32:38] *** Joins: img (~img@user/img)
[13:34:03] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 258 seconds)
[13:37:17] <[exa]> zincy: like it helps, if you've got a table of "commands" where the separator is `set` vs a table where the separator is just ^., it's better
[13:39:46] <[exa]> I'm now trying to make local operators instead of using the complicated standard ones, the source is usually shorter and you have a proper "readable" definition hangin right next to the code in a let/where block
[13:43:08] *** Parts: jakalx (~jakalx@base.jakalx.net) (Error from remote client)
[13:46:54] <zincy> Yeah that is a good idea
[13:47:25] <zincy> Best of both worlds, name your custom operators
[13:47:59] <zincy> I'm thinking about modelling a card game as a Mealy machine
[13:48:26] *** Quits: msmhbd^ (~msmhbd@wsip-68-227-92-38.mc.at.cox.net) (Ping timeout: 245 seconds)
[13:48:43] <zincy> Wondering if I will get a more principled approach to validating user moves and separating user actions from game progression actions
[13:49:17] <zincy> When everyone has made a move and the turn is over there is a different kind of state transition where we deal the next card
[13:49:50] <[exa]> with card games the rulechecking may get pretty nasty
[13:50:01] <zincy> Yeah
[13:50:13] <zincy> The validation of rules is nasty
[13:50:31] <[exa]> actually you might want products of mealy machines
[13:50:52] <[exa]> N machines for checking all players, a few extra machines for checking the global rules
[13:50:57] <zincy> player is a mealy machine and game is a mealy machine?
[13:51:28] *** Joins: msmhbd^ (~msmhbd@wsip-68-227-92-38.mc.at.cox.net)
[13:51:35] <zincy> ooh :D
[13:51:41] <[exa]> like, this might be a good way to fight the complexity of building the whole state checker yourself
[13:51:56] <zincy> Exciting thanks!
[13:52:31] <[exa]> coding it ain't much hard either, but with having the composition abstracted out you kinda ensure that you don't forget about something when composing it manually
[13:52:51] *** Quits: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67) (Quit: Leaving)
[13:53:47] <[exa]> that said, regarding the machines in latex, I'm still missing a suitable regex-like DFA compiler
[13:54:02] <[exa]> s/latex/haskell/ wHaT a TyPo
[13:55:38] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[13:55:43] <zincy> So is the idea about breaking down big transition functions into smaller ones
[13:56:03] <zincy> I guess different game states would be different machines
[13:56:24] <zincy> An inactive game table has different rules to an active game
[13:58:24] <[exa]> I'd go for "small coherent parts of the ruleset to keep are different machies"
[13:59:05] <[exa]> then just combine a bunch of those with https://en.wikipedia.org/wiki/Deterministic_finite_automaton#/media/File:Intersection1.png
[13:59:05] *** Joins: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk)
[13:59:41] *** Quits: ubert (~Thunderbi@178.115.74.156.wireless.dyn.drei.com) (Ping timeout: 245 seconds)
[14:02:01] <zincy> So machines represent rules such as nextPlayerPositionToAct
[14:03:09] *** Joins: __monty__ (~toonn@user/toonn)
[14:11:47] *** Joins: Farzad (~FarzadBek@151.238.114.164)
[14:11:49] *** Joins: Liudvikas (~Liudvikas@88.222.185.135)
[14:13:15] *** Quits: Liudvikas (~Liudvikas@88.222.185.135) (Client Quit)
[14:16:20] *** Joins: Hayek (~xxx@2603-8000-b401-6099-b41b-43a8-70e4-3938.res6.spectrum.com)
[14:17:45] *** Joins: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr)
[14:20:47] *** Quits: Hayek (~xxx@2603-8000-b401-6099-b41b-43a8-70e4-3938.res6.spectrum.com) (Ping timeout: 264 seconds)
[14:22:51] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:23:10] *** Joins: MoC (~moc@user/moc)
[14:23:35] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[14:24:46] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:a193:fe09:637c:a86c)
[14:29:11] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:a193:fe09:637c:a86c) (Ping timeout: 264 seconds)
[14:30:01] *** Quits: acidjnk_new3 (~acidjnk@p200300d0c703cb55ecd1c0be3c49da81.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[14:32:51] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Remote host closed the connection)
[14:33:18] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[14:33:28] *** Quits: stiell (~stiell@gateway/tor-sasl/stiell) (Remote host closed the connection)
[14:35:19] *** Joins: stiell (~stiell@gateway/tor-sasl/stiell)
[14:38:08] *** Joins: jakalx (~jakalx@base.jakalx.net)
[14:50:31] *** Quits: Guest38 (~Guest38@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Quit: Client closed)
[14:53:26] *** Quits: rk04 (~rk04@user/rajk) (Ping timeout: 245 seconds)
[14:55:45] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[14:56:01] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:00:56] *** Quits: n3t (n3t@s45.mydevil.net) (Changing host)
[15:00:56] *** Joins: n3t (n3t@user/n3t)
[15:01:35] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[15:02:24] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:07:40] *** Joins: rk04 (~rk04@user/rajk)
[15:12:58] *** Quits: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk) (Remote host closed the connection)
[15:16:51] *** Quits: phma (~phma@host-67-44-208-101.hnremote.net) (Read error: Connection reset by peer)
[15:17:10] *** Quits: rk04 (~rk04@user/rajk) (Ping timeout: 258 seconds)
[15:17:47] *** Joins: phma (~phma@host-67-44-209-31.hnremote.net)
[15:19:46] *** Joins: Hayek (~xxx@2603-8000-b401-6099-b41b-43a8-70e4-3938.res6.spectrum.com)
[15:21:36] *** Joins: gaspare (~gastel@151.63.119.74)
[15:24:23] *** Quits: Hayek (~xxx@2603-8000-b401-6099-b41b-43a8-70e4-3938.res6.spectrum.com) (Ping timeout: 264 seconds)
[15:26:42] *** Joins: notzmv (~zmv@user/notzmv)
[15:31:09] *** Quits: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr) (Ping timeout: 265 seconds)
[15:34:02] *** Joins: Guest|34 (~Guest|34@65.49.199.186.16clouds.com)
[15:34:30] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[15:35:20] *** Joins: peterhil (~peterhil@mobile-access-5672cd-211.dhcp.inet.fi)
[15:38:21] *** Quits: gaspare (~gastel@151.63.119.74) (Quit: Going offline, see ya! (www.adiirc.com))
[15:41:47] *** Quits: Guest|34 (~Guest|34@65.49.199.186.16clouds.com) (Quit: Ping timeout (120 seconds))
[15:41:57] *** Joins: sprout_ (~quassel@86-82-44-193.fixed.kpn.net)
[15:43:30] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[15:44:03] *** Joins: rk04 (~rk04@user/rajk)
[15:45:20] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:5d6e:87c6:1a95:cc2d) (Ping timeout: 260 seconds)
[15:48:12] *** Joins: Guest|34 (~Guest|34@65.49.199.186.16clouds.com)
[15:52:32] *** Joins: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk)
[15:52:32] *** Joins: tfeb (~tfb@88.98.95.237)
[15:55:17] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Remote host closed the connection)
[15:56:18] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[15:57:15] *** Quits: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk) (Ping timeout: 265 seconds)
[15:59:16] *** Quits: Guest|34 (~Guest|34@65.49.199.186.16clouds.com) (Quit: Ping timeout (120 seconds))
[16:03:42] *** Quits: tfeb (~tfb@88.98.95.237) (Quit: died)
[16:09:27] *** Quits: dsp (~dsp@cpc152107-haye27-2-0-cust227.17-4.cable.virginm.net) (Remote host closed the connection)
[16:09:49] *** Joins: dsp (~dsp@cpc152107-haye27-2-0-cust227.17-4.cable.virginm.net)
[16:09:54] *** Quits: dsp (~dsp@cpc152107-haye27-2-0-cust227.17-4.cable.virginm.net) (Remote host closed the connection)
[16:11:20] *** Joins: dajoer (~david@user/gvx)
[16:12:52] *** Quits: wei2912 (~wei2912@138.75.71.147) (Quit: Lost terminal)
[16:14:16] *** Joins: mc47 (~mc47@xmonad/TheMC47)
[16:18:59] *** Joins: Hayek (~xxx@2603-8000-b401-6099-b41b-43a8-70e4-3938.res6.spectrum.com)
[16:19:07] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[16:19:53] *** Joins: Pickchea (~private@user/pickchea)
[16:23:01] *** Quits: Hayek (~xxx@2603-8000-b401-6099-b41b-43a8-70e4-3938.res6.spectrum.com) (Ping timeout: 245 seconds)
[16:26:43] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:a193:fe09:637c:a86c)
[16:30:56] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:a193:fe09:637c:a86c) (Ping timeout: 245 seconds)
[16:31:30] *** Joins: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk)
[16:35:46] *** Quits: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk) (Ping timeout: 252 seconds)
[16:36:18] *** Joins: machinedgod (~machinedg@24.105.81.50)
[16:41:16] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 252 seconds)
[16:49:37] *** Quits: zincy (~tom@2a00:23c8:970c:4801:8009:c2de:a6e:7c44) (Remote host closed the connection)
[16:49:41] *** Joins: tom_ (~tom@host86-181-60-139.range86-181.btcentralplus.com)
[16:52:16] *** Joins: fuzzypixelz (~fuzzypixe@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[16:52:28] <fuzzypixelz> .
[16:52:37] *** Quits: fuzzypixelz (~fuzzypixe@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Client Quit)
[16:53:17] *** Quits: mbuf (~Shakthi@223.178.97.156) (Quit: Leaving)
[17:00:28] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[17:04:25] *** Joins: kilolympus (~kilolympu@185.65.135.177)
[17:04:32] *** Joins: hololeap (~hololeap@user/hololeap)
[17:05:59] *** Joins: Pickchea (~private@user/pickchea)
[17:25:21] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[17:25:24] *** Joins: rekahsoft (~rekahsoft@cpe0008a20f982f-cm64777d666260.cpe.net.cable.rogers.com)
[17:28:00] *** Quits: rekahsoft (~rekahsoft@cpe0008a20f982f-cm64777d666260.cpe.net.cable.rogers.com) (Remote host closed the connection)
[17:30:48] *** Joins: iammrinal0[m] (~iammrinal@2001:470:69fc:105::1:2248)
[17:35:00] *** Quits: tom_ (~tom@host86-181-60-139.range86-181.btcentralplus.com) (Quit: Leaving)
[17:35:17] *** Joins: tom_ (~tom@2a00:23c8:970c:4801:5b6a:e81b:79dc:f684)
[17:35:22] *** Quits: tom_ (~tom@2a00:23c8:970c:4801:5b6a:e81b:79dc:f684) (Client Quit)
[17:35:37] *** Joins: zincy (~tom@2a00:23c8:970c:4801:5b6a:e81b:79dc:f684)
[17:37:20] *** Joins: buona (~buona@fi-19-194-76.service.infuturo.it)
[17:37:33] <buona> list
[17:37:46] *** Quits: buona (~buona@fi-19-194-76.service.infuturo.it) (Remote host closed the connection)
[17:38:40] *** Joins: mishugana (~mishugana@user/mishugana)
[17:42:04] *** Joins: rekahsoft (~rekahsoft@cpe0008a20f982f-cm64777d666260.cpe.net.cable.rogers.com)
[17:42:08] *** Joins: buona (~buona@fi-19-194-76.service.infuturo.it)
[17:42:38] *** Joins: son0p (~ff@181.136.122.143)
[17:43:02] <mishugana> hello folks, beginner here, have a question about upping my Haskell game.
[17:43:21] <mishugana> So I've finished Graham Hutton's "Programming in Haskell" (2nd Edition), which was great. Given that, how would you recommend I progress from here?
[17:43:21] <mishugana> My main aim is not research but general-purpose programming as well as a special interest in compilers, if that helps
[17:43:40] <mishugana> For reference, after finishing the book, I took a look at the HaskellWiki page for Monad Transformers, but was sorely disappointed that I couldn't make it past halfway through.
[17:44:44] *** Quits: buona (~buona@fi-19-194-76.service.infuturo.it) (Remote host closed the connection)
[17:45:48] *** Quits: dajoer (~david@user/gvx) (Quit: leaving)
[17:53:17] *** Parts: mishugana (~mishugana@user/mishugana) ()
[17:53:38] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Quit: Leaving)
[17:58:01] *** Quits: rk04 (~rk04@user/rajk) (Ping timeout: 245 seconds)
[17:58:16] <zincy> Have a look at https://haskellbook.com/
[17:58:56] <zincy> There is a chapter on monad transformers too.
[17:59:48] *** Quits: MoC (~moc@user/moc) (Quit: Konversation terminated!)
[18:00:16] *** Joins: MoC (~moc@user/moc)
[18:00:37] <hpc> there's a lot of stuff on https://www.haskell.org/documentation/ too
[18:00:38] <zincy> "Thinking with Types" by Sandy Maguire is a good read too
[18:00:44] <hpc> even beyond books/tutorials
[18:02:42] <Profpatsch> As Shea LaBeouf would say “do it! Just … do it!
[18:03:41] <zincy> Diving into a project and asking here when you get stuck is a really good way to get to intermediate
[18:04:07] *** Joins: max22- (~maxime@2a01cb0883359800e0f5f648c85a67fc.ipv6.abo.wanadoo.fr)
[18:05:58] *** Quits: rekahsoft (~rekahsoft@cpe0008a20f982f-cm64777d666260.cpe.net.cable.rogers.com) (Remote host closed the connection)
[18:08:37] *** Joins: Pickchea (~private@user/pickchea)
[18:13:51] <maerwald> yeah, burn all the books and open your editor
[18:15:44] *** Joins: lavaman (~lavaman@98.38.249.169)
[18:16:11] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 258 seconds)
[18:18:05] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[18:20:19] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 265 seconds)
[18:20:37] *** Joins: benin8 (benin@gateway/vpn/protonvpn/benin)
[18:22:04] *** Joins: dsp (~dsp@cpc152107-haye27-2-0-cust227.17-4.cable.virginm.net)
[18:22:50] *** Quits: benin (~benin@183.82.207.116) (Ping timeout: 260 seconds)
[18:22:51] *** benin8 is now known as benin
[18:23:34] *** Joins: myShoggoth (~myShoggot@97-120-85-195.ptld.qwest.net)
[18:26:46] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[18:33:17] <kronicmage> hey does anyone know what the default confidence is for checkCoverage in Test.QuickCheck?
[18:39:26] *** Quits: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net) (Ping timeout: 260 seconds)
[18:39:34] *** Joins: Null_A (~null_a@2601:645:8700:2290:f415:c2d6:236d:7d8b)
[18:41:15] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[18:43:51] *** Quits: Null_A (~null_a@2601:645:8700:2290:f415:c2d6:236d:7d8b) (Ping timeout: 245 seconds)
[18:47:06] *** Joins: Guest9035 (~Guest90@69.166.185.81.rev.sfr.net)
[18:48:49] *** Joins: benin8 (benin@gateway/vpn/protonvpn/benin)
[18:50:02] *** Joins: jkaye (~jkaye@2601:281:8300:7530:c3d4:ecc4:d44c:ce60)
[18:51:50] *** Quits: benin (benin@gateway/vpn/protonvpn/benin) (Ping timeout: 258 seconds)
[18:51:50] *** benin8 is now known as benin
[18:51:59] *** Quits: myShoggoth (~myShoggot@97-120-85-195.ptld.qwest.net) (Ping timeout: 264 seconds)
[18:55:35] *** Joins: zmt00 (~zmt00@user/zmt00)
[18:58:09] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 244 seconds)
[18:58:32] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[18:58:39] *** Quits: msmhbd^ (~msmhbd@wsip-68-227-92-38.mc.at.cox.net) (Remote host closed the connection)
[19:00:17] <Guest9035> hello
[19:00:28] <janus> Guest9035: HELLO
[19:00:35] <Guest9035> if I have a module that only includes class instances, how do I import it?
[19:00:51] <Guest9035> janus: how are you doing today
[19:01:02] <jkaye> Same way would would import any other module
[19:01:07] <janus> Guest9035: i think you can do "import Module ()" and it will get only the instances. but you could just import all of it
[19:01:09] <jkaye> you would**
[19:01:35] <janus> depends on whether you have -Wexplicit-import-lists on or not
[19:01:43] <janus> (which i like)
[19:01:57] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[19:03:22] <merijn> Having a module with *only* class instances sounds questionable
[19:04:08] <maerwald> I  think that's fine
[19:04:10] <Guest9035> wel there are a couple functions, but it's only the instances I need
[19:05:26] <merijn> maerwald: Well, if it only has instances it, by definition, has to be all orphans :p
[19:05:32] <maerwald> so?
[19:05:56] <maerwald> provide a PR and wait 6 months before you can complete your code?
[19:07:30] *** Joins: rk04 (~rk04@user/rajk)
[19:08:14] *** Joins: benin5 (~benin@183.82.207.116)
[19:08:56] *** Quits: benin (benin@gateway/vpn/protonvpn/benin) (Remote host closed the connection)
[19:08:56] *** benin5 is now known as benin
[19:10:02] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 244 seconds)
[19:10:04] *** Joins: jinsun__ (~quassel@user/jinsun)
[19:11:22] *** Joins: Null_A (~null_a@2601:645:8700:2290:f415:c2d6:236d:7d8b)
[19:12:09] *** Quits: rk04 (~rk04@user/rajk) (Ping timeout: 258 seconds)
[19:15:27] *** Quits: dsp (~dsp@cpc152107-haye27-2-0-cust227.17-4.cable.virginm.net) (Quit: Leaving)
[19:19:22] *** jinsun__ is now known as jinsun
[19:21:02] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[19:21:24] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[19:23:41] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[19:23:42] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[19:23:42] *** Joins: wroathe (~wroathe@user/wroathe)
[19:27:26] *** Quits: Guest9035 (~Guest90@69.166.185.81.rev.sfr.net) (Quit: Client closed)
[19:28:30] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[19:33:40] *** Joins: myShoggoth (~myShoggot@97-120-85-195.ptld.qwest.net)
[19:33:50] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[19:34:43] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[19:34:53] *** Quits: Partmedia (~kevinz@172-221-159-029.res.spectrum.com) (Ping timeout: 264 seconds)
[19:35:21] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[19:36:40] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[19:37:03] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[19:39:08] *** Joins: Partmedia (~kevinz@172-221-159-029.res.spectrum.com)
[19:39:35] *** Joins: ubert (~Thunderbi@91.141.57.54.wireless.dyn.drei.com)
[19:39:50] *** Quits: ArtVandelayer (~ArtVandel@ip174-68-147-20.lv.lv.cox.net) (Ping timeout: 260 seconds)
[19:41:06] *** Joins: Hayek (~xxx@2603-8000-b401-6099-b41b-43a8-70e4-3938.res6.spectrum.com)
[19:42:52] *** Joins: benin4 (~benin@106.198.88.230)
[19:43:06] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 244 seconds)
[19:44:47] *** Joins: hyiltiz (~quassel@31.220.5.250)
[19:45:07] *** Quits: benin (~benin@183.82.207.116) (Ping timeout: 258 seconds)
[19:45:08] *** benin4 is now known as benin
[19:46:37] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[19:50:11] *** Quits: benin (~benin@106.198.88.230) (Read error: Connection reset by peer)
[19:52:04] *** Joins: benin (~benin@183.82.207.116)
[19:53:16] *** Quits: kilolympus (~kilolympu@185.65.135.177) (Remote host closed the connection)
[19:53:44] *** Joins: juand (~a@p200300ef973db1c64086f0a6a24fc4dd.dip0.t-ipconnect.de)
[19:55:29] <juand> Using guards I check n > m, n < m, n == m, n, m :: Natural, yet GHC says incomplete pattern matches. Is it supposed to be like this?
[19:56:19] <ski> use `compare' ?
[19:56:19] <merijn> juand: Yes
[19:56:34] <merijn> juand: Because GHC doesn't have a complete logic solver to determine that
[19:56:39] <merijn> But yeah, use compare
[19:56:39] <ski>   case n `compare` m of
[19:56:45] <ski>     GT -> ..
[19:56:45] *** Joins: kilolympus (~kilolympu@185.65.135.177)
[19:56:47] <merijn> > compare 2 3
[19:56:49] <lambdabot>  LT
[19:56:52] <ski>     EQ -> ..
[19:56:54] <ski>     LT -> ..
[19:56:56] <hpc> :t compare
[19:56:57] <lambdabot> Ord a => a -> a -> Ordering
[19:56:59] <hpc> @src Ordering
[19:56:59] <lambdabot> data Ordering = LT | EQ | GT
[19:57:36] <juand> That is a good idea.
[19:57:42] <ski> (`compare' may be cheaper, in general, too)
[19:58:16] <merijn> you only compare once too
[19:59:10] <merijn> juand: Anyway, to answer the initial question, you'd have to teach GHC about laws for total ordering (and then assume Ord does indeed obey those, etc.) for it to be able to see those cases are complete
[20:00:11] <ski> basically, using guards, it's hard to determine when you're exhaustive (unless you use a catch-all, like `otherwise' or a later defining equation that always matches), as well as checking for overlap
[20:00:34] *** Joins: ArtVandelayer (~ArtVandel@ip174-68-147-20.lv.lv.cox.net)
[20:00:45] <ski> when you can do it reasonably, prefer pattern-matching over guards
[20:01:44] <juand> I used otherwise but it felt like a hack. But i get it now. compare is a nice solution.
[20:02:04] <hpc> fun fact: otherwise is very much a hack
[20:02:07] <hpc> @src otherwise
[20:02:07] <lambdabot> otherwise = True
[20:02:21] <hpc> not a keyword :D
[20:03:17] <hpc> also even when you get near the limits of what pattern matching can do, you might still want to reach for something like view patterns before guards
[20:03:20] <hpc> but that's a whole other topic
[20:03:45] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 265 seconds)
[20:06:40] *** Quits: Hayek (~xxx@2603-8000-b401-6099-b41b-43a8-70e4-3938.res6.spectrum.com) (Ping timeout: 260 seconds)
[20:07:15] *** Joins: dsrt^ (~dsrt@wsip-68-227-92-38.mc.at.cox.net)
[20:08:10] *** Quits: MoC (~moc@user/moc) (Quit: Konversation terminated!)
[20:13:44] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:a193:fe09:637c:a86c)
[20:14:37] *** Quits: peterhil (~peterhil@mobile-access-5672cd-211.dhcp.inet.fi) (Ping timeout: 244 seconds)
[20:19:38] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[20:19:39] *** Joins: Hayek (~xxx@2603-8000-b401-6099-b41b-43a8-70e4-3938.res6.spectrum.com)
[20:20:28] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[20:20:28] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[20:20:28] *** Joins: wroathe (~wroathe@user/wroathe)
[20:22:34] *** Joins: lavaman (~lavaman@98.38.249.169)
[20:24:11] *** Joins: econo (uid147250@user/econo)
[20:24:48] <maerwald> I always use `otherwise` instead of `True` in all my code
[20:25:22] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[20:26:36] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Quit: Client closed)
[20:26:57] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[20:27:26] *** Joins: jstolarek (~jstolarek@137.220.120.162)
[20:27:30] *** Quits: aplainzetakind (~johndoe@captainludd.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[20:27:38] *** Joins: aplainze1akind (~johndoe@captainludd.powered.by.lunarbnc.net)
[20:27:43] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:28:00] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[20:28:46] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (Remote host closed the connection)
[20:28:47] *** Joins: Guest9016 (~Guest90@69.166.185.81.rev.sfr.net)
[20:30:44] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[20:30:59] *** Quits: Null_A (~null_a@2601:645:8700:2290:f415:c2d6:236d:7d8b) (Remote host closed the connection)
[20:32:01] *** Joins: kuribas (~user@ptr-25vy0i9x7go3dqtvv83.18120a2.ip6.access.telenet.be)
[20:33:32] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[20:35:12] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (Remote host closed the connection)
[20:36:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[20:37:12] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:ed38:680c:308b:2321) (Ping timeout: 268 seconds)
[20:37:15] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:37:58] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:299b:88e7:728b:a92)
[20:39:56] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 244 seconds)
[20:42:36] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[20:43:17] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:43:17] <juand> I think that a property P(x) always holds if some other property Q(x) holds. I want to use quickcheck to test this. Is it correct to test if: not (q x) || p x? Is if q x then p x else True the same proposition?
[20:43:56] <monochrom> IIRC there is a ==> operator most well suited for this.
[20:44:09] <c_wraith> I'd be careful with structuring your tests like that at all
[20:44:25] <c_wraith> it leaves a good chance of quickcheck not testing anything
[20:44:29] <juand> monochrom: Did not know that. Thank you.
[20:44:41] <juand> c_wraith: how so?
[20:45:03] <c_wraith> It will count everything where Q(x) doesn't hold as a successful test
[20:45:55] <juand> That's true.
[20:46:21] <c_wraith> If Q(x) is somewhat uncommon, you might end up testing very few cases where is does hold
[20:46:42] <c_wraith> If you do that twice... quickcheck only defaults to 100 cases.
[20:47:05] <c_wraith> You're much better off structuring the test such that all generated input has Q(x) hold by construction
[20:47:56] <c_wraith> (not always possible, but it's a better option when it is)
[20:48:42] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[20:49:02] *** Joins: Sgeo (~Sgeo@user/sgeo)
[20:49:07] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:49:14] *** Joins: rk04 (~rk04@user/rajk)
[20:50:03] <juand> Q(x) is in fact uncommon. Good point.
[20:50:29] <c_wraith> that's a gotcha with quickcheck I've run into before.
[20:50:35] *** Quits: rk04 (~rk04@user/rajk) (Client Quit)
[20:50:38] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[20:51:03] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 258 seconds)
[20:54:16] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[20:55:22] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:56:18] *** zero is now known as zzz
[20:56:21] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 245 seconds)
[20:56:50] *** Quits: zmt00 (~zmt00@user/zmt00) (Quit: Gone.)
[20:57:49] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[20:59:11] <ski> @type forAll
[20:59:12] <lambdabot> (Show a, STestable prop) => Gen a -> (a -> prop) -> Test.QuickCheck.Safe.SProperty
[20:59:28] *** Joins: zmt00 (~zmt00@user/zmt00)
[21:00:01] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (Read error: No route to host)
[21:00:38] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[21:02:40] *** Quits: MQ-17J (~MQ-17J@8.21.10.17) (Ping timeout: 244 seconds)
[21:03:21] *** Quits: azimut_ (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 276 seconds)
[21:03:57] *** Joins: rond_ (~rond_@2a02:a31a:a23c:f480:2fd7:e087:5546:a438)
[21:04:36] *** Joins: Null_A (~null_a@2601:645:8700:2290:f415:c2d6:236d:7d8b)
[21:05:11] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[21:05:14] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[21:06:03] *** Joins: MQ-17J (~MQ-17J@d192-24-122-179.try.wideopenwest.com)
[21:07:08] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[21:08:31] <zincy> Is there an easy way of getting a num instance for a newtyped Int
[21:08:50] <zincy> When I try and derive it I get "no explicit implementation for Num ..."
[21:08:50] <awpr> `deriving Num`, with `GeneralizedNewtypeDeriving` enabled
[21:08:51] <c_wraith> If you just want Int's instance, yes.  GeneralizedNewtypeDeriving
[21:08:55] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[21:08:56] <merijn> GeneralizedNewtypeDeriving?
[21:09:09] *** Quits: jumper149 (~jumper149@80.240.31.34) (Quit: WeeChat 3.3)
[21:11:23] <zincy> Thanks! Must have just forgotten the language ext.
[21:11:45] <awpr> ah, the error message sounds like you had `DeriveAnyClass` enabled and it picked that
[21:12:38] <awpr> this sort of thing is why I prefer to enable `DerivingStrategies` and explicitly tell it how to derive: `deriving newtype Num deriving stock Show deriving anyclass NFData`
[21:15:52] <zincy> Ah ok so that is what was happening
[21:16:07] *** Quits: Null_A (~null_a@2601:645:8700:2290:f415:c2d6:236d:7d8b) (Remote host closed the connection)
[21:16:23] <zincy> For Num DeriveAnyClass was being picked and hence the error "no explicit implementation"
[21:19:30] *** Joins: fluffyballoon (~user@131.93.208.196)
[21:20:36] *** Quits: fluffyballoon (~user@131.93.208.196) (Client Quit)
[21:20:56] *** Joins: fluffyballoon (~user@131.93.208.196)
[21:26:47] *** Quits: myShoggoth (~myShoggot@97-120-85-195.ptld.qwest.net) (Ping timeout: 264 seconds)
[21:29:32] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[21:29:42] <Guest9016> how difficult is it to submit a package on Hackage/Stackage?
[21:30:15] <Clint> 2
[21:30:41] <awpr> just to create and upload: extremely easy (once you've gotten an account with permission to upload)
[21:31:19] <awpr> for Hackage, I mean.  not sure about Stackage
[21:31:45] <Clint> for stackage you submit a pull request to add a hackage package to a yaml file
[21:32:26] <awpr> to maintain and curate it properly, polish documentation, bump version bounds, set up CI and keep up with base changes, make it compatible with a wide range of GHCs, make the synopsis descriptive without word-wrapping: can be a lot of work
[21:35:05] *** Joins: Liudvikas (~Liudvikas@88.222.185.135)
[21:37:18] *** Joins: lavaman (~lavaman@98.38.249.169)
[21:38:19] *** Quits: Partmedia (~kevinz@172-221-159-029.res.spectrum.com) (Ping timeout: 244 seconds)
[21:38:40] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[21:39:01] *** Quits: Guest9016 (~Guest90@69.166.185.81.rev.sfr.net) (Quit: Client closed)
[21:40:38] *** Joins: hololeap (~hololeap@user/hololeap)
[21:43:01] *** Quits: jkaye (~jkaye@2601:281:8300:7530:c3d4:ecc4:d44c:ce60) (Ping timeout: 245 seconds)
[21:45:18] *** Joins: Partmedia (~kevinz@172-221-159-029.res.spectrum.com)
[21:49:50] *** Quits: Partmedia (~kevinz@172-221-159-029.res.spectrum.com) (Ping timeout: 260 seconds)
[21:52:20] *** Joins: Partmedia (~kevinz@172-221-159-029.res.spectrum.com)
[21:53:47] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[21:59:48] *** Quits: alx741 (~alx741@186.178.108.74) (Quit: alx741)
[22:00:36] *** Quits: Farzad (~FarzadBek@151.238.114.164) (Quit: Leaving)
[22:00:43] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[22:04:02] *** Joins: alx741 (~alx741@186.178.108.74)
[22:06:34] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[22:06:35] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[22:06:35] *** Joins: wroathe (~wroathe@user/wroathe)
[22:06:35] *** Quits: alx741 (~alx741@186.178.108.74) (Client Quit)
[22:23:45] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 260 seconds)
[22:25:47] *** Joins: mei (~mei@user/mei)
[22:26:04] *** zzz is now known as onion
[22:27:51] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 276 seconds)
[22:30:30] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[22:36:14] *** Joins: hyiltiz (~quassel@31.220.5.250)
[22:38:34] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[22:39:55] *** Quits: Liudvikas (~Liudvikas@88.222.185.135) (Quit: Konversation terminated!)
[22:43:24] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:a193:fe09:637c:a86c) (Remote host closed the connection)
[22:44:13] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 265 seconds)
[22:44:55] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[22:45:14] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[22:46:28] *** Joins: hololeap (~hololeap@user/hololeap)
[22:46:53] *** Joins: Pickchea (~private@user/pickchea)
[22:46:59] *** Joins: rekahsoft (~rekahsoft@cpe0008a20f982f-cm64777d666260.cpe.net.cable.rogers.com)
[22:48:39] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 276 seconds)
[22:55:38] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[22:56:14] *** Quits: kuribas (~user@ptr-25vy0i9x7go3dqtvv83.18120a2.ip6.access.telenet.be) (Remote host closed the connection)
[22:58:28] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[23:01:16] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[23:06:54] *** Joins: Daniel (~Daniel@62.214.179.126)
[23:07:00] *** Daniel is now known as Guest8769
[23:07:02] *** Joins: Liudvikas (~Liudvikas@88.222.185.135)
[23:07:44] *** Quits: Guest8769 (~Daniel@62.214.179.126) (Client Quit)
[23:09:15] *** Quits: MQ-17J (~MQ-17J@d192-24-122-179.try.wideopenwest.com) (Read error: Connection reset by peer)
[23:09:37] *** Joins: MQ-17J (~MQ-17J@d192-24-122-179.try.wideopenwest.com)
[23:09:52] *** Joins: notzmv (~zmv@user/notzmv)
[23:10:07] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[23:13:27] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[23:14:11] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[23:15:15] *** Quits: eruditass (uid248673@uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[23:15:58] *** Quits: MQ-17J (~MQ-17J@d192-24-122-179.try.wideopenwest.com) (Ping timeout: 244 seconds)
[23:17:00] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:a193:fe09:637c:a86c)
[23:17:02] *** Quits: rond_ (~rond_@2a02:a31a:a23c:f480:2fd7:e087:5546:a438) (Quit: Client closed)
[23:17:40] *** Joins: dustee (~dustee@63.81.59.158)
[23:18:40] *** Joins: segfaultfizzbuzz (~segfaultf@135-180-0-138.static.sonic.net)
[23:19:06] *** Joins: MQ-17J (~MQ-17J@d192-24-122-179.try.wideopenwest.com)
[23:20:23] *** Joins: olibiera (~olibiera@a79-169-181-190.cpe.netcabo.pt)
[23:23:07] <olibiera> hey guys im trying to create a function that runs thru a list and accumulates values and then returns a value, can anyone help me understand why is not working? thx in advance
[23:23:18] <olibiera> votosCandidato :: [(String,(String,String,String))] -> String -> Int
[23:23:18] <olibiera> votosCandidato xs y = votosCandidato' xs y 0
[23:23:19] <olibiera>                         where votosCandidato' [] _ _ = 0  
[23:23:19] <olibiera>                               votosCandidato' (x:xs) y n 
[23:23:20] <olibiera>                                                         | y == fst x = votosCandidato' xs y n   
[23:23:20] <olibiera>                                                         | y == first (snd x) = votosCandidato' xs y (n + 3)
[23:23:21] <olibiera>                                                         | y == second (snd x) = votosCandidato' xs y (n + 2)
[23:23:21] <olibiera>                                                         | y == third (snd x) = votosCandidato' xs y (n + 1) 
[23:23:22] <olibiera>                                                         | otherwise = votosCandidato' xs y n
[23:23:22] <olibiera>                                                         where first (d, _, _) = d
[23:23:23] <olibiera>                                                               second (_, e, _) = e
[23:23:23] <olibiera>                                                               third (_, _, f) = f  
[23:23:35] <unit73e> you know, you could use the paste tool
[23:23:37] <Franciman> olibiera: can you use a paste system, the next time for more than 2 lines?
[23:23:51] <Franciman> so it's easier to read and avoid a lot of cnfusing noise
[23:23:52] *** Quits: mei (~mei@user/mei) (Ping timeout: 252 seconds)
[23:24:10] *** Quits: _ht (~quassel@82-169-194-8.biz.kpn.net) (Remote host closed the connection)
[23:24:23] <olibiera> whats the paste tool?
[23:24:32] <hpc> in the topic
[23:24:46] <unit73e> this: https://paste.tomsmeding.com
[23:24:56] *** Joins: acidjnk_new3 (~acidjnk@p200300d0c703cb55ecd1c0be3c49da81.dip0.t-ipconnect.de)
[23:25:24] <hpc> :t first
[23:25:25] <lambdabot> Arrow a => a b c -> a (b, d) (c, d)
[23:25:32] <olibiera> ok will do next time!
[23:25:40] <hpc> :t fst
[23:25:41] <lambdabot> (a, b) -> a
[23:25:42] <ski> @paste
[23:25:42] <lambdabot> A pastebin: https://paste.debian.net/
[23:25:47] <ski> @where paste
[23:25:47] <lambdabot> Help us help you: please paste full code, input and/or output at e.g. https://paste.tomsmeding.com
[23:25:49] <hpc> you're mixing fst and first
[23:25:53] <hpc> :t third
[23:25:54] <lambdabot> error: Variable not in scope: third
[23:26:11] <hpc> or i am not reading the where clause
[23:26:17] <ski> olibiera : use pattern-matching, instead of `fst',..
[23:27:30] <ski> (also, that code is way too much indented ..)
[23:27:55] <hpc> maybe try breaking the problem up
[23:28:18] <hpc> instead of solving it all at once, try first taking the [(String, (String, String, String))] and filtering it by y
[23:28:24] <hpc> so you have [(String, String, String)]
[23:28:36] <hpc> and then a separate, simpler summing function
[23:28:39] <ski> also, you seem to be ignoring the final result of your accumulator
[23:29:20] <olibiera> yes thats the problem, how can i return the final result in this case
[23:29:24] *** Quits: Liudvikas (~Liudvikas@88.222.185.135) (Quit: Konversation terminated!)
[23:29:28] <ski> stop ignoring it ?
[23:29:37] <olibiera> by doing what?
[23:29:39] *** Quits: takuan (~takuan@178-116-218-225.access.telenet.be) (Remote host closed the connection)
[23:29:54] <ski> start by locate where you're ignoring the final value of the accumulator
[23:31:05] *** Parts: dustee (~dustee@63.81.59.158) ()
[23:31:59] <hpc> olibiera: try stepping through a simple case
[23:32:31] <ski> (for that, using pattern-matching would help)
[23:32:44] <hpc> votosCandidato [("x", ("a", "b", "c")] "a"
[23:33:27] <hpc> do it by hand
[23:34:58] *** Joins: brainfreeze (~brainfree@2a03:1b20:4:f011::20d)
[23:35:04] *** Quits: juhp (~juhp@128.106.188.220) (Ping timeout: 244 seconds)
[23:36:12] <olibiera> i just cant figure out how can i return "n"
[23:36:25] <olibiera> will try something different, thx
[23:38:11] <ski> olibiera : i suggest attempting the other suggestions (above), too
[23:38:11] *** Quits: Hayek (~xxx@2603-8000-b401-6099-b41b-43a8-70e4-3938.res6.spectrum.com) (Ping timeout: 264 seconds)
[23:38:19] *** Joins: juhp (~juhp@128.106.188.220)
[23:38:43] * ski . o O ( "Elegance isn't optional." )
[23:38:43] <unit73e> btw that's candidate votes if you're all wondering
[23:39:09] * ski figured
[23:44:48] *** Quits: fendor (~fendor@77.119.214.28.wireless.dyn.drei.com) (Remote host closed the connection)
[23:49:17] *** Quits: rekahsoft (~rekahsoft@cpe0008a20f982f-cm64777d666260.cpe.net.cable.rogers.com) (Remote host closed the connection)
[23:50:24] *** Quits: stiell (~stiell@gateway/tor-sasl/stiell) (Ping timeout: 276 seconds)
[23:51:06] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 244 seconds)
[23:51:19] *** Joins: rekahsoft (~rekahsoft@cpe0008a20f982f-cm64777d666260.cpe.net.cable.rogers.com)
