[00:06:28] <FromDiscord> <mratsim> In reply to @arkanoid "I'm calling a C": https://stackoverflow.com/questions/50357704/how-to-freopen-both-stdout-and-stderr-into-a-single-output-file-under-windows
[00:13:29] <nrds> <06Prestige99> Is there a decent interface to execute interactive cli tools with Nim? I want to write a wrapper to connect a few cli tools like github cli, jira, and fzf. Instead of using bash I'm trying to use Nim for the job 
[00:14:17] <nrds> <06Prestige99> fzf has an interactive cli e.g. https://github.com/junegunn/fzf#-
[00:38:45] <arkanoid> thanks
[00:43:49] <arkanoid> what's the correct way to cross compile nim code from linux to windows? I've always used just -d:mingw for the job for trivial programs and that works, but I'm now trying with wNim and it complains missing windows.h, I'm reading that I should use wine for both compilation and testing, but now sure what's the difference from using mingw or going "wine gcc"
[00:44:48] <arkanoid> I mean, this is what the manual says https://nim-lang.org/docs/nimc.html#crossminuscompilation-for-windows
[00:46:05] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[01:04:17] <FromDiscord> <tandy> is there a way to convert string to enum?
[01:04:27] <FromDiscord> <tandy> sent a code paste, see https://play.nim-lang.org/#ix=3PTa
[01:11:05] <FromDiscord> <ynfle> In reply to @tandy "is there a way": `strutils.parseEnum`
[01:21:48] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545) (Quit: Textual IRC Client: www.textualapp.com)
[01:29:18] <FromDiscord> <tandy> tytyt‚Üµ(@ynfle)
[01:35:10] <FromDiscord> <jmgomez> In reply to @Amun-Ra "<@726017160115126333>: there are several": Didn‚Äôt know that. Thanks! What do you mean with fun is missing? Also it does work fine in Linux
[02:18:09] <FromDiscord> <ynfle> In reply to @tandy "tytyt (<@767093711112241162>)": üëç
[02:34:06] *** Quits: sagax (~sagax_nb@user/sagax) (Excess Flood)
[02:39:56] <FromDiscord> <Waldecir Santos> @haxscramper I was able to simplify the code and do "by ref" doing like this, so, much simpler:
[02:39:57] <FromDiscord> <Waldecir Santos>  https://media.discordapp.net/attachments/371759389889003532/944007794825232404/unknown.png
[02:49:09] <FromDiscord> <jmgomez> In reply to @jmgomez "Didn‚Äôt know that. Thanks!": did a quick test with a function bind from nim marked with extern C and it does not work neither (it does work in linux though)
[03:06:43] <FromDiscord> <ynfle> Is nim participating in GSoC?
[03:16:20] <droidrage> I see mostly wip github repos when looking for nim and vala/glib/gtk...has anyone seen nim /compile/transpile to vala correctly/maintainably?
[04:04:20] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 272 seconds)
[04:05:10] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[04:06:15] <FromDiscord> <exelotl> droidrage: there's not really any benefit in compiling to Vala since Vala and Nim both compile to C right?
[04:07:11] <FromDiscord> <exelotl> I believe gintro is the best Nim library for glib/gtk stuff though https://github.com/StefanSalewski/gintro
[04:08:16] <FromDiscord> <Forest> Why is the code generated by Nim's JS backend so dirty?
[04:09:01] <FromDiscord> <Forest> And how would i compile multiple modules for use?
[04:09:18] <FromDiscord> <Forest> (edit) "modules" => "nim files" | "use?" => "use with it?"
[04:09:52] <FromDiscord> <Forest> Tbh it'd be nice to not have such dirty output, since I'm using it in a CommonJS environment
[04:11:31] <FromDiscord> <Elegantbeef> Have you passed `-d:release` or `-d:danger`?
[04:12:31] <FromDiscord> <Elegantbeef> And what do you mean multiple nim files?
[04:12:33] <FromDiscord> <Elegantbeef> Just import then
[04:12:42] <FromDiscord> <Elegantbeef> import them\
[04:19:09] <FromDiscord> <Forest> Ah
[04:19:18] <FromDiscord> <Forest> Would importing them combine them into one file?
[04:23:02] <FromDiscord> <exelotl> I think so, haven't done a lot of Nim JS stuff
[04:23:44] <FromDiscord> <Forest> In reply to @Elegantbeef "Have you passed `-d:release`": It's still very cluttered lol
[04:23:47] <FromDiscord> <Forest> In reply to @exelotl "I think so, haven't": Fair
[04:24:27] <FromDiscord> <exelotl> if you're using nim to produce a library usable from nodejs or similar then I guess `--nomain` is your friend
[04:24:27] <FromDiscord> <Elegantbeef> Yes Nim does emit a single file
[04:24:47] <droidrage> > <exelotl> I believe gintro is the best Nim library for glib/gtk stuff though https://github.com/StefanSalewski/gintro
[04:24:47] <droidrage> Yes that's the one whose readme states it is wip quality still...I guess I'm asking if I want to contribute to a sw written in vala, can I do so with nim or is it not enough that they both (trans/com)pile to c?
[04:24:51] <FromDiscord> <Elegantbeef> If you want to have multiple files you'd `exportC` the code and `importJs` it in another file
[04:25:44] <droidrage> Or would it be simpler to learn to code in vala for such projects 
[04:26:15] <FromDiscord> <Forest> In reply to @Elegantbeef "If you want to": Ah okay
[04:27:28] <FromDiscord> <exelotl> mmh yeah I probably wouldn't try to introduce Nim into a Vala codebase. I'm sure it's _possible_ to use them together but not worth the complexity. And Vala is a fairly nice language from what I recall.
[04:29:05] <droidrage> Thanks for confirming my hunch
[04:29:50] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[04:31:18] <FromDiscord> <exelotl> In reply to @Forest "It's still very cluttered": the Nim output isn't really supposed to be read by humans (though I sometimes find it helpful for debugging). Nim treats C, JS etc. as "portable assembly"
[04:32:47] <FromDiscord> <Forest> Fair enough aha
[04:34:27] <FromDiscord> <Forest> I'm heavily debating on using Nim's JS backend instead of CoffeeScript
[04:34:34] <FromDiscord> <Forest> What would be the advantages I'd get?
[04:38:30] <FromDiscord> <exelotl> a strong type system (catches your mistakes, makes refactoring easier), and a powerful macro system (allows you to eliminate boilerplate and do work at compile-time instead of runtime)
[04:38:59] <FromDiscord> <exelotl> (edit) "mistakes," => "mistakes before the program runs,"
[04:40:37] <FromDiscord> <Forest> Hm yeah probably gonna use Nim then aha
[04:40:38] <FromDiscord> <Forest> Thanks!
[04:42:23] <FromDiscord> <Elegantbeef> Also the abillity to reuse code for native binaries if you ever need that
[04:49:05] <FromDiscord> <Forest> Idk why I'd need that in this case but cool-
[04:49:21] <FromDiscord> <Elegantbeef> Well if you make a backend and ever want to send an object to the client
[04:52:08] <FromDiscord> <Forest> Welp time to relearn the stuff I forgot about Nim
[04:54:13] <FromDiscord> <Forest> Ah i just realized something, the environment I'm using exposes a function by default but idk how I'm supposed to access it in Nim, how would i do that? :P
[04:54:30] <FromDiscord> <Elegantbeef> importjs it
[04:54:35] <FromDiscord> <Forest> It just includes it in the runtime, no imports
[04:54:44] <FromDiscord> <Forest> `importjs`?
[04:55:13] <FromDiscord> <Elegantbeef> `proc myProc(args): ReturnType {.importJs: "procRealName".}`
[04:55:20] <FromDiscord> <Forest> Ah neat, thanks!
[04:55:28] <FromDiscord> <Forest> How about if it's a static function?
[04:55:38] <FromDiscord> <Forest> Just `class.proc`?
[04:55:48] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/jsffi.html will help you a alot
[04:56:11] <FromDiscord> <Forest> I should probably read through it lol
[04:56:41] <FromDiscord> <Elegantbeef> The source of https://nim-lang.org/docs/dom.html will help aswell
[04:57:41] <FromDiscord> <Forest> Thanks xD
[04:58:48] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 272 seconds)
[05:02:41] <FromDiscord> <Forest> sent a code paste, see https://play.nim-lang.org/#ix=3PUm
[05:02:56] <FromDiscord> <Elegantbeef> may just want to use `importC` then
[05:03:08] <FromDiscord> <Forest> sent a code paste, see https://play.nim-lang.org/#ix=3PUn
[05:03:32] <FromDiscord> <Elegantbeef> Wait java?!
[05:03:49] <FromDiscord> <Forest> It's a project with GraalJS :p
[05:04:26] <FromDiscord> <Forest> Grakkit is a plugin that enables the use of JS to make MC plugins and i thought Nim probably would be great because i love the syntax :p
[05:04:48] <FromDiscord> <Elegantbeef> I see
[05:05:06] <FromDiscord> <Elegantbeef> Anywho you might want `importC` there
[05:05:17] <FromDiscord> <Forest> Why's that?
[05:05:44] <FromDiscord> <Elegantbeef> or do \`importJs\:"Java.type(#)"
[05:05:54] <FromDiscord> <Forest> Ah okay
[05:06:13] <FromDiscord> <Forest> Thanks aha
[05:12:07] <FromDiscord> <Forest> Would it be possible for me to just define an import hook or something? So i can do `import java.package.Class` and have that directly added to the namespace?
[05:12:19] <FromDiscord> <huantian>  https://media.discordapp.net/attachments/371759389889003532/944046135566299156/unknown.png
[05:12:22] <FromDiscord> <huantian> can't wait to add nim to this list
[05:12:28] <FromDiscord> <Forest> Lol
[05:12:29] <FromDiscord> <huantian> of random technologies and programs
[05:12:42] <FromDiscord> <Forest> It works pretty well
[05:12:45] <FromDiscord> <huantian> this actually looks kinda sick tho
[05:12:54] <FromDiscord> <Elegantbeef> I mean you can make a macro that does it but otherwise no
[05:13:04] <FromDiscord> <Forest> Ye, i actually helped to port it to Gradle and made the workflow for it haha
[05:13:05] <FromDiscord> <Elegantbeef> Nim doesnt know what `java.package.Class` contains if i get what you mean
[05:13:09] <FromDiscord> <Forest> In reply to @Elegantbeef "I mean you can": Ah fair enough
[05:13:15] <FromDiscord> <Forest> In reply to @Elegantbeef "Nim doesnt know what": Yeah fair lol
[05:13:23] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/jsffi.html#require%2Ccstring there is this though
[05:13:38] <FromDiscord> <Forest> Time to make a macro
[05:13:48] <FromDiscord> <Forest> Neat
[05:20:10] <FromDiscord> <Forest> Do macros just output the exact code in the macro, with the provided arguments?
[05:20:32] <FromDiscord> <Elegantbeef> Macros output whatever you tell them to, they're user defined compiler passes
[05:20:42] <FromDiscord> <Forest> Ah
[05:21:26] <FromDiscord> <Forest> So i could just output a syntax tree directly if i wanted to?
[05:21:53] <FromDiscord> <Elegantbeef> Well that's what Nim macros are, you take in AST and emit AST
[05:22:01] <FromDiscord> <Forest> Fair enough lol
[05:24:19] <FromDiscord> <Elegantbeef> So what you might do is use a macro to iterate over the JS code and emit wrapped functions, or you might make a macro or template that allows you to easily specify the procedure name and arguments, but that's fully up to what you're doing üòÄ
[05:24:32] <FromDiscord> <Elegantbeef> I dont know how much code you're wrapping or what you're after
[05:25:23] <FromDiscord> <Forest> I'm just trying to make it so `jclass "java.package.Class"` adds `Class` to the namespace as if it's been imported aha
[05:25:41] <FromDiscord> <Elegantbeef> Namespace? üòÄ
[05:25:43] <FromDiscord> <Forest> I'm reading through docs and not understanding anything Lol
[05:25:53] <FromDiscord> <Forest> Namespace as in uh, environment?
[05:26:02] <FromDiscord> <Forest> Idk what it's called :p
[05:26:48] <FromDiscord> <Elegantbeef> Module?
[05:27:43] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3PUq
[05:27:55] <FromDiscord> <Elegantbeef> then you'd just do `import classes` and have it imported
[05:28:02] <FromDiscord> <Elegantbeef> I guess it'd be `Class`
[05:28:39] <FromDiscord> <Forest> No i don't know how to explain it bleh
[05:29:06] <FromDiscord> <Forest> Y'know how in Python you can just do `import os` and then you can do `os.system("stuff")`?
[05:29:14] <FromDiscord> <Elegantbeef> Yes
[05:29:34] <FromDiscord> <Forest> I wanna do `jclass "java.package.Class"` and then just have `Class` usable from Nim
[05:30:01] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3PUr
[05:30:13] <FromDiscord> <Forest> But it's a Java class that i want to add to the name space
[05:30:33] <FromDiscord> <Forest> And i don't know the fields/procs at compile time
[05:30:35] <FromDiscord> <Elegantbeef> Nim is not python or java. It doesnt have namespaces
[05:30:55] <FromDiscord> <Forest> I know that I'm just struggling to explain it
[05:31:00] <FromDiscord> <Elegantbeef> `JSObject` does exist which is "typeless"
[05:32:00] <FromDiscord> <Forest> sent a code paste, see https://play.nim-lang.org/#ix=3PUv
[05:32:22] <FromDiscord> <Forest> Macros would help me do that i think but I'm struggling to actually understand it
[05:32:55] <FromDiscord> <Elegantbeef> Well jclass would emit a typedesc with a `.()` macro
[05:33:10] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/manual_experimental.html#special-operators-operator-nimdot
[05:33:26] <FromDiscord> <Elegantbeef> I guess maybe a variable instead
[05:35:28] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3PUx
[05:36:02] <FromDiscord> <Forest> Ah okay then, thanks
[05:36:04] <FromDiscord> <Elegantbeef> `BukkitInternal` would be gensym'd so it'd only be accessible for the variable declaration
[05:38:08] <FromDiscord> <Elegantbeef> the macro signature would be `macro jclass(path: static string)` if unclear
[05:50:09] <FromDiscord> <Forest> Ah okay!
[06:04:40] <FromDiscord> <Forest> I got a type error using Nim because of the NimStrLit function m
[06:04:41] <FromDiscord> <Forest> ?
[06:05:04] <FromDiscord> <Forest> `TypeError: Java.type expects one string argument`
[06:07:34] <FromDiscord> <Forest> How would i fix that?
[06:08:42] <FromDiscord> <Forest> Ah i changed the input type to `cstring` and it worked
[06:13:49] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:19:36] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[06:31:22] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[06:31:42] <FromDiscord> <Forest> How would i accept a nested array as an argument? `array[0..2, array[0..2, string]]`?
[06:31:44] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[06:31:59] <FromDiscord> <Forest> Actually there's a playground for this
[06:32:12] <FromDiscord> <Elegantbeef> Exactly as you put it üòÄ
[06:43:08] <NimEventer> New question by pooooky: Why is Nim not overriding, see https://stackoverflow.com/questions/71167977/why-is-nim-not-overriding
[06:50:28] <FromDiscord> <Forest> Does Nim have default arguments or do i need to just use operator overriding?
[06:58:44] <FromDiscord> <Elegantbeef> it has defaults
[06:59:06] <FromDiscord> <Elegantbeef> Also did you mean procedure overloading?
[06:59:49] <FromDiscord> <Forest> Yeah that's what i meant
[07:08:52] <FromDiscord> <Forest> How do i overload a procedure? :p
[07:09:12] <FromDiscord> <Forest> Just defining another procedure with the same name should work, right?
[07:09:14] <FromDiscord> <Rika> Ues
[07:09:22] <FromDiscord> <Rika> Different parameter types
[07:11:08] <FromDiscord> <Forest> Aight
[07:11:12] <FromDiscord> <ckennedy> anyone have any ideas why nim would be compiling to x86_64 on an arm64 M1 Mac?
[07:12:23] <FromDiscord> <cs> What is the convention for declaring variables? Is it inside of procedures in a group?
[07:12:38] <FromDiscord> <cs> (edit) "What is the convention for declaring variables? Is it inside of procedures ... ingroup" 03added "or" | "group?" => "group outside of them?"
[07:16:26] <FromDiscord> <Rika> ?
[07:16:42] <FromDiscord> <Rika> Variables have scope
[07:16:49] <FromDiscord> <Rika> Local is preferred to global
[07:18:09] <FromDiscord> <cs> Okay, I see.
[07:19:20] <FromDiscord> <Elegantbeef> Ideally your modules dont have side effects unless it's desired for the program
[07:19:50] <FromDiscord> <Elegantbeef> If you make a library you should avoid global variables as much as possible
[07:20:40] <FromDiscord> <Rika> Const outside is fine just avoid let and var globals
[07:20:41] <FromDiscord> <cs> In reply to @Elegantbeef "If you make a": Yeah, I am familiar with other programming languages, just trying to find the conventions and the nim way of doing things.
[07:30:22] <FromDiscord> <Forest> sent a code paste, see https://play.nim-lang.org/#ix=3PUI
[07:32:20] <FromDiscord> <Elegantbeef> Code?
[07:33:41] <FromDiscord> <Rika> You‚Äôre using a variable as a proc?
[07:35:05] <FromDiscord> <Elegantbeef> Seems they're tying to call a constructor using `new`
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:12] <FromDiscord> <Elegantbeef> you'd probably want to do `NamespacedKey(field: my, param: params, here: here).toJs`
[07:38:55] <FromDiscord> <Forest> Ah okay
[07:41:10] <FromDiscord> <Elegantbeef> Depends what `NameSpacedKey` is
[08:10:51] *** Quits: keyehzh (~keyehzh@user/keyehzh) (Remote host closed the connection)
[08:29:16] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[08:44:06] <FromDiscord> <Forest> It's a Java class that i usually initialise with `new NamespacedKey(my arguments)` in Java
[08:44:12] <FromDiscord> <Forest> (edit) "Java" => "JS"
[08:44:46] <FromDiscord> <Elegantbeef> You'd need to import the constructor then, or just use a JSObject
[08:48:09] <FromDiscord> <Forest> I don't understand exactly? I've imported it
[08:48:48] <FromDiscord> <Rika> what is `NamespacedKey` defined as?
[08:53:21] <FromDiscord> <Forest> It'd a JsObject
[08:55:34] <FromDiscord> <Elegantbeef> sent a code paste, see https://paste.rs/1JT
[08:56:23] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3PUX
[08:57:09] <FromDiscord> <Forest> Ah okay then
[08:58:09] <FromDiscord> <Forest> Hm issue is that Bukkit relies on getting the NamespacedKey so i need to initialise that object
[08:59:01] <FromDiscord> <Elegantbeef> Do you have the NameSpacedKey object definition handy?
[09:00:09] <FromDiscord> <Forest> What do you mean? I have the JsObject in a variable if that's what you mean
[09:00:25] <FromDiscord> <Elegantbeef> I mean the js definition
[09:00:31] <FromDiscord> <Elegantbeef> Like what's the code you're porting
[09:00:42] *** Quits: krux02 (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de) (Remote host closed the connection)
[09:01:20] <FromDiscord> <Rika> js technically doesnt really have definitions no? just make the object
[09:01:37] <FromDiscord> <Rika> if ever you have more issues, you can copy the NamespacedKey and then modify the copy
[09:01:52] <FromDiscord> <Elegantbeef> Yea i know it doesnt explicitly
[09:02:15] <FromDiscord> <Elegantbeef> But most time there is a limited number of fields that are populated so there is atleast a skeleton you can abstract
[09:02:56] <FromDiscord> <Rika> then its prolly in that jsobject he mentioned, NamespacedKey
[09:03:09] <FromDiscord> <Elegantbeef> Sure but i want to know the JS code üòõ
[09:03:13] <FromDiscord> <Elegantbeef> So i can actually say what to do
[09:03:38] <FromDiscord> <Forest> NamespacedKey is a Java class that GraalJS wraps into a JsObject automatically, so I don't have the JS code for it
[09:03:50] <FromDiscord> <Rika> can you run a reply
[09:03:51] <FromDiscord> <Rika> (edit) "reply" => "repl"
[09:03:54] <FromDiscord> <Elegantbeef> Well what is the code you're replicating üòÄ
[09:04:05] <FromDiscord> <Rika> if you can then print the object in it
[09:04:07] <FromDiscord> <Elegantbeef> You have JS code, i want to see it!
[09:04:18] <FromDiscord> <Forest> Oh sure :p
[09:04:24] <FromDiscord> <Forest> In reply to @Rika "if you can then": Sure gimme a sec
[09:04:30] <FromDiscord> <Rika> he has java i assume not js
[09:05:14] <FromDiscord> <Elegantbeef> They have JS
[09:06:34] <FromDiscord> <Forest> Wait I'm confused :p
[09:06:41] <FromDiscord> <Forest> Do you want the code I'd use in JS?
[09:06:46] <FromDiscord> <Forest> Or the actual JS source code for it?
[09:06:57] <FromDiscord> <Elegantbeef> The code you'd usue
[09:06:58] <FromDiscord> <Forest> Because there's no JS source for NamespacedKey
[09:07:01] <FromDiscord> <Forest> Ah okay
[09:07:20] <FromDiscord> <Forest> `new NamespacedKey(plugin, "string");`
[09:07:30] <FromDiscord> <Forest> I already have the plugin instance and it works
[09:07:36] <FromDiscord> <Forest> But I can't initialise the jey
[09:07:38] <FromDiscord> <Forest> Key
[09:07:45] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3PV0
[09:07:45] <FromDiscord> <Elegantbeef> That's how you'd do it
[09:08:05] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3PV1
[09:10:38] <FromDiscord> <Forest> Ah okay, thanks!
[09:11:04] <FromDiscord> <Forest> Why doesn't Nim map `new` to JS's `new`?
[09:13:32] <FromDiscord> <Elegantbeef> Cause it's for Nim's references
[09:13:52] <FromDiscord> <Elegantbeef> Nim's semantics shouldnt change due to it's backend
[09:21:05] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:22:16] <FromDiscord> <Forest> Ah
[09:22:45] <FromDiscord> <Forest> I'm getting this error now for some reason? `/data/data/com.termux/files/home/testserver/plugins/grakkit/utils.nim(31, 108) Error: type expected`‚Üµ‚Üµhttps://www.toptal.com/developers/hastebin/ovotejilaw.nim
[09:24:33] <FromDiscord> <Elegantbeef> First you know you can do `array[3, T]`?
[09:24:48] <FromDiscord> <Elegantbeef> Second `ItemStack` isnt a type
[09:25:19] <FromDiscord> <Forest> What does `T` mean in that context?
[09:25:26] <FromDiscord> <Forest> Also i didn't realize lol thanks
[09:25:35] <FromDiscord> <Elegantbeef> the type the array holds
[09:25:42] <FromDiscord> <Elegantbeef> so in your case `array[3, array[3,char]]`
[09:28:41] <FromDiscord> <Elegantbeef> `T` is  generally used in nim as a default generic parameter name, so a lot of pseudo code uses it
[09:28:50] <FromDiscord> <Forest> Ah okay
[09:29:40] <FromDiscord> <Forest> sent a code paste, see https://play.nim-lang.org/#ix=3PV4
[09:31:46] <FromDiscord> <Elegantbeef> `import std/strutils`
[09:33:45] <FromDiscord> <Forest> Oh i forgot about that lol
[09:34:55] <FromDiscord> <Elegantbeef> And welcome to the `.()` operator noisy errors üòõ
[09:48:05] <FromDiscord> <Forest> XD
[09:48:15] <FromDiscord> <Forest> For Enums do i have to define all variables manually?
[09:48:37] <FromDiscord> <Elegantbeef> "all variables"?
[09:48:40] <FromDiscord> <Forest> If so... I'm gonna have fun üòÖ
[09:48:43] <FromDiscord> <Forest> Values
[09:48:51] <FromDiscord> <Forest> Fields?
[09:48:51] <NimEventer> New Nimble package! dogapi - Dog API client, see https://github.com/thexxiv/dogapi-nim
[09:49:07] <FromDiscord> <Elegantbeef> You need the enumerated values explicitly yes
[09:49:29] <FromDiscord> <Forest> Rip
[09:49:38] <FromDiscord> <Forest> How do i define an enum in Nim then? :P
[09:50:14] <nrds> <06Prestige99> Why don't you want to do so?
[09:50:34] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/manual.html#types-enumeration-types
[09:50:56] <FromDiscord> <ynfle> sent a code paste, see https://play.nim-lang.org/#ix=3PV7
[09:50:58] <FromDiscord> <Forest> In reply to @nrds "<Prestige> Why don't you": Just more boilerplate then i expected to do aha
[09:51:10] <FromDiscord> <ynfle> (edit) "https://play.nim-lang.org/#ix=3PV7" => "https://play.nim-lang.org/#ix=3PV8"
[09:51:31] <nrds> <06Prestige99> Can you explain what you're trying to do? Can't think of a language where you don't manually declare your enum states
[09:51:36] <FromDiscord> <Elegantbeef> Well nim is static, dynamic enums make 0 sense
[09:52:05] <FromDiscord> <Forest> Well it's already defined in the Java code so i thought I'd just be able to use that :p
[09:52:34] <FromDiscord> <Elegantbeef> I mean copy paste it with a slight change
[09:52:42] <FromDiscord> <Elegantbeef> Multiline editing isnt magic
[09:52:42] <FromDiscord> <Forest> In reply to @nrds "<Prestige> Can you explain": Currently I'm glueing Java code with Nim via JS (with GraalVM acting as the translator)
[09:52:50] <nrds> <06Prestige99> :o
[09:52:50] <FromDiscord> <Forest> I'm doing this on mobile
[09:52:53] <FromDiscord> <Forest> With nano
[09:53:05] <FromDiscord> <Elegantbeef> Nisha is that you?
[09:53:08] <nrds> <06Prestige99> may god have mercy on your soul
[09:53:09] <FromDiscord> <Forest> Yup :D
[09:53:12] <FromDiscord> <Forest> XD
[09:53:55] <FromDiscord> <Forest> I also need to actually make sure the code is... Casted? Back to the JS counterpart when compiling it
[09:56:56] <FromDiscord> <Forest> Anyone have an idea on how to do that? :P
[10:00:06] <FromDiscord> <Elegantbeef> No clue what you mean
[10:09:31] <FromDiscord> <Forest> I still need to use the Enum values already defined in Java, and defining them all myself is funky because of the extra data they have :p
[10:10:03] <FromDiscord> <Elegantbeef> Well then match the JS code
[10:12:03] <FromDiscord> <Forest> With `importjs`?
[10:12:10] <FromDiscord> <Elegantbeef> Yea
[10:14:10] <FromDiscord> <Forest> sent a code paste, see https://play.nim-lang.org/#ix=3PVc
[10:15:02] <FromDiscord> <Elegantbeef> In that case make constants i guess
[10:15:27] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3PVd
[10:16:24] <FromDiscord> <Forest> Aight thanks!
[10:16:40] <FromDiscord> <Forest> Time to make a very crude script to automatically do this because I'm not doing this by hand lol
[10:25:36] *** Quits: mahlon (~mahlon@martini.nu) (Ping timeout: 272 seconds)
[10:28:39] *** Joins: mahlon (~mahlon@martini.nu)
[10:31:14] <FromDiscord> <Forest> sent a code paste, see https://play.nim-lang.org/#ix=3PVh
[10:32:47] <FromDiscord> <Elegantbeef> `Ice`
[10:32:51] <FromDiscord> <Elegantbeef> Export markers
[10:33:48] <FromDiscord> <Forest> O ye
[10:33:57] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[10:34:53] <FromDiscord> <Forest> It didn't work but i need sleep because it's 7 AM
[10:35:00] <FromDiscord> <Forest> I'll post the error tomorrow
[10:42:29] *** Joins: vicfred (~vicfred@user/vicfred)
[10:43:41] *** Joins: vicfred_ (~vicfred@user/vicfred)
[10:44:01] *** Quits: vicfred_ (~vicfred@user/vicfred) (Remote host closed the connection)
[10:47:09] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 256 seconds)
[10:59:01] *** Joins: PMunch (~PMunch@user/pmunch)
[11:21:21] <FromDiscord> <Aspirus> how can i
[11:21:39] <FromDiscord> <Rika> yeah
[11:25:14] <FromDiscord> <creikey> @treeform I'm tentatively looking to work on porting windy to the web, should it be webassembly via emscripten and the build cache or the nim js backend?
[13:19:59] <FromDiscord> <fbpyr> hi there. üëã ‚Üµpotential noob question(coming from python)\: ‚Üµis there a lib or way to bundle git (or minimal parts of it) into my nim application, ‚Üµso that I could clone and pull even on a machine, which has no git installed?
[13:20:25] <FromDiscord> <Elegantbeef> You'd probably use `libgit` and ship the library with the binary
[13:21:55] <FromDiscord> <fbpyr> [Elegantbeef](https://matrix.to/#/@elegantbeef:matrix.org)\:  ah, thank you for the quick response üôÇ. libgit would be a nim lib or the c-lib from official git?
[13:23:09] <FromDiscord> <Elegantbeef> It'd be the C lib with Nim bindings
[13:23:42] <FromDiscord> <Elegantbeef> For instance https://github.com/disruptek/gittyup
[13:24:05] <FromDiscord> <Elegantbeef> That's a higher level libgit wrapper, there is also the lowerlevel one it's based on
[13:24:28] <FromDiscord> <fbpyr> [Elegantbeef](https://matrix.to/#/@elegantbeef:matrix.org)\:  amazing -  thank you so much!
[13:25:12] <FromDiscord> <Elegantbeef> No problem
[13:29:59] <FromDiscord> <haxscramper> so far this is the only library that used hcparse to wrap anything. It does not cover the full git API, so you might need to go down to https://github.com/haxscramper/hlibgit2 if there is something missing
[13:30:07] <FromDiscord> <haxscramper> [fbpyr](https://matrix.to/#/@fbpyr:tchncs.de)\:
[13:30:41] <FromDiscord> <Elegantbeef> With you typing in matrix and discord for a second there i thought you needed twice as many chat clients to curse me out üòõ
[13:41:44] <FromDiscord> <fbpyr> [haxscramper](https://matrix.to/#/@haxscramper:matrix.org)\: thank you for the heads-up, luckily currently I only need clone and fetch/pull .‚Üµworking currently through the example, wich works pretty well so far.. üòå
[13:43:26] *** Quits: nixfreaknim[m] (~reversem3@2001:470:69fc:105::33d1) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: happycorsair[m] (~happycors@2001:470:69fc:105::205) (Quit: Bridge terminating on SIGTERM)
[13:43:27] *** Quits: cheer[m] (~cheertchn@2001:470:69fc:105::39de) (Quit: Bridge terminating on SIGTERM)
[13:43:27] *** Quits: xiamx (~xiamx@2001:470:69fc:105::1:5692) (Quit: Bridge terminating on SIGTERM)
[13:46:00] <supakeen> well this is unreadable
[13:47:33] <FromDiscord> <Elegantbeef> Is there a follow up?
[13:47:57] <FromDiscord> <Elegantbeef> Context is required!
[13:48:15] <PMunch> Yeah, what is unreadable?
[13:48:21] *** Joins: cheer[m] (~cheertchn@2001:470:69fc:105::39de)
[13:48:33] <FromDiscord> <Elegantbeef> Must be looking at my code
[13:48:35] *** Joins: happycorsair[m] (~happycors@2001:470:69fc:105::205)
[13:48:48] *** Joins: xiamx (~xiamx@2001:470:69fc:105::1:5692)
[13:48:48] *** Joins: nixfreaknim[m] (~reversem3@2001:470:69fc:105::33d1)
[13:50:42] <PMunch> Haha :P
[13:51:38] <FromDiscord> <Elegantbeef> Narrator\: "And supakeen quickly closed Beef's code, blurting out 'no I was not'"
[13:52:04] <supakeen> no not the code, just the amount of meta data on the IRC messages
[13:52:15] <PMunch> Meta-data?
[13:52:19] <supakeen> 10:11 <FromDiscord> <fbpyr> [haxscramper](https://matrix.to/#/@haxscramper:matrix.org)\: thank you for the heads-up, luckily currently I only need clone and fetch/pull .‚Üµworking currently through the example, wich works pretty well so far.. üòå
[13:52:24] <FromDiscord> <Elegantbeef> Ah matrix -\> discord -\> Irc is hell apparently
[13:52:36] <PMunch> Oooh :P
[13:52:49] <supakeen> i can safely be ignored on this :)
[13:52:51] <PMunch> I have a script in my IRC cleans that cleans that up for me
[13:52:58] <supakeen> just a regular old grumpy IRC user
[13:53:05] <PMunch> s/cleans/client/
[13:53:20] <FromDiscord> <Elegantbeef> Lol your message caused element to go "Nope" 'Can't load this message (m.room.message)Submit logs'
[13:53:35] <PMunch> Haha, the regex one?
[13:53:48] <FromDiscord> <Elegantbeef> Nah the paste supakeen made with the matrix links
[13:53:56] <PMunch> Oooh :P
[13:54:13] <FromDiscord> <planetis> how can 'let b = not false work but not this https://play.nim-lang.org/#ix=3PVV
[13:54:55] <PMunch> Because that is parsed as (not s).uint8
[13:54:59] <FromDiscord> <Elegantbeef> Cause `not false` has a bool op
[13:55:04] <FromDiscord> <Elegantbeef> No it's not
[13:55:12] <PMunch> Yes it is?
[13:55:17] <FromDiscord> <Elegantbeef> It's parsed as `not(uint8(s))`
[13:55:36] <FromDiscord> <Elegantbeef> dot binds tighter than spaced unary
[13:55:49] <PMunch> Oh
[13:55:55] <PMunch> I was wrong then
[13:56:07] <FromDiscord> <Elegantbeef> It's cause there is a specialized bool operator
[13:56:23] <PMunch> Ah right
[13:56:25] <FromDiscord> <Elegantbeef> `States(not s.uint8)` is doing a integer conversion to enum which is checked
[13:56:41] <FromDiscord> <Elegantbeef> The enum's range is 0..1 and `not 0` is `255`
[13:57:00] <PMunch> So it goes s.uint8, that is 0, not 0 is 255, then States(255) not possible
[13:57:00] <FromDiscord> <planetis> nice `States(not s.bool)` works
[13:57:14] <FromDiscord> <Elegantbeef> Yep
[13:57:33] <PMunch> Which means that this work: https://play.nim-lang.org/#ix=3PVX
[13:57:34] <FromDiscord> <Elegantbeef> Not doesnt make sense on other enums aside from `bool` really
[13:57:42] <PMunch> But is very likely not what you where trying to do :P
[13:58:45] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3PVY
[13:59:12] <FromDiscord> <Elegantbeef> This isnt a generalizable problem imo `not`ing an enum  make much sense
[13:59:22] <FromDiscord> <planetis> I am just trying to switch between them
[13:59:37] <PMunch> Isn't generalizable? Not with that attitude!
[13:59:38] <FromDiscord> <planetis> also `States(1 - s.ord)` works
[13:59:39] <FromDiscord> <Elegantbeef> Yes I know
[14:00:24] <FromDiscord> <Elegantbeef> Well yea you can do it a lot of different ways
[14:00:33] <PMunch> You could easily write a not macro which inspects the type and then if there are two fields switches between them! Easy!
[14:00:43] <FromDiscord> <Elegantbeef> lol
[14:00:46] <FromDiscord> <planetis> lol
[14:01:10] <FromDiscord> <Elegantbeef> `proc not[T: TwoValueEnum](val: T): T` üòõ
[14:01:31] <PMunch> That could  work as well, and then a concept for TwoValueEnum?
[14:01:39] <FromDiscord> <Elegantbeef> yea
[14:01:45] <PMunch> But how would you switch? Given arbitrary values for the enum?
[14:01:58] <FromDiscord> <Elegantbeef> One second i'll show
[14:02:30] <FromDiscord> <Rika> Not all two valued enumerations are sensibly ‚Äúnot‚Äù able
[14:02:47] <FromDiscord> <Elegantbeef> The answer is just a case statement though
[14:05:23] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 272 seconds)
[14:06:05] <PMunch> See, easy! https://play.nim-lang.org/#ix=3PW1
[14:06:37] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[14:07:05] <FromDiscord> <Elegantbeef> Using a macro 0/10
[14:07:15] <FromDiscord> <Rika> ‚ÄúUnable to not‚Äù
[14:07:16] <FromDiscord> <Rika> Lmao
[14:07:21] <FromDiscord> <Rika> I am unable to can
[14:07:37] <FromDiscord> <planetis> thanks guys I wrote ``proc `not`(x: States): States = States(not x.bool)``
[14:08:02] <FromDiscord> <planetis> In reply to @PMunch "See, easy! https://play.nim-lang.org/#ix=3PW1": thats nice as well
[14:08:03] <PMunch> @planetis, be aware though that if your values aren't 0 and 1 this will fail
[14:08:09] <PMunch> Your solution that is
[14:08:26] <Amun-Ra> yes, for example it's going to fail for this Bool: https://thedailywtf.com/articles/what_is_truth_0x3f_
[14:08:29] <PMunch> As an aside you don't have to give enums values, they will enumerate themselves if you don't
[14:08:50] <FromDiscord> <planetis> ok I don't plan to generalize it anyway
[14:09:11] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3PW2 pmunch mine is cooler üòõ
[14:09:16] <PMunch> Amun-Ra, oh yikes
[14:09:34] <FromDiscord> <Rika> Boolean: True, False, Indeterminate
[14:09:43] <FromDiscord> <planetis> btw did you now that `high(myarray)` returns `range[0..something]`
[14:09:44] <FromDiscord> <Elegantbeef> Quadnary
[14:09:48] <PMunch> Oh, high and low. Sneaky!
[14:09:52] <FromDiscord> <Elegantbeef> Yes
[14:09:56] <PMunch> I was wondering how you would go about doing that
[14:10:05] <FromDiscord> <Rika> In reply to @Rika "Boolean: True, False, Indeterminate": Oh throw in Undefined here too
[14:10:12] <FromDiscord> <planetis> mod used to work the same and it was removed
[14:10:21] <Amun-Ra> Rika: and nil ;>
[14:10:31] <FromDiscord> <Rika> Eh null can be bunched in with undefined
[14:10:39] <PMunch> @planetis, wait what?
[14:10:52] <PMunch> `high(myarray)` returns the highest index, no?
[14:11:04] <FromDiscord> <Elegantbeef> Yea but it's a subrange type
[14:11:05] <FromDiscord> <planetis> `x mod 4` used to be `range[0..3]`
[14:11:14] <FromDiscord> <Elegantbeef> !eval echo typeof([10, 20].high)
[14:11:17] <NimBot> range 0..1(int)
[14:11:37] <Amun-Ra> Rika: nil would indicate absence of a value while undefined presence of one we don't know
[14:11:45] <PMunch> Huh, didn't know that
[14:11:52] <PMunch> Is it actually defined as a range though?
[14:11:53] <FromDiscord> <Rika> In reply to @Amun-Ra "<@259277943275126785>: nil would indicate": Then indeterminate
[14:12:05] <FromDiscord> <Elegantbeef> What do you mean?
[14:12:15] <FromDiscord> <Elegantbeef> Arrays are implicitly converted into `array[range, type]`
[14:12:20] <PMunch> !eval for i in [10, 20].high: stdout.write "."
[14:12:22] <Amun-Ra> Rika: I would use indeterminate for something we don't even know is null or undefined ;)
[14:12:22] <NimBot> Compile failed: /usercode/in.nim(1, 18) Error: type mismatch: got <range 0..1(int)>
[14:12:25] <FromDiscord> <Elegantbeef> !eval typeof([2, 3, 4])\`
[14:12:28] <NimBot> Compile failed: /usercode/in.nim(1, 20) Error: identifier expected, but got '[EOF]'
[14:12:37] <FromDiscord> <Elegantbeef> !eval typeof([2, 3, 4])
[14:12:40] <NimBot> Compile failed: /usercode/in.nim(1, 7) Error: expression 'typeof([2, 3, 4])' is of type 'typedesc[array[0..2, int]]' and has to be used (or discarded)
[14:12:55] <FromDiscord> <Elegantbeef> Too tired apparently
[14:12:59] <FromDiscord> <Elegantbeef> So buh bye
[14:13:07] <PMunch> Oh right, so it's not an HSlice
[14:13:13] <PMunch> Yeah range makes more sense
[14:13:47] <PMunch> !eval var myArr: array[5..10, int]; echo typeof(myArr.high)
[14:13:49] <NimBot> range 5..10(int)
[14:13:55] <PMunch> Neat
[14:36:10] *** Joins: krux02 (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de)
[14:39:11] <nrds> <03Abrax99> where is this bridged too?
[14:39:35] <FromDiscord> <Rika> Discord and IRC and matrix
[14:39:44] *** Joins: gsalazar (~gsalazar@194.38.148.130)
[14:40:19] <nrds> <03Abrax99> you on irc or discord Rika?
[14:40:25] <nrds> <03Abrax99> or matrix?
[14:43:06] <FromDiscord> <Rika> Discord
[14:45:06] *** rwb is now known as rb
[14:52:55] <FromDiscord> <Aspirus> In reply to @Amun-Ra "yes, for example it's": among us
[14:53:53] <FromDiscord> <Aspirus> sent a code paste, see https://play.nim-lang.org/#ix=3PW9
[14:54:14] <FromDiscord> <Aspirus> sent a code paste, see https://play.nim-lang.org/#ix=3PWa
[14:54:38] <FromDiscord> <aph> no bots in discord üòî
[14:54:45] <FromDiscord> <aph> though there are in irc
[14:58:19] <FromDiscord> <Waldecir Santos> what sugar is called with `repr` for an object ?
[15:01:02] <FromDiscord> <Waldecir Santos> Oops I think I just need to implement it
[15:19:17] <PMunch> What do you mean what sugar?
[15:19:23] <PMunch> I believe repr is built-in
[15:19:58] <PMunch> Yup, it's "magic" https://nim-lang.org/docs/system.html#repr%2CT
[15:20:06] <PMunch> Meaning that it is implemented in the compiler itself
[15:20:15] <nrds> <03Abrax99> ah discord
[15:20:17] <nrds> <03Abrax99> coo
[15:21:08] <FromDiscord> <Waldecir Santos> Yeah I was trying to implement a `repr` for my custom object, the soultion was to just create `‚Üµ  proc repr(obj: MyObject): string =`
[15:25:11] <FromDiscord> <Waldecir Santos> Does nim have `classmethods`  like python ?
[15:25:13] <NimEventer> New Nimble package! shorteststring - word size strings stored in an integer, see https://github.com/metagn/shorteststring
[15:25:32] <FromDiscord> <Waldecir Santos> Does nim have classmethods  like python ?
[15:25:59] <PMunch> Classmethods?
[15:28:25] <FromDiscord> <Yepoleb> Iirc classmethods are defined in a base class and get a classobject of the class they are actually called from as the first parameter
[15:30:43] <FromDiscord> <konsumlamm> Nim doesn't even have normal python-like methods
[15:31:38] <FromDiscord> <konsumlamm> you can have a function that takes a `typedesc[MyType]` as first parameter, so that you can call it like `MyType.myProc(...)`
[15:33:21] <PMunch> Yeah, that is similar to a static method in Python. A class method I guess would be more akin to one which takes a generic instance with static data in it
[15:34:52] <FromDiscord> <Waldecir Santos> perfect @konsumlamm that is what I need, Thank you
[15:35:12] <PMunch> Do you need that though?
[15:35:17] <PMunch> What are you actually trying to do?
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:43] <FromDiscord> <konsumlamm> a class method is kinda useless, since you get access to the "class" (the type) anyway thrugh static typing
[15:38:10] <FromDiscord> <konsumlamm> so the distinction between static and class method isn't that useful in a statically typed language (disregarding subtyping)
[15:42:22] <FromDiscord> <fbpyr> sent a long message, see https://paste.rs/46G
[15:44:23] <FromDiscord> <Rika> In reply to @NimEventer "New Nimble package! shorteststring": interesting
[15:45:24] <FromDiscord> <konsumlamm> sounds pretty useless, ngl
[15:45:58] <FromDiscord> <Rika> i mean sure
[15:46:32] <FromDiscord> <Yepoleb> I think classmethods are used pretty much exclusively for factory functions. So you can call `from_json` for example on a subclass and get the correct object.
[15:47:38] <FromDiscord> <Rika> so just like a first param `typedesc[T]` where T is the "subclass"?
[15:47:57] <FromDiscord> <Yepoleb> I think so
[15:49:11] <PMunch> You could also argue that this is a nice feature: http://ix.io/3PWs
[15:49:17] <FromDiscord> <Forest> What is all this? https://media.discordapp.net/attachments/371759389889003532/944206433426239498/Screenshot_2022-02-18-12-19-09-313_com.termux.jpg
[15:49:18] <PMunch> See how shoddy that looks in Nim?
[15:49:53] <PMunch> @fbpyr, something like `repr` perhaps?
[15:52:30] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 260 seconds)
[15:54:22] <PMunch> @fbpyr, it seems like `error` was never defined in that library, I think it was just an illustration..
[15:54:38] <FromDiscord> <Rika> who are you replying to
[15:55:14] <PMunch> The person who sent this: sent a long message, see https://paste.rs/46G
[15:55:56] <PMunch> Uhm @Forest, what are you reading?
[15:57:53] <FromDiscord> <jmgomez> Im getting this warning when trying to execute‚Üµchoosenim.exe update 1.6.4 https://media.discordapp.net/attachments/371759389889003532/944208598018449418/unknown.png
[15:57:58] <PMunch> @fbpyr, I think it was meant to be this procedure: https://nim-lang.org/docs/logging.html#error.t%2Cvarargs%5Bstring%2C%5D
[15:58:12] <PMunch> The example just forgets to import the logging module
[15:58:31] <PMunch> @jmgomez, yeah that's a false positive
[15:58:52] <FromDiscord> <Rika> the hell is choosenim gonna do on android xd
[15:59:17] <PMunch> I guess it might work in Termux
[15:59:35] <FromDiscord> <jmgomez> lol ok
[16:00:09] <FromDiscord> <jmgomez> is it normal to found discrepances using the same compiler (clang) in win vs linux? Never encounter that In cpp
[16:00:36] <PMunch> What kind of discrepancies?
[16:01:15] <FromDiscord> <jmgomez> Im struggling to know what's going on in a function that accepts a function bind from nim and the function send over cpp. In linux works just find, In windows it stops (and no crash or error message)
[16:01:52] <PMunch> How is the function defined?
[16:02:11] <FromDiscord> <jmgomez>  https://media.discordapp.net/attachments/371759389889003532/944209681914658866/unknown.png
[16:02:35] <FromDiscord> <jmgomez> sent a code paste, see https://play.nim-lang.org/#ix=
[16:02:46] <PMunch> Why does everyone suddenly insist on sending images of text? When did people stop knowing how to use Ctrl+x ctrl+v?
[16:02:54] <FromDiscord> <jmgomez> sent a code paste, see https://play.nim-lang.org/#ix=3PWv
[16:03:00] <PMunch> Nothing against you personally @jmgomez :P
[16:03:12] <PMunch> Try to use cint
[16:03:18] <FromDiscord> <jmgomez> I think it's win fault, it just quicker
[16:03:19] <FromDiscord> <jmgomez> ok
[16:03:46] <PMunch> Nims int is always the same size as a pointer, and might differ from C/C++'s int type
[16:04:14] <FromDiscord> <Forest> In reply to @PMunch "Uhm <@909883978717204561>, what are": It's the outputted JS code from Nim's JS backend, i know it's not meant to be human readable odd
[16:04:32] <FromDiscord> <Forest> In reply to @PMunch "Why does everyone suddenly": Because it's a giant file :p
[16:04:45] <FromDiscord> <jmgomez> In reply to @PMunch "Nims int is always": Good to know. Just changed it but it keeps doing the same
[16:05:23] <PMunch> @Forest, you don't need to copy paste the entire file, you can copy a selection
[16:06:01] <PMunch> Hmm, try to use {.exportc, cdecl.}, but I guess that might be what {.test.} does
[16:07:31] <FromDiscord> <jmgomez> cdecl was missing, just added it and it does the same
[16:07:43] <FromDiscord> <jmgomez> what bothers me most is that it works fine in linux
[16:08:00] <PMunch> What can I say, superior OS :P
[16:08:12] <FromDiscord> <Forest> In reply to @PMunch "I guess it might": It'd work if there arm is supported
[16:08:15] <FromDiscord> <Forest> In reply to @PMunch "<@909883978717204561>, you don't need": Aight
[16:08:30] <PMunch> Do you cross compile or compile on the Windows machine?
[16:09:03] <FromDiscord> <jmgomez> In reply to @PMunch "What can I say,": xD it may be but Im evaluating nim to output code for different archs/os. Im compiling in a windows machine
[16:09:49] <PMunch> Oh wait, is the function defined in C?
[16:10:28] <FromDiscord> <jmgomez> I tried both, a function defined in C and a function defined in nim. Both scenarios work in linux and both fails in win
[16:10:38] <PMunch> Then you probably need to do `proc callbackTest(arg: cint, fun: proc(arg: cint): cint {.cdecl.}): cint {.exportc, cdecl.}`
[16:11:31] <PMunch> By the way, do you load this as a dynamic library or as a static library?
[16:13:31] <FromDiscord> <jmgomez> ohh that worked!
[16:13:57] <FromDiscord> <jmgomez> Thanks man! ‚ÜµIm planning to do both (iOS requires static). I need to consider something else?
[16:14:53] <FromDiscord> <jmgomez> I guess you cant add pragmas with the short sugar syntax right?
[16:17:14] <FromDiscord> <Rika> you cannot
[16:17:37] *** Quits: enyc (~enyc@user/enyc) (Ping timeout: 240 seconds)
[16:20:40] <FromDiscord> <konsumlamm> i thought you can?
[16:20:51] <FromDiscord> <konsumlamm> you're talking about `sugar.->`, right?
[16:21:20] <FromDiscord> <konsumlamm> at least the documentation says it supports pragmas and there's an example for it
[16:21:32] <FromDiscord> <Rika> eh did i forget again
[16:21:41] <FromDiscord> <Rika> maybe im remembering 1.0 days
[16:22:35] <FromDiscord> <konsumlamm> the pragmas go before the `->` afaict
[16:22:53] <PMunch> @jmgomez, happy to help :)
[16:23:09] <PMunch> You might want to check out Genny by the way: https://github.com/treeform/genny
[16:23:24] <FromDiscord> <konsumlamm> so e.g. `fun : (cint) {.cdecl.} -> cint`
[16:23:29] <PMunch> Haven't tried it myself, but it promises to make Nim/C interactions easier (and other languages)
[16:23:29] <FromDiscord> <konsumlamm> (edit) "`fun :" => "`fun:"
[16:31:02] <PMunch> fun, fun, fun
[16:37:39] <FromDiscord> <jmgomez> Looks really nice!
[16:38:04] <FromDiscord> <jmgomez> btw what's the preferred way to pass data over? raw pointers and using ptr in nim side of things?
[16:42:02] <PMunch> It depends a bit
[16:42:22] <PMunch> You need to make sure that the garbage collection isn't messing things up for your
[16:42:34] <PMunch> But in general it tends to be very C-like with a lot of pointers
[16:43:35] <FromDiscord> <jmgomez> üëç
[16:45:47] <PMunch> treeform, I'm looking at the pixie and pixie-python packages and the Python one seems to lack behind the Nim one. Is there any particular reason for that?
[16:47:35] <PMunch> @jmgomez, of course normally you'd create some nice abstraction in Nim
[17:00:54] <FromDiscord> <Evrensel Ki≈üilik> hewwoooo
[17:01:00] <FromDiscord> <Evrensel Ki≈üilik> is there anyone using Arch????????????
[17:03:40] <PMunch> Yes, how so?
[17:04:06] <PMunch> By the way, if you save your question marks you can ask a lot more questions
[17:04:13] <PMunch> Don't want to waste them all at the same time
[17:04:31] <FromDiscord> <Evrensel Ki≈üilik> üò±
[17:04:35] <FromDiscord> <Evrensel Ki≈üilik> sooooooooooooooooooooooooooooooooooooooooooo
[17:04:47] <PMunch> Welp, there goes all your O's for the day
[17:04:57] <FromDiscord> <Evrensel Ki≈üilik> üò±
[17:05:06] <FromDiscord> <Evrensel Ki≈üilik> https://aur.archlinux.org/packages/gdb-frontend-bin can you try installing this package??????????????????
[17:05:37] <PMunch> Again with the question marks...
[17:05:58] <FromDiscord> <Evrensel Ki≈üilik> In reply to @PMunch "Again with the question": no lol
[17:06:11] <FromDiscord> <Evrensel Ki≈üilik> someone told me there is an issue with package
[17:06:40] <FromDiscord> <Evrensel Ki≈üilik> we should test if it is installing correctly üò±
[17:09:01] <PMunch> Should we?
[17:09:09] <PMunch> Wait, what does this have to do with Nim?
[17:11:22] <PMunch> Seems to install fine here
[17:12:28] <FromDiscord> <Evrensel Ki≈üilik> In reply to @PMunch "Seems to install fine": oh
[17:12:34] <FromDiscord> <Evrensel Ki≈üilik> thank youuuuuuuuu
[17:13:16] <FromDiscord> <Evrensel Ki≈üilik> soooooooooo someone told me that better the package use could use setup.py
[17:13:33] <FromDiscord> <Evrensel Ki≈üilik> instead of copying app to /opt
[17:13:56] <FromDiscord> <Evrensel Ki≈üilik> and i made it buuuut another one told me that the package is not installing correctly
[17:14:18] <FromDiscord> <Evrensel Ki≈üilik> and i fixed it toooooo i had to test it buuuuuut i don't have Arch üò±
[17:17:25] *** Joins: keyehzh (~keyehzh@user/keyehzh)
[17:25:32] *** Joins: PMunch_ (~PMunch@user/pmunch)
[17:25:42] *** Quits: PMunch (~PMunch@user/pmunch) (Read error: Connection reset by peer)
[17:27:36] *** PMunch_ is now known as PMunch
[17:27:39] *** Joins: rockcavera (~rc@192.12.112.205)
[17:27:39] *** Quits: rockcavera (~rc@192.12.112.205) (Changing host)
[17:27:39] *** Joins: rockcavera (~rc@user/rockcavera)
[17:33:31] <FromDiscord> <Forest> sent a code paste, see https://play.nim-lang.org/#ix=3PWQ
[17:34:55] <PMunch> I'm guessing importjs doesn't allow instantiation like you do
[17:35:11] <FromDiscord> <Forest> I'm not trying to initialise it though?
[17:36:17] <PMunch> ` = newJsObject()` initialisation
[17:41:16] *** Joins: arkurious (~arkurious@user/arkurious)
[17:52:35] <FromDiscord> <Forest> Oh
[17:52:49] <FromDiscord> <Forest> But if I don't do that it doesn't work then :/
[17:53:04] <PMunch> Try to declare it with `var`
[17:53:14] <PMunch> I have an open issue for a similar thing with C
[17:53:29] <FromDiscord> <Forest> Ah okay then
[17:54:08] <PMunch> Essentially a let requires initialization, but `importc`/`importjs` should waive this requirement, but it doesn't
[17:55:19] <FromDiscord> <Forest> Ah okay that makes sense
[17:55:50] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:56:03] <FromDiscord> <auxym> Odd, I haven't had issues with `let` and `importc`, see https://github.com/beef331/picostdlib/blob/master/src/picostdlib/pio.nim#L24. Does it show up in specific cases?
[17:56:41] <FromDiscord> <Forest> Still getting the same error: https://www.toptal.com/developers/hastebin/qanijoniqi.nim
[17:56:46] <FromDiscord> <Forest> On line 7
[17:59:34] <PMunch> auyxm, hmm, maybe that one is fixed then
[18:02:03] <PMunch> Aha, apparently it was indeed fixed: https://github.com/nim-lang/Nim/issues/14253
[18:02:26] <PMunch> I guess maybe it got fixed for importc but not importjs..
[18:04:13] <PMunch> @Forest, oh the pragma needs to go after the name but before the colon
[18:04:50] <FromDiscord> <Forest> Ohh
[18:06:54] <FromDiscord> <Forest> Thanks it's working now!
[18:14:38] <FromDiscord> <auxym> should a new issue be opened for importjs then?
[18:15:43] <PMunch> Probably, but first of course verify that it is the case
[18:20:51] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: Leaving)
[18:25:53] <FromDiscord> <gerwy> yoo Kisilik the person from GDBFrontend :>>
[18:26:12] <FromDiscord> <gerwy> @Evrensel Ki≈üilik how is adding nim feature going?
[18:27:31] <FromDiscord> <Evrensel Ki≈üilik> In reply to @Life Sucks "<@!359071052397281280> how is adding": i don't have time now buuut i will improve Nim debugging experience soooon üò±
[18:29:20] *** Joins: xaltsc (~xaltsc@user/xaltsc)
[18:35:55] <FromDiscord> <gerwy> suure, good luck and waiting for it :3
[18:40:22] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[18:40:53] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[18:51:48] <FromDiscord> <Nick.> Learning how to code in Nim. Is there a module that pause the program until a key is pressed?
[18:54:01] <FromDiscord> <Rika> `stdin.readChar()`?
[18:54:34] <FromDiscord> <Rika> you have to discard it if you dont need what key was pressed, which i assume you dont
[18:54:35] <FromDiscord> <Rika> so
[18:54:41] <FromDiscord> <Rika> `discard stdin.readChar()`
[18:54:43] <FromDiscord> <Rika> i assume will work
[18:55:18] <FromDiscord> <Nick.> Should be a simple one. I just want to wait before closing the program. "Press any key to close my terminal"
[18:56:32] <FromDiscord> <Rika> `echo "Press any key to close my terminal"; discard stdin.readChar; #[i assume after this your program has no more code, otherwise...]# quit()`
[18:57:21] <FromDiscord> <Nick.> Yep, that's it.
[18:57:47] <FromDiscord> <Nick.> thanks you. So always discard when don't need it.
[18:58:00] <FromDiscord> <Rika> if you dont need the result of a procedure yes
[18:58:56] <FromDiscord> <Nick.> thanks üôÇ
[18:59:45] <FromDiscord> <Nick.> I do see you use ; is that optional to add?
[18:59:59] <FromDiscord> <Nick.> after every command in nim?
[19:01:00] *** Quits: euantorano (sid180289@id-180289.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[19:01:19] <FromDiscord> <Rika> Uh optional, only for one liners that I put
[19:01:28] <FromDiscord> <Rika> They can be swapped with line breaks
[19:01:56] *** Joins: euantorano (sid180289@id-180289.helmsley.irccloud.com)
[19:17:22] <FromDiscord> <Evrensel Ki≈üilik> In reply to @Life Sucks "suure, good luck and": i would like that if someone could contribute to project üòä
[19:17:39] <FromDiscord> <Evrensel Ki≈üilik> are you using Nim with Godot???
[19:20:37] <FromDiscord> <gerwy> Im planning on using nim bindings
[19:21:10] <FromDiscord> <gerwy> In reply to @Evrensel Ki≈üilik "i would like that": And sorry but from what i remember its JS or TS and i dont feel very comfortable with using those
[19:21:15] <FromDiscord> <gerwy> I don like em
[19:23:28] <FromDiscord> <Evrensel Ki≈üilik> In reply to @Life Sucks "And sorry but from": oh ok
[19:37:29] <FromDiscord> <auxym> I'm also not up for contribution for various reasons (also no familiar with js&co), but a nice, friendly graphical debugger for nim would be a game changer in terms of the current tooling situation for nim, IMO
[19:45:49] <FromDiscord> <Evrensel Ki≈üilik> In reply to @auxym "I'm also not up": sooooo buuuut the best way for very flexible UIs is JS üòä
[19:52:21] <FromDiscord> <treeform> In reply to @PMunch "<@107140179025735680>, I'm looking at": No we are just lazy
[19:54:03] <FromDiscord> <treeform> In reply to @creikey "<@!107140179025735680> I'm tentatively looking": Wasm all the way, emscripten has a windowing api
[19:56:21] <FromDiscord> <treeform> https://emscripten.org/docs/api_reference/html5.h.html#html5-h
[20:21:21] <FromDiscord> <Forest> Someone written a wrapper for emscripten in Nim yet?
[20:28:09] *** Quits: ltriant (~ltriant@118.102.122.246) (Read error: Connection reset by peer)
[20:28:25] *** Joins: ltriant (~ltriant@118.102.122.246)
[20:35:13] <FromDiscord> <Evrensel Ki≈üilik> In reply to @Forest "Someone written a wrapper": you can build C sources for WebAssembly
[20:35:32] <FromDiscord> <Hamid_Bluri> https://github.com/treeform/nim_emscripten_tutorial
[20:35:33] <FromDiscord> <Hamid_Bluri> ?
[20:38:42] <FromDiscord> <Forest> Ah neat
[20:44:37] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:852c:c89f:7cdd:a935)
[21:01:55] *** Quits: keyehzh (~keyehzh@user/keyehzh) (Remote host closed the connection)
[21:15:48] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:852c:c89f:7cdd:a935) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[21:19:28] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:852c:c89f:7cdd:a935)
[21:29:54] <FromDiscord> <Forest> Anyone know how I'd import all files in a directory?
[21:30:08] <FromDiscord> <Forest> I just need to include/import it at compile time
[21:30:22] <FromDiscord> <Forest> I'm probably gonna have a ton of files and don't wanna import them all manually lol
[21:30:32] <FromDiscord> <Forest> (I also don't need direct references)
[21:30:37] *** Joins: enthus1ast (~david@ganymed.kgu.de)
[21:37:31] *** Quits: enthus1ast (~david@ganymed.kgu.de) (Quit: WeeChat 1.9.1)
[21:39:25] <FromDiscord> <BhamidipatiNikhil> In reply to @Forest "Anyone know how I'd": I think we can use templates for this...
[21:39:47] <FromDiscord> <Forest> Oh? How?
[21:42:35] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:51:45] <FromDiscord> <BhamidipatiNikhil> sent a code paste, see https://play.nim-lang.org/#ix=3PY6
[21:52:41] <FromDiscord> <Forest> Ah okay
[21:53:00] <FromDiscord> <Forest> Well i still need to figure out the last bit aha
[21:53:04] <FromDiscord> <Forest> Thanks though!
[21:58:02] <FromDiscord> <demotomohiro> How about to write a module that import all files and export them like this: https://github.com/mratsim/Arraymancer/blob/master/src/arraymancer.nim
[22:00:26] <FromDiscord> <demotomohiro> @BhamidipatiNikhil Your code that reads list of file is executed at runtime, but import statements runs at compile time.
[22:01:48] <FromDiscord> <BhamidipatiNikhil> In reply to @demotomohiro "<@764483963422375946> Your code that": Oh yes... so i should include the for loop inside the template too and remove the step of taking input from user....
[22:02:49] <FromDiscord> <demotomohiro> Even if it reads content of a directory at compile time, I dont think template cannot create import statement from a list of path. Macros can do it.
[22:07:56] <FromDiscord> <BhamidipatiNikhil> In reply to @demotomohiro "Even if it reads": Oh yes, because imports are allowed only at top level!!
[22:07:56] <FromDiscord> <demotomohiro> Just writing statememts under template doesn't make them executed at compile time. Here is how run code at compile time:https://internet-of-tomohiro.netlify.app/nim/faq.en.html#compile-time-how-to-run-code-at-compile-timeqmark
[22:08:36] <FromDiscord> <BhamidipatiNikhil> (edit) "level!!" => "in the editor..."
[22:11:57] <FromDiscord> <BhamidipatiNikhil> In reply to @demotomohiro "Just writing statememts under": Yes, understood!...
[22:14:48] <FromDiscord> <demotomohiro> In reply to @BhamidipatiNikhil "Oh yes, because imports": Putting `import` statements in `template` is possible: https://play.nim-lang.org/#ix=3PYh
[22:15:38] <FromDiscord> <demotomohiro> But I don't think `template` cannot generate `import` statement from `seq[string]`.
[22:15:54] <FromDiscord> <auxym> yeah you'd need a macro for that
[22:16:51] <FromDiscord> <auxym> I have a macro that generates `{.compile: .}` pragmas at compile time to add C files to the build
[22:45:11] <FromDiscord> <Forest> Oh?
[22:49:24] <FromDiscord> <auxym> https://github.com/auxym/nim-on-samd21/blob/master/src/startup.nim you could probably do the same for import, just need to figure out the AST (eg using dumpast)
[23:22:19] <FromDiscord> <Waldecir Santos> Is it possible to store a type in a variable ?
[23:23:26] <FromDiscord> <Waldecir Santos> sent a code paste, see https://play.nim-lang.org/#ix=3PYG
[23:23:35] <FromDiscord> <Waldecir Santos> Kinda this ‚òùÔ∏è
[23:25:42] <FromDiscord> <Waldecir Santos> I'm working on a "ORM" so I need to store the type
[23:29:07] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[23:29:19] <FromDiscord> <Waldecir Santos> right now I'm storing as string `var objtype = $typeof(Obj1)`
[23:44:14] <FromDiscord> <kodkuce> sent a code paste, see https://play.nim-lang.org/#ix=3PYM
[23:46:11] <FromDiscord> <kodkuce> should probaby posted this in webdev :(
[23:52:59] <FromDiscord> <kodkuce> dont think it is f will just rewrite it in c# no time for hole diving
