[00:06:16] <cobber> think I got it... renamed all my modules with .git suffix - described in https://go.dev/ref/mod#private-module-proxy-direct but not pretty
[00:06:26] *** Quits: carlavilla (~carlavill@2a0c:5a84:3407:5100:221:6bff:fe3b:cee4) (Remote host closed the connection)
[00:08:18] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[00:21:29] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:23:55] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Quit: Textual IRC Client: www.textualapp.com)
[00:27:06] <mehwork> Tv_: thanks
[00:27:14] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[00:30:55] <bpalmer> hopefully you were using git or that will be confusing.
[00:33:34] *** Parts: Anton[m]12 (~antongmoz@2001:470:69fc:105::1:4e88) ()
[00:39:53] <pjs> in a web app, is it bad practice to pass an *sql.DB pool via context.Context to handler functions? I see such mixed opinions and examples so I'm just curious what you all think.
[00:40:41] *** Joins: mobbi_ (~quassel@dfsm20ygbz2cph9gyzzzy-3.rev.dnainternet.fi)
[00:43:52] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[00:44:31] *** Quits: roshanavand (~roshanava@185.209.196.147) (Ping timeout: 250 seconds)
[00:44:54] *** Quits: mobbi (~quassel@dfsm20ygzcq1v01jxqb4t-3.rev.dnainternet.fi) (Ping timeout: 265 seconds)
[00:46:10] *** Joins: anonton (~anonton@2001:470:69fc:105::1:4e88)
[00:46:15] <b0nn> pjs: I would have DI'd the *sql.DB pool, rather than passed it about at runtime
[00:46:28] <bpalmer> I would avoid it if possible, since (a) it doesn't seem part of a request's specific context; and (b) it fits better into a general db config/interface
[00:46:49] <b0nn> If you stick things in context, you have to let your consumers of that thing know that it's there (or handle when it's not)
[00:49:13] *** Joins: roshanavand (~roshanava@185.213.155.176)
[00:49:13] <eric_hill> hey all.  Been out for a few weeks.  Did I miss anything awesome?
[00:50:13] <pjs> b0nn, bpalmer thank you both
[00:50:26] <pjs> b0nn: btw, what is DI'd?
[00:50:29] <cobber> @bpalmer yep, git everywhere here :-)
[00:51:46] *** Quits: tyson2 (~user@cpe688f2ec1f9b3-cm688f2ec1f9b0.cpe.net.cable.rogers.com) (Remote host closed the connection)
[00:51:53] <ikke> pjs: dependency injected
[00:58:49] <Tv_> pjs: make your http handlers be methods of the state they need
[00:59:56] <Tv_> type App struct { db *sql.DB; ... }; func (app *App) handlePushingButton(w http.ResponseWriter, req *http.Request) { ... }
[01:00:48] *** Quits: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263) (Quit: WeeChat 3.3)
[01:01:33] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:9563:3661:427a:9acd)
[01:01:43] <pjs> ikke: Ah, got it
[01:02:47] <bpalmer> Tv_'s suggestion is more concrete than mine but basically what I was suggesting.
[01:02:58] <Tv_> me like simple words
[01:03:07] <pjs> Tv_, that's the route I'm currently doing things actually. Thanks!
[01:03:14] <pjs> heh
[01:03:22] <bpalmer> generally, stuff that goes into the context is stuff that needs to flow with the request (e.g., if you pass it to the next microservice down the line)
[01:03:44] <bpalmer> maybe some stuff with user credentials / authorization , maybe some custom logging
[01:03:53] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[01:05:37] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[01:05:51] <noord> bpalmer: what is microservice?
[01:06:12] <noord> why is that so popular
[01:08:39] <bpalmer> when two services love each other very much, they get together and ... well, a tiny microservice emerges 2 sprints later.
[01:10:23] <cobber> bpalmer  :O  :D
[01:10:31] <Tv_> noord: large companies having people management problems. really.
[01:10:31] <noord> why is everyone pretend to be google
[01:11:05] <noord> Tv_: I know management pattern rather than implementation
[01:11:20] <noord> *I know it is
[01:11:55] <bpalmer> Even if you're a relatively small company, there are some advantages in having a single unit to deploy, instead of a large monolith
[01:12:01] <Tv_> microservice ~= team size is constrained to two pizzas, no shared code ownership, scale by adding teams
[01:12:33] <Tv_> also, more about copying Amazon than Google
[01:13:42] <bpalmer> any time you release something to production, there are graphs to look at; if you're deploying microservices, you have fewer graphs to worry about, helping (in theory) to isolate changes and detect issues faster.
[01:14:08] *** Quits: shka (~herr@109.231.0.226) (Ping timeout: 256 seconds)
[01:14:57] <noord> bpalmer: also it adds jitter to system
[01:15:22] <Tv_> ehh these days outages come from the *interactions* of the systems, thus you need to look at all the things connected to/from your microservice
[01:15:59] <Tv_> your latency might have gone from 100ms to 110ms but that might have caused an outage elsewhere
[01:17:50] <bpalmer> yeah, but it's mostly a graph traversal at that point (if and only if there's only a few deployments at a time, admittedly)
[01:18:28] <bpalmer> something goes wrong in a running system, look for the closest thing most recently deployed as a strong lead.
[01:18:46] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Read error: Connection reset by peer)
[01:19:36] <noord> Tv_: people thought distributed system fallacies is not real thing, but usually learn it hard way
[01:20:22] *** Quits: remote (~self@user/hackers) (Ping timeout: 256 seconds)
[01:21:27] <bpalmer> I'm not sure about jitter, but they probably add latency.
[01:21:37] <bpalmer> (depending on precisely what the architecture is)
[01:22:18] <Tv_> in almost any general purpose computing setting, of course they add jitter. do they add enough jitter to matter is the question.
[01:23:40] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[01:27:36] <noord> bpalmer: https://how.complexsystems.fail/
[01:30:42] <noord> I am surprised that is commonly adopted, the love story of two tiny services, then reproducing etc
[01:30:57] <b0nn> WRT Microservices, like *everything* in engineering, there are advantages and disadvantages
[01:31:49] <b0nn> I like to look at what happened in kernels for guidance on what to expect - everyone was building monoliths, then micro kernels, and, now, hybrids that try to be the best of both worlds
[01:33:11] <b0nn> They cost more in terms of time (a function call is now across a network, instead of a pointer in memory) but they do bring a lot more flexibility
[01:34:14] <b0nn> ie. if layer A is costing n time units, and you need N*x, then that layer can be replicated x times with microservices, but with montoliths you have to replicate the entire system
[01:34:15] *** Joins: eloy (~quassel@2001:bc8:182c:650::1)
[01:34:33] <b0nn> montoliths is the correct spelling
[01:40:04] <noord> b0nn: I am not a fan or completely against it, but little bit nervous about everyone building own distributed system on top of cloud providers.
[01:40:38] <noord> even adding simple message broker to system cause immense issues
[01:41:19] *** Quits: itok_ (sid418430@id-418430.ilkley.irccloud.com) ()
[01:41:37] *** Joins: itok (sid418430@id-418430.ilkley.irccloud.com)
[01:41:54] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[01:42:09] <b0nn> hmm, adding a message broker to a monolith is just as .. interesting :)
[01:42:59] <b0nn> Most companies that I have worked for are building for the scale they want, not the scale that they have
[01:43:39] *** Joins: fikran (~fikran@user/fikran)
[01:43:45] <b0nn> s/worked for/worked for though
[01:44:29] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:79de:c576:ffa4:63cd)
[01:47:38] <Tv_> the obvious next stage is to switch to mongoliths
[01:48:23] <bpalmer> but mongo only pawn in game of life.
[01:49:31] <b0nn> !blazing saddles references
[01:50:11] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:79de:c576:ffa4:63cd) (Ping timeout: 252 seconds)
[01:54:09] <Tv_> fun fact: blazing saddles made fart humor on the big screen mainstream
[01:56:03] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 252 seconds)
[01:57:58] *** Joins: imm_ (~imm_@user/imm/x-3405860)
[01:58:37] *** Quits: theoceaniscool (~theoceani@119.12.232.133) (Ping timeout: 252 seconds)
[02:07:47] *** Quits: cobber (~protorom@213.240.182.77) (Quit: cobber)
[02:09:18] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[02:12:23] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-800d-bd41-deec-376b.res6.spectrum.com)
[02:12:43] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[02:19:58] *** Quits: girafe (~girafe@176-147-142-235.abo.bbox.fr) (Read error: Connection reset by peer)
[02:20:37] *** Joins: girafe (~girafe@176-147-142-235.abo.bbox.fr)
[02:20:51] *** Joins: cobber (~protorom@213.240.182.77)
[02:25:32] *** Joins: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de)
[02:25:33] *** Quits: espero (~espero@ucitelonline.pedf.cuni.cz) (Quit: Leaving)
[02:27:17] *** Joins: espero (~espero@ucitelonline.pedf.cuni.cz)
[02:29:42] *** Quits: arinov (~arinov@213.194.126.155) (Quit: WeeChat 3.3)
[02:30:25] *** Quits: espero (~espero@ucitelonline.pedf.cuni.cz) (Client Quit)
[02:30:36] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[02:30:46] *** Joins: arinov (~arinov@213.194.126.155)
[02:31:46] *** Joins: espero (~espero@ucitelonline.pedf.cuni.cz)
[02:31:48] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[02:32:36] *** Quits: noonien (~noonien@user/noonien) (Quit: The Lounge - https://thelounge.chat)
[02:32:44] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[02:32:55] *** Joins: noonien (~noonien@user/noonien)
[02:34:05] *** Quits: slowtyper (~slowtyper@user/slowtyper) (Quit: ZNC 1.8.2 - https://znc.in)
[02:34:21] *** Joins: slowtyper (~slowtyper@user/slowtyper)
[02:34:36] *** Quits: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[02:35:02] *** Joins: rcernin (~rcernin@144.132.211.234)
[02:35:05] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 256 seconds)
[02:35:11] *** Joins: Atque (~Atque@user/atque)
[02:35:12] <seebs> Fun fact: The studio people told Mel Brooks to, among other things, take out all the fart jokes, fire Gene Wilder, and variously change many other things. He said yes to all of these changes and made exactly none of them.
[02:36:00] *** Quits: acosta (~acosta@163.172.62.165) (Quit: The Lounge - https://thelounge.chat)
[02:36:30] *** Joins: acosta (~acosta@163.172.62.165)
[02:36:55] *** Quits: rcernin (~rcernin@144.132.211.234) (Client Quit)
[02:38:04] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[02:38:49] *** Joins: rcernin (~rcernin@144.132.211.234)
[02:46:30] *** Quits: acosta (~acosta@163.172.62.165) (Quit: The Lounge - https://thelounge.chat)
[02:47:26] *** Quits: ztx (~ztx@user/ztx) (Read error: Connection reset by peer)
[02:49:55] *** Joins: acosta (~acosta@163.172.62.165)
[02:50:01] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[02:56:06] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[02:56:59] *** Joins: hellstabber (uid531276@id-531276.hampstead.irccloud.com)
[02:57:17] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 252 seconds)
[02:59:07] *** Quits: transacid (~transacid@46.182.20.35) (Ping timeout: 252 seconds)
[03:04:06] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Ping timeout: 265 seconds)
[03:08:29] *** Joins: ajunior (~ajunior@189-49-228-177.user3p.veloxzone.com.br)
[03:10:56] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[03:14:49] *** Joins: rcernin_ (~rcernin@144.132.211.234)
[03:16:12] *** Joins: transacid (~transacid@transacid.de)
[03:19:31] *** Quits: rvalue (~rvalue@user/rvalue) (Quit: ZNC - https://znc.in)
[03:19:48] *** Joins: rvalue (~rvalue@user/rvalue)
[03:27:38] *** Joins: dozn (uid249292@user/dozn)
[03:30:17] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[03:34:34] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-800d-bd41-deec-376b.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[03:36:41] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[03:45:40] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-800d-bd41-deec-376b.res6.spectrum.com)
[03:45:49] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-800d-bd41-deec-376b.res6.spectrum.com) (Client Quit)
[03:47:07] *** Joins: Weesh (~weesh@87.254.80.9)
[03:49:53] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[03:50:49] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[03:53:00] *** Joins: fikran (~fikran@user/fikran)
[03:59:01] *** Quits: Weesh (~weesh@87.254.80.9) (Read error: Connection reset by peer)
[04:00:16] *** Joins: AshLeece[m] (~ashleecei@2001:470:69fc:105::c987)
[04:03:51] *** Joins: Weesh (~weesh@87.254.80.9)
[04:09:08] *** Quits: lilgopher (~textual@2601:241:8000:38f0:8069:4c9b:8bfc:2a0e) (Quit: Textual IRC Client: www.textualapp.com)
[04:13:04] *** Joins: meinside (uid24933@id-24933.helmsley.irccloud.com)
[04:15:37] *** Quits: krux02 (~krux02@p200300e817365e0034cc1bc883b75341.dip0.t-ipconnect.de) (Remote host closed the connection)
[04:22:32] *** Quits: cobber (~protorom@213.240.182.77) (Quit: cobber)
[04:24:12] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[04:25:29] *** Joins: roshanavand_ (~roshanava@194.36.25.57)
[04:26:39] *** Quits: roshanavand_ (~roshanava@194.36.25.57) (Client Quit)
[04:26:54] *** Joins: roshanavand_ (~roshanava@194.36.25.57)
[04:26:57] *** Quits: rcernin (~rcernin@144.132.211.234) (Ping timeout: 268 seconds)
[04:28:12] *** Quits: roshanavand (~roshanava@185.213.155.176) (Ping timeout: 265 seconds)
[04:30:30] *** Quits: lazyreader (~lazyreade@user/lazyreader) (Quit: The Lounge - https://thelounge.chat)
[04:30:50] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-35ba-b7a0-d966-f0ce.res6.spectrum.com)
[04:31:02] *** Joins: lazyreader (~lazyreade@user/lazyreader)
[04:32:04] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:32:24] *** Quits: dab21 (~dab21@pistis.amyanddavid.net) (Quit: ZNC 1.8.2 - https://znc.in)
[04:33:32] *** Joins: dab21 (~dab21@pistis.amyanddavid.net)
[04:40:09] *** Joins: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263)
[04:41:23] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[04:42:45] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[04:46:02] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:47:37] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:51:57] *** Quits: darkapex_ (~darkapex@user/darkapex) (Ping timeout: 250 seconds)
[04:52:05] *** Joins: darkapex (~darkapex@user/darkapex)
[04:53:04] *** Joins: noboruma (~noboruma@202-189-221-251.tokyo.fdn.vectant.ne.jp)
[04:53:09] *** Quits: phylaz (~phylaz@219.92-221-176.customer.lyse.net) (Ping timeout: 252 seconds)
[04:55:53] *** Joins: cation21 (cation@user/cation)
[04:57:12] *** Quits: cation (cation@user/cation) (Ping timeout: 265 seconds)
[04:58:39] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 252 seconds)
[04:59:17] *** cation21 is now known as cation
[04:59:18] *** Quits: curiousgay (~curiousga@77-120-141-90.kha.volia.net) (Remote host closed the connection)
[05:02:05] *** Quits: jjonah (~jjonah@p200300d5d7149500dea632fffeb3342f.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[05:04:04] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:9563:3661:427a:9acd) (Quit: smeeagle)
[05:04:06] *** Quits: reenix (~reenix@2a01:238:420e:ae00:1c37:63c1:24c0:ff75) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[05:04:16] *** Joins: reenix (~reenix@h2924837.stratoserver.net)
[05:06:05] *** Quits: pez (~pez@user/pez) (Quit: bye..)
[05:06:19] *** Joins: pez (~pez@user/pez)
[05:15:56] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:f820:1634:ac16:6286)
[05:19:45] *** Quits: ajfriesen (~ajfriesen@cable-78-35-98-50.nc.de) (Quit: Ping timeout (120 seconds))
[05:20:08] *** Quits: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263) (Quit: WeeChat 3.3)
[05:20:09] *** Joins: ajfriesen (~ajfriesen@cable-78-35-98-50.nc.de)
[05:20:13] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:f820:1634:ac16:6286) (Ping timeout: 240 seconds)
[05:23:22] *** Quits: blinux (~blinux@pool-108-48-11-122.washdc.fios.verizon.net) (Quit: WeeChat 3.3)
[05:32:13] *** Quits: dg (~dgl@dg.wtf) (Ping timeout: 240 seconds)
[05:32:56] *** Joins: curiousgay (~curiousga@77-120-141-90.kha.volia.net)
[05:34:37] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-35ba-b7a0-d966-f0ce.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[05:35:40] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-35ba-b7a0-d966-f0ce.res6.spectrum.com)
[05:41:32] *** Joins: Torr (~Torr@user/torr)
[05:43:23] *** Joins: cation21 (cation@user/cation)
[05:44:29] *** Quits: cation (cation@user/cation) (Ping timeout: 252 seconds)
[05:44:30] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[05:45:32] *** Quits: pez (~pez@user/pez) (Ping timeout: 240 seconds)
[05:45:40] *** Joins: pez_ (~pez@user/pez)
[05:46:46] *** cation21 is now known as cation
[05:47:49] *** Quits: rockyh (~rockyh@user/rockyh) (Ping timeout: 240 seconds)
[05:54:48] *** Joins: rockyh (~rockyh@user/rockyh)
[05:55:35] <mikoto-chan> https://play.golang.com/p/i6y_JTCoC_W
[05:55:42] <mikoto-chan> something is severely wrong here
[05:55:46] <mikoto-chan> why is it returning false?
[05:57:50] <fizzie> Missing return in the `if`.
[05:58:13] <fizzie> Anything taking the `default` case will necessarily return false.
[05:58:28] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[05:59:50] <fizzie> (Though I don't think the logic is quite right anyway.)
[06:00:12] <mikoto-chan> fizzie: I haven't made this stupid of a mistake in a long time lol
[06:00:13] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[06:00:40] <fizzie> It kind of looks like a function that can't decide whether it wants to be iterative or recursive.
[06:01:08] <mikoto-chan> fizzie: I want to recurse :s
[06:01:25] <mikoto-chan> can you correct my mistake? I tried adding return but it's still wrong
[06:02:20] *** Joins: fikran (~fikran@user/fikran)
[06:02:28] <b0nn> return true is being called
[06:02:29] <b0nn> https://play.golang.com/p/j1c__EQH0V1
[06:02:46] <b0nn> But, it returns to where the InAscOrder was called from
[06:02:55] <b0nn> which is in the default
[06:03:13] <b0nn> https://play.golang.com/p/ALT2sKSYC96
[06:04:25] <fizzie> The recursive definition for "is this list in order?" is: "yes, if the list has just one number, or alternatively if the first and second numbers are in order, and the rest of the list is too". That doesn't involve any variable `i` in it.
[06:07:16] *** Quits: curiousgay (~curiousga@77-120-141-90.kha.volia.net) (Quit: Leaving)
[06:07:22] <fizzie> If you don't mind spoilers, https://play.golang.com/p/5wxWYY6a2yh is the "pure" recursive version.
[06:07:59] <fizzie> (Well, possibly you'd also want to consider the empty list to be in order too.)
[06:11:28] <mikoto-chan> b0nn: the site where I found this problem still evaluates your solution as wrong weirdly enough, probably a problem on their side
[06:12:19] <b0nn> must be the site, my code has never been wrong :)
[06:13:04] *** Disconsented is now known as DrDoofenshmirtz
[06:13:21] <fizzie> Consider a case like https://play.golang.com/p/idB9rVzL66W
[06:13:38] <fizzie> Which should presumably be `true` as well.
[06:15:07] <fizzie> Or https://play.golang.com/p/C5e3-0OUFGJ even if negative numbers aren't a thing in the requirements.
[06:16:49] <b0nn> I mean, why not just loop over for i := 0; i<len(foo)-2;i++ {if foo[i]>=foo[i+1] {fmt.Println("Arrrrrggggghhhh")}}
[06:16:56] <fizzie> Or https://play.golang.com/p/b0-2KIU9xhx
[06:17:17] <fizzie> (As a third problematic case.)
[06:19:25] <fizzie> All three are really the same underlying issue, namely that the initial value of `pr` is considered to be the "previous" number even for the initial call to the function with a new list.
[06:20:31] <b0nn> hrm my loop you can increment by 2 each time to halve the number of comparisons
[06:20:50] <fizzie> And get an incorrect result. ;)
[06:21:14] <fizzie> (Consider {1, 3, 2, 4}.)
[06:21:42] <mikoto-chan> b0nn: I tried foo[i+1] but got some confusing out of index panics :(
[06:21:43] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-35ba-b7a0-d966-f0ce.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[06:22:15] <fizzie> And sure, don't *actually* use recursion for the problem of checking if a slice is in order (what do you think this is, #haskell?), but I guess the point was to practice recursion.
[06:23:31] <fizzie> That loop range is also off by one, you'll want either `i <= len(s)-2` or `i < len(s)-1`.
[06:25:11] <b0nn> ttps://go.dev/play/p/G8d4vHolqki
[06:25:23] <b0nn> https://go.dev/play/p/G8d4vHolqki
[06:25:50] <b0nn> I've assumed that an empty slice is sorted
[06:26:08] <fizzie> Still off by one.
[06:26:17] <fizzie> https://go.dev/play/p/ZMLqq6yn5_i should give false for both.
[06:28:45] <b0nn> just the len calculation
[06:29:18] <b0nn> or i <= len(foo)-2
[06:30:12] <b0nn> mikoto-chan: if you want to practice recursion in Go, then write a fibonacci generator
[06:30:25] <b0nn> but Go doesn't have tail call optimisation
[06:30:41] <b0nn> and you should look at memoisation and tabulation when recurring
[06:31:09] <fizzie> https://go.dev/play/p/nXEBqxOkyxG is also an option, though personally I find it a little weird-looking to mix the two-variable for-range loop while also accessing other elements of the same list derived from i.
[06:34:17] <fizzie> Gotta admit https://go.dev/play/p/9mWUCek8FLq has the edge in terms of conciseness, in case you happen to be running out of punch cards for your program code or something.
[06:37:56] *** Joins: Guest48 (~Guest48@120.17.160.80)
[06:39:17] *** Quits: andlabs (~andlabs@2a00:79e1:abc:1a0a:110f:5a28:c196:25e) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:43:19] *** Quits: samhza (sam@2600:3c03::f03c:92ff:fe40:814c) (Remote host closed the connection)
[06:44:31] *** Joins: normen_ (~normen@pd9eeca92.dip0.t-ipconnect.de)
[06:45:10] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Ping timeout: 260 seconds)
[06:46:55] *** Quits: normen (~normen@p200300d71734cf00fc87702b367baee7.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[06:46:57] *** normen_ is now known as normen
[06:47:03] *** Joins: samhza (sam@2600:3c03::f03c:92ff:fe40:814c)
[06:58:01] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[07:03:18] *** Quits: Guest48 (~Guest48@120.17.160.80) (Quit: Client closed)
[07:15:02] *** Quits: Tv_ (uid62079@user/tv/x-3144562) (Quit: Connection closed for inactivity)
[07:37:07] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[07:37:11] *** Quits: moog (~moog@107.77.244.121) (Remote host closed the connection)
[07:37:30] *** Joins: andlabs (~andlabs@2604:ca00:179:8ddd:5cf6:3d19:bd83:42d8)
[07:38:31] *** Quits: ajunior (~ajunior@189-49-228-177.user3p.veloxzone.com.br) (Ping timeout: 252 seconds)
[07:40:22] *** Joins: jasonwucj (uid13975@id-13975.ilkley.irccloud.com)
[07:51:03] <mikoto-chan> how is `<[]string | len:0, cap:0>: nil` different from `<[]string | len:0, cap:0>: []` when talking about `[]string`?
[07:52:26] <seebs> not-meaningfully
[07:52:51] <seebs> you can have a slice which happens to have a non-nil data pointer, but a cap of 0, meaning it can never be resliced or appended to in a way that gets access to any of the storage it points to
[07:52:57] <seebs> and you can also have a slice which is nil
[07:56:52] <mikoto-chan> seebs: the slice in question is from a function `doFoo() (result []string)`
[07:57:09] <seebs> you should treat them as equivalent. it doesn't matter whether it's nil or not.
[07:57:19] <seebs> if it has a cap of 0, it's equivalent to a nil slice.
[07:58:18] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[07:59:30] <mikoto-chan> thanks for the explanation
[08:00:47] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-35ba-b7a0-d966-f0ce.res6.spectrum.com)
[08:02:50] *** Quits: nitrix (~nitrix@user/nitrix) (Quit: Genius is one percent inspiration and ninety-nine percent perspiration)
[08:06:28] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 268 seconds)
[08:09:25] *** Joins: nitrix (~nitrix@user/nitrix)
[08:09:32] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[08:11:40] *** Joins: fikran (~fikran@user/fikran)
[08:12:08] *** Quits: andlabs (~andlabs@2604:ca00:179:8ddd:5cf6:3d19:bd83:42d8) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:13:34] *** Joins: orbyt_v10 (~orbyt_v10@172.92.4.78)
[08:16:19] *** Quits: nitrix (~nitrix@user/nitrix) (Quit: Genius is one percent inspiration and ninety-nine percent perspiration)
[08:16:44] *** Quits: samhza (sam@2600:3c03::f03c:92ff:fe40:814c) (Remote host closed the connection)
[08:17:48] *** Joins: nitrix (~nitrix@user/nitrix)
[08:18:31] *** Joins: samhza (sam@2600:3c03::f03c:92ff:fe40:814c)
[08:33:52] *** Quits: rcernin_ (~rcernin@144.132.211.234) (Ping timeout: 256 seconds)
[08:40:30] *** Joins: rcernin_ (~rcernin@144.132.211.234)
[08:42:21] *** Quits: orbyt_v10 (~orbyt_v10@172.92.4.78) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:55:44] *** Joins: neverwas (jpneverwas@swissbox.unperson.link)
[08:56:45] *** Quits: dozn (uid249292@user/dozn) (Quit: Connection closed for inactivity)
[09:14:50] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[09:17:13] *** Quits: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (Quit: mikoto-chan)
[09:21:32] <hendry> hihi, I'm struggling with embed.FS ... can anyone see where I'm going wrong here? https://gist.github.com/kaihendry/8a2c0ccc85c83bb438c8ae5fdb360182
[09:25:59] <hendry> nvm http.Handle("/static/", http.StripPrefix("/static/", fileServer))
[09:29:27] *** Joins: andlabs (~andlabs@70.107.171.168)
[09:31:57] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[09:35:16] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[09:49:50] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[09:59:12] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[10:12:31] *** Joins: ajunior (~ajunior@189-49-228-177.user3p.veloxzone.com.br)
[10:19:02] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[10:21:00] *** Joins: fikran (~fikran@user/fikran)
[10:24:11] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:24:43] *** Joins: shka (~herr@109.231.0.226)
[10:30:59] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:34:13] *** Quits: ajunior (~ajunior@189-49-228-177.user3p.veloxzone.com.br) (Remote host closed the connection)
[10:35:03] *** Joins: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net)
[10:37:56] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:38:29] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Client Quit)
[10:42:45] *** Quits: normen (~normen@pd9eeca92.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[10:55:02] *** Quits: mncheck (~mncheck@193.224.205.254) (Quit: Leaving)
[10:57:36] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:9563:3661:427a:9acd)
[10:58:21] *** Quits: Weesh (~weesh@87.254.80.9) (Ping timeout: 252 seconds)
[10:59:21] *** DrDoofenshmirtz is now known as Disconsented
[11:01:14] *** Joins: bkircher (~bkircher@2001:a61:250f:2b01:4b96:7ca4:45ee:36d4)
[11:05:04] *** Joins: evocatus (~evocatus@91.211.251.87)
[11:07:59] *** Joins: normen (~normen@p200300d717031600b0e33df4f38e4968.dip0.t-ipconnect.de)
[11:08:42] *** Joins: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz)
[11:08:54] *** Joins: OnkelUlla (~uol@ptx.hi.pengutronix.de)
[11:19:25] *** Joins: jjido (~Denis@90.213.58.125)
[11:23:32] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[11:33:00] *** Joins: saschagrunert (~saschagru@46.128.124.48)
[11:33:56] *** Joins: mrig (~AdiIRC@user/mrig)
[11:35:12] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:37:11] *** Joins: okt (560965ea7b@user/okt)
[11:44:19] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:9563:3661:427a:9acd) (Quit: smeeagle)
[11:51:25] *** Quits: LtHummus (~lthummus@97-126-121-3.tukw.qwest.net) (Remote host closed the connection)
[11:51:50] *** Joins: LtHummus (~lthummus@97-126-121-3.tukw.qwest.net)
[11:54:10] *** Joins: bpalmer` (~user@user/bpalmer)
[11:56:17] *** Quits: bpalmer (~user@user/bpalmer) (Ping timeout: 252 seconds)
[12:02:35] *** Joins: phylaz (~phylaz@80.203.89.4)
[12:04:44] *** Joins: krux02 (~krux02@p200300e817365e0034cc1bc883b75341.dip0.t-ipconnect.de)
[12:05:54] *** Joins: theoceaniscool (~theoceani@119.12.232.133)
[12:06:28] *** Joins: rendar (~rendar@user/rendar)
[12:07:15] *** Quits: krux02 (~krux02@p200300e817365e0034cc1bc883b75341.dip0.t-ipconnect.de) (Remote host closed the connection)
[12:07:57] *** Joins: mncheck (~mncheck@193.224.205.254)
[12:08:54] *** Joins: evocatus_ (~evocatus@213.193.2.105)
[12:09:30] *** Quits: evocatus_ (~evocatus@213.193.2.105) (Remote host closed the connection)
[12:11:54] *** Quits: evocatus (~evocatus@91.211.251.87) (Ping timeout: 268 seconds)
[12:13:36] *** Joins: roshanavand__ (~roshanava@194.36.25.42)
[12:16:07] *** Quits: roshanavand_ (~roshanava@194.36.25.57) (Ping timeout: 250 seconds)
[12:21:28] *** Joins: aLeSD (~aLeSD@139.47.114.114)
[12:22:56] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:28:34] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[12:30:20] *** Joins: fikran (~fikran@user/fikran)
[12:44:24] *** Quits: roshanavand__ (~roshanava@194.36.25.42) (Remote host closed the connection)
[12:47:32] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[12:51:59] *** Quits: rcernin_ (~rcernin@144.132.211.234) (Ping timeout: 268 seconds)
[13:01:00] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:05:34] *** Quits: karhunkynsi (~karhunkyn@user/karhunkynsi) (Remote host closed the connection)
[13:08:35] *** Quits: greyrat_ (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[13:08:55] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[13:08:55] *** Joins: moldorcoder7_ (~moldorcod@37.120.143.28)
[13:09:04] *** Quits: Alina-ma- (~Alina-mal@37.252.80.4) (Remote host closed the connection)
[13:09:05] *** Joins: snits_ (~quassel@ip98-179-76-75.ph.ph.cox.net)
[13:09:33] *** Joins: abc_- (~abc@user/abc)
[13:09:49] *** Joins: Yukkuri_ (~user@mayoinochikurin.eientei.org)
[13:09:55] *** Joins: zanshin_ (~zanshin@ip24-255-217-102.ks.ks.cox.net)
[13:10:20] *** Joins: Techcable_ (~Techcable@168.235.93.147)
[13:10:22] *** Joins: Kane_ (~Kane@portal.yarg.fr)
[13:10:28] *** Joins: buu_ (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net)
[13:10:31] *** Joins: rawtaz_ (~rawtaz@rho.hobbyhotellet.se)
[13:10:37] *** Joins: noboruma_ (~noboruma@202-189-221-251.tokyo.fdn.vectant.ne.jp)
[13:10:49] *** Joins: Alina-ma- (~Alina-mal@37.252.80.4)
[13:10:54] *** Joins: cooper_ (~mitchell@user/cooper)
[13:10:54] *** Joins: clee_ (~clee@tali.t0k.org)
[13:11:04] *** Joins: chilvers1 (~chilversc@user/chilversc)
[13:11:05] *** Joins: Teckla_ (~Teckla@user/teckla)
[13:11:07] *** Joins: jjhoo_ (~jahakala@user/jjhoo)
[13:11:08] *** Server sets mode: +Ccnt 
[13:11:09] *** Joins: transacid_ (~transacid@transacid.de)
[13:11:10] *** Joins: DHowett_ (~dustin@kaus.howett.net)
[13:11:11] *** Joins: whoami_ (~whoami@d118-75-170-49.try.wideopenwest.com)
[13:11:18] *** Joins: nathan2 (~nathan@user/nandormagyar)
[13:11:22] *** Joins: g2anj_ (~v@39.112.227.198)
[13:11:22] *** Joins: pinky__ (pinky@minime.fef.net)
[13:11:33] *** Joins: houze_ (~houze@vps-5d15656a.vps.ovh.net)
[13:11:33] *** Quits: houze_ (~houze@vps-5d15656a.vps.ovh.net) (Changing host)
[13:11:33] *** Joins: houze_ (~houze@user/houze)
[13:11:40] *** Joins: OMGOMG_ (~bobrobert@poppy.ifi.uio.no)
[13:11:41] *** Joins: TDT_ (~TDT@20.118.225.139)
[13:12:24] *** Joins: mikeputnam1 (~mikeputna@wilug/mikeputnam)
[13:13:19] *** Joins: halden^ (~halden@lden.im)
[13:14:42] *** Joins: Ergo^ (~ergo@91.238.59.144)
[13:15:42] *** Quits: Alina-ma- (~Alina-mal@37.252.80.4) (Remote host closed the connection)
[13:15:52] *** Joins: Scarecr0- (scarecr0w@user/scarecr0w)
[13:16:44] *** Quits: shka (~herr@109.231.0.226) (*.net *.split)
[13:16:44] *** Quits: ajfriesen (~ajfriesen@cable-78-35-98-50.nc.de) (*.net *.split)
[13:16:44] *** Quits: noboruma (~noboruma@202-189-221-251.tokyo.fdn.vectant.ne.jp) (*.net *.split)
[13:16:44] *** Quits: lazyreader (~lazyreade@user/lazyreader) (*.net *.split)
[13:16:44] *** Quits: transacid (~transacid@transacid.de) (*.net *.split)
[13:16:44] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (*.net *.split)
[13:16:44] *** Quits: noonien (~noonien@user/noonien) (*.net *.split)
[13:16:44] *** Quits: arinov (~arinov@213.194.126.155) (*.net *.split)
[13:16:44] *** Quits: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net) (*.net *.split)
[13:16:44] *** Quits: davidkrauser (~davidkrau@user/davidkrauser) (*.net *.split)
[13:16:44] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (*.net *.split)
[13:16:44] *** Quits: ewintr (~ewintr@46.23.91.175) (*.net *.split)
[13:16:44] *** Quits: moldorcoder7 (~moldorcod@37.120.143.28) (*.net *.split)
[13:16:44] *** Quits: svedrin (~quassel@tiamat.funzt-halt.net) (*.net *.split)
[13:16:44] *** Quits: zaz\ (~zaz@poneybl.eu) (*.net *.split)
[13:16:44] *** Quits: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net) (*.net *.split)
[13:16:44] *** Quits: Teckla (~Teckla@user/teckla) (*.net *.split)
[13:16:44] *** Quits: Techcable (~Techcable@168.235.93.147) (*.net *.split)
[13:16:44] *** Quits: darkstardevx (~darkstard@50.39.115.145) (*.net *.split)
[13:16:44] *** Quits: pinpox (~pinpox@v2202101107577140883.nicesrv.de) (*.net *.split)
[13:16:44] *** Quits: brooks73 (~brooks@23.157.160.131) (*.net *.split)
[13:16:44] *** Quits: nexgen (~nexgen@li614-178.members.linode.com) (*.net *.split)
[13:16:44] *** Quits: ziofork (~ziofork@fr.worn.eu) (*.net *.split)
[13:16:44] *** Quits: g2anj (~v@39.112.227.198) (*.net *.split)
[13:16:44] *** Quits: lungaro (~lungaro@99-117-118-33.lightspeed.sndgca.sbcglobal.net) (*.net *.split)
[13:16:44] *** Quits: mva (~mva@gentoo/developer/mva) (*.net *.split)
[13:16:44] *** Quits: chilversc (~chilversc@user/chilversc) (*.net *.split)
[13:16:44] *** Quits: dfch (~dfch@user/dfch) (*.net *.split)
[13:16:44] *** Quits: connor_goodwolf (~connor@user/connor-goodwolf/x-2615606) (*.net *.split)
[13:16:45] *** Quits: cp- (~cp-@b157153.ppp.asahi-net.or.jp) (*.net *.split)
[13:16:45] *** Quits: Artea (~Lufia@artea.com.pt) (*.net *.split)
[13:16:45] *** Quits: nathan1 (~nathan@user/nandormagyar) (*.net *.split)
[13:16:45] *** Quits: chemsmith (~chemsmith@user/chemsmith) (*.net *.split)
[13:16:45] *** Quits: crudo (~crudo@livredigital.com) (*.net *.split)
[13:16:45] *** Quits: cornfeedhobo (~cornfeedh@user/cornfeedhobo) (*.net *.split)
[13:16:45] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (*.net *.split)
[13:16:45] *** Quits: clee (~clee@tali.t0k.org) (*.net *.split)
[13:16:45] *** Quits: KDDLB (~Kevin@user/kddlb) (*.net *.split)
[13:16:45] *** Quits: halden (~halden@lden.im) (*.net *.split)
[13:16:45] *** Quits: zanshin (~zanshin@user/zanshin) (*.net *.split)
[13:16:45] *** Quits: b0nn (~shane@user/b0nn) (*.net *.split)
[13:16:45] *** Quits: loggingbot (~loggingbo@user/loggingbot) (*.net *.split)
[13:16:45] *** Quits: sztanpet (sztanpet@user/sztanpet) (*.net *.split)
[13:16:45] *** Quits: naos (~naos@user/naos) (*.net *.split)
[13:16:45] *** Quits: eggsampler_ (~ur@s.id-rsa.pub) (*.net *.split)
[13:16:45] *** Quits: Wessie (~Wessie@static.226.41.47.78.clients.your-server.de) (*.net *.split)
[13:16:45] *** Quits: foogiyama (~foogiyama@pool-71-172-157-172.nwrknj.fios.verizon.net) (*.net *.split)
[13:16:45] *** Quits: whoami (~whoami@d118-75-170-49.try.wideopenwest.com) (*.net *.split)
[13:16:45] *** Quits: Scarecr0w (scarecr0w@user/scarecr0w) (*.net *.split)
[13:16:45] *** Quits: Kane (~Kane@portal.yarg.fr) (*.net *.split)
[13:16:45] *** Quits: RaySl (~raysl@sdf1.xen.prgmr.com) (*.net *.split)
[13:16:45] *** Quits: greyrat_ (~greyrat@ip202.ip-51-178-215.eu) (*.net *.split)
[13:16:45] *** Quits: houze (~houze@user/houze) (*.net *.split)
[13:16:45] *** Quits: particleflux (~particlef@ircb.hackthe.codes) (*.net *.split)
[13:16:45] *** Quits: L1Cafe (~L1Cafe@user/l1cafe) (*.net *.split)
[13:16:45] *** Quits: Yukkuri (~user@mayoinochikurin.eientei.org) (*.net *.split)
[13:16:45] *** Quits: nemesis91 (~nem@user/nemesis91) (*.net *.split)
[13:16:45] *** Quits: icy (~icy@user/icy) (*.net *.split)
[13:16:45] *** Quits: ikke (~kevin@alpine/developer/ikke) (*.net *.split)
[13:16:45] *** Quits: cooper (~mitchell@205.185.116.128) (*.net *.split)
[13:16:45] *** Quits: DHowett (~dustin@kaus.howett.net) (*.net *.split)
[13:16:45] *** Quits: pinky (pinky@minime.fef.net) (*.net *.split)
[13:16:45] *** Quits: rawtaz (~rawtaz@user/rawtaz) (*.net *.split)
[13:16:45] *** Quits: jjhoo (~jahakala@user/jjhoo) (*.net *.split)
[13:16:45] *** Quits: CrunchyChewie (~CrunchyCh@user/crunchychewie) (*.net *.split)
[13:16:45] *** Quits: ultera (~ultera@ec2-18-118-193-22.us-east-2.compute.amazonaws.com) (*.net *.split)
[13:16:45] *** Quits: OMGOMG (~bobrobert@poppy.ifi.uio.no) (*.net *.split)
[13:16:45] *** Quits: mikeputnam (~mikeputna@wilug/mikeputnam) (*.net *.split)
[13:16:45] *** Quits: TDT (~TDT@20.118.225.139) (*.net *.split)
[13:16:45] *** Quits: tharkun (tharkun@kvm6.telegraphics.com.au) (*.net *.split)
[13:16:45] *** Quits: DaGo (~dago@85.ip-37-59-103.eu) (*.net *.split)
[13:16:46] *** Quits: Byteflux (~byte@byteflux.net) (*.net *.split)
[13:16:46] *** Quits: asm (~alexander@user/asm) (*.net *.split)
[13:16:46] *** Quits: zwindl (~abc@user/abc) (*.net *.split)
[13:16:46] *** Quits: snits (~quassel@ip98-179-76-75.ph.ph.cox.net) (*.net *.split)
[13:16:46] *** Quits: iivvoo (~l@m3r.nl) (*.net *.split)
[13:16:46] *** lazyreader5 is now known as lazyreader
[13:16:46] *** ziofork5 is now known as ziofork
[13:16:46] *** sztanp3t is now known as sztanpet
[13:16:46] *** L1Cafe8 is now known as L1Cafe
[13:16:46] *** KDDLB3 is now known as KDDLB
[13:16:46] *** ultera- is now known as ultera
[13:16:46] *** Scarecr0- is now known as Scarecr0w
[13:16:46] *** iivvoo3 is now known as iivvoo
[13:16:46] *** ajfriesen7 is now known as ajfriesen
[13:16:47] *** whoami_ is now known as whoami
[13:16:56] *** Joins: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net)
[13:17:20] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[13:20:31] *** Quits: rawtaz_ (~rawtaz@rho.hobbyhotellet.se) (Changing host)
[13:20:31] *** Joins: rawtaz_ (~rawtaz@user/rawtaz)
[13:20:39] *** rawtaz_ is now known as rawtaz
[13:21:51] *** Joins: noonien (~noonien@user/noonien)
[13:21:51] *** Joins: arinov (~arinov@213.194.126.155)
[13:21:51] *** Joins: ewintr (~ewintr@46.23.91.175)
[13:21:51] *** Joins: svedrin (~quassel@tiamat.funzt-halt.net)
[13:21:51] *** Joins: zaz\ (~zaz@poneybl.eu)
[13:21:51] *** Joins: pinpox (~pinpox@v2202101107577140883.nicesrv.de)
[13:21:51] *** Joins: cp- (~cp-@b157153.ppp.asahi-net.or.jp)
[13:21:51] *** Joins: crudo (~crudo@livredigital.com)
[13:21:51] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[13:21:51] *** Joins: b0nn (~shane@user/b0nn)
[13:21:51] *** Joins: loggingbot (~loggingbo@user/loggingbot)
[13:21:51] *** Joins: naos (~naos@user/naos)
[13:21:51] *** Joins: Wessie (~Wessie@static.226.41.47.78.clients.your-server.de)
[13:21:51] *** Joins: foogiyama (~foogiyama@pool-71-172-157-172.nwrknj.fios.verizon.net)
[13:22:48] *** Joins: DaGo (~dago@85.ip-37-59-103.eu)
[13:23:08] *** Joins: asm (~alexander@burner.asm89.io)
[13:23:36] *** Joins: nexgen (~nexgen@li614-178.members.linode.com)
[13:23:44] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[13:23:53] *** Joins: ikke (~kevin@alpine/developer/ikke)
[13:24:07] *** Joins: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net)
[13:24:41] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Client Quit)
[13:26:07] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[13:29:42] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:3000:9875:d4c0:a753)
[13:30:49] *** Joins: cornfeedhobo (~cornfeedh@user/cornfeedhobo)
[13:30:56] *** bpalmer` is now known as bpalmer
[13:31:13] *** Joins: shka (~herr@109.231.0.226)
[13:32:19] *** Joins: rogersm (~rogersm@90.166.177.48)
[13:34:11] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:3000:9875:d4c0:a753) (Ping timeout: 252 seconds)
[13:55:44] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[13:56:19] *** Quits: monchi (~joints@143.198.92.132) (Remote host closed the connection)
[13:58:01] *** jjhoo_ is now known as jjhoo
[14:12:25] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:3000:9875:d4c0:a753)
[14:12:29] *** Quits: ninjabreakbot (~ninjabrea@user/ninjabreakbot) (Ping timeout: 250 seconds)
[14:13:55] *** Joins: normen_ (~normen@pd9eeca92.dip0.t-ipconnect.de)
[14:16:28] *** Quits: normen (~normen@p200300d717031600b0e33df4f38e4968.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[14:16:30] *** normen_ is now known as normen
[14:16:43] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[14:16:43] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Client Quit)
[14:17:01] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:3000:9875:d4c0:a753) (Ping timeout: 250 seconds)
[14:19:24] *** Quits: mrig (~AdiIRC@user/mrig) (Remote host closed the connection)
[14:19:38] *** Joins: mrig (~AdiIRC@user/mrig)
[14:22:43] *** Quits: ewintr (~ewintr@46.23.91.175) (Quit: leaving)
[14:24:07] *** Joins: ewintr (~ewintr@46.23.91.175)
[14:25:08] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[14:29:37] *** nathan2 is now known as nakedeyes
[14:29:56] *** Joins: mickey8 (~user@user/mickey)
[14:33:18] *** Joins: Atque (~Atque@user/atque)
[14:37:41] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[14:39:40] *** Joins: fikran (~fikran@user/fikran)
[14:40:20] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[14:41:50] *** Quits: normen (~normen@pd9eeca92.dip0.t-ipconnect.de) (Quit: WeeChat 3.3)
[14:54:25] *** Joins: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de)
[14:59:48] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:2d80:8056:360:78d9)
[15:00:35] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[15:07:16] *** Joins: arinov (~arinov@176.89.29.127)
[15:12:33] *** Quits: bkircher (~bkircher@2001:a61:250f:2b01:4b96:7ca4:45ee:36d4) (Quit: Leaving)
[15:17:08] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:3000:9875:d4c0:a753)
[15:21:49] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:3000:9875:d4c0:a753) (Ping timeout: 250 seconds)
[15:27:07] *** Quits: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[15:30:26] *** Joins: cobber (~protorom@213.240.182.77)
[15:32:50] *** Quits: halden^ (~halden@lden.im) (Read error: Connection reset by peer)
[15:34:53] *** Quits: asm (~alexander@burner.asm89.io) (Changing host)
[15:34:53] *** Joins: asm (~alexander@user/asm)
[15:35:53] *** Joins: halden^ (~halden@lden.im)
[15:40:29] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[15:43:14] *** Joins: curiousgay (~curiousga@77-120-141-90.kha.volia.net)
[15:43:56] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[15:45:31] *** Kane_ is now known as Kane
[15:56:11] *** Joins: jla (~jordi@64.225.79.195)
[16:04:31] *** Joins: jjido (~Denis@90.213.58.125)
[16:04:38] *** Quits: jjido (~Denis@90.213.58.125) (Client Quit)
[16:05:45] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[16:10:03] *** Quits: espero (~espero@ucitelonline.pedf.cuni.cz) (Quit: Leaving)
[16:12:38] *** Joins: normen (~normen@p200300d717031600e41809a53cb7e925.dip0.t-ipconnect.de)
[16:12:59] *** Joins: espero (~espero@ucitelonline.pedf.cuni.cz)
[16:14:45] *** Quits: espero (~espero@ucitelonline.pedf.cuni.cz) (Client Quit)
[16:16:24] *** Joins: Torr (~Torr@user/torr)
[16:21:51] *** Joins: espero (~espero@ucitelonline.pedf.cuni.cz)
[16:24:11] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[16:27:02] *** Quits: ajfriesen (~ajfriesen@cable-78-35-98-50.nc.de) (Quit: The Lounge - https://thelounge.chat)
[16:30:28] *** Joins: ajfriesen7 (~ajfriesen@cable-78-35-98-50.nc.de)
[16:31:18] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:39:46] *** Joins: remote (~self@user/hackers)
[16:41:28] *** Joins: beholders_eye (~weechat@2804:1b3:70c2:d7e4:2dd:3e29:fd7e:314)
[16:41:58] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[16:47:10] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[16:49:00] *** Joins: fikran (~fikran@user/fikran)
[16:49:17] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[16:51:24] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[16:54:10] *** Joins: LiENUS (~quake@108-242-135-2.lightspeed.btrgla.sbcglobal.net)
[16:55:28] <LiENUS> maybe it's just too early in the morning but what am i missing. When I try to go get this package in a project i get the following error: github.com/jacobalberty/ahps2: module github.com/jacobalberty/ahps2@latest found (v0.0.0-20211214131059-7d0f2d7e37da), but does not contain package github.com/jacobalberty/ahps2
[16:56:48] <cobber> what module name is in the package's go.mod ?
[16:57:35] <LiENUS> nothing yet, i've just got it referenced in a source file, trying to go mod tidy to pull the dependencies in
[16:57:53] <LiENUS> i had coaxed it into putting it into go.mod earlier but i just cleared that out
[16:58:13] <LiENUS> there was a bad version uploaded where i accidentally put a } instead of ) and i fear go has cached that locally and i cant figure out how to clear it
[16:58:48] <cobber> I had a similar problem yesterday - the errors could be more helpful
[16:59:48] <LiENUS> its got to be the bad version cache'd locally because i just added a replace directive to a locally checked out copy and it works
[17:01:14] <cobber> ah... perhaps site.go shouldn't use package ahps2? just use main?
[17:02:02] <cobber> as a comparison: I'm using local modules, so the module names have a .git suffix, but the package names don't
[17:02:10] <LiENUS> main.go:16:2: import "github.com/jacobalberty/ahps2" is a program, not an importable package
[17:02:22] <LiENUS> thats with package main
[17:02:57] <cobber> are you tryng to get ahps2 into ahps2? I'm confused :-(
[17:03:36] <cobber> got it...
[17:03:45] <LiENUS> i wrote an alexa skill that uses the data from ahps2. I'm trying to split that ahps2 package out of the alexa skill code into its own package just in case some other loon out there likes to obsess over their local river water levels
[17:04:13] <LiENUS> it works fine when its a sub package in my alexa skill, but now that i'm giving it its own github project its giving me fits
[17:04:16] <cobber> import "github.com/jacobalberty/ahps2/ahps2" - you have to import a package within the module
[17:05:07] <LiENUS> i shouldnt have to should i? github.com/gorilla/mux can be imported  directly
[17:05:27] <cobber> e.g.: import "<site>/<owner>/<repo>/<package>"
[17:05:34] <sztanpet> https://go.dev/doc/code
[17:05:38] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:3000:9875:d4c0:a753)
[17:08:17] <cobber> zstanpet: thanks... yep... go get <module>, but import "<module>/<package>"
[17:09:13] <LiENUS> import "github.com/gorilla/mux" works though
[17:09:34] <LiENUS> welp i tried just nuking ~/go and now it works
[17:09:39] <LiENUS> but go clean --modcache didnt get it
[17:10:30] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:3000:9875:d4c0:a753) (Ping timeout: 260 seconds)
[17:16:31] *** Quits: jasonwucj (uid13975@id-13975.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:17:14] <LiENUS> go figure
[17:17:22] <LiENUS> oh well time to just write some unit tests for it
[17:24:04] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[17:26:52] *** Joins: mrig (~mrig@user/mrig)
[17:28:40] *** Quits: ryu` (~ryusaku@c09825BC1.dhcp.as2116.net) (Quit: SCV ready!)
[17:39:45] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:9563:3661:427a:9acd)
[17:48:57] *** Joins: moog (~moog@107.126.53.25)
[17:54:46] <cobber> ist it possible to mark breakpoints in go code, i.e. "stop here" - siimilar to JS's "debugger"? (I'm using dlv)
[17:59:33] <cobber> I've got a bunch of tests looping over data - I'd like to break only when a certain condition has occurred
[18:00:33] <cobber> it seems the only way is to check the condition and call a dummy func - then break on the dummy func ?!? Is that the typicall way?
[18:01:58] *** Joins: harry_otter (~harry_ott@2601:483:4101:2350::d66d)
[18:02:24] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[18:06:48] *** Joins: ryu` (~ryusaku@c09825BC1.dhcp.as2116.net)
[18:09:03] *** Quits: ryu` (~ryusaku@c09825BC1.dhcp.as2116.net) (Client Quit)
[18:09:52] *** Joins: ryu` (~ryusaku@c09825BC1.dhcp.as2116.net)
[18:10:45] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Ping timeout: 256 seconds)
[18:14:37] <sztanpet> cobber i guess you could achieve that by setting up the breakpoints first and only then running your binary? i think the delve editor integrations make that easier
[18:16:07] <cobber> ? set up breakpoints first? I'm using the command line, e.g. dlv test ./*_test.go
[18:18:38] *** Quits: Teckla_ (~Teckla@user/teckla) (Quit: leaving)
[18:18:44] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[18:19:17] *** Joins: Teckla (~Teckla@user/teckla)
[18:19:49] *** Joins: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net)
[18:20:09] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Client Quit)
[18:23:57] *** chilvers1 is now known as chilversc
[18:25:02] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:2d80:8056:360:78d9) (Ping timeout: 240 seconds)
[18:25:57] <dostoyevsky2> I have a webserver that offers a websocket to one client.  When this client is connected via websocket, it will be forwarded certain webrequests through its websocket... Anybody know some keywords I could ddg for for this kind of architecture?
[18:26:40] <cobber> proxy?
[18:27:29] *** Quits: whaley (~whaley@2603-6080-a301-33d1-6003-4db3-18f7-d344.res6.spectrum.com) (Ping timeout: 250 seconds)
[18:37:16] *** Quits: ryu` (~ryusaku@c09825BC1.dhcp.as2116.net) (Quit: SCV ready!)
[18:38:30] *** Joins: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net)
[18:39:03] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Client Quit)
[18:41:09] *** Quits: chameleon (~chameleon@62.ip-51-89-164.eu) (Quit: ZNC - https://znc.in)
[18:42:07] *** Joins: tane (~tane@dslb-002-201-234-223.002.201.pools.vodafone-ip.de)
[18:42:07] *** Quits: tane (~tane@dslb-002-201-234-223.002.201.pools.vodafone-ip.de) (Changing host)
[18:42:07] *** Joins: tane (~tane@user/tane)
[18:46:41] *** Joins: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net)
[18:46:48] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Remote host closed the connection)
[18:50:01] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[18:50:03] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Read error: Connection reset by peer)
[18:53:57] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:3000:9875:d4c0:a753)
[18:55:51] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[18:56:45] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[18:58:19] *** Joins: fikran (~fikran@user/fikran)
[18:59:10] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:3000:9875:d4c0:a753) (Ping timeout: 265 seconds)
[19:03:53] *** Quits: arinov (~arinov@176.89.29.127) (Ping timeout: 250 seconds)
[19:17:49] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[19:20:58] *** Quits: jla (~jordi@64.225.79.195) (Quit: Leaving.)
[19:33:54] *** Quits: ItsNotGoodName0 (~ItsNotGoo@c-73-83-144-140.hsd1.wa.comcast.net) (Quit: The Lounge - https://thelounge.chat)
[19:35:38] *** Joins: arinov (~arinov@176.89.29.127)
[19:36:49] *** Joins: tg (~tg@rockylinux/infra/tg)
[19:37:58] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[19:39:40] *** Joins: fikran (~fikran@user/fikran)
[19:43:44] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[19:43:58] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[19:46:46] *** Joins: chameleon (~chameleon@62.ip-51-89-164.eu)
[19:51:08] <cornfeedhobo> okay, this feel like an incredibly noob question but ever since modules came around ....
[19:51:59] <cornfeedhobo> can someone ELI5 how to `go install` with https://github.com/docker/compose as the working example. every tag i've tried results in some type of error.
[19:53:03] <cornfeedhobo> with projects lacking a go.mod, it's easy as `go install <repo>@<repo tag>`, but seems not with go.mod?
[19:54:37] *** Quits: mncheck (~mncheck@193.224.205.254) (Remote host closed the connection)
[19:59:04] *** Joins: roshanavand (~roshanava@194.36.25.42)
[20:02:43] *** Joins: orbyt_v10 (~orbyt_v10@172.92.4.78)
[20:03:16] <bpalmer> go install is supposed to ignore the local go.mod
[20:03:34] <bpalmer> rather, the go.mod in the current directory
[20:03:59] <bpalmer> see https://go.dev/ref/mod
[20:05:10] *** Joins: tyson2 (~user@cpe688f2ec1f9b3-cm688f2ec1f9b0.cpe.net.cable.rogers.com)
[20:09:14] *** Quits: tyson2 (~user@cpe688f2ec1f9b3-cm688f2ec1f9b0.cpe.net.cable.rogers.com) (Remote host closed the connection)
[20:10:09] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[20:10:30] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[20:11:07] *** Quits: saschagrunert (~saschagru@46.128.124.48) (Remote host closed the connection)
[20:11:24] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[20:12:13] *** Quits: mobbi_ (~quassel@dfsm20ygbz2cph9gyzzzy-3.rev.dnainternet.fi) (Read error: Connection reset by peer)
[20:13:03] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Client Quit)
[20:16:10] *** Quits: harry_otter (~harry_ott@2601:483:4101:2350::d66d) (Quit: Client closed)
[20:20:09] *** Joins: Tv_ (uid62079@user/tv/x-3144562)
[20:22:38] *** Joins: girafe (~girafe@176-147-142-235.abo.bbox.fr)
[20:28:22] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[20:28:35] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[20:38:21] *** Quits: andlabs (~andlabs@70.107.171.168) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:38:33] *** Parts: Guest3458 (~dngraymat@2001:470:69fc:105::793b) ()
[20:39:58] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[20:41:43] *** Quits: beholders_eye (~weechat@2804:1b3:70c2:d7e4:2dd:3e29:fd7e:314) (Ping timeout: 252 seconds)
[20:42:18] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:3000:9875:d4c0:a753)
[20:45:06] *** Quits: knkay (~knkay@213.190.30.120) (Quit: ZNC 1.8.2 - https://znc.in)
[20:45:10] *** Quits: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52) (Quit: Leaving)
[20:46:50] *** Quits: lungaro_ (~lungaro@99-117-118-33.lightspeed.sndgca.sbcglobal.net) (Quit: Leaving)
[20:46:56] *** Quits: _lungaro_ (~lungaro@99-117-118-33.lightspeed.sndgca.sbcglobal.net) (Quit: Leaving)
[20:47:02] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:3000:9875:d4c0:a753) (Ping timeout: 260 seconds)
[20:55:15] *** Joins: andlabs (~andlabs@2604:ca00:179:8ddd:e1aa:968d:aa64:1662)
[20:57:21] *** Quits: orbyt_v10 (~orbyt_v10@172.92.4.78) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:59:04] *** Quits: kindablue (~kindablue@irc.tpurist.com) (Quit: System Rebooting..)
[21:04:05] *** Quits: arinov (~arinov@176.89.29.127) (Ping timeout: 252 seconds)
[21:08:41] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[21:10:37] *** Joins: fputs3 (~fputs@67.59.83.166)
[21:11:43] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[21:12:09] *** Quits: fputs (~fputs@67.59.83.166) (Ping timeout: 252 seconds)
[21:12:09] *** fputs3 is now known as fputs
[21:13:54] *** Joins: kindablue (~kindablue@irc.tpurist.com)
[21:20:40] *** Joins: dalek-caan (~Thunderbi@109.252.124.86)
[21:31:13] *** Quits: andlabs (~andlabs@2604:ca00:179:8ddd:e1aa:968d:aa64:1662) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:33:19] <cornfeedhobo> bpalmer: yes but this question is about a remote go.mod. presumably this would be a fresh shell, so the user is executing from their $HOME
[21:35:28] <fizzie> I don't want to try with something as gigantic as docker/compose, but `go install correct/import/path@version` should work just fine for module-aware projects.
[21:35:46] <fizzie> Notably `correct/import/path` would include the module major version suffix, if appropriate.
[21:36:22] <fizzie> So `github.com/docker/compose/v2@v2.2.2` for example.
[21:37:27] *** Quits: theoceaniscool (~theoceani@119.12.232.133) (Ping timeout: 252 seconds)
[21:37:30] <fizzie> Well, `github.com/docker/compose/v2/cmd/compose` perhaps. The root of that repository does not look like a meaningfully installable main package.
[21:38:01] <fizzie> (And wouldn't be particularly surprised if something like Docker had a completely different canonical way of installing it that involves more than just `go install`ing a binary.)
[21:39:10] <pjs> This is prob a dumb question but, if I have a function that returns an interface (`func New() Interface {}`, and I initialize the struct (with the interface sig) as `&Struct{...}`, is that OK? gopls complains if I use *Interface so I assume it's because it's a special type?
[21:42:35] <zsnes> yeah basically an interface is already a pointer, or treated as such
[21:42:43] <pjs> zsnes: thank you!
[21:45:57] <siXy> pjs: That said... in general the usual advice is to accept interfaces and return concrete types (which may implement an interface).
[21:47:13] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[21:48:59] *** Joins: fikran (~fikran@user/fikran)
[21:51:05] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[21:51:54] *** Quits: stmuk (~steve@15.43.187.81.in-addr.arpa) (Ping timeout: 260 seconds)
[21:55:27] <pjs> siXy: I see. So say if I have a function, `NewService` and the service type can be one of 3, Each service type implements the Service interface so I figured I'd accept a flag to NewService to decide which of the 3 to return. Should I instead do 3 different NewXService functions?
[21:56:17] *** Joins: stmuk (~steve@15.43.187.81.in-addr.arpa)
[21:57:25] <siXy> A good principle when not certain is to check out the stdlib - for example the net package has seperate NewTCPConn, NewUDPCOnn, etc functions, that all return the specific implementation of the net.Conn interface that they correspond to.
[21:59:21] <siXy> So I'd lean towards "yes" - however it's a guideline and not a rule, so you don't need to take that as gospel. Do whatever makes the code more readable - code that involves doing a bunch of type assertions to save a bit of duplication isn't particularly good code, which is part of the reason for the convention.
[22:01:14] *** Joins: orbyt_v10 (~orbyt_v10@172.92.4.78)
[22:01:30] *** Joins: arinov (~arinov@176.89.29.127)
[22:03:31] *** Quits: thms (~thms@82-64-130-207.subs.proxad.net) (Ping timeout: 250 seconds)
[22:03:54] *** Quits: anonton (~anonton@2001:470:69fc:105::1:4e88) (Quit: issued !quit command)
[22:04:07] <Tv_> zsnes: fwiw all interfaces contain pointers these days; the non-pointer optimization was removed to fix a race in gc
[22:04:47] <Tv_> this is why `var i interface{} = somethingSimple` can allocate
[22:05:15] *** Joins: andlabs (~andlabs@2604:ca00:179:8ddd:d544:fc85:752b:b4c2)
[22:05:17] *** Joins: thms (~thms@2a01:e0a:fb:7020:6010:a4bb:f426:917c)
[22:05:17] <cornfeedhobo> in a fresh alpine container i can reproduce my error: apk add --update go git && go install github.com/docker/compose@v2.2.2
[22:05:40] *** Joins: anonton (~anonton@2001:470:69fc:105::1:4e88)
[22:05:46] <cornfeedhobo> it's always something like "invalid version: module contains a go.mod file, so major version must be compatible"
[22:06:03] <fizzie> <fizzie> Notably `correct/import/path` would include the module major version suffix, if appropriate.
[22:06:23] <cornfeedhobo> bpalmer: ^^
[22:06:25] *** Joins: andlabs_ (~andlabs@2604:ca00:179:8ddd:34f2:b499:ddd5:d9d)
[22:06:37] *** CrunchyChewie_ is now known as CrunchyChewie
[22:06:41] <fizzie> So it would be `github.com/docker/compose/v2@v2.2.2`, except that's also not a main package so it makes no sense to `go install` it.
[22:07:17] <cornfeedhobo> ... is go install only meant for "main" packages?
[22:07:42] <cornfeedhobo> my understanding is that unlike `get`, it's purpose is to compile and place the binary in bin/
[22:07:57] *** Joins: ryu` (~ryusaku@c09825BC1.dhcp.as2116.net)
[22:08:00] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[22:08:01] <fizzie> There's no "the binary" for a package if it's not a main package.
[22:08:16] <b0nn> hmm, we had this discussion the other day, go install can 'build and cache' libs
[22:08:17] <pjs> siXy: ok makes sense.
[22:08:18] <cornfeedhobo> oh i see what you mean. i misinterpretted you at first
[22:08:31] <pjs> siXy: thanks
[22:08:33] <fizzie> b0nn: Yes, but not when you specify a `@foo` version suffix.
[22:08:42] <b0nn> ah, that's right
[22:09:43] *** Quits: andlabs (~andlabs@2604:ca00:179:8ddd:d544:fc85:752b:b4c2) (Ping timeout: 252 seconds)
[22:10:05] <fizzie> `go install github.com/docker/compose/v2/cmd/compose@v2.2.2` (note the v2 part) should build that corresponding binary, and install it into $GOBIN -- but it won't do anything else that might be relevant for installing "Docker Compose" the project (if there is something).
[22:11:14] <cornfeedhobo> looks like `install` doesn't want to work with a go.mod that has replace directives
[22:11:33] *** Quits: andlabs_ (~andlabs@2604:ca00:179:8ddd:34f2:b499:ddd5:d9d) (Ping timeout: 252 seconds)
[22:11:48] <fizzie> `replace` directives are only meaningful for the main module, and for `go install ...@version` there is no main module.
[22:12:08] <cornfeedhobo> indeed. `go install github.com/docker/compose/v2/cmd/compose@v2.2.2` is complaining about this though
[22:12:35] <cornfeedhobo> might also be worth pointing out that they have a really weird structure. /compose is actually a package and main appears to be in /cmd
[22:12:54] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[22:13:11] <cornfeedhobo> either way, after adjusting as suggested, either path produces a warning and no bin/
[22:13:39] <fizzie> That's not very weird. Having main packages of binaries as `/cmd/foo` is pretty much the norm, at least if there's more than one binary.
[22:14:01] <cornfeedhobo> yes i understand that. but i don't see that as what's happening here
[22:14:17] <cornfeedhobo> usually /cmd/foo is still `package main` within that directory, right?
[22:14:32] <cornfeedhobo> this is `package compose`
[22:14:42] <fizzie> Oh, right. Yeah, that's a little weird.
[22:15:13] <fizzie> It would also produce a binary called `cmd` as a result.
[22:15:26] <cornfeedhobo> indeed. but i tried just /cmd and i still get the warning about the replace directive
[22:16:09] <cornfeedhobo> (at this point i just need to know wtf - i've already worked around this like an hour ago)
[22:16:23] <fizzie> If it's not buildable with the replace directive ignored, then I imagine it just plain can't be installed with `go install`.
[22:17:22] <cornfeedhobo> okay. the makefile hints at a build abstraction, so i'm inclined to agree
[22:17:40] <fizzie> (There's a BUILDING.md in there.)
[22:17:42] <cornfeedhobo> sigh. at least i learned the module version scheme a bit more. thank you!
[22:17:56] <cornfeedhobo> oh, so there is. i'll go read that
[22:18:17] <cornfeedhobo> heh. make. might as well curl at that point.
[22:18:17] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[22:18:39] <cornfeedhobo> (for my use case that is)
[22:18:54] <cornfeedhobo> anyways. this is solved. thanks again everyone :D
[22:24:16] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[22:29:00] *** Joins: ItsNotGoodName0 (~ItsNotGoo@c-73-83-144-140.hsd1.wa.comcast.net)
[22:29:26] <b0nn> 1.18beta just got released
[22:29:41] <b0nn> er 1.18beta1
[22:30:01] <b0nn> https://github.com/golang/go/releases/tag/go1.18beta1
[22:30:33] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:3000:9875:d4c0:a753)
[22:31:08] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:31:27] *** Quits: mmk2410 (~mmk2410@user/mmk2410) (Quit: ZNC - https://znc.in)
[22:32:14] *** Joins: mmk2410 (~mmk2410@user/mmk2410)
[22:35:02] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:3000:9875:d4c0:a753) (Ping timeout: 240 seconds)
[22:46:30] *** Quits: zwr (~zwr@2804:d45:b966:fb00:8070:51d:80f2:cc47) (Ping timeout: 260 seconds)
[22:46:55] *** Joins: zwr (~zwr@2804:d45:b966:fb00:3186:b42a:1a11:574d)
[22:53:22] *** Quits: dalek-caan (~Thunderbi@109.252.124.86) (Quit: dalek-caan)
[22:54:34] *** Joins: jla (~jordi@64.225.79.195)
[23:05:26] *** Joins: lilgopher (~textual@2601:241:8000:38f0:a9b4:bc92:4840:3868)
[23:07:06] *** Joins: andlabs (~andlabs@2a00:79e1:abc:1a0a:b1bf:312a:7278:ca00)
[23:08:04] *** Joins: andlabs_ (~andlabs@2a00:79e1:abc:1a12:1dc:dca8:5e01:1ccb)
[23:11:42] *** Quits: andlabs (~andlabs@2a00:79e1:abc:1a0a:b1bf:312a:7278:ca00) (Ping timeout: 260 seconds)
[23:12:53] *** Quits: shtirlic (~shtirlic@178.70.132.77) (Read error: Connection reset by peer)
[23:15:30] *** Joins: internut (~internut@98.38.226.136)
[23:16:45] *** Quits: arinov (~arinov@176.89.29.127) (Ping timeout: 256 seconds)
[23:19:04] *** Quits: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz) (Quit: Leaving)
[23:22:54] *** Joins: edrocks (~Ed@user/edrocks)
[23:26:12] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[23:26:52] *** Joins: shtirlic (~shtirlic@178.70.132.77)
[23:27:35] *** Quits: ItsNotGoodName0 (~ItsNotGoo@c-73-83-144-140.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[23:29:53] *** Joins: ItsNotGoodName0 (~ItsNotGoo@c-73-83-144-140.hsd1.wa.comcast.net)
[23:35:06] <edrocks> 1.18 beta just released https://tip.golang.org/doc/go1.18
[23:35:39] <edrocks> does anyone know how to view tip packages on pkg.go.dev? They link to new constraints package but it's broken https://pkg.go.dev/constraints@master
[23:43:25] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[23:48:17] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:f820:1634:ac16:6286)
[23:51:06] *** Quits: aLeSD (~aLeSD@139.47.114.114) (Ping timeout: 265 seconds)
[23:55:45] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:f820:1634:ac16:6286) (Ping timeout: 250 seconds)
[23:55:52] *** Joins: Atque (~Atque@user/atque)
[23:56:02] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[23:56:52] *** Joins: theoceaniscool (~theoceani@119.12.232.133)
[23:58:19] *** Joins: fikran (~fikran@user/fikran)
