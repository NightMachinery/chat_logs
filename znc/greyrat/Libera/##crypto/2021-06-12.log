[00:02:50] *** Joins: rozbb (~ksundar@pool-96-239-34-154.nycmny.fios.verizon.net)
[00:08:32] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (Remote host closed the connection)
[00:11:37] *** Joins: kayabaNerve (~kayabaNer@user/kayabanerve)
[00:20:55] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 252 seconds)
[00:27:50] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[00:29:02] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[00:33:31] <ioxzev1z> Why does 256 bit XTS use two halfs of a 512 bit key?
[00:36:45] *** Riastrad1 is now known as Riastradh
[00:36:48] <Riastradh> Just how the standard was defined, mostly because the standard authors misunderstood the XEX paper.
[00:37:46] <ioxzev1z> Riastradh, so technically speaking it's a mistake?
[00:37:51] <Riastradh> pretty much
[00:38:11] <ioxzev1z> Is there any additional security with k * 2 over just k?
[00:38:14] <Riastradh> no
[00:38:25] <Riastradh> (not appreciably, anyway)
[00:38:34] <ioxzev1z> Ok, so just a technicality then-
[00:38:39] <Riastradh> yep
[00:39:03] <ioxzev1z> Can they not just refine the standard after the error?
[00:39:16] <ioxzev1z> Like xts2 or something
[00:39:22] <Riastradh> not much value
[00:40:24] <ioxzev1z> Is --key-size 512 with cryptsetup then correct?
[00:40:35] <ioxzev1z> aes-xts-plain64
[00:41:36] <Riastradh> probably, don't know offhand
[00:41:59] <Riastradh> Try 128, 192, 256, 384, and 512, and see which ones fail?
[00:42:25] <Riastradh> If they all work, then cryptsetup is silly.  But most likely either {128, 192, 256} or {256, 384, 512} will succeed and the others will fail.
[00:43:23] <ioxzev1z> I know that 512 works, but not sure if it's a silent fail or something
[00:43:39] *** Joins: redawl (~redawl@185.153.177.12)
[00:43:51] <ioxzev1z> Just seems weird where --key-size is simple for anything other than xts, but double for it
[00:44:43] <ioxzev1z> Also not sure how 128 would work with xts assuming it is halfed, as aes doesn't (iirc) work with 64 bit keys
[00:45:23] *** Quits: chomwitt (~Pitsikoko@2a02:587:dc02:b00:98b0:cd42:bd6f:8295) (Ping timeout: 252 seconds)
[00:47:56] <ioxzev1z> Or would 128 be then padded with 0 to the left to get a 64 bit key=
[00:52:52] *** Quits: redawl (~redawl@185.153.177.12) (Quit: Leaving)
[00:53:17] <ioxzev1z> Actually that's a good question, would a zero padded 128bit key with only 64 actual bits used be a valid key for aes?
[00:53:59] <ioxzev1z> aes uses at least 128 bits, but I don't think there's any actual rule that the above wouldn't work
[00:55:13] *** michael is now known as mgdm
[00:56:51] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 252 seconds)
[00:58:53] <MacGyver> It would use the 64 0-bits.
[00:59:07] <MacGyver> There's nothing stopping you from giving AES a key that's literally "1".
[00:59:15] <MacGyver> But it still uses those 127 0-bits preceding it.
[01:07:20] *** Joins: redawl (~redawl@77.81.139.204)
[01:13:21] *** Quits: redawl (~redawl@77.81.139.204) (Ping timeout: 252 seconds)
[02:07:26] *** Quits: weyhmueller (~weyhmuell@blofeld.nc.w9r.de) (Quit: ZNC 1.8.2 - https://znc.in)
[02:09:08] *** Joins: weyhmueller (~weyhmuell@blofeld.nc.w9r.de)
[02:12:36] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[02:24:51] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[02:28:37] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 272 seconds)
[02:50:02] *** Quits: river (~river@tilde.team/user/river) (Quit: Leaving)
[02:50:38] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[02:54:59] *** Joins: reumeth (~reumeth@user/reumeth)
[02:55:51] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 272 seconds)
[03:02:06] *** Quits: reumeth (~reumeth@user/reumeth) (Ping timeout: 264 seconds)
[03:27:02] *** Joins: sm2n (~sm2n@user/sm2n)
[03:27:20] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[03:30:56] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 264 seconds)
[03:36:37] *** Quits: Guest99 (~textual@cpe-174-102-106-83.columbus.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[03:40:46] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 272 seconds)
[03:47:15] *** Joins: gueriLLaPunK (~textual@45.61.26.130)
[03:49:59] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[04:01:53] *** Joins: Wulf (~Wulf@user/wulf)
[04:04:21] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[04:05:00] *** Quits: gueriLLaPunK (~textual@45.61.26.130) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:09:02] *** Quits: mouseghost (~draco@user/mouseghost) (Quit: mew wew)
[04:16:50] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[04:20:12] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 268 seconds)
[04:22:44] *** Joins: Cr4ft (~jordan@2604:3d09:7179:8a00:9e7b:44aa:a613:529e)
[05:13:16] *** Quits: Iota (~Iota@user/iota) (Remote host closed the connection)
[05:15:19] *** Joins: Iota (~Iota@user/iota)
[05:37:08] *** Quits: Peng (~mnordhoff@fin.mattnordhoff.net) (Quit: Peng timeout)
[05:37:18] *** Joins: Peng (~mnordhoff@fin.mattnordhoff.net)
[05:43:03] *** Quits: Iota (~Iota@user/iota) (Remote host closed the connection)
[05:44:35] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[05:54:00] *** Joins: srikavin3 (~srikavin@user/srikavin)
[05:56:13] *** Quits: srikavin3 (~srikavin@user/srikavin) (Client Quit)
[05:56:34] *** Joins: srikavin9 (~srikavin@user/srikavin)
[05:56:42] *** Quits: srikavin (~srikavin@user/srikavin) (Ping timeout: 264 seconds)
[05:56:43] *** srikavin9 is now known as srikavin
[06:12:09] *** Parts: Cr4ft (~jordan@2604:3d09:7179:8a00:9e7b:44aa:a613:529e) ()
[06:14:06] *** Quits: phebus_ (~phebus@c-73-113-180-252.hsd1.tn.comcast.net) (Quit: POKE 1,0)
[06:16:03] *** Joins: gtc (~gtc@r167-60-201-26.dialup.adsl.anteldata.net.uy)
[06:17:48] *** Parts: gtc (~gtc@r167-60-201-26.dialup.adsl.anteldata.net.uy) ()
[06:19:30] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:25:47] <Gravis> MacGyver: one would hope common sense would stop you. :P
[06:26:47] <MacGyver> Gravis: how long exactly have you been interested in cryptography?
[06:27:19] <MacGyver> Gravis: I mean, surely long enough to be dissuaded from the notion that people apply common sense in any way, shape, or form when it comes to using it, right?
[06:27:34] <Gravis> touche, sir.
[06:30:40] <Gravis> MacGyver: I think we could solve this lack of common sense problem by adding blockchain. ;)
[06:33:27] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 252 seconds)
[06:49:10] *** Joins: phebus (~phebus@c-73-113-180-252.hsd1.tn.comcast.net)
[06:51:07] <Soni> does OPAQUE allow invalidation of a server? so that a compromised server can't lead to MITMs?
[06:52:22] <Soni> like, it seems the weakness of PAKEs is that if you have the username and the password you can pretend to be the server... or if you have the server data. with private keys you can just revoke the cert, but is there a PAKE equivalent?
[06:53:12] <Soni> oh, we guess you wouldn't be able to do actual MITMs that involve talking to the original server, only pretend to be the original server.
[06:53:33] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Read error: Connection reset by peer)
[06:53:33] <Soni> hmm but that's still less than ideal in some cases
[06:53:37] *** Joins: peterhil_ (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[07:02:43] *** Joins: franco (~franco@199.58.83.9)
[07:10:46] <shachaf> What's the simplest MAC you can construct out of various primitives, e.g. a fixed permutation or a block cipher?
[07:12:46] <danieldg> cmac, probably
[07:13:04] <danieldg> or really, the simpler version of it
[07:16:36] <shachaf> What's the simpler version of it?
[07:16:43] <danieldg> cbc-mac
[07:17:30] <shachaf> Where your MAC is just the final ciphertext of encrypting in CBC mode, right?
[07:17:39] <danieldg> yep
[07:18:13] <shachaf> What about this construction my friend just mentioned: You tweak each block using its index, and then encrypt the whole thing in ECB mode and xor the blocks together.
[07:18:26] <danieldg> that sounds complicated :p
[07:18:48] <danieldg> 'tweak' in particular is ill-defined
[07:18:55] <danieldg> and likely critical for security
[07:20:20] <shachaf> Wait, my friend was describing something with a fixed permutation, not a block cipher.
[07:23:39] *** Joins: juancri (~juancri@75.172.211.91)
[07:29:52] <Riastradh> Sounds similar to OCB.
[07:43:21] *** Joins: gueriLLaPunK (~textual@45.61.26.130)
[07:55:29] *** Joins: willyg_cos (~willyg_co@user/willyg-cos/x-4994202)
[07:59:13] <lizzie> shachaf: there are things like CTR mode that are encrypt each block separately based on index, which I'd trust more than coming up with your own way to tweak it.  Aside from that, xor'ing the blocks together *seems* fishy to me.
[07:59:22] <lizzie> *that already
[08:00:21] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[08:00:24] *** Quits: gueriLLaPunK (~textual@45.61.26.130) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:00:25] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[08:01:25] <snappy> gcm xor each block ciphertext together
[08:01:38] *** Lord_of_Life_ is now known as Lord_of_Life
[08:03:09] <lizzie> here's reference for what snappy said (since I had to look it up myself), https://en.wikipedia.org/wiki/Galois/Counter_Mode
[08:03:19] <lizzie> forming a MAC based on that seems to already be a thing
[08:03:48] <MacGyver> shachaf: That's a terrible idea, re: tweak, ECB, xor.
[08:04:23] <MacGyver> shachaf: Regardless of how you "tweak" based on index, it's going to be trivial to create plaintexts that MAC to all-zeroes.
[08:04:40] <MacGyver> shachaf: Similarly, it's trivially vulnerable to length extension.
[08:05:57] <MacGyver> shachaf: For any even number of blocks, all you have to do is precompute the tweak for each block, then pre-apply the tweak to the plaintext, s.t. it encrypts all blocks to the same value.
[08:07:02] <MacGyver> Presto, your MAC is now all-zeroes (or whatever it was for the plaintext to which you appended this.)
[08:08:28] <snappy> the katz and lindell book has a good chapter on MACs and shows a lot of insecure constructions, it's worth checking out
[08:30:10] *** Joins: chomwitt (~Pitsikoko@2a02:587:dc02:b00:98b0:cd42:bd6f:8295)
[08:47:27] *** Quits: franco (~franco@199.58.83.9) (Read error: Connection reset by peer)
[08:48:21] <MacGyver> Note, btw, that OCB's actual MAC is a *single* encryption of the xor of all *plaintext* message blocks + an iterated nonce-based encrypted value. It's basically the same operations in a different order, and at the same time simpler, and more complex, than the scheme proposed by your friend. The main reason that one *is* secure is because it makes the blocks depend on each other *before* the
[08:48:22] <MacGyver> encryption step, not after; and because the "tweak" in this case isn't index-based, but an iterated function with a seed value *that depends on the key*, an attacker can't precompute the iterated value here.
[08:53:09] *** Joins: ionface (~ionface@user/ionface)
[09:04:22] *** Joins: Fluxx (~Fluxx@user/fluxx)
[09:10:47] *** Joins: franco (~franco@181.46.68.8)
[09:11:06] *** Quits: franco (~franco@181.46.68.8) (Client Quit)
[09:36:03] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 252 seconds)
[09:45:59] *** Joins: ionface_ (~ionface@user/ionface)
[09:48:21] *** Quits: ionface (~ionface@user/ionface) (Ping timeout: 264 seconds)
[09:48:47] *** Joins: reumeth (~reumeth@user/reumeth)
[09:54:09] *** ionface_ is now known as ionface
[10:17:53] <shachaf> MacGyver: Yes, you'd need an extra thing to handle length extension.
[10:18:11] <shachaf> I probably misunderstood and also miscommunicated the exact construction.
[10:22:32] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[10:23:43] <dusk> shachaf: That's not the problem. The problem is that in the end you xor everything together.
[10:24:32] <shachaf> Or, right, I was thinking of a different construction.
[11:45:29] *** Joins: river (~river@tilde.team/user/river)
[11:52:00] *** Quits: juancri (~juancri@75.172.211.91) (Quit: Leaving)
[12:14:49] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 252 seconds)
[12:32:32] *** Quits: antto (~pewpew@antonsavov.net) (Quit: wubwub)
[12:33:30] *** Joins: antto (~pewpew@134.209.89.227)
[12:55:31] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[12:58:16] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 252 seconds)
[13:00:11] *** Quits: reumeth (~reumeth@user/reumeth) (Ping timeout: 252 seconds)
[13:08:18] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (Remote host closed the connection)
[13:08:38] *** Joins: kayabaNerve (~kayabaNer@user/kayabanerve)
[13:32:11] *** Joins: Flux (~Fluxx@user/fluxx)
[13:35:01] *** Quits: Fluxx (~Fluxx@user/fluxx) (Ping timeout: 265 seconds)
[14:14:59] *** Joins: vernaz (~vernaz@148.63.127.167)
[14:22:36] *** Joins: reumeth (~reumeth@user/reumeth)
[14:24:10] *** cvmn is now known as caveman
[14:34:20] *** Quits: vernaz (~vernaz@148.63.127.167) (Ping timeout: 256 seconds)
[15:04:29] *** Quits: lord| (~lordpipe@user/lordpipe) (Ping timeout: 252 seconds)
[15:08:36] *** Joins: lord| (~lordpipe@user/lordpipe)
[15:12:39] *** Joins: merope (~merope@151.20.186.31)
[15:21:06] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[15:29:19] *** Quits: merope (~merope@151.20.186.31) (Quit: merope)
[15:56:47] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[16:00:21] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 264 seconds)
[16:18:43] *** Joins: merope (~merope@151.20.186.31)
[16:25:23] *** Quits: merope (~merope@151.20.186.31) (Quit: merope)
[16:34:18] *** Joins: PJBoy (~PJBoy@user/pjboy)
[17:21:21] *** Quits: Flux (~Fluxx@user/fluxx) (Ping timeout: 252 seconds)
[17:39:10] *** Joins: anonymous (~river@tilde.team/user/river)
[17:46:05] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[17:46:19] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[17:46:29] *** Quits: willyg_cos (~willyg_co@user/willyg-cos/x-4994202) (Remote host closed the connection)
[17:46:49] *** Joins: willyg_cos (~willyg_co@user/willyg-cos/x-4994202)
[17:47:33] *** Quits: willyg_cos (~willyg_co@user/willyg-cos/x-4994202) (Remote host closed the connection)
[17:48:14] *** Quits: river (~river@tilde.team/user/river) (*.net *.split)
[17:49:03] *** Joins: willyg_cos (~willyg_co@user/willyg-cos/x-4994202)
[18:01:12] *** Joins: nsh (~lol@5.135.157.17)
[18:08:35] *** anonymous is now known as river
[18:30:36] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[18:33:44] *** Quits: willyg_cos (~willyg_co@user/willyg-cos/x-4994202) (Quit: Leaving)
[18:37:16] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Remote host closed the connection)
[18:37:58] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[18:50:27] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 252 seconds)
[18:52:16] *** Quits: reumeth (~reumeth@user/reumeth) (Remote host closed the connection)
[18:56:45] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 264 seconds)
[19:03:49] *** Joins: mouseghost (~draco@user/mouseghost)
[19:08:40] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[19:17:51] *** Joins: reumeth (~reumeth@user/reumeth)
[19:31:52] *** Joins: pinheadmz_ (~pinheadmz@hns-contributor.dev)
[19:32:35] <pinheadmz_> I'm working on a piece of software that interacts with HSM via PKCS#11, but im having a hard time finding basic documentation about the protocol. pkcs11-tool for example expects an entire library (.so) as a parameter... is that how it works? The client must be connected with a library built for the specific device ? I was hoping there would be a wire protocol or something and you send the HSM messages via TCP for example
[19:44:34] *** Joins: GNUcifer (~ct@i59F4B1FB.versanet.de)
[19:48:06] *** Quits: cehteh (~ct@i59F72E3B.versanet.de) (Ping timeout: 244 seconds)
[19:49:40] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[20:09:43] *** Joins: exciteabletom (~tom@180.150.82.109)
[20:47:07] *** Joins: plasticuproject (~plasticup@user/plasticuproject)
[20:58:50] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[21:01:36] *** Joins: gueriLLaPunK (~textual@216.49.27.5.res-cmts.hzl2.ptd.net)
[21:02:06] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 265 seconds)
[21:16:38] *** Quits: river (~river@tilde.team/user/river) (Quit: Leaving)
[21:58:19] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[22:01:18] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[22:19:32] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Quit: Ping timeout (120 seconds))
[22:19:50] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[22:22:18] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[22:25:30] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[22:37:02] *** Quits: exciteabletom (~tom@180.150.82.109) (Quit: Konversation terminated!)
[22:52:36] *** Joins: river (~river@tilde.team/user/river)
[22:57:25] *** Joins: Ohlov389517494 (~Ohlov3@dyndsl-091-248-239-039.ewe-ip-backbone.de)
[22:57:36] <woggle> pinheadmz_: PKCS#11 is a C library interface standard, so that's what you're getting.
[22:57:47] *** Joins: Ohlov389517490 (~Ohlov3@dyndsl-085-016-106-106.ewe-ip-backbone.de)
[23:01:17] *** Quits: Ohlov38951749 (~Ohlov3@host-091-097-116-035.ewe-ip-backbone.de) (Ping timeout: 272 seconds)
[23:02:29] *** Quits: Ohlov389517494 (~Ohlov3@dyndsl-091-248-239-039.ewe-ip-backbone.de) (Ping timeout: 272 seconds)
[23:12:37] *** Quits: gueriLLaPunK (~textual@216.49.27.5.res-cmts.hzl2.ptd.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:17:39] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Quit: Ping timeout (120 seconds))
[23:17:57] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[23:24:00] <Wulf> PKCS#11 and openssl engines, etc. are a PITA.
[23:24:11] <Wulf> pinheadmz_: which HSM?
[23:27:38] *** Joins: gueriLLaPunK (~textual@216.49.27.5.res-cmts.hzl2.ptd.net)
[23:33:32] <Riastradh> pinheadmz_: your HSM vendor should provide a .so that implements the PKCS#11 interface (which is just a C API) in terms of the HSM functionality.
[23:38:39] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 252 seconds)
[23:53:43] *** Quits: reumeth (~reumeth@user/reumeth) (Ping timeout: 268 seconds)
[23:56:57] *** Quits: gueriLLaPunK (~textual@216.49.27.5.res-cmts.hzl2.ptd.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
