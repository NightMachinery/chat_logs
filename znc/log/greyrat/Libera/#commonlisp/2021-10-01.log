[00:01:03] *** Joins: phadthai (mmondor@user/phadthai)
[00:01:05] <Nilby> The whole building issue is greatly hampered by not having a comprehensive portable wrapper around operating systems and implementations.
[00:03:01] <etimmons> Shinmera: Nothing really jumps out at me other than that FPS is not consistent and it doesn't seem to be due to GC.
[00:03:05] <Nilby> I only minimize it because I can now after many years stand on a house of cards trash heap that does os/implementation junk for me.
[00:03:06] <Shinmera> Well, that's where another advantage of etimmons' and I's approach comes in: by having the builder decoupled in a process, you don't have to worry about being portable at all.
[00:03:16] <Shinmera> etimmons: Are you running on Intel graphics?
[00:03:23] <etimmons> yes
[00:03:29] <Shinmera> ah. that'll do it :)
[00:04:02] <etimmons> ha, ok. Looks like I got to get my laptop's discrete card working under Linux again...
[00:04:03] <Shinmera> intel graphics are going to chug, especially older models.
[00:04:31] <Shinmera> I should figure out how to optimise it, because I don't think it should be as bad as it is, but I could so far not determine why.
[00:05:20] <Nilby> can confirm Intel graphics makes nearly every game sluggish
[00:06:25] <Nilby> I can barely express my rage at graphics drivers, shader compilers, and really graphics hardware companies
[00:06:58] <etimmons> Nilby: UIOP has too large a footprint, IMO. I also think it should be more decoupled from ASDF than it is, but it's hard to put that genie back in the bottle at this point.
[00:07:00] <Shinmera> While that's true Kandria still shouldn't be as demanding as it is.
[00:07:09] <Shinmera> etimmons: agreed.
[00:07:19] <Shinmera> etimmons: though I feel it's another consequence of the coupled approach.
[00:11:47] <Nilby> but actual retro games didn't have such good lighting :)
[00:14:18] *** andreyorst` is now known as andreyorst
[00:19:04] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:883:2395:bb9b:14c6)
[00:20:51] <Shinmera> That may be true, but it doesn't mean it can't be optimised, either.
[00:24:11] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[00:24:22] *** Joins: lisp123 (~lisp123@5.30.23.247)
[00:27:36] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[00:34:47] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 246 seconds)
[00:35:27] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[00:40:03] *** Joins: Krystof (~user@81.174.155.115)
[00:45:26] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[00:45:48] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[00:46:02] *** Quits: pve (~pve@37-33-119-137.bb.dnainternet.fi) (Quit: leaving)
[00:46:58] *** childlikempress is now known as moon-child
[00:49:29] *** Joins: Colleen (~fermion@supersolid.equilibrium.tymoon.eu)
[00:52:38] <jcowan> Nilby: Simple answer: don't use graphics. Stick to text as God and Gutenberg intended.
[01:05:19] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 250 seconds)
[01:08:55] *** Quits: selwyn (~selwyn@user/selwyn) (Quit: Leaving)
[01:17:28] *** Joins: notzmv (~zmv@user/notzmv)
[01:22:04] *** Joins: utis (~utis@84.208.165.160)
[01:24:05] *** Quits: shka (~herr@109.231.6.176) (Ping timeout: 252 seconds)
[01:26:12] <rotateq> Nilby: we had discussed some format magic yesterday evening, you would have liked it :) iirc you know much about that too
[01:38:39] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[01:39:19] <Nilby> Since I don't have the skill, I'm stuck making boring text games, so maybe I should make an "escape from format", or "format battle" game.
[01:40:25] <rotateq> it was about how using the ~b directive to format a number in a way like "0000 0110 1111 0001"
[01:42:12] <Nilby> Interesting. I'm reading it. pjb is a format ninja too.
[01:43:52] <rotateq> he's a few years ahead of me with experience :)
[01:46:08] <rotateq> There nearly could be written a little book just about format magic. ^^
[01:51:37] <Nilby> I somewhat perversely like writing format strings, but I admit the meaning of reading things like "~{~<~%~1,80:;~a~> ~}" and "~{~@[~a~^ ~]~^~}" doesn't immediately jump out.
[01:51:51] <rotateq> yes
[01:52:07] <rotateq> it must be practiced to read and write those
[01:52:08] *** Quits: gaqwas (~john@dynamic-095-118-061-019.95.118.pool.telefonica.de) (Ping timeout: 246 seconds)
[01:52:57] <Nilby> Nor can I explain why I like writing format, but not so much APL or perl.
[01:53:56] <rotateq> okay to perl I can't say anything
[01:55:26] <rotateq> APL fits well to me too :)
[01:56:42] <rotateq> Nilby: hm the first control string you gave does a formatting upto 80 columns, or what?
[01:57:22] <rotateq> unfortunately i should sleep soon
[01:58:08] <Nilby> rotateq: Yes. You win the guess the format string of the day!
[01:59:17] *** Quits: notzmv (~zmv@user/notzmv) (Read error: Connection reset by peer)
[01:59:24] <rotateq> but i don't know from memory the ~< directive. ~{ was for iterating
[02:00:49] <rotateq> and ~[ was for decisions
[02:01:15] <Nilby> "~<" is start-logical-block for pretty printing, but can also be used for text justification.
[02:01:43] <rotateq> don't worry, I'll practice piece by piece
[02:01:47] *** Joins: notzmv (~zmv@user/notzmv)
[02:02:02] <rotateq> the goto capability can be useful
[02:02:51] <rotateq> but how correctly using ~/ I'm still not sure
[02:04:01] <rotateq> sleep well :)
[02:06:28] <Nilby> rotateq: You too. I use ~/ for printing my own string type.
[02:09:19] <rotateq> i'll comeback to it if it fits
[02:09:24] *** Quits: rotateq (~user@p200300e78715be00fdfeed040e17b750.dip0.t-ipconnect.de) (Quit: ERC (IRC client for Emacs 27.2))
[02:16:33] *** Joins: beach` (~user@2a01:cb19:150:3400:34da:254c:9f5b:12b2)
[02:18:09] *** Quits: frgo_ (~frgo@p200300deef0cee00384c8c61d9900da9.dip0.t-ipconnect.de) (Remote host closed the connection)
[02:18:24] *** Joins: igemnace (~ian@user/igemnace)
[02:18:36] *** Joins: frgo (~frgo@p200300deef0cee00384c8c61d9900da9.dip0.t-ipconnect.de)
[02:20:37] *** Quits: beach (~user@2a01:cb19:150:3400:2a6:806:3923:229) (Ping timeout: 252 seconds)
[02:23:35] *** Quits: sm2n (~sm2n@user/sm2n) (Read error: Connection reset by peer)
[02:25:01] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:883:2395:bb9b:14c6) (Remote host closed the connection)
[02:25:14] *** Joins: sm2n (~sm2n@user/sm2n)
[02:47:14] <pjb> Nilby: you should write a format control string parser and explainer.
[02:48:41] *** Quits: rgherdt (~rgherdt@2a02:8109:86c0:d8d:e473:ba5e:85e3:6828) (Ping timeout: 264 seconds)
[02:51:04] <saltrocklamp[m]> i'd love that
[02:51:19] <saltrocklamp[m]> something like https://regex101.com/ but for lisp format strings
[02:51:26] <pjb> Hey, I find this POC code defining a lispy set equivalent to specifiers: https://termbin.com/drsp
[02:52:06] <pjb> saltrocklamp[m]: ideone.com let you run random CL code, so you can try out FORMAT.
[02:52:31] <saltrocklamp[m]> well yeah i can do that in my repl too :) the "explainer" in the top right is what i had in mind
[02:53:09] <Nilby> pjb: I think one could do an expansion into function calls, but explaining what it's supposed to do or mean is advanced AI that's beyond me and/or might need a very extensive training set.
[02:53:44] <pjb> saltrocklamp[m]: oh right.
[02:54:42] <pjb> (formatter "~{~A~^, ~}") #| --> #<Anonymous Function #x30202CED9CFF> |#
[02:54:52] <pjb> it's a macro. macroexpand it, and see what your implementation does.
[02:56:08] <pjb> in ccl, it calls (ccl::do-sub-format-0 *standard-output*  "~{~A~^, ~}" ' ((1 2 3))) #| 1, 2, 3 --> nil |#  which is not very explicative.
[02:56:18] <pjb> But some other implementation may expand to something more interesting.
[02:59:13] <Nilby> If I was an educator I might work on it, but for now it's easier to do like saltrocklamp[m] and use my faulty built-in one.
[03:01:55] <Nilby> It might be useful though if translating CL into other languages.
[03:02:20] <pjb> or as a tool like cdecl, to explain complex format-control strings.
[03:02:59] <pjb> for example, it could expand to an expression using my fmt operators in the above termbin.
[03:04:46] <saltrocklamp[m]> yeah i like little "calculator" or "explainer" tools
[03:05:13] <saltrocklamp[m]> e.g. https://crontab.guru/ and http://permissions-calculator.org/
[03:05:31] <saltrocklamp[m]> i'm bookmarking the c declaration one
[03:10:42] *** Joins: lisp123 (~lisp123@5.30.23.247)
[03:12:12] <Nilby> pjb: Those fmt operators make me think that it it could natural consequence of a format implementation designed in such a way.
[03:15:08] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 252 seconds)
[03:17:34] * Nilby is reading SICL's format compiler
[03:18:02] *** Quits: elderK (uid205007@id-205007.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[03:19:21] <pjb> Nilby: exactly.
[03:26:01] *** Quits: random-nick (~random-ni@87.116.165.220) (Ping timeout: 252 seconds)
[03:32:22] *** Quits: jkordani (~jkordani@c-69-255-2-251.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[03:37:41] *** Joins: Qwnavery (~Qwnavery@user/qwnavery)
[03:47:59] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 246 seconds)
[03:59:50] *** Joins: khrbt (~znc@user/khrbt)
[04:09:02] *** Quits: taiju (~taiju@M014013236064.v4.enabler.ne.jp) (Ping timeout: 252 seconds)
[04:13:15] <jeosol> Anyone got esrap related errors in SBCL 2.1.9?
[04:14:26] <jeosol> https://paste.ofcode.org/AR8HcxwPrUvzXyikgin3ax
[04:16:26] <_death> it's been fixed.. you may try updating esrap
[04:18:58] *** Joins: taiju (~taiju@m014013236064.v4.enabler.ne.jp)
[04:27:38] *** Quits: Psybur (~Psybur@mobile-166-170-32-197.mycingular.net) (Remote host closed the connection)
[04:34:40] <Arcsech> I ran into that trying to build lem yesterday. I gather it's already been fixed in esrap upstream, but quicklisp gonna quicklisp:
[04:34:40] <Arcsech> > The libraries were last updated on August 7, 2021.
[04:35:12] <Arcsech> Workaround is either get esrap directly (clone the repo or something) or use sbcl 2.1.8 until quicklisp updates
[04:37:12] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[04:38:31] *** Quits: Josh_2 (~user@37.25.47.130) (Quit: ERC (IRC client for Emacs 27.1))
[04:42:09] *** Joins: icer (eric@gateway/vpn/protonvpn/icer)
[04:42:43] <icer> Hello!
[04:47:35] <Bike> hello.
[04:48:51] *** Quits: charles_ (~charles@cpe-76-186-124-165.tx.res.rr.com) (Remote host closed the connection)
[04:49:13] *** Joins: charles_ (~charles@cpe-76-186-124-165.tx.res.rr.com)
[04:52:33] <icer> I'm learning to use the CLOS, from PCL and Keene primarily.  I have a question about how to initialize the slots inherited from a parent class.
[04:53:17] <Xach> icer: spill it
[04:54:13] <icer> I'm following the structure in Keene's book, defclass x, make-class-x.  Is there a way to pass the initial values to the parent instead of initializng them in the make-class-x of the child?
[04:54:23] <icer> https://pastebin.com/Wr5e2V6V
[04:55:21] <icer> Or rather, let the child initialize its slots and the parent initialize the inherited ones. (or method associated with the parent)
[04:56:15] <Xach> Hmm, I don't use that style, I almost always use make-instance directly, which doesn't introduce that kind of issue.
[04:56:43] <Xach> Sorry not to be able to help.
[04:57:30] *** ChanServ sets mode: -o Bike
[04:57:47] <icer> So, in your style, would you initialize all the slots in a single call to make-instance?
[04:57:54] <Bike> yeah, not sure i understand the purpose of value-list here
[04:59:09] <Xach> icer: not necessarily. initialize-instance/shared-initialize come into play also.
[04:59:25] <icer> I receive serialized objects with many fields, some share common fields with a common purpose and processing that I wanted to pull into superclasses.
[05:01:27] <Bike> well that's kind of how things work with the usual initargs
[05:01:49] <Bike> like if you have a superclass initialize-instance method that does something with some particular initarg, the child initialization will still call that method (unless it's overridden)
[05:03:37] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[05:03:43] <icer> So I need to write a superclass specialization of initialize-instance?
[05:04:28] <Bike> well, depends on what you're doing. your example here is pretty abstract. most programmers never write initialize-instance methods, i bet.
[05:06:36] <icer> As an example, some of my objects are items with positions in displayed list.  They have position values.  As a collection, the need to be manipulated together, ensuring a list with a valid order and operations preserving it.
[05:07:51] <icer> I thought to pull that slot, position, into a superclass, positionable-object, which would be contained in a positional-collection.
[05:09:06] <icer> There are different places with positonal collections of different types, but they follow the same positional and manipulation rules.
[05:09:47] <Bike> so you have positionable-object and a subclass of it. you do (make-instance subclass :position whatever ...other initargs specific to the subclass...)
[05:10:01] <icer> yes
[05:10:32] <Bike> the definition of the subclass does not need to refer to the position slot at all, or mention it in methods specific to the subclass (unless of course they use the position)
[05:11:09] <icer> correct
[05:11:46] <jeosol> _death: Thanks for the info
[05:12:01] <Bike> so, if you're using make-instance rather than a special make-subclass function, i don't see a problem
[05:13:53] <Bike> with positional arguments to a constructor it's hard to make it work with inheritance, especially given multiple inheritance. keyword arguments keep things apart a little more
[05:15:18] <icer> I can ditch the constructor.  I was just trying to follow the Keene textbook lisp way to start with.
[05:16:00] *** Quits: karlosz (~karlosz@47.180.55.252) (Quit: karlosz)
[05:16:21] <Bike> mm. i haven't read keene, and don't really know about its particular choices
[05:16:47] <_death> icer: the advice in Keene is better suited for when you want to hide the fact that you're using CLOS
[05:16:50] <Bike> i might use a positional constructor like that if i'm confident there aren't going to be subclasses
[05:17:02] <Bike> which, yeah, that would be the case if i export the constructor but not the class itself
[05:17:16] <icer> I actually get the arguments in an alist, and some objects have enough fields to make my fingers sore.
[05:18:41] <Bike> (apply #'make-instance (alist-to-plist alist)) might help?
[05:20:26] <icer> Aha! That might do it.
[05:22:15] <icer> Or at least get me on the right track.  Thanks.
[05:23:14] <icer> _death: is there a better resource/method for learning CLOS?
[05:25:46] <_death> icer: Keene is a good introduction.. and PCL is good as well
[05:26:48] <_death> icer: there are also some papers you may find interesting in https://www.dreamsongs.com/CLOS.html
[05:29:35] <_death> icer: by "advice" I meant the advice to introduce make-xxx operators rather than use make-instance
[05:29:54] <icer> _death: Thanks! I'll read them.  I read the PCL chapters and am halfway through Keene, probably missing the part that explains everything.... :)
[05:30:35] <mfiano> I must say that AMOP has a very good overview of CLOS in its introduction
[05:30:45] <mfiano> One of the best I've seen actually.
[05:31:29] <mfiano> No wait
[05:32:14] <mfiano> Not AMOP. The Paepke book
[05:32:48] <_death> icer: the book Art of the Metaobject Protocol taught me that CLOS is "simple" (in the same sense that git is "simple"), that is, the "core ideas" are simple
[05:32:53] <mfiano> "Object-Oriented Programming: The CLOS Perspective"
[05:33:01] <mfiano> Very good CLOS introduction
[05:33:16] <_death> mfiano: it's available on the page I linked
[05:33:23] <mfiano> Good :)
[05:35:06] <moon-child> '"core ideas" are simple'  as is the case for most good models
[05:39:11] <icer> I've been enjoying learning and working with CL so far.
[05:39:49] <mfiano> Good. Just realize that it's an interactive language.
[05:40:55] <mfiano> Throwing that out there to save me a couple days of help. I found out yesterday that someone I was helping for 2 days refuses to use anything but Notepad++ with a full compile/run cycle.
[05:43:49] <icer> I love the REPL.  After decades of vi, I'm learning emacs (and SLIME).
[05:44:35] <mfiano> Well most language have a REPL, but they don't have an interactive debugger with restarts, or a metacircular evaluator :)
[05:44:39] <icer> I love that I can hit M-. and dive all the way into the language source.
[05:44:55] <mfiano> :)
[05:45:56] *** Quits: semz (~none@user/semz) (Ping timeout: 245 seconds)
[05:46:33] <icer> Yep. The debugger has been a real help, especially the fancy tools to look through the stack, and to tweak/test on the fly.
[05:47:13] <mfiano> I'm glad you are using the important introspective features.
[05:47:25] <_death> RMS once noted that these languages don't have a REPL, as they lack READ, EVAL, and PRINT..
[05:47:44] <mfiano> :)
[05:50:32] <White_Flame> they surely have PRINT
[05:50:52] <White_Flame> so it's a PL, and every other language is Perl
[05:51:07] <White_Flame> (or prolog, but we're not going to give them that much credit)
[05:52:53] *** Joins: karlosz (~karlosz@12.196.174.98)
[05:54:12] <_death> I'm guessing that he includes pretty-printing in his definition of PRINT
[05:55:48] <White_Flame> ah, could be
[05:57:42] <_death> https://stallman.org/stallman-computing.html Programming Languages section.. this was also mentioned last year on emacs-devel
[06:03:32] *** Joins: semz (~none@user/semz)
[06:04:12] <mfiano> Good, I feel relieved.
[06:04:33] <mfiano> I thought I was the only one that spends most of my time outside of X on a text console.
[06:04:53] *** Joins: asarch (~asarch@2806:10ae:7:ebe7:a74d:7c25:b79e:678c)
[06:04:58] <asarch> 147266
[06:07:19] *** Quits: prxq (~quassel@x4db53858.dyn.telefonica.de) (Ping timeout: 252 seconds)
[06:07:27] *** Joins: prxq_ (~quassel@x4dbd87f5.dyn.telefonica.de)
[06:13:09] *** beach` is now known as beach
[06:13:19] *** ChanServ sets mode: +o beach
[06:17:09] <asarch> Guten Tag, Herr Beach. Wie geht es ihnen? :-)
[06:27:28] *** beach sets mode: -o beach
[06:32:24] <beach> Good morning everyone!
[06:34:02] <beach> asarch: Guten Morgen.  Es geht gut, danke.  Nur, auf Deutch, ich heisse Herr Ufer.
[06:34:31] <asarch> Yeah! o/
[06:38:19] <beach> We have had a few productive SICL days.  Duuqnd and others implemented RANDOM using several algorithms.  We can generate "assembly" code for all code loaded during bootstrapping, but we can't "assemble" it quite yet, because some instructions are missing in the assembler, and there are of course defects that need to be fixed.
[06:39:09] <beach> I started work on implementing system calls so that we can read and write stuff.
[06:54:06] *** Quits: doyougnu (~user@c-73-25-202-122.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[06:58:08] <jeosol> what language is that above?
[06:58:33] <jeosol> Morning beach
[06:58:45] *** Joins: vats (~vats@103.70.83.52)
[06:58:58] <beach> German.
[06:59:11] <jeosol> I almost wanted to guess, not certain
[06:59:28] <jeosol> Seeing Deutch as one of the words
[07:00:57] <jeosol> beach: is the random module implemented with Mersenne Twister algorithm, got an update for that one
[07:01:31] <beach> That's one of the algorithms.  Duuqnd would know more.
[07:01:55] <jeosol> Cool. Progress is going across several fronts
[07:02:12] <beach> Indeed.
[07:04:55] <asarch> For Common Lisp?
[07:05:30] <beach> I think jeosol meant for SICL.
[07:05:55] <jeosol> Oh, I was referring to beach's project: SICL
[07:06:27] *** Parts: akoana (~ah@user/akoana) ()
[07:13:03] <beach> minion: Please tell asarch about SICL.
[07:13:04] <minion> asarch: SICL: SICL is a (perhaps futile) attempt to re-implement Common Lisp from scratch, hopefully using improved programming and bootstrapping techniques. See https://github.com/robert-strandh/SICL
[07:15:19] *** Joins: dstein64- (~dstein64@dannyadam.com)
[07:16:56] *** Quits: dstein64 (~dstein64@dannyadam.com) (Ping timeout: 246 seconds)
[07:16:56] *** dstein64- is now known as dstein64
[07:17:04] *** Quits: semz (~none@user/semz) (Ping timeout: 252 seconds)
[07:20:15] *** Quits: jealousmonk (~user@2804:431:e7c4:cbd0:1924:309c:6eaf:8e1b) (Quit: ERC (IRC client for Emacs 27.1))
[07:21:08] *** Quits: ryanbw (~ryanbw@mab.sdf.org) (Quit: I'll be back.)
[07:21:28] *** Quits: Bike (~Glossina@71.69.170.70) (Quit: Lost terminal)
[07:30:37] *** Joins: semz (~none@user/semz)
[07:33:01] *** Joins: CptKirk (~CptKirk@70-57-27-195.hlrn.qwest.net)
[07:37:30] <asarch> Thank you!
[07:37:53] <asarch> What is its status?
[07:45:41] <beach> Most of the code is implemented, but we have a few things left of code generation and bootstrapping.
[07:46:26] <asarch> Can I use it as a replacement of SBCL?
[07:46:33] <beach> Not yet.
[07:46:56] <asarch> Oh
[07:49:28] *** Quits: ahlk (~user@2600:1700:31c0:3a10::48) (Remote host closed the connection)
[07:49:53] *** Joins: ahlk (~user@2600:1700:31c0:3a10::48)
[07:50:01] *** Quits: taiju (~taiju@m014013236064.v4.enabler.ne.jp) (Ping timeout: 252 seconds)
[07:54:09] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[07:55:15] *** Joins: hendursaga (~weechat@user/hendursaga)
[08:00:39] *** Joins: lisp123 (~lisp123@5.30.23.247)
[08:03:09] *** charles_ is now known as char
[08:07:38] <char> scymtym: Can trivial-with-current-source-form be used to better report errors and warning signaled by the compiler?
[08:16:42] *** Quits: scymtym (~user@ip-94-114-248-79.unity-media.net) (Ping timeout: 260 seconds)
[08:18:10] *** Quits: icer (eric@gateway/vpn/protonvpn/icer) (Quit: WeeChat 2.8)
[08:24:38] *** Quits: karlosz (~karlosz@12.196.174.98) (Ping timeout: 260 seconds)
[08:24:40] *** Joins: ryanbw (~ryanbw@mab.sdf.org)
[08:29:59] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[08:47:07] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[08:47:20] *** Joins: lisp123 (~lisp123@5.30.23.247)
[08:52:49] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Ping timeout: 268 seconds)
[08:53:55] *** Joins: amb007 (~a_bakic@147.148.22.93.rev.sfr.net)
[08:55:42] *** Joins: rgherdt (~rgherdt@2a02:8109:86c0:d8d:e473:ba5e:85e3:6828)
[08:56:36] <kagevf> CptKirk: one trick I use when writing something in slime is to leave off the very last closing parenthesis and then I can hit enter and tab to get indentation even in the repl and nothing will get eval'd until the final ) at the end of the expression is restored
[09:01:02] *** Quits: amb007 (~a_bakic@147.148.22.93.rev.sfr.net) (Read error: Connection reset by peer)
[09:01:29] <lisp123> kagevf: Have you tried using Ctrl-J in slime?
[09:01:41] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[09:02:15] <kagevf> lisp123: in the repl?
[09:02:27] <lisp123> Yes
[09:02:34] <kagevf> I've used it a bunch in *.lisp ...
[09:02:39] <kagevf> let me try it ...
[09:05:13] <kagevf> lisp123: ohhh, very cool! didn't know about that :) now I don't need that trick any more!!
[09:05:50] <lisp123> kagevf: :) I had the same issue (and still do sometimes, takes time to build muscle memory) - I have paredit enabled in my REPL too, its quite nice to have it everywhere
[09:06:16] <kagevf> I see ... I've just been using vanilla emacs/slime
[09:06:16] <lisp123> Now I am trying to learn EVIL mode and paredit at the same time, but its not 100% there yet (for me)
[09:07:02] <lisp123> Are you a VIM user before or Emacs first?
[09:07:55] <kagevf> actually vim ... when I first started learning emacs, I tried using spacemacs, but for me the vim keybindings were too slow, so I gave up EVIL and just went with vanilla keybindings
[09:08:14] <lisp123> oo you type fast then ;)
[09:08:31] <kagevf> maybe part that, maybe part slow connection :D
[09:08:57] <lisp123> Ah you are remote-ing into an Emacs session?
[09:08:57] <mfiano> Why C-j when you can instead maintain indentation?
[09:09:48] <kagevf> lisp123: I was at a conference and I had emacs running at home, and I wanted to learn org mode so that's the setup I used
[09:10:30] <lisp123> kagevf: Ah I see
[09:10:46] <lisp123> mfiano: C-j maintains indentation no?
[09:10:52] <kagevf> I think it's cool that no matter where you are in emacs the same keybindings (mostly) work  ... can't really say that about the EX part of vim (not sure of the correct name, it's like the vim version of the minibuffer)
[09:11:24] <kagevf> but in vim, q: and q/ are your friend :)
[09:11:29] <mfiano> No, but newline-and-indent does, especially if using aggressive-indent-mode (which you should)
[09:11:57] <lisp123> mfiano: Ah, I must have that turned on by default somewhere (or some package that does)
[09:12:29] <kagevf> when I played with C-j just now indentation seemed to be fine *shrug*
[09:12:48] <mfiano> aggressive-indent-mode will ensure your Lisp code is *always* indented according to SLIME/Sly.
[09:12:57] <mfiano> You'll never have to manually indent
[09:13:42] <lisp123> kagevf: If you are interested, here is my .emacs, I just went through an exercise to comment it out. Still some parts are not perfect, but overall its ok for EVIL / Paredit / Org users
[09:13:43] <lisp123> https://github.com/ashok-khanna/emacs-notes/blob/main/.emacs
[09:13:47] <mfiano> It is a third-party package though
[09:13:55] <Alfr> mfiano, lisp123 the newline command will also indent (the new and preceding line) when electric-indent-mode is enabled.
[09:14:09] <kagevf> lisp123: thanks, I'll check it out
[09:14:10] <lisp123> Alfr: That's it! I have that enabled
[09:14:31] <kagevf> lisp123: btw, this is a great guide to slime key-bindings: http://cl-cookbook.sourceforge.net/emacs-ide.html
[09:14:43] <mfiano> What is C-j for you lisp123 ?
[09:15:04] <lisp123> mfiano: (paredit-newline)
[09:15:08] <mfiano> For me it is electric-newline-and-maybe-indent, which will _only_ indent if electric is _disabled_
[09:15:37] <kagevf> for me C-j is (slime-repl-newline-and-indent)
[09:15:56] <mfiano> Oh I specifically do not use paredit since smartparens and cleverparens maintains structure and has additional structural editing commands
[09:16:19] <mfiano> It is paredit but more featureful and works for other languages too
[09:16:52] <lisp123> Nice
[09:17:32] <lisp123> kagevf: Great link thanks, will bookmark. Was using the SLIME manual until now
[09:17:45] <kagevf> lisp123: your .emacs has lots of interesting looking commands ... will have to through and try each one out ...
[09:18:25] <kagevf> lisp123: yeah, it's very nice what emacs/slime is capable of without even using any plugins
[09:18:59] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[09:19:02] <kagevf> at least when working with sexps
[09:19:04] <lisp123> kagevf: The main ones IMO are the keybindings on EVIL to allow one to make the best of both Emacs & EVIL binding (i.e. C-a, C-f, C-b, etc. during INSERT mode) and then some of the org mode settings for automatically inserting Lisp code blocks
[09:19:44] *** Joins: srhm (~srhm@user/srhm)
[09:19:54] <lisp123> kagevf: Yes, vanilla Emacs is already very powerful, which is why these third party packages can do so much on top of the default code
[09:20:40] <kagevf> yeah, having emacs keybindings in INSERT mode sounds nice ... I might give something like doom a shot one day, but I'm content ATM hehe
[09:21:15] <kagevf> almost forgot what it's like to not switch in and out of different modes all the time :D
[09:21:47] <kagevf> lisp123: > some of the org mode settings for automatically inserting Lisp code blocks
[09:22:03] <kagevf> lisp123: ... something besides <s-TAB?
[09:22:40] <lisp123> (defun lisp-mode-code-block ()   (interactive)  (org-insert-structure-template "src")  (insert "lisp")  (newline 3)  (goto-char (line-beginning-position 0)))
[09:24:13] *** Quits: asarch (~asarch@2806:10ae:7:ebe7:a74d:7c25:b79e:678c) (Quit: Leaving)
[09:26:03] <kagevf> alright ... I see them in your .emacs ... let me try them out
[09:27:19] *** Joins: yewscion (~yewscion@2601:547:a00:7720:91de:ceee:54c7:3b1b)
[09:32:27] *** Joins: karlosz (~karlosz@12.196.174.98)
[09:33:29] <kagevf> ok ...those are nice! :) I think the region on especially
[09:33:29] <kagevf> *one
[09:34:15] *** Joins: raeda__ (~raeda@72.49.219.33)
[09:34:48] *** Joins: hineios1 (~hineios@a95-93-142-124.cpe.netcabo.pt)
[09:35:01] *** Joins: iamFIREc1 (~iamFIREcr@user/iamfirecracker)
[09:35:11] *** Joins: morte (~mortemeur@pool-173-76-107-201.bstnma.fios.verizon.net)
[09:35:33] *** Joins: lucerne9 (~lucerne@ip202.ip-51-178-215.eu)
[09:35:38] *** Joins: mister_m` (~user@c-73-110-154-209.hsd1.il.comcast.net)
[09:35:43] *** Joins: madnificent_ (~madnifice@static.210.74.63.178.clients.your-server.de)
[09:35:54] *** Joins: danieli4 (~danieli@user/danieli)
[09:36:04] *** Joins: okflo_ (~okflo@lisa.diesenbacher.net)
[09:36:35] *** Joins: prxq (~quassel@x4dbd87f5.dyn.telefonica.de)
[09:36:47] *** Joins: katya (~mariari@user/mariari)
[09:37:05] *** Joins: charles_ (~charles@cpe-76-186-124-165.tx.res.rr.com)
[09:38:21] *** Joins: dstein64- (~dstein64@dannyadam.com)
[09:39:14] *** Joins: boro (~irc@user/borodust)
[09:40:42] <lisp123> kagevf: Welcome :)
[09:41:01] *** Joins: Shinmera- (~shinmera@shirakumo/shinmera)
[09:41:51] *** Joins: Demosthe1ex (~Demosthen@user/demosthenex)
[09:42:54] *** Joins: jackdani1l (~jack@turtleware.eu)
[09:44:18] *** Quits: dstein64 (~dstein64@dannyadam.com) (*.net *.split)
[09:44:18] *** Quits: prxq_ (~quassel@x4dbd87f5.dyn.telefonica.de) (*.net *.split)
[09:44:18] *** Quits: char (~charles@cpe-76-186-124-165.tx.res.rr.com) (*.net *.split)
[09:44:18] *** Quits: madnificent (~madnifice@static.210.74.63.178.clients.your-server.de) (*.net *.split)
[09:44:18] *** Quits: okflo (~okflo@lisa.diesenbacher.net) (*.net *.split)
[09:44:18] *** Quits: Shinmera (~shinmera@shirakumo/shinmera) (*.net *.split)
[09:44:19] *** Quits: defaultxr (~defaultxr@99-138-110-241.lightspeed.cicril.sbcglobal.net) (*.net *.split)
[09:44:19] *** Quits: iamFIREcracker (~iamFIREcr@user/iamfirecracker) (*.net *.split)
[09:44:19] *** Quits: mortemeur (~mortemeur@pool-173-76-107-201.bstnma.fios.verizon.net) (*.net *.split)
[09:44:19] *** Quits: terrorjack (~terrorjac@static.3.200.12.49.clients.your-server.de) (*.net *.split)
[09:44:19] *** Quits: amk (~amk@109.255.169.126) (*.net *.split)
[09:44:19] *** Quits: danieli (~danieli@user/danieli) (*.net *.split)
[09:44:19] *** Quits: gabc (~gabc@user/gabc) (*.net *.split)
[09:44:19] *** Quits: mariari (~mariari@user/mariari) (*.net *.split)
[09:44:19] *** Quits: raeda_ (~raeda@72.49.219.33) (*.net *.split)
[09:44:19] *** Quits: pieguy128 (~pieguy128@bas1-montreal02-65-92-163-194.dsl.bell.ca) (*.net *.split)
[09:44:20] *** Quits: hineios (~hineios@a95-93-142-124.cpe.netcabo.pt) (*.net *.split)
[09:44:20] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (*.net *.split)
[09:44:20] *** Quits: MetaYan (~MetaYan@c-7b5d235c.07-84-7462671.bbcust.telenor.se) (*.net *.split)
[09:44:20] *** Quits: borodust (~irc@user/borodust) (*.net *.split)
[09:44:20] *** Quits: kagevf (~jfh@ip68-224-125-162.lv.lv.cox.net) (*.net *.split)
[09:44:20] *** Quits: Demosthenex (~Demosthen@user/demosthenex) (*.net *.split)
[09:44:20] *** Quits: mister_m (~user@c-73-110-154-209.hsd1.il.comcast.net) (*.net *.split)
[09:44:20] *** Quits: jackdaniel (~jack@user/jackdaniel) (*.net *.split)
[09:44:20] *** dstein64- is now known as dstein64
[09:44:20] *** hineios1 is now known as hineios
[09:44:20] *** lucerne9 is now known as lucerne
[09:44:21] *** jdz_ is now known as jzd
[09:44:21] *** Shinmera- is now known as Shinmera
[09:44:21] *** danieli4 is now known as danieli
[09:44:24] *** jzd is now known as jdz
[09:45:23] *** Quits: specbot (~specbot@common-lisp.net) (Remote host closed the connection)
[09:45:24] *** Quits: minion (~minion@common-lisp.net) (Read error: Connection reset by peer)
[09:45:45] *** Joins: minion (~minion@common-lisp.net)
[09:45:45] *** Joins: specbot (~specbot@common-lisp.net)
[09:45:53] *** Joins: terrorjack (~terrorjac@static.3.200.12.49.clients.your-server.de)
[09:46:27] *** Joins: amk (~amk@109.255.169.126)
[09:46:27] *** Joins: defaultxr (~defaultxr@99-138-110-241.lightspeed.cicril.sbcglobal.net)
[09:46:27] *** Joins: pieguy128 (~pieguy128@bas1-montreal02-65-92-163-194.dsl.bell.ca)
[09:47:21] *** Joins: gabc (~gabc@user/gabc)
[09:48:30] *** Joins: kagevf (~jfh@ip68-224-125-162.lv.lv.cox.net)
[09:48:56] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Read error: Connection reset by peer)
[09:49:06] *** Quits: _death (~death@adeht.org) (Ping timeout: 250 seconds)
[09:50:23] *** Joins: adeht (~death@adeht.org)
[09:50:53] *** Joins: MetaYan (~MetaYan@c-7b5d235c.07-84-7462671.bbcust.telenor.se)
[09:54:11] *** Joins: amb007 (~a_bakic@147.148.22.93.rev.sfr.net)
[09:54:14] *** Quits: taiju (~taiju@M014013236064.v4.enabler.ne.jp) (Ping timeout: 260 seconds)
[09:54:24] *** Joins: taiju (~taiju@240b:253:ec40:2400:e069:cea0:b66b:350c)
[09:56:24] *** Quits: amk (~amk@109.255.169.126) (Ping timeout: 252 seconds)
[09:56:44] *** Quits: taiju (~taiju@240b:253:ec40:2400:e069:cea0:b66b:350c) (Read error: Connection reset by peer)
[09:57:01] *** Joins: amk (~amk@109.255.169.126)
[09:58:07] *** Joins: taiju (~taiju@240b:253:ec40:2400:e069:cea0:b66b:350c)
[09:58:18] *** Joins: gxt_ (~gxt@gateway/tor-sasl/gxt)
[09:58:20] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[10:04:17] *** Joins: shka (~herr@109.231.6.176)
[10:15:55] *** flip214_ is now known as flip214
[10:16:48] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[10:16:51] *** Quits: flip214 (~marek@h081217094109.dyn.cm.kabsi.at) (Changing host)
[10:16:51] *** Joins: flip214 (~marek@user/flip214)
[10:17:17] *** Joins: pve (~pve@188-67-254-14.bb.dnainternet.fi)
[10:19:54] *** Joins: pieguy128_ (~pieguy128@bras-base-mtrlpq5031w-grc-57-65-92-163-194.dsl.bell.ca)
[10:20:21] *** Joins: gaqwas (~john@dynamic-095-115-042-095.95.115.pool.telefonica.de)
[10:20:32] *** Quits: defaultxr (~defaultxr@99-138-110-241.lightspeed.cicril.sbcglobal.net) (Ping timeout: 252 seconds)
[10:20:38] *** Quits: pieguy128 (~pieguy128@bas1-montreal02-65-92-163-194.dsl.bell.ca) (Read error: Connection reset by peer)
[10:20:47] *** Joins: defaultxr (~defaultxr@99-138-110-241.lightspeed.cicril.sbcglobal.net)
[10:21:26] *** Quits: vats (~vats@103.70.83.52) (Remote host closed the connection)
[10:28:26] *** Joins: cranium (~cranium@user/cranium)
[10:30:15] *** Quits: amb007 (~a_bakic@147.148.22.93.rev.sfr.net) (Ping timeout: 265 seconds)
[10:30:56] *** Joins: amb007 (~a_bakic@156.147.204.77.rev.sfr.net)
[10:34:17] *** Joins: rotateq (~user@b2b-78-94-235-194.unitymedia.biz)
[10:41:21] *** Joins: Shinmera- (~shinmera@shirakumo/shinmera)
[10:42:09] *** jackdani1l is now known as jackdaniel
[10:42:17] *** Quits: Shinmera (~shinmera@shirakumo/shinmera) (Ping timeout: 252 seconds)
[10:42:19] *** Shinmera- is now known as Shinmera
[10:42:23] *** Quits: jackdaniel (~jack@turtleware.eu) (Changing host)
[10:42:23] *** Joins: jackdaniel (~jack@user/jackdaniel)
[10:42:23] *** ChanServ sets mode: +o jackdaniel
[10:47:11] *** Joins: slyrus__ (~slyrus@192-184-223-165.static.sonic.net)
[10:47:26] *** Quits: slyrus_ (~slyrus@192-184-223-165.static.sonic.net) (Read error: Connection reset by peer)
[10:47:38] *** Quits: abraham (~abraham@143.244.185.86) (Quit: Ping timeout (120 seconds))
[10:48:04] *** Joins: abraham (~abraham@143.244.185.86)
[10:49:21] *** Joins: andreyorst_ (~andreyors@2.92.125.242)
[10:49:41] *** Joins: skyl4rk` (~tlvb@user/tlvb)
[10:51:12] *** Quits: andreyorst (~andreyors@2.92.125.242) (Ping timeout: 252 seconds)
[10:51:12] *** Quits: skyl4rk (~tlvb@user/tlvb) (Ping timeout: 252 seconds)
[10:51:27] *** andreyorst_ is now known as andreyorst
[10:52:14] *** Quits: bldr_ (~bull@185.117.72.168) (Ping timeout: 252 seconds)
[10:52:15] *** Joins: childlikempress (~moon-chil@cardinal.elronnd.net)
[10:52:20] *** Joins: bldr (~bull@185.117.72.168)
[10:52:41] *** Quits: moon-child (~moon-chil@cardinal.elronnd.net) (Remote host closed the connection)
[10:52:59] *** childlikempress is now known as moon-child
[10:54:22] *** Joins: rdrg109_ (~rdrg109@51.195.232.80)
[10:54:49] *** Joins: samebchase9 (~thelounge@51.15.68.182)
[10:57:02] *** Quits: rdrg109 (~rdrg109@51.195.232.80) (Ping timeout: 252 seconds)
[10:57:03] *** Quits: samebchase (~thelounge@51.15.68.182) (Read error: Connection reset by peer)
[11:00:03] *** Quits: amb007 (~a_bakic@156.147.204.77.rev.sfr.net) (Read error: Connection reset by peer)
[11:02:32] *** Joins: sjl (~sjl@cpe-66-66-5-59.rochester.res.rr.com)
[11:03:39] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[11:04:43] *** Quits: sjl_ (~sjl@cpe-66-66-5-59.rochester.res.rr.com) (Ping timeout: 252 seconds)
[11:04:43] *** Quits: ck_ (~ck@plskthx.org) (Ping timeout: 252 seconds)
[11:04:43] *** Quits: MatrixTravelerbo (~voyagert2@2001:470:69fc:105::22) (Ping timeout: 252 seconds)
[11:06:27] *** Joins: MatrixTravelerb4 (~voyagert2@2001:470:69fc:105::22)
[11:09:16] *** Joins: ck_ (~ck@plskthx.org)
[11:12:44] *** Quits: mmk2410 (~mmk2410@user/mmk2410) (Ping timeout: 250 seconds)
[11:13:00] *** Joins: mmk2410 (~mmk2410@user/mmk2410)
[11:13:40] *** Quits: phadthai (mmondor@user/phadthai) (Ping timeout: 250 seconds)
[11:13:46] *** Joins: phadthai (mmondor@user/phadthai)
[11:15:17] *** Quits: dstein64 (~dstein64@dannyadam.com) (Ping timeout: 250 seconds)
[11:15:44] *** Joins: dstein64 (~dstein64@dannyadam.com)
[11:16:07] *** Joins: skn2 (~znc@sec.nimmagadda.net)
[11:16:28] *** Quits: skn (~znc@2001:19f0:5:701:5400:ff:fe7c:4e5c) (Ping timeout: 250 seconds)
[11:17:05] *** Quits: Skyfire (~pyon@user/pyon) (Ping timeout: 250 seconds)
[11:17:22] *** Joins: Skyfire (~pyon@user/pyon)
[11:23:46] *** Parts: pranavats (3fba1d1b34@jabberfr.org) ()
[11:24:44] *** Joins: kpoeck (~kpoeck@80.149.96.222)
[11:30:47] *** Quits: gaqwas (~john@dynamic-095-115-042-095.95.115.pool.telefonica.de) (Ping timeout: 240 seconds)
[11:35:25] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:39:03] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:45:20] *** Quits: Colleen (~fermion@supersolid.equilibrium.tymoon.eu) (Read error: Connection reset by peer)
[11:45:41] *** Quits: phantomics (~phantomic@71-33-148-118.hlrn.qwest.net) (Ping timeout: 250 seconds)
[11:45:50] *** Joins: Colleen (~fermion@supersolid.equilibrium.tymoon.eu)
[11:46:09] *** Joins: phantomics (~phantomic@71-33-148-118.hlrn.qwest.net)
[11:48:46] *** Quits: kpoeck (~kpoeck@80.149.96.222) (Ping timeout: 256 seconds)
[11:53:57] *** Joins: Cymew (~ante@c-e989225c.023-1144-7570702.bbcust.telenor.se)
[11:56:13] *** Joins: rgherdt_ (~rgherdt@2a02:8109:86c0:d8d:e473:ba5e:85e3:6828)
[11:56:30] *** Quits: rgherdt (~rgherdt@2a02:8109:86c0:d8d:e473:ba5e:85e3:6828) (Read error: Connection reset by peer)
[11:57:12] *** Joins: jcowan_ (sid325434@id-325434.ilkley.irccloud.com)
[11:57:47] *** Joins: selwyn (~selwyn@user/selwyn)
[11:58:48] *** Joins: griffinmb_ (sid410590@id-410590.helmsley.irccloud.com)
[11:58:58] *** Quits: jcowan (sid325434@id-325434.ilkley.irccloud.com) (Ping timeout: 252 seconds)
[11:58:58] *** Quits: griffinmb (sid410590@id-410590.helmsley.irccloud.com) (Ping timeout: 252 seconds)
[11:58:58] *** jcowan_ is now known as jcowan
[11:58:58] *** griffinmb_ is now known as griffinmb
[11:58:58] *** Joins: Inline (~Inline@2a02:908:1252:7a80:1feb:c0cd:e428:d19f)
[11:59:17] *** Quits: Shinmera (~shinmera@shirakumo/shinmera) (Remote host closed the connection)
[11:59:41] *** Joins: Shinmera (~shinmera@shirakumo/shinmera)
[12:00:29] *** Joins: kpoeck (~kpoeck@80.149.96.222)
[12:03:42] *** Quits: Inline (~Inline@2a02:908:1252:7a80:1feb:c0cd:e428:d19f) (Client Quit)
[12:06:41] *** Joins: dre (~dre@2001:8003:c932:c301:34d2:f449:f8cf:6e39)
[12:07:58] *** Quits: jeosol (~jeosol@76-238-186-228.lightspeed.hstntx.sbcglobal.net) (Quit: Ping timeout (120 seconds))
[12:10:49] *** Joins: zephyr6 (~alandiper@ec2-34-230-252-114.compute-1.amazonaws.com)
[12:10:55] *** Quits: ullbeking (sid5364@2a03:5180:f:3::14f4) (Ping timeout: 252 seconds)
[12:10:55] *** Quits: dbotton (sid492350@id-492350.lymington.irccloud.com) (Ping timeout: 252 seconds)
[12:10:55] *** Quits: zephyr (~alandiper@ec2-34-230-252-114.compute-1.amazonaws.com) (Read error: Connection reset by peer)
[12:10:56] *** zephyr6 is now known as zephyr
[12:11:11] *** Joins: ullbeking_ (sid5364@id-5364.ilkley.irccloud.com)
[12:11:54] *** Quits: karlosz (~karlosz@12.196.174.98) (Ping timeout: 260 seconds)
[12:12:03] *** Joins: splittist_ (sid17737@id-17737.tinside.irccloud.com)
[12:12:18] *** Joins: dbotton (sid492350@lymington.irccloud.com)
[12:12:27] *** Joins: Inline (~Inline@2a02:908:1252:7a80:1feb:c0cd:e428:d19f)
[12:12:29] *** Quits: splittist (sid17737@id-17737.tinside.irccloud.com) (Ping timeout: 252 seconds)
[12:12:30] *** Quits: OlCe (~user@lfbn-nic-1-565-28.w90-118.abo.wanadoo.fr) (Read error: Connection reset by peer)
[12:12:30] *** splittist_ is now known as splittist
[12:12:58] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[12:13:01] *** Quits: shka (~herr@109.231.6.176) (Remote host closed the connection)
[12:13:25] *** Joins: shka (~herr@109.231.6.176)
[12:13:28] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (Read error: Connection reset by peer)
[12:13:31] *** Quits: rotateq (~user@b2b-78-94-235-194.unitymedia.biz) (Ping timeout: 252 seconds)
[12:13:31] *** Quits: victor (sid208353@user/victor) (Ping timeout: 252 seconds)
[12:13:44] *** Joins: rotateq (~user@b2b-78-94-235-194.unitymedia.biz)
[12:14:35] *** Joins: greaser|q (greaser@antihype.space)
[12:14:38] *** Joins: victor (sid208353@user/victor)
[12:19:28] *** Quits: Nilby (~Nilby@2601:603:1481:30a0:82fa:5bff:fe66:4b49) (Ping timeout: 250 seconds)
[12:20:57] *** Joins: karlosz (~karlosz@12.196.174.98)
[12:21:34] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[12:22:26] *** Joins: lisp123 (~lisp123@5.30.23.247)
[12:25:45] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[12:27:13] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 252 seconds)
[12:28:00] *** Joins: Nilby (~Nilby@2601:603:1481:30a0:82fa:5bff:fe66:4b49)
[12:29:14] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[12:37:35] *** Quits: Colleen (~fermion@supersolid.equilibrium.tymoon.eu) (Read error: Connection reset by peer)
[12:38:26] *** Quits: phantomics (~phantomic@71-33-148-118.hlrn.qwest.net) (Ping timeout: 252 seconds)
[12:38:47] *** Joins: Colleen (~fermion@supersolid.equilibrium.tymoon.eu)
[12:40:48] *** Joins: phantomics (~phantomic@71-33-148-118.hlrn.qwest.net)
[12:41:49] *** Joins: lisp123 (~lisp123@5.30.23.247)
[12:42:36] *** Joins: OlCe (~user@lfbn-nic-1-565-28.w90-118.abo.wanadoo.fr)
[12:43:14] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[12:43:23] *** Joins: ck__ (~ck@plskthx.org)
[12:43:36] *** Joins: andreyorst_ (~andreyors@2.92.125.242)
[12:44:39] *** Quits: karlosz (~karlosz@12.196.174.98) (Read error: Connection reset by peer)
[12:44:39] *** Quits: abraham (~abraham@143.244.185.86) (Ping timeout: 252 seconds)
[12:44:39] *** Quits: ck_ (~ck@plskthx.org) (Ping timeout: 252 seconds)
[12:44:39] *** Quits: andreyorst (~andreyors@2.92.125.242) (Ping timeout: 252 seconds)
[12:44:49] *** Quits: moon-child (~moon-chil@cardinal.elronnd.net) (Ping timeout: 252 seconds)
[12:44:59] *** Joins: moon-child (~moon-chil@cardinal.elronnd.net)
[12:50:14] *** Quits: Inline (~Inline@2a02:908:1252:7a80:1feb:c0cd:e428:d19f) (Remote host closed the connection)
[12:50:24] *** Joins: cage (~cage@dynamic-adsl-84-220-249-98.clienti.tiscali.it)
[12:50:42] *** Joins: Inline (~Inline@2a02:908:1252:7a80:1feb:c0cd:e428:d19f)
[12:58:03] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[12:58:43] *** ck__ is now known as ck_
[12:59:47] *** Joins: scymtym (~user@2001:638:504:20e6:6ac3:87e0:e782:f3fc)
[13:05:22] *** Quits: kpoeck (~kpoeck@80.149.96.222) (Quit: Client closed)
[13:06:09] <scymtym> ::notify char trivial-with-current-source-form is for attaching particular source forms to errors that are signaled by macro expanders. i guess this is an improvement over attaching the whole form received by the expander and it is technically affecting conditions signaled by the compiler. i'm not sure whether that is what you were asking, though
[13:06:09] <Colleen> scymtym: Got it. I'll let char know as soon as possible.
[13:07:29] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:a063:3fb9:6ba2:bece)
[13:15:34] *** Quits: hendursa1 (~weechat@user/hendursaga) (Remote host closed the connection)
[13:19:06] *** Joins: hendursa1 (~weechat@user/hendursaga)
[13:21:43] *** Quits: mingus (~jan-magnu@ti0135a400-2471.bb.online.no) (Quit: Lost terminal)
[13:25:20] *** Joins: random-nick (~random-ni@87.116.165.220)
[13:30:53] <flip214> I've got (DEFCLASS STRACE-THREAD-DATA () ((ID :INITARG :ID :INITFORM NIL :READER STRACE-THREAD.ID :WRITER (SETF STRACE-THREAD.ID) :TYPE (OR NULL STRING))
[13:31:05] <flip214> and inspecting the class I can see   (STRACE-THREAD.ID STRACE-THREAD-DATA) Documentation: automatically generated reader method
[13:31:15] *** Parts: pranavats (3fba1d1b34@jabberfr.org) (Disconnected: Replaced by new connection)
[13:31:29] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[13:31:45] <flip214> but still, upon compiling I have   undefined function: STRACE-THREAD.FILE
[13:34:11] <flip214> Shouldn't the :READER option be enough to get the method defined?
[13:34:36] <beach> Not when the code is compiled.  Not until it is loaded.
[13:36:09] <flip214> well, the offending use is several files later in the ASDF, with :serial T
[13:36:40] <beach> That's different.  When the class definition is loaded, the generic functions should be defined.
[13:36:58] <jackdaniel> flip214: perhaps you should use eval-when to define the class (with readers) at the compilation time
[13:36:59] <beach> But why do you have a separate reader and writer, rather than an accessor?
[13:37:37] <beach> flip214: Er, wait .ID or .FILE?
[13:38:27] *** Joins: kpoeck (~kpoeck@80.149.96.222)
[13:38:29] <jackdaniel> that too
[13:40:02] <flip214> well, both - .ID and .FILE are reported as undefined
[13:40:18] <beach> Different packages?
[13:40:32] <flip214> separate reader and writer because that comes out of a macro....
[13:40:50] <beach> Did you try (apropos "strace-thread")?
[13:40:54] <flip214> perhaps
[13:40:58] <pjb> flip214: (eq 'strace-thread.id 'strace-thead.file)
[13:40:59] <flip214> investigating
[13:41:33] <pjb> flip214: it's better to paste the whole code. perhaps give a link to your github repo./
[13:41:36] *** Quits: Qwnavery (~Qwnavery@user/qwnavery) (Quit: WeeChat 3.3)
[13:41:54] <pjb> flip214:  or if it holds in a single file, http://ideone.com can be nice
[13:42:11] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 252 seconds)
[13:45:36] *** Quits: dre (~dre@2001:8003:c932:c301:34d2:f449:f8cf:6e39) (Remote host closed the connection)
[13:45:59] *** boro is now known as borodust
[13:50:23] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Ping timeout: 252 seconds)
[13:53:58] *** Joins: amb007 (~a_bakic@172.147.204.77.rev.sfr.net)
[14:02:36] *** Quits: tux0r (~tux0r@2a03:4000:34:5e:281e:e1ff:fe28:c3b5) (Ping timeout: 250 seconds)
[14:05:40] *** Joins: tux0r (~tux0r@rosaelefanten.org)
[14:05:48] *** Quits: dec0d3r (~dec0d3r@2001:8003:4810:9600:7275:1afb:1707:8eaa) (Remote host closed the connection)
[14:06:37] <flip214> thanks, found it... a slot name had the wrong package (mistakenly imported), then the macro created wrong symbols.
[14:07:17] <flip214> I still don't understand why the macro-expansion in swank didn't show the different packages on :reader and :writer
[14:07:36] <flip214> as these names were not imported but INTERNed
[14:07:37] *** Quits: amb007 (~a_bakic@172.147.204.77.rev.sfr.net) (Read error: Connection reset by peer)
[14:08:13] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[14:18:03] *** Quits: frgo (~frgo@p200300deef0cee00384c8c61d9900da9.dip0.t-ipconnect.de) (Remote host closed the connection)
[14:18:32] *** Joins: frgo (~frgo@p200300deef0cee001559b738248b8bd9.dip0.t-ipconnect.de)
[14:19:37] *** Quits: CptKirk (~CptKirk@70-57-27-195.hlrn.qwest.net) (Quit: Client closed)
[14:24:26] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[14:25:13] *** Demosthe1ex is now known as Demosthenex
[14:25:17] *** Quits: prxq (~quassel@x4dbd87f5.dyn.telefonica.de) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[14:25:23] *** Joins: notzmv (~zmv@user/notzmv)
[14:33:35] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[14:37:28] <Shinmera> etimmons: https://twitter.com/Shinmera/status/1443895133406171140 Here's a bit of a clearer picture from the one posted yesterday. The actual commands to execute the plan (in this case, just printing some stuff) are done on the client, as advertised.
[14:40:37] *** Quits: igemnace (~ian@user/igemnace) (Ping timeout: 268 seconds)
[14:51:40] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[14:53:17] <pjb> flip214: when you print a symbol, if it's present in the current package, it won't be qualified.
[14:54:15] <pjb> flip214: try with: (let ((*package* (make-package (prin1-to-string(random (expt 2 128))) :use '()))) (pprint (macroexpand-1 '…)))
[15:05:19] <flip214> pjb: my DEFCLASS line above doesn't show any package qualifiers - that's why I'm wondering... that's from a swank macroexpand
[15:08:25] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[15:10:07] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 240 seconds)
[15:10:32] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[15:11:03] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[15:11:58] <flip214> and swank returns a string, so it can't even be a bug in vlime or so
[15:12:49] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 252 seconds)
[15:13:14] <mfiano> We didn't see the responsible code that was requested yet
[15:14:11] *** Joins: khrbt (~znc@user/khrbt)
[15:16:58] *** Joins: mortemeur (~mortemeur@pool-173-76-107-201.bstnma.fios.verizon.net)
[15:18:42] *** Joins: selwyn (~selwyn@user/selwyn)
[15:18:59] *** Quits: morte (~mortemeur@pool-173-76-107-201.bstnma.fios.verizon.net) (Ping timeout: 250 seconds)
[15:19:48] *** Joins: morte (~mortemeur@pool-173-76-107-201.bstnma.fios.verizon.net)
[15:20:17] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[15:21:34] *** Quits: mortemeur (~mortemeur@pool-173-76-107-201.bstnma.fios.verizon.net) (Ping timeout: 252 seconds)
[15:30:53] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 265 seconds)
[15:31:17] *** Joins: Mandus (~aasmundo@85.112.154.250)
[15:42:13] <pjb> flip214: I know. I and gave you the code to show the package qualifier.
[15:50:46] *** Joins: dec0d3r (~dec0d3r@2001:8003:4810:9600:7275:1afb:1707:8eaa)
[16:02:34] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[16:09:38] *** Quits: Inline (~Inline@2a02:908:1252:7a80:1feb:c0cd:e428:d19f) (Quit: Leaving)
[16:16:14] *** Joins: prxq (~quassel@x4dbd87f5.dyn.telefonica.de)
[16:20:12] *** Quits: kpoeck (~kpoeck@80.149.96.222) (Ping timeout: 256 seconds)
[16:24:59] *** Joins: Bike (~Glossina@71.69.170.70)
[16:24:59] *** ChanServ sets mode: +o Bike
[16:25:47] *** Joins: jeosol (~jeosol@76-238-186-228.lightspeed.hstntx.sbcglobal.net)
[16:26:19] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[16:28:11] *** Joins: selwyn (~selwyn@user/selwyn)
[16:29:06] *** Joins: Inline (~Inline@2a02:908:1252:7a80:1feb:c0cd:e428:d19f)
[16:37:57] *** Joins: yewscion_ (~yewscion@2604:ca00:148:422a::1060:2552)
[16:41:10] *** Quits: yewscion (~yewscion@2601:547:a00:7720:91de:ceee:54c7:3b1b) (Ping timeout: 260 seconds)
[16:42:35] *** Quits: Mandus (~aasmundo@85.112.154.250) (Ping timeout: 252 seconds)
[16:44:35] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[16:44:37] *** Joins: paule32 (~paule32@user/paule32)
[16:44:44] <paule32> hello
[16:44:57] <paule32> i download emacs + slime for windows 10
[16:45:06] <paule32> how can i install slime ?
[16:45:08] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[16:45:52] *** Joins: srhm (~srhm@user/srhm)
[16:47:47] <jackdaniel> it is literally linked on the slime's website
[16:47:55] <jackdaniel> https://www.youtube.com/watch?v=VnWVu8VVDbI
[16:48:24] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Remote host closed the connection)
[16:48:45] <jackdaniel> luis`: it may be a good idea to update the IRC part on the slime website (it still points at freenode)
[16:48:45] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[16:53:24] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[16:54:07] *** Quits: Nilby (~Nilby@2601:603:1481:30a0:82fa:5bff:fe66:4b49) (Ping timeout: 252 seconds)
[16:57:25] *** Joins: zazzerino (~user@2600:1700:6004:8470::13)
[17:08:07] *** Joins: Josh_2 (~user@37.25.47.130)
[17:11:01] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 252 seconds)
[17:11:24] *** Joins: Mandus (~aasmundo@85.112.154.250)
[17:18:39] <Josh_2> Good afternoon
[17:19:11] *** Joins: kpoeck (~kpoeck@80.149.96.222)
[17:29:52] *** Quits: rotateq (~user@b2b-78-94-235-194.unitymedia.biz) (Quit: ERC (IRC client for Emacs 26.3))
[17:31:28] *** Quits: Cymew (~ante@c-e989225c.023-1144-7570702.bbcust.telenor.se) (Ping timeout: 250 seconds)
[17:38:22] *** Parts: paule32 (~paule32@user/paule32) (Leaving)
[17:44:09] <jcowan> beach: I am not facile with German, but "Ich heisse Herr Ufer" seems weird to me.  Titles are not names, and "My name is Mr. Beach" in English is an explicit claim of superiority, situational or permanent, or else a claim of equality to someone who sees you as their inferior.
[17:45:45] <beach> Thanks.
[17:46:08] *** Joins: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca)
[17:46:10] <jcowan> But I may not know what I am talking about.
[17:47:55] *** Quits: Mandus (~aasmundo@85.112.154.250) (Ping timeout: 252 seconds)
[17:49:36] *** Joins: jealousmonk (~user@2804:431:e7c4:cbd0:1924:309c:6eaf:8e1b)
[17:49:54] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[18:01:14] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 252 seconds)
[18:01:38] *** Joins: Mandus (~aasmundo@85.112.154.250)
[18:05:55] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Quit: ec)
[18:06:51] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:a063:3fb9:6ba2:bece) (Remote host closed the connection)
[18:10:39] *** Joins: Psybur (~Psybur@mobile-166-170-32-197.mycingular.net)
[18:13:23] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[18:13:46] *** Joins: hendursaga (~weechat@user/hendursaga)
[18:23:07] *** Quits: Mandus (~aasmundo@85.112.154.250) (Ping timeout: 252 seconds)
[18:23:57] *** Quits: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[18:25:40] *** Joins: Mandus (~aasmundo@85.112.154.250)
[18:29:22] *** Joins: jkordani (~jkordani@c-69-255-2-251.hsd1.md.comcast.net)
[18:32:13] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[18:32:53] *** Joins: srhm (~srhm@user/srhm)
[18:34:11] *** Quits: Mandus (~aasmundo@85.112.154.250) (Ping timeout: 252 seconds)
[18:36:00] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[18:37:06] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (Client Quit)
[18:42:05] *** Quits: cranium (~cranium@user/cranium) (Quit: Leaving)
[18:52:13] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[18:57:45] *** Joins: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca)
[19:05:15] *** Quits: jkordani (~jkordani@c-69-255-2-251.hsd1.md.comcast.net) (Quit: Client closed)
[19:14:30] *** Joins: CptKirk (~CptKirk@70-57-27-195.hlrn.qwest.net)
[19:14:48] <copec> ^A motto I live by
[19:18:36] *** Quits: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[19:20:55] *** Quits: kpoeck (~kpoeck@80.149.96.222) (Quit: Client closed)
[19:23:01] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 252 seconds)
[19:29:28] *** Joins: jkordani (~jkordani@c-69-255-2-251.hsd1.md.comcast.net)
[19:32:28] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[19:48:32] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[20:00:36] *** Quits: CptKirk (~CptKirk@70-57-27-195.hlrn.qwest.net) (Quit: Client closed)
[20:02:00] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[20:06:29] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[20:07:58] *** Joins: amb007 (~a_bakic@172.147.204.77.rev.sfr.net)
[20:11:10] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[20:13:46] *** Joins: CptKirk (~CptKirk@70-57-27-195.hlrn.qwest.net)
[20:33:25] *** Quits: amb007 (~a_bakic@172.147.204.77.rev.sfr.net) (Ping timeout: 252 seconds)
[20:34:23] *** Joins: amb007 (~a_bakic@244.148.22.93.rev.sfr.net)
[20:39:40] *** Joins: mingus (~jan-magnu@ti0135a400-2471.bb.online.no)
[20:51:30] *** Joins: lisp123 (~lisp123@5.30.23.247)
[20:52:24] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[20:54:42] <jmercouris> jcowan: doesn't seem weird to me as a German speaker
[20:55:27] <jmercouris> "Ich heisse Herr Strandh" is certainly not claiming superiority, it is simply fact...
[20:55:39] <lisp123> If I'm writing a test-system for an asdf-system, can I load my main system as a dependency (depends-on) for my test system?
[20:55:50] <jmercouris> lisp123: yes
[20:56:00] <jmercouris> that is exactly what we do in Nyxt
[20:56:59] <lisp123> jmercouris: Thanks, I"m getting some errors so must be something else
[21:00:46] <jmercouris> lisp123: https://github.com/atlas-engineer/nyxt/blob/fa844b3a5c498aa24cbfd53c878b68b8e4c332cb/nyxt.asd#L196
[21:01:00] <jmercouris> as you see, the test system depends on the 'main' system
[21:01:09] <jmercouris> so indeed, probably something else is going awry :-)
[21:02:20] <lisp123> jmercouris: Thanks :)
[21:04:06] <lisp123> jmercouris: Do you ship a CL Implementation with Nyxt?
[21:04:28] <jmercouris> lisp123: not sure what you are asking, but Nyxt is a SBCL image
[21:04:36] <jmercouris> well, it could be other things of course, but typically CCL
[21:04:41] <jmercouris> and you have full access to it at run time
[21:05:03] <jmercouris> s/CCL/SBCL
[21:05:04] <lisp123> Ah nice, yes that's what I was wondering
[21:05:15] <jmercouris> yeah, so you can do literally anything
[21:05:42] <lisp123> So there's a good chance an IDE can be developed out of it eventually
[21:05:50] <jmercouris> that's correct, and that is in the cards
[21:06:10] <lisp123> although converting some of Emacs features will take time (as the difficulties faced by other IDEs show)
[21:07:21] <jmercouris> yes, but we'll have the advantage of Slime
[21:07:26] <jmercouris> or rather Swank
[21:07:38] *** Quits: amb007 (~a_bakic@244.148.22.93.rev.sfr.net) (Ping timeout: 252 seconds)
[21:07:39] <jmercouris> provides all of the features of a 'lsp'
[21:07:56] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[21:09:07] <lisp123> Nice
[21:12:29] <jcowan> jmercouris: Thanks for the heads-up
[21:15:31] <jmercouris> jcowan: so here is the thing though, it does sound a bit odd, typically one would say "ich bin DER HERR xyz"
[21:15:39] <jmercouris> I am "the Mr xyz"
[21:16:02] <jmercouris> jcowan: beach is not a native german speaker, so these kinds of quirks are expected :-)
[21:16:26] <jcowan> (What German I learned came from my mother, who was born in 1919 on the Hesse-Thuringia border, brought up mostly by her grandfather and her aunts,  and moved to the U.S. in 1932 for economic reasons.  Our family life was in English, but her professional life was mostly in German.  As a consequence I have many archaic features, notably pronouncing all /r/ except final -er.)
[21:16:26] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Ping timeout: 252 seconds)
[21:16:45] <jmercouris> well actually I take it back, you MIGHT use "der" depending on where in Germany you are, for example in West Germany they will use 'the' before a name, but not in North Eastern Germany...
[21:16:46] *** Joins: doyougnu (~user@c-73-25-202-122.hsd1.or.comcast.net)
[21:17:12] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[21:17:16] <jmercouris> I see, I am only familiar with modern German from Berlin, as ick bin ein Berliner
[21:17:23] <jcowan> And always in the South/AT/CH
[21:18:04] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[21:19:07] <jcowan> My mother spoke only Standard German and not the local dialect at all.
[21:23:35] *** Joins: makomo (~makomo@user/makomo)
[21:24:11] <jcowan> Old Berlinerisch shibboleth: "eene jut jebratne Jans ist eene jute Jabe Jottes!"
[21:24:29] *** Joins: lotuseater (~user@p200300e78715be00e2e5898694cab6cd.dip0.t-ipconnect.de)
[21:26:37] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Remote host closed the connection)
[21:26:46] *** Quits: makomo (~makomo@user/makomo) (Client Quit)
[21:27:04] *** Joins: makomo (~makomo@user/makomo)
[21:30:15] <Alfr> jmercouris, are you sure? You just declared to be jam filled fried dough.
[21:30:53] <jmercouris> Alfr: nein, ick bin keen pfannkuchen
[21:31:58] *** Joins: kpoeck (~kpoeck@80.149.96.222)
[21:32:12] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[21:32:46] <Alfr> jmercouris, admittedly it depends on where you're declaring this. ;)
[21:33:42] *** Quits: kpoeck (~kpoeck@80.149.96.222) (Client Quit)
[21:33:56] *** Joins: CptKirk16 (~CptKirk@70-57-27-195.hlrn.qwest.net)
[21:34:42] *** Quits: CptKirk (~CptKirk@70-57-27-195.hlrn.qwest.net) (Ping timeout: 256 seconds)
[21:37:13] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Ping timeout: 252 seconds)
[21:47:51] <nick3000> Is CLOCC still alive? I see it mentioned all over but it's not in quicklisp and there are more than a few broken links on webpages referencing it.
[21:48:01] <nick3000> It looks like a neat library though.
[21:51:50] <lisp123> https://sourceforge.net/projects/clocc/
[21:52:21] <lisp123> Seems like there is a download link there
[21:52:54] <lotuseater> jmercouris: and a berliner?
[22:04:00] <pjb> nick3000: you'd have to write an asd file for it, and ask for it to be included in quicklisp ;-)
[22:06:06] <pjb> nick3000: See also: https://github.com/blindglobe/clocc
[22:07:24] *** Joins: X-Scale` (~ARM@50.77.166.178.rev.vodafone.pt)
[22:07:42] *** Quits: X-Scale (~ARM@46.50.4.85) (Ping timeout: 265 seconds)
[22:08:39] *** Joins: gaqwas (~john@dynamic-095-115-042-095.95.115.pool.telefonica.de)
[22:09:12] *** X-Scale` is now known as X-Scale
[22:12:28] *** Quits: zazzerino (~user@2600:1700:6004:8470::13) (Ping timeout: 252 seconds)
[22:21:21] *** Joins: tyson2 (~user@72.142.96.152)
[22:33:56] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 246 seconds)
[22:35:51] *** Joins: aeth (~aeth@user/aeth)
[22:48:46] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Read error: Connection reset by peer)
[22:49:01] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[22:50:30] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[23:20:45] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Remote host closed the connection)
[23:22:43] *** Joins: khrbt (~znc@user/khrbt)
[23:31:40] *** Quits: scymtym (~user@2001:638:504:20e6:6ac3:87e0:e782:f3fc) (Ping timeout: 252 seconds)
[23:39:14] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[23:54:08] <luis> jackdaniel: I've updated the IRC link on SLIME's homepage. Thanks for the heads up.
[23:54:34] *** Joins: lottaquestions (~nick@2607:fa49:503e:3000:4dca:d3cb:8926:bf89)
[23:54:52] *** Quits: tyson2 (~user@72.142.96.152) (Quit: ERC (IRC client for Emacs 27.2))
[23:55:22] *** Quits: Inline (~Inline@2a02:908:1252:7a80:1feb:c0cd:e428:d19f) (Remote host closed the connection)
[23:55:49] *** Joins: scymtym (~user@ip-94-114-248-79.unity-media.net)
