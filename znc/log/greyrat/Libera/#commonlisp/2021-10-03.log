[00:02:00] *** Joins: NeoCron (~NeoCron@p200300c4cf383d002d40c41e1edf7d71.dip0.t-ipconnect.de)
[00:02:05] *** Joins: Guest8010 (~Guest80@broadband-188-32-20-92.ip.moscow.rt.ru)
[00:02:52] *** Parts: Guest8010 (~Guest80@broadband-188-32-20-92.ip.moscow.rt.ru) ()
[00:06:09] *** Joins: wilfred (uid159@id-159.uxbridge.irccloud.com)
[00:07:57] *** Joins: lisp123 (~lisp123@5.30.23.247)
[00:16:30] *** Joins: akoana (~ah@user/akoana)
[00:26:28] *** ullbeking_ is now known as ullbeking
[00:27:24] *** Quits: cage (~cage@dynamic-adsl-84-220-249-98.clienti.tiscali.it) (Quit: rcirc on GNU Emacs 27.1)
[00:28:21] *** Quits: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[00:29:12] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[00:37:36] *** Joins: Lycurgus (~juan@98.4.112.204)
[00:43:19] *** Joins: CptKirk (~CptKirk@70-57-27-195.hlrn.qwest.net)
[00:45:19] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[00:46:52] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[00:47:21] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[00:48:23] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[00:58:07] *** Joins: lisp123 (~lisp123@5.30.23.247)
[01:09:01] *** Quits: ullbeking (sid5364@id-5364.ilkley.irccloud.com) (Quit: Updating details, brb)
[01:09:24] *** Joins: ullbeking (sid5364@id-5364.ilkley.irccloud.com)
[01:10:08] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 252 seconds)
[01:13:16] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[01:16:46] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[01:17:19] *** Server sets mode: +Ccntz 
[01:33:25] *** Quits: jealousmonk (~user@2804:431:e7c4:cbd0:1924:309c:6eaf:8e1b) (Quit: ERC (IRC client for Emacs 27.1))
[01:36:01] *** adeht is now known as _death
[01:36:53] *** Joins: dra (~dra@2a04:4540:640b:a300:e522:3040:cdfb:9cf5)
[01:36:58] <pve> Shinmera: I decided to try to make the when-packages thing. This is what I got so far:
[01:37:01] <pve> https://github.com/pve1/eclector-access/blob/master/examples/when-packages-test.lisp
[01:37:37] <Shinmera> neat!
[01:37:39] <pve> I guess it's cheating, but it's the best I could do :(
[01:38:05] <Shinmera> yeah having something that compiles a bit more would be good.
[01:41:39] *** kakuhen_ is now known as kakuhen
[01:42:05] *** Quits: thmprover (~user@047-042-215-236.res.spectrum.com) (Quit: For He Was Great of Heart)
[01:44:55] <pve> I guess that would require a code walker?
[01:48:24] *** Quits: nick3000 (~user@2001:558:6040:1b:80cd:f8bf:5142:2cb0) (Read error: Connection reset by peer)
[01:50:39] *** Joins: nick3000 (~user@2001:558:6040:1b:80cd:f8bf:5142:2cb0)
[01:50:39] *** Quits: nick3000 (~user@2001:558:6040:1b:80cd:f8bf:5142:2cb0) (Read error: Connection reset by peer)
[01:50:46] *** Joins: nick3000 (~user@2001:558:6040:1b:80cd:f8bf:5142:2cb0)
[01:56:18] *** Quits: nick3000 (~user@2001:558:6040:1b:80cd:f8bf:5142:2cb0) (Remote host closed the connection)
[01:57:44] *** Quits: lisp123 (~lisp123@5.30.23.247) (Quit: Leaving...)
[01:58:58] *** Quits: shka (~herr@109.231.6.176) (Ping timeout: 260 seconds)
[02:03:26] *** Joins: molson (~molson@2001-48F8-704A-CA1-0-0-75F-1006-static.midco.net)
[02:15:08] *** Quits: frgo (~frgo@p200300deef0cee00f4a0cd8da82a201b.dip0.t-ipconnect.de) (Remote host closed the connection)
[02:15:35] *** Joins: frgo (~frgo@p200300deef0cee00f4a0cd8da82a201b.dip0.t-ipconnect.de)
[02:15:46] *** Quits: wilfred (uid159@id-159.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[02:16:39] *** Quits: pve (~pve@176-93-111-128.bb.dnainternet.fi) (Quit: leaving)
[02:20:48] *** Joins: dec0d3r (~dec0d3r@2001:8003:4810:9600:7275:1afb:1707:8eaa)
[02:25:11] *** Quits: ullbeking (sid5364@id-5364.ilkley.irccloud.com) (Changing host)
[02:25:11] *** Joins: ullbeking (sid5364@user/ullbeking)
[02:39:24] *** Quits: dec0d3r (~dec0d3r@2001:8003:4810:9600:7275:1afb:1707:8eaa) (Remote host closed the connection)
[02:41:49] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 252 seconds)
[02:50:52] *** Quits: dra (~dra@2a04:4540:640b:a300:e522:3040:cdfb:9cf5) (Ping timeout: 250 seconds)
[02:55:04] *** Quits: X-Scale (~ARM@83.223.242.77) (Ping timeout: 252 seconds)
[02:57:34] *** Joins: X-Scale` (~ARM@50.77.166.178.rev.vodafone.pt)
[03:03:07] *** Noisytoot is now known as GPLv3
[03:10:58] *** Quits: karlosz (~karlosz@12.196.174.98) (Ping timeout: 252 seconds)
[03:13:10] *** Quits: rgherdt_ (~rgherdt@2a02:8109:86c0:d8d:e473:ba5e:85e3:6828) (Ping timeout: 260 seconds)
[03:28:53] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[03:40:17] *** Joins: cyberbanjo (~user@2607:fb90:4251:ffb6:1059:2a08:5fed:6000)
[03:56:07] *** Quits: gaqwas (~john@dynamic-095-117-116-025.95.117.pool.telefonica.de) (Ping timeout: 252 seconds)
[03:58:55] *** Quits: NeoCron (~NeoCron@p200300c4cf383d002d40c41e1edf7d71.dip0.t-ipconnect.de) (Quit: Leaving)
[04:01:00] *** Joins: igemnace (~ian@user/igemnace)
[04:08:03] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[04:10:44] *** GPLv3 is now known as Noisytoot
[04:10:55] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[04:13:10] *** Quits: random-nick (~random-ni@87.116.165.220) (Ping timeout: 252 seconds)
[04:19:46] *** Quits: taiju (~taiju@240b:253:ec40:2400:e069:cea0:b66b:350c) (Ping timeout: 252 seconds)
[04:41:41] *** Joins: Qwnavery (~Qwnavery@user/qwnavery)
[04:48:50] *** Joins: karlosz (~karlosz@12.196.174.98)
[05:07:09] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[05:11:58] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 252 seconds)
[05:16:57] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[05:18:19] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[05:19:08] *** Quits: taiju (~taiju@M014013236064.v4.enabler.ne.jp) (Ping timeout: 246 seconds)
[05:24:53] *** Joins: Josh_2 (~user@37.25.47.130)
[05:30:03] *** Quits: sander (~sander@user/sander) (Quit: So long! :))
[05:31:22] *** Joins: sander (~sander@user/sander)
[05:37:00] *** Joins: taiju (~taiju@240b:253:ec40:2400:e069:cea0:b66b:350c)
[05:43:14] *** Quits: gxt_ (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[05:43:38] *** Joins: gxt_ (~gxt@gateway/tor-sasl/gxt)
[05:47:14] *** Quits: karlosz (~karlosz@12.196.174.98) (Ping timeout: 250 seconds)
[05:47:51] *** Quits: Qwnavery (~Qwnavery@user/qwnavery) (Quit: WeeChat 3.3)
[05:51:02] *** Joins: Devon (~devon@pool-108-28-172-103.washdc.fios.verizon.net)
[06:05:26] *** Quits: prxq (~quassel@dynamic-077-012-066-004.77.12.pool.telefonica.de) (Ping timeout: 252 seconds)
[06:05:34] *** Joins: prxq (~quassel@x4db90258.dyn.telefonica.de)
[06:09:39] *** Joins: elderK (uid205007@id-205007.helmsley.irccloud.com)
[06:11:35] *** Quits: terrorjack (~terrorjac@static.3.200.12.49.clients.your-server.de) (Quit: The Lounge - https://thelounge.chat)
[06:12:14] *** Joins: terrorjack (~terrorjac@static.3.200.12.49.clients.your-server.de)
[06:21:06] <saltrocklamp[m]> does mcclim have support for accessibility tools like screen readers?
[06:31:53] <beach> Good morning everyone!
[06:31:58] <beach> saltrocklamp[m]: No, I don't think so.
[06:37:54] *** Joins: karlosz (~karlosz@12.196.174.98)
[06:55:21] <mfiano> Hello all. I have been looking for some more Lisp books to read/add to my collection, and I stumbled on this site with a lot of the hard to find gems I already read, and others I haven't heard of yet. It might be interesting to some of you: http://www.ai.sri.com/~delacaze/alu-site/alu/table/books.htm
[07:04:32] *** Quits: Skyfire (~pyon@user/pyon) (Quit: WeeChat 3.2)
[07:13:29] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.2.1)
[07:14:40] *** Quits: semz (~none@user/semz) (Ping timeout: 252 seconds)
[07:14:54] *** Quits: taiju (~taiju@240b:253:ec40:2400:e069:cea0:b66b:350c) (Ping timeout: 260 seconds)
[07:15:45] <saltrocklamp[m]> that's too bad, thanks beach
[07:16:04] <saltrocklamp[m]> mfiano: that page is a 404 for me
[07:16:14] <beach> Works for me.
[07:18:11] <hayley> Works for me too.
[07:28:17] *** Joins: semz (~none@user/semz)
[07:29:44] <saltrocklamp[m]> weird, it works for me now!
[07:34:34] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 252 seconds)
[07:39:54] *** Joins: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f)
[07:41:20] *** Joins: charles_ (~charles@cpe-76-186-124-165.tx.res.rr.com)
[07:42:41] *** Joins: khrbt (~znc@user/khrbt)
[07:43:42] *** Joins: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt)
[07:45:11] *** Joins: zagura__ (~zagura@user/zagura)
[07:45:30] *** Joins: Lord_Nightmare2 (Lord_Night@user/lord-nightmare/x-3657113)
[07:45:34] *** Joins: boro (~irc@user/borodust)
[07:45:41] *** Joins: dstein64- (~dstein64@dannyadam.com)
[07:45:58] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[07:46:32] *** Joins: phadthai_ (mmondor@ginseng.pulsar-zone.net)
[07:47:09] *** Joins: jackdani1l (~jack@turtleware.eu)
[07:47:15] *** Joins: Demosthe1ex (~Demosthen@user/demosthenex)
[07:47:23] *** Joins: seere_ (~seere@user/seere)
[07:47:25] *** Joins: utis_ (~utis@84.208.165.160)
[07:47:26] *** Joins: Antsan (~Aksej@picard.host.weltraumschlangen.de)
[07:51:40] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[07:52:01] *** Quits: dstein64- (~dstein64@dannyadam.com) (Ping timeout: 252 seconds)
[07:52:01] *** Quits: zagura__ (~zagura@user/zagura) (Ping timeout: 252 seconds)
[07:52:01] *** Quits: srhm (~srhm@user/srhm) (Ping timeout: 252 seconds)
[07:52:34] *** Quits: bwestbro (~user@quantum2.chem.olemiss.edu) (Ping timeout: 252 seconds)
[07:52:57] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[07:52:58] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (*.net *.split)
[07:52:58] *** Quits: X-Scale` (~ARM@50.77.166.178.rev.vodafone.pt) (*.net *.split)
[07:52:58] *** Quits: charles__ (~charles@cpe-76-186-124-165.tx.res.rr.com) (*.net *.split)
[07:52:59] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (*.net *.split)
[07:52:59] *** Quits: dstein64 (~dstein64@dannyadam.com) (*.net *.split)
[07:52:59] *** Quits: phadthai (mmondor@user/phadthai) (*.net *.split)
[07:52:59] *** Quits: jackdaniel (~jack@user/jackdaniel) (*.net *.split)
[07:52:59] *** Quits: Demosthenex (~Demosthen@user/demosthenex) (*.net *.split)
[07:52:59] *** Quits: borodust (~irc@user/borodust) (*.net *.split)
[07:52:59] *** Quits: katya (~mariari@user/mariari) (*.net *.split)
[07:52:59] *** Quits: Krystof (~user@81.174.155.115) (*.net *.split)
[07:53:00] *** Quits: commandoline (~commandol@ubuntu/member/commandoline) (*.net *.split)
[07:53:00] *** Quits: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113) (*.net *.split)
[07:53:00] *** Quits: Aksej (~Aksej@picard.host.weltraumschlangen.de) (*.net *.split)
[07:53:00] *** Quits: utis (~utis@84.208.165.160) (*.net *.split)
[07:53:00] *** Quits: seere (~seere@user/seere) (*.net *.split)
[07:53:00] *** Quits: zagura (~zagura@user/zagura) (*.net *.split)
[07:53:00] *** Lord_Nightmare2 is now known as Lord_Nightmare
[07:53:01] *** Joins: dstein64 (~dstein64@dannyadam.com)
[07:53:01] *** Joins: srhm (~srhm@user/srhm)
[07:53:01] *** Joins: bwestbro (~user@quantum2.chem.olemiss.edu)
[07:53:01] *** Joins: zagura (~zagura@user/zagura)
[07:53:02] *** Joins: char (~charles@cpe-76-186-124-165.tx.res.rr.com)
[07:53:40] *** Quits: charles_ (~charles@cpe-76-186-124-165.tx.res.rr.com) (Ping timeout: 252 seconds)
[07:54:21] *** Joins: morte (~mortemeur@pool-173-76-107-201.bstnma.fios.verizon.net)
[07:54:49] *** Quits: boro (~irc@user/borodust) (Ping timeout: 252 seconds)
[07:54:50] *** Quits: jhi (sid81469@2a03:5180:f:2::1:3e3d) (Ping timeout: 252 seconds)
[07:54:59] *** Joins: jhi (sid81469@id-81469.lymington.irccloud.com)
[07:55:08] *** Joins: borodust (~irc@user/borodust)
[07:55:42] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[07:57:20] *** Joins: terrorjack1 (~terrorjac@static.3.200.12.49.clients.your-server.de)
[07:57:39] *** Joins: gin_ (~gin@2400:8904::f03c:92ff:fe28:e8a7)
[07:57:45] *** Joins: pl_ (sid98063@id-98063.helmsley.irccloud.com)
[07:57:45] *** ChanServ sets mode: +o pl_
[07:57:49] *** Joins: White__Flame (~quassel@user/white-flame/x-6930243)
[07:57:52] *** Quits: dale (dale@user/dale) (Ping timeout: 252 seconds)
[07:58:13] *** Joins: sndr (~sander@user/sander)
[07:58:16] *** Joins: dale (dale@user/dale)
[07:58:24] *** Quits: karlosz (~karlosz@12.196.174.98) (Ping timeout: 252 seconds)
[07:58:24] *** Quits: mortemeur (~mortemeur@pool-173-76-107-201.bstnma.fios.verizon.net) (Ping timeout: 252 seconds)
[07:58:28] *** Quits: White_Flame (~quassel@user/white-flame/x-6930243) (Ping timeout: 252 seconds)
[07:58:28] *** Quits: pl (sid98063@2a03:5180:f:1::1:7f0f) (Ping timeout: 252 seconds)
[07:58:28] *** Quits: sander (~sander@user/sander) (Read error: Connection reset by peer)
[07:58:29] *** pl_ is now known as pl
[07:58:29] *** Quits: ecraven (~ecraven@user/nex) (Quit: quit)
[07:58:39] *** Joins: katya (~mariari@user/mariari)
[07:58:40] *** Joins: ecraven (ecraven@user/nex)
[07:58:40] *** Quits: gin (~gin@user/gin) (Ping timeout: 252 seconds)
[07:58:57] *** sndr is now known as sander
[07:59:13] *** Quits: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f) (Quit: Leaving)
[07:59:13] *** Quits: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113) (Ping timeout: 252 seconds)
[07:59:13] *** Quits: terrorjack (~terrorjac@static.3.200.12.49.clients.your-server.de) (Ping timeout: 252 seconds)
[07:59:13] *** terrorjack1 is now known as terrorjack
[07:59:28] *** Joins: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113)
[07:59:33] *** Joins: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f)
[07:59:46] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (Ping timeout: 252 seconds)
[08:00:45] *** Joins: greaser|q (greaser@antihype.space)
[08:02:45] *** phadthai_ is now known as phadthai
[08:03:23] *** Quits: OlCe (~user@lfbn-nic-1-565-28.w90-118.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[08:03:58] *** Quits: phantomics (~phantomic@71-33-148-118.hlrn.qwest.net) (Excess Flood)
[08:04:23] *** Joins: phantomics (~phantomic@71-33-148-118.hlrn.qwest.net)
[08:04:54] *** Joins: aeth_ (~aeth@user/aeth)
[08:04:55] *** Quits: aeth (~aeth@user/aeth) (Killed (NickServ (GHOST command used by aeth_)))
[08:04:57] *** aeth_ is now known as aeth
[08:05:36] *** Joins: molson_ (~molson@2001-48F8-704A-CA1-0-0-75F-1006-static.midco.net)
[08:06:05] *** Joins: elderK_ (uid205007@id-205007.helmsley.irccloud.com)
[08:06:08] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[08:06:19] *** Joins: charles_ (~charles@cpe-76-186-124-165.tx.res.rr.com)
[08:06:19] *** White__Flame is now known as White_Flame
[08:06:54] *** Joins: victor_ (sid208353@user/victor)
[08:07:14] *** Quits: elderK (uid205007@id-205007.helmsley.irccloud.com) (Ping timeout: 252 seconds)
[08:07:14] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[08:07:14] *** Quits: victor (sid208353@user/victor) (Ping timeout: 252 seconds)
[08:07:14] *** Quits: char (~charles@cpe-76-186-124-165.tx.res.rr.com) (Read error: Connection reset by peer)
[08:07:14] *** Quits: jeosol (~jeosol@76-238-186-228.lightspeed.hstntx.sbcglobal.net) (Ping timeout: 252 seconds)
[08:07:14] *** elderK_ is now known as elderK
[08:07:15] *** victor_ is now known as victor
[08:07:35] *** Quits: srhm (~srhm@user/srhm) (Ping timeout: 252 seconds)
[08:07:35] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 252 seconds)
[08:07:36] *** Joins: notzmv- (~zmv@user/notzmv)
[08:07:58] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[08:08:08] *** Quits: molson (~molson@2001-48F8-704A-CA1-0-0-75F-1006-static.midco.net) (Ping timeout: 252 seconds)
[08:08:32] *** Joins: srhm (~srhm@user/srhm)
[08:09:14] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[08:09:45] *** Quits: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f) (Quit: Leaving)
[08:10:40] *** Joins: terrorjack7 (~terrorjac@static.3.200.12.49.clients.your-server.de)
[08:11:02] *** Joins: jhi_ (sid81469@id-81469.lymington.irccloud.com)
[08:11:09] *** Quits: jhi (sid81469@id-81469.lymington.irccloud.com) (Ping timeout: 252 seconds)
[08:11:09] *** jhi_ is now known as jhi
[08:11:41] *** Quits: terrorjack (~terrorjac@static.3.200.12.49.clients.your-server.de) (Read error: Connection reset by peer)
[08:11:42] *** terrorjack7 is now known as terrorjack
[08:12:51] *** Quits: cyberbanjo (~user@2607:fb90:4251:ffb6:1059:2a08:5fed:6000) (Read error: Connection reset by peer)
[08:18:28] *** Quits: Demosthe1ex (~Demosthen@user/demosthenex) (Ping timeout: 252 seconds)
[08:18:42] *** Joins: Demosthenex (~Demosthen@user/demosthenex)
[08:19:01] *** Quits: andreyorst (~andreyors@2.92.125.242) (Ping timeout: 252 seconds)
[08:19:26] *** Joins: andreyorst (~andreyors@2.92.125.242)
[08:22:02] *** Joins: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f)
[08:22:23] *** Joins: cyberbanjo (~user@2607:fb90:4251:ffb6:1059:2a08:5fed:6000)
[08:26:07] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 240 seconds)
[08:26:32] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[08:27:36] *** Joins: asarch (~asarch@2806:10ae:7:ebe7:a74d:7c25:b79e:678c)
[08:29:28] *** Quits: elderK (uid205007@id-205007.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[08:30:30] *** Quits: Devon (~devon@pool-108-28-172-103.washdc.fios.verizon.net) (Ping timeout: 260 seconds)
[08:31:21] *** Joins: OlCe` (~user@lfbn-nic-1-565-28.w90-118.abo.wanadoo.fr)
[08:31:58] *** Joins: semz_ (~none@user/semz)
[08:32:23] *** Joins: jhi_ (sid81469@id-81469.lymington.irccloud.com)
[08:33:31] *** Quits: semz (~none@user/semz) (Ping timeout: 252 seconds)
[08:33:31] *** Quits: jhi (sid81469@id-81469.lymington.irccloud.com) (Ping timeout: 252 seconds)
[08:33:31] *** jhi_ is now known as jhi
[08:33:46] *** Quits: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f) (Quit: Leaving)
[08:33:58] *** Joins: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f)
[08:50:59] <pl> saltrocklamp[m]: right now none of the CLIMs work with any good results with accessibility stuff (extensions that OCR the screen /might/ work but will be probably iffy). Figuring how to handle it properly is... non-trivial
[08:54:40] *** Quits: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f) (Quit: Leaving)
[08:55:24] *** Joins: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f)
[09:12:04] *** Quits: asarch (~asarch@2806:10ae:7:ebe7:a74d:7c25:b79e:678c) (Quit: Leaving)
[09:26:55] *** Quits: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f) (Quit: Leaving)
[09:26:59] *** Joins: taiju (~taiju@m014013236064.v4.enabler.ne.jp)
[09:27:25] *** Joins: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f)
[09:31:46] <akater[m]> CLIM supports “drawing” to arbitrary streams, including those not resembling visual canvas.  This implies OCRing the screen instead would be a very unnatural decision, no?
[09:33:21] *** Joins: Qwnavery (~Qwnavery@user/qwnavery)
[09:35:48] *** Joins: noircode (~noircode@bras-base-london1483w-grc-27-70-51-121-7.dsl.bell.ca)
[09:35:58] *** Quits: taiju (~taiju@m014013236064.v4.enabler.ne.jp) (Ping timeout: 252 seconds)
[09:36:51] *** Joins: karlosz (~karlosz@12.196.174.98)
[09:41:39] *** Quits: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f) (Quit: Leaving)
[09:41:54] *** Joins: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f)
[09:42:06] <pl> akater[m]: this implies there's no clean way to hook accessibility APIs and considerable portions of code use unstructured drawing, iirc
[09:42:36] *** Quits: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f) (Remote host closed the connection)
[09:43:45] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[09:45:03] *** Joins: cyberban` (~user@2607:fb90:4251:ffb6:84e2:63d5:bd90:2404)
[09:49:23] *** Quits: cyberbanjo (~user@2607:fb90:4251:ffb6:1059:2a08:5fed:6000) (Ping timeout: 268 seconds)
[10:03:04] *** Joins: pve (~pve@87-93-169-237.bb.dnainternet.fi)
[10:06:20] <hayley> I read that the fancy screen readers end up hooking graphics libraries, which would be tricky if font rendering is done on the Lisp side. But I admit I don't know how any specific CLIM handles font rendering.
[10:09:33] *** Joins: Skyfire (~pyon@user/pyon)
[10:20:11] *** Parts: akoana (~ah@user/akoana) ()
[10:36:40] *** Quits: noircode (~noircode@bras-base-london1483w-grc-27-70-51-121-7.dsl.bell.ca) (Quit: noircode)
[10:40:53] *** Quits: frgo (~frgo@p200300deef0cee00f4a0cd8da82a201b.dip0.t-ipconnect.de) (Remote host closed the connection)
[10:45:41] *** Joins: shka (~herr@109.231.6.176)
[10:56:03] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Ping timeout: 265 seconds)
[10:57:07] *** Joins: amb007 (~a_bakic@131.247.204.77.rev.sfr.net)
[11:03:14] *** Quits: amb007 (~a_bakic@131.247.204.77.rev.sfr.net) (Ping timeout: 245 seconds)
[11:05:03] *** Quits: Inline (~Inline@2a02:908:1252:7a80:1feb:c0cd:e428:d19f) (Quit: Leaving)
[11:07:30] *** Joins: amb007 (~a_bakic@44.135.22.93.rev.sfr.net)
[11:08:48] *** Joins: attila_lendvai (~alendvai@catv-213-222-131-28.catv.broadband.hu)
[11:13:19] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[11:14:41] *** Joins: rgherdt_ (~rgherdt@2a02:8109:86c0:d8d:e473:ba5e:85e3:6828)
[11:19:22] *** Quits: karlosz (~karlosz@12.196.174.98) (Ping timeout: 252 seconds)
[11:20:01] *** Joins: cosimone` (~user@93-34-132-96.ip49.fastwebnet.it)
[11:21:37] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Ping timeout: 252 seconds)
[11:23:15] <pve> Good morning! Is it ok to say "at runtime" here: "The body of a WHEN-PACKAGES-DYNAMIC form will be evaluated if PACKAGES exist at runtime."
[11:23:27] <pve> or is something like "execution time" more correct?
[11:23:32] *** Quits: cosimone` (~user@93-34-132-96.ip49.fastwebnet.it) (Remote host closed the connection)
[11:23:52] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[11:24:10] <hayley> I think the description of EVAL-WHEN would give some unambiguous terms to use.
[11:24:57] <jackdani1l> you could associate arbitrary meta information with any output record, so drawing may have first class semantics instead of some guessing via ocr
[11:25:05] <jackdani1l> in CLIM
[11:25:22] *** Joins: karlosz (~karlosz@12.196.174.98)
[11:25:38] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[11:26:03] *** Joins: srhm (~srhm@user/srhm)
[11:26:17] <hayley> Hm, the HyperSpec page says :execute "controls whether evaluation occurs for other eval-when forms (rather than top-level forms)". Perhaps the body is evaluated if PACKAGES exist when the WHEN-PACKAGES-DYNAMIC form is evaluated?
[11:26:39] <jackdani1l> so adding "accessibility" abstraction is a matter of stepping in and implementing them (i.e the dev time is the bottleneck, no some architectural difficulties)
[11:26:56] <hayley> (Provided I understand what WHEN-PACKAGES-DYNAMIC does, I suppose.)
[11:27:24] *** Quits: amb007 (~a_bakic@44.135.22.93.rev.sfr.net) (Ping timeout: 245 seconds)
[11:27:34] <pve> hayley: it's something Shinmera suggested
[11:27:36] <pve> https://github.com/pve1/eclector-access/blob/master/examples/overview.org#when-packages
[11:28:01] <hayley> I wondered about adding accessibility tools for CLIM, but then I decided I should have another, more "first-class", sort of presentation for screen readers.
[11:28:08] <pve> I was looking at the eval-when page, but it seemed like I might
[11:28:30] <pve> have to distinguish between top-level and not top-level..
[11:28:50] <pve> but I think "evaluated" sounds good
[11:36:28] <pl> hayley: accessibility tools hook into accessibility APIs
[11:37:26] <pl> those generally provide a "graph" of objects of interest to them
[11:38:43] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:39:12] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:42:35] *** Joins: gaqwas (~john@dynamic-095-118-142-075.95.118.pool.telefonica.de)
[11:57:24] *** Quits: karlosz (~karlosz@12.196.174.98) (Ping timeout: 245 seconds)
[12:08:53] *** Joins: karlosz (~karlosz@12.196.174.98)
[12:26:36] *** Quits: karlosz (~karlosz@12.196.174.98) (Quit: karlosz)
[12:30:27] *** Joins: noircode (~noircode@bras-base-london1483w-grc-27-70-51-121-7.dsl.bell.ca)
[12:32:15] *** Parts: noircode (~noircode@bras-base-london1483w-grc-27-70-51-121-7.dsl.bell.ca) ()
[12:34:52] *** Quits: cyberban` (~user@2607:fb90:4251:ffb6:84e2:63d5:bd90:2404) (Remote host closed the connection)
[12:39:45] *** Joins: frgo (~frgo@dynamic-046-114-145-058.46.114.pool.telefonica.de)
[12:46:49] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 252 seconds)
[12:47:13] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[12:48:06] *** Joins: Inline (~Inline@2a02:908:1252:7a80:1feb:c0cd:e428:d19f)
[12:57:37] *** Joins: cage (~cage@dynamic-adsl-84-220-249-98.clienti.tiscali.it)
[13:04:33] *** Joins: dickbar__ (~dickbaren@86-90-132-28.fixed.kpn.net)
[13:07:46] *** Quits: Inline (~Inline@2a02:908:1252:7a80:1feb:c0cd:e428:d19f) (Ping timeout: 252 seconds)
[13:09:20] *** Joins: q3cpma (~q3cpma@176-136-178-80.abo.bbox.fr)
[13:10:43] <dickbar__> [Q] Function APPLY in eval.lisp (SBCL). I tried to understand the source code. It is a recursive function, but i cannot find the base case. When i copy the function and rename it, including renaming the recursive calls, it doesn't work. CLHS says it's a normal function. What am i missing?
[13:11:04] <q3cpma> Hello, does anyone know why I can't do (require :pkg) (pkg:somefun somearg) when in a let body?
[13:11:17] <scymtym> pve: this is how i did the extended package prefix syntax: https://github.com/s-expressionists/Eclector/commit/5f39ca04c022af9b55f98009b081abfa4bc9e324
[13:11:57] <pve> scymtym: oh hi, I didn't realize it had already been done :)
[13:12:31] <scymtym> pve: i hadn't published it
[13:12:43] <White_Flame> dickbar__: when you M-. on APPLY, you'll see that there isn't just the DEFUN, but also other transforms.  Those compile the root forms of those expressions in that DEFUN APPLY source code
[13:13:14] <pve> scymtym: ok great, I'll compare notes later today, have to step out now.. thanks for showing
[13:13:27] <scymtym> pve: sure
[13:15:15] <White_Flame> dickbar__: srctran.lisp, line 4258
[13:18:52] *** Joins: amb007 (~a_bakic@201.134.22.93.rev.sfr.net)
[13:24:56] *** Joins: random-nick (~random-ni@87.116.183.117)
[13:26:55] *** Joins: tfeb (~tfb@88.98.95.237)
[13:26:56] *** Quits: amb007 (~a_bakic@201.134.22.93.rev.sfr.net) (Read error: Connection reset by peer)
[13:27:18] <dickbar__> @White_Flame : Thanks. So the sbcl compiler does some transformations (the macro DEFINE-SOURCE-TRANSFORM) to produce source code that does the APPLY thing. I probably don't want to know al that:-)
[13:28:04] *** Joins: amb007 (~a_bakic@201.134.22.93.rev.sfr.net)
[13:28:04] *** Quits: amb007 (~a_bakic@201.134.22.93.rev.sfr.net) (Read error: Connection reset by peer)
[13:28:21] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[13:36:22] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Ping timeout: 252 seconds)
[13:41:51] *** Joins: Inline (~Inline@2a02:908:1252:7a80:1feb:c0cd:e428:d19f)
[13:44:15] *** Joins: jeosol (~jeosol@76-238-186-228.lightspeed.hstntx.sbcglobal.net)
[13:49:04] *** Quits: frgo (~frgo@dynamic-046-114-145-058.46.114.pool.telefonica.de) (Remote host closed the connection)
[13:51:05] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[13:54:11] *** Joins: frgo (~frgo@dynamic-046-114-145-058.46.114.pool.telefonica.de)
[14:02:06] *** Quits: tfeb (~tfb@88.98.95.237) (Quit: died)
[14:06:29] *** Joins: igemnace (~ian@user/igemnace)
[14:07:39] *** Quits: igemnace (~ian@user/igemnace) (Client Quit)
[14:07:52] *** Joins: igemnace (~ian@user/igemnace)
[14:14:28] *** Joins: Devon (~devon@pool-108-28-172-103.washdc.fios.verizon.net)
[14:28:02] *** Quits: Inline (~Inline@2a02:908:1252:7a80:1feb:c0cd:e428:d19f) (Remote host closed the connection)
[14:28:15] *** Quits: q3cpma (~q3cpma@176-136-178-80.abo.bbox.fr) (Quit: leaving)
[14:32:59] <scymtym> speaking of Eclector, would anyone object to passing "raw" character names to the client from the sharpsign backslash (#\<x>) reader macro, that is shifting the responsibility of upcasing the character name from Eclector to the client? this would be an incompatible change but would be better in my view: 1) clients could obtain the original "spelling" 2) no unnecessary upcasing for clients that look up characters in some other
[14:32:59] <scymtym> case-insensitive way
[14:33:14] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 245 seconds)
[14:34:54] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[14:49:11] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[14:51:19] *** Quits: Qwnavery (~Qwnavery@user/qwnavery) (Quit: WeeChat 3.3)
[14:52:23] *** Quits: igemnace (~ian@user/igemnace) (Ping timeout: 252 seconds)
[14:59:13] *** Joins: lottaquestions (~nick@104.221.94.126)
[15:00:36] *** Quits: frgo (~frgo@dynamic-046-114-145-058.46.114.pool.telefonica.de) (Remote host closed the connection)
[15:09:49] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Ping timeout: 252 seconds)
[15:10:20] *** Joins: amb007 (~a_bakic@249.134.22.93.rev.sfr.net)
[15:16:48] *** Joins: dec0d3r (~dec0d3r@2001:8003:4810:9600:7275:1afb:1707:8eaa)
[15:18:02] *** Quits: dickbar__ (~dickbaren@86-90-132-28.fixed.kpn.net) ()
[15:25:49] *** Quits: amb007 (~a_bakic@249.134.22.93.rev.sfr.net) (Ping timeout: 252 seconds)
[15:28:20] <beach> scymtym: I have no objections.
[15:28:39] <beach> I assume you mean the case where <x> is not a single letter, but a word, right?
[15:30:46] *** Quits: lottaquestions (~nick@104.221.94.126) (Ping timeout: 252 seconds)
[15:31:49] <phoe> that's what I understood - right now e.g. #\sPaCe evaluates to #\  on SBCL, same as #\Space and #\SPACE, but some clients might want to be able to tell the character cases apart for reasons I don't yet know myself - signaling conditions or whatever
[15:33:02] *** Joins: Inline (~Inline@2a02:908:1252:7a80:1feb:c0cd:e428:d19f)
[15:41:12] *** Quits: cage (~cage@dynamic-adsl-84-220-249-98.clienti.tiscali.it) (Remote host closed the connection)
[15:41:43] *** Joins: amb007 (~a_bakic@146.104.204.77.rev.sfr.net)
[15:41:54] <beach> Er, wait.  The reader is supposed to return a character object.
[15:42:08] <scymtym> beach: yes. although i just realized that currently the client is not involved in the single-character case. i should probably change that as well since (find-character … string) and (find-character … character) would be nice for dispatch and compatible with the current behavior
[15:43:06] <beach> Now, I'm lost.
[15:43:17] <scymtym> phoe: client could already distinguish "#\ " and #\Space, but not #\Space and #\SPACE
[15:43:35] * scymtym started replying before reading everything
[15:44:18] <scymtym> beach: can you explain the issue "The reader is supposed to return a character object." is referring to?
[15:46:05] <beach> When you say `passing "raw" character names to the client', presumably you mean not back as the result from READ, but to the generic function that turns character names to characters, yes?
[15:48:31] *** Joins: attila_lendvai_ (~alendvai@catv-213-222-131-28.catv.broadband.hu)
[15:48:32] <scymtym> yes, i was referring to the character name argument in the FIND-CHARACTER call, sorry. the change i mentioned first is not upcasing the character name that is received by FIND-CHARACTER so the client can see the raw name/original spelling
[15:48:35] *** Quits: attila_lendvai (~alendvai@catv-213-222-131-28.catv.broadband.hu) (Read error: Connection reset by peer)
[15:49:20] <beach> Whew.  OK, yes, then no problem.
[15:51:18] <scymtym> the change that came to my mind after that is calling FIND-CHARACTER in the single-character case at all. the single-character case is currently handled by just returning that character and not calling FIND-CHARACTER, but that seems unnecessarily restrictive in hindsight
[15:52:14] <beach> Sure.
[15:52:53] <pjb> phoe: 2.4.8.1. When the token x is more than one character long, the x must have the syntax of a symbol with no embedded package markers. In this case, the sharpsign backslash notation parses as the character whose name is (string-upcase x);
[15:53:21] <scymtym> i mean, what if someone wants to make a CENSORING-CLIENT that reads #\💩 as #\🙊, right?
[15:53:58] <pjb> phoe: if you wanted to have case sensitive character names, I guess you would have to escape them: #\|Space| vs. #\space = #\SPACE
[15:54:30] <scymtym> pbj: i think we are all aware of that. the question is how the involved responsibilities should be distributed between Eclector and the client
[15:54:43] <scymtym> pjb: ^, sorry
[15:55:37] <pjb> ok. Now, the question is what "syntax of a symbol" means here: does it mean that this token is read applying the *readtable* setting, notably (readtable-case *readtable*) ?
[15:55:49] <pjb> Perhaps not sine string-upcase is cited explicitely.
[15:56:01] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 252 seconds)
[15:56:42] <scymtym> i think it means that token termination and single and multiple escapes work as for symbols. but things related to case don't matter due to the explicit upcase before the lookup
[15:57:00] <pjb> That sounds reasonable.
[15:57:00] *** Quits: attila_lendvai_ (~alendvai@catv-213-222-131-28.catv.broadband.hu) (Read error: Connection reset by peer)
[15:58:10] *** Joins: attila_lendvai (~alendvai@catv-213-222-131-28.catv.broadband.hu)
[15:59:56] <pjb> Otherwise, for the single character case, #\x is taken as a literal, so you wouldn't want to map x to something else.  find-character is indeed useless in this case.  Unless you consider it as a hook to be applied to all characters read; but such a hook should then be applied in read-char, I'd say.
[16:02:40] *** Quits: gaqwas (~john@dynamic-095-118-142-075.95.118.pool.telefonica.de) (Ping timeout: 252 seconds)
[16:08:31] *** Joins: igemnace (~ian@user/igemnace)
[16:09:58] <scymtym> i wouldn't say useless per se, the client may want to /know/ about character literals being read, even if it doesn't change anything. the client could also "re-map" characters as the (admittedly silly) CENSORING-CLIENT example mentioned. and besides, always going through FIND-CHARACTER seems more regular and i don't see a risk of making anything worse by doing it
[16:12:24] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[16:17:20] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.2.1)
[16:24:31] *** Joins: makomo (~makomo@user/makomo)
[16:25:10] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 252 seconds)
[16:26:38] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[16:27:22] <scymtym> the mandatory character names in http://www.lispworks.com/documentation/HyperSpec/Body/13_ag.htm are not upcased, so i guess the behavior described for #\<multi-character-name> technically wouldn't be able to find them
[16:31:16] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 252 seconds)
[16:32:13] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[16:38:21] *** Joins: cage (~cage@dynamic-adsl-84-220-249-98.clienti.tiscali.it)
[16:40:04] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 252 seconds)
[16:42:32] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[16:43:11] <pjb> Yes using their name: (char-name #\a) #| --> "LATIN_SMALL_LETTER_A" |#  #\LATIN_SMALL_LETTER_A #| --> #\a
[17:21:54] *** Quits: Inline (~Inline@2a02:908:1252:7a80:1feb:c0cd:e428:d19f) (Remote host closed the connection)
[17:22:12] *** Joins: rgherdt__ (~rgherdt@2a02:8109:86c0:d8d:e473:ba5e:85e3:6828)
[17:22:13] *** Joins: Inline (~Inline@2a02:908:1252:7a80:1feb:c0cd:e428:d19f)
[17:22:14] *** Quits: rgherdt_ (~rgherdt@2a02:8109:86c0:d8d:e473:ba5e:85e3:6828) (Remote host closed the connection)
[17:23:22] *** Quits: Inline (~Inline@2a02:908:1252:7a80:1feb:c0cd:e428:d19f) (Remote host closed the connection)
[17:25:27] *** Joins: Inline (~Inline@2a02:908:1252:7a80:1feb:c0cd:e428:d19f)
[17:35:46] *** Quits: shka (~herr@109.231.6.176) (Quit: Konversation terminated!)
[17:39:51] *** Joins: shka (~herr@109.231.6.176)
[17:41:20] *** Joins: igemnace (~ian@user/igemnace)
[17:56:27] *** Joins: lisp123 (~lisp123@5.30.23.247)
[17:57:11] <lisp123> mfiano: Thanks for the link, that's a great list
[17:57:26] *** Joins: mortemeur (~mortemeur@pool-173-76-107-201.bstnma.fios.verizon.net)
[17:59:28] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Excess Flood)
[17:59:46] *** Quits: morte (~mortemeur@pool-173-76-107-201.bstnma.fios.verizon.net) (Ping timeout: 252 seconds)
[18:00:03] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[18:01:33] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[18:03:28] <lisp123> Is there anything you wish CLOS had or is it perfect?
[18:05:02] *** Joins: gaqwas (~john@dynamic-095-118-142-075.95.118.pool.telefonica.de)
[18:19:43] * edgar-rft wants a CLOS pony
[18:29:01] <lisp123> edgar-rft: a batteries and ponies-included CLOS ;)
[18:29:41] <beach> lisp123: That's a very strange question.  What is your reason for asking it?
[18:31:26] <beach> Also, since CLOS is defined using CLOS, you can adapt it an oh so many ways.
[18:31:45] <beach> So, usually, if there is something missing, you can supply it.
[18:34:30] *** Quits: amb007 (~a_bakic@146.104.204.77.rev.sfr.net) (Read error: Connection reset by peer)
[18:34:55] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[18:37:38] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Read error: Connection reset by peer)
[18:38:36] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[18:38:47] <lisp123> beach: Worded in another way, have there been any advances in objected oriented programming / MOP / or other related fields that you wish were in CLOS?
[18:39:40] <lisp123> It seems like most other languages are catching up to these ideas, but are there ideas that CL has to catch up to?
[18:40:10] <edgar-rft> having 0 and 1 is enough, everything else can be computed from that
[18:40:18] <beach> lisp123: I still wonder about your reason for asking these questions.
[18:40:36] <lisp123> Curiousity
[18:45:17] <edgar-rft> nothing in the world is perfect so why should it be CLOS, but I really can't find any things out of my head that I frequently have problems with
[18:47:29] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[18:50:19] *** Quits: taiju (~taiju@M014013236064.v4.enabler.ne.jp) (Read error: Connection reset by peer)
[18:50:34] *** Joins: taiju (~taiju@240b:253:ec40:2400:e069:cea0:b66b:350c)
[18:50:55] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[18:52:01] <lisp123> edgar-rft: Thanks
[18:53:26] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.2.1)
[18:54:20] *** Joins: tyson2 (~user@cpe44d9e795a64f-cm688f2e2dfaa0.sdns.net.rogers.com)
[18:54:23] *** Quits: mortemeur (~mortemeur@pool-173-76-107-201.bstnma.fios.verizon.net) (Read error: Connection reset by peer)
[18:54:59] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[18:55:01] <etimmons> If called with a restart object, should invoke-restart call its test function?
[18:55:39] <etimmons> My gut, SBCL, ABCL, and CCL say no. But ECL says yes. And I'm having trouble figuring out which way is right based on the spec.
[18:57:07] <jackdani1l> undefined behavior?
[18:57:24] <jackdani1l> i.e. both are right
[18:58:07] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[18:58:29] *** Joins: mortemeur (~mortemeur@pool-173-76-107-201.bstnma.fios.verizon.net)
[18:58:32] <etimmons> That's basically what I'm thinking. But am curious if others have a more definitive reading
[19:07:05] *** Quits: lisp123 (~lisp123@5.30.23.247) (Quit: Leaving...)
[19:09:53] *** gxt_ is now known as gxt
[19:17:35] <jeosol> Good morning guys
[19:20:53] <cage> jeosol: hi!
[19:21:16] <jeosol> I want to check that I am not missing something in my workflow. I had some esrap related errors with my update to SBCL 2.1.9.  Esrap has been fixed. I tried to update ql with (ql:update-dist ...) and it  still didn't pick the updated esrap. For now I clone the updated esrap and put it in my local-projects directory. How are you guys dealing with
[19:21:17] <jeosol> this pull recent library issue
[19:21:23] <jeosol> cage: hi
[19:21:49] <jeosol> I hear there is an ultralisp option, but I don't want to pull everything that is changing very fast and can break things
[19:23:05] <jeosol> You'll say the above local-projects work, but I was trying to build an image with Docker and realized that the upstream image didn't have the update esrap and the downstream image (building from earlier) one failed to complete
[19:31:16] <scymtym> etimmons: what in the specification indicates that INVOKE-RESTART should call the test function? i don't see which condition INVOKE-RESTART could supply to the test function. the "Description" section says the restart must be "valid", not "active" or "applicable", so the test function doesn't seem to be involved there either
[19:31:40] <etimmons> jeosol: With QL, your only real options are local-projects or keep SBCL at a slightly older version.
[19:32:08] <jeosol> etimmons: really. Oh men. Thanks Eric
[19:33:14] <etimmons> scymtym: I think that's really the root of my confusion. What does a "valid" restart mean? I don't see that term used anywhere else for restarts.
[19:33:51] <jeosol> etimmons: trying not to lag by more than 2 versions of SBCL. I noticed the problem when trying to over 2.1.8, then reverted back to 2.17, and when I moved to 2.1.9 issue was still there but _death suggested pulling updated esrap, so problem was gone (at least on local setup)
[19:34:29] <jeosol> I guess, maybe I will stay at SBCL 2.1.7 in the container
[19:35:16] <etimmons> scymtym: I was also pointed to bullet 7 under problem description in <http://www.lispworks.com/documentation/HyperSpec/Issues/iss075_w.htm> which mentions invoke-restart calling the test function. But issue writeups aren't actually part of the spec, right?
[19:38:03] <scymtym> etimmons: everything points to "valid" meaning "not de-established". this is otherwise called "active (handler)"
[19:38:23] *** Quits: mortemeur (~mortemeur@pool-173-76-107-201.bstnma.fios.verizon.net) (Quit: Leaving)
[19:38:26] *** notzmv- is now known as notzmv
[19:39:23] *** Joins: frgo (~frgo@p200300deef0cee00b112c015fc1d9ccc.dip0.t-ipconnect.de)
[19:42:53] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[19:43:26] *** Quits: frgo (~frgo@p200300deef0cee00b112c015fc1d9ccc.dip0.t-ipconnect.de) (Client Quit)
[19:43:52] *** Server sets mode: +Ccntz 
[19:44:12] <etimmons> But under this reading where valid /= visible, does that imply invoke-restart given a symbol name should not evaluate the test function? SBCL does invoke the test function when given a symbol name. I haven't checked other implementations.
[19:47:29] <scymtym> is visible the same as applicable?
[19:48:26] <etimmons> Sorry, yes. Not sure where I got visible from
[19:48:51] <scymtym> my understanding is valid = active = established and not yet de-established. applicable = active and test function is true
[19:50:46] <etimmons> Ah. a few places mention visible, which I think means applicable. Such as 9.1.4.2.3
[19:52:38] <etimmons> Interesting. That does imply invoke-restart should not check applicability (call the test function) under any circumstances.
[19:52:56] <etimmons> Not what my gut said, but I think that is the most straightforward reading
[19:53:02] <scymtym> for original question, that is passing a restart object to INVOKE-RESTART, i lean towards invoking without calling the test function since it says "valid" but not applicable
[19:54:01] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Quit: WeeChat 3.3)
[19:54:53] <scymtym> the notes for INVOKE-RESTART says that the "restart functions", CONTINUE and friends, go through it. maybe that means WITH-CONDITION-RESTARTS must be used
[19:56:27] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[19:56:46] <etimmons> Oh, and that interpretation is further bolstered by the definition for "restart designator" (what INVOKE-RESTART) accepts. "[...] a non-nil symbol (denoting the most recently established active restart whose name is that symbol)"
[19:56:52] <etimmons> No mention of applicability
[19:57:30] <Alfr> Maybe also look at restart-bind's description; there the resulting function from test-function is only mentioned in the interactive invocation case.
[19:57:59] *** Quits: tyson2 (~user@cpe44d9e795a64f-cm688f2e2dfaa0.sdns.net.rogers.com) (Quit: ERC (IRC client for Emacs 27.2))
[20:01:28] <etimmons> I think it's definitely used by more than the interactive case. FIND-RESTART says it returns an applicable restart when given a symbol, which is defined to have the test return non-NIL
[20:02:49] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Ping timeout: 245 seconds)
[20:05:21] <scymtym> yes, i think (find-restart … condition) can only return a restart that 1) is active 2) is explicitly associated with CONDITION or not associated with any 3) whose test function returns true 4) innermost one with that name
[20:06:19] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 252 seconds)
[20:08:08] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[20:10:46] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[20:14:18] *** Joins: frgo (~frgo@p200300deef0cee00501727d1a25228cd.dip0.t-ipconnect.de)
[20:14:54] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Ping timeout: 245 seconds)
[20:15:14] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[20:20:37] <Alfr> etimmons, if you call invoke-restart with a restart object, what what is the condition that should be feed to the restart's test-function?
[20:21:24] <etimmons> The only thing you can give it is NIL (that's what ECL does)
[20:24:40] <scymtym> what happens if the test returns false in that situation? CONTROL-ERROR?
[20:24:59] <etimmons> Yes.
[20:25:29] <etimmons> I noticed because it makes it impossible to invoke some types of restarts.
[20:26:01] <scymtym> right
[20:26:15] <scymtym> if you need COMPUTE-RESTARTS followed by INVOKE-RESTART
[20:26:35] <scymtym> because there is no name or the restart is not the innermost of that name
[20:26:54] <etimmons> Yep
[20:29:38] <Alfr> Whether it has a name doesn't matter, as we're talking about restart objects, which denote themselves when used as an restart designator.
[20:32:30] <scymtym> it does matter: if INVOKE-RESTART calls the test function and the test function only returns true if a condition is supplied, INVOKE-RESTART cannot be used to invoke that restart by passing the restart object. thus the restart has to be invoked by name which is only possible if it has the name and is the innermost restart with that name
[20:34:55] <Alfr> scymtym, and I don't think that invoke-restart is allowed to do that test.
[20:36:00] <scymtym> Alfr: i tend to agree. what etimmons said was that doing the test (as in ECL) makes invoking certain restarts impossible
[20:36:55] <Alfr> scymtym, 9.1.4.2 first paragraph together with "valid" from invoke-restart's description.
[20:37:31] <yitzi> It is the same in CLASP since it inherited its restart system from ECL.
[20:37:45] <Alfr> (Admittedly it'd be an interesting problem to get the restart object.)
[20:40:41] <etimmons> scymtym: Something interesting is that SBCL's INVOKE-RESTART *does* call the test function if given a restart name. Which you've now made me think is the incorrect behavior.
[20:41:34] <scymtym> Alfr: yes, i thought etimmons and i have been saying that "valid" is probably the same as "active" in this context which does not involve the test function
[20:42:47] <scymtym> etimmons: i changed this stuff in SBCL at one point. i hope i wrote an explanation
[20:43:14] <yitzi> Actually, scratch my last statement about CLASP. they appeared to have changed `invoke-restart`.
[20:43:19] <Alfr> For invoke-restart the most specific interpretation of valid is (from i-r's description): "Restart must be valid in the current dynamic environment."
[20:46:07] <etimmons> scymtym: Looks like <https://github.com/sbcl/sbcl/commit/3be10f2395c6fbc2ddfe4bb1b5ccdf00a914d221>
[20:47:28] <scymtym> though i probably messed up in https://bugs.launchpad.net/sbcl/+bug/774410, agreeing that "active" requires the test function to return true
[20:47:54] <yitzi> And Bike added a comment in CLASP for their `valid-restart-p` https://github.com/clasp-developers/clasp/blob/8f4cc3df40d5c4260099feeb1f558a7d060a950f/src/lisp/kernel/clos/conditions.lsp#L140-L146
[20:49:50] <scymtym> if this doesn't call for a WSCL issue, i don't know what does
[20:50:09] <yitzi> That is just what I was thinking!
[20:50:33] <etimmons> Ha, I actually checked WSCL before asking this to see if had already been addressed
[20:50:42] <Alfr> scymtym, the glossary entry for dynamic environment explicitly lists restarts.
[20:51:17] <Alfr> scymtym, not sure that's really an ambiguity in the spec.
[20:51:38] <etimmons> Alfr: I think the ambiguity is what "valid" means
[20:51:41] <scymtym> Alfr: i'm not following. can you connect the dots for me?
[20:51:48] <etimmons> active or applicable ?
[20:52:34] <Alfr> scymtym, that was only regarding WSCL.
[20:53:42] <Alfr> etimmons, you mean that on used in the exceptional situations section? I'd take it to be the one implicitly introduced in the description.
[20:54:20] <scymtym> Alfr: hm, but if nothing else, isn't at least the use of "valid" (and "visible" as etimmons points out) unclear, given that the terms "active" and "applicable" exist and have actual definitions?
[20:56:01] <Alfr> scymtym, not sure about "visible", but I'd consider valid restart to be defined---albeit locally.
[20:57:41] <Alfr> scymtym, but I guess an addition to the glossary would be nice, if "valid restart" is not used anywhere else.
[21:01:26] <scymtym> i think it should say either "active restart" or "applicable restart" (although i don't think this one makes much sense, as discussed before) which are the two defined terms. adding a "valid restart" term that could mean one thing or the other doesn't seem to help
[21:02:07] <scymtym> or would the meaning of "valid restart" be different from both in some aspect?
[21:04:51] <Alfr> scymtym, valid restart means the same as active restart, imo. As being in the current dynamic environment, amounts to having been established and not having been yet disestablished.
[21:06:10] <scymtym> Alfr: i also prefer that interpretation, but why /can't/ it mean that the test function must also return true?
[21:08:39] <Alfr> clhs 1.5.1.4.1
[21:08:39] <specbot> Resolution of Apparent Conflicts in Exceptional Situations: http://www.lispworks.com/reference/HyperSpec/Body/01_eada.htm
[21:08:42] <Alfr> scymtym, &
[21:08:47] <Alfr> s/&/^/
[21:10:16] <scymtym> i don't see the connection. which passages conflict in this case?
[21:12:26] <Alfr> scymtym, as to the ambiguity what "valid" should mean.
[21:13:15] <scymtym> but there is no definition instead of two conflicting definitions as far as i can tell
[21:15:00] <Alfr> scymtym, yes. I may have misinterpreted the intention as you mentioned "active" and "applicable".
[21:18:00] <Alfr> scymtym, I wanted only to clarify that it doesn't necessarily has to be any of these solely based on the fact that they have glossary entries. (Though in this case, I think, a valid restart is simply an active one.)
[21:20:23] <scymtym> Alfr: ok
[21:23:02] *** Quits: khrbt (~znc@user/khrbt) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[21:28:03] *** Quits: Inline (~Inline@2a02:908:1252:7a80:1feb:c0cd:e428:d19f) (Quit: Leaving)
[21:41:25] <pve> scymtym: I had a look at your syntax extension, and it looks somewhat more "proper" than my sloppy hack :)
[21:43:43] <pve> I was not 100% clear on the the purpose of check-symbol-token or interpret-symbol-token, so I kinda skimmed over them
[21:44:30] <scymtym> check and interpret are separate so that a client can change the interpretation without re-implementing the validity checks
[21:44:41] <pve> right
[21:44:53] <scymtym> or restrict/relax the check, i guess
[21:45:39] <pve> I just saw that symbol-name-must-not-end-with-package-marker was an exported condition so I figured I would just catch it like an idiot an take it from there :)
[21:45:54] <pve> exported symbol, I mean
[21:46:36] <pve> scymtym: btw, does your solution honor package locks?
[21:47:57] <scymtym> pve: the code should be portable and thus do whatever INTERN does
[21:49:30] <scymtym> but yeah, reading the inner expression while "being in the package" should probably account for package locks on implementations that have them
[21:51:54] <pve> ok
[21:54:31] <pve> scymtym: do you have any other syntax extensions cooking?
[21:55:10] <scymtym> nothing worth mentioning
[21:57:53] *** Joins: attila_lendvai_ (~alendvai@catv-213-222-131-28.catv.broadband.hu)
[21:57:55] *** Quits: attila_lendvai (~alendvai@catv-213-222-131-28.catv.broadband.hu) (Ping timeout: 252 seconds)
[21:59:15] *** Joins: jrx (~user@lfbn-ren-1-789-183.w83-197.abo.wanadoo.fr)
[22:00:43] *** Joins: Inline (~Inline@2a02:908:1252:7a80:1feb:c0cd:e428:d19f)
[22:02:52] *** Joins: tfeb (~tfb@88.98.95.237)
[22:19:28] *** seere_ is now known as seere
[22:24:31] *** Joins: Krystof (~user@81.174.155.115)
[22:26:27] *** Quits: tfeb (~tfb@88.98.95.237) (Quit: died)
[22:37:31] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 252 seconds)
[22:41:36] <pve> Is a package name allowed to be empty? So I could have something like ||::foo
[22:42:00] <pve> the hyperspec page doesn't seem to forbid it at least..
[22:44:12] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[22:45:33] *** Joins: attila_lendvai (~alendvai@catv-213-222-131-28.catv.broadband.hu)
[22:45:35] *** Quits: attila_lendvai_ (~alendvai@catv-213-222-131-28.catv.broadband.hu) (Remote host closed the connection)
[22:51:41] <akater[m]> pve:  Any symbol's name could be any string so almost certainly you could have a package named "" but I'm not sure how to reference explicitly a package's symbol when a package's name is "".  And providing a package so named is not a good idea.
[22:53:17] <pve> akater[m]: it's "||::foo" as far as I can tell
[22:54:08] *** Quits: jrx (~user@lfbn-ren-1-789-183.w83-197.abo.wanadoo.fr) (Quit: ERC (IRC client for Emacs 27.2))
[22:54:51] *** Quits: dec0d3r (~dec0d3r@2001:8003:4810:9600:7275:1afb:1707:8eaa) (Remote host closed the connection)
[22:54:56] <pjb> pve: the only problem is that some implementation put "" as a nickname to "KEYWORD", so that :foo is read as ||:foo ; but the conformity of that is dubious to the least.
[22:55:52] <pve> pjb: oh, that's interesting
[22:55:54] <akater[m]> pve: Well here you go.
[22:55:54] <akater[m]> Elisp has a package that uses `-` and `--` prefixes and somebody called it “asshole naming” and I don't even want to point this out as being rude.
[22:57:09] <pve> akater[m]: yes, I get that it's a bad idea, I just wondered if it's allowed
[23:05:25] *** Quits: attila_lendvai (~alendvai@catv-213-222-131-28.catv.broadband.hu) (Remote host closed the connection)
[23:06:51] *** Quits: cage (~cage@dynamic-adsl-84-220-249-98.clienti.tiscali.it) (Remote host closed the connection)
[23:09:04] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 245 seconds)
[23:10:50] *** Joins: loskutak (~loskutak@gw.mecom.cz)
[23:10:53] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[23:13:46] *** Joins: Izem (~noircode@bras-base-london1483w-grc-27-70-51-121-7.dsl.bell.ca)
[23:21:36] <pve> scymtym: I could be wrong, but should check-symbol-token include "(not (equal '(0 . 0) (car escape-ranges))") or something to that effect, in the two-package-markers-must-not-be-first case?
[23:22:31] <pve> because eclector seems to get confused by "||::foo"
[23:25:44] <Alfr> Can the reader even distinguish between :xxxxx and ||:xxxxx ?
[23:26:55] <pve> Alfr: both SBCL and CCL do
[23:27:48] <scymtym> pve: i think Valid Patterns for Tokens (http://www.lispworks.com/documentation/HyperSpec/Body/02_ce.htm ) is applied after single and multiple escapes have been processed. according to the figure, such a token would not be valid
[23:29:07] <pve> scymtym: aha!
[23:29:36] <mfiano> They can even distinguish between |​|::xxxxx and |​​|::xxxxx!
[23:30:23] <mfiano> There are ZWSP's in that :)
[23:31:18] <scymtym> so ::foo (often read as a keyword) and ||:foo would both be invalid. the question is whether this is actually meant to be applied without regarding escaped beyond applying them to produce the token pattern
[23:31:30] <scymtym> s/escaped/escapes/
[23:33:50] <Alfr> pve, hm ... strange. Shouldn't something starting with ||, simply discard the two multiple escapes, by 6, 9, and then proceeding to read the rest starting at 8?
[23:35:52] *** Joins: JeromeLon (~jerome@206.159.207.77.rev.sfr.net)
[23:36:00] *** Joins: attila_lendvai (~alendvai@catv-213-222-131-28.catv.broadband.hu)
[23:37:52] *** Quits: attila_lendvai (~alendvai@catv-213-222-131-28.catv.broadband.hu) (Read error: Connection reset by peer)
[23:43:39] <pve> Alfr: I'm really not the one to ask, but it reads like that to me too
[23:45:16] <pve> scymtym: thanks for clearing it up, it makes sense now
[23:47:19] *** Parts: Izem (~noircode@bras-base-london1483w-grc-27-70-51-121-7.dsl.bell.ca) (Good Bye)
[23:47:51] <JeromeLon> Do I understand correctly that the only in-memory streams provided by default are string based, and as such can't stream binary bytes but only characters?
[23:56:02] *** Joins: dra (~dra@2a04:4540:640f:6300:e522:3040:cdfb:9cf5)
[23:57:40] <mfiano> You would be mistaken.
[23:57:47] <mfiano> #'open takes an element-type
[23:58:12] *** Quits: dra (~dra@2a04:4540:640f:6300:e522:3040:cdfb:9cf5) (Remote host closed the connection)
[23:58:25] <mfiano> There are ways to read and write binary data, and several libraries for working with binary streams
[23:59:56] <mfiano> Ah "in-memory". There's several ways to do this, such as using flexi-streams
