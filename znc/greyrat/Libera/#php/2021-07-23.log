[00:09:02] *** Quits: Akimb (~Akimb@86.100.13.100) (Ping timeout: 252 seconds)
[00:36:29] *** Quits: pmercado (~pmercado@186.107.49.222) (Quit: Konversation terminated!)
[00:38:00] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[00:39:33] *** Joins: TanoMarcelo (~TanoMarce@179.63.242.126)
[00:42:12] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 245 seconds)
[00:42:14] *** Joins: fernandos (~fernandos@194.107.178.219)
[00:42:19] *** Quits: magla (~gelignite@55d49622.access.ecotel.net) (Quit: Stay safe!)
[00:45:46] *** Joins: Akimb (~Akimb@86.100.13.100)
[00:46:22] *** Quits: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:9b0:5b02:289d:6c18) (Ping timeout: 245 seconds)
[00:55:20] *** Quits: toretto (~0xe3b7@user/toretto) (Ping timeout: 265 seconds)
[00:57:56] *** Joins: jetchisel (jetchisel@user/jetchisel)
[00:59:20] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[01:00:17] *** Joins: jetchisel (jetchisel@user/jetchisel)
[01:02:17] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[01:09:07] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[01:13:31] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 250 seconds)
[01:20:46] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[01:40:11] *** Quits: Wojjie (~Wojjie@66.207.215.227) (Quit: Client closed)
[01:44:43] *** Joins: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br)
[01:45:07] *** Quits: WarpedAI (~Warped@user/warped) (Ping timeout: 265 seconds)
[01:45:38] *** Quits: TanoMarcelo (~TanoMarce@179.63.242.126) (Quit: WeeChat 3.1)
[01:48:58] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[01:49:01] *** Quits: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br) (Client Quit)
[01:51:46] *** Quits: fernandos (~fernandos@194.107.178.219) (Quit: Leaving)
[01:52:40] *** LSD is now known as acidsys
[01:56:05] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[02:00:56] *** Joins: TanoMarcelo (~TanoMarce@179.63.242.126)
[02:01:04] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 265 seconds)
[02:05:06] *** Quits: Alex123 (~Adium@cpe-172-249-100-115.socal.res.rr.com) (Quit: Leaving.)
[02:05:16] *** Joins: Alex123 (~Adium@cpe-172-249-100-115.socal.res.rr.com)
[02:05:55] *** Quits: Alex123 (~Adium@cpe-172-249-100-115.socal.res.rr.com) (Client Quit)
[02:11:58] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[02:15:48] *** Quits: genomc (uid245282@id-245282.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[02:16:14] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 255 seconds)
[02:26:28] *** Joins: Alex123 (~Adium@cpe-172-249-100-115.socal.res.rr.com)
[02:26:53] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[02:27:40] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[02:32:12] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 276 seconds)
[02:51:15] *** Joins: WishBoy (~WishBoy@user/wishboy)
[02:59:01] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[03:03:12] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 252 seconds)
[03:05:04] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[03:06:04] <celphi> anyone would like to elaborate why "1" == 1 but not "str" == 1
[03:06:58] <TinoDidriksen> Because of conversion. When you do == integer, it will try to parse the string as an integer value to compare against.
[03:07:07] <TinoDidriksen> This is why PHP has ===
[03:07:14] <celphi> i get teh ===
[03:07:18] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 276 seconds)
[03:07:30] <celphi> but (bool) "str" is true
[03:07:38] <TinoDidriksen> intval("str") is not 1.
[03:07:38] <celphi> so why doesnt "str" == 1
[03:08:10] <celphi> https://usercontent.irccloud-cdn.com/file/WNstclux/image.png
[03:08:12] <TinoDidriksen> Anything not 0 is true, but that's not what you're asking here.
[03:08:18] <celphi> try again
[03:08:40] <TinoDidriksen> It's not a boolean comparison.
[03:08:51] <TinoDidriksen> It's intval(), not (bool)
[03:08:54] <celphi> "but (bool) "str" is true"
[03:09:01] <TinoDidriksen> That's not what's used here.
[03:09:10] <celphi> that's exactly what i said though
[03:09:34] <TinoDidriksen> "1" == 1 does not involve casting to bool.
[03:10:00] <celphi> doesnt If (cast to bool) ?
[03:10:18] <TinoDidriksen> The whole expression, yes, but not each argument.
[03:10:31] <TinoDidriksen> ("1" == 1) is cast to bool.
[03:10:37] <celphi> oh i see what you're saying.. the comparison is intval or int cast theen the if statement is cast to bool ?
[03:10:43] <TinoDidriksen> Right
[03:10:49] <celphi> gotcha ty
[03:11:26] <celphi> and i guess statement/expression
[03:11:47] <celphi> :%s/statement/expression
[03:15:00] *** Quits: Poboy (~Poboy@user/poboy) (Quit: Client closed)
[03:16:06] *** Quits: judah (~judah@rrcs-74-87-190-146.west.biz.rr.com) (Quit: Leaving)
[03:25:45] *** Quits: Alex123 (~Adium@cpe-172-249-100-115.socal.res.rr.com) (Quit: Leaving.)
[03:25:56] *** Joins: Alex123 (~Adium@cpe-172-249-100-115.socal.res.rr.com)
[03:26:34] *** Quits: Alex123 (~Adium@cpe-172-249-100-115.socal.res.rr.com) (Client Quit)
[03:30:13] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[03:32:48] *** Joins: toretto (~0xe3b7@user/toretto)
[03:33:43] <toretto> I'm looking at this specific CVE, I'm curious how could one get a PHP file executed when it's just uploaded? https://g0blin.co.uk/g0blin-00036/
[03:34:50] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 265 seconds)
[03:34:52] <toretto> On a file upload page, let's say it does't check for the file type (assuming everything a user uploads is an image), in this case, they uploaded a PHP file, I'm quite sure it doesn't automatically just execute the file. In this case, how does one make it execute the PHP file?
[03:37:39] <entuland> once the file gets uploaded you just have to invoke it by requesting the URL matching that file
[03:38:09] <toretto> OH, I was dumb. thanks.
[03:38:24] <entuland> yw
[03:39:40] <toretto> But what if they upload to some other directory, let's say outside of the scope where we can send GET request? In that case we get a 404 if we try to requset that file right?
[03:40:27] <entuland> if you can't get to their URL (directly or indirectly, say the path gets remapped) you shouldn't be able to run it
[03:40:27] <toretto> In that case, one cannot do anything with that file upload vulnerability right?
[03:40:57] <toretto> So, even though we are vulnerable, we are technically safe right?
[03:41:08] <entuland> not an expert, so I can't tell for sure, but sounds so
[03:42:19] <entuland> file execution should be disabled in those folders that are supposed to only contain images anyways
[03:43:22] <entuland> images or other media
[03:44:20] <toretto> But even if it's not disabled, since it's outside of the website's root, once cannot send request to that file anyway.
[03:44:32] <entuland> hopefully that vulnerability as well should be long fixed (the one you linked) as it's 6 years hold
[03:44:36] <entuland> s/hold/old
[03:45:45] <toretto> Yeah. But if the admin is clever not to upload the files into the project root, they're safe anyway. Maybe we'll wait for someone to prove this wrong.
[03:45:55] <da_wunder> and really if some user sends php file - do you really want to execute that? - for me that doesn't make any sense without some real sanitazion
[03:46:08] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[03:46:31] <Blondie101010> as I always say, NEVER EVER use a user provided filename
[03:46:34] <Blondie101010> problem solved!
[03:47:18] <__adrian> ^ this solves all sorts of problems
[03:47:31] <toretto> da_wunder: No, we're talking about the case where an image file is expeced but they uploaded a PHP file instead and we don't store the uploaded file into the project root or subdirectories but rather in some isolated dir other, outside of project root.
[03:47:34] <__adrian> users have no business deciding things of your filesystem
[03:48:26] <__adrian> toretto: the solution(s) there involve correctly configuring your webserver
[03:48:41] <toretto> my webserver?
[03:48:46] <toretto> or my PHP?
[03:49:01] <Blondie101010> doesn't it run on the webserver?
[03:49:18] <toretto> I use NGINX, but Idk how configuring that would be any helpful.
[03:49:26] <__adrian> your webserver should not try to display an image and end up running a php script
[03:49:36] <toretto> if you mean configuring php.ini, yeah.
[03:50:30] <da_wunder> and really you should store assets files to external service like s3
[03:50:34] <Blondie101010> __adrian:  well that is not sooo bad if the environment is properly secured
[03:50:47] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 252 seconds)
[03:51:18] <Blondie101010> toretto:  but telling your nginx to not run PHP in the image directory would be adequate
[03:51:27] <toretto> Yeah.
[03:51:29] <da_wunder> toretto: and you could check that uploaded file eg. with imagick if that is really an image or not
[03:51:47] <Blondie101010> insufficient in this case
[03:51:49] <toretto> da_wunder: Yeah, that'd help.
[03:51:54] <Blondie101010> no
[03:52:00] <Blondie101010> I'm sure that can be hacked in 2 minutes
[03:52:12] <__adrian> if you have a directory public/uploaded/images/ your webserver (yes, webserver) should not pass _anything_ to php
[03:52:14] <BadAdviceCat> toretto, I'll will provide an example. I create a file named evil.php. Write PHP code into it.
[03:52:36] <BadAdviceCat> After that, I rename the file from evil.php, to kittens.png. Then upload the "picture" to your website.
[03:53:00] <toretto> __adrian: Yeah, that makes sense. But I'm gonna be storing everything that someone uploaded different from the project root.
[03:53:03] <BadAdviceCat> Then go to http://your-website.com/kittens.png?lol.php
[03:53:22] <Blondie101010> if very badly configured, sure
[03:53:26] <BadAdviceCat> That is how bad things happen.
[03:54:05] <Blondie101010> it is a good test
[03:54:27] <toretto> what's lol.php?
[03:54:34] <Blondie101010> it doesn't matter
[03:54:34] <BadAdviceCat> It can be anything.
[03:54:49] <Blondie101010> that hack depends on your nginx config
[03:55:25] <entuland> is that specific to nginx? can you trick apache into processing a file with .png extension as .php?
[03:55:34] <toretto> But I'm not quite  sure if that'd work since the extention isn't php. But yeah, if the Nginx is badly configured, like ignoring the extentions, yeah, that'd be bad.
[03:55:42] <BadAdviceCat> toretto, https://www.php.net/manual/en/language.basic-syntax.phptags.php?who-cares-what-this-is-the-point-is-to-make-the-URL-end-with-DOT-PHP-to-trick-the-webserver-to-execute-the-picture-as-php-code.php
[03:55:43] <Blondie101010> entuland:  indeed it's not specific
[03:56:16] *** Joins: ferdna (~ferdna@user/ferdna)
[03:56:33] <__adrian> extensions are not authoritative (they don't _inherently_ mean anything)
[03:57:02] <entuland> weird... the querystring ending in .php is what is triggering the webserver into passing it to the PHP processor? or it peeks into the contents and does that due to the guts of the file?
[03:57:18] <Blondie101010> __adrian: hmmm, how would you tell the web service to call PHP or not?
[03:57:36] <__adrian> > _inherently_
[03:57:44] <Blondie101010> entuland:  the querystring is the problem
[03:57:52] <Blondie101010> the filename would be better
[03:58:16] <__adrian> you might make decisions based on the extention but the extention doesn't mean anything by itself
[03:58:37] <__adrian> toretto: on the php end, you need to validate your uploads. especially carefully if you plan to expose them to public access.
[04:00:56] <__adrian> e.g., don't check the file extention to decide whether it's an image. inspect the file _contents_; check its mime-type.
[04:01:25] <Blondie101010> and that the extension is no .php
[04:01:49] <__adrian> you shouldn't care what the extension is
[04:02:07] <__adrian> don't even bother checking. it can only lead you astray.
[04:02:15] <Blondie101010> mime validation could allow injection
[04:02:31] <__adrian> mm hm
[04:02:49] <__adrian> this is not _in place of_ proper server configuration
[04:03:02] * Blondie101010 nods
[04:03:53] <__adrian> but to that point, you might also want to strip exif data, adjust quality, etc.
[04:04:07] <__adrian> before storing it on your filesystem
[04:04:10] <entuland> so the server conf should take care of preventing the execution of anything in specific folders that are meant to hold the media, regardless of the filename (including the extension) and the content check should take care of rejecting the upload altogether if it doesn't match?
[04:04:36] <Blondie101010> definitely
[04:05:31] <entuland> okay
[04:10:40] *** Quits: TanoMarcelo (~TanoMarce@179.63.242.126) (Quit: WeeChat 3.1)
[04:10:58] <entuland> nice, works even without the querystring if configured improperly: https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/#passing-uncontrolled-requests-to-php
[04:13:31] <Blondie101010> good link
[04:17:27] <entuland> oh god, links like these make me never want to have to deal with web development again ahahahah https://www.onsecurity.io/blog/file-upload-checklist/
[04:17:34] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[04:17:54] <entuland> s/links/lists (but in the end doesn't make any difference)
[04:18:03] <__adrian> uploads are a big deal
[04:18:20] <__adrian> ...i actually like that checklist
[04:19:14] <entuland> oh the list looks good, what I don't like is that I have no idea whether I pass it :P
[04:20:03] *** Joins: TanoMarcelo (~TanoMarce@179.63.242.126)
[04:20:40] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[04:22:02] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 252 seconds)
[04:27:09] *** Joins: Alex123 (~Adium@cpe-172-249-100-115.socal.res.rr.com)
[04:48:52] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[04:53:12] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 252 seconds)
[04:57:20] <Sammitch> how much of that can I skip if I just dump straight into an S3 bucket?
[05:00:41] <entuland> the SVG one likely can't be skipped, as the script would end up in your resulting page
[05:01:58] <entuland> the filename one as well (although I don't know how it works exactly, and that's what I'm trying to find out right now)
[05:08:00] *** Quits: goddard (~goddard@user/goddard) (Remote host closed the connection)
[05:08:20] *** Joins: goddard (~goddard@user/goddard)
[05:30:24] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:34:26] *** Joins: vlm (~vlm@user/vlm)
[05:35:33] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[05:40:08] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 252 seconds)
[05:49:01] *** Quits: TanoMarcelo (~TanoMarce@179.63.242.126) (Quit: WeeChat 3.1)
[05:51:29] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[05:54:34] <__adrian> !+uploads are hard
[05:54:34] <php-bot> there are a lot of very important details to consider before you do file uploads. https://www.onsecurity.io/blog/file-upload-checklist/
[05:54:42] <__adrian> thx entuland
[05:55:08] *** Quits: Alex123 (~Adium@cpe-172-249-100-115.socal.res.rr.com) (Quit: Leaving.)
[05:55:10] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 252 seconds)
[05:55:50] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 258 seconds)
[05:57:15] *** Joins: Alex123 (~Adium@cpe-172-249-100-115.socal.res.rr.com)
[06:04:47] *** Quits: elycin_ (~elycin@ec2-54-163-129-255.compute-1.amazonaws.com) (Quit: ZNC 1.8.2 - https://znc.in)
[06:07:10] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[06:10:01] *** Quits: joedoe47 (~joedoe47@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 258 seconds)
[06:10:36] *** Joins: elycin (~elycin@ec2-54-163-129-255.compute-1.amazonaws.com)
[06:11:18] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 252 seconds)
[06:23:27] *** Joins: joedoe47 (~joedoe47@c-98-254-188-143.hsd1.fl.comcast.net)
[06:30:36] *** Joins: Rockwood (~Rocky@user/rocky)
[06:32:18] *** Quits: W8TVI (~W8TVI@2600:6c4a:5b00:7:b57f:d492:e525:cf79) (Ping timeout: 240 seconds)
[06:38:15] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[06:42:50] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 252 seconds)
[06:52:18] *** Quits: joedoe47 (~joedoe47@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 240 seconds)
[07:05:55] *** Joins: joedoe47 (~joedoe47@c-98-254-188-143.hsd1.fl.comcast.net)
[07:06:32] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 265 seconds)
[07:09:30] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[07:09:51] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[07:14:08] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 255 seconds)
[07:20:54] *** AmyMalik is now known as MelMalik
[07:23:42] *** Quits: Alex123 (~Adium@cpe-172-249-100-115.socal.res.rr.com) (Quit: Leaving.)
[07:25:31] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[07:30:13] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 265 seconds)
[07:35:41] *** Joins: jgrim (~jgrim@d60-65-211-197.col.wideopenwest.com)
[07:36:26] *** Quits: tone0 (~tone@071-011-252-111.res.spectrum.com) (Read error: Connection reset by peer)
[07:37:05] *** Joins: tone0 (~tone@071-011-252-111.res.spectrum.com)
[07:53:03] *** Joins: guidoc (~guido@host-79-43-249-191.retail.telecomitalia.it)
[08:10:36] *** Joins: W8TVI (~W8TVI@2600:6c4a:5b00:7:b57f:d492:e525:cf79)
[08:11:12] *** Quits: ferdna (~ferdna@user/ferdna) (Remote host closed the connection)
[08:24:12] <celphi> is there a way to force preg_match_all to return 1 dimensional array?
[08:26:44] <Blondie101010> https://www.php.net/manual/en/function.preg-match-all.php and pay attention to the flags
[08:26:58] <Rockwood> https://www.php.net/manual/en/pcre.constants.php
[08:28:00] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[08:28:06] <Rockwood> Blondie101010, preg_match_all commonly good for use?
[08:28:20] <__adrian> a flat array wouldn't really make sense (it would omit data). if you only care about one particular index, https://php.net/array_column might interest you
[08:28:26] <Blondie101010> you use what you need
[08:28:52] <Rockwood> yes but i mostly time confuse about those function
[08:29:17] <Rockwood> __adrian, hi how are you sir?
[08:29:35] <Rockwood> regex in PHP is harder stuff
[08:29:43] <Rockwood> i never used it
[08:29:49] <__adrian> hi
[08:30:02] <Rockwood> is good to use regex in PHP?
[08:30:10] <__adrian> ...? when you need regex
[08:30:29] <__adrian> why would "... in php" matter?
[08:30:51] <Rockwood> suppose we can validate string array what every you want
[08:31:10] <Rockwood> then words matching isn't use in backend
[08:31:17] <Rockwood> then words matching isn't useful in backend
[08:31:47] <Rockwood> my assumption  i am not sure about it
[08:32:15] <Rockwood> i think regex is useful for frontend
[08:32:28] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 252 seconds)
[08:33:03] <Rockwood> preg_match also part of regex i think
[08:33:46] <__adrian> i'm not sure what you mean by all that. sometimes using regex for validation is a fine idea, sometimes not. like i said, if you need it.
[08:33:59] <__adrian> the preg_* functions are tools for using regex, yes
[08:34:21] <__adrian> frontend vs. backend is not a factor
[08:34:34] <Rockwood> rarely i seen in
[08:35:06] <Rockwood> we can validate string normally in PHP
[08:35:31] <Rockwood> instead of regex
[08:35:44] <celphi> im looking at flags and i dont see my request listed
[08:35:50] <__adrian> that doesn't make sense
[08:36:13] <Rockwood> celphi, show the code first plz
[08:36:28] <__adrian> celphi: did you see my comment above?
[08:36:56] <celphi> __adrian: array_column on matches?
[08:37:01] <__adrian> yes
[08:37:12] <__adrian> assuming you're only interested in one given match
[08:37:15] <celphi> i would just use $args = $matches[0]; in that case
[08:37:25] *** Joins: tw2113 (~tw2113@2001-48F8-6-1318-D2AB-D5FF-FE77-2BD5-dynamic.midco.net)
[08:37:28] <celphi> i was hoping i wouldnt have to do that extra step
[08:37:28] <__adrian> no, that's entirely not what array_column does
[08:37:34] <celphi> yeah i know
[08:37:59] <__adrian> what do you want, exactly (what would you expect this "flat array" to contain)?
[08:38:52] *** Joins: P1RATEZ (piratez@user/p1ratez)
[08:39:19] <__adrian> "i would just use $args = $matches[0]"  implies you don't really want the "all" part of preg_match_all() in the first place
[08:39:26] <celphi> https://bpa.st/5UTQ
[08:39:35] <celphi> i need it to be greedy
[08:40:24] <celphi> ie. /user/add/phonenumber/1234567890
[08:40:40] <celphi> right now i have to use $matches[0]
[08:40:45] <Rockwood> then?
[08:41:25] <celphi> well seems kinda ghetto to have to use $matches[0] as a variable
[08:41:51] <celphi> so was hoping there was a way to make it cleaner - but i guess i just have to assign to another var
[08:42:17] <tw2113> that's ghetto?
[08:42:25] <celphi> :P
[08:42:26] <Rockwood> tw2113, o/
[08:43:33] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[08:43:49] <Byteflux> If you don't like the way the function generates results, you can always wrap it in your own, but this seems like an unimportant thing.
[08:43:50] <__adrian> ...i don't follow how "i need it to be greedy" lines up with that example and comment
[08:44:07] <__adrian> can you make a 3v4l with a working example?
[08:44:14] <celphi> i need the regex to be greedy so im using preg_match_all and not preg_match
[08:44:29] <Blondie101010> no
[08:44:41] <__adrian> that's not what "greedy" means
[08:44:41] <Blondie101010> they apply the same regex engine and rules
[08:44:50] <Byteflux> That's not what greedy means in regex.
[08:44:51] <celphi> i get different results
[08:44:54] <Blondie101010> https://3v4l.org/WpiqX
[08:45:08] <__adrian> yes, you would
[08:45:12] <Byteflux> When you say greedy, that word has a very specific meaning in regular expressions and it has nothing to do with preg_match_all()
[08:45:14] <__adrian> but that doesn't tell me what you actually want
[08:45:34] <celphi> i want all /(THIS)/(THIS)/(THIS)
[08:45:37] <celphi> in an array
[08:45:45] <celphi> Blondie101010: examples shows my issue
[08:45:52] <Byteflux> It sounds more like you want a preg_split() any how.
[08:45:58] <tw2113> exploded by a delimiter of /
[08:46:06] <celphi> cant split on /
[08:46:11] <__adrian> why
[08:46:11] <Byteflux> Probably preg_split if you want to catch repeating delimiters.
[08:46:14] <celphi> bc the first item is /
[08:46:15] <Byteflux> Why can't you split on /?
[08:46:17] <__adrian> so?
[08:46:29] <celphi> then i have to do another function to remove
[08:46:31] <celphi> also
[08:46:37] <celphi> if user does // in url
[08:46:41] <celphi> it breaks
[08:47:01] <Byteflux> $segments = preg_split('!/+!', '/foo/bar/baz');
[08:47:25] <__adrian> https://php.net/array_filter
[08:48:16] <Byteflux> explode() with array_filter() to exclude empty splits also works too.
[08:48:45] <__adrian> aside:  /user/add/phonenumber/1234567890  is nuts.  POST /user/<USER_ID> {"phonenumber": "1234567890"}
[08:49:03] <celphi> then where would the aaction go
[08:49:09] <Byteflux> POST
[08:49:11] <Byteflux> right there.
[08:49:14] <__adrian> the verb+url  IS  the action
[08:49:29] <Byteflux> what do you think POST means in this context?
[08:49:33] <Byteflux> it has a semantic purpose
[08:49:33] <__adrian> POST user/<id>
[08:49:45] <celphi> POST === INSERT and UPDATE?
[08:49:51] <Byteflux> it can, sure.
[08:49:56] <__adrian> post = i'm giving you data to do something
[08:50:02] <Byteflux> whether it's insert or update depends on /user vs /user/ID
[08:50:10] <Byteflux> usually.
[08:50:11] <__adrian> it might be something else too
[08:50:52] <celphi> so then use GET if I want to view user?
[08:50:56] <__adrian> yes
[08:51:02] <__adrian> GET /user/<id>
[08:51:07] <Byteflux> `POST /user` => create user.  `POST /user/123` => update user with ID 123
[08:51:09] <celphi> interesting
[08:51:19] <celphi> i like that
[08:51:19] <__adrian> this is stuff you should know  ;)
[08:51:35] <celphi> ive always done it differently- trying to do it right way
[08:51:58] <__adrian> https://en.wikipedia.org/wiki/Representational_state_transfer
[08:51:59] <celphi> ie json object using action: 'update' or whatever
[08:52:14] <Byteflux> Having deja vu moment, feels like we went over this :P
[08:52:31] <__adrian> when you see a payload that includes a parameter "action" it means the developer failed to account for some use case
[08:53:04] <celphi> yeah we did breifly and i was very tired.
[08:53:14] <__adrian> anyway, read up, definitely something you need to know
[08:53:16] <__adrian> night
[08:53:22] <celphi> im going to read that article ty
[08:53:26] <__adrian> welcome
[08:59:26] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[08:59:28] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[09:04:00] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 252 seconds)
[09:10:03] <celphi> how would that work if im doing both an update and create on same page
[09:10:14] <celphi> or update and delete on same page
[09:11:51] <celphi> or how would it work if im adding multiple values?
[09:12:54] <celphi> POST `/user/<name><address><billing adress>`
[09:13:11] <celphi> i guess i could use JSON
[09:13:53] <celphi> POST `/user/{name: 'celphi', address: '123 lost way', billing_address: '123 lost way'}`
[09:14:10] *** Joins: genomc (uid245282@id-245282.stonehaven.irccloud.com)
[09:29:47] <Byteflux> celphi: Semantically makes no sense. 'POST /user' with a request body containing JSON is for creating a "user" and 'POST /user/123' also with a JSON request body is for updating a "user" ... you're either creating a user or updating a user. You're not really creating and updating a user at the same time.
[09:30:53] <Byteflux> Maybe internally that's what you're doing, but not really how it should appear as far as the REST API goes.
[09:31:42] <Byteflux> If you need to update a user to have a specific address, you should be sending that JSON data as part of the request body, not the URL.
[09:32:29] <Byteflux> `POST /user/123` with Content-Type: application/json and Request Body {"address": "whatever"}
[09:34:50] <Byteflux> You should also familiarize yourself with the structure of a HTTP message, might help understand this a bit better.
[09:35:33] <celphi> k
[09:40:01] *** Quits: dlundgren (~dlundgren@75-9-109-251.lightspeed.milwwi.sbcglobal.net) (Quit: dlundgren)
[09:44:29] *** Quits: P1RATEZ (piratez@user/p1ratez) (Remote host closed the connection)
[09:56:03] *** Joins: jetchisel (jetchisel@user/jetchisel)
[09:56:26] *** Quits: goddard (~goddard@user/goddard) (Ping timeout: 252 seconds)
[09:57:11] *** Joins: Alex123 (~Adium@cpe-172-249-100-115.socal.res.rr.com)
[09:57:45] *** Quits: Alex123 (~Adium@cpe-172-249-100-115.socal.res.rr.com) (Client Quit)
[10:00:35] *** Joins: Akimb (~Akimb@86.100.13.100)
[10:15:56] *** Quits: tw2113 (~tw2113@2001-48F8-6-1318-D2AB-D5FF-FE77-2BD5-dynamic.midco.net) (Quit: Leaving)
[10:43:45] <celphi> Byteflux: in your exampl of `POST /user` why even bother with `POST /user/123`? couldnt I just achieve both with the former with the body json { id: 123 }
[10:46:07] <Byteflux> celphi: You could, yes... but it makes more sense to keep each endpoint separate and single-purpose. So `POST /user` => Create, `GET /user/123` => Read, `POST /user/123` => Update, `DELETE /user/123` => Delete
[10:46:35] <celphi> k
[10:46:44] <celphi> thnx for explanation
[10:49:26] <Byteflux> One endpoint for each CRUD operation just makes everything simpler and it's more meaningful that way too
[10:50:56] <celphi> k
[10:51:41] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[10:56:05] <celphi> i wish `list` assigned null to values not defined
[10:57:30] <celphi> i guess this works `list($one, $two) = array_pad($arr, 2, null);`
[10:59:51] <Naktibalda> you can use array_shift to take values from beginning of array instead
[11:00:27] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[11:01:17] <Byteflux> If you know it's going to be either one or two values and you want to ensure the second is null if absent, probably just `$one = $arr[0]; $two = $arr[1] ?? null;` clearly conveys that
[11:02:03] <Byteflux> Trying to be too fancy can end up obscuring intention
[11:02:22] <celphi> it could be both are empty,. so im assuming my solution works right?
[11:02:59] <Byteflux> yeah probably
[11:04:51] *** Joins: jgrim9 (~jgrim@d60-65-211-197.col.wideopenwest.com)
[11:04:59] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 255 seconds)
[11:05:36] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[11:07:54] *** Joins: stenno (~stenno@user/stenno)
[11:08:41] *** Quits: jgrim (~jgrim@d60-65-211-197.col.wideopenwest.com) (Ping timeout: 265 seconds)
[11:08:41] *** jgrim9 is now known as jgrim
[11:10:25] *** Quits: guidoc (~guido@host-79-43-249-191.retail.telecomitalia.it) (Quit: WeeChat 3.2)
[11:12:10] *** Joins: nucc1 (~nucc1@user/nucc1)
[11:20:41] *** Quits: nucc1 (~nucc1@user/nucc1) (Ping timeout: 252 seconds)
[11:34:35] *** Joins: guidoc (~guido@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f)
[11:47:23] *** Joins: ianthrive (~ianthrive@166.70.94.161)
[12:08:36] <ianthrive> Any ideas why on first run I get "PHP Deprecated: Required parameter follows optional parameter"... and "PHP Fatal error:  Uncaught ErrorException: Required parameter follows optional parameter", but then on every subsequent run it works fine no errors at all. Until I restart php-fpm then first run gives same error, but subsequent runs are fine.
[12:09:12] <ianthrive> v 8.0.8
[12:25:20] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[12:25:40] <Kartagis> What does : void as in public function generateContent(string $content) : void mean?
[12:26:28] <ss23> It's the return type, void means "nothing returned"
[12:29:58] <Kartagis> What't point of stating it there?
[12:30:33] <Kartagis> What's the point*
[12:43:55] <stenno> being explicit is never bad
[12:44:08] <ss23> Believe it stops you returning something, so it's just another way of enforcing correctness
[12:44:11] <stenno> it helps your IDE and yourself
[12:44:35] <Byteflux> 1) good for static analysis 2) good for documentation 3) can be enforced with declare(strict_types=1);
[12:44:41] <stenno> with strict_types enabled it throws
[12:44:44] <stenno> yes
[12:45:02] <stenno> without declaration it would automatically coerce into void?
[12:47:14] <Byteflux> maybe more like coerce into null
[12:47:20] <stenno> well yeah
[12:47:26] <Byteflux> but yeah
[12:47:41] <stenno> oh no it throws too
[12:47:47] <Byteflux> return null in a func declared with a void return type would throw
[12:47:49] <stenno> at least on 3v4l.org
[12:48:01] <stenno> Fatal error: A void function must not return a value in /in/aSFvP on line 3
[12:48:08] *** Quits: fstd (~fstd@xdsl-85-197-59-162.nc.de) (Remote host closed the connection)
[12:48:09] <stenno> even without strict_types
[12:48:15] *** Joins: fstd (~fstd@xdsl-85-197-59-162.nc.de)
[12:48:42] <Byteflux> doesn't throw for me, unless mine is broken
[12:49:02] <Byteflux> definitely throws when the return type is declared void and strict_types=1
[12:49:08] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 252 seconds)
[12:49:08] <Byteflux> oh but let me try with it off, oops
[12:49:27] <stenno> maybe 3v4l behaves differentt here with regard to declare
[12:49:38] <Byteflux> nah, i guess it's because void can't be coerced
[12:49:43] <stenno> https://3v4l.org/aSFvP
[12:49:44] <Byteflux> it throws for me too but only for void
[12:49:51] <stenno> ah right, makes sense
[12:49:53] <stenno> -ish
[12:50:18] <Byteflux> well actually throws for array too :P
[12:50:45] <Byteflux> maybe has to do with scalar vs compound types
[12:51:18] <Byteflux> scalars can be coerced
[12:51:37] <stenno> yeah what would `23` be coerced to array
[12:51:41] <stenno> [23] ?
[12:51:47] <stenno> makes sense too
[12:52:10] <Byteflux> nope, you can cast it
[12:52:15] <Byteflux> but it won't be coerced, seems to throw
[12:53:53] <Byteflux> function test(): array { return 1; } // errors even with strict_types off. but `return (array) 1;` works and produces [1]
[12:56:02] <stenno> hmm
[12:56:04] <stenno> strange
[12:56:36] <biberu> i'm not sure i like either of those, but at least the second one seems intentional, the first one seems more likely to be a bug that requires attention
[12:56:49] *** Joins: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:80c0:ff1d:f199:aec5)
[12:56:57] <stenno> yeah it sounds a bug
[12:57:30] <Byteflux> seems intentional
[12:57:33] <Byteflux> "When strict_types is not enabled, scalar type declarations are subject to limited implicit type coercions."
[12:57:50] <Byteflux> so the fact that coercion only happens with scalars is intentional
[12:58:42] <biberu> as in bug by the developer who wrote the problematic code, not by php
[12:58:48] <Byteflux> which means if a compound type is declared but a scalar is received, then coercion doesn't happen and you're forced to deal with the type error
[13:00:19] <biberu> Byteflux: example?
[13:00:43] <Byteflux> like the one above
[13:00:47] <stenno> https://3v4l.org/dp3gG
[13:00:51] <stenno> biberu: ^
[13:01:19] <Byteflux> yeah, strict_types = off but you still get a type error because of the declaration
[13:01:33] <biberu> stenno: that's clearly something the developer should look at
[13:01:43] <Byteflux> because coercion only happens if 1) strict types is off and 2) the types involved are both scalars
[13:01:57] <Byteflux> it's just more surprising that it's enforce when strict types are disabled
[13:02:05] <biberu> even if it coerced in that situation i think it'd be likely to hide a bug
[13:02:08] <Byteflux> but kind makes sense i guess.
[13:02:15] <Byteflux> yeah, coercing it in that situation seems more dangerous
[13:02:28] *** Quits: ianthrive (~ianthrive@166.70.94.161) (Quit: Textual IRC Client: www.textualapp.com)
[13:02:33] <stenno> hot(?) take: strict_types should be on by default
[13:02:46] <stenno> otherwise it will lead to hard-to-debug errors
[13:03:14] <biberu> stenno: preaching to the choir
[13:03:19] <stenno> :)
[13:03:21] <Byteflux> yeah not sure if really that hot of a take haha
[13:03:35] <stenno> well apparently it is for the php language designers
[13:03:45] <stenno> otherwise it would be on by default
[13:04:02] <Byteflux> perhaps it will come true in php 9 or php 10 :)
[13:04:08] <biberu> well, you've got to consider existing code and cultural changes
[13:04:19] <Byteflux> yeah it takes a long time to make that kind of move
[13:04:41] <stenno> did the 'enforcing' part come _after_ type declarations in general?
[13:05:52] <biberu> there's probably some vision about what php should be in the long run too, there are plenty of good static languages for people who want to use those, it's more problematic for those who are working on projects using php and can't move (jobs, tech) even if they'd like to
[13:09:35] <stenno> yeah i heard the same attitude towards js too
[13:09:47] <stenno> wrt typescript
[13:10:21] <stenno> i mean i guess its a fair point
[13:10:59] <stenno> its the question what php really has to offer apart from loose typing
[13:11:07] <stenno> a large ecosystem?
[13:11:54] <stenno> or rather why would i use php with strict typing and not an actually strictly typed language
[13:12:13] <stenno> in JS you have the eventloop which is a killer feature for me
[13:15:44] <biberu> indeed, desires to make large, existing projects easier and safer to work with will probably drive change, and negotiate with the dynamic side, if someone wants static typing from the start they can just pick something else
[13:17:18] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:24:59] *** Joins: omegatron (~some@p5484990d.dip0.t-ipconnect.de)
[13:27:03] <Naktibalda> PHP has frameworks with event loop implementation
[13:27:22] <stenno> yes
[13:27:42] <stenno> but its not integral part of the language
[13:27:48] <stenno> its like python asyncio
[13:28:39] <stenno> i looked at reactphp yesterday
[13:33:40] <biberu> the event loop is pretty much an anti feature for me, especially on the server side
[13:34:10] <biberu> not something i like the language to dicate
[13:34:36] <biberu> stenno ^
[13:34:52] <stenno> ok?
[13:35:12] <stenno> so you prefer blocking IO in a single-threaded language?
[13:36:10] <Naktibalda> I bet Node.JS channel does not receive question "how to keep processing request data for 3 minutes after sending response
[13:36:31] <stenno> really cool to be able to just do something else waiting for the http request to finish
[13:36:41] <stenno> Naktibalda: nope
[13:37:11] *** Joins: olle (~olle@p578524f9.dip0.t-ipconnect.de)
[13:37:30] <biberu> stenno: i prefer to have the option for real parallelism
[13:39:00] <biberu> Naktibalda: people who subject themselves to js probably have darker desires than that ^^
[13:41:19] <stenno> a php person trash-talking JS, o tempora o mores
[13:42:25] <biberu> stenno: i use a bunch of languages
[13:42:50] <stenno> inb4 'what is {}+[]'
[13:42:53] <stenno> ah
[13:42:57] *** Joins: fernandos (~fernandos@194.107.178.219)
[13:44:17] <biberu> even js, but i wouldn't choose it for an application / something that a team would have to maintain and evolve
[13:52:43] *** Quits: W8TVI (~W8TVI@2600:6c4a:5b00:7:b57f:d492:e525:cf79) (Ping timeout: 250 seconds)
[13:52:53] <stenno> what woudl you choose
[13:53:08] <stenno> i heard good things about Rust
[13:55:03] <freeman_h> hi all is they a built in php method to convert multidimensional array to object? seen pdo fetchAll(/PDO::FETCH_OBJ) is eprecated
[13:55:07] <freeman_h> deprecated *
[13:55:14] <stenno> idk how well rust does when it comes to webserver
[13:55:32] <stenno> pdo fetchall is for database queries
[13:56:49] <AllenJB> freeman_h: What makes you think PDO::FETCH_OBJ is deprecated?
[14:01:33] <biberu> stenno: depends on the task, the rest of the team / who's going to inherit it, the market etc., but generally i'll try to use something statically typed, and preferably something that can be used in a functional way. around here .net is popular for web, which means a lot of the time i can use c# or f#, and ts is usually expected instead of js
[14:01:50] <stenno> .net is great
[14:02:10] <stenno> c# is great, f# looks great (didn't use it yet but it's very attractive)
[14:02:18] <stenno> bought re: TS vs JS
[14:03:50] <stenno> dunno how much you are forced on the MS stack using .NET nowadays
[14:04:21] <biberu> .net core/5/6 are cross platform
[14:04:22] <stenno> like do you still basically need VS to program it
[14:04:27] <fernandos> <stenno> you could try, rust is not a bad language, but it has some issues like long compilation time, big binary
[14:04:29] <stenno> with mssql
[14:04:39] <biberu> sql server runs on linux
[14:04:54] <biberu> ofc you can use other databases too
[14:05:13] <stenno> right
[14:05:19] <AllenJB> freeman_h: I'm about 99.999999% certain PDO::FETCH_OBJ is not deprecated (and I follow internals / RFCs). If you're getting a deprecation message from PHP, it's about something else. If you post the full error message and the code that caused it, we may be able to help
[14:05:22] <freeman_h> AllenJB, \PDO::FETCH_OBJ is not deprecated but the method to use it is
[14:05:28] <biberu> visual studio is windows only, there is e.g. rider, but i haven't tried it myself so can't say anything about it
[14:06:02] <stenno> back then (~2012) you basically _needed_ VS to handle .NET projects
[14:06:19] <biberu> stenno: https://www.jetbrains.com/rider/
[14:06:20] <stenno> there were shitty foss CLI tools
[14:06:25] <stenno> ah jetbrains
[14:08:10] <fernandos> You could use any editor you want. I believe even vscode can handle .net projects
[14:09:14] <biberu> well, you want proper debugging, profiling etc
[14:10:06] <stenno> with the intellithingy
[14:10:11] <stenno> intellisense?
[14:10:30] <biberu> yes
[14:11:13] <stenno> has been ~10 years when i was last in the .NET ecosystem
[14:11:40] <stenno> think i left when they FOSSed .NET core
[14:11:40] <fernandos> you still can use vscode or rider
[14:11:40] <biberu> things have happened since then ^^
[14:11:48] <stenno> yep
[14:12:04] <stenno> said that quite some times already, but MS really, really improved in the last decade
[14:13:27] <omegatron> yeah and we have flying pigs in the sky ..
[14:14:03] <fernandos> yep, M$ server was loosing linux, and they developed crossplatform .net core
[14:14:30] <stenno> they did a lot of things
[14:14:39] <stenno> vscode is the de-facto general-purpose editor
[14:14:56] <stenno> WSL
[14:15:00] <omegatron> sure ...
[14:15:01] <stenno> Terminal
[14:15:24] <stenno> even minecraft...
[14:15:43] <AllenJB> This discussion is going on quite a bit and doesn't appear to be PHP related, could you take it elsewhere (such as #phpc please)
[14:16:00] <omegatron> yes, please
[14:16:01] <stenno> fair
[14:16:17] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[14:19:09] <freeman_h> AllenJB, did you see my message?
[14:19:18] <AllenJB> freeman_h: I just tested in PHP 8.0 and fetchAll with FETCH_OBJ (when using MySQL) is not giving me a deprecation error. I don't have 8.1 but I don't see any specific RFC for such a deprecation and it's not in the 8.1 deprecations RFC either.
[14:20:55] <AllenJB> So my question remains - exactly what do you think is deprecated and why? (Show us the code and error message, or other source for your query)
[14:22:55] *** Joins: arash (~arash@2a01:5ec0:b803:c654:c1a:9bb9:3664:e8e4)
[14:23:14] <Naktibalda> PDO::FETCH_SERIALIZE will be deprecated in 8.1, I had no idea that such fetch mode exists
[14:23:49] <arash> Hello, can anyone explain what "=&" and "&=" means ?
[14:24:18] <Naktibalda> arash =& is assingment by reference &= is shorthand bitwise & operator
[14:24:47] <TinoDidriksen> =& is not an operator. It's just = &$var
[14:24:50] <freeman_h> https://github.com/doctrine/dbal/blob/3.1.x/src/Statement.php look for @deprecated I am not sure if this is doctrine related has I am usign doctrine but with complex query I am using pdo and my php storm is saying that fetchAll and fetchOne are deprecated
[14:25:34] <Naktibalda> freeman_h: the one that says that execute method is deprecated?
[14:26:31] <freeman_h> Naktibalda, yes also fetchOne FetchAll setFetchMode, etc
[14:26:32] <freeman_h>  @deprecated Statement::execute() is deprecated, use Statement::executeQuery() or executeStatement() instead
[14:26:34] <biberu> while($i --> 0) ;)
[14:26:56] <arash> Naktibalda, I don't exactly understand it. for example what is is the difference between $a = $b; and $a =& $b; ?
[14:27:25] <Naktibalda> arash: !+references
[14:27:25] <php-bot> arash, PHP references are variable aliases, allowing multiple distinct variables to write to the same value. Don't use references unless you require its functionnality. i.e. don't use them for memory optimizations. http://php.net/references
[14:27:58] <s17> $a =& $b; # means changing the value of $a will also change the value of $b, correct?
[14:28:10] <Naktibalda> freeman_h: looks like Doctrine depreciations, I don't see fetch methods in that file
[14:29:48] <arash> Naktibalda, s17 i see. thank you
[14:30:21] <s17> reference means it references the address in memory where the value of $b is
[14:30:28] *** Joins: dlundgren (~dlundgren@75-9-109-251.lightspeed.milwwi.sbcglobal.net)
[14:31:50] <arash> s17, i think i understand it. what about &= ? can you give me an example for using "&=" ?
[14:32:52] <s17> look into doing math with binary values, maybe that can help you understand
[14:33:38] <s17> https://en.wikipedia.org/wiki/Bitwise_operation#AND
[14:34:40] <arash> s17 thank you
[14:44:49] *** Joins: delboy1978uk (~delboy197@109.132.42.202)
[14:44:59] <delboy1978uk> morning
[14:45:01] <delboy1978uk> o/
[14:45:08] <delboy1978uk> !+tail
[14:45:09] <php-bot> For the best error logging experience, set error_reporting to -1, turn display_errors off, and set a custom error_log. Then in the terminal, type 'tail -f /path/to/error_log'. Your notices, warnings and errors will now scroll past in real time, without distorting your web page's display.
[14:58:19] *** Joins: gefd (~Geoff@user/gefd)
[15:09:44] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[15:10:21] <no_gravity> PHP should get an "echol" command that adds a newline to the text.
[15:12:51] <TinoDidriksen> Eh. echo ... , "\n"; works quite fine.
[15:13:33] <no_gravity> TinoDidriksen: It works. My codebase is full of it. The question is if it is "fine" enough.
[15:17:36] <celphi> finished my custom router
[15:17:52] <celphi> anyone can give some feedback?
[15:17:54] <celphi> https://bpa.st/SLNQ
[15:18:42] <stenno> isn't there an EOL constant in php?
[15:19:00] <stenno> PHP_EOL
[15:19:01] <no_gravity> celphi: "custom router"?
[15:19:17] <celphi> yes. route url
[15:19:24] <celphi> i made it
[15:19:49] <no_gravity> celphi: It seems to be something related to Symfony.
[15:19:50] <stenno> echol = fn($str) => $str . PHP_EOL;
[15:19:53] <stenno> thank me later
[15:20:02] <stenno> echol = fn($str) => echo($str . PHP_EOL);
[15:20:07] <celphi> no_gravity: ignore that part i could have just as easily used parse_url
[15:20:28] <no_gravity> celphi: Would have to see how you use it.
[15:20:42] <celphi> what do you mean?
[15:21:08] <no_gravity> celphi: You say "Here is my custom router": I say "custom router?". Meaning: What is this? What is it for?
[15:21:32] <celphi> it reads URL and runs class methods based on URL
[15:22:10] <no_gravity> celphi: Well, so far it only declares a class. It does nothing on its own. So the actual router is in some other file. Utilizing this class somehow.
[15:22:17] <no_gravity> celphi: Ah no!
[15:22:21] <celphi> ...
[15:22:39] <no_gravity> celphi: Funny, my eyes are trained to start reading ad "class ..." so I skipped the main part :)
[15:22:48] <celphi> :P
[15:23:17] *** Joins: entuland (~entuland@user/entuland)
[15:24:24] <no_gravity> celphi: From how I read it, the name "lookup()" does not describe very well what this function does.
[15:24:36] <celphi> what would you call it?
[15:24:54] <celphi> it's looking up the class from `/user/454`
[15:25:05] <celphi> would be example url
[15:25:16] <celphi> the class "user" would be used
[15:25:58] <no_gravity> celphi: Yes, that is line 74. But it has more lines and the most important seems to be 83.
[15:26:10] *** Quits: guidoc (~guido@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f) (Quit: WeeChat 3.2)
[15:26:38] <celphi> so - should i call it run_action?
[15:27:38] <no_gravity> celphi: I would make the whole class static and replace line 14+15 with Route::execute()
[15:27:57] <no_gravity> celphi: Where execute() does everything you do in line 8-15
[15:28:52] <celphi> when you say make whole class static are you saying make the methods static?
[15:29:07] <no_gravity> celphi: Yes. And the variables.
[15:30:00] <celphi> ok let me see what i can do
[15:30:24] <no_gravity> celphi: You probably never need more than one instance of the Router.
[15:31:07] <celphi> right
[15:31:41] <no_gravity> celphi: But be prepared to be a round peg in a square hole then: https://www.youtube.com/watch?v=2hZTpZrrDbY
[15:32:00] <no_gravity> celphi: As the status quo is to use objects for everything.
[15:32:51] <no_gravity> celphi: Except you manage to declare your way as "progressive" and get praise for it. Like Laravel did by calling their static classes "Facades".
[15:33:08] <celphi> do what?
[15:33:24] <no_gravity> celphi: What?
[15:33:47] <celphi> im not looking for praise im looking for what i did wrong- it's my first time writing a router in php
[15:33:57] <celphi> in past ive always used old methods
[15:34:01] <no_gravity> celphi: Yeah. Good job so far.
[15:34:18] <no_gravity> I wrote a bunch over the last 15 years :)
[15:34:38] <celphi> kool ty for feedback
[15:35:09] <celphi> what you call the lookup function?
[15:35:53] <no_gravity> celphi: In my latest router?
[15:36:15] <celphi> no in my example
[15:36:54] <no_gravity> celphi: I call it route(). So I would probably call it route() in yours too :)
[15:36:59] <no_gravity> Router::route()
[15:37:14] <Naktibalda> automatically mapping url fragment to class name was popular ir late naughties, it seems that it is much more popular to explicitly declare all routes nowadays.
[15:37:21] <no_gravity> ^ Would replace liines 8-15 in your example.
[15:37:38] <no_gravity> Naktibalda: Yeah, that is what I do these days too.
[15:37:56] <stenno> convention over configuration is the devil
[15:38:05] <stenno> and a mapping like that is that
[15:38:31] <Naktibalda> except when it was the best thing
[15:38:31] <no_gravity> Naktibalda: But if you have one directory with "public" urls, nothing wrong by automatically mapping urls to those.
[15:38:43] <no_gravity> Naktibalda: With one file per public url I mean.
[15:38:45] <stenno> Naktibalda: it was the best thing when rails was big
[15:38:54] <stenno> because rails is a case study in that
[15:39:10] <celphi> no_gravity: which variables would i make static?
[15:39:19] <celphi> just the $this ones?
[15:39:56] <no_gravity> celphi: Yeah, $this-> becomes static:: and public becomes static.
[15:40:55] <celphi> wouldnt i keep the public part?
[15:41:25] <Naktibalda> celphi: printing JSON is not the job of Router class
[15:41:44] <no_gravity> celphi: Yes. "public static function..."
[15:42:03] <celphi> Naktibalda: then how does it handle invalid urls?
[15:45:59] <Naktibalda> you could call InvalidAction class
[15:46:36] <celphi> $this->class would be self::class?
[15:47:05] <celphi> self::$class
[15:47:14] <no_gravity> celphi: Yup
[15:47:21] <no_gravity> celphi: No
[15:47:25] <no_gravity> celphi: static::$class
[15:49:34] <no_gravity> celphi: You will have to sanitize the urls or you have a security hole when the url contains characters like dots.
[15:50:17] <Naktibalda> I don't see why you need class properties at all, just pass all parameters to method.
[15:50:28] <no_gravity> celphi: Maybe your Symfony calls do that already. I dunno.
[15:50:50] <Naktibalda> no_gravity: he explodes on / so there is attacker can't backtrace
[15:50:56] <Naktibalda> no_gravity: he explodes on / so attacker can't backtrace
[15:51:02] <no_gravity> Naktibalda: I see.
[15:52:02] <no_gravity> Naktibalda: What about dots? They could still be dangerous the way I read the code.
[15:52:09] *** Joins: guidoc (~guido@host-79-43-249-191.retail.telecomitalia.it)
[15:52:15] <no_gravity> Naktibalda: I would not be comfortable with it unless it whitelists allowed chars.
[15:52:34] <celphi> i use FallbackResource to index.php
[15:52:45] <Naktibalda> it would check if the file named ...php exists
[15:52:50] <celphi> the url does nothing - it's just a string i process
[15:53:29] <no_gravity> Naktibalda: True.
[15:53:33] <celphi> oh i see
[15:53:47] <celphi> good catch
[15:54:37] <celphi> then i think im going to stick to preg_match over preg_split
[15:55:41] <Naktibalda> so this is RestRouter, because it decides action based on HTTP method
[15:56:10] <celphi> i like that name!
[15:56:56] <no_gravity> celphi: I think you can get rid of Symfony completely and just use $_SERVER['REQUEST_URI']
[15:56:59] <celphi> how does constructor run when you use static methods
[15:57:05] <celphi> ya i plan to
[15:57:19] <celphi> its old code i was playing with earlier
[15:57:40] <stenno> are you building a server-side framework?
[15:57:45] <stenno> programming
[15:57:46] <celphi> yes
[15:57:54] <no_gravity> celphi: No, there is no constructor involved when using static functions.
[15:58:12] <celphi> so where would i put my code from my constructor?
[15:58:16] <no_gravity> celphi: As Naktibalda said, you probably do not need any class variables at all.
[15:58:27] <no_gravity> celphi: Just do it all in Router::route()
[15:59:40] <no_gravity> If we continue along this path for a few hours, we will have a really good router :)
[15:59:50] <celphi> :D
[16:00:03] <celphi> it's all learning for me
[16:00:15] <stenno> sounds like one hell of a project ngl
[16:01:05] <stenno> if you want to learn, did you look at existing solutions like e.g. symfony microkernels or slim?
[16:01:18] <no_gravity> celphi: Everyone here helping you is probably a $XXX/hour coder. So when your router is finished (and will probably have only 10 lines by then) it has burned through a thousand dollars of manpower :)
[16:01:30] <celphi> i looked at symfony http component
[16:01:48] <celphi> lol
[16:03:31] <Naktibalda> celphi: have you seen https://symfony.com/doc/current/create_framework/index.html ?
[16:04:58] <celphi> ya that was site i was at
[16:05:03] <no_gravity> Naktibalda: I would like to create my own framework because it will be more modular and elegant than Symfony.
[16:05:27] <celphi> it's more to learn how it works and to appreicate more what frameworks offer
[16:05:41] <stenno> no_gravity: have you read through symfony library code to be able to make that assessment?
[16:06:00] <stenno> 'create your own framework' is _usually_ at best a timesink
[16:06:25] *** Joins: zibby15 (~androirc@user/zibby15)
[16:06:35] <stenno> don't wanna discourage you from figuring stuff out yourself, but you should at least read through existing solutions first
[16:06:46] <da_wunder> ^
[16:06:51] <no_gravity> stenno: Not only have I read their code but did quite a lot of experimentation of using Symfony components individually.
[16:07:08] <stenno> what is the non-elegant part of SF?
[16:07:18] <da_wunder> I would like to hear that too
[16:07:34] <no_gravity> Too much magic, too hard to use individual components.
[16:07:58] <da_wunder> individual components !== framework
[16:08:46] <da_wunder> if you're using symfony framework - you should be able to use all those components without any problems
[16:08:46] <no_gravity> da_wunder: I disagree. For me, the right approach to frameworks is to make them a collection of modules that can be used individually or in concert.
[16:09:17] <da_wunder> if you're using symfony framework, which component was hard to use - if I may ask?
[16:10:28] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[16:10:48] <no_gravity> da_wunder: It has been a while but I think I tried the routing and the templating when Symfony 5 came out.
[16:12:05] <da_wunder> those are configured automatically if you use website-skeleton to start your application - composer create-project symfony/website-skeleton your-project
[16:12:44] <da_wunder> and if I remember routing is also included to normal skeleton - only twig is missing - but you could just install it and flex will configure that automatically for you
[16:12:47] <no_gravity> da_wunder: After which you have dozens of files in your repo and thousands of files in your vendor dir. That is not the type of "routing module" I want.
[16:13:17] <da_wunder> then use the pure skeleton and start to add components that you need one by one when you need those
[16:13:51] <no_gravity> da_wunder: As I said, I did a few "start with empty dir and grow it to what is needed" projects using Symfony components.
[16:14:01] <no_gravity> da_wunder: A routing module should be something like celphi is writing. A single php file.
[16:14:02] <da_wunder> `composer create-project symfony/skeleton your-project` is the minimal symfony framework which have all the base goodies already configured and working
[16:14:48] <celphi> yeah im just trying to build my own piece by piece first instead a block of abstractions that make no sense to me
[16:15:08] <celphi> *instead of downloading
[16:15:35] <no_gravity> celphi: Word of encouragement: This is exactly why and how I built all my software and it is used by hundreds of thousands of people now.
[16:15:40] *** Quits: yuckey2d (~yuckey2d@66.115.145.202) (Read error: Connection reset by peer)
[16:16:04] *** Joins: yuckey2d (~yuckey2d@66.115.145.202)
[16:16:13] <celphi> that's awesome!
[16:18:30] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 252 seconds)
[16:19:16] *** Joins: dimi1947 (~dimi1947@2a02:1388:85:3ce2:d83c:8c6c:a996:fed0)
[16:19:28] *** Quits: dimi1947 (~dimi1947@2a02:1388:85:3ce2:d83c:8c6c:a996:fed0) (Read error: Connection reset by peer)
[16:26:11] *** Joins: stenno (~stenno@user/stenno)
[16:47:55] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[16:52:29] *** Quits: arash (~arash@2a01:5ec0:b803:c654:c1a:9bb9:3664:e8e4) (Ping timeout: 268 seconds)
[16:54:11] *** Joins: paule32 (~paule32@user/paule32)
[16:54:32] <paule32> hello, i have a question on basis of this script:  https://dpaste.com/35VVNMUY8
[16:55:15] <paule32> how, can i get the array-value from line:69..
[16:55:37] <paule32> and, add a $methode to the this array
[16:56:15] <Naktibalda> do you mean that you want to add one more line after line 78?
[16:56:38] <paule32> ehm no,
[16:56:48] <paule32> "onclick" is the key
[16:56:55] <Naktibalda> array_push([$object]) part seems crazy
[16:57:01] <paule32> $_onclickEvents a reference to the array
[16:57:12] <paule32> yes, that was a example
[16:57:19] <paule32> not really work
[16:58:11] <paule32> and on $_onclickEvents = [];  i would like add the parameter $methode
[16:58:24] <paule32> from line 67
[16:58:45] <Naktibalda> have you missed $this-> in that line?
[16:59:00] <paule32> yes, indeed
[16:59:01] <Naktibalda> all $_ variables are undefined
[16:59:29] <paule32> at line 24..
[16:59:34] <paule32> pre-defined
[16:59:45] <Naktibalda> is that class a collection of all bad practices you can cram into one file?
[17:00:14] <paule32> its part :)
[17:00:52] <Blondie101010> Naktibalda:  yes, and for which hundreds of suggestions have been given in the past few months and *none* followed
[17:01:07] <Naktibalda> if you get unexpected structure, var_dump variable and manipulate your code until you get expected structure
[17:01:11] <entuland> guess you can simply wrap the callback into another function to add such param
[17:02:19] <paule32> Naktibalda: the code is untested, so i only ask "how can i fill up the array's from lines:24 at line 83
[17:02:21] <paule32> "
[17:03:06] <Naktibalda> test it first, as a person who asks so many questions you should make more effort
[17:03:06] <paule32> i will dont open a discussion about bad practices
[17:04:23] <paule32> the steps in my mind:
[17:05:00] <paule32> 1. when call: add_event: search $evt_arr, if $evt is available
[17:05:28] <paule32> 2. check against the name - linw 82
[17:05:45] <DevAntoine> https://twitter.com/alcaeus/status/1418480600827133953
[17:05:58] <Blondie101010> ect_str is probably a typo
[17:06:01] <paule32> 3. if it ok, then add $methode to the value ($_onclickEvents)
[17:06:41] <paule32> oh Blondie101010 yeah, this, is it, but that is not all
[17:07:15] <Blondie101010> your foreach looks like you are searching the array
[17:07:28] <Blondie101010> why not use a proper search function?
[17:07:34] <paule32> yes, next missing
[17:07:53] <Blondie101010> what is the value of $evt?
[17:08:02] <paule32> "onclick"
[17:08:47] <Blondie101010> so you're looping to find $evt_arr[$evt] ???
[17:09:12] <paule32> add_event($this,"onclick","onclickhandler")
[17:09:36] <paule32> ehm, yes
[17:10:07] <Blondie101010> everything past line 80 shows you need to learn basic programming
[17:10:09] *** Joins: Simplar (~Simplar@188.163.94.202)
[17:10:25] <Blondie101010> start by reading the php manual to cover the basis
[17:11:12] <Blondie101010> note that would have taken MUCH less time than the time you wasted on the channel in the past month alone
[17:11:14] <paule32> oh dear, i know, that i can get the key with key(index)
[17:11:34] <paule32> but this dont check, if the parameter $evt in_array ?
[17:12:37] <entuland> check the docs about how to find out whether an array has a specific key
[17:12:38] <Blondie101010> *when* you learn basic programming concepts, you'll eventually come to realize that you should force things to be as you want them instead of guessing all over the place
[17:12:54] <Blondie101010> entuland:  not needed in this case
[17:13:12] <entuland> well, he may want to raise an error if the event is not supported or the alike
[17:13:20] <Blondie101010> his last reply would refer more to is_array
[17:14:05] <Blondie101010> paule32:  and unless you have some surprisingly brilliant reason, stop using array_push()
[17:14:08] <entuland> and learning how to check whether an array has a specific key is something they want to learn anyways
[17:14:32] <paule32> ok, you right, i am at level, to read-in stuff better that noobs nebiews here, that you take to support, so i am not cry when you give hints, to read the manual, i am old school, yeah, thinking is better than writing, iam in bg
[17:14:35] <Blondie101010> hence the comment on reading the damn manual
[17:14:51] <entuland> yeah, same reason as mine :P
[17:15:03] *** Joins: arash (~arash@2a01:5ec0:b803:c654:64e9:6c18:d5bc:a586)
[17:16:49] *** Parts: paule32 (~paule32@user/paule32) (Leaving)
[17:19:15] *** Joins: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br)
[17:20:13] <Blondie101010> if you can't read, you can't program...  it's really as simple as that
[17:22:13] <entuland> oh god, gotta stop the monkey army I have hammering on the keyboards in the hangar
[17:23:10] *** Joins: Warped (~Warped@user/warped)
[17:23:10] <Blondie101010> I'm sure some monkeys could write better code than we've seen here this morning
[17:24:47] *** Quits: arash (~arash@2a01:5ec0:b803:c654:64e9:6c18:d5bc:a586) (Ping timeout: 252 seconds)
[17:28:42] *** Joins: W8TVI (~W8TVI@2600:6c4a:5b00:7:b57f:d492:e525:cf79)
[17:30:48] *** Joins: pmercado (~pmercado@186.107.49.222)
[17:34:54] <entuland> eheheh
[17:47:54] *** Joins: magla (~gelignite@55d493d3.access.ecotel.net)
[17:48:54] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[17:49:45] *** Quits: gefd (~Geoff@user/gefd) (Ping timeout: 250 seconds)
[17:50:40] *** Joins: Poboy (~Poboy@user/poboy)
[17:52:14] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 255 seconds)
[17:55:34] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 256 seconds)
[17:59:28] *** Joins: newtoliberachat (~xyz@49.206.29.212)
[18:03:18] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Quit: A lol made me boom.)
[18:08:12] *** Quits: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:80c0:ff1d:f199:aec5) (Ping timeout: 276 seconds)
[18:08:18] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[18:09:29] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[18:16:34] *** Quits: fernandos (~fernandos@194.107.178.219) (Ping timeout: 252 seconds)
[18:22:36] *** Joins: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:80c0:ff1d:f199:aec5)
[18:34:37] <__adrian> "if you can't read ..."  more to the point, if you don't
[18:35:37] <__adrian> "paule32> i can get the key with key(index)"  that's not how key() works.  https://php.net/key
[18:36:41] <__adrian> "index" is just a casual word for "integer key." it's not actually different. and it is NOT positional, as you might assume/imply when calling it an "index."
[18:38:33] <entuland> just for info, they left before the "if you can't read" a couple of hours ago
[18:38:51] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[18:38:59] <__adrian> meh  :)
[18:39:04] <entuland> :)
[18:52:39] <celphi> my first router built in php all custom.. any suggestions or improves are welcomed! https://bpa.st/SPIQ
[18:52:43] <celphi> __adrian: ^
[18:54:08] <__adrian> limited, inflexible, will eventually cause problems
[18:54:14] <__adrian> make routes _configurable_
[18:54:20] <__adrian> don't magic.
[18:54:45] <celphi> it's flexible isnt it?
[18:54:51] <__adrian> no
[18:54:56] <__adrian> it's all hardcoded cases
[18:54:59] <__adrian> your router should know how to parse route definitions and match them up to controllers.
[18:55:15] <__adrian> look at how (e.g.) fastroute works
[18:55:22] <celphi> do you see where it includes php files?
[18:55:32] <__adrian> yes (it shouldn't do that)
[18:55:51] <__adrian> it should look up controllers.
[18:56:24] <celphi> can you give me an example of what this router cant do
[18:56:58] <entuland> coffee, for one
[18:57:02] * entuland hides
[18:57:02] <celphi> lmao
[18:57:15] <__adrian> the simplest useful router would be something like  $routes = ["GET"=>["/home"=>Home::class, "/about"=>About::class, etc..]]; $controller = $routes[$request->method][$request->uri] ?? $default_controller;
[18:57:41] <__adrian> but seriously, check out existing implementations. fastroute is something of a defacto standard.
[18:58:05] <celphi> ok so in that example. i can achieve that
[18:58:05] <__adrian> "celphi> can you give me an example of what this router cant do"  it can't route a URI to a controller with a different classname
[18:58:18] <__adrian> *filename
[18:59:09] <celphi> why would i want to do that? this makes finding the file easier no?
[18:59:14] <__adrian> it can't have two routes that lead to the same controller
[18:59:35] <__adrian> uris should have absolutetly nothing to do with classnames
[19:00:08] <celphi> and techinically i could inside of my User.php create function() if the url was /user/44
[19:00:14] *** Joins: judah (~judah@rrcs-74-87-190-146.west.biz.rr.com)
[19:00:25] <celphi> ooops if url was /user
[19:00:25] <__adrian> that's code changes
[19:00:37] <__adrian> you shoudn't need to change your code just to support a new route
[19:01:04] <__adrian> sincerely, check out existing implementations. and don't write "magic" code.
[19:01:07] <celphi> why would i want a route that has /user/44 goto spaghetti.php?
[19:01:39] <__adrian> why would you not? maybe that's the route for users that want spaghetti
[19:02:15] <celphi> wouldnt it be better and easier to find the php file if all /user/44 went to User.php
[19:02:21] <da_wunder> and one reasoning behind that is that then you could use one controller per one route and just just __invoke method
[19:02:24] <__adrian> i'm not arguing, here, speaking from experience
[19:02:39] <celphi> ya i trust your experience im just asking why
[19:02:47] <__adrian> explaining why
[19:02:56] <Naktibalda> people like pretty urls
[19:03:16] <celphi> `/user/44` isnt pretty?
[19:03:19] <__adrian> all those things are things you'll eventually need to do with any ongoing project
[19:03:50] <da_wunder> and you could organize your user related classes to eg. own namespace like `namespace Controllers\User` where you have classes like `UserList`, `UserEdit`, etc.
[19:03:57] <__adrian> ^
[19:04:09] <__adrian> you can replace or rename controllers as needed
[19:04:23] <__adrian> or reuse
[19:04:30] <celphi> ok you have a link where i can read up on controllers?
[19:05:29] <__adrian> that's not really the same problem as routing, but look at https://www.php-fig.org/psr/psr-15/
[19:05:49] <celphi> k ty
[19:06:05] <entuland> a long time ago I created this system (dumped it on github a couple years ago): https://github.com/entuland/php-invo/blob/master/app/router.class.php#L67
[19:06:13] <entuland> kinda scared of looking into that code again ahahahah
[19:06:37] <__adrian> this is all aside from the tight coupling you're doing by making classnames determine you routes. it also makes things way more difficult to understand, maintain, and troubleshoot
[19:07:13] <__adrian> addAllRoutes() should just take a list (e.g., from a config file)
[19:07:32] <__adrian> and then  foreach ($routes as $route) { $this->addRoute($route); }
[19:07:44] <celphi> k
[19:07:45] <entuland> aye, that would be a nice improvement
[19:08:03] <__adrian> another general tip
[19:08:09] <__adrian> **stop making things static**
[19:08:29] <celphi> it was suggested to me earlier
[19:08:32] <__adrian> you should need a REALLY GOOD REASON to making something static. it should not be the normal/default approach.
[19:08:44] <entuland> oh that was likely for my code, celphi
[19:08:58] <__adrian> well both i suppose
[19:09:00] <__adrian> :)
[19:09:23] <celphi> no_gravity was suggesting i make that change
[19:09:36] <__adrian> it's a real easy change
[19:09:39] <da_wunder> personally I like Symfony way to define those routes - https://gist.github.com/tarlepp/0dd810e434d04afaa74ece6f40858aa5
[19:09:45] <__adrian> and will make you understand how to write oo code
[19:09:54] <__adrian> s/make/help/
[19:10:10] <entuland> kinda surprised that code is still running with a very large database since 10+ years now and I seldom if ever get called for anything going wrong (my brother's shop inventory system)
[19:10:21] <celphi> k
[19:10:31] <celphi> going to check out that article be back later
[19:10:46] <__adrian> da_wunder: defining the route _on_ the controller leads to the same inflexibility discussed above
[19:11:08] <__adrian> yes, it's very common, and yes it's much better than a lot of approaches, but it's not ideal
[19:12:16] <da_wunder> sure, that is just my own opinion - I like to define those like that
[19:12:55] <__adrian>  it's quick-and-easy
[19:13:03] <__adrian> just need to be aware of the limitations
[19:13:15] <da_wunder> and if you keep your controllers directory structure sane, it should be quite easy to get proper controller
[19:13:47] <__adrian> ime several routes that lead to the same controller is more common than you might think
[19:15:10] <__adrian> e.g., there's no reason for  GET /packages  and  GET /packages/$type  and  GET /packages/$aliasForVeryCommonSearchOptions  to be different controllers
[19:15:19] *** Joins: Northwoods (~Northwood@223.130.30.165)
[19:15:20] <da_wunder> sure, that was just an example - I have controllers that have multiple routes
[19:19:12] <__adrian> yeah, not harping on you  :)  just discussion
[19:23:30] *** Quits: zibby15 (~androirc@user/zibby15) (Quit: leaving.)
[19:23:33] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[19:23:52] *** Quits: Northwoods (~Northwood@223.130.30.165) (Ping timeout: 245 seconds)
[19:24:48] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 268 seconds)
[19:27:08] <Simplar> Can someone tell me why does PHP seeing the route '/' but doesn't see the routes like '/abc/def/.../xyz'?
[19:27:16] <Simplar> https://github.com/ahkohd/express-php I am using this thing
[19:27:53] <Simplar> It's supposed to work with any route, I've followed the instructions for making the htaccess etc.
[19:28:13] <Simplar> Using Apache 2.4 and PHP 8, I get this: The requested URL was not found on this server.
[19:28:30] <Simplar> If I access /, the route works correctly
[19:28:39] <Simplar> Logs are silent, of course
[19:30:59] <entuland> Simplar, you may want to show the your code as it's using / setting up that framework
[19:31:03] <da_wunder> Simplar: it would help a lot if you share your route configuration
[19:31:15] <Simplar> Alright, one sec
[19:32:49] <da_wunder> Simplar: and is that webserver error OR your application error ?
[19:33:10] <Simplar> Seems like a webserver error
[19:33:13] <da_wunder> if webserver, then most likely you don't have mod_rewrite enabled to your apache webserver
[19:33:22] <Simplar> let me see
[19:33:23] <Simplar> sec
[19:35:23] <da_wunder> also I recommend you to raise an issue to that repository where you ask that question
[19:35:41] <da_wunder> or might be that you're missing that `.htaccess` file totally
[19:36:45] <Simplar> They have htaccess
[19:36:49] <Simplar> And it should work
[19:37:11] <Simplar> I just enabled mod_rewrite.
[19:37:30] <da_wunder> we don't know that - we cannot see what is on your screen and we don't know how your webserver is configured
[19:37:33] <Naktibalda>  / probably loads index.php
[19:38:27] <da_wunder> and that file load those routes under `routes` directory
[19:39:02] <Simplar> Yes, it loads index.php
[19:39:13] <Simplar> I just saw the AllowOverride None flag
[19:44:26] <Simplar> Okay, the htaccess now works but no access
[19:44:31] <Simplar> 'No input file specified.'
[19:44:49] <Simplar> for some reason this htaccess: https://github.com/ahkohd/express-php/blob/master/.htaccess
[19:45:10] <Simplar> now shows the index.html of the htdocs root
[19:45:20] <Simplar> instead of navigating to a folder where htaccess is located
[19:47:02] <da_wunder> in your webserver config which directory you expose? that should be the root directory where you have cloned / copied that repository - there isn't index.html on that repository root
[19:49:18] <Simplar> I expose htdocs
[19:49:50] <da_wunder> and in that directory you have that repository cloned / copied ?
[19:51:13] <Simplar> I cloned it into htdocs/api
[19:51:51] <da_wunder> ok, so then what happens if you add that `/api` to your browser url too?
[19:54:05] <Simplar> htdocs/index.html is loaded instead of htdocs/api/index.php
[19:55:40] <da_wunder> then there is most likely something wrong in your webserver settings or something else
[19:57:16] *** Joins: jgrim2 (~jgrim@d60-65-211-197.col.wideopenwest.com)
[19:57:44] <da_wunder> what I would do is just some sanity checks like; 1) create file under your htdocs directory like `htdocs/test.txt` see if you can open that within your browser 2) create file htdocs/api/test2.txt and try to open that in your browser 3) create an error to `htdocs/api/.htaccess` file and try to access that with your browser - if you don't get http 500 your .htaccess file is not used at all
[19:58:37] <Simplar> htaccess: Forbidden
[19:58:37] <Simplar> You don't have permission to access this resource.
[20:00:42] *** Quits: jgrim (~jgrim@d60-65-211-197.col.wideopenwest.com) (Ping timeout: 252 seconds)
[20:00:42] *** jgrim2 is now known as jgrim
[20:02:21] *** Parts: newtoliberachat (~xyz@49.206.29.212) ()
[20:03:29] *** Joins: newtoliberachat (~xyz@49.206.29.212)
[20:04:18] *** Joins: stenno (~stenno@user/stenno)
[20:07:04] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Ping timeout: 268 seconds)
[20:08:18] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Ping timeout: 240 seconds)
[20:08:29] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[20:09:55] *** Joins: steve (~steven@li677-71.members.linode.com)
[20:10:47] <olle> Is it possible to move a PHP session to another machine AND url?
[20:11:15] <olle> https://stackoverflow.com/questions/59081846/transfer-session-between-2-sites
[20:11:46] <steve> olle: use redis for sharing sessions between machines
[20:11:47] <stenno> xy
[20:12:12] *** Quits: newtoliberachat (~xyz@49.206.29.212) (Remote host closed the connection)
[20:13:16] <steve> May be a stupid question, but is it possible to have a function that can be invoked both statically AND from an instantiated object? ie: allow getData() to be called both like: MyClass::getData() and $myObject->getData() ?
[20:15:09] *** Quits: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br) (Quit: Leaving)
[20:15:31] <AllenJB> You can call static functions using an instance. eg: $myObject::getData() or using ->. See https://3v4l.org/7iPi3
[20:15:54] <steve> huh
[20:15:58] <steve> How did I not know this?
[20:16:02] <steve> TIL
[20:16:07] <steve> Thanks, AllenJB :)
[20:16:22] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[20:17:44] <no_gravity> There is no shorter form of this, right? if (isset($a[$x])) $a[$x]++; else $a[$x]=1;
[20:20:12] <AllenJB> Don't think "shorter" (by much anyway), but there are other ways it can be written, such as $a[$x] = ($a[$x] ?? 0) + 1;
[20:21:26] <olle> steve: hm
[20:21:30] <no_gravity> AllenJB: Interesting. It is indeed a bit shorter.
[20:21:40] <no_gravity> I wonder how it does performance wise.
[20:21:57] <olle> shorter != better...
[20:22:00] <no_gravity> I will have to do this billions of times in a project I am working on.
[20:22:15] <olle> shorter != faster
[20:22:42] <entuland> how sparse is the array you're working on?
[20:23:37] <entuland> and how large is it?
[20:23:41] <no_gravity> entuland: Very sparse. It will have keys in the range from 1 to 10^6 but only a few thousand entries.
[20:24:08] <no_gravity> 1 to 10^7
[20:24:12] *** Quits: delboy1978uk (~delboy197@109.132.42.202) (Quit: delboy1978uk)
[20:24:21] <no_gravity> Aka The keys will be roughly from 1 to 10 million.
[20:24:44] <no_gravity> And then I do a few million of those additions in that array.
[20:25:01] <no_gravity> And then start over with a new array. This outter loop will run abou 10 million times.
[20:25:49] <entuland> are you going to need to know which keys have been explicitly set?
[20:25:54] <no_gravity> One complete run will take several months.
[20:26:11] <steve> olle: in a lot of cloud solutions you'll have multiple servers hosting the exact same code. All of the dynamic pieces are loaded from databases and caching engines. Keeping sessions consistent between servers (especially when they're behind a load balancer) is a common problem. Redis makes it a lot easier
[20:26:18] <no_gravity> entuland: Yes, I need to sort every array in the end.
[20:27:22] <entuland> you could in theory preallocate the entire array with zeroes and keep track of which keys have been touched with a set, but I can't tell if you'd be buying speed omitting the checks paying that additional space
[20:27:42] <celphi> why not just use array_count_values
[20:28:22] <biberu> no_gravity: can you show an example of the full problem? a better solution, if one exists, will probably change the algorithm rather than micro optimizing that assignment
[20:28:26] <no_gravity> entuland: My guess is that what you describe already takes place internally when PHP processes the array.
[20:28:52] <entuland> but if you preallocate it you don't have to worry about the intial value, and skip the check
[20:29:10] <celphi> split the 10 million numbers onto 8 cores and run them in parallel
[20:29:27] <olle> steve: yeah, but that assumes the same domain, or?
[20:29:31] <no_gravity> biberu: Imagine a simulation of 10 million atoms floating in space, keeping track of which atoms collided and then for each atom generate a list of the other atoms it collided with most often..
[20:30:38] <entuland> I kinda assumed the sparse array would have taken less space than the fully populated one, but I'm not into such implementation details
[20:30:41] <no_gravity> biberu: So for each atom I need to create an array with up to 10 million entries, then sort that array and store the top x values.
[20:31:41] <celphi> https://stackoverflow.com/questions/38941694/what-is-the-fastest-way-to-count-elements-in-an-array
[20:31:46] <celphi> histcounts ^
[20:32:41] <steve> olle: correct - php sessions are linked by domain (since they're stored in cookies and cookies are keyed by domain name)
[20:33:17] <entuland> celphi, the question is about speeding up the array population, possibly skipping the check for uninitialized keys
[20:33:30] <entuland> if I got the question right
[20:33:35] <steve> olle: are you using completely different domains or are they subdomains?
[20:33:56] <no_gravity> entuland: Yes, my question was about that part of the project.
[20:34:46] <olle> steve: completely different
[20:34:49] <olle> but have to go sorry
[20:35:10] <steve> olle: don't think you can do it then. Subdomains yes, completely different domains, no
[20:35:16] <no_gravity> entuland: Although it is about populating the counting array. Not about the collision array. That one is given.
[20:35:24] <steve> If you're OK with subdomains, use something like this: https://stackoverflow.com/questions/27767513/php-session-across-subdomains
[20:35:33] <steve> It relies on: https://www.php.net/manual/en/function.session-set-cookie-params.php
[20:35:41] <entuland> no_gravity, if there is no space difference between the sparse and the dense array, I would just pre-fill it and skip the check altogether
[20:36:19] <entuland> the step of keeping track of which keys have been touched could also be skipped if the sorting will be fast enough to give you that info by just putting the zeroes at the end
[20:37:16] <no_gravity> entuland: There is a huge different. There are 10 million atoms but my guess is that each atom will only collide with about 100 thousand other atoms. So 99% of the keys will be unused.
[20:38:54] *** Joins: delboy1978uk (~delboy197@109.132.42.202)
[20:39:44] <biberu> no_gravity: how does it run? what is the input? a sequence of collisions?
[20:40:31] <entuland> okay, you could keep track of the keys that have been touched, populate the dense array to avoid the checks, when the population is done you can create a sparse array following the set of touched keys and only sort the sparse array
[20:41:00] <entuland> in practice only testing it will tell you the fastest way probably
[20:41:22] <no_gravity> biberu: After a bit of pre-processing, there is a sequence of collisions, yes. The raw input is a list of 6 million events like this: "The following atoms were observed in the same spot: 183,461002,1032011,89921,..."
[20:42:50] <biberu> no_gravity: so if 183 and 461002 are in the same spot, is that a collision in both directions?
[20:42:56] <no_gravity> biberu: Yes
[20:43:08] *** Quits: Simplar (~Simplar@188.163.94.202) (Quit: Going offline, see ya! (www.adiirc.com))
[20:43:32] <biberu> so if you e.g. always use the lower id as key you can store half as many collisions, you don't need both 183 => 461002 and 461002 => 183
[20:43:38] *** Quits: Pixi (~Pixi@user/pixi) (Ping timeout: 258 seconds)
[20:43:58] <entuland> if _each_ atom collides and you have 10 million atoms, you'll end up with 10 million entries touched
[20:44:55] <no_gravity> biberu: I cannot store the whole matrix anyhow. That would be 10^7x10^7 = 10^14 values.
[20:45:13] <no_gravity> biberu: I only need the top 1000 "co-colliders" for each atom.
[20:45:21] <biberu> no_gravity: sure, but that'd mean half as many things to sort etc
[20:45:56] <no_gravity> biberu: So my outer loop is atom number. And the inner loop fills an array for *that* atom and each other atom. Then I extract the top 1000.
[20:46:05] <biberu> no_gravity: do previous collisions affect new input somehow? or it just aggregated?
[20:46:10] <biberu> is it*
[20:46:15] *** Joins: Pixi (~Pixi@user/pixi)
[20:46:31] <no_gravity> biberu: Not 100% sure about the meaning of your question but I would say "just aggregated".
[20:47:09] <entuland> yes it sound just aggregated as you'd end up knowing how many times an atom collided, regardless of which other atoms it collided with
[20:47:31] <entuland> but still I'm not sure I got the scenario right, cause if they all collide, you'll be using the whole array anyways
[20:47:38] <entuland> different story if only a fraction of them collide
[20:48:08] <no_gravity> entuland: Only a fraction of them collide.
[20:48:26] <no_gravity> Also the output is already useful when I have the complete data for *some* atoms.
[20:48:26] <entuland> okay, then I'd go with the set + dense array > sparse array to be sorted
[20:48:59] <no_gravity> So after processing the "top 1000 co-colliders" for the first 100.000 atoms, the output will aready be used.
[20:49:31] <no_gravity> That is why I cannot do something like "ommit all atoms with IDs smaller then the current one".
[20:51:21] <no_gravity> Also that would not work because I only store the top 1000 co-colliders for each atom.
[20:52:49] <entuland> you may not even need fully sorting the entire thing, if what matters is the magnitude of the concurrent collisions and not their exact value
[20:53:28] <no_gravity> entuland: I need the exact value.
[20:53:38] <entuland> okay, then no skipping on the sorting
[20:53:59] <no_gravity> I will do some experiments if there are faster ways to find the top 1000 than to sort the whole array.
[20:54:00] <biberu> no_gravity: was just thinking if you might be able to do it in two steps, e.g. first quickly grouping them and then parallelizing sorting before getting a final result, but i guess you'd be leaving php land then anyhow
[20:54:27] <biberu> no_gravity: and that might be easier if the collisions don't affect each other
[20:55:28] <no_gravity> biberu: In my approach, parralization is pretty easy.
[20:56:03] <no_gravity> biberu: I can just run the same php program for different sets of atoms,
[20:56:25] <biberu> no_gravity: sorry for slow replies btw, semi afk doing stuff, but i think you should try to consider the problem at this level rather than how to optimize assignments, and if that's the best alternative for gains you'd probably be better of with just rewriting it in something else
[20:56:32] <entuland> what I meant by magnitude is that a single pass on the array will tell you the min / max amount of collisions, and there is likely other math that will help you find the median or the alike without sorting the array - I'm not really into this kind of things
[20:56:59] <entuland> but I feel that you may be able to cut the amount of entries into a smaller subset that can be sorted (keeping the needed exact values) without sorting the entire thing
[20:57:29] <no_gravity> biberu: PHP is pretty fast. Multiple times faster than cpython. Considerably faster than pypy.
[20:57:57] <no_gravity> entuland: Yes, there might very well be faster ways to find the top elements in an array than to sort it.
[20:58:09] <entuland> and the issues at hand are two anyways (populating, sorting / cutting down the result)
[20:58:21] <entuland> the thing about the dense array was just to speed up the population
[20:59:39] <biberu> no_gravity: python isn't exactly known for speed
[20:59:57] <entuland> what about a python on a jet plane?
[21:00:17] <no_gravity> biberu: True. That is why I use PHP for this. Python, PHP and JS are my main languages.
[21:01:11] <no_gravity> biberu: Could probably speed it up by some factor going more bare metal with rust or something. But that is not worth it for me.
[21:05:59] <entuland> no_gravity, what you're aiming to is equivalent to finding the frequency distribution the atoms IDs in your list of "in this spot we've seen a collision between X, Y and X", correct?
[21:06:09] *** Joins: jetchisel (jetchisel@user/jetchisel)
[21:07:30] <no_gravity> entuland: Not sure. "finding the frequency distribution the atoms IDs in your list" sounds strange to me.
[21:08:34] <biberu> no_gravity: how large is the space?
[21:08:49] <no_gravity> biberu: The space?
[21:08:56] <entuland> I mean, imagine your dataset is just a concatenation of your atoms IDs: [1, 42, 243, 2, 42, 278], as just listing the various IDs you got from [1, 42, 243] and [2, 42, 278] and so forth
[21:09:03] <biberu> no_gravity: min/max for x/y/z
[21:09:13] <entuland> what you want out of that dataset is finding the numbers that appear most often in the list, correct?
[21:09:31] <biberu> or is it 2d?
[21:09:40] <no_gravity> biberu: There is no data about x/y/z. Only the 6 million "these atoms were seen in the same spot" events.
[21:09:49] <stenno> what the hell
[21:10:10] <biberu> no_gravity: ah, ok
[21:10:11] <no_gravity> entuland: No, I would not say so.
[21:10:22] <entuland> what's the information that is missing from there?
[21:10:46] <entuland> in the example I gave, you'd end up knowing that 42 collided 2 times, the others collided 1 time each
[21:10:59] <entuland> (making this very very simple for the sake of discussion)
[21:11:50] <no_gravity> entuland: Imagine my input data looked like this: [1,2],[1,3],[1,2] then my output for f(1) would be 2:2,3:1. Aka "Atom one collided two times with atom 2 and one time with atom 3".
[21:13:09] <entuland> okay, imagine you join that data together as [1,2,1,3,1,2] and find out which is the number (or numbers) that appear most often and how many times they appear
[21:13:17] <entuland> that would give you the same end result, no?
[21:14:07] <entuland> as you don't need to know the exact pairs of collisions in the end, you just want to know atom 1234 collided 32746 times, not with which other atoms it collided with
[21:14:17] <no_gravity> entuland: Yes. Except I have 6 million of these lists and each list has between a few dozen and tens of thousands of entries.
[21:15:02] <entuland> okay, I'm just trying to see if there is any clever already existing algo out there that could help you with such a large dataset
[21:15:32] <stenno> somehow i feel that there has been no progression in this 'discussion' for the last 30 minutes
[21:15:39] <stenno> are you trying to 'benchmark' stuff again
[21:15:41] <no_gravity> entuland: I read these 6 million lists from a DB and process them one by one. Not keeping them in memory.
[21:15:43] *** Quits: omegatron (~some@p5484990d.dip0.t-ipconnect.de) (Quit: What happened? You quit!)
[21:16:08] <no_gravity> entuland: I only keep the output array in memory. Then sort it and then store the top 1000.
[21:16:14] <entuland> okay, then I'd go back to the set + dense array > sparse array for sorting / cutting
[21:20:13] <no_gravity> entuland: Not sure what you mean by that.
[21:20:57] <no_gravity> I fill the array with: if (isset($a[$id])) $a[$id]++; else $a[$id]=1;
[21:21:07] <no_gravity> So it is a sparse array.
[21:21:21] <entuland> yeah, that's the step I wanted to avoid
[21:21:38] <entuland> generate the full array and fill it with zeroes so you don't have to check if a key exists or not
[21:21:50] <entuland> when you touch a key, add it to a set, and increment the value in the dense array
[21:22:08] <__adrian> $a[$id] = ($a[$id] ?? 0) + 1;
[21:22:17] <no_gravity> entuland: I don't see how that would be faster.
[21:22:19] <entuland> once you're done, create a sparse array out of the keys you have in the set picking up the values out of the dense array, and sort the sparse array
[21:22:25] <no_gravity> __adrian: You think that is faster?
[21:22:33] <entuland> you'd omit the check about the key existing or not
[21:22:40] <__adrian> i'm not addressing "faster"
[21:22:46] <no_gravity> entuland: At the cost of doing other things.
[21:22:47] <__adrian> it's just more obvious/concise
[21:23:11] <entuland> yes, no_gravity the point is whether one would be faster than the other, and only you can tell by testing
[21:23:15] <__adrian> re: faster: test it. don't "solve" problems you don't have
[21:24:17] <entuland> that was my whole point since the beginning - proposing an alternative approach to be tested to see if the check could be skipped and whether that would have been faster or not
[21:24:43] <no_gravity> entuland: We will see.
[21:25:05] <no_gravity> Just started writing the software today. Cannot test it yet.
[21:25:23] <__adrian> then you don't know if you have a problem
[21:25:36] <__adrian> write the code that makes sense. until you have a problem, you don't have a problem
[21:25:38] <stenno> premature optimization, as usual
[21:25:49] <stenno> common pattern
[21:25:52] <no_gravity> premature accusations as ususal.
[21:26:33] <__adrian> it's not an accusation
[21:26:40] <__adrian> it's a correct observation, though.
[21:27:00] <stenno> no_gravity is a walking xy problem
[21:27:09] <__adrian> write code that does specifically what you need, don't move away from that unless you actually have a problem
[21:27:27] <no_gravity> __adrian: No, because you don't now the situation. The line will be executed billions of times. So faster is better for sure.
[21:27:53] <__adrian> no; that's simply not true.
[21:28:27] <entuland> write just enough to test on a small dataset over and over again, implement both approaches, benchmark it
[21:28:33] <__adrian> if "faster" is harder to understand and introduces extra work/chances to break, it's not better, especially if it turns out to have not been necessary.
[21:29:03] <no_gravity> __adrian: If you can scroll up here in the chat, I suggest you read the backstory.
[21:29:18] <__adrian> also consider that you're at a level where the "fast" you're talking about -even if it turns out to be 2,3,more times faster- is likely to be a miniscule portion of execution time.
[21:29:25] <biberu> no_gravity: the best case for that kind of change is gaining a constant factor
[21:29:37] <biberu> and a small one at that
[21:30:01] <no_gravity> biberu: Could be
[21:31:00] <no_gravity> Hmm.. the code is ready for a first test.
[21:31:54] <entuland> please ping me with the results if you don't mind
[21:32:06] <no_gravity> entuland: Running it now ...
[21:32:58] <Byteflux> As Kent Beck once famously said: Make it work, then make it right, then make it fast.
[21:33:09] *** Joins: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br)
[21:33:20] <Byteflux> You waste more time trying to optimize something before you even have a grasp of what a functional solution looks like.
[21:33:44] <no_gravity> Wow it was fast!
[21:34:11] <no_gravity> Guess there is a bug somewhere. The output does not look correct.
[21:34:15] <entuland> well, to be fair the actual implementation (both approaches) are quite simple and trivial enough to know they should work if implemented properly
[21:36:37] <no_gravity> Found the bug :)
[21:37:13] <no_gravity> Kept the "only process 3 sets of input data" from my tests in there :)
[21:37:18] <no_gravity> No wonder it was fast.
[21:37:41] <no_gravity> Lets try with 100.000
[21:41:18] *** Joins: fernandos (~fernandos@194.107.178.219)
[21:41:21] *** Quits: fernandos (~fernandos@194.107.178.219) (Remote host closed the connection)
[21:41:31] *** Joins: fernandos (~fernandos@194.107.178.219)
[21:43:24] *** Quits: delboy1978uk (~delboy197@109.132.42.202) (Quit: delboy1978uk)
[21:43:36] <no_gravity> One minute and 6 seconds.
[21:44:04] <no_gravity> But I am not sure if the whole stack is correct yet.
[21:45:13] <entuland> well you have two paths - make sure the code produces the right output (better) or store this output, implement the other approach, compare the results to ensure they are functionally equivalent and compare their times
[21:45:14] <no_gravity> Most time probably was spent in plowing through a few million event sets to find event sets that include the given atom.
[21:45:52] <no_gravity> entuland: Yes. Its early. The stack is a good bit more complex than just this core counting loop.
[21:46:18] <entuland> ok
[21:48:34] <Sammitch> have we already covered why this dataset isn't being sorted and filtered at the DB?
[21:49:18] <no_gravity> Sammitch: The filtering is done at the DB level. Still takes time.
[21:50:16] <Sammitch> but surely the DB can do the sort, and would ostensibly be far better than even the best PHP implementation
[21:50:59] <no_gravity> Sammitch: If you can scroll up, better read the backstory of the task at hand.
[21:52:56] <Sammitch> I'll just pretend like that horse has been beaten sufficiently
[21:53:40] <no_gravity> Sammitch: There is some room to explore what approach could be taken by utilizing the DB more. But it is not a simple filter/sort/count kinda thing.
[21:54:27] <entuland> the dataset at hand doesn't exist as such in the DB, the point here seems a new temporary aggregation dataset that requires rebuilding over and over again
[21:55:07] <Sammitch> sounds vaguely like a time series thing
[21:57:33] <no_gravity> I tend to think I have some first performance data now. Looks like the actual counting/sorting is very fast.
[21:57:49] *** Joins: delboy1978uk (~delboy197@202.42-132-109.adsl-dyn.isp.belgacom.be)
[21:58:07] <entuland> may not be worth investigating on any performance improvement then
[21:58:45] <no_gravity> Running it for Atom 1 on 1 million event sets, it took one minute and 5 seconds.
[21:59:04] <no_gravity> Atom 1 was in 6258 of the one million event sets.
[21:59:24] <no_gravity> Finding those 6258 sets took about 55 seconds.
[21:59:42] <entuland> okay, you have to do that for 99.999.999 more atoms?
[21:59:56] <entuland> or whatever the number was
[21:59:57] <no_gravity> entuland: 9.999.999 more
[22:00:10] <no_gravity> So the counting+sorting took about 10 seconds.
[22:00:31] <biberu> so you're done in 20 years? ^^
[22:00:31] <no_gravity> The full dataset has 6 million event sets.
[22:00:46] <no_gravity> So for one Atom it will take over 60 seconds.
[22:01:06] <no_gravity> 1 minute * 10 million = ...
[22:01:25] <entuland> oh, when you wrote "fast" I assumed "fast enough" ahahahah
[22:01:28] <Sammitch> assuming that it scales linearly
[22:01:45] <no_gravity> = 6944 days. A bit more then I hoped.
[22:02:12] <no_gravity> Sammitch: Thats why I said "over 60 seconds". 60 seconds is the lower bound.
[22:02:43] <stenno> bzz
[22:02:52] <entuland> guess you're up for a bottleneck hunt and / or for ways to parallelize it :P
[22:02:56] <no_gravity> Even with 20 machines crunching away this would take 1 year.
[22:03:05] <no_gravity> entuland: Yeah, will be fun :)
[22:03:57] <no_gravity> And the counting+sorting will not be the only thing happening. Still have to do the filtering of the events (Which currently takes 5x longer then the counting+sorting) plus some other parts of the stack.
[22:04:01] <da_wunder> or maybe php is not the "proper" language to solve that issue
[22:04:25] <no_gravity> da_wunder: Depends. Currently finding the right event sets in the DB takes 5x longer than what is happening in PHP.
[22:04:38] <no_gravity> We will see where the bottleneck will ultimately be.
[22:05:03] <da_wunder> I would try to make that same with another language(s) to produce eg. plain temp file that contains that calculated array what you can easily use within your php script
[22:05:24] <biberu> no_gravity: this is why i've been saying to look at something other than optimizing the assignment, e.g. restructure it, build intermediate indexes to avoid repeating work, parallelize, and yes, probably consider another language that gives you access to threading and better data structures, etc etc
[22:05:37] <no_gravity> da_wunder: I will throw some approaches at it.
[22:05:58] <biberu> it doesn't matter if you save on that assignment if it still takes 19 years ;D
[22:06:10] <entuland> one thing that draws my attention is that you need to "find" the records to work on
[22:06:21] <biberu> ^ indeed, index
[22:06:29] <da_wunder> I don't know your exact problem but eg. https://medium.com/@rtheunissen/efficient-data-structures-for-php-7-9dda7af674cd might help you a bit
[22:06:40] <entuland> I kinda assumed you had a way to get the records right away without having to filter them at all, and "just" crunch them to populate the array
[22:07:22] <no_gravity> entuland: From the perspective of the PHP application I "have them" as they come from the DB. But the DB is not optimized for this yet.
[22:07:30] <Sammitch> also PHP isn't exactly great for tight loops over data structures
[22:08:01] <biberu> no_gravity: note that you can, and may need to, index data in memory, separately from the db
[22:08:32] <da_wunder> hmm, and if that data is coming from database I would try to use some custom SQL to make that all happen in database - just to see if that helps
[22:08:34] <biberu> no_gravity: i also mean effective use of dictionaries etc, not db just indexes
[22:08:34] <no_gravity> The input data is just a list of 6 million comma seperated strings like ",13,2,5," meaning "Atoms 13, 2 and 5 collided".
[22:08:36] <Byteflux> I've done plenty of work with databases >100 million rows and it's usually the database that's the bottleneck when doing high volume processing.
[22:08:50] <no_gravity> What the best way to represent that in the DB is is yet to be decided.
[22:09:48] <Byteflux> Assuming it's a relational database, any way.
[22:10:03] <no_gravity> One choice would be a "event_id,atom_id" table with an index on atom_id. Not sure if that is the most efficient way.
[22:10:05] <entuland> no_gravity, let me try and understand how you're approaching this right now, since you mentioned "for atom 1" - are you asking the DB for just the records that contain "1" in the string?
[22:10:17] <no_gravity> entuland: Yes.
[22:10:21] <entuland> why?
[22:10:28] <biberu> that'll be very slow
[22:10:44] <no_gravity> entuland: Because I want to know the top co-colliders for atom x.
[22:11:23] <no_gravity> biberu: That is why I did not count the 55s the DB took to deliver the data. As that is not optimized. I only counted the 10s PHP took to process it.
[22:11:28] <entuland> so you _need_ to tell apart collision with a specific atom ID, or you just want to do it because that's how you're approaching the problem?
[22:11:39] <no_gravity> entuland: Not sure what you mean.
[22:11:53] <entuland> I though you had to process them all and just find the top colliders, not the "top colliders with atom N"
[22:12:07] <no_gravity> entuland: In the end, the top 1000 co-colliders for every atom will end up in a new table. So it is fast to look them up.
[22:12:26] <entuland> okay, but asking for just the records that contain "1" is slow as hell
[22:12:46] <entuland> try processing the first N records regardless of what they contain, and run the total tally
[22:13:20] <no_gravity> entuland: That is not possible because you cannot hold the whole 10^7x10^7 matrix in memory.
[22:13:31] <entuland> you don't need it
[22:13:38] <entuland> you just need a 10^6 array
[22:13:46] <entuland> to know how many times an atom has collided
[22:13:54] <entuland> doesn't matter with what it collided and when
[22:13:54] <no_gravity> entuland: Yes, "one" atom.
[22:14:00] <entuland> why one?
[22:14:06] <no_gravity> You said one.
[22:14:18] <no_gravity> I need to know what it collided with.
[22:14:36] <no_gravity> entuland: For each atom, I want the 1000 top co-colliders.
[22:14:58] <entuland> okay, so you _need_ to do one full pass for each atom
[22:15:01] <no_gravity> Yes
[22:15:05] <entuland> now it's clearer
[22:15:16] <entuland> that's hell of a lot of stuff to run
[22:15:21] <no_gravity> Yes
[22:15:25] <biberu> that doesn't mean you have to do all that work over again for the next atom
[22:15:38] <no_gravity> biberu: I have to :)
[22:15:47] <no_gravity> biberu: I don't think there is a shortcut.
[22:15:53] <entuland> you'll need to save some of that work, yes, you'll have to index and store data in the DB
[22:16:05] <biberu> no_gravity: can't you preprocess it into something that's easier to work with? why not?
[22:16:14] <no_gravity> biberu: How do you mean?
[22:16:34] <no_gravity> entuland: What I can store is tiny compared to the full 10^7x10^7 matrix. Not much benefit.
[22:16:43] <da_wunder> maybe you should use re-calculated data in your database, use eg. after insert/update/delete triggers to calculate that value for that inserted/updated/deleted value
[22:17:06] <da_wunder> so then you can just fetch that calculated data from database directly
[22:17:20] <biberu> no_gravity: parse all the strings into something that you can run lookups against
[22:17:37] <stenno> now its about databases?
[22:17:51] <no_gravity> biberu: As I said, that is why I did not count DB time yet. As it will be optimized.
[22:18:12] <no_gravity> biberu: A "event_id,atom_id" table with an index on "atom_id" comes to mind.
[22:18:19] <stenno> yep
[22:18:32] <entuland> so it's 60+ seconds ignoring the time it takes to get the records from the DB?
[22:18:48] <biberu> no_gravity: do you even need the event_id? would atom_a, atom_b work?
[22:19:01] <no_gravity> entuland: Yes
[22:19:09] <entuland> ouch
[22:19:20] <entuland> hope they pay you well ahahahah
[22:19:42] <biberu> entuland: at least he has job security until retirement, and then some :D
[22:19:54] <entuland> eheheh
[22:20:33] <entuland> Deep Thought comes to mind, you just need to pay attention for the missiles coming from Magratea
[22:20:40] <no_gravity> biberu: That would be a very big table. Say in each event 500 atoms collide. Then each of the 6 million events create 250.000 such a atom_a-atom_b rows.
[22:21:10] <Sammitch> and then the next guy can write it in something not-php with more direct memory access, shave off a ton of overhead, and look like a rockstar
[22:21:12] <no_gravity> biberu: That would be 1.500.000.000.000 rows :)
[22:22:00] <no_gravity> Sammitch: And become a millionaire like Phil Katz!
[22:22:02] <biberu> that's a lot of rows
[22:22:34] <da_wunder> do you really need a list of those atom_b or is the count enough? for that those db rows would be a lot less - and when you're just looking one atom_a then you could fetch those atom_b values if needed
[22:22:52] <Sammitch> inb4 "but I don't have enough memory to sort that data set!"
[22:23:40] <no_gravity> da_wunder: Well the task is to find the top co-occurances for each element in a set of sets :)
[22:23:47] <stenno> i wonder what's this actually about
[22:24:06] <entuland> 10 million atoms, each atom can collide with many others but only a small fraction of these will collide, for each atom, keep track of the 1000 other atoms it collided with most often - am I recapping properly, no_gravity?
[22:24:14] <biberu> stenno: it'd be hilarious if the whole thing was just an example that doesn't really relate to the problem :D
[22:24:49] <no_gravity> entuland: 10 million atoms. 6 million events in which between 2 and 20.000 atoms collide.
[22:25:08] <Sammitch> biberu: it's already hilarious that particle simulation data is being processed in PHP at all
[22:25:16] <da_wunder> ^
[22:25:41] <no_gravity> Sammitch: Talk to celphi, they are building a http request router :)
[22:25:44] <biberu> Sammitch: yeah, wouldn't be my first pick ^^
[22:25:56] <da_wunder> and really I would just try to use some database trigger for those events to calculate that data to your database that you need
[22:26:09] <stenno> biberu: i am almost certain it is, as i mentionede above
[22:26:38] <stenno> biberu: i called them 'walking xy problem' for a reason
[22:26:46] <stenno> not that they ask their first question of that sort on irc
[22:27:04] <stenno> we will see
[22:27:10] <entuland> I now wonder where the events results come from
[22:27:29] <entuland> I mean, they're in the DB, but what is it that generated them and put them there as strings of integers
[22:27:40] <Sammitch> no_gravity: an HTTP request router is at least somewhat in PHP's wheelhouse and doesn't rely on doing tight loops on large data structures, which PHP is particularly poorly suited to
[22:28:00] <no_gravity> entuland: That is as much as I can tell about the project at hand.
[22:28:06] <da_wunder> and why I would do that in database level is because those "events" seems to be the trigger for re-calculate stuff for that event - right?
[22:28:11] <stenno> sometimes they come online, ask a certain question, get an answer they don't like, then insist that _their_ answer they made up before joining is the correct one, and call people idiots
[22:28:36] <stenno> always entertaining but also sometimes annoying
[22:28:37] <no_gravity> Sammitch: I totally congratulate celphi on writing their own router. I was hoping we see the end result. Maybe I missed it.
[22:28:40] <entuland> yeah, that data could as well be real data from a particle accelerator and not a simulation at all for all I know
[22:29:33] <Sammitch> ahh the ol "CERN shifting to LAMP stack for data processing"
[22:30:00] <entuland> no_gravity, they shared this earlier: https://bpa.st/SPIQ
[22:30:23] <biberu> lol Sammitch
[22:30:37] <no_gravity> entuland: Ah! Progress!
[22:30:53] <entuland> guess so eheheh
[22:31:14] <no_gravity> entuland: And I hoped we would bring this down to 10 lines by burning through $1000 of programmer manpower.
[22:31:42] <no_gravity> But it looks like the project ended at 105 lines.
[22:31:57] <da_wunder> and why not to use `PUT` method for updates instead of `POST`
[22:31:59] <entuland> oh well, I wrote probably worse than that even though it does its job
[22:32:17] <biberu> would prefer more lines but fewer years
[22:32:40] <Byteflux> da_wunder: insignificant semantics, either is fine. the more interesting question is why is everything static
[22:32:59] <Byteflux> why is it also strict types with no type declarations?
[22:33:02] <entuland> singleton? :P
[22:33:21] <Byteflux> even singletons still require an instance.
[22:33:39] <Sammitch> classic pitfall
[22:34:53] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 250 seconds)
[22:35:06] <da_wunder> Byteflux: that was just the first thing that I noticed - imho that class is quite crap - but if that works and do the jobs it's fine for me, just saying that I would not use something like that never
[22:36:13] <Byteflux> there's nothing wrong with being inexperienced and writing crap code, of course.
[22:36:34] <Byteflux> there is something very wrong with thinking your way is the best way and still writing crap code.
[22:36:54] <stenno> dunning kruger
[22:36:59] <Byteflux> too stubborn to be helped
[22:37:15] <no_gravity> Sammitch: As for the switch to LAMP stack - there is no Apache involved in this.
[22:38:25] <Byteflux> like we even told him why is use of preg_match_all() in this very example is a poor solution
[22:38:31] <Byteflux> and gave him at least 2 different alternatives
[22:38:35] <Byteflux> but he was convinced he knew best
[22:38:55] <biberu> no_gravity: php -S? ^^
[22:40:01] <no_gravity> biberu: Only commandline tools :)
[22:40:58] <biberu> hehe, just joking :)
[22:41:23] <no_gravity> I know.
[22:41:41] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Read error: Connection reset by peer)
[22:44:53] *** Quits: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:80c0:ff1d:f199:aec5) (Ping timeout: 252 seconds)
[22:49:50] *** Joins: WishBoy (~WishBoy@user/wishboy)
[22:50:47] *** Joins: Optimus (~risto@87.227.237.59)
[22:56:23] *** Quits: stenno (~stenno@user/stenno) (Quit: WeeChat 3.1)
[22:56:38] *** Joins: stenno (~stenno@user/stenno)
[23:01:00] *** Joins: faktor (~factor@ip174-67-28-62.ok.ok.cox.net)
[23:04:45] *** Quits: fernandos (~fernandos@194.107.178.219) (Quit: Leaving)
[23:07:20] *** Quits: Optimus (~risto@87.227.237.59) (Ping timeout: 252 seconds)
[23:07:31] *** Joins: Optimus (~risto@87.227.237.59)
[23:07:42] *** Quits: judah (~judah@rrcs-74-87-190-146.west.biz.rr.com) (Ping timeout: 252 seconds)
[23:12:24] *** Quits: delboy1978uk (~delboy197@202.42-132-109.adsl-dyn.isp.belgacom.be) (Quit: delboy1978uk)
[23:20:54] *** Quits: AllenJB (~AllenJB@user/allenjb) (Ping timeout: 252 seconds)
[23:21:16] *** Quits: chemsmith (~chemsmith@user/chemsmith) (Ping timeout: 252 seconds)
[23:21:31] *** Joins: AllenJB (~AllenJB@user/allenjb)
[23:22:18] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[23:22:44] *** Quits: Blondie101010 (~Blondie10@user/blondie101010) (Ping timeout: 252 seconds)
[23:30:08] *** Quits: Optimus (~risto@87.227.237.59) ()
[23:30:23] *** Joins: TanoMarcelo (~TanoMarce@179.63.242.126)
[23:30:33] *** Joins: Mr-Snick (mr-snick@gateway/vpn/protonvpn/mr-snick)
[23:36:30] *** Quits: guidoc (~guido@host-79-43-249-191.retail.telecomitalia.it) (Quit: WeeChat 3.2)
[23:41:08] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[23:44:57] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Quit: Ping timeout (120 seconds))
[23:45:50] *** Quits: chemsmith (~chemsmith@user/chemsmith) (Ping timeout: 252 seconds)
[23:46:23] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[23:46:26] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[23:52:22] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[23:56:34] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Ping timeout: 240 seconds)
[23:58:30] *** Joins: delboy1978uk (~delboy197@109.132.42.202)
