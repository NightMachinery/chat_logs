[00:01:31] <ccx> You definitely aren't going to win any golfing contests with Go-like syntax. If that was the goal I'd go with something more concatenative/dataflow or APLish.
[00:03:51] <nmz> ccx: or this https://tromp.github.io/cl/Binary_lambda_calculus.html#Symmetry_of_information https://justine.lol/lambda/
[00:04:17] <nmz> but I don't want to
[00:04:56] <nmz> still, who's talking about golfing?
[00:05:05] *** Quits: Meli (~meli@user/meli) (Ping timeout: 250 seconds)
[00:05:52] *** Parts: larryv (~larryv@zsh/patchmanager/larryv) ()
[00:07:49] <ccx> The article kinda did. Or at least did make active comparisons of size of useful scripts in Prig and AWK.
[00:17:39] *** Quits: AJ_Z0 (~AJ_Z0@user/aj-z0/x-3780512) (Quit: I have to return some videotapes)
[00:17:45] *** Joins: Meli (~meli@user/meli)
[00:21:55] *** Joins: AJ_Z0 (~AJ_Z0@user/aj-z0/x-3780512)
[00:44:05] *** Joins: bluedust (~bluedust@117.222.189.19)
[00:45:56] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[00:48:14] *** Quits: bluedust (~bluedust@117.222.189.19) (Ping timeout: 250 seconds)
[01:01:10] *** Quits: user51 (~user51@77.126.14.94) (Quit: Lost terminal)
[01:08:15] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[01:10:43] *** Quits: vinipsmaker (~vinipsmak@187.106.197.220) (Quit: Leaving)
[01:17:17] *** Joins: vinipsmaker (~vinipsmak@187.106.197.220)
[01:22:26] *** Quits: vinipsmaker (~vinipsmak@187.106.197.220) (Quit: Leaving)
[01:27:23] *** Joins: vinipsmaker (~vinipsmak@187.106.197.220)
[01:27:40] *** Quits: tangy (~tangy@user/tangy) (Remote host closed the connection)
[01:53:25] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[02:03:37] *** Joins: dfg (~dfg@dfg.rocks)
[02:03:37] *** Quits: dfg (~dfg@dfg.rocks) (Changing host)
[02:03:37] *** Joins: dfg (~dfg@user/dfg)
[02:08:11] *** Joins: DX099 (~dx099@2001:470:69fc:105::21ce)
[02:08:56] <DX099> Hi all
[02:09:24] <emanuele6> hello
[02:10:09] <emanuele6> oh, wait. this is #awk, oops
[02:10:50] <DX099> does someone knows how to prevent awk from tokenising the string in a var ?
[02:11:15] <DX099> there's a "%$" chain in the string
[02:11:25] <DX099> and awk is trying to interpret them as it prints it
[02:15:26] <emanuele6> show the code
[02:16:08] <DX099> awk -F '\t' '{ for (i=2;i<=NF;i++) {  { printf $i"\n"}  } }' 
[02:16:18] <DX099> myfile.txt
[02:16:18] <emanuele6> whare is %$?
[02:16:35] <DX099> it's a field in myfile.txt
[02:16:38] <emanuele6> you, in the field
[02:16:46] <emanuele6> why are you using printf like that to begin with?
[02:16:53] <emanuele6> you are injecting a string into the format
[02:17:07] <DX099> myfile.txt -> "foo <tab> bar <tab> etc."
[02:17:43] <emanuele6> well, the solution is to use `printf "%s\n", $i;' instead of that; or even just `print $i'
[02:17:53] <DX099> emanuele6: because I was getting newlines and wanted to basically create a new line every 2 field
[02:18:04] *** Joins: seninha (~chatzilla@user/seninha)
[02:18:35] <emanuele6> but you could write this more simply using cut+tr
[02:18:43] *** Joins: dextaa7 (~DV@user/dextaa)
[02:19:03] <emanuele6> cut -f2- | tr '\t' '\n'
[02:19:18] <emanuele6> if that is even what you really need to do
[02:19:31] <DX099> ah yes.. just "print $i" worked. Don't know how I got tangled in the printf mess...
[02:19:31] *** Joins: yitz_ (~yitz@exercism/yitz)
[02:19:57] <DX099> I completely forgot about other *nix tools
[02:20:13] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: yitz (~yitz@exercism/yitz) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: dextaa (~DV@user/dextaa) (Ping timeout: 256 seconds)
[02:20:47] *** dextaa7 is now known as dextaa
[02:22:03] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[02:22:29] <DX099> emanuele6: ah I know I didn't use a more direct approach:l the tab between the words are EXACTLY the same
[02:22:53] <emanuele6> ?
[02:23:00] <DX099> so that would put each field/column on its own line
[02:23:31] <DX099> while I need them to be 1st - 2nd \n repeat...
[02:23:36] <emanuele6> i don't understand
[02:23:50] <DX099> anyway thx a lot
[02:24:06] <emanuele6> you had $i"\n"
[02:24:13] <emanuele6> not $i" - "
[02:24:20] <emanuele6> is that what you need?
[02:24:48] <DX099> "\n" was fine
[02:25:03] <DX099> you didn't see the full stuff
[02:25:30] <DX099> awk -F '\t' '{ for (i=2;i<=NF;i++) { if ( i % 2 == 0) {print $i} else {printf  $i "\t"} } }'
[02:25:38] <DX099> is how it eventually looks like
[02:27:57] <emanuele6> so
[02:28:00] <emanuele6> 1st
[02:28:06] <emanuele6> 2nd\t3rd 
[02:28:12] <emanuele6> 4th\t
[02:28:15] <emanuele6> like that?
[02:29:47] <DX099> rather even : 1st\t2nd\n
[02:29:58] <DX099> i=1 normally
[02:30:01] <DX099> just corrected
[02:30:32] *** yitz_ is now known as yitz
[02:30:33] <emanuele6> yeah, so that wasn't really what you were trying to do.
[02:31:21] <emanuele6> either way
[02:31:59] <emanuele6> if that is what you want, you can still just use:   < myfile.txt tr '\t' '\n' | paste - -
[02:34:08] <emanuele6> and your awk script could also be written as
[02:36:10] <emanuele6> awk -v RS='\t' '{ printf "%s", NR % 2 ? $0 : "\t" $0 "\n" }'
[02:39:46] <emanuele6> mm, well, that does not work great, because of the final newline
[02:40:29] <emanuele6> you can fix that by using gawk/nawk/mawk instead of generic POSIX awk and setting RS to '\t|\n'
[02:40:48] <emanuele6> or just use tr+paste
[02:45:20] <emanuele6> or:  awk -v RS='\t' '{ printf "%s", NR % 2 ? $0 : "\t" $0 (/\n$/ ? "" : "\n") }' 
[03:06:23] *** Quits: Meli (~meli@user/meli) (Ping timeout: 256 seconds)
[03:08:44] *** Joins: Meli (~meli@user/meli)
[03:18:18] *** Joins: chasmo77 (~chas77@c-71-193-246-4.hsd1.or.comcast.net)
[03:32:30] *** Quits: APic (apic@apic.name) (Quit: [TLS] Client upgrade)
[03:32:44] *** Joins: APic (apic@apic.name)
[04:04:12] *** Quits: Meli (~meli@user/meli) (Ping timeout: 240 seconds)
[04:08:21] *** Joins: Meli (~meli@user/meli)
[04:31:45] *** Joins: roarde (~roarde@user/roarde)
[04:43:15] *** Quits: roarde (~roarde@user/roarde) (Read error: Connection reset by peer)
[04:43:25] *** Joins: roarde (~roarde@user/roarde)
[04:49:57] *** Quits: roarde (~roarde@user/roarde) (Ping timeout: 252 seconds)
[04:55:21] *** Quits: Strykar (~wakka@signald/Strykar) (Quit: Leaving.)
[04:57:42] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[04:58:16] *** Joins: Strykar (~wakka@signald/Strykar)
[05:05:46] *** Quits: Meli (~meli@user/meli) (Ping timeout: 245 seconds)
[05:07:05] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[05:12:22] *** Joins: Meli (~meli@user/meli)
[05:19:46] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220226204633])
[05:24:31] *** Joins: tangy (~tangy@user/tangy)
[05:44:32] *** Quits: AJ_Z0 (~AJ_Z0@user/aj-z0/x-3780512) (Read error: Connection reset by peer)
[05:47:05] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[05:47:17] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[05:47:53] *** Joins: AJ_Z0 (~AJ_Z0@user/aj-z0/x-3780512)
[06:05:48] *** Quits: Meli (~meli@user/meli) (Ping timeout: 240 seconds)
[06:07:41] *** Joins: Meli (~meli@user/meli)
[06:22:09] *** Joins: bluedust (~bluedust@117.222.189.19)
[07:04:57] *** Quits: Meli (~meli@user/meli) (Ping timeout: 256 seconds)
[07:07:01] *** Joins: Meli (~meli@user/meli)
[07:46:07] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:49:09] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[07:51:31] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[08:04:57] *** Quits: Meli (~meli@user/meli) (Ping timeout: 240 seconds)
[08:08:45] *** Joins: Meli (~meli@user/meli)
[08:31:01] *** Quits: fford (~fford@p200300c6ff39ed00de5a73e267739d47.dip0.t-ipconnect.de) (Quit: WeeChat 1.5)
[08:32:29] *** Joins: roarde (~roarde@user/roarde)
[08:44:46] *** Quits: Thanatermesis (~Thanaterm@191.92.148.122) (Ping timeout: 272 seconds)
[09:26:12] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[09:27:57] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Client Quit)
[09:32:48] *** Joins: bluedust_ (~bluedust@59.89.219.123)
[09:33:17] *** Quits: bluedust (~bluedust@117.222.189.19) (Ping timeout: 240 seconds)
[09:54:12] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 240 seconds)
[10:04:20] *** Joins: user51 (~user51@77.126.14.94)
[10:06:45] *** Joins: mixfix41 (~homefame@user/mixfix41)
[10:14:28] *** Joins: roarde_ (~roarde@user/roarde)
[10:18:30] *** Quits: roarde (~roarde@user/roarde) (Ping timeout: 272 seconds)
[10:25:30] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:33:42] *** Quits: pr3d4t0r (~zhenya01@user/pr3d4t0r) (Ping timeout: 252 seconds)
[10:41:21] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:41:49] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[10:45:10] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 260 seconds)
[11:02:23] *** Quits: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 256 seconds)
[11:02:30] *** Joins: test_ (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[11:12:45] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:20:21] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 245 seconds)
[11:25:55] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[11:46:13] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[12:12:55] *** Joins: boreas (~heiner@94.31.81.196)
[12:23:58] *** Joins: timm (~timm@user/timm)
[12:32:48] *** Quits: _val_ (~valentin@82-169-14-137.biz.kpn.net) (Remote host closed the connection)
[13:02:40] *** Joins: m4n (~emacs@95.91.209.255)
[13:09:17] *** Joins: lavaball (felix@31.204.155.215)
[13:20:02] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[13:24:23] *** Quits: roarde_ (~roarde@user/roarde) (Ping timeout: 256 seconds)
[13:25:15] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[13:46:07] *** Quits: bluedust_ (~bluedust@59.89.219.123) (Remote host closed the connection)
[14:04:09] *** Joins: roarde_ (~roarde@user/roarde)
[14:04:18] *** roarde_ is now known as roarde
[14:18:32] *** Joins: bluedust (~bluedust@59.89.219.123)
[14:21:19] *** Quits: bluedust (~bluedust@59.89.219.123) (Remote host closed the connection)
[14:21:34] *** Joins: bluedust (~bluedust@59.89.219.123)
[14:58:26] *** Quits: ryusaku (~ryu`@c6A334BC1.dhcp.as2116.net) (Ping timeout: 272 seconds)
[15:20:16] <user51> messy code, but yacc inspired: http://sprunge.us/3HuVRu
[15:20:42] *** Joins: f00 (~timm@user/timm)
[15:22:11] <Patsie> I see a small BEGIN block and a lot of functions, but nothing actually processing data?
[15:22:57] <geirha> the block at the very end
[15:23:05] <geirha> looks like it is a function block, but isn't
[15:23:17] <Patsie> ohw right... thought that was part of the push() function :)
[15:23:33] <user51> example input: http://sprunge.us/3HuVRu
[15:23:53] *** Quits: f00 (~timm@user/timm) (Client Quit)
[15:24:14] <user51> it should be similar to hoc1 if anyone read the yacc chapter in the 'unix programming environment'
[15:25:16] <Patsie> that's the same URL/code
[15:25:41] <user51> http://sprunge.us/kxwk9X
[15:25:44] <user51> my bad.
[15:26:27] <user51> i think i'm gonna change $0 = $0 "\n" to unchomp() :P
[15:27:28] <Earnestly> Patsie: For music, consider things like: https://gist.githubusercontent.com/Cloudef/7879341/raw/bd5fc6f63dd48fd547eac121ac2520fd44c50fe6/speedmetal.c
[15:27:41] <user51> i just wanted to see it work, but there's probably a bunch of wtfs hanging around. for example, only integers for now.
[15:27:42] <Earnestly> Patsie: ./a.out < /dev/urandom | pacat --format=u8 --rate=8000
[15:27:52] <Earnestly> Patsie: Also sox(1)
[15:31:46] <Patsie> seems like sox doesn't do .mp3 here
[15:36:17] <Earnestly> Patsie: It's more for dealing with wav/pcm (it can decode ogg/opus though)
[15:36:46] <Earnestly> But awk can generate inputs for pacat for example, and produce tones
[15:37:39] <Patsie> ohw, most likely
[15:37:55] <Earnestly> E.g. awk 'BEGIN {for(i=0; i<10000; ++i) printf "1 2"}' | pacat --format=u8 --rate=8000
[15:38:54] <Earnestly> awk 'BEGIN {for(i=0; i<2000; ++i) printf "%d %d", i, i}' | pacat --format=u8 --rate=8000
[15:41:02] <Earnestly> rand will give you white noise, an old tracker trick to make a snare/drum sound is to generate noise and then make it short
[15:42:23] <Earnestly> Anyway, it's still a lot of work but this is what I meant rather than decoding mp3
[15:44:35] <Patsie> sounds like a good project. I'm looking forward to any progress you'll make
[15:50:36] *** Joins: tkonto (~tkonto@188.4.208.136.dsl.dyn.forthnet.gr)
[15:50:45] <tkonto> I have this: https://paste.debian.net/1232737/
[15:51:59] <tkonto> The bottom part has awk code in use to grep the respective lines out of a long html output (wget was used to save it locally)
[15:53:10] <tkonto> but running 'awk -f med.awk file' also matches the last long line that includes for exampel "prices___date_time_ro" but not "id="pricess___date_time_ro""
[15:53:54] *** Joins: int (~int@0x4.cx)
[15:54:46] *** Quits: Ox4 (~int@0x4.cx) (Ping timeout: 250 seconds)
[15:55:09] <user51> i think gawk could do threaded code. too much nested ifs in that parser. but i'm overall satisfied.
[15:57:24] <tkonto> (have tried multiple ways in relation to those single quotes but same result)
[16:02:33] *** Quits: roarde (~roarde@user/roarde) (Quit: Leaving)
[16:05:29] <Patsie> patsie@amdie:~/awk/tkonto$ awk '/id="prices___price_ro"/' tkonto.txt 
[16:05:29] <Patsie> 			<div class="fabrikElementReadOnly" id="prices___price_ro">20</div>		</div>
[16:05:29] <Patsie> patsie@amdie:~/awk/tkonto$ 
[16:05:45] <Patsie> tkonto: that's correct, isn't it?
[16:06:54] <tkonto> All this is correct.
[16:06:58] <tkonto> But the last line should not match
[16:07:05] <Patsie> it doesn't
[16:07:10] <Patsie> there's only 1 line matched
[16:07:30] <Patsie> line number 8
[16:07:46] <Patsie> and not line number 9
[16:08:44] <Patsie> so I'm not sure what the issue is that you have
[16:09:12] <Patsie> since it does what it says on the tin
[16:10:17] <tkonto> https://paste.debian.net/1232742/
[16:10:45] <tkonto> I get this
[16:11:11] <Patsie> don't use single quotes around your regex'es
[16:11:21] <tkonto> already tried.. same thing
[16:11:24] <Patsie> you're already in an awk script, you don't need single quotes
[16:11:46] <Patsie> well, not in the correct way then I guess :D
[16:13:57] <Patsie> https://asciinema.org/a/MYjiPw6QXQeJN9fXwbUflD4px
[16:17:29] *** Joins: seninha (~chatzilla@user/seninha)
[16:18:53] <Patsie> tkonto: did that answer/solve your issue?
[16:19:15] <tkonto> yeap... as always the error is between the keyboard and the chair
[16:19:28] <tkonto> wrong path of the edited file compaired to the awk file called!
[16:19:30] <tkonto> thank you
[16:26:54] *** test_ is now known as _flood
[16:44:21] *** Joins: pr3d4t0r (~zhenya01@varenka.cime.net)
[16:44:21] *** Quits: pr3d4t0r (~zhenya01@varenka.cime.net) (Changing host)
[16:44:21] *** Joins: pr3d4t0r (~zhenya01@user/pr3d4t0r)
[16:44:32] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[16:50:05] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[16:57:39] <tkonto> one more question.
[16:57:41] <tkonto> please
[16:57:47] <tkonto> eventually my code looks like this:
[16:58:03] <tkonto> https://paste.debian.net/1232748/
[16:58:32] <tkonto> calling  it through bash, I get: 20Α ΘΩΡΑΚΟΣ F H P35
[16:58:45] <tkonto> using this on line tool: https://ideone.com/u0bhqa
[16:58:49] <tkonto> I get what is expected:
[16:58:56] <tkonto>     2020-02-13 15:01:35      &Alpha;/&Alpha; &Theta;&Omega;&Rho;&Alpha;&Kappa;&Omicron;&Sigma; F H P      20  
[16:59:13] <tkonto> have I missed something in bash in relation to UTF etc?
[17:00:07] <tkonto> https://pasteboard.co/IyeSvaKo5M7K.png
[17:00:58] <Earnestly> Use something that understands html/xml instead of awk.  E.g. html-xml-utils (hx...) hq, xmllint, xmlstarlet, xsltproc, etc.
[17:01:39] <Earnestly> xmlstarlet/h-x-u have tools to produce pyx format as well, which can then be used by line oriented tools
[17:02:01] <tkonto> what would the learning curve look like for that?
[17:02:36] <Earnestly> I can't remember, not as as hard awk anyway
[17:03:19] <tkonto> ~
[17:04:27] <Earnestly> hq uses css selectors, as does hxselect.  I don't know if you're going pyx route, or full blown XSLT.  XSLT is quite easy, although difficulty comes from "default templates" which just cause confusion
[17:04:35] <Earnestly> xpath 1.0 is extremely trivial
[17:04:59] <Earnestly> The biggest problem you'd face is not the tools but having valid inputs
[17:05:15] <tkonto> already looks Greek to me... just wanted to parse / grep / awk a large number of such lines.
[17:05:24] <tkonto> and bring them in readable form
[17:05:57] <Earnestly> Show real example then
[17:06:25] <tkonto> endless files of the format you see on pasted image.
[17:06:31] <tkonto> Get the three lines of interested
[17:06:36] <tkonto> format them as at the bottom
[17:06:58] <tkonto> (and create a long csv out of all of them - have that code ready but have not solved the UTF part yet)
[17:07:04] <tkonto> https://pasteboard.co/IyeSvaKo5M7K.png
[17:07:15] <Earnestly> That's a picture
[17:07:29] <Earnestly> I want example of html/xml you're using
[17:09:35] <Earnestly> Your first example even includes json
[17:11:15] <Earnestly> tkonto: Additionally, you seem to want xml entity encoding for your output rather than the characters themselves
[17:11:30] <tkonto> https://paste.debian.net/1232751/
[17:11:36] <Earnestly> Such as &amp; instead of '&'
[17:11:58] <Earnestly> I don't want incomplete data, xml/html has structure
[17:12:21] <tkonto> actually I need plain text output delimited
[17:12:43] <tkonto> so why an on line tool gives the correct output, and the same cli awk does not?
[17:12:53] <Earnestly> tkonto: You wrote that you expected: 2020-02-13 15:01:35      &Alpha;/&Alpha; &Theta;&Omega;&Rho;&Alpha;&Kappa;&Omicron;&Sigma; F H P      20
[17:13:15] <Earnestly> Which is not 'plain text'
[17:14:26] <tkonto> then there is a definition mismatch here.
[17:14:39] <tkonto> I will insist on taking a look of that picture I pasted if possible please
[17:14:58] <Earnestly> tkonto: You wrote: calling  it through bash, I get: 20Α ΘΩΡΑΚΟΣ F H P352
[17:15:03] <Earnestly> Which is plain text
[17:15:11] <Earnestly> You then wrote, that you expected entity encoding
[17:15:33] <Earnestly> The image doesn't show entity encoding
[17:16:01] <tkonto> and this shorts out things
[17:16:02] <Earnestly> Also what of the json?
[17:16:18] <tkonto> what I expect in bash, is the same as from the on line tool
[17:16:20] <Earnestly> This isn't going anywhere
[17:16:49] <tkonto> unfortunatelly can not help you more to help me... bash/sed/awk is my limit
[17:17:01] <Earnestly> Was prepared to help, showing different solutions with different tools, but you're not being fair
[17:17:05] <Earnestly> So nevermind eh
[17:17:10] <tkonto> I have the specific input... I need the formated output without the <div> parts
[17:17:35] <Earnestly> Yeah, well good luck with parsing non-regular languages with regular expressions
[17:18:18] <tkonto> I understand what you say. But still this does not explain why the on line regular expression works, and the bash/terminal same regular expression does not
[17:19:31] <tkonto> in my humble opinion the online tool is encoding agnostic
[17:20:38] <tkonto> I might well be wrong, but is there any other explanation?
[17:21:05] <Earnestly> https://0x0.st/oPZp.txt
[17:21:45] <tkonto> rephrasing
[17:22:54] <Earnestly> Show it being different, with exactly the same inputs
[17:22:57] <tkonto> using this online tool https://ideone.com/u0bhqa I read on screen what I expected wich is: https://pasteboard.co/f1rcvhA3BSEn.png
[17:23:15] <Earnestly> Because I suspect you're feeding the bash version the real data and not the clipped version presented on ideone
[17:23:32] <tkonto> very valid assumption and probably the solution
[17:23:36] <tkonto> there we go 
[17:23:38] <tkonto> thank you
[17:24:04] <tkonto> small pause but will come back to that... very interesting discussion
[18:01:51] *** Joins: Thanatermesis (~Thanaterm@191.92.148.122)
[18:23:57] *** Quits: timm (~timm@user/timm) (Ping timeout: 252 seconds)
[18:26:05] *** Quits: lavaball (felix@31.204.155.215) (Ping timeout: 256 seconds)
[18:31:41] *** Quits: tangy (~tangy@user/tangy) (Remote host closed the connection)
[18:36:21] *** Joins: lavaball (felix@31.204.155.215)
[19:07:58] *** Quits: lavaball (felix@31.204.155.215) (Ping timeout: 272 seconds)
[19:16:16] *** Joins: lavaball (felix@31.204.155.215)
[19:47:50] *** Joins: timm (~timm@user/timm)
[20:11:12] *** Quits: timm (~timm@user/timm) (Ping timeout: 252 seconds)
[20:53:25] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220226204633])
[21:06:27] *** Quits: m4n (~emacs@95.91.209.255) (Ping timeout: 256 seconds)
[21:08:09] *** Quits: Meli (~meli@user/meli) (Ping timeout: 256 seconds)
[21:13:27] *** Joins: m4n (~emacs@ip5f5bd1ff.dynamic.kabel-deutschland.de)
[21:23:35] *** Joins: Meli (~meli@user/meli)
[21:31:21] *** Joins: timm (~timm@user/timm)
[21:32:45] *** Joins: bluedust_ (~bluedust@103.165.167.61)
[21:36:48] *** Quits: bluedust (~bluedust@59.89.219.123) (Ping timeout: 272 seconds)
[21:45:55] *** Quits: bluedust_ (~bluedust@103.165.167.61) (Remote host closed the connection)
[21:51:22] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[22:05:10] *** Joins: bluedust (~bluedust@103.165.167.61)
[22:37:16] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[22:43:06] <user51> any advice on implementing threaded code in awk?
[22:43:23] <user51> gawk and function pointers is my first instinct, but not much else.
[22:43:47] <user51> a big if/else could work, too
[22:44:09] *** Joins: bluedust (~bluedust@103.165.167.61)
[22:44:38] *** Joins: wurstwasser (~frank.hol@2001:a61:3491:4301:a8da:b1f2:cd0b:b8fd)
[23:07:19] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[23:20:03] *** Quits: timm (~timm@user/timm) (Ping timeout: 268 seconds)
[23:37:46] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
