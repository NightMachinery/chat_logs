[00:39:05] <epilys> https://sic.pm/s/275/when-wikipedia-met-tor-trials-of-legitimacy-at-a-key-moment-in-internet-history/
[00:39:06] <buttsbot> When Wikipedia met Tor: trials of legitimacy at a key moment in internet history - sic
[00:39:16] <epilys> :)
[00:52:22] *** Quits: dcz_ (~dcz@user/dcz) (Ping timeout: 250 seconds)
[01:31:57] <skyl4rk> hm, so it seems I successfully set up my own email server ...which is absolutely ridiculous given the amount of emails I send
[01:32:33] <defect> what did you use? postfix?
[01:34:16] <skyl4rk> opensmtpd
[01:34:27] <skyl4rk> + dovecot
[01:45:30] <skyl4rk> I wonder at what point spambots etc will start cutting off subaddress tags (actualname+tag@domain.tld) to get the "real" address
[01:46:45] <Brekkjern> Why not just use a catch-all system if it's your domain?
[01:47:27] <skyl4rk> catch-all system?
[01:48:02] <Brekkjern> A system that routes every adress that doesn't exist to a specific one.
[01:54:50] <skyl4rk> thought about it, but not in depth, and came across information on how to set subaddressing first, so I did that
[01:58:39] <skyl4rk> I have trouble to figure out how to fit this (either method) in with "real" email correspondence though, ie newsletters/customer clubs get tagged/unique addresses, and then mails between me and actual people uses something that does not have a large hash in it (or whatever) ...but that assumes that the contact books of personal mail clients and providers are secure and are not sold
[02:05:36] <skyl4rk> the shape differs as well, as the spammy addresses are set up to be uniquely identifiable one-to-one streams, whereas human interaction will be one to many and get forwarded or cc'd etc and so on, it's not possible to have an unique one-to-one addressing scheme in such a setup
[02:07:10] <skyl4rk> I'm getting analysis paralysis regarding the implementation of something I will not use since I don't like to contact people.
[02:54:20] *** gerikson1 is now known as gerikson
[03:49:26] *** eldritch_ is now known as eldritch
[03:54:56] *** Quits: eldritch (~eldritch@user/eldritch/x-9272577) (Changing host)
[03:54:56] *** Joins: eldritch (~eldritch@user/eldritch)
[03:59:36] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[05:05:00] *** Quits: kogepan (~kogepan@user/kogepan) (Ping timeout: 240 seconds)
[05:05:12] *** Joins: kogepan (~kogepan@user/kogepan)
[05:05:24] *** Quits: bradfier (~bradfier@user/bradfier) (Ping timeout: 240 seconds)
[05:06:36] *** Joins: bradfier (~bradfier@user/bradfier)
[05:35:56] <gwozniak> https://www.youtube.com/watch?v=9fa9lVwHHqg
[05:35:57] <buttsbot> Horror Short Film “Slaughterbots” | ALTER - YouTube - https://www.youtube.com/watch?v=9fa9lVwHHqg
[06:24:01] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[06:26:32] *** Joins: klardotsh (~klardotsh@172.58.43.159)
[07:13:09] <cb> it seems someone replied to my toot about my pent up rage about pinephoones
[07:13:12] <cb> TIME TO UNBOTTLE THAT SAHIT
[07:19:26] <Church> Oh?
[07:19:30] <Church> What was the rage
[07:20:17] <cb> https://snack.social/notice/AHcpfjTzhZOneVE1c8
[07:20:17] <buttsbot> Snackiverse
[07:22:09] <Church> Fair complaints
[07:22:21] <Church> Never use mine, too laggy as of like a year ago?
[07:22:24] <Church> Or six months?
[07:49:48] <kline> gwozniak, thats a good video, i think of it from time to time
[07:50:06] <kline> i saw it when it was released, i think it was a friend of a friend who was involved in filming the edinburgh bits
[07:50:17] <kline> so it went around my facebook friends
[08:49:50] *** Quits: martian67 (~martian67@user/martian67) (Remote host closed the connection)
[08:50:12] *** Joins: martian67 (~martian67@user/martian67)
[09:32:29] <klardotsh> cb: oh hey lol. I dug the rant and I'm sad to have not ever gotten to play with an N900. truly seemed like an ideal rig
[09:55:02] *** Joins: dcz_ (~dcz@user/dcz)
[11:03:09] *** Quits: martian67 (~martian67@user/martian67) (Remote host closed the connection)
[11:04:35] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[11:04:46] *** id is now known as \n
[11:05:20] *** Joins: martian67 (~martian67@user/martian67)
[11:10:43] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 250 seconds)
[11:11:51] *** Joins: MajorBiscuit (~MajorBisc@c-001-013-060.client.tudelft.eduvpn.nl)
[11:21:24] *** Joins: martian67| (~martian67@user/martian67)
[11:24:53] *** Quits: martian67 (~martian67@user/martian67) (Remote host closed the connection)
[11:34:42] <gthm> v.v.v
[11:34:43] <buttsbot> (☞ ͡° ͜ʖ ͡°)☞ (‿ˠ‿)
[12:12:00] <jjuran> cb: Sounds interesting, but JS;DR
[12:39:55] *** Quits: jjuran (~jjuran@c-73-172-196-113.hsd1.va.comcast.net) (Quit: Killing Colloquy first, before it kills me…)
[12:40:11] *** Joins: jjuran (~jjuran@c-73-172-196-113.hsd1.va.comcast.net)
[13:20:17] <pja> klardotsh: I had an N810. There was a lot of potential there, but it needed a ton more work.
[13:20:31] <pja> & Nokia management was not exactly backing the project.
[13:21:26] <pja> The Pine phone just doesn’t actually work as far as I can tell.
[13:49:39] <gerikson> Nokia was run by nerds, and it showed so much
[13:54:19] <wrl> i had an N9 for a while and i really enjoyed it
[13:54:26] <wrl> i wish that sailfish had taken off a bit more
[14:03:14] <gerikson> I used to rock Symbian and was well into its app ecosystem
[14:03:18] <gerikson> it sucked, frankly
[14:03:22] <gerikson> no fault of the devs
[16:05:07] <gwozniak> That interview thing from Canonical making the rounds is pretty incredible
[16:32:08] <gthm> it's really great
[16:32:42] <gthm> did you finish you interviewing already or does it come in time for you to copy some of it?
[16:33:57] <gwozniak> Interviews start tomorrow.  I've got my pitch for a last minute change!
[16:45:56] <kronk> NFT promotion on HN lmfao. if someone posts that Byte City Nights thing on lobste.rs they should be banned.
[16:47:31] <gwozniak> Not gonna argue against
[17:05:52] <cb> tfw you post something, it gets one upvote, and you can probably tell who upvoted it
[17:06:26] <Brekkjern> Your mother?
[17:09:02] <cb> nah, it was about appkit
[17:09:04] <cb> that's bait for david
[17:09:11] <cb> and i love it when he writes aboutit
[17:12:41] <gerikson> lawl
[17:19:47] <gerikson> fuck yo humblebrag HN  https://news.ycombinator.com/item?id=30752396
[17:19:48] <buttsbot> Ask HN: I got into MIT. Should I go? | Hacker News
[17:20:23] <gerikson> oh it's a money issue
[17:22:06] <cb> that's more sympathetic yeah
[17:22:58] <gwozniak> I read the analysis that a math prof did of the university ranking for Columbia University and it's amazing how bad the ranking system is
[17:24:10] <gwozniak> I've got four candidate interviews this week, all in the evening because of the time zone difference
[17:24:22] <gwozniak> gonna be a bit of a long week
[17:49:14] <epilys> is one of them is the 24hours availability one?
[17:51:13] <epilys> I have a 3 hour technical interview tonight with the CEO of the startup I told you guys about, and my internet connection is temporarily bad, I am in south europe and the guy is in San Fransisco, and I wish it was text chat only, no audio/video
[17:56:00] <gerikson> oof that's stressful epilys
[17:56:08] <gerikson> here's hoping it goes ok
[17:56:17] <epilys> gerikson, thank you :)
[17:56:56] <gwozniak> epilys: just in case it wasn't clear, the 24 hour thing was not the position we're hiring for :)
[17:57:03] <gwozniak> And yeah, hope things go well
[17:57:24] <epilys> they seem reasonable, I mean the first thing they told me about the interview is "we won't ask about algorithms and programming puzzles, we don't do that"
[17:57:26] <gwozniak> Our interviews are 1.5 hours and only part of it is technical stuff
[17:57:37] <epilys> what's the rest?
[17:58:09] <gwozniak> Resume discussion, some general questions about team experiences
[17:58:24] <gwozniak> Yes, it's "technical" but it's not coding questions
[17:58:42] <epilys> aha
[18:00:49] <gwozniak> We don't put candidates through the ringer.  We assume that we will be training whoever we hire, so we're looking for good technical competency and ability to learn
[18:01:38] <gwozniak> They do need to know some basics, of course.  That's what we are looking at.  The basics are in the job description, so they know them coming in
[18:02:58] <epilys> how do you test for fakers (con artists)?
[18:03:56] <gwozniak> We don't really have a test for that.  You can get a sense for it when you talk to them and ask about their past experiences
[18:10:54] <epilys> Yesterday I heard this story. Person works in Intel maintaining linux kernel drivers for at least 10 years. Has public open source contributions. Recently applies to meta, they give him a leetcode problem and 20 minutes and he failed.
[18:11:50] <gerikson> people are obsessed with being scammed by con artists
[18:12:25] <epilys> it's a survival bias; you read about con artists a lot because they stand out but I think they are rare
[18:13:37] <gwozniak> We hired a couple of juniors last year and they were surprised that we didn't do leetcode in our interview.  They were only really prepared for that.
[18:13:55] <gwozniak> I think leetcode is tragically dumb, for the most part
[18:15:03] <epilys> yep
[18:16:02] <epilys> I only knew how to solve the specific problem because I've solved related problems in the past. No way to come up with it on your own under 20 mins and pressure.
[18:16:16] <Geekingfrog> how do you interview juniors gwozniak ?
[18:19:42] <gwozniak> One of our requirements is a uni degree in EE or CS (or something similar), so we get them to talk about the projects they did there
[18:20:11] <gwozniak> We do code walkthroughs, using small snippets of code
[18:20:48] <gwozniak> Ask about hardware things, since that's a job requirement
[18:25:07] <gerikson> someone trying to farm karma? https://lobste.rs/s/3pts8e/reflections_on_trusting_trust_1984
[18:25:07] <buttsbot> Reflections on Trusting Trust (1984) | Lobsters
[18:27:14] <gwozniak> Breakin' out the classics
[18:27:26] <Geekingfrog> ok makes sense.
[18:28:20] <gwozniak> We do have a coding portion.  It's not all that complicated.
[18:28:48] <gwozniak> Honestly, the most used structure you're going to hit in the code we work on are linked lists
[18:29:39] <gwozniak> Followed by hash tables
[18:41:41] <edk> to some extent i'm quite surprised that there are people who can't solve the simpler problems that are talked about
[18:42:24] <epilys> which in particular?
[18:42:47] <edk> like i don't think anyone expects you to have memorized how to reverse a binary tree or reverse the letters of each word in a string in place or whatever
[18:43:01] <edk> they just think you should be able to figure it out
[18:43:16] <edk> which, interview nerves aside, seems entirely reasonable; they're not hard problems
[18:43:29] <gwozniak> Something like "detect a palindrome" seem to me like entry-level stuff
[18:43:30] <epilys> they are not, but interviews are very stressful for most people
[18:43:46] <epilys> also even if you are not interviewing some things are difficult to get right https://ai.googleblog.com/2006/06/extra-extra-read-all-about-it-nearly.html
[18:43:47] <buttsbot> - Google AI Blog: Extra, Extra - Read All About It: Nearly All Binary Searches and Mergesorts are Broken -
[18:43:47] <edk> i mean, yes, but *any* question you can ask in an interview will be stressful for someone
[18:44:41] <edk> i didn't ask about binary searches and mergesorts, but i will note that there's been a lot of stuff written about them where the person writing the code is not allowed to test it
[18:44:50] <edk> that's dumb in an interview setting and it's dumb in a research setting, imo
[18:45:23] <epilys> yep. The essentiality of testing is something people have to figure out.
[18:46:49] <edk> so re interviews being stressful: asking me what my greatest weakness is will stress me out and i'll give a bad answer
[18:47:01] <edk> everyone is going to struggle with something
[18:47:34] <gerikson> git gud
[18:48:30] <edk> i think asking people hard algorithms questions doesn't make a ton of sense: you'll end up selecting for people who happen to know the answer
[18:49:45] <edk> but asking relatively... elementary questions that don't require any background knowledge, and giving the candidate sufficient time to reason their way to the answer, might be sensible
[18:50:04] <edk> certainly it seems a fairer way to judge someone's ability to program than just having a chat with them
[18:51:10] <Xe> edk: tbh hiring in general is broken
[18:51:34] <edk> yes, but i'm not sure if solutions are known
[18:52:25] <gerikson> hehe HN does not like the field I just entered https://news.ycombinator.com/item?id=30741335
[18:52:26] <buttsbot> My biggest mistake as an RPA developer | Hacker News
[18:53:03] <Brekkjern> I had an algorithms course just last semester and I have already forgotten most of it because frankly, it's pointless to remember.
[18:53:26] <edk> it doesn't seem pointless to me
[18:54:05] <Brekkjern> When was the last time you implemented a sorting algorithm rather than just call .sort() on whatever collection you had on hand?
[18:54:29] <gerikson> +1
[18:55:08] <edk> probably pretty recently, but i don't exactly keep a log
[18:55:29] <edk> definitely pretty recently if you count insertion sort
[18:56:30] <edk> in general, though, i think knowing how things work is quite helpful for trying to use them well
[18:56:51] <Brekkjern> I absolutely agree that the course itself is good
[18:57:11] <Brekkjern> I just don't agree that it's in any way a good way to measure competency.
[18:57:43] <edk> i don't think "can you remember how to implement quicksort" is a good way to measure competence, although it might be for some jobs
[18:58:17] <Brekkjern> Why? This is coding. Why not just copy paste it from the last time you did it rather than spend time remembering it?
[18:58:21] <edk> i also don't think i've ever had an interview where i was expected to do something like that
[18:58:42] <edk> why would i copy paste it from somewhere when i know how to write it?
[18:59:10] <Brekkjern> It was mostly a response to this part "although it might be for some jobs"
[18:59:37] <Brekkjern> If you remember it, fine. I know my debit card number by heart, but I don't advocate for others to learn theirs...
[18:59:56] <edk> if you're doing a job where sorting algorithms are a particular focus, not remembering quicksort well enough to implement it may be a red flag on its own
[19:00:42] <edk> i remember my credit card number because i use it often; i didn't memorise it explicitly, it's familiarity
[19:01:26] <edk> being unfamiliar with quicksort is probably fine in whatever job you do, but there's probably work that you can't do without being familiar with it
[19:04:33] <Brekkjern> I'd wager that being unfamiliar with quicksort is just fine in the absolute majority of coding jobs out there. Even at a senior level.
[19:05:06] <ben> i've never written a sorting algo by hand since uni
[19:05:32] <Brekkjern> It's nice knowing about it so you know what's going on under the hood, but 99% of the time the inefficiencies of a program are because of lazy design rather than improper use of a sorting algo
[19:05:56] <Brekkjern> (as in, repeatedly sorting something instead of doing it once)
[19:06:18] <edk> sometimes repeatedly sorting a thing is optimal
[19:06:31] <Brekkjern> Sometimes, yes.
[19:06:47] <edk> i think "even at a senior level" is a bit odd
[19:07:31] <edk> i'm not claiming that there's a certain level of seniority (whatever that even is) where you start needing to know how to implement sorting algorithms; i'm saying there are jobs where you do
[19:07:56] <edk> but i also think this is probably all one big straw man since afaict nobody was arguing that coding interviews should ask you to implement a sort
[19:31:54] <epilys> do they actually ask for sorting in particular in interviews?
[19:32:06] <epilys> I don't think so
[19:39:20] <edk> i've never seen it
[19:39:49] <epilys> https://leetcode.com/problems/swim-in-rising-water/
[19:39:49] <buttsbot> Loading...
[19:39:59] <epilys> this was the problem in the facebook interview btw
[19:40:14] <epilys> (it's a binary search)
[19:43:33] <edk> that seems like a question that's presented as being harder than it is
[19:45:33] *** Joins: epilys[m] (~epilysmat@2001:470:69fc:105::b4a1)
[19:45:48] <epilys> yep
[19:52:08] <epilys> speaking of interviews... I'm joining one on zoom in 10 minutes.
[20:11:50] <gwozniak> edk: I agree that interviewing is broken and there is no fix.  I'll go so far as to say there probably isn't a "fix" and it will always be broken
[20:16:00] <defect> is it broken in other engineering fields as well? i wonder what an interview for a chemical engineer or civil engineer look like
[20:17:06] <Brekkjern> They likely talk a bit about their previous projects and roles, and get a feel for the other person they are hiring. Credentials can be checked with the uni they went to.
[20:22:29] <indigo> epilys: Yeesh, I wouldn't even have known to use binary search for that one. BFS/DFS? Sure
[20:26:35] <edk> defect: in some fields it's quite common to be asked to give a presentation on a previous project
[20:27:27] <edk> which definitely has some advantages. it disproportionately tests presentation skills, but a lot of engineering work involves lots of presentations
[20:27:28] <indigo> Also, leetcode optimal solutions != actual achievable solutions in interview setting
[20:27:57] <edk> depends on the problem but yeah
[20:28:05] <edk> i don't know why you would ask a question like that in an interview
[21:01:11] <gwozniak> defect: I can't think of any particular reason why it would be a whole lot better in other fields, engineering or not
[21:02:38] <gwozniak> "Hiring is hard" is a universal gripe, based on my experience
[21:09:28] <gwozniak> The tech industry's obsession with getting to the "objective truth" in everything, despite how sloppily and wrongly they go about it, is probably why it gets so much more attention
[21:11:31] <Brekkjern> I think it's because we actually can measure an objective truth in parts of our field, so "it has to be possible to do that with the rest"
[21:12:03] <gwozniak> See also, "data driven decisions, obsession with"
[21:12:39] <gwozniak> Brekkjern: I'm sure that's it.  A.k.a. hubris.
[21:14:40] <Brekkjern> The thing I love is when you try to digitize some process and the owners of that process are resisting because "you can't actually _know_ that a combination of these bits of information means X", but it's just fine when humans are making that same guess...
[21:17:05] <gwozniak> Usually the humans are using a lot more information than what is there, though
[21:17:30] *** Quits: klardotsh (~klardotsh@172.58.43.159) (Ping timeout: 252 seconds)
[21:17:46] <Brekkjern> That depends on the process.
[21:20:39] <gwozniak> of course
[21:21:42] <gwozniak> On the other hand, if you don't really know what combination of bits means X, then digitizing the process may be the wrong thing to do in the first place
[21:24:26] <Brekkjern> If you don't know what they mean, then yeah. But sometimes you just have to make an inference that things in two tables are the same thing from different data sources
[22:24:54] <Church> Ah tailscale, the such a good thing and yet so many annoyingly blocked/dropped connections
[22:29:05] *** Quits: MajorBiscuit (~MajorBisc@c-001-013-060.client.tudelft.eduvpn.nl) (Ping timeout: 250 seconds)
[22:31:13] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[22:36:55] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 256 seconds)
[22:55:31] <skyl4rk> recently held an interview, I'm new at that but the way I was instructed, and how I did it was basically to ask the interviewee questions about their previous work, constraints they've worked against, debugging approach, etc. And try to listen to if they sounded like they know what they talk about, and if it matches our needs.
[22:57:12] <skyl4rk> when I myself was hired way back I don't ever felt like there was any interview type that went into any actual technical stuff. They might have asked me about my master thesis, don't remember
[22:57:59] * skyl4rk starts writing without checking timestamps of previous conversation, oh well
[22:58:09] <Brekkjern> As one does
[22:59:55] <skyl4rk> yes, so much written, can't not post it now ...so tell me skyl4rk, how do you handle sunk costs in projects than require you to move swiftly?
[23:22:23] <Brekkjern> Unrelated to everything above:
[23:22:23] <Brekkjern> The Stormlight Archives is really good
[23:22:28] <epilys> indigo, I only knew it because I was taught this approach in uni. If you can reduce a problem to a yes/no question and do that check in O(n) and you want to find the minimum number that results in "yes" and you have a sequence of "no", "no", .. , "no", "yes", "yes", "yes" etc you do binary search to find the minimum. Ο(nlogn)
[23:22:46] <Brekkjern> Been having troubles putting it away
[23:23:39] <epilys> which book are you on now?
[23:23:44] <Brekkjern> Second
[23:23:49] <epilys> it only gets better!
[23:23:51] <epilys> promise
[23:24:07] <Brekkjern> I'm getting that impression :P
[23:24:08] <epilys> the second book was the least good for me but it was still good
[23:24:50] <epilys> I found the Shallan PoV chapters tiring
[23:25:09] <Brekkjern> I've found them interesting so far
[23:25:40] <Brekkjern> But I'm only about 1/3rd through
[23:34:31] <epilys> yeah it's subjective ofc, not saying my opinion is the ground truth
[23:44:07] <river> are there any channels about linux on here, but not #linux ?
[23:44:51] <Brekkjern> #archlinux
[23:45:05] <river> thanks
[23:47:22] <drakonis> there are multiple channels about linux here
[23:47:41] <river> ??
[23:47:56] <drakonis> you also have uh
[23:48:03] <drakonis> #gentoo, #guix, #voidlinux
[23:48:09] <river> those are distro specific
[23:48:19] <Brekkjern> So is #archlinux
[23:49:25] <drakonis> there's one i hang out on that's supposed to be about linux but its not the main topic
[23:49:45] <Brekkjern> Is it ##crustaceans?
[23:49:59] <drakonis> no
[23:50:02] <drakonis> its #r/linux
[23:50:25] <drakonis> i miss the days there was another secret lobsters channel
[23:50:41] <Brekkjern> As in, -boil?
[23:50:57] <drakonis> no, not boil.
[23:51:07] <epilys> maybe there still is?
[23:51:09] <epilys> :p
[23:51:13] <drakonis> ha.
[23:51:25] <drakonis> there was one for cooking and another h_s free channel
[23:51:29] <drakonis> like a secret cabal channel lol
[23:52:52] <Brekkjern> The cooking one still exists and is dead as hell
[23:58:23] <Church> The secret channel died for good
[23:58:42] <Church> And was replaced by another secret channel. Where the cabal lives
