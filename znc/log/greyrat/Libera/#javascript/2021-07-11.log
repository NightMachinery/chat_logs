[00:00:53] <qswz> return list[x]?.[y]
[00:01:00] <farn> return list[x]?.[y] != null
[00:01:04] <farn> maybe
[00:02:15] <qswz> you're 1 code point close to farm
[00:02:32] *** Quits: arash (~arash@5.123.115.167) (Ping timeout: 252 seconds)
[00:03:20] <farn> you're 1 code point close to qsw{
[00:03:25] *** Parts: Pacific_ (~arash@5.123.115.167) ()
[00:03:43] <han-solo> !!list[x]?.[y] # ?
[00:04:01] <qswz> n> String.fromCharCode('z'.charCodeAt(0)+1)
[00:04:01] <jellobot> (okay) '{'
[00:04:38] <qswz> _.get(list, 'x.y')
[00:04:46] <qswz> well no
[00:04:56] <qswz> _.get(list, [x,y])
[00:06:40] <qswz> I've attached a wood plank in my back, to keep my broken shoulder straight
[00:06:46] <qswz> works well
[00:07:04] <wroathe> I've attached a broken shoulder to my plank to keep it straight. Works well.
[00:07:46] <qswz> I want an artificial collar bone
[00:08:43] <qswz> my right one is fucked up, massive callus
[00:09:06] <qswz> and liek 2or 3 cm shorter, damn it
[00:09:26] <qswz> I code with one hand
[00:09:58] <farn> good thing your nick isn't qsw{ then
[00:10:14] <qswz> { looks like my right collar bone
[00:10:19] <qswz> with more font-weight
[00:11:33] <farn> that does sound fucked up
[00:11:38] <farn> can those be 3d-printed yet?
[00:12:28] <qswz> I wish, ctrl+c f the left one, inverse symmatry, and ctrl+v
[00:13:03] <qswz> I've seen a surgeon tho, he said it's not worth, becase it's no the first time it's borken
[00:14:19] <qswz> I've done nothing to heal well though
[00:17:35] <farn> the collar bone has always seemed like the hardest bone to stabilize
[00:17:55] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:a6ea:d549:1785:23d0) (Quit: Leaving)
[00:18:25] *** Joins: Lyn (~Lyn@user/law)
[00:18:32] <qswz> a stupid wood little plank works, not so practical tho
[00:19:19] <Lyn> What's the norm for networking libraries if using React and building an app?
[00:19:36] <qswz> they gave me some rings, but that's bad, that's compressing the bone
[00:19:53] <qswz> !fetch @ Lyn
[00:19:53] <jellobot> Lyn, window.fetch - a standard way to make HTTP requests, say bye to XHR and get a Promise http://mdn.io/Using_Fetch. For older browsers (IE*) see !polyfill
[00:20:33] <qswz> https://gist.github.com/caub/7494b4391c2d62c49b565d2cfc2c0c1f
[00:21:02] <Lyn> thanks, I'll look into that
[00:21:08] <Lyn> then I need to figure out what to build the backend with
[00:21:17] <qswz> nodejs obviously
[00:21:23] <qswz> +express
[00:21:29] <qswz> success recipe
[00:21:40] <farn> deno!
[00:21:44] <farn> jk
[00:22:15] <qswz> anything JS
[00:22:18] <Lyn> hmm, that sounds like a safe bet
[00:22:26] <Lyn> I was thinking of Golang for some projects earlier
[00:24:40] <Lyn> then, what would be the database of choice?
[00:28:30] *** Joins: aexijh (~aexijh@bras-vprn-unvlon5573w-lp130-07-174-93-47-157.dsl.bell.ca)
[00:30:21] <qswz> postgres
[00:30:44] <qswz> sqlite
[00:33:49] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[00:33:51] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[00:37:41] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 255 seconds)
[00:38:32] <ross> does anyone have experience with parser grammars in nearley? (https://nearley.js.org)
[00:39:02] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[00:41:29] *** Quits: qswz (~caub@91-175-196-225.subs.proxad.net) (Quit: leaving)
[00:41:52] <Donitz> can you use CC0 on codepen?
[00:47:44] <wroathe> ross: I'm familiar with parsers and grammars, but not nearley.
[00:55:16] <ross> thank you - I've written a small grammar that's supposed to convert an infix boolean statement to a postfix boolean statement. it works fine, except I'm having some trouble getting it to understand that it should process a unary operator before a binary operator
[00:56:00] <ross> e.g it interprets `not test(arg) and not test(arg)` ambiguously as either that (which is correct) and `not (test(arg) and not test(arg))` (incorrect)
[00:56:40] <ross> my wip nearley grammar is https://bpa.st/OXAQ (with a few test cases attached) and if it's useful there's an online repl here https://omrelli.ug/nearley-playground/
[00:57:23] *** Joins: silly_ (~silly@user/silly)
[00:57:35] <ross> wroathe: would you be able to help me tell my grammar about the precedence I want and/or best practices re this in the general case?
[00:59:04] <wroathe> ross: Let me mull this over
[00:59:15] <ross> wroathe: I appreciate your time, thank you
[01:00:06] <wroathe> ross: Yeah, you need to constrain the type of expression following a unary symbol to non-binary expressions
[01:00:34] *** Quits: sillyslux__ (~silly@user/silly) (Ping timeout: 240 seconds)
[01:00:44] <wroathe> ross: And require that they be enclosed in parens if they have more terms
[01:01:15] <ross> wroathe: I see. I assume I would start to do that by splitting my definition of `expression` across a few different types?
[01:01:41] <ross> either way, good to know, thank you very much
[01:01:55] <wroathe> ross: So, you'll need a new non-terminal for the type of expression following a unary that could either be an atom like a function function being applied, or a subexpression wrapped in parens
[01:02:09] <wroathe> ross: yes, you'll need to split up expression
[01:02:30] <ross> that makes sense; I understand
[01:02:35] <wroathe> ross: For a general framework for this look into "operator precedence" grammars
[01:02:36] <ross> perfect, thank you so much!
[01:02:42] <ross> I will do that
[01:06:48] *** Quits: hygl (uid16621@id-16621.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[01:08:14] <wroathe> ross: The basic idea is to do something like expr: expr + term | term; term: term * factor | factor; factor: identifier | number | func param_list | '(' expr ')' | unary_op factor;
[01:08:38] <wroathe> ross: (not your specific case, just generally)
[01:09:30] <wroathe> ross: These separate non-terminals will create separate predence levels when implemented with a top down parser
[01:09:36] <wroathe> precedence*
[01:11:51] <ross> wroathe: I've seen a couple of examples for different parser generators do something that I've not quite understood that seems similar to that on a surface level - for a grammar that parses stuff like `1 + 2` or `3 * 4` they use multiplication as a sub-expression of addition? there's an example on peggy's readme https://github.com/peggyjs/peggy#grammar-syntax-and-semantics
[01:12:00] <ross> I assume that method is similar to what you describe
[01:12:23] <ross> apologies for "sub-expression", am not quite familiar with the terminology yet
[01:13:28] <wroathe> ross: Yes, this is exactly it. I'd recommend reading the chapter on parsers in the dragon book.
[01:13:29] *** Joins: bambanxx (~bambanx@191.125.48.24)
[01:15:22] <wroathe> ross: Although subexpression is not the right word. It's about symbols: terminals and non-terminals, productions, sentences, and sentential forms.
[01:15:56] *** Quits: Ziyan (~ziyan@112.134.172.255) (Ping timeout: 255 seconds)
[01:15:57] <wroathe> ross: productions in additive "yield" or "generate" sentential forms containing multiplicative
[01:16:50] <Maxdamantus> I'd normally call them `e0`, `e1`, `e2` etc instead of relating them to one of their members.
[01:17:16] *** Joins: Ziyan (~ziyan@112.134.169.216)
[01:18:10] *** Quits: aexijh (~aexijh@bras-vprn-unvlon5573w-lp130-07-174-93-47-157.dsl.bell.ca) (Ping timeout: 240 seconds)
[01:18:40] <Maxdamantus> e0: identifier | number | '(' expr ')'; e1: e0 ('*' e0)*; e2: e1 ('+' e1)*; expr: e2;
[01:19:01] <wroathe> ross: And this precedence thing is actually out-of-band information that's not related to the grammar itself. It's just that implementing a grammar with multiple non-terminals ordered by increasing precedence level like this with a top-down parser will automatically lead to a parser that gets precedence right.
[01:19:16] <wroathe> ross: It's one of the more confusing things about CFG notation, in my view.
[01:19:49] *** Quits: noobly (~noobly@50.38.126.25) (Ping timeout: 246 seconds)
[01:20:13] <luiserebii> I'm having trouble understanding `readable.pipe()`... I've come across a piece of code passing a Cipher object, the result of `crypto.createCipheriv` to it
[01:20:23] *** Joins: aexijh (~aexijh@199.119.232.214)
[01:22:07] <luiserebii> Maybe it's because I don't understand Streams, reading documentation I see that `Cipher` objects can be used as streams
[01:22:23] <ross> wroathe: I think I understand, in principle. It'll certainly take me a while to wrap my head around it enough to actually implement it. Thank you for your advice, I really do appreciate it.
[01:22:59] *** Joins: howdoi (uid224@id-224.tooting.irccloud.com)
[01:25:52] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 246 seconds)
[01:26:05] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[01:28:12] *** Quits: bambanxx (~bambanx@191.125.48.24) (Remote host closed the connection)
[01:30:40] *** Joins: Danishman (~Allan@2-104-144-110-cable.dk.customer.tdc.net)
[01:30:43] *** o is now known as niko
[01:36:34] *** Joins: paule32 (~paule32@user/paule32)
[01:43:20] *** Quits: Ziyan (~ziyan@112.134.169.216) (Quit: Textual IRC Client: www.textualapp.com)
[01:43:38] *** Joins: Crassus (~Crassus@user/crassus)
[01:44:56] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[01:54:10] *** __jmcantrell__ is now known as jmcantrell
[01:56:35] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:a6ea:d549:1785:23d0)
[01:56:36] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 272 seconds)
[01:57:20] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 255 seconds)
[01:58:49] *** Joins: codebam (~codebam@user/codebam)
[01:59:06] *** Quits: wyclif (~wyclif@user/wyclif) (Quit: leaving)
[01:59:11] *** Joins: sillyslux__ (~silly@user/silly)
[01:59:26] *** Quits: silly_ (~silly@user/silly) (Read error: Connection reset by peer)
[01:59:52] *** Joins: silly_ (~silly@user/silly)
[02:03:38] *** Quits: sillyslux__ (~silly@user/silly) (Ping timeout: 255 seconds)
[02:05:23] *** Joins: sillyslux__ (~silly@user/silly)
[02:09:09] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 265 seconds)
[02:13:53] *** Joins: silly_ (~silly@user/silly)
[02:14:31] *** Quits: jellobot (~jellobot@104.248.16.142) (Remote host closed the connection)
[02:14:40] *** Joins: jellobot (~jellobot@104.248.16.142)
[02:14:40] *** ChanServ sets mode: +v jellobot
[02:16:38] *** Joins: silly (~silly@user/silly)
[02:17:32] *** Quits: sillyslux__ (~silly@user/silly) (Ping timeout: 268 seconds)
[02:18:03] *** Quits: debsan (~debsan@2800:810:471:2ee::1000) (Remote host closed the connection)
[02:19:18] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 252 seconds)
[02:19:41] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 252 seconds)
[02:19:53] *** Joins: hygl (uid16621@id-16621.tinside.irccloud.com)
[02:26:08] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Quit: WeeChat 3.2)
[02:26:58] *** Quits: inom (~inom@176.59.102.225) (Ping timeout: 240 seconds)
[02:26:59] *** Joins: silly_ (~silly@user/silly)
[02:27:56] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 255 seconds)
[02:28:51] <ross> Maxdamantus: after mucking about with this for a bit, despite your approach initially not making any sense to me I'm finding that I agree with it
[02:29:24] *** Joins: codebam (~codebam@user/codebam)
[02:30:03] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:18] *** Quits: silly (~silly@user/silly) (Ping timeout: 252 seconds)
[02:30:33] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:31:58] <wroathe> ross: Wait, what was Maxdamantus's approach?
[02:32:12] <ross> wroathe: 21:46:51 <Maxdamantus> I'd normally call them `e0`, `e1`, `e2` etc instead of relating them to one of their members.
[02:32:20] <ross> as opposed to `term`, `factor`
[02:32:26] <wroathe> ross: Ah
[02:34:21] <wroathe> ross: Ah. That was meant to be an example anyway. For a real language I'd do something like https://www.iso-9899.info/n1570.html#A.2.1
[02:34:39] <wroathe> My personal opinion is that e_n is a bit too nondescript.
[02:35:13] <ross> you're probably right, but I think in my use case I'm only going to have three or four of those at maximum
[02:35:31] <ross> but this does seem a lot more verbose
[02:35:48] <ross> ah!
[02:36:03] <ross> `multiplicative-expression`, `additive-expression`, etc
[02:36:13] <ross> ok this doesn't seem too difficult
[02:36:34] <wroathe> ross: Even for small grammars, naming things x0 just doesn't work for me. I need a bit more explanation.
[02:38:44] *** Joins: percY- (~percY@138.68.239.19)
[02:39:12] <ross> the cascade approach is starting to make sense, once I get over the instinct that's telling me "the variable name describes what is inside it" lmao
[02:39:59] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[02:41:06] <wroathe> Parsers are fun
[02:41:17] <wroathe> And this has been deep thoughts with wroathe
[02:45:24] <ross> https://usercontent.irccloud-cdn.com/file/znaZlv07/image.png
[02:45:43] <ross> I think I'm... maybe 70% of the way to grokking what I've just written. but it works
[02:45:47] <ross> thank you wroathe
[02:46:08] <wroathe> ross: np
[02:52:06] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:53:40] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[03:08:40] *** Quits: Intelo (~Intelo@88.246.74.132) (Ping timeout: 246 seconds)
[03:17:21] *** Quits: Atum_ (IRC@user/atum/x-2392232) (Quit: Atum_)
[03:17:58] *** Quits: Flannel (~flannel@user/flannel) (Ping timeout: 268 seconds)
[03:18:20] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 255 seconds)
[03:21:02] *** Quits: aexijh (~aexijh@199.119.232.214) (Ping timeout: 255 seconds)
[03:21:10] *** Joins: thiras (~thiras@user/thiras)
[03:22:00] *** Joins: aexijh (~aexijh@bras-vprn-unvlon5573w-lp130-07-174-93-47-157.dsl.bell.ca)
[03:35:48] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[03:45:05] *** Joins: Flannel (~flannel@cpe-76-175-193-181.socal.res.rr.com)
[03:46:13] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 246 seconds)
[03:48:53] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[03:49:16] *** Quits: mydog2 (~mydog2@74.175.240.241) (Ping timeout: 246 seconds)
[03:59:12] *** Joins: xse (~xse@user/xse)
[04:02:10] *** Quits: howdoi (uid224@id-224.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[04:06:00] *** Joins: WishBoy (~WishBoy@user/wishboy)
[04:07:51] *** Joins: ferdna (~ferdna@user/ferdna)
[04:10:59] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 255 seconds)
[04:14:36] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[04:17:25] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[04:17:30] *** Joins: codebam (~codebam@user/codebam)
[04:18:40] *** Quits: jess (~jess@libera/staff/jess) ()
[04:26:26] *** Joins: printForever (~textual@195.206.105.27)
[04:27:58] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 272 seconds)
[04:28:58] *** Quits: hygl (uid16621@id-16621.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[04:31:13] *** Quits: muley (~muley@76-245-68-99.lightspeed.iplsin.sbcglobal.net) (Ping timeout: 258 seconds)
[04:32:01] *** Joins: muley (~muley@76-245-68-99.lightspeed.iplsin.sbcglobal.net)
[04:34:53] *** Quits: Lyn (~Lyn@user/law) (Ping timeout: 252 seconds)
[04:42:24] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[04:43:19] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[04:51:28] *** Quits: Deide (~Deide@user/deide) (Quit: Seeee yaaaa)
[04:54:31] *** Quits: Flannel (~flannel@cpe-76-175-193-181.socal.res.rr.com) (Changing host)
[04:54:31] *** Joins: Flannel (~flannel@user/flannel)
[04:56:53] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:5507:d01e:412a:ed6a) (Ping timeout: 255 seconds)
[04:58:24] *** Joins: sillyslux__ (~silly@user/silly)
[04:59:12] *** Joins: jazzy (~jaziz@2600:380:8653:59ba:fdf6:260a:bc2c:db50)
[05:01:44] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 252 seconds)
[05:09:57] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[05:15:53] *** Joins: silly_ (~silly@user/silly)
[05:18:23] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[05:19:32] *** Quits: sillyslux__ (~silly@user/silly) (Ping timeout: 252 seconds)
[05:24:14] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:a854:e052:4466:161b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:26:08] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[05:26:20] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[05:26:28] *** Joins: howdoi (uid224@id-224.tooting.irccloud.com)
[05:28:02] *** Parts: gry (~quassel@botters/gry) (gone)
[05:29:09] *** Joins: GreenJelloAlt (~GreenJell@user/greenjello)
[05:31:40] *** Joins: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net)
[05:31:54] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Quit: leaving)
[05:39:06] *** Quits: GreenJelloAlt (~GreenJell@user/greenjello) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[05:41:26] *** Quits: femtopuff (~6174bb9b@user/ormaaj) (Ping timeout: 272 seconds)
[05:42:57] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[05:44:29] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[06:00:51] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[06:04:59] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[06:06:44] *** Joins: gggp (~gggp@125.33.90.106)
[06:15:00] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 272 seconds)
[06:15:12] *** Joins: keypushe- (keypusher@user/keypusher)
[06:18:30] *** keypushe- is now known as keypusher
[06:25:05] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 255 seconds)
[06:25:46] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:4084:53c5:5722:97ae)
[06:31:08] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Remote host closed the connection)
[06:31:31] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[06:32:41] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[06:34:20] *** Quits: printForever (~textual@195.206.105.27) (Ping timeout: 252 seconds)
[06:34:56] *** Joins: gggp_ (~gggp@60.10.194.47)
[06:36:08] *** Joins: l__q (~modinfo@user/modinfo)
[06:36:59] *** Joins: toretto (~0xe3b7@user/toretto)
[06:37:10] *** Joins: GreenJelloAlt (~GreenJell@user/greenjello)
[06:37:32] *** Quits: gggp (~gggp@125.33.90.106) (Ping timeout: 252 seconds)
[06:39:40] <toretto> Hi, I'm not a JS dev. I was happened to stumbleupon this page today, https://stackoverflow.com/q/1880198/13217668, but executing arbitary commands on the client side javascript sounds like very dangerous. I'm quite sure other JS devs have thought about this so just wanted to ask this.
[06:41:23] *** Joins: ethoxy (~exit-host@slave.sapi01.de)
[06:41:46] *** Joins: silly (~silly@user/silly)
[06:41:48] <theskillwithin> toretto there talking about nodejs probably
[06:42:03] <theskillwithin> which isn't in the clients browser, its ran on the server
[06:42:29] <toretto> Oh, I see. I thought the shell execution is done at the client side, meaning client's browser/user-agent.
[06:43:34] <wroathe> toretto: Nope. The browser JS environment is very limited. You can't execute arbitrary processes from the browser, for example.
[06:44:14] <toretto> wroathe: Yeah, that sounds relieving.
[06:44:24] *** Joins: sillyslux__ (~silly@user/silly)
[06:44:32] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[06:44:41] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 252 seconds)
[06:44:51] <wroathe> s/execute/create
[06:45:04] <theskillwithin> node is like js but in the backend
[06:46:09] *** Joins: earendel (uid498179@user/earendel)
[06:47:35] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 255 seconds)
[06:48:05] *** Quits: silly (~silly@user/silly) (Ping timeout: 252 seconds)
[06:48:21] <neshpion> node *is* js on the backend
[06:52:29] *** Joins: gggp__offline (~gggp@60.10.194.47)
[06:53:34] *** gggp__offline is now known as gggp
[06:55:14] *** Quits: gggp_ (~gggp@60.10.194.47) (Ping timeout: 255 seconds)
[07:01:10] *** Joins: gggp_ (~gggp@60.10.194.47)
[07:02:22] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 252 seconds)
[07:04:41] *** Quits: gggp (~gggp@60.10.194.47) (Ping timeout: 255 seconds)
[07:07:04] *** Joins: gggp__offline (~gggp@60.10.194.47)
[07:08:11] *** gggp__offline is now known as gggp
[07:09:27] *** Joins: gggp__offline (~gggp@60.10.194.47)
[07:10:05] *** Quits: gggp_ (~gggp@60.10.194.47) (Ping timeout: 255 seconds)
[07:13:16] *** Quits: gggp (~gggp@60.10.194.47) (Ping timeout: 272 seconds)
[07:15:06] <jaawerth> yeah early mistakes like String.prototype.blink aside, JS is actually meant to be a portable general-use scripting language, it's still JS without thebrowser :P
[07:20:29] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Read error: Connection reset by peer)
[07:20:34] *** Joins: pwnd_sfw3 (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[07:21:52] *** Joins: gggp_ (~gggp@60.10.194.47)
[07:22:05] *** gggp_ is now known as gggp
[07:24:24] *** Joins: l__q (~modinfo@user/modinfo)
[07:25:23] *** Quits: gggp__offline (~gggp@60.10.194.47) (Ping timeout: 255 seconds)
[07:27:06] *** Joins: gggp_ (~gggp@60.10.194.47)
[07:29:06] *** Quits: pwnd_sfw3 (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[07:29:57] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[07:30:20] *** Quits: gggp (~gggp@60.10.194.47) (Ping timeout: 255 seconds)
[07:36:49] *** Joins: chao (~stenno@user/stenno)
[07:37:02] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 252 seconds)
[07:37:52] *** Quits: GreenJelloAlt (~GreenJell@user/greenjello) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[07:41:20] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 252 seconds)
[07:49:17] *** Joins: diamondbond (~diamondbo@175.157.224.213)
[07:55:03] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[07:58:14] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 255 seconds)
[07:58:51] *** Joins: incognito (~relativit@user/incognito)
[08:00:54] *** Joins: chao (~stenno@user/stenno)
[08:07:37] *** Joins: gggp__offline (~gggp@221.219.77.87)
[08:10:35] *** Quits: gggp_ (~gggp@60.10.194.47) (Ping timeout: 252 seconds)
[08:14:47] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[08:18:25] *** __jmcantrell__ is now known as jmcantrell
[08:19:23] *** Joins: silly_ (~silly@user/silly)
[08:20:42] *** Joins: silly (~silly@user/silly)
[08:22:41] *** Quits: sillyslux__ (~silly@user/silly) (Ping timeout: 252 seconds)
[08:24:12] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 272 seconds)
[08:29:19] *** Quits: gggp__offline (~gggp@221.219.77.87) (Remote host closed the connection)
[08:29:22] *** Joins: silly_ (~silly@user/silly)
[08:29:48] *** Joins: gggp__offline (~gggp@60.10.194.47)
[08:30:07] *** Quits: quesker (idnet@2600:3c01::f03c:91ff:feac:4ce2) (Remote host closed the connection)
[08:30:27] *** Joins: quesker (~idnet@mail.89vx.net)
[08:30:30] *** Quits: silly (~silly@user/silly) (Read error: Connection reset by peer)
[08:31:02] *** Joins: ferdna (~ferdna@user/ferdna)
[08:31:34] *** gggp__offline is now known as gggp
[08:32:10] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[08:34:47] *** Joins: gerred (~gerred@2603-7081-7001-866e-094c-af51-8919-917d.res6.spectrum.com)
[08:35:18] *** Joins: gggp_ (~gggp@60.10.194.47)
[08:38:43] *** Quits: gggp (~gggp@60.10.194.47) (Ping timeout: 265 seconds)
[08:38:46] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[08:40:26] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:45:49] *** Joins: electr0n (~electr0n@hunt.revrse.sh)
[08:46:08] *** Quits: diamondbond (~diamondbo@175.157.224.213) (Ping timeout: 258 seconds)
[08:52:39] *** Joins: gggp__offline (~gggp@60.10.194.47)
[08:56:07] *** Quits: gggp_ (~gggp@60.10.194.47) (Ping timeout: 265 seconds)
[08:56:57] *** Joins: gggp (~gggp@60.10.194.47)
[08:59:01] *** Quits: gggp__offline (~gggp@60.10.194.47) (Ping timeout: 265 seconds)
[09:00:53] *** Quits: gerred (~gerred@2603-7081-7001-866e-094c-af51-8919-917d.res6.spectrum.com) (Quit: Client closed)
[09:06:07] *** Joins: gggp_ (~gggp@60.10.194.47)
[09:09:48] *** Quits: gggp (~gggp@60.10.194.47) (Ping timeout: 272 seconds)
[09:13:10] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[09:24:06] *** Joins: gggp__offline (~gggp@221.219.77.87)
[09:26:48] *** Quits: The_Blode (~Blode@92.40.180.222.threembb.co.uk) (Changing host)
[09:26:48] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[09:27:02] *** Quits: gggp_ (~gggp@60.10.194.47) (Ping timeout: 252 seconds)
[09:29:59] *** Quits: gggp__offline (~gggp@221.219.77.87) (Read error: Connection reset by peer)
[09:30:19] *** Quits: WillPittenger (~willpitte@2001:470:69fc:105::1bf) (*.net *.split)
[09:30:19] *** Quits: mstruebing (~maex@2001:41d0:8:93c7::1) (*.net *.split)
[09:30:19] *** Quits: PanamaCity3003 (~PanamaCit@skylab/user/panamacity3003) (*.net *.split)
[09:30:19] *** Quits: jaawerth (~jaawerth@104.131.115.202) (*.net *.split)
[09:30:19] *** Quits: Fusl (fusl@1.0.0.127.in-addr.arpa.li) (*.net *.split)
[09:30:19] *** Quits: ario_ (~ario@159.65.220.102) (*.net *.split)
[09:30:19] *** Quits: Puyo (sid500577@user/daniel11420) (*.net *.split)
[09:30:19] *** Quits: simius (~simius@user/simius) (*.net *.split)
[09:30:19] *** Quits: jwpapi (sid502614@id-502614.highgate.irccloud.com) (*.net *.split)
[09:30:25] *** Joins: ario (~ario@159.65.220.102)
[09:30:28] *** Joins: simius (~simius@user/simius)
[09:30:34] *** Joins: Fusl (fusl@1.0.0.127.in-addr.arpa.li)
[09:30:34] *** Joins: jwpapi (sid502614@id-502614.highgate.irccloud.com)
[09:30:35] *** Joins: mstruebing (~maex@2001:41d0:8:93c7::1)
[09:30:35] *** Joins: Puyo_ (sid500577@user/daniel11420)
[09:30:56] *** Joins: PanamaCity3003_ (~PanamaCit@skylab/user/panamacity3003)
[09:31:21] *** Joins: jaawerth (~jaawerth@104.131.115.202)
[09:34:17] <theskillwithin> jaawerth the OG writer of js put in many features he disagreed with but was asked to do, and regrets doing it
[09:44:45] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[09:47:23] *** Joins: gggpkm_ (~gggpkm@221.219.68.57)
[09:55:47] *** Joins: gggpkm (~gggpkm@60.10.194.47)
[09:56:28] *** Quits: gggpkm (~gggpkm@60.10.194.47) (Remote host closed the connection)
[09:56:40] *** Quits: birkoff (birkoff@user/birkoff) (Ping timeout: 246 seconds)
[09:56:57] *** Quits: saikub (saikub@saikub.fig.ircnow.org) (Ping timeout: 268 seconds)
[09:57:11] *** Quits: gggpkm_ (~gggpkm@221.219.68.57) (Ping timeout: 252 seconds)
[09:58:14] <jaawerth> yes, that's part of shy  strict mode is necessary
[09:58:45] <jaawerth> but the ones that emit strings with html tag take the cakewith it comes to vestigial features
[10:01:27] <earendel> cakewith? vestigial? oO .. literate as f. nice. but i dont know what it means. feels good. will look it up :)
[10:03:46] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:a6ea:d549:1785:23d0) (Quit: Leaving)
[10:03:53] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[10:05:37] <jaawerth> takes the cake with
[10:05:46] <jaawerth> sorry, my spacebar is going
[10:05:53] <earendel> ah. :)
[10:06:08] <earendel> still fancy. hi jaawerth
[10:06:15] <jaawerth> haha hey!
[10:13:18] <theskillwithin> jaawerth ya
[10:19:36] <ljharb> vestigial's just a normal word
[10:19:36] *** Joins: n00b101 (uid448161@id-448161.tooting.irccloud.com)
[10:20:00] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Quit: leaving)
[10:24:10] *** Joins: gggpkm (~gggpkm@60.10.194.47)
[10:24:20] <theskillwithin> earendel the kick was a warning, next time ban
[10:29:55] *** Joins: hygl (uid16621@id-16621.tinside.irccloud.com)
[10:30:03] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[10:31:54] *** Joins: gggpkm_ (~gggpkm@60.10.194.47)
[10:32:33] <theskillwithin> test
[10:33:52] *** Quits: gggpkm (~gggpkm@60.10.194.47) (Ping timeout: 246 seconds)
[10:38:54] *** Quits: [R] (~rs@genoce.org) (Quit: No Ping reply in 180 seconds.)
[10:39:02] *** Joins: [R] (~rs@genoce.org)
[10:39:58] *** Joins: gggpkm (~gggpkm@125.33.95.132)
[10:41:34] *** Quits: gggpkm_ (~gggpkm@60.10.194.47) (Ping timeout: 246 seconds)
[10:42:02] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 255 seconds)
[10:43:24] *** Joins: codebam (~codebam@user/codebam)
[10:50:30] *** Quits: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net) (Ping timeout: 272 seconds)
[10:52:27] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 268 seconds)
[10:53:36] *** Joins: codebam (~codebam@user/codebam)
[10:57:56] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[11:06:32] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: neshpion)
[11:06:48] *** Quits: gggpkm (~gggpkm@125.33.95.132) (Remote host closed the connection)
[11:07:15] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[11:11:27] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 265 seconds)
[11:12:52] *** Joins: codebam (~codebam@user/codebam)
[11:15:27] *** Joins: birkoff (birkoff@thunderirc.net)
[11:15:50] *** birkoff is now known as Guest5520
[11:18:13] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 265 seconds)
[11:19:39] *** Joins: codebam (~codebam@user/codebam)
[11:21:49] *** Joins: Lyn (~Lyn@user/law)
[11:22:29] *** Joins: gggp (~gggp@60.10.23.164)
[11:32:10] *** Quits: howdoi (uid224@id-224.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[11:32:34] *** Joins: inom (~inom@176.59.102.225)
[11:42:11] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[11:59:04] *** Joins: saikub (saikub@saikub.thunderirc.net)
[12:01:01] *** Joins: Rockwood (~Rocky@user/rocky)
[12:02:37] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[12:04:32] *** Quits: hardtotell (~hardtotel@satyr.seedboxes.cc) (Quit: ZNC 1.6.3+deb1+trusty0 - http://znc.in)
[12:05:15] *** Joins: entuland (~entuland@user/entuland)
[12:08:18] *** Quits: gggp (~gggp@60.10.23.164) (Ping timeout: 268 seconds)
[12:11:34] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 272 seconds)
[12:12:55] *** Joins: codebam (~codebam@user/codebam)
[12:13:02] *** Joins: hardtotell (~hardtotel@satyr.seedboxes.cc)
[12:14:46] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[12:18:32] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 272 seconds)
[12:19:43] *** Joins: codebam (~codebam@user/codebam)
[12:22:39] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[12:25:11] <Rockwood> theskillwithin, hi
[12:25:36] <Rockwood> i wanna see skillbot code
[12:28:05] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 258 seconds)
[12:29:28] *** Joins: army (~aL@user/army)
[12:36:07] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 246 seconds)
[12:36:34] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:38:34] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:35fb:cb11:fa61:23c0)
[12:39:32] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:39:50] *** Joins: han-solo (~hanish@user/han-solo)
[12:40:42] *** Joins: federico_it (~textual@151.51.82.235)
[12:42:36] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 272 seconds)
[12:43:31] *** Joins: codebam (~codebam@user/codebam)
[12:44:50] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[12:45:03] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[12:46:48] <Rockwood> army, hi
[12:46:58] <army> Rockwood: hello
[12:47:38] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[12:47:46] <Rockwood> wait for his online back
[12:47:54] <army> ok bro thx
[12:51:45] <hexeme> I have some dependency that is including a transitive dependency `utf-8-validate@3.0.4` which depends on some old verison of `nan` which fails to compile over Node 14. How do I figure out which of my top-level dependencies is causing this old version of utf-8-validate to be depended on?
[12:55:41] *** Quits: paulcarroty (~paulcarro@2001:470:69fc:105::216) (Quit: Bridge terminating on SIGTERM)
[12:55:41] *** Quits: nicoty[m] (~nicoty@user/nicoty) (Quit: Bridge terminating on SIGTERM)
[12:55:42] *** Quits: inkbottle[m] (~inkbottle@2001:470:69fc:105::2ff5) (Quit: Bridge terminating on SIGTERM)
[12:55:42] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Bridge terminating on SIGTERM)
[12:55:42] *** Quits: Kamui (~kamui-ren@2001:470:69fc:105::f74) (Quit: Bridge terminating on SIGTERM)
[12:55:42] *** Quits: Cork[m] (~corkmatri@2001:470:69fc:105::3458) (Quit: Bridge terminating on SIGTERM)
[12:55:46] *** Quits: repo[m] (~repo@user/repo) (Quit: Bridge terminating on SIGTERM)
[12:55:47] *** Quits: kadoban (~kadoban@user/kadoban) (Quit: Bridge terminating on SIGTERM)
[12:55:53] *** Quits: greggerz (~greggerzm@2001:470:69fc:105::da2) (Quit: Bridge terminating on SIGTERM)
[12:56:36] <theskillwithin> wtf Rockwood
[12:57:00] <Rockwood> army, needs your bot for use
[12:57:07] <army> theskillwithin hi how r u
[12:58:12] *** Joins: paulcarroty (~paulcarro@2001:470:69fc:105::216)
[13:00:05] *** Joins: WillPittenger (~willpitte@2001:470:69fc:105::1bf)
[13:00:05] *** Joins: repo[m] (~repo@user/repo)
[13:00:05] *** Joins: Kamui (~kamui-ren@2001:470:69fc:105::f74)
[13:00:05] *** Joins: nicoty[m] (~nicoty@user/nicoty)
[13:00:05] *** Joins: kadoban (~kadoban@user/kadoban)
[13:00:06] *** Joins: inkbottle[m] (~inkbottle@2001:470:69fc:105::2ff5)
[13:00:06] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[13:00:13] *** Joins: greggerz (~greggerzm@2001:470:69fc:105::da2)
[13:00:18] *** Joins: Cork[m] (~corkmatri@2001:470:69fc:105::3458)
[13:00:38] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 255 seconds)
[13:01:26] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[13:01:36] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 272 seconds)
[13:01:40] <army> theskillwithin i was wonder a bot youtube to get tittle from sharing link channel and search artist title !play artist tittle
[13:02:36] <army> and options channel to set enable disable each of this 2 functions
[13:02:48] *** Joins: codebam (~codebam@user/codebam)
[13:02:58] <army> thx in advance
[13:05:56] *** Joins: gggp (~gggp@60.10.194.47)
[13:09:34] *** Joins: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net)
[13:09:45] <Lyn> why does 'npm install' install 5 vulnerabilities out of the box? and why does it require 'npm audit fix --force' 3 times until they're all fixed
[13:10:44] <theskillwithin> ehh in most cases you can ignore those vuln warnings
[13:10:53] *** Quits: gggp (~gggp@60.10.194.47) (Ping timeout: 252 seconds)
[13:11:04] *** Joins: gggp (~gggp@60.10.194.47)
[13:11:06] <Lyn> there were 3 low and 2 critical, at least 1 arbitrary code execution
[13:11:47] <theskillwithin> most often its for edge case that you would never be worried about
[13:12:59] *** Joins: epolanski (uid312403@id-312403.brockwell.irccloud.com)
[13:13:10] *** Quits: epolanski (uid312403@id-312403.brockwell.irccloud.com) (Client Quit)
[13:13:16] <Rockwood> i think he don't want to permit you army
[13:13:39] <army> Rockwood: its ok
[13:15:42] <Rockwood> army, its looks simple
[13:15:52] <Rockwood> but i am not sure how config it
[13:16:01] <Rockwood> let me do google for it
[13:16:20] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:16:53] <army> its ok bro dont bother thx a lot from u
[13:18:44] <theskillwithin> my bot is on public repo, anyone can use that code
[13:18:53] *** Joins: sillyslux__ (~silly@user/silly)
[13:19:19] <Rockwood> how to config that on channel?
[13:19:33] *** Joins: eXistenZ (~biskit@bzq-109-64-247-234.red.bezeqint.net)
[13:19:42] <Rockwood> anything sepcial in it?
[13:19:52] <army> theskillwithin: how to conf and for !play artist tittle to give artist title link also
[13:20:01] <theskillwithin> why is someone i don't know msging me on pm about it tho.  Rockwood.
[13:20:27] <Rockwood> he noob and is in problem
[13:20:38] <Rockwood> he pm me too
[13:20:50] <Rockwood> but said to him don't pm to any
[13:20:55] <Rockwood> i said
[13:21:07] <Rockwood> just ask simply from channel
[13:21:33] <Rockwood> he is new on irc and don't know the proper rules
[13:22:20] *** Quits: silly_ (~silly@user/silly) (Read error: Connection reset by peer)
[13:22:21] <army> theskillwithin my apolgise for disturbing u pm
[13:22:26] <army> thx a lot
[13:22:38] <army> Rockwood: thx again from u
[13:24:05] <Rockwood> army, hope helpful to you https://docs.opendev.org/opendev/system-config/latest/irc.html
[13:25:06] <army> Rockwood: thx again for ur help
[13:30:39] *** Joins: gggp_ (~gggp@221.219.77.87)
[13:34:02] *** Quits: gggp (~gggp@60.10.194.47) (Ping timeout: 265 seconds)
[13:34:42] *** Quits: azizLIGHT (~azizLIGHT@user/azizlight) (Ping timeout: 252 seconds)
[13:36:01] *** Joins: azizLIGHT (~azizLIGHT@user/azizlight)
[13:42:46] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 272 seconds)
[13:46:38] *** Joins: gggp__offline (~gggp@60.10.194.47)
[13:48:53] *** Joins: gggp (~gggp@60.10.194.47)
[13:49:05] *** Joins: thiras (~thiras@user/thiras)
[13:49:21] *** Quits: gggp_ (~gggp@221.219.77.87) (Ping timeout: 258 seconds)
[13:50:50] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Remote host closed the connection)
[13:52:10] *** Quits: gggp__offline (~gggp@60.10.194.47) (Ping timeout: 268 seconds)
[13:52:39] *** Joins: gggp_ (~gggp@60.10.194.47)
[13:55:26] *** Quits: gggp (~gggp@60.10.194.47) (Ping timeout: 272 seconds)
[13:58:43] <Lyn> why do I have to do 'npx react-native run-android' every time I start deving? it takes a long time to build, and I don't see a reason to rebuild every time if Metro is able to reload the app quickly after changes anyway
[14:00:38] *** Joins: pulse (~pulse@user/pulse)
[14:00:41] *** Joins: The_Blode (~Blode@92.40.180.221.threembb.co.uk)
[14:02:53] *** Joins: silly_ (~silly@user/silly)
[14:03:04] *** Quits: The_Blode (~Blode@92.40.180.221.threembb.co.uk) (Changing host)
[14:03:04] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[14:03:24] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[14:06:58] *** Quits: sillyslux__ (~silly@user/silly) (Ping timeout: 268 seconds)
[14:07:42] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 252 seconds)
[14:11:18] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[14:19:50] *** Joins: mickey (~user@user/mickey)
[14:20:52] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[14:21:06] *** Joins: mickey (~user@user/mickey)
[14:27:06] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 272 seconds)
[14:27:26] *** Joins: gggp__offline (~gggp@60.10.23.164)
[14:30:07] *** Quits: gggp_ (~gggp@60.10.194.47) (Ping timeout: 246 seconds)
[14:30:23] *** gggp__offline is now known as gggp
[14:30:41] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[14:34:25] *** Quits: doji (~doji@user/doji) (Ping timeout: 246 seconds)
[14:35:15] *** Joins: doji (~doji@user/doji)
[14:39:14] *** Quits: n00b101 (uid448161@id-448161.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[14:40:24] *** Parts: army (~aL@user/army) (Closing Window)
[14:40:48] *** Joins: CiaoSen (~Jura@p200300c95722a400dbe4133b387f39b9.dip0.t-ipconnect.de)
[14:40:58] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 246 seconds)
[14:44:10] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[14:45:29] *** Joins: gggp_ (~gggp@60.10.23.164)
[14:46:18] *** Quits: gggp_ (~gggp@60.10.23.164) (Remote host closed the connection)
[14:47:04] *** Joins: gggp_ (~gggp@60.10.23.164)
[14:48:38] *** Quits: gggp (~gggp@60.10.23.164) (Ping timeout: 268 seconds)
[14:49:34] *** Joins: Akimb (~Akimb@78-58-31-17.static.zebra.lt)
[14:53:16] *** Joins: Rockwood (~Rocky@user/rocky)
[14:53:54] *** Joins: inoas (~ionas@2a01:598:b976:3f2b:586c:68b0:273e:3b47)
[14:56:17] *** Quits: CiaoSen (~Jura@p200300c95722a400dbe4133b387f39b9.dip0.t-ipconnect.de) (Ping timeout: 255 seconds)
[15:00:33] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 265 seconds)
[15:00:34] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[15:01:48] *** Joins: codebam (~codebam@user/codebam)
[15:02:20] *** Quits: Akimb (~Akimb@78-58-31-17.static.zebra.lt) (Ping timeout: 252 seconds)
[15:05:23] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 265 seconds)
[15:06:06] *** Joins: Naan (~naan@user/naan)
[15:06:38] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Ping timeout: 255 seconds)
[15:07:03] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[15:12:32] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Ping timeout: 258 seconds)
[15:13:32] *** Joins: LittleHillMYR (~Lil@user/littlehillmyr)
[15:14:25] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[15:15:03] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 265 seconds)
[15:18:19] <ashnur> good question
[15:21:04] *** Joins: codebam (~codebam@user/codebam)
[15:28:51] <silly_> really?
[15:30:06] *** Quits: LittleHillMYR (~Lil@user/littlehillmyr) (Read error: Connection reset by peer)
[15:30:12] *** Joins: LittleHi1 (~Lil@user/littlehillmyr)
[15:31:04] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 272 seconds)
[15:32:24] *** Joins: codebam (~codebam@user/codebam)
[15:40:35] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[15:42:27] *** Joins: CiaoSen (~Jura@p200300c95722a400dbe4133b387f39b9.dip0.t-ipconnect.de)
[15:43:39] *** Joins: Akimb (~Akimb@78-58-31-17.static.zebra.lt)
[15:46:08] *** Joins: gggp__offline (~gggp@60.10.194.47)
[15:47:56] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[15:49:41] *** Quits: gggp_ (~gggp@60.10.23.164) (Ping timeout: 268 seconds)
[15:49:43] *** Quits: Akimb (~Akimb@78-58-31-17.static.zebra.lt) (Ping timeout: 258 seconds)
[15:52:08] *** gggp__offline is now known as gggp
[15:55:21] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[15:57:40] *** Quits: LittleHi1 (~Lil@user/littlehillmyr) (Read error: Connection reset by peer)
[16:05:26] *** Quits: federico_it (~textual@151.51.82.235) (Quit: Textual IRC Client: www.textualapp.com)
[16:15:19] *** Joins: Heraes (~Heraes@119.12.203.77.rev.sfr.net)
[16:15:19] *** Quits: Heraes (~Heraes@119.12.203.77.rev.sfr.net) (Changing host)
[16:15:19] *** Joins: Heraes (~Heraes@user/romarain)
[16:19:29] *** Quits: hygl (uid16621@id-16621.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[16:19:55] *** Joins: gggp_ (~gggp@60.10.23.164)
[16:20:13] *** chao is now known as stenno
[16:21:05] *** Joins: summersault (~summersau@179.221.251.16)
[16:22:38] *** Quits: gggp (~gggp@60.10.194.47) (Ping timeout: 252 seconds)
[16:23:12] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 265 seconds)
[16:23:46] *** Joins: earendel (uid498179@user/earendel)
[16:24:31] *** Joins: codebam (~codebam@user/codebam)
[16:38:24] *** Quits: inoas (~ionas@2a01:598:b976:3f2b:586c:68b0:273e:3b47) (Remote host closed the connection)
[16:38:46] *** Joins: KevinX_ (~KevinX@94.140.11.96)
[16:38:47] *** Joins: cinderblock8 (~cinderblo@firefly.isozilla.com)
[16:39:01] *** Quits: KevinX (~KevinX@94.140.11.98) (Ping timeout: 246 seconds)
[16:39:36] *** Quits: cinderblock (~cinderblo@firefly.isozilla.com) (Read error: Connection reset by peer)
[16:39:37] *** cinderblock8 is now known as cinderblock
[16:39:53] *** Quits: jazzy (~jaziz@2600:380:8653:59ba:fdf6:260a:bc2c:db50) (Ping timeout: 252 seconds)
[16:40:02] *** Quits: kadobanana (~mud@user/kadoban) (Remote host closed the connection)
[16:40:27] *** Joins: kadobanana (~mud@user/kadoban)
[16:40:33] *** Joins: inoas (~ionas@p200300f4df12ce00d8627ea1eaf621e2.dip0.t-ipconnect.de)
[16:40:37] *** Quits: BUSY (~BUSY@user/busy) (Ping timeout: 256 seconds)
[16:41:58] *** Joins: BUSY (~BUSY@user/busy)
[16:44:44] *** Quits: inoas (~ionas@p200300f4df12ce00d8627ea1eaf621e2.dip0.t-ipconnect.de) (Ping timeout: 255 seconds)
[16:44:44] *** Quits: CiaoSen (~Jura@p200300c95722a400dbe4133b387f39b9.dip0.t-ipconnect.de) (Ping timeout: 255 seconds)
[16:51:30] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 272 seconds)
[16:57:24] *** Joins: codebam (~codebam@user/codebam)
[16:59:05] *** Joins: gggp__offline (~gggp@60.10.194.47)
[17:00:57] *** Joins: Deide (~Deide@217.155.19.23)
[17:00:57] *** Quits: Deide (~Deide@217.155.19.23) (Changing host)
[17:00:57] *** Joins: Deide (~Deide@user/deide)
[17:01:38] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 272 seconds)
[17:02:27] *** Quits: gggp_ (~gggp@60.10.23.164) (Ping timeout: 268 seconds)
[17:13:29] *** Quits: inom (~inom@176.59.102.225) (Quit: WeeChat 3.1)
[17:14:13] *** Quits: Guest5520 (birkoff@thunderirc.net) (Quit: ZNC 1.8.2 - https://znc.in)
[17:14:33] *** Joins: inom (~inom@176.59.102.225)
[17:17:22] *** Joins: jazzy (~jaziz@2600:380:8653:59ba:8859:2efb:1ac:ad5d)
[17:21:14] *** Joins: inoas (~ionas@p200300f4df12ce00d8627ea1eaf621e2.dip0.t-ipconnect.de)
[17:23:54] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 240 seconds)
[17:25:44] *** Joins: codebam (~codebam@user/codebam)
[17:27:52] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:a6ea:d549:1785:23d0)
[17:28:42] *** Quits: inoas (~ionas@p200300f4df12ce00d8627ea1eaf621e2.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[17:31:26] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 268 seconds)
[17:31:41] *** Joins: gggp_ (~gggp@60.10.194.47)
[17:32:03] *** Joins: birkoff (birkoff@birkoff.thunderirc.net)
[17:32:03] *** Quits: birkoff (birkoff@birkoff.thunderirc.net) (Changing host)
[17:32:03] *** Joins: birkoff (birkoff@user/birkoff)
[17:35:12] *** Quits: gggp__offline (~gggp@60.10.194.47) (Ping timeout: 272 seconds)
[17:35:24] *** Joins: Akimb (~Akimb@78-58-31-17.static.zebra.lt)
[17:37:04] *** Joins: codebam (~codebam@user/codebam)
[17:40:37] *** Joins: inoas (~ionas@p200300f4df12ce00d8627ea1eaf621e2.dip0.t-ipconnect.de)
[17:42:25] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 258 seconds)
[17:43:51] *** Joins: codebam (~codebam@user/codebam)
[17:49:51] *** Joins: Rockwood_ (~Rocky@user/rocky)
[17:50:18] *** Quits: jazzy (~jaziz@2600:380:8653:59ba:8859:2efb:1ac:ad5d) (Ping timeout: 240 seconds)
[17:51:13] *** Joins: gggp__offline (~gggp@60.10.194.47)
[17:53:06] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 240 seconds)
[17:54:50] *** Quits: gggp_ (~gggp@60.10.194.47) (Ping timeout: 272 seconds)
[17:55:50] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 258 seconds)
[17:55:58] *** Joins: gggp (~gggp@60.10.194.47)
[17:57:28] *** Joins: codebam (~codebam@user/codebam)
[17:57:30] *** Quits: gggp__offline (~gggp@60.10.194.47) (Ping timeout: 240 seconds)
[17:58:59] *** Quits: inoas (~ionas@p200300f4df12ce00d8627ea1eaf621e2.dip0.t-ipconnect.de) (Ping timeout: 255 seconds)
[17:59:48] *** Quits: Akimb (~Akimb@78-58-31-17.static.zebra.lt) (Ping timeout: 252 seconds)
[18:00:05] *** Joins: gggp_ (~gggp@123.113.191.251)
[18:03:42] *** Quits: gggp (~gggp@60.10.194.47) (Ping timeout: 272 seconds)
[18:03:46] *** Joins: rapid16 (~rapid16@user/rapid16)
[18:03:52] <rapid16> Anyone awake?
[18:04:07] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 268 seconds)
[18:04:40] *** Joins: ___Rockwood__ (~Rocky@user/rocky)
[18:04:56] <farn> barely
[18:05:39] <ashnur> fully
[18:06:12] <rapid16> I'm wondering about how well used Angular is these days
[18:07:30] *** Quits: Rockwood_ (~Rocky@user/rocky) (Ping timeout: 240 seconds)
[18:18:51] <electr0n> based off of gh, 75k stars and almost 20k forks. I'd say its being used.
[18:20:13] *** Joins: Akimb (~Akimb@78-58-31-17.static.zebra.lt)
[18:22:02] <farn> to be fair, stars and forks often don't go away when someone stops using something
[18:22:24] <farn> maybe 2.5M weekly downloads on NPM are a better indication
[18:24:05] <Naan> like this? https://www.npmtrends.com/@angular/core-vs-angular-vs-react-vs-vue
[18:24:29] <Naan> uh don't ask me why there's a separate angular one I just clicked a suggestion maybe that's angularjs idk
[18:24:53] <farn> it is
[18:26:55] *** Joins: Akimbas (~Akimb@78-58-31-17.static.zebra.lt)
[18:29:54] *** Quits: Akimb (~Akimb@78-58-31-17.static.zebra.lt) (Ping timeout: 240 seconds)
[18:31:06] *** Quits: ___Rockwood__ (~Rocky@user/rocky) (Ping timeout: 240 seconds)
[18:38:37] *** Joins: gggp__offline (~gggp@60.10.194.47)
[18:38:38] <l__q> Is it possible in JS to build own functions? Like string.myLength() that returns length of string for example?
[18:39:38] *** Joins: gerred (~gerred@2603-7081-7001-866e-094c-af51-8919-917d.res6.spectrum.com)
[18:39:38] *** Joins: Guddu (~Guddu@106.214.41.45)
[18:39:42] *** Quits: Akimbas (~Akimb@78-58-31-17.static.zebra.lt) (Read error: Connection reset by peer)
[18:40:13] <Guddu> I am trying to use a pure JS library in a react app for crypto related functions.
[18:40:18] <Guddu> I imported using the following
[18:40:19] <Guddu> import 'jsrsasign/lib/jsrsasign-all-min.js';
[18:40:37] <Guddu> But i still get no-undef errors.
[18:40:39] <Guddu> Line 206:46:  'KEYUTIL' is not defined    no-undef
[18:40:39] <Guddu>   Line 207:51:  'KJUR' is not defined       no-undef
[18:40:55] <Guddu> Could someone please guide what could be wrong?
[18:41:50] *** Quits: gggp_ (~gggp@123.113.191.251) (Ping timeout: 258 seconds)
[18:42:21] <earendel> n> Crcle=(r)=>({ r: r, area() { return this..r * this.r * Math.PI }}); c=Cirlcle(10); [c.r, c.area()]
[18:42:22] <jellobot> (fail) SyntaxError: Unexpected token '.'
[18:42:36] <earendel> n> Circle=(r)=>({ r: r, area() { return this..r * this.r * Math.PI }}); c=Circle(10); [c.r, c.area()]
[18:42:37] <jellobot> (fail) SyntaxError: Unexpected token '.'
[18:42:37] *** Joins: inoas (~ionas@p200300f4df12ce004488601ae35d4026.dip0.t-ipconnect.de)
[18:42:48] <earendel> n> Circle=(r)=>({ r: r, area() { return this.r * this.r * Math.PI }}); c=Circle(10); [c.r, c.area()]
[18:42:49] <jellobot> (okay) [ 10, 314.1592653589793 ]
[18:43:17] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[18:43:27] <earendel> any function that returns/contructs an object is ok.
[18:43:49] <earendel> for singletons just the object.
[18:44:07] *** gggp__offline is now known as gggp
[18:44:37] <earendel> n> Circle=(r)=>({ r: r, get area() { return this.r * this.r * Math.PI }}); c=Circle(10); c
[18:44:38] <jellobot> (okay) { r: 10, area: [Getter] }
[18:44:43] *** Joins: Crassus (~Crassus@user/crassus)
[18:44:44] <earendel> meh,
[18:44:56] <earendel> whats that crap of inspect function. lol
[18:46:26] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 258 seconds)
[18:47:08] *** Quits: inoas (~ionas@p200300f4df12ce004488601ae35d4026.dip0.t-ipconnect.de) (Ping timeout: 255 seconds)
[18:48:01] *** Joins: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[18:48:01] *** Quits: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Changing host)
[18:48:01] *** Joins: YaknotiS (~YaknotiS@user/yaknotis)
[18:48:05] <earendel> name=(paramA,paramB)=>returnvalue  -- thats a function  .. you can have a code block { } and some return value inside as well. or a single expression that returns something
[18:48:29] <earendel> see Arrow Functions
[18:50:12] *** Joins: Rockwood (~Rocky@user/rocky)
[18:50:23] <earendel> { name: 'blah', speak() { return `Hi, my name is ${this.name}` }}  <-- that is "called object literal" in curly braces.
[18:50:23] <earendel> should be all.
[18:50:50] *** Joins: han-solo (~hanish@178.248.114.42)
[18:50:52] <earendel> wrongly quoted, pardon.
[18:51:01] <earendel> "object literal"
[18:51:09] *** Quits: han-solo (~hanish@178.248.114.42) (Changing host)
[18:51:09] *** Joins: han-solo (~hanish@user/han-solo)
[18:51:21] *** Quits: han-solo (~hanish@user/han-solo) (Client Quit)
[18:51:36] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:52:47] *** Joins: han-solo (~hanish@user/han-solo)
[18:53:02] <earendel> ah right. there are also arrays.. those are basically number indexed objects. the array literal is the one with square brackets: array=[1,2,3]
[18:53:15] <earendel> happy javascripting.
[18:53:17] <earendel> :>
[18:53:40] <l__q> I need something like this: const myLength = (a) => a.length; console.log(user.myLength()); but it returns "TypeError: user.len is not a function"
[18:54:59] <Pajus> lol
[18:54:59] <earendel> is the length calculated by the function you specified? as usually you would use an array .. it can count its values.
[18:55:22] <earendel> pajos. feeling funny?
[18:55:31] <Pajus> feeling lost
[18:55:56] <shan> wait wait am i missing something
[18:55:59] <Pajus> suggest to use pastbin to see more
[18:56:12] <shan> how can you call myLength() on a random object
[18:56:14] <earendel> well.  yout object could be a penis. and length coulld just be a property (not a funciton) ..  the function would be eeect() or so then. :P
[18:56:40] <earendel> here another function example
[18:56:56] *** Joins: arash (~arash@5.123.115.167)
[18:57:00] <farn> l__q: What kind of value is `user`?
[18:57:02] <earendel> n> add=(a,b)=>{ return a + b }; add(3,4)
[18:57:03] <jellobot> (okay) 7
[18:57:21] <earendel> your function didn't return any value.
[18:57:38] <l__q> https://jsfiddle.net/skorotkiewicz/cwo45da2/4/
[18:57:39] <earendel> note that logging to console is not returning a value.
[18:57:49] <arash> Hello, can anyone suggest me a video to learn basics of javascript ?
[18:57:51] <farn> Guddu: You'd probably install jsrsasign via npm as shown on https://www.npmjs.com/package/jsrsasign and import it using something like `import rs from "jsrsasign";`
[18:58:11] <Pajus> arash: try udemy or just youtube if you looking for some free
[18:58:12] <Pajus> stuff
[18:58:17] <Pajus> a lot of shit out there
[18:59:16] <arash> Pajus, yes, i'm looking for free videos, i know and that is why i need a suggestion
[18:59:38] <earendel> have you tried youtube or sth?
[18:59:44] <earendel> they should have a fre.
[18:59:48] <earendel> few*
[18:59:53] <earendel> or youporn*
[18:59:59] <earendel> what videos?
[19:00:01] <l__q> earendel: I want to create my custom length function, without parsing string into function like myLength(string)
[19:00:37] <l__q> I need string.myLength() to return the length of string
[19:01:00] <l__q> I it possible?
[19:01:56] <earendel> String.prototype,len = function() { return this.split("").length } // would extend all strings by a funcion that splits a string into its letters (array) .. and array has length method
[19:02:24] <arash> earendel, what are you talking about ? I need a name or link, like videos from a famous guy that teach basics
[19:02:45] *** Joins: seabass (~seabassfo@2001:470:69fc:105::187)
[19:02:47] <earendel> n> String.prototype,len = function() { return this.split("").length };  "HOWLONGAMI".len()
[19:02:48] <jellobot> (fail) TypeError: "HOWLONGAMI".len is not a function
[19:03:05] <earendel> in theotu.
[19:03:12] <earendel> theory
[19:03:28] <earendel> n> String.prototype.len = function() { return this.split("").length };  "HOWLONGAMI".len()
[19:03:28] <jellobot> (okay) 10
[19:03:37] <earendel> here we go. was  a comma typo
[19:03:50] *** Joins: seabass_ (~seabass_@host-79-78-218-187.static.as9105.net)
[19:03:53] <Alexendoo> Note that you shouldn't do that though l__q
[19:03:55] <l__q> It works!
[19:04:02] <earendel> yes?
[19:04:12] <earendel> it seems to have 10 chars.
[19:04:19] <l__q> earendel: Thank you! You saved my day
[19:04:24] <earendel> welcome.
[19:04:57] <farn> You shouldn't extend built-in prototypes like that. If any other part of the codebase, like a library, defines the same method with a different implementation then things will break in interesting ways
[19:05:12] <farn> There is also no reason to split the string. Strings already have a `length` property
[19:05:33] <ljharb> l__q: definitely never do that
[19:05:38] <ljharb> make a standalone function.
[19:05:48] <earendel> ps: if you want to write methods (functtions that access object properties ) you need to use the normal finctions (not arrow functions)
[19:05:59] <earendel> ljharb.
[19:06:09] <earendel> kick yourself.
[19:06:20] <ljharb> ?
[19:06:21] <earendel> we dont talk about  best practices now.
[19:06:32] <ljharb> of course we do, forever and always
[19:06:32] *** Joins: Pacific_ (~arash@91.219.215.103)
[19:06:36] <earendel> its just like babysteps.
[19:06:59] <ljharb> you don’t teach babies to walk by first setting their feet on fire
[19:07:11] <earendel> well we definitely will. let them digest its already mineral input;>
[19:07:55] <earendel> they learned 5 things before even trying it once. so they didnt even have that.. but in the logs.
[19:08:43] <ljharb> you’re getting rambly, but no amount of good outweighs the bad of teaching people it’s non-terrible to mutate objects they don’t own
[19:08:52] *** Quits: kadobanana (~mud@user/kadoban) (Ping timeout: 268 seconds)
[19:08:57] <earendel> push them into a pit? that works for talented dark side jedis only.
[19:09:01] <earendel> :P
[19:09:21] <earendel> wait i do? ok. i stop then.
[19:09:35] <earendel> pardon.
[19:10:00] *** Joins: howdoi (uid224@id-224.tooting.irccloud.com)
[19:10:14] *** Joins: Crassus (~Crassus@user/crassus)
[19:10:47] *** Quits: gerred (~gerred@2603-7081-7001-866e-094c-af51-8919-917d.res6.spectrum.com) (Quit: Client closed)
[19:10:50] *** Quits: arash (~arash@5.123.115.167) (Ping timeout: 272 seconds)
[19:11:24] <earendel> you need this for your javascript mars rover or sth? i hope not. then come back for lesson 2 first pls. 0:)
[19:11:44] <Guddu> farn, Thanks for your reply. Now the app starts atleast but errors out at runtime.
[19:11:45] <Guddu> Unhandled Rejection (TypeError): Cannot read property 'getKey' of undefined
[19:11:50] <earendel> shit.we lost another mars rover.
[19:11:55] *** Joins: GreenJelloAlt (~GreenJell@user/greenjello)
[19:12:02] <Guddu> https://dpaste.com/FEL8N78CV
[19:14:46] <farn> Guddu: If you've import rs then that should probably be rs.KEYUTIL.getKey(privateKey)
[19:14:50] <farn> *imported rs
[19:15:07] <Guddu> farn, I did it as follows
[19:15:07] <Guddu> import {KEYUTIL, KJUR, stob64, hextorstr} from 'jsrsasign/lib/jsrsasign-all-min.js';
[19:15:14] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[19:16:16] <farn> Okay. Have you tried the thing I suggested?
[19:16:45] <farn> I guess you could also try import {KEYUTIL, KJUR, stob64, hextorstr} from 'jsrsasign';
[19:18:26] <Guddu> farn, Thanks import {KEYUTIL, KJUR, stob64, hextorstr} from 'jsrsasign'; works.
[19:18:33] <Guddu> But I did not understand why :-)
[19:18:34] *** Quits: cbleslie (~cbleslie@47.148.37.14) (Read error: Connection reset by peer)
[19:20:52] *** Joins: cbleslie (~cbleslie@47.148.37.14)
[19:21:15] <shan> Guddu: is this in a browser
[19:21:22] <Guddu> shan, Yes
[19:21:48] <shan> Guddu: most JS runtimes don't allow you to import from a whole path, i think Deno is the only exception
[19:22:14] <shan> you just include the script with a script tag, mark it as a module, then you can use the ES-style import with the module name
[19:25:15] *** Joins: Pacific__ (~arash@5.123.115.167)
[19:26:06] <farn> shan: This is a React app that probably goes through a bundler like Webpack, so the import from node_modules works
[19:26:25] <shan> farn: ah fair enough
[19:26:55] *** Quits: GreenJelloAlt (~GreenJell@user/greenjello) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[19:27:49] *** Joins: zebrag (~chris@user/zebrag)
[19:28:32] *** Quits: Pacific_ (~arash@91.219.215.103) (Read error: Connection reset by peer)
[19:29:12] *** Joins: gggp_ (~gggp@60.10.194.47)
[19:31:47] *** Joins: jess (~jess@libera/staff/jess)
[19:31:52] <farn> Guddu: The library provides multiple ways in which it can be included in your project. The "old way" would be to add something like <script src="jsrsasign-all-min.js"></script> to your HTML which will make things available globally so you can use them in your scripts. The "newer way" (which is much more common in a React app) is to install it via npm and import the things you need from modules
[19:31:53] <farn> that the library provides.
[19:32:26] <farn> jsrsasign-all-min.js most likely isn't a module, so it doesn't export anything for you to import
[19:32:27] <Guddu> farn, That applies to pure JS libraries also?
[19:32:40] *** Quits: gggp (~gggp@60.10.194.47) (Ping timeout: 265 seconds)
[19:32:48] <Guddu> farn, Understand
[19:32:48] <farn> What do you mean by pure JS library?
[19:33:36] <Guddu> farn, Not a react library meant.
[19:36:23] <farn> jsrsasign is a pure JS library then. This doesn't actually have anything to do with React directly. It's just that React apps tend to be set up with a build process that includes a bundler like Webpack. At least that's what you get when you use create-react-app
[19:41:41] *** Joins: hacks (~hax@user/hax)
[19:41:55] *** Joins: TheSilentLink_ (~TheSilent@user/thesilentlink)
[19:42:02] *** Quits: TheSilentLink (~TheSilent@user/thesilentlink) (Ping timeout: 255 seconds)
[19:43:07] *** TheSilentLink_ is now known as TheSilentLink
[19:44:12] *** Joins: gggp__offline (~gggp@123.113.191.251)
[19:44:18] *** gggp__offline is now known as gggp
[19:47:34] *** Quits: gggp_ (~gggp@60.10.194.47) (Ping timeout: 272 seconds)
[19:48:50] <l__q> n> String.prototype.len = function () { return this.length; }; let users = ["a", "b"]; users.len();
[19:48:51] <jellobot> (fail) TypeError: users.len is not a function
[19:49:22] <l__q> string length works, but not arrays
[19:49:50] <l__q> n> String.prototype.len = function () { return this.length; }; let user = "aaa"; user.len();
[19:49:51] <jellobot> (okay) 3
[19:49:57] <l__q> hmm
[19:50:07] <l__q> why?
[19:50:22] <han-solo> for array, i guess you mihjt want to do the same thing for `Array.prototype` ?
[19:50:59] <l__q> n> Array.prototype.len = function () { return this.length; }; let users = ["a", "b"]; users.len();
[19:51:00] <jellobot> (okay) 2
[19:51:15] <l__q> han-solo: thanks
[19:51:32] <earendel> n> "hallo".split("") //yu nees to split by empty strng
[19:51:32] <jellobot> (okay) [ 'h', 'a', 'l', 'l', 'o' ]
[19:51:53] <han-solo> but `len = (thing) => thing.length` isn't saner ?
[19:53:04] <earendel> n> "hallo".split("") //yu nees to split by empty strng .. to get that array l__q
[19:53:05] <jellobot> (okay) [ 'h', 'a', 'l', 'l', 'o' ]
[19:53:21] <han-solo> n> const len = (thing) => thing.length; len('foo bar'); len(['foo', 'bar']);
[19:53:22] <jellobot> (okay) 2
[19:53:22] <farn> they don't want that array though. they just want the length
[19:53:26] <earendel> that ^ has length property theb
[19:53:34] <farn> n> "hallo".length
[19:53:34] <jellobot> (okay) 5
[19:53:42] <earendel> han-solo. you dont help
[19:54:01] <earendel> you can query bot as well.
[19:54:58] <earendel> or please be cautious when evwntually making noise in ontopic conversaation. :/
[19:55:01] <earendel> all good.
[19:55:10] <earendel> sorry.
[19:55:21] <farn> why must you be like this?
[19:55:26] <farn> can you be different?
[19:55:37] <earendel> friendly?
[19:55:46] <earendel> its a valid point.
[19:56:16] <earendel> its just  considered conventional etiquette.
[19:56:54] <ljharb> !prototype modify @ l__q
[19:56:54] <jellobot> l__q, Don't modify objects you don't own, e.g. by extending native prototypes! http://www.nczonline.net/blog/2010/03/02/maintainable-javascript-dont-modify-objects-you-down-own/
[19:57:01] <earendel> i  excuse myself for mentioning it publicaly. thats as well no good etiquette.
[19:58:26] <earendel> farn. whu do you think i am what.
[19:59:01] <earendel> troll.
[19:59:17] <farn> yes, that
[19:59:21] <earendel> u will never make it on the irc.
[19:59:37] <earendel> which is great.
[19:59:40] <l__q> ljharb: thanks!
[20:02:38] *** Quits: KevinX_ (~KevinX@94.140.11.96) (Ping timeout: 265 seconds)
[20:04:59] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 268 seconds)
[20:08:16] *** Joins: KevinX (~KevinX@94.140.11.96)
[20:09:05] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[20:12:47] *** Quits: Crassus (~Crassus@user/crassus) (Quit: Textual IRC Client: www.textualapp.com)
[20:13:35] *** Joins: peterhil (~peterhil@mobile-access-5672d5-10.dhcp.inet.fi)
[20:15:25] *** Quits: Pixi (~Pixi@user/pixi) (Quit: Leaving)
[20:15:34] *** Quits: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net) (Ping timeout: 246 seconds)
[20:22:00] *** Quits: Lyn (~Lyn@user/law) (Quit: Leaving)
[20:24:51] *** Joins: Pixi (~Pixi@user/pixi)
[20:27:05] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[20:30:06] *** Joins: gggp_ (~gggp@60.10.194.47)
[20:33:23] *** Quits: gggp (~gggp@123.113.191.251) (Ping timeout: 258 seconds)
[20:34:16] *** Quits: ircuser-1 (~Johnny@71.63.241.168) (Quit: because)
[20:40:46] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[20:42:48] *** Joins: gggp__offline (~gggp@60.10.194.47)
[20:43:55] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[20:45:32] *** Quits: gggp_ (~gggp@60.10.194.47) (Ping timeout: 252 seconds)
[20:56:12] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:59:07] *** Quits: seabass_ (~seabass_@host-79-78-218-187.static.as9105.net) (Quit: Client closed)
[21:01:20] *** Joins: keypusher (~keypusher@user/keypusher)
[21:03:03] *** Joins: gggp_ (~gggp@221.219.77.87)
[21:04:42] *** Joins: keypushe- (keypusher@user/keypusher)
[21:05:57] *** Quits: keypusher (~keypusher@user/keypusher) (Ping timeout: 265 seconds)
[21:06:26] *** Quits: gggp__offline (~gggp@60.10.194.47) (Ping timeout: 265 seconds)
[21:07:58] *** keypushe- is now known as keypusher
[21:09:58] *** Joins: GreenJelloAlt (~GreenJell@user/greenjello)
[21:11:12] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 252 seconds)
[21:13:58] *** Joins: CiaoSen (~Jura@p200300c95722a400dbe4133b387f39b9.dip0.t-ipconnect.de)
[21:17:53] *** Joins: Guest9 (~Guest9@103.250.145.129)
[21:20:14] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:a6ea:d549:1785:23d0) (Quit: Leaving)
[21:20:24] *** Joins: han-solo (~hanish@user/han-solo)
[21:31:17] *** Quits: GreenJelloAlt (~GreenJell@user/greenjello) (Quit: Textual IRC Client: www.textualapp.com)
[21:31:22] *** Joins: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net)
[21:35:35] *** Joins: gggp__offline (~gggp@221.219.77.87)
[21:37:57] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[21:38:56] *** Quits: gggp_ (~gggp@221.219.77.87) (Ping timeout: 258 seconds)
[21:41:18] *** Joins: noobly (~noobly@50.38.126.25)
[21:45:13] *** Joins: Betal (~Beta@user/betal)
[21:50:30] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[21:50:57] *** Quits: howdoi (uid224@id-224.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[21:53:36] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[21:54:40] *** Joins: Akimb (~Akimb@86.100.13.100)
[21:59:06] *** Quits: CiaoSen (~Jura@p200300c95722a400dbe4133b387f39b9.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[22:06:35] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Read error: Connection reset by peer)
[22:07:32] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 272 seconds)
[22:08:14] *** Joins: gggp_ (~gggp@60.10.194.47)
[22:09:58] *** Quits: cbleslie (~cbleslie@47.148.37.14) (Read error: Connection reset by peer)
[22:10:04] *** Joins: cbleslie8 (~cbleslie@47.148.37.14)
[22:10:45] *** Quits: gggp__offline (~gggp@221.219.77.87) (Ping timeout: 258 seconds)
[22:12:44] *** gggp_ is now known as gggp
[22:12:51] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[22:14:31] *** Quits: noobly (~noobly@50.38.126.25) (Quit: Client closed)
[22:14:40] <gggp> https://github.com/denoland/deno // good project
[22:15:46] *** Quits: Pacific__ (~arash@5.123.115.167) (Read error: Connection reset by peer)
[22:16:15] *** Joins: Pacific__ (~arash@5.123.115.167)
[22:23:22] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 272 seconds)
[22:23:44] *** Quits: peterhil (~peterhil@mobile-access-5672d5-10.dhcp.inet.fi) (Ping timeout: 268 seconds)
[22:24:20] *** Joins: ormaaj2 (~6174bb9b@user/ormaaj)
[22:28:54] *** Joins: Atum_ (IRC@user/atum/x-2392232)
[22:32:51] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[22:32:59] *** Quits: Pacific__ (~arash@5.123.115.167) (Ping timeout: 268 seconds)
[22:35:32] *** Joins: kmh_ (~kmh@p2e511d5e.dip0.t-ipconnect.de)
[22:35:54] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[22:36:26] *** Quits: Akimb (~Akimb@86.100.13.100) (Ping timeout: 258 seconds)
[22:36:50] *** Quits: kmh (~kmh@p200300df5f30ad00c00521c3c33cf4ab.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[22:37:20] *** Joins: pavonia (~user@user/siracusa)
[22:37:47] *** Quits: KevinX (~KevinX@94.140.11.96) (Ping timeout: 265 seconds)
[22:43:17] *** Joins: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4)
[22:43:52] *** Parts: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4) ()
[22:45:19] *** Quits: inom (~inom@176.59.102.225) (Quit: WeeChat 3.1)
[22:49:26] *** Joins: gggp_ (~gggp@60.10.194.47)
[22:50:19] *** Joins: Pacific__ (~arash@5.123.115.167)
[22:50:57] *** Joins: gggp__offline (~gggp@60.10.194.47)
[22:51:01] *** __jmcantrell__ is now known as jmcantrell
[22:52:23] *** Quits: gggp (~gggp@60.10.194.47) (Ping timeout: 255 seconds)
[22:54:42] *** Quits: gggp_ (~gggp@60.10.194.47) (Ping timeout: 265 seconds)
[22:55:37] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[22:55:55] *** Joins: cajiga (~john@2601:85:280:f700:1058:cef1:9aa8:cbe1)
[22:56:06] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[22:56:55] *** Quits: Guddu (~Guddu@106.214.41.45) (Quit: Leaving)
[22:57:28] *** Joins: Akimb (~Akimb@86.100.13.100)
[22:57:43] *** Joins: KevinX (~KevinX@94.140.11.16)
[22:57:45] *** Joins: entuland (~entuland@user/entuland)
[22:58:16] *** Quits: Guest9 (~Guest9@103.250.145.129) (Ping timeout: 268 seconds)
[22:59:03] *** Quits: Atum_ (IRC@user/atum/x-2392232) (Quit: Atum_)
[23:00:59] *** Joins: Atum_ (IRC@user/atum/x-2392232)
[23:07:06] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[23:10:18] *** Quits: Jaran (~mail@user/jaran) (Remote host closed the connection)
[23:10:52] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[23:12:35] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[23:15:17] *** Joins: swn (~sweeney@c-73-253-42-20.hsd1.ct.comcast.net)
[23:16:28] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:a6ea:d549:1785:23d0)
[23:18:37] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[23:28:53] *** __jmcantrell__ is now known as jmcantrell
[23:40:37] *** Quits: cbleslie8 (~cbleslie@47.148.37.14) (Read error: Connection reset by peer)
[23:40:43] *** Joins: cbleslie (~cbleslie@47.148.37.14)
[23:41:06] *** Quits: mexen (uid495612@user/mexen) ()
[23:44:14] <kinabalu> is it just me or is `Object.prototype.hasOwnProperty.call` a stupid amount of text to type to find out if an object has a key
[23:44:54] *** Joins: sillyslux__ (~silly@user/silly)
[23:46:52] <l__q> my new npm package :D https://www.npmjs.com/package/simhok
[23:46:55] <nedbat> kinabalu: it's not just you :)
[23:47:33] *** Quits: rapid16 (~rapid16@user/rapid16) (Remote host closed the connection)
[23:48:50] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 265 seconds)
[23:52:31] <kinabalu> nedbat: there must be a simpler way
[23:54:53] <nedbat> kinabalu: there might be, I'm a n00b
[23:56:35] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 252 seconds)
[23:59:47] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
