[00:03:44] *** Joins: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54)
[00:03:50] *** Joins: ralu (~ralu@static.211.245.203.116.clients.your-server.de)
[00:08:17] *** Quits: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54) (Ping timeout: 240 seconds)
[00:14:18] *** Joins: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54)
[00:15:36] *** Quits: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54) (Client Quit)
[00:21:16] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Ping timeout: 272 seconds)
[00:27:35] *** Quits: hololeap (~hololeap@user/hololeap) (Ping timeout: 240 seconds)
[00:28:07] *** Quits: maroloccio (~marolocci@pousada3ja.mma.com.br) (Quit: WeeChat 3.0)
[00:39:13] *** Joins: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[00:43:20] *** Joins: leah2_ (~leah@vuxu.org)
[00:45:34] *** Joins: howdoi_ (uid224@id-224.lymington.irccloud.com)
[00:45:56] <wand> thanks ox1eef, adam12. 
[00:46:08] <wand> for now I'm using Timout.timeout and it works fine
[00:46:28] *** Quits: leah2 (~leah@vuxu.org) (Ping timeout: 260 seconds)
[00:46:28] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Read error: Connection reset by peer)
[00:46:28] *** howdoi_ is now known as howdoi
[00:46:36] <wand> But I'm spawning 8 consumer threads to act as workers. is there a way to get a thread id for each?
[00:46:55] <wand> i'm trying to log which worker / consumer thread gets which job from a queue
[00:49:08] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 272 seconds)
[00:52:09] *** Joins: hololeap (~hololeap@user/hololeap)
[00:55:12] <mooff> wand: you can get the current thread with Thread.current
[00:55:12] <mooff> can get and set the name of a thread with Thread#name, Thread#name=
[00:58:52] <wand> mooff: thank you
[00:58:55] <wand> cool
[01:04:38] *** Joins: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54)
[01:07:46] *** Quits: Thanzex (~Thanzex@37.103.241.128) (Read error: Connection reset by peer)
[01:08:19] *** Joins: Thanzex (~Thanzex@37.103.241.128)
[01:12:03] *** Quits: pgib (~textual@173.38.117.90) (Ping timeout: 260 seconds)
[01:12:49] *** Quits: Thanzex (~Thanzex@37.103.241.128) (Read error: Connection reset by peer)
[01:13:26] *** Joins: Thanzex (~Thanzex@37.103.241.128)
[01:14:19] *** leah2_ is now known as leah2
[01:17:55] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 240 seconds)
[01:28:30] *** Quits: _ht (~quassel@231-169-21-31.ftth.glasoperator.nl) (Remote host closed the connection)
[01:31:43] *** Joins: fef (~thedawn@user/thedawn)
[01:35:35] *** Joins: oxfuxxx (~oxfuxxx@37.19.212.100)
[01:53:37] *** Quits: oxfuxxx (~oxfuxxx@37.19.212.100) (Ping timeout: 240 seconds)
[02:02:59] *** Joins: oxfuxxx (~oxfuxxx@37.19.212.100)
[02:09:37] *** Quits: oxfuxxx (~oxfuxxx@37.19.212.100) (Ping timeout: 256 seconds)
[02:09:59] *** Quits: teclator (~quassel@85.155.180.70.dyn.user.ono.com) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[02:13:30] *** Joins: markong (~kvirc@213.146.188.203)
[02:29:00] *** Quits: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54) (Ping timeout: 240 seconds)
[02:41:35] <newton> is there a recommended way to parse query params to hash besides CGI.parse or is that the thing to use?
[02:48:54] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 252 seconds)
[02:54:51] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Ping timeout: 268 seconds)
[02:55:11] *** Joins: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54)
[03:06:32] <adam12> newton: Is this a client or server? You could probably use Rack if it's the server.
[03:07:48] *** Quits: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54) (Ping timeout: 240 seconds)
[03:09:48] <newton> yeah, parsing some params in a rails test case
[03:12:03] <adam12> newton: Maybe just CGI.parse then. I'm not sure I'd use Rack for that.
[03:12:12] <newton> got it
[03:12:23] <newton> thx
[03:15:21] *** Quits: markong (~kvirc@213.146.188.203) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[03:17:00] <ox1eef> rack will be available then - see https://rubydoc.info/gems/rack/Rack/Utils#parse_query-class_method (and parse_nested_query above)
[03:19:23] <ox1eef> i think parse_nested_query supports foo[bar]=1 (Hash) and foo[]=1,2,3 (Array)
[03:23:16] <leah2> really?
[03:24:12] <leah2> you want foo[]=1&foo[]=2&foo[]=3
[03:26:55] <newton> examples for all three: https://www.toptal.com/developers/hastebin/hahepovape.rb
[03:27:09] <newton> I do prefer parse_nested_query
[03:29:44] <ox1eef> leah2: indeed, it is as you say.
[03:34:20] *** Joins: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54)
[03:36:21] <leah2> adding that to rack was a mistake :p
[03:39:00] *** Quits: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54) (Ping timeout: 240 seconds)
[03:42:52] <newton> why?
[03:48:34] <leah2> because it belongs to rails
[03:48:50] <leah2> nothing else uses these conventions, and the implementation caused some issues
[03:51:16] *** Joins: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54)
[03:51:50] <newton> got it, thx :)
[03:56:12] <ox1eef> through rails i think it became an established pattern, i see it as nice to have available regardless of framework.
[03:56:47] *** Quits: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54) (Ping timeout: 260 seconds)
[04:04:37] *** Quits: tuxcrafter (~tuxcrafte@firewall.powercraft.nl) (Quit: Client closed)
[04:04:56] *** Joins: tuxcrafter (~tuxcrafte@firewall.powercraft.nl)
[04:05:11] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[04:09:46] *** Joins: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54)
[04:19:32] *** Quits: reset (~reset@user/reset) (Quit: reset)
[04:22:57] *** Quits: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54) (Ping timeout: 240 seconds)
[04:59:01] *** Joins: hd1 (~hd1@cpe-172-91-170-129.socal.res.rr.com)
[04:59:11] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[05:01:43] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:05:55] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 240 seconds)
[05:10:44] *** Quits: hd1 (~hd1@cpe-172-91-170-129.socal.res.rr.com) (Quit: Connection closed)
[05:18:17] *** Joins: fef (~thedawn@user/thedawn)
[05:31:55] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 240 seconds)
[05:36:39] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[05:37:06] *** Joins: eddof13 (~eddof13@2806:102e:12:64:8553:23df:507a:ff04)
[05:38:54] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:42:23] *** Quits: eddof13 (~eddof13@2806:102e:12:64:8553:23df:507a:ff04) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[05:47:44] *** Joins: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54)
[05:52:31] *** Quits: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54) (Ping timeout: 260 seconds)
[05:59:53] *** Joins: hd1 (~hd1@cpe-172-91-170-129.socal.res.rr.com)
[05:59:58] *** Parts: hd1 (~hd1@cpe-172-91-170-129.socal.res.rr.com) ()
[06:02:13] *** Quits: Thanzex (~Thanzex@37.103.241.128) (Read error: Connection reset by peer)
[06:02:31] *** Joins: Thanzex (~Thanzex@37.103.241.128)
[06:08:59] *** Joins: ur5us (~ur5us@122-56-198-145.mobile.spark.co.nz)
[06:11:45] *** Joins: tuxcrafter16 (~tuxcrafte@firewall.powercraft.nl)
[06:12:08] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 272 seconds)
[06:15:33] *** Quits: tuxcrafter (~tuxcrafte@firewall.powercraft.nl) (Ping timeout: 256 seconds)
[06:18:28] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[06:19:58] *** Quits: erts (~erts@user/erts) (Quit: .)
[06:21:13] *** Quits: ua_ (~ua@public-gprs222674.centertel.pl) (Ping timeout: 256 seconds)
[06:21:45] *** Joins: ua_ (~ua@public-gprs222674.centertel.pl)
[07:14:39] *** Joins: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54)
[07:18:30] *** Quits: wand (~user@gateway/tor-sasl/wand) (Remote host closed the connection)
[07:18:48] *** Joins: wand (~user@gateway/tor-sasl/wand)
[07:22:31] *** Quits: ur5us (~ur5us@122-56-198-145.mobile.spark.co.nz) (Read error: Connection reset by peer)
[07:29:24] *** Quits: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54) (Ping timeout: 252 seconds)
[07:31:19] *** Quits: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net) (Remote host closed the connection)
[07:31:41] *** Joins: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net)
[08:26:18] *** Joins: polishdub (~polishdub@ip72-208-203-185.ph.ph.cox.net)
[08:47:13] *** Joins: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54)
[08:58:23] *** Quits: RedNifre2 (~RedNifre@dslb-002-206-059-093.002.206.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[09:00:51] *** Quits: whysthatso12507 (~whysthats@74-206-50-195.sta.estpak.ee) (Read error: Connection reset by peer)
[09:01:07] *** Joins: whysthatso12507 (~whysthats@74-206-50-195.sta.estpak.ee)
[09:02:21] *** Quits: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54) (Ping timeout: 252 seconds)
[09:11:53] *** Joins: RedNifre2 (~RedNifre@dslb-088-073-105-197.088.073.pools.vodafone-ip.de)
[09:36:06] *** Joins: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54)
[09:40:37] *** Quits: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54) (Ping timeout: 240 seconds)
[09:47:15] *** Joins: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54)
[09:51:57] *** Quits: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54) (Ping timeout: 240 seconds)
[10:08:12] *** Joins: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54)
[10:22:32] *** Quits: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54) (Quit: ERC (IRC client for Emacs 25.3.50.1))
[10:23:06] *** Quits: Thanzex (~Thanzex@37.103.241.128) (Read error: Connection reset by peer)
[10:23:12] *** Joins: Thanzex3 (~Thanzex@37.103.241.128)
[11:22:37] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 240 seconds)
[11:24:28] *** Joins: oxfuxxx (~oxfuxxx@160.238.38.103)
[11:49:14] *** Joins: _ht (~quassel@231-169-21-31.ftth.glasoperator.nl)
[11:52:27] *** Joins: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54)
[11:54:46] *** Quits: oxfuxxx (~oxfuxxx@160.238.38.103) (Ping timeout: 272 seconds)
[11:56:25] *** Joins: tuxcrafter1673 (~tuxcrafte@firewall.powercraft.nl)
[12:00:05] *** Quits: tuxcrafter16 (~tuxcrafte@firewall.powercraft.nl) (Ping timeout: 256 seconds)
[12:02:22] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[12:04:25] *** Joins: teclator (~quassel@85.155.180.70.dyn.user.ono.com)
[12:11:51] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[12:12:39] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[12:18:20] *** Joins: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[12:18:38] *** Joins: oxfuxxx (~oxfuxxx@217.138.207.197)
[12:24:37] *** Joins: gproto23 (~gproto23@user/gproto23)
[12:30:32] *** Joins: a7tism (~a7tism@176-169-136-187.abo.bbox.fr)
[12:31:30] *** Quits: _ht (~quassel@231-169-21-31.ftth.glasoperator.nl) (Remote host closed the connection)
[12:53:14] *** Joins: Rounin (~david@84.212.130.215)
[12:58:49] *** Quits: d-s (~Michal@89-73-9-29.dynamic.chello.pl) (Remote host closed the connection)
[13:05:01] *** Quits: DEac- (~deac@niob.denkn.at) (Ping timeout: 240 seconds)
[13:05:44] *** Joins: DEac- (~deac@niob.denkn.at)
[13:21:23] *** Quits: tuxcrafter1673 (~tuxcrafte@firewall.powercraft.nl) (Quit: Ping timeout (120 seconds))
[13:21:39] *** Joins: tuxcrafter1673 (~tuxcrafte@firewall.powercraft.nl)
[13:32:42] *** Joins: reset (~reset@user/reset)
[13:39:57] *** Quits: oxfuxxx (~oxfuxxx@217.138.207.197) (Ping timeout: 240 seconds)
[13:41:57] *** Quits: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net) (Ping timeout: 240 seconds)
[13:44:57] *** Joins: Synthead (~Synthead@50.35.186.220)
[13:46:12] <Synthead> I have some unused params in a method, like my_method(use_this, use_that, _unused).  I am documenting this with yardoc.  Does it matter what I say what type of object these params are documented as?  Can I put void there or something?
[13:46:24] *** Joins: oxfuxxx (~oxfuxxx@217.138.207.198)
[13:57:57] *** Quits: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54) (Ping timeout: 240 seconds)
[14:12:56] *** Joins: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54)
[14:13:06] *** Quits: weaksauce (~textual@ip68-5-101-101.oc.oc.cox.net) (Ping timeout: 252 seconds)
[14:16:24] *** Quits: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54) (Remote host closed the connection)
[14:16:36] *** Joins: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54)
[14:25:33] *** Quits: oxfuxxx (~oxfuxxx@217.138.207.198) (Ping timeout: 250 seconds)
[14:29:20] *** Quits: Thanzex3 (~Thanzex@37.103.241.128) (Read error: Connection reset by peer)
[14:29:45] *** Joins: Thanzex (~Thanzex@37.103.241.128)
[14:32:24] *** Joins: oxfuxxx (~oxfuxxx@160.238.38.103)
[14:52:22] *** Joins: TCZ (~tcz@91.150.178.124)
[15:04:01] *** Quits: oxfuxxx (~oxfuxxx@160.238.38.103) (Ping timeout: 256 seconds)
[15:09:59] *** Joins: oxfuxxx (~oxfuxxx@160.238.38.99)
[15:23:55] <jhass[m]> why would you have unused arguments in a public API?
[15:25:02] *** Quits: oxfuxxx (~oxfuxxx@160.238.38.99) (Ping timeout: 272 seconds)
[15:29:37] *** Quits: Synthead (~Synthead@50.35.186.220) (Quit: Leaving)
[15:35:45] *** Joins: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net)
[15:46:27] <ox1eef> or any API for that matter
[15:49:50] *** Quits: tuxcrafter1673 (~tuxcrafte@firewall.powercraft.nl) (Quit: Client closed)
[15:50:08] *** Joins: tuxcrafter1673 (~tuxcrafte@firewall.powercraft.nl)
[16:05:23] *** Parts: _axx (~axx@static.246.43.203.116.clients.your-server.de) (The Lounge - https://thelounge.chat)
[16:22:26] *** Quits: ivanf (~ivan@user/ivanf) (Quit: Textual IRC Client: www.textualapp.com)
[16:36:36] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Ping timeout: 272 seconds)
[16:40:54] *** Joins: markong (~kvirc@213.146.188.203)
[17:00:44] *** Quits: tuxcrafter1673 (~tuxcrafte@firewall.powercraft.nl) (Quit: Client closed)
[17:01:04] *** Joins: tuxcrafter1673 (~tuxcrafte@firewall.powercraft.nl)
[17:11:04] *** Quits: tuxcrafter1673 (~tuxcrafte@firewall.powercraft.nl) (Quit: Client closed)
[17:11:20] *** Joins: tuxcrafter1673 (~tuxcrafte@firewall.powercraft.nl)
[17:11:48] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[17:18:06] *** Joins: ivanf (~ivan@user/ivanf)
[17:26:38] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 272 seconds)
[17:31:20] *** Joins: Tomte (~Tomte@user/Tomte)
[17:33:07] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[17:54:34] *** Quits: TCZ (~tcz@91.150.178.124) (Quit: Leaving)
[17:55:57] *** Joins: taupiqueur_ (~taupiqueu@238.106.204.77.rev.sfr.net)
[17:56:19] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[17:59:27] *** Joins: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[18:00:41] *** Joins: dionysus70 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[18:04:00] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Ping timeout: 272 seconds)
[18:04:01] *** dionysus70 is now known as dionysus69
[18:04:40] <adam12> morning
[18:09:30] <jhass[m]> ox1eef:  it happens when you implement some hook method or override something in a child class. Just that being documentation points would be weird
[18:13:47] <ox1eef> i see, so there could be a method in the ancestry tree using the argument, and the child doesn't want to break the signature. that makes sense, but id still question doing it at all - i'd try to do it another way.
[18:13:51] <ox1eef> good morning adam12 
[18:20:06] <adam12> ox1eef: happy friday!
[18:23:23] <ox1eef> same to you :)
[18:32:29] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[18:32:59] *** Quits: taupiqueur_ (~taupiqueu@238.106.204.77.rev.sfr.net) (Ping timeout: 250 seconds)
[18:52:37] *** Quits: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54) (Ping timeout: 240 seconds)
[18:55:02] *** Joins: taupiqueur_ (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[18:55:13] *** Quits: moldorcoder7 (~moldorcod@37.120.143.29) (Ping timeout: 256 seconds)
[18:56:51] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[19:01:06] *** Joins: moldorcoder7 (~moldorcod@37.120.143.30)
[19:01:15] *** Joins: cahoots (~cahoots@cpe-24-193-233-195.nyc.res.rr.com)
[19:02:02] <cahoots> hi, what's the easiest way to pass a block given to my function to a helper function? sth like def my_func_that_takes_a_block(array) ; array.sort_by(block_that_was_passed_in) ; ...
[19:03:33] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[19:07:45] <jhass[m]> cahoots: def outer(&block); inner(&block); end; block is just a common variable name for this, could be anything
[19:11:05] <cahoots> jhass[m], ty
[19:12:40] *** Quits: cahoots (~cahoots@cpe-24-193-233-195.nyc.res.rr.com) (Quit: leaving)
[19:15:02] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[19:16:29] *** Joins: hololeap (~hololeap@user/hololeap)
[19:19:26] *** Joins: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54)
[19:20:19] *** Quits: taupiqueur_ (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[19:21:36] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[19:24:58] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Remote host closed the connection)
[19:26:02] <adam12> Ruby 3.1 supports anonymous block forwarding. def outer(&); inner(&)... I'm presuming this might be a performance optimization of some sort, because for readability it's a meh from me.
[19:27:17] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[19:28:47] *** Quits: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54) (Ping timeout: 252 seconds)
[19:31:43] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[19:32:18] <jhass[m]> pretty sure explicit forwarding was already heavily optimized
[19:34:07] <adam12> I wonder if & avoids an allocation (or two)...
[19:36:37] <mooff> i wondered if storing a block necessarily prevents all local variables in its scope from being GCd, even if it doesn't appear to use them
[19:37:12] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[19:38:16] <mooff> because for instance, it could run send('b'.+('inding')).local_variable_get('cool_local'.to_sym) at any point in future
[19:42:10] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 272 seconds)
[19:42:27] <ox1eef> yeah, some of these recent syntax changes feel like embracing perlism
[19:42:30] *** Joins: roadie (~user@2a02:8108:5a40:1d87:e096:53b7:b2bf:7a01)
[19:42:48] <jhass[m]> that's what I mean with heavily optimized, I wouldn't be surprised to learn there's a little of escape analysis done to avoid storing the block when it's just forwarded
[19:43:03] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[19:43:38] <ox1eef> there's two things i think python got right: one way to do it, and be explicit (aka obvious)
[19:44:54] <jhass[m]> hum, Ruby indeed is quite the counter thesis to that. If Ruby would follow those same principles I don't think it'd look significantly different to python. Which makes me wonder what you're doing in this channel then :D
[19:46:07] <ox1eef> i made that choice like a decade ago, i dont see a benefit to moving to python because theyre very similar in some ways, python just has a more vibrant ecosystem
[19:46:59] *** Joins: oxfuxxx (~oxfuxxx@2a01:cb18:5c0:cb00:74dd:79c1:b7ae:1dfe)
[19:47:30] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[19:47:49] <adam12> It would be nice for them to slow down on syntax changes. A lot of 3rd party software is suffering because of it.
[19:48:03] *** Quits: roadie (~user@2a02:8108:5a40:1d87:e096:53b7:b2bf:7a01) (Ping timeout: 252 seconds)
[19:48:14] <adam12> Especially without a great story for parsing Ruby outside of Ruby (ie Ripper). And Ripper itself is a bit of an opaque box in itself.
[19:49:01] <adam12> There was talks from kddnewton about normalizing a Ruby parser as a library, not built on Bison, which is interesting. And the peeps at Natalie are working on extracting their parser.
[19:50:28] <adam12> If we had an official parser we could build as a .so, I think more interesting options would develop.
[19:50:44] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[19:50:54] <ox1eef> agreed
[19:52:23] *** Joins: John_Ivan_ (~John_Ivan@user/john-ivan/x-1515935)
[19:56:22] *** Quits: John_Ivan (~John_Ivan@user/john-ivan/x-1515935) (Ping timeout: 260 seconds)
[19:56:24] *** Joins: taupiqueur_ (~taupiqueu@240.244.204.77.rev.sfr.net)
[19:57:39] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[20:00:25] *** Joins: roadie (~user@2a02:8108:5a40:1d87:e096:53b7:b2bf:7a01)
[20:00:51] *** Joins: John_Ivan__ (~John_Ivan@user/john-ivan/x-1515935)
[20:04:39] *** Quits: John_Ivan_ (~John_Ivan@user/john-ivan/x-1515935) (Ping timeout: 260 seconds)
[20:05:43] *** Quits: moldorcoder7 (~moldorcod@37.120.143.30) (Ping timeout: 256 seconds)
[20:11:01] *** Joins: moldorcoder7 (~moldorcod@37.120.143.28)
[20:11:11] *** Quits: roadie (~user@2a02:8108:5a40:1d87:e096:53b7:b2bf:7a01) (Ping timeout: 260 seconds)
[20:11:57] *** Quits: oxfuxxx (~oxfuxxx@2a01:cb18:5c0:cb00:74dd:79c1:b7ae:1dfe) (Read error: Connection reset by peer)
[20:22:24] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[20:23:47] *** Quits: taupiqueur_ (~taupiqueu@240.244.204.77.rev.sfr.net) (Ping timeout: 260 seconds)
[20:37:12] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Remote host closed the connection)
[20:37:15] *** Joins: roadie (~user@2a02:8108:5a40:1d87:e096:53b7:b2bf:7a01)
[20:37:53] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[20:46:32] *** Quits: roadie (~user@2a02:8108:5a40:1d87:e096:53b7:b2bf:7a01) (Remote host closed the connection)
[20:46:49] *** Joins: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54)
[20:49:56] *** Joins: weaksauce (~textual@ip68-5-101-101.oc.oc.cox.net)
[20:51:24] *** Quits: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54) (Ping timeout: 240 seconds)
[20:56:37] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[20:57:01] *** Quits: Tomte (~Tomte@user/Tomte) (Ping timeout: 245 seconds)
[20:58:52] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[21:13:39] *** Quits: Thanzex (~Thanzex@37.103.241.128) (Read error: Connection reset by peer)
[21:13:51] *** Joins: Thanzex (~Thanzex@37.103.241.128)
[21:14:07] *** Joins: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54)
[21:19:10] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[21:26:36] *** Quits: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54) (Ping timeout: 245 seconds)
[21:40:45] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Read error: Connection reset by peer)
[21:41:11] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[22:08:51] *** Joins: taupiqueur_ (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[22:11:00] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 272 seconds)
[22:17:45] *** Quits: taupiqueur_ (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[22:18:28] *** Joins: taupiqueur (~taupiqueu@126.147.204.77.rev.sfr.net)
[22:47:28] *** Joins: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54)
[22:55:23] *** Quits: quintasan (~quassel@quintasan.pl) ()
[22:55:31] *** Joins: pgib (~textual@173.38.117.75)
[22:55:55] *** Joins: quintasan (~quassel@quintasan.pl)
[23:02:34] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 260 seconds)
[23:05:20] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[23:08:30] *** Quits: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54) (Remote host closed the connection)
[23:08:44] *** Joins: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54)
[23:13:00] *** Quits: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54) (Ping timeout: 240 seconds)
[23:18:05] *** Joins: ur5us (~ur5us@2406:e002:689a:b901:920f:b571:c0ce:1fdb)
[23:21:36] *** Quits: justOkay (~justache@user/justache) (Read error: Connection reset by peer)
[23:22:54] *** Joins: justOkay (~justache@user/justache)
[23:23:54] *** Joins: Tomte (~Tomte@user/Tomte)
[23:39:18] *** Joins: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54)
[23:40:14] *** Quits: taupiqueur (~taupiqueu@126.147.204.77.rev.sfr.net) (Quit: taupiqueur)
[23:43:45] *** Joins: lunarkitty (uid501895@user/pyra)
[23:44:27] *** Quits: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54) (Ping timeout: 260 seconds)
[23:47:12] *** Joins: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54)
[23:57:45] *** Quits: roadie (~user@2a02:8108:5a40:1d87:a0a4:a51e:2ef2:8a54) (Quit: ERC (IRC client for Emacs 25.3.50.1))
