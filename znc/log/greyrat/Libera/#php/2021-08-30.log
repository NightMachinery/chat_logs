[00:00:01] <Byteflux> Jdbi is a fairly thin layer on top of JDBC which makes it easier to get all that boilerplate out of the way and focus on row/column mapping and writing DAOs. Doctrine DBAL is a similar thin layer on top of PDO that lets you do the same for PHP.
[00:00:32] <puff> Those both sound good, again, thanks.
[00:01:00] *** Joins: christianPHP (~christian@190.232.168.110)
[00:05:22] <Byteflux> Seems with Doctrine DBAL, you can do column mapping, but not row mapping. To do row mapping you'd probably have to pull in the whole Doctrine ORM which gets a bit more complicated.
[00:06:16] <puff> Sounds like a bit of a headache.
[00:07:04] <Byteflux> Though you could probably write a thin layer to do row mapping. DBAL will return associative arrays which is easy enough to map.
[00:08:24] <Byteflux> (compared to say, trying to do the same with a ResultSet in JDBC)
[00:13:23] <puff> Yeah
[00:38:14] *** Quits: magla (~gelignite@55d4cf57.access.ecotel.net) (Quit: Stay safe!)
[00:51:50] <__adrian> puff: you talk about "beans" - there's a php implementation of that. "red bean," i think.
[00:52:01] <__adrian> not a design i'm fond of, but it's there
[00:55:02] <Byteflux> "Bean" is just a term used to describe of convention of plain objects with property getters/setters. setFoo(), getFoo() or isFoo() if boolean property.
[00:56:20] <__adrian> hm. didn't realize.
[00:56:39] <__adrian> i thought it was specific to that java tool
[00:57:06] <Blondie101010> it's an ORM
[00:57:44] <__adrian> yeah
[00:58:09] <Byteflux> Yeah beans are just simple data containers with default constructors (no constructor arguments) that provide a predictable way to set/get data in an object.
[00:58:37] <da_wunder> like dto's?
[00:59:17] <Blondie101010> no, DTOs don't depend on an ORM
[00:59:34] <Byteflux> Nor do beans :)
[00:59:44] <Byteflux> Beans are a generalized concept that exist well outside of ORMs
[00:59:53] <Blondie101010> hmmm ok
[01:00:19] <Byteflux> Beans are generally used for object mapping, but aren't specific to object-relational mapping.
[01:00:28] <da_wunder> Byteflux: so Beans are quite same as DTO's ?
[01:00:40] <Byteflux> For example Gson (Google's JSON library for Java) maps JSON to beans and the other way around.
[01:02:07] <Byteflux> da_wunder: Doesn't seem like it.
[01:02:13] <Blondie101010> hmmmmmmm, reading redbeanphp.com does give the impression that it is an ORM, but maybe you're thinking of other beans
[01:02:44] <Byteflux> Blondie101010: RedBean is, yeah. But in the context of the discussion that we were having earlier about beans, it's not specific to ORMs.
[01:02:55] <Blondie101010> ok
[01:06:21] <__adrian> so - saying they're "data containers" and not necessarily part of an orm, actually does make them sound like DTOs
[01:06:58] <__adrian> what's the distinction (aside from what seems to be a standardized design)?
[01:07:08] <Byteflux> Similar, but Wikipedia says that a DTO can have behavior relating to serialization/deserialization
[01:07:25] <Byteflux> A bean, by convention, is serializable/deserializable based on its properties.
[01:07:33] <__adrian> wikipedia says beans have to be serializable too
[01:07:39] <Byteflux> And does not have such behavior attached to itself.
[01:09:30] <__adrian> so also from wikipedia - "Persistence ... [save bean to] storage and to retrieve them at a later time."  and "A bean can provide other methods for business logic not related to the access to the properties."
[01:09:34] <Byteflux> I suppose technically a Bean is always a DTO but a DTO is not always a Bean.
[01:09:47] <Byteflux> Since the qualifications for a Bean are more rigid.
[01:10:05] *** Quits: lall- (~alek@2001:44c8:4327:c78b:715a:df55:c324:fbfd) (Quit: 42)
[01:10:11] <__adrian> do those two things make sense to you?
[01:10:58] <__adrian> (as part of a "bean" definition?)
[01:11:08] <Byteflux> I've never seen serialization behavior built into the Bean itself, but that it can have methods makes sense, sure.
[01:11:24] <Byteflux> Methods not relating to access of properties, I mean.
[01:11:29] *** Quits: genom (~g@37.214.77.199) (Remote host closed the connection)
[01:12:46] <__adrian> those are the two things that make me hate them :) it's a big lump of "everything"
[01:12:55] <Byteflux> The big qualifiers are that a bean can be instantiated without arguments (default no-args constructor) and that it can be introspected through its property accessors.
[01:13:07] <__adrian> hm. k
[01:13:56] <Byteflux> Which also means they are inherently mutable. Not sure if DTOs can be immutable. But I think it's technically accurate to say that a Bean is always a DTO, but a DTO is not always a bean.
[01:14:12] <Byteflux> At least according to the two definitions.
[01:14:42] <__adrian> i'd suggest would be more accurate to say, a bean can always serve the purpose of a dto
[01:14:54] <puff> __adrian: "bean" as a term in this sense comes from java itself, basically in java a bean is anything you can hand to a java introspector.  That in turn is defined by either a) following javabean naming conventions or b) implementing some custom methods that the introspector will look for (which basically nobody does).
[01:15:02] <__adrian> a dto doesn't have persistence or domain logic.
[01:15:04] <puff> __adrian: But otherwise, yeah, i tmeans what Byteflux said.
[01:15:22] <__adrian> (and not having those things is part of its definition)
[01:15:27] <__adrian> k
[01:15:29] <Byteflux> Yeah, a bean doesn't have to be related to persistence but it can contain domain logic.
[01:15:46] <__adrian> yeah, sounds like what i thought it was in the first place.
[01:16:02] <Byteflux> So I guess even a bean isn't always a DTO since a DTO must not contain domain logic :P
[01:16:04] <__adrian> except that it's a more generalized term and doesn't necssarily have an ORM component
[01:16:20] <__adrian> didn't know those things.
[01:16:42] <Byteflux> Bean is heavily used in Java to map objects to some kind of data
[01:17:04] <puff> That is, the *original* beans were the definition I gave above.  Then java did what java does... so a while later the term "pojo" came into being, "plain old java object", meaning, basically, an original java bean, as opposed to the very heavyweight and complicated enterprise java beans.
[01:17:07] *** Joins: pmercado (~pmercado@186.107.39.248)
[01:18:23] *** Joins: [twisti] (~twisti@toadwater.com)
[01:18:36] *** Parts: [twisti] (~twisti@toadwater.com) ()
[01:19:50] <Byteflux> It's common enough that you have tools like Lombok which let you generate all the boilerplate for a bean using an annotation like @Data on a class (automatically creates getters/setters according to Java Bean conventions).
[01:19:51] <puff> __adrian: When I said "comes from java itself", I meant defined as part of the java standard, the java APIs that came with the JDK had classes that were designed to work with javabeans, etc, etc.
[01:19:55] <Byteflux> Nobody wants to write all those accessors :P
[01:20:23] <Alex8532> I want to make a multi-tenant PHP app.  Can you tell me the approach you would take?
[01:20:28] <puff> Yeah, Lombok is pretty spiffy, albeit it has its limitations.  The fact that the Sun made lombok necesssary is one of the perennial gripes I have.
[01:20:44] <Byteflux> Alex8532: You use a column in your database to indicate who the tenant is... :)
[01:20:53] <Byteflux> `tenant_id` - boom, magic.
[01:20:54] <puff> Alex8532: Yeah, that's pretty much it...
[01:21:03] <Alex8532> Hahaha
[01:21:30] <puff> Alex8532: Though I'd stop and think very carefully about why you want to make it multi-tenant, and whether you really need it.
[01:21:46] <puff> At one point I have 30+ customer companies, eacn running their own instance of my app.
[01:21:53] <puff> That was in java, though.
[01:22:17] <puff> But it was actually something of a selling point, these were healthcare vendors and they're *really* twitchy about their patient data.
[01:22:33] <Byteflux> Separate instances is probably preferable if you can manage it, less room for widespread damage if you roll out an update or something :P
[01:22:44] <da_wunder> ^
[01:22:53] <puff> So the fact we were able to tell them that their data lived in its own database instance was somewhat helpful in closing the sales.
[01:23:13] <puff> Though that'd be an intersting topic of discussion, how do you ameliorate the downsides to separate instances, etc.
[01:23:19] <__adrian> "separate database" doesn't necessitate "separate app install"
[01:23:31] <puff> __adrian: That's correct.
[01:23:39] <puff> I did it mainly by evolving the app as we went, making stuff more and more configurable.
[01:23:58] <puff> And over time, more things lived in the database.
[01:24:31] <puff> That is, more details of configuratio, etc, lived in the database.  Though that was partly the Java servlet spec's fault, that was a bit of a blind spot in the spec.
[01:24:32] <puff> Or gap.
[01:26:12] <puff> Byteflux: And yeah, separate instances was handy, basically I'd deploy an upgrade as a new app instance, with a domain name like beta.customerapp.ourdomain.com.  Then let them play with it for a week or two, then swap the domains.
[01:26:24] <puff> And if we had problems, just tell them to go back to oldmain.foo.bar.etc
[01:27:31] <Byteflux> Right. I think it's worth asking the motivations behind choosing to actually implement multi-tenancy within the application itself. If it's a provisioning issue, there are far better solutions to that.
[01:28:23] <puff> I agree.
[01:28:36] <puff> It's basically adding an additional layer of complexity to your app.
[01:29:07] <Byteflux> Can't really think of a good reason for it that's better than simply building a separate app to manage tenancy.
[01:29:23] <puff> If I had a really good reason to do it, and that reason did not prohibit the following, I'd kept separate database instances and made all of the configuration database driven... which is where my app was heading before I left that company.
[01:31:45] <Byteflux> Alex8532: Instead of trying to do everything in one app, consider having two apps. One for the actual app, the other to manage the instances of the app.
[01:31:48] <puff> Is there a good (widely used, etc) login/authorization library/tool/plugin/framework for php these days?
[01:32:29] <Alex8532> Byteflux: Right.  A gateway that talks to tenant services.
[01:32:37] <puff> I.e., most apps need a login form, signup form, email confimration loop, authorization scheme, etc.
[01:33:55] <__adrian> nothing de facto
[01:34:04] <__adrian> look at the major (micro) frameworks.
[01:34:16] <puff> __adrian: Thanks.
[01:34:28] <Byteflux> As far as "widely used" you could say Laravel and Symfony are "de facto"
[01:35:16] <puff> Do they pull in a lot of baggage with them?
[01:35:29] <Alex8532> Anyone know lagbox in here?  Did he make the transition from freenode?
[01:35:31] <Byteflux> Laravel, yes. Symfony, no. Symfony is componetized so you pull in as much as you want to use.
[01:35:35] <puff> Hm, I can't think of a good term for that.
[01:35:37] <puff> Ah, good.
[01:35:54] <puff> Alex8532: Well /whois lagbox doesn't turn up anything...
[01:36:01] <puff> Byteflux: Thanks.
[01:36:13] <__adrian> yeah, laravel is highly-coupled
[01:36:31] <Alex8532> puff: Lagbox is a Laravel guru and overall good guy.  He used to be in #php on Freenode.
[01:36:41] <Byteflux> puff: Most important thing I'd mention for someone coming back to PHP is Composer. Learn to use it and love it. You'll find most of what you need/want on packagist.org which is the default Composer repository.
[01:36:44] <__adrian> can't say i've seen him since the split.
[01:36:51] <__adrian> +1 re: composer
[01:37:22] <puff> Byteflux: Thanks.
[01:37:42] <Byteflux> Using Composer, you can compose your own project using whatever libraries, create your own Frankenstein framework.
[01:38:44] <Alex8532> __adrian: Thanks.  He has a site.  I can contact him there.
[01:39:12] <Byteflux> puff: Using PHP without composer is a lot like trying to use Java without Maven/Gradle, you just don't do it :0
[01:39:14] <Byteflux> :)
[01:43:10] *** Quits: dukenukem3d (~dukenukem@xdsl-78-35-155-102.nc.de) (Ping timeout: 240 seconds)
[01:43:12] <puff> Right.
[01:43:27] <puff> Man, I miss the days of "javac *.java" :-)
[01:44:43] <Byteflux> I don't... downloading jars from everywhere and making sure they end up in `-cp`...
[01:45:55] <puff> Hah, yeah.
[01:46:05] <puff> Well I avoided that by just not using jars :-)
[01:46:23] <puff> Just kidding.
[01:47:13] <puff> Byteflux: doctrine dbal looks handy, reading https://www.thedevfiles.com/2014/08/simplifying-database-interactions-with-doctrine-dbal
[01:48:22] <Byteflux> Yes it's good if you don't want to pull in the whole ORM and its opinionated principles but want something a bit higher level than raw PDO.
[01:50:27] <Byteflux> This is a pretty old article though, I wonder if it's changed much since.
[01:55:23] *** Joins: Poboy (~Poboy@user/poboy)
[02:01:16] <puff> Also looking at https://zetcode.com/doctrine/querybuilder/ and before that https://www.arroyolabs.com/2014/09/tutorial-doctrine-dbal-php-database-abstraction/
[02:03:13] <puff> Overall looks like a winner.
[02:04:10] <Byteflux> The actual docs are a good reference in general: https://www.doctrine-project.org/projects/doctrine-dbal/en/latest/reference/introduction.html
[02:10:58] <puff> Byteflux: Thanks.
[02:11:40] <puff> Byteflux: I started reading those, but I was looking more for a "here's what this does for you".  I started by looking for reviews of dbal, actually, but didn't find much, so I switched to tutorials.
[02:25:45] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[02:34:10] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 240 seconds)
[02:36:53] *** Quits: Alex8532 (~Alex8532@user/alex8532) (Quit: Going offline, see ya! (www.adiirc.com))
[02:43:44] *** Quits: Poboy (~Poboy@user/poboy) (Quit: Client closed)
[02:48:41] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 248 seconds)
[02:55:21] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:57:33] *** Joins: keypusher (keypusher@user/keypusher)
[03:16:50] *** Quits: onizu (uid373383@id-373383.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[03:18:10] *** Quits: noord (~noord@user/noord) (Ping timeout: 240 seconds)
[03:18:28] *** Quits: CapitalistPunk (~Capitalis@liledevil.xs4all.nl) (Remote host closed the connection)
[03:18:43] *** Joins: CapitalistPunk (~Capitalis@liledevil.xs4all.nl)
[03:19:11] *** Joins: noord (~noord@user/noord)
[03:19:40] *** Quits: couture (~couture@user/couture) (Ping timeout: 240 seconds)
[03:19:40] *** Quits: gry (~quassel@botters/gry) (Ping timeout: 240 seconds)
[03:19:41] *** Joins: gry_ (~quassel@botters/gry)
[03:21:32] *** Joins: couture (~couture@user/couture)
[03:38:24] *** gry_ is now known as gry
[03:46:21] *** Joins: Poboy (~Poboy@user/poboy)
[04:07:10] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[04:09:31] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[04:45:25] *** Quits: xep (~xep@76-210-4-7.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 250 seconds)
[05:07:45] *** Joins: xep (~xep@76-210-4-7.lightspeed.sntcca.sbcglobal.net)
[05:30:02] *** Joins: yuters (~yuters@23-233-111-146.cpe.pppoe.ca)
[05:30:26] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:35:54] *** Joins: jeffrey (~jeffrey@2001:1c00:b11:8800:6035:eeff:fe81:bf1c)
[05:44:10] <ash_worksi> can I just type in a string of valid hex characters and have php interpret it as a number somehow? perhaps using escape sequences or something?
[05:44:32] <ash_worksi> 0x
[05:44:34] <ash_worksi> nvm
[05:44:35] <ash_worksi> thanks
[05:47:14] <Blondie101010> ash_worksi:  for fun: ping 017700000001
[05:49:18] <ash_worksi> I see. Neat
[05:53:17] <ash_worksi> is 3v4l having problems for more people than just me?
[05:53:33] * BadAdviceCat pings Blondie101010 ^_^
[05:53:38] <ash_worksi> can't `var_dump('hello world');` -- I get a 500
[05:53:52] <Blondie101010> they have aproblem
[05:54:02] <Blondie101010> it happens once in a while
[05:54:37] <BadAdviceCat> ash_worksi, I'm having that issue too, it's server side. 5xx.
[05:54:42] <__adrian> 3v4l was having db timeouts for me earlier this evening
[05:54:42] <ash_worksi> also, the docs say $a = 1_234_567; // decimal number (as of PHP 7.4.0) -- var_dump(1_234_567); prints int(1234567) -- do I not know what a decimal is?
[05:55:13] <BadAdviceCat> First time I've ever seen that. >.<
[05:55:18] <Blondie101010> ash_worksi:  if it had taken it as you described, it would be a fatal error
[05:55:21] <__adrian> where? that's an int
[05:55:27] <Blondie101010> can't have 2 decimal points
[05:55:46] <ash_worksi> erm,
[05:55:47] <ash_worksi> https://www.php.net/manual/en/language.types.integer.php
[05:55:48] <__adrian> _ is a decorative separator, not a decimal point
[05:56:01] <Blondie101010> makes sense
[05:56:21] <Blondie101010> I dislike "decorative separators"
[05:56:26] <__adrian> same
[05:56:44] <Byteflux> Well, you can't really avoid the few cases where you have a long number literal for whatever reason.
[05:56:51] <Byteflux> Good for those cases.
[05:57:03] <ash_worksi> so.... again, do I not know what a decimal is?
[05:57:16] <BadAdviceCat> Basically, var_dump(1_234_56_78_9); will work too.
[05:57:20] <__adrian> the argument is it's easier to tell that 1_234_567_789_000 is in the trillions
[05:57:22] <Blondie101010> count the digits or put a line above it with 01234567890123456789012345678901234567890123456789
[05:57:32] <Blondie101010> or the reverse
[05:57:38] <BadAdviceCat> Just can't have more than 1 underscore (LIke __ in a consequtive manner)
[05:57:38] <__adrian> but yeah, doesn't mean you can't typo 1_234_56_789_000
[05:57:40] <Blondie101010> or the delimiters you like
[05:58:01] <__adrian> i.e., it's completely useless, even for its specific justification
[05:58:14] <__adrian> ash_worksi: what are you asking?
[05:58:26] <__adrian> i don't see where you're looking re: decimals
[05:58:48] <__adrian> unless you mean example #1 ?
[05:58:55] <ash_worksi> I'm asking about the code block on the doc that says // decimal number (as of PHP 7.4.0)
[05:58:58] <ash_worksi> yes
[05:59:02] <__adrian> that says it's a _decimal number_
[05:59:11] <__adrian> (the number is)
[05:59:16] <__adrian> not that the _ is a decimal point
[05:59:22] *** Joins: vlm (~vlm@user/vlm)
[05:59:40] <ash_worksi> o..k... so I must really not know what a decimal is. I thought a "decimal number" in any context means a float.
[05:59:40] <Blondie101010> decimal is just the base
[05:59:44] <__adrian> no
[06:00:06] <ash_worksi> so a number with separators is a decimal
[06:00:07] <__adrian> even in contexts where "decimal" is distinct from "integer," it _really_ deosn't mean "float"
[06:00:07] <ash_worksi> ?
[06:00:12] <__adrian> no
[06:00:21] <Blondie101010> ash_worksi:  the decorator you showed is nothing
[06:00:22] <__adrian> it says in the first sentence there, btw.
[06:00:30] <__adrian> "decimal" means "base 10"
[06:00:35] <__adrian> as in, ten fingers on your hand
[06:00:39] <ash_worksi> so it does
[06:01:08] <__adrian> BUT in contexts like sql, where "decimal" is distinct from "float," in usually means "arbitrary precision"
[06:01:28] <__adrian> i.e., a decimal number with a decimal point (i.e., NOT a float)
[06:01:39] <Blondie101010> any fraction is always of arbitrary precision
[06:02:15] <__adrian> sorry i didn't put all the relevant words in the same place
[06:02:22] <__adrian> arbitrary precision decimal number
[06:02:30] <__adrian> i.e., a decimal number with a decimal point (i.e., NOT a float)
[06:02:44] <Blondie101010> ash_worksi:  FYI, floats are not decimal, they're binary, which is what causes some weird comparison results
[06:02:48] <__adrian> ^
[06:03:08] <ash_worksi> so.... wait...
[06:03:25] <Byteflux> a decimal type usually refers to a number with fixed-point fractional precision
[06:03:34] <Byteflux> where as a float is... floating point precision.
[06:04:03] <Blondie101010> with examples it'd be more factual, like mysql vs float
[06:04:29] <__adrian> ash_worksi: you're aware of this big pink box, right?  https://php.net/float
[06:04:41] <Blondie101010> many DBMS handle them that way too
[06:04:54] * ash_worksi reading
[06:05:00] <__adrian> decimal numbers (supporting a fractionor not) don't have this problem. because they're actually backed by a base 10 representation.
[06:05:26] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[06:05:29] <Blondie101010> "base 2, which is used internally"
[06:05:34] <__adrian> ^
[06:06:00] <__adrian> *decimal number types
[06:06:47] *** Quits: Poboy (~Poboy@user/poboy) (Ping timeout: 256 seconds)
[06:06:52] <Blondie101010> the float's exponent of 10 makes it very flexible
[06:06:57] <ash_worksi> base 2, internally, as in, 1 byte per digit... or something?
[06:07:03] <Blondie101010> no
[06:07:15] <Blondie101010> read about it... it's not so easy to describe/understand
[06:07:25] <Blondie101010> it was designed when every bit counted
[06:07:31] <__adrian> as in 101010
[06:08:50] <ash_worksi> Blondie101010: "it" = decimals or floats ?
[06:09:02] <__adrian> both, actually
[06:09:18] <__adrian> why floating point won out is a little interesting and mostly frustrating
[06:09:22] <Byteflux> imagine the fixed point decimal 10.50 (a fixed point of 2 digits), it can be represented as the number 1050
[06:09:52] <Byteflux> given the fixed point # and with some basic arithmetic, well, you know.
[06:10:09] <Blondie101010> any decimal format would have required at least 4 bits per digit
[06:11:01] <Blondie101010> the floating point was a very ingenius approximation which is guaranteed to be precise over 13 digits after the decimal point on modern architectures
[06:11:19] <ash_worksi> makes sense
[06:12:46] <__adrian> but mainly it's very easy to do addition
[06:13:15] <Blondie101010> not sure which came first, the float or the Math coprocessor... hmmm
[06:13:38] <__adrian> iirc the earliest math coprocessors were base 10
[06:14:02] <Blondie101010> interesting
[06:14:21] <__adrian> that's like, something random i read a decade ago. i don't really know.
[06:14:28] <Blondie101010> :)
[06:14:42] <__adrian> but it makes sense, since earliest demands would have been from banks
[06:14:44] <Byteflux> is a php float 32-bits or 64?
[06:15:13] <__adrian> yes
[06:15:39] *** yuters is now known as yuters-alt
[06:16:11] <Blondie101010> Byteflux:  that didn't change with INT 32 to 64
[06:16:15] <Blondie101010> 8 bytes
[06:16:26] *** yuters-alt is now known as yuters
[06:16:39] <Byteflux> Looks like PHP actually calls it a 'double' when I var_dump(), so it's 64 bits at least on my system.
[06:16:48] <Blondie101010> 8 bytes
[06:16:53] <__adrian> it's always called double. that doesn't imply anything.
[06:16:54] <Blondie101010> that has not changed
[06:17:03] <__adrian> var_dump(PHP_INT_MAX);
[06:17:12] <Blondie101010> that did
[06:17:17] *** Joins: yuters-alt (~yuters@23-233-111-146.cpe.pppoe.ca)
[06:17:21] <Byteflux> True, guess I'm used to Java's more rigid definition
[06:17:40] <Byteflux> float being 32bit and double being 64.
[06:17:51] <__adrian> Byteflux: the answer i'm teasing at is that it's platform-dependent. so your answer lies in whether you have a 32 or 64-bit system.
[06:17:56] <Blondie101010> Byteflux:  well in C it was never perfectly standardized soo
[06:18:42] <Blondie101010> I'm thinking of different data type names/definitions
[06:18:43] <Byteflux> IEEE 754 standardizes it I think
[06:19:19] <Blondie101010> the float is the float... that hasn't changed in decades
[06:19:23] <__adrian> "for historical reasons "double" is returned in case of a float, and not simply "float""  —https://php.net/gettype
[06:20:48] <Blondie101010> can't imagine any case where I'd choose a plain float for anything
[06:21:08] <Byteflux> Blondie101010: 'float' conventionally refers to single-precision floating point numbers
[06:21:13] <Blondie101010> I know
[06:21:21] <Blondie101010> that's what I'm commenting
[06:21:29] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 248 seconds)
[06:21:29] <__adrian> php is not conventional
[06:21:34] <__adrian> (in case you hadn't noticed)
[06:21:38] <Blondie101010> 25 years ago, saving a few bytes might have mattered, but not today
[06:21:42] <Byteflux> 'double' or 'float64' obviously being double-precision. Of course PHP doesn't care. It will support double-precision when it can and still call it a float.
[06:22:00] <Blondie101010> yes
[06:22:01] <__adrian> it uses lots of words in ways you might not expect
[06:22:08] <Blondie101010> PHP's float is a C double
[06:22:23] <Blondie101010> it does not matter
[06:22:48] <Blondie101010> as I was saying, no one would usually justify having a simple float instead of a double for anything
[06:23:36] *** Quits: yuters-alt (~yuters@23-233-111-146.cpe.pppoe.ca) (Remote host closed the connection)
[06:23:39] <Byteflux> *Depending on platform, I think?
[06:23:51] <Blondie101010> possibly
[06:23:52] <Byteflux> In C, a double is always a double (64 bits) regardless of platform, is this correct?
[06:25:08] <Byteflux> In PHP, I believe a float can be single-precision on a 32 bit platform.
[06:25:08] <Blondie101010> but I said on "modern arch" and I think that's factual
[06:25:09] <Blondie101010> Byteflux:  not in PHP
[06:25:09] <Blondie101010> it uses a C double
[06:25:09] <Blondie101010> that won't change if you get a 64 bit arch
[06:29:22] <Byteflux> Interesting, is a double in C not *always* double precision, then? Curious why the PHP docs mention that a float is typically double-precision, but implies that depending on platform that isn't always the case.
[06:30:09] <__adrian> on a 32-bit system, it's 4 bytes
[06:30:50] <__adrian> e.g., try it on a pi or a core2
[06:31:27] *** Joins: Poboy (~Poboy@user/poboy)
[06:32:40] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[06:33:46] *** Quits: yuters (~yuters@23-233-111-146.cpe.pppoe.ca) (Quit: Leaving...)
[06:35:11] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Quit: Quitting)
[06:36:53] <Blondie101010> __adrian:  did you actually see it yourself at 4 bytes?
[06:37:06] <__adrian> back in the day, yeah
[06:37:23] <Blondie101010> might be before my time in PHP
[06:37:35] <__adrian> it affects things like inet functions, even
[06:38:40] <Blondie101010> Byteflux:  but your line of commenting does fit my point on lack of absolute standards which would be almost impossible to enforce with the amount of existing code
[06:38:49] <Byteflux> sizeof(double) is always 8 bytes, so then it's not always backed by a double as claimed or something has changed since you tested this and now it is? I suppose could look at ZE/PHP src too :P
[06:39:12] <Blondie101010> Byteflux:  if __adrian is right, I agree with you
[06:39:33] <__adrian> php.net is flippin slow rn
[06:40:39] *** Quits: genomc (uid245282@id-245282.stonehaven.irccloud.com) (Read error: Connection reset by peer)
[06:41:00] *** Quits: DrowningElysium (sid190788@user/drowningelysium) (Ping timeout: 250 seconds)
[06:41:12] *** Quits: sharpertool (sid80151@id-80151.stonehaven.irccloud.com) (Ping timeout: 258 seconds)
[06:41:12] *** Quits: KnownSyntax (sid233169@user/knownsyntax) (Ping timeout: 258 seconds)
[06:42:16] *** Joins: genomc (uid245282@stonehaven.irccloud.com)
[06:42:23] *** Joins: sharpertool (sid80151@stonehaven.irccloud.com)
[06:42:29] *** Joins: KnownSyntax (sid233169@user/knownsyntax)
[06:43:22] *** Joins: DrowningElysium (sid190788@user/drowningelysium)
[06:46:40] <sumthing1980> hello Im trying to read a blob in php
[06:46:48] <sumthing1980> data is around 124 kb I see only like 60 b
[06:46:48] *** Joins: yuters-alt (~yuters@23-233-111-146.cpe.pppoe.ca)
[06:47:08] <Blondie101010> define "see"
[06:47:12] <sumthing1980> is there anything special you need to do to access it like when you are inserting binary blob data
[06:47:24] <__adrian> no
[06:47:29] <Blondie101010> does var_dump show the right size?
[06:47:33] <sumthing1980> the php variable is some 60 bytes
[06:47:34] <__adrian> "binary data" == "string"
[06:47:34] <sumthing1980> no
[06:47:54] <__adrian> then it's something in how you read/assigned it in the first place
[06:48:00] * Blondie101010 nods
[06:48:03] <sumthing1980> it shows a tiny amount I do the same command in sqlite db browser and it gives 124 kb right amount
[06:48:22] <__adrian> so you're selecting from sqlite?
[06:48:22] <sumthing1980> mm ok
[06:48:30] <sumthing1980> yes
[06:48:41] <__adrian> using pdo or sqlite3?
[06:48:46] <sumthing1980> sqlite3
[06:49:15] <__adrian> hm.
[06:49:24] <sumthing1980> yea..
[06:49:28] <__adrian> how (pls link code)
[06:49:38] <sumthing1980> let me know if you think of something
[06:50:17] <sumthing1980> thats a lot to provide Imma find the problem
[06:50:39] <__adrian> meant more like "are you using query() or openBlob() or what"
[06:50:48] <sumthing1980> query
[06:51:10] <__adrian> what are the missing bytes? e.g., are they padding?
[06:51:22] <__adrian> all the same of some byte?
[06:51:46] <__adrian> beginning? end? both? is there a null byte in the data?
[06:53:11] <sumthing1980> file start like this 00000001 00000001 00000001
[06:53:19] <__adrian> i'm guessing null byte + selecting via query() would make sqlite think of the value as a string and then truncate
[06:53:27] <sumthing1980> and it is the beginning of same binary of the 124 kb
[06:53:47] <sumthing1980> yea
[06:53:54] <sumthing1980> do you escape things when selecting?
[06:54:20] <__adrian> i've never tried dealing with null bytes in sqlite. all guesswork
[06:54:41] <__adrian> you could escape them (maybe hex-encode?), i suppose.
[06:54:49] <__adrian> OR this might be the reason openBlob() exists
[06:55:23] <__adrian> again, all guesswork. couldn't even say that this IS a problem
[06:55:46] <sumthing1980> Ill look at it
[06:56:10] <__adrian> see if the same thing happens with PDO
[06:56:28] <__adrian> that would mean it's a driver thing
[06:56:36] *** Quits: jeffrey (~jeffrey@2001:1c00:b11:8800:6035:eeff:fe81:bf1c) (Ping timeout: 250 seconds)
[06:56:39] <__adrian> *if it doesn't
[06:57:32] <Blondie101010> which is most plausible
[06:57:37] <__adrian> i'm off. nite
[06:57:54] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[06:58:00] <Byteflux> bye nerd :>
[06:58:00] <sumthing1980> thanks bye
[06:59:08] *** Quits: yuters-alt (~yuters@23-233-111-146.cpe.pppoe.ca) (Quit: Leaving)
[07:06:11] *** Quits: pmercado (~pmercado@186.107.39.248) (Quit: Konversation terminated!)
[07:22:47] *** Quits: KnownSyntax (sid233169@user/knownsyntax) (Ping timeout: 240 seconds)
[07:22:47] *** Quits: sharpertool (sid80151@stonehaven.irccloud.com) (Ping timeout: 240 seconds)
[07:23:22] *** Quits: genomc (uid245282@stonehaven.irccloud.com) (Read error: Connection reset by peer)
[07:24:50] *** Joins: montybanksnyc (~montybank@pool-71-127-199-18.nwrknj.fios.verizon.net)
[07:25:27] *** Quits: DrowningElysium (sid190788@user/drowningelysium) (Ping timeout: 240 seconds)
[07:25:53] *** Joins: ferdna (~ferdna@user/ferdna)
[07:26:00] *** Joins: KnownSyntax (sid233169@user/knownsyntax)
[07:26:07] *** Joins: genomc (uid245282@id-245282.stonehaven.irccloud.com)
[07:26:12] *** Joins: sharpertool (sid80151@id-80151.stonehaven.irccloud.com)
[07:27:20] *** Joins: DrowningElysium (sid190788@user/drowningelysium)
[07:41:31] *** Joins: Rockwood (~Rocky@user/rocky)
[07:42:28] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[07:43:38] *** Joins: guidoc (~guido@151.57.136.17)
[08:10:01] *** Joins: semeion (~semeion@user/semeion)
[08:10:46] *** semeion is now known as mnemonic
[08:16:19] *** Joins: rj1 (~rj1@i.dont.know.how.com.puters.work)
[08:26:35] *** Quits: Poboy (~Poboy@user/poboy) (Quit: Client closed)
[08:26:51] *** Joins: Alex8532 (~Alex8532@user/alex8532)
[08:28:55] *** Joins: TML (~tml@user/tml)
[08:28:55] *** ChanServ sets mode: +v TML
[08:33:30] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[08:43:02] *** Quits: genomc (uid245282@id-245282.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[08:46:33] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 248 seconds)
[09:10:59] *** Quits: arash (arash@thinks.life.is-a.beauty) (*.net *.split)
[09:11:00] *** Quits: fairuz- (fairuz@user/fairuz) (*.net *.split)
[09:11:00] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (*.net *.split)
[09:11:00] *** Quits: DerekTheRed (~portra400@peso.subtitled.com) (*.net *.split)
[09:11:00] *** Quits: fiddlerwoaroof (~fiddlerwo@user/fiddlerwoaroof) (*.net *.split)
[09:11:00] *** Quits: ss23 (~ss23@irc.ss23.geek.nz) (*.net *.split)
[09:11:00] *** Quits: Beryllium (sid186414@id-186414.tooting.irccloud.com) (*.net *.split)
[09:11:00] *** Quits: anomander (~anomander@vps-e9abfd3d.vps.ovh.net) (*.net *.split)
[09:11:00] *** Quits: ikonia (~irc@user/ikonia) (*.net *.split)
[09:11:00] *** Quits: kevr (~kevr@user/kevr) (*.net *.split)
[09:11:00] *** Quits: cisco87 (~quassel@lnxg33k.com) (*.net *.split)
[09:11:11] *** Joins: cisco87 (~quassel@lnxg33k.com)
[09:11:15] *** Joins: Beryllium (sid186414@id-186414.tooting.irccloud.com)
[09:12:29] *** Joins: kevr (~kevr@user/kevr)
[09:12:29] *** Joins: DerekTheRed (~portra400@peso.subtitled.com)
[09:12:41] *** Joins: fiddlerwoaroof (~fiddlerwo@user/fiddlerwoaroof)
[09:13:16] *** Joins: arash (arash@thinks.life.is-a.beauty)
[09:15:08] *** Quits: VectorX (~VectorX@user/vectorx) (*.net *.split)
[09:15:08] *** Quits: FatBoyXPC (~FatBoyXPC@user/fatboyxpc) (*.net *.split)
[09:15:08] *** Quits: Pokey (~pokey@spikeyCactus/hoosky) (*.net *.split)
[09:15:08] *** Quits: kantlivelong (~kantlivel@cpe-67-250-125-43.hvc.res.rr.com) (*.net *.split)
[09:15:08] *** Quits: ekneuss_ (~ekneuss@box.croustillant.ch) (*.net *.split)
[09:15:08] *** Quits: Janusz (~Janusz@user/janusz) (*.net *.split)
[09:15:08] *** Quits: Byteflux (~byte@byteflux.net) (*.net *.split)
[09:15:08] *** Quits: Koopz (~Koopz@koopz.rocks) (*.net *.split)
[09:15:08] *** Quits: overrider (~overrider@user/overrider) (*.net *.split)
[09:15:08] *** Quits: mjh4386_ (~mjh4386@165.22.53.231) (*.net *.split)
[09:15:08] *** Quits: glider (~glider@user/glider) (*.net *.split)
[09:15:08] *** Quits: \mSg (~mSg@user/msg/x-0285936) (*.net *.split)
[09:15:08] *** Quits: ekl (~ekl@user/ekl) (*.net *.split)
[09:15:08] *** Quits: BigE (~biggie@user/bige) (*.net *.split)
[09:15:08] *** Quits: Blondie101010 (~Blondie10@user/blondie101010) (*.net *.split)
[09:15:08] *** Quits: fjmorazan (~quassel@user/fjmorazan) (*.net *.split)
[09:15:08] *** Quits: Cork (~Cork@user/cork) (*.net *.split)
[09:15:08] *** Quits: thiccdaddy (~OwO@thiccdaddy.sexy) (*.net *.split)
[09:15:08] *** Quits: Stanley (~stanley@d162-156-50-3.bchsia.telus.net) (*.net *.split)
[09:15:08] *** Quits: nuala (~nuala@user/nuala) (*.net *.split)
[09:15:08] *** Quits: NoiseEee (~NoiseEee@178.128.153.219) (*.net *.split)
[09:15:08] *** Quits: Woet (~me@irc.woet.me) (*.net *.split)
[09:15:08] *** Quits: wyre (~wyre@user/wyre) (*.net *.split)
[09:15:08] *** Quits: BukkitGerman (~BukkitGer@v2202101139897141171.quicksrv.de) (*.net *.split)
[09:15:08] *** Quits: s17 (~nobody@user/s17) (*.net *.split)
[09:15:19] *** Joins: Janusz (~Janusz@user/janusz)
[09:15:39] *** Joins: FatBoyXPC_ (~FatBoyXPC@user/fatboyxpc)
[09:16:31] *** Joins: Woet (~me@irc.woet.me)
[09:16:31] *** Joins: ekl (~ekl@user/ekl)
[09:16:31] *** Joins: kantlivelong (~kantlivel@cpe-67-250-125-43.hvc.res.rr.com)
[09:16:31] *** Joins: Byteflux (~byte@byteflux.net)
[09:16:37] *** Joins: ikonia (~irc@user/ikonia)
[09:16:44] *** Joins: mjh4386 (~mjh4386@165.22.53.231)
[09:16:52] *** Joins: wyre (~wyre@user/wyre)
[09:16:53] *** Joins: Koopz (~Koopz@koopz.rocks)
[09:16:57] *** Joins: Pokey (~pokey@spikeyCactus/hoosky)
[09:16:58] *** Joins: Blondie101010 (~Blondie10@user/blondie101010)
[09:16:59] *** Joins: glider (~glider@user/glider)
[09:17:01] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[09:19:32] *** Joins: Cork (~Cork@user/cork)
[09:20:24] *** Joins: ekneuss (~ekneuss@box.croustillant.ch)
[09:20:24] *** ChanServ sets mode: +v ekneuss
[09:21:29] *** Joins: VectorX (~VectorX@user/vectorx)
[09:30:40] *** Joins: Akimb (~Akimb@82-135-197-171.static.zebra.lt)
[09:31:14] *** Joins: genomc (uid245282@id-245282.stonehaven.irccloud.com)
[09:46:22] *** Joins: onizu (uid373383@id-373383.highgate.irccloud.com)
[09:51:46] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[09:52:16] *** Joins: Rockwood (~Rocky@user/rocky)
[09:52:47] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[10:16:38] *** Quits: mnemonic (~semeion@user/semeion) (Quit: WeeChat 3.2)
[10:23:32] *** Joins: ironsoba (~z@user/ironsoba)
[10:29:32] *** Quits: guidoc (~guido@151.57.136.17) (Quit: WeeChat 3.2)
[10:30:52] <ironsoba> hey guys, can anyone tell me where to officially download WAMP?
[10:33:14] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[10:36:34] <Cork> ironsoba: the project is on sourceforge
[10:38:17] <ironsoba> ah ok...any preferences between xamp and wamp? i'm just learning over here, i appreciate any insight
[10:44:43] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[10:44:58] <kerunaru> Hi, y'all =)
[10:47:07] <biberu> !+wamp
[10:48:17] *** Quits: Alex8532 (~Alex8532@user/alex8532) (Quit: Going offline, see ya! (www.adiirc.com))
[10:50:21] <biberu> ironsoba: if you're just learning perhaps it doesn't matter much, but if you're planning to run the code on another os than windows it can be useful to have the same in your dev setup. that doesn't mean you need to change your desktop os though, you can do it with e.g. virtual machines or docker
[10:51:41] <ironsoba> i'll go with xampp, thanks. just didn't know who bitnami was!
[10:56:42] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[10:56:55] *** Quits: christianPHP (~christian@190.232.168.110) (Quit: Client closed)
[11:05:59] *** Joins: guy_frm_yogaland (~guy_frm_y@117.228.111.21)
[11:06:34] <guy_frm_yogaland> hi
[11:06:51] <guy_frm_yogaland> every1
[11:07:01] <biberu> o/
[11:08:31] <guy_frm_yogaland> I have a php program that I am trying to understand, can you please help me with fixing the error please?
[11:09:07] <guy_frm_yogaland> here is the code:
[11:09:09] <guy_frm_yogaland> https://dpaste.com/8A38CSLQH
[11:10:33] <guy_frm_yogaland> error I am getting is this:
[11:11:05] <guy_frm_yogaland> PHP Warning:  Undefined array key 1 in /my-programs/word_page.php on line 5
[11:11:52] <guy_frm_yogaland> in the list($a, $b) line
[11:12:35] <Naktibalda> it happens when you get a line without space
[11:13:23] <guy_frm_yogaland> I have used a space in my inputs like "apple 5"
[11:13:58] <guy_frm_yogaland> and i used var_dump(), printed $a, $b, data present inside these
[11:15:25] <Naktibalda> you have to check if array has more than 1 item before using list()
[11:16:55] *** Joins: s17 (~nobody@user/s17)
[11:19:12] <guy_frm_yogaland> can I paste screenshots of my code here?
[11:19:23] <guy_frm_yogaland> am I allowed to do that?
[11:19:51] <Naktibalda> it is a bad idea, code is text
[11:20:04] <Cork> guy_frm_yogaland: why paste an image of code when you can just make a pb with the code?
[11:20:40] *** Quits: Zauberfisch (~Zauberfis@cm83-180.liwest.at) (Read error: Connection reset by peer)
[11:23:51] <guy_frm_yogaland> ok, no I was just asking if I am permitted or not
[11:24:16] <biberu> it just makes it harder for people to help
[11:24:31] <guy_frm_yogaland> ok
[11:24:47] <Cork> guy_frm_yogaland: that is like asking if it is ok to shit on the wakway. Why would you...
[11:25:36] <guy_frm_yogaland> https://dpaste.com/GP22E7J7V
[11:26:30] <guy_frm_yogaland> my output
[11:26:31] <guy_frm_yogaland> https://dpaste.com/87RE8NNPN
[11:27:04] <guy_frm_yogaland> this is in regards with Naktibalda
[11:27:44] <guy_frm_yogaland> yes, the array has more than 1 item
[11:28:29] <biberu> guy_frm_yogaland: what does the error message say=
[11:29:06] <biberu> make sure you understand it
[11:30:19] <guy_frm_yogaland> PHP Warning:  Undefined array key 1 in /my-programs/word_page.php on line 5
[11:30:30] <biberu> that's not what it says in your paste
[11:30:38] <guy_frm_yogaland> when i use list($a, $b)
[11:30:53] <guy_frm_yogaland> oh in the picture?
[11:31:17] <guy_frm_yogaland> that does not matter, because I removed the list($a, $b) from the line
[11:31:20] <biberu> what picture?
[11:31:25] <guy_frm_yogaland> just to do var_dump()
[11:31:49] <guy_frm_yogaland> what picture? sorry the dpaste
[11:33:01] <guy_frm_yogaland> see my original paste: https://dpaste.com/8A38CSLQH
[11:33:01] <Naktibalda> guy_frm_yogaland: add if(strpos(' ', $line) { continue; }  before list() line
[11:33:27] <guy_frm_yogaland> ok, what does this do?
[11:33:32] *** Quits: tccki (~tccki@box.webslate.co.nz) (Quit: tccki)
[11:35:18] *** Joins: tccki (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795)
[11:36:51] <guy_frm_yogaland> PHP Parse error:  syntax error, unexpected token "continue" in /my-programs/word_page.php on line 7
[11:38:17] <guy_frm_yogaland> sorry fixed the error
[11:39:20] <guy_frm_yogaland> still shows the same error : PHP Warning:  Undefined array key 1 in /my-programs/word_page.php on line 10
[11:39:55] <guy_frm_yogaland> the updated code: https://dpaste.com/2LCQFS84Y
[11:41:01] <TinoDidriksen> He said ' ' not ''
[11:41:27] <guy_frm_yogaland> you mean a space in between the quotes?
[11:41:41] <TinoDidriksen> Yes. Checking for an empty string makes no sense.
[11:41:44] <guy_frm_yogaland> hard to differentiate the space here on the chat
[11:41:50] <TinoDidriksen> Not really
[11:41:58] <guy_frm_yogaland> ok
[11:42:00] <guy_frm_yogaland> let me do that
[11:42:02] <biberu> you shouldn't just copy paste anyway
[11:42:11] <biberu> you've to to understand why you're doing what
[11:42:26] <biberu> got to*
[11:42:38] <guy_frm_yogaland> changed the code and it says the same error key 1
[11:43:20] <biberu> isn't that logic reversed?
[11:44:10] <Naktibalda> correct code: if(strpos(' ', $line) === false) { continue; }
[11:44:35] <guy_frm_yogaland> oh this logic is reversed, got it
[11:46:18] <guy_frm_yogaland> what does this strpos() return?
[11:47:31] *** Joins: Zauberfisch (~Zauberfis@cm83-180.liwest.at)
[11:47:39] *** Joins: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::3f1)
[11:49:54] <guy_frm_yogaland> no, it does not work
[11:50:24] <guy_frm_yogaland> keeps on saying array key error
[11:52:39] <TinoDidriksen> Actually correct code: if(strpos($line, ' ') === false) { continue; } ... strpos() is haystack, needle.
[11:53:26] <TinoDidriksen> Alternatively, just explode and continue if count() < 2.
[11:55:01] <TinoDidriksen> Your implode() line is also wrong.
[11:58:27] *** Joins: poebel (~poebel@x4db6969b.dyn.telefonica.de)
[11:59:14] <guy_frm_yogaland> ok
[12:00:48] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 250 seconds)
[12:01:04] *** Joins: grawity (grawity@star.nullroute.eu.org)
[12:01:56] <grawity> okay so when .env files are used to store things like DB settings, are they actually supposed to be loaded to $_ENV, or just to a normal array that's then passed around?
[12:06:51] *** DuckThom is now known as aloy
[12:09:34] *** Quits: FloridaMan (~FloridaMa@user/floridaman) (Ping timeout: 252 seconds)
[12:12:03] *** Joins: FloridaMan (~FloridaMa@user/floridaman)
[12:15:59] *** Joins: norkle (~norkle@admin.nasa-g0v.com)
[12:16:53] <TinoDidriksen> grawity, https://github.com/vlucas/phpdotenv
[12:17:11] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[12:18:19] <grawity> yeah i know how *that specific package* does it
[12:19:05] <TinoDidriksen> That is the library other frameworks use, from what I can see.
[12:19:18] <grawity> but I mean, is that package's usage of "stuff everything into $_ENV" the accepted practice
[12:19:39] <guy_frm_yogaland> strpos($line, ' ') checks if there is a space or not but what if I want to check if there is no input at all on the command prompt and based on this if I will do some operations?
[12:19:46] <grawity> (years of mod_php made me uncomfortable with putting app-specific state in shared process environment)
[12:20:32] <Naktibalda> $_ENV is not shared.
[12:20:41] <TinoDidriksen> Loading .env into environment is the only thing that makes sense.
[12:21:05] <Naktibalda> the idea generally is that .env file fills the gaps in environment variables
[12:22:14] <TinoDidriksen> guy_frm_yogaland, hence what I said. Always explode() into an array and continue if count() < 2.
[12:22:16] <grawity> hmm yeah, but that's the other thing, it feels outright weird to handle application config as "environment variables" in the first place...
[12:22:32] <guy_frm_yogaland> I tried to change the code a bit and can you please tell me how to check if there is no input at all?
[12:22:41] <guy_frm_yogaland> https://dpaste.com/9KZ8LCQAV
[12:22:55] <TinoDidriksen> Putting config into the environment is really bloody weird, but it somehow got critical mass and it's what all systems use now.
[12:22:58] <grawity> though I've seen another dev use `SetEnv APPLICATION_MODE production` and I guess that makes sense
[12:23:54] <grawity> but I can't get used to it in general, so right now I do `$env = Symfony\Yaml::load("config.yaml")` and keep it isolated from the actual environment
[12:24:00] <grawity> is that bad practice
[12:26:57] <guy_frm_yogaland> my output: as you can see after it sees a value of false, then it comes out of the while loop and prints add space between 2 inputs.. , etc
[12:26:59] <guy_frm_yogaland> https://dpaste.com/6LEFRQHE3
[12:28:35] <guy_frm_yogaland> code: https://dpaste.com/9KZ8LCQAV
[12:29:11] *** Joins: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net)
[12:30:27] <s17> guy_frm_yogaland: you can check if $line is only \n and assume that to be "no input"
[12:31:03] <guy_frm_yogaland> ok, got it now
[12:31:06] <guy_frm_yogaland> thanks
[12:31:15] <s17> or I guess if you trim() it will be nothing :/
[12:31:26] <TinoDidriksen> guy_frm_yogaland, https://3v4l.org/KMH64
[12:34:06] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:39:23] *** Joins: \mSg (~mSg@user/msg/x-0285936)
[12:42:23] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[12:50:19] *** Joins: \mSg_mini (~mSg@user/msg/x-0285936)
[12:51:10] *** Quits: \mSg (~mSg@user/msg/x-0285936) (Ping timeout: 240 seconds)
[12:51:10] *** \mSg_mini is now known as \mSg
[13:14:03] <grawity> ...wow, the old code had date("H:m:s") and apparently I fixed it to date("H:M:S") like an idiot, and it worked for months because the old MySQL server quietly ignored the garbage
[13:14:13] <grawity> I need to learn tests
[13:16:03] <s17> H:i:s
[13:16:15] <grawity> yeah
[13:16:16] <AllenJB> Also look at MySQL's sql_mode - you can configure MySQL to reject invalid dates
[13:16:29] <grawity> mariadb now does default to strict
[13:16:56] <grawity> which is how I noticed the issue, after moving over from the old 5.6 server
[13:17:51] <grawity> but hey at least I ported the site from a PHP4-era mysql_query wrapper to PDO ;_;
[13:19:01] <grawity> just in time when the supposed maintainer (whom we're paying to maintain it) sends out an email alerting all customers about "increased risk of SQL injections, please edit your .htaccess to block (SELECT|INSERT|DELETE)"
[13:35:09] *** Quits: Phil-Work (~phil@62.3.100.20) (Remote host closed the connection)
[13:35:46] *** Joins: Phil-Work (~phil@62.3.100.20)
[13:41:12] *** Quits: Akimb (~Akimb@82-135-197-171.static.zebra.lt) (Read error: Connection reset by peer)
[13:46:32] *** Joins: thiccdaddy (~OwO@thiccdaddy.sexy)
[13:47:29] *** Quits: guy_frm_yogaland (~guy_frm_y@117.228.111.21) (Ping timeout: 256 seconds)
[13:52:37] *** Joins: olle (~olle@p5785bfee.dip0.t-ipconnect.de)
[13:57:53] *** Joins: guy_frm_yogaland (~guy_frm_y@2409:4062:2398:1db5:591a:9172:2a92:7204)
[14:06:34] *** Joins: guidoc (~guido@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f)
[14:09:08] *** Joins: Ducki_ (~ducki@user/ducki)
[14:10:10] *** Quits: Ducki (~ducki@user/ducki) (Ping timeout: 240 seconds)
[14:19:42] <guy_frm_yogaland> guys can you tell me how to write if statement for a blank user input of stdin
[14:19:52] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[14:20:04] <guy_frm_yogaland> like after input from user, we need to press enter key
[14:20:41] <Naktibalda> if (trim($line) === '')
[14:21:01] <guy_frm_yogaland> aah ok
[14:21:03] <guy_frm_yogaland> thanks
[14:26:19] <guy_frm_yogaland> did not work
[14:26:25] <guy_frm_yogaland> I found another way
[14:26:31] <guy_frm_yogaland> press ctrl + D
[14:26:40] <guy_frm_yogaland> to end the user input
[14:27:55] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 244 seconds)
[14:41:01] *** Quits: sebbu (~sebbu@user/sebbu) (Quit: reboot)
[14:42:52] *** Quits: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net) (Read error: Connection reset by peer)
[14:43:25] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 244 seconds)
[14:43:57] *** Joins: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net)
[14:47:06] *** Quits: s1b1 (~s1b1@user/s1b1) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:48:35] *** Quits: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net) (Ping timeout: 244 seconds)
[14:48:54] *** Quits: guy_frm_yogaland (~guy_frm_y@2409:4062:2398:1db5:591a:9172:2a92:7204) (Quit: Client closed)
[14:48:57] *** Joins: dlundgren (~dlundgren@75-9-109-251.lightspeed.milwwi.sbcglobal.net)
[14:49:05] *** Joins: WishBoy (~WishBoy@user/wishboy)
[14:54:22] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[14:54:36] *** Joins: Alex8532 (~Alex8532@user/alex8532)
[14:55:34] *** Joins: s1b1 (~s1b1@user/s1b1)
[14:56:00] *** Joins: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net)
[15:00:38] *** Quits: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net) (Ping timeout: 250 seconds)
[15:29:29] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[15:38:25] *** Joins: Akimb (~Akimb@82-135-197-171.static.zebra.lt)
[15:50:00] *** Joins: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net)
[15:54:29] *** Quits: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net) (Ping timeout: 250 seconds)
[15:56:46] *** Quits: guidoc (~guido@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f) (Quit: WeeChat 3.2)
[16:13:59] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 250 seconds)
[16:18:00] *** Joins: jeffrey (~jeffrey@80-115-60-193.cable.dynamic.v4.ziggo.nl)
[16:18:50] *** Joins: MCMiic (~mcmic@63.120.199.77.rev.sfr.net)
[16:20:12] *** Quits: novns (~novns@user/novns) (Quit: ZNC 1.8.2 - https://znc.in)
[16:20:40] *** Joins: novns (~novns@user/novns)
[16:24:29] *** Joins: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net)
[16:27:20] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[16:29:13] *** Quits: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net) (Ping timeout: 252 seconds)
[16:32:26] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[16:38:01] *** Joins: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net)
[16:38:58] *** Joins: guidoc (~guido@151.35.23.92)
[16:42:14] *** Joins: sebbu (~sebbu@user/sebbu)
[16:43:41] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[16:48:27] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 244 seconds)
[16:50:16] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 250 seconds)
[16:53:03] *** Joins: MrTrick (uid181961@id-181961.highgate.irccloud.com)
[16:57:14] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Read error: Connection reset by peer)
[16:58:58] *** Quits: norkle (~norkle@admin.nasa-g0v.com) (Quit: Lost terminal)
[16:59:00] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[17:11:11] <__adrian> "increased risk of sql injections ..."  // yeah, THAT's the solution  >____<
[17:12:12] <Blondie101010> oh yuck, yeah that's ugly
[17:12:33] <biberu> lol
[17:12:33] <__adrian> it's almost funny.
[17:17:19] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[17:20:15] *** Joins: qwedfg_ (~qwedfg@user/qwedfg)
[17:21:00] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Ping timeout: 244 seconds)
[17:21:21] *** Joins: goddard (~goddard@user/goddard)
[17:21:24] <goddard> hello
[17:21:31] <goddard> how can you check if something is serializable?
[17:22:07] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 245 seconds)
[17:22:35] <Blondie101010> how could it not be?
[17:23:03] <Blondie101010> I suspect the question doesn't properly express the actual intent
[17:23:07] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[17:25:31] <Blondie101010> goddard:  anything is serializable, but that doesn't ensure everything will work when you unserialize it which could depend on includes or even contain resources
[17:25:39] *** Quits: qwedfg_ (~qwedfg@user/qwedfg) (Ping timeout: 244 seconds)
[17:26:01] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[17:26:06] <biberu> could a resource or something, but it's an odd thing to have to check, what's the context?
[17:28:15] <Blondie101010> if you have to check if there's a resource, your design has very serious flaws
[17:28:22] <biberu> indeed
[17:30:33] *** Joins: pmercado (~pmercado@186.107.39.248)
[17:33:31] *** Joins: Poboy (~Poboy@user/poboy)
[17:35:19] <goddard> in php it complains
[17:35:27] <goddard> like if it hits a closure or something
[17:35:52] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[17:36:04] <goddard> if you wanna save the state of something without losing information like an exception logger what do people do?
[17:36:41] *** Joins: vit (~vit@chello085216193138.chello.sk)
[17:38:11] <Naktibalda> does anyone use serialize in logger?
[17:38:29] <biberu> goddard: why do you need to save the state?
[17:38:44] <goddard> biberu: it just gives a perfect representation when it works
[17:38:51] <goddard> if something is better then i will use that
[17:39:19] <biberu> better for what purpose?
[17:39:32] <Naktibalda> you can implement __sleep or __serialize in your class and return only serializable properties.
[17:39:35] <goddard> saving errors
[17:39:36] <biberu> usually you don't need to save everything, you just make the error descriptive enough for the log
[17:39:53] <goddard> but i wont know what the error is sometimes
[17:40:06] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 250 seconds)
[17:40:15] <biberu> time for another "why" :)
[17:40:36] <goddard> because i don't have unlimited time to write error handlers
[17:40:41] <biberu> (phone)
[17:41:24] *** Quits: vit (~vit@chello085216193138.chello.sk) (Ping timeout: 250 seconds)
[17:46:27] *** Quits: goddard (~goddard@user/goddard) (Ping timeout: 240 seconds)
[17:47:20] *** Joins: goddard (~goddard@user/goddard)
[17:48:42] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[17:50:01] *** Quits: travisghansen (~travisgha@192.74.130.86) (Ping timeout: 248 seconds)
[17:52:05] *** Joins: travisghansen (~travisgha@192.74.130.86)
[17:56:29] <arash> Hello, I want to remove first digit from a int from left side, how can i do that? for example in this int 0123456789 I want to remove 0 _only if first left digit is 0_
[18:01:41] <olle> substr?
[18:01:57] <olle> Also, that's not an int, it's a string
[18:02:32] <s17> you could run it through a integer filter
[18:03:55] <Naktibalda> $str = preg_replace('/^0/', '', $str);
[18:04:39] <s17> :)
[18:04:46] <biberu> ltrim
[18:05:35] <Naktibalda> what if it starts with 00 ?
[18:14:29] <goddard> whats a good alternative to serialize that always works
[18:15:19] <Naktibalda> goddard: for logging?
[18:15:31] <goddard> ya
[18:16:28] <olle> json_encode?
[18:16:32] <olle> dunno about "always"
[18:16:45] <olle> otherwise, __toString.
[18:17:08] <Naktibalda> what error do you get from serialize?
[18:23:34] <AllenJB> Note that serialization isn't guaranteed to give you the same exact state as when the error occurred because state may be changed upon deserialization (eg. by __sleep() / __wakeup(), or because classes are no longer available / not exactly the same)
[18:23:39] *** Quits: Akimb (~Akimb@82-135-197-171.static.zebra.lt) (Read error: Connection reset by peer)
[18:32:28] <goddard> Naktibalda: cannot serialize closure
[18:32:57] <__adrian> y, you can't serialize closures or resources (or objects that contain them, like PDO)
[18:33:33] <__adrian> the solution is to not do that. use  __serialize()  to return only the properties that you want to serialize (and are serializable).
[18:35:07] <biberu> still on the phone here, but careful with serializing e.g. pii or other sensitive data
[18:43:11] <znf> kind of weird question - but anyone knows if environment variables present while running php-fpm would be inherited by a binary executed with shell_exec() ?
[18:43:28] <__adrian> no
[18:43:53] <znf> hmm, damn
[18:44:01] <__adrian> very intentional  ;)
[18:44:18] <znf> yeah, tought so
[18:46:03] <znf> I'm also assuming that shell_exec('env_var=stuff /path/to/binary') works as expected?
[18:46:19] <__adrian> y
[18:46:48] <znf> sorry I'm asking dumb question I could check for myself, I'm tinkering with something while I'm away from my PC, and I'm on a lowly laptop from 2011 with a crappy screen resolution and it's so crowded to do anything on this
[18:46:55] <__adrian> aside: note also that if you need/expect a particular shell (e.g., bash) you might do well to run that explicitly as well
[18:47:21] <__adrian> questions are only dumb if they're insincere
[18:47:35] <znf> I don't, but that's good to know
[18:47:53] *** Joins: magla (~gelignite@55d45175.access.ecotel.net)
[18:48:39] *** Joins: Rockwood (~Rocky@user/rocky)
[18:51:45] *** Joins: Rockwood_ (~Rocky@user/rocky)
[18:55:10] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 240 seconds)
[18:55:15] *** Rockwood_ is now known as Rockwood
[18:55:53] *** Joins: gp5st (~gp5st@pool-72-77-44-213.pitbpa.fios.verizon.net)
[19:08:00] *** Quits: poebel (~poebel@x4db6969b.dyn.telefonica.de) (Changing host)
[19:08:00] *** Joins: poebel (~poebel@user/poebel)
[19:09:43] *** Quits: poebel (~poebel@user/poebel) (Quit: Leaving)
[19:10:01] *** Joins: poebel (~poebel@user/poebel)
[19:17:28] *** Joins: Akimb (~Akimb@86.100.13.100)
[19:20:07] *** Quits: lord4163 (~lord4163@90-230-194-205-no86.tbcn.telia.com) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[19:20:14] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[19:23:08] *** Joins: lord4163 (~lord4163@90-230-194-205-no86.tbcn.telia.com)
[19:25:57] <goddard> i guess the only option is a bad option like json_encode or something
[19:26:15] <goddard> otherwise you need to setup complex checking logic that is not worth the hassle
[19:27:33] *** Quits: goddard (~goddard@user/goddard) (Quit: WeeChat 2.8)
[19:32:09] *** Joins: goddard (~goddard@user/goddard)
[19:32:22] *** Quits: poebel (~poebel@user/poebel) (Read error: Connection reset by peer)
[19:34:35] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[19:38:34] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:41:43] *** Quits: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::3f1) (Ping timeout: 252 seconds)
[19:43:05] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 244 seconds)
[19:46:51] <Rockwood> in what?
[19:47:16] <Rockwood> sorry i just logged here so don't know what was the question?
[19:49:43] <__adrian> question was answered
[19:50:19] <__adrian> though i disagree with the conclusion that json_encode is a "bad option" or that logic that checks what you're trying to encode is "not worth the hassle"
[19:51:17] <Naktibalda> json_encode has issues with binary/non-utf8 data
[19:54:24] <Rockwood> ah okay
[19:54:32] <Rockwood> __adrian, hi how are you sir?
[19:54:45] <Rockwood> again i faced fever
[19:54:59] <Rockwood> dammit covid makes me crazy
[19:56:09] <Rockwood> i faced fever many times in in between six months
[19:56:44] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[19:57:12] *** Joins: Simplar (~Simplar@188.163.93.118)
[19:58:04] <Simplar> I have stdClass object and have one of its keys as a string in a variable. How do I access that key in stdClass? Thing like $myStdClassVariable->$someKeyInStdClassStoredHereAsAString doesn't want to compile
[19:58:04] *** Joins: Akimb (~Akimb@86.100.13.100)
[19:58:26] <Byteflux> Unless json_encode() is not compliant with spec, it shouldn't have issues with any Unicode encoding
[19:58:37] <Byteflux> So it shouldn't be limited to just UTF-8, but certainly limited to unicode
[19:59:12] <Byteflux> But yeah definitely not an ideal format for binary data, even if it can store it no problem, it's not efficient.
[19:59:50] <Simplar> $myStdClassVariable->properties[$someKeyInStdClassStoredHereAsAString] ?
[20:00:09] *** Joins: coder7of9 (~coder7of9@mail.cvage.ca)
[20:03:06] <Byteflux> $obj->$var should work with exception. in exceptional cases you may need something like $obj->{$var[0]}
[20:03:17] *** Parts: coder7of9 (~coder7of9@mail.cvage.ca) ()
[20:03:30] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[20:03:46] <Byteflux> But also could avoid using stdClass in general for something like this.
[20:05:50] <Byteflux> If this is from json_decode() for example, you'd do $arr = json_decode($str, true); to get an array instead of a stdClass.
[20:10:28] *** Quits: olle (~olle@p5785bfee.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[20:17:17] <Simplar> Byteflux: thanks!
[20:18:12] <biberu> goddard: sorry, was away for a while there. why does it take so much time to write error handlers? and can't you log the problem where it happened? presumably you'd have what you need for an informative message there?
[20:18:14] <__adrian> Byteflux: php's json_* functions require utf-8
[20:18:49] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[20:18:53] <__adrian> but also, "unicode" doesn't mean it would support arbitrary binary data. quite the opposite.
[20:18:55] <Byteflux> __adrian: meh, that's fine either way. You can go from/to any unicode encoding <-> UTF-8
[20:19:26] <__adrian> Simplar: define "doesn't want to compile"
[20:19:37] <__adrian> what's the error?
[20:20:06] <Simplar> @__adrian: I already fixed that; The error was Error: Cannot use object of type stdClass as array
[20:20:22] <Rockwood> Simplar, clean message
[20:20:31] <Simplar> True, which is why I fixed it
[20:20:35] <__adrian> ah, so you were doing $stdClass[$property] (not $stdClass->$property)
[20:20:45] <Simplar> Yes
[20:21:01] <Simplar> I actually used it in this piece of Laravel code: https://paste.laravel.io/1f0fb109-9e48-4225-8cd5-6c7a1a7d3afc
[20:21:03] <Rockwood> nice
[20:21:09] <Simplar> It's a short but pretty funny one
[20:21:15] <Simplar> I'm sure it's miserable
[20:23:43] <Byteflux> Seems like a poorly designed table but also not seeing why this isn't using models either.
[20:24:32] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[20:25:08] <Simplar> Any *real* point of using models?
[20:25:25] <Simplar> I just want to return a collection of data to the frontend on React
[20:25:27] <Byteflux> It's idiomatic.
[20:28:56] <Byteflux> Also depending on $this->locale_list and the `project_locales` table, it might be better to remove the `project_locales` query out of the loop and either grab them all and filter from code or create a `WHERE locale IN (..., ...)` clause from $this->locale_list
[20:29:31] <Byteflux> Same with the `project_id` condition.
[20:30:31] <Byteflux> But I think models would've probably done this for you.
[20:32:00] <Simplar> Byteflux: $this->locale_list is an array of active language codes ('en','ru', etc.)
[20:32:04] *** Quits: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net) (Remote host closed the connection)
[20:32:51] <Byteflux> Simplar: Right, and instead of doing `$nProjects * $nLocales` number of queries, you could do it in 1
[20:33:24] <Simplar> project_locales table has columns project_id (constrained with id in projects table), locale (one of the locales from $this->locale_list), and all columns from $this->localized_fields
[20:34:29] *** Quits: guidoc (~guido@151.35.23.92) (Read error: Connection reset by peer)
[20:34:34] *** Joins: vit (~vit@chello085216193138.chello.sk)
[20:35:10] <Byteflux> The IO overhead of multiple queries is likely going to cost more than a single query with minor filtering in code. Unless this is some in-memory database (doubt).
[20:38:34] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[20:38:49] *** Joins: guidoc (~guido@151.35.34.120)
[20:48:11] <Byteflux> Simplar: In your example, it seems you are paging up to 20 projects. With 2 locales, you're doing 40 queries to project_locales, with 3, that's 60 queries. Something like the following brings it down to 1:
[20:48:14] <Byteflux> SELECT project_id, locale, ... FROM project_locales WHERE project_id IN (1, 2, 3, ...) AND locale IN ('en', 'ru', ...)
[20:50:19] <Byteflux> The CPU cost of massaging these results is almost certainly going to be cheaper than the IO cost of doing 40-60 queries.
[20:51:19] *** Joins: genom (~g@37.214.77.199)
[20:51:53] *** Joins: junktext (~junktext@109.201.152.169)
[20:53:01] *** Joins: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net)
[20:57:37] *** Quits: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net) (Ping timeout: 252 seconds)
[20:59:49] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 252 seconds)
[21:00:48] <goddard> biberu: because the entire system consists of a 100 controllers with probably 20 or 30 endpoints and then 100s of models and an existing way of doing things I have to adapt to be somewhat usable.
[21:06:48] *** Quits: MCMiic (~mcmic@63.120.199.77.rev.sfr.net) (Quit: Konversation terminated!)
[21:08:47] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[21:15:27] *** Joins: Stanley (~stanley@d162-156-50-3.bchsia.telus.net)
[21:37:36] *** Joins: fandre1986 (~fandre198@178-36-241-155.adsl.inetia.pl)
[21:44:53] <biberu> goddard: ah, and now you need to introduce logging?
[21:48:36] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[21:53:17] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 244 seconds)
[21:53:19] <Rockwood> biberu, o/ h r u?
[21:53:26] <biberu> hello Rockwood :)
[21:53:41] <Rockwood> whts going on today?
[21:53:48] <biberu> work work, money money
[21:55:00] <Rockwood> yeah gr8 awesome
[21:55:16] <Rockwood> i am coding coding coding :D
[21:55:26] <Rockwood> without any charge
[21:57:37] <biberu> how's the project going Rockwood?
[21:57:59] <Rockwood> just i am working hard from tonight
[21:58:06] <Rockwood> just back from fever issue
[21:58:23] <Rockwood> still having highly weakness
[21:58:42] <Rockwood> after more than 7 days
[22:01:06] <biberu> ouch, hope you feel better soon
[22:02:30] <da_wunder> first day at work today, after six week summer vacation - basically whole day was just going through emails and catching up...
[22:02:47] *** Joins: dlundgren_ (~dlundgren@utm1.ctic-inc.com)
[22:03:44] *** Joins: noobiewan (~noobiewan@modemcable116.25-81-70.mc.videotron.ca)
[22:05:18] *** Quits: dlundgren (~dlundgren@75-9-109-251.lightspeed.milwwi.sbcglobal.net) (Ping timeout: 250 seconds)
[22:05:19] *** dlundgren_ is now known as dlundgren
[22:14:48] <Rockwood> da_wunder, you are from where?
[22:14:54] <Rockwood> if you don't mind
[22:16:15] *** Joins: dlundgren_ (~dlundgren@209.203.101.124)
[22:17:08] <biberu> wunderland?
[22:17:34] *** Quits: dlundgren (~dlundgren@utm1.ctic-inc.com) (Ping timeout: 244 seconds)
[22:17:34] *** dlundgren_ is now known as dlundgren
[22:22:25] <da_wunder> biberu: ?
[22:22:57] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[22:23:48] <biberu> da_wunder: just joking with Rockwood
[22:24:25] <Rockwood> why not from Rockland :D
[22:25:46] <da_wunder> biberu: oh, ok - I don't see that nick messages - so I just think that you was referring my nick or something
[22:27:49] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 252 seconds)
[22:28:39] <biberu> da_wunder: it was because Rockwood was asking were you were from a few lines up
[22:29:19] *** Joins: Akimb (~Akimb@86.100.13.100)
[22:29:48] <Rockwood> da_wunder, you country name
[22:29:50] <Rockwood> your
[22:31:44] <da_wunder> mostly just at home and friends summer cottages and also went to Mariehamn for 1.5week - we planned to go to Rika just like last summer, but covid messed that up
[22:43:17] *** Joins: mh_le (~Mads@user/mh-le/x-4465771)
[22:44:19] <mh_le> where do I find the .ini file where I set how much memory web php scripts use?
[22:45:19] <biberu> mh_le: phpinfo should tell you
[22:45:27] <da_wunder> mh_le: eg. create simple info.php with content like `<?php phpinfo();` then open that file with your browser and see what ini file you're using
[22:46:19] <da_wunder> mh_le: and don't let that file live long time, it will give potential leads for attackers
[22:46:59] <da_wunder> mh_le: and also note that webserver and cli php might use different ini files
[22:47:21] <mh_le> right it's the webserver php ini I'm looking for
[22:48:13] <da_wunder> then create that simple info.php to your public web directory with that content I shared and just open that in your browser
[22:48:51] <mh_le> do I include the quotes?
[22:49:03] <s17> no
[22:49:37] <da_wunder> those are 'backticks' and do not include those - that is just to show you the actual code part easier
[22:51:09] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Ping timeout: 244 seconds)
[22:53:36] <mh_le> do I need to do anything to have the changes I make to the php.ini file take effect?
[22:54:10] <da_wunder> mh_le: just make that change to that ini file and refesh that info.php
[22:55:30] <da_wunder> eg. if you're using php-fpm you need to restart that php-fpm service
[22:55:41] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[22:56:18] <biberu> if you're increasing it consider if you can't make the script use less memory instead
[22:56:38] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[22:57:22] <mh_le> it's nextcloud that want's it
[22:57:43] <da_wunder> so what is your current memory limit?
[22:58:53] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[22:59:25] <mh_le> 128M
[22:59:46] <mh_le> but it does not update in the info page when I increase it
[23:00:06] <da_wunder> that should be enough for "normal" web requests - what are you actually doing on that request where you hit that limit
[23:00:40] <da_wunder> and why you don't see that change, you need to restart your php-fpm, or apache, or what ever you're using there
[23:00:54] <mh_le> It's nextcloud that wants the limit to be 512M
[23:01:19] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 250 seconds)
[23:01:57] <mh_le> I set memory_limit = 512M in php.ini but that page still says it's set to 128M
[23:02:09] <goddard> sudo service apache2 restart
[23:02:28] <__adrian> mh_le: "da_wunder> and why you don't see that change, you need to restart your php-fpm, or apache, or what ever you're using there"
[23:03:27] <mh_le> I did restart apache
[23:03:40] <goddard> then you didn't edit the correct php ini file
[23:03:44] <__adrian> then you either edited the wrong ini file, or there's an override.
[23:04:02] <da_wunder> or you're not using apache
[23:04:06] <__adrian> look at any ini files in the "scan this directory ..." directory
[23:04:35] <biberu> mh_le: are you using mod_php or php-fpm?
[23:04:47] <mh_le> fpm
[23:05:16] <goddard> php -i
[23:05:20] <goddard> phpinfo();
[23:05:27] <goddard> find php ini config
[23:05:45] <biberu> mh_le: did you restart fpm?
[23:05:48] <goddard> "Loaded Configuration File"
[23:06:42] <goddard> php -i | grep "Loaded Configuration File"
[23:06:46] <__adrian> no
[23:06:57] <goddard> oh cli
[23:06:58] <mh_le> ah!
[23:07:02] <__adrian> they're already looking at phpinfo() in the browser, as they should
[23:07:05] <goddard> thats the cli version
[23:07:48] <goddard> can you send phpinfo(); to php to execute on the std?
[23:07:57] <goddard> never tried that
[23:08:11] <mh_le> thanks :D
[23:09:23] <AllenJB> You can also use "php --ini" on the cli to show ini files
[23:10:22] <goddard> oh you can php -r "phpinfo();" | grep "Loaded Configuration File"
[23:10:26] <goddard> but still CLI version
[23:10:33] <goddard> needs to go through apache probably
[23:17:35] <biberu> php-fpm -i?
[23:24:54] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[23:25:27] *** Joins: semeion (~semeion@user/semeion)
[23:25:30] *** Joins: deksar (~deksar@user/deksar)
[23:43:43] <Rockwood> biberu, good night
[23:43:47] <Rockwood> lol
[23:44:08] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[23:46:34] *** Quits: guidoc (~guido@151.35.34.120) (Quit: WeeChat 3.2)
[23:51:42] *** Quits: semeion (~semeion@user/semeion) (Read error: Connection reset by peer)
[23:52:11] *** Joins: semeion (~semeion@user/semeion)
[23:59:07] *** Quits: gp5st (~gp5st@pool-72-77-44-213.pitbpa.fios.verizon.net) (Ping timeout: 252 seconds)
