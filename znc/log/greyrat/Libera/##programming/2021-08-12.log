[00:00:05] <vdamewood> DPA: Not, it's actually fairly cut and dry. Output of the translation process isn't covered since it's not a derivative work. Things like the _start code getting included in does count and needs an exception.
[00:00:13] <vdamewood> s/Not,/No,/
[00:00:25] <webnet4> https://www.gnu.org/licenses/gcc-exception-3.1.en.html
[00:00:26] <bayaz> Title: GCC Runtime Library Exception - GNU Project - Free Software Foundation 
[00:01:07] <vdamewood> DPA: And the reason the exception exists for the _start code is because there actually is a bit of pre-existing code, in GCC that gets included in the final executable.
[00:01:22] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[00:03:54] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[00:04:50] <deniska> vdamewood: and also doing N -> –ò, A -> –î and other crimes :)
[00:05:31] <vdamewood> mawk: Oh yeah, nice.
[00:06:15] <vdamewood> deniska: Ever see W -> –®?
[00:06:37] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[00:06:39] <deniska> vdamewood: oh, I've done it myself
[00:07:10] <deniska> there's an old "it's time to reinstall —àindo—às" meme around here :)
[00:07:28] <deniska> actually vocalized as "shindoshs"
[00:08:08] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[00:08:44] <vdamewood> That's kind of funny.
[00:09:17] *** Quits: ahungry (~user@99-40-9-245.lightspeed.livnmi.sbcglobal.net) (Ping timeout: 245 seconds)
[00:09:22] <vdamewood> For some reason, this makes me wonder how Japanese is Cyrilicized.
[00:09:35] <DPA> Why don't they just license the _start code / the code containing it, in a different, gpl-compatible way, then? Why add an exception, that seams more complicated?
[00:09:54] <webnet4> theres a wholllle bunch of libs behind the scnes
[00:10:16] <webnet4> libgcc, libstdcxx,  then when you pass -static switch
[00:10:24] <vdamewood> DPA: Because they don't want that, they only want to grant this one specific exception.
[00:10:39] <webnet4> is libm covered?
[00:10:51] <vdamewood> libm is part of glibc.
[00:11:03] *** Quits: kikijiki (~Thunderbi@user/kikijiki) (Quit: kikijiki)
[00:11:17] <vdamewood> (so, no, libm is LGPL)
[00:11:22] *** Quits: elnavigator (~elnavigat@105.196.130.195) (Ping timeout: 245 seconds)
[00:12:03] <vdamewood> DPA: Granting a permissive license would, for example, allow a proprietary compiler vendor to copy the stup into their toolchain to be included in their clients' code.
[00:12:16] <vdamewood> stub*
[00:13:00] <DPA> Oh, I see. I didn't think about that.
[00:13:22] *** Joins: elnavigator (~elnavigat@105.196.130.195)
[00:15:07] *** Quits: jasonridesabike (~jason@190.104.119.246) (Ping timeout: 245 seconds)
[00:17:04] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[00:17:56] *** Quits: user51 (~user51@176.228.90.248) (Quit: leaving)
[00:19:47] *** Quits: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com) (Ping timeout: 252 seconds)
[00:20:15] <d3x0r> yay - dispelling FUD about GPL 
[00:20:42] *** Quits: ircseeker3 (~nodebot@108.62.52.153) (Ping timeout: 256 seconds)
[00:22:37] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:7c3f:c13a:8afa:72f9)
[00:27:57] *** Quits: magla (~gelignite@55d48471.access.ecotel.net) (Quit: Stay safe!)
[00:29:48] <Quietwalker> I like the GPL, but I still have problems when the EFF was trying to push the affero license.
[00:31:48] <Quietwalker> If I remember right, they wanted to expand the source code access right to users of a networked service.  So like if you wrote a webapp, folks could ask for the source code if they can hit a page.
[00:32:07] <Quietwalker> which is troubling for businesses and was never going to be popular.
[00:32:54] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:ac37:8c1d:27ed:668b)
[00:33:36] <webnet4> yeah its too difficult for nvidia to con people if they use agpl
[00:33:38] *** Joins: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:9882:5d69:12df:2a8c)
[00:34:20] *** Joins: jasonridesabike (~jason@190.104.119.246)
[00:36:45] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[00:37:35] *** Joins: Izem (~Izem@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca)
[00:38:13] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 244 seconds)
[00:39:35] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[00:40:50] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[00:41:02] <Quietwalker> Well, it's difficult for ... most folks.
[00:41:14] <Quietwalker> that's why no one who runs a site uses AGPL
[00:42:35] <webnet4> yeah open up a .js file from pretty much any website, its not human readable
[00:42:48] *** Quits: scabby_ (~scabby@user/scabootssca) (Ping timeout: 256 seconds)
[00:43:31] <webnet4> its almost like they're afraid of something
[00:43:51] <Quietwalker> also, agpl was so poorly written, they reached too far, far too poorly.  It's like they didn't include both lawyers and hackers in the same room at the same time.
[00:44:42] <Izem> you ever wonder why js is so popular is stuff should be really done server side?
[00:44:54] <Izem> how much js do you need? 
[00:45:01] <Izem> s/is/if/
[00:45:05] *** Quits: Haxxa (~Haxxa@122-199-44-36.ip4.superloop.com) (Quit: Haxxa flies away.)
[00:45:17] <Quietwalker> JS is probably popular because it's self selective.
[00:45:19] <webnet4> seventy five thousand octets of JS plz
[00:45:44] <oldlaptop> webnet4: A major reason for that nonsense is to reduce the page bloat a little bit. Strip all the whitespace and comments and maybe your seventy five thousand octets are sixty five thousand.
[00:45:46] <anon16_> Quietwalker: can you give examples on poorly-written sections? It seems fine from what I've seen
[00:45:54] *** Quits: paulo (paulo@jujube.ircnow.org) (Remote host closed the connection)
[00:45:54] *** Quits: sandman13 (sandman13@user/sandman13) (Remote host closed the connection)
[00:46:12] <webnet4> compress the file if you're that worried about bandwidth
[00:46:20] <Quietwalker> web designers who make flashy sites end up learning javascript, and then make flashy sites to advertise their flavor of the week javascript framework, almost all of which are oriented towards website building anyway
[00:46:21] <Izem> is that supported?
[00:46:24] <oldlaptop> Well, that's what they're doing.
[00:46:24] <Izem> compressed js?
[00:46:42] <anon16_> oldlaptop: most web severs gzip the output, so this isn't the reason
[00:46:47] <oldlaptop> Izem: Most HTTP servers and clients have supported transparent gzip compression for donkey's years.
[00:46:54] <oldlaptop> anon16_: Yes it is.
[00:46:57] <Quietwalker> anon16: Sure.  You only have to share the code if you as the site owner, have modified it.  So you have someone else modify the code, provide the source code to you, and you run it without having to offer source.
[00:47:02] <oldlaptop> Not *the* reason, but an important reason.
[00:47:09] <jeaye> Izem: most JS is gzipped over the wire.
[00:47:23] <jeaye> It's done automatically by the HTTP server/CDN.
[00:47:23] <Izem> "the wire" ?
[00:47:24] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[00:47:32] <Izem> oh ok
[00:47:57] <oldlaptop> transparent gzip compression is not actually as common as it should be, because of an overreaction of sorts: gzipping dynamically-generated content is dangerous because it can be used to attack TLS encryption.
[00:48:22] <oldlaptop> This doesn't apply to static content, like most js and css junk, but some FUD still rubs off on it.
[00:48:40] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[00:48:47] <jeaye> Easily seen in the Network tab of your browser. Refresh the page and see the requests. Many of the requests will have a download size which is much smaller than the actual file size.
[00:48:57] <jeaye> This is due to compression in transit.
[00:48:58] <oldlaptop> in any case, the same file with all the whitespace and comments stripped out is going to be a bit smaller even gzipped
[00:49:40] <webnet4> just send me bytecode then
[00:49:48] *** Joins: Crescendo (~Crescendo@user/crescendo)
[00:49:50] <oldlaptop> That's what wasm is for. :|
[00:49:58] <Izem> ha
[00:50:01] <webnet4> web js is not human readable so why pretend
[00:50:35] <webnet4> wasm isn't just bytecode though
[00:50:40] <oldlaptop> It's often not the source code as such either; the css and js is often generated from something else now
[00:50:53] <Quietwalker> In some cases, yeah.
[00:50:55] <Quietwalker> Depends on the framework
[00:51:08] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Quit: Leaving.)
[00:51:13] <DPA> One reason for the unreadability is the bounding of sources. I think with js modules slowly becoming more ppular, 
[00:51:19] <Quietwalker> it used to be popular to do some permutations, SASS, etc.
[00:51:23] <d3x0r> it's just bytecode
[00:51:35] <d3x0r> and management of that (framing of it I guess)
[00:51:41] *** Joins: v0id_ptr (~longlong@user/ptr-frac7al/x-0038398)
[00:51:59] <DPA> .. popular, chances are people start omitting minifications & boundling eventually
[00:52:00] *** Joins: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com)
[00:52:24] <Quietwalker> Side subject; anyone else suffer from tool fatigue?
[00:52:58] *** Joins: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net)
[00:53:56] <Izem> what's that?
[00:54:11] <beaky> what is tol fatigue
[00:54:35] <Quietwalker> Like, I go to check out a framework and they're like "To get started, just fetch OurAwesomeTrendyJavascript with GatorPull, like you normally would.  Then you can preprocess with BeefMeximelt and the whole test suite will run automatically with Slurpee with the Yangztee extensions and it's ready to deploy with miFFle"
[00:54:44] <Quietwalker> and you're like, "What the hell language are you even talking?"
[00:54:52] <DPA> Mostly babel for old IE / edge versions blow up my projects, but I may be able to throw that out soon. Aside from that, I use no frameworks, and almost no libraries. 
[00:55:11] <cis> If you're sick of things changing in software, you chose the wrong profession.
[00:55:17] <Quietwalker> Hah, it's not htat.
[00:55:17] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[00:55:23] <anon16_> Quietwalker: I think this is just a webdev thing
[00:55:51] <Quietwalker> It's just it's stressful to have to learn 3-4 tools, configure, and install them just to pull 30k of javascript to embed in a website
[00:56:14] <oldlaptop> One solution to this is to throw out all the garbage and build a half-decent website instead.
[00:56:21] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[00:56:36] *** Quits: v0id_ptr (~longlong@user/ptr-frac7al/x-0038398) (Ping timeout: 268 seconds)
[00:56:57] <Izem> guess I will have to take out the manager
[00:58:14] *** Joins: vysn (~vysn@user/vysn)
[00:58:27] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[00:58:40] <amahl> can a website exist in 2021 without even one line of javascript?
[00:58:48] <cis> yes
[00:58:50] <Quietwalker> It's not just webdev.  I think I was looking at some dotnet core thing recently, and rather than install it the normal dotnet core way, they wanted me to grab the module with chocolatey, which, yeah, I get it, microsoft product, but ... 
[00:58:51] <webnet4> easily
[00:58:53] <Quietwalker> *shrugs
[00:59:17] <cis> amahl: it would be limited in terms of features, but you could still make it work
[00:59:46] <Izem> Quietwalker: corporate sdk's? 
[00:59:54] *** Joins: [-0-] (~bomber@user/alexdelarge)
[01:00:04] <anon16_> Quietwalker: You will probably love low-level/embedded programming then
[01:00:10] <Izem> I got that feeling trying to learn winrt
[01:00:16] <webnet4> dynamically changing the layout is not so easy though
[01:00:25] <Izem> it's in embedded too ...
[01:00:37] *** Quits: humky (~humky@user/humky) (Quit: Leaving)
[01:00:41] <Izem> especially becuase you are now dependent on 3rd party programs
[01:00:44] *** Parts: [-0-] (~bomber@user/alexdelarge) ()
[01:00:49] <cis> webnet4: you could get pretty far with CSS
[01:01:03] <DPA> You could use web components (custom elements and shadow dom). Make a small loader for the components (Like I did for my IRC client https://github.com/Daniel-Abrecht/DPA-IRC). After that, just don't use any frameworks & libraries, the browser APIs are good enough for almost everything.
[01:01:03] <DPA> Also, make sure to learn to decouple components using custom events. With all that, you'll never need to change your app again, nor need (and shouldn't) ever use any libraries.
[01:01:04] <cis> it's the other functionality like dynamic requests that would be lacking
[01:01:14] <Izem> embedded seems to be worse for tool development idk
[01:01:21] <jinsun> Quietwalker: I get stressed about those things too, mainly because I'm on windows and I know that installing those things will dump files all over the place and I'll never be able to remove them completely
[01:01:25] <webnet4> can you make a collapsing comment box with css?
[01:01:47] <cis> webnet4: <details>
[01:01:48] <Izem> jinsun: I wonder if this is why folks use virtualization as a dev solution :P
[01:02:36] <jinsun>  if I'm on linux and it is provided by the distro package manager then it is cool
[01:02:55] *** Quits: webnet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[01:03:07] *** Joins: webnet4 (~0x100@32.211.211.39)
[01:03:30] <Izem> it's time for a new graphics stack
[01:03:36] <webnet4> nevermind, i just realized you could do it by refreshing page. but that will eat up resources
[01:03:41] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[01:04:07] <Izem> changing the OS platform will take longer because new tools are also needed
[01:04:44] <cis> any actions would have to be done by a link that resulted in a new page
[01:04:59] *** Quits: aradesh (~aradesh@user/aradesh) (Ping timeout: 252 seconds)
[01:05:23] *** Joins: alycidyne (~kova@91-160-172-214.subs.proxad.net)
[01:05:23] <cis> you could make something like craigslist (but still, missing features) with zero javascript
[01:05:46] <webnet4> i don't know if there are any features you can't implement
[01:05:56] <webnet4> unless you have strict low latency requirements
[01:06:27] <cis> pretty much everything in the javascript web API you could not implement
[01:06:34] <webnet4> or you want crazy things like trails on your mouse cursor
[01:06:36] <cis> there are a bunch of features there that have no html equivalent
[01:06:37] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[01:06:43] <alycidyne> Hello, on the subject of array parameter passing... what if instead *everything* were pass by value in a language? i.e. array parameters would be copied, and you would have to pass an explicit pointer to an array instead?
[01:06:45] *** Joins: paulo (paulo@jujube.ircnow.org)
[01:06:45] <cis> but, for a good example of a javascript-less site, check https://sourcehut.org/
[01:06:46] <bayaz> Title: sourcehut - the hacker's forge 
[01:06:48] <jinsun> Izem: ya virtualization sort of solves that, but it comes with its own pains
[01:07:06] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[01:07:10] *** Joins: sandman13 (sandman13@user/sandman13)
[01:07:17] <webnet4> this is a web site, not just plain static HTML
[01:07:24] *** Joins: aradesh (~aradesh@user/aradesh)
[01:07:28] <webnet4> or i thought it was anyway
[01:07:59] <Izem> alycidyne: I'm quite sure that some languages have done this
[01:08:08] <Izem> they are in the dustbin of history now
[01:08:12] <cis> there aren't any <script> elements on that page
[01:08:34] *** Joins: exvicesindaco_ (~exvicio@37.161.6.252)
[01:08:44] <alycidyne> Izem: okay, have any examples in mind?
[01:09:15] *** Quits: paulo (paulo@jujube.ircnow.org) (Client Quit)
[01:09:22] <Izem> not really it's just that I've come accross it at times, let me see if I can find one
[01:11:24] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Ping timeout: 268 seconds)
[01:11:32] *** exvicesindaco_ is now known as exvicesindaco
[01:12:54] *** Joins: paulo (paulo@paulo.jujube.ircnow.org)
[01:13:58] <jinsun>  c++ does that I think, if you forget that C arrays also allowed and just use std::array
[01:14:21] *** Joins: paulo_ (paulo@paulo.jujube.ircnow.org)
[01:14:33] *** Quits: paulo_ (paulo@paulo.jujube.ircnow.org) (Client Quit)
[01:14:41] *** Joins: pavonia (~user@user/siracusa)
[01:14:56] <Izem> alycidyne: don't think I found it but this may be related https://en.wikipedia.org/wiki/Simula#Call_by_name 
[01:14:57] <bayaz> Title: Simula - Wikipedia 
[01:15:06] *** paulo is now known as paulo_
[01:15:07] *** Quits: elnavigator (~elnavigat@105.196.130.195) (Ping timeout: 268 seconds)
[01:15:09] <Izem> also see the beta language
[01:15:15] *** paulo_ is now known as paulo
[01:15:18] <d3x0r> javascriptless? :) that's not me... 
[01:15:26] <d3x0r> <body> <script type="module"></body>
[01:16:05] <Caffeinated> clap clap clap
[01:16:44] <d3x0r> next you're gonna say websocketless :)
[01:17:09] <Quietwalker> Ah, btw, for folks interested in some issues with the AGPL referenced above, I googled around on my lunch break and found this; https://writing.kemitchell.com/2021/01/24/Reading-AGPL.html
[01:17:09] <bayaz> Title: Reading AGPL ‚Äî /dev/lawyer 
[01:17:32] <Quietwalker> It's a short interesting read.
[01:17:50] <pyzozord> "webless" sounds like a legitimate trend that could happen
[01:18:14] <pyzozord> once people will finally get fed up with web as we know it
[01:18:31] <d3x0r> I hope not... there's only so many thiings you can do with a display
[01:20:04] <Quietwalker> Hmm. If we ever get AR as a standard, anywhere, the concept of display and interface is going to have to change radically.  Gesture based stuff that actually works, eye tracking, etc.
[01:20:27] <Quietwalker> even if it's not magical transparent stuff, but just a HUD on a car or something.
[01:20:42] <alycidyne> Quietwalker: and I will probably be the last one to not use it :P
[01:21:45] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 248 seconds)
[01:22:01] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[01:22:15] <alycidyne> Izem: not my favorite language, but thanks for the example
[01:22:29] <Quietwalker> There's already folks claiming they can put super basic pixel-level AR in contact lenses
[01:23:03] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[01:23:06] *** Quits: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com) (Remote host closed the connection)
[01:23:18] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[01:23:26] *** Joins: jinsun (~quassel@user/jinsun)
[01:23:28] *** Joins: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com)
[01:23:58] <Quietwalker> 'Rainbows End" by Vernor Vinge was an interesting look at what a society that fully embraced AR would be like.
[01:24:26] <Quietwalker> it's interesting. He tries to couple the AR/meatspace haptic problem in interesting ways
[01:25:35] <Izem> alycidyne np
[01:26:31] <beaky> wht would a societ that fully embraced programming be like
[01:26:33] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[01:26:37] <paulo> :)
[01:26:44] <webnet4> afaict you can't do anything useful with webasm without some API to call into
[01:26:52] <beaky> like alam kay's vision of the dynabook or whatever vr wonderland thing he was workign on before he retired i think
[01:27:19] <Izem> tldr dynabook
[01:27:32] <d3x0r> https://d3x0r.github.io/space-plasma.js/ ahh - there are 2 canvases...  (takes several seconds to compute the noisemap, I have a overkilled RNG)
[01:27:36] <alycidyne> beaky: it would be a society of mathematicians...
[01:27:59] <alycidyne> beaky: there would be no software industry
[01:28:43] *** Quits: exvicesindaco (~exvicio@37.161.6.252) (Quit: Going offline, see ya! (www.adiirc.com))
[01:29:00] <d3x0r> webnet4 I compiled the C version of the JSOX parser into WASM, then got a object with .stringify(), .parse() on it.... you do need a interface on the JS side, and you ened a interface on the C side with EM_ASM( "//JS code" ) to communicate with the JS side
[01:29:25] <d3x0r> JSOX .parse() has to create a bunch of JS objects, includign like Date and Bignum
[01:29:28] <Quietwalker> Hmm.  There was a thought that as some point in time, some basic concept of programming would be nearly required for folks to get by.  Like, things will be customizable enough that if you don't understand the concept of an expression evaluation for flow control (if, while, etc) that you wouldn't be able to use certain basic products, but ...
[01:29:29] <webnet4> all i see is another way to run JS code
[01:29:33] <webnet4> nothing new
[01:29:39] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[01:29:48] <d3x0r> and induce overhead in copying between JS heap and WASM heap
[01:29:52] <Quietwalker> it seems to me more likely that we'll get clever machine learning that'll intuit what people meant before we get even basic programming concepts as a requirement.
[01:30:13] *** Joins: pulse (~pulse@user/pulse)
[01:30:20] <alycidyne> Quietwalker: so machines will think for us, then
[01:30:22] <d3x0r> jsox.js is just fine - and hella faster than the wasm version :)
[01:30:28] <alycidyne> except those who make the machines ofc
[01:30:39] <alycidyne> aw god, another stratification.
[01:30:55] * alycidyne sighs and just returns to his proglang.
[01:31:03] <d3x0r> it's to support either long running code (neural network decisions) with small results.... or legacy code noone wants to rewrite in JS
[01:31:50] *** Joins: elnavigator (~elnavigat@105.196.130.195)
[01:32:55] <Quietwalker> alycidyne: Almost everything of any significance in human behavior has involved delegation at some level.  We delegate to politicians for our laws, farmers for our food, and so on.  We're very good at accepting the end product without getting involved.
[01:32:56] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[01:34:02] <Izem> meh
[01:34:03] <Quietwalker> alycidyne: I doubt the majority will notice or care if, for example, their targeted ads become well targeted.  That they get an email from a company saying "You shopped with us in the past, have you considered ..."
[01:34:14] <cis> if everyone were a programmer, society would fall to pieces due to laziness
[01:34:17] <webnet4> i mean yeah its useful don't get me wrong there, i just don't like how its sold as some great new next thing
[01:34:23] <Izem> such delegation was forced
[01:34:32] <Izem> cis: yeah probably :P
[01:34:38] <Quietwalker> you can't tell now if the things you're getting fed as content are due to human or machines, or if a combination, how much of either.
[01:34:39] <webnet4> its just a hack on top of the old system
[01:34:49] <d3x0r> as a processor model it's what JVM should have been - without all the required object references
[01:35:14] <d3x0r> well bound arguments in the assembly level, which translate very straight forward to most computing ideas
[01:35:17] *** Quits: Izem (~Izem@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca) (Quit: Going offline, see ya! (www.adiirc.com))
[01:35:37] <d3x0r> it is itself utf8 (which means it doesn't use 0xF8-0xFF bytes)
[01:36:54] <alycidyne> Quietwalker: oh honestly I can see an algorithm suggesting content, I sometimes amuse myself from the predictions, but I already don't browse enough to even be suggested
[01:37:32] *** Quits: anon16_ (~anon16_@user/anon16) (Read error: Connection reset by peer)
[01:47:11] *** Quits: JimmyRustles (Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net) (Ping timeout: 268 seconds)
[01:50:17] <AsenMx> Hello, I know this is not the right channel, but i will ask anyway. Anyone familiar with gitlab CICD deployment to AWS ECS ? I 
[01:52:50] *** Joins: scabootssca_ (~scabby@user/scabootssca)
[01:53:57] *** Quits: snake (~snake@user/snake) (Quit: Namae nado nai, omae to onaji da..)
[01:54:15] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Quit: Leaving)
[01:55:19] <pyzozord> AsenMx: what's the specific question?
[01:55:37] *** Joins: Tazy (~Tazmainia@41.193.169.28)
[01:56:13] <AsenMx> pyzozord, I'm following this guide https://docs.gitlab.com/ee/ci/cloud_deployment/index.html#run-aws-commands-from-gitlab-cicd However I can't figure out how to upload image to ECR and use that image instead. Any idea?
[01:56:14] <bayaz> Title: Cloud deployment | GitLab 
[01:56:55] <Caffeinated> did you know about #gitlab ?
[01:57:38] *** Joins: Pickchea (~private@user/pickchea)
[01:58:00] <AsenMx> Caffeinated, I do and i asked here 2 times today ... 
[01:58:09] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:58:14] <Caffeinated> derp a herp
[01:58:33] *** Quits: Tazmainian (~Tazmainia@41.193.169.28) (Ping timeout: 248 seconds)
[01:59:12] *** Joins: wender (~wender@191.54.95.27)
[01:59:22] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[02:01:21] *** Joins: jaysicks (~jaysicks@178-164-134-171.pool.digikabel.hu)
[02:03:03] *** Quits: wender (~wender@191.54.95.27) (Quit: Leaving)
[02:04:01] <pyzozord> AsenMx: have you tried this? https://docs.aws.amazon.com/AmazonECR/latest/userguide/getting-started-cli.html#cli-push-image
[02:04:03] <bayaz> Title: Using Amazon ECR with the AWS CLI - Amazon ECR 
[02:04:47] <AsenMx> and how to point to use image from ECR in the deploy step?
[02:06:30] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:06:42] *** Quits: alycidyne (~kova@91-160-172-214.subs.proxad.net) (Quit: leaving)
[02:06:57] <pyzozord> It's a whole getting started tutorial, read the whole page
[02:07:36] <Caffeinated> lol
[02:08:32] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[02:08:48] *** Joins: hexfive (~eric@50.35.83.177)
[02:09:23] <AsenMx> not helpful at all. I can build and push my image to AWS ECR the question is how to set it up in gitlab so when i do  template: AWS/Deploy-ECS.gitlab-ci.yml to actually use the image from the AWS ECR 
[02:10:24] <Caffeinated> i expect that's what happens when you ask in the wrong channel?
[02:10:25] <pyzozord> AsenMx: https://about.gitlab.com/blog/2020/12/15/deploy-aws/
[02:10:25] <bayaz> Title: How to deploy to AWS with GitLab 
[02:10:52] <Caffeinated> ...and expect fast food drive-thru type service
[02:11:00] <pyzozord> the channel is right, but the question was missleading
[02:11:09] <pyzozord> s/right/ok/
[02:11:11] <AsenMx> pyzozord, this again doesn't answer my question
[02:11:22] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 245 seconds)
[02:11:52] <AsenMx> To do so, push your image into your ECR repository. Then reference it in your .gitlab-ci.yml file and replace the image path to point to your ECR image  
[02:11:57] <pyzozord> AsenMx: those two tutorials together include starting information on how to set up gitlab cicd, integrate it with aws and use aws cli to deploy to ecr
[02:12:13] <AsenMx> this it kinda says i have to point image path to point ecr image but doesn't explain how
[02:12:32] *** Joins: s0berage (~s0berage@135-23-213-77.cpe.pppoe.ca)
[02:13:11] <pyzozord> AsenMx: do you know how to use docker?
[02:13:14] <AsenMx> pyzozord, i build docker image  and pushed is successfully to ECR now the step is to actually deploy that image to ECS however when i use the template that gitlab provies the image is built on gitlab and the ECS task definition actually point to gitlab url of the image that is IN GITLAB
[02:13:39] <AsenMx> maybe its my english or something i don't know
[02:14:04] <pyzozord> it could be your english it seems to me you are changing your question each time
[02:14:07] *** Quits: mnrmnaugh (~mnrmnaugh@68.162.206.56) (Remote host closed the connection)
[02:14:13] <AsenMx> nah i try to explain it
[02:14:20] <AsenMx> but looks like i have to draw it to you
[02:14:30] *** Joins: mnrmnaugh (~mnrmnaugh@68.162.206.56)
[02:15:09] <jeaye> Keep in mind this is just a channel of people chatting about tech. Anyone helping you is doing so voluntarily, AsenMx.
[02:15:20] <AsenMx> lets make it very very simple question:  How to make this https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/AWS/Deploy-ECS.gitlab-ci.yml to use an ECR image?
[02:15:21] <bayaz> Title: lib/gitlab/ci/templates/AWS/Deploy-ECS.gitlab-ci.yml ¬∑ master ¬∑ GitLab.org / GitLab 
[02:15:22] <jeaye> So we may not have the answers.
[02:15:54] *** Quits: mnrmnaugh (~mnrmnaugh@68.162.206.56) (Remote host closed the connection)
[02:16:02] <AsenMx> jeaye, I understand completely, however do you know docker has absolutely zero value to the topic i'm discussing
[02:16:18] <Caffeinated> wow
[02:16:29] <Caffeinated> would you like fries with that?
[02:16:47] *** Quits: anon16 (~anon16@user/anon16) (Ping timeout: 268 seconds)
[02:17:08] *** Joins: mnrmnaugh (~mnrmnaugh@68.162.206.56)
[02:17:10] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 272 seconds)
[02:17:25] <jeaye> !warn Caffeinated be nice.
[02:17:26] * bayaz warns Caffeinated: be nice.
[02:18:31] *** Joins: anon16 (~anon16@user/anon16)
[02:18:34] *** Quits: mnrmnaugh (~mnrmnaugh@68.162.206.56) (Remote host closed the connection)
[02:19:11] <pyzozord> AsenMx: have you looked at the jobs files this template includes?
[02:19:21] *** Quits: hexfive (~eric@50.35.83.177) (Quit: WeeChat 3.0)
[02:19:23] *** Joins: mnrmnaugh (~mnrmnaugh@68.162.206.56)
[02:20:46] <jeaye> AsenMx: I'd try using the AWS console to find a public URL for your ECR image. Then use that with the image.name value in the yaml.
[02:20:50] <AsenMx> pyzozord, yes i did however I can't understand how to point to a specific url 
[02:21:14] <AsenMx> jeaye, how to use image.name in the yaml? 
[02:21:22] <jeaye> image:
[02:21:26] <jeaye>   name: "url"
[02:21:33] <jeaye> ;)
[02:21:57] <jeaye> You can see the docs on that here: https://docs.gitlab.com/ee/ci/docker/using_docker_images.html
[02:21:58] <bayaz> Title: Run your CI/CD jobs in Docker containers | GitLab 
[02:22:21] *** Joins: Inari (~Pinkishu@p4fe7e9de.dip0.t-ipconnect.de)
[02:22:55] <pyzozord> AsenMx: https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Jobs/Build.gitlab-ci.yml this file has multiple variables you can declare in your file to modify where things will be deployed. Specifically CI_APPLICATION_REPOSITORY, CI_REGISTRY_IMAGE, CI_COMMIT_REF_SLUG https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Jobs/Build.gitlab-ci.yml#L12
[02:22:57] <bayaz> Title: lib/gitlab/ci/templates/Jobs/Build.gitlab-ci.yml ¬∑ master ¬∑ GitLab.org / GitLab 
[02:22:57] <bayaz> Title: lib/gitlab/ci/templates/Jobs/Build.gitlab-ci.yml ¬∑ master ¬∑ GitLab.org / GitLab 
[02:22:58] <AsenMx> jeaye, so you are saying if my yaml looks like this it will work? https://pastebin.com/bKsMMv0Z
[02:23:00] <bayaz> Title: image: name: "url" include: - template: AWS/Deploy-ECS.gitlab-ci.yml - Pastebin.com 
[02:24:05] <pyzozord> No. What?
[02:24:27] <pyzozord> You just mixed up docker yaml with gitlab yaml. Those are two completely separate things.
[02:25:19] <jeaye> I think he wants the gitlab yaml.
[02:25:45] <jeaye> He's trying to run his Gitlab CI with his ECR image, so his gitlab yaml should be pointing at that image.
[02:26:25] <AsenMx> okay okay i will try one more time
[02:26:38] <AsenMx> https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/AWS/Deploy-ECS.gitlab-ci.yml
[02:26:39] <bayaz> Title: lib/gitlab/ci/templates/AWS/Deploy-ECS.gitlab-ci.yml ¬∑ master ¬∑ GitLab.org / GitLab 
[02:27:13] <AsenMx> this actually sets the container image in ECS to be from gitlab itself and i want to be from ECR instead
[02:27:51] *** Joins: Crescendo (~Crescendo@user/crescendo)
[02:28:06] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[02:28:21] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:30:58] <pyzozord> just write your own job instead of using the ECS.gitlab-ci.yml, writing jobs is normal part of workflow in gitlab ci/cd
[02:31:05] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[02:31:05] *** Quits: elnavigator (~elnavigat@105.196.130.195) (Ping timeout: 248 seconds)
[02:32:04] *** Quits: mnrmnaugh (~mnrmnaugh@68.162.206.56) (Quit: Leaving)
[02:32:11] *** Joins: molt (~molt@79.140.150.21)
[02:32:12] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 245 seconds)
[02:32:25] *** Joins: mnrmnaugh (~mnrmnaugh@68.162.206.56)
[02:32:27] <pyzozord> clone that ECS job and modify it use the knoweledge from the first two tutorials I linked
[02:32:33] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[02:32:35] *** Joins: Crescendo (~Crescendo@user/crescendo)
[02:32:49] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[02:33:50] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[02:34:28] *** Quits: molt (~molt@79.140.150.21) (Read error: Connection reset by peer)
[02:35:54] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[02:36:57] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[02:37:14] *** Joins: gamara (~gamara@66-203-186-167.ded.execulink.com)
[02:39:32] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 256 seconds)
[02:39:44] *** Joins: Crescendo (~Crescendo@user/crescendo)
[02:40:27] *** Quits: Narrat (~omnius@p200300df5f0ae58d06ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[02:42:54] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:43:14] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[02:44:07] <AsenMx> jeaye, pyzozord thanks for the help
[02:46:01] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[02:48:46] <Quietwalker> Hmm. I have a REST application that does what rest is supposed to do; it manages data; read, create, update delete data objects in a sql database.  There's multiple types of objects and they have relationships.  
[02:49:36] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[02:49:44] <cis> I'm happy for you.
[02:49:55] <Quietwalker> I created the original project and the test suites, including the functional test suite, and I had to manage the test data, which I did with direct sql calls. Everything is fine. I came back after a few months on another project and a dev has converted it, now the setup is done by calling it's own rest endpoints to set up the data it's about to operate on.
[02:50:16] <cis> I'm less happy now.
[02:50:17] *** Joins: Izem (~Izem@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca)
[02:50:20] <Caffeinated> haha
[02:50:22] <Quietwalker> I'm like ... 
[02:50:28] <Quietwalker> what ... did you think we're testing?
[02:50:37] <Caffeinated> "I'm like"
[02:51:13] <Quietwalker> This is like your boss filling out your boss appreciation survey and then handing it to you just to get the signature; "It's just a formality. Don't worry. I did great."
[02:51:27] *** Joins: mci64 (~mci64@185.242.190.95)
[02:52:15] <Quietwalker> On the other hand, there's a fundamental problem.  The app itself just ends up making the same sort of sql calls.
[02:52:25] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[02:52:32] *** Joins: v0id_ptr (~longlong@user/ptr-frac7al/x-0038398)
[02:52:48] *** Quits: jaysicks (~jaysicks@178-164-134-171.pool.digikabel.hu) (Remote host closed the connection)
[02:53:10] *** Quits: anon16 (~anon16@user/anon16) (Ping timeout: 268 seconds)
[02:53:12] *** Quits: Akuli (~Akuli@87-94-109-27.bb.dnainternet.fi) (Quit: Leaving)
[02:53:18] *** Quits: webnet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[02:53:28] <pyzozord> Quietwalker: that is a perfectly normal phenomenon. Code has inexplainable tendency to rot like this even when not touched at all
[02:53:30] <Quietwalker> and the objects are complex and varied; initially I had around 400 tests, now, 3 version son, we're up to 1700 functional tests, and there's a separate library for the test project
[02:54:14] *** Joins: anon16 (~anon16@user/anon16)
[02:54:22] <Quietwalker> so there's the real chance of that a change could be extremely impractical to fix if we otherwise required - say - each test to require it's own sql setup
[02:54:28] *** Joins: Fluxx (~Fluxx@user/fluxx)
[02:54:50] <Caffeinated> there is no phase adjustment
[02:55:10] <Quietwalker> and as long as the tests themselves are rigorous ... 
[02:55:29] <Quietwalker> well, really what we see is that when someone messes it up, it's not his 5 new tests that fail, it's like, 800 of them.
[02:56:09] <Quietwalker> but I did recoil from it when I saw it.
[02:57:13] *** Quits: v0id_ptr (~longlong@user/ptr-frac7al/x-0038398) (Ping timeout: 248 seconds)
[02:57:17] <pyzozord> 800 tests is quite impressive, I need to check how many I have in my project
[02:57:26] <Quietwalker> and under the covers both the rest app and the test lib use a shared lib that encapsulates the database access anyway... so using the rest endpoint instead isn't ... the worst ...
[02:57:34] <Quietwalker> well these are functional tests;  you need a full set for each version.
[02:58:06] *** Quits: jasonridesabike (~jason@190.104.119.246) (Ping timeout: 268 seconds)
[02:58:11] <Quietwalker> we're on version 3.  Version 1 has ... 500, version 2 has most of those 500 + maybe another 50, etc.
[02:59:01] <Quietwalker> I made some custom ... annotations, what the heck are those called? function tags? method decorators?  so I can mark a test as running for each version or not, and then it just auto-iterates between provided version numbers.
[02:59:02] *** Quits: Tazy (~Tazmainia@41.193.169.28) (Quit: Leaving)
[02:59:22] <Quietwalker> like, as an implicit argument in the backend, since it's just affecting the version identifier for the REST call we're testing.
[03:00:09] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[03:00:21] <Quietwalker> By default it does everything available, you have to tell it what explicitly to include or exclude, but that's only a few hundred tests for new functionality
[03:03:52] *** Quits: jess (~jess@libera/staff/jess) (Ping timeout: 600 seconds)
[03:03:53] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[03:04:06] *** Joins: flynn (~mcbloch@user/flynn)
[03:08:16] * bayaz warns vdamewood: This is a test.
[03:08:44] *** Quits: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net) (Quit: Leaving)
[03:09:42] *** Quits: mci64 (~mci64@185.242.190.95) (Ping timeout: 245 seconds)
[03:10:01] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 248 seconds)
[03:10:38] <Quietwalker> alright. Change in topic.  Got a SQL sproc that takes a user defined table type as an argument. This type is used in a few places. However, the type is changing, adding a new column.  Problem: this breaks existing code, especially in shared environments (qa, uat, etc) so it'd block other development.
[03:10:57] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[03:11:48] <Quietwalker> is there a graceful way to get around this?  I mean, we could duplicate the type with a new name, copy the sprocs, update them to use the new code, and have the new library be the only user of the new type, then once everything's been merged up, rename back and clean up in a separate work effort.
[03:11:52] <Quietwalker> but that sucks
[03:12:31] <Quietwalker> I hesitate to say to make all in flight tickets dependent upon an in-development ticket
[03:12:57] <vdamewood> It's too hot to think.
[03:13:15] <vdamewood> Oh, damn. It's 38C.
[03:13:16] <Quietwalker> either explicitly (by merging in the code so their code/tests work) or just simply blocking until done (at which point they merge in the release branch)
[03:13:18] <Quietwalker> hmm
[03:13:21] <Quietwalker> it's 38C here too
[03:13:31] *** Quits: Inari (~Pinkishu@p4fe7e9de.dip0.t-ipconnect.de) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[03:13:38] <Quietwalker> are you in L.A. county, by any chance?
[03:13:39] <Quietwalker> heh
[03:13:47] <Quietwalker> Here in a warehouse for work, temporarily
[03:13:49] <vdamewood> Nope. Multnomah.
[03:13:53] <Quietwalker> gesundheit.
[03:13:59] <vdamewood> (Portland)
[03:14:06] <Quietwalker> I know
[03:14:10] <Quietwalker> I used to live in hillsboro
[03:14:14] <vdamewood> Oh, okay. Hehehe.
[03:14:24] <Quietwalker> letsee ... apartment was on 1369 carlaby way if I remember right? 
[03:14:27] <Quietwalker> that was a long time ago
[03:14:36] <Quietwalker> Crystal ball room still very popular for swing dance lessons?
[03:14:45] <vdamewood> Yep.
[03:15:09] <Quietwalker> some things never change.
[03:15:17] <vdamewood> I have no idea where that is because Hillsboro decided not to use the same grid everyone else has.
[03:15:58] <Quietwalker> Hah.  It was right down the street from the jones farm intel site... er.. worked for intel
[03:16:15] *** Quits: entuland (~entuland@user/entuland) (Quit: Leaving)
[03:16:17] <vdamewood> JF3 here.
[03:16:33] <vdamewood> The MAX commute on that was brutal.
[03:16:36] <Quietwalker> 26 -> brookwood? -> evergreen, done.
[03:16:53] <Quietwalker> Ah, I never used the light rail
[03:16:58] <pyzozord> 38C? Wow I don't think I ever was in such temperature. I think I'd die there
[03:17:17] <Quietwalker> You know the worst thing? I only went to the JF site once, I spent most of my time in RA
[03:17:23] <Quietwalker> irritating.
[03:17:25] <vdamewood> Well, Also, I live in East Portland.
[03:17:35] <pyzozord> In NL we get 10-25, few days a year might be 27 tops
[03:18:05] <vdamewood> pyzozord: Until June this year, the record high in Portland was 41C. This year we broke it.
[03:18:09] <Quietwalker> I'm currently west of Los Angles, in Ontario, CA.  100F, and I'm in a freakin' warehouse.  Warehouses are NOT temp controlled.
[03:18:27] <Quietwalker> it's a roof to keep off rain, but otherwise, it's pretty much the same inside as outside.
[03:18:30] <pyzozord> that is literally mind boiling 
[03:18:34] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Ping timeout: 258 seconds)
[03:18:43] <vdamewood> The record is now 47.
[03:18:47] *** Joins: edgar-rft (~edgar-rft@109.193.249.223)
[03:19:00] <Quietwalker> my manager's manager is here, and he's in the AC-controlled rejunivation/lactaction room.
[03:19:07] <pyzozord> that is literally double of what I consider too hot
[03:19:08] <Quietwalker> I assume for the AC, not the lactation
[03:19:35] <pyzozord> it doesn't seem safe to go outside in such temperature
[03:19:35] <Quietwalker> but my home is in Round Rock, TX, aka, the desert plaguelands so... I've seen this all before.
[03:19:38] <Quietwalker> still sucks though.
[03:19:40] <vdamewood> pyzozord: Normally, we get 1 or 2 days above 35 each year, and it's usually only 36 or maybe 37.
[03:19:47] <Quietwalker> originally from chicago, I prefer cooler weathre.
[03:20:04] <vdamewood> We're currrently experiencing a heatwave.
[03:20:55] *** Quits: TechTest (uid283215@id-283215.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[03:21:30] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Remote host closed the connection)
[03:21:39] <Quietwalker> Portland used to be like, reliably mid 70's to high 50's any given day, regardless of the time of year.
[03:21:57] <Quietwalker> it'd snow, but it'd melt before it hit the street, you'd see it in shady backyards though, before the sun came up
[03:22:16] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[03:22:49] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[03:24:31] *** Joins: inky_ (~inky@46.36.113.172)
[03:26:33] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[03:28:41] <beaky> nice this whole time there's been a manpage explanin all the color codes one needs for sick console colors https://man7.org/linux/man-pages/man4/console_codes.4.html
[03:28:44] <bayaz> Title: console_codes(4) - Linux manual page 
[03:29:00] <Quietwalker> is this for the ansi colors?
[03:29:17] * oldlaptop cannot resist: the temperature represented by 40C is not "literally double" the temperature represented by 20C, because the temperature represented by 0C is not, in any meaningful sense, zero
[03:29:19] <Quietwalker> like all 8 of them plus bold variants and depending on your terminal emulation more?
[03:29:21] <beaky> yes
[03:29:44] <Quietwalker> yep
[03:29:44] <beaky> at last i can make my hello world program in rust output pretty colors
[03:29:57] <Quietwalker> yeah. I remember making my programs in college output in pretty colors.
[03:30:40] <quartz> I'm trying to understand why this code works for the maximum subarray problem. https://bpa.st/BUPQ   can anyone tell me why they do the check if(sum < 0) on line 9?
[03:30:41] <bayaz> Title: View paste BUPQ 
[03:30:43] <Quietwalker> some text version of a chess game for one assignment.  They showed it off ... "but one student thought that the output wasn't pretty enough, which broke our automated tester, but we fixed it just for him because it was very nice"
[03:30:43] <oldlaptop> the temperature represented by 40C is literally double the temperature represented by something like... what's 150K, -170C or so?
[03:30:46] *** Quits: Burgundy (~yomon@5-12-93-72.residential.rdsnet.ro) (Ping timeout: 268 seconds)
[03:30:55] <oldlaptop> 160K, rather
[03:31:24] <oldlaptop> -113C, wolfram alpha tells me
[03:31:29] <oldlaptop> (silly)
[03:31:49] *** Quits: chomwitt (~chomwitt@ppp-2-85-147-24.home.otenet.gr) (Remote host closed the connection)
[03:31:52] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[03:31:53] <Quietwalker> oldlaptop: So you're saying that 20 isn't exactly double of 10, because you could represent it in hexidecimal and it's not the same relationship when you literally change units or context?
[03:32:15] <oldlaptop> Quietwalker: I'm saying "zero temperature" has a specific meaning, and the temperature denoted by 0C does not fit it
[03:33:29] <oldlaptop> it's not a question of different units; the Kelvin scale uses the same unit as the Celsius scale, in the sense that a temperature difference of one degree Celsius is the same as a temperature difference of one Kelvin
[03:33:30] <Quietwalker> I ... think you're the only one who said zero temperature
[03:33:56] *** Quits: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com) (Ping timeout: 256 seconds)
[03:33:59] <vdamewood> Quietwalker: So?
[03:34:27] <oldlaptop> talking about "double the temperature" is nonsensical without reference to the zero point
[03:34:31] <oldlaptop> which is not 0C
[03:35:04] *** Quits: bpmedley (~bpmedley@69-174-155-1.bltnilaa.metronetinc.net) (Quit: Textual IRC Client: www.textualapp.com)
[03:35:19] <LjL> 40C isn't "twice" 20C except numerically which doesn't relate to the actual temperature at all
[03:35:26] <oldlaptop> "twice as far from the temperature at which my favorite solvent freezes" would be a bit wacky, but much more sensical
[03:35:42] <LjL> it's like assigning a special meaning to a palindrome date. it's kinda fun, but it doesn't make that day *actually* special
[03:35:48] <vdamewood> s/solvent/compound/
[03:36:01] <LjL> s/isn't/is/
[03:36:02] <Quietwalker> Language is contexual, you'd want to assume it was relative to the system of discussion, but even if it wasn't it'd be odd to assume that the norm for any given system is necessarily 0.
[03:36:04] <oldlaptop> well, solvents are compounds
[03:36:11] <dre> reminds me of this: https://www.youtube.com/watch?v=C91gKuxutTU
[03:36:27] <oldlaptop> Quietwalker: Which is why using a temperature scale at which numeric 0 is not zero is so insidious
[03:36:47] <oldlaptop> the assumption that leads people to use is completely wrong
[03:36:47] <Quietwalker> and since the discuss was in Celsius, and he had just provided a numeric value of ... 36-37, someone saying that's  double an acceptable value, 
[03:36:50] <vdamewood> oldlaptop: Yeah, oops. For a second, I thought water wasn't a solvent... but now I think it is.
[03:36:56] <Quietwalker> it's just ... easy to read and obvious.
[03:37:15] <dre> I think "twice as cold" should be 0.5*T (in kelvin)
[03:37:22] <Quietwalker> Language is an exceptionally imprecise construct, after all.
[03:37:28] *** Joins: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com)
[03:37:30] <oldlaptop> Quietwalker: and completely, utterly wrong
[03:37:32] <Quietwalker> it'd take too long to be accurate.
[03:37:36] <oldlaptop> dre: precisely
[03:37:50] <dre> then twice as hot would be 2*T 
[03:38:08] <Quietwalker> I mean, you'd spent all day talking and you still would be unable to describe your personal explicit ontological status as regards a single concept.
[03:38:27] <LjL> if you walk 10km every day and one day you have to walk 20km, you might go "wow, that's twice as long as i usually do" and that would be *physically true*. with temperature, it stops being true if you do as little as change to fahrenheit, so what meaning does it have? "oh, it's higher", that's about it
[03:38:28] <Quietwalker> but you'd probably be able to get 99.99% of it thanks to shared cultural or linguistic overlap
[03:39:25] <Quietwalker> so we very much accept impreciseness, even as it leads to occasional misunderstandings, because there's no brain-to-brain transfer without error and there's no obvious other way to communicate concepts as a pure rather than practical device.
[03:39:39] <Quietwalker> So it's all good.  You can use context from previous statements
[03:40:09] *** Joins: bpmedley (~bpmedley@69-174-155-1.bltnilaa.metronetinc.net)
[03:40:10] <oldlaptop> this is a difference in kind from the usual "but language is imprecise" dodge, as anyone who's attempted to apply the ideal gas law has found out, possibly the hard way
[03:40:13] <Quietwalker> and derive information in the combination of messages rather than each message having to exist as an objective solo.
[03:40:28] <vdamewood> "Hot" is an indication of heat energy in a medium. Going from 20C to 40C isn't double the amount of heat energy. It's an increase of about 6% of the heat energy.
[03:40:54] <Quietwalker> Yep, but hot IS a relative term because it requires a context.
[03:41:00] <vdamewood> Which means the molicuels in the medium are bouncing around at 106% the speed.
[03:41:55] <Quietwalker> it's hot out : "The temp is higher than it normally is" or "This is a temp that is uncomfortable to me" or "this is a temp that is uncomfortable to what I consider the average person" - all valid definitions
[03:42:19] <Quietwalker> and you can't be more precise until you get additional information, like knowing the person really well.
[03:42:37] <Quietwalker> but unless it matters, it doesn't ... well ... matter enough to spend effort on.
[03:43:03] <Quietwalker> though I do enjoy discussing philosophical semantics :)
[03:43:45] <oldlaptop> I guess the laws of physics are a philosophical construct.
[03:43:51] <vdamewood> So, how much otter is 20C than -5C?
[03:43:59] <vdamewood> s/otter/hotter/?
[03:44:29] <pyzozord> "how much otter" is always the better question, no matter what context
[03:44:42] <Joanna> Hi does anyone have an interest in free pascal or Lazarus ide ? If so I invite you to #fpc and #lazarus
[03:44:47] <Caffeinated> how many otters is that?
[03:45:07] <vdamewood> Caffeinated: I have no idea how many are in the otter scale.
[03:45:30] <Caffeinated> then what we need is a molecular otter counter
[03:45:48] <vdamewood> How big is a mole of otters?
[03:45:55] <vdamewood> or a mole of moles, for that matter?
[03:46:24] <Caffeinated> MM/L
[03:46:25] <oldlaptop> the xkcd lunatic worked that one out, IIRC (it's planetary scale, very unpleasant for the moles, or otters)
[03:46:56] *** Joins: snake (~snake@user/snake)
[03:46:58] <vdamewood> xkcd lunatic? He has a name. It's Randal.
[03:47:18] <oldlaptop> with one l?!
[03:47:28] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[03:47:38] <vdamewood> Nope. Two.
[03:47:39] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[03:47:40] <oldlaptop> (it rings a much louder bell with two)
[03:47:44] <vdamewood> Randall
[03:48:14] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Read error: Connection reset by peer)
[03:48:19] <vdamewood> Randall Munroe is one day older than my cousin. Cool!
[03:48:25] *** Joins: MrMobius (~MrMobius@208.58.206.154)
[03:49:25] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[03:52:10] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Read error: Connection reset by peer)
[03:52:54] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[03:54:40] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Read error: Connection reset by peer)
[03:54:49] *** Quits: edgar-rft (~edgar-rft@109.193.249.223) (Ping timeout: 248 seconds)
[03:55:17] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[03:55:27] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[03:57:43] <vdamewood> So hot!
[03:58:08] *** Quits: sidy (~sidy@user/sidy) (Read error: Connection reset by peer)
[04:00:28] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[04:00:57] <vdamewood> Must melt in a puddle.
[04:01:20] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Read error: Connection reset by peer)
[04:02:15] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[04:02:55] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Read error: Connection reset by peer)
[04:05:23] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[04:05:29] *** Quits: Izem (~Izem@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca) (Ping timeout: 248 seconds)
[04:06:07] *** Joins: Ad31 (~Ad31@2a01:e0a:41c:e870:aea:d30e:1844:b496)
[04:07:03] *** Quits: gamara (~gamara@66-203-186-167.ded.execulink.com) (Quit: Client closed)
[04:07:10] *** Parts: Ad31 (~Ad31@2a01:e0a:41c:e870:aea:d30e:1844:b496) ()
[04:08:27] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Read error: Connection reset by peer)
[04:10:12] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[04:10:48] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Read error: Connection reset by peer)
[04:12:09] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Quit: WeeChat info:version)
[04:13:00] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[04:13:02] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[04:14:08] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Read error: Connection reset by peer)
[04:15:16] *** Joins: Pilate (~pilate@pilate.io)
[04:16:24] *** Parts: Pilate (~pilate@pilate.io) ()
[04:16:34] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[04:16:34] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Read error: Connection reset by peer)
[04:17:18] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[04:19:28] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Quit: Konversation terminated!)
[04:20:43] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[04:20:43] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[04:20:56] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Read error: Connection reset by peer)
[04:23:42] *** Joins: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net)
[04:24:29] *** Guest80 is now known as JackFin
[04:27:03] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[04:27:06] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Read error: Connection reset by peer)
[04:28:39] *** Joins: w0ng (~w0ng@103.1.212.148)
[04:28:47] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:31:46] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[04:32:01] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[04:34:55] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[04:36:06] <vdamewood> Okay, I think it's time for me to investigate CI/CD.
[04:36:58] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[04:37:05] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[04:37:14] <vdamewood> Okay, Google tells me that Google Calculator says CI/CD is 0.2525.
[04:40:03] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[04:40:20] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[04:41:11] <oldlaptop> Well that's good to know.
[04:41:14] *** Joins: Izem (~Izem@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca)
[04:43:46] <causative> what does this mean?  is it a joke by Google?
[04:45:05] <mawk> vdamewood: jenkins
[04:45:48] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[04:46:14] <vdamewood> causative: It parsed CI and CD as roman numerals (101 and 400 respectively) and performed a division (/) operation on them.
[04:46:28] <causative> oh
[04:46:38] *** Quits: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com) (Ping timeout: 268 seconds)
[04:46:45] <JackFin> I think that;'s just the build # of the google calculator currently
[04:47:32] <JackFin> like how knuths tex is Pi
[04:48:25] <JackFin> probably converges to e or something
[04:48:33] *** Quits: Izem (~Izem@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca) (Quit: Going offline, see ya! (www.adiirc.com))
[04:48:46] <vdamewood> JackFin: e is between 2 and 3.
[04:49:36] <JackFin> 1/e 
[04:49:49] <mawk> 2.718281828
[04:49:53] <mawk> more or less
[04:50:15] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[04:51:43] <pikapika> mawk, e is a fun constant
[04:51:51] *** Quits: federico_it (~textual@151.95.116.125) (Quit: Textual IRC Client: www.textualapp.com)
[04:52:17] <pikapika> mawk, its one of the easier constants to calculate with arbitrary precision techniques
[04:52:44] <mawk> yeah
[04:52:50] <mawk> and do you know which one is the least easy pikapika ?
[04:53:00] <mawk> and we can prove it mathematically
[04:53:35] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[04:53:38] <oldlaptop> JackFin: e is taken by Knuth's metafont
[04:53:49] <JackFin> e is just infiite sum 1/n! 
[04:54:03] <mawk> or lim (1+1/n)^n
[04:54:07] <mawk> or a thousand other things
[04:54:12] <mawk> pikapika: œÜ, the golden ratio
[04:54:15] <mawk> is the hardest to approximate
[04:54:19] <JackFin> and probably why factorial has 2 weird fixed points at 0, 1 (otherwise e woulnt start with a 2)
[04:54:27] <pikapika> mawk, phi is very easy
[04:54:29] <oldlaptop> lim($version_number_of_metafont)
[04:54:32] <pikapika> Ist the square root of an integer
[04:54:38] <mawk> so what pikapika 
[04:54:40] <pikapika> SQuare roots of small integers is also easy to calculate
[04:54:48] <mawk> it's "easy" in the procedure
[04:54:50] <pikapika> I'd say among the well known constants pi is hardest
[04:54:54] <pikapika> mawk, the code is easy too
[04:55:00] <mawk> it doesn't matter if the code looks easy
[04:55:06] <pikapika> Even a newton rapshon inverse square root is easy
[04:55:07] <JackFin> you can easily approximate pi via random markov experiment
[04:55:12] <pikapika> and thats not the simplest method applicable
[04:55:17] <mawk> I'm not talking about the complexity of the code or the method pikapika 
[04:55:19] <JackFin> maybe exact is more complex
[04:55:23] <pikapika> mawk, then what
[04:55:44] <mawk> I'm saying it's the constant that is the hardest to approximate using rationals whose denominator is a given size
[04:55:58] <JackFin> (goes for any constant derived geometrically) 
[04:56:20] <pikapika> What does size mean i nthis context?
[04:56:21] <mawk> like you know œÄ has nice approximations like 22/7 and others
[04:56:26] <pikapika> There is a simple continued fraction for phi
[04:56:34] <mawk> yes, and look at it
[04:56:40] <mawk> the continued fractions is just ones, all the way down
[04:56:48] <JackFin> oldlaptop yea good point 
[04:56:50] <pikapika> So?
[04:56:53] <mawk> that means wherever you cut the continued fraction, you get a bad approximation
[04:56:58] <pikapika> I see
[04:57:00] <mawk> because 1 is the smallest integer you can have
[04:57:08] <pikapika> I dont remember how but I had a method to accelerate the convergence of the fraction
[04:57:14] <mawk> if you have a very big integer in the continued fraction and you cut at that spot, then you get an excellent approximation
[04:57:23] <mawk> and œÜ has only 1, so you can only have bad approximations
[04:57:24] <oldlaptop> mawk: but isn't zero smaller?
[04:57:26] * oldlaptop runs away
[04:57:29] <mawk> :(
[04:57:34] <pikapika> I'll let you know if I remember that method maw
[04:57:36] <pikapika> mawk
[04:57:49] <pikapika> I had a way to accelerate these continued fractions quite fast
[04:58:27] <mawk> yes you can have a lot of methods to go faster, but still for a fraction p/q and a higher bound for q, the approximation of œÜ will be pretty bad when compared to trying to approximate œÄ for instance
[04:58:50] <mawk> like if you want the denominator to be less than 100, you can find a good fraction for œÄ, but only bad ones for œÜ
[04:59:35] <pikapika> mawk, I meant an acceleration that precisely operates on the well known continued fraction
[04:59:45] <pikapika> mawk, but there is another thing anyways
[04:59:47] <mawk> yes
[04:59:53] <pikapika> sqrt(5) has a faster continued fraction
[05:00:03] <pikapika> We can obtain a good rational for phi much better with sqrt(5)
[05:00:33] <mawk> well no it cannot be "much better"
[05:00:43] <mawk> once you prove that œÜ is always bad, then it's the same for whatever you can do with œÜ
[05:01:24] <pikapika> hmm
[05:01:43] <mawk> but yes it approximates slightly better
[05:01:45] <pikapika> sqrt(5) is not nice either...but as I said, I distinctly remember I had a series acceleration technique for continued fractions of this nature
[05:02:05] <mawk> algebraic numbers will always have a lousy approximation anyway
[05:02:28] <mawk> transcendental numbers can have very big numbers in the continued fraction and thus have good approxmations
[05:02:47] <pikapika> I think it involved using the ratios of larger fibonacci numbers in some indirect manner
[05:02:56] <pikapika> and it was quite fast
[05:03:16] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[05:03:22] <mawk> I see
[05:03:25] <pikapika> mawk, I would be interested in the proofs for these facts
[05:03:33] <pikapika> I never studied continued fractions properly before
[05:03:44] <pikapika> Hadn't known such kinds of results were known for them
[05:03:55] <mawk> well in the continued fraction of an algebraic number it's always periodic
[05:04:02] <pikapika> Obviously
[05:04:09] <pikapika> I meant for square roots at least
[05:04:13] <pikapika> I haven't yet checked in general
[05:04:20] <mawk> well square roots and everything else algebraic
[05:04:28] <mawk> so the maximum number you can find in the continued fraction is bounded
[05:04:57] <mawk> and it's not the case with transcendental numbers, you can find numbers as big as you want
[05:05:15] <mawk> because if numbers were bounded it would have to be periodic which isn't possible
[05:05:19] <mawk> I think
[05:05:19] <beaky> nice i like algebra
[05:05:21] <pikapika> Interesting. I'll try seeing if I can prove the algebraic thing.
[05:05:28] <mawk> I think it's quite hard to prove
[05:05:29] <beaky> will you prove it in coq
[05:05:32] <mawk> but I don't remember exactly
[05:06:11] *** Joins: nekodesu (~nano@user/nekobit)
[05:06:47] <mawk> yeah no it doesn't have to be periodic if it's bounded nevermind
[05:07:02] <mawk> so, with some transcendantal numbers you can find numbers as big as you want
[05:07:32] <mawk> [1: 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, ...] isn't bounded but it's transcendental
[05:07:34] <mawk> is bounded*
[05:07:37] <pikapika> You mean the denominators keep increasing in a transcendental numbers expansion?
[05:07:39] <mawk> but it isn't periodic
[05:07:42] <pikapika> iusn';t that e
[05:07:47] <pikapika> that series you just gave
[05:07:48] <mawk> it's not called denominator but yes
[05:07:52] <mawk> they can keep increasing
[05:07:54] <mawk> ah, I don't know
[05:07:55] <pikapika> I'll have to check
[05:07:58] <mawk> I typed it at random
[05:08:01] <pikapika> oh ok
[05:08:16] <pikapika> How did you get interested in continued fractions?
[05:08:31] <mawk> e is [2; 1, 2, 1, 1, 4, 1, 1, 6, 1, 1, 8, ...]
[05:08:33] <mawk> apparently
[05:08:38] <JackFin> what about chatins constant as a continued fraction
[05:08:40] <mawk> I don't remember, it just seemed cool
[05:08:42] <JackFin> is it bounded? 
[05:08:43] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[05:09:00] <mawk> ¬ø
[05:09:42] *** Quits: nekobased (~nano@user/nekobit) (Ping timeout: 245 seconds)
[05:10:20] <JackFin> oh wait found answer
[05:10:23] <JackFin> https://math.stackexchange.com/questions/299953/can-every-transcendental-number-be-expressed-as-an-infinite-continued-fraction?rq=1
[05:10:23] <bayaz> Title: Can every transcendental number be expressed as an infinite continued fraction? 
[05:10:33] <JackFin> its a transcendental that cant be approximated through continued fraction
[05:11:14] <mawk> no JackFin I don't think so
[05:11:19] <mawk> the answer is downvoted anyway
[05:11:22] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 245 seconds)
[05:11:23] <mawk> and I think it's wrong
[05:11:46] <mawk> there is nothing in the definition of a continued fraction that is stronger than the definition of a decimal number for instance
[05:11:54] <mawk> if you can write it as a decimal, you can do a continued fraction
[05:12:34] <mawk> and you don't have to be able to explicitly write it to give the continued fraction
[05:12:43] <mawk> you just don't give the coefficients and that's it
[05:12:52] <mawk> Œ© = [a0; b0, b1, b2, ...]
[05:13:06] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[05:13:21] <mawk> if you have a continued fraction, you have a real number
[05:13:24] <mawk> and vice-versa
[05:13:44] <pikapika> Reals are funny
[05:15:37] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[05:15:38] <mawk> they're just ashamed complexes
[05:15:54] <mawk> they hide their imaginary parts
[05:16:13] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[05:18:22] <vdamewood> So, I go to download jenkins, and it says to use brew install jenkins. I wonder how many projects are going to switch to brew for their 'official' installer.
[05:18:41] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[05:18:46] <pikapika> Yeah there are many mac people out there
[05:18:53] <vdamewood> Also, damn. Now I have to install another version of OpenJDK.
[05:19:19] * vdamewood hands pikapika a blob.
[05:20:24] <pikapika> Its a funny thing
[05:20:36] <pikapika> I don't know why people like to pay so much for a hardware
[05:21:59] <vdamewood> pikapika: Different people have different preferences and requirements.
[05:22:24] <pikapika> vdamewood, the gnome guy
[05:22:28] <pikapika> miguel icaza
[05:22:30] <pikapika> He uses macs
[05:22:34] <pikapika> I think its a kind of hypocrisy
[05:22:42] <vdamewood> Why?
[05:22:55] <pikapika> I mean using macs is not a problem, but that he states he made macs his primary device
[05:23:05] <pikapika> If you are developing for linux desktop and not using linux desktop its a hypocrisy
[05:23:14] <vdamewood> I disagree.
[05:23:35] <pikapika> Without dogfooding one can never truly understand the software
[05:23:46] <pikapika> Its no wonder gnome has been going to the dogs for a while
[05:24:00] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[05:24:35] <vdamewood> Yeah, I hear a lot of people saying that some ranodom software package or tools has been getting worse. Problem is, every package has such people, so it's all meaningless noise.
[05:25:01] <vdamewood> I mean, if there's one message I get from the Linux community, it's that Linux sucks, as a whole.
[05:25:16] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 272 seconds)
[05:25:39] <pikapika> vdamewood, server is a different issue. I find no issue with dev os and server os being different. Server is just a different environment. But if you are developing for desktop you should be using the desktop.
[05:26:02] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[05:26:47] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 245 seconds)
[05:26:58] <pikapika> vdamewood, its hard to say at this point. In 2021, linux is easier than windows, and maybe mac too for desktop.
[05:27:18] *** Joins: jinsun (~quassel@user/jinsun)
[05:27:29] <vdamewood> It's definitely not easier than Mac.
[05:27:32] <pikapika> And I would say if there are any usability or otherwise issues, it would be because of lack of dogfooding
[05:28:13] <pikapika> When many devs are writing for linux on their macs, it should not be surprising that the output is not as good as it should be
[05:28:40] <cis> mac is my favorite distro
[05:28:48] <pikapika> And the other big equation is of course hardware vendors
[05:29:07] <vdamewood> Yeah, I'd say that developers aren't the kind of people whose input matters so much when it comes to GUIs.
[05:29:56] <pikapika> I'd say at least a "developer" minded person generally has better ideas for guis than "designers"
[05:30:07] <vdamewood> Developers designing GUIs is how you get obscure keystrokes and esoteric mouse hotspots for menus and such.
[05:30:15] <pikapika> Those are fine
[05:30:20] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[05:30:23] <pikapika> I think emacs and so on are okay guis
[05:30:38] <vdamewood> Not when they're required and there's no method for discovery.
[05:30:38] <cis> like the thing github just added: press . on any repo
[05:30:44] <pikapika> Its the modern design fuckers who are killing guis
[05:31:05] <pikapika> Whitespace and the worst aspects of mobile ui, now on your desktop
[05:31:13] <pikapika> And with added bloat
[05:31:17] <vdamewood> It sounds like you're just irritated that they're not designing GUIs for you, and instead they're designing for other people.
[05:31:36] <pikapika> They are not designing for anyone except their own atrocious ideas of what constitutes good design
[05:31:49] <X-Scale> software libruls
[05:31:53] <pikapika> Normies don't like it, they just don't know they are being shafted because they aren't exposed to alternatives
[05:32:38] <vdamewood> Well, now I have Jenkins installed.
[05:32:48] <pikapika> They are not designing for anyone. GUIs are losing features and increasing in download size, cpu and ram at the same time
[05:32:59] *** Quits: zwr (~zwr@2804:d45:b966:fb00:c513:305c:1efa:a7fb) (Remote host closed the connection)
[05:33:15] *** Quits: xsperry (~as@user/xsperry) (Remote host closed the connection)
[05:33:30] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[05:33:32] <X-Scale> They're on their way to build IdiocracyOS
[05:34:01] <pikapika> Normies actually hate modern guis. Many people still use Office 2003 or 2007 etc for example
[05:34:17] <vdamewood> 2007  I could buy, but not 2003.
[05:34:29] <pikapika> Some people dislike the ribbon
[05:34:34] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[05:34:38] <vdamewood> People want that sweet sweet .docx format.
[05:34:43] *** Joins: Crescendo (~Crescendo@user/crescendo)
[05:35:59] <pikapika> And normies also use dense rich uis like Photoshop
[05:36:01] <pikapika> They hate losing features
[05:36:24] <pikapika> Its all just the modern web design wankers who want these new guis
[05:36:40] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:37:16] *** Joins: xsperry (~as@user/xsperry)
[05:37:18] *** Quits: killown (~killown@user/killown) (Quit: Leaving)
[05:37:25] <X-Scale> The web is aids cancer and Alan Kay got it right
[05:39:02] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[05:39:03] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 268 seconds)
[05:39:03] *** brabrax_ is now known as brabrax
[05:39:56] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:b1f3:b9ce:1ae8:bf80)
[05:40:06] <vdamewood> Okay, looks like Jenkins doesn't work the way I want on macOS.
[05:40:18] <vdamewood> Looks okay for Linux, though, and maybe Windows.
[05:43:42] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:7c3f:c13a:8afa:72f9) (Ping timeout: 256 seconds)
[05:45:12] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[05:48:02] *** Joins: chives2 (~chives@24.35.204.107)
[05:48:12] *** Joins: inky__ (~inky@46.36.117.137)
[05:48:18] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[05:48:33] <chives2> Hey yall use the speedtest-cli.py?  I'm getting an error ValueError: invalid literal for int() with base 10: ''
[05:48:41] *** Joins: Crescendo (~Crescendo@user/crescendo)
[05:48:45] <chives2>   File "./speedtest-cli.py", line 1174, in get_config
[05:50:33] *** Quits: inky_ (~inky@46.36.113.172) (Ping timeout: 248 seconds)
[05:50:46] *** Quits: inky (~inky@46.36.113.172) (Ping timeout: 268 seconds)
[05:51:30] *** Quits: nekodesu (~nano@user/nekobit) (Read error: Connection reset by peer)
[05:51:39] *** Joins: nekodesu (~nano@user/nekobit)
[05:51:41] <vdamewood> chives2: Nope. NEver used it.
[05:52:51] <pikapika> chives2, what python is it meant to be ran as
[05:52:59] <pikapika> Some apps only run as python2 or as python3
[05:53:11] *** Joins: addc1820643 (~addc182@host86-131-45-199.range86-131.btcentralplus.com)
[05:53:44] <vdamewood> These days, I just assume everything is Python 3.
[05:54:49] <chives2> looks like its a default on my build i think which is odd right isnt 2 the default on the apple side of the house?
[05:55:17] <chives2> but i tried both it wasnt the most current sad that even simple things need to be updated
[05:55:52] <vdamewood> Apple are working on removing Python entirely from macOS anyway.
[05:56:07] <vdamewood> (same with Perl, tcl/tk, and ruby)
[05:56:18] *** Quits: addc182064 (~addc182@host86-134-254-227.range86-134.btcentralplus.com) (Ping timeout: 272 seconds)
[06:00:22] <pikapika> why
[06:02:16] <vdamewood> Well, for one, they only include them in the first place to support software using them. None of which is incuded with the OS itself. Two, they (Apple) say that developers should include the runtime in their own app bundles. And third, and this one is my personal guess, the runtimes get out of date and are a headache to maintain.
[06:04:41] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[06:06:08] <oldlaptop> the tcl one is over ten years old now, IIRC
[06:06:11] <chives2> its interesting to me that apt-get install python auto installs python2, you'd think they'd change that if its not in use really anymore to be... deprecated so you'd have to use python2
[06:06:47] <oldlaptop> the stuff that doesn't know about python3 just says 'python', the stuff that knows about python3 knows to say python3
[06:07:11] <pikapika> There is a large body of software already existing
[06:07:20] <pikapika> chives2
[06:08:13] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[06:09:39] <vdamewood> Fedora has or had a project to purge all Python2 packages.
[06:11:30] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[06:13:22] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 258 seconds)
[06:15:56] <vdamewood> Looks like Fedora has it down to 7 Python3-based packages.
[06:16:13] <vdamewood> (one of which is a -devel package of one of the others)
[06:17:37] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[06:20:25] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[06:21:52] *** Quits: kapad (~kapad@46.246.193.116.dsl.dyn.forthnet.gr) (Quit: Leaving)
[06:24:17] *** Quits: xff0x (~xff0x@2001:1a81:53fa:2600:743d:308e:abb:126) (Ping timeout: 245 seconds)
[06:24:59] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[06:26:15] *** Joins: xff0x (~xff0x@2001:1a81:5238:9600:357e:7c22:5b05:e9dc)
[06:27:53] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[06:28:13] <vdamewood> Okay, looks like Fedora's remove Python 2 project has completed and these last few packages are there for the last developers who need them.
[06:28:55] *** Joins: kikijiki (~Thunderbi@user/kikijiki)
[06:29:37] *** Quits: snake (~snake@user/snake) (Quit: Leaving)
[06:31:45] *** Joins: Guest3244 (~aaron@ip24-252-251-8.cl.ri.cox.net)
[06:33:40] *** Joins: soapsudsxx (~soapsudsx@209.221.40.143)
[06:41:30] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[06:42:09] <vdamewood> Okay... Make that 23 packages.
[06:42:43] *** Joins: kmh_ (~kmh@p2e511ac0.dip0.t-ipconnect.de)
[06:43:21] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[06:44:25] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[06:44:30] *** Quits: kmh (~kmh@p200300df5f0c180024ffd0b69acc61a1.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[06:46:16] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[06:46:18] <JackFin> whats a good reference for understanding how permissions work under Windows?
[06:47:35] *** Quits: Guest3244 (~aaron@ip24-252-251-8.cl.ri.cox.net) (Quit: Leaving)
[06:48:35] *** Quits: scabootssca_ (~scabby@user/scabootssca) (Quit: Leaving)
[06:48:41] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[06:50:42] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:ac37:8c1d:27ed:668b) (Quit: Leaving)
[06:51:02] *** Quits: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:9882:5d69:12df:2a8c) (Quit: Leaving)
[06:51:09] <vdamewood> One of which is GIMP, so it looks like the purging of python 2 failed.
[06:51:49] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[06:55:01] *** Quits: bpmedley (~bpmedley@69-174-155-1.bltnilaa.metronetinc.net) (Quit: Textual IRC Client: www.textualapp.com)
[06:55:02] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[06:58:22] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[06:58:30] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 256 seconds)
[06:59:25] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:59:36] *** Joins: jess (~jess@libera/staff/jess)
[07:01:22] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 245 seconds)
[07:03:42] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[07:04:59] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[07:07:14] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[07:08:25] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[07:10:47] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:40cf:669:99b7:4a90)
[07:11:21] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[07:11:28] <vdamewood> Well, time to see what Rocky Linux is like.
[07:12:38] *** Quits: epolanski (uid312403@id-312403.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[07:12:41] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[07:12:45] *** Joins: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:9882:5d69:12df:2a8c)
[07:13:08] *** Joins: jmcantre2 (~weechat@user/jmcantrell)
[07:13:13] *** Joins: bpmedley (~bpmedley@69-174-155-1.bltnilaa.metronetinc.net)
[07:14:22] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 256 seconds)
[07:16:28] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[07:16:29] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[07:16:29] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 268 seconds)
[07:17:28] *** Joins: KaitoDaumoto (~xwwwfatec@115.134.233.51)
[07:17:42] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[07:19:37] *** Quits: jmcantre2 (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[07:24:18] *** Quits: chives2 (~chives@24.35.204.107) (Quit: Leaving)
[07:24:50] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[07:27:50] *** Joins: pandakekok9 (~job@wikimedia-commons/pandakekok9)
[07:28:12] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[07:31:16] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[07:33:29] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 248 seconds)
[07:39:09] <vdamewood> Okay, Rocky Linux looks pretty good.
[07:49:34] *** Joins: Izem (~rcg@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca)
[07:52:39] *** Quits: DrMax (~DrMax@node-1w7jra94757g1bivcltkwu572.ipv6.telus.net) (Ping timeout: 258 seconds)
[07:55:17] *** Quits: nthrow_ (~nat@user/nthrow) (Ping timeout: 252 seconds)
[08:04:50] *** Joins: DrMax (~DrMax@node-1w7jra94757g16a2gga78pfnk.ipv6.telus.net)
[08:06:59] *** Joins: arcatech (~arcatech@user/arcatech)
[08:11:00] *** Joins: amigojapan (uid86330@id-86330.brockwell.irccloud.com)
[08:11:45] *** Joins: jazzy (~jaziz@2600:380:8638:b14c:3d37:fea7:101f:573e)
[08:11:59] *** Quits: akevinhuang (~thekevinh@user/thekevinhuang) (Ping timeout: 268 seconds)
[08:12:09] <vdamewood> Rocky doesn't include ninja. :(
[08:12:32] *** Quits: nekodesu (~nano@user/nekobit) (Quit: free(neko);)
[08:20:13] *** Joins: elnavigator (~elnavigat@105.196.131.87)
[08:28:56] <vdamewood> Had to enable an optional repo.
[08:30:41] <cis> why are multipart file uploads which send file chunks over parallel connections faster than a single upload of the entire file over a single connection?
[08:31:50] <cis> essentially this question: https://serverfault.com/questions/1040985/s3-multipart-upload-speed
[08:31:52] <bayaz> Title: S3 multipart upload speed 
[08:32:57] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[08:33:04] <vdamewood> cis: If I had to venture a guess, it's because it leads to a situation where pieces of the file that are stalled lead to fewer slow downs because it only affects one chunk.
[08:33:09] *** Joins: flynn (~mcbloch@user/flynn)
[08:33:27] <JackFin> what do you think 'software developers' or 'programmers' did before computers were invented?
[08:33:27] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[08:33:52] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[08:34:01] <Izem> math, physics, engineering
[08:34:56] <cis> vdamewood: that might make sense, but why would only one chunk stall and not all of them?
[08:36:00] <Kol> cis: the chunks might be stored on multiple backend servers, so you're not saturating the resources of a single disk/cpu
[08:36:06] <JackFin> Izem guess so. crazy to think there were probably thousands of mediocre ppl in those fields that probably were just more oriented towards something that hadnt been invented yet 
[08:36:21] <JackFin> probably same is true today 
[08:36:29] <vdamewood> cis: A single packet could keep getting dropped because it's on a congested line somewhere, while the other packets get sent through other routes.
[08:36:32] <cis> Kol: this is S3 we're talking about
[08:37:10] <Izem> JackFin: these prior folk were not mediocre by any means
[08:37:34] <cis> vdamewood: I was thinking that... but would it really account for any significant speed difference? If one stalls, others are likely to, and each connection is going to find new routes, isn't it?
[08:38:13] <cis> JackFin: don't worry, there are millions of mediocre programmers right now!
[08:38:16] <vdamewood> Not really.
[08:38:46] <vdamewood> Routers don't always sent packets through the same interface, even if they're going to the same destination.
[08:38:48] *** Quits: elnavigator (~elnavigat@105.196.131.87) (Ping timeout: 256 seconds)
[08:39:19] <JackFin> iduno i think you can easily be great at math and suck at programming or vice versa 
[08:39:25] <vdamewood> And the decisions routers make in that regard are influenced by more factors than just which path is fastest.
[08:39:52] <JackFin> probably a lot of people you never hear about that would have been great programmers in ancient times but never discovered it and just thought they were shitty mathematicians 
[08:39:58] <JackFin> or crappy physicists 
[08:40:32] <vdamewood> Well, to be fair, in ancient times there were people who could never become famous because they were slaves, or helots.
[08:41:21] <Kol> cis: another possibility is that the uploading device is the bottleneck and multipart uploads are better suited for multithreading
[08:43:04] *** Quits: quartz (~quartz@2603-8001-7700-61a4-0000-0000-0000-0acb.res6.spectrum.com) (Quit: WeeChat 3.2)
[08:43:33] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[08:44:24] <Izem> vdamewood: what's a helot?
[08:45:06] <vdamewood> Izem:The Spartan lower class. They basically were the farmers of Sparta.
[08:45:47] <Izem> thanks, I need to do more history
[08:48:37] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 258 seconds)
[08:49:14] *** Joins: elnavigator (~elnavigat@105.196.131.87)
[08:51:08] <Izem> if you don't have to support mathematics or chemistry, what does it take to make a document (format)? Images are ok, the rest is just you picking a structure and how to represent it graphically?
[08:52:03] *** Quits: Thedarkb (~Thedarkb@85.255.236.109) (Ping timeout: 268 seconds)
[08:52:09] *** Joins: mci64 (~mci64@185.242.190.95)
[08:52:56] <vdamewood> Izem: Well, you need a way to represent the formatting in the document, and a way to include images, then.
[08:53:15] <Izem> also TAOCP also described some of the computer science knuth needed to make tex right?
[08:53:18] <Caffeinated> postscript -> pdf
[08:53:19] <vdamewood> So, you'll need some sort of syntax to represent the structure you mentioned.
[08:54:44] <Izem> what do you guys prefer your code documentation to be in?
[08:54:50] <vdamewood> Izem: Well, the stuff in TAOCP is extremely generic. Odds are there's some stuff used for TeX just our of sheer coincidence.
[08:54:59] <vdamewood> Izem: DocBook 5.x
[08:55:03] <Izem> Caffeinated: does postcript support hyperlinks?
[08:55:25] <Izem> ok looking at docbook now
[08:55:41] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[08:55:42] <vdamewood> I don't think postscript supports anything that can't be printed on paper.
[08:55:52] <vdamewood> I mean, rendering it, anyway.
[08:56:41] <vdamewood> (You can't print a for-loop, but postscript still supports them.)
[08:57:47] <Izem> hmm, xml
[08:58:06] <Izem> presentation neutral is cool though
[08:58:10] <PlanckWalk> You can put hyperlinks in postscript documents.
[08:59:03] <PlanckWalk> There are all sorts of directives that are intended for different render targets, some of them are just comments from the processor point of view.
[09:00:23] <PlanckWalk> Whether a particular postscript-supporting system interprets or even passes them through is a bit of a can of worms though.
[09:00:35] <vdamewood> Hmm... one example I found uses what looks like a PDF extension.
[09:01:58] <PlanckWalk> Yes, and quite a few postscript processors will recognize (some of) those
[09:02:13] <Izem> who knew making documents could be so difficult
[09:02:47] <PlanckWalk> It's one of those things where most of the ecosystem supports a lot more than what's in a standard specification.
[09:05:04] <vdamewood> Well, to be fair, it looks like Adobe abandoned the specification once PDF was released.
[09:07:00] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[09:07:18] <Izem> postcript has a iso spec right?
[09:07:20] *** Joins: Thedarkb (~Thedarkb@85.255.236.109)
[09:07:57] <vdamewood> Nope.
[09:08:35] <Izem> oh :/
[09:09:24] *** Joins: img (~img@user/img)
[09:09:43] <Izem> can you use tex as a backend and have some interactive frontend?
[09:10:01] <Izem> I know it's not really suitable for interactive stuff, I'm just wondering
[09:10:19] <vdamewood> Well, no not really. Since TeX just does a straight translation.
[09:10:24] *** Quits: s0berage (~s0berage@135-23-213-77.cpe.pppoe.ca) (Read error: Connection reset by peer)
[09:10:34] <vdamewood> It's basically like a compiler.
[09:10:43] *** Joins: s0berage (~s0berage@135-23-213-77.cpe.pppoe.ca)
[09:10:57] *** Joins: Thedarkb1 (~Thedarkb@85.255.236.109)
[09:10:59] *** Joins: v0id_ptr (~longlong@user/ptr-frac7al/x-0038398)
[09:12:55] *** Quits: juliaEnv (~mathAndRh@ip-86-49-241-245.net.upcbroadband.cz) (Quit: Going offline, see ya! (www.adiirc.com))
[09:13:27] *** Quits: Thedarkb (~Thedarkb@85.255.236.109) (Ping timeout: 245 seconds)
[09:13:37] <Izem> I see that it outputs dvi
[09:13:42] <JackFin> html is the best document format imo
[09:13:52] <Izem> but even dvi is not required
[09:13:56] <JackFin> html.+ javascript should be the standard for printing not pdf 
[09:14:10] *** Quits: s0berage (~s0berage@135-23-213-77.cpe.pppoe.ca) (Read error: Connection reset by peer)
[09:14:27] *** Joins: s0berage (~s0berage@135-23-213-77.cpe.pppoe.ca)
[09:14:47] <Izem> it's impossible to implement html
[09:15:15] <JackFin> why?
[09:15:21] <Izem> too large
[09:15:36] *** Quits: shailangsa (~shailangs@host86-145-14-24.range86-145.btcentralplus.com) ()
[09:15:41] <Izem> notice there's not too many browsers left
[09:16:19] <vdamewood> HTML isn't sufficient for exact printing.
[09:16:34] <Izem> I look at some of the other formats and they have a similar issue
[09:16:44] <Izem> or there are just propriertary :P
[09:16:58] <Izem> vdamewood: oh they didn't take that into account?
[09:17:26] <vdamewood> Nope. HTML was never designed for printing. It's printable, but how it prints will vary by device.
[09:17:55] <vdamewood> There are some CSS properties you can use for specifying printing details, but that's still not enough for it to be considered a printing format.
[09:20:14] *** Joins: TechTest (uid283215@id-283215.tooting.irccloud.com)
[09:20:32] <vdamewood> No one really uses PostScript of DVI anymore, so printing is basically PDF and PCL these days, and even then, people don't use PCL for formatting documents, it's used more as a communication protocol between the printer driver and the printer.
[09:21:16] <Izem> I see
[09:22:03] <Izem> oh, the last thing I am thinking of is a hack, can you have text in vector image formats?
[09:22:47] *** Joins: gargus (~user@124-150-74-109.tpgi.com.au)
[09:23:13] <vdamewood> Well, here's a secret, fonts are just compilations of vector images.
[09:23:28] <vdamewood> maybe s/compilations/collections/
[09:23:45] <dre> kinda crazy how fast they can render
[09:24:51] <vdamewood> Anyway, you can have the vector glyphs of text in a vector image, but you can't, say, copy and paste the letters into a text file.
[09:25:04] <Izem> oh
[09:27:28] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[09:28:09] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[09:28:12] <vdamewood> By the way, that thing about PCL being a protocol between the driver and the printer is basically how PostScript got it's start. You'd just send PostScript code over the serial line to the printer to print things.
[09:28:23] <Izem> guess I can see why openbsd went throught all that trouble with mandoc
[09:28:27] *** Quits: Thedarkb1 (~Thedarkb@85.255.236.109) (Ping timeout: 245 seconds)
[09:28:33] <Izem> ah cool
[09:28:52] <vdamewood> Though, there wasn't a driver back then.
[09:29:25] <Izem> wait, what does a printer driver do now?
[09:29:41] <Izem> allow it to be controlled without a serial connection?
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:30:07] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:30:31] <cis> It connects to the printer manufacturer's server and receives the code to disable your ink cartridges.
[09:30:45] <vdamewood> No, printer drivers just provide an abstraction between the printer and the application so teh application can just code to the OS's printer driver interface.
[09:31:16] <vdamewood> For example, some printers don't support PostScript, so you can't just feed them PostScript.
[09:31:22] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:31:36] <PlanckWalk> Even ones that do often want vendor-specific extensions
[09:31:50] <PlanckWalk> A printer driver will put those in for you.
[09:33:09] <Izem> I see, thanks
[09:33:20] <vdamewood> A driver can even abstract away the way the printer is connected. USB? Parallel Port? Network?
[09:34:01] <vdamewood> Doesn't matter. The Application just feeds the driver generic printer commands, and the driver converts it to what the printer wants and sends it on its way.
[09:34:17] <vdamewood> s/generic/vendor neutral/
[09:34:38] *** Joins: Thedarkb (~Thedarkb@85.255.236.109)
[09:34:42] <JackFin> ok legit question: why do you need "exactness" in printing? cant you trade off some precision for flexibility in document format and have an easier time? Like, for 99.9% of use cases I can think of, I dont care if my glyph is off by a smudge (in fact i expect the actual process of printing to be imperfect anyway)
[09:34:57] <JackFin> as long as text is legible i personally dont care
[09:35:05] * Izem considers enriched text
[09:35:31] <Izem> you really wouldn't notice it?
[09:35:33] <vdamewood> JackFin: 99.9% of your printing encompasses 0.0000001% of all printing. Most printing is done by professional outfits.
[09:36:15] <vdamewood> And yeah, they spend hours or even weeks treaking the layout of what they're printing to get it down to the 600-dbi dot.
[09:36:24] <vdamewood> s/treaking/tweaking/
[09:36:33] <JackFin> crazy..
[09:36:39] <vdamewood> s/dbi/dpi/
[09:37:02] <vdamewood> That's why apps like QuarkXpress and Adobe InDesign exist.
[09:37:08] <Izem> hmm, if I don't care about printing like html that would make it a lot easier to make a new document format
[09:37:45] <JackFin> imagine a version of Tex that was 'less exact'
[09:37:55] <JackFin> but still pretty good
[09:38:12] <Izem> what's the point of that?
[09:38:22] <Izem> TeX is for digital typesetting
[09:38:25] <JackFin> simplicity in the format 
[09:38:35] <JackFin> and standardization 
[09:38:59] <Izem> I don't think that's the issue at hand
[09:39:02] <vdamewood> TeX itself already is unsuitable as a printing format, like HTML. That's why TeX converts to another format.
[09:39:51] <Izem> now I see why they output to dvi
[09:40:04] <vdamewood> The point to TeX is that when it does render to the printable format, it does it correctly, where as other formats are less stringent on typesetting concepts like properly laying out the text and such.
[09:41:16] <vdamewood> Typesetters are really focused on typographic conerns like 'whitespace rivers' and odd quirks like that. TeX is designed to detect such things and avoid them. Most HTML printers don't cover that and use a simple, na√Øve, brute-force layout method.
[09:42:20] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[09:43:43] <vdamewood> Oh, another thing that HTML doesn't do that TeX does do is hyphenating words that cross line boundaries.
[09:43:52] *** Quits: v0id_ptr (~longlong@user/ptr-frac7al/x-0038398) (Ping timeout: 245 seconds)
[09:44:04] *** Joins: Fairy97 (~Fairy@2001:464a:4992:0:10f5:2116:164:18ef)
[09:45:13] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[09:45:28] <Izem> so what I really want for this document stuff is a layout engine
[09:45:28] <vdamewood> TeX or LaTeX, I forget which, even has a dictionary to look for the right places to break a word up.
[09:45:54] <Izem> all I need is to know the margins which could be based on character width or something
[09:46:02] <JackFin> ok this is interesting. i remember reading somewhere theres no grammar that cant parse white space for programming languages like Python that have variable indentation level
[09:46:06] <JackFin> wonder how Tex does it 
[09:46:27] <vdamewood> JackFin: Huh?
[09:46:46] <Izem> JackFin: unrelated concepts
[09:47:18] <Izem> and you can parse whitespace btw
[09:47:59] <vdamewood> Python does it all the time.
[09:48:02] *** Quits: Fairy (~Fairy@2001:464a:4992:0:e9f6:1ae9:552:9cec) (Ping timeout: 258 seconds)
[09:48:05] <cis> there's an esoteric language called "whitespace" which consists of only tab, space, and newline
[09:48:12] <vdamewood> Hell, there's even an esolang ... nevermind.
[09:48:13] <cis> it's fun to write an interpreter for that one
[09:48:27] <Izem> python doesn't actually parse whitespace, it has some hacks
[09:48:30] <pavonia> Fun fact: TeX is even harder to parse than languages that use whitespace for semantics
[09:48:34] <JackFin> https://www.cs.unc.edu/~plaisted/comp455/Python%20is%20not%20context%20free.htm 
[09:48:53] *** Quits: NEYi (~NEYi@109.251.216.38) (Quit: Leaving)
[09:49:18] <Izem> I guess %20 is space in html
[09:49:28] <JackFin> nvm guess is unrelated (maybe)
[09:49:32] <cis> urlencoded
[09:49:36] <vdamewood> Izem: Not HTML.
[09:49:42] <Izem> oh
[09:49:46] <Caffeinated> x020 = 32 decimal which is space
[09:49:51] <Izem> I see
[09:49:54] *** audio is now known as audiocat
[09:49:55] <Izem> haha nice
[09:49:59] <cis> in html space is just space, or &nbsp;
[09:50:20] <vdamewood> Actually &nbsp; isn't a 'space' character (0x20), it's a Non-breaking space.
[09:50:31] <cis> yeah, a very hearty space
[09:50:45] <Caffeinated> its a space with bumps
[09:50:55] <cis> strong, unflappable, holds up under pressure
[09:51:08] <Izem> JackFin: that title may be incorrect
[09:51:14] <vdamewood> It's a space that can't be used as the point to start a new line if the text flow requires it.
[09:51:43] <cis> text flow is overrated; we have scrollbars for a reason!
[09:51:53] <vdamewood> So, if you write foo&nbsp;bar, then 'foo' and 'bar' will be on the same line of text.
[09:52:05] <Izem> ah cool
[09:52:09] *** Joins: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler)
[09:52:18] <Izem> vdamewood: btw do you know if troff was sent to a printer?
[09:52:40] <vdamewood> Unless, of course, the WHOLE line is full of NBSP's and you *have* to break somewhere.
[09:52:53] <vdamewood> Then each NBSP is as much as a candidate to break as any letter.
[09:53:19] <vdamewood> Izem: I think it was, and I think that's how K&R was produced.
[09:53:35] <Izem> cool :-)
[09:53:57] <vdamewood> Though, I'm fairly certain that recent printings have been converted to some other format to be used as a master.
[09:53:58] <Izem> pavonia: that's too bad, think someone would've spotted that before it was too late
[09:54:46] <pavonia> I'm pretty sure Knuth was aware of it :p
[09:54:53] <vdamewood> Or rather, I should say, recent printings are made from a digital master that was produced by converting the troff original.
[09:54:59] <Izem> kernighan and company also used custom software for the go programming language book too, troff and some other stuff
[09:55:40] <Izem> ok great, I'm starting to get the idea
[09:56:37] <Izem> for your document format it will be paired along with a veiwer
[09:57:10] <Izem> suitable formats for printing exist so it's best to translate to those for printing stuff
[09:57:53] <Izem> did hyperlinks appear in any form before html?
[09:59:07] <Izem> that is quite the idea/feature
[09:59:50] <vdamewood> I think TeXinfo predates HTML and had (internal) hyperlinks.
[10:00:27] <Izem> yeah that will also be one to look at
[10:01:25] <Izem> the trick now is to avoid recreating the web xD
[10:02:25] <vdamewood> So, I selected a Taylor Swift video on YouTube to watch, and after it's autoplaying other music videos. Of the last 8 or say, 7 have been more Taylor Swift videos. Randomly, one was Katy Perry.
[10:03:02] <Izem> it's a test to see if you will change it
[10:03:05] <Izem> xD
[10:03:26] <Izem> that way they can determine you preferences
[10:03:49] <vdamewood> Yeah, I won't. I like KP, too.
[10:03:58] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[10:04:07] *** Joins: bcd (~bcd@83-84-164-51.cable.dynamic.v4.ziggo.nl)
[10:04:08] <Izem> then that means you get assimilated
[10:04:40] *** Joins: NEYi (~NEYi@109.251.216.38)
[10:04:40] <vdamewood> Though, I own 0 Katy Perry CDs and 11 Taylor Swift CDs.
[10:04:45] <Izem> jokes aside, youtube's algo seems to have gone down in quality considerably 
[10:04:50] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[10:05:06] <vdamewood> No wait, 12 Taylor Swift CDs.
[10:05:10] <Izem> wonder what happened
[10:05:17] <Izem> wow that's a lot :P
[10:05:27] *** Quits: Zeturic (~Orimendix@50-25-46-156.krmtcmta02.res.dyn.suddenlink.net) (Quit: Leaving)
[10:05:30] <vdamewood> It's litterally all of her Studio albums and EPs.
[10:05:49] <PlanckWalk> You now how it is, you leave 2 Taylor Swift CDs in a drawer and come back 10 years later and there's 30 of them.
[10:06:16] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[10:06:44] <vdamewood> Taylor Swift CDs are born pregnant.
[10:06:57] <PlanckWalk> I'm sure there are Fedora CD versions in one of my drawers that never actually existed.
[10:07:05] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[10:09:20] <PlanckWalk> Some sort of weird crossbreeds with other CDs in the drawer.
[10:09:23] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[10:09:34] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[10:10:49] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[10:12:25] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[10:13:00] <vdamewood> PlanckWalk: https://youtu.be/t_5XkPh3vXg
[10:14:00] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 256 seconds)
[10:14:08] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[10:14:25] *** Joins: lunarkitty (uid501895@user/pyra)
[10:14:34] *** Joins: user51 (~user51@176.228.90.248)
[10:15:12] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[10:17:46] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[10:18:41] *** Quits: password (~password@user/password2) (Quit: Connection closed)
[10:18:59] *** Joins: password (~password@user/password2)
[10:22:31] *** Joins: Tempesta (~Tempesta@user/tempesta)
[10:24:38] *** Quits: RedCrab (~Red_Crab@user/redcrab) (Quit: WeeChat 3.2)
[10:26:23] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[10:29:10] *** Joins: absc (~absc@dynamic-adsl-94-34-201-166.clienti.tiscali.it)
[10:30:14] *** Joins: Akronymus (~Akronymus@85.31.8.181)
[10:31:57] *** Joins: mrig (~mrig@user/mrig)
[10:34:23] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[10:41:47] *** Joins: gargus_ (~user@124-150-74-109.tpgi.com.au)
[10:44:58] *** Joins: v0id_ptr (~longlong@user/ptr-frac7al/x-0038398)
[10:45:44] *** Quits: gargus (~user@124-150-74-109.tpgi.com.au) (Ping timeout: 256 seconds)
[10:48:20] *** Joins: dan01 (~dan01@2a02:2f09:381b:db00:59de:2f6e:4f81:783b)
[10:48:27] *** Quits: LiftLeft (~LiftLeft@154.21.23.18) (Ping timeout: 245 seconds)
[10:49:14] *** Quits: soapsudsxx (~soapsudsx@209.221.40.143) (Remote host closed the connection)
[10:52:01] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 244 seconds)
[10:53:10] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[10:54:33] *** Quits: PikaChokeMe (~PikaChoke@c-24-11-1-200.hsd1.ut.comcast.net) (Ping timeout: 248 seconds)
[10:55:23] *** Joins: PikaChokeMe (~PikaChoke@c-24-11-1-200.hsd1.ut.comcast.net)
[10:55:56] *** Joins: jinsun (~quassel@user/jinsun)
[10:56:00] *** Quits: elnavigator (~elnavigat@105.196.131.87) (Ping timeout: 268 seconds)
[10:56:34] *** Joins: elnavigator (~elnavigat@105.196.131.87)
[10:58:01] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[10:59:43] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 258 seconds)
[10:59:43] *** Lord_of_Life_ is now known as Lord_of_Life
[11:02:18] *** Quits: flatlinejim (~bobmin@203.29.243.207) (Quit: The Lounge - https://thelounge.chat)
[11:02:40] <password> so , without wanting to start a whole debate about hashing
[11:03:09] <password> why does have the salt stored with the hash not reduce security?
[11:03:24] *** Joins: flatlinejim (~bobmin@203.29.243.207)
[11:03:56] <PlanckWalk> It does, just by very little compared with benefits.
[11:04:02] <PlanckWalk> (and complexity of alternatives)
[11:05:24] <PlanckWalk> If you don't store it with the hash, you need to store it somewhere else.
[11:05:50] <PlanckWalk> Most of the attacks that retrieve a hash database will also give access to the salts.
[11:06:44] <Akronymus> Salting still helps with rainbow tables.
[11:06:52] <Akronymus> Even if you store it with the hash.
[11:06:54] <PlanckWalk> Yes, that's the increase in security
[11:07:00] *** Quits: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler) (Ping timeout: 244 seconds)
[11:07:18] *** Quits: flatlinejim (~bobmin@203.29.243.207) (Read error: Connection reset by peer)
[11:07:21] *** Quits: v0id_ptr (~longlong@user/ptr-frac7al/x-0038398) (Ping timeout: 248 seconds)
[11:07:30] *** Joins: flatlinejim (~bobmin@203.29.243.207)
[11:08:03] <PlanckWalk> It's possible to generate salts and not store them anywhere, but that's basically security by obscurity.
[11:08:32] *** Quits: flatlinejim (~bobmin@203.29.243.207) (Client Quit)
[11:08:47] *** Quits: compscipunk (~compscipu@107-214-234-232.lightspeed.sndgca.sbcglobal.net) (Quit: WeeChat 3.2)
[11:09:16] *** Joins: flatlinejim (~bobmin@203.29.243.207)
[11:09:53] <password> but salting does not help in brute forcing?
[11:10:06] *** Quits: elnavigator (~elnavigat@105.196.131.87) (Ping timeout: 256 seconds)
[11:10:12] <password> well i guess it helps that you can only brute force one password at a time?
[11:10:34] <Akronymus> It doesn't help with brute forcing your specific salt.
[11:10:52] <Akronymus> It helps with pre-computed tables of hashes + PW's
[11:11:01] <password> but if someone has liek 100 of your hasheds they still have to compute a hash from a password for each salt?
[11:11:14] <Akronymus> Yeah.
[11:12:04] *** Joins: node1 (~node1@user/node1)
[11:12:19] <password> so in that case it does help
[11:12:49] <Akronymus> Indeed.
[11:13:09] <Akronymus> Prevents most drive-by attacks.
[11:13:16] *** Quits: c705 (c705@alpine/contributor/c705) (Ping timeout: 268 seconds)
[11:13:17] <password> ah 
[11:13:44] <password> do people double salt?
[11:13:56] *** Joins: Hercules (~Hercules@user/hercules)
[11:14:52] *** Joins: phil294 (~phi@ip1f13cf74.dynamic.kabel-deutschland.de)
[11:17:31] *** Joins: audgirka (~audgirka@2402:e280:3e16:e48:d5ba:7034:2ac9:4275)
[11:17:41] *** Quits: flatlinejim (~bobmin@203.29.243.207) (Read error: Connection reset by peer)
[11:18:03] *** Quits: Akronymus (~Akronymus@85.31.8.181) (Quit: Client closed)
[11:18:43] *** Quits: Izem (~rcg@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca) (Quit: Lost terminal)
[11:18:50] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[11:19:24] <vdamewood> password: Double salting would just be a bigger salt.
[11:19:52] <password> but you can store them seperately :P
[11:20:19] <vdamewood> In that case, no, people don't double salt.
[11:21:30] <audiocat> hey vdamewood 
[11:21:39] <audiocat> what is `import config`?
[11:21:47] <audiocat> i inhreited some code
[11:22:00] <audiocat> this guy uses `import config` but there is no config.py
[11:23:00] <vdamewood> It could be somewhere else.
[11:23:22] <vdamewood> import config would also import config/__init__.py
[11:24:27] <audiocat> there is no config dir either
[11:25:18] <vdamewood> print(config.__file__)
[11:28:58] *** Joins: Izem (~rcg@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca)
[11:29:10] *** Joins: mnd999_ (~mark@2001:8b0:da3:76a2:4630:5b97:83a2:3e21)
[11:29:38] * vdamewood gives Izem an elephant.
[11:29:47] *** Joins: c705 (c705@alpine/contributor/c705)
[11:30:18] <Izem> Found another typesetter https://sile-typesetter.org/what-is/
[11:30:21] <bayaz> Title: SILE ‚Äì What is SILE? 
[11:31:04] <Izem> thanks for the gift, I'll send it to a sanctuary
[11:31:46] <vdamewood> I didn't say it was alive.
[11:32:02] <Izem> oh, gross
[11:32:23] <vdamewood> I didn't say it was dead, either.
[11:32:52] *** Joins: aradesh (~aradesh@user/aradesh)
[11:34:58] <Izem> I see
[11:35:16] <vdamewood> Actually, there's a lot I didn't say, come to think of it.
[11:36:33] <Izem> it must be some precious resource fashioned as an elephant :P
[11:37:22] <vdamewood> Cotton and Polyester?
[11:37:54] <user51> awk '{NF = 2^32}'
[11:38:01] <user51> shortest OOM i've had in a while :)
[11:38:26] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4) (Quit: WeeChat 2.8)
[11:38:27] *** Joins: Ecophobia (~Ecophobia@mobile-access-2e8466-145.dhcp.inet.fi)
[11:38:50] <Izem> vdamewood: no, like a stone or metal
[11:39:22] <vdamewood> Nope. Fluffy cotton insize, strong polyester outside.
[11:39:27] <vdamewood> inside*
[11:40:19] <vdamewood> oh, and plastic beads for the eyes.
[11:41:09] <Izem> ah neat
[11:41:24] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:43:35] *** Quits: password (~password@user/password2) (Quit: Connection closed)
[11:44:02] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Quit: Leaving)
[11:48:13] <node1> Is there anyway to find the factorial of (2^160 -1) ? i.e ( 2**160 - 1 )! ?
[11:49:44] <vdamewood> node1: brute force?
[11:49:46] <Izem> split it up
[11:50:18] <Izem> wonder what error I will get with bc
[11:50:58] <vdamewood> Python gives OverflowError: factorial() argument should not exceed 9223372036854775807
[11:51:01] <node1> No i'm just trying to find the Factorial value of it.
[11:51:21] <pavonia> The full number?
[11:51:24] <Izem> darn bc doesn't have a factorial
[11:52:13] *** Quits: Izem (~rcg@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca) (Quit: Lost terminal)
[11:52:15] <vdamewood> Looks like Python can only go up to 2**63-1
[11:52:24] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4)
[11:52:45] *** Joins: epolanski (uid312403@id-312403.brockwell.irccloud.com)
[11:53:34] <vdamewood> And it looks like math.factorial(9223372036854775807) takes a non-zero amount of time to run.
[11:53:48] <user51> theres one in the manual
[11:53:49] <node1> Well is there anyway to solve this problem with computing speed of 2 cores / 2 thread with 2.4 Ghz clock speed.
[11:55:15] <vdamewood> Damn, it's still running.
[11:55:52] <vdamewood> I give up. I don't want my system to overheat.
[11:56:15] <user51> maybe you coul just google i
[11:57:01] <user51> sometimes iw onder if those kind of things would be useful to have in a database
[11:57:45] <user51> maybe just a text file
[11:58:13] *** Joins: elnavigator (~elnavigat@105.196.131.87)
[11:58:16] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:59:12] <pavonia> node1: You can approximate it at best. What do you need that for?
[12:00:08] <node1> Just playing with maths, and i would likes to know if i can find the value of such big nuber using my small computer.
[12:00:23] <pavonia> https://en.wikipedia.org/wiki/Stirling%27s_formula
[12:00:23] <node1> Number*
[12:00:25] <bayaz> Title: Stirling's approximation - Wikipedia 
[12:00:31] <vdamewood> Google says ((2^160) - 1) ! = undefined
[12:00:38] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:00:42] <pavonia> You can't even store this number on your disk
[12:00:49] <node1> Infinity they says.
[12:00:57] <PlanckWalk> node1: No, you can't.
[12:01:02] <node1> Even if you minus with one the same value it shows
[12:01:46] <node1> I know so this shows our memory is insufficient to handel those big number not computation.
[12:02:01] <pyzozord> well that's understandable, they misspelled googol (10^100) so obviously they can't handle big numbers
[12:02:27] <PlanckWalk> The number has about 10^50 digits.
[12:03:07] <vdamewood> Sqrt(googol)?
[12:03:23] <PlanckWalk> If you could store one decimal digit on a single atom, Earth still wouldn't have enough atoms.
[12:03:45] <vdamewood> Okay, what are the first 10^10 digits?
[12:04:07] <vdamewood> I don't mind the imprecision.
[12:04:09] <PlanckWalk> I could probably work those out :)
[12:04:17] <PlanckWalk> With a fair bit of math
[12:04:22] <PlanckWalk> (Not just computation)
[12:05:29] <pavonia> "First" counting from left or right?
[12:05:37] <PlanckWalk> Something something Stirling's approximation something
[12:05:43] <PlanckWalk> Heh, right would be trivial :)
[12:06:14] <node1> Yeah i'm looking into it  i hope i will make use of Stirling's approximation
[12:07:21] <PlanckWalk> The last 10^47-ish digits are all zeroes.
[12:09:03] *** Joins: ac5tin (~ac5tin@user/ac5tin)
[12:09:20] *** Joins: inky (~inky@46.36.117.137)
[12:09:41] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[12:10:00] *** Quits: mci64 (~mci64@185.242.190.95) (Ping timeout: 268 seconds)
[12:10:13] *** Quits: inky__ (~inky@46.36.117.137) (Read error: Connection reset by peer)
[12:11:21] *** Quits: JavaBean (~JavaBean@user/javabean) (Ping timeout: 248 seconds)
[12:13:19] <node1> But the beauty is we could represent using base 16 i.e hexadecimal
[12:13:42] <mrig> Does anyone have any suggestions for light reading on an overview or bigger picture take upon the different ways that the stages of parsing can be combined?
[12:14:21] <mrig> The details tend to work themselves out somehow, wondering what might be a good way of grasping some of the different approaches?
[12:16:00] <mrig> It would seem that this is also compilation though that is not really my current objective, I seem to be pondering the process of transformation.
[12:18:15] *** Joins: Hax0r (~TP1@93.168.116.37)
[12:18:46] <mrig> My current question is whether to parse the logic for the grammar at the same time as lexing it, token by token, or whether to do that at some later stage. How to do this; it would seem that there are quite a few choices. Some of which might involve lexing a second input to simplify the process.
[12:19:46] <mrig> Though making the grammar generic and pre loadable at this stage could well be a black hole.
[12:20:39] *** Joins: juliaEnv (~mathAndRh@ip-86-49-241-245.net.upcbroadband.cz)
[12:20:50] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[12:20:59] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[12:22:00] *** Quits: audiocat (~audio@2603-8081-1800-00ad-5769-2572-6cf8-a685.res6.spectrum.com) (Ping timeout: 272 seconds)
[12:22:37] *** Joins: xcombelle (~Xavier_Co@abayonne-654-1-269-44.w92-146.abo.wanadoo.fr)
[12:23:05] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[12:23:13] <mrig> perhaps the old dragon book?
[12:24:02] *** Joins: mei (~mei@user/mei)
[12:24:39] <mrig> or even the 'art of programming' I gather that was initially written as an over view of how to build compilers.
[12:25:12] <mrig> again, this is not really for compilers as such but as a way to define transformation.
[12:25:29] *** Joins: JavaBean (~JavaBean@user/javabean)
[12:26:03] <mrig> I love that Donald Knuth started out with 12 chapters :) Think that the original plan still has a lot of merit.
[12:26:48] *** Joins: sjmulder (~sjmulder@2a02-a443-33e5-1-48f8-35ff-ca94-a6de.fixed6.kpn.net)
[12:27:11] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[12:28:27] *** Quits: phil294 (~phi@ip1f13cf74.dynamic.kabel-deutschland.de) (Ping timeout: 245 seconds)
[12:29:21] <pyzozord> I started reading intro to TAOCP and when I read "when mathematics gets familarliy complicated you are free to skip it" I decided I will skip the whole series until I get better at maths :D
[12:29:48] *** Quits: daegalus (~yulian@user/daegalus) (Ping timeout: 258 seconds)
[12:30:05] <mrig> :D
[12:30:13] *** Joins: daegalus (~yulian@user/daegalus)
[12:30:43] <user51> pyzozord: the opposite of learn/read more is that life is already short enough
[12:30:43] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[12:30:49] <mrig> math could be a distraction from something much simpler.
[12:30:57] <user51> uh, not sure if opposite is the rigth word
[12:31:13] <user51> there's also the feynman quote about explaining things
[12:31:46] *** Quits: tccki (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795) (Read error: Connection reset by peer)
[12:31:48] <mrig> user51: life has been going one for a very long time :P
[12:31:54] <mrig> on rather
[12:32:09] *** Joins: tccki (~tccki@box.webslate.co.nz)
[12:34:54] <mrig> pyzozord: do you have hard copy of it+
[12:34:56] <mrig> ?
[12:35:07] <mrig> I'm very tempted to save for this.
[12:35:54] <pyzozord> mrig: no but I do want to aquire one
[12:36:13] <mrig> I think I need another piece of code analyzing my tokes as they are fed out, can run that on another co routine.
[12:36:26] <mrig> my tokens rather.
[12:37:01] <mrig> seems like the most logical way to have another piece of code doing it and not couple them to closely.
[12:37:38] <mrig> pyzozord: seems to be one of the few works that are really that 'stable' temporally.
[12:37:49] <mrig> so hard to know with all the cruft.
[12:38:31] *** Joins: mci64 (~mci64@194.25.223.4)
[12:38:54] <mrig> Glad that I asked though, seems that asking the question has given me a great idea of how to approach the next part of my project :)
[12:39:09] *** Joins: chomwitt (~chomwitt@2a02:587:dc04:9a00:12c3:7bff:fe6d:d374)
[12:39:18] *** Joins: mikeliuk (~mikeliuk@109.249.187.96)
[12:39:34] *** Joins: nekodesu (~nano@user/nekobit)
[12:43:18] <AsenMx> Hello, is there any way to set value of variable2 to be the value of variable 1 in gitlab-ci yaml file?
[12:43:22] <sjmulder> pyzozord, I have that with SICP, love the style overall but it gets over my head real quick
[12:43:32] *** Quits: elnavigator (~elnavigat@105.196.131.87) (Ping timeout: 272 seconds)
[12:44:46] *** Quits: ac5tin (~ac5tin@user/ac5tin) (Quit: WeeChat 3.2)
[12:45:59] <piou> It's important to take your time with these books. TAOCP is inherently mathematical, but that's the whole point, to get to think as formally as possible about algorithms, otherwise there are lots of lists of algorithms elsewhere. But once you get in it it's a really rewarding experience.
[12:46:14] *** Joins: jaysicks (~jaysicks@178-164-134-171.pool.digikabel.hu)
[12:46:31] *** Joins: elnavigator (~elnavigat@105.196.131.87)
[12:47:29] <mrig> Yes am still digesting only my first 3 lectures on computational theory, takes me this long for it to resonate.
[12:48:05] <piou> sjmulder: SICP is much more approachable than TAOCP, it's a foundational course aimed at students after all, so I feel that if something goes over your head it's a good idea to take the time and discuss it with people.
[12:48:10] <mrig> am still studying math but currently sidetracked by the rumination of computational theory.
[12:48:22] *** Joins: tccki_ (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795)
[12:48:28] <mrig> sjmulder: what is SICP?
[12:48:47] <piou> Structure and Interpretation of Computer Programs
[12:48:49] *** Joins: phil294 (~phi@ip1f13cf74.dynamic.kabel-deutschland.de)
[12:49:06] <mrig> ah ok, I am not familiar with that book.
[12:49:09] <piou> That was an MIT course, and it's mostly a very *very* influencial book known for its purple cover
[12:49:30] <piou> If you're reading programming classics it's at the very top with the dragon book and TAOCP
[12:49:37] <piou> https://mitpress.mit.edu/sites/default/files/sicp/index.html
[12:49:40] <bayaz> Title: Welcome to the SICP Web Site 
[12:49:42] *** Quits: tccki (~tccki@box.webslate.co.nz) (Ping timeout: 245 seconds)
[12:49:43] *** Joins: mjbatty (~mjbatty@2a01:4c8:41e:636b:a02a:9ffa:3be8:892c)
[12:49:45] <merijn> hot take: dragon book is overrated in 2021
[12:49:56] *** tccki_ is now known as tccki
[12:50:31] <CuriousErnestBro> merijn that's about compilers right?
[12:50:31] <mrig> merijn: for simplifying the optimising compiler cruft to get to basics of compilation could it be useful?
[12:50:35] *** Joins: Rounin (~david@84.212.130.215)
[12:51:15] <mrig> I'm looking for a big picture overview to avoid rabbit holes. Tend to work out details by looking at the bigger picture.
[12:52:34] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[12:52:37] <merijn> CuriousErnestBro: It's about compilers yeah, but mostly about the parsing bits
[12:52:48] *** Joins: ekathva (~ekathva@93-90-58-246.welcomnet.fi)
[12:53:11] <CuriousErnestBro> cool, not something I'm interested in tho
[12:53:18] <piou> mrig: the approach of SICP is to start with functionnal programming (it's all in scheme), see what kind of problems it can solve, what complexity is about, then introduce mutations, then how to deal with managing side effects notably in conccurent applications, how to build an object system, how to build an interpreter, how to build a compiler, how to build different kind of languages that have
[12:53:24] <piou> different properties (for example a prolog clone). It goes from physical problems (solving some differential equation by computation is one of the first things you do - and in a very simple approach) to getting you to think deeply about what a language is, what it proposes, what are its charateristics and how to design your own tools to achieve what you want.
[12:53:25] <merijn> mrig: I would say it's the opposite, it dives very deeply into the rabbit hole of parsing, because at the time parsing was *hard*
[12:53:31] <merijn> We know much more about parsers know
[12:53:45] <CuriousErnestBro> btw merijn since you're a computer scientist, I liked the paxos paper, do you recommend anything else from distributed algorithms?
[12:53:57] *** Joins: Akronymus (~Akronymus@85.31.8.181)
[12:54:13] <mrig> merijn: I'm not looking to lean how to use parser generators though.
[12:54:16] <merijn> CuriousErnestBro: tbh, you'd be better of getting Andrew Appel's "Modern Compiler Implementation in X" book(s) (where X is Java/C/ML)
[12:54:37] <merijn> mrig: You should, because people are bad at writing fast parsers :p
[12:54:43] <CuriousErnestBro> uh... did you mean to tag me?
[12:54:43] *** Quits: mjbatty (~mjbatty@2a01:4c8:41e:636b:a02a:9ffa:3be8:892c) (Quit: Leaving)
[12:55:00] <merijn> CuriousErnestBro: Ah, wait, I missed the "not" before interested xD
[12:55:02] *** Joins: mjbatty (~mjbatty@2a01:4c8:41e:636b:a02a:9ffa:3be8:892c)
[12:55:07] <CuriousErnestBro> yeah lol 
[12:55:09] <mrig> merijn: I am interested by transformation, not be generating efficient code.
[12:55:14] <mrig> that's my point here.
[12:55:25] <merijn> mrig: Right, but the *interesting* transformation bits are *after* parsing
[12:55:49] <merijn> Parsing is just the mandatory step you need to do before you can get to the interesting transformation stuff :p
[12:56:23] *** Quits: phil294 (~phi@ip1f13cf74.dynamic.kabel-deutschland.de) (Quit: phil294)
[12:57:02] <mrig> piou: Sound very cool, probably not directly what I'm after at the moment though; I need really basic over view of the principle techniques.
[12:57:20] <piou> mrig: what principle techniques?
[12:57:24] <mrig> merijn: seems to me that the entire process is about transformation, and different ways of achieving it.
[12:59:27] <mrig> piou: well in the code that I'm writing at the moment I am wondering where or at which stage to inject the grammatical rules, and also whilst lexing, how much 'type' to create at which point, which is I suppose also in many ways related to the grammar.
[13:00:06] <mrig> It seems that there are different ways to slice up the ingredients, and mix them together.
[13:00:09] *** Trieste_ is now known as Trieste
[13:00:09] <piou> Yeah, SICP clearly isn't the book for that, it's a much more foundational book
[13:01:58] <piou> merijn: I like writting LR parsers when I need to parse something... But at the first sign of weakness I switch to a parser generator
[13:02:01] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 248 seconds)
[13:02:11] <mrig> I'm kinda intrigued by the logic behind that, I suppose more wax on and wax off is going to be the best solution, try it and see.
[13:03:02] <mrig> piou: I think that makes sense in my current situation, seem to be considering a parser generator, but want to stop myself from going there.
[13:03:52] *** Quits: hexnewbie (~hexnewbie@user/hexnewbie) (Ping timeout: 268 seconds)
[13:03:53] <Trieste> Hum. So my problem is I am parsing "dirty data" - sometimes the field I'm looking for is named differently, sometimes multiple string fields are joined together, etc. Is there something like... "fuzzy parsing"? As in, on one end I could just write 100s of "ifs" for each case I encounter, on the other I have ML/NNs (I guess) - is there something in between?
[13:03:58] <mrig> Perhaps something the describes the different parser types? I'm most likely getting way ahead of myself, and would like to read something to stop the 'hunch' distractions.
[13:04:02] <merijn> piou: I mean, I'm not saying people shouldn't learn about parsers, etc.
[13:04:10] <Trieste> (I don't really expect to *solve* my problem per se, I'm just wondering if there even is an approach like that)
[13:04:42] <merijn> piou: It's just that when it comes to teaching compilers, I think "semantics preserving transformation" and separating the "semantics of code" and "how to implement those semantics" are the interesting/most educational bits
[13:04:50] <merijn> piou: And parsing is just a hurdle to get there
[13:04:56] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:05:08] *** Quits: elnavigator (~elnavigat@105.196.131.87) (Ping timeout: 256 seconds)
[13:05:18] <merijn> By all means, study parser generation and handwriting parsers, but if you care about transformation, you'll be more motivated if you do the *interesting* bit first :p
[13:05:50] *** Joins: Burgundy (~yomon@5-12-93-72.residential.rdsnet.ro)
[13:06:50] * Trieste just realized he accidentally butted into a conversation about *actual* parsing
[13:07:17] <mrig> motivation is not something that I have any issue with, quite the contrary, need to stop my keen imagination from wandering off on 'hunches' as to ways to solve the problems at hand; Would really like to have a set of best practices.
[13:08:02] <mrig> not interested by 'use this code because' as I learn nothing and then have a large black box in my mental model which is really ugly :D
[13:08:14] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[13:08:15] *** Joins: snake (~snake@user/snake)
[13:08:23] <mrig> and very difficult to think around.
[13:08:27] *** Joins: plastico (~plastico@neomutt/plastico)
[13:08:31] *** Quits: mjbatty (~mjbatty@2a01:4c8:41e:636b:a02a:9ffa:3be8:892c) (Quit: Leaving)
[13:08:40] <merijn> mrig: I mean, you really can't use "parser generators" as black box, tbh
[13:08:50] *** Joins: mjbatty (~mjbatty@2a01:4c8:41e:636b:a02a:9ffa:3be8:892c)
[13:09:14] <mrig> seems that you end up struggling with error handling too.
[13:09:19] *** Joins: hexnewbie (~hexnewbie@user/hexnewbie)
[13:09:27] <merijn> mrig: They are not magical tools, and you still have to think about how to structure your grammar and what your grammar is
[13:09:28] <mrig> when you use them, it breaks the logical flow somehow
[13:10:03] *** Quits: mjbatty (~mjbatty@2a01:4c8:41e:636b:a02a:9ffa:3be8:892c) (Client Quit)
[13:10:27] <merijn> mrig: Parser generators simply take a grammar and code for creating an AST and then generate all the boilerplate for taking a whole text and building a whole AST
[13:10:45] <user51> i wonder if it would just better be done interactive
[13:11:12] <piou> Trieste: sounds like your best approach is to try and canonicalize (ie:¬†transform all inputs into the same representation). Another approach would be statistical, either by using real statistics (I think you could wind up a bayesian network to try and identify what probability something has to be any given kind of field) or by producing lots of examples to train a neural network to recognize
[13:11:13] <mrig> right, I'm just pondering at the moment whether to generate ast for verification purposes or whether to make simple lookup tables.
[13:11:18] <piou> those. And these techniques may provide finer results than canonicalization, but if your input is ambiguous your output will always contain ambiguity and errors. Garbage in garbage out.
[13:11:27] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[13:11:30] <mrig> as the data being parsed is not that complicated.
[13:11:47] *** Joins: Pickchea (~private@user/pickchea)
[13:11:56] <mrig> the input is pretty sane, but it would be nice to write nicely formed error messages from it.
[13:12:11] <mrig> could have used regexp for this, but decided not to.
[13:12:26] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[13:12:33] <mrig> Am juggling these thoughts at the moment.
[13:12:51] <mrig> ruminating upon the best course of code action.
[13:13:03] <sjmulder> re. SICP (sorry, was working), I found you indeed to have to read carefully and going over things again can do wonders
[13:13:16] <sjmulder> but the math examples, arg
[13:13:52] <Trieste> piou: right, canonicalization was where I was kind of heading towards, but the way I see it, that necessarily throws away information... But I don't know how to meaningfully process that info either way :/
[13:13:52] *** Quits: audgirka (~audgirka@2402:e280:3e16:e48:d5ba:7034:2ac9:4275) (Ping timeout: 245 seconds)
[13:14:07] *** Joins: Tazmainian (~Tazmainia@41.193.169.28)
[13:14:27] <mrig> I'm a bit of a bar stormer, get the directions from reading sign posts in place; I'm really looking for a general map without all the delightful complexities ;)
[13:14:31] <piou> Trieste: I mean, either your input follows rules, or it doesn't and in that case you're not going to wind up a process that doesn't make mistake and lose information at some point.
[13:14:40] <mrig> barnstormer rather.
[13:14:49] <piou> Trieste: maybe if you could be more clear about what data your manipulating a better solution would emerge?
[13:15:02] <Trieste> And I'll look into bayesian networks (don't want to dive into NNs just yet), any pointers where to start? :)
[13:15:46] <piou> Not really, sorry. I think NN might be more approachable really given all the libraries that can be used in black box "train on that then tell me what you think about this"
[13:16:33] <mrig> Rally cool subject anyhow, am totally smitten :D
[13:16:38] <mrig> really
[13:16:58] <mrig> love the way that it leads to Fourier transformation.
[13:17:38] <mrig> Viz Donald Knuth's 12 chapters.
[13:18:03] *** Quits: rany (~rany@user/rany) (Ping timeout: 268 seconds)
[13:18:38] <mrig> Initial idea of 12 chapters rather.
[13:18:58] <Trieste> piou: Yeah I realize it's kind of an intractable problem - the thing is the data follows *some* rules, but only *sometimes*. It makes sense in my head that even if the field name says, for instance "description" (but is actually the "title", which on this object is empty), it would still be worth keeping that info because it's... a string meant for display? I dunno, feels like there should be a way to encode these rules somehow without going full 
[13:18:58] <Trieste> machine-learning, but maybe not.
[13:19:05] *** Quits: dermato (~dermatobr@154.21.23.75) (Ping timeout: 248 seconds)
[13:19:13] <sjmulder> re TAOCP - is it the sort of book you'll want all volumes of, or are the later ones more niche?
[13:19:34] <sjmulder> (my wife is lookign for a ~100-200 eur gift, the boxset might make a nice one)
[13:20:41] <Trieste> piou: The data I'm manipulating *right now* is just an ugly HTML table that's 99% a result of some Word conversion and happens to contain structured data. But I realized I saw a similar problem while dealing with multiple incompatible JSON formats, so it got me wondering
[13:21:38] <piou> Trieste: I mean, it's really hard to get precise without actually seing your problem, but is there a point during parsing where you can say "ok, that must not be it because it doesn't make sense now"? For example because you realize you don't have enough fields? In that case you could maybe have a probabilistic approach : this has 60% to follow the rule, I'll act as if it did for the moment, arg,
[13:21:43] <user51> what's the next best thing after TAOCP
[13:21:44] <piou> at that point it doesn't work anymore, let me get back to the last point where I made a choice and take the second more probable thing
[13:21:51] <piou> user51: for what?
[13:22:06] <piou> Trieste: definitely not applicable to all cases but maybe it can be done for yours?
[13:22:07] <mrig> I'd love to find a library that has a set, take the time to go and study it a while before adding to my own library.
[13:22:10] <user51> for whatever people read TAOCP for
[13:22:39] <user51> we need a programming book tier list
[13:23:08] <sjmulder> user51, then you get into transcendental divine mathematical philosophy
[13:23:50] <sjmulder> kidding aside, I'm particular to Petzold's Programming Windows, 5th ed
[13:23:54] *** Joins: matt_ (~matt@adsl-74-233-58-121.mia.bellsouth.net)
[13:24:16] <sjmulder> It's not a fundamental work or anything but it's a classic in its own right
[13:24:17] <user51> never heard of that one.. now i'm intrigued. tell me why.
[13:24:22] *** Joins: elnavigator (~elnavigat@105.196.50.210)
[13:24:28] <sjmulder> just the definitive guide on Win32 programming, even now
[13:24:47] <sjmulder> head and shoulders above its contemporaries
[13:24:53] <merijn> user51: Depends what you care about
[13:24:57] *** Quits: matt|home (~matt@adsl-74-233-58-198.mia.bellsouth.net) (Ping timeout: 248 seconds)
[13:25:07] <merijn> I couldn't really make a tier list, because it depends on your goals
[13:25:30] <sjmulder> (I collected the Windows 2 and Windows 3.1 editions of that book too, it's interesting to see the evolution, and required if you ever want to do win16 programming. uh...)
[13:25:37] <merijn> Also, while TAOCP is an astonishing piece of art, I don't think it's the most useful book to read as beginner/intermediate programmer
[13:25:47] <sjmulder> merijn, all parts?
[13:26:09] <sjmulder> I see Knuth has a bunch planned still but isn't he getting a bit older by now
[13:26:18] <user51> ok, maybe this is a better question:  how much better is the programmer that reads TAOCP than the one who doesn't?
[13:26:18] <merijn> sjmulder: You need a certain level of mathematical maturity to appreciate/understand TAOCP, which many beginner programmers don't have
[13:26:45] <merijn> user51: Well, for one, TAOCP isn't written to be read front to back
[13:26:54] <sjmulder> merijn, iirc you studied at UVA or VU right? I went to HvA and tbh it was kinda shit on the fundamentals
[13:27:04] <merijn> TAOCP is written to be a comprehensive *reference*
[13:27:23] *** Joins: entuland (~entuland@user/entuland)
[13:27:27] <merijn> You don't read TAOCP, you realise "shit, I have a sorting problem, lemme grab TAOCP and read up on the details I forgot"
[13:27:45] <sjmulder> oohh gonna need that before this year's Advent of Code
[13:27:48] <merijn> sjmulder: Just VU, but I did (am doing? >.>) my phd at UvA
[13:28:04] <user51> merijn: i wonder how TAOCP compares to Just Google It
[13:28:13] <sjmulder> merijn, I think it was my mistake not to do proper CS
[13:28:16] <merijn> Google is full of trash answers :p
[13:28:59] <merijn> user51: The point of TAOCP is that is *definitive*, it's collecting all the CS research that's been done and established and writes it down into one place to easily find
[13:29:02] <sjmulder> or worse, Quora. "Sign up to read Donald's answer to: ..."
[13:29:03] *** Quits: mci64 (~mci64@194.25.223.4) (Quit: Connection closed)
[13:29:12] <user51> merijn: NOW that sounds exciting
[13:29:19] <merijn> user51: If you wanna know a book that makes you a better programmer, I'd personally recommend something else entirely, tbh
[13:29:53] <merijn> I'd recommend the (freely available!) "Software Foundations" book series: https://softwarefoundations.cis.upenn.edu/
[13:29:54] <bayaz> Title: Software Foundations 
[13:30:18] <merijn> user51: That's actually written for (under)grad students to learn a lot of the basics of (theoretical) CS
[13:30:27] <sjmulder> should've called it: Computer Science, the First Assessment Report: The Algorithmic Basis
[13:30:35] <sjmulder> etc
[13:30:36] <user51> any books about practical cs?
[13:30:58] <sjmulder> that'd be software engineering right, not really CS?
[13:31:01] <pyzozord> I'd actually like to /read/ TAOCP, or at least skim, once. Just to have an idea of what's possible
[13:31:02] <merijn> user51: Thinking theoretical CS is not *practical* is programmer problem number one, IMO
[13:31:08] <sjmulder> Mythical Man Month remains a classic but you can skip over the System/76 bits
[13:31:39] <sjmulder> more about software projects really
[13:31:56] *** Joins: v0id_ptr (~longlong@user/ptr-frac7al/x-0038398)
[13:32:36] <merijn> user51: My degree was about 50% theoretical CS and 50% HPC/distributed stuff, and I can tell you that I don't regret that theoretical half one bit. There's value in learning stuff that applies to anything, regardless of language/framework/machine of the day
[13:33:47] <piou> My list would be... SICP, Game Programming Design Patterns, TAOCP, 500 lines or less, Don't Just Roll the Dice, Security Engineering, Computer Networks (by Tanenbaum).
[13:34:24] <piou> I quite liked the dragon book but it doesn't make my list, I just don't think people would benefit as much from reading it as any book in the list.
[13:34:58] <piou> TAOCP barely makes the cut because it's so dense, but at the same time it's so fundational and good.
[13:35:07] <sjmulder> 500 lines looks interesting
[13:35:17] <user51> why not 512 =/
[13:35:17] <piou> It's a very fun and inspiring book
[13:35:38] <user51> and when did lines become a metric :P
[13:35:39] <sjmulder> user51, 12 lines for the license header
[13:36:10] <piou> It's worth noting that of this list, SICP, Don't Just Roll the Dice and Game Programming Design Pattern are available for free legally in some form or another.
[13:36:57] *** Joins: Hercules` (~Hercules@user/hercules)
[13:37:16] <piou> user51: it's about expressing ideas concisely along the idea that 80% of a useful program can be done with very few lines demonstrating the concept in order to expose you to many different yet pallatable ideas.
[13:38:32] <sjmulder> wat the current dragon book edition lacks a dragon
[13:38:59] <piou> Nearly half my list is about books that aren't, per say, about programming. But I think understanding how programs and IT services are marketed and sold is important, as well as knowing about networking and naturally security which are very important concepts for any developper that I'm shocked aren't covered in most "programmer must read" lists.
[13:39:26] <piou> Like, who doesn't have to deal with security or networking in some form or another nowadays?
[13:40:05] <sjmulder> security - rust programmers?
[13:40:20] <piou> rust doesn't solve all security issues, far far from it
[13:40:25] *** Quits: Hercules (~Hercules@user/hercules) (Ping timeout: 248 seconds)
[13:40:45] <piou> it solves what it can and that's nice but it's not just about memory safety
[13:41:31] <piou> Rust can't help you if you mess up your cryptography, or if you simply forget to require authentication for that very sensitive page on your website
[13:41:47] <piou> (I realize it was probably a jest, but you never know on the internet)
[13:41:53] *** Joins: audgirka (~audgirka@2402:e280:3e16:e48:931c:87ae:1f48:5683)
[13:42:00] <sjmulder> yeah :) but you say it well
[13:42:34] <mrig> user51: what is the point in making 'betterness' comparisons when discussing computational theory?
[13:42:58] <mrig> that would get you thrown out of certain archery classes :p
[13:43:40] <mrig> merijn: interesting to hear you describe The art of computer programming in that way, makes it seem all the more appealing and somewhat less daunting.
[13:44:03] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Quit: WeeChat 3.2)
[13:44:46] <mrig> piou: cool if you think that it is up there still too, seems that it could be the resource that I'm after, I've no idea how the math in it is written though, I find most math really easy when it is well explained, but am not so very good at the formal learning part.
[13:45:12] <mrig> the way that math is compiled is often an issue for me.
[13:45:26] <mrig> I need a math decompiler.
[13:45:32] *** Quits: daegalus (~yulian@user/daegalus) (Quit: WeeChat 3.1)
[13:46:23] <piou> mrig: well, I must admit that I'm pretty biased toward theory. And it would be lying to say that TAOCP is an easy book, or not very mathematical. I think you can get value out of it even without the maths, but it's going to be a fraction of what the book has to offer.
[13:46:29] <mrig> Curiously enough, this is exactly why I'm writing code to parse svg at the moment :|
[13:46:46] <piou> Not saying you shouldn't read it, but I'd rather you approach it with an honnest look
[13:46:52] <mrig> piou: I do have a very mathematically oriented mind though.
[13:48:02] <mrig> Again, if only there were a library with it :|
[13:48:44] *** Quits: Ecophobia (~Ecophobia@mobile-access-2e8466-145.dhcp.inet.fi) (Quit: Leaving)
[13:48:52] <mrig> funny just how easy math is whey you remove the serialisation cruft.
[13:48:57] <mrig> when.
[13:49:15] *** Joins: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk)
[13:49:15] *** Quits: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk) (Changing host)
[13:49:15] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[13:51:24] *** Joins: dermato (~dermatobr@154.21.23.75)
[13:51:30] <piou> Yeah, there have been lots of studies that show that mathematicians really don't think about math as they're presented on paper, but when they need to communicate these ideas precisely to others all the creativity, the emotion, the surprise, the tears get sweeped under the rug of formal mathematical writting.
[13:51:58] <piou> (And aside from studies, just asking a mathematician shows so)
[13:53:25] <mrig> Yes, such a cool subject for that.
[13:53:45] <mrig> I sometimes wish that i'd been sent to some math boarding school :D
[13:54:02] <mrig> clearly do need to learn the tedious part of it.
[13:54:15] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[13:54:49] <mrig> Also to make used of thought by better expressing it must be a wonderful experience.
[14:02:01] *** Joins: federico_it (~textual@151.95.116.125)
[14:02:20] <mrig> Though that said, the different projects that I've been working on in parallel do seem to be converging at the moment, not sure that I would have had this experience learning in any other way; It would be a colourless world if we all learned in the same way.
[14:05:14] *** Quits: snake (~snake@user/snake) (Ping timeout: 272 seconds)
[14:08:26] *** Quits: kwilczynski (sid379192@user/kwilczynski) ()
[14:09:13] <pyzozord> piou: oh that's interesting
[14:11:16] *** Joins: Ayaya6sins (~Ayaya6sin@114.79.5.143)
[14:11:37] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[14:11:46] <pyzozord> I think there is some folklore about mathematicians being smarter and maybe they just try to live up to that. In practice I mostly think that pretty much variaintions in inteligence between humans are negligible and besides we don't even know what inteligence really is besides IQ which is like meh. Beefy cpu is worth nothing with bad software
[14:12:51] *** Quits: Ayaya6sins (~Ayaya6sin@114.79.5.143) (Client Quit)
[14:13:18] <piou> What do you mean "live up to that"? By writting mathematical papers using formal language?
[14:14:56] <pyzozord> Even with a beefy cpu and good software, granted you can move mountains, but you need to want to do the right thing and actually do it. And even if you checked all those boxes there is nothing inheritly more valuable about you than a next person. At least in my opinion. No point comparing with anyone else other than your past self.
[14:15:20] *** Joins: rany (~rany@user/rany)
[14:15:24] *** Quits: v0id_ptr (~longlong@user/ptr-frac7al/x-0038398) (Ping timeout: 256 seconds)
[14:15:36] <piou> So, I read your words, I understand the sentences, but I see no connection to what was discussed before.
[14:15:37] <pyzozord> piou: no, paper is vehicle for information. I'm talking more about the attitude
[14:16:03] <pyzozord> Oh yeah this could be out of context, haven't been following the discussion, sory
[14:16:26] <piou> I don't think mathematician are trying to make their field unintelligible, or at least not more than the typical jest that programmers also do when talking about computers with non-computer people.
[14:16:29] <pyzozord> just my opinion about "mathematicians tears sweeped under the rug"
[14:17:01] <Arahael> every field is full of people trying to sound smart by using buzzwords, jargon, and general fluff.
[14:17:26] *** Joins: lunarkitty (uid501895@user/pyra)
[14:17:49] <pyzozord> At least in programming I noticed in other people, and also with myself, I'd sometimes show off me knoweledge and skills and cleverness in the code just to gain some respect from my peers, even if it was to the detriment to the code's simplicity and clarity
[14:18:29] <pyzozord> yeah Arahael said it much better
[14:18:52] <piou> Oh, that I think everybody does, that's a bad human habit. I just don't think mathematicians do it more than any other field. I do think however that many people that are not mathematicians build between themselves a wrong idea of what mathematicians do.
[14:20:10] <pyzozord> I'd argue that mathematicians have a bit more incentive to do it, since their field is surrounded by that aura of cleverness. Programmers too but to a lesser extent. But in general the difference is probably negligible between these fields and other fields. Yeah just ugly human habit
[14:20:22] <piou> For example the fact that it's very common to start talking about an unprovent work just because we have an intuition of how it can be proven and it feels easy. That's something mathematicians do a lot, that's just how the community works, and people will even do conferences to explain where they are in a proof even though nothing's actually proven yet.
[14:20:49] *** Joins: mjbatty (~mjbatty@82.2.17.205)
[14:21:00] <piou> I'm sure most people don't imagine mathematicians do that since they're taught from an early age that mathematics is all about this strong pyramid of proofs
[14:21:20] <piou> But I don't think mathematicians have more of an incentive to do it between them than any other field.
[14:21:23] *** Joins: JimmyRustles (~Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net)
[14:21:38] <piou> s/it/pass themselves for smarter than they are/
[14:21:47] *** Joins: fweht (uid404746@id-404746.tooting.irccloud.com)
[14:22:54] <piou> Every mathematician knows how reliant these things are on intuition, how hard it is to search without finding the correct approach or knowing if there really is one, and maths is definitely too big to know everything so everyone's an expert in their own field.
[14:23:35] *** Joins: a6a45081-2b83 (~aditya@223.226.228.68)
[14:23:48] <mrig> Love Rodger Penrose, I like to think that he would be my ideal math teacher :)
[14:24:27] <mrig> probably would learn some maths too.
[14:24:59] *** Joins: Ayaya6sins (~Ayaya6sin@114.79.5.143)
[14:24:59] <mrig> For one we have the same philosophical perspective, I think this is crucial.
[14:25:14] <mrig> I get treated like an idiot by most math buffs.
[14:25:32] <mrig> Which is somewhat of a dampener.
[14:26:13] <mrig> How to douse the flames of a burning desire to learn in one easy step :D
[14:26:43] <pyzozord> there is that famous experiment about how culture gets perpetuated even when the reason was long gone https://www.youtube.com/watch?v=y-PvBo75PDo
[14:26:59] <piou> That said, there have been plenty of cocky and arrogant mathematicians. One of my favourite is John Nash (that you may know from A Beautiful Mind). Once he was asked to solve a difficult issue of thermodynamics by a colleague mathematician. The problem was out of his main field so he didn't know how important a problem it was and didn't want to waste his time, so what he did is that he announced
[14:27:05] <piou> a few days later that he had solved it. When he saw the excitement and consternation of his colleagues he realized that the problem was the real deal and decided to solve it for real. Which he did, by slowly integrating everything he could about the field, by leveraging lots of colleagues from Princeton for specific parts of the proof and by inventing a completely new approach. Smart guy. When he
[14:27:05] <pyzozord> I think maybe those mathematicians who went through that "trial of fire" then are now perpetuating it
[14:27:11] <piou> got the Nobel Prize in Economy for the Nash equilibrium, the first thing that was said when announcing him to the stage for a speech was that this Nobel was given for the least of his accomplishments, and that's probably true.
[14:27:31] <piou> pyzozord: what "trial of fire"?
[14:27:48] <pyzozord> piou: I was referring to the treatment mrig says he often gets
[14:28:04] <piou> Oh, I see.
[14:28:05] *** Joins: paulo_ (paulo@jujube.ircnow.org)
[14:28:28] <mrig> pyzozord: I have had the experience again twice in recent years :)
[14:28:45] *** Quits: paulo_ (paulo@jujube.ircnow.org) (Client Quit)
[14:28:59] <mrig> Which is good, as it removes any doubts that I might have that I could have done things differently in my childhood.
[14:29:03] <mrig> :D
[14:29:08] <mrig> tis what it is.
[14:29:24] <pyzozord> I think the most pitifull is when people try to inflict that on other people on irc just to feel better about themselves. There is no point it's just strangers on the internet anyway, noone will care
[14:30:22] <mrig> John Nash, is a wonderful example of how the Indian science of time can be applied to understand our world; I will write this up someday.
[14:30:26] <pyzozord> arguing with strangers on the internet has no point if you are not looking to learn something new. The status you can "win" is worthless and gone tomorrow
[14:30:40] <mrig> A very pertinent example.
[14:30:47] <pyzozord> *learn something new, or help someone else learn something new
[14:30:50] <piou> To me being able to explain a difficult concept to a novice is the ultimate proof that you really understand what you're talking about. So I never shy away from an occasion to show intelligence by taking the time to properly explain things even if it can be daunting at first.
[14:31:31] <piou> Not to say that I always reach what I wanted to though ^_^ But that's often an issue on my part.
[14:31:53] <GeDaMo> Trying to explain something to someone can make it clear to yourself that you don't understand it :P
[14:32:18] <pyzozord> yeah that's true as well, there is a saying that the best way to learn something is to teach it, or something like that
[14:32:28] <mrig> pyzozord: superb vid :D
[14:32:30] <piou> I absolutely second that
[14:32:47] <pyzozord> mrig: yeah it's a good one :)
[14:32:50] <piou> that being the teaching method
[14:33:22] * piou shouldn't try to express coherent ideas while making lunch
[14:33:31] *** Quits: Hercules` (~Hercules@user/hercules) (Quit: Leaving)
[14:34:28] *** Joins: Mangy_Dog (~Mange@user/mangy-dog/x-7397214)
[14:35:43] <mrig> piou: are you decorating your logic with food stuffs? :D
[14:35:54] <paulo> piou: what are you making?
[14:37:25] *** Quits: Akronymus (~Akronymus@85.31.8.181) (Ping timeout: 246 seconds)
[14:37:31] *** Joins: v0id_ptr (~longlong@user/ptr-frac7al/x-0038398)
[14:37:34] <user51> GeDaMo: hm. i wonder if i can explain c arrays.
[14:37:47] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[14:39:05] <piou> paulo: well, given how things are going I think I'll be making Domino's Pizza
[14:39:26] <GeDaMo> I don't have a clear mental model of how C lays multidimensional arrays out in memory so I tend to stick to single dimensional arrays
[14:40:08] <user51> thing is, if you want to explain something it might be better to build off existing models
[14:40:21] *** Joins: Akronymus (~Akronymus@85.31.8.181)
[14:40:35] <d3x0r> z * maxy*maxx + y * maxx + x
[14:40:48] <d3x0r> each includes the full dimension fo the things after it... 
[14:41:24] *** Joins: gargus__ (~user@124-150-74-109.tpgi.com.au)
[14:41:34] <piou> user51: I don't think there's an issue with that as long as it doesn't fall into the trap of most vulgarization, which is to discuss a metaphor at length then make a vague link to the actual problem you're trying to explain leaving out all interesting and practical details
[14:41:47] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[14:42:57] *** Quits: bpmedley (~bpmedley@69-174-155-1.bltnilaa.metronetinc.net) (Ping timeout: 268 seconds)
[14:42:58] <piou> I hate vulgarization that just goes on and on by repeating made up ideas (quite often plain wrong) where you leave by realizing that you've learned nothing about the topic
[14:42:59] *** Joins: gargus (~user@124-150-74-109.tpgi.com.au)
[14:43:01] <d3x0r> GeDaMo https://medium.com/@ericaliu93/tensorflow-what-are-tensors-and-how-are-they-used-in-machine-learning-2787fb6416cb  (has images of tensors, which are generic flat arrays that can map to N dimensional arrays.... can kinda skip to about 1/2 down
[14:43:05] <bayaz> Title: Tensorflow‚Ää‚Äî‚Ääwhat are tensors and how are they used in Machine Learning? 
[14:43:41] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:44:11] <GeDaMo> I know what multidimensional arrays are :P
[14:44:25] *** Quits: gargus_ (~user@124-150-74-109.tpgi.com.au) (Ping timeout: 248 seconds)
[14:45:03] <d3x0r> then that's how they're implemented too
[14:45:32] *** Quits: gargus__ (~user@124-150-74-109.tpgi.com.au) (Ping timeout: 245 seconds)
[14:45:54] <GeDaMo> There are different ways of laying them out in memory
[14:45:59] <pyzozord> I think GeDaMo was referring to specific memory layout C generates for them
[14:46:16] <Akronymus> GeDaMo As in continuous allocated memory or array of arrays?
[14:46:32] <GeDaMo> Continuous
[14:46:32] *** Quits: federico_it (~textual@151.95.116.125) (Quit: Textual IRC Client: www.textualapp.com)
[14:46:41] <Akronymus> So [n,m]?
[14:46:49] <GeDaMo> I can picture an array of pointers to arrays easily enough
[14:46:51] <Akronymus> Rather than [n][m]?
[14:47:14] <user51> https://i.stack.imgur.com/AIzil.png
[14:47:15] <bayaz> Type: image/png Size: 7.4 kB 
[14:47:17] <d3x0r> then the blocks just stack next to each other.
[14:47:18] <mrig> GeDaMo: oh does it effect how the memory is used when you use the [25][25] int type notation?
[14:47:24] <user51> cursed whitespace
[14:47:24] <pyzozord> this is my extent of the understanding of the subject https://www.youtube.com/watch?v=DfK83xEtJ_k
[14:47:32] <pyzozord> so I always imagine everyone lays it out like that
[14:47:37] <Akronymus> mrig of course it does.
[14:47:52] <Akronymus> Because it is double indirection
[14:48:04] <d3x0r> but there's no pointer content.
[14:48:10] <d3x0r> it's just a offset from a known start
[14:48:11] <mrig> oh right yes 25 blocks of memory that are 25 long?
[14:48:17] <Akronymus> Yeah
[14:48:23] <mrig> rather than one lump
[14:48:45] <Akronymus> [n,m] and [n][m]  are VERY different
[14:48:48] <d3x0r> 5x5... is easier to start that's just 25 cells in a row from 0 5 10, ... (n*5)+m
[14:48:52] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[14:49:10] <d3x0r> Akronymus :) yes but this is C so 
[14:49:18] <d3x0r> n,m would just be using the m value
[14:49:22] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:49:42] *** Quits: chomwitt (~chomwitt@2a02:587:dc04:9a00:12c3:7bff:fe6d:d374) (Ping timeout: 245 seconds)
[14:49:46] <Akronymus> Pretty sure compilers convert [n.m] to [n*offset+m]
[14:49:55] <GeDaMo> https://en.wikipedia.org/wiki/Row-_and_column-major_order
[14:49:55] <bayaz> Title: Row- and column-major order - Wikipedia 
[14:50:06] <mrig> Akronymus: sounds ideal for concurrent code :p
[14:50:08] <d3x0r> n.m is often illegal... but is again just a single value
[14:50:19] <d3x0r> 123.145 doesn't work
[14:50:27] *** Quits: Stryyker (~stryyke1@about/windows/staff/stryyker) (Remote host closed the connection)
[14:51:19] <user51> http://sprunge.us/PoQ0I5
[14:51:26] <user51> GeDaMo: some syntax for you :P
[14:51:31] *** Quits: s0berage (~s0berage@135-23-213-77.cpe.pppoe.ca) (Quit: Leaving)
[14:51:32] <Akronymus> Huh, seems I was wrong.
[14:51:34] <Tazmainian> Hi all, when doing validation on models you receive in your API on a post request, is it better practise to fail early, or gather all errors and then return everything that is wrong to the user, vs returning as soon as you hit an error ? 
[14:51:38] <GeDaMo> I know the syntax too
[14:51:44] <Akronymus> Was thinking c# syntax.
[14:52:15] <user51> oh, damn.. well, someone will probably go wtf at that :D
[14:52:16] <d3x0r> ya, c# actually treates it as arguments to a get function
[14:52:19] <pyzozord> Tazmainian: that's product design decision. What do you want your user experience to be?
[14:52:42] <Tazmainian> pyzozord, well it's up in the air lol. So wonder what is better 
[14:52:44] <Akronymus> Tazmainian like so many things: It depends
[14:53:07] <pyzozord> Tazmainian: I think most people prefer to see all the error at once that saves them from correcting one thing, clicking again and seeing another bug
[14:53:11] <pyzozord> s/bug/error
[14:53:31] <Akronymus> For forms and such, I'd probably gather up errors.
[14:53:35] <d3x0r> or seeing the error immediately as you get the onblur
[14:53:37] <Tazmainian> but that incurs more processing on your end 
[14:53:41] <mrig> Akronymus: well it is always good to check the language specification when dealing with memory in any language, where concurrency is concerned.
[14:53:48] <Tazmainian> well this is a json model sent up
[14:53:58] <Akronymus> For something like an API, I'd probably go with fail fast
[14:54:03] <mrig> C is no better or worse than any other language in that regard.
[14:54:04] <pyzozord> Tazmainian: users don't care more about thier time than their cpu's time
[14:54:14] <pyzozord> err, remove "don't"
[14:54:14] <Tazmainian> lol true 
[14:54:23] <Akronymus> CPU time is CHEAP
[14:55:21] <Tazmainian> sure :/ until you go cloud lol 
[14:55:33] <pyzozord> Tazmainian: user's needs always should come first. The product is build to solve specific need for users, that's it's main goal, everything else should support that idea
[14:55:36] <sjmulder> or you want to run more than just a gropu chat program on your computer
[14:55:49] <Akronymus> The cloud is just someone elses computer
[14:55:56] <Tazmainian> pyzozord, in this case its another api sending the info, but it will go back to the ui 
[14:56:10] <Akronymus> And tbh, scaling shouldn't be your concern 
[14:56:17] <Akronymus> Getting a product off the ground should be
[14:56:25] <Akronymus> Scaling can come later
[14:56:42] *** Joins: Stryyker (~stryyke1@about/windows/staff/stryyker)
[14:57:17] <d3x0r> I suppose this is some sort of rest model?
[14:57:32] <pyzozord> Tazmainian: you are free, or even encouraged to cut correns as long as users get what they need. Not what they /think/ they need, what they actually need. ;)
[14:57:41] <user51> GeDaMo: thanks, i just exercised my pointers-to-arrays skill :)
[14:58:45] <pyzozord> Tazmainian: of course there are many interpretations of cutting corners. And there are considerations like scalibility, maintainbility and all others. But all those things serve singular purpose of supporting the main goal: provinding platform so you can write code that solves user's needs
[14:59:10] <user51> thing is, i don't know where such a pointer is useful
[14:59:25] <Akronymus> user51 do you know linked lists?
[14:59:36] <Akronymus> Also: Jagged arrays.
[14:59:48] <Akronymus> And trees of course
[15:00:13] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[15:00:16] <user51> Akronymus: what pointer are you talking about
[15:00:25] <Tazmainian> pyzozord, agreed, the only peeve I have, is that people go we can write insecure and slow code, we can just fix it later. I hate that, because more often than not, your architecture then doesn't support the needed security and needs to be redone, or you spend hours trying to optimize, were if you just had default practises and had in mind security and performance , it would be different 
[15:00:32] <user51> http://sprunge.us/uhArjY
[15:00:33] <user51> here's mine
[15:00:39] <user51> char (*a2p)[5] = a2d;// pointer to an array of 5
[15:00:50] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:01:04] <Akronymus> pointers to pointers user51 
[15:01:11] *** Joins: Ayaya6sinss (~Ayaya6sin@114.79.5.143)
[15:01:14] <Akronymus> Which is basically what a pointer to an array is
[15:01:17] <user51> i was talking pointers to arrays :P
[15:01:20] <pyzozord> Tazmainian: build walls of abstractions to protect yourself, have a very contanained area where you deal with the nasty code
[15:01:32] <Akronymus> A array IS a pointer.
[15:01:57] *** Quits: Ayaya6sins (~Ayaya6sin@114.79.5.143) (Read error: Connection reset by peer)
[15:03:43] * mrig points at the array!
[15:03:54] <GeDaMo> A snark /is/ a boojum, you see :P
[15:04:20] <mrig> Naturally!
[15:04:42] <Tazmainian> pyzozord, nevermind nasty code. Like permissions, and tokens etc. I am not talking about unsafe code. as in manually manage memory. I mean coding an app, and not having things like authorization etc 
[15:04:56] <user51> Akronymus: can you define me an array and also define a pointer?
[15:05:04] <user51> best way to solve this disagreement would be rubber ducking
[15:05:10] <user51> i'll start, gimme a sec
[15:05:21] <Akronymus> Pointer: Points to a location
[15:05:23] <user51> we're talking specifically about c
[15:05:34] <Akronymus> array: points to a location + has syntactic sugar for an offset.
[15:05:46] <mrig> is duckduckgo a pointer to a pointer then?
[15:06:04] <Akronymus> Booo! mrig
[15:06:13] <Akronymus> That pun was horrible
[15:07:30] <user51> a pointer is a variable that holds a memory location
[15:07:41] <Akronymus> Exactly
[15:07:49] <Akronymus> It points to a location.
[15:07:53] <Akronymus> Hence the name
[15:08:03] <user51> an array describes a range of memory locations
[15:08:09] <GeDaMo> It's not quite that simple; on a Harvard architecture, code and data are in separate adress spaces
[15:08:45] <Akronymus> user51 not in c.
[15:09:00] <Akronymus> In c, it has no knowledge about the range.
[15:09:02] <sjmulder> Akronymus, it does until it degrades to a pointer
[15:09:08] <pyzozord> Akronymus: puns cannot be stopped, puns are unstoppable. Punstoppable.
[15:09:15] <sjmulder> int foo[5]; sizeof(5) will be the size of 5 ints
[15:09:22] <sjmulder> *sizeof(foo), sorry
[15:09:39] <Akronymus> Yeah, but only within the block it was defined in.
[15:09:48] <mercenary> *sizeof(foo)> segmentation violation
[15:09:50] <Akronymus> If you pass it to a function, it degrades to just a pointer.
[15:09:54] <user51> Akronymus: i'm talking about it syntactically
[15:09:54] <mrig> all this fuss over a fence post count :p
[15:09:58] <user51> how are you talking about it?
[15:10:00] <sjmulder> Akronymus, that is true
[15:10:12] <Akronymus> Syntactically.
[15:10:25] <sjmulder> unless wrapped in a struct or union, then it stays an array
[15:10:28] <Akronymus> Just not constraining myself to JUST the scope it was declared in
[15:11:31] <sjmulder> so just pass a pointer and a size (in elements or bytes, who cares), what could possibly go wrong! ;)
[15:11:58] <Akronymus> Hell something like void test(int* somearray) { int* someotherarray = int[20]; someotherarray = somearray; sizeof(someotherarray);}
[15:12:08] <Akronymus> happens you are gonna have a bad time
[15:12:14] *** Parts: Ayaya6sinss (~Ayaya6sin@114.79.5.143) (Leaving)
[15:12:34] <Akronymus> (And not just because memory leak)
[15:13:02] <sjmulder> yeah, but again there's degradation to a pointer happening there (even if you use array syntax for the argument)
[15:13:37] *** Quits: audgirka (~audgirka@2402:e280:3e16:e48:931c:87ae:1f48:5683) (Quit: Leaving)
[15:14:11] *** Quits: Hax0r (~TP1@93.168.116.37) (Quit: I'll be back..)
[15:14:27] <sjmulder> would   int arr1[5], arr2[5]; arr1 = arr2;  do a copy? I'm not sure
[15:15:15] <Akronymus> Naw, it just causes arr1 to point to where arr2 points to.
[15:15:44] *** Quits: ekathva (~ekathva@93-90-58-246.welcomnet.fi) (Quit: Leaving)
[15:15:53] <GeDaMo> Are you sure? I'm not convinced of that
[15:16:15] <sjmulder> checked with godbolt, assignment is illegal
[15:16:44] <sjmulder> > array type 'int[]' is not assignable
[15:16:52] <sjmulder> int[5] sorry
[15:17:44] <GeDaMo> Is that C or C++?
[15:17:48] *** Quits: mickey86 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[15:17:52] <GeDaMo> godbolt defaults to C++
[15:18:01] <sjmulder> set to C
[15:18:09] *** Joins: mickey86 (~user@user/mickey)
[15:18:31] <sjmulder> I also tried the array/pointer assignments. ptr = arr does assign the degraded pointer, and arr = ptr is illegal. as expected
[15:23:02] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[15:23:39] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:25:07] *** Joins: mobidrop (~mobidrop@user/mobidrop)
[15:25:17] *** Joins: Ayaya6sins (~Ayaya6sin@114.79.5.143)
[15:25:40] *** Quits: Ayaya6sins (~Ayaya6sin@114.79.5.143) (Client Quit)
[15:26:02] *** Joins: Twipply (~Twipply@user/twipply)
[15:27:11] *** Quits: dre (~dre@2001:8003:c932:c301:8028:ecc5:f3df:cd14) (Remote host closed the connection)
[15:27:55] *** Joins: RenAdjest (~RenAdjest@114.79.5.143)
[15:28:21] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[15:32:19] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Remote host closed the connection)
[15:32:42] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:40cf:669:99b7:4a90) (Read error: Connection reset by peer)
[15:33:35] <mrig> Would it be overdoing it to write a parser for BNF form, to read grammatical rules for analysing a stream of tokens, or are there perhaps simpler ways to do this?
[15:34:13] <mrig> I suppose functions with control flow amount to the same thing.
[15:35:09] * mrig cant see the parser for the lexers :|
[15:35:39] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[15:35:40] *** Quits: v0id_ptr (~longlong@user/ptr-frac7al/x-0038398) (Quit: v0id_ptr)
[15:36:35] <pyzozord> mrig: are you asking about making a parser generator?
[15:37:07] <mrig> pyzozord: I am wanting to avoid making a parser generator, unless it really is the logical solution.
[15:37:56] <mrig> Am trying with control flow, which is moving the part of the code from my lexing code out, which is good, seems that this is on the right track.
[15:38:24] <pyzozord> I second that question then. One thing to comes to mind as an alternative is to use some ready made parser generator instead of writing one yourself. Another thing to write a parser manually. I personally want to write a parser manually as my first parser
[15:38:24] <merijn> mrig: BNF aren't detailed enough for most grammars
[15:38:56] <mrig> I noticed that there is EBNF or BNFE with some regexp type operators added.
[15:39:00] <merijn> If you're hand-writing a parser you wanna lookup "recursive descent parsers"
[15:39:17] <merijn> recursive descent parsers are probably the simplest/easiest to implement
[15:39:51] <pyzozord> yeah that backtracking + recursive descent parser seemed like a pretty powerful way of parsing stuff. I think that's also the most easy/classical way to do it. So I want to implement that
[15:39:56] <mrig> I've written one of those in K'n'R before, and also a different type of parse that was for a mid fix notation calculator, I forget the name.
[15:40:09] *** Joins: chomwitt (~chomwitt@athedsl-32301.home.otenet.gr)
[15:40:27] <mrig> I am currently on a parser that is lexing using self referential functions which are pretty cool.
[15:40:37] <pyzozord> mrig: I don't remember a recursive descent parser in k&r, are you sure it's there?
[15:40:56] <mrig> pyzozord: yes its used for the calculator.
[15:41:06] <mrig> Or about that point.
[15:41:17] <pyzozord> was that a recursive descent parser? I did that. I need to check that again
[15:41:36] <mrig> I need to do the book again really.
[15:41:54] <mrig> I would understand a lot more of it now than the first time.
[15:42:18] <mrig> merijn: I'm pondering how to achieve the analysis stage at the moment.
[15:43:02] *** Quits: Kol (~Kol@d75-157-122-186.bchsia.telus.net) ()
[15:43:08] <merijn> mrig: You don't do analysis while parsing
[15:43:17] *** Joins: ixil (~ixil@82.197.178.137)
[15:43:24] <mrig> well I have already lexed into tokens.
[15:43:26] <merijn> mrig: Step one is: Create an AST (and do only that)
[15:43:32] *** Quits: mickey86 (~user@user/mickey) (Remote host closed the connection)
[15:43:48] *** Joins: mickey86 (~user@user/mickey)
[15:43:53] <merijn> You do analysis on your AST or any of your IRs
[15:44:39] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[15:44:50] <merijn> mrig: The point of parsing and building an AST is to get rid of all the messy, text-y bits, and get a concrete data structure to work on
[15:44:56] <pyzozord> mrig: would you mind sharing your code. I'm very curious on how to build a simple compiler
[15:44:58] <mrig> I have received a parse tree from an xml lib and am writing this to parse the attributes from inside the elements.
[15:45:17] <merijn> pyzozord: Did you see my earlier book recommendation?
[15:45:32] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 245 seconds)
[15:45:38] <mrig> so a full AST would be rather complicated at this stage.
[15:46:04] <merijn> mrig: Doing thing ad hoc is always more complicated, even if it doesn't seem so right now
[15:46:04] <pyzozord> merijn: are you talking about If you're hand-writing a parser you wanna lookup "recursive descent parsers""?
[15:46:11] <mrig> Though that is probably what I am thinking of when now considering analyses, so, build a tree from the tokens is one approach here.
[15:46:25] <mrig> merijn: Yes I see what you mean.
[15:46:50] <merijn> pyzozord: No, a few hours ago. If you're interested in writing compilers, get a copy of Andrew Appel's "Modern Compiler Implementation in X" (where X = C, Java, or ML)
[15:47:28] <merijn> If you know any functional language (F#, Ocaml, Haskell, Erlang, etc.) I'd probably recommend getting the ML version
[15:48:07] <mrig> pyzozord: sure thing, no problem : https://github.com/8i8/KetR/blob/master/c4.p-76.ex4-06-RPN_variables.c
[15:48:09] <pyzozord> merijn: ah, no i haven't. Thanks for the recommendatoin. Is it better than the dragon book?
[15:48:19] <mrig> there are various different stages in the different questions.
[15:48:33] <merijn> pyzozord: Yes
[15:48:51] <paulo> :D
[15:48:51] <pyzozord> mrig: thanks
[15:49:07] <merijn> pyzozord: It spends more time on "how do you make an actual compiler" and less time on "how do you implement a parser/parser generator"
[15:49:19] <mrig> merijn: the reason was to avoid writing a full xml parser, as I only need svg, this seemed like a reasonable approach.
[15:49:41] <merijn> tbh, writing a full XML parsers isn't even that hard
[15:49:47] <merijn> XML is not a super challenging format
[15:50:46] <mrig> Well the one that i'm using is not that large, the code I mean.
[15:51:12] <sjmulder> what's up with editors and web tools using 1.1x line height for code lately :S
[15:51:34] <pyzozord> mrig: I don't know for sure, but i don't think that's recursive descent parser
[15:51:47] *** Joins: Pickchea (~private@user/pickchea)
[15:52:01] <pyzozord> (I checked my code for this exercise, I have something similar)
[15:52:25] <GeDaMo> sjmulder: it's to leave space for emojis :P
[15:52:53] <merijn> sjmulder: Easy solution, don't use those weird new-fangled things ;)
[15:52:56] *** Quits: LucaTM (~LucaTM@user/lucatm) (Ping timeout: 250 seconds)
[15:52:59] <mrig> merijn: Oh I see, my other calculator is generating a new parse tree for every expression given to it, you are saying that it is best to do this once for the language and to then use that?
[15:53:22] * sjmulder goes back to ed(1)
[15:53:37] <pyzozord> merijn: those books seem like big commitment, I wanted to start with something very small. Ideally lexer, parser and compiler in 50-100 linies of code
[15:53:45] <mrig> pyzozord: I may be referencing the wrong code, there is a question that goes into recursive decent though I forget which it was off hand.
[15:54:32] <pyzozord> mrig: I just checked my pdf, I there is no "recursive desc" mentioned anywhere in the book
[15:54:43] <sjmulder> pyzozord, some of the Advent of Code years had you incrementally implement VMs, that was a good way to get acquianted with the basic problems for me
[15:54:58] <mrig> pyzozord: perhaps exercise 6.6
[15:55:03] *** Quits: nekodesu (~nano@user/nekobit) (Quit: free(neko);)
[15:55:25] <mrig> pyzozord: oh it is not mentioned, it is just what it is.
[15:56:10] *** Joins: LucaTM (~LucaTM@user/lucatm)
[15:56:16] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[15:56:25] *** Quits: elnavigator (~elnavigat@105.196.50.210) (Ping timeout: 248 seconds)
[15:57:52] *** Joins: speckz (~speckz@2600:1700:ce0:bf00:7d7d:56ee:3a9e:86b8)
[15:58:21] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:40cf:669:99b7:4a90)
[15:59:18] <pyzozord> mrig: here is my code for 6-6, is that a recursive descend parser? https://ideone.com/J0lLhV
[15:59:21] <bayaz> Title: Ideone.com 
[16:00:25] <mrig> pyzozord: sure if you are going into different states as you descend into the nesting.
[16:00:40] <mrig> you only need a 1 char look ahead for it.
[16:01:10] <mrig> same with the calculator as it goes into different operating states.
[16:01:31] <mobidrop> looks more like a lexer to me
[16:01:45] <merijn> pyzozord: I'm not really sure how you could make a compiler that's remotely interesting in just 50-100 LOC, tbh
[16:01:57] <mrig> the recursion is the for loop.
[16:01:57] *** Joins: nekodesu (~nano@user/nekobit)
[16:01:58] <GeDaMo> Forth! :P
[16:02:00] *** Quits: speckz (~speckz@2600:1700:ce0:bf00:7d7d:56ee:3a9e:86b8) (Client Quit)
[16:02:24] <merijn> GeDaMo: tbh, even for Forth you'd spend almost all that on just an AST definition
[16:02:36] <pyzozord> merijn: mostly it would be just an exercise, it would be a very very simple language, with just few most basic feature
[16:02:42] <GeDaMo> Forth doesn't use an AST
[16:02:46] <mrig> Yay! RPN is logically elegant.
[16:03:10] <piou> I mean, I guess forth could use an AST, it would just be very pointless
[16:03:13] <mrig> no gymnastics to fit a mathematical ideal!
[16:03:30] <mobidrop> speaking of amateur programming languages, I remember that some guy years ago was working on his own language, a game developer
[16:03:39] <mobidrop> I think the one that created the Witness, not sure
[16:03:41] <GeDaMo> Jonathon Blow?
[16:03:44] <piou> zig?
[16:03:47] <mobidrop> yeah!
[16:03:54] <mobidrop> I wonder if that's still going or he stopped
[16:03:59] <mrig> Oh did he write zig?
[16:03:59] <merijn> GeDaMo: That's a non-sensical statement
[16:04:00] <GeDaMo> Still not released as far as I know :P
[16:04:01] <mrig> cool
[16:04:09] <piou> No, not zig, jai
[16:04:10] <merijn> GeDaMo: Any language implementation is gonna use an AST
[16:04:18] <GeDaMo> Wat
[16:04:21] <merijn> It might be a trivially simple one
[16:04:25] <pyzozord> mrig: I guess you are right. I have one big for loop that reads 1 character and has 1 character lookahead. Then based on these two characters I select a "mode" of what to parse. It's a one level descend. I'm not sure if it's recursive though
[16:04:29] *** Joins: inky_ (~inky@46.36.117.137)
[16:04:34] <mrig> merijn: I dont have to use an AST at the moment, that was why I have asked about this.
[16:04:38] <merijn> GeDaMo: We were talking about compilers, *any* compiler is gonna have an AST
[16:04:46] <GeDaMo> Forth doesn't need one
[16:04:50] <merijn> mrig: Yeah, but from what I can tell, you don't have a compiler
[16:04:50] <piou> merijn: doesn't have to at all
[16:04:59] <GeDaMo> You can literally concatenate machine code sequences
[16:05:06] <piou> merijn: you can absolutely emit machine code as you parse
[16:05:16] <mrig> merijn: I am not writing a compiler, have not stopped saying that!
[16:05:27] <GeDaMo> You'll write a compiler and like it! :P
[16:05:37] <mrig> I am transforming strings of data into concrete types.
[16:05:38] <piou> It's absolutely unefficient, sure, but it doesn't need an abstract representation
[16:05:47] <mrig> heh
[16:06:31] <mercenary> mrig: are you suggesting a compiler built from a huge regex that replaces input language by the appropriate machine code segments?
[16:06:32] <mobidrop> does the brainfuck compiler need an AST? :)
[16:06:50] <Arahael> always!
[16:06:51] *** Joins: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com)
[16:06:58] <merijn> mobidrop: As piou points out, I guess it depends on how you define "need"
[16:07:02] <mrig> mobidrop: I am not using regexp no, just parsing xml attributes following a subset specification.
[16:07:28] <merijn> mobidrop: An AST will always make your life simpler, especially if you wanna optimise
[16:07:58] <merijn> mobidrop: In some niche cases you can maybe get away without any AST or IRs, but that's certainly not going to make things *easier*
[16:08:12] <Arahael> merijn: data Ast = Brain { fuuk :: String } -- >:
[16:08:15] <mrig> I could use regexp but the error handling would be appalling if I were to do that, and the code quickly a real mess.
[16:09:03] <sjmulder> what's a good language for Linux GUI apps a bit higher level than C? is Vala still a thing? Python maybe?
[16:09:38] * mrig chuckles at the wonderful applications for logic once a few principles have been nailed down.
[16:09:51] <piou> sjmulder: would definitely recommend python there, good stable flexible language with lots of libraries
[16:10:01] <edgar-rft> brainfuck uses an Advanced Stupidity Tree as AST
[16:10:05] <mrig> well have been dove tailed, if you are not using nails.
[16:10:33] <piou> sjmulder: that said the language choice should be on more than just "it has a gui" IMHO
[16:10:52] <beaky> nice i like guis
[16:11:08] <edgar-rft> But a GUI saves you all that programming!
[16:11:10] <mrig> that beaky is a nice gui :D
[16:11:14] <pyzozord> hello im beaky
[16:11:22] <Arahael> sjmulder: on linux you can use anything you like.  anything.
[16:11:57] <edgar-rft> can I kill people on Linux?
[16:12:04] <piou> sure
[16:12:05] <mobidrop> merijn, not mandatory but heavily recommended then
[16:12:08] <beaky> yes you can use electron it will let you have cross platform gui that works even on linux
[16:12:12] <pyzozord> beaky: hope you don't mind us, it's a display of affection
[16:12:28] <mrig> pyzozord: Is there not a question perhaps earlier on that does not use a stack?
[16:12:28] <piou> please, strongly consider avoiding electron at all cost
[16:12:31] <beaky> though nowadays google is working on flutter
[16:12:32] <sjmulder> so what I'm looking for is a bit of a RAD kinda thing, not concerned with memory management etc, but also using GTK bindings or such (so no Electron)
[16:12:42] <beaky> aww no electron :<
[16:12:51] <sjmulder> hehe
[16:12:52] *** Joins: audiocat (~audio@2603-8081-1800-00ad-2824-e77f-f464-cbf5.res6.spectrum.com)
[16:12:53] <merijn> mobidrop: Also "the most obvious and simplest solution to most problems"
[16:13:02] <piou> sjmulder: "RAD"?
[16:13:14] <pyzozord> mrig: not sure what do you mean
[16:13:19] <piou> I'm not familiar with the accronym
[16:13:21] * Arahael wonders if glade is still a thing.
[16:13:22] <mrig> dang I can remember struggling with the error handling, but forget which question it was.
[16:13:31] <sjmulder> 'Rapid Application Development', from the olden days. GUI designer (ideally), write event handlers using high level APIs, done
[16:13:31] <Arahael> piou: Rapid Application Development.
[16:13:34] <piou> Ah, ok
[16:13:38] <merijn> mobidrop: I mean, it's an *abstract* syntax tree, i.e. a simplified, consistent representation of your syntax with all the text-y bits ripped out
[16:13:56] <mrig> pyzozord: the state was passed into the recursive loop rather than keeping state by way of tokens.
[16:13:58] *** Quits: absc (~absc@dynamic-adsl-94-34-201-166.clienti.tiscali.it) (Remote host closed the connection)
[16:14:08] <sjmulder> thought maybe Python + Glide or such could be a solution, but my knowledge here is 10 years out of date
[16:14:10] *** Quits: LucaTM (~LucaTM@user/lucatm) (Ping timeout: 250 seconds)
[16:14:16] <merijn> mobidrop: So, if you wanna, you know, analyse, optimise, transform, or otherwise do stuff you want that, because programming against messy syntax is a nightmare
[16:14:27] <mrig> It has been a while, and was more focused upon how to answer the questions than on the bigger picture at that time.
[16:14:37] <merijn> mobidrop: And if you *don't* wanna do any of those things, then why are you writing a compiler? :p
[16:15:19] <pyzozord> mrig: oh yeah, but I don't thikn that is what is happening in my code, I just do a linear scan on the input. And whenever I find a pattern of 2 characters I like, I read next k characters and interpret it as something
[16:15:27] *** Joins: absc (~absc@dynamic-adsl-94-34-201-166.clienti.tiscali.it)
[16:15:44] *** Quits: a6a45081-2b83 (~aditya@223.226.228.68) (Remote host closed the connection)
[16:16:19] <mobidrop> merijn, right it would be like writing a program without using a core language feature which is technically possible, but why would you ever not want to do that
[16:16:58] <piou> sjmulder: frankly, there are lots of choices but you seem to already consider Python and you really can't go wrong with it. You'll find the bindings you need.
[16:17:14] *** Quits: audiocat (~audio@2603-8081-1800-00ad-2824-e77f-f464-cbf5.res6.spectrum.com) (Ping timeout: 256 seconds)
[16:19:29] <mobidrop> pyzozord, what if you need to look for a 3 character pattern?
[16:19:41] *** Quits: absc (~absc@dynamic-adsl-94-34-201-166.clienti.tiscali.it) (Remote host closed the connection)
[16:19:45] *** Joins: RenAdjest_ (~RenAdjest@114.79.5.143)
[16:20:08] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[16:20:10] *** Quits: RenAdjest (~RenAdjest@114.79.5.143) (Read error: Connection reset by peer)
[16:20:57] *** Quits: death916 (~death916@user/death916) (Ping timeout: 258 seconds)
[16:20:59] *** Joins: absc (~absc@dynamic-adsl-94-34-201-166.clienti.tiscali.it)
[16:21:09] <pyzozord> mrig: I think your (and mine) understanding of what a recursive descent parser is. I just thought that the K&R think wasn't it, at least the way I implemented. And when you suggested that that K&R thing was a recursive descend parser I started doubting if my understanding of what a recursive descend parser is was correct
[16:21:22] <pyzozord> *is correct
[16:22:16] <merijn> "searching a string and then interpreting what follows" is very much not recursive descent parsing :p
[16:22:51] *** Quits: mikeliuk (~mikeliuk@109.249.187.96) (Quit: Connection closed)
[16:23:06] <pyzozord> ok so at least that is confirmed now: the way I implemented K&R thing is not a a recursive descent parser. That was my intuition before, good to have it confirmed
[16:23:23] <merijn> pyzozord: Are you familiar with BNF?
[16:23:24] *** Joins: death916 (~death916@c-67-182-183-147.hsd1.ca.comcast.net)
[16:23:24] *** Quits: death916 (~death916@c-67-182-183-147.hsd1.ca.comcast.net) (Changing host)
[16:23:24] *** Joins: death916 (~death916@user/death916)
[16:24:14] <pyzozord> merijn: mostly via reading c11 spec and few other syntax specs, but I wasn't aware it had a name until recently. I recognize it by this ::= and specific formatting. I think I can read it well enough to understand it
[16:25:07] <merijn> pyzozord: Right. So every BNF has a "start" which then has 1 or more alternatives (which in turn are specified using other alternatives or "terminal" symbols), right?
[16:25:22] <sjmulder> piou, I'll try that then. but will also check what e.g. the Elementary folks are doing
[16:26:02] <pyzozord> merijn: yep I always liked that idea with alternatives. I thought it was clever. I learned about the official name for "terminals" and "nonterminals" last week, or two weeks ago
[16:26:57] <merijn> So if you have a BNF like "Expr ::= Num | Add", "Num ::= [0-9]+", "Add ::= Mul '+' Expr", "Mul ::= Num '*' Num | Num", right?
[16:27:10] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[16:27:41] <pyzozord> merijn: yeah, I understand that 
[16:28:07] <mrig> pyzozord: yes, I'm really looking for something to read which clarifies the definitions concisely and well.
[16:28:21] <merijn> pyzozord: A recursive descent parser would have a function "Num" that parses a Num terminal and returns an int, "Mul()" which would try to either 1) parse a Num, then *, then another Num and if that fails, parse just Num, etc.
[16:28:23] *** Quits: xcombelle (~Xavier_Co@abayonne-654-1-269-44.w92-146.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[16:28:25] *** Quits: AquaL1te_ (~AquaL1te@user/aqual1te) (Ping timeout: 248 seconds)
[16:28:36] <mrig> All the literature seems marred in unnecessary complexity.
[16:28:45] <merijn> pyzozord: So you end with a starting function Expr() that (recursively) calls the other parsers and backtracks if one of them fails
[16:29:15] <merijn> pyzozord: Hence "recursive descent", you start at the top and try incrementally parse alternatives and if one fails you backtrack and try the next option
[16:29:22] <pyzozord> I like what wikipedia says "mutually recursive procedures (or a non-recursive equivalent) where each such procedure implements one of the nonterminals of the grammar". I think that makes sense. I imagine lots of functions like a function expr() that inside tries to run num() and op() etc
[16:29:35] <merijn> pyzozord: Right
[16:29:36] <pyzozord> and at the very bottom some of these functions are terminal and they are just regexes
[16:29:53] <merijn> pyzozord: That's exactly what it is, plus some bookkeeping for errors and where in the input you are
[16:30:05] <pyzozord> yeah that seems supper cool
[16:30:24] <merijn> Writing one for a given BNF is pretty simple
[16:30:38] <merijn> (it might not be efficient, but that's a separate problem :p)
[16:30:43] *** Joins: shailangsa (~shailangs@host86-145-14-24.range86-145.btcentralplus.com)
[16:30:51] <pyzozord> I need to write a backtracking + recursive descent. this seems a whole lot like a sudoku solver except instead of trying a number it executes this chain of functions that eventually call functions with regexes
[16:31:38] <gitesh> I think programming means 2 things
[16:31:41] <pyzozord> I'm very excited about this. This seems like fairly simple idea. I feel like this is 50% of what compilers are about :D
[16:31:47] <gitesh> 1 is data and the other is tools
[16:31:55] <pyzozord> well I'm of course exadurating, but this idea feels like it can take you very far
[16:31:59] <gitesh> We use tools to process data
[16:32:03] <merijn> mrig: That's because the people who know and learn this stuff mostly learn it in university classes where the professors explains the terminology
[16:32:16] <mrig> pyzozord: Like stepping through the options in a switch statement.
[16:32:49] <pyzozord> merijn: yep and recurse
[16:33:02] <pyzozord> so it essentially tries all possible interpretations of everything
[16:33:03] <merijn> mrig: Nobody's writing blogposts about this stuff, because people who wanna know about compilers either take a class on it OR buy one of the books used for these classes and read those
[16:33:12] <mrig> merijn: yes I get that, seems to over complicate the subject at times though.
[16:33:23] <merijn> mrig: So if you try and learn by googling you get very disconnected information with lots of gaps
[16:33:24] <pyzozord> what I am wondering is: what if it finds multiple valid interpretations?
[16:33:43] <merijn> pyzozord: Then your grammar is ambiguous
[16:34:03] <merijn> pyzozord: Ambiguous grammars are a thing (i.e. grammars with multiple valid parses for the same input)
[16:34:06] <pyzozord> ah so it's a design error then?
[16:34:17] <mrig> merijn: learning by way of k'n'r and k'n'd at the moment, am happy with the progress that is bringing about :D
[16:34:22] <merijn> Parser generator can generally detect grammar ambiguity statically and warn you
[16:34:27] *** Joins: Atque (~Atque@user/atque)
[16:34:39] <gitesh> So if we want to get an attribute of an instance object we use dot notation instead of brackets in python
[16:34:43] <mrig> doing ... but learning the words is a little harder when not speaking them.  :)
[16:34:45] <merijn> In general, you don't want ambiguous grammars for programming languages
[16:34:56] <merijn> You want one (and only one) valid parse for every correct input
[16:35:33] <mrig> googling is awful for learning yes, good books are far better.
[16:35:35] <merijn> mrig: tbh, the actual books aren't that hard. They're usually aimed at undergrad students who aren't exactly experts :p
[16:35:43] <mrig> thus my questions this morning.
[16:36:01] <pyzozord> I imagined my full simplest parser would be backtracking + recursive descend + tree of big hashtables of symbols (each table would be one name scope)
[16:36:04] <beaky> why does vscode have lower input latency than temacs
[16:36:08] <beaky> than emacs*
[16:36:22] <merijn> mrig: Our compiler course had 3rd year undergrads write a compiler (from parser all the way to code generation in a custom assembly language) in about 3 months of 20 hours per week
[16:36:37] <merijn> mrig: And that's a pretty complex language too
[16:36:39] <pyzozord> so I'd try to resolve ambigiuities with the symbol table, because maybe some types of variables are invalid in this pattern etc
[16:36:39] <mrig> most books are pretty crap though.
[16:36:51] *** Joins: scabby (~scabby@user/scabootssca)
[16:37:04] <mrig> the books by Brian Kernighan are excellent though.
[16:37:15] <mrig> the golang book is superb too.
[16:37:21] <mobidrop> beaky, does it? :D
[16:37:27] <merijn> pyzozord: Normally you build an AST first (so an abstract tree of your grammar) and then implement the lookup of names and typechecking on that tree
[16:37:34] <mobidrop> beaky, magic microsoft code probably
[16:37:48] <mrig> merijn: unless writing for forth :p
[16:37:52] <merijn> pyzozord: This makes scoping easy, because you can recursively walk the tree and add/remove new variables from the active scope as you recurse
[16:38:11] <mrig> using self referential functions is pretty cool too.
[16:38:50] <beaky> yes at last a modern text editor with relatively low input latency 
[16:38:51] <mrig> make adding to and changing the code spec easier.
[16:39:03] <mrig> for what ever it is that you library is doing.
[16:39:17] *** Joins: scabby_ (~scabby@user/scabootssca)
[16:39:17] <beaky> if only there was a way to mod emacs to have a magical low input latency mode 
[16:39:50] <pyzozord> merijn: would in that case ambigious syntaxes produce ast with nodes that have multiple possible types?
[16:40:22] <merijn> pyzozord: more like "there are multiple possible ASTs for one input"
[16:40:25] <pyzozord> oh maybe there would be a ast node "possible_interpretations" that had a forst of sub asts
[16:42:11] <pyzozord> i see how from here there would sprung a whole field 
[16:42:18] *** Quits: scabby (~scabby@user/scabootssca) (Ping timeout: 272 seconds)
[16:42:35] <pyzozord> with niuances and alternatives and tradeoffs
[16:42:47] <pyzozord> but it all starts with this recursive descend thing
[16:43:03] *** Joins: vysn (~vysn@user/vysn)
[16:44:44] <mrig> pyzozord: I think this one is a nice example https://github.com/8i8/tgpl/blob/beedfe81970527fa876715ac81266c00c4fb2606/ex_07.13-Expr_pretty_print_syntax_tree/eval/eval.go#L9
[16:45:08] <mrig> this code is using an interface recursively to formulate an parse tree.
[16:45:52] <pyzozord> mrig: thanks, will take a look in a moment, need to prented I'm working for a sec here :D
[16:46:00] <bjs> pyzozord: specifically an ambiguous grammar means there are multiple parse trees for some inputs, whether those separate parse trees represent different ASTs is a question of language design not just parser design
[16:46:35] <bjs> pyzozord: e.g. a grammar where `a+b+c` can parse in two different ways might both give the same `OpAdd([a,b,c])` AST if the AST doesn't encode the associativity for example
[16:46:47] *** Joins: elnavigator (~elnavigat@105.196.50.210)
[16:46:47] <mrig> pyzozord: the actual parser is in the file called parser.go
[16:47:14] <mrig> cool code that, copied taken from the book for the question.
[16:47:23] <bjs> pyzozord: although it's generally much easier to just build parsers from grammars that are unambiguous
[16:47:37] <merijn> Also, your programmers won't hate you
[16:47:43] <merijn> Looking at you, C++ >.<
[16:47:49] <mrig> heh
[16:48:00] <mrig> Is that not C+++
[16:48:17] <bjs> merijn: don't you mean >>.<<
[16:48:17] <bjs> :D
[16:48:35] <merijn> bjs: I have so much redundant "template" in my code :(
[16:48:49] <merijn> "foo.template bar(x, y);" <- so pretty
[16:49:49] *** Joins: riff_IRC (~riff-IRC@user/riff-irc)
[16:52:25] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Ping timeout: 248 seconds)
[16:53:35] <mrig> How do they manage to make something so simple appear so complicated?
[16:53:47] <mrig> love of complexity I suppose.
[16:54:03] <mrig> never fails to amaze me.
[16:54:30] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[16:54:59] *** Joins: paolo (~maldinipa@156.146.63.24)
[16:55:14] *** paolo is now known as Guest2272
[16:56:09] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 268 seconds)
[16:56:17] *** Joins: vysn (~vysn@user/vysn)
[16:58:00] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Quit: AmigaOS PPC 4.1 +E +U1 // AmIRC 68K)
[16:58:10] <edgar-rft> mrig: ...because they want to impress people. I can tell for three hours how I bind my shoes in a way that you think it's deep science.
[16:58:15] <beaky> yes if only the designers of c++ listened to rich hickey the father of simplicity in programming design
[16:58:28] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[16:58:37] *** Quits: Fluxx (~Fluxx@user/fluxx) (Ping timeout: 268 seconds)
[16:58:59] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[17:02:27] *** Joins: bpmedley (~bpmedley@69-174-155-1.bltnilaa.metronetinc.net)
[17:03:05] *** Joins: rtypo (~alex@user/rtypo)
[17:05:20] *** Joins: pulse (~pulse@user/pulse)
[17:05:44] *** Quits: nekodesu (~nano@user/nekobit) (Ping timeout: 272 seconds)
[17:06:30] *** Joins: LucaTM (~LucaTM@user/lucatm)
[17:07:56] <pyzozord> right, done with the work, at least until tomrrow afternoon
[17:08:41] <pyzozord> that strategy of throttling my commits has worked very well for me. Other team members feel they have more space to shine, I feel less stressed about not delivering enough
[17:09:12] <pyzozord> turns out what corporations really what from you is to not stand out
[17:09:19] <pyzozord> then everything falls in place
[17:10:25] *** Quits: shailangsa (~shailangs@host86-145-14-24.range86-145.btcentralplus.com) (Remote host closed the connection)
[17:11:31] <pyzozord> I felt I was wasting my time if I wasn't doing my best job. Now I do minimum, everyone is happy with me. And I have plenty of time to do my best job on personal projects
[17:12:31] <pulse> until something goes wrong maybe :p
[17:12:39] <pyzozord> Everyone is happy. No idea why the corporation isn't bothered that it's litearlly wasting half of the money because I could do twice as much as I do now. But if they are happe and I am happy - hey, who am I to stop it when it's a win-win apparently?
[17:13:21] <pyzozord> pulse: I have that capacity to double the speed if needed still, so if they need that I'm happy to provide and feel useful and valued 
[17:14:00] <pulse> i'm just saying, it's all good to theorize until there's a fire under the butt :p
[17:14:36] <pyzozord> yeah when they will have fire under the but they will look around for people who can get shit actually done :D
[17:15:19] <pyzozord> and they will remember "hey remember when pyzozord was like doing 5 tickets a day? maybe he can do it now?"
[17:17:05] <mrig> I think the answer to my questioning earlier is that an parse tree is not really worth creating because I am only parsing a couple of branches at most before getting to the leaf nodes, as such a simple set up with switches and hashmaps or tables will be a reasonable solution.
[17:17:24] *** Joins: Pickchea (~private@user/pickchea)
[17:18:23] <mrig> only the tips of the trees branches :) <- que PG tips tea joke for any familiar with the brand.
[17:18:33] <mrig> queue rather
[17:19:28] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[17:19:49] <user51> writing the grammar in yacc can hlep finding issues with it
[17:19:54] <mrig> ... Though writing the full parser is also worth considering.
[17:19:54] <user51> so consider that oo
[17:20:15] <mrig> go does have a version of yacc integrated.
[17:20:32] <mrig> will come to understand that in time I'm sure.
[17:21:06] <mrig> for the immediate problem, this seems to be the path of least resistance to arc across :D
[17:21:48] *** Joins: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net)
[17:22:10] <beaky> just use regular expressions bro
[17:23:21] *** Joins: mikeliuk (~mikeliuk@109.249.187.96)
[17:23:44] *** Quits: RenAdjest_ (~RenAdjest@114.79.5.143) (Quit: Leaving)
[17:23:57] <mrig> I was very tempted for this, but the errors will be so much nicer with a little more logic, I could even put the available words for correct syntax in the error.
[17:24:14] <mrig> which can save a lot of time on the command line.
[17:24:28] *** Joins: Ayaya6sins (~RenAdjest@114.79.5.143)
[17:24:32] <mrig> make the errors the UI
[17:24:49] <mrig> a bit like git does with its interactive mode
[17:25:12] *** Parts: Ayaya6sins (~RenAdjest@114.79.5.143) ()
[17:26:18] <beaky> nice i like git it is my favorite version control system
[17:26:38] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[17:27:56] <edgar-rft> maybe it's because gits like each other?
[17:28:01] <mrig> heh
[17:28:16] <mrig> oh to be gitesque.
[17:30:26] *** Quits: elnavigator (~elnavigat@105.196.50.210) (Ping timeout: 272 seconds)
[17:30:36] <smallville7123> how do i track touches inside a view heirarchy in the context of view focus?
[17:32:25] *** Quits: Thedarkb (~Thedarkb@85.255.236.109) (Ping timeout: 248 seconds)
[17:33:27] <mrig> smallville7123: what technology are you using? You could make a map and generate a unique key by combining user with view data and simply keeping a count variable in the bucket.
[17:34:07] <smallville7123> im using a simply viewgroup approach
[17:34:18] <smallville7123> eg each viewgroup has its own children
[17:34:32] <smallville7123> and its children can themselves be other view groups
[17:35:58] *** Joins: RenAdjest_ (~RenAdjest@114.79.5.143)
[17:35:59] <mrig> smallville7123: we have no idea which language or framework, a little context would help people to understand what your situation is and eventually how to help you solve your problem.
[17:36:04] <smallville7123> i can detect if my cursor is inside my view but i do not know how to implement focusing (eg like a standard window manager has focusing for its windows)
[17:36:19] <d3x0r> there's only one focus
[17:36:52] *** Quits: Guest2272 (~maldinipa@156.146.63.24) ()
[17:37:06] <d3x0r> there's 2 when you'rre changing focus technicall - you have what you used to be focused on
[17:37:22] *** Joins: paolo (~maldinipa@156.146.63.24)
[17:37:45] *** paolo is now known as Guest8115
[17:38:03] <smallville7123> i know
[17:38:17] *** Quits: Guest8115 (~maldinipa@156.146.63.24) (Client Quit)
[17:39:34] *** Joins: paolo (~maldinipa@156.146.63.24)
[17:39:57] *** paolo is now known as Guest7421
[17:40:45] *** Quits: fweht (uid404746@id-404746.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[17:41:05] *** Joins: rsx (~dummy@ppp-188-174-136-60.dynamic.mnet-online.de)
[17:41:07] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:41:14] *** Joins: akevinhuang (~thekevinh@user/thekevinhuang)
[17:42:28] <mrig> oh using self referential functions for this is like being sat inside the state diagram of a regular expression, each function a state node :)
[17:43:23] <pyzozord> sounds like android or ios
[17:43:27] *** Quits: Guest7421 (~maldinipa@156.146.63.24) (Client Quit)
[17:43:47] *** Joins: paolo (~maldinipa@156.146.63.24)
[17:44:10] *** paolo is now known as Guest1313
[17:45:22] <pyzozord> yeah, i bet implementing a regex engine might be a good exercise in general
[17:45:29] *** Joins: Thedarkb (~Thedarkb@85.255.236.109)
[17:45:45] *** Joins: salitos (~salitos@197.156.137.148)
[17:45:51] *** RenAdjest_ is now known as RenAdjest
[17:46:02] *** Quits: Guest1313 (~maldinipa@156.146.63.24) (Client Quit)
[17:46:56] <pyzozord> it's very intersting because you need to write a parser and compiler and the output of the compiler is a program that is essentially another parser
[17:47:10] <pyzozord> a bit like a parser generator I guess?
[17:47:38] <mrig> regular expressions describe the expressions that fit within the grammar that is being parsed, if it triggers an error then the expression is irregular.
[17:48:14] <mrig> the context free grammar describes the set of expected expressions.
[17:48:50] <mrig> At least that is my current understanding, (subject to change as my ignorance subsides)
[17:49:31] *** Joins: snake (~snake@user/snake)
[17:53:22] *** Quits: RenAdjest (~RenAdjest@114.79.5.143) (Changing host)
[17:53:22] *** Joins: RenAdjest (~RenAdjest@user/renadjest)
[17:54:49] *** Quits: chomwitt (~chomwitt@athedsl-32301.home.otenet.gr) (Ping timeout: 248 seconds)
[17:54:52] *** Joins: elnavigator (~elnavigat@105.196.50.210)
[17:56:00] *** Parts: RenAdjest (~RenAdjest@user/renadjest) (Leaving)
[17:56:22] <beaky> rust now has the world's fastest most correct safest float parser https://old.reddit.com/r/rust/comments/omelz4/making_rust_float_parsing_fast_libcore_edition/
[17:56:23] <bayaz> Title: Too Many Requests 
[17:58:52] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 245 seconds)
[17:59:23] *** Joins: pulse_ (~pulse@user/pulse)
[18:02:04] *** Quits: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com) (Ping timeout: 256 seconds)
[18:02:40] *** Joins: sumthing1980_ (~sumthing1@94.54.64.154)
[18:02:41] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Read error: Connection reset by peer)
[18:02:49] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 248 seconds)
[18:03:08] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[18:04:29] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[18:04:47] *** Quits: absc (~absc@dynamic-adsl-94-34-201-166.clienti.tiscali.it) (Quit: Leaving.)
[18:05:04] *** Joins: absc (~absc@access03.colt-engine.it)
[18:07:24] *** Joins: RenAdjest (~RenAdjest@user/renadjest)
[18:08:10] *** Quits: scabby_ (~scabby@user/scabootssca) (Remote host closed the connection)
[18:09:12] *** Joins: scabby (~scabby@user/scabootssca)
[18:09:52] <mrig> oh dear, analyse is not a term that abbreviates well in my nomenclature scheme :|
[18:10:07] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[18:10:25] <mrig> What to call my style attribute analysis? [facepalm]
[18:10:37] *** Quits: scabby (~scabby@user/scabootssca) (Remote host closed the connection)
[18:10:42] * mrig blushes at own code
[18:10:43] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[18:11:00] *** Joins: scabby (~scabby@user/scabootssca)
[18:15:41] *** Quits: nvmd (~nvmd@user/nvmd) (Ping timeout: 268 seconds)
[18:15:53] <gitesh> bjs: how is code is data, data is code? That day you were speaking about.
[18:16:02] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 272 seconds)
[18:16:17] <bjs> gitesh: what do you mean "how"
[18:17:44] *** Joins: mrig (~mrig@user/mrig)
[18:18:21] <bjs> gitesh: "data" is just an informal word, it means information or value or whatever https://www.dictionary.com/browse/data (specifically when stored on a computer).  Why can't code be considered "information stored on a computer" ?
[18:18:25] <gitesh> bjs: I mean perhaps how is that interchangeable
[18:18:37] <bjs> gitesh: have you read about von Neumann architectures yet?
[18:18:53] <piou> gitesh: they're not interchangeable
[18:21:29] *** Quits: tomgus1 (~tomgus1@90.208.15.36) (Ping timeout: 248 seconds)
[18:21:30] *** Joins: tomgus1_ (~tomgus1@2a02:c7f:d2b0:e600:ba27:ebff:fe5c:2dcd)
[18:21:54] *** tomgus1_ is now known as tomgus1
[18:22:13] <piou> gitesh: data means "stuff that can be manipulated by a computer" essentially. All data isn't code, for example our discussion is data.
[18:22:26] *** Joins: xcombelle (~Xavier_Co@abayonne-654-1-269-44.w92-146.abo.wanadoo.fr)
[18:22:33] <edgar-rft> let's try dadaistic literate programming
[18:23:18] <piou> gitesh: what people mean when they talk about "code being data" is the ability to not only execute code with the computer but manipulate the code before executing it. For example to allow a program to change its own behaviour.
[18:23:52] *** Quits: Akronymus (~Akronymus@85.31.8.181) (Ping timeout: 246 seconds)
[18:23:57] <piou> That's maybe not the best way to describe the idea, but it stuck.
[18:26:19] <beaky> besides json parsing what are some other common tasks in programing that culd be spedup by orders of magnitude https://www.youtube.com/watch?v=wlvKAT7SZIQ
[18:26:33] <edgar-rft> "code is data" is typically used in languages where source code is a first-class data oblect. For example Lisp code is written as Lisp lists, therefore Lisp souce code can be programmatically manipulated with builtin functions for list manupulation.
[18:26:34] <gitesh> piou: for example function is a code being data, do we manipulate function data or allow it to change its behaviour?
[18:26:37] *** Joins: zwr (~zwr@2804:d45:b966:fb00:29b7:bc69:3d63:eeb2)
[18:27:46] *** Joins: Guest42 (~Guest42@149.255.222.15)
[18:28:08] <bjs> gitesh: have you read up about von Neumann machines yet?  You really should, pretty much any resource will go into a lot of detail about how code is a kind of data
[18:29:00] *** Quits: Guest42 (~Guest42@149.255.222.15) (Client Quit)
[18:29:20] <pyzozord> what was von Neumann architecture in a gist?
[18:29:27] <piou> I've never found the von Neumann machine idea enlightening, but maybe it works for some people
[18:29:53] <pyzozord> it's an implementation of turings machine right? But it's still pretty abstract and simple. But I forget what where it's features
[18:30:25] *** Joins: Guest10 (~Guest10@149.255.222.15)
[18:30:36] *** Quits: mobidrop (~mobidrop@user/mobidrop) (Ping timeout: 272 seconds)
[18:30:41] <bjs> piou: I mean, it's a description of how modern computers work
[18:30:55] <edgar-rft> pyzozord: von-Neumann means code and data are intermixed, no separate memory chunks for code and data
[18:31:04] <piou> bjs: it is, I just don't find myself ever thinking "hey man, go see that, you'll understand stuff"
[18:31:14] <bjs> piou: because you already understand stuff:)
[18:31:15] *** Joins: Guest1063 (~Guest10@151.236.178.229)
[18:31:38] <piou> pyzozord: your typical turing machine has a memory stripe on which you modify data according to your program instructions
[18:31:58] <piou> pyzozord: in a "von Neumann Turing machine" your program instructions would also be in a section of the stripe
[18:32:20] <piou> pyzozord: you don't have that fundamental separation between where your code is and where your data is
[18:32:27] *** Guest1063 is now known as yusif
[18:33:23] <piou> gitesh: I'm sorry, I understand that it can be difficult if English is not your first language, but I don't understand what you are asking.
[18:34:42] *** Quits: yusif (~Guest10@151.236.178.229) (Client Quit)
[18:34:56] *** Joins: Rashad (~textual@37.202.99.134)
[18:35:04] *** Quits: Guest10 (~Guest10@149.255.222.15) (Ping timeout: 246 seconds)
[18:35:11] *** Joins: Akera4 (~Akera4@151.236.178.229)
[18:35:24] <piou> modern computers are von Neumann architectures that try as hard as possible to act as Harvard architectures
[18:35:53] *** Quits: Akera4 (~Akera4@151.236.178.229) (Client Quit)
[18:35:56] <mrig> My word of the day is 'analemma' :)
[18:36:14] *** Joins: Akera4 (~Akera4@151.236.178.229)
[18:36:14] <mrig> awesome stuff, new there had to be some link between analyse and annual
[18:36:30] <edgar-rft> is that something about a girl named emma?
[18:36:35] <mrig> great to find lemma in there.
[18:36:43] <APic> Can one do Just-In-Time-Compilation on Harvard Architectures?
[18:36:58] *** Joins: ahungry (~user@99-40-9-245.lightspeed.livnmi.sbcglobal.net)
[18:36:59] <mrig> etymology is seriously underrated.
[18:38:20] <mrig> edgar-rft: this is perhaps not the moment to bring up the pumping lemma technique, I am being very serious about the language and its construction. :|
[18:38:39] <mrig> It pains me that it is not PC to do so in english.
[18:39:35] <sandman13> Careful with words mrig 
[18:39:38] <sandman13> :P
[18:39:43] <piou> APic: I don't see how, and I can't find anyone claiming it can
[18:39:44] <mrig> There is a fascinating and very serious analogue with sanskrit about the same topics, but I can not discuss it really.
[18:39:57] <APic> piou: ktnx
[18:40:10] <mrig> Sure that this would interest one studying ancient Greek.
[18:40:18] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[18:40:25] <sandman13> You don't want unwanted attentions and another "gate" incident, do you? mrig 
[18:40:30] <mrig> sandman13: words are but the crests of waves :)
[18:40:54] <mrig> oh gates, nice love a bit of logic!
[18:41:11] *** Joins: magla (~gelignite@55d4ac4e.access.ecotel.net)
[18:41:38] *** Joins: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com)
[18:41:52] <sandman13> mrig: That reminds me of similar quotes related to desire in Sanskrit texts but sadly I cannot remember the exact quotes :(
[18:44:25] <sandman13> "What is the purpose of human life?" "What does it mean to be a 'human'?"
[18:44:27] <Rashad> ask mrig he is well read in such texts 
[18:44:40] <mrig> Rashad: what?
[18:44:45] <Rashad> he's a fan of the veda or whatever it is called 
[18:45:55] <sandman13> Ved are nice books. So are Vedanta and Upanishad
[18:46:01] <mrig> What has the veda got to do with the meaning of life; Searching such is a distinctly occidental endeavor?
[18:46:21] <Rashad> mrig he couldn't remember the quote
[18:46:24] <mrig> veda are about understanding the nature of reality, this is not the same endeavour.
[18:46:36] <sandman13> mrig: occidental as in western thought?
[18:46:38] <Rashad> so since you are knowledgable about such subjects, then you might be able to assist 
[18:47:15] <mrig> sandman13: no not really, only since the explosion of colonial and industrial 'enlightenment'.
[18:47:28] <mrig> recent western thought.
[18:47:45] <mrig> and late not early.
[18:48:09] <sandman13> mrig: My initial understanding of such texts is that it's close to nihilism. But it isn't nihilism because you have God/Brahman
[18:48:57] <mrig> God is a very occidental term, brahman is more mathematical in nature.
[18:49:10] *** Joins: nekodesu (~nano@user/nekobit)
[18:49:55] <sandman13> yeah. One that doesn't have 6 vikaras
[18:50:03] <paulo> does the reddit logo blink or am I tripping balls
[18:50:23] <Rashad> paulo not for me
[18:50:27] <Rashad> paulo got a link?
[18:51:24] *** Quits: mikeliuk (~mikeliuk@109.249.187.96) (Quit: Connection closed)
[18:51:49] <sandman13> mrig: I have been pushing my readings of Bhagvad Geeta and Sanskrit for so long that I am starting to forget few things here and there :(
[18:52:05] <mrig> Rashad: Incidentally the veda are not texts, they are chants of an aural tradition.
[18:52:34] <mrig> I am no expert either, just open minded and curious about life.
[18:52:43] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[18:53:26] <mrig> sandman13: I find elements of the same in programming so keep it in mind due to this.
[18:53:48] <mrig> reality is cool like that, it uses the same tricks all over the place.
[18:54:37] <sandman13> People say that Eastern Philosophy is not philosophy at all 
[18:54:43] <mrig> Why so?
[18:54:45] <sandman13> Especially Indian ones
[18:55:07] <mrig> I put it a few hundred years ahead of occidental philosophy, personally.
[18:55:09] <sandman13> It's considered so because it's not abstract or some stuff like that
[18:55:43] <sandman13> But if it cannot be applied in real life and is limited to academia, what's the point?
[18:55:46] *** Quits: elnavigator (~elnavigat@105.196.50.210) (Ping timeout: 268 seconds)
[18:55:53] <mrig> Oh I apply it every day.
[18:56:07] <mrig> would not be interested if it was not scientific like that.
[18:56:10] <sandman13> mrig: No. Western Philosophy I mean
[18:56:14] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[18:56:16] <mrig> Oh right yes,
[18:56:25] *** Quits: Akera4 (~Akera4@151.236.178.229) (Ping timeout: 246 seconds)
[18:56:25] <sandman13> Philosophy: from Greek: œÜŒπŒªŒøœÉŒøœÜŒØŒ±, philosophia, 'love of wisdom'
[18:56:25] <mrig> mental masturbation a lot of it.
[18:56:33] <mrig> the moddern stuff.
[18:56:36] <mrig> modern
[18:56:44] <pyzozord> Haha! Great success! branded cpu fan has arrived. Much silence I anticipate, and cool temperatures
[18:56:46] <sandman13> While we call it "darsan" i.e. point of view
[18:57:12] <mrig> yes Sophia is key to unlocking the nature of reality.
[18:57:16] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[18:57:17] *** Quits: sumthing1980_ (~sumthing1@94.54.64.154) (Quit: Leaving)
[18:58:12] <mrig> Or Freya or Frigg I think in other traditions.
[18:58:45] *** Joins: elnavigator (~elnavigat@105.196.50.210)
[18:58:59] <mrig> pyzozord: oh nice, I love it when the computer is nice and quiet!
[18:59:17] <pyzozord> mrig: nice, quiet and cold
[18:59:21] <mrig> sandman13: from the root drish right?
[18:59:27] <sandman13> mrig: right
[18:59:33] <mrig> love the logic
[18:59:35] *** Quits: pulse_ (~pulse@user/pulse) (Ping timeout: 252 seconds)
[18:59:48] <sandman13> mrig: guru shabda is drish 
[19:00:29] <mrig> vibration of akasha :D
[19:00:39] <edgar-rft> making your computer quieter is easy: just pull out the plug
[19:01:07] <sandman13> mrig: Akasha. That word always reminds of serenity.
[19:02:09] <sandman13> Something that is apart from other elements yet absolutely needed. An ever present observer.
[19:02:36] <mrig> akshara is a lovely word that is hinting towards this.
[19:02:57] <mrig> a measure of that
[19:02:59] <sandman13> that wich cannot be further divided
[19:03:05] <mrig> a unit
[19:03:05] <sandman13> akshara
[19:03:09] <sandman13> yup
[19:03:22] <mrig> the logic is just lovely.
[19:03:58] <mrig> from shabda bhraman
[19:04:05] <mrig> brahman
[19:04:28] <mrig> I always put the h in the wrong place in the latin spelling :|
[19:05:35] *** Joins: paravida (~myChateau@user/paravida)
[19:06:15] *** Quits: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com) (Ping timeout: 268 seconds)
[19:06:44] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[19:07:57] *** Joins: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com)
[19:09:37] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[19:09:39] *** Joins: Crescendo (~Crescendo@user/crescendo)
[19:14:53] *** Joins: xheimlic1 (~xheimlich@179.218.1.150)
[19:15:11] <xheimlic1> This is going to be a little vague. I'm happy to supply details though.
[19:15:33] <xheimlic1> I have this personal hobby project that grew into a hairball.
[19:16:27] <xheimlic1> Now every time I try to refactor, separate front-end from back-end, etc. everything starts to become over-architected.
[19:16:50] <xheimlic1> But I love my hobby thing which I actually use a lot, so I end up continuing to develop the hairball.
[19:16:54] *** Joins: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net)
[19:16:55] <WarauSalesman> you got a wrong design
[19:17:19] <WarauSalesman> which forces you to refactor too much
[19:17:48] <xheimlic1> I originally wanted to learn a little about sqlite and graph stuff with networkx. Like "let's try that this evening, slap on a Streamlit magic front-end".
[19:18:48] <xheimlic1> But then what started as "which tv show characters relate to which" became my brain backup, if it makes any sense. "Zettelkasten" is a fashionable term, although it's not really the same methodology. 
[19:18:55] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[19:19:04] *** Joins: mobidrop (~mobidrop@user/mobidrop)
[19:19:32] <xheimlic1> It's great for me, but I feel every time I spend time with the hairball I'm digging myself further into a hole. 
[19:20:06] <xheimlic1> I'd like to begin with to have a proper back-end, maybe even behind HTTP APIs so I can have someone develop a proper front-end.
[19:20:55] <xheimlic1> to answer your question, WarauSalesman. I think the project is still growing in scope and power, and when trying to Make a Design I keep wanting to leave a lot of leg room. 
[19:21:33] <xheimlic1> The only programming I know professionally is doing small services behind HTTP APIs which have neat boundaries.
[19:21:45] <xheimlic1> What the service is supposed to do and also what other people are even capable of comprehending.
[19:21:54] *** Quits: pandakekok9 (~job@wikimedia-commons/pandakekok9) (Remote host closed the connection)
[19:22:07] *** Quits: snake (~snake@user/snake) (Quit: Leaving)
[19:22:57] <xheimlic1> I guess the problem is that I'm the only intended user.
[19:23:41] *** Joins: nvmd (~nvmd@user/nvmd)
[19:23:55] *** Joins: df_data (sid466269@id-466269.charlton.irccloud.com)
[19:24:35] *** Joins: scabby_ (~scabby@user/scabootssca)
[19:25:44] <WarauSalesman> :DDDDDDDDDDDD
[19:25:53] *** Quits: RenAdjest (~RenAdjest@user/renadjest) (Quit: Leaving)
[19:26:00] *** Quits: elnavigator (~elnavigat@105.196.50.210) (Ping timeout: 268 seconds)
[19:26:17] <WarauSalesman> tell us more
[19:26:23] *** Joins: compscipunk (~compscipu@107-214-234-232.lightspeed.sndgca.sbcglobal.net)
[19:26:25] *** Joins: RenAdjest (~RenAdjest@user/renadjest)
[19:26:54] <pyzozord> have to say that the O(n) from this https://codility.com/media/train/7-MaxSlice.pdf is so clever I can't really understand how it works
[19:26:55] <bayaz> Type: application/pdf Size: 134.0 kB 
[19:27:05] <xheimlic1> the nature of the project is somewhat incomprehensible too. it's a personal notebook but it's a graph with only titles and I solve a Poisson equation on the dual/line graph to determine shortest paths... every time I try to explain this on HN or whatever I'm met with "wait, how do you write notes a few words at a time".
[19:27:05] *** Quits: scabby (~scabby@user/scabootssca) (Ping timeout: 252 seconds)
[19:27:10] <pyzozord> and it's got only 4 lines
[19:27:45] *** Joins: LiftLeft (~LiftLeft@212.102.58.168)
[19:28:13] <beaky> try to follow along the lines which line is the most interesting
[19:29:06] <xheimlic1> WarauSalesman: https://github.com/asemic-horizon/sursis/ -- the screenshots are pretty outdated though.
[19:29:08] *** Joins: TheBard (~TheBard@user/thebard)
[19:29:46] <pyzozord> beaky: i'd say all four are essential
[19:29:52] <xheimlic1> the code is pretty much up to date, so if you're morbidly inclined to laugh at it haha
[19:30:30] <beaky> the first line provides the initial slice range [0,0) the for loop builds up that range number-by-number from left to right on the array
[19:30:33] <xheimlic1> my own notebook is marching towards 10K nodes quickly.
[19:30:48] <smallville7123> when drawing a heirarchy is a layout/measure pass required to correctly obtain the view's position inside its parent?
[19:32:11] *** Quits: dan01 (~dan01@2a02:2f09:381b:db00:59de:2f6e:4f81:783b) (Read error: Connection reset by peer)
[19:32:34] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:9c5c:4b2:b042:5e1)
[19:33:08] *** Quits: absc (~absc@access03.colt-engine.it) (Quit: Leaving.)
[19:35:13] <smallville7123> as i currently compute the view's position upon drawing it's FBO to the view
[19:35:52] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Ping timeout: 268 seconds)
[19:36:08] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:b1f3:b9ce:1ae8:bf80) (Ping timeout: 256 seconds)
[19:36:10] <smallville7123> but i did not account for the render buffer target that it draws to being a fixed size
[19:37:05] <lockywolf> test
[19:37:33] *** Quits: gargus (~user@124-150-74-109.tpgi.com.au) (Quit: Leaving)
[19:38:41] <smallville7123> for example, if GROUP's in GROUP->[ GROUP->VIEW, VIEW ] both compute the exact same window position due to their render buffer being the size of the window, then i am unable to detect a touch inside a group's sub group's view
[19:38:43] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[19:39:18] *** Joins: chomwitt (~chomwitt@athedsl-32301.home.otenet.gr)
[19:40:03] *** Quits: knielsen (~knielsen@mail.knielsen-hq.org) (Ping timeout: 276 seconds)
[19:41:59] <GeDaMo> lockywolf: test received
[19:42:11] <sandman13> lockywolf: Test failed successfully!
[19:42:21] <lockywolf> o_0
[19:44:06] <lockywolf> in addition to dhcp request and dhcp offer, there should also be dhcp thankyou
[19:44:22] <sandman13> there's DHCP ACK
[19:44:25] <Rashad> test failed successfully hahahaha
[19:44:38] *** Quits: zwr (~zwr@2804:d45:b966:fb00:29b7:bc69:3d63:eeb2) (Ping timeout: 256 seconds)
[19:44:56] *** Joins: fweht (uid404746@id-404746.tooting.irccloud.com)
[19:45:08] <Rashad> an application logged a local IP at work and the network people said they got no logs of that IP doing anything on the network 
[19:45:10] *** Joins: zwr (~zwr@2804:d45:b966:fb00:35a2:8b7b:d9fb:abe4)
[19:45:35] <Rashad> eventually they found records,
[19:46:02] <Rashad> but for a few hours I was totally amazed that that could happen 
[19:46:11] <sandman13> "127.0.0.1 is not a valid IPv4 addresss" was in the logs?
[19:46:37] <Rashad> it was an IP on LAN, I don't know if you call that local or not
[19:46:48] <Rashad> not localhost 
[19:46:49] *** Joins: RenAdjest2 (~RenAdjest@user/renadjest)
[19:46:50] <sandman13> private IP is a better term :D
[19:46:58] <Rashad> 10.0.x.x
[19:47:03] <Rashad> ah right
[19:47:16] *** Parts: TheBard (~TheBard@user/thebard) ()
[19:47:20] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[19:47:43] *** Quits: RenAdjest (~RenAdjest@user/renadjest) (Read error: Connection reset by peer)
[19:48:25] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 248 seconds)
[19:51:26] *** Quits: inky_ (~inky@46.36.117.137) (Ping timeout: 256 seconds)
[19:52:04] *** Joins: knielsen (~knielsen@mail.knielsen-hq.org)
[19:52:31] *** Joins: inky_ (~inky@46.162.232.72)
[19:53:06] <smallville7123> i might be able to get away with computing the position before i actually draw any of the childs
[19:53:45] *** Quits: mobidrop (~mobidrop@user/mobidrop) (Remote host closed the connection)
[19:54:09] *** Joins: mobidrop (~mobidrop@user/mobidrop)
[19:55:51] *** Quits: rwb (~augh@theguntretort.com) (Remote host closed the connection)
[19:56:04] *** Joins: rwb (~augh@theguntretort.com)
[20:02:44] *** Quits: mickey86 (~user@user/mickey) (Remote host closed the connection)
[20:04:13] *** Joins: mikeliuk (~mikeliuk@109.249.187.96)
[20:06:46] *** Quits: salitos (~salitos@197.156.137.148) (Read error: No route to host)
[20:08:17] *** Quits: FKAShinobi (~shinobi@2601:18c:d07f:f2e9:22e3:bb97:14a7:23e8) (Quit: Leaving)
[20:08:52] <sandman13> smallville7123: "draw any of the childs"? Do you mean sketching or reproducing?
[20:09:10] *** Joins: mickey86 (~user@user/mickey)
[20:09:30] <sandman13> Oh. nevermind
[20:09:38] <sandman13> didn't consider the context :(
[20:11:38] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[20:12:08] *** Quits: inky_ (~inky@46.162.232.72) (Read error: Connection reset by peer)
[20:13:47] *** mickey86 is now known as mickey
[20:15:11] *** Joins: inky_ (~inky@37.186.117.147)
[20:15:20] *** Quits: mobidrop (~mobidrop@user/mobidrop) (Ping timeout: 268 seconds)
[20:17:27] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:2117:b60c:bf9:2bda)
[20:18:21] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[20:19:20] *** Quits: chomwitt (~chomwitt@athedsl-32301.home.otenet.gr) (Ping timeout: 252 seconds)
[20:19:21] *** Quits: juliaEnv (~mathAndRh@ip-86-49-241-245.net.upcbroadband.cz) (Read error: Connection reset by peer)
[20:19:32] *** Quits: jazzy (~jaziz@2600:380:8638:b14c:3d37:fea7:101f:573e) (Ping timeout: 272 seconds)
[20:19:38] *** Joins: juliaEnv (~mathAndRh@ip-86-49-241-245.net.upcbroadband.cz)
[20:20:54] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:9c5c:4b2:b042:5e1) (Ping timeout: 256 seconds)
[20:21:12] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[20:23:23] <pyzozord> yep, lower tempreature and lower RPM at the same time. Not to mention almost silent. I am a fan.
[20:37:02] <Rashad> hello fan
[20:37:06] <Rashad> I am a human being
[20:37:14] <paulo> I'm an air conditioner.
[20:38:58] *** Joins: elnavigator (~elnavigat@105.196.50.210)
[20:39:05] <paulo> so... I just received an offer
[20:39:09] <paulo> negotiation time
[20:40:38] *** Quits: rsx (~dummy@ppp-188-174-136-60.dynamic.mnet-online.de) (Quit: rsx)
[20:41:05] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:41:18] *** Quits: xff0x (~xff0x@2001:1a81:5238:9600:357e:7c22:5b05:e9dc) (Ping timeout: 256 seconds)
[20:41:47] *** Joins: xff0x (~xff0x@2001:1a81:5238:9600:4e29:abec:ca9f:ff16)
[20:44:42] *** Quits: elnavigator (~elnavigat@105.196.50.210) (Ping timeout: 256 seconds)
[20:45:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[20:46:17] *** Joins: elnavigator (~elnavigat@105.196.50.210)
[20:46:46] *** Quits: dermato (~dermatobr@154.21.23.75) (Ping timeout: 272 seconds)
[20:50:51] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
[20:52:57] *** Quits: mz` (~mz`@user/mz/x-8532539) (Ping timeout: 248 seconds)
[20:55:31] <pyzozord> can someone explain to me how does this max slice algorithm work? https://ideone.com/VMcqZb
[20:55:33] <bayaz> Title: Ideone.com 
[20:55:47] <pyzozord> I feel like there is a sliding window hidden in there, but I don't understand it
[20:56:13] <GeDaMo> What's 'A'?
[20:56:48] <WarauSalesman> pyzozord: the text is incomplete or wrong
[20:56:53] <pyzozord> A is just array of intigers positive or negative
[20:57:01] <WarauSalesman> someone is fooling you
[20:57:19] <WarauSalesman> it doesn't make sense at all :)
[20:57:30] <pyzozord> WarauSalesman: I don't think so https://codility.com/media/train/7-MaxSlice.pdf
[20:57:32] <bayaz> Type: application/pdf Size: 134.0 kB 
[20:57:46] <WarauSalesman> I saw the article
[20:57:49] <WarauSalesman> they are conning you
[20:58:03] <pyzozord> oh you are just joking, ok
[20:58:10] <WarauSalesman> either is a bad code example or they are just handwaving shit
[20:58:30] <pyzozord> no it's just simple code with complex ideas behind it
[20:58:31] <WarauSalesman> the n3 and n2 with memoization are fine
[20:58:33] *** Joins: dermato (~dermatobr@154.21.23.75)
[20:58:34] <WarauSalesman> pyzozord: nope
[20:58:38] <WarauSalesman> it's bad incomplete code
[20:58:43] <WarauSalesman> can't you see that?
[20:58:46] <WarauSalesman> do you know how to code?
[20:58:57] <pyzozord> WarauSalesman: sometimes
[20:59:13] <WarauSalesman> oh if you aren't a coder, then that explains why you are believing the 'author'
[20:59:18] <Joanna> pyzozord: I think you are being trolled
[20:59:45] <pyzozord> Joanna: thanks :) I know, no worries. It doesn't bother me atm
[20:59:53] *** Joins: Yonle (~Yonle@user/yonle)
[21:00:11] <bjs> pyzozord: have you tried to run this on any example?
[21:00:26] <pyzozord> bjs: yeah, it works
[21:00:49] <bjs> pyzozord: what is it doing
[21:01:36] <pyzozord> I guess I can "execute" it on paper, this one is simple enough and can actually help understand what's happening
[21:01:40] *** Quits: Yonle (~Yonle@user/yonle) (Client Quit)
[21:01:54] <pyzozord> altought I did "execute" on paper other algorithms before, they worked and I still no idea what I was doing
[21:03:30] *** Joins: Izem (~rcg@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca)
[21:03:53] *** Quits: scabby_ (~scabby@user/scabootssca) (Ping timeout: 252 seconds)
[21:03:55] *** Joins: scabby (~scabby@user/scabootssca)
[21:09:28] <pyzozord> so I wrote out how it looks executed over time https://ideone.com/iB8lsv
[21:09:31] <bayaz> Title: Ideone.com 
[21:09:35] <pyzozord> i still don't reall understand
[21:11:04] *** Joins: Guest65 (~Guest65@160.238.75.247)
[21:11:30] <GeDaMo> That might be the value of the largest slice but it doesn't say where it is
[21:11:59] <Guest65> what should be maximum response of an rest api 
[21:12:06] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 272 seconds)
[21:12:07] <Guest65> response size
[21:12:59] <pyzozord> GeDaMo: yeah, I guess adding the starting position tracker wouldn't be hard
[21:14:08] <pyzozord> i just got another description. This algorithm sums the value of a slice, then whenever slice sum goes below zero it starts counint a new slice, that is what max_ending is doing
[21:14:14] <pyzozord> that's so clever!!
[21:14:19] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:14:39] <pyzozord> and then max_slice just remember whatever slice had the highest value
[21:14:42] *** Quits: ahungry (~user@99-40-9-245.lightspeed.livnmi.sbcglobal.net) (Ping timeout: 245 seconds)
[21:15:31] <pyzozord> the max_ending threw me off. It should be name slice_sum_at_this_pos_since_last_negative_sum or something
[21:16:52] <pyzozord> that is so clever. it keeps track of a start and end and sum of a slice with single variable
[21:17:00] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 256 seconds)
[21:17:06] <pyzozord> which is like a prefix sum except just the current top of it
[21:17:15] <beaky> nice i like prefix sums
[21:17:30] <GeDaMo> https://en.wikipedia.org/wiki/Segmented_scan
[21:17:30] <bayaz> Title: Segmented scan - Wikipedia 
[21:18:30] <Guest65> what should be maximum response size of an rest api 
[21:19:41] <pyzozord> Guest65: usualy apis provide "paginated" response. A client can request N number of items per page, and specify which page or chunk of the result it wants
[21:20:00] *** Joins: pulse (~pulse@user/pulse)
[21:20:15] <pyzozord> Guest65: max page count depending on situation is usually something like a 10-500
[21:20:58] <pyzozord> GeDaMo: this sounds about right, but it's very short so I'm not sure if I understand it right. But that could be it
[21:21:37] <Guest65> pyzozord (y) (y) (y) (y) (y) (y)  
[21:22:26] <user51> good evening
[21:22:28] <pyzozord> Apparently this algorithm has a name https://en.wikipedia.org/wiki/Maximum_subarray_problem#Kadane's_algorithm
[21:22:28] <bayaz> Title: Maximum subarray problem - Wikipedia 
[21:22:53] <GeDaMo> With a segmented scan, you provide the start of each segment, the slice algorithm you're looking at identifies them itself
[21:24:49] <pyzozord> yeah looks like that's the same idea but in this algorithm the start of a slice is implicit whenever sum of previous slice goes below zero
[21:29:26] *** Quits: Guest65 (~Guest65@160.238.75.247) (Quit: Client closed)
[21:31:28] *** Joins: Andalu30 (~andalu30@84.232.74.231)
[21:31:30] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[21:33:02] *** Quits: xff0x (~xff0x@2001:1a81:5238:9600:4e29:abec:ca9f:ff16) (Ping timeout: 245 seconds)
[21:33:58] *** Joins: xff0x (~xff0x@2001:1a81:5238:9600:abd9:7ea2:c2a4:a5eb)
[21:35:25] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[21:36:06] *** Quits: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com) (Ping timeout: 268 seconds)
[21:38:29] *** Joins: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com)
[21:39:04] *** Joins: inhahe_ (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net)
[21:39:53] *** Quits: Inhahe (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 258 seconds)
[21:39:57] *** Joins: ircseeker3 (~nodebot@185.187.243.123)
[21:42:15] *** Quits: Andalu30 (~andalu30@84.232.74.231) (Remote host closed the connection)
[21:44:03] *** Quits: juliaEnv (~mathAndRh@ip-86-49-241-245.net.upcbroadband.cz) (Quit: Going offline, see ya! (www.adiirc.com))
[21:44:53] *** Joins: Andalu30 (~andalu30@84.232.74.231)
[21:45:47] *** Joins: gggpkm (~gggpkm@60.10.23.162)
[21:46:52] *** Quits: Rashad (~textual@37.202.99.134) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[21:47:25] *** Joins: gggpkm_ (~gggpkm@60.10.23.162)
[21:48:25] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 248 seconds)
[21:50:30] *** Quits: sjmulder (~sjmulder@2a02-a443-33e5-1-48f8-35ff-ca94-a6de.fixed6.kpn.net) (Quit: Leaving)
[21:51:05] *** Quits: gggpkm (~gggpkm@60.10.23.162) (Ping timeout: 248 seconds)
[21:51:36] *** Joins: quartz (~quartz@2603-8001-7700-61a4-0000-0000-0000-0acb.res6.spectrum.com)
[21:52:01] *** matt_ is now known as Matt|home
[21:53:33] *** Quits: Andalu30 (~andalu30@84.232.74.231) (Remote host closed the connection)
[21:56:18] *** Quits: RenAdjest2 (~RenAdjest@user/renadjest) (Read error: Connection reset by peer)
[21:56:28] *** Joins: Andalu30 (~andalu30@84.232.74.231)
[21:56:51] *** Joins: RenAdjest (~RenAdjest@user/renadjest)
[21:57:40] *** Joins: akevinhuang2 (~thekevinh@user/thekevinhuang)
[22:00:09] *** Quits: akevinhuang (~thekevinh@user/thekevinhuang) (Ping timeout: 268 seconds)
[22:00:29] *** Joins: Yonle (~Yonle@user/yonle)
[22:00:32] *** Quits: elnavigator (~elnavigat@105.196.50.210) (Ping timeout: 245 seconds)
[22:02:39] *** Joins: webnet4 (~0x100@32.211.211.39)
[22:04:13] *** Joins: Samian (~Sami@2620:10d:c091:480::1:656f)
[22:04:29] <Izem> what is the difficuly in making a garbage collector an interface/trait?
[22:05:16] <GeDaMo> Do you mean 'garbage collectable'?
[22:06:06] <Izem> yeah
[22:06:19] <jeaye> Sounds like Rust's Drop trait.
[22:06:25] *** Joins: snake (~snake@user/snake)
[22:06:36] <Izem> how does it work in rust?
[22:06:39] <jeaye> https://doc.rust-lang.org/std/ops/trait.Drop.html
[22:06:40] <bayaz> Title: Drop in std::ops - Rust 
[22:07:25] <jeaye> Basically just like C++ dtors, but using traits.
[22:08:15] <CuriousErnestBro> since when did this become ##rust >.>
[22:08:42] <webnet4> better than c#
[22:08:44] <GeDaMo> You might have separate arenas for data items which can be automatically released and those which can't
[22:09:00] <webnet4> i'm going to put that on a tshirt
[22:09:18] *** Joins: oft_gegong (~mint@70.90.132.249)
[22:10:17] <Izem> yeah that makes sense
[22:12:28] <Izem> does anyone know which modula had the optional garbage collector?
[22:12:54] <oft_gegong> I'm 0%sure it's the first one
[22:13:26] <GeDaMo> Looks like Modula-3
[22:13:29] <webnet4> is that one of those 1960s languages
[22:13:34] <GeDaMo> https://en.wikipedia.org/wiki/Modula-3#Dynamic_allocation
[22:13:35] <bayaz> Title: Modula-3 - Wikipedia 
[22:13:38] *** Joins: chomwitt (~chomwitt@athedsl-32301.home.otenet.gr)
[22:13:45] <GeDaMo> "There are two kinds of memory that can be allocated, TRACED and UNTRACED, the difference being whether the garbage collector can see it or not."
[22:14:14] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[22:14:17] *** Quits: Yonle (~Yonle@user/yonle) (Ping timeout: 252 seconds)
[22:14:18] <CuriousErnestBro> piou "OAuth and OIDC are complicated, and it takes a lot of time and effort to understand and use them properly without opening yourself up to exploitation."
[22:14:20] <beaky> in general difficulties can arise when the particular interface / trait composes poorly for example if your trait is defined in a way where one implementations requires or shares (possibly complex) state with another implementation. for example a trait that requires an arena like say a flywieght or a garbage colelctable heap store, (1) these may not compose well at all you will either be
[22:14:22] <beaky> creating this state per every implementing object or (2) sharing this among several or maybe all possible implementations which can be very complex
[22:14:28] <CuriousErnestBro> ok fuck it, I'm writing my own auth flow
[22:14:41] <xheimlic1> famous last words.
[22:14:58] <CuriousErnestBro> xheimlic1 there's nothing you can use, nothing is safe apparenlty 
[22:15:00] <CuriousErnestBro> fuckoff.jpg
[22:15:31] <xheimlic1> that's not a well-known jpg I think.
[22:15:44] <xheimlic1> it's not like obama_notbad.jpg
[22:15:55] <Izem> beaky: I guess you will just have to decide beforehand on some simple rules
[22:16:00] <xheimlic1> does everyone else get the reference?
[22:16:11] <CuriousErnestBro> yes I get it
[22:16:17] <webnet4> no
[22:16:19] <CuriousErnestBro> xheimlic1 do you know isforme.jpg?
[22:16:46] <webnet4> i only know itshappening.jpg
[22:16:51] <Izem> I see, I like the dynamic allocation in modula
[22:16:54] <webnet4> i mean .gif
[22:16:57] <webnet4> oops!
[22:16:59] <CuriousErnestBro> webnet4 https://i.kym-cdn.com/entries/icons/facebook/000/035/182/cover1.jpg
[22:17:00] <bayaz> Type: image/jpeg Size: 72.8 kB 
[22:17:13] *** Quits: gggpkm_ (~gggpkm@60.10.23.162) (Ping timeout: 248 seconds)
[22:17:39] <Izem> I guess untraced memory can only be used in an unsafe block?
[22:17:59] <CuriousErnestBro> beaky what do I do? roll own auth flow or use oidc
[22:18:04] <beaky> what is oidc
[22:18:14] <CuriousErnestBro> disclaimer: I'm not planning on learning either correctly/fully
[22:18:26] <CuriousErnestBro> beaky oauth2 with authentication
[22:19:06] <CuriousErnestBro> authoriziation server gives ID JWT next to the access token 
[22:19:26] <CuriousErnestBro> so you know who is who, instead of writing your own hack
[22:19:34] <piou> If you want to authorize people then you want OIDC indeed
[22:19:39] <beaky> isnt jwt bad
[22:19:58] <piou> sorry, not authorize, authenticate
[22:20:13] <piou> beaky: if you want delegated authentication that's the way to go
[22:20:17] *** Joins: elnavigator (~elnavigat@105.196.50.210)
[22:20:27] <piou> CuriousErnestBro: thing is, I don't really see why you need delegated authentication
[22:20:33] *** Joins: Narrat (~omnius@p200300df5f0ae5c606ea56fffe2e7cdc.dip0.t-ipconnect.de)
[22:20:52] <CuriousErnestBro> there's a value in not storing passwords myself and letting FAANG do it
[22:21:09] <piou> which one?
[22:21:15] <beaky> yes if you dont need it just roll your own bro: tokens you test against a database 
[22:21:29] <CuriousErnestBro> I don't need to write my own auth flow (I learned what argon2 is yesterday)
[22:22:05] <beaky> and sign in with faang is insecure by design https://joonas.fi/2021/08/saml-is-insecure-by-design/
[22:22:07] <bayaz> Title: SAML is insecure by design 
[22:22:28] <Izem> why do you have to do auth?
[22:22:29] <piou> beaky: that's a bit of a different problem
[22:22:43] <CuriousErnestBro> is SAML the front-end for oidc/oauth?
[22:22:47] <piou> CuriousErnestBro: that's going to be more complex than managing authentication yourself though
[22:22:57] <piou> by an order of magnitude
[22:23:37] *** Quits: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com) (Ping timeout: 248 seconds)
[22:23:57] <oft_gegong> I'm gonna smoke some dope and dive into code. I'm gonna assess the first file, then the second file. Then work some syntax magic. You know what I'm sayin' bruh. I'm OG! And that's legit fam.
[22:24:03] <CuriousErnestBro> piou someone smart told me that in 99% of the cases the right answer is to use a library 
[22:24:34] <CuriousErnestBro> I'll probably miss some edge case 
[22:25:01] <CuriousErnestBro> you know what? maybe it's good to roll my own auth flow at least once 
[22:25:20] <piou> CuriousErnestBro: the library isn't going to manage the whole auth flow anyway
[22:25:43] <piou> CuriousErnestBro: that's a good advice, but it has its limits, and it's also true if you follow oidc or manage authentication yourseslf
[22:26:11] <piou> By which I *do not* mean reinvent the wheel trying to be a smart ass, but implement known solid authentication flows
[22:26:39] *** Joins: farmstatejake (~farmstate@user/farmstatejake)
[22:26:41] *** Quits: epolanski (uid312403@id-312403.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[22:27:15] <piou> Just, authenticate your users on your server rather than delegating that to another one. Delegation can be useful, but it's a can of worms.
[22:27:37] *** Quits: elnavigator (~elnavigat@105.196.50.210) (Ping timeout: 245 seconds)
[22:28:04] <CuriousErnestBro> piou I read that I need to first register with the oauth provider, then create a link to them ("authorization server"), and when I ("resource owner") gets a user ("Client") redirected to me,  I need to take the 'access token" from an url parameter and get data from the "resource server"
[22:28:48] <piou> CuriousErnestBro: and that tells me that you're not even on the right protocol right now because you just described an *authorization* protocl (oauth2) and not an authentication one
[22:28:53] <piou> OIDC
[22:28:59] <CuriousErnestBro> yes
[22:29:09] <deniska> Oauth2 feels like an elaborate prank each time I have to use it
[22:29:12] <piou> Which I recommend since it sits on top of oauth2, but still
[22:29:13] <CuriousErnestBro> oidc is oauth2 plus the following:
[22:29:41] <CuriousErnestBro> next to the access token, I get an ID JWT that I use to create an account in postgres instead of rolling my own
[22:30:06] *** Joins: elnavigator (~elnavigat@105.196.50.210)
[22:30:09] <beaky> yes i like oidc and oauth2 because it lets me invoke the faang of the tech leviathan that is silicon valley's most brilliant companies for authorization and authetniaitaton
[22:30:18] <CuriousErnestBro> and I can ask the resource server (or auth server, I forgot) if the JWT is legit
[22:30:32] <piou> auth server
[22:30:35] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[22:30:47] <[itchyjunk]> hello
[22:30:56] <oft_gegong> [itchyjunk]: WHATCHA DOIN
[22:31:12] <CuriousErnestBro> yeah auth server makes more sense :P
[22:31:37] <CuriousErnestBro> so I pretty much understand it :D
[22:31:52] <webnet4> amazon is in washington
[22:31:52] <CuriousErnestBro> but I probably should still write my own auth flow 
[22:31:59] <CuriousErnestBro> and use oidc for a next project, now that I know it exists
[22:32:15] <piou> CuriousErnestBro: and among all that you also need to implement correctly all the optional security features of oauth2 such as a proper state parameter that is well generated and checked, and pkce, and stuff. All of this is optional only because oauth2 designers are twats, it's actually really necessary in practice.
[22:32:34] <CuriousErnestBro> twats lol
[22:32:51] <[itchyjunk]> Well, 2 different thing. seems like i'll have to take a cs class and i dont know anything about cs
[22:32:52] <CuriousErnestBro> what is sign in with apple? oauth2?
[22:32:55] <CuriousErnestBro> it's not on their site
[22:32:59] <[itchyjunk]> other thing is, i am curious about recursions
[22:33:09] <webnet4> netflix is delaware
[22:33:35] *** Joins: audiocat (~audio@2603-8081-1800-00ad-6392-7d53-21a5-11ac.res6.spectrum.com)
[22:33:44] <Izem> [itchyjunk]: what would you like to know?
[22:34:13] <CuriousErnestBro> piou you know in my own auth rollout I'm using only the "subject" field of JWT to store a session token that I never expire 
[22:34:14] <GeDaMo> recursion: if you don't understand recursion, see: recursion 
[22:34:24] <Izem> ha 
[22:34:46] <piou> CuriousErnestBro: why?
[22:34:59] <CuriousErnestBro> because apps don't log you out for no reason
[22:35:02] <CuriousErnestBro> so why would I?
[22:35:21] <[itchyjunk]> Izem, if i am defining a function, how can i call it within it? it doesn't exist, does it?
[22:35:36] <piou> CuriousErnestBro: apps absolutely do log out after a reasonnable period of time for good reasons
[22:35:49] *** Joins: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[22:35:55] <CuriousErnestBro> piou I have never been logged out of my mobile instagram app after even years of use
[22:36:01] <GeDaMo> [itchyjunk]: it's a name which will exist by the time it comes to call it
[22:36:30] <piou> I've never used Instagram but now I know why
[22:36:34] <[itchyjunk]> hmm
[22:36:35] *** Quits: Andalu30 (~andalu30@84.232.74.231) (Remote host closed the connection)
[22:36:48] <CuriousErnestBro> instagram is from facebook which is the F in FAANG 
[22:36:57] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:c16:33c3:1bd1:6273)
[22:37:00] <CuriousErnestBro> and people worship those companies for their good technology practices 
[22:37:07] <piou> lol
[22:37:09] <bjs> [itchyjunk]: it had to exist to call it in the first place,  even just forgetting the recursion :)
[22:37:11] <webnet4> uhhh
[22:37:12] <[itchyjunk]> is this like a language dependent thing? some programms run the whole code to check for errors first and others do it on the fly
[22:37:15] <CuriousErnestBro> (I'm half-memeing if it wasn't clear)
[22:37:29] <[itchyjunk]> bjs, oh thats true
[22:37:32] <d3x0r> functional always exist before they run
[22:37:38] <d3x0r> (functions)
[22:37:43] <piou> CuriousErnestBro: Still, ok, if you say so. But it leaves you much less room for errors.
[22:37:55] <[itchyjunk]> d3x0r, oh how come?
[22:38:01] <user51> : function ;
[22:38:02] <[itchyjunk]> oh wait, right
[22:38:05] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (Quit: farmstatejake)
[22:38:06] <d3x0r> they can't run without existing? :)
[22:38:07] <bjs> [itchyjunk]: because of what i just said
[22:38:07] <bjs> yes
[22:38:10] <GeDaMo> If they didn't exist, how would you call them?
[22:38:11] <[itchyjunk]> right
[22:38:13] <CuriousErnestBro> I'm using rust and eveyrone knows you can't create wrong code in rust 
[22:38:15] <CuriousErnestBro> just kidding
[22:38:21] *** Quits: webnet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[22:38:26] *** Joins: Kol (~Kol@d75-157-122-186.bchsia.telus.net)
[22:38:28] <oft_gegong> <new topic> how do GUI API's with the OS work? Something has to write pixel-by-pixel art onto the screen. How does that all work?
[22:38:33] *** Joins: webnet4 (~0x100@32.211.211.39)
[22:38:33] <CuriousErnestBro> but I'll be extra careful I promise
[22:38:43] <d3x0r> oft_gegong pixel by pixel
[22:38:49] <CuriousErnestBro> and piou I can still revoke tokens by deleting them from my tokens table
[22:38:52] <GeDaMo> oft_gegong: I think it involves numbers :P
[22:38:57] *** Joins: vysn (~vysn@user/vysn)
[22:39:03] <CuriousErnestBro> so it's only marginally worse 
[22:39:04] <CuriousErnestBro> if at all
[22:39:06] <d3x0r> usually they have optimized routines for stright vertical and horizontal lines... and fonts are more bitmap copied than pixel-ated
[22:39:21] <oft_gegong> numbers, pixels, screen pixels, color codes. I think I get it now.
[22:39:55] <piou> CuriousErnestBro: I'd say it's manageable
[22:40:07] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:2117:b60c:bf9:2bda) (Ping timeout: 245 seconds)
[22:40:13] <CuriousErnestBro> piou what do you mean by that?
[22:40:43] <d3x0r> d3d/opengl which works with things differntly more asks 'what color should this be' and calls a function for every pixel... which is sort of the inverse of putting the pixels yourself
[22:40:47] <piou> CuriousErnestBro: Well, I certainly wouldn't call that ideal, but you can make it work by being cautious and preparing well
[22:42:00] <[itchyjunk]> If one is curious about "object oriented programming", do i need to pick a specific language first? Or are the concepts learnable in general setting
[22:42:13] <[itchyjunk]> i am not sure what language will be used (hopefully not java but might be)
[22:42:19] <webnet4> main difference between d3d/opengl is row order vs column order matrices
[22:42:19] <d3x0r> OOP is more a frame of mind than a language
[22:42:25] <bjs> [itchyjunk]: well you do have to pick a specific language at some point
[22:42:32] <d3x0r> but something with classes that support extend or inherit is closer to the paradigm than C
[22:42:49] <[itchyjunk]> hmm
[22:43:00] <[itchyjunk]> any short and sweet introduction article that you recommend?
[22:43:03] *** Quits: fweht (uid404746@id-404746.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[22:43:30] <Izem> [itchyjunk]: what language are you using?
[22:43:31] <CuriousErnestBro> piou I'll do the oauth/oidc thing when I want to publish my app on the app store (I don't think apple lets you publish without it)
[22:44:22] <[itchyjunk]> Izem, idk what language my class will use. i have done hello world with py, and lisp recently to try and get into programming mindset
[22:44:27] <Izem> java is pretty good for "oop", oracle has nice tutorials as well
[22:44:27] <CuriousErnestBro> sup [itchyjunk] aren't you a maths person?
[22:44:32] <piou> CuriousErnestBro: to be clear, I do not recommend you go the oauth/oidc route unless you need to. But there's a distinction between not delegating authentication (ie: managing authentication yourself) and between making your own protocol
[22:44:39] <[itchyjunk]> CuriousErnestBro, apparently i need a CS class for my degree
[22:44:41] <Izem> as for an intro, let me see
[22:44:51] *** Joins: Akuli (~Akuli@82-203-162-135.bb.dnainternet.fi)
[22:45:02] <piou> CuriousErnestBro: I know nothing of the app store though, so you're right, maybe it does become mandatory in that case
[22:45:09] <[itchyjunk]> and i have to take "accelerated intro to object oriented programming with lab module" since that's the only one available :(
[22:45:21] <beaky> what is object oriented programming
[22:45:28] <Izem> depends who you ask
[22:45:29] <[itchyjunk]> idk
[22:45:32] <GeDaMo> [itchyjunk]: check if the course has a website, it might mention the language
[22:45:37] <CuriousErnestBro> beaky programming with structs
[22:45:38] <[itchyjunk]> oh
[22:45:44] <beaky> nice i like structs
[22:45:54] <oft_gegong> <new topic> Assuming I poured unlimited power into my computer, would I be able to get more out of my machine?
[22:46:08] *** Joins: kspalaiologos (~kspalaiol@user/kspalaiologos)
[22:46:10] <cis> lots of OOP classes are Java, unfortunately
[22:46:22] <GeDaMo> Java or Python seems likely
[22:46:23] <CuriousErnestBro> piou I see, I do see value in doing both at least once, so I'll postpone oidc for now and roll my own auth flow as it looks more straightforward
[22:46:43] <CuriousErnestBro> to be honest, OOP programming is just programming with structs in my experience
[22:46:46] <d3x0r> encapsulation
[22:46:46] <CuriousErnestBro> at least at university 
[22:47:04] <CuriousErnestBro> is interfaces OOP?
[22:47:14] <d3x0r> a small detail of it ya
[22:48:09] <Izem> the big idea is supposed to be using some heirachy of objects
[22:48:11] <cis> OOP is about shoehorning things into hierarchies of objects
[22:48:15] *** Joins: Inari (~Pinkishu@p4fe7ebe0.dip0.t-ipconnect.de)
[22:48:24] <Izem> also functions and data live in the same place
[22:48:27] <CuriousErnestBro> just write code and don't worry about paradigms 
[22:48:33] <CuriousErnestBro> (:
[22:48:45] <Izem> yeah, it doesn't really work that way ...
[22:48:50] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[22:48:55] <CuriousErnestBro> why not?
[22:49:03] <cis> It's like the way 19th century scientists insisted on rigid classification systems for biological life
[22:49:11] <CuriousErnestBro> I hate overly abstracted code 
[22:49:12] <Izem> a language is based on a paradigm
[22:49:18] <CuriousErnestBro> and people tend to go that way with java 
[22:49:34] <CuriousErnestBro> but java isn't very bad otherwise
[22:49:38] *** Quits: inky_ (~inky@37.186.117.147) (Ping timeout: 272 seconds)
[22:49:51] <[itchyjunk]> uh java
[22:49:57] <[itchyjunk]> it uses java
[22:50:09] <[itchyjunk]> and it's for "advanced students" but they don't offer the regular class
[22:50:15] <[itchyjunk]> so i am stuck taking this :'(
[22:50:18] *** Quits: mikeliuk (~mikeliuk@109.249.187.96) (Quit: Connection closed)
[22:50:24] <CuriousErnestBro> [itchyjunk] just take a python class, preferably data science related, and get your degree and be done with it
[22:50:28] <[itchyjunk]> no option
[22:50:35] <d3x0r> https://www.eecis.udel.edu/~decker/courses/280f07/paper/KingJava.pdf Execution in the Kingdom of Nouns    (based on shoehorning to objects)
[22:50:36] <bayaz> Type: application/pdf Size: 154.0 kB 
[22:50:38] <CuriousErnestBro> what are the options?
[22:50:38] <[itchyjunk]> this is the only one offered that adds to my major
[22:50:41] <[itchyjunk]> this class
[22:50:44] <[itchyjunk]> nothing else
[22:50:57] <[itchyjunk]> if i wanna graduate this year that is
[22:51:02] <[itchyjunk]> they have a py class next year
[22:51:09] <Izem> [itchyjunk]: this might help https://docs.oracle.com/javase/tutorial/java/concepts/index.html
[22:51:09] <bayaz> Title: Lesson: Object-Oriented Programming Concepts (The Java‚Ñ¢ Tutorials > Learning the Java Language) 
[22:51:23] <[itchyjunk]> Izem, thanks
[22:51:30] <Izem> I found the java tutorials rather helpful, but I'm also a programmer :P
[22:51:39] <cis> [itchyjunk]: Java is survivable.
[22:51:56] <CuriousErnestBro> Izem I bet there was a time when youtube tutorials where you got spoonfed were more helpful :)
[22:52:05] <CuriousErnestBro> at least that time existed for me
[22:52:15] <CuriousErnestBro> now I love the docs, and find videos a waste of time 
[22:52:16] <Izem> I have never watched youtube tutorials
[22:52:23] <[itchyjunk]> cis, i hope so
[22:52:25] <[itchyjunk]> :<
[22:52:34] <Izem> I only started programing 4 years ago
[22:52:40] <GeDaMo> [itchyjunk]: what other languages do you know?
[22:52:50] <[itchyjunk]> I don't really know any language
[22:52:56] <CuriousErnestBro> I have, by a dude who taught c++ his name was thenewboston
[22:53:03] <[itchyjunk]> i've tried py,lisp,haskell, php 
[22:53:13] <Izem> you'd probably like haskell
[22:53:14] <[itchyjunk]> i made a irc bot in py recently
[22:53:24] <[itchyjunk]> i did kinda like haskell but it was also hard :P
[22:53:30] <Izem> oh lol
[22:53:31] <[itchyjunk]> but seemed useful for my algebra classes
[22:53:53] <CuriousErnestBro> actually systemd is more unix-way than what we had before, because systemd is a single program which handles daemonization well, unlike having similar (but not the same) code in each program willing to daemonize itself
[22:54:24] <GeDaMo> Java syntax is inspired by C and C++
[22:54:27] <[itchyjunk]> My home computer is crap but i have a free oracle VPS. I guess i should set up java there right?
[22:54:29] <Izem> there it is folks, haskell is hard we have evidence now :D
[22:54:39] <[itchyjunk]> would compiling java in ubuntu vs windows make a difference?
[22:54:44] <[itchyjunk]> for submitting hw and such
[22:54:46] <GeDaMo> It shouldn't
[22:54:46] <Izem> nope
[22:54:50] <CuriousErnestBro> [itchyjunk] ayyy the 24gb ram thing?
[22:54:51] <[itchyjunk]> ah good
[22:54:58] <Izem> they are probably really going to depend on an ide
[22:55:03] <[itchyjunk]> yes i think they give 24gb ram
[22:55:09] <Izem> eclipse I imagine
[22:55:13] <[itchyjunk]> oh ohh
[22:55:15] <CuriousErnestBro> I have it too, oracle is a great company
[22:55:16] <GeDaMo> One of Java's original selling points was 'write once, run anywhere'
[22:55:21] <[itchyjunk]> is eclipse available for ubuntu?
[22:55:24] <GeDaMo> It wasn't true but it sounded good :P
[22:55:25] <Izem> yeah
[22:55:29] <[itchyjunk]> phew
[22:55:35] <Izem> as a snap and in the community repos I think
[22:55:40] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 268 seconds)
[22:56:00] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:707c:2e67:8040:3848)
[22:56:34] <Izem> [itchyjunk]: did you do numerical analysis?
[22:56:44] *** Joins: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com)
[22:57:18] *** Quits: audiocat (~audio@2603-8081-1800-00ad-6392-7d53-21a5-11ac.res6.spectrum.com) (Ping timeout: 256 seconds)
[22:57:54] <[itchyjunk]> no
[22:58:00] <[itchyjunk]> pure math track
[22:58:08] <[itchyjunk]> i did elementary real analysis :s
[22:58:12] <Izem> that is math?
[22:58:19] <Izem> oh like abstract stuff?
[22:58:30] *** Quits: xcombelle (~Xavier_Co@abayonne-654-1-269-44.w92-146.abo.wanadoo.fr) (Ping timeout: 272 seconds)
[22:58:32] <[itchyjunk]> i took abstract alg I and II
[22:58:40] <[itchyjunk]> thats where i used haskell a little
[22:58:51] <[itchyjunk]> and for number theory and intro to mathematical cryptography
[22:58:59] *** Parts: TinoDidriksen (~TinoDidri@tinodidriksen.com) ()
[22:59:14] <[itchyjunk]> uni is finally forcing me to learn java! i knew this  day would come
[22:59:18] <Izem> ah cool
[23:00:02] *** Quits: amigojapan (uid86330@id-86330.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[23:00:04] *** Joins: inky_ (~inky@46.36.117.137)
[23:00:15] <karstensrage> seems like youre excited by that?
[23:01:16] <oft_gegong> [itchyjunk]: the jdk is bloated and there are no unsigned chars or unsigned ints. it frustrates me. other than though java is pretty neat.
[23:01:16] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[23:02:09] *** Joins: audiocat (~audio@2603-8081-1800-00ad-03a9-2109-fc11-cd8e.res6.spectrum.com)
[23:02:39] <[itchyjunk]> ah idk what unsigned chars or ints are yet
[23:02:58] <Izem> it was really cool to read java code and not be in shock
[23:03:09] <Izem> easy to understand
[23:03:20] <Izem> like from the java libraries
[23:03:28] *** Joins: audiofreeze (~audio@2603-8081-1800-00ad-cdc9-c13c-5e2e-2f9a.res6.spectrum.com)
[23:03:33] <Izem> it was like, oh this is code I would write
[23:03:36] *** Joins: masber (~masber@178.197.196.20)
[23:04:25] <[itchyjunk]> this sounds encouraging
[23:07:37] *** Quits: audiocat (~audio@2603-8081-1800-00ad-03a9-2109-fc11-cd8e.res6.spectrum.com) (Ping timeout: 245 seconds)
[23:08:29] *** Joins: pulse (~pulse@user/pulse)
[23:09:05] <beaky> so the bottom bit of windows isnt called the 'tray' its called the taskbar what are some other common things that are called the wrong name https://devblogs.microsoft.com/oldnewthing/20030910-00/?p=42583
[23:09:47] <beaky> where all the oem bloatware resides
[23:09:54] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[23:09:58] <[itchyjunk]> "How does it work? Good question. However, we will not discuss it in this article."
[23:10:04] <[itchyjunk]> lol, me trying to learn hello world
[23:10:37] <CuriousErnestBro> public class public static void main string argxs
[23:10:40] <CuriousErnestBro> just remember it
[23:10:43] <CuriousErnestBro> don't ask too many questions
[23:10:46] <d3x0r> the tray is the right side where clock and widget icons are
[23:11:33] <CuriousErnestBro> [itchyjunk] you don't need to know about fields and rings to do addition 
[23:11:35] <beaky> thats the 'notification area' calling that the 'tray' is wrong!
[23:11:36] <CuriousErnestBro> :^)
[23:12:56] <[itchyjunk]> CuriousErnestBro, you don't need it to do addition on some fields , rings and semi rings
[23:13:14] <[itchyjunk]> but you do need to know about them to apply addition operator on generic mathematical structures
[23:13:30] <CuriousErnestBro> yeah, you need public class static bla bla to do OOP 
[23:13:32] <[itchyjunk]> how do i run a file now? I guess i have to somehow compile it
[23:13:32] <CuriousErnestBro> or something
[23:13:42] <CuriousErnestBro> [itchyjunk] compile with javac, run with java 
[23:14:00] <[itchyjunk]> hmm
[23:14:03] <CuriousErnestBro> you'll get .class files, you run by passing in the name without .class 
[23:14:25] <[itchyjunk]> $ javac HelloWorld 
[23:14:25] <[itchyjunk]> -bash: javac: command not found
[23:14:30] <[itchyjunk]> Guess i don't have what i need
[23:14:36] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[23:14:43] <CuriousErnestBro> what linux are you on?
[23:14:44] <Akuli> at least the error is very googlable :)
[23:14:48] <[itchyjunk]> ubuntu 20.04
[23:14:50] <CuriousErnestBro> can you do java --version?
[23:14:55] <karstensrage> https://adoptopenjdk.net
[23:14:55] *** Joins: Crescendo (~Crescendo@user/crescendo)
[23:14:55] <bayaz> Title: AdoptOpenJDK 
[23:15:13] <oft_gegong> [itchyjunk]: you probz need to install the jdk
[23:15:14] <[itchyjunk]> $ java --version
[23:15:14] <[itchyjunk]> openjdk 11.0.11 2021-04-20
[23:15:14] <[itchyjunk]> OpenJDK Runtime Environment (build 11.0.11+9-Ubuntu-0ubuntu2.20.04)
[23:15:14] <[itchyjunk]> OpenJDK 64-Bit Server VM (build 11.0.11+9-Ubuntu-0ubuntu2.20.04, mixed mode, sharing)
[23:15:41] <CuriousErnestBro> idk if this means you have the JRE or JDK 
[23:15:47] <[itchyjunk]> same
[23:15:53] <CuriousErnestBro> anyways, run this: sudo apt-get install openjdk-11-jdk 
[23:16:37] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[23:16:41] *** Joins: x003fgqwe (uid479614@id-479614.tooting.irccloud.com)
[23:17:10] <oft_gegong> I think they call that the headless jdk..where you have the runtime but not the compiler.
[23:18:20] <[itchyjunk]> more errors :(
[23:18:21] <karstensrage> Java Runtime Environment (JRE), Java Development Kit (JDK)
[23:18:23] <[itchyjunk]> $ javac HelloWorld 
[23:18:23] <[itchyjunk]> error: Class names, 'HelloWorld', are only accepted if annotation processing is explicitly requested
[23:18:32] <karstensrage> javac HelloWorld.java
[23:18:45] <[itchyjunk]> oh.. i didn't save the file as .java
[23:18:47] * [itchyjunk] fixes
[23:18:58] <karstensrage> java HelloWorld
[23:19:18] <oft_gegong> javac HelloWorld.java && java HelloWorld #a shorter way
[23:19:35] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[23:19:44] *** Joins: Guest1642 (~Guest16@103.240.170.233)
[23:19:52] <karstensrage> java 11 has jshell which is super fun
[23:20:22] <Guest1642> how to convert later portion into arrow function ?
[23:20:22] <webnet4> is that like HolyC?
[23:20:23] <[itchyjunk]> oft_gegong, noted!
[23:20:31] <Guest1642> d3.select("#nAngle").on("input", function() {  update(+this.value);});//JS
[23:21:04] <karstensrage> its a Java REPL
[23:21:16] <[itchyjunk]> Great! I can do hello world in java now
[23:21:27] <[itchyjunk]> basically know all there is to know about programming at this point
[23:21:34] <karstensrage> great for all kinds of playing around without all the boilerplate
[23:23:02] <beaky> java has nice ides like jetbrains the best ide ever made
[23:23:21] *** Quits: oft_gegong (~mint@70.90.132.249) (Quit: Leaving)
[23:23:38] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[23:23:44] <d3x0r> by IDE you mean GUI form editor ? 
[23:23:44] <Caffeinated> lol
[23:24:07] <Caffeinated> java is a scripting language not an IDE
[23:24:09] <beaky> yes i like gui form editors
[23:24:30] <webnet4> IDE's are those red squigly line generators
[23:24:59] <beaky> yes i use emacs wish emacs had red squiggly lines
[23:25:05] <Caffeinated> the farmers market uses IDE's to count customers now
[23:25:10] <[itchyjunk]> hm think i am doing something wrong still
[23:25:21] <[itchyjunk]> why am i using nano? i should be using ecllipse
[23:25:41] <Caffeinated> real question is why are you telling us?
[23:26:02] <[itchyjunk]> ah i need gui to run eclipse
[23:26:02] <d3x0r> I think this GUI editor... https://ibb.co/hFmP742 drag and drop objects
[23:26:03] <bayaz> Title: image 
[23:26:08] <[itchyjunk]> boo
[23:26:13] <d3x0r> (s/think/like)
[23:26:26] <beaky> nice is that factorio in real life
[23:26:31] <[itchyjunk]> is there an alternative to eclipse that doesn't need a gui to run?
[23:26:43] <d3x0r> starbase - they have YOLOL programming langauge - something like basic
[23:26:53] *** Quits: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com) (Ping timeout: 252 seconds)
[23:27:09] <d3x0r> so I can hit button on the panel, and then test the buttons and update the meters with different banks of engine status
[23:27:24] <Caffeinated> bwbasic is cool i like bwbasic
[23:27:29] <d3x0r> was 'debugging' my friend's ship... it kept lurching strangely
[23:27:32] *** Joins: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com)
[23:28:02] <Caffeinated> d3x0r: that's just the camera people shaking the cameras
[23:28:12] <d3x0r> haha
[23:28:20] <beaky> nice i like basic too
[23:28:39] <d3x0r> ya I wish - I was almost stranded... when I filled it with cargo, it moves the center of mass and became REALLY hard to control
[23:28:40] <Caffeinated> its hilarious to see the actors often going the wrong way to the camera shaking
[23:28:42] <Izem> [itchyjunk]: the alternative is javac, java
[23:28:49] <GeDaMo> [itchyjunk]: if you're compiling and running in a terminal, you can use any plain text editor to write your code
[23:28:53] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[23:29:13] <beaky> basic was the first programming language i used when i was 8yo i didnt know what i was doing it said syntax error or something i got scared by the error messages and green screen thing it traumatized me away from programming
[23:29:28] <d3x0r> hah
[23:29:40] <d3x0r> not sure if amber would have helped
[23:29:44] *** Joins: molt (~molt@79.140.150.21)
[23:30:51] <Caffeinated> bwbasic is almost completely GWBASIC compatible which means it will load/run old GWBASIC programs
[23:30:53] <d3x0r> (oh, and you have to bolt things down, or they go flying; hence all the blue dots in the corners)
[23:31:30] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[23:32:47] <d3x0r> peek and poke were great commands on the apple ii basic :)
[23:33:13] *** Quits: adanwan_ (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[23:33:27] *** Quits: kspalaiologos (~kspalaiol@user/kspalaiologos) (Quit: Leaving)
[23:33:45] <[itchyjunk]> ah okay
[23:35:40] <jinsun> [itchyjunk]: many IDE's have some kind of remote ssh extension that you can use to connect to your linux VM and edit from your desktop, eclipse probably has something like that too
[23:36:26] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[23:36:48] <[itchyjunk]> wow, that's fancy
[23:37:46] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:707c:2e67:8040:3848) (Quit: Textual IRC Client: www.textualapp.com)
[23:38:40] *** Joins: Lyn (~Lyn@user/law)
[23:39:35] <Lyn> What's a good database for holding user account details? Would MongoDB or Redis do? Or should it be more stable like PostgreSQL
[23:43:21] <[itchyjunk]> okay i got elicpse locally too
[23:43:55] <deniska> Lyn: are you already storing any other kind of data?
[23:44:00] <Izem> Lyn: why not use Postgres?
[23:44:25] *** Quits: masber (~masber@178.197.196.20) (Quit: Client closed)
[23:44:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:45:05] <Lyn> deniska: no -- Izem: I heard it gets slower more easily, and is more difficult to scale horizontally
[23:45:55] <deniska> Lyn: you either underestimate how much data a single database instance can work on, or overestimate how much data you'll be storing
[23:47:26] <GeDaMo> If you're not dealing with billions of something, you probably don't have to worry :P
[23:47:59] <deniska> even billions of something is a matter of tens-hundreds gigabytes, and a single modern computer often can deal with that
[23:48:50] <deniska> but then typically you're dealing with something closer to millions, which is hundreds of megabytes, maybe low gigabytes of stuff
[23:50:12] *** Joins: Auron (Auron956@user/auron)
[23:50:47] *** Joins: mikeliuk (~mikeliuk@109.249.187.96)
[23:50:50] <deniska> I like to put it in another way, if you ever in the need of horizontal scaling, and your initial architecture wasn't completely bad, you probably have money to hire scaling specialists :)
[23:51:05] <Lyn> yeah, that's probably true lol
[23:51:06] *** nekodesu is now known as k0t
[23:51:44] <Lyn> I'm somewhat trying to ensure that at least I'm not digging a grave by making stupid decisions
[23:51:47] *** k0t is now known as katkot
[23:52:25] <pyzozord> does anyone know why in this algorithm starts a new slice every time the sum of last slice is lower than 0? That zero seems arbitrary to me https://en.wikipedia.org/wiki/Maximum_subarray_problem#Kadane's_algorithm
[23:52:26] <bayaz> Title: Maximum subarray problem - Wikipedia 
[23:53:52] <GeDaMo> "current_sum = max(0, current_sum + x)" seems like the obvious place
[23:53:58] <[itchyjunk]> i tried running hello world locally and am getting error
[23:53:59] <[itchyjunk]> https://bpa.st/EHUQ
[23:54:01] <bayaz> Title: View paste EHUQ 
[23:54:22] <[itchyjunk]> I don't think it's finding "System". when i start typing, it never suggests anything `System.`
[23:54:31] <pyzozord> GeDaMo: yeah that's the line I am not sure about, why does it use 0 specifically?
[23:54:55] <GeDaMo> Maybe because it assumes the largest value is always greater than 0?
[23:55:06] <[itchyjunk]> https://bpa.st/5IXA
[23:55:07] <bayaz> Title: View paste 5IXA 
[23:55:08] <[itchyjunk]> code here
[23:55:21] <pyzozord> GeDaMo: hmmm, could be
[23:55:27] <GeDaMo> [itchyjunk]: how are you running it?
[23:55:48] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[23:56:12] <[itchyjunk]> right click -> Run as -> 1. Java application
[23:56:54] *** Quits: Izem (~rcg@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca) (Quit: Lost terminal)
[23:56:54] <GeDaMo> Java has (or had) a thing where files had to be in specific subdirectories
[23:57:17] <pyzozord> the algorithm doesn't work for inputs with all negatives. but you can modify this line to "current_sum = max(x, current_sum+x)" and then it will work for all inputes with negatives
[23:57:24] <[itchyjunk]> Hm, i followed the eclipse steps for it's hellow world tutorial
[23:57:45] <deniska> Lyn: going with postgres is rarely stupid
