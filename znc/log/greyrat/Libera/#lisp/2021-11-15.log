[00:00:02] <pjb> You need a label to know what kind of form you have, so for IF form, let's use the symbol IF as a lable.
[00:00:27] <pjb> Then you need the TEST, the THEN branch, and optionnally, the ELSE branch.
[00:00:31] *** Joins: mononote (~mononote@user/mononote)
[00:00:53] <pjb> Let's keep thing simple and put that in a list: (IF TEST THEN ELSE)   (if there's no else, we set ELSE = NIL).
[00:01:02] <pjb> And so on for every lisp form!
[00:01:09] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:01:33] <pjb> For a LET, we need a list of BINDINGS, and a list of BODY expressions.  So let's wrap that in a list: (LET BINDINGS . BODY)
[00:01:52] <pjb> Spawns_Carpet[m]: do you see what's comming?
[00:02:00] <pjb> There's NOTHING to parse!
[00:02:21] <pjb> Lisp sources ARE those actuall lisp objects! There's no text to parse!
[00:03:42] <Spawns_Carpet[m]> I understand that much, but my interpreter needs to have a stack that can push and pop values like ints, strings, symbols, lists, etc and perform operations on them, or call functions and stuff
[00:04:24] <pjb> And you want to confuse the source sexps with this stack? What for?  Why are you trying to add confusion?
[00:04:53] <Spawns_Carpet[m]> yeah that's what I am confused about, the source sexprs should be totally separate right?
[00:05:50] <pjb> Of course.  
[00:06:13] <pjb> You will need more than a stack.  You will also need an environment.
[00:06:21] *** Joins: alexshendi (~alexshend@HSI-KBW-046-005-255-043.hsi8.kabel-badenwuerttemberg.de)
[00:06:55] <Spawns_Carpet[m]> yeah I do have a very simple environment that is a hashmap right now, but I will need add more to support local bindings with 'let' 
[00:07:06] <pjb> A lot of lisp form modify the environment (for a time, or over a scope).
[00:08:26] *** Quits: alexshe32 (~alexshend@2a02:8070:8796:7600:8848:51c7:564f:485a) (Ping timeout: 245 seconds)
[00:08:42] <pjb> So while in CL EVAL takes only one argument, the form to evaluate, (and it evaluates it in the "NIL" environment, ie. the global environment), your interpreter eval will need at least two arguents:: the form and the environment (like in scheme).
[00:09:38] <pjb> (defun my-eval (form environment) …)  For the stack, you may choose to use the interpreter stack; or to use an explicit stack. Then you may need to pass it as a third parameter to my-eval.
[00:13:16] <pjb> Spawns_Carpet[m]: that said, there are a few CL forms that may have some complex syntax. For example, LOOP.  But they're macros, they must expand to simplier special operators and function calls.
[00:13:52] <pjb> Spawns_Carpet[m]: remember that interpreting will involve first macroexpansion, possibly during the minimal compilation phase to do it once for all.
[00:14:07] <pjb> So the interpreter only has to deal with simple forms, similar to the syntactic tree.
[00:14:21] *** Joins: cjb (~cjbayliss@user/cjb)
[00:14:29] <Spawns_Carpet[m]> that's another thing that was throwing me off a little bit, but that actually helps a lot 
[00:14:48] <Spawns_Carpet[m]> that it all ends up being simple forms in the end it really nice
[00:16:41] <pjb> That said, I often find it easier to compile to a simple byte-code, and use a VM to interpret the byte code, instead of interpreting the source form.
[00:17:28] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[00:18:29] *** Parts: tevo (~tevo@164.163.114.211.yesconnect.net.br) (ERC (IRC client for Emacs 27.2))
[00:19:40] *** Joins: tevo (~tevo@164.163.114.211.yesconnect.net.br)
[00:21:53] <Spawns_Carpet[m]> what roughly would the bytecode for something like (defvar my-list '(1 2 3)) look like?
[00:22:02] <Spawns_Carpet[m]> just in pseudobytecode
[00:22:31] <Spawns_Carpet[m]> there is something about quoting that really confuses me on how it would translate into bytecode
[00:22:55] <Spawns_Carpet[m]> thanks for the discussion by the way, I have already learned quite a lot
[00:24:33] <Spawns_Carpet[m]> in emacs it looks like that just pushes the constant '(1 2 3)' onto the stack and binds it
[00:25:18] <Spawns_Carpet[m]> since I am in rust I will need to implement some sort of list like structure that I can push and pop from the stack, and do car, cdr, append, etc on
[00:25:56] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Ping timeout: 256 seconds)
[00:29:19] *** Joins: jao (~jao@194.99.104.13)
[00:35:58] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 260 seconds)
[00:37:04] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[00:40:56] *** Quits: theothornhill (~user@217.84-49-191.nextgentel.com) (Ping timeout: 245 seconds)
[00:42:03] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 265 seconds)
[00:50:54] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 260 seconds)
[00:52:59] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[00:57:03] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[00:57:07] *** Joins: theothornhill (~user@217.84-49-191.nextgentel.com)
[00:57:56] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Client Quit)
[01:01:32] *** Quits: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net) (Ping timeout: 268 seconds)
[01:02:37] *** Joins: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net)
[01:03:20] *** Quits: X-Scale (~ARM@83.223.243.66) (Ping timeout: 256 seconds)
[01:03:41] *** Joins: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt)
[01:04:23] *** Quits: theothornhill (~user@217.84-49-191.nextgentel.com) (Remote host closed the connection)
[01:04:34] *** Joins: theothornhill (~user@217.84-49-191.nextgentel.com)
[01:05:00] *** X-Scale` is now known as X-Scale
[01:06:21] *** Quits: shicz2 (~shicz@123.103.9.7) (Ping timeout: 245 seconds)
[01:07:08] <pjb> Spawns_Carpet[m]: obviously, since byte code is a vector of bytes, it cannot store lisp objects. Literals aka constants, should be stored separately.  The byte code makes references to a table of literals.
[01:07:21] <pjb> Spawns_Carpet[m]: you can have a look at clisp for an exammple..
[01:07:30] *** Joins: shicz2 (~shicz@123.103.9.7)
[01:10:49] <Spawns_Carpet[m]> i was considering having my bytecode be a tuple enum like this: enum Opcodes { PushValue(LispValue), ...}
[01:11:23] <pjb> Of course, you can extend the notion of byte code.  It can really be any data structure.
[01:12:19] <Spawns_Carpet[m]> it probably would be more efficient to have some sort of table to store literals in then continuing to recreate/allocate them  
[01:12:37] <Spawns_Carpet[m]> but I'm not super worried about performance right now ;)
[01:13:03] <pjb> You cannot recreate them. In lisp, literals can take days to compute, at compilation time…
[01:13:14] <Spawns_Carpet[m]> i was looking at emacs source code a little bit, and it's pretty intense 
[01:13:54] <Spawns_Carpet[m]> what do you mean days to compute???
[01:14:14] *** Quits: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net) (Ping timeout: 260 seconds)
[01:14:24] *** Quits: random-nick (~random-ni@87.116.165.220) (Read error: Connection reset by peer)
[01:14:30] *** greaser|q is now known as GreaseMonkey
[01:14:41] *** Joins: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net)
[01:15:50] <pjb> https://termbin.com/oykr
[01:15:59] <pjb> Spawns_Carpet[m]: days, or weeks!
[01:23:46] <moon-child> (defvar *foo* '#.(find-nuclear-launch-codes))
[01:26:34] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Quit: ERC (IRC client for Emacs 27.1))
[01:33:38] * Spawns_Carpet[m] notices a large bright flash in the distance through the window
[01:40:36] *** Joins: dre (~dre@2001:8003:c932:c301:e788:c1b2:43c3:18c)
[01:43:28] <Spawns_Carpet[m]> do you guys like to use regex for lexing or hand written lexers? I am rewriting mine (again) and am considering going with a regex based approach 
[01:43:43] *** Quits: dre (~dre@2001:8003:c932:c301:e788:c1b2:43c3:18c) (Remote host closed the connection)
[01:44:03] <macaw> Isn't regex too simple of an approach for most (if not all) grammars?
[01:44:08] <wasamasa> lexing
[01:44:29] <Spawns_Carpet[m]> for lisp I think it's okay
[01:44:30] <wasamasa> for splitting a language into tokens, it works quite well
[01:45:21] <Spawns_Carpet[m]> afaik it depends on whether the grammar has anything that is context dependent (if it's not regular) 
[01:45:41] <Spawns_Carpet[m]> i am not really a lexing/regex expert though
[01:46:39] <macaw> I see. Thanks. :)
[01:47:19] <macaw> Sounds like an elegant and compact solution, then.
[01:47:38] *** Joins: dre (~dre@2001:8003:c932:c301:c5de:7260:cf6e:da0c)
[01:51:44] <moon-child> Spawns_Carpet[m]: there is no reason to use anything other than recursive-descent for lisp
[01:52:54] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[01:53:47] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[01:56:51] <pjb> Spawns_Carpet[m]: some lexer generators use regexp to scan tokens. But this is a simplistic solution that is not efficient.  Better lexer generator will generate a DFA that will scan all the tokens at once, instead of trying each regexp separately.
[01:58:14] <pjb> Spawns_Carpet[m]: that said, lisp reader algorithm is specified, and you cannot really use regexps to do it correctly. Notably because distinguishing symbols from integers is contextual, depending on variables such as cl:*read-base*.
[01:58:48] <pjb> Spawns_Carpet[m]: better read chapter 2 of the Hyperspec, and implement the algo. This is the only algorithm that is specified by the hyperspec!
[02:00:04] <moon-child> pjb: in principle, a conservative approach that guards reader state could work.  You can't do something like: (let ((*read-base* 16)) 1f).  But that's really not worth while
[02:00:49] <pjb> moon-child: you can do worse, since you can define the rerader macro for #\( so that  (let ((*read-base* 16)) 1f) can work.
[02:01:12] <moon-child> right, hence 'guards reader state'
[02:02:34] *** Quits: skapata (~Skapata@user/skapata) (Quit: Ĝis.)
[02:04:38] *** Quits: theothornhill (~user@217.84-49-191.nextgentel.com) (Ping timeout: 260 seconds)
[02:09:10] *** Quits: lottaquestions (~nick@2607:fa49:5041:a200:bdac:69cd:e627:f419) (Quit: Konversation terminated!)
[02:11:37] *** Joins: blihp (~phil@c-68-43-233-92.hsd1.mi.comcast.net)
[02:15:52] *** Joins: AquaticBoy (~AquaticBo@li1424-88.members.linode.com)
[02:17:54] <Spawns_Carpet[m]> is the hyperspec for common lisp?
[02:18:08] *** Joins: alexshe71 (~alexshend@HSI-KBW-046-005-255-043.hsi8.kabel-badenwuerttemberg.de)
[02:18:37] *** Quits: alexshendi (~alexshend@HSI-KBW-046-005-255-043.hsi8.kabel-badenwuerttemberg.de) (Read error: Connection reset by peer)
[02:19:16] *** Quits: shicz2 (~shicz@123.103.9.7) (Ping timeout: 256 seconds)
[02:20:59] *** Joins: shicz2 (~shicz@123.103.9.7)
[02:21:57] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:b1d7:e14b:5957:fa7f)
[02:21:58] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:b1d7:e14b:5957:fa7f) (Changing host)
[02:21:58] *** Joins: skapata (~Skapata@user/skapata)
[02:22:10] *** Quits: makomo (~makomo@user/makomo) (Quit: WeeChat 3.2)
[02:24:54] <macaw> Yes. IIRC it was made for a specific implementation of CL (LispWorks) but it works out well in practice, as it only explains the portable parts of CL.
[02:26:10] <macaw> Once you get used to it's "old" style of HTML, it becomes *really* useful.
[02:27:14] <moon-child> that is old-style?
[02:28:02] *** Joins: asarch (~asarch@2806:10ae:7:2cca:f61b:4cfd:2d42:1782)
[02:29:06] <macaw> Kinda hard to explain it, but it follows closely the original ideas about how HTML documents should be structured - the "hyperlinked" nature of it. I like it. Nowadays, HTML is a JS delivery platform. ;P
[02:29:39] <macaw> You also have to get used to which links are to the glossary and which ones to the function/macro/symbol explanation.
[02:30:13] <macaw> After you get used to it's minor quirkyness, it's great.
[02:34:39] *** Quits: alexshe71 (~alexshend@HSI-KBW-046-005-255-043.hsi8.kabel-badenwuerttemberg.de) (Ping timeout: 268 seconds)
[02:35:48] *** Quits: AquaticBoy (~AquaticBo@li1424-88.members.linode.com) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:41:06] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[02:44:11] *** Quits: yewscion (~yewscion@72-21-196-65.amazon.com) (Ping timeout: 264 seconds)
[02:44:25] *** Joins: lottaquestions (~nick@2607:fa49:5041:a200:3917:83a0:3edb:bc3b)
[02:44:34] *** Joins: AquaticBoy (~AquaticBo@li1424-88.members.linode.com)
[02:45:38] *** Quits: asarch (~asarch@2806:10ae:7:2cca:f61b:4cfd:2d42:1782) (Quit: Leaving)
[02:45:59] *** Quits: anddam (~anddam@user/anddam) (Quit: WeeChat 3.3)
[02:53:31] *** Quits: rgherdt (~rgherdt@2a02:8109:86c0:d8d:f999:7dbf:ab48:5803) (Ping timeout: 265 seconds)
[02:57:51] *** Quits: blihp (~phil@c-68-43-233-92.hsd1.mi.comcast.net) (Quit: Leaving)
[02:58:01] *** Quits: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net) (Ping timeout: 245 seconds)
[03:08:17] *** Joins: anddam (~anddam@user/anddam)
[03:10:45] *** Quits: dre (~dre@2001:8003:c932:c301:c5de:7260:cf6e:da0c) (Quit: Leaving)
[03:10:45] *** Joins: alexshendi (~alexshend@2a02:8070:8796:7600:8848:51c7:564f:485a)
[03:11:02] *** Joins: dre (~dre@2001:8003:c932:c301:c5de:7260:cf6e:da0c)
[03:15:26] *** Quits: v0|d (~user@ns1.core.gen.tr) (Read error: Connection reset by peer)
[03:15:36] *** Joins: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net)
[03:19:18] *** Joins: rgherdt (~rgherdt@2a02:8109:86c0:d8d:f999:7dbf:ab48:5803)
[03:21:33] *** Joins: renzhi (~xp@2607:fa49:6500:b100::6e7f)
[03:32:40] *** Quits: rgherdt (~rgherdt@2a02:8109:86c0:d8d:f999:7dbf:ab48:5803) (Ping timeout: 265 seconds)
[03:33:54] *** Quits: AquaticBoy (~AquaticBo@li1424-88.members.linode.com) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[03:39:07] *** Quits: alexshendi (~alexshend@2a02:8070:8796:7600:8848:51c7:564f:485a) (Read error: Connection reset by peer)
[03:39:07] *** Joins: alexshe20 (~alexshend@2a02:8070:8796:7600:8848:51c7:564f:485a)
[03:40:03] *** Quits: alexshe20 (~alexshend@2a02:8070:8796:7600:8848:51c7:564f:485a) (Read error: Connection reset by peer)
[03:40:10] *** Joins: alexshendi (~alexshend@2a00:20:901f:ed6c:29e0:3d89:937a:1a8e)
[03:40:43] *** Joins: alexshe67 (~alexshend@HSI-KBW-046-005-255-069.hsi8.kabel-badenwuerttemberg.de)
[03:44:45] *** Quits: alexshendi (~alexshend@2a00:20:901f:ed6c:29e0:3d89:937a:1a8e) (Ping timeout: 265 seconds)
[03:50:06] *** Quits: macaw (~macaw@77-255-134-52.adsl.inetia.pl) (Ping timeout: 260 seconds)
[03:57:20] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[03:58:39] *** Quits: anddam (~anddam@user/anddam) (Quit: WeeChat 3.3)
[03:59:54] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[04:01:21] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[04:10:38] *** Quits: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net) (Ping timeout: 260 seconds)
[04:12:30] *** Joins: anddam (~anddam@user/anddam)
[04:16:51] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Quit: Leaving)
[04:17:10] *** Quits: alexshe67 (~alexshend@HSI-KBW-046-005-255-069.hsi8.kabel-badenwuerttemberg.de) (Ping timeout: 260 seconds)
[04:17:34] *** Joins: alexshendi (~alexshend@HSI-KBW-046-005-255-069.hsi8.kabel-badenwuerttemberg.de)
[04:18:45] *** Joins: macaw (~macaw@77-255-134-52.adsl.inetia.pl)
[04:20:50] *** Joins: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net)
[04:24:16] *** Quits: alexshendi (~alexshend@HSI-KBW-046-005-255-069.hsi8.kabel-badenwuerttemberg.de) (Read error: Connection reset by peer)
[04:24:26] *** Joins: alexshendi (~alexshend@HSI-KBW-046-005-255-069.hsi8.kabel-badenwuerttemberg.de)
[04:25:18] *** Joins: alexshe79 (~alexshend@2a00:20:901f:ed6c:74b3:4e99:1cf:dd13)
[04:25:19] *** Quits: alexshendi (~alexshend@HSI-KBW-046-005-255-069.hsi8.kabel-badenwuerttemberg.de) (Read error: Connection reset by peer)
[04:26:20] *** Joins: alexshendi (~alexshend@2a02:8070:8796:7600:8848:51c7:564f:485a)
[04:28:26] *** Quits: alexshendi (~alexshend@2a02:8070:8796:7600:8848:51c7:564f:485a) (Read error: Connection reset by peer)
[04:28:36] *** Joins: alexshe53 (~alexshend@2a02:8070:8796:7600:8848:51c7:564f:485a)
[04:29:59] *** Quits: alexshe79 (~alexshend@2a00:20:901f:ed6c:74b3:4e99:1cf:dd13) (Ping timeout: 268 seconds)
[04:53:11] *** Quits: renzhi (~xp@2607:fa49:6500:b100::6e7f) (Ping timeout: 264 seconds)
[05:00:11] *** Quits: X-Scale (~ARM@165.201.137.78.rev.vodafone.pt) (Ping timeout: 268 seconds)
[05:01:07] *** Joins: X-Scale` (~ARM@31.22.167.45)
[05:02:29] *** X-Scale` is now known as X-Scale
[05:08:49] *** Quits: alexshe53 (~alexshend@2a02:8070:8796:7600:8848:51c7:564f:485a) (Quit: -a- IRC for Android 2.1.59)
[05:17:22] *** Quits: jao (~jao@194.99.104.13) (Ping timeout: 260 seconds)
[05:19:24] *** Joins: gabot (~gabot@lambda.ccs.neu.edu)
[05:19:53] *** Quits: ski (~ski@remote12.chalmers.se) (Ping timeout: 264 seconds)
[05:21:29] *** Joins: jao (~jao@45.152.183.61)
[05:24:45] *** Quits: gabot (~gabot@lambda.ccs.neu.edu) (Remote host closed the connection)
[05:24:58] *** Joins: gabot (~gabot@lambda.ccs.neu.edu)
[05:29:31] *** Quits: gabot (~gabot@lambda.ccs.neu.edu) (Remote host closed the connection)
[05:29:44] *** Joins: gabot (~gabot@lambda.ccs.neu.edu)
[05:34:44] *** Quits: gabot (~gabot@lambda.ccs.neu.edu) (Remote host closed the connection)
[05:42:16] *** Joins: monkey_ (~user@190.104.116.153)
[05:44:08] *** Quits: hjudt (~hjudt@62-178-177-178.cable.dynamic.surfer.at) (Ping timeout: 265 seconds)
[05:45:09] *** Quits: hiruji (~hiruji@user/hiruji) (Read error: Connection reset by peer)
[05:51:08] *** Quits: masterbuilder (~user@user/masterbuilder) (Remote host closed the connection)
[05:55:38] *** Quits: jao (~jao@45.152.183.61) (Ping timeout: 260 seconds)
[05:57:29] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[06:01:18] *** Joins: gabot (~gabot@lambda.ccs.neu.edu)
[06:01:42] *** Quits: gabot (~gabot@lambda.ccs.neu.edu) (Remote host closed the connection)
[06:01:55] *** Joins: gabot (~gabot@lambda.ccs.neu.edu)
[06:05:39] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Quit: WeeChat 3.3)
[06:10:53] *** Joins: hjudt (~hjudt@62-178-177-178.cable.dynamic.surfer.at)
[06:14:11] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 268 seconds)
[06:28:20] *** Quits: slyrus (~slyrus@192-184-223-165.static.sonic.net) (Quit: Leaving)
[06:30:02] *** Quits: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr) (Quit: ZNC 1.8.2 - https://znc.in)
[06:33:36] *** Joins: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr)
[06:39:24] *** Joins: lisp123 (~lisp123@5.30.23.247)
[06:56:45] *** Quits: galex-713 (~quassel@portable.galex-713.eu) (Ping timeout: 268 seconds)
[07:03:18] *** Joins: monkey_ (~user@190.104.116.153)
[07:04:45] *** Joins: hiruji (~hiruji@user/hiruji)
[07:05:48] *** Joins: galex-713 (~quassel@portable.galex-713.eu)
[07:15:38] *** Quits: taiju (~taiju@M014013236064.v4.enabler.ne.jp) (Ping timeout: 256 seconds)
[07:18:09] *** Joins: cjb35394 (~cjbayliss@user/cjb)
[07:20:07] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[07:20:20] *** Quits: cjb (~cjbayliss@user/cjb) (Ping timeout: 260 seconds)
[07:20:21] *** Quits: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[07:20:41] *** Joins: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net)
[07:21:20] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[07:23:43] *** cjb35394 is now known as cjb
[07:31:39] *** Joins: asarch (~asarch@2806:10ae:7:2cca:f61b:4cfd:2d42:1782)
[07:32:58] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[07:36:16] *** Quits: cjb (~cjbayliss@user/cjb) ()
[07:41:36] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[07:49:46] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 268 seconds)
[07:53:19] *** Joins: _73 (~user@pool-96-233-64-53.bstnma.fios.verizon.net)
[07:53:36] *** Parts: _73 (~user@pool-96-233-64-53.bstnma.fios.verizon.net) ()
[08:02:06] *** Quits: macaw (~macaw@77-255-134-52.adsl.inetia.pl) (Ping timeout: 256 seconds)
[08:15:51] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[08:17:24] *** Quits: bcasiello (~bcasiello@066-189-087-112.biz.spectrum.com) (Ping timeout: 256 seconds)
[08:21:07] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[08:28:46] *** Quits: asarch (~asarch@2806:10ae:7:2cca:f61b:4cfd:2d42:1782) (Quit: Leaving)
[08:34:28] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[08:56:38] *** Quits: Oddity (Oddity@user/oddity) (Remote host closed the connection)
[09:04:40] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[09:23:55] *** Joins: aartaka (~aartaka@5.1.53.225)
[09:26:28] *** Parts: pranavats (3fba1d1b34@jabberfr.org) (Disconnected: Replaced by new connection)
[09:26:59] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[09:33:45] *** Quits: madrik (~user@122.168.20.128) (Remote host closed the connection)
[09:33:55] *** Joins: karlosz (~karlosz@47.151.136.69)
[09:42:26] *** Joins: lisp123 (~lisp123@5.30.23.247)
[09:44:29] *** Joins: retropikzel (~retropikz@83.245.254.187)
[09:47:07] <dre> I'm thinking I'm gonna try and make a text based RPG as a bit of a practise ground for learning lisp
[09:47:34] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 260 seconds)
[09:49:00] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[09:59:24] *** Quits: shicz2 (~shicz@123.103.9.7) (Ping timeout: 256 seconds)
[10:00:07] *** Joins: shicz2 (~shicz@123.103.9.7)
[10:04:16] <dre> end of announcement 
[10:05:41] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[10:06:14] <mdhughes> It's a good task for it. I've got one (not very large) which I used to drive me learning Scheme. And there's a partial example in Land of Lisp.
[10:11:18] *** Quits: shicz2 (~shicz@123.103.9.7) (Ping timeout: 256 seconds)
[10:12:35] *** Joins: shicz2 (~shicz@123.103.9.7)
[10:20:11] *** Quits: shicz2 (~shicz@123.103.9.7) (Ping timeout: 264 seconds)
[10:21:57] *** Joins: shicz2 (~shicz@123.103.9.7)
[10:28:39] *** Quits: bailon (~gizzard@saturn.whatbox.ca) (*.net *.split)
[10:28:39] *** Quits: lazr (~lazr@45.76.248.123) (*.net *.split)
[10:28:39] *** Quits: ratzkewatzke (~ec2-user@ec2-34-217-87-98.us-west-2.compute.amazonaws.com) (*.net *.split)
[10:28:39] *** Quits: taw10 (~taw@46.235.227.49) (*.net *.split)
[10:28:39] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (*.net *.split)
[10:28:39] *** Quits: rdrg109 (~rdrg109@user/rdrg109) (*.net *.split)
[10:28:40] *** Quits: samebchase (~thelounge@51.15.68.182) (*.net *.split)
[10:28:40] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (*.net *.split)
[10:28:48] *** Joins: bailon (~gizzard@saturn.whatbox.ca)
[10:28:49] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[10:28:53] *** Joins: taw10 (~taw@46.235.227.49)
[10:28:55] *** Joins: lazr (~lazr@45.76.248.123)
[10:28:57] *** Joins: samebchase (~thelounge@51.15.68.182)
[10:29:18] *** Joins: ratzkewatzke (~ec2-user@ec2-34-217-87-98.us-west-2.compute.amazonaws.com)
[10:29:43] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[10:31:35] *** Quits: galex-713 (~quassel@portable.galex-713.eu) (Ping timeout: 264 seconds)
[10:33:06] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[10:34:22] *** Quits: MetaYan (~MetaYan@c-7b5d235c.07-84-7462671.bbcust.telenor.se) (*.net *.split)
[10:34:22] *** Quits: okflo (~okflo@lisa.diesenbacher.net) (*.net *.split)
[10:34:23] *** Quits: derelict (derelict@user/derelict) (*.net *.split)
[10:34:23] *** Quits: cheers (user@2600:3c00::f03c:91ff:fe1c:3c39) (*.net *.split)
[10:34:23] *** Quits: eof (~eof@tty3.dev) (*.net *.split)
[10:34:30] *** Joins: MetaYan (~MetaYan@c-7b5d235c.07-84-7462671.bbcust.telenor.se)
[10:34:31] *** Joins: summerisle (~eof@tty3.dev)
[10:34:39] *** Joins: cheers (user@2600:3c00::f03c:91ff:fe1c:3c39)
[10:34:57] *** Joins: derelict (~derelict@user/derelict)
[10:35:00] *** Joins: okflo (~okflo@lisa.diesenbacher.net)
[10:37:30] *** Quits: shicz2 (~shicz@123.103.9.7) (Ping timeout: 260 seconds)
[10:39:18] *** Joins: shicz2 (~shicz@123.103.9.7)
[10:40:56] *** Quits: mononote (~mononote@user/mononote) (Ping timeout: 245 seconds)
[10:41:42] *** Joins: galex-713 (~quassel@portable.galex-713.eu)
[10:51:44] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[10:52:05] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[10:58:02] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 260 seconds)
[10:58:51] *** Joins: amb007 (~a_bakic@90.199.204.77.rev.sfr.net)
[11:09:40] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Ping timeout: 256 seconds)
[11:12:38] *** Joins: giammi_ (~giammi@62-167-236-20.static.adslpremium.ch)
[11:14:05] *** Joins: giammi (~giammi@62-167-236-20.static.adslpremium.ch)
[11:16:01] *** Quits: shicz2 (~shicz@123.103.9.7) (Ping timeout: 265 seconds)
[11:17:00] *** Joins: shicz2 (~shicz@123.103.9.7)
[11:20:26] *** Quits: aartaka (~aartaka@5.1.53.225) (Ping timeout: 260 seconds)
[11:20:33] *** Quits: giammi (~giammi@62-167-236-20.static.adslpremium.ch) (Ping timeout: 250 seconds)
[11:20:33] *** Quits: giammi_ (~giammi@62-167-236-20.static.adslpremium.ch) (Ping timeout: 250 seconds)
[11:21:08] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[11:22:15] *** Joins: rgherdt (~rgherdt@2a02:8109:86c0:d8d:f999:7dbf:ab48:5803)
[11:25:12] *** Quits: amb007 (~a_bakic@90.199.204.77.rev.sfr.net) (Ping timeout: 265 seconds)
[11:25:41] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 265 seconds)
[11:26:02] *** Joins: amb007 (~a_bakic@11.244.204.77.rev.sfr.net)
[11:26:42] <dto> dre: cool! you should visit #lispgames
[11:30:38] <dre> dto, thanks
[11:30:48] <dre> mdhughes, lmao at the book, I've never seen Land of Lisp 
[11:30:54] <dre> i wish it was still in print. 
[11:31:06] <dre> I'd definitely buy it 
[11:31:20] <mdhughes> You can get copies off 'zon or as PDF usually
[11:35:33] <dre> yeah i've looked -- I cbf reading pdf copy 
[11:35:39] <dre> but thanks anway
[11:37:01] *** Quits: amb007 (~a_bakic@11.244.204.77.rev.sfr.net) (Ping timeout: 250 seconds)
[11:37:18] *** Joins: amb007 (~a_bakic@166.198.204.77.rev.sfr.net)
[11:40:20] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[11:42:04] *** Joins: AquaticBoy (~AquaticBo@li1424-88.members.linode.com)
[11:43:34] *** Quits: shicz2 (~shicz@123.103.9.7) (Ping timeout: 265 seconds)
[11:44:33] *** Joins: shicz2 (~shicz@123.103.9.7)
[11:46:23] *** Quits: AquaticBoy (~AquaticBo@li1424-88.members.linode.com) (Client Quit)
[11:48:46] *** Quits: amb007 (~a_bakic@166.198.204.77.rev.sfr.net) (Read error: Connection reset by peer)
[11:49:45] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[11:50:11] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 264 seconds)
[11:58:17] *** Quits: karlosz (~karlosz@47.151.136.69) (Ping timeout: 268 seconds)
[12:00:19] *** Joins: rogersm (~rogersm@90.166.177.48)
[12:06:29] *** Joins: giammi_ (~giammi@62-167-236-20.static.adslpremium.ch)
[12:16:26] *** Quits: shicz2 (~shicz@123.103.9.7) (Ping timeout: 265 seconds)
[12:17:21] *** Joins: shicz2 (~shicz@123.103.9.7)
[12:26:51] *** Joins: occ (~occ@user/occ)
[12:35:38] *** Quits: retropikzel (~retropikz@83.245.254.187) (Remote host closed the connection)
[12:36:17] *** Joins: retropikzel (~retropikz@83-245-254-187-nat-p.elisa-mobile.fi)
[12:37:33] <moon-child> https://moscow.sci-hub.st/1092/9d973b3edb3ea7a7a2e081c9d47a38d7/lillibridge1999.pdf
[12:38:21] *** Quits: rogersm (~rogersm@90.166.177.48) (Read error: Connection reset by peer)
[12:40:44] *** Quits: retropikzel (~retropikz@83-245-254-187-nat-p.elisa-mobile.fi) (Read error: Connection reset by peer)
[12:41:01] *** Joins: retropikzel (~retropikz@83.245.254.187)
[12:41:11] *** Quits: hjudt (~hjudt@62-178-177-178.cable.dynamic.surfer.at) (Ping timeout: 264 seconds)
[12:41:50] <jackdaniel> purely functional, no recursion, error error
[12:42:08] *** Quits: retropikzel (~retropikz@83.245.254.187) (Remote host closed the connection)
[12:43:59] *** Quits: occ (~occ@user/occ) (Ping timeout: 265 seconds)
[12:45:08] *** Joins: retropikzel (~retropikz@83-245-254-187-nat-p.elisa-mobile.fi)
[12:46:22] <amazigh> what is the title of that paper moon-child, that domain is firewalled on my side.
[12:46:45] <amazigh> both domain and subdomain are blocked.
[12:46:47] <moon-child> amazigh: https://files.catbox.moe/ssw4yh.pdf
[12:46:49] <jackdaniel> Unchecked Exceptions Can Be Strictly More
[12:46:50] <jackdaniel> Powerful Than Call/CC*
[12:46:54] *** Joins: karlosz (~karlosz@47.151.136.69)
[12:47:19] <sham1> And the abstract tells us that it's the case in a statically typed lambda calculus without recursion
[12:48:23] <jackdaniel> 'all living people are free if we limit definitions of "living" and "free" to appropriately low levels'
[12:48:27] *** Joins: mononote (~mononote@user/mononote)
[12:48:54] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[12:49:17] <jackdaniel> moreso with a few additional assumptions we could say that "all people are living" (if we assume that dead are no longer people)
[12:49:31] *** Joins: rgherdt_ (~rgherdt@ip5f5af420.dynamic.kabel-deutschland.de)
[12:49:57] <jackdaniel> or that "all people are free" (if we assume that fulfilling all of /none/ needs is freedom)
[12:50:14] <jackdaniel> we could take it a step further and say, that are people are people, and it is hard argue that it is not correct ;)
[12:50:16] *** Quits: rgherdt (~rgherdt@2a02:8109:86c0:d8d:f999:7dbf:ab48:5803) (Ping timeout: 265 seconds)
[12:50:21] <moon-child> 'a natural extension with unchecked exceptions of even so limited a language as the simply-typed lambda calculus is Turing complete'
[12:50:23] <jackdaniel> sorry, I've got carried away a little
[12:51:33] <sham1> Yeah, from what I can tell, basically recursion is replaced by unchecked exceptions
[13:03:34] *** Quits: runejuhl (~runejuhl@user/runejuhl) (Ping timeout: 256 seconds)
[13:05:36] *** Quits: rgherdt_ (~rgherdt@ip5f5af420.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[13:07:32] *** Joins: hjudt (~hjudt@62-178-177-178.cable.dynamic.surfer.at)
[13:12:36] *** Joins: rgherdt (~rgherdt@2a02:8109:86c0:d8d:f999:7dbf:ab48:5803)
[13:13:32] *** Joins: runejuhl (~runejuhl@user/runejuhl)
[13:19:26] *** Quits: holycow (~rtaylor@69-172-184-139.cable.teksavvy.com) (Ping timeout: 256 seconds)
[13:23:11] *** Quits: runejuhl (~runejuhl@user/runejuhl) (Ping timeout: 250 seconds)
[13:24:41] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 245 seconds)
[13:26:24] *** Joins: holycow (~rtaylor@69-172-184-139.cable.teksavvy.com)
[13:35:51] *** Joins: runejuhl (~runejuhl@user/runejuhl)
[13:44:47] *** Joins: lisp123 (~lisp123@5.30.23.247)
[13:49:28] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 256 seconds)
[13:58:27] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[14:16:25] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:22:06] *** Quits: galex-713 (~quassel@portable.galex-713.eu) (Ping timeout: 265 seconds)
[14:25:19] <amazigh> I do not know what are "unchecked exceptions"
[14:25:24] <amazigh> ?
[14:26:22] *** Joins: galex-713 (~quassel@portable.galex-713.eu)
[14:29:23] *** Joins: poselyqualityles (~poselyqua@user/poselyqualityles)
[14:32:44] *** Quits: hjudt (~hjudt@62-178-177-178.cable.dynamic.surfer.at) (Ping timeout: 246 seconds)
[14:34:17] *** Quits: retropikzel (~retropikz@83-245-254-187-nat-p.elisa-mobile.fi) (Remote host closed the connection)
[14:35:10] *** Joins: retropikzel (~retropikz@83-245-254-187-nat-p.elisa-mobile.fi)
[14:39:22] *** Quits: Tordek_ (tordek@triton.blinkenshell.org) (Remote host closed the connection)
[14:39:31] *** Joins: Tordek (tordek@triton.blinkenshell.org)
[14:48:12] *** Quits: galex-713 (~quassel@portable.galex-713.eu) (Ping timeout: 265 seconds)
[14:54:45] *** Joins: hjudt (~hjudt@62-178-177-178.cable.dynamic.surfer.at)
[14:56:32] *** Joins: galex-713 (~quassel@portable.galex-713.eu)
[15:00:58] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[15:01:24] *** Joins: amb007 (~a_bakic@166.198.204.77.rev.sfr.net)
[15:03:36] *** Joins: xiews (~wxie@2409:891e:8f40:163e:bf59:5f64:61dd:f4c4)
[15:05:53] *** Quits: amb007 (~a_bakic@166.198.204.77.rev.sfr.net) (Ping timeout: 250 seconds)
[15:06:13] *** Joins: amb007 (~a_bakic@224.144.204.77.rev.sfr.net)
[15:13:01] *** Quits: amb007 (~a_bakic@224.144.204.77.rev.sfr.net) (Read error: Connection reset by peer)
[15:13:20] *** Joins: amb007 (~a_bakic@224.144.204.77.rev.sfr.net)
[15:13:20] *** Quits: amb007 (~a_bakic@224.144.204.77.rev.sfr.net) (Read error: Connection reset by peer)
[15:13:35] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[15:14:59] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[15:15:10] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[15:20:05] *** Joins: atgreen (~green@bras-base-toroon0628w-grc-49-142-112-220-24.dsl.bell.ca)
[15:31:53] *** Quits: giammi_ (~giammi@62-167-236-20.static.adslpremium.ch) (Ping timeout: 250 seconds)
[15:33:22] *** Joins: notzmv (~zmv@user/notzmv)
[15:35:07] *** Quits: karlosz (~karlosz@47.151.136.69) (Quit: karlosz)
[15:41:47] *** Quits: xiews (~wxie@2409:891e:8f40:163e:bf59:5f64:61dd:f4c4) (Ping timeout: 264 seconds)
[15:42:37] *** Joins: xiews (~wxie@101.93.21.97)
[15:45:38] *** Quits: hjudt (~hjudt@62-178-177-178.cable.dynamic.surfer.at) (Ping timeout: 256 seconds)
[15:48:37] *** Quits: galex-713 (~quassel@portable.galex-713.eu) (Ping timeout: 265 seconds)
[15:54:04] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[15:55:23] *** Quits: Tordek (tordek@triton.blinkenshell.org) (Remote host closed the connection)
[16:00:54] *** Quits: mtreis (~mtreis@ip68-9-89-162.ri.ri.cox.net) (Ping timeout: 260 seconds)
[16:01:36] *** Joins: hjudt (~hjudt@62-178-177-178.cable.dynamic.surfer.at)
[16:02:36] *** Joins: yewscion98 (~yewscion@72-21-196-65.amazon.com)
[16:03:33] *** yewscion98 is now known as yewscion
[16:03:43] *** Quits: shicz2 (~shicz@123.103.9.7) (Ping timeout: 268 seconds)
[16:04:08] *** Joins: shicz2 (~shicz@123.103.9.7)
[16:04:31] *** Joins: random-nick (~random-ni@87.116.165.220)
[16:05:14] *** Joins: galex-713 (gal@portable.galex-713.eu)
[16:05:42] *** Joins: Tordek (tordek@triton.blinkenshell.org)
[16:17:23] *** Joins: giammi_ (~giammi@62-167-236-20.static.adslpremium.ch)
[16:17:30] *** Joins: giammi (~giammi@62-167-236-20.static.adslpremium.ch)
[16:20:02] *** Quits: hjudt (~hjudt@62-178-177-178.cable.dynamic.surfer.at) (Ping timeout: 260 seconds)
[16:25:21] *** Quits: giammi (~giammi@62-167-236-20.static.adslpremium.ch) (Ping timeout: 265 seconds)
[16:31:32] *** Joins: GNUHacker (~foobar@fsf/member/GNUHacker)
[16:40:45] <mdhughes> Checked exceptions are from Java, have to be declared at the top of any function that emits them.
[16:41:29] *** Joins: hjudt (~hjudt@62-178-177-178.cable.dynamic.surfer.at)
[17:03:30] *** Joins: occ (~occ@user/occ)
[17:08:46] *** Quits: poselyqualityles (~poselyqua@user/poselyqualityles) (Remote host closed the connection)
[17:28:34] *** Joins: giammi (~giammi@62-167-236-20.static.adslpremium.ch)
[17:32:18] *** Quits: MiningMarsh (~MiningMar@user/miningmarsh) (Quit: ZNC 1.8.2 - https://znc.in)
[17:33:59] *** Quits: galex-713 (gal@portable.galex-713.eu) (Ping timeout: 265 seconds)
[17:34:34] *** Joins: galex-713 (~quassel@portable.galex-713.eu)
[17:35:49] *** Quits: giammi (~giammi@62-167-236-20.static.adslpremium.ch) (Ping timeout: 250 seconds)
[17:37:31] *** Joins: MiningMarsh (~MiningMar@user/miningmarsh)
[17:42:41] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 265 seconds)
[17:43:23] *** Joins: aartaka (~aartaka@5.1.53.225)
[17:46:29] *** Joins: lisp123 (~lisp123@5.30.23.247)
[17:49:58] *** Joins: Nselm (~Nselm@p200300d56f24d7fc990cbcbf196d40ce.dip0.t-ipconnect.de)
[17:50:59] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 250 seconds)
[17:59:39] *** Quits: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net) (Ping timeout: 268 seconds)
[18:00:32] *** Joins: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net)
[18:04:34] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[18:06:47] *** Joins: ym (~ym@5.143.220.3)
[18:14:51] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[18:15:17] *** Quits: retropikzel (~retropikz@83-245-254-187-nat-p.elisa-mobile.fi) (Quit: Leaving)
[18:24:37] *** Joins: tyson2 (~user@cpe688f2ec1f9b3-cm688f2ec1f9b0.cpe.net.cable.rogers.com)
[18:27:55] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:4ee:8c8e:69d7:47f4)
[18:27:55] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:4ee:8c8e:69d7:47f4) (Changing host)
[18:27:55] *** Joins: skapata (~Skapata@user/skapata)
[18:28:56] <sham1> Yeah. Basically in Java you can have exceptions as part of your function types. It's somewhat similar to what for example things like Haskell and Rust would represent in terms of a sum-type of a result or an error of some kind
[18:29:34] <sham1> But of course being Java, it was implemented in a way that people didn't like and thus people swore off checked exceptions
[18:30:32] *** Quits: galex-713 (~quassel@portable.galex-713.eu) (Ping timeout: 265 seconds)
[18:34:32] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[18:38:30] <mdhughes> And most functions end up doing try { ... } catch (SomeCheckedException e) { throw new RuntimeException(e); } to avoid it.
[18:38:43] *** Joins: Mooncairn (~mooncairn@user/mooncairn)
[18:53:16] *** Quits: xiews (~wxie@101.93.21.97) (Remote host closed the connection)
[18:54:30] *** Joins: mtreis (~mtreis@024-181-180-008.res.spectrum.com)
[18:55:43] *** Joins: Avichi (~Avichi@2001:980:1b5c:1:717c:39d4:a2c5:b35a)
[18:56:32] *** Quits: holycow (~rtaylor@69-172-184-139.cable.teksavvy.com) (Quit: Lost terminal)
[18:59:38] *** Joins: giammi (~giammi@62-167-236-20.static.adslpremium.ch)
[19:01:34] *** Joins: gproto23 (~gproto23@user/gproto23)
[19:07:16] *** Quits: giammi (~giammi@62-167-236-20.static.adslpremium.ch) (Ping timeout: 265 seconds)
[19:11:42] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[19:15:32] *** Quits: Nselm (~Nselm@p200300d56f24d7fc990cbcbf196d40ce.dip0.t-ipconnect.de) (Quit: Client closed)
[19:20:58] *** Quits: aartaka (~aartaka@5.1.53.225) (Ping timeout: 256 seconds)
[19:21:27] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[19:21:32] *** Quits: mtreis (~mtreis@024-181-180-008.res.spectrum.com) (Ping timeout: 256 seconds)
[19:24:35] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 250 seconds)
[19:24:46] *** Joins: strajder (~strajder@user/strajder)
[19:25:49] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[19:28:27] *** Joins: macaw (~macaw@77-255-134-52.adsl.inetia.pl)
[19:28:32] *** Quits: giammi_ (~giammi@62-167-236-20.static.adslpremium.ch) (Ping timeout: 265 seconds)
[19:29:07] *** Quits: xgqt (~user@static62133140007.ostnet.pl) (Remote host closed the connection)
[19:29:20] *** Joins: xgqt (~user@static62133140007.ostnet.pl)
[19:35:23] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[19:42:01] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[19:45:10] *** Joins: gproto23 (~gproto23@user/gproto23)
[19:51:10] *** Quits: tyson2 (~user@cpe688f2ec1f9b3-cm688f2ec1f9b0.cpe.net.cable.rogers.com) (Remote host closed the connection)
[19:52:33] *** Joins: masterbuilder (~user@user/masterbuilder)
[19:53:42] *** Joins: giammi_ (~giammi@62-167-236-20.static.adslpremium.ch)
[19:56:21] *** Quits: phantomics (~phantomic@71-218-252-43.hlrn.qwest.net) (Ping timeout: 245 seconds)
[19:58:44] *** Joins: lisp123 (~lisp123@5.30.23.247)
[20:03:59] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 264 seconds)
[20:08:07] *** Quits: jasom (~aidenn@2600:8802:7fa0:500:f833:278f:1567:d354) (Ping timeout: 250 seconds)
[20:08:55] *** Joins: phantomics (~phantomic@97-118-231-120.hlrn.qwest.net)
[20:15:56] *** Joins: bcasiello (~bcasiello@066-189-087-112.biz.spectrum.com)
[20:20:43] *** Joins: jasom (~aidenn@2600:8802:7fa0:500:f833:278f:1567:d354)
[20:21:33] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[20:24:05] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Quit: Leaving)
[20:30:54] *** Joins: lisp123 (~lisp123@5.30.23.247)
[20:36:02] *** Joins: Arw (~Arwalk@lfbn-dij-1-1329-53.w92-141.abo.wanadoo.fr)
[20:37:31] *** Quits: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[20:38:02] *** Quits: occ (~occ@user/occ) (Ping timeout: 256 seconds)
[20:45:37] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 250 seconds)
[20:47:50] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[20:58:38] *** Joins: puchacz (~puchacz@cpc96912-walt25-2-0-cust541.13-2.cable.virginm.net)
[21:00:43] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[21:01:38] <puchacz> hello; if I want a "dictionary" with sorted keys, like java.util.TreeMap, what library should I use from quicklisp please?
[21:02:42] <puchacz> I have records with timestamp that mark beginning of the validity period (valid until next record comes), so I want to quickly retrieve a record that was valid for a specific timestamp (which is of course unlikely to be equal a boundary value between records)
[21:04:23] *** Joins: lisp123 (~lisp123@5.30.23.247)
[21:06:05] *** Joins: bcasiello_ (~bcasiello@2600:380:8d63:6973:b809:997f:c4c0:f439)
[21:09:53] *** Quits: bcasiello (~bcasiello@066-189-087-112.biz.spectrum.com) (Ping timeout: 250 seconds)
[21:15:05] *** Joins: mtreis (~mtreis@024-181-180-008.res.spectrum.com)
[21:15:50] *** Joins: AquaticBoy (AquaticBoy@2a01:7e01::f03c:92ff:fe21:238c)
[21:20:13] *** Quits: AquaticBoy (AquaticBoy@2a01:7e01::f03c:92ff:fe21:238c) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:21:09] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Ping timeout: 250 seconds)
[21:21:29] *** Joins: amb007 (~a_bakic@208.144.204.77.rev.sfr.net)
[21:25:59] *** Quits: giammi_ (~giammi@62-167-236-20.static.adslpremium.ch) (Ping timeout: 265 seconds)
[21:27:27] *** Joins: AquaticBoy (~AquaticBo@li1424-88.members.linode.com)
[21:29:51] *** Quits: macaw (~macaw@77-255-134-52.adsl.inetia.pl) (Ping timeout: 265 seconds)
[21:30:08] <amazigh> puchacz: Otherwise try #commonlisp;
[21:30:19] <puchacz> tks
[21:32:25] *** Quits: mtreis (~mtreis@024-181-180-008.res.spectrum.com) (Ping timeout: 250 seconds)
[21:33:10] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[21:48:53] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 250 seconds)
[21:52:03] *** Joins: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca)
[21:52:56] *** Joins: bcasiello__ (~bcasiello@066-189-087-112.biz.spectrum.com)
[21:54:32] *** Quits: Partmedia (~kevinz@172-221-159-029.res.spectrum.com) (Ping timeout: 256 seconds)
[21:55:29] *** Joins: Partmedia (~kevinz@172-221-159-029.res.spectrum.com)
[21:56:47] *** Quits: bcasiello_ (~bcasiello@2600:380:8d63:6973:b809:997f:c4c0:f439) (Ping timeout: 264 seconds)
[21:56:57] *** Joins: mtreis (~mtreis@ip68-9-89-162.ri.ri.cox.net)
[21:56:58] *** Joins: macaw (~macaw@77-255-134-52.adsl.inetia.pl)
[21:58:38] *** Joins: lisp123 (~lisp123@5.30.23.247)
[22:06:06] *** Quits: Partmedia (~kevinz@172-221-159-029.res.spectrum.com) (Ping timeout: 265 seconds)
[22:11:57] *** Joins: rain3 (~rain3___@2a02:2f09:d10a:400:9e2f:eb47:e2ae:761d)
[22:17:02] *** Joins: giammi_ (~giammi@62-167-236-20.static.adslpremium.ch)
[22:17:36] *** Quits: xgqt (~user@static62133140007.ostnet.pl) (Remote host closed the connection)
[22:17:36] *** Quits: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[22:17:56] *** Joins: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net)
[22:18:06] *** Joins: Partmedia (~kevinz@172-221-159-029.res.spectrum.com)
[22:19:51] *** Quits: Alfr (~Alfr@user/alfr) (Remote host closed the connection)
[22:21:52] *** Joins: xgqtd (~user@static62133140007.ostnet.pl)
[22:23:15] *** Joins: Mattykins (~Matt@136-26-68-242.cab.webpass.net)
[22:24:05] *** xgqtd is now known as xgqt
[22:24:28] *** Quits: Partmedia (~kevinz@172-221-159-029.res.spectrum.com) (Ping timeout: 265 seconds)
[22:25:25] *** Quits: amb007 (~a_bakic@208.144.204.77.rev.sfr.net) (Read error: Connection reset by peer)
[22:26:54] *** Joins: Alfr (~Alfr@user/alfr)
[22:27:06] *** Quits: Mooncairn (~mooncairn@user/mooncairn) (Quit: Quitting)
[22:27:25] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[22:28:35] *** Quits: Alfr (~Alfr@user/alfr) (Remote host closed the connection)
[22:31:48] *** Joins: Alfr (~Alfr@user/alfr)
[22:33:10] *** Quits: letto (~letto@86.120.85.133) (Read error: Connection reset by peer)
[22:33:57] *** Quits: Alfr (~Alfr@user/alfr) (Remote host closed the connection)
[22:34:10] *** Joins: Jing_ (~hedgehog@2604:a840:3::106f)
[22:34:36] *** Quits: Avichi (~Avichi@2001:980:1b5c:1:717c:39d4:a2c5:b35a) (Quit: Client closed)
[22:35:31] *** Quits: Jing (~hedgehog@125.105.142.73) (Ping timeout: 245 seconds)
[22:36:32] *** Joins: letto (~letto@86.120.85.133)
[22:36:43] *** Quits: AquaticBoy (~AquaticBo@li1424-88.members.linode.com) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:40:34] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-48-67-70-102-17.dsl.bell.ca) (Quit: ZNC 1.8.2 - https://znc.in)
[22:41:25] *** Joins: pieguy128 (~pieguy128@bas1-quebec14-67-70-102-17.dsl.bell.ca)
[22:42:11] *** Quits: mononote (~mononote@user/mononote) (Ping timeout: 250 seconds)
[22:43:43] *** Quits: specbot (~specbot@common-lisp.net) (Remote host closed the connection)
[22:43:44] *** Quits: minion (~minion@common-lisp.net) (Read error: Connection reset by peer)
[22:44:04] *** Joins: specbot (~specbot@common-lisp.net)
[22:44:42] *** Joins: minion (~minion@common-lisp.net)
[22:46:14] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[22:46:42] *** Quits: giammi_ (~giammi@62-167-236-20.static.adslpremium.ch) (Ping timeout: 265 seconds)
[22:47:47] *** Joins: desantra (~skykanin@user/skykanin)
[22:48:04] *** Joins: Alfr (~Alfr@user/alfr)
[23:00:04] *** Quits: mtm (~mtm@c-174-58-99-93.hsd1.fl.comcast.net) (Remote host closed the connection)
[23:01:15] *** Quits: macaw (~macaw@77-255-134-52.adsl.inetia.pl) (Ping timeout: 250 seconds)
[23:01:44] *** Quits: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[23:02:04] *** Joins: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net)
[23:02:42] *** Joins: livoreno (~livoreno@user/notzmv)
[23:05:51] *** Quits: desantra (~skykanin@user/skykanin) (Quit: WeeChat 3.3)
[23:07:17] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[23:08:56] *** Quits: rain3 (~rain3___@2a02:2f09:d10a:400:9e2f:eb47:e2ae:761d) (Ping timeout: 265 seconds)
[23:17:21] *** Quits: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca) (Remote host closed the connection)
[23:17:39] *** Joins: Arwalk (~Arwalk@lfbn-dij-1-1329-53.w92-141.abo.wanadoo.fr)
[23:18:24] *** Quits: Arw (~Arwalk@lfbn-dij-1-1329-53.w92-141.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[23:18:58] *** Joins: Inline (~Inline@2a02:908:1252:7a80:7c12:e31e:34fb:c517)
[23:22:04] *** Joins: lisp123 (~lisp123@5.30.23.247)
[23:22:36] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[23:23:26] *** Quits: ym (~ym@5.143.220.3) (Ping timeout: 265 seconds)
[23:24:31] *** Joins: Avichi (~Avichi@2001:980:1b5c:1:717c:39d4:a2c5:b35a)
[23:35:19] *** Joins: john-a-carroll (~john-a-ca@host-92-28-178-6.as13285.net)
[23:37:26] *** Joins: Partmedia (~kevinz@172-221-159-029.res.spectrum.com)
[23:41:07] *** Quits: john-a-carroll (~john-a-ca@host-92-28-178-6.as13285.net) (Ping timeout: 250 seconds)
[23:41:11] *** Joins: cjb (~cjbayliss@user/cjb)
[23:45:50] *** Joins: slyrus (~slyrus@192-184-223-165.static.sonic.net)
[23:52:09] *** Quits: puchacz (~puchacz@cpc96912-walt25-2-0-cust541.13-2.cable.virginm.net) (Quit: Client closed)
[23:52:21] *** Joins: puchacz (~puchacz@cpc96912-walt25-2-0-cust541.13-2.cable.virginm.net)
[23:52:44] *** Quits: puchacz (~puchacz@cpc96912-walt25-2-0-cust541.13-2.cable.virginm.net) (Client Quit)
[23:54:05] *** Joins: Lycurgus (~juan@98.4.112.204)
[23:55:59] *** Joins: puchacz (~puchacz@cpc96912-walt25-2-0-cust541.13-2.cable.virginm.net)
