[00:08:43] *** Joins: notzmv (~zmv@user/notzmv)
[03:44:55] *** Quits: Sofia (~sofia@user/sofia) (Ping timeout: 240 seconds)
[03:59:18] *** Joins: Sofia (~sofia@user/sofia)
[06:12:35] *** Quits: Sofia (~sofia@user/sofia) (Ping timeout: 240 seconds)
[06:25:01] *** Joins: Sofia (~sofia@user/sofia)
[07:17:13] *** Joins: furrymcg1e (~devuan@cgn-89-1-209-26.nc.de)
[07:20:02] *** Quits: furrymcgee (~devuan@cgn-213-196-210-225.nc.de) (Ping timeout: 240 seconds)
[09:27:08] <greenbagels> what's the preferred way to enforce composite type invariants while allowing member data to be altered?
[09:27:52] <greenbagels> i.e. in something like C++ you can force all class changes of state to happen through public member functions that each individually preserve class invariants
[09:29:22] <greenbagels> in Julia it seems like immutability is the first measure to enforce this? but then for things like large objects, surely creating new objects for just simple modifications is overkill? or does optimization handle that
[09:30:27] <greenbagels> (I suppose immutability is not just a julia-specific solution, but one thats in a lot of functional languages, like OCaml and whatnot; and maybe it's not even the solution at all, and just only tangentially related)
[09:33:49] <energizer> for immutable types you can do validation inside a constructor. for mutable types you can do validation inside a setter
[09:34:54] <energizer> i like to think of struct attributes as private anyway
[09:35:42] <energizer> there are things like Accessors.jl for ergonomic immutables
[09:37:37] <energizer> i dont know how many of the relevant optimizations are available yet. presumably increasingly more in 1.8+ with escape analysis
[09:42:34] <greenbagels> energizer: well I think a setter is a good idea but I was thinking something stronger; like a mutable struct with setters to me resembles a fully-public class in C++ with setters
[09:43:11] <greenbagels> but im wondering if there's any way to achieve more of a members-only-editable-via-setters kinda deal
[09:44:20] <energizer> if you're making a type that can be immutable then immutable is a good default imo. 
[09:44:53] <energizer> but if it's not gonna work performance-wise, you can go immutable and rely on the convention that members are private
[09:45:05] <energizer> but if it's not gonna work performance-wise, you can go *mutable and rely on the convention that members are private
[09:46:57] <greenbagels> hmm ok
[09:47:58] <greenbagels> immutable might still work performance-wise; i imagine the optimization will be up to the challenge
[09:48:02] <greenbagels> like they say, write, *then* profile :)
[11:04:35] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[11:10:43] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 250 seconds)
[11:11:51] *** Joins: MajorBiscuit (~MajorBisc@c-001-013-060.client.tudelft.eduvpn.nl)
[12:59:35] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[13:01:01] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[13:15:36] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[13:16:56] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[13:34:15] *** Quits: Sofia (~sofia@user/sofia) (Remote host closed the connection)
[13:37:01] *** Joins: Sofia (~sofia@user/sofia)
[13:54:27] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[13:55:34] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[13:59:42] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[14:09:33] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[14:11:26] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:45:10] *** Joins: jdarnold (~jdarnold@static-98-118-34-170.bstnma.fios.verizon.net)
[15:20:56] *** furrymcg1e is now known as furrymcgee
[16:22:54] *** Joins: notzmv (~zmv@user/notzmv)
[17:21:00] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[18:12:55] *** Quits: Sofia (~sofia@user/sofia) (Ping timeout: 240 seconds)
[18:27:09] *** Joins: Sofia (~sofia@user/sofia)
[18:46:15] *** Quits: Sofia (~sofia@user/sofia) (Ping timeout: 240 seconds)
[19:00:42] *** Joins: Sofia (~sofia@user/sofia)
[19:10:54] *** ladyfriday is now known as mrmonday
[19:35:03] *** Joins: notzmv (~zmv@user/notzmv)
[20:01:08] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[22:10:09] *** Joins: notzmv (~zmv@user/notzmv)
[22:19:10] *** Joins: solatle (~user@2a02:2455:5a3:2600:8148:a249:9fcd:c006)
[22:29:05] *** Quits: MajorBiscuit (~MajorBisc@c-001-013-060.client.tudelft.eduvpn.nl) (Ping timeout: 250 seconds)
[22:31:13] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[22:36:55] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 256 seconds)
