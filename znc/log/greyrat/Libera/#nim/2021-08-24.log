[00:05:35] <FromDiscord> <enthus1ast> Nice!  I was also working on the runtime evaluation (dynamicAgain branch), which kinda works, but it cannot yet put values into the vm. And I'm unsure if both models can work the same, I don't know if I can (and should) feed all visible variables and procs into the vm.
[00:07:03] <FromDiscord> <haxscramper> I think it would be better to allow explicitly listing "captured" variables, for basic interop support
[00:07:12] <FromDiscord> <enthus1ast> Yes
[00:07:14] <FromDiscord> <haxscramper> But not necessarily all.
[00:07:31] <FromDiscord> <haxscramper> Although I don't know what would be the best approach for that either
[00:08:02] <FromDiscord> <haxscramper> Need more use cases& requirements and then expected behavior can be formulated
[00:08:21] <FromDiscord> <enthus1ast> Then maybe, I should look for alternatives to make the development workflow more pleasant,  maybe automatic shared object compilation/loading/binding
[00:09:28] <FromDiscord> <RattleyCooper> Anybody know what compile times are like on a raspberry pi 4?  My computer totally died Saturday night ðŸ˜¢   I can't afford to fix it atm so I might fallback to using the rpi 4 and am curious as to what I can expect
[00:09:43] <FromDiscord> <enthus1ast> At least the "I design my site, an play with values" usecase would be more pleasant
[00:14:20] <FromDiscord> <enthus1ast> But I'll play with different possibilities
[00:15:02] *** Joins: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca)
[00:15:40] <FromDiscord> <sheerluck> May I `import fusion/matching` or is it forbidden for me? ðŸ˜¦  â†µ`Error: cannot open file: fusion/matching`
[00:18:38] <FromDiscord> <haxscramper> do you have it installed?
[00:18:58] <FromDiscord> <haxscramper> fusion has to be installed like a separate package, it is not bundle with nim
[00:25:58] <FromDiscord> <sheerluck> Thank you
[00:34:02] <FromDiscord> <unsafe> is this a bug or I'm doing something wrong? windows 10, fresh install, nim works fine but nimble doesn't https://media.discordapp.net/attachments/371759389889003532/879455960681287740/unknown.png
[00:36:04] <FromDiscord> <5271> helo
[00:36:22] <FromDiscord> <5271> i have one quite dumb questionâ†µhow do i update nim to a never version? <w>
[00:36:58] <FromDiscord> <unsafe> nimble update stable, i guess
[00:37:05] <FromDiscord> <unsafe> or no choosenim update stable
[00:39:42] <FromDiscord> <5271> uhhâ†µwhen i type nimble update stable it tells me `Error: Package list with the specified name not found.`
[00:40:55] <FromDiscord> <unsafe> choosenim should be right
[00:41:03] <FromDiscord> <unsafe> nimble was my mistake ;-D
[00:41:10] <FromDiscord> <5271> hmmâ†µokay
[00:48:07] *** Quits: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca) (Ping timeout: 240 seconds)
[01:04:05] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[01:07:09] <FromDiscord> <unsafe> In reply to @unsafe "is this a bug": ok, that was default windows antivirus, he doesn't really like nim
[01:07:11] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[01:32:06] *** Quits: audiophile_ (~audiophil@user/audiophile) (Quit: Default Quit Message)
[01:36:04] <FromDiscord> <gerwy> well so basically i think that module i use for my little script use something that is for x86 and not armâ†µis there any hope for me to compile it on arm?
[01:40:53] <FromDiscord> <gerwy> or it is something wrong with my linker hmm
[01:47:53] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[01:48:26] <FromDiscord> <gerwy> ugh so basically arm-gcc cannot find -lz i have no idea why
[01:56:27] <FromDiscord> <5271> In reply to @unsafe "choosenim should be right": i did what u said and some other linux stuff and now it works
[01:56:33] <FromDiscord> <5271> so thank u :3
[02:07:03] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:a4b1:e74b:d226:1434)
[02:26:51] <FromDiscord> <Canelhas> hey folks, how to deal with this? https://media.discordapp.net/attachments/371759389889003532/879484359340589166/unknown.png
[02:26:57] <FromDiscord> <Canelhas> this is the error https://media.discordapp.net/attachments/371759389889003532/879484382220537856/unknown.png
[02:28:53] <FromDiscord> <Canelhas> this seems to be caused by the fact that i'm mutating the reference inside parsePrefixExpression, which conflicts with the returning type. â†µâ†µHowever, the return is of type Nud, which is declared as a var type https://media.discordapp.net/attachments/371759389889003532/879484866054475806/unknown.png
[02:59:01] *** Quits: max22- (~maxime@2a01cb08833598003b8195a36b8206ab.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[03:34:58] *** Quits: Freneticks (~Frenetick@gw.ptr-80-238-209-252.customer.ch.netstream.com) (Ping timeout: 240 seconds)
[03:49:41] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[03:50:48] *** Joins: flynn (~mcbloch@user/flynn)
[03:56:07] <arkanoid> is it possible to use template "body" arg to replace only the "of" cases of case statement that lives between the "case XXX" and "else: foo" ?
[03:58:24] <FromDiscord> <Elegantbeef> Without a more elaborate code example i'm going to say no
[03:58:46] <arkanoid> I think I've found an old forum post about same question https://forum.nim-lang.org/t/2142
[03:59:05] <arkanoid> I see op used compile time proc to inject "of" cases
[04:01:01] *** Joins: Freneticks (~Frenetick@gw.ptr-80-238-209-252.customer.ch.netstream.com)
[04:01:10] <arkanoid> any news on this? I've been using nim for less than 6 months, can't look back in time looking for differences
[04:04:25] *** Joins: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca)
[04:06:04] *** Quits: def- (~def-@static.238.114.9.176.clients.your-server.de) (Quit: -)
[04:06:15] *** Joins: def- (~def-@static.238.114.9.176.clients.your-server.de)
[04:26:06] <FromDiscord> <âƒŸâƒŸ> is there an official gui lib?
[04:27:35] *** Quits: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca) (Read error: No route to host)
[04:27:56] *** Joins: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca)
[04:28:49] <FromDiscord> <Elegantbeef> Nope there are bindings for most of the gui libraries and a few pure nim implementations but no "official"
[04:32:52] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[04:34:30] <Gustavo6046> So I have a function that iterates on a sequence of items, and does one operation on all of them, then another operation on all of them, then.... so, this feels like it could use some abstracting away the common element. Is there a way to do that, perhaps a template? See defaultRays in https://play.nim-lang.org/#ix=3wMF
[04:39:58] <FromDiscord> <impbox [ftsf]> do the iteration outside the function?
[04:40:09] <Gustavo6046> Hm?
[04:40:29] <FromDiscord> <Elegantbeef> This may work\: https://play.nim-lang.org/#ix=3wMG
[04:40:30] <arkanoid> Gustavo6046: how about sequtils.map or zero-functional (https://github.com/zero-functional/zero-functional) ?
[04:40:31] <FromDiscord> <Elegantbeef> Though i notice your `rays` variable is not a `var RaysValueArray` so should probably should be since you're mutating it
[04:41:12] <FromDiscord> <impbox [ftsf]> sent a code paste, see https://paste.rs/JNs
[04:41:17] <FromDiscord> <impbox [ftsf]> not sure why you'd want to abstract that
[04:41:32] <FromDiscord> <impbox [ftsf]> sounds like it would just make it more confusing
[04:41:36] <FromDiscord> <impbox [ftsf]> for something so simple
[04:42:00] <FromDiscord> <impbox [ftsf]> though unless you have a good reason you may as well do func1 and func2 in the same iteration loop?
[04:42:02] <Gustavo6046> Hmm, interesting. I'll check those proposals :)
[04:42:06] <Gustavo6046> It is simple in this scenario, but it's an idea which is going to happen much more, riffing on the struct-of-array style of computation
[04:42:24] <FromDiscord> <Elegantbeef> map generallly converts to a different type using a procedure they're just wanting to apply to a collection
[04:42:26] <Gustavo6046> Particularly later when the actual simulation side of things is implemented
[04:42:31] <FromDiscord> <impbox [ftsf]> sent a code paste, see https://play.nim-lang.org/#ix=3wMH
[04:42:50] <FromDiscord> <impbox [ftsf]> i'd say don't add unnecessary abstraction
[04:42:54] <FromDiscord> <impbox [ftsf]> keep things simple
[04:43:00] <Gustavo6046> Hm, alright
[04:43:06] <Gustavo6046> Isn't it better for the CPU cache to do these both in separate loops?
[04:43:09] <Gustavo6046> Or something like that?
[04:43:16] <FromDiscord> <impbox [ftsf]> i odn't know, profile it if it's important
[04:43:17] <FromDiscord> <Elegantbeef> Yea the iterator of `mitems` and doing it all to `rayval` makes more sense
[04:43:26] <FromDiscord> <impbox [ftsf]> but if it's not important then don't worry
[04:43:38] <FromDiscord> <impbox [ftsf]> premature optimisation etc
[04:43:52] <FromDiscord> <impbox [ftsf]> easy to change later
[04:43:55] <Gustavo6046> Hm, fair enouogh
[04:43:58] <Gustavo6046> yeah
[04:44:06] <Gustavo6046> thanks for the tips :)
[04:44:11] <FromDiscord> <Elegantbeef> Given the size of the objects it probably is better for the cache, but the question becomes is the cache efficiency better or worse than the double loops
[04:44:25] <Gustavo6046> I think I'll use the sequtils applyit approach. It is exactly what I wanted
[04:44:38] <Gustavo6046> And it looks neat and not clumsy so it doesn't hurt maintainability - which is a valid concern!
[04:44:44] <Gustavo6046> Huh, I should join the nim discord
[04:45:02] <FromDiscord> <Elegantbeef> Or the matrix ðŸ˜›
[04:45:17] <Gustavo6046> Eh, if I wanted to use an open protocol I'd go for XMPP
[04:45:20] <FromDiscord> <impbox [ftsf]> nice thing about keeping it simple is it's easy to switch between multiple loops and a single loop as needed
[04:45:24] <Gustavo6046> Matrix's protocol is a little bit dumb
[04:45:43] <Gustavo6046> Or at least not much better than Discord's
[04:46:01] <Gustavo6046> Then again iirc both use JSON rather than XML
[04:46:18] <FromDiscord> <Elegantbeef> So they're better
[04:46:21] <Gustavo6046> but may be complicating things a bit?... I dunno, don't really take any of this I'm saying seriously
[04:46:29] <Gustavo6046> Well, Discord is more intuitive to use, although it's also a bit shady sometimes
[04:46:41] <Gustavo6046> And
[04:46:45] <Gustavo6046> eh
[04:46:53] <FromDiscord> <Elegantbeef> Yea i was just kidding of course use whatever you want, i just have to insult xml now
[04:47:07] <Gustavo6046> S'all the same, don't really take what I'm saying!
[04:47:10] <FromDiscord> <Gustavo6046> Also hi!
[04:47:15] <FromDiscord> <impbox [ftsf]> o/ welcome
[04:47:21] <FromDiscord> <Gustavo6046> Hello \o
[04:47:23] <FromDiscord> <Gustavo6046> How do yo udo?
[04:47:23] <FromDiscord> <Elegantbeef> Yellow
[04:47:32] <FromDiscord> <Gustavo6046> red
[04:47:37] <FromDiscord> <Elegantbeef> @Canelhas\: just noticed your message do you still need help there?
[04:47:44] <FromDiscord> <impbox [ftsf]> would do better if i was working in nim instead of C, but not bad =)
[04:47:55] <FromDiscord> <Gustavo6046> aw
[04:48:01] <FromDiscord> <Elegantbeef> Just squint and there is no diference
[04:48:03] <FromDiscord> <Gustavo6046> well, at least it's not C++
[04:48:04] <FromDiscord> <Gustavo6046> \:p
[04:48:04] <FromDiscord> <Canelhas> In reply to @Elegantbeef "<@161244406903472129>\: just noticed your": hey, thanks for the attentionâ†µindeed, i do
[04:50:03] <FromDiscord> <Elegantbeef> Can you do me a favour and do `choosenim devel` and then compile the program?
[04:50:17] <FromDiscord> <Elegantbeef> I have a hypothesis that is best solved with a modern Nim compiler
[04:51:55] <FromDiscord> <Elegantbeef> My thinking is the issue is just a calling convention/pragma issue and the modern compiler has a better error message courtesy of me ðŸ˜›
[04:52:23] <FromDiscord> <Canelhas> In reply to @Elegantbeef "Can you do me": sure can doâ†µwill install it, one second
[04:52:37] <FromDiscord> <Elegantbeef> Oh actually the second image says "lock levels differ" so there is your issue
[04:53:19] <FromDiscord> <Elegantbeef> Nim has these pesky lock levels which lovingly try to prevent you from hurting yourself but tend to cause issues with procedures like this
[04:54:58] <FromDiscord> <Elegantbeef> For the first procedure do `Led(procedureName)` then it'll give you a proper error message \:D
[04:55:45] <FromDiscord> <Gustavo6046> Hmm
[04:55:54] <FromDiscord> <Gustavo6046> Nim doesn't seem to like the generic number arguments
[04:55:59] <FromDiscord> <Gustavo6046> at least not the way I was using them
[04:56:24] <FromDiscord> <Elegantbeef> When solving an expression it figures out the return value from the first parameter, so without an explict conversion to a type it cries typically
[04:56:31] <FromDiscord> <Elegantbeef> generic number arguments?
[04:56:36] <FromDiscord> <Gustavo6046> This is another file, ray_chunk, but it errors at line 95 with a somewhat cryptic "Object constructor needs object type". Isn't an instantiated generic object type an object type? Clearly there is something wrong but the error could be clearer
[04:56:36] <FromDiscord> <Gustavo6046> Hang on
[04:56:45] <FromDiscord> <Elegantbeef> ah you need to do `static uint`
[04:56:45] <FromDiscord> <Gustavo6046> Let me bin it
[04:56:56] <FromDiscord> <Gustavo6046> Oh
[04:56:59] <FromDiscord> <Gustavo6046> https://play.nim-lang.org/#ix=3wMI
[04:57:06] <FromDiscord> <Elegantbeef> `static T` is value known at compile time which means it can be used for generics and the like
[04:57:43] <FromDiscord> <Elegantbeef> So it can also be used as a generic parameter in procedures and the like to have different procedures generated at compile time
[04:57:56] <FromDiscord> <Gustavo6046> ah
[04:58:03] <FromDiscord> <Gustavo6046> I see!
[04:58:04] <FromDiscord> <Gustavo6046> well
[04:58:28] <FromDiscord> <Gustavo6046> now ray_def.nim (that previous paste with the raysvalues and such) errors at line 10 because of static uint, "ordinal type expected"
[04:58:37] <FromDiscord> <Gustavo6046> `position:   array[size, array[3,    float64]]`
[04:58:38] <FromDiscord> <Gustavo6046> at this part
[04:59:46] <FromDiscord> <Canelhas> In reply to @Elegantbeef "For the first procedure": like so? mind you that i declared Led as a type alias based on a sugared lambda, as i mentioned above https://media.discordapp.net/attachments/371759389889003532/879522838338498631/unknown.png
[05:00:06] <FromDiscord> <Elegantbeef> Yea
[05:00:29] <FromDiscord> <Gustavo6046> ohh
[05:00:46] <FromDiscord> <Elegantbeef> Also gustavo you cannot have default generic arguments
[05:00:47] <FromDiscord> <Termer> Hi, I've got a big of a dilemma with imports
[05:00:55] <FromDiscord> <Gustavo6046> oh okay
[05:01:10] <FromDiscord> <Termer> How would I go about importing something from a parent directory?
[05:01:20] <FromDiscord> <Elegantbeef> `../moduleName`
[05:01:34] <FromDiscord> <Termer> it doesn't seem to work right, but maybe I'm not doing it right
[05:02:05] <FromDiscord> <Termer> nope it's my issue
[05:02:07] <FromDiscord> <Elegantbeef> No canel the first branch
[05:02:28] <FromDiscord> <Termer> thanks for the help
[05:02:30] <FromDiscord> <Elegantbeef> you make the first branch the type you want so the remainder coalesce
[05:02:35] <FromDiscord> <Elegantbeef> No problem
[05:03:08] <FromDiscord> <Canelhas> In reply to @Elegantbeef "No canel the first": it indeed solves the problem, but what was the trickery here? that was a non-problematic branch wtf
[05:03:43] <FromDiscord> <Elegantbeef> The issue is that the case expression's return type is reasoned from the first branch, so it's a `lock: 0`, but when you get to the second branch it doesnt match
[05:04:14] <FromDiscord> <Elegantbeef> It doesnt know that the return type should be `Led` so it doesnt coalesce the case expression
[05:04:18] <FromDiscord> <Canelhas> i see, so i could solve the problem by reordering the branches? lets try
[05:04:32] <FromDiscord> <Elegantbeef> Well just do it properly by converting the first
[05:05:12] <FromDiscord> <Elegantbeef> Rearranging branches is just sketchy cause if you change a procedure you may change the procedures type(pragmas/locklevels are important)
[05:05:34] <FromDiscord> <âƒŸâƒŸ> "cannot open file winnim"
[05:05:35] <FromDiscord> <âƒŸâƒŸ> why
[05:05:42] <FromDiscord> <Elegantbeef> Converting to Led makes the case statement always evaluate to the proper file
[05:05:44] <FromDiscord> <âƒŸâƒŸ> and thats the whole error
[05:05:47] <FromDiscord> <Elegantbeef> Did you `nimble install winim`
[05:05:53] <FromDiscord> <âƒŸâƒŸ> yes
[05:05:59] <FromDiscord> <âƒŸâƒŸ> and it said successfully installed
[05:06:07] <FromDiscord> <Canelhas> In reply to @âƒŸâƒŸ "why": file permission?
[05:06:09] <FromDiscord> <Elegantbeef> Are you using nimble to build your project?
[05:06:26] <FromDiscord> <âƒŸâƒŸ> oh i just figured it out
[05:06:29] <FromDiscord> <âƒŸâƒŸ> try to spot it
[05:06:32] <FromDiscord> <âƒŸâƒŸ> re read the error
[05:06:39] <FromDiscord> <Elegantbeef> If you're using nimble to build your project and the package isnt a `requires` that's the issue
[05:06:49] <FromDiscord> <Canelhas> thats a double n
[05:06:59] <FromDiscord> <âƒŸâƒŸ> you got it
[05:08:13] <FromDiscord> <Canelhas> In reply to @Canelhas "i see, so i": it does "solve" the issue,â†µbut why so? is proc {.locks: 0 .} a subtype of proc {.locks: 1 .} ?â†µhow does pragmas work regarding the typesystem?
[05:08:26] <FromDiscord> <âƒŸâƒŸ> what is "T"
[05:08:30] <FromDiscord> <âƒŸâƒŸ> is this a built in nim thing
[05:08:31] <FromDiscord> <Elegantbeef> I dont quite know how lock levels work
[05:08:40] <FromDiscord> <Elegantbeef> No there is no T
[05:08:50] <FromDiscord> <Elegantbeef> IT's a general convention for generic parameters
[05:09:01] <FromDiscord> <âƒŸâƒŸ> its from winnim
[05:09:05] <FromDiscord> <âƒŸâƒŸ> T"hi"
[05:09:21] <FromDiscord> <Elegantbeef> then go to definition
[05:09:28] <FromDiscord> <âƒŸâƒŸ> dosent work :(
[05:09:56] <FromDiscord> <âƒŸâƒŸ> i cant go to defintion for anything in this library it seems
[05:10:13] <FromDiscord> <âƒŸâƒŸ> standard library works
[05:11:42] <FromDiscord> <âƒŸâƒŸ> ok now it started working??
[05:11:50] <FromDiscord> <Canelhas> In reply to @Canelhas "it does "solve" the": it actually just moves the error to compile timeâ†µIts not the first time i see this error , â†µhow to work around this? https://media.discordapp.net/attachments/371759389889003532/879525870719631370/unknown.png
[05:12:02] <FromDiscord> <âƒŸâƒŸ> grey text
[05:12:06] <FromDiscord> <âƒŸâƒŸ> on grey background
[05:12:21] <FromDiscord> <Elegantbeef> Dont capture a `var T`
[05:12:21] <FromDiscord> <impbox [ftsf]> copying and pasting text is nicer than screenshots
[05:12:33] <FromDiscord> <âƒŸâƒŸ> now once again its not working
[05:12:39] <FromDiscord> <âƒŸâƒŸ> also it takes extremely long when it does work
[05:12:49] <FromDiscord> <Canelhas> In reply to @impbox "copying and pasting text": you're absolutely rightâ†µhadn't thought about that
[05:13:09] <FromDiscord> <impbox [ftsf]> (or rather linking to the text)
[05:13:18] <FromDiscord> <impbox [ftsf]> (edit) "text)" => "text, if it's long)"
[05:13:33] <FromDiscord> <Elegantbeef> `var T` is mutable reference, as such capturing it is very dangerous since it could be a stack object, so you could easily outlive the stack and have a dangling pointer
[05:13:50] <FromDiscord> <Elegantbeef> If you know it's safe to capture you can use `var.addr`
[05:14:12] <FromDiscord> <impbox [ftsf]> wouldn't you need var.unsafeAddr?
[05:14:16] <FromDiscord> <impbox [ftsf]> _forgets_
[05:14:20] <FromDiscord> <Elegantbeef> nah it's a `var T`
[05:14:28] <FromDiscord> <Elegantbeef> mutables dont require `unsafe`
[05:14:33] <FromDiscord> <impbox [ftsf]> ok
[05:14:49] <FromDiscord> <Gustavo6046> Internal error?...
[05:14:49] <FromDiscord> <Elegantbeef> Though there is an RFC to remove the difference
[05:14:55] <FromDiscord> <Elegantbeef> Since it's generally just a pain
[05:15:13] <FromDiscord> <Elegantbeef> Internal error means you did something that made the compiler not happy
[05:15:20] <FromDiscord> <Gustavo6046> yeah
[05:15:38] <FromDiscord> <Gustavo6046> sent a code paste, see https://play.nim-lang.org/#ix=3wML
[05:15:38] <FromDiscord> <Gustavo6046> err oops
[05:15:39] <FromDiscord> <Gustavo6046> my bad
[05:15:39] <FromDiscord> <Gustavo6046> sent a code paste, see https://paste.rs/HNk
[05:15:59] <FromDiscord> <Gustavo6046> I should use the bin instead
[05:16:14] <FromDiscord> <Gustavo6046> I hope that didn't flood IRC, I was gonna highlight ignore the bot but I only now realized I just outright ignored it lol
[05:16:19] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:a4b1:e74b:d226:1434) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[05:16:25] <FromDiscord> <Gustavo6046> I did use triple backticks
[05:16:59] <FromDiscord> <Elegantbeef> IRC gets links for code blocks
[05:17:56] <FromDiscord> <Gustavo6046> Ah, phew
[05:18:19] <FromDiscord> <âƒŸâƒŸ> so
[05:18:20] <FromDiscord> <âƒŸâƒŸ> using winnim
[05:18:32] <FromDiscord> <âƒŸâƒŸ> LoadCursor(nil, 32512)
[05:18:33] <FromDiscord> <Gustavo6046> I commented out the ray_chunk and ray_def imports for the sake of runnability
[05:18:34] <FromDiscord> <Gustavo6046> https://play.nim-lang.org/#ix=3wMN
[05:18:36] <FromDiscord> <âƒŸâƒŸ> why is this a type error
[05:18:41] <FromDiscord> <âƒŸâƒŸ> nil is type error it says
[05:19:17] <FromDiscord> <Gustavo6046> Oops
[05:19:21] <FromDiscord> <Gustavo6046> not runnable yet
[05:19:29] <FromDiscord> <Elegantbeef> Well the error message is more useful than saying nil is wrong ðŸ˜€
[05:19:31] <FromDiscord> <Gustavo6046> Here! There is the internal error again
[05:19:37] <FromDiscord> <Gustavo6046> hang on
[05:19:42] <FromDiscord> <âƒŸâƒŸ> it wants a HINSTANCE
[05:19:44] <FromDiscord> <Gustavo6046> 502: bad gateway?
[05:19:52] <FromDiscord> <Elegantbeef> ix.iiio is fun ðŸ˜€
[05:20:08] <FromDiscord> <Canelhas> sent a long message, see http://ix.io/3wMP
[05:20:21] <FromDiscord> <Elegantbeef> The playground uses ix.io and i think it often crashes
[05:20:27] <FromDiscord> <Gustavo6046> ah
[05:20:45] <FromDiscord> <Gustavo6046> it seems back
[05:20:52] <FromDiscord> <Gustavo6046> phew!
[05:20:54] <FromDiscord> <Elegantbeef> Uncertain the design canel so cannot say for certain the best way
[05:22:41] <FromDiscord> <Elegantbeef> Yea scrolling up canel it's clearly better not to use map imo
[05:22:57] <FromDiscord> <Elegantbeef> Though i dont like lambdas so i'm biased
[05:25:12] <FromDiscord> <Canelhas> i love lambdas hahahah
[05:25:16] <FromDiscord> <âƒŸâƒŸ> this library is so....
[05:25:24] <FromDiscord> <âƒŸâƒŸ> half the time im using `0` to indicate null
[05:25:33] <FromDiscord> <âƒŸâƒŸ> other time im using `nil` (and then i cant use 0)
[05:28:09] <FromDiscord> <Gustavo6046> this internal error is weird
[05:28:10] <NimEventer> New thread by AIR: Dialog-Based Win GUI, see https://forum.nim-lang.org/t/8358
[05:28:14] <FromDiscord> <Gustavo6046> I'll take a deeper look at it later
[05:29:09] <FromDiscord> <Elegantbeef> If you cannot minify it can take a look at it if you get a reproducible  file
[05:30:24] *** Joins: rockcavera (~rc@192.12.112.204)
[05:30:24] *** Quits: rockcavera (~rc@192.12.112.204) (Changing host)
[05:30:24] *** Joins: rockcavera (~rc@user/rockcavera)
[05:56:15] *** Quits: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca) (Ping timeout: 250 seconds)
[06:49:59] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:06:26] <FromDiscord> <Termer> How can someone go about setting compiler arguments for nimble binary packages
[07:06:34] <FromDiscord> <Termer> I need my program built with -d:ssl
[07:06:44] <FromDiscord> <Termer> but I can't find any way to tell nimble to do that
[07:06:48] <FromDiscord> <impbox [ftsf]> config.nims
[07:07:40] <FromDiscord> <impbox [ftsf]> or `binname.nim.cfg`
[07:08:08] <FromDiscord> <Termer> what do I need to do with that file
[07:08:22] <FromDiscord> <impbox [ftsf]> or `binname.nims`
[07:09:03] <FromDiscord> <impbox [ftsf]> in `binname.nim.cfg` add `--define:ssl`
[07:09:15] <FromDiscord> <impbox [ftsf]> (edit) "`--define:ssl`" => "`--define:"ssl"`"
[07:10:52] <FromDiscord> <Termer> I put `--define:"ssl"` in my tm_cli.nim.cfg file and it doesn't seem to do the trick
[07:12:31] <FromDiscord> <Termer> Putting `switch("define", "ssl")` in config.nims did it though, thanks
[07:13:28] <FromDiscord> <impbox [ftsf]> rad, sorry, this stuff is confusing and hard to find good docs on
[07:14:03] <FromDiscord> <Termer> yeah, I found that snippet by googling `"config.nims" "d:ssl"`
[07:16:19] <FromDiscord> <impbox [ftsf]> using `test.nim.cfg` with `--define:"ssl"` worked for me when building `nim c -r test.nim`
[07:16:49] <FromDiscord> <impbox [ftsf]> but i think nims is the preferred system
[07:18:10] <FromDiscord> <impbox [ftsf]> and now it's not working... so i'm unsure =p
[07:18:33] <FromDiscord> <impbox [ftsf]> it says it's using the config file
[07:20:02] <FromDiscord> <impbox [ftsf]> seems after changing it i needed to clear the nimcache
[07:20:24] <FromDiscord> <impbox [ftsf]> mysterious!
[07:24:20] <FromDiscord> <impbox [ftsf]> sent a code paste, see https://play.nim-lang.org/#ix=3wN5
[07:27:09] <FromDiscord> <impbox [ftsf]> I guess it's a dither pattern
[07:42:24] <FromDiscord> <Elegantbeef> Interesting problem
[07:42:39] <FromDiscord> <impbox [ftsf]> aye
[07:42:44] <FromDiscord> <impbox [ftsf]> seems like it should be trivial...
[07:45:55] <FromDiscord> <Elegantbeef> Well some of the pattern is easy to get but odds and anything larger than 4 is hard ðŸ˜€
[07:46:18] <FromDiscord> <impbox [ftsf]> hmm I guess any power of 2 number of bits
[07:46:51] <FromDiscord> <impbox [ftsf]> I figure it needs  to be a recursive type thing
[07:50:41] <FromDiscord> <Elegantbeef> So the left nibble is always the right nibble of the last one
[07:52:45] <FromDiscord> <Elegantbeef> Well i have a method of doing it now
[07:52:47] <FromDiscord> <impbox [ftsf]> the next step always includes all the bits of the previous step, just need to figure out which bit to set next
[07:53:06] <FromDiscord> <impbox [ftsf]> i guess you could calculate the distance between all other set bits and find the furthest distance
[07:53:09] <FromDiscord> <Elegantbeef> Will encode my logic into code
[07:53:21] <FromDiscord> <Elegantbeef> Well that was my first idea but it failed
[07:53:32] <FromDiscord> <Elegantbeef> cause your 3 isnt proper
[07:53:49] <FromDiscord> <Elegantbeef> your 3 should be `00100101` to have the most distributed value
[07:54:05] <FromDiscord> <impbox [ftsf]> but you can only add one bit on each step, can't change any existing set bits
[07:54:24] <FromDiscord> <impbox [ftsf]> oh right, i see
[07:54:36] <FromDiscord> <impbox [ftsf]> wait no i don't
[07:58:27] <FromDiscord> <Elegantbeef> The gap size is smaller with the pattern i provided, but it doesnt abide by your rules
[07:59:20] <FromDiscord> <Elegantbeef> it has 2 `00` and 1 `0` whereas yours has 1`000` and 2 `00`
[07:59:32] <FromDiscord> <Elegantbeef> 2 `0`\
[08:06:21] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[08:21:58] <FromDiscord> <impbox [ftsf]> I got a solution, but it's horrible ^_^
[08:25:45] <FromDiscord> <impbox [ftsf]> https://play.nim-lang.org/#ix=3wNk eww
[08:27:14] <FromDiscord> <impbox [ftsf]> also I think the output pattern could be nicer `1111111_1_1_1_1_ ` would be better as `111_1_1_111_1_1_ `
[08:32:37] <FromDiscord> <JSONBash> anything 'wrong' with using god ol' Makefiles?
[08:32:46] <FromDiscord> <impbox [ftsf]> nope
[08:33:03] <FromDiscord> <JSONBash> rad
[08:33:12] <FromDiscord> <Elegantbeef> Well depends who you ask ðŸ˜›
[08:33:18] <FromDiscord> <impbox [ftsf]> as long as you know all your users have make available
[08:33:37] <FromDiscord> <impbox [ftsf]> until very recently I used Makefiles for my nim projects
[08:33:40] <FromDiscord> <Elegantbeef> I know status uses them instead of any alternatives
[08:33:48] *** Quits: Mister_Magister (~Mister_Ma@user/mister-magister/x-2636733) (Quit: bye)
[08:33:52] <FromDiscord> <JSONBash> all my users are me currently
[08:33:56] <FromDiscord> <impbox [ftsf]> I've been trying to use nimble more, but run into a lot of stuff that would be easier with a makefile
[08:33:59] <FromDiscord> <JSONBash> https://tenor.com/view/spider-man-we-one-gif-18212100
[08:34:17] <FromDiscord> <impbox [ftsf]> yeah, it's fine for personal use, but if you're making nim libraries then probably not
[08:34:37] *** Joins: Mister_Magister (~Mister_Ma@user/mister-magister/x-2636733)
[08:34:40] <FromDiscord> <JSONBash> is there a getting started for the alternative?
[08:34:51] <FromDiscord> <impbox [ftsf]> if someone does `nimble install somelib` it shouldn't require them to have make installed
[08:35:11] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[08:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:10] <FromDiscord> <JSONBash> 100% agree with you on that
[08:36:25] *** Joins: xet7 (~xet7@user/xet7)
[08:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:36:44] <FromDiscord> <JSONBash> would the alternative be config.nims?
[08:37:18] <FromDiscord> <impbox [ftsf]> i guess it depends what you're trying to do with it
[08:37:47] <FromDiscord> <impbox [ftsf]> if it's just a command to build a binary, then probably just a .nimble file
[08:38:22] <FromDiscord> <impbox [ftsf]> https://github.com/nim-lang/nimble#creating-packages
[08:38:24] <nrds> <12R2D299> 4GitHub: 7"Package manager for the Nim programming language."
[08:39:02] <FromDiscord> <Elegantbeef> Imp i'm still trying to reason a cleaner solution, though it's complicated
[08:39:56] <FromDiscord> <JSONBash> anything like Makefile? just simple cmd line commands
[08:40:03] <FromDiscord> <impbox [ftsf]> @ElegantBeef it's not actually important if you have better stuff to do =p just thought it was an interesting problem
[08:40:13] <FromDiscord> <Elegantbeef> nimble can be used like make
[08:40:23] <FromDiscord> <Elegantbeef> you can also use `nake`
[08:53:02] <FromDiscord> <RattleyCooper> If I compile nim from source on my raspberry pi can I just copy the directory I compiled with for my other raspberry pis?
[08:53:27] <FromDiscord> <RattleyCooper> Or do I have to redo it on each one?
[08:55:21] <FromDiscord> <Elegantbeef> Hey i got the byte version done imp in 13 loc ðŸ˜€
[08:55:38] <FromDiscord> <Elegantbeef> My masta piece https://play.nim-lang.org/#ix=3wNs
[08:56:07] <FromDiscord> <impbox [ftsf]> nice
[09:02:24] <FromDiscord> <Elegantbeef> Fails with 32bit sofar so i guess it's a flop ðŸ˜€
[09:06:32] <FromDiscord> <Elegantbeef> Ah nvm i forgot that sizeof was in bytes
[09:06:42] <FromDiscord> <Elegantbeef> Works fine https://play.nim-lang.org/#ix=3wNv
[09:07:44] <FromDiscord> <Elegantbeef> \Or not since `spaceBits(64)` is not full
[09:16:31] <NimEventer> New thread by Kalbhairab: Tutorial to clone c++ library, see https://forum.nim-lang.org/t/8359
[09:51:18] <FromDiscord> <JSONBash> can anyone point me in the direction of examples using nimcrypto to hash passwords?
[10:01:21] *** Joins: max22- (~maxime@2a01cb08833598004887c4809fe95f79.ipv6.abo.wanadoo.fr)
[10:07:00] <FromDiscord> <impbox [ftsf]> https://github.com/cheatfate/nimcrypto the example on the readme?
[10:07:02] <nrds> <12R2D299> 4GitHub: 7"Nim cryptographic library"
[10:07:06] <FromDiscord> <impbox [ftsf]> though you'd want to add some salt
[10:11:11] <FromDiscord> <JSONBash> I thought nimcrypto has scrypt and pbkdf2 for password
[10:11:35] <FromDiscord> <JSONBash> either way I am looking for an example of using pbkdf2 to hash a passwrod
[10:11:58] <FromDiscord> <JSONBash> and can't find any, althoguh I am making progress so I will probably get it
[10:13:44] <FromDiscord> <impbox [ftsf]> it appears to have pbkdf2
[10:13:49] <FromDiscord> <impbox [ftsf]> https://github.com/cheatfate/nimcrypto/blob/master/nimcrypto/pbkdf2.nim
[10:18:46] <FromDiscord> <JSONBash> yeah but I coulsn't find any example uses, I think I got it thoguh thank you!
[10:19:01] <FromDiscord> <impbox [ftsf]> yep, fair, it seems not well documented
[10:20:14] <FromDiscord> <JSONBash> I went into the nimbus-eth client so I hope they are doing it right ðŸ˜›
[10:35:20] <FromDiscord> <Rika> If they arenâ€™t then I would be extremely concerned
[11:07:30] *** Quits: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113) (Quit: ZNC - http://znc.in)
[11:09:37] *** Joins: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113)
[11:09:48] *** Joins: PMunch (~PMunch@vpn.dualog.com)
[11:37:44] *** Quits: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113) (Quit: ZNC - http://znc.in)
[11:41:33] *** Joins: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113)
[11:52:24] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:a4b1:e74b:d226:1434)
[11:58:18] <arkanoid> Do you know where I can find an easy to understand recursive descent parser written in nim?
[12:23:45] <FromDiscord> <treeform> The sql parser in Nim std lib
[12:23:53] <FromDiscord> <treeform> JSON parser in std lib
[12:24:04] <FromDiscord> <treeform> JSON parser in jsony
[12:31:58] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:a4b1:e74b:d226:1434) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[12:46:35] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:a4b1:e74b:d226:1434)
[12:47:32] <madprops> is there a shortcut for ..  line.split(" ").filterIt(it != "")  ?
[12:51:44] <FromDiscord> <Elegantbeef> If you dont need it to be a collection you could use the `splitWhitespace` iterator
[12:52:29] <FromDiscord> <Elegantbeef> `for word in line.splitWhitespace()` for instance
[12:53:04] <FromDiscord> <impbox [ftsf]> or use a regex split
[12:54:56] <FromDiscord> <retkid> how do i want to compile nim for FFI
[12:55:06] <FromDiscord> <retkid> i've been bashin my head against a compiler wall
[12:55:27] <FromDiscord> <retkid> would do it but no
[12:55:28] <FromDiscord> <retkid> sent a code paste, see https://play.nim-lang.org/#ix=3wO9
[12:56:07] <FromDiscord> <retkid> sent a code paste, see https://play.nim-lang.org/#ix=
[12:56:47] <FromDiscord> <impbox [ftsf]> aww no pie D:
[12:57:03] <FromDiscord> <impbox [ftsf]> that'll make it sad for sure
[12:57:19] <FromDiscord> <retkid> Its very hungry but no pie today
[12:57:55] <FromDiscord> <impbox [ftsf]> for FFI? what does that mean?
[12:58:35] <FromDiscord> <retkid> Foreign function interface
[12:58:42] <FromDiscord> <enthus1ast> do you want to build your application as a shared library ?
[12:58:48] <FromDiscord> <retkid> probably
[12:59:04] <FromDiscord> <enthus1ast> then you need to build it with "--app\:lib"
[12:59:07] <FromDiscord> <Elegantbeef> no pie makes the instruction pointer not be absolute, no clue any side effects there
[12:59:30] <FromDiscord> <enthus1ast> for loading it as eg shellcode?
[12:59:59] <FromDiscord> <retkid> app:lib gives me unknown error and at this point i have no clue if its my fault or something else
[12:59:59] <FromDiscord> <impbox [ftsf]> sure FFI means foreign function interface, but what do you mean by compile nim for FFI?
[13:00:08] <FromDiscord> <retkid> i get so little to no feedback
[13:00:13] <FromDiscord> <retkid> (edit) 04removed "to no"
[13:00:20] <FromDiscord> <retkid> and the code isn't helpful either
[13:00:34] <FromDiscord> <impbox [ftsf]> https://livebook.manning.com/book/nim-in-action/chapter-8/12 referring to this?
[13:01:12] <FromDiscord> <retkid> generally that idea
[13:01:20] <FromDiscord> <impbox [ftsf]> you want to call your nim code from a non-nim executable?
[13:01:24] <FromDiscord> <retkid> yes
[13:01:37] <FromDiscord> <impbox [ftsf]> ok, yeah you want to make a shared (or static?) library then
[13:01:55] <FromDiscord> <impbox [ftsf]> and link it either statically or dynamically to your other app
[13:02:13] <FromDiscord> <Recruit_main707> what are you doing  exactly?
[13:02:38] <FromDiscord> <Elegantbeef> \slightly related and worth noting you should probably use `--gc:arc` or `--gc:orc`
[13:02:46] <FromDiscord> <impbox [ftsf]> yep
[13:02:53] <FromDiscord> <retkid> ooo what that do
[13:03:10] <FromDiscord> <Recruit_main707> its a more ffi firendly memory management strategy
[13:03:12] <FromDiscord> <Elegantbeef> Uses a memory management system which doesnt require to be initialized
[13:03:32] <FromDiscord> <retkid> that might help
[13:03:49] <FromDiscord> <retkid> im literally trying to just get a return "Hello, World"
[13:03:53] <FromDiscord> <retkid> right now tho
[13:04:20] <FromDiscord> <impbox [ftsf]> it'll help with that string =)
[13:04:32] <FromDiscord> <retkid> sent a code paste, see https://play.nim-lang.org/#ix=3wOb
[13:04:40] <FromDiscord> <retkid> (edit) "https://play.nim-lang.org/#ix=3wOc" => "https://play.nim-lang.org/#ix=3wOb"
[13:04:43] <FromDiscord> <retkid> does that tell you anything
[13:04:46] <FromDiscord> <retkid> because it doesn't tell me
[13:05:13] <FromDiscord> <impbox [ftsf]> oh you're trying to interface with javas
[13:05:20] <FromDiscord> <enthus1ast> it tells us you use java
[13:05:31] <FromDiscord> <retkid> Oop sorry forgot to mention
[13:05:38] <FromDiscord> <retkid> yea using a java library
[13:05:47] <FromDiscord> <retkid> which, has pretty ok documentation
[13:05:52] <FromDiscord> <retkid> im the weak link here
[13:06:00] <FromDiscord> <retkid> (edit) "here" => "here, they don't think to cover this"
[13:06:01] <FromDiscord> <Elegantbeef> Anyway is it compiling now?
[13:06:10] <FromDiscord> <retkid> its compiles fine
[13:06:11] <FromDiscord> <enthus1ast> i guess you should propably return c types then
[13:06:11] <FromDiscord> <Elegantbeef> What is the nim code percisely?
[13:06:16] <FromDiscord> <enthus1ast> like cint and cstring etc
[13:06:44] <FromDiscord> <Elegantbeef> Yes you should return a Cstring since you cannot easily/safely map the Nim string to a java string
[13:06:56] <FromDiscord> <impbox [ftsf]> i've done some nim<->java (android) before
[13:07:00] <FromDiscord> <impbox [ftsf]> it was a pain
[13:07:04] <FromDiscord> <retkid> sent a code paste, see https://play.nim-lang.org/#ix=3wOd
[13:07:12] <FromDiscord> <Elegantbeef> ok so that'll not be accessible
[13:07:15] <FromDiscord> <retkid> so you mean kotlin
[13:07:24] <FromDiscord> <Elegantbeef> You need to do `{.exportC.}` and make it a `cstring`
[13:07:47] <FromDiscord> <Elegantbeef> so `proc helloWorld: cstring {.exportC.} = "helloworld"`
[13:08:03] <FromDiscord> <Recruit_main707> you have to make it public too (add an  between the end of the function name and the brackets)
[13:08:08] <FromDiscord> <impbox [ftsf]> https://nim-lang.org/docs/nimc.html#crossminuscompilation-for-android
[13:08:09] <FromDiscord> <retkid> sent a code paste, see https://play.nim-lang.org/#ix=3wOe
[13:08:13] <FromDiscord> <Elegantbeef> Actually is it `dynLib`?
[13:08:21] <FromDiscord> <Recruit_main707> its both afaik
[13:08:25] <FromDiscord> <retkid> not currently, if i have it on a dynlib it just errors
[13:08:31] <FromDiscord> <Recruit_main707> forgot about that one
[13:08:38] <FromDiscord> <enthus1ast> sent a code paste, see https://play.nim-lang.org/#ix=3wOf
[13:08:51] <FromDiscord> <Recruit_main707> yeah this is the correct version ^
[13:09:04] <FromDiscord> <retkid> alright lets see here
[13:09:09] <FromDiscord> <Elegantbeef> I've never used Nim for a shared library so i'll trust you guys \:D
[13:09:28] <FromDiscord> <enthus1ast> sent a code paste, see https://play.nim-lang.org/#ix=3wOh
[13:09:36] <FromDiscord> <enthus1ast> sent a code paste, see https://play.nim-lang.org/#ix=3wOi
[13:09:36] <FromDiscord> <Elegantbeef> Manual agrees though ðŸ˜›
[13:09:41] <FromDiscord> <retkid> and it echos
[13:09:41] <FromDiscord> <impbox [ftsf]> sent a code paste, see https://play.nim-lang.org/#ix=3wOj
[13:09:52] <FromDiscord> <retkid> well don e\
[13:09:53] <FromDiscord> <retkid> (edit) "don e\" => "done"
[13:10:06] <FromDiscord> <impbox [ftsf]> \o/
[13:10:28] <PMunch> More people loading Nim from another program?
[13:10:29] <FromDiscord> <Elegantbeef> NimMain is only needed if you use main body evaluation right?
[13:10:32] <FromDiscord> <retkid> so, what does .cdecl, exportc, and dynlib. mean
[13:10:50] <FromDiscord> <impbox [ftsf]> or GC I guess
[13:10:57] <FromDiscord> <retkid> In reply to @PMunch "More people loading Nim": well exportc i know
[13:11:02] <FromDiscord> <retkid> oop wrong ping
[13:11:08] <FromDiscord> <Elegantbeef> exportC says "dont mangle" dynlib means "extern" and cdecl uses the C calling convention
[13:11:09] <FromDiscord> <retkid> exportc just changes the type to be c-compatible
[13:11:29] <FromDiscord> <Elegantbeef> Without `exportC` the compiler will mangle the name
[13:11:39] <PMunch> cdecl -> Declare it the same way C functions are declared. exportc -> Make the name the same in the C code as the Nim code so it can be used by C. dynlib -> some dynamic library stuff, not actually sure
[13:12:32] <PMunch> The manual doesn't really have a lot of info on it
[13:12:47] <FromDiscord> <Elegantbeef> Indeed, nor is there much instruction
[13:12:54] <FromDiscord> <Elegantbeef> So maybe a day project for me tomorrow ðŸ˜€
[13:13:25] <PMunch> Ah, I think it might be a Windows thing.
[13:13:42] <PMunch> dynlib probably sets __declspec(dllexport)
[13:13:52] <FromDiscord> <enthus1ast> yeah could be
[13:14:28] <PMunch> Which shouldn't be needed on Linux
[13:15:05] <FromDiscord> <retkid> the .cdecl is not needed as the lib is designed to not work only with C so thats fijne
[13:15:08] <FromDiscord> <retkid> (edit) "fijne" => "fine"
[13:15:35] <FromDiscord> <enthus1ast> if thats missing the default os calling convention is used (afaik)
[13:15:58] <FromDiscord> <retkid> probably fine for linux, i'll keep it in encase i copy pasta this function and build on it
[13:16:05] <FromDiscord> <enthus1ast> which might be c call or fastcall etc
[13:16:14] <FromDiscord> <retkid> if this stuff ever sees the light of day
[13:16:16] <FromDiscord> <retkid> (edit) "if this stuff ever sees the light of day ... " 03added "haha"
[13:16:28] <FromDiscord> <retkid> (edit) "if this stuff ever sees the light of day haha ... " 03added "might keep it in encase windows benefits"
[13:16:58] <FromDiscord> <retkid> is there anyway i can take this and apply this to the entire file?
[13:17:14] <FromDiscord> <impbox [ftsf]> {.push ... .}
[13:17:25] <PMunch> Okay, dynlib with exportc seems to set N_LIB_EXPORT, which expands to NIM_EXTERNC __declspec(dllexport) on Windows and __attribute__((visibility("default"))) on Linux
[13:17:27] <FromDiscord> <enthus1ast> does this work?â†µ(@impbox [ftsf])
[13:17:46] <FromDiscord> <impbox [ftsf]> https://nim-lang.org/docs/manual.html#pragmas-push-and-pop-pragmas
[13:18:03] <FromDiscord> <Recruit_main707> it sometimes works and sometimes doesnt for me, idk why
[13:18:08] <FromDiscord> <impbox [ftsf]> if it doesn't work it'd be a bug i guess
[13:18:42] <FromDiscord> <retkid> alright, now to see if i can get java to self reference itself using jnim
[13:18:49] <FromDiscord> <retkid> (edit) 04removed "itself"
[13:18:50] <FromDiscord> <Recruit_main707> if you are only exporting functions it will probably work
[13:19:03] <FromDiscord> <retkid> actually im very sleepy and jnim will be for tomorro
[13:19:04] <FromDiscord> <retkid> (edit) "tomorro" => "tomorrow"
[13:19:17] <FromDiscord> <retkid> guys i've never been more thankful for a community that cares for a language
[13:19:25] <FromDiscord> <retkid> not only because you're super helpful
[13:19:50] <FromDiscord> <retkid> but also because java has no package manager and its depressing how little orical and sun systems cares
[13:19:54] <arkanoid> treeform thanks!
[13:20:04] <FromDiscord> <retkid> goodnight guys
[13:20:10] <FromDiscord> <Recruit_main707> bye
[13:29:58] <FromDiscord> <MrOkram> Hi, i'm trying to cross compile Nim to ARM CPU, i've got toolchain all setup and ready but when i try to compile i get the following error:â†µ"fatal error: dlfcn.h: No such file or directory", host os is Ubuntu 18.04. Sorry if i'm posting this in a wrong channel.â†µEven simple helloWorld example won't cross compile.
[13:30:07] <arkanoid> just out of curiosity, which kind of parsing family is Nim language in? I mean LL(1), LL(K), LR(K), ....
[13:31:23] *** Joins: Vladar (~Vladar@46.162.2.53)
[13:32:14] <PMunch> Hmm, is there a way to asynchronously receive from a channel?
[13:33:30] <PMunch> @MrOkram, what OS are you targeting? And how have you set up your toolchain? I think dlfcn is a Windows thing..
[13:38:34] <FromDiscord> <MrOkram> In reply to @PMunch "<@248184418752004097>, what OS are": Embedded router linux, kernel is 3.4 on it i think, toolchain was build using buildroot for ARMv7 architecture.
[13:39:28] <PMunch> Seems like you've somehow confused Nim. What are the options you're building with (nim.cfg, any flags passed to the compiler)
[13:40:39] <FromDiscord> <enthus1ast> You could poll the channel in an async proc, with tryRecvâ†µ(<@709044657232936960_=50=4dunch=5b=49=52=43=5d>)
[13:42:01] <FromDiscord> <MrOkram> sent a code paste, see https://play.nim-lang.org/#ix=3wOp
[13:42:58] <FromDiscord> <MrOkram> Toolchain was compile with "static" only option, aka, it'll  compile everything into static lib as to be portable (Has to work on multiple routers with the same arch)
[13:44:01] <FromDiscord> <enthus1ast> @MrOkram\: then maybe even consider musl
[13:46:09] <FromDiscord> <MrOkram> In reply to @enthus1ast "<@248184418752004097>\: then maybe even": I'll look it up, thanks !
[13:47:29] <FromDiscord> <MrOkram> Also, here's the whole error log: https://pastebin.com/4WYwTtxP
[13:48:35] <FromDiscord> <enthus1ast> do you have this "dlfcn.h" header on your system?
[13:48:48] <FromDiscord> <enthus1ast> and is it on the compilers search path?
[13:54:44] <FromDiscord> <MrOkram> In reply to @enthus1ast "do you have this": Hmm, i should have it, tho maybe the toolchain i built doesn't, i'll try to recompile it and report back
[14:31:10] <NimEventer> New thread by Rforcen: Distrying seq[ptr T] field, see https://forum.nim-lang.org/t/8360
[14:38:51] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 250 seconds)
[14:39:42] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[14:40:23] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:a4b1:e74b:d226:1434) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[14:59:06] <FromDiscord> <MrOkram> Recompiled the toolchain with musl and some other tweaks, now it works
[14:59:31] <FromDiscord> <Recruit_main707> nice
[15:04:59] <FromDiscord> <dom96> In reply to @PMunch "Hmm, is there a": you'd have to poll it, yglukhov's threadpools library might be a better choice, it supports async
[15:06:43] <PMunch> Hmm
[15:07:11] <PMunch> I have it set to polling now, but I'd want to save the CPU a bit
[15:08:31] <PMunch> Problem is that I have a Cache data structure with a table, a doubly linked list, and some other stuff. This has to be updated periodically, but the main access point of this DLL is through a function that is only called when I have a request. I want to update the cache even when I don't have requests so I have the cache spun up as a separate thread
[15:09:59] <PMunch> This thread does two things, listens to Cache requests over a channel, and performs periodic updates of the cache. The updates are async as they use a REST API, and currently I have a `while true: tryRecv; sleepAsync(1)` loop for the receiver
[15:10:48] <PMunch> I guess with ARC/ORC I might not need the channel stuff, but I'm still not entirely sure what guarantees and such that it features and this has to be totally stable
[15:12:03] <PMunch> @MrOkram, any other flags you pass the compiler?
[15:14:21] <FromDiscord> <dom96> what kind of data are you sending?
[15:14:39] <FromDiscord> <dom96> if it can be serialised and that doesn't add a lot of overhead you can just send over a socket
[15:16:31] <PMunch> The data I'm sending is a 361-byte array
[15:16:58] <FromDiscord> <dom96> you can just send it as bytes
[15:17:04] <PMunch> Sure
[15:17:22] <PMunch> Hmm, I feel like sockets would create a bit of overhead though
[15:17:33] <PMunch> But I don't really have any numbers for that :P
[15:17:36] <FromDiscord> <dom96> definitely less than polling ðŸ™‚
[15:17:48] <FromDiscord> <dom96> depends on your use case though
[15:18:01] <FromDiscord> <dom96> you can do some micro benchmarks if performance is super important
[15:18:31] <PMunch> Yeah.. The small overhead of the polling isn't a dealbreaker, I'm mostly just doing this to see if I can make it better
[15:22:37] <FromDiscord> <dom96> hmm, tbh channels copy things (except for ARC/ORC I guess) so I'm beginning to get curious what the performance difference is
[15:23:31] <FromDiscord> <dom96> I suppose copying data from user-space to kernel-space would be the big bottleneck for sockets
[15:23:48] <FromDiscord> <MrOkram> In reply to @PMunch "<@248184418752004097>, any other flags": Nope, same setup as before, just a recompiled toolchain
[15:28:08] <PMunch> @dom96, this is also a DNS server that handles a lot of requests, so the problem is that sockets might be a bit starved..
[15:28:57] <PMunch> @MrOkram, same as before?
[15:29:29] <FromDiscord> <dom96> In reply to @PMunch "<@132595483838251008>, this is also": again that depends on how many channels/sockets you need, really how fast the number grows ðŸ™‚
[15:29:59] <FromDiscord> <dom96> but then I also wonder what this DNS server needs to communicate between threads for
[15:30:07] <FromDiscord> <Yardanico> In reply to @MrOkram "Nope, same setup as": do you have development tools + headers installed on your own host os?
[15:32:26] <FromDiscord> <MrOkram> Don't think you saw the message i posted above, but i solved the "dlfcn.h" by recompiling the buildroot toolchain with musl and some other tweaks (toolchain wise)
[15:32:34] <FromDiscord> <Yardanico> oh okay
[15:35:06] <PMunch> @dom96, it's part of a bigger system. We attach encrypted data with EDNS to the DNS queries and then decrypt and log that information on the other end. The reason it needs to communicate between threads is because it needs to grab the keys to decrypt the data from a web-server, and the keys have to be refreshed even when no queries are being made
[15:35:24] <PMunch> @MrOkram, aaah. So what's the issue now?
[15:37:53] <FromDiscord> <MrOkram> In reply to @PMunch "<@248184418752004097>, aaah. So what's": Well, newHttpClient is somehow undeclared: "Error: undeclared identifier: 'newHttpClient'", i'm following this example https://nim-lang.org/docs/httpclient.html (1st one under "Retrieving a website")
[15:38:26] <FromDiscord> <Yardanico> did you forget to import maybe?
[15:38:38] <FromDiscord> <Yardanico> `import httpclient`
[15:39:27] <FromDiscord> <MrOkram> In reply to @Yardanico "did you forget to": Nope, it's being imported
[15:39:33] <FromDiscord> <Yardanico> weird, can you show more code?
[15:39:46] <PMunch> That sounds really weird indeed
[15:40:06] <FromDiscord> <Yardanico> wait, let me guess
[15:40:07] <FromDiscord> <MrOkram> sent a code paste, see https://play.nim-lang.org/#ix=3wOW
[15:40:10] <FromDiscord> <Yardanico> you named your file httpclient.nim ?
[15:40:13] <FromDiscord> <MrOkram> Nope
[15:40:17] <FromDiscord> <Yardanico> huh
[15:40:26] <FromDiscord> <MrOkram> File is named networkTest.nim
[15:40:31] <FromDiscord> <Yardanico> do you maybe have other files named httpclient.nim in the same folder as this one?
[15:40:40] <FromDiscord> <Yardanico> try doing import std/httpclient
[15:40:49] <FromDiscord> <MrOkram>  https://media.discordapp.net/attachments/371759389889003532/879684160757833758/unknown.png
[15:41:55] <FromDiscord> <MrOkram> In reply to @Yardanico "try doing import std/httpclient": "Can't open std/httpclient"
[15:42:05] <FromDiscord> <Yardanico> that's really really weird
[15:42:05] <FromDiscord> <Rika> nim version
[15:42:10] <FromDiscord> <Yardanico> yeah, what's your nim version
[15:42:30] <FromDiscord> <Rika> lol
[15:42:31] <FromDiscord> <MrOkram> sent a code paste, see https://play.nim-lang.org/#ix=3wOX
[15:42:34] <FromDiscord> <Yardanico> oof
[15:42:34] <FromDiscord> <MrOkram> Welp, that explains it
[15:42:38] <FromDiscord> <Yardanico> it's ancient :P
[15:42:45] <FromDiscord> <MrOkram> I used apt to install it
[15:42:54] <FromDiscord> <Yardanico> yeah, some distros have really old versions
[15:43:00] <FromDiscord> <MrOkram> Guess that wasn't update in ages
[15:43:01] <FromDiscord> <Yardanico> use choosenim to install latest nim (1.4.8 as of today)
[15:46:19] <FromDiscord> <MrOkram> In reply to @Yardanico "use choosenim to install": Yea, that solved it, thanks !
[15:52:57] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:a4b1:e74b:d226:1434)
[15:56:25] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 250 seconds)
[15:57:12] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[16:13:19] <FromDiscord> <enthus1ast> @MrOkram\: this version is ancient you should upgrade to a newer one
[16:13:22] <PMunch> Haha 0.12.0, that's back when I started using Nim :P
[16:13:46] <PMunch> It's from 2015
[16:15:28] <FromDiscord> <MrOkram> In reply to @enthus1ast "<@248184418752004097>\: this version is": Already did, everything works now, thanks for the help
[16:15:37] <FromDiscord> <PsychoClay> 20 min delay lol
[16:15:51] <FromDiscord> <MrOkram> That's the delay between IRC and Discord ?
[16:15:54] <FromDiscord> <PsychoClay> yea
[16:16:01] <FromDiscord> <haxscramper> no
[16:16:03] <FromDiscord> <PsychoClay> i dont think its this bad normally
[16:16:41] <FromDiscord> <Yardanico> there was no delay
[16:16:55] <FromDiscord> <Yardanico> people from irc just replied later
[16:17:07] <FromDiscord> <PsychoClay> hmm maybe they didnt read then
[16:17:33] <FromDiscord> <haxscramper> Largest delays are between discord and matrix for some reason
[16:17:53] <FromDiscord> <haxscramper> Not 20 minutes, but sometimes things take a while to appear
[16:18:05] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:a4b1:e74b:d226:1434) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[16:21:45] <PMunch> Haha, yeah it was just me not reading the chat
[16:28:13] <FromDiscord> <Recruit_main707> ping
[16:28:48] <FromDiscord> <PsychoClay> pong
[16:29:27] <FromDiscord> <Recruit_main707> irc too slow confirmed
[16:29:27] *** Quits: max22- (~maxime@2a01cb08833598004887c4809fe95f79.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[16:29:43] <FromDiscord> <Yardanico> they are just too smart to reply :P
[16:30:54] <FromDiscord> <Recruit_main707> rude, leaving me planted with my ping :(
[16:31:10] <FromDiscord> <Recruit_main707> anyways xd, does anyone know how the intellij nim plugin is going?
[16:31:30] <FromDiscord> <Yardanico> the dev said he'll continue work in autumn
[16:31:38] <FromDiscord> <Yardanico> lemme find the exact response
[16:32:15] <FromDiscord> <Yardanico> @Recruit_main707 "@Simon Rowe I would need to create a separate Nimble run configuration. Unfortunately, I had to pause my development of the plugin and will come back to it around September." https://youtrack.jetbrains.com/issue/NIM-39
[16:32:36] <FromDiscord> <Recruit_main707> nice, there is still hope
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:54] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:39:36] <FromDiscord> <cnerd> Hi is there a way to assign the value nil to a variable of type uint8 without errors and without using the option Library
[16:40:28] <FromDiscord> <Yardanico> no
[16:40:58] <FromDiscord> <Yardanico> a variable of type uint8 is a simple value without any encapsulation and represented in memory just as 1 byte
[16:41:19] <FromDiscord> <Yardanico> is there any specific reason you'd want nil for it?
[16:49:32] <arkanoid> do you know if anyone has implemented digest authentication for httpclient module or other http libraries?
[16:50:07] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[16:50:40] <FromDiscord> <Yardanico> digest authentication is just md5 of a password, no?
[16:50:49] <FromDiscord> <Yardanico> you can just pass it in the headers
[16:52:15] <arkanoid> Yardanico: no, that's basic auth. While not being complicated, digest is usually offered by libs
[16:52:47] <FromDiscord> <Yardanico> hm, can't remember any libs
[16:52:49] <FromDiscord> <Yardanico> maybe they exist
[16:53:09] <FromDiscord> <PsychoClay> digest auth can also be with md5
[16:54:11] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[16:55:14] <arkanoid> yeah but it's a multi step thing. Well, I'll write up my own
[16:55:25] <FromDiscord> <enthus1ast> Basic auth is just base64
[16:57:09] <FromDiscord> <cnerd> In reply to @Yardanico "a variable of type": I am trying to wrap some header files and those files contain constructors where a value is defined as null
[16:57:15] <FromDiscord> <Yardanico> can you show them?
[16:57:22] <FromDiscord> <Yardanico> they probably have pointers to uint8, not just uint8 itself
[16:57:30] <FromDiscord> <Yardanico> and if it's actually defined as null, then it's just 0
[16:57:35] <FromDiscord> <Yardanico> null is 0 in C usually
[16:58:46] <FromDiscord> <cnerd> So i just want to replicate the constructor in nim
[16:58:53] <FromDiscord> <Yardanico> can you show the code?
[16:58:58] <FromDiscord> <Yardanico> from the header file or something
[17:01:48] <arkanoid> do you know why std base64.encode is gcSafe but not noSideEffect?
[17:02:16] <FromDiscord> <Yardanico> it's easier to just check the source
[17:02:34] <FromDiscord> <Yardanico> as to why - it uses runtime variables
[17:02:41] <FromDiscord> <Yardanico> global ones
[17:03:04] <FromDiscord> <Yardanico> for the lookup table
[17:08:16] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[17:10:18] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:a4b1:e74b:d226:1434)
[17:13:01] <FromDiscord> <cnerd> In reply to @Yardanico "they probably have pointers": I am currently on a mobile device so i can't send the code but I'll try making the parameter type to uint8 pointer and see what I'll get. Thanks
[17:16:29] *** Joins: max22- (~maxime@2a01cb08833598006097dc02f793035f.ipv6.abo.wanadoo.fr)
[17:20:39] <arkanoid> is there anything inside stdlib that parses string like foo = "bar", anotherfoo = "anotherbar", ... into data structure?
[17:26:38] *** Joins: rockcavera (~rc@192.12.112.204)
[17:26:38] *** Quits: rockcavera (~rc@192.12.112.204) (Changing host)
[17:26:38] *** Joins: rockcavera (~rc@user/rockcavera)
[17:29:59] <FromDiscord> <Rika> in what format is this string
[17:34:57] <FromDiscord> <5271> i get this error whenever i try to compile something https://media.discordapp.net/attachments/371759389889003532/879712885591400488/unknown.png
[17:35:01] <FromDiscord> <5271> what should i do?
[17:35:27] <FromDiscord> <5271> i installed nim with choosenim
[17:44:11] <PMunch> What kind of system are you on?
[17:44:31] <PMunch> uname -a; nim -v; gcc -v
[17:47:26] <FromDiscord> <5271> on linux mintâ†µubuntu 20.04
[17:50:10] <PMunch> And the other things I asked for?
[17:51:08] <FromDiscord> <5271>  https://media.discordapp.net/attachments/371759389889003532/879716960890417212/unknown.png
[17:51:12] <FromDiscord> <5271> here
[17:52:04] <PMunch> Why do people always insist on sending text as images..
[17:52:19] <FromDiscord> <linux user> is that problem munch?
[17:52:23] <FromDiscord> <linux user> like in irc
[17:52:51] <PMunch> Well, not any more than having to load a couple kilobytes of image data instead of a couple bytes of text data
[17:52:55] <FromDiscord> <linux user> 1.4.6. a update would be an enhanchment
[17:53:02] <PMunch> And the inability to copy text from it..
[17:53:52] <PMunch> Hmm, nothing weird there
[17:53:59] <PMunch> Not sure what the problem is TBH
[17:54:06] <FromDiscord> <linux user> try to bootstrap da compiler by hand??
[17:54:15] <FromDiscord> <enthus1ast> i would try to remove the cache folder
[17:54:16] <PMunch> Might be that you named your file main.nim, but I don't think that's an issue
[17:54:21] *** Quits: dom96 (~dom@mail.nim-lang.org) (*.net *.split)
[17:54:21] *** Quits: federico3 (~quassel@debian/federico) (*.net *.split)
[17:54:21] *** Quits: byanka (~byanka@78.137.43.40) (*.net *.split)
[17:54:21] *** Quits: euantorano (sid180289@brockwell.irccloud.com) (*.net *.split)
[17:54:21] *** Quits: ormiret (sid314108@tooting.irccloud.com) (*.net *.split)
[17:54:21] *** Quits: NimEventer (~NimBot@static.224.140.47.78.clients.your-server.de) (*.net *.split)
[17:54:21] *** Quits: lain (~lain@172.16.254.xxx) (*.net *.split)
[17:54:21] *** Quits: clemens3 (~clemens@225.40.150.83.ftth.as8758.net) (*.net *.split)
[17:54:21] *** Quits: ozzz (~oz@46.49.41.80) (*.net *.split)
[17:54:22] *** Quits: drewr (~drew@user/drewr) (*.net *.split)
[17:54:22] *** Quits: koltrast (~koltrast@h77-53-57-114.cust.a3fiber.se) (*.net *.split)
[17:54:24] <FromDiscord> <linux user> or gcc is the probelem?
[17:54:48] <FromDiscord> <linux user> In reply to @enthus1ast "i would try to": the codegen is from nim . probably it will regenerate the same code
[17:54:58] <FromDiscord> <konsumlamm> In reply to @5271 "i get this error": does that happen for every program you try to compule, or just for a specific one?
[17:55:04] <FromDiscord> <enthus1ast> you but maybe there is old stuff in it
[17:55:05] <FromDiscord> <5271> every
[17:55:07] <FromDiscord> <konsumlamm> (edit) "compule," => "compile,"
[17:56:20] <FromDiscord> <linux user> so yes you cant do anythiung which existsing nim
[17:58:36] *** Joins: dom96 (~dom@mail.nim-lang.org)
[17:58:36] *** Joins: federico3 (~quassel@debian/federico)
[17:58:36] *** Joins: byanka (~byanka@78.137.43.40)
[17:58:36] *** Joins: euantorano (sid180289@brockwell.irccloud.com)
[17:58:36] *** Joins: ormiret (sid314108@tooting.irccloud.com)
[17:58:36] *** Joins: NimEventer (~NimBot@static.224.140.47.78.clients.your-server.de)
[17:58:36] *** Joins: lain (~lain@172.16.254.xxx)
[17:58:36] *** Joins: clemens3 (~clemens@225.40.150.83.ftth.as8758.net)
[17:58:36] *** Joins: ozzz (~oz@46.49.41.80)
[17:58:36] *** Joins: drewr (~drew@user/drewr)
[17:58:36] *** Joins: koltrast (~koltrast@h77-53-57-114.cust.a3fiber.se)
[17:59:00] *** Joins: arkurious (~arkurious@user/arkurious)
[18:05:20] <FromDiscord> <Yardanico> ??
[18:30:12] *** Quits: PMunch (~PMunch@vpn.dualog.com) (Remote host closed the connection)
[18:46:16] *** Joins: vsantana (~vsantana@fttx-177136149213.usr.predialnet.com.br)
[18:49:50] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[18:50:57] *** Joins: flynn (~mcbloch@user/flynn)
[18:53:56] *** Joins: pro (~pro@user/pro)
[18:57:38] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[18:59:48] *** Quits: pro (~pro@user/pro) (Quit: WeeChat 3.2)
[19:11:37] <arkanoid> sometimes I get stuck when trying to use iterators + sequtils, like in this case: https://play.nim-lang.org/#ix=3wPM , what's wrong?
[19:15:27] <FromDiscord> <Canelhas> sent a code paste, see https://play.nim-lang.org/#ix=3wPS
[19:18:42] <FromDiscord> <Rika> map doesnt operate on iterators do they?
[19:20:43] <arkanoid> rika, I know filter*, map* works with this: https://nim-lang.org/docs/xmltree.html#items.i%2CXmlNode
[19:20:54] <arkanoid> so I don't get the difference
[19:21:23] <FromDiscord> <Rika> it does? can you make an example
[19:21:30] <FromDiscord> <Rika> actually no ill try
[19:22:26] <FromDiscord> <Rika> same error with xmltree items
[19:22:34] <FromDiscord> <Rika> ya sure it worked?
[19:22:37] <arkanoid> I do "node.filterIt(it.kind == xnElement)"
[19:22:53] <arkanoid> isn't this calling items implicitly?
[19:26:19] <arkanoid> if not, I'd like to understand the difference, as I step on this quite often
[19:26:29] <FromDiscord> <reilly> Does anyone know how to send a DM to a particular user via Dimscord?
[19:38:06] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:a4b1:e74b:d226:1434) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[19:39:52] *** Quits: euantorano (sid180289@brockwell.irccloud.com) ()
[19:40:07] *** Joins: euantorano (sid180289@id-180289.helmsley.irccloud.com)
[19:41:49] <NimEventer> New thread by Ingo: Undeclared field: 'mimes' for type mimetypes.MimeDB, see https://forum.nim-lang.org/t/8362
[19:45:40] <FromDiscord> <rishavs (Rishav Sharan)> i need to find an item in a collection. what would be the most performant way to do so?â†µ1. Create a table of items and check using haskeyâ†µ2. Create an array and check using find?
[19:46:15] <FromDiscord> <rishavs (Rishav Sharan)> sent a long message, see https://paste.rs/U9a
[19:48:26] <FromDiscord> <rishavs (Rishav Sharan)> sent a long message, see http://ix.io/3wQf
[19:49:43] *** Joins: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca)
[19:59:13] <FromDiscord> <âƒŸâƒŸ> does nim use any C libraries ?
[20:00:38] <FromDiscord> <Rika> Arkanoid, map is a proc and items is an inline iterator so you cannot pass items
[20:01:13] <FromDiscord> <Rika> Filter it is a template and you donâ€™t call items outside of it, it probably compiled into a for loop (where inline iterators can be called)
[20:01:34] <arkanoid> Rika and what makes filterIt work for XmlNode directly?
[20:01:40] <arkanoid> it is the `[]` ?
[20:03:47] <FromDiscord> <Rika> No, it probably calls items implicitly from whatever you pass it
[20:03:57] <FromDiscord> <Rika> So if it has items then it will work
[20:04:14] <FromDiscord> <Rika> Ah wait
[20:04:17] <FromDiscord> <Rika> Filter
[20:04:18] <FromDiscord> <Rika> Hm
[20:04:36] <arkanoid> not sure it is straightforward as that
[20:05:14] <FromDiscord> <Rika> Ah yes
[20:05:16] <FromDiscord> <Rika> It uses items
[20:05:18] <FromDiscord> <Rika> It is
[20:05:21] <FromDiscord> <Rika> Check the source
[20:05:30] <FromDiscord> <Rika> https://github.com/nim-lang/Nim/blob/version-1-4/lib/pure/collections/sequtils.nim#L598
[20:08:23] <arkanoid> Rika, but also mapIt does the same
[20:09:01] <arkanoid> https://github.com/nim-lang/Nim/blob/0a8e9318d3f5e6c432c7fc7c06cf6c6f3f6320ca/lib/pure/collections/sequtils.nim#L1002
[20:11:21] <arkanoid> so it means that map and filter works if the passed object has items proc, and table doesn't work as it has pairs, values, keys and so on but not items?
[20:12:08] <FromDiscord> <Rika> Map is a proc, map it is a template
[20:12:42] <FromDiscord> <Rika> In reply to @arkanoid "so it means that": I think map it will work but not map
[20:13:01] <arkanoid> no it doesn't
[20:13:11] <FromDiscord> <Rika> Ah I can see
[20:13:37] <FromDiscord> <Rika> Yeah I donâ€™t think you can do anything other than to make a closure iterator to pass
[20:15:09] <FromDiscord> <haxscramper> In reply to @âƒŸâƒŸ "does nim use any": stdlib provides wrappers to some C libraries, and IIRC nim compiler uses linenoise for something
[20:15:14] <FromDiscord> <haxscramper> https://github.com/nim-lang/Nim/tree/devel/lib/wrappers
[20:15:32] *** Quits: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca) (Quit: Konversation terminated!)
[20:15:43] *** Joins: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca)
[20:16:27] <arkanoid> Rika thanks for the feedback
[20:18:46] <FromDiscord> <âƒŸâƒŸ> so it only uses that line noise library?
[20:19:17] <FromDiscord> <haxscramper> Maybe something else from the modules I linked
[20:20:19] <FromDiscord> <haxscramper> Also you can enable goehm gc, which is a separate library as well
[20:20:50] <FromDiscord> <haxscramper> (edit) "goehm" => "boehm"
[20:20:54] <FromDiscord> <enthus1ast> and it uses glib
[20:21:33] <FromDiscord> <enthus1ast> or a c standard library
[20:22:18] <FromDiscord> <âƒŸâƒŸ> it uses glib?
[20:24:41] <FromDiscord> <haxscramper> Well, almost anything uses glib
[20:24:57] <FromDiscord> <haxscramper> Unless you specifically opt not to, and use musl
[20:25:02] <FromDiscord> <haxscramper> Etc.
[20:25:29] <FromDiscord> <haxscramper> You could say it also uses windows and posix API
[20:25:40] <FromDiscord> <enthus1ast> on my machine a simple nim executable uses eg\:         DLL Name\: KERNEL32.dllâ†µ        DLL Name\: msvcrt.dll
[20:25:41] <FromDiscord> <haxscramper> For os interactions
[20:25:50] <FromDiscord> <konsumlamm> arkanoid: the sequitls stuff only works on openArrays, not iterators
[20:27:10] <arkanoid> konsumlamm, and why does it work for XmlNode? xmlnode.filterIt works
[20:27:39] <FromDiscord> <konsumlamm> probably because filterIt is a template and doesn't check the input type
[20:27:48] <FromDiscord> <konsumlamm> it's probably not intentional
[20:30:51] <FromDiscord> <âƒŸâƒŸ> i think you meant glibc then not glib
[20:31:54] *** Joins: PMunch (~PMunch@c01F28BC3.dhcp.as2116.net)
[20:35:45] <FromDiscord> <haxscramper> honestly sequtils is really bad, poorly composes, has huge overhead etc.
[20:36:13] <FromDiscord> <enthus1ast> yesâ†µ(@âƒŸâƒŸ)
[20:37:46] <PMunch> It's more of a convenience thing
[20:37:57] <FromDiscord> <haxscramper> Lookup table would be faster than find, at least for large enough sequences of data. There is no built-in benchmarking in stdlib, but you can use treeform/benchy to compare execution time of two code blocks
[20:38:00] <FromDiscord> <rishavs (Rishav Sharan)> sent a long message, see http://ix.io/3wQf
[20:40:38] <FromDiscord> <âƒŸâƒŸ> what is the item
[20:41:46] <FromDiscord> <konsumlamm> In reply to @haxscramper "honestly sequtils is really": agreed, it'd be nice to have a (performant) iterutils module, that just works with all iterables/iterators (i think `iterable[T]` is a step in this direction)
[20:41:46] <FromDiscord> <âƒŸâƒŸ> there might be some clever tricks you could use depending on it
[20:42:45] *** Quits: vsantana (~vsantana@fttx-177136149213.usr.predialnet.com.br) (Quit: Client closed)
[20:47:16] <FromDiscord> <haxscramper> sent a long message, see https://paste.rs/2IS
[20:47:18] <arkanoid> when I hear these things my interest in the language loses 5 points. I use sequtils all over the places
[20:47:58] <FromDiscord> <haxscramper> Sequtils is not composable,
[20:48:08] <FromDiscord> <haxscramper> Or rather it is poorly composable
[20:48:17] <FromDiscord> <haxscramper> Wrt. to performance mostly
[20:48:41] <FromDiscord> <haxscramper> I'd much rather do some kind of `flow(expr |> filter |> transform |> filter)`
[20:48:54] <arkanoid> yeah, like zero-functional
[20:49:15] <FromDiscord> <âƒŸâƒŸ> seems like function composition
[20:49:18] <FromDiscord> <âƒŸâƒŸ> could just be a function
[20:49:18] <arkanoid> problem is adopting an external module. Software rot is real
[20:49:43] <FromDiscord> <haxscramper> I don't think we will ever get `|>`-anything in the stdlib, but
[20:49:57] <FromDiscord> <haxscramper> arkanoid: do you use fusion pattern matching anywhere?
[20:50:05] <FromDiscord> <haxscramper> just y/n, I'm curious
[20:50:12] <arkanoid> I don't use fusion at all
[20:50:52] <FromDiscord> <haxscramper> Because of "external module" problem, or you just didn't find anything worth using?
[20:51:06] <arkanoid> but I should, as I've already moved some parts of the project in purely functional code
[20:52:16] <arkanoid> well, I consider stdlib and my own code the best promise to avoid software rot
[20:52:39] <arkanoid> functional is just one step far from stdlib, so I'd use it
[20:52:47] <arkanoid> but yet I've not "grokked" it
[20:54:08] <FromDiscord> <haxscramper> Another issue with chained sequtils is that it literally nukes any hopes of getting nice type mismatch errors
[20:54:25] <FromDiscord> <haxscramper> "but expression <one gigatonn of garbage here> is of type"
[20:54:47] *** Quits: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca) (Ping timeout: 240 seconds)
[20:54:50] <FromDiscord> <haxscramper> `s/gigatonn/hundred trillion tonns` even
[20:55:05] <FromDiscord> <Tuatarian> Is there any way to use emscrioten with Nim?
[20:55:26] <FromDiscord> <Tuatarian> To compile raylib games to web and mobile you need emscripten
[20:55:27] <arkanoid> yeah, but it follows the map/transform/reduce pattern and that's good to control code size and generally the purely functional style
[20:56:34] <FromDiscord> <Tuatarian> I do chain sequtils often, but I think the negatives of completely unreadable code often outweigh the positives
[20:57:35] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:a4b1:e74b:d226:1434)
[20:57:43] <FromDiscord> <haxscramper> It can't generate clean and performant code because it is not aware of the full transform pipeline
[20:57:54] <arkanoid> since when map, filter and fold makes unreadable code?
[20:58:21] <FromDiscord> <Tuatarian> When you compose them too much, without proper spacing etc, makes it hard to know what's going on if you don't already know what's going on
[20:58:37] <arkanoid> I'm not talking about how nim implements them, I'm just asking from the point of view of code style
[20:58:51] <FromDiscord> <Tuatarian> You need a pipe operator imo
[20:59:03] <FromDiscord> <Tuatarian> F# does this well
[20:59:29] <arkanoid> yeah, I have my own >> and >>= when using monad pattern
[20:59:47] <arkanoid> but for plain object, sequtils it what nim has
[21:00:50] <arkanoid> should I use zero-funtional instead? I dislike assing dependencies for such widespread tools in a project
[21:01:01] <arkanoid> s/assing/adding
[21:01:56] <FromDiscord> <haxscramper> You can always try it out and decide for yourself
[21:02:11] <FromDiscord> <Tuatarian> There is with
[21:02:26] <FromDiscord> <haxscramper> It's different, `collect` is closer
[21:02:57] <FromDiscord> <haxscramper> While I'm aware of the sequtils shortcomings, I will probably use it until I find time to implement `flow` macro
[21:03:15] <FromDiscord> <haxscramper> But I have personal dislike of the `--> a().b().c()` syntax
[21:03:32] <FromDiscord> <haxscramper> I would prefer etierh `a |> b |> c` or block syntax
[21:03:33] <arkanoid> I've already spent time with collect, and no it's even more obscure than sequtils. It results weird errors and doesn't work for many edge cases
[21:03:44] <FromDiscord> <haxscramper> Like this
[21:03:47] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3wQE
[21:08:08] <FromDiscord> <âƒŸâƒŸ> that looks like some mini language
[21:08:23] <FromDiscord> <âƒŸâƒŸ> reminds me of the common lisp loop
[21:09:51] <arkanoid> I think the sequtils approach is not wrong, but it should work out of the box with any iterable, and also should achieve performaces up to stdlib
[21:10:26] <arkanoid> I think the best approach of them all for imperative languages is C# with LINQ
[21:10:43] <arkanoid> it is just monad application under the hood
[21:11:16] <FromDiscord> <haxscramper> In reply to @âƒŸâƒŸ "reminds me of the": Yes, I took some inspiration from it
[21:11:54] <FromDiscord> <haxscramper> Though large portion of the features is really only applicable to dynamically type language. Various versions if predicates that check for nil etc.
[21:12:43] <FromDiscord> <haxscramper> Maybe I should really make an RFC for that
[21:13:24] <FromDiscord> <haxscramper> At least to have a place to dump ideas, like it was with pattern matching
[21:18:26] <arkanoid> imho the more functional tools joins the party, the more the language shine
[21:20:27] *** Joins: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca)
[21:25:09] <FromDiscord> <konsumlamm> In reply to @haxscramper "I see two ways": do you know about https://github.com/nim-lang/Nim/pull/17196
[21:27:32] <FromDiscord> <konsumlamm> In reply to @iWonderAboutTuatara "I do chain sequtils": what's so bad about `a.map(...).filter(...)`? i don't see how a pipe operator would make this more readable
[21:28:18] <FromDiscord> <konsumlamm> the main performance problem with `sequtils` is that every function allocates a new seq
[21:29:29] <FromDiscord> <haxscramper> In reply to @konsumlamm "do you know about": No, I was not aware, and it makes things better I guess, though it seems like [1, 2] does not qualify as iterable[int]
[21:29:58] <FromDiscord> <haxscramper> Right now at least
[21:32:27] <arkanoid> there's apply if you can avoid changing container type
[21:34:08] *** Quits: PMunch (~PMunch@c01F28BC3.dhcp.as2116.net) (Quit: leaving)
[21:34:17] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[21:51:13] <FromDiscord> <fae> I personally prefer |> piping syntax as well
[21:51:42] <FromDiscord> <fae> Feels nicer when things break onto multiple lines
[21:51:56] <arkanoid> doesn't change much, as long as the types does not change
[21:52:19] <arkanoid> you can split multiple lines with dot
[21:53:05] <FromDiscord> <fae> Yea I think pipe just looks cleaner. And feels more natural for functional transform chains
[21:54:15] <FromDiscord> <fae> But I feel like it only works well when currying is built into the language
[22:03:01] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[22:07:02] <FromDiscord> <âƒŸâƒŸ> i completely disagree
[22:07:17] <FromDiscord> <âƒŸâƒŸ> the last thing i want is to have so many syntaxs that its like a soup
[22:07:25] <FromDiscord> <âƒŸâƒŸ> it already has ufcs
[22:07:34] <FromDiscord> <âƒŸâƒŸ> so you can chain it without nesting ()
[22:08:12] <FromDiscord> <Tuatarian> But taking a newline for each function isn't always great readability wise either
[22:09:40] <FromDiscord> <Tuatarian> In reply to @konsumlamm "what's so bad about": This is good, but when you get more complex stuff with nesting and such it becomes very painful
[22:10:19] <FromDiscord> <âƒŸâƒŸ> example?
[22:11:07] <FromDiscord> <Tuatarian>  https://media.discordapp.net/attachments/371759389889003532/879782385896550450/Screenshot_20210824-104038.jpg
[22:11:14] <FromDiscord> <Tuatarian> From my code, this is horrible
[22:11:25] <FromDiscord> <Tuatarian> Do images send over irc?
[22:11:42] <FromDiscord> <âƒŸâƒŸ> yes they do
[22:11:50] <FromDiscord> <Tuatarian> Sends a link to the image which is good enough
[22:12:05] <FromDiscord> <Tuatarian> Maybe some irc clients display the image itself, not sure
[22:12:17] <FromDiscord> <âƒŸâƒŸ> i can see it
[22:12:30] <FromDiscord> <Tuatarian> You're on discord
[22:12:34] <FromDiscord> <âƒŸâƒŸ> but you have an account here why are you on irc?
[22:12:34] <FromDiscord> <Tuatarian> I think
[22:12:56] <FromDiscord> <Tuatarian> I'm on discord, but many are on irc
[22:13:11] <FromDiscord> <Tuatarian> We have a really good bridge between irc and discord
[22:13:25] <FromDiscord> <Tuatarian> For some strange reason GitHub app does not allow copy parting
[22:13:29] <FromDiscord> <Tuatarian> It does
[22:13:35] <FromDiscord> <âƒŸâƒŸ> sent a code paste, see https://paste.rs/gOS
[22:13:36] <FromDiscord> <Tuatarian> And I should have
[22:13:39] <FromDiscord> <âƒŸâƒŸ> (edit) "https://play.nim-lang.org/#ix=3wQX" => "https://play.nim-lang.org/#ix=3wQW"
[22:14:05] <FromDiscord> <Tuatarian> But for some cases, making a newline will make it harder to read
[22:14:17] <FromDiscord> <âƒŸâƒŸ> how does |> help
[22:14:35] <FromDiscord> <Tuatarian> This is not a big issue imo, but a consistent pipe operator being "the way to do it" will make more readable code
[22:15:07] <FromDiscord> <âƒŸâƒŸ> i dont know what that would even do differently here
[22:15:43] *** Quits: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca) (Ping timeout: 252 seconds)
[22:16:05] <FromDiscord> <Tuatarian> My code is not a good example v3dsus3 it's just generally sloppy and bad
[22:16:30] <FromDiscord> <konsumlamm> In reply to @âƒŸâƒŸ "so nim dosent let": this almost looks the same as it would with `|>`, i don't really see your point
[22:16:30] <FromDiscord> <Tuatarian> And I can't remember/don't have to find a better one
[22:17:26] <FromDiscord> <âƒŸâƒŸ> that was my point
[22:18:48] <FromDiscord> <haxscramper> dart allows for call cascades
[22:19:18] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3wQZ
[22:19:24] <FromDiscord> <haxscramper> but regardless, it must be a `flow/-->` macro
[22:19:38] <FromDiscord> <haxscramper> I've ran over some papers on loop DSL etc.
[22:19:47] <FromDiscord> <haxscramper> And you can do a lot of things on top of the regular code
[22:20:01] <FromDiscord> <haxscramper> Like loop unrolling, unswitching optimizations
[22:20:03] <FromDiscord> <haxscramper> etc.
[22:20:36] <FromDiscord> <haxscramper> And you can write a macro that does loop unswitching,
[22:20:49] <FromDiscord> <haxscramper> `.thing()` does not look like a transformation really
[22:20:58] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:a4b1:e74b:d226:1434) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[22:21:11] <FromDiscord> <haxscramper> `.get().doSomething().andSomethingElse().andFinallyThis()`
[22:21:12] <FromDiscord> <haxscramper> yes
[22:21:23] <FromDiscord> <haxscramper> But it does not look like a transform in any way
[22:21:35] <FromDiscord> <haxscramper> Neither does `-->` with it's magic
[22:21:45] <FromDiscord> <haxscramper> Nor `|>` is really good, since it is really cramped
[22:21:54] <FromDiscord> <haxscramper> For simple things it is good, but
[22:22:06] <FromDiscord> <haxscramper> In reply to @iWonderAboutTuatara "": But code like this would still suffer from the same issue
[22:22:24] *** Quits: perro (~perro@072-191-245-069.res.spectrum.com) (Ping timeout: 250 seconds)
[22:22:26] <FromDiscord> <haxscramper> `collect` is the opposide of that - it is good when you use it for somewhat large expressions
[22:22:33] <FromDiscord> <haxscramper> extremely ugly for small loops
[22:22:44] <FromDiscord> <haxscramper> Also collect barely allows for custom result collections
[22:25:14] <FromDiscord> <haxscramper> For complicated transforms I would want something like https://github.com/disruptek/foreach `foreach k, v in j.pairs of string and string:` to show transformed types
[22:25:16] <nrds> <12R2D299> 4GitHub: 7"A sugary for loop macro with syntax for typechecking loop variables"
[22:25:55] <FromDiscord> <haxscramper> In reply to @haxscramper "Like loop unrolling, unswitching": This optimization will increase compilation time, but it is possible to do `if defined(release)` in the macro logic, so it does not matter
[22:26:25] <FromDiscord> <haxscramper> Also `|>`, `>>=`, `>>` seems to be more familliar for people who come from FP languages
[22:28:09] <FromDiscord> <JSONBash> Functional code is about composition, if you are doing 5 transformations on a line thats gonna look messy in any language. Seperating into seperate named functions (or anonymous functions) is really the way to clean up functional code
[22:28:30] <FromDiscord> <JSONBash> you dont't wanna find yourself like other languages. F# and Elixir use `|>`, clojure uses `->` and `-->` haskell uses `$` ,`&`, `.` and `>>>` (and flow library support adds `|>` and `<|`)
[22:28:45] <FromDiscord> <haxscramper> But if it is the only place where I do use this logic, and each step is two lines
[22:28:49] <FromDiscord> <JSONBash> this is all accomplished with .map(..).filter()
[22:28:53] <FromDiscord> <haxscramper> Does it make sense to create five two-line procs
[22:29:08] <FromDiscord> <JSONBash> so no point in having operators when the language works greate
[22:29:49] <FromDiscord> <âƒŸâƒŸ> if anything i would make this a separate library
[22:29:53] <FromDiscord> <JSONBash> no but you can use anonymous functions to add names (better clarity)
[22:30:15] <FromDiscord> <âƒŸâƒŸ> i do not like DSL type things
[22:30:36] <FromDiscord> <JSONBash> my point is that the operator is not gonna solve anything, being deliberatly clear about the steps taking place at each transform is the real issue
[22:30:37] <FromDiscord> <âƒŸâƒŸ> cause then you basically have to learn a new mini language with its own syntax and semantics
[22:30:51] <FromDiscord> <âƒŸâƒŸ> example: python list comprehension
[22:30:55] <FromDiscord> <haxscramper> In reply to @âƒŸâƒŸ "if anything i would": yes, of course this is a separate module, library
[22:32:20] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3wR3
[22:32:23] <FromDiscord> <haxscramper> being clear means having keywords
[22:32:46] <FromDiscord> <âƒŸâƒŸ> that reminds me of python
[22:32:54] <FromDiscord> <haxscramper> That's how it went in the fusion matching - at first i wanted to have ``, `@` and other sigils for sequence matching
[22:33:18] <FromDiscord> <haxscramper> But then I decided that `[all @elements is Kind()]` or `[any < 10]` is better
[22:33:28] <FromDiscord> <haxscramper> `some/any/none/all`
[22:34:08] <FromDiscord> <haxscramper> Well, `flow(expr.map(it  2).keep(it < 10))` is also a thing probable
[22:34:10] <FromDiscord> <haxscramper> (edit) "probable" => "probably"
[22:34:34] <FromDiscord> <haxscramper> In reply to @haxscramper "for small transforms `flow(expr": The example is not really good since I took "simple" transform and wrote it in full form
[22:35:24] <FromDiscord> <haxscramper> `|||||||||||||||||||||||>` operator when
[22:35:38] *** Joins: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca)
[22:35:50] <FromDiscord> <haxscramper> Sadly I can't have operator that starts with sigils
[22:35:56] <FromDiscord> <haxscramper> but has regular unicode text inside
[22:36:14] <FromDiscord> <haxscramper> operator Â¯\_(ãƒ„)_/Â¯
[22:36:22] <FromDiscord> <haxscramper> (edit) "Â¯\_(ãƒ„)_/Â¯" => "`+Â¯\_(ãƒ„)_/Â¯+`"
[22:36:53] <FromDiscord> <haxscramper> that would be nice to have. Just instantly blow away anyone who comes within one kilometer range of your code
[22:37:54] <FromDiscord> <haxscramper> https://github.com/belamenso/v
[22:37:55] <nrds> <12R2D299> 4GitHub: 7"Write Nim only with 'v'"
[22:39:07] <FromDiscord> <JSONBash> sent a long message, see http://ix.io/3wRa
[22:39:39] <FromDiscord> <JSONBash> In reply to @haxscramper "https://github.com/belamenso/v": HAHA, davinci would weep with joy
[22:40:43] <FromDiscord> <JSONBash> In reply to @haxscramper "operator `+Â¯\_(ãƒ„)_/Â¯+`": `map(+Â¯\_(ãƒ„)_/Â¯+  2) |> keep(+Â¯\_(ãƒ„)_/Â¯+ < 10)` LOL
[22:40:56] <FromDiscord> <haxscramper> In reply to @JSONBash "I agree that simple": It is a documentation thing really, people who don't write comments/clean procs would put everything in one transform stage anyway
[22:41:11] <FromDiscord> <haxscramper> People who do this can use `#[ doc comment ]#` anywhere
[22:41:36] <FromDiscord> <haxscramper> I mean, you can't expect this even in regular loops
[22:42:19] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3wRb
[22:44:03] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:a4b1:e74b:d226:1434)
[22:45:17] <FromDiscord> <JSONBash> In reply to @haxscramper "It is a documentation": Yeah, nothing you can do there. Only when people come back to their code 2 years later and think "wtf was I doing that for" will that lesson be learned
[22:47:26] <FromDiscord> <JSONBash> sent a code paste, see https://play.nim-lang.org/#ix=3wRg
[22:47:51] <FromDiscord> <JSONBash> thats an opinion thing, easy for someone to come in and actually understand the domain problem and not just the syntax
[22:48:48] <FromDiscord> <JSONBash> I still need help convincing my coworkers of that though lol
[22:51:27] <FromDiscord> <haxscramper> `--hint[MagicNumber]:on`
[22:51:53] *** Quits: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca) (Ping timeout: 248 seconds)
[22:52:55] <FromDiscord> <dankrad> does anyone know which test is failing? There's no line with `FAIL: path/to/test`.https://dev.azure.com/nim-lang/Nim/_build/results?buildId=18412&view=logs&j=c6054849-8341-5e23-b888-79fd7ec95d3a&t=8f082e70-3e0a-5206-473a-da5bdc1e1c68&l=19
[22:54:01] <FromDiscord> <JSONBash> In reply to @haxscramper "`--hint[MagicNumber]:on`": Is that a thing? What does it do?
[22:54:51] <FromDiscord> <haxscramper> No, there is not such flag
[22:55:19] <FromDiscord> <haxscramper> But I guess it could warn about any usage of integer literal that is not `const descriptiveName = 42`
[22:58:58] <FromDiscord> <Neko~Neko~ni> In reply to @haxscramper "https://github.com/belamenso/v": reminds me of brainfck programming language
[22:59:09] <arkanoid> is there a stdlib proc to generate random alphanumerical strings?
[22:59:31] <FromDiscord> <JSONBash> In reply to @haxscramper "But I guess it": or any number used not in an assignment? `if c < 43525523`
[23:00:00] <FromDiscord> <haxscramper> In reply to @arkanoid "is there a stdlib": `sample({'a' .. 'z'})` from `std/random`
[23:00:46] <FromDiscord> <haxscramper> Also strutils has bad performance as well, and it was suggested to use `dup` instead
[23:00:52] <FromDiscord> <haxscramper> but `dup` is ugly as hell
[23:00:57] <FromDiscord> <haxscramper> also broken
[23:01:30] <FromDiscord> <haxscramper> and all string operations are ... transforms that can be optimized if we have full transformation logic at once
[23:11:07] *** Quits: max22- (~maxime@2a01cb08833598006097dc02f793035f.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[23:16:10] <FromDiscord> <dankrad> [leorize](https://matrix.to/#/@leorize:envs.net)\: Could you check it out if you've time and the mood?â†µI replaced the pr with your cleaner version, and it's still failing. But there's no line in log which shows the failed test.
[23:21:13] <FromDiscord> <leorize> looks like all tests passed\: https://dev.azure.com/nim-lang/Nim/_build/results?buildId=18412&view=ms.vss-test-web.build-test-results-tab
[23:21:41] <FromDiscord> <dankrad> yep, that's what's confusing me
[23:22:44] <FromDiscord> <leorize> megatest failed it seems
[23:23:39] <FromDiscord> <leorize> macros/t14511 seems to be the issue
[23:24:11] <FromDiscord> <dankrad> how did you found out that's this test?
[23:25:55] <FromDiscord> <leorize> pro tip\: use raw log view
[23:26:24] <FromDiscord> <leorize> you can use your browser search there which is much better than azure's search function
[23:26:45] <FromDiscord> <leorize> I looked for "FAIL" and got megatest
[23:28:36] <FromDiscord> <dankrad> but how did you get that it's test t14511.nim? There are tests above and bellow which also could be the failing test
[23:30:06] <FromDiscord> <leorize> sent a code paste, see https://play.nim-lang.org/#ix=3wRr
[23:31:09] <FromDiscord> <leorize> the missing output is after t14511, so it's the prime candidate
[23:31:10] <FromDiscord> <dankrad> ahh, ok. this makes sense.
[23:31:33] <FromDiscord> <dankrad> I didn't knew that I need to specify the output since the test ran successfully on my machine without
[23:31:50] <FromDiscord> <dankrad> I'll fix it, thank you!
[23:31:59] <FromDiscord> <leorize> yea megatest is a bit weird
[23:32:19] <FromDiscord> <leorize> usually I'd recommend doing asserts so you don't have to specify the output
[23:32:39] <FromDiscord> <leorize> you can try running megatest with `./koch test megatest` locally
[23:33:49] <FromDiscord> <dankrad> ah, thanks. That may the reason why testament was failing at me.
[23:34:05] <FromDiscord> <dankrad> The ouput is test code from the issue i want to keep
[23:35:04] <FromDiscord> <leorize> we will need to wire the test reporting code into megatest so one can filter via the tests tab instead
[23:35:27] <FromDiscord> <leorize> it's so easy to gloss over megatest like this \:/
[23:36:41] <FromDiscord> <dankrad> yep, especially when it's your first experience with testament \:)
[23:36:58] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:a4b1:e74b:d226:1434) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[23:37:30] <FromDiscord> <dankrad> But thank you again for helping me out.
[23:37:35] <FromDiscord> <dankrad> I was getting crazy about this
[23:47:32] *** Joins: max22- (~maxime@2a01cb088335980069b6fcc0b7d66f69.ipv6.abo.wanadoo.fr)
[23:59:27] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:a4b1:e74b:d226:1434)
