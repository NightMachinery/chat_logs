[00:00:22] <mockturtle> Why I no longer contribute to Racket [person lisp] (jturner) https://lobste.rs/s/6rnyn9
[00:02:41] *** Quits: sbmsr (~pi@2600:1700:63d0:4830:7dbf:92d8:fd42:235d) (Ping timeout: 272 seconds)
[00:03:36] <ubitux> is there a visualisation of the invite tree of lobste.rs somewhere?
[00:03:58] <ubitux> i'm kinda\ curious of the depth / order of magnitude
[00:04:16] <jj5> https://lobste.rs/u
[00:04:17] <mockturtle> [ Users | Lobsters ] - lobste.rs
[00:05:03] <ubitux> oh nice, thanks
[00:05:26] *** Joins: kinduff0 (~kinduff@user/kinduff)
[00:06:04] *** Joins: explorier (~explorier@user/explorier)
[00:11:07] *** Quits: hub (~hub@user/hub) (Quit: ZNC 1.8.2 - https://znc.in)
[00:11:32] *** Joins: hub (~hub@user/hub)
[00:13:40] *** Joins: kinduff07 (~kinduff@user/kinduff)
[00:14:48] <mockturtle> Upgrading Precursor’s TRNG [security hardware] (napkindrawing) https://lobste.rs/s/fp3qzv
[00:15:50] *** Joins: adinfinitum (~adinfinit@2600:6c40:653f:5f00:a650:d8d7:fe0b:8c1f)
[00:16:15] *** Quits: kinduff0 (~kinduff@user/kinduff) (Ping timeout: 244 seconds)
[00:16:15] *** kinduff07 is now known as kinduff0
[00:22:30] *** Quits: adinfinitum (~adinfinit@2600:6c40:653f:5f00:a650:d8d7:fe0b:8c1f) (Ping timeout: 264 seconds)
[00:23:53] *** Quits: milosz__ (~milosz@user/milosz) (Remote host closed the connection)
[00:24:36] *** Joins: sbmsr (~pi@2600:1700:63d0:4830:7dbf:92d8:fd42:235d)
[00:28:20] *** Joins: gera (~gera@user/gera)
[00:30:00] *** Quits: gera (~gera@user/gera) (Read error: Connection reset by peer)
[00:31:06] *** Quits: spirgel_ (spirgel@gateway/vpn/protonvpn/spirgel) (Remote host closed the connection)
[00:31:14] *** Quits: mercerist (~mercerist@user/mercerist) (Quit: mercerist)
[00:31:41] *** Quits: sbmsr (~pi@2600:1700:63d0:4830:7dbf:92d8:fd42:235d) (Ping timeout: 252 seconds)
[00:32:07] *** Joins: gera (~gera@user/gera)
[00:32:43] *** Joins: jkl (~jkl@2600:1700:2420:6d10::3f1)
[00:32:59] *** Joins: sbmsr (~pi@2600:1700:63d0:4830:7dbf:92d8:fd42:235d)
[00:46:23] *** Quits: ausserz (~ausserz@user/ausserz) (Ping timeout: 272 seconds)
[00:47:06] *** Joins: spirgel (spirgel@gateway/vpn/protonvpn/spirgel)
[00:47:57] *** Quits: alpernebbi (~quassel@user/alpernebbi) (Quit: alpernebbi)
[00:48:43] *** Joins: adinfinitum (~adinfinit@2600:6c40:653f:5f00:a650:d8d7:fe0b:8c1f)
[00:51:31] *** Joins: rhn (~rhn@dynamic-093-133-071-018.93.133.pool.telefonica.de)
[00:51:38] <manicennui> companion_cube: No idea.
[00:51:48] <companion_cube> seems kind of fun
[00:51:56] <companion_cube> but I only have a switch these days :)
[00:51:58] *** Quits: spirgel (spirgel@gateway/vpn/protonvpn/spirgel) (Ping timeout: 268 seconds)
[00:52:01] *** Joins: fabianlindfors (~fabianlin@46-162-75-98.cust.bredband2.com)
[00:52:42] *** Quits: rhn_mk1 (~rhn@dynamic-093-131-065-217.93.131.pool.telefonica.de) (Ping timeout: 240 seconds)
[00:52:45] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[00:55:35] <manicennui> Git gud kid.
[00:57:24] *** Quits: rhn (~rhn@dynamic-093-133-071-018.93.133.pool.telefonica.de) (Ping timeout: 268 seconds)
[00:57:29] *** Joins: kstatz12 (~karl.stat@2601:147:4300:6cc0:f72a:b1f7:4ccb:dcb2)
[00:59:08] *** Joins: rfrail3 (~rfrail3@243.red-83-51-39.dynamicip.rima-tde.net)
[01:00:30] *** Quits: whatsyourask (~whatsyour@user/whatsyourask) (Quit: whatsyourask)
[01:03:30] *** Quits: jkl (~jkl@2600:1700:2420:6d10::3f1) (Ping timeout: 240 seconds)
[01:05:11] *** Joins: spirgel (spirgel@gateway/vpn/protonvpn/spirgel)
[01:07:49] *** Quits: timj (~timj@79-252-142-46.pool.kielnet.net) (Remote host closed the connection)
[01:07:59] *** Quits: sbmsr (~pi@2600:1700:63d0:4830:7dbf:92d8:fd42:235d) (Ping timeout: 252 seconds)
[01:09:05] *** Quits: kanwar (~kanwar@45.251.106.233) (Ping timeout: 252 seconds)
[01:09:14] *** Joins: MerchantOfVenice (~patrick@user/merchantofvenice)
[01:09:38] *** Quits: spirgel (spirgel@gateway/vpn/protonvpn/spirgel) (Ping timeout: 252 seconds)
[01:11:06] *** Quits: adinfinitum (~adinfinit@2600:6c40:653f:5f00:a650:d8d7:fe0b:8c1f) (Ping timeout: 264 seconds)
[01:12:19] *** Quits: fabianlindfors (~fabianlin@46-162-75-98.cust.bredband2.com) (Quit: Leaving...)
[01:12:54] *** Joins: jkl (~jkl@2600:1700:2420:6d10::3f1)
[01:16:23] *** Quits: rfrail3 (~rfrail3@243.red-83-51-39.dynamicip.rima-tde.net) (Quit: Saliendo)
[01:17:10] *** Joins: rfrail3 (~rfrail3@243.red-83-51-39.dynamicip.rima-tde.net)
[01:19:09] *** Quits: rfrail3 (~rfrail3@243.red-83-51-39.dynamicip.rima-tde.net) (Client Quit)
[01:20:22] *** Joins: rfrail3 (~rfrail3@243.red-83-51-39.dynamicip.rima-tde.net)
[01:20:57] *** Quits: Pixi (~Pixi@user/pixi) (Quit: Leaving)
[01:21:14] *** Joins: spirgel (spirgel@gateway/vpn/protonvpn/spirgel)
[01:23:33] *** Quits: kstatz12 (~karl.stat@2601:147:4300:6cc0:f72a:b1f7:4ccb:dcb2) (Remote host closed the connection)
[01:24:56] <manicennui> https://en.wikipedia.org/wiki/Mew_(Pok%C3%A9mon)#Concept_and_creation
[01:24:56] <mockturtle> [ Mew (Pokémon) - Wikipedia ] - en.wikipedia.org
[01:25:03] *** Quits: rfrail3 (~rfrail3@243.red-83-51-39.dynamicip.rima-tde.net) (Client Quit)
[01:25:20] <manicennui> " It was intended to be a Pokémon only Game Freak staff members would know about and be able to obtain.[1] Mew was added at the very end of the development of Pokémon Red and Blue after the removal of debug features, freeing up just enough space to add the character despite being told not to alter the game any further at this point. Though not intended by the developers to be obtainable, due to a glitch, players were able to
[01:25:20] <manicennui> encounter it.[2]"
[01:25:20] *** Joins: rfrail3 (~rfrail3@243.red-83-51-39.dynamicip.rima-tde.net)
[01:25:39] *** Joins: rfrail3_ (~rfrail3@243.red-83-51-39.dynamicip.rima-tde.net)
[01:26:07] *** Quits: rfrail3_ (~rfrail3@243.red-83-51-39.dynamicip.rima-tde.net) (Client Quit)
[01:26:07] *** Quits: rfrail3 (~rfrail3@243.red-83-51-39.dynamicip.rima-tde.net) (Client Quit)
[01:26:23] *** Joins: rfrail3 (~rfrail3@243.red-83-51-39.dynamicip.rima-tde.net)
[01:29:51] *** Joins: adinfinitum (~adinfinit@2600:6c40:653f:5f00:a650:d8d7:fe0b:8c1f)
[01:31:37] <mockturtle> Inside a transistorized shift register box, built in 1965 for Apollo testing [hardware historical] (calvin) https://lobste.rs/s/p6swne
[01:38:43] *** Joins: sbmsr (~pi@104-6-130-18.lightspeed.miamfl.sbcglobal.net)
[01:39:08] *** Joins: kanwar (~kanwar@45.251.106.233)
[01:39:23] *** Joins: timj (~timj@79-252-142-46.pool.kielnet.net)
[01:46:49] *** Quits: MerchantOfVenice (~patrick@user/merchantofvenice) (Quit: Konversation terminated!)
[01:49:49] *** Quits: spirgel (spirgel@gateway/vpn/protonvpn/spirgel) (Ping timeout: 268 seconds)
[01:51:12] *** Joins: lelu (~lelu@host81-129-252-0.range81-129.btcentralplus.com)
[01:54:05] *** Quits: fro (fro@humpty.dance) (Quit: EPIC5-2.1.5[1945] - amnesiac : brb)
[01:57:04] *** Quits: lelu (~lelu@host81-129-252-0.range81-129.btcentralplus.com) (Remote host closed the connection)
[02:00:25] *** Quits: seschwar (~seschwar@user/seschwar) (Quit: :wq)
[02:00:54] <mockturtle> Photopea | Online Photo Editor [design web] (koehr) https://lobste.rs/s/lz1v6j
[02:02:21] *** Joins: spirgel (spirgel@gateway/vpn/protonvpn/spirgel)
[02:03:38] *** Joins: salpynx (~salpynx@121.73.84.248)
[02:07:12] *** Quits: spirgel (spirgel@gateway/vpn/protonvpn/spirgel) (Ping timeout: 268 seconds)
[02:07:42] *** Quits: kanwar (~kanwar@45.251.106.233) (Ping timeout: 268 seconds)
[02:08:46] *** Joins: ur5us (~ur5us@2406:e002:6adb:4101:bf0a:c10b:6645:4acb)
[02:08:49] *** Quits: rfrail3 (~rfrail3@243.red-83-51-39.dynamicip.rima-tde.net) (Quit: Leaving)
[02:11:50] *** Quits: anton (~anton@antonmcclure.com) (Quit: anton)
[02:13:08] *** Quits: gera (~gera@user/gera) (Quit: Quit)
[02:13:47] *** Quits: sbmsr (~pi@104-6-130-18.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 272 seconds)
[02:14:07] *** Joins: fro (fro@humpty.dance)
[02:15:29] *** Joins: ionface (~ionface@user/ionface)
[02:16:19] <mockturtle> Scammers mail fake Ledger devices to steal your cryptocurrency [security] (lattera) https://lobste.rs/s/yirwaw
[02:16:27] *** Quits: maahl (~maahl@cm-84.209.53.232.getinternet.no) (Ping timeout: 268 seconds)
[02:17:01] *** Joins: slice (~slice@user/slice)
[02:19:24] <mockturtle> How the K-line got its name: history of IRC daemon configuration [historical] (hlandau) https://lobste.rs/s/dihtct
[02:19:26] <companion_cube> o h n o
[02:19:32] *** Joins: spirgel (spirgel@gateway/vpn/protonvpn/spirgel)
[02:22:31] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[02:23:23] *** Joins: home (~home@user/home)
[02:23:43] *** Joins: kstatz12 (~karl.stat@2601:147:4300:6cc0:f72a:b1f7:4ccb:dcb2)
[02:23:53] *** Quits: spirgel (spirgel@gateway/vpn/protonvpn/spirgel) (Ping timeout: 252 seconds)
[02:24:14] <home> ^_^
[02:25:03] *** Joins: sbmsr (~pi@2600:1700:63d0:4830:7dbf:92d8:fd42:235d)
[02:30:05] <mockturtle> A more efficient Breadth First Search [compsci] (mlw) https://lobste.rs/s/agen6l
[02:32:42] *** Quits: mahmutov (~mahmutov@176.30.253.24) (Ping timeout: 264 seconds)
[02:35:33] *** Joins: home_ (~home@user/home)
[02:35:37] *** Joins: spirgel (spirgel@gateway/vpn/protonvpn/spirgel)
[02:36:02] *** Joins: kanwar (~kanwar@45.251.106.233)
[02:38:51] *** Quits: home (~home@user/home) (Ping timeout: 244 seconds)
[02:39:53] *** Quits: spirgel (spirgel@gateway/vpn/protonvpn/spirgel) (Ping timeout: 244 seconds)
[02:42:53] *** Quits: slice (~slice@user/slice) (Quit: zzz)
[02:44:07] *** Joins: slice (~slice@user/slice)
[02:49:19] *** Joins: Forty-Bot (~kvirc@pool-74-96-87-9.washdc.fios.verizon.net)
[02:53:31] *** Joins: spirgel (spirgel@gateway/vpn/protonvpn/spirgel)
[02:55:02] *** Quits: noxim (~noxim@user/noxim) (Ping timeout: 250 seconds)
[02:56:46] <mockturtle> Scheme 9 from Empty Space, Reimagined : S9fES : T3X.ORG [lisp] (banana_oatmeal) https://lobste.rs/s/i7uxbq
[02:57:59] *** Joins: noxim (~noxim@user/noxim)
[02:58:16] *** Quits: spirgel (spirgel@gateway/vpn/protonvpn/spirgel) (Ping timeout: 268 seconds)
[03:04:43] *** Quits: slice (~slice@user/slice) (Quit: zzz)
[03:05:47] *** Quits: sbmsr (~pi@2600:1700:63d0:4830:7dbf:92d8:fd42:235d) (Ping timeout: 268 seconds)
[03:07:01] *** Joins: slice (~slice@user/slice)
[03:07:47] *** Quits: eroc19907 (~eroc1990@068-116-193-243.res.spectrum.com) (Quit: The Lounge - https://thelounge.chat)
[03:08:31] *** Quits: adinfinitum (~adinfinit@2600:6c40:653f:5f00:a650:d8d7:fe0b:8c1f) (Quit: WeeChat 3.0.1)
[03:09:33] *** Joins: Guest38 (~Guest38@201.199.222.84)
[03:10:05] *** Quits: Mrkva (~mrkva@user/mrkva) (Ping timeout: 252 seconds)
[03:10:36] *** Quits: varjag (~user@ti0040a400-5479.bb.online.no) (Ping timeout: 268 seconds)
[03:10:39] *** Joins: eroc19907 (~eroc1990@068-116-193-243.res.spectrum.com)
[03:10:51] *** Joins: spirgel (spirgel@gateway/vpn/protonvpn/spirgel)
[03:11:06] *** Joins: Mrkva (~mrkva@alpha.mrkva.eu)
[03:11:06] *** Quits: Mrkva (~mrkva@alpha.mrkva.eu) (Changing host)
[03:11:06] *** Joins: Mrkva (~mrkva@user/mrkva)
[03:12:57] *** Quits: noxim (~noxim@user/noxim) (Quit: Client closed)
[03:13:32] *** Joins: noxim (~noxim@user/noxim)
[03:14:25] *** Joins: walton (quassel@gateway/vpn/airvpn/walton)
[03:15:39] *** Quits: spirgel (spirgel@gateway/vpn/protonvpn/spirgel) (Ping timeout: 268 seconds)
[03:15:49] *** Quits: Guest38 (~Guest38@201.199.222.84) (Quit: Client closed)
[03:18:10] *** Quits: walton (quassel@gateway/vpn/airvpn/walton) (Client Quit)
[03:18:30] *** Joins: walton (quassel@gateway/vpn/airvpn/walton)
[03:27:33] *** Joins: jmcantrell (~weechat@86.106.143.201)
[03:35:16] *** Quits: jmcantrell (~weechat@86.106.143.201) (Ping timeout: 268 seconds)
[03:36:47] *** Joins: jmcantrell (~weechat@86.106.121.201)
[03:39:48] *** Joins: spirgel (spirgel@gateway/vpn/protonvpn/spirgel)
[03:41:30] *** Joins: sbmsr (~pi@104-6-130-18.lightspeed.miamfl.sbcglobal.net)
[03:42:28] *** Quits: bird (~bird@136-25-143-83.cab.webpass.net) (Quit: bird)
[03:44:31] *** Quits: spirgel (spirgel@gateway/vpn/protonvpn/spirgel) (Ping timeout: 268 seconds)
[03:44:33] *** Joins: bird (~bird@136-25-143-83.cab.webpass.net)
[03:48:35] *** Quits: noxim (~noxim@user/noxim) (Quit: Client closed)
[03:48:47] *** Quits: kanwar (~kanwar@45.251.106.233) (Ping timeout: 272 seconds)
[03:54:03] *** Quits: tex (~super@user/dix) (Ping timeout: 272 seconds)
[03:54:42] *** Parts: afon (~afon@c-73-32-240-117.hsd1.tx.comcast.net) ()
[03:55:52] *** Joins: spirgel (spirgel@gateway/vpn/protonvpn/spirgel)
[03:59:25] <mockturtle> Designing a Better strcpy [c] (calvin) https://lobste.rs/s/uhlwbm
[03:59:58] *** Quits: spirgel (spirgel@gateway/vpn/protonvpn/spirgel) (Ping timeout: 244 seconds)
[04:00:41] *** Quits: home_ (~home@user/home) (Quit: must init repos)
[04:01:22] <fro> needs (2020)
[04:01:30] <fro> also has this been done a million times
[04:01:37] <fro> hasn't*
[04:02:10] *** Quits: resistite (~resistite@86.106.121.175) (Quit: Lost terminal)
[04:03:28] *** Joins: resistite (~resistite@86.106.121.175)
[04:03:30] *** Quits: resistite (~resistite@86.106.121.175) (Client Quit)
[04:04:39] *** Joins: resistite (~resistite@86.106.121.175)
[04:04:39] *** Quits: resistite (~resistite@86.106.121.175) (Client Quit)
[04:05:12] *** Joins: resistite (~resistite@86.106.121.175)
[04:05:12] *** Quits: resistite (~resistite@86.106.121.175) (Client Quit)
[04:05:29] *** Joins: resistite (~resistite@86.106.121.175)
[04:12:30] *** Joins: whatsyourask (~whatsyour@user/whatsyourask)
[04:12:42] *** Quits: sbmsr (~pi@104-6-130-18.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 240 seconds)
[04:17:00] *** Quits: martian67 (~martian67@user/martian67) (Remote host closed the connection)
[04:19:12] <geoffwozniak> Perhaps, but given that there are many options that don't do it (which are mentioned in the post) suggests that maybe it hasn't
[04:24:25] *** Joins: spirgel (spirgel@gateway/vpn/protonvpn/spirgel)
[04:26:25] <fro> i guess
[04:28:54] *** Quits: spirgel (spirgel@gateway/vpn/protonvpn/spirgel) (Ping timeout: 244 seconds)
[04:30:01] * manicennui designs a worse strcpy
[04:31:27] <manicennui> I started watching Manifest. Like the initial concept, not sure whether this is going somewhere good or dumb.
[04:32:48] <manicennui> The amount of God talk is not encouraging.
[04:33:50] *** Joins: kanwar (~kanwar@45.251.106.233)
[04:40:35] *** Joins: spirgel (spirgel@gateway/vpn/protonvpn/spirgel)
[04:41:18] *** Quits: polve (~polve@user/polve) (Ping timeout: 272 seconds)
[04:44:28] *** Joins: polve (~polve@user/polve)
[04:45:34] *** Quits: spirgel (spirgel@gateway/vpn/protonvpn/spirgel) (Ping timeout: 268 seconds)
[04:45:45] *** Joins: sbmsr (~pi@2600:1700:63d0:4830:7dbf:92d8:fd42:235d)
[04:59:11] *** Joins: spirgel (spirgel@gateway/vpn/protonvpn/spirgel)
[04:59:19] *** Quits: slice (~slice@user/slice) (Quit: zzz)
[05:00:23] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3-dev)
[05:00:56] *** Joins: slice (~slice@user/slice)
[05:01:54] *** Quits: soczol (~soczol@user/soczol) (Ping timeout: 240 seconds)
[05:02:50] *** Quits: bontaq` (~user@ool-18e47f8d.dyn.optonline.net) (Ping timeout: 268 seconds)
[05:03:27] *** Quits: salpynx (~salpynx@121.73.84.248) (Ping timeout: 268 seconds)
[05:04:04] *** Quits: spirgel (spirgel@gateway/vpn/protonvpn/spirgel) (Ping timeout: 268 seconds)
[05:09:37] *** Quits: kanwar (~kanwar@45.251.106.233) (Ping timeout: 268 seconds)
[05:10:43] *** Quits: slice (~slice@user/slice) (Quit: zzz)
[05:15:36] *** Quits: jmw (~jmw@user/jmw) (Quit: jmw)
[05:16:34] *** Joins: spirgel (spirgel@gateway/vpn/protonvpn/spirgel)
[05:18:28] *** Quits: Lulu (~meow@suika.erkin.party) (Changing host)
[05:18:28] *** Joins: Lulu (~meow@vyos/developer/Lulu)
[05:21:05] *** Quits: spirgel (spirgel@gateway/vpn/protonvpn/spirgel) (Ping timeout: 244 seconds)
[05:24:56] *** Joins: slice (~slice@user/slice)
[05:28:39] *** Quits: whatsyourask (~whatsyour@user/whatsyourask) (Quit: whatsyourask)
[05:29:14] *** Quits: ur5us (~ur5us@2406:e002:6adb:4101:bf0a:c10b:6645:4acb) (Ping timeout: 252 seconds)
[05:30:10] *** Joins: tomato1 (~tomato@user/tomato)
[05:31:58] *** Quits: tomato (~tomato@user/tomato) (Ping timeout: 272 seconds)
[05:31:58] *** tomato1 is now known as tomato
[05:34:33] *** Quits: sbmsr (~pi@2600:1700:63d0:4830:7dbf:92d8:fd42:235d) (Ping timeout: 272 seconds)
[05:34:34] *** Joins: spirgel (spirgel@gateway/vpn/protonvpn/spirgel)
[05:36:42] *** Quits: h0m1 (~h0m1@user/h0m1) (Ping timeout: 240 seconds)
[05:38:14] *** Joins: anton (~anton@antonmcclure.com)
[05:38:25] *** Joins: jmw (~jmw@user/jmw)
[05:39:04] *** Joins: h0m1 (~h0m1@user/h0m1)
[05:39:18] *** Quits: spirgel (spirgel@gateway/vpn/protonvpn/spirgel) (Ping timeout: 264 seconds)
[05:39:58] *** Joins: kanwar (~kanwar@45.251.106.233)
[05:40:50] *** Quits: jmcantrell (~weechat@86.106.121.201) (Quit: WeeChat 3.2)
[05:44:55] *** Joins: ausserz (~ausserz@user/ausserz)
[05:45:19] *** Quits: plsm__ (~plsm@host86-186-0-141.range86-186.btcentralplus.com) (Ping timeout: 272 seconds)
[05:46:54] *** Quits: poww0wmus1c (~poww0wmus@gateway/tor-sasl/poww0wmus1c) (Quit: leaving)
[05:47:01] *** Joins: plsm (~plsm@user/plsm)
[05:47:56] *** Joins: jmcantrell (~weechat@86.106.121.201)
[05:47:59] *** Joins: blaklistd (~blaklistd@user/blaklistd)
[05:49:42] *** Quits: ausserz (~ausserz@user/ausserz) (Ping timeout: 268 seconds)
[05:50:26] *** Quits: jmcantrell (~weechat@86.106.121.201) (Client Quit)
[05:50:26] *** Quits: kanwar (~kanwar@45.251.106.233) (Ping timeout: 268 seconds)
[05:51:32] *** Joins: spirgel (spirgel@gateway/vpn/protonvpn/spirgel)
[05:56:29] *** Quits: spirgel (spirgel@gateway/vpn/protonvpn/spirgel) (Ping timeout: 268 seconds)
[05:58:27] *** Quits: kstatz12 (~karl.stat@2601:147:4300:6cc0:f72a:b1f7:4ccb:dcb2) (Ping timeout: 268 seconds)
[06:04:11] *** Joins: ur5us (~ur5us@2406:e002:6adb:4101:bf0a:c10b:6645:4acb)
[06:05:42] *** Quits: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca) (Ping timeout: 264 seconds)
[06:06:24] *** Joins: kanwar (~kanwar@45.251.106.233)
[06:06:51] *** Joins: salpynx (~salpynx@121.73.84.248)
[06:07:21] *** Joins: sbmsr (~pi@104-6-130-18.lightspeed.miamfl.sbcglobal.net)
[06:07:28] *** Joins: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca)
[06:12:17] *** Joins: spirgel (spirgel@gateway/vpn/protonvpn/spirgel)
[06:12:25] *** Quits: jmw (~jmw@user/jmw) (Quit: jmw)
[06:13:49] *** Joins: supersandro20008 (~supersand@i5C7570BA.versanet.de)
[06:13:50] *** Quits: supersandro2000 (~supersand@i5C74D193.versanet.de) (Killed (strontium.libera.chat (Nickname regained by services)))
[06:13:50] *** supersandro20008 is now known as supersandro2000
[06:16:57] *** Quits: spirgel (spirgel@gateway/vpn/protonvpn/spirgel) (Ping timeout: 268 seconds)
[06:20:46] *** Joins: jmcantrell (~weechat@86.106.121.201)
[06:22:35] *** Quits: jschpp (~jschpp@user/jschpp) (Ping timeout: 252 seconds)
[06:25:25] *** Joins: jschpp (~jschpp@user/jschpp)
[06:30:05] *** Joins: spirgel (spirgel@gateway/vpn/protonvpn/spirgel)
[06:34:43] *** Quits: spirgel (spirgel@gateway/vpn/protonvpn/spirgel) (Ping timeout: 268 seconds)
[06:37:53] *** Quits: sbmsr (~pi@104-6-130-18.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 272 seconds)
[06:47:10] *** Joins: martian67 (~martian67@user/martian67)
[06:48:38] *** Joins: discipulus (~discipulu@user/discipulus)
[06:55:17] *** Quits: travaldo (~travaldo@159.203.88.148) (Quit: travaldo)
[06:59:28] *** Joins: spirgel (spirgel@gateway/vpn/protonvpn/spirgel)
[07:01:19] *** Joins: winter (~quassel@user/winter)
[07:03:54] *** Quits: spirgel (spirgel@gateway/vpn/protonvpn/spirgel) (Ping timeout: 244 seconds)
[07:12:05] *** Quits: kanwar (~kanwar@45.251.106.233) (Ping timeout: 272 seconds)
[07:16:06] *** Joins: spirgel (spirgel@gateway/vpn/protonvpn/spirgel)
[07:16:36] *** Joins: MerchantOfVenice (~patrick@user/merchantofvenice)
[07:18:37] *** Quits: CHRiSNEW (~anon@2a04:5b82:2:100:0:c0ff:fea9:6d63) (Ping timeout: 272 seconds)
[07:18:46] *** Joins: CHRiSNEW (~anon@2a04:5b82:2:100:0:c0ff:fea9:6d63)
[07:20:53] *** Joins: kanwar (~kanwar@45.251.106.233)
[07:20:58] *** Quits: spirgel (spirgel@gateway/vpn/protonvpn/spirgel) (Ping timeout: 268 seconds)
[07:23:33] *** Quits: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net) (Ping timeout: 268 seconds)
[07:23:43] *** Quits: cdown_ (~cdown@163.114.131.1) (Ping timeout: 264 seconds)
[07:24:34] *** Quits: drobilla (~user@104-195-158-225.cpe.teksavvy.com) (Ping timeout: 244 seconds)
[07:26:34] *** Joins: sbmsr (~pi@104-6-130-18.lightspeed.miamfl.sbcglobal.net)
[07:34:40] *** Joins: spirgel (spirgel@gateway/vpn/protonvpn/spirgel)
[07:36:06] *** Joins: shredder (~shredder@user/shredder)
[07:37:19] *** Quits: CHRiSNEW (~anon@2a04:5b82:2:100:0:c0ff:fea9:6d63) (Killed (NickServ (GHOST command used by CHRiSNEW5)))
[07:37:26] *** Joins: CHRiSNEW5 (~anon@2a04:5b82:2:100:0:c0ff:fea9:6d63)
[07:39:02] *** Quits: spirgel (spirgel@gateway/vpn/protonvpn/spirgel) (Ping timeout: 244 seconds)
[07:43:27] *** Joins: CHRiSNEW (~anon@2a04:5b82:2:100:0:c0ff:fea9:6d63)
[07:43:53] *** Quits: CHRiSNEW5 (~anon@2a04:5b82:2:100:0:c0ff:fea9:6d63) (Read error: Connection reset by peer)
[07:57:54] *** Quits: sbmsr (~pi@104-6-130-18.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 240 seconds)
[07:59:12] *** Quits: shredder (~shredder@user/shredder) (Ping timeout: 268 seconds)
[08:01:35] *** Joins: spirgel (spirgel@gateway/vpn/protonvpn/spirgel)
[08:04:31] *** Quits: slice (~slice@user/slice) (Quit: zzz)
[08:04:52] <mockturtle> Modern Unix tools [linux unix] (atoponce) https://lobste.rs/s/yell0u
[08:04:54] *** Joins: alyx (~alyx@atheme/alyx)
[08:04:59] <alyx> h
[08:05:03] <alyx> does anyone have like
[08:05:09] <alyx> a userscript or whatever to dark mode lobsters
[08:05:29] *** Quits: CHRiSNEW (~anon@2a04:5b82:2:100:0:c0ff:fea9:6d63) (Ping timeout: 272 seconds)
[08:06:36] *** Quits: spirgel (spirgel@gateway/vpn/protonvpn/spirgel) (Ping timeout: 268 seconds)
[08:08:00] *** Joins: CHRiSNEW (~anon@2a04:5b82:2:100:0:c0ff:fea9:6d63)
[08:10:03] <bandali> hey, i see a bunch on https://lobste.rs/about#trivia but i haven't tried any of them myself
[08:10:03] <mockturtle> [ About | Lobsters ] - lobste.rs
[08:10:25] <bandali> also darkreader was pretty cool when i last used it, might wanna give that a shot too
[08:12:12] *** Joins: slice (~slice@user/slice)
[08:13:23] <alyx> ..I should have checked about lol. I tried remembering where people mentioned during the last uh.. bi-quarterly dark mode post, but didn't brain enough to find it. Thank you ^^
[08:14:38] <bandali> hehe; cheers :)
[08:18:05] *** Joins: spirgel (spirgel@gateway/vpn/protonvpn/spirgel)
[08:19:13] <mockturtle> Pwning Home Router - Linksys WRT54G [security reversing] (calvin) https://lobste.rs/s/c9994a
[08:19:39] <sam_> cb: YES
[08:19:45] <sam_> THIS IS GOOD CONTENT
[08:22:38] *** Quits: spirgel (spirgel@gateway/vpn/protonvpn/spirgel) (Ping timeout: 268 seconds)
[08:25:23] *** Joins: missogra (~missogra@dynamic-077-010-159-105.77.10.pool.telefonica.de)
[08:26:59] *** Quits: missogra (~missogra@dynamic-077-010-159-105.77.10.pool.telefonica.de) (Remote host closed the connection)
[08:31:49] *** Joins: missogra (~missogra@dynamic-077-010-159-105.77.10.pool.telefonica.de)
[08:36:21] *** Joins: sbmsr (~pi@2600:1700:63d0:4830:7dbf:92d8:fd42:235d)
[08:41:59] <mockturtle> WebSockets for fun and profit [networking web] (seasidedrum) https://lobste.rs/s/kdcyi2
[08:46:23] *** Joins: spirgel (spirgel@gateway/vpn/protonvpn/spirgel)
[08:51:18] *** Quits: spirgel (spirgel@gateway/vpn/protonvpn/spirgel) (Ping timeout: 264 seconds)
[09:02:46] *** Joins: spirgel (spirgel@gateway/vpn/protonvpn/spirgel)
[09:04:45] *** Quits: slice (~slice@user/slice) (Quit: zzz)
[09:05:01] *** Quits: CHRiSNEW (~anon@2a04:5b82:2:100:0:c0ff:fea9:6d63) (Ping timeout: 272 seconds)
[09:05:47] *** Joins: CHRiSNEW (~anon@2a04:5b82:2:100:0:c0ff:fea9:6d63)
[09:07:06] *** Quits: spirgel (spirgel@gateway/vpn/protonvpn/spirgel) (Ping timeout: 240 seconds)
[09:10:20] *** Quits: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca) (Ping timeout: 252 seconds)
[09:12:01] *** Quits: arcatech (~arcatech@user/arcatech) (Remote host closed the connection)
[09:12:42] *** Joins: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca)
[09:14:44] *** Quits: sbmsr (~pi@2600:1700:63d0:4830:7dbf:92d8:fd42:235d) (Ping timeout: 252 seconds)
[09:18:40] *** Joins: spirgel (spirgel@gateway/vpn/protonvpn/spirgel)
[09:22:53] *** Quits: spirgel (spirgel@gateway/vpn/protonvpn/spirgel) (Ping timeout: 244 seconds)
[09:24:41] <mockturtle> Explaining Code using ASCII Art (2019) [programming] (bshanks) https://lobste.rs/s/8oxl0x
[09:27:46] <mockturtle> ASCIIFlow [programming] (bshanks) https://lobste.rs/s/qfgrmz
[09:29:47] *** Joins: jmw (~jmw@user/jmw)
[09:30:21] *** Quits: CHRiSNEW (~anon@2a04:5b82:2:100:0:c0ff:fea9:6d63) (Ping timeout: 272 seconds)
[09:33:11] *** Joins: CHRiSNEW (~anon@2a04:5b82:2:100:0:c0ff:fea9:6d63)
[09:36:13] *** Joins: spirgel (spirgel@gateway/vpn/protonvpn/spirgel)
[09:37:50] *** Quits: jkl (~jkl@2600:1700:2420:6d10::3f1) (Ping timeout: 252 seconds)
[09:40:18] *** Quits: spirgel (spirgel@gateway/vpn/protonvpn/spirgel) (Ping timeout: 240 seconds)
[09:40:29] *** Joins: sbmsr (~pi@104-6-130-18.lightspeed.miamfl.sbcglobal.net)
[09:41:29] *** Joins: dongbei (~dnprog8@c-71-198-117-25.hsd1.ca.comcast.net)
[09:41:45] <dongbei> hey i need some advice.
[09:42:12] <dongbei> i'm going to be open sourcing my code in just a day or so and i'm wondering whether i should let people run their own server
[09:42:39] <dongbei> anyone old guys done anything like that before?
[09:44:43] *** Joins: jkl (~jkl@2600:1700:2420:6d10::3f1)
[09:45:24] *** Quits: jmw (~jmw@user/jmw) (Quit: jmw)
[09:50:09] *** Joins: jmw (~jmw@user/jmw)
[09:50:13] *** Joins: slice (~slice@user/slice)
[09:51:03] *** Quits: jmw (~jmw@user/jmw) (Client Quit)
[09:52:22] *** Quits: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3) (Quit: The Lounge - https://thelounge.chat)
[09:52:37] *** Joins: badtuple (~badtuple@185.207.164.170)
[09:53:03] *** Joins: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3)
[09:54:29] *** Joins: jmw (~jmw@user/jmw)
[09:54:57] *** Joins: dongbei_ (~dnprog8@193.36.225.20)
[09:56:42] *** Quits: jmw (~jmw@user/jmw) (Client Quit)
[09:56:59] *** Quits: dongbei (~dnprog8@c-71-198-117-25.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[10:00:19] *** Joins: mahmutov (~mahmutov@176.30.253.24)
[10:00:28] *** Joins: szeliga (~szeliga@59.88.24.185)
[10:00:28] <mockturtle> Psycopg 2.9 released — Psycopg [python release databases] (pauloxnet) https://lobste.rs/s/ozzjbn
[10:01:32] * badtuple walks in and looks around the new server
[10:01:45] <badtuple> Nice place. Quite the upgrade from Freenode!
[10:04:01] *** Joins: shredder (~user@user/shredder)
[10:04:43] <gerikson> haha
[10:05:09] *** Joins: spirgel (spirgel@gateway/vpn/protonvpn/spirgel)
[10:05:54] <szeliga> Reading the article from a volunteer of Racket community got me thinking. Which open-source software communities would #lobsters say are the most healthy and inclusive and what can we learn from their style of operation?
[10:09:56] *** Quits: spirgel (spirgel@gateway/vpn/protonvpn/spirgel) (Ping timeout: 268 seconds)
[10:10:00] <szeliga> Is it a fact that communities which that are built upon a rigid and unsheakable hierarchy are bound to devolve into structures where such abuse and mistreatment becomes another fact of nature?
[10:10:14] <szeliga> s/which that/which/
[10:10:37] <alyx> imo generally communities where certain people are "too big to lose" have a much higher risk of issues
[10:11:08] <badtuple> People are messy. Groups of people even more so. I'm not sure there are strict "facts" we can derive at all.
[10:11:19] <alyx> there's a chance those "too big to lose" people could be fine too but
[10:11:40] <alyx> if you /can't/ get rid of certain people when they overstep the lines.. well then you've just gotta deal with it
[10:11:42] *** Quits: jerome_ (~jerome@47-208-96-45.erkacmtk01.res.dyn.suddenlink.net) (Ping timeout: 264 seconds)
[10:12:05] <szeliga> alyx: That is a side-effect of a rigid hierarchy. I don't think BDFL is logically coherent.
[10:12:29] *** Quits: ur5us (~ur5us@2406:e002:6adb:4101:bf0a:c10b:6645:4acb) (Ping timeout: 252 seconds)
[10:14:05] *** Quits: szeliga (~szeliga@59.88.24.185) (Quit: Lost terminal)
[10:14:59] *** Joins: szeliga (~irfan@59.88.24.185)
[10:15:15] *** Quits: szeliga (~irfan@59.88.24.185) (Client Quit)
[10:15:33] <dongbei_> you've heard the saying, "it's good to be the king"?
[10:15:42] <dongbei_> everything is alright from the king's perspective.
[10:15:54] <dongbei_> nothing really needs to change.
[10:16:06] *** Joins: szeliga (~szeliga@59.88.24.185)
[10:22:41] *** Joins: spirgel (spirgel@gateway/vpn/protonvpn/spirgel)
[10:23:06] *** Quits: sbmsr (~pi@104-6-130-18.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 264 seconds)
[10:25:01] <jmcantrell> szeliga: you mean the term BDFL, itself?
[10:25:47] <jmcantrell> i always thought it was kind of tongue-in-cheek
[10:26:15] <dongbei_> benevolent is actually supposed to mean something in that acronym though.
[10:26:26] *** Quits: missogra (~missogra@dynamic-077-010-159-105.77.10.pool.telefonica.de) (Ping timeout: 244 seconds)
[10:27:05] *** Quits: chenghiz_ (uid349735@id-349735.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[10:27:29] <szeliga> jmcantrell: I suppose so. But it represents the attitude of the contributors in many communities. Putting too much faith in the charity of a few could be harmful in the long run.
[10:29:05] *** Joins: dmathieu (~textual@pop.92-184-110-96.mobile.abo.orange.fr)
[10:30:44] *** Quits: shredder (~user@user/shredder) (Quit: ZNC - https://znc.in)
[10:31:04] *** Joins: shredder (~user@user/shredder)
[10:32:46] *** Quits: shredder (~user@user/shredder) (Client Quit)
[10:33:15] *** Joins: shredder (~user@user/shredder)
[10:33:33] <jmcantrell> probably
[10:33:59] <szeliga> jmcantrell: Most of these problems boil down to inaction of people when such problems are first encountered. It could be understandable that many of the students, a group selected for their submission to authority, would bow down and keep silent to the abuses of a professor but the independent contributors of the community should have spoken out against such behaviour long ago. While this was not really
[10:34:05] <szeliga> a matter of grave abuse, I see similar pattern in worse cases.
[10:34:46] *** Quits: shredder (~user@user/shredder) (Client Quit)
[10:34:49] <badtuple> szeliga: I think it can be difficult for projects to not end up with some main people in charge because projects basically have to start that way in their infancy.
[10:35:33] *** Joins: shredder (~user@user/shredder)
[10:35:43] <jmcantrell> right
[10:35:49] <badtuple> Not many projects have a bunch of contributors up front, or even ever. If you have 2-4 people contributing heavily, it seems like it'd be difficult to grow a project in the way you're describing.
[10:36:00] <jmcantrell> obviously if someone is being abusive they should be called out on it
[10:36:18] *** Quits: dmathieu (~textual@pop.92-184-110-96.mobile.abo.orange.fr) (Ping timeout: 264 seconds)
[10:36:25] <badtuple> ^ totally agreed on that.
[10:37:29] *** Quits: shredder (~user@user/shredder) (Client Quit)
[10:37:46] <szeliga> jmcantrell: I think the problem is not there being many contributors in the start but the way these people are treated even when the community has grown. I don't think anyone should be untouchable as far as a community is concerned.
[10:38:05] *** Joins: shredder (~user@user/shredder)
[10:38:45] <szeliga> jmcantrell: You would agree that once the community grows, the project no longer *depends* on the person who started it but rather he/she depends on the community for the project to move forward.
[10:39:24] *** Quits: dongbei_ (~dnprog8@193.36.225.20) (Quit: leaving)
[10:39:24] <jmcantrell> sure. i guess it's more complicated in reality though
[10:39:48] <jmcantrell> szeliga: that's a possibility, yes
[10:40:00] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[10:40:09] *** Quits: mahmutov (~mahmutov@176.30.253.24) (Ping timeout: 268 seconds)
[10:40:20] *** Joins: dongbei (~dnprog8@193.36.225.20)
[10:40:57] *** Joins: voltage_ (~voltage@user/voltage)
[10:41:06] *** Quits: spirgel (spirgel@gateway/vpn/protonvpn/spirgel) (Ping timeout: 264 seconds)
[10:41:07] <szeliga> jmcantrell: You don't think there is a solution to the problem, do you?
[10:41:42] <dongbei> the problem of leaders from the beginning leading in the middle/end?
[10:42:00] <jmcantrell> i'm sure it's probably tough from the perspective of other large contributors who want the project to be as healthy as possible and don't want to lose someone who carries a lot of relevant knowledge
[10:42:19] <dongbei> why not just fork?
[10:42:25] <badtuple> There are ways to avoid and protect against abuses, but I don't think it constitutes a "solution". It requires constant course correction and vigilence.
[10:42:55] <mockturtle> Execute Docker Containers as QEMU MicroVMs [devops virtualization] (davidmytton) https://lobste.rs/s/3cojis
[10:43:03] *** Joins: spirgel (spirgel@gateway/vpn/protonvpn/spirgel)
[10:43:05] *** Quits: shredder (~user@user/shredder) (Quit: ZNC - https://znc.in)
[10:43:38] <jmcantrell> szeliga: i have no idea. i don't think people should be silent about it though
[10:43:42] <dongbei> if someone is a jerk you could just split off and create a safe space for you and others who feel the same.  pretty sure licenses allow this kind of thing.
[10:44:28] <jmcantrell> dongbei: sure, technically, but it's not always that simple
[10:44:28] *** Quits: l554 (~l554@user/l554) (Ping timeout: 268 seconds)
[10:45:30] <szeliga> jmcantrell: The contributor who is indispensable because he is too intelligent or a visionary would understand in time that visions and genius do not come packed with a liberal license to indulge in petty or grave abuses. If he/she does not realise this, it could always be made difficult for him to work but that would need the support of the whole community.
[10:46:27] *** Joins: shredder (~user@user/shredder)
[10:46:47] <jmcantrell> i don't think any amount of vision or genius gives a person the right to be abusive at all
[10:48:00] <szeliga> jmcantrell: That is not a fact which has widespread acceptance. While most would agree this to be true in theory, the same most would cut their tongue before speaking up because they know they would be silenced or worse marginalised.
[10:48:00] <dongbei> name some open source projects with large followings that have very nice people leading them aside from sqlite
[10:48:34] <dongbei> it would be nice to name them and post them because we only hear about badguys
[10:48:51] <szeliga> dongbei: Splitting is always a good threat to such *leaders*. The moment they see that they need the community rather than the other way around, they will come around.
[10:49:07] *** Quits: kanwar (~kanwar@45.251.106.233) (Remote host closed the connection)
[10:49:34] *** Joins: kanwar (~kanwar@45.251.106.233)
[10:49:35] <jmcantrell> statements like "it could always be made difficult for him to work" kind of make me cringe though. if there are enough people that support that person's work, then why shouldn't they be allowed to exist? as dongbei pointed out, if there are enough people who are not masochistic, then they'll fork. problem solved :p
[10:50:00] *** Joins: sbmsr (~pi@2600:1700:63d0:4830:7dbf:92d8:fd42:235d)
[10:50:44] *** Quits: kanwar (~kanwar@45.251.106.233) (Read error: Connection reset by peer)
[10:50:48] *** Joins: alpernebbi (~quassel@user/alpernebbi)
[10:50:49] *** Joins: kanwar_ (~kanwar@45.251.106.233)
[10:51:02] <szeliga> jmcantrell: *Allowed to exist*? Nobody is forcing them to retire, just making them aware that the people of the community would not tolerate such behaviour. Right now, no such mechanism exists except for some rants and consoling comments in the forums.
[10:51:27] <szeliga> dongbei: I don't think such communities exist.
[10:52:14] <bsandro> serenityos :P
[10:52:17] *** Quits: shredder (~user@user/shredder) (Quit: ZNC - https://znc.in)
[10:53:39] <badtuple> szeliga: I think you're oversimplifying? If it needs to come from the community and not explicit groups of people who hold excess power, then I don't know what you want that to look like other than "some rants and consoling comments in the forums".
[10:53:52] <jmcantrell> yes, but how do you not tolerate it? what is done to not tolerate it?
[10:54:18] <badtuple> Discipline is hard in anarchist situations. Not impossible, but it requires alot of things to align democratically.
[10:55:57] <szeliga> badtuple: I don't think I am oversimplifying. The medium would be the internet, sure. But such *rants* would not be coming with the news of an important contributor quitting, it would be coming with threats of a significant portion of the community quitting/forking which would mean that the BDFL would realise his position is not as strong as he thinks. But I guess that is too much to hope for right now.
[10:57:10] <szeliga> badtuple: It does not require discipline. It just requires escalated levels of hubris from each and every maintainer of the community.
[10:57:37] <badtuple> szeliga: Oh, true. But we don't want to limit the quitting person's rights either. It seems like it wasn't brought up to the community and they were making a personal decision since the core team didn't react.
[10:59:58] *** Joins: tex (~super@user/dix)
[11:00:00] <szeliga> szeliga: He could quit anytime they want. Nobody would force him to stay. But as you would know, many such people quit because they tried to raise their concerns and were either ignored or ridiculed in the community.
[11:00:02] *** Quits: salpynx (~salpynx@121.73.84.248) (Quit: Connection closed)
[11:00:19] <szeliga> s/anytime they want/anytime he wants/
[11:00:51] <szeliga> badtuple: I am sorry I misread it.
[11:01:18] <szeliga> badtuple: I concur.
[11:01:56] <badtuple> np. These things are really hard to talk about in the abstract since each situation has very different people and events. I don't envy the people who spend most of their time thinking about these things. I appreciate it though :)
[11:02:03] <szeliga> bsandro: Why is that funny? Am I missing some context?
[11:03:25] *** Quits: sbmsr (~pi@2600:1700:63d0:4830:7dbf:92d8:fd42:235d) (Read error: Connection reset by peer)
[11:04:25] <jmcantrell> all of this is applicable to larger contexts, any that involve people holding power, and you see how well that's been solved :)
[11:04:41] <szeliga> badtuple: This keeps coming again and again in forums like lobste.rs and I think a ruthless individualism in combination with a rational strategy to achieve the ends would produce a healthy community which doesn't have to deal with such issues again and again.
[11:05:15] <jmcantrell> what ends?
[11:05:47] <bsandro> szeliga: why would you think it is "funny"?
[11:05:57] * imode eyes the backlog.
[11:06:02] <szeliga> bsandro: Well, you supplied the emoji.
[11:06:28] <imode> what's the current conversation, eh.
[11:07:01] <szeliga> jmcantrell: Were you speaking in earnest when applying it to larger context or just mocking?
[11:07:07] <dongbei> people talking about how everyone at the top of the power pyramid seems to abuse such power and what the little guys and gals can do about it.
[11:07:10] <badtuple> imode: community management and protecting against abuses, specifically in the case of centralized power in a project. Prompted by the racket post.
[11:07:28] <dongbei> i say form your own country but that's just me.
[11:07:33] <bsandro> szeliga: that's not emoji, but emoticon.
[11:07:41] <szeliga> bsandro: I see.
[11:07:53] *** Joins: lelu (~lelu@host81-129-252-0.range81-129.btcentralplus.com)
[11:07:56] <badtuple> imode: We're making as much headway as the rest of humanity has over the last few millenia ;)
[11:08:21] <jmcantrell> szeliga: i was not mocking. i'm serious. all i meant was that what's being discussed is difficult to solve, and people have been trying to for a long time.
[11:08:47] *** Joins: shredder (~user@user/shredder)
[11:08:52] <bsandro> szeliga: one would think that by 2021 "tech-savvy" people would understand 40 years old concepts of emoticon meanings
[11:09:05] <badtuple> You know what I want (changing topic) a generic serialization format (s-exprs most likely) that maps 1:1 w/ a languages types and comes with a repl but NOT an evaluation engine.
[11:09:25] <badtuple> So I can sort of plug and play it into tooling and debuggers that are custom for a project without re-shaving that yak.
[11:09:36] <szeliga> bsandro: Isn't that the tongue out emoji?
[11:09:36] <dongbei> i don't really think it's difficult to solve.  it just takes chutzpah
[11:10:05] <dongbei> "are you a bad enough dude to save the community" kinds of chutzpah
[11:10:22] <jmcantrell> oh is that all? ha
[11:11:01] <bsandro> szeliga: it is. it doesn't mean "funny" though strictly speaking. Anyway, it was just an example of a relatively big project with a nice leadership, just from top of my head (or what's the saying)
[11:11:13] <badtuple> dongbei: If it's an individual, then that's a regime change. If it's chutzpah from everyone in the community, then good luck forcing everyone to be active and wanting to get involved in drama for the community. This stuff is hard.
[11:11:47] <dongbei> badtuple: changing the individual from a dickish dictator for life to an actual benevolent dictator for life has meaning.
[11:12:09] * jmcantrell scratches his head
[11:12:16] <mockturtle> What is aspect-oriented programming? [programming] (kqr) https://lobste.rs/s/3rjk8r
[11:12:17] <gerikson> "dictator" in FLOSS is a tongue-in-cheek term
[11:12:29] <badtuple> dongbei: Those are not concrete descriptions of people, they are opinions. Two people can see the same person as either/or.
[11:12:31] <gerikson> or rather it's an original term from the Roman republic I guess
[11:12:34] <jmcantrell> gerikson: thank you
[11:12:52] <gerikson> it just means 1 person has the ultimate say in decisions
[11:12:59] <gerikson> mostly about what stuff should be in the code
[11:13:14] <dongbei> someone can be a firm leader, guiding a community into the future without demeaning people.
[11:13:18] <badtuple> I think I'm gonna try to build out that repl/serialization format as a rust crate. Surprised I can't find one that doesn't have a whole lisp attached.
[11:13:32] <gerikson> tbh when it comes to Linux, Linus' role is easier than Guido van Rossum's was
[11:13:39] <dongbei> it's not hard, it's just that they rarely start projects.
[11:13:45] <gerikson> becasue the kernel is quite circumscribed
[11:13:58] <bsandro> szeliga: oh, I just realized, maybe your client replaces text emoticons with unicode emoji?
[11:14:01] <gerikson> compared to a language ecosystem
[11:14:21] <gerikson> bsandro szeliga let's try, this is a text emoji smile :)
[11:14:24] <gerikson> frown :(
[11:14:28] <dongbei> :D
[11:14:29] <gerikson> wink ;)
[11:14:32] <dongbei> D:
[11:15:03] <szeliga> bsandro: I am using a text interface but that emoji probably means that you *don't* think serenity OS is a good community but as just posting it here because it's funny in this context.
[11:15:06] <dongbei> ¯\_(ツ)_/¯
[11:15:39] <bsandro> szeliga: you misinterpreted the whole message then (:
[11:16:11] <szeliga> bsandro: What was the meaning of the emoji then?
[11:16:12] <bsandro> also call me a stick-in-the-ass but that was not emoji, that was an emoticon
[11:16:39] *** Quits: lelu (~lelu@host81-129-252-0.range81-129.btcentralplus.com) (Remote host closed the connection)
[11:17:36] <badtuple> gerikson: such conservative emoji. We need a client that can render the kirby dance (>'-')> <('-'<) ^('-')^ v('-')v(>'-')> (^-^)
[11:18:07] <bsandro> serenityos grows bigger every day but strictly speaking it is a 'recreational' project, so might not be on par with 'serious' stuff attitude-wise. Hence the :P emoticon.
[11:18:35] <szeliga> bsandro: I see you were using the ":P" for the "large" part and not the "healthy" part.
[11:18:39] <szeliga> bsandro: I get it now.
[11:18:53] <szeliga> bsandro: It's large enough, I suppose.
[11:19:03] <gerikson> bsandro: yeah sorry ;) I forgot the old word :D
[11:19:10] <dongbei> does anyone know if there's an emoticon only search engine?
[11:19:27] <dongbei> like, all text that's not emoji/or emoticon is stripped?
[11:19:48] <bsandro> dongbei: isn't it just a regular search engine now for modern internet? /s
[11:19:56] <dongbei> yah but with more steps
[11:20:43] <dongbei> i'm just wondering if i should waste time to build something that will waste other peope's time
[11:21:02] <szeliga> dongbei: What is it?
[11:21:17] <dongbei> huh?
[11:21:42] <szeliga> dongbei: What are you trying to make?
[11:21:49] *** Joins: milosz (~milosz@user/milosz)
[11:21:53] <bsandro> dongbei: if the process itself is fun then I don't see why not
[11:22:15] <dongbei> just a stupid search engine for stupid queries using emoji for real queries
[11:22:23] <dongbei> real *results
[11:22:36] *** Joins: bauruine (~stefan@2001:8e0:146d:dead:64ba:ab96:7c19:dbc3)
[11:22:46] <szeliga> dongbei: It's not stupid if you like to build it.
[11:23:12] <bsandro> inb4 your engine outspielens google because generation Y wants sparkles and memes more than actual text :)
[11:23:18] <dongbei> you guys are too nice.  you know that?  I would think it's stupid before during and after i build it :D
[11:23:44] <bsandro> that never stopped me before :D
[11:23:52] <szeliga> dongbei: It might be stupid from the user point of view but that is hardly the point of view you should be concerned about.
[11:24:06] <dongbei> ah stupidsearch.com is taken
[11:24:28] <dongbei> gonna find an emoji domain
[11:24:50] <bsandro> googlemoji.com
[11:25:24] <szeliga> dongbei: How about a text-editor which uses emoji and gifs to chat. No text.
[11:25:50] <szeliga> s/text-editor/chat app/
[11:26:05] <dongbei> it was done in 2014
[11:26:30] <dongbei> search engine is unique though.
[11:26:35] <dongbei> now i have a weekend project.
[11:26:40] <szeliga> dongbei: Yes. The company shut down since then. It involved only emoji but not gif if I remember.
[11:26:45] <dongbei> ooh
[11:27:37] <bsandro> humanity goes back to its roots with conversations that heavily utilize pictograms
[11:27:58] <bsandro> coming soon: devolving into homo erectus
[11:28:19] *** Joins: dendru (uid503630@id-503630.brockwell.irccloud.com)
[11:29:10] <badtuple> (text + pictures) > just one or the other! Add in interactivity and baby you got a stew going :D
[11:29:27] * badtuple has been watching all of Bret Victor's stuff, incase it wasn't obvious
[11:30:15] <bsandro> yeah it has its perks when used moderately
[11:30:41] <bsandro> but looking at the majority of discord channels I'm in - nop, doesn't work that way
[11:30:42] <szeliga> badtuple: You type in some text and the engine renders it as a gif which encodes your gestures too. But that would mean having a database of gifs.
[11:30:46] *** Quits: kanwar_ (~kanwar@45.251.106.233) (Remote host closed the connection)
[11:31:19] <szeliga> Never mind. Goodbye!
[11:31:33] *** Parts: szeliga (~szeliga@59.88.24.185) ()
[11:31:48] <bsandro> remember TempleOS with running and blinking text everywhere? that's how i see discord where every letter is being accompanied by 65536 gif reactions
[11:32:41] <badtuple> your mind's gonna be blown when you realize the combination of gif reactions encodes a secret message.
[11:33:34] <bsandro> hm yeah, maybe they use steganography actually and I'm just too dumb to realize that
[11:34:13] *** Joins: soczol (~soczol@user/soczol)
[11:34:16] <badtuple> Not dumb. It's just people from the future trying to communicate by influencing the random rolls of dice that Giphy does, and we haven't figured that out yet.
[11:34:45] * badtuple gestures towards his wall covered in thumbtacks, newspaper clippings, and red string.
[11:34:47] <bsandro> el psy kongroo
[11:36:06] <jmcantrell> popcorn.gif
[11:36:40] *** Quits: strugee (~strugee@strugee.net) (Quit: ZNC - http://znc.in)
[11:38:10] *** Joins: riv (~river@tilde.team/user/river)
[11:39:29] <bsandro> it bugs me that firebase crashlytics and google play console show different crash % numbers
[11:40:36] <bsandro> maybe someone managed to "even" them somehow?
[11:41:58] *** Quits: supersandro2000 (~supersand@i5C7570BA.versanet.de) (Quit: Ping timeout (120 seconds))
[11:42:37] *** Joins: supersandro2000 (~supersand@i5C7570BA.versanet.de)
[11:43:56] *** Quits: alpernebbi (~quassel@user/alpernebbi) (Ping timeout: 244 seconds)
[11:45:36] *** Joins: strugee (~strugee@strugee.net)
[11:51:48] <mockturtle> How JavaScript Restrictor prevents other parties from sniffing on your local applications? [javascript browsers security privacy] (taal) https://lobste.rs/s/pgx7xg
[11:57:52] *** Quits: spirgel (spirgel@gateway/vpn/protonvpn/spirgel) ()
[11:58:44] *** Joins: mercerist (~mercerist@user/mercerist)
[12:06:27] *** Joins: dmathieu (~textual@laubervilliers-659-1-148-137.w92-154.abo.wanadoo.fr)
[12:09:39] *** Quits: dongbei (~dnprog8@193.36.225.20) (Quit: leaving)
[12:11:13] *** Quits: hub (~hub@user/hub) (Quit: ZNC 1.8.2 - https://znc.in)
[12:11:38] *** Joins: hub (~hub@user/hub)
[12:12:48] <iDrougge> bsandro: El psy kongroo.
[12:16:54] *** Quits: slice (~slice@user/slice) (Quit: zzz)
[12:21:03] *** Quits: riv (~river@tilde.team/user/river) (Quit: Leaving)
[12:22:25] *** Joins: epilys (~epilys@snf-804220.vm.okeanos.grnet.gr)
[12:32:08] *** Quits: ac5tin (~ac5tin@user/ac5tin) (Quit: WeeChat 3.1)
[12:32:35] *** Joins: ac5tin (~ac5tin@user/ac5tin)
[12:34:34] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 244 seconds)
[12:34:40] *** Joins: __jmcantrell__ (~weechat@86.106.121.162)
[12:37:40] *** Quits: jmcantrell (~weechat@86.106.121.201) (Ping timeout: 244 seconds)
[12:39:45] *** __jmcantrell__ is now known as jmcantrell
[12:42:31] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[12:42:31] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[12:42:31] *** Joins: JordiGH (~jordi@user/jordigh)
[12:43:41] *** Quits: shredder (~user@user/shredder) (Quit: quitting)
[12:43:59] *** Joins: shredder (~user@user/shredder)
[12:44:52] *** Quits: MerchantOfVenice (~patrick@user/merchantofvenice) (Quit: Konversation terminated!)
[12:46:06] *** Joins: szeliga (~szeliga@59.88.24.185)
[12:47:35] *** Quits: supersandro2000 (~supersand@i5C7570BA.versanet.de) (Quit: Ping timeout (120 seconds))
[12:48:31] *** Joins: supersandro2000 (~supersand@i5C7570BA.versanet.de)
[12:52:04] *** Quits: supersandro2000 (~supersand@i5C7570BA.versanet.de) (Client Quit)
[12:53:40] *** Joins: reneeontheweb (~reneeonth@78-68-254-227-no236.tbcn.telia.com)
[12:54:32] *** Joins: supersandro2000 (~supersand@i5C7570BA.versanet.de)
[13:01:32] *** Quits: szeliga (~szeliga@59.88.24.185) (Quit: leaving)
[13:06:01] *** Joins: dgold (~dgold@ascraeus.org)
[13:10:33] *** Joins: avane_ (~avane@user/avane)
[13:10:37] *** Quits: avane (~avane@user/avane) (Ping timeout: 268 seconds)
[13:19:41] *** Quits: dmathieu (~textual@laubervilliers-659-1-148-137.w92-154.abo.wanadoo.fr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:20:38] *** Joins: Guest201 (~Guest201@92.98.147.136)
[13:22:55] *** Joins: kanwar (~kanwar@45.251.106.233)
[13:23:01] *** Joins: DenisDru[m] (~dendrumat@2001:470:69fc:105::2f9b)
[13:24:24] *** Quits: kanwar (~kanwar@45.251.106.233) (Remote host closed the connection)
[13:24:57] *** Joins: kanwar (~kanwar@47.57.239.142)
[13:25:00] *** Joins: dmathieu (~textual@laubervilliers-659-1-148-137.w92-154.abo.wanadoo.fr)
[13:25:47] *** Quits: nur (~hussein@175.136.135.216) (Quit: Leaving)
[13:29:52] *** Quits: kanwar (~kanwar@47.57.239.142) (Remote host closed the connection)
[13:30:15] *** Joins: kanwar (~kanwar@118.194.239.111)
[13:31:30] *** Joins: kanwar_ (~kanwar@45.251.106.233)
[13:34:55] *** Quits: kanwar (~kanwar@118.194.239.111) (Remote host closed the connection)
[13:39:30] *** Joins: harrigan- (~harrigan@ptr-93-89-242-202.ip.airwire.ie)
[13:41:42] *** Quits: harrigan (~harrigan@ptr-93-89-242-235.ip.airwire.ie) (Ping timeout: 264 seconds)
[13:41:42] *** harrigan- is now known as harrigan
[13:55:53] *** Joins: gareppa (~gareppa@user/gareppa)
[14:07:58] *** Quits: gareppa (~gareppa@user/gareppa) (Quit: Leaving)
[14:09:07] *** Quits: imode (~imode@user/imode) (Ping timeout: 244 seconds)
[14:11:04] *** Quits: kinduff0 (~kinduff@user/kinduff) (Quit: The Lounge - https://thelounge.chat)
[14:11:21] *** Joins: kinduff0 (~kinduff@user/kinduff)
[14:12:12] *** Quits: kinduff0 (~kinduff@user/kinduff) (Client Quit)
[14:14:43] *** Quits: voltage_ (~voltage@user/voltage) (Quit: Leaving)
[14:14:47] *** Quits: Guest201 (~Guest201@92.98.147.136) (Quit: Client closed)
[14:17:29] *** Joins: masoudd (~masoudd@user/masoudd)
[14:17:37] *** Joins: voltage_ (voltage@user/voltage)
[14:27:34] *** Joins: gareppa (~gareppa@user/gareppa)
[14:28:30] *** Quits: bauruine (~stefan@2001:8e0:146d:dead:64ba:ab96:7c19:dbc3) (Remote host closed the connection)
[14:30:25] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[14:34:48] *** Joins: midgard (~weechat@user/midgard)
[14:37:42] *** Quits: dmathieu (~textual@laubervilliers-659-1-148-137.w92-154.abo.wanadoo.fr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:40:47] *** Quits: jazz (~jazz@user/jazz) (Quit: Ping timeout (120 seconds))
[14:41:07] *** Joins: jazz (~jazz@user/jazz)
[14:42:12] <mockturtle> How We Hacked a TP-Link Router (2019) [video security] (jstoja) https://lobste.rs/s/7qmvm6
[14:44:11] *** Quits: jmcantrell (~weechat@86.106.121.162) (Ping timeout: 252 seconds)
[14:47:56] *** Quits: midgard (~weechat@user/midgard) (Quit: midgard)
[14:49:59] <_0x5fc3> bsandro, DNS blockers?
[14:50:29] <_0x5fc3> My pihole blocks an ton of crashlytics
[14:52:19] <iDrougge> Aren't crashlytics usually benign?
[14:52:32] <iDrougge> Mind you, since Google bought it, you never know what it's being used for by them.
[14:52:58] *** Joins: dmathieu (~textual@laubervilliers-659-1-148-137.w92-154.abo.wanadoo.fr)
[14:53:36] <bsandro> _0x5fc3: might be, but doubt that large amount of mobile players utilize that stuff
[14:59:26] <_0x5fc3> iDrougge, i have it in a few of my lists
[15:00:02] *** Quits: dmathieu (~textual@laubervilliers-659-1-148-137.w92-154.abo.wanadoo.fr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:00:05] <_0x5fc3> bsandro, its been on a rise though.
[15:01:55] *** Joins: varjag (~user@188.95.247.249)
[15:05:47] *** Quits: shredder (~user@user/shredder) (Quit: quitting)
[15:06:06] *** Joins: shredder (~user@user/shredder)
[15:07:57] *** Joins: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net)
[15:21:42] <bsandro> ms deb repos died and all the containers depending on it died too
[15:24:27] *** Quits: kyshoc (~kyshoc@user/kyshoc) (Read error: Connection reset by peer)
[15:24:42] *** Quits: dendru (uid503630@id-503630.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[15:25:39] *** Quits: kanwar_ (~kanwar@45.251.106.233) (Remote host closed the connection)
[15:26:00] *** Joins: Haydos (uid356478@id-356478.tooting.irccloud.com)
[15:27:08] *** Quits: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net) (Ping timeout: 244 seconds)
[15:28:36] *** Joins: nur (~hussein@175.136.135.216)
[15:33:29] <fedorafan> jo bros
[15:34:11] *** Quits: supersandro2000 (~supersand@i5C7570BA.versanet.de) (Quit: Ping timeout (120 seconds))
[15:34:23] *** Joins: supersandro2000 (~supersand@i5C7570BA.versanet.de)
[15:39:03] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[15:39:24] *** Joins: voltage_ (voltage@user/voltage)
[15:43:10] *** Joins: bontaq` (~user@ool-18e47f8d.dyn.optonline.net)
[15:44:41] *** Joins: valefor (~valefor@82.131.118.193.cable.starman.ee)
[15:47:25] *** Joins: kanwar (~kanwar@45.251.106.233)
[15:50:06] <mockturtle> Apple M1, three months later [mac] (Jae) https://lobste.rs/s/vqny0j
[15:52:11] *** Quits: kanwar (~kanwar@45.251.106.233) (Ping timeout: 268 seconds)
[15:52:24] *** Joins: supersandro20005 (~supersand@i5C7570BA.versanet.de)
[15:52:24] *** supersandro2000 is now known as Guest4425
[15:52:24] *** Quits: Guest4425 (~supersand@i5C7570BA.versanet.de) (Killed (tungsten.libera.chat (Nickname regained by services)))
[15:52:24] *** supersandro20005 is now known as supersandro2000
[16:13:26] *** Joins: cdown (~cdown@163.114.131.1)
[16:24:12] *** Joins: speckz (~speckz@2600:1700:ce0:bf00:915:4134:167b:652f)
[16:24:46] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:30:15] *** Joins: dmathieu (~textual@laubervilliers-659-1-148-137.w92-154.abo.wanadoo.fr)
[16:34:19] *** Joins: Miaourt (~Miaourt@static.10.244.203.116.clients.your-server.de)
[16:35:22] <iDrougge> How is it possible to work with computers all day, programming them, without learning to use the keyboard to switch between programs?
[16:38:15] <badtuple> live in the terminal *badum tss*
[16:39:14] <gerikson> Ctrl-a #
[16:41:22] *** bontaq` is now known as bontaq
[16:41:35] <iDrougge> badtuple: In a terminal, they would rewrite the same command again and again instead of using command history.
[16:43:10] <gerikson> o_O
[16:56:01] <bsandro> iDrougge: or press "up" 20 times to find the "ls" command instead of just typing it :D
[16:56:28] <iDrougge> Sunk cost fallacy.
[16:57:54] *** Joins: l554 (~l554@user/l554)
[17:00:36] <EdwardIII> ctrl+r for life
[17:01:06] *** Quits: jkl (~jkl@2600:1700:2420:6d10::3f1) (Ping timeout: 240 seconds)
[17:01:14] *** Joins: drobilla (~user@104-195-158-225.cpe.teksavvy.com)
[17:03:16] <iDrougge> I'm content with Fish's history aproach. Ctrl+R never worked well for me.
[17:05:58] *** Quits: dmathieu (~textual@laubervilliers-659-1-148-137.w92-154.abo.wanadoo.fr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:06:05] <mockturtle> v0.16 - Gleam compiles to JavaScript [javascript release erlang] (lpil) https://lobste.rs/s/1pzehf
[17:12:09] *** Joins: dmathieu (~textual@laubervilliers-659-1-148-137.w92-154.abo.wanadoo.fr)
[17:13:08] *** Joins: jmw (~jmw@user/jmw)
[17:15:55] <mockturtle> Why We Need Build Systems [c c++] (ehamberg) https://lobste.rs/s/nuzppx
[17:27:18] *** Joins: kanwar (~kanwar@45.251.106.233)
[17:28:30] *** Quits: supersandro2000 (~supersand@i5C7570BA.versanet.de) (Ping timeout: 268 seconds)
[17:28:39] *** Joins: supersandro20003 (~supersand@i5C75755C.versanet.de)
[17:28:39] *** supersandro20003 is now known as supersandro2000
[17:32:05] *** Quits: kanwar (~kanwar@45.251.106.233) (Ping timeout: 268 seconds)
[17:32:23] <leon> Fzf is a godsend for searching through my command history
[17:33:50] *** Quits: jdarnold (~jdarn@pool-71-174-70-228.bstnma.fios.verizon.net) (Read error: Connection reset by peer)
[17:34:47] <companion_cube> ctrl-r + fzf is pretty nice indeed
[17:35:22] <c355e3b> just use fish
[17:35:23] <c355e3b> everywhere
[17:35:26] <c355e3b> including servers
[17:37:49] <leon> Does fish have fuzzy searching built in?
[17:37:53] <c355e3b> yeah
[17:38:05] <companion_cube> and human syntax
[17:38:20] <tribaal> companion_cube: how do you do that in practice? I'm a fzf noob (I guess, I'm used to my old ways)
[17:38:34] <leon> Huh, I should try it out sometime
[17:38:46] <companion_cube> I just have `fzf_key_bindings` in my config
[17:38:55] <tribaal> I am playing with fzf as a glorified find for now
[17:38:59] <companion_cube> and then `ctrl-r` toggles the nice fuzzy search if fzf is installed
[17:41:51] <tribaal> Oh nice! A couple of source commands in my .bashrc later and the trick works :)
[17:41:54] <tribaal> thanks companion_cube
[17:42:45] <companion_cube> oh bashrc has that too? cool
[17:42:50] <companion_cube> s/bashrc/bash
[17:42:57] <tribaal> yeah
[17:43:04] <tribaal> like I said I'm used to my old ways :)
[17:46:54] *** Joins: rhn (~rhn@dynamic-002-244-098-222.2.244.pool.telefonica.de)
[17:48:07] *** Joins: delial (~delial@47.185.98.253)
[17:51:50] *** Quits: delial (~delial@47.185.98.253) (Read error: Connection reset by peer)
[17:57:23] *** Joins: mahmutov (~mahmutov@37.155.44.179)
[18:01:27] *** Quits: dmathieu (~textual@laubervilliers-659-1-148-137.w92-154.abo.wanadoo.fr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:01:36] *** Joins: rustin (~nullun@user/rustin)
[18:04:00] *** Joins: jerome__ (~jerome@47-208-96-45.erkacmtk01.res.dyn.suddenlink.net)
[18:04:36] *** Quits: beto (~beto@user/beto) (Quit: Has left)
[18:08:23] <mockturtle> tomnomnom/gron - Make JSON greppable [programming] (napkindrawing) https://lobste.rs/s/xdvu8i
[18:09:32] *** Joins: beto (~beto@user/beto)
[18:10:27] *** Joins: ramonconacento (~ramoncona@40.142.58.18)
[18:11:16] *** Quits: discipulus (~discipulu@user/discipulus) (Quit: WeeChat 3.2)
[18:13:24] *** Joins: chenghiz_ (uid349735@id-349735.charlton.irccloud.com)
[18:16:31] *** Quits: jmiven (~vpm@pham.algeb.re) (Quit: rebooting)
[18:17:12] *** Joins: jmiven (~vpm@pham.algeb.re)
[18:21:00] *** Joins: rashkov (uid168508@id-168508.tooting.irccloud.com)
[18:22:58] *** Joins: arcatech (~arcatech@user/arcatech)
[18:24:39] *** Quits: arcatech (~arcatech@user/arcatech) (Client Quit)
[18:25:00] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3-dev)
[18:26:48] *** Joins: delial (~delial@47.185.98.253)
[18:27:58] *** Quits: jschpp (~jschpp@user/jschpp) (Ping timeout: 244 seconds)
[18:29:36] *** Joins: jschpp (~jschpp@user/jschpp)
[18:30:40] *** Quits: rustin (~nullun@user/rustin) (Ping timeout: 268 seconds)
[18:31:24] <mockturtle> Intersec’s custom allocators [c performance] (c-cube) https://lobste.rs/s/ajizuk
[18:33:55] *** Quits: raph_ael (~raphael@user/raph-ael/x-7806685) (Quit: WeeChat 3.1)
[18:35:36] *** Joins: raph_ael (~raphael@user/raph-ael/x-7806685)
[18:41:54] <mockturtle> cariboulabs/cariboulite - turn any 40-pin Raspberry-Pi into a Tx/Rx 6GHz SDR [hardware] (napkindrawing) https://lobste.rs/s/gpjwtq
[18:42:53] *** Quits: GodEater (~godeater@user/godeater) (Quit: ZNC 1.8.2 - https://znc.in)
[18:44:19] *** Joins: GodEater (~godeater@user/godeater)
[18:51:05] <mockturtle> Which VPN Providers Really Take Privacy Seriously in 2021? [security] (napkindrawing) https://lobste.rs/s/u1yszk
[18:54:28] *** Joins: arcatech (~arcatech@user/arcatech)
[18:55:10] *** Joins: rustin (~nullun@user/rustin)
[18:57:10] <mockturtle> Learning to Fly: Let's simulate evolution in Rust! (pt 4) [rust ai wasm] (napkindrawing) https://lobste.rs/s/pvgp74
[18:58:35] *** Joins: jkl (~jkl@12.216.111.80)
[18:59:34] *** Joins: harrigan- (~harrigan@ptr-93-89-242-235.ip.airwire.ie)
[18:59:39] *** Quits: harrigan (~harrigan@ptr-93-89-242-202.ip.airwire.ie) (Ping timeout: 268 seconds)
[18:59:50] *** harrigan- is now known as harrigan
[19:00:13] *** Joins: gera (~gera@user/gera)
[19:01:46] <mockturtle> Async/Await and the Future of Combine [swift] (napkindrawing) https://lobste.rs/s/1koj6q
[19:02:18] *** Quits: rustin (~nullun@user/rustin) (Ping timeout: 240 seconds)
[19:03:24] *** Quits: raph_ael (~raphael@user/raph-ael/x-7806685) (Quit: WeeChat 3.1)
[19:12:22] *** Quits: gera (~gera@user/gera) (Remote host closed the connection)
[19:12:26] <mockturtle> Pako: high speed zlib port to javascript, works in browser & node.js [javascript browsers nodejs] (eatonphil) https://lobste.rs/s/ecyqkq
[19:12:54] *** Quits: l554 (~l554@user/l554) (Ping timeout: 264 seconds)
[19:14:16] *** Joins: dmathieu (~textual@laubervilliers-659-1-148-137.w92-154.abo.wanadoo.fr)
[19:14:20] <johnhowell> Currently feeling really dumb, been fighting with compilation for sdl2 for roughly and hour only to realize I forgot to capitalize it in the compiler include flag
[19:14:44] *** Joins: rustin (~nullun@user/rustin)
[19:15:28] *** Joins: raph_ael (~raphael@user/raph-ael/x-7806685)
[19:15:31] *** Joins: seschwar (~seschwar@user/seschwar)
[19:18:25] *** Joins: justBull (~justache@user/justache)
[19:19:31] *** Quits: arcatech (~arcatech@user/arcatech) (Ping timeout: 240 seconds)
[19:19:43] <iDrougge> johnhowell: Don't feel dumb, feel how dumb Unix is.
[19:19:48] <geoffwozniak> Yup
[19:20:38] *** Quits: dmathieu (~textual@laubervilliers-659-1-148-137.w92-154.abo.wanadoo.fr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:20:44] *** Quits: rustin (~nullun@user/rustin) (Ping timeout: 268 seconds)
[19:25:37] <c355e3b> Unix: where you need to use fork() to create a stable ABI contract.
[19:26:26] <johnhowell> Second time something like this has happened, first time involved pcsx2. Turns out its binary is all caps but its package isn't. Thought I was going nuts lol
[19:27:08] *** Joins: arcatech (~arcatech@user/arcatech)
[19:27:47] <mockturtle> Representing SHA-256 Hashes As Avatars [graphics crypto] (calvin) https://lobste.rs/s/nz1idf
[19:28:04] *** Joins: ikex (ash@user/ikex)
[19:28:32] <mockturtle> Run a real Postgres database locally on Linux, OSX or Windows as part of another Go application or t [go databases testing] (eatonphil) https://lobste.rs/s/gmoq7y
[19:29:59] *** Joins: imode (~imode@user/imode)
[19:30:06] *** Joins: rustin (~nullun@user/rustin)
[19:30:46] <johnhowell> Also would anyone have any resources on grid-locking things within sdl2? I'm not exactly sure how I'd search for this. But I am making a mapping tool for table top rpg dungeons and want the ability to just drag and drop wall tiles onto a set grid. I have a resource for the drag and drop but not grid snap. I suppose I could make a 2d array of valid positions and check if the image of a tile is in the bounds of it
[19:30:46] <johnhowell> was the smartest way to go about it
[19:31:57] <imode> johnhowell: what do you mean grid-locking things?
[19:32:30] <imode> you can decide your tile width/height and just calculate things like "what tile is my mouse on".
[19:33:32] <Brekkjern> Adjust the co-ordinates by rounding to nearest multiple of the distance between each cell?
[19:33:47] <Brekkjern> Like this: https://stackoverflow.com/a/2272174
[19:33:47] <mockturtle> [ Round to 5 (or other number) in Python ] - stackoverflow.com
[19:34:37] *** Quits: rustin (~nullun@user/rustin) (Ping timeout: 244 seconds)
[19:35:16] <imode> yeah. just mouse.x / tile.width and mouse.y / ti.e.height.
[19:35:22] <imode> *tile.height
[19:35:34] <imode> that'll give you the top left of any grid cell.
[19:35:58] <imode> just draw a simple transparent-ish square at those coordinates.
[19:37:54] *** Joins: rustin (~nullun@user/rustin)
[19:38:28] <johnhowell> That is much simpler than I was imagining in my head. Thanks everyone. I tend to overcomplicate things lol
[19:38:36] *** Joins: kstatz12 (~karl.stat@2601:147:4300:6cc0:22fd:9b83:df60:3e45)
[19:39:28] <imode> np!
[19:42:18] *** Quits: rustin (~nullun@user/rustin) (Ping timeout: 240 seconds)
[19:42:49] *** Joins: shapr (~user@pool-108-28-144-11.washdc.fios.verizon.net)
[19:43:03] <mockturtle> Beginner's guide to the async/await concurrency API in Vapor & Fluent [swift] (napkindrawing) https://lobste.rs/s/yjiusx
[19:43:41] *** Joins: rustin (~nullun@user/rustin)
[19:44:13] <EdwardIII> hmm fzf for shell history? i didn't think of that
[19:45:18] *** Quits: fkr (~fkr@winden.hazardous.org) (Ping timeout: 264 seconds)
[19:49:06] *** Quits: rustin (~nullun@user/rustin) (Ping timeout: 268 seconds)
[19:49:28] <companion_cube> also: fzf for exploring directories
[19:49:55] <companion_cube> `vim foo<ctrl-t>` starts listing paths containing "foo"
[19:49:58] <dutchie> i wish fzf had an easy way to customise the terminal hotkeys it uses
[19:50:13] <dutchie> i use the emacs-binding ctrl-t as a transpose to fix typos all the time
[19:51:12] *** Joins: gera (~gera@user/gera)
[19:52:22] <EdwardIII> dutchie: i think you can configure that with env vars? https://github.com/junegunn/fzf#key-bindings-for-command-line
[19:52:23] <mockturtle> [ junegunn/fzf ] - github.com
[19:54:34] <mockturtle> Adding Swift Code as Custom LLDB Command [swift debugging] (napkindrawing) https://lobste.rs/s/ntobor
[19:54:51] <dutchie> EdwardIII: Ctrl-t is hardcoded https://github.com/junegunn/fzf/blob/master/shell/key-bindings.zsh#L69
[19:54:51] <mockturtle> [ junegunn/fzf ] - github.com
[19:55:08] <dutchie> (actually this is the sort of thing that Nix makes it extremely easy to override, i should just do that)
[19:55:35] <EdwardIII> ah ha. i'm just trying to figure out how to customise /etc/profile in nix right now heh
[20:00:42] *** Quits: ddavis (~user@143.244.170.159) (Ping timeout: 268 seconds)
[20:00:57] *** Joins: dmathieu (~textual@pop.92-184-110-252.mobile.abo.orange.fr)
[20:02:03] *** Joins: rustin (~nullun@user/rustin)
[20:02:25] *** Quits: CHRiSNEW (~anon@2a04:5b82:2:100:0:c0ff:fea9:6d63) (Ping timeout: 272 seconds)
[20:04:18] <iDrougge> So today I learned that ~ was on the Home key on an ADM-3 keyboard, hence Unix's use of ~ for the home directory.
[20:04:58] *** Joins: CHRiSNEW (~anon@2a04:5b82:2:100:0:c0ff:fea9:6d63)
[20:06:42] *** Joins: Guest57 (~Guest57@cpc157431-lee215-2-0-cust373.7-1.cable.virginm.net)
[20:07:02] *** Quits: rustin (~nullun@user/rustin) (Ping timeout: 252 seconds)
[20:10:55] <Brekkjern> It's such a pain in the ass to press...
[20:11:02] <Brekkjern> On Norwegian keyboards that is
[20:11:44] <dutchie> it's pretty easy on UK keyboards
[20:11:52] <EdwardIII> the video from the maker of the dactyl keyboard references the ADM board i think, pretty cool video
[20:11:55] <Brekkjern> Ctrl + Alt + ¨, release, <space>
[20:12:13] <dutchie> always a little surprised that US layouts have it miles away from the home row
[20:13:28] <iDrougge> Norwegian PC keyboards, you mean.
[20:14:57] <Brekkjern> It could be different on macs, but they don't follow the ISO standard layout anyways...
[20:16:15] <iDrougge> The ISO standard doesn't standardise that much, does it?
[20:18:35] <mockturtle> How to troubleshoot memory problems in Python [python performance] (itamarst) https://lobste.rs/s/mjreqw
[20:20:12] *** Quits: mahmutov (~mahmutov@37.155.44.179) (Read error: Connection reset by peer)
[20:20:36] *** Quits: jkl (~jkl@12.216.111.80) (Ping timeout: 244 seconds)
[20:20:41] *** Quits: jmw (~jmw@user/jmw) (Quit: jmw)
[20:22:08] *** Joins: jmw (~jmw@user/jmw)
[20:25:25] <mockturtle> Announcing Rust 1.53.0 [release rust] (nerosnm) https://lobste.rs/s/rguk3y
[20:26:58] *** Joins: rustin (~nullun@user/rustin)
[20:32:57] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[20:34:18] *** Quits: rustin (~nullun@user/rustin) (Ping timeout: 240 seconds)
[20:37:02] *** Joins: jkl (~jkl@12.216.111.80)
[20:38:31] *** Quits: CHRiSNEW (~anon@2a04:5b82:2:100:0:c0ff:fea9:6d63) (Ping timeout: 272 seconds)
[20:40:25] *** Quits: jmw (~jmw@user/jmw) (Quit: jmw)
[20:41:45] *** Joins: jmw (~jmw@user/jmw)
[20:48:39] *** Quits: jmw (~jmw@user/jmw) (Quit: jmw)
[20:49:16] *** Joins: jmw (~jmw@user/jmw)
[20:49:30] *** Quits: sliced (~sliced@PC-91-201-17-116.tvk-net.pl) (Ping timeout: 264 seconds)
[20:49:56] *** Joins: sliced (~sliced@PC-91-201-17-116.tvk-net.pl)
[20:51:38] <manicennui> I don't understand why the broker I use for home owner's insurance thinks I want random spam from them.
[20:52:09] <manicennui> They send me surveys and random "helpful" emails.
[20:52:18] <manicennui> Like, I rather never interact with them.
[20:52:37] <manicennui> I just pay them money in case something bad happens, and hope to never deal with them.
[20:53:14] <iDrougge> Because it's someone's job. They must show that they aren't idle.
[20:53:38] <manicennui> Actually I get spam from both the broker and the actual insurance company.
[20:53:47] *** Quits: dmathieu (~textual@pop.92-184-110-252.mobile.abo.orange.fr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:53:47] <manicennui> Extra annoying.
[20:54:08] <manicennui> The company that my mortgage was sold to basically never contacts me. They just collect money.
[20:54:12] <iDrougge> This is what happens when you deindustrialise.
[20:54:39] *** Quits: jmw (~jmw@user/jmw) (Quit: jmw)
[20:55:05] <manicennui> You're a knowledge worker! And you're a knowledge worker!
[20:55:17] *** Quits: kstatz12 (~karl.stat@2601:147:4300:6cc0:22fd:9b83:df60:3e45) (Remote host closed the connection)
[20:55:19] *** Joins: jmw (~jmw@user/jmw)
[20:58:03] *** Quits: sliced (~sliced@PC-91-201-17-116.tvk-net.pl) (Ping timeout: 268 seconds)
[20:59:03] *** Quits: jmw (~jmw@user/jmw) (Client Quit)
[20:59:40] *** Joins: jmw (~jmw@user/jmw)
[21:03:05] *** Joins: kstatz12 (~karl.stat@2601:147:4300:6cc0:22fd:9b83:df60:3e45)
[21:05:21] *** Quits: mercerist (~mercerist@user/mercerist) (Quit: mercerist)
[21:11:36] *** Joins: mercerist (~mercerist@user/mercerist)
[21:12:19] *** doublej41 is now known as doublej472
[21:12:51] *** Joins: lelu (~lelu@host81-129-252-0.range81-129.btcentralplus.com)
[21:13:59] *** Joins: missogra (~missogra@dynamic-077-010-159-105.77.10.pool.telefonica.de)
[21:15:27] *** Quits: lelu (~lelu@host81-129-252-0.range81-129.btcentralplus.com) (Remote host closed the connection)
[21:16:09] *** Quits: gera (~gera@user/gera) (Read error: Connection reset by peer)
[21:16:22] *** Joins: gera (~gera@user/gera)
[21:20:23] <mockturtle> Bag of Freebies for XR Hand Tracking: Machine Learning & OpenXR [linux ai] (mfilion) https://lobste.rs/s/sxbl93
[21:23:03] *** Quits: mercerist (~mercerist@user/mercerist) (Quit: mercerist)
[21:27:56] *** Joins: rustin (~nullun@user/rustin)
[21:30:22] <ddoug> huh, just got a spam email on the address at my doug+kucoin@... email address
[21:30:26] <ddoug> which i've only ever used w/kucoin
[21:30:31] <ddoug> looks like they either share email addresses or had a data breach
[21:30:43] <imode> oh god.
[21:31:01] <imode> if I see "bless" in an upcoming C standard, larry wall has won.
[21:31:29] <companion_cube> as a keyword you mean?
[21:31:39] <imode> just anywhere.
[21:31:44] <imode> there's talks about pointer provenance.
[21:32:52] <ddoug> i've no problem with OO cynicism
[21:33:03] <bsandro> holyC
[21:33:12] *** Quits: rustin (~nullun@user/rustin) (Ping timeout: 268 seconds)
[21:33:35] <kline> bsandro, i always enjoyed that pun
[21:33:37] <companion_cube> what are they talking about anyway? another strcpy variant?
[21:33:45] <kline> genuinely inspired
[21:33:45] <ddoug> too many people think that OO is The Only Way
[21:34:55] <imode> companion_cube: basically clarifying what it means to cast pointers to integers and back.
[21:35:07] <imode> and we're basing pointer validity on where that pointer comes from.
[21:35:11] <imode> which.. makes sense.
[21:35:47] <companion_cube> I thought casting to integers was super dangerous and weird anyway
[21:36:01] <companion_cube> since they don't even need to have the same size, etc. and whose uses intptr_t anyway?
[21:36:05] <imode> yeah.
[21:36:16] <kline> which is presumably why provenance of pointers-from-ints will be penalised?
[21:36:45] <companion_cube> all that for the stupid xor trick, I guess
[21:37:00] <kline> the swap-in-place 3x xor?
[21:37:13] <companion_cube> yeah
[21:37:24] <companion_cube> I mean, what other use case is there for casting pointers to int? :p
[21:37:31] <companion_cube> pointer tagging, maybe?
[21:38:19] <imode> yeah.
[21:41:34] *** Joins: gera_ (~gera@user/gera)
[21:41:49] <mockturtle> Summary of the proposed provenance-aware memory object model for C [c compilers] (matklad) https://lobste.rs/s/giacu8
[21:41:54] <imode> ayyy.
[21:41:56] <imode> there it is.
[21:43:04] *** Quits: gera (~gera@user/gera) (Ping timeout: 268 seconds)
[21:46:54] *** Quits: gera_ (~gera@user/gera) (Remote host closed the connection)
[21:48:21] *** Quits: Guest57 (~Guest57@cpc157431-lee215-2-0-cust373.7-1.cable.virginm.net) (Quit: Client closed)
[21:48:22] <geoffwozniak> You need int-to-pointer stuff in various low-level things sometimes. Other than that, I would avoid it.
[21:48:34] <geoffwozniak> I think I had a real use case of it a little while ago
[21:49:07] <geoffwozniak> Something to do with setting up the event system of a microcontroller
[21:50:18] <geoffwozniak> Accessing peripherals is typically done with casting integers to pointers since they have fixed memory addresses
[21:50:41] *** Joins: dmathieu (~textual@pop.92-184-110-206.mobile.abo.orange.fr)
[21:50:45] <imode> doing anything with memory mapped stuff involves specifying addresses, too.
[21:50:55] <imode> hexadecimal literals are just ints.
[21:51:01] <companion_cube> I find it incredible that these people are still talking in prose
[21:51:10] <companion_cube> instead of using a formal specification
[21:51:57] <imode> wat.
[21:52:04] <companion_cube> (not saying a machine checkable specification, but, like, a mathematical semantics)
[21:52:07] <imode> are you talking about on the mailing list.
[21:52:17] <imode> or in that post.
[21:52:23] <companion_cube> the mailing list :)
[21:52:27] <companion_cube> a tweet is too short indeed
[21:52:29] <cb> pointer providence
[21:52:37] <companion_cube> it'd be like, well, people discussing type systems in prose
[21:53:14] <imode> nobody wants to read through a pile of mathematical jargon and notation to understand the semantics of their programming language.
[21:53:46] <companion_cube> yet, they should
[21:53:50] <companion_cube> if the semantics is as crazy as C's
[21:53:50] <imode> says you.
[21:54:09] <companion_cube> it's like saying "nobody wants to read code to understand what their program does"
[21:54:17] <imode> that's not an equivalent argument.
[21:54:28] <manicennui> I think you two are talking about two different audiences.
[21:54:31] <companion_cube> well, here I'm talking about compiler experts
[21:54:31] <Geekingfrog> nah, you google your question, and then copy/paste the snippet you found on stack overflow that does what you want.
[21:54:41] <companion_cube> they should have a precise semantics
[21:54:44] <manicennui> I agree with companion_cube when it comes to people designing and implementing languages.
[21:54:50] <manicennui> And imode when it comes to users of that language.
[21:54:57] <imode> yeah, I'm in that same camp.
[21:55:08] <companion_cube> but people need to stop pretending C is simple
[21:55:18] <imode> people are pretending C is simple? where's my whappin' stick.
[21:55:21] <manicennui> companion_cube: It is simple. It is not easy.
[21:55:30] <imode> it's not even simple. forth is simple.
[21:55:41] <companion_cube> manicennui: given how hard it is to know what's UB or not, I disagreee with the "it's simple"
[21:55:47] <companion_cube> it's simple to write something that kind of looks correct
[21:55:51] <imode> so many things are complected into so many other things.
[21:55:53] <companion_cube> to know whether it is, though, is incredibly hard
[21:56:43] <manicennui> I think you need to consider the full spectrum of languages.
[21:56:50] <manicennui> Perl doesn't even have a standard nor a spec.
[21:57:01] <imode> parsing perl is also undecidable.
[21:57:08] <manicennui> The current implementation is it, and it has basically every feature from every language.
[21:57:10] <mockturtle> Security Research Device Cohort - 2021 [security ios] (calvin) https://lobste.rs/s/hzkwni
[21:57:11] <imode> larry wall created a demon.
[21:57:15] *** Quits: dmathieu (~textual@pop.92-184-110-206.mobile.abo.orange.fr) (Ping timeout: 268 seconds)
[21:57:17] *** technomancy` is now known as technomancy
[21:57:17] *** Joins: mahmutov (~mahmutov@37.155.49.226)
[21:58:19] *** Quits: avane_ (~avane@user/avane) (Quit: o/)
[21:58:20] <imode> IMO, prose + verifiable spec + regression testing is the holy trinity of language specification.
[21:58:34] *** Joins: gera (~gera@user/gera)
[21:58:48] <companion_cube> verifiable spec, as in a proof assistant model, right?
[21:58:52] <imode> you have something for users and compiler devs, something just for compiler devs, and something for those pesky computers we write for.
[21:59:09] <companion_cube> I'm not even asking for that, just for a mathematical notation, but even that seems to be asking too much
[21:59:12] <imode> companion_cube: proof assistant or some other mathematical model. doesn't have to be in a particular proof assistant, just something that's mechanically verifiable.
[21:59:41] <imode> that says "yep, the thing you wrote in the spec has the correct behavior".
[22:00:08] <imode> "and the things that rely on that have the correct assumptions as well".
[22:00:26] <companion_cube> yeah you need a proof assistant for that ;p
[22:00:34] <companion_cube> there's one for C actually, it's the model of CompCert
[22:00:41] *** Joins: varjagg (~user@ti0040a400-5479.bb.online.no)
[22:01:07] <imode> I'm biased because I like my languages small.
[22:01:29] <manicennui> companion_cube: As far as undefined behavior, I think you need to consider how many languages don't even note what behavior is undefined.
[22:01:35] <imode> where verification of a spec doesn't really require something like Coq.
[22:01:55] <manicennui> Where the behavior is basically "whatever the implementation does".
[22:02:06] <companion_cube> manicennui: a lot of languages define more behavior
[22:02:22] <companion_cube> manicennui: undefined != implementation specific
[22:02:29] <manicennui> I know.
[22:02:40] <manicennui> Ruby does not have a spec.
[22:02:42] <companion_cube> other languages won't remove parts of your code because "it can't happen!"
[22:02:47] <manicennui> There are multiple implementations of Ruby.
[22:02:53] <manicennui> What is undefined behavior?
[22:03:32] <imode> "anybody can do anything in this case, nothing means anything and life is conflict and pain"
[22:03:36] <companion_cube> stuff that the optimizer assumes is impossible because you're not allowed to do it
[22:03:43] <manicennui> Arguably all undefined behavior in C is basically implementation specific.
[22:03:45] <companion_cube> implementation dependent is more sane
[22:04:09] <companion_cube> anyway, languages like SML or java are, afaik, more clearly specified
[22:04:09] *** Quits: missogra (~missogra@dynamic-077-010-159-105.77.10.pool.telefonica.de) (Ping timeout: 268 seconds)
[22:04:11] <manicennui> Which is no different from languages like Ruby without a spec.
[22:04:32] <companion_cube> ruby doesn't try to "optimize" your code
[22:04:38] <manicennui> Yes it does.
[22:04:48] <imode> manicennui: it's the difference between "these two machines have different behavior that you can find documentation on, and it's consistent for those implementations" vs. "if you do this you risk chaos being unleashed and your compiled code to not match your intent"
[22:05:08] <imode> consistent differences vs. inconsistent differences.
[22:05:28] <manicennui> Just because there is no explicit compilation step does not mean that there is no IR, VM, JIT, etc.
[22:05:31] <companion_cube> jaffachief: does ruby skip some conditionals because they're assumed to be impossible?
[22:05:37] <companion_cube> ugh sorry
[22:05:39] <companion_cube> manicennui*
[22:05:56] <manicennui> companion_cube: You are picking a very specific example. It is possible that there are things Ruby *does* optimize away.
[22:06:05] <companion_cube> it's not "very specific"
[22:06:06] <imode> that's.. not a specific example.
[22:06:06] <companion_cube> https://lobste.rs/s/zmxvml/undefined_behavior_c_is_reading_error
[22:06:07] <mockturtle> [ Undefined behavior in C is a reading error ] - lobste.rs
[22:06:31] <companion_cube> if I write `if (p != null) { … }` then I'd expect the compiler to emit a test
[22:06:37] <companion_cube> even if there's a use of *p before
[22:06:47] <imode> it's literally "we can't guarantee any kind of sanity when you have this source construct in your code".
[22:06:53] <companion_cube> ^
[22:07:03] <manicennui> And I'm saying it is entirely possible that there are similar cases in Ruby and other languages.
[22:07:05] <imode> not "some implementations have different documented behavior".
[22:07:23] <manicennui> But it might not be conditionals.
[22:07:24] <imode> manicennui: I'm pretty sure that my conditionals in Ruby will always explicitly match my intent.
[22:07:25] <companion_cube> I can't speak too much about ruby
[22:07:38] <manicennui> imode: But there might be *other* things it optimizes away.
[22:07:46] <companion_cube> but like, pretty sure that how clojure executes is a lot more predictible than C
[22:07:53] <imode> manicennui: okay, let me put it to you another way.
[22:08:01] <imode> optimizing something away should not change the intended semantics of your program.
[22:08:05] <companion_cube> (down to the metal, not just the jvm bytecode)
[22:08:17] <imode> ruby doesn't do that. C's undefined behavior _can_.
[22:08:28] <companion_cube> yes! and C programs not often have no semantics because of UB, and it's hard to know whether a given program has a semantic
[22:08:39] <companion_cube> (if you have a bug triggering UB, your code is meaningless)
[22:08:43] <manicennui> You don't know that it doesn't do that. You also can't make such a statement about "Ruby". Only a specific implementation.
[22:09:04] <cb> 90% of C programs formally verified to do nothing
[22:09:07] <manicennui> Both MRI and JRuby have a JIT now. Both have had a VM/IR for years.
[22:09:08] <imode> "You don't know it doesn't do that."
[22:09:09] <imode> lol.
[22:09:15] <companion_cube> manicennui: sure, let's make statments about a speicfic implementation
[22:09:35] <companion_cube> even for the jvm
[22:09:50] <imode> if that was possible, given the surface area that ruby has, especially for rails, we'd have seen that.
[22:10:13] <JordiGH> Okay, I feel naïve, but we just got hit by a spammer using our sign up form to spam.
[22:10:17] <companion_cube> (also, JIT doesn't mean it's as bad as C: luajit still executes lua, whicih is pretty simple)
[22:10:21] <JordiGH> I didn't think about this attack.
[22:10:23] <manicennui> Obviously the people working on Ruby implementations do not intend for their optimizations to change semantics, but there is also no specification to say what those semantics should be.
[22:10:31] <edk> everyone should scan outbound mail
[22:10:43] <JordiGH> You put in everyone's email in the form and you put your spam payload in the form's user and company fields.
[22:10:54] <edk> if you don't then you deserve to be on a list
[22:10:54] <JordiGH> Now scrambling to install hcaptcha.
[22:10:56] <imode> oh wow.
[22:10:56] <ngoldbaum> JordiGH: it’s a publicly accessible way to tell someone else to send an email so…
[22:10:59] <imode> ouch.
[22:11:07] <manicennui> I feel like the biggest difference is that C is explicit about its nonsense and problems in Ruby are more likely to be accidental.
[22:11:15] <JordiGH> ngoldbaum: Makes sense, just never thought about it.
[22:11:16] <companion_cube> manicennui: let's take a simpler language
[22:11:19] <companion_cube> brainfuck
[22:11:23] <companion_cube> it has a clear semantics for all programs
[22:11:23] <technomancy> manicennui: sounds about right
[22:11:30] <companion_cube> even though you can have multiple implementations
[22:11:36] <companion_cube> all languages are not on the same footing
[22:11:43] <edk> that's not actually true
[22:12:20] <companion_cube> how so?
[22:12:45] <imode> manicennui: let me put it another way. when we talk about a lack of consistency, what we're talking about is "between two compiled runs of this program, you may get entirely different results".
[22:12:56] <manicennui> On the topic of specifications, the Rubinius people tried to get an executable spec for Ruby going, and the MRI people basically said, "Nah."
[22:13:00] <edk> well, as a point of pedantry it doesn't have a spec
[22:13:08] <companion_cube> 🙄
[22:13:11] <imode> edk: bohm disagrees.
[22:13:16] <technomancy> manicennui: didn't they eventually get what they wanted tho?
[22:13:27] <manicennui> I don't know. Rubinius seems pretty dead now.
[22:13:44] <imode> https://en.wikipedia.org/wiki/P%E2%80%B2%E2%80%B2
[22:13:45] <mockturtle> [ P′′ - Wikipedia ] - en.wikipedia.org
[22:13:49] <manicennui> The main developer of Rubinius was not well liked and that seemed to be a big part of the problem.
[22:13:51] <imode> now that's a URL.
[22:13:56] <technomancy> yeah but the spec work they did was embraced by jruby
[22:13:58] <manicennui> He actually worked for my employer for a while.
[22:14:03] <technomancy> manicennui: phoenix?
[22:14:06] <companion_cube> https://en.wikipedia.org/wiki/Brainfuck seems to be precise enough to be a spec, imho
[22:14:07] <mockturtle> [ Brainfuck - Wikipedia ] - en.wikipedia.org
[22:14:09] <manicennui> technomancy: No, the person after him.
[22:14:25] <technomancy> ah, I don't think I ever met him. phoenix seemed really reasonable.
[22:14:27] <manicennui> When phoenix had moved on to Elixir or whatever.
[22:14:35] <imode> bf has a formalism tied to it that guarantees its semantics.
[22:14:36] <companion_cube> if you want a more realistic example, scheme has a spec and multiple implementations
[22:14:39] <edk> P'' is not brainfuck
[22:14:51] <edk> but it also leaves various things undefined
[22:14:56] <companion_cube> and yet people don't spend their time arguing about whether pointer provenance makes their program invalid or not
[22:15:03] <companion_cube> edk: like what
[22:15:24] <technomancy> manicennui: man, I remember dreaming about the future of rubinius like it was going to change the world
[22:15:27] <edk> alphabet size (P'') or cell size
[22:15:34] <edk> implementations exist with 8-bit, 16-bit, 32-bit cells
[22:15:47] <manicennui> technomancy: We had some pretty interesting discussions about it at work, and were at one point planning to try to switch to it.
[22:15:57] <imode> ...
[22:16:15] <c355e3b> I one got our entire platform running on rubinius
[22:16:23] <imode> brainfuck specifies 30k byte-sized cells.
[22:16:25] <companion_cube> edk: fair enough.
[22:16:28] <imode> that's the spec.
[22:16:28] <c355e3b> it fell apart as soon as I rebased because people don't get threads.
[22:16:33] <manicennui> They had some pretty interesting ideas, including some Smalltalk like images.
[22:16:43] <companion_cube> it does seem incosnsitent with the rest of the article but ok
[22:16:44] <imode> "other implementations exist" doesn't mean that BF has no spec.
[22:16:49] <companion_cube> always thought it was one byte
[22:16:53] <imode> it is.
[22:16:53] <c355e3b> Does someone want to help save me from this java code I'm writing?
[22:17:03] <imode> it's 30k byte cells to a BF tape.
[22:17:37] <technomancy> manicennui: I remember figuring the project might be doomed when they pivoted to C++
[22:17:37] <imode> and P'' is parameterized on its alphabet size, so I don't know you think that's "undefined".
[22:17:42] <imode> parameterization isn't undefined behavior.
[22:18:00] <edk> it's not undefined as in C
[22:18:00] <companion_cube> edk: once you fix a cell size, though, things are clear again
[22:18:04] <edk> but it's... not defined
[22:18:11] <kiedtl> not defined by a spec, that is
[22:18:11] <imode> it's _parameterized_ in P''.
[22:18:13] <companion_cube> it's more like implementation specific than UB
[22:18:16] <kiedtl> ^^
[22:18:18] <imode> that's not "not defined".
[22:18:22] <imode> yeah.
[22:18:23] *** Joins: CHRiSNEW (~anon@2a04:5b82:2:100:0:c0ff:fea9:6d63)
[22:18:33] <imode> but for BF specifically you have 30k cells and 8 bit bytes.
[22:18:39] <imode> why is this a hill I'm willing to die on.
[22:18:41] <kiedtl> and wraparound
[22:18:48] <technomancy> lol
[22:19:01] <edk> i don't know that there was ever a spec for that, just a compiler
[22:19:11] <kiedtl> the first compiler was a pseudo spec
[22:19:13] <kiedtl> ¯\_(ツ)_/¯
[22:20:24] <edk> the "undefined" thing feels like a very C distinction to make
[22:20:25] <manicennui> Frankly, anything other than SHALL, SHALL NOT, or "implementation specific" is going to be implementation specific.
[22:20:40] <companion_cube> edk: because in C, UB doesn't mean the compiler does something well specified
[22:20:41] <manicennui> It's not as though you can count on all C compilers to refuse to compile code that is specified as undefined behavior.
[22:20:43] <companion_cube> that's the thing
[22:20:46] <companion_cube> it's not "per compiler"
[22:20:51] <edk> yes. in C. not english
[22:20:56] *** Joins: rfrail3 (~rfrail3@16.red-83-51-39.dynamicip.rima-tde.net)
[22:20:57] <companion_cube> it's "the compiler might do what the fuck it wants, and it doesn't tell you"
[22:21:00] <edk> i know
[22:21:13] <manicennui> And I don't see "implementation specific" from being any different than what the vast majority of languages do.
[22:21:14] <companion_cube> which is very different than most languages with a single implementation
[22:21:22] <companion_cube> like, I can talk more about OCaml
[22:21:25] <technomancy> manicennui: oh god; https://rubinius.com is just "What can a cloud-native virtual machine help you do?"
[22:21:25] <imode> I feel like I have to put a disclaimer up saying that UB is a dumb fucking idea and I don't endorse it.
[22:21:25] <mockturtle> [ Rubinius ] - rubinius.com
[22:21:26] <technomancy> YIKES
[22:21:31] <imode> but this is what C does.
[22:21:36] <manicennui> companion_cube: Sure, there are a few examples of languages that are really good in that regard.
[22:21:42] <companion_cube> OCaml has a single implementation, but I'm confident that I know pretty well the semantics of most programs
[22:21:44] <manicennui> And then there is virtually everything else.
[22:21:54] <edk> if i'd meant to say a math formalism had C undefined behaviour, whatever the fuck that would even mean, i would have said so
[22:21:57] <companion_cube> in C, even picking gcc with a given version, I'd have no fucking idea
[22:22:11] <companion_cube> and I think that's bad
[22:22:19] <manicennui> technomancy: Perhaps one day they will let us know.
[22:22:19] <imode> hell even between compiled versions it's not guaranteed to be consistent.
[22:22:21] <edk> i think this is exactly the wrong approach
[22:22:25] <imode> even between runs it's not going to be consistent.
[22:23:42] <geoffwozniak> edk: what are you referring to? I lost track in the convo
[22:23:44] <companion_cube> edk: to me it means C is unusable. Some people might use it but I won't if I can avoid it
[22:24:01] <companion_cube> because  I have no practical way to distinguish code that is valid C, from code that is garbage
[22:24:11] <edk> geoffwozniak: judging C by how easy it is to look at a C program and determine that it's correct
[22:24:32] <edk> looking at programs and trying to determine what they will do is known to be impossible. the better question is how hard is it to write a correct program?
[22:24:33] <companion_cube> seems like a useful thing to want, no ?
[22:24:36] <edk> no
[22:24:36] <geoffwozniak> edk: ah. Thanks
[22:24:46] <companion_cube> how do you write a correct program if you can't tell if it's correct
[22:24:56] <edk> construct it correctly
[22:25:03] <companion_cube> :D
[22:25:08] <imode> constructivists win gg.
[22:25:12] <ngoldbaum> companion_cube: be gud
[22:25:13] <companion_cube> ok, C might be usable if you generate it from Coq or Isabelle
[22:25:16] <companion_cube> ah yes
[22:25:31] <companion_cube> I want gifts from Christmas!
[22:25:33] <imode> git gud --kid
[22:25:35] <companion_cube> for*
[22:25:35] <edk> C has this problem a lot *worse* than some other programming languages, but i'd argue that it is not much worse than, say, python
[22:25:44] <manicennui> I think the real problem is that humans generally don't care about correctness enough to make it a priority for most projects.
[22:25:49] <geoffwozniak> ^
[22:25:54] <geoffwozniak> This is the thing
[22:25:58] <manicennui> s/real problem/reality/
[22:26:16] <companion_cube> edk: I think a cpython program is generally buggy as fuck, but still, you know it's probably valid python
[22:26:19] <edk> C gives you a bigger gun to shoot yourself in the foot with, but the fundamental problem with both languages is that they don't give you any tools to help you aim correctly
[22:26:24] <companion_cube> not sure what you could do to make it invalid python really
[22:26:27] <edk> yes! but what does that mean
[22:26:39] <edk> in fact i have successfully segfaulted cpython many times, but i'm weird
[22:26:42] <ngoldbaum> cpython doesn’t even try
[22:26:43] <companion_cube> that you can understand the execution trace that leads to a given bug :D
[22:26:47] * imode imagines a concatenative language with a semantic editor that respects types and stack effects.
[22:27:00] <ngoldbaum> half the pyflakes issues could be caught by the bytecode compiler
[22:27:02] <edk> i have written gdb extensions to help me diagnose the python bugs i've written
[22:27:03] <companion_cube> type checking is great ♥
[22:27:26] <edk> and yeah, python has that exact issue
[22:27:30] <ngoldbaum> like it shouldn’t be valid to assign to a variable that’s never created first but python won’t error out until it actually happens
[22:27:34] <imode> damnit. now I have a project. :\
[22:27:53] <edk> the *one* difference here is that C explodes more violently when you violate the rules it doesn't bother to check for
[22:28:03] <companion_cube> violently, or silently
[22:28:15] <edk> well it's a metaphor, i'm just using violent to mean bad
[22:28:15] <imode> it's silent then it's violent.
[22:28:19] <imode> like mafter chipotle.
[22:28:23] <imode> *me after
[22:28:24] <ngoldbaum> crashing the interpreter with a traceback is also not great
[22:28:34] <ngoldbaum> especially for non-dev users
[22:28:40] <edk> python can still have errors where you introduce them at point A and they surface at point B, by which time all evidence of the circumstances of A has been destroyed
[22:28:45] <imode> ngoldbaum: what would the alternative be.
[22:29:13] <ngoldbaum> imode: it being easier to avoid python footguns causing those tracebacks
[22:29:24] <imode> wat
[22:29:30] <ngoldbaum> i’m not saying all of them are easy to prevent but the most common ones are
[22:29:37] <imode> how're you gonna tell the user/stop the program when a variable goes used before it's set.
[22:29:48] <companion_cube> are we talking about how badly designed python is now? yayy
[22:29:49] <edk> python can just not compile that code
[22:30:04] <edk> the reason i bring up python is that in my eyes it's just as bad as C
[22:30:07] <ngoldbaum> it shouldn’t be so easy to ship code with bugs that a static checker can catch
[22:30:23] <imode> can a static checker catch that one, though? can linting tools?
[22:30:26] <edk> it doesn't give you any tools to help you write correct code. sure, the runtime is better behaved when you write incorrect code
[22:30:28] <imode> (genuine question)
[22:30:42] <edk> there's a static subset of that problem that python linters do catch
[22:30:47] <ngoldbaum> checking for mutating a variable that doesn’t exist is half the reason i use pyflakes
[22:30:52] <edk> yeah
[22:30:57] <imode> I thought Python had some bizzaro cases around variable usage that made that difficult to catch reliably.
[22:31:09] <edk> it does, but they don't impact everyday code
[22:31:12] <manicennui> Perl has a pragma to catch that problem, and it is now enabled by default in Perl 7.
[22:31:14] <imode> ah fair.
[22:31:18] <companion_cube> python should have used good scoping, but well
[22:31:26] <ngoldbaum> yeah probably, manipulating __dict__ or __globals__ or something
[22:32:02] <manicennui> Perl has great scoping. It also has multiple forms of scoping!
[22:32:05] <edk> anyway, the point i'm trying to make here is that the more important issue in my mind is what tools the language has to help you write correct code, not what form the explosions take when you write incorrect code
[22:32:28] <ngoldbaum> which is why we should rewrite all python and C in rust
[22:32:36] <manicennui> Nah.
[22:32:40] <ngoldbaum> why are you all not writing rust now
[22:32:56] <EdwardIII> this is something i was wondering about. as C is so mature and stable, could you shore yourself up with another tools in 2021 that a (say) python dev could write a reasonably OK program in C? like an IRC client for example?
[22:33:03] <daegalus> because rust doesnt do it for me.
[22:33:07] <edk> rust is an interesting one because it has a lot of tools to help you avoid *one specific mistake*
[22:33:17] <edk> but it doesn't have any to help you write formally proved stuff
[22:33:48] <companion_cube> yet
[22:34:18] <companion_cube> edk: there's a gradation
[22:34:41] <companion_cube> like, proving code is cool, but not always practical; but at least ensuring the program "doesn't go wrong" is a good start
[22:34:43] <edk> yes, i'm not trying to say that rust is not a massive improvement over C or python, because it is
[22:34:49] <companion_cube> (and this works in SML/ML/Haskell…)
[22:34:54] <edk> but treating memory errors as their own thing has its limitations
[22:35:17] <daegalus> Ive done hundreds of tutorials, guides, Rustlings, etc. and the borrow system is still the most annoying part for me.
[22:35:37] <imode> come to the dark side of concatenative languages, where all we use is linear logic and we don't need garbage collection.
[22:35:46] <manicennui> I think a potential problem with Rust is that it will convince a lot of dynamic language users that they can write low level code and Rust will make sure that all security problems are handled. As we can see with the last release of ripgrep, that is not the case.
[22:35:48] <edk> if you work on code where any logic error means people will explode, god help you, but also it's not much of a consolation that your error will not cause an incorrect memory read
[22:35:56] <companion_cube> and how do you allocate stuff of arbitrary size, imode ? :p
[22:36:06] <manicennui> And I'm guessing the ripgrep author is far more skilled at systems programming than the average dynamic language user.
[22:36:12] <geoffwozniak> While I like what Rust is going for and I'm enthusiastic about it, I fear it will be too complicated for our customers to consider switching to
[22:36:13] <imode> companion_cube: you manipulate lists, append to lists, etc.
[22:36:16] <companion_cube> edk: that's a good time to use proving yes
[22:36:23] <imode> companion_cube: same as usual.
[22:36:23] <companion_cube> imode: and are these lists allocated on the heap?
[22:36:26] <edk> companion_cube: yeah
[22:36:28] <ngoldbaum> i find if i’m fighting with the borrow checker a lot of even getting into a situation where i need to do manual lifetime annotations that i’m probably prematurely optimizing and a clone() or usage of an RC doesn’t matter most of the time
[22:36:31] <gerikson> what happened with Ripgrep
[22:36:35] <manicennui> I still think most people should be working in a language with automatic memory management, even for fairly low level stuff.
[22:36:39] <imode> companion_cube: yes.
[22:36:39] <manicennui> The problem is that Go is such shit.
[22:36:42] <Church> I need to go force myself to write Rust again
[22:36:43] <edk> and yet the HA software industry is very resistant to it
[22:36:44] <companion_cube> imode: so there's a GC?
[22:36:45] <Church> And get up to speed
[22:36:47] <gerikson> manicennui: yeah me too
[22:36:52] <Church> As I've said the last eighty times
[22:36:58] <imode> companion_cube: not the way you'd think, in the form of mark and sweep and other tactics.
[22:37:05] <Church> Any good docs aside from the book?
[22:37:06] <ngoldbaum> tbh i mostly reach for rust in situations where i might use C++ because its standard library is like 1000 times easier to use and understand
[22:37:06] <imode> it's mostly based around lifetimes on the stack.
[22:37:08] <companion_cube> so how does it deallocate memory?
[22:37:16] <ngoldbaum> the C++ STL has so many shitty interfaces
[22:37:21] <daegalus> See, i prefer go over almost any other language.
[22:37:24] <companion_cube> what if you don't want a stack-bound lifetime? :D
[22:37:25] <manicennui> Using Rust instead of C++ seems entirely reasonable.
[22:37:43] <geoffwozniak> ngoldbaum: C++ libs are a lot of why I don't like writing C++
[22:37:53] <Church> Hmm maybe I should go attempt that net interface switcher util again
[22:37:55] <companion_cube> but with the borrow checker, geoffwozniak
[22:37:57] <companion_cube> you can own the libs
[22:38:08] <manicennui> I think the obsession that a lot of developers have with potential performance leads them to pick things like C in cases where GC probably would have been fine.
[22:38:09] <imode> companion_cube: I wish I had a doc to show you, but the current scheme I'm working with has you forming reference chains (via doubly linked lists) whenever you `dup` any data.
[22:38:10] <daegalus> See the problem is, I end up having to mess with lifetimes like 10 minutes into a new project. and I get there because X doesnt work right, so I need to add this, then add that, then i have lifetime nonsense everywhere.
[22:38:32] <imode> `drop`ing said data means moving the reference to said data around in the chain.
[22:38:36] <imode> you can't form cycles.
[22:38:50] <companion_cube> ah, that's the kicker, I see
[22:38:52] <imode> but you can implement cyclic structures on top of the trees you can build.
[22:38:56] <companion_cube> are you familiar with Daedalus?
[22:39:07] <imode> I know a couple of things called daedalus, whazzat.
[22:40:21] <daegalus> Daedalus is the father of Icarus in greek myth. But I am not sure what context companion_cube is using it in
[22:40:27] <manicennui> Someone should fork go and add a real type system. Now to think of a clever name...
[22:40:30] <companion_cube> fuck
[22:40:33] <companion_cube> I mean perceus
[22:40:38] <companion_cube> https://www.microsoft.com/en-us/research/uploads/prod/2020/11/perceus-tr-v1.pdf
[22:40:41] <companion_cube> my baaaaaad
[22:40:46] <imode> oh!
[22:40:51] <imode> that's been on my to-read list for months!
[22:40:52] *** Quits: drobilla (~user@104-195-158-225.cpe.teksavvy.com) (Quit: outside time)
[22:41:00] <companion_cube> anyway, it's a kind of refcounting without cycles and with "dynamic" linear typing
[22:41:05] <companion_cube> that might be of interest to you
[22:41:15] <imode> yeah the abstract alone drew me into it.
[22:41:23] *** Joins: avane (~avane@user/avane)
[22:41:49] *** Quits: avane (~avane@user/avane) (Client Quit)
[22:41:54] <daegalus> Anyone done any deep dives into Bosque? the new programming language from MS research
[22:42:07] <imode> daegalus: what're some interesting points about it? I haven't heard of it.
[22:42:11] <companion_cube> nope, but Koka is cool
[22:42:19] <badtuple> ah darn, I was excited that someone mentioned Daedalus which is a temporal logic langauge that I'm pretty sure only exists in paper form and no one has really used.
[22:42:30] <imode> badtuple: that was the one I was familiar with. :)
[22:42:32] <companion_cube> so sorry ^^"
[22:42:42] <companion_cube> badtuple: the one based on bloom? temporarl datalog or whatever?
[22:42:49] <imode> yeah.
[22:43:00] <companion_cube> yeah that's weird (but cool I guess)
[22:43:14] <badtuple> I think bloom is based on it? I dunno, I run into it in various talks whenever I go on one of my deranged datalog benders.
[22:43:28] <companion_cube> ah it's the other way around? heh
[22:43:28] <daegalus> imode: its just a new way of building a language that has an IR that is designed to be used in editors to actually help you code better. At least thats the gist I got. https://www.microsoft.com/en-us/research/project/bosque-programming-language/
[22:43:29] <mockturtle> [ Bosque Programming Language - Microsoft Research ] - www.microsoft.com
[22:43:31] <imode> companion_cube: does this GC scheme imply some form of COW?
[22:43:36] * badtuple is obviously fun at parties
[22:43:45] <imode> badtuple: I'd attend those parties.
[22:43:46] <companion_cube> imode: it doesn't have "write" at all, it's for functional languages :)
[22:43:48] <manicennui> "Perceus is the compiler optimized reference counting technique that Koka uses for automatic memory management [15]. This (together with evidence passing [16, 17]) enables Koka to compile directly to plain C code without needing a garbage collector or runtime system."
[22:43:50] <manicennui> Hmm.
[22:43:53] <imode> let's get crunk with hickey
[22:43:54] <companion_cube> but it does involve reusing blocks
[22:44:01] <companion_cube> if they're consumed and with refcount=1
[22:44:18] *** Joins: avane (~avane@user/avane)
[22:44:22] <companion_cube> they lie! it uses mimalloc, so, malloc() :p
[22:45:01] *** Quits: avane (~avane@user/avane) (Client Quit)
[22:45:08] *** Quits: anton (~anton@antonmcclure.com) (Quit: Something borked, so I'm going to try turning it off and back on again)
[22:45:13] <imode> my scheme is copy on write, so `dup`ing a 500 element list is free, but if you try to append to that list, it'll copy all 500 elements (no structural sharing).
[22:45:26] <imode> it's not in the spec but it's the one I'm going with as a proof of concept.
[22:45:32] <imode> was wondering if that was the case in this paper.
[22:46:31] <imode> ayyy it even has dup and drops lol. my ideas are never original.
[22:47:28] <manicennui> companion_cube: How different is SML from the non-OO parts of OCaml?
[22:47:39] <companion_cube> very similar
[22:47:44] <companion_cube> albeit older, and more frozen
[22:47:57] *** Joins: anton (~anton@am32.org)
[22:47:58] <companion_cube> these days OCaml is much more advanced (type system and syntax wise)
[22:48:15] <companion_cube> otoh, well, SML is standardized and has some multicore implementations
[22:49:02] <manicennui> I wonder why no ML or lisp has ever truly taken off, except for very short periods of time.
[22:49:11] <manicennui> Like why are the current languages that are popular popular?
[22:49:20] *** Joins: Guest9 (~Guest9@103.240.170.8)
[22:49:31] *** Joins: kanwar (~kanwar@45.251.106.233)
[22:49:41] <imode> historical inertia and wide adoption by large companies.
[22:49:43] *** Joins: avane (~avane@user/avane)
[22:49:50] <imode> that and everybody thinks imperatively from birth.
[22:49:54] <manicennui> Is it all just inertia?
[22:49:54] <imode> or at least relative to time.
[22:50:07] <imode> step-by-step computing will never go away.
[22:50:11] <manicennui> Sure, but ML can be very imperative.
[22:50:16] <companion_cube> also, foreign syntax, in both cases
[22:50:33] <imode> sure. but the premise of it and the syntax of it doesn't lend one's thinking to a "step by step" series of instructions.
[22:50:40] <imode> there's a reason turing won godel over vs. church.
[22:50:51] <manicennui> Is UNIX/C the root cause of all of our problems?
[22:51:04] <lep> root of and solution to
[22:51:05] <daegalus> C++ is the cause of all our problems, C is fine
[22:51:06] <manicennui> Like it was such a big deal at the time that it basically influenced everything after?
[22:51:08] <imode> if it wasn't UNIX/C it'd be oberon and pascal.
[22:51:14] <companion_cube> if only, imode
[22:51:56] <badtuple> I'd argue it's easier to build functional ideas into imperative languages as a user than vice versa. So I'd argue Lisp and ML did take off...by their ideas being absorbed into the chimera of reasonably popular languages.
[22:52:18] <imode> yeeeeeah +1 to that.
[22:52:20] <companion_cube> agreed
[22:52:28] <manicennui> Sure.
[22:52:30] <companion_cube> a lot of stuff has stemmed from lisp and ML into the mainstream
[22:52:40] <manicennui> Just seems like people left out some of the best parts, and added a bunch of garbage.
[22:52:40] <companion_cube> type inference, closures, proper lexical scoping…
[22:52:45] <EdwardIII> manicennui: rich hickey covers this a bit in his videos
[22:52:52] *** Quits: mahmutov (~mahmutov@37.155.49.226) (Ping timeout: 268 seconds)
[22:52:55] <imode> rich hickey is based af
[22:53:06] <imode> dude knows what he wants out of programming
[22:53:18] <badtuple> parens
[22:53:23] <EdwardIII> hehe
[22:53:24] <imode> yeah fair.
[22:53:28] <edk> yes but what he wants is not static typing so he is wrong
[22:53:48] <imode> edk: I will fucking fight you in a boxing match. winner gets hickey's mullet-perm-afro.
[22:53:49] <companion_cube> this, but unironically :p
[22:53:53] <EdwardIII> i made a toy project in clojure, i quite liked it, but i found it very easy to shoot yourself in the foot in clojure with nil/null
[22:54:06] *** Quits: jkl (~jkl@12.216.111.80) (Ping timeout: 268 seconds)
[22:54:20] <badtuple> There's something really beautiful about the fact that computation (and how people want to approach it) is accomplished in such varied ways.
[22:54:29] *** Quits: avane (~avane@user/avane) (Ping timeout: 272 seconds)
[22:54:29] *** Quits: kanwar (~kanwar@45.251.106.233) (Ping timeout: 272 seconds)
[22:54:46] <badtuple> alright, that was too navel gazey even for me. Gonna go un-sleep-deprive. Night everyone
[22:54:50] <imode> imo dynamic typing is primordeal soup that you can build static typing on top of.
[22:55:03] <wrl> and vice versa ;)
[22:55:06] <companion_cube> yikes, no :p
[22:55:12] <EdwardIII> manicennui: its "simple made easy" i was refering to if you're curious
[22:55:25] <companion_cube> you can build static typing without dynamic typing underneath
[22:55:26] <imode> goes back to the "imperative won because it's easier to build functional stuff on top of it vs. the opposite".
[22:55:30] <manicennui> EdwardIII: I've watched that a few times. I don't really remember his commentary on why we are where we are.
[22:55:35] <companion_cube> it's even better, you skip the runtime checks
[22:55:48] <manicennui> companion_cube: Can you though?
[22:56:02] <imode> companion_cube: my point is you can build static analysis tools on top of a dynamically typed language and do just fine.
[22:56:03] *** Joins: mahmutov (~mahmutov@5.176.26.50)
[22:56:03] <companion_cube> most static languages do just that :D
[22:56:11] <manicennui> Ultimately everything is built on top of machine code.
[22:56:21] <companion_cube> machine code isn't dynamically typed though.
[22:56:21] <imode> but you can't coerce a statically typed language into being a dynamic one with like... ease.
[22:56:26] <companion_cube> it's utterly typeless
[22:56:30] <imode> machine code is intly typed.
[22:56:32] <imode> ofc.
[22:56:48] <companion_cube> you just translate to a series of bytes
[22:56:55] <companion_cube> which the machine knows how to interpret
[22:57:02] <companion_cube> really not much dynamic vs static typing in there
[22:57:04] <imode> much like stringly typed langs.
[22:57:14] <badtuple> not just intly typed, but intly executed!
[22:57:26] <companion_cube> intely executed even, for many people!
[22:57:31] <imode> lol
[22:58:25] <companion_cube> the static-on-top-of-dynamic is more for things like typescript, mypy, or even (in a sense) JVM languages
[22:58:53] <companion_cube> since the JVM has some dynamic foundations because it had idiotic stuff like covariant arrays
[22:58:59] <companion_cube> (plus reflection, in any case)
[22:59:20] *** Joins: avane (~avane@user/avane)
[22:59:46] <imode> I like having more "power"/"flexibility" in how I treat the things I write, and then add in all of the fun stuff afterwards.
[22:59:56] <EdwardIII> manicennui: from memory he starts off by saying people like to use things that are like what they already know
[23:00:09] <companion_cube> imode: more power to you
[23:01:34] <Church> Lua is cursed
[23:01:41] * Church is using a damn go to for once
[23:01:48] <imode> oooo. why.
[23:02:01] <Church> As a hacky continue statement
[23:02:07] <Church> In a loop iteration
[23:02:09] <imode> gross. care to share?
[23:02:18] <wrl> goto is galaxy brain
[23:03:48] *** Quits: anton (~anton@am32.org) (Quit: still bork)
[23:05:18] *** Quits: rfrail3 (~rfrail3@16.red-83-51-39.dynamicip.rima-tde.net) (Quit: Leaving)
[23:06:01] <imode> real men implement their loops using anonymous recursion.
[23:06:30] <EdwardIII> proven https://i.redd.it/2r6540m3d6j31.png
[23:07:39] <companion_cube> there should be a return in there
[23:07:42] <manicennui> This is literally the recommended looping construct in most lisps.
[23:07:42] <companion_cube> this is not tailcall :p
[23:08:18] <badtuple> oom is my base case
[23:08:24] <companion_cube> :D
[23:08:27] <companion_cube> love it
[23:08:38] <companion_cube> well, stack overflow, but stil
[23:10:33] *** Joins: l554 (~l554@user/l554)
[23:10:38] <mockturtle> Delocalization-Induced Molecular Equality [science] (napkindrawing) https://lobste.rs/s/t3dj58
[23:11:56] * imode ponders if his language actually has constant space recursive calls.
[23:12:11] <imode> I think the overhead is constant.
[23:12:54] <imode> it's not really possible to perform a stack overflow unless you do something like `foo -> [ 1 recurse ] recursive! ;`
[23:13:00] <EdwardIII> has anyone tried datomic with production workloads?
[23:13:07] <imode> you'll just spam `1` and then it'll die.
[23:13:11] <EdwardIII> and formed an opinion on it?
[23:13:38] *** Joins: jkl (~jkl@12.216.111.80)
[23:17:01] *** Joins: anton (~anton@2604:2dc0:101:200::185)
[23:17:52] <indigo> EdwardIII: You might want to try reaching out to Conaw at Roam Research, I know they use Datomic there
[23:18:02] <technomancy> EdwardIII: I have some former co-workers who said that "datomic in production is putting my therapists' kids thru college"
[23:18:21] <imode> bahahahahahaha.
[23:18:22] <companion_cube> :D
[23:18:23] <mockturtle> What’s new in Xcode 13? [mac swift] (napkindrawing) https://lobste.rs/s/1qiihq
[23:18:25] <companion_cube> that's rough
[23:18:41] <cb> damn i didnt know datomic was that rough
[23:18:45] <indigo> Then again, I've also heard many complaints about Roam's reliability
[23:19:04] <technomancy> I don't have specifics myself; just catchy sound bites
[23:19:13] <EdwardIII> indigo: that's interesting
[23:19:30] <technomancy> but that whole thing where they ban publishing production performance numbers as part of the EULA was suuuuuper sketch
[23:19:39] <companion_cube> pure curiosity: anyone has an opinion on Teal? (compile-to-lua language)
[23:19:59] <imode> technomancy: that's a thing?!
[23:20:04] <imode> yikes.
[23:20:08] <imode> biiiiig yikes.
[23:20:22] <indigo> I click on https://usercontent.irccloud-cdn.com/file/HujHxnum/Screen%20Shot%202021-06-17%20at%2011.49.56%20AM.png
[23:20:27] <c355e3b> technomancy: I've seen the mansion that Datomic built
[23:20:33] <companion_cube> isn't that a Oracle move? :D
[23:20:35] <indigo> Then I get https://usercontent.irccloud-cdn.com/file/8cVjT1TK/Screen%20Shot%202021-06-17%20at%2011.50.02%20AM.png
[23:20:48] <cb> technomancy: most RDBMS EULAs do
[23:20:49] <EdwardIII> i only play with jvm languages for fun so it doesn't really deeply appeal to me, but it sounds pretty interesting to use on paper
[23:20:51] <cb> oracle and mssql do
[23:20:53] <cb> db2 doesn't
[23:21:10] <c355e3b> cb: db2 knows where its sales is
[23:21:17] <c355e3b> and that's on hardware that makes it fast
[23:21:23] <technomancy> cb: yep, and I'd stay the hell away from those too!
[23:22:03] <EdwardIII> in the real world we tend to do everything on postgres here
[23:22:16] <c355e3b> your ops team must hate you
[23:22:17] <technomancy> companion_cube: Teal looks promising but its current state leaves a lot to be desired; it makes no effort to handle nils at all so it feels a bit golang-ish
[23:22:24] <companion_cube> right
[23:22:34] <technomancy> unlike golang they at least admit it's a big problem
[23:22:40] <companion_cube> do they plan to change that or is it fixed?
[23:22:49] <companion_cube> like, union types are a good way to handle nil
[23:22:54] <companion_cube> (like crystal does)
[23:22:57] <EdwardIII> c355e3b: well it's not putting anyone's therapists' kids through college
[23:22:59] <technomancy> long-term plan is to change it but I don't think they have a specific plan yet
[23:23:04] <indigo> What’s the benefit to Datomic over something like Postgres? You can step through time?
[23:23:21] <companion_cube> it's clojure!!1!
[23:23:21] <c355e3b> you say that, but hba_conf needs to die
[23:23:24] <imode> it's effectively an RDF quad database.
[23:23:33] <imode> with datalog on the front.
[23:23:36] *** Joins: gratefuldev (sid1070@id-1070.brockwell.irccloud.com)
[23:24:12] *** Quits: masoudd (~masoudd@user/masoudd) (Read error: Connection reset by peer)
[23:25:11] <manicennui> If you are considering datomic, look at crux.
[23:26:24] <c355e3b> or stardog
[23:27:33] <manicennui> c355e3b: Is this thing open source?
[23:27:39] <c355e3b> No
[23:27:54] *** Quits: micro (~micro@user/micro) (Ping timeout: 268 seconds)
[23:28:08] <c355e3b> Honestly I'm a bit annoyed at the state of open source databases
[23:28:16] *** Joins: micro (~micro@user/micro)
[23:28:16] <manicennui> The reason I recommended taking a look at crux is that it is open source.
[23:28:23] <c355e3b> Because its not *good* enough to be open these days
[23:28:31] <c355e3b> you need some provider to manage it
[23:28:35] <manicennui> Sure, but it is difficult to go back to closed source databases.
[23:28:43] *** Joins: rustin (~nullun@user/rustin)
[23:28:58] *** Joins: maahl (~maahl@cm-84.209.53.232.getinternet.no)
[23:29:02] <manicennui> Although I guess a lot of people are technically using closed source databases on AWS with open source APIs.
[23:29:04] <c355e3b> why?
[23:29:13] <manicennui> But I think they are fools for tying themselves to AWS.
[23:29:33] <c355e3b> Like we got burned by this when we moved Lobste.rs
[23:29:50] *** Joins: noxim (~noxim@user/noxim)
[23:29:53] <c355e3b> MySQL isnt Maria despite the fact the wire protocol is the same
[23:30:35] <badtuple> reversing the behavior of proprietary databases isn't fun when you're under load and everything's on fire. Had to debug some weird DynamoDB stuff at work a year or so ago and it being totally closed made it a massive hassle.
[23:31:32] <manicennui> c355e3b: MySQL/Maria is not a database I would ever choose to use.
[23:31:46] <indigo> I mean, it worked but the query planner wasn’t the best
[23:31:47] <c355e3b> It admins better than postgres by a wide margin
[23:32:00] <manicennui> I've never had a problem dealing with postgres.
[23:32:08] <manicennui> *shrug*
[23:32:18] <c355e3b> At scale in an org with any form of data science team, hba conf is the worst design decision
[23:32:20] <manicennui> And I generally actually care about my data.
[23:32:49] <c355e3b> I've had to do VPC level partitioning because they kept stealing credentials from production boxes.
[23:32:52] <Church> hba.conf is ass
[23:33:06] *** Quits: rustin (~nullun@user/rustin) (Ping timeout: 240 seconds)
[23:33:09] <manicennui> "they"?
[23:33:14] <c355e3b> the data team
[23:33:23] <imode> data teams suck ass.
[23:33:54] <c355e3b> the only data team I like is the one I currently have at work
[23:34:05] <c355e3b> and that's because they customer facing
[23:34:28] <manicennui> We have some pretty bad ass postgres people.
[23:34:42] <manicennui> And run a monsterous postgres instance.
[23:34:51] <manicennui> As well as numerous smaller ones.
[23:35:13] *** Quits: anton (~anton@2604:2dc0:101:200::185) (Quit: anton)
[23:35:58] *** Joins: anton (~anton@antonmcclure.com)
[23:36:01] *** Joins: rodolphoeck (~rodolphoe@user/rodolphoeck)
[23:36:07] *** Quits: anton (~anton@antonmcclure.com) (Remote host closed the connection)
[23:36:16] <companion_cube> have you considered mongoDB? I hear it's webscale.
[23:36:42] <manicennui> companion_cube: Yeah, I considered it years ago, but remembered that I want my data to be there later.
[23:36:59] <sth> c355e3b: what's wrong with hba conf
[23:37:00] <badtuple> look, nothing lasts forever
[23:37:01] *** Joins: anton (~anton@am32.org)
[23:37:10] <sth> just curious about what negative experiences ppl have had
[23:37:28] <c355e3b> its almost impossible to automate configuring that file
[23:37:39] <technomancy> sth: I think the only reason mysql had any success is that it's difficult to configure postgres in development to allow connections in a sensible way
[23:37:41] <companion_cube> jeez you're a picky one, manicennui
[23:37:59] <sth> technomancy: ... is it?
[23:38:02] <c355e3b> YES!
[23:38:24] <manicennui> If you are adding each individual user to hba.conf, you are doing something wrong.
[23:38:26] <sth> what is hard about it? cat "whatever" > pg_hba.conf?
[23:38:28] <sth> but yes
[23:38:30] *** Quits: maahl (~maahl@cm-84.209.53.232.getinternet.no) (Ping timeout: 268 seconds)
[23:38:31] <sth> dont do that often
[23:38:33] <c355e3b> you 1. need to reload it
[23:38:34] <technomancy> sth: when I was in school I had multiple situations where for an assignment some of my classmates wanted to use postgres but wasted like two hours trying to get it configured to allow connections, and gave up and used mysql instead.
[23:38:43] <sth> c355e3b: thats... not hard?
[23:38:57] <technomancy> nothing to do with production config; just the out of box experience to develop against is awful.
[23:39:04] <sth> technomancy: i feel you
[23:39:16] <manicennui> The method for nearly all of your users should be ldap/pam.
[23:39:25] <technomancy> and the docs were like "contact your DBA if you're having trouble connecting" like https://p.hagelb.org/panel3.png
[23:39:26] <manicennui> There shouldn't be a reason to edit hba.conf frequently.
[23:39:39] <c355e3b> sth: pg_reload_conf hits everything not just hba
[23:39:47] <c355e3b> and if you use ldap/pam/certs/radius
[23:39:47] <technomancy> most of the docs are really good, but the configuration docs were hilariously bad
[23:39:54] <c355e3b> most database clients break
[23:40:11] <manicennui> What?
[23:40:13] <c355e3b> I've had the same open issue with DataGrip to get cert support for two years now
[23:41:41] <EdwardIII> c355e3b: what did you migrate from/to?
[23:41:50] <sth> c355e3b: i dont see how that's a postgres problem. not trying to be argumentative
[23:41:52] <c355e3b> For lobsters?
[23:42:09] <EdwardIII> c355e3b: yep
[23:42:13] <sth> i support a ton of postgres boxes that require client certs for auth, never had that kind of problem
[23:42:19] <sth> * when reloading
[23:42:29] <c355e3b> sth: I'm talking about GUI clients when I'm complaining about certs
[23:42:37] <c355e3b> EdwardIII: Hosted DO Mysql to self managed MariaDB
[23:42:38] <sth> yeah, me too
[23:42:46] <EdwardIII> is there a blog post or something about the move? i love reading those
[23:42:56] <c355e3b> I've had them break for me as an SRE
[23:43:03] <c355e3b> and *I* get screamed at
[23:43:12] <sth> but for sure, if the client doesnt support it (or doesn't support it well) then i guess pg is not a good option
[23:43:16] <c355e3b> which is generally my issues with admining postgres.
[23:43:23] <sth> that just seems like a silly problem
[23:43:29] <c355e3b> Its not postgres's or aws' problem
[23:43:30] <c355e3b> its mine
[23:43:31] <c355e3b> and it sucks
[23:43:33] <c355e3b> EdwardIII: No
[23:44:05] <c355e3b> If people were interested, I would write one, but its pretty boring
[23:44:31] <sth> c355e3b: icic
[23:44:51] <c355e3b> and honesty this issue exists for every chunk of software out there
[23:45:04] <c355e3b> its almost always written with "the developer" in mind
[23:45:10] <c355e3b> not the operator
[23:46:14] <EdwardIII> c355e3b: can i ask roughly what powers lobste.rs?
[23:46:38] <companion_cube> sheer hate of blogspam
[23:46:39] <c355e3b> https://github.com/lobsters/lobsters-ansible/
[23:46:40] <mockturtle> [ lobsters/lobsters-ansible ] - github.com
[23:46:47] <manicennui> EdwardIII: Bickering.
[23:47:08] <c355e3b> that's our ansible setup
[23:47:19] <c355e3b> running on three vms in a trenchcoat
[23:48:05] <Church> Heh
[23:48:46] <EdwardIII> ah ha cool. and the app itself is in rails right?
[23:48:59] <imode> railz
[23:49:29] <c355e3b> yep
[23:51:01] <pushcx> EdwardIII: https://github.com/lobsters/lobsters
[23:51:02] <mockturtle> [ lobsters/lobsters ] - github.com
[23:51:15] <EdwardIII> pushcx: was just having a little flick through there
[23:53:52] <EdwardIII> c355e3b: if my incessant questioning is getting annoying just say heh, but did you move everything away from these managed cloud services or just mysql? how come you decided to switch? didn't have enough to do? :D
[23:54:37] <c355e3b> the query planner in MySQL doesn't push WHERE clauses down into views
[23:54:41] <c355e3b> which caused a massive perf issue
[23:55:01] *** Quits: jkl (~jkl@12.216.111.80) (Ping timeout: 244 seconds)
[23:55:14] <EdwardIII> ah so you needed greater control? or mariadb just has a better query planner?
[23:55:28] <c355e3b> Maria has the better planner
[23:55:45] <c355e3b> and we wind up in a really nasty place if we switch to Postgres
[23:57:29] <EdwardIII> the lobste.rs source looks like a pretty nice showcase of how a real-world app with a decent feature set can look in rails
[23:57:59] <technomancy> what role did "it's not oracle" play in the decision?
[23:58:30] <c355e3b> You would have to go back to when we took over from jcs for that choice iirc
[23:58:38] <c355e3b> s/we/push/
[23:58:53] <c355e3b> ... and I have another issue on mockturtuel
[23:59:24] <pushcx> jcs chose mysql because he was more familiar. When we moved, alynpost installed mariadb because it was roughly the same and he was more familiar. Neither were particularly deep considerations, Lobsters is a crud app.
[23:59:59] <EdwardIII> many are
