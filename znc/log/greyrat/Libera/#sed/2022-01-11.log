[00:26:01] *** Joins: nesoi (~Adium@172-3-140-156.lightspeed.sntcca.sbcglobal.net)
[00:26:55] <nesoi> I want to find lines that start one or more numeric characters and add a string prefix to them, but not quite getting it. For example if I had lines like:
[00:26:58] <nesoi> # hello
[00:26:59] <shbot> nesoi: bash: hello: command not found
[00:27:10] <nesoi> 1 
[00:27:37] <nesoi> I want to ignore the first line and then change the 1 in the 2nd line to chr1 by appending the "chr"
[00:28:16] <nesoi> tried sed -e 's/^\d+/chr/' but it doesn't do that
[00:32:34] <lopid> [0-9]
[00:32:43] <lopid> and \+
[00:32:53] <earnestly> With -E
[00:33:01] <emanuele6> with -E, +
[00:33:05] <earnestly> Yes
[00:33:09] <lopid> yes
[00:33:16] <emanuele6> yes
[00:33:43] <lopid> (if you have it)
[00:34:16] <emanuele6> otherwise,  sed 's/^[[:digit:]]\{1,\}/chr/'
[00:34:42] <nesoi> thanks lopid and emanuele6
[00:34:53] <nesoi> emanuele6:  will that match things like 11 or only a single digit?
[00:35:06] <nesoi> or neither :)
[00:35:08] <emanuele6> one or more digit
[00:35:17] <emanuele6> \{1,\}  <-- one or more
[00:35:18] <nesoi> cool thanks
[00:35:28] <e36freak> you're not adding a prefix there, though, you're replacing them
[00:35:35] <nesoi> oh I need to add
[00:35:40] <e36freak> if you want to add a prefix, use /chr&/ in the replacement
[00:35:57] <emanuele6> and remove \{1,\} since it is not necessary.
[00:36:00] <e36freak> also at that point you could just omit the \{1,\} and only match one
[00:36:01] <e36freak> yep
[00:36:17] <nesoi> hmm
[00:36:34] <nesoi>  i've been meaning to learn regexp forever and it never happens 
[00:37:16] <nesoi> so sed 's/^[[:digit:]]\/chr&/' ?
[00:37:24] <emanuele6> no
[00:37:29] <emanuele6>    sed 's/^[[:digit:]]/chr&/'
[00:37:45] <nesoi> cool, thanks!
[00:38:23] <nesoi> hm. unterminated s command
[00:38:35] <emanuele6> yes, if you don't remove \
[00:38:48] <nesoi>  I did!
[00:38:59] <nesoi> sed sed 's/^[[:digit:]]/chr&/'
[00:39:12] <emanuele6> you have two sed
[00:39:16] <emanuele6> # sed sed 's/^[[:digit:]]/chr&/'
[00:39:17] <shbot> emanuele6: sed: -e expression #1, char 3: unterminated `s' command
[00:39:21] <nesoi> ugh 
[00:39:22] <nesoi> :)
[00:39:31] <emanuele6> sed is unterminated `s' command, yes :)
[00:39:57] <emanuele6> because you can use any character instead of / as the delimiter
[00:40:14] <emanuele6> it is interpreting  sed  as something like  s/d
[00:40:26] <emanuele6> that is missing the trailing / and the replacement string
[00:40:34] <emanuele6> and 's/^[[:digit:]]/chr&/' is treated as a filename
[00:40:53] <emanuele6> (file path)
[00:42:09] <emanuele6> `sedebe' is the same as `s/d/b/'
[00:42:27] <nesoi> that's funny
[00:51:28] *** Joins: malina (~malina@user/malina)
[01:00:00] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: Disconnecting)
[01:26:06] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[01:30:06] *** Quits: malina (~malina@user/malina) (Ping timeout: 256 seconds)
[01:59:05] *** Joins: Atque (~Atque@user/atque)
[02:26:10] *** Joins: edlou (uid413273@id-413273.helmsley.irccloud.com)
[03:54:48] *** Joins: ferdna (~ferdna@user/ferdna)
[04:13:11] *** Quits: Mehavoid (~XXX@176.195.235.163) (Remote host closed the connection)
[05:09:38] *** Joins: [diablo]2 (~diablo]@user/diablo/x-9068044)
[05:10:23] *** Quits: [diablo] (~diablo]@user/diablo/x-9068044) (Ping timeout: 256 seconds)
[05:10:23] *** [diablo]2 is now known as [diablo]
[05:23:31] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[05:24:19] *** Joins: seninha (~seninha@user/seninha)
[05:30:19] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[06:50:16] *** Quits: fcr (~fran@r186-48-92-132.dialup.adsl.anteldata.net.uy) (Ping timeout: 256 seconds)
[06:56:59] *** Joins: fcr (~fran@r167-60-138-113.dialup.adsl.anteldata.net.uy)
[07:21:54] *** Joins: adeliktas9 (~adeliktas@i59F5F66D.versanet.de)
[07:23:01] *** Quits: adeliktas (~adeliktas@i59F525D5.versanet.de) (Ping timeout: 240 seconds)
[07:23:01] *** adeliktas9 is now known as adeliktas
[07:32:46] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 256 seconds)
[07:49:06] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[07:49:29] *** Joins: wwalker (~wwalker@platinum.solid-constructs.com)
[08:08:01] *** Joins: malina (~malina@user/malina)
[08:20:07] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:54:43] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[09:33:38] *** Joins: mali (~malina@user/malina)
[09:36:37] *** Quits: malina (~malina@user/malina) (Ping timeout: 240 seconds)
[09:52:35] *** Quits: mali (~malina@user/malina) (Ping timeout: 256 seconds)
[10:49:17] *** Quits: nesoi (~Adium@172-3-140-156.lightspeed.sntcca.sbcglobal.net) (Quit: Leaving.)
[10:56:39] *** Joins: nerozero (~nerozero@87.253.63.54)
[11:03:09] *** Joins: uuidNuniq (~weechat@146.56.136.247)
[11:03:50] <uuidNuniq> what does sed 's/string/cat file/e' do?
[11:04:38] <uuidNuniq> replace string with the content of file?
[11:05:28] <geirha> it replaces string with cat file, then it executes the current line in a shell
[11:06:25] <geirha> # sed 's/foo/boo/e' <<< 'echo foo'
[11:06:26] <shbot> geirha: boo
[11:07:19] <geirha> it's a GNU only feature, making GNU sed more dangerous when it comes to sed injection, since it allows arbitrary code execution unlike the other sed implementations
[11:09:26] <uuidNuniq> execute pattern space as a command and replace with result
[11:10:38] <geirha> yes. It substituted foo with boo, turning pattern space into "echo boo", then it ran  sh -c 'echo boo'
[11:11:18] <uuidNuniq> really? not that way i think
[11:11:54] <uuidNuniq> it just run 'cat file' first and replace string with the output 
[11:12:39] <uuidNuniq> sed 's/foo/boo/e' <<< 'echo -e foo\nhellp'
[11:12:54] <uuidNuniq> # sed 's/foo/boo/e' <<< 'echo -e foo\nhello'
[11:12:56] <shbot> uuidNuniq: -e boonhello
[11:13:08] <uuidNuniq> # sed 's/foo/echo boo/e' <<< 'echo -e foo\nhello'
[11:13:09] <shbot> uuidNuniq: -e echo boonhello
[11:13:37] <uuidNuniq> # sed 's/foo/echo $HOME/e' <<< 'echo -e foo\nhello'
[11:13:38] <shbot> uuidNuniq: -e echo /rootnhello
[11:13:50] <uuidNuniq> see. 
[11:17:48] <uuidNuniq> geirha:  sed 's/string/cat file/e' . in this case, i think sed run 'cat file' first and then replace the 'string' with the content of 'file'
[11:18:14] <geirha> it does not
[11:18:29] <geirha> if that were the case, s/foo/boo/e  would yield   boo: command not found
[11:19:22] <uuidNuniq> oh, right. make sense
[11:19:50] <geirha> with POSIX sed, you'd do   sed -e '/string/{ r file' -e d -e }
[11:20:14] <geirha> which is better, as it doesn't do shell injection
[11:21:53] <geirha> # echo hello > file ; sed -e '/string/{ r file' -e d -e } <<< $'before\nsome line with string in it\nafter'
[11:21:54] <shbot> geirha: before
[11:21:54] <shbot> geirha: hello
[11:21:54] <shbot> geirha: after
[11:22:14] <uuidNuniq> why not just s/string/$(cat file)/ ?
[11:22:43] <geirha> that only works if the file has exactly one line, and it doesn't contain any / or \ or &
[11:23:52] <uuidNuniq> but if the target file2 has content like : string \n rm -rf , then rm -rf gets run also?
[11:24:36] <geirha> no, that'll just cause a syntax error
[11:24:59] <geirha> but you can write file content that will run arbitrary code when you do sed injection with GNU sed
[11:26:15] <uuidNuniq> # echo -e "string\nls" > file2 ; sed 's|string|echo $HOME|e' file2
[11:26:16] <shbot> uuidNuniq: /root
[11:26:16] <shbot> uuidNuniq: ls
[11:26:42] <uuidNuniq> only 'echo $HOME' gets run
[11:26:53] <uuidNuniq> that is cool. 
[11:27:07] <geirha> yes, it only runs if a substitution happens
[11:27:42] <geirha> # echo -e "string;date\nls" > file2 ; sed 's|string|echo $HOME|e' file2
[11:27:43] <shbot> geirha: /root
[11:27:44] <shbot> geirha: Tue Jan 11 07:57:43 UTC 2022
[11:27:44] <shbot> geirha: ls
[11:28:39] <uuidNuniq> the whole line gets run 
[11:29:37] <uuidNuniq> the line that has the pattern 'echo $HOME'  gets run 
[11:30:53] <geirha> yes, string;date gets substituted to   echo $HOME;date   then that is passed to sh -c
[11:31:06] <uuidNuniq> # echo -e 'string\nls\necho $HOME' > file2 ; sed 's|string|echo $HOME|e' file2
[11:31:08] <shbot> uuidNuniq: /root
[11:31:08] <shbot> uuidNuniq: ls
[11:31:08] <shbot> uuidNuniq: echo $HOME
[11:32:19] <uuidNuniq> only run the line that was replaced, the line from beginning to the end. 
[11:32:39] <uuidNuniq> that is super cool feature actually 
[11:32:51] <geirha> # printf 'ls\necho $HOME\n' > file ; sed 's/^//e' file
[11:32:52] <shbot> geirha: file
[11:32:52] <shbot> geirha: /root
[11:33:20] <geirha> I consider it mostly useless. I never use it
[11:34:17] <uuidNuniq> the above example is ... damn dangerous
[11:35:22] <uuidNuniq> s/^// , replace ^ wth null? and then /e, so every line gets run 
[11:35:47] <geirha> yes, "replace the empty string at the start of the line with an empty string"
[11:36:18] <uuidNuniq> oh my god. 
[11:36:30] <uuidNuniq> that is a bug
[11:37:55] <geirha> no
[11:37:57] <uuidNuniq> geirha: what would you do for line 34? https://github.com/pexcn/daily/blob/53c9af29fbcac69b46388f01b9c3a948035167b2/scripts/shadowrocket/shadowrocket.sh#L34
[11:39:01] <geirha> sed -e '/___GFWLIST_PLACEHOLDER___/{ r gfwlist.tmp' -e d -e } gfwlist.template > gfwlist.conf
[11:39:50] <geirha> though I'd also ditch all the following sed -i lines, doing it all in one sed instead
[11:40:09] <geirha> overwriting the file with a new file over and over again for every tiny change is ... inefficient at best
[11:40:28] <uuidNuniq> yeah agreed
[11:41:00] <geirha> and I'd probably go with awk instead of sed; avoids having to do injection
[11:42:10] <uuidNuniq> why your sed command looks strange : '{'} , the single quote seperated { and } 
[11:43:37] <uuidNuniq> i am confused reading the command 
[11:46:35] <geirha> uuidNuniq: this is what it would look like as a sed script:  http://ix.io/3LR8
[11:47:14] <geirha> the r command is one of a few commands that can't be terminated by a ;  ... must be terminated by a newline
[11:47:26] <geirha> you can roughly use multiple -e arguments instead of newlines
[11:48:04] <geirha> *as a sed script in a file
[11:50:21] <uuidNuniq> sed -e '/___GFWLIST_PLACEHOLDER___/{ -e r gfwlist.tmp -e d -e }'
[11:50:55] <geirha> no, they must be separate arguments
[11:51:11] <geirha> sed -e 'scriptline1' -e 'scriptline2' -e 'scriptline3' ...
[11:51:52] <geirha> sed -e '/___GFWLIST_PLACEHOLDER___/{' -e 'r gfwlist.tmp' -e 'd' -e '}'
[11:52:29] <uuidNuniq> ^^^ that is more readable 
[11:53:34] <uuidNuniq> oh i see. read it like this -e -e -e -e ... 
[11:54:41] <uuidNuniq> part one : -e '/___GFWLIST_PLACEHOLDER___/{ r gfwlist.tmp' |||| part two -e d  |||| part tree -e }
[11:56:22] <uuidNuniq> -e '/___GFWLIST_PLACEHOLDER___/{ r gfwlist.tmp' this part, r gfwlist.tmp is in the same line? but your link shows it is in another line 
[11:58:01] <uuidNuniq> damn, sed is harder than bash 
[12:23:28] <geirha> you can put a command right after { on the same line if you want. In a nicely indented script, you'd put it on the next line though
[13:06:20] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[13:15:13] *** Joins: earnestly (~earnest@user/earnestly)
[13:19:20] *** Quits: uuidNuniq (~weechat@146.56.136.247) (Remote host closed the connection)
[13:19:37] *** Joins: uuidNuniq (~weechat@146.56.136.247)
[13:22:49] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[13:40:02] *** Joins: maroloccio (~marolocci@151.75.59.229)
[13:41:01] *** Quits: n8chan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Read error: Connection reset by peer)
[13:41:43] *** Joins: n8chan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[14:35:48] *** Quits: maroloccio (~marolocci@151.75.59.229) (Quit: WeeChat 3.0)
[14:38:39] *** Joins: malina (~malina@user/malina)
[15:29:49] <lopid> :q
[15:29:54] <lopid> :/
[15:30:17] <geirha> :!q
[15:30:39] <geirha> :q!
[15:30:44] <earnestly> ZQ
[15:30:53] <geirha> this bloody thing is broken!
[15:32:05] <earnestly> ?
[15:38:10] *** Quits: malina (~malina@user/malina) (Quit: malina)
[15:44:37] <emanuele6> :quit
[15:46:01] <mingdao>  /quit 
[15:53:42] <geirha> recording @q
[15:58:11] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[16:02:19] <earnestly> Yeah...
[16:23:28] *** Joins: tech_exorcist_ (txrcst@user/tech-exorcist/x-0447479)
[16:24:52] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Ping timeout: 256 seconds)
[17:01:33] *** Joins: timm (~timm@2a02:810d:4c40:a68:224:d7ff:fe18:af78)
[17:07:00] *** Quits: tech_exorcist_ (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[17:09:08] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[17:34:02] *** Quits: timm (~timm@2a02:810d:4c40:a68:224:d7ff:fe18:af78) (Ping timeout: 240 seconds)
[17:44:33] *** Joins: Mehavoid_ (~XXX@176.195.235.163)
[17:57:25] *** Joins: TomyWork (~TomyLobo@p200300e80f006700bd49afeda9d095bf.dip0.t-ipconnect.de)
[18:05:46] *** Quits: uuidNuniq (~weechat@146.56.136.247) (Remote host closed the connection)
[18:06:02] *** Joins: uuidNuniq (~weechat@146.56.136.247)
[18:24:39] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[18:31:26] *** Joins: user51 (~user51@176.228.148.215)
[18:50:37] *** Quits: fcr (~fran@r167-60-138-113.dialup.adsl.anteldata.net.uy) (Ping timeout: 240 seconds)
[18:54:27] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[18:56:28] *** Joins: fcr (~fran@r167-60-18-209.dialup.adsl.anteldata.net.uy)
[18:59:59] *** Quits: nitro_ (~nitro_@c-73-165-183-88.hsd1.pa.comcast.net) (Ping timeout: 256 seconds)
[19:02:51] *** Joins: nitro_ (~nitro_@c-73-165-183-88.hsd1.pa.comcast.net)
[19:11:52] *** Joins: seninha (~seninha@user/seninha)
[19:12:48] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[19:13:25] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[19:29:14] *** Joins: nvmd (~nvmd@user/nvmd)
[19:38:48] *** Quits: sunny93 (~sunny93@wireguard/tunneler/sunny93) (Quit: The Lounge - https://thelounge.chat)
[19:44:54] *** Joins: timm (~timm@2a02:810d:4c40:a68:224:d7ff:fe18:af78)
[19:47:48] *** Joins: sunny93 (~sunny93@wireguard/tunneler/sunny93)
[19:51:37] *** Quits: sunny93 (~sunny93@wireguard/tunneler/sunny93) (Client Quit)
[19:52:21] *** Joins: Atque (~Atque@user/atque)
[19:52:25] *** Joins: sunny93 (~sunny93@wireguard/tunneler/sunny93)
[20:03:07] *** Quits: mw_ (~mw@catv-80-98-128-161.catv.broadband.hu) (Read error: Connection reset by peer)
[20:03:12] *** Joins: mw__ (~mw@catv-80-98-128-161.catv.broadband.hu)
[20:05:26] *** mw__ is now known as mw_
[20:07:34] *** Quits: nerozero (~nerozero@87.253.63.54) (Ping timeout: 256 seconds)
[20:25:07] *** Quits: TomyWork (~TomyLobo@p200300e80f006700bd49afeda9d095bf.dip0.t-ipconnect.de) (Remote host closed the connection)
[20:31:46] *** izabera is now known as saltnpepperedbak
[20:32:20] *** saltnpepperedbak is now known as seasonedbakedbea
[20:32:27] *** seasonedbakedbea is now known as seasonedbeans
[20:53:29] <lopid> jobs
[20:53:35] <lopid> oh ffs
[20:53:48] <lopid> somebody make a focus-follows-gaze already
[21:13:27] <e36freak> lopid: no output
[21:22:52] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[21:32:48] *** Joins: Atque (~Atque@user/atque)
[23:22:05] *** Quits: timm (~timm@2a02:810d:4c40:a68:224:d7ff:fe18:af78) (Ping timeout: 252 seconds)
[23:41:34] *** Quits: uuidNuniq (~weechat@146.56.136.247) (Quit: WeeChat 3.4)
[23:54:04] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: Disconnecting)
