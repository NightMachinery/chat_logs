[00:00:21] *** Quits: CormacAttack (~mac@144.62.50.200) (Quit: WeeChat 3.3)
[00:01:52] *** Joins: rgrinberg (~textual@187.223.250.159)
[00:10:18] *** Joins: VoidNoir0 (~VoidNoir0@72.80.203.52)
[00:15:47] *** Quits: tolog (~tolog@89.36.78.180) (Remote host closed the connection)
[00:18:12] *** Quits: netpipe (~netpipe@user/netpipe) (Ping timeout: 256 seconds)
[00:21:34] *** Joins: qft (~mzhang@2600:1700:38c1:1e90:123d:1cff:feaf:9b82)
[00:27:04] *** Quits: rgrinberg (~textual@187.223.250.159) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:29:53] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[00:30:09] *** Quits: cm007magnum (~Rheanna@61.171.21.169) (Remote host closed the connection)
[00:31:48] *** Joins: cm007magnum (~Rheanna@101.89.150.168)
[00:32:31] *** Quits: triad (~triad@user/triad) (Remote host closed the connection)
[00:35:30] *** Quits: paulf (~paulf@lfbn-lyo-1-397-34.w2-7.abo.wanadoo.fr) (Quit: Connection closed)
[00:35:40] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[00:35:58] *** Joins: stonkey (~stonkey@user/stonkey)
[00:38:05] *** Quits: Brainium (~brainium@user/brainium) (Quit: Konversation terminated!)
[00:44:34] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Read error: Connection reset by peer)
[00:45:24] *** Quits: masticass (~gzc@host-85-201-222-202.dynamic.voo.be) (Quit: WeeChat 3.3)
[00:50:53] *** Joins: tradar (~tradar@user/tradar)
[00:53:52] *** Joins: luizfrds (~Luiz@152.250.243.147)
[00:54:39] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[00:58:19] *** Quits: magla (~gelignite@55d41880.access.ecotel.net) (Quit: Stay safe!)
[00:59:48] *** Joins: rgrinberg (~textual@2806:101e:7:7c2f:99ad:1649:a2c7:9e20)
[01:04:12] *** Joins: badone (~badone@209.132.189.152)
[01:05:53] *** Quits: qft (~mzhang@2600:1700:38c1:1e90:123d:1cff:feaf:9b82) (Ping timeout: 252 seconds)
[01:09:44] *** Joins: dontyouloveshort (~dontyoulo@2a07:3b80:1::efeb)
[01:09:45] <dontyouloveshort> hi
[01:10:08] <dontyouloveshort> when you spawn a thread in c++ in windows, does it take over the affinity values set to its parent?
[01:13:14] *** Quits: tradar (~tradar@user/tradar) (Quit: tradar)
[01:13:52] <RandomReader> the C++ standard doesn't have a concept for affinity, so "not specified" from that standpoint
[01:14:29] <RandomReader> from a Windows standpoint, that'd be more complicated, depending on process and group settings
[01:14:30] <RandomReader> !windows
[01:14:31] <nolyc> You should ask your Windows programming questions in #C++-general, #winapi, #windows-coding or irc://irc.efnet.org/winprog
[01:17:59] *** Quits: rgrinberg (~textual@2806:101e:7:7c2f:99ad:1649:a2c7:9e20) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:19:51] <RandomReader> (note that Windows does not arrange *threads* in trees/graphs, if that's the underlying question .. one thread will never be a parent of another)
[01:20:56] <dontyouloveshort> ah ok
[01:20:56] *** Quits: cm007magnum (~Rheanna@101.89.150.168) (Remote host closed the connection)
[01:22:21] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:22:29] *** Joins: cm007magnum (~Rheanna@61.171.21.169)
[01:22:38] <dontyouloveshort> with windows etw you can get informed when a new process or thread is started and it does know about parentprocess id.  looking for a way to assign affinity to some process and all its children
[01:22:50] *** Quits: robod34 (Username@79.113.195.239) (Quit: Goe offline! ( http://marius.sucan.ro/ ))
[01:23:19] <dontyouloveshort> but im in the wrong channel, lets check the others
[01:27:15] *** Quits: jokoon (~eio@2a01:e0a:542:e160:8d44:772:5a35:e45d) (Quit: Leaving)
[01:27:22] *** Joins: masterbuilder (~user@user/masterbuilder)
[01:31:29] <anyone> I feel that is totally inside out.
[01:31:54] <anyone> If some component library is making threads, how would *I* (my program) know what the best affinity would be, anyway.
[01:32:07] <CarloWood> Why is this not working? I am passing constexpr's am I not?
[01:32:11] <CarloWood> { Foo<e2, {14}> foo; cout << TYPE(foo); } enum E { e1 = 42, e2 }; struct A { uint32_t m = {}; }; template<E e, A a = { 13 }> class Foo { }; template<E e, A a> constexpr Foo<e, a> create(E _e, A _a) { return Foo<_e, _a>{}; } struct B { auto x = create(e2, A{14}); };
[01:32:11] <geordi> error: '_e' is not a constant expression
[01:33:26] <CarloWood> lemme clean that up a bit...
[01:34:21] <CarloWood> { B b; count << TYPE(b.x); } enum E { e2 }; struct A { uint32_t m; }; template<E e, A a> class Foo { }; template<E e, A a> constexpr Foo<e, a> create(E _e, A _a) { return Foo<_e, _a>{}; } struct B { auto x = create(e2, A{14}); };
[01:34:21] <geordi> Same error.
[01:34:22] *** Quits: RoKenn (~RoKenn@user/rokenn) (Quit: NSA proxy service interrupted)
[01:35:12] <CarloWood> What I am trying to do is let struct B have a member variable x of type Foo<e2, A{14}> by calling a function create() the way I do here.
[01:35:48] <RandomReader> the "auto" isn't valid there anyway...
[01:36:09] <CarloWood> bummer :/
[01:36:25] <RandomReader> function parameters are never constexpr, so you can't do template calls that way
[01:36:54] <CarloWood> I don't want to make B a template... since what is passed to create are const expr anyway, the type of x is fixed: B is not a template.
[01:38:13] <CarloWood> { B b; count << TYPE(b.x); } enum E { e2 }; struct A { uint32_t m; }; template<E e, A a> class Foo { }; template<E e, A a> constexpr Foo<e, a> create(E _e, A _a) { return Foo<_e, _a>{}; } struct B { Foo<e2, A{14}> x = create(e2, A{14}); };
[01:38:13] <geordi> Still same error.
[01:38:24] <CarloWood> I removed the auto for now.. so what is wrong now?
[01:38:34] <RandomReader> consteval might get around the function param thing, but this seems like it'd be as simple as just using the Foo template in the first place
[01:39:05] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:39:11] <RandomReader> what I said above, function parameters are never constexpr
[01:39:14] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:39:14] *** ChanServ sets mode: +v npaperbot
[01:39:37] <RandomReader> as in, create(param) can't do Foo<param>
[01:41:08] <RandomReader> ...no, consteval doesn't do anything here either
[01:42:05] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:43:53] <RandomReader> if create()'s job is computing arguments, maybe change it to just do the computation and have the caller use the result for Foo<...> itself
[01:44:33] <CarloWood> No, it was just syntax.
[01:45:31] <CarloWood> Using create() I can overload create for different default values, while letting the user specify all template parameters - they have to specify all of them, except maybe the trailing ones of those have default values.
[01:45:43] *** Quits: Leone (~Leo@216.154.50.172) (Read error: Connection reset by peer)
[01:46:07] <CarloWood> Ie, if a1, x1 and z1 are the defaults,
[01:46:54] <CarloWood> create(x2);  or create(a2, z2),  instead of  Foo<a1, x2> and Foo<a2, x1, z2>.
[01:50:23] *** Joins: netpipe (~netpipe@user/netpipe)
[01:56:44] *** Joins: rgrinberg (~textual@2806:101e:7:7c2f:99ad:1649:a2c7:9e20)
[01:58:04] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[01:59:59] *** Quits: Albright (~Albright@2001:19f0:8001:ca4:4970:ef4b:1e0f:c4a8) (Quit: ZNC 1.8.2 - https://znc.in)
[02:00:12] *** Joins: Albright (~Albright@149.28.13.173)
[02:01:36] *** Joins: qft (~mzhang@2600:1700:38c1:1e90:123d:1cff:feaf:9b82)
[02:03:51] *** Quits: ss4 (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[02:04:43] *** Joins: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net)
[02:08:35] *** Quits: Burgundy (~yomon@79.115.213.171) (Ping timeout: 252 seconds)
[02:10:13] <tin-> if I delete a vector of pointers, will the memory blocks where those pointers point be deallocated? i.e. vector<SomeType*> types{...}; delete types;
[02:10:14] *** Quits: cm007magnum (~Rheanna@61.171.21.169) (Remote host closed the connection)
[02:12:08] <jdavfsxd> no. and types is not a pointer, it's a vector, you can't delete it.
[02:13:00] *** Joins: cm007magnum (~Rheanna@218.78.79.129)
[02:15:55] *** Quits: qft (~mzhang@2600:1700:38c1:1e90:123d:1cff:feaf:9b82) (Ping timeout: 252 seconds)
[02:17:04] *** Joins: Kaedenn (~kaedenn@137.229.82.89)
[02:17:47] <Kaedenn> What is the type&& syntax called? It's the stuff used by the range-based for loops, right? It's been a looong time since I looked at anything >=C++11
[02:17:53] *** Joins: qft (~mzhang@69-222-187-165.lightspeed.sntcca.sbcglobal.net)
[02:18:14] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[02:19:17] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[02:22:47] *** Quits: pulse (~pulse@user/pulse) (Quit: Join a community of oompa loompas at https://indiedevs.net/)
[02:24:02] <NyB> Kaedenn: context? I think they are called rvalue references, but I could be wrong...
[02:26:14] <Kaedenn> that rings a bell
[02:29:09] *** Quits: qft (~mzhang@69-222-187-165.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 256 seconds)
[02:29:50] *** Joins: Brainium (~brainium@user/brainium)
[02:32:12] <Kaedenn> I just read the following line that I feel I can relate to on a deep, emotional level: As we all know, the First Amendment to the C++ Standard states: "The committee shall make no rule that prevents C++ programmers from shooting themselves in the foot."
[02:32:21] *** Quits: cm007magnum (~Rheanna@218.78.79.129) (K-Lined)
[02:32:29] *** Quits: pizdets (~pizdets@183.182.111.240) (Ping timeout: 256 seconds)
[02:33:48] *** Joins: pizdets (~pizdets@183.182.115.237)
[02:37:23] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:37:38] *** Quits: hgkjhgkjgkj (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[02:38:01] *** Joins: hgkjhgkjgkj (~hjgkjhgkj@46.235.96.249)
[02:41:57] *** Quits: Ivii (~Ivyy@2001:a62:4c3:8e01:7af8:48a4:d785:9ce7) (Remote host closed the connection)
[02:42:47] *** Quits: Maaaanu (~manuel@ip5b429007.dynamic.kabel-deutschland.de) (Quit: leaving)
[02:44:51] *** Joins: hellstabber (~hellstabb@178.233.16.12)
[02:48:13] <NyB> Kaedenn: at least C++ warns you. You'd be surprised at all the different ways you can shoot yourself in the foot in Java, or Python, or...
[02:49:10] *** Joins: Dizidentu (~aresg@modemcable105.134-19-135.mc.videotron.ca)
[02:49:17] *** Quits: hackinghorn (~hackingho@user/hackinghorn) (Ping timeout: 252 seconds)
[02:51:10] *** Joins: CormacAttack (~mac@144.62.50.200)
[02:52:52] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[02:55:07] *** Joins: rajkosto (~rajkosto@93-86-99-67.dynamic.isp.telekom.rs)
[02:57:43] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 252 seconds)
[02:58:27] *** Quits: jkaye (~jkaye@2601:281:8300:7530:3bdb:266b:f9cc:b3bc) (Ping timeout: 252 seconds)
[02:58:45] *** Quits: hellstabber (~hellstabb@178.233.16.12) (Quit: Textual IRC Client: www.textualapp.com)
[02:59:43] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[03:01:04] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:01:11] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[03:02:49] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[03:04:03] *** Joins: cm007magnum (~Rheanna@101.89.150.168)
[03:06:35] <Alipha> tin-: use vector<SomeType> or vector<std::unique_ptr<SomeType>> instead. Then you don't have to worry about deleting
[03:07:41] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 256 seconds)
[03:09:41] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[03:09:54] <Alipha> Kaedenn: you often see auto&& in for loops because auto&& almost always "does the right thing" since it can bind to lvalues or rvalues and you "don't have to" think about what type of the elements are
[03:10:26] <tin-> Alipha: thanks!
[03:10:45] *** Joins: chenqisu12 (~chenqisu1@183.217.201.63)
[03:11:26] <Kaedenn> Alipha: that makes a lot of sense, thank you
[03:15:22] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[03:16:31] *** Quits: cm007magnum (~Rheanna@101.89.150.168) (K-Lined)
[03:16:46] *** Joins: qft (~mzhang@c-98-234-252-107.hsd1.ca.comcast.net)
[03:16:47] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 252 seconds)
[03:18:38] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[03:20:11] *** Quits: qft (~mzhang@c-98-234-252-107.hsd1.ca.comcast.net) (Client Quit)
[03:20:27] *** Joins: qft (~mzhang@c-98-234-252-107.hsd1.ca.comcast.net)
[03:30:11] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[03:30:26] *** Joins: Atque (~Atque@user/atque)
[03:30:34] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[03:31:16] *** Joins: aleios (~aleios@user/aleios)
[03:32:55] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 252 seconds)
[03:34:13] *** Quits: Soni (~quassel@autistic.space) (Ping timeout: 250 seconds)
[03:38:13] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[03:38:35] *** Joins: hackinghorn (~hackingho@user/hackinghorn)
[03:39:01] *** Joins: seninha (~seninha@user/seninha)
[03:40:24] *** Quits: Yruama (~Yruama@2a01:cb15:8139:9400:8634:97ff:fe6e:86ac) (Remote host closed the connection)
[03:49:34] *** Quits: rgrinberg (~textual@2806:101e:7:7c2f:99ad:1649:a2c7:9e20) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:58:04] *** Quits: Colt (~Colt@user/colt) (Remote host closed the connection)
[03:58:09] *** Joins: cm007magnum (~Rheanna@61.171.21.169)
[03:58:45] *** Joins: Colt (~Colt@user/colt)
[04:01:14] <CarloWood> Is this a compiler bug?... https://wandbox.org/permlink/7Ge8G2EHzXqbIWl6
[04:01:54] <CarloWood> It says "'void ImageKind<SharingMode::eConcurrent>::print_members(std::ostream&) const' does not match any template declaration" [...] candidate is "void ImageKind<SharingMode::eConcurrent>::print_members(std::ostream&) const"
[04:02:01] *** Joins: Soni (~quassel@autistic.space)
[04:03:09] <InPhase> Well the error message is crap, whether or not it's a bug.
[04:04:13] *** Quits: CormacAttack (~mac@144.62.50.200) (Quit: WeeChat 3.3)
[04:04:25] <CarloWood> clang also gives an error, even less clear (shorter):
[04:04:30] <CarloWood> prog.cc:36:43: error: no function template matches function template specialization 'print_members'
[04:04:30] <CarloWood> void ImageKind<SharingMode::eConcurrent>::print_members(std::ostream& os) const
[04:04:51] <CarloWood> I am clueless :/
[04:04:56] <CarloWood> What is wrong?
[04:08:15] <RandomReader> remove the template<>, but I can't fully explain why
[04:08:22] *** Quits: Brainium (~brainium@user/brainium) (Quit: Konversation terminated!)
[04:08:44] <RandomReader> possibly because the definition belongs to a fully specialized template already, so there's nothing to specialize .. whereas the first definition belongs to an unspecialized template with a default
[04:08:45] <CarloWood> Thanks.. yeah, really weird.
[04:09:07] <RandomReader> meaning that first definition is a specialization itself, which .. actually seems like something that might bite
[04:09:42] <InPhase> RandomReader: Good grief.
[04:09:47] <CarloWood> If you remove the template<> from the first I get:
[04:09:58] <CarloWood> ImageKind.cxx:10:46: error: template specialization requires 'template<>'
[04:09:58] <CarloWood> void ImageKind<vk::SharingMode::eExclusive>::print_members(std::ostream& os) const
[04:10:05] <InPhase> I poked it many times but didn't think of that as asymmetric.
[04:10:24] <RandomReader> yeah I'm not clear on the rules for this
[04:10:39] <RandomReader> (I usually just don't separate definitions for templates, so I don't run into this)
[04:13:37] <RandomReader> ...looks like that's just how it works, you can specialize member definitions that way without having to redefine the entire class
[04:13:38] <RandomReader> https://en.cppreference.com/w/cpp/language/template_specialization#Members_of_specializations
[04:13:39] <InPhase> Okay.  I suppose with that theory clang's message makes sense, although it's still very opaque.  It does say "no function template", which we missed interpreting.
[04:14:03] <RandomReader> first example block covers the don't-use-template<> case, second block covers the use-template<> case
[04:14:29] <InPhase> CarloWood: gcc's error message is terrible though on that, and it would be fair to distill that into a generic testcase for an issue report.
[04:14:52] <CarloWood> Go ahead :)
[04:14:59] <RandomReader> yeah that message is useless
[04:15:02] <InPhase> I assign CarloWood.  :)
[04:15:47] <RandomReader> msvc says    'ImageKind<SharingMode::eConcurrent>::print_members': cannot be explicitly specialized   which at least indicates it's unhappy about specialization
[04:16:06] <InPhase> I wouldn't want people thinking I'm writing specialized template specializations or anything...
[04:16:12] <RandomReader> lol
[04:16:19] <CarloWood> lol
[04:16:59] <CarloWood> I was just trying to avoid declaring that function in a header.
[04:17:20] <CarloWood> Since there are only two versions, I thought I'd just instantiate them in a .cxx
[04:18:14] <InPhase> Hopefully modules will remove the justification for such dances.
[04:18:33] <CarloWood> Now I wonder: what if I DO define it as a template (not a specialization), but in a .cxx - then can I still instantiate the "specializations" too in that .cxx somehow?
[04:18:56] <RandomReader> you can always use explicit instantiation, if that's the question
[04:19:07] <CarloWood> How does that work?
[04:19:25] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[04:19:25] <RandomReader> you can't hide template specializations and have them work though .. it's always an ODR violation, even if the linking stage happens to work on some platforms
[04:20:29] <RandomReader> https://en.cppreference.com/w/cpp/language/class_template#Explicit_instantiation
[04:21:30] <CarloWood> {} template<int n> struct A { void f(); };  template<int n> void A::f() { cout << n; }  /* explicit instantiate A<42>::f here */
[04:21:30] <geordi> error: 'template<int n> struct A' used without template arguments
[04:21:47] <CarloWood> geordi: fix that for me
[04:21:47] <geordi> error: Unexpected `that` after `fix `. Expected "and " or end of request.
[04:22:26] <CarloWood> ok so...
[04:22:49] *** Joins: cart_man (~rynot@host-78-144-121-71.as13285.net)
[04:22:58] <CarloWood> {} template<int n> struct A { void f(); };  template<int n> void A<n>::f() { cout << n; }   template void A<42>::f();
[04:22:59] <geordi>  
[04:23:17] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:38e1:73a2:ce5d:fb32)
[04:24:24] <CarloWood> RandomReader: and then you're saying that it is not allowed to call A<42>::f() without having `template<int n> void A<n>::f() { cout << n; }` visible?
[04:24:31] <CarloWood> as in
[04:24:32] *** Quits: cart_man (~rynot@host-78-144-121-71.as13285.net) (Client Quit)
[04:24:41] *** Joins: seninha (~seninha@user/seninha)
[04:24:52] <CarloWood> { A<42> a; a.f(); } template<int n> struct A { void f(); };
[04:24:53] <geordi> error: undefined reference to 'A<42>::f()'
[04:25:53] <RandomReader> that you'd just need to extern, since it's simply instantiation
[04:26:27] <RandomReader> except that doesn't seem to work, so maybe it's the entire A that needs to be instantiated .. hmm
[04:26:36] *** Quits: sprout_ (~quassel@2a02:a467:ccd6:1:bde9:c3fb:c9c:3dee) (Ping timeout: 245 seconds)
[04:26:56] <CarloWood> I simplied it, the real thing would have if constexpr
[04:27:16] <RandomReader> anyway, what I meant is you can't make e.g. a A<21>::f that does something different, if it's not as visible as the main f() is
[04:27:46] <RandomReader> or: the calling code needs to know that A<21> is unique/special and how to reference it
[04:27:59] <RandomReader> it would not automatically work from the base template
[04:28:04] <CarloWood> Ah right - that makes sense.
[04:28:26] <CarloWood> Otherwise it could inline the non-specialized case for example.
[04:28:35] <RandomReader> right
[04:28:55] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[04:29:34] <RandomReader> ...oh I just typoed my test, the extern for that works fine
[04:30:19] <RandomReader> anyway, if the goal is just to cut down on all the redundant compilation, that explicit instantiation approach works
[04:32:22] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[04:33:25] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[04:34:03] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Remote host closed the connection)
[04:35:53] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[04:39:06] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[04:40:00] *** Quits: cm007magnum (~Rheanna@61.171.21.169) (Remote host closed the connection)
[04:42:37] *** Joins: cm007magnum (~Rheanna@101.91.232.166)
[04:50:45] *** Quits: CaCode (~CaCode@user/cacode) (Ping timeout: 256 seconds)
[04:54:41] *** Quits: qft (~mzhang@c-98-234-252-107.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[04:55:14] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 252 seconds)
[04:57:03] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[05:01:02] *** Quits: chenqisu12 (~chenqisu1@183.217.201.63) (Remote host closed the connection)
[05:01:35] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[05:03:53] *** Joins: chenqisu1 (~03cia7d@183.217.201.63)
[05:04:50] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[05:05:33] *** Quits: chenqisu1 (~03cia7d@183.217.201.63) (Remote host closed the connection)
[05:08:15] *** Joins: chenqisu1 (~03cia7d@183.217.201.63)
[05:11:08] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[05:16:05] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[05:16:38] <leonardus> I'm confused about what const means with vectors, does "const vector" mean the vector itself is const, or the elements, or both?
[05:18:36] <leonardus> what I want to do is make a vector, read data into it, and then "finalize" it per se
[05:18:39] <leonardus> doing this in c++98
[05:20:44] *** Quits: rajkosto (~rajkosto@93-86-99-67.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[05:21:21] *** Quits: evangeline (~Eleanor@178.79.105.181) (Ping timeout: 256 seconds)
[05:23:16] <bpalmer> the vector itself is const. For a basic overview of what that means in practice, look at the member functions and see which ones are marked const -- those are what you can use on a const vector
[05:23:53] <bpalmer> but note that, e.g., operator[]() const  returns a const reference to the element.
[05:25:41] <Alipha> leonardus: both the vector and elements are const. This is true for all std containers
[05:26:58] <RandomReader> if you don't mind the copy, build it in a function and then return it, have the caller store it in a const variable
[05:27:15] <RandomReader> if you do mind the copy .. well, sucks to be in '98
[05:27:33] <RandomReader> ...or hide it behind an interface that returns a const reference to it
[05:28:46] <RandomReader> but yeah, it's effectively finalized in that form
[05:28:51] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:29:34] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[05:29:35] <leonardus> RandomReader: the purpose of this is just to load 3d object data so I guess the cost of copy wouldn't be too bad. thanks
[05:30:02] *** Quits: cm007magnum (~Rheanna@101.91.232.166) (Remote host closed the connection)
[05:32:23] *** Joins: minto (~mintograd@47.201.5.61)
[05:32:51] *** Quits: mintograde (~mintograd@47.201.5.61) (Ping timeout: 245 seconds)
[05:33:05] *** Joins: cm007magnum (~Rheanna@218.78.109.69)
[05:35:23] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:39:05] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:39:14] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:39:14] *** ChanServ sets mode: +v npaperbot
[05:44:35] *** Quits: artok (~azo@mobile-access-5672c9-83.dhcp.inet.fi) (Ping timeout: 256 seconds)
[05:49:34] *** Joins: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net)
[05:49:41] *** Joins: ferdna (~ferdna@user/ferdna)
[05:51:14] *** Joins: mattallmill (~mattallmi@ip68-103-132-187.ks.ok.cox.net)
[05:53:00] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 276 seconds)
[05:53:55] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[05:54:47] *** Quits: netpipe (~netpipe@user/netpipe) (Quit: Client closed)
[05:56:42] *** Joins: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222)
[05:57:41] *** Joins: artok (~azo@mobile-access-5672c9-83.dhcp.inet.fi)
[05:59:23] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 256 seconds)
[06:02:29] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[06:03:13] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Killed (osmium.libera.chat (Nickname regained by services)))
[06:03:13] *** vinleod is now known as vdamewood
[06:06:16] *** Quits: emerent (~quassel@p200300cd571645bfba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[06:07:15] *** Joins: CormacAttack (~mac@144.62.50.200)
[06:09:21] *** Joins: emerent (~quassel@p200300cd5715b0a8ba27ebfffed28a59.dip0.t-ipconnect.de)
[06:10:57] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[06:13:58] *** Quits: masterbuilder (~user@user/masterbuilder) (Remote host closed the connection)
[06:15:14] *** Joins: seninha (~seninha@user/seninha)
[06:16:17] *** Joins: qft (~mzhang@c-24-4-29-235.hsd1.ca.comcast.net)
[06:16:27] *** Quits: cm007magnum (~Rheanna@218.78.109.69) (K-Lined)
[06:21:10] *** Joins: cm007magnum (~Rheanna@61.171.21.169)
[06:21:41] *** Quits: Techcable_ (~Techcable@168.235.93.147) (Ping timeout: 268 seconds)
[06:22:19] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[06:30:09] *** Quits: cm007magnum (~Rheanna@61.171.21.169) (K-Lined)
[06:49:10] *** Quits: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:52:07] *** Quits: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net) (Quit: Konversation terminated!)
[06:57:53] *** Joins: rgrinberg (~textual@2806:101e:7:7c2f:99ad:1649:a2c7:9e20)
[07:00:17] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:5052:6286:866e:fc49) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:01:11] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 252 seconds)
[07:01:11] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:3dd4:62ea:1192:2511)
[07:05:05] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:08:49] *** Quits: qft (~mzhang@c-24-4-29-235.hsd1.ca.comcast.net) (Quit: WeeChat 3.3)
[07:19:20] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 252 seconds)
[07:19:47] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 256 seconds)
[07:19:52] *** Quits: hgkjhgkjgkj (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[07:26:10] *** Joins: Quacc (~youbuntoe@user/quacc)
[07:29:41] *** Joins: nostart (~nostar@192.154.196.126)
[07:31:59] *** Quits: nostar (~nostar@103.14.26.142) (Ping timeout: 252 seconds)
[07:32:07] *** Quits: Quacc (~youbuntoe@user/quacc) (Quit: WeeChat 3.3)
[07:36:55] *** Quits: mattallmill (~mattallmi@ip68-103-132-187.ks.ok.cox.net) (Ping timeout: 268 seconds)
[07:37:36] *** Joins: sprout_ (~quassel@2a02:a467:ccd6:1:39f3:76e9:9ca1:32bd)
[07:39:41] *** Joins: vhqr (~user@120.194.8.115)
[07:40:47] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:38e1:73a2:ce5d:fb32) (Ping timeout: 252 seconds)
[07:43:02] *** Joins: Quacc (~youbuntoe@user/quacc)
[07:43:10] <Quacc> how do i make an array of lambdas?
[07:45:24] <leduyquang753> A lambda is a function object.
[07:46:19] *** Quits: Quacc (~youbuntoe@user/quacc) (Client Quit)
[07:47:41] *** Quits: vhqr (~user@120.194.8.115) (Remote host closed the connection)
[07:53:37] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Ping timeout: 252 seconds)
[08:04:28] *** Joins: Techcable (~Techcable@168.235.93.147)
[08:05:16] *** Joins: Burgundy (~yomon@79.115.213.171)
[08:14:57] *** Joins: wolf2k_ouch (~wolfman20@2600:1700:3211:4140:59b5:7e2c:8b16:87b2)
[08:17:48] <bpalmer> std::array<std::function<int()>, 2> a = {[]{return 1;}, []{return 2;}};  would be one way to build an array that stores the lambdas
[08:18:41] *** Quits: rahl (~rahl@102.114.49.13) (Ping timeout: 245 seconds)
[08:18:41] *** Quits: wolf2k_huh (~wolfman20@2600:1700:3211:4140:348d:300c:c36b:9213) (Ping timeout: 245 seconds)
[08:19:17] *** Quits: CarloWood (~LdK13@212-127-230-18.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[08:22:13] <bpalmer> I'm probably too tired,but I'm not seeing why std::array a = {[]{return 1;}, []{return 1;}} fails, but std::array a = {[]{return 1;}} works as does std::array<std::function<int()>> a = {[]{return 1;},[]{return 1;}}; and 'auto f = []{return 1;}; std::array a = {f, f};' work
[08:22:45] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[08:22:57] <kalven> because every lambda has a unique type
[08:22:59] <bpalmer> I'm not really used to template argument deduction for classes.
[08:23:09] <RandomReader> lambda types are anonymous and unique, so there's no possible common type for T in the first case
[08:23:40] <bpalmer> thank you, I had rejected that because I thought the 'every character the same' lambdas would end up with the same type.
[08:23:44] <InPhase> bpalmer: std::array<std::function>
[08:24:01] <InPhase> Oh, you had that halfway through.
[08:25:16] *** Quits: rgrinberg (~textual@2806:101e:7:7c2f:99ad:1649:a2c7:9e20) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:25:20] <InPhase> You can also tuple them I guess.  :)
[08:25:34] <bpalmer> std::array foo still looks naked to my eyes
[08:25:50] *** Joins: rahl (~rahl@102.114.3.60)
[08:26:28] <RandomReader> I just wish partial deduction was a thing with std::array, so I could specify T and not N
[08:26:50] *** Joins: rgrinberg (~textual@2806:101e:7:7c2f:99ad:1649:a2c7:9e20)
[08:28:09] <InPhase> Agreed.  That would have been very reasonable to find a way to add.
[08:29:56] *** Joins: the_lanetly_052_ (~the_lanet@194.135.166.91)
[08:31:23] *** Quits: CormacAttack (~mac@144.62.50.200) (Ping timeout: 252 seconds)
[08:32:23] *** Quits: the_lanetly_052 (~the_lanet@185.30.91.178) (Ping timeout: 256 seconds)
[08:33:21] *** Joins: CaCode (~CaCode@user/cacode)
[08:34:10] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[08:40:25] *** Joins: frost (~frost@user/frost)
[08:44:07] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[08:45:21] *** Joins: Atque (~Atque@user/atque)
[08:46:20] *** Quits: wwilly_ (~wwilly@lfbn-str-1-375-81.w86-243.abo.wanadoo.fr) (Quit: Leaving)
[08:49:57] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[08:54:54] *** Quits: chozorho (~chozorho@2601:146:300:c30::fae2) (Quit: AoC)
[08:56:28] *** Quits: deepy (deepy@user/deepy) (*.net *.split)
[08:56:28] *** Quits: dextaa (~DV@user/dextaa) (*.net *.split)
[08:56:28] *** Quits: nurupo (~nurupo.ga@user/nurupo) (*.net *.split)
[08:56:28] *** Quits: GrecKo (~grecko@static.183.157.9.5.clients.your-server.de) (*.net *.split)
[08:56:28] *** Quits: tobs (~tobs@taboege.de) (*.net *.split)
[08:56:28] *** Quits: zinc_ (~zinc@163.ip-51-254-203.eu) (*.net *.split)
[08:56:28] *** Quits: e2 (e2@sponsored.by.bnc4you.xyz) (*.net *.split)
[08:56:28] *** Quits: manuels (~manuel@80.211.205.88) (*.net *.split)
[08:56:28] *** Quits: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net) (*.net *.split)
[08:56:29] *** Quits: rdrg109 (~rdrg109@user/rdrg109) (*.net *.split)
[08:56:29] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (*.net *.split)
[08:56:29] *** Quits: pnill (~pnill@ip170.ip-54-39-37.net) (*.net *.split)
[08:56:29] *** Quits: pieguy128 (~pieguy128@bas1-quebec14-67-70-102-17.dsl.bell.ca) (*.net *.split)
[08:56:29] *** Quits: CaCode (~CaCode@user/cacode) (*.net *.split)
[08:56:29] *** Quits: Burgundy (~yomon@79.115.213.171) (*.net *.split)
[08:56:29] *** Quits: emerent (~quassel@p200300cd5715b0a8ba27ebfffed28a59.dip0.t-ipconnect.de) (*.net *.split)
[08:56:29] *** Quits: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222) (*.net *.split)
[08:56:29] *** Quits: Colt (~Colt@user/colt) (*.net *.split)
[08:56:29] *** Quits: tk (~tk@ircpuzzles/staff/tk) (*.net *.split)
[08:56:29] *** Quits: Albright (~Albright@149.28.13.173) (*.net *.split)
[08:56:29] *** Quits: VoidNoir0 (~VoidNoir0@72.80.203.52) (*.net *.split)
[08:56:29] *** Quits: Betal (~Betal@user/betal) (*.net *.split)
[08:56:29] *** Quits: NEYi (~NEYi@109.251.216.38) (*.net *.split)
[08:56:29] *** Quits: CalamityBlue (~CalamityB@cpe-108-185-144-94.socal.res.rr.com) (*.net *.split)
[08:56:29] *** Quits: dhch (~dhch@185.213.154.165) (*.net *.split)
[08:56:29] *** Quits: braxas (sid508886@id-508886.lymington.irccloud.com) (*.net *.split)
[08:56:29] *** Quits: wangledorf (sid505185@id-505185.ilkley.irccloud.com) (*.net *.split)
[08:56:29] *** Quits: polyrob (~rob@user/polyrob) (*.net *.split)
[08:56:29] *** Quits: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8) (*.net *.split)
[08:56:29] *** Quits: fbiagent_ (~fbiagent@user/fbiagent) (*.net *.split)
[08:56:29] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (*.net *.split)
[08:56:29] *** Quits: m_tadeu (~quassel@bl11-135-102.dsl.telepac.pt) (*.net *.split)
[08:56:29] *** Quits: highrate (~presonic@111-22-237-24.gci.net) (*.net *.split)
[08:56:29] *** Quits: cation (cation@user/cation) (*.net *.split)
[08:56:29] *** Quits: Green_ (~Green-@h-85-24-185-116.A189.priv.bahnhof.se) (*.net *.split)
[08:56:29] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (*.net *.split)
[08:56:29] *** Quits: Fairy (~Fairy@ti0004a400-3806.bb.online.no) (*.net *.split)
[08:56:30] *** Quits: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (*.net *.split)
[08:56:30] *** Quits: introom (introom@2600:3c01::f03c:92ff:fea3:2cf) (*.net *.split)
[08:56:30] *** Quits: llornkcor (~quassel@180-150-104-92.b49668.bne.static.aussiebb.net) (*.net *.split)
[08:56:30] *** Quits: Benett (~Benett@xnetx.de) (*.net *.split)
[08:56:30] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (*.net *.split)
[08:56:30] *** Quits: dv^_^ (~dv@eclipse.oxfordfun.com) (*.net *.split)
[08:56:30] *** Quits: Brewster (~Brewster@104.145.226.5) (*.net *.split)
[08:56:30] *** Quits: obiwahn (~heini@user/obiwahn) (*.net *.split)
[08:56:30] *** Quits: carrar (~tim@osburn.jp) (*.net *.split)
[08:56:30] *** Quits: ethoxy (~caretaker@cx21.havox.ru) (*.net *.split)
[08:56:30] *** Quits: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net) (*.net *.split)
[08:56:30] *** Quits: Spydar007 (~spydar007@user/spydar007) (*.net *.split)
[08:56:30] *** Quits: tbcr_ (~tbcr@107.13.189.161) (*.net *.split)
[08:56:30] *** Quits: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4) (*.net *.split)
[08:56:30] *** Quits: manx (xuew@p200300e18f239d00022215fffe03cf97.dip0.t-ipconnect.de) (*.net *.split)
[08:56:30] *** Quits: Chaser (~Chaser@user/chaser) (*.net *.split)
[08:56:30] *** Quits: Pjerky (~Pjerky@81-234-143-135-no58.tbcn.telia.com) (*.net *.split)
[08:56:30] *** Quits: lllh (~llh@198.48.244.21) (*.net *.split)
[08:56:31] *** Quits: treble (~treble@user/treble) (*.net *.split)
[08:56:31] *** Quits: mitch0 (~mitch@94-21-221-155.pool.digikabel.hu) (*.net *.split)
[08:56:31] *** Quits: [R] (~rs@genoce.org) (*.net *.split)
[08:56:31] *** Quits: elemongw (~elemongw@20.107.36.50) (*.net *.split)
[08:56:31] *** Quits: letto (~letto@188.25.118.240) (*.net *.split)
[08:56:31] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (*.net *.split)
[08:56:31] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (*.net *.split)
[08:56:31] *** Quits: ville (~ville@82-181-178-111.bb.dnainternet.fi) (*.net *.split)
[08:56:31] *** Quits: mad_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca) (*.net *.split)
[08:56:31] *** Quits: millido (~millido@84.210.150.128) (*.net *.split)
[08:56:31] *** Quits: _SKiTZO (~dark@64.89-10-146.nextgentel.com) (*.net *.split)
[08:56:31] *** Quits: sunyour (~sunyour@129.226.182.99) (*.net *.split)
[08:56:31] *** Quits: peeps[zen] (~peepsalot@openscad/peepsalot) (*.net *.split)
[08:56:31] *** Quits: bdt (~bdt@155.51-174-24.customer.lyse.net) (*.net *.split)
[08:56:31] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (*.net *.split)
[08:56:31] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (*.net *.split)
[08:56:31] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (*.net *.split)
[08:56:31] *** Quits: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net) (*.net *.split)
[08:56:31] *** Quits: lz_ (l@gateway/vpn/protonvpn/lz/x-63480406) (*.net *.split)
[08:56:31] *** Quits: jaimelm (~jaimelm@deneb.emergentcommunitysystems.com) (*.net *.split)
[08:56:31] *** Quits: voirnox (~voirnox@xor.moe) (*.net *.split)
[08:56:31] *** Quits: dwt_ (~dwt_@c-98-200-58-177.hsd1.tx.comcast.net) (*.net *.split)
[08:56:31] *** Quits: alex88 (~alex88@ip72-207-140-105.lv.lv.cox.net) (*.net *.split)
[08:56:31] *** Quits: zopsi (~zopsi@irc.dir.ac) (*.net *.split)
[08:56:31] *** Quits: dexter0 (~dexter0@c-69-181-126-161.hsd1.ca.comcast.net) (*.net *.split)
[08:56:31] *** Quits: NyB (~archon@81.6.39.62) (*.net *.split)
[08:56:31] *** Quits: orthoplex64 (~crm@70.120.0.94) (*.net *.split)
[08:56:31] *** Quits: gnomesort (~gnomesort@user/gnomesort) (*.net *.split)
[08:56:31] *** Quits: IceMichael (~IceMichae@h2878436.stratoserver.net) (*.net *.split)
[08:56:31] *** Quits: beagles (~beagles@142.162.188.116) (*.net *.split)
[08:56:31] *** Quits: Sadale (~Sadale@user/sadale) (*.net *.split)
[08:56:32] *** Quits: indy (~indy@dsl-static-104.213-160-167.telecom.sk) (*.net *.split)
[08:56:32] *** Quits: cursey (~cursey@user/cursey) (*.net *.split)
[08:56:32] *** Quits: moberg (~moberg@luke.millenniumfalcon.org) (*.net *.split)
[08:56:32] *** Quits: ZeroKnight (zeroknight@dimensionzero.net) (*.net *.split)
[08:56:32] *** Quits: Dijky (~Dijky@user/dijky) (*.net *.split)
[08:56:32] *** Quits: urdh (~urdh@user/urdh) (*.net *.split)
[08:56:32] *** Quits: ac_slater (~ac_slater@c-67-168-6-19.hsd1.wa.comcast.net) (*.net *.split)
[08:56:32] *** Quits: rgrinberg (~textual@2806:101e:7:7c2f:99ad:1649:a2c7:9e20) (*.net *.split)
[08:56:32] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (*.net *.split)
[08:56:32] *** Quits: joilerv_ (~joilerv@host86-191-93-41.range86-191.btcentralplus.com) (*.net *.split)
[08:56:32] *** Quits: CygniX (~CygniX@2a01:8740:1:727:4e:80:7f:2d) (*.net *.split)
[08:56:32] *** Quits: zygonsisyphus[m] (~zygonsisy@2001:470:69fc:105::482) (*.net *.split)
[08:56:32] *** Quits: merry (~mary@user/merry) (*.net *.split)
[08:56:32] *** Quits: randm (~randm@user/randm) (*.net *.split)
[08:56:32] *** Quits: raekye (~raekye@creatifcubed.com) (*.net *.split)
[08:56:32] *** Quits: sonic (~sonic@user/sonic) (*.net *.split)
[08:56:32] *** Quits: murphy__ (~murphy_@cpe-104-162-115-128.nyc.res.rr.com) (*.net *.split)
[08:56:32] *** Quits: Learath2 (~learath2@user/learath2) (*.net *.split)
[08:56:32] *** Quits: dontyouloveshort (~dontyoulo@2a07:3b80:1::efeb) (*.net *.split)
[08:56:32] *** Quits: ullbeking_ (sid5364@id-5364.ilkley.irccloud.com) (*.net *.split)
[08:56:32] *** Quits: EdFletcher (~PKD@user/edfletcher) (*.net *.split)
[08:56:32] *** Quits: ivzhh (~ivzhh@S0106f85e42a00a1f.cg.shawcable.net) (*.net *.split)
[08:56:32] *** Quits: fluter (~fluter@user/fluter) (*.net *.split)
[08:56:32] *** Quits: blo (~blo@user/blo) (*.net *.split)
[08:56:32] *** Quits: Praise (~Fat@user/praise) (*.net *.split)
[08:56:32] *** Quits: greenbagels (~gb@user/greenbagels) (*.net *.split)
[08:56:32] *** Quits: Moult (~sevenstro@sevenstrokes.net) (*.net *.split)
[08:56:33] *** Quits: Svitkona (~Svitkona@157.245.38.135) (*.net *.split)
[08:56:33] *** Quits: taiyu (~taiyu@user/taiyu) (*.net *.split)
[08:56:33] *** Quits: abraham (~abraham@143.244.185.86) (*.net *.split)
[08:56:33] *** Quits: ahlk (~user@2600:1700:31c0:3a10::43) (*.net *.split)
[08:56:33] *** Quits: jiffe (~jiffe@mail.nsab.us) (*.net *.split)
[08:56:33] *** Quits: drmeister (sid45147@id-45147.ilkley.irccloud.com) (*.net *.split)
[08:56:33] *** Quits: scruffyfurn (scruffyfur@turbous.xshellz.com) (*.net *.split)
[08:56:33] *** Quits: oldtopman (~oldtopman@c-71-205-4-123.hsd1.co.comcast.net) (*.net *.split)
[08:56:33] *** Quits: Jck_true (~jcktrue@user/jck-true/x-0200799) (*.net *.split)
[08:56:33] *** Quits: InPhase (~InPhase@openscad/inphase) (*.net *.split)
[08:56:33] *** Quits: Ara (~Ara@user/ara) (*.net *.split)
[08:56:33] *** Quits: Khoyo_ (~khoyo@ns328946.ip-37-187-115.eu) (*.net *.split)
[08:56:33] *** Quits: pippijn (~pippijn@ra.xinutec.org) (*.net *.split)
[08:56:33] *** Quits: TingPing (sid2800@id-2800.helmsley.irccloud.com) (*.net *.split)
[08:56:33] *** Quits: tcsc (sid145321@5.254.36.59) (*.net *.split)
[08:56:33] *** Quits: Bodger1234_ (sid503511@id-503511.uxbridge.irccloud.com) (*.net *.split)
[08:56:33] *** Quits: glenfe (sid231748@user/glenfe) (*.net *.split)
[08:56:33] *** Quits: cengiz_io (sid223191@id-223191.ilkley.irccloud.com) (*.net *.split)
[08:56:33] *** Quits: catern (~sbaugh@cpe-98-7-229-235.nyc.res.rr.com) (*.net *.split)
[08:56:33] *** Quits: renopt (~renopt@lisp.us.to) (*.net *.split)
[08:56:33] *** Quits: jellie (~luv_panda@user/jellie) (*.net *.split)
[08:56:33] *** Quits: Gamah (~quassel@gamah.net) (*.net *.split)
[08:56:33] *** Quits: headline (sid102736@tinside.irccloud.com) (*.net *.split)
[08:56:33] *** Quits: termos (sid18647@helmsley.irccloud.com) (*.net *.split)
[08:56:33] *** Quits: gendl (sid100083@hampstead.irccloud.com) (*.net *.split)
[08:56:33] *** Quits: anzu (~anzu@melkki.cs.helsinki.fi) (*.net *.split)
[08:56:33] *** Quits: mrkajetanp (~mrkajetan@2a01:4b00:ea36:6c00:7994:941c:3f5d:2b88) (*.net *.split)
[08:56:33] *** Quits: irc-open-up (bounce@bounce.nastycode.com) (*.net *.split)
[08:56:33] *** Quits: derwolf (~DerWolf@2a01:4f8:c0c:554a::1) (*.net *.split)
[08:56:33] *** Quits: mebus (~mebus@2a00:8a60:e019:10de::ac22) (*.net *.split)
[08:56:33] *** Quits: andi_ (~andi@user/andi/x-3467420) (*.net *.split)
[08:56:33] *** Quits: Isthmusi (~Isthmus@user/isveni) (*.net *.split)
[08:56:33] *** Quits: m42e (~m42e@pb42.de) (*.net *.split)
[08:56:33] *** Quits: supernov1h (~supernova@mail.ijk.nz) (*.net *.split)
[08:56:33] *** Quits: eck (~root@user/eck) (*.net *.split)
[08:56:34] *** Quits: dongcarl (~dongcarl@70.107.207.192) (*.net *.split)
[08:56:34] *** Quits: jkl1337 (~jkl@user/jkl) (*.net *.split)
[08:56:34] *** Quits: tonitch (~tonitch@user/tonitch) (*.net *.split)
[08:56:34] *** Quits: Cienisty (Cienisty@user/cienisty) (*.net *.split)
[08:56:34] *** Quits: blackbeard420 (blackbeard@2600:3c03::f03c:91ff:fe92:3f2a) (*.net *.split)
[08:56:34] *** Quits: AAAAA_DRAGON (A_D@libera/staff/dragon) (*.net *.split)
[08:56:34] *** Quits: vancz (~vancz@user/vancz) (*.net *.split)
[08:56:34] *** Quits: sam113101 (~sam@modemcable229.128-202-24.mc.videotron.ca) (*.net *.split)
[08:56:34] *** Quits: Soliton (~Soliton@wesnoth/developer/soliton) (*.net *.split)
[08:56:34] *** Quits: roxlu (~roxlu@2a01:7c8:aac0:286:8c3a:b01c:3830:245b) (*.net *.split)
[08:56:34] *** Quits: Xizor_ (~Xizor@151.ip-51-68-121.eu) (*.net *.split)
[08:56:34] *** Quits: volgar1x (~volgar1xm@2001:470:69fc:105::e61d) (*.net *.split)
[08:56:34] *** Quits: equinox[m] (~momoshiki@2001:470:69fc:105::fe92) (*.net *.split)
[08:56:34] *** Quits: happy-dude (~happy-dud@2001:470:69fc:105::b4d7) (*.net *.split)
[08:56:34] *** Quits: JoeyLong[m] (~tezzy26ma@2001:470:69fc:105::1:3333) (*.net *.split)
[08:56:34] *** Quits: b_jonas (~x@catv-176-63-4-16.catv.broadband.hu) (*.net *.split)
[08:56:34] *** Quits: Nnnavd (~Nnavd@ec2-34-220-224-214.us-west-2.compute.amazonaws.com) (*.net *.split)
[08:56:34] *** Quits: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl) (*.net *.split)
[08:56:34] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:346b:8ef4:4433:cb30) (*.net *.split)
[08:56:34] *** Quits: treeshateorcs[m] (~treeshate@2001:470:69fc:105::1:41c4) (*.net *.split)
[08:56:35] *** Quits: nolyc (~nolyc@tinodidriksen.com) (*.net *.split)
[08:56:35] *** Quits: hirion (~hirion@user/hirion) (*.net *.split)
[08:56:35] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (*.net *.split)
[08:56:35] *** Quits: cncr04s (~cncr04s@afxr.net) (*.net *.split)
[08:56:35] *** Quits: nohit (sid334887@id-334887.tinside.irccloud.com) (*.net *.split)
[08:56:35] *** Quits: useful_idiot (~useful_id@gateway/vpn/pia/usefulidiot/x-43226899) (*.net *.split)
[08:56:35] *** Quits: qwedfg (~qwedfg@user/qwedfg) (*.net *.split)
[08:56:35] *** Quits: entooth[m] (~entoothch@2001:470:69fc:105::1:3b1d) (*.net *.split)
[08:56:35] *** Quits: megaTherion (~therion@unix.io) (*.net *.split)
[08:56:35] *** Quits: kalven (~calvin@2a02:470:84:102::24) (*.net *.split)
[08:56:35] *** Quits: bitonic (~bitonic@2001:470:69fc:105::1812) (*.net *.split)
[08:56:35] *** Quits: biberu (~biberu@user/biberu) (*.net *.split)
[08:56:35] *** Quits: dansan (~daniel@75.81.148.51) (*.net *.split)
[08:56:35] *** Quits: causative (~halberd@user/causative) (*.net *.split)
[08:56:35] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (*.net *.split)
[08:56:35] *** Quits: shtumf[m] (~shtumfmat@2001:470:69fc:105::1:1b21) (*.net *.split)
[08:56:35] *** Quits: hnOsmium0001[m] (~hnosmium0@2001:470:69fc:105::15d4) (*.net *.split)
[08:56:36] *** Quits: tinloaf (~tinloaf@2a03:94e0:163c:57e:bc51:5c66:86e7:1) (*.net *.split)
[08:56:36] *** Quits: Griwes (~griwes@znc.reaver-project.org) (*.net *.split)
[08:56:36] *** Quits: routeveg_ (~lee@197.ip-51-195-136.eu) (*.net *.split)
[08:56:36] *** Quits: DrMax_ (~DrMax@132.215.96.36) (*.net *.split)
[08:56:36] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (*.net *.split)
[08:56:36] *** Quits: IUSR (sid348938@id-348938.hampstead.irccloud.com) (*.net *.split)
[08:56:36] *** Quits: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016) (*.net *.split)
[08:56:36] *** Quits: Friithian (gunqqer@friithian.dev) (*.net *.split)
[08:56:36] *** Quits: BtbN (btbn@ffmpeg/developer/btbn) (*.net *.split)
[08:56:36] *** Quits: edr (~edr@user/edr) (*.net *.split)
[08:56:36] *** Quits: BrandonArnold (~brandon@ec2-52-27-188-210.us-west-2.compute.amazonaws.com) (*.net *.split)
[08:56:36] *** Quits: reda_ (~reda@user/reda) (*.net *.split)
[08:56:36] *** Quits: rogorido_ (~rogorido@mail.georeligion.org) (*.net *.split)
[08:56:36] *** Quits: dzz007 (~dzz007@user/dzz007) (*.net *.split)
[08:56:36] *** Quits: bone (~bone@user/mbo) (*.net *.split)
[08:56:36] *** Quits: talisein (~talisein@user/talisein) (*.net *.split)
[08:56:36] *** Quits: purplex_ (~purplex@user/purplex) (*.net *.split)
[08:56:36] *** Quits: statusfailed (~statusfai@statusfailed.com) (*.net *.split)
[08:56:36] *** Quits: jason1234 (fltk@thunix.net) (*.net *.split)
[08:56:37] *** Quits: ElementW (~tungsten@hoodie.elementw.net) (*.net *.split)
[08:56:37] *** Quits: les (znc@user/les) (*.net *.split)
[08:56:37] *** Quits: theglass (~glass@user/theglass) (*.net *.split)
[08:56:37] *** Quits: markand (~markand@markand.fr) (*.net *.split)
[08:56:37] *** Quits: celphi_ (sid97751@user/celphi) (*.net *.split)
[08:56:37] *** Quits: Manouchehri (sid384576@id-384576.hampstead.irccloud.com) (*.net *.split)
[08:56:37] *** Quits: kornos_ (~kornos@2a04:ad80:0:fb::3b85) (*.net *.split)
[08:56:37] *** Quits: krzych (krzych@nroot.pl) (*.net *.split)
[08:56:37] *** Quits: tafa (~tafa@user/tafa) (*.net *.split)
[08:56:37] *** Quits: geordi (~geordi@tinodidriksen.com) (*.net *.split)
[08:56:37] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (*.net *.split)
[08:56:37] *** Quits: Nixx (~quassel@bulbasaur.sjorsgielen.nl) (*.net *.split)
[08:56:37] *** Quits: Exa (exa@irc.moe) (*.net *.split)
[08:56:37] *** Quits: chiptuner (~bobby@user/chiptuner) (*.net *.split)
[08:56:37] *** Quits: enyc (~enyc@user/enyc) (*.net *.split)
[08:56:37] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (*.net *.split)
[08:56:37] *** Quits: ERROH (~mama@user/mama) (*.net *.split)
[08:56:37] *** Quits: ollien (~ollien@ollien.com) (*.net *.split)
[08:56:37] *** Quits: rochadt (~rochadt@24.148.29.135) (*.net *.split)
[08:56:37] *** Quits: sebbu (~sebbu@user/sebbu) (*.net *.split)
[08:56:37] *** Quits: MrC (Ben@mrbenc.net) (*.net *.split)
[08:56:38] *** Quits: Flannel (~flannel@user/flannel) (*.net *.split)
[08:56:38] *** Quits: milia[m] (~mlliarmma@2001:470:69fc:105::1:4631) (*.net *.split)
[08:56:38] *** Quits: MarcoAlvarez[m] (~surakgnom@2001:470:69fc:105::2dc) (*.net *.split)
[08:56:38] *** Quits: scjg (~scjgmatri@2001:470:69fc:105::f5d6) (*.net *.split)
[08:56:38] *** Quits: martiert_work (~martiert@173.38.220.37) (*.net *.split)
[08:56:38] *** Quits: greyblue9 (sid500829@id-500829.ilkley.irccloud.com) (*.net *.split)
[08:56:38] *** Quits: kristjansson_ (sid126207@id-126207.tinside.irccloud.com) (*.net *.split)
[08:56:38] *** Quits: computerquip (sid423484@user/computerquip) (*.net *.split)
[08:56:38] *** Quits: Dragoon (~Dragoon@user/dragoon) (*.net *.split)
[08:56:38] *** Quits: hyper_dave (~hyper_dav@2a01:4f9:4a:246c::2) (*.net *.split)
[08:56:38] *** Quits: xrj (~av@2a01:4f8:c17:7cba::1) (*.net *.split)
[08:56:38] *** Quits: miklcct (~quassel@vps2.miklcct.com) (*.net *.split)
[08:56:38] *** Quits: Stewart (~stewart@2001:470:69fc:105::1:6cd) (*.net *.split)
[08:56:38] *** Quits: Cupcake[m] (~cupcakezo@2001:470:69fc:105::1:17bd) (*.net *.split)
[08:56:38] *** Quits: orkim (~orkim@user/orkim) (*.net *.split)
[08:56:38] *** Quits: ndorf (~nd@ob.noxio.us) (*.net *.split)
[08:56:38] *** Quits: michaelis (~michaelis@193.183.209.17) (*.net *.split)
[08:56:38] *** Quits: andreyv (~andrey@user/andreyv) (*.net *.split)
[08:56:38] *** Quits: wyre (~wyre@user/wyre) (*.net *.split)
[08:56:38] *** Quits: lloda (~user@11-206-127-185.static.world-connect.ch) (*.net *.split)
[08:56:38] *** Quits: yano (~yano@ircpuzzles/staff/yano) (*.net *.split)
[08:56:38] *** Quits: Hobbyboy (Hobbyboy@hobbyboy.co.uk) (*.net *.split)
[08:56:38] *** Quits: kkd (~kkd@255.205.154.104.bc.googleusercontent.com) (*.net *.split)
[08:56:38] *** Quits: shenghi (~shenghi@chrysocolla.mutablevoid.org) (*.net *.split)
[08:56:39] *** Quits: oj (oj@user/oj) (*.net *.split)
[08:56:39] *** Quits: f0xb4t (~mac@78.46.13.69) (*.net *.split)
[08:56:39] *** Quits: montpol (montpol@fine.mouses.xyz) (*.net *.split)
[08:56:39] *** Quits: Yamakaja (~yamakaja@user/yamakaja) (*.net *.split)
[08:56:39] *** Quits: hackkitten (~hackkitte@94.31.103.136) (*.net *.split)
[08:56:39] *** Quits: djinni (~djinni@static.38.6.217.95.clients.your-server.de) (*.net *.split)
[08:56:39] *** Quits: webstran- (~webstrand@user/webstrand) (*.net *.split)
[08:56:39] *** Quits: HeTo (henkka@beer.modeemi.fi) (*.net *.split)
[08:56:39] *** Quits: mukti (mukti@user/mukti) (*.net *.split)
[08:56:39] *** Quits: tct (~tct@8.200.173.83.static.wline.lns.sme.cust.swisscom.ch) (*.net *.split)
[08:56:39] *** Quits: sideshowbarker[m (~sideshowb@2001:470:69fc:105::9a16) (*.net *.split)
[08:56:39] *** Quits: kikijiki[m] (~kikijiki@user/kikijiki) (*.net *.split)
[08:56:39] *** Quits: ruediger (~ruediger@user/ruediger) (*.net *.split)
[08:56:39] *** Quits: arconte[m] (~arcontema@2001:470:69fc:105::1:2fe4) (*.net *.split)
[08:56:39] *** Quits: majors (~majors@user/majors) (*.net *.split)
[08:56:39] *** Quits: nedbat (~nedbat@python/psf/nedbat) (*.net *.split)
[08:56:39] *** Quits: DrinkyBird (~drinkybir@idlerpg/player/DrinkyBird) (*.net *.split)
[08:56:39] *** Quits: fruitypunk (~user@2a01:7c8:aaaa:12:5054:ff:fe69:1df9) (*.net *.split)
[08:56:39] *** Quits: Artea (~Lufia@artea.com.pt) (*.net *.split)
[08:56:39] *** Quits: Latexi95 (late@banhammer.fi) (*.net *.split)
[08:56:39] *** Quits: dzoe (joe@joe.cz) (*.net *.split)
[08:56:39] *** Quits: klys_ (~mdasoh@show.op8.us) (*.net *.split)
[08:56:39] *** Quits: Karyon (~Karyon@user/karyon) (*.net *.split)
[08:56:39] *** Quits: Haise0 (~haise01@user/haise01) (*.net *.split)
[08:56:39] *** Quits: buhman (sid411355@user/buhman) (*.net *.split)
[08:56:40] *** Quits: Argorok (sid195487@id-195487.hampstead.irccloud.com) (*.net *.split)
[08:56:40] *** Quits: stephe (sid14127@id-14127.lymington.irccloud.com) (*.net *.split)
[08:56:40] *** Quits: Beastie (~lcu@user/thebeastie) (*.net *.split)
[08:56:40] *** Quits: imMute (~immute@user/immute) (*.net *.split)
[08:56:40] *** Quits: Xark (~Xark@47.156.11.28) (*.net *.split)
[08:56:40] *** Quits: [Brain] (~brain@cpc141994-chfd3-2-0-cust401.12-3.cable.virginm.net) (*.net *.split)
[08:56:40] *** Quits: amiti (sid373138@id-373138.lymington.irccloud.com) (*.net *.split)
[08:56:40] *** Quits: blueminder_ (sid143388@id-143388.tinside.irccloud.com) (*.net *.split)
[08:56:40] *** Quits: lhtseng (sid15322@id-15322.helmsley.irccloud.com) (*.net *.split)
[08:56:40] *** Quits: m1cl[m] (~m1cl@2001:470:69fc:105::2d57) (*.net *.split)
[08:56:40] *** Quits: ormaaj (~ormaaj@user/ormaaj) (*.net *.split)
[08:56:40] *** Quits: phoenix (phoenix@user/phoenix) (*.net *.split)
[08:56:40] *** Quits: malinus (~malinus@172.245.158.16) (*.net *.split)
[08:56:40] *** Quits: rpav (~rpav@user/rpav) (*.net *.split)
[08:56:40] *** Quits: dartmouthed (~blackunsp@li761-35.members.linode.com) (*.net *.split)
[08:56:40] *** Quits: Atque (~Atque@user/atque) (*.net *.split)
[08:56:40] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (*.net *.split)
[08:56:40] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (*.net *.split)
[08:56:40] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (*.net *.split)
[08:56:40] *** Quits: bindu (~bindu@user/bindu) (*.net *.split)
[08:56:41] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (*.net *.split)
[08:56:41] *** Quits: teepee (~teepee@openscad/teepee) (*.net *.split)
[08:56:41] *** Quits: spithash (~spithash@user/spithash) (*.net *.split)
[08:56:41] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (*.net *.split)
[08:58:10] *** Joins: Atque (~Atque@user/atque)
[08:58:10] *** Joins: CaCode (~CaCode@user/cacode)
[08:58:10] *** Joins: rgrinberg (~textual@2806:101e:7:7c2f:99ad:1649:a2c7:9e20)
[08:58:10] *** Joins: Burgundy (~yomon@79.115.213.171)
[08:58:10] *** Joins: emerent (~quassel@p200300cd5715b0a8ba27ebfffed28a59.dip0.t-ipconnect.de)
[08:58:10] *** Joins: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222)
[08:58:10] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[08:58:10] *** Joins: Colt (~Colt@user/colt)
[08:58:10] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[08:58:10] *** Joins: Albright (~Albright@149.28.13.173)
[08:58:10] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[08:58:10] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[08:58:10] *** Joins: dontyouloveshort (~dontyoulo@2a07:3b80:1::efeb)
[08:58:10] *** Joins: VoidNoir0 (~VoidNoir0@72.80.203.52)
[08:58:10] *** Joins: Betal (~Betal@user/betal)
[08:58:10] *** Joins: NEYi (~NEYi@109.251.216.38)
[08:58:10] *** Joins: CalamityBlue (~CalamityB@cpe-108-185-144-94.socal.res.rr.com)
[08:58:10] *** Joins: joilerv_ (~joilerv@host86-191-93-41.range86-191.btcentralplus.com)
[08:58:10] *** Joins: lllh (~llh@198.48.244.21)
[08:58:10] *** Joins: dhch (~dhch@185.213.154.165)
[08:58:10] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[08:58:10] *** Joins: treble (~treble@user/treble)
[08:58:10] *** Joins: bindu (~bindu@user/bindu)
[08:58:10] *** Joins: braxas (sid508886@id-508886.lymington.irccloud.com)
[08:58:10] *** Joins: wangledorf (sid505185@id-505185.ilkley.irccloud.com)
[08:58:10] *** Joins: polyrob (~rob@user/polyrob)
[08:58:10] *** Joins: mitch0 (~mitch@94-21-221-155.pool.digikabel.hu)
[08:58:10] *** Joins: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8)
[08:58:10] *** Joins: fbiagent_ (~fbiagent@user/fbiagent)
[08:58:10] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[08:58:10] *** Joins: [R] (~rs@genoce.org)
[08:58:10] *** Joins: m_tadeu (~quassel@bl11-135-102.dsl.telepac.pt)
[08:58:10] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:346b:8ef4:4433:cb30)
[08:58:10] *** Joins: elemongw (~elemongw@20.107.36.50)
[08:58:10] *** Joins: letto (~letto@188.25.118.240)
[08:58:10] *** Joins: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch)
[08:58:10] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[08:58:10] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[08:58:10] *** Joins: andi_ (~andi@user/andi/x-3467420)
[08:58:10] *** Joins: causative (~halberd@user/causative)
[08:58:10] *** Joins: milia[m] (~mlliarmma@2001:470:69fc:105::1:4631)
[08:58:10] *** Joins: ville (~ville@82-181-178-111.bb.dnainternet.fi)
[08:58:10] *** Joins: mad_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca)
[08:58:10] *** Joins: highrate (~presonic@111-22-237-24.gci.net)
[08:58:10] *** Joins: millido (~millido@84.210.150.128)
[08:58:10] *** Joins: teepee (~teepee@openscad/teepee)
[08:58:10] *** Joins: cation (cation@user/cation)
[08:58:10] *** Joins: _SKiTZO (~dark@64.89-10-146.nextgentel.com)
[08:58:10] *** Joins: Green_ (~Green-@h-85-24-185-116.A189.priv.bahnhof.se)
[08:58:10] *** Joins: sunyour (~sunyour@129.226.182.99)
[08:58:10] *** Joins: peeps[zen] (~peepsalot@openscad/peepsalot)
[08:58:10] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[08:58:10] *** Joins: Fairy (~Fairy@ti0004a400-3806.bb.online.no)
[08:58:10] *** Joins: bdt (~bdt@155.51-174-24.customer.lyse.net)
[08:58:10] *** Joins: simpl_e (~user@user/simpl-e/x-8589812)
[08:58:10] *** Joins: henbruas (~henbruas@ti0003a400-4203.bb.online.no)
[08:58:10] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[08:58:10] *** Joins: NyB (~archon@81.6.39.62)
[08:58:10] *** Joins: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[08:58:10] *** Joins: ac_slater (~ac_slater@c-67-168-6-19.hsd1.wa.comcast.net)
[08:58:10] *** Joins: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net)
[08:58:10] *** Joins: introom (introom@2600:3c01::f03c:92ff:fea3:2cf)
[08:58:10] *** Joins: spithash (~spithash@user/spithash)
[08:58:10] *** Joins: llornkcor (~quassel@180-150-104-92.b49668.bne.static.aussiebb.net)
[08:58:10] *** Joins: Benett (~Benett@xnetx.de)
[08:58:10] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[08:58:10] *** Joins: lz_ (l@gateway/vpn/protonvpn/lz/x-63480406)
[08:58:10] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[08:58:10] *** Joins: CygniX (~CygniX@2a01:8740:1:727:4e:80:7f:2d)
[08:58:10] *** Joins: jaimelm (~jaimelm@deneb.emergentcommunitysystems.com)
[08:58:10] *** Joins: dv^_^ (~dv@eclipse.oxfordfun.com)
[08:58:10] *** Joins: voirnox (~voirnox@xor.moe)
[08:58:10] *** Joins: dwt_ (~dwt_@c-98-200-58-177.hsd1.tx.comcast.net)
[08:58:10] *** Joins: alex88 (~alex88@ip72-207-140-105.lv.lv.cox.net)
[08:58:10] *** Joins: zopsi (~zopsi@irc.dir.ac)
[08:58:10] *** Joins: dexter0 (~dexter0@c-69-181-126-161.hsd1.ca.comcast.net)
[08:58:10] *** Joins: Brewster (~Brewster@104.145.226.5)
[08:58:10] *** Joins: orthoplex64 (~crm@70.120.0.94)
[08:58:10] *** Joins: gnomesort (~gnomesort@user/gnomesort)
[08:58:10] *** Joins: obiwahn (~heini@user/obiwahn)
[08:58:10] *** Joins: IceMichael (~IceMichae@h2878436.stratoserver.net)
[08:58:10] *** Joins: beagles (~beagles@142.162.188.116)
[08:58:10] *** Joins: carrar (~tim@osburn.jp)
[08:58:10] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[08:58:10] *** Joins: Sadale (~Sadale@user/sadale)
[08:58:10] *** Joins: ethoxy (~caretaker@cx21.havox.ru)
[08:58:10] *** Joins: treeshateorcs[m] (~treeshate@2001:470:69fc:105::1:41c4)
[08:58:10] *** Joins: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net)
[08:58:10] *** Joins: Spydar007 (~spydar007@user/spydar007)
[08:58:10] *** Joins: tbcr_ (~tbcr@107.13.189.161)
[08:58:10] *** Joins: MarcoAlvarez[m] (~surakgnom@2001:470:69fc:105::2dc)
[08:58:10] *** Joins: shtumf[m] (~shtumfmat@2001:470:69fc:105::1:1b21)
[08:58:10] *** Joins: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4)
[08:58:10] *** Joins: hnOsmium0001[m] (~hnosmium0@2001:470:69fc:105::15d4)
[08:58:10] *** Joins: indy (~indy@dsl-static-104.213-160-167.telecom.sk)
[08:58:10] *** Joins: cursey (~cursey@user/cursey)
[08:58:10] *** Joins: manx (xuew@p200300e18f239d00022215fffe03cf97.dip0.t-ipconnect.de)
[08:58:10] *** Joins: moberg (~moberg@luke.millenniumfalcon.org)
[08:58:10] *** Joins: zygonsisyphus[m] (~zygonsisy@2001:470:69fc:105::482)
[08:58:10] *** Joins: Chaser (~Chaser@user/chaser)
[08:58:10] *** Joins: scjg (~scjgmatri@2001:470:69fc:105::f5d6)
[08:58:10] *** Joins: Pjerky (~Pjerky@81-234-143-135-no58.tbcn.telia.com)
[08:58:10] *** Joins: ElementW (~tungsten@hoodie.elementw.net)
[08:58:10] *** Joins: les (znc@user/les)
[08:58:10] *** Joins: markand (~markand@markand.fr)
[08:58:10] *** Joins: Isthmusi (~Isthmus@user/isveni)
[08:58:10] *** Joins: theglass (~glass@user/theglass)
[08:58:10] *** Joins: merry (~mary@user/merry)
[08:58:10] *** Joins: nolyc (~nolyc@tinodidriksen.com)
[08:58:10] *** Joins: randm (~randm@user/randm)
[08:58:10] *** Joins: deepy (deepy@user/deepy)
[08:58:10] *** Joins: cncr04s (~cncr04s@afxr.net)
[08:58:10] *** Joins: ZeroKnight (zeroknight@dimensionzero.net)
[08:58:10] *** Joins: Dijky (~Dijky@user/dijky)
[08:58:10] *** Joins: dextaa (~DV@user/dextaa)
[08:58:10] *** Joins: nurupo (~nurupo.ga@user/nurupo)
[08:58:10] *** Joins: urdh (~urdh@user/urdh)
[08:58:10] *** Joins: raekye (~raekye@creatifcubed.com)
[08:58:10] *** Joins: sonic (~sonic@user/sonic)
[08:58:10] *** Joins: hirion (~hirion@user/hirion)
[08:58:10] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[08:58:10] *** Joins: murphy__ (~murphy_@cpe-104-162-115-128.nyc.res.rr.com)
[08:58:10] *** Joins: Learath2 (~learath2@user/learath2)
[08:58:10] *** Joins: tobs (~tobs@taboege.de)
[08:58:10] *** Joins: GrecKo (~grecko@static.183.157.9.5.clients.your-server.de)
[08:58:10] *** Joins: zinc_ (~zinc@163.ip-51-254-203.eu)
[08:58:10] *** Joins: ullbeking_ (sid5364@id-5364.ilkley.irccloud.com)
[08:58:10] *** Joins: nohit (sid334887@id-334887.tinside.irccloud.com)
[08:58:10] *** Joins: e2 (e2@sponsored.by.bnc4you.xyz)
[08:58:10] *** Joins: manuels (~manuel@80.211.205.88)
[08:58:10] *** Joins: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net)
[08:58:10] *** Joins: martiert_work (~martiert@173.38.220.37)
[08:58:10] *** Joins: montpol (montpol@fine.mouses.xyz)
[08:58:10] *** Joins: EdFletcher (~PKD@user/edfletcher)
[08:58:10] *** Joins: ivzhh (~ivzhh@S0106f85e42a00a1f.cg.shawcable.net)
[08:58:10] *** Joins: Yamakaja (~yamakaja@user/yamakaja)
[08:58:10] *** Joins: hackkitten (~hackkitte@94.31.103.136)
[08:58:10] *** Joins: fluter (~fluter@user/fluter)
[08:58:10] *** Joins: useful_idiot (~useful_id@gateway/vpn/pia/usefulidiot/x-43226899)
[08:58:10] *** Joins: blo (~blo@user/blo)
[08:58:10] *** Joins: Praise (~Fat@user/praise)
[08:58:10] *** strontium.libera.chat sets mode: +v nolyc
[08:58:10] *** Joins: celphi_ (sid97751@user/celphi)
[08:58:10] *** Joins: buhman (sid411355@user/buhman)
[08:58:10] *** Joins: Argorok (sid195487@id-195487.hampstead.irccloud.com)
[08:58:10] *** Joins: stephe (sid14127@id-14127.lymington.irccloud.com)
[08:58:10] *** Joins: Manouchehri (sid384576@id-384576.hampstead.irccloud.com)
[08:58:10] *** Joins: greyblue9 (sid500829@id-500829.ilkley.irccloud.com)
[08:58:10] *** Joins: kristjansson_ (sid126207@id-126207.tinside.irccloud.com)
[08:58:10] *** Joins: computerquip (sid423484@user/computerquip)
[08:58:10] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[08:58:10] *** Joins: Beastie (~lcu@user/thebeastie)
[08:58:10] *** Joins: greenbagels (~gb@user/greenbagels)
[08:58:10] *** Joins: Dragoon (~Dragoon@user/dragoon)
[08:58:10] *** Joins: Moult (~sevenstro@sevenstrokes.net)
[08:58:10] *** Joins: djinni (~djinni@static.38.6.217.95.clients.your-server.de)
[08:58:10] *** Joins: webstran- (~webstrand@user/webstrand)
[08:58:10] *** Joins: tinloaf (~tinloaf@2a03:94e0:163c:57e:bc51:5c66:86e7:1)
[08:58:10] *** Joins: HeTo (henkka@beer.modeemi.fi)
[08:58:10] *** Joins: Griwes (~griwes@znc.reaver-project.org)
[08:58:10] *** Joins: m42e (~m42e@pb42.de)
[08:58:10] *** Joins: routeveg_ (~lee@197.ip-51-195-136.eu)
[08:58:10] *** Joins: supernov1h (~supernova@mail.ijk.nz)
[08:58:10] *** Joins: eck (~root@user/eck)
[08:58:10] *** Joins: dongcarl (~dongcarl@70.107.207.192)
[08:58:10] *** Joins: jkl1337 (~jkl@user/jkl)
[08:58:10] *** Joins: kornos_ (~kornos@2a04:ad80:0:fb::3b85)
[08:58:10] *** Joins: tonitch (~tonitch@user/tonitch)
[08:58:10] *** Joins: Cienisty (Cienisty@user/cienisty)
[08:58:10] *** Joins: krzych (krzych@nroot.pl)
[08:58:10] *** Joins: Svitkona (~Svitkona@157.245.38.135)
[08:58:10] *** Joins: taiyu (~taiyu@user/taiyu)
[08:58:10] *** Joins: abraham (~abraham@143.244.185.86)
[08:58:10] *** Joins: mukti (mukti@user/mukti)
[08:58:10] *** Joins: DrMax_ (~DrMax@132.215.96.36)
[08:58:10] *** Joins: ahlk (~user@2600:1700:31c0:3a10::43)
[08:58:10] *** Joins: hyper_dave (~hyper_dav@2a01:4f9:4a:246c::2)
[08:58:10] *** Joins: jiffe (~jiffe@mail.nsab.us)
[08:58:10] *** Joins: drmeister (sid45147@id-45147.ilkley.irccloud.com)
[08:58:10] *** Joins: scruffyfurn (scruffyfur@turbous.xshellz.com)
[08:58:10] *** Joins: imMute (~immute@user/immute)
[08:58:10] *** Joins: Xark (~Xark@47.156.11.28)
[08:58:10] *** Joins: [Brain] (~brain@cpc141994-chfd3-2-0-cust401.12-3.cable.virginm.net)
[08:58:10] *** Joins: tafa (~tafa@user/tafa)
[08:58:10] *** Joins: blackbeard420 (blackbeard@2600:3c03::f03c:91ff:fe92:3f2a)
[08:58:10] *** Joins: oldtopman (~oldtopman@c-71-205-4-123.hsd1.co.comcast.net)
[08:58:10] *** Joins: Jck_true (~jcktrue@user/jck-true/x-0200799)
[08:58:10] *** Joins: InPhase (~InPhase@openscad/inphase)
[08:58:10] *** Joins: Ara (~Ara@user/ara)
[08:58:10] *** Joins: Khoyo_ (~khoyo@ns328946.ip-37-187-115.eu)
[08:58:10] *** Joins: pippijn (~pippijn@ra.xinutec.org)
[08:58:10] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[08:58:10] *** Joins: amiti (sid373138@id-373138.lymington.irccloud.com)
[08:58:10] *** Joins: TingPing (sid2800@id-2800.helmsley.irccloud.com)
[08:58:10] *** Joins: blueminder_ (sid143388@id-143388.tinside.irccloud.com)
[08:58:10] *** Joins: lhtseng (sid15322@id-15322.helmsley.irccloud.com)
[08:58:10] *** Joins: tcsc (sid145321@5.254.36.59)
[08:58:10] *** Joins: Bodger1234_ (sid503511@id-503511.uxbridge.irccloud.com)
[08:58:10] *** Joins: IUSR (sid348938@id-348938.hampstead.irccloud.com)
[08:58:10] *** Joins: glenfe (sid231748@user/glenfe)
[08:58:10] *** Joins: cengiz_io (sid223191@id-223191.ilkley.irccloud.com)
[08:58:10] *** Joins: catern (~sbaugh@cpe-98-7-229-235.nyc.res.rr.com)
[08:58:10] *** Joins: renopt (~renopt@lisp.us.to)
[08:58:10] *** Joins: jellie (~luv_panda@user/jellie)
[08:58:10] *** Joins: tct (~tct@8.200.173.83.static.wline.lns.sme.cust.swisscom.ch)
[08:58:10] *** Joins: entooth[m] (~entoothch@2001:470:69fc:105::1:3b1d)
[08:58:10] *** Joins: Gamah (~quassel@gamah.net)
[08:58:10] *** Joins: headline (sid102736@tinside.irccloud.com)
[08:58:10] *** Joins: termos (sid18647@helmsley.irccloud.com)
[08:58:10] *** Joins: gendl (sid100083@hampstead.irccloud.com)
[08:58:10] *** Joins: anzu (~anzu@melkki.cs.helsinki.fi)
[08:58:10] *** Joins: sideshowbarker[m (~sideshowb@2001:470:69fc:105::9a16)
[08:58:10] *** Joins: megaTherion (~therion@unix.io)
[08:58:10] *** Joins: mrkajetanp (~mrkajetan@2a01:4b00:ea36:6c00:7994:941c:3f5d:2b88)
[08:58:10] *** Joins: irc-open-up (bounce@bounce.nastycode.com)
[08:58:10] *** Joins: derwolf (~DerWolf@2a01:4f8:c0c:554a::1)
[08:58:10] *** Joins: AAAAA_DRAGON (A_D@libera/staff/dragon)
[08:58:10] *** Joins: vancz (~vancz@user/vancz)
[08:58:10] *** Joins: sam113101 (~sam@modemcable229.128-202-24.mc.videotron.ca)
[08:58:10] *** Joins: mebus (~mebus@2a00:8a60:e019:10de::ac22)
[08:58:10] *** Joins: Soliton (~Soliton@wesnoth/developer/soliton)
[08:58:10] *** Joins: roxlu (~roxlu@2a01:7c8:aac0:286:8c3a:b01c:3830:245b)
[08:58:10] *** Joins: xrj (~av@2a01:4f8:c17:7cba::1)
[08:58:10] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[08:58:10] *** Joins: geordi (~geordi@tinodidriksen.com)
[08:58:10] *** Joins: Nixx (~quassel@bulbasaur.sjorsgielen.nl)
[08:58:10] *** Joins: Xizor_ (~Xizor@151.ip-51-68-121.eu)
[08:58:10] *** Joins: f0xb4t (~mac@78.46.13.69)
[08:58:10] *** Joins: kalven (~calvin@2a02:470:84:102::24)
[08:58:10] *** Joins: miklcct (~quassel@vps2.miklcct.com)
[08:58:10] *** Joins: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016)
[08:58:10] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[08:58:10] *** Joins: volgar1x (~volgar1xm@2001:470:69fc:105::e61d)
[08:58:10] *** Joins: happy-dude (~happy-dud@2001:470:69fc:105::b4d7)
[08:58:10] *** Joins: kikijiki[m] (~kikijiki@user/kikijiki)
[08:58:10] *** Joins: equinox[m] (~momoshiki@2001:470:69fc:105::fe92)
[08:58:10] *** strontium.libera.chat sets mode: +v geordi
[08:58:10] *** Joins: m1cl[m] (~m1cl@2001:470:69fc:105::2d57)
[08:58:10] *** Joins: Stewart (~stewart@2001:470:69fc:105::1:6cd)
[08:58:10] *** Joins: JoeyLong[m] (~tezzy26ma@2001:470:69fc:105::1:3333)
[08:58:10] *** Joins: arconte[m] (~arcontema@2001:470:69fc:105::1:2fe4)
[08:58:10] *** Joins: Cupcake[m] (~cupcakezo@2001:470:69fc:105::1:17bd)
[08:58:10] *** Joins: bitonic (~bitonic@2001:470:69fc:105::1812)
[08:58:10] *** Joins: ruediger (~ruediger@user/ruediger)
[08:58:10] *** Joins: b_jonas (~x@catv-176-63-4-16.catv.broadband.hu)
[08:58:10] *** Joins: Nnnavd (~Nnavd@ec2-34-220-224-214.us-west-2.compute.amazonaws.com)
[08:58:10] *** Joins: rdrg109 (~rdrg109@user/rdrg109)
[08:58:10] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[08:58:10] *** Joins: pnill (~pnill@ip170.ip-54-39-37.net)
[08:58:10] *** Joins: pieguy128 (~pieguy128@bas1-quebec14-67-70-102-17.dsl.bell.ca)
[08:58:10] *** Joins: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl)
[08:58:10] *** Joins: phoenix (phoenix@user/phoenix)
[08:58:10] *** Joins: Exa (exa@irc.moe)
[08:58:10] *** Joins: malinus (~malinus@172.245.158.16)
[08:58:10] *** Joins: Friithian (gunqqer@friithian.dev)
[08:58:10] *** Joins: BtbN (btbn@ffmpeg/developer/btbn)
[08:58:10] *** Joins: biberu (~biberu@user/biberu)
[08:58:10] *** Joins: dansan (~daniel@75.81.148.51)
[08:58:10] *** Joins: edr (~edr@user/edr)
[08:58:10] *** Joins: BrandonArnold (~brandon@ec2-52-27-188-210.us-west-2.compute.amazonaws.com)
[08:58:10] *** Joins: reda_ (~reda@user/reda)
[08:58:10] *** Joins: rogorido_ (~rogorido@mail.georeligion.org)
[08:58:10] *** Joins: dzz007 (~dzz007@user/dzz007)
[08:58:10] *** Joins: bone (~bone@user/mbo)
[08:58:10] *** Joins: talisein (~talisein@user/talisein)
[08:58:10] *** Joins: purplex_ (~purplex@user/purplex)
[08:58:10] *** Joins: statusfailed (~statusfai@statusfailed.com)
[08:58:10] *** Joins: jason1234 (fltk@thunix.net)
[08:58:10] *** Joins: orkim (~orkim@user/orkim)
[08:58:10] *** Joins: chiptuner (~bobby@user/chiptuner)
[08:58:10] *** Joins: enyc (~enyc@user/enyc)
[08:58:10] *** Joins: ndorf (~nd@ob.noxio.us)
[08:58:10] *** Joins: michaelis (~michaelis@193.183.209.17)
[08:58:10] *** Joins: andreyv (~andrey@user/andreyv)
[08:58:10] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[08:58:10] *** Joins: ERROH (~mama@user/mama)
[08:58:10] *** Joins: ollien (~ollien@ollien.com)
[08:58:10] *** Joins: wyre (~wyre@user/wyre)
[08:58:10] *** Joins: rochadt (~rochadt@24.148.29.135)
[08:58:10] *** Joins: lloda (~user@11-206-127-185.static.world-connect.ch)
[08:58:10] *** Joins: sebbu (~sebbu@user/sebbu)
[08:58:10] *** Joins: MrC (Ben@mrbenc.net)
[08:58:10] *** Joins: Flannel (~flannel@user/flannel)
[08:58:10] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[08:58:10] *** Joins: Hobbyboy (Hobbyboy@hobbyboy.co.uk)
[08:58:10] *** Joins: kkd (~kkd@255.205.154.104.bc.googleusercontent.com)
[08:58:10] *** Joins: shenghi (~shenghi@chrysocolla.mutablevoid.org)
[08:58:10] *** Joins: oj (oj@user/oj)
[08:58:10] *** Joins: majors (~majors@user/majors)
[08:58:10] *** Joins: nedbat (~nedbat@python/psf/nedbat)
[08:58:10] *** Joins: DrinkyBird (~drinkybir@idlerpg/player/DrinkyBird)
[08:58:10] *** Joins: fruitypunk (~user@2a01:7c8:aaaa:12:5054:ff:fe69:1df9)
[08:58:10] *** Joins: Artea (~Lufia@artea.com.pt)
[08:58:10] *** Joins: Latexi95 (late@banhammer.fi)
[08:58:10] *** Joins: dzoe (joe@joe.cz)
[08:58:10] *** Joins: klys_ (~mdasoh@show.op8.us)
[08:58:10] *** Joins: Karyon (~Karyon@user/karyon)
[08:58:10] *** Joins: Haise0 (~haise01@user/haise01)
[08:58:10] *** Joins: rpav (~rpav@user/rpav)
[08:58:10] *** Joins: dartmouthed (~blackunsp@li761-35.members.linode.com)
[08:58:13] *** Quits: koolazer (~koo@user/koolazer) (Max SendQ exceeded)
[08:58:15] *** Quits: shailangsa (~shailangs@host86-186-142-82.range86-186.btcentralplus.com) (Max SendQ exceeded)
[08:58:26] *** Quits: Exa (exa@irc.moe) (Max SendQ exceeded)
[08:58:27] *** Joins: Exa (exa@irc.moe)
[08:58:27] *** Quits: zopsi (~zopsi@irc.dir.ac) (Max SendQ exceeded)
[08:58:28] *** Joins: zopsi (zopsi@2600:3c00::f03c:91ff:fe14:551f)
[08:58:36] *** Joins: koolazer (~koo@user/koolazer)
[08:59:31] *** Quits: elemongw (~elemongw@20.107.36.50) (Ping timeout: 256 seconds)
[08:59:45] *** Joins: the_lanetly_052 (~the_lanet@194.135.153.196)
[09:00:16] *** Quits: Colt (~Colt@user/colt) (Remote host closed the connection)
[09:00:28] *** Joins: CormacAttack (~mac@144.62.50.200)
[09:00:41] *** Joins: Colt (~Colt@user/colt)
[09:01:49] *** Joins: elemongw (~elemongw@20.107.36.50)
[09:02:33] *** Quits: the_lanetly_052_ (~the_lanet@194.135.166.91) (Ping timeout: 252 seconds)
[09:02:45] *** Joins: shailangsa (~shailangs@host86-186-142-82.range86-186.btcentralplus.com)
[09:03:50] *** Quits: rgrinberg (~textual@2806:101e:7:7c2f:99ad:1649:a2c7:9e20) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:05:06] *** Quits: tesuji (~quassel@2a02:908:180:9500:712e:1c30:1e5e:7145) (Ping timeout: 268 seconds)
[09:07:30] *** Quits: CormacAttack (~mac@144.62.50.200) (Quit: WeeChat 3.3)
[09:07:33] *** Quits: montpol (montpol@fine.mouses.xyz) (*.net *.split)
[09:07:33] *** Quits: Yamakaja (~yamakaja@user/yamakaja) (*.net *.split)
[09:07:33] *** Quits: hackkitten (~hackkitte@94.31.103.136) (*.net *.split)
[09:07:33] *** Quits: djinni (~djinni@static.38.6.217.95.clients.your-server.de) (*.net *.split)
[09:07:33] *** Quits: webstran- (~webstrand@user/webstrand) (*.net *.split)
[09:07:33] *** Quits: HeTo (henkka@beer.modeemi.fi) (*.net *.split)
[09:07:33] *** Quits: mukti (mukti@user/mukti) (*.net *.split)
[09:07:33] *** Quits: tct (~tct@8.200.173.83.static.wline.lns.sme.cust.swisscom.ch) (*.net *.split)
[09:07:33] *** Quits: sideshowbarker[m (~sideshowb@2001:470:69fc:105::9a16) (*.net *.split)
[09:07:33] *** Quits: kikijiki[m] (~kikijiki@user/kikijiki) (*.net *.split)
[09:07:33] *** Quits: ruediger (~ruediger@user/ruediger) (*.net *.split)
[09:07:33] *** Quits: arconte[m] (~arcontema@2001:470:69fc:105::1:2fe4) (*.net *.split)
[09:07:33] *** Quits: majors (~majors@user/majors) (*.net *.split)
[09:07:33] *** Quits: nedbat (~nedbat@python/psf/nedbat) (*.net *.split)
[09:07:33] *** Quits: DrinkyBird (~drinkybir@idlerpg/player/DrinkyBird) (*.net *.split)
[09:07:33] *** Quits: fruitypunk (~user@2a01:7c8:aaaa:12:5054:ff:fe69:1df9) (*.net *.split)
[09:07:33] *** Quits: Artea (~Lufia@artea.com.pt) (*.net *.split)
[09:07:34] *** Quits: Latexi95 (late@banhammer.fi) (*.net *.split)
[09:07:34] *** Quits: dzoe (joe@joe.cz) (*.net *.split)
[09:07:34] *** Quits: klys_ (~mdasoh@show.op8.us) (*.net *.split)
[09:07:34] *** Quits: Karyon (~Karyon@user/karyon) (*.net *.split)
[09:07:34] *** Quits: Haise0 (~haise01@user/haise01) (*.net *.split)
[09:07:40] *** Joins: dzoe (joe@joe.cz)
[09:07:42] *** Joins: Latexi95 (late@banhammer.fi)
[09:07:43] *** Joins: DrinkyBird (~drinkybir@idlerpg/player/DrinkyBird)
[09:07:43] *** Joins: HeTo (henkka@beer.modeemi.fi)
[09:07:47] *** Joins: Artea (~Lufia@artea.com.pt)
[09:07:49] *** Joins: klys (~mdasoh@show.op8.us)
[09:07:57] *** Joins: hackkitten (~hackkitte@94.31.103.136)
[09:07:58] *** Joins: fruitypunk (~user@2a01:7c8:aaaa:12:5054:ff:fe69:1df9)
[09:08:04] *** Joins: mukti (mukti@bitcommit.io)
[09:08:04] *** Joins: Karyon (~Karyon@user/karyon)
[09:08:07] *** Joins: haise01 (~haise01@user/haise01)
[09:08:07] *** Quits: mukti (mukti@bitcommit.io) (Signing in (mukti))
[09:08:07] *** Joins: mukti (mukti@user/mukti)
[09:08:18] *** Joins: montpol (montpol@fine.mouses.xyz)
[09:08:24] *** Joins: webstrand (~webstrand@user/webstrand)
[09:08:27] *** Joins: tct (~tct@8.200.173.83.static.wline.lns.sme.cust.swisscom.ch)
[09:08:31] *** Joins: nedbat (~nedbat@python/psf/nedbat)
[09:08:38] *** Joins: ruediger (~ruediger@user/ruediger)
[09:08:50] *** Joins: Yamakaja (~yamakaja@vps.pub.yamakaja.me)
[09:08:51] *** Quits: Yamakaja (~yamakaja@vps.pub.yamakaja.me) (Changing host)
[09:08:51] *** Joins: Yamakaja (~yamakaja@user/yamakaja)
[09:08:52] *** Joins: majors (~majors@user/majors)
[09:09:58] *** Joins: djinni (~djinni@static.38.6.217.95.clients.your-server.de)
[09:12:12] *** Joins: sideshowbarker[m (~sideshowb@2001:470:69fc:105::9a16)
[09:13:29] *** Quits: callq (~callq@157.41.190.133) (Quit: callq)
[09:16:22] *** Joins: kikijiki[m] (~kikijiki@user/kikijiki)
[09:16:50] *** Joins: arconte[m] (~arcontema@2001:470:69fc:105::1:2fe4)
[09:20:28] *** Quits: buhman (sid411355@user/buhman) (*.net *.split)
[09:20:28] *** Quits: Argorok (sid195487@id-195487.hampstead.irccloud.com) (*.net *.split)
[09:20:28] *** Quits: stephe (sid14127@id-14127.lymington.irccloud.com) (*.net *.split)
[09:20:28] *** Quits: Beastie (~lcu@user/thebeastie) (*.net *.split)
[09:20:28] *** Quits: imMute (~immute@user/immute) (*.net *.split)
[09:20:28] *** Quits: Xark (~Xark@47.156.11.28) (*.net *.split)
[09:20:28] *** Quits: [Brain] (~brain@cpc141994-chfd3-2-0-cust401.12-3.cable.virginm.net) (*.net *.split)
[09:20:28] *** Quits: amiti (sid373138@id-373138.lymington.irccloud.com) (*.net *.split)
[09:20:28] *** Quits: blueminder_ (sid143388@id-143388.tinside.irccloud.com) (*.net *.split)
[09:20:28] *** Quits: lhtseng (sid15322@id-15322.helmsley.irccloud.com) (*.net *.split)
[09:20:28] *** Quits: m1cl[m] (~m1cl@2001:470:69fc:105::2d57) (*.net *.split)
[09:20:28] *** Quits: ormaaj (~ormaaj@user/ormaaj) (*.net *.split)
[09:20:28] *** Quits: phoenix (phoenix@user/phoenix) (*.net *.split)
[09:20:29] *** Quits: malinus (~malinus@172.245.158.16) (*.net *.split)
[09:20:29] *** Quits: rpav (~rpav@user/rpav) (*.net *.split)
[09:20:29] *** Quits: dartmouthed (~blackunsp@li761-35.members.linode.com) (*.net *.split)
[09:20:35] *** Joins: malinus (~malinus@172.245.158.16)
[09:20:36] *** Joins: stephe (sid14127@id-14127.lymington.irccloud.com)
[09:20:37] *** Joins: Argorok (sid195487@id-195487.hampstead.irccloud.com)
[09:20:38] *** Joins: blueminder_ (sid143388@id-143388.tinside.irccloud.com)
[09:20:42] *** Joins: imMute (~immute@user/immute)
[09:20:48] *** Joins: buhman (sid411355@user/buhman)
[09:20:52] *** Joins: Beastie (~lcu@dkv8mfyycfr3s--xk0pzt-3.rev.dnainternet.fi)
[09:20:52] *** Joins: [Brain] (~brain@cpc141994-chfd3-2-0-cust401.12-3.cable.virginm.net)
[09:20:55] *** Joins: amiti (sid373138@id-373138.lymington.irccloud.com)
[09:20:56] *** Joins: lhtseng (sid15322@id-15322.helmsley.irccloud.com)
[09:21:05] *** Joins: phoenix (phoenix@sdf.org)
[09:21:08] *** Quits: Beastie (~lcu@dkv8mfyycfr3s--xk0pzt-3.rev.dnainternet.fi) (Changing host)
[09:21:08] *** Joins: Beastie (~lcu@user/thebeastie)
[09:21:48] *** phoenix is now known as Guest4008
[09:22:21] *** Quits: Linux77 (~7Linux7@186.233.182.193) (Ping timeout: 252 seconds)
[09:22:44] *** Joins: Xark (~Xark@47.156.11.28)
[09:22:49] *** Joins: rpav (~rpav@user/rpav)
[09:24:52] *** Joins: dartmouthed (~blackunsp@li761-35.members.linode.com)
[09:25:56] *** Joins: nicholaus04 (~nicholaus@2607:fb90:e58c:fb6a:5919:1c10:2420:8d8)
[09:26:22] *** Joins: Linux77 (~7Linux7@186.233.182.193)
[09:26:45] *** Joins: m1cl[m] (~m1cl@2001:470:69fc:105::2d57)
[09:27:06] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[09:28:07] *** Joins: nostar__ (~nostar@68.51.221.108)
[09:30:41] *** Quits: nostar__ (~nostar@68.51.221.108) (Client Quit)
[09:30:45] *** Quits: nostart (~nostar@192.154.196.126) (Ping timeout: 256 seconds)
[09:35:31] *** Joins: mattallmill (~mattallmi@ip68-103-132-187.ks.ok.cox.net)
[09:39:06] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:39:14] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:39:14] *** ChanServ sets mode: +v npaperbot
[09:39:19] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[09:40:33] *** Joins: ElectronApps (~ElectronA@user/electronapps)
[09:41:53] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:43:32] *** Quits: dansan (~daniel@75.81.148.51) (Ping timeout: 240 seconds)
[10:04:18] *** Quits: Tokamak (~Tokamak@172.58.191.55) (Ping timeout: 268 seconds)
[10:07:56] *** Joins: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com)
[10:09:08] *** Joins: Tokamak (~Tokamak@172.58.188.99)
[10:10:51] *** Joins: Tokamak_ (~Tokamak@172.58.191.55)
[10:12:43] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:13:49] *** Quits: Tokamak (~Tokamak@172.58.188.99) (Ping timeout: 256 seconds)
[10:16:13] *** Quits: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com) (Quit: Client closed)
[10:16:26] *** Quits: mattallmill (~mattallmi@ip68-103-132-187.ks.ok.cox.net) (Ping timeout: 265 seconds)
[10:20:09] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[10:20:12] *** Joins: CaCode_ (~CaCode@user/cacode)
[10:23:02] *** Quits: CaCode (~CaCode@user/cacode) (Ping timeout: 252 seconds)
[10:27:44] *** Joins: CarloWood (~LdK13@212-127-230-18.cable.dynamic.v4.ziggo.nl)
[10:32:16] *** Joins: JohnMS_WORK (~kvirc@89-64-71-70.dynamic.chello.pl)
[10:33:40] *** Joins: tesuji (~quassel@2a02:908:180:9500:51ac:976d:f091:fa02)
[10:40:01] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:6993:39fb:9bc8:e953)
[10:41:51] *** Joins: evangeline (~Eleanor@178.79.105.181)
[10:42:02] *** Joins: night_wulfe (~wulfe@5.181.234.227)
[10:43:23] *** Quits: sprout_ (~quassel@2a02:a467:ccd6:1:39f3:76e9:9ca1:32bd) (Ping timeout: 252 seconds)
[10:45:33] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[10:45:35] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[10:48:53] *** Joins: caramel (~caramel@user/caramel)
[10:53:17] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[10:54:03] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 256 seconds)
[10:54:37] *** vdamewood is now known as Guest1016
[10:54:37] *** Quits: Guest1016 (~vdamewood@fedora/vdamewood) (Killed (zinc.libera.chat (Nickname regained by services)))
[10:54:37] *** vinleod is now known as vdamewood
[10:55:32] *** Joins: the_lanetly_052_ (~the_lanet@194.135.153.194)
[10:55:45] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[10:57:27] *** Quits: the_lanetly_052 (~the_lanet@194.135.153.196) (Ping timeout: 256 seconds)
[10:57:45] *** Quits: ville (~ville@82-181-178-111.bb.dnainternet.fi) (Quit: Lost terminal)
[10:59:32] *** Joins: ville (~ville@82-181-178-111.bb.dnainternet.fi)
[11:06:32] *** Joins: the_lanetly_052 (~the_lanet@194.135.152.208)
[11:08:13] *** Quits: the_lanetly_052_ (~the_lanet@194.135.153.194) (Ping timeout: 240 seconds)
[11:08:56] *** Joins: the_lanetly_052_ (~the_lanet@194.135.155.53)
[11:09:38] *** Joins: rendar (~rendar@user/rendar)
[11:09:46] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[11:11:17] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[11:11:37] *** Quits: the_lanetly_052 (~the_lanet@194.135.152.208) (Ping timeout: 252 seconds)
[11:13:52] *** Joins: the_lanetly_052 (~the_lanet@194.135.153.101)
[11:14:55] *** Quits: the_lanetly_052_ (~the_lanet@194.135.155.53) (Ping timeout: 252 seconds)
[11:16:38] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[11:16:45] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[11:19:09] *** Joins: supernova (~quassel@2405:9800:ba11:6207:73f2:14ac:a94f:d439)
[11:21:03] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[11:21:25] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Client Quit)
[11:24:26] *** Joins: the_lanetly_052_ (~the_lanet@194.135.155.220)
[11:25:05] *** Quits: night_wulfe (~wulfe@5.181.234.227) (Ping timeout: 268 seconds)
[11:25:28] *** Joins: LucaTM (~LucaTM@user/lucatm)
[11:26:34] *** Quits: heiner (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2) (Remote host closed the connection)
[11:26:41] *** Quits: heiner_ (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2) (Read error: Connection reset by peer)
[11:27:01] *** Quits: the_lanetly_052 (~the_lanet@194.135.153.101) (Ping timeout: 252 seconds)
[11:29:03] *** Joins: fdged (~fdged@178.49.152.42)
[11:34:39] *** Joins: Tas-sos (~Tas-sos@ppp079167204100.access.hol.gr)
[11:34:43] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:3dd4:62ea:1192:2511) (Ping timeout: 252 seconds)
[11:37:05] *** Joins: the_lanetly_052 (~the_lanet@194.135.153.146)
[11:38:36] *** Quits: the_lanetly_052_ (~the_lanet@194.135.155.220) (Ping timeout: 265 seconds)
[11:42:57] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:45:25] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:8a23:3305:79f5:f3b8)
[11:50:44] *** Joins: john99 (~johnny@138.62.221.87.dynamic.jazztel.es)
[11:54:38] *** Joins: andreasbuhr (~quassel@p548ddc5e.dip0.t-ipconnect.de)
[11:54:53] *** Quits: andreasbuhr (~quassel@p548ddc5e.dip0.t-ipconnect.de) (Client Quit)
[11:54:59] *** Quits: fdged (~fdged@178.49.152.42) (Quit: Client closed)
[11:56:18] *** Joins: andreasbuhr (~quassel@p548ddc5e.dip0.t-ipconnect.de)
[11:58:49] *** Joins: reset (~reset@user/reset)
[11:59:17] *** Joins: Hax0r (~Hax0r@93.169.49.84)
[11:59:19] *** Quits: Hax0r (~Hax0r@93.169.49.84) (Max SendQ exceeded)
[11:59:37] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[12:00:57] *** Joins: EdFletcher (~PKD@user/edfletcher)
[12:04:19] *** Joins: Hax0r (~Hax0r@93.169.49.84)
[12:04:32] *** Joins: the_lanetly_052_ (~the_lanet@194.135.153.120)
[12:05:33] *** Joins: seninha (~seninha@user/seninha)
[12:06:13] *** Quits: the_lanetly_052 (~the_lanet@194.135.153.146) (Ping timeout: 240 seconds)
[12:08:31] *** Quits: Hax0r (~Hax0r@93.169.49.84) (Client Quit)
[12:11:45] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:f5d2:447c:d749:7070)
[12:12:08] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[12:12:33] *** Quits: aleios (~aleios@user/aleios) (Quit: WeeChat 3.3)
[12:12:34] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[12:12:41] *** Quits: reset (~reset@user/reset) (Quit: reset)
[12:14:27] *** Joins: reset (~reset@user/reset)
[12:15:51] *** Joins: robod34 (Username@79.113.195.239)
[12:23:21] *** Joins: aLeSD (~aLeSD@139.47.114.114)
[12:26:54] *** Joins: slidercrank (~slidercra@user/slidercrank)
[12:31:11] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 252 seconds)
[12:31:32] *** AAAAA_DRAGON is now known as A_Dragon
[12:33:09] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[12:33:23] <manuels> where is a good place to get started with cmake_packages? i want to provide it for a library. it should enable find_package and have some predefined functions. is cmake_package appropriate for the latter at all?do you know any small projects as reference? mabe not like KDE
[12:37:25] <TinoDidriksen> Ask #cmake or #C++-general - it's off topic here.
[12:45:50] *** Joins: Guest31 (~Guest31@2001-4dd3-5263-0-dc2e-d36-bd92-b1bb.ipv6dyn.netcologne.de)
[12:48:00] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[12:48:41] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 265 seconds)
[12:49:25] *** Quits: karakedi (~eAC53C340@user/karakedi) (Read error: Connection reset by peer)
[12:49:32] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[12:49:49] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[12:49:57] *** Quits: aLeSD (~aLeSD@139.47.114.114) (Quit: Leaving)
[12:50:04] *** Joins: furrymcgee (~devuan@cgn-89-1-209-182.nc.de)
[12:50:14] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[12:50:38] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[12:53:20] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[12:54:11] *** Joins: aLeSD (~aLeSD@139.47.114.114)
[12:55:20] *** Joins: pulse (~pulse@user/pulse)
[12:57:34] *** Joins: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com)
[12:57:50] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[12:57:56] <john99> Hi, i need reimplement the log library hand made that we was using in the work becouse we are moving to k8s and i was thinking if someone have some experience that can share or some advice about libraries or tools that can be used?
[12:58:32] <john99> uff, yes, to general
[12:58:35] <john99> sorry
[13:02:16] <Guest31> Hi, does somebody have tipps on how to debug my program, when it works in debug mode and not in release mode with cmake? Any typical issues on that?
[13:02:59] <john99> gdb?
[13:04:28] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[13:04:52] *** Joins: karakedi (~eAC53C340@user/karakedi)
[13:06:49] *** Quits: aLeSD (~aLeSD@139.47.114.114) (Quit: Leaving)
[13:06:58] *** Joins: aLeSD (~aLeSD@139.47.114.114)
[13:07:18] *** Quits: aLeSD (~aLeSD@139.47.114.114) (Client Quit)
[13:07:26] *** Joins: aLeSD (~aLeSD@139.47.114.114)
[13:07:54] *** Joins: cart_man (~rynot@62.60.61.36)
[13:08:38] *** Quits: cart_man (~rynot@62.60.61.36) (Read error: Connection reset by peer)
[13:09:22] *** Joins: cart_man (~rynot@62.60.61.36)
[13:11:08] <ent58> Guest31: you have invoked, possibly, the undefined behavior beast, and the compiler is optimizing something it believes it should be able to, breaking your expectations (and spirit)
[13:11:14] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[13:11:24] <ent58> so the release build dies
[13:11:57] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[13:14:56] *** Quits: caramel (~caramel@user/caramel) (Read error: Connection reset by peer)
[13:19:31] <anyone> if it dies, it dies.
[13:22:40] <john99> Guest31 to my happened often, in the worst situation you an generate the debug info in a separate file and debug against taht with GDB but yes, probably you are simply doing some UB
[13:23:39] *** Quits: artok (~azo@mobile-access-5672c9-83.dhcp.inet.fi) (Ping timeout: 256 seconds)
[13:23:56] *** Joins: plastico (~plastico@neomutt/plastico)
[13:23:58] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 265 seconds)
[13:24:38] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[13:26:08] *** Joins: PJBoy (~PJBoy@host81-158-196-74.range81-158.btcentralplus.com)
[13:26:08] *** Quits: PJBoy (~PJBoy@host81-158-196-74.range81-158.btcentralplus.com) (Changing host)
[13:26:08] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:27:02] *** Joins: qft (~mzhang@69-222-187-165.lightspeed.sntcca.sbcglobal.net)
[13:29:48] *** Quits: PJBoy (~PJBoy@user/pjboy) (Client Quit)
[13:32:33] *** Joins: PJBoy (~PJBoy@host81-158-196-74.range81-158.btcentralplus.com)
[13:32:33] *** Quits: PJBoy (~PJBoy@host81-158-196-74.range81-158.btcentralplus.com) (Changing host)
[13:32:33] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:33:42] *** Quits: Dreg (~Dreg@fr33project.org) (Read error: Connection reset by peer)
[13:34:16] *** Joins: Dreg (~Dreg@fr33project.org)
[13:34:28] *** Joins: seninha (~seninha@user/seninha)
[13:37:15] *** Quits: qft (~mzhang@69-222-187-165.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 256 seconds)
[13:38:58] *** Joins: Ivii (~Ivyy@2001:a62:4c3:8e01:d2d2:a0ff:11ef:96ea)
[13:39:06] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:39:15] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:39:15] *** ChanServ sets mode: +v npaperbot
[13:39:49] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 240 seconds)
[13:40:27] *** Joins: tmm88 (~tmm88@user/tmm88)
[13:41:20] *** Joins: qft (~mzhang@69-222-187-165.lightspeed.sntcca.sbcglobal.net)
[13:41:42] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[13:41:52] *** Quits: badone (~badone@209.132.189.152) (Quit: ZNC 1.7.5 - https://znc.in)
[13:43:57] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[13:44:45] *** Quits: rendar (~rendar@user/rendar) (Ping timeout: 265 seconds)
[13:47:11] *** Joins: Dave_R (~Dave_R@home.amunra.co.uk)
[13:50:06] *** Quits: Dreg (~Dreg@fr33project.org) (Read error: Connection reset by peer)
[13:50:46] *** Joins: Dreg (~Dreg@fr33project.org)
[13:53:03] *** Quits: Dave_R (~Dave_R@home.amunra.co.uk) (Quit: Textual IRC Client: www.textualapp.com)
[13:56:21] *** Joins: Dave_R (~Dave_R@home.amunra.co.uk)
[13:57:45] *** Joins: Brainium (~brainium@user/brainium)
[13:58:44] *** Joins: artok (~azo@mobile-access-5672c9-83.dhcp.inet.fi)
[14:00:17] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 252 seconds)
[14:02:38] *** Quits: qft (~mzhang@69-222-187-165.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 265 seconds)
[14:02:39] *** Joins: rendar (~rendar@user/rendar)
[14:04:18] *** Quits: decartes_ (sid240036@id-240036.helmsley.irccloud.com) ()
[14:04:34] *** Joins: decartes_ (sid240036@id-240036.helmsley.irccloud.com)
[14:04:45] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[14:05:09] *** Quits: decartes_ (sid240036@id-240036.helmsley.irccloud.com) (Client Quit)
[14:05:22] *** Joins: decartes (sid240036@id-240036.helmsley.irccloud.com)
[14:06:55] *** Joins: nofx (~i.am@189.26.169.41.dynamic.adsl.gvt.net.br)
[14:19:08] *** Joins: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net)
[14:20:30] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[14:30:13] *** Quits: cart_man (~rynot@62.60.61.36) (Ping timeout: 240 seconds)
[14:30:58] *** Joins: smartin (~Thunderbi@88.135.18.171)
[14:32:42] *** Quits: cursey (~cursey@user/cursey) (Quit: bye)
[14:33:45] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[14:34:09] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[14:34:27] *** Joins: proller (~p@80.240.216.69)
[14:35:53] <ville> Guest31: you should set up your build system so that making various sanitizer builds is as easy as making a debug or release build. a topic for #c++-general
[14:38:27] *** Quits: chenqisu1 (~03cia7d@183.217.201.63) (Ping timeout: 256 seconds)
[14:40:13] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 240 seconds)
[14:41:28] *** Joins: xkuru (~xkuru@user/xkuru)
[14:42:26] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[14:42:29] *** Quits: nicholaus04 (~nicholaus@2607:fb90:e58c:fb6a:5919:1c10:2420:8d8) (Quit: Joined Game)
[14:42:37] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 240 seconds)
[14:47:51] *** Joins: cursey (~cursey@user/cursey)
[14:51:29] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 256 seconds)
[14:51:41] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[14:53:26] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[14:56:24] *** Quits: CaCode_ (~CaCode@user/cacode) (Quit: Leaving)
[14:57:12] *** Joins: caramel (~caramel@user/caramel)
[15:03:16] *** Joins: chenqisu1 (~03cia7d@183.217.201.63)
[15:03:19] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[15:04:05] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:09:10] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[15:10:51] *** Joins: cart_man (~rynot@213.205.241.185)
[15:12:27] *** Quits: the_lanetly_052_ (~the_lanet@194.135.153.120) (Ping timeout: 256 seconds)
[15:13:37] *** Quits: JohnMS_WORK (~kvirc@89-64-71-70.dynamic.chello.pl) (Ping timeout: 252 seconds)
[15:15:33] *** Joins: vhqr (~user@120.194.8.115)
[15:16:57] *** Quits: rendar (~rendar@user/rendar) (Ping timeout: 268 seconds)
[15:21:54] *** Quits: chenqisu1 (~03cia7d@183.217.201.63) (Ping timeout: 265 seconds)
[15:22:02] *** Quits: shailangsa (~shailangs@host86-186-142-82.range86-186.btcentralplus.com) ()
[15:25:40] <Guest31> ville what do you mean by santizer builds?
[15:29:44] *** Joins: JohnMS_WORK (~kvirc@185.73.229.242)
[15:30:46] *** Joins: rendar (~rendar@user/rendar)
[15:32:18] *** Joins: CalamityToo (~CalamityB@cpe-108-185-144-94.socal.res.rr.com)
[15:34:53] *** Quits: CalamityBlue (~CalamityB@cpe-108-185-144-94.socal.res.rr.com) (Ping timeout: 252 seconds)
[15:35:34] *** Quits: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com) (Quit: Client closed)
[15:39:20] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:89eb:9409:2790:a552)
[15:39:20] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:89eb:9409:2790:a552) (Changing host)
[15:39:20] *** Joins: skapata (~Skapata@user/skapata)
[15:39:32] <ville> Guest31: many mainstream compilers these days come with functionality called sanitizers which when enabled can detect various things you're doing wrong
[15:39:44] <ville> again more of a subject for -general
[15:40:00] *** Quits: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[15:44:07] <millido> Hi! I am attempting to change a map to have the items as pointers, My problem is that I seem to be creating some undefined behaviour, I have put together a MWE https://pastebin.com/raw/6nA9KYJ9
[15:45:03] <millido> Could anyone try to explain how I can make the actual objects persist outside the scopes they are created in? (Which is what I attempted to do with `actualItems`, but that is even less consistent...
[15:45:37] <ville> !give millido testcase
[15:45:38] <nolyc> millido: A testcase is the _least_ amount of code that replicates your problem, paste it to https://wandbox.org/ then: 1) click run 2) click share 3) click url and 4) paste the url for us. You _must_ use that website. Do _not_ use a different website. Do _not_ paste code to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
[15:47:04] <ville> millido: since whatever site you're using doesn't even have line numbers it's bit difficult to refer to the code. what is the lifetime of your variable items?
[15:47:53] *** Joins: Maaaanu (~manuel@ip5b429007.dynamic.kabel-deutschland.de)
[15:48:38] <millido> Sorry, here https://wandbox.org/permlink/8vc4zkQpAr2QyZWD
[15:48:54] *** Quits: vhqr (~user@120.194.8.115) (Remote host closed the connection)
[15:48:58] <millido> They are supposed to be created at program start, and live until the program ends
[15:49:25] <ville> millido: so line 24 what is the lifetime of the variable items?
[15:50:03] <millido> Isn't that only for one run of the for-loop?
[15:51:09] *** Quits: Jck_true (~jcktrue@user/jck-true/x-0200799) (Quit: The Lounge - https://thelounge.chat)
[15:51:22] <ville> millido: yes. what are you doing on line 32 then?
[15:51:58] *** Joins: Jck_true (~jcktrue@user/jck-true/x-0200799)
[15:52:53] <ville> millido: https://wandbox.org/permlink/oDseMggWX4JqGNJl is a stripped down example of what you're doing
[15:52:56] <millido> Assigning _a_ pointer to that variable
[15:54:19] <ville> millido: you're taking the address of "items" and storing it somewhere for later use. which is pointless because the object it pointed to was destroyed at the end of the iteration like you said
[15:55:02] <ville> millido: now even though my example happens to work. it only "works". it's still not valid c++ program
[15:55:41] <millido> ville: yeah, that was what I assumed was happening
[15:56:05] <millido> But I don't understand how I can fix it
[15:56:24] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[15:57:15] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 252 seconds)
[15:57:29] <ville> if you want to use a pointer and the pointed-to object then make sure the pointed-to object's lifetime is suitable. you've created an object "items" with automatic lifetime, so it will get destructed automatically
[15:58:27] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[15:58:28] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[15:58:38] <ville> if you want an object to outlive the scope it was created in you've two options: static or dynamic lifetime
[15:59:19] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[15:59:50] <ville> in your case dynamic lifetime is probably the choice. for that purpose you probably want to look at "new" for example
[16:00:54] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:01:19] <ville> and before we're overrun by the inevitable "use smart pointers"-comments, it's probably good idea to practice getting your "new"s and "delete"s correct manually couple times
[16:02:23] *** Joins: proller (~p@2a02:6b8:0:40c:c59c:1120:aea8:c3f5)
[16:02:47] *** Joins: Leone (~Leo@216.154.50.172)
[16:05:29] <millido> ville: Okay, thank you! I will take a look at using new
[16:05:58] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[16:08:03] *** baltazar is now known as baltazaar
[16:09:40] <millido> For this specific program, I don't really have any use for deleting them. I just need to load all the data into memory, and keep it there.
[16:10:32] <ville> any particular reason why you're opting for pointers there?
[16:10:57] *** Quits: Ivii (~Ivyy@2001:a62:4c3:8e01:d2d2:a0ff:11ef:96ea) (Remote host closed the connection)
[16:11:52] *** Joins: Ivii (~Ivyy@2001:a62:4c3:8e01:e4e5:f5c3:f2e8:6b0a)
[16:12:00] <millido> Because the lists are pretty large, a few gigabytes of data, and I need multiple map-keys to have the same lists. So it seems like a huge waste to actually have multiple identical objects
[16:12:30] <ville> fair enough then
[16:14:44] <ville> an alternative could be to have vectors by them selves and then have the mapping be a thing on its own. restructuring the code that way could allow you not to dynamically allocate the vector objects your self
[16:15:28] <ville> you'd first build all the vectors and then afterwards make the map
[16:21:14] *** Joins: szutt (~szutt@116.37.2.145)
[16:22:44] <millido> ville: That is a good thought, I am not sure if it is actually that big of a deal for this program. Since there are no changes to any objects after they have been created...
[16:23:06] *** Quits: unyu (~pyon@user/pyon) (Quit: brb)
[16:23:49] *** Joins: unyu (~pyon@user/pyon)
[16:26:03] *** Joins: xiongxin (~Thunderbi@113.116.34.60)
[16:27:17] *** Quits: Ivii (~Ivyy@2001:a62:4c3:8e01:e4e5:f5c3:f2e8:6b0a) (Remote host closed the connection)
[16:27:30] *** Joins: Ivii (~Ivyy@2001:a62:4c3:8e01:b4b9:2e5b:8ffb:f8d8)
[16:27:57] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:32:36] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[16:33:12] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:346b:8ef4:4433:cb30) (Read error: Connection reset by peer)
[16:33:58] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:346b:8ef4:4433:cb30)
[16:35:36] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[16:41:25] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:8a23:3305:79f5:f3b8) (Quit: Leaving)
[16:47:50] *** Quits: tmm88 (~tmm88@user/tmm88) (Quit: Lost terminal)
[16:53:20] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[16:57:00] *** Joins: tradar (~tradar@user/tradar)
[16:57:27] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[16:57:52] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[17:00:10] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[17:02:12] *** Quits: Ivii (~Ivyy@2001:a62:4c3:8e01:b4b9:2e5b:8ffb:f8d8) (Remote host closed the connection)
[17:02:30] *** Joins: Ivii (~Ivyy@2001:a62:4c3:8e01:6c69:c214:cdb4:c477)
[17:02:56] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[17:05:31] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[17:07:13] *** Joins: mattallmill (~mattallmi@ip68-103-132-187.ks.ok.cox.net)
[17:16:05] *** Joins: dsrt^ (~dsrt@68.101.58.90)
[17:18:50] *** Quits: Burgundy (~yomon@79.115.213.171) (Ping timeout: 252 seconds)
[17:22:03] *** Joins: the_lanetly_052 (~the_lanet@194.135.168.127)
[17:23:17] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[17:24:29] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[17:27:38] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[17:29:10] *** Joins: jplejacq (~jplejacq@24.224.90.176)
[17:31:34] *** Joins: callq (~callq@2409:4062:2d12:20af:3084:9666:bf9d:eb2d)
[17:35:09] *** Quits: Tas-sos (~Tas-sos@ppp079167204100.access.hol.gr) (Quit: leaving)
[17:36:34] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[17:36:51] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[17:37:40] *** Joins: jkaye (~jkaye@2601:281:8300:7530:1572:52e4:1190:1c22)
[17:37:57] *** Quits: john99 (~johnny@138.62.221.87.dynamic.jazztel.es) (Remote host closed the connection)
[17:39:07] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:39:15] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:39:15] *** ChanServ sets mode: +v npaperbot
[17:41:30] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[17:41:55] *** Joins: xkuru (~xkuru@user/xkuru)
[17:43:12] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[17:44:02] *** Joins: kspalaiologos (~kspalaiol@user/kspalaiologos)
[17:44:43] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[17:46:47] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Client Quit)
[17:53:00] *** Quits: callq (~callq@2409:4062:2d12:20af:3084:9666:bf9d:eb2d) (Quit: callq)
[17:56:25] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[17:57:13] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[18:01:55] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 252 seconds)
[18:02:04] *** Quits: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net) (Remote host closed the connection)
[18:02:13] *** Quits: rendar (~rendar@user/rendar) (Ping timeout: 268 seconds)
[18:03:45] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[18:04:42] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[18:05:16] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[18:07:09] *** Joins: rvalue (~rvalue@user/rvalue)
[18:07:53] *** Joins: seninha (~seninha@user/seninha)
[18:10:13] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 240 seconds)
[18:16:36] *** Quits: tradar (~tradar@user/tradar) (Ping timeout: 276 seconds)
[18:16:53] *** Joins: tradar (~tradar@user/tradar)
[18:17:28] *** Quits: ElectronApps (~ElectronA@user/electronapps) (Remote host closed the connection)
[18:18:35] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:19:31] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[18:19:31] *** Quits: tesuji (~quassel@2a02:908:180:9500:51ac:976d:f091:fa02) (Ping timeout: 252 seconds)
[18:22:38] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[18:22:52] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[18:24:27] *** Quits: Maaaanu (~manuel@ip5b429007.dynamic.kabel-deutschland.de) (Quit: leaving)
[18:24:37] *** Quits: Dave_R (~Dave_R@home.amunra.co.uk) (Remote host closed the connection)
[18:25:43] *** Joins: Dave_R (~Dave_R@home.amunra.co.uk)
[18:29:13] *** Quits: Ivii (~Ivyy@2001:a62:4c3:8e01:6c69:c214:cdb4:c477) (Remote host closed the connection)
[18:36:45] *** Quits: JohnMS_WORK (~kvirc@185.73.229.242) (Ping timeout: 268 seconds)
[18:37:35] *** Quits: cart_man (~rynot@213.205.241.185) (Quit: Konversation terminated!)
[18:37:52] *** Quits: dsrt^ (~dsrt@68.101.58.90) (Remote host closed the connection)
[18:42:39] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:7917:44d7:1e62:9de1)
[18:42:39] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:7917:44d7:1e62:9de1) (Changing host)
[18:42:39] *** Joins: skapata (~Skapata@user/skapata)
[18:43:15] *** Joins: Ivii (~Ivyy@2001:a62:4c3:8e01:d1fb:d15b:4215:e584)
[18:45:22] *** Joins: peeps (~peepsalot@openscad/peepsalot)
[18:46:32] *** Joins: rendar (~rendar@user/rendar)
[18:47:09] *** Quits: peeps[zen] (~peepsalot@openscad/peepsalot) (Ping timeout: 256 seconds)
[18:51:24] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Remote host closed the connection)
[18:51:49] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[18:56:07] *** Quits: Dave_R (~Dave_R@home.amunra.co.uk) (Quit: Textual IRC Client: www.textualapp.com)
[18:58:27] *** Joins: Dave_R (~Dave_R@home.amunra.co.uk)
[19:01:52] *** Quits: szutt (~szutt@116.37.2.145) (Quit: Client closed)
[19:06:59] *** Joins: rgrinberg (~textual@2806:101e:7:7c2f:99ad:1649:a2c7:9e20)
[19:08:04] *** Joins: undeclared2 (nullx@user/undeclared)
[19:08:42] *** Quits: Guest31 (~Guest31@2001-4dd3-5263-0-dc2e-d36-bd92-b1bb.ipv6dyn.netcologne.de) (Ping timeout: 256 seconds)
[19:08:54] *** Quits: undeclared (nullx@user/undeclared) (Read error: Connection reset by peer)
[19:08:55] *** undeclared2 is now known as undeclared
[19:21:05] *** Joins: shailangsa (~shailangs@host86-186-136-27.range86-186.btcentralplus.com)
[19:21:31] *** Quits: xiongxin (~Thunderbi@113.116.34.60) (Remote host closed the connection)
[19:21:46] *** Quits: rnsanchez (~rnsanchez@2804:14d:8a81:94a4:8ccf:d40:d4e6:2ebe) (Ping timeout: 268 seconds)
[19:28:05] *** Quits: tradar (~tradar@user/tradar) (Quit: tradar)
[19:30:42] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[19:31:05] *** Joins: magla (~gelignite@55d47927.access.ecotel.net)
[19:32:43] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[19:43:54] *** Quits: kspalaiologos (~kspalaiol@user/kspalaiologos) (Quit: Leaving)
[19:52:06] *** Joins: rnsanchez (~rnsanchez@2804:14d:8a81:94a4:8ccf:d40:d4e6:2ebe)
[19:53:31] *** Quits: pa (~pah@user/pah) (Ping timeout: 256 seconds)
[19:53:57] *** Quits: rgrinberg (~textual@2806:101e:7:7c2f:99ad:1649:a2c7:9e20) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:54:06] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[19:55:58] *** Joins: pah (~pah@user/pah)
[19:58:41] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[19:59:34] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[20:00:27] *** Joins: hgkjhgkjgkj (~hjgkjhgkj@46.235.96.249)
[20:00:52] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[20:03:58] *** Joins: HvszrStykp (~X@81.171.62.85)
[20:06:08] *** Joins: goepsilongo (~goepsilon@201.143.32.6.ded.telnor.net)
[20:08:15] *** Quits: traxex (~traxex@user/traxex) (Ping timeout: 256 seconds)
[20:08:51] *** Joins: thad_the_man (~tlophd_be@2600:1700:3051:4370:21d:9ff:fe33:51f4)
[20:12:57] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[20:14:34] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[20:14:48] *** Joins: ckdCreations (~ckdCreati@147.55.133.138)
[20:15:00] *** Joins: Burgundy (~yomon@79.115.213.171)
[20:15:35] *** Joins: traxex (traxex@sdf.org)
[20:19:58] *** Quits: traxex (traxex@sdf.org) (Changing host)
[20:19:58] *** Joins: traxex (traxex@user/traxex)
[20:30:02] *** Quits: indy (~indy@dsl-static-104.213-160-167.telecom.sk) (Read error: Connection reset by peer)
[20:31:34] *** Joins: indy (~indy@dsl-static-104.213-160-167.telecom.sk)
[20:37:34] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[20:39:40] *** Joins: nicholaus04 (~nicholaus@2607:fb90:e58c:fb6a:3ddf:77ed:0:281)
[20:43:09] *** Parts: dontyouloveshort (~dontyoulo@2a07:3b80:1::efeb) (Leaving)
[20:46:32] <CarloWood> *sad that the const is ignored*
[20:46:35] <CarloWood> { B b{ {13}, 42 }; b.n = 14; cout << b.n << ", " << b.x; } struct A { int n; }; using Ac = A const; struct B : Ac { int x; };
[20:46:36] <geordi> 14, 42
[20:48:13] <CarloWood> { B b{ {13}, 42 }; A* p = &b; p->n = 14; cout << b.n << ", " << b.x; } struct A { int n; }; using Ac = A const; struct B : Ac { int x; };
[20:48:13] <geordi> 14, 42
[20:48:27] <CarloWood> duh - totally like I did  struct B : A ...
[20:48:47] *** Quits: furrymcgee (~devuan@cgn-89-1-209-182.nc.de) (Quit: leaving)
[20:52:14] <CarloWood> I want to derive from A, so I can use .n - but make n read-only.
[20:53:01] <cbreak> make n a function
[20:53:09] <cbreak> do not expose setter in B
[20:53:32] <CarloWood> { B b{{42}}; cout << b.n; } struct A { int n; };  struct B : protected A { int const& n = A::n; };
[20:53:32] <geordi> error: no matching function for call to 'B::B(<brace-enclosed initializer list>)'
[20:53:35] <cbreak> if you want n to be truly const in B, make A a template and use CRTP (I would recommend against that here)
[20:53:48] <CarloWood> { B b{42}; cout << b.n; } struct A { int n; };  struct B : protected A { int const& n = A::n; };
[20:53:48] <geordi> Same error.
[20:53:53] <CarloWood> wut
[20:54:00] *** Joins: pingpongball (~pingpongb@user/pingpongball)
[20:54:07] <pingpongball> Are you guys moving to rust?
[20:54:12] <cbreak> no
[20:54:23] <pingpongball> why not?
[20:54:28] <cbreak> not worth it.
[20:54:39] <cbreak> a lot of work for no gain.
[20:54:54] <PJBoy> B doesn't support aggregate initialisation there
[20:55:11] <PJBoy> you'd have to add ctors
[20:55:17] <pingpongball> what you can do on c++ takes 1 year, while 5 months on rust, on basis of easyness
[20:55:22] <CarloWood> { B b{{42}}; cout << b.n; } struct A { int n; };  struct B : protected A { int const& n = A::n; B(A a) : A(a) { } };
[20:55:23] <geordi> 42
[20:55:25] <CarloWood> That works.
[20:55:27] * SuperNintendoSUX slaps pingpongball
[20:55:27] <pingpongball> or may be i'm wrong?
[20:55:31] <SuperNintendoSUX> totally wrong
[20:55:33] <CarloWood> { B b{{42}}; b.n = 13; cout << b.n; } struct A { int n; };  struct B : protected A { int const& n = A::n; B(A a) : A(a) { } };
[20:55:33] <geordi> error: assignment of read-only location 'b.B::n'
[20:55:41] *** Quits: fbiagent_ (~fbiagent@user/fbiagent) (Remote host closed the connection)
[20:55:49] <pingpongball> what are you showing CarloWood that jibrish
[20:55:57] <cbreak> << std::is_aggregate<B>; struct A { int n; }; struct B : A {};
[20:55:57] <geordi> error: expected primary-expression before ';' token
[20:56:06] <cbreak> << std::is_aggregate<B>::value; struct A { int n; }; struct B : A {};
[20:56:07] <geordi> true
[20:56:16] *** Joins: fbiagent_ (~fbiagent@user/fbiagent)
[20:56:23] *** Joins: rgrinberg (~textual@2806:101e:7:7c2f:99ad:1649:a2c7:9e20)
[20:56:37] <cbreak> pingpongball: that's not how programming works
[20:57:09] <cbreak> what I can do in c++ in 1 year would take me more than 1 year in rust.
[20:57:33] <cbreak> why? because I'd have to learn rust first, and I'd have to port a huge codebase to rust first, or wrap a ton of libraries in rust first
[20:57:43] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Remote host closed the connection)
[20:57:44] <cbreak> and then spend months to debug the rust crap because it doesn't integrate at all
[20:58:01] <cbreak> apparently, rust people haven't even grasped the concept of shared libraries, can you imagine that?
[20:58:15] <PJBoy> I find that hard to believe
[20:58:21] <cbreak> same
[20:58:33] <cbreak> it is entirely possible I misunderstood
[20:58:40] <cbreak> but that's what I remember reading
[21:00:40] <PJBoy> > While rust provides linking against shared libraries, it does not provide the ability to load them at runtime
[21:00:50] <PJBoy> according to https://docs.rs/sharedlib/latest/sharedlib/
[21:01:34] <PJBoy> and then this library allowed loading shared libraries at runtime, presumably
[21:01:54] <cbreak> PJBoy: what I'd need is _creating_ shared libraries
[21:02:06] <PJBoy> oh right yeah
[21:02:19] <cbreak> well. And static ones.
[21:02:35] <cbreak> luckily, most of the c++ work I do lately is writing libraries, not frontends :)
[21:04:00] <PJBoy> there's this http://blog.asleson.org/2021/02/23/how-to-writing-a-c-shared-library-in-rust/ I guess
[21:04:17] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[21:04:49] *** Joins: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net)
[21:07:01] <cbreak> nice, but looks extremely inconvenient
[21:07:19] *** Joins: qft (~mzhang@69-222-187-165.lightspeed.sntcca.sbcglobal.net)
[21:07:37] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[21:08:39] *** Quits: goepsilongo (~goepsilon@201.143.32.6.ded.telnor.net) (Quit: Textual IRC Client: www.textualapp.com)
[21:08:49] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[21:09:18] <PJBoy> yeah
[21:11:56] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[21:13:33] <bpalmer> I mean, the heart of it is simply specifying crate-type rlib,cdylib in a config file ; the rest of it is just normal interoperability across languages
[21:14:48] *** Joins: sprout_ (~quassel@2a02:a467:ccd6:1:bc10:5f40:71cb:b3b6)
[21:16:59] *** Quits: supernova (~quassel@2405:9800:ba11:6207:73f2:14ac:a94f:d439) (Ping timeout: 252 seconds)
[21:17:18] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[21:17:25] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:6993:39fb:9bc8:e953) (Ping timeout: 240 seconds)
[21:18:32] <cbreak> bpalmer: sure. But that doesn't change the fact that c++ is more interoperable with c++ than rust :D
[21:21:53] <bpalmer> I see. I interpreted your inconvenient statement as being about making shared libraries. (And to bring it more on topic, even C++ shared libraries are going to effectively need translated to C for the extern symbols)
[21:24:01] *** Joins: sarvet (~sarvet@p200300e8d739e494dd9b9e5d9ba7cd50.dip0.t-ipconnect.de)
[21:24:29] *** Quits: pingpongball (~pingpongb@user/pingpongball) (Quit: Client closed)
[21:25:47] <cbreak> I don't see why
[21:27:15] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[21:30:43] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[21:33:00] <bpalmer> https://isocpp.org/wiki/faq/mixing-c-and-cpp for all the caveats; and if you don't do extern "C", presumably you'll have to deal with the name mangling all on your own (or just pray that everything uses the same compilation and algorithm)
[21:35:59] <cbreak> of course we use the same compilation
[21:36:16] <cbreak> the libraries I make are compiled for a specific host usually
[21:39:07] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:39:17] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:39:17] *** ChanServ sets mode: +v npaperbot
[21:40:11] <SuperNintendoSUX> :)
[21:40:36] <SuperNintendoSUX> source code or multiple distros. that's how we do it
[21:41:54] *** Quits: PJBoy (~PJBoy@user/pjboy) (Quit: Ping timeout: 252 seconds)
[21:45:41] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[21:50:05] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:50:08] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[21:51:12] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[21:52:37] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:52:55] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[21:54:14] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[21:54:20] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:05:45] *** Quits: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[22:06:03] *** Quits: dexter0 (~dexter0@c-69-181-126-161.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[22:06:42] *** Joins: dexter0 (~dexter0@c-69-181-126-161.hsd1.ca.comcast.net)
[22:22:56] *** Joins: Tobbi_ (~Tobbi@2a02:8108:1240:48ec:9def:63cb:61cc:904f)
[22:24:01] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:f5d2:447c:d749:7070) (Killed (NickServ (GHOST command used by Tobbi_!~Tobbi@2a02:8108:1240:48ec:9def:63cb:61cc:904f)))
[22:24:25] *** Tobbi_ is now known as Tobbi
[22:28:20] *** Joins: CormacAttack (~mac@144.62.50.200)
[22:29:10] *** Quits: rgrinberg (~textual@2806:101e:7:7c2f:99ad:1649:a2c7:9e20) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:31:41] *** Joins: snbk97 (~sayan@122.161.65.178)
[22:35:24] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Quit: Leaving)
[22:36:15] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[22:38:08] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[22:38:43] *** Joins: Brainium_ (~brainium@user/brainium)
[22:39:01] *** Quits: Brainium (~brainium@user/brainium) (Ping timeout: 240 seconds)
[22:45:23] *** Joins: john99 (~johnny@138.62.221.87.dynamic.jazztel.es)
[22:45:27] *** Joins: supernova (~quassel@2405:9800:ba11:6207:7919:832b:4efe:ab20)
[22:50:09] *** Quits: CormacAttack (~mac@144.62.50.200) (Quit: WeeChat 3.3)
[22:53:49] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[22:58:37] *** Quits: Dizidentu (~aresg@modemcable105.134-19-135.mc.videotron.ca) (Quit: WeeChat 3.2)
[22:58:47] *** Quits: sarvet (~sarvet@p200300e8d739e494dd9b9e5d9ba7cd50.dip0.t-ipconnect.de) (Quit: sarvet)
[23:00:13] *** Quits: Brainium_ (~brainium@user/brainium) (Ping timeout: 240 seconds)
[23:13:03] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[23:17:49] *** Quits: snbk97 (~sayan@122.161.65.178) (Ping timeout: 240 seconds)
[23:17:49] *** Joins: Betal (~Betal@user/betal)
[23:18:07] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[23:18:24] *** Joins: nejni-marji (~nejni-mar@user/nejni-marji)
[23:18:38] *** Joins: slidercrank (~slidercra@user/slidercrank)
[23:21:34] *** Joins: aLeSD_ (~aLeSD@139.47.114.114)
[23:21:41] *** Joins: snbk97 (~sayan@122.161.65.178)
[23:22:45] *** Quits: aLeSD (~aLeSD@139.47.114.114) (Ping timeout: 252 seconds)
[23:26:03] *** Joins: KAHR-Alpha (~Alpha@2a01cb0d024a6600bced6d5f88ca5ed5.ipv6.abo.wanadoo.fr)
[23:27:45] *** Joins: PJBoy (~PJBoy@2a00:23c7:8302:b301:61e4:cbd1:bd29:a9a9)
[23:27:45] *** Quits: PJBoy (~PJBoy@2a00:23c7:8302:b301:61e4:cbd1:bd29:a9a9) (Changing host)
[23:27:45] *** Joins: PJBoy (~PJBoy@user/pjboy)
[23:37:32] *** Joins: rgrinberg (~textual@187.223.58.12)
[23:39:03] *** Quits: supernova (~quassel@2405:9800:ba11:6207:7919:832b:4efe:ab20) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:39:20] *** Joins: paulf (~paulf@lfbn-lyo-1-397-34.w2-7.abo.wanadoo.fr)
[23:41:04] *** Joins: badone (~badone@209.132.189.136)
[23:43:15] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[23:44:45] *** Quits: pulse (~pulse@user/pulse) (Quit: Join a gamedev community https://indiedevs.net/)
[23:47:24] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[23:49:29] *** pah is now known as pa
[23:49:53] *** Quits: proller (~p@2a02:6b8:0:40c:c59c:1120:aea8:c3f5) (Ping timeout: 265 seconds)
[23:50:16] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[23:50:21] *** Joins: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net)
[23:50:40] *** Joins: millido (~millido@84.210.150.128)
[23:52:05] *** Quits: NEYi (~NEYi@109.251.216.38) (Ping timeout: 252 seconds)
[23:56:16] *** Quits: Oleg (~Oleg@ool-44c55d31.dyn.optonline.net) (Quit: WeeChat 3.3)
[23:57:35] *** Quits: hackinghorn (~hackingho@user/hackinghorn) (Ping timeout: 252 seconds)
[23:58:48] *** Joins: proller (~p@2a02:6b8:b081:8012::1:16)
[23:59:01] *** Quits: nofx (~i.am@189.26.169.41.dynamic.adsl.gvt.net.br) (Quit: I come down here for a fat woman and that's what I'm havin.)
