[00:00:39] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[00:01:20] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[00:15:57] *** Quits: iamFIREcracker (~iamFIREcr@user/iamfirecracker) (Ping timeout: 240 seconds)
[00:18:09] *** Joins: iamFIREcracker (~iamFIREcr@user/iamfirecracker)
[00:20:43] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[00:22:40] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[00:24:57] *** Quits: Rue (~rue@2001-b011-1000-1c39-cdcc-c9c1-11c3-6370.dynamic-ip6.hinet.net) (Ping timeout: 240 seconds)
[00:26:36] *** Joins: kevingal (~quassel@80.233.61.220)
[00:27:11] *** Joins: Rue (~rue@2001-b011-1000-1a29-7937-e51c-8a8a-ea67.dynamic-ip6.hinet.net)
[00:31:47] *** Quits: rogersm (~rogersm@90.166.180.250) (Quit: Leaving...)
[01:00:28] <hayley> https://www.youtube.com/watch?v=ietkuUZwjpU
[01:00:29] -ixelp- Cymbaline - YouTube
[01:05:49] *** Quits: kevingal (~quassel@80.233.61.220) (Ping timeout: 256 seconds)
[01:06:32] <rotateq> mornin hayley 
[01:13:57] *** Joins: dre (~dre@2001:8003:c932:c301:3356:3f6e:5d90:d014)
[01:14:37] *** Quits: ogamita (~pjb@2a01:cb11:8036:90c2:b5bf:8685:d5d5:da42) (Ping timeout: 240 seconds)
[01:15:31] * hayley uploaded an image: (145KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/lvToqXrjptOrdjUDFBTqBgLO/terminal-review.png >
[01:16:22] *** Quits: dra (~dra@2a04:4540:6411:e900:7815:ce5f:337c:547c) (Quit: Leaving)
[01:22:22] <gilberth> At least it's interactive.
[01:31:00] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[01:49:15] *** Quits: molson_ (~molson@2001-48F8-704A-123D-0-0-75F-1042-static.midco.net) (Ping timeout: 250 seconds)
[01:51:12] <moon-child> yeah.  And it composes, if poorly
[01:53:20] *** Joins: molson_ (~molson@172-103-21-94-dynamic.midco.net)
[02:16:53] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[02:19:00] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[02:45:06] *** Joins: iamFIREc1 (~iamFIREcr@user/iamfirecracker)
[02:47:49] *** Quits: iamFIREcracker (~iamFIREcr@user/iamfirecracker) (Ping timeout: 256 seconds)
[02:54:10] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[03:14:47] *** Quits: shka (~herr@109.231.0.226) (Ping timeout: 256 seconds)
[03:29:33] * hayley has object locking of sorts (though has only tested it with the serial GC and a much simpler implementation that doesn't lock). Next is to give each GC thread its own local allocation buffers.
[03:30:20] <hayley> "extern struct alloc_region  gc_alloc_region[3];" I wonder if I can just stick the thread-local thingy on it and call it a day. The olde GC uses one thread, so...
[03:31:21] <hayley> "Free-pointer has to be not equal to 0 because it's undefined behavior to add any value whatsoever to the null pointer. Annoying, isn't it."
[03:43:16] <gilberth> Of course it is, as well as adding an offset to a pointer making it point beyond the object you got that pointer for. So unless all the heap comes from one single malloc(3)ed or statically allocated array, you enter UB land.
[03:43:56] <gilberth> And as NULL does not point to any object, you can't add anything to it.
[04:03:45] *** Quits: szos (~user@178.74.52.55) (Ping timeout: 256 seconds)
[04:14:57] <hayley> "#define LISP_FEATURE_SBCL" Hm, is there a #ifndef LISP_FEATURE_SBCL #error "What the hell are you building?" #endif
[04:18:58] * hayley enables LISP_FEATURE_PARALLEL_GC and is left with a SBCL that prints the herald, but doesn't start after.
[04:22:31] * hayley tries to call a function from GDB and SBCL prints "*** stack smashing detected ***: terminated"
[04:26:39] * hayley tries to get gdb to print out the lock table (as it can write <repeats 12345 times>) and it hangs.
[04:26:55] <hayley> Lovely, I broke the debugger.
[04:27:14] <sm2n> I HAVE NO TOOLS BECAUSE I USED MY TOOLS TO BREAK MY TOOLS
[04:28:29] <hayley> ...it's already annoyingly slow with 200kB of table, so 8MiB is out of the question. sigh
[04:34:11] <hayley> lol, I had been trying to bang on a bit somewhere around the object, rather than in the lock bitmap.
[04:36:46] <White_Flame> I have no tools and I must debug
[04:46:12] <moon-child> time for obnoxiously verbose debug messages!
[04:47:16] <hayley> Now I have to wonder if release_forwarding_lock is doing its job, which is a bad start.
[04:53:05] <hayley> Dammit, I forgot that I have to invert grab_forwarding_lock to make it "equivalent" to forwarding_pointer_p.
[04:53:57] *** Quits: v3ga (~v3ga@2603-6080-5204-3b35-0000-0000-0000-18ad.res6.spectrum.com) (Remote host closed the connection)
[05:22:56] *** Joins: v3ga (~v3ga@2603-6080-5204-3b35-0000-0000-0000-18ad.res6.spectrum.com)
[05:28:56] <hayley> Oh shit, I can do a full GC with locking working.
[05:29:06] <hayley> Now to remove all my printf() debugging.
[05:30:21] * hayley loads one-more-re-nightmare-tests and it locks up again. Dammit.
[05:32:15] <hayley> ...and now it doesn't lock up. Boggle.
[05:37:36] <hayley> ...and now it does when loading other code.
[05:44:17] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 240 seconds)
[05:56:51] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 256 seconds)
[05:58:21] <rotateq> printf debugging ^^
[05:59:59] <hayley> Seems my terminal doesn't record enough for me to find the offending write. ):
[06:00:24] <rotateq> :(
[06:00:34] <hayley> If I want GCing to be really slow, I could scan the entire lock table looking for bits that shouldn't be set.
[06:02:09] <hayley> ...also possible I've just not calloced enough, since apparently I wrote / 80 instead of / 8. Hm.
[06:03:08] <hayley> Dammit, looks like that may have been it, as now I get all the happy Quicklisp dots.
[06:05:04] <hayley> ...so when my code thought it didn't unlock something, it was just reading some other allocation. How stupid.
[06:08:12] <gilberth> hayley: man tee ;)
[06:08:38] <hayley> Sure.
[06:09:11] <hayley> Well, that's part 1 done. The next parts are to get GC threads to allocate in their own pages, and then to spin up multiple GC threads and coordinate them.
[06:11:08] <hayley> https://www.youtube.com/watch?v=fUJNSKi_qx0
[06:11:08] -ixelp- Why the Beta BFG9000 SUCKED! - YouTube
[06:17:31] <rotateq> "You can't shoot a hole into the surface of Mars."
[07:05:10] <moon-child> https://www.iso-9899.info/wiki/Main_Page#Stuff_that_should_be_avoided   hey, even c people don't like byol!
[07:05:10] -ixelp- Main Page - C
[07:12:06] *** Quits: mzan (~quassel@mail.asterisell.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[07:12:35] *** Joins: mzan (~quassel@mail.asterisell.com)
[07:24:41] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[07:26:50] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[07:44:47] <hayley> Hm, I forgot I need to lock the list of weak pointers, which will eventually bite me in the ass.
[07:45:12] <hayley> moon-child: I thought gilberth already mentioned how poor he thinks the C is.
[07:52:52] *** Joins: semz_ (~semz@user/semz)
[07:53:57] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[07:55:26] *** Quits: semz (~semz@user/semz) (Ping timeout: 250 seconds)
[07:56:10] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[08:03:41] <hayley> SBCL has #defines for locking and unlocking threads portably over Windows and pthreads, but no typedef or something for defining a lock variable. Oh well.
[08:07:29] <hayley> https://twitter.com/NgoloTesla/status/1489930547929530368 How The Pirate Bay used to handle legal threats.
[08:09:16] <hayley> "Please don't sue us right now, our lawyer is passed out in an alley from too much moonshine"
[08:12:14] *** Joins: lispnik (~lispnik@68.21.148.119)
[08:18:32] *** Joins: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net)
[08:28:10] *** Quits: lispnik (~lispnik@68.21.148.119) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[08:32:42] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[08:35:36] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[08:38:46] *** Quits: rotateq (~user@p200300e78706a00050f72feb644e2401.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[08:52:20] *** Joins: lispnik (~lispnik@68.21.148.119)
[09:01:02] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[09:06:41] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[09:08:30] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[09:09:09] *** Quits: lispnik (~lispnik@68.21.148.119) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[09:23:37] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[09:25:50] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[09:34:27] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[09:36:13] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[09:48:17] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[09:50:33] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[10:22:24] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[10:22:40] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[10:22:51] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[10:24:53] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[10:44:37] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[10:47:33] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[11:26:46] <hayley> Kent Pitman has informed me of https://nerdlegame.com/
[11:26:47] -ixelp- Nerdle - the daily numbers game
[11:30:16] <moon-child> how does one get into that kind of relationship with kent pitman?
[11:31:11] <hayley> https://twitter.com/KentPitman/status/1490226291831881728
[11:31:12] <hayley> ):<
[11:33:15] <moon-child> ):<
[11:37:27] <hayley> I got it on the sixth try, but I needed Macsyma to help me out.
[11:54:34] * hayley uploaded an image: (12KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/JCWakjhNMvnwXXzFxWcEavFD/kmp.png >
[11:55:27] <hayley> Apparently kmp blocks nihlists on sight, but I haven't been blocked. welp
[11:58:19] <dave0> star trek is on tv tonight.. the one with chris pine as kirk
[12:18:08] <hayley> https://www.youtube.com/watch?v=GpBo2XWjC-Y
[12:18:08] -ixelp- Emerson, Lake & Palmer - Hoedown - Live In '73 - YouTube
[12:18:41] *** Quits: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[12:37:06] <ck_> "that's not star trek"
[12:37:56] <dave0> the only true capt kirk is william shatner?
[12:38:30] <dave0> the only thing i found hard, was do i like kirk or do i like picard?
[12:47:21] <ck_> have you seen "Thursday"?
[12:47:42] *** Joins: shka (~herr@109.231.0.226)
[12:49:01] <dave0> nope?
[12:50:56] <dave0> https://www.imdb.com/title/tt0124901/?ref_=fn_al_tt_1
[12:50:57] -ixelp- Thursday - Ein mÃ¶rderischer Tag (1998) - IMDb
[12:51:05] <dave0> that one?
[12:52:18] <dave0> it made 3 grand lol
[12:59:54] <ck_> yes that one
[13:00:05] <dave0> nope, is it good?
[13:00:06] <ck_> "Picard or Kirk?" is a plot point in it
[13:00:10] <dave0> lol
[13:00:29] <ck_> yeah I'd say it is a good movie, if you don't expect much depth
[13:00:45] <dave0> cool i'll look it up!
[13:00:46] <mfiano> I love you ck_ for making me remember that awesomeness
[13:01:12] <ck_> mfiano: see it as a gesture
[13:02:26] <mfiano> It was a good movie for its time.
[13:08:53] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[13:10:52] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[13:29:12] <hayley> Well, I think I have the (singular) GC allocation function rigged to allocate from thread-local pages, and it was quite simple to change. Next is to get the GC to spin up some threads, give them work, and let chaos ensue.
[13:30:45] <hayley> "293 additions and 58 deletions" seems awfully low for this sort of thing. FWIW I killed off getting lock-free list nodes to line up in memory, but I doubt the reader even knew that SBCL has such a thing.
[13:32:56] <hayley> Fun fact: it does in src/code/target-lflist.lisp. And this has to be internal because SBCL allows itself to clobber lowtag bits in order to mark deleting a node.
[14:09:20] <hayley> https://www.reddit.com/r/programming/comments/sld01r/immutability_isnt_free_or_how_we_took_an_api/hvsq8tq/?context=1
[14:09:22] -ixelp- Immutability isn't free â€“ or how we took an API endpoint from 16s to 3s : programming
[14:10:41] <hayley> Tell me if I missed something about immutability.
[14:11:03] <moon-child> i thought lamport invented concurrency
[14:12:50] <hayley> moon-child: https://youtu.be/h42d0WHRSck?t=17
[14:12:51] -ixelp- Meet the Soldier - YouTube
[14:19:38] <moon-child> (or, hmm, perhaps armstrong?)
[14:29:45] *** Quits: santiagopim (~user@84.78.243.45) (Remote host closed the connection)
[14:38:30] <kakuhen> trying to set up clojurescript  + react with lein  is so confusing
[14:38:36] <kakuhen> ill succeed eventually, i hope
[14:39:34] <moon-child> I regret that I recognised all of those words
[14:39:43] <kakuhen> nothing beats the workflow of emacs+sly+quicklisp, and that says something x.x
[14:39:49] <hayley> moon-child: "Cliff then invented the WIMP interface paradigm, and that's why every time you press the mouse it's called a click"
[14:40:15] <kakuhen> anyway i actually like clojure so far, it's nice
[14:40:30] <kakuhen> seems lacking in macro stuff though
[14:40:40] <kakuhen> or at least it's not obvious to me how one would mkae a reader macro in clojure, assuming it is possible
[14:40:43] * moon-child throws mr click off a cliff for gui crimes
[14:40:52] <moon-child> kakuhen: eh, make your own reader :)
[14:41:03] <kakuhen> no !!!
[14:41:08] <hayley> kakuhen: You're not supposed to.
[14:41:08] <moon-child> why?
[14:41:12] <moon-child> not that hard...
[14:41:14] <hayley> https://www.youtube.com/watch?v=Q_B4oK4Mpzk
[14:41:15] -ixelp- [YTP] ElectroBOOM Clicks a Cliff - YouTube
[14:41:15] <kakuhen> i'm too lazy, and my favorite part about parsing toy DSLs in common lisp is that uh
[14:41:19] <kakuhen> you have the lisp reader instantly
[14:41:33] <kakuhen> and you can just pollute your readtable with really convenient functions
[14:41:35] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 256 seconds)
[14:41:36] <kakuhen> and you have a nice parser
[14:43:05] *** Joins: aeth (~aeth@user/aeth)
[14:44:19] <kakuhen> ummm i think i found a huge bug in transmission
[14:44:48] <kakuhen> so i am seeding a torrent i never had to leech, but i guess it bitrotted over time and i had to redownload a few kb
[14:44:53] <kakuhen> now my ratio is 524...
[14:45:07] <moon-child> lmao this gcc error
[14:45:08] <moon-child> https://0x0.st/oXPg.txt
[14:45:16] <moon-child> could I have possibly meant QQ? ðŸ¤”
[14:50:39] <kakuhen> oooh success
[14:50:46] <kakuhen> I just had to M-x cider-jack-in-cljs and then choose figwheel
[14:51:03] <kakuhen> and from now I can simply memorize C-c M-j I guess
[14:51:11] <hayley> https://www.youtube.com/watch?v=v0wwwImHxVU
[14:51:12] -ixelp- Pink Floyd - Balls In Yo Jaws (1975) - YouTube
[15:10:51] <kakuhen> #clprojects looks like an interesting idea
[15:10:57] *** Joins: random-nick (~random-ni@87.116.167.125)
[15:11:05] <kakuhen> but im not sure i understand it's purpose; do i get to search for other ppl interested in audio stuff there
[15:11:38] <kakuhen> i have a super ugly and sparsely documented flac & mu-law pcm decoder, planning to add some extra stuff on top and hopefully make some purely CL audio decoding library
[15:12:12] <kakuhen> there are similar projects that do what I want except they all make use of FFIs and call into libflac or libmpg123 and i dont want that, not because it's bad, but because i wanted to be able to do as many things with pure lisp as possible
[15:26:16] <hayley> Interesting that the SBCL GC already has a sort of grey page set, but it exhausts the old set before working on the new one. Whereas a parallel GC takes from the same set that it adds to.
[15:29:02] *** Joins: szos (~user@178.74.52.55)
[15:29:02] *** szos is now known as shozo
[15:29:09] * shka is installing android studio
[15:29:20] * shka hates android programming
[15:29:37] <ck_> join the club
[15:34:32] <shka> luckly i just want persistant settings to existing applications
[15:34:33] <kakuhen> im goign to make ios apps in react-native + cljs, or attempt to
[15:34:35] <shka> shouldn't be that hard
[15:34:50] <shka> fuck applications written in js
[15:34:55] <kakuhen> the more cursed part is being able to target mac via max catalyst
[15:35:01] <kakuhen> mac catalyst*
[15:40:59] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[15:41:16] <ck_> max payne
[15:42:48] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[15:54:24] <selwyn> i tried a clojurescript stack
[15:54:32] <selwyn> for developing android apps
[15:54:35] <selwyn> didn't like it
[15:59:24] <ck_> well you know my experience with it
[16:02:25] <kakuhen> i just want to never leave uhh... lisp-like languages
[16:08:00] <selwyn> shka: what are you mkaing
[16:09:23] <shka> i am trying to change this https://github.com/dront78/PulseDroid so it will have persistent settings
[16:09:24] -ixelp- GitHub - dront78/PulseDroid: Android network audio player
[16:09:31] <shka> right now i can even build the thing
[16:10:13] <shka> android.media does not exist but it is supposed to be in the sdk right?
[16:10:20] <selwyn> um
[16:10:29] <selwyn> yeah it is
[16:10:54] <selwyn> this is really old
[16:11:46] <shka> it is, but so is the device i intend to run this on
[16:12:00] <shka> and it works, just misses one important feature
[16:29:08] <shka> there is also https://github.com/wenxin-wang/PulseDroidRtp but i can't build this bloody thing either
[16:29:09] -ixelp- GitHub - wenxin-wang/PulseDroidRtp: Receive and play PulseAudio RTP stream on Android
[16:29:18] <shka> why this has to be so annoying
[16:31:04] <shka> android studio wants to install gradle, but i already have gradle installed
[16:31:10] <shka> so complicated
[16:31:11] <shka> gosh
[16:40:40] <shka> and now i have additional cmake bullshit in addition to java bullshit 
[16:40:41] <shka> great
[16:45:50] <shka> oh, that's because submodules
[16:47:21] <shka> NOW pulsedroidrtp builds, but i wonder if i can build it for android 4
[16:49:46] *** Joins: treflip (~user@user/treflip)
[17:01:28] <shka> Error: Google Play requires that apps target API level 29 or higher.
[17:01:33] <shka> shut up google
[17:03:48] <edgar-rft> you must go on with playing until your app has reached API level 29 or higher
[17:16:57] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[17:37:27] <shka> well, at least it builds
[17:38:45] <selwyn> backwards compatibility is good on android
[17:45:52] <shka> selwyn: yeah, hopefully it will load, but i won't check that today
[17:46:28] <shka> also, i've finally unlocked ranked in SC2
[17:49:35] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[17:58:10] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[18:06:50] <ck_> API 29, but what about DEX, INT and so on
[18:07:11] <shka> ... what are those things
[18:08:22] <selwyn> lol
[18:10:21] <shka> oh, targetsdkversion is not the right tool anyway
[18:10:29] <shka> i will have to rewrite UI
[18:10:32] <shka> damnit
[18:21:41] *** Quits: shozo (~user@178.74.52.55) (Ping timeout: 256 seconds)
[18:27:25] <selwyn> sigh
[18:27:40] *** semz_ is now known as semz
[18:45:45] <selwyn> black mesa is kind of janky
[18:50:06] <ck_> but they would have no problem with a pandemic, with all those hev suits
[18:50:57] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[18:53:11] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[18:53:15] <selwyn> turns out the military are really keen to help out with containing the biohazards!
[18:55:29] <selwyn> whats the verdict on alphacode
[19:02:04] <ck_> Â¯\_(ãƒ„)_/Â¯
[19:03:54] <ck_> those are, I'm guessing uva problems?
[19:04:36] <selwyn> an ai is trained to solve 'codeforce' problems
[19:05:12] <ck_> yeah I was wondering which dataset was used for training
[19:06:41] <ck_> I saw this just before you asked, you've probably seen it too? https://scottaaronson.blog/?p=6288
[19:06:42] -ixelp- Shtetl-Optimized Â» Blog Archive Â» AlphaCode as a dog speaking mediocre English
[19:07:13] <selwyn> yeah]
[19:08:34] <selwyn> its always popular to criticise ai
[19:08:49] <ck_> I was impressed with the go and scII players
[19:09:02] <selwyn> i know someone in quantum who is pessimistic about the future of that field and says
[19:09:03] <ck_> alphago and alphastar I guess they were called
[19:09:26] <selwyn> 'deep learning, now those guys are actually doing something, unlike us'
[19:09:49] <ck_> hmm
[19:09:55] <selwyn> the black box nature of deep learning still turns me off, but they have so many results
[19:10:16] <ck_> it's not as black box as you might think, depending on the application. I thought that too, but
[19:10:45] <selwyn> https://narrative-device.herokuapp.com/ this is my new favourite ai toy
[19:10:59] <ck_> for example in image recognition applications, you can learn a lot about how a trained network does what it does by visualizing the argmax for the components, if that makes sense to you 
[19:11:43] <ck_> neat
[19:13:24] <selwyn> well, even if you can visualise some parts of it, its still hard to see how it actually works
[19:16:09] <ck_> "nah, it's totally easy dude just look" https://arxiv.org/pdf/1712.09665.pdf
[19:16:23] <ck_> (see fig. 1)
[19:16:47] <selwyn> can we figure out the logic of a neural network
[19:16:53] <selwyn> is what i am wondering
[19:18:19] <ck_> I think so, the understanding will improve. For simple things like OCR it has been done I believe
[19:18:33] <ck_> more abstract things like sift features and all that are not far off
[19:18:45] <ck_> well, in my opinion at least
[19:23:05] <ck_> anyway, "explainable ai" is a whole field now, right. They'll figure it out
[19:29:35] <shka> selwyn: i can't see this working all that well in practice to be honest
[19:36:04] <selwyn> would be funny if the ai writes code better than the average developer
[19:36:37] <shka> it may
[19:36:46] <shka> but that's not important
[19:37:00] <shka> the issue is that 'developer' is not just about coding
[19:37:12] <shka> it is about knowing how stuff should interact
[19:37:25] <shka> what are the consequences of decisions
[19:37:39] <shka> and about extracting somewhat useful technical specification from the business people
[19:45:01] *** Joins: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr)
[19:45:47] <Alfr> shka, they'll eventually get to interrogating business people ...
[19:47:38] <selwyn> problem is that not all business people can pass the turing test
[19:52:31] <ck_> in what function are they participating?
[20:12:32] *** Quits: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[20:29:31] <shka> even extracting "at what cost we break even" is at time difficult
[20:39:03] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[20:41:10] *** Quits: derelict (derelict@user/derelict) (Quit: bye)
[20:41:44] *** Joins: derelict (derelict@user/derelict)
[20:50:23] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[20:52:29] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:23:24] *** Joins: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr)
[21:23:30] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[21:23:53] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[21:36:06] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[21:45:37] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[21:47:51] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:53:16] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 245 seconds)
[21:54:11] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[22:00:06] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Remote host closed the connection)
[22:00:41] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[22:03:22] <gilberth> "real" CLIM2 is so incredible bug-ridden, I wonder if people used that for anything.
[22:06:19] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[22:07:35] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[22:14:35] <Gnuxie> i imagine they were forced to 
[22:16:42] <shka> https://www.youtube.com/watch?v=G7LJC9vJluU
[22:16:42] -ixelp- Program in C â€” The Memory Unsafety Anthem - YouTube
[22:18:11] <shka> lol@segfault at end
[22:24:41] *** Quits: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[22:34:48] <shka> https://kyivindependent.com/national/ukraine-holds-urban-warfare-drills-in-chornobyl-zone/
[22:34:48] -ixelp- Ukraine holds urban warfare drills in Chornobyl Zone
[22:35:25] <Gnuxie> isn't that the easiest way for Russia to get to Kiev
[22:35:41] <Gnuxie> via Belarus ofc
[22:35:49] <shka> well, they may not go for Kiev at all
[22:36:22] <shka> could simply shave of the coastal parts of the Ukraine for instance
[22:36:38] <shka> or do nothing
[22:36:54] <shka> how knows what they are even planning 
[22:36:59] <shka> *who
[22:38:48] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:5873:aea:dc30:5c15)
[22:44:38] *** Quits: treflip (~user@user/treflip) (Quit: good night!)
[22:48:29] *** Joins: santiagopim (~user@44.pool90-167-219.static.orange.es)
[23:00:01] <selwyn> the belarus part of the exclusion zone has farms (!) which contribute to the funding of the zone
[23:01:13] <shka> selwyn: yeah, and don't smoke belarusian cigarettes 
[23:01:31] <shka> they have EXTRA carcinogens 
[23:02:42] <selwyn> mm tasty
[23:03:09] <selwyn> i heard that armenian cigarettes are popular throughout the former soviet union
[23:05:46] <shka> selwyn: dunno
[23:05:49] <shka> they may be 
[23:07:45] <shka> all cigarettes stink to me the exact same way 
[23:08:20] <shka> https://www.youtube.com/watch?v=xhXHl2iMnOs
[23:08:20] -ixelp- What is Mario's Religion? - YouTube
[23:25:18] <selwyn> https://twitter.com/aral/status/1490268690532737026?t=3FpReZUVDfaeyNYOA8Fpdg&s=19
[23:25:24] <selwyn> damn
[23:25:35] <selwyn> can we be saved that easily?
[23:25:57] <shka> selwyn: "will consider" 
[23:26:08] <shka> and will not
[23:26:20] <shka> not after loosing so many $ of market evaluation
[23:28:24] <phoe> https://twitter.com/paulg/status/1490406747051286539
[23:28:29] <phoe> no Å¼esz kurwa maÄ‡
[23:28:29] <phoe> xD
[23:28:55] <shka> no, no
[23:28:58] <shka> he has a point
[23:29:23] <moon-child> the notion of digital scarcity is inherently problematic
[23:29:40] <shka> i also feel like there is a potential for nft applications, but i've not seen it in practice
[23:30:28] <shka> moon-child: internet of things decentralized ownership maybe?
[23:30:41] <phoe> NFTs are ultimately about speculating via mostly counterfeit purchase receipts hanging on an immutable distributed database
[23:31:04] <shka> phoe: that's the NFT 'art'
[23:31:15] <phoe> art? where did I say "art"
[23:31:24] <phoe> it doesn't matter what is printed on the receipts
[23:32:09] <phoe> if it's for art or for nonexisting items in Meta's metaverse or for virtual tokens that give you the idea that you participate in some decentralized ownership of some real thing
[23:33:03] <shka> phoe: yes, that, i feel, makes no sense 
[23:33:42] <selwyn> why, culturally, is rentierism so attractive
[23:33:45] <shka> but physical objects/hardware resources ownership seems to be more solid case
[23:33:45] <phoe> if you want to trust no one and trust the code only, then you randomly end up having $320M wiped out because somebody found a bug in a smart contract
[23:33:50] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 260 seconds)
[23:33:57] <selwyn> considering that we live in the age of shit rentierism
[23:33:59] <shka> not sure how NFTs make it any easier
[23:34:00] <phoe> or 100% of everyone's ownership, same deal
[23:34:21] <shka> selwyn: i call this capitalistic feudalism
[23:34:22] <phoe> shka: no regulations and safety with regard to DeFi make it trivial
[23:34:31] <shka> peasants don't own anything :D
[23:34:35] <phoe> you simply find a bug in the code and make a decentralized function call
[23:34:38] <phoe> the rest is history
[23:35:07] <shka> well, whatever, i never bothered to actually dig into how blockchain operates
[23:35:38] <shka> didn't seem to be all that interesting to be honest
[23:35:47] <selwyn> yeah
[23:35:55] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[23:36:08] <selwyn> i might have understood it at one point
[23:36:14] <selwyn> but it is not interesting
[23:36:43] *** Joins: robin__ (~robin@user/terpri)
[23:37:03] <phoe> it's a decentralized database + rules for adding new stuff into it
[23:37:04] *** Quits: robin (~robin@user/terpri) (Ping timeout: 250 seconds)
[23:37:56] <phoe> the former maintains history, the latter gives the rules of performing transactions and generating new coins in case of DeFi blockchains (which are, like, 99.99% of them in existence)
[23:38:27] <shka> ... i think that i don't care
[23:38:50] <selwyn> why are they more vulnerable to having their shit taken than banks using 50s legacy code
[23:39:22] <shka> nah
[23:39:22] <selwyn> is everything done with shitty electron apps
[23:39:46] <shka> selwyn: unless we are maybe talking about american banks, i don't think you can find code this old 
[23:40:08] <shka> and besides, banks usually guarantee deposits 
[23:40:57] <shka> and i doubt you can find anything like that even in the us
[23:50:43] <selwyn> i guess banks have a way of checking 'do we actually want to tranfer $320m'
[23:51:12] <shka> because this is very simple
[23:51:43] <shka> check if user HAS $320m before transferring $320m 
[23:51:48] <shka> (duh)
[23:54:03] <sm2n> also there is flexibility in the system
[23:58:37] *** Quits: robin__ (~robin@user/terpri) (Ping timeout: 240 seconds)
[23:59:00] <edgar-rft> no, transfer the $320m to me first :-)
