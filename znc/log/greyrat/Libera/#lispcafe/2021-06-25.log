[10:46:42] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[10:46:42] *** Server sets mode: +nrt 
[10:47:03] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[11:05:10] *** Joins: shka (~herr@109.231.62.239)
[11:39:02] *** Joins: selwyn (~selwyn@user/selwyn)
[11:51:33] *** Joins: treflip (~user@95.79.32.99)
[11:53:52] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[12:22:15] *** Quits: treflip (~user@95.79.32.99) (Remote host closed the connection)
[13:07:35] <shka> hi all
[13:07:47] <shka> so... when is the next test launch of the starship?
[13:07:53] <shka> any info on that?
[13:12:57] <shka> https://www.youtube.com/watch?v=WZCs4Eyalxc
[13:12:58] -ixelp- The Eternal Flame (God Wrote in Lisp) (Live) - YouTube
[13:13:31] <shka> love that laugh 56 seconds
[13:23:11] *** Joins: elflng (~elflng@5.28.137.182)
[13:23:38] *** Quits: elflng (~elflng@5.28.137.182) (Client Quit)
[13:35:21] *** Joins: elflng (~elflng@5.28.137.182)
[13:46:19] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:fdad:b9cb:7f55:135b)
[13:47:37] *** Quits: SAL9000 (~SAL9000@shirakumo/sal9000) (Remote host closed the connection)
[13:52:04] <shka> https://www.youtube.com/watch?v=3NqnZZR3S20
[13:52:05] -ixelp- SICP Jingle - Jesu, Joy of Man`s Desiring - YouTube
[14:03:35] *** Joins: selwyn (~selwyn@user/selwyn)
[14:20:01] *** Joins: SAL9000 (~SAL9000@shirakumo/sal9000)
[14:58:42] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[15:00:05] *** Joins: Gnuxie (~gnuxie@user/gnuxie)
[15:07:42] *** Joins: hayley (~theemacss@user/hayley)
[15:20:05] *** Joins: random-nick (~random-ni@87.116.165.220)
[15:38:53] *** Joins: treflip (~user@95.79.32.99)
[15:43:52] <gilberth> Good morning #lispcafe!
[15:50:04] <treflip> gilberth:  Good morining (although, it's noon in Russia ) :) 
[15:51:11] <gilberth> Noon? It's 13h20 here, shouldn't you be more ahead?
[15:52:30] <shka> gilberth: russia is a large place
[15:52:45] <treflip> I meant the afternoon >_<
[15:52:54] <shka> right
[15:53:09] <gilberth> shka: Sure, but all east from here.
[15:53:45] <gilberth> Anyhow, perfect time for me to get up.
[15:54:46] <hayley> Good morning gilberth!
[15:55:38] <gilberth> Hey hayley, how are you doing? Read my message about 'stopped'?
[15:56:45] <hayley> Yes.
[15:58:38] <gilberth> This is a bot inconvenient, I want proper CATCH/THROW and error handling, so I would need to install error handlers for all errors. The generic one 'handleerror' is not invoked, when 'stopped' is active. But: Like in Lisp the error handlers are invoked without evidence covered up.
[16:00:45] <gilberth> The good news is: PS is more versatile here than I thought initially. It makes for a good VM.
[16:07:46] <shka> selwyn: https://www.hltv.org/news/10629/esea-caught-in-bitcoin-scam
[16:07:46] -ixelp- ESEA caught in Bitcoin scam | HLTV.org
[16:07:53] <shka> :D
[16:12:18] <gilberth> Who is ESEA?
[16:15:13] <shka> matchmaking service
[16:15:22] <shka> pretty shitty one as you can see :D
[16:16:57] <gilberth> Ah ok. Have you heart about this South African bitcoin trader pretending to have been hacked and having lost like 69,000 Bitcoins?
[16:29:58] <selwyn> shka: an april fool?
[16:30:20] <selwyn> oh, article was published on 1 may
[16:30:27] <selwyn> an article to rally the workers then
[16:30:46] <selwyn> anyway, lol
[16:46:53] <shka> selwyn: yup
[16:47:01] <shka> lol
[16:48:00] <gilberth> Hmm, PS has no real EQ, as the 'eq' operator compares strings like EQUAL. For non-zero, writable strings I could probe for identity by modifying one of them, but this won't work for zero length strings. :-(
[16:50:59] <selwyn> may i ask why it is postscript season in #lispcafe
[16:52:07] <shka> well, as far as i can tell hayley was bored and things kinda escalated 
[16:52:19] <gilberth> Because I had the crazy idea to implement my toy Lisp in PS.
[16:52:23] <hayley> haha C to printer toolchain goes brrr
[16:52:57] <gilberth> It works, but I need a better compiler not using the dictstack for lexicals.
[16:53:31] <selwyn> can we have a lisp implemented in pdf?
[16:53:57] <gilberth> selwyn: Nope. PDF is not a programming language.
[16:54:06] <selwyn> oh
[16:54:07] <selwyn> :(
[16:54:12] <selwyn> just as well i suppose
[16:54:14] <selwyn> imagine the exploits
[16:54:47] <gilberth> We had PS before PDF. And it is a real pity that Display PostScript was patented.
[16:56:02] <gilberth> Imagine DPS being part of X11, which it was. No silly pushing around of bitmaps over the wire, as Wayland and friends want to do. Glorified VNC.
[16:56:17] *** Joins: Duuqnd (~duuqnd@89-253-114-156.customers.ownit.se)
[16:56:43] <shka> ok, so it was the gilberth who was bored
[16:56:56] <shka> https://www.youtube.com/watch?v=NO5wHzI_oug&t=1103s
[16:56:56] -ixelp- itCppCon21 Welcome (Marco Arena) + KEYNOTE "WARNING: std::find is broken" (Sean Parent) - YouTube
[16:57:49] <gilberth> shka: Well, my pet project is to implement toy Lisp in different languages. Like Go, or PS now. I still consider /bin/sh.
[16:57:57] <selwyn> wow
[16:58:07] <selwyn> you may be aware then that it has been done in bash
[16:58:26] <gilberth> MBASIC is done. However, I would like to craft a spec, so that they are all alike.
[16:58:48] <gilberth> selwyn: Using files for cons cells?
[16:59:20] <selwyn> using variables (bash arrays i think)
[16:59:29] <selwyn> using files: lol
[16:59:32] <selwyn> good luck
[16:59:40] <gilberth> Yes, this is my idea.
[17:00:13] <gilberth> Unfortunatly, I can't hear my disk array from here. :-(
[17:02:26] <gilberth> But GS is way faster than I thought, it matches CLISP for FIB in speed. But then CLISP function calling isn't too fast.
[17:03:24] <gilberth> I also would like to do this for 8080, but then there already is muLisp, which is a brilliant implementation.
[17:22:38] *** Quits: Duuqnd (~duuqnd@89-253-114-156.customers.ownit.se) (Remote host closed the connection)
[17:22:59] *** Joins: Duuqnd (~duuqnd@89-253-114-156.customers.ownit.se)
[17:25:33] *** Quits: wallymathieu (~wallymath@81-234-151-21-no94.tbcn.telia.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[17:26:26] *** Quits: Duuqnd (~duuqnd@89-253-114-156.customers.ownit.se) (Read error: Connection reset by peer)
[17:29:35] *** Quits: selwyn (~selwyn@user/selwyn) (Quit: Leaving)
[17:31:05] <dave0> gilberth: is this it? https://github.com/MattX/mulisp
[17:31:05] -ixelp- GitHub - MattX/mulisp: Tiny lisp intepreter. In C.
[17:33:43] <hayley> dave0: http://www.edm2.com/index.php/MuLISP
[17:33:44] -ixelp- MuLISP - EDM2
[17:43:40] <gilberth> dave0: Yep, hayley found the Microsoft Lisp.
[17:46:06] <gilberth> I almost disassembled the CP/M 80 version. Or rather named labels and routines and inserted comments and crafted an .ASM file to be assembled again. I have also "compiled" the thing to C. Perhaps when I am more bold, I'd publish it. Would MS sue me? I doubt it, as e.g. DOS sources are published already. But: I'd like to ask somewhen.
[17:47:06] <gilberth> This is one of the Lisps I grew up with. Pretty fast.
[17:47:53] <hayley> <beach> I didn't know he [Dave Patterson] was Ungar's advisor, but that would be an example of the student surpassing the advisor, which is fortunately very common.
[17:47:59] <gilberth> It came with an "IDE" called AIDS, AI development system. With a structural editor. Never really used that.
[17:48:05] <hayley> beach is in the Ungar gang
[17:49:40] <hayley> In a presentation, Ungar also mentioned that Patterson said generational GC wasn't worth it relative to plain ol' refcounting and an object table which was typical for Smalltalk.
[17:50:22] <hayley> Patterson said "bet you dinner that you won't make it 70%" faster, Ungar made it 73% faster and went to a nice restaurant.
[17:50:52] <gilberth> Since when is reference counting a GC? Could that idea die, please?
[17:50:56] *** Joins: brainfunnel (~quassel@254.11.99.195.dyn.plus.net)
[17:51:34] <hayley> Er, no, that was the Deutsch from idk where and not Patterson.
[17:52:27] <hayley> gilberth: Check the Blue Book again? Before generational scavenging they thought it to be best for interactive systems.
[17:52:56] <hayley> The Green Book (the one on implementation) also mentions Liebermann-Hewitt and Baker IIRC.
[17:53:17] <gilberth> My Blue Book is sitting in the book case at my house.
[17:54:33] <hayley> But I disabled refcounting on my Wii Smalltalk port and got a low free space warning before mark-sweep ran, so I think it was normal then.
[17:55:08] <hayley> OTOH Tectronix hackers' first optimisation was to kill refcounting on their system.
[17:55:42] <hayley> Tektronix rather
[17:59:10] <hayley> http://www.wirfs-brock.com/allen/files/tek/Tek-Smalltalk-history-slides.pdf slide 16: "Reference counting adds 200% (runtime)"
[18:04:01] <gilberth> Tell that Apple.
[18:05:44] <hayley> Funny that Ungar now works on Swift and published a paper on optimizing refcounting.
[18:06:40] <hayley> The optimization is to do non-atomic updates if we know an object is only accessible to one thread, which is clever but requires a write barrier(?) and somehow not as awe-inspiring as the first generational scavenger.
[18:09:25] <gilberth> hayley: Funny indeed. And with Dylan Apple already almost was there. A pity.
[18:09:28] <hayley> The barrier part isn't so big though; you need a read barrier and you don't even get incremental compacting? What a joke. :)
[18:10:28] <gilberth> Perhaps I really craft April. But I would need marketing, which I am very bad at.
[18:11:02] <hayley> But then again, a Brooks style read barrier turns a read into two reads. A RC barrier turns a read into an atomic increment and a read.
[18:12:35] <hayley> gilberth: Are you around at about 7pm CEST?
[18:13:52] <hayley> I can't possibly make Cliff Click's coffee compiler club (which is at 10am PST, 7pm CEST, 3am AEST) but I am still trying to get his damn opinion on how to allocate registers on a windowless RISC.
[18:14:18] <hayley> And he probably thinks I am taking the piss on Twitter, or doesn't reply, or both. Which, to be fair, is usually true.
[18:15:51] *** Joins: selwyn (~selwyn@user/selwyn)
[18:17:13] <gilberth> hayley: 7pm, that is 19h00, right? Probably, though it will be around dinner time. But that is in the middle of the night for you, isn't it?
[18:17:18] <hayley> So if I get desperate, I write an email from my fancy domain -- oh wait, that likes to end up in spam, and it has a funny picture on the homepage.
[18:17:45] * gilberth is puzzled.
[18:18:03] <hayley> Yep.
[18:18:58] <hayley> Last meeting recording that caught my eye went off about "interpreted languages" so it might help for you to set them straight some, too.
[18:19:33] <gilberth> Are you talking about calling conventions?
[18:20:45] <hayley> Yes, Cliff said callee saves is a hassle for the few registers on x86.
[18:20:55] <selwyn> the czech republic had a tornado what the fuck
[18:21:02] <selwyn> had no idea you could get them in europe
[18:21:45] <gilberth> selwyn: This happens. We had a little here a few years ago.
[18:21:57] * hayley also wonders if Cleavir HIR can be used to make an interpreter which fuzzes out concurrency bugs.
[18:22:11] <gilberth> hayley: So you want me to participate in a meeting, or what? *stillpuzzled*
[18:22:28] <hayley> Rust has, er...miri I think, which does interpretation like that on their MIR, but we do HIR cause we're cool.
[18:22:49] <hayley> gilberth: Yes, the club is a video conference.
[18:23:31] <hayley> Well, maybe not you specifically, just anyone that I can find in a compatible timezone.
[18:26:37] <gilberth> brb
[18:28:22] <hayley> https://github.com/rust-lang/miri/pull/1617 says they use vector clocks to find races.
[18:38:16] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[18:57:44] *** Joins: selwyn (~selwyn@user/selwyn)
[19:03:02] *** Quits: treflip (~user@95.79.32.99) (Remote host closed the connection)
[19:15:20] *** Joins: wheelsucker (~user@2600:8801:8c11:4c00::707)
[19:32:52] *** Joins: makomo (~makomo@user/makomo)
[19:32:58] *** Quits: makomo (~makomo@user/makomo) (Client Quit)
[19:35:18] *** Joins: makomo (~makomo@user/makomo)
[19:47:58] *** Joins: derelict (~derelict@user/derelict)
[19:54:02] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 258 seconds)
[20:11:00] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[20:16:42] *** Quits: wheelsucker (~user@2600:8801:8c11:4c00::707) (Ping timeout: 250 seconds)
[20:18:08] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 244 seconds)
[20:20:22] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[20:49:47] *** Joins: wheelsucker (~user@2600:8801:8c11:4c00::707)
[20:51:24] *** Joins: lad (~lad@user/lad)
[20:53:48] *** Joins: lisp123 (~Guest63@5.30.23.247)
[20:54:47] <lisp123> any good YouTube videos to watch while eating food?
[21:03:33] <shka> lisp123: https://www.youtube.com/watch?v=Uek04Jw15kY
[21:03:34] -ixelp- The Mexican American Border | From War to Wall - YouTube
[21:04:04] <lisp123> thanks :D
[21:33:56] *** Quits: lad (~lad@user/lad) (Remote host closed the connection)
[21:38:27] *** Joins: wallymathieu (~wallymath@81-234-151-21-no94.tbcn.telia.com)
[21:43:30] *** Joins: rogersm (~rogersm@107.pool85-56-92.dynamic.orange.es)
[21:45:44] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[21:49:37] *** Quits: rogersm (~rogersm@107.pool85-56-92.dynamic.orange.es) (Quit: Leaving...)
[21:53:21] *** Joins: notzmv (~zmv@user/notzmv)
[21:55:01] *** Joins: aeth_ (~Michael@user/aeth)
[21:55:11] *** Quits: aeth (~Michael@user/aeth) (Killed (NickServ (GHOST command used by aeth_)))
[21:55:17] *** aeth_ is now known as aeth
[22:29:43] *** Joins: lad (~lad@user/lad)
[22:37:20] *** Joins: drbluefall (~drbluefal@pool-162-83-177-90.nycmny.fios.verizon.net)
[22:39:49] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 272 seconds)
[22:40:23] *** Quits: makomo (~makomo@user/makomo) (Quit: WeeChat 3.0.1)
[22:48:24] *** Joins: derelict (~derelict@user/derelict)
[22:56:12] *** Quits: lad (~lad@user/lad) (Remote host closed the connection)
[22:56:36] *** Joins: lad (~lad@user/lad)
[23:01:43] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 244 seconds)
[23:18:21] *** Joins: derelict (~derelict@user/derelict)
[23:33:45] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 244 seconds)
[23:45:42] *** Quits: drbluefall (~drbluefal@pool-162-83-177-90.nycmny.fios.verizon.net) (Ping timeout: 252 seconds)
[23:49:52] *** Quits: lisp123 (~Guest63@5.30.23.247) (Ping timeout: 272 seconds)
