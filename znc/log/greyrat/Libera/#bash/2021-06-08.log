[00:00:28] *** Quits: SuperLag (~akulbe@user/superlag) (Killed (NickServ (GHOST command used by SuperL4g)))
[00:00:38] *** SuperL4g is now known as SuperLag
[00:04:47] <alguien> why doesn't anyone online suggest ed?
[00:04:52] <alguien> everyone's suggestin sed
[00:05:05] <twkm> we did suggest ed.
[00:05:07] <greycat> It's the linux kiddie cargo cult.
[00:05:08] <alguien> anyway, how do I match globally in bash?
[00:05:15] <twkm> and we're online.
[00:05:18] <alguien> twkm, ah right, you are online too
[00:05:20] <greycat> ${foo//old/new} with two slashes
[00:05:23] <alguien> I meant on stack overflow and such
[00:05:33] <twkm> idiot overflow is what it is.
[00:05:50] <alguien> well teach them
[00:06:15] <alguien> greycat, don't need to substitute. Trying to find uppercase letters in a string
[00:06:16] *** Joins: cliluw (~cliluw@47.147.80.149)
[00:06:24] <greycat> And do what?
[00:06:36] <alguien> convert SomePascalIdentifier to spi
[00:06:43] <twkm> it is like "finding" is hard or needs to be global.
[00:06:56] <alguien> I know how to lower, but don't know how to match more than an S
[00:07:06] <greycat> # foo="SomeCamelCaseThing"; echo "${foo//[![:upper:]]/}"
[00:07:07] <shbot> greycat: SCCT
[00:07:24] <greycat> that's your starting point.  store that in a second variable and you can use ${bar,,} on it to lowercase it.
[00:07:46] <alguien> nice thanks
[00:08:05] <alguien> let me just see if I can get what that does..
[00:08:14] <twkm> ahh, so extract all the upper-case characters.
[00:08:44] *** Joins: s0ullight (~s0ullight@ip-62-235-51-95.dsl.scarlet.be)
[00:09:20] <alguien> aha, removes everything that is not an uppercase letter
[00:09:35] <alguien> but what is !? shouldn't it be ^?
[00:09:47] <greycat> bash permits you to use ^ if you prefer, but it's an extension
[00:10:08] <greycat> then again, so is ${var//x/y}
[00:10:18] *** Quits: Starmina (~Starmina@212.170.25.93.rev.sfr.net) (Ping timeout: 244 seconds)
[00:10:55] <greycat> The original Bourne shell used ^ as a synonym for | (pipeline), so globs in the original Bourne shell use {!abc] rather than the [^abc] you see in BRE/ERE.
[00:11:08] <greycat> POSIX only requires support for [^abc] in globs.
[00:11:10] <greycat> err.
[00:11:13] <greycat> POSIX only requires support for [!abc] in globs.
[00:11:44] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[00:12:37] *** Joins: Starmina (~Starmina@212.170.25.93.rev.sfr.net)
[00:13:02] <alguien> I didn't even know about !
[00:13:24] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 245 seconds)
[00:13:36] <alguien> I am surprised
[00:13:47] *** grettke is now known as grettke2
[00:14:02] <alguien> thanks again
[00:15:02] <s0ullight> I'm working on a bash script where $AVERAGE holds the value of 7288 and ${#DURATIONS[@]} has a length of 24 and when I do AVERAGE=$(($AVERAGE / ${#DURATIONS[@]})) it gives me the value of 303, but when returned it somehow becomes 47
[00:15:03] *** grettke2 is now known as YourNick2
[00:16:06] <koala_man> s0ullight: 'return' is only for exit codes. don't use it for data
[00:16:20] *** YourNick2 is now known as grettke2
[00:16:24] <greycat> # echo $((303 % 256))
[00:16:25] <shbot> greycat: 47
[00:16:41] <greycat> !faq return a string
[00:16:41] <greybot> https://mywiki.wooledge.org/BashFAQ/084 -- How do I return a string (or large number, or negative number) from a function?  "return" only lets me give a number from 0 to 255.
[00:17:03] <s0ullight> that helps, thanks!
[00:17:06] *** grettke2 is now known as grettke
[00:17:37] <s0ullight> so, instead I should have a variable hold the value and use that?
[00:17:46] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[00:17:54] <greycat> the FAQ page offers a few suggestions, none of which is perfect for all scripts
[00:18:33] <yitz> Usual approach is to `printf` a result and use $()
[00:18:35] <greycat> storing the output value in a global variable works well in many cases
[00:19:05] <greycat> using $() is common but inefficient because it makes the script fork a child process for every call
[00:19:28] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[00:19:54] <s0ullight> Storing the value in a global variable solved it for me!
[00:20:08] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Client Quit)
[00:21:07] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[00:22:34] *** Joins: andrzejv (~andrzejv@78-56-77-187.static.zebra.lt)
[00:23:49] *** Quits: sunarch (~x@user/sunarch) (Ping timeout: 245 seconds)
[00:26:58] *** Joins: pj (~pj@ghettoforge/pj)
[00:27:28] *** Quits: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e) (Quit: AAAGH!  IT BURNS!)
[00:27:39] <s0ullight> does a function have to be declared above the first time it's used or can it be at the end of the script as well?
[00:27:50] *** Joins: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e)
[00:27:57] <greycat> it has to be defined before you can call it
[00:27:58] *** Quits: deekej[m] (~deekej@2001:470:69fc:105::a6c) (Quit: Bridge terminating on SIGTERM)
[00:28:28] *** Quits: magla (~gelignite@55d4cf16.access.ecotel.net) (Quit: Stay safe!)
[00:28:39] <greycat> the actual position doesn't matter, so long as you've called the code to define the function
[00:28:50] *** Joins: nicoty[m] (~nicoty@user/nicoty)
[00:29:17] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[00:29:24] <greycat> e.g. some people move the majority of the script into a main() function and then call it at the very end
[00:29:25] *** Joins: deekej[m] (~deekej@2001:470:69fc:105::a6c)
[00:29:39] *** Joins: chambln (~chambln@user/chambln)
[00:29:46] <greycat> main() can call other functions which are defined below it, since they've been defined by the time you *call* main
[00:30:51] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 252 seconds)
[00:32:30] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[00:32:45] *** Quits: absc (~absc@dynamic-adsl-94-34-175-104.clienti.tiscali.it) (Remote host closed the connection)
[00:34:20] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[00:35:52] <nf> !features
[00:35:52] <greybot> "What bash version added feature X?" -- http://mywiki.wooledge.org/BashFAQ/061
[00:39:35] *** Joins: mikeliuk (~mikeliuk@213.205.198.26)
[00:39:52] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[00:39:52] *** grettke is now known as grettke2
[00:41:27] *** Joins: kolbe (~kolbe@user/kolbe)
[00:43:07] *** Joins: smlavine (smlavine@sourcehut/user/smlavine)
[00:45:04] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 245 seconds)
[00:46:23] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[00:47:59] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 245 seconds)
[00:51:21] *** Joins: opv (~opv@methodsofcontrol.com)
[00:52:23] *** Quits: mesaboogie (cannabis_i@user/mesaboogie) (Ping timeout: 272 seconds)
[00:54:20] *** Quits: grettke2 (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[00:56:29] *** Joins: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854)
[00:58:16] *** Joins: danif (~danif@109-93-203-8.dynamic.isp.telekom.rs)
[01:00:59] *** Quits: L3 (~L3@user/l3) (Quit: o/)
[01:01:03] *** Quits: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854) (Client Quit)
[01:01:24] *** danif is now known as nikodijev
[01:01:29] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[01:02:08] *** Joins: pj (~pj@ghettoforge/pj)
[01:02:24] *** Joins: cliluw (~cliluw@47.147.80.149)
[01:03:47] *** Quits: nikodijev (~danif@109-93-203-8.dynamic.isp.telekom.rs) (Quit: Quit)
[01:03:54] <earnestly> !sigint
[01:03:54] <greybot> How the shell handles ^C (SIGINT) and why: http://www.cons.org/cracauer/sigint.html
[01:04:01] *** Joins: nikodijev (~danif@109-93-203-8.dynamic.isp.telekom.rs)
[01:04:08] *** Quits: nikodijev (~danif@109-93-203-8.dynamic.isp.telekom.rs) (Client Quit)
[01:05:12] *** Joins: nikodijev (~nikodijev@109-93-203-8.dynamic.isp.telekom.rs)
[01:06:35] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[01:06:37] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 244 seconds)
[01:07:51] *** Quits: mikeputnam (~mikeputna@wilug/mikeputnam) (Quit: WeeChat 2.8)
[01:09:27] *** Joins: cliluw (~cliluw@47.147.80.149)
[01:10:04] *** Quits: nikodijev (~nikodijev@109-93-203-8.dynamic.isp.telekom.rs) (Client Quit)
[01:10:44] *** Joins: akoana (~ah@user/akoana)
[01:14:57] *** Quits: julius_c (~julius_c@235.red-83-57-77.dynamicip.rima-tde.net) (Quit: Leaving)
[01:15:53] *** Joins: alguien (~alguien@user/alguien)
[01:17:46] *** Joins: chriskauffman (~chriskauf@204.14.236.153)
[01:18:24] *** Joins: Codaraxis (~Codaraxis@89.45.7.142)
[01:24:36] *** Joins: mesaboogie (mesaboogie@user/mesaboogie)
[01:26:28] <eschwartz> greycat: I don't think I've ever seen a main() function in bash be anywhere other than at the end of the file, immediately before `main` :/
[01:26:42] <greycat> Maybe not, but you *can*.
[01:27:22] <eschwartz> sure, it just depresses me that people use that particular kind of function for zero reason
[01:27:35] <eschwartz> usually with the rationale "enables using local variables", even
[01:27:57] <greycat> I think some do it with the rationale "now I can edit the script while it's running without invoking nasal demons".
[01:28:14] <eschwartz> that's another great one...
[01:28:15] <earnestly> I honestly don't believe anyone actually knows that
[01:28:26] <earnestly> Besides like three people here
[01:29:20] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[01:29:30] *** Quits: dub_a (~dub_a@2601:1c2:4e00:3b3::cb2) (Ping timeout: 272 seconds)
[01:30:05] <eschwartz> I've unironically seen both "using a main function lets you use local variables to protect from other parts of the script overwriting muh variables" and "upgrading the script by a package manager unlinking the file and replacing it with a new version might cause bash to read the wrong contents, this is 100% an emergency"
[01:30:25] <eschwartz> not even editing the file in place :/
[01:30:48] *** Quits: alexbk (~alexbk@c-73-157-41-15.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[01:31:08] <eschwartz> I could be dead wrong, but... surely bash uses an fd to the script file for this?
[01:31:16] *** Joins: dub_a (~dub_a@static-198-54-131-86.cust.tzulo.com)
[01:31:36] <greycat> removing and recreating the script breaks the connection, yes.
[01:31:44] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 245 seconds)
[01:41:16] *** Quits: cliluw (~cliluw@47.147.80.149) (Quit: Leaving)
[01:42:03] *** Quits: mikeliuk (~mikeliuk@213.205.198.26) (Quit: Connection closed)
[01:42:12] *** Joins: cliluw (~cliluw@47.147.80.149)
[01:42:39] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[01:47:10] <e36freak> i thought when you unlink something anything that's actively reading it is still good until it closes the fd?
[01:47:41] <greycat> that's correct. the problem occurs when someone edits the script "in place" instead of unlinking it.
[01:47:49] <e36freak> right
[01:48:00] *** Parts: bghimis (~bghimis@80.96.21.160) (WeeChat 3.1)
[01:50:54] *** Quits: Starmina (~Starmina@212.170.25.93.rev.sfr.net) (Ping timeout: 245 seconds)
[01:51:33] *** Joins: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854)
[01:51:50] <eschwartz> e36freak: yeah, that's what I thought too
[01:52:45] <eschwartz> it was just extra hilarious that someone who rewrote a particular script to use a main() function did so... literally because "if a linux package manager upgrades the script by unlinking"
[01:53:03] <eschwartz> and it was very laugh-worthy
[01:55:35] <geirha> also done in case of curl | sh
[01:56:45] <eschwartz> if you curl | sh you deserve every problem you get, including the ones caused by losing half the script to network errors :p
[01:57:15] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[01:58:11] *** Joins: Starmina (~Starmina@212.170.25.93.rev.sfr.net)
[02:00:09] <osse> that's why I curl > tmp; $EDITOR tmp; realize I don't give a shit; sh tmp
[02:01:43] <Soliton> but you already defeated the theoretical timing attack on your curl|sh!
[02:07:26] *** Quits: bgpepi (~bgpepi@ip-213-49-229-66.dsl.scarlet.be) (Remote host closed the connection)
[02:12:53] *** Joins: bgpepi (~bgpepi@ip-213-49-229-66.dsl.scarlet.be)
[02:14:43] *** Quits: DaNeenjah (~jake@adsl-74-230-10-210.hsv.bellsouth.net) (Quit: WeeChat 3.1)
[02:17:35] *** Joins: malina (~malina@user/malina)
[02:20:29] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 245 seconds)
[02:20:48] <oprypin> osse,  `curl | vipe | sh`  :p
[02:22:11] *** Quits: greycat (~greg@209.142.155.49) (Quit: Bye)
[02:22:16] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[02:24:38] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 244 seconds)
[02:25:25] *** Joins: cliluw (~cliluw@47.147.80.149)
[02:27:44] *** Joins: metanode (~metanode@user/metanode)
[02:28:07] *** grettke is now known as grettke2
[02:28:07] *** Quits: grettke2 (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:28:59] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[02:30:33] *** Joins: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de)
[02:31:56] *** Quits: Gamma (~Gamma@zsh/user/Gamma) (Quit: leaving)
[02:34:36] *** Quits: dub_a (~dub_a@static-198-54-131-86.cust.tzulo.com) (Ping timeout: 252 seconds)
[02:35:09] *** Quits: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[02:37:49] <earnestly> Make sure your editor can be made to exit non-zero
[02:38:06] <earnestly> (Or I suppose the input can be blanked)
[02:39:58] *** Joins: downunder (~downunder@110.151.120.49)
[02:40:21] *** Quits: seachdamh (~seachdamh@user/seachdamh) (Quit: Going offline, see ya! (www.adiirc.com))
[02:41:41] *** Joins: keypushe- (keypusher@user/keypusher)
[02:41:50] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 252 seconds)
[02:43:32] *** grettke is now known as grettke2
[02:43:38] *** Quits: grettke2 (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:44:43] *** keypushe- is now known as keypusher
[02:48:05] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 272 seconds)
[02:52:24] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[02:54:50] *** Quits: The_Loko (~The_Loko@79.116.4.241) (Quit: Leaving)
[02:56:07] *** Quits: nobody_ (~nobody@host-87-9-175-157.retail.telecomitalia.it) (Ping timeout: 264 seconds)
[02:58:03] *** Quits: s0ullight (~s0ullight@ip-62-235-51-95.dsl.scarlet.be) (Quit: Client closed)
[02:58:10] *** Quits: cliluw (~cliluw@47.147.80.149) (Quit: Leaving)
[02:59:57] *** Joins: pj (~pj@ghettoforge/pj)
[03:02:39] *** Joins: DaNeenjah (~jake@adsl-74-230-10-210.hsv.bellsouth.net)
[03:04:18] *** Quits: tex (~super@user/dix) (Ping timeout: 252 seconds)
[03:06:09] *** Quits: keypusher (keypusher@user/keypusher) (Quit: bye)
[03:07:02] <lsrtl_> when piping, is it possible to feed it to the next command line by line
[03:07:26] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[03:08:09] <lsrtl_> for instance "$cat <file_with_10_path> | rm"
[03:10:02] *** Joins: keypusher (keypusher@user/keypusher)
[03:10:05] <eschwartz> lsrtl_: you mean something totally different, like "when piping, is it possible to transform it into not-piping, but arguments to the next command"
[03:10:29] <eschwartz> and the answer is, "someone asked this question before and created xargs"
[03:11:57] *** Quits: Krail (~Krail@user/alexdelarge) (Quit: You know...â•­âˆ©â•®)
[03:12:13] *** Joins: smol (~smol@user/smol)
[03:14:49] *** Quits: keypusher (keypusher@user/keypusher) (Remote host closed the connection)
[03:15:16] *** Joins: keypusher (keypusher@user/keypusher)
[03:18:25] *** Joins: dermoth (~dermoth@dsl-66-36-157-80.mtl.aei.ca)
[03:20:48] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 252 seconds)
[03:23:30] <ash_worksi> I've probably asked this before but you can't just replace an arugment at a position using history expansion, can you? pseudo example: !!:s/$1/foo
[03:24:07] *** Quits: dermoth (~dermoth@dsl-66-36-157-80.mtl.aei.ca) (Remote host closed the connection)
[03:24:25] *** Joins: dermoth (~dermoth@dsl-66-36-157-80.mtl.aei.ca)
[03:26:43] *** Joins: brezanac (~brezanac@dynamic-213-198-222-227.adsl.eunet.rs)
[03:29:39] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 245 seconds)
[03:30:39] *** Joins: Crassus (~Crassus@user/crassus)
[03:31:10] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[03:31:11] *** Joins: Crescendo (~Crescendo@user/crescendo)
[03:31:23] <eschwartz> ash_worksi: do you mean, tell history expansion to tokenize the line into words, then replace a numbered word?
[03:31:39] *** Quits: brezanac (~brezanac@dynamic-213-198-222-227.adsl.eunet.rs) (Quit: Leaving)
[03:31:49] <eschwartz> because I don't think so... the entire point of history expansion is it operates before the line is parsed by bash
[03:33:18] *** Quits: metanode (~metanode@user/metanode) (Quit: Leaving)
[03:34:21] *** Quits: smol (~smol@user/smol) (Quit: smol)
[03:35:39] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[03:36:30] *** Quits: chriskauffman (~chriskauf@204.14.236.153) (Ping timeout: 250 seconds)
[03:36:58] *** Joins: Crescendo (~Crescendo@user/crescendo)
[03:37:49] <ash_worksi> eschwartz: I mean, you can reference historical arguments by position: for example: `ssh !!:2` is valid
[03:37:52] *** Quits: eschwartz (~eschwartz@archlinux/bugwrangler/eschwartz) (Read error: Connection reset by peer)
[03:38:09] <larryv> ash_worksi: i guess you could try something like !!:-0 foo !!:2*
[03:38:20] <larryv> i don't know how robust that is
[03:38:24] *** Quits: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e) (Quit: AAAGH!  IT BURNS!)
[03:38:30] <larryv> also uhm verbose
[03:39:21] *** Joins: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e)
[03:39:23] *** Joins: eschwartz (~eschwartz@archlinux/bugwrangler/eschwartz)
[03:40:02] <ash_worksi> yeah, I mean that's kind of the conundrum in it-of-itself; like, if I do something like `mycommand 116852211 'some' 'other' 'stuff'` and I want to replace the number with a different one, to use history expansion I have to type the number out again
[03:41:08] <ash_worksi> I mean, if I'm concatenating history expansions, it might feel more awkward then just pressing the up-arrow key, moving back to the number deleting it and re-entering
[03:41:42] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 252 seconds)
[03:44:37] *** Quits: phillbush (~phillbush@user/phillbush) (Quit: Leaving)
[03:47:41] *** Joins: superboot (~agentgasm@user/superboot)
[03:50:25] *** Quits: bgpepi (~bgpepi@ip-213-49-229-66.dsl.scarlet.be) (Remote host closed the connection)
[03:51:39] *** Quits: iNeedKoffee (~ubuntu@public.sa-edbd-dsto-liva1.aarnet.net.au) (Quit: Konversation terminated!)
[03:53:03] *** Joins: phillbush (~phillbush@user/phillbush)
[03:53:03] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[03:53:14] *** Quits: igemnace (~ian@2001:4451:4409:5500:1742:292d:a06d:fb23) (Read error: Connection reset by peer)
[03:53:51] *** Joins: thiras (~thiras@user/thiras)
[04:00:40] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[04:08:36] *** Quits: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e) (Quit: AAAGH!  IT BURNS!)
[04:09:45] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[04:09:50] *** Joins: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e)
[04:15:02] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[04:15:39] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[04:18:33] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[04:18:33] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 252 seconds)
[04:18:50] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:20:02] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[04:20:48] *** Joins: bboles (~bboles@64.94.212.195)
[04:23:07] *** Joins: anton (~anton@tilde.team/user/anton)
[04:25:54] *** grettke is now known as grettke2
[04:25:54] *** Quits: grettke2 (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[04:28:26] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[04:29:56] *** Joins: nichedev (~tux0r@99-72-201-62.lightspeed.rcsntx.sbcglobal.net)
[04:30:05] *** Joins: bgpepi (~bgpepi@ip-213-49-229-66.dsl.scarlet.be)
[04:32:15] *** Quits: tuxOr (~tux0r@vpn.ahbelo.com) (Ping timeout: 244 seconds)
[04:34:16] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[04:34:30] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[04:40:46] *** Quits: Betal (~Beta@user/betal) (Ping timeout: 272 seconds)
[04:45:01] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 258 seconds)
[04:45:35] <Riviera> history expansion is for vi users being afraid of arrow keys
[04:46:22] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:51:19] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 245 seconds)
[04:52:10] *** Quits: anton (~anton@tilde.team/user/anton) (Quit: anton)
[04:52:30] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[04:52:40] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:53:26] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 244 seconds)
[04:56:48] *** Quits: bgpepi (~bgpepi@ip-213-49-229-66.dsl.scarlet.be) (Remote host closed the connection)
[04:57:34] *** Quits: gearnode (~gearnode@2a01cb000ce2c1008ca2093f6cef466a.ipv6.abo.wanadoo.fr) (Ping timeout: 245 seconds)
[04:57:35] *** Joins: igemnace (~ian@120.28.150.132)
[04:59:51] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[05:00:26] *** Joins: Crescendo (~Crescendo@user/crescendo)
[05:02:59] *** Joins: Betal (~Beta@user/betal)
[05:06:00] *** Joins: PlayerOne (~PlayerOne@55-207-55-95.baltnet.ru)
[05:06:06] <PlayerOne> # arr=(); arr+=(2); arr+=(3); arr+=(4); printf '%s, ' "${arr[@]}"; printf '; '; arr="${arr[@]/2}"; printf '%s, ' "${arr[@]}"; printf '\n';
[05:06:08] <shbot> PlayerOne: 2, 3, 4, ;  3 4, 3, 4,
[05:06:09] <PlayerOne> But why?
[05:06:45] <PlayerOne> # arr=(); arr+=(2); arr+=(3); arr+=(4); printf '%s;' "${#arr[@]}"; printf '; '; arr="${arr[@]/2}"; printf '%s' "${#arr[@]}"; printf '\n';
[05:06:47] <shbot> PlayerOne: 3;; 3
[05:07:29] <PlayerOne> Shouldn't it just remove the 2?
[05:09:16] <larryv> no, it shouldn't
[05:12:28] <larryv> arr="${arr[@]/2}"  <- this assigns to arr[0]
[05:12:45] <larryv> # arr=(); arr+=(2); arr+=(3); arr+=(4); declare -p arr; arr="${arr[@]/2}"; declare -p arr
[05:12:46] <shbot> larryv: declare -a arr=([0]="2" [1]="3" [2]="4")
[05:12:46] <shbot> larryv: declare -a arr=([0]=" 3 4" [1]="3" [2]="4")
[05:13:36] *** grettke is now known as grettke2
[05:13:36] *** Quits: grettke2 (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[05:15:45] *** Quits: xx (~xx@user/xx) (Quit: xx)
[05:19:16] *** Quits: DaNeenjah (~jake@adsl-74-230-10-210.hsv.bellsouth.net) (Quit: WeeChat 3.1)
[05:21:08] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[05:21:24] *** Joins: JanC (~janc@user/janc)
[05:25:11] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[05:26:27] *** Joins: Crescendo (~Crescendo@user/crescendo)
[05:30:21] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:34:39] *** Joins: vlm (~vlm@user/vlm)
[05:40:53] *** Quits: dtux (~dtux@2600:1700:22f0:37bf:eaf3:b54e:2804:fa95) (Quit: dtux)
[05:43:31] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 272 seconds)
[05:47:17] *** Joins: Krail (~Krail@user/alexdelarge)
[05:56:41] *** Joins: pj (~pj@ghettoforge/pj)
[06:06:14] *** Joins: zebrag (~chris@user/zebrag)
[06:26:22] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[06:28:28] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[06:30:10] *** Quits: smlavine (smlavine@sourcehut/user/smlavine) (Quit: zzz)
[06:30:53] <PlayerOne> Roger that. Thank you.
[06:31:28] *** Joins: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de)
[06:36:03] *** Quits: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[06:37:01] *** Joins: zebrag (~chris@user/zebrag)
[06:37:43] *** Joins: smlavine (smlavine@sourcehut/user/smlavine)
[06:38:34] *** Joins: dtux (~dtux@107-131-127-0.lightspeed.sntcca.sbcglobal.net)
[06:45:14] *** Quits: kolbe (~kolbe@user/kolbe) (Quit: leaving)
[06:46:51] *** Joins: tijuco (~tijuco@user/tijuco)
[06:48:35] *** Quits: jsrnop (~mark@pool-72-66-97-117.washdc.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[06:49:32] *** Parts: akoana (~ah@user/akoana) ()
[06:49:39] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[06:50:29] *** Joins: jsrnop (~mark@pool-72-66-97-117.washdc.fios.verizon.net)
[06:52:17] *** Joins: Crescendo (~Crescendo@user/crescendo)
[06:54:54] <kurahaupo> ash_worksi: eschwartz: the ! history mechanism DOES to word splitting, but it is naÃ¯ve and doesn't follow the same tokenizing rules as the main shell. So if you want to repeat the last command and change the 3rd arg, you could type !!:0-2 !!:3:s/foo/bar/ !!:4*
[07:01:01] <kurahaupo> Many people say "history expansion is useless, you can just use the up arrow", but they fail to appreciate that you can use it to gather pieces of multiple commands together, like: diff <( !-4 ) <( !-2 ) && ln 1$ !-3:$ # try doing THAT just hitting up & down arrows
[07:02:29] <PlayerOne> ln: failed to access '1$': No such file or directory
[07:02:33] <kurahaupo> s/1$/!$
[07:03:06] <eschwartz> "history expansion is useless, by the time I've figured out what to type I could have just hit the up arrow, then copied line fragments into place"
[07:03:14] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 250 seconds)
[07:03:18] <eschwartz> ... or I suck at it, because I never used it
[07:03:19] <kurahaupo> (a touchscreen keyboard isn't ideal for coding)
[07:03:21] <PlayerOne> kurahaupo bash: syntax error near unexpected token `;'
[07:03:32] <eschwartz> I'm sure power users can do really neat things with it
[07:03:37] <PlayerOne> > touchscreen keyboard
[07:03:55] <PlayerOne> Hehe. Did you see these movie with such "hackers" XD
[07:04:01] <PlayerOne> Using such keyboards
[07:04:07] <PlayerOne> movies*
[07:04:23] <eschwartz> it not following the same tokenization rules (I thought so!) does seem like it could cause issues for usability...
[07:04:55] <PlayerOne> Like heck, they didn't even look at keyboard with no relief and texture. Any misclick is probably non-feelable
[07:06:18] <kurahaupo> eschwartz: Usability? This is the shell we're talking about. Usability isn't really its strong point, you're already expected to know what you're doing. Just learn the (additional) parsing rule that the history mechanism uses - to stick to using it on simpler cases like the ones I've suggested
[07:07:10] <kurahaupo> s/to stick/or stick/
[07:07:37] <kurahaupo> typing on a swipe keyboard isn't pecking out one letter at a time
[07:08:18] *** Joins: jetchisel (jetchisel@user/jetchisel)
[07:08:53] <PlayerOne> I'd say the shell has more freaking usability than anything yet invented sometimes
[07:09:48] <PlayerOne> Where the GUI might not include a button and thisis the end of the trp
[07:10:03] <kurahaupo> The main problem with using a swipe keyboard is that one tends to focus on looking for errors in the "important" words, and so doesn't notice errors in prepositions and negations that can completely alter the meaning of the entire sentence)
[07:11:20] <kurahaupo> PlayerOne: oh sure, if you're comparing with a GUI. My starting position isn't a GUI, it's a scripting language with a sane syntax
[07:12:24] <PlayerOne> Oh. Of course.
[07:12:54] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 252 seconds)
[07:16:05] *** Joins: dub_a (~dub_a@static-198-54-131-86.cust.tzulo.com)
[07:18:36] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[07:18:37] *** Quits: phillbush (~phillbush@user/phillbush) (Remote host closed the connection)
[07:26:58] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:32:16] *** Quits: dub_a (~dub_a@static-198-54-131-86.cust.tzulo.com) (Ping timeout: 250 seconds)
[07:34:54] *** Quits: darkbit (~db@152.32.99.67) (Ping timeout: 252 seconds)
[07:36:04] *** Joins: thebombzen (~thebombze@71.73.92.220)
[07:38:34] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 252 seconds)
[07:40:20] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[07:40:56] *** Quits: Crassus (~Crassus@user/crassus) (Ping timeout: 250 seconds)
[07:44:00] *** Quits: kurahaupo (~kurahaupo@202-7-184-72.tpgi.com.au) (Remote host closed the connection)
[07:44:11] *** Joins: kurahaupo (~kurahaupo@202-7-184-72.tpgi.com.au)
[07:45:46] *** Joins: Crescendo (~Crescendo@user/crescendo)
[07:51:42] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 258 seconds)
[07:52:00] *** Joins: Crassus (~Crassus@user/crassus)
[07:53:21] *** Quits: downunder (~downunder@110.151.120.49) (Quit: WeeChat 3.1)
[07:57:06] *** Quits: src (~src@user/src) (Ping timeout: 272 seconds)
[07:58:00] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[07:58:41] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[08:00:33] *** Quits: howdoi (uid224@id-224.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[08:02:42] *** Joins: ferdna (~ferdna@user/ferdna)
[08:16:37] *** Quits: smlavine (smlavine@sourcehut/user/smlavine) (Ping timeout: 258 seconds)
[08:18:17] *** Joins: kolbe (~kolbe@user/kolbe)
[08:27:28] *** Joins: nattiestnate (~nate@180.242.128.159)
[08:28:06] *** Joins: blue_penquin (~blue_penq@gateway/tor-sasl/bluepenquin/x-11613850)
[08:35:24] *** Joins: baguvix (~0xe3b7@echelon.lucif3r.ru)
[08:35:26] *** Joins: dub_a (~dub_a@static-198-54-131-86.cust.tzulo.com)
[08:36:48] <baguvix> where can i learn `sh` scripting but not newer `bash` scrpiting. i wanted to learn just `sh` but everything on the internet only teaches `bash`.
[08:37:34] <llua> sh gets updated too
[08:39:48] *** Quits: dub_a (~dub_a@static-198-54-131-86.cust.tzulo.com) (Ping timeout: 252 seconds)
[08:40:41] *** Quits: dtux (~dtux@107-131-127-0.lightspeed.sntcca.sbcglobal.net) (Quit: dtux)
[08:41:05] *** Joins: dtux (~dtux@2600:1700:22f0:37bf:52c7:436d:c1df:5b30)
[08:41:41] *** Joins: dub_a (~dub_a@2601:1c2:4e00:3b3::cb2)
[08:48:45] *** Joins: LuksNuke (~LuksNuke@94.242.245.63)
[08:49:12] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[08:49:46] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[08:49:59] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Client Quit)
[08:50:26] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[08:50:46] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Client Quit)
[08:50:56] <jetchisel> !posix
[08:50:56] <greybot> The POSIX standard defines what any modern unix should support. Use just POSIX external commands and options to make portable scripts. See http://shellhaters.org
[08:50:57] *** Joins: Mo (~Mo@dynamic-077-010-154-078.77.10.pool.telefonica.de)
[08:51:00] <jetchisel> hmmm...
[08:51:04] <jetchisel> https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html
[08:52:49] <jetchisel> Also shellcheck can point out a bashism syntax if you have an sh shebang.
[08:53:07] <jetchisel> !shellcheck
[08:53:07] <greybot> ShellCheck is a shell linting/suggestion tool. Information and online checker: http://www.shellcheck.net/ . Can also be installed locally as a CLI tool.
[08:55:20] *** Quits: vishal (~vishal@fedora/vishal) (Quit: ZNC 1.8.2 - https://znc.in)
[08:56:34] *** Quits: larryv (~larryv@zsh/patchmanager/larryv) (Quit: larryv)
[08:57:34] *** Joins: vishal (~vishal@fedora/vishal)
[08:57:55] *** Quits: timj (~timj@87.122.244.120) (Ping timeout: 264 seconds)
[09:02:18] *** Quits: tijuco (~tijuco@user/tijuco) (Quit: Leaving)
[09:12:33] *** Joins: timj (~timj@87.123.186.90)
[09:19:25] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:21:54] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:22:22] *** Joins: darkbit (~db@152.32.99.67)
[09:24:48] <baguvix> thanks for that shellhaters link. 
[09:27:22] *** Quits: PlayerOne (~PlayerOne@55-207-55-95.baltnet.ru) (Quit: Ping timeout (120 seconds))
[09:27:44] <baguvix> "GoGaRuCo 2010 - The Shell Hater's Handbook by: Ryan Tomayko" is pretty interesting. 
[09:28:27] *** Joins: PlayerOne (~PlayerOne@55-207-55-95.baltnet.ru)
[09:30:53] *** Quits: mesaboogie (mesaboogie@user/mesaboogie) (Ping timeout: 272 seconds)
[09:33:27] *** Joins: howdoi (uid224@id-224.tooting.irccloud.com)
[09:35:00] *** Quits: dub_a (~dub_a@2601:1c2:4e00:3b3::cb2) (Quit: WeeChat 3.1)
[09:35:15] *** Joins: dub_a (~dub_a@2601:1c2:4e00:3b3::cb2)
[09:36:57] *** Quits: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee) (Quit: Teleporting ...)
[09:39:14] *** Joins: earnestly (~earnest@user/earnestly)
[09:39:31] *** Parts: PlayerOne (~PlayerOne@55-207-55-95.baltnet.ru) ()
[09:44:09] *** Joins: mesaboogie (~mesaboogi@user/mesaboogie)
[09:44:47] *** Quits: kolbe (~kolbe@user/kolbe) (Quit: leaving)
[09:45:47] *** Joins: PlayerOne (~PlayerOne@55-207-55-95.baltnet.ru)
[09:45:49] <PlayerOne> Bad 8p8c port... Quite loose. Sorry for the reconnections... ^^
[09:48:43] *** Quits: dtux (~dtux@2600:1700:22f0:37bf:52c7:436d:c1df:5b30) (Quit: dtux)
[09:50:42] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 264 seconds)
[09:51:09] *** Joins: alexbk (~alexbk@c-73-157-41-15.hsd1.wa.comcast.net)
[09:51:13] *** Joins: tex (~super@user/dix)
[09:52:45] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[09:56:48] *** Joins: mesa (mesaboogie@user/mesaboogie)
[09:59:33] *** Quits: mesaboogie (~mesaboogi@user/mesaboogie) (Ping timeout: 252 seconds)
[10:02:04] *** Quits: LuksNuke (~LuksNuke@94.242.245.63) (Quit: Leaving)
[10:03:05] *** Joins: LuksNuke (~LuksNuke@94.242.245.63)
[10:04:20] *** Quits: mesa (mesaboogie@user/mesaboogie) (Ping timeout: 258 seconds)
[10:04:44] *** Quits: Krail (~Krail@user/alexdelarge) (Quit: You know...â•­âˆ©â•®)
[10:18:08] *** Joins: mesaboogie (~mesaboogi@user/mesaboogie)
[10:22:33] *** Quits: mesaboogie (~mesaboogi@user/mesaboogie) (Client Quit)
[10:28:25] *** Joins: downunder (~downunder@110.151.120.49)
[10:32:51] *** Joins: lavaball (~Melissa@31.204.155.215)
[10:33:44] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[10:40:45] *** Quits: jsrnop (~mark@pool-72-66-97-117.washdc.fios.verizon.net) (Ping timeout: 258 seconds)
[10:42:45] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[10:44:07] *** Joins: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de)
[10:45:52] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[10:46:58] *** Quits: chha (~chhs@user/chha) (Quit: Leaving)
[10:50:02] *** Quits: dklyle (~dklyle@134.134.139.76) (Remote host closed the connection)
[10:50:22] *** Joins: dklyle (~dklyle@134.134.137.75)
[10:50:39] *** Quits: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de) (Remote host closed the connection)
[10:51:15] *** Joins: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de)
[10:52:51] *** Quits: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de) (Remote host closed the connection)
[10:53:05] *** Joins: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de)
[10:55:24] *** Joins: mesaboogie (mesaboogie@user/mesaboogie)
[10:56:04] *** Joins: paniash (~ashish@122.164.116.212)
[10:56:11] *** Parts: paniash (~ashish@122.164.116.212) ()
[10:56:35] *** Joins: Crassus (~Crassus@user/crassus)
[10:58:06] *** Joins: LowTax_ (~LowTax@arch64-iad.elecompte.info)
[11:04:20] *** Quits: blue_penquin (~blue_penq@gateway/tor-sasl/bluepenquin/x-11613850) (Remote host closed the connection)
[11:05:04] *** Joins: blue_penquin (~blue_penq@gateway/tor-sasl/bluepenquin/x-11613850)
[11:06:28] *** Quits: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de) (Remote host closed the connection)
[11:07:05] *** Joins: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de)
[11:10:09] *** Joins: rendar (~rendar@user/rendar)
[11:11:25] *** Quits: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[11:17:26] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.1)
[11:17:27] *** Quits: LuksNuke (~LuksNuke@94.242.245.63) (Remote host closed the connection)
[11:18:43] *** Quits: opv (~opv@methodsofcontrol.com) (Remote host closed the connection)
[11:18:54] *** Joins: LuksNuke (~LuksNuke@94.242.245.63)
[11:19:21] *** Joins: fourHZ (~fourHZ@80.146.191.218)
[11:20:21] *** Quits: dklyle (~dklyle@134.134.137.75) (Remote host closed the connection)
[11:21:24] <hejux> PlayerOne: wtf fuck is that video about 
[11:21:36] <PlayerOne> Which one? o.o
[11:22:26] <lavadonut> https://www.youtube.com/watch?v=j1B_ScRYU4I
[11:22:37] *** Quits: somlis (~somlis@user/somlis) (Read error: Connection reset by peer)
[11:22:41] *** Quits: zeraphel (~daddy@2a00:a040:196:1438:96de:80ff:fefa:44a) (Ping timeout: 252 seconds)
[11:22:56] <PlayerOne> I'm sorry, but I don't even know what are you talking about :D
[11:23:06] <PlayerOne> Perhaps, different user?
[11:24:13] *** Joins: eoli3n_ (~eoli3n@162.38.105.222)
[11:24:22] <eoli3n_> Hi
[11:24:38] <eoli3n_> is 'if [ $key =! "value"]' == 'if [ ! $key == "value"]' ? strictly ?
[11:25:14] <geirha> with != instead of =! yes
[11:25:27] <geirha> and assuming bash, since == is undefined in posix test
[11:25:30] <eoli3n_> oups yep
[11:25:32] <hejux> PlayerOne: https://www.youtube.com/watch?v=WDiB4rtp1qw&t=410s
[11:25:50] <PlayerOne> Oh this is a legendary meme
[11:25:50] <geirha> also, missing space, and you quoted the wrong thing
[11:26:07] <geirha> if [ "$key" != value ]  # sh     or   if [[ $key != value ]]  # bash
[11:26:11] <PlayerOne> hejux check it's subtitles and related like: https://knowyourmeme.com/memes/kekw
[11:26:28] <eoli3n_> thanks geirha
[11:28:23] *** Joins: zeraphel (~daddy@2a00:a040:196:1438:96de:80ff:fefa:44a)
[11:30:40] *** Joins: alguien (~alguien@user/alguien)
[11:32:46] *** aidalgol_ is now known as aidalgol
[11:33:01] *** Quits: lavaball (~Melissa@31.204.155.215) (Remote host closed the connection)
[11:34:00] <hejux> PlayerOne: lmao
[11:36:17] *** Quits: richardm75 (~richardm7@2600:8801:c50b:3800:f43a:e649:4099:3d6f) (Ping timeout: 272 seconds)
[11:36:20] <PlayerOne> Always
[11:37:37] *** Joins: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de)
[11:40:23] *** Joins: bgpepi (~bgpepi@ip-213-49-229-66.dsl.scarlet.be)
[11:41:32] *** Joins: xx (~xx@user/xx)
[11:44:32] *** Quits: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854) (Quit: Konversation terminated!)
[11:44:38] *** Quits: fourHZ (~fourHZ@80.146.191.218) (Quit: Connection closed)
[11:45:12] *** Joins: fourHZ (~fourHZ@80.146.191.218)
[11:50:14] *** Joins: betuxy (~betuxy@158.181.77.59)
[11:53:09] <betuxy> Hey guys i want to remove duplicate entries of an array, i try to copy the elements in another array however it doesnt seem to work  https://hastebin.com/quxuraxosa.rb
[11:53:09] <pasteban> Paste is available without javascript on https://hastebin.com/raw/quxuraxosa
[11:54:45] <selckin> its sorted?
[11:54:54] <geirha> !assignment
[11:54:54] <greybot> To assign to a variable, use varname=value . Do not include spaces around the '=', and do not write $varname on the left hand side.
[11:55:04] <uplime> !umq
[11:55:04] <greybot> "$Use" "$More" "$Quotes" # see also !wordsplitting and !quotewhen
[11:55:07] *** Joins: gloomy_desktop (~ldorigo@81.161.149.37)
[11:55:12] * selckin wondering if its bash or algo questions
[11:55:38] <Soliton> !check
[11:55:40] <geirha> looks like both
[11:56:12] <Soliton> just use an assoc array.
[11:56:27] <betuxy> Soliton: how so?
[11:56:51] *** Quits: LuksNuke (~LuksNuke@94.242.245.63) (Remote host closed the connection)
[11:57:02] <Soliton> declare -A set; set[$key]=
[11:57:51] <Soliton> you can do that right when you build header (if you even need header as well)
[11:58:30] <betuxy> sorry should have asked more precisely, how does that remove the duplicates?
[11:58:44] <Soliton> keys are uniq.
[11:59:17] <betuxy> the thing is i already use a assoc. array for the header, to map mulitiple ip addresses to some keys
[11:59:47] <Soliton> well, then i guess you cannot use another assoc array. just one assoc array per script allowed.
[11:59:52] <Soliton> too bad
[12:01:56] *** Joins: LuksNuke (~LuksNuke@94.242.245.63)
[12:05:38] <alguien> Hey guys.
[12:06:00] <alguien> So bash has no back references in its regex substitution?
[12:06:46] <alguien> I was hoping to (eventually) transform camel case to snake case, starting with ${a//[[:upper:]]/\1_}
[12:06:51] <geirha> it doesn't have any regex substitution
[12:07:22] <alguien> geirha, sorry?
[12:07:36] <geirha> that parameter expansion uses globs, not regexes
[12:07:43] <geirha> !glob
[12:07:43] <greybot> Globs are shell patterns that can be used for matching strings or expanding pathnames: [[ $name = Bob* ]]; rm -- *.txt; see http://mywiki.wooledge.org/glob
[12:07:52] *** Joins: gearnode (~gearnode@2a01cb000ce2c1008ca2093f6cef466a.ipv6.abo.wanadoo.fr)
[12:08:42] <Soliton> !=~
[12:08:42] <greybot> The =~ operator of [[ evaluates the left hand string against the right hand ERE (see <ere>, <regex>). After a successful match, the BASH_REMATCH array contains the matched string and subexpressions (if any). Any quoted characters in the ERE become literal. Best to put the whole ERE in a variable: [[ $string =~ $regex ]]
[12:10:27] <alguien> geirha, indeed it is
[12:10:46] <geirha> # a=CamelCaseThing a=${a,}; while [[ $a =~ (..*)([[:upper:]].*) ]]; do a=${BASH_REMATCH[1]}_${BASH_REMATCH[2],}; done; declare -p a
[12:10:47] <shbot> geirha: declare -- a="camel_case_thing"
[12:11:03] <alguien> geirha, so is there a back reference for this bash substitution or should I go with Soliti... ok
[12:16:00] *** Quits: lavadonut (~lavadonut@172-222-149-079.res.spectrum.com) (Changing host)
[12:16:00] *** Joins: lavadonut (~lavadonut@user/lavadonut)
[12:16:15] <geirha> it's a bit annoying that the variable name, BASH_REMATCH, is so long, so that's one case where namerefs are nice. declare -n m=BASH_REMATCH; and then one can use "${m[1]}" instead of "${BASH_REMATCH[1]}"
[12:20:39] <Soliton> alguien: note that back references are a regex thing. (BRE even, like \(foo\)bar\1) you're talking about some operation that references a capture group of a regex. which is not something solely related to regex. regex just does the match what you do with some capture group is none of its business.
[12:20:59] *** Joins: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee)
[12:21:12] *** Joins: hlz (~rue@1-162-41-228.dynamic-ip.hinet.net)
[12:21:36] <Soliton> bash has no builtin feature like sed's s command.
[12:22:24] *** Joins: thx (~thx@69.4.234.75)
[12:22:50] <alguien> geirha, nice why not uppercase M though?
[12:22:56] <Riviera> (and whether bash supports back-references in its regexes depends on the c library it was built with)
[12:23:50] <alguien> thanks guys
[12:25:49] *** Quits: betuxy (~betuxy@158.181.77.59) (Quit: Connection closed)
[12:25:54] <thx> i like bash. :)
[12:26:55] <alguien> thx, ugh
[12:27:01] * alguien resolves to <<< to sed instead
[12:30:27] <thx> I see bash like the old dog sitting there, not going anywhere, and you know is there when you need it.  :)
[12:32:23] <Soliton> # var=CamelCaseThing n=${#var} var=${var,}; for ((i=0; i < n; ++i)); do c=${var:i:1}; [[ $c = [[:upper:]] ]] && var=${var:0:i}_${c,}${var:i+1}; done; declare -p var
[12:32:24] <shbot> Soliton: declare -- var="camel_case_thing"
[12:34:50] <Soliton> well, should build a new var.
[12:36:44] *** Quits: thx (~thx@69.4.234.75) (Quit: thx, but i have to go. :))
[12:40:20] *** Quits: quesker (~idnet@mail.89vx.net) (Ping timeout: 245 seconds)
[12:40:41] *** Joins: quesker (idnet@2600:3c01::f03c:91ff:feac:4ce2)
[12:41:35] *** Joins: shad (~shad@user/shad)
[12:43:56] *** Joins: mikeliuk (~mikeliuk@213.205.198.26)
[12:43:58] *** Quits: hlz (~rue@1-162-41-228.dynamic-ip.hinet.net) (Quit: WeeChat 3.1)
[12:44:23] *** Joins: hlz (~rue@1-162-41-228.dynamic-ip.hinet.net)
[12:47:14] *** Joins: kurahaupo_ (~kurahaupo@pa49-179-152-213.pa.nsw.optusnet.com.au)
[12:49:03] *** Quits: kurahaupo (~kurahaupo@202-7-184-72.tpgi.com.au) (Read error: Connection reset by peer)
[12:49:03] *** Quits: kurahaupo_ (~kurahaupo@pa49-179-152-213.pa.nsw.optusnet.com.au) (Read error: Connection reset by peer)
[12:49:16] *** Joins: kurahaupo (~kurahaupo@202-7-184-72.tpgi.com.au)
[12:51:49] <geirha> !varcap > alguien 
[12:51:49] <greybot> alguien: By convention, environment variables (PATH, EDITOR, SHELL, ...) and internal shell variables (BASH_VERSION, RANDOM, ...) are fully capitalized. All other variable names should be lowercase. Since variable names are case-sensitive, this convention avoids accidentally overriding environmental and internal variables.
[12:53:55] <fourHZ> hi. i have nagios plugin writen in bash and getting a broken pipe for a tac | awk command. the command itself works fine just awk finishes earlear than tac
[12:54:30] <geirha> just make sure pipefail is disabled
[12:54:46] <fourHZ> what do you mean?
[12:55:33] <fourHZ> i was just thinking about redirecting 2 > /dev/null
[12:56:02] <geirha> ok, { tac | awk ...; } 2>/dev/null
[12:56:07] *** Joins: nobody_ (~nobody@host-87-9-175-157.retail.telecomitalia.it)
[12:56:11] <geirha> don't omit the ; before }
[12:56:34] <fourHZ> the problem is that tac reads out a big file and awk is happy with a small part of it
[12:56:47] <fourHZ> ok i will try to redirect 2
[12:59:39] *** Joins: eot (~eot@user/eot)
[13:00:31] *** Joins: kdc (~kdc@196.211.197.141)
[13:03:42] *** Quits: justBull (~justache@user/justache) (Remote host closed the connection)
[13:04:27] *** Joins: justBull (~justache@user/justache)
[13:05:16] *** Joins: alguien_ (~alguien@user/alguien)
[13:07:38] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[13:07:39] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 252 seconds)
[13:09:09] *** Quits: chromis (sid150893@id-150893.tinside.irccloud.com) (Ping timeout: 248 seconds)
[13:09:40] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 252 seconds)
[13:09:57] *** Quits: Hyde (~MrHyde@static.54.68.46.78.clients.your-server.de) (Ping timeout: 244 seconds)
[13:10:01] *** Joins: SpydarOO7 (~spydar007@user/spydar007)
[13:10:20] *** Joins: de-facto (~de-facto@user/de-facto)
[13:10:31] *** Quits: baguvix (~0xe3b7@echelon.lucif3r.ru) (Ping timeout: 264 seconds)
[13:10:36] *** Quits: nanowire (rob@user/nanowire) (Ping timeout: 272 seconds)
[13:10:39] *** Joins: chromis (sid150893@id-150893.tinside.irccloud.com)
[13:10:52] *** Quits: Spydar007 (~spydar007@user/spydar007) (Ping timeout: 268 seconds)
[13:10:58] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[13:11:52] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 252 seconds)
[13:11:57] *** Joins: Hyde (~MrHyde@static.54.68.46.78.clients.your-server.de)
[13:12:04] *** Joins: nanowire (rob@user/nanowire)
[13:14:00] *** Quits: ano (~weechat@user/ano) (Remote host closed the connection)
[13:14:25] *** Joins: ano (~weechat@user/ano)
[13:15:42] *** SpydarOO7 is now known as Spydar007
[13:16:21] *** Quits: PlayerOne (~PlayerOne@55-207-55-95.baltnet.ru) (Ping timeout: 250 seconds)
[13:16:37] *** Joins: PlayerOne (~PlayerOne@55-207-55-95.baltnet.ru)
[13:17:18] *** Joins: gareppa (~gareppa@user/gareppa)
[13:17:48] *** Quits: LuksNuke (~LuksNuke@94.242.245.63) (Remote host closed the connection)
[13:19:40] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[13:21:33] <Soliton> !forget varcap
[13:21:33] <greybot> OK, Soliton
[13:21:38] <Soliton> !learn varcap By convention, environment variables (PATH, EDITOR, SHELL, ...) and internal shell variables (BASH_VERSION, RANDOM, ...) are fully capitalized. All other variable names should be lowercase. Since variable names are case-sensitive, this convention avoids accidentally overriding environmental and internal variables. https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap08.html
[13:21:38] <greybot> OK, Soliton
[13:23:03] *** Quits: darkbit (~db@152.32.99.67) (Ping timeout: 252 seconds)
[13:24:29] *** Quits: blue_penquin (~blue_penq@gateway/tor-sasl/bluepenquin/x-11613850) (Remote host closed the connection)
[13:24:42] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[13:25:11] *** Joins: blue_penquin (~blue_penq@gateway/tor-sasl/bluepenquin/x-11613850)
[13:28:29] *** Joins: woky (~woky@ip-86-49-230-33.net.upcbroadband.cz)
[13:30:59] <woky> Hello. Some program behave differently depending on whether stdout is tty or not. How can I make a program think it's NOT running on tty while keeping std{in,out,err} connected to shell ones?
[13:31:25] <woky> I know I can use nohup, but if the stdout is a tty, it redirects output to nohup.out.
[13:31:37] <Soliton> cmd | cat  if just stdout matters.
[13:32:16] <geirha> !varcap > 123456789012345
[13:32:16] <greybot> 123456789012345: By convention, environment variables (PATH, EDITOR, SHELL, ...) and internal shell variables (BASH_VERSION, RANDOM, ...) are fully capitalized. All other variable names should be lowercase. Since variable names are case-sensitive, this convention avoids accidentally overriding environmental and internal variables. https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap08.html
[13:32:33] <woky> That only makes stdin a non-tty. For example SSH still presents a dialog about unknown host.
[13:32:34] <geirha> looked a bit long so just testing if it might get cut off on a long nick
[13:33:35] <Soliton> ssh -n
[13:34:06] <woky> Soliton, actually, I said it wrong. Yep, that makes stdout non-tty, but ssh still detects it's running in terminal somehow.
[13:34:26] <woky> I'd like to do it in general for testing, not just for ssh.
[13:34:33] *** Quits: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de) (Remote host closed the connection)
[13:34:42] <Soliton> cmd < /dev/null
[13:35:00] <woky> Same.
[13:35:10] *** Joins: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de)
[13:35:25] *** Quits: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de) (Remote host closed the connection)
[13:35:32] <geirha> cmd </dev/null 2>&1 | cat
[13:35:40] *** Joins: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de)
[13:36:32] *** Joins: DLange (~DLange@about/linux/dlange)
[13:36:33] <woky> geirha, for some reason, if cmd is a ssh command, it still presents dialog about unknown host on terminal
[13:37:03] <woky> if it is prefixed with nohup though, it just exists with error 6 and prints nothing, so clearly it somehow detects it's running in interactive terminal
[13:37:23] <woky> (prints nothing into nohup.out I mean)
[13:37:56] <geirha> ok, the ssh command on my system doesn't use dialog at all
[13:38:07] <geirha> perhaps you have some kind of wrapper?
[13:38:30] <woky> I said dialog but I mean the "Are you sure you want to continue connecting (yes/no/[fingerprint])? " when the host is not in known_hosts
[13:38:40] *** Joins: somlis (~somlis@user/somlis)
[13:39:23] *** Quits: uplime (uplime@lime-labs.com) (Quit: no ill be right back, i promise)
[13:39:58] *** Quits: [diablo] (~diablo]@user/diablo/x-9068044) (Ping timeout: 265 seconds)
[13:41:03] *** Joins: [diablo] (~diablo]@user/diablo/x-9068044)
[13:42:04] <woky> See e.g. http://sprunge.us/8UZXNF
[13:42:12] <geirha> Hm. Right. I kind-of has to do that, since you might be using it in the middle of a pipeline  somecmd | ssh ... > foo.txt  Yet it still needs confirmation
[13:43:16] <woky> Yep, I understand the reason. This is just an example program that's tty aware. But when run with e.g. sshpass, it is misled into thinking it's not running in tty and just exists with 6.
[13:43:51] *** Joins: [diablo]6 (~diablo]@user/diablo/x-9068044)
[13:45:54] *** Quits: [diablo] (~diablo]@user/diablo/x-9068044) (Ping timeout: 258 seconds)
[13:45:54] *** [diablo]6 is now known as [diablo]
[13:46:17] <geirha> Not sure how to do that portably. For ssh specifically, you would of course just provide the relevant options with e.g. -o. For others, I guess setsid(1) would work, but that's not a standard command
[13:47:30] <woky> geirha, awesome, setsid -w seems to be exactly what I was looking for. Thank you!
[13:49:44] *** Joins: LuksNuke (~LuksNuke@94.242.245.63)
[13:51:06] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Quit: Soupy Twist!)
[13:51:28] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[13:55:23] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Client Quit)
[13:56:02] <woky> I was wrong about exit code and no output. That seems to be sshpass specific behavior. With nohup, it actually still uses tty for output. However, with setsid it behaves as described in ssh(1), i.e. on ssh error it exists with 255 (and prints to stderr).
[13:57:01] <Soliton> sshpass wouldn't work without controlling terminal.
[13:57:22] <woky> Isn't non-interactivity the point of sshpass?
[13:57:58] <Soliton> the point is to fake a terminal to ssh.
[13:58:38] <Soliton> ssh cannot possibly know if that fake terminal is use non-interactively.
[14:00:04] <woky> Sshpass also somehow detects that ssh is asking to confirm unknown host, and it that case just exists with code 6.
[14:01:38] <Soliton> presumably sshpass doesn't just blindly input the passwrod but checks what ssh writes first.
[14:03:39] *** Quits: PlayerOne (~PlayerOne@55-207-55-95.baltnet.ru) (Quit: Ping timeout (120 seconds))
[14:03:52] *** Joins: PlayerOne (~PlayerOne@55-207-55-95.baltnet.ru)
[14:27:18] *** Quits: woky (~woky@ip-86-49-230-33.net.upcbroadband.cz) (Quit: leaving)
[14:29:45] *** Quits: hlz (~rue@1-162-41-228.dynamic-ip.hinet.net) (Quit: WeeChat 3.1)
[14:30:10] *** Joins: hlz (~rue@1-162-41-228.dynamic-ip.hinet.net)
[14:31:22] *** Quits: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de) (Remote host closed the connection)
[14:31:58] *** Joins: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de)
[14:32:19] *** Quits: Fusl (fusl@user/fusl) (Quit: freenode)
[14:36:30] *** Quits: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[14:40:15] *** Quits: bgpepi (~bgpepi@ip-213-49-229-66.dsl.scarlet.be) (Remote host closed the connection)
[14:41:59] *** Quits: howdoi (uid224@id-224.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[14:43:38] *** Joins: thiras (~thiras@user/thiras)
[14:59:01] <fourHZ> geirha thanks that { .... ;} construct works fine. issue fixed.
[15:04:29] *** Quits: LuksNuke (~LuksNuke@94.242.245.63) (Quit: Leaving)
[15:04:43] *** Joins: LuksNuke (~LuksNuke@94.242.245.63)
[15:05:12] *** betelgeuse01 is now known as betelgeuse
[15:16:23] *** Quits: igemnace (~ian@120.28.150.132) (Quit: WeeChat 3.1)
[15:18:02] *** Joins: DaNeenjah (~jake@29.sub-72-106-108.myvzw.com)
[15:20:50] *** Quits: Strom (strom@fedora/strom) (Ping timeout: 252 seconds)
[15:23:07] *** Joins: EyeOfMidas (~EyeOfMida@2601:c6:c57f:c450:bcdc:5d5f:9a3b:1567)
[15:25:22] *** Quits: downunder (~downunder@110.151.120.49) (Quit: WeeChat 3.1)
[15:31:32] *** Quits: tex (~super@user/dix) (Ping timeout: 250 seconds)
[15:32:38] *** Joins: Strom (strom@fedora/strom)
[15:33:32] *** Joins: blyat-73 (~hjgkjhgkj@79.101.60.163)
[15:36:10] *** Joins: tex (~super@user/dix)
[15:38:12] *** Quits: EyeOfMidas (~EyeOfMida@2601:c6:c57f:c450:bcdc:5d5f:9a3b:1567) (Remote host closed the connection)
[15:40:35] *** Joins: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de)
[15:42:31] *** Quits: blue_penquin (~blue_penq@gateway/tor-sasl/bluepenquin/x-11613850) (Remote host closed the connection)
[15:43:20] *** Joins: blue_penquin (~blue_penq@gateway/tor-sasl/bluepenquin/x-11613850)
[15:47:23] *** Joins: lavaball (felix@31.204.155.215)
[15:47:25] *** Quits: alexbk (~alexbk@c-73-157-41-15.hsd1.wa.comcast.net) (Ping timeout: 258 seconds)
[15:52:46] *** Quits: tex (~super@user/dix) (Ping timeout: 250 seconds)
[15:54:16] *** Quits: PlayerOne (~PlayerOne@55-207-55-95.baltnet.ru) (Quit: Client closed)
[15:54:17] *** Quits: OMGOMG (~bobrobert@nami.ifi.uio.no) (Ping timeout: 268 seconds)
[15:54:30] *** Joins: PlayerOne (~PlayerOne@55-207-55-95.baltnet.ru)
[15:54:46] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Ping timeout: 244 seconds)
[15:54:49] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[15:56:55] *** Joins: phillbush (~phillbush@user/phillbush)
[15:58:55] *** Quits: shad (~shad@user/shad) (Ping timeout: 258 seconds)
[15:59:15] *** Quits: alguien_ (~alguien@user/alguien) (Ping timeout: 252 seconds)
[16:06:40] *** Quits: Strom (strom@fedora/strom) (Ping timeout: 272 seconds)
[16:08:54] *** Joins: Strom (~strom@fedora/strom)
[16:09:27] *** Quits: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de) (Remote host closed the connection)
[16:10:05] *** Joins: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de)
[16:10:21] *** Quits: iomari891 (~iomari891@105.112.138.38) (Read error: Connection reset by peer)
[16:11:06] *** Joins: iomari891 (~iomari891@105.112.138.38)
[16:11:56] *** Quits: Strom (~strom@fedora/strom) (Read error: Connection reset by peer)
[16:12:10] *** Joins: magla (~gelignite@55d41093.access.ecotel.net)
[16:12:42] *** Quits: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de) (Remote host closed the connection)
[16:12:57] *** Joins: Arc (strom@fedora/strom)
[16:13:17] *** Joins: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de)
[16:15:05] *** Joins: shad (~shad@user/shad)
[16:17:43] *** Quits: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[16:23:06] *** Quits: mikeliuk (~mikeliuk@213.205.198.26) (Quit: Connection closed)
[16:24:47] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[16:26:35] *** Joins: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de)
[16:28:14] <hejux> fourHZ: that is basically writting many lines of command in a line of group, so { commandA ; commandB ; } 
[16:28:40] *** Joins: thiras (~thiras@user/thiras)
[16:29:21] <fourHZ> i understood that its needed for the 2 > /dev/null redirect as the the commands were connected with a pipe
[16:32:35] *** Quits: LuksNuke (~LuksNuke@94.242.245.63) (Remote host closed the connection)
[16:34:33] *** Joins: alexbk (~alexbk@c-73-157-41-15.hsd1.wa.comcast.net)
[16:39:17] *** Joins: alguien_ (~alguien@user/alguien)
[16:39:29] *** Joins: zeden (~zeden@user/zeden)
[16:41:07] *** Quits: Gerula (~Gerula@user/gerula) (Quit: Leaving)
[16:42:12] *** Quits: baldr333 (~baldr333@modemcable034.69-70-69.static.videotron.ca) (Quit: Client closed)
[16:43:26] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[16:47:12] *** Joins: Gerula (~Gerula@user/gerula)
[16:49:06] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[16:49:56] *** Joins: LuksNuke (~LuksNuke@94.242.245.63)
[16:51:13] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[16:52:22] *** Quits: blue_penquin (~blue_penq@gateway/tor-sasl/bluepenquin/x-11613850) (Remote host closed the connection)
[16:53:09] *** Joins: speckz (~speckz@2600:1700:ce0:bf00:7453:78ec:afb9:279a)
[16:55:33] *** Joins: src (~src@user/src)
[16:56:50] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[17:02:01] *** Joins: anton (~anton@tilde.team/user/anton)
[17:05:05] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[17:10:23] *** Joins: zadock (~Baltazar@user/zadock)
[17:15:32] *** Joins: mikeliuk (~mikeliuk@46.68.8.116)
[17:16:44] *** Quits: zeden (~zeden@user/zeden) (Ping timeout: 258 seconds)
[17:19:09] <jle> is there some way to disallow a script to use subprocesses, or rather, wait for the subprocesses to finish before continuing, from outside the script? 
[17:19:39] *** Joins: kolbe (~kolbe@user/kolbe)
[17:20:12] *** Joins: ionface (~ionface@user/ionface)
[17:20:17] <daurnimator> j416: `ulimit -u` maybe?
[17:20:38] <daurnimator> uh *jle
[17:22:22] <jle> hmm.. the bash script calls some python stuff, so I don't think that would work
[17:27:52] <geirha> then it sounds like the answer is no; you have to fix the script itself
[17:30:11] <jle> maybe yeah, or run it through sed with a "wait" after all "&" :\
[17:31:11] <geirha> or just edit the script and remove those &, or create a copy that you edit and run
[17:32:45] *** Quits: kolbe (~kolbe@user/kolbe) (Quit: leaving)
[17:33:37] *** Joins: darkbit (~db@152.32.99.67)
[17:34:50] *** Joins: tuxOr (~tux0r@vpn.ahbelo.com)
[17:35:30] *** Quits: zadock (~Baltazar@user/zadock) (Ping timeout: 252 seconds)
[17:35:49] *** Quits: anton (~anton@tilde.team/user/anton) (Quit: anton)
[17:37:12] *** Quits: nichedev (~tux0r@99-72-201-62.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 250 seconds)
[17:38:35] *** Quits: alexbk (~alexbk@c-73-157-41-15.hsd1.wa.comcast.net) (Ping timeout: 258 seconds)
[17:41:34] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[17:42:48] *** Joins: zeden (~zeden@user/zeden)
[17:43:15] *** Joins: baldr333 (~baldr333@modemcable034.69-70-69.static.videotron.ca)
[17:49:18] *** Joins: zebrag (~chris@user/zebrag)
[17:54:20] *** Quits: darkbit (~db@152.32.99.67) (Ping timeout: 272 seconds)
[18:02:28] *** Quits: LuksNuke (~LuksNuke@94.242.245.63) (Remote host closed the connection)
[18:04:39] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[18:09:42] *** Joins: alexbk (~alexbk@c-73-157-41-15.hsd1.wa.comcast.net)
[18:10:20] *** Quits: nobody_ (~nobody@host-87-9-175-157.retail.telecomitalia.it) (Read error: Connection reset by peer)
[18:10:35] *** Joins: nobody_ (~nobody@host-87-9-175-157.retail.telecomitalia.it)
[18:11:42] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:13:29] *** Joins: bn_work (uid268505@id-268505.highgate.irccloud.com)
[18:14:28] *** Quits: zeden (~zeden@user/zeden) (Ping timeout: 250 seconds)
[18:14:48] *** Quits: baldr333 (~baldr333@modemcable034.69-70-69.static.videotron.ca) (Quit: Client closed)
[18:16:15] *** Joins: ionface_ (~ionface@user/ionface)
[18:17:33] *** Quits: cisco87 (~quassel@smtp.lnxg33k.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:17:51] *** Quits: ionface (~ionface@user/ionface) (Ping timeout: 252 seconds)
[18:21:16] *** Quits: mikeliuk (~mikeliuk@46.68.8.116) (Quit: Connection closed)
[18:21:25] *** Quits: ionface_ (~ionface@user/ionface) (Read error: Connection reset by peer)
[18:23:02] *** Quits: magla (~gelignite@55d41093.access.ecotel.net) (Read error: Connection reset by peer)
[18:24:06] *** Quits: dub_a (~dub_a@2601:1c2:4e00:3b3::cb2) (Ping timeout: 272 seconds)
[18:27:50] *** Joins: magla (~gelignite@55d41093.access.ecotel.net)
[18:34:43] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 252 seconds)
[18:38:48] *** Quits: Nefertiti (~unscripte@user/unscripted) (Quit: Quitz)
[18:41:07] *** Joins: bgpepi (~bgpepi@ip-213-49-229-66.dsl.scarlet.be)
[18:42:28] *** Quits: bgpepi (~bgpepi@ip-213-49-229-66.dsl.scarlet.be) (Remote host closed the connection)
[18:42:45] *** Joins: bgpepi (~bgpepi@ip-213-49-229-66.dsl.scarlet.be)
[18:43:57] *** Quits: bgpepi (~bgpepi@ip-213-49-229-66.dsl.scarlet.be) (Read error: Connection reset by peer)
[18:44:15] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[18:44:15] *** Joins: bgpepi (~bgpepi@ip-213-49-229-66.dsl.scarlet.be)
[18:45:02] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
[18:45:27] *** Quits: bgpepi (~bgpepi@ip-213-49-229-66.dsl.scarlet.be) (Read error: Connection reset by peer)
[18:45:46] *** Joins: bgpepi (~bgpepi@ip-213-49-229-66.dsl.scarlet.be)
[18:46:17] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[18:46:57] *** Quits: bgpepi (~bgpepi@ip-213-49-229-66.dsl.scarlet.be) (Read error: Connection reset by peer)
[18:47:15] *** Joins: bgpepi (~bgpepi@ip-213-49-229-66.dsl.scarlet.be)
[18:48:12] *** Joins: cisco87 (~quassel@smtp.lnxg33k.com)
[18:48:27] *** Quits: bgpepi (~bgpepi@ip-213-49-229-66.dsl.scarlet.be) (Remote host closed the connection)
[18:48:45] *** Joins: bgpepi (~bgpepi@ip-213-49-229-66.dsl.scarlet.be)
[18:49:57] *** Quits: bgpepi (~bgpepi@ip-213-49-229-66.dsl.scarlet.be) (Read error: Connection reset by peer)
[18:52:02] *** Joins: almostdvs (~cody@38.140.123.98)
[19:00:14] *** Joins: uplime (uplime@lime-labs.com)
[19:01:58] *** Quits: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de) (Remote host closed the connection)
[19:02:34] *** Joins: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de)
[19:05:42] *** Quits: wwilly (~wwilly@217.140.99.251) (Ping timeout: 252 seconds)
[19:07:31] *** Quits: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[19:08:25] *** Joins: cr0ma (~cr0ma@93-44-192-128.ip98.fastwebnet.it)
[19:09:44] *** Quits: cr0ma (~cr0ma@93-44-192-128.ip98.fastwebnet.it) (Client Quit)
[19:10:27] *** Joins: cr0ma (~cr0ma@93-44-192-128.ip98.fastwebnet.it)
[19:10:56] *** Quits: fourHZ (~fourHZ@80.146.191.218) (Quit: Connection closed)
[19:11:05] *** Joins: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de)
[19:13:02] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[19:14:09] *** Joins: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca)
[19:18:52] *** Joins: ionface (~ionface@user/ionface)
[19:20:50] *** Joins: richardm75 (~richardm7@2600:8801:c50b:3800:59c0:23ff:39c5:ac21)
[19:20:51] *** Joins: dklyle (~dklyle@134.134.137.73)
[19:23:02] *** Joins: iffraff (~quassel@2605:a601:aae0:4a00:8d7d:9bc:db53:8efe)
[19:23:03] *** Quits: deekej[m] (~deekej@2001:470:69fc:105::a6c) (Read error: Connection reset by peer)
[19:23:03] *** Quits: chambln (~chambln@user/chambln) (Remote host closed the connection)
[19:23:04] *** Quits: nicoty[m] (~nicoty@user/nicoty) (Read error: Connection reset by peer)
[19:23:46] *** Joins: nicoty[m] (~nicoty@user/nicoty)
[19:24:32] <Elodin> How would i write some script to do: while not pgrep something; something; sleep x;
[19:24:33] *** Joins: deekej[m] (~deekej@2001:470:69fc:105::a6c)
[19:24:47] *** Joins: chambln (~chambln@user/chambln)
[19:24:52] <Elodin> I want to search for a running process and if not running start it in an infinite loop
[19:25:32] *** Joins: laibach (~laibach@2404:e801:2001:579:2c06:ab11:ff51:3ebb)
[19:26:14] *** Quits: blyat-73 (~hjgkjhgkj@79.101.60.163) (Quit: Leaving)
[19:26:19] <Soliton> !pm
[19:26:19] <greybot> http://mywiki.wooledge.org/ProcessManagement
[19:27:01] <Soliton> why is the process your script is responsible for run by something else?
[19:27:13] <twkm> transliterated: while ! pgrep something; do something; sleep x; done.
[19:27:49] <Elodin> i'm running barrier/synergy over wifi and it crashes a lot therefore i would like to just keep reconnecting 
[19:28:16] <Soliton> so run it in an infinite loop.
[19:28:27] <Soliton> no need to mess with unrelated processes.
[19:28:52] <Elodin> Soliton: unrelated processes? i wanted to check IF the process is alive or dead
[19:28:58] <Elodin> and not to open multiple ones
[19:29:03] <Soliton> you run it. you know.
[19:30:01] <twkm> foo;bar  -- bar doesn't run until foo exits, whether normally or a crash.
[19:30:13] <Elodin> oh
[19:31:47] <twkm> but if foo forks it might exit even though it's clone is still running.
[19:33:19] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 244 seconds)
[19:34:39] <Elodin> gotcha thanks
[19:34:54] <tsujp> you know `su - someuser` doesn't inherit the previous users env vars, how do you also pass flags? Like, is `su -l someuser` the same as the flag `l` and `-` or is it `su - -l someuser`?
[19:35:37] *** Quits: laibach (~laibach@2404:e801:2001:579:2c06:ab11:ff51:3ebb) (Quit: WeeChat 3.0.1)
[19:37:54] *** Quits: hlz (~rue@1-162-41-228.dynamic-ip.hinet.net) (Quit: WeeChat 3.1)
[19:38:17] *** Joins: hlz (~rue@1-162-41-228.dynamic-ip.hinet.net)
[19:38:42] *** Joins: LuksNuke (~LuksNuke@94.242.245.63)
[19:39:10] *** Joins: zeden (~zeden@user/zeden)
[19:46:24] *** Joins: pj (~pj@ghettoforge/pj)
[19:46:26] <llua> EPARSE
[19:47:54] <uplime> tsujp: - in this case means the same thing as -l
[19:48:18] <uplime> ~ Î» man su | grep -- -l
[19:48:21] <uplime>      -l      Simulate a full login.  The environment is discarded except for
[19:48:23] <uplime>      -       (no letter) The same as -l.
[19:50:43] <tsujp> Thank you uplime 
[19:51:09] <twkm> passing things to what su runs might be done via -c, provided your su -c specifies the command to run otherwise after the username is likely.
[19:51:49] <tsujp> ive heard just now that if `su` isn't attached to a terminal doing `su - myuser` will change to the user, find it has nothing to run, then the execution context goes back to the previous user
[19:52:05] <tsujp> this means `su` has to be run in an interactive-shell (which requires a terminal) or be used with the `-c` flag right?
[19:54:49] <tsujp> Ignore that, huge brainfart from me
[19:54:51] <tsujp> All good
[19:55:05] *** Joins: nikodijev (~nikodijev@109-93-203-20.dynamic.isp.telekom.rs)
[19:55:20] *** Quits: nikodijev (~nikodijev@109-93-203-20.dynamic.isp.telekom.rs) (Client Quit)
[20:01:41] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[20:02:14] *** Quits: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de) (Remote host closed the connection)
[20:02:55] *** Joins: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de)
[20:07:08] *** Quits: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[20:11:02] *** Joins: dtux (~dtux@107-131-127-0.lightspeed.sntcca.sbcglobal.net)
[20:15:22] *** Quits: alexbk (~alexbk@c-73-157-41-15.hsd1.wa.comcast.net) (Ping timeout: 258 seconds)
[20:17:03] *** Quits: flommi_ (~flommi@puck942.startdedicated.de) (Quit: Quit)
[20:18:43] <tsujp> `set -e` would not propgate down through `su -lc` right because it's a completely new environment
[20:18:52] <tsujp> in the called script I'd need to redo `set -e`?
[20:19:43] *** Joins: flommi (~flommi@puck942.startdedicated.de)
[20:20:08] <twkm> yes.  and ewww, set -e.
[20:20:31] <tsujp> what's wrong with set -e friend
[20:20:36] <tsujp> do you feel strongly about set -o pipefail too?
[20:20:38] *** Quits: Malin (~CIA@pirate.pt) (Quit: Ping timeout (120 seconds))
[20:21:02] *** Joins: Malin (~CIA@pirate.pt)
[20:21:42] <twkm> yes, and nounset as well.
[20:21:46] <twkm> !-e > tsujp 
[20:21:46] <greybot> tsujp: "set -e" is an inheritance of the old bourne shell, and doesn't really work well with modern shell features. You'll really have less buggy scripts if you do the error handling manually instead of relying on the unreliable "set -e"; see http://mywiki.wooledge.org/BashFAQ/105
[20:22:11] <tsujp> !-o
[20:22:41] <tsujp> interesting
[20:23:38] *** Joins: alexbk (~alexbk@c-73-157-41-15.hsd1.wa.comcast.net)
[20:23:57] <twkm> set -o by itself isn't a problem, but the specific option enabled might be, such as errexit, nounset, and pipefail.
[20:24:02] *** Quits: flommi (~flommi@puck942.startdedicated.de) (Quit: Quit)
[20:26:52] *** Joins: flommi (~flommi@puck942.startdedicated.de)
[20:28:04] <tsujp> holy smokes that first example is nutty
[20:28:06] <tsujp> with let i++
[20:28:09] <twkm> pipefail can be surprising, e.g., in ''lotsofoutput | grep -q pattern'' grep might exit as soon as the pattern is detected which can cause the source to abort resulting in a failure when in fact it should be success since the pattern was found.
[20:28:46] <tsujp> the exit code of an assignment makes sense, but this `let i++` returns the exit code `1` if `i` is 0...
[20:28:47] <tsujp> why...
[20:31:14] <twkm> it is supposed to ... from ''man bash'': If the last arg evaluates to 0, let returns 1; 0 is returned otherwise.
[20:31:29] <tsujp> WHAT
[20:31:33] <tsujp> why is that a thing??
[20:31:41] <e36freak> because it's equivalent to ((i++))
[20:31:45] <twkm> it can be useful.
[20:31:47] <e36freak> and (( is used to test expressions as well
[20:32:17] <tsujp> hang on `let` is used for arithmetic operation right, why does `let i++` where that evaluates as `let 1` mean you return status code `1` meaning failure
[20:32:21] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[20:32:33] <e36freak> # help let | head -n 2
[20:32:34] <shbot> e36freak: let: let arg [arg ...]
[20:32:34] <shbot> e36freak:     Evaluate arithmetic expressions.
[20:32:41] <e36freak> evaluate arithmetic expressions
[20:33:01] <twkm> ++ is post, so the value of i BEFORE the increment is the result.
[20:33:08] <e36freak> if let 'a > b'; then # is perfectly valid
[20:33:24] *** Quits: flommi (~flommi@puck942.startdedicated.de) (Ping timeout: 245 seconds)
[20:33:24] <tsujp> right sorry, why does `let 0` mean return 1
[20:33:30] <tsujp> status code `1` means failure
[20:33:34] <tsujp> but nothing about `let 0` _fails_
[20:33:37] <e36freak> tsujp: what d oyou expect ((0)) to do?
[20:34:02] <e36freak> how else are you supposed to test arithmetic stuff?
[20:34:12] *** Joins: flommi (~flommi@puck942.startdedicated.de)
[20:34:13] <twkm> because it is defined that way, which is the say the c way, 0 is false a non-zero is true.
[20:34:57] <tsujp> `((0))` I would expect to evaluate to `0` because the single statement is `0` and return `0` as in success
[20:35:41] <tsujp> 0 and 1 has nothing to do with false and true here IIRC, `return 0;` means success
[20:35:45] <tsujp> non-zero return means failure
[20:36:05] <tsujp> why the return code of the command "$?" that executed successfully is `1` is..?
[20:36:13] <tsujp> I get that it's equivalent to (()) but _why_
[20:36:17] <tsujp> why was that constraint ever added
[20:36:23] <tsujp> That seems arbitrary
[20:37:11] <twkm> everything was arbitrary at some point.  then what was decided is documented and *poof* not arbitrary anymore.
[20:38:00] *** Joins: Nefertiti (~unscripte@user/unscripted)
[20:38:47] *** Joins: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de)
[20:40:26] <twkm> in particular let and (( are defined to work in the c way where 0 is false a non-zero is true.
[20:41:30] <tsujp> I don't think that's a correct statement. That is the case for booleans, but the return code `0` in C is very specifically defined as EXIT_SUCCESS
[20:41:31] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[20:41:45] <twkm> only for exiting.
[20:41:46] <tsujp> and non-zero as EXIT_FAILURE
[20:41:56] <tsujp> Yes but this conversation is about the exit code "$?"
[20:42:02] <twkm> sigh.
[20:42:04] <tsujp> let 0; "$?" prints `1`
[20:42:22] <e36freak> tsujp: this is how conditional commands work
[20:42:35] <e36freak> what do you think [ or [[ does? how does if know if it evaluates to true or false?
[20:42:37] <twkm> because 0 is false according to c, so it results in an exit status of 1.
[20:43:06] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[20:43:07] <tsujp> are you saying `let` passes the literal evaluation of its arguments to `return` within its source?
[20:43:44] *** Quits: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[20:43:55] <tsujp> e36freak its my understanding $? which is the return-code of the command or built-in is used in all cases
[20:44:51] <tsujp> I still don't understand what you're saying twkm, `let i++` returns the value of `i` immediately? (why would that be the case / how is that possible if it also successfully adds 1) because the only thing I can think of relating to what you're saying is `return first_argument;` in the source for `let`
[20:45:00] <tsujp> I don't see where or why "because 0 is false according to c, so it results in an exit status of 1." comes into it
[20:45:08] <twkm> oh well.
[20:46:02] <tsujp> Rightio, the onice is on you to explain that I feel. We're talking about bash built-ins here and the statement about `return` values regarding C is incorrect.
[20:46:10] *** Joins: dub_a (~dub_a@2601:1c2:4e00:3b3::cb2)
[20:46:30] <twkm> *shrug*
[20:47:34] *** Quits: LuksNuke (~LuksNuke@94.242.245.63) (Remote host closed the connection)
[20:49:52] *** Joins: mikeliuk (~mikeliuk@213.205.198.26)
[20:50:35] <llua> heh
[20:50:36] <tsujp> https://git.savannah.gnu.org/cgit/bash.git/tree/builtins/let.def#n108
[20:50:51] <tsujp> If your statement is about that line I already got that
[20:51:48] <twkm> excellent.
[20:51:51] <tsujp> Seems like it really is just someone long, long ago arbitrarily decided "hey if this returns 0 the exit code is 1"
[20:52:00] <tsujp> Might submit a patch because that's really, really, _really_ dumb
[20:52:09] <llua> it would be rejected
[20:52:18] <tsujp> On the basis of "its the standard"?
[20:52:28] <llua> because of math
[20:52:41] <tsujp> Why?
[20:52:58] <twkm> [repeat:] everything was arbitrary at some point.  then what was decided is documented and *poof* not arbitrary anymore.
[20:53:48] <tsujp> I understand that too, but that doesn't mean that when we know better in the future we can change things
[20:54:04] <tsujp> What does maths have to do with that not being changed? Breaking changes not allowed?
[20:54:14] <twkm> not generally.
[20:54:37] <tsujp> I find that also.. unpleasant. Why if they can be scoped to new major releases? E.g. `bash 6` for instance?
[20:54:53] <uplime> considering how backwards compatible it has to be with posix sh, breaking changes aren't usually wanted
[20:55:10] <tsujp> Aren't `[[`, `((`, and `let` all bash built-ins?
[20:55:24] <uplime> the first two are keywords, not builtins
[20:55:24] <twkm> they must be.
[20:55:43] <yitz> Being builtin/keywords doesn't mean they can change behavior without breaking things
[20:55:45] <tsujp> Sorry let me backtrack, what does this behavour have to do with POSIX or is this behaviour part of the POSIX spec?
[20:56:02] <twkm> let is not posix.
[20:56:33] <tsujp> Right so if this doesn't affect POSIX compatibility then...? It's a Bash-only thing
[20:56:47] <twkm> doesn't mean chet can break all earlier scripts without a massive backlash.
[20:56:48] *** Joins: mike18 (~geri@71-220-52-187.mpls.qwest.net)
[20:56:57] <tsujp> Hence the major release version
[20:56:59] <twkm> also not bash-only.
[20:57:19] <uplime> tsujp: I didn't mention POSIX because of let. Bash is just not in the market for breaking changes, due to a number of factors like that
[20:57:25] <mike18> hi how to write that correct to the file? watch -n 30 '`date -u` `curl -s -X GET "https://goo.com/foo" -H "content-type: text/json`" >> resp.txt'
[20:57:36] <twkm> so everyone should have included some code to check the version because the future might fuck them?  hahahahahahahahahahahaha.
[20:58:10] *** Joins: howdoi (uid224@id-224.tooting.irccloud.com)
[20:58:13] <tsujp> I don't know if I'm really stupid or missing something blatantly obvious. Why does "not bash-only" concerning bash-specific things affect anything other than bash
[20:58:46] <twkm> mike18: watch -n 30 sh -c 'date -u; curl -s -H "header: stuff" "url"'
[20:59:07] <tsujp> If a breaking change was required to fix a bug (not calling this thing a bug) would you have the same opinion?
[20:59:19] <tsujp> Why patch any CVE if it requires breaking changes?
[21:00:03] *** Joins: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de)
[21:00:16] <mike18> twkm: will that write the date also to the file?
[21:00:25] <twkm> sorry your bash is too new, downgrade and try again.
[21:00:29] <mike18> with the response?
[21:01:15] *** Quits: cr0ma (~cr0ma@93-44-192-128.ip98.fastwebnet.it) (Read error: Connection reset by peer)
[21:01:39] *** Quits: reset (~reset@user/reset) (Quit: reset)
[21:01:59] <tsujp> Compatability mode by default and a new, saner mode by opt-in?
[21:02:17] <tsujp> I'm being remarkable gracious here in the face of being strawmanned twice in a row
[21:05:22] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[21:06:01] *** Joins: Dolor_Avis (~Dolor_Avi@user-5-173-12-31.play-internet.pl)
[21:07:23] <twkm> mike18: yes, date followed by whatever curl emits.
[21:07:31] <mike18> https://ideone.com/RwM94G
[21:07:40] <mike18> why i see that extra chars?
[21:07:46] <twkm> extra?
[21:08:11] <mike18> see the paste: https://ideone.com/RwM94G
[21:08:32] <twkm> watch output shit, not merely whatever it runs outputs.
[21:09:05] <mike18> [?1049h[22;0;0t[1;22r(B[m[4l[?7h[H[2JEvery 30.0s: sh -c date -u; curl - ....
[21:09:16] <twkm> specifically it expects to display things to a screen which should be cleared before each run of the command.
[21:09:18] <mike18> thats output...
[21:09:25] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 258 seconds)
[21:09:27] <tsujp> those are escape codes for formatting
[21:09:46] <twkm> stop using watch.
[21:09:49] <mike18> and also: sh -c date -u; curl -s -X GET -H "content-type: text/json"
[21:09:58] <tsujp> !watch
[21:09:58] <greybot> watch() { local t=$1; shift; while sleep "$t"; do clear; "$@"; done; }
[21:10:07] <mike18> ok
[21:10:08] <twkm> while sleep 30; do date -u; curl ...; done >> file
[21:10:12] *** Joins: Betal (~Beta@user/betal)
[21:10:38] <yitz> watch has some nice features...
[21:10:57] <twkm> but shitty features for writing a file of data.
[21:11:01] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:11:34] *** Quits: rdz (~rdz@netpd.org) (*.net *.split)
[21:11:34] *** Quits: arkanoid (~jack@2-238-151-49.ip244.fastwebnet.it) (*.net *.split)
[21:11:34] *** Quits: livinskull (~livinskul@ircb.hackthe.codes) (*.net *.split)
[21:11:35] *** Quits: ori (~atdt@user/ori) (*.net *.split)
[21:11:35] *** Quits: ops (~echelon@user/echelon) (*.net *.split)
[21:11:35] *** Quits: Naib (~j@user/naib) (*.net *.split)
[21:11:35] *** Quits: leftyfb (leftyfb@ubuntu/member/leftyfb) (*.net *.split)
[21:11:35] *** Quits: Tadgy (~tadgy@slackware.uk/founder/tadgy) (*.net *.split)
[21:11:35] *** Quits: k (~krok@callipygian.life) (*.net *.split)
[21:11:35] *** Quits: petemc (~pete@vps-80fad31a.vps.ovh.net) (*.net *.split)
[21:11:35] *** Quits: izabera (~izabera@user/izabera) (*.net *.split)
[21:11:55] *** Joins: Tadgy (~tadgy@slackware.uk/founder/tadgy)
[21:12:32] *** Joins: ops (~ops@user/echelon)
[21:12:55] *** Joins: livinskull (~livinskul@ircb.hackthe.codes)
[21:14:26] *** Quits: Dolor_Avis (~Dolor_Avi@user-5-173-12-31.play-internet.pl) (Quit: Dolor_Avis)
[21:16:39] <twkm> i don't get why the data is invalid-shits followed by valid-shitson but i don't have to, that's mike's worry.
[21:17:12] *** Joins: izabera (izabera@user/izabera)
[21:25:25] *** Joins: xcm (~xcm@user/xcm)
[21:27:49] *** Quits: alexbk (~alexbk@c-73-157-41-15.hsd1.wa.comcast.net) (Ping timeout: 258 seconds)
[21:30:43] *** Quits: pieguy128 (~pieguy128@bas1-montreal02-65-92-163-194.dsl.bell.ca) (Quit: ZNC 1.8.2 - https://znc.in)
[21:31:06] *** Quits: nobody_ (~nobody@host-87-9-175-157.retail.telecomitalia.it) (Remote host closed the connection)
[21:31:22] *** Joins: pieguy128 (~pieguy128@bas1-montreal02-65-92-163-194.dsl.bell.ca)
[21:33:46] *** Quits: rendar (~rendar@user/rendar) ()
[21:34:08] *** Joins: markgrady (~markgrady@204.246.246.254)
[21:34:19] *** Joins: MTecknology (~Mike@user/mtecknology)
[21:34:46] <mike18> twkm: ok - how can i add 2 curl calls?
[21:34:53] <mike18> and output both results to file?
[21:35:07] <twkm> uh.  is it really that hard?
[21:35:21] <mike18> just append ; curl ... ?
[21:35:26] <twkm> while sleep 30; do date -u; curl ...; curl ...; done >> file
[21:35:58] <twkm> inside the loop, yes just append that after the first curl.
[21:37:51] *** Joins: fresheyeball (~fresheyeb@c-71-237-105-37.hsd1.co.comcast.net)
[21:37:58] *** Quits: dub_a (~dub_a@2601:1c2:4e00:3b3::cb2) (Quit: WeeChat 3.1)
[21:38:10] <fresheyeball> hey out there, I want to understand how thread spawning works in bash
[21:38:15] <fresheyeball> as in the & postfix operator
[21:38:15] *** Joins: dub_a (~dub_a@2601:1c2:4e00:3b3::cb2)
[21:38:25] <fresheyeball> if we have the following bash
[21:38:30] <fresheyeball> foo &
[21:38:30] <twkm> not really threading, but okay.
[21:38:34] <fresheyeball> echo "bar"
[21:39:05] <fresheyeball> will it spawn the foo process and then echo bar?
[21:39:06] <twkm> (you could have written them on the same line, but carry on, ask the question)
[21:39:19] <fresheyeball> or will it schedule the foo process, echo bar, then spawn it? (javascript style)
[21:39:33] <twkm> yes, but your system might end-up running each before foo due to scheduling.
[21:40:20] <fresheyeball> twkm as in which one?
[21:40:24] <twkm> yes.
[21:40:35] <fresheyeball> sync spawning, or scheduled async spawning?
[21:40:45] <fresheyeball> or both depending on computer?
[21:40:48] <twkm> bash isn't javascript.
[21:40:56] <fresheyeball> well yes
[21:40:59] <koala_man> sync spawning
[21:41:01] <Friithian> wait whatâ€½â€½
[21:41:04] <twkm> but it might appear to be similar due to the o/s scheduing.
[21:41:10] *** Joins: julius_c (~julius_c@253.red-88-0-63.dynamicip.rima-tde.net)
[21:41:33] <fresheyeball> so let's say we spawn a background task
[21:41:35] <fresheyeball> and get the pid
[21:41:37] <twkm> bash starts foo, but doesn't wait for it to finish so moves on to (internally, but default) run echo.
[21:41:49] <fresheyeball> on the next line of code, can that pid represent a dead process?
[21:41:59] <koala_man> yes
[21:42:07] <fresheyeball> ok, so sync spawning
[21:42:13] <Friithian> it could, depends how long it takes for the first line to run
[21:42:36] <twkm> since you need things described as if bash was js, yes sync spawning.
[21:42:40] <fresheyeball> that sucks because it means I cannot setup things with that pid before the process actually spawns
[21:42:58] *** Joins: nobody_ (~nobody@host-87-9-175-157.retail.telecomitalia.it)
[21:43:07] <fresheyeball> I could fail to hear the process exit because the spawn is sync
[21:43:15] <fresheyeball> and so it might have exited before I setup listening
[21:43:16] <twkm> you can't even be sure that pid won't reappear even though you haven't wait'd on it.
[21:43:17] <fresheyeball> for example
[21:43:27] <fresheyeball> I am using `wait`
[21:43:32] <twkm> immaterial.
[21:43:36] <fresheyeball> ok
[21:43:46] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[21:45:02] <koala_man> if you fail to detect the process exiting, that's a problem with your code and not with bash or concurrency
[21:45:26] <Friithian> so, what are you actually trying to do? or is this all theoretical?
[21:47:03] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[21:47:24] <twkm> perhaps something like ''rm -f /some/pipe; foo & while sleep 1; do [[ -p /some/pipe ]] && break; done'' would be possible.
[21:47:27] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[21:48:18] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[21:49:44] <twkm> (that presumes that foo will create /some/pipe, similar if it creates a unix socket, or less similar for a tcp or udp socket)
[21:51:21] *** Joins: petemc (~pete@vps-80fad31a.vps.ovh.net)
[21:51:37] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Connection closed)
[21:56:13] <fresheyeball> Friithian: sec
[21:56:29] <fresheyeball> https://gitlab.com/platonic/shpadoinkle/-/blob/master/nix/cachix.sh
[21:56:37] <fresheyeball> this is the script in question
[21:57:02] <fresheyeball> what I am trying to do, is to ensure that if any of these processes exit 1, the script fails (this is needed for CI)
[21:57:23] <fresheyeball> koala_man: ^^
[21:58:29] *** Joins: Krail (~Krail@user/alexdelarge)
[21:59:17] <twkm> shittyscript only paste site ignored.  perhaps someone else will look at it.
[21:59:41] <fresheyeball> twkm: oh is there a special paste site for this IRC?
[22:00:01] <koala_man> fresheyeball: 'wait' will correctly return the exit code for the pid even if it's already exited
[22:00:20] <fresheyeball> koala_man: ok, so it's proably fine as is then
[22:00:50] <twkm> !paste
[22:00:50] <greybot> Paste short snippets (<= 5 lines) in channel. Paste more using http://paste.debian.net/ or http://paste.wooledge.org/ or see !ix or !sprunge. Please don't use pastebin.com -- it's full of ads and mangles whitespace. NEVER upload screen shots. Don't use a site that requires Javascript, or registration to view raw.
[22:00:53] <koala_man> it ignores the command's exit code the second time you run it but other than that yes
[22:01:28] <fresheyeball> twkm: https://paste.debian.net/1200434/
[22:01:30] <fresheyeball> if that helps
[22:01:51] <twkm> sounds like koala_man already addressed your concern.
[22:02:15] *** Quits: DaNeenjah (~jake@29.sub-72-106-108.myvzw.com) (Ping timeout: 252 seconds)
[22:02:37] <fresheyeball> twkm: if you agree
[22:03:24] <fresheyeball> well, I will just say thank you koala_man 
[22:03:46] <fresheyeball> I am happy to trust your insight on this
[22:03:58] *** Joins: DaNeenjah (~jake@adsl-74-230-10-210.hsv.bellsouth.net)
[22:04:34] *** Quits: shad (~shad@user/shad) (Ping timeout: 250 seconds)
[22:04:59] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[22:10:14] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[22:14:30] *** Joins: OMGOMG (~bobrobert@poppy.ifi.uio.no)
[22:14:32] *** Quits: mesaboogie (mesaboogie@user/mesaboogie) (Ping timeout: 250 seconds)
[22:17:01] *** Quits: rkta (~kt@62.113.246.111) (Remote host closed the connection)
[22:17:01] *** Joins: rkta (~kt@62.113.246.111)
[22:17:39] *** Joins: ariedro (~ariedro@user/ariedro)
[22:20:10] <twkm> sorry, 1 made me cringe and i stopped reading at 7.
[22:21:44] *** Joins: kolbe (~kolbe@user/kolbe)
[22:24:18] *** Quits: hlz (~rue@1-162-41-228.dynamic-ip.hinet.net) (Quit: WeeChat 3.1)
[22:29:31] *** Joins: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854)
[22:30:21] *** Joins: Sasazuka (~Sasazuka@user/sasazuka)
[22:30:26] *** Quits: mikeliuk (~mikeliuk@213.205.198.26) (Quit: Connection closed)
[22:31:21] *** Quits: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[22:31:30] *** Joins: lilalinu_ (~lilalinux@p549ee28d.dip0.t-ipconnect.de)
[22:38:15] *** Joins: mesaboogie (mesaboogie@user/mesaboogie)
[22:45:09] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[22:46:39] *** Joins: riff_IRC (~riff-IRC@user/riff-irc)
[22:49:31] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Ping timeout: 264 seconds)
[22:50:00] *** Quits: magla (~gelignite@55d41093.access.ecotel.net) (Quit: Stay safe!)
[22:50:13] *** Joins: LuksNuke (~LuksNuke@94.242.245.63)
[22:52:23] *** Quits: nobody_ (~nobody@host-87-9-175-157.retail.telecomitalia.it) (Remote host closed the connection)
[22:52:27] *** Quits: nattiestnate (~nate@180.242.128.159) (Quit: WeeChat 3.1)
[22:53:07] *** Joins: baldr333 (~baldr333@modemcable034.69-70-69.static.videotron.ca)
[22:53:25] *** Joins: nattiestnate (~nate@180.242.128.159)
[22:54:14] <nattiestnate> hi, i just found this snippet on stackexchange: ps -u $(id -u) -o pid= | xargs -I{} cat /proc/{}/environ 2>/dev/null
[22:54:27] <nattiestnate> what is the {} part called, what does it do, and is this considered bash-ism?
[22:56:59] *** Joins: Epx998 (~Epx998@c-76-127-95-148.hsd1.ca.comcast.net)
[22:57:04] *** Quits: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854) (Read error: Connection reset by peer)
[22:57:44] <OMGOMG> # echo hi |xargs -Icheese echo cheese
[22:57:45] <shbot> OMGOMG: hi
[22:58:04] <Epx998> Is it possible to grep for a specific column only having numeric results, ignoring anything with alpha?
[22:58:52] <OMGOMG> grep works on lines, you might want to use awk for columns
[22:59:04] <Epx998> i dont want to exclude the rest of the line
[22:59:08] *** Joins: cliluw (~cliluw@47.147.80.149)
[22:59:43] <Epx998> basically im looking at a bunch of dirs and seeing which dont have the owner set correctly, any that are just numbers need to be corrected, so i want to ignore anything with a alpha char
[23:01:12] <OMGOMG> !ls
[23:01:12] <greybot> DO NOT USE ls' output for anything. ls is a tool for interactively looking at directory metadata. Any attempts at parsing ls' output with code are broken. Globs are much more simple AND correct: ''for file in *.txt''. Read http://mywiki.wooledge.org/ParsingLs
[23:01:37] <nattiestnate> OMGOMG: i still don't really get it tbh. would you mind briefly explaining the {} to me? is there a specific term for it?
[23:01:46] <Friithian>  I like how the first sentence contradicts itself in the second
[23:02:19] *** Quits: kdc (~kdc@196.211.197.141) (Quit: kdc)
[23:02:52] <twkm> nattiestnate: it is the string that's replaced with words from stdin.
[23:02:59] <twkm> also, ewww, xargs.
[23:03:28] <twkm> Epx998: find can find them.
[23:04:31] <grovershor> nattiestnate: it is called a replacement string try man xargs
[23:05:39] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[23:05:47] *** Joins: Dolor_Avis (~Dolor_Avi@user-5-173-8-33.play-internet.pl)
[23:08:04] *** Joins: Crescendo (~Crescendo@user/crescendo)
[23:09:04] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[23:09:57] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:10:25] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[23:10:33] <grovershor> Epx998: find / -nogroup -nouser
[23:10:42] <grovershor> modify as needed
[23:10:44] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Client Quit)
[23:11:09] <nattiestnate> twkm and grovershor: thanks folks. this isn't a feature unique to bash right?
[23:11:11] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[23:11:31] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Client Quit)
[23:11:59] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[23:12:09] <grovershor> nattiestnate: type -a xargs will show you xargs is not a bultin to bash
[23:12:11] <uplime> its not related to bash at all. its an aspect of the program xargs
[23:12:18] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Client Quit)
[23:13:12] *** Quits: Dolor_Avis (~Dolor_Avi@user-5-173-8-33.play-internet.pl) (Quit: Dolor_Avis)
[23:13:46] *** Joins: Crescendo (~Crescendo@user/crescendo)
[23:13:48] <grovershor> nattiestnate: to see a builtin try type -a test since it is both a builtin and an external program
[23:15:32] *** Joins: krok (~krok@callipygian.life)
[23:16:05] *** krok is now known as k
[23:21:19] *** Joins: fourHZ (~fourHZ@92-52-40-121.dynamic.orange.sk)
[23:21:38] *** Quits: kurahaupo (~kurahaupo@202-7-184-72.tpgi.com.au) (Read error: Connection reset by peer)
[23:21:47] *** Joins: kurahaupo (~kurahaupo@202-7-184-72.tpgi.com.au)
[23:32:53] *** Joins: greycat (~greg@209.142.155.49)
[23:35:36] *** Quits: lilalinu_ (~lilalinux@p549ee28d.dip0.t-ipconnect.de) (Remote host closed the connection)
[23:36:14] *** Joins: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de)
[23:36:33] *** Joins: rdz (~rdz@2001:620:120:1::12)
[23:40:12] *** Joins: Starmina_ (~Starmina@2a03:1b20:9:f011::a01e)
[23:40:29] *** Quits: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[23:40:30] *** Quits: physics (~physics@rain.bz) (Quit: Textual IRC Client: www.textualapp.com)
[23:40:42] *** Quits: Starmina (~Starmina@212.170.25.93.rev.sfr.net) (Ping timeout: 252 seconds)
[23:40:42] *** Starmina_ is now known as Starmina
[23:42:05] *** Joins: smlavine (smlavine@sourcehut/user/smlavine)
[23:48:04] *** Joins: malina (~malina@user/malina)
[23:51:57] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 258 seconds)
[23:52:17] *** Joins: thiras (~thiras@user/thiras)
[23:55:43] *** Joins: frm (~frm@user/frm)
[23:57:53] <Epx998> I was able to get it with -> awk '{ if($1 !~ /[a-z]/) print $0} '
[23:59:19] *** Joins: magla (~gelignite@55d41093.access.ecotel.net)
