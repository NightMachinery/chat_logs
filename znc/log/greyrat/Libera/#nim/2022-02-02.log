[00:03:17] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[00:12:59] <FromDiscord> <kevin> Is there a way to convert a cstring back into a string?
[00:13:19] <FromDiscord> <kevin> is it just `var myString = $myCstring` ?
[00:13:31] <FromDiscord> <kevin> I keep getting segfault in that case 😠
[00:14:24] <nrds> <06Prestige99> iirc you can just use a cstring in place of a string
[00:15:42] <FromDiscord> <enthus1ast> $ should work
[00:16:39] <FromDiscord> <enthus1ast> do you do some pointer magic with your cstring? maybe thats the reason
[00:25:03] <FromDiscord> <kevin> I'm wrapping a C function with prototype `char myFunction(int outsize);`
[00:26:03] <FromDiscord> <kevin> Nim equivalent should just be: `proc myFunction(outsize: ptr int): cstring {.importc: "myFunction", nodecl.}` , right?
[00:28:37] <FromDiscord> <kevin> Or maybe instead of trying to automatically convert, is there a Nim way to create a new string of length `outsize` and then just copy `outsize` number bytes to the new string?
[00:34:45] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:40:34] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3)
[00:42:44] <FromDiscord> <elo88> In reply to @PMunch "<@752421389209698344>, not familiar with": good point, now returns access denied. Even after I gave it all the rights and run it as admin. https://play.nim-lang.org/#ix=3Olo ↵I didn't have to do this in go, so I'm wondering, it could be related with compilation process?
[00:48:18] *** Quits: sagax (~sagax_nb@user/sagax) (Ping timeout: 260 seconds)
[01:08:23] <FromDiscord> <Waldecir Santos> What does this `case` do here in the `type`. block https://github.com/fenekku/moustachu/blob/master/src/moustachupkg/context.nim#L15-L22. ?
[01:09:09] <FromDiscord> <Waldecir Santos> is that some time of "constructor" ?
[01:09:16] <FromDiscord> <Waldecir Santos> (edit) "time" => "type"
[01:13:17] <FromDiscord> <Waldecir Santos> Oh found it https://nim-lang.org/docs/tut2.html#object-oriented-programming-object-variants
[01:42:31] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:51:03] <FromDiscord> <Waldecir Santos> How can I have a table where the value can have multiple types e.g: strings, ints and even other tables ?
[01:52:01] <FromDiscord> <konsumlamm> usually you make a variant type
[01:52:34] <FromDiscord> <Waldecir Santos> Ok and use the `object case` as I posted before right ?
[01:52:43] <FromDiscord> <konsumlamm> yes
[01:53:27] <FromDiscord> <Elegantbeef> Tagged unions or ADT is just how you have to do it in a statically typed language, or make everything a reference like in C# land 😀
[02:08:54] <FromDiscord> <IsaacPaul> or you could use method / inheritance.. but that would require a ref and method dispatch is slow on arc
[02:11:10] <FromDiscord> <IsaacPaul> On my todo list is to investigate some of these other libraries:↵https://github.com/itsumura-h/nim-interface-implements - Macro to build a tuple↵https://github.com/andreaferretti/interfaced - Go Like vtable
[02:19:59] <Amun-Ra> can I use concept in this case? https://play.nim-lang.org/#ix=3OlJ
[02:20:35] <FromDiscord> <Elegantbeef> You can use concepts but you're doing it wrong
[02:22:02] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3OlK
[02:23:34] <Amun-Ra> thanks Elegantbeef 
[02:30:04] <FromDiscord> <tandy> `to(objStore, Table[objStore.userId, User])` is this legal?
[02:30:30] <FromDiscord> <tandy> im trying to make a hashtable of `User` objects, indexed by `userId: string`
[02:31:04] <Amun-Ra> Elegantbeef: can I use var Self in concepts? as in: https://play.nim-lang.org/#ix=3OlN
[02:31:35] <FromDiscord> <tandy> initially i was doing this `storedUsers = to(objStore, seq[User])`, maybe its easier to convert seq to table..
[02:31:45] <FromDiscord> <Elegantbeef> You can use Self inside new concepts
[02:32:04] <FromDiscord> <Elegantbeef> oh you said `var Self`
[02:32:29] <FromDiscord> <Elegantbeef> I dont know if new concepts support this
[02:32:44] <FromDiscord> <tandy> so i guess my question is now\:
[02:33:06] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3OlO i think the best you can do is
[02:33:15] <FromDiscord> <tandy> [Edit](https://discord.com/channels/371759389889003530/371759389889003532/938207770686156820): so i guess my question is now\:↵how to convert `seq[User]` to `Table[User.userId: string, User]`
[02:36:32] <FromDiscord> <tandy> i figured
[02:36:34] <FromDiscord> <tandy> sent a code paste, see https://play.nim-lang.org/#ix=3OlR
[02:36:59] <Amun-Ra> Elegantbeef: yes, looks like it works that way in old concepts, thanks again https://play.nim-lang.org/#ix=3OlO
[02:38:14] *** Quits: rp1 (~rp@cpc77289-basf12-2-0-cust607.12-3.cable.virginm.net) (Ping timeout: 256 seconds)
[02:38:45] <FromDiscord> <tandy> nvm, cant do that to tables
[02:41:50] <FromDiscord> <huantian> In reply to @tandy "[Edit](https://discord.com/channels/371759389889003": You could use collect from std/sugar
[02:43:05] <FromDiscord> <tandy> ooo↵(@huantian)
[02:43:09] <FromDiscord> <tandy> leme peep the documentation
[02:52:06] <FromDiscord> <kevin> Any idea why Nim would be treating a pointer as a 32 bit value?
[02:52:08] <FromDiscord> <kevin>  https://media.discordapp.net/attachments/371759389889003532/938212653212504094/unknown.png
[02:52:18] <FromDiscord> <kevin> Top one is from C, bottom is a Nim ptr
[02:52:33] <FromDiscord> <Elegantbeef> What's the code?
[02:54:13] <FromDiscord> <leorize> it's likely colored
[02:54:22] <FromDiscord> <kevin> sent a code paste, see https://play.nim-lang.org/#ix=3OlV
[02:54:46] <FromDiscord> <leorize> what is this GetOutputData of yours?
[02:54:53] <FromDiscord> <kevin> sent a code paste, see https://play.nim-lang.org/#ix=3OlW
[02:55:10] <FromDiscord> <kevin> (edit) "https://play.nim-lang.org/#ix=3OlW" => "https://paste.rs/eJk"
[02:55:19] <FromDiscord> <Elegantbeef> the C code?
[02:55:28] <FromDiscord> <leorize> `nodecl`? that's sus
[02:55:42] <FromDiscord> <leorize> are you using any form of `#include`?
[02:55:48] <FromDiscord> <Elegantbeef> If you notice the lower half of the Nim output is the same
[02:56:13] <FromDiscord> <Elegantbeef> So something is "properly" working
[02:56:16] <FromDiscord> <kevin> I'm trying to basically just create a wrapper for this C function
[02:56:27] <FromDiscord> <kevin> so it returns a string instead of a cstring
[02:56:29] <FromDiscord> <Elegantbeef> Sure what's the C function
[02:57:03] <FromDiscord> <kevin> https://github.com/trustedsec/COFFLoader/blob/main/beacon_compatibility.c#L338
[02:57:29] <FromDiscord> <leorize> can you try changing nodecl to cdecl?
[02:57:34] <FromDiscord> <kevin> ok
[02:58:21] <FromDiscord> <kevin> nah still the same
[02:58:22] <FromDiscord> <leorize> btw your outputsize parameter is wrong, it should be `ptr cint`
[03:00:02] <NimEventer> New thread by Wils: Problem compiling ASM code with vars in Mac M1, see https://forum.nim-lang.org/t/8860
[03:00:21] <FromDiscord> <kevin> I can try ptr cint I guess
[03:00:48] <FromDiscord> <kevin> The thing is Nim is cutting off half of my pointer value ... maybe something with the way I'm importing my function Nim thinks it's a 32 bit return value? idk
[03:01:27] <FromDiscord> <Elegantbeef> No `ptr char` is `sizeof(int)`
[03:01:53] <FromDiscord> <Elegantbeef> So unless your C code you're calling magiically converts your PC to 32 bit temporarily i think it's off
[03:03:40] <FromDiscord> <leorize> it's unlikely, `ffffffff` is too magical to be a cut-off
[03:04:56] <FromDiscord> <leorize> can you try printing with `echo cast[int](output).toHex()`?
[03:04:58] <FromDiscord> <leorize> you will have to import `strutils`
[03:05:19] <FromDiscord> <kevin> sent a code paste, see https://play.nim-lang.org/#ix=3OlZ
[03:05:19] <FromDiscord> <kevin> something like that is what I get
[03:05:35] <FromDiscord> <kevin> clearly the Nim ptr value is cut off from the C ptr
[03:07:58] <FromDiscord> <leorize> can you try `--nimcache:pick/a/folder` and check the generated C for the module you're compiling?
[03:08:57] <Amun-Ra> kevin: can you paste nim code that calls the function?
[03:09:28] <FromDiscord> <leorize> just look for a `Blah_` in the C file and you should be able to find the function
[03:14:52] <FromDiscord> <kevin> sent a code paste, see https://play.nim-lang.org/#ix=3Om7
[03:15:10] <FromDiscord> <kevin> C code for GetOutputData is https://github.com/trustedsec/COFFLoader/blob/main/beacon_compatibility.c#L338
[03:19:56] <Amun-Ra> kevin: does that work? https://play.nim-lang.org/#ix=3Oma
[03:20:57] <termer> How would I import a module that's in the parent directory of the current module?
[03:21:00] <termer> I can't seem to use ../
[03:21:23] <Amun-Ra> termer: that should work
[03:21:38] <termer> import ../[utils]
[03:21:48] <termer> cannto open file: ../[utils]
[03:21:48] <FromDiscord> <leorize> sent a code paste, see https://play.nim-lang.org/#ix=3Omb
[03:22:24] <FromDiscord> <leorize> the return type `NCSTRING` is defined as `typedef char NCSTRING;` in `nimbase.h`
[03:23:00] <termer> Is there a way to import multiple packages from a relative path?
[03:23:05] <termer> using [] in it makes it fail
[03:23:32] <FromDiscord> <kevin> In reply to @Amun-Ra "<@281679831119167489>: does that work?": Yeah actually this does work! 🥳
[03:23:36] <FromDiscord> <Elegantbeef> I think `".."/[utils, thingA]` works
[03:25:02] <Amun-Ra> kevin: \o/
[03:25:29] <termer> Elegantbeef it doesn't work
[03:25:43] <termer> import ../[objects, client]
[03:25:49] <termer> cannot open file: ../[objects, client]
[03:25:51] <termer> Is that a bug
[03:25:57] <termer> because ../objects works
[03:26:00] <termer> and ../client also does
[03:26:08] <FromDiscord> <Elegantbeef> Did you do the string thing?
[03:26:15] <FromDiscord> <Elegantbeef> It's a known issue with `../` iirc
[03:26:46] <termer> the string thing?
[03:27:05] <FromDiscord> <Elegantbeef> Make `..` a string literal
[03:27:12] <FromDiscord> <Elegantbeef> so it's `".."/[client, objects]`
[03:27:24] <termer> hmm, that seems to work
[03:27:26] <termer> odd but I'll take it
[03:27:32] <termer> thanks
[03:27:42] <FromDiscord> <Elegantbeef> I think the issue is `../` is taken as an operator and doesnt play with `[]`
[03:28:01] <termer> that makes sense but definitely should be changed
[03:28:15] <FromDiscord> <abenedic (Alex Benedict)> Hello, I am probably trying to do something really stupid, but I am porting some of my C++ code that uses X macros to nim to learn the language.  Currently I am trying something like https://play.nim-lang.org/#ix=3Omc and I would like to be able to return an `of` for a case statement from a template, but that doesn't seem to work.  Should I use a macro for that or I am I going about this in entirely the wrong way?
[03:29:26] <FromDiscord> <Elegantbeef> Macro
[03:29:38] <FromDiscord> <Elegantbeef> `of x: y` isnt valid AST
[03:29:46] <FromDiscord> <Elegantbeef> So you need a macro to handle your input and turn it into your output
[03:31:16] <FromDiscord> <abenedic (Alex Benedict)> Thank you, would I try returning an `nnkOfBranch`?
[03:31:39] <FromDiscord> <Elegantbeef> No you need to return an entire case statement at once with the of branches filled
[03:32:13] <FromDiscord> <abenedic (Alex Benedict)> Ah, so I can't return a partial case statement.
[03:32:26] <FromDiscord> <Elegantbeef> Indeed
[03:32:35] <FromDiscord> <abenedic (Alex Benedict)> Awesome, thank you very much
[04:05:59] <FromDiscord> <Patitotective> What is a https://nim-lang.org/docs/typetraits.html#HoleyEnum ? 😕
[04:06:44] <FromDiscord> <konsumlamm> an enum where the values of the vstiants are not continuous
[04:07:15] <FromDiscord> <konsumlamm> sent a code paste, see https://play.nim-lang.org/#ix=3Omm
[04:07:18] <FromDiscord> <Patitotective> oooh, Ok
[04:07:18] <FromDiscord> <Patitotective> thanks
[04:08:27] <FromDiscord> <Elegantbeef> A alias for easily figuring out if an enum has assigned values that are not contiguous
[04:13:47] <FromDiscord> <demotomohiro> When do you need to define HoleyEnum? I guess when you need to use C library that contain holy enum.
[04:14:01] <FromDiscord> <Elegantbeef> When you want to hurt people
[04:14:18] <FromDiscord> <Patitotective> How do I reverse a set?
[04:14:59] <FromDiscord> <demotomohiro> There is no order in set
[04:15:14] <FromDiscord> <Elegantbeef> I think they want the complement
[04:15:30] <FromDiscord> <Elegantbeef> `import std/setutils; echo complement({'a'..'b'}`
[04:16:06] <FromDiscord> <Patitotective> In reply to @demotomohiro "There is no order": Then why does `for i in {1, 2}` print `1 2`
[04:16:30] <FromDiscord> <Elegantbeef> Cause the order is defined in the bit signature
[04:17:04] <FromDiscord> <Elegantbeef> Each bit represents a single value from the `range.low` to `range.high`
[04:17:21] <FromDiscord> <Elegantbeef> So you'd iterate that range backward checking if it's in the set
[04:17:26] <FromDiscord> <Patitotective> so `for i in {2, 1}` would print `1 2` as well?
[04:17:31] <FromDiscord> <Elegantbeef> Yes
[04:17:41] <FromDiscord> <Patitotective> perfect thanks 👍
[04:19:23] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Omn
[04:20:09] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Omo
[04:25:25] *** Quits: krux02 (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de) (Remote host closed the connection)
[04:43:31] <termer> Does asyncnet use async streams or are the procs for interacting with async socks just specific to them?
[04:49:24] <FromDiscord> <Patitotective> sent a code paste, see https://paste.rs/2h7
[04:49:31] <FromDiscord> <Elegantbeef> Sure but there is no other way
[04:49:55] <FromDiscord> <Elegantbeef> You have a collection of bits you need to iterate over them all to yield the collection in reverse
[04:50:04] <FromDiscord> <Elegantbeef> How do you think the iteration works anyway
[04:50:51] <FromDiscord> <demotomohiro> Even if you just iterate forward, you need to check every bits, isn't it?
[04:50:59] <FromDiscord> <Elegantbeef> Indeed
[04:51:11] <FromDiscord> <Elegantbeef> You only have bits
[04:53:20] <FromDiscord> <demotomohiro> So, if you have a large range set contains few elements, iterating seq that have same value might faster.
[04:58:34] <FromDiscord> <Patitotective> Are there reverse slices?
[04:59:19] <FromDiscord> <Rika> You can’t slice sets
[04:59:25] <FromDiscord> <Rika> It doesn’t really make sense
[04:59:47] <FromDiscord> <Patitotective> not sets
[05:00:11] <FromDiscord> <Patitotective> a seq
[05:00:14] <FromDiscord> <Patitotective> (edit) "seq" => "sequence"
[05:00:25] <FromDiscord> <Rika> Don’t think so
[05:00:55] <FromDiscord> <Patitotective> 😕
[05:01:45] <FromDiscord> <Patitotective> Then how do I reverse a seq?
[05:02:07] <FromDiscord> <Elegantbeef> You can make iterators you know?
[05:03:12] <FromDiscord> <demotomohiro> Why do you want to reverse seq or set?
[05:03:13] <FromDiscord> <Elegantbeef> https://github.com/beef331/slicerator/blob/master/src/slicerator.nim#L37-L45
[05:03:59] <FromDiscord> <Patitotective> In reply to @demotomohiro "Why do you want": https://github.com/nim-lang/Nim/pull/19480#discussion_r796866159
[05:09:38] <FromDiscord> <demotomohiro> There is reverse proc in algorithm module https://nim-lang.org/docs/algorithm.html#reverse%2CopenArray%5BT%5D
[05:13:41] <FromDiscord> <Patitotective> :o
[05:16:12] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[05:17:29] *** Joins: tiorock (~rc@user/rockcavera)
[05:17:30] *** Quits: rockcavera (~rc@user/rockcavera) (Killed (calcium.libera.chat (Nickname regained by services)))
[05:17:30] *** tiorock is now known as rockcavera
[05:29:32] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 250 seconds)
[05:37:44] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[05:45:29] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[05:46:26] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 250 seconds)
[06:05:34] *** Joins: rockcavera (~rc@192.12.114.193)
[06:05:34] *** Quits: rockcavera (~rc@192.12.114.193) (Changing host)
[06:05:34] *** Joins: rockcavera (~rc@user/rockcavera)
[06:28:02] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 250 seconds)
[06:41:24] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:51:14] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[09:06:09] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[09:08:12] *** Quits: blackbeard420 (~blackbear@45.33.85.133) (*.net *.split)
[09:08:12] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (*.net *.split)
[09:08:12] *** Quits: FromDiscord (~FromDisco@mail.nim-lang.org) (*.net *.split)
[09:08:12] *** Quits: fowl (~fowlmouth@user/fowl) (*.net *.split)
[09:08:13] *** Quits: mahlon (~mahlon@martini.nu) (*.net *.split)
[09:08:13] *** Quits: syl (~z@user/syl) (*.net *.split)
[09:08:13] *** Quits: drewr (~drew@user/drewr) (*.net *.split)
[09:08:13] *** Quits: [R] (~rs@genoce.org) (*.net *.split)
[09:08:13] *** Quits: def- (~def-@static.238.114.9.176.clients.your-server.de) (*.net *.split)
[09:08:13] *** Quits: tinystoat (~squeek@user/tinystoat) (*.net *.split)
[09:08:13] *** Quits: flynn (~mcbloch@user/flynn) (*.net *.split)
[09:08:14] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (*.net *.split)
[09:08:14] *** Quits: oprypin (~irc@pryp.in) (*.net *.split)
[09:08:14] *** Quits: notchris (sid181145@id-181145.hampstead.irccloud.com) (*.net *.split)
[09:08:14] *** Quits: NimEventer (~NimBot@78.47.140.224) (*.net *.split)
[09:08:14] *** Quits: joast (~rick@cpe-98-146-112-4.natnow.res.rr.com) (*.net *.split)
[09:08:14] *** Quits: lain (~lain@172.16.254.xxx) (*.net *.split)
[09:08:14] *** Quits: cornfeedhobo (~cornfeedh@user/cornfeedhobo) (*.net *.split)
[09:08:15] *** Quits: toothlessgear (2c15493d69@user/toothlessgear) (*.net *.split)
[09:08:15] *** Quits: ormiret (sid314108@id-314108.lymington.irccloud.com) (*.net *.split)
[09:08:15] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (*.net *.split)
[09:08:16] *** Quits: rb (~augh@theguntretort.com) (*.net *.split)
[09:08:16] *** Quits: Mister_Magister (~Mister_Ma@user/mister-magister/x-2636733) (*.net *.split)
[09:08:16] *** Quits: dv^_^ (~dv@eclipse.oxfordfun.com) (*.net *.split)
[09:08:16] *** Quits: Onionhammer (~onionhamm@23-88-146-29.fttp.usinternet.com) (*.net *.split)
[09:08:16] *** Quits: nrds (~NimBot@ns501209.ip-142-4-210.net) (*.net *.split)
[09:08:16] *** Quits: haakon (~haakonn@82.196.8.209) (*.net *.split)
[09:08:16] *** Quits: mal`` (~mal``@static.38.6.217.95.clients.your-server.de) (*.net *.split)
[09:08:17] *** Quits: oz (~oz@crystal/user/oz) (*.net *.split)
[09:12:27] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 250 seconds)
[09:21:14] *** Joins: Mister_Magister (~Mister_Ma@user/mister-magister/x-2636733)
[09:21:14] *** Joins: dv^_^ (~dv@eclipse.oxfordfun.com)
[09:21:14] *** Joins: Onionhammer (~onionhamm@23-88-146-29.fttp.usinternet.com)
[09:21:14] *** Joins: nrds (~NimBot@ns501209.ip-142-4-210.net)
[09:21:14] *** Joins: haakon (~haakonn@82.196.8.209)
[09:21:14] *** Joins: mal`` (~mal``@static.38.6.217.95.clients.your-server.de)
[09:22:45] *** Joins: GreaseMonkey (greaser@user/greasemonkey)
[09:22:45] *** Joins: oprypin (~irc@pryp.in)
[09:22:45] *** Joins: notchris (sid181145@id-181145.hampstead.irccloud.com)
[09:22:45] *** Joins: NimEventer (~NimBot@78.47.140.224)
[09:22:45] *** Joins: joast (~rick@cpe-98-146-112-4.natnow.res.rr.com)
[09:22:45] *** Joins: lain (~lain@172.16.254.xxx)
[09:22:45] *** Joins: cornfeedhobo (~cornfeedh@user/cornfeedhobo)
[09:22:45] *** Joins: toothlessgear (2c15493d69@user/toothlessgear)
[09:22:45] *** Joins: ormiret (sid314108@id-314108.lymington.irccloud.com)
[09:22:45] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[09:22:45] *** Joins: rb (~augh@theguntretort.com)
[09:23:35] *** Joins: blackbeard420 (~blackbear@45.33.85.133)
[09:23:35] *** Joins: kayabaNerve (~kayabaNer@user/kayabanerve)
[09:23:35] *** Joins: FromDiscord (~FromDisco@mail.nim-lang.org)
[09:23:35] *** Joins: fowl (~fowlmouth@user/fowl)
[09:23:35] *** Joins: mahlon (~mahlon@martini.nu)
[09:23:35] *** Joins: syl (~z@user/syl)
[09:23:35] *** Joins: drewr (~drew@user/drewr)
[09:23:35] *** Joins: [R] (~rs@genoce.org)
[09:23:35] *** Joins: def- (~def-@static.238.114.9.176.clients.your-server.de)
[09:23:35] *** Joins: tinystoat (~squeek@user/tinystoat)
[09:23:35] *** Joins: flynn (~mcbloch@user/flynn)
[09:24:13] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[09:24:28] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[09:24:51] *** Joins: oz (~oz@crystal/user/oz)
[09:34:19] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[09:42:30] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[09:43:48] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[09:44:09] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[10:28:11] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17)
[11:02:11] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[11:05:03] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17)
[11:11:47] <NimEventer> New Nimble package! mt - A simple TLDR pages client, see https://codeberg.org/eqf0/mt/
[11:16:36] *** Joins: PMunch (~PMunch@user/pmunch)
[11:21:19] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[11:47:23] <PMunch> Hmm, once again I meet the lack of support for jsondocs..
[11:48:44] <PMunch> I guess I should make an RFC for getting the compiler to only output JSON and then have a program called to turn that JSON into HTML and LaTeX..
[11:49:36] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 256 seconds)
[11:51:49] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[12:03:10] <FromDiscord> <Hamid_Bluri> In reply to @demotomohiro "Why do you want": beef you're genius
[12:03:25] <FromDiscord> <Elegantbeef> I'm?
[12:05:07] <FromDiscord> <Hamid_Bluri> yes you are
[12:06:41] <PMunch> https://github.com/nim-lang/RFCs/issues/447
[12:07:07] *** Joins: enyc (~enyc@user/enyc)
[12:09:25] <FromDiscord> <Hamid_Bluri> In reply to @hamidb80 "beef you're genius": i replied wrong msg
[12:09:44] <FromDiscord> <Hamid_Bluri> In reply to @Elegantbeef "https://github.com/beef331/slicerator/blob/master/s": i wanted to reply this
[12:09:54] <FromDiscord> <Hamid_Bluri> (edit) "In reply to @Elegantbeef "https://github.com/beef331/slicerator/blob/master/s": i wanted to reply ... this" 03added "to"
[12:11:08] <FromDiscord> <Elegantbeef> Ah
[12:24:45] <FromDiscord> <demotomohiro> @PMunch Nim have parsed RST data as `PRstNode`. So I think you can get the json data by serializig the `PRstNode` with marshal module. Then your program can get the `PRstNode` by deserializing it.
[12:25:56] <PMunch> Haha, I was actually just sitting here reading the RST module right now
[12:26:11] <PMunch> But yeah, something like that should be possible
[12:27:04] <PMunch> I mean this shouldn't be hard, but it might be a bit time-consuming because every part of the existing system is built around outputting HTML
[12:28:02] <FromDiscord> <Phil> Say I have a package with dependencies. To make that installable, do I have to enter all my package dependencies with their version to the nimble file by hand? Is there a command for that? Is the nimble file even the correct place for it?↵I thought nimble lock was the thing to do, but I just discovered that according to `nimble --help` that no longer exists
[12:28:41] <FromDiscord> <Phil> (edit) "installable," => "installable with `nimble install`,"
[12:28:42] <FromDiscord> <Elegantbeef> You just use requires for now
[12:29:15] <FromDiscord> <Elegantbeef> Lock files are coming but the nimble update that introduced them caused issues for people so they were pulled back and will be readded soon tm
[12:29:50] <FromDiscord> <Phil> Check, so I have to write them by hand?
[12:29:59] <FromDiscord> <Phil> (for now)
[12:30:08] <FromDiscord> <Elegantbeef> Yes you need to write your requires by hand presently
[12:30:54] <FromDiscord> <Phil> That might explain why my nimstoryfont project didn't compile for Waldecir, I had forgotten writing 3 of the dependencies in there
[12:31:14] <FromDiscord> <Phil> Thanks!
[12:32:28] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[12:32:58] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[12:50:01] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[12:56:28] *** Quits: fowl (~fowlmouth@user/fowl) (Ping timeout: 256 seconds)
[12:59:16] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:00:36] *** Joins: rp1 (~rp@cpc77299-basf12-2-0-cust609.12-3.cable.virginm.net)
[13:01:31] <FromDiscord> <Phil> In reply to @Elegantbeef "Yes you need to": Just so I'm on the safe side in terms of understanding constructor:↵The second parameter of the `implDefaults` macro is optional, correct?
[13:01:48] <FromDiscord> <Elegantbeef> It's not optional
[13:01:55] <FromDiscord> <Elegantbeef> Atleast with the new version
[13:02:05] <FromDiscord> <Phil> That
[13:02:20] <FromDiscord> <Phil> explains why my project didn't compile for Waldecir
[13:02:40] <FromDiscord> <Phil> What does genFlags do? what's it for?
[13:03:12] <FromDiscord> <Elegantbeef> https://github.com/beef331/constructor/blob/master/src/constructor/defaults.nim#L5-L7
[13:07:46] <FromDiscord> <Phil> so defExported allows the proc to be exported (just adds a ) and defTypeConstr...I don't think I get what the result of defTypeConstr is
[13:08:16] <FromDiscord> <Elegantbeef> https://github.com/beef331/constructor/blob/master/tests/tdefaults.nim#L25-L29
[13:09:15] <FromDiscord> <Phil> So instead of a `newMyModel()` it generates a `new(t: typedesc[MyModel])`
[13:09:26] <FromDiscord> <Elegantbeef> Yes
[13:09:35] <FromDiscord> <Phil> Mind if I add that to the readme in a PR?
[13:09:47] <FromDiscord> <Elegantbeef> Feel free
[13:10:18] <FromDiscord> <Elegantbeef> the runnable examples also need fixed iirc
[13:10:56] <FromDiscord> <Elegantbeef> I might have a fix to make it an optional parameter
[13:12:21] <FromDiscord> <Phil> Is that even possible in macros? I mean, it would be neat for the API if I don't want to have to think about this
[13:12:42] <FromDiscord> <Elegantbeef> Yea i think so
[13:13:03] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3OoF
[13:13:54] <FromDiscord> <Elegantbeef> There most recent version 😛
[13:15:26] <FromDiscord> <Phil> In reply to @Elegantbeef "There most recent version": yay!
[13:27:25] *** Joins: jjido (~Denis@94.4.149.217)
[14:03:25] <FromDiscord> <Phil> ... I do not comprehend github
[14:03:27] <FromDiscord> <Phil> Or git
[14:03:30] <FromDiscord> <Phil> One of these two
[14:03:43] <FromDiscord> <Elegantbeef> What;s the problem?
[14:03:48] <FromDiscord> <Phil> Beef, I can see your flag-code on github, it's nice, it's there, it exists
[14:03:58] <FromDiscord> <Phil> Yet it's not in my fork
[14:04:05] *** Quits: jjido (~Denis@94.4.149.217) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[14:04:07] <FromDiscord> <Phil> and I can't sync, it claims everything is up to date
[14:04:42] <FromDiscord> <Phil> And if I locally pull from your git-repo into my local repo, I still don't see iiiiiiiiit wait am I on the right branch locally
[14:05:09] <FromDiscord> <Elegantbeef> sent a code paste, see https://paste.rs/gDs
[14:05:27] <FromDiscord> <Elegantbeef> Then you just add to the docs push and PR
[14:05:47] <FromDiscord> <Phil> Ahhh there it is, git pull beef upstream (I named the remote to your repo "beef") gave me what I was looking for
[14:06:45] <FromDiscord> <Phil> (edit) "upstream" => "master"
[14:07:03] <FromDiscord> <Elegantbeef> Well sleepy sleepy for me i'll look at your  PR tomorrow
[14:07:17] <FromDiscord> <xx_ns> In reply to @Isofruit "And if I locally": recommend getting an indicator for that in your shell
[14:07:25] <FromDiscord> <xx_ns> i use something like this https://media.discordapp.net/attachments/371759389889003532/938382592158335016/unknown.png
[14:07:42] <FromDiscord> <xx_ns> it fetches the status async so it doesn't reduce prompt load times
[14:08:03] <FromDiscord> <Phil> One day I might! ... but not now because lazy
[14:08:13] <FromDiscord> <Phil> I use vscode so the shell would be bash
[14:08:22] <FromDiscord> <Phil> And I've never tinkered with bash so far outside of setting some env variables
[14:08:30] <FromDiscord> <xx_ns> i personally use zsh
[14:08:35] <FromDiscord> <xx_ns> here's my status script
[14:08:36] <FromDiscord> <xx_ns> https://github.com/nnsee/.shincludes/blob/master/zsh/git-status.sh
[14:09:27] <FromDiscord> <Phil> In reply to @Elegantbeef "Well sleepy sleepy for": Sleep well!
[14:25:05] <FromDiscord> <haxscramper> In reply to @PMunch "But yeah, something like": current documentation generator does not have any intermediate representation implemented for any part of the code
[14:25:44] <PMunch> Oh trust me, I know..
[14:25:46] <FromDiscord> <haxscramper> everything is written out as the documentor pass traverses the code, and things are substituted directly into string interpolation
[14:26:07] <PMunch> It does invoke the RST parser for comments though
[14:26:31] <PMunch> Which is what we where talking about there
[14:26:52] <PMunch> Basically to make this work you'd also need to write a RST -> JSON part
[14:27:23] <PMunch> Which also does highlighting of Nim code and references as JSON
[14:27:55] <FromDiscord> <haxscramper> Ideally this thing should just collect list of documentable entries that can be written later on
[14:28:07] <PMunch> But I've looked at the source code for these parts (I've modified some of them as well), and while it is a bit of work it shouldn't be all that hard
[14:28:14] <FromDiscord> <haxscramper> json is just a representation, there is no need to even discuss it for the inner part of the docgen
[14:28:49] <FromDiscord> <haxscramper> but that's probably a more extreme opinion on the implementation, extending json and removing html/latex might seem easier at the start
[14:29:07] <PMunch> Ah you want to have types internally and build some internal documentation representation and then just convert that to JSON for the final output?
[14:29:36] <FromDiscord> <haxscramper> yes, that's what I find reasonable style of implementing stuff like this
[14:29:40] <FromDiscord> <haxscramper> collect the data
[14:29:44] <FromDiscord> <haxscramper> render the data
[14:30:11] <PMunch> The problem is that parts of the code like the highlighter and RST parser are separate modules, the RST parer in particular just spits out a string (with HTML)
[14:30:38] <PMunch> So these packages (which are available to import into your project without importing the whole compiler), would also know how to deal with this internal format
[14:31:02] <PMunch> Or it would need to have some kind of callback functionality so that you can hook it onto your own format when you call it
[14:32:57] <FromDiscord> <haxscramper> idk, maybe wrap rst ast into json as well?
[14:33:21] <PMunch> Ie. look at `genComment` (compiler/docgen.nim:222) which calls `renderRstToOut` (lib/packages/docutils/rstgen.nim:995)
[14:33:23] <FromDiscord> <haxscramper> parse rst, resolve all links, generate data and render it later
[14:34:00] <PMunch> I guess `renderRstToOut` could be moved into `compiler/docgen` though
[14:34:21] <PMunch> I agree that it's a much better way of doing it though
[14:34:38] <PMunch> But it would be trickier to actually do because of how the current system is built..
[14:35:15] <FromDiscord> <haxscramper> the documentation generator either continues to be a half-assed solution, or it needs a nontrivial rework
[14:35:52] <FromDiscord> <haxscramper> the fact you can't even see fields in `when` properly, or any types in `when`
[14:36:28] <FromDiscord> <haxscramper> with proper IR you can just make a pre-sem visitation that collects a possible list of the documentable entries, and then clarify it in post-sem
[14:36:36] <FromDiscord> <haxscramper> without proper IR you are just dead
[14:43:38] <FromDiscord> <haxscramper> For example, I still can't find where the enum generation happens
[14:44:13] <FromDiscord> <haxscramper> or rather, I tried to uncover the mess that field generation for enums is
[14:46:11] <FromDiscord> <haxscramper> In reply to @haxscramper "with proper IR you": https://github.com/nim-works/nimskull/pull/214
[14:46:29] <FromDiscord> <haxscramper> changes in depends.nim
[14:48:18] <FromDiscord> <haxscramper> this is a proof-of-concept, but the differenence in "before" and "after" graphs should illustrate just how many important things are missing when the documentation is generated
[14:48:46] *** Quits: m5zs7k (aquares@web10.mydevil.net) (Ping timeout: 260 seconds)
[14:48:54] <FromDiscord> <haxscramper> and with proper IR you can even go into more sophisticated analysis, like compiling with different GCs or defines, and merging mutliple documentable entry databases
[14:49:44] *** Joins: m5zs7k (aquares@web10.mydevil.net)
[15:14:37] <PMunch> Yeah it is a bit unfortunate that `when` statements have to be resolved, but on the other hand you could easily create a scenario in which it would be impossible to solve for all when statements
[15:15:11] <PMunch> Of course `when defined` might be easier to evaluate
[15:15:37] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17)
[15:34:10] <FromDiscord> <Shiba> how can i stop the process of checking of changes in modulses and specify the modules where i made changes
[15:34:17] <FromDiscord> <Shiba> (edit) "modulses" => "modules"
[15:34:22] <FromDiscord> <Shiba> (edit) "changes" => "changes?"
[15:34:44] *** Joins: l1x (uid1954@id-1954.tinside.irccloud.com)
[15:35:26] <FromDiscord> <haxscramper> In reply to @PMunch "Yeah it is a": you don't need to resolve all `when` statements, you just need to know that some procs might be available only on js backend, or only on C backend
[15:35:31] <FromDiscord> <haxscramper> same for fields
[15:36:14] <FromDiscord> <haxscramper> this dives deeper into general program analysis, gut current `genDepend` is very misleading for example, for system it shows only fraction of the complexity
[15:36:30] <FromDiscord> <haxscramper> docgen and genDepend are pretty similar after all, they allow you to understand code better
[15:36:45] <PMunch> Not really, `when defined(windows): import "C:\\somefile.nim"`
[15:36:57] <FromDiscord> <haxscramper> what "not really"?
[15:37:19] <PMunch> I mean that simple example won't be possible to evaluate on Linux
[15:37:24] <PMunch> Because that path doesn't exist
[15:37:42] <PMunch> Trivial and silly example, but it's not hard to come up with a more realistic one
[15:37:52] <FromDiscord> <haxscramper> ok, yes, and you also can't document imports generated from macros
[15:38:25] <FromDiscord> <haxscramper> but you know, the point is providing as good of a solution as possible, instead of giving up on the whole endeavor just because someone might write this weird nonsense
[15:38:44] <PMunch> I mean that's why Nim goes the route of "lets just compile the project with all your flags and such, and generate the documentation for this particular build as we come across it"-route
[15:39:21] <FromDiscord> <haxscramper> yes, that documents a single combination of flags, gc, and backend
[15:39:29] <PMunch> It's not that weird, I think maybe even Futhark would break what you're proposing
[15:39:38] <FromDiscord> <haxscramper> it doesn't document the project as a whole, just a project as seen by t
[15:39:45] <PMunch> Correct
[15:39:48] <FromDiscord> <haxscramper> by the compiler
[15:40:28] <FromDiscord> <haxscramper> In reply to @PMunch "It's not *that* weird,": you think I don't understand that pre-sem analysis can be broken by macros?
[15:40:49] <FromDiscord> <haxscramper> I"m proposing to do a multistage information gathering, on both pre and pos-sem code versions
[15:41:07] <FromDiscord> <haxscramper> I'm not trying to propose documentation generator that operates purely on pre-sem data
[15:41:46] <FromDiscord> <haxscramper> I'm saying that post-sem data can be further enhanced if we don't discard the knowledge about the code that we found before semantic analysis
[15:43:22] <PMunch> Oh yeah, I*m just pointing out that it's hard
[15:43:28] <PMunch> I'm not saying we shouldn't do it
[15:43:35] <FromDiscord> <haxscramper> well, quality tooling is hard, right
[15:43:44] <FromDiscord> <haxscramper> not to be honest it is not that hard to do
[15:43:53] <FromDiscord> <haxscramper> given correct data model of course
[15:44:13] <PMunch> Although I guess you could potentially get a better picture if you generate the documentation for different combination of flags/platforms and then ingest them into the same system and combine them after the fact
[15:44:34] <FromDiscord> <haxscramper> `TLineInfo` is a good enough disambiguator for that sort of interactions IMO, maybe there are some additional heuristics that can be dispatched on top
[15:44:59] <FromDiscord> <haxscramper> In reply to @PMunch "Although I guess you": yes that would be an ideal solution, although a more expensive one to implement
[15:45:13] <PMunch> I mean with my jsondoc changes you could easily take both a Linux build and a Windows build and ingest them into a system which would then give you a dropdown to select platform or show the different implementations of similar procedures etc.
[15:45:18] <FromDiscord> <haxscramper> just merge two documentation database
[15:45:34] <PMunch> I mean this is the kind of stuff I want to do with my jsondoc RFC
[15:46:00] <PMunch> Basically build a database of the documentation, and then we can create a more dynamic representation of the documentation
[15:46:10] <PMunch> It could even support user comments/examples
[15:46:45] <PMunch> And you could have docs for different versions, showing the differences and such
[15:47:14] <FromDiscord> <haxscramper> crazy how much things you can do if the tools you work with can actually output data, right
[15:47:20] <FromDiscord> <haxscramper> instead of pretty-printed nonsense
[15:50:18] <PMunch> Data is pretty neat
[15:53:32] <FromDiscord> <haxscramper> put the advertisement for the possibilities on the RFC
[15:56:43] <FromDiscord> <haxscramper> also pre-sem visitation is just about the only way to list defines that project can react to
[15:56:57] <FromDiscord> <haxscramper> aside from hooking into sem layer of course
[16:03:51] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[16:12:37] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17)
[16:13:30] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17) (Client Quit)
[16:14:50] <FromDiscord> <Waldecir Santos> I'd like to implement a table that works transparent for the user, for exemple if the table receives a string it convets to the proper ContextValue, but seems like I'm calling the parent function that dosen't accept my type, how can I archive that ? here it is my example
[16:14:57] <FromDiscord> <Waldecir Santos>  https://media.discordapp.net/attachments/371759389889003532/938414686662172692/unknown.png
[16:19:39] *** Joins: rockcavera (~rc@192.12.114.193)
[16:19:39] *** Quits: rockcavera (~rc@192.12.114.193) (Changing host)
[16:19:39] *** Joins: rockcavera (~rc@user/rockcavera)
[16:28:43] *** Joins: fvs (freevryhei@2600:3c00::f03c:92ff:fe55:ff21)
[16:32:54] <PMunch> You need to make your Context either a wrapper object or a distinct object and then convert it back
[16:33:22] <PMunch> The problem here is that at line 17 it triggers the procedure at line 15 again, but now V is a ContextValue
[16:34:51] <PMunch> Well, maybe you don't need a distinct value, but you need to use something like `tables.\`[]=\`(this, key, ContextValue(<...>)` in order to call the correct []= proc from the tables module and not the one you just created
[16:35:13] <PMunch> It would be much easier to show this to you if you had shared you code via the playground instead of as a screenshot: play.nim-lang.org
[16:35:51] <FromDiscord> <Waldecir Santos> Oh I see what you mean but let me share it
[16:36:29] <FromDiscord> <Waldecir Santos> https://play.nim-lang.org/#ix=3Oqm
[16:39:54] <PMunch> This works: https://play.nim-lang.org/#ix=3Oqn
[16:40:14] <PMunch> Note that I also had to make `Context` into a `var`
[16:40:45] <PMunch> Since we're mutating it
[16:46:31] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[16:48:01] <FromDiscord> <enthus1ast> @Waldecir Santos\: and before you try to long to use multiple "value" attributes with the same name in a case object, they this is not allowed
[16:48:22] <FromDiscord> <enthus1ast> @Waldecir Santos\: and before you try too long to use multiple "value" attributes with the same name in a case object, this is not allowed
[16:56:37] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17)
[17:06:17] <FromDiscord> <Waldecir Santos> Oh I see that is sad, but fine, thanks for pointing this up
[17:08:44] *** Joins: sagax (~sagax_nb@user/sagax)
[17:13:50] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:31:17] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[17:38:30] *** Joins: fowl (~fowlmouth@user/fowl)
[18:04:31] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 256 seconds)
[18:06:26] <FromDiscord> <ache of head> In reply to @Waldecir Santos "": hey, i'm actually kinda curious now, what font is that?
[18:06:54] <FromDiscord> <ache of head> i feel like i know it but i can't recall the name or where i've seen it before
[18:07:36] <FromDiscord> <Waldecir Santos> https://www.monolisa.dev
[18:08:46] <FromDiscord> <ache of head> oh right!
[18:08:52] <FromDiscord> <ache of head> thanks
[18:10:11] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[18:12:24] *** Joins: arkurious (~arkurious@user/arkurious)
[18:13:31] <FromDiscord> <--HA--> Hello. I'm doing C interop. I'm passing a string allocated like this `var s = newString(MAX_LEN)` to a C function via `s.cstring`. The C function writes a string but I do not know it's length other than it being <= MAX_LEN. How can I best set the length of `s` to the length till the first zero byte? Or how should I do this differently?
[18:14:32] <FromDiscord> <--HA--> I do get a string back fine but it is filled with `\x0` till the cap
[18:18:35] <FromDiscord> <demotomohiro> Are there any C function that return the length of that string?
[18:19:19] <PMunch> Are you sure the C function doesn't return the length of the string? It's fairly common in C
[18:19:37] <PMunch> But otherwise you could probably do `s.setLen(s.cstring.len)`
[18:20:44] <FromDiscord> <tandy> is there a way to check if a type/object is null?
[18:20:56] <FromDiscord> <tandy> for objects you can do `isNil`, but that doesnt work for strings or ints
[18:21:05] <FromDiscord> <demotomohiro> Your C library just says the C function doesn't write more than MAX_LEN?
[18:21:20] *** Joins: rockcavera (~rc@192.12.114.193)
[18:21:20] *** Quits: rockcavera (~rc@192.12.114.193) (Changing host)
[18:21:20] *** Joins: rockcavera (~rc@user/rockcavera)
[18:21:31] <FromDiscord> <demotomohiro> string or int is not a pointer. They never nil.
[18:21:47] <FromDiscord> <Rika> Strings and ints cannot be null
[18:21:55] <FromDiscord> <demotomohiro> ref object can be nil but object never nil.
[18:22:08] <FromDiscord> <Rika> Pointers can too
[18:22:21] <FromDiscord> <Rika> But only those, pretty much
[18:22:27] <FromDiscord> <tandy> is there a way to check if they havent been initialised then?↵(@Rika)
[18:22:36] <FromDiscord> <demotomohiro> If I remember collectly, string or seq can be nil before version 1.0
[18:22:41] <FromDiscord> <Rika> Check if they’re == default(Type)?
[18:22:53] <FromDiscord> <Rika> In reply to @demotomohiro "If I remember collectly,": Before 0.20
[18:22:54] <FromDiscord> <tandy> hmm
[18:22:57] <FromDiscord> <tandy> maybe
[18:23:11] <FromDiscord> <enthus1ast> and its a godsent↵(@demotomohiro)
[18:23:14] <FromDiscord> <tandy> maybe i just need to use options
[18:23:15] <FromDiscord> <Rika> Of course that means you reject empty string or 0 even if it was explicitly initialised
[18:23:18] *** Joins: tiorock (~rc@192.12.114.193)
[18:23:18] *** Quits: tiorock (~rc@192.12.114.193) (Changing host)
[18:23:18] *** Joins: tiorock (~rc@user/rockcavera)
[18:23:19] *** rockcavera is now known as Guest5423
[18:23:19] *** tiorock is now known as rockcavera
[18:23:27] <FromDiscord> <tandy> yeah..↵(@Rika)
[18:23:46] <FromDiscord> <Rika> If you control the type use {.requiresInit.} on the type definition
[18:23:53] <FromDiscord> <Rika> I believe that would require initialisation
[18:24:09] <FromDiscord> <--HA--> In reply to @PMunch "But otherwise you could": `s.cstring.len` works perfectly, thank you
[18:24:53] <FromDiscord> <--HA--> The C function returns an error code but not the length. I guess that is why they have that MAX_LEN constant.
[18:25:34] <FromDiscord> <Rika> Tandy, I don’t know what your use case is. It might help saying what it is
[18:26:30] *** Quits: Guest5423 (~rc@user/rockcavera) (Ping timeout: 250 seconds)
[18:29:08] <FromDiscord> <tandy> thanks rika, i just made things simpler lol
[18:30:05] <PMunch> Making things simpler is often a good idea
[18:35:09] <PMunch> Hmm, is it possible to set things like `cpu` and `os` build flags from within Nim?
[18:35:12] <FromDiscord> <Waldecir Santos> I'm trying to overload the table retrieve operator but I:m receiving a strange error (I still newbie 😄 ) can someone give me an idea on what is the problem, ps nim-play is broken :omg:
[18:35:15] <FromDiscord> <Waldecir Santos>  https://media.discordapp.net/attachments/371759389889003532/938449992899788800/unknown.png
[18:35:22] <PMunch> Or must those be placed in the cfg file?
[18:35:59] <PMunch> @Waldecir_Santos, https://play.nim-lang.org/#ix=3Or1
[18:36:15] <FromDiscord> <Waldecir Santos> it was lol
[18:36:16] <FromDiscord> <Waldecir Santos>  https://media.discordapp.net/attachments/371759389889003532/938450250987864175/unknown.png
[18:36:38] <PMunch> That just tells you that `V` can't be guessed from the call
[18:36:40] <FromDiscord> <Waldecir Santos> ok here it is: https://play.nim-lang.org/#ix=3Or2
[18:36:56] <FromDiscord> <demotomohiro> In reply to @PMunch "Making things simpler is": I never saw any pragma that allows setting os or cpu in nim file. I think you need to set them in cfg or .nims or compiler parameter.
[18:36:56] <PMunch> If you change `V` to ContextValue as the return type it should work
[18:37:37] <FromDiscord> <Waldecir Santos> I tried that same error
[18:37:50] <PMunch> Works fine for me: https://play.nim-lang.org/#ix=3Or3
[18:38:06] <PMunch> I'm guessing you left the `V` in the generic parameters?
[18:38:11] <FromDiscord> <Waldecir Santos> OH my god the proc was wrong
[18:38:26] <FromDiscord> <Waldecir Santos> I had [K,V] and it should be [K]
[18:38:30] <PMunch> Mhm
[18:39:00] <FromDiscord> <Waldecir Santos> I got this example from tables.nim 🤔
[18:39:03] <PMunch> @demotomohiro, that's what I was afraid of
[18:39:16] <FromDiscord> <Waldecir Santos> https://github.com/nim-lang/Nim/blob/devel/lib/pure/collections/tables.nim#L339
[18:39:47] <PMunch> @Waldecir_Santos, yes because B there is used in the Table definition
[18:39:53] <PMunch> So it is able to find it
[18:40:00] <FromDiscord> <Waldecir Santos> I wonder why there works with "`[]`[A, B]"
[18:40:08] <FromDiscord> <Waldecir Santos> Got it
[18:41:34] <FromDiscord> <demotomohiro> In reply to @PMunch "<@288750616510201856>, that's what I": There is `passC`, `localPassc` or `passL` pragma, but I cannot find pragma to set os or cpu
[18:55:47] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17)
[18:56:55] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17) (Client Quit)
[19:01:17] *** Joins: ssiyad (~ssiyad@user/ssiyad)
[19:09:14] *** Quits: ssiyad (~ssiyad@user/ssiyad) (Quit: WeeChat 3.4)
[20:11:33] *** Joins: noeontheend (~noeonthee@12.205.205.130)
[20:46:12] *** Joins: cyraxjoe (~joe@2806:109f:13:c0f8:201:2eff:fe80:7df4)
[20:46:22] *** Quits: MightyJoe (~joe@2806:109f:13:9ec9:201:2eff:fe80:7df4) (Ping timeout: 268 seconds)
[20:54:11] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 256 seconds)
[20:55:05] *** Quits: noeontheend (~noeonthee@12.205.205.130) (Ping timeout: 256 seconds)
[21:53:32] *** Quits: cyraxjoe (~joe@2806:109f:13:c0f8:201:2eff:fe80:7df4) (Ping timeout: 252 seconds)
[22:00:41] <FromDiscord> <tandy> when is the next nim devel release?
[22:01:38] <FromDiscord> <tandy> i want to know when i can use my pull request https://github.com/nim-lang/Nim/pull/19473
[22:08:15] <FromDiscord> <mratsim> In reply to @tandy "when is the next": nightlies are every night
[22:08:43] <FromDiscord> <mratsim> requires Nim 1.7 in Nimble
[22:23:01] *** Joins: rightbrace (~joe@cpe30b7d4bd5cd3-cm30b7d4bd5cd0.cpe.net.fido.ca)
[22:23:28] *** Joins: cyraxjoe (~joe@189.153.174.2)
[22:27:34] *** Quits: rightbrace (~joe@cpe30b7d4bd5cd3-cm30b7d4bd5cd0.cpe.net.fido.ca) (Quit: Lost terminal)
[22:35:11] <FromDiscord> <Josef> I have a pretty basic question, I would be very appreciative if anyone could help. I'm using a wrapper for a C library, and I notice that I cannot `deepCopy` wrapped structs (the object just gets a zero value). I couldn't find anything relevant in the manual or elsewhere online. What is the reason / what am I doing wrong?
[22:36:31] *** Quits: cyraxjoe (~joe@189.153.174.2) (Ping timeout: 256 seconds)
[22:36:40] *** Joins: MightyJoe (~joe@2806:109f:13:aded:201:2eff:fe80:7df4)
[22:44:45] *** Quits: fowl (~fowlmouth@user/fowl) (Read error: Connection reset by peer)
[22:45:22] *** Joins: fowl (~fowlmouth@user/fowl)
[22:49:01] *** Quits: MightyJoe (~joe@2806:109f:13:aded:201:2eff:fe80:7df4) (Ping timeout: 240 seconds)
[22:51:48] *** Joins: cyraxjoe (~joe@2806:109f:13:8ca1:201:2eff:fe80:7df4)
[22:56:23] *** Joins: vicfred (~vicfred@user/vicfred)
[22:58:18] *** Quits: cyraxjoe (~joe@2806:109f:13:8ca1:201:2eff:fe80:7df4) (Ping timeout: 260 seconds)
[23:15:32] <NimEventer> New thread by Tcheran: Zlib.h: No such file or directory error on Windows, see https://forum.nim-lang.org/t/8861
[23:29:39] *** Joins: cyraxjoe (~joe@189.153.237.58)
[23:36:14] *** Joins: tiorock (~rc@192.12.114.193)
[23:36:14] *** Quits: tiorock (~rc@192.12.114.193) (Changing host)
[23:36:14] *** Joins: tiorock (~rc@user/rockcavera)
[23:36:14] *** Quits: rockcavera (~rc@user/rockcavera) (Killed (tantalum.libera.chat (Nickname regained by services)))
[23:36:14] *** tiorock is now known as rockcavera
[23:38:51] *** Quits: cyraxjoe (~joe@189.153.237.58) (Ping timeout: 256 seconds)
[23:46:51] *** Parts: fvs (freevryhei@2600:3c00::f03c:92ff:fe55:ff21) (WeeChat 3.4)
[23:48:19] *** Joins: ssiyad (~ssiyad@user/ssiyad)
[23:54:01] <FromDiscord> <pmunch> @Josef\: that sounds very strange. Do you have any code you can share?
