[00:02:36] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[00:04:07] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[00:07:44] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[00:09:25] *** Joins: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com)
[00:13:32] *** Quits: jbauer_ (~jbauer@146.71.11.98) (Read error: Connection reset by peer)
[00:13:46] <alzgh> hello, is there a de facto standard datastructures package for Go? For anything other than array/slice/struct/map. I found `container` in the Standard LIbrary with double linked list, circular list and heap. I'm looking for more. Like a sorted dictionary (implemented as a balanced tree probably), etc.
[00:15:34] <b0nn> There's not
[00:15:52] *** Joins: jbauer (~jbauer@146.71.11.98)
[00:16:00] <b0nn> When generics come out you can expect 3rd party libs to flourish in that direction
[00:17:23] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[00:18:16] *** Joins: jbauer_ (~jbauer@146.71.11.98)
[00:19:49] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Quit: g'bi)
[00:21:07] *** Quits: jbauer (~jbauer@146.71.11.98) (Ping timeout: 256 seconds)
[00:25:31] *** Quits: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[00:27:26] <alzgh> I wish after releasing generics, Golang would come up with a general purpose standard data structures and algorithms library.
[00:27:58] <b0nn> One of the things that attracts me to Go is the lack of magic
[00:28:44] <b0nn> I've written balanced trees in Go, for an academic exercise, but in production I would do other things
[00:28:46] <alzgh> this isn't magic. standard data structures with clearly defined run/space complexity and implementation
[00:28:47] <ikke> alzgh: they mentioned they will at least sit it out for a bit and see how generics end up being used in practice before adjusting the standard library
[00:29:13] *** Joins: edrocks (~Ed@user/edrocks)
[00:29:21] <alzgh> that makes a lot of sense and is the right way to go, IMHO ikke
[00:29:32] <b0nn> like for your "sorted map" I'd look at a dual structure, storing data in a map, and a slice, using the slice to determine sorting, and the map for fast lookup
[00:29:36] *** Quits: tyson2 (~user@bras-base-toroon0628w-grc-60-64-228-236-58.dsl.bell.ca) (Remote host closed the connection)
[00:31:32] <alzgh> this won't have the clean logarithmic time complexity of a tree map for insertion/deletion/update/lookup operations, I think b0nn
[00:31:39] <b0nn> 07:58 < alzgh> this isn't magic. standard data structures with clearly defined run/space <<-- my experience with Java and Python is such that they do become magic - people use the structures with little to no understanding of what's really happening
[00:32:25] <alzgh> yeah, b0nn I agree that they are much misused
[00:33:44] <alzgh> responsibility and convenience are trade offs. How much do you want to **know** and take care of/be responsible for and how much are you willing to cope with its inconveniences
[00:34:05] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[00:34:23] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Remote host closed the connection)
[00:34:31] <b0nn> also, a tree is normally implemented with the nodes all in contiguous memory (or on disk) so, the structure is really logical, it's meta data stored in each node
[00:35:04] <b0nn> otherwise you'd be moving data around, which is expensive
[00:35:56] *** Joins: oxum (~oxum@223.226.85.115)
[00:36:03] <b0nn> and I wouldn't know that - except that, like I said, I went and wrote several classic structures
[00:39:41] <b0nn> although, as I say that, I'm thinking Databases have to move data about, because they're optimised for disk io (that is they have log50, or log100 depth in their trees instead of log2
[00:39:45] *** Joins: raktajino (~raktajino@callisto.raktajino.club)
[00:39:51] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Ping timeout: 276 seconds)
[00:40:49] *** Quits: oxum (~oxum@223.226.85.115) (Ping timeout: 268 seconds)
[00:41:19] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[00:41:57] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e5dd-ed19-5085-fd41.res6.spectrum.com)
[00:43:54] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 268 seconds)
[00:46:27] <alzgh> I hope Go with Generics doesn't become like Java. I used Java very little some time back and the boxing/unboxing experience and int vs Int or something like that and the .equals was really bad. didn't like it at all.
[00:47:53] *** Parts: raktajino (~raktajino@callisto.raktajino.club) (WeeChat 3.2)
[00:50:52] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:c95:5e78:2621:2637)
[00:53:44] *** Joins: rcernin_ (~rcernin@124.190.139.235)
[00:54:23] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:c95:5e78:2621:2637) (Read error: Connection reset by peer)
[00:54:23] *** Quits: freakazoid343 (~matt@2603-9000-cf0f-80e3-9c74-c5a2-aa72-3fdc.inf6.spectrum.com) (Ping timeout: 246 seconds)
[00:55:09] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:c95:5e78:2621:2637)
[00:56:29] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:459a:8b95:ccbb:dd5d) (Ping timeout: 246 seconds)
[00:59:18] <A_Dragon> func GenericFunc[T any] (someArg T) T {}
[00:59:30] <A_Dragon> yeah no we dont have boxing
[00:59:36] <A_Dragon> boxing in go is throwing stuff into interface{}
[00:59:49] <A_Dragon> which is how you currently do "generic" things
[01:01:34] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[01:10:46] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f6e3:7400:d4e2:b355:67fe:933c)
[01:13:30] *** Quits: zer0bitz (~zer0bitz@2001:2003:f6e3:7400:9c57:4715:1ac5:a700) (Ping timeout: 268 seconds)
[01:18:32] *** Quits: internut (~internut@2601:280:4e00:7b70:adee:5ff0:3560:6149) (Ping timeout: 240 seconds)
[01:20:57] *** Joins: internut (~internut@2601:280:4e00:7b70:342b:b8dc:44a1:5edf)
[01:22:35] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[01:25:07] *** Joins: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de)
[01:26:59] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[01:29:30] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[01:31:16] *** Quits: be3uykpy (~be3uykpy@2a00:a040:19a:b060:452e:670e:9f74:56c7) (Quit: Leaving)
[01:38:55] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e5dd-ed19-5085-fd41.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[01:39:19] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[01:39:51] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f6e3:7400:d4e2:b355:67fe:933c) (Read error: Connection reset by peer)
[01:41:24] *** Joins: fikran (~fikran@user/fikran)
[01:45:49] *** Quits: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[01:48:57] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 256 seconds)
[01:55:48] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e5dd-ed19-5085-fd41.res6.spectrum.com)
[02:03:05] *** Quits: frebib (~frebibcha@nerdhouse.io) (Remote host closed the connection)
[02:03:13] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e5dd-ed19-5085-fd41.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[02:03:45] *** Joins: frebib (~frebibcha@nerdhouse.io)
[02:04:23] *** Quits: edrocks (~Ed@user/edrocks) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:06:07] *** Quits: g2anj_ (~v@58.227.244.56) (Ping timeout: 265 seconds)
[02:16:36] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:c95:5e78:2621:2637)
[02:19:37] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:c95:5e78:2621:2637) (Ping timeout: 250 seconds)
[02:23:05] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[02:28:58] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 260 seconds)
[02:33:16] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e5dd-ed19-5085-fd41.res6.spectrum.com)
[02:45:28] *** Quits: _xor (~xor@72.49.199.147) (Quit: WeeChat 3.3)
[02:46:37] *** Quits: sudden (~cat@user/sudden) (Ping timeout: 268 seconds)
[02:47:47] *** Quits: misuto (~misuto@h-155-4-73-21.A192.priv.bahnhof.se) (Ping timeout: 264 seconds)
[02:48:55] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[02:52:13] *** Joins: misuto (~misuto@h-155-4-73-21.A192.priv.bahnhof.se)
[02:53:25] *** Joins: sudden (~cat@h-98-128-128-173.A351.priv.bahnhof.se)
[02:53:50] *** sudden is now known as Guest6295
[02:57:04] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[02:59:13] *** Quits: Guest6295 (~cat@h-98-128-128-173.A351.priv.bahnhof.se) (Ping timeout: 256 seconds)
[02:59:34] *** Quits: misuto (~misuto@h-155-4-73-21.A192.priv.bahnhof.se) (Ping timeout: 268 seconds)
[03:02:33] *** Joins: Atlas (~atlas@user/atlas)
[03:03:07] *** Joins: misuto (~misuto@h-155-4-73-21.A192.priv.bahnhof.se)
[03:06:11] *** Joins: sudden (~cat@h-98-128-128-173.A351.priv.bahnhof.se)
[03:06:36] *** sudden is now known as Guest4609
[03:07:11] *** Quits: Guest4609 (~cat@h-98-128-128-173.A351.priv.bahnhof.se) (Changing host)
[03:07:11] *** Joins: Guest4609 (~cat@user/sudden)
[03:07:35] *** Quits: Atlas (~atlas@user/atlas) (Ping timeout: 264 seconds)
[03:11:34] *** Joins: kupi (uid212005@hampstead.irccloud.com)
[03:12:23] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e5dd-ed19-5085-fd41.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[03:12:59] *** Quits: misuto (~misuto@h-155-4-73-21.A192.priv.bahnhof.se) (Ping timeout: 264 seconds)
[03:15:47] *** Joins: vptr (~vptr@user/vptr)
[03:18:14] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[03:20:42] *** Quits: mort (~mort@188.166.114.29) (Quit: Ping timeout (120 seconds))
[03:21:07] *** Joins: mort (~mort@188.166.114.29)
[03:21:16] *** Quits: Freman (~Freman@185.83.217.144) (Quit: ZNC - https://znc.in)
[03:21:34] *** Joins: Freman (~Freman@flatus.fremnet.net)
[03:21:40] *** Quits: naos (~naos@user/naos) (Quit: -)
[03:21:41] *** Quits: lithammer (~lithammer@2a02:2770::21a:4aff:fe88:c18d) (Quit: ZNC - http://znc.in)
[03:21:51] *** Joins: lithammer (~lithammer@arch-vps.cloud.tilaa.com)
[03:25:54] *** Joins: naos (~naos@user/naos)
[03:29:15] *** Quits: normen (~normen@p54b35890.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[03:31:14] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[03:32:12] *** Quits: jbauer_ (~jbauer@146.71.11.98) (Quit: Quitting)
[03:33:20] *** Joins: brainfreeze (~brainfree@2a03:1b20:4:f011::20d)
[03:40:54] *** Quits: internut (~internut@2601:280:4e00:7b70:342b:b8dc:44a1:5edf) (Remote host closed the connection)
[03:49:05] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[03:50:44] *** Joins: fikran (~fikran@user/fikran)
[03:53:29] *** Joins: rek2 (~ReK2@47.62.9.10)
[03:55:06] *** Joins: normen (~normen@p200300d71739c0009543f8c757bca72e.dip0.t-ipconnect.de)
[04:09:02] *** Quits: Tv_ (uid62079@user/tv/x-3144562) (Quit: Connection closed for inactivity)
[04:09:33] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[04:14:27] *** Quits: et (~et@user/et) (Ping timeout: 250 seconds)
[04:15:59] *** Joins: internut (~internut@2601:280:4e00:7b70:342b:b8dc:44a1:5edf)
[04:21:23] *** Quits: internut (~internut@2601:280:4e00:7b70:342b:b8dc:44a1:5edf) (Ping timeout: 250 seconds)
[04:28:59] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[04:29:53] *** Joins: Fault (~Fault@152.70.112.168)
[04:30:25] *** Joins: _xor (~xor@72.49.199.147)
[04:37:14] *** Quits: mike18 (~geri@217-149-160-150.nat.highway.telekom.at) (Remote host closed the connection)
[04:40:12] *** Joins: jezebel (jezebel@user/jezebel)
[04:41:23] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[04:42:10] *** Joins: Fault (~Fault@152.70.112.168)
[04:43:25] *** Quits: jezebel (jezebel@user/jezebel) (Quit: Reconnecting)
[04:43:33] *** Joins: jezebel (jezebel@nxdoma.in)
[04:43:57] *** jezebel is now known as Guest5086
[04:46:02] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:46:47] <b0nn> Not Go related, but I just got a 600 error from an API - the request was malformed, but instead of using 4** they decided - no let's make up our own category to deliver the message
[04:46:53] *** Joins: rbn (~rbn@user/rbn)
[04:47:37] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:48:32] <leitz> b0nn, that's encouraging...at least there's one person with less skill than me!  :)
[04:53:35] *** Joins: internut (~internut@2601:280:4e00:7b70:342b:b8dc:44a1:5edf)
[04:55:14] *** Quits: internut (~internut@2601:280:4e00:7b70:342b:b8dc:44a1:5edf) (Remote host closed the connection)
[05:03:58] *** Joins: Tv_ (uid62079@user/tv/x-3144562)
[05:05:28] <b0nn> I've heard a few stories of people trying to invent new things to cater for... what the existing RFC already does (another example is some bright individual trying to invent new HTTP verbs)
[05:14:47] *** Quits: normen (~normen@p200300d71739c0009543f8c757bca72e.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[05:17:04] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:26:17] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[05:26:54] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:28:22] *** Joins: internut (~internut@2601:280:4e00:7b70:342b:b8dc:44a1:5edf)
[05:29:17] *** Joins: normen (~normen@p200300d71739c0009543f8c757bca72e.dip0.t-ipconnect.de)
[05:29:34] *** Joins: iateadonut (~dan@121.177.17.154)
[05:30:41] *** Parts: iateadonut (~dan@121.177.17.154) ()
[05:30:42] <alzgh> haha
[05:30:42] *** Joins: iateadonut (~dan@121.177.17.154)
[05:31:06] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[05:31:09] *** Quits: rcernin_ (~rcernin@124.190.139.235) (Ping timeout: 250 seconds)
[05:33:15] *** Quits: vptr (~vptr@user/vptr) (Quit: leaving)
[05:33:59] *** Quits: internut (~internut@2601:280:4e00:7b70:342b:b8dc:44a1:5edf) (Ping timeout: 264 seconds)
[05:36:42] *** Joins: Atlas (~atlas@user/atlas)
[05:36:56] *** Quits: Atlas (~atlas@user/atlas) (Client Quit)
[05:41:42] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Ping timeout: 260 seconds)
[05:42:17] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[05:44:08] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[05:45:03] *** Joins: Fault (~Fault@152.70.112.168)
[05:50:00] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[05:52:44] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[05:53:29] *** Joins: Fault (~Fault@152.70.112.168)
[05:58:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[06:00:05] *** Joins: fikran (~fikran@user/fikran)
[06:04:24] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[06:09:55] *** Joins: jackneilll (~jackneill@86FF47D8.dsl.pool.telekom.hu)
[06:10:01] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:ec1a:72f1:2b70:c4b0)
[06:10:07] *** Quits: jackneill (~jackneill@20014C4E18012400ECCD41057EEF070F.dsl.pool.telekom.hu) (Ping timeout: 268 seconds)
[06:11:08] *** Quits: kiril (~kiril@85.91.153.163) (Quit: ZNC - https://znc.in)
[06:11:49] *** Joins: kiril (~kiril@85.91.153.163)
[06:21:53] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Remote host closed the connection)
[06:22:31] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[06:24:47] *** Quits: andlabs (~andlabs@2a00:79e1:abc:1a12:68ec:6fcb:226e:751) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:31:06] *** Quits: kupi (uid212005@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[06:32:56] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:ec1a:72f1:2b70:c4b0) (Ping timeout: 268 seconds)
[06:38:22] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[06:39:40] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:c95:5e78:2621:2637)
[06:42:02] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:c95:5e78:2621:2637) (Ping timeout: 240 seconds)
[06:43:07] *** Joins: internut (~internut@98.38.226.136)
[06:43:26] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Remote host closed the connection)
[06:43:59] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[06:44:48] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Remote host closed the connection)
[06:45:22] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[06:46:26] *** Joins: frost (~frost@user/frost)
[06:47:58] *** Quits: internut (~internut@98.38.226.136) (Ping timeout: 260 seconds)
[06:52:00] *** Joins: rcernin (~rcernin@124.190.139.235)
[06:57:19] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Remote host closed the connection)
[06:57:51] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[06:59:53] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[07:00:14] *** Joins: alzgh (~alzgh@user/alzgh)
[07:02:27] *** Joins: andlabs (~andlabs@2604:ca00:179:2cc0:5d03:20ad:8b0b:a07d)
[07:03:25] *** Quits: Wouter0100 (~Wouter010@entry.nbg.netvos.nl) (Read error: Connection reset by peer)
[07:03:36] *** Joins: Wouter0100 (~Wouter010@entry.nbg.netvos.nl)
[07:06:13] *** Joins: oxum (~oxum@136.185.180.166)
[07:11:11] *** Quits: oxum (~oxum@136.185.180.166) (Ping timeout: 264 seconds)
[07:13:26] *** Quits: andlabs (~andlabs@2604:ca00:179:2cc0:5d03:20ad:8b0b:a07d) (Ping timeout: 245 seconds)
[07:16:59] *** Joins: andlabs (~andlabs@2604:ca00:170:2735:9c5f:311b:ceea:1022)
[07:23:17] *** Quits: rcernin (~rcernin@124.190.139.235) (Ping timeout: 256 seconds)
[07:29:01] *** Joins: rcernin (~rcernin@124.190.139.235)
[07:34:22] *** Joins: andlabs_ (~andlabs@2604:ca00:170:2735:f193:8cdc:51ff:98be)
[07:35:06] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[07:35:31] *** Quits: normen (~normen@p200300d71739c0009543f8c757bca72e.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[07:35:57] *** Joins: Fault (~Fault@152.70.112.168)
[07:37:11] *** Quits: andlabs (~andlabs@2604:ca00:170:2735:9c5f:311b:ceea:1022) (Ping timeout: 245 seconds)
[07:38:52] *** Quits: fentanyl (~ryan@user/sapi01) (Quit: leaving)
[07:39:32] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 268 seconds)
[07:43:11] *** Joins: nightBulb_ (~nightBulb@157.36.71.191)
[07:43:19] *** nightBulb_ is now known as nightBulb
[07:47:56] *** Quits: nightBulb (~nightBulb@157.36.71.191) (Read error: Connection reset by peer)
[07:48:12] *** Joins: nightBulb (~nightBulb@157.36.71.191)
[07:48:21] *** Quits: nightBulb (~nightBulb@157.36.71.191) (Read error: Connection reset by peer)
[07:48:41] *** Joins: nightBulb (~nightBulb@157.36.71.191)
[07:49:06] *** Quits: nightBulb (~nightBulb@157.36.71.191) (Read error: Connection reset by peer)
[07:49:31] *** Joins: nightBulb (~nightBulb@157.36.71.191)
[07:51:07] *** Joins: noarb (~noarb@user/noarb)
[07:53:39] *** Joins: oxum (~oxum@122.181.198.11)
[07:56:17] *** Quits: nightBulb (~nightBulb@157.36.71.191) (Read error: Connection reset by peer)
[07:56:23] *** Joins: nightBulb_ (~nightBulb@157.36.71.191)
[07:56:58] *** Joins: normen (~normen@p54b35890.dip0.t-ipconnect.de)
[07:57:28] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:57:34] *** Quits: nightBulb_ (~nightBulb@157.36.71.191) (Remote host closed the connection)
[07:58:02] *** Quits: oxum (~oxum@122.181.198.11) (Ping timeout: 240 seconds)
[08:01:31] *** Quits: normen (~normen@p54b35890.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[08:01:39] *** Joins: nightBulb (~nightBulb@157.36.71.191)
[08:01:57] *** Quits: sordidwhiskey[m] (~sordidwhi@2001:470:69fc:105::c94e) (Quit: Client limit exceeded: 20000)
[08:02:04] *** Quits: nightBulb (~nightBulb@157.36.71.191) (Read error: Connection reset by peer)
[08:03:02] *** Joins: nightBulb (~nightBulb@157.36.71.191)
[08:03:08] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Quit: 404)
[08:04:01] *** Joins: andlabs (~andlabs@2604:ca00:170:2735:cd6d:633a:89fb:3c9c)
[08:05:29] *** Quits: andlabs (~andlabs@2604:ca00:170:2735:cd6d:633a:89fb:3c9c) (Client Quit)
[08:06:32] *** Joins: snuck (~sneak@datavi.be)
[08:06:41] *** Joins: losinggeneration (~quassel@64.225.54.254)
[08:06:49] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[08:07:11] *** Quits: andlabs_ (~andlabs@2604:ca00:170:2735:f193:8cdc:51ff:98be) (Ping timeout: 245 seconds)
[08:07:54] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[08:07:59] *** Quits: TcM1911 (~tcm1911@2001:470:69fc:105::3649) (Quit: Client limit exceeded: 20000)
[08:08:35] *** Joins: svip_ (~svip@static.227.17.9.176.clients.your-server.de)
[08:09:26] *** Joins: fikran (~fikran@user/fikran)
[08:09:49] *** Quits: nightBulb (~nightBulb@157.36.71.191) (Read error: Connection reset by peer)
[08:09:54] *** Joins: nightBulb_ (~nightBulb@157.36.71.191)
[08:10:47] *** Quits: nightBulb_ (~nightBulb@157.36.71.191) (Client Quit)
[08:13:20] *** Joins: Dr_Jazz (~jazz@stolen.plutonium.dk)
[08:13:51] *** Quits: pjs (~pjs@user/pjs) (*.net *.split)
[08:13:51] *** Quits: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald) (*.net *.split)
[08:13:51] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (*.net *.split)
[08:13:51] *** Quits: Led_Zeppelin2 (~user@cpe-68-172-241-89.nj.res.rr.com) (*.net *.split)
[08:13:51] *** Quits: Xizor (~Xizor@151.ip-51-68-121.eu) (*.net *.split)
[08:13:51] *** Quits: sneak (~sneak@datavi.be) (*.net *.split)
[08:13:51] *** Quits: kieren (~kieren@ec2-54-247-60-196.eu-west-1.compute.amazonaws.com) (*.net *.split)
[08:13:51] *** Quits: svip (~svip@user/svip) (*.net *.split)
[08:13:51] *** Quits: kipukun (~kipukun@207.244.104.227) (*.net *.split)
[08:13:51] *** Quits: Jazzah (~jazz@user/jazzah) (*.net *.split)
[08:13:51] *** Quits: harley_l (~quassel@64.225.54.254) (*.net *.split)
[08:13:51] *** Quits: jaguar (~jag@li669-242.members.linode.com) (*.net *.split)
[08:13:51] *** Quits: dkeohane2 (~dkeohane@ec2-18-189-29-140.us-east-2.compute.amazonaws.com) (*.net *.split)
[08:13:51] *** Quits: thinkofher (~thinkofhe@user/thinkofher) (*.net *.split)
[08:13:51] *** Quits: pztrn (~pztrn@user/pztrn) (*.net *.split)
[08:15:30] *** Joins: normen (~normen@p200300d71739c0009543f8c757bca72e.dip0.t-ipconnect.de)
[08:18:25] *** Joins: pjs (~pjs@user/pjs)
[08:18:25] *** Joins: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald)
[08:18:25] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[08:18:25] *** Joins: Xizor (~Xizor@151.ip-51-68-121.eu)
[08:18:25] *** Joins: kieren (~kieren@ec2-54-247-60-196.eu-west-1.compute.amazonaws.com)
[08:18:25] *** Joins: kipukun (~kipukun@207.244.104.227)
[08:18:25] *** Joins: jaguar (~jag@li669-242.members.linode.com)
[08:18:25] *** Joins: dkeohane2 (~dkeohane@ec2-18-189-29-140.us-east-2.compute.amazonaws.com)
[08:18:25] *** Joins: thinkofher (~thinkofhe@user/thinkofher)
[08:18:25] *** Joins: pztrn (~pztrn@user/pztrn)
[08:19:30] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[08:20:27] *** Joins: Fault (~Fault@152.70.112.168)
[08:20:35] *** Joins: Led_Zeppelin2 (~user@cpe-68-172-241-89.nj.res.rr.com)
[08:28:39] *** Quits: mud (~mud@user/kadoban) (Quit: quit)
[08:30:11] *** Joins: andlabs (~andlabs@70.107.171.168)
[08:30:43] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 256 seconds)
[08:34:41] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Quit: A lol made me boom.)
[08:37:35] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[08:45:43] *** Joins: jpw (~jpw@user/jpw)
[08:50:25] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Remote host closed the connection)
[08:51:07] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[08:52:25] *** Joins: oxum (~oxum@122.181.198.11)
[08:52:54] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[08:54:50] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[08:57:14] *** Quits: oxum (~oxum@122.181.198.11) (Ping timeout: 260 seconds)
[09:03:23] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[09:03:40] *** Quits: Tv_ (uid62079@user/tv/x-3144562) (Quit: Connection closed for inactivity)
[09:04:13] *** Joins: Fault (~Fault@152.70.112.168)
[09:06:39] *** Quits: GJdan (~quassel@107-190-25-70.cpe.teksavvy.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[09:08:36] *** Joins: GJdan (~quassel@107-190-25-70.cpe.teksavvy.com)
[09:09:18] *** Joins: oxum (~oxum@122.171.221.237)
[09:13:13] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 256 seconds)
[09:14:30] *** Quits: oxum (~oxum@122.171.221.237) (Ping timeout: 268 seconds)
[09:14:32] *** Joins: analoq (~yashi@user/dies)
[09:21:02] *** Quits: rcernin (~rcernin@124.190.139.235) (Ping timeout: 260 seconds)
[09:23:25] *** Joins: rcernin (~rcernin@124.190.139.235)
[09:24:35] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[09:24:55] *** Joins: alzgh (~alzgh@user/alzgh)
[09:27:36] *** Quits: normen (~normen@p200300d71739c0009543f8c757bca72e.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[09:28:24] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[09:30:49] *** Joins: Fault (~Fault@150.230.39.7)
[09:31:25] *** Joins: solitonmedic (~c0a80069@cpe-68-174-133-242.nyc.res.rr.com)
[09:36:03] *** Quits: solitonmedic (~c0a80069@cpe-68-174-133-242.nyc.res.rr.com) (Changing host)
[09:36:03] *** Joins: solitonmedic (~c0a80069@user/solitonmedic)
[09:36:33] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:36:54] *** Quits: rcernin (~rcernin@124.190.139.235) (Ping timeout: 260 seconds)
[09:37:32] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[09:40:24] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[09:55:37] *** Joins: normen (~normen@p200300d71739c0009543f8c757bca72e.dip0.t-ipconnect.de)
[10:01:07] *** Quits: normen (~normen@p200300d71739c0009543f8c757bca72e.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[10:02:13] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[10:02:33] *** Joins: mickey8 (~user@user/mickey)
[10:03:52] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:3456:a403:543c:f1a4)
[10:04:59] *** Quits: mosen (~mosen@159-196-125-15.9fc47d.syd.static.aussiebb.net) (Quit: Textual IRC Client: www.textualapp.com)
[10:14:17] *** Joins: normen (~normen@p200300d71739c0009543f8c757bca72e.dip0.t-ipconnect.de)
[10:16:41] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[10:18:47] *** Joins: fikran (~fikran@user/fikran)
[10:22:57] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:3456:a403:543c:f1a4) (Ping timeout: 268 seconds)
[10:31:00] *** Quits: wim (~wim@42.be) (Ping timeout: 260 seconds)
[10:33:34] *** Parts: mikey__ (~mikey__@user/mikey/x-6463285) (WeeChat 3.3)
[10:34:59] *** Joins: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net)
[10:35:28] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Client Quit)
[10:39:24] *** Quits: alzgh (~alzgh@user/alzgh) (Ping timeout: 256 seconds)
[10:39:57] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:44:49] *** Joins: wim (~wim@42.be)
[10:45:03] *** Quits: brainfreeze (~brainfree@2a03:1b20:4:f011::20d) (Remote host closed the connection)
[10:46:04] *** Joins: alzgh (alzgh@user/alzgh)
[10:46:40] *** Quits: cation (cation@user/cation) (Remote host closed the connection)
[10:49:56] *** Joins: cation (cation@user/cation)
[10:53:29] *** Joins: Leon_ (~Leon@132.sub-174-198-211.myvzw.com)
[10:53:53] *** Leon_ is now known as Guest5524
[10:56:39] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[10:56:55] *** Quits: leonthemisfit (~Leon@user/leonthemisfit) (Ping timeout: 256 seconds)
[11:05:10] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[11:10:12] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[11:13:36] *** Joins: kupi (uid212005@hampstead.irccloud.com)
[11:18:21] *** Joins: arinov (~arinov@213.194.126.155)
[11:20:44] *** Joins: internut (~internut@2601:280:4e00:7b70:342b:b8dc:44a1:5edf)
[11:21:29] *** Quits: internut (~internut@2601:280:4e00:7b70:342b:b8dc:44a1:5edf) (Remote host closed the connection)
[11:34:41] *** Quits: normen (~normen@p200300d71739c0009543f8c757bca72e.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[11:37:08] *** Joins: saschagrunert (~saschagru@46.128.124.46)
[11:40:08] *** Quits: idstam (~idstam@2.70.144.43.mobile.tre.se) (Quit: WeeChat 2.8)
[11:53:18] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:3456:a403:543c:f1a4)
[11:55:04] *** Joins: rcernin_ (~rcernin@124.190.139.235)
[11:55:36] *** Parts: svip_ (~svip@static.227.17.9.176.clients.your-server.de) ()
[11:55:38] *** Joins: svip_ (~svip@static.227.17.9.176.clients.your-server.de)
[11:55:42] *** Parts: svip_ (~svip@static.227.17.9.176.clients.your-server.de) ()
[11:55:56] *** Joins: internut (~internut@2601:280:4e00:7b70:342b:b8dc:44a1:5edf)
[11:58:01] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:3456:a403:543c:f1a4) (Ping timeout: 245 seconds)
[12:02:11] *** Quits: internut (~internut@2601:280:4e00:7b70:342b:b8dc:44a1:5edf) (Ping timeout: 246 seconds)
[12:03:14] *** Joins: mrig (~AdiIRC@user/mrig)
[12:03:39] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:07:33] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[12:10:09] *** Joins: idstam (~idstam@2.70.144.43.mobile.tre.se)
[12:18:14] *** Joins: dhruvasagar (~dhruvasag@49.207.218.36)
[12:22:51] <since_> b0nn: i always need to think about the guy who developed the IRC DCC file sending thing. He chose TCP, but every n bytes he chose to send a checksum, to make sure the network dropped nothing. :D
[12:23:08] *** Joins: oxum (~oxum@122.171.221.237)
[12:23:16] *** Joins: TcM1911 (~tcm1911@2001:470:69fc:105::3649)
[12:23:28] *** Joins: sordidwhiskey[m] (~sordidwhi@2001:470:69fc:105::c94e)
[12:25:59] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 246 seconds)
[12:26:24] <since_> Ah it was a bit different: "Data is sent to the client in blocks, each of which the client must acknowledge by sending the total number of bytes received in the form of a 32-bit network byte order integer. This slows down connections and is redundant because of TCP."
[12:27:59] *** Quits: oxum (~oxum@122.171.221.237) (Ping timeout: 264 seconds)
[12:28:08] *** Joins: fikran (~fikran@user/fikran)
[12:29:16] <deniska> We briefly considered using 6xx for internal statuses
[12:30:46] <deniska> My team's favorite pastime seems to be deciding which http status to use in a particular situation.
[12:32:49] *** Joins: Atlas (~atlas@user/atlas)
[12:32:55] <zutt> since_: early day DCC involved a ton of buggy stuff in between the users (such as routers doing very strange stuff, shells, bnc's, etc), and many different implementations of the dcc, and probably many other things that broke
[12:33:49] <zutt> nowdays its a given that you trust tcp connections to just work, but back in late 90's, lol nope.. isnd modems breaking, someone receiving a blip from the home phone interrupting connections, whatever the case might have been
[12:33:49] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[12:38:56] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:40:11] *** Joins: gpeskens_ (~gpeskens@62.251.31.165)
[12:40:48] <mort> I 100% don't trust TCP connections, they break all the time, even more now than 15 years ago probably
[12:41:08] <zutt> lol :P yeah I have trust issues as well
[12:41:58] <mort> wouldn't it be neat to have a kind of session layer inbetween the transport and the application layers which would deal with tcp connections breaking and reconnecting
[12:42:14] *** Joins: normen (~normen@p200300d71739c0009543f8c757bca72e.dip0.t-ipconnect.de)
[12:42:56] *** Quits: gpeskens (~gpeskens@2001:985:7aa4:1:21a7:97a6:3ed4:75f9) (Ping timeout: 268 seconds)
[12:44:11] *** Quits: vimal (~vimal@2a02:a210:9600:1600:4fb4:e20f:72bc:9bf8) (Ping timeout: 246 seconds)
[12:44:46] <zutt> i'm sure there are libraries that do this for you
[12:45:26] *** Joins: vimal (~vimal@2a02:a210:9600:1600:4fb4:e20f:72bc:9bf8)
[12:45:27] <mort> well yea, it's just that every application layer protocol has to reinvent these things
[12:45:33] <zutt> but yeah, this is probably one reason why people just do things with... http instead of direct tcp connections.. http is just easier to deal with
[12:46:12] <mort> http's solution is very interesting yeah, by being stateless it doesn't matter if the next request comes over the same tcp socket or a new one and from the same IP address or a new one or any of those things
[12:46:34] <zutt> yep
[12:47:24] *** Joins: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de)
[12:47:42] <zutt> and we now have websockets through http as well, enabling all kinds of live streaming of data for use cases such as voip.. well `HTTP CONNECT` did exist before ws, but not very commonly used
[12:48:05] <mort> websockets introduce the same "persistent unreliable connection" issue though
[12:48:34] <zutt> well.. kinda, yeah
[12:49:04] *** Joins: arinov (~arinov@178.240.135.64)
[12:49:16] *** Joins: ekathva (~ekathva@93-90-58-246.welcomnet.fi)
[12:49:38] <mort> I've written a lot of websocket code, and you have to handle all of those connection issues, you need some kind of ping/pong system to detect timeouts and to keep the connection open through annoying proxies, etc
[12:50:34] <zutt> yeah, i haven't had chance to do much WS stuff in years.. but those are annoying indeed
[12:50:41] <zutt> but hey, at least they work in browsers now :P
[12:50:50] <mort> you could use something like socket.io but ime, socket.io is actually pretty bad at detecting when the connection is broken
[12:51:34] <mort> by "pretty bad" I mean "doesn't detect issues with a 100% reliability and reconnect with a 100% reliability" which causes issues at scale
[12:52:02] *** Quits: cation (cation@user/cation) (Ping timeout: 240 seconds)
[12:55:03] <zutt> lol :P
[12:55:08] * zutt gotta prepare for meetings ->
[12:56:11] *** Quits: karhunkynsi (~karhunkyn@user/karhunkynsi) (Ping timeout: 264 seconds)
[12:56:40] *** Parts: Dr_Jazz (~jazz@stolen.plutonium.dk) ()
[12:57:27] *** Joins: cation (cation@user/cation)
[12:58:29] *** Quits: girafe (~girafe@176-147-142-235.abo.bbox.fr) (Quit: Leaving)
[13:02:44] *** Joins: misuto (~misuto@h-155-4-73-21.A192.priv.bahnhof.se)
[13:10:25] *** Joins: oxum (~oxum@122.171.221.237)
[13:14:23] *** Quits: oxum (~oxum@122.171.221.237) (Remote host closed the connection)
[13:15:15] *** Joins: karhunkynsi (~karhunkyn@user/karhunkynsi)
[13:17:52] *** Quits: Atlas (~atlas@user/atlas) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:28:47] *** Quits: rcernin_ (~rcernin@124.190.139.235) (Ping timeout: 256 seconds)
[13:29:11] <egy> how do you browse documentation offline for non-official packages ?
[13:29:36] <egy> i'd like to have something like Zeal but for user packages/libraries
[13:32:35] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[13:36:12] *** Quits: alzgh (alzgh@user/alzgh) (Ping timeout: 256 seconds)
[13:37:47] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[13:40:54] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[13:42:38] *** Joins: jla (~jordi@64.225.79.195)
[13:42:43] *** Parts: jla (~jordi@64.225.79.195) ()
[13:43:04] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[13:47:27] <sztanpet> go doc
[13:48:28] <sztanpet> go help doc if unsure how to use it
[13:50:56] *** Quits: svedrin (~quassel@tiamat.funzt-halt.net) (Quit: https://quassel-irc.org - Komfortabler Chat. Überall.)
[13:51:19] *** Joins: svedrin (~quassel@tiamat.funzt-halt.net)
[13:53:31] *** Quits: mohan43u (~mohan@user/mohan43u) (Quit: WeeChat 3.2.1)
[13:54:24] <egy> i know go doc. i thought folks here use something else
[13:54:59] <egy> looking at the docs becomes inconvenient especially if you need to GUESS the method name
[13:55:29] <sztanpet> why would you need to GUESS?
[13:55:31] <egy> so ultimately i'd like for something like pkg.go.dev but offline (i'm fine with using a browser)
[13:56:10] <egy> because this new package made breaking changes and my code is broken
[13:56:54] <sztanpet> so not guessing method names with go doc
[13:57:10] <sztanpet> but guessing when trying to fix code?
[13:57:57] *** Joins: girafe (~girafe@176-147-142-235.abo.bbox.fr)
[13:58:15] <egy> i'm not sure i understand you. however in that regard, i have found the tool "godoc" which should suffice for now
[13:59:37] <sztanpet> we were talkin about go doc, you brought up how its inconvenient because you are guessing method names, and its unclear to me why you would need to guess when using go doc
[13:59:51] *** Joins: mosen (~mosen@159-196-125-15.9fc47d.syd.static.aussiebb.net)
[14:01:11] *** Quits: arinov (~arinov@178.240.135.64) (Ping timeout: 246 seconds)
[14:04:40] <egy> i see. so the problem is i do not know what method in the new version of the package replaces the old one, or even where its location is. this forces me to grep for likely method names and/or types. this becomes frustrating a bit so i thought searching the docs through pkg.go.dev would be better
[14:05:13] <egy> even better, it'd be nice if there's an offline version for pkg.go.dev, that's why i asked the question
[14:07:20] <sztanpet> well, its https://github.com/golang/pkgsite here, not sure if its "offline capable"
[14:11:29] *** Quits: nmollerup (~nmollerup@customer-212-237-103-18.ip4.gigabit.dk) (Remote host closed the connection)
[14:11:48] *** Joins: nmollerup (~nmollerup@customer-2a00-7660-1612-0168-cfa8-be86-5a22-ee27.ip6.gigabit.dk)
[14:12:03] <egy> thanks! looking at it now
[14:23:10] *** Quits: mei3 (~mei@user/mei) (Read error: Connection reset by peer)
[14:23:23] *** Quits: kupi (uid212005@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[14:23:33] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[14:27:04] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[14:27:05] *** Joins: jinie (~jimmy@188.114.173.37)
[14:27:40] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[14:31:57] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Ping timeout: 250 seconds)
[14:35:32] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[14:35:57] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[14:36:26] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[14:36:59] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:c12f:14b9:62d8:87a4)
[14:37:29] *** Joins: fikran (~fikran@user/fikran)
[14:40:10] *** Joins: internut (~internut@2601:280:4e00:7b70:342b:b8dc:44a1:5edf)
[14:43:53] *** Quits: jinie (~jimmy@188.114.173.37) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:45:23] *** Quits: internut (~internut@2601:280:4e00:7b70:342b:b8dc:44a1:5edf) (Ping timeout: 264 seconds)
[14:47:59] *** Joins: cation21 (cation@user/cation)
[14:48:47] *** Quits: cation (cation@user/cation) (Ping timeout: 246 seconds)
[14:50:23] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[14:51:14] *** cation21 is now known as cation
[14:51:23] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:c12f:14b9:62d8:87a4) (Ping timeout: 264 seconds)
[14:56:16] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[14:57:20] *** Quits: faceonkeyboard (~faceonkey@anquietas.harting.hosting) (Remote host closed the connection)
[14:57:41] *** Joins: faceonkeyboard (~faceonkey@anquietas.harting.hosting)
[15:06:18] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:06:38] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[15:08:25] *** Joins: jinie (~jimmy@188.114.173.37)
[15:08:55] *** Quits: jinie (~jimmy@188.114.173.37) (Client Quit)
[15:38:05] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[15:40:34] *** Quits: freswa (~freswa@2001:470:69fc:105::c1ec) (Quit: Bridge terminating on SIGTERM)
[15:40:35] *** Quits: mambang[m] (~mambang@user/mambang) (Quit: Bridge terminating on SIGTERM)
[15:40:35] *** Quits: dung[m] (~dungbrocc@2001:470:69fc:105::d25b) (Quit: Bridge terminating on SIGTERM)
[15:40:35] *** Quits: fugkco (~fugkcomat@2001:470:69fc:105::c70d) (Quit: Bridge terminating on SIGTERM)
[15:40:37] *** Quits: M1000mh[theythem (~M1000mhmo@2001:470:69fc:105::4103) (Quit: Bridge terminating on SIGTERM)
[15:40:37] *** Quits: bat[m] (~batdice-t@2001:470:69fc:105::19b8) (Quit: Bridge terminating on SIGTERM)
[15:40:37] *** Quits: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4) (Quit: Bridge terminating on SIGTERM)
[15:40:37] *** Quits: dan01[m] (~dan01@2001:470:69fc:105::1:2640) (Quit: Bridge terminating on SIGTERM)
[15:40:38] *** Quits: AshLeece[m] (~ashleecei@2001:470:69fc:105::c987) (Quit: Bridge terminating on SIGTERM)
[15:40:38] *** Quits: pulsepoint433[m] (~pulsepoin@2001:470:69fc:105::1:1f25) (Quit: Bridge terminating on SIGTERM)
[15:40:38] *** Quits: gio[m] (~giolekvam@2001:470:69fc:105::1:16a) (Quit: Bridge terminating on SIGTERM)
[15:40:38] *** Quits: jzacsh[m] (~jzacshm]@2001:470:69fc:105::462) (Quit: Bridge terminating on SIGTERM)
[15:40:38] *** Quits: itsjoints (~itsjoints@2001:470:69fc:105::1:29f4) (Quit: Bridge terminating on SIGTERM)
[15:40:40] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Quit: Bridge terminating on SIGTERM)
[15:40:40] *** Quits: petoem (~petoem@user/petoem) (Quit: Bridge terminating on SIGTERM)
[15:40:41] *** Quits: psydroid (~psydroid@user/psydroid) (Quit: Bridge terminating on SIGTERM)
[15:40:41] *** Quits: Endow[m] (~endowmatr@2001:470:69fc:105::1:21eb) (Quit: Bridge terminating on SIGTERM)
[15:40:42] *** Quits: dngray[m] (~dngray@user/dngray) (Quit: Bridge terminating on SIGTERM)
[15:40:42] *** Quits: dngray[m]1 (~dngraymat@2001:470:69fc:105::793b) (Quit: Bridge terminating on SIGTERM)
[15:40:43] *** Quits: kadoban (~kadoban@user/kadoban) (Quit: Bridge terminating on SIGTERM)
[15:40:44] *** Quits: Celeste[m] (~sleprainb@2001:470:69fc:105::3f4a) (Quit: Bridge terminating on SIGTERM)
[15:40:44] *** Quits: bloony (~tjellomat@2001:470:69fc:105::3aac) (Quit: Bridge terminating on SIGTERM)
[15:40:45] *** Quits: darkskiez (~darkskiez@2001:470:69fc:105::1:2a27) (Quit: Bridge terminating on SIGTERM)
[15:40:45] *** Quits: happy-dude (~happy-dud@2001:470:69fc:105::b4d7) (Quit: Bridge terminating on SIGTERM)
[15:40:46] *** Quits: spudly[m] (~spudly@2001:470:69fc:105::18) (Quit: Bridge terminating on SIGTERM)
[15:40:46] *** Quits: sordidwhiskey[m] (~sordidwhi@2001:470:69fc:105::c94e) (Quit: Bridge terminating on SIGTERM)
[15:40:46] *** Quits: TcM1911 (~tcm1911@2001:470:69fc:105::3649) (Quit: Bridge terminating on SIGTERM)
[15:40:56] *** Quits: unmanbearpig (~unmanbear@user/unmanbearpig) (Ping timeout: 245 seconds)
[15:42:57] *** Joins: unmanbearpig (~unmanbear@user/unmanbearpig)
[15:44:52] *** Quits: holgersson (~quassel@user/holgersson) (Ping timeout: 268 seconds)
[15:44:56] *** Joins: bloony (~tjellomat@2001:470:69fc:105::3aac)
[15:46:37] *** Joins: holgersson (~quassel@user/holgersson)
[15:49:30] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[15:50:59] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[15:51:21] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[15:56:52] *** Joins: spudly[m] (~spudly@2001:470:69fc:105::18)
[16:00:37] *** Joins: kadoban (~kadoban@user/kadoban)
[16:00:37] *** Joins: freswa (~freswa@2001:470:69fc:105::c1ec)
[16:00:37] *** Joins: gio[m] (~giolekvam@2001:470:69fc:105::1:16a)
[16:00:37] *** Joins: bat[m] (~batdice-t@2001:470:69fc:105::19b8)
[16:00:37] *** Joins: mambang[m] (~mambang@user/mambang)
[16:00:38] *** Joins: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4)
[16:00:38] *** Joins: psydroid (~psydroid@user/psydroid)
[16:00:38] *** Joins: sordidwhiskey[m] (~sordidwhi@2001:470:69fc:105::c94e)
[16:00:38] *** Joins: Celeste[m] (~sleprainb@2001:470:69fc:105::3f4a)
[16:00:38] *** Joins: happy-dude (~happy-dud@2001:470:69fc:105::b4d7)
[16:00:38] *** Joins: AshLeece[m] (~ashleecei@2001:470:69fc:105::c987)
[16:00:38] *** Joins: enick_208 (~dngray@user/dngray)
[16:00:38] *** Joins: fugkco (~fugkcomat@2001:470:69fc:105::c70d)
[16:00:38] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[16:00:38] *** Joins: M1000mh[theythem (~M1000mhmo@2001:470:69fc:105::4103)
[16:00:38] *** Joins: dan01[m] (~dan01@2001:470:69fc:105::1:2640)
[16:00:38] *** Joins: Guest8067 (~dngraymat@2001:470:69fc:105::793b)
[16:00:38] *** Joins: itsjoints (~itsjoints@2001:470:69fc:105::1:29f4)
[16:00:49] *** Joins: pulsepoint433[m] (~pulsepoin@2001:470:69fc:105::1:1f25)
[16:00:49] *** Joins: dung[m] (~dungbrocc@2001:470:69fc:105::d25b)
[16:00:49] *** Joins: Endow[m] (~endowmatr@2001:470:69fc:105::1:21eb)
[16:00:51] *** Joins: TcM1911 (~tcm1911@2001:470:69fc:105::3649)
[16:00:52] *** Joins: darkskiez[m] (~darkskiez@2001:470:69fc:105::1:2a27)
[16:00:52] *** Joins: jzacsh[m] (~jzacshm]@2001:470:69fc:105::462)
[16:00:52] *** Joins: petoem (~petoem@user/petoem)
[16:02:38] *** Quits: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de) (Ping timeout: 246 seconds)
[16:02:39] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[16:03:05] *** Joins: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de)
[16:08:27] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f6e3:7400:d8e7:a6fa:245:fafa)
[16:11:14] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Ping timeout: 260 seconds)
[16:12:18] *** Joins: Atlas (~atlas@user/atlas)
[16:13:08] *** Quits: Atlas (~atlas@user/atlas) (Client Quit)
[16:18:07] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:20:01] *** Quits: bloony (~tjellomat@2001:470:69fc:105::3aac) (Quit: Client limit exceeded: 20000)
[16:20:32] *** Quits: Guest8067 (~dngraymat@2001:470:69fc:105::793b) (Quit: Client limit exceeded: 20000)
[16:20:33] *** Quits: happy-dude (~happy-dud@2001:470:69fc:105::b4d7) (Quit: Client limit exceeded: 20000)
[16:20:36] *** Quits: freswa (~freswa@2001:470:69fc:105::c1ec) (Quit: Client limit exceeded: 20000)
[16:20:40] <leitz> Yay me! Minor "a-ha" moment this mornng as I transition from other langauges to Go.
[16:20:43] *** Quits: kadoban (~kadoban@user/kadoban) (Quit: Client limit exceeded: 20000)
[16:20:54] *** Quits: psydroid (~psydroid@user/psydroid) (Quit: Client limit exceeded: 20000)
[16:20:56] *** Quits: spudly[m] (~spudly@2001:470:69fc:105::18) (Quit: Client limit exceeded: 20000)
[16:20:58] *** Quits: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4) (Quit: Client limit exceeded: 20000)
[16:21:00] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Quit: Client limit exceeded: 20000)
[16:21:32] *** Joins: spudly[m] (~spudly@2001:470:69fc:105::18)
[16:21:32] *** Joins: kadoban (~kadoban@user/kadoban)
[16:21:51] *** Joins: freswa (~freswa@2001:470:69fc:105::c1ec)
[16:21:51] *** Joins: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4)
[16:21:51] *** Joins: psydroid (~psydroid@user/psydroid)
[16:21:51] *** Joins: happy-dude (~happy-dud@2001:470:69fc:105::b4d7)
[16:21:56] *** Quits: mambang[m] (~mambang@user/mambang) (Quit: Client limit exceeded: 20000)
[16:22:05] *** Joins: bloony (~tjellomat@2001:470:69fc:105::3aac)
[16:22:12] *** Joins: Guest83 (~textual@2603-7081-0800-4824-85a1-3829-a5be-d37a.res6.spectrum.com)
[16:22:15] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[16:22:15] *** Joins: enick_495 (~dngraymat@2001:470:69fc:105::793b)
[16:22:21] *** Quits: M1000mh[theythem (~M1000mhmo@2001:470:69fc:105::4103) (Quit: Client limit exceeded: 20000)
[16:22:53] *** Parts: Guest83 (~textual@2603-7081-0800-4824-85a1-3829-a5be-d37a.res6.spectrum.com) ()
[16:23:01] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[16:23:09] *** Joins: cstls (~textual@2603-7081-0800-4824-85a1-3829-a5be-d37a.res6.spectrum.com)
[16:23:30] *** Quits: dan01[m] (~dan01@2001:470:69fc:105::1:2640) (Quit: Client limit exceeded: 20000)
[16:25:13] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[16:30:41] *** Quits: unmanbearpig (~unmanbear@user/unmanbearpig) (Ping timeout: 256 seconds)
[16:32:25] *** Joins: unmanbearpig (~unmanbear@user/unmanbearpig)
[16:36:45] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[16:39:40] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[16:40:47] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[16:43:32] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[16:44:09] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[16:44:25] *** Joins: oxum (~oxum@122.171.221.237)
[16:44:32] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[16:45:32] *** Quits: saschagrunert (~saschagru@46.128.124.46) (Remote host closed the connection)
[16:46:50] *** Joins: fikran (~fikran@user/fikran)
[16:47:38] *** Quits: oxum (~oxum@122.171.221.237) (Remote host closed the connection)
[16:49:35] *** Quits: dsrt^ (~dsrt@h50.174.139.63.static.ip.windstream.net) (Remote host closed the connection)
[16:51:12] *** Joins: internut (~internut@2601:280:4e00:7b70:342b:b8dc:44a1:5edf)
[16:59:55] *** Parts: Guest5086 (jezebel@nxdoma.in) ()
[17:00:10] *** Joins: jezebel (jezebel@user/jezebel)
[17:00:26] <jezebel> what data structure does map use under the hood?
[17:00:38] *** Joins: Ergo^ (~ergo@91.238.59.144)
[17:00:50] *** Quits: sagax (~sagax_nb@user/sagax) (Quit: Konversation terminated!)
[17:00:53] *** Joins: mambang[m] (~mambang@user/mambang)
[17:01:06] *** Joins: M1000mh[theythem (~M1000mhmo@2001:470:69fc:105::4103)
[17:01:06] *** Joins: dan01[m] (~dan01@2001:470:69fc:105::1:2640)
[17:03:18] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[17:06:29] <siXy> jezebel: https://dave.cheney.net/2018/05/29/how-the-go-runtime-implements-maps-efficiently-without-generics
[17:06:58] <siXy> also the comments in https://golang.org/src/runtime/map.go
[17:06:58] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e5dd-ed19-5085-fd41.res6.spectrum.com)
[17:07:08] <jezebel> thanks
[17:07:19] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[17:07:34] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[17:07:45] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[17:08:10] <siXy> the tl;dr though is a hashmap that you're probably familiar with from other langs. It's not particularly unusual
[17:11:43] <jezebel> i'm pondering whether to deserialise an xml document into a tree of my own or a map
[17:11:50] <jezebel> map would be simpler
[17:12:04] <jezebel> s/a map/multiple maps/
[17:13:27] <siXy> map is pretty well optimised in the runtime, I'd suggest starting there, and revisiting later if you see it causing a significant bottleneck
[17:13:56] <jezebel> i lose the hierarchy and there will be more redundancy
[17:14:12] <jezebel> memory trade off :D
[17:15:07] <siXy> well I can't see your data structure, but I'd imagine some combination of structs-containing-maps and maps-containing-structs ought to allow you to maintain the existing hierarchy
[17:15:14] *** Joins: tyson2 (~user@cpe688f2ec1f9b3-cm688f2ec1f9b0.cpe.net.cable.rogers.com)
[17:16:13] <jezebel> hmm
[17:16:24] <jezebel> yeah but that's kind of tree-like by then
[17:17:10] *** Quits: bloony (~tjellomat@2001:470:69fc:105::3aac) (Quit: Reconnecting)
[17:17:24] *** Joins: bloony (~tjellomat@2001:470:69fc:105::3aac)
[17:20:34] <siXy> right, so if by "tree of your own" you meant something like struct { name string; cows map[string]struct{ height, weight int }} then yes absolutely do that
[17:20:54] <siXy> if you mean "create your own map-like object from scratch" then maybe don't :)
[17:22:20] <Sam> I've always had much better luck with struct Elem{xml.Name, Children []Elem[]} or something like that.
[17:22:42] <Sam> But I have no numbers I can share, sadly
[17:24:44] *** Joins: hugleo (~hugleo@2804:174:2001:0:48fd:edbc:b9b0:efa9)
[17:26:06] <siXy> Sam: Did you ever figure out what was breaking your TestMain thing btw?
[17:26:09] *** Joins: oxum (~oxum@122.171.221.237)
[17:30:45] *** Quits: ekathva (~ekathva@93-90-58-246.welcomnet.fi) (Remote host closed the connection)
[17:31:25] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[17:32:16] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[17:32:22] <siXy> but yeah, it depends on your XML - for the map approach to make sense then your data has to be somthing that makes sense for a map. If you have <thing> <foo>1</foo> <bar>2</bar> <bar>3</bar> </thing> then you need something like sam's example.
[17:32:28] *** Joins: Kaivo (~Kaivo@user/kaivo)
[17:33:26] *** Quits: internut (~internut@2601:280:4e00:7b70:342b:b8dc:44a1:5edf) (Ping timeout: 245 seconds)
[17:33:37] <sztanpet> he forgot to add the _test postfix to the file afair
[17:33:46] *** Quits: Kaivo (~Kaivo@user/kaivo) (Client Quit)
[17:34:06] *** Joins: fling (~fling@user/fling)
[17:34:08] <fling> Hello.
[17:34:15] <fling> are you nuts?
[17:34:59] <sztanpet> no, this is the channel for the go programming language which has a gopher mascot
[17:35:54] <siXy> sztanpet: Hah! Okay, well that's that mystery solved :)
[17:36:41] <hugleo> I got data from a function of the type []interface{}. t := my_function(). Data: {{"a"}, {5}, {2.0}}. How can't get the "a" data. I can get the {"a"} with t[0] but if I try t[0][0] I got the error: t[0][0] (type interface {} does not support indexing)
[17:37:03] *** Joins: oxum_ (~oxum@122.172.47.114)
[17:37:32] <sztanpet> hugleo you must convert the interface{} to the type you expect to be there, but you are better off not working []interface{}, are you handling yaml or json?
[17:37:32] *** Quits: cstls (~textual@2603-7081-0800-4824-85a1-3829-a5be-d37a.res6.spectrum.com) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:37:52] <sztanpet> there are better ways to do it is what im trying to say
[17:37:54] *** Joins: Kaivo (~Kaivo@user/kaivo)
[17:38:03] *** Joins: Guest83 (~textual@2603-7081-0800-4824-85a1-3829-a5be-d37a.res6.spectrum.com)
[17:38:30] *** Quits: oxum (~oxum@122.171.221.237) (Ping timeout: 260 seconds)
[17:40:02] <hugleo> sztanpet: yes, will be converted to json, I just need to preformated before. I got the json like http://en.wikipedia.org/wiki/Special:Search?go=Go&search=3],[0],[2],[1],[1],[0],[0, but i need [3,0,2,1,1,0,0]
[17:41:47] *** Quits: oxum_ (~oxum@122.172.47.114) (Ping timeout: 264 seconds)
[17:42:53] <hugleo> interface conversion: interface {} is []interface {}, not string
[17:43:04] <hugleo> can I covnert to itnerface type itelsef?
[17:44:38] <hugleo> I got it!
[17:44:39] <hugleo> t[0].([]interface{})[0]
[17:46:54] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[17:47:52] *** Quits: Guest83 (~textual@2603-7081-0800-4824-85a1-3829-a5be-d37a.res6.spectrum.com) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:48:21] *** Joins: Guest83 (~textual@2603-7081-0800-4824-85a1-3829-a5be-d37a.res6.spectrum.com)
[17:50:47] *** Quits: scjosh (~scjosh@206.189.79.69) (Quit: The Lounge - https://thelounge.chat)
[17:51:34] *** Joins: scjosh (~scjosh@206.189.79.69)
[17:52:11] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[17:58:11] *** Quits: Guest83 (~textual@2603-7081-0800-4824-85a1-3829-a5be-d37a.res6.spectrum.com) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[18:00:20] *** Joins: lidenbrock (~lidenbroc@186.192.87.8)
[18:01:11] *** Joins: internut (~internut@2601:280:4e00:7b70:342b:b8dc:44a1:5edf)
[18:01:21] *** lidenbrock is now known as eron
[18:01:46] *** Quits: iateadonut (~dan@121.177.17.154) (Quit: Leaving.)
[18:04:15] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Read error: Connection reset by peer)
[18:04:24] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[18:12:18] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f6e3:7400:d8e7:a6fa:245:fafa) (Read error: Connection reset by peer)
[18:13:35] *** Joins: zer0bitz (~zer0bitz@2001:2003:f6e3:7400:d8e7:a6fa:245:fafa)
[18:13:42] *** Joins: Guest83 (~textual@2603-7081-0800-4824-85a1-3829-a5be-d37a.res6.spectrum.com)
[18:13:52] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:15:14] *** Quits: Guest83 (~textual@2603-7081-0800-4824-85a1-3829-a5be-d37a.res6.spectrum.com) (Client Quit)
[18:20:48] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[18:22:12] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[18:24:04] *** Quits: eron (~lidenbroc@186.192.87.8) (Ping timeout: 256 seconds)
[18:24:31] <bloony> In tests I need to have a unique port in parallel running _test.go files.. is there some mechanism for storing a value in the go test framework? I could think of using a /tmp file or the environment..
[18:27:01] <siXy> bloony: What about using TestMain to assign them all a unique port?
[18:31:16] <bloony> siXy: but isn't TestMain per file?
[18:33:40] <siXy> it's per-package
[18:33:49] <siXy> the go compiler has no concept of per=file
[18:35:02] <bloony> ah yes, but still I need unique accross package
[18:39:11] <bloony> hmm.. guess I could have them in the same package actually.. I have test/api_test/api_test.go test/cli_test/cli_test.go and test/config_test/config_test.go .. they all spawn instances of the app in each of their internal tests.. but I could just have test/api_test.go test/cli_test.go test/config_test.go
[18:40:07] *** Quits: Kaivo (~Kaivo@user/kaivo) (Quit: WeeChat 3.3)
[18:40:10] <fizzie> Is this about having a single server bound to one port serving multiple testcases, or assigning each testcase its own separate port?
[18:40:38] <fizzie> Because for the latter, I usually just let a server bind to an arbitrary local port, then check what it got, and give that to the system-under-test to use.
[18:41:55] *** Joins: Kaivo (~Kaivo@user/kaivo)
[18:44:26] <bloony> its the latter
[18:44:27] <bloony> yeah I guess I could do that
[18:44:50] <bloony> I do need a redis db integer also though
[18:45:42] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 260 seconds)
[18:46:40] *** Joins: walkr (~walkr@177-7-165-171.user3p.brasiltelecom.net.br)
[18:49:48] *** Joins: zacbrown[m] (~zacbrownm@2001:470:69fc:105::1:3241)
[18:53:18] *** Quits: walkr (~walkr@177-7-165-171.user3p.brasiltelecom.net.br) (Quit: Leaving)
[18:53:51] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[18:56:11] *** Joins: fikran (~fikran@user/fikran)
[18:58:01] *** Joins: jbauer (~jbauer@146.71.11.98)
[19:00:35] *** Joins: Guest83_ (~textual@2603-7081-0800-4824-85a1-3829-a5be-d37a.res6.spectrum.com)
[19:02:04] *** Quits: Guest83_ (~textual@2603-7081-0800-4824-85a1-3829-a5be-d37a.res6.spectrum.com) (Client Quit)
[19:03:26] *** Quits: internut (~internut@2601:280:4e00:7b70:342b:b8dc:44a1:5edf) (Ping timeout: 245 seconds)
[19:03:39] *** Quits: zwr (~zwr@2804:d45:b966:fb00:faa2:cc72:3a72:e967) (Ping timeout: 250 seconds)
[19:04:28] *** Joins: zwr (~zwr@2804:d45:b966:fb00:ea42:8fa9:6c11:b414)
[19:04:39] *** Joins: walkr (~walkr@177-7-165-171.user3p.brasiltelecom.net.br)
[19:04:43] *** Joins: cstls (~ruiner@2603-7081-0800-4824-85a1-3829-a5be-d37a.res6.spectrum.com)
[19:08:22] *** Quits: walkr (~walkr@177-7-165-171.user3p.brasiltelecom.net.br) (Quit: Leaving)
[19:08:38] *** Joins: walkr (~walkr@177-7-165-171.user3p.brasiltelecom.net.br)
[19:11:27] *** Quits: vimal (~vimal@2a02:a210:9600:1600:4fb4:e20f:72bc:9bf8) (Ping timeout: 268 seconds)
[19:11:58] *** Quits: hugleo (~hugleo@2804:174:2001:0:48fd:edbc:b9b0:efa9) (Quit: Konversation terminated!)
[19:12:24] *** Quits: jbauer (~jbauer@146.71.11.98) (Quit: Quitting)
[19:16:40] *** Quits: cstls (~ruiner@2603-7081-0800-4824-85a1-3829-a5be-d37a.res6.spectrum.com) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[19:17:09] *** Joins: cstls (~ruiner@2603-7081-0800-4824-85a1-3829-a5be-d37a.res6.spectrum.com)
[19:20:14] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[19:20:56] *** Quits: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de) (Ping timeout: 265 seconds)
[19:22:49] *** Joins: vimal (~vimal@2a02:a210:9600:1600:3271:adb4:e3fb:289a)
[19:27:52] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e5dd-ed19-5085-fd41.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[19:32:57] *** Joins: internut (~internut@2601:280:4e00:7b70:342b:b8dc:44a1:5edf)
[19:35:03] *** Joins: smhbvd^ (~smhbvd@h50.174.139.63.static.ip.windstream.net)
[19:35:40] *** Joins: arinov (~arinov@178.240.135.64)
[19:36:37] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[19:38:02] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[19:38:11] *** Quits: internut (~internut@2601:280:4e00:7b70:342b:b8dc:44a1:5edf) (Ping timeout: 264 seconds)
[19:38:45] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Remote host closed the connection)
[19:39:48] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[19:41:02] *** Quits: unmanbearpig (~unmanbear@user/unmanbearpig) (Ping timeout: 268 seconds)
[19:41:18] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e5dd-ed19-5085-fd41.res6.spectrum.com)
[19:41:44] *** Quits: tyson2 (~user@cpe688f2ec1f9b3-cm688f2ec1f9b0.cpe.net.cable.rogers.com) (Remote host closed the connection)
[19:42:28] *** Joins: unmanbearpig (~unmanbear@user/unmanbearpig)
[19:44:16] *** Joins: mrig (~mrig@user/mrig)
[19:44:18] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[19:44:22] *** Quits: ajfriesen (~ajfriesen@cable-78-35-98-50.nc.de) (Quit: The Lounge - https://thelounge.chat)
[19:44:50] *** Joins: ajfriesen (~ajfriesen@cable-78-35-98-50.nc.de)
[19:45:47] *** Quits: smhbvd^ (~smhbvd@h50.174.139.63.static.ip.windstream.net) (Remote host closed the connection)
[19:48:31] *** Joins: servytor (uid525486@hampstead.irccloud.com)
[19:49:08] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:49:09] *** Joins: independent56 (~independe@2.31.88.82)
[19:50:10] <servytor> I am a complete idiot, and I haven't done my research. But is it true that go is great at concurrency, not parallelism? So it wouldn't be able to take advantage of 96 cores on an epyc chip?
[19:52:36] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 245 seconds)
[19:54:14] *** Joins: lilgopher (~textual@2601:241:8000:38f0:807d:c372:c18d:5d1a)
[19:57:19] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[19:57:38] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[19:58:22] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[19:59:25] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[19:59:37] <Sam> Define "good"? The answer is that it does both rather well but in a different way than most languages. You may need to do extra work on extremely parallel cpu bound workloads (but it will also probably be fine)
[20:03:26] *** Joins: girafe2 (~girafe@176-147-142-235.abo.bbox.fr)
[20:06:19] *** Quits: girafe (~girafe@176-147-142-235.abo.bbox.fr) (Ping timeout: 268 seconds)
[20:10:06] <siXy> servytor: One significant problem you're gonna have is that the 96 core per socket part isn't available to users until next year :)
[20:11:18] <siXy> But more generally: No. Go's just fine at highly parallel workloads, although you are going to need to watch your GC cycles some depending on your latency tolerance.
[20:14:13] <siXy> If you're talking about a 2s server with your workload split across 2 CPUs, though, you're going to have a bad time. Like you would with any single binary scheduled across multiple sockets. Memory locality will become a big problem.
[20:15:15] *** Joins: blrn (~tcook@user/blrn)
[20:17:40] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:34:55] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 256 seconds)
[20:37:05] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[20:37:38] *** Quits: leah2 (~leah@vuxu.org) (Remote host closed the connection)
[20:39:11] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e5dd-ed19-5085-fd41.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[20:39:34] *** Joins: leah2 (~leah@vuxu.org)
[20:40:24] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[20:42:23] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 264 seconds)
[20:43:15] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[20:44:07] *** Joins: internut (~internut@98.38.226.136)
[20:44:37] *** Quits: internut (~internut@98.38.226.136) (Remote host closed the connection)
[20:44:49] *** Joins: internut (~internut@2601:280:4e00:7b70:d1ea:2d5a:b108:fbec)
[20:45:08] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Read error: Connection reset by peer)
[20:45:31] *** Quits: internut (~internut@2601:280:4e00:7b70:d1ea:2d5a:b108:fbec) (Remote host closed the connection)
[20:47:22] *** Joins: internut (~internut@2601:280:4e00:7b70:d1ea:2d5a:b108:fbec)
[20:49:22] *** Quits: Kaivo (~Kaivo@user/kaivo) (Ping timeout: 260 seconds)
[20:49:35] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 264 seconds)
[20:51:00] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[20:51:36] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[20:53:04] *** Joins: jpw (~jpw@user/jpw)
[20:55:53] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Read error: Connection reset by peer)
[21:00:06] *** Quits: arinov (~arinov@178.240.135.64) (Ping timeout: 260 seconds)
[21:01:57] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[21:03:26] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[21:05:32] *** Joins: fikran (~fikran@user/fikran)
[21:07:12] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[21:07:29] *** Quits: mikoto-c1 (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (Quit: mikoto-c1)
[21:07:31] *** Joins: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de)
[21:07:36] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[21:07:38] <mikoto-chan> https://bpa.st/4UNQ
[21:07:52] <mikoto-chan> why does the compiler not recognize init()?
[21:07:55] *** Quits: cstls (~ruiner@2603-7081-0800-4824-85a1-3829-a5be-d37a.res6.spectrum.com) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:08:26] *** Joins: cstls (~ruiner@2603-7081-0800-4824-85a1-3829-a5be-d37a.res6.spectrum.com)
[21:08:39] <mikoto-chan> nvm ... forgot that init was a keyword (?)
[21:10:24] *** Joins: Kaivo (~Kaivo@user/kaivo)
[21:10:53] <fizzie> It's not a keyword, it's just... special.
[21:11:18] <fizzie> And one reason why you can't call them is because there might be many.
[21:11:32] <fizzie> (Even in a single source file.)
[21:11:50] <fizzie> From the spec: "Multiple such functions may be defined per package, even within a single source file. In the package block, the init identifier can be used only to declare init functions, yet the identifier itself is not declared. Thus init functions cannot be referred to from anywhere in a program."
[21:12:59] <fizzie> Incidentally, 2 ^ 8 isn'probably isn't doing what you want, because that's just 10.
[21:13:34] <fizzie> (You want `1 << 8` if you want 2 to the power of 8.)
[21:14:57] *** Quits: rek2 (~ReK2@47.62.9.10) (Quit: WeeChat 3.3)
[21:16:48] *** Quits: cstls (~ruiner@2603-7081-0800-4824-85a1-3829-a5be-d37a.res6.spectrum.com) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:17:13] *** Joins: cstls (~ruiner@2603-7081-0800-4824-85a1-3829-a5be-d37a.res6.spectrum.com)
[21:17:25] *** Quits: cstls (~ruiner@2603-7081-0800-4824-85a1-3829-a5be-d37a.res6.spectrum.com) (Client Quit)
[21:18:03] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[21:19:02] <mikoto-chan> fizzie: I did indeed realize that 2 ^ 8 is not what I wanted, any idea where I can get better at understanding all this bitwise operator magic?
[21:19:05] *** Quits: internut (~internut@2601:280:4e00:7b70:d1ea:2d5a:b108:fbec) (Ping timeout: 268 seconds)
[21:19:15] <mikoto-chan> (other than taking a pen and paper and writing everything out manually)
[21:19:37] *** Joins: pepee (~pepee@user/pepee)
[21:22:00] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e5dd-ed19-5085-fd41.res6.spectrum.com)
[21:23:39] *** Quits: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[21:23:42] *** Joins: cstls (~ruiner@2603-7081-0800-4824-85a1-3829-a5be-d37a.res6.spectrum.com)
[21:26:02] *** Quits: theoceaniscool (~theoceani@119.12.232.133) (Ping timeout: 246 seconds)
[21:29:08] *** Quits: cstls (~ruiner@2603-7081-0800-4824-85a1-3829-a5be-d37a.res6.spectrum.com) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:31:40] *** Joins: walkr_ (~walkr@177-7-165-171.user3p.brasiltelecom.net.br)
[21:31:56] <fizzie> I don't really know, I think it's just one of those things that you get used to. Remembering that ^ is exclusive-or is just a matter of memorization; "seeing" that 2 ^ 8 == 10 is a matter of just thinking about the bits.
[21:32:12] *** Joins: fwalkr (~walkr@177-7-165-171.user3p.brasiltelecom.net.br)
[21:32:19] *** Quits: fwalkr (~walkr@177-7-165-171.user3p.brasiltelecom.net.br) (Client Quit)
[21:32:23] *** Quits: walkr_ (~walkr@177-7-165-171.user3p.brasiltelecom.net.br) (Client Quit)
[21:38:40] *** Joins: cstls (~ruiner@2603-7081-0800-4824-85a1-3829-a5be-d37a.res6.spectrum.com)
[21:39:21] *** Quits: cstls (~ruiner@2603-7081-0800-4824-85a1-3829-a5be-d37a.res6.spectrum.com) (Client Quit)
[21:42:35] *** Joins: cstls (~ruiner@2603-7081-0800-4824-85a1-3829-a5be-d37a.res6.spectrum.com)
[21:43:18] *** Quits: walkr (~walkr@177-7-165-171.user3p.brasiltelecom.net.br) (Read error: Connection reset by peer)
[21:48:15] *** Joins: acagastya (~acagastya@wikinews/acagastya)
[21:49:36] <acagastya> Hi, for a directory `/path/to/dir`, how do I just get `dir`?  In shell, I could do `basename $PWD`, but it is not guaranteed `basename` might be available on the system.
[21:53:28] <foobaz> acagastya: path.Base() https://pkg.go.dev/path#Base
[21:55:22] <foobaz> or filepath.Base() if you want windows compatibility: https://pkg.go.dev/path/filepath#Base
[21:56:31] <acagastya> Uh, a foldernamed "foo/bar" in macos is internally represented as "foo:bar".
[21:57:32] <foobaz> that has not been the case since mac os 9
[21:58:03] <foobaz> there are some legacy APIs that translate path separators to and from, but internally slash is the path separator
[21:58:28] <acagastya> I just named the folder ac/dc and shell (not golang) says ac:dc
[21:58:52] <foobaz> that's not a path separator
[21:58:53] *** Joins: internut (~internut@2601:280:4e00:7b70:e4b3:c254:8260:7bf1)
[21:59:05] <foobaz> that's finder not letting you use a slash in a name
[21:59:35] <acagastya> finder is, but internally is recognises as colon -- weird quirks of the OS.
[21:59:42] <acagastya> But since I would not want to exclude windows, filepath might be better option.  Thanks for that!
[21:59:56] <foobaz> internally it's a colon because it's actually a colon
[22:00:10] <foobaz> and it's not a path separator at all, just part of the filename
[22:00:45] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[22:06:12] *** Joins: walkr (~walkr@177-7-165-171.user3p.brasiltelecom.net.br)
[22:09:08] *** Quits: feuerrot (~feuerrot@shells.chaosdorf.de) (Read error: Connection reset by peer)
[22:16:57] *** Quits: menace (~someone@user/menace) (Read error: Connection reset by peer)
[22:25:04] *** Joins: carlavilla (~carlavill@2a0c:5a84:3607:2f00:221:6bff:fe3b:cee4)
[22:32:29] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[22:33:13] *** Joins: bindu (~bindu@user/bindu)
[22:35:27] *** Quits: rockyh (~rockyh@user/rockyh) (Quit: WeeChat 3.3)
[22:37:25] *** Quits: haliucinas (~haliucina@5.20.153.21) (Remote host closed the connection)
[22:39:48] *** Joins: tane (~tane@dslb-002-201-234-197.002.201.pools.vodafone-ip.de)
[22:39:48] *** Quits: tane (~tane@dslb-002-201-234-197.002.201.pools.vodafone-ip.de) (Changing host)
[22:39:48] *** Joins: tane (~tane@user/tane)
[22:42:52] *** Joins: haliucinas (~haliucina@5.20.153.21)
[22:49:51] *** Quits: papa (~papa@user/papa) (Quit: connection reset again by peer.)
[22:51:36] *** Quits: glider (~glider@user/glider) (Quit: ZNC 1.9.x-git-111-f2cdc3db - https://znc.in)
[22:52:27] *** Joins: tyson2 (~user@198.98.115.227)
[22:52:32] *** Joins: neurocyte0132889 (~neurocyte@94.46.73.137)
[22:52:32] *** Quits: neurocyte0132889 (~neurocyte@94.46.73.137) (Changing host)
[22:52:33] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[22:53:11] *** Quits: eldritch (~eldritch@user/eldritch/x-9272577) (Quit: bye)
[22:57:24] *** Joins: eldritch_ (~eldritch@user/eldritch/x-9272577)
[23:02:03] *** Joins: glider (~glider@user/glider)
[23:05:10] *** Quits: vimal (~vimal@2a02:a210:9600:1600:3271:adb4:e3fb:289a) (Ping timeout: 268 seconds)
[23:06:42] *** Quits: cstls (~ruiner@2603-7081-0800-4824-85a1-3829-a5be-d37a.res6.spectrum.com) (Quit: out)
[23:12:29] *** Quits: walkr (~walkr@177-7-165-171.user3p.brasiltelecom.net.br) (Read error: Connection reset by peer)
[23:13:01] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[23:13:54] *** Joins: Tv_ (uid62079@user/tv/x-3144562)
[23:14:53] *** Joins: fikran (~fikran@user/fikran)
[23:17:47] *** Joins: vimal (~vimal@2a02:a210:9600:1600:3271:adb4:e3fb:289a)
[23:22:38] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[23:23:19] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[23:24:57] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[23:25:52] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Quit: g'bi)
[23:26:36] *** Joins: arinov (~arinov@213.194.126.155)
[23:26:54] *** Quits: independent56 (~independe@2.31.88.82) (Quit: Leaving)
[23:42:41] *** Joins: dr0n (~nabromov@94.11.23.235)
[23:44:34] *** Joins: mikey__ (~mikey__@user/mikey/x-6463285)
[23:44:49] *** Quits: INeedAHandle (~INeedAHan@user/ineedahandle) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:48:42] *** Quits: tyson2 (~user@198.98.115.227) (Remote host closed the connection)
[23:52:35] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 264 seconds)
[23:54:00] <b0nn> mikoto-chan: strconv.FormatInt() might help you - it's basically pen and paper but the computer gets to do the work https://play.golang.org/p/qkVIgyQphHD
[23:55:05] *** Joins: walkr (~walkr@177-7-165-171.user3p.brasiltelecom.net.br)
