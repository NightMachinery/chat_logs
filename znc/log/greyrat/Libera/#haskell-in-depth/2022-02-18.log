[00:17:23] *** Quits: coot (~coot@2a02:a310:e241:1b00:ec1a:e9df:79ac:66ba) (Quit: coot)
[01:03:00] *** Quits: SanchayanMaity (sid478177@id-478177.hampstead.irccloud.com) (Ping timeout: 240 seconds)
[01:03:49] *** Joins: SanchayanMaity (sid478177@id-478177.hampstead.irccloud.com)
[02:05:11] *** Quits: burnsidesLlama (~burnsides@dhcp168-021.wadham.ox.ac.uk) (Remote host closed the connection)
[02:41:40] *** Joins: burnsidesLlama (~burnsides@dhcp168-021.wadham.ox.ac.uk)
[02:42:05] *** Quits: burnsidesLlama (~burnsides@dhcp168-021.wadham.ox.ac.uk) (Remote host closed the connection)
[02:42:12] *** Joins: burnsidesLlama (~burnsides@dhcp168-021.wadham.ox.ac.uk)
[02:44:18] *** Quits: lambdabot (~lambdabot@haskell/bot/lambdabot) (Remote host closed the connection)
[02:50:37] *** Joins: lambdabot (~lambdabot@haskell/bot/lambdabot)
[02:57:10] *** Quits: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net) (Remote host closed the connection)
[02:57:23] *** Joins: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net)
[03:37:06] <shapr> coworker pointed out the "instances" section of FromField on https://hackage.haskell.org/package/postgresql-simple-0.6.4/docs/Database-PostgreSQL-Simple-FromField.html
[03:37:20] <shapr> it has a clear list of Haskell types and PostgreSQL types next to them!
[03:38:12] <shapr> I was confused because saving UTCTime and loading from PostgreSQL does not return the same value
[04:07:29] <shapr> Today's question, what's the best way to save/load a (FromRow a, FromRow b) => Map a b with postgresql-simple?
[04:27:37] <janus> shapr: how would you know which a corresponds to which b?
[04:29:25] <shapr> At this point I want a Map Key Value where Key and Value are records in their own tables, and each table has its own "id serial primary key" but now I'm thinking that might be a bad idea.
[05:01:51] <shapr> ok, so I switched to a compound primary key, that makes more sense
[05:02:16] <shapr> janus: what about a standard database structure where there's a third table joining together the primary keys of two other tables?
[05:10:30] *** Quits: burnsidesLlama (~burnsides@dhcp168-021.wadham.ox.ac.uk) (Remote host closed the connection)
[05:10:59] <shapr> I'm not sure how to populate the map from those tables
[05:47:23] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Quit: ec)
[07:37:48] *** Joins: allbery_b (~geekosaur@xmonad/geekosaur)
[07:37:48] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Killed (NickServ (GHOST command used by allbery_b)))
[07:37:51] *** allbery_b is now known as geekosaur
[10:24:46] *** Joins: allbery_b (~geekosaur@xmonad/geekosaur)
[10:24:46] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Killed (NickServ (GHOST command used by allbery_b)))
[10:24:49] *** allbery_b is now known as geekosaur
[10:59:00] *** Joins: coot (~coot@213.134.190.95)
[12:12:59] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Ping timeout: 256 seconds)
[12:15:02] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[12:21:36] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Ping timeout: 252 seconds)
[12:22:37] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[17:19:45] <janus> shapr: i think you can use the instance "(FromField a, FromField b) => FromRow (a, b)" with query_ to get a list of ids in a and ids in b (that you have made sure corresponds in the actual select statement)
[17:20:03] <janus> then you can use that list with Map.fromList and you have the map
[17:20:53] <janus> if you look at the example here https://hackage.haskell.org/package/postgresql-simple-0.6.4/docs/Database-PostgreSQL-Simple.html#g:2 , they use the instance "FromField a => FromRow (Only a)"
[17:22:12] <janus> so you could adjust that example and so that you'd have [(PrimaryKeyA, PrimaryKeyB)] on the left hand side. then if you have instances FromField PrimaryKeyA and FromField PrimaryKeyB, it should choose that tuple instance i previously mentioned
[18:02:14] *** Parts: coot (~coot@213.134.190.95) ()
[18:03:58] *** Joins: coot (~coot@2a02:a310:e241:1b00:ec1a:e9df:79ac:66ba)
[18:17:10] *** Joins: burnsidesLlama (~burnsides@dhcp168-022.wadham.ox.ac.uk)
[18:21:14] <shapr> ok, that makes sense, I'll try it
[18:47:10] *** Quits: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[18:48:04] *** Joins: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net)
[19:51:48] *** Quits: burnsidesLlama (~burnsides@dhcp168-022.wadham.ox.ac.uk) (Remote host closed the connection)
[20:18:02] *** geekosaur is now known as sequell-clippy
[20:21:26] *** sequell-clippy is now known as geekosaur
[20:26:04] *** Joins: burnsidesLlama (~burnsides@dhcp168-022.wadham.ox.ac.uk)
[20:31:04] *** Quits: burnsidesLlama (~burnsides@dhcp168-022.wadham.ox.ac.uk) (Ping timeout: 272 seconds)
[20:34:16] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[21:19:38] *** Joins: burnsidesLlama (~burnsides@dhcp168-022.wadham.ox.ac.uk)
