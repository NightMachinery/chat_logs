[02:13:57] <EvanR> has anyone used arrow notation for anything 
[02:14:08] <EvanR> how much does it suck
[02:18:23] <ManofLetters[m]> didn't use notation, but `(***), (&&&), first, second` are splendid for everyday use
[02:18:45] <sm> yampa games use it
[02:19:01] <EvanR> I saw that in peoplemon
[02:20:43] <f-a> I wonder if people use arrows unironically
[02:20:56] <EvanR> nobody got any war stories I guess
[02:21:07] <f-a> Ivan Perez was super kind when I asked but I really wonder
[02:21:28] <EvanR> he is the "monadic stream functions" guy right
[02:22:04] <f-a> yes
[02:26:25] <ManofLetters[m]> arrows are really nice for writing categorical stuff, which is otherwise terrible to write, e.g.,  https://github.com/phadej/overloaded/blob/master/example/AD.hs#L207
[02:26:55] <ManofLetters[m]> but it's only somewhat less terrible, which may be why people rarely use categorical APIs
[02:27:19] <EvanR> that code looks surprisingly tidy... not that I understand it
[02:27:39] <f-a> I hate that I cannot use them w/o synctactic sugar
[02:27:43] <f-a> well you can but it is very hard
[02:28:01] <f-a> while  >>= \a ->  is perfectly legal & legible 
[02:28:13] <ManofLetters[m]> the category definition is at the start of this file; may help a bit
[02:28:27] <ManofLetters[m]> it's ML automatic differentiation in the style of Conal Elliot, but done better
[02:28:32] <ManofLetters[m]> (in part thanks to arrows)
[02:30:47] <EvanR> >>= \a -> out of context looks... very surprising xD
[02:30:55] <EvanR> did they do that on purpose
[02:31:32] <EvanR> ManofLetters[m], wait wait... their code is being desugarred to all those category classes in Overloaded.Categories? Is the desugaring process configurable
[02:31:44] <f-a> I meant: you can live without do notation
[02:32:32] <f-a> also, since people here seem to like RLs
[02:32:34] <f-a> https://www.rockpapershotgun.com/playing-roguelikes-when-you-cant-see
[02:32:52] <EvanR> oh, it's a compiler plugin
[02:33:10] <f-a> makes you think how easy it is to greatly improve accessibility 
[02:33:17] <EvanR> that is cool, and the comments are telling "ghc compiles arrows into the wrong classes"
[02:35:10] <ManofLetters[m]> doh, I'm running around sticking emojis to your messages and you guys can't see them ;(
[02:35:21] <f-a> =D
[02:35:27] <EvanR> totally invisible
[02:35:27] <f-a> â™¥
[02:35:36] <ManofLetters[m]> in short, you are right and you rock
[02:35:42] <f-a> haha
[02:35:51] <EvanR> the importance of feedback to yourself in outgoing communications
[02:39:47] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[02:50:38] *** Quits: __monty__ (~toonn@user/toonn) (Quit: leaving)
[02:59:16] <EvanR> what do you lose when you "go arrow"
[03:00:46] <f-a> I will go out on a limb and say that you cannot depend on runtimem to decide the, uhhh what is the correct word, path? brach? of your program?
[03:01:05] <f-a> rather, the circuit has to be there at compile time
[03:01:13] <f-a> gosh I am tired, my English is degrading
[03:02:00] <EvanR> hmm
[03:02:15] <f-a> with monads, dynamic behaviour are possible
[03:02:18] <f-a> +s
[03:06:14] <ManofLetters[m]> yes, though there are variants of arrows that recover some of the power: ArrowChoice and probably others I forgot
[03:06:20] <ManofLetters[m]> also, less power is more power
[03:06:36] <ManofLetters[m]> if you can still make it through
[03:07:13] <ManofLetters[m]> not sure how cleanly the more powerful arrows map to categories, though; I'd like to learn
[03:08:04] <ManofLetters[m]> however, even Applicative is more popular than Arrows, despite (or thanks to) being even weaker
[03:09:10] <ManofLetters[m]> so I guess this is more complex; perhaps something about sweet spot, compatibility with Monad, notation (the most shallow, so probably the most touching)
[04:57:39] <f-a> Improved accuracy of horizontal and vertical line drawing when using OpenGL or OpenGLES
[04:57:56] <f-a> how can vertical and horizontal lines *not* be accurate, SDL?
[05:30:40] <EvanR> according to phadej's code, Arrow should be CartesianCategory, ArrowChoice should be CocartesianCategory, and ArrowApply should be CCC
[05:31:56] <EvanR> f-a, consider that you can draw a vertical line at any real number x, and how you do it results in better or worse results on very dense displays
[05:32:23] <EvanR> and the line has to have thickness to be seen
[05:37:12] <f-a> ;_; so many problems I do not think about
[05:39:40] <EvanR> i was happy on cairo back in the day when placing the line in the center of a pixel with width 1 worked xD
[05:40:14] <EvanR> today not so sure
[07:15:12] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:16:34] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[11:33:43] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[12:30:08] *** Quits: Vladislav[m] (~vlad20112@2001:470:69fc:105::1:4cef) (Quit: You have been kicked for being idle)
[12:34:39] *** Quits: tzh (~tzh@c-24-21-73-154.hsd1.wa.comcast.net) (Quit: zzz)
[12:40:21] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[13:11:51] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[14:17:44] *** Joins: __monty__ (~toonn@user/toonn)
[19:17:41] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Remote host closed the connection)
[19:19:14] *** Joins: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827)
[19:56:36] *** Joins: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net)
[21:22:27] *** Parts: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827) ()
[21:23:02] *** Joins: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827)
[22:47:32] *** Quits: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827) (Quit: coot)
