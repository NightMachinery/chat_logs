[01:25:03] <CarloWood> { unique_ptr<Foo, D> up = make_unique<Foo>(); } struct Foo {}; struct D { void operator()(Foo* p) const { BARK; } };
[01:25:03] <geordi> error: conversion from 'unique_ptr<[...],default_delete<Foo>>' to non-scalar type 'unique_ptr<[...],D>' requested
[01:25:17] <CarloWood> { unique_ptr<Foo, D> up = make_unique<Foo, D>(); } struct Foo {}; struct D { void operator()(Foo* p) const { BARK; } };
[01:25:17] <geordi> error: no matching function for call to 'make_unique<Foo, D>()'
[01:25:31] <CarloWood> { unique_ptr<Foo, D> up = new Foo; } struct Foo {}; struct D { void operator()(Foo* p) const { BARK; } };
[01:25:32] <geordi> error: conversion from 'Foo*' to non-scalar type 'unique_ptr<Foo, D>' requested
[01:25:50] <CarloWood> { unique_ptr<Foo, D> up(new Foo); } struct Foo {}; struct D { void operator()(Foo* p) const { BARK; } };
[01:25:51] <geordi> D::operator()(Foo*) const
[01:26:37] <CarloWood> { unique_ptr<Foo, D> up(new Foo); auto ptr = up.get(); up.get_deleter()(ptr); } struct Foo {}; struct D { void operator()(Foo* p) const { BARK; } };
[01:26:37] <geordi> D::operator()(Foo*) const D::operator()(Foo*) const
[01:27:27] <CarloWood> { unique_ptr<Foo, D> up(new Foo); auto ptr = up.release(); up.get_deleter()(ptr); } struct Foo {}; struct D { void operator()(Foo* p) const { BARK; } };
[01:27:28] <geordi> D::operator()(Foo*) const
[01:27:41] <CarloWood> { unique_ptr<Foo, D> up(new Foo); auto ptr = up.release(); up.get_deleter()(std::move(ptr)); } struct Foo {}; struct D { void operator()(Foo* p) const { BARK; } };
[01:27:42] <geordi> Same output.
[01:33:33] <CarloWood> { unique_ptr<Foo, D> up(new Foo); FooPtr ptr = up.release(); up.get_deleter()(std::move(ptr)); } struct Foo {}; struct FooPtr { FooPtr(Foo* p) : ptr(p) {} Foo* ptr; }; struct D { void operator()(FooPtr p) const { BARK; } };
[01:33:34] <geordi> D::operator()(FooPtr) const
[03:31:50] *** Joins: badone (~badone@209.132.189.136)
[04:00:45] *** Quits: enrico (~enrico@debian/enrico) (Ping timeout: 250 seconds)
[04:00:53] *** Joins: enrico (~enrico@debian/enrico)
[04:24:36] <great_taste> { foo(2, 3.4, "567", std::make_integer_sequence<size_t, 3>{}); } template<typename... Ts, size_t... Is> void foo(Ts... ts, std::integer_sequence<size_t, Is...>) { (bar<Ts>(ts, Is), ...); } template<typename T> void bar(T t, size_t i) { std::cout << i << "-" << t << "; "; }
[04:24:37] <geordi> error: no matching function for call to 'foo(int, double, const char [4], make_integer_sequence<long unsigned int, 3>)'
[04:26:40] <great_taste> { foo(std::make_integer_sequence<size_t, 3>{}, 2, 3.4, "567"); } template<typename... Ts, size_t... Is> void foo(std::integer_sequence<size_t, Is...>, Ts... ts) { (bar<Ts>(ts, Is), ...); } template<typename T> void bar(T t, size_t i) { std::cout << i << "-" << t << "; "; }
[04:26:40] <geordi> error: 'bar' was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation
[04:27:06] <great_taste> { foo(std::make_integer_sequence<size_t, 3>{}, 2, 3.4, "567"); } template<typename T> void bar(T t, size_t i) { std::cout << i << "-" << t << "; "; }  template<typename... Ts, size_t... Is> void foo(std::integer_sequence<size_t, Is...>, Ts... ts) { (bar<Ts>(ts, Is), ...); }
[04:27:07] <geordi> 0-2; 1-3.4; 2-567; 
[04:27:22] <great_taste> { foo(std::make_integer_sequence<size_t, 4>{}, 2, 3.4, "567"); } template<typename T> void bar(T t, size_t i) { std::cout << i << "-" << t << "; "; }  template<typename... Ts, size_t... Is> void foo(std::integer_sequence<size_t, Is...>, Ts... ts) { (bar<Ts>(ts, Is), ...); }
[04:27:23] <geordi> error: mismatched argument pack lengths while expanding 'bar<Ts>(ts, Is)'
[07:23:19] *** Quits: badone (~badone@209.132.189.136) (Quit: ZNC 1.7.5 - https://znc.in)
[11:13:31] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[21:41:41] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[22:26:32] *** Quits: rwb (~augh@alogs.space) (Quit: ZNC - https://znc.in)
[22:26:44] *** Joins: rwb (~augh@alogs.space)
[23:52:53] <CarloWood> << sizeof(wchar_t)
[23:52:54] <geordi> 4
