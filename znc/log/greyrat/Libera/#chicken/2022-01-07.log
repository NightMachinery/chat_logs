[00:06:35] *** mdhughes_ is now known as mdhughes
[00:12:53] *** Joins: ublx (~ublx@user/ublx)
[00:17:17] *** Joins: clacke (88d96f2df3@knopi.disroot.org)
[00:40:38] *** Quits: klovett (~klovett@166.205.110.2) (Quit: ZZZzzz…)
[00:41:04] <wasamasa> anyway
[00:41:26] <wasamasa> I wrote a program to extract spotify playlists using a slightly undocumented API
[00:41:42] <wasamasa> because they don't let you copy-paste them from their web player
[00:41:52] * wasamasa shakes fist at modern web development
[00:42:52] <fantazo> wasamasa: like old guys swearing at clouds? ;-)
[00:42:56] <wasamasa> I'm a pacifist, but this kind of stuff makes me want to go to whoever is the product manager responsible for that decision
[00:43:10] <wasamasa> and slap them in the face
[00:44:47] <fantazo> spotify is generally something which needs an accidentally napalm treatment, including lighting it by accident.
[00:44:54] <wasamasa> yeah
[00:45:11] <wasamasa> I'm kind of miffed that even on #emacs there's people defending it
[00:45:26] <wasamasa> "my disk is not large enough to hold as much music as spotify offers"
[00:48:29] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 268 seconds)
[00:53:31] *** Quits: alexshendi (~alexshend@HSI-KBW-078-043-040-177.hsi4.kabel-badenwuerttemberg.de) (Ping timeout: 256 seconds)
[00:59:18] <fantazo> wasamasa: well, that is also my problem, disk space. but until now I haven't had the urge to subscribe to spotify. but we live in times, where there is just too much sugar platforms. they are convenient and everything goes to hell.
[01:00:50] <fantazo> the dead thinkers of the computer revolution, turn in their graves and the still alive ones surely look down at it in pain.
[01:51:55] *** Joins: rgherdt_ (~rgherdt@2a02:8109:86c0:d8d:b566:ba1e:b76b:4040)
[01:53:57] *** Quits: rgherdt (~rgherdt@2a02:8109:86c0:d8d:98c5:85f6:eace:a4d7) (Ping timeout: 240 seconds)
[01:55:23] *** Joins: alexshendi (~alexshend@HSI-KBW-078-043-040-177.hsi4.kabel-badenwuerttemberg.de)
[02:19:57] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:9c74:da2:a180:c153)
[02:19:57] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:9c74:da2:a180:c153) (Changing host)
[02:19:57] *** Joins: skapata (~Skapata@user/skapata)
[02:25:42] <Zipheir> mario-goulart: When you have a chance, could you change the coop source URL for the srfi-137 egg to https://github.com/Zipheir/srfi-137 ?  This was one of those eggs that diamond-lizard orphaned last year, but it seems to still be using his repository.
[03:03:23] *** Quits: ublx (~ublx@user/ublx) (Quit: ublx)
[03:03:37] *** Quits: fantazo (~fantazo@192-164-154-92.hdsl.highway.telekom.at) (Ping timeout: 240 seconds)
[03:15:42] *** Quits: alexshendi (~alexshend@HSI-KBW-078-043-040-177.hsi4.kabel-badenwuerttemberg.de) (Quit: leaving)
[03:28:48] *** Quits: clacke (88d96f2df3@knopi.disroot.org) (Remote host closed the connection)
[03:47:53] *** Joins: klovett (~klovett@166.205.110.2)
[04:01:38] *** Joins: s-liao (~s-liao@101.86.96.21)
[04:30:00] *** Quits: mdhughes (~mdhughes@user/mdhughes) (Remote host closed the connection)
[05:10:49] <teiresias> Re: the url standards SSRF thing, I think WHATWG has done a good deal of harm in general.
[05:13:21] <teiresias> And LOL at "living standards".  Sounds like another take on move fast and break things.
[05:19:25] <florz> I think "oxymoron" is what you call that sort of phrase =:-)
[05:30:49] *** Joins: m455 (~m455@user/m455)
[06:07:55] *** Joins: monkey_ (~user@190.104.116.153)
[06:13:21] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[06:18:13] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[06:22:29] *** Joins: mdhughes (~mdhughes@user/mdhughes)
[06:42:32] *** Joins: s-liao (~s-liao@101.86.96.21)
[07:02:59] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[07:12:33] *** Joins: s-liao (~s-liao@101.86.96.21)
[07:43:28] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[08:42:26] *** Quits: klovett (~klovett@166.205.110.2) (Quit: ZZZzzz…)
[08:50:09] *** Joins: fantazo (~fantazo@192-164-154-92.hdsl.highway.telekom.at)
[10:52:03] *** Quits: fantazo (~fantazo@192-164-154-92.hdsl.highway.telekom.at) (Ping timeout: 256 seconds)
[11:19:40] *** Quits: mdhughes (~mdhughes@user/mdhughes) (Remote host closed the connection)
[11:20:15] *** Joins: mdhughes (mdhughes@user/mdhughes)
[11:29:39] *** Joins: shawnw (~shawn_w@c-73-225-121-73.hsd1.wa.comcast.net)
[12:20:52] *** Quits: idstam (~idstam@2.70.64.205.mobile.tre.se) (Quit: WeeChat 2.8)
[12:46:20] *** Joins: mdhughes_ (mdhughes@user/mdhughes)
[12:49:55] *** Quits: mdhughes (mdhughes@user/mdhughes) (Ping timeout: 256 seconds)
[13:05:53] *** Joins: andyjpb (~andyjpb@user/andyjpb)
[13:27:26] *** Joins: mdhughes (mdhughes@user/mdhughes)
[13:30:35] *** Quits: mdhughes_ (mdhughes@user/mdhughes) (Ping timeout: 256 seconds)
[13:56:53] *** Joins: alexshendi (~alexshend@2a00:20:3012:c19b:b1ee:3046:b56c:fe92)
[13:57:13] <alexshendi> Good Mahlzeit!
[13:58:32] *** Joins: fantazo (~fantazo@192-164-154-92.hdsl.highway.telekom.at)
[14:15:47] *** Quits: andyjpb (~andyjpb@user/andyjpb) (Quit: Connection closed)
[14:23:21] *** Joins: ublx (~ublx@user/ublx)
[14:31:13] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[14:40:20] *** Joins: s-liao (~s-liao@101.86.96.21)
[14:51:20] *** Joins: andyjpb (~andyjpb@user/andyjpb)
[14:56:46] *** Joins: alexshe92 (~alexshend@2a02:8070:8796:7600:ac52:ac40:4bab:b865)
[14:57:32] *** Joins: alexshe35 (~alexshend@2a00:20:3006:e8e5:da4f:c434:5af4:3b8c)
[14:58:12] *** Quits: alexshe92 (~alexshend@2a02:8070:8796:7600:ac52:ac40:4bab:b865) (Read error: Connection reset by peer)
[14:58:42] *** Joins: alexshe28 (~alexshend@hsi-kbw-046-005-255-019.hsi8.kabel-badenwuerttemberg.de)
[15:00:37] *** Quits: alexshendi (~alexshend@2a00:20:3012:c19b:b1ee:3046:b56c:fe92) (Ping timeout: 240 seconds)
[15:01:49] *** Quits: alexshe35 (~alexshend@2a00:20:3006:e8e5:da4f:c434:5af4:3b8c) (Ping timeout: 240 seconds)
[15:12:28] *** Joins: alexshendi (~alexshend@ip-109-43-177-190.web.vodafone.de)
[15:12:32] *** Quits: alexshe28 (~alexshend@hsi-kbw-046-005-255-019.hsi8.kabel-badenwuerttemberg.de) (Read error: Connection reset by peer)
[15:13:25] *** Joins: alexshe84 (~alexshend@HSI-KBW-046-005-255-019.hsi8.kabel-badenwuerttemberg.de)
[15:17:07] *** Quits: alexshendi (~alexshend@ip-109-43-177-190.web.vodafone.de) (Ping timeout: 256 seconds)
[15:17:40] *** Joins: ASau (~user@lmpc.drb.insel.de)
[15:30:21] *** Joins: alexshendi (~alexshend@2a02:8070:8796:7600:ac52:ac40:4bab:b865)
[15:30:21] *** Quits: alexshe84 (~alexshend@HSI-KBW-046-005-255-019.hsi8.kabel-badenwuerttemberg.de) (Read error: Connection reset by peer)
[15:40:28] *** Quits: curium (~curium@mail.clouded.monster) (Remote host closed the connection)
[15:40:47] *** Joins: curium (~curium@mail.clouded.monster)
[15:42:44] *** Quits: curium (~curium@mail.clouded.monster) (Remote host closed the connection)
[15:43:02] *** Joins: curium (~curium@mail.clouded.monster)
[15:54:01] *** Joins: jobol (~jobol@2a01:e34:ee5c:ee50:d6be:d9ff:fea3:db03)
[16:25:38] <s-liao> wasamasa in the chicken, there is an egg s11n for the serialization and deserialize. The solution of the json-serialize and json-parse-string in Elisp of Emacs is kind of got me confused.
[16:26:21] <s-liao> Do you have a time to take a look?
[16:31:46] <wasamasa> nope
[16:32:05] <wasamasa> you go and figure out the wonders of language and meaning yourself 
[16:32:27] <wasamasa> because I gotta go
[16:34:37] <s-liao> Take your time
[16:35:02] <s-liao> Have a good day.
[17:02:06] <vandusen> SPAM! SPAM! SPAM! by freeee
[17:34:10] *** Joins: mdhughes_ (mdhughes@user/mdhughes)
[17:37:37] *** Quits: mdhughes (mdhughes@user/mdhughes) (Ping timeout: 240 seconds)
[17:39:36] <vandusen> SPAM! SPAM! SPAM! by freeee
[17:45:38] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[17:58:36] *** Joins: klovett (~klovett@166.205.110.2)
[18:14:38] *** Quits: shawnw (~shawn_w@c-73-225-121-73.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[18:33:13] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:193a:8038:cdb2:3b71)
[18:33:13] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:193a:8038:cdb2:3b71) (Changing host)
[18:33:13] *** Joins: skapata (~Skapata@user/skapata)
[18:36:55] *** Quits: Vultyre (~vultyre@user/vultyre) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[18:39:29] *** Joins: Vultyre (~vultyre@user/vultyre)
[18:50:38] *** Quits: ASau (~user@lmpc.drb.insel.de) (Read error: Connection reset by peer)
[18:53:46] *** Joins: ASau (~user@lmpc.drb.insel.de)
[19:51:14] *** Quits: andyjpb (~andyjpb@user/andyjpb) (Quit: Connection closed)
[19:56:55] *** Joins: andyjpb (~andyjpb@user/andyjpb)
[20:40:31] *** Joins: skapate (~Skapata@2804:14c:87b0:a6f9:406a:ebc:a997:9963)
[20:40:31] *** Quits: skapate (~Skapata@2804:14c:87b0:a6f9:406a:ebc:a997:9963) (Changing host)
[20:40:31] *** Joins: skapate (~Skapata@user/skapata)
[20:42:57] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 240 seconds)
[20:50:25] *** Joins: alexshe53 (~alexshend@2a00:20:3012:1a8e:ee08:b9ca:c3c1:f35f)
[20:52:17] *** Quits: alexshendi (~alexshend@2a02:8070:8796:7600:ac52:ac40:4bab:b865) (Ping timeout: 240 seconds)
[20:58:00] *** Joins: alexshendi (~alexshend@2a02:8070:8796:7600:ac52:ac40:4bab:b865)
[21:01:28] *** Quits: alexshe53 (~alexshend@2a00:20:3012:1a8e:ee08:b9ca:c3c1:f35f) (Ping timeout: 268 seconds)
[21:18:53] *** Joins: mdhughes (~mdhughes@user/mdhughes)
[21:22:37] *** Quits: mdhughes_ (mdhughes@user/mdhughes) (Ping timeout: 256 seconds)
[21:25:59] *** Joins: a333 (~a88@gateway/tor-sasl/a88)
[21:27:28] *** Quits: a88 (~a88@gateway/tor-sasl/a88) (Remote host closed the connection)
[21:27:46] *** Joins: alexshe39 (~alexshend@HSI-KBW-046-005-255-021.hsi8.kabel-badenwuerttemberg.de)
[21:30:03] <vandusen> [eggs repo (r40985, by mario)] release/5/egg-locations: update location of srfi-137
[21:30:23] <mario-goulart> Zipheir: done.  Thanks for taking over the maintenance.
[21:31:17] *** Quits: alexshendi (~alexshend@2a02:8070:8796:7600:ac52:ac40:4bab:b865) (Ping timeout: 240 seconds)
[21:59:28] <Zipheir> mario-goulart: Thanks!
[22:00:57] <mario-goulart> yw
[22:13:11] <vandusen> [eggs] srfi-137 version 0.2 (for CHICKEN 5) has been released
[22:21:42] *** Quits: alexshe39 (~alexshend@HSI-KBW-046-005-255-021.hsi8.kabel-badenwuerttemberg.de) (Ping timeout: 256 seconds)
[22:21:51] <Zipheir> So there are two string libraries, srfi-130 and srfi-152, that rely on R7RS and SRFI 13 string procedures.  Do people like the idea of basing these libraries on the utf8 egg, instead of on good ol' ASCII CHICKEN core and srfi-13?
[22:23:09] <Zipheir> This does make it a little more complicated to import them, but I think Unicode support is pretty crucial.
[22:31:33] *** Joins: alexshendi (~alexshend@HSI-KBW-046-005-255-021.hsi8.kabel-badenwuerttemberg.de)
[22:45:42] <vandusen> [eggs repo (r40986, by Zipheir)] Rewrite page.
[22:55:58] <jcroisant> Would the CHICKEN team be interested in a patch to add a `locative-index` procedure that returns the index of a locative? My use case is when I have a locative of a blob that contains a C array, I would like to create a new locative with an increased index compared to the original locative, for making subarrays (and subarrays of subarrays). Currently I need to store the original index separately, which is a bit redundant.
[23:01:06] <Bunny351> jcroisant: you could post it on chicken-hackers and we have a look
[23:02:11] <jcroisant> Bunny351: Right now I am just starting, and wondering if it is worth the effort
[23:02:13] *** a333 is now known as a88
[23:02:46] <jcroisant> If it is a feature you don't want, I will save myself some trouble :)
[23:04:12] <Bunny351> not sure if I understand the exact semantics
[23:04:24] <Bunny351> can you show a usage example?
[23:09:55] <jcroisant> Suppose I have `(define loc (make-locative blob 32))`. That points to the blob with an offset of 32 bytes. Now suppose I want a locative that points to the same blob, but with an *additional* offset of 64 bytes (total 96 bytes). With the new feature I could do `(make-locative (locative->object loc) (+ 64 (locative-index loc)))`
[23:10:49] <jcroisant> Without the feature I need to store somewhere that the original locative was at offset 32
[23:11:04] *** Parts: a88 (~a88@gateway/tor-sasl/a88) (Leaving)
[23:14:35] *** Joins: a333 (~a88@gateway/tor-sasl/a88)
[23:21:21] <jcroisant> The reason I want to do this is so that if the blob contains a C array, I would make a "view" into part of the C array, without copying. For example if the array is a 3D grid, I could make a view that exposes only a single 2D plane. Then maybe I want to make a view that exposes only a single row of that 2D plane. I need to store the byte offsets somewhere. Since the locative already stores the offset, it would be nice to just retrieve it.
[23:24:17] <jcroisant> This could also be used to get views into SRFI-4 numeric arrays, or strings
[23:28:19] <jcroisant> Currently locatives actually store the byte offset, not the index that was passed as an argument, but the index can be easily derived from the byte offset and the data type, so it's not necessary to change the data layout of locatives
[23:30:32] *** Quits: skapate (~Skapata@user/skapata) (Ping timeout: 240 seconds)
[23:37:00] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:8d19:f7a3:b91b:6462)
[23:37:00] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:8d19:f7a3:b91b:6462) (Changing host)
[23:37:00] *** Joins: skapata (~Skapata@user/skapata)
[23:38:00] *** Quits: ASau (~user@lmpc.drb.insel.de) (Read error: Connection reset by peer)
[23:40:32] *** Joins: ASau (~user@lmpc.drb.insel.de)
[23:50:44] *** Joins: ublix (~ublx@user/ublx)
[23:52:17] *** Quits: ublx (~ublx@user/ublx) (Ping timeout: 240 seconds)
[23:52:22] *** Quits: m455 (~m455@user/m455) (Ping timeout: 256 seconds)
[23:59:14] <Bunny351> sounds convenient
