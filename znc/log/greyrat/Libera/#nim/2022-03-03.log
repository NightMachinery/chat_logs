[00:04:11] <FromDiscord> <sOkam!> Is this the same concept as the (deprecated) nimgen way of translating code? https://media.discordapp.net/attachments/371759389889003532/948679637750411264/unknown.png
[00:06:09] <FromDiscord> <sOkam!> Basically trying to understand if nimterop still has support for code translation in some way, or if I should stay to raw c2nim or nimgen for that
[00:06:46] <shadow0133> so, mitems doesn't work, but `for (_, x) in seq.pairs` does ¯\_(ツ)_/¯
[00:14:05] <FromDiscord> <sOkam!> nvm i think this answered it https://media.discordapp.net/attachments/371759389889003532/948682127438913566/unknown.png
[00:23:23] *** Quits: cornfeedhobo (~cornfeedh@user/cornfeedhobo) (Ping timeout: 272 seconds)
[00:25:06] <shadow0133> hmm, it doesn't work for now, but thanks for help @dom96 and @Prestige
[00:27:58] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[00:29:27] *** Quits: shadow0133 (~shadow013@194.146.248.72) (Quit: Client closed)
[00:32:48] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Client Quit)
[00:33:14] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[00:39:09] *** Joins: cornfeedhobo (~cornfeedh@user/cornfeedhobo)
[00:40:11] <FromDiscord> <Skaruts> how do I add something to the beginning of a sequence?
[00:40:33] <FromDiscord> <Skaruts> at index 0
[00:45:42] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[00:49:54] <FromDiscord> <exelotl> In reply to @Skaruts "how do I add": https://nim-lang.org/docs/system.html#insert%2Cseq%5BT%5D%2CsinkT
[00:50:13] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 240 seconds)
[00:51:18] <FromDiscord> <Phil> In reply to @dom96 "you can throw multiple": Thanks for the info!
[00:51:56] <FromDiscord> <Skaruts> @exelotl  Ah! I had only found `insert` in sequtils. Thanks.
[00:52:00] <nrds> <06Prestige99> Is there a way to do something like this? https://play.nim-lang.org/#ix=3RcS
[00:52:10] <nrds> <06Prestige99> Maybe need to write some sort of macro
[00:52:36] <FromDiscord> <b4mbus> How do I achieve something similiar to this C++ code but in Nim? Someone pointed me to `method`s but Im incredibely confused how they work and how I should use them
[00:52:48] <FromDiscord> <b4mbus> sent a code paste, see https://play.nim-lang.org/#ix=3RcT
[00:54:26] <FromDiscord> <b4mbus> (edit) "https://play.nim-lang.org/#ix=3RcT" => "https://play.nim-lang.org/#ix=3RcU"
[01:03:20] <FromDiscord> <exelotl> In reply to @b4mbus "How do I achieve": Like this: https://play.nim-lang.org/#ix=3RcW
[01:04:00] <FromDiscord> <b4mbus> oh, so Nim doesnt have a concept of a pure virtual function/pure method
[01:04:15] <FromDiscord> <b4mbus> thanks a lot
[01:05:59] <FromDiscord> <exelotl> yeah I think it doesn't
[01:09:15] <FromDiscord> <Rika> Not without external libraries
[01:12:15] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 240 seconds)
[01:17:08] *** Joins: rockcavera (~rc@192.12.113.198)
[01:17:08] *** Quits: rockcavera (~rc@192.12.113.198) (Changing host)
[01:17:08] *** Joins: rockcavera (~rc@user/rockcavera)
[01:17:10] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:19:15] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[01:41:51] *** Quits: gsalazar (~gsalazar@194.38.148.130) (Ping timeout: 256 seconds)
[01:49:35] *** Joins: sagax (~sagax_nb@user/sagax)
[01:52:23] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[01:54:19] *** Quits: cornfeedhobo (~cornfeedh@user/cornfeedhobo) (Ping timeout: 256 seconds)
[02:03:17] <FromDiscord> <kbsec> What exactly does `{.pure.}` pragma do?  I have a small demo here https://play.nim-lang.org/#ix=3Rd1 where I would expect the runtime identifier for the attribute in the object defined with `{.pure.}`  for each field to be ommited,  but it would seem the object is the same  w/ or w/out the pragma ?
[02:05:25] <FromDiscord> <zidsal> Quick question, I have a seq of a variant type e.g JsonNode and I know for a fact they are all JInt. Is there a way I can tell the compiler I know what the kind is without manually checking the enum value?
[02:13:12] *** Joins: cornfeedhobo (~cornfeedh@user/cornfeedhobo)
[02:18:28] <FromDiscord> <Elegantbeef> It removes runtime type information on objects that are inheritable↵(@kbsec)
[02:19:08] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/manual.html#types-cast-uncheckedassign i think this works↵(@zidsal)
[02:22:03] <FromDiscord> <ATwenty0ne> sent a code paste, see https://paste.rs/Xuk
[02:22:25] <FromDiscord> <ATwenty0ne> sent a code paste, see https://play.nim-lang.org/#ix=3Rd4
[02:22:43] <FromDiscord> <ATwenty0ne> (edit) "https://play.nim-lang.org/#ix=3Rd4" => "https://play.nim-lang.org/#ix=3Rd5"
[02:23:00] <FromDiscord> <Elegantbeef> that offsets the ptr of `x` by w so in nim i'd be `int (cstrLen(x[w].addr))`
[02:23:28] <FromDiscord> <Elegantbeef> or you could just do `cstrlen(x) - w`
[02:23:46] <FromDiscord> <Elegantbeef> Actually i'm wrong arent i
[02:23:49] <FromDiscord> <demotomohiro> In reply to @kbsec "What exactly does `{.pure.}`": https://play.nim-lang.org/#ix=3Rd6
[02:24:09] <FromDiscord> <Elegantbeef> it's offsetting the char\ by `w` so it'd be `cast[ptr UncheckedArray[cstring]](x)[w]`
[02:28:00] <FromDiscord> <Elegantbeef> that's still not right God C can be awful
[02:28:05] <FromDiscord> <demotomohiro> I think `strSize = x.len - w`.
[02:28:13] <FromDiscord> <ATwenty0ne> lol yea this one is a head scratcher
[02:28:23] <FromDiscord> <Elegantbeef> No `w` is a pointer
[02:28:27] <FromDiscord> <Elegantbeef> I mean x is a pointer
[02:28:30] <FromDiscord> <Elegantbeef> `x + w` offsets the pointer by w bytes
[02:29:27] <FromDiscord> <Elegantbeef> so the best thing to do i guess is manual arithmetic `cstrlen(cast[cstring](cast[int](x) + w)))`
[02:29:54] <FromDiscord> <zidsal> Thanks @ElegantBeef
[02:30:23] <FromDiscord> <Elegantbeef> That should work twentyone, sorry for the 30 wrong answers 😛
[02:30:39] <FromDiscord> <ATwenty0ne> lol its ok, I appreciate you helping, thanks!
[02:31:37] <FromDiscord> <Elegantbeef> I fully blame C's inanity
[02:31:57] <FromDiscord> <Elegantbeef> Also are you interoping with C or writing pure Nim?
[02:34:25] <FromDiscord> <ATwenty0ne> interoping
[02:36:11] *** Joins: girvo (~default@125.119.218.139.dyn.wbroadband.net.au)
[02:46:24] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[02:47:01] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[03:05:35] <girvo> Hi all :)
[03:06:20] <FromDiscord> <Elegantbeef> Hello
[03:06:40] <girvo> Anyone have a good example for Nim-ified wrappers of C libraries that take callbacks? I'm having issues passing procs to a {.cdecl.} wrapper, as trying to call a proc declared outside of it is an illegal capture
[03:06:47] <girvo> Theres gotta be a better way I'm missing
[03:06:55] <FromDiscord> <Elegantbeef> Cdecls cannot have captures
[03:07:12] <FromDiscord> <Elegantbeef> Closures are incompatible with cdecl due to the environment carried with them
[03:07:18] <girvo> Yeah figured as much
[03:07:36] <FromDiscord> <Elegantbeef> What's your callback and what's your code trying to do?
[03:07:45] <girvo> One tick I'll grab the definitions in a pastebin for ya
[03:09:45] <girvo> https://pastebin.com/j9trbgGQ
[03:10:20] <girvo> `var t = newTask(sendAT, "sendAT", (16384 * 3).SzBytes)` is what I wanted to achieve lol where sendAt is just a regular void proc
[03:10:47] <FromDiscord> <Elegantbeef> Can you store `cb` on the object that's passed to the procedure?
[03:10:58] <girvo> I can actually
[03:11:05] <girvo> Oh!
[03:11:08] <girvo> I see :D
[03:11:08] <FromDiscord> <Elegantbeef> so like could you do `cast[MyObject](a1).cb()`
[03:11:10] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:11:15] <FromDiscord> <Elegantbeef> well `ptr MyObject`
[03:11:16] <girvo> Yeah I should be able to. I'll give it a shot
[03:11:35] <FromDiscord> <Elegantbeef> Your `pointer` is your closure environment somewhat
[03:12:15] <girvo> Yep that's exactly how FreeRTOS uses it
[03:13:25] <girvo> Hah she compiles at least
[03:13:35] <girvo> Lets see if it runs or blows my tiny stack. Embedded is fun
[03:13:45] <FromDiscord> <System64 ~ Flandre Scarlet> https://nimble.directory/pkg/dimscord↵Does it support the latest Discord API features?
[03:16:21] <FromDiscord> <Elegantbeef> You could make a macro like `proc doThing(a1: Task) {.rtosProc.}` which emits a `let a1 = cast[ptr Task](a1)` and adds `cdecl` to the procedure to make it a bit cleaner but ymmv 🙂
[03:17:50] <girvo> Ohhh that's a good idea too
[03:18:28] <girvo> I plan on doing my best to make working with FreeRTOS in ESP32 as nice as possible in Nim land lol
[03:18:43] <FromDiscord> <Elegantbeef> Then that macro sounds pretty nice 🙂
[03:18:44] <girvo> Because doing it in straight C is painful at best
[03:19:58] <girvo> Interesting, it created the task! and it ran! once lol. I gotta have a look at what it's doing, likely my destructor/scoping causing it to delete itself I reckon
[03:20:49] <girvo> Hahaha yeah
[03:21:14] <girvo> I gotta brush up on scoping in Nim with ARC nowadays
[03:22:31] <girvo> https://pastebin.com/aqqMUXgd that's the main.nim app code
[03:22:53] <girvo> https://pastebin.com/qqy97X0P
[03:22:59] <girvo> xTaskCreate wrapper
[03:23:25] <girvo> Despite the while true: in the cb proc, it amusingly runs once then `=destroy` is called
[03:23:36] <girvo> Because I'm definitely misunderstanding how one should approach this ;)
[03:24:24] <FromDiscord> <Elegantbeef> At the end of `appMain` it'll destroy `task`
[03:24:38] <nrds> <06Prestige99> Is there a non-reentrant lock in the stdlib?
[03:26:02] <girvo> Yeah. I gotta look into FreeRTOS and work out how the "main thread" stuff works. I could put a while true in app_main as well, though I remember FreeRTOS saying not to?
[03:27:19] <girvo> Hah yeah. A simple white true: triggers the FreeRTOS task watchdog
[03:27:30] <girvo> Time to go look at some documentation I think
[03:28:05] <girvo> I suppose I could skip the RAII-like destructor and just make it an explicit delete proc on the task object for now
[03:32:01] <girvo> Unrelated, but my favourite thing in the world is UART suddenly no longer responding with anything I expect lol
[03:33:06] <girvo> Haha and _now_ it works. Oh joy
[03:33:10] <girvo> Hardware is "fun"
[03:37:31] <girvo> Aside from the explicit destructor on the Task object, it is working nicely. Cheers for the help!
[03:58:04] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 272 seconds)
[03:58:48] <FromDiscord> <Elegantbeef> This did give me an excuse to play around with my toy typed macros module
[03:59:19] *** Joins: krux02_ (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de)
[03:59:21] <FromDiscord> <Elegantbeef> Surprisingly simple implementation https://play.nim-lang.org/#ix=3Rdj
[03:59:53] *** Quits: krux02 (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[04:01:49] <girvo> Oh nice!
[04:01:57] <girvo> Definitely gonna borrow that if you don't mind ;)
[04:02:09] <FromDiscord> <Elegantbeef> Well it's not public yet so no you arent 😛
[04:02:56] <girvo> bwahaha
[04:03:19] <girvo> One day then :) your implementation is much more elegant than mine, though it is somewhat working
[04:04:57] <girvo> I distinctly remember using a library that enabled typed macros (different syntax mind you) way back whe
[04:05:00] <girvo> when*
[04:05:55] <girvo> Although I have a feeling it may have just been faking it. I do remember it gave crazy weird compile errors. I'm gonna go look at my old projects, this is going to annoy me otherwise if I can't remember it
[04:06:23] <FromDiscord> <Elegantbeef> There have been some implementations of macro utillities for a while, so dont doubt it
[04:07:03] <girvo> One thing I definitely need to do is brush up on whats changed. The last production usage I had of Nim was when v1 had literally just been released
[04:08:01] <FromDiscord> <Elegantbeef> I've been wanting a typed macro API for a while, also wanting more utilities for a long time, the stdlib macros lacks a lot of nice features.
[04:08:05] <FromDiscord> <Elegantbeef> I'd say not much has really changed
[04:10:03] <girvo> Yeah macros are powerful but they were definitely a bit lacking in some ergonomics compared to other parts of the language
[04:10:20] <girvo> And yeah that's so far what I've seen! Most of what I've been writing with my old knowledge is working fine lol
[04:16:04] <FromDiscord> <auxym> eli5 (or something)? What's a typed macro, vs the untyped macro that I'm somewhat used to?
[04:16:21] <FromDiscord> <Elegantbeef> Well that's not what we're talking about
[04:16:28] <FromDiscord> <Elegantbeef> Typed macros are semantically checked
[04:16:44] <FromDiscord> <Elegantbeef> A typed macro api is api that uses static typing with Nim nodes to make it more expressive and ergonomic
[04:20:21] <FromDiscord> <Elegantbeef> typed macros let you introspect types and do all the fancy jazz of macros on a typed nodes
[04:26:23] <FromDiscord> <auxym> ah, I sort of of get it, I think.  So sort of one level higher than  plain AST (aka untyped)?
[04:30:24] <FromDiscord> <Elegantbeef> Dont follow
[04:31:06] <girvo> My destructor for Task now works correctly, now that I fixed my main loop :)
[04:31:12] <FromDiscord> <Elegantbeef> typed macros are ran later than untyped macros so have type information they can use, the typed macro api uses distinct to give more(and safe) functionality to Nim nodes
[04:37:31] *** Quits: girvo (~default@125.119.218.139.dyn.wbroadband.net.au) (Read error: Connection reset by peer)
[04:44:18] *** Quits: krux02_ (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de) (Remote host closed the connection)
[04:49:40] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[04:51:49] <FromDiscord> <Elegantbeef> @auxym\: here's an example of my typed api https://play.nim-lang.org/#ix=3Rdt
[04:55:05] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[05:12:17] *** Joins: girvo (~default@125.119.218.139.dyn.wbroadband.net.au)
[05:12:17] *** Quits: girvo (~default@125.119.218.139.dyn.wbroadband.net.au) (Client Quit)
[05:12:48] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[05:12:56] *** Joins: girvo (~default@125.119.218.139.dyn.wbroadband.net.au)
[05:38:20] *** Joins: vicfred (~vicfred@user/vicfred)
[05:54:49] <NimEventer> New question by itil memek cantik: Simple syntax to print out Nim address, see https://stackoverflow.com/questions/71331415/simple-syntax-to-print-out-nim-address
[05:55:14] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 272 seconds)
[05:58:10] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[05:58:17] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[06:00:10] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[06:06:04] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[06:13:50] <girvo> That's an interesting SO question. Best I can come up with is `echo fmt"{cast[int](addr(s)):#x}"` where s is the variable. Is there a better way?
[06:13:56] <FromDiscord> <cvv.tracy> sent a code paste, see https://paste.rs/nTx
[06:14:04] <FromDiscord> <cvv.tracy> whats going wrong?
[06:14:06] <FromDiscord> <cvv.tracy> sent a code paste, see https://play.nim-lang.org/#ix=3RdC
[06:14:45] <FromDiscord> <cvv.tracy> nvm i used the wrong cpu
[06:16:49] *** Quits: Gustavo6046_ (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[06:17:10] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[06:18:48] <FromDiscord> <Elegantbeef> `echo cast[int](s.addr).toHex` is the way to do it imo
[06:21:05] <girvo> Oh that's way nicer
[06:21:21] <girvo> Is repr identical in output to that?
[06:21:33] *** Quits: girvo (~default@125.119.218.139.dyn.wbroadband.net.au) (Read error: Connection reset by peer)
[06:22:02] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[06:23:29] <FromDiscord> <Elegantbeef> no repr is generally more explanitive
[06:25:05] <FromDiscord> <Girvo> Yeah makes sense
[07:12:06] *** Joins: khole (~khole@217.146.83.196)
[07:15:01] <FromDiscord> <MaskDuck> what is the different between `let` and `const`?
[07:15:11] <FromDiscord> <Elegantbeef> let is runtime, const is compile time
[07:16:03] <FromDiscord> <congusbongus> const is more like constexpr in C++↵and not at all like javascript's let and const, despite the same names
[07:21:41] <FromDiscord> <MaskDuck> In reply to @congusbongus "const is more like": well
[07:21:47] <FromDiscord> <MaskDuck> what is similar with it in python
[07:22:35] <FromDiscord> <Elegantbeef> python doesnt even have immutable variables afaik
[07:22:38] <FromDiscord> <huantian> python variables are all var
[07:23:51] <FromDiscord> <huantian> technically `let` is `typing.Final`, but `typing.Final` is only enforced by a static type checker, while `let` is enforced by the language
[07:26:20] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:26:39] <FromDiscord> <MaskDuck> ah ok thanks
[07:26:48] <nrds> <06Prestige99> Is there a simple way to implement items and mitems as T vs lent T without duplicating the code? I could write a template, but am curious about alternatives
[07:26:53] <FromDiscord> <MaskDuck> In reply to @Elegantbeef "python doesnt even have": python right now is the only language i know
[07:27:14] *** Joins: khole_ (~khole@217.146.83.196)
[07:27:34] *** Quits: khole_ (~khole@217.146.83.196) (Remote host closed the connection)
[07:27:38] *** Quits: khole (~khole@217.146.83.196) (Quit: Leaving)
[07:30:51] <FromDiscord> <Girvo> Are there any good documents on ref objects/mem management in general with ARC and threads?
[07:31:05] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[07:34:37] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:36] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[07:40:13] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:40:27] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[07:42:40] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[07:43:12] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[07:44:56] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[08:03:13] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[08:22:39] <NimEventer> New thread by Prestige: Can there be an else clause on a template (or macro)?, see https://forum.nim-lang.org/t/8970
[08:23:08] <FromDiscord> <Elegantbeef> Prestige use `do`
[08:23:45] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3RdU
[08:25:05] <nrds> <06Prestige99> Ah, so that's what I'd seen before
[08:25:20] <nrds> <06Prestige99> the `do` keyword is a bit weird here eh
[08:26:08] <FromDiscord> <Rika> not really, why?
[08:26:17] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[08:26:20] <FromDiscord> <Elegantbeef> named do blocks do have a RFC iirc
[08:26:25] <nrds> <06Prestige99> From a reading perspective
[08:26:32] <FromDiscord> <Rika> i guess so
[08:26:32] <nrds> <06Prestige99> Neat, that will be nice
[08:26:42] <FromDiscord> <Rika> beef can you link the rfc xd
[08:28:38] <FromDiscord> <Elegantbeef> Cant find it, might be a fever dream
[08:29:36] <FromDiscord> <Rika> beef dreams of amazing RFCs at night
[08:53:47] *** Quits: nrds (~NimBot@ns501209.ip-142-4-210.net) (Remote host closed the connection)
[08:56:50] *** Joins: nrds (~NimBot@ns501209.ip-142-4-210.net)
[09:01:13] <FromDiscord> <Elegantbeef> Ah was a forum post https://forum.nim-lang.org/t/8259#53171
[09:06:45] <nrds> <06Prestige99> ah, the same use case https://forum.nim-lang.org/t/8259#53165
[09:21:56] <FromDiscord> <Rika> Else is not a good alternative
[09:22:02] <FromDiscord> <Rika> It’s less general than do
[09:27:53] *** Quits: jkl (~jkl@user/jkl) (Quit: Gone.)
[09:28:18] *** Joins: jkl (~jkl@user/jkl)
[09:42:30] <nrds> <06Prestige99> Yeah, I think I don't completely understand templates
[09:42:53] <nrds> <06Prestige99> I was expecting the code to be inlined so I could just naturally use `else`
[09:43:26] <FromDiscord> <Elegantbeef> The AST still needs to be valid
[09:44:00] <FromDiscord> <Elegantbeef> It's more about the AST than templates, the template emits a `ifStmt(elifBranch)`
[09:44:08] <nrds> <06Prestige99> the else in my example seems to be included in the `body` right?
[09:44:12] <FromDiscord> <Elegantbeef> there is no way for code after that `ifStmt` to add `else` to that AST
[09:44:17] <nrds> <06Prestige99> ah, I see
[09:44:22] <FromDiscord> <Elegantbeef> No in your example else is another stmt
[09:44:43] <FromDiscord> <Elegantbeef> So you just have an else statement in top level
[09:45:00] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Rec
[09:45:01] <nrds> <06Prestige99> Well damn
[09:48:08] <FromDiscord> <Elegantbeef> sent a code paste, see https://paste.rs/LNY
[10:27:21] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[10:28:11] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[10:37:19] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95)
[10:49:15] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 256 seconds)
[11:15:17] *** Joins: PMunch (~PMunch@user/pmunch)
[11:25:55] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[11:26:57] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[11:27:27] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[11:31:44] *** Joins: krux02 (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de)
[11:35:08] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:07:39] <PMunch> It's quite annoying that you can't name your secondary blocks
[12:07:53] <PMunch> It's one of the few things you can't do in Nim, that and create other proc types..
[12:08:22] <PMunch> But no-one liked my arbitrary proc-type RFC..
[12:09:07] <FromDiscord> <Elegantbeef> I do like it, but quickly becomes very messy
[12:09:33] <PMunch> How so?
[12:12:48] <FromDiscord> <Elegantbeef> Well it gets harder to distinguish a proc def from a general call i think
[12:13:10] <PMunch> A general call?
[12:13:17] <FromDiscord> <Elegantbeef> `myProctype someThing(a, b)` for instance
[12:13:27] <FromDiscord> <Elegantbeef> I'm probably wrong
[12:13:43] <FromDiscord> <Elegantbeef> But i do very much like it, and personally thing it's better than pragmas
[12:14:03] <FromDiscord> <Elegantbeef> think\
[12:14:16] <FromDiscord> <Rika> I don’t like it for as long as the keyword proc is omitted…
[12:14:18] <PMunch> It just feels a bit artificial that this thing is one of the few parts of the syntax we can't change
[12:14:23] <FromDiscord> <Rika> And even if not I’m still on the fence
[12:14:34] <PMunch> Like anything signature-like is off-limits
[12:14:34] <FromDiscord> <Rika> I do agree though I’m not really a fan of the pragma syntax either
[12:14:52] <FromDiscord> <Elegantbeef> I find pragmas very ill-eloquent but there isnt a good solution that i can see
[12:15:00] <FromDiscord> <Rika> Pretty much
[12:15:04] <FromDiscord> <Elegantbeef> I dont like C#/Rusts' preannotations either
[12:15:21] <PMunch> I've wanted to create HTTP routes in a framework as something signature-like, but I can't because the `proc (args): ret =` syntax is so fixed and locked off
[12:15:26] <FromDiscord> <Rika> By extension, Python decorators too?
[12:15:36] <FromDiscord> <Elegantbeef> yea
[12:15:47] <FromDiscord> <Elegantbeef> It's the same thing with `let`
[12:16:43] <FromDiscord> <Rika> I’m not sure, I think I would prefer decorators for less than 4 or so pragma combinations
[12:17:07] <FromDiscord> <Rika> Again though it’s hard to bolt that on to the syntax
[12:17:33] <PMunch> Personally I'd want `proc`, `let`, `var` etc. to all be the same "blockStmt" node kind and have as their first ident their name. Then let procs be the same node kind as assignments, a blockStmt with a `proc` ident, followed by an identDef with a bracket node with identDefs and the return type, and all that in an nnkAsgn to the stmtList of the body
[12:17:33] <FromDiscord> <Elegantbeef> Well the benefit of annotations is that they happen on their own line, so that's nice to reduce proc def noise
[12:18:18] <PMunch> This would have the weird side-effect that `proc` could also be used on a block of things though..
[12:18:38] <FromDiscord> <Elegantbeef> I dont think it's that weird
[12:20:54] *** Joins: gsalazar (~gsalazar@213.58.201.38)
[12:22:02] <PMunch> Well maybe not weird, but certainly a bit foreign
[12:25:07] <FromDiscord> <Rika> Not very weird I’d say
[12:25:31] <PMunch> Well maybe not with a proc or two
[12:25:59] <PMunch> But imagine a whole standard library module with just one `proc` at the top, and then every definition in just one massive block below
[12:26:32] <FromDiscord> <Elegantbeef> Imagine one type def in just a single block 😛
[12:27:13] <PMunch> Haha, fair enough
[12:28:17] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[12:28:24] <FromDiscord> <Rika> Type blocks are already weird outside of Nim though no?
[12:28:43] <FromDiscord> <Elegantbeef> You mean in that they dont exist?
[12:36:16] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 250 seconds)
[12:51:08] <PMunch> The only problem with my idea (apart from having to rewrite a bunch of stuff, is that it would be very tedious to have to verify if something is a procedure definition
[12:51:20] <PMunch> But all that could be solved by better macro tools
[12:51:35] <PMunch> It would break every single existing macro though
[12:51:47] <PMunch> Well, not every single one, but a lot of them
[13:11:29] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[13:27:49] *** Joins: msimm (~msimm@p200300cd4701a600ccdd4792351c1b11.dip0.t-ipconnect.de)
[13:29:31] <PMunch> Hmm, is there a way to write to terminal without a newline in a macro?
[13:29:44] <PMunch> stdout.write complains that it can't importc stdout on compile-time..
[13:31:48] <FromDiscord> <Elegantbeef> Short of printing a character that ignores `\n` i dont think so
[13:35:18] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[13:48:53] *** Quits: gsalazar (~gsalazar@213.58.201.38) (Ping timeout: 256 seconds)
[13:58:52] *** Quits: msimm (~msimm@p200300cd4701a600ccdd4792351c1b11.dip0.t-ipconnect.de) (Quit: Leaving)
[14:23:09] <PMunch> Uhm, can't we print uints any longer? http://ix.io/3ReD
[14:24:00] *** Joins: gsalazar (~gsalazar@213.58.201.38)
[14:25:39] <PMunch> Tried to throw a dollar in there: http://ix.io/3ReE
[14:27:15] <FromDiscord> <planetis> weird
[14:28:25] <FromDiscord> <planetis> works for me for both uint and uint64
[14:30:08] *** Quits: gsalazar (~gsalazar@213.58.201.38) (Ping timeout: 272 seconds)
[14:33:46] <FromDiscord> <Rika> theres prolly a converter in macros that does uint->nimnode for some reason
[14:34:25] <NimEventer> New question by itil memek cantik: To reset Nim runtime array, see https://stackoverflow.com/questions/71336036/to-reset-nim-runtime-array
[14:35:19] <FromDiscord> <Rika> we already answered this...
[14:41:05] <FromDiscord> <demotomohiro> He/She think he get better answer on stackover flow rather than Nim discord or Nim forum?
[14:43:37] <FromDiscord> <Rika> idk
[15:29:45] <PMunch> I think my system is a bit broken: http://ix.io/3ReQ
[15:30:55] <FromDiscord> <Rika> sus
[15:31:33] *** Quits: tinystoat (~squeek@user/tinystoat) (Remote host closed the connection)
[15:31:41] *** Joins: tinystoat (~squeek@user/tinystoat)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:40:40] *** Quits: tinystoat (~squeek@user/tinystoat) (Quit: Reconnecting)
[15:40:48] *** Joins: tinystoat (~squeek@user/tinystoat)
[15:43:45] <FromDiscord> <ynfle> Is there a way to attach a macro as a pragma to a lambda?
[15:46:33] <PMunch> Doesn't the normal {..} syntax work?
[15:47:38] <PMunch> Hmm, so I'm trying to fix this: https://github.com/PMunch/futhark/issues/9
[15:47:55] <PMunch> The problem is that negative number can't be converted to unsigned numbers in Nim
[15:48:00] <FromDiscord> <ynfle> In reply to @PMunch "Doesn't the normal {..}": Ya, I meant the sugar `=>` lambdas
[15:48:21] <PMunch> @ynfle, oh I believe they don't have any syntax for attaching pragmas
[15:48:39] <FromDiscord> <ynfle> In reply to @PMunch "The problem is that": You can cast
[15:48:51] <PMunch> Exactly, in that situation you can cast
[15:49:04] <PMunch> But let's say I have a cuchar
[15:49:16] <PMunch> That's a uint8 basically
[15:49:31] <PMunch> So casting 10'i64 to that won't work will it?
[15:50:24] <PMunch> Huh, tried it on the playground and apparently it does..
[16:17:09] <FromDiscord> <Waldecir Santos> How can I declare a "nullable" sequence?
[16:17:56] <FromDiscord> <Rika> make it a pointer or a reference? or use options, its safer
[16:21:29] <FromDiscord> <Waldecir Santos> Perfect let me try it
[16:26:39] <FromDiscord> <Waldecir Santos> It worked, Option and checking with IsNone, ty @Rika
[16:26:51] <FromDiscord> <Rika> 👌
[16:31:25] *** Joins: rockcavera (~rc@192.12.113.200)
[16:31:25] *** Quits: rockcavera (~rc@192.12.113.200) (Changing host)
[16:31:25] *** Joins: rockcavera (~rc@user/rockcavera)
[16:46:17] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95)
[17:01:04] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (*.net *.split)
[17:01:04] *** Quits: cornfeedhobo (~cornfeedh@user/cornfeedhobo) (*.net *.split)
[17:01:04] *** Quits: madprops (hj8oijo@user/madprops) (*.net *.split)
[17:01:04] *** Quits: lain (~lain@172.16.254.xxx) (*.net *.split)
[17:01:04] *** Quits: ssiyad (~ssiyad@user/ssiyad) (*.net *.split)
[17:01:04] *** Quits: dv^_^ (~dv@eclipse.oxfordfun.com) (*.net *.split)
[17:01:04] *** Quits: mal`` (~mal``@static.38.6.217.95.clients.your-server.de) (*.net *.split)
[17:02:30] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[17:02:30] *** Joins: cornfeedhobo (~cornfeedh@user/cornfeedhobo)
[17:02:30] *** Joins: madprops (hj8oijo@user/madprops)
[17:02:30] *** Joins: lain (~lain@172.16.254.xxx)
[17:02:30] *** Joins: ssiyad (~ssiyad@user/ssiyad)
[17:02:30] *** Joins: dv^_^ (~dv@eclipse.oxfordfun.com)
[17:02:30] *** Joins: mal`` (~mal``@static.38.6.217.95.clients.your-server.de)
[17:03:16] *** Quits: cornfeedhobo (~cornfeedh@user/cornfeedhobo) (Max SendQ exceeded)
[17:03:16] *** Quits: ssiyad (~ssiyad@user/ssiyad) (Max SendQ exceeded)
[17:03:24] *** Joins: ssiyad (~ssiyad@user/ssiyad)
[17:12:32] *** Joins: cornfeedhobo (~cornfeedh@user/cornfeedhobo)
[17:13:45] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 256 seconds)
[17:15:24] <FromDiscord> <Tanguy> Is there a oneliner to know the number of fields in an object at CT?↵eg: static echo fields(theType).len
[17:22:37] <FromDiscord> <Lüke> What's the best way to learn it
[17:24:18] <FromDiscord> <enthus1ast> Learn what\_
[17:24:19] <FromDiscord> <enthus1ast> ?
[17:24:24] <FromDiscord> <Lüke> Nim
[17:24:42] <FromDiscord> <Michal Maršálek> I just took a long at the Swift programming language at it seems to be (syntactically) almost identical to Nim. How do they compare in other aspects? I wasn't able to find any article that would focus on comparing the two.
[17:24:44] <FromDiscord> <enthus1ast> i think this depends on you, how you normally learn new stuff? \:)
[17:25:00] <FromDiscord> <Lüke> In reply to @enthus1ast "i think this depends": YouTube
[17:25:18] <FromDiscord> <enthus1ast> mh yeah i think we have some yt vids
[17:25:23] <FromDiscord> <Lüke> Ok
[17:25:39] <FromDiscord> <enthus1ast> i can recommend to choose a small issue you have, and fix it with nim
[17:25:40] <FromDiscord> <Lüke> Thx
[17:25:49] <FromDiscord> <Lüke> In reply to @enthus1ast "i can recommend to": Ok
[17:25:51] <FromDiscord> <Michal Maršálek> (edit) "long" => "look" | "at" => "for the first time and"
[17:30:43] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:44:51] <PMunch> Oh goodness gracious. I'm looking at the pakku package manager and this code is so hard to read..
[17:45:18] <FromDiscord> <Rika> i thought so too lmao
[17:45:46] <PMunch> @Tanguy, not that I know of, no
[17:46:17] <PMunch> @Rika, it's just full of building structures and passing them around filtering stuff in and out
[17:46:42] <PMunch> Like every procedure takes 8 different arguments and spits out a tuple of a bunch of sequences and tables
[17:46:47] <PMunch> It's crazy town
[17:50:58] <FromDiscord> <Rika> mm love it when procs have more than 6 or so params
[17:54:35] <PMunch> @Michal_Maršálek, it's syntactically pretty similar, but they're quite different under the hood
[17:54:49] <PMunch> Nim compiles to C and JavaScript, Swift only native compiles I believe
[17:55:01] <PMunch> And it doesn't have meta-programming
[17:55:13] <PMunch> As far as I can tell
[18:07:03] <FromDiscord> <lpha3ch0> BitDefender is detecting anything in Nim as malware, even a one line `echo "Hello"`. I submitted multiple false-positive reports to them.
[18:17:35] <PMunch> @lpha3ch0, yeah the fingerprinting for AV is completely broken for Nim..
[18:18:02] <PMunch> Keep submitting those false-positives though, that's the only way this might someday get fixed
[18:21:28] *** Joins: gsalazar (~gsalazar@213.58.201.38)
[18:27:16] <FromDiscord> <fbpyr> on our side only nim-grab.exe gets flagged as 'trojan'.. 🙄
[18:32:18] *** Joins: arkurious (~arkurious@user/arkurious)
[18:36:57] <FromDiscord> <Evrensel Kişilik> hewwwooooo
[18:37:09] <FromDiscord> <Evrensel Kişilik> Nim types are circular
[18:37:10] <FromDiscord> <Evrensel Kişilik> 😱
[18:38:43] <FromDiscord> <huantian> Well they can be at least
[18:46:46] <FromDiscord> <Evrensel Kişilik> how can i calculate array size of Nim array in GDB?
[18:49:31] *** Quits: gsalazar (~gsalazar@213.58.201.38) (Ping timeout: 256 seconds)
[18:52:03] *** Joins: gsalazar (~gsalazar@213.58.201.38)
[18:54:44] <FromDiscord> <Rika> I think it is type erased at that point, perhaps?
[18:54:48] <FromDiscord> <System64 ~ Flandre Scarlet> I need a reminder↵↵How can I c2nim-ify a .h file please? It should be used with a dll
[18:55:01] <FromDiscord> <Evrensel Kişilik> In reply to @Rika "I think it is": whaaaaaaaat
[18:55:08] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[18:55:17] <FromDiscord> <Rika> Maybe check what a Nim array compiles into in C
[18:55:27] <FromDiscord> <Rika> I can’t, I’m about to sleep lol
[18:56:05] <FromDiscord> <Evrensel Kişilik> In reply to @Rika "Maybe check what a":  https://media.discordapp.net/attachments/371759389889003532/948964486147084308/unknown.png
[18:56:06] <FromDiscord> <Evrensel Kişilik> thissss
[18:56:17] <FromDiscord> <Evrensel Kişilik> im doing Nim things
[18:58:00] <PMunch> @System64_~_Flandre_Scarlet, might I interest you in Futhark?
[18:58:01] <FromDiscord> <Evrensel Kişilik> i can get `gdb.Value`
[18:58:06] <FromDiscord> <Evrensel Kişilik> (edit) "i can get `gdb.Value` ... " 03added "indexes"
[18:58:11] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @PMunch "@System64_~_Flandre_Scarlet, might I interest": What's that?
[18:58:27] <FromDiscord> <Evrensel Kişilik> (edit) "i can" => "im able to"
[18:58:30] <PMunch> @System64_~_Flandre_Scarlet, https://github.com/PMunch/futhark
[18:58:39] <FromDiscord> <Evrensel Kişilik> buuuuut itereation is infinite
[18:58:40] <FromDiscord> <Evrensel Kişilik> 😭
[18:58:56] <FromDiscord> <Rika> Sorry I don’t know how to help here
[18:59:05] <FromDiscord> <Evrensel Kişilik> WHERE ARE NIM DEEEEEEEVSSS
[18:59:42] <PMunch> @Evrensel_Kişilik, take it easy
[18:59:52] <PMunch> Spamming this channel won't get you anywhere
[19:00:10] <FromDiscord> <Evrensel Kişilik> In reply to @PMunch "Spamming this channel won't": YOU BOT
[19:00:14] <FromDiscord> <Evrensel Kişilik> you are an AI
[19:00:21] <PMunch> Not this again..
[19:00:29] <PMunch> I'm not a bot, I'm using IRC
[19:00:33] <FromDiscord> <Evrensel Kişilik> i don't talk to bots
[19:00:46] <PMunch> We're bridged into Discord through a bot
[19:01:40] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @PMunch "@System64_~_Flandre_Scarlet, https://github.com/PMu": Sounds interesting! but the lib I'm using uses gcc or MSVC, is that a problem?
[19:02:32] <FromDiscord> <Evrensel Kişilik> oh
[19:02:40] <FromDiscord> <Evrensel Kişilik> i was doing a typo lol
[19:03:07] <PMunch> @System64_~_Flandre_Scarlet, hmm might be. Futhark only needs to be able to parse your files with clang though
[19:03:23] <PMunch> I've used futhark and compiled my Nim code with GCC just fine
[19:03:30] <PMunch> In fact that's what I normally do
[19:04:21] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @PMunch "I've used futhark and": I think my lib was built with MSVC ('cause Visual Studio) but the code is C99
[19:06:03] <PMunch> That should be fine then
[19:06:54] <FromDiscord> <System64 ~ Flandre Scarlet> ah alright
[19:08:26] <FromDiscord> <Evrensel Kişilik> yayyy
[19:08:27] <FromDiscord> <Evrensel Kişilik>  https://media.discordapp.net/attachments/371759389889003532/948967601437048902/unknown.png
[19:08:28] <FromDiscord> <Evrensel Kişilik> got it
[19:08:44] <FromDiscord> <Evrensel Kişilik> soooooooo auto array support is incoming
[19:09:43] <FromDiscord> <System64 ~ Flandre Scarlet> sent a code paste, see https://play.nim-lang.org/#ix=3RfN
[19:09:43] <FromDiscord> <System64 ~ Flandre Scarlet> during installation
[19:11:42] <FromDiscord> <Evrensel Kişilik> yayyyyyyy
[19:11:42] <FromDiscord> <Evrensel Kişilik>  https://media.discordapp.net/attachments/371759389889003532/948968418541969428/unknown.png
[19:12:57] <PMunch> @System64_~_Flandre_Scarlet, did you install libclang first?
[19:13:52] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @PMunch "@System64_~_Flandre_Scarlet, did you install": through nimble?
[19:14:09] <PMunch> Ah wait, you're on Windows..
[19:14:35] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @PMunch "Ah wait, you're on": yes I'm
[19:14:50] <PMunch> @System64_~_Flandre_Scarlet, in that case see this: https://github.com/PMunch/futhark/issues/1
[19:15:45] <PMunch> Or just the installation section of the README I guess: https://github.com/PMunch/futhark#installation
[19:16:07] <FromDiscord> <System64 ~ Flandre Scarlet> ah alright, thanks
[19:23:31] <FromDiscord> <System64 ~ Flandre Scarlet> sent a code paste, see https://play.nim-lang.org/#ix=3RfP
[19:30:38] *** Joins: vicfred (~vicfred@user/vicfred)
[19:32:38] *** Joins: al1ranger (~al1ranger@182.57.198.100)
[19:36:19] <FromDiscord> <Evrensel Kişilik>  https://media.discordapp.net/attachments/371759389889003532/948974612929191957/unknown.png
[19:36:27] <FromDiscord> <Evrensel Kişilik> this says optimized out
[19:36:41] <FromDiscord> <Evrensel Kişilik> soooooooooo how could i get size of ptr array?
[19:36:52] <FromDiscord> <Evrensel Kişilik> i added auto array support
[19:37:24] <FromDiscord> <Evrensel Kişilik> nooow im working on ptr array support
[19:37:38] <FromDiscord> <Evrensel Kişilik> oh
[19:37:43] <FromDiscord> <Evrensel Kişilik> damn it is garbage collected
[19:37:44] <FromDiscord> <Evrensel Kişilik> lol
[19:39:00] *** Quits: gsalazar (~gsalazar@213.58.201.38) (Ping timeout: 240 seconds)
[19:40:28] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[19:41:54] <FromDiscord> <Evrensel Kişilik> i forgot build command
[19:42:06] <FromDiscord> <Evrensel Kişilik> how can i build with debug symbols?
[19:44:06] <PMunch> @System64_~_Flandre_Scarlet, it says in your error: Error: unhandled exception: file 'C:\Users\user\Documents\programmation\Tilengine\include\Files\LLVM\lib' does not exist [OSError]
[19:44:32] <PMunch> That -L should probably be within the quotes
[19:44:46] <PMunch> And you might need to escape the space in that path, not entirely sure
[19:45:21] <PMunch> @Evrensel_Kişilik, --debugger:native?
[19:46:05] *** Quits: al1ranger (~al1ranger@182.57.198.100) (Quit: Leaving)
[19:46:08] <PMunch> And please try to stick to normal spelling, you're going to wear out your o key..
[19:46:38] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 260 seconds)
[19:46:38] <FromDiscord> <Evrensel Kişilik> In reply to @PMunch "@Evrensel_Kişilik, --debugger:native?": found
[19:48:12] <FromDiscord> <Phil> TFW you wanna download an arch iso but it only shows you a torrent
[19:48:34] <FromDiscord> <Phil> (edit) "TFW you wanna download an arch iso but it only shows you a torrent ... " 03added "that takes forever to start downloading"
[19:48:57] <FromDiscord> <Phil> .... a second after I wrote this it finally found some peers to download from
[19:49:05] <FromDiscord> <Phil> (edit) "from" => "from, after waiting for 2 minutes already"
[19:49:16] <nrds> <06Prestige99> There are direct downloads further down the page if you want to try those
[19:50:42] <FromDiscord> <System64 ~ Flandre Scarlet> sent a code paste, see https://paste.rs/EZ2
[20:08:54] <NimEventer> New thread by Akito: Nim project using C++ Backend with single module using library wrapping a C library, see https://forum.nim-lang.org/t/8971
[20:14:48] <PMunch> @System64_~_Flandre_Scarlet, try `nimble install futhark --passL:"-LC:/Program\ Files/LLVM/lib/libclang.lib"`
[20:15:10] <PMunch> Oh sorry, `nimble install futhark --passL:"-LC:/Program\ Files/LLVM/lib"`
[20:15:43] <FromDiscord> <Evrensel Kişilik> yayyy
[20:15:48] <FromDiscord> <Evrensel Kişilik> i made ptr arrays tooo
[20:15:49] <FromDiscord> <Evrensel Kişilik>  https://media.discordapp.net/attachments/371759389889003532/948984553173844028/unknown.png
[20:17:03] <FromDiscord> <System64 ~ Flandre Scarlet> sent a code paste, see https://play.nim-lang.org/#ix=3Rg5
[20:20:22] <PMunch> Why is it looking in C:\Users\user\Documents\programmation\Tilengine\include\Files\LLVM?
[20:21:50] <FromDiscord> <Ayy Lmao> Is there a way to make a copy of a ref without constructing a new one from scratch?
[20:22:15] <PMunch> Wait, is it messing up the path and only grabbing " Files/LLVM/lib" from the one you passed in and attaches it to your current working directory?
[20:22:22] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @PMunch "Why is it looking": No idea, but ``C:\Users\user\Documents\programmation\Tilengine\include\`` is my working directory
[20:22:36] <PMunch> @Ayy_Lmao, define copy of a ref
[20:22:46] <PMunch> `var x = y` creates a copy of the reference
[20:23:11] <PMunch> `var x = y.copy` or `var x = y.deepCopy` creates a copy of the underlying object
[20:23:32] <PMunch> @System64_~_Flandre_Scarlet, yeah it looks like it is messing up on that space
[20:23:53] <PMunch> Maybe `nimble install futhark --passL:"-L'C:/Program\ Files/LLVM/lib'"`?
[20:24:00] <PMunch> I'm not too familiar with path handling on Windows
[20:24:34] <FromDiscord> <System64 ~ Flandre Scarlet> still not
[20:25:39] <FromDiscord> <Ayy Lmao> sent a code paste, see https://play.nim-lang.org/#ix=3Rge
[20:26:00] <FromDiscord> <Ayy Lmao> (edit) "https://play.nim-lang.org/#ix=3Rge" => "https://play.nim-lang.org/#ix=3Rgf"
[20:26:44] <FromDiscord> <Waldecir Santos> How should  implement `$` to make an object "echoable" ? I've implemented $ but I'm getting this error
[20:26:52] <FromDiscord> <Waldecir Santos> sent a code paste, see https://play.nim-lang.org/#ix=3Rgg
[20:26:55] <FromDiscord> <Waldecir Santos> it works if I do `echo $obj`
[20:27:53] <PMunch> @Ayy_Lmao, try deepCopy then
[20:28:26] <PMunch> @Waldecir_Santos, that sounds odd. it should be applied automatically in that situation
[20:28:41] <PMunch> But you might need to export it if you want to echo it from a different module
[20:28:52] <FromDiscord> <Waldecir Santos> this is the declaration `proc `$`[T: Model](model: T): string =`
[20:29:09] <PMunch> Ah, it might not match a generic like that
[20:30:03] <FromDiscord> <Ayy Lmao> In reply to @PMunch "@Ayy_Lmao, try deepCopy then": Yeah deepCopy works, thanks!
[20:30:04] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[20:35:24] <FromDiscord> <Waldecir Santos> In reply to @PMunch "Ah, it might not": `$` was not exported 🤦‍♂️ , I've missed the ``
[20:36:12] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 272 seconds)
[20:36:28] <PMunch> @Waldecir_Santos, common mistake, didn't you see my first suggestion? :)
[20:36:34] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @PMunch "Maybe `nimble install futhark": It still doesn't work
[20:36:58] <FromDiscord> <Waldecir Santos> In reply to @PMunch "@Waldecir_Santos, common mistake, didn't": I see it now, sorry and Thank you !
[20:37:36] <PMunch> @System64_~_Flandre_Scarlet, well you need to figure out how to pass the libclang library to Futhark, I'm not familiar enough with Windows to help you unfortunately. Maybe @enthus1ast who initially figured out how to compile for Windows can tell you more?
[20:37:48] <PMunch> @Waldecir_Santos, no problem :)
[21:04:33] *** Joins: gsalazar (~gsalazar@161.230.168.194)
[21:04:34] <FromDiscord> <System64 ~ Flandre Scarlet> well I have a problem : seems the header changed
[21:04:45] <PMunch> Which header?
[21:04:49] <FromDiscord> <System64 ~ Flandre Scarlet> That https://media.discordapp.net/attachments/371759389889003532/948996885878800444/Tilengine.h
[21:05:39] <PMunch> Just a sec, need to reboot
[21:05:40] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: leaving)
[21:06:01] <FromDiscord> <System64 ~ Flandre Scarlet> This is the old header https://media.discordapp.net/attachments/371759389889003532/948997185293410314/Tilengine.h
[21:06:42] <FromDiscord> <System64 ~ Flandre Scarlet> wait wtf↵I forgot how I c2nim'ed this
[21:07:17] *** Joins: PMunch (~PMunch@user/pmunch)
[21:07:24] <FromDiscord> <System64 ~ Flandre Scarlet> But this is the old binding https://media.discordapp.net/attachments/371759389889003532/948997532237840395/Tilengine.nim
[21:08:09] <FromDiscord> <System64 ~ Flandre Scarlet> and here the new one https://media.discordapp.net/attachments/371759389889003532/948997722004930620/Tilengine.nim
[21:10:50] <PMunch> Wait, why are you asking me about c2nim stuff?
[21:10:58] <PMunch> Just use Futhark :(
[21:11:01] <PMunch> :)*
[21:11:34] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @PMunch "Just use Futhark :(": I want to use it, but I struggle with this error :/
[21:18:26] <FromDiscord> <Evrensel Kişilik> https://github.com/rohanrhu/gdb-frontend/commit/5f3f1b352d68caec78bc8085a4257ffc74d6a4ce
[21:18:38] <FromDiscord> <Evrensel Kişilik> you can try this revision
[21:18:59] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @Evrensel Kişilik "you can try this": me?
[21:19:14] <FromDiscord> <Evrensel Kişilik> In reply to @System64 "me?": oh no i mean all Nim people 😱
[21:19:20] <FromDiscord> <System64 ~ Flandre Scarlet> Ah alright, sorry
[21:19:29] <FromDiscord> <System64 ~ Flandre Scarlet> I thought it was about my problem
[21:19:40] <FromDiscord> <Evrensel Kişilik> In reply to @System64 "I thought it was": what is your problem?
[21:20:26] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @Evrensel Kişilik "what is your problem?": Cannot install Futhark
[21:20:33] <FromDiscord> <Evrensel Kişilik> In reply to @System64 "Cannot install Futhark": what is it??
[21:20:51] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @Evrensel Kişilik "what is it??": Converting a C header into nim
[21:28:46] <PMunch> @System64_~_Flandre_Scarlet, if you get it working you won't have to worry about headers changing
[21:33:46] <FromDiscord> <rlipsc> sent a long message, see http://ix.io/3RgC
[21:34:05] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @PMunch "@System64_~_Flandre_Scarlet, if you get": and where is the Futhark folder? Maybe if I put the libs inside, it can work
[21:35:37] <FromDiscord> <Waldecir Santos> I was reading the document/tutorial and see a topic about `Dynamic dispatch`  but the tutorial dosen't explain what is and what is the diference between Static vs Dynamic the only diference I can see is the use of `method` instead of `proc`
[21:38:15] <FromDiscord> <rlipsc> To summarise: what's the best way within a macro to tell if a `NimNode` returns a value.
[21:40:56] <FromDiscord> <rlipsc> In reply to @Waldecir Santos "I was reading the": dynamic dispatch means what gets dispatched can change at runtime (`method` could call different code depending on the run time type), whereas static dispatch is fixed at compile time and never changes.
[21:42:57] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[21:43:29] <FromDiscord> <Waldecir Santos> In reply to @rlipsc "dynamic dispatch means what": Isn't better to use Generics ? I still don't understand the use case for it.
[21:44:07] <FromDiscord> <Waldecir Santos> It's seems like a python class/def for me
[21:44:25] <FromDiscord> <rlipsc> Generics are statically dispatched. Essentially they create a new proc for each type and the compiler works out which version to call. What gets run is fixed at compile time.
[21:45:06] <FromDiscord> <rlipsc> Python is dynamically typed for everything and doesn't really have static dispatch, so if you're used to that I can understand your confusion!
[21:47:26] <FromDiscord> <rlipsc> dynamic dispatch, at least for `method`, is based on inheritance so if you're using that you might well want `method` to work out which version of the call it should use at run time
[21:49:52] <PMunch> @System64_~_Flandre_Scarlet, you would have to clone the Futhark repo to have them locally
[21:50:09] <PMunch> Then move your files into there, and then nimble install while standing in that folder
[21:50:25] <FromDiscord> <rlipsc> `proc` and generics being static means Nim knows it can just output the code without needing to check anything. Often, this is "better" (faster), but ofc it depends what you're doing 🙂
[21:50:32] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @PMunch "@System64_~_Flandre_Scarlet, you would have": ah alright, will try that
[21:51:41] *** Quits: gsalazar (~gsalazar@161.230.168.194) (Ping timeout: 256 seconds)
[21:51:51] <FromDiscord> <System64 ~ Flandre Scarlet> and where should I put the lib and dll?
[21:57:03] <FromDiscord> <System64 ~ Flandre Scarlet> okay seems it still doesn't find clang
[21:57:37] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[21:58:59] <FromDiscord> <ajusa> PMunch is there any reason the list of versions isn't read at runtime for the Nim playground? Is it so you can add a new version without restarting the web server?
[22:01:30] <FromDiscord> <ajusa> also just as an FYI - I'm making decent progress on the HTMX conversion, but this can result in the playground API breaking. Not sure who is really using it. The ix.io links won't be broken though, I've come up with a way to avoid that
[22:17:39] <FromDiscord> <pmunch> @ajusa\: yes there is a script which updates the docker images automatically. So that's why the versions are read on runtime
[22:18:14] <FromDiscord> <pmunch> The API is used for a couple things, so it would really be best if it didn't break
[22:18:43] <FromDiscord> <System64 ~ Flandre Scarlet> PMunch, even if I put the libs into the folder, it still doesn't work
[22:19:08] <FromDiscord> <pmunch> Same error?
[22:19:42] <FromDiscord> <ajusa> In reply to @pmunch "The API is used": got it. In that case, I'll focus on just adding new routes for HTMX rather than replacing the old JSON ones
[22:20:27] <FromDiscord> <System64 ~ Flandre Scarlet> sent a code paste, see https://play.nim-lang.org/#ix=3RgO
[22:22:21] <FromDiscord> <rlipsc> sent a code paste, see https://paste.rs/wb2
[22:22:44] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @rlipsc "`ld.exe: cannot find -lclang`": I don't know how to solve it
[22:25:35] <FromDiscord> <rlipsc> me either, but at a guess I'd say `-lclang` is some library or switch that the C/C++ backend can't find the path for?
[22:26:47] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[22:30:16] <PMunch> @ajusa, better yes use the `Accept` header like I did in https://github.com/PMunch/autotemplate/ or a `.json` postfix and a route that matches with or without it.
[22:31:31] <PMunch> And what command was that?
[22:31:45] <PMunch> @System64_~_Flandre_Scarlet, and what command was that?
[22:31:52] <FromDiscord> <ajusa> In reply to @PMunch "<@102899813149855744>, better yes use": that won't be needed, as all HTMX requests by default include the `HX-Request` header which I can use to distinguish frontend requests from JSON requests. That way it's purely additive.
[22:31:55] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 256 seconds)
[22:32:02] <FromDiscord> <rlipsc> sent a code paste, see https://play.nim-lang.org/#ix=3RgW
[22:32:22] <PMunch> @rlipsc, -lclang is telling the C compiler that we want to link in libclang.so on Linux, or whatever the equivalent on Windows is
[22:32:41] <FromDiscord> <System64 ~ Flandre Scarlet> on Windows it's a DLL
[22:33:09] <PMunch> @ajusa, I still like the idea of using the Accept header, that way it's not really HTMX specific
[22:33:12] <FromDiscord> <rlipsc> In reply to @PMunch "<@800432830605819906>, -lclang is telling": Ah fair enough, maybe it just can't see the paths for some reason then
[22:33:40] <PMunch> Yeah that's what I'm trying to figure out
[22:33:46] <PMunch> Why it isn't finding it
[22:33:50] <PMunch> Stupid Windows..
[22:34:19] <FromDiscord> <rlipsc> yeah the path stuff in windows seems like an ancient clingon in 2022
[22:34:29] <FromDiscord> <System64 ~ Flandre Scarlet> I hate Windows lol
[22:35:16] <FromDiscord> <ajusa> sent a code paste, see https://play.nim-lang.org/#ix=3RgX
[22:35:49] <FromDiscord> <b4mbus> sent a code paste, see https://play.nim-lang.org/#ix=3RgY
[22:36:54] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95)
[22:37:35] <FromDiscord> <b4mbus> Ive actually never made any bigger application in my life so I want to start to do something. I have no idea how to design software, classes, etc. and I will post the whole thing here somewhere once I finish it (hopefully I will)
[22:39:04] <PMunch> @b4mbus, async != threads
[22:39:48] <FromDiscord> <b4mbus> In reply to @PMunch "<@644284217525665793>, async != threads": What are you reffering to?
[22:40:17] <PMunch> "Ive actually never done anything involving
[22:40:17] <PMunch> # threads except some simple programs or maybe calling async functions.!
[22:40:25] <PMunch> Oops, silly copy-paste..
[22:40:46] <FromDiscord> <b4mbus> well yeah, I should have probably say `parallelism/concurrency`
[22:40:53] <FromDiscord> <b4mbus> (edit) "say `parallelism/concurrency`" => "said`parallelism/concurrency`"
[22:41:07] <FromDiscord> <System64 ~ Flandre Scarlet> Humm so what should I do?
[22:48:17] <FromDiscord> <auxym> In reply to @b4mbus "well yeah, I should": so what do you want to do? threads or single-threaded async? Or async and threads? Tbh for your use case, you should probably just do single-threaded async. Consider threads if/when you become CPU-bound.
[22:49:42] <FromDiscord> <auxym> In reply to @System64 "Humm so what should": do you have clang.dll somewhere gcc can find it?
[22:50:04] <FromDiscord> <b4mbus> Well Im not sure :p. The error handler has to be running separately and at the same time as the discord service - the discord service is basically the meat of the app, there's the main loop that handles all the inbound/outbound requests. The error handler loop should be running because if some command or some other part of the app raises an error it should get picked up and handled.
[22:50:09] <FromDiscord> <b4mbus> In reply to @auxym "so what do you": Well Im not sure :p. The error handler has to be running separately and at the same time as the discord service - the discord service is basically the meat of the app, there's the main loop that handles all the inbound/outbound requests. The error handler loop should be running because if some command or some other part of the app raises an error it should get picked up and handled.
[22:53:13] <FromDiscord> <auxym> How does that work? Do you have some sort of catchall exception handler? Or do you use `Result`? Something else? Still sounds like something that could be awaited in an async event loop, if you want to avoid the complexity of threads.
[22:53:47] <FromDiscord> <auxym> On the topic of threads, I'd recommend Araq's latest FOSDEM talk, even though the title is sort of misleading (concurrency).
[22:55:24] <FromDiscord> <b4mbus> In reply to @auxym "How does that work?": How does what work?
[22:55:35] <FromDiscord> <b4mbus> the error handler?
[22:57:28] <FromDiscord> <auxym> yes
[23:03:20] <FromDiscord> <b4mbus> sent a code paste, see https://play.nim-lang.org/#ix=3Rh5
[23:03:21] <FromDiscord> <b4mbus> sent a code paste, see https://paste.rs/SE5
[23:03:42] <FromDiscord> <b4mbus> again: Im quite new to Nim and Ive never made anything big, never designed any software, neved dealt with concurrency/parallelism
[23:05:47] <FromDiscord> <planetis> any chance I could get smthing like that compiling https://play.nim-lang.org/#ix=3Rh6 ?
[23:13:00] <FromDiscord> <auxym> In reply to @b4mbus "again: Im quite new": I was mostly wondering how your errors get added to the error queue. But in any case, could you not make your error handler proc `{.async.}` and await the handler instead of adding errors to the queue? I'm not at all an expert on this stuff, but threads would probably just add complexity to your code without any performance gain (unless you are cpu bound on a single thread just handling your ap
[23:15:09] <FromDiscord> <b4mbus> In reply to @auxym "I was mostly wondering": \> But in any case, could you not make your error handler proc {.async.} and await the handler instead of adding errors to the queue?↵wym `could you not`? My error handler proc is not async and Im not awaiting anywhere
[23:16:58] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Rh8
[23:17:38] <FromDiscord> <planetis> actually I am trying to use the enum to compute a different size
[23:17:59] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:19:11] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Rh9
[23:20:01] <FromDiscord> <planetis> wow
[23:20:12] <FromDiscord> <planetis> thanks elegant beef
[23:21:09] <FromDiscord> <planetis> out of curiosity do you know which code path enums follow https://github.com/nim-lang/Nim/blob/devel/compiler/semtypes.nim#L296 ?
[23:21:55] <FromDiscord> <Elegantbeef> Probably 325
[23:22:11] <FromDiscord> <Elegantbeef> That or 301
[23:22:26] <FromDiscord> <Elegantbeef> The issue is not array semming though
[23:22:55] <FromDiscord> <planetis> Bar[a] matches enum? wtf
[23:22:55] <FromDiscord> <Elegantbeef> The issue is the preparation for array semming, the T isnt replaced with the type, and as such the array sem cannot work
[23:23:03] <FromDiscord> <Elegantbeef> `T: static enum` is a value
[23:23:09] <FromDiscord> <planetis> oh ok
[23:23:11] <FromDiscord> <Elegantbeef> `T: enum` is a type
[23:23:52] <FromDiscord> <b4mbus> In reply to @auxym "On the topic of": which one are you talking about?
[23:26:07] <FromDiscord> <auxym> https://fosdem.org/2022/schedule/event/nim_concurrency/
[23:27:05] <FromDiscord> <auxym> I was suggesting making your handler proc async, to clarify. That way the built-in async event queue could dispatch the error handling calls for you instead of having your own queue in a separate thread.
[23:27:43] <FromDiscord> <b4mbus> In reply to @auxym "I was suggesting *making*": Ill check that out, thanks
[23:31:44] <FromDiscord> <planetis> i got rid of generics, there are a pain in the rear
[23:33:24] <FromDiscord> <Elegantbeef> They really arent but ok 😛
[23:33:27] <FromDiscord> <planetis> I don't know how you do it, but they never work for me and i have no clue whats happening
[23:33:57] <FromDiscord> <planetis> well that's it when I am trying more complicated stuff
[23:34:30] <FromDiscord> <Elegantbeef> I normally try stuff if it doesnt work try to fix it, aside from the array isssue
[23:34:42] <FromDiscord> <Elegantbeef> That stuff is unfixable afaict 😛
[23:35:28] <FromDiscord> <planetis> if you are curious what it was https://play.nim-lang.org/#ix=3Rhe its just a bitset
[23:36:06] <FromDiscord> <Elegantbeef> Is nim's built in set not good enough?
[23:36:34] <FromDiscord> <planetis> well up to a point
[23:37:14] <FromDiscord> <planetis> i think after 64 values it becomes an array byte
[23:37:31] <FromDiscord> <planetis> so in theory array uint is faster
[23:37:42] <FromDiscord> <Elegantbeef> after 8 values\
[23:37:54] <FromDiscord> <planetis> need to check out if its vectorised
[23:38:04] <FromDiscord> <Elegantbeef> `set[0..15]` emits a `NI[2]` in C
[23:47:18] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @auxym "do you have clang.dll": I installed Clang
[23:47:29] <FromDiscord> <System64 ~ Flandre Scarlet> So it should be in the PATH
[23:55:36] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
