[00:02:01] *** Joins: Bounga (~nico@82-65-32-175.subs.proxad.net)
[00:03:29] *** Quits: yauhsien (~yauhsien@61-231-58-114.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[00:06:55] *** Joins: andrhua (~andrhua@31.134.187.8)
[00:07:39] *** Quits: phaleth (~phaleth@user/phaleth) (Quit: phaleth)
[00:16:18] *** Joins: kvn_ (~weechat@cpc115982-dals23-2-0-cust605.20-2.cable.virginm.net)
[00:17:33] *** Joins: mahmutov (~mahmutov@5.176.50.7)
[00:30:30] *** Quits: parv (~quass@user/parv) (Quit: parv)
[00:54:08] *** Joins: mgibowski (~mgibowski@50.red-83-63-128.staticip.rima-tde.net)
[00:56:45] *** Quits: braulio-bz (~manjaro-u@user/brauliobz) (Ping timeout: 256 seconds)
[00:59:40] *** Quits: mgibowski (~mgibowski@50.red-83-63-128.staticip.rima-tde.net) (Ping timeout: 264 seconds)
[01:09:36] *** Joins: Caerus (~Caerus@190.113.111.43)
[01:10:14] *** Quits: cro[m] (~orcmatrix@2001:470:69fc:105::1:2f1b) (*.net *.split)
[01:10:15] *** Quits: kvn_ (~weechat@cpc115982-dals23-2-0-cust605.20-2.cable.virginm.net) (*.net *.split)
[01:10:15] *** Quits: andrhua (~andrhua@31.134.187.8) (*.net *.split)
[01:10:15] *** Quits: sgn (~sgn@user/sgn) (*.net *.split)
[01:10:15] *** Quits: cursey (~cursey@user/cursey) (*.net *.split)
[01:10:15] *** Quits: ihabunek (~ihabunek@bezdomni.net) (*.net *.split)
[01:10:16] *** Quits: Tanger (~Donger@signiq.cust.bdr01.per02.wa.vocus.net.au) (*.net *.split)
[01:10:16] *** Quits: blambi (~blambi@c-c11e524e.011-113-67626725.bbcust.telenor.se) (*.net *.split)
[01:10:16] *** Quits: adrianhblack[m] (~adrianhbl@2001:470:69fc:105::1:30c9) (*.net *.split)
[01:10:16] *** Quits: drincruz (drincruz@2607:5300:203:3f52::19) (*.net *.split)
[01:10:16] *** Quits: esainane (esainane@antihype.space) (*.net *.split)
[01:10:16] *** Quits: azazel (~azazel@orphu.arstecnica.it) (*.net *.split)
[01:10:17] *** Quits: val (~val@limnoria/val) (*.net *.split)
[01:10:17] *** Quits: voegelas (~voegelas@www.andreasvoegele.com) (*.net *.split)
[01:10:17] *** Quits: sorentwo (sid39488@id-39488.tinside.irccloud.com) (*.net *.split)
[01:10:17] *** Quits: ehamberg (sid18208@id-18208.hampstead.irccloud.com) (*.net *.split)
[01:10:17] *** Quits: ericentin__ (sid134418@id-134418.hampstead.irccloud.com) (*.net *.split)
[01:10:17] *** Quits: fhunleth (sid79501@id-79501.lymington.irccloud.com) (*.net *.split)
[01:10:17] *** Quits: eproxus_____ (sid39465@id-39465.ilkley.irccloud.com) (*.net *.split)
[01:10:17] *** Quits: ley_ (sid320610@id-320610.hampstead.irccloud.com) (*.net *.split)
[01:10:17] *** Quits: mhmd (~mhmd@37.48.90.208) (*.net *.split)
[01:10:17] *** Quits: creature (~alex@198.98.114.33) (*.net *.split)
[01:10:17] *** Quits: rbino (~rbino@rbino.com) (*.net *.split)
[01:10:17] *** Quits: kwmiebach (sid16855@id-16855.tinside.irccloud.com) (*.net *.split)
[01:10:17] *** Quits: mjones (sid6844@id-6844.helmsley.irccloud.com) (*.net *.split)
[01:10:17] *** Quits: alisdair (sid7471@id-7471.ilkley.irccloud.com) (*.net *.split)
[01:10:17] *** Quits: jaydoane (sid66455@id-66455.hampstead.irccloud.com) (*.net *.split)
[01:10:17] *** Quits: asonge (sid129041@id-129041.uxbridge.irccloud.com) (*.net *.split)
[01:10:17] *** Quits: xcm_ (~xcm@user/xcm) (*.net *.split)
[01:10:18] *** Quits: gmc_ (sid58314@ilkley.irccloud.com) (*.net *.split)
[01:10:18] *** Quits: stiang (sid245441@helmsley.irccloud.com) (*.net *.split)
[01:10:18] *** Quits: termos (sid18647@helmsley.irccloud.com) (*.net *.split)
[01:10:18] *** Quits: bitwalker (sid32334@user/bitwalker) (*.net *.split)
[01:10:18] *** Quits: bbhoss (sid18216@tinside.irccloud.com) (*.net *.split)
[01:10:18] *** Quits: ryanwinchester (sid147626@uxbridge.irccloud.com) (*.net *.split)
[01:10:18] *** Quits: hmans (sid565@user/hmans) (*.net *.split)
[01:10:18] *** Quits: nox (sid3872@uxbridge.irccloud.com) (*.net *.split)
[01:10:18] *** Quits: joedevivo (sid16225@tinside.irccloud.com) (*.net *.split)
[01:10:18] *** Quits: adamkittelson (sid82542@tinside.irccloud.com) (*.net *.split)
[01:10:18] *** Quits: etehtsea_ (~kis@164.90.175.135) (*.net *.split)
[01:10:18] *** Quits: hexology (~hexology@user/hexology) (*.net *.split)
[01:10:18] *** Quits: rovanion (~rovanion@h-46-59-13-236.A163.priv.bahnhof.se) (*.net *.split)
[01:10:18] *** Quits: LostKobrakai (~LostKobra@dia.uberspace.de) (*.net *.split)
[01:10:18] *** Quits: eirik_ (~eirik@84-52-226.93.3p.ntebredband.no) (*.net *.split)
[01:10:18] *** Quits: rduplain (~rduplain@user/rduplain) (*.net *.split)
[01:10:18] *** Quits: fjmorazan (~quassel@user/fjmorazan) (*.net *.split)
[01:10:18] *** Quits: brw (~bas@haring.bas.sh) (*.net *.split)
[01:10:18] *** Quits: xlii__ (~xlii@167.172.161.148) (*.net *.split)
[01:10:18] *** Quits: flynn (~mcbloch@user/flynn) (*.net *.split)
[01:10:18] *** Quits: sgarciapdx (~serge@irc.shork.io) (*.net *.split)
[01:10:18] *** Quits: v_ (~NULLx76@80-60-83-220.fixed.kpn.net) (*.net *.split)
[01:10:19] *** Quits: void09 (~void@revinin5minute.com) (*.net *.split)
[01:10:19] *** Quits: tcit (~tcit@2001:470:69fc:105::8f) (*.net *.split)
[01:10:19] *** Quits: arathunku[m] (~arathunku@2001:470:69fc:105::1:746) (*.net *.split)
[01:10:19] *** Quits: wolfshappen (~waff@irc.furworks.de) (*.net *.split)
[01:10:19] *** Quits: jtdowney (~jtdowney@user/jtdowney) (*.net *.split)
[01:10:19] *** Quits: GLaDER (~GLaDER@h-98-128-172-23.A785.priv.bahnhof.se) (*.net *.split)
[01:10:20] *** Quits: sickill (~sickill@user/sickill) (*.net *.split)
[01:10:20] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (*.net *.split)
[01:10:20] *** Quits: meredith (~meredith@ramdas.roomag.org) (*.net *.split)
[01:10:20] *** Quits: mcint (mcint@user/mcint) (*.net *.split)
[01:10:20] *** Quits: dbohdan (~dbohdan@user/dbohdan) (*.net *.split)
[01:10:20] *** Quits: marcos (~marcos@2a01:4f8:c17:e59::2) (*.net *.split)
[01:10:20] *** Quits: sheb (~sheb@31.223.228.71) (*.net *.split)
[01:10:20] *** Quits: ghenry (~ghenry@ghenry.plus.com) (*.net *.split)
[01:10:20] *** Quits: sparogy (~sparogy@2604:a880:cad:d0::648:8001) (*.net *.split)
[01:10:21] *** Quits: jpaa (~jpaa@87.118.126.66) (*.net *.split)
[01:10:21] *** Quits: kuonNicolas[m] (~kuongoyma@2001:470:69fc:105::329e) (*.net *.split)
[01:10:21] *** Quits: me[m] (~metmtrxmi@2001:470:69fc:105::8cc3) (*.net *.split)
[01:10:21] *** Quits: kshlm (~kshlm@2001:470:69fc:105::b46b) (*.net *.split)
[01:10:21] *** Quits: whk (~whk@ec2-13-244-150-184.af-south-1.compute.amazonaws.com) (*.net *.split)
[01:10:21] *** Quits: lagash (lagash@lagash.shelltalk.net) (*.net *.split)
[01:10:22] *** Quits: Bretzky (~Bretzky@167.99.239.126) (*.net *.split)
[01:10:22] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (*.net *.split)
[01:10:22] *** Quits: josevalim (sid250896@id-250896.hampstead.irccloud.com) (*.net *.split)
[01:10:22] *** Quits: benwilson512 (sid71699@id-71699.ilkley.irccloud.com) (*.net *.split)
[01:10:22] *** Quits: kawen (~quassel@static.208.191.216.95.clients.your-server.de) (*.net *.split)
[01:10:22] *** Quits: mathsaey (~mathsaey@user/mathsaey) (*.net *.split)
[01:10:22] *** Quits: Soup[m] (~rktjmpmat@2001:470:69fc:105::cdeb) (*.net *.split)
[01:10:22] *** Quits: uhoreg (~uhoreg@2001:470:69fc:105::35f) (*.net *.split)
[01:10:22] *** Quits: reda_ (~reda@user/reda) (*.net *.split)
[01:10:22] *** Quits: tomku (~tomku@user/tomku) (*.net *.split)
[01:10:22] *** Quits: havenwood (~havenwood@about/ruby/havenwood) (*.net *.split)
[01:10:22] *** Quits: dequbed (~dequbed@yanduxian.paranoidlabs.org) (*.net *.split)
[01:10:22] *** Quits: djanatyn (~djanatyn@vps-7f49a6b0.vps.ovh.ca) (*.net *.split)
[01:10:22] *** Quits: ajb (~ajb@cupid.whatbox.ca) (*.net *.split)
[01:10:22] *** Quits: malware (~malware@ec2-52-91-134-43.compute-1.amazonaws.com) (*.net *.split)
[01:10:23] *** Quits: aidalgol (~aidalgol@user/aidalgol) (*.net *.split)
[01:10:23] *** Quits: kpanic (~kpanic@user/kpanic) (*.net *.split)
[01:10:23] *** Quits: _axx (~axx@static.246.43.203.116.clients.your-server.de) (*.net *.split)
[01:10:24] *** Quits: IslandUsurper[m] (~lylemente@2001:470:69fc:105::40f8) (*.net *.split)
[01:10:24] *** Quits: wehlutyk[m] (~sleauchat@2001:470:69fc:105::2f16) (*.net *.split)
[01:10:24] *** Quits: Exa (exa@irc.moe) (*.net *.split)
[01:10:24] *** Quits: Seaduck (~seaduck@2001:19f0:5:d68:5400:ff:fe75:209e) (*.net *.split)
[01:10:24] *** Quits: bailon (~gizzard@saturn.whatbox.ca) (*.net *.split)
[01:10:24] *** Quits: kawzeg (kawzeg@2a01:7e01::f03c:92ff:fee2:ec34) (*.net *.split)
[01:10:24] *** Quits: kenichi (~kenichi@nakamura.io) (*.net *.split)
[01:10:24] *** Quits: sinni800 (~quassel@2a00:1ca8:ae::b0) (*.net *.split)
[01:10:24] *** Quits: krjst (~krjst@2604:a880:800:c1::16b:8001) (*.net *.split)
[01:10:24] *** Quits: rkleef (rolfscribb@pegasus.vankleef.me) (*.net *.split)
[01:10:24] *** Quits: PatrikStenmark[m (~patrikste@2001:470:69fc:105::bfa1) (*.net *.split)
[01:10:25] *** Quits: v0idpwn (sid483136@id-483136.helmsley.irccloud.com) (*.net *.split)
[01:10:25] *** Quits: Nicd (sid11783@user/nicd) (*.net *.split)
[01:10:25] *** Quits: wojtekmach (sid183574@id-183574.lymington.irccloud.com) (*.net *.split)
[01:10:25] *** Quits: josephl (sid146137@id-146137.lymington.irccloud.com) (*.net *.split)
[01:10:25] *** Quits: andersju1 (~andersju@fnord.unix.se) (*.net *.split)
[01:10:25] *** Quits: bodgix (~bodgix@vps-ae17da44.vps.ovh.net) (*.net *.split)
[01:10:25] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (*.net *.split)
[01:10:25] *** Quits: punnie (~punniemat@2001:470:69fc:105::1193) (*.net *.split)
[01:10:25] *** Quits: tomku[m] (~tomkumozi@2001:470:69fc:105::1:2fcb) (*.net *.split)
[01:10:25] *** Quits: zups (~meow@2a01:4f9:c010:6036::1) (*.net *.split)
[01:10:25] *** Quits: Shados (~shados@shados.net) (*.net *.split)
[01:10:26] *** Quits: picasso (mike@potbox.pixor.net) (*.net *.split)
[01:10:26] *** Quits: Poeticode (~Poeticode@user/poeticode) (*.net *.split)
[01:10:26] *** Quits: acro (~acro@user/acro) (*.net *.split)
[01:10:26] *** Quits: Ankhers (~Ankhers@ec2-54-196-233-138.compute-1.amazonaws.com) (*.net *.split)
[01:10:26] *** Quits: kingy (~kingy__@darkpeak.org) (*.net *.split)
[01:10:26] *** Quits: serafeim (serafeim@thunix.net) (*.net *.split)
[01:10:26] *** Quits: shenghi (~shenghi@chrysocolla.mutablevoid.org) (*.net *.split)
[01:10:26] *** Quits: paak (~Peter@2a01:4f9:c010:677c::104) (*.net *.split)
[01:10:26] *** Quits: mooff (mooff@awful.cooking) (*.net *.split)
[01:10:26] *** Quits: DeX77 (~Admiral@dragonslave.de) (*.net *.split)
[01:10:27] *** Quits: drewolson (~drewolson@user/drewolson) (*.net *.split)
[01:10:27] *** Quits: sagax (~sagax_nb@user/sagax) (*.net *.split)
[01:10:27] *** Quits: Mayel[m] (~mayelmatr@2001:470:69fc:105::bf92) (*.net *.split)
[01:10:27] *** Quits: yeik-the-spik[m] (~yeik-the-@2001:470:69fc:105::6152) (*.net *.split)
[01:10:27] *** Quits: Q[m] (~master-qm@2001:470:69fc:105::1:1a45) (*.net *.split)
[01:10:27] *** Quits: Zarathu (~zarathu@li2222-85.members.linode.com) (*.net *.split)
[01:10:27] *** Quits: jstoker (~jstoker@user/jstoker) (*.net *.split)
[01:10:27] *** Quits: vhf (~victor@2607:5300:60:1083::1) (*.net *.split)
[01:10:27] *** Quits: B3k (~B3k@b3k.pl) (*.net *.split)
[01:10:27] *** Quits: ggVGc (~ggVGc@a.lowtech.earth) (*.net *.split)
[01:10:28] *** Quits: schakkis_ (~alex@dsl-hkibng11-50dcc5-242.dhcp.inet.fi) (*.net *.split)
[01:10:28] *** Quits: mrkurt (sid368284@id-368284.helmsley.irccloud.com) (*.net *.split)
[01:10:28] *** Quits: aaronrenner (sid475276@id-475276.ilkley.irccloud.com) (*.net *.split)
[01:10:28] *** Quits: triskite3_ (uid414920@id-414920.uxbridge.irccloud.com) (*.net *.split)
[01:10:28] *** Quits: keyvan (sid7672@id-7672.helmsley.irccloud.com) (*.net *.split)
[01:10:28] *** Quits: mcrumm (sid467326@id-467326.ilkley.irccloud.com) (*.net *.split)
[01:10:28] *** Quits: Perry (~perry@coffee-break.at) (*.net *.split)
[01:10:28] *** Quits: waz0wski_ (~waz0wski@hrothgar.distortion.io) (*.net *.split)
[01:10:28] *** Quits: beise_ (~beise@85.17.52.17) (*.net *.split)
[01:10:28] *** Quits: balo_ (~balo@128.199.49.128) (*.net *.split)
[01:10:28] *** Quits: henry40408 (~henry4040@112.104.114.35) (*.net *.split)
[01:10:28] *** Quits: hwrd (sid64402@id-64402.lymington.irccloud.com) (*.net *.split)
[01:10:28] *** Quits: FMJz_________ (sid279245@id-279245.lymington.irccloud.com) (*.net *.split)
[01:10:28] *** Quits: heatmiser (sid112556@id-112556.tinside.irccloud.com) (*.net *.split)
[01:10:28] *** Quits: joenoon (sid411732@id-411732.helmsley.irccloud.com) (*.net *.split)
[01:10:28] *** Quits: bw (sid2730@user/betawaffle) (*.net *.split)
[01:10:28] *** Quits: brycek (sid153199@id-153199.ilkley.irccloud.com) (*.net *.split)
[01:10:28] *** Quits: OliverMT (sid16701@id-16701.hampstead.irccloud.com) (*.net *.split)
[01:10:28] *** Quits: derfj (sid19429@id-19429.tinside.irccloud.com) (*.net *.split)
[01:10:28] *** Quits: davic (sid473656@user/davic) (*.net *.split)
[01:10:28] *** Quits: Net (sid313265@id-313265.lymington.irccloud.com) (*.net *.split)
[01:10:28] *** Quits: keisisqrl (sid501533@user/keisisqrl) (*.net *.split)
[01:10:28] *** Quits: Halcyonicstorm__ (sid174863@id-174863.helmsley.irccloud.com) (*.net *.split)
[01:10:29] *** Quits: rrix (~rrix@2620:fc:c000:0:69c1:fa22:c0c9:e2c4) (*.net *.split)
[01:10:29] *** Quits: Zaab1t (~carlbordu@2001:470:69fc:105::78e) (*.net *.split)
[01:10:29] *** Quits: ilkecan[m] (~ilkecanma@2001:470:69fc:105::1:79b) (*.net *.split)
[01:10:29] *** Quits: ouroboros (~ouroboros@user/ouroboros) (*.net *.split)
[01:10:29] *** Quits: bind3 (~bind@md-dingen.tilaa.cloud) (*.net *.split)
[01:10:29] *** Quits: MuffinPimp (~mokou@box.mokou.io) (*.net *.split)
[01:10:29] *** Quits: ebb (ebb@user/ebb) (*.net *.split)
[01:10:29] *** Quits: ds (~ds@user/ds) (*.net *.split)
[01:10:30] *** Quits: ChanServ (ChanServ@services.libera.chat) (*.net *.split)
[01:10:30] *** Quits: srfsh (~srfsh@user/srfsh) (*.net *.split)
[01:12:33] *** Quits: Caerus (~Caerus@190.113.111.43) (Client Quit)
[01:14:14] *** Joins: kvn_ (~weechat@cpc115982-dals23-2-0-cust605.20-2.cable.virginm.net)
[01:14:14] *** Joins: andrhua (~andrhua@31.134.187.8)
[01:14:14] *** Joins: cro[m] (~orcmatrix@2001:470:69fc:105::1:2f1b)
[01:14:14] *** Joins: PatrikStenmark[m (~patrikste@2001:470:69fc:105::bfa1)
[01:14:14] *** Joins: adrianhblack[m] (~adrianhbl@2001:470:69fc:105::1:30c9)
[01:14:14] *** Joins: sgn (~sgn@user/sgn)
[01:14:14] *** Joins: cursey (~cursey@user/cursey)
[01:14:14] *** Joins: srfsh (~srfsh@user/srfsh)
[01:14:14] *** Joins: ihabunek (~ihabunek@bezdomni.net)
[01:14:14] *** Joins: malware (~malware@ec2-52-91-134-43.compute-1.amazonaws.com)
[01:14:14] *** Joins: rduplain (~rduplain@user/rduplain)
[01:14:14] *** Joins: jtdowney (~jtdowney@user/jtdowney)
[01:14:14] *** Joins: GLaDER (~GLaDER@h-98-128-172-23.A785.priv.bahnhof.se)
[01:14:14] *** Joins: drincruz (drincruz@2607:5300:203:3f52::19)
[01:14:14] *** Joins: marcos (~marcos@2a01:4f8:c17:e59::2)
[01:14:14] *** Joins: esainane (esainane@antihype.space)
[01:14:14] *** Joins: azazel (~azazel@orphu.arstecnica.it)
[01:14:14] *** Joins: Tanger (~Donger@signiq.cust.bdr01.per02.wa.vocus.net.au)
[01:14:14] *** Joins: sheb (~sheb@31.223.228.71)
[01:14:14] *** Joins: val (~val@limnoria/val)
[01:14:14] *** Joins: sickill (~sickill@user/sickill)
[01:14:14] *** Joins: blambi (~blambi@c-c11e524e.011-113-67626725.bbcust.telenor.se)
[01:14:14] *** Joins: mooff (mooff@awful.cooking)
[01:14:14] *** Joins: aidalgol (~aidalgol@user/aidalgol)
[01:14:14] *** Joins: sparogy (~sparogy@2604:a880:cad:d0::648:8001)
[01:14:14] *** Joins: lagash (lagash@lagash.shelltalk.net)
[01:14:14] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[01:14:14] *** Joins: voegelas (~voegelas@www.andreasvoegele.com)
[01:14:14] *** Joins: mrkurt (sid368284@id-368284.helmsley.irccloud.com)
[01:14:14] *** Joins: aaronrenner (sid475276@id-475276.ilkley.irccloud.com)
[01:14:14] *** Joins: triskite3_ (uid414920@id-414920.uxbridge.irccloud.com)
[01:14:14] *** Joins: keyvan (sid7672@id-7672.helmsley.irccloud.com)
[01:14:14] *** Joins: mcrumm (sid467326@id-467326.ilkley.irccloud.com)
[01:14:14] *** Joins: sorentwo (sid39488@id-39488.tinside.irccloud.com)
[01:14:14] *** Joins: ericentin__ (sid134418@id-134418.hampstead.irccloud.com)
[01:14:14] *** Joins: ehamberg (sid18208@id-18208.hampstead.irccloud.com)
[01:14:14] *** Joins: fhunleth (sid79501@id-79501.lymington.irccloud.com)
[01:14:14] *** Joins: eproxus_____ (sid39465@id-39465.ilkley.irccloud.com)
[01:14:14] *** Joins: v0idpwn (sid483136@id-483136.helmsley.irccloud.com)
[01:14:14] *** Joins: Nicd (sid11783@user/nicd)
[01:14:14] *** Joins: wojtekmach (sid183574@id-183574.lymington.irccloud.com)
[01:14:14] *** Joins: ley_ (sid320610@id-320610.hampstead.irccloud.com)
[01:14:14] *** Joins: josephl (sid146137@id-146137.lymington.irccloud.com)
[01:14:14] *** Joins: Perry (~perry@coffee-break.at)
[01:14:14] *** Joins: andersju1 (~andersju@fnord.unix.se)
[01:14:14] *** Joins: mhmd (~mhmd@37.48.90.208)
[01:14:14] *** Joins: bodgix (~bodgix@vps-ae17da44.vps.ovh.net)
[01:14:14] *** Joins: Bretzky (~Bretzky@167.99.239.126)
[01:14:14] *** Joins: DeX77 (~Admiral@dragonslave.de)
[01:14:14] *** Joins: waz0wski_ (~waz0wski@hrothgar.distortion.io)
[01:14:14] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[01:14:14] *** Joins: brw (~bas@haring.bas.sh)
[01:14:14] *** Joins: kpanic (~kpanic@user/kpanic)
[01:14:14] *** Joins: flynn (~mcbloch@user/flynn)
[01:14:14] *** Joins: xlii__ (~xlii@167.172.161.148)
[01:14:14] *** Joins: sgarciapdx (~serge@irc.shork.io)
[01:14:14] *** Joins: v_ (~NULLx76@80-60-83-220.fixed.kpn.net)
[01:14:14] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[01:14:14] *** Joins: beise_ (~beise@85.17.52.17)
[01:14:14] *** Joins: balo_ (~balo@128.199.49.128)
[01:14:14] *** Joins: henry40408 (~henry4040@112.104.114.35)
[01:14:14] *** Joins: creature (~alex@198.98.114.33)
[01:14:14] *** Joins: drewolson (~drewolson@user/drewolson)
[01:14:14] *** Joins: rbino (~rbino@rbino.com)
[01:14:14] *** Joins: kwmiebach (sid16855@id-16855.tinside.irccloud.com)
[01:14:14] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[01:14:14] *** Joins: hwrd (sid64402@id-64402.lymington.irccloud.com)
[01:14:14] *** Joins: mjones (sid6844@id-6844.helmsley.irccloud.com)
[01:14:14] *** Joins: alisdair (sid7471@id-7471.ilkley.irccloud.com)
[01:14:14] *** Joins: FMJz_________ (sid279245@id-279245.lymington.irccloud.com)
[01:14:14] *** Joins: heatmiser (sid112556@id-112556.tinside.irccloud.com)
[01:14:14] *** Joins: bw (sid2730@user/betawaffle)
[01:14:14] *** Joins: joenoon (sid411732@id-411732.helmsley.irccloud.com)
[01:14:14] *** Joins: brycek (sid153199@id-153199.ilkley.irccloud.com)
[01:14:14] *** Joins: jaydoane (sid66455@id-66455.hampstead.irccloud.com)
[01:14:14] *** Joins: OliverMT (sid16701@id-16701.hampstead.irccloud.com)
[01:14:14] *** Joins: derfj (sid19429@id-19429.tinside.irccloud.com)
[01:14:14] *** Joins: keisisqrl (sid501533@user/keisisqrl)
[01:14:14] *** Joins: davic (sid473656@user/davic)
[01:14:14] *** Joins: Net (sid313265@id-313265.lymington.irccloud.com)
[01:14:14] *** Joins: josevalim (sid250896@id-250896.hampstead.irccloud.com)
[01:14:14] *** Joins: benwilson512 (sid71699@id-71699.ilkley.irccloud.com)
[01:14:14] *** Joins: asonge (sid129041@id-129041.uxbridge.irccloud.com)
[01:14:14] *** Joins: Halcyonicstorm__ (sid174863@id-174863.helmsley.irccloud.com)
[01:14:14] *** Joins: xcm_ (~xcm@user/xcm)
[01:14:14] *** Joins: kawen (~quassel@static.208.191.216.95.clients.your-server.de)
[01:14:14] *** Joins: sagax (~sagax_nb@user/sagax)
[01:14:14] *** Joins: gmc_ (sid58314@ilkley.irccloud.com)
[01:14:14] *** Joins: stiang (sid245441@helmsley.irccloud.com)
[01:14:14] *** Joins: termos (sid18647@helmsley.irccloud.com)
[01:14:14] *** Joins: bitwalker (sid32334@user/bitwalker)
[01:14:14] *** Joins: bbhoss (sid18216@tinside.irccloud.com)
[01:14:14] *** Joins: ryanwinchester (sid147626@uxbridge.irccloud.com)
[01:14:14] *** Joins: joedevivo (sid16225@tinside.irccloud.com)
[01:14:14] *** Joins: nox (sid3872@uxbridge.irccloud.com)
[01:14:14] *** Joins: hmans (sid565@user/hmans)
[01:14:14] *** Joins: adamkittelson (sid82542@tinside.irccloud.com)
[01:14:14] *** Joins: etehtsea_ (~kis@164.90.175.135)
[01:14:14] *** Joins: hexology (~hexology@user/hexology)
[01:14:14] *** Joins: rovanion (~rovanion@h-46-59-13-236.A163.priv.bahnhof.se)
[01:14:14] *** Joins: LostKobrakai (~LostKobra@dia.uberspace.de)
[01:14:14] *** Joins: void09 (~void@revinin5minute.com)
[01:14:14] *** Joins: eirik_ (~eirik@84-52-226.93.3p.ntebredband.no)
[01:14:14] *** Joins: mathsaey (~mathsaey@user/mathsaey)
[01:14:14] *** Joins: _axx (~axx@static.246.43.203.116.clients.your-server.de)
[01:14:14] *** Joins: jpaa (~jpaa@87.118.126.66)
[01:14:14] *** Joins: rrix (~rrix@2620:fc:c000:0:69c1:fa22:c0c9:e2c4)
[01:14:14] *** Joins: yeik-the-spik[m] (~yeik-the-@2001:470:69fc:105::6152)
[01:14:14] *** Joins: tcit (~tcit@2001:470:69fc:105::8f)
[01:14:14] *** Joins: Zaab1t (~carlbordu@2001:470:69fc:105::78e)
[01:14:14] *** Joins: Mayel[m] (~mayelmatr@2001:470:69fc:105::bf92)
[01:14:14] *** Joins: Soup[m] (~rktjmpmat@2001:470:69fc:105::cdeb)
[01:14:14] *** Joins: punnie (~punniemat@2001:470:69fc:105::1193)
[01:14:14] *** Joins: IslandUsurper[m] (~lylemente@2001:470:69fc:105::40f8)
[01:14:14] *** Joins: Q[m] (~master-qm@2001:470:69fc:105::1:1a45)
[01:14:14] *** Joins: ilkecan[m] (~ilkecanma@2001:470:69fc:105::1:79b)
[01:14:14] *** Joins: me[m] (~metmtrxmi@2001:470:69fc:105::8cc3)
[01:14:14] *** Joins: kuonNicolas[m] (~kuongoyma@2001:470:69fc:105::329e)
[01:14:14] *** Joins: arathunku[m] (~arathunku@2001:470:69fc:105::1:746)
[01:14:14] *** Joins: tomku[m] (~tomkumozi@2001:470:69fc:105::1:2fcb)
[01:14:14] *** Joins: uhoreg (~uhoreg@2001:470:69fc:105::35f)
[01:14:14] *** Joins: kshlm (~kshlm@2001:470:69fc:105::b46b)
[01:14:14] *** Joins: wehlutyk[m] (~sleauchat@2001:470:69fc:105::2f16)
[01:14:14] *** Joins: Zarathu (~zarathu@li2222-85.members.linode.com)
[01:14:14] *** Joins: wolfshappen (~waff@irc.furworks.de)
[01:14:14] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[01:14:14] *** Joins: meredith (~meredith@ramdas.roomag.org)
[01:14:14] *** Joins: mcint (mcint@user/mcint)
[01:14:14] *** Joins: dbohdan (~dbohdan@user/dbohdan)
[01:14:14] *** Joins: ChanServ (ChanServ@services.libera.chat)
[01:14:14] *** Joins: ds (~ds@user/ds)
[01:14:14] *** Joins: ebb (ebb@user/ebb)
[01:14:14] *** Joins: schakkis_ (~alex@dsl-hkibng11-50dcc5-242.dhcp.inet.fi)
[01:14:14] *** Joins: ggVGc (~ggVGc@a.lowtech.earth)
[01:14:14] *** Joins: B3k (~B3k@b3k.pl)
[01:14:14] *** Joins: paak (~Peter@2a01:4f9:c010:677c::104)
[01:14:14] *** Joins: vhf (~victor@2607:5300:60:1083::1)
[01:14:14] *** Joins: shenghi (~shenghi@chrysocolla.mutablevoid.org)
[01:14:14] *** Joins: serafeim (serafeim@thunix.net)
[01:14:14] *** Joins: kingy (~kingy__@darkpeak.org)
[01:14:14] *** Joins: Ankhers (~Ankhers@ec2-54-196-233-138.compute-1.amazonaws.com)
[01:14:14] *** strontium.libera.chat sets mode: +o ChanServ
[01:14:14] *** Joins: acro (~acro@user/acro)
[01:14:14] *** Joins: rkleef (rolfscribb@pegasus.vankleef.me)
[01:14:14] *** Joins: Poeticode (~Poeticode@user/poeticode)
[01:14:14] *** Joins: jstoker (~jstoker@user/jstoker)
[01:14:14] *** Joins: krjst (~krjst@2604:a880:800:c1::16b:8001)
[01:14:14] *** Joins: sinni800 (~quassel@2a00:1ca8:ae::b0)
[01:14:14] *** Joins: kenichi (~kenichi@nakamura.io)
[01:14:14] *** Joins: picasso (mike@potbox.pixor.net)
[01:14:14] *** Joins: kawzeg (kawzeg@2a01:7e01::f03c:92ff:fee2:ec34)
[01:14:14] *** Joins: Shados (~shados@shados.net)
[01:14:14] *** Joins: ajb (~ajb@cupid.whatbox.ca)
[01:14:14] *** Joins: djanatyn (~djanatyn@vps-7f49a6b0.vps.ovh.ca)
[01:14:14] *** Joins: zups (~meow@2a01:4f9:c010:6036::1)
[01:14:14] *** Joins: whk (~whk@ec2-13-244-150-184.af-south-1.compute.amazonaws.com)
[01:14:14] *** Joins: dequbed (~dequbed@yanduxian.paranoidlabs.org)
[01:14:14] *** Joins: havenwood (~havenwood@about/ruby/havenwood)
[01:14:14] *** Joins: tomku (~tomku@user/tomku)
[01:14:14] *** Joins: reda_ (~reda@user/reda)
[01:14:14] *** Joins: MuffinPimp (~mokou@box.mokou.io)
[01:14:14] *** Joins: bailon (~gizzard@saturn.whatbox.ca)
[01:14:14] *** Joins: Seaduck (~seaduck@2001:19f0:5:d68:5400:ff:fe75:209e)
[01:14:14] *** Joins: Exa (exa@irc.moe)
[01:14:14] *** Joins: bind3 (~bind@md-dingen.tilaa.cloud)
[01:14:14] *** Joins: ouroboros (~ouroboros@user/ouroboros)
[01:14:32] *** Quits: andrhua (~andrhua@31.134.187.8) (Ping timeout: 256 seconds)
[01:14:32] *** Quits: voegelas (~voegelas@www.andreasvoegele.com) (Excess Flood)
[01:14:33] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Max SendQ exceeded)
[01:15:01] *** Joins: voegelas (~voegelas@www.andreasvoegele.com)
[01:15:28] *** Joins: andrhua (~andrhua@31.134.187.8)
[01:18:01] *** Joins: withersh1 (~craig@pa49-184-231-51.pa.vic.optusnet.com.au)
[01:18:52] *** Joins: tmjoen (~textual@84.209.131.177)
[01:19:35] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[01:21:00] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[01:24:43] *** Joins: Caerus (~Caerus@190.113.111.43)
[01:29:13] *** Quits: tmjoen (~textual@84.209.131.177) (Quit: Textual IRC Client: www.textualapp.com)
[01:32:08] *** Joins: Guest307 (~Guest30@2806:2f0:90a1:c77:417f:b80d:6a99:7eab)
[01:32:08] *** Quits: Guest307 (~Guest30@2806:2f0:90a1:c77:417f:b80d:6a99:7eab) (Client Quit)
[01:45:49] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[01:51:35] *** Quits: andrhua (~andrhua@31.134.187.8) (Ping timeout: 252 seconds)
[01:51:51] *** Joins: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[01:54:33] <Caerus> Hello, looking for some general guidance.  I want to get a list of maps coming from a file and iterate through them mapping some keys to the db via ecto and grab some images from an url key inside the map and upload to s3.  Is broadway the best angle to tlacke this? or would a simple pipeline do? I don't want to use message queuing so I guess broadway is out of the question?
[02:02:24] *** Joins: yauhsien (~yauhsien@61-231-58-114.dynamic-ip.hinet.net)
[02:07:28] *** Quits: yauhsien (~yauhsien@61-231-58-114.dynamic-ip.hinet.net) (Ping timeout: 264 seconds)
[02:19:50] *** Quits: henry40408 (~henry4040@112.104.114.35) (Read error: Connection reset by peer)
[02:21:32] *** Joins: henry40408 (~henry4040@112-104-114-35.adsl.dynamic.seed.net.tw)
[02:22:03] <hoppity> Is there a way to have javascript trigger a Phoenix event?
[02:23:42] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:58c0:b83a:3eea:a1cf) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:26:31] <damjan> hoppity: fetch('/api/trigger-event', {method: 'POST'}) ?
[02:28:26] <hoppity> damjan: thank you, is the fetch function part of any particular library?
[02:28:35] <damjan> https://developer.mozilla.org/en-US/docs/Web/API/fetch
[02:29:40] *** Quits: ur5us (~ur5us@2406:e002:6c7b:2301:f812:b76c:617f:99d7) (Ping timeout: 264 seconds)
[02:30:22] <hoppity> damjan: thank you, is there a way to trigger an event like a Liveview event? Like the ones that get triggered when you click, but without clicking just having the javascript do it
[02:38:40] *** Quits: mahmutov (~mahmutov@5.176.50.7) (Ping timeout: 264 seconds)
[02:39:35] *** Joins: notapenguin (~ryu@2804:14d:5680:8a2c:75cf:7f59:516a:b801)
[02:46:42] *** Joins: mgibowski (~mgibowski@50.red-83-63-128.staticip.rima-tde.net)
[02:50:28] <Poeticode> hoppity this might be what you're looking for? https://hexdocs.pm/phoenix_live_view/js-interop.html#triggering-phx-form-events-with-javascript i think you're also able to programmatically click buttons in JS but I don't know what that pseudocode would look like
[02:51:55] <hoppity> Poeticode: yes that is what I am looking for and I had encountered that page before, I just don't understand why I need to add random unneeded html elements to my app just so that I can "hook" into them.
[02:52:21] *** Quits: mgibowski (~mgibowski@50.red-83-63-128.staticip.rima-tde.net) (Ping timeout: 256 seconds)
[02:52:27] <hoppity> Seems like I am either missing something or liveview events should be able to be sent directly from Javascript somehow
[02:54:16] *** Quits: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net) (Ping timeout: 264 seconds)
[03:02:29] <Poeticode> Phoenix Channels might be what you want. In your JS you can connect to the channel, then push events to it. LiveView is built on Channels but heavily tied to the DOM.
[03:03:50] <Poeticode> I do think it's odd that there isn't a way to push a trivial liveview event in JS though (unless someone here knows of a way)
[03:04:19] <hoppity> Poeticode: thank you, I appreciate your help
[03:09:52] *** Quits: Bounga (~nico@82-65-32-175.subs.proxad.net) (Ping timeout: 264 seconds)
[03:12:44] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:58c0:b83a:3eea:a1cf)
[03:31:11] *** Quits: hoppity (~user@user/hoppity) (Remote host closed the connection)
[03:39:48] *** Quits: notapenguin (~ryu@2804:14d:5680:8a2c:75cf:7f59:516a:b801) (Quit: WeeChat 3.3)
[03:47:05] *** Joins: ur5us (~ur5us@2406:e002:6c7b:2301:f812:b76c:617f:99d7)
[04:04:03] *** Joins: yauhsien (~yauhsien@61-231-58-114.dynamic-ip.hinet.net)
[04:08:51] *** Quits: yauhsien (~yauhsien@61-231-58-114.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[04:13:57] *** Quits: blambi (~blambi@c-c11e524e.011-113-67626725.bbcust.telenor.se) (Ping timeout: 256 seconds)
[04:30:29] *** Joins: blambi (~blambi@c-c11e524e.011-113-67626725.bbcust.telenor.se)
[04:38:59] *** Quits: natrys (~natrys@user/natrys) (Quit: natrys)
[04:39:59] *** Quits: damjan (~damjan@user/damjan) (Quit: bye)
[04:41:44] *** Joins: damjan (~damjan@user/damjan)
[04:53:40] *** Quits: gitgood (~gitgood@85.210.185.0) (Ping timeout: 264 seconds)
[05:03:28] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:58c0:b83a:3eea:a1cf) (Quit: Textual IRC Client: www.textualapp.com)
[05:17:27] *** hexology is now known as hexology_
[05:17:51] *** hexology_ is now known as hexology__
[05:18:08] *** hexology__ is now known as hexology`
[05:18:12] *** hexology` is now known as hexology_`
[05:18:57] *** hexology_` is now known as hexology
[05:25:23] *** Joins: Tongir (~tangmang@2403-580f-f5--20bc-a4b0-2c77-e6ad.ip6.aussiebb.net)
[05:53:31] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[05:53:55] *** Joins: sgn (~sgn@user/sgn)
[05:54:59] *** Joins: mgibowski (~mgibowski@50.red-83-63-128.staticip.rima-tde.net)
[06:00:52] *** Quits: mgibowski (~mgibowski@50.red-83-63-128.staticip.rima-tde.net) (Ping timeout: 264 seconds)
[06:03:12] <benwilson512> [\
[06:05:55] *** Joins: yauhsien (~yauhsien@61-231-58-114.dynamic-ip.hinet.net)
[06:10:38] *** Quits: yauhsien (~yauhsien@61-231-58-114.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[06:14:07] *** Joins: mgibowski (~mgibowski@50.red-83-63-128.staticip.rima-tde.net)
[06:19:42] *** Joins: parv (~quass@user/parv)
[06:20:04] *** Quits: mgibowski (~mgibowski@50.red-83-63-128.staticip.rima-tde.net) (Ping timeout: 264 seconds)
[06:29:08] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[06:29:28] *** Joins: sgn (~sgn@user/sgn)
[06:46:37] *** Quits: Tongir (~tangmang@2403-580f-f5--20bc-a4b0-2c77-e6ad.ip6.aussiebb.net) (Remote host closed the connection)
[06:56:53] *** Joins: Tongir (~tangmang@2403-580f-f5--d428-a6eb-467e-bfec.ip6.aussiebb.net)
[07:10:26] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[07:10:40] *** Joins: sgn (~sgn@user/sgn)
[07:11:38] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:12:23] *** Joins: terrorjack (~terrorjac@static.3.200.12.49.clients.your-server.de)
[07:16:09] *** Quits: Tanger (~Donger@signiq.cust.bdr01.per02.wa.vocus.net.au) (Read error: Connection reset by peer)
[07:16:28] *** Joins: Tanger (~Donger@signiq.cust.bdr01.per02.wa.VOCUS.net.au)
[07:30:56] *** Joins: yauhsien (~yauhsien@61-231-58-114.dynamic-ip.hinet.net)
[07:35:40] *** Quits: yauhsien (~yauhsien@61-231-58-114.dynamic-ip.hinet.net) (Ping timeout: 264 seconds)
[07:44:40] *** Quits: ur5us (~ur5us@2406:e002:6c7b:2301:f812:b76c:617f:99d7) (Ping timeout: 264 seconds)
[08:06:36] *** Joins: yauhsien (~yauhsien@61-231-58-114.dynamic-ip.hinet.net)
[08:11:05] *** Quits: yauhsien (~yauhsien@61-231-58-114.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[08:11:43] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[08:11:47] *** Joins: sgn_ (~sgn@user/sgn)
[08:49:07] *** sgn_ is now known as sgn
[09:12:40] *** Joins: mgibowski (~mgibowski@50.red-83-63-128.staticip.rima-tde.net)
[09:18:11] *** Quits: mgibowski (~mgibowski@50.red-83-63-128.staticip.rima-tde.net) (Ping timeout: 252 seconds)
[09:29:38] *** Quits: hwrd (sid64402@id-64402.lymington.irccloud.com) ()
[09:37:09] *** Joins: hwrd (aa272caead@2604:bf00:561:2000::137)
[09:47:01] *** Quits: withersh1 (~craig@pa49-184-231-51.pa.vic.optusnet.com.au) (Quit: WeeChat 3.3)
[09:49:18] *** Joins: yauhsien (~yauhsien@61-231-58-114.dynamic-ip.hinet.net)
[09:52:22] *** Joins: voltone (~voltone@mailgw3.be-all.com)
[09:52:28] *** Quits: sgn (~sgn@user/sgn) (Ping timeout: 264 seconds)
[09:53:44] *** Joins: sgn (~sgn@user/sgn)
[09:57:14] *** Quits: yauhsien (~yauhsien@61-231-58-114.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[10:00:45] <serafeim> hello friends
[10:09:20] *** Quits: Caerus (~Caerus@190.113.111.43) (Ping timeout: 252 seconds)
[10:41:01] *** Joins: mexen (uid495612@user/mexen)
[11:13:55] *** Joins: andrhua (~andrhua@31.134.187.8)
[11:14:25] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Ping timeout: 256 seconds)
[11:20:16] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[11:39:53] *** Parts: staceee (2110cfac7a@2604:bf00:561:2000::b0) (WeeChat 3.3)
[11:41:19] *** Joins: tmjoen (~textual@84.209.131.177)
[11:50:27] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[11:55:16] *** Joins: chgr (~ek@nat-91-137-30-14.net.encoline.de)
[11:57:04] *** Joins: natrys (~natrys@user/natrys)
[11:57:42] *** Joins: ur5us (~ur5us@2406:e002:6c7b:2301:1b18:b746:eaa9:fad6)
[12:00:34] *** Joins: mgibowski (~mgibowski@50.red-83-63-128.staticip.rima-tde.net)
[12:03:17] *** Quits: mgibowski (~mgibowski@50.red-83-63-128.staticip.rima-tde.net) (Remote host closed the connection)
[12:03:29] *** Joins: mgibowski (~mgibowski@50.red-83-63-128.staticip.rima-tde.net)
[12:14:03] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:f00d:18c8:3973:574b)
[12:28:28] *** Quits: tmjoen (~textual@84.209.131.177) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:34:24] *** Joins: tmjoen (~textual@84.209.131.177)
[12:41:14] *** Joins: braulio-bz (~manjaro-u@user/brauliobz)
[12:45:21] *** Quits: ehamberg (sid18208@id-18208.hampstead.irccloud.com) ()
[12:51:36] *** Joins: ehamberg_ (sid18208@id-18208.hampstead.irccloud.com)
[12:52:22] *** Quits: tmjoen (~textual@84.209.131.177) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:57:16] *** Quits: ur5us (~ur5us@2406:e002:6c7b:2301:1b18:b746:eaa9:fad6) (Ping timeout: 264 seconds)
[12:57:52] *** Joins: yauhsien (~yauhsien@61-231-58-114.dynamic-ip.hinet.net)
[13:02:35] *** Quits: yauhsien (~yauhsien@61-231-58-114.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[13:09:45] *** Joins: tmjoen (~textual@84.209.131.177)
[13:23:37] *** Quits: tmjoen (~textual@84.209.131.177) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:31:06] *** Joins: tmjoen (~textual@84.209.131.177)
[13:54:30] *** Quits: voltone (~voltone@mailgw3.be-all.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:57:18] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:f00d:18c8:3973:574b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:58:00] *** Joins: voltone (~voltone@mailgw3.be-all.com)
[14:04:01] *** Quits: flynn (~mcbloch@user/flynn) (Quit: Ping timeout (120 seconds))
[14:04:51] *** Quits: tmjoen (~textual@84.209.131.177) (Quit: Textual IRC Client: www.textualapp.com)
[14:11:51] *** Quits: voltone (~voltone@mailgw3.be-all.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:13:44] *** Joins: voltone (~voltone@mailgw3.be-all.com)
[14:18:41] *** Joins: Bounga (~nico@82-65-32-175.subs.proxad.net)
[14:23:42] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:f00d:18c8:3973:574b)
[14:25:44] *** Joins: henry404082 (~henry4040@112-105-247-102.adsl.dynamic.seed.net.tw)
[14:27:50] *** Quits: henry40408 (~henry4040@112-104-114-35.adsl.dynamic.seed.net.tw) (Ping timeout: 252 seconds)
[14:27:50] *** henry404082 is now known as henry40408
[14:45:53] *** Joins: Caerus (~Caerus@190.113.111.43)
[15:30:45] *** Joins: siiky (~siiky@2001:8a0:ff7d:dd00:1f5d:a8bd:3bdc:60a8)
[15:38:29] *** Quits: natrys (~natrys@user/natrys) (Ping timeout: 256 seconds)
[15:41:24] *** Joins: withershins (~craig@pa49-184-231-51.pa.vic.optusnet.com.au)
[15:52:51] *** Joins: optikfluffel (~optikfluf@2001:9e8:227:c800:15e1:fd5a:6b:702a)
[16:04:20] *** Quits: mgibowski (~mgibowski@50.red-83-63-128.staticip.rima-tde.net) (Remote host closed the connection)
[16:06:53] *** Joins: mgibowski (~mgibowski@50.red-83-63-128.staticip.rima-tde.net)
[16:14:31] *** Joins: Guest2723 (~Guest27@163.79.137.14.sta.wbroadband.net.au)
[16:16:36] *** Quits: Tongir (~tangmang@2403-580f-f5--d428-a6eb-467e-bfec.ip6.aussiebb.net) (Quit: Leaving)
[16:21:07] *** Quits: Guest2723 (~Guest27@163.79.137.14.sta.wbroadband.net.au) (Quit: Client closed)
[16:35:05] *** Quits: Caerus (~Caerus@190.113.111.43) (Quit: Leaving)
[16:55:54] *** Joins: yauhsien (~yauhsien@61-231-58-114.dynamic-ip.hinet.net)
[17:00:39] *** Quits: yauhsien (~yauhsien@61-231-58-114.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[17:56:35] <nickjj> inside of a gen server i set something to run every 2 seconds and it's working great, i'm curious is there any way to configure a gen server so that the 2 second amount of adjustable at runtime?
[17:59:01] *** Quits: chgr (~ek@nat-91-137-30-14.net.encoline.de) (Ping timeout: 256 seconds)
[17:59:24] *** Joins: chgr (~ek@nat-91-137-30-14.net.encoline.de)
[18:04:32] *** Quits: braulio-bz (~manjaro-u@user/brauliobz) (Remote host closed the connection)
[18:05:13] *** Joins: brauliobz (~manjaro-u@user/brauliobz)
[18:08:31] <srfsh> nickjj: you can probably send it another command to set it on runtime.
[18:18:21] *** Quits: chgr (~ek@nat-91-137-30-14.net.encoline.de) (Quit: WeeChat 3.3)
[18:23:42] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:f00d:18c8:3973:574b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:27:47] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:f00d:18c8:3973:574b)
[18:47:35] *** Quits: optikfluffel (~optikfluf@2001:9e8:227:c800:15e1:fd5a:6b:702a) (Quit: Good bye!)
[18:58:42] *** Joins: notapenguin (~ryu@179.222.254.137)
[19:10:39] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[19:13:15] *** Quits: notapenguin (~ryu@179.222.254.137) (Ping timeout: 256 seconds)
[19:14:05] *** Joins: notapenguin (~ryu@2804:14d:5680:8a2c::2)
[19:15:14] *** Quits: notapenguin (~ryu@2804:14d:5680:8a2c::2) (Client Quit)
[19:20:56] *** Quits: voltone (~voltone@mailgw3.be-all.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:26:51] *** Joins: phaleth (~phaleth@user/phaleth)
[19:28:16] *** Quits: parv (~quass@user/parv) (Quit: parv)
[19:30:36] *** Quits: mooff (mooff@awful.cooking) (Read error: Connection reset by peer)
[19:31:34] *** Joins: mooff (mooff@awful.cooking)
[19:37:15] *** Joins: hoppity (~user@user/hoppity)
[19:38:44] <hoppity> Hi guys, these are my dependencies and what mix hex.outdated is giving me. Can you tell me why phoenix_live_view is marked as "Update not possible"?  https://dpaste.org/ff3r
[19:46:09] *** Quits: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[19:47:34] *** Joins: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net)
[19:57:49] *** Joins: yauhsien (~yauhsien@61-231-58-114.dynamic-ip.hinet.net)
[20:02:33] *** Quits: yauhsien (~yauhsien@61-231-58-114.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[20:11:38] <Nicd> hoppity: the updated version wouldn't match the version spec in your deps list
[20:12:10] *** Joins: pflanze_ (~pflanze@5-168-208-80-pool.fiber.fcom.ch)
[20:12:36] <Nicd> nickjj: have the GenServer take it as an option and store it in the state. then add an API to change it in the state
[20:12:57] *** Joins: carrotzoup20593 (~carrotzou@static.181.67.251.148.clients.your-server.de)
[20:13:02] *** Joins: danieli6 (~danieli@user/danieli)
[20:13:22] *** Quits: wgwz_ (~wgwz@45.55.193.150) (Ping timeout: 256 seconds)
[20:13:23] *** Joins: wgwz (~wgwz@45.55.193.150)
[20:13:56] *** Quits: harrow (~harrow@static.38.6.217.95.clients.your-server.de) (Ping timeout: 256 seconds)
[20:14:31] *** Quits: andrhua (~andrhua@31.134.187.8) (Remote host closed the connection)
[20:15:04] *** Joins: harrow (~harrow@static.38.6.217.95.clients.your-server.de)
[20:15:04] *** Quits: pflanze (~pflanze@5-168-208-80-pool.fiber.fcom.ch) (Ping timeout: 256 seconds)
[20:15:04] *** Quits: danieli (~danieli@user/danieli) (Ping timeout: 256 seconds)
[20:15:04] *** Quits: carrotzoup2059 (~carrotzou@static.181.67.251.148.clients.your-server.de) (Ping timeout: 256 seconds)
[20:15:04] *** Quits: nisstyre (~wes@user/nisstyre) (Ping timeout: 256 seconds)
[20:15:05] *** Quits: gamache (~gamache@gunyoki.net) (Ping timeout: 256 seconds)
[20:15:05] *** Quits: joshproehl (~quassel@user/joshproehl) (Ping timeout: 256 seconds)
[20:15:05] *** danieli6 is now known as danieli
[20:15:15] *** Joins: joshproehl (~quassel@user/joshproehl)
[20:16:49] *** Joins: gamache (~gamache@gunyoki.net)
[20:17:51] *** Quits: wgwz (~wgwz@45.55.193.150) (Ping timeout: 256 seconds)
[20:17:51] *** Joins: wgwz_ (~wgwz@45.55.193.150)
[20:20:44] *** Quits: niko (~niko@libera/staff/niko) (Ping timeout: 606 seconds)
[20:27:14] *** Joins: duane_ (~duane@172.58.62.177)
[20:28:18] *** Joins: nisstyre (~wes@user/nisstyre)
[20:28:21] *** Joins: niko (~niko@libera/staff/niko)
[20:39:25] *** Joins: natrys (~natrys@user/natrys)
[20:40:45] <nickjj> Nicd, thanks, do you happen to have a docs reference to implement that?
[20:41:42] <phaleth> hoppity: try changing versions of deps in mix.exs manually https://paste.debian.net/plain/1221378
[20:44:01] <Nicd> nickjj: not docs
[20:47:54] <Nicd> nickjj: basically see here how I take the brightness as an option at start but also have a set_brightness API call for the GenServer: https://gitlab.com/Nicd/ex_speed_game/-/blob/master/lib/game/lights.ex#L17
[20:48:14] <Nicd> just do that but with your delay time instead
[20:53:13] <nickjj> Nicd, thanks -- it looks like the GenServer.call bit is the important part?
[20:53:49] <nickjj> and then setting up a handle_call to accept the call from somewhere else in the app?
[20:53:57] <Nicd> well if you think about it, you have your GenServer process running and you have a different process that wants to affect that GenServer
[20:54:15] <nickjj> the effect i was going for was this: Process.send_after(self(), :work, 1_000)
[20:54:32] <nickjj> but then instead of hard coding the 1 second, i wanted to read a field from a database
[20:54:33] <Nicd> so either in that other process you can directly use GenServer.call(server, some_magic) or you can wrap it so it's nicer: do_some_magic(server)
[20:54:53] <Nicd> well you could read that in your GenServer directly if you wanted
[20:57:09] <nickjj> i think it makes sense on why it doesn't work as i thought tho, just changing that value from 1000 to 10000 makes no difference by itself
[20:57:40] <Nicd> changing what value?
[20:58:02] <nickjj> if i start the server with Process.send_after(self(), :work, 1_000) and then change 1_000 to 10_000 it still runs every 1s
[20:58:46] <Nicd> presumably you would do something like `delay = get_delay_from_db(); Process.send_after(self(), :work, delay)`
[20:58:48] <hoppity> Nicd: thank you
[20:59:38] <nickjj> that should work for initially loading it but if that value in the DB changes at runtime, something would need to happen to update the gen server to re-run the query to get the new time?
[20:59:52] <hoppity> Nicd: I dont understand what mix outdated is doing then, I would assume it tells me what CAN be updated but if it tells me something *cannot* be updated because I marked something in Mix.exs then that is kind of silly isn't it?
[20:59:59] <Nicd> but... send_after happens only once
[21:00:02] <Nicd> you have to keep re-calling it
[21:00:17] <Nicd> so next time you'll have the new delay
[21:00:48] <Nicd> hoppity: it's telling you what you can update safely with `mix deps.update` according to your version specs in mix.exs
[21:00:57] <Nicd> safely and automatically*
[21:01:12] <nickjj> is "next time" the next time i restart my app?
[21:01:33] <Nicd> nickjj: I understood this timer is repeating
[21:01:36] <Nicd> right?
[21:01:58] <nickjj> https://hexdocs.pm/elixir/1.12/GenServer.html#module-receiving-regular-messages
[21:02:21] <nickjj> it is that example exactly, except it runs every 2 seconds
[21:02:22] <Nicd> exactly, that means you keep calling Process.send_after again and again
[21:02:37] <Nicd> so you have a chance of changing the delay on every call
[21:03:15] <nickjj> by making schedule_work take the delay as an argument?
[21:03:34] <Nicd> for example
[21:03:48] <Nicd> or making it retrieve the delay from the DB directly
[21:04:03] <nickjj> and then using that example code for reference, in the handle_info i could do schedule_work(get_db_delay()) and then schedule_work's Process.send_after would reference a new delay arg?
[21:04:18] <Nicd> of course querying the DB every 2 seconds could be an issue, or it could not
[21:04:25] <nickjj> so schedule_work/0 becomes schedule_work/1
[21:04:53] <nickjj> yeah realistically i'd probably cache that amount
[21:05:51] <Nicd> now I have to play some videogames -->
[21:06:04] <rawtaz> :D
[21:06:08] <rawtaz> which ones?
[21:06:22] <nickjj> if the above workflow works, it's still interesting how it doesn't work without arguments tho
[21:06:35] <nickjj> because technically the schedule_work function is getting called again and again and again
[21:06:35] <Nicd> I don't understand what you mean
[21:07:13] <nickjj> on each execution it should do the db lookup on demand right?
[21:07:34] <nickjj> basically what you proposed with delay = get_delay_from_db(); Process.send_after(self(), :work, delay)
[21:08:35] <nickjj> before i introduced the db i tried changing it by hand in development, expecting the change to take effect similar to how you would change code in an html template and it would be reflected in the browser
[21:09:07] <Nicd> you mean with Phoenix code reloader?
[21:09:46] <nickjj> not a live reload in that case, but the general idea of code living in lib/ will have their changes take effect without having to restart the phoenix web server
[21:10:10] <Nicd> I don't know if code reloader has provisions for touching running processes
[21:10:42] <Nicd> in general in Erlang hot reloading, code will be switched to new version on a remote call, i.e. Full.Module.Name.function()
[21:11:36] <nickjj> thanks, that makes sense -- go enjoy your video game, i think we're all good here, i'll have it read from a DB from the beginning
[21:11:42] <Nicd> of course if you changed how the state of the GenServer looks like, you would run into trouble because the state would be from an old version and the code from a new version. I don't know if code reloader does anything to GenServers because of that.
[21:12:01] <Nicd> I only rely on code reloader to reload my web stuff
[21:12:09] <Nicd> rawtaz: Mirror's Edge Catalyst
[21:12:59] <nickjj> this is a fun case to reflect on tho, it really is just functions
[21:13:19] <nickjj> if schedule_work is being called every 2 seconds, there's nothing magical about a genserver that would prevent it from reading the delay from a db or not
[21:14:28] <nickjj> maybe that's also why your Repo is listed first in the children list, to ensure all processes have access to that?
[21:14:45] *** Quits: mgibowski (~mgibowski@50.red-83-63-128.staticip.rima-tde.net) (Remote host closed the connection)
[21:15:18] *** Joins: mgibowski (~mgibowski@50.red-83-63-128.staticip.rima-tde.net)
[21:18:29] *** Quits: Bounga (~nico@82-65-32-175.subs.proxad.net) (Ping timeout: 256 seconds)
[21:19:37] *** Quits: mgibowski (~mgibowski@50.red-83-63-128.staticip.rima-tde.net) (Ping timeout: 256 seconds)
[21:30:51] <Nicd> nickjj: the supervisor children are started in order so if anything needs Repo, it should be started after it
[21:31:49] <nickjj> yep, thanks for everything, ultimately i will reference your code because i think no matter what i will need a handle_call component
[21:32:45] <nickjj> without that then i could get stuck waiting, if it updates every 2 seconds but i change the DB value to 10 minutes and then 1 minute after that change the DB value to 10 seconds, i'll have to wait 10 minutes for the new cycle to happen i think
[21:33:18] *** Quits: havenwood (~havenwood@about/ruby/havenwood) (Quit: The Lounge - https://thelounge.chat)
[21:33:59] *** Joins: havenwood (~havenwood@about/ruby/havenwood)
[21:38:33] *** Joins: gitgood (~gitgood@85.210.185.0)
[21:38:48] *** Joins: andreyorst (~andreyors@broadband-90-154-71-13.ip.moscow.rt.ru)
[21:42:59] <Nicd> you'll still have to wait unless you cancel and restart the timer in the handle_call
[21:46:12] *** Joins: mgibowski (~mgibowski@50.red-83-63-128.staticip.rima-tde.net)
[21:51:41] *** Quits: mgibowski (~mgibowski@50.red-83-63-128.staticip.rima-tde.net) (Ping timeout: 252 seconds)
[21:54:08] <hoppity> Nicd: thank you
[21:59:56] *** Joins: yauhsien (~yauhsien@61-231-58-114.dynamic-ip.hinet.net)
[22:04:26] *** Quits: yauhsien (~yauhsien@61-231-58-114.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[22:14:26] *** lvlinux is now known as ruhnet
[22:15:13] *** ruhnet is now known as lvlinux
[22:17:04] *** Joins: mahmutov (~mahmutov@5.176.7.214)
[22:23:41] *** Joins: mgibowski (~mgibowski@50.red-83-63-128.staticip.rima-tde.net)
[22:27:59] *** Quits: mgibowski (~mgibowski@50.red-83-63-128.staticip.rima-tde.net) (Ping timeout: 252 seconds)
[22:37:08] *** Joins: glassofethanol (~ethanmorg@82.16.192.251)
[22:39:46] *** Quits: glassofethanol (~ethanmorg@82.16.192.251) (Client Quit)
[22:45:14] *** Quits: duane_ (~duane@172.58.62.177) (Ping timeout: 256 seconds)
[22:49:47] *** Joins: ur5us (~ur5us@203.86.198.200)
[23:11:13] *** Joins: 073AABQIG (~w1ntermut@dslb-002-201-217-078.002.201.pools.vodafone-ip.de)
[23:12:02] *** 073AABQIG is now known as w1ntermute
[23:21:26] *** Quits: ur5us (~ur5us@203.86.198.200) (Remote host closed the connection)
[23:21:40] *** Joins: ur5us (~ur5us@203.86.198.200)
[23:28:37] *** Joins: be1m0nt (~be1m0nt@pool-100-37-244-180.nycmny.fios.verizon.net)
[23:39:57] <hoppity> I am having a weird issue where an image looks correct in development but looks way bigger in production. I am on Phoenix 1.6.2 with webpack. Has anyone ran into this issue before?
[23:45:18] *** Quits: ur5us (~ur5us@203.86.198.200) (Ping timeout: 256 seconds)
[23:46:28] *** Joins: andrhua (~andrhua@31.134.187.8)
[23:58:13] <nickjj> hoppity, nope but does bigger mean it looks like it's been rendered without a class that keeps the size in check? if so, if you're using purge css with tailwind maybe that template path isn't included?
[23:59:07] <hoppity> nickjj: it could be, I just don't understand how migrating from Phoenix 1.6.0 to 1.6.2 could have caused this issue.
