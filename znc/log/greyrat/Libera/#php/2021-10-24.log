[00:00:27] <Blondie101010> no_gravity:  what does this do different?
[00:00:45] <no_gravity> It prevents that readline_callback_handler_install() is called twice.
[00:01:04] <Blondie101010> oh so you found YOUR bug
[00:01:11] <Blondie101010> now remove the global
[00:01:15] <TinoDidriksen> BadAdviceCat, right, so not libedit.
[00:01:31] <no_gravity> Blondie101010: The global is needed to memorize if the function has been called before.
[00:01:35] <Blondie101010> no
[00:01:52] * BadAdviceCat sets mode: +b global!*@*
[00:01:56] <Blondie101010> globals are *never* required
[00:02:08] <no_gravity> Blondie101010: Show me an alternative
[00:02:41] <Blondie101010> why not simply call `readline_callback_handler_install('', function() { });` at the beginning of the script?
[00:03:19] <BadAdviceCat> Yeah, good point.
[00:03:26] <BadAdviceCat> That thing is in a friggen loop too.
[00:03:58] <no_gravity> Blondie101010: That would be an option.
[00:04:16] <Blondie101010> I don't see it as an option as I can't see why you would not do that already
[00:04:16] <TinoDidriksen> Docs for readline_callback_handler_install() recommends calling it multiple times like this for certain input/output patterns.
[00:04:24] <no_gravity> Blondie101010: The loop is not needed: https://pastebin.com/raw/gP6KjTv2
[00:04:26] <Blondie101010> ugh
[00:04:32] <no_gravity> BadAdviceCat: The loop is not needed: https://pastebin.com/raw/gP6KjTv2
[00:05:02] <no_gravity> Blondie101010: Because it is part of what getKey() does. Not part of what the script as a whole does.
[00:05:09] <da_wunder> like `function foo { static $cache; if ($cache === null} { ... $cache = 'something'; } return $cache; }`
[00:05:31] <no_gravity> Blondie101010: A better version of getKey() would probably reset the readline_callback_handler after it got the key.
[00:05:59] <no_gravity> da_wunder: function wide static variables are a thing?
[00:06:09] <Blondie101010> then your approach with a variable would have to account for that, and be returned (not global)
[00:06:13] <Blondie101010> hmmm
[00:06:35] <Blondie101010> yeah that's not simple to clean
[00:07:02] <da_wunder> those will return the same for same request - so if you're calling that method multiple times in your request that value is just calculated once
[00:07:15] <no_gravity> da_wunder: There is no request.
[00:07:28] <Blondie101010> no_gravity: that call probably should not be in getKey()
[00:07:48] <da_wunder> so what is triggering that then?
[00:07:56] <Blondie101010> when should it be called?
[00:08:01] <da_wunder> and really same goes for cli commands
[00:08:33] <no_gravity> TIL static variables inside of functions are a thing: https://3v4l.org/GamYb
[00:08:33] <Blondie101010> why do you need that call back handler?
[00:08:47] <Blondie101010> yes but that won't help if you don't know when to call it
[00:09:10] <Blondie101010> when you do, you write clean code to do exactly that
[00:09:29] <Blondie101010> and yes I might agree to static variables, though adrian won't be happy
[00:10:08] <da_wunder> that is the simplest thing how you could do some caching
[00:10:59] <Blondie101010> no_gravity:  da_wunder's code doesn't include anything related to HTTP
[00:11:18] <Blondie101010> I'm saying that because your point is well pointless
[00:11:48] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 244 seconds)
[00:13:08] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[00:13:32] <no_gravity> Ok, using a static instead of a global now: https://pastebin.com/raw/pzb43YHw
[00:14:17] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[00:14:49] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[00:14:59] <Blondie101010> that is useless
[00:15:14] <no_gravity> It's a bit crazy. In theory the getKey() function should remove the handler after it got the key I think. But I tried that and it also leads to segfaults.
[00:15:15] <Blondie101010> I said *when you find out when it needs to be called*
[00:15:50] <Blondie101010> if you need to call it after getting a key, you do that, so no variables needed
[00:17:28] <Blondie101010> and rewriting ncurses in PHP is not the most brilliant concept
[00:17:31] <no_gravity> Blondie101010: The clean approach would be to call readline_callback_handler_remove() after getting the key.
[00:17:43] <no_gravity> Blondie101010: But that also leads to segfaults.
[00:17:45] <Blondie101010> *if* that is needed
[00:17:53] <Blondie101010> so it's probably not
[00:18:07] <Blondie101010> does it work if you only call it at the beginning?
[00:18:24] <da_wunder> no_gravity: could you provide a full example of your use case, where we can see that segfault ?
[00:19:25] <no_gravity> da_wunder: My use case is to read a key from the keyboard without it being output to the terminal.
[00:19:32] <Blondie101010> if he wasn't able to see the numerous pastes so far, too bad
[00:19:52] <Blondie101010> ah so that's why you use the call back
[00:20:01] <da_wunder> no_gravity: so create an example about that issue
[00:20:08] <no_gravity> da_wunder: https://pastebin.com/raw/pzb43YHw
[00:20:42] <Blondie101010> no_gravity: ok so does everything work fine if you only call it once?
[00:21:43] <no_gravity> Blondie101010: Not completely. Now when I resize the screen, I get this: PHP Warning:  stream_select(): unable to select [4]: Interrupted system call (max_fd=0)
[00:21:58] <Blondie101010> that is normal
[00:22:07] <Blondie101010> just handle your logging better
[00:22:20] <no_gravity> Yeah, I thought it would be solvable.
[00:22:20] <Blondie101010> ie:  don't output warnings
[00:22:42] <no_gravity> In fact in the future I want to trap that signal and redraw the screen according to the new size.
[00:22:46] <Blondie101010> but why are you making a PHP ncurses equivalent?
[00:22:50] <da_wunder> ok, so that is console command - right?
[00:24:02] <da_wunder> and if that is the use case, I really recommend you to use eg. Symfony\Console component for that, those common uses cases are handled with those libraries...
[00:24:20] <no_gravity> Blondie101010: I wrote a terminal based alternative to phpmyadmin. So I needed that functionality
[00:25:01] <no_gravity> da_wunder: My whole application is a single php file I wrote myself. I prefer that over frameworks and libraries.
[00:26:17] *** Quits: WishBoy (~WishBoy@user/wishboy) (Quit: be right back, change my ONU firmware)
[00:26:49] <da_wunder> just to note, that I was saying to use component - not framework, you know that eg. symfony\console is something that you can use within any project - that component itself does not require you to use whole framework
[00:27:12] <Blondie101010> that would just make things worse, not better :S
[00:27:51] <biberu> no_gravity: why not just use the standard cli client?
[00:27:52] *** Joins: snedd (~snedd@86.14.114.137)
[00:28:03] <da_wunder> ^
[00:28:25] <no_gravity> da_wunder: My experience with Symfony components is that they have dependencies that also have dependencies that also have dependencies ...
[00:28:50] <da_wunder> no_gravity: so?
[00:29:09] <Blondie101010> it would not help them
[00:29:14] <no_gravity> biberu: Because my thing is a TUI application. You do not write queries. You open tables, scroll around, update/insert/delete data in a terminal ui.
[00:29:19] <BadAdviceCat> no_gravity, do you understand why it is convenient to have components separated? And then only include them when necessary?
[00:29:59] <Blondie101010> what would they gain from that module?
[00:30:50] <da_wunder> and really what is the need for terminal application like that? why don't you just use eg. phpmyadmin, adminer, etc. for that ?
[00:31:32] <no_gravity> da_wunder: It is faster and works over ssh.
[00:31:38] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 260 seconds)
[00:32:04] <Blondie101010> faster?  doubtful... the same at best
[00:32:27] <da_wunder> "faster" part I don't get at all, and works overe ssh - there is mysql command to make that happen...
[00:32:45] <__adrian> hm...  i can't help but think there's some existing alternative to a "cli version of phpmyadmin" ...
[00:33:14] * BadAdviceCat hugs pgadmin4.
[00:33:17] <no_gravity> __adrian: I searched long and hard and tried a bunch of solutions before I decided to write my own.
[00:33:36] <no_gravity> __adrian: There was *nothing* usable out there.
[00:34:27] <da_wunder> for cli I have just used this - https://github.com/matthiasnoback/symfony-console-form
[00:34:35] <__adrian> apologies; that was a bit of sarcasm
[00:35:28] <no_gravity> I call it a "Terminal based database browser".
[00:35:42] <no_gravity> Afaik there is no other usable one.
[00:36:30] <Blondie101010> why would you limit yourself to cli for a UI?
[00:36:37] <Blondie101010> that is the insane part
[00:36:38] <__adrian> https://dev.mysql.com/doc/refman/8.0/en/mysql.html
[00:36:46] <da_wunder> that "browser" makes me think that tool does just read the database and not make any modifications to that - right?
[00:37:11] <Blondie101010> adminer is probably a good prospect
[00:37:15] <BadAdviceCat> I ended up with using command line and adminer to deal with mysql related stuff.
[00:37:42] <BadAdviceCat> No good free clients on Linux that I'm aware of.
[00:37:46] <no_gravity> da_wunder: It supports editing values, inserting and deleting rows.
[00:38:20] <da_wunder> no_gravity: so why don't you just use pure mysql command for all that?
[00:38:55] <no_gravity> da_wunder: For the same reason people moved from dos to windows.
[00:39:07] <Blondie101010> then use adminer
[00:39:10] <__adrian> lack of 16-bit support?
[00:39:12] <BadAdviceCat> I can't stand DBeaver, it's ugly.
[00:39:16] *** Quits: parabellum (~parabellu@p200300d3973bc100bb67c9a370f781c8.dip0.t-ipconnect.de) (Quit: Leaving)
[00:40:06] <da_wunder> no_gravity: then I would recommend you to use eg. symfony/cli and https://github.com/matthiasnoback/symfony-console-form to complish what you want to do
[00:41:01] <no_gravity> da_wunder: Too late. I already wrote my thing and Im happy with it. Using it for all my DB editing for like 2 years now.
[00:41:11] <da_wunder> eg. I have done user management with those two - where I can see what users there are, modify those, delete, inserts new ones - with nice console input
[00:42:21] <BadAdviceCat> no_gravity, maybe so, but at least there is still room for improvement. It was just discovered you were using `global` in your code.
[00:42:32] <no_gravity> da_wunder: And as I said, my feeling is that Symfonies modules are too fat.
[00:42:48] <no_gravity> BadAdviceCat: Now I am using static :)
[00:42:53] <__adrian> why are you "feeling" about that?
[00:43:00] <__adrian> why not check?
[00:43:15] <__adrian> (symfony/console is real nice)
[00:43:29] <no_gravity> __adrian: Last time I installed one it pulled in a gazillion files.
[00:43:32] <BadAdviceCat> (I've tried symfony/console, it's pretty good.)
[00:43:50] <__adrian> maybe you should re-count
[00:43:57] <da_wunder> no_gravity: there is not so much dependencies - https://packagist.org/packages/symfony/console
[00:44:05] <BadAdviceCat> no_gravity, do you understand how PHP execute code?
[00:44:08] <Blondie101010> no_gravity:  you didn't give any single case where you need to redo the call back
[00:44:26] <da_wunder> and really that is package that most of are using
[00:44:31] <Blondie101010> so no variable is needed... just do it once
[00:44:50] <no_gravity> da_wunder: But does that show the first tree?
[00:44:51] *** Joins: kerunaru (~Jmcb@202.red-79-146-100.dynamicip.rima-tde.net)
[00:44:55] <no_gravity> da_wunder: But does that show the full tree?
[00:45:43] <__adrian> no_gravity: it's not a module. it's a component. it's standalone.
[00:45:55] <__adrian> if you got it by installing all of symfony, you didn't have to.
[00:47:01] <no_gravity> __adrian: "symfony/console" requires "symfony/string" for example. And "symfony/string" requires another 5 things and who knows what those require. That is what I mean.
[00:47:13] *** Joins: tw2113 (~tw2113@2001-48F8-6-1318-D2AB-D5FF-FE77-2BD5-dynamic.midco.net)
[00:47:23] <da_wunder> no_gravity: just installed that - https://gist.github.com/tarlepp/298466f083b084c7c93fc0b1378a561c
[00:47:53] <no_gravity> da_wunder: I see
[00:48:01] <__adrian> it uses symfony/string
[00:48:05] <__adrian> it's not bloat
[00:48:48] <no_gravity> Ok, it was a lot of fun. I gotta go.
[00:49:02] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[00:49:30] <da_wunder> and `du -sh` gets outputs `1.8MB` -  which is basically nothing...
[00:49:39] <da_wunder> and he/she is gone...
[00:49:44] <BadAdviceCat> The polyfills aren't going to be used if all the correct extensions are installed.
[00:49:52] <BadAdviceCat> With, latest version of PHP.
[00:50:05] <da_wunder> yep
[00:51:04] <BadAdviceCat> This is suppose to be a long running process, so it's not like it will call all of the functions in all of the files for every little task, in every iteration of that loop.
[00:51:18] <__adrian> https://php.watch/articles/composer-replace-polyfills  figured there had to be something like this.
[00:54:53] <BadAdviceCat> Thanks for the link.
[00:58:26] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 245 seconds)
[00:59:59] *** Joins: stenno (~stenno@user/stenno)
[01:10:40] *** Quits: genom (~g@37.214.43.122) (Remote host closed the connection)
[01:29:33] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 258 seconds)
[01:38:01] *** Joins: stenno (~stenno@user/stenno)
[01:57:55] *** Quits: tex (~super@user/dix) (Ping timeout: 258 seconds)
[02:00:58] *** Quits: guido (~guido@host-87-17-253-114.retail.telecomitalia.it) (Quit: WeeChat 3.3)
[02:03:01] *** Quits: snedd (~snedd@86.14.114.137) (Ping timeout: 245 seconds)
[02:12:11] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 244 seconds)
[02:33:54] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 260 seconds)
[02:36:23] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 264 seconds)
[02:52:44] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[02:54:52] *** Joins: pmercado (~pmercado@186.107.62.14)
[03:05:47] *** Joins: WishBoy (~WishBoy@user/wishboy)
[03:08:26] *** Quits: Slartibart (~user@c-d6ddd854.217486-0-69706f6e6c79.bbcust.telenor.se) (Ping timeout: 245 seconds)
[03:09:32] *** Joins: Slartibart (~user@c-d6ddd854.217486-0-69706f6e6c79.bbcust.telenor.se)
[03:14:10] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:16:55] *** Joins: stenno (~stenno@user/stenno)
[03:26:47] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 264 seconds)
[03:52:25] *** Quits: pmercado (~pmercado@186.107.62.14) (Ping timeout: 244 seconds)
[04:25:30] *** Quits: magla (~gelignite@55d43ee1.access.ecotel.net) (Quit: Stay safe!)
[04:32:15] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[04:37:32] *** Joins: vlm (~vlm@user/vlm)
[04:44:33] *** Joins: stenno (~stenno@user/stenno)
[04:51:57] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 258 seconds)
[05:02:01] *** Joins: The_Jag_ (~The_Jag@host-87-15-17-212.retail.telecomitalia.it)
[05:04:15] *** Quits: The_Jag (~The_Jag@host-87-17-20-218.retail.telecomitalia.it) (Ping timeout: 260 seconds)
[05:05:16] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[05:21:25] *** Joins: stenno (~stenno@user/stenno)
[05:27:23] *** Quits: kerunaru (~Jmcb@202.red-79-146-100.dynamicip.rima-tde.net) (Ping timeout: 264 seconds)
[05:41:00] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 260 seconds)
[05:46:27] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[06:12:17] *** Quits: winlundn (nick@2600:3c01::f03c:92ff:fef3:7260) (Quit: WeeChat 2.8)
[06:12:23] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 264 seconds)
[06:24:30] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 265 seconds)
[06:36:04] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[06:41:22] *** Joins: Junxter (~Junxter@114.221.230.117)
[06:51:40] *** Quits: Junxter (~Junxter@114.221.230.117) (Ping timeout: 252 seconds)
[06:57:19] *** Quits: connrs (~connrs@user/connrs) (Read error: Connection reset by peer)
[06:59:12] *** Joins: connrs (~connrs@user/connrs)
[06:59:25] *** Joins: snedd (~snedd@86.14.114.137)
[07:04:36] *** Joins: Junxter (~Junxter@114.221.230.117)
[07:34:39] *** Quits: Junxter (~Junxter@114.221.230.117) (Remote host closed the connection)
[07:35:02] *** Joins: Junxter (~Junxter@114.221.230.117)
[07:36:49] *** Quits: Zauberfisch (~Zauberfis@62.240.152.166) (Read error: Connection reset by peer)
[07:37:38] *** Joins: Zauberfisch (~Zauberfis@62.240.152.166)
[07:43:56] *** Joins: Rockwood (~Rocky@user/rocky)
[08:03:55] *** Joins: jaggz (~jaggz@user/jaggz)
[08:04:20] <jaggz> in debian, with composer 2.0.9, composer create-project says: "Support for Composer 1 is deprecated"
[08:04:47] <Rockwood> you can UPGRADE it
[08:05:14] <jaggz> (technically, it's a "Warning from https://repo.packagist.org:")
[08:05:18] <jaggz> Rockwood, hm
[08:05:47] *** Quits: LuKaRo (~LuKaRo@p5deda401.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[08:06:37] <Blondie101010> jaggz: composer -v
[08:07:52] <jaggz> Composer version 1.9.0 2019-08-02 20:55:32
[08:08:07] <Blondie101010> so replace it with the latest version
[08:08:38] *** Joins: LuKaRo_ (~LuKaRo@p4fc32190.dip0.t-ipconnect.de)
[08:08:43] <jaggz> i'm trying to see how to do this in debian
[08:08:54] <jaggz> or if I can do it in my own user account that'd work too
[08:08:57] <__adrian> composer self-update
[08:09:33] <jaggz> wow.. that took like .25s
[08:09:35] <jaggz> Composer version 2.1.9 2021-10-05 09:47:38
[08:09:44] <Rockwood> itself?
[08:09:44] <jaggz> where's it keep its stuff?
[08:10:47] <__adrian> depends on your distro and how you installed
[08:11:03] <__adrian> maybe in ~/.config/composer
[08:12:18] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 244 seconds)
[08:13:07] <Blondie101010> if it got installed by the package manager, it might get overwritten, or give an error on update
[08:13:49] <Blondie101010> I would copy it, uninstall, and move it back
[08:14:28] <WishBoy> you are here so far, no sleep is
[08:14:44] <Rockwood> WishBoy, nice name :D
[08:15:28] <jaggz> I installed composer initially as the debian package.  I ran composer self-update just as my user and "it worked".  I'm stracing it to see where it keeps its settings now..
[08:15:53] <WishBoy> Rockwood thanks sir Rock
[08:15:54] <jaggz> ~/.config/composer/ has some keys*.php files from 2019 .. that's all. :)
[08:16:50] <jaggz> eek.. looks like my user account wrote to /usr/local/bin/composer
[08:16:56] <jaggz> that doesn't seem kosher
[08:18:05] <Blondie101010> if you ran the self-update from that user account and it has write permission to either update the parent or the file (depending on how composer does it)
[08:18:06] <jaggz> how'd that even happen.. /usr/local/bin is owned by root.  some composer file must be suid?
[08:18:22] <Blondie101010> that's not what suid does
[08:19:21] <jaggz> not sure what you mean
[08:19:37] <Blondie101010> I explained it pretty clearly
[08:19:56] <jaggz> I think /usr/local/bin/composer probably didn't exist before this.. but it could have, I guess.
[08:20:24] <jaggz> I wonder what else it's created, and how to clean it up
[08:20:27] <Blondie101010> you ran the self-update which means the process you called from your user account either deleted the current file and created the new one (parent write permission) or updated the file itself (file write permission)
[08:20:48] <Blondie101010> when you create a new file, it is owned by you, unless there are special rules
[08:21:12] <Blondie101010> actually that clarifies it
[08:21:20] <Blondie101010> it means it's the first scenario
[08:22:06] <jaggz> I moved /usr/local/bin/composer out so it's not used, hash -r'ed, and /usr/bin/composer is now used by my user.  composer -V now shows 2.0.9
[08:22:35] <jaggz> I *think* I might have installed composer, somehow, a while back, and that 1.9.0 version was running and was NOT the debian version
[08:22:43] <Blondie101010> stop
[08:22:55] <Blondie101010> what is the problem?
[08:23:21] <Blondie101010> the self-update will automatically be owned by your user
[08:23:28] <Blondie101010> unless you remove the permissions
[08:23:49] <Blondie101010> sudo chmod o-w /usr/local/bin
[08:23:57] <Blondie101010> then it won't happen again
[08:24:24] <jaggz> First problem is that I am trying to figure out how this composer bin got here in /usr/local/bin which is root.root and not o+w either
[08:24:40] <Blondie101010> ok go see your sysadmin or computer support
[08:24:59] <Blondie101010> can't spend hours explaining you basic computer use on the wrong channel
[08:25:23] <jaggz> now, I am assuming I did something sometime and installed that there.. but I want to make sure I didn't leave a mess -- ie. is removing that bin/composer sufficient to get me back using composer again
[08:25:37] <Blondie101010> I told you what you should do
[08:25:44] <Blondie101010> uninstall it, then install it manually
[08:26:14] <jaggz> Blondie101010, meaning, don't use the debian system version, and install it manually as my user.. ?  ok
[08:26:22] <Blondie101010> hold on
[08:26:35] <Blondie101010> like I initially said, I'd keep the version 2 you presently have
[08:26:48] <Blondie101010> dammit
[08:27:16] <Blondie101010> cp /usr/local/bin/composer /usr/local/bin/composer.bak; apt-get remove composer
[08:27:29] <Blondie101010> and then mv /usr/local/bin/composer.bak /usr/local/bin/composer
[08:27:31] <jaggz> I can keep the system one, and install a user-based one.. I can even install it in some $HOME dir and set up a wrapper script or link to its composer so the system one isn't used
[08:27:39] <Blondie101010> do what you want
[08:28:16] <jaggz> Yeah, I think usr/local/bin is not an ideal solution nowadays, if ~/ would suffice
[08:28:39] <jaggz> (*note that the /usr/local/bin/composer file had a date on it of today, and was owned by jaggz.jaggz)
[08:28:46] <Blondie101010> I just used the path YOU gave
[08:29:07] <Blondie101010> will you please wake up, and visite a relevant channel if you have questions
[08:29:11] <jaggz> so maybe some install I did, in the past, had sudo access, kept it owned by my user, and now it just wrote right into its file (even without write access to the dir))
[08:29:24] <Blondie101010> I gave you a very clear answer but I shouldn't have
[08:29:31] <Blondie101010> now go do what you want with it
[08:29:41] <Blondie101010> otherwise take that question where it's relevant
[08:29:47] <Blondie101010> not a PHP question
[08:30:43] <jaggz> I wonder how active they are in #composer.. seems like very few people.
[08:30:55] <Blondie101010> as if it was worth even talking to you
[08:31:02] <jaggz> but anyway, I think this part is resolved, mostly.. gotta get a composer set up for this account though
[08:31:03] <Blondie101010> did I tell you to go on #composer ?
[08:31:19] <Blondie101010> they might answer, but it'll still be a question about using your filesystem
[08:31:46] <Blondie101010> #linux or #debian
[08:31:46] <jaggz> I know perfectly well how to use my file system.. been using un*x systems since 1991.
[08:31:56] <Blondie101010> I gave you the full permission answer
[08:32:09] <Blondie101010> but it is still irrelevant here, and you apparently don't even realize it
[08:32:29] <jaggz> I'm not sure what you're talking about. I think we already resolved some of it
[08:33:06] <Blondie101010> chown root /usr/local/bin/composer
[08:34:07] <jaggz> nah, I'm okay now.  I moved that file out and will do a fresh install as my user.  Don't spend more of your time on it, but I appreciate your help.
[08:36:07] <jaggz> (fwiw, I do think you're misunderstanding some of my issues, and therefore putting out extra energy in some places that weren't fully needed; so, again, I thank you for putting so much effort into comprehensive answers to ensure you covered everything for me)
[08:36:19] <jaggz> <3
[08:36:22] <__adrian>  /usr/local/bin/composer is where i'd expect it to be
[08:36:35] <__adrian> if you originally installed via apt i'd advise not doing that
[08:39:45] <jaggz> yeah
[08:41:32] <jaggz> nowadays, preventing dependency hell, it's often best to do project-based installs
[08:41:52] <jaggz> I think I probably followed this, including its sudo mv line: https://getcomposer.org/download/
[08:42:02] <__adrian> that's best
[08:42:13] <jaggz> I'll do the same, but keep it user-based instead of usr/local based
[08:42:14] <__adrian> your repos are not going to have a remotely-current version
[08:42:36] <jaggz> yeah, debian stable tends to quickly get outdated :)
[08:42:36] <__adrian> well, that part doesn't matter too much, whereever you want it
[08:42:43] <__adrian> just put it on your path
[08:43:27] <jaggz> nod (or, since it's nicely in one script, I have different options.  I usually manage those in a specific ~/something/ folder, then symlink or write wrapper scripts to get to them)
[08:44:04] <jaggz> anyway, I think the mystery of how this user-owned file was in local/bin is also now clear too, since the instructions have users mv the file there
[08:44:15] <jaggz> thanks guys and gals
[08:47:02] <Blondie101010> but will we ever solve the mystery of the Caramilk?
[08:49:50] *** Quits: snedd (~snedd@86.14.114.137) (Quit: Leaving)
[08:52:07] <jaggz> or how many licks it takes to get to the center ....
[08:54:42] *** Quits: Junxter (~Junxter@114.221.230.117) (Ping timeout: 260 seconds)
[09:29:42] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 260 seconds)
[09:58:33] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[10:05:54] *** Joins: guido (~guido@host-82-51-186-191.retail.telecomitalia.it)
[10:08:59] *** Joins: tex (~super@user/dix)
[10:13:14] *** Quits: tw2113 (~tw2113@2001-48F8-6-1318-D2AB-D5FF-FE77-2BD5-dynamic.midco.net) (Remote host closed the connection)
[10:13:56] *** Joins: genom (~g@37.214.43.122)
[10:20:11] *** Quits: guido (~guido@host-82-51-186-191.retail.telecomitalia.it) (Quit: WeeChat 3.3)
[10:26:47] *** Joins: Forza_ (~Forza@user/forza)
[10:27:09] *** Quits: Forza (~Forza@user/forza) (Read error: Connection reset by peer)
[10:28:23] *** Forza_ is now known as Forza
[10:46:38] *** Joins: Junxter (~Junxter@114.221.230.117)
[10:49:17] *** Quits: Forza (~Forza@user/forza) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[10:53:52] *** Joins: Forza (~Forza@user/forza)
[10:57:44] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[11:01:46] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[11:13:33] *** Joins: ialokin (~ialokin@user/ialokin)
[11:19:36] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[11:19:41] <no_gravity> Good Morning
[11:20:01] <no_gravity> Did anybody report the segfault error discovered yesterday to the appropriate parties?
[11:22:44] <Blondie101010> no_gravity:  the segfault only happened when you called that call back registration function twice...  did you find any case where you need to do that?
[11:23:16] <no_gravity> Blondie101010: I wonder if it is a security issue and should be reported to the PHP devs.
[11:23:30] <Blondie101010> it's not in PHP nor is it a security issue
[11:23:52] <Blondie101010> I asked that same question at least 3 times now and not once have you answered
[11:24:01] <Blondie101010> do you EVER need to call that twice or more?
[11:24:11] <no_gravity> You mean you can trigger the same segfault in bash for example?
[11:24:44] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[11:25:12] <CoJaBo> My app segfaulted PHP too somehow the other day; can't repro it at all tho, so that's useless <_<
[11:25:52] <Blondie101010> no_gravity:  do you need to call that function more than once?
[11:25:54] <no_gravity> I don't know much about security. But I can imagine that a segfault via user PHP script could be an issue for shared hosting or tools like 3v4m
[11:26:12] <Blondie101010> if you run your stupid code, does it work if you only call that function at the beginning of the script?
[11:26:43] *** Quits: darkstarx (~darkstard@2601:1c2:300:c8a0::6c32) (Remote host closed the connection)
[11:27:03] *** Joins: darkstarx (~darkstard@2601:1c2:300:c8a0::6c32)
[11:27:29] <no_gravity> Blondie101010: The security implications of the issue have nothing to do with what I do in my code.
[11:29:34] <Blondie101010> why haven't you answered yet?
[11:29:40] <Blondie101010> are you intentionally trolling me?
[11:29:46] <Blondie101010> I asked 5 times now!!!!!!!!!!!!!!!!!!!!!!!!
[11:29:56] <Blondie101010> if you run your ridiculous code, does it work if you only call that function at the beginning of the script?
[11:30:14] <no_gravity> You sound angry.
[11:30:47] <Blondie101010> are you surprised or picking on me?
[11:30:59] <Blondie101010> does it work when you only call it once?
[11:31:18] <no_gravity> You are stuck in a loop.
[11:31:27] <Blondie101010> yes, you refuse to answer
[11:31:29] <Blondie101010> does it work when you only call it once?
[11:32:00] <no_gravity> When you get stuck in angry loops based on what people say or say not on IRC, I see many exhausting angry loops ahead of you.
[11:32:22] <Blondie101010> no_gravity:  my question is actually meant to answer you but forget it
[11:32:40] <Blondie101010> you want to troll, go ahead, but no it's not worth trolling anyone else for your bad code
[11:32:51] *** Joins: magla (~gelignite@55d4df94.access.ecotel.net)
[11:34:49] *** Joins: LucaTM (~LucaTM@user/lucatm)
[11:39:23] <BadAdviceCat> no_gravity, I think the point here is: Take the function out of the loop. After that, bring that function to the TOP of your script. Now try running the script afterwards.
[11:52:34] <no_gravity> BadAdviceCat: Yes, that is an obvious solution that we talked about yesterday already.
[11:53:25] <no_gravity> BadAdviceCat: Today the question is if this bug has security implications and if it is reported so it will be fixed.
[11:54:00] <BadAdviceCat> no_gravity, I remember it was presented. I wondering why aren't you using that suggestion?
[11:54:24] <no_gravity> BadAdviceCat: I fixed my yesterday already.
[11:54:44] <no_gravity> BadAdviceCat: My question today is if this bug is a threat to shared hosting and services like 3v4m.
[11:55:24] <BadAdviceCat> no_gravity, anything that crashes can count as a security bug.
[11:55:30] <no_gravity> Afaik it is expected that user provided PHP code can not create segfaults.
[11:55:35] <BadAdviceCat> Denial of service.
[11:56:01] <no_gravity> At least that it what TinoDidriksen said yesterday. "That should not be possible" if I remember his words correctly.
[11:56:08] <da_wunder> most likely no - because if you run some cli php script and it segfaults other users won't know anything about that
[11:56:30] <no_gravity> da_wunder: Is it really restricted to cli?
[11:56:42] <BadAdviceCat> In some cases, in some cases, it can be even more severe. For example, if the server relies on it to perform a security task, and it's not there to do so, allowing for a bigger breach...
[11:56:43] <da_wunder> same goes for web request too
[11:57:18] <no_gravity> segfault AFAIK means the code tries to access memory outside of where it is allowed to.
[11:57:32] <BadAdviceCat> no_gravity, by the way, you asked hours ago about Polyfills. - https://gist.github.com/tarlepp/298466f083b084c7c93fc0b1378a561c
[11:57:42] <no_gravity> And AFAIK that is often the first ingredient of an exploit.
[11:58:11] <no_gravity> BadAdviceCat: I asked about Polyfills?
[11:58:12] <BadAdviceCat> But PHP will not run Polyfills, if it's not needed. - To make that happen, you just gotta keep PHP updated, and install extensions such as mbstrings.
[11:59:10] <BadAdviceCat> Why polyfills exist? So the software can run on crappy shared hosting services too where it is often that extensions are not enabled. So with a polyfill, one can use mbstrings without actually enabling mbstrings.
[11:59:40] <BadAdviceCat> This is not going to impact your precious performance, especialyl if you install mbstring Extension for example.
[11:59:58] <no_gravity> I can't remember having a discussion about this.
[12:00:13] <BadAdviceCat> no_gravity, it's for the `symfony/console` package.
[12:00:48] <no_gravity> Yeah, I don't use symfony components because they usually come with way more code then what I need to implement it myself.
[12:01:53] <BadAdviceCat> no_gravity, 1.8MBs, you do have enough disk space for that, right?
[12:02:20] <no_gravity> BadAdviceCat: It is about future reliability. If you stack is fat it tends to need more maintenance.
[12:02:21] <BadAdviceCat> I believe most of it is for Polyfill. Which will not be needed if you have extensions such as mbstrings enabled.
[12:03:06] <no_gravity> BadAdviceCat: A friend of mine recently abandoned a project on which he worked for months because Symfony changed so much from version to version that he did not want to take the burden to refactor his code.
[12:03:58] <no_gravity> 3 Months of work or so. Into the trashbin because of stack issues.
[12:03:58] <da_wunder> no_gravity: last major changed was between 3.x and 4.x and that was years ago already
[12:04:14] <BadAdviceCat> no_gravity, for what it's worth, I am using third party components, and I hadn't need to worry "big changes" because I follow Design principles that makes it easy for me to accept these "big changes".
[12:04:48] <BadAdviceCat> For context: I used Zend, but they renamed themselves to Laminas, so I had to make changes to follow that.
[12:05:22] <no_gravity> I follow a lot of indie developers. It is my passion. And my strong impression is that the ones with a leaner stack are more successful.
[12:05:41] <BadAdviceCat> I also use Symfony in the same project, I only had to change 1 class that used Message Bus. Going from all the versions between 4-5.
[12:05:53] <BadAdviceCat> If you follow good design principles, it's not a big deal.
[12:06:42] <BadAdviceCat> Those same passionate indie developers also don't reinvent everything.
[12:07:10] <no_gravity> BadAdviceCat: Do you run a business based on your own software?
[12:07:28] <BadAdviceCat> No, but what is your point?
[12:07:38] <BadAdviceCat> I do intend to.
[12:07:41] <no_gravity> BadAdviceCat: The perspective is very different when you do.
[12:08:09] <BadAdviceCat> If I am running a business, I would still be using these third party components.
[12:08:28] <BadAdviceCat> no_gravity, this is only talking about PHP, I have ReactJS, and using more third party stuff.
[12:08:32] <no_gravity> Lets talk when you ran a 1-man software business for 10 years.
[12:09:36] <no_gravity> A lot of my friends have been doing this. And the fatter the stack, the more often they are like "Yeah, it *did* bite me in the ass.".
[12:09:51] <BadAdviceCat> no_gravity, just because I am not doing a business now, that doesn't refute my point about having good design principles which makes it possible to keep updates going.
[12:10:27] <no_gravity> BadAdviceCat: I will be around here in 10 years. Hope you are too. Then we can exchange interesting stories for sure.
[12:10:30] <BadAdviceCat> That's literally the point of following design principles. Such as SOLID. It may sound like a lot of fluff, but it really does actually work.
[12:11:19] <da_wunder> no_gravity: I have used those 3rd party libraries and frameworks a lot and never had that kind of problem
[12:11:29] <BadAdviceCat> I'm using Hexagonal Architecture.
[12:11:44] <no_gravity> da_wunder: How old is your oldest piece of software that still brings in significant revenue?
[12:11:52] <BadAdviceCat> So I for example switched from symfony's authentication system to laminas effortlessly.
[12:12:27] <da_wunder> no_gravity: that is ValueFrame - that started like ~90
[12:13:03] <no_gravity> da_wunder: That is your own business?
[12:13:08] <da_wunder> no
[12:13:28] <da_wunder> our company just provides developers for that
[12:13:33] <no_gravity> As I said, the perspective is different for indie tech entrepreneurs.
[12:15:22] <no_gravity> In a company with managers, a sales team, a support team, accountants and a development team, the maintenance cost of the software is not such a big factor.
[12:19:30] *** Quits: Forza (~Forza@user/forza) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[12:21:16] *** Joins: xisop (~xisop@bnull.net)
[12:21:43] <BadAdviceCat> no_gravity, you were talking about "lean" code. Not who writes the code (company vs indie devs) - I was previously saying that symfony/console does not need Polyfill on the condition you have the correct PHP Extensions enabled. - You seem to think that a lot of php files will magically make PHP significantly slower.
[12:22:50] *** Joins: Forza (~Forza@user/forza)
[12:23:03] <Blondie101010> if you use PSR-4, for example, it will look for a specific file name, not read the whole directory tree
[12:24:54] <no_gravity> BadAdviceCat: I was not talking about "slower" at all. Only about filecount. Because there is a correlation: More files => More maintenance burden.
[12:25:13] <BadAdviceCat> no_gravity, NO. You are getting it wrong. -.-
[12:25:25] <BadAdviceCat> Here is why:
[12:28:19] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[12:28:36] <da_wunder> no_gravity: _you_ don't change those files that are installing under vendor directory...
[12:28:47] <BadAdviceCat> 1. File count is not something you should be concerned about, because it is NOT your project. You are NOT the author of symfony/console. - They are. They are managing it the smart way, taking advantage of PSR-4 that Blondie101010 has mentioned for example. Also, even without PSR-4, it is still a good idea to split files into Many/Several tiny pieces because it makes code much more modular in comparison, it separates pieces of code into distinct
[12:28:48] <BadAdviceCat> categories and into separate concerns.
[12:29:21] <no_gravity> da_wunder: No but they change (or don't change) and will force you to change your files.
[12:29:49] <da_wunder> no_gravity: bc breaks only happen within major releases
[12:30:18] *** Quits: xisop (~xisop@bnull.net) (Ping timeout: 260 seconds)
[12:30:23] <no_gravity> da_wunder: Which happen every few years.
[12:30:50] *** Joins: xisop (~xisop@bnull.net)
[12:31:00] <da_wunder> no_gravity: also symfony triggers deprecation warnings on earlier versions, so that you can spot those changes earlier and actually make necessary changes to your code
[12:31:07] *** Joins: dsp (~dsp@cpc152107-haye27-2-0-cust227.17-4.cable.virginm.net)
[12:31:08] <BadAdviceCat> no_gravity, to put things into perspective, here is a better way to look at it... File count is an archaic metric to worry about. Instead of File count, think of "What libraries do I need" instead.  - Not file count.
[12:31:14] *** Parts: dsp (~dsp@cpc152107-haye27-2-0-cust227.17-4.cable.virginm.net) (Leaving)
[12:31:34] <da_wunder> no_gravity: also symfony has great upgrade doc where you can check what is changed and what do you need to change
[12:31:40] <BadAdviceCat> symfony/console is NOT "literally inside of your project".
[12:32:25] <no_gravity> da_wunder: I am not saying otherwise. I just point out that there *are* changes every few years which cause software maintenance cost.
[12:32:30] <da_wunder> no_gravity: eg. there is what you need change when upgrading from 5.x to 6.0 - https://github.com/symfony/symfony/blob/5.4/UPGRADE-6.0.md#console
[12:32:55] <da_wunder> no_gravity: then just don't upgrade to next version
[12:33:01] <BadAdviceCat> symfony/console is a DEPENDENCY of your project.  <-- In otherwords, don't do file counting because it is useless (Why? Because all the files may not be used. PSR-4 will only execute necessary files. NOT ALL OF THE FILES.)
[12:33:34] <no_gravity> da_wunder: That is a problem security wise. And also other parts of the stack might change and collide with old versions.
[12:33:50] <da_wunder> huoh...
[12:33:52] <no_gravity> s/might/will
[12:34:30] <da_wunder> no_gravity: this is going nowhere, so lets just end this discussion and lets agree that we disagree with this
[12:34:41] <no_gravity> Yup
[12:35:03] <no_gravity> I have been having these discussions since the early 2000s. So I had my fair share :)
[12:35:15] <da_wunder> same here...
[12:38:47] <BadAdviceCat> no_gravity, do you use composer at all? The point is, your project would look like this: https://paste.gg/p/anonymous/149987e1ca4846d5a437577b96d80cb8 - 1. All code from composer is managed AUTOMATICALLY inside the vendor folder. 2. Nothing changes inside the vendor folder without your say. 3. When using git, tell GIT to IGNORE the /vendor/ folder because the code inside there is NOT part of your project (that is why it is not necessary to tell Git
[12:38:48] <BadAdviceCat> to track those files because it's not code authored by you.)
[12:39:37] *** Quits: xisop (~xisop@bnull.net) (Ping timeout: 258 seconds)
[12:40:43] <BadAdviceCat> Then after that. You would only worry about the code inside of /src/ - Composer would only execute code that is needed by the project, it knows which files to pick up because of this Function: https://www.php.net/manual/en/function.spl-autoload-register.php
[12:41:33] <BadAdviceCat> It does not mean that your project will suddenly execute 15,042 files in every iteration of your while(true) loop. That's not how autoloading works.
[12:41:44] <no_gravity> BadAdviceCat: I have 1) done medium sized Symfony and Laravel projects 2) Argued about code structure of projects for decades. So yeah, I know those basics :)
[12:42:11] <no_gravity> I am out for now. Cu everyone!
[12:42:19] *** Parts: no_gravity (~no_gravit@user/no-gravity/x-5639427) ()
[12:43:13] <BadAdviceCat> One day, I may finally have my project up and running so that no one can come up with excuses like this.
[12:43:59] <BadAdviceCat> It's really not as difficult upgrading from 5 to 6 as people make it out to be. o_O
[12:44:30] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[12:45:16] *** Joins: xisop (~xisop@bnull.net)
[12:55:42] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[13:04:37] *** Quits: de-facto (~de-facto@user/de-facto) (Quit: See you around. 💤)
[13:05:04] *** Joins: de-facto (~de-facto@user/de-facto)
[13:16:31] *** Joins: stenno (~stenno@user/stenno)
[13:31:30] *** Joins: Alex8532 (~Alex8532@user/alex8532)
[13:31:39] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[13:34:24] *** Joins: guido (~guido@host-79-43-251-150.retail.telecomitalia.it)
[13:52:39] <relipse> anyone have an amazon ring?
[13:52:50] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 258 seconds)
[13:57:04] *** Joins: stenno (~stenno@user/stenno)
[14:05:00] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 260 seconds)
[14:16:06] *** Joins: stenno (~stenno@user/stenno)
[14:17:11] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 245 seconds)
[14:21:21] *** Joins: vit (~vit@chello085216193138.chello.sk)
[14:21:55] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 260 seconds)
[14:24:39] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 258 seconds)
[14:25:03] *** vit is now known as freeworld
[14:25:26] *** Joins: ms49434 (~ms49434@user/ms49434)
[14:26:11] *** Joins: stenno (~stenno@user/stenno)
[14:26:46] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Quit: Konversation terminated!)
[14:27:04] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[14:27:20] *** freeworld is now known as vit
[14:37:37] *** Joins: jgrim66 (~jgrim@d60-65-99-197.col.wideopenwest.com)
[14:39:02] *** Quits: jgrim66 (~jgrim@d60-65-99-197.col.wideopenwest.com) (Client Quit)
[14:39:25] *** Quits: jgrim6 (~jgrim@172.58.145.29) (Ping timeout: 260 seconds)
[15:08:17] *** Joins: jamesmartinez (uid6451@id-6451.helmsley.irccloud.com)
[15:24:52] *** Joins: DaNeenjah (~jake@adsl-74-230-9-207.hsv.bellsouth.net)
[15:36:29] *** Parts: xisop (~xisop@bnull.net) ()
[15:43:26] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 245 seconds)
[15:45:24] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[15:48:34] *** Joins: stenno (~stenno@user/stenno)
[15:54:27] *** Quits: gxt_ (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[15:54:57] *** Joins: gxt_ (~gxt@gateway/tor-sasl/gxt)
[16:06:55] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 260 seconds)
[16:14:28] *** Joins: stenno (~stenno@user/stenno)
[16:21:28] *** Joins: night_wulfe__ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[16:24:19] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 265 seconds)
[16:26:42] *** Quits: magla (~gelignite@55d4df94.access.ecotel.net) (Quit: Stay safe!)
[16:50:04] <novns> no
[17:20:28] *** Quits: Alex8532 (~Alex8532@user/alex8532) (Quit: Going offline, see ya! (www.adiirc.com))
[17:56:03] *** Joins: magla (~gelignite@55d4df94.access.ecotel.net)
[19:00:33] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[19:00:37] <no_gravity> Good Evening
[19:02:37] *** Joins: white5moke (~white5mok@ip72-219-109-30.oc.oc.cox.net)
[19:03:15] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Client Quit)
[19:21:02] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[19:21:24] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[19:22:47] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[19:34:43] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[19:35:20] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[19:58:48] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[20:00:20] *** Joins: stwange (~j@82.21.202.140)
[20:01:42] *** Quits: night_wulfe__ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 244 seconds)
[20:04:14] *** Joins: ferdna (~ferdna@user/ferdna)
[20:05:50] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[20:07:40] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Quit: Quitting)
[20:09:36] <stwange> Hey, sorry for the newbie question but I'm in a little over my head. I'm trying to get some code working on php 7.3 (it was working on 5.4) and I'm getting an issue where a mysqli->execute() is returning the row as a numbered array instead of named. So eg. Instead of getting $result['id'] = 1234 I'm getting $result[0] = 1234. Is this a simple config I've missed?
[20:10:23] <Naktibalda> execute() does not return row, what method do you use for fetching?
[20:12:19] <stwange> get_result() I think
[20:12:41] *** Quits: white5moke (~white5mok@ip72-219-109-30.oc.oc.cox.net) (Quit: Leaving...)
[20:13:38] <novns> get_result() does not return rows too
[20:13:45] <Naktibalda> get_result returns instance of mysqli_result which has a number of fetch methods: https://www.php.net/manual/en/class.mysqli-result.php
[20:14:08] <novns> stwange, why don't you read the documentation?
[20:14:51] <novns> is it laziness or what?
[20:14:55] <da_wunder> also not just "I think" - check what you're actually using
[20:15:11] <novns> da_wunder, he didn't bother to read the code
[20:15:52] <novns> just give him a magic config setting
[20:16:00] <Naktibalda> there is no such setting, is there any chance that the default fetch mode was changed at some point between 5.4 and 7.3 ?
[20:16:01] <stwange> da_wunder, I checked what was there, the I think was about whether or not that did what you were asking. The line is there, I'm just not familiar with PHP and trying to get a script working
[20:16:47] <stwange> But I've read through this again and I think the code they've given me isn't the same running on the older server, because the older one isn't using mysqli so I have half updated code - I thought it was the same code and just missing named arrays or something
[20:16:50] <novns> stwange, but the documentation was written for you, it's not hard to read it
[20:16:51] <stwange> Sorry for bothering you.
[20:17:34] <novns> I'm a mean person
[20:17:47] <Blondie101010> that is not the point...  it's to encourage you to read the documentation to learn and help yourself
[20:18:01] <Blondie101010> even experienced programmers keep the manual open
[20:18:03] <Naktibalda> stwange: you probably use fetch_all() or fetch_array. they both take fetch_mode parameter and you are using MYSQLI_NUM instead of MYSQLI_ASSOC now
[20:18:58] <stwange> Blondie101010, reading the code is one thing, but googling "PHP 5.4 to 7 named arrays" didn't bring anything back. I was under the impression this code was working (minus version changes) on the older server, but now it's clear it wasn't.
[20:20:54] <novns> the biggest problem with PHP is the code
[20:21:08] <novns> PHP would be better without any code existing
[20:22:02] <Blondie101010> stwange: if the function you're troubleshooting is called fetch_array, you search it on php.net and it gives you https://www.php.net/manual/en/mysqli-result.fetch-array.php
[20:25:26] <stwange> Blondie101010, it was fetch_all (in a different function) and that was really helpful. Thank you :) (the snark was totally deserved)
[20:33:30] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[20:36:49] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 244 seconds)
[20:41:02] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[20:44:02] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 260 seconds)
[20:47:45] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[20:58:14] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Quit: Quitting)
[21:06:30] *** Joins: Rockwood (~Rocky@user/rocky)
[21:09:03] *** Joins: \mSg (mSg@user/msg/x-0285936)
[21:21:28] *** Joins: WishBoy (~WishBoy@user/wishboy)
[21:51:38] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[21:54:18] *** Joins: jochum (~quassel@user/jochum)
[22:00:54] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[22:02:02] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[22:06:11] *** Quits: Junxter (~Junxter@114.221.230.117) (Ping timeout: 258 seconds)
[22:21:39] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Remote host closed the connection)
[22:22:07] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[22:33:36] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[22:37:10] *** Quits: xep (~xep@76-210-4-7.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 260 seconds)
[22:37:27] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 265 seconds)
[22:41:11] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[22:43:49] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Quit: Friends help you move. Real friends help you move bodies.)
[22:48:22] *** Joins: davetoo (~davetoo@2600:8802:5718:3a00:25cd:97de:dc02:b724)
[22:49:06] <CoJaBo> novns: I disagree; I think the problem with PHP, is PHP coders >_>
[22:49:49] <CoJaBo> I just found a pair of functions in an inherited codebase called enter_function() and exit_function()
[22:50:30] <CoJaBo> The only thing they do is set a global variable called $current_function
[22:53:16] <Blondie101010> oh, a premature debugger
[22:55:51] <CoJaBo> There appear to be no reads of that var, but unsetting it causes the API to return an unauthorized code
[22:56:14] <CoJaBo> I swear these are intentionally written this way just for no other sake than to make me tear my hair out
[23:07:47] <CoJaBo> Novel lazy debugging tecnique: To find where a string variable is used, set it to an object whose __tostring() method calls debug_print_backtrace().    Thankfully, I lucked upon it triggering a cast lol
[23:13:12] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[23:15:06] *** Quits: fkrauthan (~fkrauthan@user/fkrauthan) (Quit: ZNC - https://znc.in)
[23:16:33] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[23:17:02] *** Joins: fkrauthan (~fkrauthan@user/fkrauthan)
[23:19:45] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 260 seconds)
[23:21:14] *** Joins: pmercado (~pmercado@190.22.168.79)
[23:27:50] *** Quits: pmercado (~pmercado@190.22.168.79) (Ping timeout: 260 seconds)
[23:47:12] *** Joins: jgrim66 (~jgrim@172.56.10.243)
[23:58:05] *** Joins: xep (~xep@2600:1010:b014:fa22:2f35:bd35:f49b:711a)
