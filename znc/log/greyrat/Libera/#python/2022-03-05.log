[00:00:31] *** Joins: yates (~user@fv-nc-f7af8b91e1-234237-1.tingfiber.com)
[00:00:51] *** Joins: Viewday115 (~Viewday@user/viewday)
[00:00:57] *** Joins: Douwd (~douwd@nexus.bsdpro.net)
[00:01:00] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[00:01:02] <yates> range() returns an iterator, right, and *range() returns a list, right?
[00:01:13] <yates> in 3.6.9
[00:01:33] <l3rdvsls> Wooble thanks man it's my first time, sorry...
[00:01:42] <l3rdvsls> https://bpa.st/UUQQ
[00:02:01] *** Joins: magla (~gelignite@d536536e.access.ecotel.net)
[00:02:20] <SnoopJ> yates, neither of those is correct. range() returns a range object, which is iterable, but is not itself an iterator. *range() doesn't "return" anything, but it unpacks the range where that syntax can be used.
[00:02:22] *** Joins: brentaarnold (~brentaarn@24.112.92.157)
[00:03:15] *** Joins: Dotz0cat (~Dotz0cat@h108.89.187.173.dynamic.ip.windstream.net)
[00:03:16] <SnoopJ> if you want a list from a range, the spelling is usually list(range(N)), although often peple just use range() directly
[00:03:19] <yates> unpacks - define that please
[00:03:20] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[00:03:20] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:03:49] <nedbat> yates: can you be more specific?
[00:04:01] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[00:04:45] <dirtydan> Hi, I need to write a webUI for a home automation project. Very basic, just some buttons. I've looked at Flask, Pyramid, and Django but I'm wondering if this is overkill. Is there a "very basic" web framework I might be better off learning?
[00:05:02] <The-Compiler> dirtydan: Flask sounds like it would fit the bill
[00:05:24] <grym> dirtydan: flask, pyramid, bottle, fastAPI.
[00:05:27] <grym> in no real order
[00:05:28] <The-Compiler> it's about as basic as it gets (yet very extensible)
[00:05:54] <yates> nedbat: this line: self.deletechars=''.join([chr(x) for x in range(0,0x20) + range(0x21, 0x30) + range(0x3a, 0x41) + range(0x5b, 0x61) + range(0x7b, 0xff)])
[00:06:01] <SnoopJ> yates, the expression `f(*it)` means "call the function f with the first thing in the iterable as the first arg, the second thing as the second arg, etc." https://docs.python.org/3/tutorial/controlflow.html#tut-unpacking-arguments
[00:06:14] <nedbat> yates: ok, but what specifically would you like defined?
[00:06:20] <SnoopJ> and the meaning is similar in other cases where you can use the syntax
[00:06:23] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:aaa1:59ff:fe3c:ddb4) (Quit: updating)
[00:06:30] <yates> gives me ... (hang on)
[00:06:34] <The-Compiler> I'm surprised Flask still exists
[00:06:39] <The-Compiler> err, Bottle still exists
[00:06:46] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:aaa1:59ff:fe3c:ddb4)
[00:06:48] <dirtydan> Thanks TC and grym! I'll redouble by Flask efforts and also have a look at bottle, fastapi.
[00:06:51] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[00:07:05] *** Joins: nomic (~nomic@85.203.36.100)
[00:07:05] <yates> give me an error
[00:07:16] <SnoopJ> dirtydan, of those I'd throw my 2Â¢ for Flask. Django definitely strikes me as more than you probably want for "very basic"
[00:07:18] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 272 seconds)
[00:07:25] <nedbat> yates: pro-tip: show the error, but i'll guess that you can't add ranges together
[00:07:31] <The-Compiler> dirtydan: I wouldn't recommend bottle - it's quite similar to Flask, but much less active (last release in 2020)
[00:07:42] <The-Compiler> and yep, what SnoopJ says
[00:08:14] <The-Compiler> FastAPI is basically a more modern alternative to Flask, but for something so basic, you probably don't care about its asyncio functionalities and such
[00:08:15] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[00:08:18] <yates> nedbat: yes, that is it
[00:08:20] <dirtydan> Thanks, learned some Django and felt like killing the fly with a cannon, way more than I need.
[00:08:48] <yates> i am trying to recreate the error. it's a pain because it's occurring with idapro and i've changed things..
[00:08:50] <grym> i generally appreciate what fastAPI offers on data wrangling; i usually don't need to use the asyncio stuff at all
[00:08:50] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[00:08:51] <SnoopJ> FastAPI is nice, and switching to it after learning Flask would be pretty easy.
[00:09:02] <nedbat> yates: that's python 2 code that won't work in python 3.
[00:09:18] <SnoopJ> Whether or not you want all the data model stuff is dealer's choice, but I would say it's strictly more to learn vs. Flask
[00:09:36] <yates> nedbat: right, and i saw a stack exchange that said the *range() trick would work
[00:09:38] <SnoopJ> just know that when you're sick of writing validators/etc. for Flask routes, FastAPI has nice ways to express that ;)
[00:09:39] *** Joins: pycurious (~Adium@user/pycurious)
[00:09:44] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[00:09:45] <nedbat> yates: this will work in python 3: ''.join([chr(x) for x in itertools.chain(range(0,0x20), range(0x21, 0x30), range(0x3a, 0x41), range(0x5b, 0x61), range(0x7b, 0xff))])
[00:09:51] *** Joins: erd0s (~dirk@cpc1-dals23-2-0-cust628.20-2.cable.virginm.net)
[00:10:10] <SnoopJ> (and switching from Flask to FastAPI is a breeze for sufficiently simple projects; not sure about things that make heavy use of e.g. templates)
[00:10:14] <nedbat> yates: or this if you want *range:  ''.join([chr(x) for x in [*range(0,0x20), *range(0x21, 0x30), *range(0x3a, 0x41), *range(0x5b, 0x61), *range(0x7b, 0xff)]])
[00:10:28] <yates> aha
[00:10:40] <yates> i like that one! :)
[00:11:05] <SnoopJ> The-Compiler, I have an unrelated question you might know the answer to: if I want to use a parametrized fixture with a parametrized test, is the way to do that still "you need to install pytest-cases?" I ended up rewriting the tests that prompted the question, but it's come up for me a few times.
[00:11:06] <nedbat> yates: you can also omit one set of []:   ''.join(chr(x) for x in [*range(0,0x20), *range(0x21, 0x30), *range(0x3a, 0x41), *range(0x5b, 0x61), *range(0x7b, 0xff)])
[00:11:30] <dirtydan> I'm an admin, not a webdev. I think all the swoopy visualizations and UIs are cool, but at the end of the day I just need, click button, turn on light.
[00:11:36] *** Parts: Koffa (jkohvakk@user/koffa) (I see offline people)
[00:11:36] <nedbat> yates: or use map:  ''.join(map(chr, [*range(0,0x20), *range(0x21, 0x30), *range(0x3a, 0x41), *range(0x5b, 0x61), *range(0x7b, 0xff)]))
[00:11:37] *** Joins: Koffa (jkohvakk@user/koffa)
[00:11:41] <nedbat> (ok, i'll stop :)  )
[00:11:58] <grym> dirtydan: yeah, i don't know jack about writing websites either, so i use flask/fastAPI :)
[00:12:14] <grym> (for the equivalent of 'send request, light go on')
[00:12:22] <SnoopJ> not that you can't make websites with either of them, they're just different tasks (backend vs frontend, I guess)
[00:12:27] <erd0s> Hello there! bit of an abnormal question, I have an mac app (ableton live) which loads up a bunch of python scripts on startup. No problems modifying those scripts and confirming that it works but I'd like to somehow trigger a debugger in the context of those scripts and poke around...
[00:12:31] <yates> showoff!
[00:12:34] <erd0s> any idea how i'd approach this?
[00:12:36] *** Quits: emf_ (~emf@2620:10d:c090:400::5:f7f1) (Ping timeout: 240 seconds)
[00:12:40] <dirtydan> That's the ticket. Thanks again.
[00:12:54] <grym> erd0s: what version of python does albleton use
[00:13:16] <erd0s> i'm not sure, i think i could find out if you give me a few mins
[00:13:21] <grym> erd0s: (if it's >= 3.7, breakpoint() will drop into the debugger of your choice)
[00:13:22] <erd0s> does it make a big difference?
[00:13:27] <erd0s> oh!
[00:13:29] <SnoopJ> erd0s, does it run in a console?
[00:13:32] *** Quits: Deneb (~johnch@128.82.159.143.dyn.plus.net) (Quit: Leaving)
[00:13:45] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[00:13:52] <grym> erd0s: to know, drop `import sys; print(sys.executable)` in the top of a plugin and hope that you can see that print on a console somewhere...
[00:13:55] <grym> (i don't know if you can)
[00:14:01] <erd0s> it doesn't run in a console, it's a fully packaged mac app but i might be able to start it from the console
[00:14:04] <yates> ok it's working. thank you all!
[00:14:24] <erd0s> grym: :)
[00:14:25] <SnoopJ> erd0s, breakpoint() is very useful if you have a console, or are willing to jump through some hoops to configure a debugger that act like a 'server'
[00:14:31] <grym> erd0s: you could also dump that information to a file or something, i suppose, as well
[00:14:41] <erd0s> ok 1 sec
[00:15:08] <The-Compiler> SnoopJ: do you have an example? How do the two parametrizations interact with each other?
[00:15:15] <nedbat> yates: because iteration is my jam:  ''.join(map(chr, itertools.chain.from_iterable(itertools.starmap(range, [(0,0x20), (0x21, 0x30), (0x3a, 0x41), (0x5b, 0x61), (0x7b, 0xff)]))))
[00:15:17] <SnoopJ> The-Compiler, I did write it up, sec.
[00:15:21] *** Joins: emf (~emf@8.46.76.74)
[00:15:28] *** Joins: sandb0y (~pirate@user/sandb0y)
[00:15:43] *** Quits: Donitz (~Donitz4@88-115-149-215.elisa-laajakaista.fi) (Quit: Leaving)
[00:15:43] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[00:16:11] <SnoopJ> The-Compiler, nothing super fancy, I just wanted to associate each fixture with an expectation: https://bpa.st/I6NA
[00:16:20] <yates> and jelly!
[00:16:24] *** Joins: flea (nosoul@gateway/vpn/protonvpn/nosoul)
[00:16:27] *** Joins: Donitz (~Donitz4@88-115-149-215.elisa-laajakaista.fi)
[00:16:39] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[00:17:46] <snakey_hiss> FastAPI looks cool to use, thanks for the tip earlier
[00:18:03] <erd0s> so the sys.executable is /Applications/Ableton\ Live\ 10\ Suite.app/Contents/MacOS/Live... which is a Mach-O 64-bit executable x86_64... so I guess that means the interpreter is built into the main binary
[00:18:04] <SnoopJ> The parameters on the test are a little simplistic there, but I've reached for this before and banged my toe on "oops, you can't use fixtures like that"
[00:18:43] *** Joins: emf_ (~emf@163.114.132.7)
[00:18:47] <erd0s> they seem very happy to have people hacking these scripts though so i wouldn't be surprised if they left the breakpoint() functionality in there
[00:18:55] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[00:19:00] <SnoopJ> erd0s, this isn't an uncommon way to package an application, but it could make debugging a little tricky. If you can launch it from a console, breakpoint() is nice and simple
[00:19:27] <erd0s> so how does that work? does breakpoint call out to port to establish some sort of debugging session?
[00:19:37] *** Quits: emf (~emf@8.46.76.74) (Ping timeout: 240 seconds)
[00:19:40] <SnoopJ> nope, it just invokes whatever debugger is configured, which is pdb by default
[00:19:46] *** Quits: bambams (~bambams@user/bambams) (Remote host closed the connection)
[00:19:55] <SnoopJ> it's the moral equivalent of `import pdb; pdb.set_trace()` except that it is less annoying to spell and not necessarily pdb
[00:20:02] *** Quits: l3rdvsls (~l3rdvsls@85.219.101.97.dyn.user.ono.com) (Quit: Connection closed)
[00:20:10] <SnoopJ> https://docs.python.org/3.8/library/functions.html#breakpoint
[00:20:56] *** Joins: Viewday1158 (~Viewday@user/viewday)
[00:21:03] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[00:21:16] *** Joins: pycurious (~Adium@user/pycurious)
[00:21:17] <SnoopJ> (I usually set PYTHONBREAKPOINT=pudb.set_trace so that breakpoint() gives me pudb, which I like)
[00:21:27] <erd0s> heh i'm actually not that experienced with python so i haven't used pdb! i guess my question is where does the debugging functionality live? is it a server/client setup? or all part of the host binary?
[00:21:38] <SnoopJ> pdb is part of the standard library
[00:21:47] <SnoopJ> https://docs.python.org/3/library/pdb.html
[00:22:00] <erd0s> thanks :) i'll do a bit of reading there
[00:22:03] <SnoopJ> but there are other debuggers that do all kinds of things (pudb can run as a TCP server, for instance)
[00:22:21] *** Joins: Masterphi (~Masterphi@user/masterphi)
[00:22:49] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[00:22:49] *** Viewday1158 is now known as Viewday115
[00:23:05] *** Joins: Guest54 (~Guest54@2620:10d:c092:400::4:7809)
[00:23:21] <SnoopJ> if you're familiar with gdb, pdb will probably feel familiar and is useful to know as a debugger that's probably generally available. The rest is personal preference :)
[00:23:27] *** Quits: jpodivin_ (~jpodivin@cgnat44-pool1-236-132.poda.cz) (Ping timeout: 256 seconds)
[00:24:20] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[00:24:31] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[00:24:45] <Guest54> hey guys, I have a path "foo/bar". I want to prefix the home dir to it it becomes "~/foo/bar" -- what's the simplest way to do this?
[00:24:56] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 245 seconds)
[00:25:07] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[00:25:17] *** Quits: wib_jonas (~wib_jonas@2a02:c38:d77d:380a:c95a:f833:9e7d:ed80) (Quit: Client closed)
[00:25:42] <erd0s> SnoopJ: cool, i've used gdb, a long time ago but i remember the workflow
[00:25:42] <exarkun> `pathlib.Path("~") / "foo/bar"` is maybe okay
[00:25:46] <exarkun> Guest54 ^
[00:26:14] <Guest54> exarkun I don't think that would on all platforms though?
[00:26:15] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[00:26:17] <Guest54> work*
[00:26:21] <exarkun> Guest54: Why's that?
[00:26:32] <Guest54> is "~" a thing in winwdows?
[00:26:37] <SnoopJ> Path("~", "foo", "bar") will be portable (although "~" may not be)
[00:26:40] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Client Quit)
[00:26:42] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[00:27:01] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 245 seconds)
[00:27:12] <bjs> there's Path.home()
[00:27:14] <exarkun> Guest54: So you don't want "~/foo/bar", you want `<the user home directory> + "/foo/bar"`?
[00:27:17] *** Quits: emf_ (~emf@163.114.132.7) (Ping timeout: 240 seconds)
[00:27:32] <Guest54> yes (sorry I should have been more clear initially)
[00:28:02] <SnoopJ> Guest54, Path("~").expanduser() on Windows does expand to the equivalent of a home directory. I believe it's %USERPROFILE%
[00:28:10] <bjs> there's also .expanduser() which will expand ~ to your relevant home dir
[00:28:28] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[00:28:32] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[00:28:36] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[00:28:45] <exarkun> `Path.home() / "foo/bar"` seems reasonable?
[00:28:58] <exarkun> `Path.home` works at least as well on Windows as on POSIX
[00:29:00] <SnoopJ> yea, I would rely on Path.home() here instead if that's what's intended
[00:29:03] <Wooble> (ideally use appdirs instead of picking a path under user's home)
[00:29:10] <SnoopJ> appdirs +1
[00:29:30] *** Joins: emf (~emf@8.46.76.74)
[00:29:54] *** Joins: junebug (~junebug@2600:1700:3db0:2540:3802:3368:bfea:af4a)
[00:30:08] <erd0s> so i can see (from logs) that breakpoint() causes the execution to halt, I'm not seeing anything in my shell that I opened the program with... however when I look at the process with pstree there's another random subprocess and a java subprocess... I'm guessing the python runtime is buried somewhere in one of those
[00:30:10] <nedbat> Guest54: definitely look at appdirs
[00:30:28] <Guest54> is there any benefit of appendirs over pathlib.Path?
[00:30:59] <Timvde> SnoopJ: I just bound a shortcut to import pudb; pudb.set_trace(), is there an advantage to using breakpoint() over it?
[00:31:15] <erd0s> is there anything like breakpoint('localhost:1234') to have that debugging work with a remote thingy? (happy to go rtfm just want to sense check it's feasible first :)
[00:32:07] <Wooble> Guest54: the appdirs module will pick a suitable place based on the system for storing a program's files. It's much friendlier than deciding on that place for yourself.
[00:32:32] <grym> erd0s: pudb speaks telnet
[00:33:13] <grym> but you'll have to get pudb installed somehow into that interpreter, i .. think ...
[00:33:16] <grym> erd0s: https://documen.tician.de/pudb/starting.html#remote-debugging
[00:33:17] <SnoopJ> you'd do something like PYTHONBREAKPOINT=pudb.remote.RemoteDebugger in your env to get that behavior (it defaults to port 6899)
[00:33:33] * SnoopJ hasn't used the remote debugging feature, though
[00:34:00] <Timvde> Hmm, hadn't heard of fit, let me look into what it is :)
[00:34:28] <erd0s> awesome! then i shall go off and rtfm, thanks grym, thanks SnoopJ!
[00:34:28] <SnoopJ> Timvde, if you don't want to configure it to anything else, not really. It does raise an auditing event, but I think that's about the only difference if you don't care about the configurability/ease of use
[00:35:10] <Timvde> SnoopJ: my pytest plugin in vim does use plain gdb actually, I wonder if I can get it to use pudb using that envvar
[00:35:17] *** Joins: georgeisbot (~georgeisb@45.63.10.10)
[00:36:03] <Timvde> pdb*
[00:36:13] <erd0s> Snoopj: I'm not sure I'll be able to get env vars into the runtime, just because the main app is definitely a native binary, the python bit is only a small part of the application so i don't think the host process is going to be passing in env vars into the python bit (would be my guess)
[00:36:19] <SnoopJ> you can also change sys.breakpointhook from within the program, PYTHONBREAKPOINT is just a way to do that at start-up
[00:36:23] <SnoopJ> erd0s, ^
[00:36:41] <erd0s> awesome! thanks again :) research time
[00:37:02] <SnoopJ> erd0s, although if you have to go about all that, I'd probably just go straight for `import pudb; whatever()`
[00:37:23] *** Joins: c4017w_ (~c4017@209.52.68.8)
[00:37:27] <SnoopJ> breakpoint() is there when it's expedient, but there's nothing wrong with doing something more specific
[00:37:45] *** Quits: Donitz (~Donitz4@88-115-149-215.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[00:38:10] *** Quits: emf (~emf@8.46.76.74) (Ping timeout: 250 seconds)
[00:38:37] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[00:38:41] <erd0s> ok i'll check out pdb and pudb (pudb interface looks nicer than what i remember gdb looking like!)
[00:38:44] <Timvde> Thanks for giving me some pointers to look into, I haven't spent a lot of effort on my debugging environment (plain pudb has mostly worked fine for me)
[00:38:51] *** zmotaj_ is now known as zmotaj
[00:38:51] *** Quits: zmotaj (~zmotaj@86.61.80.191) (Changing host)
[00:38:51] *** Joins: zmotaj (~zmotaj@user/zmotaj)
[00:39:23] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::4f67)
[00:40:13] *** Joins: Donitz (~Donitz4@88-115-149-215.elisa-laajakaista.fi)
[00:40:25] *** Joins: blei (~blei@user/blei)
[00:40:37] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[00:40:56] *** Quits: Eryn83FL_Matrix[ (~eryn-1983@2001:470:69fc:105::7c74) (Quit: Reconnecting)
[00:41:09] *** Joins: emf (~emf@8.46.76.74)
[00:41:23] *** Quits: georgeisbot (~georgeisb@45.63.10.10) (Remote host closed the connection)
[00:41:27] *** Joins: Eryn83FL_Matrix[ (~eryn-1983@2001:470:69fc:105::7c74)
[00:41:31] <malvin> can any one see my chat driven survey app getting professional attention gh/felixfarquharson/interroGATE
[00:42:09] <nedbat> malvin: people are more likely to look if you use an actual URL.  and what do you mean by professional attention?
[00:42:19] <malvin> or any more tips other than working hard
[00:42:35] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Ping timeout: 240 seconds)
[00:42:40] <malvin> https;//github.com/felixfarquharson/interroGATE
[00:42:51] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[00:43:10] <yates> if i want to convert a string 'abc' into bytes, without using an intermediate variable, can i do 'abc'.encode('utf-8')?
[00:43:19] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[00:43:43] <grym> yates: or any other valid encoding
[00:43:50] <yates> k
[00:44:00] <malvin> does utf-8 work the same as utf8
[00:44:34] <exarkun> yes
[00:44:41] <malvin> :) thanks
[00:44:43] <exarkun> also, easy to test
[00:44:51] <CrtxReavr> Is the convention that sets are un-ordered apply to math, as well as computer science?
[00:44:58] <SnoopJ> CrtxReavr, yes
[00:45:01] <grym> CrtxReavr: yes, that's where it came from
[00:45:19] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Client Quit)
[00:45:47] <SnoopJ> an ordered set is a set and a mapping between its members and the natural numbers
[00:45:53] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[00:46:00] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[00:46:16] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[00:46:30] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[00:46:38] <malvin> nedbat: im looking for someone to think the idea is so great they actually make it
[00:46:45] <erd0s> ok, this question is going to be a lot dumber, pudb installed with pip but there doesn't seem to be an executable anywhere in site-package with the name pudb... only python files, is that something dumb i should know about?
[00:47:02] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::4f67) (Quit: WeeChat 3.3)
[00:47:05] <grym> erd0s: it'll be in /bin
[00:47:16] <SnoopJ> erd0s, you probably have a `pudb` on your PATH but it won't be in site-packages, it'll probably be in ~/.local/bin
[00:47:24] <grym> wherever /bin is for you, but you can also `that/interpreter/python -m pudb`
[00:47:37] * SnoopJ always uses `python3 -m pudb` for this reason
[00:48:06] <erd0s> hah! it was, and it was pudb3! thanks guys
[00:48:23] <SnoopJ> oops, forgot the name of it even
[00:48:26] <grym> hah, same
[00:48:57] <yates> SnoopJ, CrtxReavr: the mapping must be one-to-one
[00:49:40] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[00:50:10] <SnoopJ> there are all kinds of details we could go into, but almost none of them belong in #python
[00:50:16] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[00:50:21] <erd0s> i have to say it's awesome being able to jump on irc still and have enthusiastic people help with you questions at the drop of a hat, i really appreciate it :)
[00:50:57] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 256 seconds)
[00:51:02] <KnowledgeShark> does anyone know why I would get a 1064 syntax error for MariaDB in python on row 6 from a json load using SQLAlchemy when the value for row 6 is "[]" ; Even though this is a null value for my dataset I am working with. The last & important key/value uses a "[ multiple URLs] array" that I need otherwise I would batch remove [] from my json's. Thanks in advance for any pointers.
[00:51:16] <caveman> does standard python come with aes256 encryption?
[00:52:02] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[00:52:11] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[00:52:22] *** Joins: Masterphi (~Masterphi@user/masterphi)
[00:52:41] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[00:52:53] <The-Compiler> SnoopJ: hm, yeah, I don't have a good answer off-hand
[00:53:01] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[00:53:29] <grym> caveman: afaik no, you'll need something like `cryptography`
[00:53:30] <SnoopJ> The-Compiler, I figured as much, I was hoping maybe there was some kind of fallout from Issue #349 that I didn't know about :)
[00:53:46] <The-Compiler> SnoopJ: you could do this by moving the parametrization either to the test entirely or either to the fixture entirely; or you could use request.getfixturevalue, but I don't think that works with paramtrzised fixtures
[00:53:52] <SnoopJ> it does not :(
[00:54:03] *** Quits: Yilo (~Yilo@2600:1702:6f0:4310:d91b:f6af:2101:3833) (Ping timeout: 256 seconds)
[00:54:15] <caveman> grym: thinking to use libhash's sha512 to create my own stream cipher.
[00:54:22] <caveman> or hashlib's
[00:54:29] <caveman> i think hashlib is already in python, right?
[00:54:32] <SnoopJ> I ended up just exploding that test (and its brethren) into a version for each feature. It hasn't been unacceptably painful to do this yet, just less pleasant
[00:54:34] <The-Compiler> SnoopJ: https://github.com/pytest-dev/pytest/issues/349 might have some more ideas, it's been a while since I read through it
[00:54:34] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:54:39] <exarkun> caveman: For fun, or ... ?
[00:54:53] <grym> caveman: i have zero confidence my own ability to roll my own :)
[00:55:03] <SnoopJ> The-Compiler, yea, that issue is what prompted me to ask you specifically. Cheers for entertaining the question all the same :)
[00:55:14] <caveman> grym: mybe you should become awesome like me?
[00:55:26] <grym> caveman: i shall be awesome in my own way, thanks
[00:55:30] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[00:55:39] <SnoopJ> The-Compiler, pytest-cases looks like it would be great in situations where I would have access to it, so at least part of my desire for this functionality can be addressed with it
[00:55:58] <caveman> exarkun: sort of for fun.  not mission critical.  performance is not an issue.
[00:56:18] <exarkun> caveman: Who will be sad when someone breaks it, and how sad will they be?
[00:56:25] *** Z-cat is now known as TheCat
[00:56:41] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:56:43] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[00:56:44] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[00:57:06] <caveman> exarkun: about 3 people will be sad.  maybe not much sadness.
[00:57:32] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[00:57:36] <exarkun> well, that's alright then.  few enough that you can get their consent ahead of time and make it up to them afterwards, probably.
[00:58:06] *** Quits: marcello42 (~mp@p200300dfaf10fe015baf6eed7f4ef68f.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[00:58:36] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 272 seconds)
[00:59:15] <theseb> exarkun: have you found any project lately that deserves your attention as much as Twisted did?
[00:59:27] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 256 seconds)
[00:59:29] <theseb> exarkun: or that seems half as cool and promising?
[01:00:17] <exarkun> theseb: jeez are you trying to make me cry?
[01:00:30] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[01:01:01] *** Quits: emf (~emf@8.46.76.74) (Remote host closed the connection)
[01:01:04] <exarkun> theseb: just kidding.  life is beautiful.
[01:01:07] <exarkun> theseb: but no I have not.
[01:01:13] *** Quits: betuxy (~betuxy@p579adb74.dip0.t-ipconnect.de) (Quit: Connection closed)
[01:01:26] <exarkun> theseb: Any suggestions?
[01:02:49] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[01:03:00] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:05:32] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[01:05:36] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:05:59] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[01:06:25] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[01:06:36] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:858f:1c83:7b4e:c545) (Ping timeout: 245 seconds)
[01:06:45] *** Joins: mug3n (~mugen@gateway/tor-sasl/mugen)
[01:08:30] *** Quits: dreamon (~dreamon@pd9503c4b.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[01:09:05] *** test_ is now known as _flood
[01:09:35] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 240 seconds)
[01:09:38] *** Quits: cliluw (~cliluw@47.147.77.43) (Ping timeout: 252 seconds)
[01:09:41] *** Joins: crashrep (~crashrep@user/crashrep)
[01:10:02] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 240 seconds)
[01:10:27] *** Joins: Pickchea (~private@user/pickchea)
[01:10:47] *** __xor is now known as _xor
[01:10:54] *** Joins: cliluw (~cliluw@47.147.77.43)
[01:10:59] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[01:13:38] *** Joins: moose (~moose@user/moose)
[01:14:48] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[01:15:00] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 240 seconds)
[01:15:50] *** Quits: wolfdale8 (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Quit: Ping timeout (120 seconds))
[01:16:21] *** Joins: wolfdale8 (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[01:16:26] <not> exarkun: hail the dark lord of the sith
[01:16:36] *** Quits: boris_ (~borisruna@141.144.246.234) (Remote host closed the connection)
[01:17:15] *** Quits: erd0s (~dirk@cpc1-dals23-2-0-cust628.20-2.cable.virginm.net) (Quit: leaving)
[01:17:27] *** Joins: boris_ (m-vwhg2g@141.144.246.234)
[01:17:50] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[01:17:58] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[01:17:58] *** Joins: foobaz21248 (~foobaz212@152.37.103.80)
[01:18:38] *** Joins: greedom (~greedom@p200300de670df000eacaf10f544eb454.dip0.t-ipconnect.de)
[01:20:18] *** Quits: greedom (~greedom@p200300de670df000eacaf10f544eb454.dip0.t-ipconnect.de) (Client Quit)
[01:20:20] *** Joins: l4yer (~l4yer@2001:ac8:20:3b00:1012:7b5d:5eb6:e60f)
[01:21:36] *** Joins: pycurious (~Adium@user/pycurious)
[01:22:10] *** Joins: greedom (~greedom@p200300de670df000eacaf10f544eb454.dip0.t-ipconnect.de)
[01:22:57] *** Quits: foobaz21248 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[01:22:57] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[01:24:01] *** Joins: Roey (~Roey@user/Roey)
[01:24:08] *** Quits: aslicedbanjo (~aslicedba@host86-160-16-87.range86-160.btcentralplus.com) (Quit: Leaving.)
[01:24:16] <ttys000> so i've been playing around with fastapi and uvicorn and i'm happy with my app. up until now i've been running it with: `uvicorn main:app --host 127.0.0.1 --port 8000 --reload` but i want to run it as a system service, what is the best way to go about doing that? supervisor?
[01:25:17] *** Joins: tatsumaru (~tatsumaru@82.147.131.155)
[01:25:38] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[01:25:41] <tatsumaru> hey guys, why am I getting an error on my second print here, (this was typed in repl : https://paste.rs/mz9.py3
[01:25:48] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 240 seconds)
[01:26:24] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[01:26:41] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[01:26:56] <bjs> tatsumaru: probably because you're at the repl,  it doesn't work very well for writing little scripts
[01:27:02] <bjs> you're better of making an actual .py file
[01:27:18] <nedbat> tatsumaru: you need to end the for-clause with a blank line in the REPL
[01:27:36] <bjs> nedbat: i don't really know why it does that
[01:28:01] <nedbat> bjs: me either exactly, probably some edge case of parsing or janky integration?
[01:28:02] <bjs> is it special-cased for `for` or is there something else going on?
[01:28:09] <tatsumaru> is there a way to finish writing the script in repl before executing?
[01:29:31] *** Joins: nitestryker (~nitestryk@98.42.49.72)
[01:30:23] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[01:30:45] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[01:31:06] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[01:31:09] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[01:31:26] <Jong> Is there a way to run a python script but then change to interactive mode when a certain line is hit?
[01:31:32] *** Joins: PJBoy (~PJBoy@user/pjboy)
[01:31:46] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[01:32:27] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[01:32:39] <SnoopJ> Jong, is breakpoint() what you're looking for?
[01:32:57] *** Quits: wolfdale8 (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Ping timeout: 240 seconds)
[01:33:05] <SnoopJ> (you can get a Python REPL from pdb with the `interact` command)
[01:34:16] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[01:34:27] <Jong> thanks SnoopJ. I'll google breakpoint() to see what it's about
[01:34:36] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[01:34:37] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 240 seconds)
[01:34:50] <SnoopJ> Jong, https://docs.python.org/3.8/library/functions.html#breakpoint
[01:35:12] <nedbat> tatsumaru: the REPL isn't good for writing code you want to keep, or that gets very long
[01:37:43] *** Joins: c4017w__ (~c4017@209.52.68.8)
[01:38:53] *** Quits: xa0s_ (~xa0s@mab.sdf.org) (Quit: leaving)
[01:41:34] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[01:41:40] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[01:42:18] *** Joins: wolfdale8 (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[01:43:43] <SnoopJ> I would like to wrap an RSA key in AES (we don't have enough storage in our licensing hardware for the RSA key), is there anything I should know about using cryptography's aes_key_wrap() for this?
[01:44:27] <SnoopJ> would be doing something like this in prod: `needed_key = aes_key_unwrap(dongle_key, encrypted_key)`
[01:45:26] <bjs> tatsumaru: well you can write functions,  but the repl really wasn't designed for writing scripts
[01:47:41] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[01:47:48] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:19aa:3c5d:f8dd:ef4d) (Ping timeout: 240 seconds)
[01:47:53] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[01:48:03] <tatsumaru> i see, thanks
[01:48:31] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[01:51:37] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 240 seconds)
[01:52:42] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[01:54:27] *** Joins: foobaz21248 (~foobaz212@152.37.103.80)
[01:54:28] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[01:54:51] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:49c3:3805:b874:d1c) (Read error: Connection reset by peer)
[01:55:15] *** Quits: Guest54 (~Guest54@2620:10d:c092:400::4:7809) (Ping timeout: 256 seconds)
[01:56:29] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:d955:b290:e5c0:8cc6)
[01:58:39] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[01:59:10] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:59:23] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[02:00:05] *** Joins: rpkilby_ (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[02:00:10] *** Joins: qlixed (~qlixed@190.193.18.92)
[02:00:16] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[02:01:37] *** Quits: junebug (~junebug@2600:1700:3db0:2540:3802:3368:bfea:af4a) (Ping timeout: 240 seconds)
[02:01:43] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[02:02:12] *** Quits: zebrag (~chris@user/zebrag) (Ping timeout: 240 seconds)
[02:02:22] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[02:02:26] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 260 seconds)
[02:02:41] *** Joins: zebrag (~chris@user/zebrag)
[02:02:46] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:213a:7824:672d:f0)
[02:03:07] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[02:03:33] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 252 seconds)
[02:04:30] *** Quits: fstd_ (~fstd@xdsl-78-34-125-135.nc.de) (Read error: Connection reset by peer)
[02:04:42] *** Joins: fstd (~fstd@xdsl-78-34-125-135.nc.de)
[02:05:21] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[02:06:21] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[02:06:29] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Quit: Client closed)
[02:06:54] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[02:09:07] *** Joins: cosmo (~user@65.78.142.57)
[02:10:17] *** Quits: rpkilby_ (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 240 seconds)
[02:10:36] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[02:10:47] <NeilRG> does anyone know how to use tensorflow datasets?
[02:10:51] *** Quits: retux (~user@dyndsl-091-096-139-208.ewe-ip-backbone.de) (Quit: ERC 5.4.1 (IRC client for GNU Emacs 29.0.50))
[02:13:08] <mehwork> if i write an automated test that tests if a 3rd party client can interact with my web server's endpoints (no UI involved), is that an integration test or an end-to-end test?
[02:13:43] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[02:14:05] <SnoopJ> NeilRG, can you explain what you mean by "use?"
[02:14:20] *** Joins: BillyZane (~BillyZane@185.202.221.61)
[02:14:25] <nedbat> mehwork: do you have client code also, or do 3rd-party clients use your site?
[02:14:48] <NeilRG> SnoopJ, I'm trying to get the DatasetInfo from a dataset created by tensorflow_datasets.lost
[02:14:50] <NeilRG> load*
[02:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:13] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[02:15:17] <mehwork> nedbat: yes i have client code that accesses them as well
[02:15:22] *** Quits: foobaz21248 (~foobaz212@152.37.103.80) (Quit: Client closed)
[02:15:24] *** Joins: foobaz2124846 (~foobaz212@152.37.103.80)
[02:15:36] <mehwork> nedbat: but only through backend calls, everything here is basically backend
[02:15:44] <mehwork> service to external service
[02:15:52] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 272 seconds)
[02:16:12] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:16:14] <nedbat> mehwork: i'm not sure it's end-to-end if you are leaving out some of your own code.  But: why do we need to categorize the test?
[02:16:14] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:987e:99:7bc5:bbe6)
[02:16:18] <mehwork> nedbat: there is a website but it's out of the scope of the services i'm integrating
[02:16:36] *** cyphase_eviltwin is now known as cyphase
[02:16:50] <mehwork> nedbat: to name the folder/test runner command appropriately
[02:17:05] <mehwork> if i lump everything under 'integration' test or 'end to end' test that seems sloppy
[02:17:11] <nedbat> mehwork: call it e2e then
[02:17:16] <stewie925> does anyone know of a good (free) alternative to putty for windows os?
[02:17:44] <mehwork> nedbat: doesn't e2e mean end-user though? The end user isn't part of these tests at all. It's just how the backends communicate
[02:17:55] *** Quits: BillyZane2 (~BillyZane@185.202.221.61) (Ping timeout: 256 seconds)
[02:17:55] <SnoopJ> mehwork, it means "end-to-end"
[02:17:59] <nedbat> mehwork: e2e means end-to-end
[02:18:18] <mehwork> i know, but it still means end-to-end as an end user would use it
[02:18:26] <mehwork> doesn't it
[02:18:37] <mehwork> every testing pyramid i've seen shows e2e as 'ui'
[02:18:41] <nedbat> mehwork: it means the complete system.
[02:18:44] <SnoopJ> it depends on what *you*, the developer, consider the "ends"
[02:18:54] <nedbat> mehwork: if your system includes a ui, then it includes the ui
[02:19:00] <rhrf> stewie925: Tabby[6~
[02:19:13] <mehwork> Playright says "End-to-end tests automate UI interactions and can validate the functionality of your applications", too
[02:20:01] <stewie925> thanks rhrf - let me check it out
[02:21:09] *** Joins: Viewday1156 (~Viewday@user/viewday)
[02:21:57] <SnoopJ> NeilRG, looks like you pass with_info=True to load() and it returns a tuple of (Dataset, DatasetInfo)
[02:22:10] <nedbat> mehwork: playwright is a UI testing framework.
[02:22:18] <nedbat> mehwork: if you want to call it integration, call it that.
[02:22:31] <nedbat> mehwork: you know your system much better than i do :)
[02:22:35] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[02:22:35] *** Viewday1156 is now known as Viewday115
[02:22:39] <NeilRG> SnoopJ, Thank you!!!
[02:22:46] <NeilRG> SnoopJ, I've been at this for 30 minutes
[02:22:58] * SnoopJ just looked at the documentation
[02:23:51] *** Joins: Barones (~Barones@user/Barones)
[02:24:24] <mehwork> nedbat: alright thanks
[02:24:34] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[02:24:35] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Client Quit)
[02:24:51] <mehwork> nedbat: i was mostly just wondering if e2e always meant ui tests since it seems to be how it's used the most but i guess it's not
[02:25:06] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[02:25:06] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Read error: Connection reset by peer)
[02:25:12] <SnoopJ> indeed not
[02:25:13] *** Joins: tolot (~tolot@dslb-088-064-152-098.088.064.pools.vodafone-ip.de)
[02:25:29] <nedbat> mehwork: i see what you mean, that it's a term used often to include ui testing, but that's because systems often include ui code
[02:26:44] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Quit: ZNC - https://znc.in)
[02:27:05] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[02:27:21] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[02:28:01] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[02:28:39] *** Parts: tatsumaru (~tatsumaru@82.147.131.155) ()
[02:28:50] <mehwork> right
[02:29:17] <TML> not that many projects out there where at least ONE of the ends isn't some kind of UI
[02:29:27] *** Joins: NealRame (~a@89.187.163.193)
[02:30:00] *** Quits: xaltsc (~xaltsc@user/xaltsc) (Remote host closed the connection)
[02:30:37] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[02:30:58] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[02:32:23] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 256 seconds)
[02:32:25] *** Quits: stockh0lm (~Andreas@p200300d2c70b8a00355a8747fdef4cf3.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[02:33:04] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[02:33:18] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-dcb7-5040-30ea-af1b.res6.spectrum.com)
[02:34:33] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[02:35:41] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[02:35:48] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[02:36:23] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[02:36:36] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[02:37:48] *** Joins: lbalhar (~lbalhar@89.24.44.21)
[02:38:02] *** Joins: c4017w_ (~c4017@209.52.68.8)
[02:38:49] *** Quits: leighbb (~leighbb@user/leighbb) (Quit: Leaving)
[02:39:35] <mehwork> does it make sense to e2e test non-production code?
[02:39:46] <mehwork> or just the final product
[02:39:56] *** Quits: blei (~blei@user/blei) (Quit: Client closed)
[02:40:12] <SnoopJ> mehwork, it might. Testing is a means to an end, usually to build confidence in the behavior of some code or its integration with other systems.
[02:41:00] <TML> That's a strange delimiter to me - I don't normally think of _code_ as being "production" or "non-production"; that's usually an attribute of the execution environment
[02:41:27] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[02:41:34] <mehwork> sure, but unit tests are never production, so it seems like there is some delimeters
[02:42:18] <TML> mehwork: We definitely run the unit tests on our production environments as part of the release gating
[02:42:51] <mehwork> TML: why wouldn't the build catch unit test issues before deploying to prod be enough?
[02:43:23] <TML> mehwork: Because some issues don't appear until you run them in the production environment
[02:43:35] <mehwork> doesn't sound like a unit test then
[02:43:41] <mehwork> if the environment is affecting them
[02:43:48] <mehwork> woudln't that require external knowledge
[02:43:56] * SnoopJ has lost track of what the question is
[02:43:57] <mehwork> sounds like an integration test
[02:44:36] <mehwork> i'm probably failing to understand something, but i'm now more confused than before :)
[02:45:04] <SnoopJ> mehwork, the various categories of tests are not by any means very rigid formal concepts. The meanings of a lot of these terms will depend on the opinions of who is using the terms
[02:45:05] <TML> For example, you won't see this often in Python projects, but in Java projects you can have the OSGi container incorrectly hold on to an older version of a bundle, so your unit tests fail, indicating that there's a problem with the way the bundle is being registered that doesn't show up until you reach a long-lived instance like production.
[02:45:16] *** Quits: l4yer (~l4yer@2001:ac8:20:3b00:1012:7b5d:5eb6:e60f) (Changing host)
[02:45:16] *** Joins: l4yer (~l4yer@user/l4yer)
[02:46:04] <mehwork> SnoopJ: the most frustrating thing about the software development industry is we can't agree on what things mean, so it makes communicating extremely confusing
[02:46:15] <mehwork> goes way beyond testing terms too
[02:46:17] <SnoopJ> mehwork, that's why I encourage you to think of tests as a means to an end.
[02:46:29] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[02:46:37] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[02:46:58] <mehwork> everything is a means to and end, but how clear the path is should matter, ratehr than just being like "ok, i got here a totally weird and different way than other people on my team"
[02:47:24] <TML> mehwork: For us, the entire test suite is run anytime a single test is run by the tooling. Invdividual devs may run a particular test or suite of tests on their machines without executing the entire harness, but the tooling just executes everything on any release gate.
[02:47:26] <SnoopJ> it matters, but I don't know by what means I can influence the terminology of [everyone else who writes computer programs]
[02:47:30] <mehwork> this is why code bases are such a mess usually, if everyone brings their own different udnerstanding/opinions to the table vs having some real standard
[02:47:55] *** Joins: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[02:47:59] <SnoopJ> you're not wrong, but this is turning into just a description of what programming is like :)
[02:48:19] <mehwork> alright at least i'm not crazy, sometimes it feels like i am until i hear someone echo back my own sentiment
[02:48:33] <mehwork> you have entered "the programming zone"
[02:48:35] <SnoopJ> some categories are more reliable than others. "unit" and "integration" have fairly stable meanings for instance
[02:48:48] <mehwork> integration doesn't have a stable meaning
[02:49:03] <SnoopJ> I guess I stand corrected, then.
[02:49:14] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:11e5:11d:3263:7873)
[02:49:16] <derek_v> it's not just programming, language is like this in general
[02:49:24] <mehwork> https://martinfowler.com/bliki/IntegrationTest.html "Integration tests determine if independently developed units of software work correctly when they are connected to each other. The term has become blurred even by the diffuse standards of the software industry"
[02:49:57] <SnoopJ> The stable portion to which I referred would be "...when they are connected to each other"
[02:49:57] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 256 seconds)
[02:50:21] <SnoopJ> i.e. an integration test is testing some kind of integration of a [thing] with [another thing]
[02:50:54] <mehwork> people will call a blackbox test to an external api server an 'integration test'. I guess there the "integration" is that of the request -> server -> response ?
[02:51:41] <zen_coder> Why does this code fails? https://onlinegdb.com/rsTQD5ItP "TypeError: realpath() takes 1 positional argument but 2 were given"
[02:51:50] <SnoopJ> mehwork, the integration there is between the local code and the remote code.
[02:51:54] <zen_coder> I want to get from an absolute path, a relative path one
[02:52:18] <mehwork> SnoopJ: right
[02:52:19] <SnoopJ> i.e. the behavior behind such a test probably depends simultaneously on *both* bits of code
[02:52:39] <mehwork> alright, you guys seem sane about the whole thing at least. Wish i could work with you some day
[02:52:40] <SnoopJ> although in practice you can often avoid the remote dependency if you can simulate a response or whatever
[02:52:52] <mehwork> most people i talk to about it don't even care enough try
[02:53:12] <SnoopJ> (at which point it would maybe be considered a unit test? that's a region of some fuzziness I suppose)
[02:53:44] <TML> zen_coder: realpath() is not "relative path", it's "Real Path", or (more properly) "the canonicalized absolute pathname"
[02:53:49] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[02:54:00] <mehwork> SnoopJ: once you do it that way, it's somewhere between a unit and an integration test i think, but maybe the distinction is if it adds to the code coverage like a unit tst would
[02:54:01] *** Joins: pkapp_ (~pkapp@2601:58c:c500:6900:dc43:f8e4:4bcf:4e48)
[02:54:21] <SnoopJ> mehwork, this is the kind of thing I mean when I say it depends on who's giving the test a name :)
[02:54:24] <zen_coder> how can I get a relative path from an absolute one?
[02:54:27] <zen_coder> TML: ?
[02:55:48] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:95d3:1861:105e:ba17) (Ping timeout: 252 seconds)
[02:55:50] *** Quits: lispy (~lispy@user/lispy) (Quit: Leaving)
[02:56:07] *** Quits: upsala (~zcb@185.209.196.139) (Quit: WeeChat 3.4)
[02:57:05] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:213a:7824:672d:f0) (Read error: Connection reset by peer)
[02:57:13] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[02:59:13] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[03:00:13] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[03:00:24] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[03:00:55] *** Joins: 030AADQ4P (~pyeveryth@64-18-153-56.starry-inc.net)
[03:00:56] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[03:00:56] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[03:02:06] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[03:03:51] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[03:04:19] *** Joins: tga (~tga@user/tga)
[03:04:38] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:1f05:49c3:3805:b874:d1c)
[03:04:38] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:05:06] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[03:05:13] *** Parts: snakey_hiss (~cloudy_nz@101.100.131.5) (WeeChat 2.8)
[03:05:15] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Ping timeout: 240 seconds)
[03:05:34] <tga> hey, I am defining a static dict like {"category": [str1, str2, str3]} and ideally I'd like to type category names and values into enums or similar, for ease of use
[03:05:48] *** Quits: lbalhar (~lbalhar@89.24.44.21) (Ping timeout: 240 seconds)
[03:05:57] <tga> is there a good pattern to do that without defining first an enum of category names, then an enum of possible values, then putting the whole thing together as a dict?
[03:06:52] <TML> zen_coder: Maybe something with string.replace() and os.getcwd()?
[03:06:58] <tga> ease of use = code completion / mypy error on typo I guess
[03:07:13] <TML> zen_coder: I don't know of anything more magical than that
[03:07:39] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:d14f:81af:1eb6:bc1b) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[03:07:48] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:d955:b290:e5c0:8cc6) (Ping timeout: 240 seconds)
[03:08:29] <BtbN> https://docs.python.org/3/library/os.path.html#os.path.relpath
[03:08:34] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[03:08:42] *** Quits: singularity00_ (~singulari@236.lan-hi1-2.static.rozabg.com) (Quit: The true sign of intelligence is not knowledge but imagination.)
[03:09:49] *** Quits: 030AADQ4P (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 256 seconds)
[03:10:27] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[03:11:13] *** Quits: peteyboy1 (~peteyboy1@95.169.226.66) (Remote host closed the connection)
[03:11:36] *** Joins: peteyboy1 (~peteyboy1@95.169.226.66)
[03:12:04] *** Quits: peteyboy1 (~peteyboy1@95.169.226.66) (Read error: Connection reset by peer)
[03:12:39] *** Joins: Kanjizai (~kanjizai@cpe-107-185-193-171.socal.res.rr.com)
[03:13:19] <SnoopJ> tga, I'm having difficulty understanding your question, it sounds like you're saying you want an enum, but also that you don't want an enum. Can you restate?
[03:13:49] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[03:13:51] <NeilRG> What am I doing wrong with this match statement?
[03:14:02] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:14:17] <NeilRG> https://bpa.st/KSMQ
[03:15:21] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[03:15:22] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:213a:7824:672d:f0)
[03:15:29] <zen_coder> BtbN: thx
[03:15:44] <SnoopJ> NeilRG, did you mean `case C(x=x):` ?
[03:15:46] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:15:52] <gcbirzan> NeilRG: You're missing a case, at the very least
[03:16:01] <NeilRG> SnoopJ, oh lol you got it
[03:16:03] *** Quits: qlixed (~qlixed@190.193.18.92) (Remote host closed the connection)
[03:16:05] <NeilRG> sorry I'm still new to this
[03:16:20] <SnoopJ> PEP 636 is a very good tutorial on pattern matching if you haven't read it https://www.python.org/dev/peps/pep-0636/
[03:16:39] *** Quits: kts (~kts@103.73.237.215) (Quit: Konversation terminated!)
[03:16:44] <NeilRG> SnoopJ, I did flip through it, but I guess I still haven't got the right habits
[03:16:50] <NeilRG> it'll come
[03:16:56] *** Quits: magla (~gelignite@d536536e.access.ecotel.net) (Quit: Stay safe!)
[03:17:34] <tga> SnoopJ: I guess I want something like a dict that I can define once but get autocompletion on keys _and_ values
[03:17:56] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 272 seconds)
[03:18:19] <tga> SnoopJ: with enums I have to first define values (writing each one _twice_ like FOO = 'foo'), and then put them together in a dict (writing them all the third time)
[03:19:30] <SnoopJ> it sounds like you want to generate one of them from the other, but I'm afraid I still don't understand the task (I don't know how autocompletion relates to the values of a dictionary)
[03:19:59] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[03:21:08] *** Quits: greedom (~greedom@p200300de670df000eacaf10f544eb454.dip0.t-ipconnect.de) ()
[03:21:18] <tga> SnoopJ: I have a big static dict with configuration values, that then get referenced all over the place. I need to use it as a dict (searching by key) and also fish out values directly (mydict["foo"])
[03:21:47] <tga> SnoopJ: I'm trying to add code completion for the second case
[03:22:34] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[03:22:38] <tga> the straightforward way is to add an enum with all keys, and an enum with all possible values -- but that's a lot of repeated typing
[03:23:03] <tga> so I was looking for options, maybe there is a dict/enum like data structure that I'm missing
[03:24:01] <SnoopJ> enum.Enum instances have a __members__ attribute that is a read-only mapping of the keys/values defined therein, although the members will be instances of the subclass and will need a little unpacking if you want to get back to exactly what your dict looks like
[03:24:57] <SnoopJ> but I still don't understand how completion on values comes into this, completion of mydict["foo"] would be over the keys, wouldn't it?
[03:25:12] <tga> I do want completion over keys, when I use them directly
[03:25:41] <tga> so my current option is to have a separate enum just listing the keys, and then I can build the dict like {MyEnum.KEY1: [1,2,3]}
[03:26:29] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:987e:99:7bc5:bbe6) (Quit: Client closed)
[03:26:38] <marduk> You can define a TypedDict
[03:27:23] <SnoopJ> ah yea, TypedDict would be useful for the keys part of this. No idea how it intersects with the values part, which is a mystery to me.
[03:27:43] <SnoopJ> substantially simpler than messing around with Enum's implementation
[03:28:56] <tga> TypedDict is nice -- it doesn't reduce the code I have to write, but definitely nice to have
[03:29:09] <tga> it prevents someone not knowing about the key enum and using a regular string
[03:29:40] <tga> the values part is the same deal, all values come from a fixed set, and I'd like to have completion  when used directly
[03:30:02] <tga> {KeyEnum.FOO: [ValueEnum.BAR, ValueEnum.BAZ]} kind of deal
[03:31:01] <tga> no way around defining the bag of values I guess
[03:31:15] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[03:31:27] <tga> one last thing, is there a way to skip repeating string values in an str enum?
[03:31:35] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[03:31:46] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[03:32:52] *** Quits: iapetus_ (~iapetus@S0106001195d728bb.cg.shawcable.net) (Quit: Leaving)
[03:33:06] *** Quits: jfcaron (~jfcaron@scp-8480-gw1.phys.sfu.ca) (Quit: Client closed)
[03:33:23] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[03:34:17] *** Joins: junebug (~junebug@2600:1700:3db0:2540:9627:3b93:ddcc:1cfd)
[03:35:17] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[03:35:38] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Client Quit)
[03:35:40] <tga> yeah ok, guess I'm making it too complicated, copy pasta enums it is
[03:36:27] *** Quits: junebug (~junebug@2600:1700:3db0:2540:9627:3b93:ddcc:1cfd) (Client Quit)
[03:36:27] *** Quits: flea (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 256 seconds)
[03:36:34] *** Joins: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[03:36:36] *** Joins: Wulf (~Wulf@user/wulf)
[03:36:43] *** Joins: junebug (~junebug@2600:1700:3db0:2540:9627:3b93:ddcc:1cfd)
[03:37:37] *** Quits: GeorgeK (~GeorgeK@cpe-70-92-5-228.wi.res.rr.com) (Ping timeout: 240 seconds)
[03:38:48] *** Joins: c4017w__ (~c4017@209.52.68.8)
[03:39:50] *** Joins: GeorgeK (~GeorgeK@cpe-70-92-5-228.wi.res.rr.com)
[03:40:02] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[03:40:59] *** Quits: tolot (~tolot@dslb-088-064-152-098.088.064.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[03:40:59] *** Quits: nitestryker (~nitestryk@98.42.49.72) (Read error: Connection reset by peer)
[03:41:15] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[03:41:23] *** Joins: nitestryker (~nitestryk@98.42.49.72)
[03:41:47] *** Joins: Girl-JJDa (~Girl-JJDa@112.45.55.79)
[03:42:18] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[03:44:04] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 250 seconds)
[03:44:16] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:19aa:3c5d:f8dd:ef4d)
[03:45:23] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[03:45:37] *** Joins: JimmyRustles (Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net)
[03:46:00] <JimmyRustles> hi, what's a reliable way of getting the price of the cryptocurrency polkadot? i tried yahoo finance and cbpro and got it working with both but they sometimes misreport the price
[03:46:14] <JimmyRustles> yahoo finance works for all the other currencies but sometimes misreports polkadot
[03:46:27] *** meejah_ is now known as meejah
[03:46:59] *** Joins: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net)
[03:48:24] *** Joins: thiras (~thiras@user/thiras)
[03:49:27] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 256 seconds)
[03:49:33] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[03:51:06] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[03:51:33] <nedbat> JimmyRustles: that doesn't seem like a python question
[03:52:10] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[03:53:05] *** Joins: Guest60 (~Guest60@2601:583:601:8720:840a:2599:29a1:2d1a)
[03:53:37] *** Quits: Guest60 (~Guest60@2601:583:601:8720:840a:2599:29a1:2d1a) (Client Quit)
[03:54:06] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[03:54:11] *** Joins: cgrage (~cgrage@107.175.104.228)
[03:54:19] *** Joins: Adoi (~Adoi@user/adoi)
[03:55:24] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[03:55:50] <JimmyRustles> i'm asking which python library would be best
[03:55:53] <JimmyRustles> sorry if that wasn't clear
[03:56:36] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 240 seconds)
[03:56:49] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 256 seconds)
[03:57:11] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[03:57:11] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Client Quit)
[03:58:44] *** Joins: fling (~fling@user/fling)
[03:58:54] <nedbat> JimmyRustles: this sounds like you need to find the best web site, not the best library
[03:59:45] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[04:02:31] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[04:02:59] *** Quits: cosmo (~user@65.78.142.57) (Read error: Connection reset by peer)
[04:03:15] *** Joins: ymwm_ (~yingmanwu@27.153.164.187)
[04:03:31] <AhmedAmerican> graingert: am struggling to understand why `Trio` nurseries raise the Exception immediately while `Anyio` sometimes raise it in same time and sometimes hang till i Except it explicitly
[04:04:16] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[04:05:55] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 256 seconds)
[04:06:52] *** Quits: Iolo (~iolo@dsl-tkubng22-58c02b-220.dhcp.inet.fi) (Quit: Leaving)
[04:08:13] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Remote host closed the connection)
[04:08:15] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[04:08:37] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[04:09:20] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[04:11:15] *** Quits: Guest3952 (~vit@chello085216193138.chello.sk) (Ping timeout: 256 seconds)
[04:13:03] *** Quits: nitestryker (~nitestryk@98.42.49.72) (Remote host closed the connection)
[04:13:30] *** Quits: docdubya (~docdubya@99-160-2-97.lightspeed.rcsntx.sbcglobal.net) (Quit: Connection closed)
[04:13:40] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[04:14:32] *** Quits: theo (~theo@user/theo) (Read error: Connection reset by peer)
[04:15:25] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[04:15:37] *** Joins: theo (~theo@user/theo)
[04:17:57] *** Joins: CodePoint (~CodePoint@2600:1700:3070:3790::11)
[04:18:09] *** Gustavo6046_ is now known as Gustavo6046
[04:19:29] *** Quits: zeden (~zeden@user/zeden) (Ping timeout: 256 seconds)
[04:20:35] <Adoi> hello bjs, thank you for your hint today, solved the problem with this code part; https://bpa.st/YZ2Q....as you said, converting the original list of strings solved it; https://bpa.st/OR2Q
[04:20:36] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[04:21:11] *** Quits: ymwm_ (~yingmanwu@27.153.164.187) (Ping timeout: 256 seconds)
[04:21:38] <Adoi>  just...why did it not work when I simply added int(...) to the original list..?
[04:22:20] <Adoi> I mean, simply rewriting 'data['conf'][i]' as 'int(data['conf'][i])'
[04:22:28] <mat001> Hey. the global keyword. I have a global variable inside f inner funciton. What is the scope of the global keyword. Is is the parent scope or the actual global scope?
[04:22:37] *** Joins: LuKaRo (~LuKaRo@p57b157e5.dip0.t-ipconnect.de)
[04:23:04] *** Quits: LuKaRo_ (~LuKaRo@p200300dfa712f19d00000000000001f9.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[04:23:29] <mat001> I don't want the root level to see my variable, I want the parent scope to bea ble to
[04:23:31] *** Joins: zmt00 (~zmt00@user/zmt00)
[04:23:40] <Repiphany> mat001: nonlocal
[04:24:38] *** Quits: MJ (~mjpieters@zopatista.plus.com) (Quit: ZNC - http://znc.in)
[04:25:54] *** Joins: MJ (~mjpieters@zopatista.plus.com)
[04:27:14] <mat001> Repiphany: ah! perfect ty
[04:27:26] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 245 seconds)
[04:29:04] *** Quits: Girl-JJDa (~Girl-JJDa@112.45.55.79) (Quit: Client closed)
[04:29:12] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[04:32:14] *** Quits: tga (~tga@user/tga) (Ping timeout: 260 seconds)
[04:32:36] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 240 seconds)
[04:32:55] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[04:34:35] *** Joins: Wulf (~Wulf@user/wulf)
[04:34:36] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:58d7:8b0e:3fe2:b47f)
[04:35:19] *** Quits: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[04:35:25] *** Quits: flokuehn_ (~flokuehn@87.123.247.36) (Ping timeout: 240 seconds)
[04:36:46] *** Joins: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[04:36:56] *** Quits: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[04:37:20] *** Joins: flokuehn (~flokuehn@87.123.247.41)
[04:38:29] *** Quits: vlado1 (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c) (Quit: WeeChat 3.4)
[04:39:32] *** Joins: c4017w_ (~c4017@209.52.68.8)
[04:42:36] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[04:43:00] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[04:43:42] *** Joins: jazzy (~jaziz@user/jaziz)
[04:45:22] *** Joins: Girl-JJDa (~Girl-JJDa@112.45.55.79)
[04:45:49] *** Quits: gadius (~gadfly@107-214-145-46.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 256 seconds)
[04:46:02] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[04:47:38] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[04:53:34] *** Quits: CodePoint (~CodePoint@2600:1700:3070:3790::11) (Quit: CodePoint)
[04:55:46] *** Quits: Auron (Auron956@user/auron) ()
[04:56:36] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:11e5:11d:3263:7873) (Ping timeout: 245 seconds)
[04:56:58] *** Quits: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr) (Ping timeout: 260 seconds)
[05:04:51] *** Joins: parv (~quass@user/parv)
[05:05:02] *** Quits: radiojosh (~Joshua@70-131-32-80.lightspeed.stlsmo.sbcglobal.net) (Ping timeout: 252 seconds)
[05:06:23] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[05:08:14] *** Quits: Girl-JJDa (~Girl-JJDa@112.45.55.79) (Quit: Client closed)
[05:08:37] *** Joins: girl-jjda (~girl-jjda@112.45.55.79)
[05:09:41] *** Joins: clf059 (~clf059@2603:3023:a2b:a800:d567:7f89:7e2c:7e13)
[05:09:45] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[05:12:13] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[05:12:27] *** Joins: murdoc_x01 (~nitestryk@98.42.49.72)
[05:12:45] *** Joins: dbristow (~dbristow@user/dbristow)
[05:13:33] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Client Quit)
[05:16:49] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[05:17:48] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[05:18:29] *** Joins: Guest2 (~Guest2@2601:201:8101:6170::8cd2)
[05:18:31] *** Parts: Guest2 (~Guest2@2601:201:8101:6170::8cd2) ()
[05:18:51] *** Joins: Guest2 (~Guest2@2601:201:8101:6170::8cd2)
[05:19:33] *** Quits: sferofficial (~Thunderbi@120.84.9.83) (Ping timeout: 256 seconds)
[05:19:56] *** Joins: xkuru (~xkuru@user/xkuru)
[05:21:38] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:58d7:8b0e:3fe2:b47f) (Quit: I have gone to sleep. ZZZzzzâ¦)
[05:22:12] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[05:22:33] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[05:23:13] *** Quits: rje (~textual@65.141.156.170) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[05:24:00] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[05:24:52] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[05:24:52] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0::49) (Remote host closed the connection)
[05:24:56] <Guest2> I'm sorry to barge in like this, I haven't been able to get ahold of anyone on my team. I have a bit of a dumb question. How would one proxy a request with django? The entire path is correct, I just need to adjust the port it's going to. Sounds dumb, I know, but the url requested is from generated code that I can't configure.
[05:26:24] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:8eaa:1fe9:fd6:a9aa)
[05:27:29] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 256 seconds)
[05:27:32] *** Quits: clf059 (~clf059@2603:3023:a2b:a800:d567:7f89:7e2c:7e13) (Quit: Textual IRC Client: www.textualapp.com)
[05:27:33] *** Quits: akk (~akk@75.161.130.204) (Quit: +++)
[05:29:17] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:213a:7824:672d:f0) (Ping timeout: 240 seconds)
[05:32:13] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[05:32:37] *** Quits: flokuehn (~flokuehn@87.123.247.41) (Ping timeout: 256 seconds)
[05:33:11] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[05:34:19] *** Joins: flokuehn (~flokuehn@87.123.247.80)
[05:36:09] *** Joins: ymwm_ (~yingmanwu@27.153.164.187)
[05:37:48] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[05:37:57] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:40:16] *** Joins: c4017w__ (~c4017@209.52.68.8)
[05:41:22] *** Quits: vakera_pingveno (~dan@2600:1700:21f9:b150::48) (Quit: Konversation terminated!)
[05:42:28] *** Joins: bluedust (~bluedust@103.165.167.61)
[05:43:41] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 245 seconds)
[05:43:41] <jim> do packages in python3 need a __init__,py?
[05:44:19] <Guest2> I believe so. The file doesn't always have to contain anything, but it should be there
[05:44:23] <jim> mistyped that, should be __init__.py
[05:44:31] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[05:45:02] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[05:45:29] <jim> ok, reason I ask, I thought I heard that python3 doesn't require that, but python2 does... in any case, I'll keep it in there
[05:46:12] <murdoc_x01> Good idea
[05:46:34] <Guest2> you wouldn't happen to know how to proxy an api request in django would you?
[05:47:24] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:19aa:3c5d:f8dd:ef4d) (Ping timeout: 252 seconds)
[05:47:28] *** Quits: NealRame (~a@89.187.163.193) (Quit: Konversation terminated!)
[05:47:29] <murdoc_x01> have you looked at pypi django-proxy-server
[05:47:49] <jim> heh. I'm a baby djangoer, I dunno nuffin yet
[05:48:22] <murdoc_x01> i don't know what your trying to do but that might be a good place to start
[05:48:32] <murdoc_x01> and see if that's what you are looking for
[05:48:46] <Guest2> I was hoping to do it without adding additional packages. I just need to specify the port for a url, but it's in generated code that I can't modify
[05:48:56] <Guest2> I'll check it out through, thank you!
[05:49:22] <gjvc> jim, life is better without empty __init__.py everywhere
[05:50:09] <jim> but will that life give us working sites...
[05:51:04] <gjvc> well, use python3 if you can :-)
[05:51:30] <jim> if python were to remove the restriction, maybe they'll put it in python4
[05:52:20] <gjvc> to be clear python2 requires __init__.py, python3 does not.
[05:52:32] <Guest2> jim: I do believe I gave you bad info
[05:53:44] *** Quits: wac (~wac@user/wac) (Quit: Zzzzâ¦)
[05:54:50] <jim> Guest2, which info do you mean?
[05:55:47] <jim> oh, that init thing. ok
[05:56:14] *** Quits: weedmic (~weedmic@2a0d:6fc0:2840:200:d5c7:b64a:7be4:b6c7) (Read error: Connection reset by peer)
[05:56:30] <jim> Guest2, no worries... it's all good
[05:58:39] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Ping timeout: 256 seconds)
[05:58:48] <jim> the important thing is it got fixed
[06:00:00] <jim> Guest2, what would Raymond Hettinger say... we each learned something new
[06:00:14] *** Joins: weedmic (~weedmic@2a0d:6fc0:2840:200:d5c7:b64a:7be4:b6c7)
[06:00:30] *** Joins: ejjfunky (~ejjfunky@125.164.21.90)
[06:01:04] <Guest2> jim: That's true. I've been learning a lot today... mostly what not to do haha
[06:03:29] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[06:03:47] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[06:04:53] <jim> heh, just as important as the array of what you can do
[06:05:32] *** Quits: Joeee (~Joeee@188.252.198.59) (Quit: Leaving.)
[06:06:01] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:987e:99:7bc5:bbe6)
[06:06:06] *** Quits: pkapp_ (~pkapp@2601:58c:c500:6900:dc43:f8e4:4bcf:4e48) (Ping timeout: 252 seconds)
[06:06:09] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:987e:99:7bc5:bbe6) (Client Quit)
[06:06:24] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Ping timeout: 272 seconds)
[06:06:59] *** Joins: blei (~blei@user/blei)
[06:08:22] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:dc43:f8e4:4bcf:4e48)
[06:08:54] <blei> setup.py is invoking c++ and I need it to include a -I include path. so far all attempts have been ignored
[06:09:22] *** Quits: bomb-on (~bomb-on@user/bomb-on) (Quit: aÐ»Ð»Ð¸Ð»Ñ¹ÑÐ°!)
[06:10:20] *** Quits: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182) (Remote host closed the connection)
[06:12:26] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[06:13:17] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[06:13:31] *** Joins: Yilo (~Yilo@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[06:15:31] *** Quits: Sheilong (uid293653@2a03:5180:f:3::4:7b15) ()
[06:15:46] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[06:17:06] *** Joins: semeion (~semeion@user/semeion)
[06:18:29] *** Joins: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182)
[06:18:45] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[06:19:14] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[06:19:30] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[06:19:52] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[06:19:58] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[06:19:59] *** Parts: cgrage (~cgrage@107.175.104.228) ()
[06:21:09] *** Joins: thiras (~thiras@user/thiras)
[06:21:17] *** Joins: Viewday1152 (~Viewday@user/viewday)
[06:21:36] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 272 seconds)
[06:22:30] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[06:22:31] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Client Quit)
[06:22:49] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[06:22:50] *** Viewday1152 is now known as Viewday115
[06:25:02] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[06:25:09] <blei> got it, it was an arg to setup()
[06:26:51] *** Joins: icy_hot (~icy_hot@211.32.147.101)
[06:29:22] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 260 seconds)
[06:30:02] *** Quits: ubert (~Thunderbi@p200300ecdf3be96140af3c3b2fdf1119.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[06:30:28] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[06:30:40] *** Joins: ubert (~Thunderbi@p200300ecdf3be9b909e125961b02a69e.dip0.t-ipconnect.de)
[06:32:52] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:33:09] *** Quits: girl-jjda (~girl-jjda@112.45.55.79) (Quit: girl-jjda)
[06:33:35] *** Joins: Girl-JJDa (~Girl-JJDa@112.45.55.79)
[06:34:31] *** Quits: Guest2 (~Guest2@2601:201:8101:6170::8cd2) (Quit: Client closed)
[06:35:07] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:35:39] *** Joins: bluedust_ (~bluedust@86.106.136.216)
[06:39:15] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[06:39:20] *** Quits: bluedust (~bluedust@103.165.167.61) (Ping timeout: 272 seconds)
[06:39:45] *** Joins: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net)
[06:41:01] *** Joins: c4017w_ (~c4017@209.52.68.8)
[06:43:24] *** Quits: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2) (Ping timeout: 240 seconds)
[06:44:12] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[06:44:17] <enrh> Question. Can someone help me understand why in this example https://docs.python.org/3/library/multiprocessing.html#using-a-remote-manager there is class QueueManager(BaseManager): pass? Is it because of QueueManager.register and not wanting to update the imported BaseManager class?
[06:44:40] *** Quits: ejjfunky (~ejjfunky@125.164.21.90) (Quit: Leaving)
[06:45:07] *** Joins: ejjfunky (~ejjfunky2@125.164.19.180)
[06:45:28] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:47:08] <Pi-sistance> does ==\ mean anything special? I see it in an assert block
[06:47:22] <Pi-sistance> google showed notihng
[06:47:27] <blei> it means the right hand side is on the next line
[06:48:05] <Pi-sistance> ah thanks. Is that unique to assert or just the equality function?
[06:48:13] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[06:48:34] <blei> its an allowed pattern for breaking up long lines
[06:49:39] <Pi-sistance> Ok, I mean, what are the rules for where I can use it though?
[06:50:28] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[06:50:42] *** Joins: Joeee (~Joeee@188.252.198.59)
[06:50:49] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[06:51:07] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Killed (silver.libera.chat (Nickname regained by services)))
[06:51:07] *** [_] is now known as [itchyjunk]
[06:51:22] <blei> https://www.python.org/dev/peps/pep-0008/#maximum-line-length
[06:52:15] *** Joins: tWqaq (~tWqaq@240e:389:5d1c:ff00:7af4:d067:9364:2057)
[06:53:43] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[06:54:07] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[06:54:13] <Pi-sistance> ty
[06:54:32] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 272 seconds)
[06:58:35] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[07:00:17] *** Joins: white2 (~mahengrui@user/mahengrui1)
[07:01:41] <Pi-sistance> In an equality (==) we can have a \n in the string be interpreted as a new line, yes?
[07:01:51] <Pi-sistance> oh I can test that myself nvm
[07:02:28] *** Joins: saroy (~Sandipan@43.252.250.113)
[07:03:00] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[07:03:08] *** Quits: bluedust_ (~bluedust@86.106.136.216) (Remote host closed the connection)
[07:04:01] *** Joins: Henry_ (~mahengrui@user/mahengrui1)
[07:05:12] <mat001> Does nonlocal keyword work the same way in furth and third nested function as in in the first and second?
[07:05:36] <mat001> Does it always look at the parent function scope>?
[07:06:07] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[07:06:20] *** Joins: rvalue (~rvalue@user/rvalue)
[07:06:59] *** Joins: bluedust (~bluedust@194.37.96.104)
[07:07:44] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:07:47] *** Quits: white2 (~mahengrui@user/mahengrui1) (Ping timeout: 256 seconds)
[07:09:48] *** Quits: anotheruser (~user@197.54.66.42) (Ping timeout: 240 seconds)
[07:10:09] *** Joins: bluedust_ (~bluedust@103.165.167.61)
[07:10:21] <blei> please test and let me know
[07:10:59] <mat001> blei:  I did and it dosn't work. That's why I'm askinghere
[07:11:21] *** Joins: crashrep (~crashrep@user/crashrep)
[07:11:24] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:11:34] <blei> check channel topic and paste your code
[07:12:16] <voldial> I want to replace specific byte indicies in .read()'s to a file handle, without loading the item in memory, or iterating one bit at a time and checking an index, clearly I can chunk, see if any of the indexes I want replaced are in that chunk, replace them, and yeild that chunk, just asking if there is a more elegent way.
[07:12:52] *** Joins: stockh0lm (~Andreas@p200300d2c72a7400215109cd659aea9d.dip0.t-ipconnect.de)
[07:12:58] <voldial> I want to specify the index ranges in slice syntax
[07:13:00] *** Quits: bluedust (~bluedust@194.37.96.104) (Ping timeout: 240 seconds)
[07:13:18] <blei> memory mapped file?
[07:13:30] <voldial> ha, yes
[07:14:11] <voldial> blei: thanks. I knew I was missing the obvious
[07:14:28] <blei> np, hope it works
[07:16:40] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[07:17:08] *** Quits: ymwm_ (~yingmanwu@27.153.164.187) (Remote host closed the connection)
[07:17:56] *** Joins: Henry__ (~mahengrui@user/mahengrui1)
[07:21:23] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[07:21:35] *** Joins: rje (~textual@50.35.241.164)
[07:22:24] *** Quits: Henry_ (~mahengrui@user/mahengrui1) (Ping timeout: 272 seconds)
[07:23:47] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[07:24:17] <voldial> what's the [i1:i2] slice syntax at the top of: https://docs.python.org/3/library/mmap.html? I get "NameError: name 'i1' is not defined"
[07:24:28] <Pi-sistance> gg=print("first\nsecond"Â Â assert gg=="first\nsecond", "doh" doesnt work, so im not sure how other code did it, I cantÂ  see anything extra between them, damnit.
[07:25:12] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[07:25:14] <Pi-sistance> i didnt paste the closing print bracket
[07:25:20] <blei> voldial those are slice indices, integers
[07:25:35] *** Joins: adeliktas1 (~adeliktas@i59F5F4FC.versanet.de)
[07:25:39] <blei> the byte range
[07:26:17] <voldial> blei: yea, but it's not valid syntax right?
[07:26:37] <blei> yes that is syntactic sugar.
[07:26:48] *** Quits: icy_hot (~icy_hot@211.32.147.101) (Quit: WeeChat 3.4)
[07:27:19] *** Quits: adeliktas (~adeliktas@i59F52E53.versanet.de) (Ping timeout: 256 seconds)
[07:27:19] *** adeliktas1 is now known as adeliktas
[07:27:34] <voldial> hm, so only on a mmap object? cuz... a = b"000" ; a[i1:i2] -> NameError on py3.9
[07:28:07] *** Joins: Elzington_ (~Elzington@87.249.134.31)
[07:28:25] *** Quits: Elzington_ (~Elzington@87.249.134.31) (Max SendQ exceeded)
[07:28:39] <blei> you can check the python source code; i suspect that yes, those operators are overloaded for mmap
[07:28:48] *** Joins: Elzington_ (~Elzington@87.249.134.31)
[07:28:59] <voldial> huah. that's unexpected. thanks
[07:29:08] <blei> you need to define i1=1 i2=3
[07:29:31] <voldial> I feel like I am really missing the point now
[07:29:34] <blei> the slicing does work on a byte string
[07:29:42] <blei> no, you have the solution.
[07:30:05] <blei> you need to set i1 to the start of the byte range, i2 to the end, and then _[i1,i2] = file_handle
[07:30:06] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:30:43] *** Quits: Elzington (~Elzington@87.249.134.31) (Ping timeout: 256 seconds)
[07:32:16] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[07:32:16] <voldial> ok, so it's not syntatic sugar, it's just a confusing example without the context that i1 i2 are pre-assinged vars... which everyone already knows vars can be slice indicies... so I feel like the docs are just confusing there, why not just say obj[0:2] = b'..'?
[07:32:34] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:32:34] <blei> it wasn't confusing to me. it was the solution to your problem.
[07:32:36] *** Quits: nomic (~nomic@85.203.36.100) (Quit: Leaving)
[07:33:07] *** Quits: Henry__ (~mahengrui@user/mahengrui1) (Read error: Connection reset by peer)
[07:33:11] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[07:33:12] <Pi-sistance> alright before I paste anything, am I making a stupid mistake? gg=print("first\nsecond")
[07:33:13] <Pi-sistance> assert gg=="first\nsecond", "doh"Â  the line break cant be interpreted right?
[07:33:17] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 240 seconds)
[07:34:09] *** Joins: Henry__ (~mahengrui@user/mahengrui1)
[07:34:14] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[07:35:18] <Repiphany> print returns None
[07:35:27] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[07:35:35] *** Joins: Guest7331 (~OPK@user/opk)
[07:35:41] *** Quits: Guest7331 (~OPK@user/opk) (Client Quit)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:10] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Quit: Lost terminal)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:53] *** Parts: Joeee (~Joeee@188.252.198.59) ()
[07:36:59] <Pi-sistance> oh goddamnit not again pmsl
[07:37:22] *** Joins: OPK_ (~OPK@user/opk)
[07:37:51] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[07:40:30] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[07:41:29] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:41:43] *** Joins: c4017w__ (~c4017@209.52.68.8)
[07:42:16] <whatsupdoc> Q: Is it possible to write a dictionary minus one element the way you can do with sets? {a,b,c,d} - {a} = {b,c,d}
[07:42:30] *** Joins: ymwm (~yingmanwu@27.153.164.187)
[07:43:20] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:43:22] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:44:02] *** Quits: fluter (~fluter@user/fluter) (Read error: Connection reset by peer)
[07:44:09] <Pi-sistance> repiphany it still doesnt work even if I return the LHS in a print function
[07:44:23] <Pi-sistance> I mean, it shouldm right
[07:44:30] <Repiphany> I don't know what you're trying to do
[07:44:33] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:19aa:3c5d:f8dd:ef4d)
[07:45:11] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[07:45:26] *** Quits: sreve (~quassel@p549d7115.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[07:45:52] *** Joins: sreve (~quassel@p4ff44c1a.dip0.t-ipconnect.de)
[07:46:40] *** Joins: fluter (~fluter@user/fluter)
[07:47:28] <Pi-sistance> I was just testing whether the line break could be interperted in a string, and it can. Although it doesnt if I am comparing (with assert) the returned and printed string from a function and the string
[07:47:55] <blei> ^^^^ i dont think so.
[07:48:02] <Pi-sistance> then I guess im (comparing none and the string) with the string
[07:48:04] <blei> list(map(lambda _: {_:a[_]}, b.keys()))
[07:48:04] <Repiphany> Why are you trying to compare a "printed string"
[07:48:19] *** Joins: slimbo (~qooupapn@142.167.143.188)
[07:49:18] *** Quits: slimbo (~qooupapn@142.167.143.188) (Remote host closed the connection)
[07:49:29] *** Quits: fluter (~fluter@user/fluter) (Client Quit)
[07:49:43] *** Quits: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net) (Remote host closed the connection)
[07:49:44] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:49:47] *** Joins: uxemacs (~timothy@2607:fb90:7e83:9e2d::164)
[07:51:13] <Pi-sistance> becasue I didnt think the \n would be interpreted in the string correctly, and was wondeirng if i was being stuoid and there was another reason the code worked. but nvm its all fine, although im surprised if I return print from a function it doesnt == the string
[07:51:38] <Pi-sistance> becasue im still retuning none at the end
[07:51:41] <Pi-sistance> oh
[07:53:03] *** Joins: icy_hot (~icy_hot@211.195.45.72)
[07:54:41] <whatsupdoc> {a:1} - {a}?
[07:55:17] *** Joins: frost (~frost@user/frost)
[07:55:30] *** Joins: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net)
[07:55:38] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[07:57:13] *** Quits: nicoz (nicoz@nicoz.letz.dev) (Quit: Pang timeout)
[07:57:45] <blei> Â dict(a.items() - b.items())
[07:59:00] *** Quits: slisnake0 (~slisnake@103.107.198.142) (Quit: Goodbye)
[08:00:34] *** Joins: davor (~davor@user/davor)
[08:01:01] *** Quits: davor_ (~davor@user/davor) (Ping timeout: 240 seconds)
[08:01:50] <TML> voldial: In
[08:02:11] <TML> voldial: In "obj[i1:i2]", all 3 variables are meant to be interpreted as meta-syntactic variables
[08:02:13] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:dc43:f8e4:4bcf:4e48) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[08:02:44] <TML> obj is some file-like object, i1 is some arbitrary index, and i2 is some other arbitrary index
[08:02:58] <TML> Just like in the immediately previous example of obj[index]
[08:03:08] *** Joins: nicoz (nicoz@nicoz.letz.dev)
[08:03:28] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:dc43:f8e4:4bcf:4e48)
[08:03:28] *** Quits: tomg (~tomg@user/tomg) (Remote host closed the connection)
[08:03:58] *** jdmark2 is now known as jdmark
[08:04:03] <blei> ð
[08:05:21] <TML> voldial: I mean, they also didn't give you the context that obj is some pre-assigned var; not sure why you find that usage of a meta-syntactic variable perfectly acceptable but the other two instances offend your sensibilities :)
[08:05:26] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-5dc1-4b48-b196-5bd1.res6.spectrum.com) (Read error: Connection reset by peer)
[08:07:11] <blei> i like these metasyntactic variables
[08:07:12] *** Joins: tomg (~tomg@user/tomg)
[08:07:14] <blei> ð[ð:ð] = ð£
[08:07:18] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[08:07:19] *** Quits: stockh0lm (~Andreas@p200300d2c72a7400215109cd659aea9d.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[08:07:31] <TML> blei: That's just line noise here
[08:07:35] <voldial> TML: I understand (now), but really, the example would be easier to grok if it was pointed out that i2-i1 must be 3
[08:07:42] <blei> TIL TML == RMS
[08:08:03] <TML> Ouch. That seems a bit unfair.
[08:08:12] <blei> ok ok, you wear shoes to talks.
[08:08:27] <TML> and I don't eat the stuff that falls off my feet, either
[08:08:32] <BrenBarn> voldial: why do you think that i2-i1 must be 3?
[08:08:54] <voldial> BrenBarn: because it's a range getting 3 bytes assinged to it?
[08:08:57] <TML> voldial: No, i2-i1 could be any value
[08:09:23] <TML> voldial: â¦no
[08:09:29] <BrenBarn> do you realize that `b'...'` in that example is also supposed to be a stand-in for "any bytestring here", and not the literal string `"..."
[08:09:36] <TML> voldial: b'...' is intended to indicate "some byte string"
[08:10:23] *** Joins: maxzor (~maxzor@2a01cb04054faa006e6cb702338da597.ipv6.abo.wanadoo.fr)
[08:10:25] *** Quits: tomg (~tomg@user/tomg) (Remote host closed the connection)
[08:10:49] <voldial> BrenBarn: well, that's the rub, that's the specific part, why not just say "_[0:2] = b'..' sets the first two bytes to 0x2E"
[08:11:23] <TML> voldial: Again, it's simply demonstrating the syntax - none of thsoe are supposed to be specific values. The python documentation indicates runnable code in a sort of green background.
[08:11:55] *** Joins: bluedust (~bluedust@81.92.205.24)
[08:12:05] *** Quits: nickorta12 (~nickorta1@174-28-176-216.albq.qwest.net) (Ping timeout: 256 seconds)
[08:12:07] <voldial> TML: ok, I still dont like it :)
[08:12:23] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[08:12:36] <BrenBarn> do you understand what it means to show a template rather than showing a single concrete example?
[08:13:01] <BrenBarn> it's like the difference between saying the pythagorean theorem is a^2+b^2=c^2 and saying 9+16=25
[08:13:12] <voldial> yes, but the template is unecessary when trivial changes make the snippit valid code
[08:13:19] <TML> voldial: Well, I am not trying to convince you to like it, just trying to help you understand it. :)
[08:13:34] <BrenBarn> no, because the template shows the pattern of what you can do, not just one particular thing you can do
[08:13:43] <voldial> it's all good, I get it
[08:14:02] <TML> voldial: The python documentation, by and large, does not include runnable examples in-line; so it's unlikely it will be changed here. :D
[08:14:23] <voldial> BrenBarn: it's easier to inferr the pattern from the exact example "_[0:2] = b'..' sets the first two bytes to 0x2E"
[08:14:42] *** Joins: ACfromTX (~acroft@47-219-46-13.tyrmcmtk01.res.dyn.suddenlink.net)
[08:15:24] *** Quits: bluedust_ (~bluedust@103.165.167.61) (Ping timeout: 240 seconds)
[08:16:40] *** Joins: tomg (~tomg@user/tomg)
[08:17:46] *** Joins: fluter (~fluter@user/fluter)
[08:18:06] <ACfromTX> I am a programmer just getting involved with python, who inherited a fragile ball-of-mud piece of code (about 2.5k lines, almost 6k when I ran it through black) that could use a lot of refactoring. Can anyone recommend or point me at tools that could help me refactor the code to be more stable/reliable? (Thank you in advance!)
[08:18:56] <TML> Can't say I've heard of any kind of machine-assisted refactoring tools for Python
[08:19:03] *** Joins: bluedust_ (~bluedust@103.165.167.61)
[08:19:37] *** Quits: tomg (~tomg@user/tomg) (Remote host closed the connection)
[08:20:15] *** Joins: tomg (~tomg@user/tomg)
[08:20:29] <voldial> ACfromTX: I would start by running it through darker (code formatter) and make sure the tests still run, then go through and type annotate it until all the warnings are gone (which will require code changes). Using mypy to drive manual refactoring is pretty nice imho.
[08:20:59] <blei> ACfromTX you could transpile the code to another language, and then back
[08:21:05] *** Joins: Viewday1157 (~Viewday@user/viewday)
[08:21:43] <ACfromTX> TML, there's a part of me that wants to look into the 'ast' library and do some kind of search for similar sets of sequential lines, but I'm not to the point of trying something like that in python itself.
[08:21:50] <blei> https://github.com/nightblade9/dragon
[08:22:01] * voldial just niticed "black" _is_ darker
[08:22:12] *** Quits: bluedust (~bluedust@81.92.205.24) (Ping timeout: 240 seconds)
[08:22:46] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[08:22:46] *** Viewday1157 is now known as Viewday115
[08:23:38] <ACfromTX> I'll take a look at that, blei , thanks.
[08:24:19] <blei> its not production ready; i didn't spend very much time searching
[08:25:12] <ACfromTX> voldial, Sadly there are no tests-best I can do at the moment is run it against the same input files and see that it generates the same output.
[08:25:44] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 272 seconds)
[08:25:52] <blei> this one might work with Brython https://github.com/PiotrDabkowski/Js2Py
[08:26:53] <blei> Brython is Python (alternate implementation) written in Javascript. since Js2Py is Pure Python it will work with Brython. import Js2Py in Brython, Brython creates Javascript of your module, convert that javascript back to python in Brython
[08:27:28] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[08:27:33] <blei> i'm joking. would be interesting to see the results
[08:28:13] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:29:23] *** Joins: pkapp_ (~pkapp@2601:58c:c500:6900:6ecc:e93b:c08a:1648)
[08:30:12] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:dc43:f8e4:4bcf:4e48) (Ping timeout: 240 seconds)
[08:30:19] *** Joins: slimbo (~qooupapn@142.167.143.188)
[08:31:05] *** Quits: slimbo (~qooupapn@142.167.143.188) (Remote host closed the connection)
[08:32:27] <Pi-sistance> will using curved brackets for the elements for the np.full, zeroes function etc bite me in the ass later?
[08:33:50] *** Joins: masoudd (~masoudd@user/masoudd)
[08:33:56] *** Quits: bluedust_ (~bluedust@103.165.167.61) (Remote host closed the connection)
[08:34:13] <Pi-sistance> ill just use both interchangeably so I can recall both are fine
[08:34:38] <blei> ['good', "idea"]
[08:35:01] <Pi-sistance> ^^
[08:38:50] *** Joins: amogorkon (~amogorkon@port-92-196-27-200.dynamic.as20676.net)
[08:40:45] *** Joins: bluedust (~bluedust@103.165.167.61)
[08:41:23] *** Quits: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com) (Quit: ZNC 1.8.2 - https://znc.in)
[08:41:54] *** Joins: stockh0lm (~Andreas@p200300d2c72a7400215109cd659aea9d.dip0.t-ipconnect.de)
[08:42:22] *** Joins: c4017w_ (~c4017@209.52.68.8)
[08:42:36] *** Quits: agumonke` (~user@88.163.231.79) (Ping timeout: 240 seconds)
[08:42:39] *** Quits: pkapp_ (~pkapp@2601:58c:c500:6900:6ecc:e93b:c08a:1648) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[08:42:57] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[08:43:30] *** Quits: emerent (~quassel@p200300cd570c2187ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[08:43:59] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:6ecc:e93b:c08a:1648)
[08:45:28] *** Joins: emerent (~quassel@p200300cd570c2158ba27ebfffed28a59.dip0.t-ipconnect.de)
[08:45:48] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[08:48:26] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[08:49:33] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[08:50:04] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:51:24] *** Quits: drbeco (~beco@user/beco) (Remote host closed the connection)
[08:52:12] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 240 seconds)
[08:52:21] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[08:54:19] *** Joins: sublim20 (~sublim20@user/sublim20)
[08:54:32] <sublim20> hey all, what would be a good book to learn python from
[08:56:15] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[08:56:45] *** Joins: zebrag (~chris@user/zebrag)
[08:57:09] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 256 seconds)
[08:57:55] <TML> sublim20: There's a link in the topic for "new programmers"
[08:59:06] *** Parts: iflema (~ian@user/iflema) ()
[09:03:00] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[09:03:19] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:04:04] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[09:06:59] <sublim20> k.  thanks
[09:07:25] *** Joins: Guest84 (~Guest84@37.204.132.200)
[09:07:34] *** Parts: Guest84 (~Guest84@37.204.132.200) ()
[09:09:57] *** Quits: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net) (Quit: Client closed)
[09:10:35] *** Joins: f1se4 (~f1se4@213.195.113.45)
[09:10:57] *** Quits: uxemacs (~timothy@2607:fb90:7e83:9e2d::164) (Ping timeout: 240 seconds)
[09:17:07] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[09:19:21] *** Quits: tijuco (~tijuco@user/tijuco) (Quit: Leaving)
[09:22:57] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:6ecc:e93b:c08a:1648) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[09:23:13] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[09:23:22] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 250 seconds)
[09:23:46] *** Quits: junebug (~junebug@2600:1700:3db0:2540:9627:3b93:ddcc:1cfd) (Quit: Leaving)
[09:26:12] *** Henry__ is now known as white2
[09:27:42] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[09:27:44] *** Quits: saribro (~swinnenb@user/swinnenb) (Remote host closed the connection)
[09:30:07] *** Quits: blei (~blei@user/blei) (Quit: Client closed)
[09:30:57] *** Quits: junktext__ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 240 seconds)
[09:34:17] *** Quits: icy_hot (~icy_hot@211.195.45.72) (Ping timeout: 240 seconds)
[09:34:44] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[09:35:53] *** Joins: LiftLeft (~LiftLeft@airstream-nelson-fiber-dhcp-007-17.dsl.airstreamcomm.net)
[09:39:37] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[09:39:50] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[09:42:29] *** Quits: BillyZane (~BillyZane@185.202.221.61) (Ping timeout: 256 seconds)
[09:43:06] *** Joins: c4017w__ (~c4017@209.52.68.8)
[09:43:13] *** Joins: xmszk (~pj@095160199126.leczyca.vectranet.pl)
[09:44:29] *** Joins: c4017 (~c4017@2604:3d08:747f:7c90:85a0:c944:c308:3afa)
[09:45:00] *** Quits: humberto1 (~humbertow@189.236.30.197) (Ping timeout: 240 seconds)
[09:45:12] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[09:46:48] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[09:47:28] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[09:47:37] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:19aa:3c5d:f8dd:ef4d) (Ping timeout: 240 seconds)
[09:48:10] *** Joins: bluedust (~bluedust@103.165.167.61)
[09:51:09] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[09:51:44] *** Joins: humberto1 (~humbertow@189.236.30.197)
[09:52:02] <evidlo> was this function definition valid in a previous python version?  def bezierslopeatt(((bx0,by0),(bx1,by1),(bx2,by2),(bx3,by3)),t):
[09:52:13] <evidlo> I've never seen tuples as arguments like that before
[09:52:23] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:11a9:df51:4d36:5ad9)
[09:52:37] *** Quits: bluedust (~bluedust@103.165.167.61) (Ping timeout: 240 seconds)
[09:52:47] *** Quits: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Quit: Bye)
[09:53:41] <evidlo> https://github.com/jmattsson/eleksmaker-inkscape-extension/blob/master/Eleksmaker.py#L51
[09:54:26] *** Joins: icy_hot (~icy_hot@211.195.45.72)
[09:54:48] <evidlo> huh, I didn't know you could do that in python 2
[09:56:42] *** Joins: escherial2 (~escherial@143.110.239.6)
[09:57:01] <white2> how about py3?
[09:57:54] *** Joins: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[09:58:08] <evidlo> doesn't work
[09:58:28] *** Quits: escherial (~escherial@143.110.239.6) (Ping timeout: 250 seconds)
[09:58:29] *** escherial2 is now known as escherial
[09:58:44] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[09:58:59] *** OPK_ is now known as OPK
[09:59:00] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[10:00:35] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[10:00:45] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[10:04:33] *** Joins: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[10:05:00] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 240 seconds)
[10:07:00] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[10:08:20] *** Quits: weedmic (~weedmic@2a0d:6fc0:2840:200:d5c7:b64a:7be4:b6c7) (Read error: Connection reset by peer)
[10:10:02] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:12:39] *** Joins: weedmic (~weedmic@2a0d:6fc0:2840:200:d5c7:b64a:7be4:b6c7)
[10:13:02] *** Joins: zaquest (~notzaques@5.130.79.72)
[10:14:36] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[10:15:48] *** Quits: humberto1 (~humbertow@189.236.30.197) (Ping timeout: 240 seconds)
[10:17:35] *** Quits: Zeturic (~Orimendix@50.26.218.162) (Quit: Leaving)
[10:18:48] *** Joins: xa0s (~xa0s@mab.sdf.org)
[10:20:26] *** Joins: the_lanetly_052 (~the_lanet@194.135.168.79)
[10:20:57] *** Quits: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Client closed)
[10:21:06] *** Joins: uxemacs (~timothy@2607:fb90:7e83:9e2d::164)
[10:21:18] *** Joins: Viewday1157 (~Viewday@user/viewday)
[10:23:17] *** Quits: Viewday115 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[10:23:18] *** Viewday1157 is now known as Viewday115
[10:25:30] *** Joins: vicfred (~vicfred@user/vicfred)
[10:26:55] *** Quits: mug3n (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 240 seconds)
[10:27:29] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:30:41] *** Joins: mug3n (~mugen@gateway/tor-sasl/mugen)
[10:32:03] *** Joins: lbalhar (~lbalhar@217.11.237.58)
[10:32:10] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[10:33:14] *** Quits: bloody (~bloody@user/bloody) (Quit: okluvyabubye)
[10:33:37] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[10:33:56] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[10:34:56] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 272 seconds)
[10:36:31] *** Joins: thevishy (~Nishant@2405:201:f005:c007:88ef:fc07:ae6e:8552)
[10:38:17] *** Quits: fxhp (~fxhp@d-206-53-88-50.ct.cpe.atlanticbb.net) (Ping timeout: 256 seconds)
[10:41:47] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:1f05:49c3:3805:b874:d1c) (Remote host closed the connection)
[10:43:47] *** Joins: c4017w_ (~c4017@209.52.68.8)
[10:44:27] *** Joins: p-i- (~Ohmu@mx-ll-183.89.32-62.dynamic.3bb.co.th)
[10:46:51] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:47:00] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[10:48:39] *** Joins: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr)
[10:49:07] *** Joins: upsala (~zcb@185.209.196.139)
[10:49:24] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:607c:56a8:5b3a:50a1)
[10:49:49] *** Joins: iomari891 (~iomari891@105.112.138.38)
[10:50:02] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[10:51:20] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[10:52:03] *** Joins: k2ro (~k2ro@p5b175bd7.dip0.t-ipconnect.de)
[10:53:00] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:74b8:afe7:8def:1ca4)
[10:53:14] *** Quits: k2ro (~k2ro@p5b175bd7.dip0.t-ipconnect.de) (Client Quit)
[10:54:58] *** Quits: kickingvegas (~cchoi@c-73-170-198-141.hsd1.ca.comcast.net) (Quit: leaving)
[10:56:43] *** Quits: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[10:57:38] <Jong> I'm trying to remember that tricky area dealing with None.  I vaguely remember something about None value and conditionals and that there's a common mistake in that area
[10:57:59] <Jong> or maybe I'm thinking of empty lists and conditionals?
[10:58:47] <BrenBarn> a bit hard to guess what you mean just based on that
[10:58:47] *** Joins: bluedust (~bluedust@103.165.167.61)
[10:59:38] *** Joins: widp (~user@124.123.105.41)
[10:59:42] <Jong> oh yes I remember it's in my python book. let me get it
[11:00:31] <jinsun_> maybe you're thinking about the difference between `if x:` and `if x is None:`
[11:00:50] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[11:02:23] <jinsun_> eh if not x:
[11:02:23] <jinsun_> and if you really want to check x is None you should use the is None version, the former is True for all falsy values
[11:03:08] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:03:52] *** Joins: fxhp (~fxhp@d-206-53-88-50.ct.cpe.atlanticbb.net)
[11:05:13] *** Quits: hams (~hams@user/hams) (Ping timeout: 256 seconds)
[11:08:06] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.4)
[11:08:30] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[11:10:52] *** Quits: sumi80m (~dos@39.191.202.62.dynamic.cgnat.res.cust.swisscom.ch) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[11:11:17] *** Joins: anshupatia (uid29854@id-29854.helmsley.irccloud.com)
[11:11:45] *** Joins: sumi80m (~dos@39.191.202.62.dynamic.cgnat.res.cust.swisscom.ch)
[11:14:55] <energizer> Jong: people use `is None` instead of `== None`, for unknown reasons
[11:15:30] <amogorkon> because it looks better
[11:15:30] <jinsun_> mainly because pep8 says so and flake8 complains
[11:15:49] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[11:15:56] <energizer> i think people were doing it before pep8
[11:16:20] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[11:16:40] <amogorkon> i dislike the way "is" is hardcoded, but that's the way it is
[11:17:28] <energizer> `is` shouldnt exist, i think
[11:17:42] <energizer> or at most be in sys
[11:17:51] *** Joins: kts (~kts@103.73.237.215)
[11:18:04] <noent> imho it's a code style question. For me reading 'is' prepares me for some kind of special value
[11:18:04] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[11:18:12] <amogorkon> iirc the reason it's hardcoded is because it's needed for bootstrapping
[11:18:26] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[11:19:07] <amogorkon> but i think there could be ways to get around it
[11:19:15] <amogorkon> if one put their minds to it
[11:19:22] <energizer> well its kinda pointless now
[11:19:29] <amogorkon> yeah
[11:19:43] *** Joins: nz (~david@oh.not.bad.aye.yeah.nah.nz)
[11:20:05] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[11:20:30] <nz> am I going insane? Python 3.10.2 repl takes `>>> b'\x12\x34'` and outputs `b'\x124'` - have I misunderstood b''?
[11:20:54] <amogorkon> noent, you're not wrong. is checks the memory address and there are very few reasons where *real* identity is needed
[11:20:55] <deniska> nz: b'\x34' and b'4' are the same thing
[11:21:08] <nz> deniska, oh crikey
[11:21:17] <nz> wow that's not confusing at all :'D
[11:21:26] <nz> so it's an ascii four, not 0x124
[11:21:41] <nz> deniska, tyvm!
[11:23:01] *** Quits: maxzor (~maxzor@2a01cb04054faa006e6cb702338da597.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[11:23:27] <energizer> wait how does that work
[11:24:01] <amogorkon> i mean, if you were to serialize None and passed it to another machine as object, it wouldn't compare true with `is`, which is kind of bad
[11:24:13] *** Joins: dreamon (~dreamon@ppp-88-217-83-128.dynamic.mnet-online.de)
[11:24:14] *** Joins: mkoskar (~mkoskar@user/mkoskar)
[11:25:25] *** Quits: s98259 (s98259@ip129.ip-51-195-238.eu) (Ping timeout: 240 seconds)
[11:25:36] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[11:26:43] <amogorkon> depending on how you deserialize it - if you just eval("None")..
[11:27:29] <energizer> i dont understand b"\x34"
[11:28:13] <nz> 0x34 is ascii for '4'
[11:28:14] *** Joins: manti7 (~manti7@176.10.104.94)
[11:28:34] <nz> So python is mixing \x and ascii/utf8 depending on if a hex code is printable or not
[11:28:37] <energizer> ohhh
[11:28:49] <nz> Yeah... pretty nasty/unhelpful in such a minimal example :D
[11:29:26] <nz> I was suspecting a bug or something since `b'\xde\xad'` stays the same etc. But it makes sense with deniska's keen eye
[11:29:58] <hid3> Greetings everyone. I am writing a Telegram bot which queries API. Currently it has 2 functions - archive and info. I have moved the API URL and Headers to global variable. However, after doing this, each function no longer is properly able to access Headers section (defined as 'global headers' in each function). I believe I have defined it incorrectly. Any hints on how to do that properly? My code is here: https://pastebin.com/LE1GRfm3
[11:30:19] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:31:05] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[11:32:26] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Client Quit)
[11:32:46] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[11:34:27] <widp> Is there a way to "view" a numpy array?
[11:34:36] <widp> with a popup
[11:34:42] <widp> //gui
[11:34:55] <energizer> you could print it
[11:34:57] *** Joins: envex (~envex@cpe-173-91-189-33.neo.res.rr.com)
[11:35:00] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:35:25] <energizer> or open it in excel
[11:35:32] <energizer> or write it on a blackboard
[11:35:36] <widp> don't have excel
[11:35:42] <energizer> or project it on the wall
[11:36:10] <widp> I need a method of something so I could say np_array.view(); and it popsup a gui with the values.
[11:36:34] <widp> seems very useful for debugging..
[11:36:53] *** Quits: icy_hot (~icy_hot@211.195.45.72) (Quit: WeeChat 3.4)
[11:37:04] <energizer> pycharm has it https://blog.jetbrains.com/pycharm/2014/11/third-pycharm-4-eap-numpy-array-viewer-ipython-notebook-improvements-and-more/
[11:37:27] <widp> is that community addition?
[11:37:30] <widp> *edition
[11:37:37] <energizer> no idea
[11:39:47] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[11:41:17] *** Quits: uxemacs (~timothy@2607:fb90:7e83:9e2d::164) (Ping timeout: 240 seconds)
[11:44:02] <bmr> i don't know for sure, but been using pycharm for 5 years at work, advocating it has been pretty hard outside of it since the "community"-edition is pretty.. gimped... i would guess NO, it is not included unless you have a pro-license.
[11:44:26] <bmr> ... since that's their modus operandi
[11:44:29] *** Joins: c4017w__ (~c4017@209.52.68.8)
[11:44:52] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:19aa:3c5d:f8dd:ef4d)
[11:45:05] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[11:45:42] *** Quits: Donitz (~Donitz4@88-115-149-215.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[11:46:35] <energizer> vscode might have a thing for it
[11:46:40] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[11:48:13] <bmr> you know any "serious" python-developer using vscode? :)
[11:48:17] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[11:48:24] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[11:48:27] <bmr> there might be, i dont know...
[11:48:31] *** Joins: arinov_ (~arinov@213.194.126.155)
[11:48:33] <bmr> considering jetbrains hold with pycharm
[11:48:50] <bmr> i tried vscode and their python-plugin, but could as well use vim
[11:49:55] <widp> It seems so useful, wonder why anyone has created one .
[11:50:01] <widp> maybe using tkinter tables
[11:50:02] <jinsun> vscode with python extension is good, but the array and DataFrame viewer that comes with the Jupyter extension really sucks
[11:50:31] <jinsun> spyder has a good one, made with Qt
[11:50:37] *** Joins: pkapp_ (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[11:50:50] <energizer> there's a vscode third party extension for viewing tabular data called 'data preview'
[11:51:23] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:74b8:afe7:8def:1ca4) (Read error: Connection reset by peer)
[11:51:46] <widp> https://docs.spyder-ide.org/current/panes/variableexplorer.html
[11:52:14] <energizer> oh right spyder is like a clone of rstudio
[11:52:26] <energizer> rstudio has a View(x) function
[11:53:23] <jinsun> and the code for the variable explorer widgets https://github.com/spyder-ide/spyder/tree/master/spyder/plugins/variableexplorer/widgets
[11:53:24] <energizer> i set up my emacs like that for a while but it was too much work to make it nice
[11:53:52] <widp> set it up like what?
[11:54:04] <widp> I tried using emacs too, same results as you.
[11:54:20] <energizer> like rstudio, with a data viewer pane and plot pane etc
[11:54:31] <widp> Figured I had gone too deep into the rabbithole when I was trying to make stack traces clickable
[11:56:24] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[11:56:55] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[11:59:24] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Ping timeout: 240 seconds)
[11:59:25] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[12:01:19] *** Quits: boris_ (m-vwhg2g@141.144.246.234) (Remote host closed the connection)
[12:03:31] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Remote host closed the connection)
[12:05:22] *** Quits: nightrid1r (~nr@208.94.235.43) (Quit: leaving)
[12:06:08] *** Quits: saroy (~Sandipan@43.252.250.113) (Ping timeout: 272 seconds)
[12:06:41] *** Quits: tgamblin (~tgamblin@cpe64777de11593-cm64777de11590.cpe.net.cable.rogers.com) (Ping timeout: 256 seconds)
[12:07:42] *** Quits: pkapp_ (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[12:07:58] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[12:08:05] *** Joins: gentooclimax (~gentoocli@63.148.22.93.rev.sfr.net)
[12:08:11] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:d41f:4f35:88d7:55f3)
[12:08:13] *** Joins: boris_ (m-vwhg2g@141.144.246.234)
[12:11:08] *** Quits: willow (~willow@user/willow) (Quit: willow)
[12:11:59] *** Joins: tgamblin (~tgamblin@cpe64777de11593-cm64777de11590.cpe.net.cable.rogers.com)
[12:13:13] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[12:13:42] *** Joins: resmo_ (~resmo@214-52-239-77.dyn.cable.fcom.ch)
[12:13:45] *** Joins: jay-m126 (~jay-m@154.126.169.200)
[12:13:48] *** Quits: cthulchu_ (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 268 seconds)
[12:13:50] *** Joins: jay-m126_ (~jay-m@154.126.169.200)
[12:13:50] *** Joins: jay-m1261 (~jay-m@154.126.169.200)
[12:15:05] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[12:15:55] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[12:16:00] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[12:16:13] *** Quits: resmo (~resmo@2a00:d420:9:8a00:6e40:6a4b:3886:c997) (Ping timeout: 240 seconds)
[12:16:25] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[12:16:34] *** Quits: stockh0lm (~Andreas@p200300d2c72a7400215109cd659aea9d.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[12:17:11] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:d41f:4f35:88d7:55f3) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[12:18:31] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[12:19:28] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[12:19:29] *** Joins: Donitz (~Donitz4@88-115-149-215.elisa-laajakaista.fi)
[12:21:19] *** Joins: Viewday1158 (~Viewday@user/viewday)
[12:21:59] *** Quits: Jck_true (~jcktrue@user/jck-true/x-0200799) (Ping timeout: 256 seconds)
[12:22:36] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[12:22:43] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[12:23:12] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[12:23:13] *** Viewday1158 is now known as Viewday115
[12:23:39] *** Joins: audio (~audio@user/audio)
[12:26:00] <audio> can someone tell me why L56 never gets called? I'm new to asyncio: https://bpa.st/6FIA
[12:26:39] *** Joins: someuser (~user@197.54.66.42)
[12:27:37] *** Joins: socio333 (~socio333@169-0-104-18.ip.afrihost.co.za)
[12:27:38] *** Parts: Lindrian (~Lindrian@about/regex/lindrian) (WeeChat 3.4)
[12:28:56] *** Quits: upsala (~zcb@185.209.196.139) (Ping timeout: 272 seconds)
[12:30:19] *** Joins: upsala (~zcb@185.209.196.134)
[12:31:44] <energizer> audio: missing await
[12:32:00] <energizer> twice
[12:32:42] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[12:33:19] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[12:33:31] *** Joins: bluedust (~bluedust@103.165.167.61)
[12:33:37] *** Quits: jay-m1261 (~jay-m@154.126.169.200) (Ping timeout: 256 seconds)
[12:33:37] *** Quits: jay-m126_ (~jay-m@154.126.169.200) (Ping timeout: 256 seconds)
[12:34:11] *** Quits: jay-m126 (~jay-m@154.126.169.200) (Ping timeout: 256 seconds)
[12:35:10] *** Joins: jay-m126 (~jay-m@154.126.169.74)
[12:35:40] *** gentooclimax is now known as climax
[12:35:45] *** Joins: jay-m126_ (~jay-m@154.126.169.74)
[12:36:01] *** Joins: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[12:36:30] <graingert[m]> <AhmedAmerican> "graingert: am struggling to..." <- Do you have an example?
[12:36:37] *** Quits: kostkon_ (~androirc@2a02:587:a10f:c988:4142:80fd:5bce:d437) (Ping timeout: 268 seconds)
[12:38:31] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[12:38:34] *** Quits: Girl-JJDa (~Girl-JJDa@112.45.55.79) (Quit: Client closed)
[12:39:04] *** Quits: bluedust (~bluedust@103.165.167.61) (Ping timeout: 272 seconds)
[12:40:16] *** Joins: jay-m1261 (~jay-m@154.126.169.74)
[12:40:16] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[12:40:54] *** Joins: rendar (~rendar@user/rendar)
[12:41:43] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[12:41:43] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[12:42:32] <audio> energizer thanks
[12:42:51] <audio> i have `await self.query_model(await self.make_spectrograms(youtube_url))` now
[12:43:23] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[12:43:30] <audio> i thought making this consumer async would stop the whole rest of the site from freezing (for example, if there is more than one person using that portion of the app)
[12:43:42] <audio> energizer unfortunately, it did not. have any tips for me?
[12:44:16] <audio> i'm using websocket (django-channels). the rest of the app doesn't load whenever the consumer is running
[12:44:26] <energizer> i didnt really read the program, just that line
[12:45:03] <energizer> im not up to it atm
[12:45:07] *** Joins: NealRame (~a@89.187.163.193)
[12:45:10] *** Joins: c4017w_ (~c4017@209.52.68.8)
[12:45:18] *** Joins: Jck_true (~jcktrue@user/jck-true/x-0200799)
[12:46:03] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[12:46:16] <audio> energizer :/
[12:46:39] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[12:46:47] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[12:46:55] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[12:47:00] <audio> i think it'd be more of a general question about django-channels than one about my app in particular energizer
[12:47:17] <energizer> #django might help more then
[12:47:18] <audio> i think no matter how i set it up it would be this way
[12:47:56] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:48:14] *** Joins: kosh (~kosh@user/kosh)
[12:48:17] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[12:48:28] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[12:50:03] *** Joins: saroy (~Sandipan@43.252.250.113)
[12:50:19] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 256 seconds)
[12:51:45] *** Quits: lbalhar (~lbalhar@217.11.237.58) (Ping timeout: 256 seconds)
[12:53:01] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[12:53:38] *** Quits: JimmyRustles (Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net) (Ping timeout: 272 seconds)
[12:53:42] *** Joins: Pickchea (~private@user/pickchea)
[12:55:59] *** Quits: Yilo (~Yilo@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 256 seconds)
[12:58:17] *** Quits: the_lanetly_052 (~the_lanet@194.135.168.79) (Ping timeout: 240 seconds)
[12:58:17] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[12:59:05] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[12:59:43] *** Quits: jay-m126_ (~jay-m@154.126.169.74) (Ping timeout: 256 seconds)
[12:59:43] *** Quits: jay-m126 (~jay-m@154.126.169.74) (Ping timeout: 256 seconds)
[12:59:58] *** Quits: jay-m1261 (~jay-m@154.126.169.74) (Ping timeout: 272 seconds)
[13:00:34] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[13:02:12] *** Joins: palasso (~palasso@user/palasso)
[13:03:39] *** Quits: someuser (~user@197.54.66.42) (Ping timeout: 256 seconds)
[13:04:22] *** Quits: \\ (~\0x5c@miaow/nonantedeux) (Ping timeout: 250 seconds)
[13:04:24] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Ping timeout: 272 seconds)
[13:05:15] *** Joins: promey (~Promeys@gateway/tor-sasl/promey)
[13:06:12] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:d41f:4f35:88d7:55f3)
[13:08:28] *** Quits: socio333 (~socio333@169-0-104-18.ip.afrihost.co.za) (Quit: Client closed)
[13:08:58] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[13:09:07] <no_gravity> Hello! In a python functions, do you indent empty lines?
[13:09:28] <megaTherion> uhm, the whole function is a block I'd say
[13:10:47] *** climax is now known as gentooclimax
[13:11:25] <amogorkon> no_gravity, empty lines are ignored, you can indent them as you like
[13:12:33] <no_gravity> amogorkon: It is about consistent coding style in an open source project I started. So far 5 developers joined. The 5th indented some empty lines and I wonder how to go about it.
[13:12:34] *** Quits: pyfisch (~pyfisch@user/pyfisch) (Ping timeout: 260 seconds)
[13:12:34] *** Quits: not (~root@5.2.79.79) (Quit: Lost terminal)
[13:12:57] <amogorkon> no_gravity, run black :)
[13:13:03] <amogorkon> no more discussions
[13:13:26] <no_gravity> amogorkon: Is that a linter?
[13:13:38] <amogorkon> it's a code formatter
[13:13:53] <amogorkon> https://github.com/psf/black
[13:13:56] <no_gravity> amogorkon: I don't see where we could run it.
[13:14:14] <no_gravity> amogorkon: Telling the developers to run it is way too opressive. I for one would never do that.
[13:14:27] <amogorkon> if you use vscode, just use the plugin
[13:14:27] <no_gravity> amogorkon: And running it in a CI pipeline will cause mass confusion.
[13:14:54] <no_gravity> amogorkon: All developers use different coding environments. I for one would not want any software imposed on me.
[13:15:08] <emerent> then enjoy the chaos
[13:15:15] <amogorkon> in my contributions file i state "format your code as you like, i will run black. don't complain"
[13:15:22] <amogorkon> and nobody has since complained
[13:15:47] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:d41f:4f35:88d7:55f3) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[13:16:15] <amogorkon> result: people use tabs or spaces as they see fit (one needs 2 space indents since he's coding on mobile phone)
[13:16:33] <amogorkon> in the end, everything gets painted black, no problem
[13:16:49] <no_gravity> amogorkon: Do commits get squashed *after* black in your workflow or does every commit turn into 2 commits. before and after black?
[13:16:58] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:17:05] *** Joins: \\ (~\0x5c@miaow/nonantedeux)
[13:17:07] *** Joins: Auron (Auron956@user/auron)
[13:17:17] *** Joins: paul424 (~tom@ip-5-172-232-84.multi.internet.cyfrowypolsat.pl)
[13:18:01] <amogorkon> we try to make it so that whatever is pushed to github is black, sometimes it gets mixed, but that's not a huge problem
[13:18:33] <amogorkon> whatever is inside the editor is the dev's thing
[13:18:33] <no_gravity> amogorkon: Do you have a link to a repo where you work like this?
[13:18:56] <amogorkon> https://github.com/amogorkon/justuse
[13:19:56] <no_gravity> I see.
[13:19:56] *** Quits: promey (~Promeys@gateway/tor-sasl/promey) (Remote host closed the connection)
[13:20:20] *** Joins: promey (~Promeys@gateway/tor-sasl/promey)
[13:21:00] <amogorkon> the only question that remains with black from time to time is the line length, which also depends on the monitor size
[13:21:06] *** gentooclimax is now known as climax
[13:21:32] <no_gravity> Is that a GitHub based workflow? What if a dev sends a file that is formatted differently than black does it? When does black kick in?
[13:22:22] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[13:22:23] <p-i-> I have a pandas dataframe with timestamp, side='buy'/'sell' and 'amount' cols
[13:22:45] <p-i-> Is there a way to sum up all rows by "same timestamp and side"?
[13:23:18] <p-i-> e.g. if there are 3 rows matching 1643767322092/'buy' I'd like to sum up their 'amount's.
[13:23:39] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[13:23:50] *** Joins: darksun (~darksun@user/darksun)
[13:24:18] *** Joins: Adoi (~Adoi@user/adoi)
[13:24:25] <jinsun_> df.groupby(["timestamp", "side"]).sum()
[13:24:36] <amogorkon> no_gravity, you can do that, i only warned people that i run black on the code to enforce the formatting, so they followed and set up black on their side.. don't have a dedicated workflow for that, but it's possible
[13:25:20] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:11a9:df51:4d36:5ad9) (Quit: pvergain)
[13:25:28] <no_gravity> amogorkon: I see. So you would create an additional commit when you restyle the code via black?
[13:25:39] <amogorkon> probably, yeah
[13:25:39] <jinsun_> no_gravity: even if you don't use black, indenting blank lines is a no no in most styles
[13:25:53] <no_gravity> jinsun_: That's why I am removing them now.
[13:26:18] <jinsun_> and black would remove those too
[13:26:46] <no_gravity> jinsun_: Not in this case. Because it is a shell script that holds python code in a string.
[13:28:15] <amogorkon> if it's a large string, you could have an extra .py file and open that as str
[13:28:49] <no_gravity> amogorkon: Not in this repo because the concept of the repo is to have a single shell script that sets up a web application for each web framework.
[13:29:05] <no_gravity> amogorkon: https://github.com/no-gravity/web_app_from_scratch
[13:29:54] <amogorkon> nice idea
[13:30:13] *** Joins: not (~lfs@5.2.79.79)
[13:30:25] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[13:31:25] <amogorkon> hmm.. you could actually generate this
[13:31:47] *** Joins: jay-m126 (~jay-m@154.126.169.200)
[13:31:56] <amogorkon> you could have python files, then programmatically insert the code into the bash script
[13:32:11] *** Joins: jay-m126_ (~jay-m@154.126.169.200)
[13:32:27] <amogorkon> benefit would be to have IDE support and people could copy the files directly
[13:32:38] <no_gravity> amogorkon: The focus of this project is to make the scripts as readable as possible.
[13:32:53] <no_gravity> The scripts are intended to be executable tutorials so to say.
[13:33:00] <amogorkon> the end result would still be the same script
[13:33:04] <no_gravity> So it is ok to fine-tune them manually.
[13:33:16] *** barometz_ is now known as barometz
[13:33:18] *** Joins: magga (magga@ti0036a400-3577.bb.online.no)
[13:33:46] <no_gravity> Yes, that would be possible. But so far, working on the scripts directly has not been much of an issue.
[13:34:02] *** Quits: strugee (~strugee@2602:ffc5:200:4900::1) (Ping timeout: 260 seconds)
[13:34:08] <amogorkon> ok
[13:34:37] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[13:34:48] <not> isnt python very readable by default?
[13:34:50] <p-i-> Thanks jinsun_!
[13:35:21] <no_gravity> not: The idea of the repo is to not only feature the Python part. But also how to set up the OS, the web server, the database etc.
[13:35:32] <not> OHH
[13:35:38] <amogorkon> not> isnt python very readable by default? <- must balance many small files vs. one monolithic workflow
[13:35:42] <not> not only python ey
[13:35:47] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[13:35:58] <not> ye my old python2 project is hideous
[13:36:02] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:d41f:4f35:88d7:55f3)
[13:36:07] <not> need to port it to python3
[13:36:30] <not> no_gravity: wich project is this?
[13:36:57] *** Joins: jay-m1261 (~jay-m@154.126.169.200)
[13:37:23] <no_gravity> not: https://github.com/no-gravity/web_app_from_scratch
[13:37:30] <not> OH
[13:37:48] <not> thats actually something i need rn
[13:37:57] <no_gravity> Cool. Slowly a pretty cool gang of developers is assembling to build this. New members are welcome!
[13:38:20] <not> teaching my music teacher programming
[13:38:35] <no_gravity> Wisdom swap!
[13:38:51] <not> ye we gonna make a sort of synthesizer program
[13:39:21] <not> gonna code the core of the mixer in assembly and show him some C and do like the note-sheets as python
[13:39:37] <not> cuz im like gonna show him how diffrent languages are all like
[13:39:41] *** Quits: upsala (~zcb@185.209.196.134) (Quit: WeeChat 3.4)
[13:40:06] <not> and i always stress that if you wanna do coding RIGHT you need to understand assembly and atleast the stack and return adresses
[13:40:09] <not> and registers
[13:40:11] <no_gravity> I see. Do you need the full performance, or could you also do it in the browser?
[13:40:44] <not> well most of it except the part where the blobs of Waw gets mixed can be done in browser ye
[13:41:09] <not> but like notes and like stuff can be very easily done in python
[13:41:12] <not> and on the web aswell
[13:41:17] <no_gravity> How much would doing it in JS slow it down? By a factor of 2 or 4 or 10?
[13:41:34] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[13:41:45] <not> idk wouldnt even matter that much cuz only like "C A H not"
[13:41:50] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Client Quit)
[13:41:53] <no_gravity> I'm always amazed how fast my in-browser js can crunch data. But I have not tried assembler in a long time.
[13:41:59] <not> would be done
[13:42:16] <not> havent really used assembly for more than a sound mixer for the gba
[13:42:31] <not> cuz the c compiler when i did that stuff wasnt optimized for ARM back in those days
[13:42:45] <no_gravity> How does assembly even work in this time and age, where everyone has a different CPU?
[13:42:51] <not> so you HAD to write it in asm to meet the timing requirements of the dma
[13:42:59] <no_gravity> What if you use opcodes that are not available on the users CPU?
[13:43:02] <not> no_gravity: boot loaders and shellcode mostly
[13:43:41] *** Joins: greedom (~greedom@p200300de67381f00e5c229855169c8ac.dip0.t-ipconnect.de)
[13:43:42] <no_gravity> not: Doesn't every new CPU have new features? What if you use those and the user has an older CPU?
[13:44:01] <not> well u never really write assembly
[13:44:13] <not> but you need to know how C compiles into assembly
[13:44:15] * no_gravity realizes he does not know how binary executables work in 2022.
[13:44:16] *** Quits: kts (~kts@103.73.237.215) (Quit: Konversation terminated!)
[13:44:38] <megaTherion> ^that and many asm stuff is these days supported among CPUs... but there are some breaking changes
[13:44:46] <no_gravity> Independent of how it was created, how can a binary work across different CPUs?
[13:44:46] <not> otherwise you can make HUGE mistakes in C
[13:44:59] <megaTherion> no_gravity: ABI
[13:45:02] <not> no_gravity: well backwards compatibility mostly
[13:45:09] <no_gravity> How does the compiler know which CPU features will be available by the user who executes the binary?
[13:45:16] <not> but you cant just copy an exe from windows and run it on arm out of thin air
[13:45:17] <megaTherion> no_gravity: it doesnt
[13:45:26] <not> no_gravity: compiler-flags
[13:45:36] <not> and compilers optimized to take advantage of those cpu features
[13:45:41] <not> mostly kernel stuff i guess
[13:45:45] *** Joins: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de)
[13:45:53] *** Joins: c4017w__ (~c4017@209.52.68.8)
[13:46:27] <not> but unless you tell gcc to compile for this and this and this feature you just get basic x86
[13:46:29] <megaTherion> no_gravity: there have been breaking changes where you couldnt run applications on older CPUs, including with Windows - but it doesnt happen that often
[13:46:43] <no_gravity> megaTherion: Interesting.
[13:46:53] <megaTherion> like I think dont know, what was it Windows 8 was requiring some avx or so and that wouldnt run on a Pentium 4 from like a decade before
[13:47:13] <not> ahh
[13:47:14] <megaTherion> but it doesnt happen super often... most stuff doesnt require special SIMD abilities, just some stuff like encryption, multimedia (video/audio)
[13:47:21] <not> ye
[13:47:53] <not> ull never really see the new features unless you custom compile all your packages wich im planning on doing today
[13:48:48] <not> but ye im gonna demonstrate to him the perils of leaving buffer overflow bugs when you write C
[13:49:06] <not> cuz he was like talking on the phone about a loan with his lawyer once
[13:49:15] <not> and i ask him how much u owe wich bank?
[13:49:15] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:d41f:4f35:88d7:55f3) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[13:49:19] <not> 10k dollar
[13:49:25] <not> and i say ill see what i can do
[13:49:33] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[13:49:34] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 256 seconds)
[13:49:53] <not> went home drunk and didnt do shit myself but the nsa owe me a favour cuz i stopped a terrorist attack once
[13:50:29] <not> come back to him day after and he had talked to the lawyer and the lawyer said "well i talked to the bank and the ... the records of the loans are gone"
[13:50:32] *** climax is now known as gentooclimax
[13:50:32] <not> "its gone"
[13:50:40] <not> "ANNND ITS GONE"
[13:50:46] *** Quits: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52) (Ping timeout: 245 seconds)
[13:51:06] <not> and he said "well it was closer to 300k dollars i didnt wanna tell u how deep in i was"
[13:51:40] <not> but ye if you dont understand assembly and blindly write C for something like a bank ur money isnt safe
[13:52:04] <not> C doesnt protect the programmer from writing out of bounds to an array
[13:52:06] *** Joins: brabrax (~brabrax@user/brabrax)
[13:52:29] *** Joins: thiras (~thiras@user/thiras)
[13:52:35] <not> you can declare an array and do this: char array[1024]; array[1056] = 'a'
[13:52:58] <not> and the compiler might give you a warning but it is completely legitimate C but you are writing stuff to memory that isnt declared in an array
[13:53:14] *** Quits: greedom (~greedom@p200300de67381f00e5c229855169c8ac.dip0.t-ipconnect.de) (Remote host closed the connection)
[13:53:28] <not> but if you do like this: "void copyTextFromNetworkedInput(char *text){
[13:53:37] *** Quits: fluter (~fluter@user/fluter) (Read error: Connection reset by peer)
[13:53:41] *** Joins: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52)
[13:53:56] *** Joins: fluter (~fluter@user/fluter)
[13:53:57] *** Joins: greedom (~greedom@p200300de67381f00e5c229855169c8ac.dip0.t-ipconnect.de)
[13:54:08] *** Joins: marcello42 (~mp@p200300dfaf10fe015baf6eed7f4ef68f.dip0.t-ipconnect.de)
[13:54:12] *** Quits: jay-m126_ (~jay-m@154.126.169.200) (Ping timeout: 240 seconds)
[13:54:24] <not> char array[1024]; int i = 0; while(text[i] != '\0'){arrray[i] = text[i];i++;}
[13:54:32] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[13:54:39] <not> ur code is at the mercy of the *text string not being more than 1024
[13:55:04] *** Quits: jay-m126 (~jay-m@154.126.169.200) (Ping timeout: 272 seconds)
[13:55:14] <not> but if that text string comes from example this irc chat here and you can just write a way longer text string than 1024 you can trick the program into overwriting memory
[13:55:48] *** Quits: jay-m1261 (~jay-m@154.126.169.200) (Ping timeout: 256 seconds)
[13:55:57] *** Joins: jay-m126 (~jay-m@154.126.169.74)
[13:56:18] *** Joins: jay-m126_ (~jay-m@154.126.169.74)
[13:56:41] <not> and right next to the array[1024] is the stored return address, an adress wich tells the cpu where to continue code after the function is over, so iv you overwrite that to point to the start of array[] and fill array with machine code to download a virus and execute it
[13:56:47] <not> ur screwed
[13:57:21] *** Joins: jay-m1261 (~jay-m@154.126.169.74)
[13:57:34] *** Quits: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52) (Max SendQ exceeded)
[13:57:48] <not> i remmember my high school programming teacher told me she wtore c for a banking system and she got a sigsegv but she corrected that sigsegv just by adding a filler variable and im like "OMG U DID THIS IN A BANK? WICH BANK $_$"
[13:57:58] *** Joins: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52)
[13:58:41] <not> wich is why im gonna teach him early on that C is a dangerous language to program in if you dont know assembly
[13:58:42] *** Quits: audio (~audio@user/audio) (Quit: Client closed)
[13:58:42] *** Joins: millido (~millido@84.210.150.128)
[13:58:48] <not> or udnerstand how a stack works etc
[13:59:18] <not> python automatically does all the bounds checking wich is why if i ever do anything network related i ALWAYS use python wherever i can
[13:59:22] <nedbat> C is dangerous even if you do know those things
[13:59:28] <not> YES'
[13:59:39] <not> extremely
[13:59:56] <not> C is like "i wouldnt go into the mines of moria unless there was no other way"
[14:00:02] <parv> re stack, Show the puzzle Tower of Hanoi
[14:00:10] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Read error: Connection reset by peer)
[14:01:09] <not> so python, as long as CPYthon itself doesnt have those bugs and im sure there is one thats overlooked
[14:01:17] <parv> Sorry about the odd capitalization; added "re stack" after writing "Show ..."
[14:01:50] <not> you are not in danger of putting stack overflows triggered by networked data
[14:01:55] * parv needs to see Tower of Hanoi himself ð
[14:02:05] <not> but still there are vulnerabilities in any language
[14:02:21] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[14:02:22] <megaTherion> for some situations C is just the right language, but not for all :D
[14:02:31] <not> like i think the old input() in python2 was like if you wrote a number in input() it would return a number
[14:02:32] <megaTherion> in embedded its good to use
[14:02:40] <not> megaTherion: oh yeah i LOVE c
[14:02:55] <not> but if you wanna play it safe when it comes to security you have to be paranoid
[14:02:56] <megaTherion> was programming HCS12/S12X many years
[14:03:03] <not> oooh whats HCS12?
[14:03:09] <not> i love embedded programming
[14:03:21] <megaTherion> m68k based architecture, quite old already
[14:03:32] <megaTherion> but still in use for many things - though not really for hobbiysts
[14:03:33] <not> oh prolly before i was born
[14:03:40] <megaTherion> automotive, industrial etc.
[14:03:47] <megaTherion> very reliable
[14:03:48] <not> ahh ye
[14:04:12] <not> a friend of mine from my old irc saw russian car hackers from his bedroom window once
[14:04:41] <not> but ye remember ATM's and shit are embedded systems and they are mostly written in C mostly
[14:05:48] <bmr> megaTherion: damn lies
[14:05:51] <not> megaTherion: well im considering taking up car mechanics
[14:05:56] <megaTherion> bmr: ?
[14:05:58] <bmr> we are many amiga-owners
[14:06:16] <megaTherion> dunno about Amiga so much :D
[14:06:24] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[14:06:31] <bmr> A500 m68000
[14:06:37] <bmr> A1200 mc68030
[14:06:42] <megaTherion> yes but the m68k was really in a lot of devices... very famous cpu
[14:06:53] <bmr> A4000 mc68060/40
[14:06:58] <megaTherion> but indeed I had an Amiga back then... dont remember so much about it, never were a big amiga user
[14:07:07] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 256 seconds)
[14:07:25] <not> lol reason i started coding C was when i started 8th grade it was competely new class
[14:07:26] <bmr> A3000 mc68030
[14:07:42] <not> i was like the only one from my class who went to that middle school from my elementary
[14:08:00] <megaTherion> bmr: there is still an amiga community around I guess
[14:08:01] <not> then when introducing ourselves this kid named daniel was like what u do for fun
[14:08:11] <not> and im like oh i program in visual basic etc
[14:08:29] <not> and he goes all apeshit saying he programs in C and that he writes operating systems and he hacks shit
[14:08:34] <not> and we were 12
[14:09:09] <not> and he tells me this story about how he hacked a tv station once and that he had fought over the video tape with a mouse cursor with this other hacker who had hacked the tv station at the same time
[14:09:16] <not> like obv i didnt belive him on that point
[14:09:17] <not> but
[14:09:30] <not> years later i saw 1995 hackers then i saww that scene
[14:09:48] <megaTherion> hehe back then like everyone was a hacker - systems were so simple
[14:09:49] <not> he lied about hacking and told me some stuff he saw in a movie
[14:09:51] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[14:09:52] <megaTherion> almost trivial
[14:09:52] *** Joins: nomic (~nomic@85.203.36.100)
[14:09:54] <not> ye
[14:10:19] <not> i got in at the last time when hacking was easy, in windows xp
[14:10:44] <not> but stuff got ASLR and the NX bit soon thereafter
[14:10:45] <megaTherion> I remember when people were starting with trojans, sub7 and all that stuff in win95 era
[14:11:03] <not> ahh i was a little too young and didnt hae that many friends with same intrests
[14:11:03] <megaTherion> and everyone was directly connected to the internet with a modem ... you got owned sooo fast
[14:11:12] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Read error: Connection reset by peer)
[14:11:22] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[14:11:23] <not> OH
[14:11:31] <not> megaTherion: i have a hacker in my pc
[14:11:43] <not> my stationary at home and he is PRO
[14:11:44] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[14:11:48] <not> he hides from my wireshark
[14:11:56] <megaTherion> you mean over wifi?
[14:11:59] <not> but i just sensed i gotten hacked
[14:12:11] <not> megaTherion: nah exploit in world of warcraft wotlk client
[14:12:14] <not> most likely
[14:12:22] <not> it was definately a gaming rival
[14:12:29] *** Joins: yhsiveht (~Nishant@49.37.242.151)
[14:12:36] <not> and the wotlk client is the most likely way he got in
[14:13:08] <not> cuz i drew a picture in paint that only someone gaming wow with me would understand
[14:13:11] <not> and went out
[14:13:15] *** Quits: bionade24 (~bionade24@2a03:4000:33:45b::1) (Remote host closed the connection)
[14:13:16] <not> came back the picture had been replaced
[14:13:24] *** Quits: thevishy (~Nishant@2405:201:f005:c007:88ef:fc07:ae6e:8552) (Ping timeout: 240 seconds)
[14:13:41] <not> but ye im planning on going in deep and digging out his rootkit
[14:13:48] <not> and use it for my own gain MUHAHAHAHA
[14:15:45] <taeaad> Eh how do I create a new empty file _and_ overwrite if there is already a file?
[14:15:51] *** Joins: bionade24 (~bionade24@2a03:4000:33:45b::1)
[14:16:03] <megaTherion> not: esp8266 is also nice for hobbyism, most people use arduino - but you can program in plain C if you want
[14:16:08] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[14:16:11] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 245 seconds)
[14:16:22] <not> megaTherion: ahhh nice i never liked the custom c like language of arduino
[14:16:30] <taeaad> open('my_file.txt', 'w').close() ?
[14:16:41] <not> megaTherion: wait isnt esp8266 the one ben eater uses?
[14:16:42] *** Quits: saroy (~Sandipan@43.252.250.113) (Read error: Connection reset by peer)
[14:16:52] *** Quits: yhsiveht (~Nishant@49.37.242.151) (Client Quit)
[14:16:58] <megaTherion> not sure who that is ;)
[14:17:08] *** Joins: thevishy (~Nishant@2405:201:f005:c007:dd5:8563:45cc:6966)
[14:17:10] <not> a youtuber who makes an 8 bit breadboard computer
[14:17:22] <megaTherion> can be but the esp8266 is an 32bit micro with wifi
[14:17:22] <nedbat> taeaad: that will do it
[14:17:32] *** Joins: pro_z_ (~pro_z@37.214.35.129)
[14:17:43] <megaTherion> Xtensa arch, basically already deprecated coz everyone goes to RISC-V but its still good for stuff
[14:17:48] <taeaad> nedbat: Thanks, for a moment I thought that it would only overwrite once I write something to it.
[14:18:08] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[14:18:49] <not> well
[14:19:02] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 240 seconds)
[14:19:11] <not> im trying to write my first x86 kernel and bootloader atm
[14:19:28] *** Joins: pkapp_ (~pkapp@2601:58c:c500:6900:d41f:4f35:88d7:55f3)
[14:19:30] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Read error: Connection reset by peer)
[14:19:55] *** Quits: raym (~raym@user/raym) (Quit: kernel update, rebooting...)
[14:20:18] *** Joins: dvx (~dvx@5.181.92.64)
[14:20:36] <megaTherion> not if you get the time, maybe worth while - there is a lot on osdev, I never focused on x86 assembly... but for learning purpose its quite good I guess
[14:21:59] <not> ye well im gonna use it to maybe write a hypervisor or something(planning on finding my gaming rivals rootkit)
[14:22:11] *** Joins: Viewday1156 (~Viewday@user/viewday)
[14:22:42] <not> oh time for my nap
[14:22:46] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[14:22:46] *** Viewday1156 is now known as Viewday115
[14:23:26] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[14:24:01] <gitesh> I don't know python concepts used in django, so am i go ahead learn django or go back learn full python first like all concepts?
[14:24:11] <gitesh> Some i mean
[14:24:13] *** Joins: raym (~raym@user/raym)
[14:24:23] <p-i-> I'm trying to filter a pd.dataframe: sells = chunk[chunk['is_market_sell'] == True] but getting KeyError
[14:24:27] <p-i-> https://pasteboard.co/R4jSwKtDts4p.png
[14:24:33] <p-i-> What am I doing wrong?
[14:24:57] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Ping timeout: 240 seconds)
[14:25:02] *** Joins: tomasfarias1 (~tomasfari@user/tomasfarias)
[14:25:39] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[14:25:42] <gitesh> p-i-: is your key Boolean?
[14:26:03] *** Joins: agumonke` (~user@88.163.231.79)
[14:27:31] *** Quits: tomasfarias (~tomasfari@user/tomasfarias) (Ping timeout: 256 seconds)
[14:27:32] *** tomasfarias1 is now known as tomasfarias
[14:27:48] <p-i-> fumbling hard with pandas
[14:27:50] *** Joins: tolot (~tolot@dslb-088-064-152-098.088.064.pools.vodafone-ip.de)
[14:28:05] <p-i-> not sure how to check
[14:28:37] <p-i-> I do notice that the is_market_sell label is not aligned with the other column labels
[14:28:45] <jinsun> p-i-: from that error, looks like chunk doesn't have a 'is_market_sell' column
[14:28:56] *** Quits: tolot (~tolot@dslb-088-064-152-098.088.064.pools.vodafone-ip.de) (Client Quit)
[14:29:09] <p-i-> I did chunk = chunk.groupby(['timestamp', 'is_market_sell']).sum()
[14:29:19] <p-i-> Somehow that's damaged the cols structure, it seems
[14:29:32] <jinsun> if you see it, but it doesn't look aligned then it probably has spaces
[14:30:02] <jinsun> groupby sum will not do it,it would have been wrong from before
[14:30:39] <p-i-> chunk.columns = ['tradeid', 'price', 'quantity', 'vol', 'timestamp', 'is_market_sell']
[14:30:51] <p-i-> That's before the groupby operation
[14:31:02] <jinsun> ah okay you grouped by the is_market_sell column
[14:31:11] <p-i-> I think it's using timestamp+is_market_sell to create some kind of compound index
[14:31:32] <jinsun> if you groupby, then those column are removed and they become the index of the result
[14:32:02] <p-i-> Can I split them back out again?
[14:32:12] *** Quits: arinov_ (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[14:32:21] <jinsun> you can .reset_index if you want to get them back as columns and have 0-n index
[14:32:26] *** Joins: PJBoy (~PJBoy@user/pjboy)
[14:32:32] <p-i-> awesome!
[14:34:48] *** Quits: pkapp_ (~pkapp@2601:58c:c500:6900:d41f:4f35:88d7:55f3) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[14:35:40] *** Joins: Nutcrawler (~sergio@217-180-232-30.sycmilaa.metronetinc.net)
[14:36:42] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[14:37:41] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[14:39:28] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[14:39:47] <mickey> i have texts = pd.read_csv("nb.csv", header=0) and then texts.head() show the df fine, but for text in texts only returns the headers of the 2 columns in that file
[14:40:49] *** Joins: tga (~tga@p54a75da2.dip0.t-ipconnect.de)
[14:40:50] *** Quits: tga (~tga@p54a75da2.dip0.t-ipconnect.de) (Changing host)
[14:40:50] *** Joins: tga (~tga@user/tga)
[14:41:16] *** Joins: karlnashville (~karl@2601:482:4280:4cf0:fcd9:dcb7:2188:1348)
[14:42:44] *** Quits: rje (~textual@50.35.241.164) (Remote host closed the connection)
[14:43:02] <mickey> nvm i think i got it
[14:43:10] *** Joins: rje (~textual@65.141.156.170)
[14:43:58] <mickey> i didn't :(
[14:44:13] *** Quits: agumonke` (~user@88.163.231.79) (Remote host closed the connection)
[14:44:48] <mickey> ok i did :)
[14:45:18] *** Joins: agumonkey (~user@88.163.231.79)
[14:46:07] *** Joins: JimmyRustles (Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net)
[14:46:08] *** Joins: c4017w_ (~c4017@209.52.68.8)
[14:46:09] <not> i ordered a pizza
[14:46:15] <not> jesus christ i wanna eat pizza
[14:46:45] *** Joins: wib_jonas (~wib_jonas@cst2-26-227.cust.vodafone.cz)
[14:47:05] *** Joins: arinov (~arinov@178.240.182.179)
[14:47:41] <not> any of you guys americans?
[14:48:31] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:19aa:3c5d:f8dd:ef4d) (Ping timeout: 256 seconds)
[14:49:37] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[14:49:47] *** Joins: upsala (~zcb@185.209.196.134)
[14:50:18] <nedbat> not: many people here are.  we try to stay on-topic though.
[14:51:23] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[14:51:30] *** Joins: zuplex (~zuplex@202.51.76.51)
[14:51:36] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[14:51:42] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[14:53:46] *** Quits: zuplex (~zuplex@202.51.76.51) (Remote host closed the connection)
[14:53:57] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[14:54:11] *** Joins: zuplex (~zuplex@202.51.76.51)
[14:55:12] *** Quits: paul424 (~tom@ip-5-172-232-84.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[14:55:22] *** Joins: rsx (~dummy@ppp-188-174-152-27.dynamic.mnet-online.de)
[14:55:42] *** Quits: marcello42 (~mp@p200300dfaf10fe015baf6eed7f4ef68f.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[14:56:34] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[14:57:08] *** Quits: dreamon (~dreamon@ppp-88-217-83-128.dynamic.mnet-online.de) (Ping timeout: 272 seconds)
[14:58:25] *** Quits: zuplex (~zuplex@202.51.76.51) (Remote host closed the connection)
[14:58:38] <p-i-> :)
[14:58:57] *** Quits: samuelb (~samuelber@nata01.lip.pt) (Ping timeout: 256 seconds)
[14:59:07] <p-i-> Supposing I wish to animate a sequence of matplotlib plot()s. What's a good way to do it?
[14:59:28] <p-i-> I could savefig each figure and then combine the images using a CLI tool
[15:01:27] *** Quits: arinov (~arinov@178.240.182.179) (Quit: Konversation terminated!)
[15:01:27] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[15:01:41] *** Joins: arinov (~arinov@178.240.182.179)
[15:03:34] *** Quits: tejr (~tejr@user/tejr) (Quit: rebooting)
[15:03:43] *** Joins: audio (~audio@user/audio)
[15:03:50] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[15:03:56] <jinsun> p-i-: matplotlib has matplotlib.animation for that, see https://matplotlib.org/stable/api/animation_api.html and https://matplotlib.org/stable/gallery/index.html#animation
[15:04:06] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:d41f:4f35:88d7:55f3)
[15:05:47] <Payam> Hi, is there a async alternative to selenium?
[15:05:48] <audio> energizer hey
[15:05:52] <audio> i have a new error
[15:05:55] *** Quits: ymwm (~yingmanwu@27.153.164.187) (Remote host closed the connection)
[15:06:04] *** Quits: arinov (~arinov@178.240.182.179) (Ping timeout: 256 seconds)
[15:06:15] <taeaad> How can I append multple a list of rows to a dataframe? According to the Pandas documentation it's faster to "append those rows to a list and then concatenate" instead of concatenating one by one.
[15:06:59] <audio> error: https://bpa.st/KHVA#1L33 | code: https://bpa.st/FECA | What's wrong with my code?
[15:07:06] *** Joins: tomasfarias6 (~tomasfari@user/tomasfarias)
[15:07:09] <jinsun> taeaad: that's right, use pd.concat(list_of_rows)
[15:08:20] <taeaad> jinsun: Would it be something like [['a','b'],['c','d']]? For rows 'a','b' and 'c','d'.
[15:08:54] <Payam> graingert, do you know if selenium supports asyncio ?
[15:09:00] *** Quits: tomasfarias (~tomasfari@user/tomasfarias) (Ping timeout: 240 seconds)
[15:09:00] *** tomasfarias6 is now known as tomasfarias
[15:09:10] <audio> jinsun can you help me?
[15:09:16] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:8c97:f397:35c4:afc4)
[15:09:40] <Payam> audio, is it a faulty json response?
[15:09:49] <Payam> seems like the json thingy is wrong
[15:09:57] <jinsun> taeaad: if you have a list of lists, then you can just make a new DataFrame out of it by doing pd.DataFrame(list_of_lists), pd.concat is for combining multiple dataframes and series objects
[15:10:03] <audio> json thingy?
[15:10:09] *** Joins: ymwm (~yingmanwu@27.153.164.187)
[15:10:20] <taeaad> jinsun: Alright.
[15:10:25] *** Joins: tejr (~tejr@user/tejr)
[15:10:32] <audio> i'm passing a function to an rq task
[15:10:42] <Payam> ah. then sorry. I don't know
[15:11:01] <audio> ok
[15:11:03] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[15:11:06] <audio> jinsun can you help?
[15:11:34] *** Joins: Pickchea (~private@user/pickchea)
[15:12:00] *** Joins: Guest3952 (~vit@chello085216193138.chello.sk)
[15:12:05] <jinsun> audio: no, I never used rq or websockets or django, so no idea what's going on there
[15:12:12] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Read error: Connection reset by peer)
[15:12:13] <audio> darn
[15:13:36] <audio> well rq is super simple. it's like a lightweight celery. and rq is where the code is giving an error. rq stands for redis queue jinsun
[15:13:53] <audio> django and websocket knowledge is probably not necessary
[15:14:05] <p-i-> I'm getting odd behaviour with ax.bar(X, Y) in matplotlib.
[15:14:27] <graingert[m]> <Payam> "graingert, do you know if..." <- There's arsenic and pyppeteer and playwright
[15:14:37] <p-i-> I've got 128 values, and I just want a bar for each value, but the result is not coming out right
[15:14:48] <Payam> graingert[m], you have used them? Which one do you recommend?
[15:15:32] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[15:15:54] <p-i-> https://pasteboard.co/7JptmPlqWhSD.png
[15:16:14] <p-i-> The bars seem to be overlapping each other somehow
[15:16:47] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[15:17:09] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[15:17:15] <taeaad> jinsun: Thanks, I think this basic approach makes sense for most use cases, actually.
[15:17:49] <taeaad> Pandas is pretty slow in general, even for things not related to concat, such as reading in large CSV files.
[15:17:55] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:18:01] <jinsun> audio: if I have to guess from the error message, you are inherinig from WebsocketConsumer which initialized some socket object probably, which cannot be enqueued in the rq Queue because sockets cannot be serialized
[15:18:06] *** Joins: Klinda (~superleag@user/klinda)
[15:18:07] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Client Quit)
[15:18:36] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[15:18:44] <p-i-> ok gottit, looks like I needed to supply an integer for my x values
[15:18:56] <audio> jinsun that was my first thought as well, but Prediction doesn't inherit anything
[15:19:06] <audio> as you can see in the code
[15:19:15] <jinsun> yes but ProgressConsumer does
[15:19:21] *** Quits: xmszk (~pj@095160199126.leczyca.vectranet.pl) (Ping timeout: 256 seconds)
[15:19:41] <jinsun> and that is the self parameter in the start_prediction function that you give to enqueue
[15:20:31] <audio> oh wow
[15:21:49] <audio> jinsun i only set it up like that cause it looks like rq can only process functions as tasks
[15:21:56] *** Joins: DaNeenjah (~jake@adsl-74-230-8-132.hsv.bellsouth.net)
[15:22:29] <audio> i'm guessing I could put `start_prediction` outside of either class, but i really am trying to use OOP these days jinsun
[15:23:08] *** Seto_Kaiba is now known as Hunterkll
[15:23:36] <jinsun> yeah you would have to move it outside of ProgressConsumer probably
[15:24:08] *** Joins: millido (~millido@84.210.150.128)
[15:24:31] <jinsun> and provide the arguments with functools.partial if enqueue doesn't provide a way to provide args and kwargs
[15:25:39] <p-i-> How can I y-center an ax.bar(X,Y) on 0 with a yrange +1000 to -1000?
[15:25:47] <p-i-> I can't find it in the doc https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.bar.html
[15:25:50] *** Joins: edd_lc (~edd_lc@85.65.219.112.dynamic.barak-online.net)
[15:26:09] <audio> jinsun thankfully they do
[15:26:17] <p-i-> I found a related SO post: https://stackoverflow.com/questions/11216319/automatically-setting-y-axis-limits-for-bar-graph-using-matplotlib
[15:26:35] <p-i-> but I have multiple axes, and I can't see how to apply ylim on an axis
[15:27:00] <audio> the freenode->libera migrate really did a number on most channels
[15:27:01] *** Quits: Guest3952 (~vit@chello085216193138.chello.sk) (Ping timeout: 256 seconds)
[15:27:15] <audio> #pydata used to be the place for pandas/numpy/matplotlib questions
[15:27:23] <audio> well, eh, it was kinda dead before too
[15:27:30] <audio> #python is prob the best place
[15:27:39] *** Joins: Guest3952 (~vit@chello085216193138.chello.sk)
[15:28:09] <audio> p-i- i'll check it out, but i can't guarantee i can help you. i've only used matplotlib sometimes
[15:28:10] <p-i-> axes[i].ylim([-1000,+1000]) gives AttributeError: 'AxesSubplot' object has no attribute 'ylim'
[15:28:21] <Repiphany> ax.set_ylim(-1000, 1000)
[15:28:49] <p-i-> Thanks!
[15:30:06] <not> hy
[15:31:00] *** Quits: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr) (Ping timeout: 256 seconds)
[15:31:16] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:34:31] *** Joins: thoht (~nico@host.213.3.23.62.rev.coltfrance.com)
[15:34:37] *** Quits: Masklin_Gurder (~joel@bioinf-serv.biol.lu.se) (Ping timeout: 240 seconds)
[15:35:09] <thoht> hi. i'm running piOS 11 (debian 11) on a rpi4, with python 3.9 (from package), and when trying to create a venv, it is stuck forever : https://pastebin.com/xGXeBmEn
[15:35:17] <thoht> any clue is welcome
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:24] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[15:36:31] *** Joins: flea (nosoul@gateway/vpn/protonvpn/nosoul)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:01] *** Quits: domicron (~domicron@gateway/tor-sasl/domicron) (Remote host closed the connection)
[15:37:05] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[15:37:44] *** Joins: domicron (~domicron@gateway/tor-sasl/domicron)
[15:38:37] *** Quits: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr) (Remote host closed the connection)
[15:39:09] *** Joins: fef (~thedawn@user/thedawn)
[15:40:56] *** Joins: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr)
[15:42:06] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Ping timeout: 272 seconds)
[15:42:38] <Timvde> thoht: Where exactly is it stuck? Also, iiuc, python -m venv /path/to/venv is the "modern" way of creating virtualenvs (but I actually don't know if there are practical differences in the end result)
[15:43:16] *** Quits: gentooclimax (~gentoocli@63.148.22.93.rev.sfr.net) (Quit: Konversation terminated!)
[15:43:53] <Timvde> But it's at least built-in, no extra package needed
[15:43:57] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[15:46:49] *** Joins: c4017w__ (~c4017@209.52.68.8)
[15:46:53] *** Joins: Maxc4m (~Maxc4m@94.158.4.25)
[15:47:14] *** Joins: zuplex (~zuplex@202.51.76.51)
[15:49:10] *** Joins: tolot (~tolot@dslb-088-064-152-098.088.064.pools.vodafone-ip.de)
[15:50:58] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[15:52:44] *** Joins: Everything (~Everythin@37.115.210.35)
[15:55:02] *** Joins: ub (~Thunderbi@p548c8d84.dip0.t-ipconnect.de)
[15:55:17] *** Quits: ubert (~Thunderbi@p200300ecdf3be9b909e125961b02a69e.dip0.t-ipconnect.de) (Remote host closed the connection)
[15:55:17] *** ub is now known as ubert
[15:56:10] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[15:56:41] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[15:56:53] *** Joins: rvalue (~rvalue@user/rvalue)
[15:57:32] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[15:57:56] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 272 seconds)
[15:59:48] *** Joins: dreamon (~dreamon@pd9503c39.dip0.t-ipconnect.de)
[16:02:08] *** Joins: sawk (~quassel@151.81.118.116)
[16:02:49] *** Quits: Maxc4m (~Maxc4m@94.158.4.25) (Quit: Maxc4m)
[16:03:06] *** Joins: Maxc4m (~Maxc4m@94.158.4.25)
[16:03:49] *** Quits: flea (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 268 seconds)
[16:04:01] *** Quits: Maxc4m (~Maxc4m@94.158.4.25) (Client Quit)
[16:04:18] *** Joins: Maxc4m (~Maxc4m@94.158.4.25)
[16:04:32] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:07:33] *** Joins: cruncher (~cruncher@79.116.74.92)
[16:07:58] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[16:08:57] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[16:09:56] <gcbirzan> The virtualenv was created just fine, if find has a problem reading that, you might want to check the storage.
[16:10:36] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Ping timeout: 272 seconds)
[16:10:37] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[16:13:05] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[16:14:11] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[16:14:31] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[16:14:45] *** Joins: Xardas (~Xardas@149.233.51.127)
[16:14:45] <Xardas> Hi
[16:14:51] <Xardas> Hi.
[16:15:34] <Xardas> Any hint on how to know if a certain function is a member function or free standing ?
[16:15:35] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-dcb7-5040-30ea-af1b.res6.spectrum.com) (Quit: jarthur)
[16:15:43] <Xardas> I don't want to remember them
[16:16:17] <Xardas> using len() on a list for example I have to remember always that it's not a member function
[16:16:29] <nedbat> Xardas: it will come with practice
[16:16:43] *** Quits: zln (~zln@c83-249-48-11.bredband.tele2.se) (Quit: WeeChat 3.4)
[16:17:46] <Xardas> Alright then. Thank you.
[16:18:41] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 245 seconds)
[16:18:56] *** Parts: thoht (~nico@host.213.3.23.62.rev.coltfrance.com) (WeeChat 3.1)
[16:20:18] *** Joins: Roey (~Roey@user/Roey)
[16:21:10] *** Joins: Viewday1155 (~Viewday@user/viewday)
[16:21:53] *** Joins: Barones (~Barones@user/Barones)
[16:22:20] *** Joins: kostkon_ (~androirc@athedsl-393845.home.otenet.gr)
[16:22:39] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[16:22:39] *** Viewday1155 is now known as Viewday115
[16:22:40] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c) (Remote host closed the connection)
[16:23:00] *** Quits: upsala (~zcb@185.209.196.134) (Quit: WeeChat 3.4)
[16:24:12] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c)
[16:24:32] *** Quits: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[16:24:34] *** Joins: drbeco (~beco@user/beco)
[16:24:49] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 256 seconds)
[16:25:01] *** Quits: weedmic (~weedmic@2a0d:6fc0:2840:200:d5c7:b64a:7be4:b6c7) (Read error: Connection reset by peer)
[16:25:15] <bookworm> Xardas: use an IDE with code completion and then your editor tells you the arguments and the methods/properties of objects based on the current position
[16:26:36] *** Quits: vancz (~vancz@user/vancz) (Ping timeout: 240 seconds)
[16:27:07] *** Quits: pie_ (~pie_bnc@user/pie/x-2818909) (Ping timeout: 256 seconds)
[16:27:14] <Xardas> bookworm, a good idea thank you.
[16:29:04] *** Joins: pie_ (~pie_bnc@user/pie/x-2818909)
[16:29:05] *** Joins: vancz (~vancz@user/vancz)
[16:29:05] *** Joins: weedmic (~weedmic@2a0d:6fc0:2840:200:d5c7:b64a:7be4:b6c7)
[16:29:34] *** Joins: tmm88 (~tmm88@user/tmm88)
[16:30:04] *** Joins: securethemews_ (~securethe@2a00:23c4:1e85:6b00:8187:e255:5019:96c3)
[16:32:47] *** Joins: yhsiveht (~Nishant@49.37.242.151)
[16:33:48] *** Joins: ymwm_ (~yingmanwu@27.153.164.97)
[16:35:49] *** Joins: bluedust (~bluedust@103.165.167.61)
[16:35:50] *** Joins: marcello42 (~mp@p200300dfaf10fe015baf6eed7f4ef68f.dip0.t-ipconnect.de)
[16:36:07] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[16:36:09] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Remote host closed the connection)
[16:36:16] *** Quits: thevishy (~Nishant@2405:201:f005:c007:dd5:8563:45cc:6966) (Ping timeout: 250 seconds)
[16:36:34] *** Quits: ymwm (~yingmanwu@27.153.164.187) (Ping timeout: 272 seconds)
[16:36:47] *** Joins: s33ker (~s33ker@89-212-68-200.dynamic.t-2.net)
[16:37:36] <s33ker> hi guys i have truble importing csv file this is the error i get Error tokenizing data. C error: Expected 9 fields in line 389367, saw 10Â Â  (now i dont want to skip this line but ignore the 10th column) how do i do that ?
[16:37:51] *** Quits: pie_ (~pie_bnc@user/pie/x-2818909) (Ping timeout: 256 seconds)
[16:37:52] *** Quits: vancz (~vancz@user/vancz) (Ping timeout: 256 seconds)
[16:38:04] *** Quits: noteness (~noteness@user/noteness) (Remote host closed the connection)
[16:38:26] *** Joins: noteness (~noteness@user/noteness)
[16:39:18] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:40:06] *** Joins: sobkas (~sobkas@95.175.17.217)
[16:40:41] *** Joins: kosh (~kosh@user/kosh)
[16:40:43] *** Quits: bluedust (~bluedust@103.165.167.61) (Ping timeout: 256 seconds)
[16:41:16] *** Joins: pie_ (~pie_bnc@user/pie/x-2818909)
[16:41:17] *** Joins: xaltsc (~xaltsc@user/xaltsc)
[16:41:18] *** Joins: vancz (~vancz@user/vancz)
[16:41:55] *** Joins: aslicedbanjo (~aslicedba@host86-168-244-58.range86-168.btcentralplus.com)
[16:42:03] *** Joins: SlaveGeek334269 (~root@li2114-242.members.linode.com)
[16:42:35] *** Parts: SlaveGeek334269 (~root@li2114-242.members.linode.com) ()
[16:43:02] <jinsun> you can add a comma at the end of line 389367, so that you have 10 columns instead of 9
[16:43:45] *** Joins: Iolo (~iolo@dsl-tkubng22-58c02b-220.dhcp.inet.fi)
[16:44:05] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[16:44:16] <s33ker> i mean i i can do that manualy but i think i have multiple rows that have 10 columns instead of 9....it would be nice if i could only include data where headers exist
[16:45:15] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:b132:2f52:96b9:fde2)
[16:47:06] *** Joins: c4017w_ (~c4017@209.52.68.8)
[16:48:02] <jinsun> DictReader in csv module can handle missing columns I think, use that to read it, and then use it to write to another file, that would fix the commas I guess
[16:48:53] *** Quits: widp (~user@124.123.105.41) (Read error: Connection reset by peer)
[16:49:58] <jinsun> I mean use DictWriter to write
[16:50:07] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[16:50:34] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[16:50:49] *** Quits: greedom (~greedom@p200300de67381f00e5c229855169c8ac.dip0.t-ipconnect.de) (Remote host closed the connection)
[16:51:46] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 272 seconds)
[16:52:06] *** Quits: marcello42 (~mp@p200300dfaf10fe015baf6eed7f4ef68f.dip0.t-ipconnect.de) (Quit: WeeChat 3.4)
[16:54:06] *** Quits: rsx (~dummy@ppp-188-174-152-27.dynamic.mnet-online.de) (Quit: rsx)
[16:59:14] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[16:59:24] *** Quits: kostkon_ (~androirc@athedsl-393845.home.otenet.gr) (Ping timeout: 240 seconds)
[17:01:12] *** Quits: zuplex (~zuplex@202.51.76.51) (Remote host closed the connection)
[17:02:13] *** Joins: milesrout (ce261f06ff@2604:bf00:561:2000::257)
[17:03:41] *** Joins: Tempesta (~Tempesta@user/tempesta)
[17:04:45] *** Quits: cruncher (~cruncher@79.116.74.92) (Ping timeout: 256 seconds)
[17:04:50] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[17:06:20] *** Quits: tmm88 (~tmm88@user/tmm88) (Ping timeout: 272 seconds)
[17:08:02] *** Joins: tmm88 (~tmm88@bl22-240-102.dsl.telepac.pt)
[17:09:33] *** Joins: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr)
[17:12:08] *** Joins: SlaveGeek334269 (~root@li2114-242.members.linode.com)
[17:12:29] *** Joins: cruncher (~cruncher@79.116.76.92)
[17:12:43] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:13:33] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[17:14:23] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:16:32] *** Quits: Tempesta (~Tempesta@user/tempesta) (Ping timeout: 265 seconds)
[17:17:29] *** Joins: zunk (~zunk@user/zunk)
[17:17:44] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[17:19:28] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[17:20:06] *** Quits: not (~lfs@5.2.79.79) (Quit: Lost terminal)
[17:20:23] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[17:20:52] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[17:22:03] *** Quits: ymwm_ (~yingmanwu@27.153.164.97) (Ping timeout: 256 seconds)
[17:22:21] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[17:23:29] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:1f05:49c3:3805:b874:d1c)
[17:24:04] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 272 seconds)
[17:24:31] *** Joins: swinnenb (~swinnenb@user/swinnenb)
[17:26:15] *** Quits: Maxc4m (~Maxc4m@94.158.4.25) (Quit: Maxc4m)
[17:26:36] *** Quits: p-i- (~Ohmu@mx-ll-183.89.32-62.dynamic.3bb.co.th) (Ping timeout: 272 seconds)
[17:27:37] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[17:28:10] <Eryn83FL_Matrix[> hey guys
[17:28:14] <Eryn83FL_Matrix[> i got a path set to a variable
[17:30:38] <SlaveGeek334269>  /part
[17:30:41] *** Quits: SlaveGeek334269 (~root@li2114-242.members.linode.com) (Quit: leaving)
[17:30:43] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[17:31:49] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:31:57] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 252 seconds)
[17:32:18] *** Quits: frost (~frost@user/frost) (Ping timeout: 272 seconds)
[17:34:17] *** Joins: plastico (~plastico@neomutt/plastico)
[17:34:41] *** Joins: Maxc4m (~Maxc4m@94.158.4.25)
[17:34:52] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[17:35:28] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 272 seconds)
[17:36:23] *** Joins: Tempesta (~Tempesta@user/tempesta)
[17:36:35] *** Quits: Maxc4m (~Maxc4m@94.158.4.25) (Client Quit)
[17:36:52] *** Joins: Maxc4m (~Maxc4m@94.158.4.25)
[17:39:16] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 272 seconds)
[17:39:29] *** Joins: CodePoint (~CodePoint@2600:1700:3070:3790::11)
[17:41:31] *** Joins: han-solo (~han-solo@user/han-solo)
[17:41:48] *** Quits: envex (~envex@cpe-173-91-189-33.neo.res.rr.com) (Ping timeout: 272 seconds)
[17:42:55] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[17:44:27] *** Joins: adeliktas2 (~adeliktas@i59F5F4FC.versanet.de)
[17:45:51] *** Quits: adeliktas (~adeliktas@i59F5F4FC.versanet.de) (Ping timeout: 256 seconds)
[17:45:52] *** adeliktas2 is now known as adeliktas
[17:46:27] *** BlessJah_ is now known as BlessJah
[17:46:38] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:46:40] *** Joins: bluedust (~bluedust@103.165.167.61)
[17:46:41] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[17:47:39] *** Parts: llanhmod (~personnel@user/domhnall/x-2887755) ()
[17:47:48] *** Joins: c4017w__ (~c4017@209.52.68.8)
[17:48:08] *** Joins: Adoi (~Adoi@user/adoi)
[17:48:26] *** Quits: Maxc4m (~Maxc4m@94.158.4.25) (Quit: Maxc4m)
[17:48:35] <Eryn83FL_Matrix[> eh
[17:48:55] <Eryn83FL_Matrix[> well i feel the hardness of learning a new language
[17:50:13] *** Quits: atomicwrites (~atomicwri@user/atomicwrites) (Ping timeout: 240 seconds)
[17:51:13] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[17:51:37] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[17:52:05] *** Quits: LiftLeft (~LiftLeft@airstream-nelson-fiber-dhcp-007-17.dsl.airstreamcomm.net) (Ping timeout: 256 seconds)
[17:52:51] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[17:54:05] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[17:55:44] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 272 seconds)
[17:56:04] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 256 seconds)
[17:57:02] *** Joins: insanity5000 (~insanity5@2607:fb90:ae19:3c5e:3c2c:8091:0:2ed)
[17:57:22] *** Joins: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:d930:15ec:da1f:b8d9)
[17:57:25] *** Quits: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:d930:15ec:da1f:b8d9) (Client Quit)
[17:57:47] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[17:59:27] <nedbat> Eryn83FL_Matrix[: can we help?
[17:59:59] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[18:00:40] *** Joins: bomb-on (~bomb-on@user/bomb-on)
[18:01:13] *** Quits: CodePoint (~CodePoint@2600:1700:3070:3790::11) (Quit: CodePoint)
[18:01:57] *** Quits: tmm88 (~tmm88@bl22-240-102.dsl.telepac.pt) (Ping timeout: 240 seconds)
[18:02:09] *** Quits: boris_ (m-vwhg2g@141.144.246.234) (Remote host closed the connection)
[18:02:30] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 250 seconds)
[18:02:33] *** Quits: audio (~audio@user/audio) (Ping timeout: 256 seconds)
[18:02:37] *** Quits: mwichmann (~mats@209-188-119-117.taosnet.com) (Ping timeout: 240 seconds)
[18:05:15] *** Joins: the_lanetly_052 (~the_lanet@194.135.166.223)
[18:05:42] *** Joins: kostkon_ (~androirc@athedsl-393845.home.otenet.gr)
[18:06:33] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[18:09:23] *** Quits: yhsiveht (~Nishant@49.37.242.151) (Quit: Leaving)
[18:09:40] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[18:10:22] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[18:10:39] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu)
[18:11:22] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[18:12:02] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:12:21] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:54a6:824f:d47f:8624)
[18:12:50] *** Joins: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:c804:37f0:cf8e:6b6a)
[18:13:00] *** Joins: pepper (~pepper@user/pepper)
[18:14:59] *** Joins: theprophet (~theprophe@212.58.102.155)
[18:16:01] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Remote host closed the connection)
[18:16:39] *** Joins: mwichmann (~mats@209-188-119-117.taosnet.com)
[18:16:54] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[18:18:33] *** Quits: sveinse (~sveinse@2a01:799:55e:1000:c23f:d5ff:fe69:c6fb) (Quit: leaving)
[18:18:46] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[18:19:48] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[18:20:09] *** Joins: Pickchea (~private@user/pickchea)
[18:21:01] *** Joins: bluedust_ (~bluedust@185.248.85.25)
[18:21:17] *** Joins: Naan (~naan@user/naan)
[18:21:24] *** Joins: Viewday1158 (~Viewday@user/viewday)
[18:21:24] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[18:21:28] *** Quits: bluedust (~bluedust@103.165.167.61) (Read error: Connection reset by peer)
[18:21:56] *** Quits: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:c804:37f0:cf8e:6b6a) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[18:21:57] *** Joins: bluedust (~bluedust@103.165.167.61)
[18:22:37] *** Quits: insanity5000 (~insanity5@2607:fb90:ae19:3c5e:3c2c:8091:0:2ed) (Ping timeout: 240 seconds)
[18:23:15] *** Quits: Viewday115 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[18:23:16] *** Viewday1158 is now known as Viewday115
[18:23:50] *** Quits: tga (~tga@user/tga) (Ping timeout: 256 seconds)
[18:24:03] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-91ff-82cc-1e7d-4c05.res6.spectrum.com)
[18:24:52] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[18:25:27] *** Joins: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:c804:37f0:cf8e:6b6a)
[18:25:35] *** Quits: promey (~Promeys@gateway/tor-sasl/promey) (Ping timeout: 240 seconds)
[18:25:47] *** Quits: bluedust_ (~bluedust@185.248.85.25) (Ping timeout: 256 seconds)
[18:29:37] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[18:33:04] *** Quits: parv (~quass@user/parv) (Quit: parv)
[18:35:00] *** Joins: jmd (~user@p200300ea5f49c29d2bc07f55da195e5c.dip0.t-ipconnect.de)
[18:36:47] *** Quits: Deknos (~someone@user/menace) (Remote host closed the connection)
[18:36:49] <noarb-> Good morning everyone :) I have an asnyc web server concept I'm struggling with: I'm trying to get a single REST endpoint available at localhost:443/test and also establish a client websocket connection to remote-addr:433/wss from the same process. If I was just adding a websocket endpoint for clients to connect to, seems like most frameworks can handle that. Because serving the HTTP route at /test and the
[18:36:55] <noarb-> outboudn wss are both i/o bound, can they be managed in the same thread? Would this just not be possible using flask or django?
[18:37:21] *** Joins: Deknos (~someone@ppp-93-104-179-71.dynamic.mnet-online.de)
[18:37:25] *** Quits: oilt^ (~oilt@50.224.20.226) (Ping timeout: 256 seconds)
[18:38:18] *** Quits: Deknos (~someone@ppp-93-104-179-71.dynamic.mnet-online.de) (Remote host closed the connection)
[18:38:51] <relipse> What do you guys think of my game?
[18:39:30] <white2> wdym
[18:40:02] <relipse> https://eingame.cc/1
[18:40:51] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:d400:5de4:279e:c12c)
[18:40:51] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:d400:5de4:279e:c12c) (Changing host)
[18:40:51] *** Joins: skapata (~Skapata@user/skapata)
[18:41:23] <jmd> How do I do a sleep() in python?
[18:42:17] <s33ker> hi guys is there a way to get index and value in for loop at once like combining ->Â Â Â  for row in read:Â Â  andÂ Â Â Â Â Â  for i in range(len(read))Â  combining this to one line ?
[18:42:35] <han-solo> `time.sleep(seconds)` # ?
[18:43:06] <han-solo> `for idx,value in enumerate(iterable):..`
[18:43:33] <s33ker> chewbacca thanks you :D
[18:43:59] *** Joins: Barones (~Barones@user/Barones)
[18:45:19] *** Parts: JimmyRustles (Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net) ()
[18:46:33] *** Joins: pragmaticenigma (~pragmatic@user/pragmaticenigma)
[18:47:00] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:b132:2f52:96b9:fde2) (Ping timeout: 240 seconds)
[18:48:03] *** Joins: c4017w_ (~c4017@209.52.68.8)
[18:48:18] <s33ker> one more questions is there more elegant way to write this Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  element = line.strip()
[18:48:19] <s33ker> Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  element = element.replace(",",".")Â  for example can you make string manipulation in one line like a seqence :P  ?
[18:48:31] <s33ker> sequence*
[18:49:12] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[18:49:40] <CoderCharmander> s33ker: of course, element = line.strip().replace(",", ".")
[18:49:48] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 240 seconds)
[18:49:54] <s33ker> aa thanks
[18:49:54] *** Joins: MercilessDeth (~brad@136.49.59.177)
[18:50:18] <noarb-> I think this is close, but it does seem a little crazy: https://stackoverflow.com/questions/57940029
[18:51:37] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[18:52:11] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[18:52:18] <pragmaticenigma> I'm having difficulty understanding a behavior with this class: https://bpa.st/RGMWPTHAL27RK22PHVNTHBQETE  .  When I create a second instance of that class, I somehow receive the items from the first instance of an object created by the same class. Both instances are created without any parameters, so I expect both to be initialized with a empty set in self.__output_providers within the class.
[18:52:44] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:1f05:49c3:3805:b874:d1c) (Remote host closed the connection)
[18:53:47] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[18:53:52] *** Joins: kafka (~kafka@user/kafka)
[18:53:55] <pragmaticenigma> If I explicate create the objects by providing an empty list, the new objects do not share the collections between them
[18:54:28] *** Quits: foobaz2124846 (~foobaz212@152.37.103.80) (Quit: Client closed)
[18:54:41] *** Joins: foobaz2124846 (~foobaz212@152.37.103.80)
[18:54:45] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[18:55:01] <exarkun> pragmaticenigma: https://towardsdatascience.com/python-pitfall-mutable-default-arguments-9385e8265422
[18:55:03] *** Joins: xmszk (~pj@095160199126.leczyca.vectranet.pl)
[18:55:24] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[18:56:28] <pragmaticenigma> Thanks a bunch exarkun. I remember reading something about it awhile back, but couldn't recall it.
[18:57:05] *** Quits: foobaz2124846 (~foobaz212@152.37.103.80) (Client Quit)
[18:57:19] *** Joins: foobaz2124846 (~foobaz212@152.37.103.80)
[18:58:23] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[18:59:12] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:54a6:824f:d47f:8624) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[18:59:47] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 256 seconds)
[19:01:19] *** Joins: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net)
[19:01:49] <jinsun> pragmaticenigma: would be better to accept a Sequence instead of List and create a list from that inside self.__output_providers = list(output_providers), and give a empty tuple () as default value
[19:02:14] <Pi-sistance> theres not much logic I can see for when and when not to include the squared brackets in various numpy functions, seems will have to memorize indicidually
[19:02:21] *** Quits: jay-m126 (~jay-m@154.126.169.74) (Ping timeout: 256 seconds)
[19:02:55] *** Quits: jay-m1261 (~jay-m@154.126.169.74) (Ping timeout: 256 seconds)
[19:02:55] *** Quits: jay-m126_ (~jay-m@154.126.169.74) (Ping timeout: 256 seconds)
[19:04:02] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:5921:4e45:6c19:3dc9)
[19:04:19] <pragmaticenigma> jinsun: that's an interesting suggestion, I will give it a try. Thank you
[19:04:55] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:5921:4e45:6c19:3dc9) (Client Quit)
[19:06:20] <Pi-sistance> oh actually there is a little logic
[19:06:49] <pragmaticenigma> There's always logic in programming :)
[19:07:55] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[19:09:26] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[19:09:45] *** Quits: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:c804:37f0:cf8e:6b6a) (Quit: Textual IRC Client: www.textualapp.com)
[19:10:48] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[19:10:57] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[19:11:02] *** Joins: wisep__ (~rickybob@gateway/vpn/pia/rickybob)
[19:11:04] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[19:11:07] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[19:11:39] *** Joins: Syzygy (~Syzygy@2001:871:265:1cdc:3c68:34fe:80ab:a3c4)
[19:12:28] *** Joins: akk (~akk@75.161.130.204)
[19:13:00] *** Joins: vlado1 (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c)
[19:13:30] *** Quits: vlado1 (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c) (Client Quit)
[19:14:02] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[19:14:28] <Syzygy> I have an xml with several <section> tags. It's possible that section tags are both side by side as well as within each other. Sections can contain <p> tags as well.
[19:14:53] <Syzygy> I want to have all <p> tags within sections, but my current approach gives duplicates.
[19:15:13] *** Parts: xmszk (~pj@095160199126.leczyca.vectranet.pl) (WeeChat 3.4)
[19:15:32] *** Quits: white2 (~mahengrui@user/mahengrui1) (Ping timeout: 272 seconds)
[19:15:39] <Syzygy> currently I do findall sections, then for each section, I find all paragraphs. but this gives paragraphs within those nested sections as well.
[19:15:40] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[19:16:10] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[19:16:45] <Syzygy> I've been thinking of doing recursive searches, until I find no more sections, then parsing the paragraphs, and then remove the element from it's parent. Is there a better way?
[19:16:53] <Syzygy> using lxml btw
[19:17:48] *** Quits: spiderman (spiderman@spiderman.shelltalk.net) (Ping timeout: 240 seconds)
[19:18:19] *** Quits: nomic (~nomic@85.203.36.100) (Quit: Leaving)
[19:18:22] *** Quits: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net) (Quit: Client closed)
[19:18:41] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[19:18:47] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[19:18:55] *** Joins: Collaken (~flo@ip4d17fdd1.dynamic.kabel-deutschland.de)
[19:19:54] *** Joins: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net)
[19:20:43] *** Joins: wyclif (~wyclif@user/wyclif)
[19:21:55] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:d41f:4f35:88d7:55f3) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[19:22:10] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:d850:a28a:db91:bb4b)
[19:25:15] *** Quits: ano (~ano@user/ano) (Ping timeout: 240 seconds)
[19:26:28] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[19:26:29] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:9586:7858:fb57:fe5b)
[19:27:20] <pragmaticenigma> Syzygy: Maybe look for all the <p> tags, and see if they have a parent <section> ?
[19:27:31] *** Joins: ano (~ano@user/ano)
[19:27:48] <Syzygy> it's possible that they are nested deeper within other tags as well.
[19:29:55] <pragmaticenigma> Syzygy: Same would apply, bubble up till you find the desired tag. I haven't worked directly with lxml, so I don't know if it will provide you with a stack of ancestors. But if your target is the <p>, it feels like to me to seek those out, and then determine if the parent or an ancestor is a <section> instead of trying to drill down
[19:32:01] <pragmaticenigma> I had a similar approach when I discovered that HTML form controls can live outside of a <form /> node, but reference it with an attribute. So I opted to seek out form control tags instead, and check who their parent/ancestor was to associate it to the correct collection when I have multiple forms on an HTML document.
[19:32:12] *** Quits: jmd (~user@p200300ea5f49c29d2bc07f55da195e5c.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[19:32:38] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[19:33:14] <pragmaticenigma> BeautifulSoup in that case offers the ability to find a tag, then determine if it had any ancestors that match
[19:33:21] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[19:34:21] *** Quits: tofran (~tofran@bl15-47-228.dsl.telepac.pt) (Ping timeout: 256 seconds)
[19:34:32] *** Joins: tofran (~tofran@bl15-47-228.dsl.telepac.pt)
[19:34:54] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[19:35:10] *** Joins: ymwm_ (~yingmanwu@27.153.164.97)
[19:35:41] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[19:36:17] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 240 seconds)
[19:36:22] *** Quits: magga (magga@ti0036a400-3577.bb.online.no) (Remote host closed the connection)
[19:36:37] *** Joins: magga (magga@ti0036a400-3577.bb.online.no)
[19:36:53] *** Joins: Xardas (~Xardas@149.233.51.127)
[19:37:08] <Syzygy> hmm, I think my recursive approach works for now. thanks
[19:37:11] *** Joins: twobitsprite (~twobitspr@gateway/vpn/pia/twobitsprite)
[19:37:26] *** Joins: velgin (~velgin@pool-96-237-105-119.bstnma.fios.verizon.net)
[19:39:00] *** Quits: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr) (Ping timeout: 252 seconds)
[19:40:01] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[19:41:15] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 240 seconds)
[19:41:23] <cyberjunkie> Let's say, I import another python piece of code, how do i make the imported code, tell me what code imported it?
[19:41:36] <cyberjunkie> So if file1 imports file2, how do i get file2 to tell me, file1 did it?
[19:42:22] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[19:43:28] <gitesh> Where are real python docs on python.org website?
[19:43:32] <gitesh> Not tutorial
[19:43:36] <gitesh> Real docs
[19:43:52] *** Joins: yaraju (~yaraju@user/yaraju)
[19:44:22] <jinsun> cyberjunkie: not possible without hacking import system too much, import doesn't even happen if the same file was already imported before
[19:44:31] <jinsun> gitesh: https://docs.python.org/3/
[19:45:02] *** Quits: wisep__ (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[19:45:05] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[19:45:05] <gitesh> jinsun: where in that link
[19:45:30] <jinsun> that link is the "real docs"
[19:45:35] *** Joins: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr)
[19:45:48] <gitesh> jinsun: i don't want tutorial
[19:46:59] *** Joins: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de)
[19:47:01] <jinsun> okay, I didn't give you tutorial, that link is not the link to the tutorial
[19:48:35] *** Joins: c4017w__ (~c4017@209.52.68.8)
[19:49:06] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[19:49:22] <cyberjunkie> jinsun ah. I thought it'd be easy, something to do with __main__, __name.
[19:49:40] <cyberjunkie> Pardon my dumbassery, only learning, i have a way around it
[19:50:00] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[19:50:12] *** Joins: uxemacs (~timothy@24.96.190.21)
[19:51:13] <jinsun> cyberjunkie: if you are talking about if __name__ == "__main__", that tells you whether the file was run directly as a script instead of being imported from another file
[19:51:33] <jinsun> it cannot tell you which exact file imported it
[19:51:41] <pragmaticenigma> gitesh: that is the documentation, read the whole page to find the topic you're looking for. I'm guessing you want Library Reference or Language Reference. Or you need to be more specific of what you are looking for, rather than what you are not looking for
[19:52:16] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[19:52:58] *** Joins: bitkiller (~bitkiller@user/bitkiller)
[19:53:50] *** Quits: rjwiii (~mr-rich@idlerpg/player/mr-rich) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[19:54:28] *** Joins: tejr (~tejr@user/tejr)
[19:55:34] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[19:56:35] <cyberjunkie> jinsun Ah! I was hoping it would,  i was trying to use os to find the pathname
[19:57:18] <cyberjunkie> I'm trying to build a a piece of code that creates a file name, depending on who calls it, i guess it's better to pass that as an argument
[19:57:20] *** Quits: uxemacs (~timothy@24.96.190.21) (Ping timeout: 272 seconds)
[19:57:29] <cyberjunkie> Thank you, for responding.
[19:59:30] <jinsun> yes better to be explicit than trying to do too much magic stuff
[19:59:54] <cyberjunkie> Got it. I thought it'd smartly figure out, and then pass back that info.
[20:00:09] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[20:01:27] <dba> I have been trying to solve this code challenge for a weed https://bpa.st/NOZA with no success. being able to solve such a challenges is it a god given talent or it is something that can be learned ?
[20:01:41] <dba> week*
[20:02:19] *** Joins: darksun (~darksun@user/darksun)
[20:02:23] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Quit: Leaving)
[20:02:43] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[20:02:55] *** Joins: rjwiii (~mr-rich@idlerpg/player/mr-rich)
[20:03:02] <dba> do they need to be solved using mathematical logic?
[20:04:25] <pragmaticenigma> that's an approach, that's probably the most efficient
[20:04:45] *** Joins: the_lanetly_052_ (~the_lanet@185.30.91.138)
[20:04:54] <jinsun> it can be learned, if you sit and do leetcode puzzles all day (and look at solutions when you get stuck), you will start seeing patterns in how these are solved
[20:05:13] <dba> pragmaticenigma: do you mean the solution is a math formula that just need to be coded?
[20:05:52] <dba> jinsun: what do you mean by leetcode?
[20:05:58] <pragmaticenigma> you are effectively looking for series of distinct permutations of a collection of chars
[20:06:16] <jinsun> dba: it is a website for puzzles like that one
[20:06:18] *** Joins: paul424 (~tom@ip-5-172-234-200.multi.internet.cyfrowypolsat.pl)
[20:06:57] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 256 seconds)
[20:07:00] *** Quits: the_lanetly_052 (~the_lanet@194.135.166.223) (Ping timeout: 240 seconds)
[20:07:18] <dba> Thanks
[20:07:27] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[20:08:05] <jinsun> not much use in doing those though, unless you are preparing for tests that ask those kind of questions
[20:08:06] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[20:08:10] <pragmaticenigma> dba: it's also a well known homework problem, hence my encouragement to keep trying and you'll get it
[20:08:14] *** queue is now known as queue-
[20:08:25] *** Quits: queue- (~nerd@rektnet.com) (Changing host)
[20:08:25] *** Joins: queue- (~nerd@user/queue/x-7267619)
[20:08:29] <dba> pragmaticenigma: Thanks that is a good start
[20:08:55] *** Quits: hexa- (~hexa-@juno.lossy.network) (Quit: WeeChat 3.3)
[20:08:56] *** Quits: pankid (~quassel@pankid.club) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:09:15] *** Joins: akaWolf (~akaWolf@akawolf.org)
[20:09:22] <dba> Jinsun: I am doing them just for fun and trying to improve my solutions design skills
[20:09:27] *** Joins: pankid (~quassel@pankid.club)
[20:10:16] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[20:10:20] *** Joins: hexa- (~hexa-@juno.lossy.network)
[20:10:38] *** Quits: akk (~akk@75.161.130.204) (Quit: +++)
[20:10:59] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[20:11:10] *** Quits: bleb (~cm@user/bleb) (Remote host closed the connection)
[20:11:29] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[20:12:28] *** Joins: akk (~akk@75.161.130.204)
[20:12:32] *** Quits: beowuff (~beowuff@50.35.126.161) (Quit: Leaving)
[20:14:53] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 256 seconds)
[20:15:52] *** Joins: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[20:16:06] *** Joins: beowuff (~beowuff@50.35.126.161)
[20:18:07] *** Joins: p-i- (~Ohmu@mx-ll-183.89.32-62.dynamic.3bb.co.th)
[20:18:14] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[20:18:47] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[20:19:16] <ChrisWarrick> I donât really believe such puzzles help with problem-solving skills
[20:19:44] <ChrisWarrick> Those puzzles are often very far detached from real life and work
[20:19:48] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[20:21:01] <pragmaticenigma> It's designed to get someone to think outside a box in their approaches on problem solving.
[20:21:05] *** Quits: Viewday115 (~Viewday@user/viewday) (Quit: Ping timeout (120 seconds))
[20:21:22] *** Joins: Viewday115 (~Viewday@user/viewday)
[20:22:22] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 260 seconds)
[20:23:01] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[20:23:05] *** Quits: kafka (~kafka@user/kafka) (Quit: WeeChat 3.2)
[20:23:09] <pragmaticenigma> in that the puzzle... don't think about the string of characters, if you do, you will only solve for that string of characters. If you think a bigger scope, you'll find you can make it work for any set of values
[20:23:19] *** Joins: xkuru (~xkuru@user/xkuru)
[20:23:29] *** Joins: velgin_ (~velgin@pool-96-237-105-119.bstnma.fios.verizon.net)
[20:23:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[20:24:21] <grym> dba: puzzle solving is a skill you can learn.  how much knowing that skill is a useful proxy measure for job performance is very much up for debate.
[20:24:55] *** Quits: velgin (~velgin@pool-96-237-105-119.bstnma.fios.verizon.net) (Read error: Connection reset by peer)
[20:25:28] *** Joins: oriba (~oriba@dynamic-077-013-129-008.77.13.pool.telefonica.de)
[20:25:34] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[20:26:26] <grym> (though some people are going to better at that skill than others, most people can improve relative to their past selves, just like most other skills )
[20:31:34] *** Quits: tolot (~tolot@dslb-088-064-152-098.088.064.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[20:34:52] *** Quits: sobkas (~sobkas@95.175.17.217) (Remote host closed the connection)
[20:35:04] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[20:35:18] *** Joins: sobkas (~sobkas@95.175.17.217)
[20:35:20] *** Quits: ymwm_ (~yingmanwu@27.153.164.97) (Ping timeout: 272 seconds)
[20:35:36] *** Joins: darksun (~darksun@user/darksun)
[20:36:51] *** Joins: ircuz (~ircuz@5.2.79.79)
[20:36:59] <ircuz> hai
[20:36:59] *** Quits: weedmic (~weedmic@2a0d:6fc0:2840:200:d5c7:b64a:7be4:b6c7) (Read error: Connection reset by peer)
[20:37:30] <jinsun> dba: here's one way to do that one btw https://bpa.st/ECAQ
[20:37:30] *** Joins: weedmic (~weedmic@2a0d:6fc0:2840:200:d5c7:b64a:7be4:b6c7)
[20:37:33] <dba> grym: yeah and I think it is a good skill to have as pragmaticenigma mention using the mathematical approach is the most efficient one is solving these puzzles because what I have learned working on a few of them is that a solution might work on few cases but not on dozen others. I think being able to make/build something from the get go without worrying after of `what ifs` next is great
[20:38:07] *** Quits: ejjfunky (~ejjfunky2@125.164.19.180) (Remote host closed the connection)
[20:38:38] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:9586:7858:fb57:fe5b) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[20:39:59] <grym> dba: it's a bit like knowing how the SAT writers write their word problems or analogies sections of the exam, right
[20:40:13] <grym> there's "the skill" and then there's the meta-game
[20:40:23] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 256 seconds)
[20:40:24] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[20:40:38] <ircuz> ooh this is interesting i suck at math
[20:40:55] *** Joins: shiroininja (~Shiroinin@c-73-99-87-221.hsd1.va.comcast.net)
[20:41:04] <ircuz> but i started understanding math when i saw how divisions were done in brainfuck
[20:41:57] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[20:42:02] <grym> "math" is a pretty big tent
[20:42:39] <ircuz> ye, but basic arithmetic, i sucked at division but then i saw how u do a division in brainfuck and it all made sense
[20:42:47] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Remote host closed the connection)
[20:43:04] <ircuz> got good grades when we did vector math but all the other people in my class flunked that
[20:43:06] *** Quits: pie_ (~pie_bnc@user/pie/x-2818909) (Quit: pie_)
[20:43:06] *** Quits: vancz (~vancz@user/vancz) (Quit: vancz)
[20:45:25] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:b132:2f52:96b9:fde2)
[20:45:48] <dba> Jinsun: Thank you! I am trying to figure out the logic behind it
[20:48:21] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:607c:56a8:5b3a:50a1) (Ping timeout: 256 seconds)
[20:48:33] *** Joins: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder)
[20:48:52] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[20:48:55] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[20:49:02] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[20:49:20] *** Joins: c4017w_ (~c4017@209.52.68.8)
[20:49:38] *** Quits: amogorkon (~amogorkon@port-92-196-27-200.dynamic.as20676.net) (Changing host)
[20:49:38] *** Joins: amogorkon (~amogorkon@user/amogorkon)
[20:50:19] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:c137:5b23:feaf:eefd)
[20:51:15] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[20:51:18] *** Quits: amogorkon (~amogorkon@user/amogorkon) (Quit: just use()!)
[20:51:23] *** Joins: wyclif (~wyclif@user/wyclif)
[20:51:37] *** Joins: amogorkon (~amogorkon@user/amogorkon)
[20:51:38] *** Joins: hernik (~hernik@user/hernik)
[20:51:59] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Client Quit)
[20:52:16] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:52:54] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[20:53:04] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[20:54:01] *** Joins: wisep__ (~rickybob@gateway/vpn/pia/rickybob)
[20:54:58] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 272 seconds)
[20:55:09] *** Quits: tWqaq (~tWqaq@240e:389:5d1c:ff00:7af4:d067:9364:2057) (Quit: Leaving)
[20:56:57] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[20:58:18] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[20:59:01] *** Joins: cdown_ (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[21:00:40] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[21:01:00] *** Quits: wisep__ (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[21:01:23] *** Joins: wyclif (~wyclif@user/wyclif)
[21:04:28] *** Quits: cdown_ (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Ping timeout: 272 seconds)
[21:05:06] <s33ker> hi guys anyone knows how to fix this error
[21:05:08] <s33ker> _csv.Error: line contains NUL
[21:05:45] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[21:05:48] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[21:05:52] <s33ker> my csv file is so broken tried multiple encodings but there is an error when using every single one of them
[21:06:00] <s33ker> what to do
[21:06:17] *** Quits: hernik (~hernik@user/hernik) (Quit: Leaving)
[21:06:43] <s33ker> even tried to see what encoding it notepad++ detects or using chardet but nothing seem to work
[21:06:50] *** Joins: Yilo (~Yilo@cpe-173-174-25-173.stx.res.rr.com)
[21:06:53] *** Joins: wyclif (~wyclif@user/wyclif)
[21:06:57] <pragmaticenigma> s33ker: check your data source, "NUL" means there is binary data in the file. Likely from corruption or the provider giving you bad data.
[21:06:59] *** Joins: bloody (~bloody@user/bloody)
[21:07:27] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[21:07:36] *** Joins: wisep__ (~rickybob@gateway/vpn/pia/rickybob)
[21:08:42] *** Quits: foobaz2124846 (~foobaz212@152.37.103.80) (Quit: Client closed)
[21:08:43] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[21:08:56] *** Joins: foobaz2124846 (~foobaz212@152.37.103.80)
[21:08:56] <s33ker> well that is the task i actually have to find errors or anomalies in data...what if i throw an exception would that help me determine maybe how much of data i actually lost with this ?
[21:10:36] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[21:10:46] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[21:10:53] *** Quits: paul424 (~tom@ip-5-172-234-200.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[21:11:11] <pragmaticenigma> s33ker: to find this kind of error, you would need to open the file in binary read mode. Then search through the file to find a NULL byte (0x00)
[21:11:19] *** Quits: wib_jonas (~wib_jonas@cst2-26-227.cust.vodafone.cz) (Quit: Client closed)
[21:11:24] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[21:11:38] <Payam> Hi,
[21:11:44] *** Joins: Asgaroth (~Asgaroth@93.107.191.92)
[21:11:53] <Payam> Does any of you run code from vim? or do you use it only for editing?
[21:12:15] <s33ker> that is rb mode correct ?
[21:12:18] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[21:12:22] *** Joins: wyclif (~wyclif@user/wyclif)
[21:12:29] <pragmaticenigma> Payam: I only use it for editing, often have two terminal instances open, or use tmux to split a single terminal
[21:12:44] <Payam> ah
[21:12:45] <Payam> okej
[21:12:49] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[21:12:58] <pragmaticenigma> s33ker: yes, "b" sets the binary mode option
[21:13:14] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Ping timeout: 260 seconds)
[21:13:37] <s33ker> ok i think i can manage the first but idk what to do with null bytes do i just remove them or ?
[21:14:51] *** Joins: _Asgaroth_ (~Asgaroth@93.107.191.92)
[21:14:51] *** Joins: qurls (~user@47.200.190.217)
[21:14:58] *** Quits: wisep__ (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[21:14:59] *** Quits: _Asgaroth_ (~Asgaroth@93.107.191.92) (Remote host closed the connection)
[21:15:30] *** Joins: bleb (~cm@user/bleb)
[21:16:21] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[21:16:30] <pragmaticenigma> s33ker: only you can answer that question. without knowing the nature of the dataset, and what your end goal is, I really can't provide an accurate assessment on what to do.
[21:17:27] *** Joins: arinov (~arinov@178.240.182.179)
[21:17:35] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[21:18:03] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[21:18:18] <Payam> pragmaticenigma, what formatter do you use for vim?
[21:18:32] *** Joins: strugee (~strugee@2602:ffc5:200:4900::1)
[21:18:33] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[21:18:42] *** Joins: wyclif (~wyclif@user/wyclif)
[21:19:15] <pragmaticenigma> Payam: I stopped using vim a long long time ago. I use Visual Studio Code for development, so much easier and faster for me to get my tasks done
[21:19:18] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 260 seconds)
[21:19:28] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[21:19:40] *** Quits: sleepingforest (~sleepingf@pool-96-235-63-235.pitbpa.east.verizon.net) (Ping timeout: 250 seconds)
[21:20:44] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[21:21:06] *** Joins: sleepingforest (~sleepingf@pool-96-235-63-235.pitbpa.east.verizon.net)
[21:21:29] *** Joins: revolve (~u0_a227@82-132-238-53.dab.02.net)
[21:22:35] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[21:23:45] *** Quits: TheCat (~Z-cat@user/z-cat) (Ping timeout: 250 seconds)
[21:24:04] *** Joins: wisep__ (~rickybob@gateway/vpn/pia/rickybob)
[21:24:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[21:24:26] *** Joins: wyclif (~wyclif@user/wyclif)
[21:27:24] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[21:27:28] *** Quits: shiroininja (~Shiroinin@c-73-99-87-221.hsd1.va.comcast.net) (Quit: WeeChat 2.8)
[21:27:53] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[21:27:54] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 272 seconds)
[21:29:38] *** Joins: darksun (~darksun@user/darksun)
[21:31:05] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[21:31:07] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[21:31:42] *** Quits: wisep__ (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 272 seconds)
[21:32:12] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Read error: Connection reset by peer)
[21:33:06] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[21:33:36] *** Joins: magla (~gelignite@55d44f73.access.ecotel.net)
[21:34:52] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 272 seconds)
[21:34:52] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[21:35:28] *** Joins: wyclif (~wyclif@user/wyclif)
[21:36:30] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[21:37:31] *** Joins: wisep__ (~rickybob@gateway/vpn/pia/rickybob)
[21:39:04] <Pi-sistance> so numpys inverse function and solve function will automatically interpret a 1 dimensional array as a column vector, interesting.
[21:39:25] <Pi-sistance> no not inverse, I meant multiplicarion
[21:39:46] *** Joins: pie_ (~pie_bnc@user/pie/x-2818909)
[21:39:46] *** Joins: vancz (~vancz@user/vancz)
[21:39:57] <Pi-sistance> multi and solve. I thought my brain was melting for a second.
[21:40:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[21:40:27] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[21:40:58] *** Joins: wyclif (~wyclif@user/wyclif)
[21:41:02] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[21:44:00] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[21:45:31] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[21:45:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[21:46:28] *** Joins: wyclif (~wyclif@user/wyclif)
[21:46:48] *** Quits: pie_ (~pie_bnc@user/pie/x-2818909) (Quit: pie_)
[21:46:48] *** Quits: vancz (~vancz@user/vancz) (Quit: vancz)
[21:47:50] *** Quits: arinov (~arinov@178.240.182.179) (Ping timeout: 256 seconds)
[21:47:53] *** Joins: vancz (~vancz@user/vancz)
[21:47:53] *** Joins: pie_ (~pie_bnc@user/pie/x-2818909)
[21:48:22] <Payam> how do you if a website has a rest api?
[21:48:33] *** Joins: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[21:48:36] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[21:50:05] *** Joins: c4017w__ (~c4017@209.52.68.8)
[21:50:18] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[21:50:31] *** Joins: rvalue (~rvalue@user/rvalue)
[21:51:00] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[21:51:09] *** Joins: Guest15 (~Guest15@185.239.133.114)
[21:51:09] <nedbat> Payam: if you are asking how to know if a site has an api, you have to be told that it does.
[21:51:17] <nedbat> you can't detect that it does
[21:51:24] <Payam> ah. Then bs4 then
[21:51:59] *** Joins: wyclif (~wyclif@user/wyclif)
[21:52:47] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[21:53:15] *** Quits: Guest15 (~Guest15@185.239.133.114) (Client Quit)
[21:53:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[21:53:35] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[21:54:45] <nedbat> Payam: or read the docs for the site to see what's available
[21:55:12] <Payam> Many site don't have proper documentation.
[21:55:15] <Payam> This one doesn't
[21:55:27] *** Joins: whatsupboy (~whatsupbo@user/scobydoo)
[21:55:46] *** Joins: spiderman (spiderman@spiderman.shelltalk.net)
[21:55:48] *** Joins: Guest15 (~Guest15@185.239.133.114)
[21:56:54] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[21:56:54] *** Quits: wisep__ (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[21:57:29] *** Joins: wyclif (~wyclif@user/wyclif)
[21:58:37] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[21:59:36] *** Joins: NeoCore (~neocore@138.199.47.164)
[22:00:15] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[22:01:15] *** Quits: revolve (~u0_a227@82-132-238-53.dab.02.net) (Read error: Connection reset by peer)
[22:01:18] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[22:01:40] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[22:02:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[22:02:59] *** Joins: wyclif (~wyclif@user/wyclif)
[22:03:02] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[22:05:12] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.4)
[22:05:16] <wyre> hi guys, why python says that object 'Hello' has no attribute 'arg1'? https://bpa.st/D2OQ
[22:05:38] <wyre> I'm passing self to run() so ... I should be able to use self.arg1, shouldn't I?
[22:05:53] <BtbN> wyre, because you typoed it
[22:05:54] <apollo13> wyre: look more closely and see your typo ;)
[22:06:06] <wyre> oh, sure, sorry ð
[22:06:10] <apollo13> awr
[22:06:10] <wyre> thank you guys
[22:06:10] <apollo13> :D
[22:06:11] <koox> What is the best book to learn advanced python3 programming techniques??
[22:06:57] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[22:08:14] *** Joins: wakeup (~wakeup@user/wakeup)
[22:08:29] <wakeup> does it make any difference to use list[int] instead of List[int] as a type int in Python?
[22:08:38] *** Joins: wisep__ (~rickybob@gateway/vpn/pia/rickybob)
[22:09:08] <Guest15> Hi, how to do something like this https://bpa.st/G66A
[22:09:19] <phy1729> The first requires 3.8 or 3.9+ and the latter requires you to from typing import List
[22:09:39] <jinsun> wakeup: yes, use list[int] for 3.9+, List is deprecated
[22:09:45] <wakeup> why?
[22:09:46] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[22:09:50] <wakeup> why deprecated
[22:09:58] <jinsun> because you can do list[int] now
[22:10:00] <phy1729> because there's a builtin replacement
[22:10:02] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[22:10:12] <jinsun> before 3.9 it was not possible so List was needed
[22:10:12] <wakeup> but why is it deprecated
[22:10:16] <wakeup> what's the problem with it
[22:10:28] <jinsun> now it is unnecessary
[22:10:33] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[22:10:43] <wakeup> unnecessary doesn't mean deprecated, i guess
[22:10:49] <phy1729> Unless you need to support prior to 3.9, there's no reason to use it
[22:10:52] <wakeup> it's like f strings and format
[22:10:53] <jinsun> yeah but it is deprecated also
[22:10:56] <wakeup> format is not deprecated
[22:11:06] <wakeup> really?
[22:11:11] <wakeup> it's stated in the docs?
[22:11:23] *** Joins: zzbot (~zbot@68.23.85.99)
[22:11:35] <jinsun> https://docs.python.org/3/library/typing.html#typing.List Deprecated since version 3.9
[22:11:36] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 245 seconds)
[22:11:50] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Client Quit)
[22:12:21] <bjs> wakeup: f-strings can't totally replace .format
[22:12:28] <bjs> but list[...] does entirely replace List[...]
[22:12:29] <jinsun> also format didn't become unnecessaty with f string yeah
[22:12:47] <phy1729> Guest15: I think you should while keybind_is_held(): do_something()
[22:12:58] <wakeup> but why wasn't list initially modified to support list[int] instead of introducing the type hint List?
[22:13:27] *** Joins: sveinse (~sveinse@2a01:799:55e:1000:c23f:d5ff:fe69:c6fb)
[22:13:29] *** Joins: kickingvegas (~cchoi@c-73-170-198-141.hsd1.ca.comcast.net)
[22:13:39] <bjs> wakeup: well for historical reasons. Originally all the typing stuff was an additional thing you could import, so it didn't have any builtin support
[22:13:46] <bjs> and eventually the language has evolved to include more if it directly
[22:13:47] <jinsun> it required implementing a new thing in the language, __class_getitem__
[22:14:10] <bjs> wakeup: because you can't write a .py file to make list[int] work,  they had to actually change the language to do it
[22:14:12] *** coc0nut_ is now known as coc0nut
[22:14:12] <wakeup> but e.g. the built-in "int" was and still is allowed to be used as type hint
[22:14:16] <bjs> Yes
[22:14:19] <bjs> int already existed
[22:14:39] <jinsun> list also worked before, list[int] didn't work
[22:14:58] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Quit: WeeChat 2.8)
[22:15:02] *** Joins: nomic (~nomic@85.203.36.100)
[22:15:08] <wakeup> so now you can also do list[list[list[int]]]?
[22:15:12] <bjs> wakeup: yes
[22:15:21] <sveinse> How do best mock/replace a global variable in a package when pytesting it? How can I get in early enough so when other modules import that var its gets the mocked value?
[22:15:23] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[22:16:51] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[22:17:57] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Client Quit)
[22:18:21] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[22:18:55] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[22:18:57] <wakeup> do you guys always follow Python's new releases or just get to know them when you come across them?
[22:19:16] <bjs> wakeup: this channel might not be the best place to get a representative answer to that
[22:19:27] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[22:19:35] *** Quits: maggotbrain (~maggotbra@c-73-225-163-217.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[22:19:45] <bjs> i think we're more likely to know what's in the new releases than just a random python developer "off the street" so to speak
[22:19:56] *** Quits: wisep__ (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 245 seconds)
[22:20:21] <wakeup> looking at that article, there seems to be a lot of changes
[22:20:22] *** Joins: Betal (~Betal@user/betal)
[22:20:28] <wakeup> I didn't think there were so many changes
[22:20:38] <wakeup> many of them, I guess, will not be relevant to usual developers
[22:20:40] <wakeup> but still
[22:20:42] <bjs> Each Python version adds new things and changes things
[22:20:48] <bjs> It's constantly evolving and updating
[22:20:54] <ircuz> yup
[22:21:02] <wakeup> yes, I guess
[22:21:06] *** Joins: Viewday1156 (~Viewday@user/viewday)
[22:21:14] <ircuz> wakeup: u can ask in python-dev i suppose
[22:21:16] <Peng> I tyr to follow changes when upgrading Python versions (i.e. my OS)
[22:21:21] <Peng> try*
[22:21:35] <bjs> ircuz: ask what exactly
[22:21:44] <ircuz> ive started reading changelogs but i got a printer im starting to get fatigue from staring into screen
[22:21:44] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 272 seconds)
[22:21:44] <wakeup> some changes are indeed useful
[22:21:55] <ircuz> bjs: about the updates in python etc changes
[22:22:10] <jinsun> now each version actually gets less changes than before, because it is yearly release now instead of once in 18 months
[22:22:13] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Textual IRC Client: www.textualapp.com)
[22:22:16] <ircuz> think they replaced the parser
[22:22:32] <bjs> ircuz: yes the parser got replaced with a new PEG parser a couple versions ago
[22:22:36] <ircuz> ye
[22:22:55] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[22:22:56] *** Viewday1156 is now known as Viewday115
[22:22:58] <wakeup> I wish Python supported optional static typing from the beginning, that would be nice for project where I always need to ensure that types are correct... I know I can use some type checking libraray, and I already used it, but I wish I didn't have to go through this
[22:23:05] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[22:23:14] <wakeup> I just think that static typing is more useful than verbose
[22:23:23] * deniska quacks
[22:23:24] *** Joins: tmm88 (~tmm88@bl22-240-102.dsl.telepac.pt)
[22:24:09] <jinsun> ircuz: that enabled pattern matching and parenthesised context managers in 3.10
[22:24:21] <ircuz> jinsun: oh
[22:24:32] <ircuz> ill read up on that once my vision is restored
[22:24:37] <wakeup> I see that many changes are contributed by the community developers
[22:24:40] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[22:24:43] <ircuz> thankfully its night now so i can rest my eyes
[22:24:54] <wakeup> it's nice they give credit
[22:25:06] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 252 seconds)
[22:25:13] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[22:25:43] <ircuz> and being awake in the day and sleeping in the night is KILLING me
[22:26:05] *** Quits: tmm88 (~tmm88@bl22-240-102.dsl.telepac.pt) (Client Quit)
[22:26:35] <ircuz> ahh much much much much better
[22:26:41] <wakeup> btw, for people that have already used virtualenv and docker, which one do you use and for when, in the case of python projects? I know you can combine the two, but docker seems unnecessary unless you have some system dependency, i.e. not a python library that needs to be compiled under hood or something like that or needs some dynamica library
[22:27:13] <wakeup> but docker now seems to be the thing
[22:28:08] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 250 seconds)
[22:28:56] <sveinse> wakeup: They are different things
[22:29:09] <wakeup> yes, I know, of course
[22:29:11] <wakeup> I used both of them
[22:29:39] <wakeup> I'm just wondering what people more experienced than me think of when one should be used than the other
[22:29:57] <sveinse> wakeup: I use virtualenv for everything related to python projects, but use docker when it needs to run a service, especially when distribution is focus.
[22:30:01] <wakeup> for example, you could create a docker container and don't use virtualenv and install the python packages in the global space of the docker container
[22:30:49] *** Quits: anshupatia (uid29854@id-29854.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[22:30:56] <wakeup> sveinse what do you mean by service more specifically?
[22:31:05] <wakeup> do you mean like a web API?
[22:31:25] <deniska> wakeup: most people in my team use venv inside docker ran via docker-compose ran via makefiles
[22:31:27] <sveinse> wakeup: I use docker/venv 50/50. I tend to want to have clean servers, so I prefer to use docker there. But as a general python application I use venvs.
[22:32:17] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[22:32:36] <deniska> wakeup: I use a venv directly on my system, because otherwise the setup we have somehow adds 0.5s to some mundane operations like restarting a program or running a formatter, which really kills my mood :)
[22:32:42] <ircuz> i feel like sleep is dangerous
[22:32:57] *** Joins: fling (~fling@user/fling)
[22:33:05] *** Joins: maggotbrain (~maggotbra@c-73-225-163-217.hsd1.wa.comcast.net)
[22:33:06] *** Quits: cruncher (~cruncher@79.116.76.92) (Quit: Leaving)
[22:33:19] <sveinse> wakeup: service, as in something running permanently like a daemon. Web is one example, but also things related to other networked activities.
[22:33:19] *** Quits: kaivai (~kaivai@user/kaivai) (Quit: ZNC - https://znc.in)
[22:33:47] <sveinse> wakeup: I do not use docker for daily py development and py program invocations
[22:34:39] *** Joins: ThePhilgrim (~ThePhilgr@151.41.9.171)
[22:34:51] *** Joins: bambams (~bambams@user/bambams)
[22:34:54] *** Joins: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[22:35:56] *** Joins: kaivai (~kaivai@user/kaivai)
[22:36:02] *** Quits: bambams (~bambams@user/bambams) (Client Quit)
[22:36:16] *** Joins: bambams (~bambams@user/bambams)
[22:36:52] <sveinse> When I build most docker images, I do venv inside them as well. Mostly in order to be as little affected as possible from py distro choices and the ability to use as much vanilla pypi
[22:38:31] *** Quits: Yilo (~Yilo@cpe-173-174-25-173.stx.res.rr.com) (Ping timeout: 256 seconds)
[22:38:36] *** Joins: dez (uid92154@user/dez)
[22:38:47] *** Joins: jay-m126 (~jay-m@154.72.150.211)
[22:38:52] *** Joins: jay-m126_ (~jay-m@154.72.150.211)
[22:38:53] *** Joins: jay-m1261 (~jay-m@154.72.150.211)
[22:39:13] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[22:39:28] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[22:40:32] *** Quits: Guest3952 (~vit@chello085216193138.chello.sk) (Ping timeout: 256 seconds)
[22:40:39] *** Joins: cthulchu_ (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[22:41:55] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[22:42:26] *** Quits: Guest15 (~Guest15@185.239.133.114) (Quit: Connection closed)
[22:42:27] *** Joins: paul424 (~tom@ip-5-172-235-17.multi.internet.cyfrowypolsat.pl)
[22:42:46] *** Quits: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Quit: Client closed)
[22:42:58] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Quit: rickybob)
[22:44:30] *** Quits: bitkiller (~bitkiller@user/bitkiller) (Ping timeout: 256 seconds)
[22:45:59] *** Joins: Adoi (~Adoi@user/adoi)
[22:46:32] *** Joins: haslo (uid390999@id-390999.uxbridge.irccloud.com)
[22:47:43] *** Quits: haslo (uid390999@id-390999.uxbridge.irccloud.com) (Client Quit)
[22:47:51] *** Joins: bluedust (~bluedust@103.165.167.61)
[22:47:55] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:b132:2f52:96b9:fde2) (Ping timeout: 256 seconds)
[22:50:32] *** Quits: KeiraT (~k@lulzsec.co.uk) (Ping timeout: 240 seconds)
[22:50:49] *** Joins: c4017w_ (~c4017@209.52.68.8)
[22:50:59] *** Joins: Maxc4m (~Maxc4m@94.158.14.214)
[22:52:37] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[22:53:41] *** Joins: haslo (uid390999@id-390999.uxbridge.irccloud.com)
[22:53:57] <llanhmod> overall a generator returns an iterable object, right?
[22:54:08] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[22:54:10] <sveinse> llanhmod: yes
[22:54:14] <llanhmod> sveinse: thank you
[22:54:16] <bjs> llanhmod: yes,  iterable just means "you can loop over it" and you can loop over generators
[22:54:18] <bjs> so they are iterable
[22:54:25] <llanhmod> thanks bjs
[22:54:40] *** Quits: Payam (~Payam@c83-250-236-236.bredband.tele2.se) (Ping timeout: 272 seconds)
[22:54:43] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[22:54:57] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[22:57:03] *** Joins: aphysically (~aphysical@user/aphysically)
[22:58:21] *** Joins: runelind_ (~runelind@user/runelind)
[22:58:39] *** Quits: runelind (~runelind@user/runelind) (Ping timeout: 250 seconds)
[22:58:51] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[22:59:03] *** Joins: thiras (~thiras@user/thiras)
[23:00:03] *** Joins: flea (nosoul@gateway/vpn/protonvpn/nosoul)
[23:00:03] *** Quits: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net) (Ping timeout: 256 seconds)
[23:04:37] *** Joins: Guest3952 (~vit@chello085216193138.chello.sk)
[23:05:26] *** Quits: pro_z_ (~pro_z@37.214.35.129) (Ping timeout: 272 seconds)
[23:06:29] *** mcleuder_ is now known as mcleuder
[23:07:32] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[23:07:59] *** Joins: pkapp_ (~pkapp@2601:58c:c500:6900:d850:a28a:db91:bb4b)
[23:09:00] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:d850:a28a:db91:bb4b) (Ping timeout: 240 seconds)
[23:09:36] *** Quits: koox (~dev@213.133.91.246) (Quit: Leaving)
[23:09:47] <haslo> Hello, can anyone here using linux mint let me know if python3.7 is available on the default, official repositories somehow? `apt-get install python3` gave python3.6. Googling around has not helped (articles suggest third-party PPAs and compiling).
[23:12:03] <pragmaticenigma> haslo: I would not recommend changing the default version of python. Linux Mint, Ubuntu, Debian all use python for many of the system adminstrative tasks like package management (apt) and other functions. Upgrading could break the system
[23:12:52] <deniska> haslo: if there's no version of python you want in a distro, a nice tool to install one is `pyenv`
[23:12:53] *** Joins: ivii (~ivan@user/ivii)
[23:14:32] <InPhase> haslo: I think it should be 3.8 unless you're running a very old version of Mint.
[23:15:18] <ircuz> you can install another version and put it in /usr/local/bin
[23:15:25] <InPhase> haslo: Given the broader advantages of upgrading, you might benefit from just updating Mint itself.
[23:15:47] <ircuz> yes i bought a new debian server for that exact reason few days ago
[23:17:21] *** Quits: Jenna16bit (~j16bit@c-73-228-39-16.hsd1.nm.comcast.net) (Ping timeout: 256 seconds)
[23:17:28] *** Quits: Iolo (~iolo@dsl-tkubng22-58c02b-220.dhcp.inet.fi) (Quit: Leaving)
[23:17:43] *** Joins: Iolo (~iolo@dsl-tkubng22-58c02b-220.dhcp.inet.fi)
[23:18:23] *** Quits: Iolo (~iolo@dsl-tkubng22-58c02b-220.dhcp.inet.fi) (Changing host)
[23:18:23] *** Joins: Iolo (~iolo@user/Iolo)
[23:19:03] *** Quits: securethemews_ (~securethe@2a00:23c4:1e85:6b00:8187:e255:5019:96c3) (Quit: Leaving)
[23:19:09] <pragmaticenigma> haslo: The others are correct, updating to the latest Linux Mint version will provide you with Python 3.8.10
[23:19:21] *** Joins: securethemews_ (~securethe@2a00:23c4:1e85:6b00:8187:e255:5019:96c3)
[23:20:10] *** Quits: Iolo (~iolo@user/Iolo) (Client Quit)
[23:20:43] *** finstern1s is now known as finsternis
[23:21:04] *** Quits: nomic (~nomic@85.203.36.100) (Quit: Leaving)
[23:21:11] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:8c97:f397:35c4:afc4) (Ping timeout: 245 seconds)
[23:21:22] *** Joins: nomic (~nomic@85.203.36.100)
[23:21:29] *** Joins: andreasbuhr (~quassel@p548dd8d5.dip0.t-ipconnect.de)
[23:21:38] <haslo> pragmaticenigma: ah, much thanks. i'm actually helping someone install a little package i wrote, and theyre on mint 19.2. Im not sure if I should ask them to upgrade their os, so I will look at deniska's suggestion
[23:21:55] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 240 seconds)
[23:22:45] <ircuz> ....
[23:22:49] <ircuz> ops
[23:22:57] <ircuz> wc
[23:23:00] *** Joins: wakeup (~wakeup@user/wakeup)
[23:23:07] <ircuz> hy wakeup
[23:23:42] *** Quits: magga (magga@ti0036a400-3577.bb.online.no) (Remote host closed the connection)
[23:23:57] *** Joins: magga (magga@ti0036a400-3577.bb.online.no)
[23:23:57] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[23:24:00] *** ircuz is now known as not_not
[23:24:02] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[23:24:13] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[23:24:24] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[23:24:25] *** Joins: b0t20220306 (~b0t202203@175.176.70.30)
[23:24:47] <wakeup> hey
[23:25:07] <b0t20220306> -_-
[23:25:09] *** Joins: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder)
[23:25:13] <not_not> hey
[23:25:15] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[23:25:32] <b0t20220306> hey
[23:25:42] *** Quits: wakeup (~wakeup@user/wakeup) (Client Quit)
[23:26:14] <pragmaticenigma> haslo: ah, I see, what feature is being used that isn't compatible with the older version. perhaps there's an alternative option to make the code more compatible with the older version
[23:27:12] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[23:28:22] *** Joins: darksun (~darksun@user/darksun)
[23:28:34] <ChrisWarrick> not_not: (you donât need to buy a new server, you can just upgrade in-place: https://wiki.debian.org/DebianUpgrade )
[23:28:48] <ChrisWarrick> also, I love this line: Interrupting this step after downloading has completed is an excellent way to stress-test your backups
[23:31:23] *** Quits: b0t20220306 (~b0t202203@175.176.70.30) (Quit: Leaving)
[23:31:47] *** Quits: Maxc4m (~Maxc4m@94.158.14.214) (Quit: Maxc4m)
[23:31:48] <not_not> ChrisWarrick: well yeah i can but, this server wich is my old one was FULL, 2. im worried it will break if i upgrade, 3rd i really needed a 3rd location for backup
[23:32:11] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[23:32:24] <not_not> and servers are dirt cheap, 200 dollars for a 2 year lease
[23:32:28] <pragmaticenigma> just put it all in the cloud :P
[23:32:32] <pragmaticenigma> everyone else is
[23:32:37] * pragmaticenigma waits for rain storm
[23:33:00] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 240 seconds)
[23:33:09] <not_not> yeah but im no sheep
[23:34:02] <not_not> everyone else does it is never a valid reason for me to do shit
[23:34:19] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[23:34:40] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[23:35:21] *** Joins: Pickchea (~private@user/pickchea)
[23:35:24] <not_not> pragmaticenigma: i used to have real cloud shit not like just cloud the buzzword but litteral electron cloud in a paralell universe
[23:35:42] <not_not> the masses dont have that kind of clouds now do they ;)
[23:36:00] <theseb> in backprop, weights are updated for EACH sample yes?  So there doesn't seem to be any *batches* in backprop?
[23:36:12] <theseb> (I'm doing python ML)
[23:36:41] <not_not> pragmaticenigma: but i needed another server cuz this one has full disks
[23:36:51] <not_not> theseb: whats ml?
[23:36:59] <pragmaticenigma> machine language I presume
[23:37:00] <SnoopJ> theseb, batching and backpropagation are not mutually exclusive
[23:37:03] <not_not> ahh
[23:37:04] <SnoopJ> not_not, machine learning
[23:37:07] <not_not> cool
[23:37:16] <not_not> i never really got around to tinker with that stuff is it fun?
[23:37:18] <pragmaticenigma> er ya... learning
[23:37:22] <SnoopJ> It can be
[23:37:28] <theseb> not_not: machine learning!...where python dominates!
[23:37:34] <not_not> theseb: ahh yes
[23:37:56] <not_not> python is so natural to code in but making trees in python is somewhat confusing for me since im used to c pointers
[23:38:06] <pragmaticenigma> just watch out for mutable default parameters in function definitions :P
[23:38:23] <theseb> SnoopJ: how does batching work in a neural net model with batch propagation? i'm looking at algorithm and it seems to run thru each sample one at a time
[23:38:24] <not_not> but if i ever tried to actually make a tree in python im sure id succeed
[23:38:51] <KirkMcDo1ald> not_not: The trick in Python is, it's all pointers.
[23:38:55] <not_not> pragmaticenigma: ur teaching a neural net to code in python?
[23:38:59] <theseb> not_not: nested lists? what's the problem?
[23:39:31] <not_not> KirkMcDo1ald: yeah i think i know how python works, u have a pyobject and when you declare a variable a pyobject gets created, and if you say a = 10
[23:39:43] <SnoopJ> theseb, generally your inputs go from tensors of shape (N, M, ...) to tensors of shape (batch_size, N, M, ...) where the first (generally) axis represents the dimension of a single batch
[23:39:45] <not_not> u have a pyobject of type number 10 with 1 refcount
[23:40:04] <not_not> if you say b = a, then b and a are pointers to that 10 object but now it has 2 refcount
[23:40:09] <pragmaticenigma> not_not: no... I wrote a manager for a set of providers. I needed to create a second instance of the manager and found it had inherited all the previous instances' providers
[23:40:28] <SnoopJ> theseb, i.e. if you have 32x32 color images and you do batches of size 5, your inputs would go from (32, 32, 3) to (5, 32, 32, 3). The details can vary a little bit, though.
[23:40:31] <not_not> if both a and b go out of scope refcount hits 0 and the object is destroyed
[23:40:35] *** Quits: mug3n (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 240 seconds)
[23:40:41] <KirkMcDo1ald> not_not: Well, integers in particular are interesting in that they are immutable, and small integer objects are aggressively reused.
[23:40:54] <not_not> yeah but lets say a string instead or an instance of a class
[23:41:10] <not_not> so yeah i heard about that most numbers that are commonly used dont get destroyd
[23:41:11] <KirkMcDo1ald> So if you do `a = 10`, it might be the same 10 object that's used everywhere the number 10 comes up.
[23:41:28] <not_not> but a large number like 192013914342358 would be destroyed on 0 refcount
[23:41:32] <KirkMcDo1ald> Sure.
[23:42:21] *** Quits: sumi80m (~dos@39.191.202.62.dynamic.cgnat.res.cust.swisscom.ch) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[23:42:22] *** Joins: mug3n (~mugen@gateway/tor-sasl/mugen)
[23:42:43] <KirkMcDo1ald> There is also the factor of integer literals being compiled into the code object as a constant, so that particular value gets created the once.
[23:42:55] <not_not> ye ye
[23:43:00] <SnoopJ> theseb, usually you do batching because you have the hardware to push (forwards or backwards) more than one sample at a time, so you typically set your batch-size to roughly saturate the available compute resources, and you're updating your weights based on entire batches instead of individual samples.
[23:43:03] <KirkMcDo1ald> It's a complicated subject, is my point, heh.
[23:43:10] <not_not> python compiler optimizes alot, still havent used the dis package yet
[23:43:23] <SnoopJ> it doesn't do that much optimization, really
[23:43:25] <not_not> KirkMcDo1ald: well i watched the youtube video covering all the python internals
[23:43:32] *** Quits: mug3n (~mugen@gateway/tor-sasl/mugen) (Remote host closed the connection)
[23:43:44] <SnoopJ> (there's not much it *can* do without type information)
[23:43:45] <not_not> KirkMcDo1ald: i like complicated subjects XD
[23:43:54] *** Joins: mug3n (~mugen@gateway/tor-sasl/mugen)
[23:43:58] *** KirkMcDo1ald is now known as KirkMcDonald
[23:43:59] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 256 seconds)
[23:44:00] *** Quits: brentaarnold (~brentaarn@24.112.92.157) (Ping timeout: 256 seconds)
[23:44:11] <not_not> SnoopJ: nah, but if you do stuff like
[23:44:15] *** Joins: sumi80m (~dos@39.191.202.62.dynamic.cgnat.res.cust.swisscom.ch)
[23:44:40] <not_not> i = 3 + 2 python compiler shortens it to i = 5
[23:44:53] <not_not> so it covers the basics
[23:45:10] <SnoopJ> yes, that's called "constant folding" and CPython's compiler knows how to do it.
[23:45:27] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-91ff-82cc-1e7d-4c05.res6.spectrum.com) (Read error: Connection reset by peer)
[23:45:42] *** Quits: flea (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 268 seconds)
[23:45:42] *** Joins: bitkiller (~bitkiller@user/bitkiller)
[23:49:48] *** Joins: Barones (~Barones@user/Barones)
[23:50:18] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[23:50:41] <theseb> SnoopJ: i don't see how backprop is parallelizable....it is 1. process input I to get output O, 2. Analyze O to improve weights, 3. Repeat for new I.......If parallel you would do 1. Process I1, I2, I3, ... to get O1, O2, O3, ... 2. Analyze O1, O2, ..etc. to improve weights, 3. Repeat
[23:51:30] *** Joins: c4017w__ (~c4017@209.52.68.8)
[23:51:36] <theseb> SnoopJ: i think step 2 must be one at a time...O1 update then O2 update then O3 update, etc.
[23:51:52] *** Joins: ElPresidenteP (~ElPreside@2600:1700:3d10:4870:5c99:3fb5:4f54:3112)
[23:52:03] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[23:52:09] <SnoopJ> theseb, if you are trying to justify how it happens one sample at a time, you will probably find a way to succeed at that. It's not how it's generally done, in my experience, though.
[23:52:15] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: Lost terminal)
[23:52:30] *** Joins: wakeup (~wakeup@user/wakeup)
[23:52:47] <SnoopJ> It might be helpful to think about it minimizing the average/typical/whatever loss _over the batch_ rather than over a single datum
[23:52:57] *** Joins: hams (~hams@73.232.205.0)
[23:52:57] *** Quits: hams (~hams@73.232.205.0) (Changing host)
[23:52:57] *** Joins: hams (~hams@user/hams)
[23:53:08] <SnoopJ> (this is mostly why batches are useful: you can represent a larger swath of your training space during a single update)
[23:54:47] <theseb> SnoopJ: oh wait..i think i get it now
[23:55:19] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[23:55:24] <theseb> SnoopJ: yes you can do lots of samples in parallel....you will obtain lots of weight deltas to apply......when the batch is done you apply all those deltas at the same time
[23:55:59] <SnoopJ> well, you apply just one change for the batch, but in some sense it's "made of" the adjustments each sample would suggest if you were not batching
[23:56:06] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 272 seconds)
[23:56:08] <theseb> SnoopJ: however, do you agree bigger batch sizes DECREASE accuracy?....this AWS ML exam question says so...
[23:56:16] <SnoopJ> It Dependsâ¢
[23:57:01] *** Quits: rodstewart1 (~dmartins@188.ip-149-56-97.net) (Ping timeout: 256 seconds)
[23:57:30] <SnoopJ> The limiting case of a larger batch size is one that fits the entire training set in it, which is not necessarily a good or bad thing, but it can affect the accuracy, especially if your train/val sets have subtle differences in them.
[23:57:40] *** Joins: rodstewart1 (~dmartins@188.ip-149-56-97.net)
[23:58:27] <SnoopJ> In practice, you don't have an infinite amount of compute and datasets are typically larger than what is available, so there's always some ceiling, and you experiment underneath that ceiling to find what works well.
[23:58:44] *** Quits: sobkas (~sobkas@95.175.17.217) (Remote host closed the connection)
[23:58:59] <theseb> SnoopJ: each adjustment as you called it is an *improvement* to the weights
[23:59:18] <theseb> SnoopJ: So it would make sense that accuracy would improve if we applied those improvements ASAP
[23:59:27] <theseb> SnoopJ: small batch sizes do it fast
[23:59:29] <theseb> faster
[23:59:43] <theseb> SnoopJ: bigger batch sizes DELAY when those improvements are applied.
[23:59:52] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[23:59:54] <SnoopJ> like I said, it depends
