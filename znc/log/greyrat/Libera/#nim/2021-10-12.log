[00:01:00] <FromDiscord> <Rika> #memes?
[00:03:26] <PMunch> @dom96, can confirm, PRs to your own repos work
[00:06:26] <nrds> <06Prestige99> Interesting
[00:10:31] <FromDiscord> <Unaimend> sent a code paste, see https://paste.rs/uPr
[00:10:49] <PMunch> To be fair the ones I've done to my own repo has been to get feedback
[00:12:22] <FromDiscord> <zidsal> I'm writing a data structure that has both a ref & object implementation. When it comes to writing the procs for the objects is this really the best way to do it? https://play.nim-lang.org/#ix=3Bty (I grabbed this way by looking at how tables was written) if that's the case it feels like  the ref methods should really be able to do something like `{.borrow.}` to save on boilerplate
[00:21:07] <FromDiscord> <dom96> try https://play.nim-lang.org/#ix=3BtD
[00:21:26] <FromDiscord> <Unaimend> When I am iterating over the same `OrderedDict` at two different code locations I am guaranteed the "order of iteration", correct?
[00:21:51] <FromDiscord> <Elegantbeef> `OrderedTable`?
[00:22:41] <FromDiscord> <Unaimend> https://nim-lang.org/docs/tables.html#OrderedTable
[00:22:53] <FromDiscord> <Elegantbeef> If so yes ordered tables remember their insertion order which is what that iterator uses
[00:23:10] <FromDiscord> <Unaimend> Thanks
[00:36:36] <FromDiscord> <ynfle (ynfle)> Is it possible to get ascii coloring from execmdex and those family of procs?
[00:36:47] <FromDiscord> <ynfle (ynfle)> \ansi
[00:38:12] <FromDiscord> <ynfle (ynfle)> Is there a way to disable full paths for compilation errors?
[00:39:10] <FromDiscord> <Elegantbeef> Depending on the program you can tell it you want color, otherwise i dont know
[00:39:17] *** Quits: PMunch (~PMunch@c01F28BC3.dhcp.as2116.net) (Quit: leaving)
[00:39:43] <FromDiscord> <Elegantbeef> full paths being which module a symbol comes from?
[00:40:04] <FromDiscord> <SivadNai> who has a repo full of errors?
[00:40:17] <FromDiscord> <Elegantbeef> You do?
[00:42:21] <FromDiscord> <ynfle (ynfle)> No, the full path to the file
[00:42:53] <FromDiscord> <ynfle (ynfle)> @beef so if it compiles with color, it should automatically give to me with those procs?
[00:43:31] <FromDiscord> <Elegantbeef> Well if the program thinks it should output with colour or is told it should it'll give ansi colours
[00:43:41] <FromDiscord> <ynfle (ynfle)> Ok
[00:43:45] <FromDiscord> <ynfle (ynfle)> Lets test...
[00:43:49] <FromDiscord> <Elegantbeef> Possibly `--filenames:abs|canonical|legacyRelProj`  though i dont know the nim version you're on
[00:44:51] <FromDiscord> <zidsal> @dom96 out of interest how come the tables module doesn't use that pattern is there a draw back to this?
[00:45:52] <FromDiscord> <Elegantbeef> I'd probably say that it allows runnable examples that match the first parameter
[00:46:31] <FromDiscord> <Elegantbeef> Though they also do have different implementations
[00:46:45] <FromDiscord> <Elegantbeef> So it's just fewer when statements
[00:46:58] <FromDiscord> <SivadNai> I do, yes
[00:47:09] <FromDiscord> <zidsal> the []= impl looks the same, although the runnable examples is a good point
[00:49:18] <FromDiscord> <ynfle (ynfle)> @beef 1.4.8
[00:49:47] <FromDiscord> <ynfle (ynfle)> doesn't seem to have it
[00:49:54] <FromDiscord> <ynfle (ynfle)> Will 1.6?
[00:50:01] <FromDiscord> <Elegantbeef> Yea
[00:50:14] <FromDiscord> <ynfle (ynfle)> Noice
[01:09:09] <FromDiscord> <ynfle (ynfle)> @beef it get ansi color
[01:20:52] <FromDiscord> <ynfle (ynfle)> Any easy way to remove ansi color once gotten?
[01:33:07] <FromDiscord> <impbox [ftsf]> resetAttributes?
[01:33:58] <FromDiscord> <impbox [ftsf]> Or set to fgDefault
[01:34:30] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 260 seconds)
[01:34:32] <FromDiscord> <ynfle (ynfle)> I mean, I want to compare a string with ansi coloring and without and see if they have the same text
[01:34:40] <FromDiscord> <impbox [ftsf]> Ooh
[01:35:47] <FromDiscord> <impbox [ftsf]> I'd probably write a function to skip them in the comparison
[01:35:57] <FromDiscord> <impbox [ftsf]> I don't think anything exists for it already
[01:36:22] *** Quits: meowray (~MaskRay@li683-166.members.linode.com) (Ping timeout: 260 seconds)
[01:43:52] <FromDiscord> <ynfle (ynfle)> @impbox, any idea how to do that?
[01:49:32] <FromDiscord> <impbox [ftsf]> Basically you can step though both strings one character at a time, when you hit an escape code you ignore any characters until the end of it
[01:49:56] <FromDiscord> <impbox [ftsf]> For non ignored characters you can return false if either of the characters don't match each other
[01:57:34] <FromDiscord> <ynfle (ynfle)> I got `.replace(re"\u001B\[(\d|;)+?m", "")`
[01:57:38] <FromDiscord> <ynfle (ynfle)> Seems to work
[01:57:42] <FromDiscord> <ynfle (ynfle)> Thanks though
[02:01:09] <FromDiscord> <impbox [ftsf]> Yeah you can strip the codes then compare as usual
[02:02:24] <FromDiscord> <ynfle (ynfle)> Thanks
[02:05:06] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[02:07:50] *** Quits: max22- (~maxime@2a01cb08833598000bdc249d87a31114.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[02:17:51] *** Joins: meowray (~MaskRay@li683-166.members.linode.com)
[02:47:18] <nrds> <06Prestige99> Seems github issues don't use real markdown.. dang
[02:47:29] <nrds> <11sorcerer99> oO
[02:48:25] <nrds> <06Prestige99> in markdown, a single newline doesn't actually create a visual new line. But in github it does.. 
[02:48:29] <nrds> <06Prestige99> unfortunate
[03:03:33] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-228.sw.biz.rr.com)
[03:08:10] <FromDiscord> <Yardanico> markdown doesn't really have one standard
[03:08:28] <FromDiscord> <Yardanico> There are multiple, GitHub uses so-called GitHub-flavoured Markdown
[03:08:32] <FromDiscord> <Yardanico> GFM
[03:22:20] <Mister_Magister> officially, my nim wrapper for pigpio is better than using arduino libs
[03:22:23] <Mister_Magister> its simpler
[03:39:30] <nrds> <06Prestige99> I guess so Yard, but there's been an effort to create a standard
[03:39:44] <nrds> <06Prestige99> I think github is one of the few that doesn't follow the newline "standard"
[03:40:50] <nrds> <06Prestige99> I use sembr to write so it's slightly annoying (https://sembr.org/)
[04:31:29] <FromDiscord> <satyrn> how would i use newAsyncHttpClient() to get the contents of multiple websites asynchronously
[04:43:48] <FromDiscord> <Yardanico> you would start multiple futures
[05:04:52] *** Quits: oz (~oz@crystal/user/oz) (Remote host closed the connection)
[05:05:07] *** Joins: ox (~oz@crystal/user/oz)
[05:34:20] *** Quits: Mister_Magister (~Mister_Ma@user/mister-magister/x-2636733) (Read error: Connection reset by peer)
[05:34:41] *** Joins: Mister_Magister (~Mister_Ma@user/mister-magister/x-2636733)
[05:37:37] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:20:07] <FromDiscord> <Gumber> ugh ssl is such a pain to get working on windows
[06:20:21] <FromDiscord> <Gumber> no idea why the nim client won't connect
[06:20:39] <FromDiscord> <Gumber> and Nim basically logs nothing just silently crashes
[06:24:33] <FromDiscord> <exelotl> Someone really wrote an RFC for when to press enter üòÖ
[06:26:25] <FromDiscord> <impbox [ftsf]> with no effect
[06:35:09] <FromDiscord> <Gumber> okay sweet - no idea what I was doing wrong but the ssl socket stuff is working now yay
[06:35:23] <FromDiscord> <Gumber>  https://media.discordapp.net/attachments/371759389889003532/897319006573297684/unknown.png
[06:36:14] <FromDiscord> <Gumber> I guess that's not really visible - oh well
[06:37:03] <FromDiscord> <satyrn> how would i check if a website is online without getting content
[06:37:36] <FromDiscord> <satyrn> nvm im sumb
[06:37:38] <FromDiscord> <satyrn> (edit) "sumb" => "dumb"
[06:42:05] <FromDiscord> <impbox [ftsf]> there's a HTTP HEAD request
[07:03:35] <FromDiscord> <Rika> Ping?
[07:06:07] <FromDiscord> <Yardanico> In reply to @Rika "Ping?": http head is exactly "http head" for websites
[07:06:15] <FromDiscord> <Yardanico> if you ping the IP you'll not be checking website availability
[07:06:22] <FromDiscord> <Yardanico> since it can resolve to cloudflare or some other CDN or some shared web hosting
[07:06:24] <FromDiscord> <Rika> I‚Äôm not replying to imp
[07:06:30] <FromDiscord> <Yardanico> oh, then why ping? :D
[07:06:31] <FromDiscord> <Rika> I guess so
[07:06:54] <FromDiscord> <Rika> In reply to @Yardanico "since it can resolve": That could still mean the site is ‚Äúavailable‚Äù though
[07:07:00] <FromDiscord> <Rika> Sure I guess a head request will work
[07:07:11] <FromDiscord> <Rika> Implementing ping in code is harder anyway
[07:08:44] <FromDiscord> <Yardanico> In reply to @Rika "That could still mean": not really
[07:08:54] <FromDiscord> <Yardanico> what if it was banned on the shared hosting or cloudflare stopped serving it
[07:09:06] <FromDiscord> <Yardanico> also it can be offline and cloudflare shows you the "live view" page
[07:09:09] <FromDiscord> <Rika> In reply to @Rika "Sure I guess a": Yeah I got that after I sent this
[07:09:24] <FromDiscord> <Rika> You can argue the live view page is available
[07:09:28] <FromDiscord> <Rika> Depending on the website
[07:20:15] <FromDiscord> <satyrn> how would i check if an entire string is alphanumeric
[07:20:28] <FromDiscord> <satyrn> the isAlphaNumeric proc is only for characters so
[07:20:41] <FromDiscord> <Rika> Iterate over the string and you get characters
[07:24:49] <FromDiscord> <impbox [ftsf]> Ping is terrible for checking a website, website could be up and reject pings. Could be down and respond to pings.
[07:25:10] <FromDiscord> <impbox [ftsf]> Even http HEAD is not that great, you're better off getting the content and checking for something you know will always be there
[07:25:10] <FromDiscord> <impbox [ftsf]> Which will depend on the site
[07:33:16] *** Quits: rockcavera (~rc@user/rockcavera) (Read error: Connection reset by peer)
[07:33:40] *** Joins: rockcavera (~rc@192.12.112.240)
[07:33:40] *** Quits: rockcavera (~rc@192.12.112.240) (Changing host)
[07:33:40] *** Joins: rockcavera (~rc@user/rockcavera)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:39:54] <FromDiscord> <KimJongUnstoppable> Does anyone know how to properly call ProcessStartInfo? I tried using the winim package to load System and call it that way, but it fails no matter how many different ways I attempt to do it.
[07:40:04] <FromDiscord> <KimJongUnstoppable> (edit) "ProcessStartInfo?" => "ProcessStartInfo from the windows API?"
[07:49:00] <FromDiscord> <impbox [ftsf]> what have you tried and what happens?
[07:51:59] <FromDiscord> <KimJongUnstoppable> sent a long message, see http://ix.io/3BuC
[07:52:57] <FromDiscord> <KimJongUnstoppable> I realize I can probably use a Runspace pipeline to get the information I want using Powershell but that feels really hacky
[07:53:41] <FromDiscord> <impbox [ftsf]> could use just use CreateProcess from window api?
[07:54:02] <FromDiscord> <impbox [ftsf]> or CreatePipe
[07:54:06] <FromDiscord> <impbox [ftsf]> rather than trying to use CLR
[07:54:47] <FromDiscord> <KimJongUnstoppable> CreateProcess might work
[07:55:46] <FromDiscord> <KimJongUnstoppable> I haven't used it in nim / winim before though. I'm assuming there's a way to call that somewhere in winim/lean or winim/mean?
[07:56:04] <FromDiscord> <Yardanico> what exactly do you want to do?
[07:56:19] <FromDiscord> <impbox [ftsf]> you could just use osproc startProcess
[07:56:26] <FromDiscord> <impbox [ftsf]> instead of making it windows specific
[07:56:33] <FromDiscord> <impbox [ftsf]> but yeah, depends what you want to do
[07:56:36] <FromDiscord> <KimJongUnstoppable> Start another application if it's not running already. Checking to see if it's running isn't necessary, because if it's running it shouldn't run twice, but I need to pass commandline args to it
[07:56:52] <FromDiscord> <impbox [ftsf]> https://nim-lang.org/docs/osproc.html is the place to go
[07:56:55] <FromDiscord> <Yardanico> In reply to @KimJongUnstoppable "Start another application if": yeah, you certainly don't need clr for that
[07:56:59] <FromDiscord> <impbox [ftsf]> no need to care about windows
[07:57:03] <FromDiscord> <KimJongUnstoppable> Awesome, thank you both
[07:57:04] <FromDiscord> <Yardanico> but you might need winim
[07:57:17] <FromDiscord> <Yardanico> i don't think nim stdlib has a proc to check if something is running with a specific pid
[07:57:24] <FromDiscord> <impbox [ftsf]> "Checking to see if it's running isn't necessary"
[07:57:58] <FromDiscord> <KimJongUnstoppable> My thought process through this has been extravagant (check if its running, uptime, etc from windows) and has whittled its way down to "just bruteforce the app launch and let it fail if it's still running" lol
[07:57:59] <FromDiscord> <impbox [ftsf]> osproc.startProcess
[07:58:00] <FromDiscord> <Yardanico> oh then you just use osproc, yeah
[07:58:13] <FromDiscord> <KimJongUnstoppable> Cool, really appreciate the advice
[07:58:16] <FromDiscord> <KimJongUnstoppable> thank you both
[08:17:55] <FromDiscord> <retkid> so i have a server but i also have a bunch of functions that the server uses
[08:18:16] <FromDiscord> <retkid> does it make sense to put the functions in a separate file called "ServerNamelib"
[08:18:27] <FromDiscord> <retkid> or should i just make due with 400 lines of fluff
[08:19:34] <FromDiscord> <enthus1ast> i like and do both
[08:20:02] <FromDiscord> <retkid> personally my brain tells me to make it separate i dunno
[08:20:21] <FromDiscord> <retkid> API fetching code is verbose
[08:21:17] <FromDiscord> <impbox [ftsf]> i like having everything in one file unless it's going to be used by different apps
[08:21:33] <FromDiscord> <impbox [ftsf]> then split out stuff that would be used by multiple apps to a separate nim file they can both import
[08:21:53] <FromDiscord> <impbox [ftsf]> easier to jump around inside one file than jump around between files
[08:22:02] <FromDiscord> <retkid> apart from some math stuff i ported from other languages i dont think I'll have a use for it
[08:22:05] <FromDiscord> <enthus1ast> when its so verbose, maybe you can make it denser with eg template, macros or (custom) pragmas
[08:22:13] <FromDiscord> <retkid> well its just
[08:22:17] <FromDiscord> <retkid> lemme show you
[08:22:38] <FromDiscord> <retkid>  https://media.discordapp.net/attachments/371759389889003532/897345994134528050/unknown.png
[08:22:39] <FromDiscord> <retkid> stuff like this
[08:22:40] <FromDiscord> <retkid> annoys me
[08:22:56] <FromDiscord> <retkid> I dont like looking at it lol
[08:23:23] <FromDiscord> <impbox [ftsf]> is it just json?
[08:23:29] <FromDiscord> <impbox [ftsf]> put it in a json file and read it
[08:23:29] <FromDiscord> <retkid> but its really big and ugly
[08:23:41] <FromDiscord> <retkid> easier to just keep it int he code
[08:23:43] <FromDiscord> <impbox [ftsf]> then you can edit the json without recompiling
[08:23:50] <FromDiscord> <Yardanico> yeah
[08:23:56] <FromDiscord> <Yardanico> and then use strutils.formats
[08:23:57] <FromDiscord> <Yardanico> (edit) "strutils.formats" => "strutils.format"
[08:24:03] <FromDiscord> <Yardanico> to insert needed dynamic stuff like the query
[08:24:03] <FromDiscord> <Rika> What is that?
[08:24:16] <FromDiscord> <Yardanico> In reply to @Rika "What is that?": https://nim-lang.org/docs/strutils.html#format%2Cstring%2Cvarargs%5Bstring%2C%5D
[08:24:21] <FromDiscord> <Yardanico> the %
[08:24:21] <FromDiscord> <Rika> No
[08:24:26] <FromDiscord> <Rika> Not what I mean
[08:24:30] <FromDiscord> <Rika> The json body
[08:24:34] <FromDiscord> <Rika> What is that supposed to be
[08:24:41] <FromDiscord> <retkid> why does it annoy me?
[08:24:44] <FromDiscord> <impbox [ftsf]> nutrients
[08:24:46] <FromDiscord> <retkid> or why does it look like that man?
[08:24:52] <FromDiscord> <retkid> thats how the api wants me to do shit
[08:24:54] <FromDiscord> <retkid> dont complain at me
[08:24:57] <FromDiscord> <Rika> No I mean what is it
[08:24:59] <FromDiscord> <Rika> Okay
[08:25:14] <FromDiscord> <retkid> oh its just accessing a neutritional database
[08:25:16] <FromDiscord> <retkid> (edit) "neutritional" => "nutritional"
[08:25:24] <FromDiscord> <retkid> they wont let me download it
[08:25:28] <FromDiscord> <impbox [ftsf]> steal all their nutrients
[08:25:32] <FromDiscord> <retkid> basically
[08:25:43] <FromDiscord> <enthus1ast> a nutritional database \:)
[08:25:50] <FromDiscord> <enthus1ast> sounds familiar \:)
[08:25:53] <FromDiscord> <retkid> yummy
[08:26:03] <FromDiscord> <retkid> im using www.foodrepo.org
[08:26:07] <FromDiscord> <enthus1ast> are you english speaking? US even?
[08:26:17] <FromDiscord> <enthus1ast> ah
[08:26:18] <FromDiscord> <retkid> I am yes
[08:26:18] <FromDiscord> <enthus1ast> ok
[08:26:25] <FromDiscord> <retkid> but im not doing FDA because that stuff is nonsense
[08:26:39] <FromDiscord> <enthus1ast> ah i see
[08:26:49] <FromDiscord> <retkid> dunno just didn't like it lol
[08:27:02] <NimEventer> New thread by Jorjun_arch: GPU leverage , see https://forum.nim-lang.org/t/8494
[08:27:13] <FromDiscord> <retkid> CUDA time
[08:27:18] <FromDiscord> <enthus1ast> i also """bought""" a german food database with nim ;)
[08:27:29] <FromDiscord> <retkid> """BOUGHT?"""
[08:27:45] <FromDiscord> <retkid> you can just pay for one
[08:27:53] <FromDiscord> <retkid> specifically from germany
[08:28:11] <FromDiscord> <retkid> It would be cool of walmart or tesco let me just ping into theirs and steal it all
[08:28:16] <FromDiscord> <retkid> life would be a lot easier
[08:28:19] <FromDiscord> <enthus1ast> bought with programming time i mean
[08:28:24] <FromDiscord> <retkid> ah
[08:28:31] <FromDiscord> <retkid> time == money
[08:28:36] <FromDiscord> <enthus1ast> yes \:)
[08:28:37] <FromDiscord> <retkid> (edit) 
[08:29:33] <FromDiscord> <enthus1ast> maybe you can combine the idea from @impbox [ftsf]  with yours
[08:29:56] <FromDiscord> <enthus1ast> maybe during development have it as a json file, then when its done, staticRead it into your executable
[08:30:09] <FromDiscord> <retkid> i just dont have a need for that
[08:30:27] <FromDiscord> <retkid> im not trying to ping this api all the time so im making my own database from their database
[08:30:31] <FromDiscord> <retkid> so its like a compile time thing
[08:31:13] <FromDiscord> <enthus1ast> do you build the client api from the json with macros?
[08:31:22] <FromDiscord> <enthus1ast> like json schema or so?
[08:31:34] <FromDiscord> <retkid> the client api isn't written yet
[08:31:37] <FromDiscord> <impbox [ftsf]> or just leave it as is
[08:31:39] <FromDiscord> <retkid> server is being worked on
[08:31:55] <FromDiscord> <impbox [ftsf]> doesn't seem like a big problem
[08:31:56] <FromDiscord> <retkid> i plan to just communicate to my sever via json files
[08:32:07] <FromDiscord> <impbox [ftsf]> solve it with your editor
[08:32:23] <FromDiscord> <retkid> i could just hide the function unless i need to edit the json
[08:32:37] <FromDiscord> <impbox [ftsf]> or just jump over them unless you need to look at them
[08:33:07] <FromDiscord> <impbox [ftsf]> also that's a huge font!
[08:33:13] <FromDiscord> <retkid> im blind
[08:33:17] <FromDiscord> <impbox [ftsf]> fair
[08:33:52] <FromDiscord> <retkid> think my inteliji is larger even
[08:40:25] <FromDiscord> <enthus1ast> @retkid\: they have json dumps (\~4 years old though) on their github https://github.com/digitalepidemiologylab/foodrepo_api/tree/master/data
[08:48:34] <FromDiscord> <retkid> In reply to @enthus1ast "<@217459674700578816>\: they have json": 4 year old json dumps are suboptimal
[08:48:49] <FromDiscord> <retkid> seeing as how its community driven and theres no way to really know how big the DB is now
[08:49:06] <FromDiscord> <retkid> it says like 744K but who actually knows
[08:51:28] <FromDiscord> <enthus1ast> But could serve as a starting point
[08:51:49] <FromDiscord> <enthus1ast> And you can see the db structure
[08:53:06] <FromDiscord> <enthus1ast> Then you also could do a json to sql conversion (for the schema) https://www.convertjson.com/json-to-sql.htm
[08:53:43] <FromDiscord> <enthus1ast> I've build my nutrition db this way
[08:57:40] <FromDiscord> <Rainbow Asteroids> how long have y'all been hiding `nim secret` from me
[08:57:55] <FromDiscord> <impbox [ftsf]> ssh
[08:58:09] <FromDiscord> <Rika> It‚Äôs a secret
[08:58:13] <FromDiscord> <enthus1ast> i like to use inim   if i want to have a repl
[08:58:36] <FromDiscord> <Rainbow Asteroids> it wasn't much of a secret because pressing shift+enter in vscode automatically opens it up
[08:59:13] <FromDiscord> <NullCode>  https://media.discordapp.net/attachments/371759389889003532/897355200900239360/unknown.png
[08:59:15] <FromDiscord> <NullCode> what the fuck thats cool
[08:59:43] <FromDiscord> <enthus1ast> but it is very limited as its just the nim vm
[08:59:59] <FromDiscord> <NullCode> i see
[09:00:09] <FromDiscord> <enthus1ast> in constrast to inim, which compiles in the background (but is slower)
[09:00:10] <FromDiscord> <impbox [ftsf]> great as a calculator
[09:00:27] <FromDiscord> <enthus1ast> qalc ftw ;)
[09:00:33] <FromDiscord> <impbox [ftsf]> or expression checker
[09:01:00] <FromDiscord> <impbox [ftsf]> except with nim syntax
[09:15:15] <FromDiscord> <Rika> I use speedcrunch for calculation
[09:18:55] <FromDiscord> <enthus1ast> nice
[09:21:04] <FromDiscord> <retkid> I nim is cool
[09:21:09] <FromDiscord> <retkid> (edit) "I nim" => "Inim"
[09:21:23] <FromDiscord> <retkid> i use it when i have to use [x .. y]
[09:21:27] <FromDiscord> <retkid> because i cant wrap my head around that
[09:42:23] *** Joins: max22- (~maxime@2a01cb0883359800a7b96a93836f21d6.ipv6.abo.wanadoo.fr)
[10:04:38] *** Quits: Mister_Magister (~Mister_Ma@user/mister-magister/x-2636733) (*.net *.split)
[10:04:39] *** Quits: nisstyre (~wes@user/nisstyre) (*.net *.split)
[10:04:39] *** Quits: systemdsucks (~systemdsu@user/systemdsucks) (*.net *.split)
[10:04:39] *** Quits: FromDiscord (~FromDisco@mail.nim-lang.org) (*.net *.split)
[10:04:39] *** Quits: Freneticks (~Frenetick@gw.ptr-80-238-209-252.customer.ch.netstream.com) (*.net *.split)
[10:04:39] *** Quits: mst (~matthewt@perl/shadowcat-mst/chainsaw-wielder) (*.net *.split)
[10:07:45] *** Joins: PMunch (~PMunch@c01F28BC3.dhcp.as2116.net)
[10:26:24] *** Joins: Mister_Magister (~Mister_Ma@user/mister-magister/x-2636733)
[10:26:24] *** Joins: nisstyre (~wes@user/nisstyre)
[10:26:24] *** Joins: systemdsucks (~systemdsu@user/systemdsucks)
[10:26:24] *** Joins: FromDiscord (~FromDisco@mail.nim-lang.org)
[10:26:24] *** Joins: Freneticks (~Frenetick@gw.ptr-80-238-209-252.customer.ch.netstream.com)
[10:26:24] *** Joins: mst (~matthewt@perl/shadowcat-mst/chainsaw-wielder)
[11:06:58] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[11:08:15] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[11:27:59] *** Joins: Vladar (~Vladar@46.162.2.53)
[11:31:27] <FromDiscord> <Yardanico> heh https://github.com/qb-0/NimbleImGui
[11:31:29] <nrds> <12R2D299> 4GitHub: 7"ImGui Interface for Nimble"
[11:31:32] <FromDiscord> <Yardanico> nice little thingie
[11:32:35] <FromDiscord> <Yardanico> although glfw's transparency doesn't really work (maybe it only works under wayland, not sure)
[11:32:51] <FromDiscord> <Yardanico> so instead of nice transparent window you get this https://media.discordapp.net/attachments/371759389889003532/897393863453470760/unknown.png
[11:38:28] *** Joins: nicoty (~nicoty@user/nicoty)
[11:44:07] *** Joins: Guest84 (~Guest84@176.27.151.75)
[11:44:51] *** Quits: Guest84 (~Guest84@176.27.151.75) (Client Quit)
[11:45:02] *** Joins: Guest4439 (~Guest44@176.27.151.75)
[11:45:10] *** Quits: Guest4439 (~Guest44@176.27.151.75) (Client Quit)
[11:46:32] *** Parts: nicoty (~nicoty@user/nicoty) ()
[11:52:34] *** Joins: cvemys (~cvemys@user/cvemys)
[12:04:29] *** Joins: Guest9067 (~Guest90@2a02:c7f:221d:e300:8dbe:6527:886b:8092)
[12:05:13] *** Quits: Guest9067 (~Guest90@2a02:c7f:221d:e300:8dbe:6527:886b:8092) (Client Quit)
[12:07:31] <PMunch> Hmm, interesting. Installed latest devel and echo seems a bit broken
[12:08:01] <PMunch> http://ix.io/3Bv5
[12:14:22] <FromDiscord> <sheldon> ‰∑é
[12:15:44] <FromDiscord> <Yardanico> In reply to @PMunch "Hmm, interesting. Installed latest": oof, report that
[12:21:43] *** Quits: cvemys (~cvemys@user/cvemys) (Ping timeout: 252 seconds)
[12:23:53] *** Joins: cvemys (~cvemys@user/cvemys)
[12:24:16] <PMunch> Hmm, can't quite manage to reproduce it..
[12:24:32] <PMunch> I mean it happens ever time in this specific project
[12:24:45] <PMunch> But getting a smaller case is hard..
[12:57:56] <PMunch> @Yardanico, turned out to be something completely different once I managed to boil it down: https://github.com/nim-lang/Nim/issues/18986
[13:18:01] <FromDiscord> <baalajimaestro> I checked out nim supports M1 but when I tried to install with choosenim, I got an error saying choosenim isn't supported for macosx\_arm
[13:21:27] <FromDiscord> <Rika> Nim does, choose Nim probably doesn‚Äôt for now
[13:21:34] <FromDiscord> <Rika> You will need to manually install
[13:23:39] <FromDiscord> <baalajimaestro> Manually in the sense, compile from sources?
[13:29:44] <FromDiscord> <Rika> Not sure but there should be releases in the GitHub releases page
[13:31:20] <FromDiscord> <xflywind> https://nim-lang.org/install.html
[13:31:29] <FromDiscord> <xflywind> https://github.com/nim-lang/nightlies/releases
[13:32:45] <FromDiscord> <baalajimaestro> The one on nim-lang.com points to installation with brew while i am against using it
[13:34:39] <FromDiscord> <pietroppeter> In reply to @baalajimaestro "I checked out nim": I followed this to use Nim on a M1: https://forum.nim-lang.org/t/8181#52631
[13:34:52] <FromDiscord> <xflywind> In reply to @baalajimaestro "The one on nim-lang.com": well, there are releases on that page if you scroll it
[13:35:08] <FromDiscord> <baalajimaestro> sent a code paste, see https://play.nim-lang.org/#ix=3Bvt
[13:35:41] <FromDiscord> <xflywind>  https://media.discordapp.net/attachments/371759389889003532/897424777910829077/unknown.png
[13:35:57] <FromDiscord> <baalajimaestro> which page?
[13:36:13] <FromDiscord> <xflywind> https://nim-lang.org/install.html
[13:36:33] <FromDiscord> <Rika> Seems like you do have to build from source for M1?
[13:36:36] <FromDiscord> <baalajimaestro> Exact issue is Darwin arm64 binary being unavailable
[13:36:50] <FromDiscord> <baalajimaestro> Ummm looks like yea
[13:37:01] <FromDiscord> <baalajimaestro> Ill try following what @pietroppeter said
[13:53:04] *** Quits: cvemys (~cvemys@user/cvemys) (Ping timeout: 252 seconds)
[14:05:43] *** Quits: Vladar (~Vladar@46.162.2.53) (Ping timeout: 252 seconds)
[14:07:24] *** Joins: arkurious (~arkurious@user/arkurious)
[14:48:12] *** Joins: NeoCron (~NeoCron@p200300c4cf195d00df9b3d9f9a455325.dip0.t-ipconnect.de)
[14:50:16] <FromDiscord> <dom96> In reply to @baalajimaestro "I checked out nim": This should have been fixed
[14:50:42] <FromDiscord> <dom96> Can you have a look at the bash script and see why it fails? Would appreciated it üôÇ
[14:51:23] <FromDiscord> <baalajimaestro> You mean choosenim?
[14:51:50] <FromDiscord> <dom96> Yep
[14:52:09] <FromDiscord> <dom96> The init.sh script should install the amd64 choosenim binary
[14:55:51] <FromDiscord> <baalajimaestro> while i actually prefer it to install the arm64 variant
[14:56:14] <FromDiscord> <baalajimaestro> Tho rosetta is perfectly fine, i am preferring native binaries as much as i can
[14:56:18] *** Joins: Vladar (~Vladar@46.162.2.53)
[14:56:45] <FromDiscord> <baalajimaestro> Screenshot 2021-10-12 at 4.56.27 PM.png https://media.discordapp.net/attachments/371759389889003532/897445180507037726/Screenshot_2021-10-12_at_4.56.27_PM.png
[14:56:51] <FromDiscord> <baalajimaestro> This is the exact error i get when I try using choosenim
[14:57:37] <PMunch> Hmm dom, while you're here. I have a use-case that would be great for async stuff, and I was wondering how hard it would be to write an async module for it
[14:58:53] <PMunch> Basically it's a device that requires writing/reading and some special polling logic to make it work like an async thing
[15:00:02] <PMunch> I'm guessing addRead and addWrite from the asyncdispatch module would be the key to make this work
[15:10:34] *** Quits: Vladar (~Vladar@46.162.2.53) (Ping timeout: 252 seconds)
[15:14:26] <FromDiscord> <Yardanico> sent a code paste, see https://play.nim-lang.org/#ix=3BvP
[15:14:31] <FromDiscord> <Yardanico> it should compile pretty quickly on an m1 mac
[15:17:14] <FromDiscord> <dom96> In reply to @baalajimaestro "Screenshot 2021-10-12 at 4.56.27": Hm. Guess my fix failed üôÇ
[15:20:00] *** Joins: Vladar (~Vladar@46.162.2.53)
[15:20:52] <FromDiscord> <baalajimaestro> yep it did‚Üµ(@Yardanico)
[15:22:32] <FromDiscord> <dom96> In reply to @PMunch "Basically it's a device": Hmm. How do you read from this device? Do you use a file descriptor?
[15:23:04] <PMunch> Yes, it's a SCSI device so it's a normal file descriptor
[15:23:37] <PMunch> You can either send commands via IOCTL, or you can write a command and then wait for it to be readable and read the result
[15:24:53] <PMunch> You can also write a limited amount of commands simultaneously and then read them out later
[15:25:28] *** Joins: luis_ (~luis@172.58.222.208)
[15:27:48] *** Quits: max22- (~maxime@2a01cb0883359800a7b96a93836f21d6.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:39:37] <FromDiscord> <baalajimaestro> On adding to path, i see a reference to `~/.nimble`, is that also need aside from Nim/bin
[15:39:49] <FromDiscord> <baalajimaestro> On adding to path, i see a reference to `~/.nimble`, is that also needed aside from `Nim/bin`
[15:41:35] *** Quits: luis_ (~luis@172.58.222.208) (Ping timeout: 250 seconds)
[15:41:53] <FromDiscord> <Yardanico> ~/.nimble/bin is needed, yes
[15:41:57] <FromDiscord> <Yardanico> not ~/.nimble itself
[15:42:04] <FromDiscord> <Yardanico> but it'll only be required if you install some nimble package that has a binary
[15:43:57] *** Joins: neurocyte0132889 (~neurocyte@IP-185189142238.dynamic.medianet-world.de)
[15:43:57] *** Quits: neurocyte0132889 (~neurocyte@IP-185189142238.dynamic.medianet-world.de) (Changing host)
[15:43:57] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[15:44:33] <PMunch> (note that some tools install binaries and use them during compile-times, e.g. Futhark)
[15:49:53] <FromDiscord> <retkid> Is there an NLTK like thing
[15:49:54] <FromDiscord> <retkid> for nim
[15:52:55] <FromDiscord> <retkid> im not opposed to doing it in kotlin or python
[15:56:36] <FromDiscord> <dom96> PMunch: then I would encourage you to use `asyncfile` and improve it so that it's actually async üôÇ
[15:57:08] <PMunch> Actually async?
[15:57:25] <FromDiscord> <impbox [ftsf]> aasync
[15:58:40] <FromDiscord> <impbox [ftsf]> I guess handing it off to the OS to read rather than having to do it in your app?
[15:58:48] <FromDiscord> <retkid> as opposed to that fake async
[15:59:47] <PMunch> "Handing it off to the OS" - isn't this exactly what the async library does?
[16:00:23] <FromDiscord> <impbox [ftsf]> hopefully, i'm not sure what dom96 is referring to if not that
[16:01:28] <FromDiscord> <impbox [ftsf]> https://github.com/nim-lang/Nim/issues/6054 perhaps
[16:01:56] <FromDiscord> <impbox [ftsf]> or https://github.com/nim-lang/Nim/issues/11564
[16:02:35] <PMunch> Hmm
[16:03:20] <FromDiscord> <juan_carlos> Does `getAllocStats()` works with ARC/ORC ?, compiling with `-d:nimAllocStats`, but always shows `0` deallocs (but is not leaking, is simple example code).
[16:04:01] <FromDiscord> <cabboose> It‚Äôs a template iirc
[16:04:27] <FromDiscord> <cabboose> So you put your code as it‚Äôs body and it‚Äôll print the allocations on completion of the body
[16:06:01] <FromDiscord> <Yardanico> not related to nim directly, but apparently sciter's creator is in the talks with some big financial company from wall street which wants to open source sciter to use it in their projects, so there's a possibility that it'll be open sourced under some company like "sciter foundation" - https://habr.com/ru/company/ruvds/blog/565818/ (russian article, but autotranslate should do the job)
[16:06:17] <FromDiscord> <Yardanico> if that happens, sciter will instantly become one of the best choices for cross-platform desktop UIs
[16:06:58] <FromDiscord> <Yardanico> i mean, it's already popular for AV vendors (almost all of big ones use sciter including avast, norton, etc), also teamviewer uses it
[16:07:07] <FromDiscord> <Yardanico> but it's closed source at the end of the day (unless you buy a license)
[16:10:58] <FromDiscord> <juan_carlos> No, is the `proc` one, not the template one, the one that returns the `AllocStats` object. ORC makes like 16 alloc for 2 variables, I think is not reporting correctly.
[16:12:24] <FromDiscord> <xflywind> sent a code paste, see https://play.nim-lang.org/#ix=3Bwb
[16:12:37] <FromDiscord> <xflywind> maybe there some issues regarding your example
[16:12:59] <FromDiscord> <xflywind> with `nim c --gc:orc -d:nimAllocStats`, give `(allocCount: 201, deallocCount: 201)`.
[16:16:56] <FromDiscord> <cabboose> Echos and what not count too right? So maybe you‚Äôre getting thrown off by that?
[16:28:24] <FromDiscord> <retkid> nimpy is fucking magic
[16:28:53] <FromDiscord> <dom96> PMunch: from what I recall, asyncfile actually blocks in certain circumstances
[16:28:59] <FromDiscord> <dom96> might work for your use case though
[16:29:03] <PMunch> Well that's not great..
[16:29:13] <PMunch> I mean I could just write my own polling loop as well..
[16:29:31] <FromDiscord> <dom96> I mean you could, but why not improve the stdlib while you're at it?
[16:29:35] <PMunch> The other thing I'm interacting with is X11, which doesn't have an async wrapper either :P
[16:29:38] <FromDiscord> <dom96> it might turn out that it works fine for what you're doing
[16:32:36] <PMunch> I think I should be able to do it with addWrite and addRead
[16:32:43] <PMunch> And a little bit of extra logic
[16:33:59] <FromDiscord> <satyrn> is there any difference in performance between the sort() and sorted() procs?
[16:34:13] <FromDiscord> <Yardanico> In reply to @satyrn "is there any difference": yes, sorted will be slower because it's out-of-place
[16:34:22] <FromDiscord> <satyrn> alright
[16:34:29] <FromDiscord> <Rika> extra copying for sorted
[16:34:57] <FromDiscord> <satyrn> the sequence im using is ~1.2mil strings long
[16:35:30] <FromDiscord> <Yardanico> then surely it'll be much slower
[16:35:39] <mst> PMunch: get it all working first, then consider whether you can write a small wrapper to integrate more nicely with the existing async infrea
[16:35:56] <mst> PMunch: "one bastard annoying problem at a time" tends to be a good rule :D
[16:36:09] <PMunch> mst, I have the interaction working with ioctl
[16:36:29] <PMunch> But to make it async I need to split it into read and write with polling
[16:36:47] <PMunch> And I think I can do it with async and a bit of logic
[16:36:58] <PMunch> Otherwise I'll have to essentially build my own async system..
[16:37:27] <mst> worst case scenario, you could offload it to a separate thread and have the read/write/poll stuff be internal comms
[16:38:02] <mst> I've seen that done for name resolution because the POSIX APIs are kinda resistant to async
[16:38:25] <PMunch> Yeah, that's always an option
[16:38:44] <mst> I'm not saying it's a perfect option
[16:39:07] <mst> only that it might be a good way to hack sync code into an otherwise async system while you test everything else
[16:39:13] <PMunch> Basically the goal here is to handle the X11 loop until the epaper display is ready for another update, then push the cumulated changes while processing further X11 events
[16:39:18] <mst> and then you can do things better as a later step
[16:40:09] <mst> note: I like async systems, but I also skew pragmatist over purist, and I don't mind interim nasty hacks while I fix my other mistakes
[16:40:35] <PMunch> Obviously, a hack is nice to get a proof of concept
[16:41:21] <mst> also when I'm trying to make two complicated things talk to each other, interim hacks to avoid half the problems while I work on the other half are *great*
[16:54:05] *** ox is now known as oz
[16:57:38] <FromDiscord> <Kiloneie> Any macro guys know my issue here ? im learning D:‚Üµhttps://play.nim-lang.org/#ix=3Bwr
[16:58:53] <FromDiscord> <Yardanico> uhm
[16:58:56] <FromDiscord> <Yardanico> what is this macro supposed to do?
[16:59:11] <FromDiscord> <Kiloneie> just a + b for integers and float
[16:59:17] <FromDiscord> <Kiloneie> but float isnt working
[16:59:20] <FromDiscord> <Yardanico> but that's not a macro's job, is it
[16:59:24] <FromDiscord> <Kiloneie> idk
[16:59:32] <FromDiscord> <enthus1ast> first, change the return to typed, then create a literal
[16:59:35] <FromDiscord> <Yardanico> your "echo sumMacro(1, 4)" will just make
[16:59:36] <FromDiscord> <Yardanico> "echo 1 + 4"
[16:59:57] <FromDiscord> <Kiloneie> ? it outputs 5
[17:00:03] <FromDiscord> <Yardanico> read what I wrote
[17:00:12] <PMunch> What is your goal here?
[17:00:21] <FromDiscord> <Yardanico> in `echo sumMacro(1, 4)`  sumMacro will be expanded into `1 + 4` so you get `echo 1 + 4`
[17:00:31] <FromDiscord> <Yardanico> I mean, it's a macro, but I just don't see what you're trying to do with it
[17:00:46] <FromDiscord> <Yardanico> if you want to calculate values right in the macro, that's not the way to do it, as you're effectively outputting the same AST you got
[17:02:08] <PMunch> a.intVal <- extracts the integer from an intLit node. Then you do newIntLitNode with the value, which just creates a new one..
[17:02:19] <FromDiscord> <Kiloneie> how do you do it then ? im just trying to make a macro that works for any type a + b that simple
[17:02:28] <FromDiscord> <Yardanico> but what do you want it to do?
[17:02:30] <FromDiscord> <Yardanico> calculate a + b?
[17:02:34] <FromDiscord> <Yardanico> at compile time?
[17:02:37] <FromDiscord> <Kiloneie> yes
[17:03:10] <FromDiscord> <Yardanico> you can just go by the path of least resistancve
[17:03:12] <FromDiscord> <Yardanico> (edit) "resistancve" => "resistance"
[17:03:30] <FromDiscord> <Yardanico> :D
[17:03:34] <FromDiscord> <Yardanico> sent a code paste, see https://play.nim-lang.org/#ix=3Bwt
[17:04:15] <PMunch> Alternatively: https://play.nim-lang.org/#ix=3Bwu
[17:04:24] <FromDiscord> <Yardanico> yeah, that's actually better
[17:04:40] <FromDiscord> <Yardanico> as my macro will error out if you have something that can't be summed at compile-time
[17:05:49] <PMunch> I  mean mine will too
[17:05:58] <FromDiscord> <Yardanico> well, but the error will be better at least :P
[17:06:20] <FromDiscord> <Kiloneie> okay, but, i still don't know why my weirdo macro works for integers but at floats it just oO
[17:06:39] <FromDiscord> <Yardanico> because you're getting a float64
[17:06:39] <PMunch> The one you wrote can do 1 + 0.5 though, mine won't do that *shrugs*
[17:06:40] <FromDiscord> <Yardanico> not float
[17:06:46] <FromDiscord> <Kiloneie> oh
[17:06:53] <FromDiscord> <Kiloneie> i nnever checked the result...
[17:07:02] <FromDiscord> <Yardanico> you should've checked $a.getTypeInst :)
[17:07:10] <FromDiscord> <Kiloneie> yeh...
[17:07:28] <FromDiscord> <Kiloneie> i just assumed that since integer is usually int64 that float would also..
[17:07:32] <FromDiscord> <Kiloneie> <.<
[17:08:18] <FromDiscord> <Kiloneie> Thanks, now i can proceed with whatever the hell im getting at
[17:08:46] <FromDiscord> <Yardanico> In reply to @Kiloneie "i just assumed that": `int` in Nim is architecture-dependent - it's 32-bit on 32-bit architectures but 64-bit on 64-bit architectures
[17:08:51] <FromDiscord> <Yardanico> `float` on the other hand always defaults to `float64`
[17:09:03] <FromDiscord> <Kiloneie> okay
[17:09:07] <nrds> <06Prestige99> Why is that? (the latter)
[17:09:10] <FromDiscord> <Kiloneie> didn't know that part
[17:09:58] <FromDiscord> <Yardanico> @Prestige I think it's because floats aren't really tied to the typical architecture bitness (float vs double), but I don't really know a lot of it
[17:10:08] <FromDiscord> <Yardanico> maybe someone who knows a bit about CPUs can explain :D
[17:10:22] <FromDiscord> <dom96> > I think I should be able to do it with addWrite and addRead
[17:10:29] <FromDiscord> <dom96> PMunch: yes, but then you're just reimplementing asyncfile
[17:10:44] <FromDiscord> <dom96> asyncfile already does this on fds
[17:11:29] <FromDiscord> <Kiloneie> looking at the manual, float says Default floating point type, that's all it says, echoing float gives float, echoing float.type gives float, echoing float.type.repr gives float, so yeah never seen float64 like that before
[17:13:37] *** Quits: Vladar (~Vladar@46.162.2.53) (Remote host closed the connection)
[17:16:40] <FromDiscord> <Yardanico> @PMunch btw, does futhark work with headers that include other headers? also does it correctly understand text replacement #define s?
[17:22:13] <PMunch> Yes, and yes
[17:22:28] *** Quits: xet7 (~xet7@user/xet7) (Quit: Leaving)
[17:22:30] <FromDiscord> <Yardanico> hmm i'll try it with sciter's headers to see how far it goes
[17:22:40] <PMunch> By default it doesn't define import anything further than one level which isn't explicitly used though
[17:22:59] <FromDiscord> <Yardanico> right now I'm getting weird Fatal: 'limits.h' file not found though
[17:23:04] <FromDiscord> <Yardanico> even though I added /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/include
[17:23:07] <FromDiscord> <Yardanico> as absPath
[17:23:12] <PMunch> Try adding include-fixed as well
[17:23:23] <PMunch> At least on my system that was a thing
[17:23:31] <FromDiscord> <Yardanico> include-fixed ?
[17:23:48] <FromDiscord> <Yardanico> ah the directory
[17:23:53] <PMunch> Yup
[17:23:58] *** Joins: xet7 (~xet7@user/xet7)
[17:24:08] <FromDiscord> <Yardanico> yeah that brings it further and it actually errors out in header code :)
[17:24:17] <PMunch> What's the error?
[17:24:32] *** Joins: Vladar (~Vladar@46.162.2.53)
[17:24:48] <FromDiscord> <Yardanico>  https://media.discordapp.net/attachments/371759389889003532/897482434285830154/unknown.png
[17:25:16] <PMunch> Aah..
[17:25:25] <FromDiscord> <Yardanico> does it understand definitions like that? https://media.discordapp.net/attachments/371759389889003532/897482593145061396/unknown.png
[17:25:44] <PMunch> It should
[17:26:18] <PMunch> But it probably created `importc: "som_asset_t"` instead of `importc: "struct som_asset_h"`
[17:27:26] <PMunch> Or something along those lines..
[17:27:39] <PMunch> Do you have a link to the Sciter C API and a small C sample I can try and port?
[17:29:29] <PMunch> I've gotta run, but if you do have something I can try just create an issue on GitHub and I'll have a look :)
[17:29:45] <FromDiscord> <Yardanico> okay :)
[17:29:47] *** Quits: PMunch (~PMunch@c01F28BC3.dhcp.as2116.net) (Quit: leaving)
[17:38:25] <FromDiscord> <retkid> is nimpy dependency independent?
[17:38:40] <FromDiscord> <Yardanico> what?
[17:38:58] *** Joins: max22- (~maxime@2a01cb08833598009bd4683403ef2304.ipv6.abo.wanadoo.fr)
[17:39:03] <FromDiscord> <Yardanico> if you mean nim dependencies, it only uses nim stdlib
[17:39:07] <FromDiscord> <Yardanico> but it requires CPython to be available of course
[17:39:11] <FromDiscord> <Yardanico> for it to work
[17:39:12] <FromDiscord> <retkid> no i mean when import a library
[17:39:13] <FromDiscord> <retkid> from my pc
[17:39:30] <FromDiscord> <retkid> if i distribute it do i have to make sure they have the same modules
[17:39:47] <FromDiscord> <retkid> or is the python in the machine code?
[17:40:19] <FromDiscord> <Yardanico> In reply to @retkid "if i distribute it": same python modules, yes
[17:40:31] <FromDiscord> <Yardanico> In reply to @retkid "or is the python": no, it's not a part of the resulting nim binary
[17:40:37] <FromDiscord> <retkid> ah
[17:40:43] <FromDiscord> <retkid> welpppp
[17:42:19] <FromDiscord> <retkid> wonder if you could use cython to get it into the binary somehow
[17:42:48] <FromDiscord> <retkid> If they could they probably would've done it by now
[17:42:53] <FromDiscord> <retkid> dunno
[17:55:53] *** Joins: kayabaNerve (~kayabaNer@user/kayabanerve)
[17:56:22] *** Quits: kayabaNerve_ (~kayabaNer@user/kayabanerve) (Ping timeout: 260 seconds)
[17:57:47] <FromDiscord> <Yardanico> fun stuff
[17:57:51] <FromDiscord> <Yardanico> sent a long message, see http://ix.io/3BwK
[17:57:59] <FromDiscord> <Yardanico> maybe it hits some recursive loop inside, idk
[18:39:46] <FromDiscord> <NullCode> man battalarm was a big success
[18:39:52] <FromDiscord> <NullCode> atleast for me
[18:40:00] <FromDiscord> <NullCode> so whats happening here
[18:46:34] <FromDiscord> <Qaz> I'm trying to import `osproc` but doing that results in getting `Error: VM does not support 'cast' from tyPointer to tyProc`, what am I doing wrong?
[18:46:59] <FromDiscord> <enthus1ast> where do you do this?
[18:47:10] <FromDiscord> <Qaz> in the second line
[18:47:33] <FromDiscord> <enthus1ast> in a normal nim file?
[18:47:45] <FromDiscord> <Qaz> sent a code paste, see https://play.nim-lang.org/#ix=3Bxv
[18:47:46] <FromDiscord> <Qaz> In reply to @enthus1ast "in a normal nim": Yes
[18:48:00] <FromDiscord> <Qaz> (edit) "Yes" => "`.nims`"
[18:48:10] <FromDiscord> <Qaz> Should I use `.nim`?
[18:48:12] <FromDiscord> <enthus1ast> nims is a nim script file
[18:48:17] <FromDiscord> <enthus1ast> yes
[18:49:53] <FromDiscord> <Qaz> Thanks!
[18:50:10] <FromDiscord> <enthus1ast> np
[18:50:21] <FromDiscord> <gerwy> anyone knows what happens to simd and threads when compiled using `-d:emscripten` ?
[18:50:48] <FromDiscord> <Qaz> In reply to @enthus1ast "np": I just tried nim today and it looks pretty nice
[18:52:20] <FromDiscord> <Qaz> I wanted to create a program that produced a slim, stand-alone executable so using kotlin wasn't really an option.
[18:52:33] <FromDiscord> <Qaz> Kotlin/Native performance is still pretty bad
[18:55:20] <FromDiscord> <Qaz> In reply to @enthus1ast "np": Is it possible to specify types for variables?
[18:55:38] <FromDiscord> <enthus1ast> sure
[18:55:45] <FromDiscord> <enthus1ast> var foo\: string
[18:55:56] <FromDiscord> <enthus1ast> you should read through the manual, though
[18:56:22] <FromDiscord> <Qaz> oh it's lowercase
[18:56:23] <FromDiscord> <Yardanico> @Qaz it's better if you read the https://narimiran.github.io/nim-basics/ and then nim tutorials
[18:56:49] <FromDiscord> <Qaz> (edit) "lowercase" => "lowercase, it was a typo"
[18:56:59] <FromDiscord> <Qaz> In reply to @Yardanico "<@!275948425126871041> it's better if": I'll do
[19:05:04] <FromDiscord> <NullCode> can you link nim tutorials
[19:05:09] <FromDiscord> <NullCode> i already read nim basics
[19:06:30] <FromDiscord> <Qaz> In reply to @Yardanico "<@!275948425126871041> it's better if": I can't seem to find how to remove elements from sequences
[19:06:43] <FromDiscord> <Yardanico> delete
[19:06:52] <FromDiscord> <Yardanico> https://nim-lang.org/docs/system.html#delete%2Cseq%5BT%5D%2CNatural
[19:07:14] <FromDiscord> <Yardanico> or https://nim-lang.org/docs/system.html#del%2Cseq%5BT%5D%2CNatural if you don't need to preserve the order
[19:07:32] <FromDiscord> <NullCode> In reply to @Qaz "I can't seem to": `seq.delete index`
[19:07:43] <FromDiscord> <NullCode> man how i love the universal proc calling
[19:07:52] <FromDiscord> <NullCode> wait whats it called
[19:08:15] <FromDiscord> <Yardanico> MCS in Nim
[19:08:18] <FromDiscord> <Yardanico> UFCS in D
[19:08:45] <FromDiscord> <NullCode> ah right
[19:08:50] <FromDiscord> <NullCode> universal func call syntax
[19:08:55] <FromDiscord> <Yardanico> method call syntax
[19:09:04] <FromDiscord> <NullCode> thats for nim?
[19:09:05] <FromDiscord> <NullCode> oh
[19:12:47] *** Joins: luis_ (~luis@172.58.222.208)
[19:14:16] <FromDiscord> <Qaz> sent a code paste, see https://play.nim-lang.org/#ix=3BxK
[19:14:35] <FromDiscord> <Qaz> (edit) "https://play.nim-lang.org/#ix=3BxK" => "https://play.nim-lang.org/#ix=3BxL"
[19:15:19] <FromDiscord> <Yardanico> just saying that this won't work anyway as you're removing elements while iterating over the seq
[19:15:29] <FromDiscord> <Yardanico> so your `i` will be wrong after your first removal
[19:15:49] <FromDiscord> <Yardanico> where do you get that seq from? usually you can detect empty lines before adding them to the seq
[19:16:14] <FromDiscord> <Qaz> In reply to @Yardanico "where do you get": `let outp: string = execProcess("choco", args=["list", "-lo"], options={poUsePath}).strip()`
[19:16:20] <FromDiscord> <Yardanico> oh, like that
[19:16:27] <FromDiscord> <Yardanico> (btw, "string" here as a type is optional)
[19:16:44] <FromDiscord> <Yardanico> and then you split?
[19:17:01] <FromDiscord> <Qaz> In reply to @Yardanico "(btw, "string" here as": I know but I'm just adding while I'm learning to make sure I understand what is in each type
[19:17:05] <FromDiscord> <Qaz> In reply to @Yardanico "and then you split?": Yes
[19:17:23] <FromDiscord> <Qaz> (edit) "type" => "variable"
[19:17:28] <FromDiscord> <Yardanico> did you declare your seq `var` or `let` btw?
[19:17:32] <FromDiscord> <Qaz> let
[19:17:38] <FromDiscord> <Yardanico> `let` in Nim is immutable, it's not like in TypeScript or JavaScript
[19:17:47] <FromDiscord> <Yardanico> it's better to read nim basics as it explains those things too
[19:17:52] <FromDiscord> <Yardanico> var - runtime value, mutable
[19:17:55] <FromDiscord> <Yardanico> let - runtime, immutable
[19:17:58] <FromDiscord> <Qaz> In reply to @Yardanico "`let` in Nim is": I know, but I thought it's references could be mutated
[19:17:58] <FromDiscord> <Yardanico> const - compile time, immutable
[19:18:05] <FromDiscord> <Qaz> In reply to @Qaz "I know, but I": Like kotlin
[19:18:05] <FromDiscord> <Yardanico> sequences are value types in Nim
[19:18:11] <FromDiscord> <NullCode> In reply to @Qaz "I'm getting `type mismatch:": var a = 0‚Üµvar len = lines.len‚Üµfor ab in 0 .. lines.len:
[19:18:21] <FromDiscord> <Qaz> (edit) "kotlin" => "JVM languages"
[19:18:36] <FromDiscord> <Yardanico> Nim is pretty different from JVM as most basic types aren't boxed
[19:18:50] <FromDiscord> <Yardanico> they're value types (like int or bool), seq and strings also act like value types although they're not internally
[19:19:34] <FromDiscord> <NullCode> kinda lazy idea
[19:19:35] <FromDiscord> <NullCode> sent a code paste, see https://play.nim-lang.org/#ix=3BxN
[19:19:51] <FromDiscord> <Yardanico> nonono, why
[19:20:05] <FromDiscord> <NullCode> dude my brain thinks of the worst possible methods
[19:20:07] <FromDiscord> <NullCode> but hey they work
[19:20:14] <FromDiscord> <Yardanico> if you want to stick to your way of removing post-adding one way would be to `let noEmptyLines = lines.filterIt(it != "")` with `import std/sequtils`
[19:20:37] <FromDiscord> <Yardanico> yes, that'll involve creating a new seq
[19:20:39] <FromDiscord> <Qaz> In reply to @NullCode "dude my brain thinks": I'm just thinking `list.filter { it != "" }`
[19:20:44] <FromDiscord> <Rika> sent a code paste, see https://play.nim-lang.org/#ix=3BxO
[19:20:51] <FromDiscord> <Rika> In reply to @Qaz "I'm just thinking `list.filter": you can do that
[19:20:54] <FromDiscord> <Rika> in sequtils
[19:20:56] <FromDiscord> <Yardanico> as I just showed
[19:20:57] <FromDiscord> <Yardanico> rika
[19:21:04] <FromDiscord> <Qaz> In reply to @Rika "you can do that": Nice
[19:21:05] <FromDiscord> <Rika> didnt realise
[19:21:09] <FromDiscord> <Yardanico> In reply to @NullCode "but hey they work": @Qaz
[19:21:09] <FromDiscord> <Rika> not in code block
[19:21:14] <FromDiscord> <Qaz> In reply to @Yardanico "<@!275948425126871041>": Yes?
[19:21:14] <FromDiscord> <Yardanico> In reply to @Yardanico "if you want to": @Qaz
[19:21:20] <FromDiscord> <Yardanico> did you skip that message? :D
[19:21:41] <FromDiscord> <Yardanico> https://nim-lang.org/docs/sequtils.html#filterIt.t%2Cuntyped%2Cuntyped
[19:21:44] <FromDiscord> <NullCode> In reply to @Yardanico "if you want to": i havent looked at sequtils closely enough
[19:21:48] <FromDiscord> <NullCode> damn it
[19:21:59] <FromDiscord> <Qaz> In reply to @Yardanico "did you skip that": I didn't see it
[19:22:07] <FromDiscord> <NullCode> will i continue to be such a noob at nim lmfao
[19:22:18] <FromDiscord> <Rika> yes if you dont read anything
[19:22:21] <FromDiscord> <Rika> or code anything
[19:24:27] <FromDiscord> <NullCode> In reply to @Rika "yes if you dont": indeed
[19:24:31] <FromDiscord> <NullCode> i need to read harder
[19:24:35] <FromDiscord> <NullCode> and no not joking
[19:24:40] <FromDiscord> <Rika> no you need to read thoroughly
[19:24:43] <FromDiscord> <NullCode> dk how else to phrase it
[19:24:48] <FromDiscord> <NullCode> In reply to @Rika "no you need to": yeah that
[19:29:21] <FromDiscord> <NullCode> `welcome to humiliating oneself - featuring NullCode`
[19:29:39] <FromDiscord> <NullCode> I'm gonna catch retkid's anxiety if i keep talking here
[19:29:40] <FromDiscord> <NullCode> cya
[19:30:09] <FromDiscord> <Rika> man fuck that all of us were at your point
[19:30:21] <FromDiscord> <Rika> its just that for my case i didnt chat here until i was pretty competent alreaady
[19:45:59] *** Quits: luis_ (~luis@172.58.222.208) (Ping timeout: 250 seconds)
[19:53:29] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-228.sw.biz.rr.com) (Ping timeout: 265 seconds)
[20:15:27] <FromDiscord> <whisperdev> I am thinking about serving lots of pictures and occasionally gifs and videos on low resource VMs.Would Nim be ideal for that or Go is more mature for this?
[20:19:37] <nrds> <06Prestige99> Like a webserver that streams files? My first thought was jester but it looks like there's an issue about this.. https://github.com/dom96/jester/issues/181
[20:36:09] *** Quits: redj (~quassel@bras-base-bchmpq5707w-grc-24-76-69-197-62.dsl.bell.ca) (Ping timeout: 265 seconds)
[20:36:44] *** Joins: redj (~quassel@bras-base-bchmpq5707w-grc-24-76-69-197-62.dsl.bell.ca)
[20:37:33] <FromDiscord> <treeform> Does any one know what can cause c source files to not cache.
[20:38:03] <FromDiscord> <treeform> I am looking at `{.compile: bearCodecPath & "ccopy.c".}`
[20:38:23] <FromDiscord> <treeform> for other `{.compile` C files usually cache too well
[20:38:32] <FromDiscord> <treeform> but for some reason for this library they don't
[20:38:56] <FromDiscord> <treeform> its not using any config.nims which might contain a -f switch
[20:39:04] <FromDiscord> <treeform> but I just don't know what to look for
[20:39:07] <FromDiscord> <treeform> any one had issues like that?
[20:43:11] <FromDiscord> <juan_carlos> c preprocessor ?
[20:57:35] <FromDiscord> <treeform> but how can it change the files?
[20:59:16] *** Joins: pro (~pro@user/pro)
[21:52:50] *** Quits: pro (~pro@user/pro) (Quit: WeeChat 3.3)
[21:53:17] <FromDiscord> <sealmove> Since Nim exposes its AST to the user, it is safe to assume a tool like C# Roslyn would be quite easy to implement? Then we can start getting awesome IDE features?
[21:55:02] <FromDiscord> <haxscramper> no, it is not safe to assume
[21:55:37] <FromDiscord> <haxscramper> roslyn uses CAAS architecture and generally was designed with incremental IDE analysis in mind
[21:56:20] <FromDiscord> <haxscramper> Exposure of the AST via macros has nothing to do with quality of the tooling
[21:56:47] <FromDiscord> <haxscramper> `import compiler` is also possible, but it only allows for external static code analysis tools like haxdoc etc.
[22:07:36] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 245 seconds)
[22:24:39] *** Quits: max22- (~maxime@2a01cb08833598009bd4683403ef2304.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[22:26:23] <FromDiscord> <sealmove> hmm
[22:29:26] <FromDiscord> <haxscramper> IC would allow "awesome IDE features", like working autocomplete for example
[22:32:19] *** Joins: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr)
[22:46:01] *** Joins: PMunch (~PMunch@c01F28BC3.dhcp.as2116.net)
[23:06:57] <FromDiscord> <exelotl> oh, I found the answer to the bitwise XOR equivalent I was looking for the other day
[23:07:11] <FromDiscord> <exelotl> sent a code paste, see https://play.nim-lang.org/#ix=3Bz0
[23:18:01] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[23:18:30] *** Quits: Figworm (FiggyWitIt@user/figworm) (Quit: Figworm)
[23:27:29] *** Quits: FromDiscord (~FromDisco@mail.nim-lang.org) (Remote host closed the connection)
[23:27:42] *** Joins: FromDiscord (~FromDisco@mail.nim-lang.org)
[23:37:18] <nrds> <06Prestige99> Is there a proper way to have a nil-able proc as a property other than creating a ref object that has an update proc as a property? 
[23:37:26] <nrds> <06Prestige99> maybe would be easier to expalin with code
[23:37:33] <nrds> <06Prestige99> explain*
[23:40:20] <nrds> <06Prestige99> https://play.nim-lang.org/#ix=3Bz9 I can do it like this with an option but it feels messy
[23:42:20] <FromDiscord> <Elegantbeef> Procs are nilable by default
[23:43:02] <nrds> <06Prestige99> well hell I didn't know that :P
[23:43:30] <FromDiscord> <Elegantbeef> they're a pointer type in this context
[23:45:36] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[23:47:32] <FromDiscord> <tandy> what type is this? {"x"\: "y", ...}
[23:47:43] <FromDiscord> <tandy> openArray[(string, string)]?
[23:47:51] <FromDiscord> <Elegantbeef> An `array[len, (string, string)]`
[23:47:53] <FromDiscord> <tandy> [Edit](https://discord.com/channels/371759389889003530/371759389889003532/897578756540071946): what type is this? `{"x": "y", ...}`
[23:47:55] <FromDiscord> <ynfle (ynfle)> Ya
[23:47:58] <FromDiscord> <tandy> ohhh
[23:48:20] <FromDiscord> <Elegantbeef> the table constructor is a shorthand to an array of tuples
[23:49:25] <FromDiscord> <ynfle (ynfle)> Is there a way to programmatically get the hints and warnings from the compiler? `nimsuggest`?
[23:50:01] <FromDiscord> <Elegantbeef> Yea nimsuggest might be the way if you want to give a line/column and get back a hint/warning
[23:50:16] <FromDiscord> <Elegantbeef> Otherwise `nim check`
