[00:01:01] *** Joins: Lizard_ (~Lizard@96-127-195-85.qc.cable.ebox.net)
[00:04:02] <Lizard_> 35% pay raise... barely keeping up with inflation...
[00:04:12] <Lizard_> Let's go Brandon, heh
[00:04:27] <bomb> 35% bump not bad at all
[00:04:29] <bomb> where do you live?
[00:04:34] <Lizard_> Canaduh
[00:05:15] <DoofusCanadensis> yay
[00:06:28] <bomb> are you one of those truckers?
[00:06:55] <Lizard_> bomb, that's defamation and hearsay! retract now!
[00:07:04] <bomb> :|
[00:07:07] *** Joins: MaNa2k (~MaNa2k@224.81-166-66.customer.lyse.net)
[00:07:16] * Lizard_ has a court order/probation keeping him from organizing or taking part in protest
[00:07:26] <MichaelLong> what are them truckers doing btw.? Still parking in the inner cities?
[00:08:14] *** Joins: edcba_ (~edcba@78.193.195.38)
[00:08:40] <Lizard_> No, they are terrorist now, they are parked in jails cells like the January 6th "insurectionist"
[00:08:43] *** Joins: edcba__ (~edcba@78.193.195.38)
[00:08:54] <Lizard_> "FFree" world
[00:09:03] *** Joins: bpmedley (~bpmedley@2600:1700:e2c:8410:9086:cd3f:1d40:fcc6)
[00:09:16] <MichaelLong> I see
[00:09:24] *** Quits: edcba__ (~edcba@78.193.195.38) (Changing host)
[00:09:24] *** Joins: edcba__ (~edcba@user/edcba)
[00:09:36] *** Quits: edcba (~edcba@user/edcba) (Killed (NickServ (GHOST command used by edcba__)))
[00:09:37] *** edcba__ is now known as edcba
[00:11:01] <Lizard_> Only your government is allowed to use terror tactics
[00:11:11] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:90d4:1750:f22d:5ef2) (Ping timeout: 250 seconds)
[00:11:29] *** Joins: Tobbi__ (~Tobbi@2a02:8108:1240:48ec:b13c:cfe9:4c84:105a)
[00:12:39] *** Quits: edcba_ (~edcba@78.193.195.38) (Ping timeout: 256 seconds)
[00:13:47] <MichaelLong> Citizens should be free to choose what's good for them on their own! Come to Saxony - East Germany - there, anybody can demonstrate as much they want!
[00:14:13] <bomb> Justin Trudeau is a turd
[00:14:16] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:dc22:e76d:3ca0:c786)
[00:14:56] *** Quits: MaNa2k (~MaNa2k@224.81-166-66.customer.lyse.net) (Quit: Leaving)
[00:15:32] <Lizard_> my German is quite rusty, worked for Novell when they used to own SuSE and worked with the German team
[00:16:04] <Lizard_> when they started speaking random German in meeting I would speak French, most of them spoke better French than English tho ;)
[00:16:23] *** Quits: Tobbi__ (~Tobbi@2a02:8108:1240:48ec:b13c:cfe9:4c84:105a) (Ping timeout: 250 seconds)
[00:18:18] *** Joins: Tobbi__ (~Tobbi@2a02:8108:1240:48ec:342c:4ea2:4826:ecb)
[00:19:01] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:dc22:e76d:3ca0:c786) (Ping timeout: 240 seconds)
[00:22:22] *** Joins: uartist (~uartist@deze-server.isvanmij.nl)
[00:23:18] <Lizard_> I can't even get out of the country anymore, no clotshot no travel, not even land border, not even internal flight, which is borderline anticonstitutional.
[00:24:02] <bomb> pandemic hasn't ended, why do you want to leave?
[00:24:26] <Lizard_> "Pandemic"
[00:24:37] *** Quits: Tobbi__ (~Tobbi@2a02:8108:1240:48ec:342c:4ea2:4826:ecb) (Ping timeout: 240 seconds)
[00:24:51] <bomb> you don't believe the pandemic or what?
[00:24:54] <bomb> it's still on
[00:25:16] <Lizard_> influenza has been arround for millions of years yes
[00:25:34] <Lizard_> and it is not going away...
[00:25:49] <uartist> I want to iterate trough all (sub)folders of a pst file using the Spire.Email library. The documentation seems scarce. Is the best way to accomplish this to create a (recursive) List of folderCollections? https://pastebin.com/EeVMy0AH
[00:26:26] <bomb> Lizard_ so why were you shitting on truckers for protesting the restrictions?
[00:26:48] *** Joins: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469)
[00:28:21] <Lizard_> bomb, woosh...
[00:29:04] <Lizard_> bomb, I have 1 year of probation left with condition to not organize or take part in protest...
[00:29:28] <bomb> Lizard_ who did you shoot?
[00:30:19] *** Joins: earthy (~arthurvl@2001:984:275b:1:ba27:ebff:fea0:40b0)
[00:30:20] *** Joins: Tobbi (~Tobbi@ip1f115d4d.dynamic.kabel-deutschland.de)
[00:31:27] <cloudbender> @uartist I would use a recursive function that builds a flat list of long paths
[00:31:35] <Lizard_> bomb, kek, I shot Colombia herself in the head obviously. something something about being a threat to "Muh democracy" you know how tyrrants go
[00:31:38] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: The Game)
[00:32:31] <cloudbender> democracy is a flawed mechanism without the constitution to reign it in.
[00:32:36] <bomb> Lizard_ so you're basically a terrorist
[00:32:51] <bomb> do you kidnap East Indian kids?
[00:33:23] *** Quits: Tobbi (~Tobbi@ip1f115d4d.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[00:33:53] *** Joins: Tobbi__ (~Tobbi@2a02:8108:1240:48ec:1c12:bb21:1c32:53b8)
[00:34:22] <cloudbender> That pesky constitution is always frustrating to lefties.
[00:35:15] *** Quits: Jong (~Jong@2620:10d:c090:400::5:cbbc) (Ping timeout: 250 seconds)
[00:35:36] <cloudbender> <<< waits for flying fruit, food, and poo
[00:35:57] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:89f3:aed9:3683:7eb2)
[00:36:00] <Lizard_> bomb, interestingly I am CTO/backend engineer for a fleet management solution.
[00:36:16] <bomb> you're in the heart of colonialism
[00:37:06] <Lizard_> cloudbender, I have seen the video. Yes! it will al blend
[00:38:14] <cloudbender> so your saying someone actually made a video ... OMG we aren't going to make as a species.
[00:38:19] <cloudbender> We are doomed.
[00:38:35] *** Quits: Tobbi__ (~Tobbi@2a02:8108:1240:48ec:1c12:bb21:1c32:53b8) (Ping timeout: 260 seconds)
[00:38:54] <Lizard_> cloudbender, https://www.youtube.com/willitblend
[00:38:58] <bomb> we'll blend with cats?
[00:39:43] *** Joins: Tobbi__ (~Tobbi@2a02:8108:1240:48ec:514b:b491:478b:bf51)
[00:41:51] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:89f3:aed9:3683:7eb2) (Ping timeout: 260 seconds)
[00:47:39] <Nasp> https://twitter.com/Synology/status/1509939175625265153 That's a nice april fools joke
[00:48:00] <bomb> I hate april fools
[00:48:15] <bomb> as if every single company has to do shit like this
[00:48:34] <Nasp> yeah
[00:48:37] <Nasp> Especially news media
[00:48:44] <redoc> oh man going back to coding a desktop app > xamarin is soooo nice
[00:49:54] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 260 seconds)
[00:55:02] *** Quits: Guest48 (~textual@91.139.219.57) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:00:45] *** Quits: Tazy (~Tazmainia@2001:1c02:1708:6800:35b7:e438:f5c3:182e) (Quit: Leaving)
[01:03:36] <Suchiman> LOL when github copilot suggests a comment https://welp.dev/devenv_2022-04-01_22-33-23.png
[01:04:06] <Suchiman> i feel... offended
[01:11:38] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[01:11:45] *** Joins: alguien (~alguien@user/alguien)
[01:19:44] <Nasp> Hahaha
[01:19:52] <Nasp> Isn't copilot rather useless?
[01:20:06] <Suchiman> Nasp: i just went to type // and that's the first thing it suggested
[01:20:13] <Nasp> My point exactly
[01:20:23] <Suchiman> Nasp: is it? https://copilot.github.com/
[01:21:04] <Nasp> Is'nt it the same ML shit that's in VS?
[01:21:31] <lz_> Suchiman: lol my first thought is, how amazing that software depends on webservices, best way to ensure this won't work in a couple of years
[01:23:19] <Nasp> Suchiman:  Yes
[01:23:52] <Suchiman> Nasp: no, Github CoPilot != IntelliCode
[01:24:03] <Suchiman> IntelliCode is laughable in comparison
[01:24:21] <Nasp> I wish they would just make intellisense better
[01:24:29] <Nasp> Like i think i could make a better version in a day
[01:26:08] <Suchiman> Nasp: like, this is copilot at work https://welp.dev/devenv_2022-04-01_22-56-02.png
[01:27:02] <Nasp> So you write a comment and it writes the code?
[01:27:08] <Nasp> Or did you make the method name?
[01:27:41] <Suchiman> Nasp: you write comments and it writes the code
[01:27:42] <Suchiman> https://welp.dev/devenv_2022-04-01_22-57-31.png
[01:28:08] <Nasp> Yeah i've seen that oe before
[01:28:11] <Nasp> But how useful is it day to day?
[01:28:42] <Suchiman> Nasp: that's what i'm going to figure out :P but like, the previous screenshot, it's generating the whole method from the comment
[01:29:00] <lz_> imo it takes more effort to check some code is valid than to write it
[01:29:54] <lz_> i don't know actually, i take that back. maybe not
[01:31:31] <Nasp> We had our new AI team do a talk yesterday and they had like 3 bullet points for making good ml suggestions
[01:31:36] <Nasp> And one was choice of technology
[01:31:48] <Nasp> "the reason the old suggestion was bad, was because it was AZrue ML"
[01:32:01] <Nasp> Or it could be that model was made 5-6 years ago and never retrained
[01:32:13] *** Joins: Guest48 (~textual@91.139.219.57)
[01:32:48] *** Tobbi__ is now known as Tobbi
[01:33:23] <Suchiman> Nasp: https://xkcd.com/1838/
[01:34:48] <Nasp> Well that is kinda how ml is
[01:35:02] <Nasp> But yeah our old suggestion algo was right 50% of the time, and the new one 90% of the time
[01:35:04] *** Quits: bomb (~bomb@user/bomb) (Quit: ‎)
[01:35:06] <Nasp> That's 7 times better he said
[01:35:12] <Nasp> Not sure i quite how how he did that calculation
[01:39:22] <Lizard_> you need to be in tune with your bunghole to make correct calculation on these
[01:53:13] *** Quits: duds- (~duds-@user/duds) (Max SendQ exceeded)
[01:54:08] *** Quits: DrowningElysium (uid190788@user/drowningelysium) (Quit: Connection closed for inactivity)
[01:54:35] *** Joins: duds- (~duds-@user/duds)
[02:02:28] *** Quits: Guest48 (~textual@91.139.219.57) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:40:26] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:514b:b491:478b:bf51) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:03:07] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[03:31:08] *** Quits: kiwi49 (~kiwi49@user/kiwi49) (Read error: Connection reset by peer)
[03:56:48] *** Quits: DoofusCanadensis (~DoofusCan@207.229.38.10) (Quit: So as you can see from this flowchSQUIRREL!!)
[03:58:45] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 256 seconds)
[04:00:43] *** Quits: liefer (~liefer@user/liefer) (Quit: liefer)
[04:04:52] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Remote host closed the connection)
[04:04:52] *** Joins: liefer (~liefer@user/liefer)
[04:09:45] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[04:12:36] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[04:19:31] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[04:27:09] *** Joins: Pall (~Pall@2a00:23c5:fc89:aa01:a9dd:36cf:fee8:e82a)
[04:30:40] *** Quits: EternalMan (~Belgarath@user/belgarath) (Quit: I couldn't be bothered to put a nice leave message)
[04:30:48] *** Quits: duds- (~duds-@user/duds) (Quit: Leaving.)
[04:31:12] *** Joins: EternalMan (~Belgarath@user/belgarath)
[04:33:05] *** Joins: duds- (~duds-@user/duds)
[05:33:50] <Lizard_> bruh... this looks retarded, the i915 chipset is on everything and you guys fucked something up, tried on the laptop it too no sound device on hdmi and on an headless server for fun and same thing
[05:34:45] <Lizard_> obviously it worked on windows and even in Ubuntu
[05:36:34] <Lizard_> had no realised on the servers and it did not matter... but on desktop this is a major QA fuck up
[05:39:26] <Lizard_> and... its the wrong chat room..
[05:49:39] *** Joins: Palll (~Pall@2a00:23c5:fc89:aa01:a9dd:36cf:fee8:e82a)
[05:52:57] *** Quits: Pall (~Pall@2a00:23c5:fc89:aa01:a9dd:36cf:fee8:e82a) (Ping timeout: 260 seconds)
[06:00:10] *** Joins: Pall (~Pall@host86-145-214-89.range86-145.btcentralplus.com)
[06:03:23] *** Quits: Palll (~Pall@2a00:23c5:fc89:aa01:a9dd:36cf:fee8:e82a) (Ping timeout: 260 seconds)
[06:04:50] *** Joins: Jong (~Jong@2620:10d:c090:400::5:565e)
[06:09:45] <irwiss> yeah the fun part is you can get a better model just changing the random seed, ml is a joke
[06:12:08] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[06:17:50] <bpmedley> Nasp : What are some of the things that the AI was doing?
[06:20:49] <Nasp> bpmedley:  It just suggest account numbers
[06:20:55] <bpmedley> irwiss : Are you aggregating AI and ML together?
[06:21:06] <bpmedley> Suggest account numbers??
[06:21:12] <Nasp> For book keeping
[06:22:21] <bpmedley> So, instead of a random number have a context aware account number?
[06:22:49] <Nasp> ?
[06:23:06] <bpmedley> I don't know what a book keeping account number is.  Just curious..
[06:23:08] <Nasp> Like when you do accounting you need to book stuff on certain accounts, we give suggestions on what accounts an invoice should be filed under
[06:23:17] <bpmedley> Understood
[06:23:39] <bpmedley> So, scan an invoice and detect the type of account number?
[06:23:42] <Nasp> Yes
[06:23:57] <bpmedley> Scan a PDF or Json text blog or something else?
[06:24:04] <Nasp> PDF / images
[06:24:23] <Nasp> So text really, just extracted from PDF or an image
[06:25:11] <Nasp> Also i think it was the same person that complained about a test we did of another ml algo we made
[06:25:30] <Nasp> Which was accurate 5% of the time, it was really just an experiment we used 2-3 hours on, and it was trained with like 1% data compared to the others
[06:28:22] <bpmedley> I hate it when people use hyperbole in a serious argument..
[06:29:43] <Nasp> Anyways i think it was a shame we didn't retrain the original ml model and see how it performed
[06:30:06] <Nasp> Also sometimes i have a feeling this ml thing could just replaced with a top 10 list
[06:31:21] <bpmedley> I agree with ya'll.  I have not used, that I now of, an AL or ML or Furby system that worked well.
[06:32:08] *** Quits: Roughy (~mdaw45ns@user/roughy) (Quit: Meadow Fresh milk)
[06:33:38] <Nasp> Also it took years for someone to finally figure out that we needed a new ml model, because all the new stuff we added in the last 5 years it could never suggest
[06:33:50] <Nasp> Which ofc made the comparison even more biased
[06:38:08] *** Quits: Slade (uid128877@user/slade) (Quit: Connection closed for inactivity)
[06:41:02] *** Joins: DoofusCanadensis (~DoofusCan@2604:3d09:47c:f970::23f5)
[06:46:40] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Ping timeout: 272 seconds)
[06:48:03] <bpmedley> https://spectrumlocalnews.com/nc/charlotte/news/2022/04/01/little-pink-robots-will-soon-be-delivering-coffees-in-charlotte
[06:58:13] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[07:06:04] *** Joins: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net)
[07:21:19] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Quit: Konversation terminated!)
[07:22:30] <Lizard_> Nasp, you always need new better shit to replace the rotten pile of duck tapped shit
[07:23:38] <Lizard_> the wheel of shit, it's like the uroboros, but as seen by Lahey
[07:23:53] <Nasp> Well would still have made it a more fair comparison
[07:23:53] *** Joins: ASUS (~ASUS@user/ASUS)
[07:34:11] <Lizard_> "But that means the dragon is eating his own shit!" "Shut up Bubble"
[07:36:24] *** Quits: DoofusCanadensis (~DoofusCan@2604:3d09:47c:f970::23f5) (Quit: So long, suckers)
[07:37:46] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[07:38:05] <Nasp> Powerpuff girls?
[07:39:19] <Lizard_> Trailer park boys
[07:40:28] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[07:40:59] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[07:42:33] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[07:43:19] <smallville7123> how do i create a custom attribute like NotNull
[07:44:15] <smallville7123> (eg one that actually does something at a build/compiler level instead of needing to act at runtime by relying on the developer to obtain and act on the attributes of your custom attribute)
[07:44:52] <Nasp> Enable all the non nullable shizzle
[07:48:46] <smallville7123> or https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.dataannotations.rangeattribute?view=net-6.0
[07:52:48] <smallville7123> https://github.com/microsoft/referencesource/blob/master/System.ComponentModel.DataAnnotations/DataAnnotations/ValidationAttribute.cs
[07:52:59] <Lizard_> Nasp, https://www.youtube.com/watch?v=40QSd6ZtZfk
[07:53:14] <smallville7123> does this rely on the Compiler SDK in order to work?
[07:54:33] <smallville7123> as only Constructors are called automatically for a custom Attribute, right?
[07:56:24] <Nasp> Just enable non nullable
[07:56:32] *** Joins: smallville7123_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[07:56:44] <smallville7123_> https://github.com/microsoft/referencesource/blob/master/System.ComponentModel.DataAnnotations/DataAnnotations/ValidationAttribute.cs       does this rely on the Compiler SDK in order to work?    as only Constructors are called automatically for a custom Attribute, right?
[07:57:48] <Nasp> No
[07:57:54] <Nasp> Why make your own?
[07:58:26] <smallville7123_> cus i want to port Java's annotations
[07:59:05] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 246 seconds)
[07:59:29] <smallville7123_> without needing to rename them to C# equivilants such as Nullable -> AllowNull, IntRange -> Range, and others
[08:00:02] <Nasp> Well you can't
[08:03:09] *** Joins: v4mp (~v4mp@user/v4mp)
[08:04:37] <smallville7123_> "Microsoft Silverlight is a discontinued application framework designed for writing and running rich web applications, similar to Adobe's runtime"    oof
[08:04:57] <smallville7123_> rip " #if SILVERLIGHT "
[08:07:08] <smallville7123_> welp imma just use ValidationAttribute to try to implement the attributes
[08:10:02] <smallville7123_> ;-;   DataAnnotations   does not exist even tho i have system.componentmodel.annotations\5.0.0\
[08:10:13] *** Quits: v4mp (~v4mp@user/v4mp) ()
[08:12:36] <smallville7123_> The type or namespace name 'DataAnnotations' does not exist in the namespace 'System.ComponentModel' (are you missing an assembly reference?)
[08:12:38] <Nasp> Have you made anything to call those validation attributes?
[08:13:06] <Nasp> Remember attributes just holds data, they don't really do anything when you add them
[08:13:17] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[08:13:26] <smallville7123_> how do i get them to be called at build level
[08:13:59] <Nasp> Build as in compile?
[08:14:10] <smallville7123_> yes
[08:14:26] <Nasp> I dont think that makes any sense
[08:15:47] * smallville7123_ installs system.componentmodel.annotations to all mr projects to see if the error goes away
[08:16:18] * smallville7123_ it didnt ;-;
[08:18:22] <smallville7123_> how do i get `System.ComponentModel.Annotations` to work
[08:18:50] <Nasp> They wont work for you
[08:19:10] <smallville7123_> :(
[08:19:12] <smallville7123_> why
[08:20:52] <Nasp> Just validate the inputs with ifs
[08:23:06] <smallville7123_> " Open your reference manager and add a reference to the System.ComponentModel.DataAnnotations assembly (Solution explorer -> Add reference -> Select .Net tab -> select System.ComponentModel.DataAnnotations from the list)"
[08:23:17] * smallville7123_ doesnt see a .Net tab anywhere :(
[08:23:47] <smallville7123_> nor an "Assemblies tab"
[08:25:55] <smallville7123_> hmm "While this isn't part of the standard we do have a nuget package https://www.nuget.org/packages/System.ComponentModel.Annotations/4.4.0 that support .NET Standard that you can consume."
[08:35:24] * smallville7123_ doesnt work :(
[08:48:17] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[08:50:08] <smallville7123_> in .NET 6 what is the equivilant of an AppDomain
[08:50:34] <smallville7123_> Specifically to isolate, unload, and reload, a DLL at runtime
[08:53:12] <smallville7123_> also i think .NET 6 is not compatible with MonoAndroid version 12.0 last time i attempted to build such
[08:53:22] <smallville7123_> or MonoDroid, whatever it was
[08:59:48] *** Joins: knife (b3nk@killin.us)
[08:59:58] <knife> does anybody know how to force a C# dotnet 6.0 binary to be statically linked against glibc so it does not depend on OS version what version of glibc is installed? They have the standalone binary option but that doesn't force glibc to be statically linked. this is for making a linux binary using .net tooling
[09:01:40] <smallville7123_> also MAUI has... buggy Resizing in SkiaSharp, it is not as smooth as WPF is
[09:02:39] <smallville7123_> wait no
[09:02:42] <smallville7123_> https://github.com/mono/SkiaSharp/issues/1979
[09:02:51] <smallville7123_> "SkiaSharp crashes application MAUI"
[09:03:01] <smallville7123_> thats why i am unable to use MAUI and .NET 6
[09:05:13] <smallville7123_> in which my enitre application relies on Skia for drawing all its content
[09:05:39] <irwiss> knife: the easier solution is to use containers, rather than trying to static link, also static linking glibc will infect your app with gpl
[09:05:59] <smallville7123_> so im stuck with .NetStandard
[09:06:25] <knife> its not being distributed, so that doesn't really matter right? I would definitely opt for containers but I am not allowed to use them because of red tape
[09:06:47] <knife> its for what is supposed to be a weekly run cronjob
[09:06:54] <knife> console app
[09:07:38] <irwiss> yeah if not distributed gpl infection isn't relevant
[09:08:04] <knife> yeah its not going to be distributed
[09:08:31] <knife> so basically what im doing is I am compiling it using the dotnet publish command on a rhel 7 box and trying to make it run on rhel 6
[09:08:52] <knife> and yes I anticipate all the objections to trying to use rhel 6
[09:09:33] <knife> but even with all the options I can figure out for dotnet publish to make a single binary it refuses to statically link glibc
[09:11:47] <smallville7123_> i cant find much info on how to create a .NET 5 android application :(
[09:12:48] <knife> I dont have the exact command written down here but it is along the lines of `dotnet publish -r linux-x64 -p:PublishSingleFile=true --self-contained true -p:IncludeNativeLibrariesForSelfExtract=true -p:PublishTrimmed=true -p:PublishReadyToRun`
[09:12:59] <irwiss> the easy path is using xamarin most likely
[09:13:47] <irwiss> tbh i doubt it'll be some easy cli parameter as static linking isn't something that normally happens in a .net build even self contained
[09:14:17] <knife> yeah I was thinking as such - the only avenue I got a hint at in my googling was to use a post build linker tool
[09:14:24] <irwiss> self contained is "just" shipping the runtime with the app, not building the runtime from scratch
[09:18:56] *** Quits: smallville7123_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Quit: Konversation terminated!)
[09:29:34] *** Joins: smallville7123_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[09:38:30] <smallville7123_> ughhh i wish i could just replace all @Nullable, @NotNull, @Size, @IntRange with [] versions
[09:53:30] *** Quits: shoelaces (~shoelaces@pool-100-38-191-176.nycmny.fios.verizon.net) (Remote host closed the connection)
[09:58:42] *** Joins: shoelaces (~shoelaces@pool-100-38-191-176.nycmny.fios.verizon.net)
[10:02:23] *** Joins: Palll (~Pall@2a00:23c5:fc89:aa01:3d2e:1fa0:edbb:cc33)
[10:06:32] *** Quits: Pall (~Pall@host86-145-214-89.range86-145.btcentralplus.com) (Ping timeout: 260 seconds)
[10:07:01] *** Quits: Palll (~Pall@2a00:23c5:fc89:aa01:3d2e:1fa0:edbb:cc33) (Ping timeout: 245 seconds)
[10:16:09] <WillPittenger> I'm getting an exception that reads "Operation is not valid while ItemsSource is in use. Access and modify elements with ItemsControl.ItemsSource instead."  I'm rather confused why.  It would help if I knew which control was involved.  It's several data template objects that are nested.  My code isn't attempting to manually add objects.
[10:22:39] <smallville7123_> what is the C# equivilant of Java's doubleToLongBits
[10:24:49] *** Joins: Guest48 (~textual@213-130-92-210.ip.btc-net.bg)
[10:29:23] *** Quits: Guest48 (~textual@213-130-92-210.ip.btc-net.bg) (Ping timeout: 260 seconds)
[10:34:50] <Andrio> smallville7123_, System.BitConverter.DoubleToInt64Bits
[10:40:07] <ASUS> Is C# too slow to make something like Crysis?
[10:47:49] *** Joins: martin__-- (~default@84-113-156-178.cable.dynamic.surfer.at)
[10:51:25] <smallville7123_> can i use DoubleToInt64Bits to implement Java's floatToRawIntBits ?
[10:51:45] <smallville7123_> specifically         return ((float.floatToRawIntBits(f) & FloatConsts.EXP_BIT_MASK) >> (FloatConsts.SIGNIFICAND_WIDTH - 1)) - FloatConsts.EXP_BIAS;
[10:53:12] <smallville7123_> https://cs.android.com/android/platform/superproject/+/master:libcore/ojluni/src/main/java/java/lang/Math.java;l=2367
[11:00:33] <smallville7123_> would this do?    https://stackoverflow.com/a/390072/8680581
[11:01:05] <smallville7123_> (tho it is for a double, would it work the same for a float? )
[11:03:22] <JakeSays> fucking amazon
[11:04:56] <smallville7123_> as java's EXP_BIT_MASK just references java's internal constants
[11:05:15] <smallville7123_> eg         public static final int EXP_BIT_MASK = jdk.internal.math.FloatConsts.EXP_BIT_MASK;
[11:07:05] *** Joins: kobo (~kobo___@c-d02b225c.029-1613-6f72651.bbcust.telenor.se)
[11:07:23] <JakeSays> smallville7123_: are you trying to port some java code?
[11:07:30] <smallville7123_> yes
[11:07:42] <JakeSays> then you should look at a tool called sharpen
[11:07:52] <smallville7123_> specifically Float.GetExponent
[11:08:17] <smallville7123_> Math.GetExponent   *
[11:08:31] <WillPittenger> https://docs.microsoft.com/en-us/answers/questions/797784/34operation-is-not-valid-while-itemssource-is-in-u.html'
[11:09:21] <JakeSays> so i ordered a new dyson v10 from amazon and they send me a used v11 pro
[11:11:19] <smallville7123_> will     DoubleToInt64Bits((double)float_value)   and     DoubleToInt64Bits(double_value)        return the same value as long as both float_value and double_value are equal?
[11:11:26] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:c0ae:3c7:95b4:d49d)
[11:12:39] <smallville7123_> eg
[11:12:41] <smallville7123_> public static long toLongBits(this float value) { return BitConverter.DoubleToInt64Bits((double)value); }
[11:14:14] <JakeSays> smallville7123_: exactly what are you trying to do? get the raw bits of a float?
[11:14:17] <smallville7123_> also would `return (float)BitConverter.Int64BitsToDouble(value);` produce the same value as the one that was used to produce the value
[11:15:02] <smallville7123_> or is this only gaurenteed for Double type?
[11:15:10] <JakeSays> smallville7123_: did you get the same result when you tried both?
[11:15:54] *** Joins: martin__--_ (~default@84-113-156-178.cable.dynamic.surfer.at)
[11:16:25] <smallville7123_> i have not tried yet
[11:16:50] *** Quits: martin__-- (~default@84-113-156-178.cable.dynamic.surfer.at) (Ping timeout: 246 seconds)
[11:17:01] <smallville7123_> but i assume a double converted into 64int and then back would be equal to the original double
[11:17:14] <smallville7123_> i dont know if the same is true for a float
[11:17:33] <smallville7123_> due to float->double and double->float conversions
[11:22:53] <JakeSays> smallville7123_: depends on how you do the conversion.
[11:23:25] <JakeSays> because semantically double -> uint64 -> double will only hold true for integers
[11:23:33] <smallville7123_> would simple casting work?
[11:23:53] <JakeSays> no. simple casting will truncate a double when converting to an int
[11:24:19] <JakeSays> so you have two options: use bit conversion functions, or use pointers
[11:24:55] <smallville7123_> eg
[11:24:56] <JakeSays> why do you want to convert a floating point value to an integer value?////
[11:24:57] <smallville7123_> double input = (double) float_input;    float float_output = (float) Int64BitsToDouble(DoubleToInt64Bits(input));
[11:25:20] <JakeSays> i dont understand what you're trying to do
[11:25:36] <JakeSays> i mean, for what reason
[11:26:14] <smallville7123_> would float_input be equal to float_output in the same sence as double input would assumably always be equal to double output (excpet for NaN and Inf as idk if those will always be convertable)
[11:27:21] <JakeSays> that's too ambiguous. there are several ways to convert between numeric types. i need to know why you want to do the conversion in the first place
[11:28:28] <smallville7123_> hmm ok
[11:29:21] <_genuser_>  hey people
[11:29:41] <JakeSays> _genuser_: 'sup ya texas punk
[11:30:09] <_genuser_> JakeSays not much man, just trying to boot up the kubuntu machine and it's not even starting up lol.
[11:30:22] <JakeSays> lol
[11:30:29] <_genuser_> looking at ubuntu budgie.
[11:30:57] <JakeSays> i'm trying to decide whether or not amazon screwed me
[11:31:08] <_genuser_> oh what did they do?
[11:31:37] <JakeSays> i ordered a new dyson v10 vacuum. they sent me a used v11 pro.
[11:31:55] <_genuser_> well that's a clear decision there.
[11:31:58] <_genuser_> send it back right away.
[11:32:03] <JakeSays> the v11 is quite a bit nicer and comes with an extra battery
[11:32:24] <_genuser_> was it shipped from amazon?
[11:32:28] <JakeSays> well, the v11 is about $250 more
[11:32:30] <JakeSays> yes
[11:32:31] <_genuser_> as in sold by someone and shipped by amazon?
[11:32:43] <_genuser_> then I'd say choice is between keeping it and letting them know.
[11:32:55] <_genuser_> I'd kinda recommend letting them know, so they don't come back for it later
[11:32:59] <_genuser_> or try to charge you 250.
[11:33:32] <smallville7123_> https://docs.oracle.com/javase/6/docs/api/java/lang/Double.html#doubleToLongBits(double)   this (and following) i guess
[11:33:37] <_genuser_> but it could be the vacuum santa was happy with you.
[11:33:39] <JakeSays> well they can't charge me the difference
[11:34:02] <smallville7123_> specifically "In all cases, the result is a long integer that, when given to the longBitsToDouble(long) method, will produce a floating-point value the same as the argument to doubleToRawLongBits. "
[11:34:03] <JakeSays> a used v11 pro is probably about the same price as a new v10 anyway
[11:34:28] <smallville7123_> and "In all cases, the result is a long integer that, when given to the longBitsToDouble(long) method, will produce a floating-point value the same as the argument to doubleToLongBits (except all NaN values are collapsed to a single "canonical" NaN value). "
[11:34:37] <_genuser_> I'd dislike a used one unless I had decided to buy used.
[11:35:01] <JakeSays> _genuser_: that's basically my issue.
[11:35:29] <_genuser_> if it has other people's armpit hair vacuumed up.... would you really enjoy vacuuming your carpets with it?
[11:35:37] <smallville7123_> also https://docs.oracle.com/javase/6/docs/api/java/lang/Float.html#floatToIntBits(float)
[11:35:38] <JakeSays> i dunno. i'm going to give it a try. maybe i'll like it so much it's worth keeping
[11:36:00] <smallville7123_> with basically the same as double but for float instead
[11:36:11] <_genuser_> it wo'nt have that new product smell....
[11:36:13] <JakeSays> _genuser_: it's really clean. i don't think it was actually used.
[11:36:18] <smallville7123_> JakeSays: that is what i want to reproduce in C#
[11:36:32] <smallville7123_> for both float and double types
[11:36:47] <JakeSays> smallville7123_: what i want is "i need to convert A to B because of this business reason"
[11:37:02] <JakeSays> i don't care what the java code is
[11:37:38] <_genuser_> JakeSays maybe a v11 returned so they sold it as used.
[11:37:50] <JakeSays> right
[11:39:07] <JakeSays> _genuser_: https://amz.run/5SlC - i can't tell exactly who was the seller
[11:39:27] <_genuser_> JakeSays their return process is pretty simple too now. you can do return online, then print label and take to UPS.Or just return and do Kohl's drop off, and show them the email with QR code off your phone. And they'll pack and ship the item.
[11:40:28] <JakeSays> _genuser_: i just have to take it to a ups store with the qr code.
[11:40:39] <_genuser_> JakeSays and they'll pack and ship?
[11:40:43] <JakeSays> but dammit i want a vac now
[11:40:47] <JakeSays> _genuser_: yes
[11:41:00] <_genuser_> JakeSays then it's the same as kohl's dropoff. I've just been dropping things off at the kohl's 2 blocks away.
[11:41:32] <JakeSays> yeah. it's super convenient. my ups store is just down the street
[11:41:54] <JakeSays> iirc i can also have ups pick it up from me
[11:41:56] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[11:42:17] <_genuser_> as much as amazon is runover by cheap chinese products, it's nice to see they've worked out the return process to 0 hassle with many brick and mortar stores.
[11:43:45] <JakeSays> right
[11:44:23] <JakeSays> "does battery charger itself need to be plugged in? all videos show the wall mount but nothing plugged in. Is this accurate or does it need outlet?" - wtf
[11:44:29] <JakeSays> people are so dumb
[11:45:02] <_genuser_> hey those people should be respected!
[11:46:56] <JakeSays> wtf. ok the seller has a 63% positive rating
[11:47:07] <_genuser_> you picked a winner.
[11:47:47] <JakeSays> i seriously thought i bought from the dyson store
[11:47:51] <JakeSays> wtf
[11:48:15] <_genuser_> I know exactly what happened there.
[11:48:31] <_genuser_> amazon will show the product manufacturer on the top in the "store" section.
[11:48:38] <_genuser_> So you'll see Store: Dyson.
[11:48:53] <_genuser_> but on the right side in the buy bar, it will show you the actual seller and the shipper.
[11:48:57] <JakeSays> exactly
[11:48:58] <JakeSays> fuck
[11:49:40] <JakeSays> so i look on the bottom of the battery. it says "v15" i'm not actually sure what i received
[11:49:50] <_genuser_> JakeSays check out: https://www.amazon.com/Dyson-Cordless-Handheld-Portable-Cleaner/dp/B07V39F8ZH/ref=sr_1_4?crid=1NIEWPN8MR8CI&keywords=dyson+v11&qid=1648883970&sprefix=dyson+v11%2Caps%2C103&sr=8-4
[11:50:02] <_genuser_> JakeSays the top says: Visit the Dyson Store.
[11:50:11] <_genuser_> then the right side bar shows somebody else selling and shipping it.
[11:50:53] <_genuser_> imo, not cool. But now that I know I just look at who's selling and shipping. For example laptops, and electronic gadgets (phones, etc) you NEVER want to buy from "TJ's electronics" out of michigan or somesuch
[11:51:16] <JakeSays> _genuser_: yeah that's exactly what happened
[11:51:23] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[11:51:37] <JakeSays> _genuser_: this was pro_tech from dayton ohio. lol
[11:52:31] <smallville7123> is float.Epsilon equivilant to Float.MIN_NORM?   public static final float MIN_NORMAL = 0x1.0p-126f; // 1.17549435E-38f
[11:52:32] <_genuser_> JakeSays I don't like that stuff. I just return it now.
[11:52:51] <_genuser_> JakeSays so I only buy something from non amazon if I want it and that's the only place.
[11:53:17] <_genuser_> then seller can be outsider but shipper amazon. Only reason to use seller/shipper someone else is if I really want something.
[11:53:51] *** Quits: smallville7123_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 260 seconds)
[11:54:12] *** Joins: smallville7123_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[11:54:19] * smallville7123_ windows wifi driver sucks
[11:54:33] <smallville7123_> "A constant holding the smallest positive normal value of type float"
[11:55:14] <JakeSays> _genuser_: yeah i think i'm going to
[11:56:01] <smallville7123_> as C# specifies Elsilon as public const Single Epsilon = 1.401298E-45F;
[11:56:03] <_genuser_> I generally never did returns. I've actually kept/thrown stuff I didn't like but didn't return because I didn't want to waste people's money.
[11:56:08] <_genuser_> JakeSays ^
[11:56:44] <_genuser_> JakeSays but now that amazon has allowed anybody and everybody to sell stuff, and most of it is just coming cheap from china (lot of times it's the exact same thing with 20 brands selling it), I don't want to worry about returning.
[11:56:58] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 260 seconds)
[11:59:28] <JakeSays> _genuser_: yeah
[12:00:29] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[12:06:38] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[12:09:09] *** Quits: DevJohnC (~DevJohnC@about/csharp/DevJohnC) (Read error: Connection reset by peer)
[12:14:52] <ASUS> What are Analyzers and Frameworks in Dependencies?
[12:14:57] <ASUS> I don't understand.
[12:15:51] <ASUS> Can the Main method be async?
[12:16:32] <ap5> Analyzers is something that hook into Roslyn and gives you insights in your code
[12:16:38] <ap5> Main can be async in the newer versions
[12:16:57] <ASUS> What is Roslyn?
[12:17:17] <ASUS> What is "Frameworks" inside Dependencies?
[12:17:18] <JakeSays> ASUS: what did google tell you?
[12:17:24] *** Joins: PeterR`` (~chillisau@88.103.230.136)
[12:17:25] <ASUS> Nothing.
[12:17:32] <JakeSays> try again
[12:17:45] <ap5> https://github.com/dotnet/roslyn
[12:17:58] <ap5> that is what google told me
[12:19:00] <ASUS> Roslyn is the C# and VB compiler for .NET.
[12:19:06] <ap5> along time ago compilers was a black box, but roslyn kind of changed that
[12:20:02] <ASUS> What about "Frameworks"
[12:20:35] <smallville7123_> does " IEEE 64-bit (8-byte) double-precision floating-point" from Visual Basic's documentation also apply to C#'s double type ?
[12:20:43] <ap5> That is just the different frameworks that is attached to your project
[12:21:00] <irwiss> it's the same type, but why the fuck would you use vb docs
[12:21:01] <ap5> smallville7123_, i dont know
[12:21:06] <ap5> :D
[12:21:21] <smallville7123_> as C# Documentation for Float and Double does not speciffy what IEEE standard is used
[12:21:42] <Andrio> smallville7123_, those are the same type.
[12:21:46] <smallville7123_> but odddly the VB docs do
[12:21:54] <irwiss> it's always the same ieee754, always
[12:22:03] <smallville7123_> Andrio: irwiss alright :)
[12:22:29] <irwiss> because any other fp format you'll lose hardware instructions and need to emulate everything in software
[12:23:37] <smallville7123_> alright :)
[12:24:37] <ASUS> What is a COM reference?
[12:24:45] <ASUS> What is COM?
[12:25:59] <JakeSays> ASUS: stop asking questions you can get from google or the ms docs
[12:26:25] <ASUS> Ok.... :(
[12:26:41] <ASUS> What JakeSays, does.
[12:30:41] <smallville7123_> does C# use "ieee754 binary32+binary64" on 32 bit systems ?
[12:31:08] <smallville7123_> or is "ieee754 binary32+binary64" only available for 64 bit systems?
[12:40:22] <Andrio> I don't think there's any such thing, but both binary32 and binary64 are available on both.
[12:42:29] <smallville7123_> ok :)
[12:46:09] <smallville7123_> is a byte gaurenteed to be 8 bits on 32 and 64 bit platforms
[12:46:22] <smallville7123_> as "byte	0 to 255	Unsigned 8-bit integer"
[12:46:50] <ap5> You really have to read the platform specification for that. Especially if it is little or big endian
[12:47:51] <smallville7123_> can i use the sizeof operator to obtain the size in bytes of the byte type ?
[12:48:00] <smallville7123_> size in bits*
[12:48:08] <Andrio> It's 8 bits, everywhere.
[12:48:33] <smallville7123_> Andrio: alright :)
[12:48:44] *** Joins: vim_fans (~pi@user/vim-fans/x-3284168)
[12:51:11] <vim_fans> hi,there. I got a class which has  c# keyword as attribute name.   like this: public int out{get;set}. I can prefix @ before the name. it work for me. but when i convert a json string which including keyword as field name into c# object, the @ doesn't work .
[12:51:56] <JakeSays> vim_fans: use a better name
[12:53:01] <MootPoot> Is there anywhere/anyone that is hiring developers ( jr or recent grads ) here?
[12:53:06] <vim_fans> JakeSays: the json stirng is created by third party.  it is the result returned by a RESTFUL API
[12:53:37] <vim_fans> JakeSays: I can not change it to better name.
[12:53:48] <JakeSays> vim_fans: but you can change the type name, right?
[12:54:41] <vim_fans>             dynamic model = JsonConvert.DeserializeObject<ExpandoObject>(ret, new ExpandoObjectConverter());
[12:55:02] <vim_fans> JakeSays: I use JsonConvert function to do the conversion
[12:55:11] <smallville7123_> Float_floatToRawIntBits(JNIEnv *env, jclass unused, jfloat v) {     union {         int i;         float f;     } u;     u.f = (float)v;     return (jint)u.i; }
[12:55:24] <smallville7123_> would this return the same result when converted to C#
[12:55:46] <JakeSays> vim_fans: i thought you had a concrete type
[12:56:51] <JakeSays> smallville7123_: you could actually convert that almost verbatim to c#
[12:57:12] <irwiss> vim_fans: iirc dynamics could also be used as dictionaries, or use a proper model and a binder attribute like normal people do
[12:57:26] <vim_fans> JakeSays: Is there any method to resolve my question ?
[12:57:33] <irwiss> there's also @ to squelch keywords but that doesn't always work
[12:58:27] *** Joins: vim_fans_ (~pi@user/vim-fans/x-3284168)
[12:59:24] <JakeSays> vim_fans: well, you write a concrete type that doesn't use dynamic. you then use the capabilities of json.net to map json members to class properties.
[13:01:23] <vim_fans_> JakeSays: sure. it should be work for me ...
[13:01:42] <JakeSays> vim_fans_: not sure what that means
[13:01:50] *** Quits: vim_fans (~pi@user/vim-fans/x-3284168) (Ping timeout: 246 seconds)
[13:05:22] <vim_fans_> JakeSays: sorry, I am not an English native speaker. I was trying say: I thought your recommendation method would be resolve my question"
[13:05:37] <JakeSays> vim_fans_: ah ok
[13:06:05] <vim_fans_> JakeSays: can you tell me how to say it in the right way?  I am here asking your English language question :D
[13:06:45] <JakeSays> "that will work"
[13:07:08] <vim_fans_> get it   ...
[13:07:42] <JakeSays> smallville7123_: public static unsafe int FloatBits(float f) => *((int*)&f);
[13:11:50] <smallville7123_> JakeSays: is there a safe version?
[13:11:59] <JakeSays> that is safe
[13:12:20] <smallville7123_> one that does not require "unsafe"
[13:12:29] <irwiss> BitConverter has tons of conversions like that
[13:12:47] <JakeSays> irwiss: for some reason he insists on writing his own
[13:13:00] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:c0ae:3c7:95b4:d49d) (Ping timeout: 240 seconds)
[13:13:09] <JakeSays> smallville7123_: there are lots of ways of writing that. i gave you the most efficient
[13:13:52] <smallville7123_> return BitConverter.ToInt32(BitConverter.GetBytes(value), 0);
[13:13:54] <smallville7123_> this?
[13:14:03] <JakeSays> no
[13:15:14] <JakeSays> smallville7123_: https://docs.microsoft.com/en-us/dotnet/api/system.bitconverter.singletoint32bits?view=net-6.0
[13:16:30] <smallville7123_> 'BitConverter' does not contain a definition for 'SingleToInt32Bits'
[13:17:08] <smallville7123_> rip .net standard 2.0
[13:17:34] <JakeSays> LOL
[13:17:58] <JakeSays> smallville7123_: it's in 2.1
[13:18:20] <irwiss> no reason to build against netstandard2.0 for years now
[13:19:00] <smallville7123_> "public static unsafe float Int32BitsToSingle(int value)"
[13:19:17] <smallville7123_> does this mean that anything linked with netstandard2.1 is ALSO unsafe ?
[13:19:32] <smallville7123_> eg allow unsafe code must be checked ?
[13:19:52] <JakeSays> no not at all
[13:20:13] <JakeSays> get over your hangup with the 'unsafe' keyword
[13:20:32] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:3523:4963:ba83:5394)
[13:20:35] <smallville7123_> can a library linked with "allow unsafe code" be linked to a library that does not link with "allow unsafe code" ?
[13:21:42] <JakeSays> smallville7123_: what happens when you try it
[13:22:10] <smallville7123_> i dont know
[13:22:34] <JakeSays> you are starting to get REALLY annoying
[13:22:57] <smallville7123_> sorry
[13:26:08] <irwiss> where did you even copy the unsafe keyword from? it's not on bitconverter method
[13:26:35] <JakeSays> irwiss: it is
[13:27:21] <JakeSays> irwiss: https://source.dot.net/#System.Private.CoreLib/BitConverter.cs,807
[13:27:25] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:3523:4963:ba83:5394) (Ping timeout: 240 seconds)
[13:27:33] <JakeSays> irwiss: i also wrote him one that used unsafe
[13:27:53] <irwiss> that's in netfx
[13:28:08] <JakeSays> what?
[13:28:29] <JakeSays> that's not netfx
[13:30:01] <irwiss> https://i.imgur.com/fRNFHfP.png
[13:30:07] <irwiss> that's in netstandard2.1
[13:30:40] * JakeSays shrugs
[13:34:12] *** Joins: Tobbi (~Tobbi@ip1f115d4d.dynamic.kabel-deutschland.de)
[13:35:08] *** Joins: vim_fans (~pi@user/vim-fans/x-3284168)
[13:37:55] *** Quits: vim_fans_ (~pi@user/vim-fans/x-3284168) (Ping timeout: 260 seconds)
[14:14:32] <smallville7123_> JakeSays: is ` *((int*)&f);` UB ? or is it only UB in C/C++  ?
[14:15:09] <JakeSays> smallville7123_: ub?
[14:15:56] <smallville7123_> but it will still work as intended ?
[14:16:17] <JakeSays> what is ub?
[14:16:18] <Suchiman> JakeSays: undefined behavior, how you not know this
[14:16:35] <JakeSays> Suchiman: because i don't speak in acronyms:p
[14:16:40] <smallville7123_> how can something be UB but still work as intended ?
[14:17:10] <JakeSays> smallville7123_: undefined behavior means that the behavior hasn't been defined by a standard, not that it won't work
[14:17:19] *** Joins: vim_fans_ (~pi@user/vim-fans/x-3284168)
[14:17:44] <JakeSays> smallville7123_: as you can see by looking at the .net source code, it works as intended
[14:18:25] <JakeSays> i cannot believe how much time you have wasted on this
[14:18:40] <Suchiman> JakeSays: not just his own :P
[14:18:48] <JakeSays> Suchiman: indeed!
[14:19:02] <JakeSays> he keeps asking the same shit over and over
[14:19:27] *** Quits: vim_fans (~pi@user/vim-fans/x-3284168) (Ping timeout: 260 seconds)
[14:20:10] <smallville7123_> "[19:47] <JakeSays> smallville7123_: as you can see by looking at the .net source code, it works as intended" so it... is both UB and also not UB ?
[14:20:27] <JakeSays> smallville7123_: does it really matter??
[14:20:58] <smallville7123_> i thought UB should always be avoided in production code
[14:21:25] <JakeSays> smallville7123_: it's framework code.
[14:21:29] <Suchiman> smallville7123_: undefined behavior means that the language specification does not say what should happen, so it's up to the compiler developers to do something in that case, which might vary by compiler, compiler version and whether you have optimizations enabled or not (typically compilers pick whatever computes the fastest when faced with UB)
[14:21:46] <Suchiman> C# / .NET have extremely few UB
[14:21:58] <JakeSays> smallville7123_: you know what shouldn't be avoided in production code? common sense.
[14:22:56] <smallville7123_> Suchiman: so it may be UB as far as .NET itself is conserned, but VALID as far as the compiler itself is conserned?
[14:23:28] <Suchiman> smallville7123_: that's how UB works
[14:24:11] <smallville7123_> and it just happens that in the compiler, ` *((int*)&f); ` is VALID ?
[14:24:23] <JakeSays> smallville7123_: why wouldn't it be?
[14:24:41] <JakeSays> you can tell instantly by looking that code that it's valid
[14:24:50] <Suchiman> smallville7123_: VALID does not mean compiles or doesn't compile, the specification says it should compile, but how exactly it is translated to machine code is not specified
[14:25:20] <smallville7123_> cus the sizes of float and int may differ depending on the compiler and language ?
[14:25:46] <JakeSays> smallville7123_: we're talking about c# here. they are never different sizes
[14:27:40] <smallville7123_> so all information contained in a float will not be lost when converted to an int and vice versa since both their sizes are the same?
[14:27:57] <JakeSays> smallville7123_: what do you think?
[14:28:16] <JakeSays> seriously - reason through what *((int*)&f) is doing
[14:30:47] <smallville7123_> or rather, does it only matter if this is true for the types of the language in question?
[14:30:48] <smallville7123_>  there are 64 bit platforms which are ILP64 , where int is 8 bytes but float is still 4 bytes. There are also 16 bit platforms where int is 2 bytes and float is still 4 bytes.
[14:30:50] <JakeSays> bah. google pissed in my wheaties
[14:31:32] <JakeSays> smallville7123_: we are only discussing .net in here. what other platforms/languages do is irrelevant
[14:31:45] <JakeSays> this isn't a CS 101 course
[14:31:54] <JakeSays> it's not even a course in anything
[14:32:10] <smallville7123_> sorry
[14:42:04] <irwiss> out of interest looked which platforms were ilp64, the most popular one can probably be most commonly found in landfills heh
[14:42:12] <Suchiman> Nasp: copilot is very useful :o https://welp.dev/devenv_2022-04-02_12-12-04.png
[14:42:29] * Suchiman rewriting js stuff to c#
[14:43:36] <Suchiman> irwiss: what's ILP64
[14:43:38] <irwiss> ffs stringified enums
[14:44:15] <smallville7123_> is there a difference between `(int)v` and `*(int*)&v`
[14:44:16] <irwiss> Suchiman: int long pointer are all 64 bit
[14:44:30] <Suchiman> smallville7123_: yes
[14:44:31] <irwiss> smallville7123_: try it and see what comes out
[14:44:44] <smallville7123_> ok
[14:45:13] <Suchiman> one difference is that the former has less characters typed than the latter :P
[14:46:42] <irwiss> Suchiman: ilp64 example from wikipedia is sparc64, last iteration of which was introduced in 2002 and most units are likely in the dumpster by now with a few collecting dust in some industrial workshop, all things considered
[14:47:09] <Suchiman> jhehe
[14:47:49] <smallville7123_> JakeSays: would this be correct?
[14:47:51] <smallville7123_>         public static unsafe int ToRawIntBits(this float value) => *(int*)&value;
[14:47:53] <smallville7123_>         public static unsafe float BitsToFloat(this int bits) => *(float*)&bits;
[14:50:08] <smallville7123_> and the same for Double except with long instead of int and double instead of float?
[14:51:23] *** Quits: Tobbi (~Tobbi@ip1f115d4d.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[14:52:10] <ap5> I have 5000 hours in dota ... i still play like shit
[14:52:49] <Suchiman> ap5: my condolences
[14:52:58] <ap5> :D
[14:53:59] <canton7> smallville7123_, Please stop asking people for help with every small part of your project. Imagine if everyone here did this: the channel would be a mess. You need to attempt to solve things yourself. Even then, this channel is not your personal help channel: places like StackOverflow and the #help channels on the C# Discord are better suited for
[14:53:59] <canton7> simple questions and answers. Thanks!
[14:54:42] <smallville7123_> sorry
[14:55:02] <ap5> smallville7123_, dont be. We have all been there
[15:00:15] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:6576:47b0:4677:7229)
[15:00:33] * Suchiman slaps ap5 around a bit with a large ghost flathead
[15:03:16] *** Quits: bin101 (~bin101@user/bin101) (Ping timeout: 245 seconds)
[15:06:43] *** Joins: bin101 (~bin101@user/bin101)
[15:07:03] <JakeSays> ap5: well, he's been there for many days now
[15:07:56] <JakeSays> someone go pick up my mail, dammit
[15:08:58] *** Joins: kiwi49 (~kiwi49@user/kiwi49)
[15:11:13] <ap5> yes yes
[15:15:00] <smallville7123_> https://stackoverflow.com/a/58214029/8680581    oh :(
[15:15:31] *** Joins: alguien (~alguien@user/alguien)
[15:19:50] <smallville7123_> does   *(int*)&value; only convert the float to it's integer representation and not to its binary representation ? as stated by "1234 as a float is 0x449A4000" and "1234 as an int is 0x000004D2"
[15:20:39] <Suchiman> you know, i really like stackoverflow's new design https://welp.dev/msedge_2022-04-02_12-50-29.png
[15:21:11] <ap5> I like the many different themes .D
[15:21:41] *** Joins: Klinda (~superleag@user/klinda)
[15:21:54] <irwiss> nothing wrong with win3.00 scroll bars
[15:22:06] <ap5> I actually like the terminal one :D
[15:25:17] <irwiss> smallville7123_: imo if you're confused about stuff like that you should bump your framework version to one where BitConverter has been made useful and use those methods, or start reading way in depth docs about unsafe operators
[15:26:27] <irwiss> also that post speaks about actual bit format for the different variable types, if you just finger the bits they stay the same, you'll just get nonsense if you try to read float as int or the other way
[15:27:17] <smallville7123_> irwiss: alright
[15:27:32] *** Quits: kobo (~kobo___@c-d02b225c.029-1613-6f72651.bbcust.telenor.se) (Ping timeout: 260 seconds)
[15:28:17] <smallville7123_> so in C#, *(int*)&value is equivilant to C++ reinterpret_cast which "that's reinterpreting the bits as something else."    right?
[15:28:50] <smallville7123_> and not for example, converting the `value` to its numarical representation
[15:29:48] <irwiss> yes, just (int)v will do the numerical cast and "round" toward zero
[15:30:05] <smallville7123_> alright :)
[15:30:07] <irwiss> tbh i don't even know what you're trying to do, but unless you're trying to one-up quake's fastinvsqrt there's not much uses to bit twiddling floats
[15:30:22] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:31:05] *** Joins: csrf (~csrf@user/csrf)
[15:31:15] *** Quits: vim_fans_ (~pi@user/vim-fans/x-3284168) (Quit: WeeChat 1.9.1)
[15:31:28] <smallville7123_> this would achieve the same as the above and the same as BitConverter.DoubleToInt64 right?     long ToRawLongBits(double value) => *(long*)&value
[15:33:18] * Suchiman slaps smallville7123_ around a bit with a large giant gourami
[15:33:29] <ASUS> How do I convert C source code to C#?
[15:33:54] <smallville7123_> ASUS: by finding equivilants to C in C# ?
[15:34:03] <ASUS> No, I mean using software
[15:34:13] <Suchiman> ASUS: so automatic conversion?
[15:34:18] <ASUS> yes
[15:34:18] <ap5> Google it
[15:34:40] <smallville7123_> ASUS: like convert an entire C project into a C# project?
[15:35:16] <irwiss> tbh just make expose the interface and pinvoke it, depending how bad the c code is it may cost you a few magnitudes less pain and tears
[15:35:18] <ASUS> I want a C# Linux kernel.
[15:35:26] <smallville7123_> eg converting a C lib to a C# lib by porting all its C files to equivilant C# files
[15:36:01] <smallville7123_> "[21:05] <ASUS> I want a C# Linux kernel."  oof, dont think that can be done easily if at all
[15:36:18] <Suchiman> ASUS: lol
[15:36:24] <ap5> 21:05 :D
[15:36:31] <ap5> Damn. It is 13:06 here
[15:36:37] <smallville7123_> assuming the mono runtime can even be ran from inside a kernel
[15:36:55] <Suchiman> smallville7123_: no but https://github.com/MichalStrehovsky/zerosharp can do it
[15:36:57] <ASUS> Then there wouldn't be any buffer overdlows
[15:37:06] <ASUS> C# is safer than C
[15:37:27] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 260 seconds)
[15:39:20] <smallville7123_> however such may inflate the kernel's size depending on how many nuget packages you depend on  (in certain devices that require some sort of kernel/boot image on a small EFI partition the addition of mono + dependant nuget packages could make the resulting kernel be unable to fit in the partition
[15:39:46] <smallville7123_> (tho it is unlikely it is still possible)
[15:41:11] <smallville7123_> also the kernel may run slower than its pure C counterpart, how much depends on the overhead of mono itself
[15:41:56] <ASUS> All I care about is no bugs in the kernel
[15:42:01] <ASUS> I'm sick of C
[15:42:04] <Suchiman> smallville7123_: https://github.com/CosmosOS/Cosmos https://github.com/mosa/MOSA-Project :D
[15:42:51] <smallville7123_> as i think mono is a VM or (CLR that interperates all the code) which is why it can be platform independant similar to JVM
[15:43:10] *** Joins: alguien (~alguien@user/alguien)
[15:43:26] <smallville7123_> ASUS: also porting the entire linux kernel IS NOT an easy task
[15:43:28] <Suchiman> smallville7123_: no mono compiles to machine code
[15:44:49] <smallville7123_> Suchiman: how can a DLL compiled on one platform run on another platform that also has mono, if the DLL is compiled to machine code?
[15:45:16] *** Quits: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[15:45:36] <smallville7123_> for example, a DLL compiled on windows, and the same DLL copied and ran in MonoAndroid or MonoIOS
[15:46:54] <smallville7123_> (and yes the dll DOES get loaded and ran by mono even tho it was built on a different platform, as i tried it before)
[15:48:01] <ASUS> smallville7123_, linus wrote the original linux kernel, can't be that hard
[15:49:07] <smallville7123_> ASUS: yea good luck porting a million files and ensuring correct behaviour of a million+ bug fixes and edge cases
[15:49:17] <smallville7123_> :)
[15:50:11] <smallville7123_> Suchiman: is the machine code just "bytecode" and not actual "binary machine code" (eg compiled to assembly and then assembled to native CPU machine code)
[15:51:01] <smallville7123_> or does mono translate all this native CPU machine code when it load a DLL that was compiled on another platform capable of running Mono ?
[15:54:02] * smallville7123_ decides to not dive into mono's magical capability to run a DLL on any platform supported by Mono
[15:54:11] <ASUS> it's a copy of java
[15:54:21] <ASUS> bytecode is just assembly language
[15:54:28] <ASUS> for a hypothetical processor
[15:54:33] <ASUS> that doesn't actually exist
[15:54:48] <ASUS> just like java.c files are
[15:54:57] <JakeSays> smallville7123_: machine code != bytecode
[15:55:20] <JakeSays> ASUS: it is not a copy of java. wtf
[15:57:16] <smallville7123_> JakeSays: so "magical" machine code conversions from/to all supported CPU's and Architectures supported by mono?
[15:57:38] <smallville7123_> eg from x86 to aarch64
[15:58:22] <JakeSays> smallville7123_: no. there is NO conversion from x86 to aarch64. that's not how it works.
[15:59:16] <JakeSays> a normal .net dll contains no machine code in it
[15:59:50] <ASUS> Java's concurrency is far superior to C#
[16:00:21] <JakeSays> ASUS: i seriously doubt that
[16:01:25] <smallville7123_> this?   "The Mono C# compiler generates images (.exe files) that contain CIL byte code that can be executed by any system that implements a Common Language Infrastructure virtual machine"
[16:01:40] <JakeSays> what about it?
[16:02:46] <smallville7123_> guess i misinterpreted "[21:13] <Suchiman> smallville7123_: no mono compiles to machine code"
[16:03:15] <smallville7123_> as in "no, im wrong, mono compiles to machine code"
[16:05:55] <smallville7123_> so, as per "that can be executed by any system that implements a Common Language Infrastructure virtual machine" , ASUS: [21:11] <smallville7123_> also the kernel may run slower than its pure C counterpart, how much slower depends on the overhead of mono VM itself
[16:06:30] <smallville7123_> or rather, it depends on the overhead of the "Common Language Infrastructure virtual machine"
[16:07:53] * smallville7123_ wonders how much slower it would actually be if the kernel was implemented in Java's JVM or Mono's CLI VM
[16:09:02] <MichaelLong> ever worked with the Eclipse IDE? imagine that on an OS level
[16:09:29] <smallville7123_> (assuming it can even be implemented on Java since Java has no concept of pointers)
[16:10:01] <smallville7123_> (or rather, it has no concept of pointer arithmatic)
[16:10:59] <smallville7123_> (tho it might be possible to "implement" or "expose" via JNI)
[16:11:22] <smallville7123_> MichaelLong: oof
[16:11:33] <smallville7123_> mega slow :)
[16:11:37] <Suchiman> smallville7123_: the C# compiler compiles to (C)IL bytecode, the mono runtime / coreclr / .net framework load this bytecode, JIT compile it to CPU instruction and run that. They also have various forms of AOT (ahead of time) compilation which does the translation to CPU instructions before running anything, as a kind of cache. And then there's CoreRT / NativeAOT which goes a step further and generates a full .exe / .dll of cpu instructions
[16:12:25] <smallville7123_> Suchiman: cool :)
[16:12:47] <Suchiman> smallville7123_: with the latter solution, you can write a kernel / run without OS, as demonstrated by zerosharp
[16:13:53] <smallville7123_> Suchiman: would   "(long*)&double_value" be equivilant to   BitConverter.DoubleToInt64Bits   or would DoubleToInt64Bits do extra checks when converting?
[16:14:45] <Suchiman> smallville7123_: yes, no
[16:15:09] <smallville7123_> "which goes a step further and generates a full .exe / .dll of cpu instructions" are there like fully static with to C/C++ runtime dependancies ?
[16:15:14] <smallville7123_> no*
[16:15:24] <Suchiman> smallville7123_: yes
[16:15:28] <smallville7123_> cool :)
[16:16:36] <smallville7123_> "[21:44] <Suchiman> smallville7123_: yes, no" as in yes it is equivilant and no DoubleToInt64Bits does not do extra checks ?
[16:16:43] <Suchiman> yes
[16:16:47] <smallville7123_> ok :)
[16:16:57] <Suchiman> yes
[16:20:22] <JakeSays> well fun. i just lost my download directory
[16:21:17] <JakeSays> Suchiman: stop encouraging him, dammit
[16:27:26] <Suchiman> JakeSays: yes
[16:29:26] *** Quits: eto (~eto@S010690724005a172.vc.shawcable.net) (Quit: ZNC - http://znc.in)
[16:31:16] <bpmedley> JakeSays : Lost?
[16:33:22] *** Joins: eto (~eto@S010690724005a172.vc.shawcable.net)
[16:37:54] <JakeSays> bpmedley: yeah. not exactly sure how
[16:38:10] <bpmedley> Are you like me and put all manner of stuff in there?
[16:38:20] <ASUS> ramsonware
[16:38:21] <JakeSays> bpmedley: LOL yes
[16:38:29] <ASUS> 2 bitcoins to get it back
[16:38:50] <bpmedley> JakeSays : Why do we always loose the most important directories?
[16:38:59] <JakeSays> i was trying to move a zfs dataset
[16:39:33] <bpmedley> Very frustrating, that sux
[16:39:33] <JakeSays> bpmedley: well, fortunately there was nothing life shattering in there (fingers crossed)
[16:46:20] <ASUS> I installed visual studio 2022 enterprise and the font changed to courier new
[16:46:24] <ASUS> it's so hard to read the code
[16:48:18] <Suchiman> ASUS: courier new? dafuq? it should change to microsofts new programmer font, the old font name is consolas which is the best anyway IMO :P
[16:52:38] <knife> so there is literally not an easy way to statically link glib?
[16:53:26] <Suchiman> knife: huh? what are you doing?
[16:54:25] <knife> im trying to compile a single binary on a rhel 7 box that can run on rhel 6 with the command I will now paste
[16:55:23] <knife> dotnet publish -r linux-x64 -p:PublishSingleFile=true --self-contained true -p:IncludeNativeLibrariesForSelfExtract=true -p:PublishTrimmed=true -p:PublishReadyToRun=true
[16:56:11] <knife> that does not let me run the compiled program on an inferior system
[16:56:42] <bpmedley> knife : Are there still compat libaries for rhel 6 on rhel 7?  I've used something like that for compiling on rhel N-1.  However, I have never compiled a .NET app in such a manner.
[16:56:42] <knife> so far I cannot find out how to force it to statically link glibc
[16:56:58] <Suchiman> knife: what if you use `-r rhel.6-x64`
[16:57:08] *** Joins: Roughy (~mdaw45ns@user/roughy)
[16:57:18] <knife> is that a valid -r flag?
[16:57:25] <Suchiman> knife: i think so
[16:57:34] <Suchiman> try it, it will tell you
[16:57:37] <knife> the documentation is flaky on those -r flags
[16:58:49] <knife> i will have  to wait until monday to find out but thank you for that sugestion
[17:05:18] <bpmedley> How do I know when the Duende licensing changes will require production commercial license?  I've done a lot of reading, but I'm not sure which nuget packages are dual licensed.
[17:43:40] <ASUS> how do I make sure my C# program is unhackable
[17:44:22] <Suchiman> ASUS: you can't
[17:44:45] <ASUS> What do I tell my boss when someone injects DROP TABLE Customers;
[17:45:28] <kiwi49> You don't because you don't allow for SQL injection
[17:45:56] <Suchiman> ASUS: well that is a more reasonable question, how do i avoid SQL injection -> use an ORM or at least parameterized SQL, then you cannot be SQL injected
[17:49:01] <JakeSays> ASUS: you tell him "ya should have hired someone smarter"
[17:49:22] <bpmedley> ASUS : The app will be performant now
[17:49:35] <Suchiman> bpmedley: xD
[18:02:12] *** Joins: dan01 (~dan01@2a02:2f09:360d:2e00:d5b8:f1ed:67a5:b9d3)
[18:34:43] *** Quits: smallville7123_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 260 seconds)
[18:38:18] *** Joins: ccallahan (~quassel@redhat/ccallahan)
[18:44:48] *** Joins: Pall (~Pall@2a00:23c5:fc89:aa01:99c9:713e:1fd9:7a6c)
[19:16:43] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Quit: ZNC - https://znc.in)
[19:54:04] <JakeSays> bpmedley: heh. turns out i had accidentally unmounted my downloads directory
[20:03:27] <bpmedley> Phew
[20:04:03] <Suchiman> https://github.com/nightscout/cgm-remote-monitor/blob/4750f13f9ed71a72f26fb0726f155ed78bf3566b/lib/server/env.js#L80 bahaha when JS folks do "security"
[20:05:46] <bpmedley> Suchiman : Doesn't like 93 do exactly what the comment says it shouldn't?
[20:05:51] <Suchiman> bpmedley: yes
[20:06:05] <bpmedley> I guess it's a const, so its ok
[20:06:20] <Suchiman> xD
[20:06:30] <ern> Does it really matter?
[20:06:43] <ern> But entropy etc. wtf
[20:06:48] <bpmedley> No clue, honestly.  I didn't read for context..
[20:07:26] <Suchiman> ern: i highly doubt it makes a difference, at worst it makes it worse if readENV creates a copy which would then spray that secret string around the heap lol
[20:08:55] <ern> yup
[20:09:19] <ern> But where should you keep the secrets? If you need to speak to APIs etc you need them keys in the runtime
[20:09:37] <Suchiman> ern: this is actually the secret that api itself is protected against from callers
[20:10:00] <ern> Ah, but then it's known widely
[20:10:03] <ern> by all callers!
[20:10:05] <ern> (or else)
[20:10:07] <Suchiman> ern: yeah xD
[20:10:18] <Suchiman> ern: well, authorized callers at least :P
[20:10:27] <ern> I work security. Every time the network team fucks up and the networks become unavailable, I am very happy
[20:10:31] <ern> because then it's very secure
[20:10:43] <ern> And I tell the system owners so. "You are secure now."
[20:10:43] <JakeSays> if i had security concerns js wouldn't be the first place i'd look for a solution
[20:10:49] <Suchiman> ern: xDDD
[20:11:05] <ern> Then, of course, I help to resolve the issue.
[20:11:20] <ern> But I say "I approve of your security approach to disconnect entirely. It makes you safe."
[20:11:38] <Suchiman> ern: so you're on red team :P ?
[20:12:01] <Suchiman> ern: air gapped systems are TIGHT
[20:13:01] <ern> Air gapped does not help if you have a keen enough opponent :/
[20:13:16] <ern> See the Iranian centrifuges
[20:14:26] <Nasp> I find that security is never a high priority, until someone finds a hole you already knew about
[20:17:55] <JakeSays> Suchiman: security issues are almost always due to air gapped systems
[20:18:04] <Suchiman> JakeSays: huh?
[20:18:08] <JakeSays> the air gaps between ears
[20:18:14] <Suchiman> ._.
[20:18:18] <JakeSays> lol
[20:18:32] <JakeSays> hey it was VERY funny in my head
[20:18:35] <Nasp> Not sure if that was a good or really bad one :D
[20:18:44] <Nasp> It was funny in your air filled head you say?
[20:18:48] <Suchiman> JakeSays: i bet it was echoing endlessly
[20:18:54] <JakeSays> LOL
[20:19:46] <Nasp> Someone at work pitched the idea that we should get new laptops every 3 years
[20:19:52] <Nasp> And i'm like "I thought the default was every 2 years"
[20:19:57] <Suchiman> Nasp: github copilot is scarily good
[20:20:30] <Nasp> Hmm
[20:20:38] <Nasp> And i can use it in vscode or how is it?
[20:20:48] <Nasp> I've considered if i should switch from VS to VSCode or rider
[20:20:54] <Nasp> Getting quite annyoing be the sluggishness of VS
[20:21:11] <Suchiman> Nasp: like i'm declaring domain specific constants of the diabetis space and it guesses very good default values
[20:21:32] <Suchiman> Nasp: https://welp.dev/devenv_2022-04-02_12-12-04.png
[20:21:47] <JakeSays> Nasp: the .net support in vs code is absolute crap. you won't be happy.
[20:21:55] <Suchiman> Nasp: it works both in VS and VSC
[20:22:04] <Nasp> JakeSays:  Yeah i remember from last time i tried using VSCode
[20:22:18] <Nasp>  Suchiman  It also writes comment?
[20:22:37] <Nasp> I just want 2013 intellisense back
[20:22:48] <Suchiman> Nasp: yeah, i typed "//" and the first thing it did was insult me https://welp.dev/devenv_2022-04-01_22-33-23.png
[20:22:50] <Nasp> Where it could suggest variables
[20:22:57] <Nasp> Yeah i remember
[20:23:14] <JakeSays> can't you disable intellisense in vs and use r#'s?
[20:23:34] <JakeSays> Suchiman: it wrote that comment?
[20:23:38] <Suchiman> JakeSays: yes
[20:23:44] <JakeSays> LOL
[20:23:55] <JakeSays> is it accurate?
[20:24:02] <Suchiman> JakeSays: unfortunately
[20:24:42] <Nasp> JakeSays:  But R# suuucks
[20:24:53] <Nasp> Also why im' hesitant against Rider, it has annoying keybinds
[20:26:31] <JakeSays> Suchiman: LOL
[20:26:50] <Nasp> I'm hungry, not sure what to get :/
[20:26:56] <JakeSays> Nasp: huh? it has whatever key bindings you want it to have
[20:27:13] <Nasp> JakeSays: but it's default is quite far from what i'm used to
[20:27:18] <Nasp> Need to spend some time rebinding it all
[20:27:21] <Nasp> But i could ofc try that
[20:27:33] <JakeSays> Nasp: all you have to do is select the vs defaults
[20:27:48] <Nasp> That's the wrong VS defaults
[20:27:58] <JakeSays> ..
[20:27:59] <Nasp> I'm used to the Press F5 to build VS keybinds
[20:28:07] <Nasp> And Resharper and Rider usually does not support that
[20:28:10] <Suchiman> Nasp: like, i was declaring public const int MAX_BG_MGDL and it was like "how about `= 400;`" which is... fair, i've kept that lol
[20:28:35] <JakeSays> since when is F5 build in vs
[20:28:41] <Suchiman> JakeSays: always has been
[20:28:46] <JakeSays> it's never been
[20:28:47] <Suchiman> JakeSays: well, start debug
[20:28:49] <JakeSays> it's debug
[20:28:58] <Suchiman> which performs a build
[20:28:59] <Suchiman> xD
[20:29:06] <Nasp> Suchiman:  Mad blood glucose?
[20:29:07] <Nasp> max*
[20:29:13] <Suchiman> Nasp: yeah
[20:29:17] <JakeSays> Suchiman: only if you have it set to do so:p
[20:29:22] <Nasp>  well F6 to build F5 to run
[20:30:14] <ASUS> Why not call C# C++++?
[20:30:30] <Suchiman> ASUS: the former is easier to type
[20:30:46] <ASUS> Yeah, but "C++++" is cooler.'
[20:31:05] <Suchiman> ASUS: https://www.donnfelker.com/wp-content/uploads/WindowsLiveWriter/HowDidCGetItsName_67EC/csharpOrigins_3.png
[20:32:11] <Nasp> That just makes it sound like the energy standard for fridges
[20:32:14] <Nasp> B+ rating :D
[20:32:22] <Suchiman> ASUS: btw. the original name for C#... "The code name was Cool, which stood for ‘C like Object Oriented Language’. We kind of liked that name: all of our files were called .cool and that was kind of cool! We looked seriously at keeping the name for the final product but it was just not feasible from a trademark perspective, as there were way too many cool things out there."
[20:32:51] <ASUS> lol
[20:33:21] <Nasp> That was a good choice
[20:33:25] <Nasp> To not keep
[20:33:52] <JakeSays> i once found .cool files in a RC source tree of windows xp
[20:35:36] <ASUS> Did they call it Windows XP because they learned from their mistakes like Windows 98 and Windows 95?
[20:36:12] <Nasp> Or they use extreme progamming to make it
[20:36:30] <JakeSays> XP == experience
[20:36:40] <JakeSays> the Windows eXPerience
[20:36:45] <JakeSays> and boy was it
[20:36:59] <ASUS> didn't xp crash a lot
[20:37:02] <Nasp> Too two service packs to fix it
[20:37:04] <Nasp> took*
[20:37:08] <Nasp> Most just dont remember that
[20:37:47] <ASUS> Why was Microsoft so buggy in the past but they managed to make things stable with Windows 11?
[20:37:54] <JakeSays> Suchiman: how did you get in on the close copilot beta?
[20:37:56] <Suchiman> ASUS: LOL
[20:38:10] <JakeSays> ASUS: because ms is full of humans
[20:38:21] <Suchiman> JakeSays: you go here, https://copilot.github.com/ , click on sign up and wait
[20:38:30] <JakeSays> i did
[20:38:36] <JakeSays> but i don't wanna wait!
[20:39:32] <Nasp> There is no Windows 11
[20:39:37] <Nasp> It's just a skip for Windows 10
[20:39:42] <Nasp> Which is a skin on windows 8
[20:39:44] <Nasp> And so on :D
[20:40:10] <JakeSays> yeah. it's really windows NT 3.1
[20:40:35] <Suchiman> JakeSays: i signed up thursday morning, got in friday evening
[20:40:50] <JakeSays> Suchiman: this past thursday?
[20:40:54] <Suchiman> yes
[20:41:04] <JakeSays> ah. cool. i just signed up
[20:42:04] <Nasp> Same here
[20:42:17] <Nasp> Windows 11 just feels wrong when you hve to right click and have a menu for the old context menu
[20:42:28] <Nasp> And some of the UI is just way too tablet friendly
[20:46:06] <bpmedley> ern : https://dev.to/avalonia/avalonia-mobile-is-here-1i4f  <-- Omg
[20:46:10] <ASUS> I signed up for copilot.
[20:46:20] <bpmedley> oops, didn't mean to use your nick
[20:46:52] <JakeSays> bpmedley: you seem awfully excited
[20:47:45] <bpmedley> Yeah, mobile support feels like a great win.  Hopefully we'll have commercial widgets soon, JakeSays .
[20:47:49] <JakeSays> i won't be excited until it renders its own controls
[20:47:58] <bpmedley> Own controls?
[20:48:05] <Suchiman> JakeSays: avalonia renders its own controls?
[20:48:14] <Suchiman> JakeSays: it's not MAUI
[20:48:56] <JakeSays> Suchiman: they were working on a skia backend. not sure how far they got
[20:49:34] <JakeSays> Suchiman: and i'm aware it's not maui :p
[20:49:50] <JakeSays> Suchiman: although maui also is working on a native renderer
[20:50:18] <bpmedley> JakeSays : Are you saying Avalonia should render OS specific controls?
[20:50:42] <JakeSays> bpmedley: yes
[20:50:53] <JakeSays> just like wpf
[20:51:06] <bpmedley> The entire point of Avalonia is consistent UI across platforms..
[20:51:41] <JakeSays> bpmedley: wut?
[20:52:26] <Nasp> Anyone use Angular?
[20:52:27] <JakeSays> bpmedley: avalonia uses native controls.
[20:52:35] <Nasp> We use it at work and man it has like 2-3 minutes compile time
[20:52:36] <Suchiman> bpmedley: no
[20:52:36] <Nasp> I dont get it
[20:52:40] <Suchiman> JakeSays: no
[20:52:46] <bpmedley> JakeSays : Avalonia allows creating applications that look and behave the same on most popular Desktop platforms (Windows, Mac, various flavors of Linux) while also allowing platform specific customizations.
[20:52:50] <JakeSays> Suchiman: no
[20:52:54] <bpmedley> https://docs.avaloniaui.net/
[20:53:19] <JakeSays> bpmedley: "Avalonia accomplishes cross-platform support by relying on Skia as a rendering engine while utilizing native windowing backends for Win32, X11, and macOS."
[20:53:45] <bpmedley> My point is that the goals of Avalonia can not use native controls..
[20:54:02] <JakeSays> now what exactly do they mean by "windowing backend"
[20:54:24] <JakeSays> when avalonia started it was just another  xamarin forms type meta-framework
[20:54:39] <JakeSays> way back when they were perspex
[20:54:58] <Suchiman> JakeSays: they did not
[20:55:03] <Suchiman> JakeSays: they always rendered to skia
[20:55:08] <Suchiman> which is why they looked... not good early on
[20:55:25] <JakeSays> Suchiman: that is not true. i had a very long discussion with them about it
[20:55:28] <Suchiman> JakeSays: the "windowing" backends just means, open a windows, get a hwnd, draw on it i think
[20:55:37] <JakeSays> they started as an abstraction framework
[20:56:01] <bpmedley> I feel you will be waiting a long time JakeSays.  I don't think I've ever read that Avalonia will change from consistent and agnostic look to a per-OS look.
[20:56:22] <JakeSays> bpmedley: i don't want a per os look
[20:56:46] <bpmedley> You want a consistent look across platforms with native os controls?
[20:57:02] <JakeSays> i had a very long and heated discussion with those guys about getting them to write a skia backend. they thought it was a dumb idea initally
[20:57:08] <JakeSays> bpmedley: lol no
[20:57:17] <JakeSays> i don't *want* native os controls
[20:57:27] <Nasp> yay just got assigned a bug from our automatic ML ticket assigner
[20:57:53] <bpmedley> Sorry, when I said "os specific controls", I meant "native".
[20:58:36] <JakeSays> initially used platform controls
[21:00:58] <bpmedley> The type 'UIResponder' is defined in an assembly that is not referenced
[21:01:07] <bpmedley> So sad.  I get excited and nothing works..
[21:01:29] <JakeSays> bpmedley: lol
[21:02:13] <bpmedley> JakeSays : I hear that you want something that Avalonia does not provide.   However, I'm not 100% sure if I'm understanding.  You want a specific look per-OS built using something like Skia?
[21:02:53] <Nasp> bpmedley: Are you on C# inn?
[21:02:57] <Nasp> And was it you who linked it to me?
[21:03:13] <bpmedley> Nasp , Yes I am on there.  What does "linking" mean?
[21:03:22] <Nasp> Well i dont know how i got the link to the server
[21:03:33] <bpmedley> Within the past few minutes?
[21:03:45] <JakeSays> bpmedley: well, it may be provided now, but in the beginning of avalonia's existence, they used platform controls (native controls). i wanted them to *not* use native controls and render everything with skia. looks like they went in that direction.
[21:03:53] <Nasp> bpmedley: No 2-3 months aog
[21:03:58] <bpmedley> JakeSays , I think they use Skia now.
[21:04:06] <Nasp> It's better than that other discord, but it still seems like a lot of home work questions
[21:04:11] <bpmedley> Nasp : I may have given a link in irc chat.
[21:07:59] <bpmedley> Nasp : Just looked.  I did not give you a link.
[21:08:10] <Nasp> Oh well
[21:08:16] <Nasp> Just saw your name there yesterday
[21:08:20] <bpmedley> I did put a link in chat, though.
[21:08:38] <bpmedley> Yeah, I'm off and on on C# Inn.
[21:08:53] <JakeSays> huh. well now that it's skia based it may be usable
[21:09:17] *** Joins: bomb (~bomb@user/bomb)
[21:09:27] <JakeSays> i wonder if they're getting funding
[21:10:10] <bomb> get funded or get fuckd. that's the name of the game
[21:11:50] <bpmedley> https://docs.avaloniaui.net/docs/getting-started/programming-with-avalonia/graphics-and-animations  <-- JakeSays , •[3]
[21:13:47] *** Joins: DoofusCanadensis (~DoofusCan@2604:3d09:47c:f970::23f5)
[21:16:36] <bomb> Avalonia has no future
[21:17:07] <bpmedley> bomb : Why?
[21:20:58] <bomb> bpmedley it's a solution looking for a problem. unsustainable development lifecycle
[21:21:13] <bpmedley> Could be.  I feel it's growing in popularity.
[21:22:32] <bomb> I hope so. it's more promising than MAUI
[21:22:56] <JakeSays> wow. avalonia has come a long way
[21:23:08] <bpmedley> \o/
[21:23:11] <bomb> yeah, they're not giving up
[21:23:39] <bpmedley> JakeSays : It needs a widget pack
[21:23:39] <JakeSays> bomb: "it's a solution looking for a problem" is probably one of the dumbest things you've said in a very long time
[21:23:44] <bomb> it's probably the closest one to the success among MAUI, Uno, and even Xamarin...
[21:24:01] <bomb> JakeSays cool, use Avalonia for your next project, then
[21:25:03] <JakeSays> bomb: why would i do that?
[21:25:14] <bomb> exactly. jackass
[21:25:35] <JakeSays> bomb: the fact that you don't see the problem avalonia is trying to solve is mind boggling.
[21:26:25] <DoofusCanadensis> girls. girls. you're both pretty
[21:26:26] <JakeSays> "avalonia has no future because it doesn't solve a problem" - dumb
[21:26:30] <bomb> you're dumbass
[21:26:38] <bomb> I didn't say it wasn't solving a problem
[21:27:01] <JakeSays> bomb: that's exactly what you said
[21:27:11] <JakeSays> "a solution looking for a problem"
[21:27:38] <bomb> piss off illiterate old fart. go read some books
[21:28:11] <JakeSays> bomb: aww now don't get your vagina bent out of shape
[21:29:14] *** Quits: Azrael_- (~aweoi@51.154.62.124) (Read error: Connection reset by peer)
[21:30:15] <JakeSays> bpmedley: i tried the avalonia rider plugin.. didn't get far
[21:30:54] <bpmedley> JakeSays : Yeah.  The iOS didn't work either.  Also, once running, the widget support is "low".
[21:31:56] <JakeSays> well damn
[21:42:49] <bomb> suck it up
[21:44:14] <bomb> https://i.imgur.com/hAS3uxj.png
[21:45:17] <ASUS> more like let's trust business, OK
[21:45:44] <ASUS> the government is the only thing stopping businesses consuming everything and everyone
[21:45:55] <bomb> governments are corporations puppets, so...
[21:46:12] <ASUS> governments create regulations
[21:46:23] <bomb> hah, you think governments are protecting you from businesses?
[21:46:23] <ASUS> to control business
[21:46:31] <ASUS> in some ways yes
[21:46:32] <ern> ASUS: See the development of 737-max
[21:46:38] <bomb> most of those regulations are for gatekeeping
[21:46:42] <ern> Government made Boeing create their own regulations
[21:46:44] <bomb> so you don't enter the market and rival a big product
[21:46:49] <ern> It's all good
[21:47:15] *** Joins: Slade (uid128877@user/slade)
[21:47:26] <ern> the Slade!
[21:51:26] <Slade> howdy
[21:52:31] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Remote host closed the connection)
[21:53:53] <Slade> wow even the nutty 9's not playing games with woke culture   https://www.washingtonexaminer.com/news/oberlin-must-pay-record-31m-award-to-bakery-it-defamed-as-racist-says-appeals-court
[21:54:42] <Slade> The initial award by Lorain County Judge John Miraldi in 2019 was later reduced to $25 million plus $6 million in legal fees   <-- course its still better to be the lawyer
[21:55:34] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[21:56:06] <JakeSays> so does java not have type inference?
[21:56:28] <bpmedley> School sactioned protests of arresting wine thieves.  Definitely a college town..
[21:59:29] <bomb> Java has var keyword for the last 4 years
[22:05:38] <Slade> bpmedley: indeed
[22:09:08] <JakeSays> bpmedley: so arresting thieves is a bad thing?
[22:09:27] <bpmedley> JakeSays : According to the article, that's what the college was saying.
[22:09:48] <JakeSays> ah
[22:10:56] <bomb> does it talk about the $950 shoplifting law in CA?
[22:11:29] <bpmedley> bomb : The article was put in chat a few messages ago..
[22:12:03] <bomb> I asked a simple question, you read it or not?
[22:12:26] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: The Game)
[22:14:20] <bpmedley> bomb : I did read the question.  Sorry my answer was incomplete.  On my part, I do not recall.  If you would like to know, I could repost the url or, if you have the url in chat, maybe read it?
[22:15:09] <bomb> I've seen the URL. but I didn't click, so I didn't read.
[22:16:10] <JakeSays> bomb: do your own reading, you lazy fuck :p
[22:16:35] <bomb> dat artikl to lon
[22:18:01] <bomb> and u owe me an apologize JakeSays
[22:18:24] <Nasp> bomb:  what's the 950 dollar law?
[22:18:56] <bomb> Nasp it's fine if you steal less that $950 worth of goods in California
[22:19:32] <Nasp> In total or for each store?
[22:19:50] <bomb> lol
[22:20:00] *** Joins: Miles9of9 (~obrien@93-34-146-223.ip50.fastwebnet.it)
[22:20:11] <Nasp> But well it's probably to save money overall if you need to prosecure each thief
[22:21:07] <bomb> https://www.youtube.com/watch?v=KJcWFkRiKIU
[22:23:03] *** Quits: Miles8of9 (~obrien@93-34-146-223.ip50.fastwebnet.it) (Ping timeout: 250 seconds)
[22:24:20] <Nasp> bomb: Maybe he should move his business
[22:26:08] <bomb> Nasp he needs to move to another state, apparently. not easy
[22:26:42] <bomb> this is the law: https://en.wikipedia.org/wiki/2014_California_Proposition_47
[22:27:13] <Diablo-D3> wait, a cali prop that isnt a trainwreck?
[22:27:16] <Diablo-D3> wht am I missing?
[22:28:01] <Nasp> bomb:  yeah i found it
[22:28:23] <Nasp> bomb: Also that's a problem around the world i think
[22:28:32] <Nasp> Some people are too poor or do too much drugs and need to steal
[22:29:02] <Diablo-D3> tbf
[22:29:07] <Diablo-D3> if you need to use drugs, you need help
[22:29:13] <Diablo-D3> you shouldnt be punished for needing help
[22:29:33] <Diablo-D3> the west calls itself christian, and what is more christian than helping thy neighbor, eh?
[22:29:42] * Diablo-D3 yeets everyone under the bus, qed
[22:30:37] <Nasp> Just do like the old days and take a hand for each time people do thievery
[22:30:57] <bpmedley> What we need is more bread and circus for bribes and such
[22:31:02] <Diablo-D3> Nasp: which is immoral due to weaponized liars.
[22:31:15] <Diablo-D3> and stories of that are also as old as the bible, so nothing new there
[22:31:33] <Nasp> Regardless up the punishment for crimes
[22:32:09] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[22:32:17] <bomb> Wikipedia article claims there is spike after that law
[22:32:51] <Diablo-D3> bomb: wikipedia elsewhere also cites claims on how police forces in the west, and the US in particular, regularly refuse to document crimes as it makes their numbers look bad
[22:33:45] <Nasp> Ofc
[22:34:09] <Nasp> Anything yo ucan do to avoid more paperwork
[22:34:17] <Nasp> So easier to just decline people or change the categories
[22:34:25] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Client Quit)
[22:34:33] <bomb> Wikipedia is full of lies, I'm not denying that
[22:35:00] <bomb> but that $950 law is still weird
[22:35:14] *** Quits: ASUS (~ASUS@user/ASUS) (Quit: Leaving)
[22:36:57] <Diablo-D3> Nasp: yup, and it sucks
[22:37:09] <Diablo-D3> like, as many times as I've said ACAB in my life, its not inherently 100% true
[22:37:12] <Diablo-D3> its a lie of omission
[22:37:18] <Diablo-D3> *everyone* is a bastard
[22:37:20] <bpmedley> LG refrigerators with Craft Ice  <-- Omg, round ice.
[22:37:23] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:6576:47b0:4677:7229) (Ping timeout: 260 seconds)
[22:37:32] <ern> Lucky Goldstar
[22:37:34] <Nasp> I somehow expensive the police to be uphold to the highest standards
[22:37:35] <Nasp> But nope
[22:37:42] <Nasp> They cover each others asses when they break the law
[22:37:43] <Nasp> That's not okay
[22:37:48] <Diablo-D3> yes, because they, too, are bastards
[22:37:56] <Diablo-D3> and they are basically required to be so
[22:37:58] <bomb> copstards
[22:38:02] <bomb> poptarts
[22:38:14] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:e14b:b35c:9d30:4a6c)
[22:38:24] <Diablo-D3> if you dont march to the orders, they single you out and fuck you
[22:38:36] <Diablo-D3> because they all know if the jig is ever up, they all get thrown under the bus
[22:38:40] <Nasp> Still why have them then
[22:38:46] <Diablo-D3> its like being a criminal enterprise in plain sight
[22:38:52] <Nasp> If they can just break the law, beat people up and get away with it
[22:38:53] <Diablo-D3> Nasp: because of a few reasons
[22:39:02] <Diablo-D3> most people dont understand it
[22:39:10] <Diablo-D3> a) violent criminals exist
[22:39:22] <Diablo-D3> b) we *produce* violent criminals <-- this is the important one that allows c to exist
[22:39:36] <Diablo-D3> c) we need violent criminals on the payroll to kill the violent criminals not on the payroll
[22:39:56] <Diablo-D3> we will always need people to be c, as a society, we need to strive to produce as little of b as possible to require as little of c as possible
[22:40:24] <Diablo-D3> but since we dont care about b, and the government tries to produce as much of b as possible as its profitable for the super-rich, then we need to multi-task the guys doing c for jobs they're not suited for
[22:40:39] <Diablo-D3> a lot of b didnt start out that way, they just needed a functioning mental health system
[22:40:50] <Diablo-D3> every country thats ever had one has a low rate of b production
[22:40:59] <Nasp> Sure i know why we need them
[22:41:05] <Nasp> But i dont understand how they can get away with it
[22:41:10] <Nasp> Like i'm at the point why have laws
[22:41:10] <Diablo-D3> because we allow it.
[22:41:19] <Diablo-D3> we all consent to this.
[22:41:32] <Diablo-D3> you and I personally dont consent, but we live in a democracy
[22:41:53] <Diablo-D3> the voice o logic will always be outvoted if you allow illogical fuckwits to become the norm
[22:46:23] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Quit: ZNC - https://znc.in)
[22:47:23] *** Joins: blezz (~blez@213-130-92-210.ip.btc-net.bg)
[22:47:28] <blezz> finally. a new motherboard
[22:53:14] <Nasp> blezz:  Which one?
[22:53:15] <Nasp> Also new cpu?
[22:53:58] <blezz> B550M Plus wifi with my old 3600
[22:54:08] <blezz> but at least I have a good wifi/bluetooth connection
[22:54:09] <Diablo-D3> heh, my 3600 is on a x570
[22:54:11] <Diablo-D3> it goes burr
[22:54:52] <bpmedley> PCIe 4.0 M.2, nice blezz
[22:55:15] <blezz> bpmedley 980 Pro - 7gb/s read, 6gb/s write. it's pretty good
[22:55:30] <bpmedley> Really good, I would say.. :-0
[22:56:06] <Nasp> Damn
[22:56:28] <Diablo-D3> heh, I have the previous winner of that race, the adata s8200 pro
[22:56:32] <Nasp> I'm considering buying that 5800X3D when it comes out
[22:56:43] <bpmedley> What are 8+2 DrMOS power stages?
[22:56:44] <blezz> Diablo-D3 now I use this as my second ssd... sx8200 pro
[22:56:54] <Diablo-D3> *sx
[22:56:57] <blezz> no idea what to install on it, tbh
[22:56:57] <Diablo-D3> blezz: yeeeaahhh
[22:57:02] <Nasp> M.2 drives have gotten so insanely fast we dont really need more speed now do we? :D
[22:57:02] <Diablo-D3> heh its my main os drive
[22:57:09] <Nasp> But it's still nice
[22:57:13] <Diablo-D3> performs like a 970 pro, the 2tb one cost as much as the 1tb 970 pro
[22:57:16] <Nasp> Install everything on it
[22:57:19] <Diablo-D3> Nasp: pretty much nope
[22:57:23] <Diablo-D3> the bigger issue is feature set
[22:57:24] <Nasp> 1TB m.2 is quite cheap
[22:57:30] <Diablo-D3> nobody has a consumer m2 with sriov
[22:57:43] <Nasp> I kinda want some 8TB SSDs to become cheap so i can make an SSD array
[22:57:57] <bomb> SSDs forget tho
[22:58:00] <blezz> they're expensive
[22:58:06] <Nasp> For now
[22:58:06] <blezz> I have hdd for my main data
[22:58:07] <Diablo-D3> ssds dont forget any more than spinning rust do
[22:58:19] <blezz> cause at least the data from hdds can be restored
[22:58:20] <Nasp> I think they do
[22:58:28] <Nasp> They do need to be powered on from time to time if i remember correctly
[22:58:32] <Diablo-D3> badly designed ones may forget while unpowered for over a year
[22:58:37] <bpmedley> bomb : I thought they fixed a lot of those issues, these last few years.  Am I mis-remembering?
[22:58:46] <Nasp> Also earlier ones with cache, without a cache battery
[22:58:47] <Diablo-D3> a) dont buy shit ones, b) why are you unpowering them for a year?
[22:58:55] <Diablo-D3> Nasp: not a cache battery, thats the wrong term
[22:58:57] <bomb> bpmedley https://twitter.com/xenadu02/status/1495693475584557056
[22:59:00] <Diablo-D3> you technically want the term supercap
[22:59:02] <Nasp> Most have 0.5-1GB of fast ache now
[22:59:15] <Diablo-D3> but you need to buy ones that fucking wont scramble the drive on data write
[22:59:16] <Nasp> And if power is lost that data needs to be transfered to the actual storage cells
[22:59:27] <bomb> I use DVDs for backups
[22:59:31] <Nasp> Diablo-D3: Well battery to keep the SSD on to transfer the rest from the cache
[22:59:45] <Diablo-D3> Nasp: thats still technically false
[22:59:58] <Nasp> You sure?
[22:59:58] <Diablo-D3> supercaps allow them to dump in flight blocks
[23:00:05] <Nasp> Supercaps / battery
[23:00:07] <Nasp> Same same
[23:00:08] <Diablo-D3> but still may lead to data loss, but not *fatal* loss
[23:00:10] <bpmedley> I see someone complaining about data loss after physically pulling a cable during operation.  bomb , why is that a good test?
[23:00:16] <Diablo-D3> samsung consumer drives have been known for fatal loss
[23:00:25] <Diablo-D3> they scrambled their 2-4MB slabs during a power failure
[23:00:38] <Diablo-D3> its why I wont use them at work, and thus not at home either
[23:00:46] <Diablo-D3> they're true enterprise ones dont have this fault
[23:01:09] <Nasp> At work in servers or desktops?
[23:01:19] <Diablo-D3> in servers
[23:01:31] <Diablo-D3> and yes, Im aware I shouldnt care, but I still have no interest in entertaining it
[23:01:43] <Nasp> We have no servers at work
[23:01:43] <Diablo-D3> the number of power loss events at my DC during the past 5 years has been zero.
[23:01:47] <Nasp> All cloud
[23:01:53] <Nasp> But i kinda want servers
[23:01:59] <Diablo-D3> the cloud is basically a scam
[23:02:12] <Diablo-D3> its so much cheaper to just get machines from a dedi provider and run your own solution your way
[23:02:22] <Nasp> I've asked a few times if we should try and pay for some dedicated hardware in a rack somewhere
[23:02:24] <Nasp> And do a hybrid setup
[23:02:28] <Nasp> "but what if it fails?"
[23:02:35] <Nasp> Well then we just keep using the cloud
[23:02:37] <Diablo-D3> any company who says "but then we dont need to hire experts to run our private shit" is an idiot
[23:02:38] <blezz> I reinstalled. Can I connect my games to steam again. They're on my second drive?
[23:02:57] <Nasp> Diablo-D3:  I think i could lower our cost by 90% by using our own servers
[23:02:59] <Diablo-D3> you still need experts, but now they're cloud experts, and they cost more and do less
[23:03:09] <Diablo-D3> Nasp: you could lower your cost 90% by doing a dedi provider too
[23:03:12] <Diablo-D3> its why Im still in business
[23:03:16] <Diablo-D3> thats what I actually do
[23:03:29] <Diablo-D3> a lot of my customers went to the cloud and then left the cloud
[23:03:47] <Nasp> Diablo-D3:  Yeah actually it was dedicated provider i meant
[23:03:49] <Diablo-D3> you can run a multi-site redundant setup without ever needing to be "in the cloud"
[23:04:00] <Nasp> And jsut keep all the cloud stuff and just run all our raw compute on some dedicated servers
[23:04:08] <Diablo-D3> Nasp: technically what you said was ambiguous
[23:04:21] <Nasp> Our production setup is like 50 vms
[23:04:30] <Nasp> Which i think i could replace by 1-2 servers
[23:04:34] <Diablo-D3> you can have on-prem, you can have rack space but your own hardware, and then you can get dedis
[23:04:44] <Nasp> Yeah but i would rather just buy it somewhere
[23:04:49] <Diablo-D3> its a lot easier
[23:04:56] <Nasp> Like just buy some server from hetzner
[23:05:01] <Diablo-D3> I specialize in nerding out about hardware
[23:05:04] <Diablo-D3> hetzner kind of sucks
[23:05:06] <Suchiman> Nasp: like... seriously, i'm porting this piece of code https://welp.dev/Code_2022-04-02_20-34-51.png and Github CoPilot just goes like https://welp.dev/devenv_2022-04-02_20-34-27.png
[23:05:31] <Diablo-D3> like, I wont shit on my competitors, thats rude, but I will shit on hetzner
[23:05:34] <Nasp> Diablo-D3:  We have 50 2 core VMs
[23:05:42] <Diablo-D3> Nasp: yeah, collapse that into like 2 machines
[23:05:46] <Nasp> Because someone believes that more servers are better than few bigger servers
[23:05:48] <Nasp> Exactly
[23:05:54] <Diablo-D3> you can keep your vms
[23:05:55] <blezz> Suchiman :DD
[23:06:06] <Nasp> And most is docker so it could easily work across cloud and some onprem / dedicated stuff
[23:06:08] <Diablo-D3> Nasp: like, Im getting zen 2 epycs now, you'd need two, one at each site
[23:06:25] <Diablo-D3> epycs are what people used to do with an entire rack of shit
[23:06:28] <Diablo-D3> now in 2U.
[23:06:42] <Nasp> Suchiman: From node to C#?
[23:06:47] <Suchiman> Nasp: yeah
[23:06:49] <Nasp> wth
[23:06:55] <Suchiman> Nasp: ?
[23:06:56] <Nasp> Also what did you write to make it convert it
[23:07:07] <Nasp> Suchiman:  Ohh you ported it?
[23:07:10] <Nasp> Thought it was copilot
[23:07:13] <Suchiman> Nasp: nothing, i'm just having VS Code open on my left side and writing the C# code on the right side
[23:07:16] <Diablo-D3> Nasp: but yeah, generally, I never suggest a small business do business with a big business for the sake of doing business with a big business
[23:07:22] <Diablo-D3> they 100% will take advantage of you
[23:07:23] <Suchiman> Nasp: and Github CoPilot just randomly suggests exactly what i need xD
[23:07:29] <Suchiman> Nasp: without having access to the vs code project
[23:07:48] <Diablo-D3> find a company that actually is invested in the success of their customers
[23:08:06] <Nasp> Diablo-D3: Sometimes we are not allowed to scale up due to cost and im like
[23:08:09] <bpmedley> Diablo-D3 : Are you talking about things like ActiveDirectory servers or web servers or everything?
[23:08:11] <Nasp> Why the hell are we then in the cloud
[23:08:21] <Nasp> And yeah lets say 1-3 decent serves
[23:08:31] <Diablo-D3> bpmedley: we're talking physical hardware
[23:08:33] <Nasp> Doesn't even have to be EPYC, just something with more than 2 cores and 4GB of memory
[23:08:48] <bpmedley> Diablo-D3 : Excuse me, what are you predominately running on the physical hardware?
[23:08:50] <Diablo-D3> Nasp: yeah, its a lot easier to just buy one set amount of actual power, and use it how you want
[23:08:55] <Diablo-D3> bpmedley: customers.
[23:08:59] <Diablo-D3> I run a dedi company
[23:09:15] <Diablo-D3> they pay me money, they rent a machine, the machine goes brr.
[23:09:16] <Nasp> But seriously, 2-core VMs
[23:09:19] <bpmedley> So, a variety of things, Diablo-D3 ?
[23:09:23] <Diablo-D3> bpmedley: yup
[23:09:31] <Nasp> If you make it do any work it just throttles everything
[23:09:55] <Diablo-D3> Nasp: yup, my company's own internal server is just a box full of vms
[23:09:57] <Diablo-D3> each one does a task
[23:10:18] <Nasp> We have our build servers powered down after 30 minutes of inactivity to save cost
[23:10:21] <Diablo-D3> I set their core count to "all", and limit their ram
[23:10:25] <Nasp> And then you as a dev have to wait for them to start up again
[23:10:27] <Diablo-D3> Nasp: yeah, thats dipshit behavior
[23:10:33] <Nasp> What's more expensive, dev time or compute cost?
[23:10:34] <Diablo-D3> its nickel and diming yourself
[23:10:47] <Diablo-D3> when you get a dedi, its always yours, on 24/7 to abuse however you want
[23:10:52] *** Quits: PeterR`` (~chillisau@88.103.230.136) (Ping timeout: 272 seconds)
[23:11:04] <Nasp> Also how much power does a build server really need?
[23:11:15] <Nasp> I can build it all locally in 30 seconds or so
[23:11:17] <Diablo-D3> heh, you know how DCs work? we budget power as a max.
[23:11:23] <Nasp> On the build server it takes 3-5 minutes
[23:11:30] <Diablo-D3> we have x amps coming out of the ceiling or floor per rack
[23:11:37] <Diablo-D3> we budget for everything in that rack going at max
[23:11:47] <Diablo-D3> stuff never goes at max
[23:12:06] <Diablo-D3> it peaks here and there, and everybody's shit peaks at different times
[23:12:19] <Diablo-D3> the entire rack never maxes itself out, not even close
[23:12:22] <Nasp> During last peak we didn't scale up and had 12 hours of downtime :D
[23:12:33] <Diablo-D3> Nasp: but yeah, the cloud 100% is a scam
[23:12:41] <Diablo-D3> I calculated what a now-customer was actually paying for
[23:12:44] <Nasp> But we saved like $200
[23:12:45] *** Quits: blezz (~blez@213-130-92-210.ip.btc-net.bg) ()
[23:12:54] <Diablo-D3> basically one entire server, all added up, but could have bought an entire rack from me
[23:13:06] <Diablo-D3> its nuts
[23:13:21] <Nasp> I could buy an entire reach each month
[23:13:24] <Nasp> rack*
[23:13:40] <Diablo-D3> but yeah, I think companies need an actual dude they can talk to thats real and human
[23:13:54] <Diablo-D3> and be like "look, we do x y z, what do we need from you?" and I can just tell them the truth
[23:14:32] <Diablo-D3> a lot of smaller guys in this industry just have a niche being that guy
[23:14:53] <Diablo-D3> a semi-consultant that is honest and has hardware already racked and waiting to go
[23:17:03] *** Quits: martin__--_ (~default@84-113-156-178.cable.dynamic.surfer.at) (Ping timeout: 260 seconds)
[23:21:06] <bomb> we need more Jews in Hollywood
[23:21:36] *** Joins: blezz (~blez@213-130-92-210.ip.btc-net.bg)
[23:21:37] <bomb> they're smarter and more creative than everyone else
[23:24:08] <Diablo-D3> Nasp: its just ridiculous though
[23:24:12] <Diablo-D3> like, AWS is the worst offender
[23:24:25] <Diablo-D3> they make about 100x return on their investment
[23:24:41] <Diablo-D3> they pay a fraction of bandwidth, power, and space
[23:24:44] <Diablo-D3> because they own the entire infra
[23:25:09] <Diablo-D3> yet they charge 10-100x for cpu hour, try to saturate their shit to max
[23:25:17] <Nasp> We finally got the go ahead to move our last database from Azure
[23:25:23] <Nasp> So we don't have a multiu cloud setup
[23:25:30] <Diablo-D3> like, you know how my internal infra is?
[23:25:32] <Diablo-D3> mostly idle.
[23:25:36] <Diablo-D3> nothing gets maxed out
[23:25:37] <Nasp> We have our compute and database in opposite clouds
[23:25:42] <Diablo-D3> if shit starts getting maxed out, I go buy more.
[23:25:46] <Diablo-D3> Nasp: wtf
[23:25:53] <Diablo-D3> you're paying network ingress/egress costs badly
[23:26:00] <Nasp> People are just affraid of servers todayt
[23:26:08] <Diablo-D3> yeah, because they're idiots
[23:26:08] <Nasp> yeah
[23:26:15] <Nasp> We pay a lot of traffic cost
[23:26:16] <Diablo-D3> if you're afraid of technology, get out of business
[23:26:22] <Nasp> Also due to blob and compute being opposite as well
[23:26:40] <Nasp> So we have two setups, one where the DAtabase is in Google, an the compute VMs are in Azure
[23:26:57] <Nasp> And then we have another setup, where the Database is in Azure, and the compute at google :D
[23:28:22] <bpmedley> Nasp : Did the AI develop that topology?
[23:28:43] <Nasp> No, we are just very very slow at executing stuff
[23:30:39] <Nasp> Start move from Azure to Google,and well still missing most
[23:32:23] <Suchiman> Nasp: seriously https://welp.dev/devenv_2022-04-02_21-02-20.png
[23:32:34] <Nasp> Damn
[23:34:11] <Nasp> Suchiman:  But it didn't use Spans!
[23:34:17] <Suchiman> Nasp: it did not :(
[23:34:22] <Suchiman> Nasp: but it also goes more complicated! https://welp.dev/devenv_2022-04-02_21-04-12.png
[23:34:35] <Nasp> Can i return a span?
[23:34:45] <Nasp> I've used them very little
[23:34:52] <Nasp> I just rememer some of the limitations
[23:35:40] <Suchiman> Nasp: it comes up with something but not as efficient as it could be https://welp.dev/devenv_2022-04-02_21-05-27.png
[23:36:47] <Suchiman> Nasp: a different version if you use ROS https://welp.dev/devenv_2022-04-02_21-06-41.png
[23:37:13] <Suchiman> Nasp: one more https://welp.dev/devenv_2022-04-02_21-07-10.png
[23:37:19] <Nasp> So i can return it
[23:38:51] <Suchiman> JakeSays: ^
[23:40:17] <Nasp> Suchiman: I was just sure i couldn't return a Span
[23:43:41] <Suchiman> Nasp: oh that depends, there are usage dependent compiler rules if you can or can not, you can return a span that you get passed as a parameter, you can return a span that is constructed with an array or another global reference but you cannot return a span that was constructed from a stackalloc for example
[23:44:06] <Nasp> Yeah i would assume i coudl return a span that's provided as parameters
[23:44:11] <Nasp> But in your case you are modifying it
[23:44:20] <Nasp> I would assume i could only return a subset of the original span then
[23:46:26] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[23:53:53] <Suchiman> Nasp: https://welp.dev/devenv_2022-04-02_21-23-46.png
[23:56:47] <Nasp> haha
[23:56:52] <Suchiman> Nasp: https://welp.dev/devenv_2022-04-02_21-26-49.png
[23:56:55] <Nasp> Try with magic 8 ball
[23:57:19] <Nasp> Or fizzbuzz it
[23:57:33] <Suchiman> Nasp: https://welp.dev/devenv_2022-04-02_21-27-30.png
[23:57:42] <Nasp> haha
