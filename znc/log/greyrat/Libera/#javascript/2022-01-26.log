[00:00:09] <linearbit> stenno, I'm basically making something like the google searchbar
[00:00:40] <linearbit> so I started with input but it can't resize horizontally with text - which makes sense for my application
[00:01:16] <linearbit> Alternatives are ofc textarea and contenteditable, but I haven't found a way to strip newlines consistently
[00:01:43] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[00:01:51] <stenno> did you set dir to rtl for the input?
[00:02:10] <linearbit> hmm
[00:02:39] *** Quits: Guest19 (~Guest19@2601:647:5280:2a50:e90c:8a2e:7515:668a) (Quit: Client closed)
[00:03:02] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[00:03:06] <stenno> lol the way google does it is crazy
[00:03:12] <stenno> they are using a span overlay
[00:03:16] <stenno> over the input
[00:03:36] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[00:03:48] *** Joins: Guest19 (~Guest19@2601:647:5280:2a50:e90c:8a2e:7515:668a)
[00:05:36] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[00:06:14] <linearbit> I guess I could do something insane
[00:06:20] *** Quits: ankh_ (~ankh@pppoe-62-84-110-89.dubna.ru) (Quit: Leaving)
[00:06:48] <stenno> is that really worth it though
[00:06:49] <linearbit> like using an invisible input and copying the text into a span
[00:06:58] <stenno> that is what google does, yes
[00:07:13] <stenno> but aren't you kinda overenginerring this for the sake of accessibility
[00:07:18] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[00:07:21] <stenno> at the cost of accessibility*
[00:07:39] *** Joins: onosendi (~onosendi@user/onosendi)
[00:07:53] *** Joins: ttys000 (~ttys000@user/ttys000)
[00:07:54] <linearbit> I think it makes it more accessible to strip newlines
[00:08:03] <stenno> no
[00:08:11] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[00:08:45] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[00:08:46] <stenno> anyway my personal impression is that you will put a lot of work into a subpar feature which might create more problems than good things
[00:08:55] <stenno> so i'd suggest not doing it at all
[00:09:32] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 250 seconds)
[00:12:51] <linearbit> I mean if you accidentally paste something or type enter into a contenteditable it will break the text field
[00:13:33] <stenno> it will not break it
[00:13:38] <stenno> especially not for a screen reader
[00:13:52] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:2055:673d:3155:da63) (Ping timeout: 250 seconds)
[00:14:01] <stenno> which is part of what accessibility is about
[00:15:02] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[00:15:32] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[00:15:33] <jaawerth> how do you even get a newline into an input element? I guess it could be browset-depending but..
[00:15:53] <stenno> probably preventing default on the form enter
[00:16:21] <jaawerth> no I mean, like, as a user
[00:16:21] <linearbit> jaawerth, it's not a problem in input
[00:16:31] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[00:16:31] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[00:16:31] *** Joins: wroathe (~wroathe@user/wroathe)
[00:16:33] <linearbit> The issue with the input element is that it can't resize to fit a longer query
[00:16:37] <jaawerth> ah. I thought that's what you initially wanted to use?
[00:16:44] <linearbit> yeah I did
[00:17:04] <linearbit> basically - input doesn't resize, contenteditable resizes but allows newlines which can break the input
[00:17:29] <linearbit> also Re: accessibility - if preventing newlines is bad design then the input element is poorly designed
[00:17:50] *** Joins: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com)
[00:17:59] <systemfault> linearbit: Can't you resize the input? (I don't know)
[00:18:01] <linearbit> I'm basically just trying to get an input element with the horizontal resizing behavior of a contenteditable element
[00:18:43] <linearbit> systemfault, afaik the only way is changing the width manually with javascript on input
[00:18:46] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[00:18:55] <linearbit> and I'm not sure if there's a reliable way to find the text width now
[00:19:10] <systemfault> Something like scrollWidth couldn't be used?
[00:19:19] <systemfault> Again... I don't know all the "gotchas"
[00:20:16] *** Quits: salad (~cucumber@82.76.150.118) (Quit: salad)
[00:20:17] <linearbit> Given that "solutions" attempt to estimate the width with the `ch` unit, I don't think so
[00:20:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[00:21:14] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[00:22:14] <linearbit> There *might* be a way to calculate text width using a canvas
[00:22:26] <linearbit> assuming I can reliably get the correct font and size
[00:22:30] <stenno> css has letter width
[00:22:42] <stenno> ah yeah you mentioned it already
[00:22:46] <linearbit> well the issue is that letters aren't all the same width
[00:23:10] <linearbit> Unless you use a specific monospace font
[00:23:12] <stenno> again you are probably overengineering a feature here
[00:23:27] <stenno> i don't think its worth the hacking
[00:23:31] <joepie91> oh are we talking about font measuring
[00:23:32] <linearbit> I mean `ch` will break as soon as you enter an "m"...
[00:23:54] <joepie91> don't try to do font measuring unless you are looking for a new hobby
[00:23:58] <joepie91> source: have done
[00:25:03] <joepie91> linearbit: also if you're looking to use contenteditable, I *STRONGLY* recommend using something like Quill instead :)
[00:26:07] <linearbit> I mean I have written my own text renderer before
[00:26:26] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[00:27:05] <linearbit> The frustrating thing is that I don't really do anything too complicated
[00:27:35] <linearbit> The issue with fixed width input is that it either takes way too much space or is too small to see longer inputs .-.
[00:27:47] <jaawerth> anyway I think the input event should be pretty reliable about replacing it asap, though I have never tried to do what you're trying to do. you could add a custom validator api thing for good measure to stop submission race conditions
[00:28:15] <ThePendulum> joepie91: Quill is nice but a fucking PITA if you ever want it to do single-line, we gave up on it
[00:28:37] <joepie91> the thing with contenteditable is that Quill is not perfect but everything else I've seen is more not perfect
[00:28:53] <joepie91> it just overall all kinda sucks?
[00:29:09] <linearbit> jaawerth, the hard part is that it seems to not be possible to change inputs in the input event
[00:29:18] <linearbit> including canceling inputs
[00:29:26] <ThePendulum> yeah, idk why it's in such a state. I work on a chat application and I figured our new version was going to have a fancy pants WYSIWYG editor
[00:29:33] <joepie91> ha
[00:29:36] <joepie91> famous last thoughts
[00:29:57] *** Quits: Colt (~Colt@user/colt) (Quit: Leaving)
[00:30:03] <linearbit> I just want a resizable input lol
[00:30:06] <ThePendulum> that attempt is deeply burried in our repository and I don't want to talk about it
[00:30:12] <joepie91> :D
[00:30:16] <joepie91> sounds about right
[00:30:19] <ThePendulum> resize the box or the font size?
[00:30:32] <ThePendulum> textarea is natively resizable isn't it
[00:31:09] <linearbit> yeah but it's not single line like input is
[00:31:25] <ThePendulum> you only want to resize it horizontally?
[00:31:25] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[00:31:32] <linearbit> I just want the input to shrink or grow depending on the length of the text
[00:31:36] <ThePendulum> oh right
[00:31:51] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[00:32:05] <ThePendulum> not sure when that's desirable but I'm interested to think about how I'd do it
[00:32:17] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[00:32:25] <stenno> linearbit: so, textarea
[00:32:43] <ThePendulum> stenno: I think they want it to resize along with the typing rather than manually?
[00:32:51] <ThePendulum> like [the input] is [always this long]
[00:33:03] <stenno> or conteneteditable rather
[00:33:08] <stenno> contenteditable resizes with text
[00:33:14] <austincheney_> linearbit, arbitrarily changing text size on interaction sounds like a major accessibility violation
[00:33:15] <stenno> but thats also not what they want, confusingly
[00:33:16] <ThePendulum> it doesn't resize the container though?
[00:33:24] <stenno> austincheney_: already told them
[00:33:33] *** austincheney_ is now known as austincheney
[00:33:50] <ThePendulum> I figured it should work like a label printer where you cut the label wherever the text ends, nothing else
[00:33:57] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 240 seconds)
[00:34:49] <linearbit> <stenno> but thats also not what they want, confusingly < I do, but it seems to be pretty much impossible to reliably strip newlines from contenteditable
[00:35:13] <stenno> newlines are part of the automatic resizing
[00:35:24] <stenno> i don't understand why you want resizing in some specific cases but not others
[00:35:29] <stenno> it shouldn't make a difference
[00:35:42] <linearbit> because it's a search for entering single tag words
[00:36:13] <austincheney> linearbit, if the text is too long just set text overflow in the CSS.  It solves for your visual concerns but is ignored by screen readers
[00:36:22] <systemfault> linearbit: Maybe you could start with something like https://jsfiddle.net/5ewcv1hL/
[00:36:42] <systemfault> linearbit: It's not working right... but..
[00:37:08] <linearbit> hmm
[00:37:20] <linearbit> yeah that looks like what I'm looking for
[00:37:33] <ThePendulum> good to know I had the right idea, I'm trying for a html/css only solution
[00:38:04] <ThePendulum> well not quite I guess
[00:41:59] *** Joins: pavonia (~user@user/siracusa)
[00:42:04] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[00:42:13] <systemfault> My thing doesn't work...
[00:42:27] <systemfault> Maybe a hidden div with a copy of the text
[00:42:46] <systemfault> Then you could get the width of that hidden element to get the size
[00:43:31] <stenno> thats how google does it
[00:43:42] <stenno> which was super surprising to find out
[00:43:45] *** Joins: luck (~luck@170.239.110.226)
[00:43:52] <stenno> actually the div itself is not hidden, its an overlay over the input lol
[00:44:12] <jaawerth> ah yeah that's how they all do the proper wsyiwyg-looking thinsg since textarea et al can't quite cut it iirc
[00:44:18] <jaawerth> also a bunch of stuff with the text range api
[00:45:03] <linearbit> In some ways text is humanity's greatest mystery
[00:45:11] <linearbit> Just after printers and GPU drivers
[00:45:49] <ThePendulum> this is what I had in mind https://jsfiddle.net/ThePendulum/at1rwdkb/
[00:46:01] <ThePendulum> but it would require recreating a few too many native features of the input
[00:46:22] <stenno> could actually implement with a custom element
[00:46:27] <stenno> come to think of it
[00:46:32] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:4cc5:9f8f:f25b:50c6) (Ping timeout: 240 seconds)
[00:46:34] <stenno> derive from Input
[00:46:44] <stenno> web component was the word
[00:47:02] <linearbit> oh you can derive from existing elements?
[00:47:07] <stenno> yes
[00:47:17] <linearbit> hmm
[00:47:26] <stenno> class MyInput extends HTMLInputElement or so
[00:47:51] <linearbit> ThePendulum, one fun quirk of that solution is that when you select text you're still selecting from the overlayed input
[00:48:29] *** Quits: luck (~luck@170.239.110.226) (Remote host closed the connection)
[00:48:36] <ThePendulum> linearbit: yeah that is my main problem atm lol
[00:48:59] <ThePendulum> actually
[00:49:18] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:68c6:1034:8cf9:5a2d)
[00:49:19] <ThePendulum> I think if I do this the other way around it will work much better
[00:49:21] *** Quits: Intelo (~Intelo@88.244.94.93) (Ping timeout: 256 seconds)
[00:49:34] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[00:49:44] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:49:45] <linearbit> btw there's a transparent keyword
[00:49:59] <linearbit> One of the better color keywords
[00:50:04] <ThePendulum> idk why I gave up after none and invisible
[00:50:10] <ThePendulum> probably because I don't usually make things transparent
[00:50:24] <linearbit> I mostly use it for SVG I think
[00:50:51] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:f86d:882c:68b2:7048)
[00:51:10] <linearbit> The CSS color keywords have a pretty quirky history explaining their strangeness
[00:51:32] <stenno> can't you just use alpha channel for transparency
[00:52:18] <stenno> rgba(255,255,0,0.5)
[00:52:18] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[00:52:37] <linearbit> #0000 works too
[00:52:56] <linearbit> probably the shortest if you're into CSS golf
[00:53:13] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[00:53:31] *** Quits: xsperry (~xs@user/xsperry) (Ping timeout: 256 seconds)
[00:53:33] <stenno> not sure what you mean with 'transparent keyword being one of the better keywords' then
[00:53:34] <jaawerth> I mean, does this not prevent newlines (if that's what you really want)? https://jsfiddle.net/d6qe9x4c/1/
[00:53:50] <jaawerth> pretty sure that's more orless what react controlled fields do, give or take some extra stuff for edge cases
[00:53:58] <jaawerth> better to do the hidden element though thing, or just use a library
[00:54:19] <ThePendulum> ok the only thing this needs is better space handling https://jsfiddle.net/ThePendulum/at1rwdkb/
[00:54:33] <linearbit> stenno, just a nod to how nonsensical some of the CSS keywords are
[00:54:40] <linearbit> *color keywords
[00:54:48] <stenno> ok
[00:54:58] *** Quits: harpia (~harpia@2804:2aec:205:4600:1f64:3c12:1a0e:3b09) (Quit: harpia)
[00:55:10] <stenno> i like my hotpink
[00:55:23] <stenno> hotpink + lime makes any graphics designer smile with joy
[00:55:34] <jaawerth> there's always um
[00:55:37] <jaawerth> !mdn canvasFontSize
[00:55:39] <jellobot> jaawerth, The CanvasRenderingContext2D.font property of the Canvas 2D API specifies the current text style to use when drawing text. This string uses the same syntax as the CSS font specifier. https://mdn.io/canvasFontSize
[00:55:51] <ThePendulum> ok I think I got it
[00:55:53] <jaawerth> if you really want to calculate text widths et al
[00:56:11] <ThePendulum> linearbit: how's this? https://jsfiddle.net/ThePendulum/at1rwdkb/
[00:56:15] <stenno> but consider what joepie91 said about that earlier lol
[00:56:17] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[00:56:22] <stenno> its really a science for itself
[00:56:28] <ThePendulum> that lets CSS take care of the heavy lifting for text size
[00:57:16] <ThePendulum> hmm suddenly it became a bit quirkier again
[00:57:26] *** Joins: sam_1 (~sam_1@89.150.128.114)
[00:58:35] <ThePendulum> oh it's that slight push of the caret
[00:58:40] *** Quits: haslo (uid390999@id-390999.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[00:58:48] <linearbit> ThePendulum, it gets a bit weird once the total text width exceeds the size of the viewport
[00:59:05] <ThePendulum> that seems like it should be easily resolved
[01:00:01] <jaawerth> wait, is it really the removal that's needed or just figuring out where they are to break elegantly? because.. I think there's another api for the latter...
[01:00:28] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:68c6:1034:8cf9:5a2d) (Quit: I have gone to sleep. ZZZzzz…)
[01:01:02] *** Quits: kakashiAL (~kakashi@37.85.18.55) (Ping timeout: 240 seconds)
[01:02:17] <ThePendulum> linearbit: this should take care of that https://jsfiddle.net/ThePendulum/at1rwdkb/
[01:02:20] *** Quits: sam_1 (~sam_1@89.150.128.114) (Ping timeout: 268 seconds)
[01:02:30] <ThePendulum> now for the focus caret offset thing it does
[01:02:31] <stenno> there will still be hacky edge cases
[01:05:36] <ThePendulum> so far it's the most native feeling thing I can come up with though
[01:05:46] <stenno> no criticism against you
[01:06:15] <ThePendulum> I still wouldn't recommend using it, if anything because I have yet to see the use case for which this could actually be interesting
[01:07:28] <ThePendulum> if I can get rid of that caret jump I'm happy lol
[01:07:39] <ThePendulum> I don't even fully understand what's happening exactly
[01:09:02] <jaawerth> yeah, this https://developer.mozilla.org/en-US/docs/Web/API/InputEvent/getTargetRanges - ti's basically for this usecase according to MDN
[01:09:04] <jaawerth> linearbit: ^
[01:09:18] <jaawerth> a pain to use, as is usually th case with the range api, but that's what it's for
[01:10:03] <linearbit> oh I remember that one
[01:10:05] * linearbit shudders
[01:10:09] <stenno> !ciu getTargetRanges
[01:10:09] <jellobot> stenno, Failed to look up feature
[01:10:12] <stenno> :<
[01:10:28] <stenno> !ciu InputEvent.getTargetRanges
[01:10:28] <jellobot> stenno, Failed to look up feature
[01:10:30] <stenno> damn
[01:11:01] <sveinse> Noob here: Are objects iterated with "in" in order or out of order for how they were created/added? Is that guaranteed in JS or not?
[01:11:31] <stenno> in ES6, objects have insertion order. But you should treat them as having no order
[01:11:36] <ThePendulum> it's usually the case but it's not guaranteed
[01:11:41] <ThePendulum> yeayh
[01:11:44] <stenno> it is guaranteed in ES6
[01:11:56] <stenno> insertion order, but again, treat it as if it doesn't have it
[01:11:58] <linearbit> Do they use the same hashtable implementation as python now
[01:12:07] <stenno> you could use a Map
[01:12:13] *** Quits: pluri (~pluri@user/pluri) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:12:14] <stenno> linearbit: huh?
[01:12:27] <ThePendulum> wouldn't you still use an array if you want order?
[01:12:32] <linearbit> Since python dictionaries also changed their implementations and now have guaranteed insertion order
[01:12:42] <linearbit> So I thought ES6 might use the same approach
[01:12:50] <stenno> es6 was released in 2015 or so
[01:12:55] <stenno> and specced earlier
[01:13:01] <stenno> dunno when that python change was
[01:13:05] <sveinse> Yeah, python3 has guaranteed insertion order
[01:13:12] <stenno> ah python 3000
[01:13:15] <ThePendulum> is it purposedly meant to have order though?
[01:13:18] <linearbit> stenno, yeah might've be slightly later than that
[01:13:18] <stenno> no
[01:13:21] <linearbit> Can't remember
[01:14:02] <stenno> i think you can treats Map as ordered k-v pairs
[01:14:09] <stenno> treat Maps* lol
[01:14:11] <stenno> i should go to bed
[01:14:16] <ThePendulum> it might be guaranteed in the sense that the way it's implemented couldn't give any other result, but I'd think in terms of what it's designed to do
[01:14:20] <linearbit> I still think it's weird how the spec doesn't specify that a Set should be implemented with O(1) contains check
[01:14:25] <stenno> ThePendulum: indeed as i said several times
[01:14:39] <stenno> linearbit: it specifies O(log(n)) lookup
[01:14:41] <sveinse> I use the insertion order guarantee a lot in py. But if it's only guaranteed in ES6, its no problems doing it by other means
[01:14:45] <ThePendulum> right, I guess we're using a different idea of 'guaranteed'
[01:14:47] <stenno> 'at least O(log(n))
[01:15:08] <linearbit> stenno, so you might still be better off with a map?
[01:15:11] <stenno> 'at least O(log(n)) for hastables'
[01:15:31] *** Joins: ensyde (~ensyde@2600:1700:2050:1040:6816:2795:9c3:9492)
[01:15:36] <stenno> only array guarantees O(1) lookup i _think_
[01:15:37] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[01:15:40] <stenno> dangerous half knowledge
[01:16:01] <linearbit> O(log(n)) sounds like a binary tree implementation?
[01:16:11] <stenno> its what the spec says
[01:16:11] <ThePendulum> I think I would use an object/map for the data and an array of keys for the order, or if you only ever need to iterate, just an array of values
[01:16:42] <stenno> linearbit: i am quite sure that you can treat Map insertion order well
[01:16:49] <stenno> unlike objects
[01:16:50] <linearbit> Honestly the only larger project I'm maintaining is written in web assembly anyway
[01:17:10] <stenno> i hope its written in a sane language like rust and then compiled to wasm
[01:17:20] <stenno> transpiled or w/e the correct expression is
[01:17:21] <linearbit> idk if I'd call rust sane but yeah
[01:17:21] <sveinse> ThePendulum: Yeah, I'm looking at Map at MDN and it is often initalized with a 2-level array, so why not just use that array as-is
[01:17:38] <linearbit> stenno, compiled seems fine - wasm is a bytecode format after all
[01:17:48] <stenno> sveinse: because you can look up by key name
[01:18:05] <ThePendulum> n> new Map([['foo', 'bar'], ['hello', 'world']])
[01:18:05] <jellobot> (okay) Map(2) { 'foo' => 'bar', 'hello' => 'world' }
[01:18:09] <ThePendulum> well that's something I did not know
[01:18:18] <sveinse> stenno: sure
[01:18:30] <stenno> sveinse: so thats why you should use Map instead of array
[01:18:49] <stenno> ThePendulum: you can even pass a generator into that, its quite funny
[01:19:01] <linearbit> I use that for generating index maps
[01:19:11] <linearbit> well actually I've used reduce
[01:19:20] <stenno> n> const foo = function* () { yield ['foo', 23]; }; new Map(foo())
[01:19:21] <jellobot> (okay) Map(1) { 'foo' => 23 }
[01:19:26] <stenno> ^ ThePendulum
[01:19:34] <stenno> also works for Object.fromEntries
[01:19:56] <stenno> n> const foo = function* () { yield ['foo', 23]; }; Object.fromEntries(foo())
[01:19:57] <jellobot> (okay) { foo: 23 }
[01:20:09] *** Quits: pmercado (~pmercado@186.107.63.175) (Ping timeout: 256 seconds)
[01:20:12] <sveinse> What does the * mean in function* ?
[01:20:12] <ThePendulum> what's a useful application for a generator
[01:20:20] <stenno> sveinse: generator function
[01:20:23] <sveinse> ah, thanks
[01:20:33] <oscurochu> am i suppose to import the useAsync hook from react? or am i suppose to just copy their example useAsync function from usehooks.com?
[01:20:39] <linearbit> n> ["a", "b", "c"].reduce((map, id, index) => { map.set(id, index); return map; }, new Map())
[01:20:39] <jellobot> (okay) Map(3) { 'a' => 0, 'b' => 1, 'c' => 2 }
[01:20:52] <linearbit> Maybe better than this approach I've been using
[01:21:24] <stenno> Map.from when
[01:21:48] <ThePendulum> linearbit: https://jsfiddle.net/ThePendulum/at1rwdkb/
[01:21:54] <ThePendulum> I seem to have stopped the caret resize
[01:22:02] <ThePendulum> I should probably leave it there and get back to work
[01:22:49] <ThePendulum> only a bit of JS to synchronize the two elements, all the text and boundary measuring is done by CSS/the browser
[01:22:53] <stenno> sveinse: also consider that you can have nonprimitive keys in Maps, for what its worth
[01:23:02] *** Quits: paule32_ (~paul@user/paule32) (Ping timeout: 240 seconds)
[01:23:20] <sveinse> stenno: nonprimitive keys, what does that imply in JS?
[01:23:24] <systemfault> linearbit: What I had in mind https://jsfiddle.net/eawLorf2/
[01:23:25] <sveinse> mutable objects?
[01:23:30] <stenno> oscurochu: import { useAsync } from "react-async"
[01:23:31] <jaawerth> stenno: where does the spec say that? I didn't know it was that explicit and I failed my search roll :(
[01:24:02] <stenno> sec
[01:24:06] <stenno> or minute, rather
[01:24:06] <ThePendulum> systemfault: why not let the container resize itself though?
[01:24:14] <jaawerth> not that I'm surprised - there's SOME kinda hashing going on under the hood and usually once you get past the key-length constant time part you're gonna fallback to some kinda search tree as a go-to
[01:24:32] <jaawerth> since there are gong to be collissions one way or another
[01:24:38] <linearbit> systemfault, that behaves very interestingly when you enter spaces
[01:24:55] <systemfault> true :(
[01:25:05] <jaawerth> but big O is also not super useful in cases like this for real-world values much of the time. like, O(log32(n)) is still O(log n)
[01:25:14] <ThePendulum> systemfault: if you replace the spaces with &nbsp; that seems to be fine
[01:25:26] <ThePendulum> systemfault: see my latest version https://jsfiddle.net/ThePendulum/at1rwdkb/
[01:25:36] <ThePendulum> that should work for yours as well I think
[01:25:50] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[01:25:59] <systemfault> ThePendulum: Nice
[01:26:26] <ThePendulum> it's because html collapses trailing and multiple spaces so the width of that phantom element is slightly smaller until you hit the next letter
[01:26:33] <stenno> found it
[01:26:37] *** Quits: Anarchic (~Anarchic@getlegit.co.uk) (Quit: ZNC - http://znc.in)
[01:26:53] <stenno> jaawerth: https://262.ecma-international.org/11.0/#sec-set-objects
[01:27:00] <jaawerth> thanks
[01:27:00] <stenno> Set objects must be implemented using either hash tables or other mechanisms that, on average, provide access times that are sublinear on the number of elements in the collection.
[01:27:23] <linearbit> That's interesting
[01:27:33] <stenno> i guess sublinear is technically everything below O(n) but O(log n) is the next-smallest i think
[01:27:36] <linearbit> I remember something about a linear search being acceptable
[01:27:45] <jaawerth> ah that makes more sense
[01:27:47] *** Joins: Anarchic (~Anarchic@getlegit.co.uk)
[01:27:51] <oscurochu> why do the examples for react-async look different from the examples on usehooks.com/useAsync? are they the same hook? can i use them the same?
[01:28:06] *** Quits: Anarchic (~Anarchic@getlegit.co.uk) (Remote host closed the connection)
[01:28:32] <linearbit> stenno, I think next smaller would be O(n^0.99999...)
[01:28:34] <jaawerth> true O(1) in teh worst case would be like, long strings with hash collissions
[01:28:40] <jaawerth> er
[01:28:42] <stenno> linearbit: nope
[01:28:50] <jaawerth> r rather, when you start hitting the log or whatever degradation
[01:28:54] *** Joins: Anarchic (~Anarchic@getlegit.co.uk)
[01:29:11] <stenno> linearbit: i might be totally misremembering but i think thats not how big-O notation works
[01:29:33] <linearbit> jaawerth, I think amortized O(1) is what you'd be looking for in practice
[01:29:37] <stenno> misremembering is the wrong word, i dont have enough knowledge
[01:29:37] <ThePendulum> systemfault: ah the <pre> tag also preserves those spaces, however that applies some styling that needs to be undone
[01:29:41] <jaawerth> yeah
[01:30:10] <linearbit> stenno, pretty sure the only rule is that you don't include constants
[01:30:11] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[01:30:16] <ThePendulum> https://jsfiddle.net/ThePendulum/at1rwdkb/
[01:30:20] <ThePendulum> I'm having fun with this now lol
[01:30:20] <linearbit> *constant factors
[01:30:45] <ThePendulum> ah shit I broke something about the caret again
[01:31:00] <linearbit> lol
[01:31:07] <stenno> so is O(sqrt(n)) 'better' than O(n)
[01:31:09] <stenno> ?
[01:31:19] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 268 seconds)
[01:31:23] <linearbit> yeah should be
[01:31:27] <stenno> ok
[01:32:06] <linearbit> given that sqrt(n) is at most n
[01:32:33] *** Quits: dan01 (~dan01@2a02:2f09:350d:ab00:ec56:53b0:674c:469d) (Ping timeout: 268 seconds)
[01:32:33] <ThePendulum> that's fixed, even less JS now then :D https://jsfiddle.net/ThePendulum/at1rwdkb/
[01:32:50] <ThePendulum> wonder if this is going to break horribly in firefox
[01:33:08] *** Quits: D4mned (~D1mned@212.101.253.188) (Quit: Leaving)
[01:33:27] <ThePendulum> hm no works quite nicely
[01:34:01] <linearbit> yeah I've been testing it on firefox
[01:34:16] <linearbit> what are the extra 2px of the width for btw?
[01:34:16] <ThePendulum> <pre> should work for systemfault's approach as well
[01:34:58] <stenno> oscurochu: maybe jus because react 16 has them built-in now
[01:35:01] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 268 seconds)
[01:35:25] <stenno> oscurochu: or rather, built into react-async
[01:35:36] <oscurochu> i dont know, i tried importing it like i do useEffect and i get undefined
[01:35:37] <ThePendulum> oh the reason I even switched to <pre> is to be able to strip HTML without stripping out the &nbsp; spaces, should go and finish it off
[01:36:06] <ThePendulum> done
[01:36:06] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[01:36:06] <stenno> oscurochu: importing from 'react-async' ?
[01:36:18] <stenno> oscurochu: `import { useAsync } from "react-async"`
[01:36:19] <oscurochu> no
[01:36:26] <stenno> read more carefully :P
[01:36:48] <oscurochu> you said its build into react
[01:37:16] <stenno> i showed you the link, yes, i assumed you read it because you were referencing it
[01:38:28] *** Joins: nullDash (~nullDash@173.19.215.17)
[01:38:51] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[01:39:16] <stenno> n> const key = {a: 23}; const foo = new Map([[key, 42]]); key.a = 123; foo[key]; // @ sveinse
[01:39:17] <jellobot> sveinse, undefined
[01:39:20] <stenno> derp lol
[01:39:32] <stenno> that should have worked
[01:40:11] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[01:40:46] <stenno> why didn't it work
[01:40:52] <stenno> n> const key = {a: 23}; const foo = new Map([[key, 42]]); foo
[01:40:52] <jellobot> (okay) Map(1) { { a: 23 } => 42 }
[01:40:59] <stenno> n> const key = {a: 23}; const foo = new Map([[key, 42]]); foo[key]
[01:41:00] <jellobot> (okay) undefined
[01:41:04] <stenno> oh
[01:41:19] <stenno> grrr
[01:41:35] <stenno> n> const key = {a: 23}; const foo = new Map([[key, 42]]); key.a = 123; foo.get(key); // @ sveinse
[01:41:36] <jellobot> sveinse, 42
[01:43:26] <stenno> rip reddit
[01:45:37] *** Quits: lotharn|2 (~kvirc@2607:fb90:4a28:8c21:5836:9dbf:4083:4abd) (Ping timeout: 240 seconds)
[01:46:12] *** Joins: lotharn|2 (~kvirc@2607:fb90:4a28:8c21:5836:9dbf:4083:4abd)
[01:46:57] *** Quits: wombawomba (~andre@89-253-80-164.customers.ownit.se) (Quit: leaving)
[01:47:39] <sveinse> stenno: that makes sense. Having a mutable key doesn't really work. Thanks.
[01:48:07] <stenno> its a mutable key
[01:48:27] <stenno> it checks for the object reference, not its 'value'
[01:49:11] <sveinse> ah, ok, so JS doesn't hash the contents of the object for key like .e.g. py does?
[01:49:37] <stenno> not for Maps
[01:49:43] <sveinse> got it
[01:50:55] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[01:51:19] <ljharb> not for anything
[01:51:22] <stenno> sveinse: see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#objects_vs._maps
[01:51:26] <ljharb> sveinse: nothing in JS checks contents, only identity.
[01:51:40] <stenno> n> const foo = {}; foo[{a: 23}] = 42; foo
[01:51:41] <jellobot> (okay) { '[object Object]': 42 }
[01:51:46] <stenno> ^ stringify
[01:51:52] <stenno> thats what they meant, i think
[01:51:53] *** Quits: flameboi (~flameboi@user/flameboi) (Ping timeout: 256 seconds)
[01:52:24] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.3)
[01:53:28] *** Joins: flameboi1 (dgw@user/flameboi)
[01:53:29] *** Quits: flameboi1 (dgw@user/flameboi) (Client Quit)
[01:53:31] *** Quits: heatwave (~heatwave@2401:4900:1c64:9915:9bed:35bf:3927:e875) (Quit: WeeChat 3.4)
[01:53:48] *** Joins: flameboi (dgw@user/flameboi)
[01:55:37] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[01:56:35] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Quit: ThePhilgrim)
[01:59:01] *** Quits: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:01:48] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[02:03:20] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[02:06:23] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Quit: Leaving)
[02:07:51] *** Quits: flameboi (dgw@user/flameboi) (Quit: Ping timeout (120 seconds))
[02:08:10] *** Joins: flameboi (dgw@user/flameboi)
[02:09:39] *** Joins: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au)
[02:10:26] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[02:13:54] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 250 seconds)
[02:23:17] *** Quits: lotharn|2 (~kvirc@2607:fb90:4a28:8c21:5836:9dbf:4083:4abd) (Ping timeout: 240 seconds)
[02:23:42] *** Joins: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se)
[02:24:06] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[02:24:29] *** Joins: pluri (~pluri@user/pluri)
[02:25:53] *** Quits: Unfixed (~Jake@64.31.33.140) (Ping timeout: 256 seconds)
[02:26:21] *** Joins: mat001 (~mat001@213.143.69.121)
[02:27:36] *** Joins: Unfixed (~Jake@64.31.33.140)
[02:28:31] *** Joins: lotharn|2 (~kvirc@2607:fb90:4a28:8c21:5836:9dbf:4083:4abd)
[02:29:17] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 268 seconds)
[02:30:01] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:34] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:32:57] *** Quits: kristijonas_ (~kristijon@78-56-32-39.static.zebra.lt) (Remote host closed the connection)
[02:33:40] *** Joins: kristijonas (~kristijon@78-56-32-39.static.zebra.lt)
[02:34:05] *** Joins: pizdets_ (~pizdets@183.182.115.221)
[02:34:44] *** Quits: pizdets (~pizdets@183.182.111.206) (Ping timeout: 250 seconds)
[02:35:02] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Ping timeout: 240 seconds)
[02:36:52] *** Quits: mat001 (~mat001@213.143.69.121) (Ping timeout: 250 seconds)
[02:37:05] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[02:40:18] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[02:44:32] *** Quits: Camilo (~hugh@host-92-1-126-125.as13285.net) (Ping timeout: 240 seconds)
[02:44:40] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[02:46:17] *** Quits: lotharn|2 (~kvirc@2607:fb90:4a28:8c21:5836:9dbf:4083:4abd) (Ping timeout: 240 seconds)
[02:46:45] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[02:48:02] *** Joins: lotharn|2 (~kvirc@2607:fb90:4a31:5876:537:3639:3679:9474)
[02:50:37] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:f86d:882c:68b2:7048) (Ping timeout: 240 seconds)
[02:51:37] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[02:51:57] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[02:54:23] *** Joins: Intelo (~Intelo@88.244.94.93)
[02:58:37] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[02:58:57] *** Quits: lotharn|2 (~kvirc@2607:fb90:4a31:5876:537:3639:3679:9474) (Ping timeout: 240 seconds)
[03:00:08] *** Joins: PenguinMan98 (~PenguinMa@65.153.38.250)
[03:01:14] *** Quits: c4017w (~c4017@199-7-158-225.eng.wind.ca) (Read error: Connection reset by peer)
[03:01:35] *** Quits: trafficjam (~qubes@1.145.227.213) (Ping timeout: 256 seconds)
[03:02:08] *** Joins: lotharn|2 (~kvirc@2607:fb90:4a31:5876:537:3639:3679:9474)
[03:02:46] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Killed (NickServ (GHOST command used by Sven_vB_)))
[03:02:48] *** Joins: Sven_vB_ (~sven@user/sven-vb/x-2094958)
[03:03:49] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 268 seconds)
[03:04:35] *** Joins: stenno (~stenno@user/stenno)
[03:06:54] *** Parts: sveinse (~sveinse@2a01:799:55e:1000:c23f:d5ff:fe69:c6fb) ()
[03:08:56] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[03:10:09] *** Joins: c4017w (~c4017@199-7-158-225.eng.wind.ca)
[03:11:47] *** Quits: davlefou (~davlefou@5.183.212.217) (Ping timeout: 256 seconds)
[03:14:55] *** Quits: stagas (~stagas@2a02:587:c41f:e7c6:54e2:22ea:9d9d:98d4) (Ping timeout: 268 seconds)
[03:16:06] *** Joins: trafficjam (~qubes@2001:8004:5190:2c63:a183:c5e0:d4bb:13db)
[03:19:22] *** Quits: linearbit (~linearbit@p200300d6ef0b59002220ad39f99dc0f5.dip0.t-ipconnect.de) (Quit: Leaving)
[03:19:46] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (Ping timeout: 250 seconds)
[03:21:16] *** Quits: flameboi (dgw@user/flameboi) (Read error: Connection reset by peer)
[03:21:34] *** Joins: flameboi (dgw@user/flameboi)
[03:23:31] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:68c6:1034:8cf9:5a2d)
[03:24:51] *** Joins: davlefou (~davlefou@5.183.213.164)
[03:25:37] *** Quits: c4017w (~c4017@199-7-158-225.eng.wind.ca) (Ping timeout: 240 seconds)
[03:25:55] *** Quits: DrowningElysium (uid190788@user/drowningelysium) (Quit: Connection closed for inactivity)
[03:27:27] *** Joins: summersault (~summersau@179.221.251.36)
[03:30:14] *** Joins: c4017w (~c4017@199-7-158-225.eng.wind.ca)
[03:33:28] *** Quits: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Quit: Bye)
[03:34:28] *** Joins: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[03:38:49] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[03:40:11] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[03:41:18] *** Joins: mat001 (~mat001@213.143.69.121)
[03:44:51] *** Quits: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se) (Quit: Leaving)
[03:45:47] *** Quits: mat001 (~mat001@213.143.69.121) (Ping timeout: 256 seconds)
[03:52:27] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:68c6:1034:8cf9:5a2d) (Quit: I have gone to sleep. ZZZzzz…)
[03:53:21] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[03:53:57] *** Quits: flameboi (dgw@user/flameboi) (Ping timeout: 240 seconds)
[03:55:05] *** Joins: gehn (~gehn@user/gehn)
[03:57:29] *** Quits: Intelo (~Intelo@88.244.94.93) (Ping timeout: 256 seconds)
[03:57:41] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[03:59:45] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[04:04:00] *** Quits: ttys000 (~ttys000@user/ttys000) (Read error: Connection reset by peer)
[04:08:03] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:2c10:39f9:e5eb:9172)
[04:09:49] *** Joins: alystair (~alystair@user/alystair)
[04:11:40] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[04:14:03] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Remote host closed the connection)
[04:14:05] <alystair> I just learned that toggling stylesheets via .disable boolean property causes a new network request to be sent out to the server when the sheet's re-enabled... hrm
[04:14:10] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[04:15:24] <alystair> maybe because it's a <link>
[04:18:00] *** Quits: noarb (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[04:19:03] <bobdobbs> I'm continuing my quest learning React. Yesterday I basically figured out how to create a function that generates components by using .map() within a component: https://gist.github.com/bobdobbs/ee2bcfeece9d85bcbdaafcf3c229a134
[04:19:12] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:2c10:39f9:e5eb:9172) (Quit: Client closed)
[04:19:37] <bobdobbs> So now I'm wondering: is it possible to have the .map function outside of the function List?
[04:21:07] <bobdobbs> I mean, I'm considering this: maybe I'll need to do more complex things. For example, maybe the function used as a callback to .map() needs to run it's own conditional logic.
[04:21:48] <bobdobbs> Like, instead of just creating a list, maybe it needs to do conditional logic on elements passed into it while it.
[04:22:11] <bobdobbs> In this case, I'm sure that it's *doable* to put complex logic into the callback.
[04:22:19] <bobdobbs> But it's going to become unreadable
[04:23:50] *** Joins: noarb (~noarb@user/noarb)
[04:23:57] *** Joins: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net)
[04:27:42] *** Joins: onosendi (~onosendi@user/onosendi)
[04:28:02] <ljharb> bobdobbs: not sure what you mean
[04:28:11] <ljharb> bobdobbs: you certainly may want an Item component
[04:28:13] <gehn> bobdobbs, you can address the readability by just making a second component, `ListItem`
[04:28:15] <ljharb> bobdobbs: but the `.map` belongs inside List
[04:28:32] <gehn> and yes, agree the map belongs inside the List
[04:29:38] <KevinX> or passed in as a prop to List  i.e. <List billionaires={billionaires} />
[04:29:43] <gehn> although, to be fair, it wouldn't be too out of order to make a: function renderListItems(items) { return items.map(...); }
[04:29:51] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[04:29:55] <KevinX> well, the propname might be better as `item`
[04:30:04] <KevinX> yeah that
[04:30:08] <KevinX> `items`
[04:30:21] <KevinX> And you need a key on the `<li>`
[04:30:45] <gehn> I would avoid this extra function unless you feel it becomes warranted later on though
[04:33:09] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.3)
[04:33:12] <ljharb> render functions are an antipattern imo
[04:33:16] <ljharb> they're better as components
[04:34:23] <KevinX> Also be careful with the param names. You're using `i` for both. `i` typically is used as an index
[04:35:57] <KevinX> Is that a render function?
[04:36:33] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[04:36:43] <ljharb> `renderListItems` is
[04:36:46] <ljharb> `List` is a component
[04:37:42] <KevinX> right, I missed that
[04:37:57] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[04:37:58] <KevinX> thought you meant the gist
[04:41:15] *** Quits: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net) (Remote host closed the connection)
[04:41:39] <KevinX> Going to go read this now. https://github.com/getify/monio/blob/master/MONADS.md
[04:42:02] *** Quits: g2anj (~v@58.228.230.4) (Ping timeout: 240 seconds)
[04:42:33] <systemfault> Saying the M-word here!?!?
[04:42:40] *** Joins: l__q (~modinfo@user/modinfo)
[04:43:27] *** Joins: c4017w_ (~c4017@199-7-158-225.eng.wind.ca)
[04:43:31] <bobdobbs> Whenever anyone says 'monad' I think of this: https://github.com/getify/monio/blob/master/MONADS.md
[04:43:45] <bobdobbs> whoops, wrong link. I meant this one: http://ldysinger.stjohnsem.edu/@texts2/1537_john-dee/monad/monad.htm
[04:43:57] *** Quits: c4017w (~c4017@199-7-158-225.eng.wind.ca) (Ping timeout: 240 seconds)
[04:44:22] *** Joins: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net)
[04:45:13] *** Quits: PenguinMan98 (~PenguinMa@65.153.38.250) (Quit: Client closed)
[04:45:45] *** Joins: netameta_ (~netameta@2a00:a040:193:50fe:8161:b8e7:d4d1:d0fa)
[04:48:39] *** Quits: netameta (~netameta@2a00:a040:193:50fe:f492:ff8e:bf3:3eb3) (Ping timeout: 268 seconds)
[04:49:48] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[04:53:33] *** Joins: xsperry (~xs@user/xsperry)
[04:54:21] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[04:55:08] <gehn> ljharb, they would be better as components, excepting that components require one and only one top level element
[04:55:49] <gehn> so, IMO "it depends", also I did disclaim that they probably shouldn't do this "render function" thing until later if they find it warranted
[04:56:06] <gehn> in a hopeful attempt to guide them towards seeing that it's not warranted if they address their goals in a different manner
[04:57:43] <ljharb> Which can be a fragment
[04:57:45] *** Joins: sam_1 (~sam_1@89.150.128.114)
[04:57:53] <ljharb> Containing multiple conceptual top-level elements
[04:58:07] *** Quits: Guest19 (~Guest19@2601:647:5280:2a50:e90c:8a2e:7515:668a) (Ping timeout: 256 seconds)
[04:58:10] <ljharb> so I’m not sure that problem applies in a post-react-16 world
[04:59:44] <bobdobbs> ljharb: what do you mean "post-react-16 world"?
[04:59:56] <gehn> post meaning after, react 16 meaning react 16
[05:02:02] *** Quits: sam_1 (~sam_1@89.150.128.114) (Ping timeout: 240 seconds)
[05:02:33] *** Joins: vysn (~vysn@user/vysn)
[05:02:58] <bobdobbs> btw, I'm digesting the answers about my List. Yeah, I think maybe having hte conditional logic inside a new ListItem function would probably be the best idea. And then putting the map() inside the function List
[05:04:56] <bobdobbs> The theoretical problem I'm thinking of is this: An array has objects. Some objects have elements that other objects do not. ie: http://pastie.org/p/0VRLJfARsNoz24OY0fwq3Y
[05:05:35] <bobdobbs> And I might want to output html elements for containing data *only* if the data exists.
[05:05:37] *** Quits: xsperry (~xs@user/xsperry) (Ping timeout: 240 seconds)
[05:06:07] <bobdobbs> So for the first two items in that array I wouldn't want to produce an 'img' element
[05:07:27] *** Quits: audiobirb (~audio@user/audio) (Remote host closed the connection)
[05:07:45] *** Joins: audiobirb (~audio@user/audio)
[05:07:49] *** Quits: nullDash (~nullDash@173.19.215.17) (Quit: Client closed)
[05:09:01] *** Joins: stagas (~stagas@2a02:587:c41f:e7c6:bd39:744d:7281:89a5)
[05:12:16] <systemfault> bobdobbs: Do you have a question? You can just check if image is defined
[05:12:37] <systemfault> Another way would be to add a discriminant to your objects
[05:13:00] *** Joins: onosendi (~onosendi@user/onosendi)
[05:13:01] <systemfault> "type": "billionnaire" or "type": "billionnaire_with_image"
[05:13:06] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[05:13:24] <onosendi> bobdobbs: https://gist.github.com/ec5e2acdcb45c08f5186523e460f7a4e
[05:13:35] *** Joins: xsperry (~xs@user/xsperry)
[05:13:53] <systemfault> ^
[05:14:37] <bobdobbs> systemfault: no further question. Just adding a little context to the ones I asked before. I'm digesting all the responses presenty, and looking at onosendi's gist
[05:17:51] *** Joins: Reign (~Username@ip98-161-226-10.ph.ph.cox.net)
[05:18:54] *** duch_kazatel is now known as robertmaxrees
[05:20:58] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[05:20:58] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[05:20:58] *** Joins: wroathe (~wroathe@user/wroathe)
[05:21:31] <bobdobbs> onosendi: what does the '!!' mean, at the start of the expression on line 10
[05:22:29] <bobdobbs> oh, nvm. I googled it. found articles
[05:22:54] *** Joins: kakashiAL (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de)
[05:23:13] <onosendi> n> const a = {}; console.log(!!a.foo); @ bobdobbs
[05:23:14] <jellobot> bobdobbs, false
[05:23:35] <onosendi> n> const a = {}; console.log(a.foo);s
[05:23:36] <jellobot> (fail) undefined ReferenceError: s is not defined
[05:24:41] *** Joins: g2anj (~v@58.228.230.4)
[05:25:40] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[05:26:12] <ljharb> bobdobbs: i just meant that “only one top level element” hasn’t been a constraint in react since v16
[05:27:13] *** Quits: kakashiAL (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[05:28:32] *** Quits: xsperry (~xs@user/xsperry) (Ping timeout: 240 seconds)
[05:28:55] *** Quits: peteyboy1 (~peteyboy1@95.169.226.66) (Read error: Connection reset by peer)
[05:31:04] *** Quits: trafficjam (~qubes@2001:8004:5190:2c63:a183:c5e0:d4bb:13db) (Read error: Connection reset by peer)
[05:31:22] *** Joins: crashrep (~crashrep@user/crashrep)
[05:32:18] <crashrep> Hey guys, i'm learning about using ajax to POST a form in json, and i wanted to double check, can the url in $.ajax can be a relative path? i saw lots of examples only using the full url
[05:32:19] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[05:35:56] *** Quits: SpiceMan (~Don_Spice@user/SpiceMan) (Quit: WeeChat 2.8)
[05:36:33] *** Joins: trafficjam (~qubes@2001:8004:5190:2c63:a183:c5e0:d4bb:13db)
[05:38:12] *** Quits: ZeroWalker (~ZeroWalke@2001:9b1:28f8:8300:7164:4c68:eefc:f59d) (Quit: Leaving)
[05:38:35] *** Joins: kakashiAL (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de)
[05:39:42] <KevinX> crashrep that's jquery right? I think so, but you need to consider where you're calling from
[05:40:45] <crashrep> yes KevinX . if you don't mind, what do you mean where I'm calling from? I have a project where I'm hoping that I can POST via ajax to "/api/v1/upload", for example. Would this be passable?
[05:40:58] <KevinX> onosendi one thing I'd change there if not using typescript is `if (!items?.length)` :P
[05:42:03] *** Quits: mknod (~mknod@user/mknod) (Quit: mknod)
[05:42:56] <KevinX> crashrep yeah that's probably ok. If you didnt include the starting `/` then you would have to make sure you're not on a nested page
[05:43:07] <crashrep> ah i gotcha, thanks so much KevinX
[05:43:24] <KevinX> there's one really good way to check if it works though ;-)
[05:43:32] *** Quits: kijix\ (~shinomori@c-73-143-164-176.hsd1.ct.comcast.net) (Ping timeout: 268 seconds)
[05:44:25] <KevinX> I'd probably prefer the relative path even, so it's not tied to a specific domain
[05:44:42] *** Joins: lotharn (~kvirc@2607:fb90:4a27:4710:3649:9244:b967:588b)
[05:46:57] *** Quits: lotharn|2 (~kvirc@2607:fb90:4a31:5876:537:3639:3679:9474) (Ping timeout: 240 seconds)
[05:47:13] <onosendi> KevinX: Indeed.
[05:49:53] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.3)
[05:50:32] *** Quits: eXtr3m0 (~eXtr3m0@user/eXtr3m0) (Ping timeout: 240 seconds)
[05:50:52] <bobdobbs> I was just about to say to onosendi: I can see how cool the terseness is in that gist he sent me. But I do have trouble mentally parsing it
[05:51:21] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[05:51:35] <KevinX> that's how most of the react code I see looks, maybe without the !! though
[05:51:57] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 240 seconds)
[05:52:01] *** Quits: trafficjam (~qubes@2001:8004:5190:2c63:a183:c5e0:d4bb:13db) (Read error: Connection reset by peer)
[05:52:23] *** Joins: onosendi (~onosendi@user/onosendi)
[05:52:36] *** Quits: Sven_vB_ (~sven@user/sven-vb/x-2094958) (Ping timeout: 276 seconds)
[05:54:12] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:54:26] *** Joins: xsperry (~xs@user/xsperry)
[05:54:37] *** Quits: kakashiAL (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[05:55:25] <KevinX> I wouldn't worry too much about abstraction to super small components though. You could have one component called sidebar that has all the code and state in it. Usually you'll know when you need to extract a component
[05:56:08] <KevinX> Often for readability, you have some complex logic, to avoid duplication, what else
[05:56:12] <gehn> bobdobbs, it's nice for short things and you'll easily understand it in time
[05:56:24] <gehn> for more complex things, the answer is usually "make a new component"
[05:56:37] <bobdobbs> gehn: KevinX kk
[05:57:16] <gehn> so, like you could make a component: function OptionalItemImage(item) { if (item.image) { /* do this */ } else { /* do that * } }
[05:57:25] <gehn> ofc, expanded so it's not all on one line :)
[05:57:30] <onosendi> KevinX: `{foo.bar && ... }` If `foo.bar` is a falsy value like 0, React will render it to the HTML document.
[05:57:43] *** Joins: trevors (~trevors@user/trevors)
[05:57:52] *** Joins: trafficjam (~qubes@2001:8004:5190:2c63:a183:c5e0:d4bb:13db)
[05:58:07] <bobdobbs> I aced one of my self-study challenges yesterday with this result. And I was happy that I did it, but I feel uncomfortable with the readability. And that's after I spaced out the <ul>... </ul> to make it more readable: https://gist.github.com/bobdobbs/ee2bcfeece9d85bcbdaafcf3c229a134
[05:58:21] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[05:58:41] <gehn> bobdobbs, you need a key
[05:59:01] <bobdobbs> gehn: hehe. yeah. KevinX and my browser consolve keep reminding me of that too :)
[05:59:43] <bobdobbs> I haven't looked up what that means yet, but I do know it's needed!
[06:00:52] <gehn> bobdobbs, <li key="something_unique">
[06:01:26] <gehn> not that this is not an HTML thing so much as a React thing, react needs a unique key any time you render like that with .map()
[06:01:30] <gehn> note that*
[06:01:59] <bobdobbs> gehn: ok
[06:02:02] *** Joins: slaughtr (~slaughter@europa.whatbox.ca)
[06:02:34] <gehn> !code
[06:02:34] <jellobot> gehn, Show some code, but don't paste it on the channel. You can provide a test case we can run and help you with your problem with http://jsfiddle.net , http://jsbin.com , or http://requirebin.com . Sites like http://gist.github.com/ and http://bpaste.net are cool too.
[06:02:42] *** Quits: hassoon_ (hassoon@user/hassoon) (Ping timeout: 250 seconds)
[06:02:50] *** Quits: slaughter (~slaughter@europa.whatbox.ca) (Ping timeout: 260 seconds)
[06:03:43] *** Joins: hassoon_ (hassoon@shell.oddprotocol.org)
[06:03:52] <gehn> bobdobbs, also your `i` is shadowed, don't do that
[06:04:00] <gehn> you don't need to pass anything at all to List
[06:04:14] <gehn> billionaires is effectively a global
[06:04:48] <onosendi> KevinX: See the '0' rendered before 'John'. `!!item.image` guarantees nothing will be rendered. https://codesandbox.io/s/adoring-leftpad-udi56?file=/src/App.js
[06:05:03] <KevinX> onosendi I believe only if it's 0 specifically though, right?
[06:05:08] *** Joins: l__q (~modinfo@user/modinfo)
[06:06:37] <KevinX> im not saying you shoulnd't do it. I just don't see it very often. I do see [].length > 0 && <> though
[06:07:03] <KevinX> Some people prefer to always use a ternary though
[06:07:13] <KevinX> I lately have been doing that
[06:07:17] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Ping timeout: 240 seconds)
[06:07:37] <KevinX> item.image ? <img /> : null
[06:07:55] <KevinX> But depends on the data
[06:07:58] *** Quits: ensyde (~ensyde@2600:1700:2050:1040:6816:2795:9c3:9492) (Read error: Connection reset by peer)
[06:09:12] *** Quits: stagas (~stagas@2a02:587:c41f:e7c6:bd39:744d:7281:89a5) (Ping timeout: 250 seconds)
[06:09:19] <onosendi> KevinX: I was under the impression it was anything falsy, but testing it now it seems like only `0` and `NaN` break it. It's happened to me multiple times, so I guess it's just a habbit of doing it :P
[06:09:45] <gehn> bobdobbs, I would do something more like this https://bpa.st/XTOA
[06:09:49] *** Joins: stagas (~stagas@athedsl-4414652.home.otenet.gr)
[06:10:58] <onosendi> gehn: index as a key? o_O
[06:11:10] <gehn> emphasis on "more like"
[06:11:16] <gehn> I'm trying to keep it uncomplicated
[06:11:18] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[06:11:32] <gehn> if they are still here, yes I will make note that there will be significantly more code in the real world
[06:11:33] <KevinX> ooo never do that :P
[06:11:40] <austincheney> gehn, i am certain you are using that word wrong "uncomplicated"
[06:11:46] <austincheney> complicated means many
[06:12:14] <gehn> I'm certain you're a pedant and it doesn't matter if most humans understand what I mean
[06:12:20] <gehn> also, yes, many... many extra bits of code
[06:13:29] *** Joins: jazzy2 (~jaziz@user/jaziz)
[06:13:47] <austincheney> gehn, what is the end state you would like?
[06:13:57] <gehn> wat?
[06:14:13] <gehn> I'm not asking a question or seeking help in here
[06:14:33] <gehn> what is the end state *you* would like from your grammar nazi activities
[06:15:02] <gehn> inb4 you note that it's technically not a grammatical issue and rather a vocabulary one, or should I say *non* issue
[06:15:03] <KevinX> I would like to end up in a state of nirvana
[06:15:39] *** Joins: crazyhorse (~crazyhors@115-166-19-92.tpgi.com.au)
[06:15:57] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[06:16:24] <wroathe> I'd like a vanilla snack pack
[06:16:41] <wroathe> (keep your goals achievable and all that)
[06:24:22] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 250 seconds)
[06:24:35] *** Joins: src (~src@user/src)
[06:26:43] *** Quits: c4017w_ (~c4017@199-7-158-225.eng.wind.ca) (Ping timeout: 256 seconds)
[06:27:51] *** Quits: monoxane (~monoxane@user/monoxane) (Ping timeout: 256 seconds)
[06:28:48] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[06:29:51] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[06:30:21] *** Joins: keypusher (keypusher@user/keypusher)
[06:30:28] *** Joins: trevors (~trevors@user/trevors)
[06:30:55] *** Joins: monoxane (~monoxane@user/monoxane)
[06:31:13] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.3)
[06:33:31] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[06:33:33] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[06:34:03] *** Quits: mintoyatsu (~mint@ip24-255-4-17.tc.ph.cox.net) (Remote host closed the connection)
[06:34:05] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[06:34:20] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 250 seconds)
[06:34:22] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[06:38:20] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Read error: Connection reset by peer)
[06:44:16] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[06:44:35] <ljharb> i'd like dunkaroos
[06:45:02] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[06:50:35] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[06:51:27] *** Parts: nomic (~nomic@2a00:23c7:ec90:a501:b80d:e2db:26ac:c3a6) (Leaving)
[06:51:29] *** Quits: vinleod (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[06:54:31] *** Joins: Gomme (~Gomme@2a01:cb10:86d5:a500:17c:2e43:27eb:9f6d)
[06:55:21] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[07:00:47] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[07:01:13] <oscurochu> im trying to learn how to use macros in vscodium. i've already installed the plugin. i've assigned my keybinding to the mocro. now i just need to program the macro.
[07:01:44] <oscurochu> how do i create a macro for a sequence of key presses?
[07:02:16] <oscurochu> i might have figured it out
[07:04:44] <gehn> so is that supposed to be like vim macros, but worse? ;)
[07:11:08] *** Joins: zebrag (~chris@user/zebrag)
[07:12:01] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:12:20] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Ping timeout: 268 seconds)
[07:12:59] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[07:13:39] *** Quits: zebrag (~chris@user/zebrag) (Client Quit)
[07:13:46] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:14:13] <oscurochu> gehn i think i might be catching on to why you love vim so much. i just did something that would  normally have been extremely tedious, and got it done in only a few minutes
[07:14:28] <austincheney> https://kdy1.dev/posts/2022/1/tsc-go how could any TypeScript project take 133 seconds to compile?  My personal application is nearing 100k loc and takes 9 seconds to compile.
[07:15:36] <oscurochu> gehn any tips on migrating from wordpress to react/nextjs?
[07:17:12] <oscurochu> im trying to maintain the layout/theme as much as possible, but i feel like thats being unreasonable
[07:17:41] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Remote host closed the connection)
[07:18:04] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[07:18:07] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[07:19:21] <oscurochu> plus if i use vim, i wont have the lag of vscodium ugh
[07:19:33] <ljharb> austincheney: loc is irrelevant (always), it's about the type complexity.
[07:19:56] <ljharb> you could have a 1k loc project take a minute to compile, and a 1M line of code project take 10 seconds. it just depends on the type graph.
[07:21:38] *** Joins: src_ (~src@user/src)
[07:22:41] *** Joins: pmercado (~pmercado@186.107.63.175)
[07:25:17] *** Quits: src (~src@user/src) (Ping timeout: 268 seconds)
[07:31:02] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[07:32:28] <systemfault> Our big monorepo at work takes roughly 2 minutes to compile.. but we're talking about a giant monorepo with 50 services
[07:33:41] <systemfault> I was able to slash the original build time by 1m by changing a few type aliases to interfaces
[07:34:58] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[07:37:05] *** Quits: src_ (~src@user/src) (Quit: Leaving)
[07:38:24] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:38:24] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:38:24] *** Joins: wroathe (~wroathe@user/wroathe)
[07:39:51] *** Quits: Reign (~Username@ip98-161-226-10.ph.ph.cox.net) (Quit: Going offline, see ya! (www.adiirc.com))
[07:43:17] *** Quits: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au) (Ping timeout: 240 seconds)
[07:43:56] <KevinX> oscurochu being serious about the WP to Nextjs?
[07:46:10] <oscurochu> unfortunately.
[07:47:33] <KevinX> You can't really migrate, but you can set up WP with the GraphQL plugin and rebuilt your next app using data from WP
[07:47:51] <oscurochu> nice
[07:47:59] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[07:48:13] <KevinX> then i guess copy over CSS and html
[07:48:14] <oscurochu> however their isn't much data. just 5 web pages with static content.
[07:48:36] <KevinX> I mean WP is just a CMS tool
[07:48:59] <oscurochu> the wp css and html is kind of clunky. i was hoping to cleanup all the garbage. not sure if there is a better way than to just start fresh and do my best to mimick the layout/theme myself
[07:49:14] <KevinX> if you're not going to use that part of it and only have static pages then dont bother with WP at all
[07:49:46] <oscurochu> the wp site is already done. im just trying to help out a friend get off of wp
[07:50:20] <KevinX> If theya re creating posts and such then its not a static site and you can use the graphql suggestion
[07:50:21] <oscurochu> so later on we can do greater things
[07:50:55] *** Joins: audiobirb (~audio@user/audio)
[07:50:56] <KevinX> i wouldn't discount WP too much as a cms tool. But definitely better to use it headless
[07:51:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[07:52:09] <oscurochu> headless?
[07:52:39] <oscurochu> this wp code is so bad... i think im gonna be a lot happier to just start with a fresh blank html page
[07:53:03] <systemfault> That fresh blank page won't give you a UI to add content.
[07:53:22] <KevinX> Yeah, you need a cms for your friend, right?
[07:53:31] <systemfault> So KevinX is suggesting that you use WP just for its API, not its frontend
[07:53:43] <systemfault> (Headless)
[07:54:33] <KevinX> NextJS will need to get the content from somewhere. Or do you plan to just have it be file based? If so then not much to migrate, just copy/paste
[07:59:11] *** Joins: Rockwood (~Rocky@user/rocky)
[07:59:29] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:59:29] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:59:29] *** Joins: wroathe (~wroathe@user/wroathe)
[07:59:56] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[08:00:55] <oscurochu> what are my alternatives to bootstrap?
[08:01:35] <systemfault> These days, I hear a lot about tailwind, no idea if it's good or not
[08:01:42] <oscurochu> i mean, thats a vague question. where do i begin to choose one lol
[08:01:48] <systemfault> There's also material ui...
[08:04:11] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[08:04:56] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[08:05:36] *** Joins: yagamilito (~yagamilit@98.51.90.15)
[08:05:52] *** Joins: chao (~stenno@user/stenno)
[08:06:05] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[08:06:29] *** Quits: yagamilito (~yagamilit@98.51.90.15) (Client Quit)
[08:07:27] *** vdamewood is now known as Guest2444
[08:07:27] *** Quits: Guest2444 (~vdamewood@fedora/vdamewood) (Killed (lithium.libera.chat (Nickname regained by services)))
[08:07:27] *** vinleod is now known as vdamewood
[08:09:04] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 268 seconds)
[08:11:59] <Rockwood> MUI
[08:12:40] <dave0> if the govt bought the copyright for a flag, wouldn't that make the flag public domain?
[08:13:23] <dave0> cos you know govt for the people
[08:14:47] <Rockwood> dave0, is programming talk?
[08:15:39] <dave0> oh nah not really
[08:15:52] <dave0> it was in the news
[08:22:07] *** Quits: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com) (Ping timeout: 256 seconds)
[08:24:27] *** Joins: lispy (~lispy4@84.69.59.93)
[08:33:17] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[08:33:28] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:4526:2037:e10a:c5df)
[08:34:21] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 268 seconds)
[08:43:20] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[08:43:20] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[08:43:20] *** Joins: wroathe (~wroathe@user/wroathe)
[08:44:01] *** Joins: lotharn|2 (~kvirc@2607:fb90:4a27:7c59:7256:96f0:d64e:8393)
[08:45:12] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Ping timeout: 250 seconds)
[08:45:37] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Ping timeout: 240 seconds)
[08:47:17] *** Quits: lotharn (~kvirc@2607:fb90:4a27:4710:3649:9244:b967:588b) (Ping timeout: 240 seconds)
[08:47:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[08:51:13] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[08:51:14] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[08:59:04] *** Quits: pmercado (~pmercado@186.107.63.175) (Ping timeout: 250 seconds)
[08:59:06] *** Joins: pmercado_ (~pmercado@186.107.59.154)
[08:59:17] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[09:00:37] <crazyhorse> dave0: not really public domain.. it's just the gov can then set terms of use
[09:00:53] *** Joins: easbarba (~user@2804:1b2:81:9dbd:5adc:d620:15e:795b)
[09:01:33] <friend> what is the easiest way to find the nearest coordinate pair in a grid to a given coordinate. I have an array of x and y coordinates that represent snap positions and I am trying to find the nearest snap position relative to the mouse position?
[09:01:34] <crazyhorse> you know.. GPL vs MIT kinda difference
[09:01:39] *** Joins: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com)
[09:03:08] <crazyhorse> friend: google NNS
[09:03:44] <crazyhorse> lots of solution.. depending on how many snap points there are.. probably just measuring all of them is the easiest
[09:04:35] <friend> thanks. I did and got nothing related to coordinate guessing...NNS Geometry?
[09:04:56] <crazyhorse> nearest neighbor search
[09:04:57] <friend> nearest neighbor search. LOL thanks
[09:05:24] <crazyhorse> do the measure the disance to all of them first
[09:05:28] <crazyhorse> it'll probably be super fast
[09:05:57] *** Quits: hax (~hax@user/hax) (Ping timeout: 240 seconds)
[09:06:23] <crazyhorse> if the snap points are regular.. then you might not need to do a search
[09:06:33] <friend> I figure since it's a regular grid with a certain distance between the, by dividng the x and y coordinates by the grid distance, i should get the index of the nearest coordinate above or below the mouse position.
[09:06:36] <crazyhorse> i.e. if snap points are at 10, 20, 30, 40, 50, 60, 70
[09:07:52] *** Quits: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net) (Remote host closed the connection)
[09:09:19] <Maxdamantus> If you're not creating some sort of tree/index to make it faster, you just need to try each pair and remember the one that had the smallest distance.
[09:11:13] <Maxdamantus> let min = null, minDist = 0; for(const item of items){ const dist = Math.hypot(item.x, item.y, x, y); if(min == null || dist < minDist){ min = item; minDist = dist; } }
[09:12:37] <Maxdamantus> It's linear anyway, so unlikely to be a performance concern unless you're dealing with millions of points.
[09:14:04] <Maxdamantus> Usually you'd need to do something faster if you're comparing points between multiple large sets, but it sounds like you're only comparing a single point (mouse position) against a set of points, so the linear search should be fine.
[09:15:27] <Maxdamantus> er, got that `Math.hypot` call wrong.
[09:15:37] <Maxdamantus> let min = null, minDist = 0; for(const item of items){ const dist = Math.hypot(item.x - x, item.y - y); if(min == null || dist < minDist){ min = item; minDist = dist; } }
[09:16:26] <friend>  so you don't think that let newx=Math.round(e.pageX/radius)*radius would give me the nearest x coordinate?
[09:17:40] <dave0> this might be interesting, i remember reading an article on it... https://en.wikipedia.org/wiki/Locality_sensitive_hashing
[09:18:10] <Maxdamantus> friend: if you're just doing snap-to-grid, sure. But what was the array for?
[09:18:14] <dave0> except it's not exact, it's probabilistic
[09:19:23] <friend> I am trying to make a drag and drop hexagon system where the hexagons are all the same size but they snap together....
[09:20:10] <Maxdamantus> friend: then sure, snap-to-grid should work. Shouldn't need an array of coordinates.
[09:20:37] <friend> I figured if I calculated the center of the hexagon being drug and snapped it to a grid based on the radius of the hexagon it might work. But it might be off because the hexagons may not align in a square grid.
[09:21:13] <friend> In which case, if I used an array of coordinates, the index of the nearest coordinate in the array would be Math.round(e.PageX/radius) I was hoping.
[09:21:42] <Maxdamantus> You probably don't want the radius.
[09:22:32] <Maxdamantus> Actually, I guess it depends how they're rotated.
[09:23:15] <friend> every odd row would be .5 radius off in x
[09:23:23] *** Joins: han-solo (~han-solo@user/han-solo)
[09:23:49] <Decker> yes
[09:26:22] *** Quits: pmercado_ (~pmercado@186.107.59.154) (Ping timeout: 250 seconds)
[09:30:08] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[09:30:17] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[09:31:43] *** Joins: oscuroch_ (~oscurochu@097-096-050-227.res.spectrum.com)
[09:34:08] *** Joins: Rockwood_ (~Rocky@user/rocky)
[09:34:17] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[09:34:36] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Ping timeout: 250 seconds)
[09:34:57] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 240 seconds)
[09:36:34] *** Joins: bliminse_ (~bliminse@host86-188-36-166.range86-188.btcentralplus.com)
[09:36:55] *** Quits: bliminse (~bliminse@host86-188-36-178.range86-188.btcentralplus.com) (Ping timeout: 256 seconds)
[09:37:03] *** dirigible_ is now known as dirigible
[09:37:10] *** Quits: stagas (~stagas@athedsl-4414652.home.otenet.gr) (Remote host closed the connection)
[09:37:10] *** Quits: dirigible (~dirigible@c-66-41-40-51.hsd1.mn.comcast.net) (Quit: Leaving)
[09:37:26] *** Joins: dirigible (~dirigible@2a00:1678:1337:7a25:5123:8f18:de5a:4ff3)
[09:37:32] *** Joins: rosheko (~rosheko@80.244.43.201)
[09:37:56] *** Joins: stagas (~stagas@2a02:587:c425:4449:ced3:1acf:3352:cd06)
[09:38:36] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[09:38:59] *** Quits: Rockwood_ (~Rocky@user/rocky) (Client Quit)
[09:41:06] *** Joins: stagas_ (~stagas@2a02:587:c425:4449:79ec:866f:daf9:3124)
[09:41:43] <rama> is there a technical term for applying a filter to an array that is fetched asynchronously?
[09:43:25] *** Quits: stagas (~stagas@2a02:587:c425:4449:ced3:1acf:3352:cd06) (Ping timeout: 268 seconds)
[09:45:23] <friend> is this a problem:   for (let i=0;x<1000;i++) {x+=10 console.log(x);}
[09:48:47] *** Quits: rosheko (~rosheko@80.244.43.201) (Read error: Connection reset by peer)
[09:49:22] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[09:50:16] *** Joins: gpap (~pap@athedsl-384916.home.otenet.gr)
[09:54:28] <silly> n> for(;x<3;)console.log(x++)
[09:54:29] <jellobot> (fail) ReferenceError: x is not defined
[09:54:35] <silly> n> x=1;for(;x<3;)console.log(x++)
[09:54:36] <jellobot> (okay) 1 2
[09:54:54] <silly> you can do that, but then i'd rather use a while loop
[09:55:50] *** Quits: kmh (~kmh@2a00:6020:5004:6800:5cef:1235:f287:aaad) (Quit: Leaving)
[09:56:09] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[09:56:58] <silly> or just stick to how for is supposed to be used
[09:57:34] <han-solo> n> for(let x=0; x<10;x+=2)console.log(x)
[09:57:35] <jellobot> (okay) 0 2 4 6 8
[10:02:22] *** Quits: pluri (~pluri@user/pluri) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:02:42] *** Joins: pluri (~pluri@user/pluri)
[10:03:08] *** Quits: pluri (~pluri@user/pluri) (Client Quit)
[10:08:20] *** Joins: kmh (~kmh@2a00:6020:5004:6800:151a:944b:c8ba:cf58)
[10:17:59] *** Joins: hax (~hax@69.165.175.67)
[10:17:59] *** Quits: hax (~hax@69.165.175.67) (Changing host)
[10:17:59] *** Joins: hax (~hax@user/hax)
[10:20:58] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:4526:2037:e10a:c5df) (Quit: Client closed)
[10:28:23] *** Quits: easbarba (~user@2804:1b2:81:9dbd:5adc:d620:15e:795b) (Remote host closed the connection)
[10:30:02] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[10:30:11] *** Quits: zer0 (~zer0@user/zer0) (Ping timeout: 256 seconds)
[10:31:03] *** Quits: lispy (~lispy4@84.69.59.93) (Quit: Leaving)
[10:32:43] *** Joins: flameboi (~flameboi@user/flameboi)
[10:40:45] *** Quits: xsperry (~xs@user/xsperry) (Read error: Connection reset by peer)
[10:44:08] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[10:44:08] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[10:44:08] *** Joins: wroathe (~wroathe@user/wroathe)
[10:48:05] *** Joins: undefined_bob (~undefined@user/undefined-bob/x-5411918)
[10:49:24] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[10:55:36] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[10:57:52] *** Quits: gpap (~pap@athedsl-384916.home.otenet.gr) (Quit: Leaving)
[10:59:17] *** Quits: vats (~vats@180.149.226.242) (Ping timeout: 240 seconds)
[11:00:21] *** Joins: ensyde (~ensyde@2600:1700:2050:1040:3990:b270:fa9e:e455)
[11:05:31] *** Joins: xsperry (~xs@user/xsperry)
[11:06:08] *** Joins: sam_1 (~sam_1@87.51.251.118)
[11:06:17] *** Quits: alystair (~alystair@user/alystair) (Ping timeout: 240 seconds)
[11:11:01] *** Quits: xsperry (~xs@user/xsperry) (Read error: Connection reset by peer)
[11:13:27] *** Quits: PowaBanga (~PowaBanga@user/powabanga) (Ping timeout: 256 seconds)
[11:14:11] *** Joins: cotko (~cotko@188-230-251-153.dynamic.t-2.net)
[11:14:52] *** Joins: xsperry (~xs@user/xsperry)
[11:18:11] *** Joins: SpiceMan (~Don_Spice@user/SpiceMan)
[11:23:55] *** Joins: poncha (~poncha@user/poncha)
[11:23:59] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Quit: WeeChat 3.3)
[11:24:45] *** Quits: xsperry (~xs@user/xsperry) (Read error: Connection reset by peer)
[11:27:32] *** Joins: iomari891 (~iomari891@105.112.138.38)
[11:33:34] *** Quits: iomari891 (~iomari891@105.112.138.38) (Remote host closed the connection)
[11:33:43] *** Joins: zer0 (~zer0@user/zer0)
[11:35:21] *** Joins: lotharn (~kvirc@2607:fb90:4a28:4ecf:cd86:f573:681e:4176)
[11:36:05] *** Joins: vysn (~vysn@user/vysn)
[11:36:12] *** Joins: xsperry (~xs@user/xsperry)
[11:36:27] *** Joins: mat001 (~mat001@213.143.69.121)
[11:37:03] *** Joins: Duckling (uid193337@id-193337.tinside.irccloud.com)
[11:37:19] *** Parts: Duckling (uid193337@id-193337.tinside.irccloud.com) ()
[11:38:37] *** Quits: lotharn|2 (~kvirc@2607:fb90:4a27:7c59:7256:96f0:d64e:8393) (Ping timeout: 240 seconds)
[11:45:11] *** Quits: mat001 (~mat001@213.143.69.121) (Ping timeout: 256 seconds)
[11:46:38] *** Joins: kakashiAL (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de)
[11:47:43] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[11:49:52] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[11:51:49] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[11:56:25] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[11:56:41] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[11:58:33] *** Quits: SpiceMan (~Don_Spice@user/SpiceMan) (Read error: Connection reset by peer)
[11:58:35] *** Joins: fef (~thedawn@user/thedawn)
[11:59:12] *** Joins: SpiceMan (~Don_Spice@user/SpiceMan)
[12:09:40] *** Quits: stagas_ (~stagas@2a02:587:c425:4449:79ec:866f:daf9:3124) (Quit: Leaving)
[12:09:56] *** Joins: stagas (~stagas@2a02:587:c425:4449:79ec:866f:daf9:3124)
[12:15:38] *** Parts: _mikey (~mikey@user/mikey/x-4335048) (WeeChat 3.4)
[12:16:02] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 240 seconds)
[12:16:23] *** Joins: anderson_ (~anderson@176.106.245.98)
[12:17:25] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[12:17:25] *** Joins: Camilo (~hugh@host-92-1-126-125.as13285.net)
[12:17:29] *** Quits: flameboi (~flameboi@user/flameboi) (Ping timeout: 256 seconds)
[12:17:49] *** Joins: flameboi (dgw@user/flameboi)
[12:17:51] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Ping timeout: 256 seconds)
[12:18:46] <bobdobbs> how can I test to see if a prop has a value?
[12:19:21] <bobdobbs> Sorry, I should have said in In React how can I test to see if a prop has a value? Or even exists?
[12:19:42] *** Joins: Lenkov45 (~Lenkov45@45.133.193.24)
[12:20:09] <bobdobbs> There's probably a better way of asking that question - this should be kinda basic but I can't find an answer on google
[12:21:02] <friend> Object.hasownproperty?
[12:21:55] <bobdobbs> oh yeah. props are just objects. I should have thought of that
[12:22:35] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[12:27:52] <bobdobbs> k, now I'm trying to put conditional logic inside a jsx. I'm getting the error "unexpected 'if'"
[12:27:57] <bobdobbs> http://pastie.org/p/0X93ifwigJPFqO3dbb4pKz
[12:29:50] <since_> bobdobbs: why {props}
[12:29:57] *** Quits: Lenkov45 (~Lenkov45@45.133.193.24) (Ping timeout: 240 seconds)
[12:29:58] <since_> Thats a javascript block noe
[12:30:00] <since_> Now
[12:30:48] <bobdobbs> since_: should I remove the curlies?
[12:31:59] <since_> 4 of 6 of them should be removed. Choose wisely :p
[12:32:02] *** Quits: kakashiAL (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[12:32:11] <since_> Wait
[12:32:59] <bobdobbs> honestly, I can't tell
[12:33:22] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[12:33:32] <bobdobbs> I know I have to keep the curly braces that start on line 6, cos the jsx has an expression
[12:33:45] <since_> Remove all {} but keep the ones that switch vom jsx to javascript code. Keep the ones for the if
[12:33:55] <bobdobbs> ok
[12:34:55] <bobdobbs> Huh. That's interesting. That actually parses. The error goes away.
[12:35:29] <bobdobbs> I mean, nothing renders. But the code parses
[12:35:46] <bobdobbs> So this is what I have now: http://pastie.org/p/6rCDt7jc5H2rdEdhjvaI7P
[12:35:47] <since_> Then make an else and see
[12:35:53] <silly> use default values
[12:36:05] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 268 seconds)
[12:36:15] <bobdobbs> wait... what happened to the rule that expressions inside jsx have to be wrapped in curlies?
[12:36:42] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 268 seconds)
[12:36:56] <bobdobbs> silly: I'm not sure what you mean, I'm afraid
[12:36:56] <silly> function ListItem({ name = '' }) {/*use name here*/}
[12:37:17] <silly> it'll be either an empty string or the name passed from parent
[12:37:45] <bobdobbs> I want to keep it as simple as possible for the moment. I'm having trouble reading my own test code as it is
[12:37:58] <bobdobbs> jsx is a bit of a mindfk
[12:38:18] <silly> then, props.name is enough for checking
[12:39:00] <since_> bobdobbs: you kept only 2 braces. You need to place 2 more again. Or moce the decision logic to the top
[12:39:13] <bobdobbs> hmmmm
[12:39:34] *** Joins: thiras (~thiras@user/thiras)
[12:40:23] <bobdobbs> since_: I'm assuming you mean the braces around the logic?
[12:40:30] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 250 seconds)
[12:40:38] <bobdobbs> since_: I added them back and the error returns: http://pastie.org/p/74kipm0RsaLdIgyIofOMfp
[12:41:09] <bobdobbs> oh whoops. I can see the typo there
[12:41:42] <bobdobbs> k, updated function without the type. Error still exists: http://pastie.org/p/55vnkJ3xb3zZqOTnRJqg86
[12:42:10] <corwin> I hate it when I typo "typo"
[12:42:20] <corwin> (not picking on you, I do this all the time)
[12:42:46] <bobdobbs> oh! I can see somethign on stackoverflow that says that if-else statements don't work inside jsx. Is that right>
[12:43:02] *** Quits: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com) ()
[12:43:07] <since_> Would not say so
[12:43:44] <bobdobbs> https://react-cn.github.io/react/tips/if-else-in-JSX.html
[12:44:40] <since_> Yes they have if conditions as well. But the thing is line 7 has no meaning
[12:45:54] *** Joins: PowaBanga (~PowaBanga@user/powabanga)
[12:45:56] <bobdobbs> So maybe it's an issue with the transpiler I'm using?
[12:46:00] <since_> No
[12:46:16] *** Quits: devslash (~devslash@46.232.211.210) (Quit: ZNC 1.8.2 - https://znc.in)
[12:46:51] *** Joins: devslash (~devslash@46.232.211.210)
[12:47:53] *** Quits: \mSg (mSg@user/msg/x-0285936) (Ping timeout: 256 seconds)
[12:48:03] <since_> bobdobbs: you can do the things that are described in the article you linked
[12:48:55] <bobdobbs> since_: I'm reading it now. It's pushing my brain quite a bit
[12:49:46] <bobdobbs> I'm still trying to understand the first part. It says unambiguously that if-else won't work. But then it's ambiguous about 'if' statements. So I'm trying to read the example code it gives.
[12:49:53] *** Joins: chao (~stenno@user/stenno)
[12:50:04] *** Joins: eXtr3m0 (~eXtr3m0@user/eXtr3m0)
[12:50:53] <bobdobbs> ah, ok. The code example clarifies. 'if' statements won't work
[12:51:50] <since_> JSX translates to function calls. <Foo></Foo> is the same as calling Foo(props)
[12:52:59] <since_> the stuff inbetween <Foo>stuff</Foo> becomes props.children if i remember correctly
[12:53:17] *** Quits: PowaBanga (~PowaBanga@user/powabanga) (Ping timeout: 240 seconds)
[12:55:12] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 268 seconds)
[12:58:27] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[12:59:34] *** Joins: pluri (~pluri@user/pluri)
[13:00:31] <bobdobbs> k, if I read that right, then I can't use 'if'. But I do have options, including the ternary operator.
[13:01:44] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[13:02:07] <since_> bobdobbs: ternary operators are error prone for beginners
[13:03:24] <since_> bobdobbs: i'd use a function (or anonymous function) or move the if to the top before the return
[13:04:03] <bobdobbs> hmmm
[13:04:29] *** Joins: Deneb (~johnch@23.143.9.51.dyn.plus.net)
[13:04:48] <bobdobbs> I think the 'if' has to be in the return. Unless I'm just losing the ability to think about it
[13:05:51] <bobdobbs> since_: what I'm trying to do is basically only create markup for existing prop elements. "If prop.whatever exists, then create the html element"
[13:06:02] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[13:07:12] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[13:07:44] <bobdobbs> There's a documentation page on the React site and some articles on conditionally creating elements. But they none of them seem to apply to my simple use case.
[13:08:37] *** Joins: chao (~stenno@user/stenno)
[13:08:37] *** Quits: Aljone (~Aljone1@87.71.97.143) (Ping timeout: 240 seconds)
[13:08:48] *** Joins: Aljone (~Aljone1@87.70.87.26)
[13:09:11] <since_> let foo = "hello"; if (condition) {foo = "world"}  return (<p> { stuff } </p> ))
[13:09:36] *** Joins: vats (~vats@180.149.226.242)
[13:11:37] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[13:11:45] <bobdobbs> That's fine if we are happy without testing for the elements of a prop object that we are passing
[13:12:17] <bobdobbs> What I'm trying to do is a little more fine-grained...
[13:13:03] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[13:13:13] <DnzAtWrk> ternary operators are optimal for quite a few scenarios
[13:13:36] <bobdobbs> One way of looking at it is that I want to parse the object. For each element of the object that exists, I want to output it's value wrapped inside html tags. If an element doesn't exist, I want to ignore it.
[13:15:05] *** Joins: jazzy (~jaziz@user/jaziz)
[13:15:09] <bobdobbs> Am I dumb or is this genuinely difficult?
[13:15:16] *** Joins: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au)
[13:15:37] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[13:16:17] <oscuroch_> thats easy
[13:16:19] <since_> bobdobbs: props.children=if(foo){bar} makes no sense as the if does not return a value. you can do props.children=someFunction() and someFunction returns the value
[13:16:42] <since_> yu can do a lambda expression that has the if inside that returns the value
[13:17:02] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 240 seconds)
[13:17:20] <since_> or you set a variable before the return using the if and then place the variable contents inside the return statement
[13:19:27] *** Joins: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com)
[13:20:03] <bobdobbs> "or set a variable before the return" ... ok, I'm starting to see how that could work
[13:20:27] <bobdobbs> I'll try that.
[13:21:47] <since_> bobdobbs: or on the page you linked, try to adapt the lowest code block that has the switch statement in it
[13:22:36] <since_> i.e. place your code in a function/lambda expression with {(() => {  and })()}
[13:22:43] <bobdobbs> I'm trying to go with setting a variable before the return and then referrencing the variable
[13:29:07] *** Quits: pluri (~pluri@user/pluri) (Ping timeout: 268 seconds)
[13:29:54] *** Quits: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au) (Ping timeout: 250 seconds)
[13:31:18] *** Joins: pluri (~pluri@user/pluri)
[13:32:26] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:37:22] <bobdobbs> oh. I don't think setting a variable and then returning it will work after all. I mean, it'll work if I only want to evaluate a single element of props. But I want to return jsx for every existing populated value. And a function can only return something once.
[13:38:50] *** Quits: Deneb (~johnch@23.143.9.51.dyn.plus.net) (Quit: Leaving)
[13:38:57] *** Quits: ensyde (~ensyde@2600:1700:2050:1040:3990:b270:fa9e:e455) (Ping timeout: 240 seconds)
[13:45:14] <bobdobbs> since_: I don't think adapting that switch statement will work either - for the same reason: I need to return jsx
[13:49:22] *** Joins: RLa (~RLa@82.131.127.168.cable.starman.ee)
[13:51:28] *** Joins: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au)
[13:51:29] <bobdobbs> huh. It can't even be done using the ternary operator. Same reason.
[13:53:14] <friend> So you are passing a "props" object to a function that checks all of the object properties and returns an html string based on those properties only?
[13:55:10] <bobdobbs> friend: Yeah. I want to create html only where the an element of a property exists and is populated.
[13:55:50] <bobdobbs> This is what I'm passing in: http://pastie.org/p/0AER4gOHZiRxNYBWpNR3EH
[13:56:20] <bobdobbs> So, because the first two elements don't have an 'image' element, I don't want to generate an img tag
[13:56:58] *** Joins: gpap (~pap@athedsl-384916.home.otenet.gr)
[13:57:46] <friend> Do you know all possible properties?
[13:58:44] <bobdobbs> Yeah. This is just a self-learning excercise. That array is all I'm working with.
[14:00:09] *** Quits: konrados (~konrados@user-5-173-147-19.play-internet.pl) (Remote host closed the connection)
[14:01:56] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[14:01:56] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[14:01:56] *** Joins: wroathe (~wroathe@user/wroathe)
[14:02:27] <friend> https://codepen.io/cuirPork/pen/oNoNKNr?editors=0011
[14:05:30] <bobdobbs> friend: oh, I think I see
[14:05:57] *** Quits: duds- (~duds-@gateway/tor-sasl/duds) (Ping timeout: 276 seconds)
[14:06:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[14:07:36] <bobdobbs> friend: so then basicall that for loop at the end would be inside a curly brackets inside JSX inside a return()?
[14:12:00] <friend> https://www.telerik.com/blogs/beginners-guide-loops-in-react-jsx
[14:12:17] *** Quits: simius (~simius@user/simius) (Ping timeout: 240 seconds)
[14:12:36] *** Joins: simius (~simius@user/simius)
[14:14:28] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[14:14:40] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[14:16:09] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[14:17:06] *** Joins: thiras (~thiras@user/thiras)
[14:17:46] <friend> I don't know react, but it looks like you will need nested loops with the innermost loop producing html elements using map
[14:17:48] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[14:18:17] *** Joins: PowaBanga (~PowaBanga@user/powabanga)
[14:20:02] <friend> maybe something along the lines of the return at the bottom of https://codepen.io/cuirPork/pen/oNoNKNr?editors=0011
[14:21:26] <friend> I think react is looking for squiggly brackets then evaluating those brackets for a value. If you ad a map unction in squiggly brackets, it gets evaluated. Then if there are more squiqqly in the output, it processes those until its done.
[14:22:43] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[14:22:58] *** Joins: pingpongball (~pingpongb@27.34.47.17)
[14:26:44] *** Joins: brentaarnold_ (~brentaarn@24.112.58.14)
[14:26:57] *** Quits: PowaBanga (~PowaBanga@user/powabanga) (Ping timeout: 240 seconds)
[14:27:04] *** Quits: hassoon_ (hassoon@shell.oddprotocol.org) (Changing host)
[14:27:04] *** Joins: hassoon_ (hassoon@user/hassoon)
[14:27:33] *** Quits: brentaarnold (~brentaarn@24.112.58.14) (Read error: Connection reset by peer)
[14:28:03] *** Joins: PowaBanga (~PowaBanga@user/powabanga)
[14:28:31] *** brentaarnold_ is now known as brentaarnold
[14:34:36] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[14:34:37] *** Quits: trafficjam (~qubes@2001:8004:5190:2c63:a183:c5e0:d4bb:13db) (Read error: Connection reset by peer)
[14:37:30] *** Joins: gproto23 (~gproto23@user/gproto23)
[14:37:47] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Quit: Leaving...)
[14:38:01] *** chao is now known as stenno
[14:38:02] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[14:40:17] *** Joins: trafficjam (~qubes@2001:8004:5190:2c63:a183:c5e0:d4bb:13db)
[14:45:41] *** Joins: lotharn|2 (~kvirc@2607:fb90:4a24:2aa:d0b8:6be5:7b28:68ac)
[14:46:09] *** Quits: oscuroch_ (~oscurochu@097-096-050-227.res.spectrum.com) (Remote host closed the connection)
[14:47:52] <jaawerth> bobdobbs: think of JS as everything is returning a value, that value being either a node of the virtual DOM or some value wrapped in it - so side effects like loops or if/then are unlikely to do what what you want, but value returning expressions like .map or a ternary are more likely to
[14:48:37] *** Quits: lotharn (~kvirc@2607:fb90:4a28:4ecf:cd86:f573:681e:4176) (Ping timeout: 240 seconds)
[14:51:28] *** Joins: l__q (~modinfo@user/modinfo)
[14:54:44] *** Joins: mintoyatsu (~mint@ip24-255-4-17.tc.ph.cox.net)
[14:55:06] *** Quits: pingpongball (~pingpongb@27.34.47.17) (Quit: Client closed)
[14:55:35] <jaawerth> also react isn't a template - it's all parsed. the html-looking tags translate into function calls, aand the { } interpolates values into them. it isn't HTML, react builds up a virtual DOM and then automatically uses it to calculate what changes to make to efficiently sync the DOM state to the virtual one
[14:55:42] <jaawerth> so that buildHTML stuff isn't gonna work
[15:00:18] *** Quits: RLa (~RLa@82.131.127.168.cable.starman.ee) (Quit: Client closed)
[15:00:59] *** Joins: D4mned (~D1mned@212.101.234.26)
[15:02:51] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 268 seconds)
[15:03:04] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 250 seconds)
[15:03:08] *** Joins: keypusher (keypusher@user/keypusher)
[15:03:40] *** Joins: pingpongball (~pingpongb@27.34.47.17)
[15:04:02] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 240 seconds)
[15:04:05] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 268 seconds)
[15:04:15] *** Joins: Swantvee (~swant@libera/staff/swant)
[15:06:24] *** Joins: l__q (~modinfo@user/modinfo)
[15:08:57] *** Quits: Swantvee (~swant@libera/staff/swant) (Client Quit)
[15:09:02] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (Ping timeout: 240 seconds)
[15:10:37] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 240 seconds)
[15:10:55] *** Joins: kakashiAL (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de)
[15:12:06] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 268 seconds)
[15:15:41] *** Joins: paule32 (~paul@nat-91-137-26-13.net.encoline.de)
[15:15:41] *** Quits: paule32 (~paul@nat-91-137-26-13.net.encoline.de) (Changing host)
[15:15:41] *** Joins: paule32 (~paul@user/paule32)
[15:17:35] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[15:20:42] *** Joins: oscurochu (~oscurochu@2603:9000:c202:1034:3d68:e938:5362:5275)
[15:22:35] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 268 seconds)
[15:23:03] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[15:27:46] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 250 seconds)
[15:28:37] *** Joins: vysn (~vysn@user/vysn)
[15:29:35] *** Quits: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[15:30:46] *** Joins: riv (river@tilde.team/user/river)
[15:30:50] <riv> hey
[15:31:00] <riv> does anyone know a site that does regex/eval based compression on javascript code?
[15:31:18] <riv> like what you see in 4k js demos
[15:33:04] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 268 seconds)
[15:36:17] *** Joins: pmercado_ (~pmercado@186.107.59.154)
[15:41:12] *** Joins: cotko (~cotko@89-212-138-82.static.t-2.net)
[15:41:44] *** pmercado_ is now known as pmercado
[15:41:50] <jaawerth> I dunno what 4kjs uses, but most things either use terser or uglify. unless it's obfuscation you're looking for rather than just compression, in which case I have no idea
[15:41:57] <jaawerth> (obfuscation is a losing battle anyway)
[15:42:05] <riv> its just compression
[15:42:46] <riv> do they do the regex thing? I dont just want spaces removed and variables changed to shorter names
[15:43:00] <jaawerth> https://terser.org/ - there's a try-it-out link if you just want it as  web tool and not a library
[15:43:14] <ThePendulum> hm if I want to build two versions of a client with webpack that are identical except for 1 plugin, I'll probably have to rerun the whole thing right?
[15:43:25] <riv> yeah neither of them do the regex/eval trick
[15:43:27] <riv> thanks though
[15:43:36] <jaawerth> ohh you're looking for something *specific*, sorry
[15:44:07] <riv> it's just that can compress much more, because it can looks for common chunks of code
[15:44:54] <riv> https://js1k.com/2019-x/details/4130 heres an example
[15:52:18] *** Joins: trevors (~trevors@user/trevors)
[15:53:12] *** Quits: pingpongball (~pingpongb@27.34.47.17) (Quit: see you)
[15:58:29] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[15:59:02] <jaawerth> I'm fairly sure it's a combination of flags, since I know terser has one for eval etc. bu I've never needed to go that for, sorry
[15:59:19] <barkle> is a webpacked React's 'export const' variable accessible to the DOM ?
[16:01:45] <jaawerth> it depends on how you configure it to bundle. you can tell it to expose it as a global - it's pretty common to just generate an IIFE though
[16:01:49] <barkle> how can I find it ? I go to the generated source but it's all obfuscated variables
[16:01:59] <jaawerth> should be in the docs how you can expose an entrypoint
[16:04:12] *** Joins: stenno (~stenno@user/stenno)
[16:06:42] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[16:07:22] <jaawerth> barkle: sounds like this mgiht be what you're looking for https://webpack.js.org/guides/author-libraries/#expose-the-library
[16:11:31] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[16:20:56] *** Quits: netameta_ (~netameta@2a00:a040:193:50fe:8161:b8e7:d4d1:d0fa) (Read error: Connection reset by peer)
[16:21:30] <barkle> I'm asking for a scenario of reverse engineering
[16:30:09] *** Joins: iomari891 (~iomari891@105.112.138.38)
[16:32:31] *** Joins: han-solo (~han-solo@user/han-solo)
[16:33:46] *** Joins: nomic (~nomic@185.192.69.10)
[16:38:08] *** Joins: pingpongball (~pingpongb@27.34.47.17)
[16:41:57] *** Quits: lotharn|2 (~kvirc@2607:fb90:4a24:2aa:d0b8:6be5:7b28:68ac) (Ping timeout: 240 seconds)
[16:43:59] *** Quits: pingpongball (~pingpongb@27.34.47.17) (Quit: Client closed)
[16:44:39] *** Joins: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com)
[16:48:13] *** Joins: pulse (~pulse@user/pulse)
[16:50:57] *** Quits: vats (~vats@180.149.226.242) (Ping timeout: 240 seconds)
[16:51:19] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[16:53:10] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[16:56:37] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[16:57:59] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[16:58:17] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 240 seconds)
[17:01:06] *** Joins: pingpongball (~pingpongb@27.34.47.17)
[17:05:23] <stenno> TIL 'escape' is a legacy reserved word
[17:05:32] <stenno> in DOM
[17:06:51] <ThePendulum> hm it seems vim linting works fine in another vue project, wonder what's up with it for this one :/
[17:15:17] *** Quits: Aljone (~Aljone1@87.70.87.26) (Ping timeout: 240 seconds)
[17:15:47] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[17:15:48] *** Joins: Aljone (~Aljone1@77.125.193.245)
[17:15:52] *** Quits: pingpongball (~pingpongb@27.34.47.17) (Quit: Client closed)
[17:16:13] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[17:17:34] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[17:19:43] *** Joins: cotko_ (~cotko@89-212-138-82.static.t-2.net)
[17:20:05] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[17:20:17] *** Quits: cotko (~cotko@89-212-138-82.static.t-2.net) (Ping timeout: 240 seconds)
[17:22:10] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[17:27:56] *** Joins: pingpongball (~pingpongb@27.34.47.17)
[17:29:03] *** Quits: pingpongball (~pingpongb@27.34.47.17) (Client Quit)
[17:30:35] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[17:30:36] *** Joins: matsaman (~matsaman@user/matsaman)
[17:32:24] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:33:53] *** Joins: pingpongball (~pingpongb@27.34.47.17)
[17:37:46] *** Parts: pingpongball (~pingpongb@27.34.47.17) ()
[17:38:04] *** Joins: RLa (~RLa@82.131.127.168.cable.starman.ee)
[17:40:03] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[17:44:32] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[17:45:31] *** Quits: RLa (~RLa@82.131.127.168.cable.starman.ee) (Quit: Client closed)
[17:46:32] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[17:54:03] *** Joins: DrowningElysium (uid190788@user/drowningelysium)
[17:54:11] *** Joins: federico (~federico@176.206.191.61)
[18:02:41] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:02:41] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:02:41] *** Joins: wroathe (~wroathe@user/wroathe)
[18:04:39] *** Joins: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se)
[18:07:05] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[18:09:21] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[18:14:26] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:16:26] *** Joins: voltage_ (voltage@user/voltage)
[18:16:39] *** Quits: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com) ()
[18:17:25] *** Joins: alystair (~alystair@user/alystair)
[18:19:15] *** Joins: trevors (~trevors@user/trevors)
[18:22:13] *** Quits: defn (~n0b0dy@user/defn) (Ping timeout: 256 seconds)
[18:22:23] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[18:22:42] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[18:24:27] *** Joins: defn (~n0b0dy@user/defn)
[18:25:16] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[18:26:08] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[18:27:31] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[18:30:27] *** Joins: chao (~stenno@user/stenno)
[18:30:43] *** stenno is now known as Guest342
[18:30:43] *** Quits: Guest342 (~stenno@user/stenno) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[18:30:43] *** chao is now known as stenno
[18:36:42] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[18:37:11] *** Quits: trevors (~trevors@user/trevors) (Read error: Connection reset by peer)
[18:37:25] <jaawerth> vue has its own preprocessor right? I'd check your eslint plugin/parser/babel versions against whatever the vue versions are in that project
[18:37:37] *** Joins: trevors (~trevors@user/trevors)
[18:39:49] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 240 seconds)
[18:40:16] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[18:40:45] *** Joins: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net)
[18:40:57] *** Quits: lehinsun (~ttytwiste@188.113.176.117) (Ping timeout: 240 seconds)
[18:42:33] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[18:42:59] *** bliminse_ is now known as bliminse
[18:44:14] *** Joins: llorllale (~llorllale@198.98.119.85)
[18:44:49] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:44:49] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:44:49] *** Joins: wroathe (~wroathe@user/wroathe)
[18:49:16] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[18:50:23] *** Joins: daedeloth (~daedeloth@cust-248-179-110-94.dyn.as47377.net)
[18:52:44] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[18:58:20] <DnzAtWrk> https://github.com/CesiumGS/cesium/blob/main/package.json
[18:58:34] <DnzAtWrk> how do you succeed in having 0 dependencies and 5 billion dev deps
[18:59:39] <DnzAtWrk> also, that list is everything I hate about the javascript ecosystem
[18:59:51] <DnzAtWrk> absolutely insanely bloated and dedundant
[18:59:56] <DnzAtWrk> redundant*
[19:02:57] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[19:04:34] *** Joins: Rockwood (~Rocky@user/rocky)
[19:05:47] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[19:06:48] *** Joins: sam_1 (~sam_1@87.51.251.118)
[19:10:31] <Swayze> when the offical docs are outdated and the examples dont work ... https://reactjs.org/tutorial/tutorial.html#setup-option-2-local-development-environment
[19:11:21] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 250 seconds)
[19:13:08] *** Joins: summersault (~summersau@179.221.251.36)
[19:13:17] *** Parts: Swayze (~gryster@user/swayze) ()
[19:13:32] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[19:13:50] *** Joins: Rockwood_ (~Rocky@user/rocky)
[19:15:40] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[19:16:17] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 240 seconds)
[19:17:56] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[19:19:07] *** Quits: gpap (~pap@athedsl-384916.home.otenet.gr) (Quit: Leaving)
[19:20:49] *** Joins: salad (~cucumber@82.76.150.118)
[19:21:18] *** Joins: kill (~killown@user/killown)
[19:21:51] *** Quits: cotko_ (~cotko@89-212-138-82.static.t-2.net) (Ping timeout: 268 seconds)
[19:22:57] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[19:24:44] <OnkelTem> Hi all
[19:24:46] *** Joins: kijix\ (~shinomori@c-73-143-164-176.hsd1.ct.comcast.net)
[19:24:56] <OnkelTem> Does npmjs.com provide API for querying it programmatically?
[19:25:19] <stenno> you mean the registry?
[19:25:28] <stenno> what are you trying to query exactly?
[19:25:32] *** Joins: cotko_ (~cotko@89-212-138-82.static.t-2.net)
[19:25:51] <OnkelTem> stenno: I would like to query its package.json to check for "type": "module" thing
[19:26:00] <OnkelTem> its = a package
[19:26:28] <OnkelTem> Imagine a browser extension which would quickly detect is this module a ESM one
[19:26:35] <OnkelTem> to not bother with its downloading
[19:27:44] *** Quits: cotko_ (~cotko@89-212-138-82.static.t-2.net) (Read error: Connection reset by peer)
[19:28:01] *** Joins: cotko_ (~cotko@89-212-138-82.static.t-2.net)
[19:28:44] <OnkelTem> I would expect https://registry.npmjs.org/ to be this API
[19:29:19] *** Quits: Rockwood_ (~Rocky@user/rocky) (Read error: Connection reset by peer)
[19:30:19] *** Quits: poncha (~poncha@user/poncha) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[19:30:39] <OnkelTem> Ah, I think I found it: https://github.com/npm/registry/blob/master/docs/REGISTRY-API.md
[19:31:31] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Read error: Connection reset by peer)
[19:34:18] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[19:34:37] *** slaughtr is now known as slaughter
[19:36:56] *** Joins: sam_1 (~sam_1@87.51.251.118)
[19:38:57] *** Quits: kakashiAL (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[19:39:14] *** Joins: PenguinMan98 (~PenguinMa@65.153.38.250)
[19:41:33] *** Joins: harriet_tubman (~harriet_t@209.202.223.146)
[19:42:42] *** Joins: summersault (~summersau@179.221.251.36)
[19:44:09] <harriet_tubman> which option do you prefer for conditionally defining variables? is there a better option? thank you https://jsjot.com/cDGK3
[19:45:17] *** Quits: cotko_ (~cotko@89-212-138-82.static.t-2.net) (Ping timeout: 240 seconds)
[19:45:48] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[19:45:54] <OnkelTem> const thing3 = o.a ? 'a' : o.b ? : 'b' : 'c' ?
[19:45:57] *** Quits: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[19:46:03] *** Joins: summersault (~summersau@179.221.251.36)
[19:46:09] <stenno> please don't nest ternary
[19:46:27] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 250 seconds)
[19:46:30] <OnkelTem> prettier does a good job on it :)
[19:46:37] <OnkelTem> it sets parenthesis
[19:47:18] <OnkelTem> const thing3 = o.a ? 'a' : (o.b ? 'b' : 'c');
[19:47:23] <OnkelTem> the correct variant
[19:48:00] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[19:48:28] *** Joins: summersault (~summersau@179.221.251.36)
[19:49:24] <OnkelTem> Back to npmjs. So this basic request returns what is needed: GET https://registry.npmjs.com/path-type/latest
[19:51:08] *** Joins: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[19:51:52] <DnzAtWrk> why is a map file 2 times the size of the unminified original source
[19:51:54] <DnzAtWrk> makes no sense
[19:52:44] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[19:52:58] *** Joins: kakashiAL (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de)
[19:53:33] <OnkelTem> Because it's a map file? :)
[19:53:42] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[19:53:45] <OnkelTem> And it should also has references maybe
[19:54:48] <DnzAtWrk> it's a sourcemap
[19:54:59] <DnzAtWrk> why would a sourcemap be even remotely as large as the source
[19:55:14] <OnkelTem> First, because it contains all the source
[19:55:20] <DnzAtWrk> and why does it do that
[19:55:46] <OnkelTem> To let source available w/o dependencies, this is the right way
[19:56:02] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Quit: ZNC - https://znc.in)
[19:56:43] <DnzAtWrk> and why is it not compressed
[19:57:04] <OnkelTem> You can compress it at the web-server side
[19:57:14] <OnkelTem> Why would you need it to be just references to some existing files?
[19:57:50] <DnzAtWrk> I am just looking at cesium
[19:57:57] <DnzAtWrk> the unminified version has a map
[19:59:01] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[19:59:19] <austincheney> stenno, why not nest ternary?
[20:00:23] <DnzAtWrk> food = sour ? 'citrus' : salty ? 'meat' : 'banana';
[20:00:25] <DnzAtWrk> I like nesting
[20:00:30] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[20:00:48] *** Quits: xse (~xse@user/xse) (Remote host closed the connection)
[20:01:24] <OnkelTem> may ternary war commence
[20:01:51] <systemfault> The alternatives to nested ternaries suck most of the time... that's the problem.
[20:02:16] <systemfault> Nested ternaries on a single line are difficult to read... but well formatted on multiple lines, they're not soooo bad
[20:02:33] <DnzAtWrk> I can still not decide whether to place ?: on a new line or not
[20:02:39] <DnzAtWrk> I think it usally makes it line up fairly well
[20:02:40] *** Joins: xse (~xse@user/xse)
[20:02:45] <OnkelTem> DnzAtWrk: let prettier decide
[20:02:50] <DnzAtWrk> food = sour ? 'citrus'
[20:02:55] <DnzAtWrk>     : salty ? 'meat'
[20:02:58] <OnkelTem> I love it. I loved it rather. Before I hated it. It's complicated
[20:02:59] <DnzAtWrk>     : 'banana'
[20:03:08] <OnkelTem> (Sorry)
[20:03:19] <systemfault> I'm waiting for pattern matching :( PLZ TC39
[20:03:51] <austincheney> nested ternaries and easy to read: https://github.com/prettydiff/share-file-systems/blob/video/lib/terminal/server/transmission/transmit_ws.ts#L303-L315
[20:04:13] <OnkelTem> (The only problem with prettier, is that it's still configurable. A thing like this should be totally opinionated and not configurable at all)
[20:04:26] <OnkelTem> (Just like Black from python)
[20:04:49] <austincheney> OnkelTem, prettier is (or at least used to be) totally opininated
[20:05:05] <systemfault> austincheney: Lots of unnamed constants in that code (Magic Numbers) but it's readable to me.
[20:05:14] <OnkelTem> austincheney: nah, compare it to Black! :)
[20:05:38] <OnkelTem> austincheney: but sure, you're right. There are differences however. The degree of this.
[20:05:55] <austincheney> systemfault, what do you mean by unnamed constants?
[20:06:03] <OnkelTem> numbers
[20:06:26] <DnzAtWrk> I don't like using paranthesis for ternary
[20:06:28] <OnkelTem> Why they ain't decalred as constants?
[20:06:32] <DnzAtWrk> I mean, ? and : are logical seperators
[20:06:34] <austincheney> ahhh
[20:07:09] <austincheney> its numeric representation of a fragment of a byte (0-255)
[20:07:15] <systemfault> austincheney: 128, 126, 127, (65536 is obviously 2 **16 + 1)
[20:07:33] <DnzAtWrk> why not /* for long comment
[20:07:35] <edk> + 1?
[20:07:50] <OnkelTem> yeah, why +1
[20:08:03] *** Quits: nomic (~nomic@185.192.69.10) (Quit: Leaving)
[20:08:21] <OnkelTem> 65537 it's meant I believe
[20:08:28] <systemfault> Because 2 ** 16 can represent 65526 values but that includes the 0
[20:08:35] <austincheney> I like to avoid block comments in the middle of code because they cannot be nested within other block comments, so at maintenance time if I want to comment out a bunch of code I cannot easily do so
[20:08:40] <systemfault> *65536
[20:08:54] <systemfault> So the max value of a short is 65535
[20:08:56] *** Joins: summersault (~summersau@179.221.251.36)
[20:09:00] <OnkelTem> austincheney: agree
[20:09:12] *** Quits: nortoh (~nortoh@user/nortoh) (Quit: this is not importent)
[20:09:53] <OnkelTem> austincheney: I don't use block comments actually, when I need to comment out a big chunk I just select it in the IDE and press Ctrl + /
[20:09:54] <DnzAtWrk> unsigned short
[20:10:02] <DnzAtWrk> I use block comments for anything over 3 lines
[20:10:06] <DnzAtWrk> or ALWAYS for functions
[20:10:16] <DnzAtWrk> or was that the other type
[20:10:18] <DnzAtWrk> the /** type
[20:10:20] <DnzAtWrk> I don't remember
[20:10:35] <DnzAtWrk> because I rarely document functions unless I need to generate documentation
[20:10:38] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[20:10:41] <OnkelTem> Double for jsdoc yes
[20:11:08] <austincheney> the /** type comments are excellent for describing typescript interfaces becasue VS Code will display their contents as tooltips with rendered markdown
[20:11:34] *** Joins: nortoh (~nortoh@bishop.xerrero.com)
[20:11:34] *** Quits: nortoh (~nortoh@bishop.xerrero.com) (Changing host)
[20:11:34] *** Joins: nortoh (~nortoh@user/nortoh)
[20:12:05] <stenno> austincheney: https://eslint.org/docs/rules/no-nested-ternary
[20:12:21] <stenno> more difficult to understand, and also worse to maintain
[20:13:12] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[20:13:24] <austincheney> stenno, then use grouping syntax and whitespace to make ternaries easier to read.  It doesn't have to be a challenge
[20:13:40] <austincheney> sounds like a self-inflicted injury
[20:13:43] <stenno> nope
[20:14:19] <stenno> i live a beautiful life without nested ternaries
[20:14:33] <austincheney> however, I will play around with the no-unneeded-ternary rule
[20:15:08] <OnkelTem> stenno: I'm pretty sure that w/o nested ternaries our react components code will be harder to maintain and to read
[20:15:40] <systemfault> That's because JS doesn't support pattern matching :P
[20:15:44] <OnkelTem> I can't say we use much of them - of those nested beasts, but still, occasionally
[20:15:45] <stenno> nested ternaries for react componets
[20:15:47] <stenno> sounds terrible
[20:15:50] <stenno> yes what systemfault said
[20:15:55] <stenno> you can do object lookup
[20:16:02] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[20:16:13] *** Joins: summersault (~summersau@179.221.251.36)
[20:16:16] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:16:21] <austincheney> ternary is just an inline condition.  Your choices for applying conditions at declaration time are only ternaries or IIFE.
[20:16:43] <stenno> const assign = {a: '1', b: '2', c: '3'}; const foo = assign[bar.id]
[20:16:51] <stenno> ^ object lookup for complex decisions
[20:17:16] <austincheney> stenno, that is not a condition though.  it is just array notation
[20:17:17] <stenno> php is fruther in that regard with their pattern matching
[20:17:57] <stenno> austincheney: it says 'if the value of bar.id is 'a', then assign 1, else if the value of bar.id is 'b', otherwise...'
[20:18:04] <stenno> and then work with ?? to set a default value
[20:18:11] <stenno> its a sensible switch/case
[20:18:18] *** Joins: Akiva (~Akiva@user/Akiva)
[20:18:35] <OnkelTem> stenno: how friendly that approach to TS?
[20:18:36] <stenno> which is basically what you want
[20:18:55] <austincheney> stenno, you are inferring the condition.  It says assign the property at value of bar.id on object `assign`.
[20:19:48] <austincheney> a condition means a decision.  there is no decision there.
[20:19:49] *** Quits: o (~niko@libera/staff/niko) (Ping timeout: 633 seconds)
[20:21:18] <stenno> the condition is inferred, yes
[20:21:34] *** Joins: sam_1 (~sam_1@87.51.251.118)
[20:22:12] <stenno> the condition is if (bar.id === 'a')
[20:22:15] <stenno> ...
[20:22:48] <systemfault> If you have to pick between X components, you probably have some kind of discriminant in the object, which can be used as a lookup key in a map (object or Map)
[20:23:02] <austincheney> no no, (bar.id === 'a') returns a boolean, not the string value required to access an object key
[20:23:42] *** Quits: D4mned (~D1mned@212.101.234.26) (Quit: Leaving)
[20:23:53] <stenno> it is really the same for object lookup
[20:23:56] <OnkelTem> stenno: doesn't look nice to me: https://bit.ly/3KJ2A9h
[20:24:04] <OnkelTem> this is a link to typescript playground
[20:24:29] <systemfault> OnkelTem: What doesn't look nice? You have 4 lines of TS
[20:24:30] <OnkelTem> maybe it can be reduced but I'm not sure
[20:25:04] *** Joins: mat001 (~mat001@213.143.69.121)
[20:25:23] <OnkelTem> systemfault: it looks redundant and artificial
[20:25:33] <systemfault> You have exactly one more line than the JS equivalent.... and it's because of the extra type declaration.. which could be inlined if you wanted
[20:25:48] <systemfault> OnkelTem: That's highly subjective.
[20:25:57] <OnkelTem> well, yes, I agree
[20:26:03] <stenno> its much better to maintain
[20:26:06] <OnkelTem> wait, I'll try to make the same with ternary
[20:26:06] <stenno> less diff clutter
[20:26:14] <systemfault> Personally, I have nothing against nested ternaries for "some cases".... but it really depends.
[20:26:20] <austincheney> OnkelTem, the pattern is a micro-performance tweak for large data
[20:26:35] <systemfault> But that's simply because JS doesn't give us a good alternative
[20:26:37] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 240 seconds)
[20:26:40] <stenno> its totally unrelated to performance
[20:27:03] <stenno> but sure, add 5 more conditions to your nested ternary
[20:27:11] <stenno> i wanna see this looking better than object lookup
[20:27:27] <austincheney> stenno, not true.  Specific indexes are mostly faster to access in objects than in arrays, but arrays are faster to iterate over.
[20:27:52] <stenno> austincheney: what i meant is, i use object lookup instead of nested ternary without considering performance
[20:27:53] <austincheney> this was discovered by Paul Heckel in C in 1978 and holds true to JavaScript
[20:28:11] <systemfault> austincheney: o_O
[20:28:16] <stenno> i should have said 'performance is totally unrelated to this'
[20:28:27] <stenno> totally unrelated to why i use object lookup
[20:28:32] <systemfault> austincheney: Accessing an index in an array is constant time...
[20:29:08] <stenno> array access should be O(1) or something is wrong
[20:29:24] <austincheney> systemfault, the difference is on the metal.  Array indexes are accessed in index order.  Object properties are not stored in order and so are randomly accessed until the corresponding property is located.
[20:29:51] <systemfault> austincheney: Hmm, you may want to review you book...
[20:29:53] <stenno> does that consider that objects are basically hashtables?
[20:29:57] <OnkelTem> systemfault: ah, my example was still incorrect. The AssIgn function returns `string`. Here is an update version where that's fixed. Also there is a function with ternary which doesn't seem to me requiring any extra definitions. https://bit.ly/3KI003g
[20:30:05] <OnkelTem> I'm not arguing
[20:30:17] *** Joins: lehinsun (~ttytwiste@188.113.176.117)
[20:30:28] <stenno> OnkelTem: please add 3 more conditions
[20:31:01] <OnkelTem> stenno: yeah, that would look ugly :)
[20:31:10] <systemfault> austincheney: Arrays will always be faster because of data locality and because the elemnt offset can be computed from the base offset
[20:31:15] <austincheney> stenno, yes, JavaScript objects are mostly equivalent to hashmaps in lower level languages
[20:31:20] <OnkelTem> Well, we use it when the number of choice is like 3, rarely more
[20:31:24] <stenno> OnkelTem: so this shows why its terrible for maintainance
[20:31:58] <stenno> and its really not easier to read, sorry
[20:32:03] <OnkelTem> at some degree stenno! That's only point. I agree that for more - it shouldn't be used. And you were like: DON'T :)
[20:32:26] <austincheney> the only real performance difference between objects and arrays that actually matters is string conversion size for sending over the network
[20:32:44] <stenno> if you agree that it shouldn't be used for more, then you shouldn't use it in the first place, because it might be that another case might be added in the future
[20:32:51] <stenno> maintainability
[20:32:52] <OnkelTem> Ahha
[20:32:56] <OnkelTem> Ok okay
[20:33:01] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[20:34:53] <OnkelTem> Ok, need to go. Thank you stenno for sharing that declarative approach. I will have this mind from now on. It's really not too difficult to declare those type as I showed in conclusion
[20:35:18] <stenno> thanks a lot for this good conversation
[20:36:20] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[20:37:24] *** Joins: sam_1 (~sam_1@87.51.251.118)
[20:37:55] *** Joins: zebrag (~chris@user/zebrag)
[20:40:24] <systemfault> austincheney: Maybe you meant "linked list" vs "hashtable"? (Which would make sense)
[20:40:43] *** Quits: daedeloth (~daedeloth@cust-248-179-110-94.dyn.as47377.net) (Quit: Leaving)
[20:40:45] <systemfault> hashtable lookups are definitely faster
[20:41:51] <stenno> hashtable lookup _can_ be O(1) right?
[20:42:04] <austincheney> systemfault, no, JS does not have linked lists
[20:42:11] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 252 seconds)
[20:42:17] *** Joins: summersault (~summersau@179.221.251.36)
[20:42:37] *** Quits: alystair (~alystair@user/alystair) (Ping timeout: 240 seconds)
[20:43:08] <systemfault> stenno: They are
[20:43:17] <systemfault> Well.. mostly...
[20:43:22] <systemfault> Depends on collisions
[20:43:37] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:2447:e568:11bd:7d06)
[20:43:38] <systemfault> In JS, I guess that no collision is possible.. so
[20:44:17] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[20:44:36] <systemfault> Input -> hash -> number(array index) -> array lookup -> done
[20:44:52] *** Joins: c4017w (~c4017@199.119.235.154)
[20:46:37] *** Joins: buxeke882s (~bux347bux@31.134.121.80)
[20:47:06] *** Parts: buxeke882s (~bux347bux@31.134.121.80) ()
[20:48:14] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[20:48:25] *** Joins: PureBlood (~purbld@179.43.140.206)
[20:48:28] *** Joins: summersault (~summersau@179.221.251.36)
[20:50:27] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[20:50:39] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[20:50:53] <Alexendoo> They would be possible, but it's still O(1) average
[20:51:14] <systemfault> Alexendoo: You'd think they'd pick a hash function that avoids collisions, no?
[20:51:23] <systemfault> Even if it's more expensive to compute
[20:51:36] <systemfault> (No idea... did not look at the implementation in V8)
[20:51:53] <Alexendoo> They wouldn't, because even with a huge hash function your buckets are still small
[20:52:18] <systemfault> Hmm, makes sense
[20:52:18] *** Joins: pingpongball (~pingpongb@27.34.47.17)
[20:53:02] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[20:53:49] *** Joins: sam_1 (~sam_1@87.51.251.118)
[20:54:57] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[20:55:22] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[20:56:33] *** Quits: kakashiAL (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[20:56:51] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[20:57:32] *** Quits: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se) (Ping timeout: 250 seconds)
[20:57:47] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:2447:e568:11bd:7d06) (Quit: I have gone to sleep. ZZZzzz…)
[20:58:37] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[20:58:41] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 252 seconds)
[20:58:42] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[21:01:57] *** Quits: dirigible (~dirigible@2a00:1678:1337:7a25:5123:8f18:de5a:4ff3) (Read error: Connection reset by peer)
[21:02:58] *** Joins: dirigible (~dirigible@c-66-41-40-51.hsd1.mn.comcast.net)
[21:04:24] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[21:05:03] *** Quits: PureBlood (~purbld@179.43.140.206) (Ping timeout: 256 seconds)
[21:09:30] *** Quits: lehinsun (~ttytwiste@188.113.176.117) (Read error: Connection reset by peer)
[21:09:49] *** Quits: dirigible (~dirigible@c-66-41-40-51.hsd1.mn.comcast.net) (Quit: Leaving)
[21:10:06] *** Joins: lehinsun (~ttytwiste@188.113.176.117)
[21:10:07] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[21:10:08] *** Joins: summersault (~summersau@179.221.251.36)
[21:10:39] *** Quits: pingpongball (~pingpongb@27.34.47.17) (Quit: Client closed)
[21:10:40] *** Joins: sam_1 (~sam_1@87.51.251.118)
[21:11:57] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[21:12:40] *** Joins: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se)
[21:14:17] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[21:15:30] *** Joins: alystair (~alystair@user/alystair)
[21:15:56] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 268 seconds)
[21:15:58] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[21:17:47] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 268 seconds)
[21:19:44] *** Joins: Measles (~Measles@186.226.224.169)
[21:20:25] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[21:20:40] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[21:21:24] *** Joins: dirigible (~dirigible@2607:9000:0:3:36a4:cf80:2f7b:6990)
[21:21:33] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[21:23:09] *** Joins: nomic (~nomic@185.192.69.10)
[21:25:08] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:8d4d:eeb3:fd66:5d10)
[21:26:02] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[21:26:16] *** Quits: tracker1 (~tracker1@user/tracker1) (Quit: tracker1)
[21:26:17] *** Joins: kakashiAL (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de)
[21:28:32] *** Joins: zebrag (~chris@user/zebrag)
[21:28:54] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[21:29:52] *** Joins: arch (~user@2604:3d09:2083:6000:9079:4fd6:f7ea:ece4)
[21:30:43] *** Quits: henry40408 (~henry4040@175.181.155.165) (Remote host closed the connection)
[21:31:17] *** Joins: henry40408 (~henry4040@175.181.155.165)
[21:35:01] <arch> Alright, so this is a wild question because it seems so simple, but it's been driving me nuts. How do you get a stack trace in JS?
[21:35:05] *** Quits: kakashiAL (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[21:35:06] <arch> You can create a new Error() and check the .stack attribute on it, but that's nonstandard https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#instance_properties
[21:35:15] <arch> You can use console.trace() to *print* a stack, but that function returns undefined--plus relying on console for user-facing things seems bad
[21:35:18] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[21:35:21] *** Quits: trafficjam (~qubes@2001:8004:5190:2c63:a183:c5e0:d4bb:13db) (Read error: Connection reset by peer)
[21:35:25] <arch> Of course, there's also the classic caller and callee method is no longer supported in modern JS, and would have been tedious anyway
[21:35:36] <austincheney> arch:   new Error().stack
[21:36:04] <arch> .stack is nonstandard though https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error/Stack
[21:36:20] <austincheney> arch, yes, it is a defacto standard
[21:36:21] <arch> Because like, I thought that too!
[21:36:31] <austincheney> it works the same on all modern browsers and node
[21:37:02] <arch> Oh..?
[21:37:04] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:2447:e568:11bd:7d06)
[21:37:19] <arch> So like, even though it's marked as a "you shouldn't use this" attribute on MDN, it's actually okay?
[21:37:27] <austincheney> yes
[21:37:29] <arch> Huh!
[21:37:45] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[21:37:50] <austincheney> if it were an official standard it would be part of the ECMA language specification, but it isn't
[21:37:58] <arch> Dang
[21:37:59] <austincheney> that is why it is deemed unofficial
[21:38:16] *** Quits: kadams (~kadams@user/kadams) (Ping timeout: 250 seconds)
[21:38:17] *** Joins: stenno (~stenno@user/stenno)
[21:38:23] <arch> I guess I'll just write some defensive code around it, just in case, but if it works and there aren't other options, I guess I don't really have many other options
[21:38:35] <arch> But, that makes sense! Thank you austincheney..!
[21:39:44] <arch> (But for reals though, there really isn't a way to do this in the specification? That seems like a pretty big oversight)
[21:39:57] <austincheney> if you want to be more official assign a function to the error property of a point of interaction and then gather the stack off the event object that is passed into the handler
[21:40:27] <systemfault> Capturing a stack trace is a very slow operation...
[21:40:35] <arch> That's true
[21:40:36] <systemfault> So, don't put that in perf-sensitive code
[21:40:37] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[21:41:39] *** Joins: trafficjam (~qubes@2001:8004:5190:2c63:a183:c5e0:d4bb:13db)
[21:41:48] *** Joins: Wizzzzzy_ (~wizzzzzy@178.255.149.135)
[21:42:53] <arch> Though I'm okay with slow in this case, because this is for an error case, so things would have already gone wrong
[21:43:25] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[21:43:38] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:2447:e568:11bd:7d06) (Quit: I have gone to sleep. ZZZzzz…)
[21:43:43] <systemfault> Yeah, most of the time, creating error objects happen in a "if" when something goes wrong... so the "happy path" is still fast.
[21:43:50] <arch> Mhm!
[21:44:52] *** Joins: trevors (~trevors@user/trevors)
[21:45:34] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:45:38] <ljharb> austincheney: fwiw it is a stage 1 language proposal
[21:46:00] <ljharb> arch: why do you think you need a stack trace?
[21:46:33] <arch> ljharb: In this case, the idea is that there is a vital piece of JS that, when it fails, does not provide our server with any useful information, which makes debugging issues people have very difficult--especially if we can't replicate them
[21:46:33] <arch> So I just wanted to grab a stack trace in an error callback for a library we are using and send that to the server so we would have something to go on if things go south for inexplicable reasons
[21:46:51] <systemfault> Sounds like a legit usecase
[21:47:27] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:2447:e568:11bd:7d06)
[21:47:35] <systemfault> We use NewRelic at work... but we're soon going to move to OpenTelemetry
[21:47:38] <arch> But also, finding a way to grab a stack trace when every way seemed to be unsupported or nonstandard made me...skeptical about relying on any of those things
[21:47:51] <arch> systemfault: Oh, nice!
[21:49:11] <ljharb> arch: then yes, that's fine. just `new Error().stack` should be what you need
[21:49:24] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[21:49:27] <ljharb> arch: but yeah also, use something like datadog or newrelic that has studied these problems extensively
[21:50:13] <arch> Yeah, maybe I'll have to look at that!
[21:50:32] <eXtr3m0> vital piece of JS. For me this sounds not likee an app, right? Just curious.
[21:50:44] <arch> Though for the time being, I'll use .stack, but also am 1000% wrapping this in a try catch, and won't even remotely try to parse the return
[21:51:01] <arch> Just so I don't shoot myself in the foot when things get standardized
[21:52:04] *** Joins: salad1 (~cucumber@82.76.150.118)
[21:52:04] *** Quits: salad (~cucumber@82.76.150.118) (Read error: Connection reset by peer)
[21:52:08] <arch> eXtr3m0: It's for an uploading thing, and we are using plupload to give fancy status bars, image previews, and so on
[21:53:08] <arch> But, some people just end up not being able to upload files sometimes on supported browsers
[21:53:14] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:2447:e568:11bd:7d06) (Quit: I have gone to sleep. ZZZzzz…)
[21:53:51] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:2447:e568:11bd:7d06)
[21:54:15] <eXtr3m0>  I see.
[21:54:21] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[21:54:43] <arch> So, a pretty boring application tbh, hahah
[21:55:16] <arch> But still a pretty annoying problem to not be able to replicate, since managing files you upload is a pretty integral part of what this web app does
[21:55:17] *** Joins: PureBlood (~purbld@179.43.140.206)
[21:55:29] *** Quits: PureBlood (~purbld@179.43.140.206) (Client Quit)
[21:56:27] <eXtr3m0> so and what you're now doing is putting the code of that plugin inside try catch and then just sending the Error.stack to the backend (in another try catch inside the first try catch)?
[21:56:28] <arch> (I mean the problem is boring, I actually really like the thing it's for)
[21:56:32] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:2447:e568:11bd:7d06) (Client Quit)
[21:56:45] <arch> eXtr3m0: Oh, no
[21:56:54] <eXtr3m0> I'm just curious because I faced similar problems in the past and it was the same, errors were send to the backend but essentially they didn't contain any data:<
[21:57:11] <arch> You can attach callbacks to different states of the uploader
[21:57:12] <eXtr3m0>  I wonder how to catch this error.
[21:57:21] <arch> So if something fails, you can display an error message to the user
[21:57:40] <arch> But, these callbacks don't happen as a result of an actual JS error
[21:58:27] <eXtr3m0> And how do you catch this actual JS error?
[21:58:32] <arch> But, the callback likely would have a stack trace with information about what part of plupload actually failed, which I want to generate, and include with the error message it gives us, which may or may not be helpful
[21:58:51] <arch> eXtr3m0: That's the thing, there is none
[21:59:10] <arch> new Error() is easy enough though
[21:59:37] <The_Blode_> Good evening guys. Quick question. Does anybody know of any JavaScript libraries for highlighting elements on a page with captions for Interactive demos / wizards?
[22:00:04] <arch> But reading MDN and seeing every stack overflow answer point to Error.prototype.stack without mentioning that it's nonstandard made me eventually join here and ask "Hey, what's up?"
[22:00:43] <eXtr3m0> Yeah I see, but thanks for sharing, I dn'
[22:00:57] <eXtr3m0> I wasn't aware of the .stack functionality
[22:01:43] <arch> Well, it seems supported across everything right now, but also
[22:01:45] <arch> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error/Stack
[22:01:53] <arch> "Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future."
[22:02:05] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 250 seconds)
[22:02:27] <arch> So I'm going to be defensive about it--so if it ceases to exist as it does now, it won't cause problems when a more standard thing replaces it
[22:03:00] <systemfault> If it ceases to exist, you'll be sending "undefined" to the server... which may not be a real problem
[22:03:27] <systemfault> In any case, I'd bet a good $100 USD that .stack will never be removed.
[22:03:38] <arch> That's fine, of course! But I was originally hoping to parse it into a JSON array so I could construct a nicer Exception object serverside
[22:03:54] <arch> And now I thikn I'm just gonna send the string on its own
[22:04:03] <systemfault> Browser vendors don't break "pseudo-standard" functionalities unless they have a very good reason to do so.
[22:04:04] <arch> think, even
[22:04:05] <eXtr3m0> hasOwnProperty.call(myerror, "stack") seems to do the trick
[22:04:31] <arch> eXtr3m0: True! Though that doesn't check if the structure of the return value changes
[22:04:39] *** Joins: Intelo (~Intelo@88.244.94.93)
[22:04:48] <Intelo> Hi
[22:05:05] <Intelo> Any clue why this is not working in domain url? https://i.imgur.com/n83aksv.png
[22:05:24] <eXtr3m0> typeof myerror.stack === 'string'
[22:05:41] *** Joins: kakashiAL (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de)
[22:06:03] <systemfault> if (myError.stack) {}
[22:06:09] <systemfault> undefined is falsy
[22:06:35] *** Joins: crashrep (~crashrep@user/crashrep)
[22:06:47] <arch> systemfault: Yup! You can even prepend a !! to explicitly make it boolean
[22:06:58] <arch> Though that's not really necessary
[22:07:48] <arch> I'm just gonna throw it into an object and stringify it though, that way stringify can handle type weirdness
[22:08:39] <Intelo> Do you guys do this with nginx often?
[22:09:11] <systemfault> Maybe there's a devops or nginx or some related channel that could help you
[22:09:46] <stenno> is app running on localhost though?
[22:10:14] <stenno> ooh wait ssl stuff
[22:10:28] <stenno> SSL misconfig
[22:10:51] <eXtr3m0> systemfault: damn I should clean up my coding style a bit more. writing only in plain js in the browser I'm a little bit afraid the browser doesn't get it. A relict of the IE6 days. :D
[22:10:52] <systemfault> But they get a 404 so the SSL issue is probably not the main problem (just another one)
[22:10:54] <stenno> actually idk
[22:10:56] <stenno> right
[22:11:48] <arch> One easyish way to get servers to not have port and host weirdness when forwarding nginx sites is to use unix domain sockets, that way the hostname you proxy_pass to doesn't cause weirdness to happen
[22:11:48] <Intelo> stenno on the server
[22:11:57] <Intelo> stenno there is no ssl for now
[22:12:09] <Intelo> systemfault correct
[22:12:27] <arch> So like, if you make your server listen on a file like server.sock, you can use proxy_pass http://unix:/path/to/file.sock
[22:12:53] <arch> That would eliminate any issues from the proxy, meaning that only nginx's root would need to be debugged
[22:13:29] <Intelo> arch I see
[22:13:42] <arch> Mhm! It also means you don't need to have random ports open for your the different servers you run~
[22:13:42] <stenno> reverse proxy is the standard way to expose local node processes
[22:13:57] <stenno> to a webserver like apache or nginx
[22:14:00] <Intelo> arch never tried that.. will do
[22:14:15] <Intelo> stenno so what part might be missing
[22:14:22] <arch> stenno: It's a good way to do it too! Having only nginx be root means that you don't need to worry about node having permissions to do really bad things if someone does naughty things with it
[22:14:54] <systemfault> You've seen the really dumb policykit exploit that was released today?
[22:14:57] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[22:15:16] <systemfault> https://arstechnica.com/information-technology/2022/01/a-bug-lurking-for-12-years-gives-attackers-root-on-every-major-linux-distro/
[22:15:19] <arch> oh dang, yeah
[22:15:30] <stenno> sounds nasty
[22:15:34] <stenno> zomg
[22:15:44] <systemfault> It is... better update your distros
[22:15:59] <stenno> how is it possible that such a bug exists for so long in a foss project
[22:16:08] <arch> Mailing lists!
[22:16:17] <stenno> hah
[22:16:26] <arch> I saw someone actually submitted a patch for that ages ago, but they aren't even sure the author got it
[22:16:49] <arch> https://twitter.com/ryiron/status/1486207465918468097
[22:17:10] <arch> They even blogged about the vulnerability in 2013 apparently?? Dang
[22:17:31] <stenno> >.<
[22:18:09] <Intelo> arch but how to debug this situation at the moment.? everything seems correct and no errors except 404
[22:18:28] <stenno> inb4 SELINUX
[22:18:42] <arch> It's always fun to see the usability of mailing lists directly translate to problems contributing important things
[22:19:01] <stenno> hehe
[22:19:12] <arch> Intelo: Hm! Have you tried asking nginx to proxy to another port, and then listening to that port with nc -lv <the port>?
[22:19:24] *** Joins: forn (nemes@tilde.team)
[22:19:26] <stenno> Intelo: whats `sestatus` giving?
[22:19:40] *** Joins: c4017w_ (~c4017@2605:8d80:4c0:ae98:794a:3b8:27c3:7bb3)
[22:19:45] <arch> That way you can see if the path you are asking nginx for is not getting hecked up by something
[22:19:57] <Intelo> arch actually no. will do not.
[22:20:00] <Intelo> stenno ok on sec
[22:20:31] <stenno> i think misconfigured selinux might cause 404 in those situations
[22:20:49] *** Quits: c4017w (~c4017@199.119.235.154) (Read error: Connection reset by peer)
[22:20:55] *** Joins: harpia (~harpia@2804:2aec:205:4600:1f64:3c12:1a0e:3b09)
[22:20:57] <Intelo> stenno disabled
[22:21:11] <stenno> ok
[22:21:41] <Intelo> arch $ nc -lv 4321
[22:21:42] <Intelo> nc: Address already in use
[22:21:42] *** Joins: pluri_ (~pluri@user/pluri)
[22:21:57] <Intelo> arch I used same port
[22:22:06] <arch> Intelo: Oh, that's why you need to use another port, since your server is already listening on that port
[22:22:07] *** Quits: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se) (Ping timeout: 256 seconds)
[22:22:21] <arch> This is just an experiment to see if the request is getting forwarded correctly
[22:22:22] <Intelo> arch so I don't run the app on that port?
[22:22:36] <Intelo> arch so I don't run the app on that port? just do that on nginx configs?
[22:22:37] <arch> You can either stop your app for a second and then do it
[22:22:52] <Intelo> ok one sec. stopping app
[22:22:53] *** Quits: c4017w_ (~c4017@2605:8d80:4c0:ae98:794a:3b8:27c3:7bb3) (Read error: Connection reset by peer)
[22:23:02] *** Quits: pluri (~pluri@user/pluri) (Ping timeout: 240 seconds)
[22:23:07] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[22:23:07] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[22:23:07] *** Joins: wroathe (~wroathe@user/wroathe)
[22:23:08] <arch> Or nc -lv 4322 and ask nginx to forward to that port
[22:23:13] <Intelo> $ nc -lv 4321
[22:23:13] <Intelo> nc: getnameinfo: Temporary failure in name resolution
[22:23:14] <arch> (Ah, that works)
[22:23:22] <arch> Oh!
[22:23:30] <arch> You have *that* netcat
[22:23:36] <arch> nc -l -p 4321
[22:23:37] <Intelo> sorry?
[22:23:46] <arch> There are two different versions of netcat
[22:23:54] *** ChanServ sets mode: +o litharge
[22:23:55] *** litharge sets mode: -bo *!*@78.84.30.236 litharge
[22:23:55] *** Joins: thiras (~thiras@user/thiras)
[22:23:58] *** Joins: c4017w (~c4017@2605:8d80:4e1:336:6462:cec4:311f:f3ce)
[22:24:05] *** Joins: Booster2ooo|2 (~Booster2o@host-78-129-75-220.dynamic.voo.be)
[22:24:05] <Intelo> ok, I hope it won't make a difference
[22:24:10] <Intelo> so what next/
[22:24:18] <stenno> who needs a browser when you have nc
[22:24:24] <stenno> who needs an IRC client when you hav enc
[22:24:24] <arch> Intelo: Nope! It just changes the parameters it accepts
[22:24:42] <systemfault> I actually IRCed using telnet a few times
[22:24:47] <arch> Intelo: Anyway, try to connect to your web app, and look at the output nc spits out
[22:24:55] <stenno> systemfault: same
[22:24:55] <arch> systemfault: That's rad!
[22:25:01] <Intelo> arch so use 4321?
[22:25:06] <arch> mhm!
[22:25:17] <systemfault> You just hope that the server isn't configured to send pings often...
[22:25:19] *** Joins: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se)
[22:25:26] <stenno> systemfault: yeah the manual pongs
[22:25:27] <stenno> good times
[22:25:31] <arch> PRIVMSG #javascript : it was kinda annoying to need to type this every time you wanted to message though, hahah
[22:25:31] *** Parts: harpia (~harpia@2804:2aec:205:4600:1f64:3c12:1a0e:3b09) ()
[22:25:38] <Intelo> arch $ nc -lv 4321
[22:25:39] <Intelo> nc: Address already in use
[22:25:39] <arch> stenno: oh gosh, yeah
[22:25:52] *** Quits: flameboi (dgw@user/flameboi) (Quit: Ping timeout (120 seconds))
[22:26:11] *** Joins: flameboi (dgw@user/flameboi)
[22:26:44] <arch> Intelo: I mean, if you stop your app for a second, "nc -l -p 4321", then visit http://test-api.1-mail.site/api/test
[22:27:01] <arch> You should see your browser request pop out of netcat
[22:27:11] <Intelo> ok
[22:27:19] <arch> It should look something like "GET /api/test" and a bunch of lines
[22:27:27] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[22:27:44] <arch> If it doesn't say "/api/test", or if you don't get the request at all, nginx is doing something bad to your requests
[22:27:49] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[22:27:49] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Ping timeout: 240 seconds)
[22:27:53] <Intelo> arch 404
[22:28:03] <arch> Ok, so it's an nginx issue
[22:28:12] <arch> No output from netcat, right?
[22:28:18] <stenno> well then #nginx :P
[22:28:55] *** Quits: Camilo (~hugh@host-92-1-126-125.as13285.net) (Ping timeout: 256 seconds)
[22:29:06] <arch> Mhm! I'm not actually super-knowledgeable about nginx, and the peeps at #nginx could probably help you more than we can
[22:29:06] <arch> It looks like your problem is that nginx isn't proxying correctly though
[22:29:26] <Intelo> arch actually the ip is not even working http://95.179.194.124:4321/
[22:29:27] <arch> I hope that was a little helpful at least though~
[22:29:37] <arch> huh
[22:30:08] <Intelo> wait. there is output in net cat for ip
[22:30:26] <Intelo> https://pastebin.mozilla.org/b9OHeUAi
[22:30:50] <arch> Oh! It did go through!
[22:31:11] <arch> Though, look at your host
[22:31:16] <stenno> so, DNS?
[22:31:23] <arch> It's always DNS
[22:31:54] <systemfault> Except when it's not... then a bit later, it ends up being DNS anyway
[22:31:55] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[22:31:55] *** Joins: lispy (~lispy4@84.69.59.93)
[22:31:57] <arch> https://www.cyberciti.biz/media/new/cms/2017/04/dns.jpg
[22:32:03] <arch> a haiku
[22:32:09] <systemfault> Some serious wisdom there
[22:32:11] <stenno> haha
[22:32:14] <stenno> amazing
[22:32:49] <Intelo> arch thanks for the help!
[22:33:59] *** Joins: gproto23 (~gproto23@user/gproto23)
[22:34:10] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 250 seconds)
[22:34:23] *** Joins: Ilyu (~quassel@gateway/vpn/pia/ilyu)
[22:35:44] <Intelo> stenno arch nginx guys said 'seems your actual backend (npm) doesn't know about the domain name'
[22:35:54] <Intelo> I wonder where is that to set 'hostname'?
[22:35:58] *** Quits: mat001 (~mat001@213.143.69.121) (Remote host closed the connection)
[22:36:02] <Intelo> in a  node server (I use expres)
[22:36:21] <stenno> but i would think that regarding a reverse proxy, the actual outgoing DNS doesn't matter
[22:36:21] <Intelo> and what should be the hostname exactly
[22:36:41] <stenno> localhost is in your /etc/hosts right?
[22:37:20] *** Quits: Measles (~Measles@186.226.224.169) (Quit: Client closed)
[22:37:34] <Intelo> stenno no..
[22:37:39] <Intelo> stenno well  yes
[22:37:44] <stenno> what is it
[22:37:50] <Intelo> localhost
[22:38:00] <stenno> is in your /etc/hosts as 127.0.0.1 ?
[22:38:31] <stenno> on the server
[22:38:51] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Remote host closed the connection)
[22:39:01] *** Quits: forn (nemes@tilde.team) (Changing host)
[22:39:01] *** Joins: forn (nemes@user/tiresias)
[22:39:13] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[22:39:38] <Donitz> if I put a regular script tag before a module script tag
[22:39:50] <Donitz> will the first script always load fully before the module?
[22:39:51] <Intelo> stenno its 127.0.0.1 localhost
[22:39:52] <Intelo>  but I don't think its the issue. I have this on many other servers and still they run with same revers proxy code
[22:40:43] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[22:40:59] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[22:41:32] *** Quits: Intelo (~Intelo@88.244.94.93) (Quit: Client closed)
[22:44:23] *** Quits: Wizzzzzy_ (~wizzzzzy@178.255.149.135) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:45:04] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[22:45:08] <stenno> whats your actual node server code?
[22:45:21] *** Joins: Intelo (~Intelo@88.244.94.93)
[22:45:30] <stenno> i am getting confused lol
[22:47:45] *** Quits: PenguinMan98 (~PenguinMa@65.153.38.250) (Quit: Client closed)
[22:47:56] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[22:50:55] *** Joins: Akiva (~Akiva@user/Akiva)
[22:53:04] <Intelo> stenno arch I just made a guess and disabled the following other config after doing location / { return 200 'OK'; } for the test-api domain on 4321 port.  This was creating problem. I do not know why. I commented it  out now. and the other site works https://pastebin.mozilla.org/L0QEcPZL#
[22:53:31] <arch> Oh nice!
[22:53:39] <stenno> so nginx misconfiguration
[22:53:42] *** Parts: forn (nemes@user/tiresias) ()
[22:53:48] <stenno> can't blame js on that one!
[22:53:51] *** Quits: Ilyu (~quassel@gateway/vpn/pia/ilyu) (Ping timeout: 256 seconds)
[22:54:10] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[22:54:47] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[22:55:33] <Intelo> :)
[22:56:56] *** Joins: cotko_ (~cotko@188-230-251-153.dynamic.t-2.net)
[22:57:21] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[22:58:45] * austincheney learned yesterday Windows Explorer (the file manager) is likely not GPU powered, so an equivalent display in the browser performs noticably faster in the browser if written appropriately and the file list is less than 1000 artifacts
[22:59:17] *** Quits: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[22:59:32] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[22:59:52] *** Joins: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net)
[22:59:57] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[23:00:47] <eXtr3m0> Since I started using css custom properties I got used to setting them to the html root node via javascript in some cases.
[23:01:11] *** Joins: Camilo (~hugh@host-92-1-126-125.as13285.net)
[23:01:13] <eXtr3m0> I wonder if it would be somehow more performant to define these in a style tag I append to the head.
[23:01:29] *** Quits: Booster2ooo|2 (~Booster2o@host-78-129-75-220.dynamic.voo.be) (Read error: Connection reset by peer)
[23:01:47] <eXtr3m0> Like, from a HTML perspective there would be not a lot.. no childs (except text child).
[23:01:53] *** Joins: sam_1 (~sam_1@87.51.251.118)
[23:01:57] <eXtr3m0> but of course in css terms it must be the same.
[23:02:51] <eXtr3m0> I wonder if there is any additional work done because I changed an attribute of the root node.
[23:04:03] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 256 seconds)
[23:06:25] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[23:06:45] *** Quits: kmh (~kmh@2a00:6020:5004:6800:151a:944b:c8ba:cf58) (Quit: Leaving)
[23:06:56] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 268 seconds)
[23:07:01] *** Joins: mat001 (~mat001@213.143.69.121)
[23:07:03] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[23:07:48] <austincheney> eXtr3m0, it only depends upon the amount of repaint in the page.
[23:09:31] <eXtr3m0> I see, thanks!
[23:09:35] <arch> I feel like having all of your CSS in one place that doesn't change would probably be faster than mutating the dom and letting the resulting parsing of that update styles
[23:10:43] <arch> (I mean, appending a style tag probably would do a lot of work that toggling a class might not)
[23:11:07] <arch> This is just a guess though, the best way to know for sure is to test it!
[23:11:18] <austincheney> arch, that only matters for download and caching
[23:11:26] *** Quits: mat001 (~mat001@213.143.69.121) (Ping timeout: 250 seconds)
[23:11:35] <arch> austincheney: It sounds like the css would be inline in this case
[23:11:58] <arch> Though, that's true for external files
[23:12:26] <austincheney> arch, when it comes to rendering inline doesnt make any difference.  Inline is a bad practice for other reasons.
[23:12:42] <arch> Agreed!
[23:12:48] <arch> Except for deferring fonts
[23:12:52] <arch> Then it's pretty okay imo
[23:13:06] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 268 seconds)
[23:13:18] *** Joins: mat001 (~mat001@213.143.69.121)
[23:13:25] <austincheney> fonts could be different, I would have to think about that.
[23:13:33] <eXtr3m0> Thing is, when I have 7 blocks on the page that change depending on a global value: Is it better to change the dom once and set a css custom property definition to the root note or loop via js through the dom nodes and update them in their local scope?
[23:13:34] *** Joins: eXistenZ (~biskit@2001:4df4:370:fd00:7835:1ee7:e852:1c20)
[23:14:06] <eXtr3m0> could be adding a class locally.
[23:14:14] <arch> I think that the root node would be the simplest solution--or at least an ancestor of all of the elements you wanna update
[23:14:26] <eXtr3m0> except a class would not provide a custom value
[23:14:55] <arch> Oh! Like, a custom color or something?
[23:15:17] <eXtr3m0> Viewportheight - Headerheight
[23:15:35] *** Joins: sam_1 (~sam_1@87.51.251.118)
[23:15:39] <eXtr3m0> I'm sick of trying to use 100vh on mobile
[23:15:54] <arch> Ahh!
[23:16:12] <eXtr3m0> btw. I just found window.screen.availHeight Does it provide meaningful data in this case? Need to try it out.
[23:16:19] <eXtr3m0> https://developer.mozilla.org/en-US/docs/Web/API/Screen/availHeight
[23:16:43] <arch> (Though, do the things you are trying to support allow using calc() in css?)
[23:17:09] <arch> https://caniuse.com/calc
[23:17:14] <eXtr3m0> Yes and I solved it, but the problem is it wasn't really performing well enough in all cases.
[23:17:25] <arch> Neat!
[23:17:46] <eXtr3m0> That's why I now refactor it into a JS solution
[23:18:36] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[23:19:45] <eXtr3m0> min-height: calc(var(--he-OnResize-ViewportHeight) - #{$bl-Banner-height-max-bottom-gap} - (var(--bl-Header-InitialHeight) + var(--bl-Header-Header_AnnouncementHeight)) - var(--he-mobile-device-ui-height));
[23:19:48] <eXtr3m0> it was awesome
[23:19:49] <eXtr3m0> :D
[23:19:59] <arch> Holy heckaroni
[23:20:02] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 240 seconds)
[23:20:06] <arch> That's intense
[23:20:59] *** Quits: mat001 (~mat001@213.143.69.121) (Remote host closed the connection)
[23:21:04] <arch> austincheney: Usually the use-case for deferring fonts inline is if you have a 30kb page, and 5MB of fonts, you can throw the font imports into the end of your body tag so that the page shows instantly, even on slow connections
[23:21:04] <arch> And the inline is so that you don't make as many requests, since CSS is typically best minified all into one file--though HTTP2 does speed that up considerably, so an external file is probably fine
[23:21:36] <eXtr3m0> calc() _is_ awesome though, especially with custom props and the other functions like min() and max(). It can solve so many layout problems so well and dynamic.
[23:21:45] *** Joins: mat001 (~mat001@72.28.108.216)
[23:22:16] <arch> Since there are no actual CSS rules in the tag and the size is extremely small, it gets past the problem of inline CSS being hard to maintain and uncachable
[23:22:54] <arch> eXtr3m0: Oh yeah! I'm so glad calc() is a thing that exists now D:
[23:23:09] <eXtr3m0> arch: 5mb = small ?
[23:23:19] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[23:23:28] *** Joins: kmh (~kmh@2a00:6020:5004:6800:5c9:7912:93ae:96ad)
[23:23:37] <arch> eXtr3m0: The contents of the style tag are small, the fonts are big though
[23:24:17] *** Joins: optimist (~optimist@27.57.127.39)
[23:24:33] <eXtr3m0> I see
[23:25:08] <arch> Though, a lot of fonts now have stylesheets you can just include directly from third parties, like googleapis
[23:25:28] <arch> So you don't typically need to write the CSS nowadays
[23:25:28] *** Quits: kmh (~kmh@2a00:6020:5004:6800:5c9:7912:93ae:96ad) (Read error: Connection reset by peer)
[23:25:40] *** Joins: kmh (~kmh@2a00:6020:5004:6800:5c9:7912:93ae:96ad)
[23:26:04] <arch> But if you just know where one is hosted, and you don't write any rules in the tag, you're usually pretty covered~
[23:26:19] <alystair> I'm surprised there's no way to modify 'prefered-color-scheme' programmatically in a document to allow light/dark scheme toggling to be trivialized and allow some elements to only appear in one of the two schemes
[23:29:16] *** Joins: onosendi (~onosendi@user/onosendi)
[23:30:38] <alystair> hmmm maybe if I yank the light stuff out as well..
[23:31:19] <ljharb> arch: oof, calc() is super slo and should be avoided
[23:31:36] <ljharb> altho in recent years it's gone from "so slow you should be fired for using it" to "mildly slow"
[23:32:16] <arch> ljharb: It's definitely slow! Though I find it to be muuuch faster than needing to rely on js to do the same things
[23:32:19] *** Joins: sam_1 (~sam_1@87.51.251.118)
[23:32:21] *** twiclo1 is now known as twiclo
[23:32:59] *** Joins: ttys000 (~ttys000@user/ttys000)
[23:33:53] <arch> It also means less visual logic in your js! Which is always a win in my book, though I'm pretty biased hahah
[23:34:15] <arch> I just like declarative things
[23:35:13] *** Quits: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[23:35:35] <onosendi> You guys talking about CSS' `calc()` ?
[23:35:40] <arch> Yep!
[23:35:41] *** Quits: eXistenZ (~biskit@2001:4df4:370:fd00:7835:1ee7:e852:1c20) (Read error: Connection reset by peer)
[23:35:45] *** Parts: riv (river@tilde.team/user/river) (WeeChat 3.4)
[23:36:09] *** Joins: easbarba (~user@2804:1b2:81:9dbd:11f6:c867:c4b4:8ad3)
[23:37:09] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 268 seconds)
[23:39:10] *** Quits: kakashiAL (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[23:41:59] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[23:41:59] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[23:41:59] *** Joins: wroathe (~wroathe@user/wroathe)
[23:42:07] *** Quits: nomic (~nomic@185.192.69.10) (Quit: Leaving)
[23:42:25] *** Joins: nomic (~nomic@185.192.69.10)
[23:42:48] *** Joins: Wizzzzzy (~wizzzzzy@178.255.149.135)
[23:44:11] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:45:44] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:46:01] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[23:46:14] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[23:47:47] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:48:12] *** Joins: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net)
[23:48:18] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[23:48:51] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[23:48:52] *** Quits: Wizzzzzy (~wizzzzzy@178.255.149.135) (Ping timeout: 268 seconds)
[23:49:14] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[23:49:30] *** Joins: Wizzzzzy (~wizzzzzy@185.69.145.173)
[23:51:35] *** Joins: kakashiAL (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de)
[23:51:52] *** Joins: c4017w_ (~c4017@2605:8d80:4e1:336:6462:cec4:311f:f3ce)
[23:52:38] *** Joins: c4017w__ (~c4017@2605:8d80:4e1:336:6462:cec4:311f:f3ce)
[23:53:41] <eXtr3m0> arch: you are saying faster than js and ljharb says you should be fired because its so slow.
[23:54:05] <eXtr3m0> But the only other method I know is JS so that must be faster then?
[23:54:39] *** Joins: summersault (~summersau@179.221.251.36)
[23:55:01] *** Quits: c4017w (~c4017@2605:8d80:4e1:336:6462:cec4:311f:f3ce) (Ping timeout: 240 seconds)
[23:55:02] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[23:55:32] *** Quits: Wizzzzzy (~wizzzzzy@185.69.145.173) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:56:02] *** Quits: c4017w_ (~c4017@2605:8d80:4e1:336:6462:cec4:311f:f3ce) (Ping timeout: 240 seconds)
[23:57:33] <ljharb> eXtr3m0: i said historically it was that bad
[23:57:37] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[23:57:53] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[23:58:52] <arch> eXtr3m0: Hee. I guess so!
[23:58:52] <arch> (But for reals, extracting visual logic into CSS and only using JS to toggle classes can really free up mental load things take I find, and plus you don't need to wait for JS to kick in before it all works)
[23:59:08] <eXtr3m0> https://blog.okopress.dev/css-variables-performance-benchmark-2021-f56cd26ae9f5
