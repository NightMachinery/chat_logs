[00:00:39] *** Joins: jpn (~jpn@user/jpn)
[00:00:40] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[00:01:18] *** Quits: GiovanniBF (~Giovanni@45.86.202.164) (Remote host closed the connection)
[00:01:33] *** Joins: GiovanniBF (~Giovanni@45.86.202.164)
[00:02:23] *** Quits: GiovanniBF (~Giovanni@45.86.202.164) (Client Quit)
[00:02:36] *** Joins: GiovanniBF (~Giovanni@45.86.202.164)
[00:03:01] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[00:03:17] *** Quits: GiovanniBF (~Giovanni@45.86.202.164) (Client Quit)
[00:03:30] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[00:04:06] *** Quits: eroux (~eroux@102-65-72-61.ftth.web.africa) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:04:45] *** Joins: GiovanniBF (~Giovanni@176.219.136.49)
[00:04:46] *** Quits: GiovanniBF (~Giovanni@176.219.136.49) (Read error: Connection reset by peer)
[00:04:59] *** Joins: GiovanniBF (~Giovanni@176.67.166.45)
[00:06:42] *** Joins: greedom (~greedom@p200300de67129700fcb07913b27e4da4.dip0.t-ipconnect.de)
[00:07:19] *** Joins: treason (~treason@2a02:c7e:3456:c900:e511:7234:1ba:ec81)
[00:07:21] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[00:07:38] *** Joins: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[00:07:39] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[00:07:53] *** Quits: NoImNotNineVolt (~fdsa@c-73-248-207-98.hsd1.nj.comcast.net) (Ping timeout: 256 seconds)
[00:09:01] *** Quits: ano (~ano@user/ano) (Quit: ano)
[00:09:19] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[00:09:28] <mattf> on regex (re module) is it possible to have match groups to be dynamically created, like i dont know how many groups will exist but i want it to create match groups as needed, example:
[00:09:32] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[00:09:43] <mattf> re.match(r"^(?:<(.)>)(?:;<(.)>)*$", "<1>;<2>;<3>")[1] --> 1 that is ok
[00:10:00] <mattf> re.match(r"^(?:<(.)>)(?:;<(.)>)*$", "<1>;<2>;<3>")[2] --> 3 thats not ok, should be 2
[00:10:07] <mattf> and [3] should exist being 3
[00:10:14] <phy1729> You just have 1 match group there
[00:10:21] <velix> Sorry for asking. Subprocess.run() doesn't have a working path, does it?
[00:10:29] <phy1729> What's the larger goal?
[00:10:32] <mattf> phy1729: i have 2
[00:10:51] <phy1729> (?:  makes it not capturing unless I misremember my regex squiggles
[00:11:03] <mattf> yes but there is one inside it
[00:11:08] *** Joins: jamiejackson (~jamiejack@131.106.140.145)
[00:11:09] *** Quits: Staunch (~Staunch@134.238.184.213) (Ping timeout: 252 seconds)
[00:11:16] <matsaman> squiggles!
[00:11:20] *** Joins: thevar1able (~textual@144-178-79-140.static.ef-service.nl)
[00:11:23] <phy1729> oh, so there is my bad
[00:11:32] <mattf> the non capturing group is just so i can * it, meaning one or more
[00:11:52] <velix> ah, found it. Thanks
[00:11:56] <han-solo> velix: as in you want to set a current working directory ? if yes, it can take `cwd`
[00:12:01] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Ping timeout: 245 seconds)
[00:12:04] <deniska> mattf: you probably want findall/finditer
[00:12:08] *** Quits: Giovanni (~Giovanni@176.67.166.45) (Remote host closed the connection)
[00:12:08] <velix> han-solo: yeah, I didn't see it in the long list ;)
[00:12:10] <SnoopJ> yep, `cwd` is what you want
[00:12:10] <mattf> and i thought the * would make it so i could have as many groups as i wanted but seems regex will not match the groups
[00:12:11] <han-solo> `s/can//`
[00:12:20] <mattf> oh
[00:12:21] <mattf> findall
[00:12:21] <velix> han-solo SnoopJ: Thanks. Works perfectly.
[00:12:31] <phy1729> iirc only the last match is returned, but don't see that in the docs yet
[00:12:42] <mattf> yes only the last match
[00:12:42] <han-solo> velix: yeah, all of those end up calling `.Popen`, iirc, so
[00:13:01] <deniska> mattf: or maybe just .split(';') and then .strip('<>') :)
[00:13:12] <mattf> no thats a simplification for a more complicated thing
[00:13:29] <mattf> where i can have ; inside the <> for example
[00:13:37] <Imk0tter> is there a default library for python windows forms/GUI/drawing?
[00:13:51] <mattf> no im not parsing html or tagged things, i just had to come with a simpler example
[00:13:57] <han-solo> `tkinter`
[00:15:04] <Imk0tter> with `tkinter`, is there an event that's called for rendering/updating the elements in the window?
[00:17:19] *** Joins: ano (~ano@user/ano)
[00:17:42] *** Quits: GiovanniBF (~Giovanni@176.67.166.45) (Quit: Quit)
[00:17:49] *** Joins: Giovanni (~Giovanni@176.67.166.45)
[00:18:22] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:18:33] <Imk0tter> do i have to create a seperate thread that updates the contents on a canvas in the window?
[00:18:34] *** Quits: Guts71 (~Guts71@41.104.96.154) (Quit: Client closed)
[00:18:51] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 250 seconds)
[00:19:58] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[00:20:38] *** Joins: djhankb (~djhankb@208.113.164.68)
[00:21:02] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Quit: Leaving)
[00:21:29] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 256 seconds)
[00:21:29] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[00:21:47] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[00:21:52] *** Quits: andreasbuhr (~quassel@p549db93e.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:22:49] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:23:17] <han-solo> Imk0tter: i don't much about tkinter rendering, but i don't think so
[00:23:48] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[00:23:57] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[00:24:43] *** Joins: Croves (~Croves@ec2-52-39-74-136.us-west-2.compute.amazonaws.com)
[00:24:53] *** Quits: vulpes_vulpes (~vulpes_vu@62-64-207-88.dynamic.dial.as9105.com) (Remote host closed the connection)
[00:25:41] *** Joins: hi (~hi@2a02:1210:2ebc:d00:8c79:850d:c329:b6c0)
[00:26:07] *** Quits: hi (~hi@2a02:1210:2ebc:d00:8c79:850d:c329:b6c0) (Client Quit)
[00:26:21] *** Joins: Guest22 (~Guest22@2a02:1210:2ebc:d00:8c79:850d:c329:b6c0)
[00:26:28] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[00:26:45] *** Quits: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Read error: Connection reset by peer)
[00:27:38] *** Joins: Staunch (~Staunch@134.238.165.172)
[00:29:14] *** Joins: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[00:29:19] *** Quits: Croves (~Croves@ec2-52-39-74-136.us-west-2.compute.amazonaws.com) (Client Quit)
[00:30:11] *** Joins: bomb-on (~bomb-on@user/bomb-on)
[00:30:27] *** Quits: wolfdale8 (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Quit: The Lounge - https://thelounge.chat)
[00:31:47] *** Joins: wolfdale8 (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[00:31:48] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[00:32:01] *** Quits: Staunch (~Staunch@134.238.165.172) (Ping timeout: 245 seconds)
[00:32:15] *** Quits: PaterTemporalis (~woooopsie@168.182.232.78) (Ping timeout: 260 seconds)
[00:32:29] *** Joins: Guest2114 (~Guest21@85.137.0.51.dyn.user.ono.com)
[00:32:32] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[00:32:52] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:34:07] *** Quits: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be) (Read error: Connection reset by peer)
[00:34:14] <Guest22> hi
[00:34:48] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 252 seconds)
[00:35:14] <mav`rik> Imk0tter: For most GUI libraries you'll be running an eventloop, some aspects of repaint might be up to you (depending on the item), and if you're doing something that ties up the process for an extended period then it's likely better if you do so cooperatively or in a thread
[00:35:46] *** Quits: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:36:16] *** Joins: Oddity (~Oddity@user/oddity)
[00:37:00] *** Quits: Giovanni (~Giovanni@176.67.166.45) (Ping timeout: 252 seconds)
[00:37:14] *** Joins: Giovanni (~Giovanni@194.169.217.74)
[00:37:17] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[00:37:38] *** Quits: tarel2 (~tarel2@139.28.216.245) (Quit: Client closed)
[00:37:49] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:37:52] *** Joins: Pickchea (~private@user/pickchea)
[00:38:41] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:410f:b410:64f7:284a)
[00:39:03] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[00:39:40] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:410f:b410:64f7:284a) (Client Quit)
[00:40:07] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[00:40:17] *** Quits: rsx (~dummy@ppp-188-174-154-241.dynamic.mnet-online.de) (Quit: rsx)
[00:40:33] *** Lord_of_Life_ is now known as Lord_of_Life
[00:41:32] <Guest2114> hello I want to implement "tail -f data.txt" in python using asyncio or aiofiles, I want the program to somehow go to sleep so i does not consume CPU cycles in a infinite loop. Is this possible? I tried this https://bpa.st/2SCQ but it is not exactly what I want
[00:42:10] *** Quits: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Remote host closed the connection)
[00:42:42] *** Joins: Staunch (~Staunch@134.238.165.172)
[00:43:16] <mav`rik> Guest2114: how is it not what you want?
[00:44:08] *** Quits: vaaqif (~vaaqif@cpc151159-smal19-2-0-cust83.19-1.cable.virginm.net) (Ping timeout: 252 seconds)
[00:44:12] *** Joins: pgib (~textual@173.38.117.90)
[00:44:22] *** Quits: Techcable (~Techcable@user/Techcable) (Remote host closed the connection)
[00:44:29] *** Joins: Techcable (~Techcable@user/Techcable)
[00:44:39] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Quit: Client closed)
[00:45:13] <Guest2114> because I am a noob when it comes to async programming and i don't know how should I use that code so it somehow "waits" for the file to be written in a infinite loop
[00:46:36] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[00:47:21] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:47:59] *** Quits: audio (~audio@user/audio) (Ping timeout: 252 seconds)
[00:49:14] *** Joins: vaaqif (~vaaqif@cpc151159-smal19-2-0-cust83.19-1.cable.virginm.net)
[00:49:38] *** Quits: thevar1able (~textual@144-178-79-140.static.ef-service.nl) (Remote host closed the connection)
[00:49:44] <Guest2114> Id use a generator in the synchronous  version in a while True and maybe some time.sleep in the middle but i'd like that the process went to sleep till theres something new in data.txt
[00:49:55] <Guest2114> mav`rik
[00:50:16] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Read error: Connection reset by peer)
[00:50:20] <mav`rik> Guest2114: await will yield to the eventloop, so I don't think "sleeping" is an issue
[00:50:22] *** Quits: mav`rik (~unknown@ec2-54-171-126-99.eu-west-1.compute.amazonaws.com) (Quit: leaving)
[00:51:03] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[00:51:16] *** Joins: linux_dream (~isaac@37.166.60.114)
[00:51:16] <pgib> I'm not sure if this is a python or readline question, but in bash, zsh, etc, I can type "ls <tab><tab>" and it will show a list of filename completions. However, with python's readline if I have a similar completion, then I get "ls file1", "ls file2", "ls file3", etc. It echos out everything prior to the current token for each match.
[00:51:18] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:51:36] <Guest2114> can you show me how should i use await in that function please?
[00:51:44] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[00:54:04] *** Quits: vaaqif (~vaaqif@cpc151159-smal19-2-0-cust83.19-1.cable.virginm.net) (Ping timeout: 268 seconds)
[00:54:55] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[00:55:38] *** Joins: ckdCreations (~ckdCreati@147.55.130.38)
[00:56:08] *** Joins: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr)
[00:57:01] *** Joins: jpn (~jpn@user/jpn)
[00:57:03] <ApostleInTriumph> Hello. I want to parallelise a function's call. is it safe to do `out_list = pool.starmap(sumP, [(val1, val2), (val2, val3), (val1, val3)]) ` where val are values (ints)
[00:57:28] <ApostleInTriumph> and what if vals are pytorch CPU tensors? would starmap still pass them on to sumP function?
[00:57:36] *** Joins: Guest57 (~Guest57@47.146.24.161)
[00:57:49] *** Quits: grimvar (~grimvar@i5C75F499.versanet.de) (Ping timeout: 240 seconds)
[00:58:22] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Remote host closed the connection)
[00:58:38] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[00:58:50] <ApostleInTriumph> I intend to parallelise the call sumP(val1, val2), sumP(val2, val3) ...
[00:58:52] *** Joins: grimvar (~grimvar@i5C75F499.versanet.de)
[00:59:16] <pgib> woot: readline.set_completion_display_matches_hook
[00:59:26] <Jong> I have a python program where I load a bunch of npy files using np.fromfile. It takes about an hour to load all the files. I have 1tb of physical ram.  Is there any way to have a persistent cache so I don't need to load every time I run the program?
[00:59:39] *** Joins: eroux (~eroux@102-65-72-61.ftth.web.africa)
[00:59:46] *** Quits: VoidSync (~sync@user/voidsync) (Quit: Client closed)
[00:59:56] *** Quits: Guest22 (~Guest22@2a02:1210:2ebc:d00:8c79:850d:c329:b6c0) (Quit: Client closed)
[01:00:14] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 268 seconds)
[01:00:37] *** Quits: maggotbrain (~maggotbra@2601:602:9200:e4e0:e388:264:8c2a:98ba) (Ping timeout: 240 seconds)
[01:00:59] <pgib> ApostleInTriumph - I don't know about pytorch exactly. The problem is, assuming this is multiprocessing.Pool, all your arguments need to pickleable (since python has to communicate them to the subprocesses)
[01:01:41] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[01:01:43] <ApostleInTriumph> pgib does dict count as picklable?
[01:01:46] *** Quits: cincoswim (~cincoswim@24-52-65-147.telesystem.us) (Ping timeout: 260 seconds)
[01:01:47] *** Quits: slav0nic (slav0nic@python.su) (Remote host closed the connection)
[01:01:57] *** Joins: hicham (~hicham@2a01:e34:ee18:a4d0:c1a0:b8ed:ab8a:57de)
[01:02:02] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[01:02:06] *** Joins: slav0nic (slav0nic@python.su)
[01:02:14] <SnoopJ> Jong, it's probably worth doing a small benchmark experiment to see if saving the loaded data with np.save() and then subsequently loading it with np.load() is faster than np.fromfile(). If the data is stored as text, this should be *dramatically* faster.
[01:03:20] *** Joins: Nigma1337 (~magnus@87-49-44-239-mobile.dk.customer.tdc.net)
[01:03:24] <pgib> >>> pickle.dumps({"Yes": "It does."})
[01:03:24] <pgib> b'\x80\x04\x95\x15\x00\x00\x00\x00\x00\x00\x00}\x94\x8c\x03Yes\x94\x8c\x08It does.\x94s.'
[01:04:15] <pgib> ApostleInTriumph - but note, everything in the dict (keys and values) must also be pickleable. Same with any other composite types.
[01:04:24] *** Quits: Guest57 (~Guest57@47.146.24.161) (Quit: Client closed)
[01:04:56] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[01:05:05] *** Joins: qlixed (~qlixed@186.18.40.52)
[01:05:22] *** Joins: sobkas (~sobkas@95.175.17.217)
[01:05:38] <Jong> SnoopJ  i'm reading bytes
[01:05:47] <SnoopJ> Jong, it's still worth checking
[01:06:07] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[01:06:23] *** Parts: switchnode (~switchnod@2601:240:d200:fef:82fa:5bff:fe19:f8e4) (ollies out)
[01:06:56] <ApostleInTriumph> pgib i see. I tried to check if everything is pickelable.
[01:06:59] *** Joins: vaaqif (~vaaqif@cpc151159-smal19-2-0-cust83.19-1.cable.virginm.net)
[01:07:15] <ApostleInTriumph> one of my values is a Trimesh object and it takes very long to get pickled
[01:07:23] <ApostleInTriumph> does that mean it would affect the speed of my program?
[01:08:28] *** Joins: ice9 (~ice9@user/ice9)
[01:09:07] *** Quits: adeliktas (~adeliktas@i59F5FF29.versanet.de) (Ping timeout: 260 seconds)
[01:09:45] <Jong> SnoopJ  But i'd still be loading hundreds of gb every time I run the program. I'm wondering if there's a way to have a numpy array in physical memory that I can reuse every time I rerun the program
[01:10:12] *** Joins: adeliktas (~adeliktas@i59F5F0A1.versanet.de)
[01:10:16] <SnoopJ> Jong, you could store the serialized file in /dev/shm on a Linux system.
[01:10:23] *** Quits: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:2821:d42:df49:416) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:10:30] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[01:10:31] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[01:10:49] <SnoopJ> you'll still be paying for the I/O layer but it'll be coming out of memory, so substantially faster than from "real" media
[01:10:55] *** Joins: sobkas (~sobkas@95.175.17.217)
[01:10:55] *** Joins: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:2821:d42:df49:416)
[01:11:52] <Jong> SnoopJ  but reading it to a numpy array will mean I need twice the storage doing what you suggest
[01:12:40] <pgib> Erg.. readline.set_completion_display_matches_hook kinda sucks though. I can't just filter out the common prefix, I have to reimplement _all_ the drawing :-(
[01:12:41] <SnoopJ> Jong, you could write your own daemon that holds onto a copy of the data. If you're not willing to run the benchmark I suggested, though, I am skeptical that this substantially-more-complex approach is worth considering.
[01:12:45] <Jong> for a 200GB data set I'd need 400 GB of physical space that would be enough to store the dataset and then the numpy arrays the dataset loads into
[01:12:47] *** Joins: maggotbrain (~maggotbra@2601:602:9200:e4e0::7dd1)
[01:13:56] <Jong> my own daemon? What you're suggesting takes more than an hour to do. I was looking for a library or program or something that solves the problem I'm having already
[01:14:28] <SnoopJ> I wouldn't run the benchmark with the full dataset.
[01:15:15] *** Quits: c_89 (~c_89@151.54.144.26) (Quit: Connection closed)
[01:15:16] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb)
[01:18:11] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[01:18:37] <SnoopJ> Wonder if you could store the data in a database and construct ndarray objects that point at the database's copy. That would be a mess if you need to make any modifications, though.
[01:18:49] *** Quits: magla (~gelignite@d53678fd.access.ecotel.net) (Quit: Stay safe!)
[01:19:40] *** Quits: Jenna16bit (~j16bit@c-73-228-39-16.hsd1.nm.comcast.net) (Ping timeout: 256 seconds)
[01:19:41] *** Joins: Jenna64bit (~j16bit@c-73-228-39-16.hsd1.nm.comcast.net)
[01:21:15] *** Quits: adeliktas (~adeliktas@i59F5F0A1.versanet.de) (Ping timeout: 260 seconds)
[01:21:51] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[01:21:56] *** Joins: adeliktas (~adeliktas@i59F4DBCA.versanet.de)
[01:22:08] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[01:22:20] *** Joins: Pickchea (~private@user/pickchea)
[01:23:18] <SnoopJ> Jong, the benchmark I suggested took a handful of minutes (not "an hour") to run with ~3 MB of test data, FWIW. Unfortunately (and surprisingly!), it seems that load() is actually slower than fromfile() for that size.
[01:25:23] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[01:26:16] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[01:27:25] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[01:27:38] *** ravan_ is now known as ravan
[01:27:51] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[01:27:57] *** Quits: amogorkon (~amogorkon@user/amogorkon) (Ping timeout: 240 seconds)
[01:28:20] <Jong> SnoopJ any chance you could share your benchmark code?
[01:30:37] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[01:30:48] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:9d53:477b:2e01:dce3)
[01:31:27] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 252 seconds)
[01:32:00] *** Quits: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net) (Ping timeout: 252 seconds)
[01:32:05] *** Quits: unyu (~pyon@user/pyon) (Ping timeout: 250 seconds)
[01:32:19] <SnoopJ> Jong, https://bpa.st/UOUQ
[01:32:53] <Jong> Thanks
[01:33:02] <Jong> I need to memorize that timeit command
[01:33:04] <ApostleInTriumph> hello SnoopJ
[01:33:08] <SnoopJ> ApostleInTriumph, hi
[01:33:41] <SnoopJ> Jong, you can use it from inside Python (or IPython) too, I just usually write a file and use `python3 -m timeit`
[01:33:50] <SnoopJ> or in this case the whole thing fits on the commandline
[01:34:31] <ApostleInTriumph> a quick question, does `pool.starmap` expect the arguments to be an iterable(iterable) (list of tuples) or just iterable (list)?  and for each element in the iterable, the first parameter, a function is called with the element as parameter, right?
[01:36:50] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[01:37:39] *** Quits: remedan (~remedan@octo.cafe) (Remote host closed the connection)
[01:38:31] *** Quits: stockholm (~Andreas@p200300d2c70a98008cf092380e131bc0.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[01:38:55] *** Quits: sobkas (~sobkas@95.175.17.217) (Remote host closed the connection)
[01:39:02] <ChrisWarrick> ApostleInTriumph: try it and see?
[01:39:21] *** Joins: sobkas (~sobkas@95.175.17.217)
[01:39:36] *** Joins: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net)
[01:40:40] *** Quits: Nigma1337 (~magnus@87-49-44-239-mobile.dk.customer.tdc.net) (Quit: Lost terminal)
[01:41:25] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[01:42:00] *** Quits: reset (~reset@user/reset) (Quit: reset)
[01:42:14] *** Quits: sobkas (~sobkas@95.175.17.217) (Remote host closed the connection)
[01:42:17] <ApostleInTriumph> sweet
[01:42:32] <ApostleInTriumph> I passed a list of strings and it went on to "iterate over" each string
[01:42:40] *** Joins: sobkas (~sobkas@95.175.17.217)
[01:42:48] *** Quits: sobkas (~sobkas@95.175.17.217) (Remote host closed the connection)
[01:43:07] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[01:43:22] <ApostleInTriumph> ChrisWarrick i've grown used to writing code on notebook, ipython and heavily dependent on pdb. multiprocessing scares me
[01:43:25] *** Joins: kevr (~kevr@user/kevr)
[01:43:51] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Remote host closed the connection)
[01:44:17] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[01:44:29] *** Joins: sobkas (~sobkas@95.175.17.217)
[01:44:48] <ChrisWarrick> ApostleInTriumph: eh, multiprocessing should scare you, but because of its mediocre design, and its dependence on pickle
[01:44:50] *** Quits: Guest2114 (~Guest21@85.137.0.51.dyn.user.ono.com) (Quit: Client closed)
[01:44:56] *** Joins: remedan (~remedan@octo.cafe)
[01:45:15] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 240 seconds)
[01:45:21] <ApostleInTriumph> ChrisWarrick does the speed I'd gain depend on how "pickleable" the object is?
[01:45:34] <ApostleInTriumph> (object passed as param to the fun i'd want to parallelise)
[01:45:35] <ChrisWarrick> ApostleInTriumph: pickleability is binary
[01:45:50] <ApostleInTriumph> but the check for it is costly?
[01:46:01] <ChrisWarrick> ApostleInTriumph: if your thing is not pickleable, you won’t be able to use multiprocessing on windows and macos
[01:46:13] <ChrisWarrick> ApostleInTriumph: the "check" is just pickling objects
[01:46:21] <ApostleInTriumph> good thing i'm on ubuntu
[01:46:35] *** Quits: sobkas (~sobkas@95.175.17.217) (Remote host closed the connection)
[01:46:47] <ApostleInTriumph> i see. that's the issue. I had a "trimesh.Trimesh" object. when i got rid of it with np.ndarray, it's much faster
[01:47:02] *** Joins: sobkas (~sobkas@95.175.17.217)
[01:47:50] <parv> ApostleInTriumph, How does using specfically Ubuntu help you?
[01:48:40] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[01:48:50] *** Joins: Pickchea (~private@user/pickchea)
[01:48:57] <ApostleInTriumph> parv because pickleability isn't a concern?
[01:49:18] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[01:49:40] <parv> ApostleInTriumph, Do you mean pickle does not work on other systems beside Ubuntu?
[01:49:50] <ApostleInTriumph> read above parv
[01:50:02] *** Joins: noria (~noria@gateway/tor-sasl/noria)
[01:50:08] <parv> ApostleInTriumph, Nevermind then
[01:50:42] *** Quits: xaltsc (~xaltsc@user/xaltsc) (Read error: Connection reset by peer)
[01:50:59] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[01:51:00] *** Quits: flower__ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[01:51:24] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[01:51:28] *** Joins: xa0s (~xa0s@mab.sdf.org)
[01:51:48] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[01:51:59] *** Joins: nesoi (~Adium@60-241-111-113.static.tpgi.com.au)
[01:52:05] *** Joins: Lindrian (~Lindrian@about/regex/lindrian)
[01:52:13] *** Parts: Lindrian (~Lindrian@about/regex/lindrian) ()
[01:52:17] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[01:52:24] *** Quits: zrsm (~mrrobot@173.171.254.123) (Quit: My damn controlling terminal disappeared!)
[01:52:31] *** Joins: jmd (~user@de.cellform.com)
[01:53:36] *** Quits: jamiejackson (~jamiejack@131.106.140.145) (Quit: Connection closed)
[01:55:01] <mefistofeles> hey, is there a pythonic way of not serializing/deserializing some attributes of an object when serializing/deserializing that object? I know one could just manually say that if there's some key or something like that in __dict__ to ignore it or drop it, but I was thinking of a more idiomatic way, if there's one
[01:55:17] <nedbat> mefistofeles: it depends on how you are serializing
[01:55:41] <SnoopJ> mefistofeles, if you're using `json`, you can define your own JSONEncoder, but as nedbat says, it depends
[01:56:24] <phy1729> Would really be nice to have a __json__ that the stdlib consults
[01:57:01] *** Quits: shad (~shad@user/shad) (Ping timeout: 250 seconds)
[01:57:11] *** Quits: dreamon (~dreamon@pd9503f46.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[01:57:56] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[01:58:01] <mefistofeles> nedbat: SnoopJ: phy1729: I'm serializing in some ugly netcdf4 file
[01:58:10] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[01:58:16] <mefistofeles> but let me check more details (it's not my code)
[01:59:31] *** Quits: sobkas (~sobkas@95.175.17.217) (Remote host closed the connection)
[01:59:56] *** Joins: sobkas (~sobkas@95.175.17.217)
[02:02:07] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:02:27] *** Quits: noria (~noria@gateway/tor-sasl/noria) (Quit: Leaving)
[02:04:25] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[02:04:55] *** Joins: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[02:06:06] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 252 seconds)
[02:07:08] *** Joins: Pickchea (~private@user/pickchea)
[02:07:15] *** Quits: linux_dream (~isaac@37.166.60.114) (Quit: WeeChat 3.4.1)
[02:08:50] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[02:09:13] *** Joins: sobkas (~sobkas@95.175.17.217)
[02:10:15] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 260 seconds)
[02:11:07] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[02:11:20] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[02:13:04] *** Quits: Zeturic (~Orimendix@50.26.218.162) (Quit: Leaving)
[02:13:15] *** Quits: MasterK (~MK@86.121.240.25) (Remote host closed the connection)
[02:15:06] *** Quits: cosimone (~user@93-44-187-176.ip98.fastwebnet.it) (Read error: Connection reset by peer)
[02:15:45] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[02:15:57] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[02:18:17] *** Joins: mug3n_ (~mugen@gateway/tor-sasl/mugen)
[02:19:46] *** Quits: grooverman__ (~grooverma@152.250.164.233) (Remote host closed the connection)
[02:20:32] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 260 seconds)
[02:20:35] *** Quits: mug3n (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 240 seconds)
[02:20:54] *** Joins: grooverman (~grooverma@189.110.77.226)
[02:20:57] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[02:21:52] *** Quits: phylaz (~phylaz@82.51-174-55.customer.lyse.net) (Quit: The Lounge - https://thelounge.chat)
[02:22:54] *** iflema_ is now known as iflema
[02:24:14] *** Quits: FreeBDSM (~FreeBDSM@user/freebdsm) (Quit: Leaving)
[02:27:14] *** Joins: dclxvi (~dclxvi@2a02:8084:84:4100:35db:4e82:4d73:d6b1)
[02:28:49] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[02:28:56] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[02:29:46] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[02:31:03] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[02:31:15] *** Quits: vaaqif (~vaaqif@cpc151159-smal19-2-0-cust83.19-1.cable.virginm.net) (Ping timeout: 260 seconds)
[02:32:01] *** Quits: paul424 (~tom@ip-5-172-233-166.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[02:32:10] *** Quits: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net) (Ping timeout: 272 seconds)
[02:32:34] *** Quits: botfather (~botfather@shell1.dds.nl) (Quit: -)
[02:33:12] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[02:33:33] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[02:35:03] *** Joins: botfather (~botfather@shell1.dds.nl)
[02:36:47] *** Joins: jpn (~jpn@user/jpn)
[02:38:15] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 260 seconds)
[02:38:19] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[02:38:29] *** Quits: Melon_Bread3 (~Melon_Bre@li958-238.members.linode.com) (Quit: The Lounge - https://thelounge.chat)
[02:39:30] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:39:50] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[02:40:12] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[02:40:24] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[02:40:49] *** Quits: withered_dragon (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Remote host closed the connection)
[02:41:30] *** Quits: jpn (~jpn@user/jpn) (Client Quit)
[02:41:33] *** Joins: Melon_Bread3 (~Melon_Bre@li958-238.members.linode.com)
[02:42:21] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[02:42:38] *** Quits: greedom (~greedom@p200300de67129700fcb07913b27e4da4.dip0.t-ipconnect.de) (Remote host closed the connection)
[02:42:57] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.4)
[02:43:15] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[02:44:18] *** Joins: unyu (~pyon@user/pyon)
[02:45:34] *** Joins: vaaqif (~vaaqif@cpc151159-smal19-2-0-cust83.19-1.cable.virginm.net)
[02:47:24] *** Joins: ThanatosJ (~Thanatos@105.112.189.65)
[02:48:20] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[02:49:44] *** Quits: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr) (Quit: Client closed)
[02:49:59] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[02:50:10] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[02:51:39] *** Joins: bitkiller (~bitkiller@user/bitkiller)
[02:52:18] *** Quits: dclxvi (~dclxvi@2a02:8084:84:4100:35db:4e82:4d73:d6b1) (Ping timeout: 252 seconds)
[02:54:55] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[02:55:58] *** Quits: ThanatosJ (~Thanatos@105.112.189.65) (Read error: Connection reset by peer)
[02:56:15] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[02:56:35] *** Quits: vakera_pingveno (~dan@2600:1700:21f9:b150::40) (Quit: Konversation terminated!)
[02:56:42] *** Joins: kristijonas (~kristijon@cl-78-158-23-234.fastlink.lt)
[02:56:47] *** Joins: ThanatosJ (~Thanatos@197.210.8.60)
[02:57:54] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Remote host closed the connection)
[02:58:19] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[02:58:35] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[02:59:30] *** Joins: dclxvi (~dclxvi@2a02:8084:84:4100:ad07:9cc3:fb3b:5d84)
[03:00:16] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[03:03:37] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:04:17] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[03:04:17] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[03:04:18] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[03:04:33] *** Joins: bindu (~bindu@user/bindu)
[03:04:44] *** Joins: tejr (~tejr@user/tejr)
[03:06:17] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[03:06:23] <AhmedAmerican> May someone has a clue for that particular site https://stackoverflow.com/q/71593467
[03:06:33] *** Quits: ivii (~ivan@user/ivii) (Read error: Connection reset by peer)
[03:06:46] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[03:06:47] *** Joins: ivii (~ivan@user/ivii)
[03:06:51] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:efcc:cbb3:7f2a:6dff)
[03:08:16] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 272 seconds)
[03:08:36] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[03:09:14] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[03:09:27] *** Joins: pycurious (~Adium@user/pycurious)
[03:09:30] <pycurious> Anyone knows how to fix this in Ubuntu 20.04LTS-> python3 -m pip freeze -> /usr/lib/python3/dist-packages/secretstorage/dhcrypto.py:15: CryptographyDeprecationWarning: int_from_bytes is deprecated, use int.from_bytes instead.   from cryptography.utils import int_from_bytes
[03:09:31] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[03:09:31] *** Joins: bambams (~bambams@user/bambams)
[03:10:16] *** Quits: bambams (~bambams@user/bambams) (Client Quit)
[03:10:22] *** Joins: inert (~inert@98.186.198.230)
[03:10:32] *** Joins: bambams (~bambams@user/bambams)
[03:11:41] *** Roey is now known as TheWeepingRabbit
[03:11:51] *** TheWeepingRabbit is now known as Roey
[03:14:11] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[03:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:15:15] <parv> pycurious, That looks like a non0-fatal warning. Short of upgrading the associated software, you could mute them via "warnings" module via filter : https://docs.python.org/3.10/library/warnings.html#temporarily-suppressing-warnings
[03:15:26] <parv> s/non0/non/
[03:15:48] *** Quits: mathe8989 (~wellmathe@dhcp-138-246-3-71.dynamic.eduroam.mwn.de) (Ping timeout: 240 seconds)
[03:15:55] *** Quits: wereii (~wereii@2a03:3b40:fe:4f::1) (Quit: ZNC - https://znc.in)
[03:16:00] <parv> pycurious, Existing software will continue to work while spewing the warning message
[03:16:23] *** Joins: dthpulse (~quassel@podciarou.sk)
[03:16:30] *** Quits: dclxvi (~dclxvi@2a02:8084:84:4100:ad07:9cc3:fb3b:5d84) (Ping timeout: 252 seconds)
[03:17:05] <SnoopJ> it's been fixed in the library, but Ubuntu's copy of it is old: https://github.com/mitya57/secretstorage/commit/ad7c45e493fff48f897487d6aff63f4fff021d31
[03:17:23] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[03:17:38] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[03:17:50] <parv> pycurious, In case of pip use, you could just live with it until software update. (I wonder if there is a global option/configuration to mute deprecation warning in general ...)
[03:17:58] *** Joins: fling_ (~fling@user/fling)
[03:18:25] <SnoopJ> pycurious, you can probably do `python3 -m pip install --user "secretstorage>=3.3.1"` to install a more recent copy over top of the system copy
[03:18:45] *** Roey is now known as TheTweetingRabbi
[03:18:55] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[03:18:56] *** TheTweetingRabbi is now known as TheTweetingRabbt
[03:19:11] *** TheTweetingRabbt is now known as Roey
[03:19:12] *** Joins: inert18 (~inert@98.186.198.230)
[03:19:13] *** Quits: inert18 (~inert@98.186.198.230) (Client Quit)
[03:19:20] *** Joins: inert25 (~inert@98.186.198.230)
[03:19:28] *** Quits: inert25 (~inert@98.186.198.230) (Client Quit)
[03:19:40] *** Joins: thiras (~thiras@user/thiras)
[03:19:43] *** Joins: wereii (~wereii@37.205.14.89)
[03:19:46] *** Joins: beyondhatch (~beyondhat@98.186.198.230)
[03:21:10] <SnoopJ> looks like it's up to date in 21.10 and 22.04
[03:21:39] *** Quits: qlixed (~qlixed@186.18.40.52) (Ping timeout: 260 seconds)
[03:22:15] *** Quits: inert (~inert@98.186.198.230) (Ping timeout: 256 seconds)
[03:24:07] *** Quits: NeoCore (~neocore@139.28.219.229) (Quit: Leaving)
[03:24:07] *** fling_ is now known as fling
[03:24:58] *** Quits: parv (~quass@user/parv) (Quit: parv)
[03:25:45] *** Quits: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:30ce:2414:18b0:d4d2) (Quit: Textual IRC Client: www.textualapp.com)
[03:26:34] *** Joins: grabbathehut (~grabbathe@user/grabbathehut)
[03:27:07] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[03:27:16] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[03:27:18] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[03:27:45] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[03:28:04] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[03:29:06] *** Quits: ckdCreations (~ckdCreati@147.55.130.38) (Read error: Connection reset by peer)
[03:29:23] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[03:30:27] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:31:32] *** Quits: upsala (~zcb@185.209.196.134) (Quit: WeeChat 3.4.1)
[03:32:38] *** Joins: upsala (~zcb@185.209.196.134)
[03:33:03] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[03:33:21] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:9d53:477b:2e01:dce3) (Ping timeout: 256 seconds)
[03:33:39] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:a123:54c0:358b:30bb) (Ping timeout: 250 seconds)
[03:33:48] *** Quits: twiclo1 (~twiclo@2604:7b80:2000:1069:52fc:cedd:fbeb:10c) (Ping timeout: 240 seconds)
[03:33:57] *** Joins: Shearer (~shearer@93-40-197-99.ip40.fastwebnet.it)
[03:34:15] *** Quits: upsala (~zcb@185.209.196.134) (Client Quit)
[03:35:13] *** Joins: upsala (~zcb@185.209.196.134)
[03:35:24] *** Quits: argument (~0ptions@user/argument) (Ping timeout: 240 seconds)
[03:35:33] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[03:37:55] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[03:39:11] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[03:39:37] *** Joins: ba (~ba@cpc1-hari17-2-0-cust27.20-2.cable.virginm.net)
[03:40:17] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:41:11] *** Joins: brookesy66 (~will@203.185.205.85)
[03:41:12] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[03:43:13] *** Quits: Shearer (~shearer@93-40-197-99.ip40.fastwebnet.it) (Ping timeout: 256 seconds)
[03:45:05] *** Joins: dclxvi (~dclxvi@2a02:8084:84:4100:7999:cf24:ad41:f93f)
[03:46:27] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[03:47:11] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[03:48:06] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[03:49:46] *** Quits: Iolo (~iolo@user/Iolo) (Quit: Leaving)
[03:51:15] *** Joins: Barones (~Barones@user/Barones)
[03:52:22] *** Quits: Cyp (~cyp@213.237.85.100) (Excess Flood)
[03:52:51] *** Joins: Pandadub (~Barones@user/Barones)
[03:53:08] *** Joins: flower__ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[03:53:16] *** Joins: Cyp (~cyp@213.237.85.100)
[03:54:19] *** Quits: bitkiller (~bitkiller@user/bitkiller) (Ping timeout: 260 seconds)
[03:55:33] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 252 seconds)
[03:55:59] *** Quits: src (~src@user/src) (Quit: leaving)
[03:56:05] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[03:56:15] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 256 seconds)
[03:56:24] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[03:56:36] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 245 seconds)
[03:56:55] *** Joins: cosimone (~user@93-44-187-176.ip98.fastwebnet.it)
[03:57:13] *** Joins: shabius (~shabius@2a0e:1c80:2::131)
[03:58:08] *** Quits: dclxvi (~dclxvi@2a02:8084:84:4100:7999:cf24:ad41:f93f) (Quit: dclxvi)
[03:58:28] *** Quits: shabius (~shabius@2a0e:1c80:2::131) (Client Quit)
[03:59:42] *** Joins: iflema (~ian@user/iflema)
[04:00:23] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[04:01:25] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[04:01:27] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[04:02:15] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 260 seconds)
[04:02:39] *** Joins: a1eaiactaest (~a1eaiacta@user/a1eaiactaest)
[04:02:59] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[04:03:15] *** Joins: phylaz (~phylaz@82.51-174-55.customer.lyse.net)
[04:03:55] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[04:05:11] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[04:05:53] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 256 seconds)
[04:06:24] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[04:08:12] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[04:08:45] *** Quits: a1eaiactaest (~a1eaiacta@user/a1eaiactaest) (Ping timeout: 252 seconds)
[04:11:55] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[04:13:55] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 260 seconds)
[04:14:08] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[04:14:12] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[04:15:01] *** Quits: dsrt^ (~dsrt@96-67-120-105-static.hfc.comcastbusiness.net) (Ping timeout: 240 seconds)
[04:15:10] *** Joins: a1eaiactaest (~a1eaiacta@user/a1eaiactaest)
[04:15:22] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[04:15:23] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[04:15:35] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[04:15:57] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[04:16:37] *** Joins: Everything (~Everythin@37.115.210.35)
[04:18:06] *** Quits: hicham (~hicham@2a01:e34:ee18:a4d0:c1a0:b8ed:ab8a:57de) (Ping timeout: 252 seconds)
[04:18:19] *** Joins: mharig (~mharig@181.188.143.3)
[04:19:31] *** Quits: a1eaiactaest (~a1eaiacta@user/a1eaiactaest) (Ping timeout: 260 seconds)
[04:19:35] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 240 seconds)
[04:19:45] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[04:19:46] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[04:20:21] *** Joins: hicham (~hicham@2a01:e34:ee18:a4d0:c1a0:b8ed:ab8a:57de)
[04:20:39] *** Parts: Imk0tter (~Imk0tter@221.sub-174-204-129.myvzw.com) ()
[04:20:39] *** Joins: Imk0tter (~Imk0tter@221.sub-174-204-129.myvzw.com)
[04:22:32] *** Quits: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9) (Quit: Leaving)
[04:23:27] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[04:23:27] *** Quits: beyondhatch (~beyondhat@98.186.198.230) (Ping timeout: 256 seconds)
[04:23:38] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[04:23:38] *** Quits: flower__ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 272 seconds)
[04:23:57] *** Joins: hicham_ (~hicham@cug31-4-78-225-138-77.fbx.proxad.net)
[04:24:01] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[04:24:16] *** Quits: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 272 seconds)
[04:24:22] <Imk0tter> https://bpa.st/3QTA @ how come ther "Render Thread Stopped!" code is never executed?
[04:25:18] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[04:26:21] *** Quits: hicham (~hicham@2a01:e34:ee18:a4d0:c1a0:b8ed:ab8a:57de) (Ping timeout: 252 seconds)
[04:27:15] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[04:28:22] *** Quits: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[04:29:25] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[04:30:12] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[04:30:24] *** Joins: funhouse (~funhouse@user/funhouse)
[04:30:48] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[04:31:03] *** Quits: mharig (~mharig@181.188.143.3) (Quit: WeeChat 3.4.1)
[04:31:39] *** Quits: ThanatosJ (~Thanatos@197.210.8.60) (Ping timeout: 260 seconds)
[04:32:55] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[04:34:20] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Remote host closed the connection)
[04:34:44] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[04:34:48] *** Quits: zeenk (~zeenk@2a02:2f04:a110:7d00:2011:cfed:bad7:3c94) (Quit: Konversation terminated!)
[04:35:02] *** Joins: korg815 (~korg815@user/korg815)
[04:36:53] *** Joins: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp)
[04:37:21] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[04:37:31] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[04:37:33] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[04:38:05] *** Quits: upsala (~zcb@185.209.196.134) (Quit: WeeChat 3.4.1)
[04:38:25] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[04:39:13] *** Joins: upsala (~zcb@185.209.196.134)
[04:39:33] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 252 seconds)
[04:40:57] *** Joins: dsrt^ (~dsrt@96-67-120-105-static.hfc.comcastbusiness.net)
[04:43:31] *** Joins: qlixed (~qlixed@181.44.129.13)
[04:43:31] <twb> Imk0tter: stdout is buffered
[04:43:33] *** Quits: qlixed (~qlixed@181.44.129.13) (Remote host closed the connection)
[04:43:37] <twb> Imk0tter: print('...', flush=True)
[04:43:54] <twb> Imk0tter: or logging.warning() perhaps
[04:44:15] *** Quits: rje (~textual@65.141.156.170) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:44:29] <twb> Note: unlike normal languages, python3 also buffers stderr by default :/
[04:44:32] *** Quits: hicham_ (~hicham@cug31-4-78-225-138-77.fbx.proxad.net) (Ping timeout: 272 seconds)
[04:45:14] *** Quits: cp- (~cp-@b157153.ppp.asahi-net.or.jp) (Quit: Disappeared in a puff of smoke)
[04:46:04] *** Joins: cp- (~cp-@b157153.ppp.asahi-net.or.jp)
[04:50:02] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[04:50:15] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[04:50:25] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[04:51:00] *** Quits: upsala (~zcb@185.209.196.134) (Quit: WeeChat 3.4.1)
[04:51:31] *** Joins: a1eaiactaest (~a1eaiacta@user/a1eaiactaest)
[04:52:21] *** Quits: vaaqif (~vaaqif@cpc151159-smal19-2-0-cust83.19-1.cable.virginm.net) (Quit: WeeChat 3.4.1)
[04:53:06] *** Joins: econdudeawesome (~shadowfax@cpe-76-187-70-50.tx.res.rr.com)
[04:55:23] *** riz is now known as BillyZane
[04:55:29] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:55:32] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[04:56:16] *** Joins: ham5urg (~ham5urg@p200300d1673e42004e93c9c595da430f.dip0.t-ipconnect.de)
[04:56:34] *** Quits: a1eaiactaest (~a1eaiacta@user/a1eaiactaest) (Ping timeout: 272 seconds)
[04:59:41] <Imk0tter> twb: how do you properly terminate a thread from the main thread?
[05:00:00] <twb> no idea
[05:01:35] <twb> Imk0tter: if you're referring to "import threading", it seems like this isn't possible.  Since these are green threads (not pre-emptible), I guess that makes sense.
[05:01:46] <nedbat> Imk0tter: you can't terminate a thread from the outside
[05:02:39] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[05:03:05] *** Quits: mud (~mud@user/kadoban) (Quit: quit)
[05:03:20] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[05:04:04] *** Joins: hicham_ (~hicham@2a01:e34:ee18:a4d0:c43:a177:4652:e871)
[05:04:51] *** Quits: TheCat (~TheCat@user/z-cat) (Ping timeout: 250 seconds)
[05:04:58] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[05:05:09] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 256 seconds)
[05:05:42] *** Joins: a1eaiactaest (~a1eaiacta@user/a1eaiactaest)
[05:05:49] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[05:06:08] *** Joins: Croves (~Croves@200.52.31.43)
[05:07:37] *** Joins: twiclo1 (~twiclo@172.58.38.232)
[05:08:53] *** Joins: chenqisu1 (~chenqisu1@183.217.201.88)
[05:08:58] *** Quits: Croves (~Croves@200.52.31.43) (Client Quit)
[05:09:21] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 256 seconds)
[05:10:30] *** Quits: a1eaiactaest (~a1eaiacta@user/a1eaiactaest) (Ping timeout: 272 seconds)
[05:10:38] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[05:10:39] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[05:12:20] *** Joins: pycurious (~Adium@user/pycurious)
[05:13:12] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[05:13:14] *** Quits: yates (~user@fv-nc-f7af8b91e1-234237-1.tingfiber.com) (Quit: rcirc on GNU Emacs 25.2.2)
[05:13:53] *** Quits: twiclo1 (~twiclo@172.58.38.232) (Ping timeout: 256 seconds)
[05:17:08] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[05:17:31] *** Quits: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[05:17:37] *** Joins: XV9 (~XV8@2601:5cb:c001:50::4a2c)
[05:18:32] *** Quits: Pandadub (~Barones@user/Barones) (Remote host closed the connection)
[05:18:50] *** Joins: Pandadub (~Barones@user/Barones)
[05:19:49] *** Quits: luva (~luva@146.70.62.252) (Ping timeout: 250 seconds)
[05:20:00] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[05:20:47] *** Quits: llh (~UPP@user/llh) (Quit: :::: ( UPP ) ::::)
[05:21:11] *** Quits: XV8 (~XV8@2601:5cb:c001:50:eda7:4ec1:7fba:b4ce) (Ping timeout: 245 seconds)
[05:21:15] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[05:21:20] *** Quits: zmotaj (~zmotaj@user/zmotaj) (Ping timeout: 252 seconds)
[05:21:25] *** Joins: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br)
[05:21:26] *** Quits: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br) (Client Quit)
[05:22:18] *** Joins: a1eaiactaest (~a1eaiacta@user/a1eaiactaest)
[05:22:48] *** Joins: Linux77 (~L30n4rd0@189-48-140-124.user3p.veloxzone.com.br)
[05:24:39] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[05:25:44] *** Joins: rje (~textual@50.35.241.164)
[05:26:30] *** Joins: Wulf (~Wulf@user/wulf)
[05:26:55] *** Quits: a1eaiactaest (~a1eaiacta@user/a1eaiactaest) (Ping timeout: 256 seconds)
[05:27:19] *** Joins: d3sync (~d3sync@212.251.16.252.dsl.dyn.forthnet.gr)
[05:29:56] *** Quits: d3sync- (~d3sync@212.251.16.252.dsl.dyn.forthnet.gr) (Ping timeout: 245 seconds)
[05:30:52] *** Joins: zmotaj (~zmotaj@user/zmotaj)
[05:30:54] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[05:30:57] *** Quits: MJ (~mjpieters@zopatista.plus.com) (Ping timeout: 240 seconds)
[05:31:22] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:9d53:477b:2e01:dce3)
[05:31:23] *** Joins: MJ (~mjpieters@zopatista.plus.com)
[05:31:25] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[05:31:47] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[05:33:51] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[05:34:03] *** Joins: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com)
[05:34:17] *** Joins: epony (epony@user/epony)
[05:34:28] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[05:34:43] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[05:35:12] *** Quits: dsrt^ (~dsrt@96-67-120-105-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[05:38:15] *** Quits: kts (~kts@103.73.237.196) (Ping timeout: 256 seconds)
[05:39:10] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:38ed:fe77:bdd1:d85e)
[05:40:13] <stewie925> hello guys, thanks for your help yesterday I was able to use pandas chunksize in reading my huge table
[05:40:32] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 240 seconds)
[05:40:41] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[05:40:53] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[05:41:00] <stewie925> now my question is - for every data chunk read from pandas.read_sql_query, how do I save those chunks into another dataframe
[05:41:23] *** Parts: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (404)
[05:42:20] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[05:42:50] <stewie925> oh I guess just declare a new dataframe like 'df_new = pd.DataFrame()
[05:43:15] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[05:44:21] *** Joins: LiTHiuM (~Imk0tter@172.58.228.36)
[05:45:00] *** Joins: HaMsTeRs (~Thunderbi@210.3.201.132)
[05:45:00] *** Parts: Everything (~Everythin@37.115.210.35) ()
[05:46:11] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[05:46:15] *** Quits: Imk0tter (~Imk0tter@221.sub-174-204-129.myvzw.com) (Killed (NickServ (GHOST command used by LiTHiuM!~Imk0tter@172.58.228.36)))
[05:46:17] *** LiTHiuM is now known as Imk0tter
[05:46:56] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[05:47:10] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[05:48:05] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[05:51:04] *** Joins: humanBird (~humanBird@2603-8001-7000-3642-b450-9897-7446-10b7.res6.spectrum.com)
[05:51:19] *** Joins: a1eaiactaest (~a1eaiacta@user/a1eaiactaest)
[05:52:02] *** Quits: akk (~akk@75-161-61-130.albq.qwest.net) (Quit: +++)
[05:53:15] *** Quits: frannk (~frannk@186.249.21.18) (Quit: leaving)
[05:53:16] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:38ed:fe77:bdd1:d85e) (Quit: Client closed)
[05:53:38] *** Quits: hicham_ (~hicham@2a01:e34:ee18:a4d0:c43:a177:4652:e871) (Remote host closed the connection)
[05:53:42] *** Joins: pedahzur (~jkugler@216-67-98-32.static.acsalaska.net)
[05:54:08] *** Joins: mwichmann (~mats@209-188-119-117.taosnet.com)
[05:56:36] *** Joins: meissa (~meissa@pool-108-5-60-161.nwrknj.fios.verizon.net)
[05:56:57] *** Quits: a1eaiactaest (~a1eaiacta@user/a1eaiactaest) (Ping timeout: 256 seconds)
[05:57:09] <pedahzur> OK. This one is stumping me. I'm trying to run a Flask app via mod_wsgi on Apache2. I have Flask installed in /home/user/.local/lib/python3.6/site-packages. I have the Python3 mod_wsgi package installed. The user site-packages shows up in sys.path both when I do python3 from the command line and print(sys.path) in the .wsgi file I'm passing to mod_wsgi. However, it's telling me "No module named 'flask'" but on the command line (python3)
[05:57:11] <pedahzur>  "from Flask import flask" works.  As far as I can tell, I have all the paths needed in sys.path.
[05:57:48] *** Quits: fluiD (~fluiD@161.97.236.182) (Quit: Leaving)
[05:58:00] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:38ed:fe77:bdd1:d85e)
[05:58:33] <meissa> How would I version a change to a keyword function parameter in an imported package? Exception? Check module.__version__? Monkey patch in setup.py?
[05:59:13] *** Quits: remote (~self@user/hackers) (Ping timeout: 256 seconds)
[05:59:58] <grym> meissa: have tests
[06:00:50] *** Joins: remote (~self@user/hackers)
[06:01:11] <meissa> Grym: how do the tests help me decide which parameter name to use?
[06:01:24] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-2420-4733-60a5-9d17.res6.spectrum.com) (Ping timeout: 240 seconds)
[06:01:30] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[06:02:54] <grym> meissa: perhaps i'm misunderstanding
[06:03:03] *** Joins: Octarine (~Octarine@p0597515-vcngn.tkyo.nt.ngn.ppp.ocn.ne.jp)
[06:03:14] *** Joins: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is)
[06:03:43] <grym> meissa: but if you're about to change your API, you typically state that in release notes
[06:04:40] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-0874-3206-ce5b-fa50.res6.spectrum.com)
[06:04:54] <hrob> o/    I have a function decorated by a decorator, lol.... but Im wondering once I have decorated a foo() ... if I can get a handle on the "undecorated" foo?
[06:05:04] <nedbat> meissa: if i understand your question, you have a third-party package which is changing their API?
[06:05:04] *** Joins: FlipFlop (~FlipFlop@user/fl1pfl0p)
[06:05:05] <twb> Any idea why I see "could not allocate closure" https://sources.debian.org/src/gobject-introspection/1.72.0-1/girepository/girffi.c/?hl=386#L386
[06:05:07] <meissa> grym: one of my imported modules, outside my codebase, has an upcoming API change to the name of a function parameter. I'm wondering how i should keep my code working with the versions of this module before and after the change
[06:05:16] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-0874-3206-ce5b-fa50.res6.spectrum.com) (Remote host closed the connection)
[06:05:19] <twb> ...from a python3/gtk3 app, once I start hardening it in systemd?
[06:05:27] <nedbat> hrob: you can't get the undecorated function, unless the decorator makes it available to you
[06:05:29] <meissa> nedbat: ^^ yes
[06:05:36] <hrob> i.e.  after decorating.... foo,   and I then do ...  handle_on_foo = foo   ... I get the decorated foo
[06:05:41] <hrob> nedbat  ahh ok
[06:05:42] <hrob> thanks
[06:05:46] <pedahzur> Ah, I think I found the issue. mod_wsgi wasn't running the script as the user I was expecting. That was an easy fix.
[06:05:49] <nedbat> meissa: you can check the __version__ of the package, if it provides it.
[06:05:58] <grym> or pin the dep below or above
[06:06:01] *** Quits: marcello42 (~mp@p5084bed4.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[06:06:04] <nedbat> hrob: can you say more about why you want the original function?
[06:06:24] <nedbat> meissa: it's unusual to need to support multiple versions of a dependencies
[06:06:38] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Quit: leaving)
[06:06:38] *** Joins: vlm (~vlm@user/vlm)
[06:07:22] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[06:07:46] <meissa> nedbat: right now the change is only in git. Should I fix the version number in the .toml file when the dependency hits pypi?
[06:08:01] *** Joins: NealRame (~a@89.187.163.193)
[06:08:07] <nedbat> meissa: if you can pin the version you'll install, that's the easiest way
[06:08:21] *** Joins: a1eaiactaest (~a1eaiacta@user/a1eaiactaest)
[06:08:23] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[06:08:54] <meissa> It's a fast moving library so I'll probably require a version >= pinned
[06:09:07] <hrob> nedbat ,  Im registering different functions into a dict of functions, mapping to some instructions of what to do if those functions are called.
[06:09:08] <nedbat> meissa: yup, that's fine
[06:09:14] <meissa> nedbat: thanks for the idea
[06:09:17] *** Joins: frannk (~frannk@186.249.21.18)
[06:09:25] <nedbat> hrob: sounds cool, why do you need the undecorated function?
[06:09:27] <hrob> nedbat  and yes, that function is a decorator itself on the functions lol
[06:09:58] *** Quits: frannk (~frannk@186.249.21.18) (Changing host)
[06:09:58] *** Joins: frannk (~frannk@user/frannk)
[06:10:07] *** Quits: HaMsTeRs (~Thunderbi@210.3.201.132) (Remote host closed the connection)
[06:10:19] *** Joins: HaMsTeRs (~Thunderbi@210.3.201.132)
[06:10:21] <hrob> nedbat my code looks longer than I like if I first define the function then somehow decorate it afterwards thats all
[06:10:23] <nedbat> hrob: sorry, which function is a decorator? Isnt the dict holding decorated functions?
[06:10:47] <hrob> nedbat  nah the dict is holding undecorated functions... but you say.... hm
[06:11:09] <hrob> damn ok you fixed it... me thinks
[06:11:17] <nedbat> hrob: do you sometimes want to call the undecorated one? And sometimes decorated?
[06:11:21] <nedbat> hrob: ok, cool I guess :)
[06:11:24] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[06:11:37] <hrob> nedbat  yeah kinda, actually sometimes decorated sometimes now... so far
[06:11:49] <hrob> there are relatives of that function that are not decorated...
[06:11:51] <hrob> but hm...
[06:12:07] <nedbat> hrob: are they all decorated with the same decorator?
[06:12:55] <hrob> ok, well...  thing is... to simplify forget about the other functions...  lets say I decorate foo()... then I register foo() into a dict.
[06:12:55] *** Quits: a1eaiactaest (~a1eaiacta@user/a1eaiactaest) (Ping timeout: 260 seconds)
[06:13:12] <hrob> the foo in the dict is a decorated foo()
[06:13:18] <hrob> not the original foo()
[06:13:23] *** Quits: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[06:13:59] <hrob> but... the decorator wants to check, hey am I dealing with this foo()... but unfortunately it gets a reference to itself... not the foo that is the argument to the decorator
[06:14:32] <hrob> the decorator Im writing wants to check   if the argument function is in the dict basically
[06:14:43] <hrob> and make some decisions on that
[06:15:02] <nedbat> hrob: the decorator is used on some functions that aren't in the dict?
[06:15:03] <hrob> while Im writing it sounds like Im doing something so stupid... I know
[06:15:26] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Quit: CodePoint struts into the sunset on the beach.)
[06:15:43] <hrob> nedbat  it takes different decisions based on which function is in the dict... the dict maps to some decisions to make
[06:16:12] <hrob> so its a kind of decorator, and registry of something to do if a function matches in the dict
[06:16:16] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[06:16:16] <hrob> else no-op
[06:16:25] <nedbat> hrob: what puts the functions in the dict?
[06:16:45] *** Quits: rootx74 (~root@108.61.89.107) (Changing host)
[06:16:45] *** Joins: rootx74 (~root@user/rootx74)
[06:17:01] <hrob> a   register_function(foo, {metadata of what to do})
[06:17:18] <hrob> called after the bloody function is defined lol
[06:17:23] <hrob> with its bloody decorator
[06:17:32] <hrob> I think Im being too hopeful here :)
[06:17:52] <nedbat> hrob: what else is the dict of functions used for?
[06:17:55] *** Quits: nesoi (~Adium@60-241-111-113.static.tpgi.com.au) (Quit: Leaving.)
[06:18:17] <hrob> but as you said... the decorated sugared function does not retain any info about what it decorated, right?
[06:18:18] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-0874-3206-ce5b-fa50.res6.spectrum.com)
[06:18:27] <hrob> so I cant get that when registering the decorated function
[06:18:47] <nedbat> hrob: if this is your own decorator, you can make the original available.
[06:19:00] <nedbat> hrob: but maybe you want to record information on the function itself?
[06:19:01] <hrob> nedbat    its basically a logger of  calls to different functions/endpoints in a web-service
[06:19:07] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[06:19:18] <nedbat> hrob: i would make register_function a decorator itself, so keep thing similar.
[06:19:19] <hrob> id rather like to re-use it
[06:19:23] *** Quits: joshisanonymous (~joshisano@2600:6c5a:457f:c4b5:b592:2856:39c5:889e) (Quit: Leaving)
[06:19:24] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-0874-3206-ce5b-fa50.res6.spectrum.com) (Read error: Connection reset by peer)
[06:19:48] *** rootx74 is now known as cryptobug
[06:20:03] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[06:20:30] <hrob> nedbat ah... hm...ok the options are... define the function, register it, then decorate it... or... make a decorator to register it
[06:20:35] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[06:20:44] <nedbat> hrob: you can use two decorators on a function.
[06:20:46] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-0874-3206-ce5b-fa50.res6.spectrum.com)
[06:20:47] <hrob> but the second option, means the registering is called on every foo call
[06:20:48] *** Quits: ba (~ba@cpc1-hari17-2-0-cust27.20-2.cable.virginm.net) (Ping timeout: 272 seconds)
[06:20:55] <hrob> nedbat yeah hm... ok
[06:21:03] <nedbat> hrob: no, the decorator only executes when the function is defined.
[06:21:13] <hrob> its rather cheap I guess... but beautiful code-length wise
[06:21:22] *** Quits: frannk (~frannk@user/frannk) (Quit: leaving)
[06:21:35] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[06:21:39] *** Joins: frannk (~frannk@user/frannk)
[06:21:49] *** Joins: hams (~hams@73.232.205.0)
[06:21:50] *** Quits: hams (~hams@73.232.205.0) (Changing host)
[06:21:50] *** Joins: hams (~hams@user/hams)
[06:21:56] <hrob> nedbat  ah... well... ehm...  ok lost... it only executes once?
[06:22:17] *** Joins: a1eaiactaest (~a1eaiacta@user/a1eaiactaest)
[06:22:18] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Quit: Client closed)
[06:22:36] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Quit: Leaving)
[06:22:49] <nedbat> hrob: the body of a decorator only runs when the function is defined.
[06:23:00] *** Joins: nesoi (~Adium@60-241-111-113.static.tpgi.com.au)
[06:23:15] <hrob> I mean if I put...   register(foo):  registry[foo] = ...       doesnt the registry thing execute every time?
[06:23:28] <nedbat> hrob: can you pastebin some real code we can look at?
[06:23:43] *** Quits: wac (~wac@user/wac) (Quit: Zzzz…)
[06:23:43] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[06:24:02] *** Quits: AM (~techman@82-203-164-27.bb.dnainternet.fi) (Ping timeout: 252 seconds)
[06:24:07] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[06:25:57] *** Joins: AM (~techman@87-94-110-12.bb.dnainternet.fi)
[06:27:08] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4.1)
[06:27:10] *** Joins: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com)
[06:27:21] <hrob> nedbat actually... you just solved this for me... was thinking about this wrong way
[06:27:43] <hrob> nedbat  what I need to do, is create a decorator with arguments... forget about registering shit
[06:28:00] *** Joins: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net)
[06:28:19] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[06:28:35] <hrob> I ned  @do_something_when_called(what_to_do)
[06:28:39] <hrob> *need
[06:29:19] <hrob> nedbat  this is kinda like rubberducking... to chat with you
[06:29:31] <nedbat> quack quack! any time
[06:29:41] <hrob> lol
[06:29:49] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[06:31:32] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[06:31:50] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[06:32:11] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 250 seconds)
[06:32:54] *** Quits: nomic (~nomic@185.217.117.249) (Quit: Leaving)
[06:34:58] *** Quits: meissa (~meissa@pool-108-5-60-161.nwrknj.fios.verizon.net) (Quit: Quit)
[06:36:21] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[06:37:36] *** Quits: Octarine (~Octarine@p0597515-vcngn.tkyo.nt.ngn.ppp.ocn.ne.jp) (Quit: Client closed)
[06:38:33] <k`> anyone awake?
[06:40:12] *** Quits: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net) (Read error: Connection reset by peer)
[06:40:16] *** Quits: humanBird (~humanBird@2603-8001-7000-3642-b450-9897-7446-10b7.res6.spectrum.com) (Quit: Client closed)
[06:40:24] *** Joins: pyever___ (~pyeveryth@64-18-153-56.starry-inc.net)
[06:44:22] *** Joins: astrocat (~astrocat@g-jb2-313-fw-dip-189-44.core.deakin.edu.au)
[06:44:37] <hrob> k` yup
[06:44:46] <k`> sup
[06:44:50] <k`> i'm trying to find a codepen but for python
[06:44:51] <randall> k`: Assuming the earth is round, probably always someone.
[06:44:52] <k`> so i can share code
[06:44:59] <k`> any ideas?
[06:45:00] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:38ed:fe77:bdd1:d85e) (Quit: Client closed)
[06:45:16] <hrob> what is a codepen?
[06:45:28] <k`> like jsfiddle?
[06:45:30] <hrob> i guess I could google it
[06:45:38] <hrob> ah
[06:46:09] <hrob> I guess it may be difficult to find that service,  but havent looked for it
[06:46:17] <k`> ah bummer
[06:46:19] *** Quits: HaMsTeRs (~Thunderbi@210.3.201.132) (Quit: HaMsTeRs)
[06:46:22] <k`> how do you guys share code then?
[06:46:23] <randall> k`: Something like jupyter notebook?
[06:46:26] <hrob> seeing that python doesnt execute in the browser.... js does
[06:46:28] <randall> k`: git?
[06:47:10] <hrob> k` one thing to share code... another thing to execute it
[06:47:16] <hodapp> one can sorta do browser python with the help of pyodide
[06:47:17] <hrob> pastebin shares code
[06:47:20] *** Joins: nomic (~nomic@185.217.117.249)
[06:47:40] <BtbN> Both google and jetbrains have notebooks-as-a-service kinda things
[06:47:55] <k`> https://github.com/khobo/mp/blob/main/test.py
[06:47:55] *** Joins: AlanMD_ (~AlanMD@86.124.30.89)
[06:48:08] <hrob> k`  the channel intro says use https://bpa.st/+python
[06:48:12] <hrob> if sharing
[06:48:23] <hrob> but it wont execute I think
[06:48:34] <BtbN> And I think MyBinder can share a session as well?
[06:48:42] <k`> oo i like this
[06:48:44] <k`> https://bpa.st/GIVA
[06:49:07] <k`> if you scroll down to #kucoin API KLINE PARAMS
[06:49:12] <k`> you see the request
[06:49:13] <hrob> you did it... dont know if it executes... now I have to download it
[06:49:20] <k`> oh it definitely doesn't execute
[06:49:36] <k`> kucoin wants the start time as 0
[06:49:52] <k`> which calls the beginning of the chart history
[06:49:59] <k`> so i need some way to figure out what that number is...
[06:50:05] <k`> it's UTC time
[06:50:12] <k`> let me show you example real quick
[06:50:22] *** Joins: src (~src@user/src)
[06:50:27] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Ping timeout: 252 seconds)
[06:50:46] *** Quits: jaggz (~jaggz@user/jaggz) (Quit: I saith goodbye)
[06:50:47] <k`> https://api.kucoin.com/api/v1/market/candles?type=1min&symbol=BTC-USDT&startAt=0&endAt=1566789757
[06:50:48] <hrob> why so many people trying to code with bitcoins?
[06:51:00] <k`> lol someone asked me that exact same thing earlier
[06:51:07] <k`> ystd i think
[06:51:10] <k`> ive been going at this 2 days now
[06:51:22] <k`> im still learning and this seemed like a fun project with something that i was interested in
[06:51:26] <twb> hrob: for the same reason many people try to commit advanced fee fraud?
[06:51:35] *** Quits: frannk (~frannk@user/frannk) (Quit: leaving)
[06:51:40] <k`> yup same convo exactly going on
[06:51:44] <k`> ponzinomics
[06:51:48] *** Joins: frannk (~frannk@user/frannk)
[06:52:05] <k`> see how 0 in their system is actually
[06:52:10] <k`> 1566789720
[06:52:42] <hrob> well there are super cool un-tapped projects with weather... download the data from NOAA/NCEP  https://nomads.ncep.noaa.gov/    easier than bitcoin too
[06:52:53] <k`> ah okay thanks
[06:53:04] *** Quits: Pandadub (~Barones@user/Barones) (Remote host closed the connection)
[06:53:18] <k`> actually since kucoin's api reset
[06:53:21] *** Joins: Pandadub (~Barones@user/Barones)
[06:53:23] <k`> the farthest it goes back is 1566789720
[06:53:29] <k`> looks like all the coins list teh same number
[06:53:35] <nesoi> hrob:  what kind of un-tapped projects?
[06:53:48] <k`> damn python is really hard to get help with
[06:53:54] <k`> JS there's tons of community action
[06:54:31] <hrob> well if you like finance, like bitcoin or something... you can predict if corn or rice crops will fail this month... you can also predict if it will be hard to deliver them from Vietnam or China or other
[06:54:44] <hrob> thats just one of many
[06:55:04] <hrob> nobody is taking full advantage of this stuff
[06:55:23] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[06:55:30] <nesoi> hm interesting
[06:55:36] <twb> hrob: here in Australia we have "govhack" which basically puts webdevs, "people with interesting problems" and "governmnt people with cool datasets" in the same room for a weekend
[06:55:46] <hrob> 500 professors and programmers creating these forecasts, and 1 million weather stations and billions of dollars in weather satellites
[06:55:49] <twb> hrob: it's why e.g. every tree in melbourne now has its own email address
[06:56:20] <twb> And there's a slippy map for "what day do I put the bin out?"
[06:57:06] <twb> In terms of market prediction from open data for Evil Profits, probably ESRI is the place to hang out.
[06:57:06] <nesoi> wait, every tree has its own email address? What is that used for? And is it just street trees or also in parks or forest reserves?
[06:57:13] <k`> thanks for the help
[06:57:17] <k`> later guys
[06:57:28] <twb> nesoi: it was intended for reporting trouble tickets, but people started sending them poetry
[06:58:02] <hrob> k` but sorry... ehm  0 in that rest api?
[06:58:20] <nesoi> so mainly street trees I guess
[06:58:28] <nesoi> where could people read the poetry?
[06:58:43] <k`> yeah, but i realized that kucoins API got reset and every chart only goes far back as 1566789720
[06:58:46] <k`> so that makes my life easier
[06:58:56] <k`> so now i need to figure out how to do a response
[06:59:03] <k`> and then add 25 hours to 1566789720 and get another response
[06:59:07] <twb> nesoi: obviously it's the tree that reads it
[06:59:12] <k`> until int(time.time())
[06:59:25] <nesoi> heh but how did anyone know someone was sending poetry?
[06:59:35] <twb> the sysadmins noticed
[06:59:35] <hrob> k` Im confused, what is the API for, what is supposed to be at 0?
[06:59:54] <k`> i'm trying to get the OHLCV history of a pairing like ETH-USD
[07:00:08] *** Quits: mgedmin (~mg@user/mgedmin) (Quit: ZNC - http://znc.sourceforge.net)
[07:00:08] <k`> which a json dataset
[07:00:16] <k`> of highest price lowest price open close and volume
[07:00:25] <k`> i can only get 1500 responses so i have to paginate them
[07:00:37] <k`> but there's no paginate call so i have to fake it by adding 25 hours onto the time and requesting a call
[07:00:46] <twb> k`: ETH isn't in ISO 4217
[07:00:53] <k`> what is iso 4217
[07:01:05] <deltab> currency codes
[07:01:21] <k`> i'm looking for this specific exchange's history
[07:01:25] <deltab> first two letters are the country code, e.g. USD, GBP
[07:01:27] <k`> ah
[07:01:32] <k`> unsure why that matters?
[07:01:35] <deltab> ETH would be something Ethiopian
[07:01:47] <hrob> are you seeing a bug, with that large number... what are the numbers?  dollars?   its a list of list length 7 it seems
[07:01:49] <twb> k`: well you used "USD" which is an ISO 4217 code
[07:02:02] <k`> hey
[07:02:04] <k`> seriously
[07:02:13] <k`> are you guys trolling me?
[07:02:25] <k`> i'm like on day two of this and a little stressed about it
[07:02:28] <hrob> Im not trolling, serious, just not understanding
[07:02:31] <k`> kinda sucks
[07:02:33] <k`> ah
[07:02:42] <k`> ETH-USD is a pairing
[07:02:45] *** Joins: mgedmin (~mg@user/mgedmin)
[07:02:52] *** Joins: cyphase (~cyphase@user/cyphase)
[07:03:10] <k`> https://www.kucoin.com/trade/AVAX-USDT
[07:03:12] <k`> like this
[07:03:12] <hrob> spell out ETH,  I know what USD is
[07:03:17] <k`> ethereum
[07:03:27] *** Joins: cyphase_ (~cyphase@2600:1700:7800:4680:ad7b:92e1:e5e1:b310)
[07:03:28] *** Joins: makoto2600 (~makoto260@94.86-180-91.adsl-dyn.isp.belgacom.be)
[07:03:28] *** Joins: Xardas (~Xardas@149.233.51.127)
[07:04:35] <hrob> ahh, a coin
[07:04:39] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:04:49] *** Quits: makoto2600 (~makoto260@94.86-180-91.adsl-dyn.isp.belgacom.be) (Client Quit)
[07:04:50] <k`> right now my program does this
[07:04:51] <k`> https://imgur.com/Ni6kInI
[07:04:55] <k`> and saves to a CSV
[07:04:56] *** Quits: bomb-on (~bomb-on@user/bomb-on) (Quit: aллилѹіа!)
[07:05:00] <k`> but i can only get 1500 data points
[07:05:02] <k`> and i want the entire history
[07:05:18] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[07:05:19] <k`> so i have to loop the call incrementing the startdate by 25 hours each call
[07:05:21] <hrob> ah, you need to know the API docs... hm
[07:05:21] *** Quits: cyphase_ (~cyphase@2600:1700:7800:4680:ad7b:92e1:e5e1:b310) (Client Quit)
[07:05:29] <k`> the docs don't say much
[07:05:32] *** Quits: NealRame (~a@89.187.163.193) (Quit: Konversation terminated!)
[07:05:47] <k`> https://docs.kucoin.com/#get-klines
[07:05:51] <twb> I think it's actually Æther.  "Æthereum" is the protocol, not the proof-of-work token.
[07:05:58] <k`> fuck
[07:06:24] *** Quits: astrocat (~astrocat@g-jb2-313-fw-dip-189-44.core.deakin.edu.au) (Ping timeout: 252 seconds)
[07:06:53] <hrob> does python help?   ... Im looking at this and thinking this is backwards engineering
[07:07:13] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[07:07:18] <hrob> I often have such problems, ... but its hard when not documented
[07:07:25] <k`> oh my god
[07:07:40] <k`> where are you from hrob if you don't mind me asking?
[07:09:27] <hrob> whois will tell you Im on a server in iceland ;)   and thats where Im at
[07:09:34] <k`> ah very cool
[07:11:18] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[07:12:22] *** Parts: k` (~weechat@about/web/empty) (WeeChat 3.0)
[07:14:12] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:b1ca:bc59:ffb7:503b)
[07:15:12] <hrob> k` only thing I can suggest to reverse engineer these API calls is to find a website that actually talks to the api, and open the firefox->web-developer-tools->network   and actually look at the calls and responses to figure something like this out
[07:15:23] *** Joins: mud (~mud@user/kadoban)
[07:15:53] <hrob> has nothing to do with python though... :S
[07:16:21] *** Joins: ham5urg_ (~ham5urg@p5ddfcdab.dip0.t-ipconnect.de)
[07:16:28] <hrob> actually the #web  channel people like this stuff
[07:17:10] <twb> hrob: unless you use selenium maybe
[07:17:49] *** Quits: ham5urg (~ham5urg@p200300d1673e42004e93c9c595da430f.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[07:18:42] <hrob> twb, well yeah maybe some cool web dev/hacker tools like that
[07:19:04] <hrob> I like to develop APIs... and document them lol
[07:19:26] *** Joins: tijuco (~tijuco@user/tijuco)
[07:19:36] *** Joins: parv (~quass@user/parv)
[07:20:20] *** Joins: dsrt^ (~dsrt@96-67-120-105-static.hfc.comcastbusiness.net)
[07:20:31] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[07:22:04] *** Joins: MinusOne (~MinusOne@user/minusone)
[07:22:23] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:efcc:cbb3:7f2a:6dff) (Remote host closed the connection)
[07:24:36] <CrtxReavr> In my last job, I used python to write automated tests for RESTful APIs.
[07:24:52] <CrtxReavr> I learned to greatly appreciate well-documented APIs.
[07:27:37] *** Quits: a1eaiactaest (~a1eaiacta@user/a1eaiactaest) (Ping timeout: 256 seconds)
[07:28:48] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[07:30:35] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[07:30:41] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[07:31:49] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 268 seconds)
[07:33:37] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 256 seconds)
[07:34:37] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:9d53:477b:2e01:dce3) (Ping timeout: 240 seconds)
[07:35:00] *** Quits: johnkeats7 (~johnkeats@2804:14c:32:a0cc:dc10:74ee:ac7c:6d24) (Ping timeout: 252 seconds)
[07:35:13] *** Quits: ttree (~ttree0@c-24-17-16-242.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[07:35:43] *** Quits: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:2821:d42:df49:416) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[07:36:27] *** Quits: bloody (~bloody@user/bloody) (Quit: okluvyabubye)
[07:37:10] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[07:39:42] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[07:40:04] *** Quits: wolfdale8 (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Quit: The Lounge - https://thelounge.chat)
[07:40:06] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[07:40:13] *** Joins: a1eaiactaest (~a1eaiacta@user/a1eaiactaest)
[07:41:14] *** Quits: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com) (Ping timeout: 272 seconds)
[07:41:25] *** Joins: wolfdale8 (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[07:41:36] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 260 seconds)
[07:42:41] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[07:44:01] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Client Quit)
[07:45:02] *** Quits: a1eaiactaest (~a1eaiacta@user/a1eaiactaest) (Ping timeout: 272 seconds)
[07:45:11] *** Joins: hanzo (uid532183@user/hanzo)
[07:46:17] *** Quits: FlipFlop (~FlipFlop@user/fl1pfl0p) (Ping timeout: 240 seconds)
[07:46:46] *** Joins: LiTHiuM (~Imk0tter@172.58.228.36)
[07:47:03] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[07:47:59] *** Joins: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:c16a:d10f:7e0a:ddc4)
[07:48:41] *** Joins: adeliktas0 (~adeliktas@i59F4D979.versanet.de)
[07:49:05] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:49:50] *** Quits: Imk0tter (~Imk0tter@172.58.228.36) (Ping timeout: 252 seconds)
[07:49:57] *** Quits: adeliktas (~adeliktas@i59F4DBCA.versanet.de) (Ping timeout: 240 seconds)
[07:49:57] *** adeliktas0 is now known as adeliktas
[07:50:01] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Quit: kaiseisei)
[07:50:08] <dba> what sorting algorithm `list.sort()` uses, I tried looking at the source in `builtins.py` but there is only description of the funciton
[07:51:21] *** Quits: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is) (Quit: Client closed)
[07:52:07] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[07:52:10] *** Quits: src (~src@user/src) (Quit: leaving)
[07:52:25] <Peng> https://en.wikipedia.org/wiki/Timsort was invented for Python.
[07:52:46] <Peng> I don't know if it's evolved further
[07:52:56] <InPhase> https://github.com/python/cpython/blob/main/Objects/listsort.txt
[07:53:00] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:703e:83c:4ed1:bc6)
[07:53:03] <Peng> (And I imagine other Python implementations may use other sorting algorithms.)
[07:53:04] *** [_] is now known as [itchyjunk]
[07:53:35] <InPhase> That github page has algorithm and benchmarking info.
[07:54:58] *** Joins: matsaman (~matsaman@user/matsaman)
[07:55:12] *** Joins: EgonX_ (~EgonX@2601:2c6:47f:879e:553e:75de:3660:e0b8)
[07:57:40] *** Joins: a1eaiactaest (~a1eaiacta@user/a1eaiactaest)
[07:58:17] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:b1ca:bc59:ffb7:503b) (Ping timeout: 240 seconds)
[07:58:27] <Peng> https://github.com/python/cpython/pull/28108 :O
[07:59:19] *** Quits: cryptobug (~root@user/rootx74) (Quit: ZNC 1.8.2 - https://znc.in)
[07:59:28] *** Joins: rootx74 (~root@108.61.89.107)
[07:59:37] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[08:00:52] *** Quits: wolfdale8 (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Quit: The Lounge - https://thelounge.chat)
[08:01:03] *** Parts: rootx74 (~root@108.61.89.107) ()
[08:01:57] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[08:01:57] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[08:01:57] *** finn_elija is now known as FinnElija
[08:02:20] *** Joins: wolfdale8 (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[08:02:40] <twb> "it's fast and stable so show cares"
[08:02:47] <twb> er
[08:02:52] <twb> "it's fast and stable so who cares?"
[08:04:32] *** Quits: wolfdale8 (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Client Quit)
[08:04:39] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[08:05:00] *** Quits: Pandadub (~Barones@user/Barones) (Remote host closed the connection)
[08:05:15] *** Quits: tijuco (~tijuco@user/tijuco) (Ping timeout: 252 seconds)
[08:05:25] <twb> https://bugs.python.org/issue587076 appears to be the original ticket
[08:05:25] *** Joins: tijuco (~tijuco@user/tijuco)
[08:05:53] *** Joins: wolfdale8 (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[08:07:50] *** Quits: econdudeawesome (~shadowfax@cpe-76-187-70-50.tx.res.rr.com) (Ping timeout: 272 seconds)
[08:08:02] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[08:09:23] <twb> https://en.wikipedia.org/wiki/Sorting_algorithm#Comparison_of_algorithms suggests at a glance that block is better
[08:09:41] *** Joins: ATAD_ (~ATAD@user/atad)
[08:10:03] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Read error: Connection reset by peer)
[08:10:33] <dba> Peng: Actually I was looking for the code but that is really helpful
[08:10:58] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (Read error: Connection reset by peer)
[08:12:54] <dba> InPhase, twb, thanks that is some deep math in there :=D.
[08:12:54] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 272 seconds)
[08:13:24] *** Quits: ATAD (~ATAD@user/atad) (Ping timeout: 240 seconds)
[08:14:10] *** Quits: parv (~quass@user/parv) (Ping timeout: 272 seconds)
[08:14:40] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[08:15:13] <twb> The actual article for block (which I just bumbled through) says timsort can be better if your dataset is already partially sorted
[08:15:33] <dba> they say somethings better kept untold, I feel the same when I dig on stuff and see only math equations :)
[08:15:40] *** Quits: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net) (Quit: leaving)
[08:15:42] *** Joins: dunpeal (~dunpeal@2001:470:69fc:105::3e80)
[08:16:53] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Read error: Connection reset by peer)
[08:17:24] *** Joins: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net)
[08:17:31] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 260 seconds)
[08:17:36] <dba> Just from a high level view that algorithm work on all typs of lists, or just numbers?
[08:18:38] *** Parts: dunpeal (~dunpeal@2001:470:69fc:105::3e80) ()
[08:20:15] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[08:20:37] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[08:21:47] *** Joins: EdFletcher (~PKD@user/edfletcher)
[08:22:06] *** Joins: astrocat (~astrocat@128.184.189.44)
[08:22:34] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[08:22:58] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[08:23:52] *** Quits: EdFletcher (~PKD@user/edfletcher) (Remote host closed the connection)
[08:24:13] *** Quits: tijuco (~tijuco@user/tijuco) (Quit: Leaving)
[08:25:51] *** Quits: EgonX_ (~EgonX@2601:2c6:47f:879e:553e:75de:3660:e0b8) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:25:53] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[08:27:16] *** Joins: Babar_ (~Babar@116.102.90.66)
[08:27:16] *** Babar is now known as Guest5596
[08:27:16] *** Quits: Guest5596 (~Babar@171.226.225.22) (Killed (calcium.libera.chat (Nickname regained by services)))
[08:27:16] *** Babar_ is now known as Babar
[08:27:20] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[08:28:15] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 256 seconds)
[08:30:10] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[08:30:21] *** Joins: kdc (~kdc@196-210-1-81.dynamic.isadsl.co.za)
[08:30:25] <twb> dba: my (naive) reading is that it's good for anything in the ord type class (i.e. datatypes for which == < <= > >= are defined or derived)
[08:30:54] <twb> dba: if you only care about small integers, https://en.wikipedia.org/wiki/Sorting_algorithm#Non-comparison_sorts
[08:31:04] *** Quits: kdc (~kdc@196-210-1-81.dynamic.isadsl.co.za) (Max SendQ exceeded)
[08:31:05] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[08:31:32] *** Joins: kdc (~kdc@196-210-1-81.dynamic.isadsl.co.za)
[08:32:11] *** Joins: EdFletcher (~PKD@user/edfletcher)
[08:32:16] *** Joins: k` (~weechat@about/web/empty)
[08:32:30] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[08:33:43] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[08:34:17] <dba> twb, true I tried it out with mixed list and got this error `TypeError: '<' not supported between instances of 'int' and 'str'`
[08:34:56] *** Joins: beyondhatch (~beyondhat@98.186.198.230)
[08:34:57] *** Quits: sirsky (~sirsky@206-124-21-110.static.forethought.net) (Ping timeout: 252 seconds)
[08:35:15] *** Quits: beyondhatch (~beyondhat@98.186.198.230) (Client Quit)
[08:35:29] <twb> last week someone suggested working around that with key=lambda x: (str(type(x)), x)
[08:35:33] <twb> ...or thereabouts
[08:36:03] *** Joins: sirsky (~sirsky@206-124-21-110.static.forethought.net)
[08:36:39] <twb> You might also enjoy https://ridiculousfish.com/blog/posts/old-age-and-treachery.html
[08:38:36] *** Quits: KevinX (~KevinX@user/KevinX) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:39:41] <twb> Also e.g. https://git.savannah.gnu.org/cgit/grep.git/tree/NEWS#n182
[08:40:07] <dba> twb, Good reads. Thanks for sharing
[08:42:25] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[08:43:10] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[08:44:06] *** Joins: coolinnit (~coolinnit@2600:1700:3ec7:6ac0:b561:74ed:8541:827)
[08:45:37] *** Quits: SaltHillStroller (~SaltHillS@206.223.160.26) (Ping timeout: 240 seconds)
[08:46:37] <coolinnit> The documentation of site.py says that it sets the prefixes based on whether the OS is Debian/Windows/Mac/Linux. How does python sys module find out what flavor of Linux I'm running? The issue I'm facing is that I have a VM image and site.py is not appending python3.8/dist-packages and is only appending python3/dist-packages and that's not where
[08:46:38] <coolinnit> pip puts it
[08:46:42] *** Joins: white2 (~mahengrui@user/mahengrui1)
[08:46:47] *** Quits: noyb (~noyb@user/noyb) (Quit: leaving)
[08:46:59] *** Joins: Guest317 (~Guest317@88.103.7.38)
[08:47:33] <coolinnit> Basically, I want to know how does python sys module find out what flavor of Linux I'm running so I can set that in my VM's rootfs or in the kernel if it comes to that
[08:48:31] <Repiphany> coolinnit: `pip` is probably pointing to a different python than the one you're trying to use
[08:48:47] *** Quits: astrocat (~astrocat@128.184.189.44) (Ping timeout: 260 seconds)
[08:49:06] <Repiphany> It's better to use `python -m pip` (or python3.8 or whatever version you intend to use)
[08:49:47] <coolinnit> I tried that as well. It still appends only python3/dist-packages. Let me show you what's in site.py
[08:49:52] <twb> # this one is deprecated for Debian
[08:49:52] <twb> path = os.path.join(prefix, libdir, "python" + sys.version[:3], "dist-packages")
[08:49:57] <twb> Repiphany: ^ I'm guessing it's taht
[08:50:35] <coolinnit> https://pastebin.com/VfbvsZgv
[08:51:37] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[08:51:52] <twb> This also looks relevant: https://sources.debian.org/src/python3.9/3.9.2-1/debian/patches/sysconfig-debian-schemes.diff/
[08:51:58] <coolinnit> Let me print what sys.path I'm getting on my local machine vs my VM
[08:52:02] <coolinnit> Local:
[08:52:02] <coolinnit> sys.path = [
[08:52:03] <coolinnit>     '/usr/lib/python3.8',
[08:52:03] <coolinnit>     '/usr/lib/python38.zip',
[08:52:04] <coolinnit>     '/usr/lib/python3.8/lib-dynload',
[08:52:04] <coolinnit>     '/usr/local/lib/python3.8/dist-packages',
[08:52:04] *** litharge sets mode: +q $a:coolinnit
[08:52:35] *** litharge sets mode: -q $a:coolinnit
[08:52:46] <coolinnit> oops
[08:52:47] <Repiphany> You could also use a virtual environment instead
[08:52:49] <coolinnit> what happened
[08:53:20] <coolinnit> Repiphany unfortunately not an option. The VM is supposed to work as-is
[08:53:20] <twb> coolinnit: if you don't use a pastebin, the bot blocks your messages until you stop
[08:53:31] <coolinnit> Oh I see. Thanks! Good to know
[08:53:48] <Repiphany> pip shouldn't be installing in dist-packages in the first place
[08:54:31] *** Joins: funhouse (~funhouse@user/funhouse)
[08:54:33] <twb> I'd question whether you should be using pip at all
[08:54:34] <coolinnit> https://pastebin.com/yCznvFyM
[08:55:07] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[08:56:13] <coolinnit> I built the rootfs and kernel from scratch so I can add anything I want with it. I want it to act like Debian even though the kernel is generic
[08:56:32] <coolinnit> My guess is it's checking uname. But the problem is my kernel has a generic uname and just says Linux
[08:56:41] <twb> coolinnit: then go through all the patches Debian makes to Python so that Python integrates properly into Debian
[08:56:50] <twb> coolinnit: I already linked you to one
[08:56:53] <coolinnit> Good idea
[08:56:57] *** Quits: greknod (~grek@120.88.171.98) (Ping timeout: 252 seconds)
[08:57:16] <coolinnit> twb thanks that's a good lead
[08:57:20] <Repiphany> Debian does questionable things with its decisions around its package-manager python and interplay with pip
[08:57:55] <twb> Repiphany: well, yeah – if you're using Debian, you don't use pip
[08:58:06] <coolinnit> Ya I personally use conda or something like that for that reason. apt+pip installing python is a mess
[08:58:26] <twb> That's no different from "don't use apt AND cabal" or "don't use apt AND cpan"
[09:01:49] *** Quits: a1eaiactaest (~a1eaiacta@user/a1eaiactaest) (Ping timeout: 240 seconds)
[09:02:15] *** Joins: noyb (~noyb@user/noyb)
[09:03:23] <foo> We have a dev who loves to do this: https://gist.github.com/4d141e7b692469281d9092533cd65625 (2 lines of code) - I want to smack him, that can be done on 1 line. In the tiny chance anyone is a fan of that, ever, or if there is some VS Code thing here I don't understand, please let me know. (I've likely asked this before, I see it so much)
[09:03:50] *** Joins: cryptobug (~root@108.61.89.107)
[09:04:24] <twb> foo: are you asking "how do I make VS Code draw an angry red underline whenever he does this?" ?
[09:05:03] <Repiphany> They might be trying to conform to a line character limit
[09:05:11] <foo> twb: haha.
[09:05:19] <foo> Repiphany: we use black in pre-commit, I doubt that's an issue.
[09:05:25] *** Quits: somlis (~somlis@user/somlis) (Read error: Connection reset by peer)
[09:05:28] <foo> Repiphany: ... but I appreciate the idea. :)
[09:05:36] <foo> twb: It's also done about 15 times in 100 lines of code.
[09:05:46] <foo> whoops, Repiphany ^
[09:05:50] <foo> Is anyone here a fan of that?
[09:06:03] <twb> $coworker used to do that for paramterized SQL query strings, but mainly because they could grow super long
[09:07:05] <twb> I just said "no, if they're short, inline them.  If they're long, move them away to a '''''' or even a separate .sql file"
[09:07:23] *** Quits: duds- (~duds-@user/duds) (Ping timeout: 252 seconds)
[09:08:48] *** Joins: millido (~millido@84.210.150.128)
[09:08:56] <Repiphany> foo: Black reformats that to 3 lines with that much indentation
[09:09:03] *** Quits: cation (cation@user/cation) (Ping timeout: 252 seconds)
[09:10:06] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[09:10:31] *** Joins: cation (cation@user/cation)
[09:11:00] *** Quits: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:c16a:d10f:7e0a:ddc4) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[09:11:21] <twb> IMO it's poor style to bind (name) any value you use only once.
[09:11:27] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[09:11:32] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[09:11:36] <foo> twb: thank you, I like that logic.
[09:11:53] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[09:11:57] <foo> twb: In my mind, it's an inefficient use of space... your logic sounds more sane, though. Thank you.
[09:11:58] <twb> Except in very rare cases where it's e.g. a lemma
[09:12:12] <twb> and the name conveys extra meaning
[09:12:41] <foo> I think I've brought this up before, I might just need to call a team meeting, take a poll, and we decide. Or I'll just set the standard.
[09:12:47] <foo> twb: super appreciate it, thank you. And thank you Repiphany
[09:12:51] *** Joins: wallsY (~wallsY@c-73-211-135-175.hsd1.il.comcast.net)
[09:12:58] <twb> BTW {project.api_id} is probably injection attack there
[09:13:18] <twb> logger.info('No Case Strategy section for this project %s', project.api_id)
[09:13:37] *** Quits: wallsY (~wallsY@c-73-211-135-175.hsd1.il.comcast.net) (Changing host)
[09:13:37] *** Joins: wallsY (~wallsY@user/wallsY)
[09:14:00] *** Quits: wallsY (~wallsY@user/wallsY) (Client Quit)
[09:14:19] *** Joins: wallsY (~wallsY@user/wallsY)
[09:14:51] *** Joins: saroy (~Sandipan@45.249.73.212)
[09:14:51] <foo> twb: uh, not familiar with that. I thought f_strings was the way to go here. I'll have to read up on that.
[09:15:36] *** Joins: a1eaiactaest (~a1eaiacta@user/a1eaiactaest)
[09:15:40] <dba> twb: what kind of injection can `{project.api_id}` abused with?
[09:16:41] <twb> dba: depends what project.api_id is
[09:16:45] *** Joins: c4017 (~c4017@2604:3d08:747f:7c90:6c75:c89d:916b:3b14)
[09:16:48] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[09:17:16] <twb> But I'm guessing the attacker could get that to be something like '%p' and use it to extract python's PID.
[09:17:28] <dba> I should'v asked `how` instead. because to me it looks just an f string
[09:17:28] *** Quits: dsrt^ (~dsrt@96-67-120-105-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[09:17:38] <twb> This is just an extension of "printf(user_supplied_string) is always wrong"
[09:17:40] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[09:17:43] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 260 seconds)
[09:17:53] *** Joins: KevinX (~KevinX@user/KevinX)
[09:17:57] <twb> dba: logging.info() does its own interpolation after f'' is finished
[09:18:00] *** Joins: Luhmanji (~irc@user/Luhmanji)
[09:18:11] <dba> I see
[09:18:17] <twb> Sorry that wasn't obvious
[09:18:21] *** Joins: EdFletcher (~PKD@user/edfletcher)
[09:19:09] <twb> https://docs.python.org/library/logging.html#formatter-objects
[09:19:13] *** Quits: wallsY (~wallsY@user/wallsY) (Quit: remember when photobucket-forum-sig urls went here?)
[09:20:13] <twb> I'm not sure offhand if you can do anything *seriously* evil, it's just one of those idioms that is an automatic fail for me
[09:20:29] *** Joins: duds- (~duds-@user/duds)
[09:20:31] <twb> gcc is smart enough to explicitly complain, too
[09:20:40] *** Quits: a1eaiactaest (~a1eaiacta@user/a1eaiactaest) (Ping timeout: 272 seconds)
[09:21:09] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 252 seconds)
[09:21:44] <dba> Gotcha! This is pure wisdom :) everytime learning something new
[09:21:48] <twb> Aha
[09:21:49] <twb> https://cwe.mitre.org/data/definitions/134.html
[09:22:44] <dba> twb, interesting
[09:23:09] <dba> buffer overflows could lead to me serious damages
[09:23:47] *** Quits: sreve (~quassel@p4ff44e04.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[09:23:52] *** Joins: sreve_ (~quassel@p4ff44c08.dip0.t-ipconnect.de)
[09:24:14] *** Parts: Guest317 (~Guest317@88.103.7.38) ()
[09:24:22] <twb> You can't (easily) overflow a python string
[09:25:05] <dba> why, is it because it is un-mutable ?
[09:25:13] <dba> immutable
[09:25:15] <twb> I believe python strings are immutable, yes.
[09:25:47] *** Quits: Giovanni (~Giovanni@194.169.217.74) (Read error: Connection reset by peer)
[09:26:56] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Remote host closed the connection)
[09:27:20] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[09:28:49] *** Joins: ExpiredKebab (~sgreadly@47-72-210-135.dsl.dyn.ihug.co.nz)
[09:29:04] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[09:30:05] *** Quits: ExpiredKebab (~sgreadly@47-72-210-135.dsl.dyn.ihug.co.nz) (Read error: Connection reset by peer)
[09:31:18] *** Joins: a1eaiactaest (~a1eaiacta@user/a1eaiactaest)
[09:31:33] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:9d53:477b:2e01:dce3)
[09:34:33] *** Quits: nomic (~nomic@185.217.117.249) (Quit: Leaving)
[09:34:36] *** Joins: Giovanni (~Giovanni@194.169.217.74)
[09:34:39] *** Quits: Giovanni (~Giovanni@194.169.217.74) (Read error: Connection reset by peer)
[09:35:04] *** Quits: l4yer (~l4yer@user/l4yer) (Remote host closed the connection)
[09:35:27] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[09:36:30] *** Quits: a1eaiactaest (~a1eaiacta@user/a1eaiactaest) (Ping timeout: 272 seconds)
[09:39:54] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:41:37] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:42:29] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Ping timeout: 256 seconds)
[09:42:33] *** Joins: nomic (~nomic@185.217.117.249)
[09:43:59] *** Quits: KevinX (~KevinX@user/KevinX) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:44:26] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[09:46:16] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[09:46:29] *** Joins: HaMsTeRs (~Thunderbi@210.3.201.132)
[09:47:13] *** Parts: ACfromTX (~acroft@47-219-46-13.tyrmcmtk01.res.dyn.suddenlink.net) (Have a good one.)
[09:48:36] *** Joins: djapo (~archangel@user/djapo)
[09:49:16] *** Joins: a1eaiactaest (~a1eaiacta@user/a1eaiactaest)
[09:50:02] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb) (Ping timeout: 260 seconds)
[09:51:38] *** Joins: pycurious (~Adium@user/pycurious)
[09:52:01] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb)
[09:52:02] *** Quits: pycurious (~Adium@user/pycurious) (Client Quit)
[09:52:22] *** Joins: stockholm (~Andreas@p200300d2c70df200a875dbf71c766690.dip0.t-ipconnect.de)
[09:53:07] *** Joins: shelf (~shelf@198.232.120.151)
[09:56:10] *** Parts: ert (~ert@2001:4b99:1:1:216:3eff:fee5:446f) (out)
[09:59:18] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 272 seconds)
[10:00:45] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 252 seconds)
[10:00:55] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[10:01:46] *** Joins: gulzar (~gulzar@49.206.240.149)
[10:03:03] <stockholm> is there a way to be notified in my code once a BasicException occures or a multiprocessing.queue is not empty any more?
[10:03:15] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[10:03:40] <stockholm> besides polling, i mean
[10:04:43] *** Joins: jazzy (~jaziz@user/jaziz)
[10:05:20] *** Quits: b10n1k (~iob@dynamic-2a00-1028-8390-9e8a-0000-0000-0000-92cb.ipv6.o2.cz) (Quit: b10n1k)
[10:06:47] <Luhmanji> i would be interested in answers, even tho my skills are not good enough. i wonder what you mean by BasicException
[10:06:58] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[10:07:23] <stockholm> BasicException is a class
[10:07:33] *** Quits: coolinnit (~coolinnit@2600:1700:3ec7:6ac0:b561:74ed:8541:827) (Quit: Client closed)
[10:07:36] <stockholm> let me check what it is part of
[10:07:44] <Luhmanji> okay, nice
[10:08:41] *** Joins: wallsY (~weechat@user/wallsY)
[10:08:45] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[10:08:57] <TML> stockholm: try: my_code() except BasicException as e: …
[10:09:31] <stockholm> Luhmanji, it is caled BaseException, first of all :-)
[10:09:51] <Luhmanji> noted :)
[10:10:13] <stockholm> TML, this is not polling
[10:10:14] <stockholm> ?
[10:10:41] <TML> stockholm: No…
[10:11:05] <Luhmanji> i found some info, back to silent mode
[10:11:20] *** Joins: bahamas (~lucian@84.232.140.158)
[10:12:56] <stockholm> Luhmanji, i found this: https://docs.python.org/3/library/exceptions.html#base-classes
[10:13:03] <TML> stockholm: https://docs.python.org/3/tutorial/errors.html
[10:13:07] *** Joins: audio (~audio@user/audio)
[10:13:11] *** Joins: widp` (~user@124.123.106.12)
[10:13:14] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 272 seconds)
[10:13:20] *** Joins: dreamon (~dreamon@pd9503f46.dip0.t-ipconnect.de)
[10:14:31] *** Joins: han-solo (~han-solo@user/han-solo)
[10:14:59] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[10:15:48] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 240 seconds)
[10:16:09] *** Quits: _xor (~xor@74.215.232.169) (Quit: WeeChat 3.4)
[10:17:49] <widp`> how do I fix this: https://bpa.st/BATA
[10:17:49] *** Joins: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:6079:6204:f594:923f)
[10:18:20] <widp`> I am trying to override the append method of the list such that it doesn't append duplicates
[10:18:40] *** Joins: mcpackey (~pm0001@p5dc1ca7c.dip0.t-ipconnect.de)
[10:20:00] *** Quits: pyever___ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[10:20:09] <widp`> nvm fixed it
[10:20:12] *** Quits: hams (~hams@user/hams) (Ping timeout: 272 seconds)
[10:20:22] <widp`> I had to check 'not in self'
[10:20:36] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[10:20:37] *** Quits: Roey (~Roey@user/Roey) (Ping timeout: 240 seconds)
[10:20:56] <TML> widp`: set()?
[10:21:10] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[10:21:29] <widp`> oh wait the problem is still there
[10:21:42] <widp`> TML: can't have nested set of sets, I'll have to use frozenset
[10:22:06] <TML> widp`: *shrug* wasn't obvious from the paste you were nesting
[10:22:12] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[10:22:49] <widp`> yes, sorry
[10:23:02] <TML> something about your situation feels like you've become trapped in an X/Y problem, but I don't have enough context to be certain
[10:23:17] *** Joins: LAVBoy (~LAVBoy@0896332783.static.corbina.ru)
[10:24:40] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[10:25:16] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 272 seconds)
[10:25:32] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[10:25:33] *** Quits: dreamon (~dreamon@pd9503f46.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[10:25:49] *** Joins: KevinX (~KevinX@user/KevinX)
[10:26:16] *** Quits: alex11 (~alex11@user/alex11) (Quit: Leaving)
[10:26:32] <widp`> TML: let me share the entire python code
[10:26:59] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[10:27:02] <widp`> https://bpa.st/7SJQ
[10:27:09] *** Joins: EdFletcher (~PKD@user/edfletcher)
[10:27:32] *** Joins: dreamon (~dreamon@pd9503f46.dip0.t-ipconnect.de)
[10:27:57] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[10:28:57] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 256 seconds)
[10:29:25] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[10:29:33] *** Joins: dkdn (~dkdn@178.49.152.151)
[10:30:18] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[10:31:47] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[10:31:55] *** Joins: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net)
[10:32:21] <jinsun> is there any reason you can't use powerset from more-itertools? https://more-itertools.readthedocs.io/en/stable/_modules/more_itertools/recipes.html#powerset
[10:32:41] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[10:32:55] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[10:33:00] <jinsun> or actually https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.powerset
[10:33:52] *** Joins: Giovanni (~Giovanni@194.169.217.74)
[10:33:54] <widp`> yes, I am trying to improve, and it has taken me quite some time to implement recursive subset generation.
[10:34:07] *** Joins: Roey (~Roey@user/Roey)
[10:34:59] <jinsun> okay by improve I guess you mean this is for learning purposes and not because you actually need powerset
[10:35:28] *** Joins: dvx (~dvx@5.181.92.64)
[10:35:45] *** Quits: dkdn (~dkdn@178.49.152.151) (Ping timeout: 256 seconds)
[10:36:21] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[10:36:34] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:37:03] *** Joins: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net)
[10:38:10] *** Joins: dkdn (~dkdn@178.49.152.151)
[10:38:32] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[10:38:57] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[10:39:06] <widp`>  yes jinsun
[10:40:30] <TML> widp`: If the goal is to learn, my suggestion would be to go learn how itertools accomplishes this, because the recursive solution is not optimal
[10:40:32] *** Quits: Giovanni (~Giovanni@194.169.217.74) (Read error: Connection reset by peer)
[10:41:24] *** Quits: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 240 seconds)
[10:41:44] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[10:41:45] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[10:41:48] *** Quits: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 240 seconds)
[10:42:50] *** Joins: theprophet (~theprophe@2a0b:6204:42b1:2d00:88f8:7131:edae:6589)
[10:43:37] *** Quits: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr) (Remote host closed the connection)
[10:44:59] *** Joins: Giovanni (~Giovanni@194.169.217.74)
[10:45:53] *** Joins: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr)
[10:46:10] *** Quits: dreamon (~dreamon@pd9503f46.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[10:47:51] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 245 seconds)
[10:48:00] *** Joins: iflema (~ian@user/iflema)
[10:48:17] <TML> widp`: But, if you really wanted to implement this "mylist" class, you'd probably want something more like this: https://bpa.st/RA7Q
[10:48:26] <TML> widp`: See https://docs.python.org/3/library/collections.html#collections.UserList
[10:49:29] <TML> make sure you read up on UserList's subclassing requirements
[10:50:14] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[10:50:36] *** Quits: remote (~self@user/hackers) (Ping timeout: 272 seconds)
[10:50:46] *** Quits: widp (~widp@124.123.106.12) (Ping timeout: 245 seconds)
[10:51:01] *** Joins: manti7 (~manti7@176.10.104.94)
[10:51:05] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[10:51:12] *** Joins: widp (~widp@2405:204:5702:a6ab::2879:e8ad)
[10:51:47] *** Joins: widp2 (~user@124.123.81.227)
[10:51:53] *** Joins: EdFletcher (~PKD@user/edfletcher)
[10:52:11] *** Quits: widp` (~user@124.123.106.12) (Ping timeout: 256 seconds)
[10:52:21] <widp2> TML thanks, I was doing this because it took me a long time to understand this over the bit string approach
[10:52:58] <TML> widp2: "the bit string approach"?
[10:53:46] *** Joins: Vornotron (~Vornicus@2603-8000-5d07-7ef0-3dee-feba-a3ce-2188.res6.spectrum.com)
[10:53:46] *** Quits: a1eaiactaest (~a1eaiacta@user/a1eaiactaest) (Ping timeout: 272 seconds)
[10:54:13] <TML> n/m, probably not that important
[10:55:11] <dob1> if I have to use a script witi virtualenv by some users on my system, it's ok to create venv by root and then run the script or it's better  to create it as unprivileged one?
[10:55:20] <dob1> *with
[10:56:17] *** Quits: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053) (Ping timeout: 252 seconds)
[10:56:18] *** Quits: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net) (Ping timeout: 252 seconds)
[10:56:36] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-b054-1bff-9e6a-67ba.res6.spectrum.com) (Ping timeout: 240 seconds)
[10:56:59] *** Joins: remote (~self@user/hackers)
[10:57:17] *** Quits: ryan-c (ryan-c@znc.rya.nc) (Ping timeout: 256 seconds)
[10:57:48] *** Joins: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net)
[10:58:08] *** Joins: amogorkon (~amogorkon@user/amogorkon)
[10:58:16] *** Joins: ryan-c (ryan-c@znc.rya.nc)
[10:58:18] *** Joins: rsx (~dummy@ppp-188-174-146-62.dynamic.mnet-online.de)
[10:58:18] *** Joins: dreamon (~dreamon@pd9503f46.dip0.t-ipconnect.de)
[10:58:28] *** Quits: Midjak (~Midjak@82.66.147.146) (Quit: This computer has gone to sleep)
[10:59:14] *** Quits: Giovanni (~Giovanni@194.169.217.74) (Read error: Connection reset by peer)
[10:59:18] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[10:59:55] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 260 seconds)
[10:59:59] *** Joins: Giovanni (~Giovanni@194.169.217.74)
[11:00:30] *** Joins: dreamscached (~dreamscac@user/dreamscached)
[11:01:41] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[11:02:44] *** Quits: Giovanni (~Giovanni@194.169.217.74) (Read error: Connection reset by peer)
[11:03:44] *** Joins: Pickchea (~private@user/pickchea)
[11:03:57] <audio> can anyone help? https://stackoverflow.com/questions/71597959/tensorflow-how-can-i-keep-from-running-out-of-memory-when-processing-300k-image
[11:05:14] *** Joins: Giovanni (~Giovanni@194.169.217.74)
[11:06:06] *** Joins: a1eaiactaest (~a1eaiacta@user/a1eaiactaest)
[11:06:19] *** Quits: wyclif (~wyclif@user/wyclif) (Quit: leaving)
[11:09:01] *** Joins: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053)
[11:09:11] *** Quits: pedahzur (~jkugler@216-67-98-32.static.acsalaska.net) (Ping timeout: 256 seconds)
[11:10:07] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:10:12] *** Quits: a1eaiactaest (~a1eaiacta@user/a1eaiactaest) (Ping timeout: 240 seconds)
[11:11:14] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[11:11:42] *** Quits: shelf (~shelf@198.232.120.151) (Ping timeout: 252 seconds)
[11:12:59] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[11:13:24] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[11:14:51] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[11:14:57] <TML> widp2: The version that jinsun suggested more-or-less boils down to chain.from_iterable(combinations(s, r) for r in range(len(s)+1)) - you can read about that function combinations() at https://docs.python.org/3/library/itertools.html#itertools.combinations and chain.from_iterable at https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable
[11:15:33] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[11:15:48] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Remote host closed the connection)
[11:15:55] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 240 seconds)
[11:16:00] *** Quits: Giovanni (~Giovanni@194.169.217.74) (Read error: Connection reset by peer)
[11:16:24] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[11:17:28] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[11:17:41] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 256 seconds)
[11:17:57] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[11:18:02] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[11:18:35] *** Joins: carl-- (~carl-@185.103.188.130)
[11:19:57] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 256 seconds)
[11:20:40] *** Joins: kosh (~kosh@user/kosh)
[11:21:00] *** Joins: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be)
[11:22:09] *** Quits: dxrt (~dxrt@user/dxrt) (Quit: ZNC - http://znc.sourceforge.net)
[11:22:23] *** Joins: dxrt (~dxrt@user/dxrt)
[11:22:27] *** Quits: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:6079:6204:f594:923f) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[11:22:30] *** Joins: Imk0tter (~Imk0tter@221.sub-174-204-129.myvzw.com)
[11:22:42] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[11:23:14] *** Joins: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:6079:6204:f594:923f)
[11:24:04] *** Joins: dkdn54 (~dkdn@178.49.152.151)
[11:24:12] *** Quits: LiTHiuM (~Imk0tter@172.58.228.36) (Ping timeout: 240 seconds)
[11:25:07] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 260 seconds)
[11:25:43] *** Joins: dkdn76 (~dkdn@178.49.154.151)
[11:26:11] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 256 seconds)
[11:27:00] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[11:27:19] *** Quits: dkdn (~dkdn@178.49.152.151) (Ping timeout: 256 seconds)
[11:28:43] *** Joins: Guest282 (~Anon@i59F4C80A.versanet.de)
[11:29:10] <Guest282> hello
[11:29:15] *** Joins: a1eaiactaest (~a1eaiacta@user/a1eaiactaest)
[11:29:35] *** Quits: dkdn54 (~dkdn@178.49.152.151) (Ping timeout: 256 seconds)
[11:30:09] *** Quits: dkdn76 (~dkdn@178.49.154.151) (Ping timeout: 256 seconds)
[11:30:29] *** Quits: Guest282 (~Anon@i59F4C80A.versanet.de) (Client Quit)
[11:30:52] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:31:11] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:d232:2123:e004:b1b4)
[11:31:12] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[11:31:27] *** Quits: dreamscached (~dreamscac@user/dreamscached) (Quit: Disconnect by user.)
[11:32:21] *** emerent is now known as Guest6773
[11:32:21] *** Joins: emerent_ (~quassel@p200300cd5743c336ba27ebfffed28a59.dip0.t-ipconnect.de)
[11:32:22] *** Quits: Guest6773 (~quassel@p200300cd5743c377ba27ebfffed28a59.dip0.t-ipconnect.de) (Killed (calcium.libera.chat (Nickname regained by services)))
[11:32:22] *** emerent_ is now known as emerent
[11:33:06] <gulzar> Hi . Using mysql.connector https://dev.mysql.com/doc/connector-python/en/connector-python-api-mysqlcursor-fetchall.html . I was getting 1292 error on fetching data with row having a hash as string in one of the column (varchar). Other rows having number as string gives no issue.  After lots of debugging. I reached here. Only when I do
[11:33:06] <gulzar> cursor.fetchall() or loop over the cursor the error 1292 comes up.  cursor.fetchone() gives no error.  empty dataset with fetchall() gives no error .The query, the table, the error backtrace all are mentioned here https://paste.debian.net/1235415 .  Any ideas what can be done?  The data is being fetched from  a view. connected via django
[11:34:52] <widp2> TML: I see
[11:35:23] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:9d53:477b:2e01:dce3) (Ping timeout: 260 seconds)
[11:35:54] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 252 seconds)
[11:35:57] *** widp2 is now known as widp`
[11:36:37] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 240 seconds)
[11:36:40] *** Quits: zaquest (~notzaques@5.130.79.72) (Quit: Leaving)
[11:36:40] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[11:36:55] *** Quits: widp (~widp@2405:204:5702:a6ab::2879:e8ad) (Killed (NickServ (GHOST command used by widp`!~user@124.123.81.227)))
[11:36:57] *** Joins: Enitin (~Enitin@82.180.145.227)
[11:37:07] *** widp` is now known as widp
[11:38:19] *** Joins: zaquest (~notzaques@5.130.79.72)
[11:38:58] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[11:41:18] *** Joins: mrwick (~mrwick@user/mrwick)
[11:42:58] *** Quits: rwb (~augh@alogs.space) (Excess Flood)
[11:43:11] *** Joins: rwb (~augh@alogs.space)
[11:43:17] *** Quits: Enitin (~Enitin@82.180.145.227) (Ping timeout: 240 seconds)
[11:43:45] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:44:37] *** Quits: BUSY (~BUSY@user/busy) (Ping timeout: 240 seconds)
[11:44:48] *** rwb is now known as rb
[11:46:39] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:47:33] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[11:47:34] *** Joins: Giovanni (~Giovanni@194.169.217.74)
[11:47:54] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:48:32] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[11:49:09] *** Quits: nomic (~nomic@185.217.117.249) (Quit: Leaving)
[11:49:20] *** Quits: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net) (Quit: leaving)
[11:49:29] *** Joins: parv (~quass@user/parv)
[11:49:59] *** Quits: wallsY (~weechat@user/wallsY) (Ping timeout: 256 seconds)
[11:50:18] *** Joins: Lindrian (~Lindrian@about/regex/lindrian)
[11:50:45] *** Quits: resmo (~resmo@2a00:d420:9:8a00:9123:f02a:45a0:f8a6) (Ping timeout: 252 seconds)
[11:50:53] *** Quits: Jong (~Jong@2620:10d:c090:400::5:7a46) (Ping timeout: 250 seconds)
[11:52:01] *** Joins: wallsY (~weechat@user/wallsY)
[11:55:05] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[11:55:39] *** Joins: mathe8989 (~wellmathe@dhcp-138-246-3-71.dynamic.eduroam.mwn.de)
[11:56:00] *** Quits: derpadmin (~Anonymous@homebase.200013.net) (Quit: leaving)
[11:57:01] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[11:59:04] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[12:02:04] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[12:02:36] *** Quits: dreamon (~dreamon@pd9503f46.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[12:03:01] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[12:03:15] *** Joins: Disavowed (~chomp@user/disavowed)
[12:05:16] *** Joins: widp` (~user@124.123.105.73)
[12:06:03] *** Quits: Giovanni (~Giovanni@194.169.217.74) (Read error: Connection reset by peer)
[12:06:47] *** Joins: Giovanni (~Giovanni@194.169.217.74)
[12:07:14] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[12:07:37] *** Quits: stockholm (~Andreas@p200300d2c70df200a875dbf71c766690.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[12:07:48] *** Joins: bob518 (~bob518@cpe-66-66-96-218.rochester.res.rr.com)
[12:07:56] *** Joins: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net)
[12:07:56] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[12:08:00] <bob518> with capture_http(warc_writer):
[12:08:01] <bob518>    requests.get("https://example.com/index.html")
[12:08:01] <bob518> Can I do something like this but to read index.html in the current directory?
[12:08:21] *** Joins: luigibu (~luigi@93.176.153.88)
[12:09:23] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[12:09:27] *** Quits: widp (~user@124.123.81.227) (Ping timeout: 260 seconds)
[12:09:50] *** Joins: widp (~widp@124.123.105.73)
[12:11:13] *** Joins: jmd (~user@de.cellform.com)
[12:11:19] *** Quits: wallsY (~weechat@user/wallsY) (Ping timeout: 260 seconds)
[12:11:36] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[12:11:50] *** Quits: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182) (Remote host closed the connection)
[12:12:14] *** Joins: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182)
[12:13:13] *** Quits: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 256 seconds)
[12:13:21] *** Joins: wallsY (~weechat@user/wallsY)
[12:13:48] *** Quits: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[12:13:57] *** Joins: stockholm (~Andreas@p200300d2c70df200a875dbf71c766690.dip0.t-ipconnect.de)
[12:14:07] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[12:15:49] *** Quits: Giovanni (~Giovanni@194.169.217.74) (Read error: Connection reset by peer)
[12:17:01] *** Quits: widp (~widp@124.123.105.73) (Read error: Connection reset by peer)
[12:17:20] *** Joins: widp (~widp@2406:7400:73:9e1b:7de5:e0e7:c0a:afe0)
[12:17:51] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 260 seconds)
[12:18:05] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[12:18:13] <Disavowed> bob518: open('index.html').read() will do that. It's considered Best Practice to wrap it in a context manager like in your example, so with open('index.html') as f: f.read()
[12:18:21] *** Quits: brookesy66 (~will@203.185.205.85) (Quit: WeeChat 3.4.1)
[12:18:27] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[12:18:57] <twb> pathlib.Path('index.html').read_text()
[12:19:24] <twb> requests.get() probably works on file:/// as well, FWIW
[12:19:34] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[12:19:42] <bob518> I think read the file fine. But I'm not sure how to use it with with capture_http(warc_writer) so that it create the warc file.
[12:20:02] *** Quits: widp (~widp@2406:7400:73:9e1b:7de5:e0e7:c0a:afe0) (Read error: Connection reset by peer)
[12:20:10] *** Joins: palasso (~palasso@user/palasso)
[12:20:14] <bob518> I think I can read the file fine. But I'm not sure how to use it with capture_http(warc_writer) so that it creates the warc file.
[12:20:16] <twb> well you're not using http in the first place so you cannot capture it
[12:20:20] *** Joins: widp (~widp@124.123.105.73)
[12:20:30] <twb> warc is just json, no?
[12:20:36] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[12:20:48] <Disavowed> twb: Is the pathlib way more idiomatic? Been a while since I touched Python
[12:21:08] <twb> Disavowed: pathlib is new in 3.5 or so, becoming really useful around 3.7
[12:21:29] <bob518> twb I tried using file:\\\ with warcio, didn't read the file and throws response 200 error
[12:21:40] <twb> "file:\\\" is definitely wrong
[12:22:04] <twb> I was thinking of HAR not WARC
[12:22:19] <twb> https://en.wikipedia.org/wiki/HAR_%28file_format%29
[12:22:23] <twb> https://en.wikipedia.org/wiki/Web_ARChive
[12:22:29] <Disavowed> twb: I'll have a read up on it. Cheers!
[12:22:34] *** Joins: zeenk (~zeenk@2a02:2f04:a110:7d00:2011:cfed:bad7:3c94)
[12:22:45] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[12:23:21] <bob518> I meant "file:///"
[12:23:34] *** Quits: wyre (~wyre@user/wyre) (Quit: ZNC 1.8.2 - https://znc.in)
[12:23:55] <twb> bash5$ wget --warc-file=please-kill-me file:///etc/passwd Opening WARC file ‘please-kill-me.warc.gz’.  file:///etc/passwd: Unsupported scheme ‘file’.
[12:24:08] <twb> oh -- wget doesn't suppor file:// at all
[12:24:19] <twb> and wget2 doesn't support warc because its hokey old stuff
[12:25:14] *** Joins: jmd (~user@de.cellform.com)
[12:25:24] *** Joins: justm33 (~Username@84-84-41-7.fixed.kpn.net)
[12:25:24] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb) (Ping timeout: 240 seconds)
[12:25:40] <bob518> I was thinking to use something simple. But maybe I will have to use HTTP server and then capture request using HTTP server.
[12:25:40] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[12:25:54] *** Joins: wyre (~wyre@user/wyre)
[12:26:35] <bob518> But looks very inefficient just to request a file I have to start a server.
[12:27:08] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[12:27:09] *** Quits: justm3 (~Username@84-84-41-7.fixed.kpn.net) (Ping timeout: 256 seconds)
[12:27:16] *** justm33 is now known as justm3
[12:27:43] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[12:28:23] *** Joins: Enitin (~Enitin@82.102.22.85)
[12:30:07] *** Quits: HaMsTeRs (~Thunderbi@210.3.201.132) (Quit: HaMsTeRs)
[12:30:32] <Disavowed> bob518: looks like you can make requests talk to local files with something called Transport Adapters: https://stackoverflow.com/questions/10123929/fetch-a-file-from-a-local-url-with-python-requests
[12:31:08] *** Joins: vlm_ (~vlm@user/vlm)
[12:31:09] *** Joins: dreamon (~dreamon@ppp-88-217-83-128.dynamic.mnet-online.de)
[12:31:22] *** Joins: TheCat (~TheCat@user/z-cat)
[12:32:00] *** Joins: koziad (~koz@user/koziad/x-1285628)
[12:32:28] *** Joins: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de)
[12:32:29] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[12:32:34] *** Quits: vlm (~vlm@user/vlm) (Ping timeout: 272 seconds)
[12:32:35] *** vlm_ is now known as vlm
[12:32:38] <bob518> Disavowed good find. I previously followed the suggestion and tried. It still got response 200 when accessing the file.
[12:32:58] *** Joins: grooverman_ (~grooverma@189.110.77.226)
[12:33:15] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[12:33:21] *** Joins: upsala (~zcb@185.209.196.134)
[12:33:33] *** Joins: Giovanni (~Giovanni@194.169.217.74)
[12:34:19] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[12:34:39] *** Quits: a1eaiactaest (~a1eaiacta@user/a1eaiactaest) (Ping timeout: 260 seconds)
[12:35:06] *** Quits: grooverman (~grooverma@189.110.77.226) (Ping timeout: 272 seconds)
[12:37:13] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[12:39:29] *** Joins: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:8839:7e98:2aab:45ea)
[12:39:47] <han-solo> bob518: https://gist.github.com/millefalcon/cfc14dd92a1e83d38d7d8d09564d1d76
[12:40:48] *** Joins: cuanim (~cuanim@31.215.207.104)
[12:40:49] *** Quits: cuanim (~cuanim@31.215.207.104) (Changing host)
[12:40:49] *** Joins: cuanim (~cuanim@user/cuanim)
[12:40:50] <twb> bob518: what's the end goal anyway
[12:41:20] *** Joins: kts (~kts@103.73.237.196)
[12:41:33] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 256 seconds)
[12:42:00] <bob518> han-solo thanks, I will test.
[12:43:44] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[12:45:10] *** Quits: grabbathehut (~grabbathe@user/grabbathehut) (Quit: WeeChat 3.4.1)
[12:45:29] *** Quits: Giovanni (~Giovanni@194.169.217.74) (Read error: Connection reset by peer)
[12:45:33] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[12:46:08] *** Joins: Major_Biscuit (~MajorBisc@c-001-015-045.client.tudelft.eduvpn.nl)
[12:48:17] *** Quits: Sadale (~Sadale@user/sadale) (Ping timeout: 240 seconds)
[12:49:07] *** Joins: Sadale (~Sadale@user/sadale)
[12:49:56] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 245 seconds)
[12:50:58] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[12:51:15] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[12:52:53] *** Joins: a1eaiactaest (~a1eaiacta@user/a1eaiactaest)
[12:53:12] *** Joins: paprika (~pepper@user/pepper)
[12:53:27] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 252 seconds)
[12:55:36] *** Joins: Giovanni (~Giovanni@194.169.217.74)
[12:56:11] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 245 seconds)
[12:56:15] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[12:56:38] *** Quits: remote (~self@user/hackers) (Ping timeout: 272 seconds)
[12:57:38] *** Joins: remote (~self@user/hackers)
[12:59:57] *** Joins: VoidSync (~sync@user/voidsync)
[13:00:26] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 272 seconds)
[13:00:59] <bob518> han-solo I tried. But it didn't save response to warc request. Here's my code, I must have use request.get(resp) incorrectly. https://bpa.st/EM5Q
[13:01:46] *** Joins: BravoSlo (BravoSlo@gateway/vpn/airvpn/bravoslo)
[13:02:36] <bob518> And I see "resp <Response [None]>" when I print resp in it.
[13:02:43] *** Joins: slav0nic (slav0nic@python.su)
[13:03:05] <twb> it's resp = requests.get(url)
[13:03:24] *** Quits: LAVBoy (~LAVBoy@0896332783.static.corbina.ru) (Ping timeout: 240 seconds)
[13:03:46] <bob518> twb I have html strings in variables. I want to save those strings as HTML in warc files.
[13:03:58] <twb> bob518: that's a question about warc, not about requests
[13:04:10] <twb> bob518: why are you trying to use warc at all
[13:05:10] <bob518> twb I don't think I can use requests. requests.exceptions.InvalidSchema: No connection adapters were found for 'file:///...' Also what's the point of creating s mount if I can't use it?
[13:05:16] *** Quits: Giovanni (~Giovanni@194.169.217.74) (Read error: Connection reset by peer)
[13:05:16] <twb> It seems you are using https://pypi.org/project/warcio/  which says "The library provides support for reading (but not writing ARC) files."
[13:05:28] <twb> oh sorry misread "ARC" as "WARC"
[13:05:55] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 260 seconds)
[13:07:02] <twb> From that page it looks like you want something like...
[13:07:34] *** Joins: LAVBoy (~LAVBoy@0896332783.static.corbina.ru)
[13:07:48] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[13:08:18] *** Quits: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:8839:7e98:2aab:45ea) (Quit: Textual IRC Client: www.textualapp.com)
[13:08:38] *** Joins: jpds1 (~jpds@gateway/tor-sasl/jpds)
[13:08:45] *** Joins: sawk (~quassel@151.81.118.116)
[13:08:55] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[13:09:03] <twb> with pathlib.Path('example.warc').open('wb') as f: writer = WARCWriter(f); writer.write_record(writer.create_warc_record(str(file_path), 'response', payload=file_path.read_bytes()))
[13:09:59] <twb> bob518: "requests.get(url)" is shorthand for "with requests.Session() as sess: sess.get(url)".
[13:10:09] <twb> bob518: you were calling .get TWICE, though, which is nonsense
[13:11:17] <bob518> you are right
[13:12:46] *** Quits: parv (~quass@user/parv) (Quit: parv)
[13:14:03] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[13:14:19] *** Quits: rvalue (~rvalue@user/rvalue) (Remote host closed the connection)
[13:14:58] *** Joins: rvalue (~rvalue@user/rvalue)
[13:17:02] <bob518> I'm getting. AttributeError: 'str' object has no attribute 'read_bytes'
[13:17:15] <bob518> Isn't file_path string or is it a file object?
[13:18:44] *** Quits: Neoon (~Neoon@2607:5300:60:23a5::1111) (Ping timeout: 252 seconds)
[13:18:51] *** Joins: Neoon (~Neoon@2607:5300:60:23a5::1111)
[13:22:49] *** Parts: DaPinkOne (~Dap@user/dap) (Leaving)
[13:23:47] *** Joins: cdman (~dcm@user/dmc/x-4369397)
[13:23:51] <han-solo> it's a pathlib.Path object i think
[13:24:06] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:24:30] <han-solo> `pathlib.Path('/path/to/index.html').read_bytes()`
[13:25:13] *** Joins: rendar (~rendar@user/rendar)
[13:25:46] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 272 seconds)
[13:26:32] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[13:27:08] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[13:27:17] <bob518> thanks
[13:28:16] <bob518> still getting error AttributeError: 'bytes' object has no attribute 'read'
[13:28:17] <bob518> File "/home/xx/git/xx/xx/helper.py", line 125, in saveWARCFile1
[13:28:17] <bob518>     writer.write_record(writer.create_warc_record(file_path, 'response', payload=pathlib.Path(file_path).read_bytes()))
[13:28:18] <bob518>   File "/home/xx/.local/share/virtualenvs/mailbag-kTZMaqNJ/lib/python3.8/site-packages/warcio/recordbuilder.py", line 118, in create_warc_record
[13:28:18] <bob518>     self.ensure_digest(record, block=False, payload=True)
[13:28:36] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[13:28:40] <bob518> File "/home/xx/.local/share/virtualenvs/xx-kTZMaqNJ/lib/python3.8/site-packages/warcio/recordbuilder.py", line 218, in _iter_stream
[13:28:40] <bob518>     buf = stream.read(BUFF_SIZE)
[13:28:58] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[13:29:39] *** Quits: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:6079:6204:f594:923f) (Quit: Textual IRC Client: www.textualapp.com)
[13:29:48] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 240 seconds)
[13:31:20] *** Joins: nen_kexit (~Druce@83.234.34.28)
[13:32:05] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:9d53:477b:2e01:dce3)
[13:32:12] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[13:32:45] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[13:32:55] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[13:35:02] *** Quits: rud0lf (rangifer@user/rud0lf) (Quit: bye!)
[13:35:23] *** Joins: rud0lf (rangifer@user/rud0lf)
[13:35:30] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[13:36:26] *** Joins: 076AAICLE (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[13:36:26] *** Joins: 042AA2PET (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[13:36:39] *** dcaro_away is now known as dcaro
[13:36:41] *** Quits: rud0lf (rangifer@user/rud0lf) (Client Quit)
[13:37:00] *** Joins: rud0lf (rangifer@user/rud0lf)
[13:37:06] *** Quits: Deknos (~someone@user/menace) (Quit: Deknos)
[13:37:40] *** Quits: rud0lf (rangifer@user/rud0lf) (Client Quit)
[13:38:26] *** Joins: Giovanni (~Giovanni@194.169.217.74)
[13:38:35] *** Joins: rud0lf (rangifer@user/rud0lf)
[13:38:47] *** Quits: mentallyinspired (~mentallyi@h-85-24-146-18.A400.priv.bahnhof.se) (Ping timeout: 256 seconds)
[13:39:11] *** Quits: rud0lf (rangifer@user/rud0lf) (Read error: Connection reset by peer)
[13:39:36] *** Joins: rud0lf (rangifer@user/rud0lf)
[13:39:39] *** Joins: mentallyinspired (~mentallyi@h-85-24-146-18.A400.priv.bahnhof.se)
[13:39:50] *** Joins: _xor (~xor@74.215.232.169)
[13:40:12] *** Quits: kostkon_ (~androirc@2a02:587:a106:f8d0:5455:7996:42cf:6660) (Ping timeout: 252 seconds)
[13:40:45] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 250 seconds)
[13:41:50] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[13:44:06] *** Joins: akash (~akash@2401:4900:3d3a:62ca:cf:2cff:fe15:5929)
[13:44:08] *** Quits: Proxysna (~Proxysna@62.119.254.142) (Remote host closed the connection)
[13:44:53] *** Parts: akash (~akash@2401:4900:3d3a:62ca:cf:2cff:fe15:5929) ()
[13:45:17] *** Joins: dante-as (~dante-as@188.26.94.194)
[13:46:19] *** Quits: _xor (~xor@74.215.232.169) (Quit: brb)
[13:46:49] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:46:55] *** Joins: dante-as52 (~dante-as@188.26.94.194)
[13:47:19] *** Quits: Giovanni (~Giovanni@194.169.217.74) (Read error: Connection reset by peer)
[13:47:47] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[13:47:48] *** Quits: skapate (~Skapata@user/skapata) (Read error: Connection reset by peer)
[13:47:49] *** Quits: LAVBoy (~LAVBoy@0896332783.static.corbina.ru) (Ping timeout: 240 seconds)
[13:47:50] <dante-as52> Hi guys, I have one question: how can I import a function from a class in __init__.py? The function is called `use` and I would like to import it as Handlers. What I have: `from .Logger.Components.Handlers import Handlers`
[13:48:14] *** Joins: LAVBoy (~LAVBoy@0896332783.static.corbina.ru)
[13:48:25] <dante-as52> But I would need to integrate the function in the class
[13:48:26] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[13:49:51] *** Joins: shad (~shad@user/shad)
[13:49:57] <han-solo> can we see some code ?
[13:50:07] *** Quits: dante-as (~dante-as@188.26.94.194) (Ping timeout: 256 seconds)
[13:50:11] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[13:51:20] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[13:51:31] *** Joins: dante-as (~dante-as@188.26.94.194)
[13:51:49] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 256 seconds)
[13:53:14] <dante-as> Here is depicted the main idea: https://bpa.st/NFBA
[13:53:17] *** Quits: remote (~self@user/hackers) (Ping timeout: 256 seconds)
[13:53:46] <dante-as> I would need to import the use() without telling from now on when calling this Handlers as Handlers().use()
[13:53:54] <dante-as> I would like to call this function directly somehow
[13:54:10] <dante-as> like Handlers() , but it is triggering automatically the .use()
[13:54:13] *** Joins: maxzor (~maxzor@laubervilliers-657-1-70-103.w90-63.abo.wanadoo.fr)
[13:54:23] <dante-as> And I would like to do that from the __init__.py
[13:54:39] *** Quits: dante-as52 (~dante-as@188.26.94.194) (Ping timeout: 256 seconds)
[13:54:54] *** Quits: a1eaiactaest (~a1eaiacta@user/a1eaiactaest) (Ping timeout: 272 seconds)
[13:55:23] *** Quits: stockholm (~Andreas@p200300d2c70df200a875dbf71c766690.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[13:55:27] *** Parts: velix (~velix@user/velix) (Leaving)
[13:55:30] <han-solo> what about the initialization of the `Handler` ? if it doesn't matter, why is `use` a class method ? why not a normal function and import that
[13:56:14] <han-solo> `s/class method/method/`
[13:57:04] *** Joins: dante-as81 (~dante-as@188.26.94.194)
[13:57:43] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:59:28] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[14:00:11] *** Joins: remote (~self@user/hackers)
[14:00:53] *** Quits: dante-as (~dante-as@188.26.94.194) (Ping timeout: 256 seconds)
[14:01:14] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 272 seconds)
[14:01:22] *** Joins: ivii (~ivan@user/ivii)
[14:01:48] *** Quits: VoidSync (~sync@user/voidsync) (Remote host closed the connection)
[14:02:30] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[14:02:31] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[14:02:35] *** Quits: dante-as81 (~dante-as@188.26.94.194) (Ping timeout: 256 seconds)
[14:02:56] <rendar> if i have this `t = re.compile(r"^(\d\d:\d\d:\d\d)(.+)$")` and then it will match to a string with `m = re.match("12:12:12Hello", t)` why m[0] will be the full string and not the 2 regex groups?!
[14:03:47] *** Quits: maxzor (~maxzor@laubervilliers-657-1-70-103.w90-63.abo.wanadoo.fr) (Remote host closed the connection)
[14:03:47] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 260 seconds)
[14:04:24] *** Joins: a1eaiactaest (~a1eaiacta@user/a1eaiactaest)
[14:04:33] *** Quits: Luhmanji (~irc@user/Luhmanji) (Quit: WeeChat 3.0)
[14:04:57] *** Quits: SeeM (~SeeM@153.ip-54-38-53.eu) (Ping timeout: 240 seconds)
[14:05:01] *** Joins: Enitin (~Enitin@82.180.145.227)
[14:05:05] *** Joins: jaggz (~jaggz@user/jaggz)
[14:06:03] *** Quits: ham5urg_ (~ham5urg@p5ddfcdab.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[14:06:47] <dob1> if I have a file and I do   data = file.read()   I put the content of the file in data.   if I have a base64 string that is the content of the file can I do the same ? without deconding it to a temp file and reading from it?
[14:07:17] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[14:08:00] <dob1> it's just decoding the string at the end...
[14:08:03] <dob1> well stupid question!
[14:08:14] *** Joins: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr)
[14:09:02] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[14:09:36] *** Joins: plastico (~plastico@neomutt/plastico)
[14:09:39] <han-solo> rendar: i think, group 0 returns the entire match, you likely just want `m.groups()` ?
[14:09:39] *** Joins: SeeM (~SeeM@153.ip-54-38-53.eu)
[14:09:41] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[14:09:51] <rendar> right thanks
[14:10:40] *** gentooclimax is now known as climax
[14:13:50] *** Joins: vulpes_vulpes (~vulpes_vu@62-64-207-88.dynamic.dial.as9105.com)
[14:14:18] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 252 seconds)
[14:14:40] *** Joins: Asgaroth (~Asgaroth@93.107.191.92)
[14:15:37] *** Quits: doc (~doc@user/doc) (Ping timeout: 256 seconds)
[14:16:48] *** Joins: doc (~doc@user/doc)
[14:17:11] <twb> rendar: you don't need to .compile these days
[14:17:31] <twb> re.fullmatch will automatically memoize the last few expressions
[14:17:53] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[14:18:25] *** Joins: LucaTM (~LucaTM@user/lucatm)
[14:18:53] *** Joins: zitter (~danilodim@93-57-35-194.ip162.fastwebnet.it)
[14:19:14] *** Joins: stockholm (~Andreas@p200300d2c70df200a875dbf71c766690.dip0.t-ipconnect.de)
[14:19:25] *** Quits: odrling (~odrling@korone.aidoru.agency) (Quit: see you space cowboy)
[14:19:31] *** Quits: nesoi (~Adium@60-241-111-113.static.tpgi.com.au) (Quit: Leaving.)
[14:19:39] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 260 seconds)
[14:19:46] *** Joins: odrling (~odrling@korone.aidoru.agency)
[14:19:49] <zitter> Hi all, I'm getting a Datetime from DB transforming in Date only if it not None in this way: received_at = item['WT_C_DATERECEIVED']
[14:19:50] <zitter>     if received_at is not None:
[14:19:50] <zitter>       received_at = received_at.date()
[14:19:54] *** Quits: rud0lf (rangifer@user/rud0lf) (Quit: bye!)
[14:20:02] <zitter> Is there a concise way to accomplish this?
[14:20:20] *** Joins: rud0lf (rangifer@user/rud0lf)
[14:20:40] <twb> zitter: d.date() if d else d
[14:20:50] *** Joins: nesoi (~Adium@60-241-111-113.static.tpgi.com.au)
[14:20:53] *** Quits: nesoi (~Adium@60-241-111-113.static.tpgi.com.au) (Client Quit)
[14:20:54] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[14:21:12] <twb> zitter: or perhaps "d and d.date()" or "d.date() if isinstance(d, datetime.Date) else None"
[14:21:19] *** climax is now known as gentooclimax
[14:21:23] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[14:21:31] <twb> Depends on exactly what you want to convey
[14:21:44] <twb> You could also convert it to a date before it leaves postgres
[14:21:54] <supakeen> `received_at = d and d.date()`
[14:22:03] <supakeen> For maximum confusion.
[14:22:09] <zitter> lol
[14:22:28] <rendar> twb, i see thanks
[14:22:44] <supakeen> I think your version is concise and readable enough.
[14:22:51] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[14:23:03] <supakeen> You an do things like twb or I said but I don't feel they're clearer.
[14:24:05] <twb> zitter: http://ix.io/3TkX
[14:24:34] <twb> asking the database for the data you WANT is, IMO, better than asking for data you DON'T want and then trying to fix it in python
[14:24:57] <zitter> twb, right
[14:25:09] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Ping timeout: 250 seconds)
[14:25:24] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[14:25:49] *** Quits: toulene (~toulene@user/toulene) (Ping timeout: 240 seconds)
[14:26:17] *** Joins: toulene (~toulene@user/toulene)
[14:26:37] *** Quits: 042AA2PET (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[14:26:56] *** Quits: 076AAICLE (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[14:27:10] *** Joins: nesoi (~Adium@60-241-111-113.static.tpgi.com.au)
[14:27:18] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[14:27:20] <twb> I recommend "with psycopg2.connect(dbname=dbname) as conn, conn, conn.cursor(cursor_factory=psycopg2.extras.NamedTupleCursor) as cur:"
[14:27:21] *** Joins: flower__ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[14:27:44] <twb> The extra "with conn" creates a transaction, which will simplify rollback and speed up SELECT.
[14:28:01] <twb> the named tuples let you wrote row.x instead of r['x']
[14:28:06] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[14:28:28] *** Quits: boris_ (m-vwhg2g@152.70.163.76) (Remote host closed the connection)
[14:28:30] <twb> And you can still **row.as_dict() if you need to feed it into .format() or jinja
[14:29:02] *** Quits: widp (~widp@124.123.105.73) (Read error: Connection reset by peer)
[14:29:12] *** Joins: widp (~widp@124.123.105.73)
[14:29:17] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:29:17] *** Joins: boris_ (m-vwhg2g@152.70.163.76)
[14:29:29] *** Quits: widp (~widp@124.123.105.73) (Read error: Connection reset by peer)
[14:29:32] *** Joins: jpn (~jpn@user/jpn)
[14:29:52] *** Joins: widp (~widp@124.123.105.73)
[14:30:04] *** Joins: baffodoro (~raffaem@45.91.20.242)
[14:31:00] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 272 seconds)
[14:31:38] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 272 seconds)
[14:31:49] *** Joins: the_lanetly_052 (~the_lanet@194.135.166.224)
[14:32:30] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[14:32:40] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Remote host closed the connection)
[14:32:42] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[14:33:19] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[14:34:08] *** Joins: ps_ (~mad_moses@2a02:6d40:2348:4601:9150:4f37:37d5:410)
[14:34:09] <ps_> hi
[14:35:07] <ps_> Can I use email parser to extract the message from an email reply?
[14:37:23] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[14:37:58] *** Quits: dreamon (~dreamon@ppp-88-217-83-128.dynamic.mnet-online.de) (Ping timeout: 272 seconds)
[14:38:50] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[14:39:15] *** Quits: saroy (~Sandipan@45.249.73.212) (Ping timeout: 260 seconds)
[14:39:21] <jaggz> Regarding scipy FFT: I'm reading various pages/posts on how to get the amplitude of the original signal but none of it matches (or I'm not understanding how it relates..)
[14:40:34] *** Joins: dreamon (~dreamon@ppp-88-217-83-128.dynamic.mnet-online.de)
[14:43:02] *** Quits: kts (~kts@103.73.237.196) (Quit: Konversation terminated!)
[14:43:09] *** Quits: mxp (~mxp@185.16.205.131) (Ping timeout: 250 seconds)
[14:43:49] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[14:44:09] *** Joins: ham5urg_ (~ham5urg@p200300d1671953002d5dd4144332924d.dip0.t-ipconnect.de)
[14:44:13] *** Joins: nickgaw (~nick@12.118.228.234)
[14:44:14] *** Quits: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com) (Read error: Connection reset by peer)
[14:44:16] *** Joins: darksun (~darksun@user/darksun)
[14:45:16] *** Joins: ThanatosJ (~Thanatos@105.112.146.168)
[14:45:16] *** Joins: shuck (~shuck@user/shuck)
[14:45:35] *** Quits: nickgaw (~nick@12.118.228.234) (Client Quit)
[14:46:09] *** Joins: Thanattt (~Thanatos@105.112.146.168)
[14:46:29] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Remote host closed the connection)
[14:47:39] *** Quits: ThanatosJ (~Thanatos@105.112.146.168) (Read error: Connection reset by peer)
[14:48:17] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-dc1a-c263-28ec-2555.res6.spectrum.com)
[14:49:19] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[14:49:33] *** Joins: ice9 (~ice9@user/ice9)
[14:49:51] *** Joins: mxp (~mxp@185.16.205.131)
[14:50:50] *** Joins: somlis (~somlis@user/somlis)
[14:51:19] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[14:51:50] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[14:51:51] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 260 seconds)
[14:52:42] <cryptobug> hey guys
[14:52:45] <cryptobug> how are ya
[14:53:09] *** Quits: bob518 (~bob518@cpe-66-66-96-218.rochester.res.rr.com) (Quit: Client closed)
[14:53:19] <jaggz> like, one of my dominant frequencies (60hz), with my array being 1200 samples, shows in the fft array as (27600.49-316.25j); but the actual wave is more like 100 tall in my data.
[14:53:40] <jaggz> scipy's docs point out: y[k] = np.sum(x * np.exp(-2j * np.pi * k * np.arange(n)/n))
[14:54:17] *** Quits: wyre (~wyre@user/wyre) (Quit: ZNC 1.8.2 - https://znc.in)
[14:55:06] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[14:55:11] <jaggz> so my 60hz, found in y at y[289], would be calculated as np.sum(x * np.exp(-2j * np.pi * 289 * np.arange(len(x))/len(x))
[14:55:31] *** Joins: wyre (~wyre@user/wyre)
[14:55:42] *** Quits: flower__ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 272 seconds)
[14:55:42] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 272 seconds)
[14:56:04] <jaggz> and that does match up
[14:56:32] <jaggz> but what is it?  what is this 27600-316j thing?
[14:56:37] *** Quits: vlado (~vlado@181.50.79.237) (Ping timeout: 240 seconds)
[14:56:58] *** gentooclimax is now known as climax
[14:57:31] *** Quits: nesoi (~Adium@60-241-111-113.static.tpgi.com.au) (Quit: Leaving.)
[14:58:29] *** Quits: boris_ (m-vwhg2g@152.70.163.76) (Remote host closed the connection)
[14:58:46] *** Joins: BUSY (~BUSY@user/busy)
[14:58:51] *** Joins: saroy (~Sandipan@45.249.73.212)
[14:59:04] *** Joins: oh-bee (~walt@2601:346:8100:5ec0:dab1:816f:a6d6:9b31)
[14:59:59] *** Joins: boris_ (m-vwhg2g@152.70.163.76)
[15:00:42] *** Quits: saroy (~Sandipan@45.249.73.212) (Read error: Connection reset by peer)
[15:00:52] *** Joins: saroy (~Sandipan@45.249.73.212)
[15:03:23] *** Quits: zeenk (~zeenk@2a02:2f04:a110:7d00:2011:cfed:bad7:3c94) (Quit: Konversation terminated!)
[15:03:52] <rud0lf> shouldn't fourrier transform be normalized by a factor?
[15:04:41] <rud0lf> all that * 1 / len(x)
[15:05:09] *** Joins: sandipan (~Sandipan@45.249.73.212)
[15:05:11] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:05:15] *** Quits: saroy (~Sandipan@45.249.73.212) (Ping timeout: 250 seconds)
[15:05:41] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:07:09] <nedbat> cryptobug: doing well, how about you?
[15:08:14] <cryptobug> nice
[15:08:17] <cryptobug> nedbat
[15:08:18] <jaggz> rud0lf, when I do that, I get (23.000412410101543-0.26354263193547883j)
[15:08:21] <cryptobug> thank God
[15:08:21] <jaggz> not sure what that is
[15:08:25] <cryptobug> We are all fine
[15:08:50] <jaggz> rud0lf, my graph is here (it's heart-sensor (ekg) data): https://www.flickr.com/photos/32284628@N05/
[15:08:55] <rud0lf> that's complex aka imaginary number...
[15:09:05] <jaggz> you can see that high frequency AC noise in it, that I want to remove
[15:09:24] *** Quits: sandipan (~Sandipan@45.249.73.212) (Ping timeout: 240 seconds)
[15:09:28] <jaggz> yeah I know it's a complex number :)  heh
[15:09:40] <rud0lf> jaggz: if i remember well, real part (23) is amplitude and imaginary (0.26) part is phase
[15:09:47] <jaggz> but that's the 27600 thing / len(data)
[15:10:00] <jaggz> (or len(fft(data)), which is the same length)
[15:10:04] <rud0lf> but don't quote me on that
[15:10:19] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[15:10:26] <jaggz> but my signal is about 100 high
[15:10:28] *** climax is now known as gentooclimax
[15:10:38] <jaggz> hmm.. maybe some of the adjacent amplitudes add up
[15:11:59] *** Joins: saroy (~Sandipan@45.249.73.212)
[15:12:37] *** Joins: jpic (~jpic@145.224.76.53)
[15:13:15] *** Joins: ba (~ba@cpc1-hari17-2-0-cust27.20-2.cable.virginm.net)
[15:13:23] <rud0lf> jaggz: and if i remember correctly, power of signal is equally distributed over positive and negative spectrum... so you also need to multiply signal power by 2
[15:14:44] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[15:15:07] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 256 seconds)
[15:15:24] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Ping timeout: 240 seconds)
[15:16:20] *** Quits: boris_ (m-vwhg2g@152.70.163.76) (Remote host closed the connection)
[15:17:08] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[15:17:09] *** Joins: boris_ (m-vwhg2g@152.70.163.76)
[15:17:14] *** Quits: saroy (~Sandipan@45.249.73.212) (Ping timeout: 272 seconds)
[15:17:56] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[15:18:41] *** Joins: saroy (~Sandipan@45.249.73.212)
[15:19:07] <jaggz> rud0lf, hmm.. that makes sense.  I wasn't sure what to do with the left and right sides
[15:19:08] <jaggz> https://www.flickr.com/photos/32284628@N05/?
[15:19:21] *** Quits: sn_fk_n (~snufkin@94.15.173.91) (Quit: Lost terminal)
[15:19:25] <jaggz> where there's a -59.x and the +59.x
[15:20:31] *** Quits: nen_kexit (~Druce@83.234.34.28) (Quit: Leaving)
[15:21:24] <rud0lf> try to transform sinusoid and check the result
[15:21:32] <rud0lf> so you can see how amplitude shows
[15:22:21] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[15:22:35] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[15:22:37] <rud0lf> if you want to normalise propery, google for Parseval's Theorem
[15:23:31] *** Joins: mav`rik (~unknown@ec2-54-171-126-99.eu-west-1.compute.amazonaws.com)
[15:25:28] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[15:26:30] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[15:27:28] <jaggz> rud0lf, transform sinusoid?
[15:27:52] *** Joins: jpn (~jpn@user/jpn)
[15:28:01] <rud0lf> a sinusoidal signal, single wave, will give you one frequency spike
[15:28:08] <jaggz> so, I realized, these 60hz signals are made of its harmonics as well.. hmm
[15:28:13] *** Joins: moog_ (~moog@98.97.81.153)
[15:28:13] *** Joins: Giovanni (~Giovanni@194.169.217.74)
[15:28:14] <rud0lf> so you can make sure how amplitude relates
[15:28:14] <jaggz> so filtering it out is a bit funky
[15:28:19] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[15:28:20] <jaggz> gonna try lowpass
[15:28:30] <jaggz> rud0lf, good idea, thanks
[15:28:59] <jaggz> rud0lf, btw, this is here: https://github.com/jaggzh/ecg-test-examination.git
[15:29:30] <jaggz> runs as is, (it's loading ipdb right now, you'll have to enter 'c' once for it to show the plot)
[15:29:55] *** Quits: Giovanni (~Giovanni@194.169.217.74) (Read error: Connection reset by peer)
[15:30:19] *** Quits: simplicity (~yti@user/simplicity) (Remote host closed the connection)
[15:30:49] *** Quits: moog__ (~moog@98.97.82.161) (Ping timeout: 250 seconds)
[15:30:50] *** Joins: driib25 (~driib@185.195.233.169)
[15:31:57] *** Joins: simplicity (~yti@user/simplicity)
[15:32:41] *** Quits: driib2 (~driib@185.65.135.238) (Ping timeout: 256 seconds)
[15:32:41] *** driib25 is now known as driib2
[15:32:44] *** Joins: moog__ (~moog@98.97.82.161)
[15:32:56] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 252 seconds)
[15:33:24] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:34:15] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[15:34:19] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[15:35:08] *** Quits: moog_ (~moog@98.97.81.153) (Ping timeout: 252 seconds)
[15:35:08] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:9d53:477b:2e01:dce3) (Ping timeout: 252 seconds)
[15:35:35] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 250 seconds)
[15:35:35] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 240 seconds)
[15:36:12] *** Joins: moog (~moog@98.97.81.153)
[15:36:30] *** Quits: saroy (~Sandipan@45.249.73.212) (Quit: Leaving)
[15:36:32] *** Joins: Sadale (~Sadale@user/sadale)
[15:36:46] *** Joins: saroy (~Sandipan@45.249.73.212)
[15:37:21] *** Quits: chenqisu1 (~chenqisu1@183.217.201.88) (Quit: Leaving)
[15:37:53] *** Quits: moog__ (~moog@98.97.82.161) (Ping timeout: 252 seconds)
[15:37:54] *** Quits: sawk (~quassel@151.81.118.116) (Ping timeout: 252 seconds)
[15:38:14] *** Joins: moog_ (~moog@98.97.84.173)
[15:38:56] *** Joins: Giovanni (~Giovanni@194.169.217.74)
[15:39:02] *** Quits: Giovanni (~Giovanni@194.169.217.74) (Read error: Connection reset by peer)
[15:39:49] *** Quits: Sadale (~Sadale@user/sadale) (Client Quit)
[15:41:15] *** Joins: moog__ (~moog@98.97.84.79)
[15:41:18] *** Quits: moog (~moog@98.97.81.153) (Ping timeout: 272 seconds)
[15:41:58] *** Joins: ThanatosJ (~Thanatos@105.112.188.104)
[15:42:47] *** Joins: jpn (~jpn@user/jpn)
[15:43:17] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[15:43:25] *** Quits: moog_ (~moog@98.97.84.173) (Ping timeout: 240 seconds)
[15:43:54] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Remote host closed the connection)
[15:44:18] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[15:45:03] *** Quits: Thanattt (~Thanatos@105.112.146.168) (Ping timeout: 260 seconds)
[15:48:19] *** Joins: Giovanni (~Giovanni@194.169.217.74)
[15:49:18] *** Joins: Barones (~Barones@user/Barones)
[15:49:32] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 272 seconds)
[15:49:56] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[15:51:15] *** Quits: widp` (~user@124.123.105.73) (Read error: Connection reset by peer)
[15:51:48] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[15:52:13] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[15:54:57] *** Joins: flower__ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[15:56:03] *** Joins: _IRCFan12 (~textual@2001:8004:1580:338:40ca:dc58:b23e:494f)
[15:57:13] *** Joins: bitkiller (~bitkiller@user/bitkiller)
[15:58:11] *** Joins: jmd (~user@de.cellform.com)
[15:58:49] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Read error: Connection reset by peer)
[15:59:13] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[15:59:40] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[16:00:32] *** Joins: jmd (~user@de.cellform.com)
[16:01:14] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[16:01:17] *** Joins: tarel2 (~tarel2@139.28.216.245)
[16:02:25] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 268 seconds)
[16:03:32] *** Joins: andreasbuhr (~quassel@p549dba69.dip0.t-ipconnect.de)
[16:03:32] *** Quits: andreasbuhr (~quassel@p549dba69.dip0.t-ipconnect.de) (Client Quit)
[16:03:48] *** Joins: thiras (~thiras@user/thiras)
[16:03:53] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[16:05:35] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 260 seconds)
[16:05:57] *** Quits: gulzar (~gulzar@49.206.240.149) (Quit: gulzar)
[16:06:13] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[16:06:31] *** Quits: stockholm (~Andreas@p200300d2c70df200a875dbf71c766690.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[16:06:41] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[16:07:15] *** Quits: flower__ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[16:08:27] *** Joins: fifihyperbola (~fifihyper@lf2.warkscol.ac.uk)
[16:08:32] *** Quits: Enitin (~Enitin@82.180.145.227) (Ping timeout: 272 seconds)
[16:09:16] *** Joins: Enitin (~Enitin@82.180.145.226)
[16:09:56] *** Quits: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr) (Remote host closed the connection)
[16:10:25] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[16:12:11] *** Quits: Giovanni (~Giovanni@194.169.217.74) (Read error: Connection reset by peer)
[16:12:28] *** Joins: paul424 (~tom@apn-31-0-2-93.dynamic.gprs.plus.pl)
[16:12:53] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:13:06] *** Quits: _IRCFan12 (~textual@2001:8004:1580:338:40ca:dc58:b23e:494f) (Quit: Textual IRC Client: www.textualapp.com)
[16:13:41] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 245 seconds)
[16:13:47] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[16:14:18] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[16:17:27] *** Joins: Midjak (~Midjak@82.66.147.146)
[16:17:43] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[16:18:35] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[16:18:39] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 260 seconds)
[16:19:25] *** Joins: Giovanni (~Giovanni@194.169.217.74)
[16:19:34] *** Quits: Giovanni (~Giovanni@194.169.217.74) (Read error: Connection reset by peer)
[16:20:17] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[16:22:04] *** Joins: Maxc4m (~Maxc4m@37.113.239.144)
[16:22:51] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[16:23:13] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[16:23:15] *** Joins: flower__ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[16:23:51] *** Joins: Jong (~Jong@2620:10d:c090:400::5:7a46)
[16:23:58] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[16:24:31] *** Quits: Major_Biscuit (~MajorBisc@c-001-015-045.client.tudelft.eduvpn.nl) (Ping timeout: 245 seconds)
[16:25:45] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 252 seconds)
[16:27:36] *** Quits: cdman (~dcm@user/dmc/x-4369397) (Quit: Leaving)
[16:27:38] *** Joins: Pickchea (~private@user/pickchea)
[16:28:12] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[16:28:13] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 256 seconds)
[16:28:32] *** Joins: sawk (~quassel@78.6.80.66)
[16:29:13] *** Joins: Major_Biscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[16:29:22] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:30:16] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[16:31:55] *** Joins: han-solo (~han-solo@user/han-solo)
[16:33:05] *** Joins: cincoswim (~cincoswim@24-52-65-147.telesystem.us)
[16:33:24] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (Ping timeout: 240 seconds)
[16:33:35] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 260 seconds)
[16:34:46] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[16:35:40] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[16:36:43] *** Quits: tarel2 (~tarel2@139.28.216.245) (Ping timeout: 256 seconds)
[16:36:57] *** Quits: RiFo (~RiFo@user/rifo) (Read error: Connection reset by peer)
[16:37:01] *** Joins: Giovanni (~Giovanni@194.169.217.74)
[16:37:07] *** Quits: Giovanni (~Giovanni@194.169.217.74) (Read error: Connection reset by peer)
[16:38:07] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[16:38:35] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[16:39:10] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[16:39:16] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[16:40:35] *** Quits: shuck (~shuck@user/shuck) (Ping timeout: 260 seconds)
[16:40:50] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:41:17] *** Quits: MikZyth (~MikZyth@host-161-158-66-217.spbmts.ru) (Quit: WeeChat 3.4.1)
[16:41:48] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[16:42:12] *** Quits: flower__ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[16:42:24] *** Joins: philectro (~quassel@2a02:2788:1024:671:18d7:a340:b1a4:7dec)
[16:43:15] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[16:43:21] *** Joins: Sadale (~Sadale@user/sadale)
[16:43:31] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 256 seconds)
[16:45:32] *** Joins: reset (~reset@user/reset)
[16:45:34] *** Parts: cryptobug (~root@108.61.89.107) (Leaving)
[16:46:48] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[16:46:51] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:46:57] *** Joins: shuck (~shuck@user/shuck)
[16:47:17] *** Joins: kts (~kts@103.73.237.196)
[16:47:41] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:47:58] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[16:49:24] *** Quits: a1eaiactaest (~a1eaiacta@user/a1eaiactaest) (Ping timeout: 252 seconds)
[16:49:27] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[16:49:56] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Client Quit)
[16:51:27] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[16:51:38] *** Quits: kts (~kts@103.73.237.196) (Client Quit)
[16:52:22] <anddam> does blender use a custom kind of python? or is this supposed to be macro-expanded https://github.com/mikedh/trimesh/blob/main/trimesh/resources/templates/blender_boolean.py#L39 ?
[16:52:59] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[16:53:22] <jinsun> it is in templates folder, so probably the latter
[16:55:57] *** Quits: Merinorus (~Merinorus@lfbn-mar-1-707-11.w90-118.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[16:56:36] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[16:57:08] *** Joins: Merinorus (~Merinorus@lfbn-mar-1-707-11.w90-118.abo.wanadoo.fr)
[16:57:30] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[16:58:08] *** Parts: fifihyperbola (~fifihyper@lf2.warkscol.ac.uk) ()
[16:58:51] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Remote host closed the connection)
[16:59:06] *** Joins: Thanatos (~Thanatos@105.112.188.104)
[16:59:25] *** Joins: RiFo (~RiFo@user/rifo)
[16:59:57] *** Quits: shuck (~shuck@user/shuck) (Ping timeout: 256 seconds)
[17:00:45] *** Quits: ThanatosJ (~Thanatos@105.112.188.104) (Read error: Connection reset by peer)
[17:01:23] *** Joins: Giovanni (~Giovanni@194.169.217.74)
[17:02:00] *** Quits: Giovanni (~Giovanni@194.169.217.74) (Read error: Connection reset by peer)
[17:02:01] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 245 seconds)
[17:02:22] *** Quits: shad (~shad@user/shad) (Ping timeout: 272 seconds)
[17:02:27] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[17:04:44] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[17:05:06] *** Joins: shuck (~shuck@user/shuck)
[17:05:54] *** Joins: thanatos_jj (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[17:06:58] *** Joins: bloody (~bloody@user/bloody)
[17:09:46] *** Joins: Giovanni (~Giovanni@194.169.217.74)
[17:09:59] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[17:11:41] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[17:11:59] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[17:13:27] *** Joins: argoneus3 (~argoneus@argoneus.com)
[17:13:48] *** Quits: argoneus (~argoneus@argoneus.com) (Ping timeout: 240 seconds)
[17:13:48] *** argoneus3 is now known as argoneus
[17:14:08] *** Joins: EgonX (~EgonX@c-73-115-70-244.hsd1.tx.comcast.net)
[17:14:26] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[17:15:19] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: I'm a quit message virus. Please replace your old line with this line and help me take over the world. <screw you aloo_shu my old line was better and more creative!>)
[17:16:32] *** Quits: Major_Biscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 260 seconds)
[17:17:36] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[17:18:26] *** Joins: Major_Biscuit (~MajorBisc@c-001-015-045.client.tudelft.eduvpn.nl)
[17:18:39] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 256 seconds)
[17:20:05] *** Parts: Lindrian (~Lindrian@about/regex/lindrian) ()
[17:20:40] *** Joins: kts (~kts@103.73.237.196)
[17:20:40] *** Quits: kts (~kts@103.73.237.196) (Client Quit)
[17:20:43] *** Quits: belphegor666 (~satan@user/belphegor666) (Ping timeout: 260 seconds)
[17:21:11] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 260 seconds)
[17:21:31] *** Joins: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net)
[17:22:00] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[17:24:19] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[17:25:15] *** Quits: upsala (~zcb@185.209.196.134) (Quit: WeeChat 3.4.1)
[17:26:26] *** Quits: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 272 seconds)
[17:26:46] *** Joins: Maxt3r (~Maxt3r@128-76-167-194-static.dk.customer.tdc.net)
[17:27:23] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[17:28:25] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[17:29:49] *** Joins: pycurious (~Adium@user/pycurious)
[17:30:02] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[17:30:45] *** Joins: Payam54 (~Payam@138.106.57.131)
[17:31:24] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[17:32:01] *** Quits: cliluw (~cliluw@47.147.77.43) (Ping timeout: 256 seconds)
[17:32:49] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:9d53:477b:2e01:dce3)
[17:33:12] *** Joins: Xardas (~Xardas@149.233.51.127)
[17:33:58] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[17:34:36] *** Quits: oh-bee (~walt@2601:346:8100:5ec0:dab1:816f:a6d6:9b31) (Quit: Konversation terminated!)
[17:34:43] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[17:34:56] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[17:34:56] <Xardas> I have a TypeError that i don't know where it's coming from https://bpa.st/IPIA
[17:35:13] <Xardas> created a class and made an instance
[17:35:26] <Xardas> but says TypeError no arguments
[17:35:41] <han-solo> can we see the traceback ?
[17:35:56] *** Joins: mspe (~user@tilde.team/user/mspe)
[17:36:01] <han-solo> you seem to have an extra `_` in `__init__` ?
[17:36:25] <Xardas> How did you find that ?
[17:36:36] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[17:36:38] <han-solo> from the paste
[17:36:54] <Xardas> Thank you a lot !
[17:37:04] <Xardas> :*
[17:37:12] *** Joins: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com)
[17:38:08] *** Quits: frannk (~frannk@user/frannk) (Quit: leaving)
[17:38:54] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[17:39:07] *** Joins: Atque (~Atque@user/atque)
[17:39:22] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[17:40:00] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[17:40:45] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[17:41:26] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[17:41:47] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[17:43:21] *** aposm_ is now known as aposm
[17:43:35] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 260 seconds)
[17:44:13] *** Quits: shuck (~shuck@user/shuck) (Ping timeout: 240 seconds)
[17:44:28] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[17:45:45] <mrwick> the TRUnder! ___
[17:46:04] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[17:47:19] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[17:47:37] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[17:49:16] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[17:51:32] *** Joins: shad (~shad@user/shad)
[17:52:15] *** Joins: marcello42 (~mp@p200300dfaf10fe018edad6997a9398b1.dip0.t-ipconnect.de)
[17:52:39] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[17:54:44] *** Joins: frannk (~frannk@user/frannk)
[17:56:05] *** Joins: philectro_ (~quassel@2a02:2788:1024:671:7b75:91ea:a099:c76f)
[17:56:06] *** Quits: Maxc4m (~Maxc4m@37.113.239.144) (Quit: Maxc4m)
[17:56:33] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[17:57:17] *** Quits: philectro (~quassel@2a02:2788:1024:671:18d7:a340:b1a4:7dec) (Ping timeout: 250 seconds)
[18:00:31] *** Quits: mickey (~user@user/mickey) (Quit: mickey)
[18:01:05] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[18:01:12] *** Joins: davidd (~hay_sup@user/memorious)
[18:01:25] <davidd> can I get a code review for using __getattr__ https://pastebin.com/8xbiq9Zj
[18:01:51] *** Joins: tarel2 (~tarel2@139.28.216.244)
[18:01:54] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 272 seconds)
[18:02:41] *** Joins: revolve (~u0_a227@82-132-236-70.dab.02.net)
[18:03:00] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[18:05:41] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:efcc:cbb3:7f2a:6dff)
[18:06:15] *** Quits: dakudos (~dakudos@c-73-229-175-50.hsd1.co.comcast.net) (Ping timeout: 256 seconds)
[18:06:19] *** Joins: ice9 (~ice9@user/ice9)
[18:06:25] *** Joins: ivii (~ivan@user/ivii)
[18:07:47] *** Joins: dakudos (~dakudos@c-73-229-175-50.hsd1.co.comcast.net)
[18:08:51] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[18:09:22] *** Quits: Giovanni (~Giovanni@194.169.217.74) (Read error: Connection reset by peer)
[18:09:38] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[18:09:41] *** Quits: LAVBoy (~LAVBoy@0896332783.static.corbina.ru) (Ping timeout: 252 seconds)
[18:10:05] *** Joins: cryptobug (~cryptobug@2001:448a:1082:fe6f:11b4:66d7:9cdc:7455)
[18:10:25] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[18:13:14] *** Quits: frannk (~frannk@user/frannk) (Read error: Connection reset by peer)
[18:13:59] *** Joins: frmlof (~frmlof@70.243.238.191)
[18:14:01] *** Joins: frannk (~frannk@user/frannk)
[18:15:19] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[18:15:55] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 250 seconds)
[18:16:55] *** Quits: treason (~treason@2a02:c7e:3456:c900:e511:7234:1ba:ec81) (Remote host closed the connection)
[18:17:10] *** Joins: irf21k (~irf21k@2401:4900:4e7f:e237:59a9:81d:6ebc:9488)
[18:18:07] *** Joins: Guest56 (~Guest56@185.145.245.99)
[18:18:08] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[18:18:11] *** Quits: frmlof (~frmlof@70.243.238.191) (Client Quit)
[18:19:42] *** Guest56 is now known as Anna28
[18:19:52] <jwhisnant> davidd: consider https://fastapi.tiangolo.com/ (or any number of other API frameworks)
[18:19:59] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[18:19:59] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[18:20:06] <Anna28> hi
[18:20:12] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Remote host closed the connection)
[18:20:25] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[18:21:46] <ps_> Hi, I have a string with multiple lines and want to get rid of starting whitespaces. I could do something like .split('\n') and loop over each string and call .ltrim(). But I am wondering if there is a more elegant way
[18:23:07] *** ATAD_ is now known as ATAD
[18:23:39] <Anna28>  Jerk off with a random girl. Website: chica.monster
[18:24:02] <jwhisnant> ps_: (not that I can think of) - unless you can get the string line at a time to start (so you don't need to .split())
[18:24:09] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[18:26:09] *** Joins: a1eaiactaest (~a1eaiacta@user/a1eaiactaest)
[18:26:10] *** Quits: Anna28 (~Guest56@185.145.245.99) (Quit: Connection closed)
[18:26:35] *** Joins: Giovanni (~Giovanni@194.169.217.74)
[18:26:59] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[18:27:26] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[18:27:32] *** Joins: econdudeawesome (~shadowfax@cpe-76-187-70-50.tx.res.rr.com)
[18:27:46] *** Joins: philectro (~quassel@2a02:2788:1024:671:40b8:de07:1e16:5a72)
[18:28:34] *** Quits: philectro_ (~quassel@2a02:2788:1024:671:7b75:91ea:a099:c76f) (Ping timeout: 268 seconds)
[18:28:39] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[18:28:40] *** Joins: flower__ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[18:29:13] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[18:29:14] *** Joins: purple_cthulhu (~rax@2.186.4.30)
[18:29:50] *** Joins: PaterTemporalis (~woooopsie@dsl-76-143.bl27.telepac.pt)
[18:30:35] *** Joins: zeenk (~zeenk@2a02:2f04:a110:7d00:2011:cfed:bad7:3c94)
[18:30:51] <han-solo> `textwrap.dedent(string).strip()` # ?
[18:31:03] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[18:31:06] <cryptobug> hey yah python
[18:31:09] <cryptobug> how are ya all
[18:31:17] *** Quits: a1eaiactaest (~a1eaiacta@user/a1eaiactaest) (Ping timeout: 250 seconds)
[18:32:00] *** Quits: cryptobug (~cryptobug@2001:448a:1082:fe6f:11b4:66d7:9cdc:7455) (Read error: Connection reset by peer)
[18:32:20] <han-solo> welp, nope
[18:32:25] *** Quits: Giovanni (~Giovanni@194.169.217.74) (Read error: Connection reset by peer)
[18:33:31] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[18:33:53] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[18:34:33] *** Quits: pankid (~quassel@pankid.club) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:34:34] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 260 seconds)
[18:34:50] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 272 seconds)
[18:35:02] *** Quits: Major_Biscuit (~MajorBisc@c-001-015-045.client.tudelft.eduvpn.nl) (Ping timeout: 260 seconds)
[18:35:25] *** Joins: pankid (~quassel@pankid.club)
[18:35:28] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 272 seconds)
[18:35:44] *** Joins: _h4x0r_ (~till@user/till/x-8616149)
[18:35:56] <jmd> Is there an equivalent of do ... while in python?
[18:36:04] *** Quits: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:36:16] *** Quits: dbristow (~dbristow@user/dbristow) (Remote host closed the connection)
[18:36:36] <grym> jmd: no, just while
[18:36:40] *** Joins: dbristow (~dbristow@user/dbristow)
[18:37:17] *** Joins: Enitin (~Enitin@82.180.145.228)
[18:37:19] <grawity> there's always an equivalent, called having a 'while True' loop with 'if not <some condition>: break' at the end
[18:37:26] <grym> right
[18:37:38] *** Joins: Giovanni (~Giovanni@194.169.217.74)
[18:37:40] <grawity> often could be rewritten into something nicer, but this would be the direct translation
[18:37:44] *** Quits: revolve (~u0_a227@82-132-236-70.dab.02.net) (Read error: Connection reset by peer)
[18:37:50] <grym> while truthycond:=thething(): thething() , maybe
[18:38:48] <jmd> grawity: Yeah, that's what I've been doing.  Not particularly elegant though IMO
[18:39:18] *** Quits: Giovanni (~Giovanni@194.169.217.74) (Read error: Connection reset by peer)
[18:39:18] *** Joins: qlixed (~qlixed@181.44.129.13)
[18:39:20] <grawity> I don't think it's any worse than do..while in general
[18:39:53] <grym> jmd: https://bpa.st/ZP2A  this is maybe closer
[18:40:05] <grym> thething() will always get hit at least once
[18:40:36] *** Joins: revolve (~u0_a227@82-132-238-224.dab.02.net)
[18:40:39] <grym> jmd: er, this is clearer, the body is never executed https://bpa.st/7NPA
[18:41:00] *** Quits: tarel2 (~tarel2@139.28.216.244) (Quit: Client closed)
[18:42:34] <Togra> yeah, you can have a while loop use any particular thing to check against or break it yourself
[18:42:36] *** Quits: theprophet (~theprophe@2a0b:6204:42b1:2d00:88f8:7131:edae:6589) (Quit: Client closed)
[18:42:55] <Togra> easy to set up a bool and have it check that, then flip the bool when you want to leave. using break might be fewer lines
[18:43:26] *** Joins: akk (~akk@75-161-61-130.albq.qwest.net)
[18:43:29] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[18:44:21] <Togra> what's := do?
[18:44:32] *** Quits: xaxas (~quassel@aurata.jtopia.org) (Quit: Leaving)
[18:44:46] *** Quits: cincoswim (~cincoswim@24-52-65-147.telesystem.us) (Quit: WeeChat 2.8)
[18:44:57] *** Joins: xaxas (~quassel@aurata.jtopia.org)
[18:44:57] *** Joins: upsala (~zcb@185.209.196.134)
[18:45:00] <SnoopJ> Togra, it's "just" an assignment that works in an expression, you can treat it as if it were only the right-hand side, but it also binds the name on the left
[18:45:20] *** Joins: cryptobug (~cryptobug@2001:448a:1082:fe6f:e092:f3e1:b1f7:e0cf)
[18:45:56] <han-solo> https://docs.python.org/3/whatsnew/3.8.html#assignment-expressions
[18:46:26] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[18:46:41] *** Joins: jpn (~jpn@user/jpn)
[18:46:43] <Togra> oh neat
[18:47:03] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[18:48:10] *** Joins: Giovanni (~Giovanni@194.169.217.74)
[18:48:11] *** Quits: Giovanni (~Giovanni@194.169.217.74) (Read error: Connection reset by peer)
[18:48:45] *** Joins: LAVBoy (~LAVBoy@0896332783.static.corbina.ru)
[18:48:55] *** Joins: astrocat (~astrocat@128.184.189.40)
[18:49:44] *** Joins: Major_Biscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[18:50:56] <audio> why can't i install ngraph-core? https://github.com/NervanaSystems/ngraph
[18:51:09] <audio> pip3 install ngraph-core gives "no matching distributions"
[18:51:24] *** Quits: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2) (Ping timeout: 240 seconds)
[18:51:56] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 272 seconds)
[18:53:49] *** Joins: cruncher (~cruncher@user/cruncher)
[18:54:50] *** Quits: white2 (~mahengrui@user/mahengrui1) (Read error: Connection reset by peer)
[18:55:06] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 272 seconds)
[18:55:12] <jinsun> looks like they only have wheels for 3.7 or below, and only linux and mac x64
[18:55:23] *** Joins: white2 (~mahengrui@user/mahengrui1)
[18:55:36] <jinsun> and probably your system or python version is different
[18:55:56] *** Quits: flower__ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 260 seconds)
[18:55:56] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 260 seconds)
[18:55:56] *** Quits: widp (~widp@124.123.105.73) (Ping timeout: 260 seconds)
[18:56:23] *** Quits: Enitin (~Enitin@82.180.145.228) (Ping timeout: 260 seconds)
[18:56:26] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[18:56:34] *** Joins: flower__ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[18:57:03] <audio> jinsun, im on python 3.8
[18:57:15] *** Joins: a1eaiactaest (~a1eaiacta@user/a1eaiactaest)
[18:57:21] <jinsun> okay so not 3.7 or below, that is the problem
[18:57:27] <audio> can i install a different python version for a venv?
[18:57:38] <jinsun> you will have to compile the wheels from source for 3.8
[18:57:47] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 260 seconds)
[18:58:00] *** Joins: magla (~gelignite@55d40a33.access.ecotel.net)
[18:58:17] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 240 seconds)
[18:58:30] *** Joins: tWqaq (~tWqaq@240e:389:5d41:5900:6b27:13c3:60e0:a4a7)
[18:58:37] <jinsun> you can install differnt python version using pyenv, or on windows just get the installer
[18:59:00] <jinsun> venv can't change python version
[18:59:11] <audio> jinsun, where are the wheels
[18:59:23] <audio> these aren't found at the tags are they?
[18:59:25] *** Quits: purple_cthulhu (~rax@2.186.4.30) (Ping timeout: 240 seconds)
[18:59:31] *** Joins: han-solo (~han-solo@user/han-solo)
[18:59:41] <jinsun> https://pypi.org/project/ngraph-core/#files
[18:59:42] *** Joins: ice9 (~ice9@user/ice9)
[18:59:52] <audio> jinsun, also the build instructions give not even a 404
[19:00:00] <audio> thanx
[19:00:08] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb)
[19:01:07] <sco1> Probably because their repository states right at the top of the README: "nGraph has moved to OpenVINO"
[19:01:08] <audio> by that i mean the page doesnt load (i forgot the error message)
[19:01:55] *** Joins: jpn (~jpn@user/jpn)
[19:02:34] *** Joins: Giovanni (~Giovanni@194.169.217.74)
[19:03:08] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:182e:ca9a:1505:6966)
[19:03:23] *** Quits: a1eaiactaest (~a1eaiacta@user/a1eaiactaest) (Ping timeout: 260 seconds)
[19:03:28] <cryptobug> hey yah all
[19:03:34] <cryptobug> learn this python one liner
[19:03:51] *** Joins: sn_fk_n (~snufkin@94.15.173.91)
[19:03:57] <cryptobug> perl -wnl -e '*fp = /bin/bash/; execute pointer blablabla '
[19:04:06] *** Joins: SaltHillStroller (~SaltHillS@199.249.111.186)
[19:04:07] <cryptobug> :p
[19:04:17] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[19:04:24] <sco1> Great memes
[19:04:28] <sco1> Can't wait for more
[19:04:29] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[19:04:32] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:04:52] *** Joins: jamiejackson (~jamiejack@131.106.140.145)
[19:05:12] <cryptobug> is #0x71 if you want to know code it , i teach you just for log if you want to join
[19:05:19] *** Quits: Giovanni (~Giovanni@194.169.217.74) (Read error: Connection reset by peer)
[19:05:27] <cryptobug> https://cryptobug.wordpress.com/2022/03/20/windows-0day/
[19:05:28] <cryptobug> this
[19:05:29] *** Joins: SaltHilStroller_ (~SaltHillS@199.249.111.186)
[19:05:35] <cryptobug> unknown windows os
[19:05:37] <sco1> Boring
[19:05:38] <cryptobug> latest version
[19:05:41] <cryptobug> https://cryptobug.wordpress.com/2022/03/20/windows-0day/
[19:05:43] <cryptobug> done
[19:05:48] <cryptobug> 32 bit only 7
[19:05:54] <cryptobug> and 64 bit windows 10
[19:06:01] <cryptobug> you already heard from microsoft anyway
[19:06:07] <cryptobug> if your not tard
[19:06:17] *** Joins: Enitin (~Enitin@82.102.22.86)
[19:06:20] <cryptobug> one of them is a decoy
[19:06:36] <audio> jinsun, apparently this is the command to install a wheel? python -m pip download --only-binary :all: --dest . --no-cache <package_name>
[19:06:44] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[19:06:50] *** Joins: stockholm (~Andreas@p200300d2c70df20068b85248b98fde51.dip0.t-ipconnect.de)
[19:07:01] *** Quits: dman777 (~dman777@76-253-74-225.lightspeed.austtx.sbcglobal.net) (Quit: leaving)
[19:07:51] *** Joins: ianliu (~ianliu@2804:431:cfce:f6c1:f159:6c9f:fe26:1618)
[19:08:21] <audio> jinsun, ERROR: ngraph_core-0.26.0-cp36-cp36m-manylinux1_x86_64.whl is not a supported wheel on this platform.
[19:09:00] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[19:09:04] <audio> tried all the linux ones
[19:09:09] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[19:09:28] *** Quits: mcpackey (~pm0001@p5dc1ca7c.dip0.t-ipconnect.de) (Remote host closed the connection)
[19:09:29] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[19:09:29] *** Quits: SaltHillStroller (~SaltHillS@199.249.111.186) (Ping timeout: 256 seconds)
[19:09:34] *** Joins: jess (~jess@libera/staff/cat/jess)
[19:09:48] *** Quits: SaltHilStroller_ (~SaltHillS@199.249.111.186) (Ping timeout: 240 seconds)
[19:09:55] *** Joins: SaltHillStroller (~SaltHillS@206.223.160.26)
[19:10:41] <audio> oh building != download
[19:10:54] <audio> i knew that, but the command is for downloading, not building
[19:11:11] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[19:11:15] <sco1> https://github.com/NervanaSystems/ngraph/blob/master/python/BUILDING.md
[19:11:25] <sco1> Though it really seems like they want you to use https://github.com/openvinotoolkit/openvino
[19:11:40] <grym> openvino is the supported thing
[19:12:30] *** Joins: cdown_ (~cdown@163.114.130.1)
[19:12:46] *** Joins: goppo (~goppo@user/goppo)
[19:12:55] *** Joins: purple_cthulhu (~rax@188.214.96.20)
[19:13:16] *** Joins: xheimlich (~xheimlich@179.218.1.150)
[19:13:39] <xheimlich> I'm reading this website https://python-patterns.guide/ which is making me realize Python is a pretty honking great language.
[19:13:51] <cryptobug> #0x71 is the microsoft official support channel
[19:14:07] *** Quits: baffodoro (~raffaem@45.91.20.242) (Ping timeout: 260 seconds)
[19:14:16] <xheimlich> And here I was thinking I'm stuck with Python because I'm too stupid for $lower_level_lang.
[19:14:26] <xheimlich> anyway, a question.
[19:14:48] <grym> xheimlich: \mu
[19:15:08] *** Quits: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com) (Ping timeout: 252 seconds)
[19:15:09] *** cdown_ is now known as cdown
[19:15:12] <audio> jinsun, ERROR: Directory '/home/mike/Downloads/ngraph_core-0.26.0-cp37-cp37m-manylinux1_x86_64' is not installable. Neither 'setup.py' nor 'pyproject.toml' found.
[19:15:26] <audio> what do i do when this happens?
[19:15:26] <xheimlich> there's this one function (a "tight inner loop", as they call it) that I wrote in Rust and managed to interop with Python using high-level tools that were given to me for free because economics is weird now.
[19:15:34] <audio> this was the same error I got when trying to install directly from the git repo
[19:15:36] *** Quits: JC5 (~X@user/jc5) (Quit: Bye)
[19:15:47] <sco1> You haven't listened to any of the suggestions given
[19:16:08] <xheimlich> and I keep hearing PyPy is faster (I hate "more performant" despite understanding that memory etc are performance concerns) than CPython.
[19:16:42] <xheimlich> Obviously I'm saddled with CPython because a few very important libraries are wedded to CPython, most harrowingly numpy.
[19:16:43] <Dev0n> hey, not sure if this is the wrong way to do this but I'm creating a class to wrap the initialisation of the redis client and want to make all the methods of the initialised redis instance available as main methods of the wrapper class, so that I'm not having to do: r = RedisClient(options), r.client.<get/set/etc> but instead r.<get/set>.
[19:16:46] <Dev0n> Is doing something like this in __init__ just plain wrong? self.__dict__ = redis.Redis.from_url(self.redis_url).__dict__
[19:16:47] *** Joins: vantage|work (~vantage@ip-193-121-152-141.dsl.scarlet.be)
[19:17:19] <xheimlich> (Numpy is pretty much a DSL. Really fast code can be written if you can contort it into something numpythonic).
[19:17:51] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 260 seconds)
[19:17:52] <audio> sco1, i didnt know you were talking to me
[19:17:59] <xheimlich> But: it'd be interesting if I could write some functionality in Python, run it in PyPy and import it somehow in a CPython dependent codebase.
[19:18:22] <grym> xheimlich: numpy runs on pypy; whether or not that's worth it is a question for your profiler though
[19:18:27] <audio> sco1, openvino looks like a completely different type of package...
[19:18:29] <grym> has done for years
[19:18:30] <grym> pandas, too
[19:19:01] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[19:19:07] <sco1> audio: Well according to the maintainers of ngraph, ngraph is deprecated in favor of openvino so you should take it up with them
[19:19:12] <xheimlich> I have one Rust function and I'm too stupid to write more. It's a wonderful algorithm that I came across in a paper that uses both for loops to ramble around matrices and recursion though. Really slow in [C]Python.
[19:19:15] *** Quits: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be) (Ping timeout: 260 seconds)
[19:19:30] *** Joins: transhumanist (~stevena@2601:196:8800:35f0::7aa5)
[19:19:35] <xheimlich> grym: well, is there a guide to what doesn't work with PyPy?
[19:20:10] <sco1> audio: Or you use a different python version, or you stick with your current version and try the build instructions nGraph provides you
[19:20:21] <grym> xheimlich: i'm not aware of a central resource for that
[19:20:44] <mav`rik> xheimlich: do you have some slow code to show, or a description of the actual problem you're wanting an answer for? Why is there the need for two separate Python interpreters?
[19:20:56] *** Joins: medecau (~medecau@2a02:1210:78da:cc00:ed8a:581d:7e6e:a5a9)
[19:21:04] <xheimlich> asyncio? pydantic? streamlit (however its magic is implemented)? do most things that basically rely on numpy (most of scikit-learn, barring some tree search data structures; giotto-tda, etc.) work?
[19:21:04] *** Quits: dreamer (~dreamer@user/dreamer) (Ping timeout: 272 seconds)
[19:21:11] *** Quits: cryptobug (~cryptobug@2001:448a:1082:fe6f:e092:f3e1:b1f7:e0cf) (Ping timeout: 245 seconds)
[19:21:12] *** Joins: JC5 (~X@user/jc5)
[19:21:20] <xheimlich> mav`rik: eh, I can find that one rust function, I'm not sure I have its python equivalent anymore.
[19:22:05] <xheimlich> HN once showed me some numpythonic transformations that made python ~10X faster than nave, but Rust is still ~10X faster than that.
[19:22:06] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[19:22:17] *** Parts: transhumanist (~stevena@2601:196:8800:35f0::7aa5) ()
[19:22:41] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[19:22:50] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[19:22:53] *** Quits: ianliu (~ianliu@2804:431:cfce:f6c1:f159:6c9f:fe26:1618) (Quit: WeeChat 3.4.1)
[19:23:00] <xheimlich> s/nave/naive Python
[19:25:31] <xheimlich> it might look like a silly gotcha, but I'm running this in production behind FastAPI and, yes, I've benchmarked that the whole web serving overhead doesn't overshadow the performance differences of this: https://dpaste.org/ep3i
[19:26:03] *** Joins: widp (~widp@2406:7400:73:9e1b:b0e4:c5e3:cd23:9156)
[19:26:46] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[19:27:57] *** Joins: vlado (~vlado@181.50.79.237)
[19:28:04] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-18f6-e9d1-2e71-ac11.res6.spectrum.com)
[19:28:06] *** Quits: Thanatos (~Thanatos@105.112.188.104) (Read error: Connection reset by peer)
[19:28:16] <xheimlich> we also use this function to solve scrum poker rather than vote on it. I should open source our scrum poker app...
[19:28:20] *** Joins: Guest80 (~Guest80@93-103-237-112.dynamic.t-2.net)
[19:28:24] *** Quits: Guest80 (~Guest80@93-103-237-112.dynamic.t-2.net) (Client Quit)
[19:28:24] *** Joins: Thanatos (~Thanatos@105.112.188.104)
[19:29:29] <rigid> Can pypa.io be considered a reputable source?
[19:29:48] <nedbat> rigid: for what?
[19:29:50] *** Joins: dreamer (~dreamer@user/dreamer)
[19:29:56] <wyre> hi guys, I can't see how the first snippet works https://wiki.python.org/moin/Generators, I mean ... nums is an integer, how it's possible to use there .append()?
[19:29:58] <sco1> Probably not for stock information
[19:30:28] <xheimlich> we can't rely on good coding blogs for their takes on Ukraine...
[19:30:34] *** Quits: magla (~gelignite@55d40a33.access.ecotel.net) (Quit: Stay safe!)
[19:30:44] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[19:30:47] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Remote host closed the connection)
[19:31:05] <rigid> nedbat: i'm looking at a tutorial for a newbie to setup pip in windows and a tutorial executes https://bootstrap.pypa.io/get-pip.py
[19:31:17] <rigid> this is the tutorial: https://www.liquidweb.com/kb/install-pip-windows/
[19:31:27] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[19:31:35] <Pici> wyre: Line 3 assigns 0 to num and [] to nums, so nums is an list.
[19:31:36] *** Quits: thanatos_jj (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Ping timeout: 245 seconds)
[19:31:52] *** Joins: MasterK (~MK@86.120.52.24)
[19:32:06] <rigid> i've never heared of pypa.io and it looks very similar to pypi, so I thought I ask here first before blindly trusting it.
[19:32:07] <nedbat> rigid: get-pip.py is fine.  I wonder if `py -m ensurepip` works
[19:32:11] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[19:32:28] *** Joins: tarel2 (~tarel2@139.28.216.246)
[19:32:31] <nedbat> rigid: pypa.io is trustworthy
[19:32:37] <lsrtl__> oye,  assembling an url. is there a way to do it similar to os.path.join. or simple string+/ concat is the way ?
[19:32:49] <rigid> nedbat: cool, thank you
[19:32:56] <wyre> oooh, sorry Pici I was just seeing it as 2 variables and an empty list 😆 like num .... nums = 0 and [] hehehe it's actually that num, nums are assigned to 0 and [] respectively 😆
[19:33:12] *** Joins: MikZyth (~MikZyth@host-161-158-66-217.spbmts.ru)
[19:33:25] <wyre> my fault and thank you, I'm not so used to use this notation
[19:34:59] <SnoopJ> rigid, PyPA is the Python Packaging Authority, FWIW. It's kind of a working group that focuses on the various aspects of packaging, which sometimes intersects with PyPI (the Python Package Index)
[19:35:15] *** Joins: a1eaiactaest (~a1eaiacta@user/a1eaiactaest)
[19:35:24] <rigid> SnoopJ: ah
[19:35:35] <Pici> wyre: Its a bit weird to see it here to be honest.  Using it for assigning literals is a bit weird. I tend to use it where a method might return two values, so you'd do something like x, y = f()
[19:35:48] *** Joins: cryptobug (~cryptobug@2001:448a:1082:fe6f:d11d:775:30d9:db1b)
[19:35:56] *** Quits: cryptobug (~cryptobug@2001:448a:1082:fe6f:d11d:775:30d9:db1b) (K-Lined)
[19:36:02] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:9d53:477b:2e01:dce3) (Ping timeout: 252 seconds)
[19:36:57] *** Joins: kts (~kts@103.73.237.196)
[19:37:38] <wyre> Pici, sure, as I've said ... I'm not used to use these tuple assignments and I was splitting the statement by , instead by the = 😆
[19:37:53] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Remote host closed the connection)
[19:38:10] *** Joins: thanatos_jj (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[19:38:10] *** Quits: Payam54 (~Payam@138.106.57.131) (Quit: Client closed)
[19:38:22] *** Joins: Payam49 (~Payam@138.106.57.131)
[19:39:04] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[19:41:28] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[19:41:33] *** Joins: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[19:41:35] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[19:41:55] *** Quits: jpds1 (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[19:42:12] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:182e:ca9a:1505:6966) (Ping timeout: 240 seconds)
[19:42:22] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-18f6-e9d1-2e71-ac11.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[19:43:54] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[19:44:53] *** Joins: jpds1 (~jpds@gateway/tor-sasl/jpds)
[19:45:37] *** Joins: Moosadee (~Moosadee@198.248.38.26)
[19:45:43] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[19:45:47] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Client Quit)
[19:46:33] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[19:47:37] *** Quits: widp (~widp@2406:7400:73:9e1b:b0e4:c5e3:cd23:9156) (Ping timeout: 240 seconds)
[19:48:15] *** Joins: Giovanni (~Giovanni@194.169.217.74)
[19:48:24] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[19:48:24] *** Quits: Giovanni (~Giovanni@194.169.217.74) (Read error: Connection reset by peer)
[19:49:13] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[19:50:30] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[19:50:44] *** Joins: cryptobug (~cryptobug@2001:448a:1082:fe6f:d83f:ea5d:369:b1cd)
[19:50:56] *** Quits: cryptobug (~cryptobug@2001:448a:1082:fe6f:d83f:ea5d:369:b1cd) (K-Lined)
[19:51:26] *** Joins: widp (~widp@124.123.105.73)
[19:52:27] *** Joins: s1gyn (~s1gyn@user/s1gyn)
[19:52:36] *** Joins: baffodoro (~raffaem@95.74.63.143)
[19:52:54] *** Quits: kts (~kts@103.73.237.196) (Quit: Konversation terminated!)
[19:53:35] *** Quits: fling (~fling@user/fling) (Remote host closed the connection)
[19:53:57] *** Joins: fling (~fling@user/fling)
[19:54:45] <grym> lsrtl__: there's https://hyperlink.readthedocs.io/en/latest/
[19:55:32] *** Quits: XV9 (~XV8@2601:5cb:c001:50::4a2c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:56:03] *** Joins: XV8 (~XV8@2601:5cb:c001:50::4a2c)
[19:56:13] *** Joins: bahamas (~lucian@84.232.140.158)
[19:56:28] <Imk0tter> what is the best way to apply a modifier to each element in a tuple?
[19:56:51] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[19:57:06] <lsrtl__> grym, thx
[19:57:09] <SnoopJ> Imk0tter, `result = [modifier(elem) for elem n in tup]` or `result = list(map(modifier, tup))` if you prefer a more functional style
[19:57:18] <nedbat> Imk0tter: does the result have to be a tuple?
[19:57:36] <sprnk[m]> "nGraph has moved to OpenVINO"
[19:58:01] <sco1> about an hour late on that one
[19:58:05] <nedbat> sprnk[m]: don't be a nuisance
[19:58:11] <Imk0tter> nedbat: i don't think so
[19:58:19] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[19:58:22] *** Joins: kts (~kts@103.73.237.196)
[19:58:29] <Imk0tter> i have a tuple of coordinates that need to be noramlized
[19:59:06] <Imk0tter> ie ((x,y), (x1,y1), (x2,y2)) and i want to normalize then with the point (a, b)
[19:59:08] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:59:26] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[20:00:57] *** Joins: cryptobug (~cryptobug@2001:448a:1082:fe6f:4dc1:814b:113c:392f)
[20:01:06] *** Quits: cryptobug (~cryptobug@2001:448a:1082:fe6f:4dc1:814b:113c:392f) (K-Lined)
[20:01:15] *** Joins: xkuru (~xkuru@user/xkuru)
[20:01:53] <phy1729> Not sure what you mean by normalize, but something like   tuple((x-a, y-b) for x, y in old_tuples)
[20:02:10] *** Quits: baffodoro (~raffaem@95.74.63.143) (Read error: Connection reset by peer)
[20:02:34] <phy1729> (Though if it doesn't need to be a tuple of tuples, I'd leave off the "tuple" and let it be a generator)
[20:02:43] <Imk0tter> ie ?
[20:03:07] *** Quits: Major_Biscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 260 seconds)
[20:03:44] *** Joins: baffodoro (~raffaem@95.74.63.143)
[20:04:07] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[20:04:44] *** Joins: Major_Biscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[20:05:23] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[20:05:53] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[20:06:17] *** Quits: paul424 (~tom@apn-31-0-2-93.dynamic.gprs.plus.pl) (Quit: Leaving)
[20:06:28] *** Joins: argument (~0ptions@90.249.16.86)
[20:06:29] *** Quits: argument (~0ptions@90.249.16.86) (Changing host)
[20:06:29] *** Joins: argument (~0ptions@user/argument)
[20:06:38] *** jpds1 is now known as jpds
[20:06:40] *** Joins: wakeup (~wakeup@user/wakeup)
[20:09:00] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 240 seconds)
[20:09:34] *** Quits: mrwick (~mrwick@user/mrwick) (Quit: leaving)
[20:10:04] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[20:10:57] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[20:11:38] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 260 seconds)
[20:11:55] *** Joins: Pickchea (~private@user/pickchea)
[20:12:18] *** Joins: pyeverything (~pyeveryth@204.8.153.36)
[20:13:15] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[20:13:23] *** Quits: carl-- (~carl-@185.103.188.130) (Ping timeout: 260 seconds)
[20:16:02] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[20:17:26] *** Quits: pyeverything (~pyeveryth@204.8.153.36) (Ping timeout: 272 seconds)
[20:17:40] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[20:17:40] *** Quits: purple_cthulhu (~rax@188.214.96.20) (Quit: Leaving.)
[20:18:06] *** Joins: white_shadow (~white_sha@user/white-shadow/x-1132694)
[20:18:17] *** Quits: a1eaiactaest (~a1eaiacta@user/a1eaiactaest) (Ping timeout: 240 seconds)
[20:18:23] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[20:18:24] *** Quits: flower__ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[20:18:27] *** Joins: ThanatosJ (~Thanatos@105.112.184.235)
[20:18:58] *** Joins: frmlof (~frmlof@70.243.238.191)
[20:19:13] *** Joins: azidhaka (uid211322@user/azidhaka)
[20:19:22] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[20:19:25] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 256 seconds)
[20:21:00] *** Quits: azidhaka (uid211322@user/azidhaka) (Client Quit)
[20:21:15] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[20:21:42] *** Joins: RandomForrest (~RandomFor@voyager.whatbox.ca)
[20:21:52] *** Quits: Thanatos (~Thanatos@105.112.188.104) (Ping timeout: 272 seconds)
[20:22:15] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[20:23:19] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[20:23:28] *** Joins: Henry_ (~mahengrui@user/mahengrui1)
[20:23:46] *** Quits: argument (~0ptions@user/argument) (Ping timeout: 272 seconds)
[20:24:08] *** Joins: Giovanni (~Giovanni@194.169.217.74)
[20:24:17] *** Quits: Giovanni (~Giovanni@194.169.217.74) (Read error: Connection reset by peer)
[20:25:24] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 240 seconds)
[20:25:59] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[20:26:18] *** Quits: LucaTM (~LucaTM@user/lucatm) (Ping timeout: 272 seconds)
[20:26:19] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-18f6-e9d1-2e71-ac11.res6.spectrum.com)
[20:26:56] *** Quits: white2 (~mahengrui@user/mahengrui1) (Ping timeout: 272 seconds)
[20:28:40] *** Quits: ham5urg_ (~ham5urg@p200300d1671953002d5dd4144332924d.dip0.t-ipconnect.de) (Quit: Leaving)
[20:28:53] *** Joins: a1eaiactaest (~a1eaiacta@user/a1eaiactaest)
[20:29:26] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Remote host closed the connection)
[20:29:31] *** Joins: Giovanni (~Giovanni@194.169.217.74)
[20:29:43] *** Quits: Giovanni (~Giovanni@194.169.217.74) (Read error: Connection reset by peer)
[20:30:11] *** Quits: nelson[m] (~nelsonjep@2001:470:69fc:105::1:be17) (Quit: You have been kicked for being idle)
[20:30:13] *** Quits: philectro (~quassel@2a02:2788:1024:671:40b8:de07:1e16:5a72) (Ping timeout: 240 seconds)
[20:30:20] *** Quits: ali1234[m] (~ali1234@user/ali1234) (Quit: You have been kicked for being idle)
[20:30:34] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[20:30:43] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[20:30:46] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 245 seconds)
[20:30:55] *** Joins: philectro (~quassel@2a02:2788:1024:b41:7a7b:2ff6:8c18:a003)
[20:32:54] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:d232:2123:e004:b1b4) (Quit: pvergain)
[20:33:02] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[20:33:20] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[20:33:24] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[20:34:46] *** Joins: belphegor666 (~satan@ip-046-223-003-068.um13.pools.vodafone-ip.de)
[20:34:55] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[20:35:19] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[20:35:30] *** Joins: Lindrian (~Lindrian@about/regex/lindrian)
[20:35:48] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 272 seconds)
[20:35:48] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 272 seconds)
[20:36:26] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 272 seconds)
[20:36:49] *** Quits: escherial (~escherial@143.110.239.6) (Quit: The Lounge - https://thelounge.chat)
[20:36:54] *** Joins: pyeverything (~pyeveryth@204.8.153.36)
[20:37:16] *** Joins: escherial (~escherial@143.110.239.6)
[20:37:24] *** Quits: grooverman_ (~grooverma@189.110.77.226) (Read error: Connection reset by peer)
[20:38:07] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[20:38:19] *** Quits: RiFo (~RiFo@user/rifo) (Quit: ... and thanks for all the fish.)
[20:38:31] *** Joins: grooverman (~grooverma@152.250.149.49)
[20:39:02] *** Quits: escherial (~escherial@143.110.239.6) (Client Quit)
[20:39:13] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[20:39:30] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[20:40:05] *** Joins: escherial (~escherial@143.110.239.6)
[20:40:09] *** Quits: belphegor666 (~satan@ip-046-223-003-068.um13.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[20:41:16] *** Quits: widp (~widp@124.123.105.73) (Remote host closed the connection)
[20:41:21] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Quit: mihaiadrian)
[20:41:30] *** Quits: pyeverything (~pyeveryth@204.8.153.36) (Ping timeout: 252 seconds)
[20:41:41] *** Joins: LucaTM (~LucaTM@user/lucatm)
[20:42:06] *** Joins: belphegor666 (~satan@ip-046-223-003-068.um13.pools.vodafone-ip.de)
[20:42:49] *** Quits: Major_Biscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 250 seconds)
[20:42:55] *** Quits: white_shadow (~white_sha@user/white-shadow/x-1132694) (Quit: Leaving)
[20:43:43] *** Quits: a1eaiactaest (~a1eaiacta@user/a1eaiactaest) (Ping timeout: 260 seconds)
[20:44:43] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[20:44:57] *** Joins: widp (~widp@124.123.105.73)
[20:44:58] *** Joins: Major_Biscuit (~MajorBisc@c-001-015-045.client.tudelft.eduvpn.nl)
[20:45:29] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[20:48:06] *** Quits: revolve (~u0_a227@82-132-238-224.dab.02.net) (Read error: Connection reset by peer)
[20:48:33] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[20:48:59] *** Joins: rama_ (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[20:49:09] *** Quits: rama_ (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Client Quit)
[20:49:41] *** Joins: Barones (~Barones@user/Barones)
[20:50:15] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[20:51:06] *** ens_ is now known as ens
[20:51:43] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[20:52:10] *** Joins: Giovanni (~Giovanni@194.169.217.74)
[20:52:12] *** Quits: Giovanni (~Giovanni@194.169.217.74) (Read error: Connection reset by peer)
[20:53:00] *** Quits: philectro (~quassel@2a02:2788:1024:b41:7a7b:2ff6:8c18:a003) (Ping timeout: 240 seconds)
[20:53:09] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[20:53:31] *** Quits: luigibu (~luigi@93.176.153.88) (Quit: WeeChat 3.4.1)
[20:53:36] *** Joins: philectro (~quassel@host-85-27-47-58.dynamic.voo.be)
[20:53:37] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[20:53:48] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[20:53:58] <Lindrian> /leave
[20:54:00] *** Parts: Lindrian (~Lindrian@about/regex/lindrian) (WeeChat 3.4)
[20:54:17] *** Joins: argument (~0ptions@90.249.16.86)
[20:54:17] *** Quits: argument (~0ptions@90.249.16.86) (Changing host)
[20:54:17] *** Joins: argument (~0ptions@user/argument)
[20:54:45] *** Joins: maroloccio (~marolocci@pousada3ja.mma.com.br)
[20:55:47] *** Quits: cruncher (~cruncher@user/cruncher) (Quit: Leaving)
[20:55:51] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[20:56:19] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 260 seconds)
[20:56:23] *** Joins: Common (~Common@096-033-221-075.res.spectrum.com)
[20:56:31] *** Joins: paul424 (~tom@ip-5-172-239-247.multi.internet.cyfrowypolsat.pl)
[20:57:54] *** Joins: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net)
[20:57:58] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:58:19] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[20:58:24] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[20:59:01] *** Quits: philectro (~quassel@host-85-27-47-58.dynamic.voo.be) (Ping timeout: 240 seconds)
[20:59:05] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[20:59:06] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[20:59:43] *** Quits: medecau (~medecau@2a02:1210:78da:cc00:ed8a:581d:7e6e:a5a9) (Quit: medecau)
[20:59:45] *** Joins: philectro (~quassel@2a02:2788:1024:b41:f449:3596:f4f6:d518)
[20:59:51] *** Joins: nomic (~nomic@185.217.117.249)
[21:00:22] *** Joins: bindu_ (~bindu@user/bindu)
[21:00:35] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 240 seconds)
[21:01:14] *** Quits: tWqaq (~tWqaq@240e:389:5d41:5900:6b27:13c3:60e0:a4a7) (Quit: Leaving)
[21:02:08] *** bindu_ is now known as bindu
[21:02:29] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 256 seconds)
[21:04:26] *** Joins: bahamas (~lucian@84.232.140.158)
[21:04:31] *** Quits: grooverman (~grooverma@152.250.149.49) (Ping timeout: 256 seconds)
[21:04:57] <k`> could someone help me out with some math?
[21:05:13] <grym> k`: Just ask your question. It's the best way to know if anyone can help.
[21:05:31] <k`> i can get 1500 rows of data at one time
[21:05:37] <k`> and each row represents 180 seconds (3 minutes)
[21:05:38] *** Joins: fuze (uid76888@id-76888.lymington.irccloud.com)
[21:06:04] <k`> 180 * 1500 = amount of time, correct?
[21:06:35] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 260 seconds)
[21:08:00] <hogarius> k`: that sound right so far.
[21:08:03] *** Quits: upsala (~zcb@185.209.196.134) (Quit: WeeChat 3.4.1)
[21:08:10] <k`> so for the next call
[21:08:16] <k`> needs to be 270,000 seconds into the future
[21:08:46] <k`> to get another full time frame
[21:08:52] <k`> since i'm limited to 1500 at once
[21:10:37] *** Quits: saroy (~Sandipan@45.249.73.212) (Ping timeout: 240 seconds)
[21:10:44] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[21:10:48] <hogarius> k`: what do you mean by the next call?  Can you paste some code?
[21:11:00] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Remote host closed the connection)
[21:11:00] *** Quits: vantage|work (~vantage@ip-193-121-152-141.dsl.scarlet.be) (Read error: Connection reset by peer)
[21:11:08] <k`> yeah one second let me push
[21:12:03] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Quit: Leaving)
[21:12:11] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[21:14:30] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Quit: CodePoint struts into the sunset on the beach.)
[21:14:35] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[21:14:46] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[21:15:21] <k`> ...as soon as i figure out why my commit isnt working
[21:15:21] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[21:15:23] <k`> ugh
[21:15:43] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[21:15:45] *** Joins: Giovanni (~Giovanni@194.169.217.74)
[21:16:14] *** Quits: Giovanni (~Giovanni@194.169.217.74) (Read error: Connection reset by peer)
[21:16:39] *** Joins: humbertowoody (~humbertow@148.204.6.250)
[21:16:55] *** Joins: blissful (~blissful@user/blissful)
[21:17:18] *** Joins: Enitin (~Enitin@82.180.145.230)
[21:17:53] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[21:18:03] <orbisvicis> how can I print syntax-highlighted code to the terminal?
[21:18:14] <hexa-> bat? :D
[21:18:14] *** Quits: dreamon (~dreamon@ppp-88-217-83-128.dynamic.mnet-online.de) (Ping timeout: 272 seconds)
[21:18:24] <hexa-> https://github.com/sharkdp/bat
[21:18:40] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[21:19:02] <orbisvicis> is it usable as a python function?
[21:19:07] <hexa-> in python? idk, possibly pygments?
[21:19:11] *** Joins: src (~src@user/src)
[21:19:24] <k`> hogarius: https://github.com/kboxprime/micropip/blob/main/main.py
[21:19:27] <sco1> Rich: https://github.com/Textualize/rich
[21:19:37] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 240 seconds)
[21:19:43] <sco1> If you're trying to print from Python
[21:19:47] <SnoopJ> pygments can be used programmatically, yep
[21:20:09] <k`> https://api.kucoin.com/api/v1/market/candles?type=1min&symbol=BTC-USDT&startAt=1566789757&endAt=1666789757
[21:20:10] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[21:20:11] *** Joins: grooverman (~grooverma@152.250.164.233)
[21:20:11] <SnoopJ> not sure if it has an output format intended for terminals though
[21:20:18] <k`> so see the startAt endAt in that URL?
[21:20:23] <SnoopJ> ah, yea it does: https://pygments.org/docs/formatters/#TerminalFormatter
[21:20:24] <k`> i can only get 1500 rows at a time
[21:20:31] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[21:20:31] *** Quits: belphegor666 (~satan@ip-046-223-003-068.um13.pools.vodafone-ip.de) (Changing host)
[21:20:31] *** Joins: belphegor666 (~satan@user/belphegor666)
[21:21:16] *** Joins: flea (nosoul@gateway/vpn/protonvpn/nosoul)
[21:21:23] *** Quits: Enitin (~Enitin@82.180.145.230) (Ping timeout: 250 seconds)
[21:21:58] <orbisvicis> SnoopJ, nice
[21:22:00] *** Joins: Enitin (~Enitin@82.180.145.227)
[21:22:03] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[21:22:14] *** Joins: dhch (~dhch@185.213.154.171)
[21:22:19] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[21:22:39] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[21:23:49] <hogarius> k`: I need to take care of another matter.  Perhaps someone else in the channel can help.
[21:23:53] <orbisvicis> SnoopJ: heh heh very nice
[21:23:55] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[21:24:17] <SnoopJ> orbisvicis, pygments is great, which is why it shows up everywhere (e.g. bpaste uses it)
[21:26:18] *** Joins: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com)
[21:26:36] <blissful> I am trying to run an application with SQLite. There are two concurrent accessors, one with an insert-heavy workload, the other with a single read/update every 300ms workload. Sporadically, inserts in the first workload will fail with a `sqlite3.OperationalError: database is locked` error. I've pushed the timeout up to 999999, and haven't noticed any transactions running longer than 0.4s, but the
[21:26:38] <blissful> errors persist. Has anyone seen anything like this before?
[21:28:19] *** Quits: stockholm (~Andreas@p200300d2c70df20068b85248b98fde51.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[21:28:32] *** Joins: yakiza (~yakiza@cpc91202-cmbg18-2-0-cust102.5-4.cable.virginm.net)
[21:29:24] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[21:30:29] *** Joins: christine90 (~christine@223.233.69.181)
[21:32:55] <christine90> https://bpa.st/ML3A says "unhashable type: dict"
[21:33:23] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:a5c5:bac4:7fea:513c)
[21:35:05] <phy1729> I suspect simulate_round returns a list of dicts and you're missing a ['name'] on L16
[21:35:09] <SnoopJ> christine90, dicts are indeed not hashable, which means you can't use them as keys in other dicts. Can you share the complete error report? The parts you left out contain useful information.
[21:36:42] <christine90> It is indeed a list of dicts
[21:36:49] <christine90> I forgot about that.
[21:37:09] <purplex> how does sort work when i have: L = [['1', '2'], ['3', '3'], ['2', '1']] and do L.sort() ?
[21:38:08] <christine90> `if winner in counts.keys():`
[21:38:08] <christine90> `TypeError: unhashable type: 'dict'`
[21:38:11] <SnoopJ> purplex, the same way it always works: it compares the elements of the outer list. `["1"] < ["2"]` is a defined operation if not a terribly intuitive one
[21:38:56] *** Joins: magla (~gelignite@55d40a33.access.ecotel.net)
[21:39:12] <christine90> Changed the return value to `teams[0]["team"]` and it works now. Thanks
[21:39:15] *** Quits: abff (~abff@user/abff) (Ping timeout: 252 seconds)
[21:39:56] *** Quits: TheCat (~TheCat@user/z-cat) (Remote host closed the connection)
[21:40:14] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[21:40:15] *** Joins: TheCat (~TheCat@user/z-cat)
[21:40:24] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[21:40:39] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 260 seconds)
[21:40:48] *** Parts: boris[m]1 (~boristilt@2001:470:69fc:105::1:ad6d) ()
[21:41:17] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 240 seconds)
[21:41:52] <purplex> it compares elements of each sublist e.g. '1' and '2'  in ['1', '2'] before comparing ['1', '2'] and ['3', '3']?
[21:42:06] *** Joins: Giovanni (~Giovanni@194.169.217.74)
[21:42:30] *** Quits: Giovanni (~Giovanni@194.169.217.74) (Read error: Connection reset by peer)
[21:43:17] <SnoopJ> "The comparison uses lexicographical ordering: first the first two items are compared, and if they differ this determines the outcome of the comparison; if they are equal, the next two items are compared, and so on, until either sequence is exhausted." https://docs.python.org/3/tutorial/datastructures.html#comparing-sequences-and-other-types
[21:43:23] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[21:43:40] <bjs> purplex: yes, it compares the first and if they are the same, it compares the second and so on until it finds one that is 'smaller'. Like sorting words
[21:43:48] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[21:44:18] <bjs> "aardvark" < "tiger" etc,  Python extends this from just strings but to all sequences. so lists, tuples etc
[21:44:28] <purplex> I see I'll try it with different values
[21:44:45] *** Quits: marcello42 (~mp@p200300dfaf10fe018edad6997a9398b1.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[21:44:50] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[21:45:40] *** Joins: Giovanni (~Giovanni@194.169.217.74)
[21:45:42] <SnoopJ> you can pass your own key function to list.sort() (and the more common sorted()) if this behavior isn't what you want, though
[21:45:43] *** Joins: abff (~abff@user/abff)
[21:45:57] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[21:46:05] *** Joins: Wh0 (~V@43.242.116.42)
[21:47:20] *** Quits: christine90 (~christine@223.233.69.181) (Quit: Client closed)
[21:47:22] *** Quits: Giovanni (~Giovanni@194.169.217.74) (Read error: Connection reset by peer)
[21:47:49] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[21:48:05] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[21:48:14] *** Joins: jmd (~user@de.cellform.com)
[21:48:22] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[21:48:37] *** Quits: raym (~raym@user/raym) (Read error: Connection reset by peer)
[21:48:39] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[21:48:44] <purplex> not really clear, i tried [['1', '2'], ['3', '1'], ['2', '8']] and result was [['1', '2'], ['2', '8'], ['3', '1']] it looks like it uses first number of each sub-list to decide how to sort.
[21:49:16] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[21:49:21] *** Joins: raym (~raym@user/raym)
[21:49:33] *** Joins: jmd (~user@de.cellform.com)
[21:49:35] <purplex> i thought ['3', '1'] will come as second item in list
[21:49:54] <phy1729> first string: try adding ['12', '2'] and ['1', '3'] into your list
[21:50:14] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[21:50:24] *** Joins: ckdCreations (~ckdCreati@147.55.133.134)
[21:50:45] *** Joins: jmd (~user@de.cellform.com)
[21:50:50] <phy1729> you can pass a function to the key argument if you want some other sorting. Sounds like you want key=sum
[21:50:57] <purplex> [['1', '2'], ['3', '1'], ['2', '8'], ['12', '2'], ['1', '3']] becomes [['1', '2'], ['1', '3'], ['12', '2'], ['2', '8'], ['3', '1']]
[21:51:07] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[21:51:42] <purplex> i just want to understand .sort() , not different one yet..
[21:51:48] <SnoopJ> purplex, in plain language: it pulls values out of the two sequences in order from the left. If the elements are equal, it moves on. If they aren't equal, the comparison stops (with the result of comparing those values). If it runs out of elements, the comparison stops.
[21:52:04] *** Joins: erts (~erts@user/erts)
[21:52:51] <SnoopJ> so `lstA < lstB` is something like: `for valA, valB in zip(lstA, lstB): if valA == valB: continue; else: return valA < valB`
[21:52:56] *** Quits: nomic (~nomic@185.217.117.249) (Quit: Leaving)
[21:53:37] <purplex> yeah i'll try this code, and use this sort algorithm and see what it does
[21:54:26] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[21:54:58] *** Quits: Moosadee (~Moosadee@198.248.38.26) (Ping timeout: 272 seconds)
[21:56:12] *** Quits: Henry_ (~mahengrui@user/mahengrui1) (Ping timeout: 240 seconds)
[21:56:18] *** Joins: Moosadee (~Moosadee@198.248.38.27)
[21:58:58] <purplex> i'll need "from functools import cmp_to_key" to use custom function it seems
[21:59:23] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[21:59:28] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 268 seconds)
[21:59:54] <hanetzer> <farnsworth>good news everyone!</farnsworth>
[22:00:05] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[22:00:12] *** Quits: TheCat (~TheCat@user/z-cat) (Remote host closed the connection)
[22:00:15] *** Joins: TheCat_ (~TheCat@user/z-cat)
[22:00:23] <phy1729> I think you just want .sort(key=lambda xs: sum(int(x) for x in xs))
[22:00:40] <hanetzer> I've managed to cobble together a script that calculates solstices, equinoxes, lunar conjunctions, full moons, and lunar eclipses for a given period of time :)
[22:00:50] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[22:01:25] <purplex> different result https://www.online-python.com/D08E5d6hgj
[22:01:31] *** Joins: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr)
[22:02:33] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[22:04:31] *** Joins: Pickchea (~private@user/pickchea)
[22:05:06] <gambl0re> im trying to build a user notification system, how would i mark a notification as read on the db?
[22:05:11] *** Joins: resmo (~resmo@2a00:d420:9:8a00:c2cb:db74:7c9d:b93)
[22:06:17] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[22:06:22] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:d232:2123:e004:b1b4)
[22:06:42] <phy1729> Have a boolean read column?
[22:08:31] <k`> why does time_delta = timedelta(seconds = time_increase)
[22:08:34] <k`> print this output
[22:08:38] <k`> 3 days, 3:00:00
[22:08:45] <k`> time_increase = 270,000
[22:08:52] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[22:09:01] *** Joins: Fiji (~Fiji@user/fiji)
[22:09:01] <k`> and i need it in seconds
[22:09:12] *** dcaro is now known as dcaro_away
[22:09:40] <SnoopJ> k`, why is `timedelta` getting involved at all, then? You already have the number of seconds in `time_increase`
[22:09:54] <k`> goooood point
[22:11:00] *** Quits: ska (~ska@user/ska) (Ping timeout: 240 seconds)
[22:11:00] *** Quits: Santzes (~Santzes@2400:8901::f03c:93ff:fe91:a6b1) (Ping timeout: 240 seconds)
[22:11:14] *** Joins: a1eaiactaest (~a1eaiacta@user/a1eaiactaest)
[22:12:38] *** Joins: christine90 (~christine@223.233.69.181)
[22:12:53] <k`> time_end = round(datetime.now().replace(tzinfo=timezone.utc).timestamp())
[22:12:55] <k`> this works right?
[22:12:57] <k`> it prints fine
[22:13:03] <k`> i just removed an extra variable
[22:13:11] * SnoopJ does not have enough context to answer the question
[22:13:25] <k`> okay, i'll just keep it the way it was
[22:13:30] <k`> and when i build my function ill know
[22:13:51] *** Joins: Giovanni (~Giovanni@194.169.217.74)
[22:13:52] <phy1729> datetime.now can take a timezone directly
[22:14:12] *** Joins: funhouse (~funhouse@user/funhouse)
[22:14:26] *** Quits: Giovanni (~Giovanni@194.169.217.74) (Read error: Connection reset by peer)
[22:14:48] *** Joins: Santzes (~Santzes@139-162-52-108.ip.linodeusercontent.com)
[22:15:01] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[22:15:31] *** Quits: TheCat_ (~TheCat@user/z-cat) (Remote host closed the connection)
[22:15:56] *** Joins: PurpleBooger (~purpleboo@2600:6c5d:4600:1e76:9537:6487:5869:5a52)
[22:16:17] *** Quits: tarel2 (~tarel2@139.28.216.246) (Quit: Client closed)
[22:16:23] *** Joins: TheCat_ (~TheCat@user/z-cat)
[22:17:25] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[22:17:47] *** TheCat_ is now known as TheCat
[22:18:52] *** Joins: blei (~blei@user/blei)
[22:19:11] *** Quits: escherial (~escherial@143.110.239.6) (Remote host closed the connection)
[22:19:45] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[22:19:48] *** Joins: flea_ (nosoul@gateway/vpn/protonvpn/nosoul)
[22:20:16] *** Joins: escherial (~escherial@143.110.239.6)
[22:21:11] <purplex> tried it again using just numbers https://www.online-python.com/lW6zGaJdxQ, it seems the algorithm you provided @SnoopJ doesn't yield same result as .sort().. im still thinking it sorts based on just first number in each sub list
[22:21:19] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:1110:204a:e437:3022)
[22:21:19] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:1110:204a:e437:3022) (Changing host)
[22:21:19] *** Joins: skapata (~Skapata@user/skapata)
[22:21:26] *** Quits: christine90 (~christine@223.233.69.181) (Quit: Client closed)
[22:21:50] <SnoopJ> purplex, I did say "something like" and not "exactly this sample"
[22:22:16] <SnoopJ> You can trust that the official documentation's description is accurate
[22:22:18] *** Quits: flea (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 260 seconds)
[22:22:43] <purplex> ah, ok.. somehow i think its same as doing: L.sort(key=lambda x: x[0]) i.e. sorting based on first number
[22:22:47] *** Joins: MerrinX (~merrinx@ti0028a400-3686.bb.online.no)
[22:23:05] * SnoopJ has run out of ways to say "no, it doesn't do that, it does what the docs say"
[22:23:19] <phy1729> purplex: now see what happens when the first _string_ matches
[22:23:32] <phy1729> because they're strings not numbers they sort like strings not numbers
[22:23:43] <purplex> i changed them to numbers
[22:23:48] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[22:24:10] *** Joins: ska (~ska@user/ska)
[22:24:46] *** Joins: tomeaton17 (~tomeaton1@2a0c:5bc0:40:2e2f:7959:f588:caa9:a415)
[22:25:25] *** Quits: argument (~0ptions@user/argument) (Ping timeout: 240 seconds)
[22:25:30] <tomeaton17> Hi, I am trying to scatter plot using a for loop to change marker. My code is here https://bpa.st/XR2Q however the markers all end up looking the same. Any ideas?
[22:25:37] <jinsun> purplex: it sorts based on the first number if they are different, if they are same, then it sorts based on the second one, and so on
[22:25:38] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[22:26:03] <SnoopJ> tomeaton17, what does `labelIndex` look like?
[22:26:24] <purplex> jinsun: thats more clear!
[22:26:36] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-18f6-e9d1-2e71-ac11.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[22:26:37] *** Quits: humbertowoody (~humbertow@148.204.6.250) (Ping timeout: 240 seconds)
[22:27:13] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[22:27:20] <tomeaton17> SnoopJ: Its a list of integers 0-1, 10-18
[22:27:57] <purplex> so if i explicitly say to sort based on first number e.g. L.sort(key=lambda x: x[0]), it will sort based on second number.thats why results of both are same. that clears it up
[22:28:12] <SnoopJ> tomeaton17, I don't know what's gone wrong, then. Your code looks sufficient, but there isn't enough here to reproduce the bad behavior and diagnose it. If you can share a complete program, I'll have a look.
[22:28:19] *** Quits: Wh0 (~V@43.242.116.42) (Quit: Leaving)
[22:28:43] *** Quits: sawk (~quassel@78.6.80.66) (Ping timeout: 260 seconds)
[22:29:31] <jinsun> purplex: if you explicitly say to sort based on first number then it will just do that, it won't look at the second number
[22:29:48] *** Joins: fef (~thedawn@user/thedawn)
[22:30:13] *** Joins: sobkas (~sobkas@95.175.17.217)
[22:30:13] <jinsun> if you are seeing same results both ways then probably your list was already sorted wrt the second number
[22:30:19] <tomeaton17> SnoopJ: I will send image to you now
[22:30:27] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[22:30:29] <SnoopJ> tomeaton17, an image won't be much help
[22:30:39] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Ping timeout: 256 seconds)
[22:30:42] <tomeaton17> https://i.imgur.com/m3UrJ5L.png this is the problem
[22:30:43] *** Joins: shelf (~shelf@198.232.120.151)
[22:30:48] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[22:30:59] <tomeaton17> maybe its overlapping?
[22:31:01] *** Joins: kostkon_ (~androirc@2a02:1388:97:596:3a23:ec58:96a2:57df)
[22:31:03] * SnoopJ understands what the problem is
[22:31:10] *** Quits: s1gyn (~s1gyn@user/s1gyn) (Ping timeout: 260 seconds)
[22:31:31] <tomeaton17> I can share the csv file used to plot if you like
[22:31:57] <SnoopJ> tomeaton17, I'm more curious about the parts of the program you aren't showing us. The bug is there if it's not just overplotting (it could be)
[22:32:17] <purplex> jinsun: yeah same results using .sort and sort based on first number, can you think you a case where i'll see different results? (i tried to see different results a lot of times)
[22:32:17] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 240 seconds)
[22:32:41] <tomeaton17> SnoopJ okay one sec
[22:33:16] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 245 seconds)
[22:33:17] *** Quits: widp (~widp@124.123.105.73) (Remote host closed the connection)
[22:33:23] *** Quits: mathe8989 (~wellmathe@dhcp-138-246-3-71.dynamic.eduroam.mwn.de) (Ping timeout: 260 seconds)
[22:33:29] *** Joins: vicfred (~vicfred@user/vicfred)
[22:33:31] <tomeaton17> SnoopJ here is the full code https://bpa.st/O6EA
[22:33:40] <purplex> i tried with 3 numbers in list as well, both same @ jinsun
[22:34:15] *** Joins: MiguelX4139 (~MiguelX41@108-195-200-9.uvs.frokca.sbcglobal.net)
[22:35:40] <SnoopJ> tomeaton17, ah, I think I see the issue: the points you're plotting don't change during the loop, so yes, you're drawing the markers on top of each other. The last one plotted will be the most visible, likely covering up most of the rest of them. Maybe you wanted to plot a subset on each iteration?
[22:36:08] *** Quits: MiguelX413 (~MiguelX41@108-195-200-9.uvs.frokca.sbcglobal.net) (Ping timeout: 272 seconds)
[22:36:09] *** MiguelX4139 is now known as MiguelX413
[22:36:12] *** Joins: tomeaton1716 (~tomeaton1@2a0c:5bc0:40:2e2f:7959:f588:caa9:a415)
[22:36:19] *** Quits: tomeaton17 (~tomeaton1@2a0c:5bc0:40:2e2f:7959:f588:caa9:a415) (Quit: Client closed)
[22:36:21] <tomeaton1716> SnoopJ ah yeah thats so stupid, I am not iterating through x y z
[22:36:23] <tomeaton1716> thanks
[22:36:30] <SnoopJ> in your defense, I missed it too :)
[22:37:18] *** Joins: humbertowoody (~humbertow@148.204.6.250)
[22:37:32] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[22:39:50] *** Joins: zebrag (~chris@user/zebrag)
[22:40:24] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[22:41:09] *** Joins: bahamas (~lucian@84.232.140.158)
[22:41:10] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[22:43:04] <jinsun> purplex: https://www.online-python.com/8bTUKcljq2
[22:43:12] *** Joins: mathe8989 (~wellmathe@dhcp-138-246-3-71.dynamic.eduroam.mwn.de)
[22:44:32] *** Joins: alex11 (~alex11@user/alex11)
[22:45:53] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 250 seconds)
[22:46:33] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:33b1:b6a3:4ba7:6567)
[22:47:06] *** Joins: widp (~widp@2406:7400:73:9e1b:f0a9:23e2:6c31:4541)
[22:47:49] *** Quits: casastorta (~casastort@neo1.krivokuca.net) (Quit: ZNC 1.8.2 - https://znc.in)
[22:48:06] *** Joins: upsala (~zcb@185.209.196.134)
[22:48:51] *** Joins: Nyx[m]1 (~inyxmatri@2001:470:69fc:105::1:e488)
[22:49:01] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[22:49:23] *** Parts: Nyx[m]1 (~inyxmatri@2001:470:69fc:105::1:e488) ()
[22:50:36] <purplex> jinsun, i see (understood now). i was going it wrong. I forgot to re-intialize list in my compiler so i was believing the sort doesn't function as expected
[22:50:49] <purplex> doing it wrong*
[22:51:50] *** Joins: dreamon (~dreamon@pd9503f46.dip0.t-ipconnect.de)
[22:51:57] <jinsun> okay so your list was already sorted when you tried the x[0] version
[22:52:04] *** Joins: tg (~tg@rockylinux/infra/tg)
[22:52:28] *** Quits: sobkas (~sobkas@95.175.17.217) (Read error: Connection reset by peer)
[22:52:34] <purplex> yea i was tryinf sort ->print, x[0] -> print, x[1] -> print
[22:52:46] *** Joins: nomic (~nomic@185.217.117.249)
[22:53:05] <jinsun> .sort modifies the list inplace, that is why would have been better to use sorted() to test, you wouldn't have to remake the original list everytime
[22:53:48] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[22:53:55] <purplex> x[1] seemed to be working as expected when i looked at the list so i thought my code was fine but i behavior of sort might be something else
[22:54:07] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[22:54:26] <mattf> Does someone want to try hacking into a python repl bot I made, i can't offer any prize besides having some fun maybe... It is on another server, pm me if you want and ill be giving you the server and channel and source code link
[22:54:28] <purplex> thanks, all well now.
[22:54:35] *** tomeaton1716 is now known as tomeaton17
[22:55:23] <rindolf> tomeaton17: hi
[22:55:27] <tomeaton17> rindolf hi
[22:55:43] *** Quits: nomic (~nomic@185.217.117.249) (Client Quit)
[22:55:49] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 256 seconds)
[22:55:54] <rindolf> tomeaton17: sup?
[22:56:32] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[22:57:23] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[22:57:40] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 272 seconds)
[22:57:55] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-18f6-e9d1-2e71-ac11.res6.spectrum.com)
[22:57:56] *** Joins: matsaman (~matsaman@user/matsaman)
[22:58:52] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[22:58:56] *** Joins: stockholm (~Andreas@p200300d2c70df20068b85248b98fde51.dip0.t-ipconnect.de)
[22:59:23] <a1eaiactaest> hey jinsun I asked you couple days ago about typing. what hints would be used for function decorator?
[22:59:30] *** McDonaldsWiFi is now known as WiFi
[23:00:25] *** Quits: BravoSlo (BravoSlo@gateway/vpn/airvpn/bravoslo) (Quit: Leaving)
[23:00:33] <phy1729> a1eaiactaest: https://docs.python.org/3/library/typing.html#typing.ParamSpec
[23:00:44] *** Joins: menace (~someone@ppp-93-104-177-126.dynamic.mnet-online.de)
[23:01:02] *** Quits: menace (~someone@ppp-93-104-177-126.dynamic.mnet-online.de) (Changing host)
[23:01:02] *** Joins: menace (~someone@user/menace)
[23:01:06] *** menace is now known as Deknos
[23:01:10] *** WiFi is now known as PublicWiFi
[23:01:11] *** Quits: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[23:01:29] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[23:01:33] *** Joins: prettybanana1[m] (~prettyban@2001:470:69fc:105::1:e48e)
[23:01:47] *** PublicWiFi is now known as Maccas
[23:02:03] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[23:02:56] *** Joins: KombuchaKip (~kip@192.252.230.5)
[23:03:11] *** Joins: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[23:03:17] *** Joins: elronus (~trace@user/trace)
[23:03:21] *** Quits: dbristow (~dbristow@user/dbristow) (Remote host closed the connection)
[23:03:32] *** Maccas is now known as PublicWiFi
[23:04:19] *** Quits: Payam49 (~Payam@138.106.57.131) (Quit: Client closed)
[23:04:55] *** elronus is now known as traeis
[23:05:15] *** Joins: sobkas (~sobkas@95.175.17.217)
[23:05:20] *** Quits: trace987 (~f200yx10@ip5b42976d.dynamic.kabel-deutschland.de) (Quit: Leaving)
[23:05:31] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[23:05:34] <jinsun> a1eaiactaest: yeah it would be Callable[[Callable[P, T]], Callable[P, T]] where P is  a ParamSpec and T is a TypeVar, and if you can't use ParamSpec for some reason, then mypy docs have a slightly inferior solution https://mypy.readthedocs.io/en/stable/generics.html#declaring-decorators
[23:07:47] *** Joins: rajkosto (~rajkosto@93-86-99-236.dynamic.isp.telekom.rs)
[23:07:48] <prettybanana1[m]> Hey Im trying to scrape data from this bot on telegram, whats the best way to do it, and how can I handle notifications from it in real time?
[23:07:49] <prettybanana1[m]> t.me/nftfox_bot
[23:07:49] <a1eaiactaest> thanks a lot
[23:08:22] *** Quits: Moosadee (~Moosadee@198.248.38.27) (Read error: Connection reset by peer)
[23:08:40] *** Joins: Moosadee (~Moosadee@198.248.38.26)
[23:08:58] *** Quits: kostkon_ (~androirc@2a02:1388:97:596:3a23:ec58:96a2:57df) (Ping timeout: 260 seconds)
[23:09:06] *** Joins: sandb0y (~pirate@user/sandb0y)
[23:09:39] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:d232:2123:e004:b1b4) (Quit: pvergain)
[23:09:41] *** Joins: dbristow (~dbristow@user/dbristow)
[23:09:49] *** Quits: ThanatosJ (~Thanatos@105.112.184.235) (Read error: Connection reset by peer)
[23:11:56] *** Quits: rsx (~dummy@ppp-188-174-146-62.dynamic.mnet-online.de) (Quit: rsx)
[23:13:07] *** Joins: pyeverything (~pyeveryth@204.8.153.36)
[23:13:21] *** Quits: widp (~widp@2406:7400:73:9e1b:f0a9:23e2:6c31:4541) (Remote host closed the connection)
[23:14:08] *** Quits: grooverman (~grooverma@152.250.164.233) (Remote host closed the connection)
[23:14:13] <Deknos> if i only have a python pip package, is there a canonical way to download the package, unpack it, work with the code and rebuild the package for me?
[23:14:49] *** Joins: bahamas (~lucian@84.232.140.158)
[23:15:03] *** Joins: grooverman (~grooverma@152.250.164.233)
[23:15:19] *** Quits: the_lanetly_052 (~the_lanet@194.135.166.224) (Ping timeout: 268 seconds)
[23:15:32] *** Quits: tomeaton17 (~tomeaton1@2a0c:5bc0:40:2e2f:7959:f588:caa9:a415) (Quit: Client closed)
[23:15:34] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[23:15:43] <SnoopJ> Deknos, `pip download` can download a wheel for you, and a wheel is 'just' a zip file. But you should probably consult the developer instructions for any given package if you want to do it "right"
[23:16:29] <grym> Deknos: usually i clone the repo that is the backing data store for the pypi package and install it locally in development mode
[23:16:39] <grym> (and do what that repo says)
[23:16:56] *** Quits: xheimlich (~xheimlich@179.218.1.150) (Quit: leaving)
[23:17:07] *** Quits: goppo (~goppo@user/goppo) (Ping timeout: 256 seconds)
[23:17:18] *** Joins: widp (~widp@2406:7400:73:9e1b:f0a9:23e2:6c31:4541)
[23:17:50] *** Joins: Mat1010 (~Mat1010@168.181.209.34)
[23:18:31] *** Joins: Mat101050 (~Mat1010@168.181.209.34)
[23:18:38] <Deknos> the question is more for the (unusual) case that there's no git.
[23:18:48] *** Quits: frannk (~frannk@user/frannk) (Read error: Connection reset by peer)
[23:18:59] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:703e:83c:4ed1:bc6) (Quit: Textual IRC Client: www.textualapp.com)
[23:19:05] *** Quits: Mat101050 (~Mat1010@168.181.209.34) (Client Quit)
[23:19:12] *** Quits: pyeverything (~pyeveryth@204.8.153.36) (Ping timeout: 272 seconds)
[23:19:14] <Deknos> grym, is that workflow different than virtual environment, clone git, create branch , work, build for yourself and install it locally?
[23:19:17] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 240 seconds)
[23:19:22] <Mat1010> #hhh
[23:19:25] *** Joins: cdown_ (~cdown@cpe-98-15-154-102.hvc.res.rr.com)
[23:19:52] *** Joins: frannk (~frannk@user/frannk)
[23:21:00] *** Quits: justOkay (~justache@user/justache) (Read error: Connection reset by peer)
[23:21:21] *** Joins: ArtfulDodger (~ArtfulDod@147.210.204.164)
[23:21:26] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Remote host closed the connection)
[23:21:53] <grym> Deknos: depends on the package; some of them have totally weird dependencies
[23:22:20] *** Joins: justOkay (~justache@user/justache)
[23:22:22] *** Quits: cdown (~cdown@163.114.130.1) (Ping timeout: 272 seconds)
[23:22:23] *** cdown_ is now known as cdown
[23:22:33] <grym> Deknos: but that's about the normal way of it.
[23:22:46] <SnoopJ> ask 10 devs for workflows, you'll get 11 answers
[23:22:49] <grym> if i had to work on modifying a package that wasn't version controlled, the first thing i would do is version control it...
[23:22:49] *** Joins: mdemo (~mdemo@user/mdemo22)
[23:22:52] *** Joins: a1eaiact1 (~a1eaiacta@user/a1eaiactaest)
[23:22:55] <Deknos> is there a way with pip to install only dependencies of the package?
[23:23:07] <Deknos> SnoopJ, i know, but there has to be a manual minimal way...
[23:23:24] *** Quits: a1eaiactaest (~a1eaiacta@user/a1eaiactaest) (Ping timeout: 240 seconds)
[23:23:25] <SnoopJ> Deknos, why?
[23:23:27] <grym> Deknos: pip wheel thepackage; pip rm thepackage*.whl; pip install *.whl ? (what a hack)
[23:24:23] *** Joins: jazzy (~jaziz@user/jaziz)
[23:24:43] <Deknos> ah, ok, thanks! :)
[23:24:48] *** Quits: vulpes_vulpes (~vulpes_vu@62-64-207-88.dynamic.dial.as9105.com) (Remote host closed the connection)
[23:25:24] *** Quits: _h4x0r_ (~till@user/till/x-8616149) (Ping timeout: 252 seconds)
[23:25:42] *** Parts: Mat1010 (~Mat1010@168.181.209.34) ()
[23:25:57] <SnoopJ> `poetry` can install only the dependences with its --no-root option, but I can't say I recommend it as a tool
[23:27:10] *** Joins: bello (~bello@user/bello)
[23:27:59] *** Joins: radny (~radny@89.22.211.163)
[23:28:08] *** Quits: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9) (Quit: Leaving)
[23:28:43] <bello> hi. how can i check if url file exists / gives response or unavailable in py script?
[23:28:52] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[23:28:56] *** Quits: zoraj (~zoraj@vmi794994.contaboserver.net) (Read error: Connection reset by peer)
[23:29:46] *** Joins: vulpes_vulpes (~vulpes_vu@62-64-207-88.dynamic.dial.as9105.com)
[23:30:20] *** Joins: aslicedbanjo (~aslicedba@host31-48-145-154.range31-48.btcentralplus.com)
[23:30:23] *** Quits: widp (~widp@2406:7400:73:9e1b:f0a9:23e2:6c31:4541) (Remote host closed the connection)
[23:31:01] *** Quits: msk (~Thunderbi@89.205.124.59) (Ping timeout: 240 seconds)
[23:31:20] *** Quits: wlemuel (~wlemuel@210.22.124.110) (Read error: Connection reset by peer)
[23:31:28] *** Joins: wlemuel (~wlemuel@210.22.124.110)
[23:31:38] <jinsun> you could use pip-compile from pip-tools to list everything that would be installed and output a requirements.txt, then remove the package from that and pip install -r requirements.txt
[23:32:00] <SnoopJ> bello, typically you send an HTTP HEAD request. With the `requests` library: `response = requests.head(url, allow_redirects=True); if response.ok: print("it's fine"); else: print("uh oh!")`
[23:32:04] *** Joins: _h4x0r_ (~till@user/till/x-8616149)
[23:32:26] *** Quits: wlemuel (~wlemuel@210.22.124.110) (Read error: Connection reset by peer)
[23:32:33] *** Quits: astrocat (~astrocat@128.184.189.40) (Ping timeout: 252 seconds)
[23:32:43] *** Quits: radny (~radny@89.22.211.163) (Quit: Leaving.)
[23:33:07] *** Joins: zoraj (~zoraj@vmi794994.contaboserver.net)
[23:33:16] *** Joins: hams (~hams@user/hams)
[23:33:44] *** Joins: widp (~widp@2406:7400:73:9e1b:f0a9:23e2:6c31:4541)
[23:34:15] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Ping timeout: 240 seconds)
[23:34:38] *** Joins: kostkon_ (~androirc@2a02:587:a106:f8d0:5455:7996:42cf:6660)
[23:34:54] *** Joins: radny (~radny@89.22.211.163)
[23:35:01] *** Quits: bello (~bello@user/bello) (Remote host closed the connection)
[23:35:21] *** Quits: fuze (uid76888@id-76888.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[23:35:29] *** Quits: shelf (~shelf@198.232.120.151) (Ping timeout: 256 seconds)
[23:36:04] *** Quits: upsala (~zcb@185.209.196.134) (Quit: WeeChat 3.4.1)
[23:36:14] *** Joins: bello (~bello@user/bello)
[23:36:24] *** Quits: bello (~bello@user/bello) (Remote host closed the connection)
[23:36:27] *** Joins: wlemuel (~wlemuel@210.22.124.110)
[23:36:37] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:a5c5:bac4:7fea:513c) (Ping timeout: 240 seconds)
[23:36:54] *** Joins: bello (~bello@user/bello)
[23:36:59] *** Joins: s1gyn (~s1gyn@user/s1gyn)
[23:37:53] *** Joins: broccoli_lover (~u0_a440@2001:1284:f013:cc7d:61ad:c914:875c:6de0)
[23:38:31] *** Joins: ice9 (~ice9@user/ice9)
[23:38:41] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[23:39:37] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[23:40:30] <bello> SnoopJ: thanks,  what's the difference with request.get and request.head ?
[23:40:36] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[23:40:38] *** Quits: XV8 (~XV8@2601:5cb:c001:50::4a2c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:40:41] <SnoopJ> bello, one sends a GET request, the other sends HEAD
[23:41:01] <SnoopJ> you can think of HEAD as like a GET that doesn't actually retrieve the document
[23:41:22] <SnoopJ> https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol#Request_methods
[23:41:23] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[23:41:51] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[23:42:08] *** Joins: XV8 (~XV8@2601:5cb:c001:50::4a2c)
[23:42:15] *** Quits: Payam (~Payam@c83-250-236-236.bredband.tele2.se) (Quit: Leaving)
[23:43:24] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[23:43:41] *** Joins: parv (~quass@user/parv)
[23:44:28] *** Joins: Auron (Auron956@cpc77395-ches6-2-0-cust905.9-1.cable.virginm.net)
[23:44:52] *** Auron is now known as Guest7772
[23:44:52] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[23:45:23] <bello> SnoopJ: i only want a file on given url link is available or unavailable. and i want un/available results counted +1 in counters like 58 off 24 on as echo
[23:45:41] *** Quits: Guest7772 (Auron956@cpc77395-ches6-2-0-cust905.9-1.cable.virginm.net) (Remote host closed the connection)
[23:47:02] *** Joins: u0_a440 (~u0_a440@2001:1284:f013:cc7d:61ad:c914:875c:6de0)
[23:47:02] *** Quits: broccoli_lover (~u0_a440@2001:1284:f013:cc7d:61ad:c914:875c:6de0) (Read error: Connection reset by peer)
[23:47:07] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[23:48:57] *** Joins: markw_dev (~mark@71-135-3-182.lightspeed.rlghnc.sbcglobal.net)
[23:49:41] *** Quits: markwdev (~mark@71-135-3-182.lightspeed.rlghnc.sbcglobal.net) (Read error: Connection reset by peer)
[23:51:23] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[23:51:46] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[23:52:04] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[23:52:08] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[23:52:11] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[23:52:15] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Read error: Connection reset by peer)
[23:52:31] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[23:52:37] <guardian> hello, I think I already asked. Is there a way to debug code using multiprocessing.Pool in a terminal with breakpoint() or do I need an IDE?
[23:53:11] <grym> guardian: https://documen.tician.de/pudb/starting.html#debugging-from-a-separate-terminal
[23:53:29] *** Joins: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[23:53:56] <grym> or, uh, the anchor below that one about remote debugging
[23:54:44] *** Joins: Jacques (~Jacques@cpe-173-172-37-214.tx.res.rr.com)
[23:54:59] <grym> sometimes i also print-debug with https://github.com/zestyping/q  in a multiprocessing context as well
[23:55:58] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Client Quit)
[23:55:59] *** Quits: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Remote host closed the connection)
[23:56:32] *** Joins: Stench (~Staunch@134.238.165.172)
[23:56:34] *** Quits: econdudeawesome (~shadowfax@cpe-76-187-70-50.tx.res.rr.com) (Ping timeout: 272 seconds)
[23:57:01] *** Quits: Staunch (~Staunch@134.238.165.172) (Ping timeout: 256 seconds)
[23:57:46] <matsaman> guardian: breakpoint() can get a little more interesting if you run 'interact'
[23:58:09] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 256 seconds)
[23:58:10] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[23:58:24] *** Quits: baffodoro (~raffaem@95.74.63.143) (Ping timeout: 252 seconds)
[23:59:38] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-18f6-e9d1-2e71-ac11.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
