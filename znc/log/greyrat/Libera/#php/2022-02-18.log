[00:00:09] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[00:01:11] *** Quits: PTNapivoski (~PTNapivos@2804:60:400b:2600:97a:965d:fb2e:da7a) (Quit: Leaving)
[00:05:21] <judah> Anyone know if it's possible to disable capturing of method call parameters in Xdebug traces?
[00:05:35] <judah> Asking for a coworker
[00:22:07] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Ping timeout: 256 seconds)
[00:36:08] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[00:36:15] *** Joins: PTNapivoski (~PTNapivos@2804:60:400b:2600:97a:965d:fb2e:da7a)
[00:49:14] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Quit: Konversation terminated!)
[01:03:24] *** Quits: sharpertool (sid80151@id-80151.hampstead.irccloud.com) (Ping timeout: 240 seconds)
[01:03:24] *** Quits: petris (sid19918@user/petris) (Ping timeout: 240 seconds)
[01:04:36] *** Quits: relipse (sid16131@id-16131.tinside.irccloud.com) (Ping timeout: 240 seconds)
[01:05:37] *** Joins: sharpertool (sid80151@id-80151.hampstead.irccloud.com)
[01:05:40] *** Joins: relipse (sid16131@id-16131.tinside.irccloud.com)
[01:05:42] *** Joins: petris (sid19918@user/petris)
[01:15:27] *** Quits: PTNapivoski (~PTNapivos@2804:60:400b:2600:97a:965d:fb2e:da7a) (Quit: Leaving)
[01:32:45] *** Quits: MetroConductor (~MetroCond@user/MetroConductor) (Quit: Going offline, see ya! (www.adiirc.com))
[01:33:05] *** Quits: guido (~weechat@host-79-19-251-185.retail.telecomitalia.it) (Quit: WeeChat 3.4)
[01:53:47] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[02:00:37] *** Quits: magla (~gelignite@55d4275f.access.ecotel.net) (Quit: Stay safe!)
[02:09:59] *** Quits: nolan_ (~nolan_@user/nolan/x-2434303) (Remote host closed the connection)
[02:24:55] *** Quits: nitrospectide (~Adium@38.65.76.76) (Quit: Leaving.)
[02:26:14] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[02:27:09] <ash_worksi> what does `SplFileObject::READ_AHEAD  Read on rewind/next` mean exactly?
[02:27:34] *** Joins: harpia (~harpia@2804:fc:8d49:1000:da73:f433:48dd:31be)
[02:34:06] *** Quits: sagax (~sagax_nb@user/sagax) (Excess Flood)
[02:39:40] <TinoDidriksen> In isolation, nothing it seems. It'll just read ahead, caching data in memory. But combined with other flags, it can skip empty lines and other tricks.
[02:45:29] *** Quits: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se) (Quit: Leaving)
[02:47:02] *** Joins: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se)
[02:52:00] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:52:14] *** Quits: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se) (Quit: Leaving)
[03:05:42] *** Quits: xep (~xep@76-210-4-7.lightspeed.sntcca.sbcglobal.net) (Read error: Connection reset by peer)
[03:06:29] *** Joins: xep (~xep@76-210-4-7.lightspeed.sntcca.sbcglobal.net)
[03:23:37] *** Joins: mactron (~mactron@APN-123-254-125-gprs.simobil.net)
[03:26:34] *** Quits: mactron (~mactron@APN-123-254-125-gprs.simobil.net) (Client Quit)
[03:31:50] *** Joins: funhouse (~funhouse@user/funhouse)
[03:40:04] *** Joins: ferdna (~ferdna@user/ferdna)
[03:52:26] *** Joins: Blondie101010 (~Blondie10@user/blondie101010)
[04:07:23] *** Quits: ms49434 (~ms49434@user/ms49434) (Quit: Leaving)
[04:22:42] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Ping timeout: 272 seconds)
[04:35:14] *** Quits: bobdobbs (~user@2406:5a00:4456:db00:590e:8805:26aa:69cb) (Remote host closed the connection)
[04:47:22] *** Quits: harpia (~harpia@2804:fc:8d49:1000:da73:f433:48dd:31be) (Quit: harpia)
[05:10:14] *** Joins: harpia (~harpia@187.49.85.200)
[05:11:28] *** Joins: Rockwood (~Rocky@user/rocky)
[05:16:53] <Rockwood> Good Morning :)
[05:20:18] *** Joins: Alexander-47u (~Alexander@a44107.upc-a.chello.nl)
[05:20:22] <Alexander-47u> how do I add 1 day tom this
[05:20:24] <Alexander-47u> to this
[05:20:24] <Alexander-47u> date("Y-m-d H:i:s")
[05:21:06] *** pmercado_ is now known as pmercado
[05:21:26] <__adrian> use https://php.net/class.datetime
[05:22:31] <Rockwood> __adrian, hi sir
[05:22:34] <Alexander-47u> date("Y-m-d H:i:s", strtotime("+1 day"));
[05:22:38] <Alexander-47u> will this do?
[05:22:41] <__adrian> use https://php.net/class.datetime
[05:23:05] <__adrian> the modify() and format() methods
[05:24:19] <__adrian> e.g.,  (new DateTime())->modify("+1 day")->format("Y-m-d H:i:s");
[05:26:02] *** Joins: Hiccup (cHoy@user/hiccup)
[05:30:20] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:33:21] *** Joins: vlm (~vlm@user/vlm)
[05:34:35] *** Quits: genomc (uid245282@id-245282.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[05:37:06] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[05:39:56] <Alexander-47u> __adrian, thank you!
[05:42:07] *** Quits: Alexander-47u (~Alexander@a44107.upc-a.chello.nl) (Quit: Leaving)
[05:50:36] *** Quits: pmercado (~pmercado@190.22.74.55) (Ping timeout: 240 seconds)
[06:02:03] *** hays is now known as h_
[06:04:04] *** Quits: justGhost (~justache@user/justache) (Read error: Connection reset by peer)
[06:04:35] *** Joins: justGhost (~justache@user/justache)
[06:11:08] *** Quits: harpia (~harpia@187.49.85.200) (Quit: harpia)
[06:11:24] *** Joins: pmercado (~pmercado@186.11.99.64)
[06:17:48] *** Quits: goddard (~goddard@user/goddard) (Ping timeout: 240 seconds)
[06:19:23] *** Joins: goddard (~goddard@user/goddard)
[06:22:24] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Ping timeout: 272 seconds)
[06:23:32] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[06:38:28] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[06:39:37] *** Quits: thiras_ (~thiras@user/thiras) (Ping timeout: 250 seconds)
[07:08:18] *** Joins: Rockwood_ (~Rocky@user/rocky)
[07:08:45] *** Joins: ___Rockwood__ (~Rocky@user/rocky)
[07:08:57] *** Joins: chao (~stenno@user/stenno)
[07:11:57] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 240 seconds)
[07:11:57] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[07:12:36] *** Quits: Rockwood_ (~Rocky@user/rocky) (Ping timeout: 240 seconds)
[07:12:58] *** Joins: Rockwood (~Rocky@user/rocky)
[07:14:20] *** Quits: ___Rockwood__ (~Rocky@user/rocky) (Ping timeout: 272 seconds)
[07:40:18] *** Quits: pmercado (~pmercado@186.11.99.64) (Ping timeout: 272 seconds)
[07:59:32] *** Quits: newwebdev13 (~newwebdev@78.135.91.153) (Quit: Leaving)
[08:02:42] *** Joins: genomc (uid245282@id-245282.hampstead.irccloud.com)
[08:20:54] *** Joins: mactron (~mactron@APN-123-254-125-gprs.simobil.net)
[08:20:58] *** Quits: mactron (~mactron@APN-123-254-125-gprs.simobil.net) (Client Quit)
[08:38:40] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:51:55] *** Joins: guido (~weechat@host-79-13-249-198.retail.telecomitalia.it)
[08:56:54] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[09:07:45] *** Joins: CoJaBo (~aztec@user/CoJaBo)
[09:17:48] *** Quits: darthtilde (~dsd@user/ironsoba) (Ping timeout: 240 seconds)
[09:21:15] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 250 seconds)
[09:27:40] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[09:31:52] *** Quits: php-bot (~php-bot@box.croustillant.ch) (Read error: Connection reset by peer)
[09:31:58] *** Joins: php-bot_ (~php-bot@box.croustillant.ch)
[09:32:20] *** php-bot_ is now known as php-bot
[09:34:24] *** Quits: Hiccup (cHoy@user/hiccup) (Read error: Connection reset by peer)
[10:13:50] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Quit: Leaving)
[10:18:14] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:19:20] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[10:19:52] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:23:04] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Ping timeout: 272 seconds)
[10:27:35] *** Joins: Hiccup (cHoy@user/hiccup)
[10:28:46] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[10:37:32] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[10:41:00] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 240 seconds)
[10:46:50] *** Joins: myq (~user@c-73-67-223-145.hsd1.or.comcast.net)
[10:50:20] *** Joins: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::e3bb)
[10:51:23] *** Quits: ham5 (iamfive@user/ham5) (Ping timeout: 256 seconds)
[10:52:19] *** Quits: guido (~weechat@host-79-13-249-198.retail.telecomitalia.it) (Quit: WeeChat 3.4)
[10:58:09] *** Joins: Junxter (~Junxter@222.95.164.193)
[11:01:00] *** Joins: GoldLeader87 (~GoldLeade@2a10:3781:6b:1:39f8:208c:8a8e:81d3)
[11:14:11] *** Joins: guido (~weechat@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f)
[11:17:29] *** Joins: chao (~stenno@user/stenno)
[11:24:07] *** Quits: guido (~weechat@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f) (Quit: WeeChat 3.4)
[11:24:36] *** Joins: guido (~weechat@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f)
[11:25:18] *** Joins: pycode (~pycode3@2001:b07:5d28:551:1628:764f:34d3:3603)
[11:43:03] *** Joins: ham5 (~iamfive@user/ham5)
[11:45:30] *** Quits: Furai (~Furai@furai.pl) (Quit: WeeChat 3.4)
[11:49:57] *** Joins: Furai (~Furai@furai.pl)
[11:50:53] *** Quits: Junxter (~Junxter@222.95.164.193) (Ping timeout: 256 seconds)
[11:58:14] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[11:58:57] *** Joins: richardjh (~Thunderbi@188.31.10.96.threembb.co.uk)
[12:02:21] *** Joins: Tempesta (~Tempesta@user/tempesta)
[12:05:50] *** Quits: richardjh (~Thunderbi@188.31.10.96.threembb.co.uk) (Quit: richardjh)
[12:07:24] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 240 seconds)
[12:11:58] *** Joins: ms49434 (~ms49434@user/ms49434)
[12:14:07] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:21:24] *** Quits: Hiccup (cHoy@user/hiccup) (Read error: Connection reset by peer)
[12:22:46] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Ping timeout: 272 seconds)
[12:23:01] *** Joins: bobdobbs (~user@2406:5a00:4456:db00:c061:67fb:4108:943c)
[12:26:11] *** Joins: chao (~stenno@user/stenno)
[12:29:20] *** Joins: richardjh (~Thunderbi@188.29.247.183.threembb.co.uk)
[12:48:33] *** Quits: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::e3bb) (Ping timeout: 252 seconds)
[13:08:03] *** Quits: onichomp666 (~onichomp@177.231.44.9) (Read error: Connection reset by peer)
[13:38:00] *** Quits: Jck_true (~jcktrue@user/jck-true/x-0200799) (Quit: The Lounge - https://thelounge.chat)
[13:38:19] *** Joins: Jck_true (~jcktrue@user/jck-true/x-0200799)
[13:41:00] *** Quits: myq (~user@c-73-67-223-145.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[13:43:25] *** Quits: sm (~sm@plaintextaccounting/sm) (Quit: Bridge terminating on SIGTERM)
[13:43:25] *** Quits: kuhilas (~kuhilas@2001:470:69fc:105::3040) (Quit: Bridge terminating on SIGTERM)
[13:43:25] *** Quits: Deltik (~deltik@2001:470:69fc:105::1:5ba3) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: Rubin (~rubin@2001:470:69fc:105::17e) (Quit: Bridge terminating on SIGTERM)
[13:43:27] *** Quits: kerouac (~kerouac@2001:470:69fc:105::4e36) (Quit: Bridge terminating on SIGTERM)
[13:43:29] *** Quits: wutzelputz (~wutzelput@2001:470:69fc:105::3117) (Quit: Bridge terminating on SIGTERM)
[13:47:06] *** Joins: Deltik (~deltik@2001:470:69fc:105::1:5ba3)
[13:55:50] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[13:56:09] <sumthing1980> hello when uploading certain files, the tmp name is empty
[13:56:11] *** Joins: kuhilas (~kuhilas@2001:470:69fc:105::3040)
[13:56:11] *** Joins: wutzelputz (~wutzelput@2001:470:69fc:105::3117)
[13:56:12] *** Joins: Rubin (~rubin@2001:470:69fc:105::17e)
[13:56:15] <sumthing1980> jpg pdf works but not mp4 for example
[13:56:27] *** Joins: kerouac (~kerouac@2001:470:69fc:105::4e36)
[13:56:27] *** Joins: sm (~sm@plaintextaccounting/sm)
[13:56:29] <sumthing1980> any ideas?
[13:56:41] <AllenJB> What's the error code on the file upload?
[13:56:44] <Naktibalda> could it be too large?
[13:57:05] <sumthing1980> mmm maybe didnt check error
[13:58:06] <sumthing1980> error=1
[14:04:06] <sumthing1980> ah yea 8mb
[14:04:53] <sumthing1980> does the error come after it is uploaded can I do ini set on the upload handler
[14:05:18] <Naktibalda> no, it is too late
[14:05:44] <sumthing1980> does it need to be set in the ini
[14:05:57] <sumthing1980> can I do it in script?
[14:06:20] <Naktibalda> it could be set in vhost configuration or per-directory setting file.
[14:07:01] <sumthing1980> Id like something very portable so not inside the script?
[14:07:41] <Naktibalda> file upload is completed before execution of PHP script starts
[14:07:51] <sumthing1980> hmm
[14:08:21] <Naktibalda> PHP_INI_PERDIR 	Entry can be set in php.ini, .htaccess, httpd.conf or .user.ini
[14:09:52] *** Quits: bytestream (~bytestrea@user/bytestream) (Remote host closed the connection)
[14:11:21] *** Quits: GoldLeader87 (~GoldLeade@2a10:3781:6b:1:39f8:208c:8a8e:81d3) (Quit: GoldLeader87)
[14:11:59] <AllenJB> You could also use a separate php-fpm pool (based on request URL) - you can set ini settings in the pool configuration
[14:13:19] <sumthing1980> ok
[14:17:02] *** Joins: Junxter (~Junxter@222.95.164.193)
[14:23:04] *** chao is now known as stenno
[14:27:21] *** Joins: GoldLeader87 (~GoldLeade@2a10:3781:6b:1:39f8:208c:8a8e:81d3)
[14:34:43] <sumthing1980> what exactly decides the multi file upload
[14:35:07] <sumthing1980> I have it as array <input type=file name='file[]'>"
[14:35:15] <sumthing1980> but cant select more than on
[14:35:18] <sumthing1980> e
[14:35:26] <sumthing1980> maybe its my browser
[14:36:13] <sumthing1980> hm no
[14:37:08] <AllenJB> You need the multiple attribute on the input https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#multiple
[14:40:39] <sumthing1980> ok cool
[14:40:53] *** Joins: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::e3bb)
[14:45:06] *** rwb is now known as rb
[14:46:36] *** Quits: pycode (~pycode3@2001:b07:5d28:551:1628:764f:34d3:3603) (Ping timeout: 240 seconds)
[14:52:16] *** Joins: harpia (~harpia@2804:fc:8d49:1000:da73:f433:48dd:31be)
[14:52:28] *** Joins: olle (~olle@213.61.81.133)
[14:56:16] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[15:11:02] <olle> http://chriswarbo.net/blog/2014-08-18-edsl.html
[15:11:06] <olle> http://chriswarbo.net/blog/2014-08-18-edsl.html
[15:11:10] <olle> 2014 o.o
[15:11:15] <olle> Plumb: A Domain-Specific Language Embedded in PHP
[15:18:24] *** Joins: lara99 (~lara99@93-36-163-139.ip61.fastwebnet.it)
[15:19:40] *** Joins: DrowningElysium (uid190788@user/drowningelysium)
[15:22:43] *** Quits: guido (~weechat@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f) (Quit: WeeChat 3.4)
[15:27:00] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[15:35:55] *** Joins: freeman_h (~freeman_h@37.120.159.215)
[15:40:47] *** Joins: pmercado (~pmercado@186.11.99.64)
[15:45:39] *** Joins: teresko (~teresko@user/teresko)
[15:47:38] *** Joins: thiras_ (~thiras@user/thiras)
[15:49:48] *** Joins: guido (~weechat@host-79-52-255-66.retail.telecomitalia.it)
[15:53:00] *** Quits: pmercado (~pmercado@186.11.99.64) (Ping timeout: 240 seconds)
[15:59:42] *** Joins: pmercado (~pmercado@186.11.31.64)
[16:03:14] *** Joins: bytestream (~bytestrea@user/bytestream)
[16:09:31] *** Quits: Bencraft (~Bencraft@user/Bencraft) (Ping timeout: 272 seconds)
[16:19:56] *** Joins: epony (epony@user/epony)
[16:23:26] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[16:45:45] *** Joins: Fellipe (~Fellipe@2804:14c:65c2:4cc0::1000)
[16:50:36] *** Quits: cslcm (cslcm@46.33.132.100) (Ping timeout: 240 seconds)
[17:05:24] *** Quits: thiras_ (~thiras@user/thiras) (Quit: Leaving)
[17:16:46] *** Joins: pycode (~pycode3@2001:b07:5d28:551:f47e:75b2:aa28:86ce)
[17:28:03] *** Joins: newwebdev13 (~newwebdev@78.135.91.153)
[17:29:38] *** Quits: mishehu (~mishehu@2001:470:b9db:b00b::f36d:9d3) (Ping timeout: 250 seconds)
[17:29:51] *** Joins: mishehu (~mishehu@mira001.eyepeeveesicks.shavedgoats.net)
[17:33:27] *** Quits: pmercado (~pmercado@186.11.31.64) (Ping timeout: 256 seconds)
[17:38:58] *** Joins: pmercado (~pmercado@186.11.16.147)
[17:39:23] *** Joins: chao (~stenno@user/stenno)
[17:41:24] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[17:48:36] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 240 seconds)
[17:50:34] *** Joins: chao (~stenno@user/stenno)
[18:00:36] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 240 seconds)
[18:04:03] *** Joins: fef (~thedawn@user/thedawn)
[18:22:36] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Ping timeout: 240 seconds)
[18:28:19] *** Joins: PTNapivoski (~PTNapivos@2804:60:400b:2600:45a3:7cbf:45d0:d21c)
[18:33:41] *** Joins: Northwoods (~Northwood@202.14.122.68)
[18:40:21] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[18:41:06] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[18:47:43] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[18:53:09] *** Joins: chao (~stenno@user/stenno)
[18:53:19] *** Joins: onichomp (~onichomp@2806:264:4408:12a:1834:a2dd:95eb:3f92)
[18:53:55] *** Quits: newwebdev13 (~newwebdev@78.135.91.153) (Ping timeout: 256 seconds)
[18:54:01] *** Quits: onichomp (~onichomp@2806:264:4408:12a:1834:a2dd:95eb:3f92) (Read error: Connection reset by peer)
[18:54:38] *** Joins: onichomp (~onichomp@2806:264:4408:12a:1834:a2dd:95eb:3f92)
[18:56:01] *** Joins: newwebdev13 (~newwebdev@78.135.91.153)
[19:00:36] *** Quits: DrowningElysium (uid190788@user/drowningelysium) (Ping timeout: 240 seconds)
[19:00:54] *** Quits: genomc (uid245282@id-245282.hampstead.irccloud.com) (Read error: Connection reset by peer)
[19:01:03] *** Joins: genomc (uid245282@id-245282.hampstead.irccloud.com)
[19:01:05] *** Joins: DrowningElysium (uid190788@user/drowningelysium)
[19:08:06] *** Quits: Northwoods (~Northwood@202.14.122.68) (Ping timeout: 272 seconds)
[19:16:33] *** Joins: varrg (~varrg@h-176-10-198-245.a351.priv.bahnhof.se)
[19:18:03] *** Joins: nitrospectide (~Adium@38.65.76.76)
[19:19:13] <nitrospectide> If $rel_events has 1 item, and $gen_cleaned has 0, shouldn't the results of this be an array with one item? $ind_events = array_slice(array_merge($rel_events,$gen_cleaned), 0, 2);
[19:20:29] *** Joins: Rockwood (~Rocky@user/rocky)
[19:22:18] *** Quits: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::e3bb) (Ping timeout: 250 seconds)
[19:22:58] <AllenJB> 3v4l says yes (for a specific test input): https://3v4l.org/DceEE
[19:23:17] <AllenJB> Check your inputs are what you think they are (var_dump them)
[19:24:30] <AllenJB> It may also help us to help you if you tell us what the current result you are getting is
[19:29:09] <da_wunder> or even better, create example to 3v4l.org site
[19:31:39] *** Joins: Rockwood_ (~Rocky@user/rocky)
[19:33:57] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 240 seconds)
[19:37:54] *** Joins: hh (~g@37.214.44.190)
[19:38:28] *** Rockwood_ is now known as Rockwood
[19:41:46] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[19:41:50] *** Quits: harpia (~harpia@2804:fc:8d49:1000:da73:f433:48dd:31be) (Quit: harpia)
[19:48:36] *** Quits: DrowningElysium (uid190788@user/drowningelysium) (Ping timeout: 240 seconds)
[19:49:21] *** Joins: Rockwood_ (~Rocky@user/rocky)
[19:49:26] *** Quits: olle (~olle@213.61.81.133) (Quit: Lost terminal)
[19:50:17] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 240 seconds)
[19:50:49] *** Joins: DrowningElysium (uid190788@user/drowningelysium)
[19:52:07] *** Joins: filename (~kilitary@185.193.143.131)
[19:54:57] <nitrospectide> What's the preferred pastebin?
[19:55:38] <__adrian> "not pastebin.com"
[19:55:51] <__adrian> gist is good, 3v4l is good if you want a working example
[19:56:42] *** Joins: harpia (~harpia@187.49.85.200)
[19:58:40] <nitrospectide> This it my output. rel_events has one item. gen_events has one - in this case, the same item. gen_cleaned is gen_events after de-duping. ind_events is the product of that line I paste earlier. https://www.toptal.com/developers/hastebin/sububitaqu.php
[20:00:26] <__adrian> why are you using array_slice and array_merge? what's the goal, here?
[20:01:12] <Naktibalda> I don't see value of ind_events
[20:01:16] *** Quits: DrowningElysium (uid190788@user/drowningelysium) (Read error: No route to host)
[20:01:43] *** Joins: DrowningElysium (uid190788@user/drowningelysium)
[20:02:04] <nitrospectide> Naktibalda: That's the issue. I can't sort out why it comes up empty.
[20:02:31] <__adrian> nitrospectide: var_dump() the merged array
[20:03:05] <Naktibalda> I thought that you get more than 1 item in result
[20:03:32] <Naktibalda> please demonstrate your issue 3v4l
[20:03:36] <Naktibalda> in 3v4l
[20:03:42] <nitrospectide> __adrian: I am currently doing a print_r, just like I am on the others. I also am echoing a count() on each array, and getting this: REL:1 / GEN:1 / CLEAN:0 / IND:0
[20:04:04] <Naktibalda> the code you are asking about is not the same code that you actually run
[20:04:04] <__adrian> !+print_r lies
[20:04:04] <php-bot> use var_dump() instead!  print_r() is not helpful (for most purposes; but especially for debugging) as it hides useful information from you.  observe: https://gist.github.com/adrian-enspired/4b165cd0a1debe39aec6  (or)  https://3v4l.org/ThSLb
[20:04:24] <__adrian> but, do you mean that you've inspected the merged array? what's in it?
[20:06:36] *** Joins: freeman_h1 (~freeman_h@cpc94282-ward11-2-0-cust375.10-2.cable.virginm.net)
[20:07:34] *** Quits: richardjh (~Thunderbi@188.29.247.183.threembb.co.uk) (Quit: richardjh)
[20:08:36] <nitrospectide> Here it is using var_dump instead: https://www.toptal.com/developers/hastebin/alenivihob.php
[20:08:43] *** Joins: richardjh (~Thunderbi@188.29.247.183.threembb.co.uk)
[20:09:19] <ash_worksi> nitrospectide: where si the code producing this?
[20:09:22] <ash_worksi> is*
[20:10:08] <ash_worksi> oh I see you wrote something earlier using array_slice
[20:10:12] *** Quits: freeman_h (~freeman_h@37.120.159.215) (Ping timeout: 240 seconds)
[20:10:24] <nitrospectide> How much of that do you need? It's custom Wordpress queries grabbing db records into an array, and then manipulating the arrays.
[20:10:46] <ash_worksi> what's the goal for these arrays?
[20:10:47] <Naktibalda> nitrospectide: array_slice can't return NULL
[20:10:56] <da_wunder> nitrospectide: so just create _simple_ example to 3v4l.org site to show your issue
[20:11:36] <ash_worksi> nitrospectide: are you trying to filter rel_events based on what is in gen_events?
[20:11:43] <ash_worksi> nitrospectide: (sorry I am late to the party)
[20:12:04] <Naktibalda> and I was wrong (so quickly),  you get NULL if the first parameter is not an array
[20:12:24] <__adrian> nitrospectide: a simple, self-contained example, like so:  https://3v4l.org/Q4pcJ
[20:12:33] <Naktibalda> on PHP 7, on 8 you would get TypeError
[20:13:07] <__adrian> still don't know what your goal is, so difficult to advise.
[20:13:20] <__adrian> "__adrian> why are you using array_slice and array_merge? what's the goal, here?"
[20:13:25] <ash_worksi> I am guessing this is a misinterpretation of what slicing and merging do
[20:13:34] <__adrian> maybe
[20:13:48] <ash_worksi> nitrospectide: you're trying to de-dupe?
[20:13:51] <Naktibalda> I guess that he wants "the last two from 2 data sources"
[20:14:03] <__adrian> it seems like you've gone to some lengths to make array_slice do nothing, with the assumption that you know the size of the merged array
[20:14:41] <__adrian> Naktibalda: maybe. but that hasn't come up in explanations. "de-dupe" is the big thing they've talked about before.
[20:14:56] <ash_worksi> maybe they're trying to shift gen onto rel ?
[20:15:20] <__adrian> maybe we should wait for an answer  :)
[20:15:52] <ash_worksi> :)
[20:19:48] <nitrospectide> OK… I've figured it out.
[20:20:47] <ash_worksi> boo.
[20:21:26] <ash_worksi> we (at least, "I") wanted to know what the problem ever was
[20:21:37] <ash_worksi> oh well.
[20:21:46] <da_wunder> samke here
[20:22:36] <__adrian> setting curiosity aside, nitrospectide, i still suspect you're down the wrong road in the first place. but can't offer anything more without knowing your intent.
[20:22:42] <nitrospectide> The logic is that I am doing a query, looking for results based a certain criteria. That creates $rel_events. If I don't end up with at least 2 items, I do another query to fill that in. I de-dupe the second array by creating a 3rd array containing items that do not match items in the first array. In this particular case, that 3rd array (the de-duped one) gets nothing added to it, si it's null. Then when I try to array_merge where one item
[20:22:42] <nitrospectide> is null, KABOOM.
[20:23:28] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Ping timeout: 272 seconds)
[20:26:35] <nitrospectide> Make sense, __adrian, da_wunder, ash_worksi, Naktibalda?
[20:26:41] <ash_worksi> nitrospectide: that's..... not what I meant
[20:26:53] *** Quits: richardjh (~Thunderbi@188.29.247.183.threembb.co.uk) (Quit: richardjh)
[20:26:58] <ash_worksi> nitrospectide: I meant we ("I") wanted to know what goal you're trying to solve by doing all that
[20:27:27] <ash_worksi> like... WHY are you trying to get "at least 2 items"?
[20:27:35] <nitrospectide> ash_worksi: You mean real world - the business logic?
[20:27:58] *** Quits: Rockwood_ (~Rocky@user/rocky) (Read error: Connection reset by peer)
[20:28:56] <da_wunder> if those are "same" events - I would just make union SQL query and use `limit 0, 2` in that - problem solved
[20:28:59] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[20:29:02] *** Quits: pycode (~pycode3@2001:b07:5d28:551:f47e:75b2:aa28:86ce) (Ping timeout: 250 seconds)
[20:29:08] <ash_worksi> I mean, I guess. You're saying what you're doing explicitly but not what you're trying to achieve. It's like me saying, "I want to substr($domain, 10), what am I doing wrong?" when I mean "I want to get the subdomain part of a domain"
[20:30:04] <__adrian> "creating a third array" might make an empty array, but i would not expect null
[20:30:04] <Nekomander> AKA, the xy problem :D
[20:30:38] <__adrian> also why aren't you using https://php.net/array_udiff to de-dupe as suggested yesterday?
[20:31:12] <ash_worksi> if this is coming from a database you can just use DISTINCT
[20:31:16] <__adrian> you could also index the first two arrays before merging them so there wouldn't be dups in the first place
[20:31:22] <__adrian> ^
[20:31:28] <__adrian> that too
[20:31:40] <ash_worksi> it's nice to know what problem we're solving
[20:33:03] <ash_worksi> nitrospectide: so far, your question reads to me, "I have an events array that doesn't contain what I want it to contain."
[20:33:13] <nitrospectide> ash_worksi: It's a Wordpress site where we have industry pages, and events. Some events are tagged to be related to specific industries, some are just general events. When you land on an industry page, we want to show the two next events according to this logic: show the next two that are specifically tagged with this industry, or if there are not 2 of those, fill in with general events. So you might get 2 tagged events, 1 of each, or 2 gen
[20:33:13] <nitrospectide> eral events. In this case, the testing system happens to have only 1 event, so the general events query that grabs all events, gets the same result as the related events query that grabs items tagged specifically with the industry in question.
[20:33:30] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Read error: No route to host)
[20:33:48] <ash_worksi> nitrospectide: and these events come from a database?
[20:34:01] <nitrospectide> __adrian: The way I have it coded, the array is not created until a dupe is found
[20:34:34] <da_wunder> nitrospectide: then I would just make simple UNION SQL query, where you first select event id's that has that tag, and in the second query other events and use `limit 0, 2` with that
[20:35:03] <ash_worksi> ^
[20:35:21] <da_wunder> and after that do something like `$events = array_map(function ($id) { return someWpFunctionToGetEventById($id); }, $yourEventIdArray);`
[20:35:27] <ash_worksi> I was going to say, you basically want a default of general events
[20:36:18] <nitrospectide> Worth mentioning, I am totally inexperienced with SQL, and can't use straight SQL here anyway - I am using the Wordpress API, which I am also inexperienced with. I was working from examples. Result: this may be a bit Frankensteined.
[20:37:52] <da_wunder> so maybe it's time to learn some basic sql - that will help you a lot in the long run
[20:38:09] <nitrospectide> da_wunder: Likely so
[20:38:23] <ash_worksi> I would just query the database for events `WHERE (tags @> :industry OR tags @> :general) ORDER BY tags, created_at`
[20:38:27] <__adrian> there may also be a wp way to do this - also recommend learning more there; /join #wordpress   for that
[20:38:46] <ash_worksi> (or something like that)
[20:38:47] <da_wunder> ^
[20:39:14] <ash_worksi> s/:general/'general'
[20:40:03] *** Quits: DrowningElysium (uid190788@user/drowningelysium) (Read error: No route to host)
[20:40:37] *** Joins: DrowningElysium (uid190788@user/drowningelysium)
[20:42:36] <nitrospectide> It's those unknown unknowns that bite you
[20:42:37] <ash_worksi> or you could split them up and do something like `$events = $eventsRepo->getByIndustry($industry) ?? $eventsRepo->getGeneral();`
[20:43:02] *** Joins: Northwoods (~Northwood@202.14.122.68)
[20:43:49] *** Joins: olle (~olle@i5E866D9B.versanet.de)
[20:43:51] <ash_worksi> where the repos would return `SELECT * FROM events WHERE tags @> :industry ORDER BY created_at` and `SELECT * FROM events WHERE tags @> :general ORDER BY created_at` respectively
[20:45:00] <ash_worksi> I actually don't know how WP handles storage though, so it'd probably be best to ask in #wordpress
[20:46:02] <__adrian> "nitrospectide> __adrian: The way I have it coded ..."  assuming you mean something like  foreach (... as $x) { $array[] = $x; }
[20:46:23] *** Joins: vit (~vit@chello085216193138.chello.sk)
[20:46:24] <__adrian> the proper way to do that is to iniitalize the arrayy forst.  $array = []; foreach (... as $x) { $array[] = $x; }
[20:46:36] <__adrian> that way there's no code path where  $array  is not defined
[20:46:42] <__adrian> *first
[20:46:47] *** vit is now known as Guest6792
[20:47:21] <nitrospectide> __adrian: So that array is empty, but not null? then the merge adds nothing?
[20:47:38] *** Guest6792 is now known as freeworld
[20:47:45] <__adrian> effectively
[20:48:01] <__adrian> yes,  "empty array" is not the same as "null"
[20:48:27] <__adrian> but still, this is all work that should be done in the DB, as others have described
[20:48:50] <__adrian> and even if not, your "de-duping" should be a simple array_udiff()
[20:49:31] <ash_worksi> I haven't been following since the beginning but why not array_unique() ?
[20:49:48] <da_wunder> it's an array of objects
[20:50:11] <ash_worksi> I didn't realize that was a problem for array_unique()
[20:50:25] <da_wunder> and most likely those objects have different reference - as in that is wp
[20:51:11] *** Joins: Poboy (~Poboy@user/poboy)
[20:53:27] <da_wunder> "Two elements are considered equal if and only if (string) $elem1 === (string) $elem2 i.e. when the string representation is the same, the first element will be used." so that won't work with objects if those doesn't have __toString method
[20:55:27] *** Joins: Guest2764 (~sidy@user/sidy)
[20:55:34] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[20:56:26] <ash_worksi> I see, well, I am wondering if the deduping is only necessary because of merging in an array that may contain the same data as the original array
[21:00:41] *** Quits: lara99 (~lara99@93-36-163-139.ip61.fastwebnet.it) (Quit: Client closed)
[21:03:24] *** Quits: pmercado (~pmercado@186.11.16.147) (Ping timeout: 240 seconds)
[21:03:24] *** Joins: pmercado_ (~pmercado@190.22.88.232)
[21:04:38] *** Quits: CoJaBo (~aztec@user/CoJaBo) (Ping timeout: 272 seconds)
[21:10:49] *** Quits: GoldLeader87 (~GoldLeade@2a10:3781:6b:1:39f8:208c:8a8e:81d3) (Quit: GoldLeader87)
[21:17:17] <ash_worksi> nitrospectide: https://3v4l.org/3HgTd
[21:20:06] <da_wunder>  nitrospectide and sql solution - http://sqlfiddle.com/#!9/1d0772/9
[21:25:41] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[21:25:47] <da_wunder> and bit more "realistic" query and data - http://sqlfiddle.com/#!9/a962df/1
[21:29:30] *** Quits: goddard (~goddard@user/goddard) (Remote host closed the connection)
[21:29:50] *** Joins: goddard (~goddard@user/goddard)
[21:33:02] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:8ce:52c8:d2f7:fc08) (Remote host closed the connection)
[21:33:53] <olle> Another go at embedded domain-specific language in PHP, for domain "side-effects": https://gist.github.com/olleharstedt/88752595d8abb0ff7ba7197d26b3d15b
[21:34:10] <olle> Usage: `        $st->if(save($user))->then(pushToStack($dummyUsers, $user->username));
[21:34:13] <olle> `
[21:34:17] *** Quits: varrg (~varrg@h-176-10-198-245.a351.priv.bahnhof.se) (Ping timeout: 256 seconds)
[21:34:28] <ash_worksi> da_wunder: yes much better
[21:35:21] <teresko> da_wunder: wouldn't it be better to only look for IDs in the subselect?
[21:36:13] <teresko> especially since we are looking at mysql there
[21:38:43] <da_wunder> teresko: id's should be enough - I just selected all those to demonstrate what are the end results
[21:38:46] <ramblebamble> olle, not wanting to split hairs, but isn't a domain specific language s.th. that describes operations in a problem domain consciencely? this looks more like functional wrapper to me, also when testing, you want to test logic not the data so switching it out during testing seems somewhat wrong
[21:39:28] <olle> ramblebamble: Sure, you'll test the logic, just not "effectful" logic like $user->save()
[21:39:29] *** Joins: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se)
[21:39:38] <da_wunder> should be quite trivial just to select that id - and then you should have an array of those id's and then you should be able to use some wordpress function to fetch events by those ids
[21:39:41] <olle> You can choose to only dry-run that particular effect
[21:39:49] <ramblebamble> olle yes but thats what you would have mocks for
[21:39:57] <olle> I hate mocks
[21:40:02] <ramblebamble> that is the whole point of dependency injection
[21:40:17] <olle> ramblebamble: This is an alternative to DI and mocking - you need neither now!
[21:40:33] <olle> You can still do it, it's just not a must to test the code.
[21:41:22] <ramblebamble> well you are still doing it though. because if you switch out logic that is a type of injection as well ;)
[21:42:28] <olle> Yeah :)
[21:42:37] <olle> The node evaluator is injected
[21:42:39] <ramblebamble> Also this somewhat reminds me of Spaties pipeline module
[21:42:55] <olle> It's inspired by the "tagless-final" pattern in FP
[21:43:08] <ramblebamble> never heard of it, sauce?
[21:43:25] <olle> ramblebamble: Here's one tutorial for OCaml: https://okmij.org/ftp/tagless-final/course/optimizations.html#primer
[21:43:34] <olle> It's used in Haskell too
[21:44:17] <ramblebamble> yeah k haskell, no wonder I have not heard of it, will check it out though thanks
[21:45:01] <olle> ramblebamble: Hm, found no pipeline stuff for spatie?
[21:45:16] <ramblebamble> btw: your evalNode() are not in any interface or (abstract) class although they seem important, also you could do with a strategie pattern IMHO
[21:45:53] <olle> ramblebamble: Right
[21:46:07] <olle> Each case-block can be factored to a class too
[21:46:44] <olle> Or method. Then you could extend the main NodeEval class and mock particular node eval logic.
[21:47:46] <ramblebamble> olle sorry my bad illuminate not spatie.
[21:47:48] <ramblebamble> https://github.com/illuminate/pipeline/blob/master/Pipeline.php
[21:47:53] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:cc52:7eea:1d8:af54)
[21:48:24] <ramblebamble> olle I would go with the class not method, that way it is easier to scale
[21:52:25] <olle> ramblebamble: Yeah, just thinking of how the mocking code would look like in each case :d
[21:52:35] <olle> I'd end up with a NodeEvaluatorFactory :O
[21:52:44] <olle> To populate each NodeEvaluator
[21:53:01] *** Quits: onichomp (~onichomp@2806:264:4408:12a:1834:a2dd:95eb:3f92) (Read error: Connection reset by peer)
[21:53:20] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[21:53:28] <ramblebamble> why? Strategie pattern does not mean that the evaluation will be happening in the evaluator per se but that the logic to be executed will be put onto the object to be evaluated.
[21:53:40] *** Joins: onichomp (~onichomp@2806:264:4408:12a:1834:a2dd:95eb:3f92)
[21:54:04] <olle> Yes, but that's what you want to replace with a dry-run object. If I get your drift.
[21:54:05] <ramblebamble> So mocking will just bean that you end up providing an implementation of the signature, interface, abstract class  so that it can be consumed by the evaluator
[21:54:25] <olle> Mm
[21:54:45] <ramblebamble> you got it backwards you do not have a dry run evaluator and a node evaluator
[21:55:07] <ramblebamble> you will only have the node evaluator and the things to be evaluated will know if they are dry run or actually have an effect
[21:55:47] *** Quits: Fellipe (~Fellipe@2804:14c:65c2:4cc0::1000) (Quit: Client closed)
[21:56:02] <olle> Not sure I understand. The point is to separate node data from node behaviour.
[21:56:32] *** Quits: filename (~kilitary@185.193.143.131) (Read error: Connection reset by peer)
[21:57:12] <ramblebamble> Also, since you were talking about Haskell and your exampleusage hints at a functional approach, some mindsets do not translate well between but you can write purely or almost purely functional code using closures in PHP, they are quite powerful these days.
[21:57:55] <olle> I did a previous test with only closures.
[21:58:05] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Ping timeout: 256 seconds)
[21:58:26] <olle> But that was only passing around behaviour, and then switch some behaviour in the "effect queue" when needed.
[21:58:52] <ramblebamble> Yeah you can still do that. you have a strategy interface called action with the signature consume data, you have an if-class implementing that, you have a then class implementing that etc. and then you pass all of that to the evaluator and they just call consume-data being non the wiser
[22:00:05] <olle> Hm
[22:01:55] <ramblebamble> As I said, it reminds me of the link for the pipeline-package I have shown you a link of.
[22:02:45] <olle> Yeah, some similar ideas :)
[22:02:53] <olle> Tho I was lacking a usage example there
[22:03:22] <ramblebamble> Request-processing or processing of disjunctive datasets on the same endpoint
[22:04:49] <ramblebamble> you can also pass a Stack around, fill it up in the first part of the pipeline and then execute it later on
[22:06:58] <ramblebamble> Also, empty Interfaces are somewhat bugging me. That is not the purpose of interfaces. an empty contract is void. consider moving logic into it or use  type annotation like Save|PushToStack|If_ Also note that when they have nothing in common but the interface is used to pass them along regardless
[22:07:20] <ramblebamble> i somewhat fear there is a jumbling of purposes going on.
[22:07:43] <olle> ramblebamble: Pipelines work great when you have a clear read-process-write pattern, but offten, "process" is entangled with read and write, I've realised.
[22:07:47] <ash_worksi> da_wunder: maybe more simply http://sqlfiddle.com/#!17/6f3633/1
[22:07:49] *** Joins: pmercado (~pmercado@186.107.38.28)
[22:07:59] <ash_worksi> da_wunder: yours is probably a more efficient query though
[22:08:12] *** Quits: pmercado_ (~pmercado@190.22.88.232) (Ping timeout: 240 seconds)
[22:09:01] <olle> ramblebamble: About empty interface, hard to find a correspondence to algebraic data-types in FP :d
[22:09:02] <ramblebamble> olle, why? it can be kept dynamic, not every step needs to process it and then writes at the end,, I have written dozens of pipelines where a step in between is actually writing data and then either continues processing the pipeline and returning or aborting the pipeline
[22:09:21] <ramblebamble> algebraic data-types?
[22:09:35] <olle> ramblebamble: Feel free to write a solution for createDummyUsers() using pipes ^^ Or maybe I'll try :d
[22:09:55] <ramblebamble> what do you mean by  algebraic data-types?
[22:09:59] *** Quits: Northwoods (~Northwood@202.14.122.68) (Ping timeout: 256 seconds)
[22:10:21] <olle> ramblebamble: https://johnwhitington.net/ocamlfromtheverybeginning/split15.html
[22:10:26] <olle> Also called sum types
[22:10:41] <da_wunder> ash_worksi: might be - dunno - that was just something that did come to my mind first - most likely I would change that alot if/when I start to actually use that
[22:10:52] <olle> I think there's some interest to add that to PHP, by letting Enum carry data around
[22:11:21] <olle> And I think in Rust they actually call it Enum :) To not confuse C++ dev xD
[22:12:27] <ash_worksi> oh mines no good actually
[22:12:29] <ash_worksi> oh well
[22:12:37] <ramblebamble> olle, as I said, a mindset of one programming language does not translate well into another language all the time. For that I would say you have to role your own.
[22:13:17] <olle> Sure, sure
[22:13:24] <olle> It's just an experiment :)
[22:13:27] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:cc52:7eea:1d8:af54) (Remote host closed the connection)
[22:16:30] <ramblebamble> olle, Implement createDummyUser this way: create a pipeline, pass it the a queue, add steps to the pipeline to implementing the strategy-pattern, pass it the stack, and then on the ->then() method of the pipeline you consume the processing-chain that was build during the pipeline.
[22:22:45] <funhouse> creating a basic api, going to give user api key thats it, do you think making them supply it in the header is sufficient?
[22:23:18] <__adrian> that's called a "bearer token"
[22:23:24] <__adrian> the rest depends on implementation
[22:23:32] <olle> ramblebamble: Hm. Doesn't sound like less code...?
[22:23:47] <teresko> depends on what you are making an API for
[22:24:02] <teresko> if it is something like crypto wallet - no, it is not enough
[22:24:07] <__adrian> indeed.  situation/implementation
[22:24:18] <teresko> if it is a cat-picture manage: you'll be fine
[22:24:28] <teresko> *manager
[22:24:30] <__adrian> BUT MY CAT PICS
[22:24:31] *** Joins: bewees (~bewees@user/bewees)
[22:24:45] <ramblebamble> olle writing your own stack to do that is not less code either and it is more errorprone
[22:25:15] <olle> Hmmm
[22:25:32] <bewees> hi, why is this example using AUTO_INCREMENT=2? https://dpaste.com/2RH6X7XT2 It is from this tutorial https://codeshack.io/secure-registration-system-php-mysql/
[22:25:38] <ramblebamble> at the end of the day if you want less code, work on strings all the time and write a monolith nothing runs faster
[22:25:44] <ramblebamble> it is always a tradeoff
[22:25:50] <olle> heh
[22:25:52] <bewees> I think it serves no special reason and can be omitted
[22:26:46] <teresko> funhouse: this might be a "two levels up" security solution: https://httpwg.org/specs/rfc7616.html (one level being HTTP Basic Auth)
[22:26:52] <Albright> bewees: Maybe account id 1 is special and we don't want it to ever exist in the database for some reason… otherwise, yes, it can be omitted.
[22:27:17] <bewees> Albright, I think then he could have offset by 1 :-)
[22:27:36] <__adrian> bewees: i think that speaks to the tutorial's quality
[22:29:57] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: gotta go see you guys later)
[22:30:22] <__adrian> uses password_hash(), and prepared statements, so not terrible. but offsetting the autoinc is not a useful mitigation for anything, and they don't explain why they're doing it anyway
[22:31:48] <bewees> Maybe he doesn't like odd numbers
[22:34:44] *** Joins: Northwoods (~Northwood@202.14.122.68)
[22:37:36] *** Quits: nitrospectide (~Adium@38.65.76.76) (Quit: Leaving.)
[22:44:46] <olle> Who does?
[22:44:47] <Nekomander> I think it's a copypaste from a table export used in the tutorial. I can tell they did not write that table code.
[22:45:16] <Nekomander> If I didn't know better, I would say they literally copied that from phpmyadmin, lmao.
[22:47:00] <Nekomander> bewees, if I were you, I would make use of PDO. The reason for why is explained here: https://phpdelusions.net/pdo/mysqli_comparison
[22:52:26] <funhouse> teresko thank you checking now
[22:54:28] <bewees> Nekomander, Yeah, going to use PDO thanks!
[23:00:03] *** Quits: onichomp (~onichomp@2806:264:4408:12a:1834:a2dd:95eb:3f92) (Read error: Connection reset by peer)
[23:00:44] *** Joins: onichomp (~onichomp@2806:264:4408:12a:1834:a2dd:95eb:3f92)
[23:03:14] *** Quits: Junxter (~Junxter@222.95.164.193) (Read error: Connection reset by peer)
[23:11:45] <Nekomander> bewees, if I were you, I would also read: https://paragonie.com/blog/2015/04/secure-authentication-php-with-long-term-persistence and https://paragonie.com/blog/2017/12/2018-guide-building-secure-php-software
[23:12:04] <Nekomander> and this about password reset: https://paragonie.com/blog/2016/09/untangling-forget-me-knot-secure-account-recovery-made-simple
[23:13:50] <bewees> Thanks, will read them too
[23:14:28] *** Quits: Northwoods (~Northwood@202.14.122.68) (Ping timeout: 272 seconds)
[23:14:28] *** Quits: olle (~olle@i5E866D9B.versanet.de) (Ping timeout: 272 seconds)
[23:20:47] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[23:24:33] *** Quits: onichomp (~onichomp@2806:264:4408:12a:1834:a2dd:95eb:3f92) (Read error: Connection reset by peer)
[23:25:11] *** Joins: onichomp (~onichomp@2806:264:4408:12a:1834:a2dd:95eb:3f92)
[23:26:37] *** Quits: shailangsa (~shailangs@host86-186-127-164.range86-186.btcentralplus.com) (Remote host closed the connection)
[23:40:39] *** Quits: Slartiba1t (~user@c-4dece655.217486-0-69706f6e6c79.bbcust.telenor.se) (Ping timeout: 256 seconds)
[23:42:41] *** Quits: PTNapivoski (~PTNapivos@2804:60:400b:2600:45a3:7cbf:45d0:d21c) (Quit: Leaving)
[23:50:55] *** Joins: PTNapivoski (~PTNapivos@2804:60:400b:2600:45a3:7cbf:45d0:d21c)
[23:55:23] *** Joins: shailangsa (~shailangs@host86-186-127-164.range86-186.btcentralplus.com)
[23:55:46] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[23:56:23] *** Joins: magla (~gelignite@55d44f7e.access.ecotel.net)
