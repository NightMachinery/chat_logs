[00:09:26] *** Quits: emacsomancer (~emacsoman@c-174-52-88-123.hsd1.ut.comcast.net) (Read error: Connection reset by peer)
[00:10:19] *** Joins: emacsomancer (~emacsoman@c-174-52-88-123.hsd1.ut.comcast.net)
[00:13:16] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Remote host closed the connection)
[00:13:37] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[00:19:15] *** Quits: emacsomancer (~emacsoman@c-174-52-88-123.hsd1.ut.comcast.net) (Read error: Connection reset by peer)
[00:20:08] *** Joins: emacsomancer (~emacsoman@c-174-52-88-123.hsd1.ut.comcast.net)
[00:29:05] <pjb> Harag: The purpose of defconstant is to allow the compiler to use immediate addressing, ie. copying the value into the instruction code.  This can work only for small integers and (ascii) characters.  Hence the restriction on values begin the same, ie. EQL.  
[00:30:40] <pjb> Harag: now, granted, a reference to a literal could also be hardwired in the code, since the literals could be stored in a read-only memory region (not subject to GC).  But similar literals can be coallesced only when present in the same compilation-unit.  By default asdf compiles the different files in different compilationunits (but there's an option to compile everything in the same compilation-unit).
[00:31:48] <pjb> Harag: but in any case, very few are the (modern) processors where inlining such a reference in the code is useful.  Defconstant should be restricted to integers, characters and symbols.
[00:36:07] *** Quits: makomo (~makomo@user/makomo) (Quit: WeeChat 3.0.1)
[00:59:49] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 246 seconds)
[01:11:53] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 244 seconds)
[01:19:23] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[01:35:10] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-10-70-54-112-49.dsl.bell.ca) (Ping timeout: 246 seconds)
[01:36:42] *** Quits: dlowe (~dlowe@user/dlowe) (Ping timeout: 240 seconds)
[01:40:59] *** Quits: st_iron (uid370243@id-370243.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[02:11:08] <Harag> pjb: thank you for the detailed explanation, that makes sense. 
[02:14:07] <Harag> pjb: out of curiosity why would you then ever use defconstant ... in practical terms
[02:16:08] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-10-70-54-112-49.dsl.bell.ca)
[02:17:48] <White_Flame> most people use a macro which extends defconstant to check for BOUNDP of the symbol first, and skip if it's already set
[02:18:12] <White_Flame> defconstant also is more of an optimization thing than a correctness thing, though, as mentioned above
[02:18:55] <Harag> White_Flame: I think I have seen that type of macro some where... maybe in hunchentoot code?
[02:20:08] <Harag> White_Flame: my question is how much of a gain/optimization really be?
[02:20:50] <White_Flame> special vars that are accessed a lot can have overhead,in terms of environment lookup in light of possible dynamic bindings
[02:21:23] <White_Flame> and if the constant is purely numeric, then it can be immediate in the machine code
[02:24:38] <Harag> ok can see where the environment lookup could stack up
[02:29:50] <Harag> I was right, its hunchentoot that uses such a macro
[02:30:02] <Harag> and this is the comment "Make sure VALUE is evaluated only once \(to appease SBCL)."
[02:30:13] <Harag> lol @ appease SBCL
[02:31:52] <pjb> Harag: say if you have a fixed size buffer, you could use a constant so that loop for i below +size+ would have the +size+ hardwired in the code.  This would make it more efficient.
[02:32:32] <pjb> Harag: also, you cannot bind constant variables, so that this ensure it's not changed even in local lexical scopes.
[02:33:09] <pjb> I'd say that on modern processors, that'd represent very very little gain.
[02:35:06] <pjb> That said, "variables aren't, constants won't".  It's better to always use defparameter.
[02:35:42] <pjb> (most variables aren't variable, never change; most constant aren't constant, you will want to change them).
[02:35:57] <Harag> lol
[02:36:08] <pjb> check for example PI, You'd imagine it's an immutable eternal constant, right?
[02:36:28] <pjb> Wrong. In clisp, we can change the length of long-float, so PI needs to be recomputed to adjust to that length!
[02:36:54] <pjb> because PI is not π.
[02:37:53] <Harag> well if you can only store integers in constants then pi wont work there anyway?
[02:41:14] <Harag> while we are on the subject of defparameter, where does defvar fit in then
[02:43:21] <White_Flame> the only difference between defparameter and defvar is what happens when it's already set (eg you're reloading the file)
[02:43:34] <White_Flame> defvar will leave it alone, defparameter will reinitialize the value
[02:44:04] <White_Flame> so defvar is often safer for a one-time init when the code will then use it. its value will be retained as you reload your code and your state can continue
[02:44:45] <White_Flame> defparameter is stereotypically for config/parameter values that will be referenced by the code, which can be changed in the .lisp and reloaded to institute those new changes
[02:46:30] <Harag> so defvar wont be set again if loaded from a .fasl then
[02:47:00] <pjb> Harag: so, assume you have a program parameter that you want the user set before loading the program. When you load the program you should not override its value.  Then you'll use defvar.
[02:47:22] <pjb> Harag: but if you want to define a global variable and set it to some specific variable, then you will use defparameter.
[02:47:33] <pjb> Harag: yeah, the names are swapped.  Historical reasons.
[02:48:10] <pjb> The only thing is that the package will have to be defined before the user can set the parameter before loading the program…
[02:48:24] <pjb> Unless you leave your program parameters in CL-USER.
[02:48:41] <Harag> I was about to say how can they set it before you load the program
[02:49:05] <White_Flame> yeah, I have stuff in my .sbclrc that sets some cl-user::*varname* stuff that other stuff ends up reading
[03:25:11] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[03:52:36] *** Joins: hendursaga (~weechat@user/hendursaga)
[04:39:14] *** Quits: random-nick (~random-ni@87.116.165.220) (Ping timeout: 256 seconds)
[05:34:32] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-10-70-54-112-49.dsl.bell.ca) (Remote host closed the connection)
[05:47:39] *** Joins: Oladon (~olad@98.43.81.226)
[06:50:22] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[07:17:05] *** Joins: Guest45 (~Guest45@ool-44c57707.dyn.optonline.net)
[07:17:19] <Guest45> Hey folks
[07:25:59] <beach> Hello Guest45.
[07:26:04] <beach> And Good morning everyone! 
[07:27:18] *** Quits: sts-q (~sts-q@212.53.219.150) (Ping timeout: 252 seconds)
[07:28:04] *** Quits: Guest45 (~Guest45@ool-44c57707.dyn.optonline.net) (Ping timeout: 246 seconds)
[07:34:23] *** Joins: Guest45 (~Guest45@ool-44c57707.dyn.optonline.net)
[07:35:07] <Guest45> I have a weird problem I'm not sure how to Google about. I am trying to learn to Common Lisp and so am writing a silly little password generator. When I run it in the REPL, it behaves as I'd expect, it generates a random password from a static list of chars.
[07:36:04] *** Joins: sts-q (~sts-q@212.53.219.252)
[07:36:05] <Guest45> When I `save-lisp-and-die` however, something strange happens. Given a length, the generated password will always be the same string. I have no doubt there is some simply thing I am overlooking or not understand, but I'm not sure how to lead myself to the correct answer. Any insight would be greatly appreciated.
[07:37:21] <beach> When you restart the image, the random-number generator will always be in the same state every time you restart.
[07:38:02] <beach> Stuff like that is by design, so that if a test suite fails, the random-number sequence can be repeated from a known state.
[07:38:37] <beach> If you don't care about that, initialize the random-number generator from the time of day when you start the image.
[07:39:22] <Guest45> Oh wow..that's really interesting.
[07:39:30] <Guest45> Thanks so much beach that makes a ton of sense
[07:39:39] <beach> Sure.  Good luck!
[07:39:57] <Guest45> Thank you!
[08:09:36] *** Quits: Guest45 (~Guest45@ool-44c57707.dyn.optonline.net) (Quit: Client closed)
[08:34:00] *** Joins: Harag` (~user@105.243.9.173)
[08:37:16] *** Quits: Harag (~user@105.243.9.173) (Ping timeout: 246 seconds)
[08:48:06] *** Joins: beegs (~beegs@2600:8805:d50c:4200::3a89)
[09:02:45] *** Joins: st_iron (uid370243@id-370243.highgate.irccloud.com)
[09:02:53] <st_iron> good morning
[09:03:08] <beach> Hello st_iron.
[09:23:51] <Harag`> Good Morning
[09:28:18] *** Harag` is now known as Harag
[09:29:46] *** Quits: silasfox (~sbv@2001-4dd1-e783-0-bfa3-11b8-a81d-dda9.ipv6dyn.netcologne.de) (Ping timeout: 268 seconds)
[09:31:13] *** Joins: silasfox (~sbv@2001-4dd1-e6dc-0-1565-bb31-21a9-ccc5.ipv6dyn.netcologne.de)
[09:54:19] <beach> Hello Harag.
[10:28:18] *** Quits: silasfox (~sbv@2001-4dd1-e6dc-0-1565-bb31-21a9-ccc5.ipv6dyn.netcologne.de) (Ping timeout: 240 seconds)
[10:30:28] *** Joins: silasfox (~sbv@2001-4dd1-e783-0-bfa3-11b8-a81d-dda9.ipv6dyn.netcologne.de)
[12:37:20] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:40:05] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[14:00:22] <pjb> Guest45 needed: (setf  *random-state* (make-random-state t))
[14:01:17] <pjb> beach: one cannot initialize the random-state from the time of day in CL, since it is opaque.
[14:04:28] <pjb> beach: also, nowadays it is insufficient to use the time of the day as a PRNG seed, because it is usually incremented at a rate that is too low compared to the speed of our computers.  Similarly, make has problems with the time stamp in the file system that are stored usually with a resolution of  second, when it can compile several files within that second! (I don't know about make, but new build programs use hashes of the files to
[14:04:29] <pjb> make sure).
[14:11:41] <beach> Yes, I see.
[14:25:00] *** Joins: Cymew (~ante@c-e989225c.023-1144-7570702.bbcust.telenor.se)
[14:31:56] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[14:34:29] *** Joins: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net)
[14:35:21] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 256 seconds)
[14:37:10] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 268 seconds)
[14:55:28] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[14:55:55] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-10-70-54-112-49.dsl.bell.ca)
[14:58:18] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 240 seconds)
[15:04:08] *** Joins: random-nick (~random-ni@87.116.181.229)
[15:09:04] *** Joins: fef (~thedawn@user/thedawn)
[15:38:15] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[16:26:19] *** Joins: selwyn (~selwyn@user/selwyn)
[17:23:30] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 272 seconds)
[17:25:11] *** Joins: aeth (~aeth@user/aeth)
[17:56:08] *** Joins: dlowe (~dlowe@user/dlowe)
[18:21:10] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[18:42:03] *** Joins: aeth_ (~aeth@user/aeth)
[18:42:29] *** Quits: aeth (~aeth@user/aeth) (Killed (NickServ (GHOST command used by aeth_)))
[18:42:34] *** aeth_ is now known as aeth
[18:57:33] *** Joins: selwyn (~selwyn@user/selwyn)
[19:22:16] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[19:25:25] *** Quits: st_iron (uid370243@id-370243.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[19:33:30] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 240 seconds)
[19:37:23] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 256 seconds)
[19:39:22] *** Joins: aeth (~aeth@user/aeth)
[19:42:17] *** Joins: thrig (~thrig@65.113.153.50)
[19:59:08] *** Quits: silasfox (~sbv@2001-4dd1-e783-0-bfa3-11b8-a81d-dda9.ipv6dyn.netcologne.de) (Quit: WeeChat 3.2)
[20:36:12] *** Quits: fengshaun (~fengshaun@68.69.214.210) (Quit: bibi!)
[20:36:43] *** Joins: fengshaun (~fengshaun@68.69.214.210)
[20:37:53] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-10-70-54-112-49.dsl.bell.ca) (Remote host closed the connection)
[20:38:36] *** Quits: Cymew (~ante@c-e989225c.023-1144-7570702.bbcust.telenor.se) (Ping timeout: 265 seconds)
[21:27:22] *** Joins: selwyn_ (~selwyn@user/selwyn)
[21:29:50] *** Quits: selwyn (~selwyn@user/selwyn) (Ping timeout: 265 seconds)
[21:31:22] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-10-70-54-112-49.dsl.bell.ca)
[21:44:30] *** Quits: selwyn_ (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[21:53:12] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[21:55:28] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Client Quit)
[21:57:41] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[22:43:15] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 256 seconds)
[22:51:44] *** Quits: dlowe (~dlowe@user/dlowe) (Ping timeout: 268 seconds)
[23:15:26] *** Quits: thrig (~thrig@65.113.153.50) (Remote host closed the connection)
[23:32:06] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-10-70-54-112-49.dsl.bell.ca) (Ping timeout: 272 seconds)
[23:45:01] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 256 seconds)
[23:59:26] *** Joins: tyson2 (~user@cpe44d9e795a64f-cm688f2e2dfaa0.cpe.net.cable.rogers.com)
