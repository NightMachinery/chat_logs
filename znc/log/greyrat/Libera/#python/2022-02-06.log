[00:00:39] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[00:01:01] *** Joins: freefall (~owner@2600:6c40:1600:39ec:6056:ba9d:b7f4:2a62)
[00:01:13] *** Quits: rando25892 (~homefame@user/rando25892) (Ping timeout: 256 seconds)
[00:01:14] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:01:20] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[00:01:50] *** Joins: karlpinc` (~user@173-161-46-9-illinois.hfc.comcastbusiness.net)
[00:02:02] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[00:02:22] *** Joins: rando25892 (~homefame@user/rando25892)
[00:02:44] *** Quits: Cyp (~cyp@213.237.88.120) (Excess Flood)
[00:02:58] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:ac33:9d52:7dc:f94b) (Quit: Textual IRC Client: www.textualapp.com)
[00:03:15] *** Joins: Cyp (~cyp@213.237.88.120)
[00:03:49] *** Quits: karlpinc (~user@173-161-46-9-Illinois.hfc.comcastbusiness.net) (Ping timeout: 256 seconds)
[00:04:04] *** Quits: ecool (~ecool@ecool.dev) (Quit: ZNC 1.6.6+deb1ubuntu0.2 - http://znc.in)
[00:04:31] *** Joins: ecool (~ecool@ecool.dev)
[00:04:40] <freefall> i need help with tkinter textbox... it say text_box.inser(var,var) attributeError nonetype object has no attribute 'insert'
[00:04:59] <freefall> insert i mean not inser
[00:05:01] *** Quits: bluedust_ (~bluedust@117.217.146.23) (Remote host closed the connection)
[00:05:36] *** Joins: bluedust (~bluedust@117.217.146.23)
[00:05:50] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[00:07:57] <deniska> freefall: `text_box` ended up being None somehow
[00:08:31] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Read error: Connection reset by peer)
[00:08:35] <freefall> im also working within a class function so im not sure if it that
[00:09:47] *** Joins: kilitary (~kilitary@188.68.215.221)
[00:10:00] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[00:10:01] *** Quits: bluedust (~bluedust@117.217.146.23) (Ping timeout: 250 seconds)
[00:10:58] *** Quits: dvx (~dvx@5.181.92.64) (Quit: dvx)
[00:12:08] <deniska> freefall: anyway, it would be easier to help you if you show the code, use a service like https://bpa.st/+python
[00:12:37] <freefall> ok here 2 parts of the code... self.displaydata=Text(root, height=4, width=40).grid(column=4) and in a different def it self.displaydata.insert(root, self.stockname)
[00:12:58] <freefall> im i using this method wrong?
[00:13:12] *** Joins: alaudet (~al@129.222.177.229)
[00:14:26] *** Joins: c4017w__ (~c4017@209.52.68.8)
[00:14:43] <freefall> https://bpa.st/PKBA
[00:15:10] *** Joins: duuude (~user@user/duuude)
[00:15:34] <deniska> freefall: I think you are supposed to do `self.displaydata=Text(root, height=4, width=40)` and then maybe do `self.displaydata.grid(column=4)`
[00:15:46] <deniska> freefall: .grid() call probably returns None
[00:16:59] *** Sargento is now known as messi
[00:17:24] *** messi is now known as mesi
[00:17:39] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Ping timeout: 256 seconds)
[00:17:59] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[00:18:04] *** mesi is now known as Sargento
[00:18:39] <freefall> grid just tell where to put the box...
[00:18:47] *** Quits: msek_ (~Username@pd9fa841f.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[00:19:34] <deniska> freefall: yes, but Text() creates a Text object, and .grid() just does something to this object, returning None
[00:19:35] <freefall> oh yeah ok deniska
[00:19:41] <freefall> i think i see my mistake
[00:19:49] <deniska> freefall: so you end up saving None to the attribute, instead of the actual Text object
[00:19:52] *** Joins: mattfoxxx (~mattfoxxx@200116b822ba5e00f9783ff2bfc0cc37.dip.versatel-1u1.de)
[00:20:05] <freefall> i have had this happen before with something else
[00:20:12] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[00:20:12] <freefall> still new to this
[00:20:43] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[00:22:40] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[00:23:01] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 250 seconds)
[00:23:19] <freefall> deniska that was the problem
[00:24:08] *** Quits: onichomp (~onichomp@2806:264:4408:5d:a80d:ebda:c447:6602) (Read error: Connection reset by peer)
[00:24:47] *** Joins: onichomp (~onichomp@2806:264:4408:5d:a80d:ebda:c447:6602)
[00:26:15] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[00:28:37] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[00:29:05] *** Joins: ano (~ano@user/ano)
[00:29:12] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[00:31:15] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:31:23] *** Joins: imp (~imp@138-59-122-25.static.sumicity.net.br)
[00:32:16] *** Joins: alex_ (~alex11@user/alex11)
[00:32:37] *** Quits: alex11 (~alex11@user/alex11) (Ping timeout: 240 seconds)
[00:32:55] *** Quits: alex_ (~alex11@user/alex11) (Client Quit)
[00:32:55] *** Joins: Viewday117 (~Viewday@user/viewday)
[00:33:17] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[00:33:23] *** Joins: Pickchea (~private@user/pickchea)
[00:34:24] *** Joins: dme86 (~dan@user/dan86)
[00:34:36] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[00:34:36] *** Viewday117 is now known as Viewday11
[00:35:11] *** Joins: gitly (~gitly@148.252.129.10)
[00:35:37] *** Joins: vit (~vit@chello085216193138.chello.sk)
[00:36:01] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[00:36:01] *** vit is now known as Guest7003
[00:36:32] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[00:37:08] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[00:38:01] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[00:38:12] *** Quits: masoudd (~masoudd@user/masoudd) (Quit: Leaving)
[00:39:25] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 256 seconds)
[00:39:38] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:97a6:ed9a:65a8:a13c) (Remote host closed the connection)
[00:39:51] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:97a6:ed9a:65a8:a13c)
[00:43:22] *** Quits: DavidMilestone (~DavidMile@2409:4053:2295:6a26:bd0b:a8b9:b529:93a2) (Quit: Ping timeout (120 seconds))
[00:44:37] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 240 seconds)
[00:45:07] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[00:46:57] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[00:47:18] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:60ef:8113:9157:1102) (Ping timeout: 250 seconds)
[00:48:10] *** Quits: duuude (~user@user/duuude) (Ping timeout: 250 seconds)
[00:48:24] *** Joins: adde9708 (uid139358@id-139358.tinside.irccloud.com)
[00:48:44] *** kostkon__ is now known as kostkon
[00:49:08] <freefall> deniska: you still here?
[00:50:37] *** Joins: alex11 (~alex11@user/alex11)
[00:51:00] <freefall> im getting a self.tk.call((self._w, 'insert', index, chars)+args) _tkinter.TcLError: bad text index "."
[00:52:05] <deniska> freefall: the error says that index is a ".", it probably expected a number?
[00:52:33] *** Quits: therufuser (~therufuse@p5b0003d1.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[00:52:57] *** Quits: mattfoxxx (~mattfoxxx@200116b822ba5e00f9783ff2bfc0cc37.dip.versatel-1u1.de) (Ping timeout: 240 seconds)
[00:54:23] <freefall> ok it coming out of a list i think i really dont know how to tell
[00:55:16] <freefall> i mean it will print to console what in the var but it wont send to the text box what in it
[00:58:07] *** Quits: ice9 (~ice9@user/ice9) (Quit: Leaving)
[00:58:18] *** Joins: ice9 (~ice9@user/ice9)
[01:00:29] *** Quits: nicode (~nic@2607:f2c0:9545:ab00:3e60:8518:dd62:e6e8) (Ping timeout: 256 seconds)
[01:01:11] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[01:01:12] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[01:01:47] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[01:02:35] *** Joins: nicode (~nic@2607:f2c0:9545:fa00:dee7:6718:e07b:924c)
[01:03:01] *** Joins: Octan (~gabriel@181.223.199.100)
[01:03:19] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 250 seconds)
[01:03:25] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[01:04:21] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[01:04:49] *** Joins: newpy (~newpy@Lsvl-382-HQ-OPN.massivenetworks.net)
[01:05:13] <newpy> I'm trying to delete rows from a numpy array based on the return value of a function which accepts said rows
[01:05:23] <newpy> can't find the appropriate numpy function for this
[01:05:46] *** Joins: kostkon_ (~androirc@2a02:587:a116:f212:4109:3cf5:55f4:55f5)
[01:07:25] <SnoopJ> newpy, you can't really add/remove rows to an ndarray, you end up making a new one. You can use "advanced indexing" to do this if you know the indices of the rows, though: `newarr = arr[[0, 2, 4], ...]` will make a new array from rows 0, 2, 4 of `arr`
[01:08:24] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[01:09:07] <freefall> deniska: i found my error.. apparently i was thnking i needed to put the main window var in when it wasnt want that.. it wanted to know where at should the text go in the box at what line.. so it should of been textboxname.insert(where in text box line, what to place)
[01:11:16] <newpy> SnoopJ, that's fine, but basically what I want to do is use pass the first value in each row to a function (which uses that value as a dictionary key) and based on the return value determine whether to include the row in the new array
[01:12:21] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[01:12:24] <newpy> SnoopJ I'll just use a regular list comprehension if there is no numpy way to do it
[01:13:11] <SnoopJ> newpy, `arr[:, 0]` will give you the first element in each row of a 2D array.
[01:13:50] <SnoopJ> the official documentation has a very thorough write-up of array indexing: https://numpy.org/doc/stable/reference/arrays.indexing.html
[01:13:57] *** Joins: dre (~dre@2001:8003:c932:c301:3356:3f6e:5d90:d014)
[01:14:19] *** Quits: brentaarnold (~brentaarn@24.112.58.14) (Ping timeout: 256 seconds)
[01:14:37] *** Joins: brentaarnold (~brentaarn@24.112.58.14)
[01:14:55] *** Joins: c4017w_ (~c4017@209.52.68.8)
[01:16:08] <newpy> SnoopJ yes I know about arr[:,0], but how would I pass one element at a time to a function and in/exclude the row based on the return value?
[01:16:55] <SnoopJ> newpy, you will be stuck iterating if you need each value 'unpacked' from the array (note that this is dreadfully slow)
[01:17:08] *** Joins: mattfoxxx (~mattfoxxx@200116b822ba5e00f9783ff2bfc0cc37.dip.versatel-1u1.de)
[01:17:47] <Repiphany> arr[bool_function(arr[:,0])]
[01:17:56] <aphysically> I have a problem :(
[01:18:07] <SnoopJ> Repiphany, their remark about using the array entries as dict keys makes me think it's hard to vectorize the predicate
[01:18:14] *** Joins: Trigraph (~Trigraph@user/trigraph)
[01:18:29] <aphysically> __getitem__ can't distinguish between [a, b] and [(a, b)]
[01:18:32] <SnoopJ> newpy, if you do iterate I would probably call `arr[:, 0].tolist()` and then iterate that, it does all the slow stuff up front at least
[01:18:37] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[01:18:41] <SnoopJ> aphysically, there's no distinction to make, those are exactly the same
[01:18:47] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:97a6:ed9a:65a8:a13c) (Quit: pvergain)
[01:18:58] <aphysically> yes, this is my problem :)
[01:19:30] <aphysically> because, in typing.py people have expressly kept open the desire to add tuple literals as a possible meaning to typing down the line
[01:19:41] <SnoopJ> my point is that it's a tuple either way
[01:19:51] <aphysically> but that means we can't distinguish between Final[int, str] and Final[(int, str)], because they're a tuple either way
[01:19:54] <SnoopJ> yea
[01:20:25] <aphysically> but I'm cleaning up typing.py cruft, and the runtime code that disallows Final[int, str] cannot be reasonably made without disallowing a tuple literal
[01:20:36] <aphysically> but people will likely object to this distinction
[01:20:51] <aphysically> because they want to allow for tuple types potentially in the future
[01:21:17] <aphysically> but now this is a huge mess, because for typeforms that accept one *or more* arguments, what do you do now?
[01:21:22] <Repiphany> I guess you could still use numpy.vectorize just for the broadcasting if you don't care about speed
[01:22:24] *** Joins: idiocrash_ (~textual@216.73.163.42)
[01:22:29] *** Quits: elias117 (~elias117@user/elias117) (Ping timeout: 256 seconds)
[01:22:37] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[01:22:50] <SnoopJ> that's probably a given if these are going into a dict lookup heh
[01:23:33] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[01:23:37] *** Quits: idiocrash (~textual@216.73.163.85) (Ping timeout: 256 seconds)
[01:23:48] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[01:24:08] <SnoopJ> by the "speed" ruler that numpy optimizations use, anyway. depending on the size of the data and the context it might be fine to 'just' iterate in terms of speed.
[01:24:15] <aphysically> at runtime Union[typeform] -> typeform, but Union[int, str] -> Union[int, str], so for better or worse python in PEP has already committed to disallowing tuple types
[01:24:23] <aphysically> even if people didn't realize it at the time
[01:25:53] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[01:28:06] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8)
[01:28:34] <jinsun> what would tuple literals do as types? outside of stuff like Union
[01:29:06] *** Quits: martums5 (~martums@user/martums) (Read error: Connection reset by peer)
[01:29:58] *** Joins: martums5 (~martums@user/martums)
[01:31:00] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[01:32:36] <aphysically> whatever a future PEP decides
[01:33:16] *** Quits: rwbrambler (~Thunderbi@65.183.138.202) (Quit: rwbrambler)
[01:33:21] *** Joins: elias117 (~elias117@user/elias117)
[01:33:23] *** Joins: cuz (~user@50.226.229.246)
[01:34:05] *** Joins: cuz` (~user@50.226.229.246)
[01:34:31] *** Quits: mattfoxxx (~mattfoxxx@200116b822ba5e00f9783ff2bfc0cc37.dip.versatel-1u1.de) (Ping timeout: 250 seconds)
[01:34:50] *** Quits: aslicedbanjo (~aslicedba@81.141.54.244) (Quit: Leaving.)
[01:35:12] <jinsun> I mean why do people have desires to use tuple literals as types in the future?
[01:36:02] <Trigraph> is there an elegant way to get chars as key and index as values in this example enumerate yields index, chars. i was looking for char, idx
[01:36:04] <Trigraph> import string; d = dict(enumerate(string.ascii_lowercase))
[01:37:39] <SnoopJ> Trigraph, does this comprehension do what you want? `d = {char: idx for idx,char in enumerate(string.ascii_lowercase)}`
[01:37:53] *** Quits: cuz (~user@50.226.229.246) (Ping timeout: 256 seconds)
[01:39:07] <Trigraph> hi SnoopJ it does i was trying to avoid using comprehension
[01:39:09] *** Joins: duuude (~user@user/duuude)
[01:39:14] <SnoopJ> why?
[01:40:13] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[01:40:15] <Trigraph> i am re-reading python book and it has not yet elaborated comprehensions
[01:40:25] <ChrisWarrick> that’s not really a good reason to avoid a structure
[01:40:27] *** Joins: bkhl (~bkhl@user/bkhl)
[01:40:55] <Repiphany> fwiw you can write a function like `def letter_index(c): return ord(c) - ord('a')`
[01:41:06] <SnoopJ> I'm not sure there's a good way to spell out what you want without a loop of some sort. I guess if comprehensions are off the table, you could initialize an empty dict and add to it in a 'regular' loop
[01:41:06] <ChrisWarrick> you should be open to structures you haven’t seen before and just research them if they come up
[01:41:18] <SnoopJ> Repiphany, I believe they want the index in the particular string
[01:41:29] <SnoopJ> although that coincides with that function for this particular string
[01:41:34] *** Quits: fannagoganna (uid110488@id-110488.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[01:41:44] <Trigraph> ah SnoopJ, yes that is an option
[01:42:15] <SnoopJ> something like: `d = {}; for idx,char in enumerate(s): d[char] = idx`
[01:42:39] <jinsun> you can do it with zip and range, but it is uglier than the comprehension really
[01:42:41] <jinsun>  dict(zip(string.ascii_lowercase, range(len(string.ascii_lowercase))))
[01:43:19] <SnoopJ> jinsun, I was considering a spelling that zipped the string with a count() instance but thought better of it
[01:43:48] *** Joins: kickingvegas (~cchoi@c-67-170-234-150.hsd1.ca.comcast.net)
[01:43:51] <jinsun> yeah that's not much better
[01:44:23] *** Quits: Deknos (~someone@user/menace) (Quit: Deknos)
[01:45:07] <Trigraph> i like the zip one, why is it uglier
[01:45:25] <grym> range(len( ... yich
[01:45:31] <jinsun> range(len( and string.ascii_lowercase repeated
[01:45:49] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 256 seconds)
[01:46:39] <SnoopJ> enumerate() is a concise and descriptive name for this task, it just happens to have the 'wrong' order if you want to feed the result directly to dict()
[01:46:43] *** Joins: df00z38 (~df00z@cpe-98-10-33-32.rochester.res.rr.com)
[01:47:17] <SnoopJ> the empty-dict-and-loop spelling is morally equivalent to the comprehension, just not using the fancy syntax
[01:47:23] <aphysically> uhoh all the cpython bots are sleeping
[01:48:11] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[01:49:07] *** Joins: Fairy (~Fairy@ti0004a400-5385.bb.online.no)
[01:50:15] <Trigraph> thank you, i guess comprehensions are way to go :)
[01:50:45] *** Quits: kilitary (~kilitary@188.68.215.221) (Read error: Connection reset by peer)
[01:51:32] <aphysically> looks like maybe error is on github's side of things
[01:51:45] <aphysically> yes https://www.githubstatus.com :^(
[01:51:47] *** Joins: kilitary (~kilitary@188.242.105.134)
[01:52:26] *** Quits: ThePhilgrim (~ThePhilgr@151.41.4.108) (Ping timeout: 245 seconds)
[01:55:41] *** Quits: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net) (Ping timeout: 256 seconds)
[01:55:42] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[01:55:58] *** Joins: asix (~Anders@user/asix)
[01:56:08] *** Joins: Celeo (~Celeo@user/celeo)
[01:57:34] *** Quits: ice9 (~ice9@user/ice9) (Read error: Connection reset by peer)
[01:58:23] *** Quits: cuz` (~user@50.226.229.246) (Remote host closed the connection)
[01:58:30] *** Joins: cuz` (~user@50.226.229.246)
[01:59:08] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[01:59:18] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[01:59:34] <jinsun> feels like github problems frequency increased in last 2 weeks
[01:59:59] *** Quits: MmeQuignon (~MmeQuigno@2a01:e0a:1ab:f090:8464:37c0:f89d:bf6a) (Ping timeout: 256 seconds)
[02:00:21] <jinsun> or maybe I'm just looking at github more frequently
[02:00:31] *** Joins: Masklin (~joel@h-155-4-23-152.A230.priv.bahnhof.se)
[02:02:23] *** Joins: fannagoganna (uid110488@id-110488.tinside.irccloud.com)
[02:02:36] *** Joins: ice9 (~ice9@user/ice9)
[02:03:22] *** Quits: KeiraT (~k@lulzsec.co.uk) (Quit: KeiraT)
[02:03:39] *** Quits: bkhl (~bkhl@user/bkhl) (Remote host closed the connection)
[02:04:03] *** Joins: bkhl (~bkhl@user/bkhl)
[02:04:38] *** Quits: df00z38 (~df00z@cpe-98-10-33-32.rochester.res.rr.com) (Quit: Client closed)
[02:06:27] *** Quits: Payam (~Payam@c83-250-236-236.bredband.tele2.se) (Ping timeout: 256 seconds)
[02:09:01] *** Quits: enyc (~enyc@user/enyc) (Ping timeout: 240 seconds)
[02:10:45] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:943b:a228:7c24:6437)
[02:13:49] *** Quits: greedom (~greedom@p200300de673482009f127552c29b5718.dip0.t-ipconnect.de) (Remote host closed the connection)
[02:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:10] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-e493-34a2-5f11-9e6f.res6.spectrum.com) (Read error: Connection reset by peer)
[02:15:26] *** Joins: c4017w__ (~c4017@209.52.68.8)
[02:15:31] *** Quits: Guest3 (~Guest3@106.51.143.241) (Ping timeout: 256 seconds)
[02:15:59] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:16:53] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[02:18:41] *** Quits: Kanjizai (~kanjizai@cpe-107-185-193-171.socal.res.rr.com) (Quit: bbs)
[02:18:43] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[02:19:00] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[02:20:03] *** Joins: promey (~Promeys@gateway/tor-sasl/promey)
[02:20:38] <Swayze> definitely a lot more ppl talking about self hosting
[02:23:17] <mefistofeles> jinsun: does seem like february is a bad month for GHA https://www.githubstatus.com/history
[02:24:01] <newpy> any colorscheme recommendations (for text editors)?
[02:24:15] <Peng> I had the impression GitHub reliability was above-average for a while. And now it's... not...
[02:24:29] <Peng> Mayeb they don't deploy as much over the holidays
[02:24:54] <SnoopJ> mefistofeles, looks like Scalene's web visualizer is now hosted locally by default
[02:25:13] <mefistofeles> SnoopJ: nice, I saw how it's integrated with notebooks now as well, that's cool
[02:25:34] <SnoopJ> ooh I hadn't heard about that, but that's neat
[02:27:18] <mefistofeles> SnoopJ: yeah, that seems like can be pretty handy, I have to dig into it again because last time I couldn't extract anything very useful from Scalene
[02:27:55] <SnoopJ> yea I still haven't really used it for much
[02:28:26] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[02:28:47] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[02:28:48] *** Joins: therufuser (~therufuse@p5b0003d1.dip0.t-ipconnect.de)
[02:30:01] *** Joins: ouestbillie (~ced@192-222-138-215.qc.cable.ebox.net)
[02:30:15] <ouestbillie> so lets say i wanna do some cleanup in a finally block, removing some files
[02:30:23] <ouestbillie> except some files might not exist
[02:30:24] *** Joins: j0ma (~jonne@89.36.78.168)
[02:30:25] *** Quits: Celeo (~Celeo@user/celeo) (Ping timeout: 250 seconds)
[02:30:42] <ouestbillie> do i have to combinatoriollay  do move try finally blocks?
[02:30:47] <ouestbillie> that doesnt sound right?
[02:32:34] *** Quits: j0ma (~jonne@89.36.78.168) (Quit: WeeChat 3.4)
[02:32:41] *** Joins: Viewday118 (~Viewday@user/viewday)
[02:32:48] *** Quits: RougeR (~rougex250@user/rouger) (Remote host closed the connection)
[02:32:50] *** Joins: j0ma (~jonne@89.36.78.168)
[02:33:05] *** Quits: Octan (~gabriel@181.223.199.100) (Ping timeout: 256 seconds)
[02:33:44] <ChrisWarrick> https://docs.python.org/3/library/pathlib.html#pathlib.Path.unlink -> I’d pass missing_ok=True
[02:33:56] *** Quits: noarb (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[02:34:13] *** Joins: KeiraT (~k@lulzsec.co.uk)
[02:34:14] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[02:34:15] *** Viewday118 is now known as Viewday11
[02:34:33] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[02:36:11] <ouestbillie> ChrisWarrick: oh cheers man exactly what I needed
[02:37:17] *** Quits: freefall (~owner@2600:6c40:1600:39ec:6056:ba9d:b7f4:2a62) (Quit: Leaving)
[02:37:33] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[02:39:35] *** Joins: auk (auk@gateway/vpn/protonvpn/auk)
[02:39:51] *** Quits: emad (~emad@156.214.198.176) (Quit: Leaving)
[02:40:10] *** Joins: emf (~emf@2620:10d:c090:400::5:ab3f)
[02:40:47] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 256 seconds)
[02:42:16] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[02:42:56] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:44:25] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[02:44:29] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[02:45:05] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:45:31] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Remote host closed the connection)
[02:46:10] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[02:46:43] <aphysically> jinsun: idk, I think people were hoping (int, str) might be short for tuple(int, str) someday
[02:46:59] <aphysically> or [int] could be short for sequence[int] or list[int] or some such
[02:47:27] <aphysically> there's no concrete proposal but I think the idea has been to avoid making changes that explicitly preclude that sort of syntax evolution
[02:48:14] <jinsun> ah kind of a special syntax for types that have special literal syntax
[02:49:10] <ouestbillie> also i need to launch a process with a shitty cli interface from pytest, it works if I use the full command with Popen's shell=True but then I get runaway processes, I tried to do it the sane way but then it gets defunct
[02:49:12] <ouestbillie> http://paste.debian.net/1229738/
[02:49:41] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[02:49:59] <jinsun> aphysically: for list, instead of [int], I'd like something  like how other languages do arrays, int[]
[02:50:20] <ouestbillie> also as for types, at first the seperate case for type hints bothered me but i find it makes it more readable actually
[02:50:39] <ouestbillie> esp since type checking are an afterthought and not properly part of the language
[02:50:58] *** gitly is now known as mr_hands
[02:51:26] *** mr_hands is now known as goutly
[02:51:32] <aphysically> yeah, nobody has actually proposed anything like this. But mostly it's a possibility in the future. Except for tuples. __getitem__ kind of precludes that.
[02:52:02] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[02:52:05] <ouestbillie> they did the tuple instead of typing.Tuple though nah?
[02:52:06] *** goutly is now known as gitly
[02:52:26] <ouestbillie> also if someone could help me out with my paste above id be so glad, this thing has been driving me nuts
[02:52:38] <ouestbillie> the hacky solution works but its sooo, fucking ugly
[02:52:57] <jinsun> yes Tuple -> tuple was doe in 3.9 with GenericAlias
[02:54:07] <jinsun> now we were talking about just using (int, int) instead of tuple[int, int]
[02:54:10] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[02:54:29] <jinsun> but that won't be possible because of how getitem works
[02:54:49] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[02:55:02] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[02:55:55] *** Joins: savolla (~quassel@88.227.92.215)
[02:57:47] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[02:57:52] *** Joins: zebrag (~chris@user/zebrag)
[02:58:02] <aphysically> bjs: I have a PR open that replaces the callable check with an explicit tuple check (for unrelated reasons)
[02:58:16] *** Quits: upsala (~zcb@185.213.155.252) (Quit: WeeChat 3.4)
[02:58:19] *** Quits: enoq (~enoq@194-208-178-35.lampert.tv) (Quit: enoq)
[02:58:24] <aphysically> and amusingly this *entirely coincidentally* causes that test we discussed to still pass, because one of the arguments it passes just happens to be a tuple
[02:58:42] <aphysically> anyway I submitted a PR to properly fix it
[02:58:54] <aphysically> https://github.com/python/cpython/pull/31148
[03:00:12] *** Quits: junebug (~junebug@2600:1700:3db0:2540:4fb9:6e37:792b:8bf0) (Remote host closed the connection)
[03:00:36] *** Joins: junebug (~junebug@2600:1700:3db0:2540:f4ec:8761:4b5a:58b8)
[03:01:37] *** Joins: SorinK (~SK@79.117.214.92)
[03:01:39] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca) (Ping timeout: 256 seconds)
[03:01:54] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[03:02:37] *** Quits: parv (~quass@user/parv) (Ping timeout: 240 seconds)
[03:03:17] *** Quits: idiocrash_ (~textual@216.73.163.42) (Ping timeout: 240 seconds)
[03:03:56] *** Joins: PJBoy (~PJBoy@user/pjboy)
[03:04:36] *** Joins: Adoi (~Adoi@user/adoi)
[03:04:55] *** Quits: martums5 (~martums@user/martums) (Read error: Connection reset by peer)
[03:05:48] *** Joins: martums5 (~martums@user/martums)
[03:06:17] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[03:07:27] *** Parts: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[03:08:25] *** Joins: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1)
[03:08:33] *** Quits: j0ma (~jonne@89.36.78.168) (Ping timeout: 256 seconds)
[03:09:57] *** Joins: noarb (~noarb@user/noarb)
[03:10:02] *** Quits: vurr (~seymon@82.131.10.22.cable.starman.ee) (Remote host closed the connection)
[03:10:17] *** Joins: j0ma (~jonne@146.115.163.209)
[03:13:28] <aphysically> it keeps going downhill https://www.githubstatus.com/
[03:14:49] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:14:54] <mefistofeles> oh noes
[03:14:57] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[03:15:35] *** Quits: nomic (~nomic@185.217.117.244) (Quit: Leaving)
[03:15:48] <mefistofeles> I wonder if this explains the `ImportError`s I'm seeing with the CI workflows
[03:15:55] *** Joins: c4017w_ (~c4017@209.52.68.8)
[03:16:10] <mefistofeles> even though I started seeing that yesterday
[03:18:20] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[03:18:45] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 256 seconds)
[03:19:33] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[03:22:00] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[03:22:05] *** Joins: nomic (~nomic@185.217.117.244)
[03:22:41] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[03:24:40] *** Quits: j0ma (~jonne@146.115.163.209) (Quit: WeeChat 3.4)
[03:25:27] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 250 seconds)
[03:25:55] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[03:26:22] *** Joins: saline_retry_ (auk@gateway/vpn/protonvpn/auk)
[03:26:25] *** Quits: Sargento (uid523534@wikipedia/Sargento-de-Hierro) (Quit: Connection closed for inactivity)
[03:26:34] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[03:26:55] *** Quits: auk (auk@gateway/vpn/protonvpn/auk) (Ping timeout: 256 seconds)
[03:27:17] *** Joins: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net)
[03:27:29] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:29:42] <foo> Anyone in here go all in on pendulum for time and ditch arrow? Their recent change makes it difficult to get current unix timestamp in ms. Kind of dumb. arrow.get().timestamp() returns 1644105573.981665
[03:29:48] <foo> Actually, I guess I could simply round that
[03:29:51] *** Joins: audiobirb (~audio@user/audio)
[03:30:02] *** Quits: waxfire6 (~waxfire@65.119.2.240) (Quit: The Lounge - https://thelounge.chat)
[03:30:16] <foo> Well, nevermind, heh.
[03:30:38] *** Joins: waxfire6 (~waxfire@65.119.2.240)
[03:30:54] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:30:57] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 240 seconds)
[03:31:43] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8) (Ping timeout: 250 seconds)
[03:33:43] *** Quits: portalrat (~portalrat@user/portalrat) (Quit: Leaving)
[03:34:25] *** saline_retry_ is now known as auk
[03:34:57] *** Joins: jazzy (~jaziz@user/jaziz)
[03:35:09] *** Joins: mickey82 (~user@user/mickey)
[03:36:12] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: Goodbye.)
[03:36:18] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:943b:a228:7c24:6437) (Ping timeout: 250 seconds)
[03:36:36] *** Quits: mickey8 (~user@user/mickey) (Ping timeout: 276 seconds)
[03:36:36] *** mickey82 is now known as mickey8
[03:36:51] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[03:37:10] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 250 seconds)
[03:38:13] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[03:38:29] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[03:38:40] *** Quits: tomg (~tomg@user/tomg) (Remote host closed the connection)
[03:38:49] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[03:40:09] *** Joins: tomg (~tomg@user/tomg)
[03:41:15] *** Parts: k0fein (~esmeralda@user/k0fein) ()
[03:41:30] *** Quits: tomg (~tomg@user/tomg) (Remote host closed the connection)
[03:41:55] *** Quits: LimeOn (~user@user/limeon) (Quit: .)
[03:42:33] <foo> Not sure where to ask this question. I'm still doing a bit of searching. Anyone know of an open source system I can selef-host to share photos/videos between a group of people? Ideally web-based for Mac / Windows? Use case: A group of friends who go on trips and want to share photos afterwards with each other. (Open to channels suggestions or where to ask this, hmm)
[03:42:51] *** Joins: Celeo (~Celeo@user/celeo)
[03:43:43] *** Quits: kilitary (~kilitary@188.242.105.134) (Read error: Connection reset by peer)
[03:44:00] *** Joins: tomg (~tomg@user/tomg)
[03:44:03] *** Quits: savolla (~quassel@88.227.92.215) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:44:15] <phy1729> Maybe nextcloud? I haven't used it.
[03:44:30] *** Joins: savolla (~quassel@88.227.92.215)
[03:44:48] *** Joins: kilitary (~kilitary@188.242.105.134)
[03:44:51] *** Quits: savolla (~quassel@88.227.92.215) (Client Quit)
[03:45:02] <foo> phy1729: that's interesting, I am loosely familiar with that, didn't consider it for media. Thanks for the thip.
[03:45:05] <foo> the tip*
[03:46:49] *** Joins: Ratticus (~RatticusZ@cpe-66-67-92-65.twcny.res.rr.com)
[03:47:33] *** Quits: Dotz0cat (~Dotz0cat@h55.84.187.173.dynamic.ip.windstream.net) (Ping timeout: 256 seconds)
[03:50:16] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[03:51:05] *** Joins: Dotz0cat (~Dotz0cat@h124.175.40.162.dynamic.ip.windstream.net)
[03:52:11] *** Quits: Fairy (~Fairy@ti0004a400-5385.bb.online.no) (Ping timeout: 256 seconds)
[03:52:51] *** Quits: promey (~Promeys@gateway/tor-sasl/promey) (Ping timeout: 276 seconds)
[03:53:45] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[03:54:44] *** Joins: savolla (~quassel@88.227.92.215)
[03:55:59] *** Quits: savolla (~quassel@88.227.92.215) (Client Quit)
[03:56:20] *** Joins: savolla (~quassel@88.227.92.215)
[03:56:20] *** Quits: savolla (~quassel@88.227.92.215) (Client Quit)
[03:57:15] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[03:57:20] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.4)
[03:58:23] *** Quits: Grizzly (~grizzly@lfbn-idf1-1-2268-165.w92-151.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[04:01:49] *** Joins: j0ma (~jonne@146.115.163.209)
[04:02:18] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 250 seconds)
[04:02:34] *** Quits: j0ma (~jonne@146.115.163.209) (Client Quit)
[04:02:37] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[04:02:53] *** Joins: j0ma (~jonne@146.115.163.209)
[04:03:25] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[04:05:13] *** Joins: Wulf (~Wulf@user/wulf)
[04:10:11] *** Joins: Grizzly (~grizzly@lfbn-idf1-1-2268-165.w92-151.abo.wanadoo.fr)
[04:10:20] *** Joins: unyu (~pyon@user/pyon)
[04:11:07] *** Quits: j0ma (~jonne@146.115.163.209) (Ping timeout: 256 seconds)
[04:11:31] *** Joins: j0ma (~jonne@146.115.163.209)
[04:12:02] *** Quits: Kruppt (~Kruppt@50-111-49-4.drhm.nc.frontiernet.net) (Quit: Leaving)
[04:12:38] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[04:14:45] *** Quits: nomic (~nomic@185.217.117.244) (Quit: Leaving)
[04:15:57] *** Joins: HaMsTeRs (~Thunderbi@210.3.213.4)
[04:16:14] *** Joins: em (~em@user/emnode)
[04:16:26] *** Joins: c4017w__ (~c4017@209.52.68.8)
[04:19:20] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[04:19:57] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[04:20:56] *** Quits: Celeo (~Celeo@user/celeo) (Ping timeout: 250 seconds)
[04:21:05] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 256 seconds)
[04:21:15] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: Goodbye.)
[04:21:27] *** Quits: Ratticus (~RatticusZ@cpe-66-67-92-65.twcny.res.rr.com) (Quit: Leaving)
[04:21:53] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[04:23:16] *** Joins: mattfoxxx (~mattfoxxx@200116b822ba5e00f9783ff2bfc0cc37.dip.versatel-1u1.de)
[04:24:29] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 256 seconds)
[04:27:51] *** Quits: mattfoxxx (~mattfoxxx@200116b822ba5e00f9783ff2bfc0cc37.dip.versatel-1u1.de) (Ping timeout: 250 seconds)
[04:27:54] *** Quits: kilitary (~kilitary@188.242.105.134) (Read error: Connection reset by peer)
[04:30:28] *** Quits: rajkosto (~rajkosto@93-86-127-103.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[04:31:34] *** Quits: fannagoganna (uid110488@id-110488.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[04:32:05] *** Quits: Trigraph (~Trigraph@user/trigraph) (Ping timeout: 256 seconds)
[04:33:08] *** Joins: Viewday112 (~Viewday@user/viewday)
[04:34:29] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[04:34:40] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[04:34:40] *** Viewday112 is now known as Viewday11
[04:34:52] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[04:35:31] *** Quits: impermanence (~impermane@c-75-73-193-204.hsd1.mn.comcast.net) (Quit: Connection closed)
[04:36:09] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:38:18] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[04:38:19] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 256 seconds)
[04:38:19] *** Quits: potatosal (~salad@user/potatosal) (Quit: leaving)
[04:38:57] *** Quits: Guest7003 (~vit@chello085216193138.chello.sk) (Ping timeout: 240 seconds)
[04:39:07] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[04:40:34] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[04:41:03] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Client Quit)
[04:41:39] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[04:43:38] *** Joins: gonzo[m] (~gonzotchn@2001:470:69fc:105::1:9920)
[04:45:41] *** Quits: auk (auk@gateway/vpn/protonvpn/auk) (Quit: Leaving)
[04:46:51] *** Quits: elias117 (~elias117@user/elias117) (Read error: Connection reset by peer)
[04:47:37] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[04:50:09] *** Joins: savolla (~quassel@88.227.92.215)
[04:50:25] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca)
[04:50:49] *** Quits: savolla (~quassel@88.227.92.215) (Remote host closed the connection)
[04:51:12] *** Joins: savolla (~quassel@88.227.92.215)
[04:51:59] *** Quits: savolla (~quassel@88.227.92.215) (Remote host closed the connection)
[04:54:03] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[04:54:21] <cloudcell> hello everyone! i am using pycharm and cannot upgrade pip in such a way so that i wouldn't have to upgrade pip every time i create a new project. how do i upgrade pip "globally"?
[04:54:22] *** Joins: Viewday11 (~Viewday@user/viewday)
[04:55:38] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[04:56:31] <BtbN> Update your systems pip package.
[04:56:55] <BtbN> Typically distros don't do major non-critical updates of software, so the answers probably is "you don't"
[04:57:32] <cloudcell> when i type 'pip --version' in my system terminal, the version i see is 22.0.3
[04:57:42] <cloudcell> so i was able to upgrade that
[04:57:51] <cloudcell> however pycharm picks up an older version
[04:57:53] <cloudcell> for some reason
[04:59:03] <grym>  cloudcell: you'll just usually update per venv
[04:59:20] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[04:59:27] <cloudcell> grym, yes, that's what i usually do
[04:59:37] <cloudcell> but i got really tired of that
[05:00:07] <grym> cloudcell: there isn't a better solution
[05:00:16] <cloudcell> i see
[05:00:18] <cloudcell> thanks
[05:00:53] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[05:00:55] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[05:03:12] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[05:03:53] *** Quits: akk (~akk@75-161-95-245.albq.qwest.net) (Quit: +++)
[05:04:18] <cloudcell> oh, i just realized, my pycharm probably cannot see the global environment because it was installed via a 'snap' package
[05:04:57] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 240 seconds)
[05:05:56] <grym> i'm not sure about that
[05:06:22] <cloudcell> at the same time, what you just said is supported by this: https://intellij-support.jetbrains.com/hc/en-us/community/posts/360000530279-unable-to-upgrade-the-pip-version-
[05:06:50] <cloudcell> jetbrains 'promised' to fix this a year a go (at some point in the future)
[05:07:59] <grym> what pip your system interpeter uses should be irrelevant to you and it's not a jetbrains thing
[05:08:54] <grym> maybe in that case the snap is bundling something even older somehow but that doesn't make terribly much sense to me
[05:09:52] <BtbN> Putting an IDE into an isolated container, what could possibly go wrong.
[05:10:10] <cloudcell> ;)
[05:12:40] <foo> This is interesting: info: SkillData = skill_data.get(context, skill=SKILL_LABEL, id=id) -> I didn't know you can type an object to match a database object. The only issue with this is now that model is imported everywhere our module is used that uses that database model... is this generally a good practice? It seems like it creates more "dependencies", as opposed to keeping everything self-contained in the
[05:12:46] <foo> module
[05:13:58] *** Joins: Celeo (~Celeo@user/celeo)
[05:15:06] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Remote host closed the connection)
[05:15:10] *** Joins: portalrat (~portalrat@user/portalrat)
[05:15:32] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:16:55] *** Joins: c4017w_ (~c4017@209.52.68.8)
[05:16:57] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 240 seconds)
[05:17:16] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[05:17:22] *** Quits: oriba (~oriba@dynamic-077-191-250-060.77.191.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[05:18:03] *** Joins: vlm (~vlm@user/vlm)
[05:20:49] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[05:21:09] *** Quits: kts (~kts@103.73.237.119) (Ping timeout: 256 seconds)
[05:21:37] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 240 seconds)
[05:22:00] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[05:23:19] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[05:23:46] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[05:26:01] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:26:18] *** Quits: knstn (~knstn@ppp-94-66-57-191.home.otenet.gr) (Quit: leaving)
[05:26:58] *** Joins: revolve_ (~u0_a227@82-132-239-63.dab.02.net)
[05:27:21] *** Joins: Barones (~Barones@user/Barones)
[05:27:51] *** Quits: KombuchaKip (~kip@192.252.230.5) (Ping timeout: 256 seconds)
[05:27:53] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: No route to host)
[05:28:24] *** Joins: vlm (~vlm@user/vlm)
[05:28:43] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8)
[05:30:27] <kenwoodfox> I did some research online and i know this is a tricky question but, i want to hookup multiple cameras to a system and use them in opencv, my biggest problem is that it is very likely that some cameras could become disconnected, destroyed, or the system they're connected to could power cycle/brownout. (This is going onto a robot), so id like to reference each camera by something that never changes since /dev/video0 and /dev/video1 etc are addressed in
[05:30:27] <kenwoodfox>  order,
[05:30:40] *** Quits: vancz (~vancz@user/vancz) (Quit: vancz)
[05:30:42] <kenwoodfox> poking around, this is clearly not so simple to solve, especially if your cameras dont have serial numbers witch, mine do not
[05:30:50] *** Quits: revolve_ (~u0_a227@82-132-239-63.dab.02.net) (Read error: Connection reset by peer)
[05:30:52] <kenwoodfox> can i use python to tell what camera is on what usb port? and then reference it?
[05:31:33] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 250 seconds)
[05:31:48] *** Quits: SorinK (~SK@79.117.214.92) (Remote host closed the connection)
[05:32:03] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[05:34:20] *** Joins: vancz (~vancz@user/vancz)
[05:34:25] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[05:34:37] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[05:35:09] *** Joins: Celeo (~Celeo@user/celeo)
[05:35:12] *** Quits: junebug (~junebug@2600:1700:3db0:2540:f4ec:8761:4b5a:58b8) (Quit: Leaving)
[05:36:36] *** Joins: idiocrash (~textual@216.73.163.28)
[05:37:01] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[05:37:25] *** Joins: cdown (~cdown@188.214.11.14)
[05:38:20] *** Joins: kilitary (~kilitary@188.68.215.221)
[05:39:17] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 256 seconds)
[05:39:46] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[05:40:14] *** Quits: Grizzly (~grizzly@lfbn-idf1-1-2268-165.w92-151.abo.wanadoo.fr) (Remote host closed the connection)
[05:43:49] *** Quits: therufuser (~therufuse@p5b0003d1.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[05:45:24] *** Joins: therufuser (~therufuse@p5b00084c.dip0.t-ipconnect.de)
[05:46:57] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[05:47:35] *** Joins: califax- (~califax@user/califx)
[05:49:04] *** Joins: Fairy (~Fairy@ti0004a400-5385.bb.online.no)
[05:50:24] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:51:09] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[05:51:09] *** califax- is now known as califax
[05:51:11] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 256 seconds)
[05:51:18] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[05:51:25] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 256 seconds)
[05:51:25] *** brabrax_ is now known as brabrax
[05:53:09] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:53:19] *** Joins: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net)
[05:54:59] *** Joins: dtg01100 (~dtg01100@199.21.141.37)
[05:55:09] *** Quits: Z-cat (~Z-cat@user/z-cat) (Ping timeout: 250 seconds)
[05:55:18] *** Quits: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net) (Remote host closed the connection)
[05:55:19] *** Quits: onur (~onur@user/onur) (Quit: ZNC 1.8.2 - https://znc.in)
[05:55:34] *** Joins: onur (~onur@static.88.107.46.78.clients.your-server.de)
[05:55:53] *** Joins: mat001 (~mat001@72.28.108.216)
[05:57:15] *** Joins: hams (~hams@73.232.205.0)
[05:57:15] *** Quits: hams (~hams@73.232.205.0) (Changing host)
[05:57:15] *** Joins: hams (~hams@user/hams)
[05:58:29] *** Joins: mat001_ (~mat001@72.28.108.216)
[05:58:33] *** Quits: mat001 (~mat001@72.28.108.216) (Read error: Connection reset by peer)
[05:59:23] *** Quits: mat001_ (~mat001@72.28.108.216) (Remote host closed the connection)
[05:59:46] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:59:50] *** Joins: mat001 (~mat001@72.28.108.216)
[06:00:17] <SnoopJ> kenwoodfox, this is on Linux? My first thought is that a tool like pyudev might help you distinguish them
[06:00:35] <aphysically> SnoopJ: I'm naughty I removed like 8 cpython testcases
[06:00:45] *** Quits: onur (~onur@static.88.107.46.78.clients.your-server.de) (Quit: ZNC 1.8.2 - https://znc.in)
[06:00:49] <kenwoodfox> SnoopJ: Ill give that some research, thanks!
[06:01:11] <aphysically> https://github.com/python/cpython/pull/31151/files
[06:01:21] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[06:01:40] *** Quits: newpy (~newpy@Lsvl-382-HQ-OPN.massivenetworks.net) (Quit: Going offline, see ya! (www.adiirc.com))
[06:02:10] *** Joins: vlm (~vlm@user/vlm)
[06:02:37] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[06:02:59] *** Joins: onur (~onur@static.88.107.46.78.clients.your-server.de)
[06:03:21] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[06:03:22] *** Joins: mat001_ (~mat001@c-69-181-155-247.hsd1.ca.comcast.net)
[06:03:24] *** Quits: mat001_ (~mat001@c-69-181-155-247.hsd1.ca.comcast.net) (Remote host closed the connection)
[06:03:49] *** Joins: Guest7 (~Guest7@2607:fb90:b2d6:e6e9:f94f:26c3:1cb5:fc21)
[06:04:47] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[06:05:37] *** Quits: eXtr3m0 (~eXtr3m0@user/eXtr3m0) (Ping timeout: 240 seconds)
[06:05:58] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[06:06:39] *** Joins: djhankb (~djhankb@208.113.164.68)
[06:07:01] <Guest7> Hi. . I'm trying to get better at python and advance from basics by reading some source code. I had a tab opened on stream-framework/base.py and I don't really understand how this function works. if anyone can enlighten me that would be great
[06:07:01] <Guest7> https://bpa.st/AI4Q
[06:07:06] *** Quits: mat001 (~mat001@72.28.108.216) (Ping timeout: 250 seconds)
[06:07:11] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[06:07:28] <kenwoodfox> SnoopJ: Oh boy, this sure is a big libary, might really need to understand it to even get an idea of how to implement it
[06:07:57] <kenwoodfox> if i get a context of everything i do see a lot of 'devices' but im not exactly yet sure how this helps, i think i see the cameras under /sys/devices but they still dont have identifying marks
[06:08:03] *** Joins: bluedust (~bluedust@117.217.146.23)
[06:08:04] <phy1729> Guest7: it expects to be overridden by a child class
[06:08:12] <SnoopJ> kenwoodfox, there might be something with less feature surface that provides USB information that will suffice
[06:08:25] <phy1729> ValueError isn't really proper to use there. Should be NotImplementedError iirc
[06:08:34] <SnoopJ> I mean, if the only thing that distinguishes these cameras is that they are plugged into different ports, then...
[06:08:42] <kenwoodfox> SnoopJ: Thats sorta what im looking for and have not found anything so far, but i could possibly learn how to use the libudev calls with pyudev,
[06:08:48] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[06:09:06] <SnoopJ> Right, you might be able to find some information that varies between these devices other than their point of connectivity.
[06:09:15] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[06:09:41] <SnoopJ> Or perhaps it will just be useful to sort out which port goes to which device? I don't know, it's a bit beyond me too.
[06:09:52] <kenwoodfox> SnoopJ: Serial number is normally the way to go but very few cameras actually do that, and these ones do not, matching serial numbers, i was hoping id be able to distinguish them by physical usb port somehow
[06:10:07] <kenwoodfox> SnoopJ: Yeah thats what im shooting for, they dont have identifying names or numbers
[06:10:39] *** Quits: onur (~onur@static.88.107.46.78.clients.your-server.de) (Changing host)
[06:10:39] *** Joins: onur (~onur@user/onur)
[06:11:11] <Guest7> phy1729 how does it work? how would a empty function do that?
[06:12:51] <Guest7> phy1729 i see. is the misuse of error just a trivial one? since author just wants to get the point across
[06:12:57] *** Quits: bluedust (~bluedust@117.217.146.23) (Ping timeout: 256 seconds)
[06:13:51] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 256 seconds)
[06:14:12] *** Quits: x_kuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[06:14:16] <phy1729> You're looking at  https://github.com/tschellenbach/Stream-Framework/blob/master/stream_framework/aggregators/base.py#L115  right? So see how RecentVerbAggregator on L142 overrides get_group on L148 ?
[06:14:35] <phy1729> As does NotificationAggregator on L164
[06:15:17] *** Joins: vlm (~vlm@user/vlm)
[06:16:58] <Guest7> phy1729 ah ok.. so it is an abstract class?? I googled the error and it seemed like a common error to use for formatting abstract classes
[06:17:26] *** Joins: c4017w__ (~c4017@209.52.68.8)
[06:17:36] <SnoopJ> kenwoodfox, yea, we get away with "the user handles it" in $employer_product
[06:18:02] <SnoopJ> but if there's identifying info available, I'd expect libudev to be capable of finding it
[06:18:08] <kenwoodfox> SnoopJ: :P
[06:18:31] <kenwoodfox> SnoopJ: thanks for the advice ill let you know how it goes~
[06:19:38] <phy1729> Guest7: yes, you would not instanciate the BaseAggregator class
[06:20:38] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[06:20:53] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[06:21:25] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[06:21:41] *** Joins: CombatVet (~c4@user/combatvet)
[06:23:35] *** Joins: Fohsap (~Muimi@2001:19f0:6001:e4d:5400:3ff:fe41:8d5b)
[06:24:03] <Fohsap> so i found out that python is installing local pacakages on windows to this folder: C:\Users\%username%\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\Scripts
[06:24:52] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 250 seconds)
[06:25:02] <Fohsap> Is it possible to force a more reasonable default directory?  I'm installing using pip
[06:25:21] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[06:25:37] *** Quits: j0ma (~jonne@146.115.163.209) (Ping timeout: 240 seconds)
[06:26:24] *** Quits: HaMsTeRs (~Thunderbi@210.3.213.4) (Quit: HaMsTeRs)
[06:26:31] <Repiphany> Use virtual environments
[06:26:47] <mattf> does anyone have something or know of, for replacing terminal encoded colored text into irc color codes or at least strip the weirdness out
[06:26:58] <mattf> it is for a irc bot that is taking output from a shell command
[06:27:17] <mattf> It is outputing things like: [38;5;246;03m [39;00m[38;5;246;03m*/[39;00m
[06:27:32] <mattf> would be nice to have the colors but if it is not easy im happy with just whipping that out
[06:27:50] <nedbat> Fohsap: you can change where things go, but why is it bad to use the folder you showed?
[06:28:02] *** Joins: j0ma (~jonne@37.120.205.200)
[06:29:06] *** Quits: ouestbillie (~ced@192-222-138-215.qc.cable.ebox.net) (Quit: WeeChat 3.4)
[06:29:20] <Guest7> phy1729 cool nice, thanks. really helps and is really cool to read code and have some clarification on some concept I rarely see or use. thou i'm not sure if i'm that advanced or if that library is applicable to my projects
[06:29:44] *** Joins: pingpongball (~pingpongb@43.228.192.107)
[06:30:38] <pingpongball> https://bpa.st/CCGQ where is error coming from
[06:31:18] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[06:32:11] <ssbr> pingpongball: wrong channel? that looks like elisp
[06:32:20] <pingpongball> :)
[06:32:30] *** Parts: pingpongball (~pingpongb@43.228.192.107) ()
[06:32:41] <ssbr> welp
[06:33:00] *** Joins: Viewday113 (~Viewday@user/viewday)
[06:33:59] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[06:34:06] <Guest7> phy1729 but would you mind giving me some knowledge on ABCs? perhaps you have some webpage saying what the child class can or cannot do when inheriting abstract classes?
[06:34:07] <Guest7> Does it conform to the normal inheritance of a normal class of its properties and methods, except it HAS TO implement the abstract method?
[06:34:07] <Guest7> I read some tutorial just now, and the idea of using ABCs is coming back to me
[06:34:08] *** Joins: kilitary_ (~kilitary@188.242.105.134)
[06:34:43] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[06:34:43] *** Viewday113 is now known as Viewday11
[06:35:33] *** Joins: elezium (~elezium@modemcable039.188-176-173.mc.videotron.ca)
[06:35:37] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 256 seconds)
[06:36:59] *** Quits: cuz` (~user@50.226.229.246) (Ping timeout: 256 seconds)
[06:37:19] *** Quits: kilitary (~kilitary@188.68.215.221) (Ping timeout: 256 seconds)
[06:37:33] *** Quits: Syroth (~Syroth@pool-96-244-212-50.bltmmd.fios.verizon.net) (Quit: Leaving)
[06:38:44] *** Quits: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net) (Quit: dtux)
[06:39:31] *** Joins: LiftLeft (~LiftLeft@187.170.244.154)
[06:39:34] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[06:42:07] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Quit: leaving)
[06:43:41] *** Quits: nicode (~nic@2607:f2c0:9545:fa00:dee7:6718:e07b:924c) (Ping timeout: 245 seconds)
[06:45:42] <Guest7> phy1729 thanks for your help! it's exciting to understand more of the code and I have a better idea of the file now,looking at everything in context.
[06:48:36] <ssbr> Guest7: wrt your question: you must override the abstract methods in order for instantiation to work. (You can avoid overriding the abstract methods, but it means that you, too, are abstract.)
[06:48:39] *** Quits: elezium (~elezium@modemcable039.188-176-173.mc.videotron.ca) (Ping timeout: 256 seconds)
[06:49:29] <Guest7> ssbr but u have to implement if you raise error for that abstract method right
[06:49:34] *** Quits: gossie (~gossie@2001:1c02:11e:c700:4a28:456f:cfe0:5c8e) (Ping timeout: 250 seconds)
[06:49:47] <ssbr> Guest7: I don't know what you mean by that.
[06:50:03] <Guest7> ssbr https://bpa.st/AI4Q
[06:50:11] <ssbr> the only thing ABCs do is force you to implement in order to make the class instantiable -- there's no need to manually raise errors
[06:50:25] *** Joins: gossie (~gossie@2001:1c02:11e:c700:c824:f8ed:a210:e662)
[06:50:41] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[06:50:47] <ssbr> Guest7: What about that function?
[06:51:22] *** Joins: cdown_ (~cdown@163.114.131.1)
[06:51:46] <Guest7> @ssbr ok. by override you mean implementing that abstract method yea? it's interesting how an abstract method provides the framework but what it does still depends on the author
[06:52:09] <ssbr> Guest7: override means implement a method with the same name in the subclass, yeah
[06:52:31] *** Joins: ouestbillie (~ced@192-222-138-215.qc.cable.ebox.net)
[06:52:32] <ssbr> abstractmethods do the same thing no matter what: they cause errors at class instance creation time if there are any un-overridden abstract methods (properties, etc.)
[06:52:44] *** Quits: ouestbillie (~ced@192-222-138-215.qc.cable.ebox.net) (Quit: WeeChat 3.4)
[06:52:47] <ssbr> everything past that is up to you
[06:54:05] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 256 seconds)
[06:54:06] *** cdown_ is now known as cdown
[06:55:16] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[06:56:35] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 256 seconds)
[06:56:38] *** Quits: beco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73) (Read error: Connection reset by peer)
[06:57:13] *** Joins: Vonter (~Vonter@user/vonter)
[06:57:46] <Guest7> ssbr ah ok cool. I guess I oughta review the topic again.  I searched and found this repo which was recommended to read. Probably oughta find a more relatable repo but stil cool
[06:58:02] *** Joins: adeliktas2 (~adeliktas@i59F52850.versanet.de)
[06:59:17] *** Quits: adeliktas (~adeliktas@i59F5FC83.versanet.de) (Ping timeout: 240 seconds)
[06:59:17] *** adeliktas2 is now known as adeliktas
[06:59:45] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 256 seconds)
[06:59:49] <Lvl4Sword> Is there a good password hashing package that isn't passlib?
[07:01:20] *** Quits: Guest7 (~Guest7@2607:fb90:b2d6:e6e9:f94f:26c3:1cb5:fc21) (Quit: Client closed)
[07:01:43] *** Joins: Guest7 (~Guest7@2607:fb90:b2d6:e6e9:f94f:26c3:1cb5:fc21)
[07:02:20] *** Quits: Guest7 (~Guest7@2607:fb90:b2d6:e6e9:f94f:26c3:1cb5:fc21) (Client Quit)
[07:06:57] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 240 seconds)
[07:07:00] *** Joins: Emet-Selch (~haise01@user/haise01)
[07:07:01] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[07:07:24] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[07:07:52] *** Quits: vancz (~vancz@user/vancz) (Quit: vancz)
[07:07:52] *** Quits: pie_ (~pie_bnc@user/pie/x-2818909) (Quit: pie_)
[07:09:56] *** Quits: Azem (~haise01@user/haise01) (Ping timeout: 250 seconds)
[07:11:28] *** Joins: pie_ (~pie_bnc@user/pie/x-2818909)
[07:14:05] *** Quits: DaNeenjah (~jake@adsl-74-230-9-40.hsv.bellsouth.net) (Quit: WeeChat 3.4)
[07:14:38] *** Joins: cuz` (~user@50.226.229.246)
[07:16:17] *** Quits: j0ma (~jonne@37.120.205.200) (Ping timeout: 240 seconds)
[07:17:40] *** Joins: beco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73)
[07:17:55] *** Joins: c4017w_ (~c4017@209.52.68.8)
[07:18:24] *** Joins: j0ma (~jonne@146.115.163.209)
[07:18:38] *** Quits: duuude (~user@user/duuude) (Ping timeout: 252 seconds)
[07:19:15] *** Quits: cuz` (~user@50.226.229.246) (Ping timeout: 256 seconds)
[07:19:27] *** Quits: Strom (strom@fedora/strom) ()
[07:19:35] *** Quits: emerent (~quassel@p200300cd570443b6ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[07:19:39] *** Joins: omegatron (~some@p5b056cb8.dip0.t-ipconnect.de)
[07:19:52] *** Joins: emerent (~quassel@p200300cd57044377ba27ebfffed28a59.dip0.t-ipconnect.de)
[07:21:45] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[07:22:01] *** Joins: Strom (strom@fedora/strom)
[07:24:41] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[07:26:50] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[07:29:20] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[07:30:08] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:30:09] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[07:32:13] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8) (Ping timeout: 250 seconds)
[07:32:16] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[07:33:55] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[07:34:17] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 240 seconds)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:15] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca) (Ping timeout: 256 seconds)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:33] *** Quits: imp (~imp@138-59-122-25.static.sumicity.net.br) (Quit: imp)
[07:38:59] *** Quits: Fl0pFl1p (~FlipFlop@user/fl1pfl0p) (Quit: Leaving)
[07:39:03] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[07:41:08] *** Joins: seekerm (uid209543@user/seekerm)
[07:42:03] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[07:43:43] *** Joins: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net)
[07:44:22] *** Joins: pycurious (~Adium@user/pycurious)
[07:44:47] *** Quits: EGH (~EGH@185.25.195.104) (Ping timeout: 250 seconds)
[07:45:06] *** Quits: alaudet (~al@129.222.177.229) (Quit: Leaving)
[07:48:57] *** Quits: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[07:49:50] *** Joins: SallyAhaj_ (~SallyAhaj@user/sallyahaj)
[07:49:52] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: Goodbye.)
[07:50:21] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Ping timeout: 245 seconds)
[07:50:23] *** Joins: bindu (~bindu@user/bindu)
[07:51:52] *** Quits: kilitary_ (~kilitary@188.242.105.134) (Remote host closed the connection)
[07:52:07] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Ping timeout: 256 seconds)
[07:52:57] *** Quits: Fairy (~Fairy@ti0004a400-5385.bb.online.no) (Ping timeout: 240 seconds)
[07:53:57] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[07:54:51] *** Joins: Trigraph (~Trigraph@user/trigraph)
[07:56:10] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[07:57:11] *** Joins: fef (~thedawn@user/thedawn)
[07:58:53] *** Quits: sreve (~quassel@p4ff44d88.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[07:58:53] *** Joins: vancz (~vancz@user/vancz)
[07:59:17] *** Joins: vire (~vire@106.212.254.159)
[07:59:25] *** Joins: sreve (~quassel@p549d7279.dip0.t-ipconnect.de)
[07:59:51] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[08:00:08] *** Quits: beco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73) (Quit: Leaving)
[08:00:37] *** Quits: chemsmith (~chemsmith@user/chemsmith) (Ping timeout: 240 seconds)
[08:00:45] *** Joins: Guest19 (~Guest19@2601:647:5280:2a50:9511:1adf:ad63:3d17)
[08:03:33] *** SallyAhaj_ is now known as SallyAhaj
[08:04:01] *** Quits: vire (~vire@106.212.254.159) (Ping timeout: 256 seconds)
[08:04:03] *** Joins: imp (~imp@138-59-122-25.static.sumicity.net.br)
[08:04:13] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[08:05:39] *** Joins: pycurious1 (~Adium@c-69-254-208-5.hsd1.fl.comcast.net)
[08:07:10] *** Quits: thurs80601421053 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[08:07:20] <Soni> uh pip install git-repo@commit doesn't work?
[08:07:40] <Soni> well, pip install package @ git-repo@commit
[08:07:56] <Soni> it doesn't work if the package is already installed
[08:07:59] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[08:08:11] <Soni> or at least it doesn't seem to
[08:08:26] <Soni> altho tbh both commits are version 0.0.0 but like
[08:08:31] <Soni> hmm...
[08:08:42] <Soni> ugh
[08:08:58] <Soni> how do you make this work
[08:09:07] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[08:10:07] *** Joins: thurs80601421053 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[08:11:15] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[08:11:53] *** Joins: bytehackr (~Sandipan@45.249.73.155)
[08:13:09] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[08:14:14] *** Quits: xizhendu_ (~xizhendu@240e:305:7380:8900:395b:be7:2347:dfa7) (Remote host closed the connection)
[08:14:35] *** Joins: xizhendu_ (~xizhendu@240e:305:7380:8900:395b:be7:2347:dfa7)
[08:15:17] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 240 seconds)
[08:18:26] *** Joins: c4017w__ (~c4017@209.52.68.8)
[08:18:39] *** Quits: onichomp (~onichomp@2806:264:4408:5d:a80d:ebda:c447:6602) (Read error: Connection reset by peer)
[08:19:16] *** Joins: onichomp (~onichomp@2806:264:4408:5d:a80d:ebda:c447:6602)
[08:19:17] *** Joins: LiaoTao_ (~LiaoTao@gateway/tor-sasl/liaotao)
[08:19:21] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Ping timeout: 276 seconds)
[08:19:45] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[08:21:49] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[08:22:06] *** Quits: onichomp (~onichomp@2806:264:4408:5d:a80d:ebda:c447:6602) (Read error: Connection reset by peer)
[08:22:32] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[08:22:44] *** Joins: onichomp (~onichomp@2806:264:4408:5d:a80d:ebda:c447:6602)
[08:22:57] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[08:23:08] *** Joins: vire (~vire@106.212.254.159)
[08:24:58] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[08:25:00] *** Joins: mattfoxxx (~mattfoxxx@200116b822f64600313c690792be07b4.dip.versatel-1u1.de)
[08:25:06] *** Quits: onichomp (~onichomp@2806:264:4408:5d:a80d:ebda:c447:6602) (Read error: Connection reset by peer)
[08:25:44] *** Joins: onichomp (~onichomp@2806:264:4408:5d:a80d:ebda:c447:6602)
[08:25:57] *** Quits: emf (~emf@2620:10d:c090:400::5:ab3f) (Ping timeout: 240 seconds)
[08:27:56] *** Joins: emf (~emf@2620:10d:c090:400::5:ab3f)
[08:28:49] *** Quits: onichomp (~onichomp@2806:264:4408:5d:a80d:ebda:c447:6602) (Client Quit)
[08:29:39] *** Quits: mattfoxxx (~mattfoxxx@200116b822f64600313c690792be07b4.dip.versatel-1u1.de) (Ping timeout: 250 seconds)
[08:30:05] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 256 seconds)
[08:30:05] *** Joins: nomic (~nomic@185.217.117.244)
[08:30:38] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[08:30:42] *** Joins: msek_ (~Username@pd9fb27bb.dip0.t-ipconnect.de)
[08:31:08] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[08:31:14] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[08:31:54] *** Joins: djhankb (~djhankb@208.113.164.68)
[08:33:00] *** Joins: Viewday112 (~Viewday@user/viewday)
[08:34:01] *** Quits: berong91 (~noob4ever@75.154.235.153) (Remote host closed the connection)
[08:34:33] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[08:34:34] *** Viewday112 is now known as Viewday11
[08:34:57] *** Quits: msek_ (~Username@pd9fb27bb.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[08:36:13] *** Joins: berong91 (~noob4ever@75.154.235.153)
[08:36:50] *** Quits: berong91 (~noob4ever@75.154.235.153) (Remote host closed the connection)
[08:37:14] <jinsun>   --force-reinstall maybe?
[08:38:15] *** Quits: callq (~callq@92.119.19.230) (Ping timeout: 256 seconds)
[08:38:17] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 240 seconds)
[08:39:48] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[08:41:25] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 256 seconds)
[08:43:10] *** Joins: analoq (~yashi@user/dies)
[08:48:42] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[08:48:48] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[08:51:57] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[08:52:17] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 240 seconds)
[08:53:11] *** Joins: kilitary (~kilitary@188.242.105.134)
[08:53:12] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[08:55:35] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[08:55:45] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[08:56:34] *** Joins: masoudd (~masoudd@user/masoudd)
[08:57:17] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 240 seconds)
[09:01:02] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[09:03:02] *** Quits: kenwoodfox (~quassel@user/kenwoodfox) (Quit: Peace homie)
[09:03:45] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[09:05:13] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[09:05:36] *** Joins: matsaman (~matsaman@user/matsaman)
[09:06:41] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[09:07:25] <aphysically> guess who found another bug in typing.py
[09:07:27] <aphysically> :^)
[09:08:00] <matsaman> was it you?!
[09:08:30] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[09:09:01] <TML> aphysically: NFL Hall of Fame Quarterback Kurt Warner?
[09:10:07] <jinsun> aphysically: my guess is you :D, what is this one?
[09:10:17] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[09:11:08] <jinsun> also weird that typing has really so much code to have so many bugs, I expected most of it to do nothing and type checkers to do most of the work
[09:11:19] <aphysically> I managed to make this code reachable:
[09:11:22] <aphysically> "TypeError: Plain typing.TypeAlias is not valid as type argument"
[09:11:28] <aphysically> this should definitely not be reachable :^)
[09:12:02] *** Joins: p-i- (~Ohmu@2403:6200:8978:8b4d:fc6f:d7bb:d959:a615)
[09:13:11] <TML> Darn, and I was so certain Mr. Warner had taken up finding bugs in Python code ;)
[09:13:39] *** Parts: llanhmod (~developer@user/domhnall/x-2887755) ()
[09:15:23] <p-i-> https://regexone.com/problem/matching_emails? ... how come (.+)[\+@] isn't correctly extracting tom.riddle from tom.riddle+regexone@hogwarts.com ?
[09:15:54] <p-i-> I'm matching up until the first + or @
[09:16:02] <p-i-> or at least I thought I was
[09:16:13] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[09:17:51] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:17:59] <jinsun> aphysically: okay  stuffing it in ClassVar or Final or Annotated gives that
[09:18:25] <jinsun> did you do something like that or somethinng else?
[09:18:55] *** Joins: c4017w_ (~c4017@209.52.68.8)
[09:19:09] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Ping timeout: 256 seconds)
[09:19:10] <jinsun> and I guess it is fine to error for ClassVar at least
[09:19:44] <matsaman> p-i-: 'cause it's greedy, and treating + & @ equally, so it's going to the @
[09:19:58] <matsaman> p-i-: why would you want to match 'tom.riddle' only?
[09:20:13] <TML> p-i-: ([^+@]+)
[09:20:14] <p-i-> matsaman: That's the challenge on the tut
[09:20:36] <matsaman> p-i-: I would just match till a +
[09:20:55] <matsaman> [^\+]+
[09:21:06] <p-i-> but some emails don't have the +
[09:21:14] <matsaman> oh you have to get it out of all of them, okay
[09:21:37] <matsaman> sorry just reading it
[09:22:09] <matsaman> yeah TML's got ya
[09:22:28] <TML> p-i-: ([^+@]+)
[09:22:43] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[09:22:44] <matsaman> match until a + or @
[09:22:47] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[09:22:48] <TML> capture anything from the the start of the string up to (but not including) the first + or @
[09:22:49] <p-i-> Nice one TML
[09:22:56] *** Joins: mickey8 (~user@user/mickey)
[09:23:09] <matsaman> but in reality I doubt you would ever want to do such a thing
[09:23:37] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[09:23:44] <p-i-> I was getting tired of floundering with regexp so I finally worked thru a tut.
[09:24:07] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[09:24:09] <matsaman> [^whatevs]+ is super great, more people should use it
[09:25:50] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[09:25:54] <FH_thecat> I am using socket.gethostbyaddr: https://ctxt.io/2/AABgPfaoEA
[09:25:54] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[09:26:00] <matsaman> modifying yours to (.*?)[\+@] would've done it, but [^ is better
[09:26:02] <FH_thecat> if there is a problem with DNS resolution, can I see the IP address of the DNS server that was aksed (unsuccessfully) ?
[09:26:12] <TML> One less backtrack
[09:29:13] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8)
[09:30:20] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 250 seconds)
[09:30:21] *** Quits: vire (~vire@106.212.254.159) (Quit: vire)
[09:30:51] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[09:32:52] <TML> FH_thecat: https://www.dnspython.org/examples/ maybe?
[09:34:13] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[09:34:27] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[09:35:45] *** Joins: bindu (~bindu@user/bindu)
[09:36:08] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[09:36:13] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[09:36:33] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[09:36:59] *** Joins: kenwoodfox (~quassel@user/kenwoodfox)
[09:37:18] <p-i-> I don't actually understand ([^+@]+) ... Isn't ^ asserting the start of the line?
[09:37:46] <Repiphany> ^ inside [] is `not the following characters`
[09:38:01] <p-i-> ok makes sense now
[09:39:10] <aphysically> jinsun: yes those are some ways to reach it
[09:39:15] <aphysically> want to know more?
[09:42:28] *** Quits: sgen (~sgen@2607:fea8:7ce1:c8e0:f141:ba0b:da0:3c4d) (Ping timeout: 250 seconds)
[09:43:44] <jinsun> aphysically: yeah, if it is something worse, with ClassVar or Final or Annotated it is not too bad, because I can't see anyone using TypeAlias inside them
[09:44:19] <aphysically> jinsun: https://bpa.st/SONQ
[09:44:59] <aphysically> if you're wondering how I could ever come up with this, I reverse engineered this example by discovering the bug in the code, not the other way around
[09:46:18] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-cd89-01e8-2e2b-f64f.res6.spectrum.com) (Quit: jarthur)
[09:46:21] <jinsun> okay this one is slightly better
[09:46:53] <jinsun> but does it make sense to have TypeAlias inside a class?
[09:47:20] <aphysically> I'm not particularly concerned about it, the underlying cause in typing.py is a clear bug so I'll fix it anyway
[09:47:49] *** Quits: adde9708 (uid139358@id-139358.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[09:48:12] <aphysically> jinsun: or stringified for that matter
[09:48:17] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[09:49:00] <jinsun> so how are you fixing it, special casing TypeAlias in that _type_check function?
[09:49:11] *** Parts: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[09:49:20] <aphysically> I will be changing _type_check more substantially to make sure this type of bug cannot happen in the future
[09:49:20] <jinsun> or changing the specialform check to something else
[09:49:25] *** Joins: Fairy (~Fairy@ti0004a400-5385.bb.online.no)
[09:49:49] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[09:50:05] <aphysically> I need to backport some of my other fixes to typing extensions first though
[09:50:21] *** Joins: duuude (~user@user/duuude)
[09:50:33] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[09:52:12] *** Joins: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net)
[09:52:18] <aphysically> by the way, the reason cpython tests are all failing ended up being because one of the cpython tests relies on being able to reliably send a POST to the example.com webserver, but the example.com webserver stopped being reliable for POSTing to
[09:53:18] *** Joins: Everything (~Everythin@37.115.210.35)
[09:53:21] *** Quits: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net) (Remote host closed the connection)
[09:53:56] *** Joins: mat001 (~mat001@72.28.108.216)
[09:54:48] <jinsun> :D yeah saw that linked on your PR
[09:55:09] <jinsun> so now it relies on httpbin.org
[09:56:11] *** Joins: djapo (~archangel@user/djapo)
[09:59:17] *** Quits: mat001 (~mat001@72.28.108.216) (Ping timeout: 256 seconds)
[09:59:57] *** Joins: sgen (~sgen@2607:fea8:7ce1:c8e0::7a7b)
[10:00:52] *** Joins: mat001 (~mat001@72.28.108.216)
[10:01:37] *** Quits: dtg01100 (~dtg01100@199.21.141.37) (Ping timeout: 240 seconds)
[10:01:51] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[10:03:03] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[10:04:29] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[10:04:41] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Quit: Leaving)
[10:05:52] <aphysically> no, we're bikeshedding on which URL to rely on https://github.com/python/cpython/pull/31146
[10:05:57] *** Quits: mat001 (~mat001@72.28.108.216) (Ping timeout: 240 seconds)
[10:06:00] <aphysically> tests are still broken right now
[10:06:32] *** Parts: Everything (~Everythin@37.115.210.35) ()
[10:07:03] <jinsun> oh right, it isn't merged yet
[10:07:10] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 250 seconds)
[10:08:23] *** Joins: ice9 (~ice9@user/ice9)
[10:09:20] *** Quits: jancoow (~jancoow@user/jancoow) (Ping timeout: 250 seconds)
[10:10:09] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 256 seconds)
[10:11:47] <dba> is there a file_location type in python, like I have a function and I want it to take a file location as argument
[10:12:19] <jcalla> use pathlib
[10:13:03] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[10:13:49] <dba> jcalla, I meant like str, int, list and these sort of types `def fun(filelocation: file_location_type)`
[10:15:00] <sherlock_95> https://docs.python.org/3/library/pathlib.html
[10:15:02] <jinsun> you can use pathlib.Path as annotation, but it would be too strict
[10:15:27] <jinsun> better to use os.PathLike
[10:15:48] <jinsun> that will allow anything with a __fspath__
[10:15:51] *** Joins: pepper (~pepper@user/pepper)
[10:16:32] <jinsun> then you can convert that to pathlib.Path inside your function
[10:16:58] <Tritium> os.PathLike
[10:18:08] <dba> Thanks
[10:18:10] <Tritium> ah, mentioned already
[10:18:38] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[10:19:26] *** Joins: c4017w__ (~c4017@209.52.68.8)
[10:20:02] <aphysically> os.PathLike is actually a generic
[10:20:07] <aphysically> so that's not strictly typed :)
[10:21:13] *** Joins: mtwx (~mtwx@cpc119554-heme14-2-0-cust133.9-1.cable.virginm.net)
[10:22:24] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[10:22:40] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[10:22:40] *** Quits: s1b1 (~s1b1@user/s1b1) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[10:22:51] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[10:23:05] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[10:24:53] *** Quits: mtwx (~mtwx@cpc119554-heme14-2-0-cust133.9-1.cable.virginm.net) (Client Quit)
[10:24:53] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[10:25:26] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[10:27:46] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[10:27:49] *** Joins: dtg01100 (~dtg01100@199.21.141.37)
[10:28:03] *** Joins: AlanMD_ (~AlanMD@5-12-8-203.residential.rdsnet.ro)
[10:28:51] *** Joins: zamanf (~dev@213.133.91.246)
[10:28:51] *** Quits: zamanf (~dev@213.133.91.246) (Changing host)
[10:28:51] *** Joins: zamanf (~dev@user/zamanf)
[10:29:15] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Ping timeout: 250 seconds)
[10:30:03] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[10:32:33] *** Joins: jeho2 (~jehoshaph@user/jehoshaphat)
[10:32:54] *** Joins: Viewday112 (~Viewday@user/viewday)
[10:32:59] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[10:33:25] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Killed (NickServ (GHOST command used by jeho2)))
[10:33:29] *** jeho2 is now known as jeho
[10:34:42] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[10:34:42] *** Viewday112 is now known as Viewday11
[10:35:19] <TML> aphysically: python.org should just host something inside /.well-known
[10:36:36] *** Quits: hams (~hams@user/hams) (Read error: Connection reset by peer)
[10:36:57] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 240 seconds)
[10:37:57] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[10:38:17] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[10:41:07] *** Quits: imp (~imp@138-59-122-25.static.sumicity.net.br) (Quit: imp)
[10:41:29] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[10:41:33] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Read error: Connection reset by peer)
[10:41:58] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[10:43:37] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[10:44:37] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[10:45:11] *** Joins: dme86 (~dan@user/dan86)
[10:47:33] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[10:48:59] *** Quits: nomic (~nomic@185.217.117.244) (Quit: Leaving)
[10:49:32] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[10:49:48] *** Joins: jay-m126 (~jay-m@129.0.204.209)
[10:49:55] *** Joins: mickey8 (~user@user/mickey)
[10:51:11] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[10:51:45] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[10:51:59] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[10:52:57] *** Joins: vanessa (~farawayas@103.160.128.7)
[10:53:22] *** Quits: duuude (~user@user/duuude) (Remote host closed the connection)
[10:53:38] *** Quits: kilitary (~kilitary@188.242.105.134) (Remote host closed the connection)
[10:53:51] *** Joins: duuude (~user@user/duuude)
[10:54:34] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[10:56:07] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 250 seconds)
[10:57:25] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[10:57:59] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[11:00:14] *** Joins: archie2345345234 (~archie@2a0e:1c80:1:1:45:15:16:60)
[11:01:53] <aphysically> https://bugs.python.org/issue46655 I'll make the PR later jinsun
[11:01:59] <aphysically> I'm busy with other typing.py fixes right now
[11:02:10] <aphysically> and I also need to audit typing_extensions for some bugs
[11:02:21] <aphysically> and discuss a testing strategy with some other cpython typing people
[11:02:36] <archie2345345234> I there any way to have any PyObject carry some opaque data? Sort of like GObject provides g_object_set/get_qdata
[11:02:48] <aphysically> (the reason all these bugs exists is because of lack of test coverage of a particular part of typing.py, so I would like to solve the underlying test coverage problem in additional to the concrete bugs)
[11:03:17] <aphysically> of course you add test cases for the specific bugs, but that doesn't address the underlying test coverage issue that led them to not be tested in the first place
[11:03:21] <aphysically> I'd like to fix that
[11:04:13] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[11:04:13] *** Quits: daidoji (~daidoji@104-52-250-5.lightspeed.gnvlsc.sbcglobal.net) (Ping timeout: 256 seconds)
[11:04:36] *** Joins: kts (~kts@103.73.237.48)
[11:04:52] *** Joins: hams (~hams@73.232.205.0)
[11:04:52] *** Quits: hams (~hams@73.232.205.0) (Changing host)
[11:04:52] *** Joins: hams (~hams@user/hams)
[11:05:40] *** Joins: ekathva (~ekathva@2001:999:50:cab1:b7e8:130b:c792:9fd)
[11:08:09] *** Joins: s1b1 (~s1b1@user/s1b1)
[11:08:25] *** Quits: ekathva (~ekathva@2001:999:50:cab1:b7e8:130b:c792:9fd) (Max SendQ exceeded)
[11:08:47] *** Joins: ekathva (~ekathva@2001:999:50:cab1:b7e8:130b:c792:9fd)
[11:10:36] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[11:12:29] *** Joins: edd_lc (~edd_lc@bzq-155-40.red.bezeqint.net)
[11:13:10] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[11:13:21] <p-i-> From https://docs.python.org/3/library/re.html `re.compile(r"\d+\.\d*")` is meant to match a decimal number. So 3.14 matches. But 3 won't. How to make the .14 optional?
[11:13:30] <jinsun> aphysically: 👍 doing good work with all these typing fixes
[11:13:33] *** Joins: Vonter (~Vonter@user/vonter)
[11:13:57] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[11:14:13] <aphysically> the TypeAlias fix is close to inane, though
[11:14:15] <p-i-> I can match on [0-9\.,]+ I think.
[11:14:25] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[11:14:39] *** Quits: Trigraph (~Trigraph@user/trigraph) (Ping timeout: 256 seconds)
[11:14:41] *** Joins: bindu (~bindu@user/bindu)
[11:15:01] <p-i-> But right now I'm trying to learn re, so I like to look at the different possible approaches
[11:15:44] <jinsun> you could make the part starting from the \. optional with ?, so r"\d+(\.\d*)?"
[11:16:00] <jinsun> but [0-9\.,]+ looks better
[11:16:37] <jinsun> if you care about ascii numbers only and want to allow , too
[11:17:59] <p-i-> How about '\d* | \d [.,] \d+' ? Is that also sane?
[11:18:17] *** Parts: mra90 (~Martin@134.191.221.84) (Leaving)
[11:18:17] <p-i-> Can I put spaces in my regexp to make the intent clearer?
[11:18:18] *** Quits: kts (~kts@103.73.237.48) (Quit: Konversation terminated!)
[11:18:21] <jinsun> aphysically: well the fixes might be simple, but just doing the legwork around those with the bpo and discussions with others etc is the hard part
[11:19:04] <jinsun> p-i-: you can use the VERBOSE flag, https://docs.python.org/3/library/re.html#re.VERBOSE
[11:19:16] <p-i-> Thanks, I like the 'optional' approach
[11:19:36] *** Joins: Tempesta (~Tempesta@user/tempesta)
[11:19:55] *** Joins: c4017w_ (~c4017@209.52.68.8)
[11:20:38] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[11:20:39] *** Quits: edd_lc (~edd_lc@bzq-155-40.red.bezeqint.net) (Ping timeout: 256 seconds)
[11:21:47] *** Joins: widp (~user@124.123.107.54)
[11:22:22] <widp> How do I use a temporary file in a subprocess.Popen?
[11:22:31] <widp> I get " TypeError: expected str, bytes or os.PathLike object, not _TemporaryFileWrapper "
[11:22:54] <widp> when I make this call "process = subprocess.Popen(\
[11:22:54] <widp>             [gs, '-o', outpdf, '-sDEVICE=pdfwrite', tmp, '-f', inpdf],\
[11:22:54] <widp>             stdout=subprocess.PIPE)"
[11:22:54] <widp>  
[11:22:57] <widp>  
[11:23:20] <widp> I created a name tempfile like so :     tmp = tempfile.NamedTemporaryFile(mode = 'w', delete=False)
[11:23:20] <widp>  
[11:23:29] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[11:23:43] *** Quits: jay-m126 (~jay-m@129.0.204.209) (Ping timeout: 256 seconds)
[11:24:57] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 256 seconds)
[11:25:17] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[11:25:22] <p-i-> widp: you probably need to get the filename-string out of that object
[11:25:41] *** Joins: jay-m126 (~jay-m@154.72.162.101)
[11:25:49] <p-i-> just do tmp. and scroll thru the autocompletes
[11:25:57] <widp> yup got it. tmp.name_
[11:26:02] <widp> *tmp.name
[11:26:45] <jinsun> widp: also, don't paste here use bpaste, today you are lucky litharge is sleeping and didn't +q you
[11:27:11] <widp> I thought it was ok because it was just two lines
[11:27:17] <widp> p-i-: thanks
[11:27:37] <zalt> it is 1, 2, 5 lines!
[11:27:39] *** Joins: kilitary (~kilitary@188.242.105.134)
[11:27:47] <widp> ok
[11:28:58] *** Joins: upsala (~zcb@185.213.155.252)
[11:29:05] *** Joins: bluedust (~bluedust@117.217.146.23)
[11:30:03] <zalt> https://youtu.be/xOrgLj9lOwk?t=78
[11:30:38] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[11:31:00] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:31:21] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[11:31:40] *** Joins: fbiagent_ (~fbiagent@user/fbiagent)
[11:31:57] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[11:32:24] *** Joins: manti7 (~manti7@176.10.104.94)
[11:33:10] *** Joins: duuude (~user@user/duuude)
[11:33:21] *** Quits: jay-m126 (~jay-m@154.72.162.101) (Ping timeout: 256 seconds)
[11:34:29] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Ping timeout: 256 seconds)
[11:35:00] *** Joins: jay-m126 (~jay-m@129.0.204.209)
[11:35:03] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[11:35:15] <widp> related problem, I need ghostscript on windows to use it within python as a subprocess
[11:35:45] <widp> The problem is on windows it is called gswin64.exe, on other platforms just 'gs' invokes ghostscript
[11:36:01] <p-i-> It's funny how this IRC survives. Discord is so much more convenient, especially for pasting code, but I doubt I will find a community of this calibre on Discord
[11:36:13] <widp> How should I handle the windows problem here?
[11:36:21] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: Goodbye.)
[11:36:23] <p-i-> This is actually my favourite hangout. It's 100% non-snarky.
[11:36:58] <zalt> simple is better than complex, especially when there are so much chrome CVEs floating around.
[11:37:02] *** Quits: kickingvegas (~cchoi@c-67-170-234-150.hsd1.ca.comcast.net) (Quit: leaving)
[11:37:12] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[11:37:19] <aphysically> jinsun: the typing.py code is such a hodge podge of hacks that I would say in general the fixes tend to *not* be simple, because it's not clear to very many people what the interactions are. I think this is why it's important we increase the test coverage.
[11:37:19] <p-i-> widp: surely you can query your platform and branch on that
[11:37:39] <widp> yeah true, I was looking for something simpler
[11:37:55] <widp> I tried setting an alias on powershell, but that didn't work within python
[11:38:02] *** Joins: WhiteLotus (~root@197.89.50.171)
[11:38:11] <p-i-> widp: `'gswni64.exe' if is_win() else 'gs'` .. then you just need to implement is_win()
[11:38:13] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[11:40:22] <widp> I can't find gswin64.exe in powershell, although it is in program files
[11:40:46] <jinsun> aphysically: yeah clarifying those things is part of the "hard part" too, and yeah increasing test coverage will make it clearer and make the discussions easier
[11:41:17] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 240 seconds)
[11:41:22] <deniska> widp: you can make "path to ghostscript" a config setting
[11:41:59] *** Parts: WhiteLotus (~root@197.89.50.171) ()
[11:42:17] <aphysically> jinsun: I mean, if I told you that typealias is specifically not allowed to be bare but ONLY if it's stringified, in a class, and get type hints is called on it
[11:42:22] <aphysically> (which is true)
[11:42:25] <widp> it's a single python script, I thought something like aliases should be good enough, won't it be more or less the same deniska ?
[11:42:35] <aphysically> that set of conditions should give you the idea that there's some literal insanity going on behind the scenes
[11:42:49] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[11:42:58] <jinsun> aphysically: yeah it is a mess
[11:43:53] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[11:44:02] <jinsun> widp: aliases are for your shell, python won't know about them (unless you use shell=True in your subprocess calls, which is  a bad idea)
[11:44:21] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[11:44:21] <widp> oh , makes sense
[11:44:57] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 240 seconds)
[11:45:02] <jinsun> easy way is just take the path as command line arg
[11:45:40] <jinsun> and if it is just one param, then you can get away with just reading sys.argv, without having to deal with any argument parsing library
[11:45:51] *** Joins: Adoi (~Adoi@user/adoi)
[11:46:16] <p-i-> Can I interpolate an r-string into another r-string using rf'...'? I have certain regexp patterns like [0-9\.,]+ and I'd like to do `number=r'[0-9\.,]+'` and then use that pattern within another regexp pattern, e.g. f'from: {number} to: {number}'
[11:46:31] *** Parts: matsaman (~matsaman@user/matsaman) ()
[11:46:54] <p-i-> I tried r = r'\n' ; s = rf'{r}' but that gives '\\n'
[11:47:37] <jinsun> because you are double r-ing it
[11:47:48] <p-i-> Currently I'm duplicating big clumps of dense regex code
[11:47:51] <jinsun> keep the second one f-string only and don't use any fancy character thre
[11:48:17] <jinsun> (or do the escaping yourself)
[11:48:30] <widp> jinsun: I already have four command line parameters
[11:48:49] <p-i-> right but then I get another problem. What if my final f-string has more regexp where I DO want to put \ chars thru literally?
[11:48:52] <jinsun> widp: okay then use argparse or something
[11:49:11] <widp> let me try that
[11:49:24] *** Quits: nicoz- (unixlab@ubuntu/member/nicoz) (Quit: ZNC - https://znc.in)
[11:49:34] <p-i-> I can concatenate with + ... `r'some regexp' + number + r'some more regexp'`
[11:49:40] <p-i-> but that's the best I can see
[11:50:09] <jinsun> widp: I mean you can still do it with just sys.argv but I don't recommend that for so many parameters
[11:50:24] <widp> makes sense
[11:50:34] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:50:35] <jinsun> p-i-: like I said, either avoid having \ in your final f-string, or double it manually \\
[11:52:47] <p-i-> widp, you may be able to get the executable location with shell syntax, e.g. `which python` gives me /usr/bin/python
[11:53:30] <widp> I already tried that
[11:53:32] <p-i-> In bash you can do `$(which python)`
[11:54:29] <p-i-> widp: If it's just for you, why not hardcode it? Sometimes I make a foo.sh and execute it from Python with POpen
[11:54:39] <widp> Not just for me
[11:55:00] <widp> I found a useful script online and want to make a pull request to add windows support
[11:57:23] *** Joins: savolla (~quassel@88.227.92.215)
[11:57:34] *** Quits: savolla (~quassel@88.227.92.215) (Client Quit)
[11:58:09] *** Joins: savolla (~quassel@88.227.92.215)
[11:58:12] *** Quits: savolla (~quassel@88.227.92.215) (Client Quit)
[11:58:47] *** Joins: enoch (~enochthec@115-188-140-207-vdsl.sparkbb.co.nz)
[11:58:47] *** Quits: enoch (~enochthec@115-188-140-207-vdsl.sparkbb.co.nz) (Changing host)
[11:58:47] *** Joins: enoch (~enochthec@user/enochthechronoco)
[11:58:57] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[11:59:36] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[12:00:03] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[12:01:59] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[12:04:32] *** Joins: dme86 (~dan@user/dan86)
[12:04:43] *** Joins: Tempesta (~Tempesta@user/tempesta)
[12:05:25] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:ae1e:4690:ef69:4cea)
[12:05:32] *** Joins: someuser (~user@197.54.43.98)
[12:05:46] *** Quits: enoch (~enochthec@user/enochthechronoco) (Quit: Igloo IRC: https://iglooirc.com)
[12:06:05] *** Joins: edd_lc (~edd_lc@bzq-155-40.red.bezeqint.net)
[12:09:21] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[12:10:10] *** Quits: p-i- (~Ohmu@2403:6200:8978:8b4d:fc6f:d7bb:d959:a615) (Remote host closed the connection)
[12:10:36] *** Quits: ekathva (~ekathva@2001:999:50:cab1:b7e8:130b:c792:9fd) (Quit: Leaving)
[12:10:42] *** Joins: p-i- (~Ohmu@2403:6200:8978:8b4d:3897:4978:8f12:ada4)
[12:12:04] *** Joins: LimeOn (~user@user/limeon)
[12:12:13] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[12:12:46] *** Joins: xkuru (~xkuru@user/xkuru)
[12:14:39] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[12:16:08] <aphysically> jinsun: you can call get_type_hints on the module level so you can trigger the bug with a globally set typealias as well
[12:16:11] *** Quits: nrg (~NRG@user/nrg) (Quit: ZNC - https://znc.in)
[12:16:36] <aphysically> and note this isn't about getting the type hints for the typealias: you're getting the type hints for all the globals in that case, but it errors the entire call
[12:16:38] *** Quits: vanessa (~farawayas@103.160.128.7) (Remote host closed the connection)
[12:16:54] <aphysically> doing it inside a class is just an easier way to exemplify it
[12:17:11] *** Joins: Vonter (~Vonter@user/vonter)
[12:17:55] *** Joins: bindu (~bindu@user/bindu)
[12:19:49] *** Quits: edd_lc (~edd_lc@bzq-155-40.red.bezeqint.net) (Ping timeout: 256 seconds)
[12:19:55] <jinsun> aphysically: oh like doing get_type_hints on an entire module
[12:20:26] *** Joins: c4017w__ (~c4017@209.52.68.8)
[12:20:47] <jinsun> doesn't error if you get_type_hints(a) where a is the type alias, has to be done on a "container" that has a
[12:21:30] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Ping timeout: 250 seconds)
[12:21:31] *** Joins: nrg (~NRG@user/nrg)
[12:22:01] <aphysically> yes
[12:22:14] <aphysically> this doesn't change the fact that I don't know why anyone would stringize TypeAlias, but it's meant to be supported so it's a bug
[12:22:54] <jinsun> yeah the bigger problem is the messy logic in typing I guess, not this specific issue
[12:23:03] *** Quits: l4yer (~l4yer@2001:ac8:31:8900:1012:1bf5:ba27:3ee) (Remote host closed the connection)
[12:23:37] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[12:24:15] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[12:24:31] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[12:26:23] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[12:26:29] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[12:26:42] *** Joins: mattfoxxx (~mattfoxxx@200116b822f64600313c690792be07b4.dip.versatel-1u1.de)
[12:27:19] *** Joins: nomic (~nomic@185.217.117.244)
[12:28:56] <aphysically> up to 8 PRs \o/ https://github.com/python/cpython/pulls?q=author%3AGBeauregard
[12:29:06] <aphysically> and there's probably going to be more before these latest issues are resolved.
[12:29:11] *** Quits: kilitary (~kilitary@188.242.105.134) (Remote host closed the connection)
[12:29:20] <aphysically> it depends on the opinion for backports, because I may need to write a separate patch for 3.10/3.9
[12:29:35] <aphysically> I also need to write some patches for typing_extensions
[12:29:39] <nomic> can i do this :  1 def lzbtbuild(re,lb,lc,xl,suffix='',sourcedir=sourcedir):   <- named as sourcedir .. is in the routine a sourcedir
[12:29:42] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Quit: WeeChat 2.8)
[12:30:12] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[12:30:12] *** Quits: sjk (~sjk@user/sjk) (Quit: sjk)
[12:30:41] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[12:31:15] *** Quits: mattfoxxx (~mattfoxxx@200116b822f64600313c690792be07b4.dip.versatel-1u1.de) (Ping timeout: 256 seconds)
[12:31:21] *** Quits: luciusf1 (~luciusf@46.23.90.165) (Quit: WeeChat 3.1)
[12:31:22] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[12:31:29] *** Joins: mickey85 (~user@user/mickey)
[12:31:50] *** Quits: lockywolf (~lockywolf@public.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[12:32:11] <nomic> ok is ok ferget it
[12:32:42] *** Joins: Viewday113 (~Viewday@user/viewday)
[12:33:25] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[12:34:39] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 256 seconds)
[12:34:53] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[12:34:53] *** Viewday113 is now known as Viewday11
[12:36:37] <aphysically> jinsun: do you think all my tests will pass?
[12:36:45] *** Joins: rsx (~dummy@ppp-188-174-153-123.dynamic.mnet-online.de)
[12:36:51] <aphysically> my side of things is okay, but it's luck if the URL one passes :)
[12:38:44] *** Quits: Luke_LM (~Luke_LM_4@cpc72411-sotn15-2-0-cust758.15-1.cable.virginm.net) (Ping timeout: 252 seconds)
[12:39:34] *** Joins: frost (~frost@user/frost)
[12:39:34] *** Quits: frost (~frost@user/frost) (Client Quit)
[12:40:00] *** Joins: frost (~frost@user/frost)
[12:40:18] *** Quits: gossie (~gossie@2001:1c02:11e:c700:c824:f8ed:a210:e662) (Quit: = "bye bye")
[12:41:42] *** Quits: dtg01100 (~dtg01100@199.21.141.37) (Read error: Connection reset by peer)
[12:43:19] *** Joins: dtg01100 (~dtg01100@199.21.141.37)
[12:44:37] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8) (Ping timeout: 240 seconds)
[12:46:27] *** Quits: Alexer (~alexer@alexer.net) (Ping timeout: 256 seconds)
[12:47:35] *** Joins: savolla (~quassel@88.227.92.215)
[12:49:01] *** Quits: savolla (~quassel@88.227.92.215) (Client Quit)
[12:50:09] *** Quits: seekerm (uid209543@user/seekerm) (Quit: Connection closed for inactivity)
[12:50:26] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:51:18] *** Joins: rajkosto (~rajkosto@93-86-127-103.dynamic.isp.telekom.rs)
[12:51:24] *** Joins: greedom (~greedom@p200300de6745e600d081740d0d92ea93.dip0.t-ipconnect.de)
[12:51:37] *** Quits: archie2345345234 (~archie@2a0e:1c80:1:1:45:15:16:60) (Ping timeout: 240 seconds)
[12:51:44] *** Quits: greedom (~greedom@p200300de6745e600d081740d0d92ea93.dip0.t-ipconnect.de) (Remote host closed the connection)
[12:52:30] *** Joins: savolla (~quassel@88.227.92.215)
[12:52:31] *** Joins: greedom (~greedom@p200300de6745e600d081740d0d92ea93.dip0.t-ipconnect.de)
[12:52:41] *** Quits: greedom (~greedom@p200300de6745e600d081740d0d92ea93.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[12:52:52] *** Quits: savolla (~quassel@88.227.92.215) (Client Quit)
[12:53:34] *** Joins: greedom (~greedom@p200300de6745e600d081740d0d92ea93.dip0.t-ipconnect.de)
[12:53:53] *** Quits: bluedust (~bluedust@117.217.146.23) (Remote host closed the connection)
[12:53:55] *** Quits: Fairy (~Fairy@ti0004a400-5385.bb.online.no) (Ping timeout: 256 seconds)
[12:54:19] *** Joins: savolla (~quassel@88.227.92.215)
[12:55:26] *** Quits: savolla (~quassel@88.227.92.215) (Client Quit)
[12:58:21] *** Quits: someuser (~user@197.54.43.98) (Ping timeout: 256 seconds)
[12:58:56] *** Joins: savolla (~quassel@88.227.92.215)
[12:59:12] *** Joins: kosh (~kosh@user/kosh)
[13:00:46] *** Joins: kilitary (~kilitary@188.242.105.134)
[13:01:32] *** Joins: kts (~kts@103.73.237.196)
[13:01:52] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[13:04:17] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[13:05:51] *** Joins: aslicedbanjo (~aslicedba@host86-168-244-90.range86-168.btcentralplus.com)
[13:05:57] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 240 seconds)
[13:06:32] *** Joins: vitali64 (~vitali64@user/vitali64)
[13:07:37] *** Quits: j0ma (~jonne@146.115.163.209) (Ping timeout: 240 seconds)
[13:08:05] *** Quits: jay-m126 (~jay-m@129.0.204.209) (Ping timeout: 256 seconds)
[13:08:12] *** Quits: xaltsc (~xaltsc@user/xaltsc) (Remote host closed the connection)
[13:08:53] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[13:09:39] *** Joins: j0ma (~jonne@89.45.90.47)
[13:10:39] *** Joins: georgios (~georgios@user/georgios)
[13:10:52] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[13:13:38] *** Joins: jay-m126 (~jay-m@154.72.162.101)
[13:14:42] *** Joins: l4yer (~l4yer@2001:ac8:31:8900:1011:924a:b1e3:99a5)
[13:17:57] *** Quits: sgen (~sgen@2607:fea8:7ce1:c8e0::7a7b) (Ping timeout: 240 seconds)
[13:19:00] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[13:19:06] *** Joins: weedmic (~weedmic@5.102.235.240)
[13:19:37] *** Joins: MmeQuignon (~MmeQuigno@2a01:e0a:1ab:f090:8d59:d491:8da1:3cf0)
[13:20:55] *** Joins: c4017w_ (~c4017@209.52.68.8)
[13:23:38] <jinsun> aphysically: lucky
[13:23:55] *** Joins: Auron (Auron956@user/auron)
[13:24:03] *** Joins: Guest31 (~Guest31@cB8815BC1.dhcp.as2116.net)
[13:24:25] *** Quits: jay-m126 (~jay-m@154.72.162.101) (Ping timeout: 256 seconds)
[13:24:31] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[13:26:29] *** Emet-Selch is now known as Azem
[13:26:32] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:c49f:99ea:fe:b5c8)
[13:26:32] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:c49f:99ea:fe:b5c8) (Changing host)
[13:26:32] *** Joins: skapata (~Skapata@user/skapata)
[13:27:17] *** Joins: Guest7003 (~vit@chello085216193138.chello.sk)
[13:28:11] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[13:28:32] *** Joins: Alexer (~alexer@alexer.net)
[13:29:56] *** Quits: kilitary (~kilitary@188.242.105.134) (Remote host closed the connection)
[13:30:54] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[13:32:25] *** Quits: hams (~hams@user/hams) (Read error: Connection reset by peer)
[13:33:06] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[13:34:09] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[13:34:23] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[13:34:37] *** Joins: Guest403 (~cherry@cB8815BC1.dhcp.as2116.net)
[13:35:46] *** Joins: rendar (~rendar@user/rendar)
[13:37:17] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 240 seconds)
[13:37:27] *** Quits: Guest403 (~cherry@cB8815BC1.dhcp.as2116.net) (Client Quit)
[13:37:40] *** Joins: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net)
[13:38:08] *** Quits: Guest31 (~Guest31@cB8815BC1.dhcp.as2116.net) (Quit: Connection closed)
[13:40:15] *** Joins: walterwhip (~walter@user/walterwhip)
[13:40:22] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[13:42:16] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:ae1e:4690:ef69:4cea) (Quit: pvergain)
[13:43:09] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:44:53] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[13:45:18] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[13:45:21] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[13:45:37] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[13:47:24] *** Joins: tesuji (~quassel@2a02:908:180:9500:993a:fb3a:aa2a:c479)
[13:48:27] *** Joins: zen_coder (~zen_coder@ip5f5bd744.dynamic.kabel-deutschland.de)
[13:48:52] *** Quits: mjsir911 (~bnc@user/mjsir911) (Quit: Goodbye, World!)
[13:49:07] *** Joins: mjsir911 (~bnc@user/mjsir911)
[13:49:53] *** Quits: asix (~Anders@user/asix) (Ping timeout: 250 seconds)
[13:49:59] *** Quits: kcrk (~kcrk@user/kcrk) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[13:50:29] *** Joins: kcrk (~kcrk@user/kcrk)
[13:51:32] *** Joins: callq (~callq@2405:201:a000:a015:20e0:8736:cf91:5ba9)
[13:52:51] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 256 seconds)
[13:53:12] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[13:54:05] *** Joins: Tier (~tier@37.214.42.205)
[13:54:40] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[13:56:04] *** Joins: kts_ (~kts@103.73.237.187)
[13:56:29] *** Quits: kts (~kts@103.73.237.196) (Ping timeout: 256 seconds)
[13:58:11] *** Quits: arnik[m] (~arnikmatr@2001:470:69fc:105::1:8f4b) (Quit: Reconnecting)
[13:58:26] *** Joins: arnik[m] (~arnik@2001:470:69fc:105::1:8f4b)
[13:58:33] <p-i-> SyntaxError: invalid character '⭐' (U+2B50)
[13:58:48] <p-i-> Out[2]: sys.version_info(major=3, minor=10, micro=0, releaselevel='final', serial=0)
[13:58:57] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[13:59:04] <p-i-> I thought newer Python had fixed these
[13:59:18] <p-i-> Can I not have that character in my .py?
[14:01:05] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[14:03:31] *** Joins: asix (~Anders@user/asix)
[14:04:05] *** Quits: kts_ (~kts@103.73.237.187) (Ping timeout: 256 seconds)
[14:04:16] *** Joins: Everything (~Everythin@37.115.210.35)
[14:04:21] *** Joins: jancoow (~jancoow@user/jancoow)
[14:04:25] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[14:04:28] *** Joins: Vonter (~Vonter@user/vonter)
[14:04:42] *** Joins: plastico (~plastico@neomutt/plastico)
[14:05:33] *** Quits: j0ma (~jonne@89.45.90.47) (Ping timeout: 256 seconds)
[14:05:54] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 260 seconds)
[14:06:36] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[14:07:03] <deniska> p-i-: only 'letters' work in identifiers
[14:07:13] *** Parts: Everything (~Everythin@37.115.210.35) ()
[14:07:18] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[14:07:43] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[14:07:43] *** Joins: archie2345345234 (~archie@2a0e:1c80:1:1:45:15:16:60)
[14:08:18] *** Joins: vurr (~seymon@82.131.10.22.cable.starman.ee)
[14:08:24] <p-i-> ah yes gottit... dealing with a big file, and there was a # missing in front of it
[14:09:57] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 240 seconds)
[14:10:38] *** Joins: aod (~a@190-207-91-114.dyn.dsl.cantv.net)
[14:12:14] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 252 seconds)
[14:13:01] <aod> hi, i need win32 but on pypy all links are strikethrough, what that means and should i download it?
[14:13:49] <ChrisWarrick> aod: https://www.pypy.org/download.html only shows 64-bit downloads for windows
[14:13:53] <ChrisWarrick> aod: why do you need pypy for win32?
[14:15:17] *** Quits: therufuser (~therufuse@p5b00084c.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[14:16:53] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 256 seconds)
[14:17:03] <Swayze> because someone has windows 32 bit installed
[14:17:06] <Swayze> :p
[14:17:21] <Swayze> that still happens had a guy 'repair a laptop' for me and install windows 10 32 bit ..
[14:17:24] <aod> i need to send file to printer, help me, xD
[14:18:34] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[14:19:43] <ChrisWarrick> ?
[14:19:49] *** Joins: revolve (~u0_a227@82-132-237-180.dab.02.net)
[14:20:04] <aod> i am lagging
[14:20:10] <aod> i need to send file to printer, help me, xD
[14:20:39] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Ping timeout: 250 seconds)
[14:21:26] *** Joins: c4017w__ (~c4017@209.52.68.8)
[14:23:41] *** Quits: maxzor__ (~maxzor@2a01cb04054faa0098bd91394fed2f26.ipv6.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[14:24:13] *** Quits: savolla (~quassel@88.227.92.215) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:24:17] *** Quits: aod (~a@190-207-91-114.dyn.dsl.cantv.net) (Ping timeout: 240 seconds)
[14:25:09] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[14:25:36] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Read error: Connection reset by peer)
[14:26:26] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:27:39] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[14:27:41] *** Joins: kiirevurr (~seymon@82.131.10.22.cable.starman.ee)
[14:27:43] *** Lord_of_Life_ is now known as Lord_of_Life
[14:28:08] *** Quits: kiirevurr (~seymon@82.131.10.22.cable.starman.ee) (Client Quit)
[14:28:14] *** Quits: vurr (~seymon@82.131.10.22.cable.starman.ee) (Quit: Leaving)
[14:28:33] *** Joins: vurr (~seymon@82.131.10.22.cable.starman.ee)
[14:29:20] *** Quits: aslicedbanjo (~aslicedba@host86-168-244-90.range86-168.btcentralplus.com) (Quit: Leaving.)
[14:29:56] *** Joins: savolla (~quassel@88.227.92.215)
[14:30:08] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[14:30:29] *** Joins: Warped (~Warped@user/warped)
[14:32:50] *** Joins: Viewday112 (~Viewday@user/viewday)
[14:32:57] *** Quits: Alexer (~alexer@alexer.net) (Ping timeout: 240 seconds)
[14:33:10] *** Quits: pepper (~pepper@user/pepper) (Quit: Leaving)
[14:34:21] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[14:34:21] *** Viewday112 is now known as Viewday11
[14:34:24] *** Quits: callq (~callq@2405:201:a000:a015:20e0:8736:cf91:5ba9) (Quit: callq)
[14:35:42] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[14:36:22] *** Joins: msek_ (~Username@pd9fb27bb.dip0.t-ipconnect.de)
[14:36:31] *** Joins: Arw- (~Arwalk@lfbn-dij-1-961-160.w90-125.abo.wanadoo.fr)
[14:36:33] *** Quits: vitali64 (~vitali64@user/vitali64) (Quit: Lost terminal)
[14:37:17] *** Quits: Arw| (~Arwalk@lfbn-dij-1-961-160.w90-125.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[14:38:22] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[14:38:44] *** Joins: vitali64 (~vitali64@user/vitali64)
[14:39:00] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[14:39:25] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[14:39:48] *** Joins: bindu (~bindu@user/bindu)
[14:41:16] *** Joins: seb__ (~seb@124-168-3-160.tpgi.com.au)
[14:41:39] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8)
[14:42:17] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 240 seconds)
[14:44:55] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[14:46:31] <widp> is there a reason to use 'with' if there is only 1 statement after it?
[14:47:23] <widp> with open('file.txt', w) as f:
[14:47:23] <widp>          f.write('done')
[14:47:23] <widp>           
[14:49:11] <deniska> widp: it ensures the file is closed afterwards
[14:49:20] <widp> My understanding is that it feels like an alternative to try.. catch.. finally
[14:49:30] <deniska> widp: it is, but shorter
[14:49:46] <widp> and I already have a try... finally block, so I was wondering if it actually needed for my case.
[14:49:52] *** Joins: bindu (~bindu@user/bindu)
[14:49:57] <widp> deniska: ok
[14:50:00] *** Joins: Fairy (~Fairy@ti0004a400-5385.bb.online.no)
[14:50:22] <deniska> widp: if exceptions happens in `try` before the file was open, then closing it would be an error
[14:51:27] *** Joins: EGH (~EGH@185.25.195.104)
[14:51:33] *** Joins: netpipe (~netpipe@user/netpipe)
[14:51:48] <deniska> widp: alternatively pathlib allows you to write to a file in a one-liner: https://docs.python.org/3/library/pathlib.html#pathlib.Path.write_text
[14:52:02] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Read error: Connection reset by peer)
[14:52:27] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[14:53:09] *** Quits: msek_ (~Username@pd9fb27bb.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[14:53:36] <widp> deniska: https://github.com/yutayamamoto/pdfoutline/pulls
[14:54:19] <widp> is my removal of 'with' , wrong here? https://github.com/yutayamamoto/pdfoutline/pull/7/commits/166bd2515215623b2535173e3f22961482c76cc0
[14:54:27] *** Quits: nullroute_ (~nullroute@209.141.45.45) (Quit: bai)
[14:54:30] *** Joins: bluedust (~bluedust@117.217.146.23)
[14:54:46] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[14:55:04] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[14:55:15] <grawity> I'd say yes, because the NamedTemporaryFile itself doesn't have a write() method
[14:55:26] *** Joins: d3fn (~n0b0dy@user/defn)
[14:55:36] <grawity> `with tmp as out` isn't just a simple out=tmp assignment
[14:55:51] *** Quits: bitblit_ (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 276 seconds)
[14:55:51] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 276 seconds)
[14:55:59] *** Quits: beencubed (~beencubed@209.131.238.248) (Ping timeout: 256 seconds)
[14:56:02] *** Quits: Tashtari (~tashtari@user/tashtari) (Ping timeout: 240 seconds)
[14:56:03] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[14:56:04] <grawity> oh wait, my mistake
[14:56:08] <grawity> it does have a write() method, nevermind
[14:56:21] <deniska> it returns a file, and file.__enter__ returns itself
[14:56:33] *** Quits: defn (~n0b0dy@user/defn) (Ping timeout: 256 seconds)
[14:56:37] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 240 seconds)
[14:56:48] *** Joins: Z-cat (~Z-cat@user/z-cat)
[14:57:27] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:57:39] <deniska> widp: this with closes a file, and I think it's a good idea to close a file after it's written, especially on windows, which defaults to stricter file locking rules
[14:58:34] <widp> deniska: I am doing that in the finally block
[14:58:59] <deniska> widp: yes, but you run a subprocess which accesses that same file
[14:59:06] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[14:59:11] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[14:59:40] *** Quits: bluedust (~bluedust@117.217.146.23) (Ping timeout: 250 seconds)
[14:59:40] *** Joins: akinode (~akinode@2a02:908:1394:cce0:8942:fc95:f2fb:e9d9)
[14:59:47] *** Joins: Alexer (~alexer@alexer.net)
[15:00:04] <widp> which uses the temp file
[15:00:16] *** Joins: nullroute (~nullroute@209.141.45.45)
[15:00:33] <widp> https://github.com/widp/pdfoutline/blob/master/pdfoutline.py , check line 141 here
[15:01:07] *** Joins: bitblit_ (~bitblit@gateway/tor-sasl/bitblit)
[15:02:01] <widp> I don't think I follow, if the file gets closed no matter what due to the finally block, what's the problem?
[15:02:21] <deniska> widp: the potential problem is two programs having file open at once when one of them doesn't need it anymore
[15:02:31] <deniska> I guess if it works, it works, but I'd keep the with-statement
[15:02:55] <widp> I see
[15:03:06] *** Joins: yoro (~yoro@195.206.116.106)
[15:03:41] <akinode> hello, I have an image-processing problem related to downscaling a pil image as an array, is anyone here who has an idea how to solve it? https://stackoverflow.com/questions/70999744/how-can-the-resolution-of-an-image-be-reduced-while-retaining-the-darkest-pixel
[15:05:03] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[15:05:53] *** Joins: cdown (~cdown@163.114.131.1)
[15:07:04] *** Quits: netpipe (~netpipe@user/netpipe) (Quit: Client closed)
[15:07:39] *** Joins: withered1wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[15:07:57] *** Quits: yoro (~yoro@195.206.116.106) (Read error: Connection reset by peer)
[15:08:07] *** Joins: yoro (~yoro@195.206.116.106)
[15:08:54] *** Joins: mickey8 (~user@user/mickey)
[15:09:13] *** Joins: Tashtari (~tashtari@user/tashtari)
[15:09:18] *** Joins: beencubed (~beencubed@209.131.238.248)
[15:09:22] *** Quits: weedmic (~weedmic@5.102.235.240) (Quit: Konversation terminated!)
[15:09:33] *** Joins: domicron1 (~domicron@gateway/tor-sasl/domicron)
[15:10:29] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 256 seconds)
[15:10:32] *** Quits: osxtra (~root@136.49.102.81) (Ping timeout: 240 seconds)
[15:11:03] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Ping timeout: 256 seconds)
[15:11:04] *** Joins: osxtra (~root@2605:a601:aa30:fe00::83a2:6799)
[15:11:22] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[15:11:25] *** Quits: dtg01100 (~dtg01100@199.21.141.37) (Remote host closed the connection)
[15:11:27] *** Quits: mickey85 (~user@user/mickey) (Ping timeout: 276 seconds)
[15:11:27] *** Quits: domicron (~domicron@gateway/tor-sasl/domicron) (Ping timeout: 276 seconds)
[15:11:28] *** domicron1 is now known as domicron
[15:11:49] *** Joins: dtg01100 (~dtg01100@199.21.141.37)
[15:12:42] *** Joins: yoro_ (~yoro@5.2.79.146)
[15:12:52] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[15:13:45] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[15:15:10] *** Joins: bluedust (~bluedust@117.217.146.23)
[15:15:28] *** Joins: msek_ (~Username@pd9fb27bb.dip0.t-ipconnect.de)
[15:15:29] *** Quits: yoro (~yoro@195.206.116.106) (Ping timeout: 252 seconds)
[15:16:39] *** Quits: archie2345345234 (~archie@2a0e:1c80:1:1:45:15:16:60) (Remote host closed the connection)
[15:16:45] *** Quits: greedom (~greedom@p200300de6745e600d081740d0d92ea93.dip0.t-ipconnect.de) ()
[15:17:58] *** Joins: imp (~imp@138-59-122-25.static.sumicity.net.br)
[15:18:13] *** Joins: Vonter (~Vonter@user/vonter)
[15:18:28] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[15:18:48] *** Joins: greedom (~greedom@p200300de6745e600d081740d0d92ea93.dip0.t-ipconnect.de)
[15:20:24] *** Joins: PJBoy (~PJBoy@user/pjboy)
[15:21:55] *** Joins: c4017w_ (~c4017@209.52.68.8)
[15:21:59] *** Quits: bryce (~bryce@ool-457dd6ac.dyn.optonline.net) (Remote host closed the connection)
[15:22:07] *** Joins: therufuser (~therufuse@p5b00084c.dip0.t-ipconnect.de)
[15:22:17] *** Joins: bryce (~bryce@ool-457dd6ac.dyn.optonline.net)
[15:22:38] *** PJBoy is now known as Guest5708
[15:22:38] *** Quits: Guest5708 (~PJBoy@user/pjboy) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[15:22:48] *** Joins: PJBoy (~PJBoy@user/pjboy)
[15:22:57] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 256 seconds)
[15:23:48] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[15:24:22] *** Quits: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[15:25:01] *** Joins: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net)
[15:25:07] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 256 seconds)
[15:25:17] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[15:26:54] *** Joins: Naan (~naan@user/naan)
[15:28:10] *** Joins: sam_sepi0l (~me@198.96.95.154)
[15:28:30] *** Quits: widp (~user@124.123.107.54) (Remote host closed the connection)
[15:28:52] *** Joins: widp (~user@124.123.107.54)
[15:29:20] <sam_sepi0l> Hi
[15:29:46] *** Joins: mattfoxxx (~mattfoxxx@200116b822f64600313c690792be07b4.dip.versatel-1u1.de)
[15:29:52] *** Quits: walterwhip (~walter@user/walterwhip) (Quit: Leaving)
[15:30:37] <sam_sepi0l> when i use input() in python, when user presses ENTER python prints a new line. how can i prevent it from printing new line ?
[15:30:37] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[15:31:07] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[15:31:43] <sam_sepi0l> when i use input() in python, when user presses ENTER python prints a new line. how
[15:31:46] <sam_sepi0l>              can i prevent it from printing new line ?
[15:31:59] <sam_sepi0l> please help me
[15:32:56] <sam_sepi0l> i dont wanna go next line after pressing ENTER with input()
[15:34:19] *** Quits: mattfoxxx (~mattfoxxx@200116b822f64600313c690792be07b4.dip.versatel-1u1.de) (Ping timeout: 250 seconds)
[15:34:36] *** Joins: eXtre3m0 (~eXtr3m0@user/eXtr3m0)
[15:34:40] *** cvmn is now known as caveman
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:25] *** Quits: sam_sepi0l (~me@198.96.95.154) (Quit: Killed (rox (Requested by panasync)))
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:06] *** Joins: GrayArea_ (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net)
[15:37:35] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 256 seconds)
[15:39:01] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Quit: Leaving)
[15:40:39] *** Quits: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net) (Quit: Konversation terminated!)
[15:40:59] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[15:41:42] *** Joins: bluedust_ (~bluedust@86.106.136.217)
[15:42:39] *** Joins: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net)
[15:42:48] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[15:45:17] *** Quits: bluedust (~bluedust@117.217.146.23) (Ping timeout: 240 seconds)
[15:46:21] *** Joins: oem22 (xyz@151.30.129.165)
[15:46:29] *** Joins: njdsk (~hjwb@152.89.105.0)
[15:46:33] <njdsk>  ?    ?
[15:46:33] <njdsk>  >>>>>>>>>,,,,,,, D  ब  i  ब d   	  u ब s ब a   	 t बrब aब iब n  	 &  	    s बu बp बp बl बy   	  i  बsब  i  बs    	 w बi बt बh     	w बeब aब p  बo ब nब s   	  l बi बkब e  	 i बt  	  d बiब d     	w बi  बt बh	    a  बl  - q ब a- e ब d बa  	  tब o 			j बu बs ब tब iब fब y 			c बrब eब a  बt बi बn
[15:46:33] <njdsk> बg 	      	w  बa  बr .s   	   C ब R ब E - बA बT  - I बVब E		   	C  बH ब A - Oब  S   	
[15:46:33] <njdsk>  p  l  e  a  s  e      	s h a r e    	*   	m y  	q s   	 to    	l e s s e n   		u-  s  a     	a  g  g  r  /  e  s  s  \  i  o  n      	a  g  a  i  n  s  t  	    o t h e r s
[15:46:33] <njdsk> vvv
[15:46:41] <njdsk>  ?    ?
[15:46:41] <njdsk>  >>>>>>>>>,,,,,,, D  ब  i  ब d   	  u ब s ब a   	 t बrब aब iब n  	 &  	    s बu बp बp बl बy   	  i  बsब  i  बs    	 w बi बt बh     	w बeब aब p  बo ब nब s   	  l बi बkब e  	 i बt  	  d बiब d     	w बi  बt बh	    a  बl  - q ब a- e ब d बa  	  tब o 			j बu बs ब tब iब fब y 			c बrब eब a  बt बi बn
[15:46:41] <njdsk> बg 	      	w  बa  बr .s   	   C ब R ब E - बA बT  - I बVब E		   	C  बH ब A - Oब  S   	
[15:46:41] <njdsk>  p  l  e  a  s  e      	s h a r e    	*   	m y  	q s   	 to    	l e s s e n   		u-  s  a     	a  g  g  r  /  e  s  s  \  i  o  n      	a  g  a  i  n  s  t  	    o t h e r s
[15:46:41] *** Quits: njdsk (~hjwb@152.89.105.0) (Excess Flood)
[15:47:13] *** Quits: revolve (~u0_a227@82-132-237-180.dab.02.net) (Read error: Connection reset by peer)
[15:47:40] *** Joins: pro_z_ (~pro_z@37.214.69.56)
[15:50:57] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 256 seconds)
[15:50:57] *** Joins: bluedust (~bluedust@117.217.146.23)
[15:51:05] *** Quits: oem22 (xyz@151.30.129.165) (Quit: Going offline, see ya! (www.adiirc.com))
[15:51:51] *** Quits: Linux77 (~LinuMage@186.233.179.225) (Ping timeout: 256 seconds)
[15:51:57] *** Joins: darksun (~darksun@user/darksun)
[15:52:04] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[15:53:12] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[15:53:27] *** Joins: Linux77 (~LinuMage@186.233.179.225)
[15:54:07] *** Quits: bluedust_ (~bluedust@86.106.136.217) (Ping timeout: 256 seconds)
[15:56:59] *** Joins: esther (~esther@2607:fb90:5fe2:b26d:d825:aeeb:dcc5:71da)
[15:57:03] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:b69a:eeeb:d8af:6f51)
[15:58:42] *** Joins: oem (Username@151.30.129.165)
[15:59:32] *** Quits: oem (Username@151.30.129.165) (Client Quit)
[16:00:17] *** Quits: emf (~emf@2620:10d:c090:400::5:ab3f) (Ping timeout: 240 seconds)
[16:01:17] *** Quits: esther (~esther@2607:fb90:5fe2:b26d:d825:aeeb:dcc5:71da) (Ping timeout: 240 seconds)
[16:01:31] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[16:03:22] *** Joins: emf (~emf@163.114.132.4)
[16:03:47] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[16:04:47] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[16:04:53] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[16:05:52] *** Joins: edd_lc (~edd_lc@85.64.225.197.dynamic.barak-online.net)
[16:05:53] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[16:06:13] *** Quits: yoro_ (~yoro@5.2.79.146) (Remote host closed the connection)
[16:09:57] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 240 seconds)
[16:10:41] *** Quits: greedom (~greedom@p200300de6745e600d081740d0d92ea93.dip0.t-ipconnect.de) (Remote host closed the connection)
[16:10:56] *** Joins: lidless (~lidless@user/lidless)
[16:11:19] *** Joins: Vonter (~Vonter@user/vonter)
[16:11:30] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[16:11:49] *** Quits: vurr (~seymon@82.131.10.22.cable.starman.ee) (Quit: Leaving)
[16:12:15] *** Parts: seb__ (~seb@124-168-3-160.tpgi.com.au) ()
[16:12:55] <p-i-> This is awkward
[16:13:05] <p-i-> `pip install cdifflib` has just blown up in my face
[16:13:06] <p-i-> https://bpa.st/JSQA
[16:13:22] <p-i-> I'm just trying to diff 2 strings :|
[16:15:41] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[16:16:03] <ChrisWarrick> p-i-: `difflib` is built-in
[16:16:50] <p-i-> oh!
[16:16:52] <p-i-> Awesome!
[16:17:26] *** Quits: bluedust (~bluedust@117.217.146.23) (Remote host closed the connection)
[16:18:42] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[16:21:45] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[16:22:08] *** Joins: kevr (~kevr@user/kevr)
[16:22:26] *** Joins: c4017w__ (~c4017@209.52.68.8)
[16:22:41] *** Quits: GrayArea_ (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net) (Ping timeout: 256 seconds)
[16:23:30] <akinode> hello, does anyone have an idea why downscaling an image-array can cause it to turn into a regular rgb-matrix when applying pillow.Image.fromarray to it? https://stackoverflow.com/questions/70999744/how-can-the-resolution-of-an-image-be-reduced-while-retaining-the-darkest-pixel
[16:26:05] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[16:26:40] <xheimlich> try looking into the source code.
[16:26:59] <xheimlich> best advice I ever got: learn how to program goodly by looking at the code I myself rely on.
[16:27:24] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[16:28:26] *** Joins: ryu` (~ryu`@user/ryu/x-3206151)
[16:29:33] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[16:29:37] *** Joins: theprophet (~theprophe@85.114.228.184)
[16:32:29] *** Joins: c4017 (~c4017@S0106c0943583f893.vf.shawcable.net)
[16:32:39] *** Quits: msek_ (~Username@pd9fb27bb.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[16:33:19] <theprophet> why its neccessary to write this ---> if __name__ == '__main__': when i import a  module? to be even more specific about my detail, i know that when you run a program the value of name becomes main. so i dont see the logic behind if __name__ == '__main__': when importing a module, since when you run a program it already assigns a main to a program
[16:33:20] <theprophet> you're running. can somebody please explain this to me?
[16:33:32] <bjs> theprophet: it's not *necessary*
[16:33:36] *** Quits: ryu` (~ryu`@user/ryu/x-3206151) (Remote host closed the connection)
[16:33:37] <theprophet> to be even more specific about my question*
[16:33:46] <bjs> theprophet: it's how you tell the difference between `import foo` and `python3 foo.py`
[16:33:55] *** Joins: Collaken (~flo@ip4d17fdd1.dynamic.kabel-deutschland.de)
[16:34:06] <bjs> theprophet: e.g. if you want to let users import a function without running the script
[16:34:30] <theprophet> bjs if its not necessary why do i get a error when running unittest test?
[16:34:40] *** Joins: ryu` (~ryu`@user/ryu/x-3206151)
[16:34:45] <bjs> theprophet: well okay, what test and what did you run?
[16:34:48] <bjs> and what was the error
[16:34:57] *** Quits: edd_lc (~edd_lc@85.64.225.197.dynamic.barak-online.net) (Ping timeout: 240 seconds)
[16:35:03] <theprophet> when i remove the if __name__ == '__main__':
[16:35:08] <theprophet> test fails
[16:35:10] <theprophet> it says
[16:35:29] <theprophet> AttributeError: module '__main__' has no attribute 'test_name_function'
[16:35:31] *** Quits: imp (~imp@138-59-122-25.static.sumicity.net.br) (Read error: Connection reset by peer)
[16:35:36] <theprophet> ERROR: test_name_function (unittest.loader._FailedTest)
[16:35:44] <bjs> theprophet: don't trickle little bits of info like this, it'll take hours to figure out what's actually going on.  Just show me the actual file and the full error report and what you ran
[16:35:46] <bjs> like in a pastebin
[16:36:04] <theprophet> ok
[16:36:08] <theprophet> ill copy the whole thing
[16:36:13] <bjs> Yes please
[16:36:49] <theprophet> bjs https://dpaste.org/XLJx
[16:37:20] <bjs> theprophet: what is the actual code?
[16:37:32] <theprophet> yes i am copying it now
[16:37:38] <ChrisWarrick> theprophet: you should not be calling unittest.main() if you’re using pytest
[16:37:52] <bjs> theprophet: oh you're running pytest?  but then you're calling unittest.main() ?
[16:37:56] <bjs> I'm confused, which do you want to do?
[16:38:01] <theprophet> i am not running pytest
[16:38:07] <theprophet> i am running unittest
[16:38:07] <bjs> theprophet: well you are.
[16:38:08] <ChrisWarrick> theprophet: your logs say otherwise
[16:38:20] <bjs> Whether you intended to is a different question?  are you running this from some IDE or something?
[16:38:36] <theprophet> yes . from pycharm
[16:38:47] *** Joins: irc_standardnick (~irc_stand@203.110.242.22)
[16:39:28] <bjs> theprophet: is pycharm configured to run pytest by any chance?
[16:39:33] <bjs> theprophet: `pytest foo.py` imports foo
[16:39:36] <bjs> rather than runs it
[16:39:59] <bjs> theprophet: you cannot run unittest.main() if you're using pytest.
[16:40:20] <theprophet> bjs there you go, https://dpaste.org/atqi
[16:40:43] <bjs> That's why putting the `if __name__` looked like it did something, because pytest is *importing* the file and so it didn't run unittest at all
[16:41:02] <bjs> but without it, then it ran unittest and it was trying to run unittest when you were using pytest that was the problem
[16:41:06] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[16:41:10] <theprophet> bjs  i dont understand your question, i dont use pytest, i am importing module unitttest
[16:41:22] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[16:41:32] <bjs> theprophet: I'm not asking if you're using pytest, I am *telling* you that you are using pytest, or at least that PyCharm is running pytest for you
[16:41:43] <theprophet> aha i see
[16:41:55] <theprophet> so pycharm is using pytest in the background?
[16:42:24] <bjs> theprophet: well clearly, your output says "launching pytest ..." and then the output isn't what unittest output even looks like
[16:42:26] <bjs> so yes
[16:42:35] *** Joins: yte3 (~0@151.31.101.47)
[16:42:51] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[16:43:13] <theprophet> i see, yea i mean all i did is to import the module called unittest. but i get it yea.
[16:43:37] *** Joins: pradhvan (sid244250@id-244250.helmsley.irccloud.com)
[16:43:44] <bjs> theprophet: you cannot run unittest.main() if you are running the tests with pytest.
[16:43:55] *** Quits: pradhvan (sid244250@id-244250.helmsley.irccloud.com) (Changing host)
[16:43:55] *** Joins: pradhvan (sid244250@dgplug/pradhvan)
[16:44:02] <bjs> the import is okay, and you can write unittest.TestCase classes and still use pytest, you just cannot use the unittest main() function
[16:44:05] <theprophet> i am doing this from python crash course btw
[16:44:23] <bjs> theprophet: do you understand why the if __name__ "fixes" this?
[16:44:36] <theprophet> thats exactly what i dont understand
[16:44:55] <bjs> theprophet: so if __name__ only runs if you're running the file as a script, not when you import it.
[16:44:56] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8) (Ping timeout: 245 seconds)
[16:45:00] <pycurious1> I'm drawing a seaborn barplot - but it wont show. https://seaborn.pydata.org/generated/seaborn.barplot.html
[16:45:11] <pycurious1> ax = sns.barplot(x="day", y="total_bill", data=tips)
[16:45:17] <bjs> theprophet: but when pytest runs, it imports the file.  So when you run pytest, the if __name__ doesn't run, so you don't run unittest.main() and so it works.
[16:45:18] <pycurious1> how do you display this plot?
[16:45:24] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 250 seconds)
[16:45:34] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[16:45:51] <theprophet> wait
[16:46:06] <grym> plt.show()
[16:46:20] <theprophet> so do i run unittest of pytest tell me this first
[16:46:42] <serh> salz
[16:46:47] <theprophet> or*
[16:46:55] *** Joins: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52)
[16:46:58] <bjs> theprophet: I assume you're pressing some button in PyCharm?  When you press that button PyCharm is running `pytest test_name_function.py`, which goes `import test_name_function`.
[16:47:18] <theprophet> i am just pressing the run button
[16:47:30] <bjs> theprophet: pytest is a nice test framework and lets you write unittest tests just happily, so you don't have to change anything
[16:47:35] <bjs> you just need to not run unittest.main
[16:47:47] <bjs> and let pytest do the work
[16:47:49] *** Quits: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52) (Remote host closed the connection)
[16:48:06] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[16:48:20] <theprophet> it wont let me run the pytest
[16:48:26] <bjs> theprophet: what is "it" ?
[16:48:32] <theprophet> pycharm
[16:48:38] <theprophet> it has one button for running the code
[16:48:39] *** Quits: lidless (~lidless@user/lidless) ()
[16:48:42] <theprophet> and other one is debug
[16:48:46] <bjs> theprophet: why not? You seemed to run it earlier, to get that error you showed us
[16:49:03] <theprophet> well, i removed the the if name
[16:49:07] <theprophet> __name__
[16:49:15] <bjs> theprophet: and what happens?
[16:49:20] <theprophet> and it was still pytest output
[16:49:24] <bjs> theprophet: yes
[16:49:39] <bjs> theprophet: what's the problem?
[16:50:19] <theprophet> if its still pytest output
[16:50:26] <theprophet> where is the unittest output?
[16:50:32] *** Joins: bluedust (~bluedust@117.217.146.23)
[16:50:41] <bjs> theprophet: you don't need to run unittest, just don't fight pycharm
[16:50:47] <bjs> let it run pytest and let pytest run your unit tests
[16:50:55] <bjs> and delete the unittest.main() line
[16:51:13] <bjs> (or put it behind a if __name__ so it doesn't run when running the tests in PyCharm)
[16:52:06] <theprophet> yes thats where it originaly was, i mean the unittest main
[16:52:15] <bjs> theprophet: yes just delete it, you don't need it
[16:52:29] <theprophet> i intentionaly delleted to check the purpose of if __name__
[16:52:37] <bjs> putting it behind the if __name__ has the same effect: it means it doesn't get run when you run the tests
[16:53:12] <theprophet> so i should just create instance of the class?
[16:53:21] <bjs> theprophet: of what class?
[16:53:30] *** Joins: daidoji (~daidoji@104-52-250-5.lightspeed.gnvlsc.sbcglobal.net)
[16:53:32] <theprophet> i have a class here look
[16:53:33] <theprophet> https://dpaste.org/atqi
[16:53:49] <theprophet> how do i activate the unitest without calling the class and function where the unitest is
[16:53:50] <bjs> theprophet: no, just delete the unittest.main() line and then run it again in pycharm
[16:54:32] <theprophet> yea now its ok , no exceptions
[16:55:05] <theprophet> can you please, explain why its same? because when you run the program the name is automatcly = to __main__?
[16:55:27] <theprophet> bjs
[16:55:29] <bjs> theprophet: when you `import foo` then inside foo.py the __name__ is "foo"
[16:55:31] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-5d9e-b0d5-b070-4737.res6.spectrum.com)
[16:55:32] *** Joins: x_kuru (~xkuru@user/xkuru)
[16:55:37] <bjs> theprophet: but when you `python foo.py` the __name__ is set to "__main__"
[16:56:07] <bjs> theprophet: so `if __name__ == "__main__"` is basically just a `if <file not imported>:`
[16:56:09] <theprophet> yes i know that
[16:56:17] <theprophet> yes that i know
[16:56:28] <bjs> theprophet: okay then what's the question?
[16:56:50] <theprophet> well please tell chronologicly
[16:56:57] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 240 seconds)
[16:56:57] *** Joins: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1)
[16:57:08] <theprophet> when you run the program the name of the program becomes __main__ rgith?
[16:57:17] <theprophet> the value of name = is main right?
[16:57:20] <bjs> theprophet: in PyCharm you press button, button tells PyCharm to run tests, PyCharm runs pytest, pytest goes `import test_name_function`
[16:57:21] <theprophet> in that moment?
[16:57:39] <bjs> theprophet: each *file* has a __name__ variable, with the name of the module
[16:57:57] <bjs> and it gets set before the file runs
[16:58:37] <theprophet> what if i was not in pycharm
[16:58:51] <bjs> theprophet: well pycharm is going `pytest test_name_function.py`
[16:59:00] <theprophet> ok
[16:59:05] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[16:59:36] *** Joins: glazed (~glazed@108.5.30.126)
[16:59:41] <theprophet> bjs thanks
[17:00:02] <bjs> theprophet: i suggest just using pytest and letting pytest run your tests. It can run unittest tests just fine,  but it also has lots of other nice features and can run other kinds of tests too, which is probably why PyCharm uses it by default
[17:01:14] <glazed> hi folks, i'm trying to do some file manipulation stuff. possibly python isn't the best tool for this, but it's just for learning sake. i'm maintaining a binary file, and i'd like to both overwrite some bytes and also add new bytes at the end of the file. can i achieve this with a single file object / mode? or do i need to open one in r+b mode and
[17:01:14] <glazed> another in a+b mode?
[17:01:52] <bjs> glazed: r+b lets you read and write to the file yeah
[17:02:45] *** Quits: onur (~onur@user/onur) (Quit: ZNC 1.8.2 - https://znc.in)
[17:03:00] *** Joins: onur (~onur@static.88.107.46.78.clients.your-server.de)
[17:03:05] *** Quits: onur (~onur@static.88.107.46.78.clients.your-server.de) (Changing host)
[17:03:05] *** Joins: onur (~onur@user/onur)
[17:03:17] *** Quits: ybonatakis (~iob@dynamic-2a00-1028-8390-9e8a-5cf8-25c0-aa4e-e57d.ipv6.o2.cz) (Ping timeout: 240 seconds)
[17:03:47] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[17:04:06] <glazed> but what about appending to the end of it? when i try, i seem to be overwriting data instead of appending. probably i'm doing something wrong, but if i seek to the end of the file in r+b mode, and then write X bytes, should it add more bytes to the file?
[17:04:37] *** Quits: luva (~luva@45.141.152.53) (Ping timeout: 256 seconds)
[17:04:43] <bjs> glazed: yes it will add more bytes to the file
[17:05:48] <bjs> glazed: you can seek where you want in the file and write bytes, if there are already bytes there they get overwritten of course.
[17:06:07] <glazed> okay cool, that makes sense, thank you!
[17:06:11] *** Joins: ybonatakis (~iob@dynamic-2a00-1028-8390-9e8a-5cf8-25c0-aa4e-e57d.ipv6.o2.cz)
[17:06:17] *** Joins: SaltHillStroller (~SaltHillS@199.249.111.186)
[17:06:20] *** Quits: savolla (~quassel@88.227.92.215) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[17:06:37] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 250 seconds)
[17:06:50] *** Quits: irc_standardnick (~irc_stand@203.110.242.22) (Quit: Leaving)
[17:08:22] *** Joins: someuser (~user@197.54.43.98)
[17:10:32] *** Quits: SaltHillStroller (~SaltHillS@199.249.111.186) (Ping timeout: 250 seconds)
[17:11:54] *** Quits: glazed (~glazed@108.5.30.126) (Quit: Client closed)
[17:12:13] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[17:13:28] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[17:13:38] *** Joins: adde9708 (uid139358@id-139358.tinside.irccloud.com)
[17:14:46] *** Joins: luva (~luva@37.120.197.54)
[17:15:42] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[17:16:22] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Client Quit)
[17:16:40] *** Joins: rev1nchn (~rev1nchn@user/rev1nchn)
[17:16:59] *** Joins: erkan (~erkan@p200300d3470cef6d50cfe02df7248683.dip0.t-ipconnect.de)
[17:18:01] *** Quits: pflanze (~pflanze@5-168-208-80.dyn.fiber.qlnet.ch) (Remote host closed the connection)
[17:19:18] *** Quits: ultera (~Thunderbi@user/ultera) (Quit: ultera)
[17:19:36] *** erkan is now known as konio
[17:19:41] *** Parts: konio (~erkan@p200300d3470cef6d50cfe02df7248683.dip0.t-ipconnect.de) ()
[17:19:47] *** Joins: konio (~erkan@p200300d3470cef6d50cfe02df7248683.dip0.t-ipconnect.de)
[17:19:56] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 245 seconds)
[17:20:10] <konio> hi there
[17:20:17] *** Joins: fubbe (~bubbe@151.41.4.108)
[17:20:30] *** Joins: aslicedbanjo (~aslicedba@host86-160-16-77.range86-160.btcentralplus.com)
[17:21:03] *** Quits: fubbe (~bubbe@151.41.4.108) (Client Quit)
[17:21:38] *** Joins: fubbe (~bubbe@151.41.4.108)
[17:22:55] *** Joins: c4017w_ (~c4017@209.52.68.8)
[17:23:21] *** Joins: ThePhilgrim (~ThePhilgr@151.41.4.108)
[17:24:04] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:b69a:eeeb:d8af:6f51) (Quit: pvergain)
[17:24:37] *** Joins: kilitary (~kilitary@188.242.105.134)
[17:25:17] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 252 seconds)
[17:26:43] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[17:26:43] *** Quits: Tier (~tier@37.214.42.205) (Quit: Leaving)
[17:27:11] *** Quits: fubbe (~bubbe@151.41.4.108) (Ping timeout: 250 seconds)
[17:27:44] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[17:27:57] *** Joins: maxzor__ (~maxzor@2a01cb04054faa00c599663dbdcddcbc.ipv6.abo.wanadoo.fr)
[17:29:43] *** Quits: konio (~erkan@p200300d3470cef6d50cfe02df7248683.dip0.t-ipconnect.de) (Quit: Leaving...)
[17:30:43] *** Joins: SanchoPanza (~rose@2a03:ef42:4003:5b8e:eeb2:8706:5d2e:d50b)
[17:31:06] <SanchoPanza> Hi , how access to following dictionary
[17:31:11] <SanchoPanza> ["{1:{'name':'milad'}}"]
[17:31:17] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[17:31:49] <SanchoPanza> guys
[17:31:54] <nedbat> SanchoPanza: that's an unusual bit of data, where did it come from?
[17:32:09] <SanchoPanza> csv file
[17:32:43] <nedbat> SanchoPanza: do you have any control over how that csv file is created?
[17:33:28] *** Joins: Vonter (~Vonter@user/vonter)
[17:33:30] <SanchoPanza> Yes  I created by myself
[17:33:37] *** Quits: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com) (Remote host closed the connection)
[17:33:47] <SanchoPanza> I didn't use csv module for creating the file
[17:34:14] <nedbat> SanchoPanza: i think it would be good to create it differently.  Why did you choose a csv file for this data?
[17:34:20] <theprophet> SanchoPanza exactly what you mean by how to acces? what are you trying to do ?
[17:34:31] *** Joins: Guest59 (~Guest59@host-89-243-211-192.as13285.net)
[17:34:33] *** Quits: Guest59 (~Guest59@host-89-243-211-192.as13285.net) (Client Quit)
[17:34:58] <SanchoPanza> Actualy it's an bank program and also this is my firsone that I want to put on github
[17:35:02] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[17:35:21] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[17:35:25] <SanchoPanza> every user has a an identifier
[17:35:34] <SanchoPanza> for herself
[17:35:37] *** Joins: mickey8 (~user@user/mickey)
[17:35:39] <grym> SanchoPanza: it is possible that you're reading that file in incorrectly; can you show the code you use to read the file as well as the file itself
[17:35:43] <grym> (the csvfile)
[17:36:25] <SanchoPanza> In fact I still didn't write any code for reading the file
[17:36:42] <SanchoPanza> Oh, Yes
[17:36:49] <SanchoPanza> I will send it now
[17:37:08] <theprophet> SanchoPanza yes but, you said access , what you meant by that? access how? exactly what you want to do with that particular dictionary?
[17:37:38] *** Joins: callq (~callq@2409:4062:2e9e:2081:b0f0:7317:32c9:9fbd)
[17:37:51] <SanchoPanza> I want to convert the string to dictionary
[17:37:51] <theprophet> SanchoPanza add, remove, update, or what?
[17:38:12] <grym> csv.DictReader is the way to do this, but it's possible to do that incorrectly and wind up with what you've shown
[17:38:52] <SanchoPanza>  with open('Database.csv') as csvfile:
[17:38:54] <SanchoPanza>  15
[17:38:56] <SanchoPanza>  16                 reader = csv.reader(csvfile)
[17:38:57] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[17:38:58] <grym> SanchoPanza: don't paste here
[17:38:58] <SanchoPanza>  17
[17:39:00] <SanchoPanza>  18                 for row in reader:
[17:39:02] <grym> nooooo
[17:39:02] <theprophet> wait
[17:39:02] <SanchoPanza>  19                     print(row)
[17:39:04] <SanchoPanza>  20                     print(type(row))
[17:39:04] <theprophet> wait wiat
[17:39:06] <theprophet> stop
[17:39:06] <SanchoPanza> yy
[17:39:08] <theprophet> dude stop wait
[17:39:14] *** Quits: Linux77 (~LinuMage@186.233.179.225) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[17:39:21] <grym> SanchoPanza: bpa.st/+python+text
[17:39:55] <theprophet> copy your code here https://dpaste.org  SanchoPanza
[17:40:24] <SanchoPanza> ok
[17:40:51] *** Joins: pycurious (~Adium@user/pycurious)
[17:40:51] *** Quits: pycurious1 (~Adium@c-69-254-208-5.hsd1.fl.comcast.net) (Read error: Connection reset by peer)
[17:41:42] <nedbat> grym: i think the answer here isn't "read the csv file better", it's, "write a different file"
[17:42:21] <theprophet> nedbat or 'a' ?
[17:42:33] <grym> nedbat: dunno, haven't seen the file yet :)
[17:42:39] <nedbat> theprophet: i don't understand
[17:42:54] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[17:42:55] <theprophet> sorry dont mind it, i was writing in different chat
[17:42:57] <grym> but i have seen dictreader make that sort of output sometimes when i was doing something wrong
[17:43:24] <SanchoPanza> https://bpa.st/YD4A
[17:44:00] <grym> SanchoPanza: could you also include the first ~5 rows of the csv file
[17:44:25] *** Joins: palasso (~palasso@user/palasso)
[17:44:25] <grym> (in a new paste at bpa.st/+python+text ; code in the first, csv in the second
[17:44:31] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 256 seconds)
[17:44:44] *** Quits: Buliarous (~gypsydang@46.232.210.139) (Ping timeout: 268 seconds)
[17:44:51] *** Joins: Vonter (~Vonter@user/vonter)
[17:44:53] <SanchoPanza> ok
[17:45:05] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[17:45:53] <SanchoPanza> https://bpa.st/MUPA
[17:46:08] <grym> SanchoPanza: well, nedbat was right
[17:46:29] <grym> that's certainly "a csv file" in the sense that it's text, but it's not what csv files normally look like
[17:46:39] *** Joins: Linux77 (~LinuMage@186.233.179.225)
[17:47:01] <SanchoPanza> as I said I didn't write it with csv module
[17:47:02] <bjs> SanchoPanza: it looks like your "csv file" contains Python code? I wouldn't really call it a csv file (there aren't even any commas!)
[17:47:14] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[17:47:23] <grym> SanchoPanza: a CSV file would look like https://bpa.st/77XA  to represent that data
[17:47:33] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[17:47:38] <grym> SanchoPanza: if you didn't write it as a csv, why are you reading it as one
[17:47:52] <grym> as if it were one
[17:47:53] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[17:47:53] <grym> *
[17:48:23] <jinsun> well the file name ends with .csv so it must be csv :P
[17:48:28] <omegatron> because we are living in the age of (computer) magic
[17:48:40] <pycurious> is there a tool that can give me number of lines of python code in each directory that is a subdirectory of the current directory?
[17:48:44] <grym> jinsun: keep that up and someone will let you store post code data :<
[17:48:48] <SanchoPanza> Guys , I'm a new one :)))
[17:48:52] <grym> pycurious: ripgrep :P
[17:48:52] <SanchoPanza> But I got it
[17:48:57] <SanchoPanza> Thanks for your time
[17:49:35] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[17:49:42] <grym> pycurious: or find / xargs / wc -l
[17:50:00] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[17:50:29] <pycurious> grym: if you use ripgrep - try ugrep :)
[17:50:47] <pycurious> grym: That's what i am using - but i'd love to get some tables out :)
[17:52:01] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[17:52:15] *** Parts: SanchoPanza (~rose@2a03:ef42:4003:5b8e:eeb2:8706:5d2e:d50b) (WeeChat 2.8)
[17:52:17] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 240 seconds)
[17:52:46] <pycurious> grym: found it - cloc is what i was looking for I think. Better than my find/...
[17:53:10] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 260 seconds)
[17:53:33] <grym> pycurious: find . -name "*.py" -exec wc -l {} \;  and then cut and awk sum  is about as far as i got just now
[17:54:06] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 260 seconds)
[17:54:15] *** Quits: KeiraT (~k@lulzsec.co.uk) (Ping timeout: 256 seconds)
[17:55:11] *** Joins: pycurious1 (~Adium@c-69-254-208-5.hsd1.fl.comcast.net)
[17:55:11] *** Quits: pycurious (~Adium@user/pycurious) (Read error: Connection reset by peer)
[17:55:13] <jinsun> too much #bash stuff, do it with python -c
[17:56:35] *** Joins: tatarqa (~kli@ip-89-177-122-45.net.upcbroadband.cz)
[17:58:12] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[17:58:15] <xheimlich> I find it absolutely incredible that shell scripting was a major use of Python.
[17:58:26] <xheimlich> the python interpreter is slow to start, to begin with.
[17:58:37] *** Joins: vakera_pingveno (~dan@2600:1700:21f9:b150::40)
[17:58:39] <xheimlich> and everything that's shell-like is so awkward.
[17:59:16] <xheimlich> in scripting stuff it perhaps excels at things like opening sockets. the requests library is relatively lightweight and helps with tasks too.
[17:59:55] <xheimlich> but the kind of thing where I want to loop through files and hy2py python files starting with a prefix and then delete the original .hy file... man, give me a b, give me an ash, give me bash.
[18:00:39] <grym> de gustibus
[18:01:06] *** Quits: Linux77 (~LinuMage@186.233.179.225) (Ping timeout: 260 seconds)
[18:01:16] *** Quits: widp (~user@124.123.107.54) (Quit: ERC (IRC client for Emacs 27.1))
[18:01:27] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[18:02:09] *** Joins: Klinda (~superleag@user/klinda)
[18:02:45] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:03:26] <grym> (to me, of course, that sounds like a neat level in the ol' wdired text based adventure game)
[18:04:34] *** Joins: Vonter (~Vonter@user/vonter)
[18:04:53] *** Joins: Ha-Jo (~Thunderbi@2a01:c23:8801:6300:208:caff:fe86:5ace)
[18:06:03] *** Quits: kilitary (~kilitary@188.242.105.134) (Ping timeout: 256 seconds)
[18:06:30] <Ha-Jo> Hi, i have a function, that accepts only digits, "." and ":" as input. Whats the most easy way to filter a string to have it contai only allowd characters?
[18:06:51] <Ha-Jo> currently i have: b=''.join(filter(lambda x: x in ["0","1","2","3","4","5","6",".",":"], a))
[18:06:53] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[18:06:55] *** Joins: vurr (~seymon@82.131.10.22.cable.starman.ee)
[18:07:12] <supakeen> "".join(c for c in S if c in "0123456.")
[18:08:00] *** Joins: savolla (~quassel@88.227.92.215)
[18:08:03] <Ha-Jo> supakeen: shorter than my solution. ;-)
[18:08:53] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[18:09:32] *** Joins: Linux77 (~LinuMage@186.233.179.225)
[18:09:38] <The-Compiler> Ha-Jo: 7, 8 and 9 might get angry about that solution
[18:10:03] <Ha-Jo> The-Compiler: i omitted these for lazyness...
[18:10:18] <jinsun> re.sub(r"[^0-9.:]", "", s)
[18:10:29] *** Joins: greedom (~greedom@p200300de6745e600d081740d0d92ea93.dip0.t-ipconnect.de)
[18:10:37] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[18:12:03] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[18:13:51] <The-Compiler> Ha-Jo: they make quite a difference though, because you can just use   strings.digits + ".:"  in that case
[18:15:00] *** Joins: Kruppt (~Kruppt@50-111-52-16.drhm.nc.frontiernet.net)
[18:18:22] *** Quits: akinode (~akinode@2a02:908:1394:cce0:8942:fc95:f2fb:e9d9) (Quit: Client closed)
[18:20:00] *** Joins: KeiraT (~k@lulzsec.co.uk)
[18:20:47] *** Quits: vurr (~seymon@82.131.10.22.cable.starman.ee) (Ping timeout: 256 seconds)
[18:21:20] *** Joins: kilitary (~kilitary@188.242.105.134)
[18:21:49] <Ha-Jo> jinsun: re.sub is also cool!
[18:23:26] *** Joins: c4017w__ (~c4017@209.52.68.8)
[18:25:41] <p-i-> Does anyone know a tool to diff 2 multiline strings & just show the lines that are different?
[18:26:02] <p-i-> I been playing with difflib.ndiff but that's working at a character level.
[18:26:13] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[18:26:47] <grawity> if you give it a string, it works on character level
[18:26:59] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[18:27:00] <grawity> if you give it a list of strings, it works on whole string level
[18:27:08] <grawity> that's how I understand it at least
[18:27:46] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:c12f:e1ba:6835:4862)
[18:27:46] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:c12f:e1ba:6835:4862) (Changing host)
[18:27:46] *** Joins: skapata (~Skapata@user/skapata)
[18:30:21] *** Quits: l4yer (~l4yer@2001:ac8:31:8900:1011:924a:b1e3:99a5) (Ping timeout: 245 seconds)
[18:33:02] <Tritium> If you are just comparing blocks of text, line by line for a diff .... just use ==
[18:33:09] *** Quits: pycurious1 (~Adium@c-69-254-208-5.hsd1.fl.comcast.net) (Quit: Leaving.)
[18:33:44] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 250 seconds)
[18:34:50] *** Joins: Helenah (~s98259@ip129.ip-51-195-238.eu)
[18:35:20] *** Quits: mwichmann (~mats@209-188-119-117.taosnet.com) (Quit: Leaving)
[18:35:27] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[18:35:55] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:45a:7474:23a9:c2d1)
[18:38:17] *** Joins: pycode1 (~pycode3@2001:b07:5d28:551:33de:7952:8196:1203)
[18:40:04] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[18:40:31] *** Joins: pycurious (~Adium@user/pycurious)
[18:40:57] *** Joins: gumol (~user@195-240-229-124.fixed.kpn.net)
[18:41:19] *** Quits: Ha-Jo (~Thunderbi@2a01:c23:8801:6300:208:caff:fe86:5ace) (Quit: Ha-Jo)
[18:41:54] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8)
[18:42:13] *** gumol is now known as iwan
[18:43:50] *** Quits: pycurious (~Adium@user/pycurious) (Client Quit)
[18:44:13] <p-i-> Tritium: There may be lines added/removed/modified but mostly it's gona be the same string.
[18:44:21] <p-i-> I guess I can roll my own
[18:44:55] <Tritium> I mean, you can also shell out to like... git diff if the system has git installed
[18:45:00] <p-i-> It's nontrivial enough to hunt for a tool to do it.
[18:45:02] *** Quits: iwan (~user@195-240-229-124.fixed.kpn.net) (Client Quit)
[18:45:09] <p-i-> bash actually diffs without git
[18:45:27] *** Joins: gumol (~user@195-240-229-124.fixed.kpn.net)
[18:46:02] <grawity> I'm not aware of bash diffing anything ever
[18:46:19] <Tritium> If you mean there is a diff tool installed most of the time on *nix, yes.  theres a git format for diff that... well, i default to; and if you aren't on *nix, then git is probably the most common way to get diff
[18:46:20] <grawity> /bin/diff exists separately from git diff, yes
[18:47:14] <p-i-> yah my bad words. /bin/diff it is.
[18:47:17] *** Quits: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net) (Ping timeout: 240 seconds)
[18:48:24] <jinsun> p-i-: did you try the list of lines thing that grawity suggested? instead of suppying the multiline line string directly to ndiff
[18:48:43] <p-i-> trying it now
[18:49:57] *** Joins: pycurious (~Adium@user/pycurious)
[18:50:00] *** Quits: gumol (~user@195-240-229-124.fixed.kpn.net) (Client Quit)
[18:50:03] *** Joins: widp (~user@124.123.107.54)
[18:50:22] *** Joins: gumol (~gumol@195-240-229-124.fixed.kpn.net)
[18:50:57] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[18:51:52] <zamanf> is there a way to do var = check ? True : False in python?
[18:52:51] *** Joins: beco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73)
[18:53:07] <grawity> var = bool(check)
[18:53:11] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[18:53:32] <grawity> for other situations, 'X if Y else Z' is the ternary operator
[18:53:39] *** Quits: Fairy (~Fairy@ti0004a400-5385.bb.online.no) (Ping timeout: 256 seconds)
[18:54:41] *** Quits: gumol (~gumol@195-240-229-124.fixed.kpn.net) (Client Quit)
[18:55:07] *** Quits: Alexer (~alexer@alexer.net) (Ping timeout: 256 seconds)
[18:56:03] <nedbat> p-i-: you don't have to shell out to bin/diff.  difflib does what you need: https://docs.python.org/3/library/difflib.html#difflib.context_diff
[18:56:48] <zamanf> I am using this: check = bool(b['test'])
[18:56:48] <zamanf>  and I get the KeyError. I want to check if the key test exists in order to assigned a True or False value
[18:56:57] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 240 seconds)
[18:57:15] <grawity> "key exists" is a whole different thing from "key is non-null" or "key is not falsey"
[18:57:25] <deniska> zamanf: `check = 'test' in b`
[18:57:29] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-708d-a2f0-bac0-934a.res6.spectrum.com)
[18:57:29] <grawity> to check if a key exists, use `'test' in b`
[18:57:50] <grawity> nonexistent keys always raise an exception, it's not like PHP isset()
[18:58:07] <p-i-> gottit! Thanks grawity jinsun nedbat
[18:58:26] *** Joins: cdown_ (~cdown@188.214.11.14)
[18:58:29] *** Joins: gumol (~gumol@195-240-229-124.fixed.kpn.net)
[18:59:00] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[18:59:06] *** Joins: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net)
[18:59:19] *** Quits: gumol (~gumol@195-240-229-124.fixed.kpn.net) (Client Quit)
[18:59:39] <grawity> (to check if a key exists *and* is not falsey, b.get('test') does return None for nonexistent keys)
[19:00:50] <Tritium> TIL None is a valid dict key
[19:01:15] <Tritium> i mean, of course it is, but its just never come up
[19:01:21] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 256 seconds)
[19:01:22] *** cdown_ is now known as cdown
[19:03:17] *** Quits: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net) (Ping timeout: 240 seconds)
[19:03:17] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 240 seconds)
[19:03:58] *** Joins: Alexer (~alexer@alexer.net)
[19:04:17] *** Quits: callq (~callq@2409:4062:2e9e:2081:b0f0:7317:32c9:9fbd) (Ping timeout: 240 seconds)
[19:04:27] *** Joins: callq_ (~callq@2409:4062:202:fb53:35cf:a4ba:9e6b:cada)
[19:05:23] *** Quits: nomic (~nomic@185.217.117.244) (Quit: Leaving)
[19:05:41] *** Joins: nomic (~nomic@185.217.117.244)
[19:06:27] *** Quits: luva (~luva@37.120.197.54) (Ping timeout: 256 seconds)
[19:06:56] *** Joins: akk (~akk@75-161-95-245.albq.qwest.net)
[19:07:10] *** Joins: pepper (~pepper@user/pepper)
[19:07:32] *** Joins: luva (~luva@146.70.62.252)
[19:07:41] *** Joins: Vonter (~Vonter@user/vonter)
[19:09:44] <Tritium> {'somekey': None}.get('somekey') will return None so thats not foolproof
[19:10:07] <grawity> yeah but sometimes that's exactly what you want
[19:12:51] *** Joins: mwichmann (~mats@209-188-119-117.taosnet.com)
[19:15:59] *** Joins: Jong (~Jong@2620:10d:c090:400::5:d8b2)
[19:17:27] *** Joins: CodePoint (~CodePoint@2600:1700:3070:3790:c540:4db8:d084:c3a0)
[19:18:30] *** Quits: CodePoint (~CodePoint@2600:1700:3070:3790:c540:4db8:d084:c3a0) (Client Quit)
[19:18:45] *** Quits: fbiagent_ (~fbiagent@user/fbiagent) (Remote host closed the connection)
[19:18:47] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[19:20:17] *** Joins: opaca_lux (~opaca_lux@185.169.233.141)
[19:20:21] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[19:20:31] *** Joins: AUTRaedon (~AUTRaedon@078132096198.public.t-mobile.at)
[19:20:43] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[19:23:55] *** Joins: c4017w_ (~c4017@209.52.68.8)
[19:24:51] *** AUTRaedon is now known as AUTRaedon2
[19:26:10] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 250 seconds)
[19:26:20] *** Joins: AUTRaedon (~AUTRaedon@078132096198.public.t-mobile.at)
[19:26:29] *** Quits: Collaken (~flo@ip4d17fdd1.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[19:26:40] *** Parts: AUTRaedon2 (~AUTRaedon@078132096198.public.t-mobile.at) (Leaving)
[19:26:44] *** Quits: AUTRaedon (~AUTRaedon@078132096198.public.t-mobile.at) (Client Quit)
[19:26:59] *** Joins: AUTRaedon (~AUTRaedon@078132096198.public.t-mobile.at)
[19:27:05] *** Joins: AUTRaedon2 (~AUTRaedon@078132096198.public.t-mobile.at)
[19:27:25] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[19:27:50] *** Joins: damonlynch_ (~ngaio@static-68-235-44-27.cust.tzulo.com)
[19:27:53] *** Joins: Pharyngeal (~Pharynx@larynx.ventricle.us)
[19:27:54] *** Parts: AUTRaedon2 (~AUTRaedon@078132096198.public.t-mobile.at) ()
[19:28:03] *** Quits: AUTRaedon (~AUTRaedon@078132096198.public.t-mobile.at) (Client Quit)
[19:28:29] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca)
[19:28:44] *** Joins: AUTRaedon (~AUTRaedon@078132096198.public.t-mobile.at)
[19:29:04] *** Joins: amaenli9 (~amaenli@aries.uberspace.de)
[19:29:04] *** Joins: tortal (~tortal@user/tortal)
[19:29:35] <tortal> im looking for wsl chat.. anyone knows where to find? the one here is ... sparse..
[19:29:37] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[19:30:15] *** Quits: damonlynch (~ngaio@static-68-235-44-27.cust.tzulo.com) (Ping timeout: 256 seconds)
[19:30:29] *** Joins: csm3105 (~csm3105@static-107-54-230-77.ipcom.comunitel.net)
[19:30:42] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[19:30:44] *** Quits: csm3105 (~csm3105@static-107-54-230-77.ipcom.comunitel.net) (Client Quit)
[19:31:23] <Tritium> I dont think there is an official chat for windows components beyond the windows support forums (...which is a thing...), if thats what you are looking for
[19:31:28] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[19:31:29] *** Joins: mattfoxxx (~mattfoxxx@200116b822f64600313c690792be07b4.dip.versatel-1u1.de)
[19:31:32] *** Quits: amaenli (~amaenli@aries.uberspace.de) (Ping timeout: 240 seconds)
[19:31:32] *** amaenli9 is now known as amaenli
[19:33:29] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[19:33:44] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[19:33:48] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[19:33:49] *** Joins: Hackerpcs (~user@user/hackerpcs)
[19:34:03] *** Quits: Hackerpcs (~user@user/hackerpcs) (Max SendQ exceeded)
[19:34:09] *** Joins: teut (~teut@122.161.86.14)
[19:34:57] <teut> https://godbolt.org/z/cMrzzzE6T
[19:35:07] *** Joins: Guest37 (~Guest37@47.54.179.251)
[19:35:08] <teut> how does this code work?
[19:35:15] <Guest37> hi
[19:35:25] <teut> We didnt pass self in def id():
[19:36:12] <nedbat> teut: you aren't calling id() at all.  __init__ overwrote it with an attribute
[19:36:12] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[19:36:15] <Tritium> teut: on initialization of the first instance you are replacing id with 555
[19:36:15] *** Quits: mattfoxxx (~mattfoxxx@200116b822f64600313c690792be07b4.dip.versatel-1u1.de) (Ping timeout: 256 seconds)
[19:36:15] <grawity> 1) your `def id()` doesn't reference self anyway
[19:36:16] <nedbat> Guest37: hi, what's up?
[19:36:30] <grawity> 2) your `def id()` gets completely overwritten in __init__
[19:37:17] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[19:37:34] <Guest37> any one experienced with flask. i have a route that accepts posts request containing json data. route returns more json as a response. when i trigger the request in my browser i get a CORS error in the console saying I didnt have the Access-Control-Allow-Origin response header set. so I get this manully still doesnt work, also followed tutorials
[19:37:35] <Guest37> and docs to implement flask_cors which had no effect same error
[19:37:49] <teut> id =555  is done locally
[19:38:51] <Guest37> all i want is to make POST request from browser to flask and get JSON as response, but my browser keeps giving error on request with CORS access-control-allow-origin
[19:39:06] <Tritium> teut: replacing is probably the wrong word, shadowing is more accurate
[19:39:06] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[19:39:15] *** Joins: Bakunin (~maplefing@user/lindis)
[19:40:08] <teut> acc = Acc(111)    this line of code , creates the object, and instantiates it
[19:40:34] <teut> acc.id  is first initialised to 111
[19:40:39] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 250 seconds)
[19:40:54] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 250 seconds)
[19:40:59] <teut> ok so that overwrites
[19:41:11] *** Joins: lazy1 (~tebeka@2a10:8009:ab8f:0:ba45:6e30:a06b:b6d9)
[19:41:38] <teut> but why don't we get a compiler error since we didnt pass anything in def id()?
[19:41:44] *** Joins: kts (~kts@103.73.237.209)
[19:41:54] *** Joins: Guest2071 (~Guest20@ec2-18-192-137-41.eu-central-1.compute.amazonaws.com)
[19:42:03] <grawity> because it's not a compilation error -- it would be a runtime error *if id() got called*
[19:42:06] <Tritium> because its not an error then
[19:42:08] *** Joins: jaggz (~jaggz@user/jaggz)
[19:42:10] <grawity> it doesn't get called though
[19:42:29] *** Joins: luigibu (~luigi@93.176.155.54)
[19:42:29] <grawity> so the mismatching parameter count is not noticed
[19:42:30] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[19:43:08] <teut> https://godbolt.org/z/WEhMhPd8e  understood
[19:43:33] <teut> so the compiler is not made to check that if self is present or not
[19:43:33] <jaggz> how do I specify the latest version of a package that meets all other requirements?  I had torchvision==0.8.2  and that didn't meet the minimum req of another dependency, so I put >=0.8.2 and then pip started downloading a whole bunch of versions (0.11.2, 0.11.1, 0.11.0 .. etc.)
[19:43:52] <jaggz> and how do I delete those cached versions :)
[19:44:30] <nedbat> jaggz: did it download them, or just list them?
[19:44:37] <jaggz> nedbat, downloaded
[19:44:40] *** Quits: lazy1 (~tebeka@2a10:8009:ab8f:0:ba45:6e30:a06b:b6d9) (Client Quit)
[19:44:41] <jaggz> I ctrl-c'ed it
[19:44:48] <jaggz> after 3 of them :)
[19:44:50] <nedbat> jaggz: can you pastebin the terminal session?
[19:44:58] *** Joins: paul424 (~tom@ip-5-172-235-243.multi.internet.cyfrowypolsat.pl)
[19:45:02] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Read error: Connection reset by peer)
[19:45:35] <Tritium> teut: because of how dynamic python is, its entirely valid (though a really bad idea) to define functions inside class bodies, and later pull them off - to use a class body as a namespace.  Its valid and legal.  its a bad idea, use a module for that, but the compiler wont stop you
[19:45:40] *** Joins: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net)
[19:45:52] <jaggz> (ooh.. my ~/.cache/pip is 16gb...)
[19:46:03] <Guest37> no one knows about flask and CORS request??
[19:46:03] <jaggz> nedbat, would have to run it again, probably scrollback overwritten
[19:46:07] <teut> this is a test question which was asked in screening test of a company
[19:46:23] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[19:46:31] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[19:46:52] <jaggz> okay got it
[19:47:05] <dsc_> Guest37: my webserver usually inserts that response header if neccesary
[19:47:13] <dsc_> Guest37: but this smells like a ABC problem
[19:47:24] <Guest37> i looked at everything on google and stack overflow
[19:47:25] <dsc_> or whats it called when you're trying to solve problem B but you actually have problem A
[19:47:29] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[19:47:33] *** Joins: imp (~imp@138.255.144.233)
[19:47:43] <jaggz> nedbat, https://paste.debian.net/1229795/
[19:47:43] <Tritium> dsc_: thats traditionally the X-Y problem
[19:47:49] <dsc_> Tritium: right.
[19:48:01] <dsc_> X-Y problem is when you call it the ABC problem
[19:48:11] <dsc_> Guest37: try: `resp.headers['Access-Control-Allow-Origin'] = '*'`
[19:48:37] *** Quits: LiftLeft (~LiftLeft@187.170.244.154) (Ping timeout: 240 seconds)
[19:48:40] <Guest37> ok i tried that before and headers.add
[19:48:42] <dsc_> or `response` instead of `resp`
[19:48:46] <Guest37> i'll try this one now with this version
[19:49:00] <Guest37> well response is the var for my response
[19:49:18] *** Quits: doko (~doko@2a02:8106:1a:7600:8422:dca1:594e:8573) (Ping timeout: 268 seconds)
[19:49:44] <Guest37> didnt make a difference
[19:49:49] <Guest37> this is what it looks like in my console
[19:50:15] <dsc_> Guest37: on what interface does flask bind and what URL do you use in your browser?
[19:50:25] <Guest37> localhost:5000
[19:50:44] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[19:50:57] *** Joins: pycurious (~Adium@user/pycurious)
[19:51:27] <dsc_> Guest37: I dont recommend this, but try https://paste.centos.org/view/raw/32a0e6f6 and call it a day
[19:51:35] <dsc_> just so you can continue your javascript efforts
[19:51:43] <jaggz> nedbat, in the last run, I'd set torchvision to have no version specifier (hoping for some "max version that meets requirements", but it still went ahead and tries getting all those versions (using already cached as well, as you can see)
[19:52:22] *** Quits: bluedust (~bluedust@117.217.146.23) (Remote host closed the connection)
[19:52:28] <nedbat> jaggz: hmm, i haven't seen that behavior before. i wonder if torchvision is packaged in a way that hides its metadata?
[19:52:37] <Guest37> first request in console is of method "OPTIONS" to /api/route and it says "CORS Missing Allow Origin" 0 bytes, second request is the request from my javascript, dont know where the first options one came from. the second request is POST request to /api/route and says NS_ERROR_DOM_BAD_URI
[19:52:46] <Guest37> looking at link now
[19:53:27] *** Joins: vurr (~seymon@82.131.10.22.cable.starman.ee)
[19:53:36] *** Joins: sokan_ (~sokan@2a02:587:9e08:7700:227:eff:fe16:865d)
[19:53:43] <dsc_> Guest37: probably best to make a stack overflow post with minimal example, this channel is generally for specific python problems/questions
[19:53:44] <holgersson> Hi, I have a meta question: If I read and write a bytestring (or byte array, e.g. b'\x00') encoding doesn't bother me at all, right?
[19:53:44] <holgersson> From my understanding all of the encoding trouble would be at least one layer higher when I really look only on the raw bytes.
[19:53:58] <Guest37> the link didnt make a difference, doesnt make sense i have tried all the solutions
[19:54:13] <dsc_> maybe they can help in #pallets
[19:54:17] *** Quits: sokan (~sokan@athedsl-304416.home.otenet.gr) (Ping timeout: 240 seconds)
[19:54:17] *** sokan_ is now known as sokan
[19:54:19] <dsc_> or however that channel is called
[19:54:20] <Guest37> whats #pallets
[19:54:51] <dsc_> #pocoo
[19:54:54] <nedbat> holgersson: right, bytes are bytes. no encoding is used.
[19:55:13] <holgersson> nedbat: thanks for that confirmation!
[19:55:16] <Tritium> holgersson: encoding only becomes an issue when you want to treat bytes like text
[19:55:25] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[19:56:14] <holgersson> Tritium: Thanks aswell, that's what I'd expect - I wonder if I could break encodings when splitting bytes though
[19:56:16] *** Quits: Omega037 (~Omega037@047-233-057-109.res.spectrum.com) ()
[19:56:38] *** Joins: AndreYuhai (~AndreYuha@095160159111.dynamic-2-waw-k-4-3-0.vectranet.pl)
[19:56:51] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[19:56:58] <jaggz> nedbat, frustrating.. :)  I'm manually trying different versions to try to get stuff to match
[19:57:02] <Tritium> holgersson: if you have bytes that represent text, and you manipulate the bytes, that very well could invalidate them
[19:57:06] *** Quits: luigibu (~luigi@93.176.155.54) (Quit: WeeChat 3.4)
[19:57:39] <holgersson> Tritium: err, yes, ofc :)
[19:57:50] <jaggz> $cat ~/bin/pip-show-pkg-versions  -->  pip install "$1"== --use-deprecated=legacy-resolver
[19:58:01] *** Quits: zen_coder (~zen_coder@ip5f5bd744.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[19:58:11] *** Joins: pycurious (~Adium@user/pycurious)
[19:58:19] *** Joins: avane_ (~avane@fsf/member/avane)
[19:58:34] *** Parts: AndreYuhai (~AndreYuha@095160159111.dynamic-2-waw-k-4-3-0.vectranet.pl) ()
[19:58:55] *** Quits: avane (~avane@fsf/member/avane) (Ping timeout: 256 seconds)
[19:59:17] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[19:59:42] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[20:00:29] *** Quits: AUTRaedon (~AUTRaedon@078132096198.public.t-mobile.at) (Quit: Leaving)
[20:00:40] *** Joins: bluedust (~bluedust@117.217.146.23)
[20:01:44] *** Joins: sokan_ (~sokan@85.73.225.30)
[20:02:02] *** Quits: sokan (~sokan@2a02:587:9e08:7700:227:eff:fe16:865d) (Ping timeout: 252 seconds)
[20:02:08] *** sokan_ is now known as sokan
[20:02:33] *** Quits: widp (~user@124.123.107.54) (Ping timeout: 256 seconds)
[20:02:52] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[20:02:53] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[20:03:41] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[20:05:03] *** Quits: rev1nchn (~rev1nchn@user/rev1nchn) (Ping timeout: 256 seconds)
[20:05:42] *** Joins: luva5 (~luva@146.70.62.246)
[20:06:29] *** Joins: Vonter (~Vonter@user/vonter)
[20:06:59] *** Quits: luva (~luva@146.70.62.252) (Ping timeout: 252 seconds)
[20:07:39] *** Quits: Guest37 (~Guest37@47.54.179.251) (Quit: Client closed)
[20:07:51] *** Joins: magla (~gelignite@55d4c694.access.ecotel.net)
[20:07:57] *** Quits: Guest2071 (~Guest20@ec2-18-192-137-41.eu-central-1.compute.amazonaws.com) (Quit: Client closed)
[20:08:48] *** Quits: dtg01100 (~dtg01100@199.21.141.37) (Quit: Leaving)
[20:09:48] *** Quits: Bakunin (~maplefing@user/lindis) (Remote host closed the connection)
[20:10:09] *** Quits: luva5 (~luva@146.70.62.246) (Ping timeout: 256 seconds)
[20:11:05] *** Joins: arinov (~arinov@77.67.137.202)
[20:11:09] *** Joins: jrksrjn (~jrksrjn@2a02:810d:4bc0:2120:95e5:df49:6202:3cf9)
[20:11:50] *** Joins: badsektor (~badsektor@user/badsektor)
[20:16:36] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[20:17:43] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[20:18:35] *** Joins: zebrag (~chris@user/zebrag)
[20:19:01] *** Joins: Bakunin (~maplefing@user/lindis)
[20:20:20] *** Joins: luva5 (~luva@185.168.9.241)
[20:20:21] *** Quits: tortal (~tortal@user/tortal) (Ping timeout: 256 seconds)
[20:20:42] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:20:46] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 245 seconds)
[20:23:03] *** Quits: badsektor (~badsektor@user/badsektor) (Quit: Leaving)
[20:23:29] *** Joins: slav0nic (slav0nic@python.su)
[20:24:26] *** Joins: c4017w__ (~c4017@209.52.68.8)
[20:24:39] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 256 seconds)
[20:24:53] *** Joins: widp (~user@124.123.107.54)
[20:25:22] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[20:26:07] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[20:26:32] *** Joins: luva51 (~luva@146.70.62.252)
[20:27:12] *** Joins: white_shadow (~white_sha@user/white-shadow/x-1132694)
[20:28:03] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[20:28:19] *** Joins: bluedust_ (~bluedust@59.99.182.45)
[20:28:59] *** Quits: bluedust (~bluedust@117.217.146.23) (Ping timeout: 250 seconds)
[20:29:59] *** Quits: luva5 (~luva@185.168.9.241) (Ping timeout: 256 seconds)
[20:29:59] *** luva51 is now known as luva5
[20:30:34] *** Quits: teut (~teut@122.161.86.14) (Quit: Client closed)
[20:30:57] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.4)
[20:31:17] *** Joins: white_pie (~white_sha@user/white-shadow/x-1132694)
[20:31:40] *** Quits: XV8 (~XV8@2601:5cb:c001:50:ac6c:2622:9107:8299) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:31:42] *** Joins: driib2 (~driib@185.65.135.253)
[20:31:52] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[20:32:16] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[20:35:33] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[20:37:54] *** Quits: idiocrash (~textual@216.73.163.28) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:38:53] *** Joins: doko (~doko@p200300cadf308600fc188627727707c8.dip0.t-ipconnect.de)
[20:39:44] *** Joins: lxwulf (~lxwulf@user/lxwulf)
[20:39:57] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca) (Ping timeout: 256 seconds)
[20:40:17] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 240 seconds)
[20:40:25] *** Parts: lxwulf (~lxwulf@user/lxwulf) ()
[20:40:44] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[20:41:10] *** Quits: derelict (derelict@user/derelict) (Quit: bye)
[20:41:18] <jaggz> after a pip install's compile failed I noticed I had some old conda/miniconda stuff set in my env.  I removed those (and started a new shell), but pip is still finding/using them https://paste.debian.net/1229801/ )
[20:41:20] *** Quits: nomic (~nomic@185.217.117.244) (Quit: Leaving)
[20:41:44] *** Joins: derelict (derelict@user/derelict)
[20:42:04] *** Quits: white_pie (~white_sha@user/white-shadow/x-1132694) (Quit: Leaving)
[20:42:04] *** Quits: white_shadow (~white_sha@user/white-shadow/x-1132694) (Quit: Leaving)
[20:42:16] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[20:42:18] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[20:42:46] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[20:43:14] *** Joins: nomic (~nomic@185.192.69.148)
[20:43:26] *** luva5 is now known as luva
[20:44:26] *** Joins: XV8 (~XV8@2601:5cb:c001:50:55bf:899a:1885:9527)
[20:45:03] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[20:45:39] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8) (Ping timeout: 250 seconds)
[20:46:02] *** Quits: MJ (~mjpieters@zopatista.plus.com) (Ping timeout: 240 seconds)
[20:47:29] *** Joins: rev1nchn (~rev1nchn@user/rev1nchn)
[20:48:16] *** Joins: MJ (~mjpieters@zopatista.plus.com)
[20:49:00] *** Joins: dez (uid92154@user/dez)
[20:49:46] *** beco is now known as drbeco
[20:50:23] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[20:51:06] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[20:51:59] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[20:52:29] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[20:52:59] *** Quits: rev1nchn (~rev1nchn@user/rev1nchn) (Ping timeout: 256 seconds)
[20:53:51] *** Joins: cuz` (~user@23-30-167-57-static.hfc.comcastbusiness.net)
[20:53:51] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[20:53:51] *** Joins: j0ma (~jonne@static-198-54-135-78.cust.tzulo.com)
[20:54:08] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Ping timeout: 250 seconds)
[20:55:10] *** Quits: tesuji (~quassel@2a02:908:180:9500:993a:fb3a:aa2a:c479) (Ping timeout: 260 seconds)
[20:55:30] *** Joins: Guest26 (~Guest26@cpe-70-124-180-38.austin.res.rr.com)
[20:55:38] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 260 seconds)
[20:56:11] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[20:56:21] *** Parts: Guest26 (~Guest26@cpe-70-124-180-38.austin.res.rr.com) ()
[20:56:55] *** Quits: nomic (~nomic@185.192.69.148) (Quit: Leaving)
[20:59:09] *** Joins: kristijonas_ (~kristijon@78-56-32-39.static.zebra.lt)
[20:59:39] *** Joins: Guest3 (~Guest3@106.51.143.241)
[21:00:41] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Ping timeout: 256 seconds)
[21:01:01] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[21:01:49] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[21:02:45] *** Joins: dgdg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222)
[21:03:08] *** Joins: fubbe (~bubbe@151.41.4.108)
[21:03:10] <jaggz> shoot.. I don't know how to get pip to stop using that miniconda
[21:03:11] *** Quits: arinov (~arinov@77.67.137.202) (Ping timeout: 256 seconds)
[21:03:23] *** Parts: fubbe (~bubbe@151.41.4.108) ()
[21:04:48] <grym> jaggz: `which pip`
[21:05:23] *** Quits: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222) (Ping timeout: 250 seconds)
[21:05:32] *** Joins: fef (~thedawn@user/thedawn)
[21:05:41] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[21:05:52] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[21:06:22] *** Joins: skogarmaor (~Srain@64.184.2.236)
[21:06:55] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[21:08:03] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 256 seconds)
[21:09:56] *** Joins: thorbw (~tw@46.230.130.50)
[21:11:30] *** Joins: SOMBRIO (~SOMBRIO@177.137.113.66)
[21:11:55] *** Quits: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net) (Quit: WeeChat 3.4)
[21:13:33] *** Joins: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net)
[21:13:34] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[21:14:21] *** Quits: paul424 (~tom@ip-5-172-235-243.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[21:15:05] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 256 seconds)
[21:15:12] *** Quits: rsx (~dummy@ppp-188-174-153-123.dynamic.mnet-online.de) (Quit: rsx)
[21:15:14] *** Joins: paul424 (~tom@ip-5-172-235-243.multi.internet.cyfrowypolsat.pl)
[21:15:20] *** Joins: Enissay (~Enissay@user/enissay)
[21:15:50] *** Joins: cliluw (~cliluw@47.147.73.223)
[21:16:46] <Enissay> `' '.join(cursor.execute('SELECT name FROM mydb LIMIT 10'))` I am using sqlite3 on python38 and trying to combine many rows returned as 1 string... I want to do it in python no using sqlite, but my attempt is failing
[21:18:32] *** Joins: andreasbuhr (~quassel@p5dcf9a19.dip0.t-ipconnect.de)
[21:18:32] *** Quits: andreasbuhr (~quassel@p5dcf9a19.dip0.t-ipconnect.de) (Client Quit)
[21:18:41] <Enissay> Error: `TypeError: sequence item 0: expected str instance, tuple found`
[21:19:37] *** Quits: bytehackr (~Sandipan@45.249.73.155) (Ping timeout: 240 seconds)
[21:21:13] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[21:23:16] *** XV8 is now known as XV8_Away
[21:23:33] <grym> Enissay: select always returns a tuple of strings
[21:23:46] <grym> so maybe *cursor.execute ?
[21:24:27] *** Joins: rev1nchn (~rev1nchn@user/rev1nchn)
[21:24:27] *** Quits: kilitary (~kilitary@188.242.105.134) (Read error: Connection reset by peer)
[21:24:55] *** Joins: c4017w_ (~c4017@209.52.68.8)
[21:24:57] *** Quits: emf (~emf@163.114.132.4) (Ping timeout: 240 seconds)
[21:25:13] *** Gustavo6046_ is now known as Gustavo6046
[21:25:29] *** Joins: nuclearg1 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net)
[21:25:32] *** Joins: bloody (~bloody@user/bloody)
[21:25:39] *** Quits: nuclearg1 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Changing host)
[21:25:39] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[21:26:37] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Client Quit)
[21:26:40] *** XV8_Away is now known as XV8
[21:26:59] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[21:27:09] *** XV8 is now known as XV8_Away
[21:27:13] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[21:27:31] *** Joins: emf (~emf@2620:10d:c090:400::5:ab3f)
[21:28:15] *** XV8_Away is now known as XV8
[21:28:21] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[21:29:13] *** Quits: rev1nchn (~rev1nchn@user/rev1nchn) (Ping timeout: 250 seconds)
[21:29:32] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[21:30:16] <aphysically> \o/ I made my first meaningful cpython code review
[21:30:26] *** Joins: zeev (~zeev@147.161.9.150)
[21:30:37] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 240 seconds)
[21:31:11] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[21:31:17] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[21:31:23] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 250 seconds)
[21:32:59] *** Quits: doko (~doko@p200300cadf308600fc188627727707c8.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[21:33:11] *** Quits: zeev (~zeev@147.161.9.150) (Client Quit)
[21:33:16] *** Joins: fikran (~fikran@user/fikran)
[21:33:36] *** Joins: zeev (~zeev@147.161.9.150)
[21:34:21] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 256 seconds)
[21:34:30] <Enissay> grym: Darn, it was a list of tuples... I had to turn it into a simple list, then join... not sure if that is the optimal way doing it.... `' '.join([i for sub in cur.execute(select_query).fetchall() for i in sub])`
[21:34:42] *** Joins: msek_ (~Username@pd9fb27bb.dip0.t-ipconnect.de)
[21:35:44] <grym> Enissay: ah, yes, that looks right.  you can itertools.chain.from_iterable if you like, but it's much the same
[21:36:38] *** Quits: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[21:36:41] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[21:36:52] *** Quits: cuz` (~user@23-30-167-57-static.hfc.comcastbusiness.net) (Read error: Connection reset by peer)
[21:37:33] *** Quits: pankid (~quassel@pankid.club) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:37:53] *** Joins: pankid (~quassel@pankid.club)
[21:38:31] *** Joins: Guest223 (~Guest223@cpe-70-124-180-38.austin.res.rr.com)
[21:39:57] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 240 seconds)
[21:40:13] *** Joins: doko (~doko@p200300cadf308600a5c85ae5cd6652ae.dip0.t-ipconnect.de)
[21:40:40] <p-i-> How could I regexp the words out of `(foo, bar, quux)` whene I don't know how many entries there will be?
[21:45:30] *** Joins: sgen (~sgen@2607:fea8:7ce1:c8e0:3caf:1512:480a:ea92)
[21:45:37] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[21:47:51] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:48:07] *** Joins: arinov (~arinov@213.194.126.155)
[21:48:20] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[21:49:17] <p-i-> (\w+) seems to do it
[21:49:39] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[21:49:59] *** Quits: duuude (~user@user/duuude) (Ping timeout: 256 seconds)
[21:51:29] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 252 seconds)
[21:51:47] *** Joins: kilitary (~kilitary@188.242.105.134)
[21:52:25] *** Joins: zmt00 (~zmt00@user/zmt00)
[21:52:34] *** Quits: kts (~kts@103.73.237.209) (Quit: Konversation terminated!)
[21:53:16] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 245 seconds)
[21:53:17] *** Joins: kts (~kts@103.73.237.209)
[21:53:35] *** Joins: dme86 (~dan@user/dan86)
[21:54:11] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:54:56] *** Quits: XV8 (~XV8@2601:5cb:c001:50:55bf:899a:1885:9527) (Quit: Textual IRC Client: www.textualapp.com)
[21:55:45] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[21:56:39] *** Quits: Guest223 (~Guest223@cpe-70-124-180-38.austin.res.rr.com) (Remote host closed the connection)
[21:57:49] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[21:58:41] *** Quits: msek_ (~Username@pd9fb27bb.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[21:58:43] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 256 seconds)
[21:59:28] *** Joins: cliluw (~cliluw@47.147.73.223)
[21:59:31] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[21:59:49] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[22:00:06] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Remote host closed the connection)
[22:00:11] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[22:00:41] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[22:00:59] *** Quits: KeiraT (~k@lulzsec.co.uk) (Ping timeout: 256 seconds)
[22:01:15] *** Joins: FluffyMask (~masque@user/fluffymask)
[22:01:33] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[22:02:50] *** Joins: pycurious (~Adium@user/pycurious)
[22:03:16] *** Joins: msek_ (~Username@pd9fb27bb.dip0.t-ipconnect.de)
[22:04:16] *** Quits: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net) (Quit: Konversation terminated!)
[22:04:59] <aphysically> jinsun: in case you wondered how literally insane the typing.py implementation is https://github.com/python/cpython/pull/31159#discussion_r800212589
[22:06:12] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[22:06:19] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[22:07:35] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[22:10:01] *** Joins: Guest988 (~Guest988@cpe-70-124-180-38.austin.res.rr.com)
[22:10:44] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 252 seconds)
[22:11:11] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[22:11:25] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[22:12:33] *** Quits: Guest988 (~Guest988@cpe-70-124-180-38.austin.res.rr.com) (Remote host closed the connection)
[22:13:35] *** Joins: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de)
[22:14:03] *** Quits: pycode1 (~pycode3@2001:b07:5d28:551:33de:7952:8196:1203) (Ping timeout: 250 seconds)
[22:14:10] *** Joins: dme86 (~dan@user/dan86)
[22:15:47] *** Joins: macbook (~macbook@cpc101496-gill19-2-0-cust142.20-1.cable.virginm.net)
[22:17:07] *** macbook is now known as toadtoad
[22:18:14] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[22:19:07] *** Joins: Guest498 (~Guest498@cpe-70-124-180-38.austin.res.rr.com)
[22:19:33] <p-i-> How come ^Direction:(\w)$ isn't fetching UP for 'foo\nDirection: ⬆️**UP**\nbar'?  https://regex101.com/r/INjWAQ/1
[22:20:19] *** Joins: grandrew (~grandrew@2600:1700:42f3:9180:f22f:74ff:feac:90a3)
[22:21:15] <grawity> neither space nor ⬆️ nor * are "word" \w characters
[22:21:27] <grawity> also there's more than one of them
[22:21:55] <grawity> ^Direction:\W*(\w+)\W*$ is what you probably want
[22:21:57] *** Quits: skogarmaor (~Srain@64.184.2.236) (Ping timeout: 240 seconds)
[22:22:17] *** Joins: sawk (~quassel@151.81.119.74)
[22:22:17] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:45a:7474:23a9:c2d1) (Quit: pvergain)
[22:22:24] *** Quits: imp (~imp@138.255.144.233) (Quit: imp)
[22:22:39] *** Quits: magla (~gelignite@55d4c694.access.ecotel.net) (Read error: Connection reset by peer)
[22:22:40] <p-i-> Thanks! Was stuck there.
[22:22:52] *** Quits: vurr (~seymon@82.131.10.22.cable.starman.ee) (Remote host closed the connection)
[22:22:57] *** Joins: magla (~gelignite@55d4c694.access.ecotel.net)
[22:23:04] <p-i-> What I'm struggling with is this: https://regex101.com/r/0tYhSv/1
[22:23:30] <p-i-> Just (\w+) was sufficient to get the words out of '(foo, bar, quux)'
[22:23:47] <p-i-> I didn't have to worry about negating the non-word characters
[22:24:02] <p-i-> So I couldn't (and still can't) figure out why that one worked, but this one didn't
[22:24:10] *** Joins: KombuchaKip (~kip@192.252.230.5)
[22:24:39] <grawity> when the regex is just (\w+) alone, it can start anywhere in the line, end anywhere in the line
[22:24:55] <jrksrjn> yes, those were three separate matches
[22:25:10] <grawity> you don't have to explicitly skip characters before the entire regex
[22:25:12] *** Joins: Betal (~Betal@user/betal)
[22:25:26] *** Joins: c4017w__ (~c4017@209.52.68.8)
[22:25:58] <grawity> but with Direction etc, the characters being skipped are in the *middle* of a regex
[22:26:21] <grawity> and the whole regex has to match exactly; once the match starts (say, because the word "Direction:" matched) there's no auto-skip
[22:27:31] <jrksrjn> if you wanted to get 'foo, bar, quux' (with commas) as a single match (and in re, a single Match object when returned by `pattern.match()`), you could use something like this: \(([\w,\s]+)\)
[22:28:03] <jrksrjn> correction: actually you would also get the parentheses, but the first group would be just the words
[22:28:10] *** Quits: someuser (~user@197.54.43.98) (Ping timeout: 250 seconds)
[22:28:48] <grawity> p-i-: e.g. https://regex101.com/r/QPJAF7/1
[22:29:01] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[22:29:01] *** Joins: df00z81 (~df00z@rrcs-50-75-26-170.nys.biz.rr.com)
[22:29:20] <p-i-> re.findall(r'^Direction:\W*(\w+)\W*$', c, re.M)[0] gets it, also re.search(r'^Direction:\W*(\w+)\W*$', c, re.M)[1]
[22:29:23] *** df00z81 is now known as df00z
[22:29:28] <p-i-> Is there a reason to prefer one over t'other?
[22:29:49] <p-i-> findall and search seem to do the same thing... ish
[22:30:34] <jrksrjn> search() returns a single Match object if a match exists, findall() returns a list
[22:30:45] <jrksrjn> so it depends on your use case
[22:31:35] <jrksrjn> (and the findall() list is of strings or tuples, not Match objects)
[22:33:17] *** Quits: opaca_lux (~opaca_lux@185.169.233.141) (Ping timeout: 256 seconds)
[22:33:19] *** Alabama[m] is now known as TransitusFluvii
[22:34:53] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[22:35:06] *** Joins: arinov_ (~arinov@213.194.126.155)
[22:36:17] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[22:36:26] *** Quits: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[22:39:00] *** Quits: doko (~doko@p200300cadf308600a5c85ae5cd6652ae.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[22:39:01] *** Joins: pycurious (~Adium@user/pycurious)
[22:41:03] *** Quits: thorbw (~tw@46.230.130.50) (Read error: Connection reset by peer)
[22:41:39] *** Joins: crashrep (~crashrep@user/crashrep)
[22:42:11] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8)
[22:42:52] *** Joins: ijaz (ijaz@2a01:4f8:141:1272::2)
[22:44:24] *** Joins: Abdullah_ (~ak@user/abdullah)
[22:44:49] *** Quits: Abdullah_ (~ak@user/abdullah) (Client Quit)
[22:44:52] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Read error: Connection reset by peer)
[22:45:04] *** Quits: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:10] *** Joins: l4yer (~l4yer@2001:ac8:31:8900:1011:59fd:b6e1:4ba0)
[22:45:12] *** Quits: yte3 (~0@151.31.101.47) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:46:23] <p-i-> pity there isn't an \f to handle numbers with decimal points
[22:46:38] <p-i-> or \E to handle scientific notation
[22:46:54] *** Joins: nomic (~nomic@185.192.69.148)
[22:47:06] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[22:47:11] *** Joins: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com)
[22:47:41] *** Quits: Kruppt (~Kruppt@50-111-52-16.drhm.nc.frontiernet.net) (Quit: Leaving)
[22:48:20] <jrksrjn> i love regex. regex is like duct tape. not a great solution for all problems in life, but with a little creativity an adequate solution for most of them
[22:48:44] <p-i-> I'm just about over the hill now
[22:49:10] <p-i-> I understand just about enough of the fundamentals to get stuff done with it
[22:49:15] <p-i-> still get super-stuck sometimes tho
[22:49:42] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[22:50:09] <p-i-> How about `RANGE\D+(\d*.?\d*)\D+(\d*.\d*)` for 'RANGE : 62.8 - 6.62'?
[22:50:15] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[22:50:15] <p-i-> It's a bit of a clusterfuck
[22:50:38] <p-i-> Can I pick up those 2 floats with one pattern?
[22:51:04] <p-i-> nesting parens or something
[22:52:34] <jrksrjn> so you want a single group with both numbers in it?
[22:52:58] *** Quits: rajkosto (~rajkosto@93-86-127-103.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[22:53:06] *** Joins: melodie (~melodie@user/melodie)
[22:53:41] *** Quits: pro_z_ (~pro_z@37.214.69.56) (Ping timeout: 256 seconds)
[22:53:43] *** Parts: melodie (~melodie@user/melodie) (Leaving)
[22:53:48] <grawity> p-i-: I'd start with r"^RANGE : ([0-9.]+) - ([0-9.]+)"
[22:53:56] *** Joins: Celeo (~Celeo@user/celeo)
[22:54:03] <grawity> then if there's some variance in whitespace, tweak to accept it
[22:54:03] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[22:55:53] *** Joins: gossie (~gossie@2001:1c02:11e:c700:4a28:456f:cfe0:5c8e)
[22:56:12] *** Joins: tortal (~tortal@217-215-62-17-no247.tbcn.telia.com)
[22:57:24] <jrksrjn> +1 to that solution if you expect the input to always conform to that pattern
[22:58:19] <p-i-> I have to be careful... the creator of these signals is clearly doing it by hand
[22:58:24] <p-i-> All sorts of inconsistencies
[22:59:01] <jrksrjn> yes, in that case 'clusterfuck' would be an appropriate description of the regex you will be using
[22:59:41] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 256 seconds)
[22:59:54] <p-i-> (OTE: 636.1) ... OTE\D(\d*.?\d*) isn't picking up the stuff past the decimal point (which I made optional)
[23:00:32] <p-i-> https://regex101.com/r/pKBaHy/1
[23:00:43] *** Quits: Guest498 (~Guest498@cpe-70-124-180-38.austin.res.rr.com) (Remote host closed the connection)
[23:00:59] *** Joins: Guest302 (~Guest302@cpe-70-124-180-38.austin.res.rr.com)
[23:01:02] *** Quits: Guest302 (~Guest302@cpe-70-124-180-38.austin.res.rr.com) (Remote host closed the connection)
[23:01:15] <jrksrjn> try adding a whitespace character and escaping the decimal point: OTE\D(\s\d*\.?\d*)
[23:01:31] <jrksrjn> correction: OTE\D\s(\d*\.?\d*)
[23:01:38] <jrksrjn> you don't want to capture the whitespace in the group
[23:01:49] *** Joins: Guest437 (~Guest437@cpe-70-124-180-38.austin.res.rr.com)
[23:02:05] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[23:02:12] <grawity> OTE:\s*([0-9.]+)
[23:02:39] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[23:04:01] *** Quits: schumaml (~schumaml@p200300e2ef02330053c1821a43d17d29.dip0.t-ipconnect.de) (Quit: WeeChat 3.4)
[23:07:35] <p-i-> odd.. works in 101 but not in PYthon
[23:07:54] <p-i-> `OTE = re.findall(r'OTE:\s*([0-9.]+)', re.M)[0]`
[23:08:05] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Ping timeout: 256 seconds)
[23:08:28] <evidlo> is there a way to do a regex alternation without creating a group?
[23:08:43] *** Quits: domicron (~domicron@gateway/tor-sasl/domicron) (Remote host closed the connection)
[23:08:43] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Remote host closed the connection)
[23:08:49] <evidlo> I would normally use a character class, but I want to match beginning of the line ^, which you can't match with a character class
[23:09:47] <evidlo> so far I have: (^|,)[^:]+:
[23:10:23] <p-i-> This is really odd. It matches on 101, but won't execute on my Python
[23:10:26] <p-i-> testcasing now.
[23:10:32] <evidlo> and I want to match the field names + colon in a string like "heading1:foo,heading2:bar,another_field:baz"
[23:10:55] *** Joins: edd_lc (~edd_lc@85.64.225.197.dynamic.barak-online.net)
[23:11:02] <evidlo> this is my test: https://regex101.com/r/0rAaNT/1
[23:11:44] *** Joins: domicron (~domicron@gateway/tor-sasl/domicron)
[23:12:20] <p-i-> ok fixed. I'm getting sleepy. 14h workday.
[23:12:29] <p-i-> Neeeeearly there.
[23:12:29] *** Joins: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com)
[23:12:47] <grawity> evidlo: (?:foo) works like (foo) but without capturing
[23:13:03] *** Quits: Guest437 (~Guest437@cpe-70-124-180-38.austin.res.rr.com) (Remote host closed the connection)
[23:13:19] *** Joins: Guest173 (~Guest173@cpe-70-124-180-38.austin.res.rr.com)
[23:14:53] *** Quits: zeev (~zeev@147.161.9.150) (Ping timeout: 256 seconds)
[23:17:17] *** Joins: doko (~doko@2a02:8106:1a:7600:22a5:1ce8:8623:3577)
[23:20:50] *** Quits: masoudd (~masoudd@user/masoudd) (Quit: Leaving)
[23:20:51] * karlpinc` likes the python regexp because you can actually comment the regexp components
[23:22:46] *** Quits: akk (~akk@75-161-95-245.albq.qwest.net) (Ping timeout: 250 seconds)
[23:22:50] *** karlpinc` is now known as karlpinc
[23:23:40] *** Joins: georgios (~georgios@user/georgios)
[23:25:03] <evidlo> Nice, thanks
[23:25:13] *** Joins: dfkfs (~dfkfs@178.49.152.151)
[23:25:29] *** Joins: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8)
[23:25:56] *** Joins: c4017w_ (~c4017@209.52.68.8)
[23:26:08] <dfkfs> can python do like perl? {}[3]+=1\
[23:26:47] <dfkfs> stupid iso kbd
[23:26:51] <ChrisWarrick> dfkfs: Probably not. What would Perl do with this?
[23:27:01] <evidlo> dfkfs: you can test your regex on regex101.com
[23:27:08] <evidlo> for both Python and Perl
[23:27:12] * ChrisWarrick thinks it ain’t a regex
[23:27:13] <dfkfs> it would result in {3: 1}
[23:27:30] <evidlo> oh, is that not a regex?
[23:27:40] <ChrisWarrick> dfkfs: you might want collections.defaultdict or perhaps collections.Counter
[23:28:28] <evidlo> you can also do x=[0]*N;x[3]+=1
[23:28:35] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 256 seconds)
[23:28:40] <grawity> yeah perl's behavior is mostly like defaultdict(int) or whatever type you happen to need
[23:28:43] <p-i-> If I want to match either foo or bar in 'foo: 42' or 'bar: 42', I think I can use (foo|bar) ... but then it's capturing it
[23:28:52] <grawity> p-i-: (?:foo) works like (foo) but without capturing
[23:29:01] <p-i-> Do I have to take the capture and discard it
[23:29:18] <p-i-> But it's one or the other
[23:29:21] <dfkfs> interesting
[23:29:23] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[23:29:28] *** Joins: pepper (~pepper@user/pepper)
[23:29:28] <ChrisWarrick> p-i-: (?:foo|bar)
[23:29:37] *** Quits: mekhami (~mekhami@2605:a601:aaf2:ef00:1821:5187:fb89:c9c8) (Ping timeout: 240 seconds)
[23:29:46] <p-i-> ChrisWarrick: How does that work?
[23:29:59] <grawity> the same way everything in regexes works
[23:30:11] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[23:30:14] <grawity> (?: ) is literally the syntax for a non-capturing group, nothing more to it
[23:30:14] <evidlo> magic
[23:30:26] <p-i-> fab
[23:30:52] <foo> p-i-: First of all, I'm way older than 42. It's not polite to ask for someone's age.
[23:31:12] <evidlo> but (xxx|yyy) is also an alternation.  sort of overloaded
[23:31:27] *** Joins: sydbarret (~anton@static-186-121-195-75.acelerate.net)
[23:31:30] *** Quits: Guest173 (~Guest173@cpe-70-124-180-38.austin.res.rr.com) (Remote host closed the connection)
[23:31:42] <grawity> the | is alternation, () is just the grouping
[23:31:48] <grawity> e.g. r"foo|bar" would still be an alternation
[23:31:57] *** Quits: edd_lc (~edd_lc@85.64.225.197.dynamic.barak-online.net) (Ping timeout: 240 seconds)
[23:32:01] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[23:32:57] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[23:33:03] *** Joins: hyiltiz (~quassel@31.220.5.250)
[23:33:12] *** Joins: mattfoxxx (~mattfoxxx@200116b822f64600313c690792be07b4.dip.versatel-1u1.de)
[23:33:16] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[23:33:49] <sydbarret> I created a new git branch and upgrade python version there using pipenv. That modified the pipfile and lock files in the new branch. If I switch back to master branch what will happen with the pipfile file there? got overwrite?
[23:33:50] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 260 seconds)
[23:34:57] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[23:35:15] *** Quits: df00z (~df00z@rrcs-50-75-26-170.nys.biz.rr.com) (Quit: Client closed)
[23:35:26] *** Joins: df00z (~df00z@rrcs-50-75-26-170.nys.biz.rr.com)
[23:35:55] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[23:36:06] <ChrisWarrick> sydbarret: the same thing that will happen with any other file managed by git
[23:36:31] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[23:36:38] *** Joins: dante-as (~dante-as@2a02:2f00:3103:ff00:8823:81f2:5607:7960)
[23:36:58] <sydbarret> ChrisWarrick which is?
[23:37:16] <ChrisWarrick> sydbarret: it will revert to the version from master
[23:37:17] *** Quits: tWqaq (~tWqaq@240e:389:5d1c:ff00:6c6a:3aec:6486:7951) (Ping timeout: 240 seconds)
[23:37:26] *** Joins: marcello42 (~mp@p200300dfaf3285016a9099c1cfe042d6.dip0.t-ipconnect.de)
[23:37:30] *** Joins: davor (~davor@user/davor)
[23:37:39] *** Quits: mattfoxxx (~mattfoxxx@200116b822f64600313c690792be07b4.dip.versatel-1u1.de) (Ping timeout: 256 seconds)
[23:37:53] *** Quits: davor_ (~davor@user/davor) (Ping timeout: 256 seconds)
[23:38:06] <sydbarret> ChrisWarrick ok thanks
[23:38:21] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[23:38:26] *** Quits: tortal (~tortal@217-215-62-17-no247.tbcn.telia.com) (Read error: Connection reset by peer)
[23:38:55] <p-i-> Does anyone know an interactive Python pastebin?
[23:40:17] <ChrisWarrick> repl.it? (I’m not a fan of interactive pastebins, just paste the output you’re seeing)
[23:40:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[23:41:42] *** Quits: domicron (~domicron@gateway/tor-sasl/domicron) (Ping timeout: 276 seconds)
[23:41:55] *** Joins: summersault (~summersau@179.221.251.36)
[23:42:05] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[23:42:17] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[23:42:31] *** Joins: Guest984 (~Guest984@cpe-70-124-180-38.austin.res.rr.com)
[23:42:37] *** Joins: fikran (~fikran@user/fikran)
[23:42:54] *** Quits: Guest984 (~Guest984@cpe-70-124-180-38.austin.res.rr.com) (Remote host closed the connection)
[23:43:08] *** Joins: parv (~quass@user/parv)
[23:44:04] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:7b1a:1704:5e87:dff9)
[23:44:39] *** Quits: jrksrjn (~jrksrjn@2a02:810d:4bc0:2120:95e5:df49:6202:3cf9) (Quit: Leaving)
[23:46:00] *** Quits: sydbarret (~anton@static-186-121-195-75.acelerate.net) (Quit: Going offline, see ya! (www.adiirc.com))
[23:46:10] *** Quits: ert (~ert@2001:4b99:1:1:216:3eff:fee5:446f) (Quit: out)
[23:46:17] *** Quits: summersault (~summersau@179.221.251.36) (Ping timeout: 240 seconds)
[23:46:28] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[23:46:47] *** Joins: vivekl (~viveklane@ip-38-34-35-85.fibre.fibrestream.ca)
[23:46:50] *** Quits: vivekl (~viveklane@ip-38-34-35-85.fibre.fibrestream.ca) (Remote host closed the connection)
[23:46:57] *** Joins: Guest438 (~Guest438@cpe-70-124-180-38.austin.res.rr.com)
[23:47:01] *** Quits: df00z (~df00z@rrcs-50-75-26-170.nys.biz.rr.com) (Quit: Client closed)
[23:47:39] *** Joins: nucleargrave (~nucleargr@user/nuclearg1)
[23:48:06] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[23:48:25] *** Quits: zamanf (~dev@user/zamanf) (Ping timeout: 256 seconds)
[23:48:38] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[23:49:13] *** Quits: Guest3 (~Guest3@106.51.143.241) (Ping timeout: 256 seconds)
[23:49:30] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[23:50:15] <dante-as> Is any possibility to have setup.py configured in such a way that I can install the module called "devops" with the following structure of the git repo? https://bpa.st/FORA
[23:50:37] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[23:50:40] *** Joins: vivekl (~viveklane@ip-38-34-35-85.fibre.fibrestream.ca)
[23:50:43] *** Quits: vivekl (~viveklane@ip-38-34-35-85.fibre.fibrestream.ca) (Remote host closed the connection)
[23:50:43] <dante-as> Or do I need devops folder absolutely created in this file structure?
[23:50:47] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:4d74:be9c:8758:8859)
[23:50:59] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[23:51:18] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[23:51:37] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[23:52:03] *** Quits: Guest438 (~Guest438@cpe-70-124-180-38.austin.res.rr.com) (Remote host closed the connection)
[23:52:11] *** Joins: vivekl (~viveklane@ip-38-34-35-85.fibre.fibrestream.ca)
[23:52:14] *** Quits: vivekl (~viveklane@ip-38-34-35-85.fibre.fibrestream.ca) (Remote host closed the connection)
[23:52:16] *** Quits: savolla (~quassel@88.227.92.215) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:53:34] *** Quits: darksun (~darksun@user/darksun) (Remote host closed the connection)
[23:53:36] *** Joins: domicron (~domicron@gateway/tor-sasl/domicron)
[23:53:41] *** Joins: rev1nchn (~rev1nchn@user/rev1nchn)
[23:54:50] *** Joins: pycurious (~Adium@user/pycurious)
[23:54:54] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Remote host closed the connection)
[23:55:12] *** Joins: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de)
[23:55:59] *** Quits: widp (~user@124.123.107.54) (Read error: Connection reset by peer)
[23:57:04] *** Quits: kilitary (~kilitary@188.242.105.134) (Read error: Connection reset by peer)
[23:57:07] *** Joins: brennoflavio (~brennofla@2804:14c:2b:87c1:15ca:5eba:c6a4:38bb)
[23:57:11] *** Quits: greedom (~greedom@p200300de6745e600d081740d0d92ea93.dip0.t-ipconnect.de) ()
[23:57:46] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[23:57:57] *** Quits: rev1nchn (~rev1nchn@user/rev1nchn) (Ping timeout: 240 seconds)
[23:59:07] *** Joins: Guest59 (~Guest59@host-79-27-95-23.retail.telecomitalia.it)
