[00:00:17] *** Joins: frgo (~frgo@p200300deef0cee00a1d722b9ebc8d8ab.dip0.t-ipconnect.de)
[00:00:23] *** Joins: cosimone (~user@93-44-187-145.ip98.fastwebnet.it)
[00:01:20] *** Joins: rogersm (~rogersm@90.166.177.48)
[00:02:55] *** Quits: rogersm (~rogersm@90.166.177.48) (Client Quit)
[00:03:16] *** Joins: fengshaun (~fengshaun@S010680615f0c2c0a.cg.shawcable.net)
[00:16:36] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[00:18:31] *** Joins: akoana (~ah@user/akoana)
[00:18:31] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 252 seconds)
[00:20:13] *** Joins: aeth (~aeth@user/aeth)
[00:23:30] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[00:31:33] *** Joins: asarch (~asarch@2806:10ae:7:d22d:9fc6:674e:590:1e90)
[00:32:37] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 265 seconds)
[00:40:27] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[00:42:36] *** Joins: lisp123 (~lisp123@5.30.23.247)
[00:43:06] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[00:45:27] *** Quits: scymtym (~user@2001:638:504:20e6:6ac3:87e0:e782:f3fc) (Ping timeout: 268 seconds)
[00:47:01] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 252 seconds)
[00:55:55] *** Quits: _Posterdati_ (~posterdat@host-79-43-209-252.retail.telecomitalia.it) (Ping timeout: 252 seconds)
[01:02:45] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[01:05:52] *** Joins: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca)
[01:06:13] *** Quits: cage (~cage@dynamic-adsl-78-15-41-207.clienti.tiscali.it) (Quit: rcirc on GNU Emacs 27.1)
[01:09:16] *** Joins: _Posterdati_ (~posterdat@host-95-235-15-123.retail.telecomitalia.it)
[01:09:42] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[01:18:07] *** Joins: lisp123 (~lisp123@5.30.23.247)
[01:20:40] *** Joins: scymtym (~user@ip-94-114-248-79.unity-media.net)
[01:24:51] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[01:25:56] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 268 seconds)
[01:34:36] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[01:41:15] *** Quits: asarch (~asarch@2806:10ae:7:d22d:9fc6:674e:590:1e90) (Quit: Leaving)
[01:41:22] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[01:43:31] *** Quits: pve (~pve@178-55-124-183.bb.dnainternet.fi) (Quit: leaving)
[01:48:09] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[01:56:43] *** Joins: lisp123 (~lisp123@5.30.23.247)
[02:03:12] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[02:03:58] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 252 seconds)
[02:07:49] *** Quits: gaqwas (~john@dynamic-077-002-072-042.77.2.pool.telefonica.de) (Ping timeout: 252 seconds)
[02:10:11] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[02:23:45] *** Quits: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[02:28:22] *** Quits: eddof13 (~textual@200.52.90.10) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:32:07] *** Quits: frgo (~frgo@p200300deef0cee00a1d722b9ebc8d8ab.dip0.t-ipconnect.de) (Remote host closed the connection)
[02:32:35] *** Joins: frgo (~frgo@p200300deef0cee00a1d722b9ebc8d8ab.dip0.t-ipconnect.de)
[02:35:50] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 260 seconds)
[02:37:38] *** Joins: aeth (~aeth@user/aeth)
[02:41:53] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[02:50:10] *** Quits: rgherdt (~rgherdt@2a02:8109:86c0:d8d:2cb3:8945:1c5c:6ee2) (Ping timeout: 240 seconds)
[03:02:21] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[03:13:11] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[03:30:18] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[03:33:17] *** Joins: recordgroovy (~recordgro@50.35.20.8)
[03:37:08] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[03:37:29] *** Quits: yitzi (~yitzi@173-27-106-188.client.mchsi.com) (Quit: Leaving)
[03:40:09] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 265 seconds)
[03:40:49] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[03:41:48] *** Joins: aeth (~aeth@user/aeth)
[03:42:06] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[03:58:54] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[04:04:34] *** Quits: cosimone (~user@93-44-187-145.ip98.fastwebnet.it) (Ping timeout: 252 seconds)
[04:05:42] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[04:08:15] *** Quits: srhm (~srhm@user/srhm) (Quit: Konversation terminated!)
[04:08:39] *** Joins: srhm (~srhm@user/srhm)
[04:09:57] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[04:11:30] *** Joins: nature (~nature@mail.blazebone.com)
[04:28:48] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[04:34:48] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[04:35:37] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[04:36:26] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Quit: Ping timeout (120 seconds))
[04:37:15] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[04:37:41] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[04:40:08] *** Joins: Yehowshua (~Yehowshua@2601:c9:8000:14b8:5da0:728f:a18f:796d)
[04:41:54] <Yehowshua> pzmq provides binding to the zmq C library. I'm trying to install pzmq with `(ql:quickload "pzmq")`, and ql eventually invokes clang which complains in can't find zmq headers. I know where the zmq header are...
[04:42:03] <Yehowshua> any insight on how to point lisp to where they are?
[04:42:12] <Yehowshua> https://github.com/orivej/pzmq
[04:43:04] <moon-child> perhaps you do not have zmq headers
[04:43:27] <moon-child> you may need to install a 'zmq development libraries' package.  This depends on your operating system
[04:43:45] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[04:44:00] <Yehowshua> I definetlyl have the headers
[04:44:40] <moon-child> oh, sorry, you wrote 'I know where teh zmq header are', and I misread that as 'I don't know...'
[04:44:43] <Yehowshua> lisp calls clang, I want to add an option to lisps's call of clang to piont lisp to where the headers are
[04:44:44] <Yehowshua> ah
[04:52:37] <Yehowshua> fixed it - on mac apple silicon, hombrew was placing the libs and headers in the wrong place
[04:52:46] <Yehowshua> I fixed it manually with symbolic links
[04:53:08] <Yehowshua> although still wish I could somehow pass prefix options to clang
[04:53:14] <Yehowshua> in lisp
[04:53:59] *** Joins: Guest92 (~Guest92@97-118-72-33.hlrn.qwest.net)
[04:54:58] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[04:56:06] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[04:58:26] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[04:59:05] *** Joins: srhm (~srhm@user/srhm)
[04:59:22] *** Quits: Yehowshua (~Yehowshua@2601:c9:8000:14b8:5da0:728f:a18f:796d) (Ping timeout: 256 seconds)
[05:00:00] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[05:02:07] *** Joins: lisp123 (~lisp123@5.30.23.247)
[05:06:55] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 268 seconds)
[05:16:18] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[05:20:00] <Guest92> how can I use asdf in a --script?
[05:20:06] <Guest92> I have (require "asdf") in my sbclrc
[05:21:27] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[05:22:37] *** Quits: random-nick (~random-ni@87.116.181.5) (Ping timeout: 265 seconds)
[05:32:34] <Alfr> Guest92, sbcl's --script toplevel-option implies --no-userinit
[05:32:44] <Guest92> I see that
[05:32:49] <Guest92> and --no-sysinit
[05:35:20] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[05:40:57] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[05:53:37] *** Joins: Guest85 (~Guest85@97-118-72-33.hlrn.qwest.net)
[05:58:05] <akoana> I use something like   sbcl --noinform --quit --eval '(load "file.lisp")'
[05:58:15] <akoana> in a bash script
[06:00:03] <akoana> (so .sbclrc is read)
[06:00:51] *** Joins: taiju (~taiju@240b:253:ec40:2400:a8af:540:19a2:818b)
[06:06:16] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[06:09:40] *** Parts: akoana (~ah@user/akoana) ()
[06:10:54] *** Joins: dre (~dre@2001:8003:c932:c301:3743:ee79:8c00:65b1)
[06:11:30] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[06:17:23] <Guest92> what.. does this mean
[06:17:23] <Guest92> (ql:add-to-init-file)
[06:17:26] <Guest92> oops
[06:17:42] <Guest92>   The value of LPARALLEL.KERNEL::WORKER-COUNT is 0, which is not of type (INTEGER
[06:17:42] <Guest92>                                                                           1
[06:17:43] <Guest92>                                                                           4611686
[06:17:43] <Guest92> 018427387903).
[06:19:31] <moon-child> I would like a 4611686018427387903-core system!
[06:19:43] <Guest92> haha
[06:21:05] <Jach> It's a type error, the worker-count should be > 0.
[06:21:24] <Guest92> what do I do about it?
[06:21:52] <Guest92> I don't know where to look for threading issues, or how I would prevent them... since I"m not doing any threading so far as I'm aware
[06:22:38] <Jach> Set it to a number > 0? Maybe it's a bug in lparallel if it's supposed to detect and set it itself, I'm not very familiar with the library.
[06:22:47] <Alfr> Guest92, I don't think ql:add-to-init-file uses lparallel; more context would be helpful.
[06:23:01] <Guest92> it doesn't
[06:23:12] <Guest92> that was the prevoius paste I failed to copy what I mean tto copy
[06:23:16] <Guest92> that's unrelated
[06:23:33] <Guest92> I'm running a `sbcl --script file.lisp`  and getting this error
[06:23:52] <Guest92> when I run this script on my machine no problem, but I move it up to my cloud environment and it explodes with this error
[06:24:12] *** Joins: brettgilio (~brettgili@x-node.gq)
[06:24:31] <Alfr> Guest92, and why the hell do you assume that we magically know the contents of file.lisp ?!
[06:24:48] <Guest92> I don't but its not doing a whole mess of a lot
[06:25:19] <Jach> It might be helpful if you put it in a pastebin anyway.
[06:25:28] <Guest92> https://jpst.it/2CNVA
[06:25:32] <Guest92> ....working on it
[06:27:23] <Guest92> that's the whole file
[06:27:52] <Jach> Are prodfile and devfile the same?
[06:28:17] <Guest92> no they're different paths
[06:28:29] <Guest92> I changed those to protect the identities of the innocent ;)
[06:28:35] <Guest92> but the file does in fact exist
[06:28:36] <Jach> Their differences might be why it works locally and not on the cloud?
[06:28:43] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 268 seconds)
[06:28:43] <Guest92> no
[06:28:48] <Guest92> because I'm creating the file
[06:28:50] <Guest92> its the same file
[06:29:00] <Guest92> the present value of the file is
[06:29:06] <Guest92> main←{⍳10}
[06:29:10] <Guest92> not much to go wrong there
[06:29:16] <Alfr> Guest92, I don't know april, but I suspect something calls (lparallel:make-kernel 0).
[06:29:17] <Guest92> its valid APL and april-f calls main
[06:29:36] <Guest92> ok I'll ask phantom
[06:29:36] <Jach> ..That's what I meant =P Does (member :sb-thread *features*) return non-nil on the cloud SBCL?
[06:31:43] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[06:34:28] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[06:39:27] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[06:41:03] *** Quits: recordgroovy (~recordgro@50.35.20.8) (Ping timeout: 268 seconds)
[06:42:50] *** Joins: recordgroovy (~recordgro@50.35.20.8)
[06:46:30] *** Joins: Oladon (~olad@98.43.81.226)
[06:54:13] *** Joins: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net)
[06:54:27] *** Quits: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net) (Remote host closed the connection)
[06:55:27] <lotuseater> Guest92: indeed the signaling with lparallel conditions comes from that ^^
[06:58:26] <Guest92> lotuseater what do I do?
[06:58:42] <lotuseater> how do I shall tell you?
[07:04:46] <Jach> Guest92: where I was going with that question was to see if you got a build of sbcl that doesn't have threads enabled, which wouldn't be good.
[07:05:01] <Jach> But it looks like the only place that calls make-kernel is https://github.com/phantomics/april/blob/63ac3497cad728435e1f0c187e6b19680970ad23/utilities.lisp#L42
[07:07:34] *** Joins: karlosz (~karlosz@12.196.174.98)
[07:08:41] <Jach> So in the meantime you could in your script just redefine (defun cl-cpus:get-number-of-processors () 2) which should at least let things progress until something else errors
[07:12:45] <Guest92> I'm not able to find cl-cpus
[07:12:59] <Guest92> I tried to do a (ql:quickload cl-cpus) and it fails in sbcl
[07:14:32] <lotuseater> provide the lib names as keywords, symbols or strings
[07:15:03] <lotuseater> (ql:quickload :cl-cpus)
[07:15:35] <Guest92> ah, yes
[07:15:43] *** Quits: d4ryus (~d4ryus@ppp-188-174-90-103.dynamic.mnet-online.de) (Ping timeout: 265 seconds)
[07:15:43] <Guest92> I found my problem, and that does indeed fix the issue
[07:15:50] <lotuseater> good
[07:18:48] <lotuseater> and the quickload generic function can of course also take a list of multiple lib names
[07:19:23] <lotuseater> (ql:quickload '(:lib1 :lib2 ...))
[07:19:59] <lotuseater> ok, `systems`
[07:24:23] *** Parts: pranavats (3fba1d1b34@jabberfr.org) ()
[07:28:34] *** Joins: d4ryus (~d4ryus@ppp-188-174-7-46.dynamic.mnet-online.de)
[07:32:30] <beach> Good morning everyone!
[07:34:19] <lotuseater> Good morning beach. :)
[07:35:05] *** Joins: lisp123 (~lisp123@5.30.23.247)
[07:37:49] *** Quits: doyougnu (~user@c-73-25-202-122.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[07:53:19] <phantomics> Hey Guest92, looks like April's multithreading is causing some issues
[07:53:49] <Guest92> hey phantomics is ⍣≡ implemented?
[07:54:29] <phantomics> Probably not, do you have an example of use?
[07:55:57] <Guest92> power limit?
[07:56:07] <moon-child> phantomics: f⍣g⊢y repeatedly applies f to y until y g f y.  ⍣≡ is the idiomatic case where g is match, and corresponds to a fixed point
[07:56:11] <Guest92> its repeate until the previous result matches this result
[07:56:19] <Guest92> yes fixed point
[07:56:29] <Guest92> someone in aplfarm tried out a power limit and it is infinit
[07:56:40] <phantomics> Oh, should work, let me check, there were issues with float comparison
[07:57:04] <Guest92>       {⍵{2÷⍨⍵+⍺÷⍵}⍣≡⍵}123456789
[07:57:04] <Guest92> 11111.11106
[07:57:08] <Guest92> in tryapl.org
[07:57:15] <moon-child> fwiw spec only has f⍣k
[07:58:07] <phantomics> Does ⌊1_000_000_000×2○⍣=1 work? I've only done fixpoints with = IIRC
[07:58:33] <Guest92> VALUE ERROR: Undefined name: _000_000_000
[07:58:34] <Guest92>       ⌊1 _000_000_000×2○⍣=1
[07:58:52] <Guest92>      ⌊1000000000×2○⍣=1
[07:58:53] <Guest92> 739085133
[07:59:06] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (Ping timeout: 260 seconds)
[07:59:19] <moon-child> phantomics: yes, it does work
[07:59:22] <moon-child> Guest92: he means in april
[07:59:27] <Guest92> oh
[07:59:56] <phantomics> April supports _s anywhere in a number for spacing
[08:00:21] <phantomics> But {⍵{2÷⍨⍵+⍺÷⍵}⍣≡⍵}123456789 doesn't work, even when I change the ≡ to a =
[08:00:30] <phantomics> I'll look into that
[08:01:55] <lotuseater> infinite power limit sounds quite like it is powered by a dyson sphere :)
[08:04:56] <lotuseater> beach: If you want to hear a funny comment about language design, yesterday someone in #clojure stated "Oh it's such a `cool` feature that elisp has implicit progn in the else-branch of IF."
[08:05:18] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[08:06:33] <beach> lotuseater: No great expectations on the language there. :)
[08:07:40] *** Quits: Bike (~Glossina@71.69.170.70) (Quit: Lost terminal)
[08:08:28] <lotuseater> Yes I thought so too. Like the other with "something like pattern matching 100% doesn't belong in a library, it's a built-in feature" like as if the clojure core.match wasn't a lib or such features weren't switched on by a macro
[08:08:50] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[08:10:02] <beach> I see.
[08:11:13] <lotuseater> Okay not important, hope you're allright.
[08:11:57] <beach> Excellent thank you.  I am currently working out the very last steps of SICL bootstrapping.  Hope you are fine too.
[08:13:05] <lotuseater> Oh and that so early in the morning. :)
[08:17:28] *** Quits: semz (~none@user/semz) (Ping timeout: 268 seconds)
[08:21:32] <beach> Well, by "currently" I meant "the past few days", and I'll continue later.
[08:21:49] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[08:23:32] <beach> Working on SICL is a strange experience sometimes, and I don't know whether people creating other Common Lisp implementations have this experience, but most of the SICL code has been executed, which means that it has been somewhat tested.  Yet, we still do not create an executable file.
[08:24:01] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[08:24:14] *** Quits: karlosz (~karlosz@12.196.174.98) (Quit: karlosz)
[08:25:28] *** Joins: notzmv (~zmv@user/notzmv)
[08:27:26] <lotuseater> Sounds good.
[08:28:25] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (Ping timeout: 252 seconds)
[08:28:35] <lisp123> beach: Will you be try to create the executable from multiple implementations (SBCL / LispWorks / CCL / CLISP) or just SBCL?
[08:29:32] *** Joins: semz (~none@user/semz)
[08:30:22] <beach> Ultimately, we will test the bootstrapping procedure on several existing Common Lisp implementations, but I don't expect any problems with SICL code itself since it uses only standard Common Lisp plus CLOSER-MOP.
[08:30:25] <hayley> There shouldn't be any problems bootstrapping from any other implementation.
[08:30:32] <beach> Right.
[08:30:51] <beach> However, some Common Lisp implementations have limitations that might be problematic.
[08:31:41] <beach> In the past, we exposed a problem with SBCL immobile space (is that what it is called), and we do generate a huge number of funcallable standard objects.
[08:32:20] <lotuseater> Like don't have the possibility to make executables in LispWorks with the "free" version. ^^
[08:33:14] <lisp123> That's interesting to hear (and great that all implementations getting some love)
[08:33:26] <beach> No, the executable I am talking about is a SICL executable file created by writing bytes to disk.  What the Common Lisp implementation does not matter.
[08:33:54] <beach> s/does/does, does/
[08:34:19] <lotuseater> lisp123: and don't forget, the moment when you bootstrap SICL with SICL :P
[08:34:35] <lisp123> lotuseater: That is the end game :) Like collecting all the infinity stones
[08:35:06] <hayley> "How many layers of metacircularity are you on?" "Like zero dude" "You are like a Python implementation, watch this"
[08:35:30] *** Quits: recordgroovy (~recordgro@50.35.20.8) (Ping timeout: 260 seconds)
[08:35:44] <lotuseater> yes when i hear end game that comes to my mind too. yielding the infinity implementation gauntlet to rule the universe
[08:36:08] *** Joins: recordgroovy (~recordgro@50.35.20.8)
[08:37:13] *** Quits: d4ryus (~d4ryus@ppp-188-174-7-46.dynamic.mnet-online.de) (Ping timeout: 252 seconds)
[08:38:40] <lotuseater> or to fight the crabs even more effectively .. reducing half at one snap
[08:49:21] *** Joins: d4ryus (~d4ryus@ppp-188-174-80-12.dynamic.mnet-online.de)
[08:49:56] *** Quits: fengshaun (~fengshaun@S010680615f0c2c0a.cg.shawcable.net) (Ping timeout: 268 seconds)
[08:55:10] *** Quits: lisp123 (~lisp123@5.30.23.247) (Read error: Connection reset by peer)
[08:55:38] *** Joins: lisp123 (~lisp123@5.30.23.247)
[08:56:28] *** Joins: fengshaun (~fengshaun@S010680615f0c2c0a.cg.shawcable.net)
[09:08:02] *** Quits: taiju (~taiju@240b:253:ec40:2400:a8af:540:19a2:818b) (Ping timeout: 268 seconds)
[09:10:42] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[09:11:34] *** Joins: lisp123 (~lisp123@5.30.23.247)
[09:16:34] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 260 seconds)
[09:17:01] *** Joins: Nilby (~Nilby@c-67-160-81-88.hsd1.wa.comcast.net)
[09:18:58] *** Quits: nature (~nature@mail.blazebone.com) (Ping timeout: 265 seconds)
[09:32:32] *** Joins: taiju (~taiju@240b:253:ec40:2400:a8af:540:19a2:818b)
[09:46:13] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[09:49:16] *** Joins: lisp123 (~lisp123@5.30.23.247)
[09:56:43] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[09:58:28] *** Quits: fitzsim (~user@69-165-165-189.dsl.teksavvy.com) (Ping timeout: 250 seconds)
[09:58:37] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 252 seconds)
[10:06:04] *** Joins: gaqwas (~john@dynamic-095-118-105-217.95.118.pool.telefonica.de)
[10:07:31] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[10:14:49] *** Joins: Cymew (~ante@c-e989225c.023-1144-7570702.bbcust.telenor.se)
[10:32:33] *** Joins: lisp123 (~lisp123@5.30.23.247)
[10:37:40] *** Quits: taiju (~taiju@240b:253:ec40:2400:a8af:540:19a2:818b) (Ping timeout: 240 seconds)
[10:41:16] *** Joins: taiju (~taiju@240b:253:ec40:2400:a8af:540:19a2:818b)
[10:47:13] *** Joins: karlosz (~karlosz@12.196.174.98)
[10:47:19] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Ping timeout: 268 seconds)
[10:47:30] *** Joins: amb007 (~a_bakic@238.13.23.93.rev.sfr.net)
[10:55:39] *** Joins: shka (~herr@109.231.62.239)
[10:56:35] *** Joins: rain3 (~rain3___@2a02:2f09:d100:8700:1ae4:6be9:2a58:7de6)
[11:00:02] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Quit: WeeChat 3.1)
[11:02:16] *** Joins: rgherdt (~rgherdt@2a02:8109:86c0:d8d:2cb3:8945:1c5c:6ee2)
[11:04:17] *** Quits: Guest85 (~Guest85@97-118-72-33.hlrn.qwest.net) (Ping timeout: 256 seconds)
[11:04:17] *** Quits: Guest92 (~Guest92@97-118-72-33.hlrn.qwest.net) (Ping timeout: 256 seconds)
[11:33:21] *** Quits: gaqwas (~john@dynamic-095-118-105-217.95.118.pool.telefonica.de) (Ping timeout: 268 seconds)
[11:34:11] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 268 seconds)
[11:41:35] *** Quits: amb007 (~a_bakic@238.13.23.93.rev.sfr.net) (Read error: Connection reset by peer)
[11:41:55] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[11:48:13] *** Joins: pve (~pve@87-93-176-222.bb.dnainternet.fi)
[12:01:27] *** Joins: cranium (~cranium@user/cranium)
[12:16:15] *** Joins: asarch (~asarch@2806:10ae:7:34f1:b74a:8849:976e:2b81)
[12:33:14] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:36:00] *** Joins: hendursa2 (~weechat@user/hendursaga)
[12:36:18] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[12:39:33] *** Quits: hendursa1 (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[12:40:34] *** Quits: taiju (~taiju@240b:253:ec40:2400:a8af:540:19a2:818b) (Ping timeout: 268 seconds)
[12:43:40] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[12:44:51] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[12:48:29] *** Quits: asarch (~asarch@2806:10ae:7:34f1:b74a:8849:976e:2b81) (Quit: Leaving)
[12:52:10] *** _Posterdati_ is now known as Posterdati
[13:04:41] *** Joins: ln43 (~ln43@user/ln43)
[13:16:26] *** Quits: ln43 (~ln43@user/ln43) (Ping timeout: 260 seconds)
[13:21:27] *** Joins: cosimone (~user@151.14.38.15)
[13:24:21] *** Quits: cosimone (~user@151.14.38.15) (Client Quit)
[13:28:40] *** Quits: karlosz (~karlosz@12.196.174.98) (Ping timeout: 268 seconds)
[13:43:11] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Quit: Leaving...)
[13:52:03] *** Joins: taiju (~taiju@240b:253:ec40:2400:a8af:540:19a2:818b)
[14:29:53] *** Joins: lisp123 (~lisp123@5.30.23.247)
[14:32:08] *** Quits: frgo (~frgo@p200300deef0cee00a1d722b9ebc8d8ab.dip0.t-ipconnect.de) (Remote host closed the connection)
[14:32:35] *** Joins: frgo (~frgo@p200300deef0cee00a1d722b9ebc8d8ab.dip0.t-ipconnect.de)
[14:34:03] *** Joins: santiagopim (~user@84.78.249.190)
[14:34:35] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 265 seconds)
[14:45:43] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Ping timeout: 252 seconds)
[14:46:08] *** Joins: amb007 (~a_bakic@238.13.23.93.rev.sfr.net)
[14:57:20] *** Quits: amb007 (~a_bakic@238.13.23.93.rev.sfr.net) (Read error: Connection reset by peer)
[14:57:43] *** Joins: tfeb (~tfb@host81-155-127-18.range81-155.btcentralplus.com)
[14:58:08] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[14:58:12] *** Quits: tfeb (~tfb@host81-155-127-18.range81-155.btcentralplus.com) (Read error: Connection reset by peer)
[14:59:32] *** Joins: random-nick (~random-ni@87.116.176.198)
[15:00:13] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[15:02:45] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[15:24:13] *** Quits: dilated_dinosaur (~dino@cpc1-bexl9-2-0-cust231.2-3.cable.virginm.net) (Quit: Leaving)
[15:25:50] *** Joins: trevlif (~user@80.227.170.170)
[15:25:59] <trevlif> Hey, I had a quick qn
[15:26:16] <trevlif> How do I do (setf (last *list*) 3) or something like that?
[15:28:00] *** Quits: trevlif (~user@80.227.170.170) (Read error: Connection reset by peer)
[15:31:07] <hayley> (setf (car (last list)) 3)
[15:35:48] *** Parts: Everything (~Everythin@37.115.210.35) ()
[15:44:07] *** Joins: attila_lendvai (~alendvai@C22674C1.nat.pool.telekom.hu)
[15:59:14] *** Joins: yitzi (~yitzi@97-64-230-163.client.mchsi.com)
[16:15:06] *** Joins: X-Scale` (~ARM@50.77.166.178.rev.vodafone.pt)
[16:16:31] *** Quits: X-Scale (~ARM@92.250.99.192) (Ping timeout: 252 seconds)
[16:16:49] *** X-Scale` is now known as X-Scale
[16:19:43] *** Joins: dilated_dinosaur (~dino@cpc1-bexl9-2-0-cust231.2-3.cable.virginm.net)
[16:31:29] *** Joins: X-Scale` (~ARM@83.223.226.16)
[16:32:31] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 265 seconds)
[16:33:21] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[16:33:25] *** X-Scale` is now known as X-Scale
[16:34:32] *** Joins: trevlif (~user@80.227.170.170)
[16:34:39] <trevlif> Sorry, I got disconnected
[16:35:15] <jackdaniel> (setf (a:last-elt list) 3)
[16:38:16] *** Joins: cuz (~user@2601:182:cc02:8b0:c414:97d1:1f4d:202f)
[16:39:29] *** Quits: cuz (~user@2601:182:cc02:8b0:c414:97d1:1f4d:202f) (Remote host closed the connection)
[16:39:52] *** Joins: cuz (~user@2601:182:cc02:8b0:c414:97d1:1f4d:202f)
[16:44:23] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Quit: WeeChat 3.2.1)
[16:58:12] *** Joins: Bike (~Glossina@71.69.170.70)
[16:58:12] *** ChanServ sets mode: +o Bike
[17:06:12] <trevlif> jackdaniel: thanks, is that a custom package? "a:"
[17:06:30] <trevlif> Is there a way without a library?
[17:06:48] <hayley> I suppose it is Alexandria with a package-local nickname.
[17:07:08] <hayley> My prior suggestion was (setf (car (last list)) 3) which doesn't require a library.
[17:09:02] <trevlif> hayley: Thanks! that did it
[17:11:13] <lotuseater> nice :) I had also get used to that LAST returns a list rather than the element alone
[17:12:16] <hayley> I recall the book Land of Lisp did mention that exact use-case for LAST returning the last cons cell, funnily enough.
[17:13:10] <jackdaniel> if you want to push to the back of the list, then last comes handy
[17:14:01] <jackdaniel> (rplacd (cons <elt> nil) (last list))
[17:14:48] <Cymew> I might be weird, but I actually think "(setf (car (last list)) 3)" is clearer than last-elt as it forces you to think through the procedure in details. There are a few gotchas in that one.
[17:16:09] <jackdaniel> you may open code most setf expansions too to better understand low-level operations
[17:17:23] *** Joins: selwyn (~selwyn@user/selwyn)
[17:42:41] *** Quits: hendursa2 (~weechat@user/hendursaga) (Quit: hendursa2)
[17:43:28] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:45:16] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[17:47:28] *** Joins: Lycurgus (~juan@98.4.112.204)
[18:05:16] *** Parts: pranavats (3fba1d1b34@jabberfr.org) ()
[18:13:26] *** Joins: VincentVega (~user@212.241.25.220)
[18:23:23] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[18:23:53] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[18:26:04] *** Joins: didi (~user@user/didi)
[18:28:50] <didi> If something is EQ+, it has to be EQ too, right? i.e., if (EQL a b), or (EQUAL a b), or (EQUALP a b), it is also true that (EQ a b), isn't it?
[18:29:54] <Bike> what? no.
[18:30:03] <didi> Oh...
[18:30:08] <Bike> What would be the point of having all the different equality operators?
[18:30:15] <Bike> The converse is true, though
[18:30:22] <Bike> If (eq a b), (eql a b) and so on
[18:30:30] <didi> Bike: Thank you.
[18:32:25] *** Joins: lisp123 (~lisp123@5.30.23.247)
[18:32:38] *** Quits: mingus (~jan-magnu@ti0135a400-2471.bb.online.no) (Quit: Lost terminal)
[18:33:03] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[18:33:18] *** sm2n_ is now known as sm2n
[18:36:52] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 252 seconds)
[18:41:34] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[18:51:03] *** Joins: fitzsim (~user@69-165-165-189.dsl.teksavvy.com)
[18:51:30] *** Quits: cuz (~user@2601:182:cc02:8b0:c414:97d1:1f4d:202f) (Ping timeout: 260 seconds)
[18:53:36] *** Joins: nature (~nature@mail.blazebone.com)
[19:01:52] *** Joins: lisp123 (~lisp123@5.30.23.247)
[19:04:18] *** Joins: cuz (~user@38.140.58.234)
[19:05:08] *** Joins: selwyn (~selwyn@user/selwyn)
[19:07:23] *** Quits: selwyn (~selwyn@user/selwyn) (Remote host closed the connection)
[19:07:48] *** Joins: selwyn (~selwyn@user/selwyn)
[19:10:06] *** Joins: nick3000 (~user@2001:558:6040:1b:80cd:f8bf:5142:2cb0)
[19:10:13] *** Joins: mingus (~jan-magnu@ti0135a400-2471.bb.online.no)
[19:19:51] *** Joins: doyougnu (~user@c-73-25-202-122.hsd1.or.comcast.net)
[19:27:06] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.2)
[19:27:28] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[19:31:13] *** Joins: aeth_ (~aeth@user/aeth)
[19:31:28] *** Quits: aeth (~aeth@user/aeth) (Killed (NickServ (GHOST command used by aeth_)))
[19:31:33] *** aeth_ is now known as aeth
[19:32:56] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 252 seconds)
[19:36:10] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[19:39:34] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 260 seconds)
[19:39:55] <rain3> how to make asdf automatically load files specified in (uiop:define-package ... (:use-reexport #:HERE )  for systems with :class :package-inferred-system  ? it is not right to have to add an extra (:import-from #:HERE)
[19:45:50] *** Quits: cranium (~cranium@user/cranium) (Quit: Leaving)
[19:46:36] <_death> can you elaborate? your question is unclear to me
[19:46:45] <rain3> yes, 1 sec
[19:47:09] *** Joins: makomo (~makomo@user/makomo)
[19:47:44] <rain3> https://pastebin.com/kXmAbt33
[19:48:30] <rain3> that code with duplication, works. If I remove the duplicate code (the :import-from form) , asdf won't load the files any more
[19:49:29] <rain3> _death: have you used :package-inferred-system ?
[19:49:31] <_death> it should
[19:49:36] <rain3> yes it should...
[19:49:36] <_death> yes
[19:50:24] <_death> maybe if you create a minimal test-case..
[19:51:00] <rain3> yes I will make one
[19:51:33] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[19:56:21] <rain3> strange, in a minimal test case it seems to work fine
[19:56:51] <_death> that's the beauty of the method.. now try to eliminate the differences
[19:57:03] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.2)
[19:57:34] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[20:02:22] <rain3> I think one the :use-reexport ed file failed to compile and instead of telling me that it failed to compile it said 'that package doesn't exist' and only after adding :import-from it would tell me 'that file doesn't compile'
[20:02:38] <rain3> s/one//
[20:03:52] <_death> that would be strange
[20:05:31] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[20:06:50] <rain3> yeah who knows, I am using an older sbcl on windows. I hope the issue has vanished
[20:10:19] <_death> well, if you still have the failing case, you can look deeper.. as a rule giving up in debugging is bad..
[20:11:39] *** Quits: raeda_ (~raeda@72.49.219.33) (Quit: Leaving)
[20:12:03] *** Joins: raeda (~raeda@72.49.219.33)
[20:13:15] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[20:13:58] <rain3> it seems the failing case is gone for now, if it appears again I will continue investigating
[20:19:05] *** Quits: yitzi (~yitzi@97-64-230-163.client.mchsi.com) (Remote host closed the connection)
[20:23:50] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[20:32:12] *** Joins: cage (~cage@dynamic-adsl-78-15-41-207.clienti.tiscali.it)
[20:36:50] *** Joins: Oladon (~olad@98.43.81.226)
[20:40:33] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[20:47:28] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[20:47:51] *** Joins: Yehowshua (~Yehowshua@2601:c9:8000:14b8:8d79:1a58:8c25:eda6)
[20:49:40] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.2)
[20:51:17] *** Joins: Yehowshua93 (~Yehowshua@c-76-111-46-105.hsd1.ga.comcast.net)
[20:54:22] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[20:55:19] *** Quits: Yehowshua (~Yehowshua@2601:c9:8000:14b8:8d79:1a58:8c25:eda6) (Ping timeout: 256 seconds)
[20:56:48] *** Joins: Guest8 (~Guest8@97-118-72-33.hlrn.qwest.net)
[20:56:56] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[20:58:16] *** Joins: amb007 (~a_bakic@206.13.23.93.rev.sfr.net)
[21:02:12] *** Quits: Yehowshua93 (~Yehowshua@c-76-111-46-105.hsd1.ga.comcast.net) (Quit: Client closed)
[21:06:13] *** Joins: VincentV` (~user@212.241.25.220)
[21:09:40] *** Quits: VincentVega (~user@212.241.25.220) (Ping timeout: 240 seconds)
[21:10:12] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[21:10:27] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[21:10:48] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[21:15:44] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[21:20:50] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[21:42:10] *** Joins: azimut_ (~azimut@gateway/tor-sasl/azimut)
[21:42:57] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 276 seconds)
[21:44:07] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[21:44:10] *** Quits: cuz (~user@38.140.58.234) (Ping timeout: 240 seconds)
[21:52:27] *** Quits: Guest8 (~Guest8@97-118-72-33.hlrn.qwest.net) (Quit: Client closed)
[21:52:37] *** Joins: Guest2 (~Guest2@97-118-72-33.hlrn.qwest.net)
[21:56:59] <rain3> the issue popped again, I finally managed to make a minimal failing test
[21:57:11] *** Parts: Guest2 (~Guest2@97-118-72-33.hlrn.qwest.net) ()
[21:57:15] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[22:02:25] *** Quits: amb007 (~a_bakic@206.13.23.93.rev.sfr.net) (Read error: Connection reset by peer)
[22:04:18] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[22:04:34] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[22:06:17] <_death> so, what is the conclusion?
[22:06:58] <rain3> https://pastebin.com/KKcuYkA1
[22:07:59] <_death> your defsystem-depends-on should have "asdf-package-system"
[22:11:13] <rain3> ok. adding it doesn't fix this issue; if "asdf-package-system" should be added, the manual should be updated to specify that https://common-lisp.net/project/asdf/asdf/The-package_002dinferred_002dsystem-extension.html
[22:11:36] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Ping timeout: 268 seconds)
[22:12:10] <_death> let me try it
[22:12:33] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[22:14:27] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[22:15:17] <_death> everything seems ok here (sbcl HEAD, linux)
[22:16:31] <_death> as for "asdf-package-system", maybe it's no longer needed..
[22:17:26] <_death> what does (asdf:asdf-version) give you
[22:17:41] <rain3> "3.3.4.5"
[22:18:10] *** Joins: cuz (~user@38.140.58.234)
[22:18:11] <_death> so it seems you're using a version that's not the one bundled with sbcl
[22:18:19] <_death> (which is 3.3.1)
[22:20:06] <rain3> ok I removed the newer asdf, now I am using "3.3.1" . same thing happening , any idea what's the quickest way to compile sbcl for windows 32 bit ? maybe moving to a newer version will fix this
[22:22:56] *** Quits: cuz (~user@38.140.58.234) (Ping timeout: 265 seconds)
[22:24:58] <_death> hmm no idea.. github actions seem to build for 64-bit windows
[22:26:09] <_death> why if you import-from :cffi instead of depends-on it
[22:26:21] <_death> *what
[22:27:10] *** Joins: cuz (~user@38.140.58.234)
[22:29:06] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[22:32:30] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[22:33:03] *** Joins: srhm (~srhm@user/srhm)
[22:33:38] *** Joins: gaqwas (~john@dynamic-095-118-105-217.95.118.pool.telefonica.de)
[22:33:45] <rain3> doesn't make a difference, the issue remains
[22:33:57] *** Parts: didi (~user@user/didi) (O bella ciao bella ciao bella ciao, ciao, ciao.)
[22:34:00] <rain3> so maybe it's got to do with :cffi and *features*
[22:34:11] <rain3> I'll try tomorrow to compile sbcl
[22:34:15] <rain3> thank you for the help
[22:34:41] <_death> well, you could try with something that's not cffi.. maybe it does have something to do with this specific system
[22:34:49] <_death> (I mean with cffi)
[22:35:52] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[22:41:27] *** Joins: CptKirk (~CptKirk@97-118-72-33.hlrn.qwest.net)
[22:41:45] <CptKirk> Can somone please remind me the quicklisp default asd project creation?
[22:41:51] <CptKirk> or how to find the quicklisp docs
[22:43:15] <_death> quickproject?
[22:44:04] <CptKirk> (describe 'ql:quickproject) is an error
[22:44:25] <_death> it's not part of quicklisp.. https://xach.com/lisp/quickproject/
[22:46:39] <CptKirk> quickproject doens't exist?
[22:46:55] <CptKirk> ah, need to quickload it
[22:48:12] *** Quits: Nilby (~Nilby@c-67-160-81-88.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[22:52:55] *** Quits: hineios (~hineios@a95-93-142-124.cpe.netcabo.pt) (Ping timeout: 268 seconds)
[22:57:25] <rain3> _death: with :alexandria instead of :cffi, the issue is gone (in the minimal example. but in the non-minimal project other related issues seem to pop up)
[22:58:39] *** Quits: cuz (~user@38.140.58.234) (Remote host closed the connection)
[22:58:55] *** Joins: cuz (~user@38.140.58.234)
[22:59:55] <CptKirk> I'm very confused... I had a (defpackage #:my-package (:use #:cl #:april #:str)) now that doesn't work for some reason. So I used quickproject to define something for me with the (depends-on ...) property set, and when I (asdf:load-system my-system) I still can't seem to do anything
[23:00:13] <CptKirk> none of the functions are defined, none of the dependencies are met... idk what I'm doing wrong
[23:02:22] <CptKirk> https://pastebin.com/raw/LKSeEw12
[23:06:10] <CptKirk> I'm in the repl trying anything I can think of (apropos 'aoc-15) (aoc-15:day 2015 1) (day 2015 1)
[23:06:24] <CptKirk> I don't understand anything that's happening
[23:07:03] <Bike> where's the definition of the aoc-15 package?
[23:07:14] <Bike> or rather what is the definition, since presumably it's in package.lisp
[23:07:55] <Bike> if you've tried loading it before in the same image you may need to force? try (asdf:load-system whatever :force t)
[23:10:46] <CptKirk> I found a fix. I'll paste it, and please tell me what is the "right way"
[23:11:56] <CptKirk> https://pastebin.com/raw/tPur9K9C
[23:12:22] <CptKirk> So I defined a package within the system. Then from the slime repl I had to "in-package" that package name
[23:12:31] <CptKirk> then I could call (day 2015 1)
[23:13:13] <CptKirk> or (day1)
[23:13:29] <CptKirk> is there a slime command to completely reset the state of the session?
[23:13:49] <Bike> slime-restart-inferior-lisp
[23:13:57] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[23:14:12] <Bike> Okay, so what's going on here is that your "solutions" package does not _export_ the given symbols
[23:14:30] <Bike> so from another package you can't do solutions:day. but you can do solutions::day
[23:15:55] <CptKirk> I see
[23:15:58] <CptKirk> how do I export?
[23:16:11] <Bike> put (:export #:day ...etc...) in the defpackage
[23:16:44] <CptKirk> so here's why I wanted to try that. I can no longer (asdf:load-system "aoc-15")
[23:16:52] <CptKirk> component not found
[23:17:07] <Bike> packages are not closely related to systems
[23:17:19] <Bike> particularly, nothing you do to your defpackage form is going to change how asdf loads the system
[23:18:50] <CptKirk> why can't I load my system after slime-restart-inferior-lisp?
[23:18:52] *** Joins: selwyn (~selwyn@user/selwyn)
[23:19:08] <CptKirk> do I need to specify my full path?
[23:19:18] <CptKirk> or add it to ~/quicklisp/local-projects?
[23:19:52] <Bike> have you done anything special with your asdf configuration?
[23:20:01] <Bike> if not, probably put it in local projects, yeah
[23:20:06] <Bike> and do (ql:register-local-projects)
[23:20:22] <lotuseater> yeah when you symlink the .asd file to the local-projects dir you can ql:quickload the system
[23:20:22] <CptKirk> no, I did the quickproject from the slime repl, then I did asdf load. then I messed around, and then slime-restart. now I can't asdf-load
[23:21:02] <Bike> okay. i think quickproject might add it to the configuration, and it's not doing that now. so do local projects instead, probably.
[23:21:18] <lotuseater> check where you are in the load path
[23:21:56] <Bike> what load path?
[23:22:06] <lotuseater> never mind
[23:23:12] <lotuseater> but when slime is reset i would assume the path gets set to default as a sideeffect so asdf can't see it anymore with a relative path string
[23:24:09] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[23:24:14] <CptKirk> ok, I `ln -s /path/to/aoc-15.asd ./aoc-15.asd` in my local-projects
[23:24:16] <CptKirk> works now
[23:24:24] <CptKirk> but now I'm running into an april issue
[23:24:47] <Bike> lotuseater: these are system names. where are paths involved?
[23:24:49] <CptKirk> until I manually compile `day1` the apl functions are not defined
[23:25:18] <lotuseater> Bike: i thought for the file name path of the asd file
[23:25:39] <Bike> CptKirk: I know basically nothing about april, but is that not because you don't execute the april-load until day1 is called?
[23:25:40] <CptKirk> @phantomics The variable APRIL-WORKSPACE-COMMON::|day1| is unbound.
[23:25:40] <CptKirk>    [Condition of type UNBOUND-VARIABLE]
[23:26:19] <CptKirk> yes, while technically that's not correct, I also need to figure out how to load the april file dynamically because I'm constantly working in that file
[23:26:38] <CptKirk> instead of needing to constantly recompile the file as well as reevaluate the form
[23:28:47] <CptKirk> phantomics https://pastebin.com/raw/4gFPbLDy
[23:29:14] <CptKirk> I wonder if its because its in the `solutions` package if there's something wrong with the namespace reference
[23:32:29] <pjb> CptKirk: Note: (package-name (defpackage :foo)) #| --> "FOO" |#   (asdf:component-name (asdf:defsystem :foo)) #| --> "foo" |#
[23:32:46] <pjb> CptKirk: by default, package names are uppercase strings, while system names are lowercase strings!
[23:32:51] <pjb> they have nothing in common.
[23:33:33] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[23:33:50] <pjb> CptKirk: of course you can do (package-name (defpackage :|MixedCase|)) #| --> "MixedCase" |#  but this doesn't work for system names that remains in lowercase: (asdf:component-name (asdf:defsystem :|MixedCase|)) #| --> "mixedcase" |#
[23:34:11] <pjb> For systems, you have to use a string: (asdf:component-name (asdf:defsystem "MixedCase")) #| --> "MixedCase" |#
[23:34:44] <pjb> This may also pose problem when trying to find the asd file, since some file systems are case-sensitive, and some are not…
[23:38:02] *** Quits: rain3 (~rain3___@2a02:2f09:d100:8700:1ae4:6be9:2a58:7de6) (Ping timeout: 260 seconds)
[23:38:04] <pjb> CptKirk: Should we assume ⍝ is a reader macro that switch to APL syntax? and that APL is case sensitive?  when you do (defun day1 …) above, what is actually read, assuming the default *readtable*, is (CL:DEFUN SOLUTIONS:DAY1 …)  On the other hand, when you read day1←{…} I suppose that what is read there is SOLUTIONS:|day1| an entirely different symbol.
[23:38:47] <CptKirk> no
[23:38:51] <CptKirk> ⍝ is a comment in apl
[23:38:56] <pjb> CptKirk: So depending on where you read the symbol, and what (READTABLE-CASE *READTABLE*) setting you have at the time of reading, you will want to use uppercase or lowercase and perhaps force the case using |day1| or |DAY1A|.
[23:38:57] <CptKirk> ;;;; filename
[23:39:00] <CptKirk> ⍝ filename
[23:39:08] <CptKirk> i'm just trying to dump the whole project in one paste
[23:39:09] <pjb> Oh, so just a different file.
[23:39:12] <CptKirk> yes
[23:39:20] <pjb> *readtable* can be different when reading different files.
[23:39:32] <CptKirk> it isn't an error reading so far as I can see
[23:40:07] <CptKirk> `The variable APRIL-WORKSPACE-COMMON::|day1| is unbound.` This makes me think that this is somehow relative to the package its in
[23:40:25] <CptKirk> When I compile with C-c C-c, it works just fine
[23:40:40] <CptKirk> its only when trying to (asdf:load-system "aoc-15) (solutions:day1)
[23:40:42] <CptKirk> that I get this error
[23:40:55] <CptKirk> I can manually compile and call, then it works
[23:41:05] <pjb> This should be explained in the April documentation…
[23:41:30] *** Quits: pve (~pve@87-93-176-222.bb.dnainternet.fi) (Quit: leaving)
[23:41:31] <CptKirk> I don't think your projects organization is described in aprils docs. This seems to be a problem with how my project is arranged more than anything
[23:41:37] *** Joins: hineios (~hineios@a95-93-142-124.cpe.netcabo.pt)
[23:41:42] <CptKirk> but the APRIL-WORKSPACE-COMMON is a package
[23:41:48] <pjb> Also, if just loading april switches to an apl readtable, this is bad. Switching readtables should be done explicitely, at run-time, not at load time…
[23:41:52] <CptKirk> and that's the default package for the default april "workspace"
[23:42:06] <CptKirk> I don't know what that menas
[23:42:55] <CptKirk> you mean `april:april-load`
[23:43:51] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[23:44:03] <CptKirk> yes I know that's not the right way to do things with `(eval '(april-load #P"file"))` but at the same time, I've said this a few times now, when I'm working in the loaded file, its rather annoying to have to not only recompile the input file, but also reevaluate the expression which uses the names exported from the compilation
[23:44:10] <CptKirk> so I put it in the eval block for development
[23:44:24] <CptKirk> I would move this somewhere else once `day1` actually returns the correct solutions
[23:44:54] <CptKirk> I don't actually need to dynamically compile the APL input for the program to run, I just need it for development
[23:45:05] <CptKirk> if you know of any alternative development patterns for this sort of thing, I'm all ears
[23:47:14] *** Joins: Lycurgus (~juan@98.4.112.204)
[23:47:50] <pjb> CptKirk: I mean  (asdf:load-system "aoc-15) (solutions:day1) ; the aoc-15 system loads the april system.
[23:48:17] <CptKirk> yes, I understand that much
[23:49:14] <pjb> CptKirk: you should provide an APL REPL..
[23:49:30] <CptKirk> ?
[23:50:17] <pjb> (apl-repl) RET  and then you can enter apl expressions at the REPL, without havint to reload a file.
[23:50:21] <pjb> s/int/ing/
[23:50:30] <pjb> https://dfns.dyalog.com/n_repl.htm
[23:50:45] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[23:50:47] <pjb> Possily, if you want to reload a file, you can also do it with an apl command.
[23:51:30] <CptKirk> so compile the repl, pass the file read in to the repl function
[23:51:32] <CptKirk> that's interesting
[23:53:03] <CptKirk> well no it isn't because the repl would only accept single line expressions
[23:53:22] <CptKirk> Which means multi-line functions would break the repl
[23:56:12] <pjb> Why should it accept only single line expressions? a lisp repl can take multiple lines.
[23:56:19] <pjb> (until the sexp parentheses are closed).
[23:56:24] *** Joins: yitzi (~yitzi@173-27-106-188.client.mchsi.com)
[23:56:55] <pjb> This can also be done with stranger syntax, by repeating reading until a syntactically complete expression is read.
[23:57:22] <CptKirk> @pjb because ⋄ and newlines end expressions, and that isn't the case in lisp
[23:57:27] <CptKirk> only parens end expressions
[23:58:02] <moon-child> CptKirk: there's no reason you can't have an apl repl that accepts multi-line expressions
[23:58:08] <pjb> It's a matter of user interface there.  Things are different in a bare terminal, than eg. in emacs with slime.
[23:58:33] <CptKirk> no there isn't... but I don't think this is a useful approach to wanting to dynamically load the file with april
[23:58:41] <pjb> In emacs, we can edit multi-line input without sending it (ie. using C-RET to insert a new line without sending the input to the swank process).
[23:58:56] <pjb> This can also be simulated in a bare terminal with an simple editing layer.
[23:58:56] <CptKirk> moon-child and also it was difficult enough that Dyalog didn't add EXPERIMENTAL multiline expressions in the REPL until version 18
[23:59:34] *** Quits: nature (~nature@mail.blazebone.com) (Ping timeout: 252 seconds)
[23:59:36] <pjb> ie. a repl input can be performed in a editing text box…
