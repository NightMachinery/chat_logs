[08:47:03] <blackleitus> if I have a microservice without ui api can I have a central admin for every app or should I create 10+ admins since I Have 10 services?
[08:48:17] <PaulWay[w]> You can have a central admin.
[08:48:32] <blackleitus> how can I create that?
[08:48:33] <PaulWay[w]> This is another purpose of designing your own admin system and not relying on Django's admin system.
[08:48:44] <FunkyBob> write views
[08:48:44] <PaulWay[w]> In the same way you create a Django site.
[08:49:07] <blackleitus> I am not relying on django admin . I Just use it for demo purpose
[08:49:33] <blackleitus> it's still painful in demo having 10+ admins and lazy to go each container
[08:50:26] <wallbroken> i'm sorry: "passed away" is a gentle way to say "died" in english?
[08:50:46] <blackleitus> should I overwrite the whole django admin system or create a new management folder? FunkyBob  PaulWay[w]
[08:52:21] <FunkyBob> blackleitus: yes... this is why I always recommend you not use admin
[08:52:23] <FunkyBob> it's not suitable
[08:52:25] <PaulWay[w]> Create a new one.
[08:52:31] <bparker> rofl
[08:52:33] <FunkyBob> wallbroken: yes it is
[08:52:58] <bparker> making the admin what it is and then telling people not to use it is just so hilarious to me
[08:53:05] <bparker> like who do you think you're kidding
[08:53:17] <bparker> nobody wants to redo all that work
[08:53:18] <PaulWay[w]> Well, I see it as an emergency system.
[08:53:33] <PaulWay[w]> The thing you use when you don't have anything else.
[08:53:45] <PaulWay[w]> The superuser edit-anything system.
[08:54:09] <bparker> if that idealogy were shared by all the django devs, it wouldn't be so extensible
[08:54:18] <PaulWay[w]> Yes.
[08:54:37] <PaulWay[w]> *shrugs*
[08:54:50] <PaulWay[w]> It's a good example of why generics can only go so far.
[08:54:51] <blackleitus> if I create an admin . this new admin needs to handle a lot of db instances right
[08:54:54] <blackleitus> multi db
[08:55:15] <PaulWay[w]> What do you mean by 'handle' there?
[08:55:33] <wallbroken> "I have some very unfortunate and sad news to share with you all. Mark passed away this weekend after a painful battle..."
[08:55:36] <blackleitus> if I Have 10 services = 10 databases
[08:55:37] <wallbroken> ok, now i'm without boss
[08:55:38] <wallbroken> good
[08:55:43] <PaulWay[w]> Importing the necessary models into the management views will give you access to what you want.
[08:55:49] <PaulWay[w]> wallbroken: sorry to hear that.
[08:56:13] <blackleitus> my settings on db service-1 , service-2 , service-n
[08:57:22] <PaulWay[w]> What are you trying to achieve here blackleitus?
[08:58:21] <blackleitus> I am just trying to build a manager to hold multiples services databases , imports from dashboard view , etc
[09:00:26] <PaulWay[w]> Can you give us an example of a service?
[09:00:44] <PaulWay[w]> What do you want to manage about these services?
[09:09:24] <name__> this sounds a lot like kubernetes which is what I am trying to use for production for the first time. Anyone got some yml files I could look at for their kubernetes setup?
[09:09:43] <blackleitus> example. the services are just apis , but I also need human people who help me with research in order to map data where this cant be automated , but an admin will push their research analyst via ui django custom admin
[09:11:54] <FunkyBob> stop saying 'admin'
[09:12:02] <FunkyBob> it will make people think you mean django.contrib.admin
[09:12:02] <PaulWay[w]> It sounds like you need a bit of a rethink about how your project is structured.
[09:12:21] <FunkyBob> i'd recommend saying 'interface' or 'management console' or something instead
[09:13:40] <name__> none of you use kubernetes for your django apps?
[09:14:10] <FunkyBob> err... no
[09:14:28] <PaulWay[w]> Not directly.
[09:14:41] <name__> what do you use? Old fashioned linux non-container way?
[09:14:57] <FunkyBob> what, you think we can't use containers without k8s?
[09:15:00] <PaulWay[w]> Our project uses OpenShift, but all that detail is abstracted away from me.
[09:15:25] <wallbroken> FunkyBob: do you think is possible to do what i want?
[09:15:36] <FunkyBob> wallbroken: I wasn't reading... what do you want?
[09:16:01] *** Quits: niv (~niv@limbo.cypherpunks.io) (Quit: Powered by LunarBNC: https://LunarBNC.net)
[09:16:05] *** Quits: user (~user@mail.justa.dev) (Remote host closed the connection)
[09:16:05] <PaulWay[w]> I think he wants to only show things that haven't been already marked as sold to someone else?
[09:16:07] <wallbroken> everytime i add an item to the cart, a check should verify that the specific item hasn't the "ordered" field selected for every user
[09:16:23] <PaulWay[w]> And, yes, that's possible.
[09:16:26] <FunkyBob> for _every_ user?
[09:16:36] <FunkyBob> sure, it's possible.. you can put in whatever checks  you want
[09:16:43] <wallbroken> yes, "ordered" is an m2m field
[09:16:48] <name__> Sure you can use containers without k8s like with docker-compose or docker swarm but like anything there are pros/cons to this
[09:16:52] <PaulWay[w]> I think the question is: at what point does an item become ordered?
[09:17:07] <wallbroken> and an user cannot ordered something that has lready ordered by something else
[09:17:07] <PaulWay[w]> Because you should start by only showing things that aren't ordered.
[09:17:29] <FunkyBob> name__: well, your leap from "if you don't use k8s you must raw linux" ... seemed to suggest you thought otherwise
[09:17:45] <wallbroken> PaulWay[w]: the idea is that in the main page i show unavailable items in a different color
[09:17:48] <PaulWay[w]> If you're recording stock levels, then just make sure you only show items that have more than one (pair) in stock.
[09:18:08] <name__> oh sorry i was just wondering how you deployed to production there are way too many ways
[09:18:25] <FunkyBob> name__: yes... there are many ways... that's one of the great laments
[09:18:50] <FunkyBob> i've worked in projects that used git-pull/git-clean with fabric... others that use docker...
[09:19:01] <PaulWay[w]> For us it involves a precise calculation of the phase of the moon, 10cc of mouse blood, fork handles, and a compass that only points east.
[09:19:06] <FunkyBob> and some that would spin up new vps images, and green/blue over with aws
[09:19:21] <name__> wow interesting
[09:20:06] <FunkyBob> PaulWay[w]: 10cc of mouse blood?  we're not trying to summon Death, you know!
[09:20:16] <name__> i ask about kubernetes bc it seems more hip and more scalable for the long term. But there are a lack of tutorials with how to do it with django
[09:20:26] <PaulWay[w]> There's a mouse plague on here, we need to use them up.
[09:20:32] <FunkyBob> fair point
[09:20:35] <name__> So I was hoping I could see what some of you did if you used kubernetes
[09:20:58] <PaulWay[w]> I don't think kubernetes is a deployment system.
[09:21:06] <PaulWay[w]> I think it's a routing system.
[09:21:15] *** Joins: diek (~diek@2804:14d:7681:82bd:859a:5a5a:f72e:2420)
[09:21:22] <name__> yes for your django app
[09:21:26] <PaulWay[w]> There are other things that make a deployment system using k8s to control routing.
[09:23:37] <name__> idk whether i should just deploy non-containerized then move to kubernetes containerized later because there is so much to learn with kubernetes :/
[09:25:44] *** Quits: diek (~diek@2804:14d:7681:82bd:859a:5a5a:f72e:2420) (Ping timeout: 244 seconds)
[09:28:58] <PaulWay[w]> I'd go with containers but not kubernetes.
[09:30:55] <name__> i already have docker-compose ready there was a nice tutorial
[09:31:15] <PaulWay[w]> I'm biased but I'd also recommend podman.
[09:31:40] <name__> but the cons of swarm compared to kubernetes are making me not want to use swarm as much
[09:31:54] *** Quits: ljetibo (~ljetibo@c-24-17-59-126.hsd1.wa.comcast.net) (Quit: Leaving)
[09:32:03] <name__> yea podman is better
[09:33:22] <PaulWay[w]> Need coffee.
[09:33:37] <name__> enjoy
[09:39:43] <wallbroken> FunkyBob: do you think is easy to do the improvement i asked?
[09:40:16] <wallbroken> i just need to check if that m2m fiald hasn't selected users in it
[09:52:08] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 265 seconds)
[09:52:35] *** Joins: cliluw (~cliluw@47.147.80.149)
[10:05:50] *** Quits: name__ (~sed@pool-100-7-53-231.rcmdva.fios.verizon.net) (Ping timeout: 258 seconds)
[10:14:02] *** Joins: Crassus (~Crassus@user/crassus)
[10:31:48] *** Joins: anas (~anas@196.235.97.18)
[10:35:26] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 268 seconds)
[10:42:17] *** Joins: mattil (~mattil@d4sncqdk7rswzk8728z-4.rev.dnainternet.fi)
[10:45:03] *** Quits: mattil (~mattil@d4sncqdk7rswzk8728z-4.rev.dnainternet.fi) (Remote host closed the connection)
[10:50:33] *** Joins: mihael (~mihael@2001:4454:27d:2200:f05f:5ae5:39:4f2c)
[10:53:19] *** Quits: mihael (~mihael@2001:4454:27d:2200:f05f:5ae5:39:4f2c) (Client Quit)
[10:54:58] *** Quits: blackleitus (~blackleit@189.195.192.28) (Ping timeout: 265 seconds)
[10:55:23] *** Joins: blackleitus (~blackleit@189.195.192.28)
[10:55:53] *** Joins: weewoo (~weewoo@S0106bc4dfbe53d33.ed.shawcable.net)
[10:57:09] *** Quits: weewoo (~weewoo@S0106bc4dfbe53d33.ed.shawcable.net) (Remote host closed the connection)
[10:57:57] *** Joins: mattil (~mattil@d4sncqdk7rswzk8728z-4.rev.dnainternet.fi)
[10:58:28] *** Joins: doc|work (~doc@user/doc)
[10:58:41] *** Joins: clawh (~clawh@185.244.214.60)
[10:59:15] *** Joins: weewoo (~weewoo@S0106bc4dfbe53d33.ed.shawcable.net)
[10:59:42] <doc|work> Hi, I have a settings.py that pulls environment variables to do things like db host and secret_key, but when I run "python manage.py test" it all goes full breaky mode. How do people get environment variables to be read from a .env file in a situation like this?
[11:00:17] <weewoo> https://dpaste.org/WYRo      .save() is taking over 6 minutes.
[11:00:37] <weewoo> (Using DRF). Is this normal?
[11:00:54] *** Joins: felixx (felixx@django/moderator/felixx)
[11:00:54] *** ChanServ sets mode: +v felixx
[11:00:55] <weewoo> Should I avoid using DRF for something like this?
[11:00:58] <GinFuyou> I thought environment variables and reading from file are 2 very different things...
[11:01:32] <doc|work> 20,000 rows is a lot. Depends also on your relationships if any need updates too. You looked at the queries?
[11:02:00] <weewoo> No relationships in that table which is why I skipped that
[11:02:26] <GinFuyou> Why are you writing so much data at once?
[11:02:28] <weewoo> I figure it should be faster since DataFrame.to_sql() is almost instant
[11:02:28] <doc|work> GinFuyou, well there happens to be a .env file because docker uses it, so I figured that's worth accessing in this case. I was hoping there'd be some way of having setup.cfg read/set it, like a source env.sh type deal.
[11:02:41] <doc|work> *read & set it
[11:03:07] *** Quits: mattil (~mattil@d4sncqdk7rswzk8728z-4.rev.dnainternet.fi) (Read error: Connection reset by peer)
[11:03:33] <GinFuyou> doc|work, it probably something different from django
[11:03:41] <GinFuyou> e.g. I know that pipenv does it
[11:03:59] *** Joins: salman (~user@user/salman)
[11:04:02] <weewoo> I’m writing this many rows to try and keep data synced between my DB and a supplier db. The data changes quite frequently
[11:04:18] <doc|work> sure, django's reading from the environment set up by docker which handles the .env file. Not very useful though for when I want to run python manage.py test locally.
[11:05:00] <GinFuyou> Well, could use pipenv locally as one option
[11:05:01] <wallbroken> hello GinFuyouhave you got some idea on how to make my improvement?
[11:06:05] <wallbroken> https://github.com/ClaudioViti/lookbook/blob/multi-user/shoes/views.py#L63
[11:06:32] <wallbroken> i just want that when sending the order, is checked that every item hasn't ordered yet by another user
[11:06:32] <GinFuyou> wallbroken, ordered was m2m on Shoe?
[11:06:50] <doc|work> GinFuyou, but then I'd have to use pipenv :) Just using pip for this project
[11:06:58] <doc|work> I do have  venv, but it doesn't read the .env
[11:07:10] <wallbroken> GinFuyou: yes
[11:07:38] <GinFuyou> well you could check if ....ordered.exists() I guess?
[11:08:14] <wallbroken> GinFuyou: i need to check that for that item, the "ordered" field doesn't have any associated user
[11:09:10] <GinFuyou> doc|work, could use something else I guess, I just named what I used. I guess there would be python libs that could do it to
[11:09:18] <GinFuyou> *too
[11:09:48] * doc|work nods
[11:10:20] <doc|work> was hoping someone might know a better defined way than me writing some script to dump the .env into environment variables and then having to remember every time
[11:10:50] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:5642:78c3:490c:d48) (Ping timeout: 252 seconds)
[11:12:31] <mattmcc> doc|work: Source the .env file in postactivate?
[11:14:20] *** Quits: weewoo (~weewoo@S0106bc4dfbe53d33.ed.shawcable.net) (Remote host closed the connection)
[11:14:35] <wallbroken> GinFuyou: here?
[11:14:49] <GinFuyou> Yes
[11:15:25] <doc|work> mattmcc, well that might work! I didn't even know post activate was a thing! I might be able to lose a script in fact. I need to find some docs for that
[11:16:41] *** Joins: yanchai (~yanchai@124.105.86.225)
[11:16:49] *** Joins: weewoo (~weewoo@s0106bc4dfbe53d33.ed.shawcable.net)
[11:17:05] *** Joins: mattil (~mattil@d4sncqdk7rswzk8728z-4.rev.dnainternet.fi)
[11:18:23] <wallbroken> GinFuyou: what your idea?
[11:18:48] <GinFuyou> one I stated, using exists
[11:18:48] *** Quits: weewoo (~weewoo@s0106bc4dfbe53d33.ed.shawcable.net) (Remote host closed the connection)
[11:19:15] <wallbroken> where?
[11:19:40] <GinFuyou> <GinFuyou> well you could check if ....ordered.exists() I guess?
[11:21:37] <wallbroken> https://dpaste.org/hRzu#L11
[11:24:11] <doc|work> mattmcc, know if there's anything similar with virtualenv? There's no postactivate script, and if I edit the activate script it'll only be set up for this machine.
[11:24:19] <GinFuyou> Ah, that view? Well I guess it works too, but maybe there is a more efficient way
[11:24:42] <doc|work> would be nice if there was something to add to git, so it's everywhere
[11:25:21] <GinFuyou> for once you may instead annotate ordered count on queryset and check if its == 0
[11:26:26] <wallbroken> 'int' object has no attribute 'exists'
[11:27:06] <wallbroken> my fault
[11:27:41] <wallbroken> mmm no
[11:27:43] <wallbroken> not working
[11:27:46] <wallbroken> i receive a blank mail
[11:28:00] <wallbroken> what .exists does it do?
[11:28:24] <mattmcc> doc|work: I'm kinda behind the curve as far as venv goes, not sure if there's a modern day hook similar to that..
[11:28:33] *** Joins: pycode (~pycode@2001:b07:5d28:551:bd9f:5520:e6c3:94e4)
[11:29:03] <GinFuyou> wait, itm.ordered is an m2m? or int of order count?
[11:29:22] *** Quits: blackleitus (~blackleit@189.195.192.28) (Ping timeout: 252 seconds)
[11:29:46] <doc|work> mattmcc, no prob. Going through the docs there doesn't seem to be. Thanks anyway
[11:29:46] <wallbroken> it was my mystake
[11:29:54] <wallbroken> the right field is called ordered_user
[11:31:19] *** Quits: anas (~anas@196.235.97.18) (Ping timeout: 258 seconds)
[11:31:42] <GinFuyou> ok, well line 7 adds order to current user prior to it, so yeah, it will not work
[11:32:48] <wallbroken> so, i should check it before line 7
[11:32:58] <wallbroken> and then save the state into a variable
[11:33:35] *** Quits: mattil (~mattil@d4sncqdk7rswzk8728z-4.rev.dnainternet.fi) (Remote host closed the connection)
[11:33:41] <GinFuyou> well I guess it could be re-worked more efficiently
[11:35:34] *** Quits: salman (~user@user/salman) (Ping timeout: 265 seconds)
[11:36:31] *** Joins: blackleitus (~blackleit@189.195.192.28)
[11:37:21] <wallbroken> https://dpaste.org/Yq3z#L17
[11:37:25] <wallbroken> i've moved it here
[11:37:29] <wallbroken> looks like it work
[11:38:12] <wallbroken> but i guess the user should know that some of their item hasn't been ordered due to they were busy.
[11:38:17] <wallbroken> i don't know how
[11:38:49] <wallbroken> i could add an ... else
[11:40:15] <GinFuyou> wallbroken, https://dpaste.org/Rh6O
[11:41:37] <wallbroken> GinFuyou: not sure what you have done
[11:42:29] *** Joins: mattil (~mattil@d4sncqdk7rswzk8728z-4.rev.dnainternet.fi)
[11:43:21] <GinFuyou> removed [12:10:29] <wallbroken> GinFuyou: what?
[12:11:06] *** Joins: diek (~diek@2804:14d:7681:82bd:859a:5a5a:f72e:2420)
[12:14:43] *** Quits: doc|work (~doc@user/doc) (Ping timeout: 265 seconds)
[12:15:06] <pycode> dodo, pardon for the stupid things but can a requirements.txt leave inside an app ? i mean lets suppose i share the app that needs this external module... how can i tell that it needs other external module to work correctly?
[12:16:03] *** Quits: diek (~diek@2804:14d:7681:82bd:859a:5a5a:f72e:2420) (Ping timeout: 268 seconds)
[12:18:35] <dre> pycode: leave it outside. anything that your entire project runs will be loaded up in time for the app, etc
[12:18:50] *** Quits: dre (~dre@120.156.36.108) (Quit: WeeChat 2.8)
[12:18:57] <pycode> ok
[12:20:58] *** Joins: especial (~especial@cm-84.214.207.74.getinternet.no)
[12:23:30] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[12:23:44] <pycode> dre another question, how is it called the main app on a django project? base? main? core?
[12:23:58] <pycode> what is the common name used in this case
[12:35:58] <wallbroken> GinFuyou: you cannot do remove of queryset
[12:36:04] <wallbroken> queryset does contain all the tiems
[12:39:10] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[12:40:42] <wallbroken> ok, did that my way
[12:43:21] <wallbroken> https://dpaste.org/wYeS#L10,16,20
[12:43:26] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 252 seconds)
[12:43:31] *** Joins: wattux (~wattux@212.51.23.106)
[12:43:33] <wallbroken> this is how I did it
[12:43:58] <wallbroken> i added each item to be removed from the cart in itm_remove
[12:44:16] <wallbroken> then i passed that variable to .remove()
[12:44:29] <wallbroken> you cannot pass the entire queryset
[12:44:39] <wallbroken> just because the queryset contains all the items
[12:44:39] <GinFuyou> Sure you can
[12:44:48] <GinFuyou> There was whole point in it
[12:45:29] <wallbroken> you don't like how i made it?
[12:45:53] <GinFuyou> I reworked it for a reason
[12:47:48] <dodo> pycode: if you want to distribute your app the requirement would be in the setup.py and the documentation
[12:48:20] *** Joins: ironm (~devops@2a02:1205:34f8:5120:5604:a6ff:fe8a:d50d)
[12:48:29] <pycode> dodo yes but i mean i would like to distribute the app only not the entire project so i am asking if i need to put the requirements.txt inside that app
[12:50:53] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[12:52:29] <ironm> Good morning. Short question: I have "MEDIA_ROOT = os.path.join(BASE_DIR, 'uploads/')" and " MEDIA_URL = '/uploads/' " in settings.py. What is the right syntax to use the MEDIA path instead of the absolute value in the following statement? .. destination = open('/var/www/ws/uploads/' + dest_file_name, 'wb+')
[12:56:09] *** Joins: browniebroke (uid501792@id-501792.tinside.irccloud.com)
[12:59:45] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[13:01:21] <pycode> guys do you usually hold all yours apps inside an "apps" folder?
[13:03:00] <doc> pycode: if you run python manage.py startapp <appname> it'll put the app in the correct folder
[13:03:28] <ironm> pycode, I hold apps inside the project folder (like /var/www/ws/project_name/apps{1..n] )
[13:04:17] <pycode> ironm, do make it clear you mean under the fodler that contain settings.py ?
[13:04:23] <doc> pycode: how are you planning to distribute it?
[13:04:34] <pycode> no no i am not planning to distribute..
[13:04:43] <doc> <pycode> dodo yes but i mean i would like to distribute the app only not the entire project so i am asking if i need to put the requirements.txt inside that app
[13:04:45] <pycode> just a way to organize "better" the structure of the entire project
[13:05:00] <pycode> doc just for asking in that case
[13:05:04] <GinFuyou> ironm, os.path.join(settings.MEDIA_ROOT, dest_file_name) or even better - use pathlib
[13:05:07] <pycode> now i am asking[13:43:46] <FunkyBob> so, if you put your media  and static under /var/www/{static|media}/ then you don't need to put new rules in your nginx/apache config
[13:45:16] <ironm> I see. I have them currently in /var/www/ws/{static|uploads}
[13:45:48] <ironm> ws is for "web services"
[13:47:46] *** Joins: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:5642:78c3:490c:d48)
[13:49:42] <FunkyBob> fair enoug... '/var/www/' is a common place for web servers to serve content from by default
[13:50:24] *** Joins: GiLgAmEzH (~gilgamezh@186.19.69.139)
[13:51:54] <ironm> thank you FunkyBob :-)
[14:04:28] <ironm> well: "destination = open(settings.MEDIA_ROOT + dest_file_name, 'wb+')" gives me an error message like "Exception Value: name 'settings' is not defined"
[14:05:37] <FunkyBob> where is that being used?
[14:05:48] <FunkyBob> typically you import settings using:  from django.conf import settings
[14:06:09] <ironm> FunkyBob, a good point, thank you. I habve to check
[14:06:14] <ironm> have
[14:22:00] *** Quits: explore (uid233125@id-233125.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[14:25:42] *** Joins: borgdrone7 (uid51855@id-51855.tooting.irccloud.com)
[14:32:48] <ironm> GinFuyou, FunkyBob : thanks a lot. It is working now as expected. " from django.conf import settings / destination = open(settings.MEDIA_ROOT + dest_file_name, 'wb+') "
[14:33:38] <ironm> GinFuyou, and settingd.MEDIA_URL does not work as you said
[14:34:07] <ironm> it points only to "uploads/" and not the whole path
[14:37:29] *** Joins: pradhvan (~pradhvan@103.94.114.237)
[14:40:32] <jor> should really go through the django file storage API (django.core.files.storage.get_storage_class) if you wanna read media files
[14:41:24] <jor> media_root _usualy_ points to a local filesystem... but once somebody throws something like S3 into the mix that changes ;p
[14:42:45] <ironm> thanks a lot jor. I will check django.core.files.storage.get
[14:45:09] <ironm> FunkyBob, a very helpful and clear introduction (https://blog.tinbrain.net/tutorials/simple-django-deploy.html), thank you !
[14:45:33] <FunkyBob> ironm: feedback is welcom... it's all on github if you feel it needs any clarification
[14:45:57] <ironm> I use apache2 but nginx is probably a good or better choice
[14:46:26] <ironm> I see, thank you FunkyBob
[14:50:07] <ironm> Currently I use "class FileUploadView(APIView):" and "parser_classes = [FileUploadParser]" for uploading of ninary as well as json files.
[14:52:18] <ironm> Even the POST method  ( def post(self, request, format='jpg'): ) I am able to use the "online" params ( like: actiondata = request.GET.get('action', '') )
[14:52:55] <ironm> s/ninary/binary/
[14:53:46] <FunkyBob> ok.... well, I wont' be able to help with DRF stuff...
[14:53:57] <ironm> I do not need to parse the uploaded json files, so it seems to be Ok
[14:55:17] <ironm> FunkyBob, thank you, you have helped me already perfectly
[14:57:45] <ironm> I miss some working stuff in django like public key based authorization (for logins)
[14:59:07] <jor> drf's fileUploadParser probably doesn't read/parse the GET params from the url, since that's quite weird to use for a POST :/
[15:02:02] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 252 seconds)
[15:02:52] *** Joins: cliluw (~cliluw@47.147.80.149)
[15:04:14] <ironm> jor .. " actiondata = request.GET.get('action', '') " is working however inside " def post(self, request, format='jpg'): "
[15:04:36] <ironm> in parallel to " up_file = request.FILES['file'] "
[15:05:46] <ironm> so I can use those params to define the file name saving the file locally
[15:07:35] <jor> not sure what you are doing. But normally you would use request.data in DRF to get the parsed request. And the filename is an url parameter 'filename' by default in the FileUploadParser
[15:09:26] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Ping timeout: 258 seconds)
[15:12:05] <ironm> jor, I use like: curl -X POST -S -H "Content-Disposition: attachment; filename=RequestList.json" -k  -u "admin:just4TEST" -F "file=@RequestList.json;type=image