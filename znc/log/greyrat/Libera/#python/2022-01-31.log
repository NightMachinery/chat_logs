[00:00:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[00:00:22] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[00:00:54] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[00:00:56] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[00:02:00] *** Joins: novapy (~chronos@c-68-62-193-246.hsd1.fl.comcast.net)
[00:02:18] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[00:02:46] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[00:02:56] *** Quits: Comb (~Comb@83-233-130-113.cust.bredband2.com) (Remote host closed the connection)
[00:03:16] *** Quits: PurpleBooger (~purpleboo@047-040-214-188.res.spectrum.com) (Remote host closed the connection)
[00:03:48] *** Joins: PurpleBooger (~purpleboo@047-040-214-188.res.spectrum.com)
[00:03:54] *** Quits: PurpleBooger (~purpleboo@047-040-214-188.res.spectrum.com) (Remote host closed the connection)
[00:04:06] *** Joins: PurpleBooger (~purpleboo@047-040-214-188.res.spectrum.com)
[00:04:10] *** Quits: mawk (~mawk@wireguard/contributor/mawk) (Ping timeout: 260 seconds)
[00:04:54] <sveinse> Does set preserve insertion order like dict now does?
[00:05:41] *** Quits: vindex10 (~vindex10@gateway/tor-sasl/vindex10) (Remote host closed the connection)
[00:06:06] *** Joins: vindex10 (~vindex10@gateway/tor-sasl/vindex10)
[00:06:17] <sydbarret> anybody has used adwords api?
[00:06:29] <lambda> sveinse: no
[00:07:04] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[00:08:59] *** Joins: sq (~sq@109.248.149.11)
[00:09:55] *** Joins: schism (~schism@cpe-23-242-108-60.socal.res.rr.com)
[00:10:07] <pulec> I will have 20 minutes to grind my pottentionaly new colleague with python questions, his CV says 2 years of experience or so
[00:10:13] <pulec> I found this https://www.reddit.com/r/Python/comments/1knw7z/python_interview_questions/ + links in it
[00:11:37] <pulec> since we are doing only salt and usually write simple scripts I should keep it easy, avoid anything that goes on with classes too deeply or anything where there is a huge codebase, e.g. big django website
[00:12:40] *** Joins: portalrat (~portalrat@user/portalrat)
[00:13:03] *** Joins: ntropy (~ntropy@90-227-49-94-no88.tbcn.telia.com)
[00:13:12] *** Joins: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com)
[00:13:29] *** Joins: slav0nic (slav0nic@python.su)
[00:13:44] *** Quits: Strom (strom@fedora/strom) ()
[00:14:01] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[00:14:18] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[00:14:40] <TML> sydbarret: You're just taking a poll about who's used the API, or did you have some question pertaining to it?
[00:15:40] *** Joins: Elodin (~weechat@user/elodin)
[00:15:49] *** Quits: marius_m (~marius@84.211.92.9) (Quit: Leaving)
[00:15:49] *** Joins: Strom (strom@fedora/strom)
[00:16:24] <sydbarret> TML adwords api is gonna expire and they are asking to move to their new google ads api. I wanna know how you migrate oauth2.GoogleRefreshTokenClient(
[00:16:24] <sydbarret>  client_id, client_secret, refresh_token) line of code to the new one
[00:16:30] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[00:16:51] <sydbarret> what would be the equivalence that is
[00:16:57] *** Joins: mawk (~mawk@wireguard/contributor/mawk)
[00:17:00] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[00:17:06] *** Joins: alaudet (~al@129.222.118.244)
[00:17:38] <sydbarret> TML so how to convert this piece of code https://programtalk.com/vs2/python/4903/googleads-python-lib/examples/adwords/authentication/create_adwords_client_without_yaml.py/
[00:18:20] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[00:18:37] *** Joins: wyatt (~wyatt@2600:6c4a:407f:f501:781d:f1b9:7c42:1265)
[00:19:22] *** Quits: wyatt (~wyatt@2600:6c4a:407f:f501:781d:f1b9:7c42:1265) (Client Quit)
[00:19:45] *** Joins: wyatt (~wymiller@2600:6c4a:407f:f501:781d:f1b9:7c42:1265)
[00:19:54] *** Joins: marius_m (~marius_m@84.211.92.9)
[00:20:05] <TML> sydbarret: you're not using google-api-python-client?
[00:20:30] *** Quits: ntropy (~ntropy@90-227-49-94-no88.tbcn.telia.com) (Ping timeout: 260 seconds)
[00:20:33] <sydbarret> TML I am
[00:20:48] *** Joins: ntropy (~ntropy@146.70.21.20)
[00:20:51] <sydbarret> I already installed
[00:21:10] <sydbarret> but someone gave me old adwords api code
[00:21:19] <sydbarret> that used old googleads package
[00:21:28] <sydbarret> which i think doestn support google ads api
[00:21:30] *** Quits: jayray (~jayray@user/jayray) (Ping timeout: 250 seconds)
[00:22:37] <sydbarret> There is a sample here https://github.com/googleads/google-ads-python/blob/HEAD/examples/authentication/authenticate_in_web_application.py
[00:22:49] *** Joins: nceric (~nceric@76-217-82-15.lightspeed.chrlnc.sbcglobal.net)
[00:22:51] <nicoz> hi guys
[00:23:01] <nicoz> https://paste.debian.net/1228986/
[00:23:03] <sydbarret> Im wondering what would be the equivalency
[00:23:25] <sydbarret> for those 2 lines which are oauth2_client = oauth2.GoogleRefreshTokenClient(client_id, client_secret, refresh_token) and ac = adwords.AdWordsClient(developer_token, oauth2_client, user_agent)
[00:23:32] <TML> sydbarret: In google-api-python-client, you just provide a YAML file with your credentials and the client abstracts all the oauth2 stuff for you
[00:23:45] <TML> You don't need to manually refresh your token
[00:24:16] *** Joins: jayray (~jayray@user/jayray)
[00:25:17] <sydbarret> TML and what about line 85?
[00:25:24] <sydbarret> it says refresh token
[00:25:26] <nicoz> how to extract the result.append bullseye[0].text_content()
[00:25:28] <nicoz> ?
[00:25:31] <nicoz> https://paste.debian.net/1228986/
[00:25:52] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.5-dev)
[00:25:57] *** Joins: omegatron (~some@p5b056436.dip0.t-ipconnect.de)
[00:26:00] <TML> nicoz: Did you mean for page to be an f-string?
[00:26:12] *** Joins: r3m (~launch@user/r3m)
[00:26:17] *** Quits: wyatt (~wymiller@2600:6c4a:407f:f501:781d:f1b9:7c42:1265) (Quit: wyatt)
[00:26:18] <TML> page = requests.get('https://packages.debian.org/{namepkg}')
[00:26:48] *** Joins: wymiller_ (~wymiller@2600:6c4a:407f:f501:781d:f1b9:7c42:1265)
[00:27:09] <nicoz> I would like a result to hang from that xpath
[00:27:15] *** Quits: micw (~micw@ip-109-42-242-169.web.vodafone.de) (Quit: Leaving)
[00:27:26] <nicoz>     bullseye = tree.xpath('//*[@id="psearchres"]/ul[1]/li[3]')
[00:27:50] <TML> nicoz: What is 'html' in this context?
[00:28:09] <TML> html.fromstring
[00:28:25] *** Joins: medium_cool (~medium_co@136.36.128.48)
[00:29:17] <nicoz> is a function called by a bot, I must return to irc the result
[00:29:43] <TML> nicoz: What does type(html) say?
[00:30:10] <TML> sydbarret: I'm not sure what your question is about line 85
[00:30:42] *** Joins: ivii (~ivan@user/ivii)
[00:31:32] <sydbarret> TML if you say there is no need to refresh the token why line 85  is refreshing it?
[00:31:50] <TML> sydbarret: Read the next block of code: the refresh token being generated at line 85 is going to be used in the YAML file I told you about.
[00:32:07] <nicoz> TML lxml
[00:32:08] <nicoz> https://paste.debian.net/1228987/
[00:33:12] *** Quits: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9) (Quit: Leaving)
[00:33:14] <TML> sydbarret: it even links to the documentation on how to correctly construct your YAML file, just a few lines down from there
[00:33:36] *** Quits: alaudet (~al@129.222.118.244) (Quit: Leaving)
[00:33:41] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:50b5:b57f:7251:ce23) (Ping timeout: 245 seconds)
[00:33:49] <sydbarret> TML same was with adwords api but the first link I sent you says create_adwords_client_without_yaml.py
[00:33:56] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[00:34:05] <sydbarret> so question is if there is a way to do the same with the new package?
[00:34:08] *** Quits: gossie (~gossie@2001:1c02:11e:c700:4a28:456f:cfe0:5c8e) (Remote host closed the connection)
[00:34:08] *** Quits: vindex10 (~vindex10@gateway/tor-sasl/vindex10) (Quit: vindex10)
[00:34:16] <nicoz> I wish the result returns it to me in text_content
[00:34:26] *** Joins: gossie (~gossie@2001:1c02:11e:c700:4a28:456f:cfe0:5c8e)
[00:34:30] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[00:34:49] <TML> nicoz: As this code stands right now, you'll never have anything in bullseye[0].text_content() because bullseye will always be an empty list
[00:34:52] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[00:35:41] <nicoz> Did you see the last paste?
[00:35:46] <nicoz> https://paste.debian.net/1228987/
[00:35:56] <TML> yes
[00:35:56] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:36:41] <nicoz> How do I report the return of the required xpath?
[00:36:45] *** Quits: duds- (~duds-@gateway/tor-sasl/duds) (Ping timeout: 276 seconds)
[00:36:45] <nicoz> in text
[00:37:01] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[00:37:05] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[00:37:28] <TML> nicoz: First you have to fix your request.get()
[00:37:40] <TML> Right now, that line will never return any package details
[00:39:16] *** Quits: smrtz (~smrtz@user/smrtz) (Quit: Client closed)
[00:39:49] *** Joins: naranja (~orange@user/orangeboxcutter)
[00:41:32] <nicoz> ok
[00:42:14] <nicoz> after fixing the request.get?
[00:42:32] *** Joins: bluedust (~bluedust@103.161.144.140)
[00:42:38] <nicoz> I beg your pardon, but xpath I never used
[00:42:45] <TML> nicoz: Then fix your xpath so you're not doing element counting on the li's, since every package may have a different number of li's; maybe try something like '//*[@id="psearchres"]/ul[1]/li[contains(@class,"bullseye")]'
[00:44:24] <TML> once you've done that, things like bullseye[0].text_content() should work just fine
[00:45:19] <nicoz>   result.append('Pacchetto: ', bullseye[0].text_content())
[00:45:19] <nicoz> TypeError: list.append() takes exactly one argument (2 given)
[00:46:07] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[00:46:58] <TML> nicoz: Yes, so fix that - you're passing too many arguments to result.append()
[00:47:05] *** Quits: erhandsome (~erhandsom@user/erhandsome) (Ping timeout: 252 seconds)
[00:47:22] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 256 seconds)
[00:47:34] *** Quits: bluedust (~bluedust@103.161.144.140) (Ping timeout: 260 seconds)
[00:48:17] *** Quits: bzyx (~quassel@89-69-20-238.dynamic.chello.pl) (Ping timeout: 240 seconds)
[00:49:05] <TML> nicoz: That's not an xpath problem, it's just you calling append incorrectly: result.append("string1", "string2") would throw the same exception
[00:55:09] *** Joins: yaalon (~yaalon@189.224.134.252)
[00:56:42] *** Quits: schism (~schism@cpe-23-242-108-60.socal.res.rr.com) (Quit: Lost terminal)
[00:56:49] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[00:57:22] *** Joins: c4017w_ (~c4017@209.52.68.8)
[00:57:42] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[00:57:49] *** Joins: Guest3 (~Guest3@88-115-79-133.elisa-laajakaista.fi)
[00:57:54] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl48akukaf28q8ljx.ipv6.telus.net)
[00:58:42] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[00:58:48] *** Joins: humbertowoody (~humbertow@189.236.19.103)
[00:59:51] *** Joins: cjb (~cjb@user/cjb)
[01:00:41] *** Joins: bzyx (~quassel@89-69-20-238.dynamic.chello.pl)
[01:00:58] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[01:01:32] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[01:02:16] *** Joins: panella32 (~panella32@185.198.243.150)
[01:05:02] <nicoz> TML : >>> bullseye = tree.xpath('//*[@id="psearchres"]/ul[1]/li[contains(@class,"bullseye")]')
[01:05:03] <nicoz> >>> bullseye
[01:05:37] <nicoz> calling it not even normally hunting anything anymore, before at least hunting something lol
[01:05:47] *** Quits: dreamon (~dreamon@pd9503a7e.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[01:05:50] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:06:02] <TML> [<Element li at 0x7f52b9e685e0>]
[01:06:11] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[01:06:46] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[01:07:47] <TML> https://replit.com/@tml/BlindJitteryLoopfusion#main.py
[01:08:04] <TML> print([bullseye, bookworm, sid]) -> [[<Element li at 0x7f77b5633bd0>], [<Element li at 0x7f77b5627db0>], [<Element li at 0x7f77b56400e0>]]
[01:09:10] <nicoz>  ['__add__', '__class__', '__contains__', '__delattr__', '__delitem__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__gt__', '__hash__', '__iadd__', '__imul__', '__init__', '__init_subclass__', '__iter__', '__le__', '__len__', '__lt__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__reversed__', '__rmul__', '__setattr__', '__setitem__', '__sizeof__', '__str__',
[01:09:31] <nicoz> '__subclasshook__', 'append', 'clear', 'copy', 'count', 'extend', 'index', 'insert', 'pop', 'remove', 'reverse', 'sort']
[01:10:26] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[01:10:26] *** Quits: mawk (~mawk@wireguard/contributor/mawk) (Ping timeout: 260 seconds)
[01:11:58] <TML> nicoz: You've mis-translated something somewhere. Look at the repl.it
[01:14:29] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[01:16:07] <nicoz> thanks TML ;)
[01:16:34] *** Joins: duds- (~duds-@gateway/tor-sasl/duds)
[01:16:58] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 260 seconds)
[01:17:55] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[01:18:03] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Client Quit)
[01:18:07] *** Joins: goldfish (~goldfish@user/goldfish)
[01:18:16] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Remote host closed the connection)
[01:20:11] *** Quits: Narrat (~omnius@p200300df5f4d4df406ea56fffe2e7cdc.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[01:21:07] *** Joins: domicron8 (~domicron@gateway/tor-sasl/domicron)
[01:21:11] *** Joins: morteza24 (morteza24@gateway/vpn/protonvpn/morteza24)
[01:22:08] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[01:22:18] *** Joins: audio (~audio@user/audio)
[01:22:59] *** Quits: goldfish (~goldfish@user/goldfish) (Client Quit)
[01:23:06] <morteza24> hi, does anybody here have a twitter developer account? I have this python script that I would like you to execute for me please: https://bpa.st/JCGA
[01:23:18] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[01:23:33] *** Quits: domicron (~domicron@gateway/tor-sasl/domicron) (Ping timeout: 276 seconds)
[01:23:34] *** domicron8 is now known as domicron
[01:23:37] *** Joins: therufuser (~therufuse@p5b02e60a.dip0.t-ipconnect.de)
[01:24:48] *** Joins: mawk (~mawk@wireguard/contributor/mawk)
[01:25:05] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:25:13] *** Joins: a6a45081-2b83 (~aditya@2601:249:4300:1296:88ec:cc73:84d4:1507)
[01:25:30] <nicoz> TML: I can not find the output that I had with the xpath before
[01:25:37] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[01:26:08] <nicoz> now it gives me a thousand folders and I don’t know where to find the outputs I had before
[01:26:13] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[01:28:39] *** Quits: magla (~gelignite@55d4f325.access.ecotel.net) (Quit: Stay safe!)
[01:29:16] *** Joins: korg815 (~korg815@user/korg815)
[01:30:06] <audio> Could some sort of "memory" system be built for an ever-increasingly large set of artificial neural networks that solve different tasks, from which this memory system could learn and solve new problems without having to be explicitly programmed?
[01:30:26] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[01:31:38] *** Joins: fubbe (~bubbe@151.41.185.44)
[01:31:47] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:32:08] *** Joins: ouestbillie (~gallup@192.222.211.58)
[01:32:56] *** Quits: yaalon (~yaalon@189.224.134.252) (Remote host closed the connection)
[01:32:57] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[01:33:06] *** Joins: structoha1 (~structoha@gateway/tor-sasl/structoha)
[01:33:23] <nedbat> audio: how would it know what is right?
[01:35:15] *** Quits: naranja (~orange@user/orangeboxcutter) (Remote host closed the connection)
[01:36:16] *** Joins: onichomp (~onichomp@2806:264:4408:2eb:c5be:6fee:c860:dd18)
[01:36:18] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[01:36:40] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[01:36:48] *** Joins: citizen_stig (~citizen_s@2001:982:9f64:1:a4e3:ad4b:910b:9e90)
[01:36:53] *** Quits: ntropy (~ntropy@146.70.21.20) (Ping timeout: 250 seconds)
[01:37:05] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:37:23] *** Joins: locrian9 (~mike@cpe-104-173-20-162.socal.res.rr.com)
[01:37:48] *** Quits: ouestbillie (~gallup@192.222.211.58) (Ping timeout: 256 seconds)
[01:38:24] *** Joins: Narrat (~omnius@p200300df5f0818b406ea56fffe2e7cdc.dip0.t-ipconnect.de)
[01:38:39] *** Joins: naranja (~orange@user/orangeboxcutter)
[01:39:46] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Quit: Leaving)
[01:40:21] *** Quits: fubbe (~bubbe@151.41.185.44) (Ping timeout: 245 seconds)
[01:40:21] *** Quits: Balzy (~Balzy@host-79-16-133-103.retail.telecomitalia.it) (Ping timeout: 245 seconds)
[01:40:39] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[01:40:56] *** Joins: Algernon666 (~Algernon6@2a01:e0a:511:6ce0:1c5c:392d:9c8d:7200)
[01:41:05] <audio> nedbat good question, not sure
[01:41:34] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[01:42:05] *** Joins: node1 (~hex@user/node1)
[01:42:24] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:42:48] <node1> How do i know `In a cycle how many words(in byte) of programmes  are getting executed` while executing python code?
[01:43:16] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10ed:252e:3d9b:c665:cba6:306b)
[01:44:58] <nedbat> node1: i don't understand the question
[01:45:02] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[01:45:40] *** Quits: CoolerY (~CoolerX@user/coolerx) (Quit: Leaving)
[01:46:03] *** Joins: Balzy (~Balzy@host-79-31-159-142.retail.telecomitalia.it)
[01:46:32] <node1> The question is  how many bytes of instructions does a processor or cpu execute in 1 cycle, If it possible to find using pythonic way?
[01:46:51] *** Quits: Algernon666 (~Algernon6@2a01:e0a:511:6ce0:1c5c:392d:9c8d:7200) (Ping timeout: 250 seconds)
[01:46:52] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[01:47:19] *** Joins: onur (~onur@static.88.107.46.78.clients.your-server.de)
[01:47:40] *** Quits: strugee_ (~strugee@ool-4575d6b1.dyn.optonline.net) (Quit: ZNC - http://znc.in)
[01:48:02] <node1> In C it is said that in general if your on 32 bit or 64 bit architecture 4 bytes and 8 bytes of instructions are getting executed per cpu cycle.
[01:48:15] *** Quits: onur (~onur@static.88.107.46.78.clients.your-server.de) (Changing host)
[01:48:15] *** Joins: onur (~onur@user/onur)
[01:48:20] *** Joins: yaalon (~yaalon@189.224.134.252)
[01:48:44] *** Quits: onur (~onur@user/onur) (Client Quit)
[01:48:49] <node1> So the question is here is it possible to find using python to justify the above statement.
[01:48:58] *** Joins: onur (~onur@static.88.107.46.78.clients.your-server.de)
[01:49:16] <nedbat> node1: i don't even know what a cpu cycle is these days with hyper-pipelined cpus.  I know that you can't figure it out from Python.
[01:49:26] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:11f6:5644:76a6:f278)
[01:49:30] <nedbat> node1: one python bytecode could be thousands of CPU instructions
[01:49:31] *** Quits: onur (~onur@static.88.107.46.78.clients.your-server.de) (Client Quit)
[01:49:44] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca)
[01:49:44] *** Joins: onur (~onur@static.88.107.46.78.clients.your-server.de)
[01:49:44] <node1> okay.
[01:50:20] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[01:51:32] *** Quits: citizen_stig (~citizen_s@2001:982:9f64:1:a4e3:ad4b:910b:9e90) (Quit: Textual IRC Client: www.textualapp.com)
[01:51:38] *** Quits: onur (~onur@static.88.107.46.78.clients.your-server.de) (Client Quit)
[01:51:52] *** Quits: urb4nm (~urb4nm@165.227.158.65) (Remote host closed the connection)
[01:51:54] *** Joins: onur (~onur@static.88.107.46.78.clients.your-server.de)
[01:51:58] *** Quits: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com) (Ping timeout: 260 seconds)
[01:52:11] *** Joins: urb4nm (~urb4nm@165.227.158.65)
[01:52:17] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 240 seconds)
[01:52:26] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[01:52:39] *** Joins: locrian9_ (~mike@cpe-104-173-20-162.socal.res.rr.com)
[01:53:00] *** Quits: a6a45081-2b83 (~aditya@2601:249:4300:1296:88ec:cc73:84d4:1507) (Remote host closed the connection)
[01:53:05] *** Quits: locrian9_ (~mike@cpe-104-173-20-162.socal.res.rr.com) (Client Quit)
[01:53:06] *** Quits: elias117 (~elias117@user/elias117) (Ping timeout: 256 seconds)
[01:53:10] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[01:54:17] *** Quits: Spr0cket (sprocket@user/Spr0cket) (Quit: x)
[01:54:32] *** Joins: Spr0cket (sprocket@user/Spr0cket)
[01:54:36] *** Joins: locrian9_ (~mike@cpe-104-173-20-162.socal.res.rr.com)
[01:54:40] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 250 seconds)
[01:55:10] *** Quits: locrian9 (~mike@cpe-104-173-20-162.socal.res.rr.com) (Quit: leaving)
[01:55:13] *** Quits: onur (~onur@static.88.107.46.78.clients.your-server.de) (Client Quit)
[01:55:16] *** Quits: locrian9_ (~mike@cpe-104-173-20-162.socal.res.rr.com) (Client Quit)
[01:55:22] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[01:55:26] *** Joins: onur (~onur@static.88.107.46.78.clients.your-server.de)
[01:55:31] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:55:32] *** Joins: locrian9 (~mike@cpe-104-173-20-162.socal.res.rr.com)
[01:55:58] *** Quits: klf (~klf@66.220.205.98) (Quit: Leaving)
[01:56:57] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[01:57:25] *** Quits: onur (~onur@static.88.107.46.78.clients.your-server.de) (Client Quit)
[01:57:38] *** Joins: onur (~onur@static.88.107.46.78.clients.your-server.de)
[01:57:41] *** Joins: dbbr (~dbbr___@2804:5f80:70a0:3700:c14c:7932:b014:9869)
[01:57:51] *** Quits: onur (~onur@static.88.107.46.78.clients.your-server.de) (Changing host)
[01:57:51] *** Joins: onur (~onur@user/onur)
[01:58:12] *** Joins: c4017w (~c4017@209.52.68.8)
[01:58:24] <bjs> nedbat: didn't you measure 10k instructions per print() call
[01:58:43] <bjs> (on some machine with some version of python etc etc)
[01:58:43] *** Joins: ouestbillie (~gallup@192.222.211.58)
[01:58:53] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[01:59:19] <nedbat> bjs: yes :)
[01:59:38] <nedbat> https://nedbatchelder.com/blog/201307/how_many_instructions_in_a_print_statement.html
[02:00:05] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[02:00:28] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[02:00:36] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 276 seconds)
[02:00:38] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Quit: ThePhilgrim)
[02:01:02] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[02:01:27] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:01:46] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[02:02:00] <nedbat> i should finally decide to move everything nedbat.com
[02:02:01] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[02:03:01] *** Joins: dtux_ (~dtux@c-98-207-149-218.hsd1.ca.comcast.net)
[02:03:20] *** Joins: mickey8 (~user@user/mickey)
[02:04:23] *** Quits: dtux (~dtux@2601:646:8f00:3f2:3d64:645:4c21:1bdc) (Ping timeout: 250 seconds)
[02:04:24] *** dtux_ is now known as dtux
[02:05:50] *** Joins: pepper (~pepper@user/pepper)
[02:05:55] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[02:06:22] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[02:06:46] *** Joins: gluon (~gluon@2a01:4f8:c0c:e2da::1)
[02:08:31] *** Quits: ouestbillie (~gallup@192.222.211.58) (Ping timeout: 250 seconds)
[02:08:53] *** Parts: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[02:08:57] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:11f6:5644:76a6:f278) (Ping timeout: 250 seconds)
[02:09:49] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 250 seconds)
[02:10:05] <toma> [name mangling] Is it possible to knwo if someone is mucking with a name mangled attribute?
[02:10:08] <node1> nedbat, nice blog
[02:10:23] <bjs> toma: what does "mucking with" mean exactly?
[02:10:27] *** Joins: ouestbillie (~gallup@192.222.211.58)
[02:10:50] <toma> bjs: accessing a variable without going through class methods
[02:10:56] <bjs> toma: that's not what name mangling does
[02:11:01] *** Quits: audio (~audio@user/audio) (Ping timeout: 256 seconds)
[02:11:04] <bjs> as the name suggests, all it does is a simple re-name of the attribute
[02:11:23] <bjs> toma: you can look at the attributes the object has (e.g. `dir(x)`) to see if there are any there that are mangled
[02:11:29] <toma> bjs: ah when I was reading about it it said something about "private"
[02:11:31] <bjs> __x => _TheClass__x
[02:11:52] <bjs> toma: no __names are not private
[02:11:56] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[02:12:18] <bjs> anyone can still access them,  they go through all the same machinery as any other attribute, they just have some junk prepended to the name
[02:12:47] <bjs> For private attributes, it's much more common (and in my opinion, better) to just use _names which don't do that mangling at all
[02:13:55] *** Quits: Betal (~Betal@user/betal) (Ping timeout: 250 seconds)
[02:14:05] <toma> And that's still not private in the sense that I don't have to use class methods to change those attributes, right?
[02:14:09] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 250 seconds)
[02:14:19] <bjs> toma: __names don't do that either
[02:14:25] <bjs> maybe you want a @property ?
[02:14:26] *** Joins: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com)
[02:14:42] <bjs> so you can make (certain) attributes read-only
[02:14:43] *** Quits: ouestbillie (~gallup@192.222.211.58) (Remote host closed the connection)
[02:14:54] <bjs> toma: but Python doesn't have "private" attributes
[02:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:10] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[02:15:22] <toma> bjs: @property hasn't been discussed in the stuff I'm reading. but thanks for clearing stuff up. this part got a little confusing with different authors saying different things.
[02:15:24] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Read error: Connection reset by peer)
[02:15:27] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[02:15:37] *** Quits: node1 (~hex@user/node1) (Quit: Leaving)
[02:15:46] *** Quits: mawk (~mawk@wireguard/contributor/mawk) (Ping timeout: 245 seconds)
[02:15:48] <bjs> toma: I think you can happily go the next 10 years of your life using Python every day, and never need to use __names.
[02:15:56] <nedbat> toma: python is really lenient, it's bad at preventing programmers from doing things
[02:15:56] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:16:20] <bjs> Sometimes I see people use them, it often doesn't get them anything and later on just causes confusion when it does something they weren't expecting
[02:17:05] <toma> bjs: cool. I'll try to find a use case for them later...
[02:17:12] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[02:17:28] <toma> nedbat: thanks. thanks for making that kindle page.
[02:17:30] *** Joins: JackRye (~JackRye@ool-ae2c037b.dyn.optonline.net)
[02:17:40] <bjs> toma: name mangling exists for when you have inheritance of classes,  sometimes you want a different version of the attribute for each class
[02:18:06] <bjs> name mangling provides an easy way to do that, instead of having _ClassA_var and _ClassB_var and _ClassC_var you just say __var and Python auto-renames it for you
[02:18:26] *** Quits: sydbarret (~anton@static-186-121-195-51.acelerate.net) (Quit: Going offline, see ya! (www.adiirc.com))
[02:19:01] <toma> bjs: thanks. [note to self: read above after next chapter]
[02:19:20] *** Joins: audio (~audio@user/audio)
[02:19:20] *** Joins: faLUKE (~paolo@host-82-59-128-89.retail.telecomitalia.it)
[02:19:37] *** Joins: sydbarret (~anton@static-186-121-195-51.acelerate.net)
[02:19:43] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[02:19:46] *** Quits: impermanence (~impermane@c-75-73-193-204.hsd1.mn.comcast.net) (Quit: Connection closed)
[02:20:07] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:20:25] <faLUKE> hello, given a list of   {"pitch": someObject, "value" : integerValue }, is there a quick way to sort the list by "value" key?
[02:20:40] <bjs> faLUKE: sorted(the_list, key=lambda d: d["value"])
[02:20:52] <faLUKE> bjs: are you a robot :-)
[02:20:54] *** Quits: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[02:20:57] <faLUKE> ?
[02:21:07] <faLUKE> thanks!
[02:21:25] <nedbat> faLUKE: also, that's a dict not a list
[02:21:26] *** Quits: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com) (Ping timeout: 256 seconds)
[02:21:33] <faLUKE> nedbat: right
[02:21:46] <nedbat> faLUKE: oh, you meant a list of dicts like that
[02:22:10] <faLUKE> LOL, I think the time between my question and bjs answer is about 3 seconds
[02:22:27] <toma> the force is strong with bjs
[02:22:40] *** Joins: mawk (~mawk@wireguard/contributor/mawk)
[02:23:01] *** Quits: bryce (~bryce@ool-457dd6ac.dyn.optonline.net) (Ping timeout: 250 seconds)
[02:23:07] <faLUKE> that discourages me a biit
[02:23:08] <faLUKE> bit
[02:23:20] *** Joins: ouestbillie (~gallup@192.222.211.58)
[02:23:25] <nedbat> faLUKE: why be discouraged?
[02:23:43] <faLUKE> nedbat: because I'm very dumb with syntax
[02:23:56] <toma> two people who climb the same mountain pass all the same altitudes. don't be discouraged, just realize there's a ways further to the top.
[02:24:33] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:25:33] <faLUKE> toma: I always say I would need to learn python's syntax, some day. But never find the time to start it
[02:26:05] <toma> faLUKE: you make time for the things that are important to you. you've just chosen other important things.
[02:26:58] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 260 seconds)
[02:26:59] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[02:27:11] <nedbat> bjs: I'm still puzzling over my impossibility: https://gist.github.com/nedbat/f79c4ced21dfa6e290c3014e40566db6
[02:29:19] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[02:29:57] *** Joins: M3troidman (~buttler@196.244.191.180)
[02:30:14] *** Quits: resmo (~resmo@2a00:d420:9:8a00:3606:fd58:b9b8:cb11) (Remote host closed the connection)
[02:30:16] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:30:17] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 240 seconds)
[02:30:27] *** Joins: resmo (~resmo@2a00:d420:9:8a00:f10:808e:e130:119)
[02:31:42] *** Quits: yaalon (~yaalon@189.224.134.252) (Remote host closed the connection)
[02:32:47] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[02:32:56] *** Joins: akk (~akk@75-161-95-245.albq.qwest.net)
[02:33:20] *** Joins: yaalon (~yaalon@189.224.134.252)
[02:33:25] *** Quits: mawk (~mawk@wireguard/contributor/mawk) (Ping timeout: 250 seconds)
[02:33:47] *** Quits: kilitary (~kilitary@188.242.187.4) (Quit: entering irc ...)
[02:34:20] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 252 seconds)
[02:34:37] *** Joins: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com)
[02:35:00] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.4)
[02:35:02] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[02:37:03] *** Quits: Narrat (~omnius@p200300df5f0818b406ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[02:38:01] *** kevr` is now known as kevr
[02:39:29] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Ping timeout: 250 seconds)
[02:40:08] *** Quits: M3troidman (~buttler@196.244.191.180) (Ping timeout: 256 seconds)
[02:40:40] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:40:58] *** Quits: aead (~aead@user/aead) (Ping timeout: 260 seconds)
[02:42:51] *** Joins: bryce (~bryce@ool-457dd6ac.dyn.optonline.net)
[02:43:07] *** Joins: mawk (~mawk@wireguard/contributor/mawk)
[02:43:23] *** Quits: morteza24 (morteza24@gateway/vpn/protonvpn/morteza24) (Ping timeout: 250 seconds)
[02:43:52] *** Quits: JackRye (~JackRye@ool-ae2c037b.dyn.optonline.net) (Quit: Leaving)
[02:44:30] *** Joins: lumgwada (~lumgwada@user/lumgwada)
[02:45:01] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[02:45:10] *** Quits: palasso (~palasso@user/palasso) (Quit: I am not a quitter!)
[02:45:17] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:45ec:a6c5:b9aa:32a0)
[02:45:52] <stewie925> hi guys, is it safe to say that the default pandas index would be the first column?
[02:46:03] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:47:09] *** Quits: Spr0cket (sprocket@user/Spr0cket) (Quit: x)
[02:47:31] *** Quits: dbbr (~dbbr___@2804:5f80:70a0:3700:c14c:7932:b014:9869) (Ping timeout: 250 seconds)
[02:47:56] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:846c:81c5:480a:6ed5)
[02:48:44] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Read error: Connection reset by peer)
[02:49:22] *** Quits: icy_hot (~icy_hot@99-83-35-64.lightspeed.elpstx.sbcglobal.net) (Quit: WeeChat 3.4)
[02:50:11] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[02:50:27] *** Joins: Barones (~Barones@user/Barones)
[02:50:41] *** Quits: yaalon (~yaalon@189.224.134.252) (Read error: Connection reset by peer)
[02:50:50] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10ed:252e:3d9b:c665:cba6:306b) (Ping timeout: 252 seconds)
[02:50:59] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[02:52:21] *** JoelJoel is now known as Joel
[02:53:12] *** Joins: EgonX_ (~EgonX@2601:2c6:47f:879e:846c:81c5:480a:6ed5)
[02:53:27] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:846c:81c5:480a:6ed5) (Read error: Connection reset by peer)
[02:53:46] *** Joins: Nutte35 (~Nutte@202.153.80.2)
[02:54:38] *** Joins: zyweo (~Svew@user/zyweo)
[02:55:51] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[02:57:34] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[02:58:52] *** Joins: c4017w_ (~c4017@209.52.68.8)
[02:59:53] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:00:51] *** Quits: KnowledgeShark (~Knowledge@50.34.221.249) (Quit: Leaving)
[03:01:17] *** Quits: mud (~mud@user/kadoban) (Ping timeout: 240 seconds)
[03:01:17] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:01:52] *** Quits: awmv (~awmv@mob-194-230-147-185.cgn.sunrise.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:02:15] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[03:02:15] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[03:03:22] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[03:03:45] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 250 seconds)
[03:04:51] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[03:05:18] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[03:06:43] *** Joins: M3troidman (~buttler@mobile-access-b0486b-118.dhcp.inet.fi)
[03:07:00] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[03:07:31] *** Joins: droopsnoot (~baksa@20014C4E1D0A01007002FFB57F4EC22E.dsl.pool.telekom.hu)
[03:08:16] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[03:09:06] *** Quits: lakrass (~lakrass@user/lakrass) (Quit: WeeChat 3.4)
[03:09:48] *** Parts: droopsnoot (~baksa@20014C4E1D0A01007002FFB57F4EC22E.dsl.pool.telekom.hu) ()
[03:09:57] *** Quits: humbertowoody (~humbertow@189.236.19.103) (Ping timeout: 240 seconds)
[03:11:53] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:7903:eedc:f41f:e15d)
[03:12:05] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Quit: hyskaru)
[03:13:02] *** Quits: modlin (modlin@user/modlin) (Ping timeout: 240 seconds)
[03:15:29] *** Quits: teal_ (~teal@2600:1700:80:22d0::f) (Quit: Leaving)
[03:17:56] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Read error: Connection reset by peer)
[03:17:57] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[03:20:37] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.5-dev)
[03:22:17] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[03:22:39] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[03:23:08] *** Joins: r3m (~launch@user/r3m)
[03:25:02] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:25:07] *** Joins: TonyStone31 (~TonyStone@2603-7080-8607-c36a-cdff-5348-04ff-b4e2.res6.spectrum.com)
[03:25:08] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Quit: Leaving)
[03:25:11] *** Quits: TonyStone31 (~TonyStone@2603-7080-8607-c36a-cdff-5348-04ff-b4e2.res6.spectrum.com) (Remote host closed the connection)
[03:25:37] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-cdff-5348-04ff-b4e2.res6.spectrum.com)
[03:26:46] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[03:27:33] *** Joins: elias117 (~elias117@142.167.217.216)
[03:27:33] *** Quits: elias117 (~elias117@142.167.217.216) (Changing host)
[03:27:33] *** Joins: elias117 (~elias117@user/elias117)
[03:28:04] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::4)
[03:28:38] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::4) (Read error: Connection reset by peer)
[03:28:46] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[03:30:21] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[03:30:48] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[03:30:53] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:31:43] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:31:49] *** Joins: modlin (modlin@user/modlin)
[03:32:21] *** Joins: humbertowoody (~humbertow@189.236.19.103)
[03:33:50] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:33:54] *** Quits: Soni (~quassel@autistic.space) (Ping timeout: 250 seconds)
[03:34:23] *** Joins: CombatVet_ (~c4@user/combatvet)
[03:34:51] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[03:35:36] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[03:36:00] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[03:36:09] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 276 seconds)
[03:36:11] *** CombatVet_ is now known as CombatVet
[03:36:14] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[03:36:37] *** Quits: humbertowoody (~humbertow@189.236.19.103) (Ping timeout: 240 seconds)
[03:36:48] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:36:59] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:38:35] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[03:39:09] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::4)
[03:40:09] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::4) (Remote host closed the connection)
[03:40:24] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 250 seconds)
[03:40:33] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::4)
[03:40:45] *** Quits: audio (~audio@user/audio) (Quit: Client closed)
[03:40:49] *** Joins: humbertowoody (~humbertow@189.236.19.103)
[03:42:32] *** Quits: domicron (~domicron@gateway/tor-sasl/domicron) (Remote host closed the connection)
[03:42:56] *** Joins: mickey81 (~user@user/mickey)
[03:43:14] *** Joins: domicron (~domicron@gateway/tor-sasl/domicron)
[03:43:36] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:44:33] *** Quits: ivii (~ivan@user/ivii) (Quit: Konversation terminated!)
[03:45:01] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[03:45:01] *** mickey81 is now known as mickey8
[03:45:21] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:46:17] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::4) (Ping timeout: 240 seconds)
[03:47:16] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[03:47:30] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[03:47:47] *** Joins: audiobirb (~audio@user/audio)
[03:48:08] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[03:48:23] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[03:49:16] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[03:50:11] *** Quits: modlin (modlin@user/modlin) (Ping timeout: 256 seconds)
[03:51:02] *** Joins: dtux (~dtux@2601:646:8f00:3f2:67a4:3701:f910:3c83)
[03:51:18] *** Quits: Vornotron (~Vornicus@2603-8000-5d07-7ef0-1d92-2c67-f1a3-6a1d.res6.spectrum.com) (Quit: Leaving)
[03:51:27] *** Quits: panella32 (~panella32@185.198.243.150) (Quit: Textual IRC Client: www.textualapp.com)
[03:51:53] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[03:52:17] *** Quits: Z-cat (~Z-cat@user/z-cat) (Ping timeout: 250 seconds)
[03:53:09] *** Joins: sjd (~sjd@c-68-38-175-173.hsd1.in.comcast.net)
[03:53:29] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[03:53:48] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[03:55:10] *** Quits: marius_m (~marius_m@84.211.92.9) (Ping timeout: 260 seconds)
[03:55:18] *** Joins: yaalon (~yaalon@200.68.141.34)
[03:56:06] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:56:36] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 245 seconds)
[03:57:00] *** Quits: parv (~quass@user/parv) (Quit: parv)
[03:57:21] *** Quits: sjd (~sjd@c-68-38-175-173.hsd1.in.comcast.net) (Changing host)
[03:57:21] *** Joins: sjd (~sjd@user/sjd)
[03:57:51] *** Quits: yaalon (~yaalon@200.68.141.34) (Remote host closed the connection)
[03:57:52] *** Joins: humanBird (~humanBird@2603-8001-7000-3642-5c1d-a0eb-1a0b-4e78.res6.spectrum.com)
[03:58:12] *** Quits: Guest3 (~Guest3@88-115-79-133.elisa-laajakaista.fi) (Quit: Client closed)
[03:58:31] *** Joins: emacspenguin (~My_user_n@2601:18d:4801:1cf0:9930:6093:5765:2e86)
[03:58:38] *** Joins: mharig (~mharig@181.188.139.204)
[03:58:57] *** Joins: yaalon (~yaalon@200.68.141.34)
[03:59:06] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl48akukaf28q8ljx.ipv6.telus.net) (Quit: Leaving)
[03:59:23] *** Joins: c4017w__ (~c4017@209.52.68.8)
[03:59:57] <emacspenguin> When I run this code, it outputs the names many times, instead of ignoring them, how do I fix this?
[04:00:29] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[04:00:49] <emacspenguin> http://ix.io/3O5l i just realized i didt paste the URL
[04:01:57] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[04:03:07] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[04:03:13] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[04:03:20] *** Joins: Soni (~quassel@autistic.space)
[04:03:59] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca) (Ping timeout: 252 seconds)
[04:04:00] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[04:04:01] *** Quits: yaalon (~yaalon@200.68.141.34) (Remote host closed the connection)
[04:04:25] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[04:05:08] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[04:07:39] *** Quits: sjd (~sjd@user/sjd) (Remote host closed the connection)
[04:07:50] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:11f6:5644:76a6:f278)
[04:09:09] *** Joins: yaalon (~yaalon@200.68.164.224)
[04:10:21] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 245 seconds)
[04:10:31] <nedbat> emacspenguin: you are looping over the allowed_players list, and printing the same thing for each one that isn't "account".  Did you mean to check "== account" instead?
[04:10:36] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[04:10:37] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 268 seconds)
[04:10:38] *** Joins: locrian9_ (~mike@cpe-104-173-20-162.socal.res.rr.com)
[04:11:33] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Quit: Soupy Twist!)
[04:11:40] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[04:11:45] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:11:48] *** Joins: Wulf (~Wulf@user/wulf)
[04:12:25] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[04:13:19] *** Quits: locrian9 (~mike@cpe-104-173-20-162.socal.res.rr.com) (Ping timeout: 250 seconds)
[04:13:20] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 252 seconds)
[04:13:30] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[04:16:11] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[04:16:15] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[04:16:36] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[04:18:01] *** Joins: panella32 (~panella32@185.198.243.150)
[04:19:18] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 256 seconds)
[04:19:42] *** Quits: ouestbillie (~gallup@192.222.211.58) (Quit: leaving)
[04:21:31] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[04:21:33] *** Quits: grimvar (~grimvar@i5C75FEAD.versanet.de) (Ping timeout: 250 seconds)
[04:21:36] *** Quits: flea (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 245 seconds)
[04:22:42] *** Quits: yaalon (~yaalon@200.68.164.224) (Ping timeout: 260 seconds)
[04:22:51] *** Joins: ouestbillie (~gallup@192.222.211.58)
[04:23:16] *** Joins: grimvar (~grimvar@i5C75F404.versanet.de)
[04:23:16] *** Quits: elias117 (~elias117@user/elias117) (Ping timeout: 256 seconds)
[04:23:23] *** Joins: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1)
[04:25:11] *** Joins: elias117 (~elias117@47.55.112.181)
[04:25:11] *** Quits: elias117 (~elias117@47.55.112.181) (Changing host)
[04:25:11] *** Joins: elias117 (~elias117@user/elias117)
[04:25:19] *** Quits: ouestbillie (~gallup@192.222.211.58) (Client Quit)
[04:25:41] *** Joins: ouestbillie (~gallup@192.222.211.58)
[04:26:20] *** Quits: mharig (~mharig@181.188.139.204) (Quit: WeeChat 3.4)
[04:26:38] *** Quits: locrian9_ (~mike@cpe-104-173-20-162.socal.res.rr.com) (Quit: leaving)
[04:27:37] *** Quits: sydbarret (~anton@static-186-121-195-51.acelerate.net) (Quit: Going offline, see ya! (www.adiirc.com))
[04:28:04] *** Joins: jazzy (~jaziz@user/jaziz)
[04:29:26] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[04:29:31] *** Joins: yaalon (~yaalon@200.68.141.22)
[04:29:35] *** Quits: telboon (~telboon@user/telboon) (Remote host closed the connection)
[04:29:42] *** Quits: xx (~xx@user/xx) (Ping timeout: 260 seconds)
[04:29:59] *** Joins: telboon (~telboon@user/telboon)
[04:31:00] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[04:31:18] *** Joins: Barones (~Barones@user/Barones)
[04:31:31] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[04:31:38] <yanmaani> hiya, does Python have pointers?
[04:31:44] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:32:09] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:a5a7:9716:6392:26bc) (Ping timeout: 250 seconds)
[04:32:31] <grym> yanmaani: no
[04:32:50] <yanmaani> Then, how do I imitate behaviour like the following?
[04:33:25] <yanmaani> `void set_cp(char* x, int y) {*x = y;}`
[04:33:34] <grym> what's that do?
[04:33:48] <nedbat> yanmaani: def that_thing(y): return y
[04:33:50] <yanmaani> takes a pointer to x and a value y
[04:33:53] <yanmaani> sets x to y
[04:33:56] <nedbat> yanmaani: x = that_thing(y)
[04:34:03] <yanmaani> nedbat: but I can't do that inside a function
[04:34:12] <BrenBarn> you can't really do that sort of thing in Python
[04:34:19] <yanmaani> so, my problem is, I have an asynchronous function
[04:34:20] <BrenBarn> I mean, you can pass some kind of mutable object as x
[04:34:30] <yanmaani> I do not need it to be asynchronous in any way
[04:34:33] <nedbat> yanmaani: yes, let's talk about the problem.
[04:34:40] <yanmaani> but it works like
[04:34:41] <BrenBarn> but you can't have a function that accepts some kind of pointer to a variable outside the function and rebinds that variable in that outer context
[04:34:48] <yanmaani> do_x(params, cb)
[04:34:52] <yanmaani> which calls cb(result)
[04:34:57] *** Quits: telboon (~telboon@user/telboon) (Ping timeout: 256 seconds)
[04:35:02] <yanmaani> I want something like `result = do_x(params)`
[04:35:17] *** Quits: aknot (~aknot@2603:900a:1503:17bb:3a38:4367:8da3:464c) (Ping timeout: 240 seconds)
[04:35:18] <yanmaani> I could hack it by just having `cb` set stuff to some temp global variable, but that's gross
[04:35:29] <nedbat> yanmaani: what scope is result in?
[04:35:29] <yanmaani> Is there a library that already does this in a clean way?
[04:35:37] *** Quits: aknot_ (~aknot@2603:900a:1503:17bb:3a38:4367:8da3:464c) (Ping timeout: 240 seconds)
[04:35:45] <yanmaani> nedbat: The result is passed to the callback
[04:35:49] <BrenBarn> what is "result"?
[04:35:59] <yanmaani> BrenBarn: the result of do_x
[04:36:11] <yanmaani> do_x does something, and gets a result, and sends this to the callback
[04:36:13] <BrenBarn> how can do_x call a callback on its own result?
[04:36:18] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[04:36:19] <BrenBarn> ah
[04:36:35] <yanmaani> BrenBarn: it doesn't return anything if that helps
[04:36:57] <yanmaani> so I mean I could do, like
[04:36:58] <nedbat> yanmaani: did you write do_x? or cb?
[04:37:27] <BrenBarn> you could make an object to store the result and then pass some method of the object as the callback
[04:37:32] <nedbat> that ^
[04:38:14] *** Joins: jazzy2 (~jaziz@user/jaziz)
[04:38:46] <yanmaani> _x = None \n def _hacky_set_x(v): _x = v \n do_x(params, _hacky_set_x) \n result = _x
[04:38:56] <yanmaani> Hmm, an object seems cleaner
[04:39:01] <yanmaani> nedbat: nope, alas
[04:39:20] *** Joins: jazzy3 (~jaziz@user/jaziz)
[04:39:55] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[04:40:09] *** Joins: Lazenca (Lazenca@user/lazenca)
[04:40:16] <yanmaani> Is there a standard object for doing this?
[04:40:16] *** Quits: humbertowoody (~humbertow@189.236.19.103) (Ping timeout: 256 seconds)
[04:40:27] *** Quits: faLUKE (~paolo@host-82-59-128-89.retail.telecomitalia.it) (Quit: Konversation terminated!)
[04:40:57] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[04:42:07] <BrenBarn> not really
[04:42:14] <BrenBarn> if it's just a simple value that gets returned you could even do it with a function that just mutates a list or dict or something
[04:42:57] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[04:43:03] <emacspenguin> How do I check if a string is present in an array?
[04:43:03] *** Quits: medium_cool (~medium_co@136.36.128.48) (Quit: I have gone to sleep. ZZZzzz…)
[04:43:40] <yanmaani> set_result = lambda x: k.__setitem__('_', x)
[04:43:46] <yanmaani> Will this work across scopes?
[04:43:51] <yanmaani> If k is a locally scoped dict
[04:44:30] <yanmaani> Or will I need set_result = functools.partial(k.__setitem__, '_')
[04:44:32] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Ping timeout: 250 seconds)
[04:44:37] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Ping timeout: 240 seconds)
[04:44:55] *** Joins: bluedust (~bluedust@103.161.144.140)
[04:45:01] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[04:45:07] *** Joins: humbertowoody (~humbertow@189.236.19.103)
[04:45:16] <BrenBarn> the lambda will create a closure for k if k exists in the scope where the lambda was created
[04:45:22] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[04:45:32] *** Joins: telboon (~telboon@user/telboon)
[04:45:32] <BrenBarn> you could also do like `holder = []` and then use `holder.append` as the callback
[04:45:47] <yanmaani> oh cool, that sounds even cleaner yeah
[04:45:56] *** Joins: ynon (~ynon@cpc120806-nrwh12-2-0-cust326.4-4.cable.virginm.net)
[04:46:21] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[04:46:35] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[04:46:48] *** Quits: ynon (~ynon@cpc120806-nrwh12-2-0-cust326.4-4.cable.virginm.net) (Read error: Connection reset by peer)
[04:47:02] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[04:47:34] *** Quits: akk (~akk@75-161-95-245.albq.qwest.net) (Quit: +++)
[04:48:12] *** Quits: yaalon (~yaalon@200.68.141.22) (Ping timeout: 256 seconds)
[04:48:57] *** Quits: bluedust (~bluedust@103.161.144.140) (Ping timeout: 240 seconds)
[04:49:04] *** Joins: mud (~mud@user/kadoban)
[04:49:04] <yanmaani> thanks!
[04:49:55] *** Quits: ouestbillie (~gallup@192.222.211.58) (Ping timeout: 250 seconds)
[04:51:12] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Quit: WeeChat 3.4)
[04:51:38] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[04:54:44] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:56:17] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 240 seconds)
[04:57:09] *** Quits: LimeOn (~user@user/limeon) (Quit: .)
[04:58:45] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Ping timeout: 256 seconds)
[04:59:19] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[04:59:52] *** Joins: c4017w_ (~c4017@209.52.68.8)
[05:00:02] *** Joins: yaalon (~yaalon@200.68.140.12)
[05:00:06] *** Joins: arinov (~arinov@213.194.126.155)
[05:00:13] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[05:01:21] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[05:03:17] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[05:03:17] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[05:03:23] *** Quits: zyweo (~Svew@user/zyweo) (Ping timeout: 252 seconds)
[05:03:53] *** Joins: aod (~a@190.75.30.237)
[05:05:46] *** Quits: yaalon (~yaalon@200.68.140.12) (Ping timeout: 256 seconds)
[05:06:07] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Ping timeout: 256 seconds)
[05:06:20] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[05:06:57] *** Quits: telboon (~telboon@user/telboon) (Ping timeout: 240 seconds)
[05:07:26] *** Joins: Oddity (~Oddity@user/oddity)
[05:08:06] *** Joins: fikran (~fikran@user/fikran)
[05:08:59] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[05:10:52] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[05:12:46] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[05:13:34] *** Quits: emacspenguin (~My_user_n@2601:18d:4801:1cf0:9930:6093:5765:2e86) (Quit: WeeChat 2.8)
[05:15:44] <omegatron> hmm, could some please check, if the version number for the zipp package in the .../site-packages/  is really "0.0.0" !?  i'm getting a strange behaviour with either zipp or importlib_metadata, which has zipp as dependency ..!?
[05:16:19] *** Quits: mawk (~mawk@wireguard/contributor/mawk) (Ping timeout: 256 seconds)
[05:16:44] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:18:59] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[05:19:14] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[05:21:32] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[05:21:32] *** Quits: PurpleBooger (~purpleboo@047-040-214-188.res.spectrum.com) (Remote host closed the connection)
[05:22:50] *** Joins: PurpleBooger (~purpleboo@2600:6c5d:4600:1e76:9ce8:47c4:9f70:5343)
[05:23:13] *** Quits: PurpleBooger (~purpleboo@2600:6c5d:4600:1e76:9ce8:47c4:9f70:5343) (Client Quit)
[05:26:47] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[05:27:08] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[05:29:11] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[05:30:14] *** Joins: kuahara (kuahara@072-182-135-032.res.spectrum.com)
[05:30:17] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[05:30:17] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:50] *** Joins: vicfred (~vicfred@user/vicfred)
[05:31:26] <kuahara> Is there any way to define a new var inside a function and have that variable be global or do I have to return the values to pre-existing global vars?
[05:31:36] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:31:51] *** Joins: esv (~esv@74.124.178.154)
[05:32:07] *** Quits: onichomp (~onichomp@2806:264:4408:2eb:c5be:6fee:c860:dd18) (Read error: Connection reset by peer)
[05:32:34] <nedbat> kuahara: you can use `global variable_name` in the function to make the variable global
[05:32:44] *** Joins: onichomp (~onichomp@2806:264:4408:2eb:c5be:6fee:c860:dd18)
[05:34:03] <kuahara> Thanks and sorry, I should have googled that first.  Found the answer almost right away.
[05:35:06] <kuahara> defining those inside a function feels dirty, but this function will always run first, so it also feels elegant.
[05:35:29] *** Joins: Guest28 (~Guest28@76.253.191.48)
[05:35:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[05:36:05] *** Quits: jazzy3 (~jaziz@user/jaziz) (Read error: Connection reset by peer)
[05:36:28] <Guest28> hey i pasted my code
[05:36:31] <Guest28> do i just wait now?
[05:36:37] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[05:36:43] <nedbat> Guest28: you have to share the url with us here
[05:37:01] *** Quits: Sargento (uid523534@wikipedia/Sargento-de-Hierro) (Quit: Connection closed for inactivity)
[05:37:03] <Guest28> oh
[05:37:10] <Guest28> https://bpa.st/T4DA
[05:37:15] <Guest28> first project ever in python
[05:37:17] <Guest28> dont flame me lmfao
[05:37:29] <nedbat> Guest28: are you looking for help?
[05:38:11] <Guest28> im just seeing if its good haha
[05:38:16] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Ping timeout: 245 seconds)
[05:38:18] <Guest28> ive been told its pretty trash lol
[05:39:54] *** Joins: hams (~hams@c-73-255-22-88.hsd1.tx.comcast.net)
[05:39:54] *** Quits: hams (~hams@c-73-255-22-88.hsd1.tx.comcast.net) (Changing host)
[05:39:54] *** Joins: hams (~hams@user/hams)
[05:40:03] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Remote host closed the connection)
[05:40:26] <nedbat> Guest28: if you wrote it, and it works, then it's great for a first project
[05:40:56] <Guest28> ok cool
[05:41:04] <Guest28> is there anything i should change
[05:41:09] <Guest28> or do to make it better
[05:41:23] <kuahara> Writing anything for the first time is always good.  None of us ever wrote anything great on day 1.  If I can offer some advice though, be careful not to walk down a road where you only know how to write programs that run from the top down.
[05:42:16] <kuahara> you'll want to learn to use function soon, practice a bit, then get used to OOP, practice a bit, then learn data structions... and practice a bit.
[05:42:45] <kuahara> I hate telling anyone to 'practice'.  Doing it just to do it kinda sucks.  I've always thought of it is writing without having anything to say.   Not the easiest thing in the world to learn from.
[05:43:18] <Guest28> oh gotcha
[05:43:20] <kuahara> project euler is great for that, though.  (writing without having anything useful to say)
[05:43:39] <Guest28> so does  a function make it where it doesnt run from top to bottoms
[05:43:45] <Guest28> it makes it shorter im assuming ?
[05:44:01] <kuahara> s/structions/structures/
[05:44:20] <kuahara> functions keep you from writing the same code over and over again every time you need to use it
[05:45:04] <Guest28> ohhhhhhhh
[05:45:08] <Guest28> yeah that was a pain haha
[05:45:17] <Guest28> i honestly just wrote the first part
[05:45:24] <Guest28> then copied and pasted it over and over
[05:45:29] <Guest28> but changed the wording obviously
[05:45:53] *** Quits: nomic (~nomic@185.192.69.3) (Quit: Leaving)
[05:45:56] *** Joins: structoha (~structoha@gateway/tor-sasl/structoha)
[05:47:01] *** Parts: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[05:47:26] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[05:49:24] *** Quits: structoha1 (~structoha@gateway/tor-sasl/structoha) (Ping timeout: 276 seconds)
[05:51:36] *** Quits: therufuser (~therufuse@p5b02e60a.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[05:52:25] *** Joins: giusb (~giusb@user/giusb)
[05:53:27] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[05:53:36] *** Joins: therufuser (~therufuse@p5b02e236.dip0.t-ipconnect.de)
[05:54:51] *** Joins: califax- (~califax@user/califx)
[05:54:52] <stewie925> hey guys, I have an issue with read_csv(), perhaps my Path is incorrect:  https://bpa.st/ZGNQ
[05:56:57] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Ping timeout: 240 seconds)
[05:57:01] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 240 seconds)
[05:57:12] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[05:57:12] *** califax- is now known as califax
[05:57:15] <nedbat> stewie925: can you include the whole error report?
[05:57:37] *** Joins: brabrax (~brabrax@user/brabrax)
[05:58:09] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[05:58:18] <stewie925> nedbat - hello, here is it https://bpa.st/MRTA
[05:58:28] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[05:58:40] *** Joins: spawnmc (~spawnmc@user/spawnmc)
[05:58:47] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:59:32] *** Quits: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net) (Quit: because)
[05:59:39] *** Joins: zeden (~zeden@user/zeden)
[05:59:57] <nedbat> stewie925: line 14 seems like it should be "import pandas as pd"
[06:00:15] <stewie925> oh sorry
[06:00:17] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-6169-56e1-da72-4cb0.res6.spectrum.com) (Read error: Connection reset by peer)
[06:00:21] *** Quits: frostschutz (~frostschu@2a01:c23:7d06:3200:9d57:879c:ec22:3692) (Remote host closed the connection)
[06:00:22] *** Joins: c4017w__ (~c4017@209.52.68.8)
[06:01:26] <nedbat> stewie925: can you pastebin the actual file you are running?
[06:01:46] <spawnmc> hey guys, noob here. I have a somewhat complicated question i think. If I wanted to scrape data from an web interface like maybe... Nagios. Without even using API(assuming they even exist for a given app). I know I can use stuff like requests and BeaitifulSoup.... but what if the page is locked behind SAML based , 2FA SSO authentication... how do i
[06:01:47] <spawnmc> get thru this without hard coding my username and password in?
[06:02:17] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:02:38] <stewie925> nedbat - hi yes, let me try again - its just 4 lines of code and I m using jupyter notebook... brb
[06:03:08] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[06:03:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[06:04:01] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[06:04:44] <spawnmc> SSO is Okta btw
[06:05:48] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:07:47] *** Joins: Good666 (~Good666@120.229.65.173)
[06:08:06] <spawnmc> also, I was hoping if maybe someone could explain what line 13 and 15 in this script is doing exactly:  https://bpa.st/Z3FQ
[06:08:43] <spawnmc> i mean i have an idea of what line 15 does but unsure what is inside out_of_stock_divs
[06:08:53] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[06:09:36] <BrenBarn> line 13 is finding certain elements in the HTML of a web page
[06:09:46] <BrenBarn> I guess just one element since it uses id
[06:10:13] <spawnmc> ok what if it was class... it was class previously this was a script built for newegg which im trying to repurpose for amazon
[06:10:14] <BrenBarn> then line 15 returns True or False depending on whether it found such an element
[06:10:31] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[06:11:12] <BrenBarn> if it was class instead of id?
[06:11:13] <stewie925> nedbat: sorry, got a call... here it is https://bpa.st/TUBQ
[06:11:18] <spawnmc> yeah
[06:11:19] <stewie925> just four lines of code
[06:11:26] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:11f6:5644:76a6:f278) (Ping timeout: 260 seconds)
[06:11:44] *** Good666 is now known as YIML666
[06:11:56] <BrenBarn> it would still be basically the same, it just returns True if it found anything and False if it found nothing
[06:12:16] *** Joins: mawk (~mawk@wireguard/contributor/mawk)
[06:12:34] <spawnmc> hmm yeah i guess one would need to understand the parsed content to really know ....
[06:12:44] <spawnmc> no shortcuts for me
[06:12:47] <gjvc> df = pd.read_csv(csv_data) should be df = pd.read_csv( csv_data.as_posix() )
[06:13:42] <nedbat> gjvc: why doesn't a Path work? It works for me.
[06:14:26] <gjvc> nfi, just going by what's in that paste. afaik a Path does work. old pandas version, perhaps?
[06:14:52] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[06:14:59] *** Joins: ominionx (~ominionx@172.58.136.5)
[06:15:20] <nedbat> stewie925: that code works for me, I don't know why it thinks it should be callable.
[06:15:50] <nedbat> stewie925: what's pd.__version__
[06:15:58] *** Joins: gonyav (~gv@2a01:620:caee:6900::d85)
[06:16:39] *** Quits: newpy (~newpy@206.168.231.90) (Quit: Leaving)
[06:17:50] <stewie925> nedbat - print(pd.__version__) = 1.3.5
[06:18:08] <stewie925> I am using python 3.8
[06:18:28] <nedbat> stewie925: sorry, i dont see why it would be.
[06:18:33] *** Quits: maxzor (~maxzor@2a01cb04054faa00b9bbe250a19ea907.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[06:19:00] <stewie925> nedbat - oh no worries, let me start fresh with a new module and go from there :)
[06:19:36] <nedbat> stewie925: are there other cells in the notebook? You might have done something like:  pd.read_csv = Path(...)
[06:20:34] <stewie925> nedbat - yeah I did that earlier, but I removed it :)
[06:20:51] <stewie925> Im starting with a new notebook, and work my way through it :)
[06:20:53] <nedbat> stewie925: ok, the notebook still has that.  Recalculate all the cells
[06:20:59] <stewie925> ahhh
[06:21:42] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[06:21:55] <stewie925> nedbat: OMG youre right
[06:22:12] <stewie925> it works now, I had to run Restart (from vscode)
[06:22:15] <stewie925> thank you so much!
[06:23:04] *** Quits: YIML666 (~Good666@120.229.65.173) (Quit: Leaving)
[06:23:29] *** Joins: gimzmoe_ (~gimzmoe@user/gimzmoe)
[06:23:40] *** Joins: tWqaq (~tWqaq@240e:389:5d1c:ff00:6793:1724:d3ac:91bc)
[06:23:42] <stewie925> ugh, stuck in this issue for almost 30 minutes ...  much ado about nothing
[06:24:05] <stewie925> nedbat: appreciate your help!  Now I can move on with my exercises :)
[06:24:10] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Read error: Connection reset by peer)
[06:25:38] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:26:05] <t4nk_freenode> mmm... stuck for almost 30 minutes.. you pooor poor guy ;)
[06:26:11] *** Joins: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com)
[06:26:14] *** Quits: vakera_pingveno (~dan@2600:1700:21f9:b150::40) (Quit: Konversation terminated!)
[06:27:31] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c) (Remote host closed the connection)
[06:27:51] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 250 seconds)
[06:28:13] *** Joins: Barones (~Barones@user/Barones)
[06:30:33] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[06:30:33] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 256 seconds)
[06:31:02] *** Quits: zaz\ (~zaz@poneybl.eu) (Quit: bye)
[06:31:20] *** Quits: Guest28 (~Guest28@76.253.191.48) (Quit: Client closed)
[06:31:29] *** Joins: zaz\ (~zaz@poneybl.eu)
[06:32:01] *** Parts: gonyav (~gv@2a01:620:caee:6900::d85) ()
[06:32:09] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:33:01] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[06:33:02] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[06:33:03] *** Joins: shiroininja (~Shiroinin@c-73-99-87-221.hsd1.va.comcast.net)
[06:33:35] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Quit: Lost terminal)
[06:33:57] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[06:34:10] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[06:34:50] *** Quits: Nutte35 (~Nutte@202.153.80.2) (Read error: Connection reset by peer)
[06:35:10] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[06:35:16] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Remote host closed the connection)
[06:35:23] *** Joins: XV8 (~XV8@2601:5cb:c001:50:4cb1:cccb:3f96:2061)
[06:36:45] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[06:36:46] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:37:59] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:39:51] *** Joins: uncle_chris (~uncle_chr@104-190-161-1.lightspeed.rcsntx.sbcglobal.net)
[06:40:25] *** Quits: uncle_chris (~uncle_chr@104-190-161-1.lightspeed.rcsntx.sbcglobal.net) (Client Quit)
[06:40:58] *** Quits: korg815 (~korg815@user/korg815) (Ping timeout: 256 seconds)
[06:43:02] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:43:48] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[06:44:20] *** Joins: korg815 (~korg815@user/korg815)
[06:44:53] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[06:46:20] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[06:49:02] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[06:50:17] *** Quits: nicode (~nic@45.72.195.35) (Ping timeout: 240 seconds)
[06:50:31] *** Joins: aknot_ (~aknot@2603:900a:1503:17bb:91e9:b7d:4f1f:5571)
[06:50:56] *** Joins: aknot (~aknot@2603:900a:1503:17bb:91e9:b7d:4f1f:5571)
[06:53:21] *** Joins: mossman93 (~quassel@user/mossman93)
[06:54:28] *** Quits: spawnmc (~spawnmc@user/spawnmc) (Quit: Client closed)
[06:55:08] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 256 seconds)
[06:56:31] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[06:56:34] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[06:58:51] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:59:37] *** Quits: aknot (~aknot@2603:900a:1503:17bb:91e9:b7d:4f1f:5571) (Ping timeout: 240 seconds)
[06:59:57] *** Quits: aknot_ (~aknot@2603:900a:1503:17bb:91e9:b7d:4f1f:5571) (Ping timeout: 240 seconds)
[07:00:52] *** Joins: c4017w_ (~c4017@209.52.68.8)
[07:01:51] *** Quits: lumgwada (~lumgwada@user/lumgwada) (Quit: Lost terminal)
[07:02:03] *** Quits: adeliktas (~adeliktas@i59F52D68.versanet.de) (Read error: Connection reset by peer)
[07:02:27] *** Joins: lainon (~lainon@2601:7c0:c500:4d20::3385)
[07:02:38] *** Quits: onichomp (~onichomp@2806:264:4408:2eb:c5be:6fee:c860:dd18) (Read error: Connection reset by peer)
[07:03:15] *** Joins: onichomp (~onichomp@2806:264:4408:2eb:c5be:6fee:c860:dd18)
[07:03:25] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:04:17] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[07:04:37] *** Joins: adeliktas (~adeliktas@i59F4D64A.versanet.de)
[07:05:04] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[07:07:18] *** Quits: lastshell (~lastshell@user/lastshell) (Quit: WeeChat 3.0)
[07:07:39] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:07:42] *** Quits: lainon (~lainon@2601:7c0:c500:4d20::3385) (Quit: lainon)
[07:13:16] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: Leaving)
[07:13:51] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:13:59] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[07:14:21] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[07:15:23] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[07:16:20] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[07:16:31] *** Joins: KombuchaKip (~kip@192.252.230.5)
[07:17:27] *** Joins: fikran (~fikran@user/fikran)
[07:17:48] *** Joins: optimant (~asavage@user/optimant)
[07:19:11] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[07:19:36] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:19:41] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[07:19:42] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[07:19:58] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:20:39] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[07:20:57] *** Quits: gimzmoe_ (~gimzmoe@user/gimzmoe) (Read error: Connection reset by peer)
[07:21:47] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:21:58] *** Joins: smrtz (~smrtz@user/smrtz)
[07:23:16] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 245 seconds)
[07:23:32] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:23:51] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Read error: Connection reset by peer)
[07:23:51] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[07:24:00] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[07:24:11] *** Joins: karlnashville (~karl@2601:482:4280:4cf0:39ad:cda9:81ea:393a)
[07:26:42] *** Joins: euphrates[m] (~euphrates@2001:470:69fc:105::fbb5)
[07:28:44] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:29:35] *** Joins: crashrep (~crashrep@user/crashrep)
[07:29:38] *** Quits: emerent (~quassel@p200300cd57044358ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[07:29:42] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:30:11] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:30:17] *** Joins: emerent (~quassel@p200300cd57044321ba27ebfffed28a59.dip0.t-ipconnect.de)
[07:31:03] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:32:06] *** Joins: saroy (~Sandipan@43.252.250.126)
[07:32:17] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[07:32:25] *** saroy is now known as bytehackr
[07:33:21] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[07:33:38] *** crackerj- is now known as crackerjack
[07:33:49] *** Quits: hams (~hams@user/hams) (Read error: Connection reset by peer)
[07:33:55] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[07:33:58] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[07:34:07] *** Quits: panella32 (~panella32@185.198.243.150) (Quit: Textual IRC Client: www.textualapp.com)
[07:35:14] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[07:35:54] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:38:08] *** Quits: sq (~sq@109.248.149.11) (Quit: leaving)
[07:38:22] *** Joins: Spr0cket (sprocket@user/Spr0cket)
[07:38:31] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:38:55] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 250 seconds)
[07:39:37] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[07:39:57] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[07:39:59] *** Joins: lumgwada (~lumgwada@user/lumgwada)
[07:40:47] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[07:40:49] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[07:41:19] <Bluefoxicy> think I should send in a patch for numpy to add generalized hyperbolic functions?
[07:41:24] *** Joins: Atque (~Atque@user/atque)
[07:41:31] *** Quits: sreve (~quassel@p54a706dc.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[07:41:59] *** Joins: sreve (~quassel@p4ff44c8e.dip0.t-ipconnect.de)
[07:42:03] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[07:42:09] *** Joins: pragma- (~chaos@user/pragmatic-chaos)
[07:43:18] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:45:33] *** Quits: theRoey (~Roey@user/Roey) (Quit: Client exiting)
[07:45:41] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:47:26] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:11ed:a7c3:5966:293c)
[07:48:01] *** Quits: aod (~a@190.75.30.237) (Ping timeout: 250 seconds)
[07:48:07] *** Quits: onichomp (~onichomp@2806:264:4408:2eb:c5be:6fee:c860:dd18) (Read error: Connection reset by peer)
[07:48:44] *** Joins: onichomp (~onichomp@2806:264:4408:2eb:c5be:6fee:c860:dd18)
[07:48:57] *** Joins: parv (~quass@user/parv)
[07:50:40] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:53:51] *** Quits: mawk (~mawk@wireguard/contributor/mawk) (Ping timeout: 256 seconds)
[07:54:20] *** Joins: maxzor (~maxzor@2a01cb04054faa00b9bbe250a19ea907.ipv6.abo.wanadoo.fr)
[07:54:34] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:11ed:a7c3:5966:293c) (Quit: Textual IRC Client: www.textualapp.com)
[07:54:58] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[07:55:40] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:56:19] *** Quits: maxzor (~maxzor@2a01cb04054faa00b9bbe250a19ea907.ipv6.abo.wanadoo.fr) (Client Quit)
[07:56:35] *** Joins: maxzor (~maxzor@2a01cb04054faa00b9bbe250a19ea907.ipv6.abo.wanadoo.fr)
[07:57:45] *** Quits: humanBird (~humanBird@2603-8001-7000-3642-5c1d-a0eb-1a0b-4e78.res6.spectrum.com) (Quit: Client closed)
[07:59:05] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 250 seconds)
[07:59:43] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 250 seconds)
[08:00:05] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[08:01:16] *** Quits: humbertowoody (~humbertow@189.236.19.103) (Ping timeout: 250 seconds)
[08:01:23] *** Joins: c4017w__ (~c4017@209.52.68.8)
[08:01:34] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[08:02:07] *** Joins: humbertowoody (~humbertow@189.236.19.103)
[08:02:25] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[08:02:47] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[08:02:59] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Ping timeout: 250 seconds)
[08:04:10] *** Joins: Vonter (~Vonter@user/vonter)
[08:04:44] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[08:06:13] *** Quits: karlnashville (~karl@2601:482:4280:4cf0:39ad:cda9:81ea:393a) (Ping timeout: 250 seconds)
[08:07:17] *** Quits: humbertowoody (~humbertow@189.236.19.103) (Ping timeout: 240 seconds)
[08:08:22] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[08:08:30] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:11f6:5644:76a6:f278)
[08:08:42] *** Joins: humbertowoody (~humbertow@189.236.19.103)
[08:09:20] *** Joins: bluedust (~bluedust@103.161.144.140)
[08:09:32] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[08:10:53] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:12:17] *** Quits: johnkeats7 (~johnkeats@2804:14c:32:a0cc:9179:1a11:f474:cddf) (Ping timeout: 240 seconds)
[08:12:17] *** Quits: foul_owl (~kerry@174-21-143-101.tukw.qwest.net) (Ping timeout: 250 seconds)
[08:14:16] *** Quits: humbertowoody (~humbertow@189.236.19.103) (Ping timeout: 250 seconds)
[08:15:34] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[08:15:58] *** Joins: humbertowoody (~humbertow@189.236.19.103)
[08:18:13] *** Quits: smrtz (~smrtz@user/smrtz) (Ping timeout: 256 seconds)
[08:18:36] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[08:18:58] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[08:19:43] *** Joins: mawk (~mawk@wireguard/contributor/mawk)
[08:19:50] *** Joins: karlnashville (~karl@2601:482:4280:4cf0:5001:9215:b533:cefd)
[08:20:16] <karlnashville> hello peoples
[08:20:17] *** Quits: humbertowoody (~humbertow@189.236.19.103) (Ping timeout: 240 seconds)
[08:20:49] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[08:21:04] <Avdol[m]> Hi!
[08:23:11] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:45ec:a6c5:b9aa:32a0) (Quit: Client closed)
[08:23:41] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Ping timeout: 245 seconds)
[08:24:54] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[08:25:17] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:25:41] *** Joins: foul_owl (~kerry@94.140.8.108)
[08:26:46] *** Joins: vlm (~vlm@user/vlm)
[08:26:51] *** Joins: maryo87 (~Maryo@user/maryo)
[08:27:52] *** Joins: matsaman (~matsaman@user/matsaman)
[08:29:28] *** Joins: djapo (~archangel@user/djapo)
[08:30:02] *** Quits: emerent (~quassel@p200300cd57044321ba27ebfffed28a59.dip0.t-ipconnect.de) (Remote host closed the connection)
[08:30:34] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[08:31:48] *** Joins: emerent (~quassel@p200300cd57044321ba27ebfffed28a59.dip0.t-ipconnect.de)
[08:32:02] *** Quits: foul_owl (~kerry@94.140.8.108) (Ping timeout: 256 seconds)
[08:32:37] *** Quits: onichomp (~onichomp@2806:264:4408:2eb:c5be:6fee:c860:dd18) (Read error: Connection reset by peer)
[08:32:39] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:33:14] *** Joins: onichomp (~onichomp@2806:264:4408:2eb:c5be:6fee:c860:dd18)
[08:33:31] *** Quits: mawk (~mawk@wireguard/contributor/mawk) (Ping timeout: 256 seconds)
[08:33:54] <dre> Bluefoxicy, no reason why not
[08:34:05] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[08:35:16] *** Joins: mawk (~mawk@wireguard/contributor/mawk)
[08:35:59] *** Joins: zamanf_ (~dev@ppp-94-66-58-236.home.otenet.gr)
[08:36:47] *** Quits: zamanf (~dev@ppp-94-66-58-146.home.otenet.gr) (Ping timeout: 250 seconds)
[08:37:09] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[08:39:52] *** Quits: Barones (~Barones@user/Barones) (Read error: Connection reset by peer)
[08:40:14] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:cec:aed7:90e9:7998)
[08:42:52] *** Quits: swistak (~swistak@185.21.216.141) (Ping timeout: 250 seconds)
[08:44:35] *** Quits: shiroininja (~Shiroinin@c-73-99-87-221.hsd1.va.comcast.net) (Quit: WeeChat 2.8)
[08:44:36] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 250 seconds)
[08:45:25] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[08:45:31] *** Joins: nomic (~nomic@185.192.69.3)
[08:45:35] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[08:45:42] *** Joins: foul_owl (~kerry@94.140.8.107)
[08:47:28] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[08:48:07] *** Joins: humbertowoody (~humbertow@189.236.19.103)
[08:49:36] *** Quits: optimant (~asavage@user/optimant) (Quit: C-c)
[08:50:01] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[08:51:37] *** Joins: icy_hot (~icy_hot@99-83-35-64.lightspeed.elpstx.sbcglobal.net)
[08:52:46] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[08:54:42] *** Quits: cjb (~cjb@user/cjb) (Quit: rcirc on GNU Emacs 29.0.50)
[08:55:55] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[08:58:35] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[08:59:19] *** Quits: M3troidman (~buttler@mobile-access-b0486b-118.dhcp.inet.fi) (Ping timeout: 250 seconds)
[08:59:26] *** Joins: mIk3_09 (~Thunderbi@user/mik3-08/x-2852566)
[09:01:30] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Ping timeout: 256 seconds)
[09:01:30] *** mIk3_09 is now known as mIk3_08
[09:01:52] *** Joins: c4017w_ (~c4017@209.52.68.8)
[09:02:25] *** Quits: mawk (~mawk@wireguard/contributor/mawk) (Ping timeout: 256 seconds)
[09:04:07] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[09:04:56] *** Joins: swistak (~swistak@185.21.216.141)
[09:05:15] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[09:06:13] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[09:07:08] *** Joins: efil4cri_ (~efil4cri@gateway/tor-sasl/wfnintr)
[09:07:39] *** Quits: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr) (Ping timeout: 276 seconds)
[09:08:37] *** Quits: onichomp (~onichomp@2806:264:4408:2eb:c5be:6fee:c860:dd18) (Read error: Connection reset by peer)
[09:09:01] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[09:09:14] *** Joins: onichomp (~onichomp@2806:264:4408:2eb:c5be:6fee:c860:dd18)
[09:09:41] *** Joins: Viewday118 (~Viewday@user/viewday)
[09:10:49] *** Joins: mIk3_09 (~Thunderbi@user/mik3-08/x-2852566)
[09:12:05] *** Quits: jkl1337 (~jkl@user/jkl) (Quit: Gone.)
[09:12:20] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Ping timeout: 250 seconds)
[09:12:21] *** mIk3_09 is now known as mIk3_08
[09:13:24] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[09:13:24] *** Viewday118 is now known as Viewday11
[09:13:28] *** Joins: jkl (~jkl@user/jkl)
[09:14:09] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[09:14:15] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Quit: beastDivision)
[09:14:35] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[09:17:01] *** Quits: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net) (Ping timeout: 240 seconds)
[09:17:02] *** Quits: olasd (~olasd@softwareheritage/olasd) (Ping timeout: 240 seconds)
[09:17:37] *** Quits: onichomp (~onichomp@2806:264:4408:2eb:c5be:6fee:c860:dd18) (Read error: Connection reset by peer)
[09:17:47] *** Quits: d00gy (~tonberry@user/d00gy) (Quit: WeeChat 3.4)
[09:18:14] *** Joins: onichomp (~onichomp@2806:264:4408:2eb:c5be:6fee:c860:dd18)
[09:21:03] *** Quits: onichomp (~onichomp@2806:264:4408:2eb:c5be:6fee:c860:dd18) (Client Quit)
[09:21:17] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[09:22:03] *** Joins: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net)
[09:22:40] *** Joins: jazzy (~jaziz@user/jaziz)
[09:25:07] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[09:25:11] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Remote host closed the connection)
[09:25:14] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:25:46] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 250 seconds)
[09:27:13] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[09:28:06] *** Joins: humberto1 (~humbertow@189.236.19.103)
[09:28:08] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 256 seconds)
[09:28:35] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[09:28:37] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Client Quit)
[09:29:02] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[09:29:43] *** Joins: analoq (~yashi@user/dies)
[09:30:11] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[09:30:46] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:30:57] *** Quits: humbertowoody (~humbertow@189.236.19.103) (Ping timeout: 240 seconds)
[09:32:03] *** Joins: XV9 (~XV8@2601:5cb:c001:50:f81d:9eae:67e3:1b35)
[09:33:26] *** Joins: millido (~millido@84.210.150.128)
[09:33:43] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[09:34:22] *** Joins: mickey85 (~user@user/mickey)
[09:34:42] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[09:34:43] *** mickey85 is now known as mickey8
[09:34:52] *** Quits: XV8 (~XV8@2601:5cb:c001:50:4cb1:cccb:3f96:2061) (Ping timeout: 250 seconds)
[09:35:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[09:35:44] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[09:35:47] *** Joins: Babar (~Babar@2405:4803:ff4d:98d0:61b3:1016:cefd:49d1)
[09:39:12] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[09:40:46] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 245 seconds)
[09:42:00] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[09:43:43] *** Joins: bluedust_ (~bluedust@117.241.177.177)
[09:44:55] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[09:44:57] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[09:46:37] *** Quits: bluedust (~bluedust@103.161.144.140) (Ping timeout: 256 seconds)
[09:48:41] *** Joins: M3troidman (~buttler@196.244.191.46)
[09:51:35] <karlnashville> i'm bored
[09:51:39] <karlnashville> and lazy
[09:54:08] *** Joins: the_lanetly_052 (~the_lanet@194.135.155.67)
[09:56:31] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[10:00:46] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[10:01:21] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[10:01:46] *** Joins: dreamon (~dreamon@pd9503a7e.dip0.t-ipconnect.de)
[10:01:55] *** Quits: maryo87 (~Maryo@user/maryo) (Ping timeout: 256 seconds)
[10:02:23] *** Joins: c4017w__ (~c4017@209.52.68.8)
[10:02:25] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:7903:eedc:f41f:e15d) (Read error: Connection reset by peer)
[10:02:58] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:03:36] *** Joins: dvx (~dvx@5.181.92.64)
[10:04:05] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 250 seconds)
[10:04:07] <iflema> ill put you in a group thats due to go soon...
[10:04:45] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[10:05:53] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[10:07:07] *** Quits: jazzy (~jaziz@user/jaziz) (Remote host closed the connection)
[10:07:15] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[10:07:23] <karlnashville> due to go where?
[10:07:34] <iflema> soon
[10:07:34] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[10:07:54] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[10:07:59] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[10:08:14] <karlnashville> soon refers to an inquiry about time not location
[10:08:18] <karlnashville> lol
[10:08:39] *** Joins: jazzy (~jaziz@user/jaziz)
[10:08:44] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[10:09:30] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[10:11:03] *** Joins: swinnenb (~swinnenb@user/swinnenb)
[10:11:05] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[10:12:14] *** Joins: telboon (~telboon@user/telboon)
[10:13:14] *** Joins: fef (~thedawn@user/thedawn)
[10:14:18] *** Joins: manti7 (~manti7@176.10.104.94)
[10:14:21] *** Joins: zeenk (~zeenk@2a02:2f04:a204:7c00:d1e7:19c4:1020:b94b)
[10:15:34] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:15:46] *** Joins: hams (~hams@c-73-255-22-88.hsd1.tx.comcast.net)
[10:15:46] *** Quits: hams (~hams@c-73-255-22-88.hsd1.tx.comcast.net) (Changing host)
[10:15:46] *** Joins: hams (~hams@user/hams)
[10:16:32] *** Joins: hqdruxn08 (~hqdruxn08@user/hqdruxn08)
[10:17:05] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Quit: WeeChat 3.4)
[10:17:44] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[10:17:54] *** Quits: bluedust_ (~bluedust@117.241.177.177) (Remote host closed the connection)
[10:18:46] *** Quits: hqdruxn08_ (~hqdruxn08@user/hqdruxn08) (Ping timeout: 260 seconds)
[10:18:52] *** Joins: maryo87 (~Maryo@user/maryo)
[10:19:15] *** Quits: swinnenb (~swinnenb@user/swinnenb) (Ping timeout: 250 seconds)
[10:20:36] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[10:20:41] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[10:21:24] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[10:22:51] *** Joins: Pajama_Day (~Pajama_Da@75.162.153.12)
[10:23:26] *** Quits: dreamon (~dreamon@pd9503a7e.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[10:23:32] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[10:23:49] *** Joins: zeenk2 (~zeenk@2a02:2f04:a104:3700:5a8:957d:2155:a792)
[10:24:01] *** Quits: zeenk (~zeenk@2a02:2f04:a204:7c00:d1e7:19c4:1020:b94b) (Ping timeout: 250 seconds)
[10:24:11] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[10:24:51] *** Joins: djhankb (~djhankb@208.113.164.68)
[10:26:16] *** Joins: jpodivin (~jpodivin@cgnat44-pool1-236-13.poda.cz)
[10:27:15] *** Quits: Pajama_Day (~Pajama_Da@75.162.153.12) (Quit: Leaving)
[10:27:15] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[10:27:56] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[10:28:21] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:28:23] *** Joins: zaquest (~notzaques@5.130.79.72)
[10:29:05] *** Joins: upsala (~zcb@185.213.155.232)
[10:30:58] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[10:31:48] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[10:32:16] *** Joins: ensyde (~ensyde@2600:1700:2050:1040:dde2:c55f:f2c9:43fc)
[10:32:39] *** Quits: duds- (~duds-@gateway/tor-sasl/duds) (Remote host closed the connection)
[10:32:51] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[10:32:51] *** karlnashville is now known as karl_AFK
[10:32:56] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[10:33:41] *** Joins: duds- (~duds-@gateway/tor-sasl/duds)
[10:37:33] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:38:45] *** Quits: telboon (~telboon@user/telboon) (Ping timeout: 256 seconds)
[10:42:15] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[10:42:22] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[10:42:22] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Read error: Connection reset by peer)
[10:42:39] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[10:43:06] *** Joins: jazzy2 (~jaziz@user/jaziz)
[10:43:41] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[10:44:19] *** Joins: ExeciN (~ExeciN@user/nicexe)
[10:44:28] *** Quits: icy_hot (~icy_hot@99-83-35-64.lightspeed.elpstx.sbcglobal.net) (Quit: WeeChat 3.4)
[10:45:15] *** Quits: zeenk2 (~zeenk@2a02:2f04:a104:3700:5a8:957d:2155:a792) (Ping timeout: 250 seconds)
[10:45:50] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[10:46:07] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[10:46:20] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[10:47:01] *** Joins: zeenk2 (~zeenk@82-77-96-125.cable-modem.hdsnet.hu)
[10:47:41] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[10:47:56] *** Quits: zeenk2 (~zeenk@82-77-96-125.cable-modem.hdsnet.hu) (Client Quit)
[10:49:51] *** Joins: Atque (~Atque@user/atque)
[10:52:18] *** Quits: structoha (~structoha@gateway/tor-sasl/structoha) (Ping timeout: 276 seconds)
[10:52:35] *** Joins: dreamon (~dreamon@ppp-88-217-91-105.dynamic.mnet-online.de)
[10:52:36] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:53:21] *** Quits: M3troidman (~buttler@196.244.191.46) (Read error: Connection reset by peer)
[10:54:15] *** Joins: M3troidman (~buttler@196.244.191.46)
[10:54:31] <Repiphany> Is there any pure numpy way to "window" a 2D numpy array so that out-of-bounds indices use the edge values
[10:54:48] *** Joins: ert (~ert@2001:4b99:1:1:216:3eff:fee5:446f)
[10:56:22] <Repiphany> I could just pad the array with `np.pad(arr, (1, 1), 'edge')` but would rather not initialize a new array
[10:56:46] <Repiphany> and `np.take` only seems to work on flattened arrays
[10:57:02] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[10:58:28] *** Joins: structoha (~structoha@gateway/tor-sasl/structoha)
[10:58:33] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[10:59:14] *** Joins: gusto (~Augustus@109.255.100.54)
[10:59:17] *** Quits: the_lanetly_052 (~the_lanet@194.135.155.67) (Ping timeout: 240 seconds)
[10:59:17] *** Quits: esther (~esther@199.10.64.86) (Ping timeout: 240 seconds)
[10:59:34] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[10:59:57] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[11:02:17] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[11:02:52] *** Joins: c4017w_ (~c4017@209.52.68.8)
[11:03:16] *** Quits: acresearch (~acresearc@user/acresearch) (Ping timeout: 250 seconds)
[11:03:20] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[11:04:06] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[11:06:44] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[11:06:45] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[11:07:22] <Repiphany> For XY purposes, I'm trying to find local maxima in a 2D array without using scipy
[11:08:57] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[11:10:50] *** Joins: luigibu (~luigi@61.red-79-159-77.dynamicip.rima-tde.net)
[11:11:29] *** Joins: bluedust (~bluedust@117.241.177.177)
[11:12:16] *** karl_AFK is now known as karlnashville
[11:12:50] *** Joins: Algernon69 (~Algernon6@88.124.69.179)
[11:14:18] *** Quits: AlanMD (~AlanMD@5-12-8-203.residential.rdsnet.ro) (Remote host closed the connection)
[11:15:09] *** Joins: AlanMD (~AlanMD@5-12-8-203.residential.rdsnet.ro)
[11:16:04] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[11:18:38] *** Joins: iomari891 (~iomari891@105.112.138.38)
[11:21:25] *** Joins: jazzy (~jaziz@user/jaziz)
[11:21:38] *** Joins: programmar (~whatever@118.69.128.37)
[11:21:56] <programmar> is there anyhow i can tell the flask's default timeout period ?
[11:22:21] *** Quits: bluedust (~bluedust@117.241.177.177) (Remote host closed the connection)
[11:22:48] *** Joins: Atque (~Atque@user/atque)
[11:27:05] *** Joins: kosh (~kosh@user/kosh)
[11:30:38] *** Joins: MajorBiscuit (~MajorBisc@c-001-028-049.client.tudelft.eduvpn.nl)
[11:30:53] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:31:14] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[11:31:18] *** Joins: palasso (~palasso@user/palasso)
[11:33:23] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10ed:252e:899e:dfb6:fe21:e622)
[11:34:27] *** Quits: naranja (~orange@user/orangeboxcutter) (Quit: AFK)
[11:34:32] *** karlnashville is now known as karl_AFK
[11:34:49] *** Joins: naranja (~orange@user/orangeboxcutter)
[11:37:07] *** Quits: Algernon69 (~Algernon6@88.124.69.179) (Ping timeout: 256 seconds)
[11:38:58] *** Joins: tobybl (~tobybl@248.64.200.146.dyn.plus.net)
[11:39:35] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:41:35] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 250 seconds)
[11:42:09] *** karl_AFK is now known as karlnashville
[11:42:16] *** Joins: ivii (~ivan@user/ivii)
[11:42:52] *** Joins: morteza24 (~morteza24@178.131.28.196)
[11:43:47] *** Joins: chele (~chele@user/chele)
[11:45:09] *** Quits: morteza24 (~morteza24@178.131.28.196) (Client Quit)
[11:45:28] *** Joins: telboon (~telboon@user/telboon)
[11:45:28] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[11:46:11] *** Quits: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com) (Ping timeout: 256 seconds)
[11:46:11] *** Joins: duuude (~user@user/duuude)
[11:46:29] *** o is now known as niko
[11:47:06] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:47:24] *** Joins: greedom (~greedom@p200300de670b300006c73a846cad12df.dip0.t-ipconnect.de)
[11:47:28] *** Quits: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net) (Ping timeout: 250 seconds)
[11:47:58] *** Joins: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com)
[11:48:46] *** Joins: jay-m126 (~jay-m@129.0.76.218)
[11:48:50] *** Joins: jay-m126_ (~jay-m@129.0.76.218)
[11:48:51] *** Joins: jay-m1261 (~jay-m@129.0.76.218)
[11:50:02] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[11:50:29] *** Joins: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net)
[11:54:31] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 245 seconds)
[11:54:37] *** Quits: jay-m1261 (~jay-m@129.0.76.218) (Ping timeout: 240 seconds)
[11:54:37] *** Quits: jay-m126_ (~jay-m@129.0.76.218) (Ping timeout: 240 seconds)
[11:54:37] *** Quits: jay-m126 (~jay-m@129.0.76.218) (Ping timeout: 240 seconds)
[11:54:37] *** Joins: tristan_ (~tristan@223.62.202.137)
[11:55:15] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Read error: Connection reset by peer)
[11:55:46] *** Quits: ensyde (~ensyde@2600:1700:2050:1040:dde2:c55f:f2c9:43fc) (Ping timeout: 245 seconds)
[11:55:53] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:11f6:5644:76a6:f278) (Ping timeout: 250 seconds)
[11:56:19] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[11:56:26] *** Quits: tristan_ (~tristan@223.62.202.137) (Remote host closed the connection)
[11:56:50] *** Joins: tristan_ (~tristan@223.62.202.137)
[11:57:17] *** Joins: esther (~esther@199.10.64.86)
[11:57:26] *** Quits: yitz (~yitz@exercism/yitz) (Ping timeout: 250 seconds)
[11:58:05] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[12:00:21] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[12:00:32] <Repiphany> ls
[12:00:33] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[12:00:49] *** Joins: jay-m126 (~jay-m@129.0.76.218)
[12:00:53] *** Joins: jay-m126_ (~jay-m@129.0.76.218)
[12:00:55] *** Joins: jay-m1261 (~jay-m@129.0.76.218)
[12:01:18] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[12:01:45] *** Joins: audio (~audio@user/audio)
[12:02:09] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:02:21] *** Joins: kmh_ (~kmh@2a00:6020:5004:6800:cf4:c72f:b99:2290)
[12:02:37] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 240 seconds)
[12:02:47] *** Quits: canton7 (canton7@about/csharp/canton7) (Remote host closed the connection)
[12:02:49] *** Quits: ryu` (~ryusaku@user/ryu/x-3206151) (Quit: SCV ready!)
[12:02:50] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[12:02:57] *** Joins: kostkon_ (~kostkon@2a02:587:a116:f212:4d86:1980:f91d:1e03)
[12:03:02] <audio> i saw some code that looks like this: `MyClass(class_param1, class_param2)(x)` -- how would the class have to look to be able to handle `x` without error? never seen this b4
[12:03:23] *** Joins: c4017w__ (~c4017@209.52.68.8)
[12:03:36] <deniska> audio: __call__
[12:03:36] <Repiphany> audio: __call__ dundermethod
[12:04:11] <audio> thanks
[12:04:13] *** Quits: mjsir911 (~bnc@user/mjsir911) (Ping timeout: 268 seconds)
[12:04:13] *** Quits: oddish (~oddish@2a01:4f8:1c1c:a9da::1) (Ping timeout: 268 seconds)
[12:04:13] *** Quits: BtbN (btbn@ffmpeg/developer/btbn) (Ping timeout: 268 seconds)
[12:04:13] *** Quits: ghormoon (~ghormoon@ghorland.net) (Ping timeout: 268 seconds)
[12:04:13] *** Quits: greyblue9 (sid500829@id-500829.ilkley.irccloud.com) (Ping timeout: 268 seconds)
[12:04:13] *** Quits: joel135 (sid136450@id-136450.hampstead.irccloud.com) (Ping timeout: 268 seconds)
[12:04:17] <audio> what is dundermethod
[12:04:38] *** Joins: kl1n3 (~freedom0@libera/staff/kline)
[12:04:38] <deniska> audio: double underscore method, like __init__ or __call__
[12:04:43] *** Joins: BtbN (btbn@ffmpeg/developer/btbn)
[12:04:43] *** Joins: mjsir911 (~bnc@user/mjsir911)
[12:04:44] *** Joins: Ennea_ (~Ennea@user/ennea)
[12:04:44] *** Joins: BSaboia_ (~bsaboia@95.179.154.99)
[12:04:50] *** Quits: lithamme- (~lithammer@2a02:2770::21a:4aff:fe88:c18d) (Ping timeout: 268 seconds)
[12:04:50] *** Quits: Titore (~Titore@user/titore) (Ping timeout: 268 seconds)
[12:04:50] *** Quits: jesse-s (sid98646@id-98646.hampstead.irccloud.com) (Ping timeout: 268 seconds)
[12:04:50] *** Quits: r0bby (r0bby@user/r0bby) (Ping timeout: 268 seconds)
[12:04:50] *** Joins: PacKetIV (PacKetIV@user/packetiv)
[12:04:51] *** Joins: ghormoon (~ghormoon@ghorland.net)
[12:04:53] *** Joins: lithammer (~lithammer@arch-vps.cloud.tilaa.com)
[12:04:58] *** Joins: Pici` (~bnrubin@li1014-36.members.linode.com)
[12:05:05] *** Joins: Titore (~Titore@user/titore)
[12:05:23] <deniska> audio: a list of them here: https://docs.python.org/3/reference/datamodel.html#special-method-names
[12:05:27] *** Quits: zardian[m] (~zardi@2001:470:69fc:105::1:4444) (Ping timeout: 268 seconds)
[12:05:27] *** Quits: anomalous_creato (~anomalous@2001:470:69fc:105::6ed1) (Ping timeout: 268 seconds)
[12:05:27] *** Quits: one-star-chef (~one-star-@2001:470:69fc:105::165c) (Ping timeout: 268 seconds)
[12:05:28] *** Quits: Forsaken87 (~quassel@2a02:908:1866:e360:88b0:2032:220f:3f73) (Ping timeout: 268 seconds)
[12:05:28] *** Quits: vodkra (~vodkra@user/vodkra) (Ping timeout: 268 seconds)
[12:05:28] *** Quits: PocketKiller (PacKetIV@user/packetiv) (Ping timeout: 268 seconds)
[12:05:28] *** Quits: BSaboia (~bsaboia@2a05:f480:1400:b88:5400:3ff:fe51:575c) (Ping timeout: 268 seconds)
[12:05:28] *** Quits: MrElendig (~Urist@archlinux/op/MrElendig) (Ping timeout: 268 seconds)
[12:05:28] *** Quits: Madda (~Madda@2a05:f6c3:1935:0:2990:3a03:c1e1:2949) (Ping timeout: 268 seconds)
[12:05:28] *** Quits: madduck (~madduck@user/madduck) (Ping timeout: 268 seconds)
[12:05:28] *** Quits: SnoopJ (~snoopj@user/snoopj) (Ping timeout: 268 seconds)
[12:05:28] *** Quits: tpr (~tpr@user/tpr) (Ping timeout: 268 seconds)
[12:05:28] *** Quits: dnns01_ (~quassel@2a02:c207:3003:651::1) (Ping timeout: 268 seconds)
[12:05:28] *** Quits: relipse (sid16131@id-16131.tinside.irccloud.com) (Ping timeout: 268 seconds)
[12:05:28] *** Quits: kristjansson (sid126207@id-126207.tinside.irccloud.com) (Ping timeout: 268 seconds)
[12:05:28] *** Quits: agronholm (sid403424@id-403424.helmsley.irccloud.com) (Ping timeout: 268 seconds)
[12:05:45] *** Joins: acresearch (~acresearc@user/acresearch)
[12:06:04] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (Ping timeout: 268 seconds)
[12:06:04] *** Quits: kmh (~kmh@2a00:6020:5004:6800:4593:8555:d7a7:3d61) (Ping timeout: 268 seconds)
[12:06:04] *** Quits: HurricaneHarry (~quassel@2a02-a455-9d06-1-5d41-fbd-1f69-a0df.fixed6.kpn.net) (Ping timeout: 268 seconds)
[12:06:04] *** Quits: TML (~tml@user/tml) (Ping timeout: 268 seconds)
[12:06:04] *** Quits: mmercer (daemoen@2605:d100:0:2d:5054:ff:fef0:3953) (Ping timeout: 268 seconds)
[12:06:04] *** Quits: Pici (bnrubin@2600:3c03::f03c:91ff:fe60:2576) (Ping timeout: 268 seconds)
[12:06:04] *** Quits: alxndr_ (~alexander@ybti.net) (Ping timeout: 268 seconds)
[12:06:04] *** Quits: OlaNys (onm@irccore.ofelbar.se) (Ping timeout: 268 seconds)
[12:06:04] *** Quits: Ennea (~Ennea@user/ennea) (Ping timeout: 268 seconds)
[12:06:04] *** Quits: kostkon (~kostkon@2a02:587:a116:f212:4d86:1980:f91d:1e03) (Ping timeout: 268 seconds)
[12:06:04] *** Quits: jocke-l (jocke-l@a.x0.is) (Ping timeout: 268 seconds)
[12:06:05] *** Ennea_ is now known as Ennea
[12:06:10] *** Joins: Vonter (~Vonter@user/vonter)
[12:06:15] *** Joins: dnns01 (~quassel@2a02:c207:3003:651::1)
[12:06:15] *** Joins: Forsaken87 (~quassel@2a02:908:1866:e360:88b0:2032:220f:3f73)
[12:06:16] *** Joins: greyblue9 (sid500829@id-500829.ilkley.irccloud.com)
[12:06:21] *** Joins: joel135 (sid136450@id-136450.hampstead.irccloud.com)
[12:06:28] *** Joins: HurricaneHarry (~quassel@2a02-a455-9d06-1-55ce-a0a1-1837-cda.fixed6.kpn.net)
[12:06:32] *** Joins: OlaNys (onm@irccore.ofelbar.se)
[12:06:32] *** Quits: Mogget (Mogget@vogon02.moshwire.com) (Ping timeout: 250 seconds)
[12:06:37] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[12:06:43] *** Joins: vodkra (~vodkra@user/vodkra)
[12:06:48] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[12:06:49] *** Joins: MrElendig (~Urist@archlinux/op/MrElendig)
[12:06:54] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[12:07:08] *** Joins: madduck (~madduck@user/madduck)
[12:07:18] *** Joins: alxndr (~alexander@ybti.net)
[12:07:26] *** Joins: TML (~tml@user/tml)
[12:07:33] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[12:07:39] *** Joins: mrwick (~mrwick@user/mrwick)
[12:07:39] *** Joins: mmercer (daemoen@2605:d100:0:2d:5054:ff:fef0:3953)
[12:07:41] *** Joins: kristjansson (sid126207@id-126207.tinside.irccloud.com)
[12:07:42] *** Joins: jesse-s (sid98646@id-98646.hampstead.irccloud.com)
[12:07:43] *** Joins: r0bby (r0bby@user/r0bby)
[12:07:49] *** Joins: relipse (sid16131@id-16131.tinside.irccloud.com)
[12:07:52] <audio> deniska, Repiphany https://github.com/keras-team/keras/blob/master/keras/layers/core/dense.py why is it not there, only `call`
[12:07:56] *** Joins: agronholm (sid403424@id-403424.helmsley.irccloud.com)
[12:08:12] *** Joins: pycode1 (~pycode3@2001:b07:5d28:551:44de:2e0c:b099:837a)
[12:08:24] <Repiphany> It's inheriting from Layer
[12:08:41] <audio> oh
[12:08:57] *** Quits: rjwiii (~mr-rich@idlerpg/player/mr-rich) (Ping timeout: 240 seconds)
[12:09:20] *** Joins: BtbN_ (btbn@ffmpeg/developer/btbn)
[12:10:00] *** Joins: blackhats (~blackhats@2602:fccf:1:1050::)
[12:10:27] *** Joins: mexen (uid495612@user/mexen)
[12:10:33] *** Quits: acresearch (~acresearc@user/acresearch) (Ping timeout: 256 seconds)
[12:10:33] *** Quits: BtbN (btbn@ffmpeg/developer/btbn) (Ping timeout: 256 seconds)
[12:10:33] *** BtbN_ is now known as BtbN
[12:11:37] *** Quits: kline (~freedom0@libera/staff/kline) (Ping timeout: 633 seconds)
[12:11:38] *** Quits: taeaad_ (~taeaad@user/taeaad) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[12:12:34] *** Quits: LiENUS (~quake@108-242-135-2.lightspeed.btrgla.sbcglobal.net) (Quit: ZNC 1.8.2 - https://znc.in)
[12:12:45] *** Joins: LiENUS (~quake@108-242-135-2.lightspeed.btrgla.sbcglobal.net)
[12:12:52] *** Joins: taeaad (~taeaad@user/taeaad)
[12:13:10] *** Joins: canton7 (~canton7@about/csharp/canton7)
[12:13:39] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[12:14:57] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 250 seconds)
[12:15:28] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:15:29] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[12:16:53] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[12:17:17] *** Quits: Hobbyboy (Hobbyboy@hobbyboy.co.uk) (Quit: The BNC has broken!)
[12:17:58] *** Joins: blubeerd (~AdminUser@174.31.93.249)
[12:18:09] *** Joins: doosboox (~doosboox@194.132.186.60)
[12:18:14] *** Joins: SnoopJ (~snoopj@user/snoopj)
[12:18:23] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[12:18:24] *** Joins: jocke-l (jocke-l@a.x0.is)
[12:18:30] *** Joins: one-star-chef (~one-star-@2001:470:69fc:105::165c)
[12:18:36] <blubeerd> hello?
[12:18:49] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[12:19:10] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 260 seconds)
[12:19:12] *** Joins: tpr (~tpr@user/tpr)
[12:19:24] *** Joins: Mogget (~Mogget@vogon02.moshwire.com)
[12:19:37] *** Quits: esther (~esther@199.10.64.86) (Ping timeout: 240 seconds)
[12:19:53] <supakeen> Hi.
[12:20:11] *** Joins: Madda (~Madda@2a05:f6c3:1935:0:2990:3a03:c1e1:2949)
[12:20:15] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[12:20:29] *** Joins: anomalous_creato (~anomalous@2001:470:69fc:105::6ed1)
[12:20:39] *** Joins: zardian[m] (~zardi@2001:470:69fc:105::1:4444)
[12:20:45] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[12:20:56] *** Quits: blubeerd (~AdminUser@174.31.93.249) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[12:22:05] *** Joins: andreasbuhr (~quassel@p549db9a5.dip0.t-ipconnect.de)
[12:22:12] *** Quits: andreasbuhr (~quassel@p549db9a5.dip0.t-ipconnect.de) (Remote host closed the connection)
[12:22:22] <doosboox> I have a CGI script that takes different URLs such that /script?URL adds URL to the DB. I need to sanitize these URLs, because I've found that URLs like https://example.com/foo/./bar.html have been submitted. I have a rule to block https://example.com/bar.html, but of course that rule doesn't match this URL. For now I remove '/..' and '/.' but I'm
[12:22:22] <doosboox> worried that this isn't good enough.
[12:22:31] <doosboox> any better suggestions?
[12:22:40] *** Joins: rjwiii (~mr-rich@072-187-031-098.res.spectrum.com)
[12:23:05] *** Joins: andreasbuhr (~quassel@p549db9a5.dip0.t-ipconnect.de)
[12:24:03] <grawity> but do you really *need* to care about what some other random webserver does with /. and /..?
[12:24:15] *** Joins: olasd (~olasd@softwareheritage/olasd)
[12:24:24] <grawity> it's the wrong place to do such sanitization, IMO
[12:25:43] <doosboox> grawity: Yes and no. These URLs point to atom feeds, and my site fetches those and publish the entries. I.e. it's an aggregator. But I want to block some feeds, and I need to sanitize these URLs so nobody circumvents my block rules
[12:26:04] *** Joins: d3sync (~d3sync@62.1.158.240)
[12:26:07] <doosboox> I'm not worried about protecting others from dir traversal attacks
[12:26:25] *** Quits: audio (~audio@user/audio) (Ping timeout: 256 seconds)
[12:26:31] *** Joins: yitz (~yitz@exercism/yitz)
[12:26:41] *** Joins: sawk (~quassel@151.81.119.74)
[12:27:25] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[12:27:46] *** Quits: x4rchimedes (~archimed3@2a00:23c5:dab6:a501:31e1:52f9:41bb:ebbe) (Ping timeout: 250 seconds)
[12:27:52] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[12:28:00] *** Joins: Asgaroth (~Asgaroth@93.107.191.92)
[12:28:16] *** Joins: jim87 (~quassel@93.55.249.30)
[12:28:43] <doosboox> I've found ways to absolutize paths based on my cwd, but obviously that's not really what I'm after
[12:28:48] <TML> doosboox: Then what exactly ARE you worried about?
[12:28:58] *** Joins: flea (nosoul@gateway/vpn/protonvpn/nosoul)
[12:29:40] <doosboox> TML: If I have a rule blocking example.com/atom.xml someone can circumvent that by submitting example.com/./atom.xml
[12:29:44] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Quit: WeeChat 2.8)
[12:29:50] <supakeen> Probably the canonical representation of URLs, e.g. only wanting one entry per URL.
[12:29:59] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Quit: beastDivision)
[12:30:13] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[12:30:22] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 260 seconds)
[12:31:04] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:31:08] <TML> doosboox: That's OK, because those aren't the same URL - just because _your_ httpd would extrapolate those to the same filesystem representation doesn't mean an arbitrary 3rd party httpd will. You can't safely make that assumption.
[12:32:00] <TML> In Jetty, for example, there's no reason whatsoever to believe that example.com/atom.xml and example.com/./atom.xml lead to the same representation of the same resource
[12:32:08] *** Quits: greedom (~greedom@p200300de670b300006c73a846cad12df.dip0.t-ipconnect.de) (Remote host closed the connection)
[12:33:01] <doosboox> TML: People submit their own feeds, and could easily choose an httpd that allows them to circumvent this. And either way I don't want to fetch a blocked feed at all.
[12:33:18] <doosboox> This has actually happened. It's not a hypothetical problem
[12:33:35] <TML> doosboox: My point is that you cannot categorically state that example.com/./atom.xml is the same as the feed you wanted to block
[12:34:06] <doosboox> *My* script assumes that example.com/atom.xml and example.com/./atom.xml are different files, but I know it's not. And I want to block that file :(
[12:34:15] <deniska> if '/./' in url or '/../' in url: block :D
[12:34:35] <grawity> would it be enough to block whole domains ("origins")?
[12:34:49] <grawity> the domain is something you can at least somewhat safely canonicalize (assuming HTTPS)
[12:35:00] *** Joins: tobybl_ (~tobybl@214.242.200.146.dyn.plus.net)
[12:35:04] <TML> doosboox: How do you know it's not?
[12:35:28] <doosboox> deniska: that's the same as removing '/..' and '/.' which I do now, but I'm worried that there might be ways to circumvent that.
[12:35:29] *** Quits: tobybl (~tobybl@248.64.200.146.dyn.plus.net) (Ping timeout: 256 seconds)
[12:35:42] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[12:35:46] <doosboox> TML: in this case because I know the feed in question and even the server they use
[12:36:37] *** Joins: LimeOn (~user@user/limeon)
[12:36:42] <TML> doosboox: There might be, because (again) different httpds do completely different things. About the best thing you could do is try fetching the resource you're given, compare it somehow (e.g., a hash) to feeds you already know about/fetch, and if they're a duplicate, drop the new entry.
[12:36:55] <deniska> doosboox: at the end of the day, another web server is not something you control, for example a server can be set up in a way that example.com/foo.xml and example.com/bar.xml both point to the same file
[12:36:55] <doosboox> grawity: no, because I might want to allow /~foo/atom.xml but not /~bar/atom.xml, but they may circumvent that by submitting /~foo/atom.xml/../../~bar/atom.xml
[12:36:57] *** Joins: han-solo (~hanish@user/han-solo)
[12:37:22] <doosboox> TML: the hash would be different if the feed has changed
[12:38:13] <deniska> You can update hashes of banned feeds periodically :)
[12:38:29] <TML> doosboox: That's pretty trivial to fix, though: when given a new feed, iterate every known feed and compare the hash with the new feed URL
[12:38:33] <doosboox> deniska: the problem is still to recognize blocked feeds
[12:39:03] <doosboox> TML: but the above examples look like different URLs and thus produce different hashes
[12:39:13] <TML> doosboox: I didn't say hash the URL
[12:39:16] <TML> hash the CONTENT
[12:39:32] <deniska> Who is the adversary in this picture? Is it a person controlling a web server you are fetching a feed from?
[12:39:42] <doosboox> TML: fetch the entries and hash them one by one?
[12:39:57] <TML> doosboox: Yes
[12:40:47] <grawity> most feed entries point to their own 'post' URLs or have unique IDs for them
[12:41:06] <doosboox> Alright, to be absolutely detailed about this (sorry, I should have been that from the start): My aggregator publishes *its own* atom feed, and I've had problems with people submitting that and causing recursion. Hence I've added it to the block rules, but someone has circumvented that rule
[12:41:15] <grawity> and/or have a feed-wide "self" URL
[12:41:32] <grawity> like in Atom there's <feed> <link rel=self href=...> </feed> that's going to be the same even if accessed via shady URLs
[12:41:38] *** Quits: programmar (~whatever@118.69.128.37) (Quit: Leaving)
[12:41:57] *** karlnashville is now known as karl_AFK
[12:42:00] <deniska> doosboox: so then you need to detect whether it's your own feed, which makes the situation simpler
[12:42:09] <grawity> ok, so if you want to avoid recursion, publish such a unique ID tag in your feed, and have the fetcher look for it
[12:42:17] <doosboox> I use the entry URL as primary key in my DB, but in case of collisions I update the Title, Author, Updated_time, and Origin_feed
[12:42:21] <deniska> doosboox: there's probably some field you can put some ID inside your feed
[12:42:28] <grawity> much simpler situation than e.g. trying to ban content or to avoid specific hosts
[12:42:53] <TML> deniska: Even easier, just don't allow your aggregator code to connect back to its own host in the first place
[12:43:00] <grawity> Atom has 2-3 such tags you could use, don't remember RSS, but well they're all XML, you can literaly add arbitrary tags under a custom namespace
[12:43:09] <TML> s/deniska/doosboox/
[12:43:19] <doosboox> So I'd have to hard code some exception, basically?
[12:43:20] *** Joins: Payam38 (~Payam@138.106.57.132)
[12:43:21] <grawity> nah someone will reverse-proxy it
[12:43:25] *** Quits: KombuchaKip (~kip@192.252.230.5) (Ping timeout: 256 seconds)
[12:43:28] *** Joins: arinov (~arinov@213.194.126.155)
[12:43:47] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[12:43:48] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Client Quit)
[12:43:51] <grawity> well, I guess you can't avoid *all* malicious feeds...
[12:44:04] <grawity> but yes, basically hardcode an exception for "this is my feed aggregator"
[12:44:23] *** Joins: Viewday115 (~Viewday@user/viewday)
[12:44:41] <TML> doosboox: Does your aggregator use a custom user-agent? Look for that in the inbound request and drop it if you're requesting yourself.
[12:44:47] <doosboox> I'll have to ponder that. I'd rather go with some way to canocalize a URL path, but if that's not possible
[12:45:03] *** Joins: bluedust (~bluedust@117.241.177.177)
[12:45:09] <grawity> you'd still be hardcoding an exception that way
[12:45:15] <grawity> it'd just be an exception for your URL instead
[12:45:17] <doosboox> TML: no it doesn't. To make things more difficult it also fetches feeds over the gemini:// protocol, which doesn't have user agent
[12:45:26] <doosboox> grawity: true
[12:45:45] <TML> Never heard of that one
[12:45:54] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[12:45:54] *** Viewday115 is now known as Viewday11
[12:45:59] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[12:46:10] <doosboox> TML: it's sort of a spiritual successor to gopher, but a little souped up
[12:46:25] *** Joins: someuser (~user@197.54.38.140)
[12:46:39] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[12:47:15] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[12:47:17] <TML> doosboox: So it only fetches feeds from software that responds to the gemini protocol?
[12:47:35] *** Joins: shad (~shad@user/shad)
[12:47:35] <TML> That might make it easier to draw a meaningful definition of "canonicalize a URL"
[12:47:56] <TML> While HTTP makes no such distinction, maybe gemini does
[12:47:57] <doosboox> TML: URLs work the same. It's just the call that looks different
[12:48:35] <grawity> does your aggregator also *publish* feeds over gemini://?
[12:48:39] <doosboox> But I'll experiment a bit with a unique string in the file to block.
[12:48:42] <doosboox> grawity: yeah
[12:49:15] <TML> doosboox: My point is that URLs work however the responding service say they work; so if there's only one or two gemini servers out there, you might be able to map all possible definitions of how they interpret URLs
[12:49:35] <grawity> if you're publishing an Atom feed, <atom><id>...</id> or <atom><link rel="self" href=.../> lets you put a recognizable URL
[12:49:36] <doosboox> TML: there are probably more than 50 at this point
[12:49:53] <TML> More than 50 servers which implement the gemini:// protocol?
[12:49:56] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[12:49:57] <doosboox> yes
[12:50:11] <doosboox> it's a *very* simple protocol to write a server or client for
[12:50:27] <TML> That seems unnecessarily high
[12:50:38] <grawity> 50 hosts or 50 programs?
[12:50:42] <doosboox> you can literally write a full-featured CLI client in a weekend in a language you didn't know before hand (I've done this)
[12:50:48] <doosboox> grawity: 50 server programs
[12:50:54] <grawity> anyway I have a better question
[12:50:58] <doosboox> shoot
[12:51:00] <grawity> do you publish feeds in CDF format or only RSS/Atom
[12:51:19] <deniska> https://gemini.circumlunar.space/software/ non-exhaustive list :)
[12:51:39] <grawity> everybody's rolling out new protocols but nobody remembers good old IE5 ;_;
[12:51:40] <TML> baffling
[12:51:57] <doosboox> grawity: Atom and "gemsub", which is basically a text file with links.
[12:52:30] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:3992:cb3b:a718:c754)
[12:53:10] <TML> this is like one of those "ladies who lunch" things, isn't it?
[12:53:22] <grawity> what's that
[12:53:31] <grawity> no, I proably don't want to know
[12:53:32] <TML> There are so many gemini server implementations specifically *because* no one uses the protocol
[12:53:33] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[12:53:47] <doosboox> Now that I think about this I realize there are *lots* of ways to circumvent this. Someone could set up their own aggregator that pulls my atom feed, puts the entries in their own and submits it...
[12:54:10] <grawity> you can't defend against malicious servers in general just by doing loop detection, yes
[12:54:22] <grawity> someone could set up their own feed that just literally gives you 100000s of garbage entries
[12:54:25] <doosboox> TML: I wouldn't say no-one uses it. It's small, sure, but the number of servers rose from ~500 to ~2000 last year
[12:54:33] <grawity> without the effort of pulling your feed
[12:54:35] <doosboox> grawity: yeah, you're right
[12:54:39] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[12:54:56] <grawity> which doesn't mean you shouldn't do loop detection
[12:55:15] <TML> doosboox: 2000 hosts is pretty much "no one uses it" in my book :)
[12:55:39] <doosboox> Hmmm... maybe I should just *not* update the Origin_feed field when there are entry URL collisions
[12:55:49] <doosboox> TML: yeah, it's a small community for sure :)
[12:56:00] <grawity> TML: that's probably more than there are IRC servers tbh
[12:56:07] *** Quits: hams (~hams@user/hams) (Ping timeout: 250 seconds)
[12:56:48] *** Joins: Hobbyboy (Hobbyboy@hobbyboy.co.uk)
[12:56:49] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:57:09] <grawity> well
[12:57:17] <grawity> according to netsplit.de there are 2063 IRC servers
[12:57:25] <TML> grawity: I don't disagree that IRC is largely a dead protocol :)
[12:57:29] *** Quits: dunc (sid16@id-16.uxbridge.irccloud.com) (Ping timeout: 252 seconds)
[12:57:39] *** Joins: rendar (~rendar@user/rendar)
[12:57:44] <grawity> yeah but you're still on it for some reason
[12:58:35] *** Quits: frodl (sid527064@user/frodl) (Ping timeout: 252 seconds)
[12:59:01] <doosboox> :)
[12:59:17] <TML> And I never made any value judgements about doosboox for using gemini, either; I'm just speculating at why there are some many implementations of the protocol. IRC also has a very similar problem - there's not a whole lot of compatibility between IRCds.
[12:59:41] <TML> each is its own special little snowflake
[12:59:46] <doosboox> yup
[12:59:50] *** Joins: dunc (sid16@id-16.uxbridge.irccloud.com)
[13:00:30] <TML> It seems to me that when something is popular enough, the implementations tend to largely blur into one another
[13:00:59] <TML> McWhorter said something similar about languages and dialects
[13:01:20] *** Joins: frodl (sid527064@user/frodl)
[13:01:32] <doosboox> TML: pretty much all gemini servers behave the same in general. Things like path canocalisation may differ, but the protocol implementation is extremely conformant
[13:01:37] *** Quits: nrg (~NRG@user/nrg) (Quit: ZNC - https://znc.in)
[13:02:48] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[13:03:09] *** Joins: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro)
[13:03:52] *** Joins: c4017w_ (~c4017@209.52.68.8)
[13:03:58] <dante-as> Hi guys, I have the following message format of a logging message: %(asctime)s %(levelname)-8s [%(name)s:%(funcName)s:%(lineno)d] %(message)s extra=%(metadata)s Can I pass the extra section as optional somehow?
[13:04:01] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[13:04:32] *** Parts: HexaCube (~HexaCube@vmi438683.contaboserver.net) (Poof goes the quack - The Lounge - https://thelounge.chat)
[13:04:46] *** Joins: nrg (~NRG@user/nrg)
[13:05:04] *** Quits: Spr0cket (sprocket@user/Spr0cket) (Quit: x)
[13:05:13] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (Ping timeout: 250 seconds)
[13:05:22] *** Quits: coldmountain (sid484352@id-484352.helmsley.irccloud.com) (Ping timeout: 260 seconds)
[13:05:44] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[13:05:54] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[13:06:10] *** Joins: x4rchimedes (~archimed3@2a00:23c5:dab6:a501:d0e1:4bfd:3940:6b9e)
[13:07:11] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[13:07:18] *** Joins: coldmountain (sid484352@id-484352.helmsley.irccloud.com)
[13:07:39] *** Joins: paul424 (~tom@ip-5-172-232-75.multi.internet.cyfrowypolsat.pl)
[13:07:56] *** Quits: greyblue9 (sid500829@id-500829.ilkley.irccloud.com) (Ping timeout: 252 seconds)
[13:08:10] *** Quits: celphi (sid97751@user/celphi) (Ping timeout: 260 seconds)
[13:08:15] *** Quits: truckasaurus (sid457088@id-457088.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[13:08:38] *** Quits: sidmitra (uid17533@2a03:5180:f::447d) (Ping timeout: 260 seconds)
[13:08:50] *** Joins: Vonter (~Vonter@user/vonter)
[13:09:07] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Ping timeout: 250 seconds)
[13:09:10] *** zamanf_ is now known as zamanf
[13:09:12] *** Quits: zamanf (~dev@ppp-94-66-58-236.home.otenet.gr) (Changing host)
[13:09:12] *** Joins: zamanf (~dev@user/zamanf)
[13:09:16] *** Joins: celphi (sid97751@user/celphi)
[13:09:33] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Ping timeout: 250 seconds)
[13:09:35] *** Quits: joel135 (sid136450@id-136450.hampstead.irccloud.com) (Ping timeout: 252 seconds)
[13:09:36] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[13:10:02] *** Joins: greyblue9 (sid500829@id-500829.ilkley.irccloud.com)
[13:10:15] *** Quits: nrg (~NRG@user/nrg) (Quit: ZNC - https://znc.in)
[13:10:25] *** Quits: debnet (sid330295@python/afpy/debnet) (Ping timeout: 250 seconds)
[13:10:29] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:10:30] *** Quits: r0bby (r0bby@user/r0bby) (Ping timeout: 260 seconds)
[13:10:41] *** Quits: CrtxReavr (crtxreavr@shodan.trioptimum.com) (Ping timeout: 252 seconds)
[13:10:47] *** Joins: joel135 (sid136450@id-136450.hampstead.irccloud.com)
[13:10:48] *** Joins: CrtxReavr (crtxreavr@shodan.trioptimum.com)
[13:11:07] *** Joins: truckasaurus (sid457088@id-457088.helmsley.irccloud.com)
[13:11:11] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[13:11:21] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[13:11:24] *** Quits: structoha (~structoha@gateway/tor-sasl/structoha) (Ping timeout: 276 seconds)
[13:11:26] *** Quits: EgonX_ (~EgonX@2601:2c6:47f:879e:846c:81c5:480a:6ed5) (Ping timeout: 260 seconds)
[13:11:30] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[13:11:36] *** Joins: debnet (sid330295@python/afpy/debnet)
[13:11:36] *** Quits: crunchy_david (~david@pgguru.net) (Ping timeout: 245 seconds)
[13:11:38] *** Joins: sidmitra (sid17533@id-17533.tinside.irccloud.com)
[13:11:43] *** Joins: crunchy_david (~david@pgguru.net)
[13:11:43] *** Quits: jtanner (sid194399@id-194399.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[13:12:20] *** Joins: Valeria (~Valeria@user/valeria)
[13:12:35] *** Quits: Joel (~jjshoe@user/joel) (Ping timeout: 250 seconds)
[13:12:38] *** Joins: r0bby (r0bby@user/r0bby)
[13:12:39] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:12:45] *** Joins: jtanner (sid194399@id-194399.helmsley.irccloud.com)
[13:13:02] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:846c:81c5:480a:6ed5)
[13:13:39] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Quit: Leaving)
[13:13:40] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 256 seconds)
[13:13:50] *** Joins: otisolsen70__ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[13:13:53] *** Quits: zware (~zach@python/psf/zware) (Ping timeout: 250 seconds)
[13:14:53] *** Joins: Spr0cket (sprocket@user/Spr0cket)
[13:15:24] *** Joins: nrg (~NRG@user/nrg)
[13:15:29] *** Joins: zware (~zach@python/psf/zware)
[13:15:38] *** Quits: Pr0phet (sid505706@id-505706.hampstead.irccloud.com) (Ping timeout: 252 seconds)
[13:15:49] *** Quits: Lazenca (Lazenca@user/lazenca) (Remote host closed the connection)
[13:15:52] *** Joins: fling (~fling@user/fling)
[13:15:53] *** karl_AFK is now known as karlnashville
[13:16:08] *** Joins: Pr0phet (sid505706@id-505706.hampstead.irccloud.com)
[13:16:11] *** Joins: plastico (~plastico@neomutt/plastico)
[13:16:30] *** Joins: Joel (~jjshoe@user/joel)
[13:16:55] *** Quits: ravioli (sid83460@donger/pasta) (Ping timeout: 250 seconds)
[13:17:28] *** Joins: Nnnavd (~Nnavd@ec2-34-220-224-214.us-west-2.compute.amazonaws.com)
[13:17:33] *** Joins: ravioli (sid83460@donger/pasta)
[13:17:34] *** Joins: c4017_ (~c4017@2604:3d08:747f:7c90:89a7:25cc:df2a:3b33)
[13:17:47] *** Quits: kaibi_ (sid16580@id-16580.hampstead.irccloud.com) (Ping timeout: 250 seconds)
[13:17:50] *** Quits: MrNaz (sid133418@id-133418.uxbridge.irccloud.com) (Ping timeout: 252 seconds)
[13:18:10] *** Quits: Nnavd (~Nnavd@ec2-34-220-224-214.us-west-2.compute.amazonaws.com) (Read error: Connection reset by peer)
[13:18:12] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 256 seconds)
[13:18:50] *** Joins: kaibi_ (sid16580@id-16580.hampstead.irccloud.com)
[13:19:02] *** Joins: MrNaz (sid133418@id-133418.uxbridge.irccloud.com)
[13:20:46] *** Quits: c4017 (~c4017@2604:3d08:747f:7c90:5152:d22:91d7:e9f9) (Ping timeout: 245 seconds)
[13:21:00] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:b5d2:eac6:dcff:e744)
[13:22:02] *** Quits: waveform (~quassel@waveform.plus.com) (Ping timeout: 240 seconds)
[13:22:03] *** Joins: vanessa (~vanessa@103.160.128.7)
[13:22:34] *** Joins: waveform (~quassel@waveform.plus.com)
[13:22:36] *** Quits: otisolsen70__ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[13:24:42] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[13:24:46] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:25:26] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:29:07] *** Joins: Naan (~Naan@user/naan)
[13:30:11] *** Joins: lakrass (~lakrass@user/lakrass)
[13:32:43] *** Quits: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro) (Ping timeout: 256 seconds)
[13:33:14] *** Joins: millido (~millido@84.210.150.128)
[13:33:17] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[13:34:13] *** Joins: awmv_username_ta (~awmv@2a02:21b0:644f:c181:9578:5a34:6c78:de48)
[13:34:45] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:35:11] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Read error: Connection reset by peer)
[13:35:15] *** Joins: Klinda (~superleag@user/klinda)
[13:35:30] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[13:35:33] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[13:35:57] *** Quits: tristan_ (~tristan@223.62.202.137) (Ping timeout: 240 seconds)
[13:36:06] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:b5d2:eac6:dcff:e744) (Ping timeout: 268 seconds)
[13:36:19] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[13:36:19] *** karlnashville is now known as karl_AFK
[13:36:54] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[13:37:06] *** Joins: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net)
[13:37:13] <vanessa> is there a way to compute the power set of a set?
[13:37:17] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 250 seconds)
[13:38:36] *** Quits: jay-m126_ (~jay-m@129.0.76.218) (Ping timeout: 256 seconds)
[13:38:36] *** Quits: jay-m126 (~jay-m@129.0.76.218) (Ping timeout: 256 seconds)
[13:39:10] *** Quits: jay-m1261 (~jay-m@129.0.76.218) (Ping timeout: 256 seconds)
[13:39:29] <grawity> I thought "there has to be an itertools function for that" and yeah looks like there *almost* is: https://stackoverflow.com/a/1482316
[13:39:50] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Read error: Connection reset by peer)
[13:39:51] <kosh> vanessa, what the power set of a set?
[13:40:01] *** Joins: esther (~esther@199.10.64.86)
[13:40:15] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[13:40:30] *** Joins: jay-m126 (~jay-m@129.0.99.12)
[13:40:39] *** Joins: jay-m126_ (~jay-m@129.0.99.12)
[13:40:42] <vanessa> kosh: a set that contains all the combination of the elements of the given set.
[13:41:08] <d3x> vanessa, itertools.combinations should help with that
[13:41:29] <jinsun> since it is a recipe in itertools docs, it is there in more_itertools too, https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.powerset
[13:41:31] <kosh> so either combinations or permutations depending on what you need
[13:41:33] <vanessa> like if A={1,2} then the powerset 2^A = {{}, {1}, {2}, {1,2}}
[13:42:00] <d3x> Something like [set(combination) for i in range(len(your_set)) for combination in itertools.combinations(your_set, i)], I think
[13:42:29] <d3x> Yeah, or just use more_itertools :)
[13:44:24] *** Joins: goldfish (~goldfish@user/goldfish)
[13:44:42] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[13:45:44] *** Joins: jay-m1261 (~jay-m@129.0.99.12)
[13:47:22] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Read error: Connection reset by peer)
[13:47:59] *** Joins: doko_ (~doko@business-90-187-95-41.pool2.vodafone-ip.de)
[13:48:35] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[13:48:41] *** dob1_ is now known as dob1
[13:49:07] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[13:50:32] *** Quits: doko (~doko@2a02:8106:1a:7600:a2e2:196c:f346:878) (Ping timeout: 250 seconds)
[13:51:14] *** Joins: structoha (~structoha@gateway/tor-sasl/structoha)
[13:51:42] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[13:52:40] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[13:53:18] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[13:53:52] *** karl_AFK is now known as karlnashville
[13:54:09] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:150a:b5fd:70ec:64c1)
[13:55:27] *** Joins: xx (~xx@user/xx)
[13:55:45] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:56:00] *** Quits: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net) (Quit: Leaving)
[13:58:26] <han-solo> `set(frozenset(x) for x in itertools.product(*[x]*(len(x))))` # here's a stupid thing to do ':)
[13:59:37] *** Quits: esther (~esther@199.10.64.86) (Ping timeout: 240 seconds)
[13:59:38] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[13:59:55] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 256 seconds)
[14:00:29] *** Quits: M3troidman (~buttler@196.244.191.46) (Ping timeout: 256 seconds)
[14:01:02] *** Joins: swinnenb (~swinnenb@user/swinnenb)
[14:01:53] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[14:02:00] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[14:03:53] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 256 seconds)
[14:04:06] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[14:04:17] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[14:04:23] *** Joins: c4017w__ (~c4017@209.52.68.8)
[14:04:28] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 268 seconds)
[14:05:35] *** Quits: vanessa (~vanessa@103.160.128.7) (Ping timeout: 256 seconds)
[14:05:39] *** Joins: molt (~molt@178-223-59-170.dynamic.isp.telekom.rs)
[14:05:48] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[14:06:32] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[14:07:32] *** Joins: vanessa (~vanessa@103.160.128.7)
[14:07:51] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[14:08:59] *** Quits: doko_ (~doko@business-90-187-95-41.pool2.vodafone-ip.de) (Ping timeout: 256 seconds)
[14:10:10] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:10:19] *** Joins: moldorcoder7_ (~moldorcod@37.120.143.30)
[14:10:20] *** Quits: moldorcoder7 (~moldorcod@37.120.143.28) (Ping timeout: 256 seconds)
[14:10:38] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[14:10:52] *** karlnashville is now known as karl_AFK
[14:12:47] *** karl_AFK is now known as karlnashville
[14:13:16] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[14:14:50] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[14:15:18] *** Joins: the_lanetly_052 (~the_lanet@194.135.155.135)
[14:20:18] *** Quits: structoha (~structoha@gateway/tor-sasl/structoha) (Ping timeout: 276 seconds)
[14:22:29] <JayDoubleu> <grawity> "JayDoubleu: that's used when..." <- Well, it's also used by VTE/PTY when spawning shell.
[14:22:29] <JayDoubleu> I'm getting `no job control in this shell` when running process via subprocess which is fixed by spawning child process with NOCTTY so I thought I could somehow get that option in via subprocess too
[14:23:09] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[14:23:14] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[14:23:22] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[14:23:30] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:23:37] <grawity> ah, because vte does quite a few things in its "spawn" function – it actually creates a pty, etc
[14:23:55] <grawity> not like subprocess.run() which only runs the process with whatever FDs you gave it
[14:24:37] *** Quits: onur (~onur@user/onur) (Quit: ZNC 1.8.2 - https://znc.in)
[14:24:49] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[14:24:51] *** Quits: willcl_ark (~willcl-ar@2001:470:69fc:105::1:620a) (Changing host)
[14:24:51] *** Joins: willcl_ark (~willcl-ar@user/willcl-ark/x-8282106)
[14:24:56] <JayDoubleu> I see. I thought I could somehow pass that as popen kwarg.
[14:25:04] *** Joins: DeepDream (~neutrino@user/neutrino)
[14:25:17] <JayDoubleu> So to replicate the vte I guess I could use pty and try passing it there ?
[14:26:20] *** Lord_of_Life_ is now known as Lord_of_Life
[14:27:00] <grawity> tbh I suspect it's literally the fact that vte *gives it a tty* that makes the message go away
[14:27:11] <grawity> because job control is strictly tied to the process having a tty
[14:28:00] *** Joins: onur (~onur@static.88.107.46.78.clients.your-server.de)
[14:28:20] <JayDoubleu> grawity: so in this particular case with VTE I had to specifically give it a flag with NO_CTTY to make the error go away.
[14:29:43] <JayDoubleu> So VTE with `Vte.PtyFlags.DEFAULT` produces that error while `Vte.PtyFlags.NO_CTTY` does not. So I'm sort of searching for a solution where I can spawn the underlying process from python without having that error and using vte
[14:30:02] <grawity> hmm
[14:30:18] *** Quits: cation (cation@user/cation) (Quit: Leaving)
[14:30:18] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[14:31:17] <grawity> looks like NO_CTTY prevents the vte-running process itself from acquiring that tty as its new "controlling tty"
[14:31:18] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[14:32:01] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[14:32:26] *** Quits: someuser (~user@197.54.38.140) (Ping timeout: 256 seconds)
[14:32:30] <grawity> (which would only matter if the process didn't have one already)
[14:32:34] *** Joins: fef (~thedawn@user/thedawn)
[14:32:35] *** Joins: eXtr3m0 (~eXtr3m0@user/eXtr3m0)
[14:32:42] *** Quits: cursey (~cursey@user/cursey) (Quit: bye)
[14:32:52] *** Quits: fef (~thedawn@user/thedawn) (Client Quit)
[14:33:09] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[14:35:15] <JayDoubleu> grawity: So the process I''m spawning is one of the "odd" ones. Its the https://github.com/flatpak/flatpak-xdg-utils/blob/master/src/flatpak-spawn.c which is used to allow running commands on host machine from within container/flatpak
[14:35:23] <grawity> basically it 1) creates a new pty by opening /dev/ptmx (the resulting fd is the 'master' side for the terminal emulator to use); 2) uses ioctl(TIOCGPTPEER) to learn the pty's peer device (the actual /dev/pts/#) that programs would use; 3) gets a file descriptor to that, which will become the spawned process' stdin/stdout; 4) spawns the actual process
[14:35:41] <JayDoubleu> And I'm essentially trying to run something as simple as `subprocess.run(["flatpak-spawn", "--host", "/bin/bash"])` but I get that error
[14:35:55] <grawity> so with subprocess.run(), steps 1-3 don't even happen
[14:36:03] <grawity> it does not *do* ptys etc
[14:36:22] <grawity> the stdin/stdout that flatpak-spawn gets is literally the same stdin/stdout as your script itself got
[14:36:26] <JayDoubleu> I see. So my only options is to spawn that process with either vte or pty ?
[14:37:50] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[14:37:52] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[14:39:32] *** Joins: someuser (~user@197.54.38.140)
[14:40:32] <JayDoubleu> Although I don't see a way to pass that NO_CTTY to pty
[14:41:12] *** Quits: jay-m126_ (~jay-m@129.0.99.12) (Remote host closed the connection)
[14:41:12] *** Quits: jay-m126 (~jay-m@129.0.99.12) (Remote host closed the connection)
[14:41:12] *** Quits: jay-m1261 (~jay-m@129.0.99.12) (Read error: Connection reset by peer)
[14:41:16] *** Joins: mawk (~mawk@wireguard/contributor/mawk)
[14:42:48] <grawity> if you use the .openpty() helper, it automatically uses O_NOCTTY when needed
[14:43:40] <grawity> so you'd only need it if you were to manually open(/dev/ptmx), ioctl, etc
[14:45:39] <JayDoubleu> hmm interesting
[14:45:42] *** Joins: cursey (~cursey@user/cursey)
[14:45:45] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:45:46] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10ed:252e:899e:dfb6:fe21:e622) (Ping timeout: 245 seconds)
[14:47:10] *** Quits: chele (~chele@user/chele) (Ping timeout: 256 seconds)
[14:48:52] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 256 seconds)
[14:49:44] <JayDoubleu> So I guess I would have to do the "spawn" bit manually to get it working ? It looks like spawn calls fork() which then calls openpty() and I still get that error https://github.com/python/cpython/blob/3.10/Lib/pty.py#L163
[14:50:00] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 256 seconds)
[14:51:06] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[14:51:23] *** Joins: codificat (~pep@126.red-79-158-54.dynamicip.rima-tde.net)
[14:52:08] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[14:52:56] *** Joins: dbbr (~dbbr___@2804:5f80:70a0:3700:6c79:57b3:8002:f705)
[14:55:40] *** Quits: bluedust (~bluedust@117.241.177.177) (Remote host closed the connection)
[14:56:09] *** Joins: silv3r_m00n2 (~acerlight@122.163.16.154)
[14:56:33] <silv3r_m00n2> hi there, i am looking a github project, https://github.com/frappe/erpnext  can somebody tell me where is the sql instructions used to create the database of that application ?
[14:56:48] *** Quits: someuser (~user@197.54.38.140) (Ping timeout: 256 seconds)
[14:57:04] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:57:30] *** Joins: jay-m126 (~jay-m@129.0.99.12)
[14:57:34] *** Joins: jay-m126_ (~jay-m@129.0.99.12)
[14:57:35] *** Joins: jay-m1261 (~jay-m@129.0.99.12)
[15:01:12] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 268 seconds)
[15:01:12] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 268 seconds)
[15:01:54] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[15:03:47] <bjs> silv3r_m00n2: hi, this is a very big project do you have some idea of when/how it creates the database?
[15:04:40] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:04:52] *** Joins: c4017w_ (~c4017@209.52.68.8)
[15:05:04] *** Quits: paul424 (~tom@ip-5-172-232-75.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[15:05:16] *** Joins: pro_z_ (~pro_z@37.214.55.61)
[15:06:12] *** Joins: pmb_ (~pmb@89-64-79-51.dynamic.chello.pl)
[15:06:47] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[15:06:48] <silv3r_m00n2> bjs: no, i have no clue, i was thinking there must be some .sql file which is imported into mariadb to setup the database
[15:06:58] <silv3r_m00n2> but unable to find anything of that sort
[15:06:58] *** Joins: hlauk (~hlauk@176.33.108.116)
[15:07:01] <han-solo> https://discuss.erpnext.com/t/erpnext-databases/8939
[15:07:57] *** Quits: hlauk (~hlauk@176.33.108.116) (Remote host closed the connection)
[15:08:26] <bjs> silv3r_m00n2: it seems unlikely you'll find a .sql file anywhere
[15:08:28] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[15:08:29] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[15:08:36] <silv3r_m00n2> han-solo: seems very complicated
[15:08:44] <silv3r_m00n2> bjs: then how is the database created ?
[15:08:49] <silv3r_m00n2> are the sql queries generated on the fly ?
[15:09:16] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[15:09:19] <bjs> silv3r_m00n2: https://github.com/frappe/frappe/blob/develop/frappe/database/mariadb/schema.py#L6
[15:09:35] *** Quits: maryo87 (~Maryo@user/maryo) (Ping timeout: 250 seconds)
[15:09:49] *** Joins: frost (~frost@user/frost)
[15:10:10] <silv3r_m00n2> i see, so its indeed dynamically generated
[15:10:11] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Ping timeout: 256 seconds)
[15:10:11] *** pmb_ is now known as pmb
[15:10:12] <silv3r_m00n2> no static sql file
[15:10:14] <bjs> Here is where it creates (a) database table, which it seems to do when you (they) import frappe.db
[15:10:15] <silv3r_m00n2> good then
[15:10:49] *** Joins: CoolerX (~CoolerX@user/coolerx)
[15:11:48] <silv3r_m00n2> is there a room where i can ask database schema/design related questions ?
[15:12:22] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[15:12:38] *** Quits: CoolerX (~CoolerX@user/coolerx) (Client Quit)
[15:13:21] *** Joins: bluedust (~bluedust@117.241.177.177)
[15:13:26] *** karlnashville is now known as karl_AFK
[15:13:46] *** Joins: M3troidman (~buttler@196.244.191.46)
[15:14:06] *** Quits: f1se4 (~f1se4@213.195.113.45) (Ping timeout: 245 seconds)
[15:15:46] <leitz> If a variable is defined outside of a method, sometimes it seems to work and sometimes not. Line 36 works, but line 27 (28 in the error msg) gets the error.   https://bpa.st/XDLA
[15:16:50] *** Joins: rajkosto (~rajkosto@93-86-127-103.dynamic.isp.telekom.rs)
[15:16:54] <bjs> leitz: if you go `cmd = cmd + ...` this will fail with an UnboundLocalError
[15:17:07] *** Joins: vitali64 (~vitali64@user/vitali64)
[15:17:09] <deniska> leitz: if you assign to a name in a function, it becomes a local in this function
[15:18:01] <bjs> leitz: this is because in Python a name (like "cmd") always refers to the same variable inside the whole function. So you cannot say "(local cmd) = (global cmd) + ..."
[15:18:09] *** karl_AFK is now known as karlnashville
[15:18:15] *** Joins: icsdi (~icsdi@net-37-179-41-124.cust.vodafonedsl.it)
[15:18:31] <bjs> leitz: you can either tell Python you really mean to write to the global cmd by putting `global cmd` at the top of the function body,  or make the local variable's name be different to the global one
[15:18:49] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[15:20:25] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:20:48] *** Quits: jazzy (~jaziz@user/jaziz) (Remote host closed the connection)
[15:21:13] *** Quits: icsdi (~icsdi@net-37-179-41-124.cust.vodafonedsl.it) (Client Quit)
[15:21:28] *** Joins: icsdi (~icsdi@net-37-179-41-124.cust.vodafonedsl.it)
[15:22:05] *** Quits: nceric (~nceric@76-217-82-15.lightspeed.chrlnc.sbcglobal.net) (Ping timeout: 256 seconds)
[15:22:16] *** Joins: jazzy2 (~jaziz@user/jaziz)
[15:22:39] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 256 seconds)
[15:23:05] *** Quits: icsdi (~icsdi@net-37-179-41-124.cust.vodafonedsl.it) (Client Quit)
[15:23:20] *** Joins: icsdi (~icsdi@net-37-179-41-124.cust.vodafonedsl.it)
[15:23:59] *** jazzy2 is now known as jazzy
[15:25:42] *** Quits: elias117 (~elias117@user/elias117) (Ping timeout: 256 seconds)
[15:26:41] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[15:27:35] *** Joins: someuser (~user@197.54.38.140)
[15:27:49] <leitz> bjs, deniska, thanks! I'll make a note of that.
[15:28:21] *** Quits: bluedust (~bluedust@117.241.177.177) (Remote host closed the connection)
[15:29:17] *** Quits: parv (~quass@user/parv) (Ping timeout: 240 seconds)
[15:29:32] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[15:30:35] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 256 seconds)
[15:30:50] *** Joins: iob (~iob@nat1.prg.suse.com)
[15:30:55] *** Quits: icsdi (~icsdi@net-37-179-41-124.cust.vodafonedsl.it) (Quit: Leaving)
[15:31:09] *** Joins: icsdi (~icsdi@net-37-179-41-124.cust.vodafonedsl.it)
[15:32:30] *** Quits: Payam38 (~Payam@138.106.57.132) (Quit: Client closed)
[15:33:41] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[15:34:12] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[15:34:12] *** Quits: johnjaye (~pi@173.209.65.233) (Ping timeout: 256 seconds)
[15:34:27] *** Joins: vsantana (~Thunderbi@fttx-177136149223.usr.predialnet.com.br)
[15:34:30] *** Quits: flea (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 268 seconds)
[15:34:58] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:35:29] *** Joins: cdown (~cdown@188.214.11.14)
[15:35:47] *** Joins: johnkeats7 (~johnkeats@2804:14c:32:a0cc:c444:55ef:22e9:885)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:03] *** Joins: darksun (~darksun@user/darksun)
[15:36:28] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:22] *** Joins: elias117 (~elias117@host-24-224-142-233.public.eastlink.ca)
[15:37:22] *** Quits: elias117 (~elias117@host-24-224-142-233.public.eastlink.ca) (Changing host)
[15:37:22] *** Joins: elias117 (~elias117@user/elias117)
[15:39:00] *** Quits: kmh_ (~kmh@2a00:6020:5004:6800:cf4:c72f:b99:2290) (Quit: Leaving)
[15:41:17] *** Quits: johnkeats7 (~johnkeats@2804:14c:32:a0cc:c444:55ef:22e9:885) (Ping timeout: 268 seconds)
[15:41:54] *** Quits: DeepDream (~neutrino@user/neutrino) ()
[15:44:24] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[15:44:36] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[15:47:05] *** Joins: fef (~thedawn@user/thedawn)
[15:47:27] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 268 seconds)
[15:47:35] *** Quits: silv3r_m00n2 (~acerlight@122.163.16.154) (Ping timeout: 256 seconds)
[15:48:16] *** Quits: vsantana (~Thunderbi@fttx-177136149223.usr.predialnet.com.br) (Quit: vsantana)
[15:48:37] *** Joins: vsantana (~Thunderbi@fttx-177136149223.usr.predialnet.com.br)
[15:48:51] *** Joins: doko (~doko@2a02:8106:1a:7600:8422:dca1:594e:8573)
[15:49:07] *** Joins: han-solo (~hanish@157.44.200.34)
[15:49:25] *** Joins: parv (~quass@user/parv)
[15:50:39] *** Quits: zamanf (~dev@user/zamanf) (Read error: Connection reset by peer)
[15:50:45] <nedbat> i have a seemingly impossible situation that is somewhat involved to explain: https://gist.github.com/nedbat/f79c4ced21dfa6e290c3014e40566db6
[15:51:36] *** Quits: parv (~quass@user/parv) (Client Quit)
[15:52:14] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[15:55:10] *** Quits: dsrt^ (~dsrt@75-147-197-198-Atlanta.hfc.comcastbusiness.net) (Ping timeout: 256 seconds)
[15:56:52] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[15:57:19] *** Quits: shad (~shad@user/shad) (Ping timeout: 268 seconds)
[15:57:19] *** Joins: dsrt^ (~dsrt@75-147-197-198-Atlanta.hfc.comcastbusiness.net)
[15:57:34] *** Quits: pycode1 (~pycode3@2001:b07:5d28:551:44de:2e0c:b099:837a) (Ping timeout: 260 seconds)
[15:58:47] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[15:59:01] *** Quits: samuelbernardo (~samuelber@nata01.lip.pt) (Quit: ZNC 1.8.2 - https://znc.in)
[15:59:45] *** Joins: chele (~chele@user/chele)
[15:59:59] <bjs> nedbat: you know all the times you tell people here that they need shorter pastes, and more explanation I think you're the worst offender :P
[16:00:08] *** karlnashville is now known as karl_AFK
[16:00:22] <nedbat> i said it was somewhat involved :) I can explain if someone wants to try it?
[16:01:12] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[16:01:20] <nedbat> i pasted the code into the gist
[16:01:25] <bjs> nedbat: I'm guessing from your messages yesterday that somewhere in this log is a place where something weird happens
[16:01:56] *** Joins: samuelbernardo (~samuelber@nata01.lip.pt)
[16:02:22] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[16:02:27] <nedbat> bjs: the message on line 30 says that file .coverage.mitadms-mbp.lan.72995.980229 isn't a valid db file
[16:02:38] *** Joins: CombatVet (~c4@user/combatvet)
[16:02:59] <nedbat> bjs: line 911 is where the file begins initialization.  it never finishes it, but the thread goes on to init a different file.
[16:03:16] <nedbat> bjs: i don't see how it can start Initing, but not print Inited, and still continue working.
[16:03:27] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[16:03:32] <nedbat> the prefixes on the log lines are the process and thread id.
[16:03:37] *** Quits: Linux77 (~LinuMage@186.233.182.173) (Ping timeout: 240 seconds)
[16:04:42] <bjs> nedbat: okay, now I'm on the same page and yes this seems weird.
[16:04:53] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10ed:252e:99d9:ca30:6a40:daf8)
[16:05:12] *** Joins: maryo (~Maryo@user/maryo)
[16:05:23] *** Joins: c4017w__ (~c4017@209.52.68.8)
[16:05:29] *** Quits: Guest6693 (~roro@78.192.226.182) (Ping timeout: 250 seconds)
[16:05:36] <nedbat> bjs: with this level of logging, it happens about 3% of the runs.
[16:06:15] <Yhg1s> nedbat: isn't it just that some other thread is combining a data file that's still being written to?
[16:06:34] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 268 seconds)
[16:06:42] *** Joins: Linux77 (~LinuMage@186.233.182.173)
[16:07:12] <nedbat> Yhg1s: how can line 911 print Initing, but there's no Inited, and then line 928 is the same thread Initing a different file?
[16:07:29] *** Quits: samuelbernardo (~samuelber@nata01.lip.pt) (Quit: ZNC 1.8.2 - https://znc.in)
[16:07:39] <bjs> Yhg1s: the sigterm stuff seems interesting
[16:07:43] <bjs> oops nedbat ^
[16:07:54] <bjs> it's like there was a signal received, and in the signal handler it started to do some database stuff
[16:08:09] <nedbat> bjs: definitely sigterm is the new thing, but i don't see how it's involved here.
[16:08:30] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[16:08:30] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[16:08:30] *** Joins: JordiGH (~jordi@user/jordigh)
[16:09:02] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 268 seconds)
[16:09:16] <nedbat> oh, i guess the next Initing is from the sigterm handler
[16:09:27] <bjs> nedbat: it can't be a coincidence that the _init_db call that happens right after this failed one is coming from the signal handler
[16:09:37] <nedbat> bjs: no, you are right
[16:09:43] <bjs> it looks like your handler calls save(), which starts a new re-enterant init_db call
[16:12:39] <nedbat> is there some pattern of signal handling I need to wrap my head around?
[16:13:39] *** Joins: samuelbernardo (~samuelber@nata01.lip.pt)
[16:13:57] <bjs> nedbat: I think you just need to be careful and think hard about what your signal handler is doing, doing big database operations in the handler sounds worrying. Maybe you can use some kind of transaction to save any operation that is being interrupted by this
[16:14:25] <bjs> You receive SIGTERM but ignore it?
[16:14:31] <nedbat> bjs: i  re-send it.
[16:14:47] *** Joins: Gurkenglas (~Gurkengla@dslb-090-186-104-244.090.186.pools.vodafone-ip.de)
[16:15:15] <supakeen> you have to be especially careful with doing stuff in signal handlers, the 'common' idiom I see is to mask the signals from all threads and run a separate thread to receive signals, this will then change global state and you will have guards over that global state to exit your 'main loop' at the next opportune time.
[16:15:21] *** Joins: bluedust (~bluedust@117.207.237.207)
[16:15:24] <bjs> nedbat: Oh I see, that thread dies after the signal handler
[16:15:26] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[16:15:29] <bjs> but the other threads continue
[16:15:39] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[16:15:58] <supakeen> but you will need some indication to the rest of your programming (i sometimes pretend my program has run levels)
[16:16:25] <nedbat> bjs: that entire process is done after the signal handler.
[16:16:25] *** Joins: yassernasc (~yassernas@2804:29b8:505a:f33d:1872:f10d:d91b:b66)
[16:16:52] <bjs> nedbat: oh the first id is the process id?
[16:16:56] <nedbat> bjs: yes
[16:17:29] <nedbat> supakeen: do you have an example or guide I can learn from?
[16:17:36] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[16:17:53] <bjs> nedbat: hmm, so the problem is that the sigterm interrupts the _init_db call which is creating some database file(?) but didn't manage to fill all of the data in
[16:18:00] <nedbat> bjs: right
[16:18:03] <bjs> and then the process dies, and the file remains but in a partial state
[16:18:09] <nedbat> yes
[16:18:29] <nedbat> then later it's part of the combine operation, which warns because the file couldn't be read.
[16:18:50] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:8c58:1a37:76ce:6ed2)
[16:19:19] *** Quits: M3troidman (~buttler@196.244.191.46) (Ping timeout: 256 seconds)
[16:19:28] <bjs> nedbat: perhaps you should do what we always say with files, make a .tmp file and then at the end mv it over
[16:20:09] <nedbat> bjs: yes, though there would still be the problem that this process wanted to save some data, and was clobbered before it could. I don't know why that is, or if it is an issue.
[16:20:19] *** Joins: Adoi (~Adoi@user/adoi)
[16:21:38] <bjs> nedbat: I'm not sure I follow, if you receive SIGTERM presumably that means you want the process to quit even if there's still work it wants to do later
[16:21:58] <nedbat> bjs: right, i'm not going to worry about that scenario
[16:22:07] <supakeen> nedbat: I do not have a good example :(
[16:22:20] <bjs> nedbat: this db.execute stuff is going into a new file is it not? in _init_db?
[16:22:28] *** Joins: Z-cat (~Z-cat@user/z-cat)
[16:22:28] <nedbat> bjs: yes
[16:22:36] *** Quits: awmv_username_ta (~awmv@2a02:21b0:644f:c181:9578:5a34:6c78:de48) (Ping timeout: 268 seconds)
[16:23:23] <bjs> nedbat: so what data is being clobbered exactly?
[16:23:31] *** Joins: M3troidman (~buttler@196.244.191.46)
[16:23:37] <nedbat> bjs: whatever data that process would have recorded
[16:24:20] <bjs> nedbat: so the process has some data in it, and on SIGTERM you want to persist that data to the database files, but if you were in the middle of an _init_db it'll think one piece of data w as already persisted?
[16:24:27] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:24:30] <Ingvix> should I save the length of a list to a variable if I intend to use it in a loop or is it one and the same just do len(list) in the loop
[16:24:53] <nedbat> Ingvix: len(list) is very fast, no need to help it
[16:24:58] <bjs> Ingvix: it's not the same, for example if the length changes. Python won't optimize away the calls to len(), but lists store their length so it's not a big deal
[16:24:59] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 256 seconds)
[16:25:12] <bjs> it's just reading the variable that's inside the list
[16:25:55] <Ingvix> the length doesn't change so that's not a thing to consider here
[16:26:14] <Ingvix> but I guess I just put len() in the loop and save a line
[16:26:15] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[16:26:23] *** Quits: codificat (~pep@126.red-79-158-54.dynamicip.rima-tde.net) (Quit: leaving)
[16:26:47] *** Joins: revolve (~u0_a227@82-132-237-215.dab.02.net)
[16:27:32] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Quit: No Ping reply in 180 seconds.)
[16:28:57] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[16:28:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[16:29:00] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[16:30:19] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:30:21] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[16:30:48] *** Quits: XV9 (~XV8@2601:5cb:c001:50:f81d:9eae:67e3:1b35) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:30:52] *** Quits: dreamon (~dreamon@ppp-88-217-91-105.dynamic.mnet-online.de) (Ping timeout: 256 seconds)
[16:31:24] *** Joins: Centaur (~sys@user/probe)
[16:31:27] *** Joins: XV8 (~XV8@2601:5cb:c001:50:f81d:9eae:67e3:1b35)
[16:31:28] *** Quits: maryo (~Maryo@user/maryo) (Read error: Connection reset by peer)
[16:31:36] *** Joins: Averna (Averna@gateway/vpn/protonvpn/averna)
[16:31:43] *** Joins: awmv_username_ta (~awmv@2a02:21b0:644f:c181:31d2:23fb:f539:e495)
[16:32:02] <Adoi> hello, does scrapy or parsel incorporate xpath fully?
[16:32:09] <bjs> nedbat: I guess my question is, why isn't the handlers _init_db call re-creating the file anyway? does it somehow check for the existence of the file before doing the database creation or does it just not even try
[16:32:10] *** Joins: roro_ (~roro@78.192.226.182)
[16:34:19] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:8c58:1a37:76ce:6ed2) (Ping timeout: 268 seconds)
[16:34:36] <nedbat> bjs: it makes a different file
[16:34:41] <bjs> ah
[16:35:11] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[16:35:15] <nedbat> bjs: the last six digits in the filename are random
[16:36:18] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 260 seconds)
[16:36:19] *** Quits: jay-m1261 (~jay-m@129.0.99.12) (Ping timeout: 256 seconds)
[16:36:19] *** Quits: jay-m126_ (~jay-m@129.0.99.12) (Ping timeout: 256 seconds)
[16:36:34] *** Joins: d1cor (~diego@179.63.242.120)
[16:36:44] *** Joins: shad (~shad@user/shad)
[16:36:57] <bjs> nedbat: so does the signal handlers _init_db create an identical file  (or what would have been identical if the earlier one didn't fail) ?
[16:37:03] <bjs> just with a different name
[16:37:27] *** Quits: jay-m126 (~jay-m@129.0.99.12) (Ping timeout: 256 seconds)
[16:37:34] *** Joins: dez (uid92154@user/dez)
[16:38:46] <nedbat> bjs: that's a good question.
[16:39:10] <bjs> nedbat: if so you could just discard what the first _init_db had done, and let the signal handler re-create it
[16:39:13] *** Joins: oda (~oda@gateway/vpn/pia/oda)
[16:39:35] *** Quits: oda (~oda@gateway/vpn/pia/oda) (Client Quit)
[16:39:36] *** Joins: millido (~millido@84.210.150.128)
[16:39:43] <bjs> either by saving some kind of working set of database files, or by doing what I said earlier and writing to a temp database file first and swapping it in
[16:39:47] <nedbat> bjs: if i knew it was happening.  it's the same thread interrupting itself. i don't know the primitives I can use to write logic around that.
[16:41:23] *** Joins: Guest21 (~Guest21@2405:201:e000:6008:7080:8537:71af:ef64)
[16:42:00] <nicoz> Hello guys, I can’t extract from these xpath https://paste.debian.net/1229044/  , the information I need as text https://paste.debian.net/1229045/
[16:42:44] <nicoz> Can someone enlighten me? xpath is a new field for me.
[16:42:55] <bjs> nedbat: I'm not really sure what you mean,  if you did the swapping over of the temp file at the end of _init_db then it'd be like the database file was never created as it wouldn't exist in the directory.  Then the signal handler would just make a new one.  (If the one the signal handler makes can just replace the other that is).
[16:43:53] <bjs> well maybe not the end of _init_db but at the end of writing all the data (wherever that is)
[16:43:55] *** Joins: dmvrtx (dmvrtx@2a01:7e01::f03c:92ff:fefd:6ed6)
[16:44:21] <nedbat> bjs: well, once it's a valid data file, even if empty, then we've made it better
[16:45:05] *** Quits: revolve (~u0_a227@82-132-237-215.dab.02.net) (Read error: Connection reset by peer)
[16:45:52] *** Parts: Guest21 (~Guest21@2405:201:e000:6008:7080:8537:71af:ef64) ()
[16:45:55] <bjs> nedbat: I guess in the end you have two choices: to write save defensively, assuming it can be interrupted at any point and doing things in a transactional/atomic way (e.g. by writing to temp files and then atomically `mv`ing over the contents); or to defer signals until after a save.
[16:46:19] <bjs> I've never done the latter in Python,  presumably you can have the signal handler remember what signals it received then after save is done re-send them
[16:46:28] <supakeen> really the atomicity of writes is your only guarantee
[16:46:42] <supakeen> right?
[16:46:50] <bjs> supakeen: of writes?
[16:46:55] *** Joins: revolve (~u0_a227@82-132-238-143.dab.02.net)
[16:47:24] <supakeen> sorry i mean guaranteeing that your state change is atomic (in a transaction and/or a file move) is the only way to guarantee your program can't get into a half-state
[16:47:37] *** Quits: nomic (~nomic@185.192.69.3) (Quit: Leaving)
[16:47:49] <supakeen> one can still get SIGKILL
[16:47:58] <bjs> Yeah, but the traditional rollback of transactions (which was my first thought) probably doesn't work here
[16:48:03] <nedbat> bjs: i tried to make it atomic with a lock, but....
[16:48:12] <bjs> nedbat: that will just deadlock :(
[16:48:42] <nedbat> bjs: it was deadlocking, then I changed it to an RLock, but that lets the same thread in again
[16:48:54] <Yhg1s> nedbat: the primitives of protecting against recursion are just... variables?
[16:48:57] <bjs> nedbat: Yes, sorry, there's no synchronisation primitives that can help here
[16:49:10] <nedbat> Yhg1s: i don't understand
[16:49:13] <bjs> nedbat: you'll just have to maintain some state, like my idea of having a global set() of in-progress database updates
[16:49:33] <nedbat> bjs: or create as tmp and move once it's valid
[16:49:35] <bjs> _init_db adds to the set ".coverage.mitadms-mbp.lan.72995.980229" and then removes it at the end of save()
[16:49:48] *** Quits: icsdi (~icsdi@net-37-179-41-124.cust.vodafonedsl.it) (Quit: Leaving)
[16:49:58] <bjs> and the signal handler `rm`s the file, but as supakeen says if you get SIGKILL'd then you'll need something better
[16:50:01] <bjs> like the temp file yeah
[16:50:27] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[16:51:18] <bjs> Perhaps your database software has some nice mechanism for transactions built into it that is safe against signals in your process, that can also work
[16:51:50] <bjs> I see some sql-looking stuff there
[16:51:56] <nedbat> bjs: it's sqlite
[16:52:12] *** Quits: faceface (~faceface@user/faceface) (Remote host closed the connection)
[16:52:35] <nicoz> So can you help me?
[16:52:45] *** Quits: mug3n (~mugen@gateway/tor-sasl/mugen) (Remote host closed the connection)
[16:52:46] *** Joins: pileatedx (~textual@cpe-67-241-68-204.twcny.res.rr.com)
[16:53:23] *** Joins: mug3n (~mugen@gateway/tor-sasl/mugen)
[16:53:41] *** Joins: harpia (~harpia@2804:2aec:205:4600:1f64:3c12:1a0e:3b09)
[16:53:49] <bjs> nedbat: I think sqlite transactions might save you here
[16:54:10] <bjs> if the whole save to the database was a transaction, then when the other side opened it to read it'd roll back the transaction and see an empty database
[16:54:11] <bjs> (I think!?)
[16:54:25] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:54:29] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[16:54:39] <bjs> so at least it'd be consistent
[16:55:14] <nedbat> bjs: i thought these were in a transaction, but i might be mistaken about that
[16:56:46] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Quit: Leaving)
[16:56:51] <bjs> nedbat: perhaps the reader side needs to be configured to understand what an empty database looks like
[16:58:03] *** Joins: gentooclimax (~gentoocli@2a02-8440-6441-09f8-f134-3215-f19d-90b8.rev.sfr.net)
[16:58:04] *** Quits: someuser (~user@197.54.38.140) (Ping timeout: 256 seconds)
[16:58:54] *** Joins: gvp013 (~gvp013@2405:201:e000:6008:7080:8537:71af:ef64)
[16:59:12] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[16:59:34] <nedbat> fun: the sqlite docs say isolation level can be None, "DEFERRED", "IMMEDIATE", or "EXCLUSIVE", but it's actually an empty string.
[16:59:51] *** Quits: bluedust (~bluedust@117.207.237.207) (Remote host closed the connection)
[16:59:53] <deniska> I don't think DDL is transactional in sqlite
[17:00:31] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[17:00:44] <bjs> nedbat: I'm guessing https://github.com/nedbat/coveragepy/blob/3ff8f34a1171084ca682d8656257bd8d9545199f/coverage/sqldata.py#L274 is the cause of the unpacking NoneType, and it suggests that the database was consistent but just had 0 rows https://github.com/nedbat/coveragepy/blob/3ff8f34a1171084ca682d8656257bd8d9545199f/coverage/sqldata.py#L1154
[17:00:46] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c)
[17:01:00] <nedbat> bjs: yes, the schema number never got written.
[17:01:23] <bjs> nedbat: So I'm back to not being sure what the problem is, as it seems like the first _init_db wrote an empty database and then the signal handler wrote the actual data anyway
[17:01:34] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:01:38] <bjs> is there actually any missing data?
[17:01:44] <nedbat> bjs: the interrupted _init_db made a file that isn't a valid data file.
[17:02:04] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 268 seconds)
[17:02:39] <bjs> nedbat: sure, but is the data actually missing?  Your code seems to create one file that will end up being empty (and "not a valid data file") but the signal handler then saves another file that has all the data you wanted in it
[17:03:44] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 256 seconds)
[17:04:06] *** Quits: MajorBiscuit (~MajorBisc@c-001-028-049.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[17:04:29] <nedbat> bjs: i would like to be able to issue warnings for invalid data files, and not create invalid files.
[17:04:45] <bjs> nedbat: okay but I think you miss my point, if the other file actually contains all the data you want
[17:04:50] <bjs> then it's safe to just delete this empty file, no?
[17:05:08] <nedbat> bjs: when would i delete it? When do I know it was a failure to fully initialize?
[17:05:19] *** Joins: MajorBiscuit (~MajorBisc@c-001-028-049.client.tudelft.eduvpn.nl)
[17:05:45] <bjs> nedbat: well you could have a per-thread set() of currently-being-inited-database-files, then in _init_db you that_set.add(".coverage.whateverthefileiscalled.12345")
[17:05:52] *** Joins: c4017w_ (~c4017@209.52.68.8)
[17:05:58] <nedbat> nicoz: sorry, I seem to be clogging up the chat here.  what's going wrong with your program?
[17:06:03] <bjs> then at the end of save() you remove it.  Then the signal handler can read this set, and see "oh there's a partially init'd file, let me rm it"
[17:06:06] <bjs> would that not work?
[17:06:23] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[17:06:31] <nedbat> bjs: i like the tmp-mv idea better, because it's more self-contained.
[17:06:42] <nicoz> nedbat I can’t get the result I want
[17:07:02] <nicoz> <nicoz> Hello guys, I can’t extract from these xpath https://paste.debian.net/1229044/  , the information I need as text https://paste.debian.net/1229045/
[17:07:03] <nicoz> [14:12:44] <nicoz> Can someone enlighten me? xpath is a new field for me.
[17:07:03] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[17:07:13] *** Joins: flea (nosoul@gateway/vpn/protonvpn/nosoul)
[17:07:13] <bjs> nedbat: sure, I think both work fine. The tmp one still leaves the file in your temp directory though
[17:07:19] <nedbat> bjs: meh
[17:07:30] <bjs> :)
[17:07:36] *** Quits: dsrt^ (~dsrt@75-147-197-198-Atlanta.hfc.comcastbusiness.net) (Remote host closed the connection)
[17:08:17] *** Joins: jay-m126 (~jay-m@129.0.99.12)
[17:08:23] *** Joins: jay-m126_ (~jay-m@129.0.99.12)
[17:08:49] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Remote host closed the connection)
[17:08:50] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 256 seconds)
[17:09:08] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[17:09:18] *** Joins: jay-m1261 (~jay-m@129.0.99.12)
[17:09:45] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[17:09:50] *** Quits: pileatedx (~textual@cpe-67-241-68-204.twcny.res.rr.com) (Quit: pileatedx)
[17:09:58] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 256 seconds)
[17:10:05] *** Quits: han-solo (~hanish@157.44.200.34) (Ping timeout: 268 seconds)
[17:10:41] <nedbat> nicoz: is there a data feed of this information, instead of trying to scrape it?
[17:12:13] <nedbat> nicoz: what output are you getting now?
[17:12:33] *** Quits: molt (~molt@178-223-59-170.dynamic.isp.telekom.rs) (Ping timeout: 268 seconds)
[17:13:06] <nedbat> bjs: if i make a temp file, how can i be sure it can be moved into place? Couldn't it be on a different filesystem?
[17:13:16] *** Quits: ravan_ (~ravan@user/ravan) (Ping timeout: 245 seconds)
[17:13:38] <Yhg1s> nedbat: you would make it in the same directory.
[17:13:39] <nicoz> [[<Element li at 0x7f0f47ef1da0>], [<Element li at 0x7f0f47ef1d50>], [<Element li at 0x7f0f47ef1d00>]]
[17:13:59] <nedbat> Yhg1s: what would remove it if it was abandoned?
[17:14:13] <Yhg1s> nedbat: what removes the other files you're creating there?
[17:14:29] *** Joins: Barones (~Barones@user/Barones)
[17:14:39] <nedbat> nicoz: try using .text_content() on those elements.
[17:15:00] <nedbat> Yhg1s: the "coverage combine" or "coverage erase" commands
[17:15:13] <Yhg1s> nedbat: can those not also check for abandoned files?
[17:15:19] <bjs> nedbat: I'd put it in the same directory, then suffix it with .tmp and then `coverage combine` or `coverage erase` can look for .tmp files and remove them
[17:15:41] <nicoz> nedbat before   bullseye = tree.xpath('//*[@id="psearchres"]/ul[1]/li[contains(@class,"bullseye")]').text_content
[17:15:42] <nicoz> AttributeError: 'list' object has no attribute 'text_content'
[17:15:44] <nedbat> Yhg1s, bjs: ok, i was hoping this issue wouldn't tentacle its way into other parts of the code.
[17:15:45] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:15:56] <nedbat> nicoz: bullseye[0].text_content()
[17:16:06] *** Joins: zeden (~zeden@user/zeden)
[17:16:40] <bjs> nedbat: you could do both, have a working set of files and then the signal handler deletes those tmp files when it sees an interrupt
[17:17:04] <bjs> nedbat: I'd be wary of doing something automatically as there may be other processes saving tmp files at the same time which shouldn't be touched
[17:17:27] <nicoz> []
[17:17:42] <kosh> for optional typing what is the correct way to do typing of a list of tuples [(str,str),...]
[17:17:43] *** Quits: gvp013 (~gvp013@2405:201:e000:6008:7080:8537:71af:ef64) (Remote host closed the connection)
[17:17:48] <nedbat> nicoz: pastebin the most recent code and output
[17:17:51] *** Joins: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1)
[17:17:54] *** Joins: dreamon (~dreamon@ppp-88-217-91-105.dynamic.mnet-online.de)
[17:17:55] <bjs> kosh: list[tuple[str,str]]
[17:18:20] <bjs> is the annotation, if that's what you were asking
[17:18:21] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[17:18:29] <nicoz> ok one moment
[17:18:31] <kosh> bjs, is that for any number of tuples inside the list?
[17:18:36] <bjs> kosh: yes
[17:18:38] *** Joins: pycode1 (~pycode3@2001:b07:5d28:551:e0af:40d4:d2bc:6338)
[17:19:56] *** Quits: yates (~user@fv-nc-f7af8b91e1-234237-1.tingfiber.com) (Remote host closed the connection)
[17:20:31] *** karl_AFK is now known as karlnashville
[17:20:57] *** Joins: cdown_ (~cdown@163.114.131.1)
[17:21:23] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:21:40] *** Joins: Pickchea (~private@user/pickchea)
[17:23:25] *** Joins: vakera_pingveno (~dan@2600:1700:21f9:b150::40)
[17:23:30] *** Quits: dbristow (~dbristow@user/dbristow) (Read error: Connection reset by peer)
[17:23:55] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 256 seconds)
[17:23:57] *** Pici` is now known as Pici
[17:23:57] *** cdown_ is now known as cdown
[17:24:24] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:24:34] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[17:25:02] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[17:25:09] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[17:26:36] <nicoz> nedbat : https://paste.debian.net/1229050/
[17:26:44] *** Quits: gentooclimax (~gentoocli@2a02-8440-6441-09f8-f134-3215-f19d-90b8.rev.sfr.net) (Ping timeout: 268 seconds)
[17:26:53] <nicoz> output: bullseye (stable) (utils):
[17:26:53] <nicoz>         Midnight Commander - a powerful file manager
[17:26:53] <nicoz>     
[17:26:53] <nicoz>       3:4.8.26-1.1: amd64 arm64 armel armhf i386 mips64el mipsel ppc64el s390x
[17:27:05] <nedbat> nicoz: that looks like what you wanted, no?
[17:27:12] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:27:14] *** Joins: gentooclimax (~gentoocli@2a02-8440-6341-2749-cc31-9167-8944-7430.rev.sfr.net)
[17:27:18] *** Joins: ravan (~ravan@42.201.198.151)
[17:27:18] *** Quits: ravan (~ravan@42.201.198.151) (Changing host)
[17:27:18] *** Joins: ravan (~ravan@user/ravan)
[17:27:32] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[17:27:51] <nicoz> yes but if I want to then bring it as a result I will return Indexerror
[17:28:34] <nedbat> nicoz: make that change to the code, and then we can debug that error
[17:29:11] *** Joins: Sco-Ross (~Sco-Ross3@2a02:c7f:d049:600:c598:fa74:cd61:a5bf)
[17:29:12] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[17:29:15] *** Joins: CoolerX (~CoolerX@user/coolerx)
[17:29:48] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:31:49] *** Quits: jay-m126 (~jay-m@129.0.99.12) (Read error: Connection reset by peer)
[17:31:57] *** Joins: bluedust (~bluedust@117.207.237.207)
[17:32:17] *** Quits: gentooclimax (~gentoocli@2a02-8440-6341-2749-cc31-9167-8944-7430.rev.sfr.net) (Ping timeout: 268 seconds)
[17:32:20] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[17:32:30] *** Joins: esther (~esther@199.10.64.86)
[17:32:36] *** Joins: F8ER (~f8er@user/voxel)
[17:32:42] <F8ER> o/
[17:32:58] <nicoz> nedbat What should I modify?
[17:33:06] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Quit: leaving)
[17:33:31] <nedbat> nicoz: you said, "if i make a change, there will be an error".  I don't know what change you were thinking of.  Make the change.
[17:33:56] *** Quits: jay-m126_ (~jay-m@129.0.99.12) (Read error: Connection reset by peer)
[17:34:02] *** Quits: awmv_username_ta (~awmv@2a02:21b0:644f:c181:31d2:23fb:f539:e495) (Quit: Textual IRC Client: www.textualapp.com)
[17:34:20] *** Quits: jay-m1261 (~jay-m@129.0.99.12) (Ping timeout: 256 seconds)
[17:34:35] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[17:34:41] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[17:35:30] *** Quits: markw_dev (~mark@71-135-3-182.lightspeed.rlghnc.sbcglobal.net) (Quit: ZNC 1.8.2 - https://znc.in)
[17:35:35] *** Joins: gentooclimax (~gentoocli@89.207.171.57)
[17:35:49] *** Joins: jay-m126 (~jay-m@129.0.76.217)
[17:35:59] *** Joins: jay-m126_ (~jay-m@129.0.76.217)
[17:36:19] *** Quits: Sco-Ross (~Sco-Ross3@2a02:c7f:d049:600:c598:fa74:cd61:a5bf) (Quit: Leaving)
[17:38:20] <nicoz> https://paste.debian.net/1229053/
[17:38:31] <nicoz> return a empty list nedbat
[17:38:33] *** Joins: sydbarret (~anton@static-186-121-195-51.acelerate.net)
[17:39:01] *** kl1n3 is now known as kline
[17:39:07] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[17:39:38] *** Joins: y04nn (~y04nn@92.223.89.196)
[17:39:38] <nicoz> for this I had changed xpath, but now I am hunting lots of folders  https://paste.debian.net/1229044
[17:40:13] <nedbat> nicoz: can you also pastebin the output?
[17:40:21] *** Joins: markwdev (~mark@71-135-3-182.lightspeed.rlghnc.sbcglobal.net)
[17:40:24] *** Quits: revolve (~u0_a227@82-132-238-143.dab.02.net) (Read error: Connection reset by peer)
[17:40:31] *** karlnashville is now known as karl_AFK
[17:40:57] *** Joins: jay-m1261 (~jay-m@129.0.76.217)
[17:41:19] *** Joins: johnjaye (~pi@173.209.65.233)
[17:41:56] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[17:42:13] <nicoz> in debbuging nothing, but if I go from consul and I say (bullseye) comes out
[17:43:01] *** Joins: panella32 (~panella32@154.6.22.19)
[17:43:18] <nicoz> >>> dir(bullseye)
[17:43:18] <nicoz> ['__add__', '__class__', '__contains__', '__delattr__', '__delitem__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__gt__', '__hash__', '__iadd__', '__imul__', '__init__', '__init_subclass__', '__iter__', '__le__', '__len__', '__lt__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__reversed__', '__rmul__', '__setattr__', '__setitem__', '__sizeof__', '__str__',
[17:43:18] <nicoz> '__subclasshook__', 'append', 'clear', 'copy', 'count', 'extend', 'index', 'insert', 'pop', 'remove', 'reverse', 'sort']
[17:43:51] <nicoz> I can’t get the output before and hang it as result
[17:44:58] *** Quits: KeiraT (~k@lulzsec.co.uk) (Ping timeout: 250 seconds)
[17:45:16] <nicoz> console*
[17:45:18] *** Joins: Deana (~Deana@90.151.86.69)
[17:45:20] *** Joins: raghavTinker (~raghavTin@103.149.154.10)
[17:45:27] *** Quits: gentooclimax (~gentoocli@89.207.171.57) (Ping timeout: 256 seconds)
[17:45:44] *** Quits: MajorBiscuit (~MajorBisc@c-001-028-049.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[17:45:46] <nedbat> nicoz: dir(bullseye) just shows that it's a list.  Let's just debug the program as you run it from a file. Pastebin the code and the output.
[17:46:00] *** Joins: MajorBiscuit (~MajorBisc@c-001-028-049.client.tudelft.eduvpn.nl)
[17:46:06] <raghavTinker> Hi I wanted to contribute in gsoc
[17:46:10] *** Joins: Adoi (~Adoi@user/adoi)
[17:46:28] <raghavTinker> I have some experience in python so but I a beginner in contributing to open source projects....any tips?
[17:47:51] <nedbat> raghavTinker: do you have a project in mind?
[17:47:56] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 256 seconds)
[17:48:19] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Ping timeout: 268 seconds)
[17:49:14] <nicoz> nicoz@debianlab:~/deb-bot$ /bin/python3.10 /home/nicoz/deb-bot/pckg.py
[17:49:14] <nicoz> [[<Element li at 0x7fe2be80dda0>]]
[17:49:14] <nicoz> nicoz@debianlab:~/deb-bot$
[17:49:38] <nicoz> https://paste.debian.net/1229056/
[17:50:31] <nedbat> nicoz: what happened to bullseye[0].text_content()?  I thought that was working
[17:51:20] <raghavTinker> currently no I dont have any projects in mind
[17:51:26] <raghavTinker> Do you have any suggestions?
[17:51:44] <raghavTinker> nedbat
[17:51:53] <nicoz> [[<Element li at 0x7fe2be80dda0>]]
[17:51:55] <nedbat> raghavTinker: sorry, i don't.
[17:51:56] <nicoz> nedbat
[17:51:57] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Quit: Leaving)
[17:52:22] <nedbat> nicoz: please: put the program and the output into one pastebin, and share the link here. it's hard to keep track of what is happening.
[17:52:38] *** Quits: MajorBiscuit (~MajorBisc@c-001-028-049.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[17:52:54] *** Joins: MajorBiscuit (~MajorBisc@c-001-028-049.client.tudelft.eduvpn.nl)
[17:53:02] *** Quits: humberto1 (~humbertow@189.236.19.103) (Ping timeout: 256 seconds)
[17:54:04] *** Joins: Klinda (~superleag@user/klinda)
[17:54:20] *** Joins: raxor2k (~raxor2k@78.158.252.35)
[17:54:22] *** Parts: raxor2k (~raxor2k@78.158.252.35) ()
[17:54:23] *** Joins: humberto1 (~humbertow@189.236.19.103)
[17:55:05] *** karl_AFK is now known as karlnashville
[17:55:28] <nicoz> nedbat sorry ;) https://paste.debian.net/1229057/
[17:56:23] <nicoz> if i change result.append(bullseye) in     result.append(bullseye[0].text_content)
[17:56:36] <nicoz> my output is: [<bound method HtmlMixin.text_content of <Element li at 0x7fedb17d9e90>>]
[17:56:48] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:56:57] <nedbat> nicoz: change it to:  result.append(bullseye[0].text_content())     you need more parens
[17:57:08] <nicoz> my output is: [<bound method HtmlMixin.text_content of <Element li at 0x7fedb17d9e90>>]
[17:57:19] <nicoz> ah ok
[17:57:20] <nicoz> ()
[17:57:39] <nicoz> nicoz@debianlab:~/deb-bot$ /bin/python3.10 /home/nicoz/deb-bot/pckg.py
[17:57:39] <nicoz> ['bullseye (stable) (utils):\n\tMidnight Commander - a powerful file manager\n    \n      3:4.8.26-1.1: amd64 arm64 armel armhf i386 mips64el mipsel ppc64el s390x\n    \n    \n    ']
[17:57:39] <nicoz> nicoz@debianlab:~/deb-bot$
[17:57:43] <CrtxReavr> (((all) (the) (parens)))
[17:57:44] <nicoz> :)
[17:58:02] <jinsun> nicoz: don't paste here
[17:58:19] <nicoz> sorry jinsun
[17:58:23] <nicoz> I’ve worn out this function :P
[17:58:46] *** Joins: cation (cation@user/cation)
[17:59:02] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[17:59:16] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[17:59:35] *** Joins: FreEm1nD (~FreEm1nD@mail.guarapari.store)
[17:59:52] <nicoz> thanks nedbat for your suggestions
[18:00:09] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[18:00:09] <nicoz> maybe i'm tired ;)
[18:00:57] <jinsun> is that not right still?
[18:01:32] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[18:02:46] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[18:04:38] *** Parts: pragma- (~chaos@user/pragmatic-chaos) (Bye!)
[18:05:00] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Lost terminal)
[18:06:06] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:06:07] *** Quits: harpia (~harpia@2804:2aec:205:4600:1f64:3c12:1a0e:3b09) (Quit: harpia)
[18:06:21] *** Parts: F8ER (~f8er@user/voxel) (WeeChat 2.8)
[18:06:23] *** Joins: c4017w__ (~c4017@209.52.68.8)
[18:08:03] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 268 seconds)
[18:08:28] *** Joins: mug3n_ (~mugen@gateway/tor-sasl/mugen)
[18:08:47] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 250 seconds)
[18:09:25] *** Quits: jwhisnant_ (~jwhisnant@user/jwhisnant) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[18:09:39] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[18:10:23] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[18:10:31] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 268 seconds)
[18:10:35] *** karlnashville is now known as karl_AFK
[18:11:37] <wyre> what does mean that 'where' keyword in the [options.packages.find] section? https://setuptools.pypa.io/en/latest/userguide/declarative_config.html#using-a-src-layout
[18:11:51] <wyre> I mean, I cannot see the keyword 'where' below
[18:12:10] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[18:12:21] *** Quits: mug3n (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[18:12:46] *** Quits: FreEm1nD (~FreEm1nD@mail.guarapari.store) (Quit: Leaving)
[18:14:00] *** Quits: ede (~ede@user/ede) (Ping timeout: 250 seconds)
[18:14:21] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 256 seconds)
[18:14:55] *** Quits: duuude (~user@user/duuude) (Ping timeout: 256 seconds)
[18:16:43] <wyre> also ... there is no data files support for setup.cfg? https://setuptools.pypa.io/en/latest/userguide/datafiles.html
[18:17:27] *** Joins: dbristow (~dbristow@user/dbristow)
[18:17:37] *** Quits: vanessa (~vanessa@103.160.128.7) (Quit: WeeChat 3.4)
[18:17:55] <jinsun> where=src means src is the folder *where* it would start looking for packages
[18:17:59] *** Joins: Vonter (~Vonter@user/vonter)
[18:18:09] *** Joins: gasbag (~gasbag@024-216-149-125.res.spectrum.com)
[18:18:13] <wyre> I see, so 'where' is a valid keyword
[18:18:26] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[18:18:33] <jinsun> and you can specify package data with setup.cfg too
[18:18:40] *** karl_AFK is now known as karlnashville
[18:19:03] <jinsun> it is not very well documented I guess, but your first link has an example
[18:19:11] *** Quits: karlnashville (~karl@2601:482:4280:4cf0:5001:9215:b533:cefd) (Read error: Connection reset by peer)
[18:19:15] <jinsun> [options.package_data]
[18:19:21] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[18:19:37] *** Quits: mwichmann (~mats@209-188-119-117.taosnet.com) (Quit: Leaving)
[18:19:37] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:150a:b5fd:70ec:64c1) (Ping timeout: 240 seconds)
[18:19:56] *** Joins: onichomp (~onichomp@2806:264:4408:2eb:410f:5bec:f929:db56)
[18:20:08] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[18:20:46] *** Quits: onichomp (~onichomp@2806:264:4408:2eb:410f:5bec:f929:db56) (Read error: Connection reset by peer)
[18:21:58] *** Joins: onichomp (~onichomp@2806:264:4408:2eb:410f:5bec:f929:db56)
[18:22:02] *** Joins: mwichmann (~mats@209-188-119-117.taosnet.com)
[18:23:41] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[18:24:20] *** Joins: philectro (~quassel@2a02:2788:1024:671:6e4c:40cf:6191:ec7e)
[18:26:01] *** Quits: gasbag (~gasbag@024-216-149-125.res.spectrum.com) (Quit: Leaving)
[18:26:50] *** Joins: johnkeats7 (~johnkeats@2804:14c:32:a0cc:c444:55ef:22e9:885)
[18:27:58] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:28:17] *** Joins: georgios (~georgios@user/georgios)
[18:28:43] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl48ar17nctj5wsm7.ipv6.telus.net)
[18:28:45] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-8574-14f1-3c77-025b.res6.spectrum.com)
[18:29:18] *** Joins: Elodin (~weechat@user/elodin)
[18:30:07] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[18:30:54] *** Joins: jpodivin_ (~jpodivin@cgnat44-pool1-236-13.poda.cz)
[18:32:09] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[18:32:34] *** Joins: Elodin (~weechat@user/elodin)
[18:33:16] *** Quits: jpodivin (~jpodivin@cgnat44-pool1-236-13.poda.cz) (Ping timeout: 256 seconds)
[18:34:11] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[18:34:24] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[18:34:32] *** Quits: rvalue (~rvalue@user/rvalue) (Quit: ZNC - https://znc.in)
[18:35:23] <nicoz> nedbat :P are u online?
[18:35:34] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[18:35:35] <nedbat> nicoz: yes
[18:35:44] <nicoz> ok i have another problem
[18:35:50] *** Joins: rvalue (~rvalue@user/rvalue)
[18:35:59] <nedbat> nicoz: you can just ask the channel
[18:35:59] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[18:36:19] <nicoz> on irc the bot doesn’t bring me all the result
[18:36:23] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:36:55] <nedbat> nicoz: i don't know what you mean by "on irc the bot"?  tell us more about your situation
[18:37:31] <nicoz> wait
[18:37:32] <nicoz> [16:00:54] <nicoz> !dpkg mc[16:00:55] <DebianDev> bullseye (stable) (utils):[ 16:00:56] <DebianDev> bookworm (testing) (utils):[16:00:59] <DebianDev> sid (unstable) (utils):
[18:38:08] <grym> nicoz: there's a maximum message length for IRC messages
[18:38:15] <grym> and you're probably silently truncating at it
[18:38:18] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:bcaa:50e0:8519:fbfe)
[18:38:18] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:bcaa:50e0:8519:fbfe) (Changing host)
[18:38:18] *** Joins: skapata (~Skapata@user/skapata)
[18:38:23] <nicoz> grym no
[18:38:38] <nicoz> \n
[18:38:52] <nicoz> ['bullseye (stable) (utils):\n\tMidnight Commander - a powerful file manager\n    \n      3:4.8.26-1.1: amd64 arm64 armel armhf i386 mips64el mipsel ppc64el s390x\n    \n    \n    ', 'bookworm (testing) (utils):\n\tMidnight Commander - a powerful file manager\n    \n      3:4.8.27-1: amd64 arm64 armel armhf i386 mips64el mipsel ppc64el s390x\n    \n    \n    ', 'sid (unstable) (utils):\n\tMidnight Commander - a powerful file manager\n    \n      3:4.8.27-1:
[18:38:52] <nicoz> alpha amd64 arm64 armel armhf hppa i386 ia64 m68k mips64el mipsel ppc64 ppc64el riscv64 s390x sh4 sparc64 x32\n    \n    \n    ']
[18:39:01] <Wooble> don't paste in the channel
[18:39:02] <nedbat> nicoz: please use a pastebin
[18:39:08] <nedbat> nicoz: we've said this a few times
[18:39:24] <Wooble> also when someone asks you to explain what's going wrong, they mean with words, not with a dump of output.
[18:39:44] <nicoz> I don’t understand why you only report the first line of each
[18:40:14] <nicoz> ok sorry Wooble
[18:40:19] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:41:02] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[18:41:37] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[18:41:59] *** Joins: Fiji (~Fiji@user/fiji)
[18:42:13] <Wooble> nicoz: if you're trying to send IRC messages containing newlines, it's not going to work.
[18:42:34] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:42:46] <grym> removing newlines is pretty trivial, though
[18:42:55] *** Joins: han-solo (~hanish@user/han-solo)
[18:43:11] <nicoz> I wish he would not take the character n and print the text of that
[18:43:30] <nicoz> \n
[18:44:03] <Wooble> If you print a list, newlines in strings in the list will show up as \n.
[18:44:14] <Wooble> (the solution is to not print lists)
[18:44:14] *** Joins: spinningCat (~spinningC@about/web/muscles)
[18:44:23] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[18:46:06] *** Quits: spinningCat (~spinningC@about/web/muscles) (Quit: Leaving)
[18:46:48] <nicoz> How can I have the same result without printing to list?
[18:47:12] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[18:47:18] <nicoz> https://paste.debian.net/1229061/
[18:47:20] *** Joins: Sargento (uid523534@wikipedia/Sargento-de-Hierro)
[18:47:45] <nicoz> I thought he printed the contents of result.append in IRC
[18:48:18] <Wooble> nicoz: you can have a for loop over the list that prints each string in the list. I have no idea what IRC has to do with this code.
[18:48:39] <nicoz> is for an ircbot, which must print short description and stable testing unstable architectures
[18:48:40] <Wooble> If you have an IRC bot, that code isn't it.
[18:48:55] <nicoz> this is a function
[18:49:42] *** Joins: kaiseisei (~Thunderbi@113.26.111.177)
[18:49:58] <nicoz> https://paste.debian.net/1229063/
[18:50:01] *** Joins: Pickchea (~private@user/pickchea)
[18:50:08] *** Joins: karlnashville (~karl@2601:482:4280:4cf0:4dfc:eb59:c6c1:3f57)
[18:50:26] <nicoz> this is in the bot executable file to nest it
[18:51:12] <nicoz> but only prints the first lines and stops at \n
[18:51:18] <Wooble> ok, well if result contains newlines, you'll have to remove them before irc.send()'ing the strings, unless whatever `irc` is is smart enough to do that for you.
[18:51:40] <Wooble> \n isn't a valid character in an IRC message.
[18:52:08] <nicoz> yes
[18:52:10] *** Quits: Deknos (~someone@user/menace) (Quit: Deknos)
[18:52:11] *** Joins: colo_work (~colo_work@046125249046.public.t-mobile.at)
[18:52:15] <colo_work> hi
[18:52:30] <nicoz> Do you have any idea how I can remove these characters?
[18:52:31] *** Joins: Elodin (~weechat@user/elodin)
[18:53:23] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:53:35] *** Quits: Guest5888 (~enkrypt@onosendai.root.sx) (Quit: WeeChat 3.0)
[18:53:38] <Wooble> nicoz: irc.send(channel, x.replace("\n", " "))
[18:54:01] *** Joins: enkrypt (~enkrypt@user/enkrypt)
[18:54:09] *** Quits: panella32 (~panella32@154.6.22.19) (Quit: Textual IRC Client: www.textualapp.com)
[18:54:14] *** Quits: kaiseisei (~Thunderbi@113.26.111.177) (Ping timeout: 256 seconds)
[18:54:35] *** Joins: MrCollinsGA (~MrCollins@38.21.140.217)
[18:54:42] <colo_work> I have a string value as returned by the hexdigest() methods from hashlib's algorithms (part of the `sha256sum` UNIX utility output, really), and would like to convert that to the "raw bytes" format that the corresponding digest() methods would return. can you think of a clever way to do this?
[18:54:44] *** Joins: lavos (~molt@178-222-245-206.static.isp.telekom.rs)
[18:54:58] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:55:25] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[18:55:27] <nicoz> ok i trying Wooble
[18:55:50] <Wooble> colo_work: bytearray.fromhex()
[18:56:04] <colo_work> Wooble, awesome, I will look into that!
[18:56:14] <Wooble> colo_work: err, bytes.fromhex also is a thing
[18:56:15] *** Joins: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com)
[18:56:15] <nicoz> AttributeError: 'builtin_function_or_method' object has no attribute 'bullseye'
[18:56:51] <nicoz> ah scuse me
[18:56:56] <nicoz> one moment
[18:57:23] *** Joins: kaiseisei (~Thunderbi@113.26.111.177)
[18:57:46] <han-solo> `result.append.bullseye[0].text_content()`
[18:58:12] <Wooble> presumably s/d.b/(/ and add a ) at the end.
[18:58:15] <colo_work> Wooble, bytearray seems to work as intended. many, many thanks!
[18:58:16] *** Quits: CoolerX (~CoolerX@user/coolerx) (Quit: Leaving)
[18:58:18] <han-solo> ought to be `result.append(bullseye[0].text_content())` # but think you got that
[18:58:46] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 256 seconds)
[18:59:24] <Wooble> the real question is why are you scraping packages.debian.org when they provide much more easily machine readable formats than the HTML since the entire packaging system needs them
[18:59:48] <nicoz> hmm yes
[19:00:10] <lidless> Wooble: it's practice *shrug*
[19:00:45] *** Quits: georgeisbot (~georgeisb@45.63.10.10) (Remote host closed the connection)
[19:01:22] *** Joins: CoolerX (~CoolerX@user/coolerx)
[19:01:42] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[19:01:46] *** Quits: k5tux (~k5tux@67.237.164.102) (Remote host closed the connection)
[19:02:08] <nicoz> I didn’t save, forgive me lol
[19:02:19] *** Quits: kaiseisei (~Thunderbi@113.26.111.177) (Ping timeout: 268 seconds)
[19:03:29] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[19:03:35] *** Joins: guest3 (~guest3@90.252.222.165)
[19:04:07] *** Joins: akk (~akk@75-161-95-245.albq.qwest.net)
[19:04:20] <nicoz> thanks for the patience Wooble nedbat ;)
[19:04:22] *** Joins: tg (~tg@rockylinux/infra/tg)
[19:04:26] <nicoz> and han-solo
[19:04:52] <nicoz> i I will not resign thanks again ;)*
[19:05:31] *** Quits: SlicerDicer68 (~SlicerDic@107-208-180-225.lightspeed.mdsnwi.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[19:05:41] *** Parts: guest3 (~guest3@90.252.222.165) ()
[19:05:48] <akk> --
[19:05:58] *** Joins: kmh (~kmh@2a00:6020:5004:6800:50:8e3a:798a:780d)
[19:06:52] *** Joins: c4017w_ (~c4017@209.52.68.8)
[19:06:57] *** Quits: duds- (~duds-@gateway/tor-sasl/duds) (Ping timeout: 276 seconds)
[19:07:07] *** Parts: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[19:07:15] *** Quits: d1cor (~diego@179.63.242.120) (Ping timeout: 268 seconds)
[19:08:14] *** Joins: mrwick (~mrwick@user/mrwick)
[19:08:15] *** Quits: bluedust (~bluedust@117.207.237.207) (Read error: Connection reset by peer)
[19:08:39] *** Joins: wovixo (~wovixo@128.104.205.49)
[19:09:06] *** Quits: johnkeats7 (~johnkeats@2804:14c:32:a0cc:c444:55ef:22e9:885) (Ping timeout: 268 seconds)
[19:09:14] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[19:10:13] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[19:10:27] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[19:10:49] *** Quits: yassernasc (~yassernas@2804:29b8:505a:f33d:1872:f10d:d91b:b66) (Remote host closed the connection)
[19:11:08] *** Joins: yassernasc (~yassernas@2804:29b8:505a:f33d:1872:f10d:d91b:b66)
[19:11:48] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[19:12:02] *** Quits: karlnashville (~karl@2601:482:4280:4cf0:4dfc:eb59:c6c1:3f57) (Quit: Konversation terminated!)
[19:12:11] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 268 seconds)
[19:12:11] <ouestbillie> so i have this line re=subprocess.Popen("<shell command>", shell=True, cwd=<somedir>) but when I call re.kill in the finally block to do some cleanup the process doenst go away
[19:12:17] <ouestbillie> i can still see it with pgrep
[19:12:26] *** Quits: sydbarret (~anton@static-186-121-195-51.acelerate.net) (Quit: Going offline, see ya! (www.adiirc.com))
[19:12:38] <ouestbillie> how could this be and how do I solve it? it's for a pytest fixture so hygiene is kind of important here
[19:12:48] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[19:13:03] *** Joins: sydbarret (~anton@static-186-121-195-51.acelerate.net)
[19:14:17] *** Joins: Barones (~Barones@user/Barones)
[19:14:25] *** Quits: CoolerX (~CoolerX@user/coolerx) (Quit: Leaving)
[19:14:27] *** Joins: mat001 (~mat001@213.143.69.121)
[19:14:47] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[19:15:11] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca)
[19:15:33] *** Quits: yassernasc (~yassernas@2804:29b8:505a:f33d:1872:f10d:d91b:b66) (Ping timeout: 256 seconds)
[19:16:02] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[19:16:07] *** Quits: bad_blue_bull (~user@178.70.156.192) ()
[19:17:06] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[19:18:14] *** Joins: myusername (~myusernam@user/myusername)
[19:19:36] *** Joins: SlicerDicer68 (~SlicerDic@107-208-180-225.lightspeed.mdsnwi.sbcglobal.net)
[19:19:41] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:19:56] *** Joins: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1)
[19:20:05] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[19:20:18] *** Joins: karlnashville (~karl@2601:482:4280:4cf0:ccfa:f7f8:27ab:d4b3)
[19:20:20] *** Joins: trinli (~notto@melkinpaasi.cs.helsinki.fi)
[19:21:31] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[19:21:44] *** Joins: greedom (~greedom@p200300de670b300006c73a846cad12df.dip0.t-ipconnect.de)
[19:21:46] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[19:22:27] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[19:22:31] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[19:24:31] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[19:24:57] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[19:27:06] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[19:27:07] *** Quits: mat001 (~mat001@213.143.69.121) (Remote host closed the connection)
[19:27:42] *** Joins: mat001 (~mat001@72.28.108.216)
[19:29:09] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 256 seconds)
[19:29:15] <nedbat> ouestbillie: can you pastebin the code?
[19:29:33] *** Joins: KombuchaKip (~kip@192.252.230.5)
[19:30:32] *** Quits: dld (~davidlowr@2601:197:600:1210:5064:96c:65f6:1d79) (Ping timeout: 240 seconds)
[19:30:48] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[19:31:08] <ouestbillie> !paste
[19:31:17] <ouestbillie> ah man
[19:31:19] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:31:20] <nicoz> paste.debian.net
[19:31:25] <supakeen> It's in the /topic: https://bpa.st/ or any else you prefer.
[19:31:29] <nicoz> ora topic
[19:31:33] <nicoz> or topic
[19:31:37] *** Joins: dld (~davidlowr@2601:197:600:1210:9050:7c1d:b33c:2fa8)
[19:32:00] *** Quits: SlicerDicer68 (~SlicerDic@107-208-180-225.lightspeed.mdsnwi.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[19:33:26] *** Joins: teut (~teut@2401:4900:1c68:97ee:703c:16bf:ce4f:a96d)
[19:34:25] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:cec:aed7:90e9:7998) (Quit: pvergain)
[19:34:47] <ouestbillie> nedbat: http://paste.debian.net/1229068/
[19:35:34] <trinli> Dumb question time: I think I can program on an ok level, but there are some concepts I do not quite understand. A colleague once told me that a function should allow input in only one format (i.e. that the function itself should not e.g. check for the format and then adapt the functionality accordingly). Why is this?
[19:35:38] *** Joins: qlixed (~qlixed@181.44.129.13)
[19:35:40] <trinli> Or is this always so?
[19:36:01] <ouestbillie> trinli: define format?
[19:36:08] *** Joins: pepper (~pepper@user/pepper)
[19:36:13] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[19:36:20] <supakeen> trinli: Sounds more like a code quality opinion, but sure, giving a function a single well definable task is nice.
[19:36:20] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10ed:252e:99d9:ca30:6a40:daf8) (Read error: Connection reset by peer)
[19:36:39] <supakeen> Instead of that function growing into something that does everything (or somewhere in between).
[19:36:54] *** Joins: Algernon91 (~Algernon6@2a01:e0a:511:6ce0:159e:d2a3:c9a0:9ae9)
[19:36:55] <trinli> so "format" as in e.g. inputting dicts or some object of a class I have created
[19:37:39] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 256 seconds)
[19:38:17] <Wooble> but practicality beats purity and cf the robustness principle
[19:38:35] <bjs> trinli: well I guess it's just one of those age-old questions, do you build one big thing that does everything or do you build lots of little things that each do 1 thing
[19:38:40] <bjs> this is just another example of that.
[19:38:45] <trinli> So right now I am modifying a neural net, and I want to make the signatures identical to that of other classifiers I am using. The problem is that the neural net code internally uses one of the methods internally, so I cannot change that, unless I check for input and adjust
[19:39:52] <bjs> trinli: functions kind of fall into the second category, so it's natural to try make them simple and straightforward as much as possible. A function that accepts a string and writes the value to a database, or a number and then uses the number to draw something to the screen would be a weird function because it's trying to do two very different things in one place
[19:40:02] <nedbat> ouestbillie: since you are asking about a finally clause, you should include the finally clause in the pastebin
[19:40:05] *** Joins: SlicerDicer68 (~SlicerDic@107-208-180-225.lightspeed.mdsnwi.sbcglobal.net)
[19:40:54] *** Joins: vitali64 (~vitali64@user/vitali64)
[19:41:00] <nedbat> ouestbillie: pastebin the full function you are talking about
[19:41:03] *** Quits: jay-m126 (~jay-m@129.0.76.217) (Ping timeout: 256 seconds)
[19:41:15] <bjs> trinli: but a function that accepts a string, or a list of strings, or a pre-made Query object, or a list of dictionaries with data and then "does the same thing" with all of these to send data to a database is fine. So I'd say it's not really about the "format of the input"
[19:41:16] *** Quits: jay-m1261 (~jay-m@129.0.76.217) (Ping timeout: 256 seconds)
[19:41:42] *** Quits: jay-m126_ (~jay-m@129.0.76.217) (Read error: Connection reset by peer)
[19:41:48] <ouestbillie> nedbat: okay just dont tell my boss
[19:42:20] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[19:43:08] <ouestbillie> nedbat: http://paste.debian.net/1229071/
[19:43:26] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Remote host closed the connection)
[19:43:50] *** Joins: panella32 (~panella32@154.6.22.19)
[19:43:57] <trinli> bjs: ok. thanks for the input. I just find it hard to "lock on" to the same thought patterns that seem somehow obvious to ... others(?), but I think I understand your example
[19:44:00] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[19:44:37] <ouestbillie> trinli: dispatching on type is one of those things you'd do in other languages but ppl in python tend to avoid
[19:44:45] <nedbat> ouestbillie: hmm, not sure why that wouldn't work.  kill() doesn't say it returns anything.  your process could be ignoring that signal maybe?
[19:44:52] *** Quits: Algernon91 (~Algernon6@2a01:e0a:511:6ce0:159e:d2a3:c9a0:9ae9) (Ping timeout: 268 seconds)
[19:45:09] <Wooble> it should be SIGKILL on posix, though.
[19:45:26] <ouestbillie> nedbat: well a TERM from the cli when running the same command interactively works
[19:45:34] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[19:45:36] <ouestbillie> wait is ^C TERM or INT, I never remember
[19:45:57] <supakeen> It's probably more to do with sessions, process groups, and group leaders, and the signal not being propagated.
[19:46:11] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 245 seconds)
[19:46:46] <supakeen> ouestbillie: but let's start with the basics, you need to interact with the process after you kill it.
[19:46:50] <Wooble> I wonder if shell=True can result in you killing the shell but not the subprocess the shell spawned
[19:46:56] <ouestbillie> ^^
[19:47:09] <ouestbillie> thats my main line of thought but the docs arent suuuper clear
[19:47:11] <supakeen> Or in general you need to interact with it after it no longer exists.
[19:47:20] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 268 seconds)
[19:47:22] <trinli> ouestbillie: Yeah, I remember overloading from Java where you would just use the same names and have the functions accept different types of input
[19:47:26] <ouestbillie> no i just want to kill it
[19:47:31] <trinli> Seemed really convenient :D
[19:47:40] <supakeen> Sure, but killing it means you still need to read its exit or it will stay in defunct in any case.
[19:47:49] <supakeen> So let's start there :)
[19:47:50] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[19:47:50] *** karlnashville is now known as karl_AFK
[19:47:51] *** Quits: vsantana (~Thunderbi@fttx-177136149223.usr.predialnet.com.br) (Ping timeout: 256 seconds)
[19:48:00] <ouestbillie> trinli: if you want proper answers you should read a bit of type theory :-)
[19:48:04] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 256 seconds)
[19:48:06] *** karl_AFK is now known as karlnashville
[19:48:17] <ouestbillie> supakeen: /me is ashamed of his lack of posix knowledge
[19:48:25] <grawity> ^C is SIGINT, ^\ is SIGQUIT, IIRC either setsid() or setpgrp() is what detaches a process from the pgroup that'll be receiving signals
[19:48:36] <supakeen> Aside from that the code you have written is super racy, Popen will continue immediately and on the next line it might as well be that the process is not yet ready to accept connections or you might even be killing it before it actually starts.
[19:48:52] <Wooble> ouestbillie: does pgrep show it's actually *running*, or is it a zombie?
[19:48:56] <trinli> ouestbillie: I would have been happy with the dumb "this is the way it is!" Maybe I'll add the wikipedia article to my reading list
[19:49:07] <trinli> thanks!
[19:49:12] *** Quits: oz4ga (~tim@hator.sunsite.lv) (Quit: ZNC 1.8.2 - https://znc.in)
[19:49:50] <supakeen> ouestbillie: A .communicate or .wait with timeout somewhere would be a good thing
[19:49:57] *** Joins: Elodin (~weechat@user/elodin)
[19:50:34] <ouestbillie> supakeen: insteresting i never thought of races in python
[19:50:41] *** Joins: rsx (~dummy@ppp-188-174-138-129.dynamic.mnet-online.de)
[19:51:16] <supakeen> Popen = fork+exec, it'll not wait for the process to finish (or finish starting up, or whatever), that next line in your try will likely happen well before the program is ready to start accepting requests.
[19:51:57] <ouestbillie> supakeen: hmm no in that case it yields and the client to pytest which then does a bunch of queries on the process that was spawned with Popen
[19:52:46] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[19:53:38] <ouestbillie> supakeen: but i get your general point
[19:53:39] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[19:54:13] <supakeen> :) I have to go for dinner but I'd look in that direction, at the very least the process will not be 'removed' from your process list before you read its exit code (or your own process exits).
[19:54:15] <supakeen> Good luck.
[19:54:20] <ouestbillie> cheers
[19:54:32] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[19:54:39] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 256 seconds)
[19:54:50] *** Joins: oz4ga (~tim@hator.sunsite.lv)
[19:55:15] *** Joins: Schrostfutz (~Schrostfu@55d4f092.access.ecotel.net)
[19:55:35] *** Joins: vsantana (~Thunderbi@189.40.66.229)
[19:55:47] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[19:57:19] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[19:57:44] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Remote host closed the connection)
[19:57:49] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:57:57] *** Quits: rsx (~dummy@ppp-188-174-138-129.dynamic.mnet-online.de) (Quit: rsx)
[19:58:02] *** Joins: Vonter (~Vonter@user/vonter)
[20:01:44] *** Quits: raghavTinker (~raghavTin@103.149.154.10) (Quit: Client closed)
[20:03:45] *** Quits: thurs80601421053 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[20:03:56] *** Quits: KombuchaKip (~kip@192.252.230.5) (Ping timeout: 256 seconds)
[20:03:59] *** Quits: philectro (~quassel@2a02:2788:1024:671:6e4c:40cf:6191:ec7e) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:04:21] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[20:04:42] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:04:52] *** Joins: thurs80601421053 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[20:06:55] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[20:07:23] *** Joins: c4017w__ (~c4017@209.52.68.8)
[20:08:54] <sangy> q. I want to compare semantic versions (i.e., is x.y.z greater than i.j.k). I was hoping to not install something external, and I was wondering wether e.g., setuptools exposes an interface to do so
[20:09:04] <sangy> I would assume so, because it needs to do it for dependency resolution anyway...
[20:09:23] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[20:09:36] <sangy> (I know there are a bunch of options on pypi, but I wonder if it's worth it)
[20:09:50] *** Joins: jpodivin__ (~jpodivin@cgnat44-pool1-236-13.poda.cz)
[20:10:32] <InPhase> sangy: setuptools uses packaging.version.parse
[20:11:05] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[20:11:25] <sangy> InPhase: oh, let me check it out. Thanks!
[20:11:41] *** Joins: crashrep (~crashrep@user/crashrep)
[20:13:52] <sangy> InPhase: this works amazingly
[20:14:08] *** Quits: jpodivin_ (~jpodivin@cgnat44-pool1-236-13.poda.cz) (Ping timeout: 256 seconds)
[20:14:08] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Ping timeout: 256 seconds)
[20:14:10] <sangy> and pretty elegant in that you can use < > = for comparing versions
[20:14:23] *** Quits: vitali64 (~vitali64@user/vitali64) (Quit: Lost terminal)
[20:14:24] <InPhase> Yep.  It has one job, and seems to do it well.
[20:14:39] *** Joins: k5tux (~k5tux@67.237.164.102)
[20:14:56] *** Joins: emf (~emf@162.218.217.186)
[20:15:34] <InPhase> Most importantly because it is the current standard, most python packages with semantic versioning should be using versioning which is compatible with it.
[20:15:41] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Read error: Connection reset by peer)
[20:15:57] <InPhase> Or really any sort of versioning.
[20:16:01] <sangy> yeah, that's what I was thinking. I'm mostly doing comparisons of semver (+ preX and postX bits)
[20:16:05] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[20:16:13] *** Joins: Algernon666 (~Algernon6@2a04:cec0:10ed:252e:a8fa:6b59:d4cb:97e1)
[20:16:16] <sangy> but I was surprised that it did handle an openssl version I fed it haha :)
[20:16:17] *** Quits: Trashlord (~trash@user/trashlord) (Ping timeout: 240 seconds)
[20:16:47] *** Joins: maryo (~Maryo@user/maryo)
[20:17:00] *** Joins: zmt00 (~zmt00@user/zmt00)
[20:17:02] *** Joins: yassernasc (~yassernas@2804:29b8:505a:f33d:1872:f10d:d91b:b66)
[20:17:03] *** Quits: maryo (~Maryo@user/maryo) (Read error: Connection reset by peer)
[20:17:26] *** Joins: maryo (~Maryo@user/maryo)
[20:18:22] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:150a:b5fd:70ec:64c1)
[20:18:34] <InPhase> I'm a pretty big fan of date-based versioning, but this will also work fine on that.  Even really bad forms like this work:  version.parse('2022-9-4') < version.parse('2022-10-05')   yields True
[20:18:52] *** Quits: luigibu (~luigi@61.red-79-159-77.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[20:18:59] <sangy> that's pretty impressive
[20:19:02] *** Joins: emf_ (~emf@163.114.132.4)
[20:19:14] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 250 seconds)
[20:19:24] <sangy> I would assume that for as long there is no change in scheme it should handle things well
[20:19:48] *** Quits: emf (~emf@162.218.217.186) (Ping timeout: 256 seconds)
[20:19:56] *** Joins: jwisbell35 (~jwisbell3@174-080-085-082.res.spectrum.com)
[20:20:03] *** Joins: bluedust (~bluedust@117.207.237.207)
[20:20:07] *** Joins: Trashlord (~trash@user/trashlord)
[20:20:43] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.4)
[20:21:24] *** Joins: megaTherion (~therion@unix.io)
[20:22:08] *** Joins: Auron (Auron956@user/auron)
[20:23:43] *** Joins: upsala (~zcb@185.213.155.232)
[20:24:04] *** Joins: molten (~molt@178-222-245-206.static.isp.telekom.rs)
[20:25:04] *** Joins: elbit0r (~viktor@195.32.87.115)
[20:25:10] *** Joins: Fiji_ (~Fiji@user/fiji)
[20:25:36] *** Joins: johnkeats7 (~johnkeats@2804:14c:32:a0cc:c444:55ef:22e9:885)
[20:28:18] *** Quits: lavos (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 256 seconds)
[20:28:18] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Quit: Leaving)
[20:28:20] *** Quits: Celelibi (celelibi@user/celelibi) (Ping timeout: 250 seconds)
[20:28:23] *** Joins: yusraDev (~yusraDev@37.17.152.219)
[20:28:52] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 256 seconds)
[20:30:07] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[20:30:39] *** karlnashville is now known as karl_AFK
[20:30:53] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[20:31:44] *** Quits: resmo (~resmo@2a00:d420:9:8a00:f10:808e:e130:119) (Remote host closed the connection)
[20:31:58] *** Joins: resmo (~resmo@2a00:d420:9:8a00:2f63:152f:1768:d580)
[20:33:51] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[20:36:09] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[20:36:57] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[20:37:04] *** Joins: codificat (~pep@126.red-79-158-54.dynamicip.rima-tde.net)
[20:37:13] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:38:40] *** Joins: georgeisbot (~georgeisb@8.12.22.9)
[20:39:30] *** Quits: Deana (~Deana@90.151.86.69) (Quit: Konversation terminated!)
[20:41:41] *** Joins: Celelibi (celelibi@user/celelibi)
[20:41:43] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[20:42:28] *** Quits: the_lanetly_052 (~the_lanet@194.135.155.135) (Ping timeout: 256 seconds)
[20:43:09] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[20:43:53] *** Parts: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[20:44:07] *** Joins: someuser (~user@197.54.38.140)
[20:44:15] *** Joins: argument (~0ptions@user/argument)
[20:44:19] *** Joins: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1)
[20:44:45] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[20:44:48] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 250 seconds)
[20:45:14] *** Joins: Yugi (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[20:45:54] <argument> Can I do something similar to this in python: my_function("hello", ["list_item_1", "list_item_2"])
[20:46:14] <bjs> argument: that line is valid Python isn't it?
[20:46:18] <Peng> That's valid syntax. What do you want it to do?
[20:46:25] <argument> That is, instantiate a list with items as it is being passed, I've tried a few different ways and it does not work + looked online
[20:46:34] <argument> Ok I'll paste error
[20:46:39] <bjs> argument: what do you mean it doesn't work?
[20:46:39] <lambda> argument: that is exactly how you do it
[20:46:39] <sangy> that looks like it should work
[20:46:41] <bjs> okay
[20:47:12] <argument> Ok it worked now haha
[20:47:14] <argument> jesus
[20:47:18] <argument> thanks though :)
[20:48:08] *** Quits: johnjaye (~pi@173.209.65.233) (Ping timeout: 256 seconds)
[20:48:16] *** Quits: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 250 seconds)
[20:49:02] *** Quits: kmh (~kmh@2a00:6020:5004:6800:50:8e3a:798a:780d) (Remote host closed the connection)
[20:49:15] *** Joins: kmh (~kmh@2a00:6020:5004:6800:50:8e3a:798a:780d)
[20:50:14] *** Quits: Averna (Averna@gateway/vpn/protonvpn/averna) (Ping timeout: 268 seconds)
[20:51:00] *** Joins: whaley (~whaley@2603-6080-a301-33d1-7846-e44d-41fc-c7f5.res6.spectrum.com)
[20:51:50] *** Joins: KombuchaKip (~kip@192.252.230.5)
[20:52:12] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[20:52:31] *** Quits: vsantana (~Thunderbi@189.40.66.229) (Read error: Connection reset by peer)
[20:52:37] *** Joins: johnjaye (~pi@173.209.65.233)
[20:53:18] *** Joins: vsantana (~Thunderbi@2804:214:829e:7466:1533:c6ff:f7d9:b478)
[20:55:36] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[20:57:11] *** Joins: djapo (~archangel@user/djapo)
[20:57:49] *** Joins: sagax (~sagax_nb@user/sagax)
[20:59:31] *** Parts: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[21:01:01] *** Joins: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1)
[21:02:31] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[21:03:13] *** Quits: maryo (~Maryo@user/maryo) (Ping timeout: 256 seconds)
[21:04:34] *** Quits: bytehackr (~Sandipan@43.252.250.126) (Ping timeout: 256 seconds)
[21:04:55] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[21:05:08] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Ping timeout: 256 seconds)
[21:05:41] *** Joins: bloody (~bloody@user/bloody)
[21:05:57] *** Joins: thelounge0617 (5e865860@67.205.143.82)
[21:06:02] *** Quits: x4rchimedes (~archimed3@2a00:23c5:dab6:a501:d0e1:4bfd:3940:6b9e) (Ping timeout: 250 seconds)
[21:07:06] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[21:07:13] *** Joins: x4rchimedes (~archimed3@2a00:23c5:dab6:a501:fcea:373d:260:a443)
[21:07:29] *** Quits: bluedust (~bluedust@117.207.237.207) (Remote host closed the connection)
[21:07:34] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[21:07:52] *** Joins: c4017w_ (~c4017@209.52.68.8)
[21:09:05] *** Joins: robert_ (~robert_@47.203.169.95)
[21:09:49] *** Quits: kmh (~kmh@2a00:6020:5004:6800:50:8e3a:798a:780d) (Quit: Leaving)
[21:11:12] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 268 seconds)
[21:11:43] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[21:12:15] *** Joins: amazoniantoad (~jr@pool-71-114-43-42.washdc.fios.verizon.net)
[21:12:28] *** Joins: Guest23 (~Guest23@204.43.242.232)
[21:12:43] *** Joins: zoooz (~zoooz@204.43.243.133)
[21:12:48] <sydbarret> TML you there?
[21:12:51] *** Quits: robert_ (~robert_@47.203.169.95) (Read error: Connection reset by peer)
[21:13:04] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[21:13:08] *** Joins: CoolerX (~CoolerX@user/coolerx)
[21:13:10] <zoooz> does anyone know how to do this?
[21:13:11] <amazoniantoad> Hey I'm trying to use tensorflow to predict a value that I have normalized. I think there might be something wrong with my network design. I have it listed out here: https://stackoverflow.com/questions/70930395/im-trying-to-predict-on-a-range-of-values-which-i-normalized-using-tensorflow
[21:13:12] <zoooz> https://www.hackinscience.org/help/
[21:13:21] <amazoniantoad> Can anyone please look at it and tell me what I might be doing wrong?
[21:13:47] <zoooz> does anyone know how to do this?
[21:13:48] <zoooz> https://www.hackinscience.org/help/
[21:13:54] <mefistofeles> lol
[21:14:18] <mefistofeles> amazoniantoad: doesn't seem python-specific, you might want to try something like ##machinelearning-general
[21:14:27] <amazoniantoad> mefistofeles: thanks
[21:15:59] <TML> sydbarret: yes
[21:16:15] *** Joins: summersault (~summersau@179.221.251.36)
[21:16:17] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:16:33] <sydbarret> TMl following up my yesterdays question. https://github.com/googleads/googleads-python-lib/blob/master/examples/adwords/authentication/create_adwords_client_with_refresh_token.py
[21:16:50] <sydbarret> there you can see how to get client without yaml file
[21:17:09] <sydbarret> old package is googleads, my question is how can you acomplish similar sturf
[21:17:17] <sydbarret> with their new package google-ads-python
[21:17:32] *** Joins: Good666 (~Good666@120.229.65.173)
[21:17:36] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[21:17:47] <TML> sydbarret: I don't know that you can
[21:18:03] <sydbarret> probably is not possible innit?
[21:18:17] <sydbarret> doc only speaks about authorization code url
[21:18:22] <TML> Well, I mean - I don't know that you *can't*, either
[21:18:30] *** Joins: ckdCreations (~ckdCreati@147.55.133.140)
[21:19:00] <zoooz> does anyone know how to do this?
[21:19:01] <zoooz> https://www.hackinscience.org/exercises/first-function
[21:19:03] <zoooz> I have
[21:19:05] <TML> I am just unable to find any documentation about it either way
[21:19:11] <zoooz> 'import math'
[21:19:11] <zoooz> def circle_perimeter(r):
[21:19:12] <zoooz>     print(circle_perimeter(r))
[21:19:20] *** Quits: libussa (~libussa@static.121.202.201.138.clients.your-server.de) (Quit: quit)
[21:19:35] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:19:39] <han-solo> https://bpa.st/+python
[21:20:13] *** Quits: tobybl_ (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[21:20:14] <Wooble> zoooz: well, that would be a function that calls itself, and doesn't return a value.
[21:20:29] *** Joins: libussa (~libussa@libussa.net)
[21:20:33] <TML> zoooz: That looks like bottomless recursion to me
[21:20:42] <bjs> zoooz: that function doesn't look like it does anything useful, it just says that the circle perimeter is the circle perimeter. I'd expect some kind of calculations with pi?
[21:20:57] *** Joins: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com)
[21:21:00] *** Quits: summersault (~summersau@179.221.251.36) (Ping timeout: 256 seconds)
[21:21:06] <zoooz> how do you return it?
[21:21:17] <bjs> zoooz: Python has a `return` statement
[21:21:22] <bjs> zoooz: like `def add_one(x): return x + 1`
[21:21:36] <Wooble> (same as in c++, which you said the other day you program in...)
[21:22:05] <zoooz> oh really ok
[21:22:09] <zoooz> ill do that
[21:22:16] <zoooz> thanks wooble
[21:22:29] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[21:22:53] <Wooble> (and not to be too blunt but did you read the page you linked to? they literally show an example of return)
[21:23:03] <han-solo> wish the link in the hint pointed to the example with a `return`
[21:23:07] <zoooz> they did? oh
[21:23:41] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[21:23:50] *** Quits: elias117 (~elias117@user/elias117) (Ping timeout: 256 seconds)
[21:25:43] <zoooz> I dont see it?
[21:25:57] <Wooble> def identity(x); return x
[21:26:40] *** Quits: Guest23 (~Guest23@204.43.242.232) (Quit: Client closed)
[21:26:58] *** Good666 is now known as Nick89
[21:27:57] *** Joins: neverfindme (~hayden@158.123.160.43)
[21:28:16] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[21:28:31] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[21:28:39] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[21:28:59] *** Joins: hams (~hams@user/hams)
[21:29:23] *** Joins: thelounge4320 (60e647d7@67.205.143.82)
[21:29:37] *** Quits: neverfindme (~hayden@158.123.160.43) (Max SendQ exceeded)
[21:30:16] *** Joins: neverfindme (~hayden@158.123.160.43)
[21:30:20] *** Quits: zoooz (~zoooz@204.43.243.133) (Quit: Client closed)
[21:30:56] *** Quits: roro_ (~roro@78.192.226.182) (Ping timeout: 268 seconds)
[21:30:58] *** Quits: libussa (~libussa@libussa.net) (Quit: quit)
[21:31:44] *** Quits: panella32 (~panella32@154.6.22.19) (Quit: Textual IRC Client: www.textualapp.com)
[21:31:46] *** Joins: libussa (~libussa@libussa.net)
[21:32:12] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10e9:d728:a8fa:6b59:d4cb:97e1)
[21:32:22] *** Quits: thelounge4320 (60e647d7@67.205.143.82) (Quit: The Lounge - https://thelounge.chat)
[21:32:31] *** Quits: neverfindme (~hayden@158.123.160.43) (Client Quit)
[21:34:23] *** Quits: yusraDev (~yusraDev@37.17.152.219) (Ping timeout: 256 seconds)
[21:34:57] *** Quits: karl_AFK (~karl@2601:482:4280:4cf0:ccfa:f7f8:27ab:d4b3) (Ping timeout: 240 seconds)
[21:34:58] *** Joins: yusraDev (~yusraDev@37.17.151.228)
[21:35:22] *** Joins: elias117 (~elias117@47.55.112.181)
[21:35:22] *** Quits: elias117 (~elias117@47.55.112.181) (Changing host)
[21:35:22] *** Joins: elias117 (~elias117@user/elias117)
[21:35:56] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl48ar17nctj5wsm7.ipv6.telus.net) (Ping timeout: 250 seconds)
[21:36:07] *** Joins: vimart (~ketiv@cpc148896-sgyl44-2-0-cust233.18-2.cable.virginm.net)
[21:36:29] *** Quits: Algernon666 (~Algernon6@2a04:cec0:10ed:252e:a8fa:6b59:d4cb:97e1) (Ping timeout: 268 seconds)
[21:36:29] *** Quits: dreamon (~dreamon@ppp-88-217-91-105.dynamic.mnet-online.de) (Ping timeout: 268 seconds)
[21:36:39] *** Joins: Jong (~Jong@2620:10d:c090:400::5:97ac)
[21:36:43] *** Quits: libussa (~libussa@libussa.net) (Quit: quit)
[21:36:52] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[21:36:55] *** Joins: Xardas (~Xardas@149.233.51.127)
[21:36:58] *** Quits: greedom (~greedom@p200300de670b300006c73a846cad12df.dip0.t-ipconnect.de) (Remote host closed the connection)
[21:37:31] *** Joins: libussa (~libussa@libussa.net)
[21:37:43] *** Quits: MajorBiscuit (~MajorBisc@c-001-028-049.client.tudelft.eduvpn.nl) (Ping timeout: 268 seconds)
[21:37:44] *** Quits: rajkosto (~rajkosto@93-86-127-103.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[21:37:45] *** Quits: Nick89 (~Good666@120.229.65.173) (Remote host closed the connection)
[21:37:47] *** Quits: jpodivin__ (~jpodivin@cgnat44-pool1-236-13.poda.cz) (Ping timeout: 256 seconds)
[21:38:35] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:40:13] *** Quits: jim87 (~quassel@93.55.249.30) (Read error: Connection reset by peer)
[21:40:33] *** Joins: jdc (~jdc@cpe-96-28-210-220.kya.res.rr.com)
[21:40:41] *** Joins: lavos (~molt@178-222-245-206.static.isp.telekom.rs)
[21:42:03] <kosh> amazoniantoad, try these two discord servers they are both for machine learning and I have gottne help there a few times TDS: https://discordapp.com/invite/eaPVRW3  DS: https://discordapp.com/invite/UYNaemm
[21:42:41] *** Quits: txtsd (~txtsd@user/txtsd) (Quit: WeeChat 3.4)
[21:42:52] *** Quits: pycode1 (~pycode3@2001:b07:5d28:551:e0af:40d4:d2bc:6338) (Ping timeout: 250 seconds)
[21:44:15] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[21:44:30] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 268 seconds)
[21:44:35] *** Quits: molten (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 256 seconds)
[21:46:01] *** Joins: pgib (~textual@173.38.117.89)
[21:46:31] *** Joins: magla (~gelignite@55d4be51.access.ecotel.net)
[21:47:35] *** Quits: flea (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 268 seconds)
[21:48:20] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[21:48:20] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[21:48:20] *** Joins: JordiGH (~jordi@user/jordigh)
[21:48:37] *** Quits: esther (~esther@199.10.64.86) (Ping timeout: 240 seconds)
[21:48:56] *** Joins: esther (~esther@199.10.64.118)
[21:49:24] *** Quits: whaley (~whaley@2603-6080-a301-33d1-7846-e44d-41fc-c7f5.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:50:49] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[21:51:23] *** Quits: teut (~teut@2401:4900:1c68:97ee:703c:16bf:ce4f:a96d) (Quit: Client closed)
[21:51:25] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[21:53:57] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[21:54:11] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[21:54:21] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:8181:21e:c7e4:e748)
[21:54:21] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:8181:21e:c7e4:e748) (Changing host)
[21:54:21] *** Joins: skapata (~Skapata@user/skapata)
[21:54:58] *** Joins: thelounge4844 (589c8cd3@67.205.143.82)
[21:55:00] *** Quits: yusraDev (~yusraDev@37.17.151.228) (Quit: Client closed)
[21:55:02] *** humberto1 is now known as humbertowoody
[21:55:27] *** Quits: thelounge4844 (589c8cd3@67.205.143.82) (Client Quit)
[21:55:34] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[21:56:37] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:3992:cb3b:a718:c754) (Ping timeout: 240 seconds)
[21:56:44] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 250 seconds)
[21:56:51] *** Joins: dstein64- (~dstein64@dannyadam.com)
[21:57:32] *** Quits: sus (zero@user/zeromomentum) (Quit: Ping timeout (120 seconds))
[21:57:45] *** Joins: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39)
[21:57:46] *** Joins: sus (zero@user/zeromomentum)
[21:58:22] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[21:58:39] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.4)
[21:59:07] *** Joins: thelounge3901 (589c8cd3@67.205.143.82)
[21:59:10] *** Joins: nocture (~nocture@c-xd4ed87fa.cust.hiper.dk)
[21:59:34] <petaflot> hello! I'm having an issue with os.fsync() ; doing `tail -f /tmp/foo` shows othing until the script is halted! can it be fixed without closing and reopening the file each time? http://dpaste.com/CU8TWMT8D
[21:59:40] *** Quits: dvx (~dvx@5.181.92.64) (Remote host closed the connection)
[22:00:15] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[22:00:34] <deniska> petaflot: python file output is itself buffered, try f.flush()
[22:00:40] *** Quits: dstein64 (~dstein64@dannyadam.com) (Ping timeout: 256 seconds)
[22:00:40] *** dstein64- is now known as dstein64
[22:00:45] *** Quits: dstein64 (~dstein64@dannyadam.com) (Client Quit)
[22:01:01] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 256 seconds)
[22:01:18] *** Joins: dstein64 (~dstein64@dannyadam.com)
[22:01:26] *** Joins: aslicedbanjo (~aslicedba@host86-160-16-51.range86-160.btcentralplus.com)
[22:01:38] <deniska> petaflot: also I believe `tail -f` might be waiting for the whole line to end, and you are writing out a single line
[22:01:59] *** Quits: thelounge3901 (589c8cd3@67.205.143.82) (Quit: The Lounge - https://thelounge.chat)
[22:02:16] <petaflot> deniska: I have some \n printed. thanks! it works!
[22:02:23] *** Joins: hlauk (~hlauk@176.33.108.116)
[22:02:39] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[22:03:17] *** Joins: Liblx (~Alex@2a02:810c:280:59c:78c0:8f13:70a3:e676)
[22:03:54] *** Quits: myusername (~myusernam@user/myusername) (Quit: Leaving)
[22:05:12] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[22:05:36] *** Quits: Vonter (~Vonter@user/vonter) (Quit: WeeChat 3.4)
[22:05:55] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[22:05:55] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[22:06:00] *** Quits: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:06:41] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[22:07:10] *** Joins: structoha (~structoha@gateway/tor-sasl/structoha)
[22:07:47] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[22:08:23] *** Joins: d1cor (~diego@179.63.242.120)
[22:08:24] *** Joins: c4017w__ (~c4017@209.52.68.8)
[22:08:52] *** Quits: Liblx (~Alex@2a02:810c:280:59c:78c0:8f13:70a3:e676) (Ping timeout: 250 seconds)
[22:10:37] *** Joins: Liblx (~Alex@2a02:810c:280:59c:78c0:8f13:70a3:e676)
[22:10:39] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[22:10:59] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[22:11:27] *** Quits: hlauk (~hlauk@176.33.108.116) (Quit: Leaving)
[22:11:47] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[22:12:32] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[22:13:43] *** Quits: andreasbuhr (~quassel@p549db9a5.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:13:50] *** Quits: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39) (Quit: Client closed)
[22:14:07] *** Joins: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39)
[22:14:44] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[22:14:50] *** Quits: someuser (~user@197.54.38.140) (Ping timeout: 256 seconds)
[22:15:22] *** Quits: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39) (Client Quit)
[22:15:33] *** Joins: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39)
[22:15:38] *** Joins: nomic (~nomic@185.192.69.3)
[22:15:54] *** Quits: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39) (Client Quit)
[22:15:59] *** Quits: jdc (~jdc@cpe-96-28-210-220.kya.res.rr.com) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[22:16:10] *** Joins: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39)
[22:16:37] *** Joins: dreamon (~dreamon@pd9503a7e.dip0.t-ipconnect.de)
[22:16:40] *** Joins: jdc (~jdc@cpe-96-28-210-220.kya.res.rr.com)
[22:16:51] *** Quits: jdc (~jdc@cpe-96-28-210-220.kya.res.rr.com) (Client Quit)
[22:16:56] *** Quits: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39) (Client Quit)
[22:17:11] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10e9:d728:a8fa:6b59:d4cb:97e1) (Ping timeout: 268 seconds)
[22:17:46] *** Joins: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39)
[22:19:19] *** Joins: FreEm1nD (~FreEm1nD@mail.guarapari.store)
[22:19:44] *** Joins: Atque (~Atque@user/atque)
[22:21:00] *** Quits: Liblx (~Alex@2a02:810c:280:59c:78c0:8f13:70a3:e676) (Ping timeout: 250 seconds)
[22:21:14] *** Joins: xkuru (~xkuru@user/xkuru)
[22:21:57] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:150a:b5fd:70ec:64c1) (Ping timeout: 240 seconds)
[22:21:58] *** Joins: Liblx (~Alex@2a02:810c:280:59c:78c0:8f13:70a3:e676)
[22:26:47] *** Quits: k5tux (~k5tux@67.237.164.102) (Read error: No route to host)
[22:27:30] *** Joins: tiotags (~tiotags@user/tiotags)
[22:27:37] *** Quits: Liblx (~Alex@2a02:810c:280:59c:78c0:8f13:70a3:e676) (Ping timeout: 240 seconds)
[22:28:27] *** Joins: f1se4 (~f1se4@213.195.113.45)
[22:29:17] *** Joins: Liblx (~Alex@2a02:810c:280:59c:78c0:8f13:70a3:e676)
[22:29:19] <SnoopJ> mefistofeles, have you seen the web GUI that Scalene added with 1.5.0?
[22:29:53] *** Quits: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39) (Quit: Client closed)
[22:30:41] *** Joins: karlnashville (~karl@2601:482:4280:4cf0:4d9a:102c:1aff:7bf8)
[22:31:15] *** Quits: Liblx (~Alex@2a02:810c:280:59c:78c0:8f13:70a3:e676) (Client Quit)
[22:31:25] *** Joins: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39)
[22:32:41] *** Quits: nocture (~nocture@c-xd4ed87fa.cust.hiper.dk) (Quit: nocture)
[22:32:54] *** Quits: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39) (Client Quit)
[22:32:58] <mefistofeles> SnoopJ: oh, no I haven't, thanks for the info, will check it as soon as possible
[22:33:28] *** Quits: yassernasc (~yassernas@2804:29b8:505a:f33d:1872:f10d:d91b:b66) (Remote host closed the connection)
[22:33:28] <SnoopJ> mefistofeles, http://plasma-umass.org/scalene-gui/
[22:35:05] *** Quits: nyuszika7h (nyuszika7h@lykos/dev/nyuszika7h) (Read error: Connection reset by peer)
[22:35:18] *** Quits: han-solo (~hanish@user/han-solo) (Quit: night)
[22:35:30] <SnoopJ> Looks like there's a separate repository for it if you wanted to host a version of it yourself (or use it without a network connection)
[22:35:47] *** Joins: zebrag (~chris@user/zebrag)
[22:35:53] *** Joins: nyuszika7h (nyuszika7h@lykos/dev/nyuszika7h)
[22:38:07] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[22:38:14] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Client Quit)
[22:38:31] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[22:39:14] *** Joins: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39)
[22:39:38] *** Quits: tWqaq (~tWqaq@240e:389:5d1c:ff00:6793:1724:d3ac:91bc) (Quit: Leaving)
[22:39:42] *** Quits: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39) (Client Quit)
[22:39:59] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[22:40:12] *** Joins: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39)
[22:41:16] *** Joins: duuude (~user@user/duuude)
[22:41:32] *** Joins: Deneb (~johnch@23.143.9.51.dyn.plus.net)
[22:42:59] <Deneb> how do I make my program wait for an expected result from a function? In a command line version the function sits want waits in a loop until something happens (data received on serial port) before proceeeding further. However, in the GUI version, program execution seems to run on regardless.
[22:43:30] *** Joins: harpia (~harpia@2804:2aec:205:4600:1f64:3c12:1a0e:3b09)
[22:43:41] <obsdeezy> While?
[22:44:04] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[22:44:45] *** Quits: Telvana (~capo@user/telvana) (Quit: ZNC 1.9.x-git-170-9be0cae1 - https://znc.in)
[22:45:05] *** Quits: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:12] *** Joins: hlauk (~hlauk@176.33.108.116)
[22:45:55] *** Joins: Pickchea (~private@user/pickchea)
[22:46:41] <ssbr> Deneb: GUIs use asynchronous programming -- rather than suspending execution until something completes, you begin something, and then have an event that fires when it completes. You then react to that event via some event handling system -- often just a callback function that's passed in, sometimes an event stream/queue.
[22:47:16] <ssbr> futures and async functions can make the callback thing look nearly identical to the synchronous version of the code
[22:47:18] *** Quits: structoha (~structoha@gateway/tor-sasl/structoha) (Ping timeout: 276 seconds)
[22:47:29] <obsdeezy> Does he need a listener?
[22:47:55] *** Joins: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com)
[22:47:58] <Deneb> ssbr: yes, that makes sense, but so how do I call the function and wait?
[22:48:37] *** Quits: y04nn (~y04nn@92.223.89.196) (Ping timeout: 256 seconds)
[22:48:41] <ssbr> Deneb: depends on the libraries you're using.
[22:49:13] <MacGyver> If you actually need to wait for a result, you can usually pass some argument you get from the function that sets up the asynchronous stuff into a function almost literally called "wait".
[22:49:16] <ssbr> Deneb: could you maybe show your code or link to the gui library and the function you're calling?
[22:49:22] <Deneb> obsdeezy: hmm, could be. I think in Javascript it would be promises, but is there an equivalent in Python. I am using PySerial
[22:49:36] <MacGyver> But implementation details differ.
[22:49:37] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Ping timeout: 240 seconds)
[22:49:56] <Deneb> ssbr: not easily, but yes, perhaps
[22:50:00] <ssbr> Deneb: for asyncio, you'd use https://pypi.org/project/pyserial-asyncio/ I guess
[22:50:22] <ssbr> And then if the gui library also works with asyncio...!
[22:51:45] <lola> o/ pyton
[22:51:49] <lola> I have one question
[22:52:01] <lola> would be great if someone would be able to help me
[22:52:05] <lola> Cheers in advance
[22:52:25] <Deneb> MacGyver: agreed. The command line test version seems to work synchronouly and the loop waits for something to happen. In the GUI version it doesen't.
[22:52:48] <SnoopJ> lola, we probably can, but only if you ask your question to the channel
[22:53:14] *** Quits: ska (~ska@user/ska) (Quit: Leaving)
[22:53:26] <lola> sure give me one second Im still writing it ;)
[22:53:27] <lola> https://git.replicant.us/contrib/irelativism/wiki-migration-scripts/tree/redmine2git.py?h=main
[22:53:27] <lola> in the def git commit section
[22:53:45] <lola>  in:... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/202dd2298c28ef07a1d8f1a6bd92893ef673cc4c)
[22:53:54] *** Quits: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39) (Quit: Client closed)
[22:53:56] *** Joins: Syroth (~Syroth@pool-96-244-212-50.bltmmd.fios.verizon.net)
[22:54:05] *** Joins: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39)
[22:54:18] *** Quits: Centaur (~sys@user/probe) (Remote host closed the connection)
[22:54:20] <Deneb> I have pasted my code here: https://bpa.st/QEEA. The function that I am trying to get the program to wait on is waitForPlotData()
[22:54:32] *** Quits: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39) (Client Quit)
[22:54:43] *** Joins: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39)
[22:54:46] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:246f:2937:1ec0:9b42)
[22:54:57] *** Quits: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39) (Client Quit)
[22:55:04] <lola> do you see SnoopJ that is why I didnt wanted to write my question in seperate bits
[22:55:16] *** Joins: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39)
[22:55:47] *** Joins: Roey (~Roey@user/Roey)
[22:55:49] *** Quits: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39) (Client Quit)
[22:56:06] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[22:56:08] <Wooble> lola: what's the question? (You could have just referenced the line number instead of pasting the lines anyway)
[22:56:10] *** Joins: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39)
[22:56:24] *** Joins: abeyer (~abeyer@23.252.60.124)
[22:56:45] <SnoopJ> lola, what Wooble said: which part of that is the question?
[22:56:59] *** Quits: obsdeezy (~obsdeezy@2607:fb90:91ac:41f7:b9a7:a44d:abf3:ea39) (Client Quit)
[22:57:28] *** Parts: abeyer (~abeyer@23.252.60.124) ()
[22:57:40] <lola> anyway:
[22:57:40] <lola> "https://git.replicant.us/contrib/irelativism/wiki-migration-scripts/tree/redmine2git.py?h=main, in def git_commit, in # Git commands section on the line 168 "'--author="{author} <{author}@redmine.replicant.us>\"'.format(". Why is the "\" for? dont really understand, why is it necessary? Cheers Irelativism"
[22:58:03] <lola> SnoopJ: some patience from your part would probably help ;) thanks
[22:58:30] <lola> but here you go follow that, aka the message I was originally writing :)
[22:58:52] <Wooble> lola: that's easy, the \ does literally nothing.
[22:58:56] <SnoopJ> it's escaping the quote there but isn't necessary, it could be omitted
[22:59:04] <SnoopJ> '\"' and '"' are the same string
[22:59:18] <lola> why is it there then?
[22:59:20] *** Joins: Elodin (~weechat@user/elodin)
[22:59:25] <SnoopJ> You would have to ask the author of that code
[22:59:31] <lola> and what if the is one in the begining and one at the end
[22:59:59] <lola> so "\"code "\"
[23:00:12] <lola>  * so "\\"code "\\"
[23:00:23] <Wooble> lola: my theory is they whole string was in double quotes before so they needed the escape the ", then they switched to single quotes and only unescaped one.
[23:00:42] <lola> is that any specific python quonotation
[23:00:47] <phy1729> they probably didn't realize that the shell removes the quotes and they aren't necessary (assuming you aren't sending the array through a shell
[23:00:48] <Wooble> lola: but I don't know how to conveniently do a git blame on this thing like in github
[23:00:57] <lola> Wooble: that was indeed something that happend
[23:01:01] *** Joins: kmh (~kmh@2a00:6020:5004:6800:5d99:6627:d23c:6f74)
[23:01:04] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[23:01:06] <lola> we were using " before '
[23:01:16] <SnoopJ> then whoever wrote that line probably missed the escape on the closing quote
[23:01:23] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[23:01:29] <lola> Wooble: we also dont use github only cigt
[23:01:38] <lola> *cgit
[23:01:59] <Wooble> yes, I know. that's what makes it inconvenient to find the change. :P
[23:02:07] <Deneb> had a look at that asyncio link, but I am still uncertain as to what it is meant to do. Will have a play with it though. Thanks.
[23:02:24] <lola> Wooble: "     command_args.append(
[23:02:24] <lola> -        "--author=\"{author} <{author}@redmine.replicant.us>\"".format(
[23:02:24] <lola> +        '--author="{author} <{author}@redmine.replicant.us>"'.format(
[23:02:24] <lola>          author=commit_author))"
[23:02:34] <lola> this was the patch for that in specific
[23:02:37] <SnoopJ> please don't paste multiple lines in the channel, use https://bpa.st/
[23:03:18] <lola> I know about bpa.st thanks no need here I would say :) given its only 3 lines
[23:03:30] *** Joins: hqdruxn08_ (~hqdruxn08@user/hqdruxn08)
[23:03:32] <nedbat> lola: two lines is too many :)
[23:03:34] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[23:03:41] <lola> sounds good
[23:04:06] <lola> I will use the pastebin for 2 lines and over
[23:04:17] *** Quits: luva (~luva@37.120.197.37) (Ping timeout: 240 seconds)
[23:04:41] <Deneb> is it possible to attach an event to a function, have a condition that triggers and event and then do something when that event is triggered?
[23:04:42] *** Quits: hqdruxn08 (~hqdruxn08@user/hqdruxn08) (Ping timeout: 256 seconds)
[23:04:57] <nedbat> Deneb: what kinds of event are you thinking of?
[23:04:58] *** Quits: mossman93 (~quassel@user/mossman93) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:05:12] <lola> https://bpa.st/4J3A
[23:05:26] <lola> Wooble: that was indded what happend
[23:05:28] *** Joins: water_27300935_ (~xe@182.90.96.220)
[23:05:30] *** Bitflux is now known as Byteflux
[23:05:32] *** Joins: luva (~luva@45.141.152.62)
[23:05:45] <lola> my question is why would \ be necessary for doublequotes?
[23:05:51] <lola> Thanks for feedback
[23:06:09] *** Joins: abeyer (~abeyer@23.252.60.124)
[23:06:10] <lola> I trully appreciate time and energy trying to help me out. Cheers
[23:06:18] <nedbat> lola: on line 5, it's because the double quote is inside a double-quoted string
[23:06:19] <SnoopJ> It would be necessary if the string were opened using double quotes. E.g. "\""
[23:06:32] *** Joins: Klinda (~superleag@user/klinda)
[23:06:47] *** Joins: causasui (~causasui@2001:558:6007:9e:3410:6aad:1bd3:95fd)
[23:06:58] <Deneb> nedbat: well, since the serial read function I have added to the program requires some user action before data is generated, I was wondering whether it is possible to trigger an action such as call another function or update a GUI control when the condition is triggered.
[23:07:00] <nedbat> lola: btw, i think you need quotes around {} on line 10, no?
[23:07:07] <lola> ok nedbat you cant put doublequotes inside double quotes?
[23:07:16] <SnoopJ> You can, if you escape them.
[23:07:18] <Wooble> as a bonus you probably don't actually need any quotes at all there.
[23:07:18] <nedbat> lola: nope, the next double quote ends the string
[23:07:32] <nedbat> Wooble: (depending on what this is used for)
[23:07:36] <Wooble> (although I don't use the sh module)
[23:07:41] <lola> ohh I see thanks
[23:08:01] <Wooble> nedbat: I think it's being passed to a subprocess, but sh might do something funky
[23:08:12] <BrenBarn> Deneb: but what is "the condition"
[23:08:14] <lola> thanks SnoopJ and Wooble and nedbat
[23:08:22] <lola> I really appreciated
[23:08:34] <lola> why you say I dont need those quotes
[23:08:40] *** Quits: ominionx (~ominionx@172.58.136.5) (Ping timeout: 256 seconds)
[23:08:45] *** Quits: thelounge0617 (5e865860@67.205.143.82) (Quit: The Lounge - https://thelounge.chat)
[23:08:51] <lola> or why I need them for date and/or message sectio?
[23:08:52] *** Joins: c4017w_ (~c4017@209.52.68.8)
[23:08:54] <lola> *section
[23:09:10] <lola> line 8 and 10 that is
[23:09:24] <Deneb> ok, its like this. User presses button on instrument. This generates serial data. The function detects serial data is received, collects it and passes it to the function that processes it and displays the graph.
[23:10:23] *** Joins: djapo (~archangel@user/djapo)
[23:10:27] <Deneb> as I mentioned, I have this process working synchronously, but the asynchronous nature of the GUI causes the program to run on and not wait for the data.
[23:11:03] <nedbat> lola: whether you need the quotes around the values or not depends on what you will do with this list.
[23:11:26] <nedbat> Deneb: i don't know what the options are for triggering on an event like that
[23:11:45] *** Joins: JordiGH (~jordi@user/jordigh)
[23:11:51] <lola> nedbathttps://git.replicant.us/contrib/irelativism/wiki-migration-scripts/tree/redmine2git.py?h=main
[23:12:20] <lola> we use it to commit the wiki article when exporting
[23:12:38] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[23:13:01] <lola> basically we are creating a git repository with all wiki articles from redmine instances without losing either history or parent to child structure
[23:13:11] *** Joins: structoha (~structoha@gateway/tor-sasl/structoha)
[23:13:16] <nedbat> lola: i suggest putting double-quotes around {} on line 170
[23:13:22] *** Joins: ensyde (~ensyde@2600:1700:2050:1040:ac63:f3f7:89ad:2997)
[23:14:32] <water_27300935_> Can I modify newline separate char using 'os.linesep = '\a', or read only?
[23:14:39] <Deneb> well the function that receives the serial data works. In command line mode it will sit there waiting until it receives a byte and then collect any subsequently transmitted bytes into a bytearray. I can then display the bytearray or do something with it. In the GUI version I click the 'Capture' button. I then display a message to the user to hit the Transmit button on the intrument. The next step is to start the wait loop, but in GUI this doesn't
[23:14:39] <Deneb> happen. It just runs on and an empty bytearray is passed to the next function to process.
[23:14:48] <phy1729> Ideally a shell wouldn't be involved at all. Double quoting breaks if there's a " or $foo or $(echo foo) in commit_message if it goes through a shell
[23:14:49] <SnoopJ> water_27300935_, you *can* change it, but you shouldn't.
[23:15:38] *** Quits: hlauk (~hlauk@176.33.108.116) (Quit: Leaving)
[23:15:45] <lola> phy1729: doesnt "go through a shell" for say put we are using sh module so yeah
[23:16:07] <phy1729> then you don't want the quotes because there's nothing to strip the quotes
[23:16:10] <lola>  i suggest putting double-quotes around {} on line 170 for what reason?
[23:16:35] <Deneb> I am trying to figure out how on earth to make the GUI program wait. In JavaScript you have event handlers so you can wait for a mouse click or something else and you can generate custom events.
[23:16:36] <nedbat> lola: i think this code won't work properly without them if the commit message has a space in it.
[23:17:15] <lola> I was getting indeed a error regarding author in commit section
[23:17:24] <lola> thanks for finding the bug
[23:17:30] <lola> I trully apreciated
[23:17:35] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[23:17:55] <lola> do you wish me to include copyright header for your suggestion? or you don really care?
[23:18:00] <nedbat> lola: no need
[23:18:01] *** Quits: jpic (~jpic@82.142.23.238) (Remote host closed the connection)
[23:18:11] <nedbat> lola: i don't claim copyright on a double-quote :)
[23:18:13] <lola> Cheers I understand know
[23:18:14] *** Quits: pro_z_ (~pro_z@37.214.55.61) (Ping timeout: 268 seconds)
[23:18:15] <lola> thanks
[23:18:19] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[23:18:30] * lola will be back another time
[23:18:37] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[23:19:47] *** Joins: lseactuary (~lseactuar@2601:646:202:2f10:acb4:d8f8:9ef9:f057)
[23:20:33] <lseactuary> if i have this list: ['ABCZ173', 'ABCZ423', 'ABCZ498', 'ABCZ6X0', 'ABCZ6X1', 'ABCZ6X2', 'ABCZ6X4', 'ABCZ6X5', 'ABCZ6X6']
[23:20:35] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[23:20:48] <lseactuary> can i use numpy or something to extract the sequential values vs non-sequential values
[23:20:51] <lseactuary> the list is ordered
[23:21:18] *** Joins: vsantana1 (~Thunderbi@fttx-177136149223.usr.predialnet.com.br)
[23:21:56] <lseactuary> sequential would be ['ABCZ6X1', 'ABCZ6X2'] and ['ABCZ6X4', 'ABCZ6X5', 'ABCZ6X6']
[23:21:59] <lseactuary> others are not
[23:22:00] <esaym> it there any decent forum software written in python? Like php have phpbb, anything like that in python?
[23:22:16] *** Quits: novapy (~chronos@c-68-62-193-246.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[23:22:17] <Wooble> reddit?
[23:22:19] <esaym> (asking before  I install phpbb lol)
[23:22:21] *** Joins: ominionx (~ominionx@172.58.136.5)
[23:22:24] <Ingvix> using floor division vs. conversion to string and len() to get number of digits in an integer?
[23:22:27] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[23:22:40] *** Joins: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com)
[23:23:10] *** Quits: vsantana (~Thunderbi@2804:214:829e:7466:1533:c6ff:f7d9:b478) (Ping timeout: 268 seconds)
[23:23:29] <Wooble> (or old reddit, anyway; r2 isn't maintained anymore and I think they may have stopped using python on the prod site)
[23:24:09] <Wooble> esaym: flaskbb is probably the closest to phpbb in design
[23:24:11] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[23:25:00] *** Quits: structoha (~structoha@gateway/tor-sasl/structoha) (Ping timeout: 276 seconds)
[23:25:06] *** Quits: duuude (~user@user/duuude) (Ping timeout: 256 seconds)
[23:25:07] *** Joins: vsantana (~Thunderbi@ec2-54-159-73-164.compute-1.amazonaws.com)
[23:25:42] <lola> raddle maybe?
[23:25:42] <water_27300935_> SnoopJ: Although I use 'os.linesep = '\n', and return '\n' on Windows platform, but still use '\r\n' for newline when I write text file.
[23:26:01] *** Quits: vsantana1 (~Thunderbi@fttx-177136149223.usr.predialnet.com.br) (Ping timeout: 256 seconds)
[23:26:29] <Ingvix> conversion to string is easier to write than iterating with floor division but is there any reason I should still consider keeping it all integers? I'll be doing this numerous times in my code
[23:26:48] <lola> https://raddle.me/wiki
[23:26:57] *** Quits: esther (~esther@199.10.64.118) (Ping timeout: 240 seconds)
[23:27:11] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[23:27:20] <phy1729> huh timeit gives about the same time for len(str(1729)) vs import math; math.floor(math.log(1729, 10))+1   -  the timeit for import math
[23:27:32] *** Joins: duuude (~user@user/duuude)
[23:27:40] <SnoopJ> water_27300935_, you can pass the `newline` argument to open() if you want to control what "\n" is translated to during output (which is os.linesep if you don't specify it)
[23:27:48] <phy1729> ah I can setup='import math'
[23:27:59] <SnoopJ> water_27300935_, but you won't break anybody else's code that way. Changing the os module might.
[23:28:25] <phy1729> So .98 the str way, .88 the log way
[23:29:04] *** Quits: argument (~0ptions@user/argument) (Ping timeout: 256 seconds)
[23:29:40] <phy1729> Huh log10 is even faster
[23:30:14] *** Quits: tomg (~tomg@user/tomg) (Remote host closed the connection)
[23:30:29] *** Quits: XV8 (~XV8@2601:5cb:c001:50:f81d:9eae:67e3:1b35) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:30:53] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Remote host closed the connection)
[23:31:04] <foo> def save_images(self, max_images: int = FINDME_MAX_IMAGES) -> list[str]: is throwing TypeError: 'type' object is not subscriptable . Anyone see something obvious here?
[23:31:16] <foo> Oh, this is python 3.9 -> 3.6
[23:31:22] <foo> That might cause whatever issue this is.
[23:31:36] <Wooble> foo: yes, you can't do that in older pythons
[23:31:40] <phy1729> from typing import List and use List[str] prior to 3.8 iirc
[23:32:11] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[23:32:22] <SnoopJ> in 3.8 as well, it's new in 3.9 I believe
[23:32:46] *** Joins: tomg (~tomg@user/tomg)
[23:32:54] <foo> phy1729 + Wooble + SnoopJ - thank you, I really got to get off 3.6 on this project.
[23:33:05] <sco1> Yes: https://www.python.org/dev/peps/pep-0585/
[23:33:21] <phy1729> Yep 3.9 is correct
[23:33:36] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[23:33:41] *** Quits: lseactuary (~lseactuar@2601:646:202:2f10:acb4:d8f8:9ef9:f057) (Quit: Client closed)
[23:35:18] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[23:36:07] *** Quits: d1cor (~diego@179.63.242.120) (Ping timeout: 268 seconds)
[23:37:40] *** Joins: whaley (~whaley@cpe-76-182-165-20.sc.res.rr.com)
[23:38:55] *** Joins: vicfred (~vicfred@user/vicfred)
[23:40:47] *** Joins: lseactuary (~lseactuar@2601:646:202:2f10:acb4:d8f8:9ef9:f057)
[23:41:12] <SnoopJ> Does PyInstaller only bundle bytecode for the scripts you point directly at? I want to include a dependency, but not ship .py files for it
[23:41:18] *** Parts: water_27300935_ (~xe@182.90.96.220) (WeeChat 3.4)
[23:42:17] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[23:42:32] *** Quits: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) (Quit: Leaving.)
[23:42:36] *** Joins: y04nn (~y04nn@92.223.89.196)
[23:42:44] *** Quits: Deneb (~johnch@23.143.9.51.dyn.plus.net) (Quit: Leaving)
[23:42:56] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[23:43:56] *** Joins: Telvana (~capo@user/telvana)
[23:43:59] *** Quits: codificat (~pep@126.red-79-158-54.dynamicip.rima-tde.net) (Quit: leaving)
[23:44:43] *** Quits: lseactuary (~lseactuar@2601:646:202:2f10:acb4:d8f8:9ef9:f057) (Client Quit)
[23:46:00] *** Joins: lseactuary (~lseactuar@2601:646:202:2f10:acb4:d8f8:9ef9:f057)
[23:46:25] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[23:47:28] *** Joins: ntropy (~ntropy@90-227-49-94-no88.tbcn.telia.com)
[23:47:46] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[23:48:28] <lseactuary> anyone know how i test sequential values?
[23:48:32] <lseactuary> i thought there would be some numpy package
[23:49:07] *** Quits: Valeria (~Valeria@user/valeria) (Quit: Textual IRC Client: www.textualapp.com)
[23:49:58] *** Joins: ekathva (~ekathva@2001:999:51:be01:2799:25be:c992:870)
[23:50:34] <dodo> test?
[23:51:42] <SnoopJ> lseactuary, I would probably approach that problem by mapping the strings to a list of (stringpart, int(numpart)) and then look for contiguous runs over that
[23:52:17] <SnoopJ> there's nothing in numpy that will just do what you want right out of the box, though.
[23:52:25] <lseactuary> thats how i currently do it but because the string can have integers + strings it screws up
[23:52:36] <lseactuary> e.g. aa1 and aa2 are sequential as well as aaa and aab for example
[23:52:59] *** Quits: Fiji_ (~Fiji@user/fiji) (Quit: Leaving)
[23:53:01] <SnoopJ> perhaps if the original question had included those examples, that would have been more clear
[23:53:29] <SnoopJ> I would probably still approach it that way, but make the numerical part None in cases where there isn't one
[23:53:54] *** Parts: akk (~akk@75-161-95-245.albq.qwest.net) (+++)
[23:53:57] *** Quits: ntropy (~ntropy@90-227-49-94-no88.tbcn.telia.com) (Ping timeout: 240 seconds)
[23:54:41] <lseactuary> got ya, will try
[23:54:44] <lseactuary> thanks!
[23:55:09] *** Joins: ntropy (~ntropy@146.70.21.20)
[23:55:22] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Read error: Connection reset by peer)
[23:55:37] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[23:56:41] *** Joins: raxor2k (~raxor2k@78.158.252.35)
[23:57:06] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[23:57:09] <SnoopJ> if the alpha part of it is always ASCII you could also store ord(lastchar) in the numerical portion and re-use the code that checks for contiguous numerical runs, but this feels like a hack. I'd rather just write a separate branch for alpha-only entries
[23:57:11] *** Quits: lseactuary (~lseactuar@2601:646:202:2f10:acb4:d8f8:9ef9:f057) (Quit: Client closed)
[23:57:47] *** Joins: lseactuary (~lseactuar@2601:646:202:2f10:acb4:d8f8:9ef9:f057)
[23:57:54] <lseactuary> got ya
[23:59:03] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Remote host closed the connection)
[23:59:22] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
