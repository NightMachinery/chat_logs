[00:00:23] <geekosaur> the Cabal library is not cabal-install
[00:01:09] <geekosaur> also why ghc 8.6? 8.10.7 has native M1 support
[00:01:42] <geekosaur> (confusingly, the cabal-install package installs an executable named "cabal")
[00:02:10] <backes> because I need to run a program that requires 8.6 and it throws errors on 8.10
[00:02:28] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[00:02:29] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[00:03:10] <backes> it's part of the build process for an experimental OS and there is no possibility to fix it... So I'm just trying to install the recommended toolchain on macos
[00:03:47] <backes> however brew doesn't bundle old cabal-install packages, so I had to download and install it myself
[00:04:26] *** Joins: yauhsien (~yauhsien@61-231-39-29.dynamic-ip.hinet.net)
[00:04:26] <byorgey> backes: the executable for the cabal-instal package is named 'cabal'
[00:04:55] *** Quits: sshine (~simon@hubris.eta.solutions) (Quit: 再见)
[00:05:07] <geekosaur> newer cabal-install should work with older ghc, but there would still be a problem because brewwould install a native one which would expect 8.10.7 and native libraries instead of 8.6 and rosetta
[00:05:16] <backes> still doesn't work. Can't find the file. I don't know where it's located, as $HOME/.cabal/bin is empty but it shouldn't according to the Readme
[00:05:54] <backes> geekosaur: yes, that's why I wanted to install cabal myself instead of messing with brew
[00:08:28] <sm> the binary is "cabal"
[00:08:55] <geekosaur> but where did it land, if .cabal/bin is empty?
[00:09:10] <sm> if stilll missing.. how did you install it ?
[00:09:16] <geekosaur> that I couldn't guess, too many weird variables here
[00:09:29] <geekosaur> " from https://www.haskell.org/cabal/download.html with the included readme"
[00:09:57] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 240 seconds)
[00:10:47] * sm imagines a huge flowchart for resolving these install/uninstall issues, and an automated bot
[00:10:52] *** Joins: michalz (~michalz@185.246.204.87)
[00:11:11] *** Joins: simon_ (~simon@zhen.eta.solutions)
[00:11:36] <backes> I downloaded the tar, then followed the steps under "Installing as a user" which says that it installs cabal into $HOME/.cabal on Unix
[00:11:39] *** simon_ is now known as sshine
[00:11:39] *** Quits: yauhsien (~yauhsien@61-231-39-29.dynamic-ip.hinet.net) (Ping timeout: 250 seconds)
[00:11:45] <backes> I didn't get an error, but there's no binary at that location
[00:14:25] <sm> which tar, backes ?
[00:14:52] <backes> https://downloads.haskell.org/~cabal/Cabal-2.4.0.1/Cabal-2.4.0.1.tar.gz 
[00:15:22] *** Quits: alp (~alp@user/alp) (Ping timeout: 260 seconds)
[00:15:25] *** Joins: Pickchea (~private@user/pickchea)
[00:15:26] <backes> the one that was listed as compatible with GHC 8.6.5 . I don't know if this is correct
[00:15:47] <backes> I just want to get this build script running and then forget about dependencies forever
[00:17:02] <sm> not correct, that's a source package for the Cabal library
[00:18:11] <sm> do you have any version of cabal
[00:18:11] <sm> or stack installed ?
[00:18:19] *** Quits: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo) (Remote host closed the connection)
[00:18:34] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[00:18:39] <backes> I had the one from brew installed before, but I removed it
[00:18:53] <backes> so no, I don't have cabal installed
[00:19:00] *** Joins: alx741 (~alx741@157.100.197.240)
[00:21:10] <sm> there are probably many ways through the maze, but hard to describe one reliably without testing. Here's one I think would be effective: install multipass (easy ubuntu vm for your mac) and build in there, that would insulate you from the current intel vs arm complications
[00:21:47] <sm> what's your idea geekosaur
[00:22:22] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[00:22:29] <backes> I thought about a container, but they also all run on aarch64 except if I use a proper virtual machine. However virtualbox doesn't support the M1 as host...
[00:22:48] <geekosaur> that sounds sensible to me, since pretty much anything else invokes the whole m1 mess and a native built cabal or stack will force native libs etc.
[00:23:27] <backes> does ghc 8.6 run on arm linux?
[00:23:47] <sm> multipass runs.. an arm ubuntu, that's right. Still I'm assuming things would just work. But...
[00:24:36] <sm> alternative: as a stack user I'd probably use that - the one from fpcomplete's site which I think is still intel (not the one from ghcup)
[00:26:39] <sm> actually, you can force brew to install intel binaries by running it in rosetta. I forget exactly how, arch command I think. But I wouldn't really recommend it, having two brew worlds installed is confusing (even though they use different paths)
[00:27:05] <backes> sm: that's what I did to install ghc 8.6.5 but I'm now stuck at the second step, cabal
[00:27:56] <backes> I'm not sure if I can use a container, since I need qemu for virtualization and also USB passthrough to flash an embedded device. That might also be a hassle to get working
[00:28:36] <sm> isn't "Binary download for macOS (x86-64)" the tarball you want ?
[00:29:09] <sm> on https://www.haskell.org/cabal/download.html
[00:29:16] *** Joins: jgeerds (~jgeerds@d53600c5.access.ecotel.net)
[00:29:18] *** Quits: zmt00 (~zmt00@user/zmt00) (Quit: Leaving)
[00:29:32] <backes> can I use an arbitrary cabal version with ghc 8.6.5? I thought I'd need to match the versions somehow
[00:29:59] <sm> it looks like an intel binary and will work with ghc 8.6 just fine
[00:30:25] <backes> I noticed that ghc is not backwards compatible (ghc 8.10 doesn't work on this ghc 8.6.5 code) so I thought that now I need to be more carefull when installing dependencies
[00:30:27] <sm> cabal supports "all" ghc versions (generally speaking) 
[00:30:48] <backes> okay, I'll give it a try. Thanks
[00:30:53] *** Joins: pavonia (~user@user/siracusa)
[00:30:57] <sm> it will install deps specific to the ghc version used
[00:31:07] *** Joins: zmt00 (~zmt00@user/zmt00)
[00:32:15] <sm> stack is a little better for replicating old builds, but yes give it a try
[00:32:33] <geekosaur> a Cabal library version comes with ghc and matches it. the cabal-install tool works with any version
[00:33:52] <geekosaur> and a newer Cabal library will work with an older ghc although I think the reverse is not always true
[00:34:35] <backes> that seems to work, I'm now installing cabal dependencies and get less and less errors! Thanks 
[00:34:37] *** Quits: _ht (~quassel@231-169-21-31.ftth.glasoperator.nl) (Remote host closed the connection)
[00:34:45] <backes> by "that", I mean the x86 binary of cabal for macos
[00:40:37] *** Joins: alx741 (~alx741@157.100.197.240)
[00:42:17] *** Joins: bahamas (~lucian@84.232.140.52)
[00:43:24] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[00:46:25] <backes> I now get errors about parsec, even though I installed parsec3 https://paste.tomsmeding.com/zXl7E7aN . The ubuntu 20.04 instructions say to install libghc-parsec3-dev , I installed parsec3 : https://hackage.haskell.org/package/parsec3 with cabal
[00:46:36] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 240 seconds)
[00:59:39] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 256 seconds)
[00:59:58] *** Joins: alx741 (~alx741@157.100.197.240)
[01:00:46] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Read error: Connection reset by peer)
[01:01:20] *** Quits: xff0x (~xff0x@2001:1a81:5290:f100:89ec:887a:1b64:e62f) (Ping timeout: 252 seconds)
[01:02:12] *** Joins: neurocyte0917090 (~neurocyte@IP-185238252134.dynamic.medianet-world.de)
[01:02:12] *** Quits: neurocyte0917090 (~neurocyte@IP-185238252134.dynamic.medianet-world.de) (Changing host)
[01:02:12] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[01:02:15] *** Joins: xff0x (~xff0x@2001:1a81:5290:f100:b98a:22f8:9c9c:82d0)
[01:02:25] <geekosaur> that'sa missing dependency in the cabal file
[01:03:17] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[01:07:48] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 240 seconds)
[01:08:21] *** Quits: takuan (~takuan@178-116-218-225.access.telenet.be) (Remote host closed the connection)
[01:09:44] *** Joins: cynomys (~cynomys@user/cynomys)
[01:10:51] *** Quits: wroathe (~wroathe@user/wroathe) (Quit: leaving)
[01:10:59] *** Joins: wroathe (~wroathe@user/wroathe)
[01:12:11] *** Quits: wroathe (~wroathe@user/wroathe) (Client Quit)
[01:12:23] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[01:13:18] <backes> it compiles haskell from a shell script, which calls ghc directly: https://github.com/BarrelfishOS/barrelfish/blob/master/hake/hake.sh#L224 and it doesn't include parsec as -package . However I'm the only one with this problem, so I think it's my setup and not the install script
[01:13:48] *** Quits: vorpuni (~pvorp@2001:861:3881:c690:fccd:4785:fec8:6e0c) (Quit: bye)
[01:14:33] <backes> adding it to the script as "-package parsec" didn't solve the problem
[01:16:39] <Unicorn_Princess> > foldl (+) [a,b,c]
[01:16:41] <lambdabot>  error:
[01:16:41] <lambdabot>      • Could not deduce (Num [Expr]) arising from a use of ‘+’
[01:16:41] <lambdabot>        from the context: Foldable t
[01:18:46] <geekosaur> > foldl (+) (0::Expr) [a,b,c]
[01:18:48] <lambdabot>  0 + a + b + c
[01:18:59] <Unicorn_Princess> ah, ofc. i misremembered that foldl demo as being without an accumulator
[01:19:30] <geekosaur> sure it wans't foldl1?
[01:20:13] *** Joins: alx741 (~alx741@157.100.197.240)
[01:20:15] <Unicorn_Princess> oh yeah yeah. the confusion is entirely of my own making
[01:20:35] <Unicorn_Princess> but it has been cleared up
[01:20:48] *** Joins: wroathe (~wroathe@96-88-30-181-static.hfc.comcastbusiness.net)
[01:20:48] *** Quits: wroathe (~wroathe@96-88-30-181-static.hfc.comcastbusiness.net) (Changing host)
[01:20:48] *** Joins: wroathe (~wroathe@user/wroathe)
[01:20:52] <Unicorn_Princess> (by checking history and seeing the accumulator there)
[01:21:40] <Unicorn_Princess> anyway, as you were. turns out one can also pm lambdabot and avoid spamming this channel for experiments :)
[01:22:04] <geekosaur> yep, I keep query windows open to both lambdabot and yahb
[01:26:52] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[01:27:15] *** Joins: little_mac (~little_ma@2601:410:4300:3ce0:e0b0:8aea:9541:b1dc)
[01:31:22] *** Joins: agumonke` (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7)
[01:33:04] *** Quits: agumonkey (~user@88.163.231.79) (Ping timeout: 272 seconds)
[01:36:35] *** Joins: komikat (~komikat@183.82.153.11)
[01:37:26] *** Joins: rond_ (~rond_@90.251.84.153)
[01:38:09] *** Quits: wroathe (~wroathe@user/wroathe) (Quit: Lost terminal)
[01:38:52] *** Quits: cynomys (~cynomys@user/cynomys) (Quit: Lost terminal)
[01:39:27] *** Joins: wroathe (~wroathe@user/wroathe)
[01:40:57] *** Quits: komikat (~komikat@183.82.153.11) (Ping timeout: 240 seconds)
[01:43:25] *** Joins: alx741 (~alx741@157.100.197.240)
[01:43:33] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[01:45:58] *** Quits: Kaiepi (~Kaiepi@156.34.47.253) (Remote host closed the connection)
[01:46:14] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[01:46:18] *** Joins: Kaiepi (~Kaiepi@156.34.47.253)
[01:46:56] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:e14b:875c:3570:34de) (Quit: WeeChat 3.3)
[01:47:44] <backes> I tried ghc-pkg expose parsec but I still get the error that the package is hidden. Is there some other way to expose a package?
[01:47:57] *** Joins: shriekingnoise (~shrieking@201.231.16.156)
[01:50:01] <geekosaur> you may need to either reinstall parsec with cabal v1-install or use cabal install --lib
[01:50:20] <backes> I used cabal install --lib for all the dependencies 
[01:50:27] <backes> they all worked so far, except parsec
[01:50:38] <backes> what is cabal v1-install ? 
[01:51:24] <geekosaur> it makes cabal behave the old way, inparticular installing things in the old user package database instead of internal to cabal (cabal install) or an environment file (cabal install --lib)
[01:51:47] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[01:51:57] <geekosaur> it's not recommended becauseit can make messes if you have two versions of the same library installed; ghc is not smart enough to pick the version you need
[01:52:22] <geekosaur> this is pretty much why modern cabal and stack exist
[01:53:01] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:49a5:3740:d7ac:cf6) (Remote host closed the connection)
[01:54:05] <backes> for some reason this didn't help. That doesn't make any sense. I tried adding it with `-package parsec3` to the ghc command, using --lib, exposing it with ghc-pkg, and now using v1-install. Is it possible that I have the wrong version of the package? 
[01:56:14] *** Joins: `2jt (~jtomas@210.red-88-24-179.staticip.rima-tde.net)
[01:57:28] *** Quits: ChaiTRex (~ChaiTRex@user/chaitrex) (Remote host closed the connection)
[01:57:46] *** Joins: Erutuon (~Erutuon@user/erutuon)
[01:57:52] *** Joins: ChaiTRex (~ChaiTRex@user/chaitrex)
[01:59:27] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Quit: Leaving)
[02:02:17] *** Quits: wroathe (~wroathe@user/wroathe) (Quit: Lost terminal)
[02:02:32] *** Joins: alx741 (~alx741@157.100.197.240)
[02:04:12] <geekosaur> unlikely
[02:04:33] <geekosaur> it knows it'spart of the installed parsec3 package; I don't know why it claims it to be hidden
[02:04:46] <geekosaur> we're getting outside what I know of cabal, sadly
[02:05:21] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[02:06:12] *** Joins: wroathe (~wroathe@96-88-30-181-static.hfc.comcastbusiness.net)
[02:06:12] *** Quits: wroathe (~wroathe@96-88-30-181-static.hfc.comcastbusiness.net) (Changing host)
[02:06:12] *** Joins: wroathe (~wroathe@user/wroathe)
[02:07:23] *** Quits: wroathe (~wroathe@user/wroathe) (Client Quit)
[02:08:58] <backes> thanks for your help 
[02:09:45] *** Joins: machinedgod (~machinedg@24.105.81.50)
[02:09:46] <geekosaur> wonder if sclv or some other cabal expert is around today
[02:10:22] <geekosaur> you might also ask in #haskage since that'swherethecabal folks hang out
[02:10:33] <geekosaur> *that's where the cabal
[02:10:58] *** Joins: Guest66 (~Guest66@vmi275462.contaboserver.net)
[02:14:27] <geekosaur> er, #hackage
[02:14:34] <geekosaur> what is with my typoes today
[02:16:20] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[02:17:51] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[02:18:20] <sclv> backes: are you sure you shouldn’t add -package parsec3 to the script?
[02:18:32] <sclv> Not just parsec as such?
[02:19:02] <backes> I also tried that but it didn't help
[02:19:37] <sclv> have the script run ghc-pkg list and see what it dumps out?
[02:19:44] <backes> that's a good idea
[02:20:39] <backes> damn, it contains parsec3 ... 
[02:20:44] <sclv> also is that call to ghc what fails?
[02:20:52] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[02:20:56] <sclv> It looks like its failing building other later stuff
[02:21:24] <backes> the file linked above is the only script I call for now
[02:21:48] <backes> maybe it calls another, I'll dig a bit around
[02:21:53] *** Joins: alx741 (~alx741@181.199.42.143)
[02:23:09] <sclv> its last line is to call make on a bunch of other stuff
[02:24:15] <geekosaur> I'm worried about both that and that ghc-pkg can't be used to list stuff in the environment (but then I don't know if that can be hidden either)
[02:25:13] <sclv> hake generates make rules. That script builds hake, runs it, then runs make rules generated by it which i assume build more haskell
[02:25:31] <backes> what are all the options to build haskell code besides calling "ghc" ? I found another file https://github.com/BarrelfishOS/barrelfish/blob/master/hake/Hakefile but also adding `-package parsec3` to that didn't help
[02:26:29] <geekosaur> backes, as sclv just said, hake is generating a Makefile. you might need to edit that before running it. or edit hake to add the -package parameter to the generated Makefile
[02:27:34] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[02:27:58] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[02:28:45] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d) (Remote host closed the connection)
[02:30:33] *** Joins: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com)
[02:35:56] *** Quits: Guest66 (~Guest66@vmi275462.contaboserver.net) (Quit: Client closed)
[02:38:12] *** Joins: irishman (~vshev4enk@178.151.117.243)
[02:38:26] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[02:39:15] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[02:39:55] *** Quits: stiell_ (~stiell@gateway/tor-sasl/stiell) (Ping timeout: 240 seconds)
[02:40:32] *** Joins: stiell_ (~stiell@gateway/tor-sasl/stiell)
[02:40:40] *** Quits: __monty__ (~toonn@user/toonn) (Quit: leaving)
[02:41:06] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[02:41:50] *** Quits: polezaivsani (~polezaivs@orangeshoelaces.net) (Ping timeout: 250 seconds)
[02:42:31] *** Quits: irishman (~vshev4enk@178.151.117.243) (Ping timeout: 256 seconds)
[02:44:48] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d)
[02:45:19] *** Joins: alx741 (~alx741@181.199.42.143)
[02:45:39] *** Quits: totte (~totte@h-82-196-112-155.A166.priv.bahnhof.se) (Ping timeout: 268 seconds)
[02:47:12] <backes> I can't get this to work. The makefile has the flags that I provide in the shellscripts (and a lot more stuff). I'll give it a try in a docker container tomorrow. Thanks 
[02:49:56] *** Joins: miremeister (uid387155@id-387155.uxbridge.irccloud.com)
[02:51:53] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[02:53:25] *** Quits: michalz (~michalz@185.246.204.87) (Remote host closed the connection)
[02:53:26] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:49a5:3740:d7ac:cf6)
[02:54:37] *** Quits: backes (~backes@85.195.206.214) (Quit: leaving)
[02:54:56] *** Quits: ccntrq (~Thunderbi@imx92-1-78-204-187-6.fbx.proxad.net) (Remote host closed the connection)
[02:56:28] *** Quits: steerio (~steerio@aviv.kinneret.de) (Remote host closed the connection)
[02:56:41] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: Textual IRC Client: www.textualapp.com)
[02:57:08] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[02:57:08] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[02:57:08] *** Joins: wroathe (~wroathe@user/wroathe)
[02:57:48] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:49a5:3740:d7ac:cf6) (Ping timeout: 240 seconds)
[02:59:42] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[02:59:55] *** Joins: lavaman (~lavaman@98.38.249.169)
[03:02:22] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 272 seconds)
[03:03:53] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[03:03:59] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d) (Ping timeout: 252 seconds)
[03:04:35] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[03:08:45] *** Joins: alx741 (~alx741@181.199.42.143)
[03:09:35] *** Joins: totte (~totte@h-82-196-112-155.A166.priv.bahnhof.se)
[03:09:56] <sm> backes: is there anywhere in these interesting build scripts that specifies the versions of all the haskell packages ? If not, it's not a repeatable script, and not surprising it doesn't work 3 years later
[03:10:27] *** miremeister is now known as levi
[03:10:51] *** Quits: rond_ (~rond_@90.251.84.153) (Quit: Client closed)
[03:11:14] *** levi is now known as zoe
[03:11:31] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[03:12:05] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Remote host closed the connection)
[03:12:12] <sm> (I looked but didn't find it)
[03:12:14] *** Joins: alx741 (~alx741@157.100.197.240)
[03:12:43] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[03:13:57] *** zoe is now known as levi__
[03:14:48] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[03:15:09] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:15:22] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[03:16:10] <sm> this is  a hard enough task I would do it on an intel machine/vps first
[03:16:33] <sm> (as you already discovered)
[03:16:53] *** Parts: levi__ (uid387155@id-387155.uxbridge.irccloud.com) ()
[03:17:24] *** Joins: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com)
[03:18:35] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[03:18:38] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Client Quit)
[03:20:51] <sm> oops, talking to myself
[03:25:24] *** Quits: `2jt (~jtomas@210.red-88-24-179.staticip.rima-tde.net) (Ping timeout: 240 seconds)
[03:26:39] *** Joins: alp (~alp@user/alp)
[03:27:32] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[03:28:13] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Remote host closed the connection)
[03:29:01] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[03:29:39] *** Quits: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com) (Remote host closed the connection)
[03:33:47] *** Joins: alx741 (~alx741@157.100.197.240)
[03:34:36] *** Quits: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com) (Ping timeout: 240 seconds)
[03:36:47] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[03:39:38] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[03:44:35] *** Quits: stiell_ (~stiell@gateway/tor-sasl/stiell) (Ping timeout: 240 seconds)
[03:45:13] *** Joins: stiell_ (~stiell@gateway/tor-sasl/stiell)
[03:46:37] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 240 seconds)
[03:47:26] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 252 seconds)
[03:49:30] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[03:49:45] *** Joins: lavaman (~lavaman@98.38.249.169)
[03:49:51] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[03:50:06] *** Joins: lavaman (~lavaman@98.38.249.169)
[03:50:13] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[03:50:25] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[03:50:27] *** Joins: lavaman (~lavaman@98.38.249.169)
[03:50:35] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[03:50:39] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[03:50:40] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[03:50:40] *** Joins: wroathe (~wroathe@user/wroathe)
[03:50:49] *** Joins: lavaman (~lavaman@98.38.249.169)
[03:50:57] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[03:51:11] *** Joins: lavaman (~lavaman@98.38.249.169)
[03:51:19] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[03:51:32] *** Joins: lavaman (~lavaman@98.38.249.169)
[03:51:40] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[03:51:53] *** Joins: lavaman (~lavaman@98.38.249.169)
[03:52:01] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[03:52:15] *** Joins: lavaman (~lavaman@98.38.249.169)
[03:52:23] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[03:52:38] *** Joins: lavaman (~lavaman@98.38.249.169)
[03:52:46] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[03:52:46] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[03:55:17] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[03:55:41] *** Quits: jgeerds (~jgeerds@d53600c5.access.ecotel.net) (Ping timeout: 252 seconds)
[03:55:52] *** Joins: alx741 (~alx741@157.100.197.240)
[03:59:25] *** Joins: danso (~danso@danso.ca)
[03:59:25] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[04:01:35] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[04:02:18] *** Joins: Akiva (~Akiva@user/Akiva)
[04:03:55] *** Quits: ystael (~ystael@user/ystael) (Ping timeout: 250 seconds)
[04:04:18] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d)
[04:07:50] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Remote host closed the connection)
[04:08:30] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d) (Ping timeout: 250 seconds)
[04:09:30] *** Joins: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com)
[04:15:53] *** Joins: alx741 (~alx741@157.100.197.240)
[04:18:35] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[04:18:53] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[04:19:05] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[04:20:00] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[04:24:15] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:24:27] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[04:25:00] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 240 seconds)
[04:27:12] *** Joins: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
[04:28:57] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 240 seconds)
[04:31:54] *** Quits: Tuplanolla (~Tuplanoll@91-159-69-98.elisa-laajakaista.fi) (Quit: Leaving.)
[04:32:15] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[04:35:00] *** Joins: alx741 (~alx741@181.199.42.143)
[04:35:38] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[04:36:56] *** Joins: mvk (~mvk@2607:fea8:5cc3:7e00::8c21)
[04:37:11] *** Joins: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com)
[04:38:31] *** Quits: mmhat (~mmh@55d4782f.access.ecotel.net) (Quit: WeeChat 3.4)
[04:38:31] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[04:40:55] *** Quits: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8) (Remote host closed the connection)
[04:41:02] *** Quits: wombat875 (~wombat875@pool-72-89-24-154.nycmny.fios.verizon.net) (Quit: WeeChat 2.2-dev)
[04:46:11] *** Quits: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com) (Remote host closed the connection)
[04:47:01] *** Joins: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8)
[04:47:57] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[04:50:03] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 256 seconds)
[04:53:55] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[04:54:08] *** Quits: tcard (~tcard@p2878075-ipngn18701hodogaya.kanagawa.ocn.ne.jp) (Quit: Leaving)
[04:55:29] *** Joins: alx741 (~alx741@181.199.42.143)
[04:55:51] *** Joins: bitmapper (uid464869@id-464869.lymington.irccloud.com)
[04:55:52] *** Quits: Midjak (~Midjak@82.66.147.146) (Quit: This computer has gone to sleep)
[04:56:46] *** Joins: Midjak (~Midjak@82.66.147.146)
[04:57:16] *** Joins: lavaman (~lavaman@98.38.249.169)
[04:57:26] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[04:58:30] *** Joins: tcard (~tcard@p2878075-ipngn18701hodogaya.kanagawa.ocn.ne.jp)
[05:02:10] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[05:04:36] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 272 seconds)
[05:06:41] *** Joins: wroathe (~wroathe@68-168-191-143.fttp.usinternet.com)
[05:06:41] *** Quits: wroathe (~wroathe@68-168-191-143.fttp.usinternet.com) (Changing host)
[05:06:41] *** Joins: wroathe (~wroathe@user/wroathe)
[05:12:06] *** Joins: yauhsien (~yauhsien@61-231-39-29.dynamic-ip.hinet.net)
[05:15:24] *** Quits: agumonke` (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7) (Ping timeout: 240 seconds)
[05:18:55] *** Joins: alx741 (~alx741@181.199.42.143)
[05:21:24] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Ping timeout: 240 seconds)
[05:21:59] *** Joins: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com)
[05:22:23] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[05:25:24] *** Quits: alp (~alp@user/alp) (Ping timeout: 240 seconds)
[05:26:12] *** Quits: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com) (Ping timeout: 240 seconds)
[05:30:53] *** Joins: Erutuon (~Erutuon@user/erutuon)
[05:38:44] *** Joins: deadmarshal (~deadmarsh@95.38.116.61)
[05:39:00] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[05:39:24] *** Joins: alx741 (~alx741@157.100.197.240)
[05:43:22] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[05:43:24] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 240 seconds)
[05:43:33] *** Quits: deadmarshal (~deadmarsh@95.38.116.61) (Ping timeout: 256 seconds)
[05:45:18] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 260 seconds)
[05:47:01] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[05:47:07] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[05:47:15] *** Quits: wroathe (~wroathe@user/wroathe) (Quit: leaving)
[05:48:13] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Client Quit)
[05:53:10] *** Joins: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com)
[05:57:27] *** Quits: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com) (Ping timeout: 256 seconds)
[06:00:01] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[06:00:05] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Client Quit)
[06:00:56] *** Joins: ystael (~ystael@user/ystael)
[06:01:43] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[06:02:14] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Client Quit)
[06:04:53] *** Joins: alx741 (~alx741@157.100.197.240)
[06:07:00] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[06:07:29] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[06:08:16] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Client Quit)
[06:09:57] *** Quits: justAstache (~justache@user/justache) (Read error: Connection reset by peer)
[06:10:08] *** Joins: ddb (~ddb@2607:5300:203:9993::196)
[06:10:56] *** Joins: justAstache (~justache@user/justache)
[06:11:09] *** Joins: wroathe (~wroathe@68-168-191-143.fttp.usinternet.com)
[06:11:09] *** Quits: wroathe (~wroathe@68-168-191-143.fttp.usinternet.com) (Changing host)
[06:11:09] *** Joins: wroathe (~wroathe@user/wroathe)
[06:15:35] *** Quits: yauhsien (~yauhsien@61-231-39-29.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[06:15:46] *** Quits: wroathe (~wroathe@user/wroathe) (Client Quit)
[06:15:59] *** Joins: wroathe (~wroathe@68-168-191-143.fttp.usinternet.com)
[06:15:59] *** Quits: wroathe (~wroathe@68-168-191-143.fttp.usinternet.com) (Changing host)
[06:15:59] *** Joins: wroathe (~wroathe@user/wroathe)
[06:18:23] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[06:19:21] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Client Quit)
[06:19:52] *** Joins: kimjetwav (~user@2607:fea8:2363:8f00:dcc0:6847:7906:964b)
[06:21:32] *** Quits: xff0x (~xff0x@2001:1a81:5290:f100:b98a:22f8:9c9c:82d0) (Ping timeout: 240 seconds)
[06:23:26] *** Joins: xff0x (~xff0x@2001:1a81:52ca:1900:f18a:5163:152f:3811)
[06:25:06] *** Joins: lavaman (~lavaman@98.38.249.169)
[06:25:17] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 252 seconds)
[06:25:36] *** Joins: alx741 (~alx741@181.199.42.143)
[06:26:56] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Ping timeout: 272 seconds)
[06:29:01] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[06:33:55] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[06:36:08] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[06:37:12] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[06:40:52] *** Quits: kritzefitz (~kritzefit@debian/kritzefitz) (Ping timeout: 272 seconds)
[06:44:47] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[06:46:04] *** Joins: alx741 (~alx741@157.100.197.240)
[06:47:05] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[06:49:32] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[06:51:00] *** Quits: td_ (~td@muedsl-82-207-238-210.citykom.de) (Ping timeout: 272 seconds)
[06:52:33] *** Joins: td_ (~td@94.134.91.216)
[06:57:00] *** Joins: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com)
[07:02:55] *** Quits: little_mac (~little_ma@2601:410:4300:3ce0:e0b0:8aea:9541:b1dc) (Remote host closed the connection)
[07:04:15] *** Joins: little_mac (~little_ma@2601:410:4300:3ce0:40d3:ee74:da44:44)
[07:07:41] *** Joins: alx741 (~alx741@157.100.197.240)
[07:10:32] *** Quits: cjb (~cjb@user/cjb) (Ping timeout: 260 seconds)
[07:10:49] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[07:16:03] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[07:19:03] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[07:34:19] *** Joins: alx741 (~alx741@181.199.42.143)
[07:36:53] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[07:38:09] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[07:38:47] *** Joins: alx741 (~alx741@181.199.42.143)
[07:42:19] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[07:44:08] *** Joins: agumonke` (~user@88.163.231.79)
[07:44:45] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[07:46:20] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:46:20] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:46:20] *** Joins: wroathe (~wroathe@user/wroathe)
[07:49:17] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[07:49:54] *** Quits: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com) (Ping timeout: 272 seconds)
[07:55:47] *** Joins: mbuf (~Shakthi@122.174.215.136)
[07:56:38] *** alMalsamo is now known as lumberjackimok
[07:56:47] *** lumberjackimok is now known as lumberjackok
[07:59:07] *** Joins: alx741 (~alx741@157.100.197.240)
[08:02:26] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[08:03:44] *** Joins: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com)
[08:15:57] *** Joins: deadmarshal (~deadmarsh@95.38.116.61)
[08:20:14] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[08:20:43] *** Joins: alx741 (~alx741@157.100.197.240)
[08:21:09] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Client Quit)
[08:21:15] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 240 seconds)
[08:24:03] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[08:29:35] *** Quits: abhixec (~abhinav@c-67-169-139-16.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[08:34:29] *** Quits: wroathe (~wroathe@user/wroathe) (Quit: Lost terminal)
[08:36:09] *** Quits: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com) (Remote host closed the connection)
[08:38:22] *** Quits: lumberjackok (~alMalsamo@gateway/tor-sasl/almalsamo) (Remote host closed the connection)
[08:38:37] *** Quits: sagax (~sagax_nb@user/sagax) (Quit: Konversation terminated!)
[08:38:41] *** Joins: lumberjackok (~alMalsamo@gateway/tor-sasl/almalsamo)
[08:42:08] *** Joins: alx741 (~alx741@181.199.42.143)
[08:42:38] *** Quits: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net) (Remote host closed the connection)
[08:45:55] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[08:46:37] *** Joins: alx741 (~alx741@181.199.42.143)
[08:49:31] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[08:49:42] *** Joins: vicfred (~vicfred@user/vicfred)
[08:50:27] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Client Quit)
[08:50:27] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[08:51:05] *** Joins: alx741 (~alx741@157.100.197.240)
[08:52:57] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Ping timeout: 240 seconds)
[08:54:40] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[08:54:49] *** Quits: yuvi (~uv125@192.54.96.185) (Ping timeout: 256 seconds)
[08:55:37] *** Joins: yuvi (~uv125@192.54.96.185)
[09:02:21] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[09:04:52] *** Joins: azimut_ (~azimut@gateway/tor-sasl/azimut)
[09:07:35] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 240 seconds)
[09:08:06] *** Joins: lavaman (~lavaman@98.38.249.169)
[09:10:19] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[09:10:36] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[09:11:46] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[09:11:49] *** Joins: kritzefitz (~kritzefit@debian/kritzefitz)
[09:12:31] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[09:12:37] *** Joins: alx741 (~alx741@181.199.42.143)
[09:12:43] *** Joins: lavaman (~lavaman@98.38.249.169)
[09:12:48] *** Joins: ardell (~ardell@user/ardell)
[09:14:16] *** Quits: emf (~emf@2620:10d:c090:400::5:f613) (Quit: emf)
[09:15:30] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[09:16:20] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[09:16:21] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[09:16:37] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Ping timeout: 256 seconds)
[09:18:12] *** Quits: deadmarshal (~deadmarsh@95.38.116.61) (Ping timeout: 240 seconds)
[09:33:06] *** Joins: alx741 (~alx741@181.199.42.143)
[09:36:58] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[09:36:58] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[09:37:04] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Client Quit)
[09:37:35] *** Joins: alx741 (~alx741@157.100.197.240)
[09:41:32] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[09:42:25] *** Quits: agumonke` (~user@88.163.231.79) (Ping timeout: 256 seconds)
[09:43:41] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[09:49:34] *** Joins: yauhsien (~yauhsien@61-231-39-29.dynamic-ip.hinet.net)
[09:50:14] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[09:51:17] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 240 seconds)
[09:52:05] *** Joins: takuan (~takuan@178-116-218-225.access.telenet.be)
[09:54:01] *** Quits: yauhsien (~yauhsien@61-231-39-29.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[09:58:49] *** Joins: alx741 (~alx741@157.100.197.240)
[10:01:48] *** Quits: Megant (megant@user/megant) (Ping timeout: 240 seconds)
[10:03:45] *** Joins: coot (~coot@213.134.190.95)
[10:04:49] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[10:09:19] *** Quits: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com) (Ping timeout: 256 seconds)
[10:20:29] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[10:22:01] *** Joins: alx741 (~alx741@157.100.197.240)
[10:22:21] *** Quits: PHO` (~pho@akari.cielonegro.org) (Quit: SIGTERM received; exit)
[10:23:58] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d)
[10:25:07] *** Joins: PHO` (~pho@akari.cielonegro.org)
[10:25:21] *** Quits: InternetCitizen (~fuzzypixe@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Ping timeout: 245 seconds)
[10:25:21] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[10:28:02] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d) (Ping timeout: 240 seconds)
[10:34:57] *** Quits: kadobanana (~mud@user/kadoban) (Ping timeout: 240 seconds)
[10:39:03] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[10:40:52] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[10:40:55] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d)
[10:41:06] *** Joins: lavaman (~lavaman@98.38.249.169)
[10:41:13] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[10:43:27] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 250 seconds)
[10:43:52] *** Joins: alx741 (~alx741@157.100.197.240)
[10:46:38] *** Joins: lortabac (~lortabac@2a01:e0a:541:b8f0:b437:a10d:f085:84a8)
[10:51:43] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[10:53:25] *** Quits: ChaiTRex (~ChaiTRex@user/chaitrex) (Remote host closed the connection)
[10:54:00] *** Joins: ChaiTRex (~ChaiTRex@user/chaitrex)
[10:59:04] *** Joins: kadobanana (~mud@user/kadoban)
[11:00:16] *** Quits: kimjetwav (~user@2607:fea8:2363:8f00:dcc0:6847:7906:964b) (Quit: ERC 5.4.1 (IRC client for GNU Emacs 29.0.50))
[11:05:56] *** Joins: cfricke (~cfricke@user/cfricke)
[11:05:59] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 256 seconds)
[11:06:25] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[11:08:13] *** Joins: alx741 (~alx741@181.199.42.143)
[11:09:48] *** Quits: yuvi (~uv125@192.54.96.185) (Ping timeout: 240 seconds)
[11:10:23] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[11:12:38] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[11:15:00] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 240 seconds)
[11:20:53] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[11:21:23] *** Quits: dextaa_ (~dextaa@user/dextaa) (Remote host closed the connection)
[11:22:59] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[11:37:34] *** Joins: alx741 (~alx741@181.199.42.143)
[11:38:14] *** Joins: alp (~alp@user/alp)
[11:38:17] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[11:39:23] *** Quits: little_mac (~little_ma@2601:410:4300:3ce0:40d3:ee74:da44:44) (Quit: Leaving)
[11:39:23] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Client Quit)
[11:43:25] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[11:44:03] *** Joins: alx741 (~alx741@157.100.197.240)
[11:45:47] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:45:57] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[11:46:08] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 272 seconds)
[11:47:11] *** Joins: fendor (~fendor@77.119.171.203.wireless.dyn.drei.com)
[11:48:08] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[11:48:13] *** Joins: michalz (~michalz@185.246.204.90)
[11:49:15] *** Joins: chele (~chele@user/chele)
[12:00:00] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[12:04:11] *** Joins: hololeap (~hololeap@user/hololeap)
[12:06:55] *** Joins: alx741 (~alx741@157.100.197.240)
[12:09:55] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[12:10:37] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[12:15:20] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[12:15:38] *** Joins: _ht (~quassel@231-169-21-31.ftth.glasoperator.nl)
[12:16:00] *** Joins: ccntrq (~Thunderbi@2a01:e34:eccb:b060:9356:9f08:f922:e54b)
[12:18:04] *** Joins: machinedgod (~machinedg@24.105.81.50)
[12:20:02] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[12:23:07] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[12:23:09] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d) (Remote host closed the connection)
[12:23:22] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d)
[12:25:06] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[12:28:33] *** Joins: alx741 (~alx741@157.100.197.240)
[12:30:04] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[12:30:11] *** Quits: sjanssen (~sjanssenm@2001:470:69fc:105::1:61d8) (Quit: You have been kicked for being idle)
[12:30:11] *** Quits: litharn[m] (~litharnma@2001:470:69fc:105::1:8336) (Quit: You have been kicked for being idle)
[12:31:38] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[12:37:12] *** Joins: kuribas (~user@ptr-25vy0i7j6j7p9e7j9ij.18120a2.ip6.access.telenet.be)
[12:39:43] *** Quits: shryke_ (~shryke@91.103.43.254) (Quit: WeeChat 3.3)
[12:40:01] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[12:40:47] *** Quits: rembo10 (~rembo10@remulis.com) (Quit: ZNC 1.8.2 - https://znc.in)
[12:41:02] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[12:41:41] *** Joins: rembo10 (~rembo10@remulis.com)
[12:42:25] *** Joins: cynomys (~cynomys@user/cynomys)
[12:42:37] *** Quits: azimut_ (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[12:42:57] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[12:44:55] *** Quits: xff0x (~xff0x@2001:1a81:52ca:1900:f18a:5163:152f:3811) (Ping timeout: 256 seconds)
[12:45:40] *** Joins: xff0x (~xff0x@2001:1a81:52ca:1900:ee1e:2dd0:4c63:2ad)
[12:46:09] *** Joins: komikat (~komikat@27.57.144.183)
[12:46:24] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[12:49:23] *** Quits: komikat (~komikat@27.57.144.183) (Remote host closed the connection)
[12:50:11] *** Joins: alx741 (~alx741@157.100.197.240)
[12:50:50] *** Joins: jespada (~jespada@185.69.145.16)
[12:52:26] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[12:55:25] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[12:55:42] *** Joins: robosexual (~spaceoyst@92.248.225.230)
[12:57:12] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[12:58:59] *** Quits: robosexual (~spaceoyst@92.248.225.230) (Client Quit)
[12:59:39] *** Joins: bahamas (~lucian@84.232.140.52)
[13:03:21] <turlando> Has anyone played with Codec.Audio.FLAC? I'm trying to read all the tags in a file, but the library limits to only the ones specified in a sum-type (ignoring the fact that vorbiscomments is a freeform key-value store). I'm digging into the code but it looks like that the bits I need to work around this limitation are in hidden modules. What are my options (I'd love not to fork the library)?
[13:04:13] *** Joins: `2jt (~jtomas@210.red-88-24-179.staticip.rima-tde.net)
[13:06:28] *** Joins: InternetCitizen (~fuzzypixe@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[13:06:56] <[exa]> turlando: if we're looking at the same problem, can't you just add instances to MetaValue?
[13:07:52] *** Joins: komikat (~komikat@27.57.144.183)
[13:09:36] <turlando> [exa]: Not  really, as I said they're freeform, and I'd love to read all of them, not just the ones I managed to smuggle into MetaValue. I can be handed with really anything here. Another issue is that flac allows for multiple keys with the same name (e.g. multiple artists can be encoded with multiple entries, all of them having "artist" as key) and the library seems to ignore also this
[13:09:39] <[exa]> (or is it literally about the VorbisFields?)
[13:10:00] <turlando> The internals and the level2 bindings looks really good, the Metadata module does all kind of wrong assumptions though
[13:12:34] <[exa]> yeah looks a bit like under-interpretation of the vorbis thing
[13:12:46] <[exa]> vorbis actually doesn't dictate anything
[13:12:53] <[exa]> aren't these fields set by FLAC standard?
[13:13:02] <[exa]> if not, I'd just fork and send back a pull request :D
[13:13:58] <turlando> sorry, I've talked about FLAC but I really meant VorbisComments here
[13:14:15] *** Joins: yauhsien (~yauhsien@2402:7500:5e4:c8b7:856f:1e42:94c9:19cd)
[13:14:17] *** Quits: ardell (~ardell@user/ardell) (Quit: Konversation terminated!)
[13:14:17] *** Joins: alx741 (~alx741@157.100.197.240)
[13:15:52] *** Quits: komikat (~komikat@27.57.144.183) (Remote host closed the connection)
[13:16:34] <sshine> I just installed 'smos', a Haskell command-line program. getting it installed on a vanilla Debian VPS was a little tricky, and a binary distribution would've helped greatly. now, I don't know if a binary distribution should always be one single statically linked executable, and if not, if that opens another can of worms...
[13:16:37] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[13:16:50] <sshine> ...but there must be a way to distribute Haskell programs that don't require downloading a compiler.
[13:17:11] <turlando> I could only find this, I think the same applies to flac though http://web.archive.org/web/20040401200215/reactor-core.org/ogg-tag-recommendations.html
[13:17:23] <[exa]> sshine: depends on how systematic you want it. If it's for debian vps, you can perfectly make a .deb package for that
[13:17:36] <sshine> [exa], I could make a .deb, and that was my first thought!
[13:17:46] <[exa]> sshine: honestly after the initial shock .deb packaging is lovely
[13:17:50] <sshine> [exa], well, my second thought after realising a single static binary might not be easy.
[13:18:39] <[exa]> otoh if it's "just for your stuff", sending haskell binaries arounds across the distros of same kinds is pretty much common (see what ghcups and cabals do!)
[13:18:39] <sshine> [exa], but... while *I* am in Debian, and while Debian/Ubuntu make a significant part of the Linux ecosystem, I also think providing "source code or .deb" is still a bit of a silo'ing approach.
[13:19:03] *** Joins: komikat (~komikat@27.57.144.183)
[13:19:06] <[exa]> yeah there's deb-src for that, and .dsc packages
[13:19:37] <sshine> [exa], it's not "just for my stuff" :) I'm not the package maintainer. I just thought, if this software is actually valuable for non-Haskellers, it's a pity you need to either know how to decode GHC build errors, or have Nix wizardry in your back pocket, to install a simple tool.
[13:19:52] <sshine> [exa], you mean deb-src an .dsc packages are a good solution for other Linux distros? ;)
[13:19:52] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[13:19:57] <[exa]> literally the deb packaging, if you're not aiming for uploading to the official repos, is just about making a debian/ subdirectory and filling in the fields
[13:20:22] <sshine> [exa], sounds like a very viable path I'll definitely consider :)
[13:20:49] <sshine> [exa], I'd like to consider the general problem of distributing executables, though. not everyone has 'dpkg'.
[13:20:58] <[exa]> and technically, having a .deb package you are like 99% to go for a rpm package (deb->rpm is painless), and the rest of the ecosystem is Arch/Gentoo/... who just really want to work with the compiler errors
[13:21:22] <sshine> [exa], there's also FreeBSD.
[13:21:23] <[exa]> if that's not enough, make a docker
[13:21:59] <[exa]> freebsd probably goes to the same heap as arch from this viewpoint (not sure if there's even good binary distribution there)
[13:21:59] <sshine> I'd like a single statically linked ELF executable for x86_64.
[13:22:08] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d) (Remote host closed the connection)
[13:22:19] <[exa]> that you can do with just cabal (build static, done)
[13:22:33] <sshine> [exa], making the assumption that if you're not an Ubuntu user (extend with arbitrary other distros), you're a power user who likes to figure out esoteric build toolchains, is flawed IMO. :)
[13:23:09] <sshine> lots of FreeBSD users are systems administrators who don't care to learn new programming languages just because some tool doesn't have great cross-OS packaging, because it's kinda small.
[13:23:25] <sshine> and if it were easy to create a single exe, we'd just be doing it.
[13:23:28] <[exa]> sshine: without that assumption you'll spend 3 years bikeshedding a new packaging system when the problem can get easily solved by users
[13:23:46] <sshine> I'm not trying to invent a packaging system.
[13:23:50] <[exa]> provide a good reliable build instructions instead.
[13:24:43] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[13:24:58] <sshine> I can write good build instructions. they'll be a tutorial in ten steps that involve how to get the first part of a Haskell development environment on your computer, so you can open one program you don't intend to modify.
[13:26:08] <sshine> I was wondering -- here's an `ldd` output: https://gist.github.com/sshine/dba2d2fc0e4e5096a027ea30ca09fc90 -- can't I somehow stuff some of that into the executable?
[13:26:15] <[exa]> `$pkgmanager install ghc cabal-install; cd myprogram; cabal run` ?
[13:27:09] <[exa]> sshine: you do not really want to smash these into the executable because the libraries are supposed to implement the cross-system differences, thus increase portability (compare with the portable cabal executable that imports the same)
[13:27:13] <sshine> [exa], actually, using $pkgmanager in my case meant GHC wouldn't install, and the error messages didn't provide very clear hints on what system libraries (Debian -dev packages) I was missing. using GHCup gave a friendly Debian-like hint before crashing.
[13:28:14] <[exa]> yeah actually that could help, if you do the same way as ghcup you should get a binary that is roughly as portable as ghcup
[13:28:15] <sshine> [exa], I understand the philosophy of shared libraries. I also understand that the "correct" way to deal with those is to make sure that the operating system is in charge of providing those shared libraries. which leads to having multiple per-OS packaging.
[13:29:00] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 240 seconds)
[13:29:37] <[exa]> well, multiple OSes lead to having multiple per-OS packaging, yes.
[13:30:06] <sshine> not necessarily. statically linked binaries mean you only have one per (architecture * binary execution format).
[13:31:35] <[exa]> (times kernel version, userspace version, ...)
[13:31:42] <[exa]> maybe you want a docker? :D
[13:31:47] <sshine> I can see that there's a guide on how to compile statically linked binaries here: https://www.tweag.io/blog/2020-09-30-bazel-static-haskell/
[13:31:55] <sshine> I don't want a docker :)
[13:32:06] *** Quits: xff0x (~xff0x@2001:1a81:52ca:1900:ee1e:2dd0:4c63:2ad) (Ping timeout: 252 seconds)
[13:32:23] <[exa]> yeah that guide should work to a large extent
[13:34:14] <merijn> sshine: Note that by default haskell executables only dynamically link libc anyway
[13:34:22] <sshine> merijn, right
[13:34:27] *** Quits: obviyus (sid415299@user/obviyus) (Quit: Connection closed for inactivity)
[13:34:30] <merijn> So even without going all the way to full static you're already pretty portable
[13:35:11] <sshine> re. kernel version: I don't need to provide an executable for all possible states across all times. I'm arguing that having even just one binary exe for (x86_64, ELF) provides for a wider distribution than any amount of per-OS special packaging, with the least effort (if it were Go or Rust, but when someone who is very experienced with Haskell tells me "yeah, it's kinda tricky", I'm thinking it's not so 
[13:35:17] <sshine> for Haskell.)
[13:35:24] *** Quits: yauhsien (~yauhsien@2402:7500:5e4:c8b7:856f:1e42:94c9:19cd) (Ping timeout: 240 seconds)
[13:35:26] <sshine> merijn, that's what I'm thinking!
[13:35:32] <sshine> merijn, like, mostly static would be very good :)
[13:35:53] <merijn> sshine: Who said it's tricky? If you use musl you can make something that will run on any compatible kernel, yeah
[13:36:01] <dminuoso> Keep in mind that static binaries complicate security patches.
[13:36:05] <merijn> sshine: Getting everything setup right is tricky and a bit of a pain
[13:36:15] <merijn> sshine: But once it running it just works
[13:36:25] <sshine> merijn, NorfairKing says :D
[13:36:49] <dminuoso> Each static build must be rebuild and redeployed every time any statically linked library receives an update.
[13:36:51] <merijn> sshine: One of my colleagues is doing it and it seems to work fine
[13:36:52] <sshine> ("entirely non-trivial" to be exact)
[13:37:00] <dminuoso> Which is why I wouldnt statically link something like openssl/libressl
[13:37:22] <[exa]> +1 ^
[13:37:43] *** Joins: alx741 (~alx741@157.100.197.240)
[13:38:10] <sshine> dminuoso, when you're in charge of the execution environment, that's a major drag. for distributing exe's to a wide FOSS audience, downloading a huge exe that took longer time to recompile and reassemble still removes the ties to the development environment.
[13:38:30] <dminuoso> sshine: I'd argue the other way around.
[13:38:55] *** Joins: xff0x (~xff0x@2001:1a81:52ca:1900:ee1e:2dd0:4c63:2ad)
[13:38:59] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 256 seconds)
[13:39:02] <dminuoso> sshine: When you're in charge of the complete process up until production environment, shipping a libressl update is at least possible.
[13:39:12] *** Joins: obviyus (sid415299@user/obviyus)
[13:39:51] <dminuoso> But when I, as a user, receive a statically linked binary, I dont even know whether a) my application is vulnerable to latest CVEs without debugging each ELF object I have, b) I have to annoy maintainers to build a new release, c) if the upstream dies I can no longer patch contained libraries
[13:40:00] <dminuoso> And for each such application I have to wait for library fixes.
[13:40:04] *** Joins: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com)
[13:40:27] <dminuoso> I'd argue that static binaries only make sense for internal use where you can control the complete lifecycle
[13:41:16] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[13:44:07] <sshine> merijn, since your colleague is doing mostly-static binaries, what build system is he using? nix or bazel?
[13:44:37] <merijn> sshine: cabal in a github actions docker container with alpine
[13:45:12] *** Quits: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com) (Ping timeout: 272 seconds)
[13:45:18] <sshine> merijn, so... musl is the thing that makes inlining libc cheaper disk-wise, but besides musl, he only uses cabal?
[13:45:35] <merijn> sshine: musl is just an alternate libc implementation
[13:45:59] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[13:46:02] <merijn> sshine: The problem is that glibc includes some fuckery to (intentionally) make static linking it a massive PITA
[13:46:17] <sshine> yeah, I imagine
[13:46:20] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[13:46:21] <merijn> Because one of the glibc maintainers is opposed to static linking for ideological reasons
[13:46:23] *** Quits: hiredman (~hiredman@frontier1.downey.family) (Ping timeout: 252 seconds)
[13:47:00] *** Joins: ph88 (~ph88@ip5f5af71f.dynamic.kabel-deutschland.de)
[13:47:14] *** Joins: hiredman (~hiredman@frontier1.downey.family)
[13:47:30] <merijn> sshine: I mean, GHC already statically links haskell and the runtime by default, and if you tell GHC to statically link C libraries it happily will
[13:47:37] *** Joins: yauhsien (~yauhsien@61-231-39-29.dynamic-ip.hinet.net)
[13:47:50] <merijn> The only one creating problems is libc, so if you ditch that in favour of musl, it's mostly "problem solved"
[13:48:17] <sshine> merijn, sounds like there should be a tutorial somewhere :P
[13:48:28] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[13:48:53] <sshine> maybe I can derive the non-bazel parts from the tweag tutorial.
[13:49:04] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[13:49:09] <sshine> (not that I'm opposed to bazel; if I were to learn any new build system, that'd probably be it.)
[13:51:57] *** Joins: jgeerds (~jgeerds@d53600c5.access.ecotel.net)
[13:52:21] <sshine> dminuoso, re. when static binaries make sense: what if I'd like to try out this smart command-line tool that's on GitHub but my operating system's package manager has never heard of it? they use applicatoid functormoids to make really complicated things simple, and all you have to do is deploy a full Haskell developer environment, install a bunch of C libraries via your operating system (and one you have 
[13:52:27] <sshine> to install from scratch via source code). I would love to be able to click "download", chmod +x and just run it. :D
[13:52:51] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:8402:4dae:2872:582c)
[13:53:22] <merijn> sshine: I mean, step 1) arrange a VM/docker container/whatever with Alpine linux
[13:53:29] *** Quits: yauhsien (~yauhsien@61-231-39-29.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[13:53:38] <merijn> Step 2) pass the relevant -static flags to GHC (consult GHC user guide)
[13:53:48] <merijn> And that should be it?
[13:54:03] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 256 seconds)
[13:54:38] <sshine> it's a fancy to-do command-line program, not a spaceship simulator, why do I need to run a background daemon that runs as root and consistently messes with my system's ability to hibernate?
[13:54:47] <merijn> Legally you may be required to provide a dynamic build binary to, because of libgmp
[13:55:08] <merijn> sshine: You just need the container to build it...
[13:55:12] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[13:55:12] <sshine> are you saying libgmp legally requires me to not compile it statically?
[13:55:23] <sshine> I don't want to build it, I want to download and run it!
[13:55:40] <merijn> sshine: Alpine linux ships with musl as default libc, so you wanna build it there to get a fully static binary that you then distribute
[13:55:49] *** Joins: __monty__ (~toonn@user/toonn)
[13:55:50] <sshine> merijn, thanks! that's good to know :)
[13:55:54] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[13:56:17] <merijn> sshine: You could also try and setup your own musl toolchain on your own system, but that's a massive pain. That's why people say "build in an Alpina docker image"
[13:56:26] <sshine> (and sorry, I'm having two conversations here; one in which I'm a stupid end-user of a program that is incidentally written in Haskell, and one in which I'm a person who tries to distribute that program to myself as the stupid user.)
[13:56:27] <merijn> sshine: libgmp is LGPL, so...yes?
[13:56:50] <merijn> sshine: You can use integer-simple (which is less performant, but not LGPL)
[13:56:53] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[13:57:00] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:8402:4dae:2872:582c) (Ping timeout: 240 seconds)
[13:57:21] <sshine> hmm... really.
[13:57:26] <merijn> sshine: But LGPL does allow you to distribute statically linked binaries IFF you also provide dynamic ones (so users can replace the LGPL version with a custom one)
[13:57:37] <sshine> oh, okay.
[13:57:53] <sshine> it's not enough to distribute static executable + source code?
[13:58:25] *** Quits: alp (~alp@user/alp) (Remote host closed the connection)
[13:58:44] *** Joins: alp (~alp@user/alp)
[13:58:50] <merijn> sshine: https://www.gnu.org/licenses/gpl-faq.en.html#LGPLStaticVsDynamic
[13:59:20] *** Joins: alx741 (~alx741@157.100.197.240)
[13:59:43] <dminuoso> sshine: Well yes, so packaging is a complicated story.
[14:00:20] <maerwald> I wonder how you'd prove that the static binary and the dynamic one are actually the same program xD
[14:00:33] <dminuoso> Traditionally you would only support installation via autotools, and make it the problem of some self appointed maintainer for a given linux distrubition.
[14:00:42] <dminuoso> Rather than try and worry yourself how to expose a package.
[14:00:43] <merijn> maerwald: Tjat
[14:00:48] <merijn> That's what courts are for
[14:01:17] <dminuoso> In the presence of full program optimization, that could be fun proceedings.
[14:01:24] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 240 seconds)
[14:01:48] <merijn> not really
[14:01:48] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Remote host closed the connection)
[14:02:04] <merijn> the suing party would have to prove they aren't the same
[14:02:35] <dminuoso> Like I said, fun proceedings one way or another.
[14:02:38] <sshine> thanks everyone for your input. I'll get back to being productive.
[14:02:57] <dminuoso> sshine: this is one of the reasons why we are switching to nixos.
[14:02:58] <dminuoso> By the way
[14:03:09] *** Joins: agumonke` (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7)
[14:03:15] <dminuoso> because it gives us the necessary language to tie the build process and deployment process together coherently
[14:03:17] *** Joins: ss4 (~wootehfoo@user/wootehfoot)
[14:03:20] <sshine> dminuoso, "this" being what more exactly?
[14:03:46] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[14:04:01] <dminuoso> sshine: distributing programs problem.
[14:04:17] <merijn> dminuoso: Now if only someone made the Nix language suck less :p
[14:04:23] <dminuoso> merijn: Yes. If only.
[14:04:38] <maerwald> merijn: it's not just the language
[14:04:41] <maerwald> but the entire ecosystem
[14:04:54] <dminuoso> At the very least the ecosystem is quite alive and active. So there's that at least.
[14:05:05] <dminuoso> But yeah, we're painfully aware of the price we're paying
[14:05:29] *** Joins: deadmarshal_ (~deadmarsh@95.38.116.61)
[14:05:54] <maerwald> merijn: and.. .there are proprietary alternatives to nix (for reproducible builds, that also work with haskell) that have paid customer support and no random changes
[14:06:13] <dminuoso> maerwald: Curious, what alternatives are you thinking of?
[14:06:18] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[14:06:55] <maerwald> I don't actually remember the product name
[14:07:05] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 256 seconds)
[14:07:51] <merijn> maerwald: Those don't help me
[14:08:08] <maerwald> sure, but I'd probably try those first before hiring a nix engineer
[14:08:31] <merijn> We're not using Nix at all atm
[14:08:57] <merijn> It's just the Nix would be perfect for a ton of our problems. But it sucks to hard to ever even consider inflicting it on the organisation
[14:10:17] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[14:10:53] *** Quits: Giovanni (~Giovanni@176.67.166.45) (Read error: Connection reset by peer)
[14:11:26] <maerwald> that's why I prefer less predictable tools that have a simpler interface 
[14:11:29] *** Joins: Giovanni (~Giovanni@87.251.20.36)
[14:11:32] *** Quits: ss4 (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[14:11:52] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[14:12:25] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[14:12:49] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d)
[14:12:50] <merijn> Well, the alternatives in use at work now are "conda" and "pip" which are *godawful* :p
[14:14:00] <sshine> merijn, you wouldn't consider bazel instead?
[14:15:10] <merijn> lol no
[14:16:41] <merijn> Anything that has "multi page install instructions that rely on apt-get" is an absolute no go
[14:17:11] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d) (Ping timeout: 252 seconds)
[14:17:41] *** Joins: memowe (~memowe@2a02:908:d85:c3c0:90a5:a8b1:f724:deae)
[14:20:32] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[14:24:49] *** Joins: alx741 (~alx741@157.100.197.240)
[14:25:45] *** Quits: deadmarshal_ (~deadmarsh@95.38.116.61) (Ping timeout: 256 seconds)
[14:25:57] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 240 seconds)
[14:27:21] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[14:27:24] *** Joins: yauhsien (~yauhsien@61-231-39-29.dynamic-ip.hinet.net)
[14:29:11] *** Joins: Erutuon (~Erutuon@user/erutuon)
[14:30:58] <dminuoso> maerwald: I have a distinct hate for "proprietary as an alternative, they have paid customer support"
[14:31:48] <maerwald> who do you ask if you have problems with nix? 
[14:31:50] *** Joins: thevishy (~Nishant@2405:201:f005:c007:7c10:43e8:a548:3fb5)
[14:32:01] <dminuoso> Well if its support you want, there is nix consultants
[14:32:09] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[14:32:12] *** Quits: yauhsien (~yauhsien@61-231-39-29.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[14:32:22] <dminuoso> But the thing is, who do you ask if your proprietary vendor closes down, or cant help you because they lack competency?
[14:32:29] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[14:32:41] *** Joins: bahamas (~lucian@84.232.140.52)
[14:32:45] <maerwald> consultancies don't close down?
[14:33:11] <maerwald> that might actually be happening right now
[14:33:18] <dminuoso> maerwald: Sure they can, but nix itself wont.
[14:33:26] <dminuoso> But if the properietary vendor closes down, you're hosed.
[14:33:40] <maerwald> well, open source projects sometimes die out too
[14:33:52] <maerwald> just requires a couple of maintainers to lose interest
[14:33:55] <maerwald> look at GHC
[14:34:03] <dminuoso> Sure, but tens of thousands of nix users out there. But only one vendor that can help you with your proprietary solution.
[14:34:30] *** Joins: cosimone (~user@93-47-229-38.ip115.fastwebnet.it)
[14:34:39] <dminuoso> And IME "proprietary vendors" tend to overcharge on poorly written bash and python code, lack the willingness and skill to debug if you have problems..
[14:34:45] <maerwald> there's an entire industry build on proprietary software and they are doing fine mostly
[14:35:57] <dminuoso> Of course *they* are doing fine as long as they have enough fish on the hook.
[14:36:34] <maerwald> I don't see how depending on volunteer opensource maintainers is really a better strategy for a *business* in capitalist market
[14:36:48] <maerwald> they do whatever works
[14:37:21] *** Joins: razetime (~quassel@117.254.35.156)
[14:37:25] *** Joins: yauhsienhuangtw (~Yau-Hsien@2402:7500:5e4:c8b7:c90:6bda:6af1:8273)
[14:37:35] *** Joins: yauhsien (~yauhsien@61-231-39-29.dynamic-ip.hinet.net)
[14:39:16] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[14:41:00] *** Quits: yauhsien_ (~Yau-Hsien@61-231-39-29.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[14:41:57] *** Quits: yauhsien (~yauhsien@61-231-39-29.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[14:42:03] <carbolymer> I'm spawning a lot of thread (forkIO) and killing them, and memory isn't released after thread completes - I'm even doing `killThread` just to make sure that thread gets killed
[14:42:06] <carbolymer> any ideas why is that?
[14:42:11] *** Joins: mmhat (~mmh@55d467a0.access.ecotel.net)
[14:44:46] <dminuoso> You're holding references.
[14:45:01] <carbolymer> dminuoso: only to thread IDs
[14:45:32] *** Joins: alx741 (~alx741@157.100.197.240)
[14:45:55] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[14:46:38] *** Joins: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com)
[14:47:52] *** Joins: fendor_ (~fendor@77.119.204.89.wireless.dyn.drei.com)
[14:48:16] *** Quits: InternetCitizen (~fuzzypixe@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Ping timeout: 245 seconds)
[14:48:55] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[14:50:41] *** Quits: fendor (~fendor@77.119.171.203.wireless.dyn.drei.com) (Ping timeout: 256 seconds)
[14:51:15] *** Quits: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com) (Ping timeout: 256 seconds)
[14:51:30] <carbolymer> I'm not doing anything fancy, just making sure that no more than 500 threads are running at the same time: https://gitlab.com/carbolymer/ghc-threads-memory-leak/-/blob/master/Main.hs#L53
[14:52:20] <carbolymer> and then, memory usage peaks at 2GB
[14:54:16] *** Quits: lottaquestions (~nick@2607:fa49:5041:a200:37ab:3c6c:a9ec:c971) (Quit: Konversation terminated!)
[14:57:01] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[15:02:34] *** Quits: sleblanc (~sleblanc@user/sleblanc) (Remote host closed the connection)
[15:05:31] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Quit: mikoto-chan)
[15:05:31] *** Quits: jespada (~jespada@185.69.145.16) (Read error: Connection reset by peer)
[15:07:09] *** Joins: alx741 (~alx741@157.100.197.240)
[15:07:41] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[15:08:22] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[15:09:16] *** Joins: ubert (~Thunderbi@p200300ecdf3be90c0930a09fd733e6d6.dip0.t-ipconnect.de)
[15:09:58] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[15:12:44] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[15:14:04] <bahamas> can anyone remind me the function that waits for input on the command line?
[15:16:05] <geekosaur> ??
[15:16:10] <lortabac> bahamas: getLine reads one line from stdin
[15:17:17] <geekosaur> if you're printing a prompt first, remember to either `hFlush stdout` or `hSetBuffering stdout NoBuffering` first (both reuire importing `System.IO`)
[15:19:35] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[15:19:36] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d)
[15:19:44] <bahamas> lortabac: that's the one. thanks!
[15:19:55] <bahamas> geekosaur: thanks!
[15:20:13] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[15:21:25] *** Parts: memowe (~memowe@2a02:908:d85:c3c0:90a5:a8b1:f724:deae) ()
[15:24:19] *** Joins: yauhsien (~yauhsien@61-231-39-29.dynamic-ip.hinet.net)
[15:24:29] *** Joins: yauhsien_ (~Yau-Hsien@61-231-39-29.dynamic-ip.hinet.net)
[15:25:08] *** Quits: stiell_ (~stiell@gateway/tor-sasl/stiell) (Remote host closed the connection)
[15:25:22] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 250 seconds)
[15:25:29] *** Joins: stiell_ (~stiell@gateway/tor-sasl/stiell)
[15:26:16] *** Joins: alx741 (~alx741@157.100.197.240)
[15:27:37] *** Quits: yauhsienhuangtw (~Yau-Hsien@2402:7500:5e4:c8b7:c90:6bda:6af1:8273) (Ping timeout: 240 seconds)
[15:27:56] *** Joins: yauhsienhuangtw (~Yau-Hsien@61-231-39-29.dynamic-ip.hinet.net)
[15:28:32] *** Quits: yauhsien (~yauhsien@61-231-39-29.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[15:29:02] *** Quits: yauhsien_ (~Yau-Hsien@61-231-39-29.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[15:29:07] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[15:29:19] *** Joins: jespada (~jespada@185.69.145.16)
[15:31:02] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[15:31:02] *** Joins: deadmars- (~deadmarsh@95.38.116.61)
[15:31:32] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[15:35:32] *** Quits: deadmars- (~deadmarsh@95.38.116.61) (Ping timeout: 240 seconds)
[15:36:11] *** Joins: olle (~olle@i5E866D89.versanet.de)
[15:36:20] <olle> What's final with tagless-final?
[15:36:59] <Hecate> the final encoding
[15:37:36] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[15:39:07] <geekosaur> isn't that about initial vs. final algebras?
[15:40:09] <Hecate> I'd have to re-read Oleg's papes
[15:40:13] <Hecate> I'd have to re-read Oleg's papers*
[15:40:33] *** Quits: hueso (~root@user/hueso) (Ping timeout: 256 seconds)
[15:41:02] <lortabac> IIRC initial means you encode terms as an AST, whereas final means you encode terms directly by the operations that are available on them
[15:41:33] <olle> lortabac: Isn't that already implied by "tagless"? Since tag = sum type
[15:41:37] <olle> Or ADT
[15:41:46] *** Quits: shriekingnoise (~shrieking@201.231.16.156) (Quit: Quit)
[15:42:35] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[15:43:03] <lortabac> olle: in theory you might define an ADT with the evaluation functions
[15:43:03] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Client Quit)
[15:43:42] <lortabac> that would be a tagged-final encoding
[15:44:56] <olle> Sure
[15:45:07] <olle> So what's tagless-not-final?
[15:45:23] *** Joins: alx741 (~alx741@157.100.197.240)
[15:45:36] *** Joins: hueso (~root@user/hueso)
[15:45:49] <lortabac> TBH I read that paper a long time ago, I might be misremembering something
[15:46:50] <olle> Guess I could ask in Scala channel too, lots of blog post about this technique in Scala
[15:46:55] <olle> cats-effects and stuff
[15:47:51] <worldhelloworld> Just out of curiosity : what is the salary range of a beginning Haskell developer in your experience? Say someone who has read a book like Hutton but not much experience doing actual projects 
[15:48:31] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[15:48:34] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[15:49:52] <__monty__> IME those jobs don't exist. In general "Haskell developer" seems to mean Experienced/Senior Developer who is probably better than average because they're not so stuck in their ways and open to learning new things as exemplified by the fact they learned Haskell.
[15:50:15] *** Quits: jgeerds (~jgeerds@d53600c5.access.ecotel.net) (Ping timeout: 250 seconds)
[15:50:27] *** Joins: hueso_ (~root@user/hueso)
[15:50:31] <geekosaur> ^
[15:51:20] <worldhelloworld> That's interesting, I get similar vibes. In that case what would be the expected range? 
[15:51:27] <lortabac> olle: I guess Servant is a kind-of a tagless-initial encoding, because the behavior is determined by instance selection instead of runtime matching of tags
[15:51:29] *** Quits: hueso (~root@user/hueso) (Read error: Connection reset by peer)
[15:51:37] <hpc> depends on the company
[15:51:45] <hpc> at a startup, senior engineer could be the highest-level technical person
[15:51:52] <worldhelloworld> Approximately 
[15:51:55] <hpc> at google, it could mean "can be trusted to write C++, not just java"
[15:52:59] <hpc> but yeah, i would trust someone who knows haskell to be better equiped for novel tasks than your average web framework cargo cultist
[15:53:35] *** Quits: Giovanni (~Giovanni@87.251.20.36) (Ping timeout: 256 seconds)
[15:53:40] <worldhelloworld> Shots fired, hope no rust devs lurking 😉
[15:53:51] <hpc> hah
[15:53:57] *** Joins: Giovanni (~Giovanni@176.67.166.45)
[15:54:31] <hpc> rust is another one of those languages, for me
[15:55:14] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:8402:4dae:2872:582c)
[15:55:59] <hpc> "grub is crashing, but only at midnight on tuesday!" *swings in on rope* "RUST!" https://xkcd.com/208/
[15:56:16] <fendor[m]> I definitely prefer rust over c++
[15:56:19] <worldhelloworld> Haskell somehow inspires elegance and brevity at the same time for me. Don't know a lot of languages but I doubt they do the same. Certainly not the ones I've known c, c++, python, php 
[15:56:36] <dminuoso> carbolymer: So the garbage collector is, in principle, quite easy. It will trace all reachable objects and copy them to a second region. Anything that was untraceable is considered lost, the entire previous region is freed.
[15:56:51] *** Joins: fef (~thedawn@user/thedawn)
[15:56:54] <geekosaur> sml/nj, ocaml (and thereby probably f#), there are others
[15:57:02] <dminuoso> carbolymer: So yes, if you have memory residency, you're holding references.
[15:57:51] <geekosaur> in particular I noted carbolymer said thread refs were being held, doesn;t that prevent a lot of garbage collection?
[15:59:17] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:8402:4dae:2872:582c) (Ping timeout: 240 seconds)
[15:59:31] *** Quits: hueso_ (~root@user/hueso) (Ping timeout: 245 seconds)
[15:59:41] *** Joins: hueso (~root@user/hueso)
[16:03:21] <dminuoso> carbolymer: Also, I find your usage of IORef and MVar somewhat dubious. I'm not convinced this is thread safe.
[16:04:34] <dminuoso> You probably should be using `newtype Semaphore = Semaphore (TQueue ())` instead
[16:05:32] <carbolymer> geekosaur: good hint
[16:05:33] <carbolymer> >/Note/: in GHC, if you have a 'ThreadId', you essentially have
[16:05:33] <carbolymer> a pointer to the thread itself.  This means the thread itself can\'t be
[16:05:33] <carbolymer> garbage collected until you drop the 'ThreadId'.
[16:05:33] <carbolymer> This misfeature will hopefully be corrected at a later date.
[16:05:42] <dminuoso> In fact, I think Im almost certain that you have a race condition here https://gitlab.com/carbolymer/ghc-threads-memory-leak/-/blob/master/Main.hs#L87
[16:05:43] <carbolymer> so how do I get rid of ThreadId?
[16:05:57] <dminuoso> carbolymer: dont hold on to it.
[16:06:22] <merijn> That, yeah :p
[16:06:36] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[16:06:45] <carbolymer> so instead of forM I should use some kind of ring-buffer-alike structure keeping track of only 500 threads in my case?
[16:06:47] <merijn> And if you need access to a ThreadId, but still want exiting threads to GC you can just use a weak reference
[16:07:00] *** Joins: alx741 (~alx741@157.100.197.240)
[16:07:09] <dminuoso> carbolymer: Okay Im moving from almost certain to certain. That code is racy and will misbehave.
[16:07:15] <dminuoso> Use a TQueue.
[16:07:15] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[16:07:27] *** Quits: hueso (~root@user/hueso) (Ping timeout: 256 seconds)
[16:07:37] <merijn> Any specific reason you're implementing your own Semaphore instead of using the one in base?
[16:08:03] <carbolymer> merijn: I thought that the reason of memory leak was QSem
[16:08:10] <dminuoso> Oh, TSem right.
[16:08:19] <carbolymer> merijn: so I implemented simpler to rule that out, same for async
[16:08:34] <merijn> Have you profiled the code yet?
[16:08:38] <carbolymer> merijn: yes
[16:08:48] <merijn> What does the heap look like?
[16:08:59] <carbolymer> merijn: https://gitlab.com/carbolymer/ghc-threads-memory-leak/-/blob/master/memetest-exe.pdf
[16:09:11] <carbolymer> https://gitlab.com/carbolymer/ghc-threads-memory-leak/-/blob/master/memetest-exe.svg
[16:09:22] *** Quits: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe) (Quit: WeeChat 3.4)
[16:09:26] <carbolymer> dminuoso: which part has race condition in your opinion?
[16:09:31] *** Joins: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe)
[16:09:34] *** Quits: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe) (Remote host closed the connection)
[16:09:36] *** Joins: hueso (~root@user/hueso)
[16:09:42] *** Joins: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe)
[16:09:45] <dminuoso> carbolymer: In between modifying the counter and putting into the MVar.
[16:09:47] <carbolymer> dminuoso: that line you pointed is supposed to just wake-all on mvar
[16:09:53] *** Quits: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe) (Remote host closed the connection)
[16:10:01] *** Joins: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe)
[16:10:11] *** Quits: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe) (Remote host closed the connection)
[16:10:11] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[16:10:13] <carbolymer> dminuoso: this is fine, as I'm checking the counter earlier, after waiting on MVar
[16:10:19] *** Joins: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe)
[16:10:24] <dminuoso> carbolymer: and if an async exception occurs in between?
[16:10:30] <dminuoso> then you have a stuck thread
[16:10:30] *** Quits: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe) (Remote host closed the connection)
[16:10:38] *** Joins: Pickchea (~private@user/pickchea)
[16:10:39] <carbolymer> dminuoso: I've completely ignored exceptions for the purpose of this minimal repro
[16:10:55] <carbolymer> dminuoso: this is just and excerpt  from my prod code, simplified
[16:11:15] <carbolymer> so yeah, you're right about that ;-]
[16:11:40] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[16:11:51] <geekosaur> hm. killThread raises an async exception, no?
[16:12:18] <dminuoso> Yeah, its just `killThread tid = throwTo tid ThreadKilled
[16:12:20] <merijn> I mean, isn't that heap profile just the threads?
[16:12:46] <merijn> 5,000kb in mapConcurrently, divide by 500 = 10kb per thread?
[16:13:00] <merijn> Depending on what threads are doing, that does not sound unreasonable?
[16:13:00] <carbolymer> merijn: makes sense
[16:13:09] <carbolymer> merijn: but the memory usage is 2G
[16:13:24] <dminuoso> carbolymer: not to mention that, semantically, you dont even have fairness guarantees with MVar.
[16:13:38] <merijn> carbolymer: Reported by which tool?
[16:13:40] <carbolymer> dminuoso: I don't need that here
[16:13:46] <carbolymer> merijn: ekg, RTS summary
[16:13:55] <merijn> hmm
[16:14:15] <merijn> If you run with "+RTS -sstderr" what's the max residency it reports?
[16:14:24] <dminuoso> carbolymer: It just seems notoriously unsafe for no good reason. :-)
[16:14:32] <dminuoso> QSem or TSem are great alterantives
[16:14:43] <carbolymer> merijn: https://bpa.st/QEFQ
[16:14:57] <carbolymer> dminuoso: I agree ;-] 
[16:15:12] *** Quits: xff0x (~xff0x@2001:1a81:52ca:1900:ee1e:2dd0:4c63:2ad) (Ping timeout: 250 seconds)
[16:15:23] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Ping timeout: 256 seconds)
[16:15:54] *** Joins: ph88^ (~ph88@2a02:8109:9e00:71d0:696b:f808:8753:ceba)
[16:16:07] *** Joins: xff0x (~xff0x@2001:1a81:52ca:1900:b6d3:a455:a8d2:4188)
[16:16:13] *** Quits: ph88^ (~ph88@2a02:8109:9e00:71d0:696b:f808:8753:ceba) (Read error: Connection reset by peer)
[16:16:18] *** Joins: marinelli (~marinelli@gateway/tor-sasl/marinelli)
[16:17:26] *** Quits: dsrt^ (~dsrt@50-202-219-146-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[16:18:16] <merijn> carbolymer: ok, so that report 900MB max residency, so the 2GB is probably from GC
[16:18:37] <merijn> Since the copy&compact collector uses 2xmax life data in space
[16:19:08] <merijn> carbolymer: oh, hold on
[16:19:12] <carbolymer> merijn: maybe, but the memory usage still grows during the execution of the program
[16:19:20] <merijn> "Productivity  35.4% of total user"
[16:19:25] <merijn> That's *atrocious*
[16:19:46] <carbolymer> yeah, but all that program does is spawn a thread and sleep, 500000 times
[16:19:56] <merijn> Then that's even worse
[16:19:56] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[16:20:01] <merijn> Can I take a blind guess?
[16:20:22] *** Quits: ph88 (~ph88@ip5f5af71f.dynamic.kabel-deutschland.de) (Ping timeout: 272 seconds)
[16:20:23] <merijn> Are you using the threaded backend and -N (i.e. parallelism equal to cores)
[16:20:28] <merijn> ?
[16:20:33] <carbolymer> yes
[16:20:54] <merijn> And GHC 8.10 or something, probably?
[16:21:16] <merijn> The threaded backend still uses parallel GC by default, which has atrocious performance
[16:21:25] <merijn> Disable parallel GC and productivity should skyrocket
[16:22:12] <merijn> Try rerunning with "+RTS -qg:
[16:22:27] <carbolymer> yeah 8.10, latest LTS
[16:22:28] <merijn> Well, "+RTS -qg -sstderr"
[16:22:36] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d) (Ping timeout: 240 seconds)
[16:22:37] *** Quits: cynomys (~cynomys@user/cynomys) (Ping timeout: 240 seconds)
[16:22:40] <merijn> And see what the productivity is then
[16:23:22] <carbolymer> k, lemme try, and remove my hand-written concurrency primitives to prevent being laughet at further ;-]
[16:23:52] <merijn> carbolymer: Productivity is "time not spend doing GC / total time", so 35% productivity means your program spends 65% of its time running GC
[16:24:11] <merijn> Which it also reports above 233s of GC time out of 361s total runtime
[16:28:26] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:28:27] *** Joins: sciencentistguy (~sciencent@hacksoc/ordinary-member)
[16:28:37] *** Joins: alx741 (~alx741@157.100.197.240)
[16:31:32] <carbolymer> merijn: 94%, nice, didn't help with total memory usage though
[16:31:57] <carbolymer> merijn: sequential gc is faster at the cost of longer pause times, do I remember it correctly?
[16:32:42] <geekosaur> depeds on the ghc version; parallel gc got a lot of improvements in 9.2.1
[16:32:58] <merijn> carbolymer: The issue is that parallel GC incurs lots of synchronisation overhead and is only faster in certain niche scenarios (and even there you probably only want 2-4x GC threads, not 24)
[16:33:39] <merijn> geekosaur: Sure, but in general it's a bad default. Part of the decision to make -threaded the default in the future was on the condition that it defaults to non-parallel GC
[16:34:01] <merijn> carbolymer: "It Depends"
[16:34:29] <merijn> carbolymer: The default collector is "copy&compact", which means it copies ALL alive data. So if you have a lot of data, copying in parallel can be faster
[16:34:51] <merijn> In practice, the extra locking/synchronisation often makes it slower for the average program
[16:35:26] <merijn> carbolymer: Well, the question is: Is 900 MB unreasonable for the code you're running. Which is hard to say from your stripped benchmark
[16:36:00] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[16:37:05] <carbolymer> merijn: in my case it was around 20G, so it was unreasonable
[16:37:23] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d)
[16:39:02] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 250 seconds)
[16:39:39] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 252 seconds)
[16:40:41] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:40:43] <merijn> In the example heap plot, most of it was by the code running inside mapConcurrently. So you might wanna investigate what that's allocating for
[16:40:49] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[16:41:09] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:41:13] <carbolymer> merijn: but the heap only explained 5MB out of 2GB
[16:41:15] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[16:41:30] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:41:38] <carbolymer> merijn: I've used weak refs, and memory usage peaked at 20MB
[16:41:49] <carbolymer> so holding of ThreadId was the issue
[16:41:51] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d) (Ping timeout: 268 seconds)
[16:42:06] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[16:42:33] *** Joins: hueso_ (~root@user/hueso)
[16:42:54] *** Quits: hueso (~root@user/hueso) (Read error: Connection reset by peer)
[16:45:37] *** Quits: komikat (~komikat@27.57.144.183) (Remote host closed the connection)
[16:45:58] *** Quits: agumonke` (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7) (Ping timeout: 250 seconds)
[16:46:07] *** Joins: komikat (~komikat@27.57.144.183)
[16:50:55] *** Quits: stiell_ (~stiell@gateway/tor-sasl/stiell) (Ping timeout: 240 seconds)
[16:52:27] *** Joins: stiell_ (~stiell@gateway/tor-sasl/stiell)
[16:52:47] *** Quits: razetime (~quassel@117.254.35.156) (Ping timeout: 256 seconds)
[16:53:06] *** Joins: razetime (~quassel@117.254.35.156)
[16:54:06] *** Joins: alx741 (~alx741@157.100.197.240)
[16:55:12] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d)
[16:56:46] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[17:02:11] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[17:10:37] <dminuoso> Mmm, Im starting to wish Haskell had some way of taking some value of type `data D`, and turn it into a transitive tree of automatic mutable references usable in STRef, play with it, and get back to purity world.
[17:14:35] *** Joins: alx741 (~alx741@157.100.197.240)
[17:14:37] *** Quits: thevishy (~Nishant@2405:201:f005:c007:7c10:43e8:a548:3fb5) (Ping timeout: 240 seconds)
[17:15:08] *** Joins: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net)
[17:15:12] <merijn> dminuoso: So...Ryan's talk at that C++ conference? :p
[17:15:14] *** Joins: thevishy (~Nishant@2405:201:f005:c007:594f:51cf:fa81:524d)
[17:15:39] <dminuoso> merijn: Mmm, what talk is that?
[17:15:51] <merijn> https://www.youtube.com/watch?v=lC5UWG5N8oY
[17:15:56] <merijn> The 2nd half
[17:16:07] <merijn> first half is some haskell for C++ people intro
[17:16:13] <merijn> It's an interesting keynote
[17:16:35] <merijn> And I'm honestly a lot more interested in Ryan's ideas/directions for evolving GHC/Haskell then I am about Dependent Haskell :p
[17:17:26] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[17:18:37] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 240 seconds)
[17:20:03] *** Joins: bahamas (~lucian@84.232.140.52)
[17:21:41] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[17:21:48] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[17:23:00] *** Quits: jespada (~jespada@185.69.145.16) (Read error: Connection reset by peer)
[17:30:05] *** Quits: komikat (~komikat@27.57.144.183) (Remote host closed the connection)
[17:30:30] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[17:31:15] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[17:33:42] *** Joins: alx741 (~alx741@157.100.197.240)
[17:33:58] *** Joins: Guest52 (~Guest52@77-161-122-185.fixed.kpn.net)
[17:35:36] *** Joins: komikat (~komikat@27.57.144.183)
[17:36:17] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 252 seconds)
[17:36:17] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[17:39:48] <bahamas> does anyone have an example of code that uses Maybe or Either in a `do` block? basically, I want to show monadic code that is not IO
[17:40:18] *** Joins: nsyd (~nsyd@2600:380:532a:677e:e080:33ec:6e91:3fb3)
[17:41:11] <merijn> bahamas: lists can be nice for that too
[17:41:53] <merijn> bahamas: Also: Parsec?
[17:43:19] *** Joins: boletales (~boletales@p98076-ipoefx.ipoe.ocn.ne.jp)
[17:44:55] <bahamas> merijn: I find lists a bit hard to grok when used in monadic context
[17:45:12] <bahamas> I'll lookup parsec examples
[17:45:24] *** Quits: xff0x (~xff0x@2001:1a81:52ca:1900:b6d3:a455:a8d2:4188) (Ping timeout: 240 seconds)
[17:46:13] <geekosaur> monadic lists are pretty mind-bending, yes. but they also definitely show the possibilities
[17:46:19] *** Joins: xff0x (~xff0x@2001:1a81:52ca:1900:dc3c:7e7f:c1d0:9383)
[17:46:46] *** Joins: ph88 (~ph88@ip5f5af71f.dynamic.kabel-deutschland.de)
[17:47:11] <geekosaur> I wouldn't say parsec is that great for this, it's only a small addition (recovery from parse failures, or parse alternatives) over IO imo
[17:47:37] <geekosaur> not that it'snecessarily IO, but it *feels* to me more IO-like
[17:48:17] <lechner> Hi, when does     'ghc-pkg field'    return multiple lines, please?
[17:49:11] *** Joins: AlexNoo_ (~AlexNoo@178.34.163.8)
[17:49:13] *** Joins: jespada (~jespada@185.69.145.16)
[17:49:17] <geekosaur> something like "description" which can be multiple lines in the package
[17:49:17] <lechner> 'ghc-pkg --global field'    to be exact
[17:50:57] <geekosaur> https://paste.tomsmeding.com/4ejhLo5Z
[17:51:21] *** Joins: niekvandepas (~niekvande@77-161-122-185.fixed.kpn.net)
[17:51:24] *** Quits: AlexZenon (~alzenon@94.233.240.108) (Ping timeout: 240 seconds)
[17:52:01] *** Quits: Alex_test (~al_test@94.233.240.108) (Ping timeout: 256 seconds)
[17:52:37] *** Quits: AlexNoo (~AlexNoo@94.233.240.108) (Ping timeout: 240 seconds)
[17:52:49] *** Joins: alx741 (~alx741@157.100.197.240)
[17:54:45] <geekosaur> keep in mind that a package db entry looks a lot like a cabal file (and this is not an accidental correspondence) so just about any multi-line field in a cabal file is also a multi-line field in a package db entry
[17:55:06] *** Quits: nsyd (~nsyd@2600:380:532a:677e:e080:33ec:6e91:3fb3) (Read error: Connection reset by peer)
[17:55:07] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[17:55:48] <lechner> can it also return multiple fields, for example if more than one version ois available?
[17:56:40] *** Joins: Alex_test (~al_test@178.34.163.8)
[17:56:42] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:8402:4dae:2872:582c)
[17:56:54] *** Joins: AlexZenon (~alzenon@178.34.163.8)
[17:56:54] <geekosaur> I think it'll complain that the package spec isn't unique in that case. but these days that's rare, because it's a large part of where cabal v1 whent wrong
[17:56:58] <geekosaur> *went
[17:57:22] *** Joins: InternetCitizen (~fuzzypixe@ensi-libre-service-019.ensimag.fr)
[17:57:42] <lechner> can it it return multiple fields, though?
[17:57:52] <geekosaur> and specifically why both cabal v2+ and stack hide packages unless specifically exposed in stack.yaml / cabal file
[17:58:02] <geekosaur> no, each field is unique
[17:58:13] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d) (Ping timeout: 240 seconds)
[17:58:43] *** Joins: alx741 (~alx741@181.199.42.143)
[17:58:46] <geekosaur> even if you have multiple stanzas in a cabal file: executables aren't registered ina package db, and neither are internal libraries
[18:00:12] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 240 seconds)
[18:00:40] *** Joins: nsyd (~psy@2600:380:532a:677e:e080:33ec:6e91:3fb3)
[18:00:58] <lechner> so only one version locally available will be shown? more specifically, is this    hean -n1   needed (disregarding multi-line fields)?     https://sources.debian.org/src/haskell-devscripts/0.16.2/Dh_Haskell.sh/#L157
[18:01:00] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:8402:4dae:2872:582c) (Ping timeout: 240 seconds)
[18:01:05] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[18:01:07] <lechner> head -n 1
[18:01:33] *** AlexNoo_ is now known as AlexNoo
[18:01:47] *** Quits: nsyd (~psy@2600:380:532a:677e:e080:33ec:6e91:3fb3) (Read error: Connection reset by peer)
[18:02:20] *** Quits: InternetCitizen (~fuzzypixe@ensi-libre-service-019.ensimag.fr) (Ping timeout: 272 seconds)
[18:02:55] <geekosaur> not clear. and may be buggy
[18:02:56] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:642a:7bc9:d2b2:1218)
[18:03:04] <lechner> i am fixing
[18:03:29] <geekosaur> the case where there are multiple internal libraies would I think lead to multiple hs-libraries, which might span multiple lines
[18:03:42] <geekosaur> just as an example which I spotted in the script
[18:03:54] *** Joins: waleee (~waleee@h-178-174-193-77.NA.cust.bahnhof.se)
[18:04:25] *** Joins: nsyd (~psy@2600:380:532a:677e:e080:33ec:6e91:3fb3)
[18:04:44] <geekosaur> er, to be clear, not multiple hs-libraries fields, but more than one library listed in the hs-libraries field
[18:05:20] <geekosaur> that's still pretty rare so probably nobody would have noticed yet
[18:05:30] *** Joins: jgeerds (~jgeerds@d53600c5.access.ecotel.net)
[18:06:17] *** Quits: nsyd (~psy@2600:380:532a:677e:e080:33ec:6e91:3fb3) (Read error: Connection reset by peer)
[18:06:25] *** Joins: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fb4d-184.dhcp.inet.fi)
[18:06:27] <lechner> i am more concerned about the field     library-dirs    the script acnticipates multiple values even after truncating via 'head'
[18:06:38] <lechner> sorry poor speller
[18:07:05] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[18:07:59] <geekosaur> that one I would expect to be a single line even with multiple entries, yes. but that expectation might be wrong, and a proper script which allowed for the full generality of cabal files would not make that assumption imo
[18:08:33] <lechner> i tried to test locally but only ever get one line
[18:09:12] <geekosaur> since I only have the global db on my system and it only contains the libs shipped with ghc, it's hardfor me to test. maybe tomsmeding still has his dump of hackage that he was spelunking in, to check for such things?
[18:09:36] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:642a:7bc9:d2b2:1218) (Ping timeout: 250 seconds)
[18:10:02] <geekosaur> having played a bit with both cabal files andpackage db entries, it'snot an assumption I would trust
[18:10:17] <lechner> that info mey be enough. debian's tooling only looks at the global db 
[18:10:41] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Remote host closed the connection)
[18:11:01] <geekosaur> with that limited list, it's *probably* safe
[18:11:05] <lechner> what is the meaning of    library-dirs   please?
[18:11:18] *** Joins: nsyd (~psy@2600:380:532a:677e:e080:33ec:6e91:3fb3)
[18:11:26] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[18:11:37] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 240 seconds)
[18:11:40] <geekosaur> entries in that become -L options during linking
[18:11:53] <tomsmeding> geekosaur: wasn't me, was someone else
[18:12:06] <geekosaur> oh, sorry
[18:12:36] *** Quits: nsyd (~psy@2600:380:532a:677e:e080:33ec:6e91:3fb3) (Read error: Connection reset by peer)
[18:12:36] *** Joins: niekvand1pas (~niekvande@77-161-122-185.fixed.kpn.net)
[18:12:45] *** Quits: ph88 (~ph88@ip5f5af71f.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[18:13:08] *** Joins: ph88 (~ph88@2a02:8109:9e00:71d0:6dce:352d:13f7:bf5c)
[18:14:01] *** Joins: agumonke` (~user@88.163.231.79)
[18:14:34] <tomsmeding> geekosaur: was dsal https://ircbrowse.tomsmeding.com/day/lchaskell/2021/11/26?id=292436#trid292436
[18:14:47] <tomsmeding> but I think they threw away their dump
[18:16:11] <geekosaur> actually I'm wrong. that'sthe directory the Haskell (and occasionally C/other language, if embedded copies as is common for Windows targets) libraries associated with the package live
[18:16:29] *** Joins: bahamas (~lucian@84.232.140.52)
[18:16:32] <turlando> Parsers in Haskell are not scarce at all, but is there any "bidirectional" parser/serializer? E.g. allowing to easily describe the structure of something, converting it into a data structure, allowing manipulation and eventually serializing it back?
[18:16:43] <geekosaur> may still be used as an-L option, largely because of macos
[18:16:44] <turlando> (thinking of it mostly for binary formats)
[18:17:11] <geekosaur> there are a couple, yes
[18:17:21] <geekosaur> I forget the proper name for it
[18:18:45] <lechner> geekosaur tomsmeding: thanks!
[18:21:16] *** Joins: nsyd (~psy@2600:380:532a:677e:e080:33ec:6e91:3fb3)
[18:21:19] <geekosaur> apparently that is the term. but it gets no hits on hackage, whereas I recall something like 3 such packages on hackage
[18:21:40] <geekosaur> roundtripping is the other common term used
[18:22:24] <turlando> Thanks, I didn't know about roundtripping, will google harder
[18:23:02] *** Joins: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net)
[18:24:25] <tomsmeding> there was a thread on haskell-cafe a while back started by safinaskar asking about bidirectional parsing libraries
[18:24:48] <tomsmeding> https://mail.haskell.org/pipermail/haskell-cafe/2021-January/133275.html
[18:24:55] *** Joins: Pickchea (~private@user/pickchea)
[18:25:29] *** Quits: agumonke` (~user@88.163.231.79) (Ping timeout: 256 seconds)
[18:25:57] <dminuoso> merijn: Ill have to take a look at it. The talk is a bit long to do it now, perhaps later today
[18:26:09] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d)
[18:26:24] <janus> turlando: autodocodec derives both FromJSON/ToJSON from a schema. you can of course supply toText/fromText methods for custom types that don't match, but this would get caught by property tests
[18:26:26] <dminuoso> Right now my grief is that I have this data structure with a single IORef deep inside - it'd be ridiculous to duplicate the hierarchy of nested data types just to have one flavor with IORef and one without.
[18:26:49] <dminuoso> So instead, I use modifyIORef in phase 1, and then after phase 1 I unsafePerformIO my way out of this
[18:26:58] <dminuoso> It will probably bite me back sooner or later *shrugs*
[18:27:29] <janus> turlando: imho if the schema is unified in one value, it should be easier to run roundtrip tests for all of them. though even if a serializer/deserializer is separate, with the right culture/discipline you could also enforce roundtripping
[18:28:23] *** Quits: yauhsienhuangtw (~Yau-Hsien@61-231-39-29.dynamic-ip.hinet.net) (Read error: Connection reset by peer)
[18:28:47] <turlando> Thanks tomsmeding, that's interesting
[18:28:55] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 240 seconds)
[18:29:31] <turlando> janus: right now my primary concern is just to avoid writing a lot of code actually (lol)
[18:29:32] <dminuoso> And now Im questioning my sanity for writing `__unsafeIORef :: Getter (IO a) a`
[18:30:02] <janus> turlando: well look at the autodocodec examples, imho they cut your code size in half compared to pure aeson
[18:30:21] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d) (Ping timeout: 245 seconds)
[18:31:01] <janus> turlando: i think technically autodocodec could support serialization to e.g. CBOR instead of JSON. because the record definition could be portable across serialization mechanisms
[18:31:43] <janus> at least it is for our internal H-E-B library that does the same thing...
[18:31:50] <turlando> janus: will definitely check it, my primary requirements is playing nice with binary data (so ByteString I guess?)
[18:32:32] <janus> turlando: right, what i am thinking is: look at how they derive ToJSON via Autodocodec. Surely an instance for some ByteString serializer could also be defined like that
[18:33:20] <turlando> Yep, thank you a lot again, gonna rest a bit and read the examples later
[18:37:55] *** Joins: shapr` (~user@pool-173-73-44-186.washdc.fios.verizon.net)
[18:39:53] *** Quits: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[18:43:45] *** Joins: Psybur (~Psybur@mobile-166-170-32-247.mycingular.net)
[18:44:27] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d)
[18:46:32] *** Quits: jgeerds (~jgeerds@d53600c5.access.ecotel.net) (Ping timeout: 240 seconds)
[18:46:35] *** Joins: dextaa_ (~dextaa@user/dextaa)
[18:47:32] *** Quits: bliminse (~bliminse@host109-152-150-162.range109-152.btcentralplus.com) (Quit: leaving)
[18:49:26] *** Quits: nsyd (~psy@2600:380:532a:677e:e080:33ec:6e91:3fb3) (Read error: Connection reset by peer)
[18:50:33] *** Quits: komikat (~komikat@27.57.144.183) (Remote host closed the connection)
[18:50:42] *** Joins: nsyd (~psy@2600:380:532a:677e:e080:33ec:6e91:3fb3)
[18:52:20] *** Quits: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net) (Quit: WeeChat 3.3)
[18:53:38] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Ping timeout: 272 seconds)
[18:57:10] *** Joins: agumonke` (~user@88.163.231.79)
[18:58:49] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[18:59:06] *** Joins: Vajb (~Vajb@2001:999:600:5133:28cb:83bf:5ecf:4314)
[18:59:47] *** Joins: yauhsien (~yauhsien@61-231-39-29.dynamic-ip.hinet.net)
[19:00:13] *** Joins: yauhsien_ (~Yau-Hsien@61-231-39-29.dynamic-ip.hinet.net)
[19:05:32] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[19:06:30] *** Joins: Kevin578 (~Kevin578@pool-173-76-179-30.bstnma.fios.verizon.net)
[19:08:36] *** Joins: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net)
[19:11:36] *** Joins: Sgeo (~Sgeo@user/sgeo)
[19:11:59] *** Quits: nsyd (~psy@2600:380:532a:677e:e080:33ec:6e91:3fb3) (Read error: Connection reset by peer)
[19:14:44] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[19:17:10] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[19:17:51] *** Joins: InternetCitizen (~fuzzypixe@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[19:17:54] *** Joins: nsyd (~psy@2600:380:532a:677e:e080:33ec:6e91:3fb3)
[19:21:20] *** Quits: Vajb (~Vajb@2001:999:600:5133:28cb:83bf:5ecf:4314) (Read error: Connection reset by peer)
[19:21:45] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[19:22:04] *** Quits: nsyd (~psy@2600:380:532a:677e:e080:33ec:6e91:3fb3) (Read error: Connection reset by peer)
[19:23:17] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 256 seconds)
[19:25:04] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[19:25:36] *** Joins: nsyd (~psy@2600:380:532a:677e:e080:33ec:6e91:3fb3)
[19:25:47] *** Quits: InternetCitizen (~fuzzypixe@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Ping timeout: 256 seconds)
[19:28:18] *** Quits: nsyd (~psy@2600:380:532a:677e:e080:33ec:6e91:3fb3) (Read error: Connection reset by peer)
[19:30:15] *** Quits: cherryblossom[m] (~cherryblo@2001:470:69fc:105::b789) (Quit: You have been kicked for being idle)
[19:34:01] *** Joins: nsyd (~psy@2600:380:532a:677e:e080:33ec:6e91:3fb3)
[19:34:07] *** Quits: nsyd (~psy@2600:380:532a:677e:e080:33ec:6e91:3fb3) (Read error: Connection reset by peer)
[19:35:15] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[19:39:10] *** Quits: razetime (~quassel@117.254.35.156) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:39:26] *** Joins: jgeerds (~jgeerds@d53600c5.access.ecotel.net)
[19:41:09] *** Joins: nsyd (~psy@2600:380:532a:677e:e080:33ec:6e91:3fb3)
[19:43:16] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 245 seconds)
[19:43:20] *** Quits: nsyd (~psy@2600:380:532a:677e:e080:33ec:6e91:3fb3) (Read error: Connection reset by peer)
[19:43:51] *** Quits: lortabac (~lortabac@2a01:e0a:541:b8f0:b437:a10d:f085:84a8) (Quit: WeeChat 2.8)
[19:44:13] *** Quits: shailangsa (~shailangs@host86-185-102-18.range86-185.btcentralplus.com) (Ping timeout: 256 seconds)
[19:44:48] *** Joins: nsyd (~psy@2600:380:532a:677e:e080:33ec:6e91:3fb3)
[19:45:26] *** Quits: joo-_ (~joo-_@fsf/member/joo--) (Quit: leaving)
[19:46:51] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d) (Ping timeout: 268 seconds)
[19:47:35] *** Joins: feliix42 (~felix@gibbs.uberspace.de)
[19:49:04] *** Joins: Pickchea (~private@user/pickchea)
[19:49:19] *** Quits: feliix42_ (~felix@gibbs.uberspace.de) (Ping timeout: 268 seconds)
[19:50:20] *** Quits: nsyd (~psy@2600:380:532a:677e:e080:33ec:6e91:3fb3) (Read error: Connection reset by peer)
[19:51:16] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 272 seconds)
[19:51:37] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[19:53:47] *** Quits: Kevin578 (~Kevin578@pool-173-76-179-30.bstnma.fios.verizon.net) (Ping timeout: 252 seconds)
[19:53:47] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:8402:4dae:2872:582c)
[19:55:54] *** Joins: Techcable (~Techcable@168.235.93.147)
[19:56:08] *** Joins: nsyd (~psy@2600:380:532a:677e:e080:33ec:6e91:3fb3)
[19:56:10] *** Quits: nsyd (~psy@2600:380:532a:677e:e080:33ec:6e91:3fb3) (Read error: Connection reset by peer)
[19:58:07] *** Joins: joo-_ (~joo-_@80-62-116-157-mobile.dk.customer.tdc.net)
[19:58:07] *** Quits: joo-_ (~joo-_@80-62-116-157-mobile.dk.customer.tdc.net) (Changing host)
[19:58:07] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[19:58:41] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[19:58:50] *** Quits: thevishy (~Nishant@2405:201:f005:c007:594f:51cf:fa81:524d) (Quit: Leaving)
[20:01:09] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 250 seconds)
[20:03:18] *** Joins: nsyd (~psy@2600:380:532a:677e:e080:33ec:6e91:3fb3)
[20:03:36] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[20:04:35] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[20:05:05] *** Quits: yauhsien (~yauhsien@61-231-39-29.dynamic-ip.hinet.net) (Remote host closed the connection)
[20:05:25] *** Quits: nsyd (~psy@2600:380:532a:677e:e080:33ec:6e91:3fb3) (Read error: Connection reset by peer)
[20:05:28] *** Joins: Kevin578 (~Kevin578@pool-173-76-179-30.bstnma.fios.verizon.net)
[20:06:01] *** Joins: yauhsien (~yauhsien@61-231-39-29.dynamic-ip.hinet.net)
[20:07:06] *** Quits: justAstache (~justache@user/justache) (Ping timeout: 272 seconds)
[20:07:08] *** Quits: zfnmxt (~zfnmxtzfn@2001:470:69fc:105::2b32) (Changing host)
[20:07:08] *** Joins: zfnmxt (~zfnmxtzfn@user/zfnmxt)
[20:09:25] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[20:10:32] *** Quits: yauhsien (~yauhsien@61-231-39-29.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[20:10:37] *** Joins: nsyd (~psy@2600:380:532a:677e:e080:33ec:6e91:3fb3)
[20:10:39] *** Quits: nsyd (~psy@2600:380:532a:677e:e080:33ec:6e91:3fb3) (Read error: Connection reset by peer)
[20:11:33] *** Joins: justAstache (~justache@user/justache)
[20:11:44] *** Joins: jtomas (~jtomas@210.red-88-24-179.staticip.rima-tde.net)
[20:11:50] *** Joins: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net)
[20:14:01] *** Joins: komikat (~komikat@27.57.144.183)
[20:14:06] *** Quits: `2jt (~jtomas@210.red-88-24-179.staticip.rima-tde.net) (Ping timeout: 245 seconds)
[20:14:15] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[20:14:32] *** Joins: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe)
[20:16:35] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d)
[20:16:36] *** Quits: jgeerds (~jgeerds@d53600c5.access.ecotel.net) (Ping timeout: 272 seconds)
[20:17:17] *** Parts: danso (~danso@danso.ca) ()
[20:21:10] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[20:21:34] *** Joins: nsyd (~psy@2600:380:532a:677e:e080:33ec:6e91:3fb3)
[20:21:53] *** Quits: AlexZenon (~alzenon@178.34.163.8) (Ping timeout: 256 seconds)
[20:21:53] *** Quits: Alex_test (~al_test@178.34.163.8) (Ping timeout: 256 seconds)
[20:23:30] *** Quits: nsyd (~psy@2600:380:532a:677e:e080:33ec:6e91:3fb3) (Read error: Connection reset by peer)
[20:23:41] *** Joins: shailangsa_ (~shailangs@host86-186-133-59.range86-186.btcentralplus.com)
[20:25:37] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 240 seconds)
[20:25:58] *** Joins: AlexZenon (~alzenon@178.34.163.8)
[20:25:59] *** Joins: Alex_test (~al_test@178.34.163.8)
[20:26:36] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[20:26:58] *** Joins: nsyd (~psy@2600:380:532a:677e:e080:33ec:6e91:3fb3)
[20:29:11] *** Quits: nsyd (~psy@2600:380:532a:677e:e080:33ec:6e91:3fb3) (Read error: Connection reset by peer)
[20:29:29] *** Joins: nsyd (~psy@2600:380:532a:677e:e080:33ec:6e91:3fb3)
[20:31:07] *** Joins: xkuru (~xkuru@user/xkuru)
[20:34:04] *** Quits: nsyd (~psy@2600:380:532a:677e:e080:33ec:6e91:3fb3) (Read error: Connection reset by peer)
[20:34:25] *** Joins: nsyd (~psy@2600:380:532a:677e:e080:33ec:6e91:3fb3)
[20:36:05] *** Quits: nsyd (~psy@2600:380:532a:677e:e080:33ec:6e91:3fb3) (Read error: Connection reset by peer)
[20:37:27] *** Joins: dhruvasagar (~dhruvasag@49.207.194.244)
[20:41:27] *** Joins: nsyd (~psy@2600:380:532a:677e:e080:33ec:6e91:3fb3)
[20:42:30] *** Joins: Akiva (~Akiva@user/Akiva)
[20:42:33] *** Quits: nsyd (~psy@2600:380:532a:677e:e080:33ec:6e91:3fb3) (Read error: Connection reset by peer)
[20:45:02] *** Quits: agumonke` (~user@88.163.231.79) (Read error: Connection reset by peer)
[20:45:56] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:46:29] *** Joins: nsyd (~psy@2600:380:532a:677e:e080:33ec:6e91:3fb3)
[20:47:21] *** Joins: agumonke` (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7)
[20:48:03] *** Quits: nsyd (~psy@2600:380:532a:677e:e080:33ec:6e91:3fb3) (Read error: Connection reset by peer)
[20:48:43] *** Joins: bahamas (~lucian@84.232.140.52)
[20:48:46] *** Joins: nsyd (~psy@2600:380:532a:677e:e080:33ec:6e91:3fb3)
[20:54:16] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[20:56:19] *** Parts: marinelli (~marinelli@gateway/tor-sasl/marinelli) ()
[20:58:02] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[20:58:37] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 240 seconds)
[21:01:42] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[21:02:30] *** Joins: vorpuni (~pvorp@2001:861:3881:c690:7bc1:a04c:2ba6:98e5)
[21:02:37] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[21:03:21] *** Quits: nsyd (~psy@2600:380:532a:677e:e080:33ec:6e91:3fb3) (Quit: IM OUT)
[21:08:35] *** shapr` is now known as shapr
[21:09:09] *** Joins: emf (~emf@2620:10d:c090:400::5:d31)
[21:13:36] *** Quits: emf (~emf@2620:10d:c090:400::5:d31) (Client Quit)
[21:15:45] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[21:17:37] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 240 seconds)
[21:19:12] *** Joins: bliminse (~bliminse@host109-152-150-162.range109-152.btcentralplus.com)
[21:19:49] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:ed67:bb1e:cd86:7d7d) (Ping timeout: 240 seconds)
[21:19:54] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[21:21:04] *** Quits: ph88 (~ph88@2a02:8109:9e00:71d0:6dce:352d:13f7:bf5c) (Quit: Leaving)
[21:21:09] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[21:21:15] *** Joins: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com)
[21:21:24] *** Quits: Kevin578 (~Kevin578@pool-173-76-179-30.bstnma.fios.verizon.net) (Ping timeout: 240 seconds)
[21:22:52] *** Quits: dextaa_ (~dextaa@user/dextaa) (Remote host closed the connection)
[21:23:09] *** Quits: komikat (~komikat@27.57.144.183) (Remote host closed the connection)
[21:24:11] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[21:26:49] *** Quits: dhruvasagar (~dhruvasag@49.207.194.244) (Ping timeout: 256 seconds)
[21:27:46] *** Joins: dhruvasagar (~dhruvasag@49.207.194.244)
[21:27:49] *** Quits: alp (~alp@user/alp) (Ping timeout: 250 seconds)
[21:28:39] *** Quits: mbuf (~Shakthi@122.174.215.136) (Quit: Leaving)
[21:28:52] *** Joins: Kevin578 (~Kevin578@pool-173-76-179-30.bstnma.fios.verizon.net)
[21:32:23] *** Joins: yuvi (~uv125@192.54.96.185)
[21:32:26] *** Quits: dhruvasagar (~dhruvasag@49.207.194.244) (Ping timeout: 245 seconds)
[21:32:32] *** Quits: yuvi (~uv125@192.54.96.185) (Client Quit)
[21:32:35] *** Quits: niekvandepas (~niekvande@77-161-122-185.fixed.kpn.net) (Read error: Connection reset by peer)
[21:33:01] *** Joins: niekvandepas (~niekvande@77-161-122-185.fixed.kpn.net)
[21:33:17] *** Joins: dhruvasagar (~dhruvasag@49.207.194.244)
[21:36:42] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[21:37:24] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 240 seconds)
[21:37:26] *** Quits: niekvand1pas (~niekvande@77-161-122-185.fixed.kpn.net) (Ping timeout: 245 seconds)
[21:37:44] *** Quits: niekvandepas (~niekvande@77-161-122-185.fixed.kpn.net) (Ping timeout: 252 seconds)
[21:37:49] *** Quits: Guest52 (~Guest52@77-161-122-185.fixed.kpn.net) (Ping timeout: 256 seconds)
[21:38:07] *** Quits: dhruvasagar (~dhruvasag@49.207.194.244) (Ping timeout: 256 seconds)
[21:38:09] *** Joins: econo (uid147250@user/econo)
[21:38:24] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[21:38:33] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[21:38:49] *** Joins: dhruvasagar (~dhruvasag@49.207.194.244)
[21:43:32] *** Quits: dhruvasagar (~dhruvasag@49.207.194.244) (Ping timeout: 240 seconds)
[21:44:20] *** Joins: dhruvasagar (~dhruvasag@49.207.194.244)
[21:49:03] *** Quits: dhruvasagar (~dhruvasag@49.207.194.244) (Ping timeout: 250 seconds)
[21:49:16] *** Joins: analognoise (~analognoi@185.229.59.133)
[21:49:51] *** Joins: dhruvasagar (~dhruvasag@49.207.194.244)
[21:50:24] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[21:51:09] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[21:54:32] *** Quits: dhruvasagar (~dhruvasag@49.207.194.244) (Ping timeout: 240 seconds)
[21:55:20] *** Joins: dhruvasagar (~dhruvasag@49.207.194.244)
[21:56:20] *** Joins: Tuplanolla (~Tuplanoll@91-159-69-98.elisa-laajakaista.fi)
[21:56:40] *** Quits: olle (~olle@i5E866D89.versanet.de) (Ping timeout: 272 seconds)
[21:59:55] *** Quits: dhruvasagar (~dhruvasag@49.207.194.244) (Ping timeout: 256 seconds)
[22:00:36] *** Joins: niekvandepas (~niekvande@77-161-122-185.fixed.kpn.net)
[22:00:52] *** Joins: dhruvasagar (~dhruvasag@49.207.194.244)
[22:04:43] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[22:05:01] *** Quits: niekvandepas (~niekvande@77-161-122-185.fixed.kpn.net) (Ping timeout: 256 seconds)
[22:05:24] *** Quits: dhruvasagar (~dhruvasag@49.207.194.244) (Ping timeout: 240 seconds)
[22:06:10] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[22:06:23] *** Joins: dhruvasagar (~dhruvasag@49.207.194.244)
[22:09:06] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 252 seconds)
[22:10:43] *** Joins: niekvandepas (~niekvande@77-161-122-185.fixed.kpn.net)
[22:10:46] *** Joins: Topsi (~Tobias@dyndsl-091-249-083-198.ewe-ip-backbone.de)
[22:11:15] *** Quits: dhruvasagar (~dhruvasag@49.207.194.244) (Ping timeout: 256 seconds)
[22:11:53] *** Joins: dhruvasagar (~dhruvasag@49.207.194.244)
[22:12:05] *** Joins: niekvand1pas (~niekvande@77-161-122-185.fixed.kpn.net)
[22:14:13] *** Joins: bahamas (~lucian@84.232.140.52)
[22:16:41] *** Quits: dhruvasagar (~dhruvasag@49.207.194.244) (Ping timeout: 256 seconds)
[22:17:25] *** Joins: dhruvasagar (~dhruvasag@49.207.194.244)
[22:17:34] *** Joins: deadmarshal (~deadmarsh@95.38.113.215)
[22:17:51] *** Quits: Kevin578 (~Kevin578@pool-173-76-179-30.bstnma.fios.verizon.net) (Ping timeout: 245 seconds)
[22:19:29] *** Quits: niekvandepas (~niekvande@77-161-122-185.fixed.kpn.net) (Ping timeout: 256 seconds)
[22:19:37] *** Quits: niekvand1pas (~niekvande@77-161-122-185.fixed.kpn.net) (Ping timeout: 240 seconds)
[22:21:57] *** Quits: dhruvasagar (~dhruvasag@49.207.194.244) (Ping timeout: 240 seconds)
[22:22:02] *** Quits: jtomas (~jtomas@210.red-88-24-179.staticip.rima-tde.net) (Ping timeout: 240 seconds)
[22:23:55] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[22:24:22] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[22:25:41] *** Joins: stef204 (~stef204@user/stef204)
[22:28:27] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[22:29:09] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 256 seconds)
[22:29:47] *** Quits: stiell_ (~stiell@gateway/tor-sasl/stiell) (Remote host closed the connection)
[22:30:11] *** Joins: stiell_ (~stiell@gateway/tor-sasl/stiell)
[22:30:17] *** Quits: deadmarshal (~deadmarsh@95.38.113.215) (Ping timeout: 240 seconds)
[22:34:10] *** Joins: dhruvasagar (~dhruvasag@49.207.194.244)
[22:36:27] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[22:36:52] *** Joins: emf (~emf@2620:10d:c090:400::5:b0af)
[22:39:09] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[22:40:26] *** Quits: fendor_ (~fendor@77.119.204.89.wireless.dyn.drei.com) (Remote host closed the connection)
[22:40:42] *** Quits: jespada (~jespada@185.69.145.16) (Read error: Connection reset by peer)
[22:41:26] *** Joins: niekvandepas (~niekvande@77-161-122-185.fixed.kpn.net)
[22:41:27] *** Joins: niekvand1pas (~niekvande@77-161-122-185.fixed.kpn.net)
[22:41:47] <hololeap> anyone know of a library that can _remove_ ansi control/color codes?
[22:43:35] *** Joins: jtomas (~jtomas@210.red-88-24-179.staticip.rima-tde.net)
[22:44:10] *** Quits: dhruvasagar (~dhruvasag@49.207.194.244) (Ping timeout: 272 seconds)
[22:44:49] <geekosaur> don't know that it needs a library; they're pretty well defined. \e[\??[\d;]*[^\d;] gets pretty much anything you'd normally encounter
[22:46:06] <geekosaur> there are a few others, notably \e].*\a for status lines and such
[22:47:06] <geekosaur> (\e is escape, \a is ctrl+g)
[22:47:18] <tomsmeding> if I'm not mistaken, the format is \e[^\x04-\x7e]*[\x04-\x7e]
[22:47:32] <tomsmeding> judging from some code I wrote long ago
[22:47:49] <tomsmeding> um, correction, \e\[[^\x04-\x7e]*[\x04-\x7e]
[22:48:09] <tomsmeding> um, correction, \e\[[^\x40-\x7e]*[\x40-\x7e]
[22:48:14] <tomsmeding> apparently I'm not really awake anymore
[22:48:34] *** Joins: Kevin578 (~Kevin578@pool-173-76-179-30.bstnma.fios.verizon.net)
[22:48:37] <geekosaur> was gonna say there
[22:48:45] <tomsmeding> "that's a pretty wide range"?
[22:48:57] <tomsmeding> in particular note that digits are <0x40
[22:49:03] <sm> https://hackage.haskell.org/package/hledger-lib-1.24.1/docs/Hledger-Utils-String.html#v:stripAnsi, hololeap
[22:49:41] <geekosaur> and very very rarely you'll encounter something using CSI instead of \e\[ but I don't recall what byte CSI is any more
[22:49:54] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[22:50:15] <tomsmeding> sm: doesn't catch \e[?1049h, which is 'tput smcup' (alternate screen)
[22:50:56] <sm> noted, thanks
[22:52:51] *** Joins: zebrag (~chris@user/zebrag)
[22:53:20] <geekosaur> looks like ansi doesn't bless the single-byte CSI anyway
[22:55:11] *** Quits: cfricke (~cfricke@user/cfricke) (Ping timeout: 256 seconds)
[22:55:24] *** Joins: dextaa_ (~dextaa@user/dextaa)
[22:55:57] <tomsmeding> so according to the source https://www.ecma-international.org/wp-content/uploads/ECMA-48_5th_edition_june_1991.pdf , section 5.4, it's (\x1b\[|\x9b)[\x30-\x3f]*[\x20-\x2f]*[\x40-\x7e]
[22:56:20] <tomsmeding> (note the byte notation they use: n/m for n*16+m)
[22:56:34] <tomsmeding> (hexadecimal notation is clearly an improvement)
[22:59:08] *** Quits: niekvand1pas (~niekvande@77-161-122-185.fixed.kpn.net) (Ping timeout: 252 seconds)
[23:00:01] <geekosaur> yeh, I found a DEC reference that did the same thing
[23:00:14] *** Quits: niekvandepas (~niekvande@77-161-122-185.fixed.kpn.net) (Ping timeout: 252 seconds)
[23:01:28] *** Joins: Erutuon (~Erutuon@user/erutuon)
[23:02:12] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[23:05:10] *** Joins: haveo (~haveo@sl35.iuwt.fr)
[23:05:13] *** Joins: niekvandepas (~niekvande@77-161-122-185.fixed.kpn.net)
[23:05:48] *** Joins: niekvand1pas (~niekvande@77-161-122-185.fixed.kpn.net)
[23:05:58] *** Quits: Kevin578 (~Kevin578@pool-173-76-179-30.bstnma.fios.verizon.net) (Ping timeout: 260 seconds)
[23:07:47] *** Quits: haveo (~haveo@sl35.iuwt.fr) (Client Quit)
[23:07:56] *** Joins: haveo (~haveo@sl35.iuwt.fr)
[23:09:48] *** Quits: niekvand1pas (~niekvande@77-161-122-185.fixed.kpn.net) (Ping timeout: 240 seconds)
[23:10:08] *** Quits: niekvandepas (~niekvande@77-161-122-185.fixed.kpn.net) (Ping timeout: 272 seconds)
[23:14:18] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[23:15:38] *** Joins: niekvandepas (~niekvande@77-161-122-185.fixed.kpn.net)
[23:16:03] *** Quits: Topsi (~Tobias@dyndsl-091-249-083-198.ewe-ip-backbone.de) (Read error: Connection reset by peer)
[23:16:11] *** Joins: jgeerds (~jgeerds@d53600c5.access.ecotel.net)
[23:16:19] *** Quits: jgeerds (~jgeerds@d53600c5.access.ecotel.net) (Remote host closed the connection)
[23:19:01] *** Joins: cjb (~cjb@user/cjb)
[23:19:36] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[23:20:11] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Quit: ec)
[23:20:13] *** Quits: niekvandepas (~niekvande@77-161-122-185.fixed.kpn.net) (Ping timeout: 268 seconds)
[23:20:56] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:21:18] *** Quits: stef204 (~stef204@user/stef204) (Quit: WeeChat 3.4)
[23:21:33] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 272 seconds)
[23:22:28] *** Joins: abhixec (~abhinav@c-67-169-139-16.hsd1.ca.comcast.net)
[23:23:41] *** Lord_of_Life_ is now known as Lord_of_Life
[23:24:20] *** Joins: Kevin578 (~Kevin578@pool-173-76-179-30.bstnma.fios.verizon.net)
[23:24:24] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[23:24:55] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Ping timeout: 256 seconds)
[23:25:27] *** Joins: niekvandepas (~niekvande@77-161-122-185.fixed.kpn.net)
[23:30:01] *** Quits: niekvandepas (~niekvande@77-161-122-185.fixed.kpn.net) (Ping timeout: 256 seconds)
[23:31:59] *** Quits: abhixec (~abhinav@c-67-169-139-16.hsd1.ca.comcast.net) (Remote host closed the connection)
[23:32:41] *** Joins: stef204 (~stef204@user/stef204)
[23:32:43] *** Quits: coot (~coot@213.134.190.95) (Quit: coot)
[23:33:16] *** Joins: coot (~coot@213.134.190.95)
[23:35:25] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[23:35:34] *** Joins: niekvandepas (~niekvande@77-161-122-185.fixed.kpn.net)
[23:35:55] *** Joins: niekvand1pas (~niekvande@77-161-122-185.fixed.kpn.net)
[23:39:57] *** Quits: Kevin578 (~Kevin578@pool-173-76-179-30.bstnma.fios.verizon.net) (Ping timeout: 268 seconds)
[23:40:13] *** Quits: niekvandepas (~niekvande@77-161-122-185.fixed.kpn.net) (Ping timeout: 256 seconds)
[23:40:17] *** Quits: niekvand1pas (~niekvande@77-161-122-185.fixed.kpn.net) (Ping timeout: 240 seconds)
[23:40:35] *** Joins: briandaed (~root@109.95.142.93.r.toneticgroup.pl)
[23:46:03] *** Joins: niekvandepas (~niekvande@77-161-122-185.fixed.kpn.net)
[23:47:42] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.4)
[23:50:40] *** Quits: niekvandepas (~niekvande@77-161-122-185.fixed.kpn.net) (Ping timeout: 272 seconds)
[23:54:58] *** Joins: AlexZenon_2 (~alzenon@178.34.163.8)
[23:56:39] *** Quits: AlexZenon (~alzenon@178.34.163.8) (Ping timeout: 256 seconds)
[23:57:28] *** Joins: dhruvasagar (~dhruvasag@49.207.194.244)
[23:57:33] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 256 seconds)
[23:58:10] *** Joins: niekvandepas (~niekvande@77-161-122-185.fixed.kpn.net)
