[00:00:28] <SamuelMarks> The annoying thing is lack of standard error handling in C/POSIX. Most things set the errno some set the return code (like `bind`)
[00:00:32] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[00:01:02] <SamuelMarks> So I can't just return errno as return code if errno is set
[00:01:09] <nitrix> SamuelMarks, The application has a role to fulfill towards to user, including reporting when something is going awry. If it cannot fulfill even that role, that's probably the right time to decide to abort.
[00:01:18] <ioxzev1z> SamuelMarks, int ret = foo(); if(ret == -1) { fprintf(stderr, "%s\n", "foo() failed."); exit(EXIT_FAILURE); }
[00:01:19] <NRK> libpng writes to stderr
[00:01:31] <NRK> i need to figure out how to stop it from doing that
[00:01:39] <clarity> evil
[00:01:47] <NRK> it's annoying
[00:02:14] <nitrix> SamuelMarks, Your functions are able to return error codes. I don't recommend touching errno.
[00:03:43] <ioxzev1z> SamuelMarks, you have two types of errors. Ones that you can recover from (invalid input, etc), and others that you cannot (no free memory for allocation, etc). On the latter you just end the program as you can't actually do anything about it
[00:04:57] <nitrix> I would've preferred division by zero, or dereferencing a NULL pointer as a unrecoverable error.
[00:05:27] <SamuelMarks> Wrote a macro so now it's actually 16.66% shorter but has all the error handling I could think of: https://gist.github.com/SamuelMarks/3f386b61be78895ab8e93ad57b41e802#file-server_attempt_1-c
[00:05:27] <nitrix>  No available memory is manageable most of the time. If it's a server, you can reject incoming connections until the situation improves.
[00:05:28] <candide> Title of SamuelMarks's link: Experiments with simple HTTP socket server in C · GitHub
[00:05:33] *** Quits: tiotags (~tiotags@user/tiotags) (Quit: Leaving)
[00:05:55] <ioxzev1z> nitrix, those are mistakes not errors.
[00:06:24] <ioxzev1z> nitrix, dereferencing a NULL pointer is a mistake that the programmer makes. No free memory is out of their control
[00:06:33] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[00:06:36] <pgib> NRK - http://www.libpng.org/pub/png/libpng-manual.txt
[00:07:00] <pgib> In particular png_set_error_fn
[00:07:29] *** Joins: Betal (~Betal@user/betal)
[00:07:29] *** Joins: donk (~donk@2a02:3030:409:baa6:91f1:d79f:8fc5:e173)
[00:07:34] <ioxzev1z> SamuelMarks, use getaddrinfo() and sockaddr_storage, not what you have right now
[00:08:44] <NRK> hmm, thanks.
[00:08:44] *** Joins: seninha (~seninha@user/seninha)
[00:08:47] *** Quits: Cleverness (~Clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Quit: Leaving)
[00:09:04] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-9959-7557-180e-ce0c.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[00:09:28] <SamuelMarks> ioxzev1z - That's what I tried in server_attempt_0.c
[00:09:34] <ioxzev1z> SamuelMarks, gimme link
[00:09:43] <SamuelMarks> same link, scroll up in gist
[00:10:00] <ioxzev1z> SamuelMarks, yeah that is much better than _1
[00:10:17] <ioxzev1z> SamuelMarks, although you should loop the addr list
[00:10:59] <pgib> NRK - also, as you can see in the paragraph above, if you are bundling/supplying your own libpng you can compile-out the messages entirely with PNG_NO_CONSOLE_IO
[00:11:12] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[00:11:12] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[00:11:12] *** Joins: wroathe (~wroathe@user/wroathe)
[00:11:14] <seninha> Hello. I know that a compound literal like `*myvar = (struct Mystruct){.a = *p, .b = NULL, .c = 0}` could have the .c value omitted because missing values are initialized to zero. But what about .b? Does it initialize to NULL in all systems or is there an architecture where NULL != 0?
[00:12:06] <clarity> seninha: It is initialized to null pointer.
[00:12:16] <seninha> I want to write it just `*myvar = (struct Mystruct){.a = *p};`
[00:12:21] <clarity> Go ahead.
[00:13:01] <seninha> nice.
[00:13:01] <seninha> I thought there should be some weird architecture out there where NULL != 0.
[00:13:23] <clarity> Even if there were, it's still initialized to a null pointer.
[00:13:49] <NRK> pgib:  yeah saw that. im not using libpng directly though, but rather via another image library.
[00:14:39] <ZenWalker> question, which is bigger, the max value of int or the max value of float?
[00:14:40] <pgib> Which library? are you able to get the underlying png_structp? Or maybe it provides a wrapper function to accomplish what you want
[00:16:32] <pgib> ZenWalker - you can check on your platform. What is bigger INT_MAX or FLT_MAX?
[00:17:15] <ZenWalker> I see INT_MAX undeclared build error, which include needs?
[00:17:52] <seninha> btw, can I call a function inside a compound literal? Is it supported by all C99 compilers? This would reduce the body of this function to a compound literal with a single value: https://0x0.st/oX0B.png
[00:17:54] <fizzie> From the way that's phrased, I'm worried someone's going to assume that FLT_MAX > INT_MAX implies any `int` value is representable exactly as a `float`.
[00:18:45] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[00:18:47] <clarity> seninha: You can call functions in initalizers
[00:19:04] <fizzie> When they're not initializers of objects with static storage duration.
[00:19:08] <clarity> Right
[00:19:21] <seninha> Nice
[00:19:25] <pgib> ZenWalker - limits.h and possibly float.h for FLT_MAX. However, float will be orders of magnitude larger than int
[00:19:36] <seninha> its inside a function, not a global or static thing
[00:20:01] <NRK> pgib: imlib2. i dont think users of the library can directly communicate with the loader
[00:20:24] <pgib> ZenWalker but, empirical evidence is always nice, and it is good to know how to check it for yourself
[00:20:51] <NRK> but i'll have to look into the docs. it's been something that's annoying me, but not enough to take action
[00:21:19] <seninha> https://0x0.st/oX0B.png
[00:21:21] <seninha> cleaner
[00:21:27] <clarity> janitor
[00:21:37] <seninha> https://0x0.st/oX0S.png
[00:21:42] <pragma-> "cleaner" is not the adjective I'd use to describe screenshots of code.
[00:22:11] <clarity> vim still doesn't understand compound literals
[00:22:26] <NRK> hmm, why malloc and manually set it to zero
[00:22:30] <pragma-> "understand" in what way?
[00:22:31] <seninha> clarity: yeah, it highlights it as an error.
[00:22:31] <NRK> just use calloc
[00:22:48] <clarity> it's stuck in 80s :)
[00:23:18] <pragma-> There are plenty of C99/C11 vim scripts if you look for them.
[00:23:22] * pragma- shrugs boredly.
[00:23:39] <pgib> NRK - eh, gross. imlib2 seems pretty old. Anyway, depending on how it works perhaps you could do some dup2 trickery? Dunno, that'd be a posix question
[00:24:01] <seninha> vim also highlights $(...) as error in shell scripts. It only recognizes `...`
[00:24:02] <seninha> heh
[00:24:15] <pragma-> So upgrade your scripts.
[00:24:25] <ioxzev1z> Still don't get why people use backticks... Looks too similar to '
[00:24:32] <ioxzev1z> ' and '
[00:24:36] <ioxzev1z> `
[00:24:38] <seninha> s/scripts/vim plugins/
[00:24:44] <pragma-> vimscripts
[00:24:55] *** Quits: placeb0 (uid283215@id-283215.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[00:24:57] <NRK> pgib: it's still maintained properly.
[00:25:11] <seninha> NRK: gonna do that. I'm initializing *col to a compound literal so things will be zeroed anyway.
[00:25:50] <NRK> i guess i could just open an issue asking to disabled that shit on their loader.
[00:25:51] <pragma-> Having your editor report errors as soon as you type them is kind of annoying and distracting from your mental flow. I'd rather just be told about the errors when I actually compile.
[00:26:09] <pragma-> Waste of CPU too.
[00:26:31] <NRK> pragma-: same here
[00:26:50] <SamuelMarks> ioxzev1z - Ok hacked this togehter https://gist.github.com/SamuelMarks/3f386b61be78895ab8e93ad57b41e802#file-server_attempt_3-c
[00:27:11] <SamuelMarks> Still need to loop through the addresses but let me just run it and confirm it's still failing
[00:27:25] <pragma-> I watched a video where a guy was using vscode, recently. I was appalled at how many things were moving and popping up and disappearing all the time as he typed.
[00:27:30] <pragma-> How can anybody focus?
[00:27:42] <NRK> seninha: are you using tabs for indentation and spaces for alignment btw?
[00:28:06] <NRK> if so, then very based.
[00:28:20] <pragma-> I assume people who use vscode are the kind of people that stare at their fingers as they type.
[00:28:27] <SamuelMarks> My `bytes = read(client_fd, *response, PIPE_BUF);` is still `-1` and I'm not sure what stopping condition to put on the loop. Is it a `while(bytes != 0)`?
[00:28:37] <tk> pragma-: it's a weird experience
[00:29:02] <tk> NRK: I found that it's difficult to get tab+space to work in any editor
[00:29:05] <tk> but I try to do it
[00:29:06] <seninha> NRK: yes, my vim config puts a dot on the beginning of a tab and nothing at a space.
[00:29:14] <pgib> I don't use an IDE often, but I find a lint/compile on save can be somewhat nice. That's about as "realtime" as I'd like.
[00:29:15] <ioxzev1z> SamuelMarks, getaddrinfo gives you a list of possible servers. You want to for(struct addrinfo *p = server; p; p = p->ai_next) { sockfd = socket(...); if(sockfd == -1) { break; } ret = bind(...); } and so on
[00:30:06] <nitrix> pragma-, I have copilot and it's incredible the things the AI writes for me in VSCode.
[00:30:25] <ioxzev1z> Also why are you using *response ? you want char buf[1024]; bytes = recv(client_fd, buf, sizeof(buf)); buf[bytes] = '\0'; then work on buf as a string
[00:30:29] <clarity> SamuelMarks: bind returns -1 on error
[00:30:35] <ioxzev1z> SamuelMarks, pls rd moar
[00:31:14] <ioxzev1z> uh, in the above loop you want "continue;" on the -1 sockfd
[00:31:21] <ioxzev1z> But yeah
[00:31:27] <nomagno> nitrix: sounds too passive
[00:32:38] <nomagno> Also just overall spooky. Copilot is a proprietary service that is fed all your code based on Github ToS technicalities as legal base, and then spits patterns it finds familiar
[00:32:45] <ZenWalker> pgib: thanks, limits.h works for INT_MAX, but float.h doesn't work for FLT_MAX, anyway if you say float is bigger, I believe you :)
[00:33:20] <nitrix> There are times where it feels like I'm actually pair programming. If the name has an obvious name, and there's enough comments throughout the application, it'll understand the business logic, the pitfalls, the implementation strategy you went for and it'll get everything right. It'll generate code that acquire mutex locks, manages the memory/ownership properly, it's mindblowing what it does with C.
[00:33:28] <pgib> ZenWalker - why do you ask? You do realize they have very different properties, I hope. As in, you don't want to use float to hold big ints.
[00:34:51] <nitrix> And the suggestions are neatly integrated in the IDE. I don't mind it at all. It's so satisfying to pause typing to see what it'd write, glance, hit tab and bam, 500 lines of code, you feature is almost completely implemented.
[00:35:44] <nitrix> It's trained with code on GitHub, so when I work with OpenGL, it's able to properly understand when to enable/disable flags like blending and all that.
[00:35:46] <seninha> NRK: I'm replacing my mallocs to callocs. My main concern is that it does not initialize pointer fields to NULL on those weird architectures where NULL is not zero.
[00:36:19] <pgib> ZenWalker - and just FYI, on my platform: INT_MAX=2147483647 FLT_MAX=3.40282e+38
[00:36:48] <ZenWalker> pgib: thanksÇ!
[00:37:00] <NRK> posix requires null to be zero afaik.
[00:37:13] <NRK> so depends on your target
[00:38:35] <seninha> http://c-faq.com/null/machexamp.html
[00:38:35] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:78e1:cebc:1afc:516f)
[00:38:48] *** Quits: hiovoltage (~hiovoltag@176.88.87.168) (Quit: Client closed)
[00:38:54] *** Quits: bolovanos__ (~bolovanos@user/bolovanos) (Ping timeout: 260 seconds)
[00:39:02] <nitrix> pragma-, Seriously, Copilot is the most impressive machine learning accomplishment I have ever seen. Crazier than the stuff on "Two Minute Papers" (https://www.youtube.com/c/K%C3%A1rolyZsolnai)
[00:39:03] <candide> Title of nitrix's link: Two Minute Papers - YouTube
[00:39:33] *** Quits: donk (~donk@2a02:3030:409:baa6:91f1:d79f:8fc5:e173) (Quit: Client closed)
[00:39:39] *** Quits: z4kpi (~z4kpi@user/zacts) (Quit: Client closed)
[00:39:53] <pragma-> sigh, I have to fix my URL regex to discard trailing )'s
[00:39:58] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[00:40:07] <nomagno> And it accomplishes that in a kinda bad way
[00:40:30] <nomagno> I mean, I definitely wouldn't have uploaded any of my code to github if I knew it was going to be used like this
[00:40:58] <nomagno> They reserve the right to redistribute my code to any github users
[00:41:12] <nomagno> I'm not sure this gives them any right to feed it into a machine model
[00:42:19] <nomagno> What if the AI outputs what is essentially, unambiguously, a 600-line modification of my MIT licensed code that retains most of the stuff, but has no lattribution?
[00:42:43] <nomagno> I don't use github anymore anyways for my personal projects, but this angers me from a reasonable expectations point of view
[00:43:01] <NRK> the ai outputted john carmack's sqrt algorithm line by line but with MIT license
[00:43:30] <nomagno> NRK: That's both funny and horrendous
[00:43:36] <NRK> including the "what the fuck" comments
[00:43:40] <nomagno> No one wants that square root algorithm!
[00:43:48] <nomagno> Like, what even is that as a suggestio
[00:43:50] <nomagno> -n?
[00:44:11] <nomagno> Also many projects on github may be licensed in a way it doesn't recognize in its metadata
[00:44:28] <sham1> Reciprocal square root algorithm eve
[00:44:29] <sham1> even
[00:44:40] <nomagno> It just seems very dangerous to everyone involved, except to Microsoft's PR department that is
[00:44:47] *** Joins: donk (~donk@2a02:3030:409:baa6:91f1:d79f:8fc5:e173)
[00:45:25] <ioxzev1z> SamuelMarks, heres something I wrote in a couple of minutes, use this model https://bpa.st/K3EQ
[00:45:32] <nomagno> also, it is probably using a TON of fully copyrighted code uploaded by people who don't have the rights
[00:45:49] <nomagno> Which would make both the upload illegal and the AI be outputting illegal code
[00:45:56] *** Quits: donk (~donk@2a02:3030:409:baa6:91f1:d79f:8fc5:e173) (Client Quit)
[00:46:15] <nitrix> Copilot generates its own code. It doesn't plagiarize.
[00:46:25] <NRK> nomagno: here's the clip if you haven't seen it https://nitter.net/mitsuhiko/status/1410886329924194309#m
[00:46:28] <ioxzev1z> SamuelMarks, some mistakes I'm sure but ignore them
[00:46:40] *** Quits: \o\ (~i.am@187.112.46.243) (Quit: a pentium 100 "running" windows 11 trying to play Last of Us II at ps4emu... that's my brain trying understand 0->R->R->R/2R->0)
[00:46:56] <nomagno> nitrix: it does plagarize though, you know how machine leaening models work right?
[00:47:04] <nitrix> It's trained to understand patterns and developers habits from GitHub, but the recommendations are done solely on the project it's used on.
[00:47:18] <nitrix> nomagno, I'm a beta tester and I've been using it for 2 years.
[00:47:23] <nomagno> In order for the output to be coherent it needs to have a temperature that makes it statistically output plagiarized code some of the time
[00:48:17] <ravella> nomagno: humans statistically output plagiarized code some of the time too :)
[00:48:26] <nomagno> nitrix: I'm positive it has been fed code that they didn't have the rights to in the first place, and it doesn't have a temperature setting of 100%
[00:48:29] <apotheon> 14:13 < NRK> the ai outputted john carmack's sqrt algorithm line by line but with MIT license
[00:48:32] <apotheon> 14:16 < nitrix> Copilot generates its own code. It doesn't plagiarize.
[00:48:34] *** Quits: gproto23_ (~gproto23@user/gproto23) (Remote host closed the connection)
[00:48:35] <apotheon> something doesn't match here
[00:48:48] <nomagno> ravella: Affirmative action.
[00:48:54] <nomagno> I hate it
[00:49:24] *** Joins: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com)
[00:49:53] <SamuelMarks> ioxzev1z: `*response` because I need it to grow (with realloc)
[00:50:07] <SamuelMarks> I'll try out your list thing on `getaddrinfo`
[00:50:08] <nomagno> When you consciously act in a way that adds both good and bad things, or benefits and risks, and apply it widely, you're kinda making yourself morally responsible for the bad, no matter how small. Related to analysis paralysis in a way, I guess
[00:50:24] <ioxzev1z> SamuelMarks, pay attention to the list loop and recv() calls
[00:50:32] <nomagno> But I stand by Microsoft having made a bullshit move with copilot
[00:50:42] <SamuelMarks> clarity - https://man7.org/linux/man-pages/man2/bind.2.html oh right I thought it said something other than -1
[00:50:50] <nitrix> You're talking shit of something you don't even understand.
[00:50:51] <apotheon> Did copilot generate Carmack's code line for line from scratch, instead of by copying it . . .
[00:50:54] <apotheon> 14:13 < NRK> including the "what the fuck" comments
[00:50:55] <apotheon> ?
[00:51:01] <ioxzev1z> SamuelMarks, also you can avoid memset calls on structs via something like struct addrinfo hint = { 0 };
[00:51:01] *** Quits: cosimone (~user@93-47-230-95.ip115.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[00:51:04] <SamuelMarks> ioxzev1z - Thanks taking a look at yours now
[00:51:22] <ioxzev1z> SamuelMarks, also you're using the realloc wrong.
[00:51:38] <nomagno> apotheon: Well no one in a court would disagree with that.
[00:52:08] <ioxzev1z> SamuelMarks, char *buf = malloc(1024); read to buf, if you need more space, you then realloc and recv(fd, buf + size), etc
[00:52:29] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[00:53:35] <caze> If your buffer is full, maybe you should process the data so you can empty the buffer.
[00:54:41] <caze> Or reuse it.
[00:55:20] *** Joins: z4kpi (~z4kpi@user/zacts)
[00:56:14] <seninha> I need help interpreting this: is a zeroed memory (as that whose address is returned by calloc(3)) also considered NULL?
[00:56:18] <SamuelMarks> hmm the p!=NULL thing, let me double-check
[00:56:42] <caze> seninha: No.
[00:56:57] <seninha> https://pubs.opengroup.org/onlinepubs/9699919799/functions/calloc.html
[00:57:03] <seninha> Interpreting this ^
[00:57:15] <seninha> sorry, this: https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap03.html#tag_03_249
[00:57:20] <SamuelMarks> ioxzev1z - `for(struct addrinfo *p = server; p;` but `server` is NULL in your paste
[00:57:43] <SamuelMarks> I'll rewrite to a do/while I guess
[00:57:47] <ioxzev1z> SamuelMarks, in my code I have for(struct addrinfo *p = info; p; p = p->ai_next) {, where info is the list given by getaddrinfo
[00:57:59] * SamuelMarks double checks
[00:58:00] <caze> seninha: calloc would only return that if it couldn't fullfill the allocation request.
[00:58:18] <SamuelMarks> oh right from `getaddrinfo(address, service, &hint, &info);`
[00:58:21] <ioxzev1z> Yes
[00:58:50] <ioxzev1z> You can loop info itself but I prefer p = info so that you can then call freeaddrinfo on info
[00:59:02] <caze> seninha: There is a difference between an address value of NULL, and an address value that points to a region of memory that has the value 0 stored.
[00:59:12] <SamuelMarks> cool, yeah I just forgot to copy that line
[00:59:13] <seninha> caze: I'm referring to the memory that is zeroed by a successful calloc(3) call. Like, I have `myval = calloc(1, sizeof(*myval));`. Is myval->myfield == NULL in all architectures?
[00:59:31] <caze> seninha: It's NULL in no architectures.
[00:59:59] <caze> seninha: If calloc returned NULL, then you couldn't apply the -> operator.
[01:00:00] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[01:00:31] *** Joins: vicfred_ (~vicfred@user/vicfred)
[01:00:51] <seninha> (replace calloc with ecalloc, a wrapper function around calloc that exit(1) when it returns NULL)
[01:01:05] *** Quits: savolla (~quassel@88.227.92.215) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[01:01:18] <caze> seninha: What is the type of member myfield?
[01:01:58] <seninha> void *
[01:02:02] <sham1> ,english thid * 2 < blockSize
[01:02:04] <candide> sham1: error: unknown type name 'thid' error: expected identifier or '(' before numeric constant
[01:02:31] <sham1> It's clearly an identifier from a larger program
[01:02:37] <sham1> WTH bot
[01:02:38] <caze> seninha: All bits zero is not guaranteed to be NULL in all implementations.
[01:03:10] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 260 seconds)
[01:04:47] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[01:08:00] <ioxzev1z> SamuelMarks, that getaddrinfo loop is pretty much the only way to do it, so avoid changing to while/etc. Very standard template
[01:08:07] <SamuelMarks> ioxzev1z - Ok took most of your ideas into https://gist.github.com/SamuelMarks/3f386b61be78895ab8e93ad57b41e802#file-server_attempt_3-c - but I'm not yet happy with the `recv` vs `read` solution and how/when to stop putting bytes into my buffer and when to compare that buffer with my `STOP_ON_STARTSWITH` char*
[01:08:09] <candide> Title of SamuelMarks's link: Experiments with simple HTTP socket server in C · GitHub
[01:08:17] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 240 seconds)
[01:09:25] <ioxzev1z> SamuelMarks, not sure what you're trying to do with that recv tbh
[01:09:29] *** Quits: masoudd (~masoudd@user/masoudd) (Quit: Leaving)
[01:10:08] <SamuelMarks> ioxzev1z - So I want to read when someone hits my server, and if they hit it with a specific path then I want to close the server and return the entire thing they sent
[01:10:08] <ioxzev1z> You literally just read into some buf, parse and handle the data, and if the data is incomplete you can realloc the buf for more data, etc
[01:10:52] <ioxzev1z> Why are you reallocing so much? How much data are you expecting?
[01:10:55] <nightstrike> are there any proposals to make nested functions part of c
[01:10:57] <nightstrike> ?
[01:11:35] <caze> SamuelMarks: > If your buffer is full, maybe you should process the data so you can empty the buffer.
[01:12:16] <ioxzev1z> Even if you're expecting a G of data, just read into a 5192 buffer in a loop
[01:12:26] <ioxzev1z> You don't need to realloc so much
[01:12:27] <SamuelMarks> I can clear the buffer if it startswith the wrong thing. I am waiting until it matches the right thing
[01:12:38] *** Joins: acerbic (~acerbic@cs-xdata-50-86-51-95.cspire.com)
[01:12:42] <SamuelMarks> then I want to return the entire thing that was `read`
[01:12:45] <ioxzev1z> SamuelMarks, have you considered that the buffer data might be incomplete
[01:12:47] <ioxzev1z> ?
[01:13:02] <ioxzev1z> If you have 100 byte messages, and you read 100 bytes, you might only get 50
[01:13:13] <ioxzev1z> You need to parse the data in the buffer
[01:13:14] <SamuelMarks> ioxzev1z - yeah that's why I'm trying to read until some condition, and I was asking what that condition is
[01:13:39] <ioxzev1z> The condition is that you loop read until your buffer is full, parse and handle the data into (e.g. lines), then if you need more data you re-read
[01:13:50] <ioxzev1z> Don't expect to get exact messages
[01:13:56] <caze> SamuelMarks: If you're not emptying the buffer after each read, then you need a counter and add to it how much was read in each call.
[01:14:06] <SamuelMarks> how do I know the data is complete? - I saw people do hacky solutions like seeing if it endswith "\r\n"
[01:14:10] <SamuelMarks> I don't want that
[01:14:16] <ioxzev1z> If you delimit your messages with \n, you cannot guarantee that you don't get "message1\nmes" on one read, and "sage2\n" on another
[01:14:19] *** Quits: bch (~bch@S01069050ca2cbf63.ok.shawcable.net) (Quit: quitter)
[01:14:52] <ioxzev1z> SamuelMarks, my previous comment is important please read it.
[01:15:58] <caze> SamuelMarks: What are you doing with the read data?
[01:16:00] <ioxzev1z> read(fd, buf, ...); for line in buf: parse line; if last_line does not end in \n, add to start of buf and read after end of line
[01:18:43] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Quit: Lost terminal)
[01:19:28] <SamuelMarks> But how do I know that's the end, and not just the end of the line
[01:19:57] *** Quits: ravella (~ravella@user/ryanavella) (Ping timeout: 240 seconds)
[01:20:01] <ioxzev1z> ...
[01:20:55] <ioxzev1z> You decide how you delimit lines (e.g. irc uses \r\n). You read into a buffer, then split by delimiter to get lines. E.g. message1\r\nmessage2\r\n becomes "message1", and "message2"
[01:21:11] *** Quits: clamiax (~clamiax@net-93-144-125-193.cust.dsl.teletu.it) (Remote host closed the connection)
[01:21:16] <ioxzev1z> If the last line does not end in \r\n then it isn't finished
[01:21:31] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8) (Ping timeout: 250 seconds)
[01:21:33] <caze> SamuelMarks: You build it into your protocol.
[01:21:39] <ioxzev1z> e.g. if you get message1\r\nmessage2\r\nmes, you add the "mes" to the start of the buffer, such that you add data after it
[01:21:54] <SamuelMarks> hmm
[01:23:01] <ioxzev1z> The logic is: read(buf); for line in buf: handle_line(line); if buf[last_line] not end in delimiter: buf = last_line; read(buf) or something like that
[01:23:06] <ioxzev1z> Hard to write pseudocode
[01:23:35] *** Quits: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[01:28:08] <pragma-> lol
[01:28:32] <ioxzev1z> pragma-, trying my best bru, pls no laugh
[01:28:42] <pragma-> ,english 1 * 2 < foo
[01:28:43] <candide> pragma-: 1 times 2 is less than `foo`.
[01:28:49] <pragma-> ,english a * 2 < foo
[01:28:50] <candide> pragma-: error: unknown type name 'a' error: expected identifier or '(' before numeric constant
[01:28:52] * pragma- snorts
[01:28:58] <pragma-> that's all on gcc not me
[01:29:06] <sham1> Oh wait, I meant to do parens
[01:29:13] <pragma-> oh no wait
[01:29:14] <sham1> ,parens thid * 2 < blockSize
[01:29:15] <candide> sham1: (thid * 2) < blockSize
[01:29:21] <pragma-> english doesn't use gcc, what am i smoking
[01:29:24] <pragma-> that is totally my fault
[01:29:33] *** Joins: ka80 (~ka80@111.60.138.34.bc.googleusercontent.com)
[01:29:45] <pragma-> no wait, the error message is from gcc
[01:29:48] <sham1> pragma-: lol
[01:29:49] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8)
[01:30:03] <pragma-> it goes through gcc first to make sure the code is syntactically and semantically fine before it goes through my english translator
[01:30:12] <pragma-> gcc is erroring before it even sees my english thing
[01:30:17] <pragma-> yes, this is totally gcc.
[01:30:19] * pragma- nods
[01:31:03] <pragma-> ,english a + 2 < foo
[01:31:03] <candide> pragma-: `a` plus 2 is less than `foo`.
[01:31:06] <pragma-> absurd
[01:31:45] *** Quits: Akuli (~Akuli@82-203-163-139.bb.dnainternet.fi) (Quit: Akuli)
[01:31:47] <pragma-> ,english int a; a * 2 < foo
[01:31:47] <candide> pragma-: Declare `a` as an int and then `a` times 2 is less than `foo`.
[01:32:05] *** Joins: Akuli (~Akuli@82-203-163-139.bb.dnainternet.fi)
[01:33:08] *** Joins: masoudd (~masoudd@user/masoudd)
[01:33:39] <SamuelMarks> cdecl
[01:33:54] *** Quits: masoudd (~masoudd@user/masoudd) (Max SendQ exceeded)
[01:34:22] *** Joins: masoudd (~masoudd@user/masoudd)
[01:36:22] *** Joins: crashrep (~crashrep@user/crashrep)
[01:37:40] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: Disconnecting)
[01:39:57] *** Joins: mahmutov (~mahmutov@37.155.50.49)
[01:40:37] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[01:40:58] *** Joins: Kaedenn (~kaedenn@137.229.82.89)
[01:40:59] *** kish` is now known as kish`2
[01:41:32] *** kish`2 is now known as kish`
[01:41:46] <Kaedenn> If ferror(fp) is true, does that guarantee that the next fscanf or fgets will return -1?
[01:42:21] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[01:42:21] <Kaedenn> We have code that checks for fgets returning -1 but doesn't check ferror(fp) and we're wondering if that'll cause an infinite loop
[01:44:34] *** Quits: magla (~gelignite@55d4e921.access.ecotel.net) (Quit: Stay safe!)
[01:44:42] <Kaedenn> Sorry, we're calling fread, not fscanf or fgets
[01:45:27] <Kaedenn> I don't see anything in the fread manpage that suggests it'll return -1, just 0 on EOF or error
[01:46:18] <fizzie> `fread`'s return type is `size_t`, so it could hardly return -1.
[01:46:29] <Kaedenn> ...disregard. We're reading one segment at a time and comparing it to 1 (number of segments)
[01:46:46] <Kaedenn> We ask for one segment and error if we don't get one segment
[01:47:30] <Kaedenn> So the error case I'm thinking of isn't an issue; if ferror(fp) is true then the next fread(...) will return 0 instead of 1, and the loop will break
[01:48:44] <fizzie> That's fair enough, then. And in general, checking only the fgets/fscanf/fread return values without ever bothering to fiddle with ferror and/or feof is relatively normal, as long as you don't need to make a clear distinction between end-of-file and a read error.
[01:49:25] <Kaedenn> Right. On error, we'll result in a partial file being saved to the database instead of a full file (this program inserts a file into our database)
[01:49:34] <Kaedenn> So we need to determine if that's desirable
[01:49:38] *** Quits: oxfuxxx (~oxfuxxx@185.156.174.5) (Ping timeout: 268 seconds)
[01:53:07] *** Quits: Akuli (~Akuli@82-203-163-139.bb.dnainternet.fi) (Quit: Akuli)
[01:53:25] *** Joins: epony (epony@user/epony)
[01:54:09] <Kaedenn> Yeah, inserting a bad file into the database is preferable over crashing the workflow entirely, so we're good. Disregard!
[01:55:39] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[01:56:48] *** Parts: Kaedenn (~kaedenn@137.229.82.89) ()
[01:57:15] *** Quits: nitrix (~nitrix@user/nitrix) (Quit: ZNC 1.8.2 - https://znc.in)
[01:57:42] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-84f2-b625-d358-b449.res6.spectrum.com)
[01:59:04] *** Quits: alch (~alch@151.34.136.178) (Read error: Connection reset by peer)
[02:00:08] *** Joins: nitrix (~nitrix@user/nitrix)
[02:00:31] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e5ab:a286:27f1:6ff2)
[02:02:01] <SamuelMarks> ioxzev1z - I tried changing my `do` condition to: `} while(bytes != 0);` but that just infinite loops. Why aren't I receiving anything from the socket?
[02:02:28] *** Joins: hiovoltage (~hiovoltag@176.88.87.168)
[02:02:37] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[02:03:02] *** Joins: alch (~alch@151.34.189.238)
[02:09:00] *** Quits: vicfred_ (~vicfred@user/vicfred) (Quit: Leaving)
[02:09:23] <clarity> SamuelMarks: Did you check for errors?
[02:09:27] <ioxzev1z> SamuelMarks, repaste
[02:11:26] *** Quits: SudoBash (~SudoBash@45.43.99.99) (Quit: Connection closed)
[02:12:44] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:78e1:cebc:1afc:516f) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:13:03] *** Joins: AmR (~AmREiSa@41.46.119.250)
[02:13:28] *** Joins: AliasSpider (~spider-ku@nitra.ostv.sk)
[02:17:02] *** Quits: inlight (~thomas@user/inlight) (Quit: WeeChat 3.3)
[02:17:42] *** Joins: oxfuxxx (~oxfuxxx@185.156.174.5)
[02:17:58] *** Quits: nitrix (~nitrix@user/nitrix) (Quit: ZNC 1.8.2 - https://znc.in)
[02:18:24] *** Joins: goepsilongo (~goepsilon@2603-7000-ab00-62ed-2513-aa41-6555-989e.res6.spectrum.com)
[02:23:35] *** Quits: moog (~moog@107.77.244.68) (Remote host closed the connection)
[02:23:46] *** Quits: malloy (~jimery@116.30.220.175) (Ping timeout: 250 seconds)
[02:24:33] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Ping timeout: 256 seconds)
[02:24:41] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[02:25:00] *** Joins: nitrix (~nitrix@user/nitrix)
[02:26:00] *** Joins: malloy (~jimery@116.30.220.175)
[02:26:18] *** Joins: seninha (~seninha@user/seninha)
[02:27:04] *** Quits: oxfuxxx (~oxfuxxx@185.156.174.5) (Ping timeout: 256 seconds)
[02:28:11] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-84f2-b625-d358-b449.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[02:28:51] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8) (Ping timeout: 256 seconds)
[02:30:16] <AliasSpider> (sry)> Artificial Intelligence programming by SGD >> https://join.slack.com/t/artificialint-ysc5091/shared_invite/zt-13b6herrb-w8Bw2WbyLXtShjVKmmqzVg
[02:31:41] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-84f2-b625-d358-b449.res6.spectrum.com)
[02:33:37] *** Quits: pizdets (~pizdets@183.182.115.47) (Ping timeout: 256 seconds)
[02:34:10] *** Joins: pizdets_ (~pizdets@183.182.111.242)
[02:34:10] *** Quits: acerbic (~acerbic@cs-xdata-50-86-51-95.cspire.com) (Read error: Connection reset by peer)
[02:34:11] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 256 seconds)
[02:34:39] *** Quits: z4kpi (~z4kpi@user/zacts) (Quit: Client closed)
[02:37:01] <SamuelMarks> clarity / ioxzev1z - Updated (and yes I do check for errors, overly so)
[02:37:30] <SamuelMarks> This is the condition I keep messing with… to no avai: https://gist.github.com/SamuelMarks/3f386b61be78895ab8e93ad57b41e802#file-server_attempt_3-c-L94
[02:37:32] <candide> Title of SamuelMarks's link: Experiments with simple HTTP socket server in C · GitHub
[02:37:52] <clarity> SamuelMarks: read can return -1
[02:38:16] <clarity> And it can block
[02:38:31] *** Joins: vysn (~vysn@user/vysn)
[02:38:40] <clarity> I'm pretty sure your realloc is wrong
[02:39:06] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[02:39:08] *** Joins: hashfunc1336 (~user@162.254.115.155)
[02:39:14] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-84f2-b625-d358-b449.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[02:39:58] *** Quits: masoudd (~masoudd@user/masoudd) (Read error: Connection reset by peer)
[02:40:02] <clarity> You're reallocating the pointer you get by dereferencing response.. but you assign the new pointer to response?
[02:40:32] *** Quits: hiovoltage (~hiovoltag@176.88.87.168) (Quit: Client closed)
[02:40:48] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:40:58] <ioxzev1z> SamuelMarks, I honestly cannot understand your reallocing
[02:41:09] <ioxzev1z> Like I cannot see a real reason for it
[02:41:15] *** Joins: hiovoltage (~hiovoltag@176.88.87.168)
[02:42:06] <ioxzev1z> I think there is some fundamental misunderstanding here.
[02:42:15] <SamuelMarks> very likely
[02:45:31] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[02:45:39] <clarity> Ok I just ran your code
[02:45:44] <clarity> And indeed read returns an error
[02:45:48] <clarity> (Bad address) :)
[02:46:56] <clarity> You're reading into *response
[02:46:59] <clarity> What's pipe_buf for?
[02:49:18] *** Quits: hiovoltage (~hiovoltag@176.88.87.168) (Quit: Client closed)
[02:49:59] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[02:51:07] *** Joins: masoudd (~masoudd@user/masoudd)
[02:51:33] <clarity> Ok with a few little tweaks it.. works
[02:51:35] *** Quits: crashrep (~crashrep@user/crashrep) (Remote host closed the connection)
[02:51:42] <SamuelMarks> oh?
[02:51:48] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Client Quit)
[02:51:57] <clarity> Yea, you clearly meant to read into pipe_buf, right?
[02:52:04] <clarity> And then reallocate *response
[02:52:04] *** Joins: crashrep (~crashrep@user/crashrep)
[02:52:09] <SamuelMarks> yes
[02:52:16] <clarity> And append into *response + total_bytes, not *response + bytes
[02:53:06] *** Joins: ferdna (~ferdna@user/ferdna)
[02:53:47] *** Quits: cherrry9 (~jan@aein251.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[02:54:04] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-9959-7557-180e-ce0c.res6.spectrum.com)
[02:54:04] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-9959-7557-180e-ce0c.res6.spectrum.com) (Client Quit)
[02:55:37] *** Quits: bzyx (~quassel@89-69-20-238.dynamic.chello.pl) (Ping timeout: 240 seconds)
[02:56:21] *** Joins: bzyx (~quassel@89-69-20-238.dynamic.chello.pl)
[02:57:50] <SamuelMarks> So wait what's the full thing clarity
[02:58:08] *** Joins: acerbic (~acerbic@cs-xdata-50-86-52-113.cspire.com)
[02:58:42] *** Joins: soapsudsxx (~soapsudsx@209.221.40.136)
[02:59:39] <clarity> SamuelMarks: https://0x0.st/oXG_.c
[03:00:49] *** Quits: SaltHillStroller (~SaltHillS@206.223.160.26) (Ping timeout: 256 seconds)
[03:01:01] <clarity> I might have made minor tweaks to make it compile but mainly just changed read to use pipe_buf, fixed the assignment from realloc, and fixed memcpy to use total_bytes
[03:01:26] *** Joins: oxfuxxx (~oxfuxxx@185.156.174.5)
[03:01:33] <SamuelMarks> Thanks clarity I'll try that out when I get back :D
[03:03:35] *** Quits: masoudd (~masoudd@user/masoudd) (Remote host closed the connection)
[03:06:10] *** Quits: oxfuxxx (~oxfuxxx@185.156.174.5) (Ping timeout: 256 seconds)
[03:06:10] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[03:12:06] *** Joins: cytokine_storm (~user@user/cytokine-storm/x-1083107)
[03:16:20] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 2.8)
[03:18:09] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:18:43] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[03:20:41] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 250 seconds)
[03:22:55] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-9959-7557-180e-ce0c.res6.spectrum.com)
[03:30:06] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[03:30:33] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[03:37:09] *** Joins: oxfuxxx (~oxfuxxx@185.156.174.5)
[03:37:47] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:38:17] *** Quits: AliasSpider (~spider-ku@nitra.ostv.sk) (Ping timeout: 240 seconds)
[03:39:02] *** Quits: brad_mssw|mac (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Quit: Leaving)
[03:39:26] *** Joins: AliasSpider (~spider-ku@nitra.ostv.sk)
[03:42:21] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 250 seconds)
[03:43:46] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[03:43:46] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[03:43:46] *** Joins: wroathe (~wroathe@user/wroathe)
[03:44:24] *** Joins: clamiax (~clamiax@net-93-144-125-193.cust.dsl.teletu.it)
[03:46:29] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[03:49:27] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[03:52:34] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[03:56:53] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 250 seconds)
[03:58:11] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Quit: Leaving)
[03:58:35] *** Joins: Wulf (~Wulf@user/wulf)
[04:03:18] *** Quits: freep (~freepppp@188.4.23.166.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[04:03:43] *** Quits: oxfuxxx (~oxfuxxx@185.156.174.5) (Ping timeout: 256 seconds)
[04:04:40] *** Quits: ckdCreations (~ckdCreati@147.55.133.136) (Read error: Connection reset by peer)
[04:04:54] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[04:05:32] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-9959-7557-180e-ce0c.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[04:05:59] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-84f2-b625-d358-b449.res6.spectrum.com)
[04:06:55] *** Quits: jmpeax_ (~jmpeax@host-68-169-157-168.VALOLT2.epbfi.com) (Quit: leaving)
[04:08:09] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:08:55] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[04:09:23] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 252 seconds)
[04:11:34] *** Joins: auk (auk@gateway/vpn/protonvpn/auk)
[04:13:07] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 256 seconds)
[04:14:14] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 250 seconds)
[04:14:42] *** Quits: AmR (~AmREiSa@41.46.119.250) (Quit: Konversation terminated!)
[04:16:05] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[04:17:09] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[04:18:16] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[04:27:28] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[04:28:42] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[04:28:54] *** Quits: somlis (~somlis@user/somlis) (Read error: Connection reset by peer)
[04:29:13] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[04:30:30] *** Joins: Oddity (~Oddity@user/oddity)
[04:32:29] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[04:33:53] *** Quits: dogbert2 (~Bill@ip68-227-25-62.lv.lv.cox.net) (Remote host closed the connection)
[04:34:09] *** Joins: dogbert2 (~Bill@ip68-227-25-62.lv.lv.cox.net)
[04:34:12] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[04:35:45] *** Quits: acerbic (~acerbic@cs-xdata-50-86-52-113.cspire.com) (Read error: Connection reset by peer)
[04:37:08] *** Quits: kts (~kts@103.73.237.122) (Quit: Konversation terminated!)
[04:42:31] *** Joins: oxfuxxx (~oxfuxxx@185.156.174.5)
[04:42:48] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[04:47:21] *** Quits: oxfuxxx (~oxfuxxx@185.156.174.5) (Ping timeout: 256 seconds)
[04:48:36] *** Joins: cytokine` (~user@47.29.246.178)
[04:49:07] *** Quits: cytokine` (~user@47.29.246.178) (Remote host closed the connection)
[04:51:57] *** Quits: cytokine_storm (~user@user/cytokine-storm/x-1083107) (Ping timeout: 240 seconds)
[04:54:40] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[04:55:04] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e5ab:a286:27f1:6ff2) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[04:59:44] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[05:00:43] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[05:00:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[05:01:04] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Client Quit)
[05:07:12] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:09:53] *** Joins: Viewday117 (~Viewday@user/viewday)
[05:10:08] *** Joins: Techcable (~Techcable@168.235.93.147)
[05:12:17] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[05:12:17] *** Viewday117 is now known as Viewday11
[05:12:28] *** Joins: wroathe (~wroathe@user/wroathe)
[05:13:16] *** Joins: pnbeast (~pnbeast@2601:140:4280:6ce0::1)
[05:14:53] *** Quits: zwr (~zwr@2804:d45:b966:fb00:768:90c7:1da:f56f) (Ping timeout: 256 seconds)
[05:15:10] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[05:15:23] *** Joins: zwr (~zwr@2804:d45:b966:fb00:6b1f:6eca:5f0f:4111)
[05:15:36] *** Joins: dsrt^ (~dsrt@50.235.176.163)
[05:16:11] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 245 seconds)
[05:17:45] *** Joins: seninha (~seninha@user/seninha)
[05:19:49] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[05:21:03] *** Quits: hashfunc1336 (~user@162.254.115.155) (Remote host closed the connection)
[05:21:39] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[05:21:44] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[05:24:42] *** Joins: oxfuxxx (~oxfuxxx@185.156.174.5)
[05:24:59] *** Joins: bindu_ (~bindu@user/bindu)
[05:25:36] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[05:26:55] *** bindu_ is now known as bindu
[05:28:17] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 240 seconds)
[05:28:57] *** Quits: oxfuxxx (~oxfuxxx@185.156.174.5) (Ping timeout: 240 seconds)
[05:29:40] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[05:29:49] *** Joins: MsMary (~MsMary@S01069050ca4e3573.cg.shawcable.net)
[05:29:57] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[05:38:55] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 256 seconds)
[05:42:03] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[05:44:15] *** Joins: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67)
[05:44:31] *** Joins: myth (~myth@173.233.125.203)
[05:45:02] *** Quits: reset (~reset@user/reset) (Quit: reset)
[05:46:35] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:40cc:1ea:3f3e:c959)
[05:47:37] *** Quits: myth (~myth@173.233.125.203) (Quit: Konversation terminated!)
[05:52:10] *** Quits: crankslider (~slidercra@user/slidercrank) (Ping timeout: 250 seconds)
[05:55:02] *** Quits: Charadon (~Charadon@155.138.164.183) (Ping timeout: 240 seconds)
[05:56:36] *** Quits: nitrix (~nitrix@user/nitrix) (Quit: ZNC 1.8.2 - https://znc.in)
[05:58:42] *** Joins: nitrix (~nitrix@user/nitrix)
[05:59:36] *** Quits: alch (~alch@151.34.189.238) (Read error: Connection reset by peer)
[06:03:29] *** Joins: alch (~alch@151.68.165.166)
[06:03:51] *** Quits: BGL (ninety@75-149-171-58-Washington.hfc.comcastbusiness.net) (Ping timeout: 256 seconds)
[06:06:45] *** Joins: oxfuxxx (~oxfuxxx@185.156.174.5)
[06:10:51] *** Joins: fe23 (~fe23@2409:8a34:46c:f80:bd54:d550:ea6a:8b98)
[06:13:50] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[06:16:43] *** Joins: cppimmo (~cppimmo@65.163.115.156)
[06:17:52] *** Quits: nitrix (~nitrix@user/nitrix) (Quit: ZNC 1.8.2 - https://znc.in)
[06:18:16] *** Joins: nitrix (~nitrix@user/nitrix)
[06:18:57] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[06:19:57] *** Quits: oxfuxxx (~oxfuxxx@185.156.174.5) (Ping timeout: 240 seconds)
[06:20:19] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[06:20:47] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[06:22:51] *** Quits: nitrix (~nitrix@user/nitrix) (Client Quit)
[06:23:14] *** Joins: nitrix (~nitrix@user/nitrix)
[06:24:37] *** Quits: mahmutov (~mahmutov@37.155.50.49) (Ping timeout: 240 seconds)
[06:27:51] *** Quits: nitrix (~nitrix@user/nitrix) (Client Quit)
[06:29:00] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[06:29:04] *** Joins: myth (~myth@173.233.125.203)
[06:29:25] *** Quits: myth (~myth@173.233.125.203) (Quit: WeeChat 3.4)
[06:30:21] *** Joins: nitrix (~nitrix@user/nitrix)
[06:30:56] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[06:30:57] *** Joins: myth (~myth@173.233.125.203)
[06:33:32] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[06:33:49] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 240 seconds)
[06:35:29] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:63be:4b7:5b8:1ce3) (Remote host closed the connection)
[06:35:34] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[06:35:34] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[06:36:29] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:7f9:7e5d:ee7f:d250)
[06:38:07] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:7f9:7e5d:ee7f:d250) (Remote host closed the connection)
[06:38:54] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:7f9:7e5d:ee7f:d250)
[06:41:25] *** Quits: drbeco (~beco@2804:351c:dd00:9600:7e60:24d6:7e4a:7676) (Quit: Leaving)
[06:42:07] *** Joins: joolma (uid527699@id-527699.uxbridge.irccloud.com)
[06:46:37] *** Joins: rahl- (rahl@otaku.sdf.org)
[06:47:49] *** Parts: cppimmo (~cppimmo@65.163.115.156) (Leaving)
[06:49:08] *** Joins: keur2 (~keur@segfault.fun)
[06:50:00] <keur2> Does anyone know what it means when you get EBADF from write()? I already know the file descriptor is valid
[06:50:13] *** Quits: rahl- (rahl@otaku.sdf.org) (Client Quit)
[06:51:16] <keur2> The file is opened with O_TRUNC | O_CREAT | O_WRONLY so it's not like i'm trying to write to a readonly fd either.
[06:52:24] <ChoHag> It means the file descriptor's not valid.
[06:53:43] <keur2> Ok. But I got it from open and checked that it's not -1 before handing it to write
[06:54:21] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:56:40] <wroathe> Share code
[06:59:48] *** Joins: oxfuxxx (~oxfuxxx@185.156.174.5)
[07:01:23] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: neshpion)
[07:01:28] *** Joins: neshpion_ (~neshpion@gateway/tor-sasl/neshpion)
[07:01:45] *** neshpion_ is now known as neshpion
[07:03:01] *** Quits: cryptonector (~nico@24.28.108.183) (Ping timeout: 240 seconds)
[07:04:08] <fizzie> And perhaps look for places that might have closed it between the open and the write. strace can be a reasonable tool for that. And just for generally checking the arguments and the return values of both open and write.
[07:04:31] *** Joins: cryptonector (~nico@24.28.108.183)
[07:05:02] *** Quits: kilolympus (~kilolympu@31.205.200.235) (Read error: Connection reset by peer)
[07:05:58] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[07:07:22] *** Joins: Emet-Selch (~haise01@user/haise01)
[07:07:28] *** Quits: pulse (~pulse@user/pulse) (Quit: Look behind you, a three headed monkey!)
[07:09:18] *** Quits: oxfuxxx (~oxfuxxx@185.156.174.5) (Ping timeout: 250 seconds)
[07:09:58] *** Joins: SymbioticFemale (~Symbiotic@user/SymbioticFemale)
[07:10:35] *** Quits: Azem (~haise01@user/haise01) (Ping timeout: 250 seconds)
[07:10:48] *** Joins: BGL (sixty@75-149-171-58-Washington.hfc.comcastbusiness.net)
[07:13:24] *** Quits: coruja (~coruja@user/coruja) (Quit: WeeChat 3.4)
[07:14:10] *** Joins: coruja (~coruja@user/coruja)
[07:16:54] <SamuelMarks> clarity - Hmm your `realloc` is still giving me a heap-buffer-overflow
[07:17:51] <SamuelMarks> This web socket solution of yours: https://0x0.st/oXG_.c  - compared to these [also nonworking] solutions I was working on: https://gist.github.com/SamuelMarks/3f386b61be78895ab8e93ad57b41e802
[07:17:52] <candide> Title of SamuelMarks's link: Experiments with simple HTTP socket server in C · GitHub
[07:18:54] <SamuelMarks> (looks like he's afk, if anyone has any ideas, I'm all ears)
[07:19:21] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[07:20:01] <keur2> realloc doesn't return a void**
[07:20:49] <SamuelMarks> Mine locally is: `*response = realloc(*response, new_size);                     if (*response == NULL) {                         const int _code = fputs("OOM", stderr);`
[07:21:51] <SamuelMarks> Hmm - https://pubs.opengroup.org/onlinepubs/009696899/functions/realloc.html - so you mean I should just check errno?
[07:22:14] <SamuelMarks> Upon successful completion with a size not equal to 0, realloc() shall return a pointer to the (possibly moved) allocated space. If size is 0, either a null pointer or a unique pointer that can be successfully passed to free() shall be returned. If there is not enough available memory, realloc() shall return a null pointer [CX] [Option Start]  and set errno to [ENOMEM]. [Option End]
[07:25:37] <ChoHag> I haven't read that but at a glance it looks like you should be assigning to *response.
[07:26:30] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Ping timeout: 276 seconds)
[07:26:33] <keur2> If you have clang installed compile with ASAN. If gcc, run under valgrind. Should point you right to it.
[07:27:20] <SamuelMarks> yes the ASan error is what I posted here
[07:27:39] <SamuelMarks> SUMMARY: AddressSanitizer: heap-buffer-overflow (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x1f6d7) in printf_common(void*, char const*, __va_list_tag*)+0x8e7 Shadow bytes around the buggy address:
[07:28:11] <SamuelMarks> wait wait that's a different line to a minute ago… hmm
[07:28:48] <SamuelMarks> It's this line `if (_code == EOF) return _code;` where the preceding line is `const int _code = fputs("OOM", stderr);` no way could that fail
[07:28:53] *** Joins: nuxil_ (~nuxil@141.195.51.213)
[07:29:32] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[07:30:33] *** Quits: nuxil (~nuxil@141.195.51.213) (Ping timeout: 256 seconds)
[07:30:37] <keur2> Doesn't ASAN give you the whole stack. Also with symbols. It will show your exact line of code.
[07:31:05] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[07:31:06] <SamuelMarks> It did the line was the `fputs` line
[07:31:21] <SamuelMarks> WHen I ran it just before it was on realloc
[07:31:22] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[07:32:14] *** Joins: MrMobius_ (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[07:32:15] *** Quits: steve__ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 256 seconds)
[07:34:09] *** Quits: cthi (~cthi@097-082-138-151.res.spectrum.com) (Remote host closed the connection)
[07:34:44] <ChoHag> Line numbers may not be exact.
[07:34:51] <ChoHag> Try disabling optimisations.
[07:35:39] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[07:35:43] *** Joins: cthi (~cthi@097-082-138-151.res.spectrum.com)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:26] <SamuelMarks> Hmm I've got: -Wall;-Wextra;-Wshadow;-Wformat=2;-Wunused;-Wno-format-nonliteral;-pedantic;-fno-omit-frame-pointer;-fsanitize=address and on my linker -fno-omit-frame-pointer;-fsanitize=address
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:14] <SamuelMarks> But that's pretty clear it's printf_common which is used by fputs right? - READ of size 766 at 0x6170000045fd thread T0     #0 0x10c3d16d7 in printf_common(void*, char const*, __va_list_tag*)+0x8e7 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x1f6d7)
[07:39:26] *** Joins: nuxil (~nuxil@141.195.51.213)
[07:39:31] *** Quits: AliasSpider (~spider-ku@nitra.ostv.sk) (Quit: Leaving)
[07:39:37] *** Joins: Guest86 (~Guest86@cpe-67-247-98-228.nyc.res.rr.com)
[07:40:52] <SamuelMarks> Although that 766 bytes is what is read by `read` so maybe it is a mangled lineno
[07:41:37] *** Quits: nuxil_ (~nuxil@141.195.51.213) (Ping timeout: 240 seconds)
[07:45:02] *** Joins: nuxil_ (~nuxil@141.195.51.213)
[07:45:02] *** Quits: nuxil (~nuxil@141.195.51.213) (Read error: Connection reset by peer)
[07:45:04] *** Quits: Guest86 (~Guest86@cpe-67-247-98-228.nyc.res.rr.com) (Quit: Client closed)
[07:46:21] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Quit: leaving)
[07:48:31] *** Quits: KevinX (~KevinX@user/KevinX) (Quit: Textual IRC Client: www.textualapp.com)
[07:50:21] *** Joins: oxfuxxx (~oxfuxxx@185.156.174.5)
[07:51:13] *** Joins: KevinX (~KevinX@user/KevinX)
[07:51:38] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:51:38] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:51:38] *** Joins: wroathe (~wroathe@user/wroathe)
[07:54:57] *** Joins: malina (~malina@user/malina)
[07:56:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[07:57:38] <SamuelMarks> Ok back to the realloc bug
[07:59:19] *** Joins: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru)
[08:01:55] <SamuelMarks> 112 lines in total - https://gist.github.com/SamuelMarks/3f386b61be78895ab8e93ad57b41e802#file-server_attempt_4-c-L89 - that's the realloc line - what am I doing wrong?
[08:01:56] <candide> Title of SamuelMarks's link: Experiments with simple HTTP socket server in C · GitHub
[08:01:58] *** Quits: oxfuxxx (~oxfuxxx@185.156.174.5) (Ping timeout: 256 seconds)
[08:02:47] *** Quits: myth (~myth@173.233.125.203) (Quit: WeeChat 3.4)
[08:06:19] <SamuelMarks> Hmm maybe `*response = realloc(*response, new_size*sizeof(char*));` rather than `*response = realloc(*response, new_size);`
[08:09:10] *** Quits: goepsilongo (~goepsilon@2603-7000-ab00-62ed-2513-aa41-6555-989e.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[08:11:29] <SamuelMarks> Or even `*response = realloc(*response, new_size + 1);`
[08:12:15] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[08:14:50] <SamuelMarks> oh sweet that worked
[08:17:17] *** Quits: nitrix (~nitrix@user/nitrix) (Quit: ZNC 1.8.2 - https://znc.in)
[08:18:13] *** Joins: nitrix (~nitrix@user/nitrix)
[08:18:15] *** Quits: nitrix (~nitrix@user/nitrix) (Remote host closed the connection)
[08:18:19] *** Quits: AssKoala (~asskoala@user/asskoala) (Read error: Connection reset by peer)
[08:18:37] *** Joins: nitrix (~nitrix@user/nitrix)
[08:22:02] *** Quits: Guest1160 (~Murray@89.109-247-180.customer.lyse.net) (Quit: leaving)
[08:22:22] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[08:23:05] *** Joins: AssKoala (~asskoala@23-121-91-253.lightspeed.dybhfl.sbcglobal.net)
[08:23:05] *** Quits: AssKoala (~asskoala@23-121-91-253.lightspeed.dybhfl.sbcglobal.net) (Changing host)
[08:23:05] *** Joins: AssKoala (~asskoala@user/asskoala)
[08:27:35] *** Joins: oxfuxxx (~oxfuxxx@87.101.92.120)
[08:30:55] *** Quits: motherfsck (~motherfsc@user/motherfsck) (Quit: quit)
[08:32:57] *** nuxil_ is now known as nuxil
[08:36:55] <SamuelMarks> arghh soo close - ERROR: AddressSanitizer: SEGV on unknown address
[08:38:00] <SamuelMarks> Oh wait was it literally `(*response)[total_bytes] = '\0';` vs `*response[total_bytes] = '\0';`
[08:38:18] *** Joins: aghast (~aghast@172.58.236.217)
[08:38:40] *** Quits: Nutcrawler (~sergio@217-180-232-30.sycmilaa.metronetinc.net) (Read error: Connection reset by peer)
[08:39:25] *** Joins: Nutcrawler (~sergio@217-180-232-30.sycmilaa.metronetinc.net)
[08:41:23] *** Quits: oxfuxxx (~oxfuxxx@87.101.92.120) (Ping timeout: 256 seconds)
[08:42:47] *** Joins: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com)
[08:45:39] *** Joins: X-Scale` (~ARM@66.26.54.77.rev.vodafone.pt)
[08:45:57] *** Joins: oxfuxxx (~oxfuxxx@87.101.92.119)
[08:48:45] *** Quits: X-Scale (~ARM@83.223.227.198) (Ping timeout: 256 seconds)
[08:48:45] *** X-Scale` is now known as X-Scale
[08:50:10] *** Joins: moog (~moog@107.77.244.68)
[08:51:08] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 250 seconds)
[08:51:45] *** Quits: joolma (uid527699@id-527699.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[08:53:17] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[08:55:37] *** Joins: wingsorc (~wingsorc@user/wingsorc)
[08:56:16] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[09:03:58] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[09:05:10] *** Quits: MsMary (~MsMary@S01069050ca4e3573.cg.shawcable.net) (Quit: Client closed)
[09:10:11] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[09:11:06] *** Quits: oxfuxxx (~oxfuxxx@87.101.92.119) (Ping timeout: 256 seconds)
[09:14:40] *** Quits: ldlework (~hexeme@user/hexeme) (Remote host closed the connection)
[09:16:01] *** Joins: hexeme (~hexeme@user/hexeme)
[09:16:49] *** Joins: oxfuxxx (~oxfuxxx@87.101.92.72)
[09:22:07] *** Joins: MsMary (~MsMary@S01069050ca4e3573.cg.shawcable.net)
[09:22:13] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:40cc:1ea:3f3e:c959) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:23:31] *** Quits: MsMary (~MsMary@S01069050ca4e3573.cg.shawcable.net) (Client Quit)
[09:30:38] <the_lanetly_052> hi guys, does it lead to UB (integer overflow): https://bpa.st/JMHA
[09:32:13] <dave0> yep
[09:32:17] <the_lanetly_052> why?
[09:32:36] <dave0> x = ~(~0ul << subnet)
[09:32:44] *** Quits: raym (~raym@user/raym) (Quit: kernel update, rebooting...)
[09:32:48] <dave0> not integer overflow
[09:33:09] *** Quits: yolo (~xxiao@li1120-73.members.linode.com) (Remote host closed the connection)
[09:33:11] <dave0> shifting by a number that is greater than the size of the number
[09:33:22] *** Quits: foul_owl (~kerry@174-21-76-71.tukw.qwest.net) (Quit: WeeChat 2.3)
[09:34:51] <dave0> oh i think i got the formula wrong
[09:35:16] <dave0> x = 0xffffffffUL >> subnet;
[09:35:24] <dave0> that should work
[09:35:36] <dave0> just make sure subnet is 0...31
[09:36:19] <the_lanetly_052> it does shifting by (32 - subnet(in case of my code is 0)) that could be ((1UL << 32)-1)=0xffffffff
[09:36:45] <dave0> not allowed to shift by 32
[09:36:55] <the_lanetly_052> why?
[09:37:00] <the_lanetly_052> i did use unsigned long to do that
[09:37:04] <dave0> assuming long is 32 bits
[09:37:08] <the_lanetly_052> ahhh
[09:37:10] <the_lanetly_052> yes
[09:37:15] <ent58> on sane platforms long is 64
[09:37:19] <the_lanetly_052> it machine dependent
[09:37:23] <ent58> on 64 bit machines
[09:37:27] <the_lanetly_052> yes yes make sure
[09:37:33] <the_lanetly_052> sense*
[09:37:41] <dave0> windows amd64 has long==32 bits
[09:37:52] <ent58> they did that on purpose
[09:37:57] <dave0> and standard c only guarantees 32
[09:38:06] <the_lanetly_052> then how can i translate that code safe variant?
[09:38:20] <ent58> long long
[09:38:25] <dave0> the_lanetly_052: can subnet be 32?
[09:38:29] <dave0> or more?
[09:39:17] <the_lanetly_052> nope subnet should be boundary of 0 .. 31
[09:39:32] <dave0> the_lanetly_052: x = 0xfffffffful >> subnet;   will work for 0<=subnet<=31
[09:40:21] *** Joins: foul_owl (~kerry@174-21-76-71.tukw.qwest.net)
[09:41:03] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[09:42:19] <the_lanetly_052> it doesn't work: original mask: fffffffffffffc00 - new mask with (0xfffffffful >> subnet): 3ff
[09:42:28] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: neshpion)
[09:42:32] <the_lanetly_052> subnet = 22
[09:44:37] <ent58> so that's what you'd AND mask an IPV4 address with
[09:44:46] <ent58> to get the part of the address that isn't the subnet mask
[09:44:47] <ent58> right?
[09:44:58] <ent58> 3ff & ip_address
[09:45:00] <ent58> ?
[09:45:09] <dave0> ,cc for(int subnet=0; subnet<=31; subnet++) { uint32_t a = ((1UL << (32 - subnet)) - 1); uint32_t b = 0xffffffffUL >> subnet; if(a != b) printf("nope %u %u ", a, b); }
[09:45:11] <candide> dave0: No output.
[09:45:20] <the_lanetly_052> yes (ip & mask) | mask
[09:46:08] <the_lanetly_052> let me share my code
[09:46:29] <dave0> ,cc for(int subnet=0; subnet<=31; subnet++) { uint32_t a = ((1UL << (32 - subnet)) - 1); uint32_t b = 0xffffffffUL >> subnet; printf("%x/%x ", a, b); }
[09:46:31] <candide> dave0: ffffffff/ffffffff 7fffffff/7fffffff 3fffffff/3fffffff 1fffffff/1fffffff fffffff/fffffff 7ffffff/7ffffff 3ffffff/3ffffff 1ffffff/1ffffff ffffff/ffffff 7fffff/7fffff 3fffff/3fffff 1fffff/1fffff fffff/fffff 7ffff/7ffff 3ffff/3ffff 1ffff/1ffff ffff/ffff 7fff/7fff 3fff/3fff 1fff/1fff fff/fff 7ff/7ff 3ff/3ff 1ff/1ff ff/ff 7f/7f 3f/3f 1f/1f f/f 7/7 3/3 1/1
[09:46:42] <dave0> my code matches your code for all values of subnet
[09:47:06] <the_lanetly_052> https://bpa.st/PNSA
[09:48:42] *** Quits: aghast (~aghast@172.58.236.217) (Quit: Leaving)
[09:49:23] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Ping timeout: 256 seconds)
[09:49:45] *** Joins: z4kpi (~z4kpi@user/zacts)
[09:49:49] *** Joins: raym (~raym@user/raym)
[09:50:12] <the_lanetly_052> i changed mask to uint64_t
[09:50:34] *** Quits: z4kpi (~z4kpi@user/zacts) (Client Quit)
[09:52:25] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[09:52:25] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[09:52:25] *** Joins: wroathe (~wroathe@user/wroathe)
[09:55:11] <the_lanetly_052> uint64_t mask = ~((1UL << (32 - subnet)) - 1);
[09:56:14] <dave0> ,cc int subnet = 22; uint32_t ip_addr = 0xc2879817; uint32_t mask = 0xffffffffUL >> subnet; uint32_t netmask = (ip_addr & ~mask) | mask; printf("%x ", netmask);
[09:56:16] <candide> dave0: c2879bff
[09:56:31] <dave0> is that the right answer?
[09:56:42] <the_lanetly_052> one min let me check
[09:57:34] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[09:58:24] *** Joins: lleo (~leo@188-206-96-113.mobile.kpn.net)
[09:58:52] *** Quits: alch (~alch@151.68.165.166) (Read error: Connection reset by peer)
[09:59:18] <the_lanetly_052> yes it works
[09:59:29] <the_lanetly_052> thank you dave0
[09:59:34] <dave0> no worries
[09:59:49] <dave0> you could consider adding an    assert(subnet >= 0 && subnet <= 31);
[09:59:54] *** Quits: teepee (~teepee@openscad/teepee) (Ping timeout: 276 seconds)
[10:00:27] <the_lanetly_052> yes i added that
[10:00:36] <dave0> excellent
[10:00:57] <the_lanetly_052> thanks
[10:01:13] <dave0> :-)
[10:01:58] *** Joins: teepee (~teepee@openscad/teepee)
[10:02:49] *** Joins: alch (~alch@151.68.150.201)
[10:06:19] *** Quits: DSee (~DSee@173.237.207.12) (Quit: Quit)
[10:07:49] *** Joins: kamarat (~kamarat@81.161.60.198)
[10:09:00] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Ping timeout: 276 seconds)
[10:09:47] *** Joins: ik (uid540109@id-540109.uxbridge.irccloud.com)
[10:13:25] *** Joins: mahmutov (~mahmutov@5.176.33.7)
[10:14:58] *** Joins: crashrep (~crashrep@user/crashrep)
[10:15:27] *** Joins: dantob (~dantob@121-200-9-125.79c809.mel.nbn.aussiebb.net)
[10:16:47] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:ad42:8d8e:a97e:d554) (Quit: Quit)
[10:20:03] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[10:22:39] *** Joins: MsMary (~MsMary@S01069050ca4e3573.cg.shawcable.net)
[10:22:51] *** Joins: salongbasi (~salongbas@117.143.103.5)
[10:23:20] *** Parts: salongbasi (~salongbas@117.143.103.5) ()
[10:25:22] *** Quits: auk (auk@gateway/vpn/protonvpn/auk) (Quit: Leaving)
[10:26:22] *** Quits: dantob (~dantob@121-200-9-125.79c809.mel.nbn.aussiebb.net) (Quit: dantob)
[10:28:38] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[10:36:25] *** hexeme is now known as ldlework
[10:38:22] *** Quits: oxfuxxx (~oxfuxxx@87.101.92.72) (Ping timeout: 256 seconds)
[10:38:41] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Quit: And I'm out.)
[10:42:34] *** Joins: savolla (~quassel@88.227.92.215)
[10:43:39] *** Joins: bolovanos__ (~bolovanos@user/bolovanos)
[10:45:27] *** Joins: oxfuxxx (~oxfuxxx@87.101.92.72)
[10:47:59] *** Joins: crashrep (~crashrep@user/crashrep)
[10:48:57] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[10:52:41] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: Goodbye.)
[10:52:53] *** Quits: MsMary (~MsMary@S01069050ca4e3573.cg.shawcable.net) (Quit: Client closed)
[10:53:12] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[10:55:29] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[10:56:22] *** Quits: oxfuxxx (~oxfuxxx@87.101.92.72) (Ping timeout: 250 seconds)
[10:59:05] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[11:01:05] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[11:02:57] *** Joins: oxfuxxx (~oxfuxxx@87.101.92.120)
[11:03:00] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[11:07:35] *** Quits: oxfuxxx (~oxfuxxx@87.101.92.120) (Ping timeout: 256 seconds)
[11:09:07] *** Joins: mrig (~mrig@user/mrig)
[11:09:40] *** Joins: cherrry9 (~jan@aein251.neoplus.adsl.tpnet.pl)
[11:12:01] *** Joins: freep (~freepppp@188.4.23.166.dsl.dyn.forthnet.gr)
[11:13:17] *** Quits: lleo (~leo@188-206-96-113.mobile.kpn.net) (Ping timeout: 240 seconds)
[11:15:19] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: Goodbye.)
[11:18:07] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[11:19:56] *** Quits: Whatshisface (~jon@catv-178-48-246-132.catv.fixed.vodafone.hu) (Quit: BitchX-1.3-git -- just do it.)
[11:28:50] *** Joins: magla (~gelignite@55d43a63.access.ecotel.net)
[11:31:51] *** Joins: chung (uid498429@id-498429.helmsley.irccloud.com)
[11:34:56] *** Quits: dogbert2 (~Bill@ip68-227-25-62.lv.lv.cox.net) (Remote host closed the connection)
[11:35:12] *** Joins: dogbert2 (~Bill@ip68-227-25-62.lv.lv.cox.net)
[11:42:46] *** Joins: z4kpi (~z4kpi@user/zacts)
[11:45:24] *** z4kpi is now known as zacts
[11:45:27] *** zacts is now known as z4kpi
[11:45:29] *** Joins: pucara (~i@host14.181-1-101.telecom.net.ar)
[11:47:05] *** Joins: uidops (~uidops@185.126.1.72)
[11:48:18] *** Parts: uidops (~uidops@185.126.1.72) ()
[11:52:08] *** Quits: magla (~gelignite@55d43a63.access.ecotel.net) (Quit: Stay safe!)
[11:56:54] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[11:59:03] *** Quits: chung (uid498429@id-498429.helmsley.irccloud.com) ()
[12:00:07] *** Joins: hiovoltage (~hiovoltag@176.88.87.168)
[12:00:16] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[12:03:56] *** Quits: savolla (~quassel@88.227.92.215) (Ping timeout: 256 seconds)
[12:08:28] *** Quits: mahmutov (~mahmutov@5.176.33.7) (Ping timeout: 256 seconds)
[12:09:28] *** Joins: vysn (~vysn@user/vysn)
[12:19:47] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[12:19:52] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Client Quit)
[12:20:03] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[12:26:47] *** Joins: gproto23 (~gproto23@user/gproto23)
[12:30:18] *** Joins: cosimone (~user@93-44-184-23.ip98.fastwebnet.it)
[12:42:17] *** Joins: aradesh (~aradesh@user/aradesh)
[12:42:28] *** Quits: the_lanetly_052 (~the_lanet@194.135.152.23) (Ping timeout: 256 seconds)
[12:47:09] *** Joins: savolla (~quassel@88.227.92.215)
[12:48:49] *** Joins: crashrep (~crashrep@user/crashrep)
[12:54:06] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[12:54:22] *** Quits: savolla (~quassel@88.227.92.215) (Ping timeout: 256 seconds)
[12:54:39] *** Quits: cherrry9 (~jan@aein251.neoplus.adsl.tpnet.pl) (Ping timeout: 250 seconds)
[12:55:42] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:57:43] *** Joins: reset (~reset@user/reset)
[12:58:24] *** Quits: suss (~user@user/suss) (Read error: Connection reset by peer)
[13:02:45] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[13:04:57] *** Quits: Dotz0cat (~Dotz0cat@h227.228.187.173.dynamic.ip.windstream.net) (Ping timeout: 240 seconds)
[13:06:59] *** Quits: z4kpi (~z4kpi@user/zacts) (Quit: Client closed)
[13:07:47] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[13:08:55] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[13:09:01] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[13:09:01] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[13:09:01] *** Joins: wroathe (~wroathe@user/wroathe)
[13:10:01] *** Joins: X-Scale` (~ARM@31.22.166.28)
[13:11:01] *** Quits: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com) (Quit: Client closed)
[13:11:56] *** Quits: X-Scale (~ARM@66.26.54.77.rev.vodafone.pt) (Ping timeout: 256 seconds)
[13:11:57] *** X-Scale` is now known as X-Scale
[13:13:36] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[13:13:58] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[13:19:38] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[13:22:52] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[13:25:45] *** gjvc_ is now known as gjvc
[13:26:10] *** Joins: crankslider (~slidercra@user/slidercrank)
[13:34:50] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[13:35:25] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e5ab:a286:27f1:6ff2)
[13:38:19] *** Quits: Masklin_Gurder (~joel@h-5-150-226-94.A230.priv.bahnhof.se) (Ping timeout: 256 seconds)
[13:48:32] *** Quits: Praise (~Fat@user/praise) (Ping timeout: 252 seconds)
[13:51:40] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Quit: Leaving)
[13:52:27] *** Joins: pulsar12 (~quassel@a95-92-49-154.cpe.netcabo.pt)
[13:53:53] *** pulsar12 is now known as Guest42084
[13:53:55] *** Guest42084 is now known as pulsar12
[13:57:12] *** Joins: bebyx (~Thunderbi@user/bebyx)
[13:59:01] *** Quits: pnbeast (~pnbeast@2601:140:4280:6ce0::1) (Quit: WeeChat 2.7.1)
[13:59:44] *** Joins: strajder (~strajder@user/strajder)
[14:01:48] *** Quits: alch (~alch@151.68.150.201) (Ping timeout: 256 seconds)
[14:03:19] *** Joins: alch (~alch@151.82.133.194)
[14:07:33] *** Joins: masoudd (~masoudd@user/masoudd)
[14:13:43] *** Joins: bladerunner1 (~bladerunn@42.106.199.159)
[14:14:05] <bladerunner1> what is the "\t" format parameter used for?
[14:16:26] <dave0> it's a character, not a format ... short for tab, ascii 9
[14:16:34] <bladerunner1> oh
[14:16:49] <bladerunner1> Thanks
[14:16:58] <dave0> similar in a sense to newline   \n    which is also a character, ascii 10
[14:17:18] <dave0> can't remember which man page lists them all
[14:17:36] <bladerunner1> Hmm, it's called "character"?
[14:17:42] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[14:17:51] <dave0> https://en.wikipedia.org/wiki/Escape_sequences_in_C
[14:18:03] <bladerunner1> yeahh escape sequences!
[14:21:26] *** Joins: savolla (~quassel@88.227.92.215)
[14:27:01] <tk> dave0: ascii(7)?
[14:28:40] *** Joins: De4n_Whit3 (~De4n_Whit@165-73-119-36.ip.afrihost.capetown)
[14:28:58] <De4n_Whit3> Hello everyone!
[14:28:59] <dave0> tk: ah thanks!
[14:32:43] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[14:32:54] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[14:34:04] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[14:34:13] *** Quits: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 240 seconds)
[14:34:35] *** Joins: Rounin (~david@84.212.130.215)
[14:34:41] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[14:38:22] *** Joins: somlis (~somlis@user/somlis)
[14:39:17] *** Quits: Jong (~Jong@2620:10d:c090:400::5:905d) (Ping timeout: 240 seconds)
[14:39:38] *** Quits: cosimone (~user@93-44-184-23.ip98.fastwebnet.it) (Remote host closed the connection)
[14:40:05] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[14:40:45] *** Quits: shailangsa (~shailangs@host217-39-45-199.range217-39.btcentralplus.com) ()
[14:40:58] *** Joins: gproto23_ (~gproto23@user/gproto23)
[14:41:10] *** Joins: Jong (~Jong@2620:10d:c090:400::5:905d)
[14:43:29] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 256 seconds)
[14:43:51] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[14:45:23] <bladerunner1> printf("%3d - %s\n", i, argv[1]); // why is there a 3 after %
[14:46:10] *** Joins: \o\ (~i.am@187.112.46.243)
[14:47:09] <masoudd> The overall syntax of a conversion specification is: %[$][flags][width][.precision][length modifier]conversion
[14:47:13] <masoudd> from man 3 printf
[14:47:46] *** Quits: bolovanos__ (~bolovanos@user/bolovanos) (Ping timeout: 250 seconds)
[14:48:32] <masoudd> that 3 is the "width"
[14:49:22] *** Quits: reset (~reset@user/reset) (Quit: reset)
[14:49:42] *** Joins: crashrep (~crashrep@user/crashrep)
[14:50:38] *** Joins: cherrry9 (~jan@aein251.neoplus.adsl.tpnet.pl)
[14:50:52] <bladerunner1> Ight it's kinda confusing
[14:51:38] *** Joins: reset (~reset@user/reset)
[14:51:41] <masoudd> yeah a little
[14:53:20] *** Joins: steve__ (~steve@ool-182c2b80.dyn.optonline.net)
[14:53:51] *** Quits: pucara (~i@host14.181-1-101.telecom.net.ar) (Quit: Lost terminal)
[14:53:58] *** Joins: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net)
[14:54:00] <masoudd> Field width: An  optional  decimal digit string (with nonzero first digit) specifying a minimum field width.  If the converted value has fewer characters than the field width, it will be padded with spaces on the left (or right, if the left-adjustment flag has been given).  Instead of a decimal digit string one may write  "*"  or  "*m$" (for  some  decimal integer m) to specify that the field width is given in the next argument, or in the m-th argument,
[14:54:00] <masoudd> respectively, which must be of type int.  A negative field width is taken as a '-' flag followed by a positive field width.  In no case does a nonexistent or small field width cause truncation of  a  field; if the result of a conversion is wider than the field width, the field is expanded to contain the conversion result.
[14:54:04] *** Joins: Salongbasi (~Salongbas@117.143.103.5)
[14:54:29] *** Parts: Salongbasi (~Salongbas@117.143.103.5) ()
[14:55:00] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[14:55:38] <masoudd> tl;dr: if you print 42 with %3d it prints a single space before it so it's 3 chars wide. 42 -> _42, 1 -> __1
[14:55:57] <dave0> bladerunner1: the 3 means at least three characters .. so if `i` was 69, it would print   <space> 6 9
[14:56:18] <dave0> oh yes _ is better to mean a space
[14:56:35] *** Quits: crankslider (~slidercra@user/slidercrank) (Read error: Connection reset by peer)
[14:56:50] <masoudd> I hope so. I don't want to make him them think it will print an underline...
[14:57:18] <dave0> bladerunner1: it's a minimum so 1234 will still be four characters
[14:57:50] <dave0> bladerunner1: there's a long list of rules.. they are here: https://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
[14:59:54] *** Joins: crankslider (~slidercra@user/slidercrank)
[14:59:55] *** Joins: slidercrank (~slidercra@user/slidercrank)
[15:00:58] *** Quits: crankslider (~slidercra@user/slidercrank) (Client Quit)
[15:01:16] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[15:01:28] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[15:07:50] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e5ab:a286:27f1:6ff2) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[15:10:16] *** Joins: kts (~kts@103.73.237.171)
[15:10:39] <bladerunner1> I see, yeah now I get it
[15:14:26] *** Quits: Thedarkb1-Deskto (~Thedarkb@2001:bb6:b403:e042:79b7:c08:b478:f78d) (Read error: Connection reset by peer)
[15:15:23] *** Joins: Thedarkb-Desktop (~Thedarkb@78.141.240.26)
[15:17:39] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e5ab:a286:27f1:6ff2)
[15:24:00] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Quit: Leaving)
[15:24:17] *** Quits: malina (~malina@user/malina) (Ping timeout: 240 seconds)
[15:25:07] *** Quits: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net) (Quit: leaving)
[15:29:38] *** Joins: malina (~malina@user/malina)
[15:30:44] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:31:32] *** Joins: csrf (~csrf@user/csrf)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:38:08] *** Joins: mrig_ (~mrig@amarseille-656-1-74-198.w86-198.abo.wanadoo.fr)
[15:39:58] *** Quits: kassle (~kassle@107.175.32.53) (*.net *.split)
[15:39:58] *** Quits: mbarbar (~mbarbar@oak.xen.prgmr.com) (*.net *.split)
[15:40:00] *** Quits: kts (~kts@103.73.237.171) (Quit: Konversation terminated!)
[15:40:49] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:e557:6165:d2a8:a2e9)
[15:40:49] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:e557:6165:d2a8:a2e9) (Changing host)
[15:40:49] *** Joins: skapata (~Skapata@user/skapata)
[15:41:49] *** Quits: dsrt^ (~dsrt@50.235.176.163) (Remote host closed the connection)
[15:42:06] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 256 seconds)
[15:42:07] *** Quits: LuKaRo (~LuKaRo@p200300dfa72f4bb300000000000001f9.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[15:42:31] *** Quits: mrig_ (~mrig@amarseille-656-1-74-198.w86-198.abo.wanadoo.fr) (Changing host)
[15:42:31] *** Joins: mrig_ (~mrig@user/mrig)
[15:42:31] *** mrig_ is now known as mrig
[15:43:31] *** Joins: Praise (~Fat@user/praise)
[15:44:36] *** Joins: LuKaRo (~LuKaRo@p4fc3264a.dip0.t-ipconnect.de)
[15:48:32] *** Joins: plastico (~plastico@neomutt/plastico)
[15:56:53] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[15:58:50] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 250 seconds)
[16:00:48] *** Joins: imm_ (~imm_@user/imm/x-3405860)
[16:05:04] *** Joins: ekathva (~ekathva@2001:999:50:cab1:50ea:c175:d5c5:72f3)
[16:05:55] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:08:41] *** Joins: rahl- (rahl@otaku.sdf.org)
[16:11:48] *** [RMS] is now known as [R]
[16:13:12] *** Joins: basedboy (~ninjaspid@175.142.111.245)
[16:13:45] *** Quits: figrita (~figrita@2603-7080-9801-332f-5813-eeaf-976d-830a.res6.spectrum.com) (Ping timeout: 250 seconds)
[16:14:08] *** Joins: figrita (~figrita@2603-7080-9801-332f-5813-eeaf-976d-830a.res6.spectrum.com)
[16:15:52] *** Joins: random-nick (~random-ni@87.116.167.125)
[16:16:13] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[16:18:02] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[16:19:40] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[16:19:59] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[16:21:00] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:1823:ee83:7026:65a9)
[16:24:09] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e5ab:a286:27f1:6ff2) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[16:27:04] *** Quits: bladerunner1 (~bladerunn@42.106.199.159) (Quit: WeeChat 3.4)
[16:28:29] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[16:28:44] *** Quits: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte) (Remote host closed the connection)
[16:28:45] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Remote host closed the connection)
[16:28:56] *** Joins: kish` (~aqua@user/aqua)
[16:29:09] *** Joins: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte)
[16:29:10] *** Joins: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[16:30:21] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[16:31:08] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[16:34:06] *** Quits: Jong (~Jong@2620:10d:c090:400::5:905d) (Ping timeout: 245 seconds)
[16:34:42] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:1823:ee83:7026:65a9)
[16:37:50] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:1823:ee83:7026:65a9) (Ping timeout: 250 seconds)
[16:37:59] *** Joins: drbeco (~beco@2804:351c:dd01:6600:e4a2:7a5d:e23f:1fd8)
[16:39:26] *** Quits: savolla (~quassel@88.227.92.215) (Read error: Connection reset by peer)
[16:39:48] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[16:42:06] *** Joins: savolla (~quassel@88.227.92.215)
[16:44:28] *** zer0bitz_ is now known as zer0bitz
[16:44:35] *** Joins: kish` (~aqua@user/aqua)
[16:44:43] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[16:44:53] <SamuelMarks> hi
[16:45:02] <high_ground> hi
[16:49:50] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[16:49:58] *** Quits: bzyx (~quassel@89-69-20-238.dynamic.chello.pl) (Ping timeout: 250 seconds)
[16:50:31] *** Joins: crashrep (~crashrep@user/crashrep)
[16:54:59] *** Joins: Darkcoal (~user@user/Darkcoal)
[16:55:45] *** Joins: gareppa (~gareppa@user/gareppa)
[16:55:54] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[16:57:24] *** Quits: basedboy (~ninjaspid@175.142.111.245) (Quit: Leaving)
[16:57:32] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[16:57:42] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[16:58:35] *** Joins: bzyx (~quassel@89-69-20-238.dynamic.chello.pl)
[16:59:43] *** Quits: ka80 (~ka80@111.60.138.34.bc.googleusercontent.com) (Quit: Leaving)
[17:01:18] *** Joins: kassle (~kassle@107.175.32.53)
[17:01:18] *** Joins: mbarbar (~mbarbar@oak.xen.prgmr.com)
[17:04:17] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 240 seconds)
[17:05:54] *** Joins: vikn (~vikn@83-233-104-30.cust.bredband2.com)
[17:06:11] *** Quits: vikn (~vikn@83-233-104-30.cust.bredband2.com) (Remote host closed the connection)
[17:06:23] *** Joins: Darkcoal (~user@user/Darkcoal)
[17:07:01] *** Joins: ka80 (~ka80@111.60.138.34.bc.googleusercontent.com)
[17:07:39] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Read error: Connection reset by peer)
[17:07:58] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[17:13:35] *** Joins: Salongbasi (~Salongbas@user/Salongbasi)
[17:13:49] *** Parts: Salongbasi (~Salongbas@user/Salongbasi) ()
[17:15:10] *** Joins: shailangsa (~shailangs@host109-159-108-227.range109-159.btcentralplus.com)
[17:16:52] <SamuelMarks> Can I control how often a `read` happens? - My simple socket server seems to hang for a while…
[17:17:22] <caze> Don't read if you don't want to.
[17:18:19] *** Quits: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru) (Read error: Connection reset by peer)
[17:20:59] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:78e9:2c9a:5431:d092)
[17:21:14] <SamuelMarks> I stop reading when the number of bytes read in are less than the number of bytes I requested: https://gist.github.com/SamuelMarks/3f386b61be78895ab8e93ad57b41e802#file-server_attempt_5-c-L79
[17:21:15] <candide> Title of SamuelMarks's link: Experiments with simple HTTP socket server in C · GitHub
[17:21:52] <SamuelMarks> Which works (line 100) but it just hangs for like 20 seconds before exiting that loop
[17:22:17] <SamuelMarks> Do I need to `close` something?
[17:23:41] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[17:24:58] *** Quits: Darkcoal (~user@user/Darkcoal) (Quit: Darkcoal)
[17:25:02] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:1823:ee83:7026:65a9) (Ping timeout: 260 seconds)
[17:25:55] *** Joins: absentia (~absentia@user/absentia)
[17:28:45] *** Quits: haliucinas (~haliucina@5.20.153.21) (Remote host closed the connection)
[17:28:54] *** Joins: Darkcoal_ (Darkcoal@shelltalk.net)
[17:31:48] *** Joins: HaMsTeRs (~Thunderbi@210.3.213.4)
[17:31:53] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Remote host closed the connection)
[17:32:12] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Remote host closed the connection)
[17:32:18] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[17:32:37] *** Joins: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[17:34:13] *** Joins: haliucinas (~haliucina@5.20.153.21)
[17:36:25] *** Quits: Oddity (~Oddity@user/oddity) (Remote host closed the connection)
[17:37:54] *** Joins: acerbic (~acerbic@cs-xdata-50-86-51-180.cspire.com)
[17:38:30] *** Quits: HaMsTeRs (~Thunderbi@210.3.213.4) (Quit: HaMsTeRs)
[17:38:42] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[17:39:28] *** Joins: Xgc_ (~Xgc@user/xgc)
[17:39:49] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:7f9:7e5d:ee7f:d250) (Remote host closed the connection)
[17:40:28] *** Quits: Xgc (~Xgc@user/xgc) (Killed (NickServ (GHOST command used by Xgc_)))
[17:40:31] *** Xgc_ is now known as Xgc
[17:41:27] <clarity> SamuelMarks: Read blocks if there's no input and you're not using a nonblocking socket
[17:43:21] <clarity> If something is hanging, you must figure out what exactly is hanging
[17:43:30] <clarity> If you think you're not calling read, then it's something else right?
[17:43:33] <clarity> Or you're calling read
[17:46:12] <clarity> Oh your code segfaults again
[17:46:24] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[17:46:40] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[17:48:48] <De4n_Whit3> My merge sort algorithm is broken.
[17:49:37] *** Quits: Darkcoal_ (Darkcoal@shelltalk.net) (Quit: IRCNow and Forever!)
[17:50:58] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:dc5d:b40d:bcf:dcae)
[17:51:55] <NRK> sadface
[17:53:22] <De4n_Whit3> NRK!
[17:53:26] *** Joins: BCMM (~BCMM@user/bcmm)
[17:53:53] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[17:56:21] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[17:58:43] *** Joins: seninha (~seninha@user/seninha)
[17:58:43] *** Quits: alch (~alch@151.82.133.194) (Read error: Connection reset by peer)
[18:00:26] *** Quits: joev (~joev@user/joev) (Quit: WeeChat 2.3)
[18:01:16] <NRK> yes?
[18:01:26] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 260 seconds)
[18:01:56] *** Joins: wroathe (~wroathe@user/wroathe)
[18:02:01] <De4n_Whit3> I have a very bad memory, I do exercises for it, I apologize in advance. But did we speak about 2 days ago?
[18:02:57] <NRK> i don't remember so..
[18:03:39] *** Joins: alch (~alch@151.82.220.203)
[18:08:11] *** Joins: crashrep (~crashrep@user/crashrep)
[18:09:48] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:cce5:129b:c2cd:8f44)
[18:13:15] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[18:13:15] *** Quits: acerbic (~acerbic@cs-xdata-50-86-51-180.cspire.com) (Read error: Connection reset by peer)
[18:14:41] <cehteh> interesting thing: a friend observed that rustc/llvm only generats optimal simd code over an operation on 2 slices when they have the same length (obliviously) ... but now how would one force the compiler to recognize that 2 slices taken as parameter have the same length?
[18:15:02] <cehteh> err echan
[18:17:21] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[18:18:52] *** Joins: shivesh (~shivesh@user/shivesh)
[18:24:12] <Xgc> De4n_Whit3: It's tough to get merge sort wrong. :)
[18:28:08] <wroathe> Xgc: I could do it
[18:28:22] <wroathe> You just gotta believe in yourself
[18:28:51] *** Joins: Dotz0cat (~Dotz0cat@h77.175.40.162.dynamic.ip.windstream.net)
[18:30:40] *** Quits: BCMM (~BCMM@user/bcmm) (Quit: Konversation terminated!)
[18:32:41] *** Joins: merrinx1 (~merrinx@ti0028a400-1685.bb.online.no)
[18:32:59] *** Quits: merrinx1 (~merrinx@ti0028a400-1685.bb.online.no) (Client Quit)
[18:34:32] *** Joins: kts (~kts@103.73.237.228)
[18:36:00] *** Quits: dogbert2 (~Bill@ip68-227-25-62.lv.lv.cox.net) (Remote host closed the connection)
[18:36:15] *** Joins: dogbert2 (~Bill@ip68-227-25-62.lv.lv.cox.net)
[18:40:44] *** Quits: mrig (~mrig@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[18:42:51] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[18:42:58] *** Joins: Quasimodo (~Quasimodo@user/Quasimodo)
[18:44:23] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[18:44:57] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[18:45:23] <Xgc> De4n_Whit3: You spoke with ski a few days ago.  If you want feedback, just post a link to the problem code.  Your prior paste expired.
[18:45:55] <De4n_Whit3> Xgc *Stares with admiration* Thank you!
[18:46:00] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Remote host closed the connection)
[18:46:53] *** Joins: crashrep (~crashrep@user/crashrep)
[18:47:58] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[18:48:10] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[18:48:10] <De4n_Whit3> Xgc I am wrestling it with myself a little more to try and get it resolved. There was a problem moving from my basic int array to a struct array that has a int inside.
[18:48:27] *** Quits: savolla (~quassel@88.227.92.215) (Ping timeout: 250 seconds)
[18:48:46] *** Joins: savolla (~quassel@95.10.239.64)
[18:49:06] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[18:49:55] *** Quits: Quasimodo (~Quasimodo@user/Quasimodo) (Quit: Leaving)
[18:50:55] <De4n_Whit3> I SOLVED IT! The past couple of hours finally paid off!
[18:52:30] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 256 seconds)
[18:54:10] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:54:10] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:54:10] *** Joins: wroathe (~wroathe@user/wroathe)
[18:55:17] *** Quits: kts (~kts@103.73.237.228) (Quit: Konversation terminated!)
[18:55:59] *** Parts: riv (river@tilde.team/user/river) (WeeChat 3.4)
[18:56:16] *** Joins: kts (~kts@103.73.237.228)
[18:57:20] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[18:58:39] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[19:00:14] *** Quits: motherfsck (~motherfsc@user/motherfsck) (Ping timeout: 260 seconds)
[19:01:15] *** Quits: bebyx (~Thunderbi@user/bebyx) (Quit: bebyx)
[19:03:09] <Xgc> De4n_Whit3: When you're learning, it can be helpful to get feedback on anything you decide is "solved".
[19:03:36] <Xgc> Very often "solved" just means "I no longer notice the remaining problems"
[19:04:13] <De4n_Whit3> Copy that Xgc. It was the same mistake I made 2 days ago. Just in a different program. #Embarassed
[19:08:49] *** Joins: euouae (~euouae@user/euouae)
[19:08:54] <euouae> Hello
[19:09:23] <euouae> on unix with bsd sockets, how can I have IPC between a server and a client process? I'm looking at some software that uses, e.g. accept() but I don't really understand the description of accept()
[19:09:26] <euouae> A listening socket is what exactly?
[19:10:26] *** MrMobius_ is now known as MrMobius
[19:11:37] <sham1> A listening socket is what you connect to
[19:11:41] *** Joins: mrig (~mrig@user/mrig)
[19:11:52] *** Quits: mormue (~mormue@static.29.186.130.94.clients.your-server.de) (Quit: The Lounge - https://thelounge.chat)
[19:11:57] <sham1> For example with a TCP socket, it's the socket on the server
[19:12:03] <sham1> Similar stuff with UNIX protocol sockets
[19:12:13] *** Joins: cosimone (~user@93-44-184-23.ip98.fastwebnet.it)
[19:12:57] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:dc5d:b40d:bcf:dcae) (Remote host closed the connection)
[19:13:27] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[19:13:56] *** Joins: acerbic (~acerbic@cs-xdata-50-86-54-234.cspire.com)
[19:15:02] *** Joins: kilolympus (~kilolympu@31.205.200.235)
[19:16:01] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:1ebd:6698:6e81:143f)
[19:16:35] *** Joins: off^ (~off@50.235.176.163)
[19:17:32] <euouae> sham1, so if the socket is appropriately created with socket(), it's a "listening socket". How do clients attempt to connect? Over a file, for example?
[19:19:57] <sham1> With the connect system call
[19:20:17] <clarity> euouae: Call listen() and you have a listening socket
[19:20:50] <sham1> You supply a record of the address you want to connect to for the connect system call, and then you try to connect to the listening socket on the other side. Of course this is very simplified an explanation and almost certainly inaccurate. I'd recommend the beej book about this
[19:21:06] <fizzie> There's also a full example on my `man 7 unix` (with a server and a client).
[19:21:25] *** Joins: DavidMilestone (~DavidMile@182.68.131.163)
[19:21:30] <euouae> I think `info libc sockets` might be the best for me, I've gotten used to info and I like it. Thank you! I just realized there's good docs
[19:23:07] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[19:25:11] *** Joins: paravida (~myChateau@user/paravida)
[19:25:24] *** Joins: teepee (~teepee@openscad/teepee)
[19:28:23] <De4n_Whit3> If anyone could please assist. I have an array of struct elements called candidates. I do a comparison between names that should be case -insensitive-. A person passes in a name, i compare it to a COPY of the name in the struct, which I both cast to uppercase for comparison. But then when I print the candidates name from the original (presumably
[19:28:24] <De4n_Whit3> unchanged) struct array, the element in the name has also been uppercased! https://paste.debian.net/1230654/ What went wrong?
[19:29:13] <De4n_Whit3> Pretty much  candidates[i].name becomes uppercased. I am mind blown.
[19:29:27] <clarity> It becomes uppercased because you uppercase it
[19:29:30] <clarity> What do you expect?
[19:29:53] <De4n_Whit3> No, I uppercase 'tempname'.
[19:30:11] <clarity> tempname is equal to candidates[i].name
[19:30:18] <clarity> So you uppercase candidates[i].name
[19:30:26] <De4n_Whit3> Whaaat, it's passing the address? I only wanted the value.
[19:30:58] <clarity> Who came up with this "string"?
[19:31:36] <De4n_Whit3> Err, it's either from string.h or harvard.
[19:32:16] <clarity> It's not from string.h
[19:32:25] <De4n_Whit3> Then it's harvard.
[19:32:38] <clarity> Well, get rid of harvard
[19:32:52] <clarity> Or figure out their footguns
[19:32:57] <clarity> The choice is yours :)
[19:33:14] <clarity> I might also recommend strcasecmp
[19:33:48] <De4n_Whit3> You're not allowed to remove their code from the assignment. XD  I had a good chuckle at remove harvard. It does point out though that I don't understand their library. I appreciate the advice.
[19:33:53] <pragma-> I hate C courses that use a bunch of course-specific macros to "make it easier" for beginners. I think it accomplishes the opposite and only makes things more confusing in the long run and gives new users incredibly bad habits.
[19:34:09] <clarity> Yea and this is a great example of just obfuscating what's happening here
[19:34:13] <NRK> ^
[19:34:28] <perro_> yes
[19:34:31] <De4n_Whit3> Your words of wisdom inspire me. I'll check out strcasecmp! Thank you clarity
[19:34:41] <NRK> i like terry's rant on it
[19:34:52] *** Joins: Cleverness (~Clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[19:35:06] <sham1> pragma-: I hate C courses that tell people to use scanf for input, and then not explain what scanf does and how to avoid pitfalls
[19:36:48] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 250 seconds)
[19:37:13] *** Joins: freepp (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr)
[19:37:19] *** Joins: korg815 (~korg815@user/korg815)
[19:37:44] *** Joins: mormue (~mormue@static.29.186.130.94.clients.your-server.de)
[19:37:46] *** Quits: mormue (~mormue@static.29.186.130.94.clients.your-server.de) (Client Quit)
[19:37:48] <De4n_Whit3> clarity it works. *u* Thank you so much.
[19:37:56] <clarity> You're welcome :)
[19:38:09] <De4n_Whit3> I hated my uppercase function so much.
[19:38:22] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:cce5:129b:c2cd:8f44) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:38:29] <euouae> I hate courses :D Learn it on your own lol
[19:38:39] *** Joins: mormue (~mormue@static.29.186.130.94.clients.your-server.de)
[19:39:23] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 250 seconds)
[19:40:15] *** Quits: freep (~freepppp@188.4.23.166.dsl.dyn.forthnet.gr) (Ping timeout: 250 seconds)
[19:40:36] <ioxzev1z> euouae, wrt the listening socket stuff, on a server you want getaddrinfo(); { socket(); bind(); } listen(); then you while(1) { cli = accept(s_fd, ...); } as the basic way to get connections
[19:41:00] <ioxzev1z> But I'm sure there are plenty of good libraries to hide the plain socket stuff
[19:41:12] <euouae> ioxzev1z why do you use getaddrinfo?
[19:41:39] <euouae> the thing I'm trying to copy is having a connection over a file. I.e. somehow a file is telling the clients /where/ to connect to. I haven't yet understood the details
[19:41:39] <clarity> So you can bind to localhorse instead of 127.0.0.1
[19:41:41] <clarity> It's not really needed
[19:41:57] <NRK> nope, it wants login
[19:42:03] <NRK> err, wrong chat..
[19:42:07] <ioxzev1z> euouae, so you don't have to use old name functions or care about IPv4/Ipv6. With getaddrinfo you get a list of potential addresses, and in general you use the first one that works. You also want struct sockaddr_storage so that you are 4/6 independent
[19:42:49] <euouae> ioxzev1z is that the unix way? It seems this daemon is using a file for IPC. What is the difference? Is it a named pipe instead of networking? I guess it's not using TCP?
[19:42:54] <ioxzev1z> e.g. getaddinfo("127.0.0.1", ...) and getaddrinfo("::1, ...) work as is, no need to care about Ipv6
[19:43:04] <clarity> euouae: What does file say about the file?
[19:43:25] <euouae> clarity I haven't yet figured out which file it is
[19:43:29] <ioxzev1z> getaddrinfo also works with domains, such as getaddrinfo("libera.chat", ...), etc
[19:43:34] <euouae> I don't know how it gets associated to the listening socket
[19:43:53] * pragma- discovered AF_VSOCK earlier this week.
[19:43:56] <ioxzev1z> euouae, the listening socket is made via socket(); bind(); listen(); after which you just cli = accept(srv_fd, ...);
[19:44:19] <clarity> euouae: Ok, what daemon are you talking about anyway?
[19:44:22] <ioxzev1z> A listening socket literally just waits for incoming connections, and accept() returns the fd for the new connection
[19:44:56] *** Joins: kurahaupo_ (~kurahaupo@pa49-197-103-160.pa.qld.optusnet.com.au)
[19:44:58] <clarity> euouae: And how do you know it's using a file for IPC?
[19:46:05] <euouae> I read it in the docs
[19:46:11] <clarity> Where are the docs?
[19:46:46] *** Quits: cherrry9 (~jan@aein251.neoplus.adsl.tpnet.pl) (Ping timeout: 250 seconds)
[19:47:26] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 245 seconds)
[19:47:27] <euouae> That's alright, don't worry about it. I'll figure it out. Sorry for the secrecy :)
[19:47:31] <clarity> :<
[19:47:35] <euouae> haha
[19:47:46] <ioxzev1z> srs biznzz
[19:48:00] <euouae> hey I'm just trying to rewrite an open source thing
[19:48:30] <euouae> idk in my line of work I've had my stuff stolen so many times that I've developed a paranoia
[19:48:32] <clarity> I could guess and tell you what it's doing and have it right with a 95% likelihood but I don't wanna guess so :)
[19:48:45] <clarity> There's more than one way to "use a file"
[19:48:59] <euouae> One thing I've noticed is that there is a file that contains the process ID
[19:49:28] <clarity> I hope you know your system's commands to inspect open files, sockets, etc.
[19:49:32] <euouae> idk it's complicated. I'm still early in reading about all of the things, so I /definitely/ need to read on networking, which is my next task
[19:50:47] * kurahaupo_ encodes the IPC as morse code, then times touches of the file so that its changing mtime can be read as dots and dashes
[19:51:00] <clarity> I've done IPC with symlinks even
[19:51:11] <clarity> And mtime :)
[19:51:38] <kurahaupo_> symlink() is nicely atomic, unlike open()+write()+close()
[19:51:41] <clarity> Yep
[19:51:49] *** Quits: euouae (~euouae@user/euouae) (Quit: thanks for the help)
[19:51:50] <clarity> readlink is nice too
[19:53:04] <ZenWalker> what is the header file for FLT_EPSILON ?
[19:53:10] <ZenWalker> *which
[19:53:19] <clarity> float.h
[19:54:57] <ZenWalker> yes, thanks, so, it is the minimum positive number of float?
[19:55:20] <clarity> Nope
[19:55:32] <clarity> It's the difference between 1 and the least value greater than 1
[19:55:49] *** Joins: tradar (~tradar@user/tradar)
[19:56:09] <ZenWalker> the most nearest to zero, I think
[19:57:14] <clarity> I don't think, I copy pasted the definition from n1256.
[19:57:30] <clarity> Thinking is for people who are more intelligent than I am :(
[19:57:50] *** Joins: Akuli (~Akuli@87-94-109-79.bb.dnainternet.fi)
[19:58:14] <ZenWalker> thanks :)
[19:58:33] <Inline> 1-machine_epsilon ?
[20:00:16] <kurahaupo_> clarity: Intelligence is acquired by (practising) thinking, so that's a fairly tautological statement
[20:01:45] <goated> https://ideone.com/eCTOpn why am I getting "expected expression" error here?
[20:02:51] <kurahaupo_> goated: You can initialise an array, but you cannot assign to one
[20:02:58] *** Joins: mahmutov (~mahmutov@5.176.33.7)
[20:04:11] <goated> oh, I guess I should use memcpy then
[20:04:37] <kurahaupo_> goated: a loop assigning each element should suffice
[20:04:51] *** Joins: pulse (~pulse@user/pulse)
[20:05:46] *** Quits: cthi (~cthi@097-082-138-151.res.spectrum.com) (Quit: leaving)
[20:08:46] <goated> how should I use a loop to assign values to an array? I tried one way already but I'm guessing you mean some other way
[20:09:00] <kurahaupo_> goated: memcpy is for when you don't know the types of the objects (you're given void* pointers) or the types disagree and you Really Know Better Than The Compiler™
[20:09:20] <goated> oh wait nevermind it works
[20:09:38] <goated> oh
[20:10:08] <kurahaupo_> goated: where were you planning to memcpy from?
[20:10:16] <ski> De4n_Whit3 : did you sort out the issues you had with `merge' ?
[20:13:36] <goated> kurahaupo_ I don't know I've never used it. just saw it mentioned in an answer to a similar question
[20:13:46] *** Quits: kamarat (~kamarat@81.161.60.198) (Quit: Leaving)
[20:18:45] <De4n_Whit3> ski Yes sir. Thank you for touching base again!
[20:18:48] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:19:17] <De4n_Whit3> ski I hope to master C by the end of this year and then hopefully get a job in coding. I think I have much to learn plus some other languages on top of C.
[20:19:36] <De4n_Whit3> I am doing short courses and studying on my own. Poverty issues yo. But coding is a lot of fun.
[20:20:02] *** Joins: pucara (~i@host14.181-1-101.telecom.net.ar)
[20:20:40] <goated> okay, another question. "a[0] = 99" and "a[1] = 99" works but "a[n] = {99, 99}" gives the error. you said that arrays can be initialized but not assigned. aren't both ways assigning 2 values to the same array? why does one way work and the other doesn't?
[20:21:11] <goated> I thought both ways do exactly the same thing
[20:21:31] <Rounin> [n]... Is that a new thing_
[20:21:32] *** Joins: cfoch (~cfoch@77.61.23.95.dynamic.jazztel.es)
[20:21:47] <pragma-> goated: C has initializer-specific syntax that does not work in assignments.
[20:21:47] <goated> "int n = 10" earlier
[20:21:49] <cfoch> Hello, can I ask about compilers and linkers here?
[20:22:02] <Rounin> I would have said something like... int a[] = {99, 99} and perhaps hoped for that to work... I don't remember the exact syntax
[20:22:07] <Rounin> But not [n]
[20:22:25] <ski> De4n_Whit3 : iirc, one issue you had was also that you were wasting space (in addition to having out-of-bounds writes)
[20:22:27] <Rounin> It may also depend on the exact version... C89, 90, K&R, C++ this, that and the other
[20:23:03] <Rounin> cfoch: A council is being summoned to discuss your request to ask a question
[20:23:05] <ski> De4n_Whit3 : did you try both inclusive-inclusive bounds as well as inclusive-exclusive bounds (and then compared the results of the two) ? what was the verdict ?
[20:24:43] *** Joins: meator (~meator@user/meator)
[20:24:59] *** Quits: kurahaupo_ (~kurahaupo@pa49-197-103-160.pa.qld.optusnet.com.au) (Read error: Connection reset by peer)
[20:25:02] <cfoch> Hi. I try to compile a program with undefined symbols by using -Wl,--unresolved-symbols=ignore-all, but when I execute the program I get a segmentation fault, even when I add LD_PRELOAD. Why does it fail?
[20:25:07] <cfoch> https://paste.centos.org/view/0cbf016b
[20:25:22] *** Joins: kurahaupo_ (~kurahaupo@pa49-197-103-160.pa.qld.optusnet.com.au)
[20:25:31] <goated> Rounin: variable sized arrays need C99 to work I think. but why does this matter?
[20:26:24] *** Joins: ferdna (~ferdna@user/ferdna)
[20:26:33] <cfoch> How can I get my program running without errors without needing to dynamic/static to a library.
[20:26:40] <Rounin> goated: You suggested a[n], which involves a variable somehow
[20:26:40] <ski> goated : is that `a[n] = {99, 99}' an assignment or (part of) an initialization ?
[20:26:44] <sham1> Technically doesn't need C1999 but that's the only one where it's explicitly required
[20:26:54] <goated> Rounin: yeah but it's not causing the error tho
[20:27:10] <Rounin> goated: Perhaps not? If your array is an array of arrays, then it might be valid
[20:27:17] <Rounin> I thought you were trying to create an array of size 2
[20:27:33] <goated> ski: assignment
[20:27:40] <ski> then it doesn't work
[20:27:49] <goated> yeah I'm wondering why tho
[20:28:04] <ski> that `.. = {...}' syntax is for initialization
[20:28:11] <goated> ooh
[20:28:15] <ski> (you can't assign arrays)
[20:28:48] <ski> <kurahaupo_> goated: You can initialise an array, but you cannot assign to one
[20:28:59] *** Quits: meator (~meator@user/meator) (Client Quit)
[20:29:56] <goated> is there any reason for that or is it just like that because the people who made C wanted it that way?
[20:30:33] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[20:30:39] <ChoHag> cfoch: Why are you using LD_PRELOAD?
[20:31:00] <Rounin> Hmmm... It would require them to do more work to keep track of what size your array is... If you can change it
[20:31:10] <Rounin> Even now, arrays change into a pointer as soon as you pass them into a function
[20:31:22] <Rounin> So it might just be "Meh, we're not doing that"
[20:32:01] <goated> ah alright. thanks everyone.
[20:32:10] <Rounin> (Or do they? main() takes an array... Well, anyway, they lose their size as soon as you store their address in a pointer)
[20:32:45] *** Joins: seninha (~seninha@user/seninha)
[20:33:12] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[20:33:46] <ChoHag> If the goal is to replace a symbol I think there would need to be a symbol to replace.
[20:34:07] <ski> goated : i guess it is like it is. one reason could be that it's considered expensive to copy an array (since it could be arbitrarily large) (and therefore you can't pass it as a parameter to or as a result from function calls, either). but then, if you put an array inside a `struct' (or `union'), then you can copy that, so ..
[20:34:11] *** Joins: Hawker (~Hawker@user/hawker)
[20:34:37] <Hawker> hey I'm kinda familiar with c, but what should I use if I want to make a gui?
[20:34:46] <Hawker> What libraries do you reccomend?
[20:35:46] <NRK> ,cc printf("%zu", sizeof(argv));
[20:35:48] <candide> NRK: [warning: 'sizeof' on array function parameter 'argv' will return size of 'char **' [-Wsizeof-array-argument]  note: declared here] 8
[20:36:04] <ski> (`main' takes a pointer to pointer to `char'. and you can point to an array, and it won't "loose its size", it keeps track of it)
[20:36:18] <Rounin> NRK: Ah... So it does turn into a pointe rin a sense, even if the type is declared as an array... Hence the argc
[20:36:48] <NRK> you can use arr[] in regular function declaration as well
[20:37:02] <NRK> it's not actually taking an array
[20:37:11] <ChoHag> Only in pirate functions.
[20:37:22] <ski> yes, if you specify a parameter of array type, you do not get that, but actually a parameter of pointer type
[20:37:47] <Rounin> I always use pirate functions when I need more memory... Those Dutch and Spanish methods had better watch out
[20:37:48] <NRK> HolyC forbades that
[20:37:59] <cfoch> ChoHag: I thought that would force to load libfoo.so and so make the definition of foo available?
[20:38:01] <NRK> good decision imo, just causes confusion
[20:38:06] <ski> and, in most contexts (excepting `&' and `sizeof'), if you use an array expression, it gets converted (not to a pointer to the array but) to a pointer to the first element of the array
[20:38:43] <ChoHag> HolyC forbids piracy? In favour of crusades?
[20:39:08] <ski> (is HolyC practiced in TempleOS ?)
[20:39:26] <ChoHag> It's its Latin.
[20:39:28] <Rounin> I believe that's its primary use
[20:39:39] <ChoHag> All HolyWrit is in HolyC IIRC.
[20:40:21] <ski> (.. hm, what if you specify an array result type ?)
[20:41:37] <Hawker> Would you guys reccomend OpenGL?
[20:41:42] <Hawker> Or something else?
[20:41:58] <ChoHag> Probably not on the first day.
[20:42:00] <Rounin> Hawker: OpenGL is sort of the lowest common denominator, and will sort of work everywhere.
[20:42:35] <ChoHag> OpenGL's a bit immense if you want to throw up some widgets.
[20:42:36] <Rounin> Hawker: On the web, people will use WebGL, which is more or less OpenGL ES, which is more or less OpenGL... 4? Windows can be sort of convinced to work with OpenGL 4, barely. Linux supports it, etc.
[20:42:47] <Rounin> Hawker: Most games nowadays use Direct3D 11 and 12.
[20:42:53] <Rounin> Yeah, true that
[20:43:53] <pragma-> OpenGL is a very simple API for the most part. It's pretty much everywhere. SDL is a nice wrapper that provides more things in a mostly cross-platform library.
[20:44:37] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:1ebd:6698:6e81:143f) (Remote host closed the connection)
[20:44:46] <Hawker> Here's the thing I want to have something cross-platform that's going to be used to make a 2-D game that I want to be able to run on as much as possible, so low resource consumption is a must
[20:45:07] <Hawker> So would you suggest I used SDL?
[20:45:12] <clarity> I would
[20:45:37] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:1ebd:6698:6e81:143f)
[20:46:06] <Hawker> ok thanks.
[20:47:11] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:1ebd:6698:6e81:143f) (Remote host closed the connection)
[20:48:34] *** Quits: pulse (~pulse@user/pulse) (Quit: Look behind you, a three headed monkey!)
[20:48:50] *** Joins: pulse (~pulse@user/pulse)
[20:48:51] <Rounin> Ah yes... I don't know how great SDL is for GUIs, but for games... And not only does it support OpenGL, but audio, and I think input
[20:49:14] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:1ebd:6698:6e81:143f)
[20:49:20] <Rounin> And it supports 2D drawing without OpenGL
[20:49:46] <Hawker> Yeah it's going to be games, not GUI... my bad
[20:53:49] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:1ebd:6698:6e81:143f) (Remote host closed the connection)
[20:53:53] *** Joins: Franciman (~Franciman@mx1.fracta.dev)
[20:54:15] <Franciman> Hi, is it on topic to ask questions about openmp?
[20:54:37] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[20:54:37] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[20:54:37] *** Joins: wroathe (~wroathe@user/wroathe)
[20:54:55] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:7485:8b77:1db6:876e)
[20:55:13] <Rounin> cfoch: Ah... So about your unresolved symbol situation... I didn't look at your paste, but even though your program compiles, that probably doesn't make the library optional from the OS's standpoint
[20:55:27] <Rounin> cfoch: You'll probably have to look into methods for dynamically loading libraries at runtime
[20:57:18] <De4n_Whit3> ski I did use the inclusive exclusive bounds. I can share my code if you'd like.
[20:57:32] *** Quits: DavidMilestone (~DavidMile@182.68.131.163) (Quit: Client closed)
[20:57:42] <ski> sure
[20:58:05] <De4n_Whit3> May I DM it to you?
[20:58:23] *** Quits: tradar (~tradar@user/tradar) (Quit: tradar)
[20:58:32] *** Joins: opsecfail (~opsecfail@user/opsecfail)
[20:59:06] <twkm> yes Franciman, though there's no certainty anyone is around who knows much about it.
[20:59:33] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[21:00:06] <ski> De4n_Whit3 : well, i prefer helping in-channel, because (a) others can chime in with suggestions, opinions; and (b) others can lurk and learn
[21:01:00] <De4n_Whit3> ski I understand. I submitted it as an assignment thus I am a little hesitant to share it as that is against the course policy. I'll make an adaption of it. Give me a moment, that I can share.
[21:02:07] <cfoch> Rounin, by why isn't foo loaded or it is?
[21:03:46] <Rounin> cfoch: It seemed earlier like your linker doesn't find the library you're using, right? So either you don't have it, or it's not named exactly the right thing, or who knows
[21:04:33] <Rounin> cfoch: So if your program uses some piece of code and it doesn't have that piece of code, then it can't run
[21:04:50] *** Quits: wingsorc (~wingsorc@user/wingsorc) (Quit: Leaving)
[21:06:14] <cfoch> It does not even try to find it,, because it's not NEEDED
[21:06:16] <cfoch> [cfoch@fedora frwrd]$ objdump -p frwrd | grep NEEDED
[21:06:17] <cfoch>   NEEDED               libc.so.6
[21:07:16] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[21:07:56] <Rounin> cfoch: Perhaps your program segfaults for another reason, in that case... Or your library segfaults
[21:08:11] <Rounin> There could be a nullpointer somewhere, or some memory reference that's off by one, or who knows
[21:08:11] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Remote host closed the connection)
[21:08:23] *** Joins: mahmutov_ (~mahmutov@5.176.8.28)
[21:08:46] <twkm> ask for a corpse, then debug it.
[21:08:49] *** Quits: mahmutov (~mahmutov@5.176.33.7) (Ping timeout: 256 seconds)
[21:09:04] <ChoHag> Got a corpse?
[21:09:35] <cfoch> Rounin, are you looking at my program? The function is just "void foo () {}"
[21:09:51] <cfoch> https://paste.centos.org/view/0cbf016b
[21:10:03] *** Quits: alex11 (~alex11@user/alex11) (Read error: Connection reset by peer)
[21:10:08] <cfoch> It's a very very simple program, and it segfaults
[21:11:44] <cfoch> What's the difference between -Wl,--allow-shlib-undefined and -Wl,--unresolved-symbols=ignore-all ?
[21:11:54] *** Quits: kilolympus (~kilolympu@31.205.200.235) (Ping timeout: 256 seconds)
[21:12:34] <Franciman> thanks
[21:15:08] *** Joins: yolo (~xxiao@li1120-73.members.linode.com)
[21:15:51] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[21:15:51] *** Quits: acerbic (~acerbic@cs-xdata-50-86-54-234.cspire.com) (Read error: Connection reset by peer)
[21:18:18] <cuppajoe> I am trying to sort an array of char pointers, based on the first part of each string, which is anumber. I am trying to use qsort, with a cmpfunction that sscanf's the first number out of two strings and compares the numbers. However, the string array is not sorting.
[21:18:28] <ioxzev1z> wat
[21:18:53] <ioxzev1z> cuppajoe, gimme code link
[21:19:47] <cuppajoe> okay, hold on
[21:19:52] <Inline> heh
[21:20:00] <Inline> you forgot to link in foo.c
[21:20:22] <Inline> gcc foo.c frwrd.c -o frwrd
[21:20:31] <Inline> gcc -o libfoo.so -fPIC -shared foo.c
[21:20:46] <Inline> LD_PRELOAD=$PWD/libfoo.so ./frwrd
[21:21:10] <cuppajoe> https://bpa.st/OSGA
[21:21:12] <Rounin> No no, I think the idea here is to only link it in with LD_PRELOAD
[21:21:13] <Inline> now i don't get any segfaults
[21:21:49] <fizzie> cuppajoe: The comparison function is given pointers *to* the array elements.
[21:21:49] *** Joins: meator (~meator@user/meator)
[21:21:59] <fizzie> cuppajoe: You're just passing them to sscanf as if they were strings.
[21:22:03] <ioxzev1z> cuppajoe, don't use sizeof(char), it is always 1
[21:22:46] <cuppajoe> well, the elements are char arrays, so why wouldn't I be able to pass them to sscanf?
[21:22:53] <fizzie> You're not getting the *elements*.
[21:22:55] <Rounin> cfoch: I guess one issue is what the program does when you use that unresolved-symbols option, exactly... Can it turn them into a null pointer, try to inline them somehow, etc.
[21:22:56] <cehteh> double one_char = sizeof(char);  // in  case its slightly off
[21:22:58] <fizzie> You're getting pointers to the elements.
[21:23:05] <fizzie> You need to convert the `const void *p1` to a `char **` (it's a pointer to a pointer), and then dereference it once to get something sscanf can understand.
[21:23:22] <fizzie> Well, `char *const *` maybe, if you want it to be const-clean. But anyway.
[21:23:51] <cfoch> Rounin, but I do not want to change the code, I want to keep the code, and do some compiling/linking magic that allows me to execute this code without errors.
[21:24:09] <cuppajoe> so sscanf((char **)p1, "%d", &score1);  ?
[21:24:12] *** mahmutov_ is now known as mahmutov
[21:24:18] <fizzie> One more *.
[21:24:19] *** Quits: motherfsck (~motherfsc@user/motherfsck) (Quit: quit)
[21:24:28] <fizzie> As in, `*(char **)p1`.
[21:24:35] <Rounin> cfoch: The times I've used LD_PRELOAD, I've used them on programs that are already compiled to use shared libraries. So that might be the way to do it
[21:24:42] <cuppajoe> hmm, okay, let me try that
[21:24:48] <fizzie> Though I prefer to assign the parameters to pointers rather than casting them at point of use.
[21:25:00] <Rounin> cfoch: To compile your program normally, as you would if you were going to load the .so the normal way, but then instead do it with LD_PRELOAD
[21:25:12] <fizzie> See, if you're sorting an array of `int`s, the arguments to the comparison function will be pointers to `int`s. Likewise if you're sorting an array of `char *`s, the arguments to the comparison function will be pointers to `char *`, or in other words `char **`.
[21:25:19] <Rounin> cfoch: That way, the .so will be in the program's symbol table or whatever it is that programs have
[21:25:43] <Rounin> cfoch: If you just make the compiler ignore missing symbols, then there might not be any reference to that function there at all
[21:26:07] *** Joins: freakazoid333 (~matt@2603:9000:cf03:86c3:3494:22e3:e609:a1bf)
[21:26:33] <cuppajoe> so if the parameters are of type char **, then it should be `sscanf(*p1, "%d", &score1);` ?
[21:27:15] <fizzie> Well, okay, the parameters are `char **` values converted to `void *`, because that's the type of the comparison function.
[21:27:20] <cuppajoe> but i think qsort requires the parameters to be void *, because its giving me a warning now
[21:27:44] <cuppajoe> so should i just cast them in sscanf then?
[21:28:02] <fizzie> Yes. Or assign them to local variables with the right type. But that's a style thing.
[21:28:35] <De4n_Whit3> ski https://paste.debian.net/1230673/
[21:28:46] <cuppajoe> wow it worked! thank for the help!
[21:29:11] <fizzie> By the way, it's a little weird to read "data.txt" one for the contents, and then read the same file three times just to count the number of lines in it. The `read_user_data` function should probably just tell the rest of the program how many lines there were.
[21:29:22] *** Joins: NEYi (~NEYi@109.251.216.38)
[21:30:08] <cuppajoe> yeah, I thought of that, but read_user_data returns the user_data char *array, so how could it also return the linecount?
[21:30:46] *** Quits: ekathva (~ekathva@2001:999:50:cab1:50ea:c175:d5c5:72f3) (Ping timeout: 250 seconds)
[21:30:49] <fizzie> A typical solution would be `char **read_user_data(char *path, size_t *linecount);` and then it'd store the number of lines through that pointer.
[21:31:02] <cuppajoe> ahh, good idea.
[21:31:07] <fizzie> And at call site, `size_t linecount; char **user_data = read_user_data("data.txt", &linecount); ...`
[21:31:43] <fizzie> (The other common alternative would be to add a null pointer in the array after the first line, and have all the other functions just look for that, kind of like how strings work.)
[21:31:51] <fizzie> s/first/last/, of course.
[21:32:32] *** Joins: tiotags (~tiotags@user/tiotags)
[21:33:07] <ChoHag> fizzie: Back on the HolyC again?
[21:33:08] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[21:33:08] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[21:33:08] *** Joins: wroathe (~wroathe@user/wroathe)
[21:33:51] <cuppajoe> I'm still not fully understanding what i did with cmpscore. So qsort takes a char *array, so wouldn't it pass char *'s into cmpscore? And if p1 and p2 are already char *'s, then why do I need to cast them to char **?
[21:35:45] <clarity> Where does qsort take a char *array?
[21:35:56] <fizzie> cuppajoe: You're passing a `char **` to qsort.
[21:36:07] <fizzie> Because it's (the first element of) an array of `char *`s.
[21:36:31] <fizzie> And it will pass to the comparison function addresses of the array's element, so addresses of `char *`s, so `char **`s.
[21:36:43] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[21:36:57] <cuppajoe> oh, so dereferencing a char ** yields a char *
[21:37:09] *** Quits: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net) (Ping timeout: 256 seconds)
[21:37:31] *** Quits: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt) (Quit: leaving)
[21:38:16] <ChoHag> Yes.
[21:39:48] *** Quits: myon98 (~myon98@user/myon98) (Read error: Connection reset by peer)
[21:40:12] <meator> Hello. In what circumstances would WIFEXITED(wstatus) of wait() be false?
[21:40:26] <twkm> it didn't exit.
[21:40:40] <twkm> e.g., error or stopped.
[21:40:51] <ChoHag> exit is a wilfull act.
[21:41:08] <Rounin> That sounds like it should go on a poster somehow
[21:41:13] <Rounin> Where's the channel calligrapher
[21:41:20] *** Joins: slidercrank (~slidercra@user/slidercrank)
[21:41:52] <twkm> cuppajoe: much as dereferencing a char* yields a char.
[21:42:37] <twkm> meator: the process must have terminated normally, anything else yields false.
[21:44:01] <meator> Will it be false on abort()?
[21:44:48] <fizzie> Should be, since it's akin to receiving a signal.
[21:45:08] <ChoHag> I think it does send/receive a signal.
[21:45:26] <fizzie> (C11 7.22.4.1p2 [abort]: "An implementation-defined form of the status /unsuccessful termination/ is returned to the host environment by means of the function call `raise(SIGABRT)`.")
[21:45:41] *** Joins: rgrinberg (~textual@2806:101e:7:8d5d:1da0:53e3:2ba5:4fbf)
[21:45:44] <ChoHag> abort.c:          * if SIGABRT ignored, or caught and the handler returns, do
[21:45:44] <ChoHag>          * it again, only harder.
[21:46:31] <ChoHag> It falls back to _exit(1) if all else fails.
[21:46:44] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.4)
[21:46:58] <twkm> not a universal truth.
[21:47:15] <ChoHag> But if one implementation is allowed to call that WIFEXITED may be true.
[21:47:24] *** Quits: cfoch (~cfoch@77.61.23.95.dynamic.jazztel.es) (Quit: Client closed)
[21:47:43] <ChoHag> Or they're breaking the rules. On the other hand it tries very hard to ensure it gets the signal back.
[21:49:58] *** Quits: fe23 (~fe23@2409:8a34:46c:f80:bd54:d550:ea6a:8b98) (Quit: fe23)
[21:51:21] <ChoHag> Has the internet come up with thinking as a service yet? I am le tired.
[21:52:35] *** Joins: vikn (~vikn@83-233-104-30.cust.bredband2.com)
[21:53:13] <ChoHag> Oh btw De4n_Whit3 I'm staring at your code without really looking at it but you would be well served by putting printf at the beginning of each call with its arguments. Recursion gets weird fast.
[21:53:56] <ChoHag> Maybe dump the state of the list after each complete iteration.
[21:54:24] *** Quits: vikn (~vikn@83-233-104-30.cust.bredband2.com) (Remote host closed the connection)
[21:54:59] <ChoHag> There's not enough code for it to be anything other than a nuisance like an off-by-one somewhere.
[21:55:17] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[21:55:34] <meator> Ok, thanks!
[21:55:51] *** Joins: aradesh (~aradesh@user/aradesh)
[21:55:56] *** Joins: Syroth (~Syroth@pool-96-244-212-50.bltmmd.fios.verizon.net)
[21:56:05] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[21:57:18] <ChoHag> meator: Interesting. I'd not really thought about it and just considered abort as a harder exit but this suggests ways it could be avoided.
[21:57:33] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[21:57:53] *** Joins: oxfuxxx (~oxfuxxx@87.101.92.69)
[21:58:18] *** Joins: Myth (~pi@173.233.125.203)
[21:58:52] *** Quits: Natch (~natch@c-4db8e255.014-297-73746f25.bbcust.telenor.se) (Remote host closed the connection)
[22:00:11] <ChoHag> De4n_Whit3: https://www.youtube.com/watch?v=63NvXh11avU (turn the volume down).
[22:00:43] *** Joins: vysn (~vysn@user/vysn)
[22:00:45] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 276 seconds)
[22:01:12] *** Quits: alch (~alch@151.82.220.203) (Ping timeout: 256 seconds)
[22:02:59] *** Joins: alch (~alch@ca-18-217-13.service.infuturo.it)
[22:04:04] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[22:04:06] *** Joins: karakedi (~eAC53C340@user/karakedi)
[22:05:21] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 245 seconds)
[22:06:00] *** Joins: kilolympus (~kilolympu@31.205.200.235)
[22:06:26] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[22:08:32] *** Quits: freakazoid333 (~matt@2603:9000:cf03:86c3:3494:22e3:e609:a1bf) (Read error: Connection reset by peer)
[22:09:07] *** Joins: freakazoid333 (~matt@2603-9000-cf03-86c3-3494-22e3-e609-a1bf.inf6.spectrum.com)
[22:12:17] *** Joins: Natch (~natch@c-4db8e255.014-297-73746f25.bbcust.telenor.se)
[22:13:00] *** Joins: DavidMilestone (~DavidMile@182.68.131.163)
[22:18:25] *** Joins: MatthiasG2 (~matthias@i6DFA0382.versanet.de)
[22:20:20] *** Joins: alex11 (~alex11@user/alex11)
[22:22:22] *** Joins: kish` (~aqua@user/aqua)
[22:22:39] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[22:23:02] *** Joins: kish` (~aqua@user/aqua)
[22:24:30] *** Joins: freakazoid343 (~matt@2603:9000:cf03:86c3:3494:22e3:e609:a1bf)
[22:25:13] *** Quits: freakazoid343 (~matt@2603:9000:cf03:86c3:3494:22e3:e609:a1bf) (Read error: Connection reset by peer)
[22:25:39] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[22:25:52] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[22:25:54] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[22:26:27] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[22:27:02] *** Quits: freakazoid333 (~matt@2603-9000-cf03-86c3-3494-22e3-e609-a1bf.inf6.spectrum.com) (Ping timeout: 240 seconds)
[22:29:26] *** Joins: pulse (~pulse@user/pulse)
[22:32:49] *** Joins: z4kpi (~z4kpi@user/zacts)
[22:33:15] *** Joins: Charadon (~Charadon@155.138.164.183)
[22:33:30] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:78e9:2c9a:5431:d092) (Ping timeout: 260 seconds)
[22:33:49] *** Quits: gproto23_ (~gproto23@user/gproto23) (Ping timeout: 256 seconds)
[22:34:26] *** Quits: korg815 (~korg815@user/korg815) (Ping timeout: 260 seconds)
[22:34:50] *** Joins: paravida_ (~myChateau@23.31.187.1)
[22:35:20] *** Quits: paravida_ (~myChateau@23.31.187.1) (Client Quit)
[22:36:20] *** Quits: paravida (~myChateau@user/paravida) (Ping timeout: 256 seconds)
[22:39:33] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:78e9:2c9a:5431:d092)
[22:40:38] *** Joins: Klinda (~superleag@user/klinda)
[22:43:56] *** Joins: Betal (~Betal@user/betal)
[22:45:05] *** Joins: acerbic (~acerbic@cs-xdata-50-86-54-234.cspire.com)
[22:47:49] *** Quits: DavidMilestone (~DavidMile@182.68.131.163) (Quit: Client closed)
[22:48:49] *** Quits: acerbic (~acerbic@cs-xdata-50-86-54-234.cspire.com) (Read error: Connection reset by peer)
[22:50:02] *** Joins: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt)
[22:54:16] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 272 seconds)
[22:55:36] *** Quits: De4n_Whit3 (~De4n_Whit@165-73-119-36.ip.afrihost.capetown) (Ping timeout: 256 seconds)
[22:58:26] *** Quits: opsecfail (~opsecfail@user/opsecfail) (Ping timeout: 256 seconds)
[22:58:53] *** Joins: vikn (~vikn@83-233-104-30.cust.bredband2.com)
[22:58:56] *** Quits: vikn (~vikn@83-233-104-30.cust.bredband2.com) (Remote host closed the connection)
[23:00:03] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[23:01:23] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[23:01:44] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[23:02:52] *** Quits: z4kpi (~z4kpi@user/zacts) (Quit: Client closed)
[23:03:17] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 256 seconds)
[23:03:36] *** Joins: korg815 (~korg815@user/korg815)
[23:06:00] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[23:06:32] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[23:09:15] *** Joins: Cyp_ (~cyp@213.237.87.172)
[23:11:00] *** Joins: koolazer (~koo@user/koolazer)
[23:11:35] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e5ab:a286:27f1:6ff2)
[23:12:01] <ghenry> The configure/make in my project has suddenly died with what I think was a dnf upgrade on my desktop
[23:12:08] <ghenry> Any ideas where to start with this?
[23:12:13] *** Quits: Cyp (~cyp@213.237.87.142) (Ping timeout: 240 seconds)
[23:12:31] <ChoHag> Throw auto* away and use plain make?
[23:13:33] *** Joins: HaMsTeRs (~Thunderbi@210.3.213.4)
[23:13:57] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[23:14:30] <ghenry> They are all there in  objdump -TC /usr/lib/libcrypto.so.1.1 |grep EVP_KDF
[23:14:48] <ghenry> home/linuxbrew/.linuxbrew/bin/ld: /lib64/libssh.so.4: undefined reference to `EVP_KDF_derive@OPENSSL_1_1_1b'
[23:15:13] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[23:15:16] <ghenry> But not...
[23:15:16] <ghenry> objdump -TC /lib64/libssh.so.4 |grep EVP_KDF
[23:15:17] <ghenry> 0000000000000000      DF *UND*  0000000000000000  OPENSSL_1_1_1b EVP_KDF_ctrl
[23:15:20] <ghenry> wha
[23:15:34] <ChoHag> Throw auto* away and use plain make.
[23:17:06] <ChoHag> ghenry: Your problem is not a C problem but a (GNU's Not) Unix problem.
[23:21:37] *** Quits: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com) (Ping timeout: 240 seconds)
[23:23:25] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[23:23:41] *** Quits: malina (~malina@user/malina) (Ping timeout: 256 seconds)
[23:24:49] *** Quits: nyarmith (~nyarmith@pool-72-95-220-156.pitbpa.fios.verizon.net) (Ping timeout: 256 seconds)
[23:27:03] <ghenry> Yeah ChoHag, I think you're right.
[23:27:09] <ghenry> It's busted on my workstation
[23:27:37] <ghenry> My project build is fine - https://github.com/SentryPeer/SentryPeer/actions/runs/1820255309
[23:27:38] <candide> Title of ghenry's link: Putting an rpath in Makefile.am for now. See - https://github.com/Hom… · SentryPeer/SentryPeer@765cb2d · GitHub
[23:28:50] <ghenry> Annoying. Not sure where to start. I'd hoped someone else had project their local build set up at some point and had some advice :-)
[23:29:06] *** Quits: korg815 (~korg815@user/korg815) (Ping timeout: 272 seconds)
[23:29:07] <ghenry> "Undo what you did" is the problem. Can't recall. Will dig in. Thanks.
[23:30:19] <Inline> with foo.c why do you get a statically linked shared .so ?
[23:30:34] *** Joins: user_ (~user@62.216.61.67)
[23:32:13] *** Joins: anotheruser55 (~anotherus@62.216.61.67)
[23:33:17] *** Parts: anotheruser55 (~anotherus@62.216.61.67) ()
[23:35:01] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[23:35:05] <ghenry> Me Inline ?
[23:36:49] *** Quits: \o\ (~i.am@187.112.46.243) (Quit: a pentium 100 "running" windows 11 trying to play Last of Us II at ps4emu... that's my brain trying understand 0->R->R->R/2R->0)
[23:37:48] <ghenry> I think I've messed up my make vars.
[23:37:49] <ghenry> $(AM_V_CCLD)$(LINK) $(sentrypeer_OBJECTS) $(sentrypeer_LDADD) $(LIBS)
[23:37:52] <ghenry> make[1]: *** [Makefile:938: sentrypeer] Error 1
[23:38:18] <ghenry> That's line 938. I'll check those out as I am setting them and probably trampling them on my local build and it's all clean in my GitHub Actions.
[23:38:21] <ghenry> ttfn.
[23:41:52] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[23:48:04] *** Quits: rgrinberg (~textual@2806:101e:7:8d5d:1da0:53e3:2ba5:4fbf) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:48:47] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[23:50:14] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[23:50:15] <SamuelMarks> hi
[23:50:22] <SamuelMarks> clarity - You were saying?
[23:51:07] <SamuelMarks> With my simple socket server, why does it hang for a while before succeeding after having `read` everything? - https://gist.github.com/SamuelMarks/3f386b61be78895ab8e93ad57b41e802#file-server_attempt_5-c-L79
[23:51:09] <candide> Title of SamuelMarks's link: Experiments with simple HTTP socket server in C · GitHub
[23:51:28] * SamuelMarks could `break` rather than `bytes = 0` but that's a matter of style I guess
[23:52:08] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[23:55:08] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:55:12] <clarity> SamuelMarks: Your code segfaulted
[23:55:20] <clarity> And I couldn't get it to hang
[23:55:29] *** Quits: tiotags (~tiotags@user/tiotags) (Quit: Leaving)
[23:55:29] <clarity> (After fixing the fault)
[23:56:49] <clarity> SamuelMarks: But anyway, you need to figure out exactly what's hanging
[23:56:56] <clarity> Which line?
[23:57:05] <SamuelMarks> My debugger didn't indicate
[23:57:32] <SamuelMarks> Somewhere in the do/while loop on lines 78 to 104
[23:57:36] <clarity> Then use printf
[23:57:43] <clarity> Or step through the code
[23:57:49] <clarity> There's always a way to find out exactly what is happening
[23:57:54] <SamuelMarks> I've printed before `if (*response != NULL)` before and it still took ages to get there
[23:57:57] *** Quits: pucara (~i@host14.181-1-101.telecom.net.ar) (Quit: Lost terminal)
[23:58:27] *** Quits: user_ (~user@62.216.61.67) (Quit: Lost terminal)
[23:58:29] <SamuelMarks> The rest of the code doesn't look hangable, so what should I print before every line? - ok trying now
[23:58:48] <clarity> It doesn't matter what you print as long as it tells you where you're going
[23:59:56] <clarity> fprintf(stderr, "%d\n", __LINE__); is a good one :-)
