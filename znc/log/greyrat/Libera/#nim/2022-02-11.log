[00:13:23] *** Joins: Jjp137_ (~Jjp137@2603-8000-2a01-3406-92fb-a6ff-fee2-6861.res6.spectrum.com)
[00:13:37] *** Quits: Jjp137 (~Jjp137@2603-8000-2a01-3406-92fb-a6ff-fee2-6861.res6.spectrum.com) (Ping timeout: 240 seconds)
[00:13:52] *** Quits: Jjp137_ (~Jjp137@2603-8000-2a01-3406-92fb-a6ff-fee2-6861.res6.spectrum.com) (Client Quit)
[00:15:01] *** Joins: Jjp137 (~Jjp137@2603-8000-2a01-3406-92fb-a6ff-fee2-6861.res6.spectrum.com)
[00:22:04] <FromDiscord> <carpal> a way to `except XError as e`?
[00:22:20] <FromDiscord> <carpal> (edit) "XError" => "XError, YError"
[00:33:16] <NimEventer> New Nimble package! klymene - Create beautiful command line interfaces in Nim. Based on docopt., see https://github.com/georgelemon/clymene
[00:33:16] <NimEventer> New Nimble package! psy - A fast, multi-threading and disk space efficient package manager for PHP development and production environments, see https://github.com/psypac/psypac
[00:40:48] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[00:47:19] <FromDiscord> <Elegantbeef> Carpal you cannot you have to do exclusive trees
[00:58:13] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[01:03:16] *** Joins: Guest^^ (~Guest^^@91.189.33.88.maxnet.net.pl)
[01:05:16] *** Quits: Guest^^ (~Guest^^@91.189.33.88.maxnet.net.pl) (Client Quit)
[01:17:58] <FromDiscord> <federico3> Nim 1.6.4 is uploaded in Debian Sid \:)
[01:55:46] <FromDiscord> <Waldecir Santos> does nim have a similar kwards from python in procs ? I see varargs but that dosen't covert for key params
[01:55:50] <FromDiscord> <Waldecir Santos> (edit) "covert" => "cover"
[01:56:11] <FromDiscord> <Elegantbeef> key params?
[01:57:13] <FromDiscord> <evoalg> no substitute for kwargs↵(@Waldecir Santos)
[01:57:50] <FromDiscord> <Elegantbeef> That's not 100% true, but yea 😀
[01:58:05] <FromDiscord> <Elegantbeef> Would require macros to support
[01:58:19] <FromDiscord> <evoalg> I was quoting what Solitude said, and I believed them
[01:58:28] <FromDiscord> <Elegantbeef> Well you can do it with macros
[01:58:35] <FromDiscord> <Elegantbeef> But it's not advised
[01:58:40] <FromDiscord> <evoalg> ahh that's because macros can do anything
[01:58:55] <FromDiscord> <evoalg> can macros write macros?
[01:59:02] <FromDiscord> <Elegantbeef> Yes
[01:59:10] <FromDiscord> <evoalg> gosh
[01:59:11] <FromDiscord> <Elegantbeef> Well macros cant do anything they can simulate many things
[02:00:19] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Pg8
[02:00:32] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[02:01:09] <FromDiscord> <Elegantbeef> Or one could make a macro for it, but i'd question what you need names for given you can just you know have parameters 😛
[02:02:59] <FromDiscord> <evoalg> and can use a Table
[02:04:09] <FromDiscord> <Elegantbeef> Could also use a tuple
[02:04:12] <FromDiscord> <Elegantbeef> `(hello: "world", other: "planets", otherer: 10)`
[02:04:16] <FromDiscord> <Elegantbeef> Would be the closes i'd imagine
[02:04:37] <FromDiscord> <Elegantbeef> Allows you to have heterogeneous types with a name -\> val
[02:07:10] <FromDiscord> <Elegantbeef> So i guess @Waldecir Santos there you go 😛
[02:08:52] <FromDiscord> <Waldecir Santos> Awesome, ty !
[02:09:25] <FromDiscord> <evoalg> The tuple would need to be defined at compiled time right?
[02:09:29] <FromDiscord> <Elegantbeef> Of course
[02:09:49] <FromDiscord> <Elegantbeef> but the procedure can be `proc doThing(tup: tuple)` so then you have a generic procedure that operates on any tuple
[02:12:18] <FromDiscord> <evoalg> to see if one of the args is an int, could `typeof` be used? ... or should a `try` `except` be used?
[02:12:38] <FromDiscord> <Elegantbeef> The former
[02:12:58] <FromDiscord> <evoalg> and it should use `when` instead of `if` for `typeof` ?
[02:13:22] <FromDiscord> <Elegantbeef> Yep
[02:13:25] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Pgc
[02:13:38] <FromDiscord> <evoalg> nice, thank you!
[02:13:45] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Pgd
[02:13:47] <FromDiscord> <Elegantbeef> fieldPairs is important 😛
[02:14:16] <FromDiscord> <evoalg> ahhhh ok!
[02:14:17] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:655c:94b:918d:9e34) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:17:05] <FromDiscord> <evoalg> so why are macros discouraged for this sort of thing?
[02:17:30] <FromDiscord> <Elegantbeef> Well the simplest tool is the best tool
[02:17:57] <FromDiscord> <Elegantbeef> If you can do it with a procedure it's the best
[02:18:59] <FromDiscord> <evoalg> makes sense 🙂
[02:19:30] <FromDiscord> <evoalg> I can't just do \:) in matrix, but I have to click on the smiley icons
[02:20:00] <FromDiscord> <Elegantbeef> You can
[02:20:07] <FromDiscord> <Elegantbeef> it's a setting but you do also have to hit space after 🙂
[02:21:23] <FromDiscord> <evoalg> 🙂 works!
[02:26:14] <FromDiscord> <Elegantbeef> Yea element has some oddities
[02:26:23] <FromDiscord> <Elegantbeef> I just learned they implemented SMS-like chat
[02:31:53] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e5ab:a286:27f1:6ff2)
[02:57:45] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 250 seconds)
[03:28:12] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:42:37] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[03:43:06] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[04:05:53] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[04:20:20] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[04:25:06] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e5ab:a286:27f1:6ff2) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[04:59:21] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[05:34:22] *** Quits: krux02 (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de) (Remote host closed the connection)
[05:39:17] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[05:55:44] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[07:28:58] <FromDiscord> <creikey> how do I add a compile error for not implemented yet if a function is used
[07:29:02] <FromDiscord> <creikey> is it {.stub}
[07:30:12] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3PgX
[07:31:13] <FromDiscord> <creikey> sent a code paste, see https://play.nim-lang.org/#ix=3Ph0
[07:31:32] <FromDiscord> <Elegantbeef> Yep
[07:31:34] <FromDiscord> <creikey> it looks like it doesn't like when I specify a return type
[07:33:11] <FromDiscord> <Elegantbeef> Works fien here
[07:33:14] <FromDiscord> <Elegantbeef> fine even
[07:33:23] <FromDiscord> <creikey> yeah I had a separate error it works fine
[07:33:24] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Ph2
[07:33:33] <FromDiscord> <creikey> lol https://media.discordapp.net/attachments/371759389889003532/941544963462791188/unknown.png
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:39:45] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[09:24:47] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[09:31:44] *** Quits: Mister_Magister (~Mister_Ma@user/mister-magister/x-2636733) (Quit: bye)
[09:55:41] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[09:56:22] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[09:57:11] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[09:57:39] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[09:58:30] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Max SendQ exceeded)
[10:00:04] <NimEventer> New post on r/nim by Familiar_Ad_8919: what does -d:strip do?, see https://reddit.com/r/nim/comments/spshvg/what_does_dstrip_do/
[10:22:52] <FromDiscord> <fagci> sent a code paste, see https://play.nim-lang.org/#ix=3Phu
[10:24:20] <FromDiscord> <Rika> try finally block?
[10:25:19] <FromDiscord> <fagci> In reply to @Rika "try finally block?": But how can I get an exception here?
[10:25:29] <FromDiscord> <Rika> You don’t need to
[10:26:42] <FromDiscord> <fagci> Will `finally` block executed at return from function?
[10:26:49] <FromDiscord> <Elegantbeef> Why are you returning so much
[10:28:17] <FromDiscord> <fagci> In reply to @Elegantbeef "Why are you returning": That is the part of my initial message topic 🙂
[10:32:14] <FromDiscord> <Elegantbeef> Or does it raise an exception?
[10:32:16] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Phz
[10:33:42] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3PhA
[10:36:03] <FromDiscord> <Rika> Async doesn’t really have exceptions afaik
[10:44:52] <FromDiscord> <fagci> sent a code paste, see https://paste.rs/8cs
[10:45:22] <FromDiscord> <fagci> `asyncCheck` doesn't helps
[10:45:57] <FromDiscord> <Elegantbeef> That's an async issue i dont deal with those
[10:46:01] <FromDiscord> <Elegantbeef> Rika you're up!
[10:46:59] <FromDiscord> <fagci> https://github.com/fagci/nim-nr/blob/refactor/netrandom.nim
[10:48:04] <FromDiscord> <enthus1ast> you are supposed to await fut.withTimeout(CONN\_TIMEOUT),↵then check if the return value is true or false and act accordingly
[10:51:23] <FromDiscord> <fagci> But now we have an ladder of ifs 🙂↵Maybe not critical now...but I prefer to master that 🙂
[10:51:30] <FromDiscord> <fagci> (edit) "that 🙂" => "that."
[10:51:54] <FromDiscord> <enthus1ast> sent a code paste, see https://play.nim-lang.org/#ix=3PhD
[10:52:37] <FromDiscord> <fagci> sent a code paste, see https://play.nim-lang.org/#ix=3PhE
[10:52:51] <FromDiscord> <fagci> (edit) "https://play.nim-lang.org/#ix=3PhE" => "https://play.nim-lang.org/#ix=3PhF"
[10:53:40] <FromDiscord> <enthus1ast> sent a code paste, see https://paste.rs/YKo
[10:53:43] <FromDiscord> <enthus1ast> i know its a little bloaty
[10:54:30] <FromDiscord> <enthus1ast> and the other question is what happens with the socket
[10:54:36] <FromDiscord> <Rika> In reply to @Elegantbeef "Rika you're up!": I was walking sorry
[10:57:51] <FromDiscord> <fagci> In reply to @enthus1ast "and the other question": Yes, socket can be closed by remote when `send` or `recv`, but for now I dont get an exceptions. With `if await ...`
[10:58:20] <FromDiscord> <fagci> (edit) "exceptions. With" => "exceptions with"
[11:00:13] <FromDiscord> <enthus1ast> what do you mean? Afaik the only reliable way to detect a closed socket is by reading from it
[11:01:45] <FromDiscord> <enthus1ast> i mean, if the remote hung up
[11:05:06] <FromDiscord> <fagci> In reply to @enthus1ast "what do you mean?": Earlier, when I use an another construction, there was an exceptions, such as `Connection reset by peer`, `Connection refused` when `read`. With sync socket there is `isDisconnectionError()` or `lastError` attribute.
[11:05:37] <FromDiscord> <fagci> In reply to @enthus1ast "i mean, if the": Agree
[11:06:01] <FromDiscord> <enthus1ast> try and catch around the connect should work in this case
[11:06:56] <FromDiscord> <enthus1ast> but in the withTimeout case im not sure honestly where to put the try catch
[11:22:45] *** Joins: PMunch (~PMunch@user/pmunch)
[11:28:51] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[12:36:39] *** Quits: cyraxjoe (~joe@2806:109f:13:c804:373:4657:373c:77c9) (Quit: No Ping reply in 180 seconds.)
[12:39:24] *** Joins: cyraxjoe (~joe@2806:109f:13:c804::1ee3)
[12:51:31] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e5ab:a286:27f1:6ff2)
[13:10:06] <NimEventer> New Nimble package! uap - Nim implementation of user-agent parser, see https://gitlab.com/artemklevtsov/nim-uap/-/blob/master/README.md
[13:14:21] <arkanoid> just recompiled my project with 1.6.4: nim-1.6.4/lib/pure/asyncnet.nim(224) sendPendingSslDataIter SIGSEGV: Illegal storage access. (Attempt to read from nil?) Segmentation fault (core dumped)
[13:15:55] <arkanoid> it does not happen with 1.6.2
[13:22:47] <arkanoid> also nim ssl socket are too slow to be usage
[13:22:50] <arkanoid> *usabe
[13:22:55] <arkanoid> damn keyboard
[13:24:19] <FromDiscord> <Elegantbeef> general you are using a release build
[13:32:47] <arkanoid> yes I do
[13:33:25] <FromDiscord> <Rika> Async stack traces aren’t super helpful though, usually
[13:57:18] <PMunch> Haha! I managed to crack the code for getting the hash of a module without importing it :)
[13:57:45] <FromDiscord> <Elegantbeef> How?
[13:59:31] <PMunch> This should give superlog the ability to store the hash of the sending module in a static generic field, so that way you could have a `LogMessage[module: static[ModuleSig](msg: string)` and then simply call `log Debug, "My message"` which would convert it into that, and then attach a logger to the generic version with a certain module
[13:59:34] <FromDiscord> <Rika> Get the file contents and hash that :OmegaLUL:
[13:59:36] <FromDiscord> <Rika> I’m joking
[13:59:38] <PMunch> Haha
[14:00:02] <FromDiscord> <Rika> What did you do
[14:00:02] <PMunch> No I basically added some small pieces to a test compiler to see what it actually hashes for a module
[14:00:32] <PMunch> So if you do `import some/folder/structure/mymodule` it hashes `mymodule.unknown.mymodule.unknown.`
[14:00:34] <FromDiscord> <Rika> Better compiler API when
[14:00:44] <FromDiscord> <Rika> Inb4 pinged about skull
[14:01:11] <PMunch> If you do `import somemodule as mymodule` that hashes as the same thing
[14:02:16] <PMunch> So I figured if I simply include an empty nim file in my project `nop.nim` then I can do `import nop as <whatever identifier the user passed>` and signatureHash that symbol I will get the same hash as a module of the same name would give me
[14:02:35] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e5ab:a286:27f1:6ff2) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[14:03:53] <FromDiscord> <Rika> What that sounds cursed
[14:05:48] <PMunch> I mean it sounds a bit broken
[14:06:37] <PMunch> If module A imports module C, and module B imports module D as C then A will report module Cs hash as the same as B will report module Ds hash
[14:06:43] *** Joins: Vladar (~Vladar@46.162.2.53)
[14:07:03] <PMunch> I don't think you're really supposed to hash module nodes :P
[14:08:35] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[14:28:37] *** Joins: krux02 (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de)
[14:29:39] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e5ab:a286:27f1:6ff2)
[14:35:25] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[14:53:57] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[15:02:04] <FromDiscord> <Goel> `include` 🧠
[15:02:20] *** Joins: rockcavera (~rc@192.12.112.240)
[15:02:20] *** Quits: rockcavera (~rc@192.12.112.240) (Changing host)
[15:02:20] *** Joins: rockcavera (~rc@user/rockcavera)
[15:05:14] <Amun-Ra> do I recall correctly you can't test import in try/except block in Nim?
[15:05:41] <PMunch> What do you mean?
[15:06:15] <Amun-Ra> equivalent of python's try: import module except ImportError: pass
[15:06:26] <PMunch> You could do `when compiles(import mymodule): import mymodule` I guess
[15:06:45] <Amun-Ra> ah, I keep forgetting 'compiles' is a thing
[15:06:53] <PMunch> That would catch if there is anything in the file that doesn't compile though :P
[15:06:58] <PMunch> Not just that if the file exists
[15:07:21] <Amun-Ra> I'm fine with that
[15:08:02] <Amun-Ra> https://play.nim-lang.org/#ix=3Pii
[15:09:04] <PMunch> What are you trying to do though?
[15:09:51] <Amun-Ra> I just wanted to have an alternative way of checking if my module compiles on given platform instead of using when
[15:10:09] <Amun-Ra> I was just curious if it works
[15:11:11] <Amun-Ra> I'm fine with when+elif
[15:12:12] <Amun-Ra> compiles works with expressions, you can't test imports with it
[15:15:05] <PMunch> Hmm, you're right
[15:25:52] <PMunch> Hmm, what is an nnkConv?
[15:27:09] <FromDiscord> <Rika> Converter? I don’t know
[15:27:29] <PMunch> Nah that seems to be an nnkConverterDef
[15:27:50] <PMunch> Oh wait
[15:27:53] <PMunch> Conversion maybe?
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:55] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:45:46] <arkanoid> I'm getting kind of tired of weird nim behaviours. I'm not having failing AsyncHttpClient.requests in docker contaienr, but `curl` works on identical url on same docker container, but nim return status is 200 OK. What kind of headers is it putting by default?!
[15:46:04] <arkanoid> s/not having/now having/
[15:50:36] <FromDiscord> <Rika> nim headers do not preserve case sensitivity. some servers do not follow http spec and use "canonical" header capitalisation
[15:50:38] <FromDiscord> <Rika> might be related
[15:51:45] <supakeen> there's plenty in (async)httpclient sadly, i suggest taking a look with either httpmitm, ngrep, or tcpdump what it's actually sending
[15:52:28] <supakeen> cookie headers are especially worrisome
[15:53:51] <supakeen> this sadly went stale: https://github.com/nim-lang/Nim/pull/15478
[15:54:08] <supakeen> https://github.com/nim-lang/Nim/pull/15484 so did that
[15:54:11] <supakeen> because i got busy :(
[15:58:16] <NimEventer> New Nimble package! watchout - ⚡️ Just... yellin' for changes! File System Monitor for devs, see https://github.com/openpeep/watchout
[15:58:17] <NimEventer> New Nimble package! madam - Local webserver for Design Prototyping and Front-end Development, see https://github.com/openpeep/madam
[15:59:05] <FromDiscord> <Rika> damn a fuckin custom embed
[16:00:32] <FromDiscord> <ajusa> Wow these guys have a lot of stuff
[16:01:02] <FromDiscord> <ajusa> Template engine, web server, JSON validation
[16:01:06] <FromDiscord> <Rika> apparently its a single dude too
[16:03:13] <PMunch> I think they're a company
[16:03:18] <PMunch> Their bio is: A talent-driven, creative agency, focused on developing Open Source, SaaS products, and other cool things. Based in South Eastern Europe — Bucharest, RO
[16:06:20] <supakeen> awesome
[16:08:09] <PMunch> Hmm, comparing types is a pain
[16:09:38] <PMunch> Maybe I should abandon keeping a table of type -> callback and simply just store the type nodes and then generate log templates for each type when you import superlog
[16:11:20] <PMunch> And just let Nim type evaluation handle the dirty work of resolving aliases and generic types
[16:56:14] *** Joins: arkurious (~arkurious@user/arkurious)
[17:14:52] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e5ab:a286:27f1:6ff2) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:25:12] <PMunch> Why is instantiationInfo so damn fickle..
[17:28:25] <FromDiscord> <enthus1ast> what is the prefered way to check if a string (a password) contains at least one of a set of chars (some special chars?)
[17:28:48] <PMunch> allIt from strutils?
[17:29:00] <PMunch> Oh wait, at least one of
[17:29:08] <FromDiscord> <Rika> anyIt
[17:29:09] <FromDiscord> <Rika> lol
[17:29:33] <PMunch> Problem with that is that you have to loop through it once per rule
[17:30:03] <FromDiscord> <Rika> collect
[17:30:13] <FromDiscord> <Rika> well collect doesnt really work that way ig
[17:30:42] <FromDiscord> <enthus1ast> yes anyIt
[17:30:42] <FromDiscord> <Rika> collect + any(@[bool]) loooool naive solution moment
[17:31:02] <FromDiscord> <enthus1ast> thank you both (its from sequtils btw)
[17:32:54] <PMunch> I think I'd convert it to a set[char] and then check that the character you require are a subset of that set
[17:34:14] <FromDiscord> <Rika> didnt he say it was a set of chars already
[17:34:33] <FromDiscord> <enthus1ast> jeah technically no \:)
[17:35:12] <PMunch> Hmm is there really no easy way to convert a string to a set[char]?
[17:35:41] <PMunch> I mean you can create a HashSet easily, but that's a bit heavy for this simple task..
[17:37:25] <FromDiscord> <enthus1ast> have done it differntly now
[17:37:26] <FromDiscord> <enthus1ast> the nice thing about this is, i compile it to js and c backend, so i check in the browser and in the backen with the same code \:)
[17:37:26] <FromDiscord> <enthus1ast> i'm always happy when i can do stuff like this
[17:37:30] <FromDiscord> <enthus1ast> sent a code paste, see https://play.nim-lang.org/#ix=3Pj7
[17:38:02] <FromDiscord> <frankzig> is there a package in nim to facilitate writing read-eval loops?
[17:38:12] <FromDiscord> <Rika> not that i know of, no
[17:47:49] *** Quits: dtomato (~dtomato@82-64-189-70.subs.proxad.net) (Ping timeout: 240 seconds)
[17:48:57] <FromDiscord> <enthus1ast> what does this mean?↵(@frankzig)
[17:49:29] <FromDiscord> <enthus1ast> or, what is your issue?
[17:53:02] <FromDiscord> <frankzig> I'm in the process of writing a tool for my research group
[17:53:19] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[17:53:35] <FromDiscord> <frankzig> this tool will take in commands and settings as text and execute/print-out-results
[17:54:06] <FromDiscord> <frankzig> at the moment I'm manually writing a while loop with conditions to run each function etc etc.
[17:54:44] <FromDiscord> <frankzig> Since for CLI tools there is the awesome CLIGEN which does miracles, i.e. it takes a function as input and it turns the function into a fully functional cli interface
[17:55:00] <FromDiscord> <frankzig> I was wondering if there is somthing like that for read-eval loops
[17:55:08] *** Joins: dtomato (~dtomato@82-64-189-70.subs.proxad.net)
[17:55:10] <FromDiscord> <haxscramper> what kind of dispatching you are looking for in the loop?
[17:55:55] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3Pjg
[17:56:05] <FromDiscord> <frankzig> that's exactly what i'm doing
[17:56:09] <FromDiscord> <haxscramper> https://nim-lang.github.io/fusion/src/fusion/matching.html
[17:56:39] <FromDiscord> <frankzig> a okay this sounds useful
[17:57:02] <FromDiscord> <haxscramper> or you can `case` on enum value, pattern matching is overkill most of the time
[17:57:46] <FromDiscord> <haxscramper> and I hate this `case` overload bs, so if you are looking for a tool that other people use your best bet would probably be to unparse input commands into variant object
[17:57:52] <FromDiscord> <haxscramper> other people can read
[17:58:21] <FromDiscord> <frankzig> sent a code paste, see https://play.nim-lang.org/#ix=3Pjh
[17:58:24] <FromDiscord> <frankzig> very primitive looking
[17:58:50] <FromDiscord> <enthus1ast> You can also use scanstr for this
[17:58:59] <FromDiscord> <enthus1ast> Pardon strscan
[17:59:38] <FromDiscord> <enthus1ast> https://nim-lang.org/docs/strscans.html
[18:02:06] <FromDiscord> <haxscramper> In reply to @frankzig "atm this is what": you are expecting to have a complicated CLI setup with lots of commands, or this is all?
[18:02:51] <FromDiscord> <haxscramper> if that's all there is to it, just leave it as it is, maybe you can get a little better with strscans, but I"m not sure
[18:04:13] <FromDiscord> <haxscramper> https://github.com/haxscramper/hmisc/blob/50d39c2d62fadbfcc89621ed6208263cf876fe31/src/hmisc/algo/tscanf.nim https://github.com/haxscramper/hmisc/blob/50d39c2d62fadbfcc89621ed6208263cf876fe31/tests/tScanf.nim I have old unused wrapper for scanf that injects types
[18:04:17] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[18:04:38] <FromDiscord> <haxscramper> so you can do `if cmd.tscanf("pop $i")` and it will inject integer on match
[18:04:54] <FromDiscord> <enthus1ast> there also is\: https://github.com/jangko/nim-noise↵but have not used it in years
[18:05:55] <FromDiscord> <haxscramper> In reply to @haxscramper "https://github.com/haxscramper/hmisc/blob/50d39c2d6": @frankzig if you want you can just copy the implementation to your code as is without importing my whole library
[18:07:16] <FromDiscord> <enthus1ast> @haxscramper\: btw the documentation for hnimast is down
[18:10:34] <FromDiscord> <haxscramper> Nim doc shat itself again
[18:11:10] <FromDiscord> <haxscramper> And I'm too tired of debugging this foe the nth time, so it is going to stay this way
[18:11:30] <FromDiscord> <haxscramper> Hcparse can't generate documentation for itself as well
[18:11:33] <FromDiscord> <haxscramper> And hnimast too
[18:12:52] <FromDiscord> <haxscramper> And I figured out a much better API for the AST superstructures and all that kind of thing, so I will deprecate this library at some point
[18:14:24] <FromDiscord> <haxscramper> Actually I think I never managed to make it work correctly
[18:14:34] <FromDiscord> <enthus1ast> i must admit every time i look into this lib, i'm a little overwhelmed
[18:14:47] <FromDiscord> <haxscramper> For example links on the readme were added only because index.html was 404 all the time
[18:15:01] <FromDiscord> <enthus1ast> so I've never used it
[18:15:04] <FromDiscord> <haxscramper> Because it is a garbage pile
[18:15:39] <FromDiscord> <haxscramper> The API is wrong and it sits on top of the legacy hacks, that in turn sit on top of the barely documented compiler API
[18:16:04] <FromDiscord> <enthus1ast> yes i understand
[18:16:56] <FromDiscord> <haxscramper> https://github.com/haxscramper/nimskull/blob/docgen3/compiler/tools/docgen_unparser.nim this is a lot more compact solution
[18:22:36] <FromDiscord> <Hel> Hello, i was just wondering which Nim version is more stable 1.2.16 or 1.6.4
[18:23:06] <FromDiscord> <Hel> i'm asking cause when compiling a project with 1.2.16 and arc on i got a compilation error in nim's C files
[18:23:14] <FromDiscord> <Hel> after updating to 1.6.4 arc worked fine
[18:24:26] <FromDiscord> <konsumlamm> stabe in the sense that it has less bugs? then always the latest version (currently 1.6.4)
[18:24:32] <FromDiscord> <konsumlamm> (edit) "stabe" => "stable"
[18:25:44] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e5ab:a286:27f1:6ff2)
[18:26:19] <FromDiscord> <fwsgonzo> Hey guys. As usual, I have a strange question: How can I force a crash in Nim?
[18:26:30] <FromDiscord> <fwsgonzo> (edit) "Hey guys. As usual, I have a strange question: How can I force a crash in Nim? ... " 03added "That is, what's the simplest way"
[18:26:33] <FromDiscord> <konsumlamm> what kind of crash?
[18:26:38] <FromDiscord> <Hel> In reply to @konsumlamm "stable in the sense": yeah stable as in less bugs
[18:26:53] <FromDiscord> <konsumlamm> you mean like a segmentation fault? or just exit with some exit code? or throw an exception?
[18:27:06] <FromDiscord> <fwsgonzo> anything that causes a signal handler to be called, I guess, like a CPU exception
[18:27:21] <FromDiscord> <fwsgonzo> i just want to test the Nim backtrace functionality works
[18:27:25] <FromDiscord> <Hel> oh i just segfaulted with orc
[18:27:28] <FromDiscord> <fwsgonzo> (edit) "i just want to test the Nim backtrace functionality works ... " 03added "in a RISC-V program"
[18:27:30] <FromDiscord> <Hel> when using 1.2.16
[18:27:35] <FromDiscord> <Hel> arc just crashes at compile time tho
[18:27:45] <FromDiscord> <konsumlamm> In reply to @Hel "yeah stable as in": `devel` is arguably even more stable in that sense, but it also has a higher risk of having regressions (things that worked previously don't work anymore)
[18:28:14] <FromDiscord> <Hel> yeah but then why did 1.2 branch receive support for so long
[18:28:26] <FromDiscord> <xflywind> 1.6.x has better ARC/ORC support. They are many fixes which are not backported to 1.2.x
[18:29:11] <FromDiscord> <enthus1ast> sent a code paste, see https://play.nim-lang.org/#ix=3Pjo
[18:29:30] <FromDiscord> <xflywind> In reply to @Hel "yeah but then why": Both of 1.6.x and 1.2.x have long term support.
[18:29:52] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e5ab:a286:27f1:6ff2) (Client Quit)
[18:30:24] <FromDiscord> <Hel> ok then thanks for clarifying
[18:31:00] <FromDiscord> <Hel> i just thought 1.2 would be more stable cause no features would be added and it'd receive bugfixes only
[18:33:15] <FromDiscord> <konsumlamm> some features/changes also make the language more stable
[18:34:00] <FromDiscord> <fwsgonzo> sent a code paste, see https://play.nim-lang.org/#ix=3PjB
[18:34:08] <FromDiscord> <Hel> In reply to @konsumlamm "some features/changes also make": true
[18:37:20] <FromDiscord> <sOkam!> How can I approach binding a whole C game-engine with futhark recursively?↵The example in their readme only mentions bindings for header files that can be listed, but the project is massive
[18:38:11] <PMunch> Not entirely sure what you mean?
[18:38:26] <PMunch> Do you simply not want to type out all the names of the imports?
[18:38:58] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[18:41:15] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Read error: Connection reset by peer)
[18:41:36] <FromDiscord> <sOkam!> In reply to @PMunch "Do you simply not": There are hundreds of files. Thought that futhark might be able to handle everything inside a folder (aka the whole engine, with recursive resolution)
[18:42:03] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[18:44:23] <PMunch> Yes, that is a planned feature
[18:44:32] <PMunch> Just haven't gotten around to implementing that yet
[18:45:26] <FromDiscord> <sOkam!> In reply to @PMunch "Just haven't gotten around": I see, makes sense↵Any recommendation of what to do in the meantime?
[18:45:52] <PMunch> `find . -name "*.h"` and paste that into a futhark block?
[18:46:07] <PMunch> That's the best you can do at the moment unfortunately
[18:46:18] <PMunch> Of course you might not actually need to load every single file
[18:46:34] <FromDiscord> <sOkam!> does futhark handle non `.h` files?↵its old code, and the whole header thing is missing for a lot of it
[18:46:51] <PMunch> What do you mean non .h files?
[18:47:03] <FromDiscord> <sOkam!> In reply to @PMunch "What do you mean": `.c` mainly
[18:47:15] <PMunch> It handles anything that can go in an `#import "something.h"` block
[18:48:13] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[18:48:23] <PMunch> Typically you import some kind of header file in your C project, try feeding that import to Futhark. If you're getting errors about a missing type, grep for it in the library and add the header file it shows up in as well
[18:48:34] <PMunch> I've gotta run
[18:48:34] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: Leaving)
[18:54:26] <nrds> <06Prestige99> Is there an os independent way to send system level notifications? Like notify-send on Linux, it would be different on mac/bsd/windows
[19:04:30] <madprops> afaik there's not
[19:04:44] <madprops> email maybe
[19:06:22] <FromDiscord> <sOkam!> im not the op, but os check and creating alternative commands for each option sounds a lot cleaner than email 🤔
[19:08:11] <madprops> yeah that sounds easier
[19:08:17] <madprops> and sane
[19:08:38] <madprops> just checked and i do have notify-send installed
[19:10:01] <FromDiscord> <sOkam!> there might be a library that already does that (even if for a different language). could be a matter of binding that to nim 🤷‍♂️
[19:25:25] <FromDiscord> <DevNugget> just out of curiosity, does Nim have dead code elimination?
[19:28:46] <FromDiscord> <pmunch> Yup
[19:44:12] <FromDiscord> <sOkam!> I'm actually going to go with -not- binding the engine. Didn't know this was a thing 🤔 ↵https://gist.github.com/KyrillosWalid/a923c9f980591b8c184368591cd9a9e8
[20:12:13] <FromDiscord> <Ayy Lmao> sent a code paste, see https://play.nim-lang.org/#ix=3PjW
[20:12:41] <FromDiscord> <Ayy Lmao> I need to pass a callback that is essentially varargs but it depends on some string passed into the function
[20:52:41] <FromDiscord> <Bloss> could a "top level only" label be added to the github? sometimes issues only happen in top level code but work fine when put inside a proc and I don't notice that sometimes
[20:54:28] <FromDiscord> <demotomohiro> Why does that happen?
[20:55:16] <FromDiscord> <Bloss> destructors get generated differently at top level vs in proc code I think is one case
[21:05:25] <FromDiscord> <demotomohiro> Maybe destructors for variables at top level are called after all procedure calls cause the problem?
[21:12:13] <FromDiscord> <eyecon> In reply to @nrds "<Prestige> Is there an": Your best bet is AFAIK https://github.com/caronc/apprise
[21:13:34] <nrds> <06Prestige99> Thanks, I'll check it out
[21:42:41] *** Joins: Mister_Magister (~Mister_Ma@user/mister-magister/x-2636733)
[22:20:35] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e5ab:a286:27f1:6ff2)
[22:26:28] <FromDiscord> <eyecon> sent a code paste, see https://play.nim-lang.org/#ix=3Pkl
[22:27:45] <FromDiscord> <eyecon> sent a code paste, see https://play.nim-lang.org/#ix=3Pkm
[22:29:14] <FromDiscord> <eyecon> With `include honeycomb, sugar, strutils` etc. obviously
[22:29:23] <FromDiscord> <eyecon> (edit) "`include" => "`import"
[22:29:52] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[22:31:09] *** Joins: vicfred (~vicfred@user/vicfred)
[22:36:47] <FromDiscord> <treeform> In reply to @Elegantbeef "<@180601887916163073>\: cause `timezone` ": @Phil You can also do a similar hook with jsony.
[22:37:41] <FromDiscord> <Phil> In reply to @treeform "<@!180601887916163073> You can also": My friend, that was almost 6 weeks ago, that was even before I made my accidental issue on your jsony project 😄
[22:37:53] <FromDiscord> <KatrinaKitten> In reply to @eyecon "<@!204718116020682753> this was what": Ahhhhh, I see. Yeah, I can add that. Throw up an issue or a PR and I'll get to it when I can 🙂
[22:37:54] <FromDiscord> <treeform> also if you use my timezone/calendar stuff it does not have that problem: https://github.com/treeform/chrono and are easy to serialize with nearly any method.
[22:38:09] <FromDiscord> <treeform> In reply to @Isofruit "My friend, that was": Sorry I just search for terms I like.
[22:38:38] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e5ab:a286:27f1:6ff2) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:38:48] <FromDiscord> <Phil> No worries, just know that I actually do use the given hooks to parse datetimes in the default format Django uses
[22:44:35] <FromDiscord> <eyecon> In reply to @KatrinaKitten "Ahhhhh, I see. Yeah,": Sure!
[23:34:28] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[23:47:03] *** Quits: Mister_Magister (~Mister_Ma@user/mister-magister/x-2636733) (Ping timeout: 250 seconds)
[23:48:58] *** Parts: fvs (freevryhei@2600:3c00::f03c:92ff:fe55:ff21) (WeeChat 3.4)
