[00:00:12] *** Joins: gast0n (~g4570n@user/gast0n)
[00:01:19] *** Quits: hudo (~hudo@62.68.19.39) (Client Quit)
[00:01:32] *** Joins: hudo (~hudo@62.68.19.39)
[00:03:52] *** Quits: Masklin_Gurder (~joel@213-67-8-136-no206.tbcn.telia.com) (Quit: Konversation terminated!)
[00:04:35] *** Quits: hudo (~hudo@62.68.19.39) (Client Quit)
[00:04:46] *** Quits: nrr__ (sid20938@lymington.irccloud.com) (Ping timeout: 256 seconds)
[00:04:50] *** Joins: hudo (~hudo@62.68.19.39)
[00:06:11] *** Joins: nrr__ (sid20938@lymington.irccloud.com)
[00:06:18] *** Quits: zkrd (~xdg@2a02:587:de00:6d00:9148:819a:adbc:88bb) (Ping timeout: 265 seconds)
[00:09:24] *** Quits: alex11 (~alex11@user/alex11) (Quit: Leaving)
[00:23:59] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[00:25:46] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[00:31:20] *** Quits: hudo (~hudo@62.68.19.39) (Quit: Leaving)
[00:33:57] *** Joins: hudo (~hudo@62.68.19.39)
[00:37:38] *** Quits: kiwiroy (sid374179@lymington.irccloud.com) (Ping timeout: 256 seconds)
[00:40:28] *** Quits: martinus__ (~martin@53.31.201.77.rev.sfr.net) (Ping timeout: 256 seconds)
[00:40:50] *** Joins: kiwiroy (sid374179@lymington.irccloud.com)
[00:45:45] <hudo> what is a convenient way to install modules from cpan on a debian distribution, as root or as a "normal user", then I think there is created a local ~username/.cpan
[00:46:13] <lopid> perlbot: cpanm
[00:46:14] <perlbot> lopid: https://perldoc.perl.org/-m
[00:46:22] <mst> wtf
[00:46:25] <lopid> wat
[00:46:43] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[00:47:25] <lopid> hudo, https://metacpan.org/pod/App::cpanminus
[00:47:26] <Paperbot> Link title(s): [ App::cpanminus - get, unpack, build and install modules from CPAN - metacpan.org ]
[00:49:24] <mst> hudo: cpanm + local::lib will get you a ~/perl5 directory with your modules in it, which is nice for keeping it separate from apt installed stuff
[00:50:26] <hudo> mst, so you recommend to install the modules as "normal user"
[00:50:56] *** Quits: ztx (~ztx@user/ztx) (Ping timeout: 245 seconds)
[00:51:00] *** Quits: arcanez (~arcanez@warpedreality.org) (Remote host closed the connection)
[00:51:12] <mst> hudo: in general, I prefer to have a distinction between 'what the debian packagers are providing to support other debian packages I'm going to install' and 'what I want for my own stuff'
[00:51:13] <lopid> your distro might already provide the modules as a package
[00:51:37] *** Joins: arcanez (~arcanez@warpedreality.org)
[00:51:41] <mst> hudo: note that I actually know a bunch of the people -doing- perl packaging for debian, this is not a criticism of them at all
[00:51:56] <mst> hudo: it's 'wanting to not tread on the toes of their work when my code needs a different version of something' ;)
[00:52:48] <hudo> mst, thanks for your advice ;)
[00:53:58] <mst> hudo: like, debian stable wants -known- versions of modules so perl tools they package can run against those
[00:54:08] <mst> hudo: -I- want the latest version because I want any new features
[00:54:26] <mst> hudo: I find being able to have both without them interfering with each other to make my world a better place :D
[00:54:34] *** Quits: troydm (~troydm@host-176-37-124-197.b025.la.net.ua) (Quit: What is Hope? That all of your wishes and all of your dreams come true? To turn back time because things were not supposed to happen like that (C) Rau Le Creuset)
[00:54:39] *** Joins: rgrinberg (~textual@201.192.183.100)
[00:55:42] *** Quits: arcanez (~arcanez@warpedreality.org) (Remote host closed the connection)
[00:55:55] *** Joins: arcanez (~arcanez@warpedreality.org)
[00:55:56] *** Quits: arcanez (~arcanez@warpedreality.org) (Remote host closed the connection)
[00:56:10] *** Joins: arcanez (~arcanez@warpedreality.org)
[00:58:14] *** Joins: troydm (~troydm@host-176-37-124-197.b025.la.net.ua)
[01:00:47] *** Quits: drocsid (~drocsid@207.32.171.116) (Quit: Client closed)
[01:01:15] <ology> Think https://github.com/ology/WebService-YTSearch is worthy of CPAN? It's not sophistcated on purpose.
[01:01:16] <Paperbot> Link title(s): [ GitHub - ology/WebService-YTSearch: Search YouTube ]
[01:01:19] *** Quits: gizmomathboy (~gizmomath@206.127.53.107) (Quit: Leaving)
[01:03:09] *** Joins: ProperNoun (~sanko@2600:1700:eb30:a2c0::45)
[01:03:13] <mst> ology: needs more 'letting mojo handle the params'
[01:04:04] *** Joins: ztx (~ztx@user/ztx)
[01:04:14] <mst> ology: https://metacpan.org/pod/Mojo::URL#path
[01:04:14] <Paperbot> Link title(s): [ Mojo::URL - Uniform Resource Locator - metacpan.org ]
[01:04:21] <mst> ology: https://metacpan.org/pod/Mojo::URL#query
[01:04:22] <Paperbot> Link title(s): [ Mojo::URL - Uniform Resource Locator - metacpan.org ]
[01:04:26] <mst> ology: but the module itself, sure
[01:05:09] <tejr> Would anyone care to recommend a module that might translate a string like "4d3w1m2s" to a number of seconds?  I'd like to add a convenience/clarity feature to a script that specifies a threshold of seconds
[01:05:48] <ology> mst: Thank you. I will use more mojo!
[01:08:20] <Grinnz> hudo: and if for your personal use, even better is to install a perl with perlbrew or plenv or perl-build separate from teh system one in your homedir, so you can install whatever you want to it without sudo or local::lib, upgrade to the newest perl whenever you want, and the system doesn't have to care
[01:08:23] <mst> ology: however while damn simple in general, it still seems less hassle than typing that code myself, so sure, cpan worthy
[01:09:37] <Grinnz> tejr: https://metacpan.org/pod/Time::Duration::Parse
[01:09:38] <Paperbot> Link title(s): [ Time::Duration::Parse - Parse string that represents time duration - metacpan.org ]
[01:09:54] <tejr> Grinnz: Thank you, let's have a look
[01:10:19] <Grinnz> tejr: just keep in mind it will use the usual approximations because days and minutes aren't all the same number of seconds
[01:10:51] <Grinnz> (always the trouble with human-readable durations)
[01:10:59] <genio> Am I a weirdo? I'm not a fan of POD mixed into the Perl -I like the POD at the bottom. I mean, I don't mind having JSDoc style stuff being above my functions in JS. Yet, for some reason I don't like it in Perl
[01:11:34] * genio carries on with his weirdo ways
[01:11:36] <Grinnz> i never cared for it, and after seeing mojo ignore it i ignored it as well
[01:11:48] <Grinnz> it = interspersed pod
[01:11:51] <tejr> Grinnz: That's fine, it doesn't need to be strict
[01:12:14] <Grinnz> tejr: likely not an issue until you get to months or years
[01:13:10] <tejr> Yep
[01:13:22] <tejr> Yes, this does what I need; appreciated
[01:18:04] *** Joins: Penguin666x (~Penguin66@217.138.205.135)
[01:21:11] *** Quits: Penguin666 (~Penguin66@217.138.205.135) (Ping timeout: 250 seconds)
[01:21:30] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[01:22:13] * GumbyPAN CPAN Upload: WebService-YTSearch-0.0100 by GENE https://metacpan.org/release/GENE/WebService-YTSearch-0.0100
[01:22:57] *** Quits: rgrinberg (~textual@201.192.183.100) (Read error: Connection reset by peer)
[01:23:43] *** Joins: rgrinberg (~textual@201.192.183.100)
[01:27:14] * GumbyPAN CPAN Upload: Crypt-Format-0.11_01 by FELIPE https://metacpan.org/release/FELIPE/Crypt-Format-0.11_01
[01:28:57] *** Quits: Su-Shee (~Susanne@p4ff49c08.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[01:30:15] *** Joins: Su-Shee (~Susanne@p4ff49133.dip0.t-ipconnect.de)
[01:34:18] *** Quits: miojo (~fu@187.32.234.131) (Ping timeout: 256 seconds)
[01:34:39] *** Quits: rgrinberg (~textual@201.192.183.100) (Read error: Connection reset by peer)
[01:34:45] *** Quits: proller (~p@2a02:6b8:b081:9::1:20) (Ping timeout: 265 seconds)
[01:35:36] *** Joins: rgrinberg (~textual@201.192.183.100)
[01:35:49] *** Parts: smgt (~smgt@user/temjin) ()
[01:40:34] *** Joins: whynot (~whynot@37.73.72.220)
[01:42:16] * GumbyPAN CPAN Upload: WebService-YTSearch-0.0101 by GENE https://metacpan.org/release/GENE/WebService-YTSearch-0.0101
[01:48:28] *** Quits: koo5_ (~quassel@51.140.155.227) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[01:49:27] *** Joins: koo5_ (~quassel@51.140.155.227)
[01:51:19] <ology> whoops. forgot to dzil clean before uploading 0.0101
[01:53:04] *** Quits: rgrinberg (~textual@201.192.183.100) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:56:17] * GumbyPAN CPAN Upload: WebService-YTSearch-0.0102 by GENE https://metacpan.org/release/GENE/WebService-YTSearch-0.0102
[01:57:58] <xenu> if you need to dzil clean it means you're doing something wrong, dzil should be handling everything automatically, including cpan upload
[01:58:07] <xenu> or at very least tarball generation
[01:58:15] <ology> guess I'm doing something wrong.
[02:03:39] <simcop2387> i do dzil clean when it takes up too much space
[02:15:17] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[02:15:46] <ology> I need to add an exclude of WebService-YTSearch things to my dist.ini I guess.
[02:16:10] <xenu> i believe it's PruneCruft's job to exclude that stuff automatically
[02:16:19] * GumbyPAN CPAN Upload: WebService-YTSearch-0.0200 by GENE https://metacpan.org/release/GENE/WebService-YTSearch-0.0200
[02:16:26] <xenu> and it seems you already have it in your dzil.ini
[02:16:31] <xenu> er
[02:16:32] <xenu> dist.ini
[02:16:40] <Grinnz> ology: use Git::GatherDir and add /WebService-YTSearch-* to .gitignore
[02:16:46] <Grinnz> (instead of GatherDir)
[02:17:00] <xenu> Grinnz: but shouldn't PruneCruft prune it anyway?
[02:17:00] <ology> aha
[02:17:04] <Grinnz> nope
[02:17:40] <xenu> https://metacpan.org/dist/Dist-Zilla/source/lib/Dist/Zilla/Plugin/PruneCruft.pm#L71
[02:17:40] <Paperbot> Link title(s): [ lib/Dist/Zilla/Plugin/PruneCruft.pm - metacpan.org ]
[02:18:59] <Grinnz> hmm, that does look like it should work
[02:19:04] <Grinnz> never seen it do it though
[02:19:59] <hudo> Grinnz, i guess there will be no problem when cronjobs are running perlscripts , when using perlbrew 
[02:20:28] <Grinnz> hudo: not if you give it the full path to the perl, and don't use local::lib (which is incompatible with perlbrew anyway)
[02:20:54] <xenu> i'm not going to argue but i have no memory of ever having to exclude tarballs back when i wasn't using Git::GatherDir
[02:20:57] <Grinnz> and if it runs as a user with access to your homedir of course
[02:21:28] <Grinnz> xenu: i've seen lots of uploads using @Basic that upload tarballs so i don't think it's ever worked
[02:22:29] <xenu> maybe i was extra careful and always removed them in some other manner
[02:22:30] <xenu> but anyway
[02:22:39] <xenu> it definitely is supposed to work even if it doesn't
[02:23:15] <Grinnz> even so, Git::GatherDir and gitignoring those files are both things you should definitely do
[02:23:25] <Grinnz> committing them to the repo is equally a problem
[02:25:51] <xenu> true
[02:25:53] <Grinnz> assuming a properly set up gitignore and Git::GatherDir, PruneCruft and ManifestSkip should be superfluous, but i include them anyway because it doesn't hurt anything
[02:26:04] <xenu> unless you are using some other vcs, then you're fucked
[02:26:11] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 250 seconds)
[02:26:22] <Grinnz> then you should probably write SomeOtherVCS::GatherDir
[02:26:23] <hudo> Grinnz I see there is a debian package perlbrew. Should I use this ?
[02:26:44] <LeoNerd> That's the one I use
[02:26:49] <xenu> imo it's not worth it
[02:27:12] <Grinnz> hudo: if you want, it needs a perl to run itself so you're going to need to install it to the system perl some way
[02:27:31] <Grinnz> plenv doesn't use perl to run, but still needs it to install perls with perl-build
[02:27:39] <xenu> i mean it's just a single command to install it manually and you will have the latest version
[02:28:00] <Grinnz> yeah, check if it's the latest version at least
[02:28:14] <Grinnz> when perlbrew was broken it was very broken
[02:28:29] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[02:28:45] *** Joins: vrurg_ (~vrurg@45.74.95.181)
[02:28:46] <xenu> and it lives in your home directory, so if something goes wrong you can just rm -rf ~/perl5
[02:31:02] *** Quits: vrurg (~vrurg@45.74.95.181) (Ping timeout: 240 seconds)
[02:33:55] *** Joins: pizdets_ (~pizdets@183.182.111.21)
[02:34:29] *** Quits: pizdets (~pizdets@183.182.115.47) (Ping timeout: 250 seconds)
[02:38:13] *** Quits: haj1 (~haj@ip5f5bf913.dynamic.kabel-deutschland.de) (Quit: Leaving.)
[02:40:02] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 256 seconds)
[02:41:56] *** Joins: jetchisel (jetchisel@user/jetchisel)
[02:52:05] *** Quits: Su-Shee (~Susanne@p4ff49133.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[02:53:37] *** Joins: Su-Shee (~Susanne@p50894f43.dip0.t-ipconnect.de)
[02:58:21] *** Quits: vrurg_ (~vrurg@45.74.95.181) (Read error: Connection reset by peer)
[02:58:22] <zgu> is there a Data::ParseBinary-like module that's been maintained in the past decade?
[02:58:33] *** Joins: ProperN[out] (~sanko@172-2-59-65.lightspeed.clmasc.sbcglobal.net)
[02:58:39] *** Joins: vrurg (~vrurg@45.74.95.181)
[02:59:09] *** Quits: ProperNoun (~sanko@2600:1700:eb30:a2c0::45) (Ping timeout: 268 seconds)
[03:01:17] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 250 seconds)
[03:01:44] <Grinnz> dunno but interesting idea, mostly you can just use unpack for that
[03:02:03] <Grinnz> the tricky parts are system specific things like endian integers
[03:02:54] <Grinnz> and also sub-byte fields because pack only allows byte specifications, so you have to do bitshifting to get at smaller fields
[03:06:21] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[03:17:38] *** Joins: proller (~p@80.240.216.69)
[03:19:18] <zgu> yeah unpack works, it's just cumbersome
[03:20:15] *** Quits: magla (~gelignite@55d42279.access.ecotel.net) (Quit: Stay safe!)
[03:27:04] *** Quits: choroba (~E_Choroba@89-101-243-80.cust.centrio.cz) (Quit: Leaving)
[03:33:10] *** Quits: jabberwok (~wlindley@75.105.20.104) (Quit: Leaving.)
[03:33:45] *** Joins: pucara (~i@181.95.204.204)
[03:36:27] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[03:40:06] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 256 seconds)
[03:46:28] * GumbyPAN CPAN Upload: WWW-KeePassHttp-0.010 by PETERCJ https://metacpan.org/release/PETERCJ/WWW-KeePassHttp-0.010
[03:46:35] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 264 seconds)
[03:50:58] *** Quits: Guest42 (~Guest42@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Quit: Client closed)
[03:51:45] *** Quits: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net) (Quit: Konversation terminated!)
[03:52:02] *** Quits: v` (~v@user/ctrl) (Ping timeout: 240 seconds)
[03:52:02] *** Joins: Colt (~Colt@user/colt)
[03:53:45] *** Joins: proller (~p@2a02:6b8:b081:8813::1:2f)
[03:56:56] *** Joins: rgrinberg (~textual@201.192.183.100)
[03:57:08] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[04:15:59] *** Joins: v` (~v@user/ctrl)
[04:17:12] <sivoais> i know that some modules contain both XS and pure Perl versions in a single dist, but it appears that some of them still require a compiler at build time even if they can work without XS at runtime.
[04:18:59] <sivoais> Is this something worth sending patches in for? I have a PR to skip building the XS for Params::Util.
[04:19:44] <sivoais> Though I understand that if I'm using this to fatpack something, just do it on something with a compiler and just remove the non-pure-perl bits myself
[04:21:30] <sivoais> zgu: Convert::Binary::C? It's a rather amazing module that gets regular updates.
[04:22:35] *** Quits: willthechill (~willthech@2600:1700:8c61:3ed0:e119:8159:ccc4:5b47) (Ping timeout: 264 seconds)
[04:23:12] <mst> sivoais: ideal is a pure perl module that deps on the XS module if it can find a compiler
[04:23:47] <mst> sivoais: PUREPERL_ONLY being recognised (I may have misremembered the name) for hybrid dists is better
[04:24:12] <mst> sivoais: anything that requires XS at build time while still being able to run without at runtime is, IMO, a bug
[04:24:55] <sivoais> Yeah, I'm trying to get Params::Util to recognise it PUREPERL_ONLY=1
[04:26:48] <sivoais> will also need to do the same for Params::Validate
[04:27:51] <mst> ah, Params::Validate has --allow_pureperl but not the env var
[04:28:10] <mst> I suspect that'll be an easy win since the author was part of the PUREPERL_ONLY idea in the first place
[04:29:46] <Grinnz> yeah and he's quite familiar with the trickiness having written https://metacpan.org/pod/Module::Implementation
[04:29:47] <Paperbot> Link title(s): [ Module::Implementation - Loads one of several alternate underlying implementations for a module -... ]
[04:29:58] <sivoais> I'm just checking if my case for the first PR isn't totally off the mark because I'm doing a round of nudging for PR reviews.
[04:30:48] <sivoais> link to the PR <https://github.com/perl5-utils/Params-Util/pull/2>
[04:30:49] <Paperbot> Link title(s): [ Skip building XS when PUREPERL_ONLY=1 set by zmughal · Pull Request #2 · perl5-utils/Params-Util ... ]
[04:31:15] <Grinnz> erm, i read that as Params::Validate not Params::Util, different person :P
[04:31:21] <mst> basically, rolsky stuff is 100% going to be well received and his Module::Implementation code, if used, should make it fairly easy
[04:32:25] <sivoais> oh, both need it... I have a small script that I am using to find all my Carton deps that build XS despite setting cpanm --pureperl
[04:32:45] <Grinnz> oh you did mention both, that explains my confusion :)
[04:33:03] <mst> though params::util has the same maintainer as List::MoreUtils which I think does obey PUREPERL_ONLY somewhere?
[04:33:27] <mst> yerp https://metacpan.org/release/REHSACK/List-MoreUtils-0.430/source/inc/Config/AutoConf/LMU.pm
[04:33:28] <Paperbot> Link title(s): [ inc/Config/AutoConf/LMU.pm - metacpan.org ]
[04:33:34] <Grinnz> through his insane shit, yeah
[04:33:50] <mst> I'm talking about it being possible to get the patch in :)
[04:34:51] <Grinnz> it will certainly require being more diplomatic than i am probably inclined to with rehsack
[04:35:53] <whynot> zj/quit
[04:35:56] *** Quits: whynot (~whynot@37.73.72.220) (Quit: leaving)
[04:36:33] * GumbyPAN CPAN Upload: Alien-OpenMP-0.003006 by ETJ https://metacpan.org/release/ETJ/Alien-OpenMP-0.003006
[04:36:33] * GumbyPAN CPAN Upload: WebService-YTSearch-0.0201 by GENE https://metacpan.org/release/GENE/WebService-YTSearch-0.0201
[04:37:05] <sivoais> ah, well, I sent off an e-mail, so we'll see :-)
[04:38:54] *** Quits: proller (~p@2a02:6b8:b081:8813::1:2f) (Ping timeout: 265 seconds)
[04:49:26] *** Quits: EvanCarroll (~ecarroll@198-0-91-126-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[04:51:26] *** Joins: proller (~p@80.240.216.69)
[04:54:02] *** Quits: waltman (waltman@2601:4a:701:4451:254c:8a3e:e8cc:a2f6) (Ping timeout: 240 seconds)
[04:55:09] *** Joins: waltman (waltman@2601:4a:701:4451:6b05:7af5:bef8:96cc)
[04:58:17] *** Quits: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi) (Quit: C-x C-c)
[05:00:39] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 265 seconds)
[05:04:00] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Quit: This computer has gone to sleep)
[05:09:21] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 265 seconds)
[05:09:43] *** Joins: proller (~p@2a02:6b8:b081:a416::1:3a)
[05:21:08] *** Joins: aquanite (~aquanight@174-126-159-166.cpe.sparklight.net)
[05:21:33] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Killed (NickServ (GHOST command used by aquanite)))
[05:21:38] * GumbyPAN CPAN Upload: Crypt-Format-0.11 by FELIPE https://metacpan.org/release/FELIPE/Crypt-Format-0.11
[05:21:38] *** aquanite is now known as aquanight
[05:26:46] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[05:33:28] *** Joins: willthechill (~willthech@99-156-88-67.lightspeed.austtx.sbcglobal.net)
[05:39:31] *** Quits: Pixi (~Pixi@user/pixi) (Quit: Leaving)
[05:40:43] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Read error: Connection reset by peer)
[05:41:03] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[05:43:40] *** Quits: Pali (~pali@user/pali) (Ping timeout: 265 seconds)
[05:45:07] *** Quits: Su-Shee (~Susanne@p50894f43.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[05:46:27] *** Joins: Su-Shee (~Susanne@p5089416e.dip0.t-ipconnect.de)
[05:48:07] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[05:48:07] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[05:48:07] *** finn_elija is now known as FinnElija
[05:50:35] <aquanight> hmm.
[05:50:47] <aquanight> LeoNerd: is there a reason Object::Pad uses DynaLoader over XSLoader?
[05:52:18] <aquanight> (I'm actually finally going to try to do it. Even if I don't end up putting it on CPAN, I'll at least now know better how XS shit actually works instead of only just sorta half know as I do now.)
[05:53:25] <mst> XSLoader is just trivial sugar
[05:53:37] <mst> if you already understand the underlying thing, it gains nothing
[05:53:59] <aquanight> so, good to use as a "baby's first XS" thing
[05:54:18] <mst> more "if you already -had- to learn DynaLoader"
[05:54:47] <aquanight> well as things currently stand I don't really properly *know* either beyond that they exist and whatever I'd probably pick up from perldoc'ing
[05:55:03] <mst> then start with XSLoader
[05:55:18] <mst> but it's like, my Distar as a dist release thing
[05:55:19] <aquanight> makes sense. At what point would I *have* to use DynaLoader?
[05:55:29] <mst> if you already know make and you already know how to read perl code
[05:55:36] <mst> it's perfectly sensible
[05:55:52] <mst> but I'd never recommend it to somebody who was just starting
[05:56:21] <mst> I dunno about the *have* point because I can't read C to save my life, as I'm sure I've said before ;)
[05:56:44] <aquanight> well I imagine once things enter C there's no difference
[05:56:58] <aquanight> (wouldn't be surprised if XSLoader is just a thin convenient wrapper around DynaLoader
[05:57:03] <aquanight> in fact I think it *is*)
[05:57:26] <mst> I already told you it was
[05:57:37] <xenu> DynaLoader has two parts, perl code and XS functions in the interpreter
[05:57:41] <xenu> XSLoader replaces the former
[05:58:03] <xenu> the latter use DynaLoader:: namespace but they aren't really a part of it
[05:58:04] <aquanight> hmm I see
[05:58:26] <mst> XSLoader is an easier interface
[05:58:35] <aquanight> oh indeed
[05:58:46] <aquanight> the .pl is like
[05:58:48] <aquanight> 3 lines?
[05:58:50] <aquanight> .pm*
[05:59:01] <mst> it is not, however, -enough- of an easier interface that if for whatever reason you already know DynaLoader backwards it's worth switching
[05:59:14] <aquanight> fair enough
[05:59:19] <mst> this does not at all change the fact that XSLoader is an easier interface
[05:59:21] <mst> you know?
[05:59:58] <aquanight> so the answer to my question to LeoNerd was probably "LeoNerd knows DynaLoader backward enough to not bother with XSLoader"
[06:00:10] <mst> that's what I said, yes
[06:00:13] <aquanight> and/or templates/boilerplate
[06:00:24] <aquanight> if it ain't broke and all that
[06:00:29] <mst> like, that was the answer I gave you
[06:00:35] <aquanight> yes it was
[06:00:42] <aquanight> and this is me confirming that I get it :)
[06:00:47] <aquanight> (hopefully)
[06:00:51] <mst> fair :D
[06:01:35] *** Quits: gast0n (~g4570n@user/gast0n) (Ping timeout: 264 seconds)
[06:01:58] <aquanight> but of course for as easy as XSLoader makes it... I have to figure out all the actual XS meat of what I'm trying to do. Which means step 1 figure out callcheckers.
[06:02:15] <aquanight> Shit I don't even know how I'm going to write *tests* for this yet. Probably B::Deparse regexing
[06:05:26] *** Joins: Pixi (~Pixi@user/pixi)
[06:06:42] <mst> aquanight: oh, right, yeah, I did have to write code for both to make fatpacker-with-xs work
[06:07:07] <haarg> XSLoader doesn't support dl_load_flags
[06:07:24] <mst> http://paste.scsys.co.uk/596167
[06:07:24] <Paperbot> Link title(s): [ magnet_web paste from Someone at 217.168.150.38... ]
[06:08:35] <aquanight> oi... the K*R style C function decls in XS blegh.
[06:10:10] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[06:11:21] <xenu> they aren't required but since the documentation uses them everyone is cargo-culting that
[06:13:46] <aquanight> xenu: oh? It'll take "modern-style" arguments then? Like SV* thing(CV* sub) CODE: blablabla
[06:15:09] <xenu> yep
[06:15:10] <xenu> https://perldoc.perl.org/perlxs#The-Anatomy-of-an-XSUB
[06:15:11] <Paperbot> Link title(s): [ perlxs - XS language reference manual - Perldoc Browser ]
[06:20:06] <aquanight> okay this perldoc is a bit confusing on one thing. There's a bit where they talk about xsubs that need to return nothing
[06:20:12] <aquanight> and apparently they're suggesting to return... SV* ?
[06:20:27] <aquanight> and for some reason I'm having a bit of deja vu or something.
[06:20:58] <aquanight> or would it be better to do void and PPCODE/XSRETURN(0)
[06:21:41] <xenu> you don't call "return" instead you assign to RETVAL
[06:22:15] <xenu> ah sorry
[06:22:21] <xenu> i misread what you've said
[06:23:20] <xenu> i *think* void is allowed
[06:23:40] <xenu> the preprocesor *probably* interprets it as return undef
[06:23:50] <xenu> no idea, i never needed it, i mean perl subs always return a value
[06:24:47] <aquanight> it's true
[06:25:05] <aquanight> and for that reason I might end up giving it just a simple XSRETURN_YES or whatever it is
[06:31:51] <aquanight> ok so it looks like cv_set_call_checker_flags is the magic bullet I need
[06:32:23] <aquanight> but I need to get the previous callchecker so I can chaincall (prototypes yo)
[06:36:21] *** Quits: willthechill (~willthech@99-156-88-67.lightspeed.austtx.sbcglobal.net) (Ping timeout: 265 seconds)
[06:39:28] <aquanight> hmmm
[06:39:35] <aquanight> what's the right way to store a C function pointer in an SV*
[06:40:14] <aquanight> (I need to pass the "previous" callchecker to my own callchecker, and there's a convenient 'data' slot I can use to do so, but it's an SV*)
[06:40:54] <aquanight> I'm tempting to just put it in UV and call it a day but for some reason that feels like a bad idea
[06:47:31] <zgu> IV
[06:55:42] *** Joins: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi)
[06:58:49] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:58:49] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[06:58:49] *** finn_elija is now known as FinnElija
[06:59:02] <xenu> proper? none, ideally pointers shouldn't cross xs boundary. if you can, use some kind of identifier on perl side and some lookup table on xs side
[06:59:11] <xenu> but if you must, then yes, UV
[06:59:55] <xenu> or IV, doesn't matter
[07:00:06] <xenu> iirc void* typemap does that automatically
[07:01:54] <aquanight> ugh. it's irrelevant anyway. I realized I need to get the SV from the existing checker and reuse it so I can pass it to ck_entersub_args_proto_or_list (the default checker)
[07:02:19] <aquanight> I would need to save *both* the pointer and existing SV. For now I'm just going to save the SV and fail if the current checker isn't the default
[07:02:48] <aquanight> I need this because I think that's how the prototype string actually *gets* to that checker.
[07:02:51] <aquanight> ...... maybe.
[07:03:36] <xenu> i guess T_PTROBJ is slightly better than just IV
[07:04:23] <aquanight> yeah. I need to pass on the ckobj. So... dammit.
[07:04:45] <aquanight> I mean it's solvable but 99% of cases this mickey mouse answer will work fine.
[07:08:58] *** Quits: rgrinberg (~textual@201.192.183.100) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:15:33] <aquanight> it also occurs to me I have no idea how to get at the CV* that triggered the callchecker
[07:20:32] *** Quits: D-ion (~D-ion___@0850724116.static.corbina.ru) (Ping timeout: 256 seconds)
[07:22:54] *** Quits: Colt (~Colt@user/colt) (Quit: Leaving)
[07:23:20] *** Joins: Colt (~Colt@user/colt)
[07:24:23] *** Quits: scotticles (~TheScotti@h96-60-204-176.cdcyut.broadband.dynamic.tds.net) (Ping timeout: 264 seconds)
[07:24:41] *** Joins: gast0n (~g4570n@user/gast0n)
[07:27:43] *** Joins: D-ion (~D-ion___@0850724116.static.corbina.ru)
[07:29:39] <aquanight> LeoNerd: is it possible to hook into S_finalize_op somehow?
[07:30:13] <aquanight> LeoNerd: I've noticed the EARLYCV flag and wondered if I can abuse it.
[07:31:04] <aquanight> (S_finalize_op triggers the "called to early to check prototype" warning if the GV op has the EARLYCV flag)
[07:31:16] <aquanight> (... *and* the CV in question has a prototype)
[07:38:05] *** Joins: scotticles (~TheScotti@h96-60-204-176.cdcyut.broadband.dynamic.tds.net)
[07:39:29] *** Joins: willthechill (~willthech@2600:1700:8c61:3ed0:e119:8159:ccc4:5b47)
[07:43:10] <mst> aquanight: PL_CHECK is about all you usually get
[07:43:21] <aquanight> mst: damn
[07:43:43] <mst> aquanight: though look at UNIVERSAL::ref and Enbugger for after the fact fuckery
[07:51:53] * GumbyPAN CPAN Upload: WebService-YTSearch-0.0202 by GENE https://metacpan.org/release/GENE/WebService-YTSearch-0.0202
[07:54:13] *** Quits: Martchus_ (~martchus@dynamic-095-118-177-029.95.118.pool.telefonica.de) (Ping timeout: 250 seconds)
[07:54:30] *** Joins: Martchus (~martchus@2a01:c23:b9b5:f700:d250:99ff:fe49:3cce)
[08:05:46] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 265 seconds)
[08:06:55] * GumbyPAN CPAN Upload: Crypt-Format-0.12 by FELIPE https://metacpan.org/release/FELIPE/Crypt-Format-0.12
[08:11:28] <aquanight> LeoNerd: if I've pushed a bunch of shit on the stack but then suddenly realize I don't need them, what's the correct way to get rid of the garbage?
[08:11:42] <aquanight> or will ENTER/SAVETMPS/FREETMPS/LEAVE do that
[08:11:59] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 250 seconds)
[08:14:25] <aquanight> hmmm nvm. I'll have to scan the opcodes up front. I just remembered that "walk" order is not necessarily "execute" order
[08:15:21] *** Joins: deadmarshal (~deadmarsh@95.38.119.2)
[08:22:39] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Quit: Leaving)
[08:26:57] * GumbyPAN CPAN Upload: Dyn-0.01 by SANKO https://metacpan.org/release/SANKO/Dyn-0.01
[08:27:31] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 265 seconds)
[08:32:46] *** Quits: riceandbeans (~zach@user/riceandbeans) (Read error: Connection reset by peer)
[08:38:04] *** Joins: riceandbeans (~zach@user/riceandbeans)
[08:46:40] *** Quits: ProperN[out] (~sanko@172-2-59-65.lightspeed.clmasc.sbcglobal.net) (Ping timeout: 256 seconds)
[08:52:00] * GumbyPAN CPAN Upload: WebService-YTSearch-0.0203 by GENE https://metacpan.org/release/GENE/WebService-YTSearch-0.0203
[08:53:35] *** Quits: zhmylove (~zhmylove@178.252.127.211) (Read error: Connection reset by peer)
[08:54:28] *** Joins: zhmylove (~zhmylove@178.252.127.211)
[09:05:50] *** Joins: zkrd (~xdg@2a02:587:de00:6d00:8d70:bb1d:ae11:bfda)
[09:12:02] * GumbyPAN CPAN Upload: JSON-Schema-Modern-0.525 by ETHER https://metacpan.org/release/ETHER/JSON-Schema-Modern-0.525
[09:17:51] *** Quits: deadmarshal (~deadmarsh@95.38.119.2) (Ping timeout: 250 seconds)
[09:19:01] *** Quits: willthechill (~willthech@2600:1700:8c61:3ed0:e119:8159:ccc4:5b47) (Ping timeout: 268 seconds)
[09:27:04] * GumbyPAN CPAN Upload: JSON-Schema-Modern-Document-OpenAPI-0.002 by ETHER https://metacpan.org/release/ETHER/JSON-Schema-Modern-Document-OpenAPI-0.002
[09:27:51] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[09:30:39] *** Quits: hudo (~hudo@62.68.19.39) (Quit: Leaving)
[09:33:01] *** Joins: mattil (~mattil@helsinki.portalify.com)
[09:41:58] *** Quits: EGD (~egd@user/egd) ()
[09:47:05] * GumbyPAN CPAN Upload: Lingua-EN-Inflexion-0.002006 by DCONWAY https://metacpan.org/release/DCONWAY/Lingua-EN-Inflexion-0.002006
[09:50:37] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[09:51:18] *** Joins: mattil (~mattil@helsinki.portalify.com)
[09:51:56] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[09:52:07] *** Quits: diskin (~diskin@ec2-18-158-74-148.eu-central-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[09:52:08] *** Joins: mattil (~mattil@helsinki.portalify.com)
[09:53:43] *** Joins: diskin (~diskin@31.23.180.52)
[09:56:27] *** Quits: kevin-oculus (~tomys@c188-149-14-10.bredband.tele2.se) (Ping timeout: 265 seconds)
[09:57:06] * GumbyPAN CPAN Upload: Math-GMP-2.24 by SHLOMIF https://metacpan.org/release/SHLOMIF/Math-GMP-2.24
[09:58:57] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[10:00:20] *** Quits: Pixi (~Pixi@user/pixi) (Ping timeout: 256 seconds)
[10:01:40] *** Joins: Pixi (~Pixi@user/pixi)
[10:08:50] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[10:19:02] *** Quits: leont (sid489095@uxbridge.irccloud.com) (Ping timeout: 256 seconds)
[10:19:02] *** Quits: davebaker_ (sid143727@lymington.irccloud.com) (Ping timeout: 256 seconds)
[10:19:02] *** Quits: ranguard (sid496095@lymington.irccloud.com) (Ping timeout: 256 seconds)
[10:19:27] *** Quits: Yaakov (sid19863@user/Yaakov) (Ping timeout: 268 seconds)
[10:19:27] *** Quits: kawaii_ (sid345572@hampstead.irccloud.com) (Ping timeout: 268 seconds)
[10:19:36] *** Quits: pwillard (sid136981@hampstead.irccloud.com) (Ping timeout: 256 seconds)
[10:20:03] *** Joins: Yaakov (sid19863@user/Yaakov)
[10:20:04] *** Quits: odc (sid197788@helmsley.irccloud.com) (Ping timeout: 268 seconds)
[10:20:12] *** Joins: pwillard (sid136981@hampstead.irccloud.com)
[10:20:35] *** Joins: kawaii_ (sid345572@hampstead.irccloud.com)
[10:20:44] *** Joins: hudo (~hhudo_@mail.allm-elektro.de)
[10:21:01] *** Joins: hudo_ (~hhudo_@mail.allm-elektro.de)
[10:21:03] *** Joins: odc (sid197788@helmsley.irccloud.com)
[10:21:58] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[10:22:12] *** Joins: davebaker_ (sid143727@lymington.irccloud.com)
[10:22:15] *** Joins: leont (sid489095@uxbridge.irccloud.com)
[10:22:15] *** Joins: ranguard (sid496095@lymington.irccloud.com)
[10:22:18] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[10:24:26] *** Joins: deadmarshal (~deadmarsh@95.38.119.2)
[10:29:29] *** Quits: hudo_ (~hhudo_@mail.allm-elektro.de) (Quit: Leaving)
[10:30:43] *** Quits: hudo (~hhudo_@mail.allm-elektro.de) (Quit: Leaving)
[10:31:04] *** Joins: hudo (~hhudo_@mail.allm-elektro.de)
[10:37:33] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[10:38:07] <deadmarshal> where should i look in the perl source code to see how its doctyping is implemented?
[10:39:04] <rindolf> deadmarshal: do you mean here-docs?
[10:41:32] *** Quits: randir (~randir@95-25-138-85.broadband.corbina.ru) (Remote host closed the connection)
[10:42:55] <deadmarshal> rindolf: no. i mean data types. like strings, arrays, hashes, whatever
[10:44:23] <ehuelsmann[m]> deadmarshal: can you explain what you're trying to achieve? I don't understand what you're asking.
[10:45:27] <deadmarshal> ehuelsmann: i want to see how perl for example handles strings. and other data types
[10:45:48] <Grinnz> for starters, those aren't data types
[10:46:01] <Grinnz> arrays and hashes are variables
[10:46:18] <Grinnz> scalar values can be used as strings, but they aren't ever only strings
[10:46:50] <Grinnz> if you want know the internals check perlguts?
[10:47:55] <deadmarshal> Grinnz: ok than u
[10:55:32] *** Joins: randir (~randir@93.159.239.42)
[10:56:39] *** Quits: deadmarshal (~deadmarsh@95.38.119.2) (Ping timeout: 250 seconds)
[11:02:58] *** Quits: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Ping timeout: 260 seconds)
[11:03:33] <zkrd> I am using decode from JSON to parse some data. Then I do my $var = $json{foo}{bar}; (which is a boolean) and when I try to print it with Data::Printer, instead of getting the true/false value or 1/0 I am getting a hash JSON::PP::Boolean  {...} 
[11:03:48] <zkrd> Is there any way to replace it with just 1 or 0 as values when its true or false?
[11:04:37] *** Joins: deadmarshal (~deadmarsh@95.38.119.2)
[11:11:07] *** Quits: gk__ (~irkk@debrecziner.extrawurst.systems) (Quit: leaving)
[11:12:01] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 265 seconds)
[11:13:08] *** Joins: gk_ (~irkk@debrecziner.extrawurst.systems)
[11:14:52] *** Joins: WinterStar (~IceLight@user/icelight)
[11:18:01] <hudo> can i install perl modules as "normal user", so they will be installd in my homedir and later install plenv ? Do they work parallel ?
[11:18:25] <rindolf> zkrd: use a recursive filter?
[11:18:45] <rindolf> perlbot: local-lib
[11:18:46] <perlbot> rindolf: No factoid found. Did you mean one of these: [local::lib] [local] [local $_] [lololol] [lql] [loxosceles] [mjd local] [loc] [local::lib .bashrc] [local::lib problem]
[11:18:53] <rindolf> perlbot: local::lib
[11:18:53] <perlbot> rindolf: makes the process of installing modules in one's home directory (or anywhere other than the default) easy. Remember to start with the bootstrap install - that fixes the "I don't have local::lib yet" problem. http://p3rl.org/local::lib <3
[11:19:01] <rindolf> hudo: ^^^
[11:21:38] <hudo> rindolf: what do you mean ? is it possible ?
[11:22:00] *** Joins: radu242407 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[11:22:37] <rindolf> hudo: use local::lib
[11:26:46] *** Quits: cation (cation@user/cation) (Ping timeout: 260 seconds)
[11:28:17] *** Quits: Murray7501 (~Murray@89.109-247-180.customer.lyse.net) (Ping timeout: 264 seconds)
[11:28:37] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[11:29:16] *** Joins: cation (cation@user/cation)
[11:30:49] <rindolf> perlbot: loxosceles
[11:30:49] <perlbot> rindolf: Loxosceles is the genus of spiders that includes the infamous brown recluse spider Loxosceles reclusa. Loxosceles.org is Beth's website
[11:32:21] *** Joins: Lemniscate (~sauvin@about/linux/staff/sauvin)
[11:34:47] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 250 seconds)
[11:35:42] *** Quits: fstd_ (~fstd@xdsl-78-35-74-116.nc.de) (Read error: Connection reset by peer)
[11:35:50] *** Joins: fstd (~fstd@xdsl-78-35-74-116.nc.de)
[11:40:15] *** Joins: martinus__ (~martin@53.31.201.77.rev.sfr.net)
[11:40:55] * rindolf is away
[11:42:50] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[11:43:27] *** Quits: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Ping timeout: 250 seconds)
[11:44:35] *** Quits: pucara (~i@181.95.204.204) (Quit: Lost terminal)
[11:48:52] *** Quits: asdflkj_sh (asdflkj@bsdforall.org) (Ping timeout: 268 seconds)
[11:51:58] *** Quits: deadmarshal (~deadmarsh@95.38.119.2) (Ping timeout: 256 seconds)
[11:55:02] *** Joins: asdflkj_sh (asdflkj@pyritepyro.lemon.ircnow.org)
[11:59:18] *** Quits: Ovid (~Ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Quit: Leaving...)
[12:00:55] *** Joins: Ovid (~Ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[12:04:14] *** Joins: diskin_ (~diskin@ec2-18-158-74-148.eu-central-1.compute.amazonaws.com)
[12:04:14] *** Quits: diskin (~diskin@31.23.180.52) (Killed (sodium.libera.chat (Nickname regained by services)))
[12:04:14] *** diskin_ is now known as diskin
[12:07:20] *** Joins: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[12:07:25] *** Quits: Ovid (~Ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Quit: Leaving...)
[12:09:08] *** Joins: haj1 (~haj@ip5f5bf913.dynamic.kabel-deutschland.de)
[12:11:47] *** Quits: waltman (waltman@2601:4a:701:4451:6b05:7af5:bef8:96cc) (Ping timeout: 265 seconds)
[12:12:29] *** Joins: tobybl (~tobybl@dhcp-199-132.inf.ed.ac.uk)
[12:14:25] *** Joins: waltman (waltman@2601:4a:701:4451:6b05:7af5:bef8:96cc)
[12:25:50] <LeoNerd> Bah can someone please teach aquanight about having a permanent IRC presence sometime? So that whenever he asks me questions in the middle of the night, I can actually reply in the morning :/
[12:26:06] <LeoNerd> There's lots of interesting stuff in scrollback that there's kinda no point my writing about now
[12:31:22] * GumbyPAN CPAN Upload: App-timeput-0.076 by TULAMILI https://metacpan.org/release/TULAMILI/App-timeput-0.076
[12:31:37] *** Joins: Manderson (manderson@gateway/vpn/protonvpn/manderson)
[12:31:46] <Botje> If only there was a longform asynchronous method of communication.
[12:32:06] *** Quits: riceandbeans (~zach@user/riceandbeans) (Ping timeout: 260 seconds)
[12:34:09] *** Quits: __Manderson (manderson@gateway/vpn/protonvpn/manderson) (Ping timeout: 250 seconds)
[12:39:07] *** Joins: riceandbeans (~zach@user/riceandbeans)
[12:45:10] *** Quits: Colt (~Colt@user/colt) (Quit: Leaving)
[12:45:28] *** Joins: Colt (~Colt@user/colt)
[12:54:36] <rindolf> hudo: i'm back
[12:57:16] *** Joins: dacav (~dacav@h94-245-9-199.cust.a3fiber.se)
[13:04:08] *** Joins: Ovid (~Ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[13:10:44] <tm604> clearly this is a job for the facebook XS group
[13:15:09] *** Quits: voegelas (~voegelas@www.andreasvoegele.com) (Remote host closed the connection)
[13:16:27] * GumbyPAN CPAN Upload: VMware-vCloudDirector2-0.108 by NIGELM https://metacpan.org/release/NIGELM/VMware-vCloudDirector2-0.108
[13:18:25] *** Joins: voegelas (~voegelas@www.andreasvoegele.com)
[13:25:16] *** Joins: deadmarshal (~deadmarsh@95.38.119.2)
[13:29:44] *** Joins: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net)
[13:36:20] *** Joins: miojo (~fu@191.253.152.133)
[13:48:59] *** Quits: Yaakov (sid19863@user/Yaakov) (Ping timeout: 264 seconds)
[13:50:20] *** Joins: Yaakov (sid19863@user/Yaakov)
[14:03:57] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[14:06:32] * GumbyPAN CPAN Upload: CPAN-Mirror-Tiny-0.31 by SKAJI https://metacpan.org/release/SKAJI/CPAN-Mirror-Tiny-0.31
[14:12:01] *** Joins: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net)
[14:22:17] *** Quits: proller (~p@2a02:6b8:b081:a416::1:3a) (Ping timeout: 265 seconds)
[14:27:41] *** Quits: hethw (~heth@46.238.32.56) (Ping timeout: 250 seconds)
[14:28:29] *** Joins: hethw (~heth@151.251.250.147)
[14:32:24] *** Joins: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se)
[14:32:26] *** Quits: miojo (~fu@191.253.152.133) (Ping timeout: 265 seconds)
[14:32:39] *** Joins: miojo (~fu@186.231.92.60)
[14:32:50] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[14:34:16] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:35:03] *** Joins: csrf (~csrf@user/csrf)
[14:42:14] <aquanight> well dammit no, this approach won't do either. @{[1..5]} produces rv2av/scope/anonlist/rv2av/const while @{"foo"} produces rv2av/scope/const. Both will look like constants but @{"foo"} obviously should not be
[14:45:50] <aquanight> range constants are annoying. If not for them I could just assume every constant argument will be a single OP_CONST argument and ignore anything past that.
[14:49:26] *** Joins: kensanata (~user@user/kensanata)
[14:54:50] *** Quits: Exodist (sid433366@hampstead.irccloud.com) (Read error: Connection reset by peer)
[14:54:59] *** Joins: Exodist (sid433366@hampstead.irccloud.com)
[14:55:34] *** Quits: kraih (sid17075@mojo/destroy-all-humans/kraih) (Ping timeout: 256 seconds)
[14:55:34] *** Quits: TBSliver (sid321952@hampstead.irccloud.com) (Ping timeout: 256 seconds)
[14:55:43] *** Quits: toddr (sid457681@tinside.irccloud.com) (Ping timeout: 268 seconds)
[14:55:43] *** Quits: integral (sid296274@user/integral) (Ping timeout: 268 seconds)
[14:56:37] *** Joins: kraih (sid17075@mojo/destroy-all-humans/kraih)
[14:57:34] *** Quits: genio (sid223130@ilkley.irccloud.com) (Ping timeout: 268 seconds)
[14:57:59] *** Quits: davebaker_ (sid143727@lymington.irccloud.com) (Ping timeout: 264 seconds)
[14:57:59] *** Quits: neilb___ (sid492745@ilkley.irccloud.com) (Ping timeout: 264 seconds)
[14:58:03] *** Joins: TBSliver (sid321952@hampstead.irccloud.com)
[14:58:11] *** Quits: rjbs (sid498898@uxbridge.irccloud.com) (Ping timeout: 268 seconds)
[14:58:50] *** Joins: integral (sid296274@user/integral)
[14:58:52] *** Joins: toddr (sid457681@tinside.irccloud.com)
[14:59:27] *** Joins: genio (sid223130@ilkley.irccloud.com)
[15:00:02] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 268 seconds)
[15:01:07] *** Joins: davebaker_ (sid143727@lymington.irccloud.com)
[15:01:08] *** Joins: neilb___ (sid492745@ilkley.irccloud.com)
[15:01:21] *** Joins: rjbs (sid498898@uxbridge.irccloud.com)
[15:01:26] *** Quits: kensanata (~user@user/kensanata) (Ping timeout: 265 seconds)
[15:03:07] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[15:03:07] *** Quits: hethw (~heth@151.251.250.147) (Read error: Connection reset by peer)
[15:04:55] *** Joins: hethw (~heth@46.238.32.56)
[15:05:57] *** Quits: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se) (Quit: Konversation terminated!)
[15:06:08] *** Quits: ranguard (sid496095@lymington.irccloud.com) (Read error: Connection reset by peer)
[15:06:12] *** Joins: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se)
[15:06:16] *** Joins: ranguard (sid496095@lymington.irccloud.com)
[15:06:49] *** Quits: patterner_ (sid212303@ilkley.irccloud.com) (Ping timeout: 268 seconds)
[15:09:20] *** Joins: patterner_ (sid212303@ilkley.irccloud.com)
[15:09:22] *** Joins: sprout_ (~quassel@2a02:a467:ccd6:1:2c29:7076:9399:3f2e)
[15:12:13] *** Joins: pj (~pj@ghettoforge/pj)
[15:13:02] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:e14a:d90e:46d2:87c4) (Ping timeout: 265 seconds)
[15:13:55] <vague> (nov 17 09:55:50)       LeoNerd │ Bah can someone please teach aquanight about having a permanent IRC presence sometime? So that whenever he asks me questions in the middle of the night, I can actually reply in the morning :/
[15:13:59] <vague> (nov 17 09:56:06)       LeoNerd │ There's lots of interesting stuff in scrollback that there's kinda no point my writing about now
[15:14:40] *** Joins: Pali (~pali@user/pali)
[15:15:08] <vague> LeoNerd, libera has memoserv of course :)
[15:18:09] <aquanight> hey at least this is not one of those servers that will outright boot/auto-kline you if you idle for more than a few minutes
[15:18:20] <aquanight> I think EFnet had a couple of those
[15:28:42] <hethw> there was a dump function that shows flags like UTF8, anyone remember where was it?
[15:29:01] <aquanight> Devel::Peek?
[15:32:08] <hethw> aquanight, ah, great, thanks I always forget "Peek"
[15:39:29] <hethw> why does find() only accept LATIN in UTF8
[15:39:40] <hethw> that's a first for me
[15:40:23] <Botje> which find?
[15:40:33] <Botje> and what the hell does "LATIN in UTF8" mean
[15:41:19] <hethw> exactly my question
[15:41:32] <Botje> are you quoting from some module documentation, perhaps/
[15:41:47] <hethw> find in File::Find
[15:41:57] <hethw> no
[15:42:31] <hethw> or can I see which find is it? I guess it's this?
[15:42:39] <Botje> neither "utf" nor "latin1" appear in that module's documentation.
[15:42:56] <hethw> let's first figure out which find is it
[15:43:01] <hethw> how can I do that
[15:43:04] <Botje> does it take a coderef as first parameter? then very probably it's File::Find.
[15:43:12] <Botje> look at the `use` statements.
[15:43:18] <hethw> it takes a wanted => sub
[15:43:44] <Botje> that's File::Find's find, alright.
[15:44:01] <hethw> ok
[15:44:12] <hethw> so I have a search pattern that's in ascii letters
[15:44:42] <hethw> let me paste this, sec
[15:45:29] *** Joins: magla (~gelignite@55d4d6da.access.ecotel.net)
[15:49:07] *** Joins: bmeneg_ (~bmeneg@2001:1284:f016:6b8b:c598:4952:2800:7afe)
[15:49:35] *** Quits: bmeneg (~bmeneg@2001:1284:f013:b799:45f9:70ee:eb81:68f4) (Ping timeout: 250 seconds)
[15:49:38] *** Joins: Ovid_ (~Ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[15:50:24] *** Quits: Ovid (~Ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Read error: No route to host)
[15:50:43] *** Joins: Ovid (~Ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[15:53:55] *** Quits: Ovid_ (~Ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[15:54:47] *** Quits: deadmarshal (~deadmarsh@95.38.119.2) (Ping timeout: 250 seconds)
[15:56:59] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Quit: This computer has gone to sleep)
[16:01:39] *** Joins: proller (~p@2a02:6b8:0:408:eef4:bbff:fe62:69c8)
[16:01:43] * GumbyPAN CPAN Upload: Mojo-Leds-1.12 by EBRUNI https://metacpan.org/release/EBRUNI/Mojo-Leds-1.12
[16:04:06] *** Quits: voegelas (~voegelas@www.andreasvoegele.com) (Remote host closed the connection)
[16:05:20] <hethw> hm, cannot isolate it yet. brb
[16:06:44] * GumbyPAN CPAN Upload: AnySan-Provider-Slack-0.07 by SHOGO https://metacpan.org/release/SHOGO/AnySan-Provider-Slack-0.07
[16:07:26] *** Joins: voegelas (~voegelas@www.andreasvoegele.com)
[16:07:54] *** Joins: deadmarshal (~deadmarsh@95.38.119.2)
[16:12:38] *** Quits: deadmarshal (~deadmarsh@95.38.119.2) (Ping timeout: 256 seconds)
[16:13:12] *** Quits: X-Scale (~ARM@46.50.0.92) (Ping timeout: 256 seconds)
[16:19:29] *** Joins: X-Scale (~ARM@83.223.235.65)
[16:46:13] *** Joins: deadmarshal (~deadmarsh@95.38.119.2)
[16:46:43] *** Joins: gizmomathboy (~gizmomath@206.127.53.107)
[16:48:09] *** Joins: jabberwok (~wlindley@75.105.20.104)
[16:54:35] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Ping timeout: 250 seconds)
[16:55:07] <karjala> In 'perldoc -f open' I see that with the open command and with '-|', I can read the standard output of a normal perl subroutine instead of an external program. Is that facility available to us with IPC::open3 as well, so one could read stdin and stderr of a sub in real-time?
[16:55:20] <karjala> I don't see that in the docs, so my guess would be no
[16:55:41] <karjala> Though had to ask, because it's a bit like a missing feature
[16:56:08] <Botje> this smells like an XY problem. what is the sub outputting that you would like to inspect at runtime?
[16:57:09] <ilmari> «Note if you specify - as the command, in an analogous fashion to open(my $fh, "-|") the child process will just be the forked Perl process rather than an external command.» - https://metacpan.org/pod/IPC::Open3
[16:57:09] <Paperbot> Link title(s): [ IPC::Open3 - open a process for reading, writing, and error handling using open3() - metacpan.org ]
[16:58:03] <karjala> The sub is calling an external program actually, it's just that the subroutine that is calling the external command has already been coded and I didn't want to re-code it at a different place, but prefer to call the subroutine.
[16:58:11] <karjala> Thanks all!
[16:58:28] <karjala> I'll go through the entire open3 documentation now to make sure I don't miss more stuff.
[16:58:31] <ilmari> it has nothing to do with perl subroutines, it's just a fork() without the exec()
[16:58:57] <karjala> Yes
[17:01:50] * GumbyPAN CPAN Upload: App-timeput-0.077 by TULAMILI https://metacpan.org/release/TULAMILI/App-timeput-0.077
[17:07:03] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[17:26:42] *** Joins: tobybl_ (~tobybl@dhcp-199-132.inf.ed.ac.uk)
[17:27:11] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[17:27:46] *** Joins: mattil (~mattil@helsinki.portalify.com)
[17:27:53] *** Quits: deadmarshal (~deadmarsh@95.38.119.2) (Ping timeout: 265 seconds)
[17:29:41] *** Quits: tobybl (~tobybl@dhcp-199-132.inf.ed.ac.uk) (Ping timeout: 250 seconds)
[17:33:05] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Remote host closed the connection)
[17:33:06] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 256 seconds)
[17:33:50] <jdv> crazy bout dha.  iirc he didn't even make it to the last few ny mongers meetings over the last couple years or so
[17:36:46] <marcus> jdv: Quite sad. :(
[17:38:20] <jdv> yeah
[17:39:13] *** Joins: japh (~japh@195-198-186-122.customer.telia.com)
[17:46:51] *** Joins: ProperN[out] (~sanko@2600:1700:eb30:a2c0::45)
[17:47:44] *** Joins: gast0n (~g4570n@user/gast0n)
[17:51:52] *** Joins: rgrinberg (~textual@201.192.183.100)
[18:03:42] *** Quits: X-Scale (~ARM@83.223.235.65) (Ping timeout: 256 seconds)
[18:04:50] <Grinnz> hudo: you cannot, perl modules must be installed specific to the perl you install so you can't install them before installing the perl
[18:05:06] <Grinnz> this is why plenv and perlbrew are not compatible with local::lib
[18:10:45] <Ovid> I've just heard about dha's passing. I'm gutted. He was such a wonderful person.
[18:14:46] *** Joins: Guest6 (~Guest6@c-24-30-27-91.hsd1.ga.comcast.net)
[18:14:46] *** Quits: hethw (~heth@46.238.32.56) (Read error: Connection reset by peer)
[18:15:20] <Guest6> Is there a better perl library for making a window cross platform than SDL? Because I can't confirm if it's been updated to SDL2 yet or not.
[18:16:37] *** Joins: SergeiZhmylev (~zhmylove@178.252.127.211)
[18:19:06] *** Joins: X-Scale (~ARM@83.223.235.65)
[18:20:16] *** Joins: ProperNoun (~sanko@172-2-59-65.lightspeed.clmasc.sbcglobal.net)
[18:20:47] *** Quits: ProperN[out] (~sanko@2600:1700:eb30:a2c0::45) (Ping timeout: 264 seconds)
[18:23:42] <Altreus> good day
[18:24:27] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: ...)
[18:24:43] <Altreus> Dunno about better but isn't tk more suited for that?
[18:24:54] <ilmari> depends on what you want to put in the window
[18:25:19] <ilmari> http://lmctfy.org/?&q=SDL2
[18:25:19] <Paperbot> Link title(s): [ Let Me CPAN That For You - lmctfy.org ]
[18:25:26] <Guest6> I was thinking of making some non graphic intensive games in perl, I was thinking SDL2, but unless you have a better window system.
[18:26:01] *** Quits: japh (~japh@195-198-186-122.customer.telia.com) (Ping timeout: 250 seconds)
[18:26:01] <Altreus> SDL at whatever version is probably the right tool for that job. I'm not sure that Perl is the right tool for that job, but it can't hurt to find out
[18:26:18] <Guest6> What's a language that's perl like but more suitable for games?
[18:27:10] <ilmari> I know at least one game tht's written in SDL+Perl: http://www.frozen-bubble.org/
[18:27:11] <Paperbot> Link title(s): [ Frozen Bubble - the official home ]
[18:27:55] <Guest6> I know about frozen bubble, but I rather not be stuck on SDL1 because distros are starting to remove it for being ancient and replaced with SDL2.
[18:28:26] <ilmari> well, SDL2::FFI exists (see my link above)
[18:28:40] <ilmari> perlbot: tell Guest6 about tias?
[18:28:40] <perlbot> Guest6: Try It And See: the best way to learn whether something works, or what it does. (Alternatively: Touch Ignition And Sprint)
[18:29:19] <Botje> note that SDL2 stripped a lot of stuff from SDL
[18:30:00] <Guest6> Can I make interactive games on the web with a bit of javascript when necessary?
[18:30:11] *** Quits: rgrinberg (~textual@201.192.183.100) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:30:25] <LeoNerd> aquanight: Anyhow.. if you still have questions, perhaps try reposting them sometime..? Also if you're going to ask tricky questions when I'm not around, can you either work out a better way to ask them (email?) or else find yourself some sort of always-on IRC presence so I can actually reply. I can recommend a good IRC system written in Perl even.. ;)
[18:33:24] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[18:37:11] <Guest6> I think I'll go with javascript instead for a web game. I can make it kinda perlish with a few tricks. Thanks anyways.
[18:41:21] *** Quits: Guest6 (~Guest6@c-24-30-27-91.hsd1.ga.comcast.net) (Quit: Client closed)
[18:43:16] *** Quits: dilfridge (~quassel@gentoo/developer/dilfridge) (Remote host closed the connection)
[18:44:25] *** Joins: dilfridge (~quassel@gentoo/developer/dilfridge)
[18:46:57] *** Quits: randir (~randir@93.159.239.42) (Remote host closed the connection)
[18:47:01] * GumbyPAN CPAN Upload: Crypt-Perl-0.35_02 by FELIPE https://metacpan.org/release/FELIPE/Crypt-Perl-0.35_02
[18:52:01] * GumbyPAN CPAN Upload: App-DBBrowser-2.288 by KUERBIS https://metacpan.org/release/KUERBIS/App-DBBrowser-2.288
[18:54:53] *** Quits: proller (~p@2a02:6b8:0:408:eef4:bbff:fe62:69c8) (Ping timeout: 265 seconds)
[18:59:30] *** Joins: fstd_ (~fstd@xdsl-78-35-74-116.nc.de)
[18:59:45] *** Quits: fstd (~fstd@xdsl-78-35-74-116.nc.de) (Read error: Connection reset by peer)
[19:08:45] *** Joins: randir (~randir@95-25-138-85.broadband.corbina.ru)
[19:11:19] *** Joins: proller (~p@2a02:6b8:b081:8018::1:4)
[19:17:50] <Altreus> Recently I found myself in a situation where I had to populate a ref instead of using a return value and it made me grateful that there's always the option of doing things wrong, just in case that happens to be right
[19:26:47] *** Quits: proller (~p@2a02:6b8:b081:8018::1:4) (Ping timeout: 265 seconds)
[19:26:50] *** Quits: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net) (Quit: WeeChat 3.2)
[19:27:50] <vanfanel64> Altreus, can you elaborate on what was wrong, what the scenario was?
[19:31:51] <Altreus> vanfanel64: A third-party API is so slow that our own code threw a timeout while paging through it
[19:31:52] <vanfanel64> I do not see anything wrong with populating a ref
[19:32:12] <vanfanel64> Altreus, doing what though
[19:32:12] <Altreus> the timeout meant that the sub never returned, which meant all the work done was lost
[19:32:30] <Altreus> So I populate a ref simply so that when the timeout gets thrown we get to keep what was done so far
[19:32:30] <vanfanel64> Oh so using a ref solved that
[19:33:07] <vanfanel64> Can you not increase the timeout?
[19:33:09] <Altreus> right. But of course you have to provide a ref in order to receive the result of the function - this isn't usually considered friendly :)
[19:33:26] <Altreus> No, because it's called from the web frontend, and it has to return something before the browser itself gives up
[19:33:43] <Altreus> of course the whole thing should be paginated at that point, but it's not :D
[19:34:14] <vanfanel64> Good old enterprise software
[19:34:22] <Altreus> The designers of the API assumed that all uses of it will be a paginated website, but our code assumes that we can get all the data trivially
[19:34:41] *** Joins: pucara (~i@181.95.204.204)
[19:35:06] <vanfanel64> Yes it makes more sense to get a page-worth amont of data, can the code not be changed to do that?
[19:35:41] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Quit: This computer has gone to sleep)
[19:36:02] *** Joins: ufobat (~martin@dynamic-095-115-005-036.95.115.pool.telefonica.de)
[19:36:16] <vanfanel64> In sql queries there are plenty of options, like date ranges, LIMIT n, other ranges (anything that cna represent a page of data)
[19:37:43] <jabberwok> "Enterprise" ... when I had my office downtown, anyone who said "Enterprise" (or "synergy" or "win-win"...) had to put a dollar in the jar 
[19:37:59] *** Joins: proller (~p@2a02:6b8:0:408:eef4:bbff:fe62:69c8)
[19:38:48] <vanfanel64> hahahahaha nice
[19:39:19] <vanfanel64> (as long as star trek was not the subject)
[19:40:13] <vanfanel64> (well, if it is DSC or ST:P, $5 in jar ;p )
[19:40:21] <Altreus> vanfanel64: the backend can but I don't control the frontent
[19:40:23] <Altreus> d
[19:40:37] <Altreus> So it would just show the first few records and nothing else
[19:40:49] <Altreus> Previously we controlled this data and there was no API involved
[19:50:19] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[19:53:40] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Client Quit)
[19:55:45] *** Quits: SergeiZhmylev (~zhmylove@178.252.127.211) (Read error: Connection reset by peer)
[19:56:26] *** Joins: SergeiZhmylev (~zhmylove@178.252.127.211)
[19:58:25] *** Joins: Falconer_ (~ronnyma@227.84-48-191.nextgentel.com)
[20:05:45] *** Quits: Falconer_ (~ronnyma@227.84-48-191.nextgentel.com) (Quit: leaving)
[20:06:06] *** Joins: Falconer_ (~ronnyma@227.84-48-191.nextgentel.com)
[20:07:30] <revhippie> Altreus: but you _gotta_ have an API!  everyone loves APIs!
[20:09:12] <ether> zkrd: of course there is. did you read the manual for the json decoder you are using? (Cpanel::JSON::XS definitely has an option to decode bools as 0/1.)
[20:09:30] *** Quits: SergeiZhmylev (~zhmylove@178.252.127.211) (Ping timeout: 256 seconds)
[20:10:12] <Altreus> well we did, but it was a module API instead of an HTTP one :D
[20:10:24] *** Joins: SergeiZhmylev (~zhmylove@178.252.127.211)
[20:11:33] *** Quits: Falconer_ (~ronnyma@227.84-48-191.nextgentel.com) (Quit: leaving)
[20:12:03] *** Joins: Falconer_ (~ronnyma@227.84-48-191.nextgentel.com)
[20:12:11] *** Quits: tobybl_ (~tobybl@dhcp-199-132.inf.ed.ac.uk) (Ping timeout: 250 seconds)
[20:20:20] *** Quits: Falconer_ (~ronnyma@227.84-48-191.nextgentel.com) (Quit: leaving)
[20:26:31] <gordonfish> zkrd, ether:
[20:26:35] <gordonfish> sweval: use Cpanel::JSON::XS; Cpanel::JSON::XS->new->unblessed_bool->decode( q|{"somebool": true, "otherbool": false}| );
[20:26:41] <perlbot> gordonfish: {otherbool => "",somebool => 1}
[20:28:18] <genio> awesome. ec2 instance boots but doesn't allow access at all. use the ec2 serial console only to realize no password has ever been set for any user
[20:28:26] <genio> can't get in
[20:31:05] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[20:42:18] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[20:42:38] <nshp> normally you don't use password auth in ec2 though, it prefers ssh keys (which you can manage from the web UI)
[20:43:15] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[20:43:39] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[20:43:44] <marcus> https://www.youtube.com/watch?v=5ifWfi-ufz4 live now :)
[20:43:44] <Paperbot> YouTube video linked by marcus: Task::Kensho – Perl Module recommendations for 2022 - published by Oslo Perl Mongers
[20:45:47] *** Quits: GeekRuthie (~geekruthi@li1062-152.members.linode.com) (Quit: ZNC - https://znc.in)
[20:46:31] *** Joins: hudo_ (~hudo@62.68.19.39)
[20:47:44] <genio> nshp: when you can't ssh in and you're trying to use the console on the browser, that does no good
[20:48:23] <nshp> indeed, heh
[20:50:56] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Quit: This computer has gone to sleep)
[20:56:36] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:56:49] <genio> If you have a password set for a user and login to the web based console, it's nice. it works and things are good. if you don't have a PW set for any users because you only use ssh keys, you're screwed
[20:57:39] *** Joins: Falconer_ (~ronnyma@227.84-48-191.nextgentel.com)
[21:02:14] * GumbyPAN CPAN Upload: WebService-YTSearch-0.0204 by GENE https://metacpan.org/release/GENE/WebService-YTSearch-0.0204
[21:02:35] *** Joins: tobybl (~tobybl@213.31.134.235)
[21:04:16] <rindolf> gordonfish: thanks!
[21:12:09] <zkrd> I have a hash that contains keys as numbers. I am trying to create a new hash which will only contain keys from the original hash that are \d{4,} so I did %new = grep { $_ => $hash{$_} if /^\d{4,}$/ } keys %hash
[21:13:03] <zkrd> doesn't actually work how I was expecting it. New values and keys are keys from %hash
[21:13:16] <zkrd> replace => with =
[21:13:19] <rindolf> zkrd: use map { $_ => $hash{$_} } grep 
[21:13:57] <rindolf> or a foreach
[21:14:16] *** Joins: deadmarshal (~deadmarsh@95.38.119.2)
[21:14:37] <zkrd> ok
[21:15:22] <ilmari> or a key/value slice, if your perl is new enough: my %new = %hash{grep /^\d{4,}$/, keys %hash};
[21:16:26] <Altreus> ^\d{4,}$ is the same as >= 1000
[21:16:28] <Grinnz> or https://metacpan.org/pod/Data::Dict#grep
[21:16:29] <Paperbot> Link title(s): [ Data::Dict - Hash-based dictionary object - metacpan.org ]
[21:16:51] <ilmari> Altreus: yeah, if they are all numbers
[21:16:54] <Altreus> I suppose there's probably a tiny bit of overhead converting strings to ints
[21:17:13] <Altreus> true, if there's non-numeric ones it'll break
[21:17:13] <Grinnz> also different if the key strings have leading 0s
[21:17:14] <ilmari> "new enough" = >= 5.20
[21:21:27] <zkrd> is it possible to create an anonymous hash from this? map { $hash{$_} = $js{$_} if /^\d{4,}$/} keys %js;
[21:21:34] <zkrd> instead of using $hash 
[21:23:42] <Grinnz> that's a foreach not a map
[21:23:45] *** Quits: D-ion (~D-ion___@0850724116.static.corbina.ru) (Ping timeout: 265 seconds)
[21:23:47] <Grinnz> and no
[21:24:51] <alh> my %new = map { $_ => $js{$_} } grep { /^\d{4,}$/ } keys %js; # ?
[21:24:54] <Grinnz> $hash{$_} = $js{$_} for grep { /^\d{4,}$/ } keys %js;
[21:26:46] <Grinnz> map transforms a list to another list. if you use it in void context for side effects, you wanted a foreach
[21:31:57] *** Joins: D-ion (~D-ion___@0850724116.static.corbina.ru)
[21:34:52] *** Quits: proller (~p@2a02:6b8:0:408:eef4:bbff:fe62:69c8) (Ping timeout: 265 seconds)
[21:36:18] * GumbyPAN CPAN Upload: WebService-AcousticBrainz-0.0500 by GENE https://metacpan.org/release/GENE/WebService-AcousticBrainz-0.0500
[21:37:20] *** Quits: ufobat (~martin@dynamic-095-115-005-036.95.115.pool.telefonica.de) (Ping timeout: 256 seconds)
[21:48:17] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[21:51:19] * GumbyPAN CPAN Upload: WebService-GetSongBPM-0.0400 by GENE https://metacpan.org/release/GENE/WebService-GetSongBPM-0.0400
[21:57:42] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Quit: This computer has gone to sleep)
[21:57:50] *** Joins: csrf1 (~csrf@ip72-199-118-215.sd.sd.cox.net)
[21:58:18] *** Quits: csrf (~csrf@user/csrf) (Ping timeout: 256 seconds)
[21:58:39] <Altreus> zkrd: If you're on 5.20 or later you can make a hashref like this: +{ %js{grep /^\d{4,}/, keys %js} }
[21:59:12] <Altreus> If not you'll need to do something like +{ map { $_ => $js{$_} } grep { /^\d{4,}$/ } keys %js }
[21:59:45] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[21:59:52] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[22:06:21] * GumbyPAN CPAN Upload: WebService-Hooktheory-0.0500 by GENE https://metacpan.org/release/GENE/WebService-Hooktheory-0.0500
[22:07:25] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Quit: This computer has gone to sleep)
[22:12:05] *** Quits: deadmarshal (~deadmarsh@95.38.119.2) (Ping timeout: 265 seconds)
[22:18:57] <v`> mst and other UK people
[22:18:59] <v`> https://twitter.com/i/events/1460926880035577857
[22:19:16] <v`> Millions of Amazon customers will be unable to make payments next year after the online retailer banned Visa credit cards in the UK.
[22:20:06] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[22:20:10] <mst> I remember having a credit card!
[22:20:50] <mst> I think I got rid of it in 2002?
[22:23:21] *** Joins: Guest17 (~Guest17@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[22:23:38] <genio> I couldn't get by without a visa card
[22:23:51] <genio> my bank card is basically a visa card, my credit card is too
[22:24:24] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[22:25:20] <keir> most cards are moving to mastercard anyway
[22:25:24] <ilmari> they're only stopping taking visa credit cards, not debit
[22:25:25] <zgu> hmm, the amazon-branded credit card i have is a visa
[22:25:39] <alh> awkward
[22:25:40] <zgu> (in the US)
[22:25:42] <alh> ah.
[22:25:42] <ilmari> (and only in the UK)
[22:26:18] <ilmari> because brexit means EU card fee limits no longer apply, so Visa hiked their fees in the UK (from 0.3% to 1.5%, ISTR someone claim)
[22:26:35] <zgu> haha, brexit strikes again
[22:27:02] <ilmari> yay, brexit dividends! sunlit uplands!
[22:27:13] <mst> http://trout.me.uk/noxface.jpg
[22:27:21] <zgu> maybe it will make the truck driver shortage less important since people won't be able to order as much?
[22:28:34] <genio> ouch
[22:30:17] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Quit: This computer has gone to sleep)
[22:33:27] *** Quits: miojo (~fu@186.231.92.60) (Ping timeout: 250 seconds)
[22:35:15] *** Joins: miojo (~fu@187.32.234.131)
[22:39:54] *** Quits: tobybl (~tobybl@213.31.134.235) (Remote host closed the connection)
[22:41:24] * GumbyPAN CPAN Upload: WebService-YTSearch-0.0300 by GENE https://metacpan.org/release/GENE/WebService-YTSearch-0.0300
[22:41:24] * GumbyPAN CPAN Upload: Acme-CPANAuthors-Polish-0.04 by BRTASTIC https://metacpan.org/release/BRTASTIC/Acme-CPANAuthors-Polish-0.04
[22:44:14] *** Joins: tobybl (~tobybl@213.31.134.235)
[22:51:25] * GumbyPAN CPAN Upload: WebService-AcousticBrainz-0.0600 by GENE https://metacpan.org/release/GENE/WebService-AcousticBrainz-0.0600
[22:54:41] *** Quits: tobybl (~tobybl@213.31.134.235) (Remote host closed the connection)
[22:54:52] *** Quits: Lemniscate (~sauvin@about/linux/staff/sauvin) (Ping timeout: 268 seconds)
[22:56:18] <Altreus> I'm already refusing to use Amazon - not sure why they're making it easier
[22:56:26] * GumbyPAN CPAN Upload: WebService-Hooktheory-0.0600 by GENE https://metacpan.org/release/GENE/WebService-Hooktheory-0.0600
[22:58:38] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[23:02:21] *** Quits: zkrd (~xdg@2a02:587:de00:6d00:8d70:bb1d:ae11:bfda) (Ping timeout: 265 seconds)
[23:03:04] *** Joins: proller (~p@2a02:6b8:b081:7209::1:1e)
[23:04:55] <ether> I use credit cards for everything 1. delayed payments means increased cash flow, and 2. those sweet sweet cash back bonuses
[23:05:33] *** Joins: gast0n (~g4570n@user/gast0n)
[23:09:17] <ology> credit score benefits from having and using credit too.
[23:38:52] *** Joins: gareppa (~gareppa@user/gareppa)
[23:51:00] *** Quits: gareppa (~gareppa@user/gareppa) (Quit: Leaving)
