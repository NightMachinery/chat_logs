[00:00:01] *** _filename is now known as filename
[00:05:11] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[00:05:27] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[00:08:40] *** Quits: bambanxx (~bambanx@2800:150:106:137e:185c:4752:d872:6620) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:08:51] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[00:10:36] *** Joins: i0e (~is0ke3@user/is0ke3)
[00:11:46] *** Joins: bambanxx (~bambanx@2800:150:106:137e:185c:4752:d872:6620)
[00:11:54] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[00:13:07] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[00:15:09] *** Joins: bn_mobile (uid278100@id-278100.tinside.irccloud.com)
[00:15:18] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[00:15:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[00:15:51] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 260 seconds)
[00:16:36] *** Joins: wyclif (~wyclif@user/wyclif)
[00:18:19] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[00:20:08] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 260 seconds)
[00:21:45] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:21:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[00:22:24] *** Joins: wyclif (~wyclif@user/wyclif)
[00:22:59] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[00:23:16] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[00:23:26] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[00:24:04] <useretail> question remains open: how to save the data from blob:?
[00:25:03] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[00:27:03] *** Quits: average (~average@user/average) (Ping timeout: 260 seconds)
[00:27:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[00:28:23] *** Joins: wyclif (~wyclif@user/wyclif)
[00:31:05] *** Quits: bambanxx (~bambanx@2800:150:106:137e:185c:4752:d872:6620) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:31:35] *** Quits: ubri (~ubri@2001:861:5384:a0c0:d31c:d5e5:5c4b:bfb7) (Quit: ubri)
[00:32:07] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-e4f8-bd3f-9136-d580.res6.spectrum.com)
[00:32:18] <blueagain> useretail: save where
[00:32:46] <useretail> to my hdd (a.k.a. download)
[00:33:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[00:33:53] <useretail> from here: <video class="custom" src="blob:https://www.example.com/9e3531c3-4a37-4d0e-8674-2fd4e9ee7068">
[00:33:54] *** Joins: wyclif (~wyclif@user/wyclif)
[00:34:43] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 260 seconds)
[00:36:23] *** Joins: pavonia (~user@user/siracusa)
[00:36:35] *** Quits: olle (~olle@i5E866D97.versanet.de) (Ping timeout: 246 seconds)
[00:40:10] *** Joins: filename (~kilitary@static.246.201.46.78.clients.your-server.de)
[00:41:43] *** Quits: dan01 (~dan01@2a02:2f09:360d:2e00:d5b8:f1ed:67a5:b9d3) (Ping timeout: 260 seconds)
[00:44:39] *** Joins: ssh073 (~serg073@79.164.47.232)
[00:44:53] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[00:46:34] *** Quits: ssh073 (~serg073@79.164.47.232) (Client Quit)
[00:46:57] *** Joins: dan01 (~dan01@2a02:2f09:360d:2e00:d5b8:f1ed:67a5:b9d3)
[00:57:41] <blueagain> useretail: I'm not sure I understand what you're trying to do, programmatically download a file with JS/
[00:57:44] <blueagain> ?
[00:59:33] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[01:02:51] <useretail> programmatically download a video from a tag above
[01:08:00] *** Quits: mexijoe (~mexijoe@13.sub-174-204-205.myvzw.com) (Read error: Connection reset by peer)
[01:08:28] *** Joins: mexijoe (~mexijoe@159.sub-174-204-199.myvzw.com)
[01:08:37] <blueagain> useretail: hm, I'm not sure that's possible without user interaction
[01:08:58] <Decker> https://stackoverflow.com/a/57252191/4619267  so ya...  or https://stackoverflow.com/questions/25547475/save-to-local-file-from-blob .. ya looks like youc reate an 'a' set the src and use 'saveAs' which may exist... there's a FileSaver.js that implements it
[01:09:03] <Decker> oh? it needs a action?
[01:10:27] <Decker> there's a command line flag for that?  https://www.alphr.com/download-video-blob-url/  should also be able to save from network request dialog in inspetor?
[01:10:48] <Decker> (the command line flag I was thinking was for audio/video autoplay)
[01:12:48] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: WeeChat 3.3)
[01:12:52] *** Joins: bambanxx (~bambanx@2800:150:106:137e:185c:4752:d872:6620)
[01:12:56] *** Quits: MRDPZK (~MRDPZK@d205-250-152-220.bchsia.telus.net) (Quit: Ping timeout (120 seconds))
[01:14:12] *** Joins: wildo (~lain6141@202.180.111.143)
[01:16:56] *** Joins: pmercado (~pmercado@190.22.83.12)
[01:19:10] *** Joins: peteyboy1 (~peteyboy1@199.157.133.37.dynamic.jazztel.es)
[01:20:13] *** Quits: b0nn (~shane@user/b0nn) (Ping timeout: 260 seconds)
[01:20:19] *** Joins: b0nn (~shane@user/b0nn)
[01:23:03] *** Joins: chandash (~chandash@c-76-116-112-52.hsd1.nj.comcast.net)
[01:23:13] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:11d8:d536:9630:5602) (Quit: Textual IRC Client: www.textualapp.com)
[01:29:11] <useretail> Decker, Uncaught TypeError: Failed to execute 'createObjectURL' on 'URL': Overload resolution failed.
[01:29:51] <Decker> useretail you already have the blob
[01:29:55] <Decker> you don't need to make it
[01:31:53] <useretail> ok, looks like i managed to run the script, but it fails: Failed - No file
[01:32:28] *** Quits: csm3105 (~csm3105@47.61.127.217) (Ping timeout: 260 seconds)
[01:32:36] <Decker> did you not specify a name to save as?
[01:32:47] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[01:33:08] *** Quits: codebam (~codebam@user/codebam) (Quit: WeeChat 3.4)
[01:33:20] <useretail> Decker, https://pastebin.com/raw/Y26C7FBW
[01:33:49] <Decker> okay; but that's not a blob: like you said you had...
[01:34:42] <useretail> when i try with blob:https://www.example.com/c9206ac8-0114-41b6-9e5e-3efae3405b23, ii also fails: Failed - Network error
[01:34:50] <useretail> *it also
[01:35:18] <Decker> sure - that's not a proper blob either... you should use a real blob url from some page.... I dount you're actually wrking against 'www.example.com'
[01:35:35] <Decker> oh - and blob:// isn't https:// you can't just wrap it like that
[01:35:47] *** Joins: ssh073 (~serg073@79.164.47.232)
[01:36:00] <Decker> a 'blob' is a memory only reasource that's computed... it's not a real link to a real thing
[01:36:09] <useretail> so
[01:36:12] <useretail> what's the solution?
[01:36:14] <Decker> you have to have gone to that page and let whatever script did the download to get the blob:
[01:37:11] <Decker> if it's just a one-off the third link 'download video url' uses the network inspector panel to just save the resource
[01:38:31] <Decker> and the unique identifyer string (hex numbers with dashes) won't always be the same.... it'll change with time ... so you'll have to find whatever control is referencing that by some name, and get the link from it every time
[01:38:44] <Decker> not something you can just paste a link every time
[01:40:07] <useretail> but if the blob is there, in memory, why can't i just access it
[01:40:19] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[01:40:35] *** Joins: cotko (~cotko@BSN-182-21-28.dynamic.siol.net)
[01:41:03] *** Joins: wyclif (~wyclif@user/wyclif)
[01:41:10] <Decker> it's in that one page's sandbox... and within that scope you should be able to also
[01:42:05] <useretail> but there's no solution to get an existing blob, right?
[01:42:59] <useretail> i mean using it's url
[01:44:56] *** Quits: ssh073 (~serg073@79.164.47.232) (Remote host closed the connection)
[01:45:39] <useretail> if there's no way, what's the point in having such url? and how browser reads it?
[01:46:33] <Decker> the script its running creates it and has a reference to it somewhere
[01:47:02] <Decker> and surely it's given to a DOM control somewhere too - which has a type, classname, maybe an ID that you can use document.querySelector() to get
[01:49:12] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[01:50:54] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:51:24] *** Quits: dan01 (~dan01@2a02:2f09:360d:2e00:d5b8:f1ed:67a5:b9d3) (Ping timeout: 240 seconds)
[01:51:31] *** Quits: pmercado (~pmercado@190.22.83.12) (Ping timeout: 260 seconds)
[01:51:35] *** Joins: csm3105 (~csm3105@47.61.127.217)
[01:52:14] <useretail> Decker, thanks for the help
[01:52:23] <Decker> np sorry there's not a great answer
[01:52:53] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Ping timeout: 260 seconds)
[01:54:23] <useretail> you know, it's funny that all those "professionals" here are discussing and developing new standards (ES7, ES8, ES9), but have no idea how to save an existing blob
[01:55:52] <systemfault> useretail: Is it usually working when you do that? Nobody here is forced to help you.
[01:56:04] <systemfault> Also... No Blob's in JS, it's a browser shit.
[01:56:20] <blueagain> useretail: it's not, specialising usually means that you know something really well, it doesn't mean you know everything
[01:56:44] <blueagain> and I don't think anyone here claimed to be a professional, at least I don't care about that label
[01:57:01] <useretail> systemfault, you can create a blob using js, so yeah, it's js
[01:57:02] <systemfault> useretail: Do you have a simple code we could take a look at?
[01:57:59] *** Joins: voltage (voltage@user/voltage)
[01:58:11] <useretail> there's no code, everything is in the dom, like this: <video class="custom" src="blob:https://www.example.com/9e3531c3-4a37-4d0e-8674-2fd4e9ee7068">
[01:58:28] <ProfSimm> Exceptions and boolean short circuiting are the same mechanism with two names and operators.
[02:00:13] <useretail> systemfault, how to get a blob from dom using js?
[02:00:41] <ProfSimm> useretail: from file inputs maybe you mean?
[02:01:18] <useretail> maybe, i'm not sure
[02:01:31] <ProfSimm> useretail: well you surely know where you blob comes from?
[02:01:35] <ProfSimm> Or you just want a random blob :P
[02:01:41] <systemfault> useretail: Good question, not something I do on a daily basis. Can you check on the node if a srcObject property exists?
[02:01:52] *** Quits: voltage_ (voltage@user/voltage) (Ping timeout: 272 seconds)
[02:02:03] *** dob1_ is now known as dob1
[02:05:25] <useretail> systemfault, it does exist, but it's null
[02:06:07] <systemfault> useretail: Does simply fetching the URL using XHR/fetch work?
[02:06:33] <systemfault> blobs like that are often created using createObjectURL
[02:08:13] <systemfault> const myBlob = await fetch(document.querySelector('.custom').src).then(res => res.blob())
[02:09:26] *** Quits: cotko (~cotko@BSN-182-21-28.dynamic.siol.net) (Quit: Konversation terminated!)
[02:09:44] *** Joins: cotko (~cotko@BSN-182-21-28.dynamic.siol.net)
[02:10:37] <useretail> GET blob:https://www.example.com/6084076e-6561-4dba-8fa5-55140e970ec0 net::ERR_FILE_NOT_FOUND
[02:10:59] <useretail> no, it doesn't work
[02:11:58] <systemfault> Is there actually the word blob when you get the SRC?
[02:12:08] <systemfault> If so, try stripping it
[02:12:40] <systemfault> const myBlob = await fetch(document.querySelector('.custom').src.slice(5)).then(res => res.blob())
[02:13:59] <useretail> same: GET https://www.example.com/6084076e-6561-4dba-8fa5-55140e970ec0 404
[02:16:01] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[02:16:39] *** Quits: filename (~kilitary@static.246.201.46.78.clients.your-server.de) (Ping timeout: 256 seconds)
[02:16:58] *** Joins: jazzy (~jaziz@user/jaziz)
[02:17:33] <systemfault> blob videos with createObjectURL can be revoked at any time... so it could exist for a few seconds and then it's gone.
[02:18:41] <useretail> not in my case. page doesn't fetch anything from the web
[02:18:58] <useretail> i can replay the video any time
[02:19:33] <systemfault> Then make a test case we can play with, there's only so much we can guess...
[02:20:32] *** Quits: \mSg (mSg@user/msg/x-0285936) (Ping timeout: 246 seconds)
[02:24:26] <useretail> systemfault, here you go: https://www.reddit.com/r/ANormalDayInRussia/comments/tmx6vv/the_first_uncle_vanya_restaurant_is_to_open_up_in/
[02:29:21] *** Joins: bprompt (~default@207.98.72.27)
[02:29:52] *** Quits: bprompt (~default@207.98.72.27) (Client Quit)
[02:30:02] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:26] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:31:34] <systemfault> Good question, I seriously have no idea of how to download a HLS/DASH file off their playlist.
[02:31:49] <systemfault> The video is sent as multiple small files
[02:32:32] *** Joins: asa22 (~asa22@77.211.7.209)
[02:32:50] <asa22> if I dont need a variable to change should I always make it const
[02:32:55] <asa22> does it make it more efficient
[02:33:41] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 252 seconds)
[02:33:42] <useretail> systemfault, no, the question is how to save the blob, not how to download hls
[02:33:44] *** Joins: kristijonas_ (~kristijon@cl-78-158-23-234.fastlink.lt)
[02:34:50] *** Quits: nomic2 (~nomic@2a00:23c7:ec90:a501:1ca6:8527:5890:736) (Quit: Leaving)
[02:34:57] <useretail> for the first play, page downloads it, but once it's done the video is stored as a blob
[02:35:56] *** Quits: kristijonas (~kristijon@cl-78-158-23-234.fastlink.lt) (Ping timeout: 246 seconds)
[02:36:29] *** Quits: asa22 (~asa22@77.211.7.209) (Quit: Client closed)
[02:38:02] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Ping timeout: 250 seconds)
[02:39:00] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[02:39:18] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:41:56] *** Quits: bambanxx (~bambanx@2800:150:106:137e:185c:4752:d872:6620) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:45:34] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[02:46:01] *** Quits: csm3105 (~csm3105@47.61.127.217) (Quit: Leaving)
[02:46:39] *** Quits: average_ (uid473595@id-473595.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[02:48:18] *** Quits: kmh (~kmh@2a00:6020:5004:6800:2c38:c900:70ea:cd14) (Read error: Connection reset by peer)
[02:48:27] *** Quits: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com) (Ping timeout: 260 seconds)
[02:48:30] *** Joins: kmh (~kmh@2a00:6020:5004:6800:2c38:c900:70ea:cd14)
[02:48:34] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:e14b:b35c:9d30:4a6c) (Read error: Connection reset by peer)
[02:49:55] *** Joins: Tobbi (~Tobbi@ip1f115d4d.dynamic.kabel-deutschland.de)
[02:53:08] *** Joins: ssh073 (~serg073@79.164.47.232)
[02:53:36] *** Quits: ssh073 (~serg073@79.164.47.232) (Client Quit)
[02:54:34] *** Joins: ssh073 (~serg073@gateway/tor-sasl/serg073)
[02:55:03] *** Joins: duuude (~user@user/duuude)
[02:57:32] *** Quits: Tangent-Man (~Tang3nt-M@mutantalien.plus.com) (Remote host closed the connection)
[03:00:28] *** duuude is now known as \o
[03:01:54] *** Quits: chandash (~chandash@c-76-116-112-52.hsd1.nj.comcast.net) (Quit: WeeChat 3.4)
[03:03:49] *** Joins: csm3105 (~csm3105@47.61.127.217)
[03:08:55] *** Quits: csm3105 (~csm3105@47.61.127.217) (Quit: Leaving)
[03:12:24] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[03:12:32] *** voltage is now known as voltage_
[03:12:48] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[03:15:13] *** Quits: bobdobbs (~user@2406:5a00:4456:db00:f4e1:5ce3:d049:2541) (Remote host closed the connection)
[03:15:43] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 260 seconds)
[03:16:38] *** Joins: gutts (~gutts@li131-142.members.linode.com)
[03:17:24] <gutts> I'm sending source code through ajax in builting something like a REPL for Python and/or other languages; is there a handy function that'll enable me to shorten/serialize source code during send so I don't reach POST size limits? (probably won't, but..)
[03:20:55] <dudz> REPL is a rename of PERL is it
[03:22:21] <Maxdamantus> gutts: you could send it as a file upload using `File`. ime web servers sometimes have limits for non-file entries in a multipart request.
[03:22:47] <corwin> REPL is usually a Read Evaluate Print Loop
[03:23:50] <corwin> The only (obvious to me) link to perl would be that perl with no args enters a REPL
[03:24:54] <corwin> But not really because I think "interactive" perl doesn't have P part. If you want to print you need print/say/etc included in your "expression".
[03:28:09] <corwin> also, FWIW, HTTP doesn't define a limit to the size of the POST limit so if that's your trouble you are likely better off taking control of the HTTP layer by implementing your own or expressly configuring it for your purpose.  Casual reference: https://stackoverflow.com/questions/2880722/can-http-post-be-limitless
[03:30:20] <Maxdamantus> The limit probably comes from servers that only offer non-file multipart entries as strings.
[03:31:06] <Maxdamantus> Whereas a file upload might be able to be handled by a streaming API, so the consumer handles the chunks themselves explicitly instead of the server buffering everything into a big string.
[03:31:11] <corwin> Any shared hosting provider is likely to implement a limit of some sort also.
[03:31:29] *** Quits: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Read error: Connection reset by peer)
[03:31:43] *** Joins: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[03:32:49] <corwin> All of which would be solved by e.g. npx http-server
[03:33:47] *** Quits: nulixes (~Thunderbi@gateway/vpn/pia/nulixes) (Ping timeout: 260 seconds)
[03:34:08] *** Joins: pizdets (~pizdets@183.182.115.164)
[03:34:27] *** Quits: pizdets_ (~pizdets@183.182.111.52) (Ping timeout: 265 seconds)
[03:35:15] *** Joins: onosendi (~onosendi@user/onosendi)
[03:35:17] <corwin> For the multi-lingual AJAX fed REPL use case I'd probably start from something like https://github.com/typicode/json-server
[03:39:57] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 256 seconds)
[03:40:00] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:922:9594:2c6e:2b07) (Remote host closed the connection)
[03:47:08] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[03:48:19] *** Joins: bambanxx (~bambanx@2800:150:106:137e:185c:4752:d872:6620)
[03:49:46] *** Quits: bambanxx (~bambanx@2800:150:106:137e:185c:4752:d872:6620) (Client Quit)
[03:49:55] *** Quits: arthur_melo (~IRC@user/arthur-melo/x-6822691) (Ping timeout: 240 seconds)
[03:51:42] *** Joins: pmercado (~pmercado@190.22.83.12)
[03:51:52] *** Joins: arthur_melo (~IRC@user/arthur-melo/x-6822691)
[03:52:20] *** Quits: arthur_melo (~IRC@user/arthur-melo/x-6822691) (Client Quit)
[03:54:59] *** Joins: bobdobbs (~user@2406:5a00:4456:db00:1e6b:cb5c:5f39:6b39)
[03:56:42] *** \o is now known as duuude
[03:59:51] *** Quits: Tobbi (~Tobbi@ip1f115d4d.dynamic.kabel-deutschland.de) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:00:08] *** Quits: D3mned (~D1mned@212.101.253.81) (Quit: Leaving)
[04:00:59] *** Quits: cotko (~cotko@BSN-182-21-28.dynamic.siol.net) (Ping timeout: 246 seconds)
[04:07:29] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.4.1)
[04:16:24] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Remote host closed the connection)
[04:21:42] *** Joins: chenqisu1 (~chenqisu1@183.217.200.168)
[04:31:56] *** Quits: blinux (~blinux@pool-108-48-11-122.washdc.fios.verizon.net) (Quit: WeeChat 3.5)
[04:32:10] *** duuude is now known as netop
[04:33:57] *** Joins: bryan- (~bryan@2601:240:e301:5f40::e366)
[04:34:25] *** Quits: bryan- (~bryan@2601:240:e301:5f40::e366) (Remote host closed the connection)
[04:35:57] *** Joins: bryan- (~bryan@2601:240:e301:5f40::e366)
[04:38:14] *** netop is now known as duuude
[04:40:49] *** Joins: vysn (~vysn@user/vysn)
[04:45:11] *** Joins: chandash (~chandash@c-76-116-112-52.hsd1.nj.comcast.net)
[04:48:34] *** Joins: skillbot1 (~skillbot@li1200-69.members.linode.com)
[04:48:34] *** Quits: skillbot1 (~skillbot@li1200-69.members.linode.com) (Changing host)
[04:48:34] *** Joins: skillbot1 (~skillbot@user/skillbot)
[04:48:34] *** ChanServ sets mode: +v skillbot1
[04:48:49] *** Quits: skillbot (~skillbot@user/skillbot) (Remote host closed the connection)
[04:52:39] *** Quits: bryan- (~bryan@2601:240:e301:5f40::e366) (Remote host closed the connection)
[04:53:04] *** Joins: bryan- (~bryan@2601:240:e301:5f40::e366)
[04:54:11] *** Quits: peteyboy1 (~peteyboy1@199.157.133.37.dynamic.jazztel.es) (Ping timeout: 246 seconds)
[04:55:10] *** Quits: bryan- (~bryan@2601:240:e301:5f40::e366) (Remote host closed the connection)
[04:55:35] *** Joins: bryan- (~bryan@2601:240:e301:5f40::e366)
[05:07:23] *** Joins: bambanxx (~bambanx@2800:150:106:137e:185c:4752:d872:6620)
[05:08:27] *** Joins: thiras (~thiras@user/thiras)
[05:09:23] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 260 seconds)
[05:10:03] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 260 seconds)
[05:12:14] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[05:12:23] *** Quits: jargon (~jargon@184.101.173.186) (Ping timeout: 260 seconds)
[05:12:46] *** Joins: niop (niop@gateway/vpn/airvpn/niop)
[05:14:40] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:e159:4052:d0bf:be68)
[05:15:28] *** Joins: bryan_ (~bryan@2601:240:e301:5f40::e366)
[05:16:28] *** Joins: voltage (voltage@user/voltage)
[05:16:54] *** Quits: voltage_ (voltage@user/voltage) (Killed (NickServ (GHOST command used by voltage)))
[05:17:01] *** Quits: voltage (voltage@user/voltage) (Remote host closed the connection)
[05:18:41] *** Quits: bryan- (~bryan@2601:240:e301:5f40::e366) (Ping timeout: 245 seconds)
[05:20:58] *** Joins: Naan (~naan@user/naan)
[05:22:17] *** Quits: N4buc0 (~N4buc0@189.115.86.130) (Quit: Leaving)
[05:29:48] *** Quits: bryan_ (~bryan@2601:240:e301:5f40::e366) (Ping timeout: 240 seconds)
[05:34:10] *** Joins: bryan- (~bryan@2601:240:e301:5f40::e366)
[05:38:44] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[05:44:24] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[05:44:34] *** Joins: wyclif (~wyclif@user/wyclif)
[05:45:24] *** Quits: bryan- (~bryan@2601:240:e301:5f40::e366) (Remote host closed the connection)
[05:49:15] *** Joins: l__q (~modinfo@user/modinfo)
[05:49:43] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 260 seconds)
[05:52:07] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[05:53:14] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[05:57:32] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 246 seconds)
[05:58:22] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[06:18:24] *** Joins: bkool (~bkool@2607:fb90:9b96:e697:f905:5af2:970b:9f92)
[06:18:29] <bkool> join #linux
[06:18:36] <bkool> oops
[06:30:56] *** Quits: chandash (~chandash@c-76-116-112-52.hsd1.nj.comcast.net) (Quit: WeeChat 3.4)
[06:33:05] *** Quits: karabaja4 (~karabaja4@dh207-94-57.xnet.hr) (Remote host closed the connection)
[06:33:21] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 256 seconds)
[06:33:35] *** Joins: filename (~kilitary@188.242.105.134)
[06:34:04] *** Joins: Snyp (~Snyp@49.207.197.152)
[06:36:03] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[06:36:18] <corwin> did you mean to say /join #gnulinux? :P
[06:36:44] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 246 seconds)
[06:38:02] <systemfault> GANNOOOO LOONIKSSS
[06:40:03] *** Joins: agrosant (~agrosant@79.103.182.92.dsl.dyn.forthnet.gr)
[06:41:49] <bkool> i needs da LINUX! yes, forgot the /
[07:03:58] *** Quits: pmercado (~pmercado@190.22.83.12) (Ping timeout: 272 seconds)
[07:04:20] *** Joins: bryan- (~bryan@2601:240:e301:5f40::e366)
[07:04:32] *** Quits: pulse (~pulse@user/pulse) (Quit: { indiedevs.net })
[07:05:10] *** Quits: Donitz (~Donitz4@88-115-149-215.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[07:07:10] *** Joins: Donitz (~Donitz4@88-115-149-215.elisa-laajakaista.fi)
[07:09:47] *** Quits: Haxxa (~Haxxa@202-65-73-230.ip4.superloop.com) (Ping timeout: 260 seconds)
[07:10:02] *** Quits: bryan- (~bryan@2601:240:e301:5f40::e366) (Remote host closed the connection)
[07:12:10] *** Quits: Tempesta (Tempesta@user/tempesta) (Read error: Connection reset by peer)
[07:12:10] *** Joins: Tempesta (Tempesta@183.98.39.112)
[07:12:14] *** Quits: Tempesta (Tempesta@183.98.39.112) (Changing host)
[07:12:14] *** Joins: Tempesta (Tempesta@user/tempesta)
[07:12:16] *** Joins: Haxxa (~Haxxa@202-65-73-230.ip4.superloop.com)
[07:12:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[07:13:12] *** Joins: wyclif (~wyclif@user/wyclif)
[07:15:34] <wez> bkool: :D
[07:15:41] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:15:42] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:15:42] *** Joins: wroathe (~wroathe@user/wroathe)
[07:16:19] *** Quits: wroathe (~wroathe@user/wroathe) (Client Quit)
[07:16:40] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:16:40] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:16:40] *** Joins: wroathe (~wroathe@user/wroathe)
[07:20:33] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[07:20:57] *** Joins: thiras (~thiras@user/thiras)
[07:38:13] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[07:40:05] *** Quits: chenqisu1 (~chenqisu1@183.217.200.168) (Ping timeout: 246 seconds)
[07:49:52] *** Quits: tabakhase (tabakhase@user/tabakhase) (Quit: ZNC - http://znc.in)
[07:55:40] *** Joins: tabakhase (tabakhase@user/tabakhase)
[07:56:48] *** Quits: pluri (~pluri@user/pluri) (Remote host closed the connection)
[07:59:05] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[08:01:52] *** Joins: nomic (~nomic@2a00:23c7:ec90:a501:1ca6:8527:5890:736)
[08:03:40] *** Quits: bkool (~bkool@2607:fb90:9b96:e697:f905:5af2:970b:9f92) (Quit: Leaving)
[08:07:08] *** Joins: average (~average@2a02:2f04:405:d600:f516:46b1:9c42:4fa2)
[08:07:08] *** Quits: average (~average@2a02:2f04:405:d600:f516:46b1:9c42:4fa2) (Changing host)
[08:07:08] *** Joins: average (~average@user/average)
[08:09:12] *** Quits: skillbot1 (~skillbot@user/skillbot) (Remote host closed the connection)
[08:09:28] *** Joins: skillbot (~skillbot@user/skillbot)
[08:09:28] *** ChanServ sets mode: +v skillbot
[08:10:36] *** Joins: sphertext (~sphertext@user/sphertext)
[08:16:29] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 256 seconds)
[08:18:04] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[08:18:56] *** Joins: dave0 (~dave0@069.d.003.ncl.iprimus.net.au)
[08:19:06] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[08:23:29] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 246 seconds)
[08:32:28] *** Quits: wildo (~lain6141@202.180.111.143) (Ping timeout: 260 seconds)
[08:34:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[08:34:52] *** Joins: wyclif (~wyclif@user/wyclif)
[08:36:33] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 260 seconds)
[08:55:56] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[09:00:14] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 246 seconds)
[09:11:48] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[09:13:30] *** Quits: bambanxx (~bambanx@2800:150:106:137e:185c:4752:d872:6620) (Remote host closed the connection)
[09:17:12] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[09:34:12] *** Joins: snakey_hiss (~cloudy_nz@101.100.131.179)
[09:43:48] *** Quits: ElPresidente (~ElPreside@172-125-150-28.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 252 seconds)
[09:45:54] *** Joins: chenqisu1 (~chenqisu1@183.217.200.168)
[09:53:48] *** Joins: dan01 (~dan01@2a02:2f09:360d:2e00:d5b8:f1ed:67a5:b9d3)
[09:54:09] *** Quits: YoungFrog (~youngfrog@2a02:a03f:c21b:f900:84e3:4a12:bce1:8082) (Quit: ZNC 1.7.x-git-3-96481995 - https://znc.in)
[09:54:28] *** Joins: YoungFrog (~youngfrog@2a02:a03f:c21b:f900:eb96:d26f:93a3:4c34)
[09:55:43] *** Joins: \mSg (mSg@user/msg/x-0285936)
[10:00:51] *** Joins: bambanxx (~bambanx@2800:150:106:137e:d5ce:ae02:f494:5ca2)
[10:03:32] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[10:16:27] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[10:20:57] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 260 seconds)
[10:24:56] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 246 seconds)
[10:29:03] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[10:29:54] *** Joins: wyclif (~wyclif@user/wyclif)
[10:32:56] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[10:33:45] *** Quits: \mSg (mSg@user/msg/x-0285936) (Read error: Connection reset by peer)
[10:35:25] *** Quits: dan01 (~dan01@2a02:2f09:360d:2e00:d5b8:f1ed:67a5:b9d3) (Read error: Connection reset by peer)
[10:38:35] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 246 seconds)
[10:39:52] *** Joins: stagas_ (~stagas@2a02:587:c4b4:ded5:d560:98d:d18:148b)
[10:39:53] *** Quits: stagas_ (~stagas@2a02:587:c4b4:ded5:d560:98d:d18:148b) (Remote host closed the connection)
[10:39:59] *** Joins: nulixes (~Thunderbi@gateway/vpn/pia/nulixes)
[10:41:13] *** Quits: bambanxx (~bambanx@2800:150:106:137e:d5ce:ae02:f494:5ca2) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[10:41:23] *** Quits: stagas (~stagas@2a02:587:c4b4:ded5:3983:d2ca:47b5:c4a8) (Ping timeout: 260 seconds)
[10:41:36] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[10:41:53] *** Joins: stagas (~stagas@2a02:587:c4b4:ded5:d560:98d:d18:148b)
[10:45:56] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[10:48:41] *** Quits: nomic (~nomic@2a00:23c7:ec90:a501:1ca6:8527:5890:736) (Quit: Leaving)
[10:49:26] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:49:47] *** Joins: han-solo (~han-solo@user/han-solo)
[10:50:50] *** Quits: snakey_hiss (~cloudy_nz@101.100.131.179) (Ping timeout: 246 seconds)
[10:55:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[10:56:45] *** Joins: wyclif (~wyclif@user/wyclif)
[11:01:30] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[11:01:48] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[11:02:18] *** Joins: wyclif (~wyclif@user/wyclif)
[11:02:42] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[11:06:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[11:07:19] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 260 seconds)
[11:07:45] *** Joins: wyclif (~wyclif@user/wyclif)
[11:11:06] *** Joins: lehinsun (~ttytwiste@188.113.176.117)
[11:12:25] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[11:12:26] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[11:12:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[11:13:20] *** Joins: wyclif (~wyclif@user/wyclif)
[11:13:51] *** Quits: lehinsun (~ttytwiste@188.113.176.117) (Remote host closed the connection)
[11:14:37] *** Joins: lehinsun (~ttytwiste@188.113.176.117)
[11:17:07] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 260 seconds)
[11:18:08] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[11:18:49] *** Joins: wyclif (~wyclif@user/wyclif)
[11:24:07] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[11:24:25] *** Joins: wyclif (~wyclif@user/wyclif)
[11:24:30] *** Quits: bn_mobile (uid278100@id-278100.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[11:34:16] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[11:37:01] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[11:39:52] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:701a:9260:82ec:f4bf)
[11:41:20] *** Quits: Snyp (~Snyp@49.207.197.152) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:42:02] *** Joins: Snyp (~Snyp@49.207.197.152)
[11:42:58] *** Joins: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[11:55:28] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[11:55:39] *** Quits: wyclif (~wyclif@user/wyclif) (Quit: leaving)
[11:56:29] *** Joins: wyclif (~wyclif@user/wyclif)
[11:56:45] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[12:01:10] *** Quits: wyclif (~wyclif@user/wyclif) (Client Quit)
[12:03:56] *** Joins: wyclif (~wyclif@user/wyclif)
[12:07:03] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[12:10:21] *** Joins: gproto23 (~gproto23@user/gproto23)
[12:10:30] *** Quits: konrados (~konrados@user-5-173-20-21.play-internet.pl) (Ping timeout: 272 seconds)
[12:12:17] *** Joins: olle (~olle@i5E866D88.versanet.de)
[12:15:55] *** Quits: duuude (~user@user/duuude) (Ping timeout: 260 seconds)
[12:21:51] *** Joins: D4mned (~D1mned@212.101.253.37)
[12:27:04] *** Quits: chenqisu1 (~chenqisu1@183.217.200.168) (Quit: Leaving)
[12:31:38] *** Quits: lehinsun (~ttytwiste@188.113.176.117) (Ping timeout: 246 seconds)
[12:44:12] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[12:44:20] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[12:44:57] *** Quits: wyclif (~wyclif@user/wyclif) (Quit: leaving)
[12:45:05] *** Joins: snakey_hiss (~cloudy_nz@101.100.131.179)
[12:46:30] *** Joins: wyclif (~wyclif@user/wyclif)
[12:49:07] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Ping timeout: 260 seconds)
[12:54:50] *** Joins: konrados (~konrados@user-5-173-20-21.play-internet.pl)
[12:59:37] *** Joins: Tangent-Man (~Tang3nt-M@mutantalien.plus.com)
[13:00:03] <snakey_hiss> holy moley, my brain is dying trying to follow React hooks LOL
[13:00:50] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[13:00:55] <D4mned> the burn means it working!!
[13:01:00] <D4mned> lol
[13:01:09] <D4mned> its*
[13:01:17] *** Quits: Tangent-Man (~Tang3nt-M@mutantalien.plus.com) (Remote host closed the connection)
[13:01:44] *** Joins: Tangent-Man (~Tang3nt-M@mutantalien.plus.com)
[13:04:24] *** Joins: cotko (~cotko@BSN-182-21-28.dynamic.siol.net)
[13:08:17] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[13:12:34] *** Quits: Snyp (~Snyp@49.207.197.152) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:17:13] *** Quits: wyclif (~wyclif@user/wyclif) (Quit: leaving)
[13:17:42] *** Joins: Snyp (~Snyp@49.207.197.152)
[13:21:12] *** Joins: wyclif (~wyclif@user/wyclif)
[13:21:26] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Ping timeout: 272 seconds)
[13:22:42] *** Quits: Snyp (~Snyp@49.207.197.152) (Ping timeout: 272 seconds)
[13:25:18] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 260 seconds)
[13:27:19] <systemfault> Feel the burn!
[13:30:31] *** Quits: Tempesta (Tempesta@user/tempesta) (Read error: Connection reset by peer)
[13:31:08] *** Quits: olle (~olle@i5E866D88.versanet.de) (Ping timeout: 260 seconds)
[13:32:57] *** Quits: kyshoc (~kyshoc@user/kyshoc) (Quit: ZNC 1.8.2 - https://znc.in)
[13:33:12] *** Joins: kyshoc (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net)
[13:33:12] *** Quits: kyshoc (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net) (Changing host)
[13:33:12] *** Joins: kyshoc (~kyshoc@user/kyshoc)
[13:36:42] <ashnur> no
[13:39:00] *** Joins: CiaoSen (~Jura@p200300c95735b0002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[13:40:14] *** Quits: mexijoe (~mexijoe@159.sub-174-204-199.myvzw.com) (Ping timeout: 246 seconds)
[13:47:20] *** Joins: thiras (~thiras@user/thiras)
[13:47:57] *** Joins: Guest62 (~Guest62@78.84.18.138)
[13:49:48] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[13:52:24] *** Quits: snakey_hiss (~cloudy_nz@101.100.131.179) (Quit: WeeChat 2.8)
[14:03:20] *** Joins: wyclif (~wyclif@user/wyclif)
[14:03:59] *** Quits: wyclif (~wyclif@user/wyclif) (Client Quit)
[14:04:06] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[14:07:57] *** Quits: Guest62 (~Guest62@78.84.18.138) (Quit: Connection closed)
[14:08:51] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 260 seconds)
[14:11:50] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[14:18:25] *** Joins: Tempesta (~Tempesta@user/tempesta)
[14:22:14] <ProfSimm> WASM doesn't implement goto. What is this stupid s**t.
[14:24:12] *** Joins: blez (~blez@213-130-92-210.ip.btc-net.bg)
[14:24:50] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[14:25:23] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 246 seconds)
[14:26:13] *** Joins: nomic (~nomic@2a00:23c7:ec90:a501:1ca6:8527:5890:736)
[14:29:31] <ashnur> yeah, aholes
[14:29:58] <dave0> i love a good indirect jump
[14:34:54] *** Quits: doji (~doji@user/doji) (Ping timeout: 272 seconds)
[14:35:15] *** Joins: doji (~doji@user/doji)
[14:39:57] *** Quits: blez (~blez@213-130-92-210.ip.btc-net.bg) (Ping timeout: 260 seconds)
[14:40:06] *** Quits: kcrk (~kcrk@user/kcrk) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[14:40:32] *** Joins: kcrk (~kcrk@user/kcrk)
[14:42:34] *** Quits: CiaoSen (~Jura@p200300c95735b0002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[14:47:07] *** Quits: v3ga (~v3ga@2603-6080-5204-3b35-0000-0000-0000-18ad.res6.spectrum.com) (Ping timeout: 260 seconds)
[14:48:10] *** Joins: v3ga (~v3ga@2603-6080-5204-3b35-0000-0000-0000-18ad.res6.spectrum.com)
[14:48:27] *** Joins: qswz (~caub@89-80-20-125.abo.bbox.fr)
[14:48:27] <qswz> code challenge of the day:
[14:49:44] <qswz> given an arbitrary nested object with string leaf values e.g. {a: {b: {c:'',d:'foo'}},e:'.'}
[14:51:28] <qswz> give 2 objects where leaf values are empty (the value should be 1 then) and the other with non-empty values: obj1: {a:{b:{c:1}}} obj2: {a:{b:{d:'foo'}},e:'.'}
[14:52:13] <ProfSimm> There are like TWO THINGS to implement a VM  1) you can point the cursor somewhere 2) instructions there run in order until repointed
[14:52:21] <ProfSimm> They literally missed HALF OF WHAT A VM IS
[14:52:29] <qswz> a bit like https://github.com/joaolucasl/proposal-array-prototype-partition but for a deep object
[14:53:31] <qswz> hmm I could flatten, partition and unflatten
[14:54:05] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 246 seconds)
[14:54:13] <qswz> I think I'll dothat
[14:55:21] <qswz> why the hell did https://github.com/tc39/proposal-pipeline-operator progressed to stage2?
[14:55:33] <qswz> it should go to stage-1
[14:55:40] *** Joins: average_ (uid473595@id-473595.hampstead.irccloud.com)
[14:56:34] <qswz> holy shit, tc39 please don't
[14:56:35] <ProfSimm> qswz: which stage is further ahead
[14:56:49] <qswz> ahead of 2? obviosuly 3
[14:57:49] <ProfSimm> qswz: I don't understand if you like the operator or not
[14:58:10] <qswz> if I'm unhappy it progressed to stage2, obviosuly I'm unhapy
[14:58:56] *** Joins: Guts71 (~Guts71@41.107.109.140)
[14:59:32] <ProfSimm> qswz: it's not the worst thing I've seen, but not necessary
[15:01:18] *** Quits: remolej (~kenoba@user/kenoba) (Quit: The Lounge - https://thelounge.chat)
[15:02:12] *** Joins: remolej (~kenoba@user/kenoba)
[15:04:00] <qswz> ProfSimm: agreed
[15:04:34] <qswz> Problem is it adds new syntax, so the only reason to add it is if it really adds something substantially beneficial
[15:04:41] <qswz> which it doesn't
[15:05:23] *** Joins: wildo (~lain6141@202.180.111.143)
[15:05:37] *** Joins: gproto23 (~gproto23@user/gproto23)
[15:06:09] <qswz> b> async function f(){return {json: async()=>({x:1})}} await f() |> %.json
[15:06:10] <jellobot> (okay) [AsyncFunction: json]
[15:06:15] <qswz> b> async function f(){return {json: async()=>({x:1})}} await f() |> %.json()
[15:06:15] <jellobot> (okay) { x: 1 }
[15:07:11] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 260 seconds)
[15:07:35] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Ping timeout: 240 seconds)
[15:07:51] <ProfSimm> qswz: thing is I see JS as a the VM of the web. We can add syntax sugar in TypeScript and Babel easily
[15:08:07] <ProfSimm> qswz: syntax in JS has to be meaningful to its execution semantics, and this isn't
[15:08:17] <ProfSimm> qswz: syntax fads come and go
[15:08:30] <ProfSimm> Like this pipe operator. I like piping, but damn. Ugly.
[15:08:45] *** Joins: blezz (~blez@213-130-92-210.ip.btc-net.bg)
[15:08:47] *** Joins: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation)
[15:09:57] <qswz> in bash?
[15:10:03] <qswz> it's very useful there
[15:12:35] <qswz> https://github.com/tc39/proposal-array-unique lodash getting in core
[15:12:38] <qswz> it's good tho
[15:12:43] <qswz> like for partition
[15:14:07] <qswz> https://github.com/tc39/proposal-string-cooked wat
[15:14:19] <qswz> an April 1st proposal
[15:15:00] <qswz> nah, but I'm prefer raw food
[15:15:04] <qswz> except for rice :
[15:16:02] <qswz> what's an opposite of raw?
[15:16:04] <qswz> war?
[15:16:19] <qswz> capitalism?
[15:17:33] *** Quits: wildo (~lain6141@202.180.111.143) (Quit: leaving)
[15:27:08] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[15:27:48] *** Quits: suss (~user@user/suss) (Ping timeout: 260 seconds)
[15:31:53] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 260 seconds)
[15:33:33] <qswz> https://github.com/tc39/proposal-reversible-string-split makes sense
[15:36:32] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[15:37:08] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 246 seconds)
[15:38:22] <qswz> huh, lodash doesn't have a {a:{b:''}} → {'a.b': ''} function
[15:40:43] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[15:46:51] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[15:48:13] *** Joins: gustik (~gustik@2a01:c844:240e:4d20:38e8:ab4e:3fd6:2e3a)
[15:50:07] *** Quits: stagas (~stagas@2a02:587:c4b4:ded5:d560:98d:d18:148b) (Ping timeout: 260 seconds)
[15:57:14] *** Quits: nucleargrave (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Ping timeout: 272 seconds)
[15:57:44] *** Joins: nucleargrave (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net)
[16:12:07] *** Quits: cotko (~cotko@BSN-182-21-28.dynamic.siol.net) (Quit: Konversation terminated!)
[16:15:03] <qswz> simplify this
[16:15:27] *** Joins: audio (~audio@user/audio)
[16:15:33] <qswz> n> function flat(o,prefix=[]){return Object.fromEntries(Object.entries(o).flatMap(([k,v]) => typeof v=='string'?[[[...prefix,k].join('.'),v]]:Object.entries(flat(v,[...prefix,k]))))} flat({a:{x:'', y:'i'}})
[16:15:33] <jellobot> (okay) { 'a.x': '', 'a.y': 'i' }
[16:18:08] <qswz> if ya can
[16:20:06] <qswz> maybe with reduce
[16:22:19] *** Quits: prawnsalad (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk) (Ping timeout: 260 seconds)
[16:22:27] *** Joins: prawnsal_ (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk)
[16:25:18] *** Joins: prawnsalad (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk)
[16:25:57] <D4mned> it would look kinda the same
[16:26:10] <qswz> ah, thx for looking
[16:26:20] <D4mned> well am not the best out there
[16:26:30] <D4mned> but im trying maybe i could learn something or two lol
[16:26:55] <qswz> no prob
[16:27:00] <qswz> working on unflat now
[16:28:55] *** Quits: prawnsal_ (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk) (Ping timeout: 256 seconds)
[16:28:57] <D4mned> i didnt know flatmap exists lol
[16:29:10] <qswz> quite recent
[16:29:57] <qswz> es2019 https://javascript.plainenglish.io/some-of-useful-javascript-features-from-es2016-to-es2021-4c08a9a80a19
[16:31:56] <D4mned> i like the function as it is though
[16:32:44] <D4mned> recursive and not so hard to understand
[16:33:05] <qswz> yea and functional, because it can be done with a for loop too, but less nice
[16:33:22] <D4mned> yeah
[16:33:45] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[16:37:39] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[16:49:55] *** Joins: stoyan (~stoyan@94.156.180.236)
[16:53:34] *** Joins: seifeslimene (~seifeslim@102.156.121.226)
[16:55:15] *** Joins: i0e (~is0ke3@user/is0ke3)
[16:55:53] <doug16k> ProfSimm, of course there is no goto. you can't goto in js
[16:57:44] <doug16k> a goto target has to be a basic block. you can't just goto out of nowhere
[16:58:19] <doug16k> it expects to be able to schedule things
[16:59:07] *** Joins: Snyp (~Snyp@49.207.197.152)
[16:59:47] <doug16k> the codegen would have to brace for the impact of getting there by falling through into there, or getting there by goto
[17:00:02] <ProfSimm> doug16k: WASM isn't JS
[17:00:49] <ProfSimm> doug16k: if you didn't join earlier this was in context of discussing WASM
[17:01:03] <ProfSimm> doug16k: I don't need goto in JS although I wouldn't mind tbh
[17:02:59] <doug16k> oh I see. wasm doesn't have a jmp ?
[17:03:11] <doug16k> you can't emit a label?
[17:03:18] *** Quits: stoyan (~stoyan@94.156.180.236) (Remote host closed the connection)
[17:03:26] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[17:03:31] *** Quits: Snyp (~Snyp@49.207.197.152) (Client Quit)
[17:04:12] <doug16k> I see what you mean. most compilers have a "lowering" step that makes everything use goto rampantly
[17:04:31] *** Joins: Snyp (~Snyp@49.207.197.152)
[17:04:31] <doug16k> like while, if, elseif, break, continue
[17:04:34] *** Joins: stagas (~stagas@2a02:587:c4b4:ded5:fbc0:150e:4fd8:be99)
[17:05:46] <ProfSimm> doug16k: no
[17:05:56] <ProfSimm> doug16k: yes
[17:06:12] <ProfSimm> doug16k: and it's worse. If you use continuations, you can't revert it back to "blocks"
[17:06:26] <ProfSimm> doug16k: so basically WASM is crippled
[17:12:18] *** Joins: matsaman (~matsaman@user/matsaman)
[17:12:27] *** Parts: mmlj4 (~mmlj4@ip174-69-109-162.no.no.cox.net) (Leaving)
[17:19:07] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[17:19:38] *** Joins: masber (~masber@213.55.224.23)
[17:19:53] <doug16k> what does clang do if the C++ uses goto?
[17:20:16] <doug16k> clang targeting wasm I mean
[17:20:34] *** Quits: average_ (uid473595@id-473595.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[17:23:45] <ProfSimm> doug16k: I'm unsure what's the latest but they have 2 options: infer the scope tree back, or make a giant loop switch/case
[17:25:03] *** Joins: mekeor[m] (~mekeormat@2001:470:69fc:105::17e4)
[17:25:16] *** Quits: gustik (~gustik@2a01:c844:240e:4d20:38e8:ab4e:3fd6:2e3a) (Quit: Leaving)
[17:31:36] <doug16k> if you feed this https://gist.github.com/doug65536/7bb5bfcc5c7f396fefe970ad69710fad into this https://wasdk.github.io/WasmFiddle/ the wasm appears to have labels
[17:31:48] <doug16k> (I couldn't get the share thing to work)
[17:34:41] <doug16k> click build at the top if you don't see the wasm
[17:35:39] <doug16k> I didn't even have to fool the optimizer and say x is volatile. it is probably incredibly conservative
[17:37:57] *** Joins: voltage_ (voltage@user/voltage)
[17:38:08] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[17:38:17] <doug16k> br $label$8 ???
[17:38:27] *** Quits: Snyp (~Snyp@49.207.197.152) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:38:29] <doug16k> checkmate? you can? or what lol
[17:38:29] *** Joins: netameta (~netameta@2a00:a040:193:50fe:6087:4b92:c4f:a9d4)
[17:39:34] <doug16k> oh wait... is that just clang intermediate representation?
[17:40:42] <netameta> question about cross origin isolation: Is there a solution for popup windows yet? how do you set backgroun-images as CORS(unlike <img src="example.jpg" crossorigin>) ?
[17:42:13] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[17:43:49] *** Quits: seifeslimene (~seifeslim@102.156.121.226) (Quit: Client closed)
[17:45:01] <ProfSimm> Generators. I yield a value, then the generator is called again, with some input. Where does that input go.
[17:45:33] *** Joins: seifeslimene (~seifeslim@102.156.121.226)
[17:46:13] *** Quits: seifeslimene (~seifeslim@102.156.121.226) (Write error: Broken pipe)
[17:48:24] <doug16k> ProfSimm, what's 'br' in web assembly
[17:49:59] <doug16k> also seems to be a predicated br, br_if
[17:50:49] <doug16k> code generator is naming 'block' like $label$2
[17:50:56] <since_> branching if maybe?
[17:51:06] <ProfSimm> It says branching but it works more like continue
[17:51:20] <doug16k> ProfSimm, has to go to the top of a nesting level?
[17:51:47] <doug16k> can skip up 1 or more blocks to a target?
[17:51:58] <ProfSimm> doug16k: yes
[17:53:22] <ProfSimm> doug16k: I might need to write intermediate language that makes sense, which THEN compiles to WASM
[17:53:32] <ProfSimm> Even if inefficient
[17:53:47] <doug16k> IL makes optimizations so much easier though
[17:54:20] <ProfSimm> doug16k: there are many IL, I mean in this case an IL that stands for the "machine code" level which WASM is missing
[17:54:24] <ProfSimm> You know, with JMP
[17:54:46] <ProfSimm> My code all continuations. I never evah return
[17:54:52] <ProfSimm> This stack is useless to me
[17:55:30] <ProfSimm> Structured programming was a great move forward, but also it wasn't the right abstraction
[17:55:38] <ProfSimm> Definitely not right for hardware too
[17:56:14] <doug16k> it was always a hideous pile of goto by the time the machine ran it though
[17:57:47] <ProfSimm> doug16k: it's all the machine should care for
[17:58:24] <ProfSimm> doug16k: the machine sees code as an assembly line. You put the worker on the assembly line and they do what they see. You can also tell them to move around when they see specific items on the line. End of story.
[17:58:31] <ProfSimm> doug16k: it's simple, efficient, and universal
[17:58:41] <ProfSimm> doug16k: I don't know WTF were the WASM team thinking
[17:59:02] <doug16k> my compiler textbooks said that lowering is pretty much the first step to transforming a C like language to IL
[17:59:21] <ProfSimm> doug16k: I wouldn't mind native continuations in WASM, then we wouldn't need GOTO
[17:59:29] <ProfSimm> But there aren't any!
[17:59:32] <ProfSimm> It's instead this joke
[18:00:33] *** Joins: seifeslimene (~seifeslim@102.156.121.226)
[18:02:54] <doug16k> I guess this means you are really making a transpiler
[18:03:13] <doug16k> since the ISA is so block structured, it is still js
[18:03:51] *** Joins: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com)
[18:04:34] <doug16k> Instruction Set Architecture
[18:05:14] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[18:07:53] <doug16k> if you did transformations to make it work in wasm, you could just as well emit js that does the same
[18:10:59] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[18:13:00] *** Joins: kiwi49 (~kiwi49@user/kiwi49)
[18:13:05] *** Quits: qswz (~caub@89-80-20-125.abo.bbox.fr) (Quit: leaving)
[18:19:59] *** Joins: bn_mobile (uid278100@id-278100.tinside.irccloud.com)
[18:21:37] <doug16k> this is making me ponder making a code generator that generates code with a spaghetti of goto that is extremely difficult to transform back into block structured
[18:22:38] <doug16k> how do you maximize the difficulty exactly?
[18:29:05] *** Joins: qswz (~caub@89-80-20-125.abo.bbox.fr)
[18:30:05] <doug16k> a machine with just decrement and branch if not zero, a type of one-instruction-set-computer, has goto! when you don't care about zeroness you just conditionally goto the next instruction
[18:30:39] *** Quits: zer0bitz (~zer0bitz@2001:2003:f750:a200:d90e:8b62:fe9d:3118) (Ping timeout: 260 seconds)
[18:33:30] <netameta> question about cross origin isolation: Is there a solution for popup windows yet? how do you set backgroun-images as CORS(unlike <img src="example.jpg" crossorigin>) ?
[18:33:56] *** Joins: zer0bitz (~zer0bitz@2001:2003:f750:a200:d960:d98a:f624:8ef)
[18:34:42] <qswz> for those interested flat/unflat https://dpaste.org/DXYh8A5
[18:37:44] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 246 seconds)
[18:37:45] <doug16k> netameta, crossorigin images don't work? since when?
[18:37:57] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 260 seconds)
[18:38:20] <doug16k> that is the time honoured tradition of stealing images and then even using their bandwidth to serve it
[18:38:36] <netameta> I didnt say they dont work doug16k
[18:38:47] *** Quits: llorllale (~llorllale@198.98.119.85) (Ping timeout: 246 seconds)
[18:38:59] <netameta> I am saying how do you do the same crossorigin attribute to a div that has a background-image
[18:39:17] <netameta> How do you apply the same crossorigin...*
[18:39:55] *** Quits: ssh073 (~serg073@gateway/tor-sasl/serg073) (Ping timeout: 240 seconds)
[18:40:00] *** Joins: i0e (~is0ke3@user/is0ke3)
[18:40:10] <doug16k> I have never bothered with cors for anything other than requests from js code
[18:40:20] <doug16k> that I know of
[18:42:17] <qswz> n> partition([1,2,3,4,5,6],n=>n%2==0) function partition(a,fn){return reduce((a,v)=>(a[+fn(v)].push(v),a), [[],[]])
[18:42:18] <jellobot> (fail) SyntaxError: Unexpected token 'function'
[18:42:32] <qswz> n> partition([1,2,3,4,5,6],n=>n%2==0); function partition(a,fn){return reduce((a,v)=>(a[+fn(v)].push(v),a), [[],[]])
[18:42:33] <jellobot> (fail) SyntaxError: Unexpected end of input
[18:43:03] *** Joins: duuude (~user@user/duuude)
[18:43:31] <qswz> n> partition([1,2,3,4,5,6],n=>n%2==0); function partition(a,fn){return reduce((a,v)=>(a[+fn(v)].push(v),a), [[],[]])}
[18:43:31] <jellobot> (fail) ReferenceError: reduce is not defined
[18:44:32] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[18:44:36] <qswz> that's the ugly way anyway
[18:45:32] <qswz> (a[+fn(v)].push(v),a) vs fn(v)?[a[0],[...a[1],v]] : [[...a[0],v],a[1]]
[18:45:54] <doug16k> comma operator. don't see that everyday
[18:46:02] <qswz> it's bad
[18:47:01] <qswz> sheetjs like it
[18:47:08] <qswz> niggler*
[18:48:10] <qswz> 1. (a,v)=>(a[+fn(v)].push(v),a)
[18:48:41] <qswz> 2. ([a,b],v) => fn(v) ? [a,[...b,v]] : [[...a,v],b]
[18:49:07] <qswz> 3. ([a,b],v) => fn(v) ? [a,b.concat(v)] : [a.concat(v),b]
[18:50:11] <qswz> 2. wins
[18:51:35] *** Joins: iomari891 (~iomari891@102.91.4.186)
[18:53:08] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 246 seconds)
[18:55:59] <ProfSimm> if (77 + 33 = 100) alert("yes"); // yes
[18:56:39] <doug16k> 33 is not an lvalue
[18:56:51] <doug16k> is that not assignment?
[18:56:52] *** Joins: i0e (~is0ke3@user/is0ke3)
[18:56:53] <ProfSimm> damn it, meme ruined
[18:58:02] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 246 seconds)
[18:58:19] <doug16k> also, 33 should be 23
[19:01:07] <qswz> n> 'use strict'; if (77 + 33 = 100) console.log(1)
[19:01:08] <jellobot> (fail) SyntaxError: Invalid left-hand side in assignment
[19:01:21] <qswz> n> if (77 + 33 = 100) console.log(1)
[19:01:22] <jellobot> (fail) SyntaxError: Invalid left-hand side in assignment
[19:01:33] *** Quits: dave0 (~dave0@069.d.003.ncl.iprimus.net.au) (Read error: Connection reset by peer)
[19:01:47] *** Quits: belst_ (~belst@94.23.7.172) (Quit: bb)
[19:02:09] <qswz> n> if (lOO == 77 + 33) console.log(1)
[19:02:10] <jellobot> (fail) ReferenceError: lOO is not defined
[19:02:43] *** Joins: belst (~belst@2001:41d0:2:8ac::)
[19:03:59] <doug16k> n> if (!00 == 77 + 33) console.log(1)
[19:03:59] <jellobot> (okay) undefined
[19:04:11] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[19:04:21] <qswz> n> '💯'==77+23
[19:04:22] <jellobot> (okay) false
[19:04:27] <qswz> js is clearlybroke
[19:06:44] *** Joins: i0e (~is0ke3@user/is0ke3)
[19:06:47] *** Joins: dave0 (~dave0@069.d.003.ncl.iprimus.net.au)
[19:08:26] <qswz> n> String.fromCodePoint('12'+'8'+'1'+'75')
[19:08:26] <jellobot> (okay) '💯'
[19:08:51] <doug16k> lol
[19:08:56] <qswz> 96 == 100 according to js
[19:09:06] *** Joins: llorllale (~llorllale@198.98.119.85)
[19:12:59] <qswz> we need Object.map
[19:13:33] <qswz> Object.fromEntries(Object.entries(obj).map is cumbersome
[19:13:41] <qswz> cucumbersome
[19:13:43] <doug16k> n> String.fromCodePoint(Math.pow(5,7.307614481918369986983641).toFixed(0))
[19:13:43] <jellobot> (okay) '💯'
[19:14:08] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[19:14:08] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[19:14:08] *** Joins: wroathe (~wroathe@user/wroathe)
[19:14:23] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[19:15:17] <qswz> n> String.fromCodePoint(2**7*1_000+5**2*7)
[19:15:18] <jellobot> (okay) '💯'
[19:16:09] *** Joins: i0e (~is0ke3@user/is0ke3)
[19:17:48] <qswz> n> String.fromCodePoint(1<<7+''+5**2*7)
[19:17:49] <jellobot> (okay) '\x80'
[19:18:29] <qswz> n> String.fromCodePoint(1<<7+'000'+5**2*7)
[19:18:29] <jellobot> (okay) '耀'
[19:20:12] <qswz> n> String.fromCodePoint(''+(1<<7)+5**2*7)
[19:20:13] <jellobot> (okay) '💯'
[19:21:02] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[19:22:55] <qswz> n> Array.from({length: 5},()=>String.fromCodePoint(128000+Math.floor(Math.random()*200))).join('')
[19:22:55] <jellobot> (okay) '💫🐖🐖💳📆'
[19:23:51] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[19:23:53] <qswz> 2 confused pigs need to pay for the 17th
[19:24:07] <qswz> n> Array.from({length: 5},()=>String.fromCodePoint(128000+Math.floor(Math.random()*200))).join('')
[19:24:08] <jellobot> (okay) '💰👔🐉👬💊'
[19:25:20] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 246 seconds)
[19:25:34] *** Joins: i0e (~is0ke3@user/is0ke3)
[19:30:50] *** Quits: qswz (~caub@89-80-20-125.abo.bbox.fr) (Quit: leaving)
[19:33:50] *** Quits: llorllale (~llorllale@198.98.119.85) (Ping timeout: 272 seconds)
[19:44:56] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 246 seconds)
[19:46:58] *** Joins: i0e (~is0ke3@user/is0ke3)
[19:50:52] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Read error: Connection reset by peer)
[19:51:17] *** Joins: maret_ (~maret@nat-88-212-37-89.antik.sk)
[19:51:28] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[19:53:45] *** Joins: i0e (~is0ke3@user/is0ke3)
[19:54:51] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[19:55:50] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[20:06:27] *** Quits: dave0 (~dave0@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[20:06:56] <ljharb> wtf are you on about, lol
[20:07:15] <MootPoot> The secret to JS seems to be to just do it till you get it
[20:07:15] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[20:07:32] <MootPoot> or is that react
[20:07:33] *** Joins: powftw (uid448161@id-448161.lymington.irccloud.com)
[20:07:34] <MootPoot> idk
[20:09:07] *** Joins: i0e (~is0ke3@user/is0ke3)
[20:09:08] <matsaman> that's everything in life...
[20:09:34] <matsaman> although I think you could probably read a book on JS and theoretically understand it pretty easily
[20:09:38] <matsaman> less so for react =P
[20:09:46] <MootPoot> that's where I am
[20:09:49] <MootPoot> I dont "get" react
[20:09:52] <MootPoot> but I'm doing it
[20:09:55] <matsaman> most people don't
[20:10:05] <matsaman> but yeah it's a very profitable fad right now still
[20:10:18] <doug16k> it's almost impossible to judge how difficult something would be for other people
[20:10:37] <MootPoot> I didn't want to do react or front end but that's what all the jobs want
[20:10:40] <MootPoot> so I'll suck it up
[20:10:56] <matsaman> that's very pragmatic
[20:11:06] <matsaman> I think I'll just get poorer myself =)
[20:11:11] *** Quits: audio (~audio@user/audio) (Ping timeout: 245 seconds)
[20:11:13] <MootPoot> I have 0 income atm
[20:11:18] <MootPoot> so I do really need work
[20:11:19] <matsaman> but I'm an old, sad sack, and you're probably young and hungry
[20:11:35] <MootPoot> I'm in the "will code for food" situation
[20:11:54] <matsaman> but you're a coder already?
[20:12:01] <MootPoot> recent grad
[20:12:03] <MootPoot> no job
[20:12:08] <matsaman> ah okay. You should be fine =)
[20:12:14] <MootPoot> did some internships but that's it
[20:12:38] <matsaman> I mean not fine compared to someone on the job market at almost any point in the past, but
[20:12:41] <matsaman> still fine =)
[20:12:52] <MootPoot> h-hah
[20:12:55] <MootPoot> tell me about it
[20:12:56] *** Quits: D4mned (~D1mned@212.101.253.37) (Ping timeout: 246 seconds)
[20:12:56] <matsaman> at least there are newer remote working options now
[20:13:02] <matsaman> unless you're in Colorada, I guess =P
[20:13:05] <matsaman> Colorado*
[20:13:28] <MootPoot> ~250 applications in I got 10 responses and 4 interviews , of which only 2 got beyond the inital screening
[20:13:43] <han-solo> that's a good start
[20:13:44] <matsaman> sounds about right, even for a handful of years ago
[20:14:07] <doug16k> should be worse. more should have dragged you in for an in-person interview and not hired you
[20:14:21] <matsaman> I found the application process a lot like courtship... you really can't appear too interested or you'll get prematurely rejected
[20:14:27] <matsaman> doug16k: hahahah, so true
[20:14:53] <matsaman> you're a busy, qualified person, you only have so much time to write a cover letter. I think that's the best mindset
[20:15:10] <matsaman> you could take a job now or just kick around Europe on permanent vacation. "Whatevs"
[20:15:58] <MootPoot> I wish I could do that but
[20:16:02] <MootPoot> bills be coming
[20:16:13] <matsaman> yeah nobody can do that, you just need to have that kind of mindset while writing cover letters =P
[20:16:20] <MootPoot> fair
[20:16:33] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[20:16:39] <MootPoot> well, my only lifeline atm is a interview on mon for a entry level react job
[20:16:51] <MootPoot> I dont have react or JS on my resume but they called me anyways
[20:16:55] <matsaman> nobody wants desperate, even if that doesn't necessarily make sense for hiring, it's just how humans are
[20:16:58] <MootPoot> so I assume they have no idea what they are doing
[20:17:07] <matsaman> MootPoot: sounds right
[20:17:25] <MootPoot> so I'm trying to appeal to the visual aspect - make a quick react demo from some tutorials
[20:17:28] <MootPoot> to show them
[20:17:33] <matsaman> I will say, and I'm not in a big metro so perhaps this is why, that most hiring managers are 100% unqualified to hire someone for any given position they are in charge of hiring for
[20:17:50] <matsaman> https://en.wikipedia.org/wiki/Peter_principle
[20:17:56] <doug16k> I don't think I have ever applied at 10 places at once, let alone 250
[20:18:01] <MootPoot> I can get better later - I need some income so I can get my finances in order
[20:18:16] <matsaman> it shouldn't be this way for programming. Managers in programming _should_ be at least former programmers. But frequently it still isn't the case
[20:18:29] *** Joins: i0e (~is0ke3@user/is0ke3)
[20:18:32] <matsaman> less oversight for you, though, after you win the personality contest rather than the competency challenges
[20:19:05] <matsaman> I've done tens but not hundreds, yeah
[20:19:29] <matsaman> remote work, must be shut a meat market now
[20:19:36] <matsaman> be such* a
[20:22:55] *** Quits: kristijonas_ (~kristijon@cl-78-158-23-234.fastlink.lt) (Remote host closed the connection)
[20:23:45] <doug16k> worst is when you do the interview and they are all impressed and they love you and you feel like you totally nailed it, and they don't hire you
[20:23:52] <MootPoot> pfft
[20:24:01] <MootPoot> you reminded me of 3 previous interviews
[20:24:28] <MootPoot> I'm kind of a generalist with no specialization ( recent grad - I don't have like 10 years of X experience )
[20:24:47] <matsaman> I don't know
[20:24:52] <MootPoot> so usually they go "we like you and you know your stuff but...we are looking for somebody who is more skilled in X"
[20:25:00] <matsaman> my least favorites from memory are any interview where you're asked "are you a people person?"
[20:25:05] <ProfSimm> doug16k: you have people A B C interviewing you. B and C are impressed, A feels the need to imitate them. But A doesn't like you, and B and C are overfly influenced by A, so after the interview suddenly everyone decides in conversation you're problematic :P
[20:25:10] <matsaman> or "name one big mistake you made"
[20:25:32] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 246 seconds)
[20:25:55] <MootPoot> last place told me exactly that - I was a solid candidate but got weeded out due to a lack of front end specialization
[20:25:58] <matsaman> yeah it's definitely just a personality/popularity contest much of the time
[20:26:05] <ProfSimm> matsaman: "poop without checking I have TP"
[20:26:10] <matsaman> ideal interview: one person, competency over personality
[20:26:12] <MootPoot> rule 1 - be attractive
[20:26:13] <MootPoot> I guess
[20:26:40] <matsaman> but also more people should be willing to hire people that might turn out to be duds immediately
[20:26:41] <MootPoot> tbh if it was on pure competency I would probably not get selected - but then I'm not getting selected anyways
[20:26:55] <matsaman> because you're missing a lot of people who can do any kind of job because they're just competent
[20:27:23] <matsaman> well, for programming, the competency of interest is how fast you can learn a simple system
[20:27:38] <matsaman> as long as you're not in some horrifying field like crypto/security
[20:27:54] *** Joins: i0e (~is0ke3@user/is0ke3)
[20:28:48] *** Joins: kalen- (~kalen@gateway/vpn/pia/kalen)
[20:29:23] <MootPoot> I'm usually a "give me time and a book and I'll figure it out" type of person
[20:29:38] <MootPoot> I've fingered a lot of pies
[20:29:41] <MootPoot> :3
[20:30:16] <doug16k> exactly. should be "I'm so smart, it doesn't matter if I know your frameworks already"
[20:30:37] <doug16k> nobody wants to pay for that though
[20:31:20] <MootPoot> I've heard the deal is that nobody wants to spend the time making jr devs good
[20:31:29] <MootPoot> so the entire market demand is for sr devs
[20:31:31] *** Quits: kalen (~kalen@gateway/vpn/pia/kalen) (Ping timeout: 260 seconds)
[20:31:36] <MootPoot> and their sky high pay is just theirs
[20:31:39] *** kalen- is now known as kalen
[20:31:57] <MootPoot> feels like this is true but this is from a biased POV as a entry level bottom feeder
[20:34:00] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[20:35:11] <doug16k> you are not accounting for the time when the sr dev was learning the whole time they were entry level, and was drastically overqualified after being at the job for some years, then after being horribly underpaid for a long time, they finally get decent pay
[20:35:25] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[20:36:45] <doug16k> how many people doing web dev know C++ and assembly and maybe qt or gtk or something?
[20:37:43] <doug16k> maybe even are partially electrical engineers too, knowing verilog or something
[20:37:44] *** Joins: i0e (~is0ke3@user/is0ke3)
[20:38:53] <doug16k> lots of developers are extremely overqualified
[20:38:59] *** Quits: duuude (~user@user/duuude) (Ping timeout: 260 seconds)
[20:40:00] <matsaman> and the trend is toward fewer employees and more inviduals pulling double, triple, mega-quintillion duty
[20:40:10] <matsaman> which of course ends up getting you people who know jack shit
[20:40:29] <matsaman> and then, eventually, people knowing less than jack shit, and every "programmer" is just someone who mouse clicks in a GUI
[20:40:48] <matsaman> and before you know it Mark Zuckerberg is literally in control of your infrastructure
[20:41:05] <matsaman> like he can literally turn off the server that makes your software work
[20:41:37] <matsaman> people are silly, they don't consider what they're trading short-term convenience for
[20:42:32] <matsaman> '< MootPoot> I've fingered a lot of pies' =P
[20:43:17] <matsaman> and then we get into 'Idiocracy' territory
[20:43:45] <matsaman> where a machine stops working and nobody can even find a book or read a book on how to fix it no matter how hard they tried
[20:43:51] <matsaman> =P
[20:47:29] <doug16k> websites are an interesting example of something that could be completely automatic, that we still do manually, because manually gives a better result
[20:48:19] <doug16k> would you rather be in a plane crashed by a human or a computer?
[20:48:23] *** Quits: filename (~kilitary@188.242.105.134) (Read error: Connection reset by peer)
[20:48:27] <doug16k> I'll take the human crash thanks
[20:49:24] <matsaman> I'd rather be in a high speed elevated train that has virtually no chance of crashing
[20:49:49] <doug16k> what if comedians override the signals?
[20:49:57] <matsaman> but yeah it would feel bad to know you were going to die in a plane crash because of bad logic
[20:50:10] *** Joins: filename (~kilitary@188.242.105.134)
[20:50:24] <matsaman> I mean, there's really no reason for train tracks to require non-fail-safe switches
[20:50:40] <matsaman> for old cargo trains, sure, it's cheap
[20:50:49] <doug16k> yes but any mechanism can fail
[20:50:50] <matsaman> you have someone walk out and pull a switch, or push a button somewhere
[20:50:57] <matsaman> fail safe mechanisms can't! =P
[20:50:57] <matsaman> hahaha
[20:51:00] <matsaman> no I know what you mean
[20:51:08] <matsaman> but planes, they can fall out of the sky
[20:51:11] <matsaman> they don't have brakes
[20:51:31] <doug16k> they are far safer than the road though
[20:51:32] <matsaman> if you encounter something really weird in the air like, say, an airborne creature like a bird
[20:51:35] <matsaman> they can explode =P
[20:51:43] <matsaman> doug16k: no, that's only by passengers by distance
[20:51:53] <doug16k> not being likely to run into something helps so much that plummeting is not a big deal
[20:52:20] <matsaman> I don't know if it helps, but it's true there is less to run into once you're up, if your engines keep
[20:52:33] <matsaman> this comes back to control
[20:52:42] <matsaman> you can be a safe driver of a car all day every day and never get into trouble
[20:52:54] <matsaman> ride a plane once and 500 of you die because of some simple oversight
[20:53:29] <matsaman> it's safer by number of people moved number of miles, it's not actually safer
[20:53:47] <matsaman> something propelling a wheeled thing across the ground is safer =)
[20:53:55] <doug16k> yes of course there is risk. I think it is mocked because people had no fear at all on the way to the airport, when they did their daredevil run on the expressway. then at the airport, when they get on the vehicle is almost guaranteed not to kill them, they are afraid
[20:54:12] <matsaman> I mean people =)
[20:54:42] *** Joins: m_ (~mat001@89.45.90.227)
[20:55:32] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[20:55:40] *** Joins: snedd (~snedd@86.14.114.137)
[20:56:53] <doug16k> the topology of the ground can make it extremely dangerous. a simple incline will kill everyone on the train, without braking
[20:57:00] <matsaman> hell of a place to fall from the sky: https://is.gd/xadino
[20:57:05] *** Joins: i0e (~is0ke3@user/is0ke3)
[20:57:17] <matsaman> doug16k: incline? Wha?
[20:57:30] <doug16k> ever heard of a runaway train?
[20:57:31] *** Quits: m__ (~mat001@89.45.90.84) (Ping timeout: 256 seconds)
[20:57:35] <matsaman> yeah
[20:57:38] <doug16k> that
[20:57:45] <doug16k> the ground isn't safer
[20:57:56] <matsaman> it is though
[20:58:15] <matsaman> even if you really couldn't slow down a train other than with its own brakes
[20:58:24] <matsaman> you can put things in front of a train on a fixed path, really easily
[20:58:31] <doug16k> picture going 800km/h near the ground
[20:58:35] <matsaman> that's going to be harder in 3d space, in the air, anywhere on the globe
[20:58:50] <matsaman> doug16k: on a fixed path
[20:58:52] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[20:59:03] <matsaman> and there's no reason you can't plan for "brakes" not working
[20:59:09] <doug16k> what would be the max incline? 0.1%?
[20:59:26] <matsaman> and then we get into maglev
[20:59:29] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 246 seconds)
[20:59:32] <matsaman> where braking is going to be a lot different
[20:59:53] <doug16k> yeah but you can't go that fast at low altitude, because the ground is where density is max
[21:00:06] <matsaman> but that's not really the point, trains are going to be _massively_ safer, cars _merely_ hugely safer =P
[21:00:09] <matsaman> just because it's on the ground
[21:00:50] *** Joins: duuude (~user@user/duuude)
[21:01:51] <matsaman> 342 mph, didn't know that: https://en.wikipedia.org/wiki/Lun-class_ekranoplan
[21:01:54] <matsaman> that's bananas
[21:02:57] <matsaman> and really not that far away from the average of 600 or so mph that air liners get, although there's obviously another large advantage in distance by having a higher altitude
[21:04:03] <doug16k> airliners are almost fighter jets. there have been incidents of diving mach buffeting overspeed extreme pullup pulling over 5 g on 767 and it buckled the fuselage, and landed just fine
[21:04:28] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[21:04:33] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[21:04:40] <doug16k> the abuse they get in normal flights is a laugh
[21:04:56] <matsaman> it is for sure
[21:05:19] <matsaman> and they could be made much safer just as trains and cars can be
[21:05:21] <matsaman> buuuuuttt
[21:05:30] <matsaman> you can't really power them centrally the way you can with a train
[21:05:42] <matsaman> which is not _so much_ a safety issue as it is just practical
[21:06:24] <matsaman> I mean, I'm sure one could design a balloon-suspended power line for an aircraft path, heh
[21:06:38] <matsaman> but that doesn't sound ... like a good idea
[21:07:15] <matsaman> I wonder if you could go 600 mph with just a wire hanging out your arse
[21:07:16] <matsaman> =P
[21:09:13] <doug16k> the drag shoots up to extreme near and past mach 1
[21:10:18] <doug16k> up to a certain point, more power just gets you near mach 1 sooner, and you settle on a slightly higher top speed
[21:11:26] <matsaman> that's a drag
[21:11:34] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[21:12:34] <doug16k> that's why fighters are just flying barn doors, at mach 1 airflow is permanently separated
[21:13:42] *** Joins: wallbroken (wallbroken@user/wallbroken)
[21:13:54] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[21:15:30] *** Joins: i0e (~is0ke3@user/is0ke3)
[21:17:15] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 260 seconds)
[21:17:48] <doug16k> did you ever ride a bicycle beside cars whizzing on the road? I have. I should have been terrified. Was hardly afraid
[21:18:23] *** Joins: lara99 (~lara99@93-36-163-139.ip61.fastwebnet.it)
[21:18:38] <doug16k> whizzing by lol
[21:19:26] <doug16k> people do reckless daredevil stuff like that then decide they are afraid of being up in the air in a machine
[21:20:55] *** Joins: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net)
[21:21:59] <doug16k> imagine being a person on a rollercoaster that failed and the nightmare happened and it came off the track and fell far and everyone had tons of fractures?
[21:22:48] <doug16k> would you wonder why you even got on it for the rest of your life?
[21:23:04] <matsaman> I do remember being afraid of little on my bicycle, as a younger person
[21:23:38] <matsaman> I'm not afraid of flying. It's pretty safe, and once you're on board you gotta accept your fate anyway, basically, but.
[21:23:38] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 246 seconds)
[21:23:53] <matsaman> it's still not _safer_ than ground travel, despite being safer per person carried per mile
[21:24:01] <doug16k> pop machines kill more people than planes or something, right?
[21:24:07] <matsaman> an interesting metric to be sure, but not the same as "safer"
[21:24:12] <matsaman> doug16k: for sure
[21:24:18] <matsaman> especially if Stephen King has anything to say about it
[21:24:18] <blueagain> smoking kills a lot of people
[21:24:19] <doug16k> don't more people fall out of bed and die than die on planes?
[21:24:38] <blueagain> and they do it happily :)
[21:24:46] <matsaman> more people sleep in beds than ride planes, though, probably
[21:24:56] <blueagain> trying to find reason in what people do or not do in an exercise in futility
[21:24:59] <matsaman> I used to sleep in a loft with no railing...
[21:25:14] <matsaman> sometimes futile exercises make fruit!
[21:25:53] *** Joins: i0e (~is0ke3@user/is0ke3)
[21:25:56] *** Quits: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net) (Ping timeout: 272 seconds)
[21:28:00] *** Joins: Snyp (~Snyp@49.207.197.152)
[21:28:07] <doug16k> take comfort that it is really really expensive if the plane crashes, so they will make sure not to kill you in their attempt to minimize expenses
[21:29:57] <doug16k> and most planes are made by companies that also make planes that you can shoot at and it probably gets home
[21:30:11] <matsaman> I take comfort in the statistics. It is very safe, statistically, not compared to ground travel.
[21:30:17] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 246 seconds)
[21:31:39] *** Joins: suss (~user@user/suss)
[21:31:54] *** Joins: zebrag (~chris@user/zebrag)
[21:32:14] *** Joins: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net)
[21:32:18] *** Joins: i0e (~is0ke3@user/is0ke3)
[21:32:19] *** Quits: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net) (Remote host closed the connection)
[21:39:12] *** Joins: voltage (voltage@user/voltage)
[21:39:23] *** Quits: voltage_ (voltage@user/voltage) (Killed (NickServ (GHOST command used by voltage)))
[21:39:25] *** voltage is now known as voltage_
[21:44:40] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[21:46:31] *** Joins: thiras (~thiras@user/thiras)
[21:46:42] *** Joins: peteyboy1 (~peteyboy1@199.157.133.37.dynamic.jazztel.es)
[21:47:36] *** Quits: dmanto (~dmanto@host91.186-125-4.telecom.net.ar) (Ping timeout: 252 seconds)
[21:48:54] *** Joins: peteyboy_ (~peteyboy1@199.157.133.37.dynamic.jazztel.es)
[21:49:23] <merpnderp> The three.js channel is basically gone. IRC is definitely dying a lot faster than it was before free node blew things up.
[21:51:00] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[21:52:41] *** Quits: peteyboy1 (~peteyboy1@199.157.133.37.dynamic.jazztel.es) (Ping timeout: 246 seconds)
[21:54:27] <theskillwithin> merpnderp it probbably has to do more with three.js has an official discord
[21:54:59] <matsaman> lot upstreams are making bad decisions lately, oh the times
[21:55:35] <matsaman> if useful people sit in #threejs, I would imagine it would outpace the discord eventually
[21:56:02] <matsaman> starting from nothing, whatever an upstream officially points people to is going to have an easier time getting populated, even using something silly like discord
[21:56:17] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[21:56:26] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[21:56:40] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[21:57:00] <theskillwithin> i wish #nextjs and #gatsbyjs were a feasible site as well
[21:57:16] <theskillwithin> this channel isn't dying tho, it seems to be slightly growing
[21:58:39] <theskillwithin> altho really those i guess people would just go to #reactjs
[22:02:07] <blueagain> merpnderp: discord is a cesspool
[22:07:12] *** Quits: wroathe (~wroathe@user/wroathe) (Quit: Lost terminal)
[22:07:39] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 260 seconds)
[22:09:38] *** Joins: olle (~olle@i5E866D88.versanet.de)
[22:10:13] *** Joins: filename (~kilitary@188.242.105.134)
[22:13:20] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 246 seconds)
[22:13:27] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[22:13:28] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[22:13:28] *** Joins: wroathe (~wroathe@user/wroathe)
[22:15:49] *** Joins: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net)
[22:15:53] *** Quits: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net) (Remote host closed the connection)
[22:16:16] *** Joins: D4mned (~D1mned@212.101.253.218)
[22:17:22] *** Quits: lara99 (~lara99@93-36-163-139.ip61.fastwebnet.it) (Quit: Client closed)
[22:17:42] *** Joins: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net)
[22:17:53] *** Quits: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net) (Read error: Connection reset by peer)
[22:18:06] *** Joins: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net)
[22:18:13] *** Quits: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net) (Read error: Connection reset by peer)
[22:19:23] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[22:19:24] *** Joins: i0e (~is0ke3@user/is0ke3)
[22:22:42] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[22:24:18] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[22:25:46] *** Joins: i0e (~is0ke3@user/is0ke3)
[22:28:14] *** Quits: nomic (~nomic@2a00:23c7:ec90:a501:1ca6:8527:5890:736) (Quit: Leaving)
[22:29:41] <OnkelTem> Good day to everybody. A basic JS question. So function declarations are different from function expressions. E.g. `function foo() {}` is the former, while `const f = function foo() {}` is the latter
[22:30:05] *** Joins: bambanxx (~bambanx@2800:150:106:137e:d5ce:ae02:f494:5ca2)
[22:30:20] <OnkelTem> Now if I first declared a function, and THEN assigned it to a variable. So... like... initial declared function becomes now an expression?
[22:30:33] <OnkelTem> const f = foo;
[22:30:59] <OnkelTem> So foo is a declared function and f is a derived expression made from it, like this?
[22:32:47] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[22:37:43] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 260 seconds)
[22:40:19] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[22:40:43] *** Quits: Snyp (~Snyp@49.207.197.152) (Quit: Textual IRC Client: www.textualapp.com)
[22:43:25] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[22:44:49] *** Joins: entbsagtc^ (~entbsagtc@c-24-99-107-170.hsd1.ga.comcast.net)
[22:47:19] <D4mned> i guess so OnkelTem
[22:47:52] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[22:47:53] <D4mned> the difference is scope
[22:48:13] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 260 seconds)
[22:49:40] <D4mned> if you declare a function you can access it even before its declaration
[22:49:54] <D4mned> if you place it inside a a variable then you cannot
[22:50:22] *** Quits: bambanxx (~bambanx@2800:150:106:137e:d5ce:ae02:f494:5ca2) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:51:29] *** Quits: snedd (~snedd@86.14.114.137) (Quit: Leaving)
[22:55:15] *** Quits: Arisco (~ckmptnml@201-11-16-179.user3p.brasiltelecom.net.br) (Quit: CyberScript - Salve as tartaruguinhas marinha. Use CyberScript. (www.cyberscript.org))
[22:56:43] *** Joins: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net)
[22:56:46] *** Quits: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net) (Remote host closed the connection)
[22:57:00] <austincheney> OnkelTem, the only difference between a function declaration and a function assignment is that the former is an expression and the later is a statement.
[22:57:17] <austincheney> OnkelTem, an expression says something.  A statement does something.
[22:58:26] *** Joins: Intelo (~Intelo@user/Intelo)
[22:58:28] <Intelo> Hi
[22:58:29] <austincheney> OnkelTem, also, a function declaration must be a named function, because a function must be an IIFE or have some form of reference or throws an error
[22:58:37] *** Quits: moldorcoder7 (~moldorcod@37.120.143.30) (Quit: %bye mirc%)
[22:58:45] <useretail> how to save/download a blob using js?
[22:59:01] <austincheney> useretail, save to what?  a file?
[22:59:05] <useretail> yes
[22:59:32] <austincheney> is this blob already in the browser or is it something that will be downloaded on click?
[22:59:56] <useretail> yes, it's in the browser, visible like this: <video class="custom" src="blob:https://www.example.com/9e3531c3-4a37-4d0e-8674-2fd4e9ee7068">
[22:59:59] *** Joins: prawnsal_ (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk)
[23:00:27] <useretail> video plays fine
[23:00:34] <useretail> how to download it
[23:00:54] <austincheney> useretail, you need "save as" functionality.  I think the browsers allow that natively now, but if not there are some great packages out there to provide you that capability
[23:01:16] <Intelo> Javascript, css, html etc is slow in browser as compared to a native C based desktop app. I think that's due to javascript mostly? is it? or css and html as well? b) either way, are there ANY ways to make it close to or equal to native/fast performance as C gives? In this, I do not expect the answer to be limited to browsers only. We can have new
[23:01:16] <Intelo> kind of browser/app that downloads html,js,css, converts it to something native and runs it? Don't know. open to ideas/ thoughts
[23:01:47] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 260 seconds)
[23:01:48] <useretail> austincheney, no, no "save as" please
[23:01:55] <useretail> there is js for that
[23:02:05] *** Joins: moldorcoder7 (~moldorcod@37.120.143.30)
[23:02:28] <useretail> i wouldn't be asking if i could just right click on it
[23:02:59] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[23:03:03] <austincheney> Intelo, not that slow.  JavaScript executes as fast as Java now, except for arithmetic where it is up to 10x slower than Java.  Java is half as fast as c/C++
[23:03:21] <Svitkona> downloading things without user interaction isn't very nice to the user
[23:03:32] <austincheney> Intelo, the slowness in JS applications is because developers intentionally make bad decisions and then lie about performance
[23:03:35] <gde33> does rel=”preload” work for dynamically added stuff?
[23:03:44] *** Quits: prawnsalad (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk) (Ping timeout: 246 seconds)
[23:04:09] <austincheney> useretail, then I am not sure what you need
[23:04:28] <useretail> to save existing blob to a file
[23:04:30] <D4mned> are you trying to download a video from a website ?
[23:04:41] <Intelo> austincheney i see
[23:04:51] <useretail> D4mned, no, i want to download a blob using sj
[23:04:54] <useretail> *using js
[23:05:07] <austincheney> Intelo, if you have specific performance concerns I will try to point you in the proper direction
[23:05:55] <Intelo> austincheney well I dont' know why. websites perform so slow the moment you add some complexity, data, more ui as compared to same things in a desktop app
[23:05:56] <D4mned> are you trying to scrape ?
[23:05:58] <austincheney> useretail, the way I would do that is to send it to a localhost Node application which will receive the blob as a stream and pipe that stream into a file descriptor of the file system
[23:06:37] <useretail> austincheney, there is no node, i'm using browser and it's console
[23:06:44] <austincheney> Intelo, yes, my employers homepage takes more than 10 seconds to load while downloading 8.8mb.  Its not doing much more than putting text to screen
[23:07:01] <useretail> D4mned, no
[23:07:07] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[23:07:26] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[23:08:09] <D4mned> because if you are just trying to download some video hosted on some website theres tools like xtreme download manager that could easily do that instead of just writing some code in the console
[23:08:14] *** Joins: prometh (uid425119@id-425119.ilkley.irccloud.com)
[23:08:44] <useretail> D4mned, why do i have to use some tools if i have JS?
[23:09:27] *** Joins: audio (~audio@user/audio)
[23:09:48] <austincheney> Intelo, as a point of comparison my personal application loads an OS GUI in the browser with full state restoration in about 120ms (full load time according to the browser network tab).
[23:10:31] <gde33> austincheney: what is this 8.8 mb doing on the homepage?
[23:10:55] <austincheney> gde33, framework bullshit, bundler, and other nonsense
[23:11:27] <austincheney> I suspect there is a bunch of jquery nonsense in there as well
[23:11:56] <Intelo> austincheney totally ignore the network load time. what are the other things?
[23:13:11] <austincheney> network load time is more than it sounds.  It is the download time of the page assets, page paint time, initial code execution time, and everything else to achieve an initial ready state
[23:13:12] <gde33> austincheney: I use to do  this hilarious cms trick where I just save the index.php/asp/etc to disk then upload it as index.html
[23:13:23] <OneMirror> What do people use for scheduling tasks in cloud?  Kubernetes, Kubeflow, Airflow, directly starting EC2 or GCP instance.  Anything else?
[23:14:01] <OneMirror> Hadoop
[23:14:30] *** Joins: eXistenZ (~biskit@bzq-109-64-230-51.red.bezeqint.net)
[23:14:34] <austincheney> OneMirror, I don't.  My cloud experience is almost nonexistent.  When I need to do remote testing I spin up a VM.  Its much slower to spin up than a container, but its also less restrictive and not tied to the underlying OS
[23:15:48] <OnkelTem> D4mned: yeah, you're speaking about hoisting.
[23:16:19] <OnkelTem> austincheney: yep, thanks.
[23:16:41] *** Quits: maret_ (~maret@nat-88-212-37-89.antik.sk) (Quit: maret_)
[23:18:39] <austincheney> OnkelTem, also be aware that assigned functions can still be named:  const something = function somethingName() {};
[23:19:26] <austincheney> a function's name is a form of self identity in that the function is internally aware of its name, which is useful for stack traces and profilers and recursion
[23:19:32] <OneMirror> Cool. I'm working on my (still very early) package https://www.npmjs.com/package/@wholebuzz/mapreduce but I think it's really quit neat compared to Hadoop MapReduce.  I'm going to add some Airflow DAGS to the example project to illustrate one way of running it.
[23:19:35] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[23:21:48] <D4mned> yup hoisting
[23:22:00] <D4mned> i always forget this word
[23:22:51] <D4mned> iv never delt with a blob
[23:23:43] <D4mned> quick google search though looks like you can fetch it
[23:23:45] <D4mned> let blob = await fetch(url).then(r => r.blob());
[23:24:03] <Intelo> austincheney I use SPA in react. so network load time is only at start. IT doesnt even counts later on and not a factor in my question.
[23:24:09] <D4mned> https://stackoverflow.com/questions/11876175/how-to-get-a-file-or-blob-from-an-object-url
[23:24:48] <Intelo> austincheney can you mentioned my nickname when you reply ignoring the network load time. I am only interested in execution time assuming all data is loaded
[23:26:08] <austincheney> Intelo, one of the biggest things is not using query selectors.  https://jsbench.github.io/#b39045cacae8d8c4a3ec044e538533dc
[23:27:21] <austincheney> Intelo, accessing the DOM in chrome tops out at about 44-45 million ops/second if using the old static methods and query selectors are much slower depending upon your machine, like maybe 125,000 ops/second
[23:27:22] <rustyshackleford> is it even possible to remember how regex works?
[23:27:31] <D4mned> haha not for me lol
[23:27:40] <rustyshackleford> I have to re-learn it every time
[23:27:50] <D4mned> same here
[23:27:55] <rustyshackleford> and in every context it works a little differently
[23:28:43] <D4mned> i try to avoid it if i could tbh
[23:29:20] <rustyshackleford> I could parse it using split(', ') too
[23:29:54] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[23:30:55] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[23:31:11] *** Quits: duuude (~user@user/duuude) (Ping timeout: 260 seconds)
[23:32:05] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 246 seconds)
[23:32:47] <austincheney> Intelo, if you are interested in performance you need to conduct lots of measurements.  I frequently see where developers make assumptions out of convenience that are often wrong and then discard numbers they don't like only to assume their code is fast then are lost when users criticize how slow it really is
[23:33:44] <gde33> rustyshackleford: .htaccess :P
[23:36:01] *** Joins: duuude (~user@user/duuude)
[23:37:17] *** Quits: powftw (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[23:37:28] *** Joins: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net)
[23:37:32] <gde33> rustyshackleford: but there is #regex where every question has 10 possible answers
[23:37:33] *** Quits: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net) (Remote host closed the connection)
[23:37:47] <rustyshackleford> some people are REALLY good at regex
[23:37:54] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[23:38:16] <rustyshackleford> advent of code are these coding puzzles. usually your input is a text file
[23:38:31] <rustyshackleford> and I see some really clever ways that people parse it
[23:40:37] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[23:40:47] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[23:41:19] <Intelo> austincheney ok
[23:41:20] <Intelo> thanks
[23:42:37] <systemfault> austincheney: It doesn't matter if querySelectorAll is ultra-slow... because if you know what you're doing, it's a thing you only do once, in your application bootstrap.
[23:45:22] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 260 seconds)
[23:45:25] *** Joins: chandash (~chandash@c-76-116-112-52.hsd1.nj.comcast.net)
[23:47:07] *** Joins: fef (~thedawn@user/thedawn)
[23:47:31] *** Quits: iomari891 (~iomari891@102.91.4.186) (Ping timeout: 256 seconds)
[23:47:33] <gde33> its not slow is it?
[23:48:46] <gde33> you don't need 45 m ops/sec
[23:49:48] *** Joins: cotko (~cotko@188-230-251-153.dynamic.t-2.net)
[23:50:25] <ashnur> i do
[23:51:52] <gde33> ashnur: really? But isn't the idea to do something with the nodes?
[23:52:18] <gde33> ashnur: isn't doing anything with them going to be incredibly slow by comparison?
[23:53:10] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[23:57:15] *** Quits: keypusher (keypusher@user/keypusher) (Quit: bye)
[23:57:43] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[23:57:45] *** Joins: keypusher (keypusher@user/keypusher)
