[00:00:36] <sm> you're waiting for some response ? I guess it got overlooked, or folks aren't certain if they're ready to deal with hlint headaches..
[00:01:07] <anton-latukha[m]> s/several/1.5/
[00:03:44] <anton-latukha[m]> The thread https://github.com/ndmitchell/hlint/issues/1311 explains that it is by default a more humane/softer way to use HLint, but it also allows to customize it more then default approach. & to run HLint once. & to choose what is suggested to do in a soft manner, what is in warning & what is a requirement.
[00:04:24] <anton-latukha[m]> The current Haskell-CI way only can hardblock & to see its result - one needs go from review process into the CI build jogs.
[00:04:59] <anton-latukha[m]> * Haskell-CI way it only can, * only can produce an effect of hardblock &
[00:09:03] <anton-latukha[m]> BTW.
[00:09:03] <anton-latukha[m]> If we would shave HLint from all but last/best supported by HLint GHC - we would shave 30s per run. That is peanuts after fixing 50m wait.
[00:09:03] <anton-latukha[m]> But CI downloads, installs, runs HLint every time for every job - it is a bit excessive.
[00:09:03] <anton-latukha[m]> & people are not that interested for HLint to bug them about old GHC versions code which would be removed in short time.
[00:54:44] <anton-latukha[m]> +====
[00:54:58] <anton-latukha[m]> Looking at build matrix we have.
[00:55:43] <anton-latukha[m]> Windows still takes much more time to run then other workflows. But that because it takes longer for tests to pass there.
[00:57:58] <anton-latukha[m]> & noticed that tests run on Linux & Windows. But tests do not run macOS.
[00:59:51] <anton-latukha[m]> Decided to revert those ideas here, since it would better to put those as a report.
[01:38:17] *** Quits: hololeap (~hololeap@user/hololeap) (Excess Flood)
[01:41:23] *** Joins: hololeap (~hololeap@user/hololeap)
[03:02:13] *** Quits: Morrow (~quassel@bzq-110-168-31-106.red.bezeqint.net) (Ping timeout: 240 seconds)
[03:05:29] *** Joins: Morrow (~quassel@bzq-110-168-31-106.red.bezeqint.net)
[03:38:29] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[03:41:01] *** Joins: hololeap (~hololeap@user/hololeap)
[03:41:15] *** Quits: Morrow (~quassel@bzq-110-168-31-106.red.bezeqint.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:51:46] *** Joins: yoshitsugu (uid529929@id-529929.hampstead.irccloud.com)
[05:18:18] *** Quits: angerman (sid209936@id-209936.ilkley.irccloud.com) ()
[06:50:57] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[07:49:11] *** Joins: libertyprime (~libertypr@203-109-232-143.dsl.dyn.ihug.co.nz)
[08:07:28] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[09:06:01] *** Joins: arrowd (~arr@2.94.236.140)
[09:26:37] *** Quits: libertyprime (~libertypr@203-109-232-143.dsl.dyn.ihug.co.nz) (Ping timeout: 240 seconds)
[09:48:27] *** Joins: libertyprime (~libertypr@203-109-232-143.dsl.dyn.ihug.co.nz)
[10:08:19] *** Quits: libertyprime (~libertypr@203-109-232-143.dsl.dyn.ihug.co.nz) (Ping timeout: 256 seconds)
[10:08:54] *** Joins: libertyprime (~libertypr@203-109-232-143.dsl.dyn.ihug.co.nz)
[10:09:12] *** Joins: Morrow (~quassel@bzq-110-168-31-106.red.bezeqint.net)
[10:22:57] *** Quits: libertyprime (~libertypr@203-109-232-143.dsl.dyn.ihug.co.nz) (Ping timeout: 240 seconds)
[10:24:45] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[10:51:57] *** Quits: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net) (Ping timeout: 240 seconds)
[11:51:57] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Remote host closed the connection)
[11:56:29] *** Joins: libertyprime (~libertypr@115-189-97-69.mobile.spark.co.nz)
[12:20:46] *** Quits: libertyprime (~libertypr@115-189-97-69.mobile.spark.co.nz) (Read error: Connection reset by peer)
[12:35:44] *** Joins: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827)
[13:05:14] *** Quits: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827) (Quit: coot)
[13:07:00] *** Joins: TomaszTylec[m] (~ttylecmat@2001:470:69fc:105::1:554c)
[13:24:40] *** Quits: ttylec (uid532690@id-532690.helmsley.irccloud.com) ()
[13:25:33] *** TomaszTylec[m] is now known as ttylec[m]
[13:28:54] <ttylec[m]> sm: I was building shake with profiling. Without profiling it builds fine. Just cross-checked that `stack --resolver lts-18.18 build shake --profile` results with... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/29985212318f7c6fe901304bc401377f9bf08d31)
[13:34:37] <jneira[m]> someone reported it for macos and ghc-8.6.5 time ago: https://gitlab.haskell.org/ghc/ghc/-/issues/16790
[13:34:57] <jneira[m]> does increase `-fsimpl-tick-factor=` help?
[13:36:01] <jneira[m]> s/=`/=1000`/
[13:36:57] <ttylec[m]> tried to pass it through stack, but either stack didn't pass it down, or didn't help; it cabal build with profiling works though
[13:37:07] <ttylec[m]> without any additional options
[13:37:41] <jneira[m]> ttylec[m]: setting log output to vebose shows the ghc incantantions, to check it pass it down
[13:37:52] <jneira[m]> s/it/stack/
[13:38:31] <jneira[m]> but likely it will not help (as least it did not in all reports i've check in the ghc issue tracker)
[13:39:38] <jneira[m]> i think it worths to open a ticket in ghc, if it is reproduced consistently, shake is a well known library
[13:40:04] <jneira[m]> (maybe trying shake in isolation to check it is also reproduced)
[13:41:14] <jneira[m]> @sm you are on m1 mac no? had you got the chance of trying in your system?
[13:41:26] <jneira[m]> s/@sm you are on m1 mac no? had you got the chance of trying in your system?/sm:  you are on m1 mac no? had you got the chance of trying in your system?/
[13:42:28] <jneira[m]> about cabal vs stack behaviour i guess you are using v2 commands in cabal and stack behaviour is more similar to v1 ones
[13:42:40] <ttylec[m]> I may not be passing that option in the right way, I tried... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/5e4b3a2ef348441d57a5056f552c406645023f92)
[13:42:43] <jneira[m]> maybe it reproduces with cabal v1-build
[13:43:09] <jneira[m]> ugh
[13:43:33] <jneira[m]> hmm there are direct calls to ghc in the log?
[13:43:43] <ttylec[m]> nope
[13:43:48] <jneira[m]> just in case
[13:44:26] <jneira[m]> are you using the same ghc for stack and cabal?
[13:45:16] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[13:45:24] <ttylec[m]> yep, ghc-8.10.7 from ghcup
[13:46:17] <jneira[m]> i guess that, stack still does not download ghc on arm afair
[13:46:22] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Remote host closed the connection)
[13:46:57] <ttylec[m]> had some issue with that... supposedly stack from head did, but then found some suggestion to use ghcup, so I switched to that and it worked very nice
[13:47:17] <ttylec[m]> (I am fresh M1 user, so was trying to figure it out recently)
[13:48:10] *** Joins: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827)
[13:49:09] <jneira[m]> idk, i would try to make stack pass the parameter before opening the issue in ghc, not sure why it is skipping it, maybe setting it in the .cabal or stack.yaml file would work?
[13:51:06] <ttylec[m]> I opened issue on stack, it seems to be more related to stack rather than ghc itself; there were some old issues about passing args to ghc... but it seems not well documented (or not working)
[13:51:51] <jneira[m]> aha, i am afraid stack maintainers not always are responsive to issue reports :-( 
[13:52:58] *** Parts: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827) ()
[13:53:29] *** Joins: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827)
[13:56:33] <ttylec[m]> anyway, you inspired me to do search and found that: https://docs.haskellstack.org/en/stable/yaml_configuration/#apply-ghc-options This may explain why options are not passed. But since applying options to everything is discouraged, the issue remains...
[14:19:33] *** Quits: yoshitsugu (uid529929@id-529929.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[14:54:50] *** Quits: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827) (Quit: coot)
[14:56:18] *** Quits: hololeap (~hololeap@user/hololeap) (Ping timeout: 276 seconds)
[15:04:28] *** Joins: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827)
[15:07:19] *** Quits: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827) (Client Quit)
[15:10:20] *** Joins: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827)
[15:43:55] *** Quits: arrowd (~arr@2.94.236.140) ()
[16:53:23] *** Quits: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827) (Remote host closed the connection)
[17:15:08] *** Joins: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827)
[17:31:52] *** Joins: arrowd (~arr@2.94.236.140)
[17:38:13] *** Quits: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827) (Quit: coot)
[17:40:01] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[17:54:14] *** Joins: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net)
[17:54:57] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Remote host closed the connection)
[17:59:00] *** Joins: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827)
[18:08:10] *** Quits: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827) (Remote host closed the connection)
[18:13:30] *** Joins: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827)
[18:45:30] *** Quits: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827) (Remote host closed the connection)
[18:49:37] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Ping timeout: 240 seconds)
[18:52:03] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[19:01:00] *** Joins: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827)
[19:29:24] *** Quits: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827) (Quit: coot)
[19:29:56] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[19:54:37] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Ping timeout: 240 seconds)
[20:01:55] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[20:27:02] <sm> g'day all
[20:27:13] <sm> ttylec: good find, I didn't know about apply-ghc-options
[20:27:52] <sm> have you discussed in shake issue tracker ?
[20:36:17] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Ping timeout: 240 seconds)
[20:52:38] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[21:03:24] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Remote host closed the connection)
[21:09:49] *** Joins: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827)
[21:29:38] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Ping timeout: 260 seconds)
[21:36:54] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[21:59:45] <wz1000> pepeiborra: it seems like hls-graph/shake is swallowing all the exceptions? any idea? I'm running with the command line interface
[22:00:00] <wz1000> I get a hang instead of an exception
[22:10:28] *** Quits: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827) (Remote host closed the connection)
[22:43:57] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Ping timeout: 240 seconds)
[22:55:57] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[23:13:02] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Ping timeout: 240 seconds)
[23:21:16] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[23:32:34] *** Quits: arrowd (~arr@2.94.236.140) ()
[23:35:15] *** Quits: juhp (~juhp@128.106.188.82) (Ping timeout: 256 seconds)
[23:36:04] *** Joins: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827)
[23:38:22] *** Joins: juhp (~juhp@128.106.188.82)
