[00:01:35] *** Quits: magla (~gelignite@55d411d7.access.ecotel.net) (Quit: Stay safe!)
[00:05:49] *** Joins: Mat_42 (~mat_42@2a02:21b0:644c:9bf0:c992:3244:c9c3:99e4)
[00:27:17] *** Quits: Mat_42 (~mat_42@2a02:21b0:644c:9bf0:c992:3244:c9c3:99e4) (Remote host closed the connection)
[00:27:29] *** Joins: Mat_42 (~mat_42@2a02:21b0:644c:9bf0:c992:3244:c9c3:99e4)
[00:27:44] *** Quits: Mat_42 (~mat_42@2a02:21b0:644c:9bf0:c992:3244:c9c3:99e4) (Remote host closed the connection)
[00:28:43] *** Joins: Mat_42 (~mat_42@2a02:21b0:644c:9bf0:c992:3244:c9c3:99e4)
[00:35:21] *** Joins: magla (~gelignite@55d411d7.access.ecotel.net)
[00:36:43] *** Quits: Mat_42 (~mat_42@2a02:21b0:644c:9bf0:c992:3244:c9c3:99e4) (Ping timeout: 260 seconds)
[00:49:26] *** Joins: bebyx (~Thunderbi@user/bebyx)
[00:58:10] *** Joins: Mat_42 (~mat_42@2a02:21b0:644c:9bf0:c992:3244:c9c3:99e4)
[01:15:24] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[01:42:11] *** Quits: RoKenn (~RoKenn@user/rokenn) (Quit: NSA proxy service interrupted)
[01:44:07] *** Joins: markong (~kvirc@213.146.188.203)
[02:01:37] *** Quits: Mat_42 (~mat_42@2a02:21b0:644c:9bf0:c992:3244:c9c3:99e4) (Ping timeout: 250 seconds)
[02:02:16] *** Quits: toadt (~toadt@cpc101496-gill19-2-0-cust142.20-1.cable.virginm.net) (Quit: toadt)
[02:15:07] *** Joins: Mat_42 (~mat_42@2a02:21b0:644c:9bf0:c992:3244:c9c3:99e4)
[02:19:42] *** Quits: kenantu (~kenanmara@user/kenanmarasli) (Read error: Connection reset by peer)
[02:20:35] *** Quits: Mat_42 (~mat_42@2a02:21b0:644c:9bf0:c992:3244:c9c3:99e4) (Ping timeout: 260 seconds)
[02:20:51] *** Joins: kenantu (~kenanmara@user/kenanmarasli)
[02:21:09] *** Joins: Mat_42 (~mat_42@2a02:21b0:644c:9bf0:c992:3244:c9c3:99e4)
[02:30:29] *** Quits: calcul0n (~calcul0n@2a01:e0a:150:6030:7d85:9901:c4f9:1225) (Ping timeout: 256 seconds)
[02:34:12] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzzâ€¦)
[02:38:08] *** Quits: kenantu (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[02:38:42] *** Quits: Mat_42 (~mat_42@2a02:21b0:644c:9bf0:c992:3244:c9c3:99e4) (Remote host closed the connection)
[02:38:55] *** Joins: Mat_42 (~mat_42@2a02:21b0:644c:9bf0:c992:3244:c9c3:99e4)
[02:39:08] *** Quits: Mat_42 (~mat_42@2a02:21b0:644c:9bf0:c992:3244:c9c3:99e4) (Remote host closed the connection)
[02:43:44] *** Quits: magla (~gelignite@55d411d7.access.ecotel.net) (Quit: Stay safe!)
[03:10:28] *** Quits: Tazy (~Tazmainia@2001:1c02:1708:6800:9405:725b:6125:a200) (Quit: Leaving)
[03:41:13] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Remote host closed the connection)
[03:45:56] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 272 seconds)
[03:48:19] *** Quits: jsbach (~jsbach@2a01:c22:a9f6:7600:7dd:385c:8a8f:e58b) (Ping timeout: 260 seconds)
[04:16:17] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 246 seconds)
[04:49:26] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 252 seconds)
[05:45:25] *** Quits: grr (~bjoern@2a02:8109:9cc0:108:ddc1:37e9:5f21:bef3) (Ping timeout: 256 seconds)
[06:17:38] *** Joins: Inline__ (~Inline@p200300cd47090700f6a7abc6bfc79784.dip0.t-ipconnect.de)
[06:20:27] *** Quits: Inline (~Inline@p200300cd473cee00b1553510cacfa527.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[07:27:43] *** Joins: yosef` (~yosef`@45.32.73.39)
[08:03:18] *** Quits: yosef` (~yosef`@45.32.73.39) (Quit: yosef`)
[08:07:27] *** Joins: yosef` (~user@223.73.113.250)
[08:37:58] *** Quits: yosef` (~user@223.73.113.250) (Quit: ERC (IRC client for Emacs 28.0.50))
[08:39:34] *** Joins: yosef` (~user@223.73.113.250)
[09:19:39] *** Quits: Inline__ (~Inline@p200300cd47090700f6a7abc6bfc79784.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[10:24:58] *** Joins: calcul0n (~calcul0n@2a01:e0a:150:6030:7d85:9901:c4f9:1225)
[10:58:40] *** Joins: jsbach (~jsbach@2a01:c23:6018:f800:6f6c:d942:12b0:84da)
[11:09:27] *** Quits: segnior (segnior@user/segnior) (*.net *.split)
[11:09:27] *** Quits: Crocodillian (~Crocodill@comply.posixsh.org) (*.net *.split)
[11:09:27] *** Quits: sunny93 (~sunny93@wireguard/tunneler/sunny93) (*.net *.split)
[11:09:27] *** Quits: dasrael (~rabbit@user/dasrael) (*.net *.split)
[11:09:27] *** Quits: Karyon (~Karyon@user/karyon) (*.net *.split)
[11:09:27] *** Quits: packet_lozenge (~packet_lo@user/packet-lozenge/x-7125090) (*.net *.split)
[11:09:27] *** Quits: kristjansson (sid126207@id-126207.tinside.irccloud.com) (*.net *.split)
[11:09:28] *** Quits: elichai2 (sid212594@2a03:5180:f:4::3:3e72) (*.net *.split)
[11:09:28] *** Quits: geordi (~geordi@tinodidriksen.com) (*.net *.split)
[11:09:38] *** Joins: segnior (segnior@user/segnior)
[11:10:05] *** Joins: Crocodillian (~Crocodill@comply.posixsh.org)
[11:10:05] *** Joins: sunny93 (~sunny93@wireguard/tunneler/sunny93)
[11:10:33] *** Joins: kristjansson (sid126207@id-126207.tinside.irccloud.com)
[11:10:36] *** Joins: joji (~jojo@86.4.72.180)
[11:10:37] *** Joins: elichai2 (sid212594@id-212594.hampstead.irccloud.com)
[11:10:55] *** Joins: RazielZ (~Raziel@user/raziel)
[11:11:01] *** Joins: packet_lozenge (~packet_lo@cpe-107-15-195-50.nc.res.rr.com)
[11:11:04] *** Quits: packet_lozenge (~packet_lo@cpe-107-15-195-50.nc.res.rr.com) (Changing host)
[11:11:04] *** Joins: packet_lozenge (~packet_lo@user/packet-lozenge/x-7125090)
[11:11:12] *** Joins: Karyon (~Karyon@user/karyon)
[11:11:16] *** Joins: geordi (~geordi@tinodidriksen.com)
[11:11:18] *** Quits: Raziel (~Raziel@user/raziel) (Killed (NickServ (GHOST command used by RazielZ)))
[11:11:19] *** RazielZ is now known as Raziel
[11:13:11] *** Quits: NiKaN (sid385034@id-385034.helmsley.irccloud.com) (*.net *.split)
[11:13:11] *** Quits: shenghi (~shenghi@chrysocolla.mutablevoid.org) (*.net *.split)
[11:13:12] *** Quits: Argorok (sid195487@id-195487.hampstead.irccloud.com) (*.net *.split)
[11:13:12] *** Quits: andreyv (~andrey@user/andreyv) (*.net *.split)
[11:13:12] *** Quits: celphi (sid97751@user/celphi) (*.net *.split)
[11:13:12] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (*.net *.split)
[11:13:20] *** Joins: Argorok (sid195487@id-195487.hampstead.irccloud.com)
[11:13:37] *** Joins: shenghi (~shenghi@chrysocolla.mutablevoid.org)
[11:13:39] *** Joins: andreyv (~andrey@user/andreyv)
[11:13:43] *** Joins: NiKaN (sid385034@id-385034.helmsley.irccloud.com)
[11:13:44] *** Joins: celphi (sid97751@user/celphi)
[11:14:05] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[11:29:54] *** Joins: dgcampea-2 (~dgc@user/dgcampea)
[11:29:54] *** Quits: dgcampea (~dgc@user/dgcampea) (Killed (NickServ (Forcing logout dgcampea -> dgcampea)))
[11:29:54] *** dgcampea-2 is now known as dgcampea
[11:53:14] *** Joins: Mat_42 (~mat_42@2001:1458:204:1::102:b65c)
[11:57:43] *** Quits: Mat_42 (~mat_42@2001:1458:204:1::102:b65c) (Ping timeout: 256 seconds)
[12:28:32] *** Joins: Mat_42 (~mat_42@2001:1458:204:1::101:b65c)
[12:33:02] *** Quits: Mat_42 (~mat_42@2001:1458:204:1::101:b65c) (Ping timeout: 260 seconds)
[13:16:01] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[13:33:40] *** Joins: Mat_42 (~mat_42@2001:1458:204:1::102:b65c)
[13:38:23] *** Quits: Mat_42 (~mat_42@2001:1458:204:1::102:b65c) (Ping timeout: 260 seconds)
[13:49:08] *** Joins: bebyx (~Thunderbi@user/bebyx)
[13:49:35] *** Joins: PJBoy (~PJBoy@user/pjboy)
[14:06:39] *** Joins: Mat_42 (~mat_42@2001:1458:204:1::101:b65c)
[14:10:48] *** Joins: magla (~gelignite@d5365b83.access.ecotel.net)
[14:11:02] *** Quits: Mat_42 (~mat_42@2001:1458:204:1::101:b65c) (Ping timeout: 260 seconds)
[14:38:27] *** Joins: markong (~kvirc@213.146.188.203)
[14:50:14] *** Quits: magla (~gelignite@d5365b83.access.ecotel.net) (Read error: Connection reset by peer)
[14:50:33] *** Joins: magla (~gelignite@d5365b83.access.ecotel.net)
[14:53:37] *** magla is now known as jellyknight
[15:17:25] *** Joins: vnf (~vnf@85.174.194.51)
[15:18:28] *** Quits: vnf (~vnf@85.174.194.51) (Read error: Connection reset by peer)
[15:18:45] *** Joins: vnf (~vnf@85.174.194.51)
[15:32:31] *** Joins: CalamityToo (~CalamityB@user/CalamityBlue)
[15:34:58] *** Quits: CalamityBlue (~CalamityB@user/CalamityBlue) (Ping timeout: 260 seconds)
[15:37:21] *** Quits: joji (~jojo@86.4.72.180) (Quit: Leaving)
[15:56:07] *** Quits: vnf (~vnf@85.174.194.51) (Quit: Leaving)
[16:22:06] *** Quits: yosef` (~user@223.73.113.250) (Remote host closed the connection)
[16:38:44] *** Joins: vnf (~vnf@85.174.194.51)
[16:53:59] *** Joins: Guest69 (~Guest69@ip68-105-113-105.sd.sd.cox.net)
[16:55:50] *** Joins: Tazy (~Tazmainia@2001:1c02:1708:6800:69aa:9de:e851:cacd)
[17:04:03] *** Quits: Cyp (~cyp@213.237.84.236) (Excess Flood)
[17:04:32] *** Joins: Cyp (~cyp@213.237.84.236)
[17:38:36] *** Quits: dld (~davidlowr@2601:197:600:1210:295d:ca2a:3a31:19f2) (Ping timeout: 240 seconds)
[17:48:18] *** Quits: PJBoy (~PJBoy@user/pjboy) (Quit: Ping timeout: 252 seconds)
[17:52:18] *** Joins: argonautx (~argonautx@i5E8672F6.versanet.de)
[17:52:41] *** Joins: PJBoy (~PJBoy@user/pjboy)
[18:23:55] *** Joins: Sarma (~Amras@user/Amras)
[18:27:15] <Sarma> I'm looking at an existing library, which happens to have a custom Optional<T> class. https://github.com/mosra/corrade/blob/0a0bc1b9dadcb94044a4623067f5be30a67fec6d/src/Corrade/Containers/Optional.h#L514
[18:28:00] <Sarma> What I think it happening is, this operator= is supposed to be defined only for Ts which are swappable/movable, and mine isn't.
[18:29:57] <Sarma> Thing is, if I'm reading the comments right (especially line 538), this is supposed to throw a runtime error when I try to use the = operator; but what's actually happening is that I'm getting a compile-time error when I try to specialize T to a a non-swappable type.
[18:31:00] <Sarma> So my question is, what's the point of checking against std::is_nothrow_move_assignable<T> if I can't compile the class in the first place?
[18:33:22] *** Joins: dld (~davidlowr@107.126.253.180)
[18:35:12] <Sarma> relevant loc: template<class T> Optional<T>& Optional<T>::operator=(Optional<T>&& other) noexcept(std::is_nothrow_move_assignable<T>::value) { std::swap(other._value, _value); }
[18:39:07] *** Quits: dld (~davidlowr@107.126.253.180) (Ping timeout: 268 seconds)
[18:40:37] *** Joins: dld (~davidlowr@107.126.253.180)
[18:43:21] *** Joins: Mat_42 (~mat_42@2001:1458:204:1::102:b65c)
[18:45:58] *** Joins: Cyp_ (~cyp@213.237.84.236)
[18:46:23] *** Quits: Cyp (~cyp@213.237.84.236) (Ping timeout: 260 seconds)
[18:47:59] *** Quits: Mat_42 (~mat_42@2001:1458:204:1::102:b65c) (Ping timeout: 256 seconds)
[19:03:02] *** Quits: Cyp_ (~cyp@213.237.84.236) (Quit: Konversation terminated!)
[19:04:03] *** Joins: Cyp_ (~cyp@213.237.84.236)
[19:06:13] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 260 seconds)
[19:06:20] *** Quits: dld (~davidlowr@107.126.253.180) (Ping timeout: 246 seconds)
[19:07:51] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[19:13:45] *** Quits: Cyp_ (~cyp@213.237.84.236) (Excess Flood)
[19:14:17] *** Joins: Cyp_ (~cyp@213.237.84.236)
[19:15:27] *** Quits: jellyknight (~gelignite@d5365b83.access.ecotel.net) (Quit: Stay safe!)
[19:16:45] *** Joins: Mat_42 (~mat_42@2001:1458:204:1::102:b65c)
[19:21:25] *** Quits: Mat_42 (~mat_42@2001:1458:204:1::102:b65c) (Ping timeout: 256 seconds)
[19:22:00] *** Joins: Inline (~Inline@p200300cd47090700f6a7abc6bfc79784.dip0.t-ipconnect.de)
[19:28:34] *** Joins: dld (~davidlowr@2620:6e:6000:2900:38c1:e5a4:b065:9eb3)
[19:50:08] *** Joins: Mat_42 (~mat_42@194.12.130.217)
[19:54:58] *** Quits: Mat_42 (~mat_42@194.12.130.217) (Ping timeout: 268 seconds)
[20:00:45] *** Quits: argonautx (~argonautx@i5E8672F6.versanet.de) (Quit: Leaving)
[20:05:07] *** Quits: vnf (~vnf@85.174.194.51) (Quit: Leaving)
[20:13:58] <Alipha> Sarma: that's not what noexcept means. Ignoring noexcept for now, if your T is not movable, then Optional<T> is not movable, and yes, you'll get a compile error.
[20:15:53] <Alipha> If you have a function `void foo() noexcept(true);` then that means that foo might throw an exception. If you have `void foo() noexcept(false);` then that means foo won't throw an exception (and if foo does internally throw an exception, it will not propogate out of foo--instead, std::terminate will get called)
[20:18:09] <Alipha> So, if T has a move assignment operator, that move assignment either might throw an exception during its operation (eg, it has to dynamically allocate memory and allocation can fail) or that the move assignment operator guarantees not to throw an exception
[20:18:42] <Sarma> I see!
[20:19:41] <Alipha> So all this `noexcept(std::is_nothrow_move_assignable<T>::value)` business is doing is saying "if T's move op= might throw an exception, then Optional<T>'s op= might throw an exception. But if T's op= won't throw an exception, then Optional<T> won't throw an exception"
[20:19:43] <Sarma> thanks
[20:21:22] *** Joins: sonic (~sonic@user/sonic)
[20:24:05] *** Joins: sh00p (~z@89-253-71-70.customers.ownit.se)
[20:25:51] <Sarma> If I wanted Optional to compile for nonmovable T, so long as the operator wasn't used, would I be looking at concepts?
[20:26:32] *** Joins: magla (~gelignite@d5365b83.access.ecotel.net)
[20:27:39] <Sarma> template<T> requires is_swappable<T> && is_movable<T> â€¦ operator=(â€¦); ?
[21:01:22] *** Joins: kariosfox (~kariosfox@87.116.234.22)
[21:23:13] *** Joins: RoKenn (~RoKenn@2001:a61:35f0:c501:9056:bc03:7a33:55af)
[21:23:13] *** Quits: RoKenn (~RoKenn@2001:a61:35f0:c501:9056:bc03:7a33:55af) (Changing host)
[21:23:13] *** Joins: RoKenn (~RoKenn@user/rokenn)
[21:40:02] *** Joins: vnf (~vnf@85.174.194.51)
[21:52:09] *** Quits: vnf (~vnf@85.174.194.51) (Quit: Leaving)
[21:53:38] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 246 seconds)
[22:24:46] <Alipha> Sarma: you could use concepts or sfinae, yes, but that's unnecessary. just don't use Optional<T>'s move assignment operator and you won't get an error
[22:25:43] *** Joins: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d)
[22:48:33] *** Quits: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d) (Remote host closed the connection)
[22:49:07] *** Joins: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d)
[22:53:53] *** Quits: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d) (Ping timeout: 248 seconds)
[23:04:19] *** Joins: seninha (~seninha@user/seninha)
[23:06:17] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[23:09:04] *** Joins: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d)
[23:41:49] *** Quits: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d) (Remote host closed the connection)
[23:42:21] *** Joins: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d)
[23:46:41] *** Quits: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d) (Ping timeout: 248 seconds)
