[00:04:14] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Quit: The Lounge - https://thelounge.chat)
[00:06:32] *** Quits: mei3 (~mei@user/mei) (Ping timeout: 240 seconds)
[00:08:44] *** Joins: internut (~internut@2601:280:4e00:7b70:383f:ec0b:a2b9:c5da)
[00:09:51] *** Joins: neurocyte0132889 (~neurocyte@212.232.89.58)
[00:09:51] *** Quits: neurocyte0132889 (~neurocyte@212.232.89.58) (Changing host)
[00:09:51] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[00:13:51] *** Quits: anticw (~anticw@157-131-246-230.fiber.dynamic.sonic.net) (Remote host closed the connection)
[00:15:44] *** Joins: anticw (~anticw@157-131-246-230.fiber.dynamic.sonic.net)
[00:18:03] *** Quits: jcajka (~jcajka@ip-86-49-254-207.net.upcbroadband.cz) (Quit: Leaving)
[00:19:23] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[00:28:25] <dreamcat4> thanks for all your help the other day guys. raised my pr fix on upstream repo now
[00:29:13] *** Joins: sord937_ (~sord937@gateway/tor-sasl/sord937)
[00:29:21] <dreamcat4> its just for a legacy software i still need to keep around / keep using https://github.com/michaelsauter/crane/pull/360
[00:31:55] <Tv_> dreamcat4: github.com/michaelsauter/crane/v3@latest
[00:32:02] <dreamcat4> but here is a more important question now:  after go will deprecates downloading anything in `go get`... will there be any new `-u` update flag for updating executable tools on `go install` ? because ATM `go install` does not? seem to have any similar `-u` flag
[00:32:33] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Ping timeout: 276 seconds)
[00:32:41] <dreamcat4> so maybe that is helpful feature i think. for auto updates
[00:33:17] <Tv_> yeah that just looks like a broken library. docker ecosystem -> not surprised.
[00:34:48] <dreamcat4> i tested it on my own fork already. the proposed fix should work if he follows those instructions
[00:35:39] <dreamcat4> its a mature / pld project now. very little or 0 new activity. just need to keep it around for legacy ussage
[00:36:11] <dreamcat4> thanks again for the help / assistence with it
[00:39:55] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:41:25] *** Joins: jla (~jordi@64.225.79.195)
[00:41:32] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 240 seconds)
[00:46:01] *** Joins: jpw (~jpw@user/jpw)
[00:51:32] *** Joins: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca)
[00:51:49] <b0nn> dreamcat4: If Go deprecates `go get` or `go install` then, you'll still be able to fall back on what's happening under the hood with those (ie. `git clone; cd whatevs; go build -o $GOPATH/bin/whatevs`
[00:53:03] *** Quits: jla (~jordi@64.225.79.195) (Ping timeout: 256 seconds)
[00:56:10] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:a917:ef6e:7da9:99ec)
[00:59:54] <dreamcat4> atm am following this method, https://marcofranssen.nl/manage-go-tools-via-go-modules
[01:00:31] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:a917:ef6e:7da9:99ec) (Ping timeout: 245 seconds)
[01:00:33] <dreamcat4> and have a `tools.go` which lists all my cmdline go tools as requires
[01:01:43] <dreamcat4> it works! (for now, until they deprecate `go get` for executables....)
[01:02:25] <b0nn> heh, I was thinking this morning (as I was learning another tech) that if the new method isn't making things *easier* then what's the point
[01:03:19] *** Quits: sord937_ (~sord937@gateway/tor-sasl/sord937) (Quit: sord937_)
[01:04:11] <Tv_> go get should work just fine for adjusting dependency versions in your go.mod event after it starts refusing to install commands
[01:04:25] <Tv_> that's literally its job
[01:04:32] <Tv_> (in a post-modules world)
[01:04:43] <b0nn> that page you link too, the tools.go is really just listing the dependencies that your dependencies should have in /their/ go.mod
[01:05:15] <Tv_> tools.go is used to persist tool deps past `go mod tidy`
[01:05:46] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[01:18:20] *** Quits: LtHummus (~lthummus@97.126.106.255) (Ping timeout: 244 seconds)
[01:21:25] *** Joins: rcernin (~rcernin@124.190.139.235)
[01:23:43] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[01:25:31] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[01:26:29] *** Joins: LtHummus (~lthummus@97-126-116-82.tukw.qwest.net)
[01:27:08] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 246 seconds)
[01:27:23] *** Joins: fikran (~fikran@user/fikran)
[01:28:45] *** Quits: dr0n (~nabromov@94.11.23.235) (Quit: WeeChat 3.3)
[01:33:11] *** Joins: silentwarg (~silentwar@cpe-76-171-170-68.socal.res.rr.com)
[01:34:15] *** Quits: silentwarg (~silentwar@cpe-76-171-170-68.socal.res.rr.com) (Client Quit)
[01:36:25] *** Joins: Leon_ (~Leon@126.sub-174-198-194.myvzw.com)
[01:36:49] *** Leon_ is now known as Guest9154
[01:37:32] *** Quits: leonthemisfit (~Leon@user/leonthemisfit) (Read error: Connection reset by peer)
[01:44:45] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[01:51:38] *** Joins: leonthemisfit (~Leon@126.sub-174-198-194.myvzw.com)
[01:51:38] *** Quits: leonthemisfit (~Leon@126.sub-174-198-194.myvzw.com) (Changing host)
[01:51:38] *** Joins: leonthemisfit (~Leon@user/leonthemisfit)
[01:51:52] *** Quits: Guest9154 (~Leon@126.sub-174-198-194.myvzw.com) (Read error: Connection reset by peer)
[01:55:16] *** Joins: Atque (~Atque@user/atque)
[01:57:42] *** Quits: rek2 (~ReK2@47.62.9.10) (Read error: Connection reset by peer)
[02:04:45] *** Joins: gggpkm (~gggpkm@60.10.194.43)
[02:17:34] *** Quits: dansan (~daniel@75.81.148.51) (Quit: The C preprocessor is a pathway to many abilities some consider to be unnatural.)
[02:18:05] *** Quits: normen (~normen@p54b35890.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[02:22:22] *** Quits: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca) (Remote host closed the connection)
[02:23:51] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[02:24:20] *** Joins: normen (~normen@p54b35890.dip0.t-ipconnect.de)
[02:25:05] *** Joins: dansan (~daniel@75.81.148.51)
[02:28:32] *** Quits: normen (~normen@p54b35890.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[02:29:11] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[02:30:27] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[02:31:05] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[02:37:40] *** Quits: mollerup (~nmollerup@customer-2a00-7660-1612-0168-cfa8-be86-5a22-ee27.ip6.gigabit.dk) (Read error: Connection reset by peer)
[02:37:58] *** Joins: nmollerup (~nmollerup@customer-2a00-7660-1612-0168-87a5-d5d9-e50d-d770.ip6.gigabit.dk)
[02:40:01] *** Quits: nmollerup (~nmollerup@customer-2a00-7660-1612-0168-87a5-d5d9-e50d-d770.ip6.gigabit.dk) (Remote host closed the connection)
[02:40:09] *** Quits: LtHummus (~lthummus@97-126-116-82.tukw.qwest.net) (Ping timeout: 256 seconds)
[02:42:23] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[02:42:43] *** Joins: normen (~normen@p200300d71739c00099423fd7cc626c15.dip0.t-ipconnect.de)
[02:43:06] *** Quits: faceonkeyboard (~faceonkey@anquietas.harting.hosting) (Ping timeout: 260 seconds)
[02:44:47] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[02:46:33] *** Joins: Fault (~Fault@152.70.112.168)
[02:46:46] *** Joins: nmollerup (~nmollerup@customer-212-237-103-18.ip4.gigabit.dk)
[02:47:22] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Client Quit)
[02:47:46] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[02:49:09] *** Joins: faceonkeyboard (~faceonkey@anquietas.harting.hosting)
[02:49:49] *** Quits: Fault (~Fault@152.70.112.168) (Client Quit)
[02:51:07] *** Joins: darkapex_ (~darkapex@user/darkapex)
[02:52:02] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[02:52:20] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 268 seconds)
[02:52:33] <dreamcat4> yep
[02:52:40] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[02:52:59] <dreamcat4> that is the reason. can confirm
[02:53:08] *** Joins: Fault (~Fault@152.70.112.168)
[02:56:44] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[02:57:02] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[03:00:39] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[03:10:08] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[03:13:17] *** Joins: Fault (~Fault@152.70.112.168)
[03:17:26] *** Joins: cyrus_mc (~cyrus_mc@45.62.180.58)
[03:20:06] *** Joins: gggpkm_ (~gggpkm@60.10.194.43)
[03:21:39] <cyrus_mc> Not sure if anyone can help me with this as I am not sure if it is a golang specific thing or an issue with the library I am using (Vault API). Have service in k8s exposed via Ingress. Code in question connects to service through an k8s externalName service. When connecting it appears to not be setting the host header correctly as it errors with
[03:21:40] <cyrus_mc> {"error": "Put https://vault.default/v1/auth/k8s/in-cluster/login: x509: certificate is valid for ingress.local, not vault.default"}. That error is thrown because the ingress basically does name based virtual hosts and the host being connected to is the default. Yet if I just wget that same URL it works just fine.
[03:23:18] *** Quits: gggpkm (~gggpkm@60.10.194.43) (Ping timeout: 260 seconds)
[03:25:18] <tpr> that's very, very unlikely golang specific
[03:26:28] <tpr> how are you setting the host header then? if you change it to use the expected host header, does it work?
[03:27:13] <tpr> also, where is that error coming from? maybe your wget invocation is using different routing / headers?
[03:29:20] <seebs> hmm
[03:30:12] <seebs> x509, you say? there is exactly one case i know of where Go has an x509 case that has been an issue: https://github.com/golang/go/issues/24151 and related stuff
[03:31:19] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[03:31:39] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:31:48] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:32:02] *** Joins: gggpkm__ (~gggpkm@60.10.194.43)
[03:32:47] *** Quits: internut (~internut@2601:280:4e00:7b70:383f:ec0b:a2b9:c5da) (Remote host closed the connection)
[03:34:41] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[03:35:01] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[03:35:07] *** Quits: gggpkm_ (~gggpkm@60.10.194.43) (Ping timeout: 256 seconds)
[03:36:43] *** Joins: fikran (~fikran@user/fikran)
[03:37:11] *** Joins: Fault (~Fault@152.70.112.168)
[03:45:26] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[03:50:43] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[03:51:02] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[03:53:10] *** Quits: theoceaniscool (~theoceani@119.12.232.133) (Ping timeout: 260 seconds)
[03:53:56] *** Quits: Rayke (rayke@user/rayke) (Quit: WeeChat 3.3)
[04:03:38] *** Joins: Rayke (rayke@user/rayke)
[04:06:52] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[04:07:09] *** Quits: normen (~normen@p200300d71739c00099423fd7cc626c15.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[04:08:09] <pjs> is go.work in 1.17 or it's new in 1.18?
[04:08:21] *** Joins: Fault (~Fault@152.70.112.168)
[04:08:29] <Tv_> seebs: that doesn't look relevant
[04:09:06] <Tv_> cyrus_mc: sounds more like you make a cert for one hostname, while reaching the service via another; the fix is to make the cert for the correct hostname
[04:09:07] <pjs> nvm, seems it's coming in 1.18
[04:09:23] <seebs> it doesn't but it's the closest i could think of to potentially being a Go-specific thing, and for all i know the common name thing is related to why curl is finding/accepting the name for another host name while go isn't
[04:09:25] *** Joins: internut (~internut@2601:280:4e00:7b70:383f:ec0b:a2b9:c5da)
[04:09:59] <Tv_> seebs: one thing in CN and another in SAN? yeah that'd be a devious misconfiguration i guess.
[04:11:46] *** Quits: Fault (~Fault@152.70.112.168) (Client Quit)
[04:12:56] *** Joins: Fault (~Fault@152.70.112.168)
[04:14:32] *** Quits: internut (~internut@2601:280:4e00:7b70:383f:ec0b:a2b9:c5da) (Ping timeout: 240 seconds)
[04:17:11] <cyrus_mc> tpr I don't actually set header. I just pass the hostname to the API call and it makes the call. Since it is returning the default ingress cert that to me leads me to believe it isn't setting it, even though on validation of cert it tries to validate via the name I specified. I agree very unlikely go but figured I would ask.
[04:19:29] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[04:20:39] *** Joins: Fault (~Fault@152.70.112.168)
[04:23:47] *** Quits: cyrus_mc (~cyrus_mc@45.62.180.58) (Quit: Connection closed)
[04:28:46] *** lunchd is now known as launchd
[04:31:02] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[04:33:56] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[04:34:59] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[04:35:26] *** Joins: Fault (~Fault@152.70.112.168)
[04:36:37] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 250 seconds)
[04:41:00] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[04:41:32] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[04:42:10] *** Joins: Fault (~Fault@152.70.112.168)
[04:45:18] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:46:01] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:47:36] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:50:33] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[04:57:35] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[05:04:25] *** Joins: LtHummus (~lthummus@97-126-101-182.tukw.qwest.net)
[05:05:26] *** Joins: frost (~frost@user/frost)
[05:06:34] *** Joins: koo5_ (~quassel@51.140.155.227)
[05:12:05] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[05:13:26] *** Joins: Fault (~Fault@152.70.112.168)
[05:17:03] <Sam> siXy: Sorry, apparently wasn't joined to this room from my phone and missed your comment earlier. You can have tests in foo or foo_test packages, it will work just fine. It's undocumented for some reason, but it's a common enough way to write tests.
[05:17:27] <Sam> No need for a separate tests directory.
[05:18:29] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-0496-0e7e-86fc-e34f.res6.spectrum.com)
[05:18:46] <Sam> As far as I can tell I'm just using TestMain like normal (well, not normal, this is only like the second time I've ever needed to use it), but if I don't have test main the foo_test package runs fine, if I do it complains that foo and foo_test exist.
[05:21:38] <Sam> I do see some uses of TestMain in packages with foo_test packages, but none that include both tests in foo and tests in foo_test.
[05:23:20] *** Joins: normen (~normen@p200300d71739c00099423fd7cc626c15.dip0.t-ipconnect.de)
[05:24:13] <dg> I thought there was some special handling for _internal_test.go, so you can mix the test packages, although can't find actual docs on that now
[05:24:20] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-0496-0e7e-86fc-e34f.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[05:24:29] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[05:28:58] *** Quits: normen (~normen@p200300d71739c00099423fd7cc626c15.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[05:31:27] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:381f:5f31:286f:e038)
[05:32:04] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[05:32:29] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:33:24] *** Quits: tsline (~speakin@116.227.20.19) (Read error: Connection reset by peer)
[05:33:44] *** Joins: Fault (~Fault@152.70.112.168)
[05:33:59] *** Quits: andlabs (~andlabs@2a00:79e1:abc:1a12:8d7f:a8b0:5dd0:a609) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:34:14] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:381f:5f31:286f:e038) (Ping timeout: 246 seconds)
[05:34:38] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[05:35:48] *** ezzieygu1wuf is now known as ezzieyguywuf
[05:44:01] <Tv_> dg: nope, never seen anything like that
[05:44:17] *** Joins: normen (~normen@p54b35890.dip0.t-ipconnect.de)
[05:44:19] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[05:44:57] <Tv_> documentation for test package names: "Test files that declare a package with the suffix "_test" will be compiled as a separate package, and then linked and run with the main test binary." https://pkg.go.dev/cmd/go#hdr-Test_packages
[05:45:06] <Tv_> it's not very prominent, for sure
[05:45:14] *** Quits: xlei (znc@pool-68-129-84-118.nycmny.fios.verizon.net) (Read error: Connection reset by peer)
[05:46:04] *** Joins: fikran (~fikran@user/fikran)
[05:46:15] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[05:47:04] *** Joins: Fault (~Fault@152.70.112.168)
[05:49:38] *** Quits: normen (~normen@p54b35890.dip0.t-ipconnect.de) (Ping timeout: 246 seconds)
[05:56:00] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:381f:5f31:286f:e038)
[05:58:44] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:381f:5f31:286f:e038) (Ping timeout: 246 seconds)
[06:01:22] *** Quits: alzgh (~alzgh@user/alzgh) (Ping timeout: 256 seconds)
[06:02:31] <b0nn> Sam: so, if I read you right, you have some tests in package foo (files *_test.go), and some tests in foo_test (also files *_test.go), and TestMain is in package foo_test? but when you  run go test, it explodes?
[06:02:44] *** Joins: normen (~normen@p200300d71739c00099423fd7cc626c15.dip0.t-ipconnect.de)
[06:04:09] *** Joins: andlabs (~andlabs@2604:ca00:17c:a50:10c1:ce75:7669:c08a)
[06:06:00] <Sam> yup
[06:07:14] <Sam> Something about adding the TestMain makes it blow up, even though it works perfectly fine without it.
[06:07:52] *** Joins: alzgh (alzgh@user/alzgh)
[06:08:09] <Sam> Unfortunately, I can't change the foo_test back to foo. Even if I didn't want to use it as a way to make sure I'm only testing the public interface and not internal details, it would result in import loops (one of the nice things about foo_test is that you can import things that themselves import foo)
[06:09:02] <Tv_> Sam: one route is to stop using TestMain.. subtests removed my need for it just about everywhere
[06:09:41] <Tv_> i mean, sounds like a bug, sure, but sometimes a workaround is good enough, and TestMain is kind of a huge kludge, life is better without it
[06:10:04] <Sam> I don't think that's true in all cases, though in this case I could remove it (although it would feel like more of a hack)
[06:10:26] <Tv_> what are you doing with TestMain, where it feels justified?
[06:10:57] *** Joins: andlabs_ (~andlabs@2604:ca00:17c:a50:8c2b:7d09:d851:36d3)
[06:11:01] <Sam> Here it's actually a tool in a file with a build constraint. If I do go test -tags exportjson or something it builds with the file with TestMain and exports some table driven tests as a json blob for other libraries that do the same thing to use (sort of exporting integration tests that eg. a Python version of the thing coudl use to make sure it's compatible with the Go thing)
[06:11:32] <Sam> It could just be a regular test that gets run and does that instead of actually testing anything, but then all the other tests would run too and it feels like (more of) a hack
[06:12:23] <Tv_> oh, interesting approach. i still use TestMain to fork+self-exec a helper with specific low-level behavior
[06:12:43] *** Joins: andlabs__ (~andlabs@2604:ca00:17c:a50:a491:3778:785b:85ff)
[06:13:05] <Tv_> Sam: sounds like you could just use a package main that imports a package also imported by the tests
[06:13:21] <Sam> Yah, that's the only other way I've used it (tests for a client/server library that have integration tests against various servers, so they fork+self-exec themselves with a flag saying "run a server" so that the client part can test against its own server part using the same testing harness as the other servers)
[06:13:43] <Sam> Tv_: I could do that, but then I'd have to move the tests out into their own package, which feels weird.
[06:13:49] <Sam> Or the test data, rather.
[06:13:53] <Tv_> yeah
[06:14:02] *** Quits: andlabs (~andlabs@2604:ca00:17c:a50:10c1:ce75:7669:c08a) (Ping timeout: 240 seconds)
[06:14:09] <Tv_> or make data authoritative not the code and read it on the fly from testdata
[06:14:28] <Sam> Maybe I should do this a different way: generate the JSON once, move it somewhere else, then write a tool to generate the tests from the JSON and when I want to add new tests modify the json and run go generate instead.
[06:14:34] <Sam> heh, oops, yes, that
[06:14:40] *** Quits: rcernin (~rcernin@124.190.139.235) (Quit: WeeChat 3.3)
[06:14:58] *** Joins: rcernin (~rcernin@124.190.139.235)
[06:15:14] <b0nn> hmm, works fine on my machine
[06:15:28] <Sam> I could do it on the fly too; either way. As long as the data is authoritative, which probably makes more sense anyways since the whole point is to let other libraries use the same tests.
[06:15:32] *** Quits: andlabs_ (~andlabs@2604:ca00:17c:a50:8c2b:7d09:d851:36d3) (Ping timeout: 240 seconds)
[06:15:47] <Tv_> Sam: some languages are more equal than others ;)
[06:18:34] *** Joins: andlabs (~andlabs@2604:ca00:17c:a50:c9fc:238d:7585:4b3b)
[06:18:36] <Sam> b0nn: I just made a little minimal example and it seems to work fine too… no idea how, as the tests this is in are nothing special. I have no idea what would be different between them and this example
[06:20:03] <b0nn> fmt.Println("Here") to the rescue?
[06:20:42] *** Joins: voidnoir0_ (uid343973@id-343973.tinside.irccloud.com)
[06:21:29] *** Quits: andlabs__ (~andlabs@2604:ca00:17c:a50:a491:3778:785b:85ff) (Ping timeout: 246 seconds)
[06:22:46] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: Textual IRC Client: www.textualapp.com)
[06:24:27] *** Joins: cloudfstrife (~cloud@220.196.60.65)
[06:25:02] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[06:25:51] *** Quits: cloudfstrife (~cloud@220.196.60.65) (Client Quit)
[06:27:04] <Sam> *facepalm* I just realized what it is.
[06:27:23] <Sam> The file with TestMain and package foo_test isn't actually suffixed with _test.go
[06:27:41] <Tv_> Sam: this one time i stared at a *_text.go for a very long time
[06:27:46] *** Joins: andlabs_ (~andlabs@2604:ca00:17c:a50:a5f6:69f8:b2a6:22e1)
[06:27:58] <Sam> yuuup
[06:28:47] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[06:29:26] *** Joins: gggpkm_ (~gggpkm@60.10.194.43)
[06:30:56] *** Quits: andlabs (~andlabs@2604:ca00:17c:a50:c9fc:238d:7585:4b3b) (Ping timeout: 246 seconds)
[06:31:25] <b0nn> !next
[06:31:27] <b0nn> :)
[06:32:29] *** Quits: gggpkm__ (~gggpkm@60.10.194.43) (Ping timeout: 256 seconds)
[06:33:32] *** Quits: krux02 (~krux02@p200300e817076e0044b6cdb56690220d.dip0.t-ipconnect.de) (Quit: Leaving)
[06:34:24] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[06:44:40] *** Joins: andlabs (~andlabs@2604:ca00:17c:a50:b17f:b6a3:7de:493f)
[06:45:20] *** Quits: andlabs (~andlabs@2604:ca00:17c:a50:b17f:b6a3:7de:493f) (Client Quit)
[06:46:58] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[06:47:46] *** Joins: Fault (~Fault@152.70.112.168)
[06:48:41] *** Quits: andlabs_ (~andlabs@2604:ca00:17c:a50:a5f6:69f8:b2a6:22e1) (Ping timeout: 264 seconds)
[06:49:46] *** Joins: internut (~internut@2601:280:4e00:7b70:383f:ec0b:a2b9:c5da)
[06:53:02] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 240 seconds)
[06:54:25] *** Quits: internut (~internut@2601:280:4e00:7b70:383f:ec0b:a2b9:c5da) (Ping timeout: 250 seconds)
[07:01:59] *** Joins: trewq (~trewq@li70-4.members.linode.com)
[07:06:14] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[07:14:49] *** Joins: andlabs (~andlabs@70.107.171.168)
[07:16:41] *** Quits: rcernin (~rcernin@124.190.139.235) (Read error: Connection reset by peer)
[07:17:02] *** Joins: rcernin (~rcernin@124.190.139.235)
[07:23:01] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 250 seconds)
[07:28:13] *** Quits: normen (~normen@p200300d71739c00099423fd7cc626c15.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[07:29:12] *** Quits: alzgh (alzgh@user/alzgh) (Ping timeout: 256 seconds)
[07:30:18] *** Quits: mooff (mooff@awful.cooking) (Quit: Quit)
[07:30:49] *** Joins: INeedAHandle (~INeedAHan@user/ineedahandle)
[07:31:58] *** Quits: trewq (~trewq@li70-4.members.linode.com) (Quit: Lost terminal)
[07:32:18] *** Joins: mooff (mooff@awful.cooking)
[07:33:53] *** Quits: INeedAHandle (~INeedAHan@user/ineedahandle) (Client Quit)
[07:34:37] *** Joins: alzgh (~alzgh@user/alzgh)
[07:43:20] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[07:43:25] *** Joins: normen (~normen@p200300d71739c00099423fd7cc626c15.dip0.t-ipconnect.de)
[07:52:39] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[07:53:02] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[07:55:25] *** Joins: fikran (~fikran@user/fikran)
[08:00:30] *** Joins: oxum (~oxum@122.181.206.220)
[08:01:27] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 256 seconds)
[08:03:49] *** Quits: oxum (~oxum@122.181.206.220) (Remote host closed the connection)
[08:06:45] *** Joins: oxum (~oxum@122.181.206.220)
[08:12:01] *** Quits: oxum (~oxum@122.181.206.220) (Remote host closed the connection)
[08:14:49] *** Joins: oxum (~oxum@122.181.206.220)
[08:22:02] *** Quits: rcernin (~rcernin@124.190.139.235) (Ping timeout: 240 seconds)
[08:22:10] *** Quits: oxum (~oxum@122.181.206.220) (Remote host closed the connection)
[08:22:24] *** Joins: oxum (~oxum@122.181.206.220)
[08:24:46] *** Joins: bitreverb (~bitcycle@174-21-36-109.tukw.qwest.net)
[08:24:59] *** Joins: raktajino (~raktajino@143.244.180.209)
[08:25:26] *** Parts: raktajino (~raktajino@143.244.180.209) ()
[08:25:35] *** Quits: oxum (~oxum@122.181.206.220) (Remote host closed the connection)
[08:27:00] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[08:27:03] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[08:27:38] *** Joins: gggpkm__ (~gggpkm@60.10.194.43)
[08:27:56] *** Joins: Fault (~Fault@152.70.112.168)
[08:28:33] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[08:30:10] *** Joins: gggpkm (~gggpkm@111.63.44.13)
[08:30:55] *** Quits: gggpkm_ (~gggpkm@60.10.194.43) (Ping timeout: 256 seconds)
[08:31:50] *** Quits: Fault (~Fault@152.70.112.168) (Client Quit)
[08:32:32] *** Joins: Fault (~Fault@152.70.112.168)
[08:32:37] *** Quits: gggpkm__ (~gggpkm@60.10.194.43) (Ping timeout: 256 seconds)
[08:34:35] *** Quits: erani (erani@kapsi.fi) (Ping timeout: 268 seconds)
[08:36:23] *** Joins: erani (erani@kapsi.fi)
[08:38:58] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:e088:bb60:5ffe:f456)
[08:43:06] *** Joins: gggpkm_ (~gggpkm@111.63.44.13)
[08:46:02] *** Quits: gggpkm (~gggpkm@111.63.44.13) (Ping timeout: 240 seconds)
[08:47:18] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[08:51:02] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:e088:bb60:5ffe:f456) (Ping timeout: 240 seconds)
[08:53:24] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[08:55:11] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Client Quit)
[08:59:49] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:e088:bb60:5ffe:f456)
[09:02:22] *** Joins: rcernin_ (~rcernin@124.190.139.235)
[09:02:33] *** Quits: rcernin_ (~rcernin@124.190.139.235) (Client Quit)
[09:02:47] *** Joins: rcernin_ (~rcernin@124.190.139.235)
[09:02:51] *** Joins: oxum (~oxum@122.181.206.220)
[09:03:54] *** Joins: Fault (~Fault@152.70.112.168)
[09:05:17] *** Joins: bkircher (~bkircher@2001:a61:25e1:a901:f7b9:7a2c:5cbb:7cb)
[09:05:29] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:e088:bb60:5ffe:f456) (Ping timeout: 264 seconds)
[09:07:32] *** Quits: oxum (~oxum@122.181.206.220) (Ping timeout: 240 seconds)
[09:18:16] *** Joins: oxum (~oxum@122.181.206.220)
[09:20:35] *** Joins: jpw (~jpw@user/jpw)
[09:20:50] *** Quits: gspbirel56 (~gspbirel5@c-73-214-199-7.hsd1.pa.comcast.net) (Quit: The Lounge - https://thelounge.chat)
[09:22:32] *** Joins: gspbirel56 (~gspbirel5@c-73-214-199-7.hsd1.pa.comcast.net)
[09:22:54] *** Joins: chovy (~chovy@tilde.club)
[09:24:18] *** Joins: gspbirel565 (~gspbirel5@c-73-214-199-7.hsd1.pa.comcast.net)
[09:26:38] *** Joins: internut (~internut@2601:280:4e00:7b70:383f:ec0b:a2b9:c5da)
[09:27:19] *** Quits: gspbirel56 (~gspbirel5@c-73-214-199-7.hsd1.pa.comcast.net) (Quit: The Lounge - https://thelounge.chat)
[09:27:19] *** gspbirel565 is now known as gspbirel56
[09:28:26] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[09:29:02] *** Quits: normen (~normen@p200300d71739c00099423fd7cc626c15.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[09:31:56] *** Quits: internut (~internut@2601:280:4e00:7b70:383f:ec0b:a2b9:c5da) (Ping timeout: 268 seconds)
[09:32:20] *** Quits: Tv_ (uid62079@user/tv/x-3144562) (Quit: Connection closed for inactivity)
[09:32:58] *** Quits: Wouter0100 (~Wouter010@entry.nbg.netvos.nl) (Remote host closed the connection)
[09:32:59] *** Quits: oxum (~oxum@122.181.206.220) (Remote host closed the connection)
[09:33:09] *** Joins: Wouter0100 (~Wouter010@entry.nbg.netvos.nl)
[09:33:57] *** Joins: oxum (~oxum@122.181.206.220)
[09:36:56] *** gggpkm_ is now known as gggpkm
[09:37:12] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[09:39:04] *** Joins: gggpkm_ (~gggpkm@60.10.194.43)
[09:40:23] *** Quits: oxum (~oxum@122.181.206.220) (Remote host closed the connection)
[09:42:02] *** Quits: gggpkm (~gggpkm@111.63.44.13) (Ping timeout: 240 seconds)
[09:44:03] *** Joins: normen (~normen@p54b35890.dip0.t-ipconnect.de)
[09:45:08] *** Joins: gggpkm__ (~gggpkm@111.63.44.13)
[09:45:58] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[09:47:55] *** Quits: spudly[m] (~spudly@2001:470:69fc:105::18) (Quit: Client limit exceeded: 20000)
[09:48:33] *** Quits: gggpkm_ (~gggpkm@60.10.194.43) (Ping timeout: 256 seconds)
[09:50:31] *** Quits: voidnoir0_ (uid343973@id-343973.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[09:57:55] *** Quits: iivvoo (~l@m3r.nl) (Quit: The Lounge - https://thelounge.chat)
[09:58:17] *** Joins: iivvoo (~l@m3r.nl)
[09:59:13] *** Joins: oxum (~oxum@122.181.206.220)
[10:01:09] *** Quits: d4ve (~d4ve@user/d4ve) (Remote host closed the connection)
[10:01:26] *** Joins: d4ve (~d4ve@user/d4ve)
[10:02:32] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[10:03:40] *** Joins: Fault (~Fault@152.70.112.168)
[10:04:02] *** Quits: oxum (~oxum@122.181.206.220) (Ping timeout: 240 seconds)
[10:04:16] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[10:04:46] *** Joins: fikran (~fikran@user/fikran)
[10:11:13] *** Quits: gspbirel56 (~gspbirel5@c-73-214-199-7.hsd1.pa.comcast.net) (Quit: The Lounge - https://thelounge.chat)
[10:12:31] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[10:14:07] *** Joins: gspbirel56 (~gspbirel5@c-73-214-199-7.hsd1.pa.comcast.net)
[10:14:37] *** Joins: oxum (~oxum@122.181.206.220)
[10:19:35] *** Quits: oxum (~oxum@122.181.206.220) (Ping timeout: 264 seconds)
[10:21:07] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 250 seconds)
[10:21:37] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:22:04] *** Joins: gggpkm_ (~gggpkm@60.10.194.43)
[10:23:00] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:24:23] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[10:25:02] *** Quits: gggpkm__ (~gggpkm@111.63.44.13) (Ping timeout: 240 seconds)
[10:29:07] *** Joins: jpw (~jpw@user/jpw)
[10:30:19] *** Joins: mrig (~AdiIRC@user/mrig)
[10:31:19] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[10:36:49] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:36:49] <Batzy> Does anyone have a golang postgres ORM that they like
[10:37:00] <Batzy> im trying go-pg and idk
[10:37:03] *** Joins: spudly[m] (~spudly@2001:470:69fc:105::18)
[10:37:09] <Batzy> can't even create a table with it
[10:37:16] <Batzy> the sample claims to but it sucks
[10:40:02] <iivvoo> I only know gorm, a bit
[10:41:09] <Batzy> i keep getting some error when i try to create a table that i havent selected a schema to create it in
[10:41:21] <Batzy> the doc doesnt mention anything about schema, i have their sample pretty exactly
[10:42:45] <Batzy> Oh looks like they rewrote it into another project now called bun
[10:42:48] <Batzy> nice
[10:48:17] <Batzy> jesus this is a nightmare... iivvoo is gorm any good?
[10:49:36] *** Quits: ItsNotGoodName0 (~ItsNotGoo@c-73-83-144-140.hsd1.wa.comcast.net) (Quit: The Lounge - https://thelounge.chat)
[10:50:05] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[10:50:23] *** Joins: ItsNotGoodName0 (~ItsNotGoo@c-73-83-144-140.hsd1.wa.comcast.net)
[10:50:27] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[10:50:44] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Client Quit)
[10:51:32] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[10:52:35] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 256 seconds)
[10:56:05] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Client Quit)
[11:02:49] *** Quits: gspbirel56 (~gspbirel5@c-73-214-199-7.hsd1.pa.comcast.net) (Quit: The Lounge - https://thelounge.chat)
[11:05:52] *** Joins: gspbirel56 (~gspbirel5@c-73-214-199-7.hsd1.pa.comcast.net)
[11:10:51] *** Quits: gggpkm_ (~gggpkm@60.10.194.43) (Remote host closed the connection)
[11:11:14] *** Joins: gggpkm_ (~gggpkm@123.113.191.141)
[11:18:47] <Batzy> iivvoo: why am i getting and error when trying to create a column after an AutoMigrate() that the relation doesnt exist?
[11:20:18] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[11:21:40] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Client Quit)
[11:21:48] <Batzy> Oh it worked!!!
[11:26:02] *** Joins: jcajka (~jcajka@ip-86-49-254-207.net.upcbroadband.cz)
[11:28:34] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[11:30:14] *** Quits: gspbirel56 (~gspbirel5@c-73-214-199-7.hsd1.pa.comcast.net) (Quit: The Lounge - https://thelounge.chat)
[11:30:24] *** Joins: jpw (~jpw@user/jpw)
[11:30:58] *** Joins: saschagrunert (~saschagru@46.128.124.46)
[11:33:23] *** Quits: darkapex_ (~darkapex@user/darkapex) (Ping timeout: 256 seconds)
[11:33:30] *** Joins: gspbirel56 (~gspbirel5@c-73-214-199-7.hsd1.pa.comcast.net)
[11:34:42] *** Joins: darkapex (~darkapex@user/darkapex)
[11:37:02] *** Quits: rcernin_ (~rcernin@124.190.139.235) (Ping timeout: 240 seconds)
[11:38:24] *** Joins: theoceaniscool (~theoceani@119.12.232.133)
[11:47:34] *** Joins: darkapex_ (~darkapex@user/darkapex)
[11:48:02] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 240 seconds)
[11:50:18] *** Joins: gggpkm__ (~gggpkm@123.113.177.236)
[11:51:07] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:51:19] *** Joins: oxum (~oxum@122.181.206.220)
[11:53:17] *** Quits: gggpkm_ (~gggpkm@123.113.191.141) (Ping timeout: 246 seconds)
[11:54:23] *** Quits: darkapex_ (~darkapex@user/darkapex) (Ping timeout: 268 seconds)
[11:56:16] *** Quits: oxum (~oxum@122.181.206.220) (Remote host closed the connection)
[11:59:54] *** Joins: monoxane9 (~monoxane@user/monoxane)
[12:02:25] *** Quits: monoxane (~monoxane@user/monoxane) (Ping timeout: 268 seconds)
[12:02:25] *** monoxane9 is now known as monoxane
[12:05:03] *** Joins: internut (~internut@2601:280:4e00:7b70:383f:ec0b:a2b9:c5da)
[12:06:59] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[12:10:53] *** Quits: internut (~internut@2601:280:4e00:7b70:383f:ec0b:a2b9:c5da) (Ping timeout: 264 seconds)
[12:11:59] *** Joins: darkapex (~darkapex@user/darkapex)
[12:12:29] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[12:14:07] *** Joins: fikran (~fikran@user/fikran)
[12:16:11] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[12:20:57] <b0nn> Batzy: It /sounds/ like the code didn't issue the "CONNECT" command, which determines which DB/schema that you are talking to (IIRC)
[12:21:21] <b0nn> the equivalent (in psql) would be \c <db>
[12:25:53] *** Joins: mei3 (~mei@user/mei)
[12:32:55] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:d0:c3cf:7d52:8ed)
[12:34:15] *** Quits: Kyros (~kyros@user/kyros) (Quit: ZNC 1.8.2 - https://znc.in)
[12:34:34] *** Joins: Kyros (~kyros@user/kyros)
[12:35:05] *** Joins: jla (~jordi@64.225.79.195)
[12:36:17] *** Quits: normen (~normen@p54b35890.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[12:38:08] *** Joins: arinov (~arinov@213.194.126.155)
[12:39:20] *** Joins: oxum (~oxum@122.181.206.220)
[12:46:37] *** Quits: oxum (~oxum@122.181.206.220) (Remote host closed the connection)
[12:46:58] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[12:54:06] <zkanda> Hello, I have an interface{} that contains some value, I want to convert it to a slice. How can I do that? Here's a sample code: https://play.golang.org/p/Tsm6F4FC3k-
[12:56:07] <ikke> zkanda: is the structure always the same?
[12:56:41] *** Quits: snits (~quassel@ip98-179-76-75.ph.ph.cox.net) (Ping timeout: 268 seconds)
[12:56:59] <zkanda> no, it can change, I need to test if a key exist.
[12:59:27] *** Joins: normen (~normen@p200300d71739c00099423fd7cc626c15.dip0.t-ipconnect.de)
[12:59:45] <bookworm> reflect then
[12:59:58] <ikke> but https://play.golang.org/p/KP-8LPIzkrJ
[13:00:04] <ikke> would something like that work?
[13:00:32] *** Joins: snits (~quassel@ip98-179-76-75.ph.ph.cox.net)
[13:00:34] *** Quits: purpleidea (~james@user/purpleidea) (Read error: Connection reset by peer)
[13:00:54] *** Joins: purpleidea (~james@user/purpleidea)
[13:01:29] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:381f:5f31:286f:e038)
[13:02:32] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:381f:5f31:286f:e038) (Ping timeout: 240 seconds)
[13:04:17] *** Quits: vimal (~vimal@2a02:a210:9600:1600:3271:adb4:e3fb:289a) (Ping timeout: 264 seconds)
[13:04:27] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:381f:5f31:286f:e038)
[13:04:55] *** Quits: normen (~normen@p200300d71739c00099423fd7cc626c15.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[13:04:58] *** Quits: girafe (~girafe@176-147-142-235.abo.bbox.fr) (Read error: Connection reset by peer)
[13:07:17] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:381f:5f31:286f:e038) (Ping timeout: 264 seconds)
[13:08:52] <zkanda> yep, should work, I need to only manipulate this specific key in the json if it exist and put it back.
[13:09:09] *** Quits: snits (~quassel@ip98-179-76-75.ph.ph.cox.net) (Ping timeout: 256 seconds)
[13:09:13] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:09:22] <zkanda> any idea what's the most elegant way to do that?
[13:12:06] *** Joins: oxum (~oxum@122.181.206.220)
[13:12:25] *** Joins: snits (~quassel@ip98-179-76-75.ph.ph.cox.net)
[13:13:37] *** Joins: normen (~normen@p200300d71739c00099423fd7cc626c15.dip0.t-ipconnect.de)
[13:14:06] <b0nn> type assertion if you know that the key is there and that it's type is what you want
[13:15:38] *** Joins: vimal (~vimal@2a02:a210:9600:1600:4fb4:e20f:72bc:9bf8)
[13:15:59] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:381f:5f31:286f:e038)
[13:17:03] *** Quits: oxum (~oxum@122.181.206.220) (Ping timeout: 250 seconds)
[13:19:17] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:381f:5f31:286f:e038) (Ping timeout: 264 seconds)
[13:19:46] *** Quits: binkers (~binkers@user/binkers) (Quit: ZNC - https://znc.in)
[13:21:59] *** Joins: binkers (~binkers@user/binkers)
[13:24:12] *** Quits: brooks79 (~bswinnert@23.157.160.131) (Remote host closed the connection)
[13:24:44] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[13:26:58] *** Joins: brooks79 (~bswinnert@23.157.160.131)
[13:27:02] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:d0:c3cf:7d52:8ed) (Ping timeout: 240 seconds)
[13:29:37] *** Joins: gggpkm_ (~gggpkm@60.10.194.43)
[13:32:36] *** Quits: gggpkm__ (~gggpkm@123.113.177.236) (Ping timeout: 245 seconds)
[13:37:11] *** Quits: eruditass (uid248673@id-248673.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[13:38:19] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:49:46] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[14:04:37] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:05:24] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[14:07:02] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[14:09:02] *** Joins: frost (~frost@user/frost)
[14:15:47] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:16:02] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[14:17:29] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[14:18:21] *** Joins: NeoCron (~NeoCron@p200300c4cf161b0075b55a4b5f100d7e.dip0.t-ipconnect.de)
[14:21:41] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[14:21:53] *** Quits: NeoCron (~NeoCron@p200300c4cf161b0075b55a4b5f100d7e.dip0.t-ipconnect.de) (Remote host closed the connection)
[14:23:28] *** Joins: fikran (~fikran@user/fikran)
[14:29:26] *** Quits: mei3 (~mei@user/mei) (Read error: Connection reset by peer)
[14:29:50] *** Joins: frost (~frost@user/frost)
[14:33:44] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[14:34:30] *** Joins: gggpkm__ (~gggpkm@60.10.194.43)
[14:35:02] *** Quits: gggpkm__ (~gggpkm@60.10.194.43) (Max SendQ exceeded)
[14:35:32] *** Joins: gggpkm__ (~gggpkm@60.10.194.43)
[14:36:21] *** Quits: gggpkm__ (~gggpkm@60.10.194.43) (Remote host closed the connection)
[14:37:01] *** Quits: pinpox (~pinpox@v2202101107577140883.nicesrv.de) (Quit: The Lounge - https://thelounge.chat)
[14:37:37] *** Joins: pinpox (~pinpox@v2202101107577140883.nicesrv.de)
[14:37:38] *** Quits: gggpkm_ (~gggpkm@60.10.194.43) (Ping timeout: 260 seconds)
[14:38:14] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:fc9d:2ed5:b7a1:e098)
[14:42:30] *** Joins: internut (~internut@2601:280:4e00:7b70:383f:ec0b:a2b9:c5da)
[14:47:32] *** Quits: internut (~internut@2601:280:4e00:7b70:383f:ec0b:a2b9:c5da) (Ping timeout: 240 seconds)
[14:48:23] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:49:02] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 240 seconds)
[14:49:49] *** Quits: shtirlic (~shtirlic@95-55-24-132.dynamic.avangarddsl.ru) (Remote host closed the connection)
[14:55:32] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:01:32] *** Joins: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net)
[15:02:13] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Client Quit)
[15:09:51] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[15:11:49] *** Joins: fikran (~fikran@user/fikran)
[15:12:35] *** Joins: Atque (~Atque@user/atque)
[15:12:42] *** Joins: krux02 (~krux02@p200300e817076e0044b6cdb56690220d.dip0.t-ipconnect.de)
[15:15:57] *** Joins: shtirlic (~shtirlic@95-55-24-132.dynamic.avangarddsl.ru)
[15:17:06] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[15:18:49] <leitz> Can regexp.Match match on "\s+", or do I need a different func?
[15:21:40] <ikke> Did you try it?
[15:23:42] <leitz> Yes, and it failed. Since I'm new to Go regex I'm not sure if it's just operator error or if there's a different way to do what I need.
[15:24:54] <fizzie> regexp.Match on `\s+` will be true for any input string that contains at least one whitespace character.
[15:26:48] <fizzie> As in: https://play.golang.org/p/DGag6Bx46U_d
[15:26:51] <leitz> The regex I'm trying to use is "sub\s+[_a-zA-Z0-9]+\s+{"
[15:27:34] <leitz> So far, this works:  matched,err := regexp.MatchString("sub [_a-zA-Z0-9]+", line)
[15:28:16] <leitz> However, it depends on exactly one space after sub, and does not allow for spaces and the following "{" character.
[15:28:20] <ikke> What are you trying to match?
[15:28:44] <ikke> perl functions?
[15:28:51] <leitz> ikke, yup.
[15:28:59] <fizzie> Are you just not using ``s?
[15:29:09] <leitz> Trying to filter out unnamed subs.
[15:29:30] <fizzie> Because the problem with "sub\s+[_a-zA-Z0-9]+\s+{", if it's literally a double-quoted string, is that \s is not a valid escape in double-quoted string constants.
[15:29:56] <leitz> fizzie, I have about five minutes experience with Go regex. Trying to port what I know from elsewhere to here.
[15:30:10] <fizzie> It's not really about Go regex, it's about Go string literals.
[15:30:16] <fizzie> You'll need either `sub\s+[_a-zA-Z0-9]+\s+{` or "sub\\s+[_a-zA-Z0-9]+\\s+{". But the former is what you conventionally use for patterns that contain backslashes.
[15:30:36] * leitz goes to test.
[15:31:12] <fizzie> Incidentally, Perl does not require a space between the sub name and the opening {.
[15:31:54] <leitz> So far our code seems to have that space, but you're right. I'll fix that.
[15:33:10] <leitz> Okay, more to learn. I knew that double quotes dealt with strings, and single quotes were bytes/runes. Wasn't sure what the backticks were for.
[15:33:37] <fizzie> It's a raw string literal; the idea is that you want to pass all the backslashes untouched to the (regexp package) function.
[15:35:01] * leitz takes notes.
[15:36:26] *** Parts: jla (~jordi@64.225.79.195) ()
[15:38:41] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:381f:5f31:286f:e038) (Read error: Connection reset by peer)
[15:39:26] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:381f:5f31:286f:e038)
[15:39:42] *** Quits: frost (~frost@user/frost) (Ping timeout: 260 seconds)
[15:45:27] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:d0:c3cf:7d52:8ed)
[15:49:35] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[15:49:42] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Client Quit)
[15:50:11] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[15:50:34] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:d0:c3cf:7d52:8ed) (Ping timeout: 268 seconds)
[15:54:05] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[15:54:27] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[15:54:56] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[15:58:16] *** Quits: bkircher (~bkircher@2001:a61:25e1:a901:f7b9:7a2c:5cbb:7cb) (Quit: Leaving)
[16:01:56] *** Joins: neurocyte0132889 (~neurocyte@94.46.71.199)
[16:01:56] *** Quits: neurocyte0132889 (~neurocyte@94.46.71.199) (Changing host)
[16:01:56] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[16:03:56] *** Joins: mononote (~mononote@user/mononote)
[16:06:48] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:fc9d:2ed5:b7a1:e098) (Quit: WeeChat 3.3)
[16:08:30] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:14e7:eea:7680:eb78)
[16:11:40] <iivvoo> go test ./... -run FooTest <- how would I run this with dlv?
[16:12:44] *** Parts: mononote (~mononote@user/mononote) (Leaving)
[16:13:49] <iivvoo> dlv test foobar -test.run FooTest gives me "package foobar is not in GOROOT .."
[16:14:25] <iivvoo> hmm, going into the package folder seems to have effect
[16:16:08] <iivvoo> hmm no it doesn't actually
[16:16:32] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[16:16:34] *** Joins: jjonah (~jjonah@p200300d5d7058900dea632fffeb3342f.dip0.t-ipconnect.de)
[16:17:32] <iivvoo> dlv test -- -test.run  FooTest then
[16:19:26] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[16:20:04] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Quit: The Lounge - https://thelounge.chat)
[16:20:31] *** Joins: Atque (~Atque@user/atque)
[16:24:22] *** Joins: neurocyte0132889 (~neurocyte@94.46.71.199)
[16:24:23] *** Quits: neurocyte0132889 (~neurocyte@94.46.71.199) (Changing host)
[16:24:23] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[16:24:25] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[16:26:46] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[16:28:20] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[16:40:00] <leitz> How do I create a key for a map, when the value is currently an empty slice?   https://gist.github.com/LeamHall/04da23327142436e3b00d227e2a0a2ca
[16:43:17] <leitz> One of these days I'm going to leave all the things I've tried in the code, so you can see that I have, in fact, tried.  :(
[16:45:05] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:14e7:eea:7680:eb78) (Ping timeout: 264 seconds)
[16:45:08] <ikke> A syntax error does not happen because of a key that is missing
[16:45:53] *** Joins: Tv_ (uid62079@user/tv/x-3144562)
[16:45:58] <ikke> ` uses[key] := {}` is invlaid
[16:47:08] <ikke> leitz: uses[key] = []string{}
[16:47:31] <ikke> https://play.golang.org/p/eMS3W1dEnze
[16:48:13] <leitz> ikke, thanks!
[17:03:05] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Ping timeout: 264 seconds)
[17:06:34] *** Joins: gggp (~gggp@220-136-153-49.dynamic-ip.hinet.net)
[17:10:24] *** Joins: jla (~jordi@64.225.79.195)
[17:11:11] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[17:11:34] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:14:57] *** Quits: jjonah (~jjonah@p200300d5d7058900dea632fffeb3342f.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[17:16:50] *** Joins: internut (~internut@2601:280:4e00:7b70:383f:ec0b:a2b9:c5da)
[17:19:06] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[17:21:10] *** Joins: fikran (~fikran@user/fikran)
[17:22:17] *** Quits: internut (~internut@2601:280:4e00:7b70:383f:ec0b:a2b9:c5da) (Ping timeout: 264 seconds)
[17:37:35] <iivvoo> weird, 's'(tep) in dlv randomly does an does not step into functions - sometimes it behaves like 'next'
[17:40:17] *** Joins: neiluj (~neiluj@2a01:e0a:1f2:d960:b25:63d3:efa4:ac01)
[17:41:00] <neiluj> Hello! Is there a function to parse the IP and port of net.Addr.String()?
[17:41:15] <neiluj> I'm doing it manually for now.
[17:42:22] <neiluj> Like, given [2001:db8::1]:80, return a net.IP([2001:db8::1]) and int (80).
[17:42:37] <A_Dragon> right split a :
[17:42:40] <neiluj> Or better yet, return a net.Addr directly from the output of net.Addr.String
[17:43:03] <MD87> neiluj: https://pkg.go.dev/net#SplitHostPort ?
[17:43:34] <MD87> Gives strings rather than IPs/ints, but does the right thing in terms of splitting
[17:43:44] <neiluj> MD87: spot on! thanks!
[17:44:18] <neiluj> A_Dragon: right, that's easy enough to do indeed
[17:44:28] <A_Dragon> or yeah, split like that
[17:44:33] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[17:45:54] *** Quits: gggp (~gggp@220-136-153-49.dynamic-ip.hinet.net) (Remote host closed the connection)
[17:46:26] *** Joins: gggp (~gggp@220-136-153-49.dynamic-ip.hinet.net)
[17:48:07] *** justCity is now known as justache
[17:48:58] *** Quits: jla (~jordi@64.225.79.195) (Quit: Leaving.)
[17:55:47] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[18:04:04] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[18:05:44] *** Joins: jla (~jordi@64.225.79.195)
[18:07:49] *** Quits: gspbirel56 (~gspbirel5@c-73-214-199-7.hsd1.pa.comcast.net) (Quit: The Lounge - https://thelounge.chat)
[18:10:18] *** Joins: gspbirel56 (~gspbirel5@c-73-214-199-7.hsd1.pa.comcast.net)
[18:11:21] *** Joins: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net)
[18:13:24] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Client Quit)
[18:15:12] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:23:45] *** Joins: oxum (~oxum@122.181.206.220)
[18:26:07] *** Quits: oxum (~oxum@122.181.206.220) (Remote host closed the connection)
[18:26:40] *** Joins: oxum (~oxum@122.181.206.220)
[18:28:39] *** Quits: oxum (~oxum@122.181.206.220) (Remote host closed the connection)
[18:29:30] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[18:31:10] *** Joins: alzgh (~alzgh@user/alzgh)
[18:40:59] *** Joins: internut (~internut@2601:280:4e00:7b70:383f:ec0b:a2b9:c5da)
[18:45:56] *** Quits: internut (~internut@2601:280:4e00:7b70:383f:ec0b:a2b9:c5da) (Ping timeout: 245 seconds)
[18:49:22] *** Joins: Andrew_ (~andrew@user/andrewyu)
[18:50:15] *** Quits: AndrewYu (~andrew@user/andrewyu) (Read error: Connection reset by peer)
[18:52:04] *** Joins: oxum (~oxum@122.181.206.220)
[18:56:32] *** Quits: oxum (~oxum@122.181.206.220) (Ping timeout: 240 seconds)
[18:58:11] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[19:01:27] *** Joins: Ergo^ (~ergo@91.238.59.144)
[19:02:53] *** Quits: andlabs (~andlabs@70.107.171.168) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:16:13] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[19:17:04] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[19:17:13] *** Joins: andlabs (~andlabs@2604:ca00:17c:a50:9810:aa3c:1aac:30c0)
[19:17:23] *** Joins: mickey8 (~user@user/mickey)
[19:17:46] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:d0:c3cf:7d52:8ed)
[19:20:57] *** Parts: jla (~jordi@64.225.79.195) ()
[19:21:30] <neiluj> Is returning a tuple of values and an 'error', like so: return addr, fmt.Errorf("not found") and then matching on the error outside of the function with errors.Is(err,  fmt.Errorf("not found")) good practice?
[19:21:59] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:d0:c3cf:7d52:8ed) (Ping timeout: 246 seconds)
[19:23:25] <neiluj> or maybe: var NotFound = errors.New("not found") and then  errors.Is(err, NotFound)
[19:23:45] *** Quits: gggp (~gggp@220-136-153-49.dynamic-ip.hinet.net) (Remote host closed the connection)
[19:24:05] *** Quits: andlabs (~andlabs@2604:ca00:17c:a50:9810:aa3c:1aac:30c0) (Ping timeout: 264 seconds)
[19:24:24] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[19:24:39] <Tv_> that errors.Is call is definitely not gonna work
[19:24:46] <Tv_> the latter is the right way
[19:25:48] <neiluj> thanks, just checked!
[19:25:58] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[19:26:26] *** Joins: mickey8 (~user@user/mickey)
[19:27:54] *** Joins: internut (~internut@2601:280:4e00:7b70:383f:ec0b:a2b9:c5da)
[19:28:21] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[19:28:37] *** Joins: bindu (~bindu@user/bindu)
[19:28:53] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[19:29:26] *** Quits: alzgh (~alzgh@user/alzgh) (Ping timeout: 256 seconds)
[19:30:22] *** Joins: andlabs (~andlabs@2604:ca00:17c:a50:e46c:4d39:f6d7:9ee)
[19:30:31] *** Joins: fikran (~fikran@user/fikran)
[19:32:02] *** Quits: internut (~internut@2601:280:4e00:7b70:383f:ec0b:a2b9:c5da) (Ping timeout: 240 seconds)
[19:36:53] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[19:41:11] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:43:06] *** Joins: alzgh (alzgh@user/alzgh)
[19:45:30] *** Parts: jlindgren[m] (~jlindgren@2001:470:69fc:105::1:2056) ()
[19:45:31] *** Quits: normen (~normen@p200300d71739c00099423fd7cc626c15.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[19:46:48] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[19:47:34] *** Joins: trewq (~trewq@li70-4.members.linode.com)
[19:48:13] <trewq> any recommendation on what lint tool you have found to me most useful? Just exploring this area and want to see if there are any recommendations
[19:48:43] *** Joins: andlabs_ (~andlabs@2604:ca00:17c:a50:89f2:8458:1fb4:fe83)
[19:52:55] *** Quits: andlabs (~andlabs@2604:ca00:17c:a50:e46c:4d39:f6d7:9ee) (Ping timeout: 268 seconds)
[19:53:47] <seebs> staticcheck
[19:54:09] <seebs> every time it saved me at least a day i'd whine to management about how we should be supporting it, now we're sponsors
[19:54:37] *** Joins: andlabs (~andlabs@2604:ca00:17c:a50:3561:8d29:6cc9:3fef)
[19:58:19] *** Quits: andlabs_ (~andlabs@2604:ca00:17c:a50:89f2:8458:1fb4:fe83) (Ping timeout: 250 seconds)
[19:58:34] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-6407-dc09-fb7a-51c4.res6.spectrum.com)
[20:00:55] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 250 seconds)
[20:01:21] *** Quits: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net) (Ping timeout: 245 seconds)
[20:02:57] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[20:03:07] *** Joins: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net)
[20:03:49] *** Joins: jla (~jordi@64.225.79.195)
[20:04:01] *** Joins: andlabs_ (~andlabs@2604:ca00:17c:a50:b9a0:b4b4:537b:ca59)
[20:07:28] *** Joins: andlabs__ (~andlabs@2604:ca00:17c:a50:5577:29fd:9bce:dfd4)
[20:07:31] *** Parts: omegatron (~some@p5484903d.dip0.t-ipconnect.de) (Never tear us apart)
[20:07:51] *** Quits: andlabs (~andlabs@2604:ca00:17c:a50:3561:8d29:6cc9:3fef) (Ping timeout: 250 seconds)
[20:09:23] *** Joins: andlabs (~andlabs@209.107.190.196)
[20:10:56] *** Quits: andlabs_ (~andlabs@2604:ca00:17c:a50:b9a0:b4b4:537b:ca59) (Ping timeout: 245 seconds)
[20:11:46] *** Quits: andlabs__ (~andlabs@2604:ca00:17c:a50:5577:29fd:9bce:dfd4) (Ping timeout: 245 seconds)
[20:12:05] *** Joins: normen (~normen@p54b35890.dip0.t-ipconnect.de)
[20:14:32] *** Quits: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net) (Ping timeout: 240 seconds)
[20:14:53] *** Quits: leonthemisfit (~Leon@user/leonthemisfit) (Read error: Connection reset by peer)
[20:16:13] *** Joins: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net)
[20:20:05] *** Quits: bitreverb (~bitcycle@174-21-36-109.tukw.qwest.net) (Ping timeout: 246 seconds)
[20:20:11] *** Joins: internut (~internut@2601:280:4e00:7b70:383f:ec0b:a2b9:c5da)
[20:24:30] *** Quits: andlabs (~andlabs@209.107.190.196) (Read error: Connection reset by peer)
[20:25:09] *** Joins: andlabs (~andlabs@2604:ca00:17c:a50:2dba:f7e1:4e7:ef98)
[20:27:31] *** Joins: leonthemisfit (~Leon@132.sub-174-198-211.myvzw.com)
[20:27:32] *** Quits: leonthemisfit (~Leon@132.sub-174-198-211.myvzw.com) (Changing host)
[20:27:32] *** Joins: leonthemisfit (~Leon@user/leonthemisfit)
[20:27:51] *** Joins: andlabs_ (~andlabs@2604:ca00:17c:a50:f088:83ce:4ef2:e343)
[20:29:32] *** Quits: andlabs (~andlabs@2604:ca00:17c:a50:2dba:f7e1:4e7:ef98) (Ping timeout: 246 seconds)
[20:29:43] *** Joins: andlabs (~andlabs@2604:ca00:17c:a50:484e:b6b1:a7bf:b405)
[20:31:16] <trewq> excellent :) thank you for the rec
[20:33:05] *** Quits: internut (~internut@2601:280:4e00:7b70:383f:ec0b:a2b9:c5da) (Ping timeout: 264 seconds)
[20:33:23] *** Quits: andlabs_ (~andlabs@2604:ca00:17c:a50:f088:83ce:4ef2:e343) (Ping timeout: 264 seconds)
[20:35:10] *** Quits: alzgh (alzgh@user/alzgh) (Ping timeout: 256 seconds)
[20:35:11] *** Quits: andlabs (~andlabs@2604:ca00:17c:a50:484e:b6b1:a7bf:b405) (Ping timeout: 264 seconds)
[20:38:18] *** Quits: jkovac1 (~jkovac1@user/jkovac1) (Ping timeout: 260 seconds)
[20:38:40] *** Joins: alzgh (~alzgh@user/alzgh)
[20:42:09] <pinpox> Hi, I'm struggeling to debug why I can't authenticate via SSH using the golang.org/x/crypto/ssh package. SSH connection works on the cli, but fails with the example code. This is my minimal code + the output https://gist.github.com/pinpox/a8d3605442e7a081c9e0f6608e8cfbb2
[20:42:36] <pinpox> SSH_AUTH_SOCK seems to be recognized correctly, but authentication fails
[20:49:05] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[20:53:16] *** Joins: impermanence (~impermane@c-75-73-193-204.hsd1.mn.comcast.net)
[20:54:55] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:381f:5f31:286f:e038) (Read error: Connection reset by peer)
[20:55:41] *** Joins: freakazoid12345 (~matt@2603-9000-cf0f-80e3-381f-5f31-286f-e038.inf6.spectrum.com)
[20:55:48] *** Quits: impermanence (~impermane@c-75-73-193-204.hsd1.mn.comcast.net) (Client Quit)
[20:55:54] *** Joins: tyson2 (~user@bras-base-toroon020aw-grc-19-184-148-172-174.dsl.bell.ca)
[20:57:16] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-6407-dc09-fb7a-51c4.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[20:58:48] *** Quits: saschagrunert (~saschagru@46.128.124.46) (Remote host closed the connection)
[20:58:57] *** Joins: foobaz212 (~foobaz212@88.98.219.238)
[21:00:01] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[21:05:57] *** Joins: oxum (~oxum@122.181.206.220)
[21:09:10] *** Joins: analoq (~yashi@user/dies)
[21:10:07] *** Joins: girafe (~girafe@176-147-142-235.abo.bbox.fr)
[21:10:32] *** Quits: oxum (~oxum@122.181.206.220) (Ping timeout: 240 seconds)
[21:11:46] <analoq> what's the goto place for finding go packages? pkg.go.dev?
[21:13:40] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[21:15:05] *** Quits: X-Scale (~ARM@31.22.162.107) (Ping timeout: 264 seconds)
[21:15:08] *** Joins: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt)
[21:16:07] <siXy> yes
[21:16:13] *** Parts: jla (~jordi@64.225.79.195) ()
[21:16:45] *** X-Scale` is now known as X-Scale
[21:17:01] <siXy> pinpox: start by checking that HasAgent() returns true
[21:17:20] <fizzie> And maybe you could try adding a wrapper that logs what (if anything) is happening in the auth callback. Something like, `ssh.PublicKeysCallback(func() ([]ssh.Signer, error) { keys, err := agentClient.Signers(); log.Printf("keys: %#v err: %#v", keys, err); return keys, err })`.
[21:18:00] <trewq> pinpox: You are also using an agent, I would recommend trying to pass the public key and see if you can log in - start with the basics and then involve other components like an agent
[21:20:54] <siXy> er sorry, I was looking at a fork - I mean agent.List()
[21:23:02] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 240 seconds)
[21:25:04] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[21:26:16] *** Quits: girafe (~girafe@176-147-142-235.abo.bbox.fr) (Quit: Leaving)
[21:27:47] <lungaro_> so, here is a interesting case. Since file system operations can be atomic, it is possible to delete the running binary. In this case, the inode is not actually deleted, even though its gone on the filesystem
[21:28:08] <lungaro_> Is it possible to track if the binary is running has been deleted? If so, die?
[21:28:51] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[21:29:36] <ikke> You can check if /proc/self/exe points to an existing path I suppose
[21:29:47] <siXy> lungaro_: I'm not aware of any filesystem where rm/unlink are atomic
[21:29:56] <lungaro_> its usually rename and delete
[21:30:04] <lungaro_> rename is the atomic part
[21:31:02] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 240 seconds)
[21:31:08] <fizzie> On Linux, the contents of the /proc/self/exe symlink will get renamed into "... (deleted)" if the executable gets deleted.
[21:31:15] <lungaro_> i'd have to see if I can get the inode and detect it changing
[21:31:24] <lungaro_> that's not a bad idea
[21:31:29] <siXy> it's just unlink on most linux filesystems. Which isn't atomic. But you can still unlink it while it's running.
[21:31:37] <huf> so if someone maliciously puts a binary with the name ... (deleted) there, you wont notice...
[21:31:51] <huf> or if your binary is called ls (deleted) :D
[21:31:51] <siXy> I'm not sure what you're trying to get at here, or why you think atomic operations have anything to do with this?
[21:32:51] <siXy> Also the whole concept of "atomic filesystem operation" is extremely dubious - there's so many layers underneath you more or less whatever you do.
[21:33:44] <lungaro_> it may not be atomic, but simply pointing out that a running binary can be replaced on disk and remain running
[21:34:04] <lungaro_> so simply looking if a file exists is not enough to know if you've been replaced
[21:34:26] <siXy> sure. but I'm curious why this is a thing you need to check for? it seems a really odd thing to want to do
[21:34:45] <lungaro_> deployment went bad, want daemons to die if they are deleted or replaced
[21:34:56] <ikke> Can't you signal them?
[21:35:03] <lungaro_> honestly allowing shit to run that has been deleted seems silly
[21:35:06] <siXy> interacting properly with your init system would be a MUCH MUCH better way to do this.
[21:35:13] <lungaro_> sure I could, but that seems like something an app can do
[21:35:31] <ikke> lungaro_: the alternative would be windows, where you have to reboot every other second
[21:36:18] <siXy> I guess you could poll the /proc/self/exe symlink every 10ms if you want to throw out a bunch of random IOs for no real reason... but it'd be *far* better to have your deployment process tell your init system to handle this correctly.
[21:37:11] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-6407-dc09-fb7a-51c4.res6.spectrum.com)
[21:37:32] <ikke> yes, agree with siXy
[21:37:39] *** Joins: jpw (~jpw@user/jpw)
[21:37:44] <ikke> You replace the binary, then signal the process to restart
[21:38:01] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[21:38:03] <ikke> which can do things to make this as gracefull as possible
[21:39:52] *** Joins: fikran (~fikran@user/fikran)
[21:40:26] *** Joins: tane (~tane@dslb-002-201-234-197.002.201.pools.vodafone-ip.de)
[21:40:26] *** Quits: tane (~tane@dslb-002-201-234-197.002.201.pools.vodafone-ip.de) (Changing host)
[21:40:26] *** Joins: tane (~tane@user/tane)
[21:43:11] *** Quits: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[21:44:43] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[21:46:30] <pinpox> siXy: I added the wrapper and also the .List(), it shows 3 public keys being present
[21:47:34] <pinpox> trewq: I'd like to use the existing agent in the end, but for testing purposes how would I pass the public key directly?
[21:49:21] <pinpox> siXy: trewq the keys shown look fine I guess?
[21:49:23] <pinpox> https://gist.github.com/pinpox/4651fa855b3fcff101c3d6ff3066acf1
[21:51:29] *** Quits: tyson2 (~user@bras-base-toroon020aw-grc-19-184-148-172-174.dsl.bell.ca) (Remote host closed the connection)
[21:53:18] *** Joins: girafe (~girafe@176-147-142-235.abo.bbox.fr)
[21:53:19] *** Quits: X-Scale (~ARM@165.201.137.78.rev.vodafone.pt) (Ping timeout: 256 seconds)
[21:54:35] *** Joins: X-Scale` (~ARM@31.22.202.101)
[21:54:38] <siXy> pinpox: Only thing that springs to mind right now is if there's some bad interaction with HostKeyCallback: ssh.InsecureIgnoreHostKey() - but that seems a long shot.
[21:54:48] * siXy thinks
[21:55:39] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Quit: The Lounge - https://thelounge.chat)
[21:56:00] <pinpox> siXy: Thing is, I definitely need to use the running agent, passing the path to the private key is not an option because it is located on a smartcard/yubikey.
[21:56:06] *** X-Scale` is now known as X-Scale
[21:58:05] *** Joins: neurocyte0132889 (~neurocyte@94.46.71.199)
[21:58:05] *** Quits: neurocyte0132889 (~neurocyte@94.46.71.199) (Changing host)
[21:58:05] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[21:59:15] <trewq> pinpox: check out https://github.com/golang/crypto/blob/master/ssh/example_test.go
[21:59:32] <trewq> yes, you can run the agent, first find the problem
[22:00:04] <trewq> .. see if you can connect without an agent.. start with the simplest case
[22:00:39] <trewq> debugging is a lot about finding the problem.. start with the simplest use case
[22:00:57] <siXy> also maybe try copying the ssh lib and setting debugMux = true
[22:01:28] <siXy> could be a cipher mismatch or something
[22:03:04] <trewq> could be a problem with permissions on the folder...
[22:03:28] <siXy> trewq: on what folder? they are using a yubikey...
[22:03:44] <trewq> ~/.ssh
[22:04:14] <trewq> if that folder is not 600 then it fails in a weird way
[22:04:18] <siXy> and if they're using a yubikey, why would you think that would matter?
[22:05:13] <siXy> this code isn't reading anything out of ~/.ssh, so it doesn't matter what permissions it has. Also that permission check is a function of the openssh binary, and isn't inherent in the protocol.
[22:05:15] *** Joins: burningserenity (~burningse@142-196-178-216.res.spectrum.com)
[22:05:46] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[22:08:32] *** Quits: salem_ (~salem@pool-98-111-206-141.pitbpa.fios.verizon.net) (Quit: ZNC 1.8.2 - https://znc.in)
[22:08:49] *** Joins: INeedAHandle (~INeedAHan@user/ineedahandle)
[22:09:57] *** Joins: salem (~salem@pool-98-111-206-141.pitbpa.fios.verizon.net)
[22:11:46] *** Joins: independent56 (~independe@2.31.88.37)
[22:18:59] *** Joins: andlabs (~andlabs@2a00:79e1:abc:1a12:4186:502b:f1ee:2b2d)
[22:28:16] *** Quits: foobaz212 (~foobaz212@88.98.219.238) (Quit: Client closed)
[22:28:27] *** Joins: foobaz212 (~foobaz212@88.98.219.238)
[22:29:45] *** Quits: justache (~justache@user/justache) (Read error: Connection reset by peer)
[22:30:00] *** Joins: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de)
[22:30:09] *** Quits: independent56 (~independe@2.31.88.37) (Ping timeout: 256 seconds)
[22:31:16] *** Joins: internut (~internut@2601:280:4e00:7b70:383f:ec0b:a2b9:c5da)
[22:31:16] *** Joins: justache (~justache@user/justache)
[22:32:57] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[22:33:02] *** Quits: foobaz212 (~foobaz212@88.98.219.238) (Ping timeout: 256 seconds)
[22:33:31] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Quit: Ping timeout (120 seconds))
[22:33:55] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[22:34:49] *** Joins: foobaz212 (~foobaz212@88.98.219.238)
[22:35:35] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[22:36:46] <pinpox> siXy: trewq I tried as you suggested with a "normal" key file. I get the same error
[22:37:26] <pinpox> This is what I'm trying now: https://gist.github.com/pinpox/c2009bace9cd3216830dd79279562875
[22:37:41] <pinpox> Same output "2021/11/10 20:06:07 unable to connect: ssh: handshake failed: ssh: unable to authenticate, attempted methods [none publickey], no supported methods remain"
[22:38:58] <pinpox> If I use "HostKeyCallback: ssh.FixedHostKey(hostKey)" for the callback, I get "2021/11/10 20:07:55 unable to connect: ssh: handshake failed: ssh: required host key was nil"
[22:39:49] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[22:39:50] *** Quits: foobaz212 (~foobaz212@88.98.219.238) (Ping timeout: 256 seconds)
[22:43:12] *** Joins: foobaz212 (~foobaz212@88.98.219.238)
[22:43:35] *** Quits: internut (~internut@2601:280:4e00:7b70:383f:ec0b:a2b9:c5da) (Ping timeout: 246 seconds)
[22:46:18] *** Joins: internut (~internut@2601:280:4e00:7b70:383f:ec0b:a2b9:c5da)
[22:50:32] *** Quits: girafe (~girafe@176-147-142-235.abo.bbox.fr) (Ping timeout: 240 seconds)
[22:59:00] <b0nn> You need both public and private keys in your code
[22:59:23] <b0nn> https://blog.tarkalabs.com/ssh-recipes-in-go-part-one-5f5a44417282
[23:00:56] *** Joins: girafe (~girafe@176-147-142-235.abo.bbox.fr)
[23:01:47] <b0nn> uh ignore "both keys comment
[23:03:06] <pinpox> ?
[23:05:16] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Quit: Ping timeout (120 seconds))
[23:05:38] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[23:10:31] *** Quits: csmarchbanks (~csmarchba@prometheus/team/csmarchbanks) (Ping timeout: 245 seconds)
[23:16:14] *** Joins: csmarchbanks (~csmarchba@prometheus/team/csmarchbanks)
[23:18:00] <pinpox> siXy: trewq b0nn I just looked at the sshd logs of the server: When trying to connect with the code, the following two lines are logged:
[23:18:00] <pinpox> Nov 10 20:46:39 ahorn sshd[1357046]: userauth_pubkey: key type ssh-rsa not in PubkeyAcceptedAlgorithms [preauth]
[23:18:00] <pinpox> Nov 10 20:46:39 ahorn sshd[1357046]: Connection closed by authenticating user pinpox ::1 port 40968 [preauth]
[23:20:13] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[23:20:28] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[23:21:28] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[23:22:21] <b0nn> pinpox: that means that the public key isn't in the server's ~/.ssh/authorized_keys
[23:22:47] <pinpox> b0nn: no, the key works perfectly with ssh -i /path/to/key
[23:22:58] <pinpox> I think I have stumbled into this issue, https://github.com/golang/go/issues/37278
[23:23:22] <pinpox> b0nn: If the key wasn't authorized, it shuoldn't work manually either right?
[23:23:49] <b0nn> yeah, I think you're right
[23:24:24] <siXy> yup, I agree - looks like that issue.
[23:26:47] <siXy> you could grab an older version of the ssh lib, I guess
[23:27:19] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[23:33:22] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:36:30] <trewq> siXy: sorry I do not know about yubikey
[23:39:51] *** Joins: dr0n (~nabromov@94.11.23.235)
[23:40:04] <pinpox> siXy: Do older versions not have the problem??
[23:40:21] <seebs> so long ago, i had an ssh host key problem that was insanely hard to debug
[23:40:36] <seebs> i'd add a machine to the list of hosts i wanted to use my private key with, and it'd work, but then a while later i'd try to connect to the machine and fail
[23:40:47] <seebs> eventually i discovered: the hostname list is space-separated
[23:40:54] <seebs> it is not comma-separated-with-whitespace-trimming
[23:41:24] <seebs> so "host a, b, c" does not match a host named "a" but would match a host named "a," if that were a valid host name
[23:41:28] <pinpox> This issue seems quite breaking, I'm astonished how long it has been open
[23:42:29] <pinpox> I left subscribed to the issue on github, what version would I have to roll back to in the meantime?
[23:42:32] *** Quits: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[23:43:05] <seebs> what version of what? are you talking about changing your ssh server, or your go program, or ?
[23:43:36] *** Joins: mei3 (~mei@user/mei)
[23:43:46] <pinpox> seebs: I thought siXy suggested using an older version of the crypto/ssh lib
[23:44:11] <seebs> i thought that was a reference to the *other* side of the ssh library, but i may have been confused
[23:44:45] <pinpox> hm
[23:44:46] <seebs> the issue is other people disabling/dropping support for other things, and go not adding support for newer things, i think?
[23:44:54] <pinpox> Downgrading openssh is not an option. I need a fix/workaround that works for current OpenSSh
[23:46:52] <seebs> given openssh, i'd assume they changed *defaults* but it can still be configured to accept other keys, if necessary.
[23:47:20] *** Quits: internut (~internut@2601:280:4e00:7b70:383f:ec0b:a2b9:c5da) (Remote host closed the connection)
[23:47:22] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[23:48:31] <pinpox> Hm... yes probably but changing the config of every server i plan to connect to is not really a fix.
[23:49:12] *** Joins: fikran (~fikran@user/fikran)
[23:49:19] <pinpox> I mean, i'm sure you're right but I'd prefer to fix "my side" of the problem as it seems to be what is broken. Are there other well-supported ssh libs for go?
[23:55:09] <seebs> no
[23:55:56] <seebs> you might try the gopher slack #crypto or #security channels for updates or to ask about it, people might know more.
[23:57:53] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[23:59:39] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[23:59:50] <pinpox> seebs: ok, will try tomorrow then. Thanks for the help
[23:59:58] <pinpox> didn't even know there is  slack aswell
