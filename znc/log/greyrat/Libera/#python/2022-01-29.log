[00:00:07] <hexa-> it will break time and space
[00:00:21] <hexa-> because all of these are from a time long past
[00:00:28] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[00:00:32] *** Joins: onichomp (~onichomp@2806:264:4408:86:f5c6:8c2a:5cff:c011)
[00:00:33] <hexa-> passed?
[00:00:35] <hexa-> ago?
[00:00:39] <SnoopJ> fdsdf, best advice: try it and see. You can also consult the changelogs between those versions to see if there are any backwards-incompat changes.
[00:00:46] <mike18_> SnoopJ: hi :)
[00:00:55] <SnoopJ> mike18_, hi
[00:00:59] <fdsdf> I use 2.5 as a baseline because it works on every win32 system
[00:01:03] <Wooble> run your unit tests, if unit tests were even invented when python 2.0 was a thing
[00:01:06] <BrenBarn> lseactuary: that's better but it still doesn't do anything
[00:01:09] *** Quits: dvx (~dvx@5.181.92.64) (Quit: dvx)
[00:01:12] <mike18_> SnoopJ: have you used python thread pool before by chance?
[00:01:18] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[00:01:21] <BrenBarn> like what function is supposed to be called there, with what argument?
[00:01:22] <lseactuary> yeah, i think i have coded it wrong, but unsure how to code it using the package :/
[00:01:39] *** Joins: fukuda (~fukuda@2804:431:c7f5:a3c3:944d:fee1:2147:96a4)
[00:01:41] *** Quits: LuksNuke_ (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[00:01:47] <lseactuary> BrenBarn sorry the get_child function should be called in the end
[00:01:58] <BrenBarn> looks like your code got a bit messed up too, what happened to the class?
[00:02:45] <Wooble> fdsdf: do you have an actual python 2.0 codebase that needs to run on windows 95?
[00:02:49] <lseactuary> sorry i made a mistake
[00:02:54] <SnoopJ> mike18_, yes. Not for what you're doing, though. Probably you need to group your URLs before you send them to your workers.
[00:03:08] <mike18_> SnoopJ: how to group?
[00:03:17] <fdsdf> not really
[00:03:33] *** climax is now known as gentooclimax
[00:03:39] <SnoopJ> mike18_, the itertools docs have an example of a function that can do this. The more_itertools library also provides it.
[00:03:48] <nedbat> fdsdf: what win32 systems are you considering? You can't assume Python is installed on any of them, so where is the 2.5 number from?
[00:04:10] <mike18_> SnoopJ: i have an enpoint i call which accepts bulk fetching
[00:04:18] <lseactuary> BrenBarn: https://pastebin.com/vLeWV8RA
[00:04:21] <mike18_> so i thought to group that kind of requests is good for speedup
[00:04:50] <fdsdf> the last python version that runs on win95
[00:04:51] <SnoopJ> mike18_, if you want to give each worker multiple URLs, you will need to give each worker multiple URLs. So, grouping them will be the first step here.
[00:04:56] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 245 seconds)
[00:04:59] *** Joins: crashrep (~crashrep@user/crashrep)
[00:05:02] <novapy> This: https://bpaste.net/M4FA
[00:05:05] <mike18_> SnoopJ: yes i need grouping!
[00:05:15] <mike18_> and also a way to read back the data from the threads
[00:05:20] <mike18_> or whatever is returned
[00:06:03] <SnoopJ> you are already examining the .result() of the futures you are constructing, you'll just have a result that is related to multiple URLs instead of one.
[00:06:08] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:e880:89ff:3e74:550f)
[00:06:36] <mike18_> hm ok than only difficult part it to group
[00:07:01] *** Quits: bluedust (~bluedust@103.161.144.140) (Remote host closed the connection)
[00:07:02] <BrenBarn> lseactuary: Okay so I can see a couple problems here
[00:07:03] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[00:07:13] <BrenBarn> one is that it looks like you think you're looping over the columns, but you're actually looping over the rows
[00:07:29] <lseactuary> in _build_graph?
[00:07:40] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[00:07:48] <mike18_> SnoopJ: something like for task in itertools.islice(tasks_to_do, HOW_MANY_TASKS_AT_ONCE) ?
[00:07:51] <novapy> Can someone look at my pkg config and tell me what im messing up: https://bpaste.net/M4FA
[00:07:54] *** Joins: CombatVet (~c4@user/combatvet)
[00:07:57] <SnoopJ> mike18_, no.
[00:08:01] <mike18_> hm
[00:08:03] <BrenBarn> yes
[00:08:30] <lseactuary> but each column = a child
[00:08:36] <SnoopJ> mike18_, the grouper() function in the itertools docs is what I'd use. Or more_itertools.
[00:08:38] <BrenBarn> what kind of graph are you intending to get from that sample data?  like do you want it to be A->B->A or A->B->C
[00:08:47] <lseactuary> level_0 = parent, level_1 = child of level_1 but parent of level_2 etc
[00:08:59] <lseactuary> A->B->C
[00:09:05] <lseactuary> its a one way data frame :)
[00:09:05] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:09:12] <lseactuary> each row represents a path
[00:09:17] <lseactuary> it may not be unqiue
[00:10:38] *** Quits: janemba (~janemba@185.107.80.152) (Read error: Connection reset by peer)
[00:10:56] *** Joins: darksun (~darksun@user/darksun)
[00:11:31] <BrenBarn> okay, and get_child is supposed to get the leaf-nodes starting from the element stored in `self.hierarchy`?
[00:11:49] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 240 seconds)
[00:11:56] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[00:12:03] <lseactuary> nope, we want to build the tree from the full dataframe, then search the value in self.heirarchy (i have another function which calls this function / class many times)
[00:12:25] <BrenBarn> what does "search the value in self.hierarchy" mean?
[00:12:28] <lseactuary> we need the de-duped tree in order to search the self.heirharcy value once, and pull the leaves
[00:12:37] <lseactuary> so once we make the tree, containing A,B,C,D,E
[00:12:37] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 240 seconds)
[00:12:56] <lseactuary> say we wanna search A, this is self.heirharhcy, so we can search the tree containing A,B,C,D,E if A exists, if yes, pull the leaves
[00:13:05] <lseactuary> *list of leaves
[00:13:09] *** Joins: maryo (~Maryo@user/maryo)
[00:13:14] <BrenBarn> so. . . how is that not what I just said
[00:13:27] *** lukedashjr is now known as luke-jr
[00:13:41] <lseactuary> ah sorry i thought you meant build the tree based on the self.heirarchy
[00:13:44] <BrenBarn> you want to start at the "hierarchy" node and "follow" paths until they stop, then list all the places you stop, right?
[00:13:46] <mike18_> SnoopJ: you use more_itertools?
[00:13:51] <lseactuary> yup
[00:13:55] <lseactuary> exactly :)
[00:15:07] <SnoopJ> mike18_, I have used it before, yes.
[00:15:26] <mike18_> or grouper which you seem to use more
[00:15:29] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 250 seconds)
[00:15:34] <BrenBarn> ok, so next question is did you read the documentation for `successors`?
[00:15:37] <novapy> Can someone look at my pkg config and tell me what im messing up: https://bpaste.net/M4FA
[00:15:46] <lseactuary> yes, it includes all children, so it wont work
[00:16:06] <lseactuary> but i was at least trying to get B,D,E for A, at the moment im not even getting this
[00:16:15] <lseactuary> which means i think the tree is not building correct?
[00:16:30] <BrenBarn> D?  there's no D in your example
[00:16:45] <lseactuary> sorry i was looking at another screen
[00:17:04] <lseactuary> B,C,E
[00:17:19] <BrenBarn> the documentation for successor says "A successor of n is a node m such that there exists a directed edge from n to m."
[00:17:19] <BrenBarn> i.e., that is only "direct" children
[00:17:22] <jinsun> novapy: looks fine (the indentation in build-system requires is a bit bad but that doesn't really matter I think)
[00:17:31] <BrenBarn> your example gives `["B", "E"]` because those are the only nodes that you can get to from A
[00:17:34] <mike18_> SnoopJ: is it called grouper or groupby?
[00:17:37] <lseactuary> oh
[00:17:42] <BrenBarn> that is directly from A (in one step)
[00:17:46] <lseactuary> got ya
[00:17:51] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.4)
[00:18:00] <lseactuary> is my graph generation correct?
[00:18:05] *** Quits: maryo (~Maryo@user/maryo) (Ping timeout: 250 seconds)
[00:18:14] *** Quits: panella32 (~panella32@45.67.97.26) (Quit: Textual IRC Client: www.textualapp.com)
[00:18:23] <BrenBarn> I think so although the way you're doing it is a bit odd
[00:18:31] <BrenBarn> like there's no need to deal with the columns that way
[00:18:32] <novapy> Q: Whats needs to be in build system? does it need the things I imported?
[00:18:32] *** Quits: e2m4n (~ezman@user/e2m4n) (Remote host closed the connection)
[00:18:34] <lseactuary> happy to change it
[00:18:35] <BrenBarn> just zip each row with itself shifted
[00:18:47] <lseactuary> can you show me?
[00:18:51] <BrenBarn> also, your graph includes a None node so that is going to show up as a leaf node
[00:19:10] <SnoopJ> mike18_, groupby() is a method defined in itertools that does not do what you want. grouper() is a function that exists only in the documentation that does what you want.
[00:20:22] <jinsun> novapy: no, it needs to have the stuff you need to build you package, if you use setup.cfg then you want setuptools there, and wheel to build wheels
[00:20:38] <lseactuary> BrenBarnÂ  good point, i want to exclude None
[00:21:23] <novapy> jinsun: ok, but my pkg won't work
[00:21:26] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[00:21:36] *** Quits: berong91 (~noob4ever@75.154.235.153) (Remote host closed the connection)
[00:21:55] <mike18_> SnoopJ: something like future_to_url = [executor.submit(load_url, group) for group in more_itertools.grouper(2, URLS)] ?
[00:22:06] <novapy> I get no errors, but neither is it installing properly
[00:22:11] <mike18_> i need to pass group to the func
[00:22:16] <BrenBarn> but also I guess there is a bigger problem which is that this isn't going to work the way I think you intend
[00:22:28] <BrenBarn> like what are you expecting the leaf nodes from A to be?
[00:22:42] <mike18_> future_to_url = [executor.submit(load_url, group, 60) for group in more_itertools.grouper(2, URLS)] ...?
[00:22:46] <nedbat> fdsdf: "the last python version that runs on win95", ok, but how did you decide you needed to run on win95?
[00:22:57] *** Joins: jinsun__ (~quassel@user/jinsun)
[00:22:57] <lseactuary> BrenBarnÂ  C and E only
[00:23:02] <nedbat> fdsdf: (btw, use my nick so I'll know you replied)
[00:23:06] *** Joins: FMB (~FMB@rrcs-76-79-143-230.west.biz.rr.com)
[00:23:25] <BrenBarn> lseactuary: Okay, but that's not how your code is set up
[00:23:32] <BrenBarn> the thing is that you're only building ONE graph
[00:23:47] <BrenBarn> in that graph, C isn't a leaf because None comes after it
[00:23:59] *** FMB is now known as FMBR
[00:24:05] <lseactuary> yup i want to make 1 graph for the entire dataframe, then search the value of the heirarchy, then collect leaves if the value of the heirarchy exists in the tree.
[00:24:11] <lseactuary> oh
[00:24:15] <lseactuary> you are smart :)
[00:24:17] <jinsun__> novapy: can  you show your folder stucture in a paste?
[00:24:19] <BrenBarn> and same for E
[00:24:25] <fdsdf> for doing stuff in win95 vms, like converting to/from utf-8, backup, etc.
[00:24:28] *** Quits: fukuda (~fukuda@2804:431:c7f5:a3c3:944d:fee1:2147:96a4) (Ping timeout: 268 seconds)
[00:24:54] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 256 seconds)
[00:25:01] <lseactuary> any ideas how to elegantly fix this please?
[00:25:10] <novapy> jinsun__: How?
[00:25:23] *** Joins: fukuda (~fukuda@2804:431:c7f5:a3c3:944d:fee1:2147:96a4)
[00:25:57] <Wooble> fdsdf: but are you actually running win95 VMs in 2022? Why?
[00:26:22] <jinsun__> novapy: cd to the folder that contains your pyproject.toml and run tree (you might have to install tree)
[00:26:35] <lseactuary> also i think it checks the heirarchy value is in the dataframe, but it should check if its in the tree :/
[00:26:36] <fdsdf> for nostalgia sake mostly
[00:26:49] <SnoopJ> Wooble, I've used a bit of scientific equipment that absolutely wants to be run on 95/98, FWIW
[00:27:02] <SnoopJ> interfacing systems to that equipment, I mean.
[00:27:20] <SnoopJ> thankfully that space has *mostly* moved on to the new modern thing: Windows NT :)
[00:27:48] <mike18_> SnoopJ: how to send the data back and read it in the main func? https://ideone.com/iTQZbx
[00:28:07] <Wooble> SnoopJ: uh, didn't NT predate 95?
[00:28:15] *** Joins: janemba (~janemba@94.204.254.193)
[00:28:26] <novapy> jinsun__: https://bpaste.net/VA2Q
[00:28:31] <SnoopJ> Wooble, oops, and so it did. I was thinking of Windows 2000.
[00:28:37] <Wooble> fancy
[00:29:15] <novapy> Windows Millenium came when?
[00:29:26] <fdsdf> '99?
[00:29:29] <BrenBarn> lseactuary: try this: https://bpa.st/ZB5A
[00:29:33] <Wooble> but sure, having expensive other hardware that's hard to replace and not compatible with anything new is a somewhat reasonable excuse.
[00:29:46] <lseactuary> BrenBarnÂ  thanks, testing!
[00:29:48] <BrenBarn> (incidentally, notice how I made that example, I can copy and paste it and run it directly and it just returns a value)
[00:29:52] <jinsun__> novapy: the stuff in src should be in a subfolder of src
[00:30:01] *** Joins: johnjaye (~pi@173.209.65.233)
[00:30:03] <BrenBarn> I didn't print the value but you could do that if you want
[00:30:12] *** Joins: panella32 (~panella32@45.67.97.26)
[00:30:21] <novapy> wut?
[00:30:21] <panella32> Can a request header be like this? 'customData': C:\\temp\\whatever.txt'
[00:30:22] *** Parts: pystardust (~pystardus@2001:19f0:4401:f8:5400:3ff:fec4:f98c) (Leaving)
[00:30:22] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[00:30:37] *** Joins: darksun (~darksun@user/darksun)
[00:30:47] <jinsun__> novapy: and the name of the folder should be what you would import or put after python -m
[00:30:50] *** Quits: gentooclimax (~gentoocli@2a02-8440-6440-1beb-e1b7-a79a-cff9-1dbe.rev.sfr.net) (Remote host closed the connection)
[00:30:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[00:30:55] <Wooble> panella32: besides the missing quote, sure.
[00:30:58] <meejah> where are you going with those side-cutters? (probably better to pass as query-art or..)
[00:31:11] <novapy> jinsun__: ok
[00:31:12] <mike18_> SnoopJ: can i still use the for future in concurrent.futures.as_completed(future_to_url): somehow?
[00:31:42] <panella32> Wooble thanks. so no difference between single or double quotation?
[00:31:50] *** Joins: gentooclimax (~gentoocli@2a02-8440-6440-1beb-e1b7-a79a-cff9-1dbe.rev.sfr.net)
[00:31:57] <Wooble> panella32: if you're expecting that to open the file on your machine and actually send its contents, though, it won't.
[00:32:07] <meejah> panella32: no, "foo" is exactly the same as 'foo' (if that's what you mean)
[00:32:11] <Wooble> panella32: the only difference is which one you need to escape inside.
[00:32:37] <panella32> I just want to pass a file content as the value to that header.
[00:33:14] <fdsdf> use mime for that
[00:33:16] <Wooble> panella32: if you want the content, you'll need to open and read the file.
[00:33:46] <Wooble> panella32: or to send in the way an http server is likely to understand, https://docs.python-requests.org/en/latest/user/quickstart/#post-a-multipart-encoded-file
[00:33:47] <panella32> Can you please help me how to read a local file content and pass it as a header?
[00:34:19] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[00:34:21] <lseactuary> BrenBarn, understood, testing
[00:34:42] <lseactuary> "for ix,row" -- we just need for row, no?
[00:34:51] <meejah> panella32: maybe a higher-level description of what you're doing would help us give better help
[00:35:07] <panella32> Wooble Thanks I'll check that out.
[00:35:11] <fdsdf> please note that servers don't like headers that are too long
[00:35:22] <Wooble> panella32: something like https://bpa.st/ZMRA
[00:35:34] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 268 seconds)
[00:35:41] <Wooble> err, except close the open {   :)
[00:36:03] <panella32> Thanks so much Wooble! I really appreciate it.
[00:36:10] *** Joins: coldmountain (uid484352@id-484352.helmsley.irccloud.com)
[00:36:17] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[00:36:17] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 252 seconds)
[00:36:18] <BrenBarn> but how can a { get closed by a :)
[00:36:39] *** Quits: neceve (~quassel@2.26.93.228) (Read error: Connection reset by peer)
[00:36:59] <Wooble> editor macro?
[00:37:23] <lseactuary> BrenBarn i cant see where node is defined?
[00:37:40] <lseactuary> ignore, got it
[00:37:44] *** Joins: dbbr (~dbbr___@2804:5f80:70a0:3700:5441:32d:c49d:6395)
[00:37:56] <BrenBarn> you mean at the end in get_child?
[00:37:57] <BrenBarn> it's just the variable in the list comprehension
[00:38:02] <lseactuary> yup
[00:38:12] <lseactuary> is it graph.out_degree?
[00:38:14] <panella32> meejah Also thanks for your help. The problem already solved.
[00:38:15] <lseactuary> because g is not defined
[00:38:17] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Ping timeout: 240 seconds)
[00:38:38] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[00:38:54] <lseactuary> or g = self._build_graph()?
[00:39:16] <BrenBarn> oh whoops yeah
[00:39:20] <BrenBarn> (it's defined in my example because I called it g in the bit at the end)
[00:39:26] <lseactuary> no issue :)
[00:39:35] <BrenBarn> but yeah either change `g` to `graph` or vice versa in `get_child`
[00:40:35] *** Quits: FreEm1nD (~FreEm1nD@mail.guarapari.store) (Quit: Leaving)
[00:40:42] <novapy> jinsun__: thanks, that was my issue, buy now its showing an import error from the class file I created
[00:40:57] *** Quits: dbbr_ (~dbbr___@2804:248:f779:5900:210d:301e:cec6:e5fc) (Ping timeout: 240 seconds)
[00:40:57] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:7ce8:3fb1:9da3:a544) (Ping timeout: 240 seconds)
[00:41:31] <lseactuary> BrenBarn it is saying TypeError: Series objects are mutable, thus they cannot be hashed.
[00:41:38] <BrenBarn> anyway I gotta head out, hopefully that helps
[00:41:40] <jinsun__> novapy: class file?
[00:41:43] *** Quits: blei (~blei@209.201.38.106) (Quit: Client closed)
[00:41:56] <BrenBarn> lseactuary: not with the example I gave you it's not
[00:42:05] <novapy> jinsun__: I created a file with the classes I made
[00:42:08] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[00:42:18] <SnoopJ> lseactuary, that error indicates that a Series is being hashed somewhere, probably as an attempt to use it as the key in a dict.
[00:42:21] <novapy> Should I not have?
[00:42:30] <SnoopJ> (and indeed, Series are mutable and therefore not hashable)
[00:42:32] <lseactuary> but what does it mean? then i can debug?
[00:42:36] *** Quits: gentooclimax (~gentoocli@2a02-8440-6440-1beb-e1b7-a79a-cff9-1dbe.rev.sfr.net) (Quit: Konversation terminated!)
[00:42:43] <lseactuary> BrenBarnÂ  -- yes the code was very helpful, thank you!
[00:42:45] <SnoopJ> lseactuary, it means that the object can change, so trying to compute its hash is total nonsense
[00:42:51] <BrenBarn> that error can arise if you try to use a Series as a node in a graph for example
[00:43:10] <BrenBarn> (because networkx graphs require the nodes to be hashable)
[00:43:18] <lseactuary> but im inputting a dataframe only
[00:43:25] <SnoopJ> a DataFrame is a collection of Series objects
[00:43:36] <SnoopJ> (every "column" is a Series)
[00:43:41] <lseactuary> but the example i gave was a dataframe also no?
[00:43:44] *** Joins: gentooclimax (~gentoocli@2a02-8440-6440-1beb-e1b7-a79a-cff9-1dbe.rev.sfr.net)
[00:43:45] <jinsun__> novapy: where is that file? was it in the tree you pasted before? also, can you paste the full traceback of the imoprt error?
[00:44:07] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[00:44:08] <BrenBarn> like I said, I gotta go, but presumably you're getting that error because you're integrating the code I gave you into some other code, so there's some mismatch between the example you gave and the code you're wrapping around it
[00:44:23] <lseactuary> yup no issues, doing some more tests, thanks for the help!
[00:44:55] *** Joins: shiriru (~shiriru@user/shiriru)
[00:45:05] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[00:45:49] <FMBR> Hi guys, I have a super dumb question since... well, haven't used Python in a few years.
[00:45:50] <FMBR> Basically, trying to use os.walk to proceed over a bunch of files that have multiple versions (eg file_v0001.txt thru file_v0004.txt) and I only want to keep the latest one.Â  That's not a problem, however, I can't seem to figure out the logic to stay in that directory and not also grab the next directory, if that makes sense.Â  Logically the
[00:45:50] <FMBR> answer is "while root doesn't change it's name do thing" but I'm not sure how to go about doing that.Â  Basic paste here: https://bpa.st/TQFQ mostly just to show off the folder structure since it's pretty much just a basic os.walk
[00:45:57] <lseactuary> SnoopJÂ  i still dont get the error. in the example i have a pandas dataframe also which is a series?
[00:47:01] <nedbat> FMBR: you could use os.walk to just visit the directories, and then os.listdir to get the files in the directory.
[00:47:59] <mike18_> SnoopJ: please some feedback to: https://ideone.com/VGYHIV
[00:48:20] <novapy> jinsun__: yeah it was in the tree, it was feedutils.py, heres the error: https://bpaste.net/K5RA
[00:48:21] <FMBR> ooh that sounds like a good idea. I'll fiddle with that, thank you!
[00:48:35] *** Joins: darksun (~darksun@user/darksun)
[00:48:35] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:49:19] <SnoopJ> mike18_, I don't have any feedback for you
[00:49:27] <mike18_> oh ok
[00:49:47] <mike18_> i wonder if i can do something like: url = future_to_url[future]
[00:49:54] <mike18_> or i need to return the url back
[00:49:59] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:b89f:3526:404:e4fa)
[00:50:00] <mike18_> from the thread func
[00:50:52] <lseactuary> we are looping through rows, which are series?
[00:50:58] <lseactuary> but i dont get why its a problem?
[00:51:10] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Quit: Leaving)
[00:51:28] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Remote host closed the connection)
[00:51:30] <jinsun__> novapy: yt-feed is not a valid module name, change it to yt_feed, and feedutils is not a top level module it is a submodule of yt_feed, so do `import yt_feed.feedutils`
[00:51:48] *** Quits: onichomp (~onichomp@2806:264:4408:86:f5c6:8c2a:5cff:c011) (Read error: Connection reset by peer)
[00:52:26] *** Joins: onichomp (~onichomp@2806:264:4408:86:f5c6:8c2a:5cff:c011)
[00:52:34] *** Quits: SuperL4g (~akulbe@user/superlag) (Remote host closed the connection)
[00:52:52] *** Joins: upsala (~zcb@185.213.155.232)
[00:52:59] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[00:53:02] <jinsun__> novapy:  or `from yt_feed import feedutils` so that you can refer to it as feedutils in the rest of the code
[00:53:14] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 256 seconds)
[00:54:09] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[00:54:42] <lseactuary> i guess we need to keep for ix, row in self.df.iterrows(): but ix isn't used i nthe code?
[00:54:56] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[00:56:17] *** Quits: shiriru (~shiriru@user/shiriru) (Quit: Leaving)
[00:57:27] <jinsun__> lseactuary: you can change that to `for _, row in self.df.iterrows():` if it is some linter complaining
[00:57:50] *** Joins: Pickchea (~private@user/pickchea)
[00:57:54] <lseactuary> yup but then im getting [] as output
[00:57:58] <lseactuary> which doesnt seem correct
[00:58:42] <jinsun__> what I sugggested will not change the behavior of the code
[00:58:58] <jinsun__> unless you were actually using ix in the loop
[00:59:12] <lseactuary> yup i kept the same code, just changed the ix to _
[00:59:17] <lseactuary> but i am getting [] as output
[00:59:21] <lseactuary> which doesnt seem coreect
[00:59:41] <lseactuary> _build_graph will loop through each row of the dataframe and make a single unique graph?
[01:00:38] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[01:00:47] *** Joins: Elodin (~weechat@user/elodin)
[01:01:03] *** Quits: jinsun__ (~quassel@user/jinsun) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[01:01:18] *** Quits: onichomp (~onichomp@2806:264:4408:86:f5c6:8c2a:5cff:c011) (Read error: Connection reset by peer)
[01:01:55] *** Joins: onichomp (~onichomp@2806:264:4408:86:f5c6:8c2a:5cff:c011)
[01:04:02] <lseactuary> it seems to be building the graph, so i think maybe the [ node...] part is not correct of the code?
[01:04:03] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[01:04:09] <lseactuary> as im getting an empty list
[01:04:28] *** Joins: jinsun (~quassel@user/jinsun)
[01:04:37] *** Quits: gentooclimax (~gentoocli@2a02-8440-6440-1beb-e1b7-a79a-cff9-1dbe.rev.sfr.net) (Ping timeout: 240 seconds)
[01:05:03] *** Quits: xx (~xx@user/xx) (Quit: xx)
[01:05:23] *** Joins: xx (~xx@user/xx)
[01:05:50] *** Quits: kmh (~kmh@2a00:6020:5004:6800:f874:97da:ed2c:e94) (Remote host closed the connection)
[01:06:01] *** Joins: kmh (~kmh@2a00:6020:5004:6800:f874:97da:ed2c:e94)
[01:06:13] *** Quits: xx (~xx@user/xx) (Client Quit)
[01:06:35] *** Joins: xx (~xx@user/xx)
[01:06:53] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[01:09:41] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[01:09:55] <lseactuary> anyone here who can understand the networkx package? i think maybe the code is not building the tree uniquely perhaps causing the issue?
[01:12:44] *** Quits: az (az@user/azz) (Quit: Stable ZNC by #bnc4you)
[01:13:11] <parv> FMBR, how would you get subdirectories (which are in "dirs") while looping over "files" (which are only the non-directory files)? Or, am I missing in your query?
[01:13:47] *** Joins: az (az@stable.bnc.by.bnc4you.xyz)
[01:13:54] *** Quits: lseactuary (~lseactuar@2601:646:202:2f10:8483:597a:7d85:7d6a) (Quit: Client closed)
[01:14:10] *** az is now known as Guest9955
[01:14:30] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[01:14:37] *** Joins: lseactuary (~lseactuar@2601:646:202:2f10:8483:597a:7d85:7d6a)
[01:14:43] <mike18_> does anybody use more_itertools.grouper? what does it do if there are only 5 urls? future_to_url = {executor.submit(load_url, group, 60): group for group in more_itertools.grouper(2, URLS)}
[01:15:40] *** Joins: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:dd6:7aaa:2a1a:9b8d)
[01:15:44] *** Quits: gdd (~gdd@129.199.146.230) (Ping timeout: 250 seconds)
[01:15:45] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[01:16:15] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[01:16:17] *** Quits: andreasbuhr (~quassel@p548dde8f.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[01:16:21] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10f1:5a5f:651a:7d:ff5:1a7f)
[01:17:10] <toma> thanks for all the help. have a great weekend.
[01:17:15] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl48agstdwh6k6osf.ipv6.telus.net) (Quit: Leaving)
[01:17:48] *** Joins: gdd (~gdd@129.199.146.230)
[01:17:52] *** Joins: kilitary (~kilitary@188.242.187.4)
[01:18:03] <FMBR> parv I probably simplified my paste too much, but basically I just need to look at single directory at a time and see in that single flat directory (without needing to go into a subdir or look above) everything that's *v????.txt and deleting everything but the biggest one
[01:18:06] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.4)
[01:18:17] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[01:18:24] <mike18_> look like i fixed it
[01:18:37] <FMBR> largest named one, rather, so v0001, v0002, v0003, v0004, keep v0004, burn the others
[01:18:37] <SnoopJ> Anybody happen to know why `coloredlogs` output seems to be garbled under Windows Terminal if subprocess is invoked? I suspect subprocess is doing something it doesn't expect to the terminal state. Command doesn't seem to matter.
[01:18:49] <Repiphany> FMBR: That's what that `for root, dirs, files in os.walk(bp)` is already doing
[01:19:06] <Repiphany> Do a `print(root)` in between line 5 and 6
[01:19:28] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[01:20:15] <Repiphany> or `print(files)` instead of `for names in files`
[01:20:35] *** Quits: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:dd6:7aaa:2a1a:9b8d) (Ping timeout: 268 seconds)
[01:20:37] *** Joins: Elodin (~weechat@user/elodin)
[01:20:38] *** Joins: LiftLeft2 (~LiftLeft@gateway/vpn/pia/liftleft)
[01:20:48] <Repiphany> You're just not seeing where your loop walks in to the next directory with the way you're printing files out
[01:21:51] <mike18_> SnoopJ: i fixed it - sorry to ping you that often!
[01:21:55] <FMBR> ...
[01:21:58] <FMBR> I need a rubber duck
[01:22:07] <FMBR> thanks!
[01:22:07] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[01:22:26] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 268 seconds)
[01:24:02] <c4017w_> Is it possible to run a module from a python interpreter? https://bpa.st/YDTQ
[01:25:27] <Repiphany> c4017w_: Importing does run the module, the `if __name__ == '__main__':` is specifically meant to not run when importing
[01:26:06] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[01:26:20] <SnoopJ> ...huh, it seems that the flaw *only* occurs with subprocess.check_output(). Using Popen resolves it.
[01:27:39] <Repiphany> c4017w_: If you want something that can also be run after importing, define a main() function that runs in the `if __name__ == '__main__': main()` and also call that with `my_module.main()`
[01:28:14] *** Quits: BlessJah (~BlessJah@user/blessjah) (Remote host closed the connection)
[01:28:37] *** LiftLeft2 is now known as LiftLeft
[01:28:47] <c4017w_> Repiphany, that sounds like the way to do it, thanks
[01:28:52] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[01:29:03] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[01:30:09] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[01:30:32] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[01:30:50] *** Joins: BlessJah (~BlessJah@user/blessjah)
[01:31:34] *** Joins: ittner (~ittner@2804:15e4:806b:4b00:7115:e400:230:c739)
[01:31:41] *** Joins: c4017w (~c4017@209.52.68.8)
[01:31:42] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:653c:9519:8897:3200) (Remote host closed the connection)
[01:31:57] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:2c3b:c5fa:9a9e:d9f2)
[01:34:10] <SnoopJ> okay, not *only*, it happens with run() as well, but still, what the heck. I assume it's writing some additional output to a stream
[01:34:46] *** Quits: aslicedbanjo (~aslicedba@host86-150-115-152.range86-150.btcentralplus.com) (Quit: Leaving.)
[01:34:48] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[01:34:48] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 250 seconds)
[01:35:46] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[01:36:05] *** Quits: audio (~audio@user/audio) (Ping timeout: 256 seconds)
[01:36:32] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[01:38:38] <Vision> msg = "AT&T Free Msg: " + prev_month + " bill is paid. Thanks " + name + " Here's a little gift for you " + nameurl
[01:38:42] <Vision> whoops wrong window
[01:38:45] *** Quits: lseactuary (~lseactuar@2601:646:202:2f10:8483:597a:7d85:7d6a) (Quit: Client closed)
[01:39:28] <c4017w> That doesn't look nefarious at all
[01:39:55] *** Joins: Elodin (~weechat@user/elodin)
[01:41:02] <SnoopJ> mm, I can reproduce the problem if I do Popen() and then communicate(), so I guess whatever flaw I'm seeing has something to do with communicate() on Windows?
[01:41:11] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 252 seconds)
[01:42:11] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[01:42:34] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:b89f:3526:404:e4fa) (Quit: I have gone to sleep. ZZZzzzâ¦)
[01:43:08] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:6c5d:b410:2b97:32e2) (Quit: Client closed)
[01:44:20] *** Guest2797 is now known as zerosum
[01:44:31] *** Quits: zerosum (~zerosum@162.255.139.2) (Changing host)
[01:44:31] *** Joins: zerosum (~zerosum@user/zerosum)
[01:44:34] *** Joins: lseactuary (~lseactuar@2601:646:202:2f10:c913:6291:7299:8810)
[01:44:37] *** Joins: dntreou (~yakiza@105-209-155-171.access.mtnbusiness.co.za)
[01:44:44] <SnoopJ> hrm, no, it happens with wait() too. What the heck
[01:44:48] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[01:45:26] <zerosum> hey all, if I wanted to compare and see if two dict values are the same could I just do if dict_item_x["key"] == dict_item_y["key"] ?
[01:46:18] *** Quits: onichomp (~onichomp@2806:264:4408:86:f5c6:8c2a:5cff:c011) (Read error: Connection reset by peer)
[01:46:55] *** Joins: onichomp (~onichomp@2806:264:4408:86:f5c6:8c2a:5cff:c011)
[01:48:05] <SnoopJ> zerosum, yes, as long as you are sure the key exists in both dictionaries
[01:49:00] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[01:49:02] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10f1:5a5f:651a:7d:ff5:1a7f) (Remote host closed the connection)
[01:49:11] *** Quits: yassernasc (~yassernas@ec2-54-87-145-249.compute-1.amazonaws.com) (Remote host closed the connection)
[01:49:19] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10f1:5a5f:651a:7d:ff5:1a7f)
[01:49:39] <zerosum> SnoopJ yes they do exist in both, but for whatever reason is not working.. this is my code https://bpa.st/PKKQ
[01:50:23] <zerosum> my elif prints out stuff that should have never returned true
[01:51:22] <zerosum> I basically do not want to print items if key value of "site" does not equal key value of "name"
[01:51:46] <zerosum> but it prints items that do :\
[01:52:46] *** Quits: vsantana (~Thunderbi@fttx-177136149200.usr.predialnet.com.br) (Quit: vsantana)
[01:53:23] <SnoopJ> aha, this flaw only exhibits if the process being run wants to touch the output stream, rundll32 doesn't reproduce it...
[01:53:27] <lseactuary> im still getting an empty output
[01:53:33] <lseactuary> and cant see where the issue is
[01:53:40] <lseactuary> any ideas?
[01:54:32] *** Joins: Guest28 (~Guest28@138.199.31.97)
[01:54:59] <Guest28> hi
[01:55:15] *** Joins: norwood (~mostlyhum@104-3-188-144.lightspeed.sntcca.sbcglobal.net)
[01:55:59] <Guest28> kivy or pysimplegui?
[01:56:08] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 256 seconds)
[01:56:11] *** Joins: BLeo193 (~BLeo193@natp-128-119-202-235.wireless.umass.edu)
[01:56:52] <BLeo193> Hello:) Â I am looking if someone can guide me towards helping me debug my project, if anyone is available and could help I'd appreciate it :)
[01:57:09] <parv> zerosum, Print out the "site" & "name" values too
[01:57:27] *** Quits: Guest28 (~Guest28@138.199.31.97) (Client Quit)
[01:57:45] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[01:58:23] <BLeo193> It is a decently sized assignment, having to do with algorithms and creating graphs using ISP routers.
[01:58:50] *** Joins: Elodin (~weechat@user/elodin)
[01:58:50] <BLeo193> My algorithms are giving me incorrect paths
[01:59:02] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[01:59:59] <SnoopJ> interesting, I guess this is a bug in subprocess (at least on 3.7) on Windows, borrowing some win32 API code from this issue, I see that the console mode changes for offending commands: https://bugs.python.org/issue29059
[02:00:07] <ChrisWarrick> BLeo193: please ask a specific question, show your code, and show how it fails
[02:01:03] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[02:01:16] *** Parts: norwood (~mostlyhum@104-3-188-144.lightspeed.sntcca.sbcglobal.net) (Textual IRC Client: www.textualapp.com)
[02:01:17] <SnoopJ> exhibits on 3.9 as well...
[02:01:20] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[02:01:29] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10f1:5a5f:651a:7d:ff5:1a7f) (Read error: Connection reset by peer)
[02:02:11] *** Joins: Barones (~Barones@user/Barones)
[02:03:23] <BLeo193> https://bpa.st/PZZQ
[02:04:02] *** Quits: M3troidman_ (~buttler@196.196.203.100) (Ping timeout: 240 seconds)
[02:04:03] <BLeo193> My program is giving me issues based on not finding the correct lowest path, as well as the MST not giving the correct destination router.
[02:04:21] <BLeo193> I can't seem to find the issue, if anyone could point me towards the right direction i'd appreciate it :)
[02:04:43] *** phryk_ is now known as phryk
[02:05:05] *** Quits: lifefir31 (~lifefir3@152.37.120.101) (Quit: The Lounge - https://thelounge.chat)
[02:05:39] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[02:05:55] <nedbat> BLeo193: there's a lot of code here, it might be hard for new eyes to make sense of it.
[02:06:08] <BLeo193> Yeah, it is a lot of code
[02:06:25] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:b89f:3526:404:e4fa)
[02:06:38] <nedbat> BLeo193: btw, nothing to do with your question, but it's not usual in Python to write getters and setters like in your Vertex class
[02:06:55] *** Joins: lifefir31 (~lifefir3@152.37.120.101)
[02:07:05] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Remote host closed the connection)
[02:07:09] <BLeo193> Yeah, it is for an assignment. I am required to do it with that class
[02:07:32] <nedbat> BLeo193: they gave you that class? so much Java leaking into Python education :)
[02:08:09] <BLeo193> Yeah haha
[02:08:23] *** Joins: LiftLeft (~LiftLeft@mobile-166-171-250-251.mycingular.net)
[02:08:33] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:b89f:3526:404:e4fa) (Client Quit)
[02:10:13] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:e880:89ff:3e74:550f) (Ping timeout: 240 seconds)
[02:11:18] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[02:11:33] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[02:12:08] <lseactuary> the code for the graph may have directed cycles
[02:12:11] <lseactuary> i dont think its unique paths?
[02:12:30] *** Quits: lakrass (~lakrass@user/lakrass) (Ping timeout: 250 seconds)
[02:13:03] *** Joins: M3troidman (~buttler@196.196.203.140)
[02:13:13] <BLeo193> What makes you say that?
[02:13:30] <whatsupdoc> Is it possible to pass in properties of a class as default arguments to a method of that class?
[02:13:39] <lseactuary> anyone here good with the networkx package?
[02:14:25] <nedbat> whatsupdoc: can you say more about "properties of a class"? Do you mean attributes on an object?
[02:14:35] <BLeo193> I am actually not even allowed to use external libraries, so I had to write the code from scratch
[02:14:36] <whatsupdoc> sure
[02:14:47] <whatsupdoc> keyword arguments
[02:14:56] <BLeo193> networkx could have been much easier haha
[02:15:02] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:15] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[02:15:21] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[02:15:23] <jim> hi, is there somewhere I can read class int?
[02:15:24] <lseactuary> BLeo193 you are good wih netwrokx?
[02:15:28] <nedbat> whatsupdoc: you can't do this:  def method(self, a=self.default_a)
[02:15:30] <lseactuary> *networkx
[02:15:42] <Yhg1s> jim: in the CPython source. It's implemented in C. What are you hoping to learn?
[02:15:48] <nedbat> whatsupdoc: because the default value is evaluated with the method is defined, not when it is called.
[02:15:48] <whatsupdoc> at all? dang it
[02:15:50] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f444:a000:4917:bc56:f54d:812b) (Ping timeout: 252 seconds)
[02:15:56] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:16:07] <nedbat> whatsupdoc: you would do this:  def method(self, a=None):  if a is None: a = self.default_a
[02:16:12] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[02:16:17] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[02:16:20] *** Joins: BLeo19380 (~BLeo193@natp-128-119-202-235.wireless.umass.edu)
[02:16:26] <BLeo19380> Not really, did some research but I have never used it, but our professor told us first day we aren't allowed to use it
[02:16:28] <whatsupdoc> i guess, thanks, or define a function within a function
[02:16:55] <nedbat> whatsupdoc: i don't think a nested function would do what you want either.
[02:16:59] *** Joins: jcass (~cindy@50-0-146-31.dsl.dynamic.fusionbroadband.com)
[02:17:33] <jim> Yhg1s, mainly what it looks like, and more about the class system of python
[02:18:22] *** Joins: Elodin (~weechat@user/elodin)
[02:19:02] <lseactuary> anyone here good with this function: https://docs.python.org/3/library/asyncio-task.html#running-tasks-concurrently
[02:19:19] <jim> a friend was surprised that every data is in a class
[02:19:26] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 250 seconds)
[02:19:43] *** Quits: BLeo193 (~BLeo193@natp-128-119-202-235.wireless.umass.edu) (Ping timeout: 256 seconds)
[02:19:59] <Yhg1s> jim: I'm not sure what you mean by 'the class system', but int's implementation will tell you nothing about classes, really.
[02:20:39] <nedbat> jim: the C code can be a difficult way to understand how Python works. It's authoritative, but not designed for pedagogy
[02:21:37] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::4) (Ping timeout: 240 seconds)
[02:21:59] <jim> actually the person decided to join here, so he's listening too... ok, what would be better for understanding that? also, aside, he's trying to understand the purpose of the first arg of a method (usually called self)
[02:22:37] *** Quits: dbbr (~dbbr___@2804:5f80:70a0:3700:5441:32d:c49d:6395) (Ping timeout: 240 seconds)
[02:22:44] <BLeo19380> @iseactuary could you explain to me a little about them not being unique paths?
[02:22:57] <jim> I did tell him, every data is an object
[02:23:16] <Yhg1s> jim: understanding what, exactly? How everything is an object? The Python tutorial, probably?
[02:23:33] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[02:23:35] *** Joins: dbbr (~dbbr___@2804:5f80:70a0:3700:5441:32d:c49d:6395)
[02:23:42] <SnoopJ> On a scale of 1 to "oh my god" how terrible would it be to use sys.addaudithook() to restore ANSI functionality to a Windows console after subprocess.Popen events?
[02:23:49] <jim> maybe he's up for that tutorial; we can try that
[02:23:53] <SnoopJ> ANSI escape* functionality
[02:24:37] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 250 seconds)
[02:25:13] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:25:15] <SnoopJ> considering submitting a PR to coloredlogs, which only does enable_ansi_support() once at import time, but it *could* install such a hook...
[02:26:29] *** Quits: Z-cat (~Z-cat@user/z-cat) (Quit: Leaving)
[02:26:47] <SnoopJ> ...shoot, nevermind, it doesn't work anyway. I guess probably because the event is firing before the subprocess, but I'd need it after...
[02:26:53] *** Joins: Z-cat (~Z-cat@user/z-cat)
[02:27:01] *** Quits: kilitary (~kilitary@188.242.187.4) (Remote host closed the connection)
[02:29:00] *** Quits: Guest7856 (~Guest7856@200-140-128-103.bsace703.dsl.brasiltelecom.net.br) (Ping timeout: 256 seconds)
[02:29:29] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[02:29:48] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[02:30:05] *** Joins: mickey8 (~user@user/mickey)
[02:30:21] *** Quits: fukuda (~fukuda@2804:431:c7f5:a3c3:944d:fee1:2147:96a4) (Ping timeout: 245 seconds)
[02:30:37] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[02:30:52] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:31:15] *** Joins: fukuda (~fukuda@2804:431:c7f5:a3c3:9fdb:d7d3:c39f:3ce6)
[02:32:07] *** Quits: dbbr (~dbbr___@2804:5f80:70a0:3700:5441:32d:c49d:6395) (Ping timeout: 268 seconds)
[02:32:42] *** Joins: c4017w_ (~c4017@209.52.68.8)
[02:34:32] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[02:35:48] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[02:36:48] *** Quits: adeliktas78 (~adeliktas@v15153.1blu.de) (Quit: Ping timeout (120 seconds))
[02:37:27] *** Joins: adeliktas7 (~adeliktas@v15153.1blu.de)
[02:37:55] *** Joins: crashrep (~crashrep@user/crashrep)
[02:37:56] *** Joins: zamanf (~dev@2a02:587:3240:a000:a1ae:e977:79d2:f2dd)
[02:38:54] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 268 seconds)
[02:40:08] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[02:40:48] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[02:41:28] *** Quits: eN_Joy (~eN_Joy@wsip-72-213-93-155.ok.ok.cox.net) (Ping timeout: 256 seconds)
[02:42:06] *** Joins: eN_Joy (~eN_Joy@wsip-72-213-93-155.ok.ok.cox.net)
[02:42:43] <Repiphany> numpy.einsum is making my head asplode
[02:42:55] *** Joins: hams (~hams@c-73-255-22-88.hsd1.tx.comcast.net)
[02:42:55] *** Quits: hams (~hams@c-73-255-22-88.hsd1.tx.comcast.net) (Changing host)
[02:42:55] *** Joins: hams (~hams@user/hams)
[02:43:32] *** Quits: dreamon (~dreamon@pd950385d.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[02:43:55] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[02:44:21] <SnoopJ> Repiphany, what numerics library would be complete without a confusing little DSL :)
[02:45:14] <SnoopJ> not that I can think of any analogues outside of numpy
[02:45:22] *** Quits: zamanf (~dev@2a02:587:3240:a000:a1ae:e977:79d2:f2dd) (Ping timeout: 260 seconds)
[02:45:47] <Repiphany> I had some code that was using `numpy.core.umath_tests.inner1d` which I guess is not really part of the public API so was trying to figure out how to replace it with einsum
[02:45:47] *** Quits: coldmountain (uid484352@id-484352.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[02:47:27] <Repiphany> `np.einsum("...i,...i->...", a, b) # what is this wizardry`
[02:48:33] <kosh> einsum is based on einstein notation and I never did understand that
[02:48:49] <kosh> had that in one of my classes and the professor really liked it but it did not make sense to me
[02:48:57] <SnoopJ> it's all about repeated indices, if an index appears twice in a term, you "contract" (sum) over that term, basically
[02:49:01] <kosh> Repiphany, good luck
[02:49:21] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:61c2:2519:9983:2238)
[02:49:38] *** Joins: monkeyPlus (~monkeyPlu@2001:8a0:6cc5:7e01:d8ac:eab8:6970:715d)
[02:49:43] <SnoopJ> "..." is the numpy idiom for "I don't care," so "...i,...i->..." is only concerned with the last axis of each input
[02:50:04] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzzâ¦)
[02:50:07] <whatsupdoc> {} gets treated as None?
[02:50:12] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 250 seconds)
[02:50:16] <SnoopJ> whatsupdoc, no
[02:50:19] <monkeyPlus> how does the str() algorithm works?! is it the best performance?? what about if i get each digit and cast it and add to variable..this is already done by str() right
[02:50:21] <parv> No, empty dict
[02:50:37] <monkeyPlus> like should i code my own version of str()
[02:50:38] <whatsupdoc> I have this line:  cur = d if d else self.tree
[02:50:44] <whatsupdoc> and it's always set to self.tree
[02:50:59] <whatsupdoc> But if I change it to:  cur = d if d or d == {} else self.tree
[02:51:08] <whatsupdoc> Then it works. Why?
[02:51:13] <SnoopJ> whatsupdoc, both {} and None are falsey: they turn into False if you call bool() on them. This is true of all empty containers.
[02:51:24] *** Quits: CoolerX (~CoolerX@user/coolerx) (Quit: Leaving)
[02:51:31] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:51:34] <SnoopJ> [], (), set(), "", b"" are all also False in this context
[02:51:41] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:54c4:4447:22bb:35aa)
[02:52:01] <whatsupdoc> Ok
[02:52:16] <SnoopJ> if you need to distinguish between None and other falsey things, `is None` is how you usually spell that.
[02:52:25] *** Quits: rMdes (~rmdes@my.armada.digital) (Quit: The Lounge - https://thelounge.github.io)
[02:52:30] <aphysically> how do I title a cpython PR that addresses multiple bpo issues (because they're fixed by the same change)
[02:52:34] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[02:53:05] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[02:53:22] *** Quits: dntreou (~yakiza@105-209-155-171.access.mtnbusiness.co.za) (Ping timeout: 256 seconds)
[02:53:26] *** Joins: thevar1able (~textual@46.39.45.122)
[02:54:26] *** Quits: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_1)
[02:54:35] <SnoopJ> aphysically, perhaps `bpo-xxxx, bpo-yyyy: ...` ? I imagine it's come up before, you could search through the historical commit messages
[02:54:35] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[02:54:48] <aphysically> I gave up when I got to october :P
[02:55:01] * SnoopJ was thinking of an automated search using git
[02:55:07] *** Joins: bloody (~bloody@user/bloody)
[02:55:18] * aphysically was not
[02:55:57] *** Joins: Thete (~thete@user/thete)
[02:56:05] *** Quits: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9) (Quit: Leaving)
[02:56:05] <aphysically> SnoopJ: I managed to figure out a way to patch the dataclasses stuff that wasn't completely mental, after a couple tries: https://github.com/python/cpython/pull/30997/files
[02:56:14] <aphysically> and like any good patch the test suite changes are longer than the patch
[02:56:25] <SnoopJ> aphysically, looks like my spelling is conventional: https://github.com/python/cpython/commit/a6fd0f414c0cb4cd5cc20eb2df3340b31c6f7743
[02:56:38] <aphysically> cool
[02:57:13] <SnoopJ> probably hard to see it in a manual review of the history, I found it by doing `git log --grep="bpo.*bpo" -1`
[02:57:34] <SnoopJ> err, not with -1, sorry, that finds a revert
[02:57:54] <aphysically> ah
[02:58:13] *** Quits: panella32 (~panella32@45.67.97.26) (Remote host closed the connection)
[02:58:26] <SnoopJ> even more recent one on 15 Jan actually, I must have missed that while paging through the results (lot of hits for reverts)
[02:58:56] *** Joins: TortillaSandwich (~TortillaS@user/tortillasandwich)
[02:59:21] <aphysically> apparently I missed it too
[02:59:28] <aphysically> (when manually searching)
[03:00:17] <TortillaSandwich> hey guys. I was working on a project on my local machine with python 3.7.9 on it, then moved it to my ubutu lts 16.04 system where I realized I didn't have 3.7.9. I produced a manual and working install of Python 3.7.9 on my LTS box and went to reconfigure my app. Before doing this I had accidentaly got confused and thought I needed 3.6.5, and installed pip and extensions there. Once I moved to
[03:00:20] <TortillaSandwich> 3.7.9, extensions I have in pip are no longer loading, but pip insists they are present. I've tried uninstalling, but nothing.
[03:00:36] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 250 seconds)
[03:01:38] *** Joins: lastshell1 (~lastshell@user/lastshell)
[03:02:05] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 250 seconds)
[03:02:14] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[03:02:42] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Read error: Connection reset by peer)
[03:02:57] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[03:03:38] *** Quits: maxzor_ (~maxzor@2a01cb04054faa0082975713880c0146.ipv6.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[03:03:49] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 250 seconds)
[03:04:45] *** Joins: Trashlord (~trash@user/trashlord)
[03:05:54] <parv> TortillaSandwich, Did you install -- pip, etc -- again for 3.7? Are those not working with python 3.7?
[03:05:57] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Read error: Connection reset by peer)
[03:06:02] *** Quits: hams (~hams@user/hams) (Ping timeout: 268 seconds)
[03:06:06] <TortillaSandwich> I did, but i feel like its confused on paths
[03:06:13] <TortillaSandwich> export PYTHONPATH="${PYTHONPATH}:/usr/local/lib/python2.7/site-packages:/usr/lib/python2.7/site-packages" << Would something like this possibly address it?
[03:06:15] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[03:06:33] <TortillaSandwich> (obv changing the version numbers to patch)
[03:06:37] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[03:06:59] <SnoopJ> TortillaSandwich, if you're invoking pip as just `pip` you are probably getting /usr/bin/pip which is explicitly for the system's Python
[03:07:13] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Read error: Connection reset by peer)
[03:07:29] <SnoopJ> if you always invoke pip as `python3 -m pip` you will always get pip for *that* Python and never stub your toe on this https://snarky.ca/why-you-should-use-python-m-pip/
[03:08:36] <TortillaSandwich> SnoopJ: thats what I figured, but even correcting that, and running "python3 -m pip" still doesn't seem to correct it
[03:09:18] <SnoopJ> TortillaSandwich, you could always try `/full/path/to/your/custom/python3 -m pip` to be sure you didn't goof on the pathing
[03:09:28] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:09:52] <altendky> is there a less repetitive way to write `db.execute("INSERT INTO some_table(x, y) values(:x, :y)", {"x": 1, "y": 2})` but still using a dict and names?  this is aiosqlite.  it uses names but it is still order dependent within the two 'lists' of parameters in the query.  real code https://github.com/Chia-Network/chia-blockchain/blob/86781e39c5e305e08c02272293c119ea3afa19b4/chia/data_layer/data_store.py#L99-L109
[03:09:54] <SnoopJ> definitely don't touch PYTHONPATH, especially not mixing across versions like the one you just shared, though.
[03:10:04] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:10:08] <TortillaSandwich> gotcha
[03:10:56] *** Quits: mat001 (~mat001@72.28.108.216) (Ping timeout: 256 seconds)
[03:10:57] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 240 seconds)
[03:11:26] *** Joins: Barones (~Barones@user/Barones)
[03:11:37] <TortillaSandwich> SnoopJ: any way to just clear out all the versions and rebuild from scratch, including pip?
[03:11:56] *** Quits: FMBR (~FMB@rrcs-76-79-143-230.west.biz.rr.com) (Quit: Client closed)
[03:13:18] <parv> If python3.6 is system python, then python3 could be python3.6 -- depends on $PATH
[03:13:44] *** Parts: monkeyPlus (~monkeyPlu@2001:8a0:6cc5:7e01:d8ac:eab8:6970:715d) ()
[03:13:44] <TortillaSandwich> $ python3 -V
[03:13:47] <TortillaSandwich> Python 3.7.9
[03:13:50] *** Joins: monkeyPlus (~monkeyPlu@2001:8a0:6cc5:7e01:d8ac:eab8:6970:715d)
[03:13:53] <TortillaSandwich> it would look like python3 is 3.7.9, but it seems conflused
[03:14:39] <monkeyPlus> hey. str() function is faster than https://bpa.st/45QA right?
[03:15:04] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:15:18] *** Joins: matsaman (~matsaman@user/matsaman)
[03:15:41] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[03:17:29] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Ping timeout: 250 seconds)
[03:17:52] <phy1729> almost certainly but python -m timeit
[03:19:03] *** Quits: fdsdf (~fdsdf@178.49.152.42) (Quit: Client closed)
[03:20:24] <leitz> Anyone done one of these folks courses?    https://testdriven.io/courses/tdd-fastapi/
[03:21:01] <novapy> is there a good way to make tui other than ncurses?
[03:21:03] *** Joins: Guest92 (~Guest92@89-212-226-71.dynamic.t-2.net)
[03:21:05] <wyre> hi guys, why do you think I'm having this exception? Jan 29 00:50:12 raspberrypi api-dp1642gw.py[537]: OSError: [Errno 30] Read-only file system: '/var/log/dp1642gw/api-dp1642gw.log'
[03:21:18] *** Quits: Guest92 (~Guest92@89-212-226-71.dynamic.t-2.net) (Client Quit)
[03:21:41] *** Joins: naranja (~orange@user/orangeboxcutter)
[03:21:42] <wyre> I've set the api-dp1642gw.service to run even with root, but it still says the fs is ro
[03:21:58] <wyre> but findmnt doesn't show /var/log mounted as ro
[03:22:15] <wyre> I can see / mounted as rw so ... I guess it should be able to write in there ð¤
[03:23:01] <novapy> wyre: what exaclty are the perms?
[03:23:27] <wyre> novapy, /var/log/dp1642gw is 755 pi:root
[03:23:31] <novapy> ie, run ls -al
[03:23:39] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[03:24:02] <novapy> it belongs to roots group, and your user then?
[03:24:05] *** Joins: Betal (~Betal@user/betal)
[03:24:33] <wyre> yes
[03:24:47] <wyre> it's a rpi, and the user is called 'pi'
[03:24:56] <novapy> have you tried running the script as root?
[03:25:43] <novapy> because i think a file has to belong to your user, and a group you are in
[03:26:13] <SnoopJ> TortillaSandwich, you can just remove any versions you installed for yourself. Don't touch the system Python (the ones associated with the python and python3 Ubuntu packages), though.
[03:26:44] *** Joins: manj-gnome (~manjaro-g@2600:8805:d80c:500::ca2)
[03:27:06] <novapy> wyre: if running it as root fixes it, you need to change the group to pi, or whatever your user's group is.
[03:27:35] *** Quits: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com) (Read error: Connection reset by peer)
[03:27:48] *** Quits: portalrat (~portalrat@user/portalrat) (Quit: Leaving)
[03:27:49] *** Quits: LiftLeft (~LiftLeft@mobile-166-171-250-251.mycingular.net) (Ping timeout: 240 seconds)
[03:28:07] *** Parts: manj-gnome (~manjaro-g@2600:8805:d80c:500::ca2) ()
[03:28:26] <wyre> novapy, the /var/log/dp1642gw folder is now 755 pi:pi and the systemd service has the User=root directive
[03:28:34] *** Joins: manj-gnome (~manjaro-g@2600:8805:d80c:500::ca2)
[03:28:34] <wyre> but it still fails ð¤
[03:28:50] *** Joins: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com)
[03:28:50] <wyre> still read-only filesystem ð¥
[03:28:55] <TortillaSandwich> SnoopJ: turns out im just terrible at this, I need to stick to security engineering :(
[03:29:29] <wyre> var and log also has 755 permissions, btw
[03:29:49] <SnoopJ> TortillaSandwich, don't feel too bad about it, everybody stubs their toe on "python3 and pip don't point at the same thing" eventually :)
[03:30:04] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 250 seconds)
[03:30:22] <TortillaSandwich> SnoopJ: I found the issue, I am basically wiping python and pip off the box and rebuilding with simply one version of both installed
[03:30:30] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[03:30:34] *** Joins: Guest1 (~Guest1@2804:14d:5c86:9282:40ef:2977:b90e:8e06)
[03:30:45] *** Joins: georgios (~georgios@user/georgios)
[03:31:06] <wyre> novapy, this is the whole traceback https://bpa.st/VOZQ
[03:31:07] <novapy> wyre: why is your sctpit where you put it?
[03:31:26] <novapy> s/sctpit/script
[03:31:33] *** Joins: d1cor (~diego@179.63.242.120)
[03:31:39] *** Joins: avaxar (~avaxar@36.72.212.92)
[03:32:04] <wyre> novapy, sure, /usr/local/bin/api-dp1642gw.py
[03:32:36] <TortillaSandwich> SnoopJ: though I see one thing thats been coming up as an issue, it says that it fails to make the module for _ctypes and thats cuasing problems once I try to deploy a chat bot in python
[03:32:55] <wyre> but I don't understand why when I run it as root with sudo it works as expected
[03:33:22] *** Joins: c4017w__ (~c4017@209.52.68.8)
[03:33:39] <novapy> because root has all permissions and generally fixes any perm errors
[03:34:01] <TortillaSandwich> /opt/Python-3.9.7/Modules/_ctypes/_ctypes.c:107:17: fatal error: ffi.h: No such file or directory
[03:34:04] <TortillaSandwich> compilation terminated.
[03:34:16] <wyre> novapy, but why when I tell systemd to run it as root it fails?
[03:35:15] <novapy> why would you tell systemd to run it?
[03:35:32] <wyre> novapy, I need to run it permanently every time the system starts
[03:35:37] <wyre> it's a service
[03:35:51] <novapy> can you not set it up as a cron job?
[03:35:57] <wyre> I don't like cron
[03:35:59] <wyre> I prefer systemd
[03:36:05] <wyre> is the appropriate tool to do it, for sure
[03:36:13] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Read error: Connection reset by peer)
[03:36:20] <wyre> it's the system service/daemon manager, so I want to do it with systemd
[03:36:26] *** Quits: d1cor (~diego@179.63.242.120) (Ping timeout: 256 seconds)
[03:36:29] *** Joins: esther (~esther@199.10.64.86)
[03:36:37] *** Parts: Duck (~nyany@dronebl/admin/cat) ()
[03:36:58] <TML> TortillaSandwich: You appear to be missing libffi-dev, or whatever your particular distro calls it
[03:37:00] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[03:37:14] <novapy> wyre: when you set it to run as root: HOw are you doing that?
[03:37:29] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[03:37:34] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[03:37:49] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[03:37:53] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[03:38:42] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[03:38:47] <wyre> [Service] section in a systemd service allows the `User=whoever` directive as `Group=whatever`
[03:39:08] <SnoopJ> TortillaSandwich, what TML said
[03:39:19] <TortillaSandwich> thanks TML, SnoopJ
[03:39:22] <TortillaSandwich> my bots up :)
[03:40:01] <SnoopJ> TortillaSandwich, there's a project called pyenv that is very handy for installing Python and managing multiple versions of it that is worth knowing about. It's one of the first things I do on a new Debian/Ubuntu installation.
[03:40:26] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 260 seconds)
[03:40:52] *** Joins: bitplane (~bitplane@2a00:23a8:826:a800:9cf7:b796:c13f:e90f)
[03:41:31] <bitplane> hi. is it possible to override the setters on a class, rather than an instance?
[03:41:41] *** Joins: LiftLeft (~LiftLeft@fixed-138-186-31-170.totalplay.net)
[03:42:04] <SnoopJ> bitplane, the answer to your question is "yes" if the class is written in Python, but can you elaborate on what you mean by "the setters"
[03:42:26] <bitplane> well, to avoid the X Y problem I'll explain my use-case
[03:42:53] *** Quits: naranja (~orange@user/orangeboxcutter) (Remote host closed the connection)
[03:43:02] <bitplane> I'm using a type checker, but I'm also using aenum to create enums with multiple attributes
[03:43:37] <SnoopJ> If anybody's been following my ravings about ANSI and the Windows console, I put together a PR to the library in question that includes a reproduction: https://github.com/xolox/python-humanfriendly/issues/59
[03:43:43] <SnoopJ> err, s/PR/issue/
[03:43:48] *** Quits: Gurkenglas (~Gurkengla@dslb-090-186-104-244.090.186.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[03:43:51] <bitplane> and the type checker sees "constant = value1, value2" as a tuple
[03:44:08] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:54c4:4447:22bb:35aa) (Quit: Textual IRC Client: www.textualapp.com)
[03:44:11] <parv> SnoopJ, same difference AFAIAC
[03:44:16] <SnoopJ> as well it should, that is a tuple
[03:44:20] <TML> bitplane: as it should
[03:44:39] <SnoopJ> (but go on with your description)
[03:44:40] <novapy> wyre: set user and group to root? not really sure that its a python thing, more of a filesystem permission error, unless you are are doing things in your script that require root perms
[03:44:43] <bitplane> I'd like to override the setter on the Enum class, so it constructs the NamedTuple at declaration time
[03:45:18] <bitplane> so I can keep my lines nice and short and use the syntactic sugar of declaring them as tuples
[03:45:33] <SnoopJ> parv, well, the issue might not actually turn into a PR because the only way I see to "fix" the problem might be too heavy-handed
[03:45:43] *** Joins: naranja (~orange@user/orangeboxcutter)
[03:46:20] <SnoopJ> bitplane, sorry, I can't really follow that description at all. Perhaps you could show us some code that illustrates what you have and what you want to do?
[03:46:27] <parv> SnoopJ, The issue is a report about the problem, no?
[03:46:42] <bitplane> https://bpa.st/KKYA <- here's an example declaration. I like this
[03:46:44] <SnoopJ> parv, right, and a PR would be "here's some changes to your code to fix it"
[03:47:04] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[03:47:25] <bitplane> but if I have a function definition that takes "Coin" as an argument type, type checker cries
[03:47:56] <bitplane> Tuple[str, bool, str] is not a Coin
[03:48:02] *** Quits: hqdruxn08__ (~hqdruxn08@user/hqdruxn08) (Read error: Connection reset by peer)
[03:48:20] *** Joins: newpy (~newpy@206.168.231.90)
[03:48:27] *** Joins: hqdruxn08__ (~hqdruxn08@user/hqdruxn08)
[03:48:57] *** Joins: Lenkov45 (~Lenkov45@45.133.193.6)
[03:49:07] * SnoopJ isn't sure where "setters" come into play here
[03:49:56] <parv> SnoopJ, I see your "PR" is different than mine (rather, of FreeBSD project which does not always have a patch by the reporter)
[03:49:58] <bitplane> so when `PENNY_OLD = "GB001A", True, "Copper penny; 1970 onwards."` is executed, some code runs that constructs a `CoinType`
[03:50:08] <SnoopJ> parv, ah. Yes, sorry, I mean "pull request"
[03:50:27] <bitplane> I'm open to other suggestions though
[03:50:53] <SnoopJ> I couldn't begin to make any, as I haven't yet understood the question
[03:50:58] <parv> SnoopJ, I was so wrong thenð³
[03:51:13] <newpy> I have a numpy question: https://paste.ee/p/0vJ57
[03:51:29] <newpy> I thought it would broadcast the identity matrix and spit out the same array a
[03:51:33] <SnoopJ> parv, nah, just incompatible meanings for the same initialism :)
[03:51:44] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[03:51:44] <parv> Right
[03:51:46] <newpy> I also tried I = np.array([np.identity(3)]) to no effect
[03:51:55] <bitplane> I guess `Coin.__setattr__(self, Tuple)` should create a `CoinType`?
[03:52:11] <SnoopJ> bitplane, what is a CoinType?
[03:52:29] <bitplane> well, it's what `Coin` is, being an Enum
[03:52:45] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[03:52:47] <bitplane> a namedtuple or dataclass that has the args from the tuple it's assigned to
[03:52:56] <bitplane> uh constructed from
[03:53:04] <SnoopJ> namedtuples don't really create types, they're "just" tuples
[03:54:00] <chilversc> I thought they still created a new type to track the names of each argument?
[03:54:30] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[03:54:37] <bitplane> in an ideal world, I want to be able to pass either `Coin("GB001A")` to a function, or pass Coin.PENNY_OLD to a function, and for them to have the same type
[03:55:03] <SnoopJ> chilversc, you're correct, I misspoke, it does make a subtype.
[03:55:10] <bitplane> if that's achievable then it'd be great
[03:56:10] <bitplane> currently `def melt_for_scrap(coin: Coin)` causes the type checker to cry if I call `melt_for_scrap(Coin.PENNY_OLD)`
[03:56:23] <SnoopJ> bitplane, it seems like it would be a lot better to define __new__ here: https://docs.python.org/3/library/enum.html#when-to-use-new-vs-init
[03:56:40] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[03:56:58] <bitplane> oh wow yes this looks good
[03:57:09] <bitplane> thank you!
[03:57:12] <SnoopJ> or I guess not "better" since I really don't understand what you were reaching for, but I think that does what you want
[03:57:21] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[03:57:28] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:58:01] <bitplane> well I'm reaching for clean, compact code without too many types being added just to please the linter
[03:58:22] <bitplane> it's already asking too much of me
[03:58:40] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[03:58:46] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[03:58:57] <bitplane> but I'll try that, thanks
[03:59:46] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[03:59:54] <mike18_> hi
[04:00:35] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 250 seconds)
[04:00:44] <chilversc> bitplane: though why not just have; PENNY_OLD = Coin("GB001A", True, "Copper penny; 1970 onwards.") ?
[04:00:50] *** Quits: Guest1 (~Guest1@2804:14d:5c86:9282:40ef:2977:b90e:8e06) (Quit: Client closed)
[04:01:37] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 240 seconds)
[04:02:11] <SnoopJ> if Coin were a dataclass that spelling could make a lot of sense, and then there could be an Enum to hold the known varieties of that class
[04:03:04] <bjs> bitplane: you can use Enum like that, there's an example in the docs https://docs.python.org/3/library/enum.html#planet
[04:04:07] *** Roey is now known as kilopita
[04:04:28] *** Joins: crashrep (~crashrep@user/crashrep)
[04:06:22] <newpy> can some one tell me how to get I multiplied by each vector in a here? https://paste.ee/p/0vJ57
[04:06:47] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:e880:89ff:3e74:550f)
[04:06:59] <newpy> I thought I.dot(a) would broadcast the identity matrix and give me a back
[04:07:05] *** Quits: admin123 (~harrymore@2607:fb90:558f:42d1:ed7f:df64:71cb:d760) (Ping timeout: 268 seconds)
[04:07:33] *** Quits: magla (~gelignite@55d49292.access.ecotel.net) (Quit: Stay safe!)
[04:08:10] *** Quits: KeiraT (~k@lulzsec.co.uk) (Ping timeout: 256 seconds)
[04:08:19] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 268 seconds)
[04:08:44] *** Quits: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net) (Ping timeout: 256 seconds)
[04:08:50] *** Joins: Everything (~Everythin@37.115.210.35)
[04:08:56] *** Quits: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Ping timeout: 268 seconds)
[04:09:27] <bitplane> chilversc: mostly because I've got a lot of these things and some have longish names, and I really dislike walls of repeating boilerplate
[04:09:30] <SnoopJ> newpy, dot() has really different behavior based on the number of dimensions of its inputs. I almost always avoid it for this reason.
[04:09:54] <newpy> SnoopJ, I see, what would you use instead?
[04:10:05] <newpy> I tried I.dot(a[0]) and it calculates like I expected
[04:10:27] <newpy> SnoopJ, ah, np.matmul(I,a) works as expected
[04:10:48] *** Quits: deltab (~deltab@user/deltab) (Ping timeout: 250 seconds)
[04:10:58] <SnoopJ> newpy, you could also spell that `I @ a`
[04:11:12] <newpy> oh interesting, what is @ shorthand for here?
[04:11:18] <newpy> oh, matmul duh
[04:11:29] <SnoopJ> yea Python has __matmul__ for the sake of numpy basically
[04:11:36] *** Quits: nomic (~nomic@2a00:23c7:ec90:a501:fd84:e20e:591b:a89) (Quit: Leaving)
[04:11:45] *** Joins: audiobirb (~audio@user/audio)
[04:11:46] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[04:11:57] <SnoopJ> same thing, using matmul() is probably a little friendlier to people who don't know this idiom, but it can be a mouthful
[04:12:02] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[04:12:12] <SnoopJ> (a handful?)
[04:12:19] <newpy> yea especially with 3+ matrices, @ seems more convenient
[04:12:57] *** Quits: mar77i (~martti@46-126-48-136.dynamic.hispeed.ch) (Ping timeout: 240 seconds)
[04:12:58] *** Quits: xx (~xx@user/xx) (Ping timeout: 250 seconds)
[04:13:43] *** Quits: thevar1able (~textual@46.39.45.122) (Quit: thevar1able)
[04:14:11] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[04:14:34] *** Joins: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net)
[04:14:35] *** Joins: kua (kuahara@072-182-135-032.res.spectrum.com)
[04:15:01] *** Quits: dsrt^ (~dsrt@75-147-197-198-Atlanta.hfc.comcastbusiness.net) (Remote host closed the connection)
[04:15:32] *** Quits: kuahara (kuahara@072-182-135-032.res.spectrum.com) (Ping timeout: 240 seconds)
[04:15:40] *** Joins: sveinse (~sveinse@2a01:799:55e:1000:c23f:d5ff:fe69:c6fb)
[04:16:00] *** Joins: fef (~thedawn@user/thedawn)
[04:16:17] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Ping timeout: 240 seconds)
[04:17:03] *** Quits: Z-cat (~Z-cat@user/z-cat) (Ping timeout: 250 seconds)
[04:18:49] <SnoopJ> I have used einsum() in the past when I wanted to do something a bit like broadcasting a matmul over a tensor (i.e. (N, N) and (M, N, N) producing M multiplications)
[04:19:07] <SnoopJ> but in this case happily the extra dimension is no problem and you can do straight for matmul :)
[04:20:01] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[04:20:34] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[04:20:43] *** Joins: gato (~gato@c-67-168-161-36.hsd1.wa.comcast.net)
[04:20:50] *** Joins: deltab (~deltab@user/deltab)
[04:21:04] *** Quits: lseactuary (~lseactuar@2601:646:202:2f10:c913:6291:7299:8810) (Quit: Client closed)
[04:21:37] *** Quits: therufuser (~therufuse@p5b02e2b2.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[04:21:42] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[04:22:09] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[04:22:26] *** Quits: gato (~gato@c-67-168-161-36.hsd1.wa.comcast.net) (Client Quit)
[04:22:53] *** Quits: grimvar (~grimvar@i5C75FEEF.versanet.de) (Ping timeout: 252 seconds)
[04:23:33] *** Joins: therufuser (~therufuse@p5b02e2b2.dip0.t-ipconnect.de)
[04:24:24] *** Joins: grimvar (~grimvar@i5C75F55F.versanet.de)
[04:24:37] *** Joins: yaalon (~yaalon@2603-8081-7004-2832-4c4d-ff46-972f-97a6.res6.spectrum.com)
[04:25:51] *** Joins: KeiraT (~k@lulzsec.co.uk)
[04:26:29] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[04:26:36] *** Joins: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[04:27:03] <BLeo19380> https://bpa.st/PZZQ Hi, so I'm still working on my project on building a graph of ISPs, for some reason, my MST does not give the correct ending output router for the path that is selected, and my shortest path is not giving the actual shortest path.
[04:27:25] *** Quits: manj-gnome (~manjaro-g@2600:8805:d80c:500::ca2) (Quit: Leaving)
[04:27:36] <BLeo19380> Am i allowed to send an imgur link to show the output?
[04:27:42] *** Quits: kua (kuahara@072-182-135-032.res.spectrum.com) (Ping timeout: 250 seconds)
[04:28:22] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:6c5d:b410:2b97:32e2)
[04:28:37] <sveinse> Just had an interesting experience: Have an old CGI-based website of a database datadump using html <table>. It dumps approx 10k records. My code were based on the cgi py module and run from uwsgi with in-code prints of raw html. Icky, right, so I set out to modernize this.
[04:28:46] <sveinse> First attempt: aiohttp with json API and react frontend. Data from aiohttp is very fast, but rendering in react is slow (2s). Second attempt: aiohttp+jinja2. Slow (3s). Third attempt: uwsgi cgi+jinja2. Slower (4.4s). Winner: Ye old uwsgi CGI script (820ms)
[04:29:02] *** Quits: LimeOn (~user@user/limeon) (Ping timeout: 240 seconds)
[04:31:46] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[04:31:54] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[04:32:59] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[04:33:10] *** Quits: parv (~quass@user/parv) (Ping timeout: 260 seconds)
[04:33:50] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[04:33:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[04:35:31] *** Joins: grooverman (~grooverma@177.102.119.200)
[04:36:24] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[04:36:30] *** Quits: grooverman_ (~grooverma@177.102.119.200) (Ping timeout: 256 seconds)
[04:36:50] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[04:37:17] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[04:39:38] *** Joins: Babar (~Babar@2405:4803:ff4d:98d0:71db:a036:9fd6:14a5)
[04:39:45] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:35bf:8b36:d4db:71cc)
[04:40:19] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[04:42:37] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 240 seconds)
[04:42:43] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-0dc7-4940-686f-5599.res6.spectrum.com)
[04:42:44] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[04:42:55] *** Joins: aknot_ (~aknot@2603:900a:1503:17bb:2319:6b78:8334:d512)
[04:43:19] *** Joins: aknot (~aknot@2603:900a:1503:17bb:2319:6b78:8334:d512)
[04:43:20] *** Joins: Kanjizai (~kanjizai@cpe-107-185-193-171.socal.res.rr.com)
[04:43:29] <matsaman> sveinse: I rather like CGI
[04:43:36] <matsaman> quite agnostic
[04:43:48] *** Joins: zmt01 (~zmt00@user/zmt00)
[04:44:35] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-35e0-06b2-095d-de4d.res6.spectrum.com) (Ping timeout: 250 seconds)
[04:45:12] *** Quits: akk (~akk@75-161-95-245.albq.qwest.net) (Quit: +++)
[04:46:57] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[04:47:43] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[04:49:01] *** Joins: Elodin (~weechat@user/elodin)
[04:49:36] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:49:54] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[04:50:40] *** Quits: Lenkov45 (~Lenkov45@45.133.193.6) (Ping timeout: 256 seconds)
[04:50:49] <c4017w_> I have a python/javascript question. I have a simple python script that does `sys.stdout.write("\n"); sys.exit(0)`, and I'm running this via `child_process` in javascript. However, the child_process returns "\r\n"! I'm trying to figure out at which point the conversion is happening. Is sys.stdout converting it based on some 'console type' flag coming from child_process? Or is child_process converting it when it receives it?
[04:51:06] *** Joins: Lenkov45 (~Lenkov45@45.133.193.13)
[04:51:07] <sveinse> matsaman: yes, I agree. It has its use. Dealing with raw html with inline print statements in the code is tedious thou. It seems the overhead with templating systems quickly makes it very slow
[04:51:13] *** Joins: zeden (~zeden@user/zeden)
[04:51:20] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[04:51:21] <nedbat> c4017w_: it sounds like you are on Windows. stdout is in text mode.
[04:51:22] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[04:51:30] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[04:51:32] <nedbat> c4017w_: try this: sys.stdout.buffer.write("\n")
[04:51:39] <c4017w_> yes, Windows
[04:51:42] <c4017w_> I'll try that
[04:52:22] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[04:52:22] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[04:52:38] *** Quits: daniel-k (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[04:52:39] <matsaman> <shrugs> it is more work after all
[04:52:54] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[04:53:00] <matsaman> wouldn't matter if it were something non-dynamic/cacheable, of course
[04:53:41] <c4017w_> nedbat, yup that worked. So sys.stdout.write does a line ending conversion, then pushes it to sys.stdout.buffer?
[04:54:06] *** Quits: yaalon (~yaalon@2603-8081-7004-2832-4c4d-ff46-972f-97a6.res6.spectrum.com) (Remote host closed the connection)
[04:55:57] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:56:09] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[04:56:32] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[04:56:53] <nedbat> c4017w_: yes
[04:57:55] *** Quits: BLeo19380 (~BLeo193@natp-128-119-202-235.wireless.umass.edu) (Quit: Client closed)
[04:57:58] *** Joins: panella32 (~panella32@45.67.97.26)
[04:57:59] <c4017w_> nedbat, apparently `sys.stdout.newline = ''` will prevent that. Is that preferred over using stdout.buffer directly?
[04:58:01] *** Joins: waynew (~wayne@user/waynew)
[04:58:13] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:58:39] <c4017w_> or uh `sys.stdout = io.TextIOWrapper(sys.stdout.buffer, newline='' )`
[04:58:42] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[04:58:43] <nedbat> c4017w_: idk if there's a reason to prefer one over the other.
[04:58:54] <panella32> What a simple way to execute a command like "mp4decrypt --key 1:KEY ./encrypted.mp4 ./decrypted.mp4" inside a python script?
[04:59:18] <panella32> (on windows)
[04:59:21] <sveinse> panella32: see subprocess
[04:59:22] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:59:22] *** Joins: txtsd (~txtsd@user/txtsd)
[05:00:37] *** Quits: Babar (~Babar@2405:4803:ff4d:98d0:71db:a036:9fd6:14a5) (Ping timeout: 250 seconds)
[05:00:41] <c4017w_> k, I'll stick with using stdout.buffer. Can't believe I never ran into this before
[05:00:46] <panella32> sveinse thanks.
[05:02:33] *** Joins: dsrt^ (~dsrt@75-147-197-198-Atlanta.hfc.comcastbusiness.net)
[05:04:04] <c4017w_> Ah actually I've run into it when writing to non-binary files. Makes sense now
[05:05:02] <novapy> where is a good place to store a config for a python cli app?
[05:05:30] <novapy> and it there a environment variable that is used?
[05:05:56] *** Joins: grooverman_ (~grooverma@152.254.155.54)
[05:06:05] *** Quits: grooverman (~grooverma@177.102.119.200) (Read error: Connection reset by peer)
[05:06:32] *** Joins: Lazenca (~lazenca@user/lazenca)
[05:07:53] *** Joins: Elodin (~weechat@user/elodin)
[05:08:18] *** Joins: nomic (~nomic@2a00:23c7:ec90:a501:fd84:e20e:591b:a89)
[05:09:32] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:09:53] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[05:10:30] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[05:11:28] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 250 seconds)
[05:12:12] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[05:12:14] <SnoopJ> novapy, the XDG Base Directory specification makes some good recommendation on where to store program data. The library `appdirs` provides good support for it, and it does reasonable things on not-Linux, too.
[05:12:21] <wyre> hi guys, is configparser a built-in? ð¤
[05:12:30] <SnoopJ> wyre, no, but it is part of the stdlib
[05:13:33] <wyre> SnoopJ, ty ð
[05:14:30] *** Quits: grooverman_ (~grooverma@152.254.155.54) (Ping timeout: 250 seconds)
[05:14:54] *** Joins: grooverman (~grooverma@177.102.119.200)
[05:15:02] *** Quits: marloi (~mark@69-165-156-124.dsl.teksavvy.com) (Ping timeout: 256 seconds)
[05:15:37] *** Joins: yaalon (~yaalon@2603-8081-7004-2832-4c4d-ff46-972f-97a6.res6.spectrum.com)
[05:15:57] *** Quits: bitplane (~bitplane@2a00:23a8:826:a800:9cf7:b796:c13f:e90f) (Ping timeout: 256 seconds)
[05:17:42] <johnjaye> the xdg names are not very intuitive to me
[05:17:50] <johnjaye> but i guess they make sense to a committee
[05:18:31] *** Quits: yaalon (~yaalon@2603-8081-7004-2832-4c4d-ff46-972f-97a6.res6.spectrum.com) (Remote host closed the connection)
[05:18:40] *** Joins: marloi (~mark@69-165-156-124.dsl.teksavvy.com)
[05:21:50] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[05:22:25] *** Joins: grooverman_ (~grooverma@177.102.119.200)
[05:22:57] *** Quits: pieguy128 (~pieguy128@bas8-montreal02-65-93-195-202.dsl.bell.ca) (Ping timeout: 240 seconds)
[05:23:20] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:ac45:95f6:5fe8:7ece)
[05:24:15] *** Joins: wei2912 (~wei2912@138.75.71.147)
[05:24:15] *** Quits: wei2912 (~wei2912@138.75.71.147) (Client Quit)
[05:25:14] *** Quits: grooverman (~grooverma@177.102.119.200) (Ping timeout: 256 seconds)
[05:25:27] <SnoopJ> johnjaye, which names do you find confusing?
[05:25:53] *** Joins: Z-cat (~Z-cat@user/z-cat)
[05:26:47] *** Joins: Elodin (~weechat@user/elodin)
[05:27:30] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[05:27:30] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[05:27:45] *** Quits: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740) (Quit: Leaving)
[05:28:13] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:35bf:8b36:d4db:71cc) (Quit: I have gone to sleep. ZZZzzzâ¦)
[05:28:39] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[05:28:55] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[05:30:20] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:32:08] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[05:32:52] *** Quits: Sargento (uid523534@wikipedia/Sargento-de-Hierro) (Quit: Connection closed for inactivity)
[05:32:56] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-37-70-24-250-178.dsl.bell.ca)
[05:34:22] *** Joins: c4017w__ (~c4017@209.52.68.8)
[05:34:53] *** Joins: lseactuary (~lseactuar@2601:646:202:2f10:c913:6291:7299:8810)
[05:35:18] <lseactuary> anyone good with this function: https://docs.python.org/3/library/asyncio-task.html#running-tasks-concurrently
[05:35:22] <lseactuary> little stuck on something
[05:35:30] <lseactuary> i want to call this function to call another function concurrently
[05:35:32] <lseactuary> it is possible?
[05:38:16] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[05:38:36] *** Quits: txtsd (~txtsd@user/txtsd) (Quit: WeeChat 3.4)
[05:38:37] *** Quits: bitblit_ (~bitblit@gateway/tor-sasl/bitblit) (Remote host closed the connection)
[05:38:59] *** Joins: bitblit_ (~bitblit@gateway/tor-sasl/bitblit)
[05:39:11] *** Quits: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com) (Ping timeout: 256 seconds)
[05:39:48] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[05:40:40] *** Quits: waxfire6 (~waxfire@65.119.2.240) (Quit: The Lounge - https://thelounge.chat)
[05:41:25] *** Joins: waxfire6 (~waxfire@65.119.2.240)
[05:42:26] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[05:42:26] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[05:42:26] *** Joins: JordiGH (~jordi@user/jordigh)
[05:43:20] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[05:43:52] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[05:44:02] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[05:44:55] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[05:46:22] *** Joins: merijn (~merijn@c-001-002-002.client.esciencecenter.eduvpn.nl)
[05:47:16] *** Joins: vlm (~vlm@user/vlm)
[05:47:36] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:6c5d:b410:2b97:32e2) (Quit: Client closed)
[05:48:38] *** Joins: Elodin (~weechat@user/elodin)
[05:49:26] *** Quits: Shikadi (~Shikadi@50.125.190.237) (Quit: Leaving)
[05:49:31] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[05:50:12] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[05:52:36] *** Joins: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com)
[05:53:51] *** Joins: txtsd (~txtsd@user/txtsd)
[05:53:52] <sveinse> lseactuary: you start another concurrent function by starting a new task: asyncio.create_task()
[05:53:56] *** Quits: therufuser (~therufuse@p5b02e2b2.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[05:54:02] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) ()
[05:54:18] <lseactuary> i have a loop: for result in results:
[05:54:18] <lseactuary> Â  #  f1.execute_f1_query(result)
[05:54:22] <lseactuary> where results is a list
[05:54:28] <lseactuary> inside this list is some commands
[05:54:39] <lseactuary> execute_f1_query will call a new server and execute the query on it
[05:54:52] <lseactuary> so im trying to split results ino groups of 100 and have it run through asyncio
[05:54:56] <lseactuary> will it work?\
[05:55:43] *** Quits: panella32 (~panella32@45.67.97.26) (Quit: Textual IRC Client: www.textualapp.com)
[05:55:48] <sveinse> lseactuary: I don't understand the context. What has asyncio to do with this? I think you'll need to post some come
[05:55:53] *** Joins: therufuser (~therufuse@p5b000a17.dip0.t-ipconnect.de)
[05:56:19] <lseactuary> i want to use asyncio to kick off the "f1.execute_f1_query(result)" call multiple times
[05:56:37] *** Joins: Fl0pFl1p (~FlipFlop@user/fl1pfl0p)
[05:57:04] <sveinse> is execute_... a regular blocking function? I don't see any await statements
[05:57:36] <lseactuary> yeah
[05:57:52] <lseactuary> for results in results: execute_query(result)
[05:58:04] <lseactuary> is basically execute_query(select blah from table;)
[05:58:11] <lseactuary> results is a list
[05:58:17] <lseactuary> with 2000+ sql queries
[05:58:24] <lseactuary> so im trying to batch process not sequential process
[05:58:34] <lseactuary> in the function execute_query i already call a new server
[05:58:53] <lseactuary> so i think i can use asyncio to create multiple tasks and send off batches of 100 result from results?
[05:59:29] <sveinse> Then no, asyncio is a concurrent library, not paralell execution, so you'll need an async sql library for that. Once you call a blocking call in an async function it'll block everything else
[05:59:46] *** Quits: monkeyPlus (~monkeyPlu@2001:8a0:6cc5:7e01:d8ac:eab8:6970:715d) (Quit: monkeyPlus)
[05:59:48] <lseactuary> hmm
[05:59:57] *** Quits: Fl1pFl0p (~FlipFlop@user/fl1pfl0p) (Ping timeout: 240 seconds)
[06:00:02] <lseactuary> asyncio can execute 2 functions at the same time?
[06:02:10] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 250 seconds)
[06:02:13] <sveinse> No, not at the same time, but concurrently. That is, only one is running at any given time, but it will multiplex between the various tasks on what it executes.
[06:03:28] <sveinse> But if the sql library were async, it would have been written as await execute_query() and it'll send off the request and do something else while waiting for the reply
[06:03:36] <lseactuary> if a function exeuctes 100 things on a server, then executing this function twice will work no?
[06:03:42] <lseactuary> i dont want sequential basically
[06:03:45] <lseactuary> i want in parallel
[06:05:02] <sveinse> If your execute_query() is blocking, then no, it won't work
[06:05:09] <lseactuary> what does blocking mean
[06:05:37] <sveinse> you call it in python and wait an amount of time until you get a value returned
[06:06:05] <lseactuary> ah
[06:06:10] <lseactuary> no its not blocking
[06:06:15] <lseactuary> i dont need a result from it
[06:06:18] <lseactuary> its a 'final function'
[06:06:35] *** Joins: Elodin (~weechat@user/elodin)
[06:07:09] <sveinse> Then you can do for...: execute_query() and be done with it, right?
[06:07:28] <lseactuary> yes but that will run each query in the list sequentially
[06:07:43] <lseactuary> say its [select 1 from table, select 2 from table, select 3 from table]
[06:07:59] <lseactuary> at the moment a loop will exeucute select 1 from table then select 2 from table etc
[06:08:09] *** Joins: acm1ptacm2pts[m] (~acm1ptacm@2001:470:69fc:105::1:83ac)
[06:08:09] <lseactuary> i want to execute select 1 from table at the same time as select 2 from table
[06:08:17] <lseactuary> or in paralle
[06:08:25] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[06:08:39] *** Joins: xlxlx (~igloo@c-76-108-51-178.hsd1.fl.comcast.net)
[06:08:41] *** Quits: xlxlx (~igloo@c-76-108-51-178.hsd1.fl.comcast.net) (Excess Flood)
[06:08:46] <sveinse> well, then your execute_query() is blocking, since it doesn't fire them all in quick succession
[06:08:49] *** Joins: Elodin (~weechat@user/elodin)
[06:09:24] <lseactuary> right but i can do like for results in result: execute_query(results[0:100]) and then next line execute_query(results[101:200])
[06:09:32] <lseactuary> issue is execute_query(results[101:200]) runs after execute_query(results[0:100])
[06:09:36] <lseactuary> not in parallel
[06:10:37] <lseactuary> you know what i mean?
[06:11:21] <sveinse> and you won't be able to change that unless you use a sql library that is built for async or starts with multiple threads
[06:11:21] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[06:11:31] <lseactuary> but its a functio
[06:11:42] <sveinse> ?
[06:11:43] <lseactuary> it still will run query 0...100 sequentially
[06:11:48] <lseactuary> and 101...200 sequentially
[06:11:50] <lseactuary> that is fine
[06:11:57] <lseactuary> but 0...10 can be run on one server
[06:12:01] <lseactuary> and 101...200 on another
[06:12:02] <lseactuary> no?
[06:13:07] <lseactuary> execute_query sends the SQL's to a server so we can parallelise the function call, not the internals of the function
[06:13:11] <lseactuary> if this makes sense?
[06:13:15] *** Joins: jazzy2 (~jaziz@user/jaziz)
[06:13:45] <sveinse> In async I would write something like this:   for result in results:  asyncio.create_task(execute_query(some_parameter))  This would fire off results number of concurrent requests. But this requires that the sql lib, execute_query, is an async function.
[06:14:10] <sveinse> Async function is written as "async def execute_task(...)"
[06:14:18] *** Quits: marloi (~mark@69-165-156-124.dsl.teksavvy.com) (Ping timeout: 250 seconds)
[06:14:19] *** jazzy2 is now known as jazzy
[06:15:08] <lseactuary> oki ill try it out :)
[06:15:23] <lseactuary> many thanks!
[06:15:24] <sveinse> Have you done asyncio before?
[06:15:27] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:15:28] <lseactuary> nope
[06:15:37] <lseactuary> was trying to learn it on a small use case
[06:16:17] <sveinse> If you haven't, please note that you'll need to run a eventloop for it to work. So please check out some docs about it
[06:16:57] <sveinse> And again, if your sql library doesn't have async methods, this won't work
[06:17:01] <lseactuary> thanks! ill read up
[06:17:26] <lseactuary> :)
[06:19:57] *** Quits: merijn (~merijn@c-001-002-002.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[06:21:29] *** Joins: califax- (~califax@user/califx)
[06:22:03] *** Quits: lseactuary (~lseactuar@2601:646:202:2f10:c913:6291:7299:8810) (Quit: Client closed)
[06:22:28] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[06:23:36] *** Quits: LiftLeft (~LiftLeft@fixed-138-186-31-170.totalplay.net) (Ping timeout: 256 seconds)
[06:24:20] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:24:20] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[06:24:27] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 250 seconds)
[06:24:37] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:24:42] *** brabrax_ is now known as brabrax
[06:24:48] *** Quits: ittner (~ittner@2804:15e4:806b:4b00:7115:e400:230:c739) (Quit: NamÃ¡riÃ«)
[06:25:16] *** Joins: maryo (~Maryo@user/maryo)
[06:26:18] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[06:26:18] *** califax- is now known as califax
[06:27:51] *** Joins: Elodin (~weechat@user/elodin)
[06:28:22] *** Quits: mike18_ (~geri@71-220-52-187.mpls.qwest.net) (Remote host closed the connection)
[06:28:37] *** Quits: Lenkov45 (~Lenkov45@45.133.193.13) (Ping timeout: 240 seconds)
[06:30:12] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[06:31:36] *** Joins: SuperLag (~akulbe@user/superlag)
[06:32:01] *** Joins: zamanf (~dev@2a02:587:3240:a000:290a:147a:2492:4cca)
[06:32:42] *** Joins: yaalon (~yaalon@cpe-70-120-73-36.satx.res.rr.com)
[06:34:36] *** Joins: Lenkov45 (~Lenkov45@45.133.193.10)
[06:34:44] *** Joins: Techcable (~Techcable@168.235.93.147)
[06:34:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[06:35:22] *** Joins: Vonter (~Vonter@user/vonter)
[06:36:24] *** Quits: zamanf (~dev@2a02:587:3240:a000:290a:147a:2492:4cca) (Ping timeout: 250 seconds)
[06:36:35] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 250 seconds)
[06:37:26] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aÐ»Ð»Ð¸Ð»Ñ¹ÑÐ°!)
[06:37:44] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[06:38:20] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[06:38:30] *** Joins: LiftLeft (~LiftLeft@fixed-138-186-31-170.totalplay.net)
[06:41:01] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[06:42:51] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:42:51] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[06:42:51] *** finn_elija is now known as FinnElija
[06:46:38] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[06:46:53] *** Joins: Elodin (~weechat@user/elodin)
[06:47:45] *** Joins: frost (~frost@user/frost)
[06:48:57] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[06:49:24] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[06:49:32] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[06:49:51] *** Joins: marloi (~mark@69-165-156-124.dsl.teksavvy.com)
[06:51:34] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 250 seconds)
[06:52:06] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:f9d2:19cb:6c68:664) (Remote host closed the connection)
[06:52:11] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[06:52:11] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[06:52:11] *** Joins: JordiGH (~jordi@user/jordigh)
[06:52:51] *** Quits: aknot (~aknot@2603:900a:1503:17bb:2319:6b78:8334:d512) (Ping timeout: 250 seconds)
[06:53:17] *** Quits: aknot_ (~aknot@2603:900a:1503:17bb:2319:6b78:8334:d512) (Ping timeout: 250 seconds)
[06:53:38] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[06:54:57] *** Joins: hams (~hams@c-73-255-22-88.hsd1.tx.comcast.net)
[06:54:57] *** Quits: hams (~hams@c-73-255-22-88.hsd1.tx.comcast.net) (Changing host)
[06:54:57] *** Joins: hams (~hams@user/hams)
[06:55:36] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[06:56:00] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[06:58:06] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[06:58:10] *** Joins: d1cor (~diego@179.63.242.120)
[07:00:06] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[07:00:23] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:00:29] *** Joins: gbona (~gbona@95.168.168.180)
[07:03:16] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 250 seconds)
[07:03:48] *** Joins: mar77i (~martti@46-126-48-136.dynamic.hispeed.ch)
[07:04:30] *** Joins: Vonter (~Vonter@user/vonter)
[07:05:00] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[07:05:22] *** Joins: PurpleBooger (~purpleboo@2600:6c5d:4600:1e76:dc4:4974:bf6a:56c)
[07:05:38] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[07:05:38] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[07:05:38] *** Joins: JordiGH (~jordi@user/jordigh)
[07:05:46] *** Joins: Elodin (~weechat@user/elodin)
[07:06:26] *** Joins: adeliktas5 (~adeliktas@i59F527F1.versanet.de)
[07:06:40] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Ping timeout: 256 seconds)
[07:06:58] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[07:07:34] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[07:07:56] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[07:07:57] *** Quits: adeliktas (~adeliktas@i59F4DEFF.versanet.de) (Ping timeout: 240 seconds)
[07:07:57] *** adeliktas5 is now known as adeliktas
[07:08:38] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Client Quit)
[07:08:59] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[07:09:02] *** Joins: PJBoy (~PJBoy@user/pjboy)
[07:12:29] *** Joins: zaquest (~notzaques@5.130.79.72)
[07:15:29] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[07:17:38] *** Parts: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[07:19:52] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[07:21:04] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[07:21:06] *** Joins: wei2912 (~wei2912@138.75.71.147)
[07:21:57] *** Quits: marloi (~mark@69-165-156-124.dsl.teksavvy.com) (Ping timeout: 268 seconds)
[07:22:34] *** Quits: d1cor (~diego@179.63.242.120) (Ping timeout: 268 seconds)
[07:23:00] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[07:23:12] *** Quits: cyphase_eviltwin (~cyphase@user/cyphase) (Ping timeout: 250 seconds)
[07:24:39] *** Joins: Elodin (~weechat@user/elodin)
[07:24:54] *** Quits: jarthur_ (~jarthur@2603-8080-1540-002d-0dc7-4940-686f-5599.res6.spectrum.com) (Ping timeout: 260 seconds)
[07:26:25] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 250 seconds)
[07:26:30] *** Joins: Babar (~Babar@2405:4803:ff4d:98d0:71db:a036:9fd6:14a5)
[07:26:39] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:26:47] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:27:15] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[07:27:44] *** Joins: iXapek (~ff@185.79.102.39)
[07:27:49] *** Quits: fukuda (~fukuda@2804:431:c7f5:a3c3:9fdb:d7d3:c39f:3ce6) (Quit: WeeChat 3.4)
[07:27:53] <iXapek> Hello
[07:28:09] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:28:15] *** Joins: cyphase (~cyphase@user/cyphase)
[07:28:17] *** Joins: portalrat (~portalrat@user/portalrat)
[07:30:01] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:30:11] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:30:12] <matsaman> iXapek: hi
[07:31:36] *** Quits: maryo (~Maryo@user/maryo) (Ping timeout: 256 seconds)
[07:32:29] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[07:35:20] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 250 seconds)
[07:35:22] *** Joins: c4017w__ (~c4017@209.52.68.8)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:30] *** Quits: Lenkov45 (~Lenkov45@45.133.193.10) (Ping timeout: 250 seconds)
[07:37:48] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[07:38:24] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-f868-291a-f5eb-cdc3.res6.spectrum.com)
[07:38:38] *** Quits: JordiGH (~jordi@user/jordigh) (Remote host closed the connection)
[07:38:53] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[07:38:53] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[07:38:53] *** Joins: JordiGH (~jordi@user/jordigh)
[07:38:58] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:38:58] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[07:39:02] *** Joins: jinsun__ (~quassel@user/jinsun)
[07:39:04] *** Joins: fef (~thedawn@user/thedawn)
[07:39:21] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:39:57] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 240 seconds)
[07:43:45] *** Joins: Elodin (~weechat@user/elodin)
[07:45:47] *** Quits: yaalon (~yaalon@cpe-70-120-73-36.satx.res.rr.com) (Remote host closed the connection)
[07:46:16] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[07:46:22] *** Joins: yaalon (~yaalon@2603-8081-7004-2832-4c4d-ff46-972f-97a6.res6.spectrum.com)
[07:46:43] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[07:47:21] *** kurisumakise is now known as kurisu
[07:47:21] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[07:48:15] *** kurisu is now known as kurisumakise
[07:48:20] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 250 seconds)
[07:50:30] *** Quits: yaalon (~yaalon@2603-8081-7004-2832-4c4d-ff46-972f-97a6.res6.spectrum.com) (Ping timeout: 250 seconds)
[07:51:05] *** Joins: yaalon (~yaalon@2603-8081-7004-2832-4c4d-ff46-972f-97a6.res6.spectrum.com)
[07:51:07] *** Quits: yaalon (~yaalon@2603-8081-7004-2832-4c4d-ff46-972f-97a6.res6.spectrum.com) (Read error: Connection reset by peer)
[07:51:42] *** Joins: yaalon (~yaalon@2603-8081-7004-2832-4c4d-ff46-972f-97a6.res6.spectrum.com)
[07:52:40] *** Joins: Guest67 (~Guest67@2600:1700:e620:3eb0:719d:7dc1:ca02:bde)
[07:53:24] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 268 seconds)
[07:56:14] *** Joins: ic3blx_ (~ic3blx___@87.116.166.116)
[07:56:14] *** Quits: ic3blx_ (~ic3blx___@87.116.166.116) (Changing host)
[07:56:14] *** Joins: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740)
[07:56:45] *** Quits: yaalon (~yaalon@2603-8081-7004-2832-4c4d-ff46-972f-97a6.res6.spectrum.com) (Ping timeout: 250 seconds)
[07:56:54] *** Joins: Oddity (~Oddity@user/oddity)
[07:58:10] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[07:58:16] *** Joins: JordiGH (~jordi@user/jordigh)
[07:58:22] *** Quits: JordiGH (~jordi@user/jordigh) (Remote host closed the connection)
[07:58:39] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[07:58:39] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[07:58:39] *** Joins: JordiGH (~jordi@user/jordigh)
[07:59:32] *** Quits: sreve (~quassel@p4ff44dfd.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[07:59:57] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[08:00:06] *** Joins: sreve (~quassel@p4ff44247.dip0.t-ipconnect.de)
[08:00:52] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[08:01:02] *** Joins: berong91 (~noob4ever@75.154.235.153)
[08:01:18] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[08:02:26] *** Joins: Elodin (~weechat@user/elodin)
[08:03:16] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-90c0-942b-858d-62ce.res6.spectrum.com) (Read error: Connection reset by peer)
[08:04:17] *** Quits: esther (~esther@199.10.64.86) (Ping timeout: 240 seconds)
[08:04:37] *** Quits: ali1234 (~al@user/ali1234) (Quit: Leaving.)
[08:05:13] *** Joins: esther (~esther@199.10.64.86)
[08:06:43] *** Quits: Z-cat (~Z-cat@user/z-cat) (Ping timeout: 250 seconds)
[08:07:45] *** Quits: Kraus_ (~quassel@075-141-246-250.res.spectrum.com) (Quit: No Ping reply in 180 seconds.)
[08:08:03] *** Joins: Kraus (~quassel@075-141-246-250.res.spectrum.com)
[08:08:17] *** Quits: iXapek (~ff@185.79.102.39) (Ping timeout: 240 seconds)
[08:08:27] *** Joins: luva8 (~luva@37.120.197.36)
[08:09:14] *** Joins: bytehackr (~Sandipan@43.252.250.126)
[08:10:16] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[08:11:30] *** Joins: yaalon (~yaalon@2603-8081-7004-2832-4c4d-ff46-972f-97a6.res6.spectrum.com)
[08:11:34] *** Quits: luva (~luva@146.70.62.236) (Ping timeout: 260 seconds)
[08:11:34] *** luva8 is now known as luva
[08:14:06] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 256 seconds)
[08:15:42] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[08:16:29] *** Quits: Guest67 (~Guest67@2600:1700:e620:3eb0:719d:7dc1:ca02:bde) (Quit: Client closed)
[08:21:37] *** Joins: Good666 (~Good666@120.229.65.173)
[08:21:58] <Good666> hi
[08:23:10] *** Quits: Good666 (~Good666@120.229.65.173) (Quit: Leaving)
[08:23:55] *** Quits: yaalon (~yaalon@2603-8081-7004-2832-4c4d-ff46-972f-97a6.res6.spectrum.com) ()
[08:24:31] *** Joins: parv (~quass@user/parv)
[08:25:52] *** Joins: zebrag (~chris@user/zebrag)
[08:25:59] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 252 seconds)
[08:27:30] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[08:28:40] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[08:29:51] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[08:30:13] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:32:12] *** BillyZane2 is now known as BillyZane
[08:33:52] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[08:34:06] *** Quits: Electric_Sheep (~esheep_zn@pool-100-19-29-200.phlapa.fios.verizon.net) (Quit: ZNC - http://znc.in)
[08:34:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[08:36:11] *** Joins: c4017w (~c4017@209.52.68.8)
[08:38:00] *** Quits: LiENUS (~quake@108-242-135-2.lightspeed.btrgla.sbcglobal.net) (Quit: ZNC 1.8.2 - https://znc.in)
[08:38:57] *** Joins: LiENUS (~quake@108-242-135-2.lightspeed.btrgla.sbcglobal.net)
[08:39:34] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:39:36] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[08:39:58] *** Quits: LiENUS (~quake@108-242-135-2.lightspeed.btrgla.sbcglobal.net) (Client Quit)
[08:40:55] *** Quits: moog (~moog@107.77.244.129) (Remote host closed the connection)
[08:41:51] *** Quits: Batzy (~quassel@user/batzy) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[08:42:49] *** Joins: LiENUS (~quake@108-242-135-2.lightspeed.btrgla.sbcglobal.net)
[08:42:56] *** Quits: frost (~frost@user/frost) (Ping timeout: 250 seconds)
[08:44:08] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[08:44:14] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:44:28] *** Joins: Batzy (~quassel@user/batzy)
[08:44:52] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[08:46:17] *** Quits: esther (~esther@199.10.64.86) (Ping timeout: 240 seconds)
[08:47:16] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 250 seconds)
[08:47:52] *** Quits: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740) (Quit: Leaving)
[08:48:26] *** Quits: tijuco (~tijuco@user/tijuco) (Ping timeout: 260 seconds)
[08:48:39] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[08:49:38] *** Joins: tijuco (~tijuco@user/tijuco)
[08:49:58] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[08:50:32] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[08:52:37] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[08:54:54] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[08:54:57] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 240 seconds)
[08:56:22] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Ping timeout: 250 seconds)
[08:56:23] *** Joins: AlanMD_ (~AlanMD@5-12-8-203.residential.rdsnet.ro)
[08:56:49] *** Joins: Arw| (~Arwalk@lfbn-dij-1-961-160.w90-125.abo.wanadoo.fr)
[08:57:32] *** Quits: Arw- (~Arwalk@lfbn-dij-1-1310-217.w92-141.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[08:58:23] *** Quits: newpy (~newpy@206.168.231.90) (Quit: Leaving)
[09:00:05] *** Quits: johnkeats7 (~johnkeats@2804:14c:32:a0cc:a91a:3b2a:695b:176) (Ping timeout: 252 seconds)
[09:00:17] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:00:57] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[09:00:59] *** purplex_ is now known as purplex
[09:01:32] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[09:01:52] *** Joins: henbruas (~henbruas@ti0003a400-4203.bb.online.no)
[09:02:12] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[09:04:18] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:04:19] *** Joins: iXapek (~ff@91.193.179.67)
[09:05:06] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 256 seconds)
[09:05:08] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:05:14] *** Joins: widp (~user@124.123.104.175)
[09:05:44] *** Quits: raym (~raym@user/raym) (Quit: kernel update, rebooting...)
[09:05:55] *** Joins: moha (uid506645@id-506645.helmsley.irccloud.com)
[09:05:57] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[09:09:13] *** Joins: Viewday11 (~Viewday@user/viewday)
[09:09:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[09:10:16] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[09:11:42] *** Quits: iXapek (~ff@91.193.179.67) (Quit: Reconnecting)
[09:11:56] *** Joins: iXapek (~ff@91.193.179.67)
[09:12:17] *** Joins: raym (~raym@user/raym)
[09:13:02] *** Joins: rickybob (~rickybob@146.70.38.103)
[09:13:04] *** Joins: rickybob2 (~rickybob@146.70.38.103)
[09:14:44] *** Parts: iXapek (~ff@91.193.179.67) ()
[09:16:40] *** Joins: Guest67 (~Guest67@2600:1700:e620:3eb0:719d:7dc1:ca02:bde)
[09:17:11] <Guest67> I am just learning and am trying to figure out how to take a text list like:
[09:18:36] <Guest67> Membership_NoÂ  Â  Â Date_JoinedÂ  Â  Â  Active
[09:18:37] <Guest67> Â  Â  99150Â  Â  Â  Â  Â  Â  Â  Â  Â  2020-5-15Â  Â  Â  Â  Â  no
[09:18:37] <Guest67> Â  Â  38312Â  Â  Â  Â  Â  Â  Â  Â  Â 2017-6-6Â  Â  Â  Â  Â  Â  Â yes
[09:18:38] <Guest67> Â  Â  13490Â  Â  Â  Â  Â  Â  Â  Â  Â 2015-3-14Â  Â  Â  Â  Â  Â  no
[09:18:38] <Guest67> Â  Â  18456Â  Â  Â  Â  Â  Â  Â  Â  2018-9-18Â  Â  Â  Â  Â  Â  Â no
[09:18:39] <Guest67> Â  Â  23979Â  Â  Â  Â  Â  Â  Â 2016-9-17Â  Â  Â  Â  Â  Â  Â  Â  yes
[09:18:39] *** litharge sets mode: +q *!*@2600:1700:e620:3eb0:719d:7dc1:ca02:bde
[09:19:10] *** litharge sets mode: -q *!*@2600:1700:e620:3eb0:719d:7dc1:ca02:bde
[09:19:18] <energizer> Guest67: please use https://bpa.st
[09:19:43] <Guest67> do I cut and past from there?
[09:19:57] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Quit: WeeChat 3.4)
[09:20:08] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[09:20:16] <energizer> paste your text into that site, submit it and then copy the url into here
[09:20:43] <Guest67> thank you will do
[09:21:37] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[09:21:58] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:23:02] <Guest67> https://bpa.st/UTHA
[09:24:36] <Guest67> have thought of spliting or indexing, need to return whole lines
[09:24:58] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Ping timeout: 250 seconds)
[09:25:20] <energizer> can you do it again, include the data file or a section of it in the paste so i can see
[09:27:56] *** Parts: t4nk_freenode (~Go@user/t4nk) (Leaving)
[09:28:02] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[09:29:47] *** Quits: tijuco (~tijuco@user/tijuco) (Quit: Leaving)
[09:30:02] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[09:30:02] *** Quits: analoq_ (~yashi@user/dies) (Ping timeout: 256 seconds)
[09:30:30] <Guest67> https://bpa.st/7AMA
[09:30:48] <Guest67> I didn't run it as python code this time
[09:31:11] *** Quits: Reign (~Username@ip98-161-226-10.ph.ph.cox.net) (Quit: Going offline, see ya! (www.adiirc.com))
[09:31:22] *** Joins: analoq (~yashi@user/dies)
[09:31:54] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[09:32:21] <energizer> ok what are you trying to do with this Active yes/no code?
[09:32:43] <Guest67> energizer are you able to see it?
[09:32:46] <energizer> yes
[09:33:08] <Guest67> I am trying to return only the lines with no
[09:33:16] <energizer> ok
[09:33:58] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:4f96:fe34:d5dc:f0a6)
[09:34:03] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[09:35:11] <energizer> the python style would be to write a for-loop
[09:35:12] *** Quits: d00gy (~tonberry@user/d00gy) (Quit: WeeChat 3.4)
[09:35:48] *** Quits: rickybob2 (~rickybob@146.70.38.103) (Ping timeout: 250 seconds)
[09:35:48] *** Quits: rickybob (~rickybob@146.70.38.103) (Ping timeout: 250 seconds)
[09:36:20] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:36:27] <energizer> with open(path) as f: for line in f: mno, date, isactive = line.split(); if not isactive: print(line)
[09:36:50] *** Joins: c4017w_ (~c4017@209.52.68.8)
[09:36:55] <energizer> (if that's too hard to read i can format it for ya)
[09:37:49] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[09:37:58] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[09:38:00] <energizer> er i forgot the yes/no bit, but that's the basic outlien
[09:38:03] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[09:38:04] <energizer> outline*
[09:38:04] <Guest67> can i still use the
[09:38:10] *** Joins: frost (~frost@user/frost)
[09:38:15] <Guest67> open the way I have it?
[09:38:57] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[09:38:59] <Guest67> firstfile = open(path, "r") as f:
[09:39:22] *** Joins: Vonter (~Vonter@user/vonter)
[09:39:30] <Guest67> end goal is to have this eventually append to another file, however doing it in steps.
[09:40:17] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[09:40:48] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[09:42:43] <energizer> Guest67: https://bpa.st/6RIQ
[09:43:07] <energizer> i didn't try it but it's something like that
[09:43:39] <Guest67> will try and see what happens.
[09:43:46] *** Joins: ben_ (~ben@host-204-118-069-229.dhcp.fewpb.net)
[09:43:46] *** Joins: madprops (hj8oijo@user/madprops)
[09:43:47] <madprops> "Mutagen has full Unicode support for all formats. When you assign text strings, we strongly recommend using Python unicode objects rather than str objects."
[09:44:02] <madprops> not sure if I should use .encode('utf-8') on strings with python3 here
[09:44:07] *** Joins: gbona_ (~gbona@180.251.177.103)
[09:44:25] <madprops> in the examples they use u"something" but how do I apply that to variables?
[09:44:46] <energizer> madprops: that sentence you quoted only makes sense for python 2
[09:44:55] <parv> energizer++
[09:45:02] <madprops> ok
[09:45:19] <parv> ... too fast for me
[09:45:43] <SnoopJ> madprops, https://nedbatchelder.com/text/unipain.html might shed some additional light on what's going on there, but as energizer says, the distinction between the two isn't present in 3.x
[09:46:42] <energizer> parv: it's on my brain atm, i spent yesterday thinking about unicode
[09:47:36] *** Quits: gbona (~gbona@95.168.168.180) (Ping timeout: 256 seconds)
[09:47:48] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[09:47:55] <energizer> now i can tell you there's a character called "presentation form for vertical right white lenticular brakcet"
[09:47:56] <parv> energizer, Had you happened to compare the state (of Unicode) with other languages, namely Perl?
[09:48:05] *** Quits: txtsd (~txtsd@user/txtsd) (Quit: WeeChat 3.4)
[09:48:10] *** Joins: mickey8 (~user@user/mickey)
[09:48:12] <energizer> [yes, brakcet]
[09:48:15] <SnoopJ> energizer, I just replaced my favorite trivia about Python and Unicode tonight: https://bugs.python.org/issue46555
[09:48:35] <energizer> parv: i dont know any perl sorry
[09:49:00] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:49:03] <parv> energizer, Ok. Any other languages?
[09:49:17] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:e880:89ff:3e74:550f) (Ping timeout: 240 seconds)
[09:50:15] <energizer> parv: i can say a little, what do you want to know?
[09:51:03] <energizer> SnoopJ: haha wat
[09:51:40] <parv> energizer, How wide & deep is Unicode support in Python? What is missing? Unicode-ness travelling with data in, out of a file or database.
[09:52:01] *** Quits: emerent (~quassel@p200300cd57044332ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[09:52:25] *** Joins: emerent (~quassel@p200300cd5704439cba27ebfffed28a59.dip0.t-ipconnect.de)
[09:53:13] <energizer> parv: first of all, there is a lot of confusion about it, so don't believe everything you hear
[09:53:25] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[09:54:38] <BrenBarn> SnoopJ: wow that is weird
[09:54:39] <energizer> for example, on unix os.listdir(".") returns a kinda superset of unicode
[09:55:01] <energizer> it can return invalid code points, because unicode paths are arbitrary bytes, not unicode
[09:55:08] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[09:55:44] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:55:51] <energizer> if you want to just stick to bytes, you can actually do that: just use os.listdir(b".")
[09:56:02] <energizer> passing bytes to the os functions will return bytes
[09:56:47] <parv> My reference, though focused on Perl, is https://stackoverflow.com/questions/6162484/why-does-modern-perl-avoid-utf-8-by-default/6163129#6163129 by Tom C remains in my mind when doing anything besides printing out emojis.
[09:57:37] *** Joins: luva6 (~luva@45.141.152.45)
[09:58:22] *** Joins: duds-_ (~duds-@gateway/tor-sasl/duds)
[09:58:27] <energizer> that's an impressive-looking post, bookmarking
[09:58:46] *** Quits: luva (~luva@37.120.197.36) (Ping timeout: 250 seconds)
[09:58:46] *** luva6 is now known as luva
[09:59:13] <energizer> lemme see if i can pull together some links for you
[09:59:32] *** Quits: duds- (~duds-@gateway/tor-sasl/duds) (Remote host closed the connection)
[09:59:58] *** Joins: han-solo (~han-solo@user/han-solo)
[10:00:30] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[10:01:44] *** duds-_ is now known as duds-
[10:01:50] <energizer> old angry post, not sure how up to date it is https://lucumr.pocoo.org/2013/7/2/the-updated-guide-to-unicode/ more recent status report http://python-notes.curiousefficiency.org/en/latest/python3/text_file_processing.html
[10:02:26] <energizer> and https://lucumr.pocoo.org/2014/5/12/everything-about-unicode/
[10:03:37] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[10:04:03] <parv> energizer, Thanks.
[10:04:42] <SnoopJ> energizer, BrenBarn I believe what's happening there is that it's being tokenized to NAME as "ðð£ð¦ð", and then the grammar rule that issues the expected SyntaxError will fire, and *then* you'll pass through NFKC on your way to a Name node in the resulting AST, and from there you're on easy street: you get exactly what you'd expect from the UAX #31 support, vars() contains "True" and not
[10:04:44] <SnoopJ> "ðð£ð¦ð", but the latter normalizes to the former when you go looking for a name *at runtime.*
[10:05:17] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:05:21] *** Quits: nunggu (~q@user/nunggu) (Ping timeout: 276 seconds)
[10:05:24] <SnoopJ> but I haven't given that hypothesis a proper run through the source, just a peek at the production that issues the SyntaxError and a little experimentation with tokenize/ast
[10:05:36] <energizer> sounds reasonable to me
[10:06:17] <parv> Somewhat related on topic of string|byte: https://twitter.com/encthenet/status/1485071391128915970
[10:07:22] <SnoopJ> energizer, it's kind of this like perfect car crash of systems that are all great ideas coming to an edge to give really surprising behavior
[10:08:19] <parv> SnoopJ, That double-lined True reminds me of middle/high school days when I used to draw freehand words, phrases
[10:09:42] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[10:09:58] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[10:10:08] *** Quits: koo5_ (~quassel@51.140.155.227) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[10:11:05] *** Joins: koo5_ (~quassel@51.140.155.227)
[10:11:39] *** Quits: mcglk (~mcglk@131.191.49.120) (Read error: Connection reset by peer)
[10:13:30] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 250 seconds)
[10:14:18] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Ping timeout: 260 seconds)
[10:14:26] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[10:14:41] *** Quits: ben_ (~ben@host-204-118-069-229.dhcp.fewpb.net) (Quit: ben_)
[10:14:53] *** Joins: mcglk (~mcglk@131.191.49.120)
[10:15:13] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[10:15:57] <SnoopJ> It's an orthography with a long history :)
[10:16:23] *** Joins: chowmeined (~chowmeine@user/chowmeined)
[10:16:42] <Guest67> https://bpa.st/HYTA
[10:17:06] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:17:36] <Guest67> line 101, ran the code it worked, the output was correct, however it said there was an error?
[10:17:46] <energizer> parv: that says messages have to be parsed "in an encoding that is a superset of US-ASCII". UTF-8 is one of those, so it's probably not much of a vulnerability
[10:17:49] *** Joins: thevishy (~Nishant@2405:201:f005:c007:60d1:4243:e46a:fb96)
[10:18:16] <Guest67> <_io.TextIOWrapper name='path.txt' mode='r' encoding='UTF-8'>
[10:18:30] <Guest67> what is this? what causes it to occur?
[10:18:33] <energizer> that's not an error
[10:19:03] *** Joins: pro_z (~pro_z@37.214.69.237)
[10:19:17] <energizer> there's a concept of a "file object", which is python's way of referencing a particular file
[10:19:40] <energizer> that's what that is. you just printed out the file object and it's like "yeah that's it"
[10:19:54] <energizer> "i have a reference to this file, see"
[10:19:54] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Ping timeout: 256 seconds)
[10:20:12] <SnoopJ> Guest67, that is the representation of the kind of object energizer just described. Your program is printing `firstfile` and print() calls repr() for you.
[10:20:35] <energizer> Guest67: btw the point of `with` is so you don't have to call `close` at the end, so get rid of the `close`s
[10:20:38] *** Joins: Nutte35 (~Nutte@202.153.81.202)
[10:21:36] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[10:21:56] <energizer> "when can i delete this reference/close this file/release this memory" is a big topic in computer science so there's convenience tools like `with` to help with it
[10:22:43] <energizer> that make sure the file gets closed even if there's an error or whatever
[10:23:25] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[10:23:28] *** Quits: luva (~luva@45.141.152.45) (Ping timeout: 250 seconds)
[10:24:30] <Guest67> got that.
[10:24:37] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[10:25:24] *** Joins: NeoCore (~neocore@160.238.38.104)
[10:25:40] *** Joins: ano (~ano@user/ano)
[10:25:51] *** Joins: JuanMiguel (~juanmi@72.red-79-158-14.dynamicip.rima-tde.net)
[10:26:13] *** Quits: JuanMiguel (~juanmi@72.red-79-158-14.dynamicip.rima-tde.net) (Client Quit)
[10:26:29] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:27:32] <parv> energizer, OK, re HTTP over UDP message parsing
[10:29:04] *** Quits: ano (~ano@user/ano) (Client Quit)
[10:30:04] *** Joins: bluedust (~bluedust@103.161.144.140)
[10:30:50] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[10:31:16] <energizer> parv: if you're looking for other implementations of http stuff i'd look in the ecosystem surrounding https://github.com/python-hyper/h11 those people are good
[10:31:17] *** Joins: ano (~ano@user/ano)
[10:31:33] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[10:31:44] *** Joins: nunggu (~q@user/nunggu)
[10:31:45] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:ac45:95f6:5fe8:7ece) (Read error: Connection reset by peer)
[10:32:14] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:32:21] *** Quits: ano (~ano@user/ano) (Client Quit)
[10:32:30] <energizer> parv: (but i'm not a web person so dont take my word as gospel on http parsing...)
[10:35:20] <parv> energizer, I was just looking if anyone else had any comments to John-Mark's statements. I am not a direct user of raw HTTP data
[10:36:41] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:37:15] *** Quits: fxhp (~fxhp@d-206-53-88-50.ct.cpe.atlanticbb.net) (Ping timeout: 256 seconds)
[10:37:22] *** Joins: c4017w__ (~c4017@209.52.68.8)
[10:38:26] *** Joins: the_lanetly_052 (~the_lanet@185.30.90.202)
[10:38:42] *** Quits: the_lanetly_052 (~the_lanet@185.30.90.202) (Max SendQ exceeded)
[10:38:49] *** Quits: onichomp (~onichomp@2806:264:4408:86:f5c6:8c2a:5cff:c011) (Read error: Connection reset by peer)
[10:39:10] <energizer> parv: i think in an environment with asian-language encoding as locale.getpreferredencoding() it would be a problem
[10:39:10] *** Joins: the_lanetly_052 (~the_lanet@185.30.90.202)
[10:39:26] <energizer> i'm not sure what the security implications are
[10:39:27] *** Joins: onichomp (~onichomp@2806:264:4408:86:f5c6:8c2a:5cff:c011)
[10:39:43] *** Quits: the_lanetly_052 (~the_lanet@185.30.90.202) (Max SendQ exceeded)
[10:39:57] *** Quits: onichomp (~onichomp@2806:264:4408:86:f5c6:8c2a:5cff:c011) (Read error: Connection reset by peer)
[10:40:11] *** Joins: the_lanetly_052 (~the_lanet@185.30.90.202)
[10:40:52] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[10:41:01] <energizer> cuz those aren't necessarily ascii supersets
[10:41:26] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[10:42:26] <parv> As a regular user of request, a worm has invaded my brain that it does not compare the content-length value against the length of the data received : https://blog.petrzemek.net/2018/04/22/on-incomplete-http-reads-and-the-requests-library-in-python/
[10:42:53] <energizer> "The requests library is arguably the mostly widely used HTTP library for Python"
[10:43:10] <parv> -- adding the code provided there locally is next thing on my TODO list
[10:44:48] *** Joins: Vonter (~Vonter@user/vonter)
[10:46:10] <parv> Someone here had mentioned the lack of above check & the article
[10:46:18] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:47:06] <SnoopJ> parv, John-Mark's point is a good one: the RFC on HTTP says very clearly that you MUST parse as bytes, so anyone who claims to have implemented an HTTP client/server that is not doing this has not implemented the specification described in the RFC.
[10:47:46] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[10:48:00] <energizer> parv: https://github.com/urllib3/urllib3/pull/2514
[10:48:22] *** Joins: kilitary (~kilitary@188.242.187.4)
[10:48:36] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Ping timeout: 250 seconds)
[10:49:53] <SnoopJ> (the word MUST has a very unambiguous meaning in IETF documents: https://datatracker.ietf.org/doc/html/rfc2119#section-1, in case that wasn't clearly what I meant)
[10:50:14] *** Joins: fef (~thedawn@user/thedawn)
[10:50:19] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[10:50:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[10:50:46] <energizer> i think those commas don't belong there
[10:51:00] <energizer> they are inconsistent with the previous sentence
[10:51:20] <parv> energizer, Ah, a ray of sunshine. I had only seen the discouraging discussion that check would go in requests 3 by way of urllib3 but work there had halted. So thanks for the link
[10:51:26] <energizer> there's no usch thing as parsing octets "in an encoding" unless they're encoded code points
[10:51:44] <Guest67> https://bpa.st/KZSQ
[10:51:56] <Guest67> it wors, except not appending to the second file
[10:51:57] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[10:52:03] <Guest67> *works
[10:52:08] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[10:53:17] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 240 seconds)
[10:53:20] <energizer> so another way of reading it is "MUST be parsed as code points in an encoding that's a superset of ASCII"
[10:53:46] <SnoopJ> energizer, what else would one be decoding if not encoded text
[10:53:57] <SnoopJ> in the context of HTTP parsing, I mean
[10:54:06] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[10:54:07] <energizer> exactly, that's why the commas don't belong
[10:54:13] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[10:54:48] *** Joins: frost (~frost@user/frost)
[10:55:31] <energizer> Guest67: i think you mean "a" instead of "w+"
[10:55:37] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[10:55:46] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[10:56:15] <energizer> (why do we use these mode symbols instead of a readable api)
[10:56:31] *** Joins: tWqaq (~tWqaq@240e:389:5d1c:ff00:f780:76fa:9fee:7f85)
[10:56:50] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 250 seconds)
[10:57:14] <SnoopJ> energizer, I don't disagree with the wording in the RFC, 0-255 vs Unicode is a much smaller attack surface in the most literal terms: fewer valid messages fit in the same number of bytes
[10:57:16] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[10:57:35] <jinsun__> inspired by C probably
[10:57:57] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[10:58:10] <SnoopJ> I would guess it's Unix's fault which is close enough to the same thing
[10:58:11] <parv> What initially, when I started with Python, got me was that to open a file in read & write mode, mode code was not "rw" -- would have been too obvious.
[10:58:20] <energizer> they come from `fopen`
[11:00:05] <energizer> parv: anyway i was definitely wrong in my first response
[11:00:15] *** Parts: Thete (~thete@user/thete) (Quit)
[11:00:34] <energizer> depending on the execution environment that can be dangerous
[11:00:52] <jinsun__> Guest67: at line 70 you want to write to secondfile I assume, not just print?
[11:00:56] *** Joins: fxhp (~fxhp@d-206-53-88-50.ct.cpe.atlanticbb.net)
[11:01:38] <energizer> oh good jinsun__'s on it, i need a break from IO
[11:02:02] <Guest67> energizer wouldn't w+ overwrite the original file?
[11:02:22] <Guest67> energizer am wanting to append to the pre-eisting lines
[11:02:26] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[11:03:00] <energizer> Guest67: i would just create another file C and write the contents of A and B into it
[11:03:25] <Guest67> File was already created
[11:03:31] <Guest67> that is the inactiveupdated
[11:03:44] <Guest67> there is an active, inactive, and then updated on both
[11:04:05] * energizer hands baton to next answerer
[11:04:34] <Guest67> so a D as well, the ask was to copy inactive, use that to append all inactive members from active(members)
[11:04:38] *** Quits: hams (~hams@user/hams) (Ping timeout: 250 seconds)
[11:04:48] *** Joins: maryo (~Maryo@user/maryo)
[11:05:16] <Guest67> jinsun if I write to second file will that append?
[11:05:37] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[11:05:52] <jinsun__> you've opened it in 'a+' mode, so it should
[11:05:52] <parv> energizer, Take care
[11:06:04] <Guest67> jinsun__ and not overwrite?
[11:06:06] <energizer> Guest67: btw make sure you have a backup of these files if you might be overwriting them by accident :)
[11:06:29] *** Joins: jay-m126 (~jay-m@154.72.167.198)
[11:06:33] *** Joins: jay-m126_ (~jay-m@154.72.167.198)
[11:06:34] *** Joins: jay-m1261 (~jay-m@154.72.167.198)
[11:07:43] <Guest67> energizer thank you!!! good practice, for this one not too worried about that, the originals were randomly generated and its an exerecise, more focused on getting the coding right
[11:08:12] *** Quits: zumba_addict24 (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Client closed)
[11:09:14] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-f868-291a-f5eb-cdc3.res6.spectrum.com) (Quit: jarthur)
[11:09:22] <jinsun__> Guest67: yes a is append, you can still overwrite if you seek here and there, but you are not doing that
[11:09:25] <SnoopJ> hooray for data that can be safely thrown away
[11:10:11] *** Quits: thevishy (~Nishant@2405:201:f005:c007:60d1:4243:e46a:fb96) (Quit: Leaving)
[11:11:04] *** Quits: Nutte35 (~Nutte@202.153.81.202) (Remote host closed the connection)
[11:11:24] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:11:47] <energizer> SnoopJ: i don't think the issue is just attack surface. parsing tools like pcre can produce UB if they're expecting a certain encoding and you give them a different one. that might be what the rfc had in mind
[11:12:43] *** Joins: ravan (~ravan@user/ravan)
[11:12:44] *** Joins: palasso (~palasso@user/palasso)
[11:13:08] <SnoopJ> energizer, suffice to say the people who wrote the standard had very good reasons for saying "parse octets" and if you ignore that, godspeed with whatever thing you wrote which is by definition not the spec
[11:14:32] <SnoopJ> It probably helped internet standardization a lot that people had been through so. much. encoding pain. before the web started getting set down
[11:14:44] <energizer> SnoopJ: i think i am parsing that sentence differently
[11:15:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[11:15:59] <energizer> you: (in an encoding (sequence of (octets))); me: (sequence of (in an encoding (octets)))
[11:16:03] <SnoopJ> energizer, hmm, I think I see what you're saying.
[11:17:27] <energizer> so in my reading the emphasis is on the point that they must be in an ascii superset
[11:17:35] <SnoopJ> "To take an HTTP message from bytes to string, you MUST choose an encoding compatible with ASCII"
[11:17:50] <energizer> yeah
[11:18:14] <SnoopJ> I think I agree with you now that I correctly understand which commas this is about :)
[11:18:39] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[11:18:42] <energizer> and if you leave that to python's unicode, it will use locale.getpreferredencoding(), which means the ops person now needs to have read the spec
[11:19:06] <energizer> so the library should not do that
[11:20:19] * SnoopJ nods
[11:21:35] <SnoopJ> The library has not necessarily implemented HTTP because the locale cannot be guaranteed to be consistent with the spec
[11:22:02] <SnoopJ> but (unfortunately!) the unreliable behavior will genreally be correct...except when it isn't and then it might be really pernicious
[11:24:00] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[11:24:24] <energizer> in fact even UTF-16 isn't an ascii superset
[11:24:39] <energizer> so like, windows
[11:25:35] *** Joins: manti7 (~manti7@176.10.104.94)
[11:25:55] <Guest67> jinsun__ what should line 70 look like to accomplish this?
[11:26:25] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:27:43] <Guest67> jinsun__Â  ran a few different possibilities, such as secondfile.write_text(), secondfile.write(firstfile.read(line + "\n")), ext, and then took out line 73
[11:27:49] <Guest67> no dice
[11:28:24] <Guest67> also tried a simple write(line)
[11:28:57] <jinsun__> Guest67: secondfile.write(line), and you can do both print and .write there if you want
[11:30:16] <jinsun__> if that doesn't work you might want to start over with your question, I might have missed something
[11:30:27] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[11:30:47] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:30:52] *** Joins: fef (~thedawn@user/thedawn)
[11:30:56] <Guest67> jinsun__ tried that, worked, but did not out put anything and when the code was run to check if the file updated, it didn't
[11:31:04] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[11:31:07] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[11:31:11] <Guest67> jinsun__ the ask is:
[11:31:15] *** Joins: Sargento (uid523534@wikipedia/Sargento-de-Hierro)
[11:31:52] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[11:32:08] <Guest67> jinsun__ take the active = no from the first file only and append it the second file without overwriting the first file
[11:32:15] *** Joins: grooverman (~grooverma@177.102.119.200)
[11:32:38] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[11:32:49] <Guest67> jinsun__ the code I have now will pull all the Active = no from the first file, however it is not appending to the second file
[11:34:48] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:35:10] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[11:35:16] *** Quits: grooverman_ (~grooverma@177.102.119.200) (Ping timeout: 256 seconds)
[11:35:49] <jinsun__> Guest67: okay sounds like what I understood already, I notice you didn't close the secondfile before opening it again to check the contents, that will cause problems, so close it (or just use context managers there like the rest of the code does)
[11:36:43] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[11:37:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[11:38:08] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[11:38:09] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[11:38:47] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[11:39:18] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[11:39:28] *** Joins: Wulf (~Wulf@user/wulf)
[11:39:36] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[11:41:30] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[11:41:31] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[11:42:30] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[11:42:46] *** Joins: pvergain1 (~Thunderbi@2a01:e0a:223:690:4f96:fe34:d5dc:f0a6)
[11:42:50] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:4f96:fe34:d5dc:f0a6) (Read error: Connection reset by peer)
[11:42:50] *** pvergain1 is now known as pvergain
[11:44:19] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[11:45:34] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:45:40] *** Joins: Vonter (~Vonter@user/vonter)
[11:45:41] *** Quits: kilitary (~kilitary@188.242.187.4) (Read error: Connection reset by peer)
[11:45:53] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:e880:89ff:3e74:550f)
[11:45:59] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[11:46:06] *** Joins: Gurkenglas (~Gurkengla@dslb-090-186-104-244.090.186.pools.vodafone-ip.de)
[11:46:25] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[11:46:36] *** Quits: Tat (~Tat@137-025-218-069.res.spectrum.com) (Ping timeout: 256 seconds)
[11:48:46] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[11:49:09] *** Quits: nomic (~nomic@2a00:23c7:ec90:a501:fd84:e20e:591b:a89) (Quit: Leaving)
[11:49:14] <Guest67> energizer, jinsun__ thank you both. that worked.
[11:49:30] <energizer> Guest67: you're welcome
[11:49:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[11:49:41] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[11:50:11] <han-solo> if possible use some distinct delimiter, so you can use `csv` ':)
[11:51:33] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[11:52:45] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[11:52:49] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[11:52:50] *** Quits: jay-m1261 (~jay-m@154.72.167.198) (Ping timeout: 256 seconds)
[11:52:50] *** Quits: jay-m126_ (~jay-m@154.72.167.198) (Ping timeout: 256 seconds)
[11:52:50] *** Quits: jay-m126 (~jay-m@154.72.167.198) (Ping timeout: 256 seconds)
[11:53:37] *** kurisumakise is now known as kurisu
[11:54:31] *** Joins: jay-m126 (~jay-m@154.72.167.138)
[11:54:34] *** Joins: jay-m126_ (~jay-m@154.72.167.138)
[11:55:00] *** Joins: ano (~ano@user/ano)
[11:55:01] *** Quits: libussa (~libussa@libussa.net) (Read error: Connection reset by peer)
[11:55:50] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:56:07] *** Joins: dreamon (~dreamon@ppp-88-217-91-105.dynamic.mnet-online.de)
[11:56:29] *** kurisu is now known as kurisumakise
[11:56:56] *** Joins: libussa (~libussa@static.121.202.201.138.clients.your-server.de)
[11:57:22] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[11:57:32] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Remote host closed the connection)
[11:57:39] *** Joins: tobybl (~tobybl@248.64.200.146.dyn.plus.net)
[11:57:44] *** Joins: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:b1e2:fc8a:5526:e47b)
[11:58:24] *** Quits: jay-m126_ (~jay-m@154.72.167.138) (Read error: Connection reset by peer)
[11:58:25] *** Quits: jay-m126 (~jay-m@154.72.167.138) (Read error: Connection reset by peer)
[11:59:29] *** kurisumakise is now known as kurisu
[11:59:33] *** Joins: jay-m126 (~jay-m@154.72.150.188)
[11:59:46] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[12:00:36] <Guest67> han-solo in the future yes, taking a class as an introduction and the class went over something as individual units, but not combination, so thinking in steps, it is even requiring code not introduced. It ungraded so can't much complain, truly am grateful this room exist though
[12:00:39] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[12:00:46] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[12:01:10] *** Guest67 is now known as KK82
[12:01:50] *** Joins: upsala (~zcb@185.213.155.232)
[12:01:59] <KK82> night all
[12:02:13] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:02:21] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[12:02:29] *** kurisu is now known as kurisumakise
[12:02:30] *** Joins: ano (~ano@user/ano)
[12:02:37] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[12:02:47] *** Joins: jay-m126_ (~jay-m@154.72.150.188)
[12:02:56] *** Joins: jay-m1261 (~jay-m@154.72.150.188)
[12:03:09] *** Quits: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:b1e2:fc8a:5526:e47b) (Ping timeout: 268 seconds)
[12:03:23] *** Quits: KK82 (~Guest67@2600:1700:e620:3eb0:719d:7dc1:ca02:bde) (Quit: KK82)
[12:03:34] *** Joins: kilitary (~kilitary@188.242.187.4)
[12:05:23] *** Quits: kilitary (~kilitary@188.242.187.4) (Remote host closed the connection)
[12:05:29] *** kurisumakise is now known as kurisu
[12:06:36] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[12:08:29] *** kurisu is now known as kurisumakise
[12:08:39] *** Joins: bluedust_ (~bluedust@185.248.85.32)
[12:09:05] *** Joins: Vonter (~Vonter@user/vonter)
[12:10:05] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Quit: ThePhilgrim)
[12:11:29] *** kurisumakise is now known as kurisu
[12:12:06] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 276 seconds)
[12:12:17] *** Quits: bluedust (~bluedust@103.161.144.140) (Ping timeout: 240 seconds)
[12:12:33] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[12:14:00] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[12:14:44] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[12:15:29] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[12:16:05] *** Joins: LimeOn (~user@user/limeon)
[12:16:34] *** kurisu is now known as kurisumakise
[12:16:37] *** kurisumakise is now known as kurisu
[12:16:38] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[12:17:20] *** kurisu is now known as kurisumakise
[12:18:34] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[12:18:39] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:18:48] <gitesh> "Given an integer x, return true if x is palindrome integer."
[12:18:55] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[12:18:57] <gitesh> I have to solve this I have difficulties
[12:19:12] <gitesh> i know int % 10 gives last digit
[12:19:21] <gitesh> i know nothing else
[12:19:48] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Client Quit)
[12:20:20] *** kurisumakise is now known as kurisu
[12:20:22] <The-Compiler> I don't know how you'd to this the "mathematical" way, but if you can just convert it to a string, it'll be easier
[12:21:02] <han-solo> 123 -> 321
[12:21:16] <han-solo> seems to be a usual coding question in some sites
[12:21:56] *** Joins: rsx (~dummy@ppp-188-174-158-205.dynamic.mnet-online.de)
[12:22:36] <gitesh> The-Compiler: i did using string but they told to not do that way
[12:22:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[12:23:20] *** kurisu is now known as kurisumakise
[12:23:47] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:24:21] <Repiphany> You can use divmod to get both the last digit and the result of dividing by 10, e.g. divmod(123, 10)  -> (12, 3)
[12:24:40] <The-Compiler> gitesh: well, then I suppose you will need to figure out how to get the lowest and highest digits using modulo, and compare those - or figure out how to reverse the number using modulo and then compare that to the original
[12:24:48] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[12:24:59] <Repiphany> So just repeated divmod to get all of the digits in a list or whatever
[12:26:20] *** kurisumakise is now known as kurisu
[12:26:26] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[12:28:17] *** Quits: davor (~davor@user/davor) (Ping timeout: 240 seconds)
[12:28:18] <The-Compiler> which is probably worse than str() in various ways
[12:28:56] *** Joins: davor (~davor@user/davor)
[12:29:04] <The-Compiler> and chances are that's a too easy solution and gitesh will hear once again that's not what they wanted or whatever
[12:29:20] *** kurisu is now known as kurisumakise
[12:29:20] <The-Compiler> gitesh: I'd recommend asking whoever gave you this, what kind of solution they would like to see
[12:29:40] <Repiphany> It sounds like a leetcode problem so str probably works anyway
[12:30:55] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[12:32:20] *** kurisumakise is now known as kurisu
[12:32:31] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[12:33:00] <Wulf> gitesh: you could turn 12345 into l = [1,2,3,4,5] and then keep comparing+removing l[0] and l[-1]
[12:33:38] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[12:33:59] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[12:34:37] *** Quits: jay-m1261 (~jay-m@154.72.150.188) (Ping timeout: 240 seconds)
[12:34:42] *** Quits: megaTherion (~therion@unix.io) (Read error: Connection reset by peer)
[12:34:46] *** Quits: jay-m126_ (~jay-m@154.72.150.188) (Ping timeout: 256 seconds)
[12:34:46] *** Quits: jay-m126 (~jay-m@154.72.150.188) (Ping timeout: 256 seconds)
[12:34:53] *** Joins: bad_blue_bull (~user@178.70.156.192)
[12:34:54] <bad_blue_bull> hi
[12:35:20] *** kurisu is now known as kurisumakise
[12:35:29] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[12:35:58] <jinsun__> using list makes it as easy as using str, they probably want some C/C++/Java translated to python like this one https://www.geeksforgeeks.org/check-if-a-number-is-palindrome/
[12:36:13] *** Quits: sreve (~quassel@p4ff44247.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[12:36:21] <interestingname[> <gitesh> ""Given an integer x, return true..." <- from your name, I'm guessing they want a for loop where you do something like this: https://termbin.com/rycp
[12:36:51] <kurisumakise> Trying to create a shared library with cffi, upon loading that library, I get this unholy mess https://pastebin.com/eT7nk3aZ Any ideas?
[12:36:55] <The-Compiler> that's why I would first ask them what they want, since they clearly aren't interested in a simple pythonic solution Â¯\_(ã)_/Â¯
[12:37:13] <han-solo> "from your name"... seems odd
[12:37:17] <interestingname[> this is classic indian school stuff lol
[12:37:47] <interestingname[> using a for loop to find palindromes
[12:38:04] <interestingname[> and his nick is a fairly common Indian first name
[12:38:12] <han-solo> i see
[12:38:20] *** kurisumakise is now known as kurisu
[12:38:22] *** Joins: c4017w__ (~c4017@209.52.68.8)
[12:38:57] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[12:39:18] <Wulf> interestingname[: that makes more sense. But please:  while num:
[12:39:57] <interestingname[> yeah I was thinking in cpp
[12:40:27] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[12:40:28] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[12:40:28] <parv> kurisu, My guess would be that cffi (support) was compiled with some Unicode option missing
[12:40:33] <interestingname[> and having it as `while ( num != 0)` just makes it clearer to me
[12:41:20] *** kurisu is now known as kurisumakise
[12:42:08] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[12:42:26] <bad_blue_bull> https://termbin.com/5riv what's wr0ng?
[12:42:47] <bad_blue_bull> I get OSError: reached a 90 second timeout without success
[12:42:51] <bad_blue_bull> what the Hell?
[12:43:00] *** Quits: widp (~user@124.123.104.175) (Ping timeout: 250 seconds)
[12:43:20] <bad_blue_bull> tor browzer is working with these bridges
[12:43:26] <Wulf> bad_blue_bull: why is everything a string?
[12:44:20] *** kurisumakise is now known as kurisu
[12:44:33] <bad_blue_bull> everything what? port numbers? it's ok
[12:44:43] <bad_blue_bull> it was working, I can't make it use bridges
[12:44:50] *** Joins: jmd (~user@de.cellform.com)
[12:45:18] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[12:45:32] <madprops> anybody uses mutagen here?
[12:45:34] <bad_blue_bull> options are supposed to be strings else TypeError: 'int' object is not iterable
[12:45:40] <madprops> wondering how to handle wav files with EasyID3
[12:46:32] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[12:46:43] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[12:46:51] <Wulf> bad_blue_bull: sorry to hear that. Integers should be integers and bools should be bools.
[12:47:06] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[12:47:08] <bad_blue_bull> these are sortof command line options
[12:47:20] *** kurisu is now known as kurisumakise
[12:47:56] <Wulf> bad_blue_bull: about your actual problem: There's no way anyone could help you with the little info you gave.
[12:48:10] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[12:48:20] <bad_blue_bull> can't you test it if you have stem?  import stem and import stem.process
[12:48:57] <Wulf> I would be amazed if there was such a package on my system.
[12:49:51] *** Joins: kosh (~kosh@user/kosh)
[12:50:02] <Wulf> I've got "python3-snowballstemmer" installed. "Pure Python Snowball stemming library".  Stemming snowballs sounds important. huh.
[12:50:05] *** Joins: slav0nic (slav0nic@python.su)
[12:50:06] <bad_blue_bull> more info: I could start tor process ok, but now Russia started to block Tor and I must get around
[12:50:20] <gitesh> how to make interpreter know type declaration in python?
[12:50:20] *** kurisumakise is now known as kurisu
[12:50:24] <The-Compiler> bad_blue_bull: that doesn't sound like a Python problem
[12:50:37] <Wulf> gitesh: abc: int
[12:50:43] <The-Compiler> gitesh: what do you mean by "make interpreter know"?
[12:50:47] <bad_blue_bull> people on #tor don't answer
[12:50:50] <gitesh> https://bpa.st/CEQA
[12:51:17] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 240 seconds)
[12:52:21] *** Joins: esther (~esther@199.10.64.86)
[12:52:45] <gitesh> yes it works
[12:53:20] *** kurisu is now known as kurisumakise
[12:53:42] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[12:54:53] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[12:56:16] *** Joins: jay-m126 (~jay-m@129.0.76.214)
[12:56:20] *** kurisumakise is now known as kurisu
[12:56:20] *** Joins: xx (~xx@user/xx)
[12:56:35] *** Joins: jay-m126_ (~jay-m@129.0.76.214)
[12:56:45] *** Joins: jay-m1261 (~jay-m@129.0.76.214)
[12:56:52] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[12:58:36] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 250 seconds)
[12:59:20] *** kurisu is now known as kurisumakise
[12:59:28] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 250 seconds)
[12:59:36] *** Joins: Alina-ma- (~Alina-mal@37.252.83.224)
[13:01:05] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[13:01:45] *** Joins: djhankb (~djhankb@208.113.164.68)
[13:01:56] *** Joins: noarb (~noarb@user/noarb)
[13:01:57] *** Joins: Guest21 (~Guest21@157-131-167-57.fiber.dynamic.sonic.net)
[13:02:20] *** kurisumakise is now known as kurisu
[13:02:26] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[13:02:42] <jinsun__> kurisu: settle down on one nick please, or at least change it less frequently
[13:03:01] <Guest21> Hi. I'm trying to use print("text", end=""). The terminal doesn't update though, until I print("other") with a newline
[13:03:05] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[13:03:13] <Guest21> This behaviour is not consistent
[13:03:16] *** Joins: iomari891 (~iomari891@105.112.138.38)
[13:03:19] <Wulf> Guest21: Hello. Are you sure you're using a terminal?
[13:03:33] *** Joins: widp (~user@124.123.104.175)
[13:03:36] <Guest21> Wulf: Well, I mean that I am using a Linux shell (bash) via SSH
[13:04:02] <The-Compiler> Guest21: can you try with flush=True as well?
[13:04:02] <Repiphany> Have you tried print("text", end = "", flush = True)
[13:04:07] <parv> Looks to me you suffering due to buffering ...
[13:04:14] <The-Compiler> parv: hehe
[13:04:16] <Guest21> Repiphany: I have not. I will try
[13:04:22] <Wulf> Guest21: perhaps you did ssh -T?
[13:04:54] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[13:05:12] <Guest21> Flushing is the answer. Thank you
[13:05:20] *** kurisu is now known as kurisumakise
[13:05:24] <Wulf> Guest21: run the "tty" command over your ssh connection. What's the output?
[13:05:36] <Wulf> Guest21: no, it's not the answer, it's a workaround.
[13:06:19] <parv> I had bueffering issue in zsh where unless the newline is printed, single line output was not printed
[13:06:46] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:07:38] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[13:07:54] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 268 seconds)
[13:08:20] *** kurisumakise is now known as kurisu
[13:08:25] <Wulf> that's usually a symptom of "not a terminal"
[13:08:57] *** Joins: Vonter (~Vonter@user/vonter)
[13:09:34] <Guest21> one moment
[13:09:52] *** Quits: bytehackr (~Sandipan@43.252.250.126) (Ping timeout: 250 seconds)
[13:10:17] <Guest21> it is '/dev/pts/2'
[13:10:44] *** Parts: HexaCube (~HexaCube@vmi438683.contaboserver.net) (Poof goes the quack - The Lounge - https://thelounge.chat)
[13:11:20] *** kurisu is now known as kurisumakise
[13:11:55] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:4f96:fe34:d5dc:f0a6) (Remote host closed the connection)
[13:12:00] *** Joins: pvergain1 (~Thunderbi@2a01:e0a:223:690:4f96:fe34:d5dc:f0a6)
[13:12:06] <gitesh> even to do easy problems on leetcode I'm taking a lot time
[13:12:40] *** Joins: vitali64 (~vitali64a@xdsl-31-164-198-163.adslplus.ch)
[13:13:02] <han-solo> that's alright
[13:13:24] <Wulf> Guest21: and  sys.stdout.isatty()  ?
[13:14:04] <Wulf> oh... didn't have my coffeine today yet.
[13:14:18] *** pvergain1 is now known as pvergain
[13:14:20] *** kurisumakise is now known as kurisu
[13:15:25] <Wulf> of course stdio is line buffered by default on a tty. It's just that some functions like input() do a flush.
[13:15:29] <Guest21> Wulf: True
[13:15:34] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[13:15:44] <Guest21> (result from isatty())
[13:16:04] <Wulf> Guest21: never mind and sorry. Yes, explicit flushing is the answer.
[13:16:17] <Guest21> np
[13:18:27] <push-f> does anybody here use VS Codium and has figured out how to configure Black as the formatter for Python code? ... without using the proprietary Pylance extension?
[13:19:08] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 252 seconds)
[13:19:14] *** kurisu is now known as kurisumakise
[13:19:15] *** kurisumakise is now known as kurisu
[13:20:01] *** Joins: rendar (~rendar@user/rendar)
[13:21:43] *** kurisu is now known as kurisumakise
[13:22:27] *** kurisumakise is now known as kurisu
[13:22:55] *** Joins: Vonter (~Vonter@user/vonter)
[13:24:43] *** kurisu is now known as kurisumakise
[13:24:45] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:25:49] *** Quits: vitali64 (~vitali64a@xdsl-31-164-198-163.adslplus.ch) (Quit: WeeChat 3.4)
[13:27:44] *** kurisumakise is now known as kurisu
[13:28:39] *** Joins: xa0s (~xa0s@mab.sdf.org)
[13:29:37] *** Joins: thiras (~thiras@user/thiras)
[13:29:44] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[13:30:16] *** Quits: jinsun__ (~quassel@user/jinsun) (Read error: Connection reset by peer)
[13:30:32] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[13:30:34] *** Quits: xxyxx (~none@b2b-37-24-160-145.unitymedia.biz) (Remote host closed the connection)
[13:30:43] *** kurisu is now known as kurisumakise
[13:31:47] *** Joins: jinsun (~quassel@user/jinsun)
[13:31:49] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[13:32:34] *** Joins: paul424 (~tom@apn-95-41-71-220.dynamic.gprs.plus.pl)
[13:33:44] *** kurisumakise is now known as kurisu
[13:34:25] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 268 seconds)
[13:34:40] *** Joins: walterwhip (~www@user/walterwhip)
[13:34:57] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[13:35:00] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[13:35:30] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[13:36:17] *** Quits: jay-m1261 (~jay-m@129.0.76.214) (Ping timeout: 240 seconds)
[13:36:43] *** kurisu is now known as kurisumakise
[13:36:45] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[13:36:57] *** Quits: jay-m126 (~jay-m@129.0.76.214) (Ping timeout: 240 seconds)
[13:37:13] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[13:37:17] *** Quits: jay-m126_ (~jay-m@129.0.76.214) (Ping timeout: 240 seconds)
[13:38:10] <blackhats> hi guys...
[13:38:14] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[13:38:45] <blackhats> how do I extract a specific class of an html url with bs4?
[13:38:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[13:39:14] <Wulf> blackhats: does bs4 have xpath?
[13:39:44] *** kurisumakise is now known as kurisu
[13:40:15] <Wulf> blackhats: https://www.geeksforgeeks.org/how-to-use-xpath-with-beautifulsoup/
[13:40:34] *** Quits: slackcals (~slackcals@user/slackcals) (Read error: Connection reset by peer)
[13:40:58] <blackhats> ;)
[13:40:59] <blackhats> thanks Wulf
[13:41:31] *** Joins: xxyxx (~none@ip-037-024-160-145.um08.pools.vodafone-ip.de)
[13:42:10] <Wulf> blackhats: https://www.crummy.com/software/BeautifulSoup/bs4/doc/#css-selectors
[13:42:15] <Wulf> well, never used bs4.
[13:42:33] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[13:42:43] *** kurisu is now known as kurisumakise
[13:44:05] *** Joins: ntropy (~ntropy@146.70.21.22)
[13:44:36] *** Joins: vitali64 (~vitali64@xdsl-31-164-198-163.adslplus.ch)
[13:44:50] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[13:45:23] *** Quits: Guest21 (~Guest21@157-131-167-57.fiber.dynamic.sonic.net) (Quit: Client closed)
[13:45:37] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 240 seconds)
[13:45:44] *** kurisumakise is now known as kurisu
[13:45:53] *** Quits: vitali64 (~vitali64@xdsl-31-164-198-163.adslplus.ch) (Client Quit)
[13:45:58] *** Joins: magla (~gelignite@55d45b98.access.ecotel.net)
[13:46:10] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:46:15] *** Joins: vitali64 (~vitali64@xdsl-31-164-198-163.adslplus.ch)
[13:46:55] *** Joins: sokan_ (~sokan@2a02:587:9e0a:f500:227:eff:fe16:865d)
[13:47:01] *** Quits: sokan (~sokan@85.73.227.185) (Ping timeout: 245 seconds)
[13:47:18] *** sokan_ is now known as sokan
[13:48:44] *** kurisu is now known as kurisumakise
[13:50:42] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[13:51:50] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[13:53:12] *** Joins: Atque (~Atque@user/atque)
[13:53:17] *** Quits: Babar (~Babar@2405:4803:ff4d:98d0:71db:a036:9fd6:14a5) (Ping timeout: 240 seconds)
[13:55:10] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[13:55:14] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:55:45] *** Quits: vitali64[m] (~notrealvi@2001:470:69fc:105::c1bf) (Changing host)
[13:55:45] *** Joins: vitali64[m] (~notrealvi@user/vitali64)
[13:55:45] *** Quits: vitali64 (~vitali64@xdsl-31-164-198-163.adslplus.ch) (Changing host)
[13:55:45] *** Joins: vitali64 (~vitali64@user/vitali64)
[13:56:47] *** Quits: dude-x (~textual@72.76.74.165) (Read error: Connection reset by peer)
[13:57:10] *** Joins: dude-x (~textual@72.76.74.165)
[13:57:29] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[13:58:04] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 256 seconds)
[13:58:53] *** Joins: Jimmy2027 (~hendrik@2001:1620:2018:38:dde3:1b0f:dc57:eb0f)
[13:59:17] *** Quits: esther (~esther@199.10.64.86) (Ping timeout: 240 seconds)
[13:59:32] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[13:59:39] *** Joins: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:55b8:a3b1:cf88:c42b)
[14:00:04] *** Joins: csm3105 (~csm3105@static-107-54-230-77.ipcom.comunitel.net)
[14:00:20] *** Quits: avaxar (~avaxar@36.72.212.92) (Quit: Leaving)
[14:00:38] *** Joins: crass_ (~crass@cpc107905-blac9-2-0-cust584.18-3.cable.virginm.net)
[14:00:41] *** Joins: avaxar (~avaxar@36.72.213.157)
[14:03:25] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[14:03:53] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[14:04:18] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[14:04:28] *** Quits: voidcat (~voidcat@user/voidcat) (Ping timeout: 250 seconds)
[14:04:52] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[14:05:08] *** Joins: fubbe (~bubbe@151.41.185.44)
[14:05:37] *** Quits: widp (~user@124.123.104.175) (Ping timeout: 240 seconds)
[14:06:48] *** Joins: jsmock (~joern@xdsl-78-34-163-94.nc.de)
[14:07:06] *** Quits: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:55b8:a3b1:cf88:c42b) (Ping timeout: 268 seconds)
[14:10:32] *** Quits: fubbe (~bubbe@151.41.185.44) (Ping timeout: 256 seconds)
[14:12:13] *** Quits: tobybl (~tobybl@248.64.200.146.dyn.plus.net) (Remote host closed the connection)
[14:13:31] *** Joins: vanessa (~vanessa@103.160.128.7)
[14:17:09] *** Parts: jsmock (~joern@xdsl-78-34-163-94.nc.de) (WeeChat 3.3)
[14:20:26] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:21:17] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[14:23:18] *** Lord_of_Life_ is now known as Lord_of_Life
[14:24:13] *** Joins: voidcat (~voidcat@user/voidcat)
[14:25:18] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:26:27] *** Joins: tobybl (~tobybl@248.64.200.146.dyn.plus.net)
[14:26:37] *** Quits: ouestbillie (~gallup@bl16-179-173.dsl.telepac.pt) (Ping timeout: 240 seconds)
[14:26:51] *** Quits: tobybl (~tobybl@248.64.200.146.dyn.plus.net) (Remote host closed the connection)
[14:29:48] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[14:30:09] <petaflot> hello! I was wondering if there was a built-in (or somethig similar) to recursively set a value in a dict, .ie: `d = {} ; k = [0,1,2] ; try: d[0][1][2] = True ; except KeyError: recursive_magic( d, k, True ) ; d[0][1][2] == True`
[14:30:37] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 240 seconds)
[14:30:40] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:30:55] <petaflot> .. ideally this does not depend on len(k)
[14:32:33] *** Joins: han-solo (~han-solo@103.104.47.42)
[14:35:13] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[14:35:29] *** Joins: nightbreak (~nightbrea@victors-mbp.dyndns.rice.edu)
[14:36:23] *** Joins: Auron (Auron956@user/auron)
[14:36:32] <parv> You are looking for autovivification of Perl.
[14:36:46] <Wulf> petaflot: d.setdefault(0, {}).setdefault(1, {})[2] = True. Or you could use a defaultdict.
[14:36:50] *** Quits: paul424 (~tom@apn-95-41-71-220.dynamic.gprs.plus.pl) (Quit: Leaving)
[14:38:45] *** Joins: Klinda (~superleag@user/klinda)
[14:39:08] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[14:39:21] *** Joins: c4017w__ (~c4017@209.52.68.8)
[14:41:38] *** Quits: anotheruser (~user@45.130.86.11) (Ping timeout: 252 seconds)
[14:41:51] <petaflot> Wulf: what do you mean by a defaultdic? a dic defined with a basic "structure" ?
[14:42:44] *** Joins: fourhomipt (uid506825@id-506825.tinside.irccloud.com)
[14:42:50] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[14:43:21] *** Joins: Vonter (~Vonter@user/vonter)
[14:44:09] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[14:44:30] *** Joins: someuser (~user@197.54.38.140)
[14:44:45] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[14:45:23] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Read error: Connection reset by peer)
[14:45:45] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[14:45:52] <Wulf> petaflot: dd = lambda: defaultdict(dd); d = dd(); d[0][1][2] = True; d[0][1][2] == True
[14:47:59] <Wulf> petaflot: perhaps you can replace __missing__
[14:48:40] *** Quits: dreamon (~dreamon@ppp-88-217-91-105.dynamic.mnet-online.de) (Ping timeout: 250 seconds)
[14:48:46] <parv> There is python-autoviv , yet to be tested (by me): https://pypi.org/project/python-autoviv/
[14:49:24] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Ping timeout: 276 seconds)
[14:49:37] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:e880:89ff:3e74:550f) (Ping timeout: 240 seconds)
[14:50:46] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[14:51:58] * petaflot has too much trouble with lambda functions to understand this straight "out-of-the-box".. maybe I ca get some sort of explanation of what happes there?
[14:54:16] * petaflot just read something about defaultdict.. it's probably wat I need!
[14:54:18] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Ping timeout: 250 seconds)
[14:54:38] *** Joins: zamanf (~dev@user/zamanf)
[14:54:41] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:55:17] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[14:55:25] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[14:56:05] *** Joins: djhankb (~djhankb@208.113.164.68)
[14:56:06] *** Quits: Lazenca (~lazenca@user/lazenca) (Remote host closed the connection)
[14:56:10] <parv> Wulf, Thank you
[14:56:38] <zamanf> I am planning to learn Python and I already know Perl. Anyone has experience on this?
[14:57:42] <parv> print() by default adds a new line. Regex use is different.
[14:58:01] *** Joins: PJBoy (~PJBoy@user/pjboy)
[14:58:09] *** Quits: han-solo (~han-solo@103.104.47.42) (Changing host)
[14:58:09] *** Joins: han-solo (~han-solo@user/han-solo)
[14:58:36] <Wulf> zamanf: yeah, happened to me some years ago. Enjoy!
[14:58:53] <Helle> zamanf: yes, you will hate having to use white space as code, beyond that, it's more similar then you may expect
[14:59:17] <parv> Adding custom library paths via sys.path is frowned upon. Relative imports are horrible in use.
[14:59:37] *** Joins: Vonter (~Vonter@user/vonter)
[15:00:07] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 250 seconds)
[15:00:16] <dirtwash> anyone whos familiar with graphical representations...how can one present 'something' that is either there or not on a daily basis for e.g. a month, visually. like a binary heatmap if that makes sense
[15:00:19] <zamanf> How long did it take you to adopt to Python and use it at a professional level?
[15:00:33] <Helle> like, the biggest issue is that you have to import for regexes and there are 3 competing regex libraries in Python which do not all overlap in features....
[15:00:49] <Helle> zamanf: I mean 2 weeks for me, but I am flexible at using programming languages
[15:01:06] <parv> zamanf, lamda fuis a poor, lackluster substitute for an anonymous function; usen named functions, nested or otherwise
[15:01:14] <parv> s/fuis/function/
[15:01:46] <zamanf> regexp is something that I am going to definitely miss
[15:01:49] <parv> *curses*
[15:02:02] *** Joins: ivii (~ivan@user/ivii)
[15:02:06] <parv> s/lamda fuis/lambda function/
[15:02:07] <Helle> yeah, lambda is not a good lambda, nor anon function in Python, but you can used nested named functions just fine
[15:03:05] <Helle> zamanf: you can get essentially all the Perl RE functionality if you use re2 or regex, but they both implement about a different 90% of it, the standard "re" library is not remotely as complete
[15:03:13] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[15:03:21] <zamanf> I am going through the docs for now, later I am planning to re-write a program I wrote with Perl in Python. I believe that's a good practice. Do you have any advise on this?
[15:03:42] <Helle> zamanf: just start going on it and accept that your first programs will be a mess, but functional
[15:03:56] <zamanf> Helle, true!
[15:04:02] <parv> zamanf, Try to use Python idioms from the start
[15:04:17] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Remote host closed the connection)
[15:04:25] <zamanf> I need to get the 'muscle memory' first, then I will beautify the code and use the best practices
[15:04:27] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[15:04:40] <zamanf> parv, sure
[15:04:43] <parv> zamanf, There is no autovivification generally
[15:04:51] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[15:04:59] <Wulf> zamanf: use a code formatter such as "black" or "yapf". Use typing and a type checker such as mypy.
[15:05:17] <zamanf> *making notes*
[15:05:26] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[15:05:27] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:05:40] *** Quits: bluedust_ (~bluedust@185.248.85.32) (Remote host closed the connection)
[15:05:49] <parv> Helle, I did not know about re2|regex modules. Thanks
[15:05:50] <Wulf> zamanf: typing is optional, but I found that it makes code more readable and helps with finding bugs.
[15:06:10] *** Joins: bluedust (~bluedust@185.248.85.32)
[15:06:37] *** Joins: maryo87 (~Maryo@user/maryo)
[15:06:39] <zamanf> Alright, first things first. Going to finish the docs so I can add more questions
[15:07:02] <zamanf> Thank you for all the input, its a huge help
[15:07:10] <parv> Type annotations are usable only via static type checker; not supported at run time
[15:07:22] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 260 seconds)
[15:08:08] *** Quits: nightbreak (~nightbrea@victors-mbp.dyndns.rice.edu) (Quit: Signing off for now...)
[15:08:12] <Wulf> parv: they can be retrieved at run time
[15:09:19] <parv> Wulf, And verify the type yourself?
[15:09:41] <Wulf> parv: use it for something else
[15:10:02] *** Quits: maryo (~Maryo@user/maryo) (Ping timeout: 256 seconds)
[15:10:12] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[15:10:38] *** Quits: bluedust (~bluedust@185.248.85.32) (Ping timeout: 260 seconds)
[15:11:37] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[15:12:18] *** Quits: canton7 (~canton7@about/csharp/canton7) (Quit: ZNC - http://znc.in)
[15:12:33] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[15:13:00] *** Joins: canton7 (~canton7@about/csharp/canton7)
[15:13:19] <jinsun> parv: there are libraries that can verify the types at runtime from the annotations https://pypi.org/project/typeguard/
[15:13:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[15:14:17] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[15:14:19] <jinsun> the more common use is pydantic which converts input data to the annotated type
[15:14:52] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Quit: mugen)
[15:15:34] <parv> jinsun, Thanks for the link to typeguard
[15:16:54] <petaflot> Wulf: thanks a lot, this massively simplifies my code! this is a working example for hard-coded depth-three dict (with alist at the end) : http://dpaste.com/93KRXQWQV is there a way to make this more more generic (ie. args=(0,1,2,3,...n))? (I thought of using eval() but this really sounds like a bad idea)
[15:17:06] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:17:46] <Wulf> is there a library that can be used similar to data classes and helps with (de)serializing binary data structures? Idea would be to have e.g. class X: a: uint64; b: bytearr[9]
[15:19:42] <petaflot> Wulf: I don't quite understand.. but somehow it feels I've run into similar issues.
[15:21:22] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[15:21:36] *** Quits: zamanf (~dev@user/zamanf) (Ping timeout: 250 seconds)
[15:21:43] *** Quits: magla (~gelignite@55d45b98.access.ecotel.net) (Read error: Connection reset by peer)
[15:21:49] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[15:21:55] *** Joins: magla (~gelignite@55d45b98.access.ecotel.net)
[15:22:38] <bad_blue_bull> ok, anyone who has tor and stem pls try this: https://termbin.com/g7l0  (maybe will fail if tor is already running)
[15:26:24] *** Joins: Vonter (~Vonter@user/vonter)
[15:27:17] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[15:30:26] *** Quits: dbristow (~dbristow@user/dbristow) (Ping timeout: 256 seconds)
[15:31:49] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 240 seconds)
[15:32:24] *** Quits: parv (~quass@user/parv) (Quit: parv)
[15:32:30] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[15:33:09] *** Quits: canton7 (~canton7@about/csharp/canton7) (Quit: ZNC - http://znc.in)
[15:33:44] *** Quits: johnjaye (~pi@173.209.65.233) (Ping timeout: 250 seconds)
[15:33:50] *** Joins: dbristow (~dbristow@user/dbristow)
[15:33:58] *** Quits: maryo87 (~Maryo@user/maryo) (Ping timeout: 260 seconds)
[15:34:52] *** Joins: canton7 (~canton7@about/csharp/canton7)
[15:35:07] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[15:35:14] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[15:35:22] * petaflot has been playing with defaultdic for a while, and there's a problem... it is really cool to be able to set a default on a missing key when writing to the dict. but I want the exception to be raised when reading a value! is it possible?
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:08] <ChrisWarrick> petaflot: how do you write to the dict?
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:43] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[15:36:53] <petaflot> ChrisWarrick: so far the best I've found is http://dpaste.com/93KRXQWQV
[15:37:02] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[15:37:06] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[15:37:20] <ChrisWarrick> petaflot: that looks really ugly
[15:37:52] <ChrisWarrick> thereâs no way for python to tell the difference between foo[x] and foo[x].append(y)
[15:38:14] <petaflot> ChrisWarrick: I wouldn't call it "really ugly" (because it's definitely cleaner than what I had before) but I can agree it's not brilliant
[15:38:22] *** Quits: Gurkenglas (~Gurkengla@dslb-090-186-104-244.090.186.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[15:38:30] *** Joins: lakrass (~lakrass@user/lakrass)
[15:38:35] <ChrisWarrick> nah, it is ugly, too much repetition and list access
[15:38:51] <fourhomipt> hi. i want to learn python from scratch with a friend of mine but we're only connected over the internet. but we want to work both on the same project, and learn python by doing it. what ide would be best for a internet contributional workflow?
[15:39:06] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 260 seconds)
[15:39:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[15:40:37] <ChrisWarrick> fourhomipt: is your friend a beginner as well?
[15:41:03] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[15:41:25] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[15:42:44] *** Quits: crass_ (~crass@cpc107905-blac9-2-0-cust584.18-3.cable.virginm.net) (Quit: leaving)
[15:42:56] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[15:43:17] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[15:44:52] *** Joins: Z-cat (~Z-cat@user/z-cat)
[15:45:25] *** Joins: tobybl (~tobybl@248.64.200.146.dyn.plus.net)
[15:45:36] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:45:49] *** Joins: dev_ (~dev@2a02:587:3240:a000:9dbb:1d04:843c:a126)
[15:46:18] *** Quits: BlessJah (~BlessJah@user/blessjah) (Ping timeout: 256 seconds)
[15:46:40] <petaflot> ChrisWarrick: so far this is the least ugly variant of the code that does what I want: http://dpaste.com/ERU37SN98
[15:47:10] *** Quits: ntropy (~ntropy@146.70.21.22) (Ping timeout: 250 seconds)
[15:47:20] <petaflot> .. maby eyou have a better suggestion? it would be welcome ; line 15 in particular is bothering me
[15:47:26] <ChrisWarrick> petaflot: okay, but why do you actually want to do this? what is the end goal of this? what problem is caused by the regular use of defaultdict?
[15:48:07] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[15:48:14] *** Joins: dev__ (~dev@2a02:587:3240:a000:b99b:c39c:f42:27fe)
[15:48:17] *** Joins: BlessJah (~BlessJah@user/blessjah)
[15:48:25] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[15:49:02] <petaflot> if I try to return the "end-target" I want to have an exception raised if the value is not set. if I want to set/append a value to the end-target, I don't want any exception raised.
[15:49:53] <fourhomipt> ChrisWarrick: yes sir.
[15:49:54] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[15:50:09] <petaflot> so maybe there should be some need to tell either the lambda or somewhere else that "at this point don't return the default but it should be a list or anything else"
[15:50:12] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[15:50:29] <ChrisWarrick> petaflot: raising an exception isnât a typical end-goal of code
[15:50:42] *** Quits: dev_ (~dev@2a02:587:3240:a000:9dbb:1d04:843c:a126) (Ping timeout: 268 seconds)
[15:50:52] <ChrisWarrick> petaflot: my question is about the high-level behavior
[15:51:20] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[15:51:25] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[15:51:31] *** Joins: dev_ (~dev@2a02:587:3240:a000:29c6:7f50:7f54:c69d)
[15:51:54] <ChrisWarrick> fourhomipt: I would recommend starting by going through tutorials first on your own, since adding in collaboration can make the initial stages much more difficult
[15:53:04] <ChrisWarrick> fourhomipt: after that, it depends on your preferred mode of collaboration; you might just go with any ide + git integration + your code in a shared github/gitlab repo. Or you might use live share in vs code, or code with me in pycharm
[15:53:10] *** Quits: dev__ (~dev@2a02:587:3240:a000:b99b:c39c:f42:27fe) (Ping timeout: 268 seconds)
[15:53:34] *** Joins: dev__ (~dev@2a02:587:3240:a000:e50e:667e:d4ec:fc45)
[15:53:44] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[15:54:03] *** Quits: tobybl (~tobybl@248.64.200.146.dyn.plus.net) (Remote host closed the connection)
[15:54:08] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[15:54:12] <petaflot> ChrisWarrick: let's say you have a X-Y grid in front of you. it exists, but it is so massive we don't want the full thing in memory (we fill it up as the data comes in) - we're just going to use part of it, but we need the full adress space. I want to be able to ask "is there a coin here" (then return the pile of coins) and "add a coin here" (add a coin to the pile or create a new pile if none is already
[15:54:18] <petaflot> here)
[15:54:40] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:55:16] *** Joins: panella32 (~panella32@45.67.97.49)
[15:55:24] *** Quits: Linux77 (~LinuMage@186.233.182.173) (Ping timeout: 250 seconds)
[15:55:44] <panella32> whats the ffmpeg command to merge video & audio files like "somerandomstring_2900.mp4" and "samestring_0_audio.mp4" and then remove them? Both files are downloaded by ytdl separately I wonder if ytdl itself can also merge them?
[15:56:52] *** Quits: dev_ (~dev@2a02:587:3240:a000:29c6:7f50:7f54:c69d) (Ping timeout: 268 seconds)
[15:57:34] *** Joins: marcello42 (~mp@p200300dfaf1b4601073f9a5c629881ab.dip0.t-ipconnect.de)
[15:58:43] <lola> o/ Python
[15:58:43] <lola> I have a question? we were using mkdir for replicantOS project wiki migration scripts, but we realise we need to use makedirs instead, nontheless Im not sure if we should keep the same arguments for permissions in folders. in "os.makedirs(parent_dir_path, mode=0o777, exist_ok=False)"
[15:58:43] <lola> Given it was suggested for "Permission errors when directory is created with priveliges, [...]" it's not an issue, as users are expected to handle that instead
[15:58:43] <lola> The right fix is something like that (assuming your user is irelativism): chown irelativism:irelativism -R $PWD.
[15:58:47] <lola> Cheers Irelativism
[15:59:18] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[15:59:25] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[15:59:34] <supakeen> What is the actual question in there?
[15:59:39] <supakeen> If you should pass `mode=...`?
[15:59:56] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:01:41] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[16:02:59] <petaflot> .. a while ago I was thinking "it's too bad there's not a way to break(3) to break the 3 [for/while] loops I'm into... then I realized exceptions did it pretty well in a somehow different manner. And unless someone has another replacement to the non-existent "break(n)" I'm just gonna keep on using exceptions to do "regular stuff"
[16:03:12] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 250 seconds)
[16:04:15] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[16:04:20] <ChrisWarrick> petaflot: I donât see how your code sample fits your description â which action should raise an exception?
[16:04:29] *** Joins: mickey8 (~user@user/mickey)
[16:04:30] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[16:06:07] *** Quits: avaxar (~avaxar@36.72.213.157) (Ping timeout: 268 seconds)
[16:06:13] <petaflot> ChrisWarrick: line 16?
[16:06:30] <ChrisWarrick> petaflot: Iâm referring to your coin-pile example
[16:06:39] *** Joins: avaxar (~avaxar@36.72.214.225)
[16:07:19] *** Quits: WarpedAI (~Warped@user/warped) (Quit: We Gone! Bye Bye)
[16:07:38] <ChrisWarrick> petaflot: A solution for your coin-pile problem I would think of would involve two things: (a) get rid of nesting, use tuples as keys of your dicts (b) write a class CoinPile that keeps track of pile existence and contents (with the list always initialized to [] for simpilcity) and the operation add that sets exists=True and appends to the list.
[16:08:19] <petaflot> if there are no coins, raise an exception (because since the X-Y grid is distributed, the fact I do't have a pile does't mean my friend over there doesn't have a pile on _his_ grid ; so if I have no pile there - and before saying "nothing-is-here" I need to ask my friends)
[16:09:13] <petaflot> ^pile^pile (at these particular X-y coordinates)
[16:09:27] *** Quits: Alina-ma- (~Alina-mal@37.252.83.224) (Quit: !be back soon)
[16:09:37] <petaflot> does it make sense now?
[16:10:47] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:10:55] <ChrisWarrick> petaflot: my idea simplifies access to things and decouples list existence from pile existence; checking pile.exists and asking friends if itâs False should do it
[16:14:07] <petaflot> ChrisWarrick: (b) is actually what I'm trying to do ; I hadn't thought of (a) and it could be a very smart way to do it but I need to make sure my tupes are unique! ie.: `a=myClass('x') ; b=myClass('y') ; t1=(a,b) ; t2=(a,b) ; if id(t1)!=id(t2): print("this won't work in practice unless we keep track of all the tuples involved, so we're back to the start")`
[16:14:38] <ChrisWarrick> petaflot: are your coordinates not integers?
[16:14:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[16:14:59] <petaflot> ChrisWarrick: they're bytes().. so I guess they're integers
[16:15:14] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[16:15:23] <ChrisWarrick> petaflot: dicts do not depend on id(), they depend on hash() and ==
[16:15:35] <petaflot> and in practice they're an instance of myClass(bytes())
[16:15:43] *** Quits: marcello42 (~mp@p200300dfaf1b4601073f9a5c629881ab.dip0.t-ipconnect.de) (Quit: WeeChat 3.4)
[16:16:21] <ChrisWarrick> then define __eq__ and __hash__ in MyClass to be reasonable (eg. self.data == other.data and hash(self.data) == hash(other.data), respectively)
[16:16:55] <petaflot> myClass(b'foo') -> creates an instance ; calling myClass(b'foo') again will not create another instance but return the first instance created
[16:17:11] <ChrisWarrick> is that really necessary?
[16:17:28] <petaflot> yes, otherwise there are mem leaks
[16:17:32] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[16:17:49] *** Joins: bluedust (~bluedust@185.248.85.32)
[16:18:35] <petaflot> also, I want to somehow override the bytes() class so it has a few helper functions
[16:18:37] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Ping timeout: 240 seconds)
[16:18:50] <nedbat> petaflot: i'm not a fan of classes that lie like that.
[16:19:02] *** Joins: dev_ (~dev@ppp-94-66-58-146.home.otenet.gr)
[16:19:03] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[16:19:41] *** Quits: dev__ (~dev@2a02:587:3240:a000:e50e:667e:d4ec:fc45) (Ping timeout: 268 seconds)
[16:20:09] *** Joins: zeden (~zeden@user/zeden)
[16:20:57] <petaflot> nedbat: I'm not a fan of the 'common' CPU architecture... I find it awkward for some operations and would like to design my own CPU (with an extended instruction set). this is out of my reach, so I try to do as good as possible with whatever is hat hand (and python has proved to be massively useful)
[16:20:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[16:21:17] <petaflot> ^hat^at
[16:21:34] <nedbat> petaflot: i would make a function that takes a byte string and returns the myClass object to use.
[16:21:45] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[16:21:49] <nedbat> petaflot: rather than hiding it in the myClass constructor
[16:21:57] <petaflot> nedbat: well so far I have a classmethod that does this
[16:22:07] <nedbat> petaflot: ok, a classmethod is good too
[16:22:38] * petaflot needs a classmethod because there som async stuff involved
[16:22:39] <nedbat> petaflot: though that still hides a global that might interfere with testing.
[16:22:56] <petaflot> nedbat: thanks, I'm glad I'm not doing things "completely" wrong ;-)
[16:23:22] *** Joins: fikran (~fikran@user/fikran)
[16:23:28] <lola> "o/ Python... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/a83a6b8f4c7f7ccd6e7d494b142ebc042968b571)
[16:23:44] <lola> Is this true should I remove all arguments for makedirs?
[16:23:54] <lola> Thanks for feedback
[16:24:23] <lola> not all but you know what I mean ", mode=0o777, exist_ok=False"
[16:25:03] <petaflot> lola: you can use '.' instead of '$PWD'
[16:25:17] <lola> so no need for ", mode=0o777, exist_ok=False"
[16:25:17] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[16:25:26] <lola> isnt it good pratice to do this?
[16:25:41] <lola> in orther to prevent user created errors?
[16:26:48] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[16:26:50] <petaflot> lola: in general (and unless you know what you're doing) you can consider that chmodding with 777 is wrong
[16:27:05] *** Quits: panella32 (~panella32@45.67.97.49) (Ping timeout: 268 seconds)
[16:27:14] <lola> why is that?
[16:27:39] <petaflot> because then you can just strip all permission mechanisms and passwords
[16:27:40] <lola> security wise you mean?
[16:27:54] <lola> yeah I see
[16:27:57] <petaflot> yes, permissions are here for security
[16:28:16] <lola> so I should remve those 2 arguments from makedirs line right?
[16:28:25] <lola> and leave it to the user to deal with it
[16:29:04] <lola> the issue is in some other parts of the codebase git.replicant.us/infrastructure/wiki-migration-scripts
[16:29:16] <lola> such permission might be needed
[16:29:27] <lola> in the git commit related lines petaflot
[16:29:34] *** Joins: cpunk (~mm@ip2505fdc6.dynamic.kabel-deutschland.de)
[16:29:53] <petaflot> lola: you have to figure out a sane chmod value.. otherwise (eg. with 000) the user is going to have some trouble. at the very least you need to chown the files right
[16:30:07] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ¦)
[16:30:35] <lola> sorry but I dont know what chown is?
[16:30:40] * lola goes look it up
[16:31:20] <lola> ok "change owner,"
[16:31:48] <petaflot> lola: this raises a question... who is the user? is the user a sysadmin who more or less knows what he/she/it's doing and kow where to educate him/her/itself, or is it a "random granny" who expects things to "just work"?
[16:31:59] <lola> wouldnt it be better to use chgrp.
[16:32:11] <petaflot> lola: chown can do both.
[16:32:46] <petaflot> chown user:grp file (but this discussion is irrelevanton #python)
[16:33:06] <lola> ok noted :) chown then,
[16:33:06] <lola> petaflot: this wikimigration scripts are meant for sysadmins, given the objective is to upstream this eventually on git remotes
[16:33:16] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[16:33:39] <lola> in order for people to migrate from and off redmine more easily in the future
[16:33:54] <lola> similar to git-mw(mediawiki) remote
[16:33:57] <petaflot> .. then use a sane "allround" value such as 750 for dirs, 640 for files
[16:34:50] <lola> so you are saying those arguments should be left in the scripts? and not left for the user to figure it out?
[16:35:05] <d1rewolf> I'm trying out attrs.org in various things. However, I'm a little confused. Both "import attr" and "import attrs" works. Anyone know what the difference is?
[16:35:42] *** Joins: Gurkenglas (~Gurkengla@dslb-090-186-104-244.090.186.pools.vodafone-ip.de)
[16:35:43] <petaflot> d1rewolf: help(attr) and help(attrs) should help you fdigure this out once the import is done
[16:35:50] <lola> https://www.attrs.org/en/stable/
[16:36:16] <lola> if you dont know how to import them :s
[16:36:37] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 240 seconds)
[16:36:46] *** Joins: Naan (~naan@user/naan)
[16:37:16] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[16:37:28] <petaflot> lola: yeah... I mean they can just `ls -l <whatever>` to figure them out once the script was run, and manually `chmod/chown/chgrp <whatever>` if the'yre not happy with the defaults (or modify the variable in the script)
[16:37:30] <jinsun> d1rewolf: attr is the old api, attrs is the new one
[16:37:41] *** Quits: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt) (Ping timeout: 252 seconds)
[16:37:56] *** Joins: andreasbuhr (~quassel@p548dde66.dip0.t-ipconnect.de)
[16:38:19] <d1rewolf> jinsun: ah, ok. thanks you. so attrs is the way forward
[16:38:41] <lola> thanks petaflot so I will still use those 2 arguments but use more sane values for permission.
[16:38:52] <jinsun> d1rewolf: yeah, see https://www.attrs.org/en/stable/names.html
[16:39:04] <lola> Cheers I trully appreciate your help petaflot
[16:39:08] <petaflot> nedbat: I don't understand what you mean by "a global that could interfere with testing" ; dou you have an example or can you be alittle more explicit?
[16:39:10] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 250 seconds)
[16:39:26] <lola> do you want me to add your copyright header to the script for your contribution?
[16:39:45] <nedbat> petaflot: your class method is probably accessing a class attribute that maps strings to objects, yes?
[16:40:21] *** Joins: c4017w__ (~c4017@209.52.68.8)
[16:41:00] *** Joins: bytehackr (~Sandipan@43.252.250.126)
[16:41:31] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[16:41:36] *** Joins: Sco-Ross (~Sco-Ross3@2a02:c7f:d049:600:303a:9b89:27a0:1e9d)
[16:41:40] <d1rewolf> thanks very much jinsun
[16:41:43] *** Quits: mspe (~user@tilde.team/user/mspe) (Quit: WeeChat 2.8)
[16:41:56] *** Joins: aniketgm (~aniketgm@49.36.57.182)
[16:42:24] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[16:42:31] <petaflot> no... (and this is where I'm trying to get this thing to work with defaultdic): myClass.new(x,y,z) will return full_dict_of_myClass[x][y][z] if it exists, else create a new instance of myClass and set full_dict_of_myClass[x][y][z]=self (with some simplifications)
[16:42:36] *** Joins: dsc_ (~dsc@70.68.10.185.ro.ovo.sc)
[16:42:40] <petaflot> nedbat: ^^
[16:42:56] <nedbat> petaflot: what is full_dict_of_myClass ?
[16:42:59] <petaflot> lola: no problem :-)
[16:43:23] <lola> I would be happy to do it though
[16:43:24] <nedbat> petaflot: can you pastebin the actual code?
[16:43:53] <lola> I just need your name and I will use replicat info email for commit if you perfer
[16:44:03] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[16:44:06] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[16:44:15] *** Quits: jug (~jug@user/jug) (Quit: WeeChat 3.4)
[16:44:50] <dsc_> I have something like `setuptools.Extension('*.cpp', include_dirs[...])` in my setup.py so that my python module gets compiled, just wondering if there is a way to compile without using setuptools
[16:45:12] <dsc_> in addition, when ive done changes how can I recompile the .so
[16:45:13] <petaflot> nedbat: I'd have to trim it down first.. there's a lot of irrelevant stuff (and dependencies on more code). this seems totally worth it though...
[16:45:27] <petaflot> lola: yeah sure :-)
[16:45:40] <dsc_> disregard that last question
[16:46:04] <dsc_> for the first question, suppose its just gcc that links against python
[16:46:06] <dsc_> nvm ill figure it out
[16:46:21] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:e4a6:e6ed:f40:6c23)
[16:46:49] *** Joins: FreEm1nD (~FreEm1nD@mail.guarapari.store)
[16:48:09] *** Joins: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt)
[16:49:32] <nedbat> petaflot: it's fine to pastebin the full file, we don't try to run it anyway
[16:50:20] *** Quits: vanessa (~vanessa@103.160.128.7) (Quit: WeeChat 3.4)
[16:50:30] *** Quits: Sco-Ross (~Sco-Ross3@2a02:c7f:d049:600:303a:9b89:27a0:1e9d) (Read error: Connection reset by peer)
[16:50:58] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:61c2:2519:9983:2238) (Quit: Leaving)
[16:51:40] <Andrew> I received some code, where print() is used as a logging utility (not even file=sys.stdout), sometimes functions have spaces before parens
[16:51:50] <Andrew> Is there a utility to make readable code under GNU/Linux?
[16:52:22] *** Quits: rsx (~dummy@ppp-188-174-158-205.dynamic.mnet-online.de) (Quit: rsx)
[16:52:24] <nedbat> Andrew: if you want an auto-formatter, "black" is well-loved
[16:52:25] <Wulf> Andrew: black or yapf
[16:52:25] <bjs> Andrew: there are utilities that can reformat the code (e.g. black),  but changing print() to print to stderr would be an actual change in what the program does and no automatic tool will change that
[16:52:39] * Andrew looks for an ebuild
[16:52:41] <bjs> so you'll have to do some manual re-formatting to use logging or printing to stderr for that
[16:52:42] <Andrew> bjs: Yeah, I know that
[16:52:53] <bjs> Andrew: black Python software, you can download it with `pip`
[16:53:12] <Andrew> I'm glad that I installed pip :D
[16:53:18] <lola> petaflot: ok I will add this header with your commit "# Copyright (C) 2022 petaflot <replicant@osuosl.org>
[16:53:18] <lola> " Cheers ounce again
[16:53:20] <bjs> Andrew: https://github.com/psf/black
[16:53:27] <Andrew> Also, is pylint a good one?
[16:53:39] <Andrew> I've heard of it checking python code before
[16:53:45] <nedbat> Andrew: pylint is a checker, not a formatter
[16:53:54] <bjs> Andrew: it checks but does not re-write for you
[16:53:56] *** Quits: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com) (Remote host closed the connection)
[16:54:06] <nedbat> and i don't think it will complain about things like spaces before parens
[16:54:15] <nedbat> but it will complain about lots of other things
[16:54:16] <bjs> nedbat: really?!
[16:54:30] <nedbat> bjs: idk, i've never fed it a monstrosity like that :)
[16:54:51] <bjs> nedbat: I assumed it would be a default thing when 2->3 happened
[16:54:57] <bjs> or did they really hard-code "print"
[16:55:26] <nedbat> bjs: are we talking about `print "hello"` or `print ("hello")` ?
[16:55:55] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:56:26] <Cheaterman> Bliblibli everybuddy I hope y'all doing goodie ^__^
[16:56:40] <bjs> nedbat: the latter, but apparently pylint doesn't say anything
[16:56:41] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 250 seconds)
[16:56:50] <petaflot> nedbat: http://dpaste.com/24F8CY5AH
[16:56:53] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[16:57:11] <Andrew> Didn't know that gentoo has so many audities ERROR: (Gentoo) Please run pip with the --user option to avoid breaking python-exec
[16:57:15] <Andrew> *oddities
[16:57:26] <Cheaterman> More questions about embedding Python: on Windows, my shared library fails to load when users don't install Python in the right location. While I know the "embeddable" Python release is made to address that type of issue, I cannot use it because my users will need pip down the line. Is there a way to make this work?
[16:57:45] <petaflot> lola: AFAIC you can leave it as "copyleft"
[16:57:45] <bjs> Andrew: tbh the --user option should be default, that said lots of people use venvs
[16:58:09] <bjs> Andrew: otherwise black's own dependencies might conflict with the dependencies of the libraries you want to use.  iirc that happens with things like tensorflow
[16:58:13] <nedbat> petaflot: icache is your dict of instances? it's a global.
[16:58:39] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[16:58:40] <Andrew> bjs: I'm just not used to that yet, I'm a bit old-school
[16:58:45] <nedbat> petaflot: or rcache.
[16:58:54] <Andrew> I expect my libraries to be installed system-wide with a normal package manager
[16:59:05] *** Joins: kosh (~kosh@user/kosh)
[16:59:15] <bjs> Andrew: that's great until two libraries have incompatible dependencies :(
[16:59:15] <petaflot> nedbat: yes it is (my dict of instances) and yes it is (global, _should_ be global CPU-wide!)
[16:59:24] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[16:59:29] <Andrew> bjs: It doesn't usually happen with arch or gentoo in my experience
[16:59:39] *** Joins: jug (~jug@user/jug)
[16:59:40] <Andrew> Does happen with debian a lot when you're installing from third-party repositories though
[16:59:41] <petaflot> nedbat: they're both similar in that regard, just not quite caching the same thing
[16:59:43] <nedbat> petaflot: it you want to write unit tests, that global will make your tests coupled together.
[17:00:06] <jinsun> oh I never realized pylint didn't complain about `print ("hello")`, first time seeing flake8 complaining more than pylint
[17:01:19] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:01:24] <petaflot> nedbat: I'm not sure where the problem is : if you have a global MyMainDoorIsOpen = True or False, since there is only one instance of MyMainDoor in the real world it makes sense to have its status global.
[17:01:40] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[17:01:51] <nedbat> petaflot: it's ok
[17:01:52] * Andrew suddenly notices that he can't use a pastebin without curl or netcat
[17:01:52] *** Joins: Arash_ (~Arash@104.245.146.61)
[17:01:58] *** Joins: d1cor (~diego@179.63.242.120)
[17:02:23] <grym> Andrew: python -c "import requests; ..." :D
[17:02:58] <Andrew> lol
[17:03:03] <Andrew> maybe import socket?
[17:03:10] <Andrew> let's be simple
[17:03:58] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[17:04:06] <Andrew> ... lol black is behaving weirdly with long prints
[17:04:10] <Andrew> https://lib.andrewyu.org/public/black-ugly-print.png
[17:04:15] <bjs> Andrew: weirdly?
[17:04:18] *** Quits: Gurkenglas (~Gurkengla@dslb-090-186-104-244.090.186.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[17:04:41] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[17:04:42] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[17:04:43] <bjs> Andrew: yeah black's standard is to break long function calls where each argument starts on a separate line
[17:04:58] <petaflot> nedbat: the final thing I'm doing here is storing data in a table of non-integer dimension... the "non-integer" part makes it somewhat difficult to explain.
[17:05:01] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[17:05:16] * Andrew feels that's normal in the Lisps, but weird in Haskell
[17:05:16] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[17:05:49] <bjs> Andrew: sometimes it ends up being a bit weird, but most of the time it helps improve readability by making it more uniform so you can easily see where arguments start/end, and by reducing textual diffs to the code (e.g. when using git) when adding/changing arguments
[17:05:55] <jinsun> it tries to keep lines short, but doesn't break long strings, so you get "weird" output like that when you have long strings
[17:06:13] *** Joins: mspe (~user@tilde.team/user/mspe)
[17:06:18] *** Joins: thiras (~thiras@user/thiras)
[17:06:23] *** Parts: cpunk (~mm@ip2505fdc6.dynamic.kabel-deutschland.de) ()
[17:06:27] <Andrew> bjs: I totally get that
[17:06:50] <Andrew> Because when I write functional code (even in python), I often get the whole last page is like full of ))))))
[17:06:59] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Client Quit)
[17:07:25] <bjs> Andrew: one of the main selling points of black is that it's not (very) configurable, so you don't have to worry about how to set it up to do what you want. You get what you get.  (Although it does let you set a preferred maximum line length, I think the default is short)
[17:07:28] <nedbat> petaflot: which lines are that?
[17:07:37] *** Quits: Arash_ (~Arash@104.245.146.61) (Read error: Connection reset by peer)
[17:07:47] <bjs> I usually up it to like 100/120 columns because I'm not using a PC from the 1950s :D
[17:08:11] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[17:08:28] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[17:09:01] *** Joins: apestoso (~apestoso@host-pool2-13-dynamic.airteknet.com)
[17:09:04] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[17:09:25] <petaflot> nedbat: most if it is in `def now(...)` ; but there's a database/network backend (justDoIt())
[17:09:27] *** Joins: v8IbXNTl (~v8IbXNTl@host-204-118-069-229.dhcp.fewpb.net)
[17:09:32] <bjs> Andrew: https://black.readthedocs.io/en/stable/the_black_code_style/current_style.html describes the style it imposes and gives some reasons why for each decision
[17:09:46] <Andrew> Thanks
[17:10:18] * Andrew lives in a region where trying to install 'vosk' forces you to read "Read timed out." for 10 times
[17:10:19] *** Joins: georgeisbot (~georgeisb@45.63.10.10)
[17:11:46] *** Joins: Vonter (~Vonter@user/vonter)
[17:12:26] *** Quits: dev_ (~dev@ppp-94-66-58-146.home.otenet.gr) (Ping timeout: 260 seconds)
[17:13:17] <petaflot> Andrew: rotate your screen 90Â° clockwise or antio-clockwise, then do some cross-eyed thing (or the opposite) : you'll only have to read it 5 times! (plus of course the 10 "ghost" occurences of that text which makes it a total of 15 but you can safely ignore these)
[17:13:54] *** Joins: esther (~esther@199.10.64.86)
[17:14:38] <Andrew> My screen is already vertical
[17:14:47] <Andrew> or portrait, whatever
[17:15:19] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[17:15:20] * Andrew collects a bunch of packages
[17:15:55] <Andrew> I love the way python handles versions
[17:16:17] <Andrew> Absolutely breaking changes come in new big version numbers, good new features come in small ones
[17:16:50] *** Joins: barry (~Thunderbi@222.129.39.144)
[17:16:55] <Andrew> It leaves a way for the developers to add in good stuff that causes incompatibility, and to fix breaking bugs
[17:17:14] *** barry is now known as Guest9677
[17:17:26] *** Joins: Vonter (~Vonter@user/vonter)
[17:17:33] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[17:17:37] <bjs> Andrew: yes, and hence why you can easily have incompatible sets of dependencies for different packages :P
[17:17:54] *** Quits: avaxar (~avaxar@36.72.214.225) (Remote host closed the connection)
[17:18:00] <Andrew> That's true, but I like that better than having bugs unfixed due to compatibility
[17:18:09] <Andrew> Because I like correctness[tm]
[17:18:21] <Andrew> (No unicode fonts here)
[17:19:19] *** Quits: b_jonas (~x@catv-176-63-3-122.catv.fixed.vodafone.hu) (Quit: leaving)
[17:19:45] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[17:20:14] <Andrew> I'd also love to see packages categorized nicely, just like how gentoo does things:  Maybe have nlp/nltk, networking/socket  (if that's a package lol), etc
[17:21:03] <grym> Andrew: "and who made you the boss of categories, i'd like to know?"
[17:21:34] <Andrew> Heh, it is hard to decide on which packages to put in which categories
[17:21:45] <grym> and where
[17:21:48] <Andrew> (And Python isn't organized, so anyway)
[17:21:56] <grym> (i have some public code; none of it's on pypi)
[17:22:02] * Andrew looks it up
[17:22:03] <petaflot> Andrew: http://geniusbrainteasers.com/archive/2017/04/28/stereogram-3848.png
[17:22:20] * Andrew cannot infer grym's website from per host
[17:22:22] <petaflot> ^^ rotate it anyway ;-)
[17:22:40] <grym> Andrew: you can't, indeed.  but for example, https://tildegit.org/grym/oxo/
[17:22:52] <Andrew> Oh, tilde
[17:22:58] <grym> some of it!
[17:23:17] <grym> i don't like to use my real name on IRC, but my actual github has some stuff as well
[17:23:32] * Andrew quit github
[17:23:57] <grym> all of which falls into this uncomfortable category, for tidy people, of "pip can install this, and it's not listed on pypi"
[17:24:32] <dsc_> ERROR: unknown command "can"
[17:24:37] <Andrew> lol
[17:25:41] <grym> incidentally, oxo is probably a handy tool for you if you need cli pastebins :D
[17:25:43] *** Joins: ic3blx_ (~ic3blx___@87.116.163.2)
[17:25:43] *** Quits: ic3blx_ (~ic3blx___@87.116.163.2) (Changing host)
[17:25:43] *** Joins: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740)
[17:25:57] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 250 seconds)
[17:25:57] <grym> but there's also https://github.com/supakeen/steck
[17:26:49] *** Joins: sydbarret (~anton@static-186-121-195-51.acelerate.net)
[17:26:57] *** Joins: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1)
[17:27:17] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:4f96:fe34:d5dc:f0a6) (Quit: pvergain)
[17:27:27] * Andrew already installed netcat
[17:28:14] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[17:29:57] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Remote host closed the connection)
[17:30:13] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[17:31:04] *** Joins: xheimlich (uid503602@id-503602.helmsley.irccloud.com)
[17:31:26] *** Joins: Babar (~Babar@2405:4803:ff4d:98d0:71db:a036:9fd6:14a5)
[17:32:17] *** Joins: plastico (~plastico@neomutt/plastico)
[17:32:37] *** Joins: Sco-Ross (~Sco-Ross3@2a02:c7f:d049:600:ed46:17b6:d1c7:531d)
[17:32:57] *** Joins: MinimotoMusashi (~MinimotoM@c-98-198-241-201.hsd1.tx.comcast.net)
[17:33:25] <petaflot> one thing that others me is that stuff like "$ pip install foo" then ">>> import Foo" is too frequent. somehow like attr/attrs above. this can be very confusing.
[17:33:32] <petaflot> ^others^bothers
[17:33:33] *** Joins: rmagyar (~rmagyar@20014C4C1256C200880116827AC48DF0.catv.pool.telekom.hu)
[17:33:41] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 245 seconds)
[17:33:50] <grym> petaflot: attrs doesn't do that any more!
[17:34:13] <grym> but yes it's bothersome that "pypi names" and "package name" can be totally different
[17:34:45] <petaflot> grym: tat was the thing with attr being the old version and attrs begin the new one. or something like similar. attr(s) is by far not the only example (although I've failed to make a list because I have better things to do)
[17:34:59] *** Quits: rmagyar (~rmagyar@20014C4C1256C200880116827AC48DF0.catv.pool.telekom.hu) (Client Quit)
[17:35:28] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[17:36:14] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[17:36:42] <petaflot> isn't there a PEP that says sth about this? just like the problem raised the other day that some packages make explicit modules for subpackages while others don't
[17:36:42] <MinimotoMusashi> You also have to python -m venv venv
[17:38:01] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[17:38:23] <petaflot> IMHO venvs are just a silly workaround to lousy version tracking/dependencying
[17:38:58] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[17:38:59] <grym> 5...4...3...2.. "you know, with NIX"
[17:39:13] <petaflot> uh=
[17:39:14] <petaflot> ?
[17:39:23] <grym> oh, that's usually when someone chimes in about how awesome nix ix
[17:39:25] <MinimotoMusashi> Agreed, it is nice to be able to freeze the envi and then give it to someone else.
[17:39:55] <petaflot> MinimotoMusashi: like docker...
[17:40:08] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[17:40:11] <petaflot> (with docker on a larger scale)
[17:40:27] <grym> see? :)
[17:40:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[17:41:02] *** Joins: johnjaye (~pi@173.209.65.233)
[17:41:13] <leitz> Good morning grym.
[17:41:16] <MinimotoMusashi> True, but with docker, it's a bit more complicated.
[17:41:33] *** Joins: ano (~ano@user/ano)
[17:41:34] <petaflot> so instead of really fixing problems, we put each problem in it's own box so people can work on the same "version" of the problem.
[17:41:34] *** Quits: someuser (~user@197.54.38.140) (Ping timeout: 250 seconds)
[17:41:56] <grym> petaflot: that's how versions work, hyes
[17:42:16] <MinimotoMusashi> IMO, deploying python applications is kinda pita.
[17:42:23] <petaflot> grym: by "version" I really mean "environment in which the problem is raised"
[17:42:26] *** Quits: mcon (~Thunderbi@host-82-61-91-236.retail.telecomitalia.it) (Ping timeout: 245 seconds)
[17:42:30] <bad_blue_bull> tried to search what is Docker, curious platforms list "IBM System/390, X64, ARM"
[17:42:47] <MinimotoMusashi> If the target doesn't have python installed.
[17:42:51] <lola> petaflot: "AFAIC you can leave it as "copyleft"" yeah no worries on that we are using GPLv2+
[17:42:52] <dsc_> yeah `pip install beautifulsoup4` has this issue (which ends up becoming `from bs4 import BeautifulSoup`
[17:43:06] <dsc_> also I can never spell beautiful correctly
[17:43:10] <leitz> petaflot, I agree with you. However, one big issue is mixing OS versions of python since most *nix versions have it installed, and the pip installed versions.
[17:43:18] <lola> so people can choose whatever copyleft license they wosh
[17:43:18] <lola> *wish
[17:43:19] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[17:43:19] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[17:43:19] *** Joins: JordiGH (~jordi@user/jordigh)
[17:43:27] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[17:43:29] <petaflot> .. then we end up with a bunch a boxed-problems (or problem-boxes) which are so unrelated that we don't see what the smallest common denominator is anymore
[17:43:34] <grym> petaflot: diamond deps are gonna get ya
[17:43:44] <grym> i don't think there's a way around that
[17:43:48] <leitz> My plan is to use docker for actual stuff, so things stay isolated and can be updated more easily.
[17:43:50] <petaflot> grym: what are these?
[17:43:51] <lola> this is for the whole script in git.replicant.us/infrastructure/wiki-migration-scripts not just you contrinution petaflot :)
[17:44:12] <sydbarret> anybody has used googleads api?
[17:44:31] <grym> "A diamond dependency conflict is a scenario where two or more libraries in a dependency tree consume a common library using versioned references, and none of the common library versions in those references contain all of the features that the consumers expect."
[17:44:44] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[17:44:47] <petaflot> grym: I suppose it has nothing to do with pokemons or fishing bait. but I may be mistaken
[17:45:00] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[17:45:52] <petaflot> grym: oh! that's actually one of the things' I'm trying to fix with my storage of non-integer-dimension
[17:46:07] <grym> petaflot: good luck
[17:46:48] <MinimotoMusashi> What are you guys doing atm? I'm playing with boost.python
[17:47:00] <leitz> FastAPI tutorial.
[17:47:04] <petaflot> grym: once it's somehow user-friendly to use I'm gonna ask people like you to use it :-]
[17:47:09] *** Joins: pwug (~pwug@user/pwug)
[17:47:19] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[17:48:07] <MinimotoMusashi> leitz: nice, that looks pretty fun. Taking the dive into Django soon.
[17:48:31] <MinimotoMusashi> I plan to take the dive*
[17:49:18] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[17:49:25] <leitz> MinimotoMusashi, give the FastAPI tutorial and intro page a read; you might save time.  :)
[17:50:18] <MinimotoMusashi> leitz: I will certainly check it out. I'm not a web/front end guy. So when I take the dive, it's gonna be a time sink learning it all.
[17:50:33] <leitz> IIUC, FastAPI can do API, and full web page stuff. Might want something like NGINX in the very front.
[17:51:09] <leitz> MinimotoMusashi, if you can pay a little for a class, I'm looking at:    https://testdriven.io/talkpython/
[17:51:16] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[17:52:12] *** Joins: nomic (~nomic@2a00:23c7:ec90:a501:fd84:e20e:591b:a89)
[17:52:30] <leitz> I'm not a web guy either, I still have to go to W3C for stuff. However, I hate explaining the same thing over and over, so I make web pages so people can go look up things themselves.  :)
[17:53:16] <MinimotoMusashi> Well organized, quality, to the point stuff, is actually really hard to find!
[17:53:21] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[17:53:42] <leitz> This looks pretty good, and if you click the links for the classes, there's an overview.
[17:54:32] <sveinse> Interesting. I'm revising an decade old uwsgi cgi script and have been toying with a lot of alternative options for modernization: uwsgi+cgi+ninja2, nginx+aiohttp+ninja2, nginx+aiohttp+react - and its not an easy choice
[17:55:27] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:55:46] *** Joins: revolve (~u0_a227@82-132-239-184.dab.02.net)
[17:56:19] <sveinse> *jinja2, not ninja XD
[17:56:33] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:ec86:7a91:dddd:e8c7)
[17:56:42] <leitz> Them sneaky ninjers are hiding everywhere!
[17:56:52] *** Joins: HaMsTeRs (~Thunderbi@210.3.213.4)
[17:57:05] <MinimotoMusashi> leitz: these courses look nice, like the push for ttd there.
[17:57:50] <leitz> MinimotoMusashi, after a cursory look, I'll probably do NGINX/FastAPI over Django, Flask, or even Bottle. From what I've read, which isn't really much, FastAPI is a next generation framework.
[17:57:54] <sveinse> Maybe FastAPI could work with react...
[17:58:05] <MinimotoMusashi> I'm thinking I'm going with nginx->uWSGI->Django, while using their template system to serve basic html/css.
[17:58:11] <leitz> My code got a lot better when I moved to TDD.
[17:58:15] <MinimotoMusashi> Looked into it, but haven't taken the dive yet, : D
[17:59:39] <sveinse> MinimotoMusashi: I'm considering nginx->uwsgi->jinja2 OR nginx->aiohttp->jinja2. I can't decide between the uwsgi vs aiohttp route
[17:59:44] <MinimotoMusashi> Where I work I get tasked with building the test framework for various stuff, as an after thought, I spend a lot of time refactoring code bases. But they won't listen, lol.
[18:00:02] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[18:00:38] <sveinse> MinimotoMusashi: Why would you chose uwsgi?
[18:01:29] *** Joins: Collaken (~flo@ip4d17fdd1.dynamic.kabel-deutschland.de)
[18:01:50] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:01:55] <leitz> MinimotoMusashi, Python comes with unittest, which is pretty easy to use:   https://github.com/LeamHall/CharacterBible/blob/master/test/test_character_builder.py
[18:02:04] *** Quits: apestoso (~apestoso@host-pool2-13-dynamic.airteknet.com) (Quit: Client closed)
[18:02:27] *** Quits: FreEm1nD (~FreEm1nD@mail.guarapari.store) (Quit: Leaving)
[18:02:43] <leitz> MinimotoMusashi, a lot of folks use pytest, which is also easy to use:    https://github.com/LeamHall/CharacterBible/blob/master/test/test_person_builder.py
[18:03:03] *** Joins: seekerm (uid209543@id-209543.tinside.irccloud.com)
[18:03:19] <leitz> MinimotoMusashi, tl;dr: theres no reason not to use TDD.  :P
[18:03:23] *** seekerm is now known as Guest211
[18:03:28] *** Quits: Guest211 (uid209543@id-209543.tinside.irccloud.com) (Client Quit)
[18:04:23] *** Joins: Guest211 (uid209543@id-209543.tinside.irccloud.com)
[18:04:26] *** Guest211 is now known as seekerm
[18:04:37] *** Quits: seekerm (uid209543@id-209543.tinside.irccloud.com) (Changing host)
[18:04:37] *** Joins: seekerm (uid209543@user/seekerm)
[18:04:45] <MinimotoMusashi> sveinse: through documentation on Django website!
[18:05:01] *** Quits: quosa (~jussiku@82-181-4-77.bb.dnainternet.fi) (Ping timeout: 240 seconds)
[18:05:12] <MinimotoMusashi> leitz: Thanks for the links, I use unittest, because it's included in the standard library.
[18:05:29] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:06:13] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[18:06:50] <MinimotoMusashi> I pair it with heavy selenium usage, for automated testing of our websites/systems.
[18:06:52] <leitz> MinimotoMusashi, good call. I was playing with Pytest, but often places I work are slow to allow third party softwre in. The latest NPM issue just makes it worse.
[18:07:00] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[18:07:01] *** Quits: aniketgm (~aniketgm@49.36.57.182) (Ping timeout: 245 seconds)
[18:07:21] *** kilopita is now known as Roey
[18:07:23] <leitz> I haven't used selenium. Not real webby.
[18:07:59] *** Joins: Vonter (~Vonter@user/vonter)
[18:08:11] <MinimotoMusashi> Me either, but gotta automate those clicks, lmao!
[18:09:01] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[18:11:46] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[18:11:54] *** Quits: FastJack_ (~fastjack@ip-078-094-022-014.um19.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[18:12:09] *** Joins: frostschutz (~frostschu@2a01:c23:808e:7b00:626e:3eec:f53:61ac)
[18:12:54] *** Quits: gbona_ (~gbona@180.251.177.103) (Read error: Connection reset by peer)
[18:13:08] *** Quits: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740) (Quit: Leaving)
[18:13:54] *** Joins: apestoso (~apestoso@38.25.135.157)
[18:14:36] *** Joins: luva (~luva@45.141.152.53)
[18:14:49] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[18:14:57] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[18:16:53] *** Quits: HaMsTeRs (~Thunderbi@210.3.213.4) (Remote host closed the connection)
[18:19:01] *** Joins: aniketgm (~aniketgm@49.36.57.182)
[18:19:29] *** Joins: ph88 (~ph88@2a02:8109:9e00:71d0:48e1:be0c:b23c:dea9)
[18:19:37] *** Joins: emad (~emad@156.214.92.21)
[18:19:59] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[18:21:05] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[18:23:10] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-90c0-942b-858d-62ce.res6.spectrum.com)
[18:23:46] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[18:25:10] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:25:17] *** Joins: georgios (~georgios@user/georgios)
[18:26:00] *** Joins: FastJack (~fastjack@ip-078-094-022-014.um19.pools.vodafone-ip.de)
[18:26:42] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[18:26:52] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Read error: Connection reset by peer)
[18:26:52] *** Joins: Vonter (~Vonter@user/vonter)
[18:27:42] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:28:38] *** Joins: Atque (~Atque@user/atque)
[18:29:33] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c)
[18:30:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[18:32:43] *** Joins: fikran (~fikran@user/fikran)
[18:33:34] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[18:35:03] *** Joins: ano (~ano@user/ano)
[18:35:37] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[18:37:14] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[18:37:50] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[18:40:30] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[18:40:45] *** Quits: v8IbXNTl (~v8IbXNTl@host-204-118-069-229.dhcp.fewpb.net) (Quit: v8IbXNTl)
[18:41:22] *** Joins: c4017w__ (~c4017@209.52.68.8)
[18:41:29] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[18:43:11] *** Quits: Duality (~robert@217.119.239.2) (Remote host closed the connection)
[18:44:08] *** Quits: kmh (~kmh@2a00:6020:5004:6800:f874:97da:ed2c:e94) (Quit: Leaving)
[18:44:24] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 250 seconds)
[18:44:48] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[18:47:39] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:48:27] *** Joins: zmt01 (~zmt00@user/zmt00)
[18:48:28] *** Joins: node1 (~hex@user/node1)
[18:48:31] *** Joins: sgen (~sgen@2607:fea8:7ce1:c8e0:297f:fa61:535f:aa91)
[18:48:31] <node1> Hi
[18:49:18] <node1> Can we say a dictionary is like a function? where domain is key and range is value?
[18:49:32] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:e4a6:e6ed:f40:6c23) (Ping timeout: 268 seconds)
[18:50:33] <mefistofeles> node1: it is a map, functions are maps as well, but there are some subtle differences
[18:51:28] <node1> If look into the property it's more bijective in nature.
[18:51:52] *** Joins: kmh (~kmh@2a00:6020:5004:6800:9e6c:25c0:d8a4:b335)
[18:51:56] <node1> mefistofeles, May i know what subtle difference are?
[18:51:57] <nedbat> node1: it is like a function that it can give you a new value when you give it a value
[18:52:37] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[18:54:19] *** Quits: kmh (~kmh@2a00:6020:5004:6800:9e6c:25c0:d8a4:b335) (Client Quit)
[18:56:11] *** Joins: ic3blx_ (~ic3blx___@87.116.178.2)
[18:56:11] *** Quits: ic3blx_ (~ic3blx___@87.116.178.2) (Changing host)
[18:56:11] *** Joins: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740)
[18:58:22] *** Joins: Deneb (~johnch@23.143.9.51.dyn.plus.net)
[18:58:25] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[18:59:10] *** Joins: Syana (~Syana@88.121.162.133)
[19:00:24] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:4525:4a27:b93b:734c)
[19:01:04] <flower_> a space in a dir name gives me headaches with Path
[19:01:31] <flower_> linux
[19:01:32] <Deneb> how does one "wait" for sewrial data? Usually one might send something then use .readline() or .read() in a loop to read the result, but but in this case I need to "poll" or just wait on the serial port until something appears then read the data into an byte array without stopping program execution. Not sure how to go about this.
[19:01:41] *** Joins: akk (~akk@75-161-95-245.albq.qwest.net)
[19:01:50] <flower_> and subprocess
[19:02:20] *** Parts: Syana (~Syana@88.121.162.133) ()
[19:02:39] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[19:02:56] *** Quits: aniketgm (~aniketgm@49.36.57.182) (Ping timeout: 256 seconds)
[19:03:02] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 250 seconds)
[19:03:09] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[19:04:46] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[19:04:57] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 240 seconds)
[19:05:30] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[19:05:34] *** Quits: moha (uid506645@id-506645.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[19:05:37] <nedbat> flower_: Path should be ok with it, but subprocess is probably using a shell, so you should avoid the shell there.
[19:05:50] <nedbat> flower_: can you show us the subprocess line you're using?
[19:06:17] *** Joins: sreve (~quassel@p54a71202.dip0.t-ipconnect.de)
[19:07:09] *** Joins: brabrax (~brabrax@user/brabrax)
[19:07:27] *** Joins: shadowdev9 (~shadowdev@2001:16a2:ffa6:9970:7c27:bc94:9cfe:3650)
[19:07:36] *** Joins: califax (~califax@user/califx)
[19:08:00] <flower_> nedbat, subprocess.Popen(["/usr/bin/xdg-open", note_file])
[19:08:16] <nedbat> flower_: add shell=False to that line
[19:08:54] <flower_> nedbat, isn't that the default?
[19:09:36] <nedbat> flower_: it looks that way, but i don't know why a space would matter.  try it.
[19:11:01] *** Quits: node1 (~hex@user/node1) (Quit: Leaving)
[19:11:13] *** Joins: CoolerX (~CoolerX@user/coolerx)
[19:12:12] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[19:13:01] <akk> The documentation says in several places that shell=false is the default (though I think it used to default to true some years ago?)
[19:13:29] *** Joins: kmh (~kmh@2a00:6020:5004:6800:4593:8555:d7a7:3d61)
[19:14:27] *** Quits: shadowdev9 (~shadowdev@2001:16a2:ffa6:9970:7c27:bc94:9cfe:3650) (Quit: Leaving)
[19:14:45] *** Quits: revolve (~u0_a227@82-132-239-184.dab.02.net) (Read error: Connection reset by peer)
[19:15:33] <The-Compiler> flower_: perhaps either xdg-open (unlikely) or whatever gets called by xdg-open handles it incorrectly? Try running   xdg-open ".../note_file"   (including the quotes) in a shell
[19:15:41] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:e4a6:e6ed:f40:6c23)
[19:15:48] *** Quits: Forsaken87 (~quassel@2a02:908:1866:e360:88b0:2032:220f:3f73) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:16:14] <flower_> The-Compiler, thx, let me first check my other code, maybe the error is there
[19:16:46] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[19:16:55] <Forty-Bot> is it possible to convert the argument of __getitem__ to a tuple all the time?
[19:17:09] <bjs> Forty-Bot: you mean inside your own `def __getitem__` ?
[19:17:13] <Forty-Bot> yes
[19:17:17] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[19:17:24] <bjs> Forty-Bot: you can check `if isinstance(item, tuple): ...` then
[19:17:34] <Forty-Bot> e.g. if I do foo[1] I get `arg = 1` but if I do foo[1, 2] I get `arg = (1, 2)`
[19:17:49] <akk> hah, I just created a tiny html file with spaces in the name and opened it with xdg-open ... and it opened in calibre's ebook viewer.
[19:17:52] <bjs> Forty-Bot: yeah, that's correct
[19:18:05] <The-Compiler> akk: not with subprocess, you might be thinking of something else, like os.system/.popen/.spawn
[19:18:10] <Forty-Bot> sure, but that of course breaks `foo[(1,)]`
[19:18:16] *** Quits: waynew (~wayne@user/waynew) (Quit: WeeChat 2.8)
[19:18:19] <Forty-Bot> (or any other tuple argument)
[19:18:29] <bjs> Forty-Bot: what do you mean "breaks"
[19:18:44] <bjs> Forty-Bot: foo[1,2] and foo[(1,2)] are the same thing
[19:19:05] *** Joins: subopt (~subopt@2603-8081-2302-459a-dd18-903b-ef49-a046.res6.spectrum.com)
[19:19:07] *** Joins: Forsaken87 (~quassel@2a02:908:1866:e360:88b0:2032:220f:3f73)
[19:19:38] <Forty-Bot> there is still a corner with `foo[(1,)]`
[19:19:57] <Forty-Bot> which will not be wrapped in a tuple
[19:20:03] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[19:20:09] <bjs> Forty-Bot: I'm not sure what you meant by "convert the argument to tuple all of the time" if not to... convert it to a tuple
[19:20:09] <akk> The-Compiler: not sure what that was in reference to -- the documentation, or xdg-open being confused about html?
[19:20:25] <bjs> Forty-Bot: I'm not sure what you mean (1,) != 1, and foo[1] != foo[(1,)]
[19:20:27] *** Joins: quosa (~jussiku@82-181-4-77.bb.dnainternet.fi)
[19:20:29] <Forty-Bot> I basically want the same interface as __call__(self, *args)
[19:21:03] <Forty-Bot> but the "magic" unwrapping of single values makes it difficult
[19:21:14] <bjs> Forty-Bot: what do you mean unwrapping of single values?
[19:21:31] <Forty-Bot> foo[x] is just x
[19:21:32] *** Joins: paul424 (~tom@ip-5-172-234-91.multi.internet.cyfrowypolsat.pl)
[19:21:39] <Forty-Bot> but foo[x, y] is (x, y)
[19:21:43] *** Quits: kmh (~kmh@2a00:6020:5004:6800:4593:8555:d7a7:3d61) (Read error: Connection reset by peer)
[19:21:53] <bjs> Forty-Bot: yeah, so what do you want foo[x], foo[(x,)] and foo[x,y] to give?
[19:21:56] *** Joins: kmh (~kmh@2a00:6020:5004:6800:4593:8555:d7a7:3d61)
[19:21:58] <bjs> it's very unclear what you are after
[19:22:21] <Forty-Bot> foo[x] should be (x,), foo[(x,)] should be ((x,),), foo[x, y] should be (x, y)
[19:22:40] <bjs> Forty-Bot: why is foo[(x,)] different to foo[x,y] both are passing a tuple?
[19:22:50] *** Quits: swinnenb (~swinnenb@user/swinnenb) (Ping timeout: 268 seconds)
[19:22:52] <Forty-Bot> and that's the problem
[19:22:52] <bjs> I mean if you really want, you can just if isinstance(item, tuple) then `if len(item) == 1: ...`
[19:23:03] <deniska> Forty-Bot: it's a comma which makes a tuple, a[1] has no comma, no tuple
[19:23:12] <Forty-Bot> right
[19:23:22] <Forty-Bot> but I'd rather not have that behavior...
[19:23:23] <bjs> Forty-Bot: but it's weird to want to double-wrap some of them up in a tuple
[19:23:50] <bjs> If the thing between the [] is a tuple getitem gets a tuple, if it's not a tuple then getitem doesn't get a tuple
[19:24:01] <bjs> if you want to convert the not-tuples to tuples then you can do that with an `isinstance` check
[19:24:08] <Forty-Bot> well, consider if foo was `def foo(*args)`
[19:24:30] <Forty-Bot> then foo(x) == (x,), foo((x,)) = ((x,),)
[19:24:38] *** Quits: Vonter (~Vonter@user/vonter) (Quit: WeeChat 3.4)
[19:24:54] *** Quits: wei2912 (~wei2912@138.75.71.147) (Remote host closed the connection)
[19:25:02] *** Quits: quosa (~jussiku@82-181-4-77.bb.dnainternet.fi) (Ping timeout: 240 seconds)
[19:25:09] *** Quits: resmo (~resmo@2a00:d420:9:8a00:315a:bbdd:70a1:108e) (Remote host closed the connection)
[19:25:14] <bjs> Forty-Bot: the foo[] syntax is not just a function call syntax. If you want a function call, make it a method
[19:25:28] *** Joins: resmo (~resmo@2a00:d420:9:8a00:3606:fd58:b9b8:cb11)
[19:25:31] <Forty-Bot> I'm (ab)using it for types
[19:25:32] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[19:25:34] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[19:25:38] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:25:38] <Forty-Bot> so I want it to look like a type hint
[19:25:42] <bjs> Forty-Bot: compare `x = 1` with `x = 1,` with `x = 1, 2` etc.  getitem isn't doing anything fancy here
[19:25:49] <bjs> it's just passing the value of the expression.
[19:25:57] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[19:26:09] <Forty-Bot> as opposed to a series of function calls
[19:26:37] *** Joins: the_lanetly_052_ (~the_lanet@185.30.90.57)
[19:27:10] <The-Compiler> akk: "though I think it used to default to true some years ago?"
[19:28:24] <akk> The-Compiler: ah, okay. Somehow I got the impression that I'd better pass shell=False when I first started using subprocess, but I guess that was wrong.
[19:28:26] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[19:28:57] *** Quits: the_lanetly_052 (~the_lanet@185.30.90.202) (Ping timeout: 240 seconds)
[19:30:29] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[19:30:41] <bjs> Forty-Bot: well you're going to be stuck because foo[1,2] and foo[(1,2)] are the same thing but foo(1,2) and foo((1,2)) are not
[19:30:48] <Forty-Bot> right
[19:30:51] <bjs> So you have to decide what you want to do.
[19:32:50] <flower_> The-Compiler, nedbat, I'm having a bad coding day. My fault excuse me.
[19:32:54] <flower_> thx
[19:33:32] *** Quits: d1cor (~diego@179.63.242.120) (Ping timeout: 256 seconds)
[19:34:04] *** Joins: Vonter (~Vonter@user/vonter)
[19:34:06] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[19:34:28] <nedbat> flower_: we've all been there!
[19:34:49] <The-Compiler> akk: IMHO you should always explicitly pass check=False (or, ideally, almost always =True), though. Wish check=True was the default...
[19:35:41] <Deneb> anyone have an aswer to my question about waiting for serial data to arrive please? I have tried waiting in a loop for in_waiting() > 0 but this does not seem to work and just carries on execturing the next statement
[19:36:16] <bjs> Deneb: what is in_waiting() ?
[19:36:37] <Deneb> bjs: meant ser.in_waiting()
[19:36:37] <The-Compiler> Deneb: what are you using to read the serial data?
[19:36:54] <Deneb> py-serial
[19:37:06] <The-Compiler> Deneb: just .read() then, without a timeout
[19:37:08] <Deneb> import serial
[19:37:17] <The-Compiler> Deneb: https://pyserial.readthedocs.io/en/latest/pyserial_api.html#serial.Serial.read - "With no timeout it will block until the requested number of bytes is read."
[19:37:46] <coc0nut> does 'if variable == "1" or "01"' do any difference from 'if variable == "1"' im curious because im making a calculator with different math operations. when i used "1" or "01" all operations turned additions instead of multiplication, division and so on
[19:38:10] <bjs> coc0nut: `if variable == "1" or "01"` is the same as `if variable == ("1" or "01")` which is the same as `if variable == "1"` yes
[19:38:16] <bjs> maybe you meant `if variable == "1" or variable == "01"` ?
[19:38:24] <coc0nut> okok
[19:38:29] <coc0nut> thx :D
[19:38:32] *** Quits: xheimlich (uid503602@id-503602.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[19:38:49] <Deneb> The-Compiler: thanks, but I don't know the expected number of bytes. The program ust has to si waiting until a burst of data appears. The burst in not terminated (i.e it is binary data not CRLF terminated text). When something appears it has to capture it and pass it to the program for processing. Will give read(0 a go though.
[19:38:57] <Deneb> *read()
[19:39:21] <The-Compiler> Deneb: huh, and your burst of data has no kind of terminator?
[19:39:54] <The-Compiler> Deneb: usually even binary protocols have either a size somewhere, or a marker marking the end of data, it's very unusual to have to guess based on bursts
[19:40:10] <Deneb> The-Compiler: unfortunately not
[19:40:27] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[19:40:56] <The-Compiler> Deneb: then you would probably need to have a first read() without timeout to know when something interesting starts appearing, and then call read() again *with* a timeout until you run into a timeout, or something
[19:41:39] *** Joins: moog (~moog@107.126.53.129)
[19:41:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[19:42:05] *** Quits: Collaken (~flo@ip4d17fdd1.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[19:42:07] *** Joins: quosa (~jussiku@82-181-4-77.bb.dnainternet.fi)
[19:42:18] <Deneb> The-Compiler: interesting thought.
[19:42:52] *** Joins: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com)
[19:44:48] *** Joins: pycode1 (~pycode3@2001:b07:5d28:551:9606:537d:7e23:f09f)
[19:45:09] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[19:45:15] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[19:46:34] *** Quits: portalrat (~portalrat@user/portalrat) (Remote host closed the connection)
[19:46:51] *** Joins: Keda87 (~keda87@182.2.169.16)
[19:47:13] *** Quits: quosa (~jussiku@82-181-4-77.bb.dnainternet.fi) (Ping timeout: 250 seconds)
[19:47:21] <Deneb> The-Compiler: the data length does follow a pattern in that there is a pre-able, a data header, a data block of 512 bytes plus checksum all of which are of a predicatble size and combine to fdorm a dataset, but the burst can include multiple datasets which makes it difficult to predict the total length of the data
[19:47:23] *** Joins: gasbag (~gasbag@024-216-149-125.res.spectrum.com)
[19:47:46] *** Parts: Keda87 (~keda87@182.2.169.16) ()
[19:48:04] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[19:48:33] *** Joins: portalrat (~portalrat@user/portalrat)
[19:49:23] *** Joins: fef (~thedawn@user/thedawn)
[19:51:08] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f444:a000:319a:8ff4:9a9c:6a36)
[19:52:00] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:52:18] <The-Compiler> Deneb: that sounds like a much better situation already, because you can wait for the preamble and then read the fixed 600whatever bytes in one piece, and then just wait for the next preamble
[19:53:18] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:ec86:7a91:dddd:e8c7) (Ping timeout: 250 seconds)
[19:55:40] <Deneb> The-Compiler: that's a good point. The first read would still have to be without timeout I guess because I don't know when it is going to arrive.
[19:56:25] <Deneb> The-Compiler: I am just testing your first idea though....
[19:58:09] *** Joins: zmt01 (~zmt00@user/zmt00)
[19:58:21] <The-Compiler> Deneb: yes, but that makes sense I think - at that point you wait for the other side to start talking, while after the preamble, you know how many bytes you should still get, and if something stops in the middle of that, then you know something went wrong.
[19:58:57] *** Quits: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com) (Ping timeout: 240 seconds)
[19:59:50] *** Quits: toxictrash (~toxictras@host-91-237-158-49.anfa.net.pl) (Ping timeout: 268 seconds)
[20:00:21] <Deneb> the script ran straight past the first ser.read(). Does timeout need to be set before one opens the port?
[20:01:42] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[20:01:49] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[20:02:05] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[20:02:50] *** Quits: moog (~moog@107.126.53.129) (Ping timeout: 250 seconds)
[20:03:10] *** Joins: panella32 (~panella32@45.67.97.49)
[20:03:46] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[20:03:47] *** Joins: dbbr (~dbbr___@2804:5f80:70a0:3700:5441:32d:c49d:6395)
[20:03:54] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[20:05:57] *** Quits: Allegretto (~allegrett@188-143-58-139.pool.digikabel.hu) (Ping timeout: 240 seconds)
[20:06:50] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[20:07:07] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[20:07:19] *** Quits: ultera (~ultera@ec2-18-118-193-22.us-east-2.compute.amazonaws.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[20:07:45] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[20:08:42] *** Joins: ultera (~ultera@ec2-18-118-193-22.us-east-2.compute.amazonaws.com)
[20:08:54] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[20:10:06] *** Joins: toxictrash (~toxictras@host-91-237-158-49.anfa.net.pl)
[20:10:35] *** Quits: Sco-Ross (~Sco-Ross3@2a02:c7f:d049:600:ed46:17b6:d1c7:531d) (Quit: Leaving)
[20:10:36] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[20:11:16] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[20:11:35] *** Joins: henbruas (~henbruas@ti0003a400-4203.bb.online.no)
[20:12:16] *** Joins: han-solo (~han-solo@103.104.47.42)
[20:12:16] *** Quits: han-solo (~han-solo@103.104.47.42) (Changing host)
[20:12:16] *** Joins: han-solo (~han-solo@user/han-solo)
[20:12:59] *** Joins: thelounge94967 (696e30ca@67.205.143.82)
[20:13:17] *** Joins: Gurkenglas (~Gurkengla@dslb-090-186-104-244.090.186.pools.vodafone-ip.de)
[20:14:38] *** Quits: novapy (~chronos@c-68-62-193-246.hsd1.fl.comcast.net) (Ping timeout: 268 seconds)
[20:14:54] *** Quits: thelounge94967 (696e30ca@67.205.143.82) (Client Quit)
[20:14:54] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[20:17:10] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[20:17:41] <The-Compiler> Deneb: you should be able to set it individually for every read
[20:18:08] <The-Compiler> Deneb: what do you get back from the .read() call?
[20:19:03] *** Joins: fef (~thedawn@user/thedawn)
[20:19:08] *** Quits: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740) (Remote host closed the connection)
[20:19:18] *** Quits: Guest9677 (~Thunderbi@222.129.39.144) (Ping timeout: 250 seconds)
[20:19:30] *** Joins: Allegretto (~allegrett@178-164-171-16.pool.digikabel.hu)
[20:21:11] *** Joins: aslicedbanjo (~aslicedba@host86-178-157-241.range86-178.btcentralplus.com)
[20:21:26] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[20:21:26] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 260 seconds)
[20:24:26] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:24:42] *** Joins: terrycloth (~para@66.205.193.96)
[20:24:42] *** Joins: rattle_me_bones (~herpderp@user/rattle-me-bones/x-8906882)
[20:24:47] <terrycloth> What up snakes
[20:24:59] <grym> ssss
[20:25:08] <terrycloth> gonna do a crazy thing today
[20:25:16] <terrycloth> gotta brute force a thing
[20:26:10] <grym> how crazy that is depends on the thing
[20:26:22] *** Joins: dev_ (~dev@2a02:587:3240:a000:bcb1:2c3b:1e4d:712c)
[20:26:51] <terrycloth> grym: so it's a serial port i gotta brute the parameters of
[20:26:52] <terrycloth> rs232
[20:27:03] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:27:17] <terrycloth> now i gotta find out if pyserial always sends the STX/ETX
[20:27:22] *** Quits: LiftLeft (~LiftLeft@fixed-138-186-31-170.totalplay.net) (Ping timeout: 256 seconds)
[20:30:34] *** Quits: dev_ (~dev@2a02:587:3240:a000:bcb1:2c3b:1e4d:712c) (Ping timeout: 250 seconds)
[20:30:35] *** Joins: crashrep (~crashrep@user/crashrep)
[20:30:40] *** Quits: tomasfarias (~tomasfari@user/tomasfarias) (Ping timeout: 268 seconds)
[20:31:04] *** Joins: vitali64 (~vitali64@xdsl-31-164-198-163.adslplus.ch)
[20:31:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[20:31:34] *** Joins: Elodin (~weechat@user/elodin)
[20:31:47] <fbiagent> I recently read about a relatively new ORM with Python written by the SQLAlchemy guy that combines attrs/dataclasses with SQLAlchemy anyone know the one I'm thinking of? I can't recall the name.
[20:32:07] <grym> fbiagent: it's annoyingly named :)
[20:32:18] <fbiagent> grym, you know the one?! What's it called?
[20:32:22] <grym> fbiagent: https://sqlmodel.tiangolo.com/
[20:32:24] <terrycloth> okay i've got a huge question that's gonna blow everyone's mind
[20:32:28] <fbiagent> that's the one!
[20:32:33] <grym> terrycloth: itertools.productx
[20:32:35] <grym> next!
[20:32:38] <fbiagent> thank you grym
[20:32:47] <grym> fbiagent: cheers
[20:32:48] <terrycloth> pyserial lets you open a port with something like serial.Serial(port=<var>)...but what if i already have port defined with the port I want
[20:32:55] *** Joins: ryu` (~ryusaku@user/ryu/x-3206151)
[20:33:00] <terrycloth> can i do serial.Serial(port=port) and python knows?
[20:33:12] <grym> terrycloth: you can try it, and see :)
[20:33:20] *** Joins: Alexer (~alexer@alexer.net)
[20:33:20] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[20:33:21] <terrycloth> grym: lmao, were you gonna have me make the product of all of these things instead of the nightmare for loop i've got
[20:33:32] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[20:33:33] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[20:33:39] <grym> terrycloth: maaaaybe. you did say brute force, after all
[20:33:39] <terrycloth> grym: i can't try it and see here because the other side is adversarial; it won't gimme any feedback
[20:34:09] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[20:34:12] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[20:35:00] <grym> so if you have  a bunch of lists/generators/tuples/... of parameter values, you can itertools.product() and try 'em all
[20:35:03] <terrycloth> !paste
[20:35:09] <grym> terrycloth:  /topic
[20:35:23] <han-solo> terrycloth: https://bpa.st/+python
[20:35:30] <terrycloth> https://bpa.st/K4LQ like this
[20:35:44] *** Quits: vitali64 (~vitali64@xdsl-31-164-198-163.adslplus.ch) (Changing host)
[20:35:44] *** Joins: vitali64 (~vitali64@user/vitali64)
[20:35:50] <terrycloth> inb4 me doing the whitespace like this is gonna fuck it up somehow
[20:36:18] <grym> for (baudrate, bytesize, parity, stopbit, rtscts) in itertools.product(baudrates, bytesizes, ...
[20:36:26] <terrycloth> oh shiiiiIIIIiiIIIIIT
[20:36:30] <terrycloth> that's kinda nice
[20:36:34] <Deneb> The-Compiler: just going to test what I get back, one moment
[20:36:36] <grym> it's a lot nicer
[20:37:04] <terrycloth> how do i break up that line
[20:37:23] <terrycloth> can i put "in" on the next line
[20:38:08] *** Quits: the_lanetly_052_ (~the_lanet@185.30.90.57) (Ping timeout: 256 seconds)
[20:38:17] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 240 seconds)
[20:38:28] <nedbat> terrycloth: choices = itertools.product(baudrates, bytesizes, ...)  \n   for (baudrate, bytesite, ...) in choices:
[20:38:51] <jim> hi, in making a small demonstration that objects are identified by their addresses (that printing the object in __init__() and a non-special method, I printed out objects (which also printed their addresses) inside and outside those methods, and since one object was involved, the address was the same...
[20:38:55] *** Joins: fubbe (~bubbe@151.41.185.44)
[20:39:14] <terrycloth> sup nedbat
[20:39:24] *** Joins: barry1 (~Thunderbi@222.129.39.144)
[20:39:27] <terrycloth> what does .product return?
[20:39:29] <Deneb> The-Compiler: just returns a zero
[20:39:32] <jim> a question came out of that, what's the address space, and what are the sizes of addresses on linux/
[20:39:52] <grym> terrycloth: a tuple
[20:39:53] <jim> ?
[20:40:06] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[20:40:14] <han-solo> https://black.vercel.app
[20:40:53] *** Quits: fubbe (~bubbe@151.41.185.44) (Client Quit)
[20:40:56] <han-solo> you can try it online if you like, to see how it would make it pretty
[20:41:02] *** Joins: korg815 (~korg815@user/korg815)
[20:41:07] *** Quits: nomic (~nomic@2a00:23c7:ec90:a501:fd84:e20e:591b:a89) (Quit: Leaving)
[20:41:18] *** Quits: korg815 (~korg815@user/korg815) (Client Quit)
[20:41:23] <han-solo> not sure, if pretty is the exact word
[20:41:33] *** Joins: korg815 (~korg815@user/korg815)
[20:42:04] *** Joins: fikran (~fikran@user/fikran)
[20:42:19] <terrycloth> i think i have it boys
[20:42:20] *** Joins: ic3blx_ (~ic3blx___@87.116.178.2)
[20:42:20] *** Quits: ic3blx_ (~ic3blx___@87.116.178.2) (Changing host)
[20:42:20] *** Joins: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740)
[20:42:22] *** Joins: c4017w__ (~c4017@209.52.68.8)
[20:42:36] *** Joins: bloody (~bloody@user/bloody)
[20:43:34] *** Quits: barry1 (~Thunderbi@222.129.39.144) (Ping timeout: 250 seconds)
[20:43:51] *** Joins: nomic (~nomic@2a00:23c7:ec90:a501:59b3:de52:25e7:b808)
[20:44:08] <jmd> terrycloth: Some people here are girls.
[20:44:32] <nedbat> terrycloth: .product returns an iterable object
[20:44:46] *** Joins: greedom (~greedom@p200300de673b0c00f10f3ac32645d471.dip0.t-ipconnect.de)
[20:45:15] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[20:45:43] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[20:47:04] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Client Quit)
[20:47:13] *** Joins: pkapp_ (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[20:47:13] *** Joins: ano (~ano@user/ano)
[20:47:59] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:2c3b:c5fa:9a9e:d9f2) (Read error: Connection reset by peer)
[20:48:57] *** Quits: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740) (Quit: Leaving)
[20:49:03] <Deneb> is testing for byte == b"" the same as byte == 0x00 ?
[20:49:20] <terrycloth> jmd: boys are girls
[20:49:26] <terrycloth> prove me wrong
[20:49:32] <terrycloth> gender is just as stupid as race
[20:49:43] <grym> Deneb: try it and ses
[20:49:49] <grym> see* if those two things are equal
[20:49:58] *** Quits: vitali64 (~vitali64@user/vitali64) (Quit: Lost terminal)
[20:50:12] *** Joins: Elodin (~weechat@user/elodin)
[20:50:50] *** Quits: Strom (strom@fedora/strom) ()
[20:51:22] <Deneb> grym: understood.
[20:51:45] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[20:51:52] <grym> (and no, NULL is not the same as nothing)
[20:52:02] <grym> it's something! that denotes 'null' :)
[20:52:17] <grym> something something gateless gate something
[20:52:27] * mefistofeles brain hurts
[20:52:35] *** Quits: seekerm (uid209543@user/seekerm) (Quit: Connection closed for inactivity)
[20:52:47] *** Joins: vitali64 (~vitali64@xdsl-31-164-198-163.adslplus.ch)
[20:52:55] *** Joins: Strom (strom@fedora/strom)
[20:53:00] <ChrisWarrick> (unless youâre using or*cle database)
[20:53:08] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[20:53:09] *** Quits: vitali64 (~vitali64@xdsl-31-164-198-163.adslplus.ch) (Client Quit)
[20:53:13] <terrycloth> i'm so mad
[20:53:19] <terrycloth> first run of the script BROKEN
[20:53:44] *** Joins: vitali64 (~vitali64@xdsl-31-164-198-163.adslplus.ch)
[20:53:58] *** Quits: vitali64 (~vitali64@xdsl-31-164-198-163.adslplus.ch) (Client Quit)
[20:53:59] <grym> ChrisWarrick: part of why i'm perennially salty about mysql is that i got bit hard by mb4 the first time out of the box :(
[20:54:15] *** Joins: dreamon (~dreamon@pd9503a7e.dip0.t-ipconnect.de)
[20:54:26] *** Joins: vitali64 (~vitali64@xdsl-31-164-198-163.adslplus.ch)
[20:54:28] *** Quits: vitali64 (~vitali64@xdsl-31-164-198-163.adslplus.ch) (Client Quit)
[20:54:39] <grym> mefistofeles: it's like asking to make unbound variables on purpose
[20:54:46] <jim> would anyone have a response for my address-space-for-objects question?
[20:55:55] <sveinse> jim: addresses?
[20:56:03] <terrycloth> ah shiiiieetiet
[20:56:13] <nedbat> jim: Linux doesn't specify the size of memory.
[20:56:16] <terrycloth> how do i format 0x02 into non-utf characters/bytes to send over this thing
[20:56:24] <terrycloth> i need to send ascii STX, i think
[20:56:53] *** Joins: jjasghar1 (~jjasghar@idlerpg/player/jjasghar)
[20:57:08] <nedbat> terrycloth: if you think gender is stupid, then don't introduce it by addressing us as boys :)
[20:57:33] <terrycloth> that's the point; i didn't introduce it, as zoomers have transcended gender using it
[20:57:37] *** Quits: jjasghar (~jjasghar@idlerpg/player/jjasghar) (Ping timeout: 240 seconds)
[20:57:37] *** jjasghar1 is now known as jjasghar
[20:57:47] <nedbat> terrycloth: i don't know why you said "boys".
[20:57:50] <terrycloth> only the ossified oldies like yourself are attached to those words in those contexts, of course
[20:57:57] *** Joins: vitali64 (~vitali64@xdsl-31-164-198-163.adslplus.ch)
[20:57:57] <terrycloth> ignorance isn't a shield, nedbat ;P
[20:57:58] <sveinse> terrycloth: please don't, not in here
[20:58:03] *** Quits: vitali64 (~vitali64@xdsl-31-164-198-163.adslplus.ch) (Changing host)
[20:58:03] *** Joins: vitali64 (~vitali64@user/vitali64)
[20:58:05] <nedbat> terrycloth: to send STX, you need a bytestring: b"\x02"
[20:58:20] <ChrisWarrick> grym: Iâm referring to the expensive or*cle database, not mysql (which has crimes against unicode, sure)
[20:58:24] <nedbat> terrycloth: ossified?  You aren't endearing yourself to us
[20:58:27] <terrycloth> sveinse, dude, did i start this, or did someone else respond and make it a whole thing? consider telling them to don't
[20:58:59] <dsc_> utf8mb4_uncide_ci_this_time_for_real
[20:59:08] <dsc_> utf8mb4_unicode_ci_this_time_for_real*
[20:59:21] <nedbat> sveinse: i think we should drop it with terrycloth. She doesn't seem interested in pursuing it.
[20:59:39] *** Quits: Echoz (~chris@user/echoz) (Ping timeout: 268 seconds)
[20:59:59] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[21:00:05] <ChrisWarrick> grym: or*cleâs text type is `varchar2` (where did the first varchar go?), and it does not differentiate NULL and empty strings
[21:00:15] <terrycloth> aye, especially when i'm at the client's
[21:00:30] <terrycloth> getting hella sad though because the second run didn't work either
[21:00:43] <nedbat> terrycloth: to get help, pastebin the program and the problem.
[21:00:46] <terrycloth> what's the ascii newline
[21:00:52] <nedbat> \n
[21:02:02] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[21:02:10] <fbiagent> grym (or anyone else), I've got an existing database with a timestamp (numeric) column but sqlmodel wants it to be a string. Any ideas on how to get it to be treated as a UTC timestamp?
[21:02:23] <jim> nedbat, so then, would it be the case that the size of the pointer would expand and contract depending on some other factor? what I found, was that addresses seem to be specified as 48 bits
[21:03:16] <sveinse> jim: Addresses on a 64-bit OS is 64-bits
[21:03:27] <ChrisWarrick> jim: the addresses a user-space program sees are not necessarily related to real RAM installed on the system
[21:03:43] *** Parts: terrycloth (~para@66.205.193.96) (Leaving)
[21:03:44] *** Joins: terrycloth (~para@66.205.193.96)
[21:03:50] *** Joins: awmv (~awmv@mob-194-230-147-185.cgn.sunrise.net)
[21:04:10] <sveinse> ChrisWarrick: They are almost never, as it is a security measure in most modern OS
[21:04:19] <nedbat> jim: I'm curious to know more about what you are doing with the addresses
[21:04:20] *** Joins: Hackerpcs (~user@user/hackerpcs)
[21:04:24] <terrycloth> https://bpa.st/SHEA this is the script, nedbat, and it's currently erroring out on having some specific parameters, so i don't think i'm getting all of my possible params
[21:04:31] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 245 seconds)
[21:04:33] <terrycloth> but the goal is to mimic a scanner
[21:04:39] <terrycloth> and to send the right data
[21:04:51] <terrycloth> maybe i should read the data from another scanner programmed a specific way to see what data i need to send
[21:05:26] <terrycloth> serial.serialutil.SerialException: Cannot configure port, something went wrong. Original message: OSError(22, 'The parameter is incorrect.', None, 87) kinda interesting that this is happening
[21:05:33] <terrycloth> might have to boot into loonix after all
[21:05:38] *** Joins: emf_ (~emf@2620:10d:c090:400::5:29d7)
[21:06:00] *** Quits: andreasbuhr (~quassel@p548dde66.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:06:18] <terrycloth> thinking of just opening the serial connection once and then reconfiguring it
[21:06:22] <terrycloth> might be better, but idk
[21:06:42] <terrycloth> https://stackoverflow.com/questions/37029441/python-serial-module-failing-to-configure-port lmfao someone else was doing this
[21:06:44] <jim> nedbat, just printing them (http://github.com/jwlynch/oop-example.git)
[21:06:58] <jim> look at two.py
[21:07:08] <sveinse> terrycloth: I would assume not all permutations of all parameters are valid, so you'll need to except the errors that doesn't work
[21:07:12] <terrycloth> maybe my serial adapter guy is broken
[21:07:15] <terrycloth> yeah, sveinse
[21:07:49] <grym> terrycloth: you could even add logic to never try that parameter again once you've seen it and know it's bad
[21:07:50] *** Quits: bytehackr (~Sandipan@43.252.250.126) (Ping timeout: 250 seconds)
[21:07:54] <ChrisWarrick> jim: you should consider those memory addresses as opaque random-ish numbers.
[21:07:56] <grym> (if you know what parameter it is)
[21:07:57] *** Joins: Elodin (~weechat@user/elodin)
[21:08:10] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 256 seconds)
[21:08:33] <grym> terrycloth: which is going to improve your life from brute force to dynamic programming; a huge and glorious victory
[21:08:38] <terrycloth> lmao
[21:08:45] <grym> (no, really, it's a lot better)
[21:08:50] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[21:08:57] *** Quits: emf (~emf@2601:602:9400:8f0:435:b386:5ad4:6eb2) (Ping timeout: 240 seconds)
[21:09:06] <terrycloth> well, it's only like 200 enter keys right now
[21:09:16] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[21:09:45] <sveinse> terrycloth: You have 240 permutations in this setup
[21:10:04] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[21:10:37] *** Quits: gasbag (~gasbag@024-216-149-125.res.spectrum.com) (Quit: Leaving)
[21:10:53] *** Joins: quosa (~jussiku@82-181-4-77.bb.dnainternet.fi)
[21:11:05] <terrycloth> sveinse, correct, i was just ballparking
[21:11:14] <nedbat> jim: when you print the objects, they include the memory address, but why ask about how big they can get?
[21:11:15] *** Quits: CoolerX (~CoolerX@user/coolerx) (Quit: Leaving)
[21:11:29] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Quit: Textual IRC Client: www.textualapp.com)
[21:11:44] *** Quits: korg815 (~korg815@user/korg815) (Ping timeout: 250 seconds)
[21:11:57] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[21:12:23] <eN_Joy> I have multiple virtual environments in my system, to switch between them, what I do now is first type `deacvtivate`, then (navigate to another directory) `. .venv/bin/activate`, is there a quick way?
[21:12:27] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[21:12:44] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:f8f2:a6ee:f8f:27a0)
[21:13:22] <grym> eN_Joy: direnv.net can make things easier
[21:13:29] <grym> there are a few other autoactivate solutions
[21:13:45] <grym> but the reading at https://github.com/direnv/direnv/wiki/Python  is pretty solid
[21:14:17] <jim> nedbat, I think I'm trying to figure various settings for comparing addresses for equality, for example would there ever be a situation where one address is in more bits than another?
[21:14:23] <eN_Joy> grym: gotcha... researching...
[21:15:00] *** Joins: Jaro2k (~Jaro2k@host-185-78-133-160.jmdi.pl)
[21:15:12] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[21:15:20] <ChrisWarrick> by the way, are there any solutions in this space for powershell?
[21:15:31] <grym> hmm.  i have no idea
[21:15:33] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[21:15:37] *** Quits: quosa (~jussiku@82-181-4-77.bb.dnainternet.fi) (Ping timeout: 250 seconds)
[21:16:02] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[21:16:30] <grym> ChrisWarrick: i geuss https://github.com/takekazuomi/posh-direnv
[21:16:40] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Quit: hyskaru)
[21:16:41] <grym> which i found by way of https://github.com/direnv/direnv/issues/124, which looks super dead
[21:16:58] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f444:a000:319a:8ff4:9a9c:6a36) (Ping timeout: 260 seconds)
[21:17:08] *** Quits: Jaro2k (~Jaro2k@host-185-78-133-160.jmdi.pl) (Quit: Leaving.)
[21:17:16] <nedbat> jim: no, addresses will all be the same number of bits in one process (one machine)
[21:17:46] <nedbat> jim: but the id is just an int anyway.  How many bits are in 3? 64 bits? could be.
[21:18:45] *** Joins: hanzo (uid532183@user/hanzo)
[21:18:52] *** Quits: rattle_me_bones (~herpderp@user/rattle-me-bones/x-8906882) (Quit: WeeChat 3.4)
[21:19:34] <jim> nedbat, so then, in the display of an object address, any zeros on the left side of the address are surpressed?
[21:19:34] *** pflanze_ is now known as pflanze
[21:20:03] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[21:20:15] <nedbat> jim: i guess so
[21:21:10] <nedbat> the one i just tried had 9 hex digits
[21:21:32] *** Quits: bluedust (~bluedust@185.248.85.32) (Remote host closed the connection)
[21:22:02] *** Joins: miaooo (~miaooo@2409:8a1e:14e4:1fb0:59fa:74e9:12a:719f)
[21:22:03] *** Joins: bluedust (~bluedust@185.248.85.32)
[21:23:05] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 268 seconds)
[21:23:25] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[21:23:40] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[21:23:57] <jim> nedbat, ok, thanks :)
[21:24:01] *** Quits: MinimotoMusashi (~MinimotoM@c-98-198-241-201.hsd1.tx.comcast.net) (Quit: Lost terminal)
[21:24:03] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:25:07] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:25:19] *** Joins: moog (~moog@107.126.53.88)
[21:26:50] *** Joins: Elodin (~weechat@user/elodin)
[21:26:50] *** Joins: Linux77 (~LinuMage@186.233.182.173)
[21:26:52] *** Quits: bluedust (~bluedust@185.248.85.32) (Ping timeout: 256 seconds)
[21:27:42] *** Quits: vitali64 (~vitali64@user/vitali64) (Quit: Lost terminal)
[21:28:20] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[21:28:28] *** Joins: d00gy (~tonberry@user/d00gy)
[21:28:36] *** Joins: vitali64 (~vitali64@xdsl-31-164-198-163.adslplus.ch)
[21:28:36] *** Quits: vitali64 (~vitali64@xdsl-31-164-198-163.adslplus.ch) (Changing host)
[21:28:36] *** Joins: vitali64 (~vitali64@user/vitali64)
[21:29:27] *** Joins: seekerm (uid209543@user/seekerm)
[21:29:30] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[21:30:14] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:30:19] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[21:30:26] *** Quits: sydbarret (~anton@static-186-121-195-51.acelerate.net) (Quit: Going offline, see ya! (www.adiirc.com))
[21:30:42] *** Joins: gossie (~gossie@2001:1c02:11e:c700:4a28:456f:cfe0:5c8e)
[21:31:05] *** Joins: sydbarret (~anton@static-186-121-195-51.acelerate.net)
[21:31:43] *** Joins: rmagyar (~rmagyar@54038678.catv.pool.telekom.hu)
[21:33:48] *** Quits: apestoso (~apestoso@38.25.135.157) (Quit: Leaving)
[21:34:16] *** Quits: moog (~moog@107.126.53.88) (Ping timeout: 250 seconds)
[21:34:25] *** Quits: dreamon (~dreamon@pd9503a7e.dip0.t-ipconnect.de) (Quit: Leaving)
[21:34:42] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[21:35:04] *** Joins: moog (~moog@107.126.53.88)
[21:35:47] *** Joins: jay-m126 (~jay-m@154.72.167.138)
[21:35:53] *** Joins: jay-m126_ (~jay-m@154.72.167.138)
[21:35:54] *** Joins: jay-m1261 (~jay-m@154.72.167.138)
[21:36:59] *** Joins: vitali64_ (~vitali64@xdsl-31-164-198-163.adslplus.ch)
[21:36:59] *** Quits: vitali64_ (~vitali64@xdsl-31-164-198-163.adslplus.ch) (Changing host)
[21:36:59] *** Joins: vitali64_ (~vitali64@user/vitali64)
[21:37:14] *** Quits: vitali64_ (~vitali64@user/vitali64) (Client Quit)
[21:37:45] *** Quits: rmagyar (~rmagyar@54038678.catv.pool.telekom.hu) (Quit: WeeChat 3.4)
[21:37:49] *** Joins: vitali64_ (~vitali64@xdsl-31-164-198-163.adslplus.ch)
[21:37:49] *** Quits: vitali64_ (~vitali64@xdsl-31-164-198-163.adslplus.ch) (Client Quit)
[21:37:58] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 260 seconds)
[21:38:04] *** Quits: jay-m1261 (~jay-m@154.72.167.138) (Read error: Connection reset by peer)
[21:38:06] *** Quits: jay-m126 (~jay-m@154.72.167.138) (Read error: Connection reset by peer)
[21:38:09] *** Quits: vitali64 (~vitali64@user/vitali64) (Read error: Connection reset by peer)
[21:38:26] *** Joins: vitali64 (~vitali64@xdsl-31-164-198-163.adslplus.ch)
[21:38:37] *** Quits: vitali64 (~vitali64@xdsl-31-164-198-163.adslplus.ch) (Changing host)
[21:38:37] *** Joins: vitali64 (~vitali64@user/vitali64)
[21:38:59] *** Joins: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:5c8e:2aa6:3648:16e2)
[21:39:00] *** Quits: nomic (~nomic@2a00:23c7:ec90:a501:59b3:de52:25e7:b808) (Quit: Leaving)
[21:40:29] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:40:57] *** Quits: jay-m126_ (~jay-m@154.72.167.138) (Ping timeout: 240 seconds)
[21:41:13] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[21:41:23] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10f1:896a:f1bd:bc6a:1089:6410)
[21:42:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[21:43:24] <Forty-Bot> is time.sleep(0) the correct way to relax in a busy loop?
[21:44:49] *** Joins: Elodin (~weechat@user/elodin)
[21:44:58] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[21:45:17] *** Quits: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:5c8e:2aa6:3648:16e2) (Ping timeout: 268 seconds)
[21:46:16] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[21:46:42] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[21:47:02] *** Joins: jay-m126 (~jay-m@129.0.76.214)
[21:47:07] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[21:47:08] *** Joins: jay-m126_ (~jay-m@129.0.76.214)
[21:47:09] *** Joins: jay-m1261 (~jay-m@129.0.76.214)
[21:47:26] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:4525:4a27:b93b:734c) (Remote host closed the connection)
[21:47:49] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:c90a:37de:e150:322e)
[21:48:37] *** Quits: Babar (~Babar@2405:4803:ff4d:98d0:71db:a036:9fd6:14a5) (Ping timeout: 240 seconds)
[21:49:01] *** Joins: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[21:49:03] <Deneb> hmm, in my serial problam I have tried setting ser.timeout = 0 juust before the read, and using read(1) or read_until("ID",2) but it still runs on to the next line without waiting... Seems the library doesn't do what it says on the tin....
[21:49:13] *** Joins: mcon (~Thunderbi@host-213-45-108-174.retail.telecomitalia.it)
[21:51:14] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[21:52:30] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:cdc3:ec29:d616:f18b)
[21:52:30] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:cdc3:ec29:d616:f18b) (Changing host)
[21:52:30] *** Joins: skapata (~Skapata@user/skapata)
[21:53:38] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[21:53:38] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[21:54:31] *** Joins: pro_z_ (~pro_z@37.214.55.61)
[21:54:33] <terrycloth> Deneb: you're working on some serial stuff, too?
[21:54:33] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Client Quit)
[21:55:04] *** Quits: tWqaq (~tWqaq@240e:389:5d1c:ff00:f780:76fa:9fee:7f85) (Quit: Leaving)
[21:55:13] <Deneb> terrycloth: yes, trying to get my program to wait until some data appears at the port
[21:56:04] *** Joins: HaMsTeRs (~Thunderbi@210.3.213.4)
[21:56:18] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[21:56:34] *** Joins: tobybl (~tobybl@248.64.200.146.dyn.plus.net)
[21:57:17] *** Quits: pro_z (~pro_z@37.214.69.237) (Ping timeout: 240 seconds)
[21:57:32] <Deneb> I can produce the data manually in a terminal, just can't get python to capture it....
[21:57:57] *** Joins: marcello42 (~mp@p200300dfaf1b4601073f9a5c629881ab.dip0.t-ipconnect.de)
[21:58:35] *** Quits: pwug (~pwug@user/pwug) (Quit: Leaving)
[21:59:56] *** Quits: infernix (nix@2a02:22a0:bbb1:d500::2) (Ping timeout: 245 seconds)
[22:02:48] *** Joins: Elodin (~weechat@user/elodin)
[22:03:53] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[22:04:09] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[22:05:16] *** Joins: maxzor (~maxzor@2a01cb04054faa001e5075d7472553fa.ipv6.abo.wanadoo.fr)
[22:05:23] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[22:05:38] *** Quits: vitali64 (~vitali64@user/vitali64) (Quit: Lost terminal)
[22:05:40] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[22:05:57] *** Joins: vitali64 (~vitali64@xdsl-31-164-198-163.adslplus.ch)
[22:05:57] *** Quits: vitali64 (~vitali64@xdsl-31-164-198-163.adslplus.ch) (Changing host)
[22:05:57] *** Joins: vitali64 (~vitali64@user/vitali64)
[22:07:32] *** Quits: panella32 (~panella32@45.67.97.49) (Ping timeout: 240 seconds)
[22:07:40] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[22:09:14] *** Joins: stealth[] (~stealth]@2001:9e8:36f4:3800:e114:3e5a:4188:44b2)
[22:10:38] *** Joins: ouestbillie (~gallup@62.28.193.74)
[22:11:36] *** Quits: beaky (~beaky@2a03:b0c0:0:1010::1e:a001) (Ping timeout: 245 seconds)
[22:12:29] *** Joins: beaky (~beaky@2a03:b0c0:0:1010::1e:a001)
[22:13:01] *** Quits: subopt (~subopt@2603-8081-2302-459a-dd18-903b-ef49-a046.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[22:13:18] *** Joins: aniketgm (~aniketgm@49.36.63.18)
[22:13:58] *** Quits: aniketgm (~aniketgm@49.36.63.18) (Client Quit)
[22:15:49] *** Quits: tobybl (~tobybl@248.64.200.146.dyn.plus.net) (Remote host closed the connection)
[22:17:18] *** Quits: terrycloth (~para@66.205.193.96) (Ping timeout: 256 seconds)
[22:17:57] *** Joins: Booru (~para@207.135.243.100)
[22:18:03] <d1rewolf> when using attrs, are you always required to pass all kw arguments or positional arguments when creating an instance of a class?
[22:18:18] <d1rewolf> it appears by defining a field, attrs expects it to always be set?
[22:18:29] <d1rewolf> just want to be sure I understand expectations
[22:18:48] <SnoopJ> d1rewolf, unless the Field has a default value or a factory, right
[22:18:51] *** Quits: HaMsTeRs (~Thunderbi@210.3.213.4) (Quit: HaMsTeRs)
[22:19:48] <SnoopJ> uh also if init=False it will be omitted from the initializer
[22:20:46] <d1rewolf> SnoopJ: cool. thanks :)
[22:20:47] *** Joins: Elodin (~weechat@user/elodin)
[22:20:47] *** Quits: dab21 (~dab21@pistis.amyanddavid.net) (Quit: ZNC 1.8.2 - https://znc.in)
[22:21:47] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[22:21:53] *** Joins: aniketgm (~aniketgm@2405:201:1007:4e71:4d4c:2170:4e90:704)
[22:21:54] *** Joins: dab21 (~dab21@pistis.amyanddavid.net)
[22:24:25] *** Booru is now known as erro
[22:24:40] *** erro is now known as gerro
[22:28:21] *** lastshell1 is now known as lastshell
[22:29:06] *** Quits: miaooo (~miaooo@2409:8a1e:14e4:1fb0:59fa:74e9:12a:719f) (Quit: Leaving)
[22:30:54] *** Quits: sydbarret (~anton@static-186-121-195-51.acelerate.net) (Quit: Going offline, see ya! (www.adiirc.com))
[22:31:44] *** Joins: sydbarret (~anton@static-186-121-195-51.acelerate.net)
[22:32:25] *** Joins: infernix (nix@2a02:22a0:bbb1:d500::2)
[22:32:31] *** Quits: pycode1 (~pycode3@2001:b07:5d28:551:9606:537d:7e23:f09f) (Ping timeout: 250 seconds)
[22:33:15] *** Quits: baltazar (~baltazar@84-236-21-114.pool.digikabel.hu) (Quit: reboot: system upgrade)
[22:33:15] *** Quits: gerro (~para@207.135.243.100) (Quit: Leaving)
[22:33:29] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[22:34:04] *** Quits: n0cturna1 (~n0cturna1@h155173.upc-h.chello.nl) (Ping timeout: 250 seconds)
[22:35:18] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[22:35:43] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[22:36:41] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10f1:896a:f1bd:bc6a:1089:6410) (Read error: Connection reset by peer)
[22:37:27] *** Joins: structoha (~structoha@gateway/tor-sasl/structoha)
[22:38:04] *** Quits: vitali64 (~vitali64@user/vitali64) (Quit: Lost terminal)
[22:38:51] *** Joins: vitali64 (~vitali64@xdsl-31-164-198-163.adslplus.ch)
[22:38:51] *** Quits: vitali64 (~vitali64@xdsl-31-164-198-163.adslplus.ch) (Changing host)
[22:38:51] *** Joins: vitali64 (~vitali64@user/vitali64)
[22:39:26] *** Joins: Elodin (~weechat@user/elodin)
[22:40:10] *** Joins: vindex10 (~vindex10@gateway/tor-sasl/vindex10)
[22:40:20] *** Quits: greedom (~greedom@p200300de673b0c00f10f3ac32645d471.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[22:40:44] *** Quits: vindex10 (~vindex10@gateway/tor-sasl/vindex10) (Quit: vindex10)
[22:40:44] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[22:41:19] *** Joins: greedom (~greedom@p200300de673b0c00f10f3ac32645d471.dip0.t-ipconnect.de)
[22:43:22] *** Joins: c4017w__ (~c4017@209.52.68.8)
[22:44:16] *** Quits: Gerula (~Gerula@user/gerula) (Quit: Leaving)
[22:44:29] *** Quits: jay-m1261 (~jay-m@129.0.76.214) (Ping timeout: 268 seconds)
[22:44:29] *** Quits: jay-m126_ (~jay-m@129.0.76.214) (Ping timeout: 268 seconds)
[22:44:29] *** Quits: jay-m126 (~jay-m@129.0.76.214) (Ping timeout: 268 seconds)
[22:45:02] *** Quits: vitali64 (~vitali64@user/vitali64) (Remote host closed the connection)
[22:45:55] *** Joins: mmalter (~mmalter@88.126.10.237)
[22:46:01] *** Joins: vitali64 (~vitali64@xdsl-31-164-198-163.adslplus.ch)
[22:46:01] *** Quits: vitali64 (~vitali64@xdsl-31-164-198-163.adslplus.ch) (Changing host)
[22:46:01] *** Joins: vitali64 (~vitali64@user/vitali64)
[22:47:02] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[22:48:28] *** Quits: MJ (~mjpieters@zopatista.plus.com) (Ping timeout: 256 seconds)
[22:49:56] *** Joins: MJ (~mjpieters@zopatista.plus.com)
[22:52:17] *** Quits: spiderma1 (~spiderman@user/spiderman) (Ping timeout: 240 seconds)
[22:53:38] *** Joins: spiderma1 (~spiderman@user/spiderman)
[22:54:07] *** Joins: gimzmoe_ (~gimzmoe@user/gimzmoe)
[22:54:21] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Read error: Connection reset by peer)
[22:54:28] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[22:54:47] *** Joins: vindex10 (~vindex10@gateway/tor-sasl/vindex10)
[22:55:03] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 250 seconds)
[22:55:08] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[22:56:07] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[22:57:17] *** Quits: structoha (~structoha@gateway/tor-sasl/structoha) (Remote host closed the connection)
[22:57:24] *** Joins: Elodin (~weechat@user/elodin)
[22:57:37] *** Joins: structoha (~structoha@gateway/tor-sasl/structoha)
[22:57:50] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[22:58:18] *** Quits: vindex10 (~vindex10@gateway/tor-sasl/vindex10) (Client Quit)
[22:58:40] *** Quits: pro_z_ (~pro_z@37.214.55.61) (Ping timeout: 268 seconds)
[22:58:40] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[22:58:40] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 256 seconds)
[22:59:21] *** Joins: baltazar (~baltazar@84-236-21-114.pool.digikabel.hu)
[22:59:32] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[22:59:47] *** Joins: nomic (~nomic@185.192.69.3)
[22:59:54] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 268 seconds)
[23:00:14] *** Joins: digilink (~digilink@user/digilink)
[23:01:32] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[23:02:46] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[23:03:10] *** Joins: korg815 (~korg815@user/korg815)
[23:03:58] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[23:04:17] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[23:04:25] *** Quits: gimzmoe_ (~gimzmoe@user/gimzmoe) (Read error: Connection reset by peer)
[23:04:31] *** Quits: Deneb (~johnch@23.143.9.51.dyn.plus.net) (Quit: Leaving)
[23:05:57] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 240 seconds)
[23:08:17] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 240 seconds)
[23:10:09] *** Joins: audiobirb (~audio@user/audio)
[23:10:22] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[23:11:25] *** Joins: awmv_username_ta (~awmv@2a02:21b0:644f:c181:688c:a6c6:ae91:bb80)
[23:12:35] *** Quits: awmv (~awmv@mob-194-230-147-185.cgn.sunrise.net) (Read error: Connection reset by peer)
[23:14:02] *** Quits: odwtt (~odwtt@96.74.34.85) (Ping timeout: 240 seconds)
[23:14:48] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[23:15:23] *** Joins: Elodin (~weechat@user/elodin)
[23:17:09] *** Quits: marcello42 (~mp@p200300dfaf1b4601073f9a5c629881ab.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[23:17:24] *** Quits: akk (~akk@75-161-95-245.albq.qwest.net) (Ping timeout: 250 seconds)
[23:18:05] *** Joins: coldmountain (uid484352@id-484352.helmsley.irccloud.com)
[23:18:16] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:e4a6:e6ed:f40:6c23) (Ping timeout: 250 seconds)
[23:20:02] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Ping timeout: 240 seconds)
[23:20:15] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 268 seconds)
[23:21:23] *** Joins: vitali64 (~vitali64@xdsl-31-164-198-163.adslplus.ch)
[23:21:41] *** Joins: Betal (~Betal@user/betal)
[23:22:40] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl48a9zm5akhauqfi.ipv6.telus.net)
[23:23:08] *** Quits: vitali64 (~vitali64@xdsl-31-164-198-163.adslplus.ch) (Changing host)
[23:23:08] *** Joins: vitali64 (~vitali64@user/vitali64)
[23:23:26] *** Quits: pkapp_ (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[23:23:41] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[23:25:29] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[23:25:34] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[23:26:11] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 245 seconds)
[23:26:12] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[23:26:25] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[23:28:07] <toma> [beginner, python, GUI, recommendation] ?
[23:28:25] *** Joins: HaMsTeRs (~Thunderbi@210.3.213.4)
[23:29:57] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[23:31:06] *** Joins: slackcals (~slackcals@user/slackcals)
[23:31:46] *** Quits: sydbarret (~anton@static-186-121-195-51.acelerate.net) (Quit: Going offline, see ya! (www.adiirc.com))
[23:32:08] *** Quits: nicode (~nic@45.72.226.166) (Ping timeout: 250 seconds)
[23:32:30] *** Joins: vicfred (~vicfred@user/vicfred)
[23:32:45] *** Joins: sydbarret (~anton@static-186-121-195-51.acelerate.net)
[23:33:24] <mmalter> toma: well, I'm not sure what you mean but the Swinnen is really good.
[23:33:36] <mmalter> It's not really a gui though...
[23:33:51] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[23:33:53] *** Quits: stealth[] (~stealth]@2001:9e8:36f4:3800:e114:3e5a:4188:44b2) (Quit: Leaving)
[23:34:19] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Quit: Leaving)
[23:34:22] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[23:34:38] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[23:36:01] *** Joins: MikZyth (~MikZyth@host-92-157-66-217.spbmts.ru)
[23:36:28] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 250 seconds)
[23:36:28] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 250 seconds)
[23:37:36] <SnoopJ> toma, what kind of GUI programs do you want to write?
[23:37:57] *** Quits: esv (~esv@74.124.178.154) (Ping timeout: 240 seconds)
[23:38:28] *** Joins: matsaman (~matsaman@user/matsaman)
[23:38:30] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[23:39:04] *** Joins: Vonter (~Vonter@user/vonter)
[23:39:34] *** Joins: abiss (~auser@user/abiss)
[23:40:37] *** Joins: Guest51 (~Guest51@187.65.10.78)
[23:40:48] *** Quits: Guest51 (~Guest51@187.65.10.78) (Client Quit)
[23:41:14] <mjsir911> buffer yt
[23:41:16] <mjsir911> woops
[23:41:33] *** Quits: jdmark (~jdmark@user/jdmark) (Quit: Leaving)
[23:41:53] *** Parts: abiss (~auser@user/abiss) ()
[23:41:58] *** Joins: Guest51 (~Guest51@187.65.10.78)
[23:42:02] *** Quits: runelind (~runelind@user/runelind) (Quit: ZNC 1.8.2 - https://znc.in)
[23:42:50] *** Quits: HaMsTeRs (~Thunderbi@210.3.213.4) (Quit: HaMsTeRs)
[23:43:09] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:79ce:1be8:1f57:d8d6)
[23:43:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[23:44:06] <mmalter> mjsir911: That chat fail is being forwarded to the competent copyright authority. Please stand by.
[23:44:24] <mjsir911> D:
[23:44:26] <toma> SnoopJ: I have these text documents of notes and I just want a GUI to display the original note on the left side, and I want to put a summary on the right side, adds some tags and add it to some type of database. In the future, I want the left side to have TTS functionality.
[23:45:34] *** Quits: awmv_username_ta (~awmv@2a02:21b0:644f:c181:688c:a6c6:ae91:bb80) (Ping timeout: 250 seconds)
[23:45:34] <mmalter> toma
[23:45:37] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[23:45:41] <mmalter> I would advise tk
[23:45:47] <mmalter> it's ugly but simple
[23:45:48] <SnoopJ> toma, mkay. I know you're already aware of Tkinter, are you also familiar with Qt, wxPython, and Kivy? Those are worth knowing about.
[23:46:33] <toma> SnoopJ: I'm only aware they exist. I was told the learned curve for qtpy is steeper than tkinter.
[23:46:44] <SnoopJ> I have used Qt and wxPython, I would say wxPython was the simpler of the two but that was one major version ago, I have no idea what it's like now. Qt is powerful but you really have to get into its mindset. I hear good things about the pyside bindings, though.
[23:46:51] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[23:47:17] <SnoopJ> toma, yes, for sure.
[23:47:19] <mmalter> yeah and kivy is way harder
[23:47:23] <toma> mmalter: simple sounds nice
[23:47:24] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[23:47:34] <SnoopJ> Of these options I would say Tkinter is probably the lowest bar to entry
[23:47:35] *** Joins: derpadmin (~Anonymous@homebase.200013.net)
[23:47:49] *** Parts: Guest51 (~Guest51@187.65.10.78) ()
[23:48:01] <toma> SnoopJ: sounds good. now to find a book or suitable online place. I was told the python documentation of tkinter was lacking.
[23:48:15] <mmalter> It's funny after all those decades how gui programming is still an area of CS that hasn't been solved once and for all
[23:48:43] <SnoopJ> yes the docs are a little cryptic
[23:48:49] <SnoopJ> mmalter, what would it mean to "solve" GUI programming?
[23:48:50] *** Joins: slav0nic (slav0nic@python.su)
[23:49:23] <Repiphany> Drag-and-drop WYSIWYG obviously
[23:49:33] <mmalter> SnoopJ: Well, if you want to pass a packet from one computer to the other, usually nobody really talks about it, people use TCP IP
[23:49:52] <mmalter> Now for GUI programming, you get a plethora of highly complicated options
[23:49:52] *** Quits: paul424 (~tom@ip-5-172-234-91.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[23:49:55] * SnoopJ has passed data between computers using not-TCP
[23:49:57] <mmalter> it's not solved yet
[23:50:05] <mmalter> well everybody has
[23:50:15] *** Joins: ic3blx_ (~ic3blx___@87.116.178.2)
[23:50:15] *** Quits: ic3blx_ (~ic3blx___@87.116.178.2) (Changing host)
[23:50:15] *** Joins: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740)
[23:50:17] *** Quits: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740) (Read error: Connection reset by peer)
[23:50:18] <mmalter> I am not making a technical point, you get the idea
[23:50:30] <SnoopJ> The point I am making is that your analogy is *also* a set of complicated options
[23:50:32] *** Joins: awmv_username_ta (~awmv@2a02:21b0:644f:c181:e5c1:2512:9844:41f9)
[23:50:49] *** Quits: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) (Quit: Leaving.)
[23:50:49] <SnoopJ> There are a lot of options because the problem domain is very rich
[23:50:53] *** Joins: ic3blx_ (~ic3blx___@87.116.178.2)
[23:50:53] *** Quits: ic3blx_ (~ic3blx___@87.116.178.2) (Changing host)
[23:50:53] *** Joins: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740)
[23:51:01] <SnoopJ> Lots of ways to pass data around, lots of ways to make graphical programs
[23:51:08] <mmalter> meh that's pedantic now let tme choose something else
[23:51:19] *** Joins: vindex10 (~vindex10@gateway/tor-sasl/vindex10)
[23:51:22] * SnoopJ is a pedant, it's true
[23:51:26] <mmalter> If you want to do a website and you re not a smug gemini boy, you use HTTP
[23:51:29] <mmalter> not gopher
[23:51:37] <mmalter> not your grandma protocol
[23:51:38] <mmalter> HTTP
[23:51:52] <SnoopJ> mmalter, what if I don't have a network stack at all?
[23:52:05] <mmalter> meh, you re a wall
[23:52:07] <SnoopJ> i.e. two microcontrollers talking to each other
[23:52:31] <grawity> mmalter: so this is bullshit because you're comparing two different things
[23:52:47] <grawity> mmalter: if you're talking protocols, there's HTTP and there's X11, end of story
[23:53:12] <grawity> mmalter: if your'e talking about widget toolkits like tk or qt, have you ever tried to count all the toolkits people have for building HTML pages
[23:53:16] <grawity> there are probably hundreds
[23:53:26] <mmalter> grawity: precisely what I mean
[23:53:31] <SnoopJ> perhaps I shouldn't have asked
[23:53:39] <mmalter> there are hundreds
[23:53:54] *** Joins: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com)
[23:53:59] <mmalter> even on the conceptual level, we're unsure
[23:54:10] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:79ce:1be8:1f57:d8d6) (Ping timeout: 268 seconds)
[23:54:10] <mmalter> should we do FRP? actor model? black magic?
[23:54:14] <ouestbillie> toma: use a org parser in python and call emacs from the main process :-)
[23:54:14] <toma> now that lots of people are paying attention -- where do you think is best to learn tkinter?
[23:54:18] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[23:54:21] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:755e:54ae:a0e7:4845)
[23:54:23] <mmalter> :D
[23:54:28] *** Joins: HvszrStykp (~X@81.171.62.84)
[23:54:33] <mmalter> toma: swinnen again if you are a grand begginer
[23:54:36] <toma> ouestbillie: so many things I didn't understand in that sentence.
[23:54:38] <mmalter> it's really a good book
[23:54:45] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[23:54:50] <SnoopJ> toma, they were joking
[23:54:52] <toma> mmalter: googling swinnen
[23:54:53] <SnoopJ> (I hope)
[23:55:02] <HvszrStykp> Is it possible to produce a datetime.isoformat() string that doesn't specify any timezone? I'm dealing with some software that doesn't accept the timezone indication
[23:55:10] <mmalter> (you got it, hurrah)
[23:55:18] <SnoopJ> mmalter, there's no need to be rude.
[23:55:23] <mmalter> no hard feelings :D
[23:55:25] <ChrisWarrick> HvszrStykp: I think naive timezones do that
[23:55:36] <mmalter> you're a bit of a Sheldon Cooper if I may tho
[23:55:41] <HvszrStykp> ChrisWarrick: Ah alright so just convert the time to be naive right?
[23:55:49] <ChrisWarrick> HvszrStykp: probably
[23:55:50] <ouestbillie> mmalter: nownownow
[23:55:52] <HvszrStykp> I'll try thanks
[23:55:54] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[23:56:10] *** Joins: v8IbXNTl (~v8IbXNTl@host-204-118-069-229.dhcp.fewpb.net)
[23:56:24] <SnoopJ> mmalter, what does that mean?
[23:56:57] <ouestbillie> toma: i wouldnt do a first programming project that is has gui tbh
[23:57:04] <ouestbillie> for many reasons
[23:57:10] *** Joins: medium_cool (~medium_co@136.36.128.48)
[23:57:11] *** naranja is now known as orange
[23:57:15] *** Quits: awmv_username_ta (~awmv@2a02:21b0:644f:c181:e5c1:2512:9844:41f9) (Ping timeout: 268 seconds)
[23:57:17] <mmalter> SnoopJ: meh let's forget about it. there was no mean intention
[23:57:24] *** orange is now known as naranja
[23:57:24] <SnoopJ> ouestbillie, I don't think it is their first project
[23:58:12] <toma> ouestbillie: It's close to my first non-textbook project.
[23:58:24] <SnoopJ> mmalter, I won't lose any sleep over it, but I wanted to understand exactly what kind of interpersonal jibe it was.
[23:58:29] <toma> ouestbillie: If you have a list of projects you would suggest I would appreciate.
[23:58:54] <ouestbillie> toma:  a crawler is nice, plus you can get asked that shit in interviews
[23:59:02] *** Joins: erdem (~erdem@94.54.61.185)
[23:59:11] <toma> mmalter: Les livres de Swinnen sont-ils en franÃ§ais ? J'ai du mal Ã  les trouver en anglais.
[23:59:32] <mmalter> toma: Oui il y a une traduction gratuite je peux te la trouver
[23:59:33] <SnoopJ> you might ask in #python-fr too
[23:59:38] <mmalter> but it's english only
[23:59:46] <mmalter> just a sec, I'll get you the link
[23:59:49] <ouestbillie> toma: on dirait,  je trouve juste des liens francos moi aussi
[23:59:59] <toma> mmalter: English would be great.
