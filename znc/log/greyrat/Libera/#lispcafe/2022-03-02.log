[00:03:36] *** Quits: christophergray (~christoph@186.151.17.62) (Quit: WeeChat 3.4)
[00:16:56] <Gnuxie> Lmao 
[00:23:53] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[00:59:44] *** Quits: cosimone (~user@93-47-229-38.ip115.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[01:22:17] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[01:22:25] <shka> as i suspected, russians move to tried-and-true "just obliterate everything" doctrine 
[01:22:27] <shka> fuck
[01:23:03] <shka> :(
[01:42:51] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 256 seconds)
[01:43:24] <Aurora_v_kosmose> :/
[01:43:58] <shka> hundreds of thousands may be killed
[01:45:30] <Aurora_v_kosmose> It sucks.
[01:49:59] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[02:02:12] *** Quits: eugercek (~user@user/eugercek) (Remote host closed the connection)
[02:02:28] *** Joins: eugercek (~user@user/eugercek)
[02:02:43] *** Quits: eugercek (~user@user/eugercek) (Remote host closed the connection)
[02:03:33] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[02:11:31] *** Joins: drbluefall (~alexbluef@2001:470:69fc:105::1:1c68)
[02:16:59] *** Quits: minion (~minion@common-lisp.net) (Killed (NickServ (GHOST command used by minion1)))
[02:17:29] *** Joins: minion (~minion@common-lisp.net)
[02:20:47] *** Quits: cross (~cross@spitfire.i.gajendra.net) (Ping timeout: 256 seconds)
[02:22:34] *** Joins: cross (~cross@spitfire.i.gajendra.net)
[03:14:32] * hayley hears "you pop off the top of the stack" and has x86 codegen flashbacks
[03:15:29] * moon-child pops off the bottom of the stack, just for variety
[03:15:42] <drakonis> wow i have sent out a patch to a cl library.......
[03:16:28] <hayley> Congratulations!
[03:17:11] * White_Flame pops the middle of the stack
[03:17:14] <drakonis> feels weird, really.
[03:17:49] * hayley topples over the stack
[03:18:44] <drakonis> been writing some random code for project euler problems and really starting to get into it
[03:19:24] <drakonis> i have an endless list of things i want to do
[03:19:43] <drbluefall> you're not alone in that
[03:20:09] <drbluefall> I've been very slowly (and inconsistently) working my way through Practical Common Lisp
[03:20:29] <drakonis> i feel like i should get something with my life in my ripe old age of 28
[03:20:36] <drakonis> get something done
[03:20:49] <drakonis> i feel very old
[03:21:27] <White_Flame> that's a feeling that just won't stop ;)
[03:21:30] <drakonis> project euler seems like a really good way to get acclimated with problem solving
[03:22:03] <drakonis> in a way that practical common lisp does not
[03:23:07] <waleee> https://open.kattis.com/ is quite nice (has cl support)
[03:23:07] -ixelp- Kattis, Kattis
[03:23:32] <drakonis> cool.
[03:23:36] <drakonis> worth looking into
[03:23:49] <drakonis> i'll shelve my grand plans for a month or so while i get better at cl
[03:23:54] <waleee> ... welp but they maybe should change to title to something more desciptive
[03:24:04] <waleee> *descriptive
[03:24:37] <waleee> the problem archive is humongous 
[03:24:54] <drakonis> so it seems
[03:24:58] <drakonis> they're just not good at showing that
[03:25:02] <APic> Kallisti!
[03:25:29] <drakonis> it is larger than PE though
[03:26:14] <drakonis> 777 problems spread across 16 pages with 50 rows each
[03:27:08] <drakonis> kattis has a hundred problems per page
[03:28:21] <hayley> Apparently queues and stacks are data structures and not abstract data types. But you can implement a stack with a linked list, or with an array. Boggle.
[03:29:12] <drakonis> kattis has 3186 problems total
[03:29:14] <drakonis> impressive.
[03:29:30] <drakonis> hayley: mind boggling
[03:29:58] <drakonis> where is this from?
[03:30:03] <hayley> The teacher has a drawing on the screen of a stack, and there's only one way to draw a stack, so there can only be one way to represent that on a computer.
[03:30:12] <hayley> My first workshop in "algorithms and analysis". Thanks, I hate it.
[03:31:36] <drakonis> hm, neat, kattis has new problems at least once a month
[03:32:25] <neominimum> On thinking it through, it's probably not even a problem with the spec that utilising threads causes unexpected behaviour. As far as I am aware current implementations expose a threading interface and just say, "have at it." and essentially are blind to the use of multi-threading. Defining relevant set of declarations to make the intentions of the user known, and implementing serialised access to parts of the environment and passing 
[03:32:25] <neominimum> environments along with asynchronous calls to be evaluated with could go along way to solving the problems. There would be overheads involved with asynchronous code but an implementation with a hybrid synchronous/asynchronous runtime could make the decision to enforce serialised access at (safety 3) or something, and optimise them away when not needed.
[03:32:30] *** Quits: APic (apic@apic.name) (Quit: [TLS] Client upgrade)
[03:32:51] *** Joins: APic (apic@apic.name)
[03:33:32] <White_Flame> most offer things like thread-safety options to their hashtables, and TLS dynamic bindings are awesome, but yes generally speaking it's the raw threading interface to build on top of
[03:33:43] <hayley> I don't think "serialised access" is well defined.
[03:34:44] <hayley> If it was, I'd expect there wouldn't be any concurrency bugs.
[03:34:48] <White_Flame> you could put a lock on every cons cell, every bignum, every struct/object instance
[03:34:59] <White_Flame> etc
[03:35:51] <hayley> Well, the easiest thing to blow out would be to try read-modify-write with implicit locks.
[03:36:31] <White_Flame> or, and this might be radical new thinking, a global execution lock ;)
[03:36:50] <hayley> (pop bla) == (destructuring-bind (a . d) bla (setf bla d) a) which involves a read and a write. The read and write, more often than not, should be in an atomic operation.
[03:36:55] <hayley> White_Flame: Sure, the easiest way to do concurrency is not to.
[03:37:10] <neominimum> perhaps just the ability to (declare (serialised foo)) for objects that the user knows will need it (objects in the general sense)
[03:37:37] <White_Flame> then every access would need to check if that's the case, and it needs to be stored on the object
[03:38:09] <hayley> Elsewhere: "You write high level code, it’s compiled to an IR that is extremely low level, them the compiler middle end tries to figure out information you already wrote (where loops are, induction variables,…),"
[03:38:44] <White_Flame> yep, that's always a constant source of consternation for all my metaprogramming & environments
[03:38:56] <hayley> It is? I believe most transforms in Cleavir are done on an IR that does know about runtime types (i.e the HIR), and some like Java do keep information about loops.
[03:39:08] <hayley> ...er, nah, Java compiles to gotos. Never mind.
[03:43:06] <hayley> And, if I had e.g. (loop (when blabla (do-something) (return))) the WHEN path should be considered outside the loop, really.
[03:44:31] <White_Flame> right, hence the importance of deconstructing & reconstructing the higher level stuff
[03:47:16] <hayley> "yes you did that but stuff like llvm doesn’t do that and sure does have quite a bit on re-figuring out things" LLVM is a backend library. Woe on you for using that as your entire compiler.
[03:47:27] <hayley> "and llvm happens to be used by a lot of things"
[03:48:50] <hayley> Let me tell you about how Clasp works...
[03:53:09] *** Joins: notzmv (~zmv@user/notzmv)
[03:53:48] <hayley> I guess high level information is tossed out, but most just appears to be plain wrong.
[03:55:39] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Quit: ec)
[03:55:39] <neominimum> hayley: serialised access is essentially allowing a process to claim an object or set of objects that it needs exclusive access to, just like synchronous code can assume that nothing else will modify the objects it is working with.
[03:57:57] <hayley> me: "∨/1 1⍉M" lecturer: "I don't know what those symbols mean" me: "that's the algorithm for telling if an adjacency matrix has a loop"
[04:00:55] <neominimum> potentially an implementation could sandwich a series of async function calls between a claim/release for a given set of objects and then no other process could jump in and modify the state of those objects while it was in effect.
[04:01:28] <hayley> "[SICL] just gets me confused because it’s so similar to sycl which is a c++ abomination khronos made"
[04:01:58] <hayley> At least they don't know about SBCL.
[04:02:14] <White_Flame> neominimum: again, every single "normal" access to every single object would need to check, in order for that exclusion to work
[04:02:36] <White_Flame> plus, every simple composite mutable objects needs to have a lock as well, including individual cons cells etc
[04:04:47] <neominimum> oh okay I see what your saying now
[04:05:57] *** Quits: shka (~herr@109.231.3.55) (Ping timeout: 240 seconds)
[04:08:39] <hayley> "so where’s hammer" "This has been asked twice before"
[04:09:24] <drakonis> hayley: is this you presenting something?
[04:09:34] <hayley> Apparently.
[04:09:35] <drakonis> because lmao
[04:09:43] <hayley> https://mas.to/@nodefunallowed/107884053175669058
[04:09:44] -ixelp- Hayley Patton: "@Lucretia-Matt@rats-at.work @nyx@social.xenofem.m…" - mas.to
[04:09:53] <drakonis> tell you what
[04:09:55] <drakonis> this is some shit
[04:10:21] <drakonis> oh this is someone being dumb on not-twitter
[04:10:33] <hayley> Yes.
[04:12:04] <drakonis> how can someone be so ignorant
[04:12:28] <hayley> Better question: how can't they?
[04:13:57] <drakonis> idk
[04:14:44] <drakonis> humans are hard to grasp
[04:15:20] <hayley> https://www.youtube.com/watch?v=WA1iUqxIzQg
[04:15:21] -ixelp- I Nearly Married a Human - YouTube
[04:17:16] <drakonis> hah
[04:17:20] <drakonis> noice.
[04:19:30] <drbluefall> if there's one thing to learn about humans, it's that they're capable of both incredible genius and unrelenting idiocy.
[04:21:19] <drakonis> also i'm not sure how sycl is bad anyways lol
[04:21:37] <drakonis> highly unsubstantiated claims from a random person on the internet
[04:21:43] <hayley> "it’d be fun to contribute" I sure hope they don't.
[04:22:27] <drakonis> looks like a clown
[04:24:03] <drakonis> the instance said person is in, has markdown
[04:24:10] <drakonis> so that hammer tweet is actually a strikethrough lol
[04:24:12] <drakonis> aint that fun???
[04:24:36] * hayley uploaded an image: (114KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/ZSzwuxFNvSnlSfXPIZkclvAk/lamport-is-dead-inside.jpeg >
[04:25:05] <drakonis> dead inside indeed...
[04:28:49] * hayley uploaded an image: (173KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/NFLPcdkNXYBgxgSvzsFKaWyW/merveilles.png >
[04:28:53] <hayley> We also have this classic.
[04:31:39] <drakonis> lol
[04:31:43] <drakonis> what's the deal with that one?
[04:32:06] <moon-child> https://web.archive.org/web/20140719131136/https://twitter.com/garybernhardt/status/456875300580651009
[04:32:08] <hayley> I Do Not Like that server.
[04:32:09] -ixelp- Twitter / garybernhardt: I gave The Birth & Death ...
[04:32:27] <hayley> https://www.youtube.com/watch?v=tBvAxSx0nAM
[04:32:27] -ixelp- Welcome To The Machine - YouTube
[04:34:04] <hayley> drakonis: I can only say they are too focused on machine-oriented sorts of simplicity (think worse-is-better) whereas myself and my colleagues like to think we use more abstract forms to achieve simplicity.
[04:38:12] *** Quits: random-nick (~random-ni@87.116.176.196) (Ping timeout: 240 seconds)
[04:39:36] <waleee> hayley: lol you really used apl-symbols?
[04:39:44] <hayley> waleee: Yes.
[04:39:45] <waleee> oops
[04:40:03] <waleee> had scrolled up in the log
[04:40:19] <waleee> (re the adjacency matrix)
[04:40:41] <hayley> It's easier than working out how to write the algorithm in English.
[04:43:29] <waleee> sure, and I guess they grokked it when explained what operation the symbol does
[04:43:50] <hayley> I didn't explain it.
[04:44:14] <hayley> Instead I was hurting my head explaining why loop analysis isn't the same as working out what is a for or while loop again.
[04:52:08] <waleee> this guy https://en.wikipedia.org/wiki/Ian_Tregillis depicts apl in the 1st series under the bibliography. But it probably doesn't do much to improve the perception of apl as arcane :P
[04:52:50] <waleee> (depicts = shortish apl snippets occur in in the books)
[05:12:37] *** Quits: okflo (~okflo@lisa.diesenbacher.net) (Ping timeout: 240 seconds)
[05:14:30] *** Joins: okflo (~okflo@lisa.diesenbacher.net)
[05:33:51] <hayley> https://www.youtube.com/watch?v=NIzleISU5jw
[05:33:51] -ixelp- Beat the Clock - YouTube
[05:35:18] <hayley> "In order to most fully appreciate the experience of interacting with a lively, responsive world of objects, effortlessly diving into change them and create more, freely mixing data and programs, and only getting coffee when you are tired instead of when you change your program, you will have to obtain the Self 4.0 public release and try it out for yourself. May your journey be fruitful."
[05:39:45] *** Joins: robin_ (~robin@user/terpri)
[05:41:04] *** Quits: robin (~robin@user/terpri) (Killed (NickServ (GHOST command used by robin_)))
[05:41:08] *** robin_ is now known as robin
[05:51:20] *** Joins: Lycurgus (~juan@98.4.112.204)
[06:27:47] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[06:41:27] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[07:14:07] *** Joins: LispyLights (~LispyLigh@user/lispylights)
[07:16:35] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Ping timeout: 240 seconds)
[07:23:50] *** Quits: ryanbw (~ryanbw@mab.sdf.org) (Remote host closed the connection)
[07:38:13] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Quit: Leaving)
[07:39:48] <contrapunctus> heh
[07:41:31] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Remote host closed the connection)
[07:50:59] <moon-child> hahaha
[07:51:02] <moon-child> gilberth: it bit me too https://0x0.st/oPKe.png
[07:55:02] *** Joins: semz_ (~semz@user/semz)
[07:57:40] *** Quits: semz (~semz@user/semz) (Ping timeout: 250 seconds)
[07:57:46] *** LispyLights is now known as Aurora__v_kosmos
[07:58:11] *** Aurora__v_kosmos is now known as Aurora_v_kosmose
[08:11:27] <contrapunctus> A few days ago, looking through the CLIM User Guide, I had the idea of a document whose structure is determined by the user, through the act of browsing and transclusion. I decided to make a prototype...and then realized I was basically making Xanadu. All the features of Xanadu I couldn't understand the reasons behind suddenly made perfect sense. Now I don't know whether to continue working on it o
[08:11:27] <contrapunctus> r join the Xanadu project :\
[08:12:19] <contrapunctus> basically making * a stripped-down, offline version of Xanadu.
[08:19:51] <neominimum> moon-child: I had that issue too, and I spent more time than I would have liked figuring out how to build my own version of the Iosevka font to increase the height of the glyphs, as a work around.
[08:46:35] <neominimum> contrapunctus: hadn't heard of that but wow 60  years and development is still ongoing for a polished public release. I am amazed if anything.
[08:47:55] <neominimum> just so its obvious I'm not throwing shade at the project
[08:48:44] <neominimum> I am actually curious as to why development has been going for so long
[08:49:47] <hayley> The dumbest question I will ever ask #lispcafe: is a "stack" an abstract data type, or a data structure?
[08:50:09] <hayley> I can only think the former, but the lecturer insisted today that it is a data structure, because there is only one way to visualise one.
[08:50:40] <hayley> The trick there, though, is that the visualisation (think "stack of plates") relies on an abstract sequence type, which would be realised with (at least) either a linked list, or a vector.
[08:51:21] * moon-child passes hayley a blockchain
[08:51:42] * hayley puts moon-child in a Merkle tree
[08:53:20] <neominimum> I don't know but I can tell you that a stack of pringles is very tasty
[08:59:01] <neominimum> Counter question: How does one even know they're looking at a stack in the first place if they are unsure of the definition?
[08:59:42] <White_Flame> oh, id didn't notice it was asked here, too
[09:00:28] <White_Flame> another egregiously differing option would be spilling a huge stack to disk
[09:00:52] <White_Flame> or compressing the stack so similar consecutive entries aren't duplicated
[09:01:23] <White_Flame> and remind him that "visualization" is an interface thing, not an implementation thing
[09:01:28] <hayley> Still, a stack is an ADT, right?
[09:01:28] <White_Flame> (or her)
[09:02:19] <White_Flame> yes, and rechecking that's all about external interface, too
[09:02:28] <moon-child> neominimum: well, that is always a problem.  That somebody might not know a definition is not an argument for choosing one definition over another
[09:02:33] <hayley> He also makes some other data structures too concrete. Like using a vector of adjacent nodes to reprepsent a graph.
[09:03:03] <moon-child> (it might be an argument for avoiding use of the defined term entirely--though I do not think such is suitable in this case--but it is definitely not an argument favouring any definition over any other)
[09:03:13] <hayley> Apparently the first dimension has to be a vector, and the second has to be lists. The Netfarm suite uses hash table of lists everywhere.
[09:03:29] <moon-child> hayley: what does he make of directed graphs?
[09:03:35] <moon-child> weighted graphs?
[09:03:39] <White_Flame> I would think that such a vector does count as a datastructure
[09:03:55] <hayley> A picky person, who mostly reads and doesn't update the graph, may use a vector of vectors.
[09:04:31] <hayley> moon-child: Still works, but the vector only lets you query pointed-to based on pointed-from. Pedantically, the Netfarm code used two tables, in order to query both directions efficiently.
[09:05:08] <hayley> White_Flame: I meant that the design does not crucially rely on the first "map" being a vector, and then the sequences contained being linked lists.
[09:05:33] <White_Flame> the thing is that ADT and datastructure tend to recurse
[09:07:01] <hayley> Or it could be a hash table of hash sets, or something. You just need a map ADT and a set ADT to make an efficient adjacency "list" ADT.
[09:07:05] <neominimum> moon-child: sure, it may be a case of differing mental models. the only question is which ones are more powerful as I think the one with greater descriptive and predictive power is the winner.
[09:07:57] <moon-child> in that case, I think abstract models have greater descriptive and predictive power, as they can describe and predict many more sorts of systems
[09:11:56] <neominimum> That seems reasonable to me. Although all models have  weaknesses depending on the domain. So abstract may not be the best for all occasions.
[09:11:59] <hayley> Well, the slides even say that stacks and queues are ADTs. /me scratches head
[09:12:13] <White_Flame> heh, well that makes your argument easy ;)
[09:13:49] <neominimum> Haha yeah the best answer is the one that gets you marks.
[09:15:28] <hayley> White_Flame: Also, using a chunked representation for a queue helped me in a concurrent setting, because grabbing a chunk of work lets a thread work for longer before modifying the queue again.
[09:25:08] <White_Flame> hayley: what I did is just use a list, and have the current requester get the entire list and go off to work
[09:25:27] <White_Flame> but yeah, a chunked model would be more even ;)
[09:29:17] *** Joins: eugercek (~user@user/eugercek)
[09:30:42] *** Quits: eugercek (~user@user/eugercek) (Read error: Connection reset by peer)
[09:33:17] *** Joins: eugercek (~user@user/eugercek)
[09:34:42] *** Quits: eugercek (~user@user/eugercek) (Read error: Connection reset by peer)
[09:34:59] *** Joins: eugercek (~user@user/eugercek)
[09:56:03] *** Joins: ryanbw (~ryanbw@mab.sdf.org)
[09:56:46] <neominimum> would it be reasonable to name my `package.lisp`'s `interface.lisp`?
[09:58:15] <moon-child> to name your package.lisp's interface.lisp what?
[09:58:35] <moon-child> (and if you named it something other than interface.lisp, would it not then no longer be an interface.lisp?)
[09:59:10] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[10:00:22] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[10:01:36] <neominimum> Um, just the file name. Defining a package creates an interface right? So i thought it would be cute and quirky to call the file that generally holds package definitions, "interface.lisp" instead. 
[10:02:20] <moon-child> I think an interface is distinct from a package
[10:02:41] <neominimum> tell me more please
[10:02:53] <moon-child> a package may contain multiple interfaces, or an interface may be spread out over multiple packages
[10:05:28] <neominimum> hm okay, how does one distinguish between multiple interfaces when the package simply exports one set of symbols?
[10:06:22] <moon-child> the distinction is not made at the level of the language
[10:11:56] <neominimum> I have been thinking of using packages to define module boundaries. one package per module. one system per module,  and then linking dependencies via :depends-on. Perhaps this is a limited approach, but I'm not sure exactly what you mean by the distinction not being at the level of the language.
[10:13:25] <neominimum> actually I think I do
[10:13:34] <White_Flame> an "interface" is normally called "protocol" in lisp land
[10:13:51] <White_Flame> and that's a set of functions/methods and how/when to call them
[10:14:04] <White_Flame> a package is just a private namespace for your symbols, and exporting them
[10:14:14] <neominimum> I'm familiar, I just wasn't sure if beach was the only proponent of that usage.
[10:14:31] <neominimum> I like it though
[10:14:39] <White_Flame> it's not necessarily being a proponent of it, rather than really never hearing "interface" in lisp land much :)
[10:14:54] <White_Flame> but rather it being a specific thing in some OO lands
[10:19:23] <neominimum> That makes sense. Anyway, I may instead put the package definition at the top of the file that defines the protocol since to me they are closely related operations, and skip the "package.lisp" file altogether.
[10:19:50] <White_Flame> it doesn't define the protocol, though, it only defines the exports (if you put it there, as many do)
[10:24:22] <neominimum> hmm, okay my understanding of what an interface represents is a bit blury, so what is a word that captures that notion that isn't 'interface'. I thought interface was the billboard so to speak and not anything else.
[10:24:51] <neominimum> which would mesh with what a package is
[10:24:59] <neominimum> to me at least
[10:25:42] <moon-child> the CL package implements the interface comprising car, cdr, cons.  It also implements the interface comprising make-array, vector, aref, ...
[10:28:42] <neominimum> is that decomposing by the object relationship?
[10:28:55] <neominimum> class relationship*
[10:30:15] <neominimum> so CL represents an extended protocol/interface
[10:30:51] <neominimum> there was another term to describe protocols that could not be decomposed but I forgot
[10:31:19] <neominimum> It was in Roberts paper on protocols
[10:35:08] <neominimum> I don't know if it's really accurate to say that an extended interface/protocol has multiple interfaces, as an extended protocol still only exports a single set of symbols.
[10:39:47] <moon-child> these terms are not really strictly defined.  I can imagine defining an interface comprising car,cdr,cons.  Or I can imagine an interface comprising car,cdr,cons,make-array,vector,aref
[10:42:07] <neominimum> Hope I don't give the impression that I'm attacking your ideas, but I'm struggling a bit to see how a cohesive interface can exist when one must use multiple different designators to reference parts of what should be the same system (not in the asdf sense), in the case of a single interface being constructed from multiple packages.
[10:42:37] <neominimum> Ah okay, yeah I think that the definitions are a bit fuzzy too
[10:43:01] <neominimum> makes it hard to reason about the issue sometimes
[10:43:06] <moon-child> well, consider this.  There is a _sequence_ interface, comprising elt and length
[10:43:20] <moon-child> which has two implementations in cl (lists, and arrays)
[10:44:17] <moon-child> the point I am trying to make is that it is an informal distinction, made on the basis of usefulness
[10:45:00] <moon-child> 'is this something coherent that somebody would want to program against', not 'is this a set of symbols exported from a package'
[10:48:18] <neominimum> Hmm, I need to let that sink in, thanks for the explanation :)
[11:02:38] <neominimum> I'm tripping out because I can't imagine a method of reliably determining the extent of an interface when given no other information other than package/protocol definitions if the interfaces may traverse an unknown number of  packages and or overlap each other. Thats chaos! haha
[11:05:45] <moon-child> statically typed languages are thattaway
[11:08:05] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 250 seconds)
[11:10:37] <neominimum> I'm sorry! I will repent
[11:12:01] <moon-child> lol
[11:12:32] <moon-child> think of it this way: few type systems are capable of expressing the totality of invariants enforced/required by a given interface
[11:13:05] <moon-child> (actually it's proven that no type system can do this)
[11:13:26] <moon-child> (more or less)
[11:14:02] <moon-child> so a purely formal expression of any interface is bound to be incomplete
[11:16:26] <hayley> Based on doing the mental motions for monomorphising on Newspeak-esque modules, I'm convinced that it'll eventually get into dependent type hell.
[11:25:15] <neominimum> Ah okay, I will hopefuly get have a better understanding of such things one day but I'm still working my way through an introductory formal logic, so my knowledge of foundational mathematics is very limited.
[11:25:48] *** Joins: shka (~herr@109.231.3.55)
[11:30:42] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[12:00:24] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Quit: Aurora_v_kosmose)
[12:02:03] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[12:20:26] <gilberth> moon-child: Nifty cursor that you have there. How did you managed to do that? What's the italic "i" doing there?
[12:22:52] <gilberth> Oops, Something is not right here. I got an exception 4, what ever that is and the game is over. Inside Objective C and this is with the CLX backend. *sigh*
[12:24:30] <moon-child> gilberth: it's a unicode glyph 𝑖, not a styled regular i
[12:24:42] <moon-child> (in particular, it represents the imaginary unit)
[12:25:07] <gilberth> There is an extra glyph for that?
[12:25:49] <moon-child> indeed
[12:27:10] <gilberth> Is the "i" that tall or are there a few newlines before it?
[12:28:14] * hayley can fly in the Kandria demo.
[12:30:38] <moon-child> no newlines
[12:30:40] <moon-child> https://0x0.st/oPPA.gif
[12:30:53] <gilberth> Anyhow I am within %PASCAL-FUNCTION within %WAIT-ON-SEMAPHORE-PTR. What the heck? Then it made it through the debugger and it's some printer finally catching that exception. What kind of exception? idk. And why would I be inside a callback anyway? Who is calling me?
[12:31:50] <gilberth> moon-child: Nice. Curious, how did you create that GIF?
[12:32:07] <moon-child> https://www.youtube.com/watch?v=fWNaR-rxAic
[12:32:08] -ixelp- Carly Rae Jepsen - Call Me Maybe - YouTube
[12:32:18] <moon-child> gilberth: 'peek'
[12:32:23] <moon-child> on macos, I think licecap is good
[12:32:51] <hayley> .oO(Bell curve meme where it goes: C weenie: "compiler is there to make code go fast" Rust weenie: "compiler is there to make error messages" Self weenie: "compiler is there to make code go fast")
[12:33:17] <gilberth> peek is what? A screen capture tool?
[12:33:26] <moon-child> yeah
[12:33:39] <moon-child> I think it punts to ffmpeg.  But it provides a nice interactive gui
[12:34:04] <gilberth> Ah, and so you use something else to get a gif?
[12:34:38] <moon-child> I think it generates a gif directly
[12:34:52] <moon-child> either that, or it generates something else and converts to gif.  But it does it transparently
[12:35:18] <gilberth> Ah ok. I was curious, because for this kind of screen captures GIFs are perhaps way nicer than mp4s.
[12:35:39] <moon-child> indeed
[12:38:03] <gilberth> Anyhow, I shouldn't have got up. First coffee not finished yet and CCL crashes with an error I can't make sense of. Good start. But then it's my dorveille.
[12:41:45] <gilberth> moon-child: When you move your point back at the "i" or beginning of line, does the cursor and line height behave again?
[12:42:41] <moon-child> line height is wrong regardless of where the cursor is
[12:42:54] <moon-child> cursor height is correct with block cursor, wrong with I-beam
[12:43:30] <moon-child> curiously, the shape of the block cursor is different when it is on top of the 'i', but it is still about the right size
[12:43:48] <gilberth> ok, so this seems to be a different glitch that what I have. Meanwhile I still use 24.5.
[12:51:24] *** Quits: eugercek (~user@user/eugercek) (Remote host closed the connection)
[13:17:48] *** Joins: cosimone (~user@93-47-229-38.ip115.fastwebnet.it)
[13:37:58] <hayley> TIL game consoles are made of magic dust or something, where you get graphics processing faster than a RTX 2080 Ti or something like that for $500...somehow. 
[13:38:25] <hayley> Also, console hardware never gets outdated, unlike the rest of the semiconductor industry. Magic!
[13:40:07] <dave0> i'm watching a speed run of super mario bros right now
[13:40:23] <moon-child> super mario bros is damn good
[13:41:43] <hayley> I wonder if it's like the PS3, where people use consoles for supercomputer clusters cause they're just cheaper.
[13:42:54] <hayley> Though I do have Smalltalk-80 running on a Wii, still.
[13:43:03] <moon-child> does windows (the os) have subwindows (as in windows contained within other windows)?
[13:43:17] <moon-child> I have a program running in wine which seems to have them, but it might be doing them itself
[13:43:26] <hayley> I believe so. At least a VB6 book I got ages ago told you how to do that.
[13:44:14] <moon-child> cool
[13:44:43] <hayley> Hm, while the Wii is 16 years old, last I checked, Smalltalk-80 is a few more than 16 years old. Maybe at least 18.
[13:45:41] <hayley> I don't take video games or gaming too seriously, but I can't resist the hardware jokes.
[13:50:01] <hayley> ...though I've heard manufacturers may make the money back on video games, but I can't imagine game sales making up much of the cost that the proclaimed gap in performance would have.
[13:52:19] <hayley> Actually funny that one guy I found saying that stuff had a NFT picture. I guess you'd have to believe in magic to have one of those, too.
[13:59:18] <dave0> how about some rock'n'roll? https://youtu.be/qFhM1XZsh6o
[13:59:19] -ixelp- Mountain - Mississippi Queen - YouTube
[13:59:49] <hayley> e.g.
[13:59:50] * hayley uploaded an image: (30KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/fEeOalHkxGxOkEGTWBHRejrt/Screenshot%20from%202022-03-02%2021-28-31.png >
[14:00:16] <hayley> I'm not sure where you recover $2500 to $3500 after selling the console. Shit ain't adding up.
[14:03:53] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Quit: Client closed)
[14:06:06] <hayley> OTOH I've never checked what the margins on computer hardware are like. It's quite possible that console manufacturers have drastically lower margins, and just go for sheer volume.
[14:06:41] *** Joins: kevingal (~quassel@149.157.101.155)
[14:06:58] <dave0> maybe they get a cut from each game that gets sold
[14:06:59] <gilberth> Isn't it that console manufactures don't make money with the consoles but with the content?
[14:07:10] <dave0> yeah ^
[14:07:51] <hayley> gilberth: Yeah, but if someone really claims that a $500 console has similar hardware to a $3000 PC, who the hell then buys $2,500 of games?  
[14:08:31] <gilberth> It's like with inkjet printers. They could actually give you the printer for free, if they wish. Also with those coffee makers taking these very environment friendly aluminum capsules with coffee costing more than twice the regular price.
[14:09:12] <gilberth> hayley: I doubt the console would outperform your $3k PC.
[14:09:23] <hayley> It's probably a combination of tighter margins, razor-and-blade, and blatant overestimation for ego by that weenie. But I struggle to tell how much is which.
[14:10:11] <gilberth> I still bet the margin on a console is non-positive.
[14:10:12] <moon-child> also some extent to which games hw-specific optimizations you will probably miss on a pc
[14:10:26] <hayley> gilberth: I'd have no idea how to test anything like that. Mostly cause I don't play games that are very demanding on hardware. (Minecraft and Garry's Mod run like shit irregardless of hardware. :)
[14:11:01] *** Quits: kevingal (~quassel@149.157.101.155) (Ping timeout: 240 seconds)
[14:11:31] <gilberth> Don't look at me. My wife got an WII in like 2010 or so. I was not impressed. Not a bit.
[14:11:43] *** Joins: kevingal (~quassel@2001:770:c0:401:add6:8ffb:dfb1:3ecf)
[14:11:55] <pl> hayley: most console vendors sell them below cost, and earn money in game licensing
[14:12:16] <gilberth> And that's the latest console, I ever saw. So I can't tell at all.
[14:12:33] <hayley> pl: I'd expect as much, but how much do they really recuperate per console? It can't be $2,500 surely. 
[14:12:35] <pl> the exception is *IIRC* Nintendo, and it's arguably part of why they don't try to hit high end market anymore
[14:12:40] <pl> oh, of course not
[14:12:49] <moon-child> I played factorio briefly, that can be hard on the cpu
[14:12:54] <moon-child> but it ran just fine on my craptop, sooo
[14:13:11] <hayley> gilberth: I got a Wii for M-x mas of 2007. As pl said, it's not supposed to be the best hardware. But it runs Smalltalk fine. 
[14:13:27] <pl> Steam Deck has comparable hw to current crop of consoles, slightly less capable but from related chip lines even
[14:13:53] <pl> moon-child: factorio heavily depends on what mods you have
[14:14:13] <hayley> drmeister once said he plays factorio in real life in his lab.
[14:14:16] <gilberth> hayley: Smalltalk ran on what hardware initially? That's not a benchmark :-p
[14:14:27] <moon-child> pl: mm, I did not play with any mods
[14:14:28] <hayley> gilberth: That's the joke.
[14:14:52] <pl> and is quite optimized, though not as crazy as Dyson Space Program (that doesn't mean either of them runs on slow hw, though factorio played quite well on x230 iirc)
[14:15:21] <hayley> Pity that the code I ported was itself a port of the Blue Book code, which only allows for 1MB or so of objects. When the Wii has a whole 64MB to use. 
[14:15:30] * moon-child writes: ‘The best anyone was able to come up with was a scheme for referring to the trigonometric functions by name, like plebian pointer-chasers’
[14:15:38] <pl> DSP is optimized for scaling, and uses some crazy GPU coding to get there, so you need beefy GPU for starters
[14:17:48] <hayley> Still, I don't really play any games seriously, I buy hardware for work (or, rather, I got it for M-x mas or birthday presents, but hopefully that will change soon). But I struggle to figure out how much more console manufacturers expect to be able to make from me while I have a console.
[14:18:11] <hayley> dave0: https://www.youtube.com/watch?v=O8ovERhq6uw
[14:18:12] -ixelp- Honest Government Ad | United Australia Party - YouTube
[14:18:50] <dave0> ah!
[14:22:59] <hayley> .oO(Well, end of the day for me, is the computer tax-deductible? But will I ever make enough to pay taxes even?)
[14:23:55] <dave0> honest ads has a lot of potty mouth
[14:23:58] <hayley> "If you use items for both personal and work-related purposes you need to keep records, such as a diary to show the purpose of use of the item. So that, if requested, you can show how you work out the amount of personal and work-related use." I probably use like 4 cores for personal use, and all 12 for work. Does that count?
[14:25:25] <moon-child> lol
[14:25:34] <hayley> "You can only claim the depreciation of your computer over the life of the equipment. The ATO states that the life of a computer is 4 years and 2 years for a laptop." Only 2 years for a laptop? Saying the part about build quality out loud, I see.
[14:26:41] <hayley> Not that I know the depreciation of it, either. Though I wrote an accounting program for beach in high school, and he mentioned depreciation calculations in passing.
[14:28:01] <hayley> Seems that depreciation is all the cost...maybe.
[14:28:46] <gilberth> It's the devaluation of the item because of wear.
[14:29:27] <hayley> I'm aware. But practically I don't expect a computer to wear out in 4 years, let alone 2.
[14:30:17] <gilberth> Yeah, but in general it is better for your cash flow to have a shorter depreciation period.
[14:31:29] * hayley nods
[14:31:44] <hayley> I'm aware that it's practically better, but it's silly otherwise.
[14:31:51] <gilberth> BTW for a long time computers here where 10 years. Which was hilarious in the 80s and 90s as Moore's law was still in effect and a machine two years old would be outdated.
[14:32:45] <hayley> I consider 5 years of use to be relatively closer to chasing new hardware than "average".
[14:32:53] <gilberth> hayley: It depends. On the other hand depreciation makes you poorer on paper.
[14:33:57] <hayley> The depreciation comes out of tax at the end of the day. So it's covering up some of a sunk cost.
[14:34:02] * ck_ is driving a rental car around
[14:34:07] <ck_> can't belive I used to think this was fun
[14:34:29] <gilberth> hayley: It changed over time. In the 80s and 90s a new machine really was blazing fast compared to the previous just 2yo machine.
[14:34:29] <hayley> Which is why, if I wanted to get a CS library for "free" from tax exemptions, I'd have to pay taxes first.
[14:34:40] * hayley nods
[14:36:42] <hayley> Though, this poses ship-of-Thesus problems about when I got the computer. I guess it would be better to track each component separately. And I would not want to count the time it was used as a dumb client for IRC, seemingly.
[14:37:26] <gilberth> No, it doesn't come out of tax. It's value that you lose. You buy something and it loses value over time. Taxes are not paid on what you earn but on what your property is worth this year compared to last year. At least when you're a company proper.
[14:38:18] <gilberth> Or put otherwise: When you buy a machine and it loses value, that is losses that could be subtracted from your earnings. And there is no negative tax.
[14:38:39] <hayley> Well, money spent on equipment for work here is tax deductible.
[14:38:58] <hayley> This at least includes reference books and computers, seemingly.
[14:39:20] <gilberth> No, you said you could depreciate a machine. That's not costs.
[14:39:38] <hayley> https://www.ato.gov.au/individuals/income-and-deductions/deductions-you-can-claim/other-work-related-deductions/books,-periodicals-and-digital-information/
[14:40:04] <gilberth> Paper is costs. Coffee may be costs. As is rent e.g.
[14:40:25] <hayley> I meant that, for expensive items, the deduction is done by depreciation, and not all at once.
[14:41:00] <gilberth> Yeah, but that is still different from costs.
[14:41:14] <hayley> https://www.ato.gov.au/individuals/income-and-deductions/deductions-you-can-claim/tools,-equipment-and-other-assets/ "You can claim a deduction for the cost over the life of the item (that is, decline in value), if the tool or equipment cost more than $300"
[14:41:16] <hayley> Sure.
[14:42:18] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[14:42:37] <gilberth> And for an item to be depreciated it does need to appear in your inventory.
[14:42:43] <hayley> Okay, I said "Seems that depreciation is all the cost...maybe." I meant that the deduction would cover the total price of the machine, over time.
[14:43:03] <gilberth> That is different from supplies like paper or ink, which doesn't need to pop up in your inventory.
[14:43:59] <gilberth> hayley: It's what the item loses in value over time.
[14:44:05] <hayley> Yes.
[14:44:34] * hayley wonders what the depreciation period for a $301 GC Handbook would be. Until it rots?
[14:45:13] <gilberth> It's more like, when you buy a machine for $1000, you're net worth hasn't changed. But your net worth will decrease while your asset loses values.
[14:48:43] <hayley> Right.
[14:49:19] <hayley> I get the idea of depreciation, but I am trying to figure out how the government wants me to compute it for various things.
[14:49:21] <gilberth> hayley: I got my copy for EUR 73.87.
[14:49:40] <gilberth> So as it raises in value => no devaluation :-)
[14:49:41] <moon-child> hayley: until the algorithms it describes are outdated, I guess
[14:50:33] <hayley> moon-child: I dunno, some people struggle to understand that Dijkstra et al of 1978, or Doligez and Leroy of 1994 exist.
[14:50:56] <moon-child> ¯\_(ツ)_/¯
[14:50:56] <gilberth> I also got a copy of Lisp Lore for just EUR 61.36. I should invest in books :-)
[14:51:12] <hayley> Until then, they are not outdated.
[14:51:53] <hayley> (IOW some people struggle to understand concurrent tracing collectors exist, though they are decades old.)
[14:54:29] <hayley> (Ironically I still consider experimenting with ulterior reference counting. The write barrier is basically comparable to that for a concurrent mark-sweep, if you think about it.)
[14:57:29] <moon-child> I do the opposite: dare to make an apl without pervasive reference counting (I still reference count arrays)
[14:58:04] <moon-child> interesting split.  k dude: 'mutability is bad because it requires gc'.  bqn dude: 'mutability is good, so let's gc'.  me: 'mutability is bad, but I need gc to make bigints fast'
[15:02:35] <hayley> Despite the best wishes of gilberth, I suspect that RC for the old generation might work out just fine. And you already scan the stack for each minor GC, so just remember to process increments and decrements for deferred RC, and you will reclaim some old heap too.
[15:02:53] <hayley> Why for bigints?
[15:06:12] <moon-child> I use a lispy tagging scheme.  Assuming bigints are sparse works when doing arithmetic.  But when selecting, would rather skip the branches (and extra memory traffic) entirely
[15:06:47] <moon-child> also: operating in-place on bigints is not really profitable unless you are abusing them as bitarrays.  And I have real bitarrays, so it is not worthwhile
[15:07:26] <moon-child> and I would like a tracer for integrity testing anyway
[15:07:35] <hayley> I see.
[15:08:28] * hayley reads "As the heap shrinks, RC degrades more rapidly than MS [as] pause time guidelines prevent it from reclaiming cyclic garbage promptly"
[15:09:14] <hayley> Now, wouldn't it be funny if I over engineered and had deferred RC with concurrent mark sweep to handle overflowed counts and cyclic garbage?
[15:10:55] *** Joins: random-nick (~random-ni@87.116.167.125)
[15:12:54] <hayley> But, really, it should not be much slower than a stack (and nursery?) crawl to work out what's garbage with deferred RC. The same can be said for phase changes in concurrent tracing collectors (unless they are properly on the fly, and/or scan the stack incrementally).
[15:15:09] <hayley> That said, I don't think you can sweep lazily, because deferred RC basically corrupts counts temporarily, to add in stack->heap counts. It then fixes so that it only counts heap->heap afterwards. So I could only defer by building up a bitmap of objects to free, which is surely not fast without SIMD and move-mask.
[15:29:35] *** Quits: Brucio-61 (~Brucio-93@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[15:29:51] *** Quits: scymtym (~user@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[15:37:40] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[15:38:32] <hayley> Well, I can defer some work; I can free a bounded amount, and then mark anything previously reachable with RC=0 for freeing later. But not transitively, as you could with immediate RC. Pity.
[15:41:09] * moon-child wonders if hayley intends to compact her rc-system, and considers linking jvm dude
[15:43:47] <hayley> As the JVM dude said, compacting in the nursery is half decent.
[15:44:06] <hayley> Ulterior RC is copying nursery, and deferred RC tenured space.
[15:44:58] <moon-child> you are content to settle for only half decent?
[15:46:12] <hayley> I don't know yet. It might end up being a more general mark-sweep-compact, with deferred RC taking pot shots at dead acyclic objects. But I would like an incremental tenured space collector.
[15:47:27] * moon-child nods
[15:47:40] <hayley> There is more recently also rcImmix, just to add to the fun. But I only know how to do incremental compacting with a read barrier, the G1 way, or the Train way.
[15:49:09] <moon-child> it seems to me that, to collect cycles, you will need an unbounded pause eventually, or else a (write) barrier (depending on if mark-sweep is also incremental)
[15:49:43] <moon-child> assuming you don't want the former, write barrier seems like less work than rc
[15:50:19] <hayley> Ubuntu 15.04 on an electronic ad board: https://twitter.com/BristolAFed/status/1498994024501460995
[15:50:46] <moon-child> (or maybe not; maybe rc keeps the interval between pauses high enough that it doesn't matter)
[15:51:11] <hayley> Yeah, but I also wouldn't mind having some more immediate reclamation for the easy stuff, i.e. the "taking pot shots" claim.
[15:52:29] <hayley> But, either way, I'd also use generational GC and/or stack allocation, which also reduce the need for collecting tenured space. Though incrementally collecting tenured objects is a big deal still.
[15:54:35] <moon-child> ideally a lot of the easy stuff could be taken care of with static lifetime analysis.  Especially if devirtualization is possible.  If you care to reclaim early, interesting would be a dual to partial escape analysis: if it's considered likely something escapes, heap-allocate it but insert an explicit free call in the path where it doesn't escape
[15:55:10] <moon-child> my impression of stack-based allocation is it's really cool but infeasible without special hardware :/
[15:56:36] <hayley> There was a paper on "leaky regions" for C# which argued that the GC time and space savings made up for the barrier. And gilberth apparently has similar "stock hardware is fine" experiences with cdr-coding and caches.
[15:57:46] <hayley> You can sorta say the same thing for logging old->new pointers in generational GC. Dave Moon didn't think it'd be fast enough on stock hardware (though, the lispm also used read barriers for incremental copying too, but I believe he was talking about Dave Ungar and Berkeley Smalltalk).
[15:58:41] <moon-child> I haven't thought about the problem, so maybe there is a clever way to do it.  But my impression is stack-based allocation requires a more complex barrier than normal gc.  And normal gc is pretty fast
[15:58:48] *** Joins: scymtym (~user@2001:638:504:20e6:6ac3:87e0:e782:f3fc)
[15:59:07] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[15:59:55] <moon-child> (well, 'normal'.  Semispace nursery, 2 or so generations)
[16:01:41] <hayley> Sure, it is harder. For x := y you first test if x > y (assuming x86 which grows downward), and if so, you then compare stack frames to see if they are in the same frame, or check if x is in the heap. If not, you evacuate somehow.
[16:02:26] <hayley> One also sees the GC heap as just a really old stack frame, and puts the heap addresses higher than the stack accordingly.
[16:03:00] <moon-child> I thought the idea was to make stack frames indirect
[16:03:06] <moon-child> so you can allocate in someone else's stack frame
[16:03:16] <moon-child> well, I guess you can play virtual memory tricks and do that anyway
[16:03:18] <hayley> But the theory is that you avoid cache misses, and also avoid tracing work, so you can still win in the end.
[16:03:53] <hayley> You can do that, too. The reference to x86 was just so that I didn't have to say top or bottom of the stack, or hot or cold ends, or something :)
[16:05:18] <moon-child> I just mean that, modulo virtual memory tricks, you wouldn't have such an ordering guarantee
[16:05:30] <hayley> Right.
[16:05:44] <moon-child> the efficacy of virtual memory probably depends on how deep the stacks get, and how much variance there is in stackframe-size
[16:07:09] <hayley> Oh, I've seen systems where you can allocate into a frame that isn't the current one, but that's not what I am thinking of. Though the C# paper maintains a separate "page table" of sorts for the stack regions.
[16:08:15] <moon-child> oh!
[16:08:37] <moon-child> apropos of nothing, I thought of a dirty trick to avoid scanning the whole stack in a satb concurrent gc
[16:08:59] <moon-child> basically the same as the signal trick
[16:09:38] <hayley> I would go for something like Baker, in that you can allocate in the current frame, in the heap, and a function can merge frames when it's done with one (which might accumulate garbage though), as well as evacuating to the heap.
[16:13:25] <hayley> Just stack, heap, and sharing frames might suffice for a decent stack allocator though. If objects escape when returning from a function, just disable making the frame that they came from. If they escape further, then allocate in the heap instead.
[16:14:35] <hayley> So, let's see this GC strategy: stack regions for very new objects, compacting nursery for new-ish objects, deferred RC for old and easy to kill objects, and mark-sweep-compact for old and hard to kill objects. Not over-engineered at all.
[16:14:58] * hayley off to bed, 11:44pm
[16:41:03] *** Joins: eugercek (~user@user/eugercek)
[16:42:31] <shka> Russians are using open com in the Ukraine apparently 
[17:21:12] <pl> I bet the encrypted comms manifested as someone's dacha 
[17:23:16] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[17:23:37] <pl> https://twitter.com/obserwator_007/status/1499004730965696512 rouble exchange rate 
[17:27:16] <pl> ... Sberbank hit the ground so hard financial charting software predicts negative prices 
[17:28:05] <pl> Ahh, no, it just looked like that because of how the negative change equaled previous value XD
[17:28:13] <shka> well, sadly Ruble didn't loose even 50% of it's value yet
[17:28:34] <shka> but here is hoping
[17:29:17] <shka> also, that Ukrainian was not kidding, if Russian tanks are on open coms they will really get fucked with javs 
[17:29:20] <shka> big time
[17:30:32] <shka> and I think that tankers now that too
[17:37:59] <pl> Ukraine seems to prioritise fuel and other supplies
[17:38:07] <pl> also hitting moving SAMs
[17:38:50] <shka> SAMs are a weird one to me, they shouldn't have air force by now, do they expect NATO to fly in?
[17:39:17] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Remote host closed the connection)
[17:40:16] <pl> shka: they managed to save the air force
[17:40:23] <shka> how?
[17:40:42] <shka> also, Russians also have fighters
[17:40:45] <pl> shitty airstrikes with cruise missiles and no direct bombing runs
[17:40:57] <pl> meanwhile Ukraine is crawling with MANPADs
[17:41:24] <shka> though Russian air force looks surprisingly weak all things considered
[17:41:27] <pl> Hell, Poland should make ads about Piorun based on this conflict
[17:42:10] <pl> shka: the priority air forces aren't taking part in this conflict as there's no need for nukes yet, supposedly some of the early missile strikes were done with bombers though
[17:42:52] <shka> "Piorunem i Jawelinem" sounds like a new classic
[17:42:55] <pl> Russian planning... wasn't
[17:43:04] <pl> shka: have you heard the Bayraktar song?
[17:43:09] <shka> yes
[17:43:34] <shka> Turks are gonna sell so many of those bad boys now
[17:44:48] <shka> it worries me 
[17:45:01] <shka> Russians are still progressing, all be it slowly
[17:47:05] <pl> the jokes about stopped convoys are also lol
[17:47:39] <pl> "when your convoy stops in the woods and the forest starts whispering in Ukrainian" "With occassional `perkele` thrown in"
[17:48:26] <shka> javelin has up to 4 km range 
[17:48:53] <shka> and yeah, it is overkill against the trucks... but you do what you must i guess
[17:49:53] <pl> unarmed trucks seem to get Bayraktar or less exotic ammo
[17:50:14] <pl> NLAWs & Javelins are eating the armored vehicles
[17:50:33] <shka> yeah, those should be used sparingly 
[17:50:44] <shka> they don't have unlimited supply 
[17:54:43] <selwyn> i really don't know how effective turkish military hardware will prove against a superpower
[18:27:43] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[18:27:45] <pl> selwyn: it proves pretty damn good
[18:42:12] <shka> gazprom market capitalization lost 99% 
[18:42:22] <shka> and lukoil... 99.7%
[18:43:37] *** Joins: Brucio-61 (~Brucio-3@2001:638:504:20e6:6ac3:87e0:e782:f3fc)
[18:47:39] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[18:48:40] <gilberth> Nord Stream 2 is bankrupt. The US has what they wanted.
[18:50:47] *** Quits: kevingal (~quassel@2001:770:c0:401:add6:8ffb:dfb1:3ecf) (Ping timeout: 256 seconds)
[18:51:48] <selwyn> hm
[18:51:54] <selwyn> well, the infrastructure is still there
[18:52:50] <gilberth> Yes, but it will never be used. And btw who owns it, if the company is bankrupt?
[18:53:33] <gilberth> Or: Who in their right mind would buy the pipe line?
[18:54:14] <shka> well, i for one i am glad that this turned this way
[18:54:51] <shka> but i am what you call "russophobe"
[18:54:58] <tyson2> perhaps the pipeline could be reversed and used for sewage management
[18:55:08] <selwyn> shka: you shouldn't be
[18:55:22] <shka> selwyn: i disagree
[18:55:25] <selwyn> america led ukraine on with promises of nato membership with no intention of helping them out
[18:55:28] <selwyn> now they are in the shit
[18:55:39] <shka> selwyn: please, check your timeline
[18:55:40] <selwyn> and we can all end up paying more for gas (which is still flowing)
[18:56:11] <tyson2> plenty of gas available in Germany, just have to get used to developing it
[18:56:16] <shka> what you said is simply not true
[18:56:43] <shka> selwyn: the timeline was as follows:
[18:56:54] <gilberth> selwyn: Yes, and this will get interesting when people can't effort to heat their homes.
[18:56:57] <shka> 2004 orange revolution
[18:57:09] <Gnuxie> <pl> "selwyn: it proves pretty damn..." <- yeah, Turkey has been sticking their nose into everything
[18:57:16] <shka> 2008 Russia attack georgia
[18:57:40] <shka> later, same year, Ukraine asks for NATO membership in reaction to NATO aggression
[18:58:18] <shka> 2009 Bucharest summit, NATO refuses to progress with accepting ukraine into NATO to appease Putin
[18:58:34] <shka> 2012 Gas reserves discovered in Ukraine
[18:58:49] <shka> 2014 Euro-maidan
[18:59:14] <shka> later, same year, Crimea and separatists republics  
[18:59:36] <shka> Ukraine considers itself to be threatened, asks again for NATO membership
[18:59:48] <shka> 2022 Russian invasion of Ukraine
[19:00:44] <shka> selwyn: in other words, it was simply about having option of conquering Ukraine in military action on the table 
[19:02:22] <gilberth> This sounds like it's about natural gas. Hmm.
[19:03:06] <selwyn> my point is that the anglo world never had any intention of helping ukraine out
[19:03:28] <selwyn> there is a video out there of a ukrainian journalist begging the uk to set up a fly zone and the reply is 'no'
[19:04:18] <selwyn> as such, it wasn't right to lead ukraine on with these promises, and tbh it was foolish of ukrainian leadership to take them seriously
[19:04:25] <tyson2> a no-fly zone raises possibility of global conflict
[19:04:57] <tyson2> the ukrainians will eventually take more advantage of anti-tank weapons and stingers
[19:05:06] <tyson2> they are holding off for strategic reasons
[19:06:18] <tyson2> I give the Ukrainians a lot of credit for what they have done so far
[19:07:10] <shka> gilberth: it is 50% of Russia's budget, so yeah, big factor
[19:09:12] <shka> you can say that every second artillery shell has been bough with petrodollar
[19:09:39] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Quit: Leaving)
[19:10:13] <shka> selwyn: anyway, just don't buy this whole "evil NATO expansions" bullshit from Russia
[19:10:42] <shka> it SOUNDS plausible, but it confuses cause and effect
[19:11:11] <ck_> fly zone, or no fly zone?
[19:12:35] <gilberth> shka: Sad. So much for our Green party and the anti-nuclear movement. Congrats!
[19:12:36] <shka> nuclear annihilation is helluva of a deterrent 
[19:13:29] <shka> i honestly wouldn't be all that surprised if all of that is not reconsidered now
[19:13:54] <shka> Germany has made some massive U-Turn
[19:14:01] <tyson2> Germany has agreed to spend 4% of GDP on defence
[19:15:23] <gilberth> Yep, with luck we get something like an army. Who knows?
[19:15:54] <tyson2> I've seen that movie before
[19:25:38] <gilberth> The local political U-turn is that the Green party says that they don't care about the climate. Not that that would be news. It's only getting obvious now. But that is my very personal unimportant view here.
[19:25:51] <selwyn> the german green party are atlanticists first
[19:27:06] <gilberth> Yep, there are.
[19:27:14] <gilberth> they, rather
[19:27:14] <selwyn> otoh nuclear will come back
[19:27:32] <gilberth> I very much doubt that.
[19:30:08] *** Quits: sp (~sp@user/susam) (Quit: You have been kicked for being idle)
[19:32:42] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[19:33:04] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[19:33:47] *** Joins: sp (~sp@user/susam)
[19:37:55] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 240 seconds)
[19:53:03] <shka> well, it may return in france, and germany will simply start buying more power from them
[19:53:54] <shka> Frenchman seem to appreciate the nuclear even more recently
[19:54:01] <shka> i am not surprised about that
[19:54:52] <shka> you obviously know my personal position on nuclear power
[19:55:06] <shka> and in Europe it seems to be really the only option left
[19:56:29] <ck_> "once ITER is up and running..."
[20:01:40] <pjb> shka: for now, it's only lights and shadows.  The current puppet indeed talked about new nuclear plants, but after closing M plants, building n<<M new plants is not an increase or rebound!
[20:02:54] <shka> pjb: i personally think that it should be compared in terms of projected power output
[20:03:03] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[20:03:29] <pjb> shka: in France we currently have about 60% of electricity coming from nuclear power plants.   Electricity is about half the energy consumption (the other half is carbon-based).  So we'd need to (/ 1 (* 0.6 0.5)) #| --> 3.3333333 |# 3.3 times the nuclear power plants. We'd need to triple the current park.
[20:03:52] <pjb> If you want to replace ICE cars with EV cars…
[20:04:03] <shka> well, it is actually doable
[20:04:10] <pjb> Not so fast.
[20:04:10] <shka> as crazy as it sounds
[20:04:23] <pjb> We've lost know how. We don't have enough nuclear engineers anymore to do it quickly.
[20:05:10] <pjb> And the school system is so degraded, with immigration and bad schooling, that we don't even have the number of good enough pupil to enter the studies immediately.
[20:06:40] <pjb> We'd need an education system reform (basically go back to the 60's), wait 20 year for the new pupils to go thru, then we can start educate the nuclear engineers we need (25 years), and then we can start planning and building the needed nuclear power plants (10 years more). So we won't have the plant to replace CO2 emiting energy sources before 35 years.
[20:07:11] <pjb> It's actually a decision that has been made in the 70s, to break and destroy our countries.
[20:07:36] <pjb> (if it wasn't, we'd already have thee nuclear power plants, and solar farm in the Sahara).  Now it's too late.
[20:07:42] <tyson2> can't nuclear engineers immigrate from Russia? Oh wait...
[20:08:02] <pjb> The plan is th reduce world population to 500,000,000 (for that number, we have enough nuclear power plants worldwide).
[20:08:06] <shka> tyson2: nah, engineers of all kind are in short supply in Russia
[20:08:10] <pjb> tyson2: :-) right.
[20:08:30] <shka> and teachers for that matter
[20:08:33] <shka> and doctors
[20:09:38] <pjb> https://en.wikipedia.org/wiki/Georgia_Guidestones
[20:09:46] <gilberth> Is there any place where engineers are not a scarcity?
[20:10:07] <tyson2> Egypt
[20:10:09] <pjb> Indeed. We already have 2nd generation teachers who can't read and write French correctly anymore, so how could they teach it?
[20:10:16] <pjb> gilberth: China.
[20:11:33] <pjb> This is why, if I had children, I'd emigrate to Russia.  It's the only sustainable country for this century.
[20:22:02] <gilberth> pjb: You believe so? Even at these times?
[20:22:43] <shka> gilberth: i think that pjb was considering purely russia geography and resources
[20:22:57] <shka> or what germans used to call LIVING SPACE
[20:23:04] <shka> :P
[20:23:16] <pjb> gilberth: Yes, even considering the current events. 
[20:23:24] <pjb> Of course, it may make migration more difficult…
[20:23:24] <selwyn> russia is a big country that exports oil gas and wheat
[20:23:47] <shka> europe all exports food products
[20:23:48] <ck_> and astronauts
[20:23:48] <pjb> selwyn: well, that could export, as long as they had banks in the swift system to receive payment…
[20:23:52] <shka> and lot's of it
[20:23:53] <selwyn> would guess that it can ride out the sanctions
[20:24:14] <pjb> shka: well, no, they've broken our countries, we're not food-self sufficient anymore.
[20:24:26] <ck_> who is 'they'?
[20:24:27] <selwyn> shka: can europe replace russia as a wheat exporter
[20:24:33] <pjb> We may still export wine and cheese to rich Chinese, but we need to import our food now.
[20:24:44] <shka> ck_: jews, you are new to pjb? :P
[20:24:50] <selwyn> countries like egypt and turkey can't get wheat in such quantities
[20:25:08] <selwyn> from anywhere else
[20:25:10] <shka> selwyn: we have massive global food surplus 
[20:25:34] <White_Flame> if everybody just went gluten-free, we wouldn't have wheat shortages \:D/
[20:25:40] <shka> so i wouldn't worry about that
[20:25:48] <pjb> shka: it's not helping, if you don't want to emit CO2 while transporting this food all over the plane!
[20:25:51] <pjb> planet
[20:26:04] <pjb> you need local production.
[20:26:44] <pjb> White_Flame: you'd have corn shortages…  gluten-free is just a fad to promote corn over wheat.
[20:26:48] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[20:27:12] <ck_> you probably never need sunglasses, huh?
[20:27:30] <ck_> because everything is so doom and gloom all the time
[20:27:42] <pjb> I'm just realist.
[20:28:16] <pjb> But granted, you can say that I didn't do much to help avoid the situation.  At least, Elon Musk is building rockets to go to Mars…
[20:51:40] <drakonis> which only the wealthy will be able to use to escape earth once it becomes impossible to live in
[20:52:44] <shka> i have no idea wtf you would have to do to earth to make mars a better alternative
[20:52:54] <selwyn> mars sucks
[20:53:06] <selwyn> venusian sky would be more fun at least
[20:53:23] <drakonis> heat up earth so much that poles melt
[20:53:36] <shka> drakonis: nope
[20:53:49] <drakonis> poison the air so much that people need filters to breath it
[20:53:57] <selwyn> mars doesn't even have air
[20:53:58] <shka> still nope
[20:54:34] <shka> air pressure on the mars surface is like air pressure in earth stratosphere iirc
[20:54:41] <pjb> Mars better suck.  This motivates us to build the technology to be self-sufficient in space.  It's only a stepping stone to go farther, in the solar system and in the galaxy.
[20:55:35] <clothespin> nobody ever puts an emphasis on debugging when talking about being a programmer
[20:56:20] <gilberth> clothespin: Heh, true. That are the less glory details.
[20:56:41] <drakonis> to be fair, i know that mars is a terrible place to live in
[20:56:55] <drakonis> but the current obsession is with escaping a dying earth to another planet
[20:56:58] <clothespin> they should have a major in college called debugging
[20:57:03] <drakonis> no matter how insufficiently livable it is
[20:58:05] <selwyn> drakonis: and it sucks
[20:58:12] <drakonis> indeed
[20:58:19] <selwyn> i can't believe rich people are spending their fortunes on this stuff
[20:59:02] <pl> gilberth: gas was always a factor with Ukraine, because one of the main pipelines goes through there 
[20:59:34] <shka> also, one more thing
[20:59:40] <gilberth> clothespin: Well I don't know. As a child I started with electronics first and only then got into hacking. I enjoyed hacking more because my SW debugging talent by far surpasses my HW debugging skills.
[20:59:49] <pl> That's why Nord Stream was always so divisive in Poland as well - so long as both pipelines supplying Germany went through Poland, Germany wouldn't just drop us 
[20:59:52] <shka> majority of russian gas comes into germany via Poland
[21:00:16] <shka> and we were using about 1/3 of that pipeline capacity 
[21:00:36] <gilberth> pl: Yeah, I figure that. I fear that all this Nord Stream kindergarten plays a role too.
[21:00:39] <pl> shka: also, you forgot 2004 — Orange revolution, switching to more pro-EU direction after dropping off Moscow/oligarch associated Kuczma 
[21:00:48] <shka> pl: i did not
[21:01:12] <pl> Ahh, I missed it 
[21:01:23] <shka> this year it was planed to open the gas port in Poland and the baltic pipe
[21:01:49] <shka> delays happen and we are behind the schedule, but that's not important
[21:02:04] <pl> Also, Revolution of Dignity aka Euromaidan involved Putin trying to reverse Orange Revolution as a whole 
[21:02:10] <shka> what is important is that the plan was for Poland to be 100% gas independent from Russian in the 2022
[21:02:40] <shka> and that gas pipeline coming through Poland which i mentioned earlier
[21:03:21] <gilberth> Yep, and plan for Germany was to be more dependent on Russian gas.
[21:03:39] <pl> shka: except we get Russian gas through the gas port 
[21:03:56] <shka> well, that additional 1/3 capacity would be free for germany to use, but also it just happens that the deal we had with Russians was allowing for almost tariffs free transfer into germany
[21:04:11] <shka> and that deal was about to end in 2022 as well
[21:04:18] <gilberth> Which always is ironic given that the green party is in part responsible for that move, although being very pro-US.
[21:04:34] <shka> also, Poland was trying to connect ukraine into Polish gas system
[21:04:55] <gilberth> shka: Where would your gas come from?
[21:05:01] <shka> from that gas port
[21:05:17] <gilberth> Well, and who would deliver gas there?
[21:05:36] <shka> and in the future, reverse could be possible: ukraine could supply us with gas
[21:06:02] <shka> gilberth: Qatar, USA, anyone really, ships don't care
[21:06:13] <shka> also, Norway via the baltic pipe
[21:06:47] <shka> so in nutshell, yes it is simply a gas war
[21:07:00] <gilberth> That's sad.
[21:07:35] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Ping timeout: 256 seconds)
[21:08:27] <shka> so anyway, people are usually not aware of this but in Poland we considered gas to be critical part of the infrastructure
[21:08:37] <shka> we are just not very good at meeting deadlines :P
[21:08:58] <gilberth> Who is these days? But China perhaps.
[21:09:47] <shka> but we were very active in this regard, and honestly, if global trends would continue, it is possible that Germany would be supplied by cheaper gas from the US
[21:09:57] <shka> or Ukraine even
[21:10:29] <shka> so Russia may came to conclusion that this is the last chance to act
[21:11:19] <gilberth> Hmm.
[21:11:20] *** Joins: kevingal (~quassel@2001:770:c0:401:a866:b37a:2932:9f63)
[21:11:45] <shka> and the only important bit about NATO here is that if not for 2009 ukraine would be in the alliance and all of this would not happen
[21:11:51] <Gnuxie> selwyn: oh shit looks like bald was actually there 
[21:11:54] <Gnuxie> haven't watched the video yet 
[21:12:02] <gilberth> But this doesn't make sense. After this aggression, who wants to buy Russian gas anymore?
[21:12:50] <shka> instead ask yourself, how previous attacks worked out for Russia?
[21:13:01] <shka> Georgia? Slap on the wrist.
[21:13:11] <shka> Crimea? No biggy.
[21:13:54] <shka> so I think that they expected that this war would take 1 week top and in 3 to 4 years it would be back to business as usual
[21:14:41] <gilberth> That didn't work. A week passed already.
[21:14:58] <shka> yeah
[21:15:09] <shka> and the russian chief of staff was dismissed
[21:15:18] <shka> so that clearly shows that plan has failed
[21:15:49] <shka> and the rest of the world, in practice started to wage hybrid war against the Russia
[21:15:57] <shka> like Russia did with Ukraine
[21:16:42] <shka> anyway, that was the plan, but plans not always work out perfectly fine 
[21:16:47] <selwyn> as i said before the war
[21:16:57] <selwyn> russia has plenty of friends and customers around the world
[21:16:58] <gilberth> Yep, and where will it end? WWIII?
[21:17:18] <selwyn> china and india won't sanction russia, and this is already 1/3 of the global population
[21:17:23] <selwyn> the world is not the usa and europe
[21:17:46] <shka> selwyn: don't call it friends
[21:17:49] <shka> just costumers
[21:17:56] <selwyn> well, ok
[21:18:11] <selwyn> of course no state has 'friends'
[21:18:19] <shka> gilberth: i have no idea, it all depends on the russia side of equation
[21:18:57] <shka> if putin would die today, i suspect that this whole war would be stopped tomorrow
[21:19:19] <gilberth> shka: I don't know either. I have no clue. Somehow I am not even scared, which is strange.
[21:20:07] <shka> otherwise, it looks like Putin is willing to sacrifice huge fraction of Russia's military in Ukraine
[21:21:21] <gilberth> I fear that Putin sees himself on a path with no return.
[21:21:27] <shka> and Russia's society is weak
[21:21:54] <shka> state is also weak, but society has been intentionally devastated 
[21:22:57] <gilberth> I mean, retreat now would be a failure. Bad for someone with little self-esteem.
[21:22:59] <pjb> shka: We have no way to know anything real from here.  They could just play poker, not showing their cards.  Indeed, perhaps they sent newbies telling them it was an exercise. Perhaps because they're incompetent, perhaps on purpose to puzzle NATO.
[21:23:26] <shka> pjb: no dude, this is how this army and state as a whole works 
[21:24:07] <shka> and their trump card is just massive firepower of artillery 
[21:24:41] <shka> the whole doctrine they had is to simply obliterate anything in their way
[21:24:58] <shka> and they don't need highly trained infantry to do so
[21:26:51] <shka> also, they are not above pulverizing whole cities
[21:27:09] <shka> so I am worried about this whole situation to say the least
[21:29:05] <shka> the one drawback of this doctrine is that Russians need a lot of supply to move around
[21:29:40] <shka> because 3 times the artillery US Army usually have  
[21:32:11] <shka> so in summary, if you thought that USA invasions are barbaric and overkill, you've seen nothing of what Russia is actually like
[21:54:39] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Remote host closed the connection)
[21:55:29] <selwyn> gnuxie: yeah he was there
[22:01:28] <selwyn> doing better journalism by accident than the entire british press
[22:11:35] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[22:48:31] <shka> https://www.youtube.com/watch?v=qYVsKoQXATY
[22:48:32] -ixelp- The former Soviet leader Mikhail Gorbachev full interview - BBC News - YouTube
[22:55:14] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[23:56:12] *** Quits: Posterdati (~posterdat@host-87-20-238-140.retail.telecomitalia.it) (Changing host)
[23:56:12] *** Joins: Posterdati (~posterdat@user/Posterdati)
