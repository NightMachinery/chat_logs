[00:00:08] *** Joins: Rashad (~textual@2a01:9700:131e:a000:8405:e0d5:e8f7:119d)
[00:04:54] *** Quits: Rashad (~textual@2a01:9700:131e:a000:8405:e0d5:e8f7:119d) (Ping timeout: 252 seconds)
[00:05:40] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[00:10:12] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:e5fe:8c5:2a77:336e) (Quit: Client closed)
[00:18:33] *** Quits: AmR (~AmREiSa@102.44.191.232) (Quit: Konversation terminated!)
[00:18:58] *** Joins: acidjnk (~acidjnk@p200300d0c7057581091bb45d0bf1cd2b.dip0.t-ipconnect.de)
[00:23:49] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[00:29:43] *** Quits: wyre (~wyre@user/wyre) (Quit: ZNC 1.8.2 - https://znc.in)
[00:31:39] *** Joins: wyre (~wyre@user/wyre)
[00:31:51] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[00:32:23] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[00:32:43] *** Joins: ckdCreations (~ckdCreati@147.55.133.131)
[00:33:58] *** Joins: Rashad_ (~textual@2a01:9700:131e:a000:380e:f024:1b6f:38bb)
[00:37:29] *** Joins: funhouse (~funhouse@user/funhouse)
[00:43:39] *** Quits: magga (magga@ti0036a400-3577.bb.online.no) (Remote host closed the connection)
[00:52:37] *** Joins: chronon (~chronon@user/chronon)
[00:54:22] *** Quits: kristijonas (~kristijon@81-7-103-234.static.zebra.lt) (Ping timeout: 272 seconds)
[01:02:56] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:5a6:fa3c:5451:e16b)
[01:08:28] *** Joins: kristijonas (~kristijon@81-7-103-234.static.zebra.lt)
[01:11:28] *** Quits: kristijonas (~kristijon@81-7-103-234.static.zebra.lt) (Remote host closed the connection)
[01:12:39] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[01:32:45] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[01:38:51] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:e5fe:8c5:2a77:336e)
[01:53:29] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[01:54:04] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[01:54:21] *** Quits: Rashad_ (~textual@2a01:9700:131e:a000:380e:f024:1b6f:38bb) (Ping timeout: 252 seconds)
[02:02:24] *** Quits: Jigsy (~Jigsy@user/jigsy) (Ping timeout: 250 seconds)
[02:04:11] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[02:11:24] *** Joins: Jigsy (~Jigsy@user/jigsy)
[02:16:18] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[02:58:01] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:58:02] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[03:13:53] *** Quits: acidjnk (~acidjnk@p200300d0c7057581091bb45d0bf1cd2b.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[03:16:24] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[03:30:46] *** Joins: m1k3 (~mike@user/m1k3)
[03:33:21] *** Quits: hirogen (~hirogen@user/hirogen) (Ping timeout: 252 seconds)
[03:36:26] *** Joins: k8yun (~k8yun@user/k8yun)
[03:40:30] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 252 seconds)
[03:44:05] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[03:48:41] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[03:53:01] *** Joins: nilson (~nilson@2601:c4:c430:c90:4601:bbff:feaf:9214)
[04:06:25] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:5a6:fa3c:5451:e16b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:11:22] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:5a6:fa3c:5451:e16b)
[04:39:06] *** Quits: nilson (~nilson@2601:c4:c430:c90:4601:bbff:feaf:9214) (Quit: Leaving)
[04:43:30] *** Joins: justyb11 (~justyb@64.253.212.72)
[04:45:22] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[04:49:24] <justyb11> T-SQL: Quick question.  Looking at a script with EXEC('{CALL USRRPT.SNDNOTF}') AT AS400DB  However, never seen the {} inside the command text.  Runs fine, just not seen that before and wondering it's use.  Sorry if not right channel.
[04:49:56] <thumbs> justyb11: what rdbms?
[04:52:03] <justyb11> thumbs, Well this is a MSSQL 2016 but the SP is on DB2 AS400 7.3
[04:52:25] <justyb11> thumbs, However, I think I already found the answer.
[04:52:48] <justyb11> thumbs, Just stumbled over a part in the AS400 technical manual.
[04:53:10] <justyb11> > curly braces around the stored procedure call for the IBMDASQL driver to return the result set
[04:53:25] <justyb11> So apparently it's something the driver requires.
[04:53:48] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[04:54:22] <justyb11> Been reading through this thing for like twenty minutes and the second I get on IRC, boom, hit the section related to what I need.  Figures.
[04:59:57] *** Joins: bpmedley_ (~bpmedley@2600:1700:e2c:8410:a11b:dff5:39c9:bc45)
[05:02:57] *** Quits: bpmedley (~bpmedley@2600:1700:e2c:8410:e438:c47c:d7b4:3864) (Ping timeout: 240 seconds)
[05:19:04] *** Joins: mkultra (~mkultra@user/mkultra)
[05:32:22] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:e5fe:8c5:2a77:336e) (Quit: Client closed)
[05:35:24] *** Quits: MrZeus__ (~MrZeus@185.248.85.38) (Ping timeout: 240 seconds)
[05:43:41] *** Joins: karakedi (~eAC53C340@user/karakedi)
[06:12:03] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Ping timeout: 256 seconds)
[06:18:00] *** Quits: Sleepy63 (~Sleepy63@user/sleepy63) (Ping timeout: 272 seconds)
[06:29:18] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[06:32:06] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 252 seconds)
[06:43:29] *** Quits: millido (~millido@84.210.150.128) (Read error: Connection reset by peer)
[06:51:14] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[06:56:37] *** Joins: k8yun (~k8yun@user/k8yun)
[06:57:56] *** Joins: millido (~millido@84.210.150.128)
[06:57:57] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 240 seconds)
[06:58:38] *** Joins: cliluw (~cliluw@47.147.73.223)
[07:05:14] *** Quits: mkultra (~mkultra@user/mkultra) (Remote host closed the connection)
[07:07:31] *** Joins: Emet-Selch (~haise01@user/haise01)
[07:10:29] *** Quits: Azem (~haise01@user/haise01) (Ping timeout: 250 seconds)
[07:11:24] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:5a6:fa3c:5451:e16b) (Ping timeout: 240 seconds)
[07:12:26] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:5cbe:f31d:a30b:eccd)
[07:12:38] *** Joins: Sleepy63 (~Sleepy63@user/sleepy63)
[07:52:13] *** Quits: reset (~reset@user/reset) (Quit: reset)
[08:09:24] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[08:28:16] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[08:41:58] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[08:43:48] *** Quits: Joanna (uid57472@id-57472.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[08:44:13] *** Joins: k8yun (~k8yun@user/k8yun)
[08:48:57] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:5cbe:f31d:a30b:eccd) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:56:38] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[08:59:36] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:b88f:75a6:8a:951)
[09:04:28] *** Quits: kn1007 (~kn100@wireguard/tunneler/kn100) (Quit: https://kn100.me :))
[09:04:53] *** Joins: kn1007 (~kn100@wireguard/tunneler/kn100)
[09:30:27] *** Joins: _genuser_ (~Guest2@user/genuser/x-7507041)
[09:33:14] <_genuser_> hey everyone. using MSSQL Azure (RTM) - 12.0.2000.8. Not sure how to clone rows in two tables. Table A has rows that are unique. Table B can have multiple rows that have a foreign key related to [Table A].[Id].
[09:34:07] <_genuser_> I'm looking to clone some rows in Table A. Then clone all their related rows in Table B and change the foreign key to the Id of the newly added (cloned) rows in Table A.
[09:34:21] <_genuser_> pointers would be enough. I can do the research and testing.
[09:35:42] <Xgc> _genuser_: That will depend on the way you generate the primary key.
[09:36:46] <_genuser_> TableA has autogenerated Id column that is a primary key. I just do INSERT with all relevant values (without the Id) and it's auto generated.
[09:38:26] <_genuser_> so I'm looking to clone one or more rows in table, then somehow (not sure about this part) for each newly created row and its Id, clone the previously associated rows in Table B and assign them the new foreign Id.
[09:38:53] <Xgc> _genuser_: The problem is in identification of the row/rows you just inserted to obtain that key for use in the related rows which need to use that as the FK value.
[09:40:03] <_genuser_> based on the recommendation of the solutions architect, I took the following approach for the part you mention:
[09:41:21] <_genuser_> INSERT INTO TABLEA (COL1, COL2, COL3, @prefix + Description) SELECT COL1, COL2, COL3, Description FROM TABLEA where id = @clonee_id
[09:41:26] <_genuser_> that's my goal, rather.
[09:42:04] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:b88f:75a6:8a:951) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:43:41] <_genuser_> then I figure the duplicated row would have the description set to have a specific prefix. My next goal was to iterate over the rows and foreach row with the prefix in description, get their newly generated id and clone rows in TableB using the previous id of the cloned row and in TableB assigned them the newly created id.
[09:44:00] <_genuser_> *I'm not sure all this is too clear, I might wording it confusingly.
[09:46:22] <Xgc> _genuser_: No. That was clear.  But you're depending on something "the description" which isn't really guaranteed by the database or any constraint.  It looks like you're cloning one row at a time from tableA.
[09:50:08] <_genuser_> Xgc So [TableA].[OrderNum] is what dictates how many rows I copy from TableA. I'll generally clone rows where [TableA].[OrderNum] = 12345;  (So could be 1 row or 5 rows or N).
[09:50:20] <_genuser_> Then for each of them I'd have to copy the children in TableB.
[09:50:36] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Ping timeout: 240 seconds)
[09:51:40] <Xgc> My comment was based on seeing the following in your example: TABLEA where id = @clonee_id
[09:51:48] <Xgc> id is unique, correct?
[09:52:03] <_genuser_> the architect also told me to look at CTEs for manipulating recordsets before committing to the tables. But I run into the same issue. At some point I need to iterate over the rows created in TableA.
[09:52:31] <_genuser_> Xgc I misspoke. Id is unique. But I'm cloning where OrderNum = @order_id
[09:52:45] <Xgc> _genuser_: Ok. No problem.  That's fine.
[09:52:46] <_genuser_> trying to scrub work related language from this and it's creating confusion.
[09:54:00] <Xgc> _genuser_: My general approach (with Oracle) is to create an intermediate mapping from original key to new key, where the new key is generated from an oracle sequence.  So it's easy to obtain and use the sequence within the cloning logic.
[09:55:25] <Xgc> With that, I'm usually able to do this for any number of rows in single operations in a short procedure.
[09:58:01] <_genuser_> ok, and then how would you iterate over the mapping, so say now for all the old keys that were just duplicated find the children in TableB and duplicate those rows and assign them the new key as the foreign key?
[09:59:08] <Xgc> _genuser_: I will sometimes use a staging table that can hold the old/new key pairs and use that to generate the final insert or update to correct the final data.
[09:59:34] <_genuser_> btw, general overview of my schema https://www.db-fiddle.com/f/piTJknDkzBy2MtGRj32TMG/0
[09:59:55] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[10:00:54] <_genuser_> so would you then INSERT INTO TableB by selecting existing rows where their TableAId is in ( SELECT OldIds from MappingTable)
[10:03:25] <Xgc> _genuser_: That's usually safe enough.  Depending on the size of the source tables, I might move/copy the "rows to be cloned" from the source to an intermediate staging table.  That table can also contain a column to hold the new key.  Now we can just INSERT ... SELECT ... FROM staging ...  but use the new_key for the new rows to be inserted.
[10:04:50] <Xgc> The related table can be cloned similarly, and can refer to the first staging table to find the old keys and at the same time use the new mapped key as the new FK value.
[10:05:26] <_genuser_> all said and done I wouldn't expect this to ever cross 100 rows in its entirety.
[10:05:32] <Xgc> But that all depends on having that sequence we can pull from, before the final insert.
[10:05:43] <_genuser_> So from what I read from you, I don't think you'd be using an iterator. Everything can be done in one go.
[10:05:49] <Xgc> Right. So size isn't an issue for you.
[10:07:00] <Xgc> _genuser_: Right.  No need for an iterator.  But I might calculate the number of rows, then grab N values from the sequence and use the starting sequence value plus a row_number (window function) to assign that set of sequences as I see fit.
[10:07:58] <_genuser_> I can understand 100% up until the point of TableA row cloning. I have successfully completed that. I'm fine creating a Temp table or a CTE in MSSQL to create a temporary mapping. I can also understand pulling values from TableB where the TableAId matches values in TemporaryMapping.OldId and storing that into another temporary/staging table. The
[10:07:58] <_genuser_> part I'm not sure how to make happen is to then saying now for each Id you see, use the mapping table and change it to the newly created it.
[10:07:59] <_genuser_> *id
[10:08:07] <Xgc> Lots of ways to do that.  seq.nextval can also be used directly, if I wish.
[10:09:49] <Xgc> _genuser_: The question is how do you obtain that new PK?  With Oracle, I grab these new keys from a sequence.
[10:10:28] <Xgc> If you're using some auto-generated value that is only know after insertion, that might be a problem.
[10:10:36] <Xgc> known
[10:11:09] *** Quits: chronon (~chronon@user/chronon) (Quit: leaving)
[10:11:25] *** Joins: chronon (~chronon@user/chronon)
[10:12:11] <Xgc> I guess your "description" approach could be used.  It needs to depend on assumptions around that description value.
[10:12:15] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[10:12:56] <Xgc> _genuser_: Does your database support a MERGE statement?
[10:13:18] <_genuser_> https://www.db-fiddle.com/f/piTJknDkzBy2MtGRj32TMG/1
[10:13:33] <_genuser_> Xgc that's how I'm cloning them with the INSERT.
[10:14:24] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Client Quit)
[10:14:28] <_genuser_> the architect's idea was to INSERT Prefix+Description so new rows can be identified. In either case, MSSQL will auto generate the primary key id for the newly created row. So I'm not using a sequence or another method of manually grabbing a value.
[10:15:14] <_genuser_> Xgc yep per docs, MSSQL Azure supports MERGE. (https://docs.microsoft.com/en-us/sql/t-sql/statements/merge-transact-sql?view=sql-server-ver15)
[10:15:46] <Xgc> _genuser_: So you can INSERT the initial clones and then MERGE to update them later, if necessary.
[10:16:24] <Xgc> I'm thinking more about tableB, the rows that will need to refer to the new A rows.
[10:16:46] <_genuser_> yep, that's specifically where my lack of understanding is in terms of a solution.
[10:16:56] <Xgc> Cloning tableA shouldn't be a problem.
[10:17:11] <_genuser_> I'll have to read MERGE documentation to understand what it does. And how I can use it.
[10:17:34] <_genuser_> correct on cloning TableA, heh, I got that bit done the first day. The last days though, researching cursors, temp tables, etc. etc.
[10:17:46] <Xgc> MERGE allows you to INSERT, UPDATE and DELETE all in one statement, depending on provided logic.
[10:18:29] <Xgc> Some databases have a hard time using UPDATE with JOIN.  MERGE can handle all that easily.
[10:19:38] <_genuser_> hmm, actually this might be doable after all. So the imaginary mapping we created above, if we join with it, then we inserting the clones, we just select a the new Id column for each row.
[10:19:41] <Xgc> In this case, we're just going to UPDATE newly inserted tableB rows with the new FK values, if we need to do that in a separate step.
[10:20:18] <Xgc> _genuser_: That's right.  But we need to know the new auto_generated keys for some of this.
[10:21:25] <_genuser_> MSSQL has OUTPUT Insert.Id method to get the last inserted Id, but I'd have to really look into how to create that mapping with old/new Ids correctly.
[10:22:56] <_genuser_> I have been using OUTPUT for one row at a time. Apparently it works for multiple rows also. https://stackoverflow.com/a/100669
[10:23:32] <_genuser_> imo, I think I have enough material to attempt building this solution.
[10:23:51] <Xgc> Right. For the number of rows you have, that's usable.  But for any large operation I would want to handle these in batches, all at once.
[10:25:56] <_genuser_> yep, the work orders would generally not get too large. Example would your car repair shop. No matter how much work you get done in one visit, it will simple never (in an unreasonable world) generate more than 100 (heck even 50) entries about each item that was worked on, steps taken, etc. etc.
[10:26:41] <Xgc> The key will be in creating/having the tableA(old, new) mapping, so that the tableB cloning operation can just use the new keys (FK) directly.
[10:27:24] <Xgc> That's probably the cleanest.
[10:28:24] <Xgc> I suspect a staging table might be needed to do that, if you want to handle this as one batch operation.
[10:28:48] <Xgc> To avoid iteration, I prefer that approach.
[10:29:09] *** Quits: cth (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 252 seconds)
[10:29:57] <Xgc> I've used this for cloning hierarchical structures.  It's a little more complicated, but the concepts are similar.
[10:31:58] <_genuser_> sorry, the dumb irc client notification is wonky. I see what you're saying. I'm ok creating the mapping table. Rather, i'll work on that first. To see how I can manage that. Once that's done, I think the rest should be straight forward.
[10:34:07] *** Joins: palasso (~palasso@user/palasso)
[10:42:26] <_genuser_> Xgc thanks for the help and all the pointers and runthrough. I really appreciate it. I'm off to try to make it work!
[10:43:18] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[10:54:36] *** Quits: password (~password@user/password2) (Quit: Connection closed)
[10:56:05] *** Quits: justyb11 (~justyb@64.253.212.72) (Quit: Leaving)
[11:39:51] *** Quits: kilobyte_ch (~kbch@77.109.171.85) (Ping timeout: 256 seconds)
[11:44:31] *** Joins: kilobyte_ch (~kbch@77.109.171.85)
[11:52:05] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[11:54:12] *** Joins: acidjnk (~acidjnk@p200300d0c7057500a04355ceabfe8d47.dip0.t-ipconnect.de)
[12:11:34] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[12:27:51] *** Quits: ckdCreations (~ckdCreati@147.55.133.131) (Read error: Connection reset by peer)
[12:28:17] *** Joins: ckdCreations (~ckdCreati@147.55.130.35)
[12:29:38] *** Quits: Joanna (uid57472@id-57472.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[12:47:10] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[12:48:30] *** Quits: m5zs7k (aquares@web10.mydevil.net) (Read error: Connection reset by peer)
[12:48:30] *** Quits: SoF (~skius@user/skius) (Quit: Ping timeout (120 seconds))
[12:48:30] *** Quits: skyfall (~skyfall@user/skyfall) (Quit: Ping timeout (120 seconds))
[12:48:47] *** Joins: skyfall (~skyfall@user/skyfall)
[12:48:48] *** Joins: m5zs7k_ (aquares@web10.mydevil.net)
[12:49:14] *** Joins: SoF (~skius@user/skius)
[12:49:17] *** Quits: robertparkerx (~robertpar@user/robertparkerx) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[12:49:27] *** Joins: robertparkerx (~robertpar@2001:19f0:5:6262:5400:3ff:fe40:6b40)
[12:49:27] *** Quits: robertparkerx (~robertpar@2001:19f0:5:6262:5400:3ff:fe40:6b40) (Changing host)
[12:49:27] *** Joins: robertparkerx (~robertpar@user/robertparkerx)
[12:57:46] *** m5zs7k_ is now known as m5zs7k
[13:07:46] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[13:33:39] *** Joins: hirogen (~hirogen@cpc120260-heme13-2-0-cust3.9-1.cable.virginm.net)
[14:05:16] *** Quits: entropygain (levitate@user/entropygain) (Quit: Bye)
[14:07:35] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[14:32:11] *** Joins: humanBird (~humanBird@098-148-010-232.res.spectrum.com)
[14:33:00] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 240 seconds)
[14:33:25] *** Joins: cliluw (~cliluw@47.147.73.223)
[14:40:46] *** Joins: internecine1 (~interneci@ip68-98-149-5.dc.dc.cox.net)
[14:43:24] *** Quits: internecine (~interneci@ip68-98-149-5.dc.dc.cox.net) (Ping timeout: 240 seconds)
[14:48:10] *** Joins: CaCode (~CaCode@user/cacode)
[15:30:33] *** Quits: waveform (~quassel@waveform.plus.com) (Ping timeout: 252 seconds)
[15:31:00] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[15:31:31] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[15:32:39] *** Parts: CaCode (~CaCode@user/cacode) (Leaving)
[15:33:11] *** Joins: waveform (~quassel@waveform.plus.com)
[15:37:54] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[16:05:17] *** Joins: MrZeus__ (~MrZeus@185.248.85.23)
[17:16:35] *** Joins: AmR (~AmREiSa@156.207.156.230)
[17:35:32] *** Joins: Rashad (~textual@2a01:9700:1a7c:8900:ddbc:1f8:5c0:689f)
[17:45:00] *** Quits: humanBird (~humanBird@098-148-010-232.res.spectrum.com) (Quit: Client closed)
[18:05:56] *** Quits: Rashad (~textual@2a01:9700:1a7c:8900:ddbc:1f8:5c0:689f) (Read error: Connection reset by peer)
[18:09:07] *** Joins: reset (~reset@user/reset)
[18:10:44] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:13:11] *** Parts: _genuser_ (~Guest2@user/genuser/x-7507041) ()
[18:28:02] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:b88f:75a6:8a:951)
[18:46:25] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:b88f:75a6:8a:951) (Remote host closed the connection)
[18:47:03] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:b88f:75a6:8a:951)
[19:13:18] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[20:00:57] *** Quits: acidjnk (~acidjnk@p200300d0c7057500a04355ceabfe8d47.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[20:33:01] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:b88f:75a6:8a:951) (Ping timeout: 250 seconds)
[20:35:48] *** Quits: kilobyte_ch (~kbch@77.109.171.85) (Ping timeout: 252 seconds)
[20:41:41] *** Joins: cth (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[20:49:48] *** Joins: kilobyte_ch (~kbch@213.55.224.175)
[20:50:34] *** Quits: Joanna (uid57472@id-57472.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[20:52:15] *** Joins: rgrinberg (~textual@187.194.14.9)
[21:01:06] *** Quits: kilobyte_ch (~kbch@213.55.224.175) (Ping timeout: 252 seconds)
[21:02:09] *** Quits: rgrinberg (~textual@187.194.14.9) (Read error: Connection reset by peer)
[21:03:21] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:a506:183a:7675:98e5)
[21:13:25] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Read error: Connection reset by peer)
[21:15:29] *** Joins: kilobyte_ch (~kbch@77.109.171.85)
[21:34:53] *** Joins: _genuser_ (~Guest2@user/genuser/x-7507041)
[21:37:40] <_genuser_> hello folks. Question about OUTPUT (I suppose microsoft specific). Can you use regular column values with OUTPUT? (instead of INSERTED, DELETED) ?
[21:39:41] *** Joins: Rashad (~textual@2a01:9700:1a7c:8900:d0ba:80af:b42:3745)
[21:43:10] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:415f:5b01:ae72:f1c3)
[21:47:06] *** Quits: kilobyte_ch (~kbch@77.109.171.85) (Ping timeout: 272 seconds)
[21:56:17] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:a506:183a:7675:98e5) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:57:46] *** Quits: AmR (~AmREiSa@156.207.156.230) (Quit: Konversation terminated!)
[21:58:51] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:a506:183a:7675:98e5)
[22:00:59] *** Joins: kilobyte_ch (~kbch@77.109.171.85)
[22:02:09] *** Quits: Rashad (~textual@2a01:9700:1a7c:8900:d0ba:80af:b42:3745) (Ping timeout: 252 seconds)
[22:10:11] *** Joins: Rashad (~textual@2a01:9700:1a7c:8900:658f:58fa:f5cc:30bb)
[22:33:31] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[22:35:49] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[22:36:02] *** Joins: rvalue (~rvalue@user/rvalue)
[22:48:48] *** Joins: MrZeus_ (~MrZeus@185.248.85.10)
[22:51:48] *** Quits: MrZeus__ (~MrZeus@185.248.85.23) (Ping timeout: 240 seconds)
[23:09:23] *** Quits: ckdCreations (~ckdCreati@147.55.130.35) (Read error: Connection reset by peer)
[23:13:45] *** Joins: PTNapivoski (~PTNapivos@2804:60:400b:2600:a08b:8935:ef62:47a1)
[23:18:16] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[23:20:48] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 252 seconds)
[23:21:50] *** Joins: ckdCreations (~ckdCreati@147.55.130.32)
[23:27:08] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:415f:5b01:ae72:f1c3) (Quit: Client closed)
[23:29:39] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[23:56:41] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[23:56:51] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:a506:183a:7675:98e5) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:57:59] *** Joins: mickey8 (~user@user/mickey)
