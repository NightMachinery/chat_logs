[00:05:38] *** Joins: hbautista (~hbautista@187.171.204.44)
[00:07:54] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[00:11:23] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[00:12:29] *** Quits: alfredb (E412Xc4KNY@80-219-164-155.dclient.hispeed.ch) (Quit: leaving)
[00:16:09] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[00:19:35] *** Quits: arcatech (~arcatech@user/arcatech) (Remote host closed the connection)
[00:20:19] *** Joins: arcatech (~arcatech@user/arcatech)
[00:22:21] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Remote host closed the connection)
[00:22:56] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[00:23:30] *** Quits: arcatech (~arcatech@user/arcatech) (Client Quit)
[00:27:38] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 272 seconds)
[00:30:28] *** Joins: arcatech (~arcatech@user/arcatech)
[00:31:06] *** Quits: hbautista (~hbautista@187.171.204.44) (Ping timeout: 240 seconds)
[00:35:01] *** Quits: arcatech (~arcatech@user/arcatech) (Client Quit)
[00:35:21] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[00:38:29] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[00:40:28] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 250 seconds)
[00:42:02] *** Joins: GNUcifer (~ct@i6DFA8712.versanet.de)
[00:42:16] *** Quits: cehteh (~ct@i6DFA8E2C.versanet.de) (Killed (NickServ (GHOST command used by GNUcifer!~ct@i6DFA8712.versanet.de)))
[00:42:26] *** GNUcifer is now known as cehteh
[00:42:55] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 256 seconds)
[00:45:43] *** Joins: mokulus (~mokulus@user/mokulus)
[00:48:15] *** Joins: xall (~xall@2600:8800:8c02:3600:582e:91f2:6609:d534)
[00:52:15] *** Joins: AnapodoPsalidaki (~AnapodoPs@2a02:587:2917:ae32:c13a:34fe:54b3:1366)
[00:55:36] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:56:17] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[00:59:00] *** Quits: liefer (~liefer@user/liefer) (Quit: liefer)
[00:59:44] *** Quits: waxer (~waxer@2a01:e34:ec6c:1520:8232:53ff:fe43:aa3f) (Quit: Leaving)
[00:59:55] *** Joins: liefer (~liefer@user/liefer)
[01:04:24] *** Quits: BUSY (~BUSY@user/busy) (Ping timeout: 268 seconds)
[01:10:58] *** Joins: idego (idego@user/idego)
[01:12:50] *** Quits: pieguy128 (~pieguy128@bas1-montreal02-65-92-163-194.dsl.bell.ca) (Quit: ZNC 1.8.2 - https://znc.in)
[01:13:24] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-57-65-92-163-194.dsl.bell.ca)
[01:15:31] *** Joins: gast0n (~g4570n@user/gast0n)
[01:23:36] *** Quits: b0rf (~shaun@121-44-16-32.tpgi.com.au) (Quit: Leaving)
[01:25:16] *** Quits: liefer (~liefer@user/liefer) (Quit: liefer)
[01:26:05] *** Joins: liefer (~liefer@user/liefer)
[01:27:07] *** Quits: srinidhi (~srinidhi@49.206.4.186) (Ping timeout: 256 seconds)
[01:27:15] *** Parts: idego (idego@user/idego) (thanks)
[01:29:22] *** Quits: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[01:32:40] *** Quits: qunzhong_luxian (~qunzhong_@68.235.43.150) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:33:31] *** Quits: shabius_ (~shabius@2a0e:1c80:2:1022::1005) (Quit: Leaving)
[01:33:48] *** Joins: shabius (~shabius@2a0e:1c80:2:1022::1005)
[01:34:33] *** Quits: ubique (~ubique@5-12-22-118.residential.rdsnet.ro) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[01:42:14] *** Joins: toinen (~kvirc@user/yksi)
[01:43:13] *** Quits: yksi (~kvirc@user/yksi) (Ping timeout: 258 seconds)
[01:49:04] *** Joins: Xenguy (~Xenguy@devuan/developer/Xenguy)
[01:51:14] *** Quits: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca) (Ping timeout: 272 seconds)
[01:53:10] *** another is now known as another|
[01:55:39] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[02:03:09] <mehwork> everytime i see glibc i think of how glib C is
[02:04:08] <mehwork> What exactly does this do:  git co <mybranch> ; git rebase -i origin/main
[02:04:40] <mehwork> does it fetch `main`'s changes from the remote and replay those commits over my branch?
[02:05:16] *** Quits: shabius (~shabius@2a0e:1c80:2:1022::1005) (Ping timeout: 246 seconds)
[02:05:48] *** Quits: mokulus (~mokulus@user/mokulus) (Ping timeout: 272 seconds)
[02:08:12] *** Joins: unixbhaskar (~user@191.96.227.9)
[02:09:29] *** Joins: shabius (~shabius@2a0e:1c80:2:1022::1005)
[02:09:55] *** Joins: SuperLag (~akulbe@user/superlag)
[02:10:56] *** Joins: lgc (~lgc@user/lgc)
[02:14:02] *** Parts: fnurkla (~fnurkla@h-98-128-211-79.A357.priv.bahnhof.se) (WeeChat 3.2)
[02:14:13] *** Joins: nyah (~nyah@90.221.186.180)
[02:17:44] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:18:07] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 256 seconds)
[02:18:21] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:18:31] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:19:04] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:19:18] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:19:48] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:20:06] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:20:30] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:20:52] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:21:20] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:21:26] <j416> mehwork: there's no network involved in that.
[02:21:39] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:21:59] <j416> mehwork: it checks out <mybranch>, then rebases that on top of whatever origin/main points at.
[02:22:05] <j416> (a commit)
[02:22:06] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:22:25] *** Quits: shabius (~shabius@2a0e:1c80:2:1022::1005) (Ping timeout: 246 seconds)
[02:22:27] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:22:37] <j416> mehwork: most things in Git are local.
[02:23:02] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:23:14] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:23:53] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:24:02] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:24:41] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:24:49] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:25:23] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:25:36] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:26:18] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:26:24] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:26:25] *** Quits: kilobyte_ch (~kbch@77.109.171.12) (Ping timeout: 268 seconds)
[02:29:30] *** Joins: shabius (~shabius@45.15.19.231)
[02:30:23] *** Joins: mud (~mud@user/kadoban)
[02:31:49] *** Joins: arcatech (~arcatech@user/arcatech)
[02:33:14] *** Joins: Rubin (~rubin@2001:470:69fc:105::17e)
[02:35:58] *** Joins: offpics (~offpics@89-79-56-128.dynamic.chello.pl)
[02:36:38] *** Quits: offpics (~offpics@89-79-56-128.dynamic.chello.pl) (Quit: Konversation terminated!)
[02:36:57] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[02:37:19] *** Joins: fnurkla (~fnurkla@h-98-128-211-79.A357.priv.bahnhof.se)
[02:37:50] <mehwork> interesting thanks
[02:37:54] *** Joins: heftig[m] (~heftig@archlinux/developer/heftig)
[02:37:54] *** Joins: bLeDy[m] (~bledymatr@2001:470:69fc:105::648)
[02:37:54] *** Joins: pinage404 (~pinage404@2001:470:69fc:105::25c)
[02:37:54] *** Joins: cpackham[m] (~cpackhamm@2001:470:69fc:105::927)
[02:37:55] *** Joins: tuxayo (~tuxayomat@2001:470:69fc:105::5bf)
[02:37:55] *** Joins: novasharper (~novasharp@2001:470:69fc:105::b4a)
[02:37:55] *** Joins: morguldir (~morguldir@2001:470:69fc:105::21bd)
[02:37:55] *** Joins: dieggsy (~dieggsy@2001:470:69fc:105::91f)
[02:37:55] *** Joins: kadoban (~kadoban@user/kadoban)
[02:37:55] *** Joins: Kamui (~kamui-ren@2001:470:69fc:105::f74)
[02:37:55] *** Joins: ServerStatsDisco (~serversta@2001:470:69fc:105::1a)
[02:37:55] *** Joins: Guest5383 (~bluepenqu@2001:470:69fc:105::829)
[02:37:55] *** Joins: elemongw[m] (~elemongwk@2001:470:69fc:105::34ee)
[02:37:55] *** Joins: crysisanon[m] (~crysisano@2001:470:69fc:105::1687)
[02:38:07] *** Joins: silvio[m] (~silv-ioma@2001:470:69fc:105::2f06)
[02:38:14] *** Joins: inkbottle[m] (~inkbottle@2001:470:69fc:105::2ff5)
[02:38:15] *** Joins: thetourist108 (~thetouris@2001:470:69fc:105::3112)
[02:38:31] *** Quits: jazzy (~jaziz@2600:380:8753:52bc:5137:4898:53f7:15de) (Ping timeout: 256 seconds)
[02:38:37] *** Joins: viral_mutant[m] (~viralmuta@2001:470:69fc:105::3905)
[02:38:40] <mehwork> so it's the same thing as  git co main ; git pull ; git co <my branch> ; git merge main ?
[02:38:43] *** Joins: nazarii[m] (~nazariim]@2001:470:69fc:105::63a)
[02:39:38] *** Joins: jazzy (~jaziz@2600:380:4542:186:7559:22d0:b16b:3c20)
[02:40:18] *** Joins: blaklistd (~blaklistd@user/blaklistd)
[02:41:14] *** Joins: kilobyte_ch (~kbch@2a02:168:d80b:50:11:32ff:fe2d:64f5)
[02:41:25] *** Quits: bLeDy[m] (~bledymatr@2001:470:69fc:105::648) (Quit: node-irc says goodbye)
[02:41:26] *** Quits: ServerStatsDisco (~serversta@2001:470:69fc:105::1a) (Quit: node-irc says goodbye)
[02:41:31] *** Quits: heftig[m] (~heftig@archlinux/developer/heftig) (Quit: node-irc says goodbye)
[02:41:37] <mehwork> well not the exact same thing obviously, but similar
[02:41:38] *** Quits: morguldir (~morguldir@2001:470:69fc:105::21bd) (Quit: node-irc says goodbye)
[02:41:44] *** Quits: Rubin (~rubin@2001:470:69fc:105::17e) (Quit: node-irc says goodbye)
[02:41:48] *** Quits: kadoban (~kadoban@user/kadoban) (Quit: node-irc says goodbye)
[02:41:50] *** Quits: Guest5383 (~bluepenqu@2001:470:69fc:105::829) (Quit: node-irc says goodbye)
[02:41:50] *** Quits: dieggsy (~dieggsy@2001:470:69fc:105::91f) (Quit: node-irc says goodbye)
[02:41:51] *** Joins: heftig[m] (~heftig@archlinux/developer/heftig)
[02:41:52] *** Quits: cpackham[m] (~cpackhamm@2001:470:69fc:105::927) (Quit: node-irc says goodbye)
[02:41:52] *** Quits: nazarii[m] (~nazariim]@2001:470:69fc:105::63a) (Quit: node-irc says goodbye)
[02:41:56] *** Quits: inkbottle[m] (~inkbottle@2001:470:69fc:105::2ff5) (Quit: node-irc says goodbye)
[02:42:03] *** Joins: bLeDy[m] (~bledymatr@2001:470:69fc:105::648)
[02:42:03] *** Quits: novasharper (~novasharp@2001:470:69fc:105::b4a) (Quit: node-irc says goodbye)
[02:42:08] *** Quits: Kamui (~kamui-ren@2001:470:69fc:105::f74) (Quit: node-irc says goodbye)
[02:42:16] *** Joins: cpackham[m] (~cpackhamm@2001:470:69fc:105::927)
[02:42:29] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 256 seconds)
[02:42:30] *** Joins: novasharper (~novasharp@2001:470:69fc:105::b4a)
[02:42:33] *** Joins: morguldir (~morguldir@2001:470:69fc:105::21bd)
[02:42:33] *** Joins: dieggsy (~dieggsy@2001:470:69fc:105::91f)
[02:42:33] *** Joins: kadoban (~kadoban@user/kadoban)
[02:42:34] *** Joins: Kamui (~kamui-ren@2001:470:69fc:105::f74)
[02:42:34] *** Joins: ServerStatsDisco (~serversta@2001:470:69fc:105::1a)
[02:42:35] *** Quits: elemongw[m] (~elemongwk@2001:470:69fc:105::34ee) (Quit: node-irc says goodbye)
[02:42:42] *** Quits: fnurkla (~fnurkla@h-98-128-211-79.A357.priv.bahnhof.se) (Quit: WeeChat 3.2)
[02:42:46] *** Joins: blue_penquin[m] (~bluepenqu@2001:470:69fc:105::829)
[02:42:51] *** Joins: fnurkla (~fnurkla@h-98-128-211-79.A357.priv.bahnhof.se)
[02:42:59] *** Joins: elemongw[m] (~elemongwk@2001:470:69fc:105::34ee)
[02:42:59] *** Joins: inkbottle[m] (~inkbottle@2001:470:69fc:105::2ff5)
[02:43:10] *** blue_penquin[m] is now known as Guest649
[02:43:16] *** Joins: nazarii[m] (~nazariim]@2001:470:69fc:105::63a)
[02:43:22] *** Quits: crysisanon[m] (~crysisano@2001:470:69fc:105::1687) (Quit: node-irc says goodbye)
[02:43:28] *** Quits: thetourist108 (~thetouris@2001:470:69fc:105::3112) (Quit: node-irc says goodbye)
[02:43:41] *** Quits: pinage404 (~pinage404@2001:470:69fc:105::25c) (Quit: node-irc says goodbye)
[02:43:42] <gpanders> no, it's not the same thing. For one, there's no 'git pull'. For two, rebase and merge are not the same (though they *sometimes* have the same outcome)
[02:43:44] *** Joins: Rubin (~rubin@2001:470:69fc:105::17e)
[02:43:45] *** Quits: tuxayo (~tuxayomat@2001:470:69fc:105::5bf) (Quit: node-irc says goodbye)
[02:43:59] *** Joins: pinage404 (~pinage404@2001:470:69fc:105::25c)
[02:44:10] <gpanders> And the -i flag means it's an interactive rebase, so it's *definitely* different than git merge
[02:44:11] *** Joins: tuxayo (~tuxayomat@2001:470:69fc:105::5bf)
[02:44:23] *** Joins: crysisanon[m] (~crysisano@2001:470:69fc:105::1687)
[02:44:24] *** Joins: thetourist108 (~thetouris@2001:470:69fc:105::3112)
[02:44:54] <mehwork> what if i did this though (all in my branch): git fetch ; git rebase -i origin/main
[02:45:03] <mehwork> does the git fetch first make up for it not doing a git pull?
[02:45:47] <ndorf> pull = fetch + rebase, or fetch + merge. so yes.
[02:48:23] <mehwork> nice
[02:49:52] *** Quits: silvio[m] (~silv-ioma@2001:470:69fc:105::2f06) (Quit: node-irc says goodbye)
[02:50:27] *** Quits: viral_mutant[m] (~viralmuta@2001:470:69fc:105::3905) (Quit: node-irc says goodbye)
[02:51:55] *** Joins: venmx_ (~bertie@host81-155-235-58.range81-155.btcentralplus.com)
[02:52:12] *** Quits: blaklistd (~blaklistd@user/blaklistd) (Quit: The Lounge - https://thelounge.chat)
[02:52:24] *** Quits: Kamui (~kamui-ren@2001:470:69fc:105::f74) (Write error: Connection reset by peer)
[02:52:24] *** Quits: heftig[m] (~heftig@archlinux/developer/heftig) (Read error: Connection reset by peer)
[02:52:24] *** Quits: thetourist108 (~thetouris@2001:470:69fc:105::3112) (Read error: Connection reset by peer)
[02:52:25] *** Quits: dieggsy (~dieggsy@2001:470:69fc:105::91f) (Read error: Connection reset by peer)
[02:52:26] *** Quits: kadoban (~kadoban@user/kadoban) (Read error: Connection reset by peer)
[02:52:26] *** Quits: cpackham[m] (~cpackhamm@2001:470:69fc:105::927) (Read error: Connection reset by peer)
[02:52:26] *** Quits: bLeDy[m] (~bledymatr@2001:470:69fc:105::648) (Read error: Connection reset by peer)
[02:52:27] *** Quits: novasharper (~novasharp@2001:470:69fc:105::b4a) (Read error: Connection reset by peer)
[02:52:27] *** Quits: inkbottle[m] (~inkbottle@2001:470:69fc:105::2ff5) (Write error: Connection reset by peer)
[02:52:28] *** Quits: morguldir (~morguldir@2001:470:69fc:105::21bd) (Write error: Connection reset by peer)
[02:52:29] *** Quits: pinage404 (~pinage404@2001:470:69fc:105::25c) (Read error: Connection reset by peer)
[02:52:29] *** Quits: crysisanon[m] (~crysisano@2001:470:69fc:105::1687) (Remote host closed the connection)
[02:52:29] *** Quits: Guest649 (~bluepenqu@2001:470:69fc:105::829) (Write error: Broken pipe)
[02:52:36] *** Quits: Rubin (~rubin@2001:470:69fc:105::17e) (Remote host closed the connection)
[02:52:36] *** Quits: tuxayo (~tuxayomat@2001:470:69fc:105::5bf) (Write error: Connection reset by peer)
[02:52:36] *** Quits: nazarii[m] (~nazariim]@2001:470:69fc:105::63a) (Remote host closed the connection)
[02:52:37] *** Quits: ServerStatsDisco (~serversta@2001:470:69fc:105::1a) (Write error: Connection reset by peer)
[02:52:37] *** Quits: elemongw[m] (~elemongwk@2001:470:69fc:105::34ee) (Read error: Connection reset by peer)
[02:52:39] *** Joins: blaklistd (~blaklistd@user/blaklistd)
[02:54:58] <mehwork> is it fine to always just 'git fetch -p' instead of plain 'git fetch'?
[02:56:59] *** Joins: JanC_ (~janc@user/janc)
[02:57:54] *** Quits: JanC (~janc@user/janc) (Ping timeout: 240 seconds)
[02:58:16] *** Joins: Rubin (~rubin@2001:470:69fc:105::17e)
[02:58:36] <cehteh> possibly not .. depends on what you want to do
[02:58:37] *** Joins: heftig[m] (~heftig@archlinux/developer/heftig)
[02:58:37] *** Joins: bLeDy[m] (~bledymatr@2001:470:69fc:105::648)
[02:58:50] *** Joins: pinage404 (~pinage404@2001:470:69fc:105::25c)
[02:58:50] *** Joins: cpackham[m] (~cpackhamm@2001:470:69fc:105::927)
[02:59:03] *** Joins: tuxayo (~tuxayomat@2001:470:69fc:105::5bf)
[02:59:03] *** Joins: novasharper (~novasharp@2001:470:69fc:105::b4a)
[02:59:03] *** Joins: dieggsy (~dieggsy@2001:470:69fc:105::91f)
[02:59:03] *** Joins: morguldir (~morguldir@2001:470:69fc:105::21bd)
[02:59:03] *** Joins: kadoban (~kadoban@user/kadoban)
[02:59:03] *** Joins: Kamui (~kamui-ren@2001:470:69fc:105::f74)
[02:59:03] <mehwork> at leat in this case where i want to fetch before rebase'ing origin/foo onto my branch
[02:59:03] *** Joins: ServerStatsDisco (~serversta@2001:470:69fc:105::1a)
[02:59:03] *** Joins: Guest6204 (~bluepenqu@2001:470:69fc:105::829)
[02:59:15] *** Joins: elemongw[m] (~elemongwk@2001:470:69fc:105::34ee)
[02:59:15] *** Joins: crysisanon[m] (~crysisano@2001:470:69fc:105::1687)
[02:59:27] *** Joins: silvio[m] (~silv-ioma@2001:470:69fc:105::2f06)
[02:59:28] *** Joins: inkbottle[m] (~inkbottle@2001:470:69fc:105::2ff5)
[02:59:28] *** Joins: thetourist108 (~thetouris@2001:470:69fc:105::3112)
[02:59:40] *** Joins: viral_mutant[m] (~viralmuta@2001:470:69fc:105::3905)
[02:59:41] *** Joins: nazarii[m] (~nazariim]@2001:470:69fc:105::63a)
[02:59:50] <fnurkla> doesn't seem necessary
[02:59:56] <cehteh> why do you want -p then?
[03:00:27] <mehwork> it says it will remove any remote-tracking references that no longer exist ont he remote
[03:00:39] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[03:00:43] <mehwork> just seemed like a bonus
[03:00:47] <cehteh> in presence of multiple remote repositories which are not in sync pruning can be nasty, possibly not overy dangerous but unnecessary at best
[03:00:55] <fnurkla> ^
[03:01:10] <mehwork> alright thanks
[03:01:18] <cehteh> when you only track a single origin its prolly harmless, but still unnecessary unless you exactly want that
[03:02:35] *** Joins: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca)
[03:03:43] *** Quits: frobnic (fb@b2b-130-180-11-14.unitymedia.biz) (Ping timeout: 258 seconds)
[03:05:01] <mehwork> i'll avoid it then
[03:05:54] *** Joins: Nalt (~Nalt|||@cpe-173-174-25-173.stx.res.rr.com)
[03:17:23] *** Quits: micah (~micah@debian/micah) (Remote host closed the connection)
[03:21:04] *** Joins: Guest53 (~textual@170.250.221.149)
[03:22:42] *** Quits: venmx_ (~bertie@host81-155-235-58.range81-155.btcentralplus.com) (Ping timeout: 240 seconds)
[03:23:32] *** Quits: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3) (Quit: Konversation terminated!)
[03:25:04] *** Joins: frobnic (fb@b2b-130-180-11-14.unitymedia.biz)
[03:26:19] *** Quits: opzeul (~opzeul@2001:b07:646a:9382:30a5:2ec8:4536:2063) (Quit: Leaving)
[03:27:15] *** Quits: discipulus (~discipulu@user/discipulus) (Ping timeout: 256 seconds)
[03:29:58] *** Quits: blaklistd (~blaklistd@user/blaklistd) (Quit: bye)
[03:31:27] *** Quits: jsrnop (~mark@user/jsrnop) (Quit: The Lounge - https://thelounge.chat)
[03:31:48] *** Joins: jsrnop (~mark@user/jsrnop)
[03:33:07] *** Quits: Guest53 (~textual@170.250.221.149) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:38:52] *** Quits: polyrob (~rob@user/polyrob) (Ping timeout: 252 seconds)
[03:42:26] *** Joins: blaklistd (~blaklistd@user/blaklistd)
[03:45:06] *** sgn is now known as sgn_
[03:45:15] *** Quits: navidr (uid112413@id-112413.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[03:45:57] *** sgn_ is now known as sgn
[03:46:46] *** Quits: natrys (~natrys@user/natrys) (Quit: natrys)
[03:46:48] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[03:53:42] *** Quits: maher (~maher@2603-7000-8401-f4b1-0000-0000-0000-0260.res6.spectrum.com) (Read error: Connection reset by peer)
[03:54:00] *** Joins: maher (~maher@2603-7000-8401-f4b1-0000-0000-0000-0260.res6.spectrum.com)
[03:56:05] *** Quits: blaklistd (~blaklistd@user/blaklistd) (Quit: bye)
[03:56:29] *** Joins: blaklistd (~blaklistd@user/blaklistd)
[03:56:30] *** Joins: polyrob (~rob@user/polyrob)
[03:58:11] *** Joins: orbyt (~textual@172.92.4.78)
[04:04:53] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 272 seconds)
[04:06:25] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[04:09:15] *** JanC_ is now known as JanC
[04:18:12] *** Joins: keypusher (keypusher@user/keypusher)
[04:19:30] *** Joins: BUSY (~BUSY@user/busy)
[04:23:55] *** Joins: Adois (~Adoi@user/adoi)
[04:25:32] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[04:27:36] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 268 seconds)
[04:28:18] *** Joins: kaisyu (uid37155@id-37155.charlton.irccloud.com)
[04:31:05] *** Joins: iffraff (~quassel@2605:a601:aae0:4a00:db87:4fd6:ad97:495)
[04:36:18] *** Quits: iffraff (~quassel@2605:a601:aae0:4a00:db87:4fd6:ad97:495) (Ping timeout: 240 seconds)
[04:37:54] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[04:41:30] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[04:42:23] *** Joins: drew (~drew@user/drew)
[04:42:37] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 256 seconds)
[04:44:46] *** Quits: nyah (~nyah@90.221.186.180) (Ping timeout: 272 seconds)
[04:45:28] *** Joins: Nalt| (~Nalt|||@cpe-173-174-25-173.stx.res.rr.com)
[04:45:30] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[04:47:20] *** Quits: hegstal (~hegstal@2a02:c7f:7604:8a00:cf3c:697d:723b:8aac) (Remote host closed the connection)
[04:49:30] *** Quits: Nalt (~Nalt|||@cpe-173-174-25-173.stx.res.rr.com) (Ping timeout: 240 seconds)
[04:53:34] *** Quits: orbyt (~textual@172.92.4.78) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:59:30] *** Quits: thiago (~thiago@2601:1c0:4501:635c:bc60:17da:ae86:e988) (Ping timeout: 240 seconds)
[05:00:24] *** Joins: thiago (~thiago@2601:1c0:4501:635c:af48:2370:e2b1:58d9)
[05:00:36] *** Quits: Nalt| (~Nalt|||@cpe-173-174-25-173.stx.res.rr.com) (Ping timeout: 272 seconds)
[05:04:52] *** Joins: apauli (~apauli@dynamic-077-008-063-007.77.8.pool.telefonica.de)
[05:06:31] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:08:08] *** Quits: PaMeDa (~apauli@dynamic-077-000-250-253.77.0.pool.telefonica.de) (Ping timeout: 256 seconds)
[05:14:11] *** Joins: Cleverness (~clevernes@pool-108-46-145-4.nycmny.fios.verizon.net)
[05:21:36] *** Quits: unixbhaskar (~user@191.96.227.9) (Remote host closed the connection)
[05:22:42] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 240 seconds)
[05:39:27] <maher> I have a remote branch - I have a local banch with the same name - how do I update the local branch to be the same as the remote branch?
[05:39:29] *** Quits: Cleverness (~clevernes@pool-108-46-145-4.nycmny.fios.verizon.net) (Quit: Leaving)
[05:40:43] <maher> does this even make any sense?  git branch -r shows stuff including origin/issue-316-open-new-window  <-- is this a local branch or a remote one?
[05:44:48] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Remote host closed the connection)
[05:46:09] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[05:46:38] <imMute> maher: it's a remote tracking branch.  basically a local branch that is meant to be a copy of what the remote has, so you can keep track of what the remote has
[05:47:00] <imMute>  but it's not a "real" local branch.  if you try to check it out you get a detached head (like when checking out a tag)
[05:47:09] <maher> imMute: but its different, its not the same as the remote one
[05:47:16] *** Quits: mud (~mud@user/kadoban) (Read error: Connection reset by peer)
[05:47:21] <imMute> you need to 'git fetch' to synchronize
[05:47:42] *** Joins: mud (~mud@user/kadoban)
[05:48:42] <maher> i am so lost - here is what I see at gitlab: https://gitlab.gnome.org/josephmaher/evince/-/branches
[05:49:31] <maher> I want to apply the changes from josephmaher/evince-issue-316-open-new-window to issue-316-open-new-window
[05:49:57] <maher> my local copy of the former is up to date, but not the latter
[05:50:51] <dvl> ikke: Those suggestions for rev-parse etc and ^{} are working great.  We've got branch commits flowing into FreshPorts automagically now.  Thank you.  https://twitter.com/DLangille/status/1409671563872329731
[05:51:01] *** Quits: seand (~seand@69.54.136.33) (Remote host closed the connection)
[05:51:13] <maher> no - I think i managed some sort of update - git log says  Merge branch 'issue-316-open-new-window' of gitlab.gnome.org:josephmaher/evince into issue-316-open-new-window
[05:55:46] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Quit: elastic_dog)
[05:56:43] *** Joins: pete443_ (~pete@user/pete443)
[05:57:32] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[05:57:51] *** Joins: ferdna (~ferdna@user/ferdna)
[05:58:56] *** Quits: pete443 (~pete@user/pete443) (Ping timeout: 252 seconds)
[06:00:55] <maher> hah! I now have a local repository in which the branches track the remote branches - I will now attempt to apply the changes from one to the other - wish me luck!
[06:01:51] *** Quits: blaklistd (~blaklistd@user/blaklistd) (Quit: bye)
[06:02:21] *** Joins: blaklistd (~blaklistd@user/blaklistd)
[06:10:40] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[06:12:48] *** Joins: Maxattax97 (~max@2603-900a-1501-a7ca-0000-0000-0000-077a.inf6.spectrum.com)
[06:14:19] *** Quits: blaklistd (~blaklistd@user/blaklistd) (Quit: bye)
[06:15:53] *** Joins: blue_penquin (uid505269@id-505269.brockwell.irccloud.com)
[06:21:15] *** Joins: blaklistd (~blaklistd@user/blaklistd)
[06:22:09] *** Quits: Maxattax97 (~max@2603-900a-1501-a7ca-0000-0000-0000-077a.inf6.spectrum.com) (Quit: WeeChat 3.0.1)
[06:23:42] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[06:24:44] *** Quits: blaklistd (~blaklistd@user/blaklistd) (Client Quit)
[06:26:18] *** Quits: Adois (~Adoi@user/adoi) (Ping timeout: 240 seconds)
[06:27:22] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[06:27:26] *** Guest6204 is now known as blue_penquin[m]
[06:27:56] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[06:28:17] *** Joins: getSomethingGood (~getSometh@d72-39-70-155.home1.cgocable.net)
[06:31:10] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[06:31:30] <maher> I did this: git cherry-pick 1a96d235ddd1a4171102725a0c56409c69e07261 -n  <-- how do I undo this?
[06:31:47] *** Joins: Guest55 (~Guest55@ool-4571943f.dyn.optonline.net)
[06:32:40] *** Quits: Guest55 (~Guest55@ool-4571943f.dyn.optonline.net) (Client Quit)
[06:33:08] <maher> np: I worked it out...
[06:33:59] *** Joins: blaklistd (~blaklistd@user/blaklistd)
[06:35:03] *** Quits: blaklistd (~blaklistd@user/blaklistd) (Client Quit)
[06:36:44] *** Joins: blaklistd (~blaklistd@user/blaklistd)
[06:38:04] *** Quits: kaisyu (uid37155@id-37155.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[06:38:40] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[06:42:29] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[06:43:18] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 252 seconds)
[06:43:40] *** Quits: blaklistd (~blaklistd@user/blaklistd) (Quit: bye)
[06:43:40] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[06:44:17] *** Joins: blaklistd (~blaklistd@user/blaklistd)
[06:44:42] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[06:46:54] *** Quits: blaklistd (~blaklistd@user/blaklistd) (Client Quit)
[06:55:14] *** Joins: blaklistd (~blaklistd@user/blaklistd)
[06:56:41] *** Quits: blaklistd (~blaklistd@user/blaklistd) (Client Quit)
[06:58:45] *** Joins: blaklistd (~blaklistd@user/blaklistd)
[06:59:11] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[07:00:11] *** FinnElija is now known as Guest7219
[07:00:11] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:00:12] *** Quits: Guest7219 (~finn_elij@user/finn-elija/x-0085643) (Killed (sodium.libera.chat (Nickname regained by services)))
[07:00:12] *** finn_elija is now known as FinnElija
[07:01:54] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 240 seconds)
[07:03:07] *** Quits: blaklistd (~blaklistd@user/blaklistd) (Client Quit)
[07:04:07] *** Joins: blaklistd (~blaklistd@user/blaklistd)
[07:05:00] *** Quits: blaklistd (~blaklistd@user/blaklistd) (Client Quit)
[07:05:26] *** Quits: Xenguy (~Xenguy@devuan/developer/Xenguy) (Quit: Leaving)
[07:05:32] *** Joins: blaklistd (~blaklistd@user/blaklistd)
[07:07:54] *** Quits: blaklistd (~blaklistd@user/blaklistd) (Client Quit)
[07:08:26] *** Joins: structoha (~structoha@gateway/tor-sasl/structoha)
[07:09:45] *** Joins: blaklistd (~blaklistd@user/blaklistd)
[07:10:08] *** Quits: blaklistd (~blaklistd@user/blaklistd) (Client Quit)
[07:10:58] *** Quits: getSomethingGood (~getSometh@d72-39-70-155.home1.cgocable.net) (Remote host closed the connection)
[07:11:10] *** Joins: blaklistd (~blaklistd@user/blaklistd)
[07:15:37] *** Quits: jazzy (~jaziz@2600:380:4542:186:7559:22d0:b16b:3c20) (Ping timeout: 256 seconds)
[07:19:00] *** Joins: jazzy (~jaziz@2600:380:4542:186:d4b:fa38:d4e3:e7e5)
[07:28:26] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[07:31:45] *** Quits: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca) (Quit: Leaving.)
[07:31:57] *** Joins: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca)
[07:31:58] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[07:36:16] *** Joins: fflam (~mdt@pool-96-253-99-54.rcmdva.fios.verizon.net)
[07:54:19] *** Joins: hbautista (~hbautista@187.171.204.44)
[08:00:25] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[08:10:58] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[08:11:55] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 258 seconds)
[08:12:12] *** Lord_of_Life_ is now known as Lord_of_Life
[08:15:56] *** Joins: Xogium (~Xogium@LuminaSensum/founder/Xogium)
[08:16:49] <Xogium> hi folks :) I'm trying to use git describe in a makefile and I've ran into what I suspect is a bug with it, though it could be intended ?
[08:17:06] *** Quits: xall (~xall@2600:8800:8c02:3600:582e:91f2:6609:d534) (Quit: Client closed)
[08:17:28] <Xogium> ig you use GIT_DIR= with it, if you are not in the toplevel of your git repo, even if you are in a subdir of your project, it *always* append dirty
[08:17:30] *** Joins: ferdna (~ferdna@user/ferdna)
[08:17:37] <Xogium> *if
[08:18:24] <Xogium> that is I typically use describe with --broken --dirty options
[08:18:34] <Xogium> my tree is clean
[08:19:03] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[08:19:11] <Xogium> running git describe without setting GIT_DIR and being in the correct directory prints the tag and commits with no sign of dirty added
[08:20:19] <Xogium> if I move out of there, dirty gets appended
[08:22:09] <Xogium> any way to work around that ? Someone on reddit suggested using the --work-tree option, but this isn't a thing in git describe
[08:29:03] <Xogium> ah maybe I also need to set GIT_WORK_TREE
[08:29:34] *** Quits: debsan (~debsan@2800:810:471:2ee::1000) (Ping timeout: 246 seconds)
[08:29:58] <Xogium> but is this expected behavior though ?
[08:34:45] *** Quits: structoha (~structoha@gateway/tor-sasl/structoha) (Quit: WeeChat 3.0)
[08:42:25] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 244 seconds)
[08:51:46] *** Quits: hoochmonger (~hoochmong@user/hoochmonger) (Ping timeout: 272 seconds)
[08:52:24] *** Quits: apauli (~apauli@dynamic-077-008-063-007.77.8.pool.telefonica.de) (Ping timeout: 272 seconds)
[08:54:24] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[08:59:45] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[09:06:55] <ikke> dvl: nice
[09:08:00] <Xogium> hm yes, looks like setting GIT_WORK_TREE was the solution here, but I do wonder why. Surely if you set GIT_DIR, it can figure out the work tree is litterally the parent directory ?
[09:08:14] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 272 seconds)
[09:08:15] <Xogium> or is it not always the case ?
[09:10:39] *** Quits: thiago (~thiago@2601:1c0:4501:635c:af48:2370:e2b1:58d9) (Ping timeout: 256 seconds)
[09:10:55] <ikke> it does not assume so
[09:11:10] *** Joins: madewokherd` (~urk@65-128-250-224.mpls.qwest.net)
[09:12:55] *** Quits: madewokherd (~urk@65-128-250-224.mpls.qwest.net) (Ping timeout: 256 seconds)
[09:14:17] <Xogium> hm, intentionally ?
[09:14:28] <Xogium> must admit it was a bit confusing
[09:17:40] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[09:18:02] <ikke> well, think of the converse case
[09:18:19] <ikke> you have the git dir somewhere else, so you set GIT_DIR=path/to/git/dir
[09:18:56] <ikke> if git would assume the working tree is in that other location as well, it would give confusing results
[09:19:14] <ikke> Xogium: maybe you want git -C path/to/other/dir
[09:19:23] <Xogium> hm, yeah, I can see what would happen. I didn't know you could store the .git dir entirely separate from the tree
[09:21:34] <Xogium> oh, hmm, maybe would work better than what I currently have
[09:23:12] <Xogium> I'll have to experiment a bit, but thanks for the hint :)
[09:33:36] *** Parts: Xogium (~Xogium@LuminaSensum/founder/Xogium) (leaving channel)
[09:35:04] *** Quits: arcatech (~arcatech@user/arcatech) (Remote host closed the connection)
[09:36:33] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[09:41:30] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 240 seconds)
[09:43:32] *** Joins: Vonter (~Vonter@user/vonter)
[09:48:46] *** Quits: hbautista (~hbautista@187.171.204.44) (Ping timeout: 272 seconds)
[09:49:35] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 244 seconds)
[09:57:23] *** Quits: Vonter (~Vonter@user/vonter) (Quit: WeeChat 3.1)
[09:58:16] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 272 seconds)
[09:58:22] *** Joins: Vonter (~Vonter@user/vonter)
[09:59:12] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[10:22:24] *** Joins: srinidhi (~srinidhi@49.206.4.186)
[10:29:03] *** Joins: adlternative (~adl@117.32.216.94)
[10:30:02] *** Quits: reset (~reset@user/reset) (Quit: reset)
[10:30:39] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[10:35:38] *** Quits: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca) (Ping timeout: 272 seconds)
[10:38:50] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Ping timeout: 268 seconds)
[10:39:29] *** Quits: adlternative (~adl@117.32.216.94) (Remote host closed the connection)
[10:39:51] *** Joins: dermoth_ (~dermoth@user/dermoth)
[10:39:53] *** Joins: adlternative (~adl@117.32.216.94)
[10:40:06] *** Quits: dermoth (~dermoth@user/dermoth) (Killed (NickServ (GHOST command used by dermoth_)))
[10:40:08] *** dermoth_ is now known as dermoth
[10:43:38] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[10:43:46] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Ping timeout: 268 seconds)
[10:43:55] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[10:49:41] *** Parts: k_sze (~k_sze@mail2.kalunite.net) ()
[10:52:16] *** Quits: bdeferme (~bdeferme@i.ctrl86.com) (Ping timeout: 252 seconds)
[10:52:30] *** Joins: sysh (~sysh@212.237.182.120)
[10:53:09] *** Quits: sysh (~sysh@212.237.182.120) (Client Quit)
[10:53:24] *** Joins: sysh (~sysh@212.237.182.120)
[10:55:41] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[10:58:01] *** Joins: bdeferme (~bdeferme@i.ctrl86.com)
[10:58:34] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:03:52] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[11:05:40] *** Joins: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3)
[11:05:55] *** Joins: zj (~zj@185.47.132.113)
[11:08:08] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:08:45] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 265 seconds)
[11:08:55] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[11:10:17] *** Quits: mthall (~quassel@2a01:4f9:4a:2f4d:ecb0:6aff:fed2:c9a1) (Ping timeout: 268 seconds)
[11:12:17] *** Joins: discipulus (~discipulu@user/discipulus)
[11:16:56] *** Joins: xrisovalantis (~stv@hermes.gatewaynet.com)
[11:17:34] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:20:06] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:25:10] *** Joins: dimi1947 (~dimi1947@2a02:1388:208d:76ca:6022:6217:fc1a:dde8)
[11:25:44] *** Joins: arash (~arash@185.129.241.135)
[11:30:15] *** Joins: opzeul (~opzeul@2001:b07:646a:9382:19b2:fa5c:b4eb:8176)
[11:37:13] *** Quits: unluckyshrubbery (~unluckysh@097-070-104-004.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[11:39:06] *** Quits: pony (~ed@168.138.14.60) (Quit: WeeChat 2.8)
[11:39:55] *** Joins: pony (~ed@168.138.14.60)
[11:42:52] *** Joins: rfuentess (~rfuentess@static-5-51-117-151.ftth.abo.bbox.fr)
[11:55:43] <sunyibo> is there like a git workbook? The Pro Git book explains the theory. I'd like to apply it whithout inventing all the scenarios mentionned.
[11:56:20] <pcarphin> There is https://learngitbranching.js.org
[11:57:05] <sunyibo> thanks! How can I fix this? https://bpa.st/5E7Q
[11:58:13] *** Joins: noidea (~noidea@user/noidea)
[11:58:32] <pcarphin> To make sure that only one git process at a time touches the repo, some git commands will create this file and delete it at the end.
[11:59:22] <pcarphin> Some other git commands will check to make sure that that file is not there to prevent having two git processes working on the same repo at the same time.
[11:59:38] <pcarphin> And it can happen that the file gets created but not deleted for whatever reason.
[12:00:12] *** Quits: nivag (~gavin@103-76-144-176.ip.cis.gen.nz) (Remote host closed the connection)
[12:00:21] <pcarphin> What you should do is a quick check to make sure that you don't have another git process running in another shell
[12:00:29] *** Joins: DevAntoine (~DevAntoin@195.101.183.21)
[12:00:40] <pcarphin> And if there is no other git process running, simply delete the file.
[12:00:45] *** Quits: DevAntoine (~DevAntoin@195.101.183.21) (Remote host closed the connection)
[12:01:14] *** Joins: DevAntoine (~DevAntoin@195.101.183.21)
[12:06:26] <sunyibo> Thanks
[12:10:51] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:14:48] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[12:18:40] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[12:21:04] *** Joins: Pacific_ (~arash@185.129.241.137)
[12:21:12] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:23:59] *** Joins: mokulus (~mokulus@user/mokulus)
[12:24:07] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:24:34] *** Quits: arash (~arash@185.129.241.135) (Ping timeout: 272 seconds)
[12:31:04] *** Joins: Pacific__ (~arash@91.219.212.88)
[12:31:53] *** Joins: Darkfoe1 (~chuck@drunk.serverfail.party)
[12:33:06] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:34:39] *** Quits: Pacific_ (~arash@185.129.241.137) (Ping timeout: 256 seconds)
[12:39:15] *** Joins: Pacific_ (~arash@185.129.241.137)
[12:41:26] *** Quits: Pacific__ (~arash@91.219.212.88) (Read error: Connection reset by peer)
[12:46:04] *** Joins: hegstal (~hegstal@2a02:c7f:7604:8a00:19d1:3d77:8320:86c9)
[12:47:48] *** Quits: zj (~zj@185.47.132.113) (Quit: zj)
[12:48:09] *** Joins: zj (~zj@185.47.132.113)
[12:57:31] *** Quits: qpdb_ (~qpdb@user/qpdb) (Quit: WeeChat 3.1)
[12:57:55] *** Joins: qpdb (~qpdb@user/qpdb)
[13:01:49] *** Joins: Pacific__ (~arash@91.219.212.90)
[13:04:37] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[13:05:44] *** Quits: Pacific_ (~arash@185.129.241.137) (Ping timeout: 272 seconds)
[13:06:20] *** Joins: Pacific_ (~arash@185.129.241.137)
[13:08:39] *** Joins: arash (~arash@185.129.241.137)
[13:09:34] *** Quits: acid (~acid@user/acid) (Ping timeout: 246 seconds)
[13:09:54] *** Quits: Pacific__ (~arash@91.219.212.90) (Ping timeout: 240 seconds)
[13:11:19] *** Joins: acid (~acid@user/acid)
[13:12:04] *** Quits: Pacific_ (~arash@185.129.241.137) (Ping timeout: 272 seconds)
[13:13:54] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 240 seconds)
[13:17:10] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[13:31:45] <sunyibo> https://bpa.st/R24A how can I fix this?
[13:35:08] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:35:29] <ikke> I'm wondering what you are doing, that you run into this
[13:36:10] *** Quits: andrzejv (~andrzejv@78-56-77-187.static.zebra.lt) (Ping timeout: 252 seconds)
[13:36:29] *** Joins: unluckyshrubbery (~unluckysh@097-070-104-004.res.spectrum.com)
[13:39:01] *** Joins: andrzejv (~andrzejv@78-56-77-187.static.zebra.lt)
[13:39:59] *** Joins: gareppa (~gareppa@user/gareppa)
[13:41:25] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[13:42:06] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[13:42:43] <no_gravity> Hello! Is there a way to do "git diff" but not "working dir vs HEAD" but "other_branch vs HEAD"?
[13:43:13] <cbreak> no_gravity: sure.
[13:43:25] <cbreak> just tell git diff what to diff
[13:43:41] <no_gravity> This seems to work: git diff branch1..branch2
[13:44:05] <cbreak> you can make it less confusing if you replace the .. with a space
[13:44:13] <ikke> !dots
[13:44:13] <gitinfo> A..B = stuff that happened between A and B (if A and B are related; otherwise refer to "man gitrevisions"), A...B = (a) in history viewers: stuff that isn't in both A and B yet; (b) in "git diff": stuff that happened in B since the two diverged; (c) in "git checkout": the merge base of A and B. "master.." is the same as "master..HEAD" and "..master" is the same as "HEAD..master", and so forth.
[13:44:33] <ikke> Oh, not what I meent
[13:44:35] <no_gravity> cbreak: Great
[13:44:51] <no_gravity> Can I do the same for "git status"?
[13:45:02] <cbreak> no
[13:45:03] <ikke> For diff, the 2 dots are refundant
[13:45:06] <cbreak> status is about the working dir
[13:45:16] <cbreak> it doesn't make any sense for commits
[13:45:21] <ikke> diff --name-status
[13:45:22] <cbreak> maybe you mean git show?
[13:45:58] <no_gravity> This seems to work: diff --name-status branch1 branch2
[13:46:00] <rfuentess> Salut!  I have a bizarre question
[13:46:39] <no_gravity> What does the "A" and "M" mean in the ouput? "Added" and "Modified"?
[13:46:47] <rfuentess> I'm trying to understand a difference between retrieving manually a git repo with `git clone` and placing it as a submodule with `git submodule`. Plus Docker + Cmake :P
[13:46:52] <ikke> no_gravity: yes
[13:46:59] <no_gravity> ikke: Great
[13:47:08] <ikke> D is deleted
[13:47:17] <ikke> R is renamed
[13:47:33] <ikke> C is copied
[13:48:21] <rfuentess> With the `git clone`, when the docker build runs the  dependency repo's cmake is able to retrieve the last available git tag  of said repo. However, when the approach with submodule  is used this fails. And the dependency directory is not seen as a git directory!
[13:49:22] <no_gravity> rfuentess: I think you need to untangle the different parts of you situation. I don't think Docker really should be part of your question.
[13:49:24] <rfuentess> and if I go to the failed docker container to do the operation manually, everything is OK
[13:49:41] *** Joins: nivag (~gavin@103-76-144-176.ip.cis.gen.nz)
[13:50:08] <cbreak> rfuentess: submodules are more or less normal git repositories
[13:50:16] <rfuentess> no_gravity: let me try
[13:51:24] <rfuentess> when I do a `git clone RepoA`, and I go to that directory, everything is fine (`git fetch origin` works, I see git tags, etc). After doing  git submodule add repoA plus the init and update. Everything is also good
[13:51:49] <rfuentess> Sure, the submodule is detached, but is pointing to the current HEAD of my RepoA branch
[13:52:50] *** Joins: rendar (~rendar@user/rendar)
[13:53:02] <rfuentess> ... of my main RepoA's branch
[13:53:12] <rendar> there is a way with 'git log' to print the per-commit number of lines + number of files modified?
[13:53:42] <no_gravity> rfuentess: Maybe you can write a little script with the commands that show your issue? So the script creates an empty git repo, clones something from github, creates a sub repo. Then tell us what state you expect and how it differes from the result. So we can try it.
[13:53:57] <rfuentess> when I run the docker builder. Something goes wrong.  When I  do the steps of the builder manually on the docker container, nothing bad happens.  In both cases  I do a full copy of the master directory with all its dependencies
[13:54:47] *** Quits: arash (~arash@185.129.241.137) (Read error: Connection reset by peer)
[13:56:10] <rfuentess> no_gravity:  Not sure to be able to reproduce the problem in a small script. As the repos are private.
[13:56:35] <no_gravity> rfuentess: You mean it is specific to your repos?
[13:56:46] <rfuentess> yep :(
[13:57:32] <no_gravity> rfuentess: I am sceptical. I have the feeling you need to untangle your situation to figure out what actually is going on.
[13:58:05] <rfuentess> no_gravity: yeah. As far as I understand, for what I need  the behavior of git submodule should be enough
[13:58:26] *** Joins: rossome (~rossome@server.likeaross.com)
[14:03:49] <rendar> any help?
[14:04:05] <no_gravity> rendar: ?
[14:04:17] <rendar> there is a way with 'git log' to print the per-commit number of lines + number of files modified?
[14:04:23] <henk> rendar: log --stat?
[14:05:07] <rendar> henk: nope, it prints per commit *multiple* files, one for each line, i only need the number of total files A/M/D
[14:05:38] <rendar> basically i need a per-commit oneliner like this: `22 files changed, 785 insertions(+), 421 deletions(-)`
[14:06:54] <henk> rendar: --shortstat?
[14:07:18] <rendar> henk: basically yes, but without the per commit comment
[14:07:37] <rendar> or date, or hash, only files changed
[14:07:42] <no_gravity> rendar: I wrote a tool for that once. But I have no idea where I stored it.
[14:08:01] *** Joins: pulse (~pulse@user/pulse)
[14:08:16] <rendar> no_gravity: i see.. i guess it's floating somewhere, since there is no gravity..
[14:08:25] <no_gravity> rendar: Exactly
[14:08:29] <rendar> ^_^
[14:09:05] *** Joins: Crassus (~Crassus@user/crassus)
[14:09:11] *** Joins: liefer6 (~liefer@user/liefer)
[14:10:13] <rendar> so that's not possible with actual git log options
[14:10:31] <henk> log --shortstat --pretty=format:?
[14:10:31] <cbreak> rendar: have you considered using a custom log format?
[14:10:36] <no_gravity> rendar: Maybe the tool was just a git command with the right options. I can't remember.
[14:11:23] <rendar> henk: formatters doesn't contain those info
[14:11:33] <rendar> cbreak: yes, but ^
[14:12:21] <henk> rendar: huh? sorry, I don’t understand what you mean.
[14:12:38] <cbreak> rendar: that's not that bad
[14:12:46] <cbreak> you can still use it to suppress all the stuff you don't want
[14:12:55] <rendar> henk: --pretty="%H" and i print hashes per commit becuase the formatter %H exists for hash, but formatters for number of files modified don't
[14:13:15] *** Joins: wender (~Wender@189.37.69.67)
[14:13:15] *** Quits: liefer (~liefer@user/liefer) (Ping timeout: 256 seconds)
[14:13:16] *** liefer6 is now known as liefer
[14:13:57] <rendar> apparently `git log --shortstat --format=""` does what i want, but if i want to add commit hash, i get 2 lines
[14:14:21] <henk> ah, right
[14:16:46] *** Quits: computeiro (~Wender@189.37.66.161) (Ping timeout: 246 seconds)
[14:19:51] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[14:42:21] <rfuentess> OH! I found something funny.  At my main repo  depdencies/repoA/.git   that is a  file with a relative path to my main repo directory . That is the source of the conflict xD
[14:44:10] *** Quits: brcolow (~brcolow@ip68-0-136-132.tc.ph.cox.net) (Ping timeout: 250 seconds)
[14:44:11] <rfuentess> Correction, is a relative path to the real .git directory of RepoA  BUT this one is on my main repo own .git  sub-directory. This is why my operation fails on Docker. I don't copy the full directory but only the one where I put back all my dependencies
[14:45:13] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[14:45:37] <sunyibo> @ikke: running git-annex without understanding git. (but learning). Trying.
[14:47:22] *** Joins: brcolow (~brcolow@ip68-0-136-132.tc.ph.cox.net)
[14:51:16] *** Joins: tha (~user@2a05:f480:1400:f44:5400:3ff:fe6d:f349)
[14:54:13] <canton7> rfuentess, is that a worktree?
[14:54:32] <canton7> Oh, is it a submodule?
[14:54:59] <rfuentess> canton7: yep
[14:56:10] <canton7> Right, all of a submodule's data is stored inside the parent repository's .git folder
[14:56:18] <rfuentess> I was copying my submodules into a docker container. But only the subidrectory where they were located. Not all the original repo. My Cmake in one of those repos was detecting the .git file and trying to extract info with git commands. However, the git commands where being told to go to a directory that do not exist on my container xD
[14:56:44] <canton7> (it's for the case where you have one branch with the submodule in, and another branch without: if you switch branches, you shuldn't need to completely delete and then re-fetch the submodule's data)
[14:56:58] <rfuentess> funny thing, If I had used the git submodule update with the shallow  option, this would not happened as the cmake could work without using the git commands
[14:57:14] <canton7> Why not copy it over using 'git archive'?
[14:57:36] <canton7> That gives you a pristine version of the files in the repo (excluding any modifications, untracked changes, etc), without the .git dir
[14:59:31] <rfuentess> I'll study the archive case. Thanks for the tip :)
[14:59:43] <canton7> You can just pipe it to 'untar' or something if that's easiest
[15:00:04] <canton7> Ah, the first example in man git-archive, in fact
[15:00:04] <gitinfo> the git-archive manpage is available at https://gitirc.eu/git-archive.html
[15:02:16] *** Quits: ndim (hun@moooo.n-dimensional.de) (Ping timeout: 246 seconds)
[15:09:04] *** Joins: fef (~thedawn@user/thedawn)
[15:09:39] *** Joins: ndim (~hun@moooo.n-dimensional.de)
[15:10:24] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[15:15:34] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 272 seconds)
[15:22:12] *** Quits: pizdets_ (~pizdets@183.182.114.102) (Quit: pizdets)
[15:23:11] *** Joins: pizdets (~pizdets@183.182.114.102)
[15:26:31] *** Joins: unixbhaskar (~user@37.19.198.56)
[15:32:18] *** Quits: jazzy (~jaziz@2600:380:4542:186:d4b:fa38:d4e3:e7e5) (Ping timeout: 240 seconds)
[15:35:14] *** Joins: apauli (~apauli@dynamic-077-008-063-007.77.8.pool.telefonica.de)
[15:38:15] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[15:40:42] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[15:42:33] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[15:43:46] *** Quits: tchan (~tchan@c-98-206-141-238.hsd1.il.comcast.net) (Ping timeout: 265 seconds)
[15:43:56] *** Joins: tchan (~tchan@c-98-206-141-238.hsd1.il.comcast.net)
[15:45:27] *** Quits: blue_penquin (uid505269@id-505269.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[15:46:30] *** Joins: skapata (~Skapata@user/skapata)
[15:53:47] *** Joins: velix (~velix@user/velix)
[15:54:17] <velix> What's the best way to download the latest state of a reposity and wipe the complete history? I know it's bad, but it's needed.
[15:57:13] *** Joins: lpapp (~lpapp@ec2-15-161-137-233.eu-south-1.compute.amazonaws.com)
[15:57:31] <lpapp> hi, what is the best way to split a commit to a single file into multiple to that file?
[15:59:06] *** Quits: opzeul (~opzeul@2001:b07:646a:9382:19b2:fa5c:b4eb:8176) (Quit: Leaving)
[16:00:37] <bookworm> lpapp: reset, then stage the things you want, maybe with git add -up or something and then commit?
[16:00:54] <bookworm> keep !rewrite in mind though
[16:00:54] <gitinfo> Rewriting public history is not recommended. Everyone who has pulled the old history will have to do work (and you'll have to tell them to), so it's infinitely better to just move on. If you must, you can use `git push --force-with-lease <remote> <branch>` to force (and the remote may reject that, anyway). See http://goo.gl/waqum
[16:01:51] <bookworm> if you touched lots of different things, git add may be a bit tedious and you'd be faster using an integration of your editor. Most popular ones have git plugins that make this easy
[16:11:38] *** Quits: unixbhaskar (~user@37.19.198.56) (Ping timeout: 252 seconds)
[16:24:50] *** Quits: ano (~weechat@user/ano) (Ping timeout: 244 seconds)
[16:26:41] <lpapp> vim is my editor.
[16:27:05] *** Quits: tchan (~tchan@c-98-206-141-238.hsd1.il.comcast.net) (Quit: WeeChat 3.0.1)
[16:27:07] <lpapp> bookworm: git add -up?
[16:27:22] *** Joins: tchan (~tchan@c-98-206-141-238.hsd1.il.comcast.net)
[16:28:09] <bookworm> add all known and changed files, but ask me for each hunk if I want to stage it or not
[16:28:30] <bookworm> that's essentially what -up does in a nutshell
[16:29:24] <bookworm> as for vim, tpope has a plugin called fugitive which is *very* neat
[16:29:57] <bookworm> inb4 emacs people and magit, but it's one of the best integrations we gave for vim
[16:30:02] <lpapp> git add -up is really cool, just read the help.
[16:30:31] <lpapp> vim plugins are silly to use.
[16:30:41] <bookworm> not really no
[16:31:07] <bookworm> silly is having a context switch every time you do something ;)
[16:31:54] <bookworm> and then manually navigating from the output in one shell via copy paste or manual entry in the editor if you could've done the same with 2 keys
[16:48:39] <nedbat> silly is debating tools like this :)
[16:50:22] <bookworm> don't make me grep for everything you've ever said, you've been here long enough that I'll probably find a similar discussion ;P
[16:54:08] <nedbat> bookworm: sure :)
[17:02:46] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:04:55] *** Joins: hoochmonger (~hoochmong@user/hoochmonger)
[17:07:00] *** Joins: blue_penquin (uid505269@id-505269.brockwell.irccloud.com)
[17:11:08] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[17:12:56] *** Joins: DevAntoi_ (~DevAntoin@195.101.183.21)
[17:16:51] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 256 seconds)
[17:17:10] *** Quits: DevAntoine (~DevAntoin@195.101.183.21) (Ping timeout: 272 seconds)
[17:20:20] *** Quits: cdown_ (~cdown@163.114.131.1) (Remote host closed the connection)
[17:20:34] *** Joins: cdown (~cdown@163.114.131.1)
[17:26:57] *** Joins: debsan (~debsan@2800:810:471:2ee::1000)
[17:30:35] *** Joins: qunzhong_luxian (~qunzhong_@68.235.43.150)
[17:35:51] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[17:37:28] *** Joins: ano (~weechat@user/ano)
[17:43:00] *** Joins: Guest53 (~textual@170.250.221.149)
[17:45:46] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[17:45:50] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:46:28] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[17:48:55] *** Joins: nyah (~nyah@90.221.186.180)
[17:49:12] *** Quits: qunzhong_luxian (~qunzhong_@68.235.43.150) (Quit: Textual IRC Client: www.textualapp.com)
[17:54:05] *** Quits: Guest53 (~textual@170.250.221.149) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:54:18] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 240 seconds)
[17:59:42] *** Quits: dslegends (~dslegends@user/dslegends) (Quit: ZNC 1.8.2 - https://znc.in)
[18:02:08] *** Joins: dslegends (~dslegends@user/dslegends)
[18:02:34] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:04:42] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:11:49] *** Quits: frobnic (fb@b2b-130-180-11-14.unitymedia.biz) (Quit: leaving)
[18:11:59] *** Joins: frobnic (fb@b2b-130-180-11-14.unitymedia.biz)
[18:12:31] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[18:16:19] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[18:21:19] *** Joins: keypusher (keypusher@user/keypusher)
[18:23:45] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:29:05] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[18:31:08] *** Quits: DevAntoi_ (~DevAntoin@195.101.183.21) (Remote host closed the connection)
[18:31:37] *** Joins: DevAntoine (~DevAntoin@195.101.183.21)
[18:31:39] *** Quits: brcolow (~brcolow@ip68-0-136-132.tc.ph.cox.net) (Ping timeout: 256 seconds)
[18:32:32] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[18:33:49] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:36:22] *** Quits: zj (~zj@185.47.132.113) (Remote host closed the connection)
[18:46:35] *** Joins: rsx (~dummy@ppp-188-174-150-120.dynamic.mnet-online.de)
[18:54:48] *** Joins: ecraven (ecraven@user/nex)
[18:55:06] <ecraven> hello ;) can I set options like core.longpaths or http.sslCAInfo inside a [url "git@some-server.com"] block?
[18:55:25] <ecraven> I can't clone the repo without setting them, and I can't set them for that specific repo without cloning it :-/
[18:57:55] *** Joins: thiago (~thiago@2601:1c0:4501:635c:af48:2370:e2b1:58d9)
[19:05:25] *** Joins: arcatech (~arcatech@user/arcatech)
[19:06:22] *** Joins: Adoi (~Adoi@user/adoi)
[19:09:52] *** Joins: randall (~randall@user/randall)
[19:10:08] *** Joins: Adois (~Adoi@user/adoi)
[19:10:52] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 258 seconds)
[19:12:38] <randall> Hi, I'd like to revert a single file to the state before the last commit that touched it (there are many other commits in the repo, just on other files). What command would I use to achieve that? I'd only like to change the workdir for now, not commit that revert.
[19:12:46] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[19:14:41] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Read error: Connection reset by peer)
[19:15:02] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[19:15:17] <gpanders> randall: what I usually do is `git log -1 -- path/to/file` to get the hash of the commit, then do `git checkout <commit>^ path/to/file`
[19:15:36] *** Joins: bynx (~bynx@fw.rry.vaskywire.net)
[19:17:38] <randall> gpanders: Thanks, that worked for me. Is there a way to not stage that change immediately?
[19:19:18] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 258 seconds)
[19:20:03] <gpanders> Not that I know of, from `git help checkout`: "When the <tree-ish> is given, overwrite both the index and the working tree with the contents at the <tree-ish>."
[19:20:18] <gpanders> I don't see an option to modify that behavior
[19:20:33] *** Quits: madewokherd` (~urk@65-128-250-224.mpls.qwest.net) (Quit: If your computer stops responding for a long time, turn it off and then back on.)
[19:20:58] <randall> Eh, good enough. I can live with using two commands for that. Thanks again :)
[19:21:24] <gpanders> randall: ah! `git help restore`
[19:21:30] <gpanders> git restore -s <commit>^ path/to/file
[19:21:36] <gpanders> seems to only restore the working tree file
[19:22:13] <gpanders> I learned something new today
[19:23:11] <randall> Oh nice! Me too.
[19:23:23] <imMute> ecraven: git init a repo, set those options, then add the remote and fetch.
[19:24:12] <ecraven> imMute: ok, so no way to set options "globally" for some specific server?
[19:24:47] <imMute> ecraven: I don't think so.  you could also set those options globally, do the clone, set them in the repo gitconfig, and then remove them from the global config.
[19:25:42] <hexology> with `git log --pretty'format:...
[19:25:47] <ecraven> I've gone with the environment variable GIT_SSL_CAINFO, -c http.sslcainfo=... works too... but this seems like something that would be useful.. thanks for the help!
[19:25:52] <hexology> (sorry, pressed enter too early)
[19:26:57] <hexology> with `git log --pretty'format:...`, the `%d` option doesn't use any colors, while `--decorate` uses different colors for HEAD, remote branches, and local branches. is it possible to get `%d` to use the same colors as `--decorate`?
[19:28:27] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[19:31:50] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 252 seconds)
[19:32:08] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[19:32:36] *** Quits: xrisovalantis (~stv@hermes.gatewaynet.com) (Quit: leaving)
[19:47:28] *** Joins: kenanmarasli (~kenanmara@31.223.13.139)
[19:49:56] *** Quits: bynx (~bynx@fw.rry.vaskywire.net) (Quit: o/)
[19:53:54] *** Quits: hegstal (~hegstal@2a02:c7f:7604:8a00:19d1:3d77:8320:86c9) (Ping timeout: 240 seconds)
[19:56:36] *** Joins: madewokherd (~urk@comcast.codeweavers.com)
[20:01:52] *** Quits: srinidhi (~srinidhi@49.206.4.186) (Ping timeout: 265 seconds)
[20:03:30] *** Quits: adlternative (~adl@117.32.216.94) (Ping timeout: 240 seconds)
[20:05:48] *** Parts: lpapp (~lpapp@ec2-15-161-137-233.eu-south-1.compute.amazonaws.com) ()
[20:07:45] <ikke> hexology: %C(auto)
[20:09:01] <hexology> ikke: wow, i never would have figured that out... thanks.
[20:16:40] *** Joins: srinidhi (~srinidhi@49.206.4.186)
[20:26:22] *** Joins: Torr (~Torr@user/torr)
[20:27:31] *** Quits: mokulus (~mokulus@user/mokulus) (Quit: WeeChat 3.2)
[20:31:10] <mehwork> Is this the the right way to say this: `git rebase -i origin/foo` in your branch, rebases your branch on top of whatever commit origin/foo points to?
[20:31:31] <mehwork> or is it the other way around, that it rebases origin/foo on top of your branch?
[20:34:37] *** Quits: srinidhi (~srinidhi@49.206.4.186) (Ping timeout: 256 seconds)
[20:34:49] *** Quits: DevAntoine (~DevAntoin@195.101.183.21) (Remote host closed the connection)
[20:35:03] *** Joins: DevAntoine (~DevAntoin@195.101.183.21)
[20:35:53] *** Joins: DevAntoi_ (~DevAntoin@195.101.183.21)
[20:38:06] <imMute> mehwork: first statement is correct
[20:38:47] *** Joins: natrys (~natrys@user/natrys)
[20:39:03] *** Quits: fnurkla (~fnurkla@h-98-128-211-79.A357.priv.bahnhof.se) (Quit: WeeChat 3.2)
[20:39:50] *** Quits: DevAntoine (~DevAntoin@195.101.183.21) (Ping timeout: 272 seconds)
[20:40:28] *** Quits: DevAntoi_ (~DevAntoin@195.101.183.21) (Ping timeout: 272 seconds)
[20:41:23] <mehwork> ok thanks
[20:42:36] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[20:42:41] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[20:45:45] *** Joins: orbyt (~textual@172.92.4.78)
[20:47:28] *** Quits: blue_penquin (uid505269@id-505269.brockwell.irccloud.com) ()
[20:53:58] *** Joins: reset (~reset@user/reset)
[20:57:59] *** Joins: sudomannn (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[20:58:56] *** Parts: natrys (~natrys@user/natrys) ()
[21:01:30] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 240 seconds)
[21:02:55] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[21:03:30] *** Quits: arcatech (~arcatech@user/arcatech) (Ping timeout: 240 seconds)
[21:04:36] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[21:06:42] *** Quits: sudomannn (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 240 seconds)
[21:07:34] *** Joins: arcatech (~arcatech@user/arcatech)
[21:08:34] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[21:11:57] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 265 seconds)
[21:13:09] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Client Quit)
[21:13:25] *** Joins: seand (~seand@69.54.136.33)
[21:14:59] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[21:17:22] *** Quits: rfuentess (~rfuentess@static-5-51-117-151.ftth.abo.bbox.fr) (Remote host closed the connection)
[21:22:35] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 265 seconds)
[21:24:22] *** Joins: digup (~digup@58-7-236-103.dyn.iinet.net.au)
[21:26:28] <sudomann> I dont know what i'm doing wrong - `git fetch`, `git checkout foo-branch`, `git -a merge origin/master -m "message"`
[21:26:41] <sudomann> I still get merge: origin/master - not something we can merge
[21:28:14] <gpanders> what is the -a for?
[21:29:21] <sudomann> oh, thats a typo
[21:29:34] <sudomann> from an earlier commit command i think
[21:30:04] *** Joins: hegstal (~hegstal@2a02:c7f:7604:8a00:1749:70f2:c3b4:7591)
[21:30:13] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:30:19] *** Quits: OMGOMG (~bobrobert@poppy.ifi.uio.no) (Ping timeout: 272 seconds)
[21:30:38] <gpanders> you're sure your remote is called 'origin' and that 'origin/master' exists? double check 'git remote -v' and 'git branch -r'
[21:31:15] *** Joins: OMGOMG (~bobrobert@poppy.ifi.uio.no)
[21:32:15] <sudomann> it does
[21:32:41] <sudomann> i just found that the `git fetch` command wasn't run - lemme fix that and try again
[21:40:59] *** Joins: waxer (~waxer@2a01:e34:ec6c:1520:8232:53ff:fe43:aa3f)
[21:42:20] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[21:43:52] *** Joins: gast0n (~g4570n@user/gast0n)
[21:44:25] *** Quits: rsx (~dummy@ppp-188-174-150-120.dynamic.mnet-online.de) (Quit: rsx)
[21:45:33] *** Joins: Guest1 (~Guest1@192.222.216.4)
[21:45:47] *** Quits: Guest1 (~Guest1@192.222.216.4) (Client Quit)
[21:46:18] <sudomann> goodness I still cant get it to work
[21:46:27] <sudomann> merge: origin/master - not something we can merge
[21:47:45] <gpanders> what does 'git cat-file -t origin/master' say?
[21:48:11] <sudomann> commit
[21:48:34] <sudomann> I should state the error occurs in a CI server
[21:48:43] <sudomann> But the remote and branch definitely exist
[21:49:02] <sudomann> Perhaps an explicit fetch like so
[21:49:03] <sudomann> git fetch origin master
[21:49:10] <sudomann> will that do?
[21:52:45] *** Joins: Betal (~Beta@user/betal)
[21:53:12] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[21:53:16] <gpanders> yea you should probably do that
[21:53:28] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 268 seconds)
[21:53:38] <gpanders> best to be as explicit as possible in automated scripts IME
[21:54:43] <sudomann> The damn thing still fails
[21:54:45] <sudomann> git merge origin/master -m "Nightly merge  'master' -> 'develop'" Failed in 00:00
[21:54:45] <sudomann> merge: origin/master - not something we can merge
[21:55:09] <ikke> git show-ref origin/master
[21:55:17] *** Joins: mixfix41 (~homefame@user/mixfix41)
[21:55:24] <sudomann> on the CI machine or mine
[21:55:30] <ikke> where it fails
[21:55:36] <sudomann> okay I need a minute
[21:56:43] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[21:56:57] <ash_worksi> . a->b
[21:57:16] <ash_worksi> hm
[21:57:18] <ash_worksi> # a->b
[21:57:29] <ash_worksi> gr
[22:02:29] *** Joins: tang^ (~doofus@2604:3d09:47c:f970:e9cd:28e8:f352:cb41)
[22:02:38] <sudomann> still waiting for the CI environment to pickup the change and execute... what is this torture
[22:02:56] <sudomann> 3 minutes late finally
[22:03:41] <sudomann> Strange ikke the command itself failed
[22:03:45] <sudomann> no output error
[22:05:16] <ikke> sudomann: maybe this then: `git for-each-ref`, if you do not have too many refs (branches) in the repo
[22:05:22] *** Parts: ash_worksi (~ash_m@user/ash-m/x-3292451) ()
[22:05:50] *** Joins: Sasazuka (~Sasazuka@user/sasazuka)
[22:08:43] *** Quits: lgc (~lgc@user/lgc) (Quit: WeeChat 3.2-dev)
[22:08:44] <sudomann> nice, it produced a rather short list
[22:09:00] <sudomann> which doesnt have all the entries i get on my machine
[22:09:05] <sudomann> But i dont understand why
[22:09:37] <sudomann> notably the master branch ref is missing
[22:09:39] <ikke> It depends on how the repository is cloned
[22:10:18] <sudomann> this CI environment provides us with a function/command `checkout` which I have been trusting to do the job
[22:10:28] <sudomann> Not what i thought apparently
[22:11:11] <ikke> sudomann: it might be that it does something like git clone -b <remote>
[22:11:20] <ikke> git clone -b <branch> <remote>
[22:11:31] <ikke> which means that it will only fetch that single branch
[22:14:11] *** Joins: Lcawte (~Lcawte@user/lcawte)
[22:14:51] <sudomann> Good suggestion, i'll see docs for what it does in detail
[22:16:34] *** Quits: rendar (~rendar@user/rendar) ()
[22:17:33] *** Quits: digup (~digup@58-7-236-103.dyn.iinet.net.au) (Ping timeout: 258 seconds)
[22:17:56] <sudomann> "By default, the implementation of the checkout command uses shallow clone during the clone operation"
[22:18:14] <sudomann> That shouldnt be a problem should it
[22:19:22] *** Joins: srinidhi (~srinidhi@49.206.4.186)
[22:24:41] *** Joins: welovfree (~welovfree@160.178.41.198)
[22:31:07] *** Joins: pyeverything (~mona@c-66-31-107-137.hsd1.ma.comcast.net)
[22:31:23] <pyeverything> I am getting this error for git push. Could you please have a look and guide me? https://pastebin.com/raw/m7cpwKuJ
[22:32:19] <pyeverything> Please not that my changes are final and I want to actually push my changes regardless of whatever is in remote (since mine are final and correct)
[22:32:23] <Lcawte> Looking for a bit of workflow advice. Moving my project SVN->Git. We've got a big master SVN repo that we dump a CMS type thing in from upstream tarballs. They use and version in git, so we want to make contributing back easier. I suppose WordPress is a reasonable example to consider. In addition to having both downstream themes/plugins, we use upstream stuff and lead a few upstream plugin developments, and we'd like to local copy duplication. This bit is
[22:32:23] <Lcawte> fairly easy, I think (submodules or subtree?), but, sometimes we have to core hack the framework. These aren't always pushed back upstream. What's the best way to manage this in git, without a mess of merges? Someone suggested rebasing our changes ontop of their master (and I guess pushing to our remote?)
[22:37:49] *** Adois is now known as Adoi
[22:38:15] <pyeverything> $ git push -f worked ^
[22:39:16] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[22:41:04] <j416> Lcawte: figure out if your changes are patches on top of upstream, or if this is a fork of it.
[22:41:34] <j416> Lcawte: it sounds like the former. I'd probably keep my changes in a separate branch and rebase that periodically on upstream.
[22:47:48] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[22:51:34] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 272 seconds)
[22:55:18] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[22:56:56] *** Joins: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca)
[22:57:15] *** Quits: dimi1947 (~dimi1947@2a02:1388:208d:76ca:6022:6217:fc1a:dde8) (Quit: Leaving)
[22:59:50] *** Quits: tang^ (~doofus@2604:3d09:47c:f970:e9cd:28e8:f352:cb41) (Quit: So as I was sayinSQUIRREL)
[23:00:15] *** Quits: anton (~anton@antonmcclure.com) (Quit: anton)
[23:01:03] *** Joins: anton (anton@2604:2dc0:101:200::185)
[23:01:30] <imMute> pyeverything: add "--force" to your push command.  that will overwrite origin's master with your version.
[23:02:03] *** Joins: tang^ (~doofus@2604:3d09:47c:f970:3d97:e4e8:25ea:6de8)
[23:03:32] *** Joins: lmat (~lawsa@c-68-58-60-231.hsd1.in.comcast.net)
[23:04:35] <lmat> I'm wanting to divide my repo into two parts: one with front-end code and one with backend code. This should be pretty easy because at the root of the repo, there is a `frontend` directory and a `backend` directory.
[23:05:02] <ikke> man git subtree
[23:05:02] <gitinfo> the git manpage is available at https://gitirc.eu/git.html
[23:05:06] <ikke> !subtree
[23:05:06] <gitinfo> The subtree merge method is great for incorporating a subsidiary git repo into your current one with "unified" history. Read http://git-scm.com/book/en/v2/Git-Tools-Advanced-Merging#_subtree_merge for more info, see also !git-subtree and !git-stitch-repo.
[23:05:35] <imMute> lmat: 'git subtree split' specifically
[23:05:44] <ikke> !git-subtree
[23:05:44] <gitinfo> git-subtree allows a subproject repository to be incorporated into a subdirectory of a main repository, and for the history of a subdirectory to be (re-)exported with reproducible results, making it possible to synchronise a repository with a subdirectory of another repo, see https://github.com/git/git/blob/master/contrib/subtree/git-subtree.txt for more info.
[23:06:00] <lmat> I tried    git clone orig frontend; cd frontend; git filter-branch --index-filter 'git rm -rf --cached --ignore-unmatched backend;' --pr
[23:06:03] <lmat> oh
[23:10:42] <lmat> imMute: One of the repos should actually contain two of the root-level directories: `frontend' and `utils'. Does git subtree do that?
[23:12:06] <imMute> lmat: I think it only splits off a single directory.
[23:12:40] <lmat> imMute: It seems almost trivial for it to take two -P arguments xD
[23:13:07] <lmat> I tried    git clone orig frontend; cd frontend; git filter-branch --index-filter 'git rm -rf --cached --ignore-unmatched backend;' --prune-empty -- --all;  But this didn't change any of the refs.
[23:13:27] <imMute> would seem so, but what you're passing is the *parent* of waht to split off.  the named directory doesn't show up in the resulting commits - the contents of it are at the root of the new trees.
[23:13:58] <lmat> I did some looking at the new frontend repo and I see that .git/refs/ is pretty much empty. I think all the refs are in .git/packed-refs. So I tried another approach...
[23:14:17] <lmat> imMute: Oh, I see. I don't want that removing directory business either. Maybe filter-branch is the best solution for me then.
[23:14:53] <lmat> So I tried doing   git clone --mirror orig frontend/.git;  (then change it to a not-bare repo).
[23:15:41] <lmat> But still, .git/refs is empty!
[23:15:53] <rewt> there's also https://github.com/newren/git-filter-repo/ (referenced from git-filter-branch docs)
[23:16:20] <lmat> I think tha's why the git filter-branch is not affecting any of the branches. I pass --all, but --all maybe isn't referring to any branches because they're not in .git/refs?
[23:16:37] <lmat> rewt: Thank you; I'm familiar with this project, but I think git-filter-branch should work for me in this case.
[23:16:51] <rewt> filter-repo is so much easier though
[23:17:01] <ikke> lmat: packed refs
[23:17:11] <rewt> and faster
[23:17:51] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[23:17:54] <lmat> rewt: I think I'm almost done. Surely starting over with another tool will take more time?
[23:18:20] <lmat> ikke: Yes. Does git clone --mirror automatically "pack" refs instead of putting them into refs directory?
[23:18:42] <ikke> lmat: yes, even without --mirror
[23:18:47] <ikke> and git gc will pack them as well
[23:19:05] <lmat> ikke: But git filter-branch should deal with these just fine?
[23:19:10] <ikke> yes
[23:19:12] <j416> lmat: sounds like you want --subdirectory-filter
[23:19:22] <lmat> j416: reading!
[23:19:31] <rewt> git filter-repo --path /frontend --path /utils ... and done
[23:20:13] <lmat> ikke: After running git filter-branch --index-filter.....  as far as I can tell, nothing is changed. git branch -av; shows all the same, git log --oneline --graph --decorate --all; looks exactly the same as the parent repo, etc.
[23:20:55] <lmat> j416: That does look helpful. I do have more than one subdirectory...can I pass multiple --subdirectory-filter ?
[23:20:56] <rewt> sounds like it'll make more time to figure out filter-branch ;)
[23:21:00] <ikke> lmat: what ref did you pass to git filter-branch
[23:21:12] <ikke> maybe it's faster to switch to filter-repo :P
[23:21:13] <j416> lmat: to end up with what result?
[23:21:29] <j416> lmat: --subdirectory-filter makes the dir you give it the root
[23:21:33] <rewt> filter-branch has some quirks, which is why its doc strongly recommends to use filter-repo
[23:21:46] <j416> filter-repo also has quirks
[23:21:49] <lmat> ikke: -- --all
[23:22:02] <j416> both have their use-case, I would think.
[23:22:13] <lmat> My command is    git filter-branch --index-filter "git rm -rf --cached --ignore-unmatch blockchains contracts" --prune-empty -- --all;
[23:22:30] <ikke> lmat: ok, that should be good
[23:22:51] <lmat> j416: I would like to end up with two new repositories, one with a copy of the 'frontend' and 'utils' directories of the parent and one with the 'backend' directory of the parent.
[23:23:06] <lmat> j416: That's a pretty "arm-wavey" description of success, but perhaps it's sufficient :-D
[23:23:09] <lmat> ikke: I agree!
[23:23:12] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 252 seconds)
[23:23:32] <j416> lmat: in that case, --subdirectory-filter wouldn't be the right option of course.
[23:23:50] <lmat> j416: drat. Again, it seems that it might have been trivial to accept multiple directories xD
[23:23:52] <j416> lmat: description of success?
[23:24:11] <j416> lmat: I don't see how it'd be trivial
[23:24:25] <j416> it'd need to merge them, and potentially end up with conflicts
[23:24:50] <j416> --subdirectory-filter does not mean "remove anything but this directory".
[23:25:05] <lmat> j416: Oh, does it also move all the directory contents up one level?
[23:25:09] <j416> it means, make this directory the root
[23:25:13] <j416> man git-filter-branch
[23:25:13] <gitinfo> the git-filter-branch manpage is available at https://gitirc.eu/git-filter-branch.html
[23:25:19] <j416> lmat: yes.
[23:25:38] <lmat> j416: So it's the same as git subtree split; then. Agreed, non-trivial.
[23:25:46] <j416> never used that.
[23:25:54] <lmat> I had read it, but missed "as its project root" :-)
[23:26:20] <lmat> ikke: I still have this problem even if I don't `git clone` but instead `cp -r` ! Okay, back to debugging then!
[23:28:40] <rewt> have a look at the very first example here: https://htmlpreview.github.io/?https://github.com/newren/git-filter-repo/blob/docs/html/git-filter-repo.html#EXAMPLES -- seems like exactly what you want
[23:29:18] <lmat> It works if instead of -- --all, I specify /origin/master
[23:30:32] *** Quits: bket (~bket@84-85-227-212.fixed.kpn.net) (Ping timeout: 252 seconds)
[23:35:38] *** Joins: oriba (~oriba@dynamic-089-012-142-087.89.12.pool.telefonica.de)
[23:41:46] *** Quits: oriba (~oriba@dynamic-089-012-142-087.89.12.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:48:37] *** Joins: jazzy (~jaziz@2600:380:4542:186:d4b:fa38:d4e3:e7e5)
[23:48:48] <lmat> Got it working. --ignore-unmatched != --ignore-unmatch. This was unnoticed because I was running two of them at the same time, both in the background. One of them worked (so the output was verbose and covered up the error in the other), then I was checking the one that DIDN'T work wondering why NOTHING happened.
[23:48:53] <lmat> Thanks for holding my hand!
[23:48:54] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[23:49:13] <lmat> rewt: Hopefully filter-repo will be built into git soon so that my reproduction instructions don't involve "install this other tool" :-D
[23:51:06] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[23:53:20] *** Joins: hbautista (~hbautista@187.171.200.117)
[23:55:29] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[23:59:32] *** Quits: hbautista (~hbautista@187.171.200.117) (Remote host closed the connection)
[23:59:51] *** Joins: hbautista (~hbautista@187.171.200.117)
