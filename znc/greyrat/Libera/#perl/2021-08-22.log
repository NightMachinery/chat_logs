[00:02:14] *** Joins: clscott (~clscott@184.147.147.88)
[00:13:08] *** Quits: mattil (~mattil@87-92-153-0.rev.dnainternet.fi) (Quit: Leaving)
[00:17:12] *** Quits: clscott (~clscott@184.147.147.88) (Quit: clscott)
[00:17:34] *** Joins: jetchisel (jetchisel@user/jetchisel)
[00:19:17] *** Joins: clscott (~clscott@bras-base-otwaon0150w-grc-07-184-147-147-88.dsl.bell.ca)
[00:20:06] *** Joins: cation (cation@user/cation)
[00:26:59] *** Quits: zakame (~zakame@user/zakame) (Quit: WeeChat 2.9)
[00:33:48] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 250 seconds)
[00:40:52] *** Joins: habamax (~habamax@user/habamax)
[00:43:54] *** Quits: habamax (~habamax@user/habamax) (Client Quit)
[00:44:07] *** Joins: habamax (~habamax@user/habamax)
[00:45:45] *** Quits: monkey_ (~user@190.104.116.134) (Remote host closed the connection)
[00:48:58] *** Quits: habamax (~habamax@user/habamax) (Ping timeout: 250 seconds)
[00:59:12] *** Quits: anthk_ (~anthk_@92.176.105.30) (Read error: Connection reset by peer)
[00:59:58] *** Quits: diskin (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[01:01:19] *** Joins: diskin (~diskin@31.23.179.220)
[01:05:40] *** Quits: subie (~subie@2601:4c0:4080:bc0:21e1:ab1b:5c16:8966) (Ping timeout: 240 seconds)
[01:09:37] *** Joins: subie (~subie@2601:4c0:4080:bc0:21e1:ab1b:5c16:8966)
[01:10:22] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 252 seconds)
[01:11:27] *** Quits: clscott (~clscott@bras-base-otwaon0150w-grc-07-184-147-147-88.dsl.bell.ca) (Quit: clscott)
[01:14:58] *** Quits: EvanCarroll (~ecarroll@88.246.75.12) (Ping timeout: 250 seconds)
[01:17:35] *** Joins: EGD (~egd@user/egd)
[01:21:02] *** Quits: leighbb (~leighbb@user/leighbb) (Quit: Leaving)
[01:54:33] *** Quits: EGD (~egd@user/egd) ()
[02:12:30] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[02:12:31] *** Joins: G_Sabino1ullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[02:15:14] *** Joins: EvanCarroll (~ecarroll@46.196.88.53)
[02:20:04] *** Joins: gryphn (~gryphon@143.244.48.4)
[02:32:10] *** Quits: fuzzix (~fuzzix@46.7.53.110) (Ping timeout: 240 seconds)
[02:43:43] <EvanCarroll> IT IS I, EVAN THE GREAT
[02:44:42] *** Joins: fuzzix (~fuzzix@46.7.53.110)
[03:10:48] *** Quits: gryphn (~gryphon@143.244.48.4) (Quit: kthxbye)
[03:12:01] *** Quits: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de) (Quit: Leaving.)
[03:15:30] *** Joins: orangebot (~orangebot@2607:fb90:a90c:7621:49fb:cee9:41cf:e054)
[03:20:10] *** Quits: G_Sabino1ullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 252 seconds)
[03:20:10] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 252 seconds)
[03:28:04] *** Parts: orangebot (~orangebot@2607:fb90:a90c:7621:49fb:cee9:41cf:e054) (Leaving)
[03:47:59] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[04:00:27] *** Joins: whynot (~whynot@37.73.56.45)
[04:12:39] *** Joins: proller (~p@2002:50f0:d845:10:4a51:b7ff:fe43:6e30)
[04:16:37] * GumbyPAN CPAN Upload: Test-Compile-v3.0.1 by EGILES https://metacpan.org/release/EGILES/Test-Compile-v3.0.1
[05:29:45] *** Quits: msk (~msk@49.207.192.153) (Ping timeout: 248 seconds)
[05:32:22] *** Quits: proller (~p@2002:50f0:d845:10:4a51:b7ff:fe43:6e30) (Ping timeout: 250 seconds)
[05:39:18] *** Quits: EvanCarroll (~ecarroll@46.196.88.53) (Ping timeout: 250 seconds)
[05:45:45] *** Quits: amnesiac (~marco@c-73-189-251-48.hsd1.ca.comcast.net) (Ping timeout: 248 seconds)
[05:51:02] *** Joins: slopey (~slopey@user/slopey)
[05:52:12] *** Quits: Pali (~pali@user/pali) (Ping timeout: 258 seconds)
[05:59:11] *** Joins: pucara (~i@181.92.207.67)
[06:04:52] *** Quits: Su-Shee (~Susanne@p4ffc7624.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[06:06:31] *** Joins: Su-Shee (~Susanne@p4ff49684.dip0.t-ipconnect.de)
[06:11:15] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[06:25:47] *** Joins: amnesiac (~marco@c-73-189-251-48.hsd1.ca.comcast.net)
[06:41:25] *** Joins: EvanCarroll (~ecarroll@46.196.88.53)
[06:51:55] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 252 seconds)
[06:52:48] *** Joins: clscott (~clscott@184.147.147.88)
[06:54:03] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:56:44] *** Joins: gast0n (~g4570n@user/gast0n)
[06:56:55] * GumbyPAN CPAN Upload: Image-Base-Magick-6 by KRYDE https://metacpan.org/release/KRYDE/Image-Base-Magick-6
[06:57:30] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[07:07:42] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[07:10:15] *** Quits: Xe (~cadey@tailscale/xe) (Quit: WeeChat 3.1)
[07:10:30] *** Joins: Xe (~cadey@tailscale/xe)
[07:10:44] *** Quits: EvanCarroll (~ecarroll@46.196.88.53) (Ping timeout: 250 seconds)
[07:11:57] * GumbyPAN CPAN Upload: Slack-Notify-0.004 by ROBN https://metacpan.org/release/ROBN/Slack-Notify-0.004
[07:29:12] *** Joins: boubou (~boubou@hide.my.ip.upsidehosting.com)
[07:36:24] *** Quits: txtsd (~txtsd@user/txtsd) (Quit: WeeChat 3.2)
[07:52:34] *** Quits: whynot (~whynot@37.73.56.45) (Quit: Lost terminal)
[08:00:02] *** Quits: clscott (~clscott@184.147.147.88) (Quit: clscott)
[08:02:43] *** Joins: txtsd (~txtsd@user/txtsd)
[08:09:39] *** Joins: Martchus_ (~martchus@2a01:c22:7a0d:5200:d250:99ff:fe49:3cce)
[08:10:40] *** Quits: Martchus (~martchus@2a01:c23:c4a2:9100:d250:99ff:fe49:3cce) (Ping timeout: 240 seconds)
[08:11:02] *** Quits: slopey (~slopey@user/slopey) (Quit: Leaving)
[08:12:24] *** Quits: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler) (Remote host closed the connection)
[08:12:47] *** Joins: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler)
[08:45:31] *** Joins: shlomif (~shlomif@87.68.242.72.adsl.012.net.il)
[09:00:15] *** Joins: mmlj4 (~mmlj4@ip68-230-228-233.no.no.cox.net)
[09:42:45] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:54:40] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 240 seconds)
[09:58:21] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: neshpion)
[10:04:24] *** Quits: pucara (~i@181.92.207.67) (Quit: Lost terminal)
[10:09:10] *** Quits: bs338 (~pi@host217-44-163-209.range217-44.btcentralplus.com) (Ping timeout: 240 seconds)
[10:11:13] *** Joins: bs338 (~pi@host217-44-163-209.range217-44.btcentralplus.com)
[10:15:46] *** Quits: kevin-oculus (~tomys@c188-149-14-10.bredband.tele2.se) (Ping timeout: 250 seconds)
[10:28:30] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[10:28:39] *** Joins: R2robot (~R2robot@user/r2robot)
[10:36:43] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[10:46:36] *** Quits: ircuser-1 (~Johnny@71.63.241.168) (Quit: because)
[10:58:56] *** Joins: Adoi (~Adoi@user/adoi)
[10:59:27] *** Joins: furrymcgee (~devuan@31.179.186.66)
[11:03:10] *** Joins: EGD (~egd@user/egd)
[11:04:22] *** Quits: amnesiac (~marco@c-73-189-251-48.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[11:16:21] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[11:29:08] *** Joins: EvanCarroll (~ecarroll@46.196.88.53)
[12:25:43] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[12:43:30] *** Quits: EGD (~egd@user/egd) ()
[12:48:10] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Ping timeout: 240 seconds)
[12:54:22] *** Quits: EvanCarroll (~ecarroll@46.196.88.53) (Ping timeout: 252 seconds)
[13:12:37] *** Joins: mattil (~mattil@87-92-132-211.rev.dnainternet.fi)
[13:41:41] * GumbyPAN CPAN Upload: Prima-1.62_2 by KARASIK https://metacpan.org/release/KARASIK/Prima-1.62_2
[13:52:47] *** Quits: rozie (~rozie@2001:15e8:110:2913:1:1:1:2) (Remote host closed the connection)
[13:57:24] *** Joins: rozie (~rozie@2001:15e8:110:2913:1:1:1:2)
[14:21:09] *** Joins: Pali (~pali@user/pali)
[14:29:43] *** Joins: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de)
[14:30:16] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:31:01] *** Joins: csrf (~csrf@user/csrf)
[14:36:36] *** Joins: zer0bitz_ (~zer0bitz@dsl-hkibng31-58c384-213.dhcp.inet.fi)
[14:37:13] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-58c384-213.dhcp.inet.fi) (Ping timeout: 252 seconds)
[14:53:19] *** Quits: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler) (Ping timeout: 244 seconds)
[14:56:24] *** Quits: zer0bitz_ (~zer0bitz@dsl-hkibng31-58c384-213.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:13:18] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (Killed (NickServ (GHOST command used by norkle_)))
[15:21:45] *** Quits: pflanze (~pflanze@5-168-208-80-pool.fiber.fcom.ch) (Ping timeout: 248 seconds)
[15:43:42] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[15:48:11] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-58c384-213.dhcp.inet.fi)
[15:52:50] *** Joins: diskin_ (~diskin@46.61.16.74)
[15:52:50] *** diskin is now known as Guest2875
[15:52:50] *** diskin_ is now known as diskin
[15:55:19] *** Quits: Guest2875 (~diskin@31.23.179.220) (Ping timeout: 252 seconds)
[16:07:58] *** Quits: dsrt^ (~dsrt@209.65.131.194) (Ping timeout: 252 seconds)
[16:09:57] *** Joins: dsrt^ (~dsrt@209.65.131.194)
[16:11:34] *** Quits: Ovid (~Ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Quit: Leaving...)
[16:25:01] *** Joins: magla (~gelignite@55d4e32c.access.ecotel.net)
[16:25:15] <Pali> Hello! I have found a very nice Perl DBI tutorial: https://zetcode.com/perl/dbi/
[16:25:16] <Paperbot> Link title(s): [ Perl DBI - database programming in Perl with DBI module ]
[16:25:41] <Pali> for me it looks like that is written for people who already know some other DB framework
[16:30:40] *** Quits: ssm (~ssm@shambler.fnord.no) (Quit: WeeChat 2.3)
[16:31:42] *** Quits: dsrt^ (~dsrt@209.65.131.194) (Remote host closed the connection)
[16:32:02] *** Joins: dsrt^ (~dsrt@209.65.131.194)
[16:32:28] *** Quits: dsrt^ (~dsrt@209.65.131.194) (Remote host closed the connection)
[16:34:24] *** Joins: Ovid (~Ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[16:59:47] <shlomif> Pali: hi
[16:59:59] <Pali> shlomif: Hi!
[17:02:02] <shlomif> Pali: what is the licence? is it https://en.wikipedia.org/wiki/All_rights_reserved ?
[17:02:03] <Paperbot> Link title(s): [ All rights reserved - Wikipedia ]
[17:02:37] <Pali> I really do not know... you would have to ask author
[17:03:11] <shlomif> Pali: i won't bother.
[17:05:24] <shlomif> plenty of more liberally-licensed docs online; https://www.youtube.com/watch?v=-qTIGg3I5y8
[17:05:24] <Paperbot> YouTube video linked by shlomif: Sesame Street: Share It Maybe - published by Sesame Street
[17:22:01] *** Joins: EvanCarroll (~ecarroll@88.246.75.12)
[17:24:51] <lopid> …#
[17:26:11] <shlomif> EvanCarroll: shavua tov
[17:26:33] <ehuelsmann[m]> shlomif: what's the relevance of Sesame street here?
[17:26:46] * ehuelsmann[m] would like to note it's not just mst who thinks the links need to be relevant
[17:27:09] <shlomif> ehuelsmann[m]: "share / open / free / remix / steal"
[17:27:42] <lopid> just an excuse to paste a link. we're lucky it wasn't to his own site
[17:27:43] <ehuelsmann[m]> a bit far fetched when the point is about DBI and you end up with Sesame Street and Carly Rae?
[17:28:08] <shlomif> ehuelsmann[m]: rather than being selfish
[17:29:02] <ehuelsmann[m]> ok. I don't mind links, as long as there is direct relevance to the topic at hand. Someone stealing Carly Rae and putting it into Cookiemonster's mouth doesn't qualify.
[17:30:36] <shlomif> lopid: ehuelsmann[m] : i feel like i'm the smartest person in this so called "real world". the devils must die
[17:32:35] <shlomif> ehuelsmann[m]: it is a parody, and good luck suing sesame street. (= share value insta-plummets)
[17:33:20] *** Joins: humky (~humky@user/humky)
[17:33:46] <ehuelsmann[m]> I still don't see the relevance to DBI and Perl. I'm not suing anybody. I'm asking you to stick a bit closer to the topic of the conversation -preferably- or the channel otherwise.
[17:35:22] <lopid> now expecting a link to some rando singing about their hurt feelings
[17:36:22] <shlomif> ehuelsmann[m]: the licence of that dbi tut was https://en.wikipedia.org/wiki/All_rights_reserved which is "use at your own risk, sucker! i ownz all your IP." [IANAL]
[17:36:23] <Paperbot> Link title(s): [ All rights reserved - Wikipedia ]
[17:37:15] *** Quits: Adura (~Adura@user/adura) (Ping timeout: 268 seconds)
[17:37:21] *** Joins: azed (~azed@102.108.9.164)
[17:38:50] <ehuelsmann[m]> shlomif: if you had wanted to stay close to the topic, a link to something more free would have been a perfectly fine reaction, if a link was unavoidable. However, I read books with proprietary copyrights all the time. That doesn't prevent me from using the knowledge I gain from those books.
[17:39:19] <lopid> so the fuck what? someone says they found a useful tutorial and you ask them about licenses and start pasting links to sesame street??
[17:39:40] <shlomif> bye losers
[17:39:44] *** Parts: shlomif (~shlomif@87.68.242.72.adsl.012.net.il) (Shlomi Fish ("Rindolf") has left the chatroom. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[17:41:10] <ehuelsmann[m]> wow. those are long toes!
[17:41:37] <ehuelsmann[m]> Pali: thanks for the link.
[17:42:36] *** Joins: Adura (~Adura@user/adura)
[17:43:50] <vague> There is a reason why I hide comments from shlomif
[17:44:46] <Pali> I think this tutorial is nice and may be useful for others... so shared it here
[17:45:39] <ehuelsmann[m]> Pali: I checked the page and it looks like a very thorough tutorial indeed. It's a very nice resource for those wanting to learn more about DBI.
[17:47:02] <ehuelsmann[m]> especially the section about (naming) conventions found in other DBI code.
[17:47:45] <El_Che> shlomif: no need to insult
[17:48:01] <El_Che> (oh, I see he's gone. I hide joins an parts)
[17:49:03] <ehuelsmann[m]> yea. he's gone. Hope he's cooling down somewhere. Maybe he'll be back later. A walk will do him good :-)
[17:50:23] <El_Che> pointing out a non-sequitur is an act of kindness
[17:50:41] <xenu> perlbot: dbi
[17:50:41] <perlbot> xenu: Perl DataBase Interface - http://search.mcpan.org/perldoc/DBI http://dbi.perl.org/ http://www.perl.com/lpt/a/2003/10/23/databases.html  http://www.perl.com/pub/a/1999/10/DBI.html
[17:51:01] <xenu> perlbot: dbi is Perl DataBase Interface - http://search.mcpan.org/perldoc/DBI http://dbi.perl.org/ | tutorial: https://zetcode.com/perl/dbi/
[17:51:01] <perlbot> xenu: Stored dbi is Perl DataBase Interface - http://search.mcpan.org/perldoc/DBI http://dbi.perl.org/ | tutorial: https://zetcode.com/perl/dbi/
[17:51:02] <Paperbot> Link title(s): [ DBI - Database independent interface for Perl - metacpan.org <https://metacpan.org/pod/DBI> ] [ Perl DBI - dbi.perl.org ] [ Perl DBI - database programming in Perl with DBI module ]
[17:51:15] *** Joins: nrl^ (~nrl@209.65.131.194)
[17:52:35] <xq> xenu: the tutorial does not 'use warnings' in code
[17:52:55] <xq> this is not acceptable in my opinion
[17:53:23] <LeoNerd> Just update all the examples to  use v5.36;  instead, then it won't need to  ;)
[17:53:30] <xenu> that's unfortunate but i don't think it's a big problem
[17:53:44] <xq> you are wrong
[17:53:45] <ehuelsmann[m]> xq: but other than that, of the two deleted links, one is a 404 and the other far less clear than this one.
[17:53:57] <xq> it is a very big problem
[17:54:02] <EvanCarroll> HALLOOOO
[17:54:07] <xenu> i mean, the point of that tutorial is to teach the library, not the langauge
[17:54:17] <xq> especially given the fact that this tutorial contains code like my $password = "s$cret";
[17:54:32] <xq> i.e. is totally fubar
[17:54:45] <xq> unless you have warnings
[17:54:57] <LeoNerd> I'm kinda with xq here... Sure the tutorial shouldn't *teach* the wider language, it doesn't have to explain what "use warnings" actually does. But its examples should still be sat in a wider context of good practice
[17:55:02] <xq> hallo EvanCarroll 
[17:55:14] <xenu> anyway, i guess you can report the issues to the author
[17:55:16] <xenu> it's a new tutorial
[17:55:20] <xenu> so it's likely he will respond
[17:55:23] <LeoNerd> Beginners are just going to copypaste everything they see, so the things they see should be "correct"
[17:55:29] <xq> this ^
[17:55:52] <xenu> also that's a strict violation, warnings are irrelevant :P
[17:56:15] <LeoNerd> strict should already be handled by a  use v5.12  or later though so that's fine
[17:56:31] <xenu> anyway, as i said, complaining here won't fix that tutorial
[17:56:47] <xenu> i don't think its author is here
[17:57:05] <LeoNerd> Ah, well there's the first mistake
[17:57:06] <xq> great, so the tutorial does not even compile
[17:58:43] <xenu> btw
[17:58:53] <xenu> in his other tutorials, he's using 'warnings' https://zetcode.com/perl/string/
[17:58:54] <Paperbot> Link title(s): [ Perl string - working with strings in Perl ]
[18:00:40] <Pali> xenu: I have already reported s$cret issue to page footer email address
[18:02:08] * GumbyPAN CPAN Upload: App-Netdisco-2.049000 by OLIVER https://metacpan.org/release/OLIVER/App-Netdisco-2.049000
[18:02:39] <xq> I remember that there was a long discussion (several even) about passing `AutoCommit => 0,` to the DBI connect method, and I think the consensus is that AutoCommit should be kept on, and if you want a transaction you start it yourself
[18:02:54] <xq> does anyone remember this?
[18:03:19] <Pali> I remember something similar... but I do not know result
[18:03:24] <xenu> i don't, but i agree that AutoCommit => 1 is a better default
[18:03:51] <Pali> anyway, the best is to put AutoCommit explicitly into connect method and you avoid these issues
[18:04:31] <Pali> so if you do not know / remember what is default, you could easily understand what is code doing
[18:04:45] *** Joins: _73 (~user@pool-96-252-123-136.bstnma.fios.verizon.net)
[18:05:58] <_73> how would you personally write an expression that is equivalent to?: `my $valid_foo = $foo =~ /^(f|foo|b|bar|baz)$/;`
[18:07:00] <Pali> same as you wrote
[18:07:16] *** Joins: anthk_ (~anthk_@92.176.105.30)
[18:08:04] <xq> also I am fairly sure that author at some point during writing that page got lost in DBI API
[18:08:10] <xenu> my $valid_foo = any { $_ eq $foo } qw/f foo b bar baz/; # is also an option, but imo it's uglier
[18:08:22] <_73> it is not actually important, but it doesnt `feel` right
[18:08:30] <xq> consider the section with heading "Perl DBI fetchall_hashref"
[18:08:33] <xenu> hopefully in the future it will be possible to do this: my $valid_foo = $foo any:eq qw/f foo b bar baz/;
[18:08:52] <xq> 1) the description is wrong: "The fetchall_hashref method fetches the next row as a reference to a hashtable." this is simply false
[18:08:57] <_73> ok `any` is what I wanted thanks
[18:09:02] <xenu> s/any:eq/in:eq/
[18:09:02] <xq> 2) the method in heading is not used in the example code
[18:10:06] <LeoNerd> in:eq would be nice. Actually I was considering taking another look at that today
[18:10:09] <LeoNerd> Thanks for reminding
[18:10:34] *** Quits: azed (~azed@102.108.9.164) (Quit: WeeChat 3.2)
[18:10:59] <Pali> xq: that looks like a copy/paste error, I guess s/fetchall_hashref/fetchrow_hashref/ could fix it... as author is describing fetching row by row
[18:12:07] <xq> _73: my $valid_foos = +{map {$_ => undef} qw[f foo b bar baz]}; if (exists $valid_foos->{$foo}){ ... }
[18:12:12] <xq> this is what I do
[18:12:39] <xq> the regex way may be better in some ways but I prefer this approach
[18:15:12] <xq> unfortunately neither way handles undef gracefully (I have been asking for =~ to be well defined (warning-less) for undef for a long time to no avail
[18:17:41] *** Joins: seekr (~seekr@130.44.163.10)
[18:18:17] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Ping timeout: 248 seconds)
[18:20:22] *** Martchus_ is now known as Martchus
[18:26:07] *** Joins: perlpyper (~eax@125.134.179.2)
[18:27:11] * GumbyPAN CPAN Upload: DB-Object-v0.9.15 by JDEGUEST https://metacpan.org/release/JDEGUEST/DB-Object-v0.9.15
[18:31:13] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[18:31:56] *** perlpyper is now known as help
[18:32:45] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[18:33:13] *** help is now known as pnutbtrwolf
[18:33:28] *** Parts: pnutbtrwolf (~eax@125.134.179.2) ()
[18:33:36] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[18:34:35] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Ping timeout: 268 seconds)
[18:35:20] <xq> I see more mistakes in the linked DBI tutorial but I don't think anyone cares so w/e
[18:35:27] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[18:40:16] *** Quits: jess (~jess@libera/staff/jess) (Quit: brb real quick)
[18:40:36] *** Joins: jess (~jess@libera/staff/jess)
[18:40:51] <LeoNerd> I think we care that the mistakes no longer exist, I just don't think anyone here is in a position to *do* anything about it. So you're better off sending those complaints to someone who can actually fix it
[18:45:43] *** Joins: azed (~azed@102.108.9.164)
[18:51:53] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[18:52:11] <ehuelsmann[m]> Pali would you mind forwarding the remarks from this channel to the author when (s)he reacts to your prior mail?
[19:13:54] *** Quits: jess (~jess@libera/staff/jess) ()
[19:14:14] *** Quits: azed (~azed@102.108.9.164) (Quit: WeeChat 3.2)
[19:21:17] * GumbyPAN CPAN Upload: Getopt-EX-Hashed-0.9915 by UTASHIRO https://metacpan.org/release/UTASHIRO/Getopt-EX-Hashed-0.9915
[19:21:29] *** Joins: thrig (~thrig@70.97.65.251)
[19:22:38] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Ping timeout: 250 seconds)
[19:31:18] * GumbyPAN CPAN Upload: PDL-NetCDF-4.22 by ETJ https://metacpan.org/release/ETJ/PDL-NetCDF-4.22
[19:32:08] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[19:35:10] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 240 seconds)
[19:39:32] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 250 seconds)
[19:49:55] *** Joins: pj (~pj@ghettoforge/pj)
[20:03:24] *** Quits: _73 (~user@pool-96-252-123-136.bstnma.fios.verizon.net) (Remote host closed the connection)
[20:03:39] *** Joins: _73 (~user@pool-96-252-123-136.bstnma.fios.verizon.net)
[20:03:52] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[20:11:59] *** Joins: khosruw (~khosruw@vps-6df5f188.vps.ovh.net)
[20:12:11] <djerius> Any Perl PEG modules (other than Pegex?).  I've used Pegex, but it has bugs that I've run into (which have been reported by others) and I can't figure out how to generate decent error messages without specifying the grammar twice.
[20:12:24] <khosruw> hey everybody, should i use promises when i wanna connect to a db?
[20:12:33] <LeoNerd> khosruw: ?
[20:12:46] <LeoNerd> djerius: If you're writing a parser, you might enjoy Parser::MGC
[20:12:52] <khosruw> LeoNerd i'm mean in mojolicious
[20:12:58] <khosruw> *i
[20:13:22] *** Quits: ugjka (~ugjka@ugjka.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[20:17:06] <djerius> LeoNerd: I'll take a look.  I originally went with Pegex because it hinted at a cross-language future, and I need something that I can use in C++ code, but that's not going to happen, I think.  Now I just want good error messages.
[20:18:00] *** Joins: ugjka (~ugjka@ugjka.net)
[20:25:04] *** Joins: averell (~averell@user/averell)
[20:30:40] *** Quits: _73 (~user@pool-96-252-123-136.bstnma.fios.verizon.net) (Ping timeout: 250 seconds)
[20:37:21] <Grinnz> khosruw: if you're writing nonblocking code, promises are usually an improvement over not using them - nothing to do with whether you're connecting to a db or something else
[20:37:55] <Grinnz> khosruw: if you're asking whether you should interact with a db blocking or nonblocking, depends on your larger program
[20:38:18] <Grinnz> in a mojo webapp, nonblocking queries with promises are pretty easy to integrate
[20:48:49] *** Quits: thrig (~thrig@70.97.65.251) (Remote host closed the connection)
[20:49:45] *** Joins: monkey_ (~user@190.104.116.134)
[21:01:16] *** Joins: zakame (~zakame@user/zakame)
[21:02:02] *** Quits: khosruw (~khosruw@vps-6df5f188.vps.ovh.net) (Quit: leaving)
[21:08:59] *** Joins: Pixi_ (~Pixi@user/pixi)
[21:12:16] *** Quits: Pixi (~Pixi@user/pixi) (Ping timeout: 250 seconds)
[21:18:51] *** Joins: Pixi__ (~Pixi@user/pixi)
[21:19:20] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[21:22:14] *** Quits: Pixi_ (~Pixi@user/pixi) (Ping timeout: 250 seconds)
[21:31:29] *** Joins: Guest18 (~Guest18@c-24-30-27-91.hsd1.ga.comcast.net)
[21:31:47] <Guest18> Has anyone had any success with getting thumbnail previews in perl gtk3?
[21:43:02] *** Quits: Guest18 (~Guest18@c-24-30-27-91.hsd1.ga.comcast.net) (Quit: Client closed)
[21:44:20] <Pali> ehuelsmann[m]: ok, just I need to wait for reply...
[22:05:28] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 252 seconds)
[22:07:22] *** Joins: khosruw (~khosruw@vps-6df5f188.vps.ovh.net)
[22:08:56] *** Quits: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Ping timeout: 258 seconds)
[22:09:27] <khosruw> hey everybody, I wanna store my input data via creating a new class, to get what i'm sayin' plz look at this: Class->new({ oh => 'shit' }) + Class-.
[22:09:36] <khosruw> whoops!
[22:10:02] <khosruw> ... Class->new({ another => 'ohshit' })
[22:10:27] <khosruw> then I wanna show all of them via calling something or creating a new class
[22:10:33] <khosruw> could you help me please?
[22:11:24] <Grinnz> that's a pretty vague question so far
[22:12:15] <khosruw> Grinnz, i wanna write something like Mojo's router. 
[22:12:20] *** Joins: YaoNai (~YaoNai@user/yaonai)
[22:12:53] <khosruw> e.g: $self->routes->post('/')->to('Foo#bar')
[22:13:26] <khosruw> but it's for a different usage, i just want store all of the routes' data
[22:15:16] <khosruw> example of result: 
[22:15:37] <khosruw> Your Routes: /index /posts ...
[22:16:40] <khosruw> i'm hardly trying to describe what i want to do
[22:17:41] *** Quits: nrl^ (~nrl@209.65.131.194) (Remote host closed the connection)
[22:20:40] <khosruw> well, got it. i had to store my inputs to a global variable
[22:21:03] *** Joins: G_Sabino1ullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[22:21:04] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[22:21:19] <Grinnz> just have the methods store the info into the object and return $self
[22:22:08] <khosruw> Grinnz yep, exactly!
[22:22:50] <khosruw> everytime i call the object, i should push new data to the older one
[22:23:05] <khosruw> then i can return all of the data has been stored 
[22:27:10] *** Joins: Smedles (~quassel@61-245-148-167.3df594.adl.nbn.aussiebb.net)
[22:30:12] *** Quits: monkey_ (~user@190.104.116.134) (Remote host closed the connection)
[22:31:37] * GumbyPAN CPAN Upload: POE-Component-Curl-Multi-0.20 by BINGOS https://metacpan.org/release/BINGOS/POE-Component-Curl-Multi-0.20
[22:42:29] *** Quits: drbean (drbean@thinks.life.is-a.beauty) (Remote host closed the connection)
[22:47:35] *** Joins: drbean (drbean@thinks.life.is-a.beauty)
[22:48:15] *** Quits: khosruw (~khosruw@vps-6df5f188.vps.ovh.net) (Quit: leaving)
[22:49:42] *** Joins: slopey (~slopey@user/slopey)
[22:51:39] * GumbyPAN CPAN Upload: POE-Component-Curl-Multi-0.22 by BINGOS https://metacpan.org/release/BINGOS/POE-Component-Curl-Multi-0.22
[22:53:17] *** Joins: _73 (~user@pool-96-252-123-136.bstnma.fios.verizon.net)
[22:57:50] *** Quits: slopey (~slopey@user/slopey) (Remote host closed the connection)
[22:59:50] *** Quits: YaoNai (~YaoNai@user/yaonai) (Quit: leaving)
[23:15:00] *** Joins: xenial-user10 (~androirc@20014C4C17E1D2003559B896E18EB080.catv.pool.telekom.hu)
[23:17:14] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[23:19:51] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[23:21:22] *** Quits: apathor (~mike@c-73-119-36-70.hsd1.ma.comcast.net) (Ping timeout: 252 seconds)
[23:37:57] *** Joins: xenial-user5 (~androirc@3ec97c6f.catv.pool.telekom.hu)
[23:38:19] *** Quits: xenial-user10 (~androirc@20014C4C17E1D2003559B896E18EB080.catv.pool.telekom.hu) (Read error: Connection reset by peer)
[23:38:43] *** Quits: mattil (~mattil@87-92-132-211.rev.dnainternet.fi) (Quit: Leaving)
[23:53:05] *** Joins: jlenz__ (~jlenz@c-73-204-107-230.hsd1.fl.comcast.net)
[23:56:34] *** Quits: jlenz_ (~jlenz@c-73-204-107-230.hsd1.fl.comcast.net) (Ping timeout: 252 seconds)
