[00:00:30] <[itchyjunk]> turns out what I was saying was very much related to curry haword correspondence which someone else here explained right after the discussion
[00:00:37] <[itchyjunk]> too many biases
[00:00:44] <[itchyjunk]> and a java exam next week
[00:00:52] <[itchyjunk]> man I really hope I can fix my eclipse 
[00:02:07] <wedr> Reinstall Eclipse. Always fixes it
[00:02:08] *** Quits: bitmega (~bitmega@user/bitmega) (Quit: WeeChat 3.2.1)
[00:02:48] <[itchyjunk]> without losing my files and such?
[00:02:58] <[itchyjunk]> is it trivial to do? ubuntu 18.04
[00:03:02] <[itchyjunk]> it was installed via snap
[00:03:11] *** Joins: bitmega (~bitmega@user/bitmega)
[00:03:11] <[itchyjunk]> I've had issues reinstalling stuff with snap before
[00:04:18] <pyzozord> your project files? they should be separate from eclipse
[00:05:45] <pulse> lol eclipse
[00:05:56] <pulse> i'd rather chisel code into stone
[00:06:21] <pulse> no offense to eclipse users, but that IDE is hell
[00:06:56] <vdamewood> Eclipse isn't I. It's D(isintegrated)
[00:07:03] <vdamewood> Eclipse is a DDE.
[00:07:38] <pyzozord> I kind of liked eclipses ui
[00:07:52] *** Quits: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca) (Remote host closed the connection)
[00:08:05] <pyzozord> for completly free and opensource it's ok?
[00:08:17] <pyzozord> IDEs are the bad idea here :P
[00:08:47] *** Quits: humanface (~humanface@20014C4E1C505700C81FBCF815197CD0.dsl.pool.telekom.hu) (Quit: Client closed)
[00:08:47] <vdamewood> For completely cost-less Visual Studio is awesome.
[00:09:02] <pulse> VS is peak IDE yes
[00:09:05] <pulse> there's nothing better out there
[00:09:18] <pyzozord> never used it :(
[00:09:22] <pulse> it's fantastic
[00:09:31] <oldlaptop> and also horrifying
[00:09:34] <pyzozord> do they have linux version?
[00:09:45] <vdamewood> And seriously, if you don't qualify for VS Community licensing, you can afford 500 USD for Professional.
[00:09:46] <[itchyjunk]> ah then I will just reinstall
[00:09:54] <[itchyjunk]> then try to reinstall FX
[00:09:56] <vdamewood> pyzozord: VS? Yes.
[00:10:00] <pulse> pyzozord, no
[00:10:05] <[itchyjunk]> maybe even ask #java for help and hope not to get banned
[00:10:07] <pulse> you have VSCode for linux
[00:10:09] <pyzozord> you guys are sending mixed signals
[00:10:11] <pulse> no VS
[00:10:14] <jinsun> pyzozord: not of fat VS, VSCode yes
[00:10:20] <pulse> VSCode != VS
[00:10:22] <pulse> not by a long shot
[00:10:26] <pyzozord> vscode is something different
[00:10:26] <pulse> it's still very good though
[00:10:28] *** Joins: jokoon (~eio@2a01:e0a:542:e160:6140:7cd3:2d72:c0aa)
[00:10:59] <pyzozord> not sure if this modern editors like vscode and atom can be called ids or what are those things
[00:11:01] <vdamewood> Hmm... oops. I just checked. VS is Windows and Mac only.
[00:11:11] <pyzozord> "beefed up electron based editor with many many plugins" :P
[00:11:22] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Quit: Leaving.)
[00:11:30] <pulse> pyzozord, they're highly extensible editors
[00:11:34] <pulse> which means you can turn them into an IDE
[00:11:38] <pulse> VS is already an IDE from the get-go
[00:11:43] <oldlaptop> pyzozord: They're basically all of chrome with an editor loosely tacked on top - I would call that a half-baked OS
[00:11:52] <pulse> VSCode is an editor that you extend to make an IDE
[00:12:01] <pyzozord> oldlaptop: so a bit like emacs? ;)
[00:12:04] <pulse> VSCode is still my preferred C++ editor on Linux
[00:12:09] <pulse> mostly because it has Intellisense
[00:12:15] <pulse> which beats every single other option on Linux
[00:12:15] *** Quits: soapsudsxx (~soapsudsx@209.221.40.154) (Remote host closed the connection)
[00:12:18] <pulse> as far as i found anyway
[00:12:22] <vdamewood> I prefer VSCode on all platforms.
[00:12:34] <vdamewood> And for all languages.
[00:12:36] <oldlaptop> those people joking about how big emacs was thirty years ago couldn't possibly have imagined the horrors we'd come up with
[00:12:37] <pulse> i enjoy VS on windows because it's bloody fantastic
[00:12:39] *** Joins: dunkeln (~dunkeln@94.128.205.199)
[00:12:39] *** Quits: dunkeln (~dunkeln@94.128.205.199) (Changing host)
[00:12:39] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[00:12:47] <pyzozord> I'm not a fan of electron based editors I find them slow. But vscode works well most of the time
[00:12:59] *** Quits: jokoon (~eio@2a01:e0a:542:e160:6140:7cd3:2d72:c0aa) (Client Quit)
[00:12:59] *** Quits: bitmega (~bitmega@user/bitmega) (Quit: WeeChat 3.2.1)
[00:13:02] *** Quits: numsima (~numsima@101.175.64.73) (Quit: Client closed)
[00:13:08] <vdamewood> I wish VS code were written in something else.
[00:13:09] <[itchyjunk]> I'm not a fan, i'am an AC
[00:13:16] <oldlaptop> pulse: code completion drives me utterly, completely mad.
[00:13:20] <pyzozord> but I'd be interested to try out the real vs
[00:13:27] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:f1cc:d5ea:e86d:e5c1) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:13:29] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:13:39] *** Joins: bitmega (~bitmega@user/bitmega)
[00:13:58] <[itchyjunk]> in java, if you have import java.io.File; and a File file = new file("/your/file.txt"); we agree this doesn't open the file right?
[00:14:07] <oldlaptop> I can understand its utility when you have a standard class library so outragously big that nobody can possibly remember how to use it (as you normally do for the things VS gets used for), but if you do know what you're doing it's infuriating
[00:14:21] <[itchyjunk]> and something like Scanner openfile = Scanner(file); is what does the opening?
[00:14:21] *** Quits: bitmega (~bitmega@user/bitmega) (Client Quit)
[00:14:27] <pulse> oldlaptop, i've met your species before, and i don't understand
[00:14:45] <pulse> working on big C++ projects without autocomplete would drive me bonkers
[00:15:06] <pulse> you really want me to switch to another file every time i want to list some class's members?
[00:15:08] <pulse> i mean geez
[00:15:09] <pyzozord> I don't really like it when developers start designing code with assumption that code complition is always available
[00:15:15] <pulse> but hey to each their own
[00:15:19] <pyzozord> that's essentially what happend with java
[00:15:54] *** Joins: humanface (~humanface@20014C4E1C505700C81FBCF815197CD0.unconfigured.pool.telekom.hu)
[00:16:10] <pulse> my old boss even had this m_ prefix that he forced on us
[00:16:25] * pulse makes a disgusted face
[00:17:11] <vdamewood> pulse: was that for member values, or in general?
[00:17:13] <oldlaptop> pulse: again, I can understand the utility if you have so much crap that there's no way you can possibly remember what it all is and does
[00:17:36] <oldlaptop> but I think that should be avoided where possible - i.e. in your *own* code at least
[00:17:39] <pulse> vdamewood, for all members of class
[00:17:48] <oldlaptop> the java or .net class libraries are what they are, though
[00:17:48] <pulse> oldlaptop, even your own code grows
[00:17:50] <vdamewood> I personally use the prefix my
[00:17:50] <pulse> and grows, and grows
[00:17:55] <pulse> at some point you have 100s of classes
[00:17:58] <pulse> can you really remember all of that
[00:18:01] <oldlaptop> Yes. That should be fought, resisted.
[00:18:25] <pulse> idk, i like the fact that in VS you press ctrl+space and you instantly see all members in a handy dropdown
[00:18:29] <vdamewood> myX, myY, myPosition, mySharona
[00:18:32] <pulse> it's such a nice workflow
[00:18:40] <pyzozord> that's like nerve system it's supposed to hurt so you don't do it
[00:19:03] <pulse> not to mention you can do the same with the STL
[00:19:06] <pulse> and, get this
[00:19:07] <oldlaptop> (If these autocomplete things only popped up when specifically invoked, I would loathe them a lot less.)
[00:19:09] <pulse> ___ANY___ library you use
[00:19:14] <pulse> that's the power of intellisense
[00:19:17] *** Joins: jokoon (~eio@2a01:e0a:542:e160:6140:7cd3:2d72:c0aa)
[00:19:23] <pulse> you add a library, you instantly have autocomplete for it
[00:19:35] <pulse> it's hard to emphasize how useful that is
[00:19:40] <pyzozord> and autocomplete is like anesthesis you forget you have and you eventually start burning your hand
[00:19:47] <pulse> oldlaptop, you can configure autocomplete
[00:19:57] <pulse> at least in VS there's a million settings for it
[00:20:43] <pulse> what i hate is broken autocomplete
[00:20:53] <pulse> in other words autocomplete offered in most other IDEs that aren't VS, lol
[00:20:56] <pulse> literally. infuriating
[00:21:05] <pulse> Qt's one kinda works i guess
[00:21:17] <pulse> CLion supposedly works too, but it costs money
[00:21:26] <oldlaptop> Yes, after fighting through that to get it to stop barging in whenever it thinks it knows better than I do what I'm writing, the problem is reduced to pyzozord's anaesthetic theory.
[00:21:31] <pulse> most other IDEs are a combination of not working, sometimes working, and broken
[00:21:43] <pulse> hmm
[00:21:50] <[itchyjunk]> isn't emacs an ice?
[00:21:53] <[itchyjunk]> ide
[00:21:57] <pulse> no
[00:21:59] <pulse> i mean
[00:22:01] <[itchyjunk]> stupid client keeps autocorrecting me
[00:22:10] <pulse> emacs is like a 3D baseball card
[00:22:13] <[itchyjunk]> see! emacs is an ide!
[00:22:18] <pulse> look at it from one angle it's an editor
[00:22:20] <pulse> from another it's an IDE
[00:22:23] <pulse> from another it's a DOOM container
[00:22:44] <[itchyjunk]> I want to know wtf a monad is. reading wikipedia isn't helping me :(
[00:22:46] *** Joins: bitmega (~bitmega@user/bitmega)
[00:22:56] <pulse> oh, a monad
[00:23:00] <dunkeln> why did emacs get shadowed by the other IDEs popularity?
[00:23:01] <oldlaptop> If shitty code hurts, that is (in one sense) a good thing. Of course there are situations where for one reason or another it must be dealt with.
[00:23:09] <pulse> a monad is just a monoid in the category of endofunctors, what's the problem?
[00:23:20] *** Quits: bitmega (~bitmega@user/bitmega) (Quit: WeeChat 3.2.1)
[00:23:34] <dunkeln> is emacs heavy?
[00:23:39] <[itchyjunk]> I don't understand what that means
[00:23:40] <pyzozord> Of course people who know what they are doing can really benefit from anesthetic.
[00:23:40] <oldlaptop> dunkeln: not anymore it's not
[00:23:42] <[itchyjunk]> end whatever
[00:23:44] <[itchyjunk]> With a monad, a programmer can turn a complicated sequence of functions into a succinct pipeline that abstracts away auxiliary data management, control flow, or side-effects.
[00:23:45] <pyzozord> I wager most people don't though.
[00:23:51] <[itchyjunk]> that's what wiki says
[00:24:15] <pulse> plot twist: the inventor of monad doesn't know what a monad is
[00:24:17] <oldlaptop> emacs was heavy before people started building editors by duct taping a little bit of js and css to Chrome
[00:24:28] *** Quits: nvmd (~nvmd@user/nvmd) (Ping timeout: 265 seconds)
[00:24:31] <dunkeln> oldlaptop: must just be folks around me i guess
[00:24:34] <[itchyjunk]> ill ask the Haskell folks about it later
[00:24:39] <[itchyjunk]> I bet they understand it
[00:25:14] <pyzozord> is so strange for me to see someone asking big questions about monads but having doubts about null and how objects behave in java
[00:25:25] <pyzozord> i'm really not used to the academical bottom-up kind of learning
[00:25:38] *** Joins: webNET4 (~0x100@32.211.211.39)
[00:25:44] <oldlaptop> pyzozord: Arguably the functional theory is *easier*.
[00:25:54] <pyzozord> it's all backwards in my difficulty score
[00:26:14] <jinsun> [itchyjunk]: computerphile has a video about it (although I already forgot what he talked in that) https://www.youtube.com/watch?v=t1e8gqXLbsU
[00:26:15] <bayaz> Title: What is a Monad? - Computerphile 
[00:26:43] <vdamewood> A monad is someone who wanders the desert, hiding side effects.
[00:27:04] <pyzozord> that's nomad
[00:27:05] <pyzozord> :D
[00:27:22] <vdamewood> pyzozord: Whooosh
[00:27:35] <pulse> i think a monad is just a kind of a prototype for a function
[00:27:39] <pulse> but FP people like to obscure meanings
[00:27:45] *** Joins: bitmega (~bitmega@user/bitmega)
[00:27:45] <pyzozord> oh no did something just flew over my head?
[00:27:48] * pyzozord looks up
[00:28:10] <pulse> if it's a green dragon, tell it to come back
[00:28:36] <dunkeln> this is hilarious....in both links look out for whether lisp is a high-level language: https://en.wikipedia.org/wiki/Lisp_(programming_language) and Is lisp a high level language? - https://www.mvorganizing.org/is-lisp-a-high-level-language/
[00:28:36] <bayaz> Title: Lisp (programming language) - Wikipedia 
[00:28:37] <bayaz> Title: Is lisp a high level language? – Mvorganizing.org 
[00:29:18] <vdamewood> pyzozord: s/flew/fly/
[00:29:39] <pulse> are you sure it's not flew
[00:29:43] <pyzozord> yes sorry, the did "operator" is greedy and takes all the time for itself
[00:29:43] * pulse strokes imaginary beard
[00:29:49] <vdamewood> pulse: Yes.
[00:29:53] <pulse> i flew on my dragon
[00:29:58] <pulse> my dragon flew away
[00:30:00] <jacks2> pulse, prototype for a function sounds about as useful of a monad description as 'monads are like burritos" :)
[00:30:06] <pulse> jacks2, :D
[00:30:07] <vdamewood> pulse: I did fly on my dragon. Did I fly on my dragon?
[00:30:14] <pulse> vdamewood, you flew on your dragon
[00:30:20] *** Joins: farmstatejake1 (~farmstate@user/farmstatejake)
[00:30:23] <vdamewood> I did fly on my dragon. Yes.
[00:30:37] <pulse> your dragon flied nicely, but it flew yesterday
[00:30:37] <wedr> Whose dragon is it?
[00:30:46] * pulse 's head spins
[00:30:49] <pyzozord> ok too much dragon now
[00:30:55] <pyzozord> that's weird
[00:30:57] <[itchyjunk]> vdamewood hiding side effect elludes to that Just Maybe thingy?
[00:31:03] <[itchyjunk]> I've seen it appear in places
[00:31:15] <vdamewood> [itchyjunk]: It was just a stupid joke.
[00:31:17] <[itchyjunk]> something is Just int or Maybe int
[00:31:21] <[itchyjunk]> lol
[00:31:31] <[itchyjunk]> I'll watch that computerphile vid tomorrow I guess
[00:31:42] *** Quits: tomgus1 (~tomgus1@90.208.15.36) (Read error: Connection reset by peer)
[00:31:45] <pyzozord> [itchyjunk]: it was more general, functional programming people don't like side effects
[00:31:51] *** Quits: Deknos (~someone@user/menace) (Read error: Connection reset by peer)
[00:31:57] <pyzozord> that's implied in the name
[00:32:01] *** Joins: tomgus1 (~tomgus1@90.208.15.36)
[00:32:04] <vdamewood> I met a monad once, and he said I was just his type.
[00:32:06] <[itchyjunk]> what is side effects?
[00:32:16] <[itchyjunk]> lol
[00:32:28] <[itchyjunk]> monad jokes, maybe funny
[00:32:29] <vdamewood> [itchyjunk]: Any effect that changes the state of a program such that calling it again may result in different behavior.
[00:32:30] <pyzozord> are you serious or trolling? :P
[00:32:51] <pyzozord> who learns about monads and type theory before learning what a side effect is
[00:32:57] <[itchyjunk]> hmmm
[00:32:58] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (Ping timeout: 252 seconds)
[00:33:03] <[itchyjunk]> I'm not learning in any order
[00:33:19] <[itchyjunk]> vdamewood that reminds me of another question I had
[00:33:34] <vdamewood> [itchyjunk]: It doesn't remind me of your question.
[00:33:34] <pyzozord> and how could you arguye with InPhase with such confidence the othre day
[00:33:38] <[itchyjunk]> so we were introduced to java debugger in eclipse. you can go forward in it but not backward
[00:34:01] <[itchyjunk]> pyzozord because curry Howard correspondence says what it says
[00:34:09] <[itchyjunk]> authority has very little to do with it
[00:34:22] <webNET4> llvm the magic dragon https://upload.wikimedia.org/wikipedia/commons/5/57/LLVM_New_Logo.png  lived in illinoise  (hmm i remember this logo being less-cartoony did it change this year?
[00:34:23] <bayaz> Type: image/png Size: 261.0 kB 
[00:34:55] <pyzozord> [itchyjunk]: yeah but it's like you don't even know what you don't know
[00:35:01] <[itchyjunk]> vdamewood the debugger is "going forward" in the programs state right?
[00:35:05] <pyzozord> and arguing with someone with vas experience and stuff
[00:35:14] <pyzozord> I don't understand the zoomers
[00:35:15] <[itchyjunk]> pyzozord the premise of type theory seems quite straight forward
[00:35:20] *** Quits: bitmega (~bitmega@user/bitmega) (Quit: WeeChat 3.2.1)
[00:35:27] <[itchyjunk]> it's not like I was arguing some theorem that doesn't exist exists
[00:35:37] *** Joins: bitmega (~bitmega@user/bitmega)
[00:35:37] <pyzozord> [itchyjunk]: no offence, I'm quite jelous of you runderstanding of type theory
[00:35:43] <[itchyjunk]> it takes about equivalence of mathematical proof and a computer program
[00:35:49] <pyzozord> *understanding
[00:36:03] <[itchyjunk]> pyzozord there is a lot of spoon feeding going on. I understand very little
[00:36:18] * vdamewood hands [itchyjunk] a fork.
[00:36:18] <[itchyjunk]> the coq channel turns out to be full of people with PhD in computer programming and math and shit
[00:36:28] <[itchyjunk]> vdamewood it's all soup
[00:36:34] <webNET4> lol what did you expect
[00:36:36] * vdamewood hands [itchyjunk] a knife, too.
[00:36:42] <pyzozord> :D
[00:36:53] <[itchyjunk]> I thought functional programmers didn't like side effects
[00:36:57] <vdamewood> I just learned that my client can tab complete on the first actual letter in a nick.
[00:37:06] <pulse> they like effective sides
[00:37:07] <[itchyjunk]> isn't giving me a fork and a knife to eat soup somehow .. erroneous?
[00:37:19] <vdamewood> [itchyjunk]:Use your imagination.
[00:37:20] <[itchyjunk]> "I" tab works?
[00:37:26] <vdamewood> [itchyjunk] Yep.
[00:37:30] <pulse> you know you can just drink soup out of a cup right
[00:37:32] <[itchyjunk]> vdamewood can't use imagination, compile time error
[00:37:34] <pulse> <- massive iq
[00:37:47] * vdamewood licks his soup.
[00:37:48] *** Quits: bitmega (~bitmega@user/bitmega) (Client Quit)
[00:37:54] <[itchyjunk]> anyways
[00:38:04] <[itchyjunk]> so the debugger is going forward in this state right?
[00:38:08] <[itchyjunk]> one step at a time
[00:38:16] <[itchyjunk]> and you can't reverse the state?
[00:38:27] <[itchyjunk]> or what is happening that you can't go backward ?
[00:38:45] <vdamewood> The state doesn't have a 'forward' or a 'backwards'. It just is.
[00:38:55] <vdamewood> At each step you can change the state.
[00:39:08] <[itchyjunk]> so we can revert a state change?
[00:39:12] <mrig> https://www.britannica.com/topic/monad
[00:39:13] <bayaz> Title: Monad | philosophy 
[00:39:17] <vdamewood> If you keep a log of it.
[00:39:20] <pyzozord> it was weird about dragons because I am watching this very moment video explaining dragons in d&d :P
[00:39:21] <[itchyjunk]> A -> B where A,B states, can I B->A 
[00:39:22] <[itchyjunk]> oh
[00:39:27] <pyzozord> and why they collect gold and stuff
[00:39:32] <mrig> cool subject when you treat it globally.
[00:39:33] <[itchyjunk]> so in theory, the debugger could go backward?
[00:39:35] <vdamewood> pyzozord: Smaug is why.
[00:39:56] <vdamewood> [itchyjunk]: If It kept track of state at each step, yes.
[00:40:13] <[itchyjunk]> ah so its more of this debugger thing rather than a global thing
[00:40:19] <jeaye> [itchyjunk]: Some debuggers already support reverse debugging.
[00:40:21] <pyzozord> vdamewood: that's so... real world. I don't accept it.
[00:40:23] <webNET4> i get the gold part, but why is it always gold coins. don't they get bored and melth them down with their flaming breath ?
[00:40:27] <[itchyjunk]> when I asked my ta he said "yeah debuggers can't go backward"
[00:40:34] <[itchyjunk]> so I thought he meant all debuggers
[00:40:38] <vdamewood> pyzozord: I've done extensive research.
[00:40:47] <jacks2> so just to be prefectly clear, there isn't a more concise way of writing this in js? (x,y)=>x+y
[00:40:50] *** Joins: numsima (~numsima@101.175.64.73)
[00:41:15] <vdamewood> pyzozord: I even own copies of the core rule books of almost edition of D&D. I'm missing a few of the later Basic D&D versions, though.
[00:41:43] *** Quits: snake (~snake@user/snake) (Quit: Leaving)
[00:41:54] *** Joins: zaher (~zaher@37.48.191.105)
[00:42:01] <[itchyjunk]> jeaye I see
[00:42:09] <pyzozord> vdamewood: oh wow, I have never owned a physical copy of any of the books. I am thinking about buying some. Also first edition too? That's impressive
[00:42:14] <[itchyjunk]> I wonder if it's somehow not as helpful to go backward than forward
[00:42:20] <[itchyjunk]> that's why the feature isn't universal
[00:42:26] <jeaye> It's harder to implement.
[00:42:32] <[itchyjunk]> ahhh
[00:42:39] <vdamewood> pyzozord: You know that 'First Edition' was the second version, right?
[00:42:46] <jeaye> Much easier for FP, since we're not changing state everywhere.
[00:42:54] <[itchyjunk]> :O
[00:42:56] <pyzozord> jacks2: no there is not any more concise way tahn (x,y)=>x+y there might be other tricks that don't use functions at all or something
[00:43:17] <pyzozord> vdamewood: yes I doo :) The three booklets of the od&d
[00:43:30] <jacks2> pyzozord. oh! what tricks are those?
[00:43:32] <[itchyjunk]> time to go learn GUI in java, be back later!
[00:43:37] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Client closed)
[00:43:50] <vdamewood> pyzozord: I have a complete set of OD&D. The three boolets, the box they came in, the reference booklet, and all the supplements.
[00:44:06] <pyzozord> jacks2: no idea, I was just saying that this is the simplest way to make a function. I was implying that maybe there is a way to avoid writing functions all together
[00:44:35] <pyzozord> vdamewood: wow, isn't OD&D in mint condition a valuable collectors item nowadays?
[00:44:46] <vdamewood> pyzozord: I have a complete set of First Edition hard covers, and three boxed sets. (Forgotten Realms, Kara-Tur, and World of Greyhawk.)
[00:45:06] *** Quits: Haxxa (~Haxxa@122.199.45.213) (Quit: Haxxa flies away.)
[00:45:18] <vdamewood> pyzozord: In mint condition, yes. But I collect to play and read, not to invest, so mine weren't mint even when I got them.
[00:45:39] <vdamewood> Though, I could probably get $200 for my OD&D boxed set.
[00:45:55] <pyzozord> Anyway that's not the important part
[00:47:03] <vdamewood> No, the important part is that they are all in my library.
[00:47:41] <pyzozord> Yes.
[00:48:02] *** Joins: Haxxa (~Haxxa@122.199.45.213)
[00:49:13] *** Quits: numsima (~numsima@101.175.64.73) (Quit: Client closed)
[00:50:01] *** Quits: inky_ (~inky@178.78.157.68) (Ping timeout: 252 seconds)
[00:50:17] *** Joins: numsima (~numsima@101.175.64.73)
[00:50:21] *** Joins: Crescendo (~Crescendo@user/crescendo)
[00:50:34] *** Quits: gitgooood (~gitgood@host-78-145-137-41.as13285.net) (Ping timeout: 265 seconds)
[00:51:22] *** Joins: inky_ (~inky@46.36.119.19)
[00:52:39] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Remote host closed the connection)
[00:53:03] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[00:53:04] <mrig> why do none mention procedures anymore?
[00:53:23] *** Joins: zaher_ (~zaher@37.48.146.239)
[00:54:53] *** Quits: humanface (~humanface@20014C4E1C505700C81FBCF815197CD0.unconfigured.pool.telekom.hu) (Quit: Client closed)
[00:54:55] <mrig> or subroutines.
[00:55:07] *** Joins: humanface (~humanface@20014C4E1C505700C81FBCF815197CD0.unconfigured.pool.telekom.hu)
[00:55:15] <pyzozord> I hear subroutines sometimes. Procedures less often though
[00:55:29] *** Quits: zaher (~zaher@37.48.191.105) (Ping timeout: 252 seconds)
[00:55:59] *** Joins: gitgooood (~gitgood@host-78-145-137-41.as13285.net)
[00:56:00] <webNET4> 	procedures, aka "totallly not functions"
[00:57:01] <mrig> the distinction of procedures not returning anything seems pretty logical.
[00:57:03] <webNET4> it only matters if your language enforces no side effects on functions
[00:57:10] *** Quits: xff0x (~xff0x@2001:1a81:527e:a000:2ce2:bb46:8710:1c2a) (Ping timeout: 252 seconds)
[00:57:30] <webNET4> they can return data in ada
[00:57:51] <mrig> I was thinking that it is a pretty useful guideline to apply when writing C.
[00:57:53] *** Joins: xff0x (~xff0x@port-92-195-70-241.dynamic.as20676.net)
[00:58:05] <mrig> for managing state.
[00:58:05] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[00:58:25] *** Joins: Crescendo (~Crescendo@user/crescendo)
[00:58:26] *** Joins: anton (anton@tloks.com)
[00:58:43] <mrig> runtime state, not setp
[00:58:49] <mrig> setup state.
[00:58:56] <webNET4> through "in out" keywords on parameter
[00:59:01] <pyzozord> yeah some kind of clear indication that function is pure or not would be indeed nice
[00:59:09] *** Joins: Auron (~Auron956@user/auron)
[00:59:17] <mrig> for prickly c particularly.
[00:59:25] <pyzozord> like 'pure void myfunc(int myvar)'
[00:59:55] <mrig> but there is a big difference between setup and runtime code though.
[01:00:26] <mrig> how can you setup anything without altering state?
[01:01:04] <pyzozord> immutable data, must construct a new changed version each time
[01:01:57] <mrig> Not when setting up though.
[01:02:13] <jacks2> what do you mean by "setting up"?
[01:02:38] <mrig> well making your objects, linking them together as required.
[01:02:53] <jacks2> I'm not sure why you think mutation is needed for that
[01:03:19] <mrig> so that the user might be able to alter the setup with flags, would be one example.
[01:03:35] <jacks2> command line flags?
[01:03:38] <jacks2> still not needed
[01:03:50] <jacks2> parse command line arguments, create create data
[01:04:18] <mrig> but this is constructing objects for manipulating data with.
[01:04:19] <pyzozord> you can pretend world has no side effect for a long time, but at some point you can't. Haskellers or other people can say more about that
[01:04:26] <mrig> the program.
[01:04:58] *** Joins: inky (~inky_@46.36.119.19)
[01:05:12] <mrig> this is constructing abstract data types.
[01:05:42] <pyzozord> like linked list. Yeah I don't know how that works either
[01:05:50] <mrig> sure it is easier if your language does it under the hood, but it is still happening.
[01:06:01] <jacks2> you can construct fairly complex data types without mutation, fairly efficiently too. for example a binary tree
[01:06:04] <pyzozord> oh wait, pure != immutable
[01:06:08] <mrig> but that makes it pretty obfuscated too.
[01:06:17] <mrig> for those who like to learn by hacking.
[01:06:20] <pyzozord> those are two different concepts largely unrelated
[01:06:37] <mrig> jacks2: a binary tree is pretty simple though.
[01:06:49] *** Quits: user51 (~user51@176.228.90.248) (Remote host closed the connection)
[01:07:19] <mrig> pure means that the state change has no effect anywhere else, so far as I am aware.
[01:07:37] <mrig> useless for building abstract data types of your own devising.
[01:07:40] <jacks2> mrig, well what else do you need to parse command line flags and construct Options record/struct? that is easily written as a pure function, that takes a list of strings, and returns Option data
[01:08:47] <pyzozord> mrig: i think there is no unless. Pure is an absolute. If some function is pure, it does not mutate any state it only returns a new value
[01:09:41] <pyzozord> mrig: but you can still have myobj = new Myobj(); myobj.myfield = pureFunction(); Function called was pure but object was mutated
[01:10:09] <pyzozord> mrig: all that can happen in anothre function that returns myobj, and that function will be pure too because it didn't change anything outside of itself
[01:11:01] <jacks2> indeed. but even for that you don't need mutation. you can just create new object, that shares all other fields with original object (say, default options struct)
[01:11:34] <pyzozord> yeah but I think mrig brought up specific example of ADT and that makes me think of for example linked lists
[01:11:39] <mrig> so that nothing is inferred from the context of the code, such as the existence of some locally scoped state.
[01:12:11] <mrig> but that scope can add to readability and clarity of the code.
[01:12:18] <mrig> by giving context.
[01:12:19] <pyzozord> mrig: yes, pure means no side effects, which means no state change outside of this functions local scope
[01:12:43] <mrig> yes sounds pretty restrictive, expensively.
[01:12:49] <pyzozord> yes
[01:13:02] <mrig> expressively too.
[01:13:03] <pyzozord> that's one of the big things with oop vs fp I think
[01:13:05] <jacks2> it may not be. if this is enforced at compile time, compiler can do all sorts of optimizations
[01:13:19] <mrig> oh I dislike black boxes
[01:13:29] <pyzozord> yes functional people go long ways to hide or mitigate these issues
[01:14:00] <mrig> think that the future will be about getting closet to the compiler and the reality of the hardware, rather than moving away from it.
[01:14:22] <pyzozord> yeah I think so too
[01:14:33] *** Joins: nvmd (~nvmd@user/nvmd)
[01:14:37] <pyzozord> and if not, understanding what you are running is always a good practice
[01:14:39] <mrig> math is pretty flawed, godel showed us this, why would applying its rigidity to programming help?
[01:14:42] <jacks2> mrig, I very doubt that. software is getting more and more complex
[01:14:45] <jacks2> +much
[01:14:51] <jacks2> hardware is cheap, programmer's time isn't
[01:15:00] <mrig> jacks2: but Moors law is over.
[01:15:23] <mrig> Or is that Moores ?
[01:15:45] <pyzozord> mrig: I think the argument on the other side is that not all math is flawed, certain very specific of math is flawed, rest is perfectly sound and can be still relied on
[01:15:56] <webNET4> the next step is 3d transistors instead of 2d
[01:16:28] <pyzozord> webNET4: 3d is problematic because of heat
[01:16:32] <mrig> pyzozord: so long as you define your axioms at the outset, and remember that they are there.
[01:16:33] <JanC> transistors are always 3D  :)
[01:16:33] <jacks2> mrig, instead of doubling CPU speed, now we are doubling cores. and it is pretty obvious what programming paradigm plays the best with multithreaded programming
[01:16:54] <mrig> jacks2: yes, concurrent programming.
[01:16:56] <webNET4> 2d has heat problems too
[01:16:59] <mrig> take look at go.
[01:17:15] <pyzozord> mrig: sadly I don't know math enough to go furthre into that discussion
[01:17:48] <pyzozord> webNET4: then imagine one dimmension more of heat problems :D
[01:17:49] <jacks2> mrig, I don't know what terminology go uses, but concurrency is not the same as parallelism.
[01:18:22] *** Quits: Tazy (~Tazmainia@102.39.90.151) (Read error: Connection reset by peer)
[01:18:36] <webNET4> you don't have to run it at 3ghz
[01:18:55] <mrig> jacks2: concurrency means that your threads will concur to solve something.
[01:19:18] <pyzozord> webNET4: cubes for the sake of cubes are cool (pun unintended), but not what this is about
[01:19:21] <mrig> parallel tasks do not require a meet up to get an end result.
[01:20:09] <mrig> jacks2: so no, parallel and concurrent tasks or calculations are not the same thing.
[01:20:17] <webNET4> i'm just saying "moors law" is not quite exhausted there are options
[01:20:47] *** Quits: jamea (~jamea@10.189-202-213.bestelclientes.com.mx) (Ping timeout: 252 seconds)
[01:20:50] <webNET4> maybe not doubling, but its not hitting a way too high barrier yet
[01:20:59] <mrig> webNET4: not many of the specialists seem to be saying this though.
[01:21:02] <jacks2> mrig, concurrency won't help you compute things faster by utilizing multiple cores. but it will help you download things faster by dowloading several things concurrently
[01:21:04] <pyzozord> yeah one of the big unharvested options is in software
[01:21:09] <mrig> It would have been done already otherwise.
[01:21:19] <pyzozord> see: 30mb javascript blobs
[01:21:31] <webNET4> how special are they
[01:21:32] <jacks2> so concurrency is pretty irrelevant for our discussion
[01:22:02] <mrig> jacks2: are you kidding? I can fire up 1000000000 computers at once and give them all a chunk of the problem to do.
[01:22:03] *** Joins: bitmega (~bitmega@user/bitmega)
[01:22:15] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: Lost the game...)
[01:22:17] <webNET4> the same specialists that still using 12nm process
[01:22:40] <jacks2> mrig, that's not concurrency, as typically defined.
[01:22:52] <mrig> It is a distributed system.
[01:23:10] <pyzozord> mrig: do you remember the turing award talk from that cpu design guy? Do you remember his name?
[01:23:13] <mrig> I am not one for formal definitions in languages with such lax grammar.
[01:23:31] *** Joins: snake (~snake@user/snake)
[01:23:56] <mrig> pyzozord: not his name no, there were two of them, I remember the talk though, they developed the riscv architecture.
[01:24:12] <pyzozord> webNET4: anyway turing award recipients say moors law is over "and software guys we [hardware guys] gave you free ride for decades, but that's over now"
[01:24:46] <jacks2> mrig, hard to communicate when you conflate concurrency, parallelism, and distributed computing
[01:24:47] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[01:24:52] <webNET4> did they say WHY it's "over" ?
[01:25:00] <webNET4> or handwave?
[01:25:05] <pyzozord> webNET4: running out of atoms and heat walls
[01:25:26] <webNET4> on silicon wavers
[01:25:28] <webNET4> wafers
[01:25:31] <pyzozord> just running current tech to it's limits and no new tech on the horizon yet
[01:25:35] <mrig> pyzozord: John Hennessy And David Patterson?
[01:26:01] <webNET4> all this tells me is they think the solutions are too expensive
[01:26:08] <mrig> jacks2 I am not conflating anything, you are chest puffing now though :D
[01:26:20] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[01:26:21] <oldlaptop> webNET4: If there exist solutions, they don't even *know about them yet*
[01:26:28] <oldlaptop> and there may *not* exist any
[01:26:35] <webNET4> we don't know about cryogenic coolants?
[01:26:43] <pyzozord> mrig: hmm probably
[01:27:00] <oldlaptop> cryogenic coolants are hilariously impractical for most computing applications
[01:27:15] <pyzozord> webNET4: just watch the turing award talk https://www.youtube.com/watch?v=3LVeEjsn8Ts
[01:27:15] <oldlaptop> are you going to start carrying a liquid nitrogen loop around in your back pocket?
[01:27:17] <bayaz> Title: John Hennessy and David Patterson 2017 ACM A.M. Turing Award Lecture 
[01:27:19] <webNET4> i' am not arguing for consumer products
[01:27:23] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[01:28:09] <webNET4> theoretical solutions to allow transistor stacking are not impossible to imagine
[01:28:15] * pyzozord goes back to learning about bronze dragons greatest secrets :D
[01:28:38] <oldlaptop> that makes the power and heat problems even worse
[01:28:52] <mrig> jacks2: Might I suggest that it be possible that your understanding of the subjects at hand, is somewhat lacking a holistic coherence?
[01:29:00] *** Lord_of_Life_ is now known as Lord_of_Life
[01:29:13] <mrig> That it could be beneficial to consider computing this way?
[01:30:15] <jacks2> mrig, you might. I might also suggest that you don't know the difference between concurrency, parallelism, and distributed computing, because you kept conflating them, even after I have tried to resolve any difference in definitions used in the go language
[01:31:47] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:32:16] <mrig> jacks2: so we shall agree to differ in opinion then, beware of your convictions though; When sure of something, is often when I am the most wrong about it.
[01:32:30] <jacks2> *shrug*
[01:32:39] <pyzozord> You know that bronze dragons can spend their whole lives polymorphed to humanoids?
[01:33:04] <mrig> heh :)
[01:33:10] <mrig> I did not!
[01:33:13] <pulse> my favorite dragon is the bone dragon
[01:33:16] <pyzozord> :D
[01:33:32] <pulse> imagine riding into a village on a bone dragon
[01:33:36] <pulse> nobody would dare touch you
[01:34:30] <pyzozord> Imaging riding a bone dragon to work. Noone dare taking your parking spot!
[01:34:36] <pyzozord> or steal your lunch
[01:35:15] <pulse> excuse me sir you can't park your dragon here
[01:35:21] <pyzozord> :D
[01:35:25] <mrig> lol
[01:35:30] *** Quits: peteyboy1 (~peteyboy1@95.169.235.10) (Read error: Connection reset by peer)
[01:35:47] <pyzozord> I'd love to play a d&d module with this theme
[01:35:57] <mrig> I'd like mine to fly off and amuse itself until I whistle it back again or something.
[01:36:10] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Ping timeout: 240 seconds)
[01:37:08] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[01:37:45] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[01:38:51] <mrig> Come to think of it, you could concurrently perform tasks on a network of client applications.
[01:38:52] <pulse> man i hate when google gives me local results
[01:38:58] <pulse> give me english results... you... you
[01:38:59] <pulse> localizer
[01:39:05] <pyzozord> Like go have a feest in a local microsoft office :P
[01:39:48] <mrig> could be pretty cool for distributed tasks in a sort of processing sharing scheme.
[01:40:31] * mrig is pondering the amazing thing that is the interweeb.
[01:41:09] <mrig> how to first get your application distributed, write something that many people want, with some shared calculation goal.
[01:41:55] <mrig> Could be fun, a sort of legit and transparent bot net, like the seti project or the gene folding ones.
[01:42:10] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 260 seconds)
[01:43:04] <mrig> of course analyzing specifically narrow slices of the skies radio pattern must be embarrassingly parallel so that does not really count as concurrent.
[01:43:29] <mrig> Though that said, the black hole picture was not.
[01:43:34] <mrig> that would be concurrent.
[01:45:28] *** Quits: dante443 (~dante443@99-88-166-99.lightspeed.milwwi.sbcglobal.net) (Ping timeout: 252 seconds)
[01:45:34] <mrig> Programming is awesome :D
[01:46:06] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 276 seconds)
[01:47:59] <pyzozord> Yeah, it's really cool. It has so many aspects. Really one can spend whole life and not learn everything
[01:49:02] <pyzozord> It's literally like being a wizard of 21 century :P
[01:49:53] <pyzozord> [insert something about technology becoming magic blah blah]
[01:50:33] <pulse> still no printable pizzas
[01:51:12] <webNET4> https://www.etymonline.com/word/character  sorcery confirmed
[01:51:14] <bayaz> Title: character | Origin and meaning of character by Online Etymology Dictionary 
[01:55:33] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[01:55:41] *** Joins: ditto_irl (~merlinus@67.38.43.161)
[01:57:35] <ditto_irl> hi, I'm having problems with intellij/kotlin and I was hoping someone could help me figure out whether this is some sort of bug in intellij or something I'm doing wrong. The core problem is that it never stops analyzing my code at the "Inspections" phase and all of the results I've found on google (there aren't many) are from bug trackers that have since been resolved. There are surprisingly few 
[01:57:42] <ditto_irl> stack exchange examples for this specific issue and I don't know if I'm being too narrow in my search
[01:58:17] *** Joins: JavaBean (~javabean@user/javabean)
[01:58:28] *** Quits: Akuli (~Akuli@87-94-109-224.bb.dnainternet.fi) (Quit: Leaving)
[01:58:44] *** Quits: inky_ (~inky@46.36.119.19) (Read error: Connection reset by peer)
[01:58:45] <webNET4> sounds like a bug
[01:58:47] <ditto_irl> As a result of the inspections issue, it doesn't update certain inspections like "if has empty body" even if I later fix it... but if I delete the code and paste it back, it will update it and not have problems
[01:59:00] *** Joins: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca)
[01:59:08] *** Quits: inky (~inky_@46.36.119.19) (Read error: Connection reset by peer)
[01:59:34] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:dc0c:f0b2:7d10:1786)
[01:59:51] <webNET4> are you using some strange encoding in the source file?
[02:00:18] <ditto_irl> Windows (CR LF) and UTF-8
[02:00:21] <webNET4> like some extended ascii code page
[02:00:31] <ditto_irl> It's one specific file that has this issue, eights/Eights.kt, all other files are fine
[02:00:39] <webNET4> hmm, are there any characters > 127 ?
[02:00:42] <webNET4> >= 127
[02:00:53] <ditto_irl> Are you asking if there are any unicode special characters in this file?
[02:01:00] <webNET4> aye
[02:01:13] <ditto_irl> I'm not sure how to tell but I can probably run it through python to be sure
[02:01:31] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:dc0c:f0b2:7d10:1786) (Ping timeout: 252 seconds)
[02:01:38] <ditto_irl> those would be characters for which the unicode representation is different than the ascii representation? I'm not exactly sure how to test this.
[02:02:00] <webNET4> me either, i stay far away from utf-7
[02:02:03] <webNET4> i men 8!
[02:02:06] <ditto_irl> did I say 7?
[02:02:08] <ditto_irl> oh ok
[02:02:17] <ditto_irl> hmm
[02:02:26] <ditto_irl> (I asked because I didn't remember, I wasn't trying to be mean)
[02:02:47] <webNET4> if its > ' '  and < DEL  then it is printable ascii
[02:03:47] <ditto_irl> hmm
[02:04:02] <webNET4> >= " "  i need to eat i can't even type bbl
[02:04:48] <ditto_irl> notepad++ has a "convert to ANSI" option, would that remove UTF characters?
[02:05:29] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 265 seconds)
[02:05:52] <ditto_irl> I think it's interesting that the issue is with only one file
[02:05:53] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[02:06:20] <ditto_irl> I've been editing the file only in IntelliJ so unless I pasted something weird in and forgot about it I don't know how a special character could have gotten in there
[02:06:53] <ditto_irl> And to test, I downloaded the repository from git via git gui into a new directory
[02:06:54] *** Joins: dante443 (~dante443@2600:1702:7a0:9a40:6e62:6dff:fe5d:c340)
[02:07:06] *** Joins: Crescendo (~Crescendo@user/crescendo)
[02:07:54] <ditto_irl> Surely this couldn't possibly be caused by the directory also containing git version control? Because then why would it be only one file that's affected?
[02:07:55] *** Quits: magla (~gelignite@55d4c46b.access.ecotel.net) (Quit: Stay safe!)
[02:09:35] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[02:10:25] <ditto_irl> hmm... I bet I could checkout old branches using git to see when the file got the change that caused this problem
[02:11:09] <pyzozord> ditto_irl: is it stuck on a specific file each time?
[02:11:40] <ditto_irl> pyzozord: Yes, I believe so. It's only Eights.kt that has this problem, but that's not particularly notable because most of my work has been in Eights.kt
[02:11:54] <ditto_irl> I just checked out the oldest possible revision of this file and found that the issue does not occur with such an old version
[02:12:02] <ditto_irl> so it must be something that changed
[02:12:33] <ditto_irl> uhhhh that said I appear to have... deleted version control... just a bit
[02:12:56] <ditto_irl> ok I got it back lol
[02:13:09] <pyzozord> maybe try running the fault version through something like thishttps://onlineutf8tools.com/validate-utf8
[02:13:48] *** Quits: mdbauman (~mdbauman@99-184-99-19.lightspeed.gnvlsc.sbcglobal.net) (Remote host closed the connection)
[02:14:05] *** Joins: mdbauman (~mdbauman@2600:1700:7e60:f7c0:8c5a:a89b:b1ff:acd4)
[02:14:20] <pyzozord> or conver it to ascii and then back to utf8 https://onlineutf8tools.com/convert-utf8-to-ascii
[02:14:21] <bayaz> Title: Convert UTF8 to ASCII - Online UTF8 Tools 
[02:14:38] <pyzozord> wht do I keep eating letters
[02:14:47] *** Joins: silasfox (~silasfox@xdsl-84-44-182-29.nc.de)
[02:14:50] <pyzozord> or type the wrong ones
[02:14:50] <ditto_irl> hmmm
[02:14:54] <ditto_irl> the validator says it's valid
[02:15:25] <pyzozord> there is always the brute force: binary search
[02:15:38] <ditto_irl> My commits are rather large because I'm new to VCS
[02:15:47] <pyzozord> delete first half of your the file and see if the problem still occures
[02:16:02] <pyzozord> if it still occures reapat if it doesn't repeat on the other half
[02:16:08] <ditto_irl> hmmm
[02:16:14] <ditto_irl> Would commenting out half the file work?
[02:16:34] <pyzozord> no must delete, since we suspect some utf8 encoding problem
[02:17:08] <pyzozord> once we eliminate utf8 suspection then yes, comments, because next in line is some kind of syntax that the analyzer gets stuck on
[02:17:29] *** Quits: silasfox (~silasfox@xdsl-84-44-182-29.nc.de) (Client Quit)
[02:18:44] *** Quits: farmstatejake1 (~farmstate@user/farmstatejake) (Quit: farmstatejake1)
[02:18:53] *** Quits: motherr (~motherr@user/motherr) (Quit: zzz)
[02:19:45] <ditto_irl> aha!
[02:19:52] <ditto_irl> if I comment out the entire file, the problem disappears
[02:20:10] <pyzozord> then we know it's unt utf8 issue, it's a syntax issue
[02:20:42] <pyzozord> good call with trying out the commening entire file first to eliminate utf8 suspection in one step
[02:20:44] <ditto_irl> thanks for the tip
[02:20:48] <pyzozord> no worries
[02:20:58] <pyzozord> brute force binary search always works
[02:21:18] <pyzozord> just a bit laborious sometimes
[02:21:27] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:24:41] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[02:24:58] *** Joins: Crescendo (~Crescendo@user/crescendo)
[02:26:10] <ditto_irl> GOT IT
[02:26:14] <ditto_irl> GOT IT DOWN TO ONE FUNCTION EVEN
[02:26:24] <ditto_irl> oops caps*
[02:26:32] <ditto_irl> the caps were because I typed "TODO: WHY WILL THIS PART NOT INSPECT"
[02:26:35] <pyzozord> nice :) yeah binary search is suprising fast
[02:27:01] <pyzozord> what was it?
[02:27:07] *** Quits: Narrat (~omnius@p200300df5f01ca1206ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[02:27:09] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:27:27] <pyzozord> break it down further, word by word
[02:27:33] <ditto_irl> alright, it's in one specific section of that function
[02:27:37] <ditto_irl> The function is very small
[02:28:17] <ditto_irl> It's in this section: (StaticRules.wildValues.contains(a.value) and CardsCompanion.normalSuits.contains(a.suit))
[02:28:26] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[02:28:31] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa)
[02:28:35] <pyzozord> ditto_irl: you can refactor this code to two lines
[02:28:44] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[02:28:44] <pyzozord> sorry three
[02:28:51] <ditto_irl> uhh actually it's two lines
[02:29:07] <ditto_irl> I'm just summarizing it for irc
[02:29:26] <pyzozord> both of those lines cause analyzer to get stuck?
[02:29:46] <ditto_irl> If I comment out one but not the other, the analyzer still gets stuck, but if I comment both out at once, it doesn't get stuck
[02:30:10] <pyzozord> doesn't matter which, if any one is present it gets stack?
[02:30:17] *** Joins: Metalsutton (~Metalsutt@101.100.153.131)
[02:30:17] <pyzozord> well what's common about those lines
[02:30:25] <ditto_irl> I'm rewriting it now
[02:30:25] <pyzozord> try replacing a.stuff with something else
[02:30:29] <pyzozord> some blank
[02:30:38] <ditto_irl> Both of them use a companion object
[02:31:48] <ditto_irl> hmmm
[02:31:59] <ditto_irl> rewriting it to repeatedly update a value "result" (boolean) results in no problem
[02:32:35] <pyzozord> could be bug in the analyzer
[02:32:49] <ditto_irl> uhhhhhhh
[02:32:51] <ditto_irl> so
[02:32:52] <pyzozord> best check if other people have this problem too and if they have the same version of intelij
[02:33:06] <ditto_irl> at no point in this process did anything change:
[02:33:13] *** Quits: jokoon (~eio@2a01:e0a:542:e160:6140:7cd3:2d72:c0aa) (Quit: Leaving)
[02:33:28] <ditto_irl> result variable -> one assignment to result (chain of "or"/etc) -> line that looks about the same as it used to
[02:33:36] <ditto_irl> wait
[02:33:40] <ditto_irl> *squints at code*
[02:33:45] <ditto_irl> why is there a }
[02:34:34] *** Joins: spaceshipnow (~spaceship@65.100.53.74)
[02:34:34] <pyzozord> maybe analyzer is asking itself the same question :P
[02:35:23] *** Joins: inky_ (~inky@46.36.114.205)
[02:35:45] <ditto_irl> Anyway thank you very much for teaching me binary search, I'll never forget this
[02:35:52] <ditto_irl> I might forget your name though but that's because I'm bad with names
[02:36:18] <pyzozord> I'm glad I could be helpful :)
[02:36:34] <pyzozord> forget me, remember binary search :D
[02:36:38] *** Quits: Klinda (~klinda@2.227.251.209) (Quit: Leaving)
[02:36:43] <pyzozord> that stuff saves lives
[02:36:45] <ditto_irl> I still don't understand what happened
[02:37:00] <ditto_irl> I even rewrote it to look more like the old version but it didn't break
[02:37:10] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[02:37:25] *** Joins: webNET4 (~0x100@32.211.211.39)
[02:37:26] <pyzozord> you could keep digging, could be analyzer bug, could be that one of these objects has some kind of type that's circular for example or something like that
[02:38:24] *** Quits: spaceshipnow (~spaceship@65.100.53.74) (Client Quit)
[02:38:38] *** Joins: spaceshipnow (~spaceship@65.100.53.74)
[02:39:05] <ditto_irl> I wonder if I could simplify this function somehow
[02:39:17] <pyzozord> ditto_irl: pro tip, you can apply binary search when debugging too
[02:39:46] <ditto_irl> here's the fixed function: https://pastebin.com/H8vbACy7
[02:39:48] <bayaz> Title: fun validateAttempt(a: Attempt): Boolean = ( - Pastebin.com 
[02:39:54] <ditto_irl> it's uh. not showing up on pastebin for me
[02:40:00] <ditto_irl> there's just blank space instead of the paste lol
[02:40:58] <pyzozord> ditto_irl: try deleting the problematic lines and writing them again by hand exactly the same, does it still get stuck?
[02:41:50] <pyzozord> why are you mixing && and or?
[02:42:02] <ditto_irl> still test
[02:42:11] <ditto_irl> I want to know how to simplify the function though
[02:42:17] <ditto_irl> I don't care what caused intellij to break
[02:42:22] <ditto_irl> I want to make the function cleaner now
[02:43:06] <pyzozord> looks pretty clean to me, not sure how much cleaner you can make it
[02:43:15] <ditto_irl> wow damn
[02:43:25] <ditto_irl> I was hoping I was looking at it wrong and like, "when" would be more appropriate or something
[02:44:00] <ditto_irl> I'm kind of new to kotlin so I don't know how normal people write kotlin code
[02:44:10] <pyzozord> but i don't know kotlin, maybe someone with kotlin experience can help here
[02:44:36] <pyzozord> I'd only test being consistant about && and or. Does kotlin really support both styles?
[02:44:40] *** Parts: spaceshipnow (~spaceship@65.100.53.74) (Textual IRC Client: www.textualapp.com)
[02:44:51] <pyzozord> Or maybe one style is from kotlin and other from java? Analyzer could easily trip on that
[02:45:35] *** Joins: hexingb (~hexingb@2409:8900:6f20:1372:443c:9e93:75fa:acf5)
[02:46:03] <pyzozord> yeah from my very brief only-few-hours experience in kotlin from few years ago, it was pretty buggy and it's java guts where showing. Maybe it's still suffering from that a bit in some aspects like the analyzer
[02:46:43] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[02:46:46] <arahael> I sometimes dabble in Kotlin. (Rarely), but what's the issue?
[02:47:09] <ditto_irl> https://pastebin.com/AmF3e9JC
[02:47:10] <bayaz> Title: fun validateAttempt(a: Attempt): Boolean = when{ a.value == - Pastebin.com 
[02:47:13] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[02:47:16] <ditto_irl> Nothing major, just trying to clean up a function that I think looks ugly
[02:47:33] <ditto_irl> Here's the latest version using when instead of "and" and "or"
[02:48:16] *** Quits: FoodMan (~glucose@194.110.13.12) (Remote host closed the connection)
[02:48:49] <arahael> When looks good, I just wish kotlin allowed sum types, that way you'd be able to avoid the 'else' clause.
[02:49:21] *** Quits: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net) (Quit: Leaving)
[02:49:30] <pyzozord> ditto_irl: also tell arahael about the analyzer issue
[02:49:35] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:49:39] <pyzozord> I'm off, cya!
[02:49:47] <arahael> pyzozord: Take care. :)
[02:49:49] <ditto_irl> let me first commit my code and then checkout the broken version
[02:51:18] <ditto_irl> arahael: I encountered an issue with the kotlin plugin where it would use a lot of CPU and fail to ever finish inspecting my code
[02:51:25] <ditto_irl> I narrowed it down to this specific line: https://pastebin.com/vZLzXeSC
[02:51:27] <bayaz> Title: fun validateAttempt(a: Attempt) = ( ( - Pastebin.com 
[02:51:39] <ditto_irl> The current version of this line doesn't have this issue: https://pastebin.com/AmF3e9JC
[02:51:41] <bayaz> Title: fun validateAttempt(a: Attempt): Boolean = when{ a.value == - Pastebin.com 
[02:52:09] <ditto_irl> I'm really new to kotlin so I was hoping it was something I was doing wrong but after reviewing it I can't figure out what could possibly have caused the code inspection tool to hang
[02:53:04] <ditto_irl> StaticRules and CardsCompanion are both companion objects. StaticRules is in the same file (Eights.kt) in the same class (Eights), and CardsCompanion is imported from Cards because I was importing the rest of Cards as * but the companion doesn't come with it
[02:53:06] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[02:53:11] *** Quits: snake (~snake@user/snake) (Ping timeout: 252 seconds)
[02:53:14] <arahael> ditto_irl: That code looks fine and correct to me, so the next thing for you to check is to see what the "typical" style is for kotlin.  Do kotlin users typically use 'and' and 'or' or do they use && and ||?  And even so, do they typically put those keywords on the start of a new line?
[02:53:44] <ditto_irl> I don't know what's typical for kotlin coders because all of my friends who use kotlin are in other time zones and/or are in the same time zone but they're nocturnal
[02:55:36] *** Quits: numsima (~numsima@101.175.64.73) (Quit: Client closed)
[02:58:00] <ditto_irl> Most of what I know about kotlin conventions is just what IDEA tells me to change my code to
[03:00:18] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:01:11] <arahael> ditto_irl: I can't easily find the conventions on the kotlin site, the next bet is to probably ask kotlin users - eg, in a kotlin-specific channel.
[03:01:23] <ditto_irl> oh lol I forgot there would be a kotlin specific channel
[03:01:25] <arahael> Only 43 users in #kotlin
[03:03:10] <arahael> However, I suspect kotlin users would prefer using &&'s and ||'s instead of and's and or's.  Have you tried putting the whole boolean expression on the same line? Just to see if that makes a difference?
[03:03:20] <ditto_irl> oh uh
[03:03:27] <ditto_irl> I don't really care about the way it used to be structured
[03:03:33] *** Joins: FoodMan (~glucose@194.110.13.12)
[03:03:37] <ditto_irl> I don't really know why I'm continuing to talk about inspection being broken
[03:03:46] <ditto_irl> I thought you might be interested in the fact that inspection was broken
[03:04:16] <arahael> Yeah, it's useful for you to know why, because typical code and typical style is unlikely to be what's broken when using inspection! :D
[03:04:35] <arahael> That would be an astonishingly bad implementation for the tool if the typical scenarios are broken!
[03:04:55] <arahael> (And we would expect better from Jetbrains - they're highly regarded in that community)
[03:05:13] <arahael> Oh, and incidentally... Which IDE are you using?
[03:05:31] <ditto_irl> IntelliJ IDEA using the builtin kotlin plugin
[03:05:45] <ditto_irl> Replacing both "or" statements with "||" and replacing the "and" statement with "&&" results in the same issue
[03:05:46] <arahael> Ah, that's regarded as the best, iirc.
[03:05:52] <arahael> Did you put it all on the same line?
[03:06:43] <ditto_irl> Putting the entire statement on one line fixes the issue
[03:07:35] <arahael> Hmm, ok, that's curious. That gives some insight into the parser for the tool.  What if you use your original style, but instead of starting the lines with the booleon keywords, end the line with the booleans.
[03:08:09] <arahael> Ie, `foo == bar &&\n` as opposed to `\n&& baz > 42`
[03:08:29] <ditto_irl> Same issue if I move the boolean comparisons to the end of the line
[03:08:42] <ditto_irl> oh uh
[03:08:42] <arahael> What if you specify the return type for the function explicitly?
[03:08:46] <ditto_irl> there's a redundant set of parentheses
[03:08:55] <ditto_irl> Specifying the return type explicitly results in the same problem
[03:09:18] <arahael> That there is, indeed. Does removing the redundant set of parens make a difference? ( Would not have expected that to make any difference, though... )
[03:09:19] <ditto_irl> removing the redundant parentheses (no other changes) fixes the issue
[03:09:23] <arahael> Wow.
[03:09:49] <ditto_irl> Removing the redundant parentheses and then manually adding back the redundant parentheses brings the issue back
[03:09:57] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[03:10:13] *** Joins: mickey (~user@user/mickey)
[03:10:31] <arahael> Now you can make a minimal example and ask #kotlin about it, or your friends :D
[03:10:47] *** Quits: piou (~piou@user/piou) (Ping timeout: 252 seconds)
[03:11:04] <arahael> Perhaps even submit to the bug tracker, I'm sure there's one for the analyzer or IDE.
[03:11:30] <arahael> In the mean time, I guess you'll have to avoid redundant parens. :(
[03:11:51] <arahael> I know in Swift developers hate redundant parens for some reason.
[03:12:50] *** Quits: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca) (Remote host closed the connection)
[03:13:09] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[03:13:38] *** Joins: dsrt^ (~dsrt@68.101.54.227)
[03:13:42] <ditto_irl> got it
[03:14:00] <ditto_irl> it has nothing to do with companion objects
[03:15:06] <arahael> Yeah - it's good to assume that a typical developer following typical conventions is likely to have a very smooth experience in almost any language or framework, so if you're experiencing friction or glitches, try asking yourself what you're doing different.
[03:16:20] *** Joins: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net)
[03:16:24] <ditto_irl> hm
[03:16:33] <ditto_irl> what's the standard way to test an expression
[03:16:44] <ditto_irl> I'll just assign it to a variable
[03:17:26] *** Joins: piou (~piou@24.20.201.77.rev.sfr.net)
[03:17:28] *** Quits: exvicesindaco (~exvicio@host-79-46-77-254.retail.telecomitalia.it) (Remote host closed the connection)
[03:18:33] <arahael> That's going to depend on the language and framework. :)  But assigning is usually good, kotlin is probably going to favour inlining them, though, but you should keep the expressions short, assigning intermediate expressions so that you can keep them short
[03:18:42] <arahael> gtg
[03:19:37] <ditto_irl> oh no I meant for the minimal working example of the inspection issue
[03:19:55] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 265 seconds)
[03:20:37] *** Joins: inky (~inky_@46.36.114.205)
[03:21:51] *** Joins: Crescendo (~Crescendo@user/crescendo)
[03:25:41] *** Joins: zaher (~zaher@37.48.146.184)
[03:28:08] *** Quits: zaher_ (~zaher@37.48.146.239) (Ping timeout: 265 seconds)
[03:28:17] <pulse> pop quiz! in C, name the types to: 5, 5.f, 5.0, '5', "5"
[03:30:02] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 252 seconds)
[03:30:36] <webNET4> 4.1L
[03:32:47] <pulse> it's not as easy as it looks :p
[03:33:06] *** Quits: piou (~piou@24.20.201.77.rev.sfr.net) (Ping timeout: 260 seconds)
[03:33:22] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 252 seconds)
[03:33:54] <webNET4> c lets you use exponents too
[03:33:55] *** Joins: pizdets_ (~pizdets@183.182.115.101)
[03:33:57] *** Quits: pizdets (~pizdets@183.182.110.162) (Ping timeout: 265 seconds)
[03:35:26] *** Quits: compscipunk (~compscipu@107-214-234-232.lightspeed.sndgca.sbcglobal.net) (Quit: WeeChat 3.2.1)
[03:36:40] <ditto_irl> What do I do with a branch once I'm done with it?
[03:36:58] <ditto_irl> Should I just leave it in the history? I didn't do anything in main while I was working in human-players.
[03:37:13] <ditto_irl> pulse: Is it not "int, single, double, char, and string"?
[03:37:19] <jinsun> pulse: int, float, doouble, char, char[2]
[03:37:32] <ditto_irl> oops yeah float, not single
[03:37:45] <arahael> i'm not sure about int.
[03:37:52] <jinsun> and C doesn't have string
[03:38:00] <ditto_irl> oh it doesn't? Ok, then yeah, char[2]
[03:38:32] <arahael> but the char's there are neither signed nor signed.
[03:38:48] <arahael> neither signed nor unsigned, rather,
[03:39:10] * arahael throws the ipad keyboard against the wall.
[03:39:22] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:39:41] <pulse> ditto_irl, no
[03:39:43] <pulse> jinsun, also no
[03:39:56] <pulse> there's no string type in C btw xD
[03:41:25] <jinsun> pulse: don't say double instead of doouble
[03:41:30] <pulse> o____o
[03:41:53] <pulse> ok, it's int, float, double, int, char[2]
[03:42:03] <pulse> i'm only 95% sure about the last one
[03:42:04] <ditto_irl> int
[03:42:15] <ditto_irl> '5' is int
[03:42:19] <ditto_irl> I need to sit down and rethink my life
[03:42:19] <pulse> yep
[03:42:58] <jinsun> hmm int can be assinged to char, and vice versa, but is the literal considered int?
[03:43:01] <arahael> pulse: the compiler might be able to use 128 bit temporaries before ending up with the expression result type, iirc.
[03:43:08] <ditto_irl> wait
[03:43:13] <ditto_irl> what is the value of the resulting int?
[03:43:20] <ditto_irl> is it the charcode for "5" or is it literally 5?
[03:43:49] <jinsun> it is not as bad as Javascript :D
[03:43:56] <jinsun> it is the ascii value
[03:44:03] <ditto_irl> at least with javascript you know everything is a string ahead of time!
[03:44:15] <arahael> jinsun: not neccessarily.
[03:44:20] <ditto_irl> except doubles and by extension all numbers
[03:44:32] <arahael> jinsun: it depends on the file encoding.
[03:45:07] <jinsun> really? can .c files even be anything other than ascii?
[03:45:19] <ditto_irl> *pain*
[03:45:25] *** Joins: quartz (~quartz@dyn-209-2-228-79.dyn.columbia.edu)
[03:46:21] <arahael> jinsun: yep. eg, ebcdic.
[03:47:11] *** Joins: Cashlin (~hp@user/cashlin)
[03:48:19] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[03:48:24] <jinsun> oh okay, but still can't believe the '5' will be anything other than 53, even if the file encoding is different
[03:50:03] <arahael> jinsun: there are reasons some of us don't like C even thouh we are very familiar with it :( it doesnt mean we don't know C.
[03:51:14] <arahael> although, this sensitivity to the file's encoding is very common in many languages :(
[03:51:49] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[03:51:50] *** Quits: humanface (~humanface@20014C4E1C505700C81FBCF815197CD0.unconfigured.pool.telekom.hu) (Quit: Client closed)
[03:53:37] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[03:53:53] <jinsun> yeah I understand the dislike for C, I actually don't know it well, just had to use it in college so I know some basics
[03:58:31] <ditto_irl> does anyone want a jar file that lets them play crazy eights
[03:58:54] <ditto_irl> it's basically functional (otherwise I wouldn't have made it into a jar)
[04:01:20] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[04:01:29] *** Quits: gitgooood (~gitgood@host-78-145-137-41.as13285.net) (Ping timeout: 265 seconds)
[04:02:28] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:09:51] *** Joins: piou (~piou@24.20.201.77.rev.sfr.net)
[04:11:30] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:12:33] <karstensrage> ditto_irl, that sounds risky why not share the code 
[04:14:01] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[04:14:35] <ditto_irl> sure!
[04:14:48] <CoJaBo> I'm not sure what I did, but now the frontend tells everyone they have to select an emoji when they try to login
[04:14:53] <ditto_irl> here's the github repository! https://github.com/SoobNauce/cards
[04:14:55] <bayaz> Title: GitHub - SoobNauce/cards: Various card based games 
[04:15:32] <ditto_irl> The Crazy Eights submodule can be played by running the main() function in the file src/main/kotlin/sooby/cards/eights
[04:15:45] <ditto_irl> src/main/kotlin/sooby/cards/eights/Eights.kt
[04:15:53] *** Quits: piou (~piou@24.20.201.77.rev.sfr.net) (Remote host closed the connection)
[04:16:15] <ditto_irl> I wanted to distribute it as a jar because I didn't want people to have to build the project from source in order to play the game
[04:16:23] <ditto_irl> But if it's better for me to distribute the source then I'll do that
[04:17:46] *** Quits: filosofem (~filosofem@user/filosofem) (Ping timeout: 252 seconds)
[04:17:53] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[04:18:14] <ditto_irl> Is running a jar risky? Normal games are distributed via jar sometimes, aren't they?
[04:19:07] <PlanckWalk> Just as risky as running any other executable
[04:21:54] <PlanckWalk> Which is to say, very risky.
[04:21:58] <ditto_irl> hm ok
[04:22:12] <ditto_irl> I mean it's true that you have no proof that I'm not trying to steal your bitcoin wallet
[04:22:22] <ditto_irl> so I can understand the *looks up word* trepidation
[04:22:34] <ditto_irl> I have no problem with sharing the source code because I'm really proud of this project though
[04:23:09] <arahael> ditto_irl: It's just good op-sec not to run binaries you're not completely sure about.  Afterall, maybe you are a very trustworthy person, but can you guarantee that you con't have any viruses on your computer, etc?
[04:23:10] *** Joins: gggp (~textual@60.10.23.169)
[04:23:19] <ditto_irl> sure
[04:23:21] <PlanckWalk> Plenty of people run executables from people they don't know, but also plenty of people end up with malware.
[04:23:32] <arahael> Indeed.
[04:23:54] <arahael> This is one of the reasons people are pushing for reproducible builds.
[04:24:01] <webNET4> microsoft signs malware too
[04:24:04] <webNET4> no one is safe
[04:24:08] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[04:26:17] <arahael> webNET4: I don't run microsoft stuff. ;)
[04:26:24] <PlanckWalk> At least with a well-established company, you can widely publish articles telling people that their signed code was full of malware, and maybe even sue for damages.  So they've got some incentive to not have that happen.
[04:26:41] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[04:27:01] <PlanckWalk> BobXX9 on mincecraft.net publishing a mod?  No such incentive.
[04:27:21] <webNET4> so you cripple software trade, over paranoia?
[04:27:35] <webNET4> why not fix the problems
[04:27:44] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[04:27:47] *** Quits: gggp (~textual@60.10.23.169) (Ping timeout: 252 seconds)
[04:28:37] <webNET4> even websites are malicious, better stop using the web
[04:29:26] <PlanckWalk> Good for you.
[04:32:14] <arahael> webNET4: I dunno about you, but when there's no reason for us to download software from a random dude on IRC who doesn't explain what the binary does and run it just to find out. :)  But a specific application from a develoepr that solves a very particular need, that's worth the risk, generally.
[04:32:50] <webNET4> it's crazy 8's
[04:33:04] <PlanckWalk> Right, crazy 8's is worth any amoutn of risk.
[04:34:23] <arahael> webNET4: Also, how would you "fix the problems"?
[04:34:45] <arahael> It takes effort to sandbox random applications effectively, and usually a second, airgapped machine.
[04:34:49] <webNET4> depends what problem we're irrationally shutting down software free trade for
[04:35:36] <PlanckWalk> webNET4: The known fact that hundreds of thousand to millions of people already trick people into running software that causes damage of various sorts?
[04:35:37] <arahael> webNET4: Oh, you've forgotten what the problem is? Read the conversation above.  We can wait. :)
[04:35:50] <webNET4> we're all programmers here
[04:36:10] <PlanckWalk> So are such people.
[04:36:32] <webNET4> problem seems to be your OS has inadequate protections built in
[04:36:34] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[04:36:41] <PlanckWalk> webNET4: None of them do.
[04:36:47] <PlanckWalk> Err, all of them do.
[04:36:48] <webNET4> unless your fears are flaws in ring 0
[04:36:52] <PlanckWalk> (None have adequate protections)
[04:37:22] <webNET4> s/in/in or below/
[04:37:54] <arahael> webNET4: Even in ring 3, there's a lot of damage that could be done.
[04:38:27] <webNET4> thats what i mean by inadequate protections in your OS
[04:39:45] *** Quits: mteo (francis@user/francis) (Quit: rb)
[04:41:10] *** Joins: mteo (francis@user/francis)
[04:41:11] <PlanckWalk> I completely agree.
[04:41:30] <arahael> Hardware, too.
[04:41:41] <PlanckWalk> My OS, and every other common OS, has inadequate protections.
[04:41:50] <arahael> Eg, at the moment on M1 systems, there's a side-channel attack that can not be disabled, which can leak information.
[04:42:03] <arahael> Hopefully the next hardware revision fixes that.
[04:42:16] *** Joins: xiongxin8802 (~quassel@2409:8955:384c:65ba:c02e:d8ee:3deb:649c)
[04:43:21] <webNET4> it's true though we cannot rule out the possiblity that this crazy 8's jar was crafterd by someone with that skillset to reach through the ayers of abstraction and security available
[04:43:53] <arahael> Ooh, and this is a hardware agnostic attack: https://www.zdnet.com/article/new-hardware-agnostic-side-channel-attack-works-against-windows-and-linux/
[04:43:55] <webNET4> i retract my statement about being paranoia
[04:43:55] <bayaz> Title: New hardware-agnostic side-channel attack works against Windows and Linux | ZDNet 
[04:44:27] <arahael> webNET4: Not only that *someone*, but also the provider of his compiler, too.  Anything oculd have modified his compiler on his system.
[04:44:36] <arahael> webNET4: Or linker.
[04:44:54] <arahael> Linux, in particular, is very vulnerable to linker injection attacks.
[04:45:25] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[04:45:37] *** Joins: webNET4 (~0x100@32.211.211.39)
[04:45:45] <arahael> webNET4: We thought we'd lost you! :D
[04:46:17] <PlanckWalk> There has been malware that injects code into various types of executables around for quite a while (decades).
[04:46:44] <webNET4> i don'tk now too much about JARs so i can't comment on the ability to detect malware
[04:47:15] <arahael> webNET4: JAR's are literally nothing more than .zip files that contain arbitrary code and .class files, which contain java bytecode, which are not really sandboxed at all.
[04:47:17] <PlanckWalk> From the point of view of security, they're just ZIP files that contain executable code.
[04:47:23] <webNET4> but linux depends on DAC to protect it's linker
[04:47:35] <webNET4> glibc standard linker
[04:47:41] <arahael> webNET4: No it doesn't.
[04:47:59] <arahael> webNET4: You can override it very very easily by using environment variables, which are in user control.
[04:48:02] *** Joins: snake (~snake@user/snake)
[04:48:06] <webNET4> LD_PRELOAD?
[04:48:09] <webNET4> thats a feature not a bug
[04:48:10] <arahael> And the like.
[04:48:25] <arahael> It still causes a security concern.
[04:48:25] <PlanckWalk> It's a feature that can be misused for malicious purposes.
[04:48:37] <webNET4> the bug was back years ago in ld when it didn't check if you were preloading a setuid binary ;)
[04:49:48] <arahael> webNET4: Ah, so you have this fallacy? https://xkcd.com/1200/
[04:49:48] <bayaz> Title: Authorization 
[04:51:54] <webNET4> no i don't have a user account
[04:52:41] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[04:52:51] <webNET4> well kind of, its all based on the TTY
[04:53:05] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 252 seconds)
[04:53:26] <quartz> stack.get(i) = new Integer((stack.get(i).intValue() + v));    When I try this code, my compiler says "left hand side of assignment must be a variable" stack is a linked list.
[04:53:45] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[04:53:53] <arahael> quartz: What language is that?
[04:53:58] <quartz> LinkedList<Integer> stack = new LinkedList<Integer>();
[04:54:01] <quartz> arahael: Java
[04:54:03] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:54:09] <quartz> I'm not sure why it gives me that error
[04:54:10] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 265 seconds)
[04:54:12] <arahael> quartz: I don't think Java lets you assign to a function result.
[04:54:39] <arahael> quartz: You probably want to do a set(new Integer...), instead of assign to the get.
[04:54:50] <arahael> (Or similar)
[04:55:39] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[04:55:53] <webNET4> i mean linux VT, not tty exactly
[04:56:27] <quartz> arahael: Ohhh OK
[04:56:56] <InPhase> arahael: The real bad news for MacOS in that side-channel attack vector study, is that the researchers didn't even think it was worth bothering to test their exploit on macs.  ;)
[04:57:14] <arahael> InPhase: There's other such exploits on macs anyway. :(
[04:57:20] <arahael> InPhase: (And those can't be disabled)
[04:57:55] <InPhase> arahael: Macs are invincible, because of the ultimate security feature where you have to drag and drop downloaded programs before they can access the network.
[04:58:09] <arahael> Ha.
[04:58:12] <oldlaptop> arahael: you mean this? https://m1racles.com/
[04:58:14] <bayaz> Title: M1RACLES: An Apple M1 Vulnerability 
[04:58:27] <arahael> oldlaptop: Yep, that's the one.
[04:58:28] <oldlaptop> I would say anything in a position to exploit a bug like that has already won.
[04:58:31] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Ping timeout: 252 seconds)
[04:58:37] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[04:58:56] <arahael> oldlaptop: Such as... Downloading a random jar from IRC? ;)
[04:59:05] <arahael> (And running it)
[04:59:08] *** Quits: slakman (~slakman@112.202.220.5) (Ping timeout: 252 seconds)
[04:59:21] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[04:59:38] <arahael> The FAQ for that vuln is awesome, though.
[04:59:43] <oldlaptop> Sure, if you do that you lose - even though as a technical matter the code in that jar file probably can't actually exploit the particular bug you're talking about.
[05:00:18] <oldlaptop> Particularly the part about how it's not actually a particularly big deal, and the silly-name and logo exist primarily to fool media into reporting on it as though it were a big deal?
[05:01:14] <arahael> oldlaptop: Sure, but you missed the bulk of the discussion for important context here. :)
[05:01:46] <oldlaptop> which is about trying to find ways to invalidate the principle that an attacker who can exploit that bug has already won, right? :|
[05:01:48] <arahael> oldlaptop: Where webNET4 is basically suggesting that we should be able to just run all sorts of random binaries on our machines.
[05:02:42] <InPhase> oldlaptop: "Was this responsibly disclosed?  I tried, but I also talked about it on public IRC before I knew it was a bug and not a feature, so I couldn't do much about that part. ¯\_(ツ)_/¯"   I chuckled.  :)
[05:02:45] <webNET4> you should
[05:02:53] <webNET4> but your OS devs don't care
[05:03:21] <oldlaptop> I would be profoundly disturbed by a serious attempt to make that *impossible*. There is no good way to make it non-foolish, however.
[05:03:23] <PlanckWalk> Well, we do run random code when we allow javascript in websites.  But that's pretty heavily sandboxed.
[05:03:33] <oldlaptop> PlanckWalk: That's dumb too, really.
[05:03:50] <PlanckWalk> It's definitely also a risk
[05:03:52] * arahael wishes javascript on websites never became a thing. Why the hell is it a thing in pdfs, too?
[05:04:04] <oldlaptop> arahael: bloody hell, PDF.
[05:04:39] <dTal> I believe effective sandboxing is theoretically impossible between any two systems that both have access to the outside world in some way
[05:04:45] <oldlaptop> in fairness to adobe, the page-description format on which it's based is itself a Turing-complete (or LBA-complete?) language.
[05:04:48] <PlanckWalk> Adobe, the well-known security company.
[05:05:08] <webNET4> dTal only if by effective you mean perfect
[05:05:11] <oldlaptop> that doesn't excuse much of the crap that's in PDF
[05:05:23] <dTal> Imperfect is ineffective
[05:05:39] <PlanckWalk> In the sense that they're well known for code that features in articles on security.
[05:05:50] <oldlaptop> PlanckWalk: That's definitely true.
[05:05:57] <arahael> I think we should aim for higher standards in software :(  We, as an industry, seem to have conditioned the public to expect crashes and bugs. :(
[05:06:18] <PlanckWalk> I don't think we need theoretical perfection, and can't get it anyway.
[05:06:23] <dTal> great sandboxing https://github.com/joevennix/lan-js
[05:06:24] <bayaz> Title: GitHub - joevennix/lan-js: Probe LAN devices from a web browser. 
[05:06:32] <PlanckWalk> A much higher bar would be nice though.
[05:06:40] <webNET4> in this specific use case, it would be reasonable to assume the crazy eights jar wouldn't be able to escape a sandboxed VM emulating some other arch in software
[05:06:51] <arahael> webNET4: What sandbox?
[05:06:56] <dTal> I would be reasonable. And incorrect.
[05:06:59] <webNET4> seccomp + namespaces
[05:07:00] <dTal> That's the danger.
[05:07:13] <arahael> webNET4: Most OS's don't have that.
[05:07:17] <webNET4> like i said
[05:07:19] <arahael> webNET4: And certainly not configured by default.
[05:07:21] <webNET4> your OS devs don't care
[05:07:46] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[05:08:09] <arahael> webNET4: They do, but the devs for my OS aren't optimising for the case of "a person is running random binaries from IRC". They're optimising for the case of "You should get your apps from the store, and if you don't, we'll stop you from running it. Please don't bypass it manually".
[05:08:11] <dTal> You're going to be rather tempted to read and write the memory of your VM I fear, since it'd be a bit pointless if you couldn't feed it data or get results back
[05:08:22] <dTal> and you'll be doing that with some more code
[05:08:43] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[05:08:56] *** Joins: webNET4 (~0x100@32.211.211.39)
[05:10:50] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[05:13:20] <PlanckWalk> webNET4: Yes, *as a user* of any OS you can set up VMs that make running untrustworthy code less ridiculously unsafe.
[05:13:29] <PlanckWalk> The OS doesn't do that for you, though.
[05:13:59] *** Quits: Jigsy (~Jigsy@user/jigsy) (Ping timeout: 252 seconds)
[05:14:37] *** Quits: TastyWiener95 (~uhhh3@user/tastywiener95) (Ping timeout: 245 seconds)
[05:14:39] <quartz> Can I implement a Java LinkedList as a LIFO stack?
[05:14:46] <webNET4> just running it as a temp user account is usually decent protection
[05:15:00] <webNET4> just cut off the networking
[05:15:14] *** Joins: Jigsy (~Jigsy@user/jigsy)
[05:15:55] <edgar-rft> quartz: a LIFO stack most often *is* a slingly-linked list under the hood.
[05:16:11] *** Quits: zim (~zim@193.32.127.219) (Ping timeout: 252 seconds)
[05:16:16] <quartz> edgar-rft: I'm just using Java's LinkedList class
[05:16:41] <edgar-rft> quartz: I have no clue about Java
[05:17:15] <arahael> webNET4: Many people don't have that option, they'd have to raise a request for their IT.
[05:17:30] <webNET4> lol i'm my own IT
[05:17:34] <webNET4> many are
[05:18:36] <webNET4> you should petition your OS devs to add common-sense features for  running untrusted and semi-trusted programs
[05:18:58] <edgar-rft> I have Intelligent Testicles, too
[05:19:09] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[05:19:34] <PlanckWalk> webNET4: There are such features available for all OSs
[05:19:55] <webNET4> i don't know, judging by how scared eeveryone is
[05:19:57] <PlanckWalk> They're just a pain to use
[05:20:41] *** Quits: jacks2 (~bc8165b6@217.29.117.252) (Quit: quit)
[05:22:33] <PlanckWalk> (and if you slip up in setting them up, they provide no security at all)
[05:23:38] <webNET4> slip up like now how EME downloads random binaries to decrypt media?
[05:23:41] *** Quits: Jigsy (~Jigsy@user/jigsy) (Remote host closed the connection)
[05:23:48] <webNET4> wheres the outrage over that?
[05:23:55] <PlanckWalk> What's EME?
[05:24:06] *** Joins: Jigsy (~Jigsy@user/jigsy)
[05:24:06] <webNET4> in the browser its an encrypted media extension
[05:24:13] <webNET4> for playing DRM videos
[05:24:34] <PlanckWalk> Oh then yes there has been quite a bit of outrage over that
[05:24:58] <webNET4> but you still run web browsers
[05:25:04] <oldlaptop> "Oh yeah? Lucas changed the scene where Han shot Greedo, where's the outrage over that?!"
[05:25:11] <webNET4> its onlya problem if its a jar from irc
[05:25:23] <PlanckWalk> webNET4: Wow, you're really bad at this.
[05:25:39] <webNET4> k
[05:25:51] *** Joins: REDman2k1 (NOT@35.139.144.83)
[05:27:47] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[05:27:59] *** Joins: webNET4 (~0x100@32.211.211.39)
[05:28:52] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 252 seconds)
[05:28:57] <REDman2k1> hey
[05:28:58] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 265 seconds)
[05:28:58] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 265 seconds)
[05:29:58] *** Joins: anovick (~anovick@2a0d:6fc0:1bd8:7800:98e9:2c6f:1a52:52c0)
[05:30:32] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Remote host closed the connection)
[05:30:37] *** Joins: frost (~frost@59.71.240.119)
[05:31:19] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[05:35:05] *** Quits: Jigsy (~Jigsy@user/jigsy) (Killed (NickServ (GHOST command used by Jigsy`)))
[05:35:12] *** Joins: Jigsy` (~Jigsy@user/jigsy)
[05:37:05] *** Jigsy` is now known as Jigsy
[05:37:08] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:1daf:ff75:3f77:f7b1)
[05:39:50] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[05:39:52] *** Quits: hexingb (~hexingb@2409:8900:6f20:1372:443c:9e93:75fa:acf5) (Ping timeout: 252 seconds)
[05:40:04] *** Joins: hexingb (~hexingb@103.37.140.36)
[05:42:26] *** Joins: gggp (~textual@111.63.44.6)
[05:42:59] *** Quits: REDman2k1 (NOT@35.139.144.83) (Ping timeout: 265 seconds)
[05:45:30] *** Quits: gggp (~textual@111.63.44.6) (Client Quit)
[05:46:04] *** Joins: Izem (~Izem@8.6.144.177)
[05:48:35] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[05:50:53] *** Quits: snake (~snake@user/snake) (Quit: Leaving)
[05:51:06] *** Quits: quartz (~quartz@dyn-209-2-228-79.dyn.columbia.edu) (Quit: WeeChat 3.2)
[05:54:10] *** Quits: xff0x (~xff0x@port-92-195-70-241.dynamic.as20676.net) (Ping timeout: 252 seconds)
[05:56:05] *** Joins: piou (~piou@24.20.201.77.rev.sfr.net)
[05:56:07] *** Joins: xff0x (~xff0x@2001:1a81:52b9:4900:2e17:8c46:ec3d:aff1)
[05:56:22] *** Quits: hexingb (~hexingb@103.37.140.36) (Ping timeout: 252 seconds)
[05:56:37] *** Joins: hexingb (~hexingb@2409:8900:2721:f193:c6a:7ad4:4da:d692)
[05:57:03] *** Joins: pandakekok9 (~job@wikimedia-commons/pandakekok9)
[05:59:00] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[05:59:07] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 252 seconds)
[05:59:38] <[itchyjunk]> hi
[06:01:38] *** Joins: REDman2k1 (NOT@35.139.144.83)
[06:03:34] *** Joins: numsima (~numsima@101.175.64.73)
[06:03:51] *** Quits: jaysicks (~jaysicks@94-21-246-55.pool.digikabel.hu) (Remote host closed the connection)
[06:04:11] *** Joins: pulse (~pulse@user/pulse)
[06:04:37] *** Quits: kmh (~kmh@p200300df5f04e9006d31634f65c10f00.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[06:05:13] *** Joins: kmh (~kmh@p5dcc6335.dip0.t-ipconnect.de)
[06:09:15] *** Quits: piou (~piou@24.20.201.77.rev.sfr.net) (Remote host closed the connection)
[06:13:18] *** Quits: Lyn (~Lyn@user/law) (Read error: Connection reset by peer)
[06:14:54] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 265 seconds)
[06:15:04] <[itchyjunk]> am i supposed to dl emacs26?
[06:15:16] *** Joins: brabrax (~brabrax@user/brabrax)
[06:15:31] <REDman2k1> hi i kinda need help with a program im working with VB.net
[06:17:34] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[06:20:42] *** Joins: lunarkitty (uid501895@user/pyra)
[06:24:28] *** Joins: piou (~piou@24.20.201.77.rev.sfr.net)
[06:25:09] *** Joins: trace987 (~trace@95.90.106.112)
[06:29:02] *** Quits: hexingb (~hexingb@2409:8900:2721:f193:c6a:7ad4:4da:d692) (Ping timeout: 260 seconds)
[06:29:56] *** Joins: hexingb (~hexingb@103.37.140.36)
[06:32:28] *** Quits: Doffi (~doffi@91.132.197.188) (Ping timeout: 256 seconds)
[06:32:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:34:21] *** Joins: zaher_ (~zaher@37.48.186.171)
[06:36:30] *** Quits: zaher (~zaher@37.48.146.184) (Ping timeout: 260 seconds)
[06:38:44] *** Joins: nitro__ (~nitro@c-73-165-183-88.hsd1.pa.comcast.net)
[06:39:33] <oldlaptop> REDman2k1: The usual advice is to just ask your question; don't ask to ask or anything like that.
[06:41:05] <Izem> [itchyjunk] what for?
[06:41:21] <[itchyjunk]> i downloaded `emacs` instead
[06:41:27] <[itchyjunk]> to learn
[06:41:30] <[itchyjunk]> i guess
[06:41:34] *** Joins: irado (~irado@177.12.221.61)
[06:41:39] <Izem> emacs is available as a snap I think
[06:41:55] <Izem> better to install the distro version though
[06:42:34] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 260 seconds)
[06:42:44] <[itchyjunk]> the snap version said things could get out of the sandbox and i had to put the --classic flag if i understood the risk
[06:42:55] <[itchyjunk]> i didn't so i `apt install emacs` instead
[06:43:25] *** Quits: REDman2k1 (NOT@35.139.144.83) (Ping timeout: 265 seconds)
[06:44:13] <Izem> yeah due to snap confiment it would be awkard guess
[06:44:14] *** Joins: Doffi (~doffi@91.132.197.188)
[06:47:23] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[06:48:03] *** Joins: audio (~audio@2603-8081-1800-6a6f-31ac-9639-bc0a-65dc.res6.spectrum.com)
[06:51:04] <[itchyjunk]> Does java have monads?
[06:51:22] <Izem> no
[06:51:58] <karstensrage> sort of
[06:52:10] <karstensrage> Optional<T> is considered a monad
[06:52:17] <karstensrage> if you squint
[06:53:24] <karstensrage> https://medium.com/swlh/write-a-monad-in-java-seriously-50a9047c9839
[06:53:25] <bayaz> Title: Write a monad, in Java, seriously? 
[06:55:17] <[itchyjunk]> the Just Maybe monad form haskell, isn't it somewhat similar to try catch?
[06:56:07] <[itchyjunk]> oh
[06:56:11] <[itchyjunk]> your blog talks about try catch
[06:56:12] <[itchyjunk]> interesting
[07:01:04] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[07:01:39] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[07:02:22] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Remote host closed the connection)
[07:02:48] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[07:03:06] *** Quits: xiongxin8802 (~quassel@2409:8955:384c:65ba:c02e:d8ee:3deb:649c) (Ping timeout: 260 seconds)
[07:05:00] <ditto_irl> hmm
[07:05:16] <ditto_irl> so kotlin doesn't smart cast if I do `if((s != null) and (v != null))`
[07:05:24] <ditto_irl> but it will do smart cast if I replace the `and` with `&&`
[07:06:43] <ditto_irl> I wonder if it has to do with the fact that `and` is an infix function and `&&` is a keyword
[07:07:18] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[07:07:46] *** Quits: hexingb (~hexingb@103.37.140.36) (Ping timeout: 260 seconds)
[07:08:31] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[07:17:28] *** Joins: jazzy (~jaziz@2600:380:473d:ed3e:711b:d41d:621e:ae84)
[07:20:15] *** Joins: vpw (~vpw@122.172.198.151)
[07:20:24] *** Joins: Lyn (~Lyn@user/law)
[07:20:47] *** Joins: soapsudsxx (~soapsudsx@209.221.40.154)
[07:21:35] *** Joins: jazzy2 (~jaziz@2600:380:473d:ed3e:711b:d41d:621e:ae84)
[07:21:51] *** Quits: km2m- (~km2m@1.116.81.184) (Quit: ZNC 1.8.2 - https://znc.in)
[07:22:38] *** Joins: km2m (~km2m@1.116.81.184)
[07:22:39] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2.1)
[07:24:06] *** Quits: jazzy (~jaziz@2600:380:473d:ed3e:711b:d41d:621e:ae84) (Ping timeout: 260 seconds)
[07:27:08] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) ()
[07:29:35] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) ()
[07:32:50] *** Joins: tddschn (~textual@45.77.71.205)
[07:35:18] *** Quits: Izem (~Izem@8.6.144.177) (Quit: Going offline, see ya! (www.adiirc.com))
[07:40:05] <[itchyjunk]> emacs is painful, tutorials is full of commands
[07:45:33] *** Joins: pulse_ (~pulse@user/pulse)
[07:48:32] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 252 seconds)
[07:52:19] *** Joins: khanred (~khanred@user/khanred)
[07:53:44] *** Joins: node1 (~node1@user/node1)
[07:56:23] *** Quits: akevinhuang (~thekevinh@user/thekevinhuang) (Ping timeout: 265 seconds)
[07:56:26] <node1> What's the use and type of  software architecture in web application?
[07:58:16] <khanred> node1, your question doesn't make sense
[07:59:05] <node1> I mean `most common  software architecture used in web application`
[07:59:20] <khanred> I guess maybe MVC?
[07:59:52] <node1> I mean understand what are the most common  software architecture used in web application` And it's advantages using that model
[08:00:27] <node1> What making this kind of  architecture successful?
[08:00:28] <khanred> This just sounds like homework and like you haven't done much research 
[08:01:07] <node1> khanred, If you don't likes to answer or discuss then kindly don't fold the subject with old rags way
[08:02:07] <pikapika> node1, hi
[08:02:08] <node1> It's old trick to make it `homework`
[08:02:24] <khanred> It literally sounds like homework lol
[08:02:46] <node1> For you it's homework for me it's interesting subject to work on
[08:02:50] <node1> or discuss
[08:02:55] <node1> pikapika, Hello
[08:03:16] *** Joins: hexingb (~hexingb@101.236.65.144)
[08:04:02] <node1> And this MVC looks being followed in mostly with python web application.
[08:04:13] <node1> Like Django and Flask.
[08:04:46] <khanred> django isn't really MVC
[08:05:50] <khanred> I guess it's close enough
[08:05:54] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Leaving)
[08:06:02] <node1> MVC == MVT where C and T looks almost equal.
[08:06:16] <khanred> sure
[08:06:44] <khanred> Modern asp.net is mvc, ruby on rails, most of the big PHP web frameworks
[08:07:36] <node1> khanred, Thank you for the information.
[08:09:01] *** Joins: farmstatejake (~farmstate@user/farmstatejake)
[08:10:27] *** pulse_ is now known as pulse
[08:10:46] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[08:13:35] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[08:16:44] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (Quit: leaving)
[08:17:38] *** Joins: farmstatejake (~farmstate@user/farmstatejake)
[08:18:44] *** Quits: tddschn (~textual@45.77.71.205) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:22:33] *** Joins: lalitmee__ (~lalitmee@180.94.33.12)
[08:23:05] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (Quit: leaving)
[08:24:13] *** Joins: farmstatejake (~farmstate@user/farmstatejake)
[08:26:50] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 265 seconds)
[08:30:07] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[08:32:58] *** Joins: tddschn (~textual@45.77.71.205)
[08:33:13] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[08:38:17] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[08:41:34] *** Joins: lalitmee_ (~lalitmee@180.94.32.180)
[08:41:36] *** Quits: anton (anton@tloks.com) (Remote host closed the connection)
[08:42:26] *** Quits: zaher_ (~zaher@37.48.186.171) (Ping timeout: 252 seconds)
[08:44:22] *** Quits: lalitmee__ (~lalitmee@180.94.33.12) (Ping timeout: 260 seconds)
[08:45:04] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 256 seconds)
[08:46:46] *** Quits: DrMax (~DrMax@node-1w7jra94757fzg09q6mkq37xg.ipv6.telus.net) (Ping timeout: 252 seconds)
[08:48:10] *** Joins: kuku (~kuku@user/kuku)
[08:48:53] *** Joins: Izem (~Izem@8.6.144.177)
[08:50:10] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[08:51:50] *** Quits: anovick (~anovick@2a0d:6fc0:1bd8:7800:98e9:2c6f:1a52:52c0) (Ping timeout: 260 seconds)
[08:53:18] *** Quits: Metalsutton (~Metalsutt@101.100.153.131) (Quit: Leaving)
[08:53:46] *** Quits: tddschn (~textual@45.77.71.205) (Quit: tddschn)
[08:54:37] *** Joins: tddschn (~textual@45.77.71.205)
[08:56:20] *** Joins: user51 (~user51@176.228.90.248)
[08:59:36] *** Joins: DrMax (~DrMax@node-1w7jra94757fyo3hmxhd9ckq8.ipv6.telus.net)
[09:03:30] *** Quits: pandakekok9 (~job@wikimedia-commons/pandakekok9) (Ping timeout: 250 seconds)
[09:03:34] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:07:25] *** Joins: jazzy3 (~jaziz@2600:380:473d:ed3e:711b:d41d:621e:ae84)
[09:10:30] *** Quits: jazzy2 (~jaziz@2600:380:473d:ed3e:711b:d41d:621e:ae84) (Ping timeout: 260 seconds)
[09:10:58] *** Joins: usr123 (~usr123@49.37.151.156)
[09:12:14] <usr123> Cloud native (AWS/Azure/GCP), Docker, Kubernetes, Leetcode, Microservices patterns, Dependency injection frameworks. It's too much to take.
[09:12:55] <usr123> Seems like I need to know all of that (atleast) to be a decent software engineer.
[09:13:56] <usr123> I ddin
[09:14:15] <usr123> I didn't even know I could have something like namespaces to bind to ports and I shouldn't use hardcoded ports.
[09:14:39] <pikapika> usr123, web dev is extremely complex these days
[09:14:47] <PlanckWalk> You don't need half of those in general
[09:14:58] <Izem> no, just learn programming
[09:15:08] <Izem> at least that is what I tell myself :P
[09:15:16] <PlanckWalk> Leetcode has nothing whatsoever to do with being a decent software engineer, for example
[09:15:27] <pikapika> PlanckWalk, yes. Leetcode is just fun puzzles.
[09:15:28] <Izem> cloud systems is too much to be expected to know
[09:15:32] <pikapika> Little to do with normal programming
[09:15:40] <usr123> PlanckWalk, agreed, but I need to get good at it to get a job.
[09:15:48] <Izem> but I guess programmers don't get trained these days
[09:15:51] <PlanckWalk> Some places maybe, not most
[09:16:07] <pikapika> Don't be scared by the supergeniuses usr123 
[09:16:14] <PlanckWalk> Or I dunno, maybe your local job market does focus on it for some bizarre reason
[09:16:31] *** Joins: pandakekok9 (~job@wikimedia-commons/pandakekok9)
[09:16:34] <Izem> heh
[09:16:41] <usr123> I'm in a call with Sr Software engineers, ( I thought I myself am one ), and these guys know everything.
[09:17:00] <Izem> you know what, I just realized programmers are good at making jobs for programmers
[09:17:06] <pikapika> Its probably that their idea of "knowing" a technology is learning 5% of it
[09:17:10] <pikapika> whereas yours is say 40%
[09:17:37] <usr123> I once took a whole day to setup a jenkins CI for my side project.
[09:18:13] <Izem> time to make some type of posix run time and overhype the perfomance gained by removing the container overhead
[09:18:46] <PlanckWalk> I bet they know everything about they job they're doing (which might be a job they want you to do)
[09:19:02] <PlanckWalk> But other places have different jobs, and their developers need to know different stuff
[09:19:42] <PlanckWalk> (and in 5 more years it will be different everywhere again)
[09:20:01] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[09:20:40] <usr123> PlanckWalk, yeah, makes sense.
[09:21:14] *** Quits: tddschn (~textual@45.77.71.205) (Remote host closed the connection)
[09:22:51] <Samian> Shouldn't you test your software as if your life depended on you trying to find a way to break it yourself?
[09:23:22] <usr123> Samian, in my local region we have people to do that. They're called software testers.
[09:23:38] <Izem> sounds rather abstract
[09:24:25] <Samian> Instead, I see people testing their software as if they had a predisposed bias that it's solid and so cut corners and make assumptions in testing.  Almost as if a lawyer from their company paid them to be an expert witness singing praises on their code
[09:24:25] <whatsupboy> usr123: what about unit tests?
[09:24:27] <usr123> We have people who'd test the application by using it day in and day out, not sure if this is a case everywhere. Although writing automated tests along with the bug fix/ feature is a must.
[09:24:52] *** Quits: Cashlin (~hp@user/cashlin) (Quit: Konversation terminated!)
[09:25:31] <usr123> whatsupboy: unit/integration/functional tests are all a must. But sometimes you just have to use the application to really test it. ( Example, when your application interacts with a third party component )
[09:25:34] <Samian> I have a semi-split personality disorder. So it's easy for software dev Samian to code and then evil hacker Samian determined to break it
[09:25:42] *** Parts: Izem (~Izem@8.6.144.177) (Closing Window)
[09:25:50] <Samian> lol @ myself
[09:26:12] <Samian> Like playing chess against myself
[09:26:33] *** Joins: tddschn (~textual@45.77.71.205)
[09:26:50] *** Quits: trace987 (~trace@95.90.106.112) (Ping timeout: 260 seconds)
[09:26:53] <Samian> usr123  that's the sensible approach, for the coders and testers to be different people.
[09:26:59] *** Quits: hexingb (~hexingb@101.236.65.144) (Ping timeout: 252 seconds)
[09:27:09] *** Joins: hexingb (~hexingb@2409:8900:2721:bbb5:f504:8fb8:4940:6075)
[09:27:20] *** Quits: pandakekok9 (~job@wikimedia-commons/pandakekok9) (Ping timeout: 250 seconds)
[09:29:34] *** Joins: pandakekok9 (~job@wikimedia-commons/pandakekok9)
[09:30:02] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:33:54] *** Quits: tddschn (~textual@45.77.71.205) (Remote host closed the connection)
[09:34:07] *** Joins: xavie1 (~xavie@176-139-252-198.abo.bbox.fr)
[09:34:07] *** Joins: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[09:34:54] *** Joins: tddschn (~textual@45.77.71.205)
[09:36:46] *** Quits: tddschn (~textual@45.77.71.205) (Remote host closed the connection)
[09:36:53] *** Quits: xavie (~xavie@176-139-252-198.abo.bbox.fr) (Ping timeout: 252 seconds)
[09:37:26] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[09:37:26] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 252 seconds)
[09:49:03] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[09:49:32] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:52:23] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 265 seconds)
[09:52:30] *** Quits: hexingb (~hexingb@2409:8900:2721:bbb5:f504:8fb8:4940:6075) (Ping timeout: 260 seconds)
[09:52:49] *** Joins: hexingb (~hexingb@101.236.65.144)
[09:55:21] *** Joins: molson_ (~michael@2001-48F8-704A-CA1-0-0-75F-1015-static.midco.net)
[09:56:14] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 260 seconds)
[09:56:48] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[09:58:22] *** Quits: molson (~michael@2001-48F8-704A-CA1-0-0-75F-100E-static.midco.net) (Ping timeout: 252 seconds)
[09:58:39] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:1daf:ff75:3f77:f7b1) (Read error: Connection reset by peer)
[10:06:00] *** Joins: anovick (~anovick@IGLD-83-130-127-193.inter.net.il)
[10:07:04] *** Joins: lalitmee__ (~lalitmee@2402:3a80:8cb:8f5b:aa5f:284e:d5af:1590)
[10:09:46] *** Quits: lalitmee_ (~lalitmee@180.94.32.180) (Ping timeout: 260 seconds)
[10:10:15] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[10:12:45] *** Quits: soapsudsxx (~soapsudsx@209.221.40.154) (Remote host closed the connection)
[10:15:37] *** Joins: xiongxin8802 (~quassel@2409:8955:384c:65ba:c02e:d8ee:3deb:649c)
[10:17:57] *** Joins: tddschn (~textual@45.77.71.205)
[10:18:16] *** Quits: bitmega (~bitmega@user/bitmega) (Quit: WeeChat 3.2.1)
[10:22:03] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[10:22:20] *** Quits: TheLinuxNerd (~tux@user/thelinuxnerd) (Quit: ZNC - https://znc.in)
[10:22:36] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[10:23:54] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[10:28:00] *** Joins: TheLinuxNerd (~tux@user/thelinuxnerd)
[10:28:39] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:30:49] *** Joins: newpy (~newpy@206.168.231.90)
[10:31:56] *** Quits: TheLinuxNerd (~tux@user/thelinuxnerd) (Client Quit)
[10:32:06] *** Quits: echoreply (~echoreply@45.32.163.16) (Quit: WeeChat 2.8)
[10:33:15] *** Joins: TheLinuxNerd (~tux@user/thelinuxnerd)
[10:33:25] <beaky> at last after several months of working on the problem i have figured out how to sort 1 million 32-bit unsigned integers in under 1.8 MiB of storage leaving about 200 KiB free for efficient in-place sorting a total of 2 MiB of storage 
[10:33:27] *** Joins: echoreply (~echoreply@45.32.163.16)
[10:34:01] <beaky> 200 KiB fits about 50,000 32-bit unsigned integers
[10:34:19] <beaky> and is also the size of l2 cache
[10:34:42] <beaky> so now the final question is what is the most efficient in-place sorting algorithm for 50,000 32-bit unsigned integers
[10:38:12] <beaky> and are there modern sorting algorithmst hat take advantage of simd
[10:41:22] <webNET4> this one sounds pretty interesting lots of buzzwords, highly fit for enterprising developers https://link.springer.com/chapter/10.1007/978-3-540-30140-0_69
[10:41:24] <bayaz> Title: Super Scalar Sample Sort 
[10:43:11] <beaky> nice i like superscalar
[10:43:52] *** Joins: dunkeln (~dunkeln@94.128.205.199)
[10:43:52] *** Quits: dunkeln (~dunkeln@94.128.205.199) (Changing host)
[10:43:52] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[10:43:54] <beaky> i like the idea they present where 'for small enough sets the cache effects dont dominate, but branching does'
[10:43:57] *** Quits: user51 (~user51@176.228.90.248) (Remote host closed the connection)
[10:44:13] <beaky> which is the same point made by alexandrescu's cppcon talk https://www.youtube.com/watch?v=FJJTYQYB1JQ
[10:44:15] <bayaz> Title: CppCon 2019: Andrei Alexandrescu “Speed Is Found In The Minds of People" 
[10:45:16] <PlanckWalk> Yes, there are SIMD sorts
[10:45:50] <beaky> i love simd it is the most significant advance in isa design
[10:45:59] <PlanckWalk> E.g. AASort
[10:46:23] <PlanckWalk> Aha, found a link:  https://researcher.watson.ibm.com/researcher/files/jp-INOUEHRS/PACT2007_SIMDsort_slides.pdf
[10:46:24] <bayaz> Type: application/pdf Size: 822.3 kB 
[10:46:33] <beaky> nice i like ibm research
[10:47:31] <PlanckWalk> You can do quite a lot without branching
[10:47:32] *** Quits: sivert (~sivert@2601:144:100:f6a0:81bc:53f4:3c7a:71d1) (Ping timeout: 245 seconds)
[10:48:02] <beaky> indeed the dream of simd is that since comparison and branching dominates sorting on small datasets that neatly fit in cache, with simd you get to lower the comparison and branching count by a signifncat factor like 10x
[10:48:12] <beaky> maybe 100x with wide enough simd
[10:48:39] <beaky> if only i had an avx512 cpu sadly i will have to stick with avx2
[10:49:00] <beaky> and implement aaasort in rust with sick unsafe nightly unstable simd intrinsics
[10:49:21] <Sqaure> During this WFH era, using Slack to for 90% of all communication, I notice a pretty unpleasant pattern. The ability react with emojis on peoples posts reminds me of how facebook works. "Popular" people receive unreasonable many likes/emoji for whatever the they say. My doctrine at work has not been one of being popular, in fact I have 0 tolerance for tired programmers producing shit and have probably become unpopular because of that.
[10:49:52] *** Quits: newpy (~newpy@206.168.231.90) (Read error: Connection reset by peer)
[10:50:21] <PlanckWalk> 👎
[10:50:41] *** Joins: newpy (~newpy@206.168.231.90)
[10:50:59] <beaky> nice so combsort is simdified bubblesort
[10:51:17] *** Quits: rue_mohr (~rue_mohr@d154-5-7-249.bchsia.telus.net) (Ping timeout: 245 seconds)
[10:51:40] <PlanckWalk> Not really
[10:52:12] <Sqaure> PlanckWalk, thats an emoji atleast. Thanks =D
[10:52:20] <PlanckWalk> ;-)
[10:52:55] <beaky> damn the factor improvement is only 3x 
[10:53:16] <beaky> i was expectnig at least 10x improvement for a naive simd implementation and a 100x factor boost
[10:55:03] <PlanckWalk> SIMD isn't quite *that* good
[10:55:58] <beaky> i always thought simd was like upgrading in factorio from yellow belts to red belts (or blue belts if you have avx512)
[10:56:09] <beaky> free performance
[10:56:14] <PlanckWalk> The largest SIMD registers only hold 16 ints
[10:56:30] <PlanckWalk> You also usually need to shuffle things to work on them efficiently
[10:56:49] <PlanckWalk> So you end up needing a few extra instructions, but you hope it isn't 16x more :)
[10:57:02] <beaky> o so i need a shuffle
[11:00:05] *** Quits: tddschn (~textual@45.77.71.205) (Quit: tddschn)
[11:00:14] *** Quits: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3) (Quit: The Lounge - https://thelounge.chat)
[11:00:50] <pyzozord> Samian: that's cool, I bet testing your own software is easier :D
[11:01:22] *** Joins: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3)
[11:03:09] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Quit: WeeChat 3.1)
[11:06:12] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[11:08:17] *** Joins: palasso (~palasso@user/palasso)
[11:11:36] *** Joins: jinsun (~quassel@user/jinsun)
[11:11:38] *** Joins: jinsun__ (~quassel@user/jinsun)
[11:13:12] *** Quits: jinsun__ (~quassel@user/jinsun) (Client Quit)
[11:16:16] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Remote host closed the connection)
[11:16:30] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[11:19:51] *** Joins: user51 (~user51@176.228.90.248)
[11:23:00] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[11:24:13] *** Joins: gggp (~textual@60.10.194.45)
[11:24:19] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[11:24:26] *** Quits: xiongxin8802 (~quassel@2409:8955:384c:65ba:c02e:d8ee:3deb:649c) (Ping timeout: 260 seconds)
[11:27:23] *** Quits: user51 (~user51@176.228.90.248) (Remote host closed the connection)
[11:28:53] *** Quits: gggp (~textual@60.10.194.45) (Client Quit)
[11:31:50] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[11:32:18] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:33:07] <pyzozord> nice, matrix trailer releases in 4 hours
[11:33:18] *** Quits: jazzy3 (~jaziz@2600:380:473d:ed3e:711b:d41d:621e:ae84) (Ping timeout: 260 seconds)
[11:33:43] <Samian> matrix trailer?
[11:34:06] <pyzozord> matrix 4
[11:34:07] <Samian> wtfffff!!!!!!!!
[11:34:11] <Samian> yessssss
[11:34:27] <Samian> I've watched the matrix about once a week since 1999. It's my most favorite movie of all time
[11:34:27] *** Joins: rue_mohr (~rue_mohr@d154-5-7-249.bchsia.telus.net)
[11:34:47] *** Joins: Retvrn (~Retvrn@2001:8003:1d49:6b00:2b68:d3ef:dca2:2eab)
[11:34:50] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:35:02] <pyzozord> I'm not sure if they'll manage to pull it off after so much time, but I liked the first three moviews (yes all three :P)
[11:35:34] *** Joins: lalitmee_ (~lalitmee@180.94.33.217)
[11:36:06] *** Quits: irado (~irado@177.12.221.61) (Read error: Connection reset by peer)
[11:36:19] <Samian> My only criticism of the Matrix is that too much emphasis was placed on "belief" and not enough on "evidence". But that's movies for ya
[11:36:24] *** Joins: irado (~irado@177.12.221.61)
[11:37:30] <smallvil_> lol
[11:38:54] *** Quits: lalitmee__ (~lalitmee@2402:3a80:8cb:8f5b:aa5f:284e:d5af:1590) (Ping timeout: 260 seconds)
[11:45:39] *** Quits: benji (~benji@user/benji) (Quit: ZNC - https://znc.in)
[11:46:10] *** Joins: benji (~benji@user/benji)
[11:47:02] *** Joins: CoderGuy (~CoderGuy@2601:644:101:4f20:5b8:e3a6:fe04:8cd6)
[11:47:33] *** Quits: benji (~benji@user/benji) (Client Quit)
[11:47:59] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[11:48:03] *** Joins: benji (~benji@user/benji)
[11:49:10] *** Quits: CoderGuy2 (~CoderGuy@2601:644:101:4f20:5b8:e3a6:fe04:8cd6) (Ping timeout: 240 seconds)
[11:49:11] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:50:42] *** Joins: aradesh (~aradesh@user/aradesh)
[11:50:55] *** Quits: benji (~benji@user/benji) (Client Quit)
[11:51:27] *** Joins: benji (~benji@user/benji)
[11:51:46] *** Quits: benji (~benji@user/benji) (Client Quit)
[11:52:16] *** Joins: benji (~benji@user/benji)
[11:53:09] *** Joins: absc (~absc@dynamic-adsl-94-34-168-109.clienti.tiscali.it)
[11:53:58] *** Joins: jazzy2 (~jaziz@2600:380:865d:911b:7479:f78f:95d9:1914)
[11:54:56] <pyzozord> yeah matrix has christian undertones all throught. But I don't really take them as some kind of message or anything like that. Just a reach source to take from to make a movie feel a bit deeper and entertaining
[11:57:59] *** Joins: jaysicks (~jaysicks@94-21-246-55.pool.digikabel.hu)
[11:58:57] <smallvil_> TextView is confusing ;-;
[12:00:22] *** Joins: gggp (~textual@111.63.44.6)
[12:00:31] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:174:54c4:aee:8a7c)
[12:04:06] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 260 seconds)
[12:05:55] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-58c384-213.dhcp.inet.fi) (Read error: Connection reset by peer)
[12:06:28] <Samian> pyzozord  I work for fb. Want to see what I'm working on?
[12:08:05] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[12:08:33] <Valware> Samian: is it a plan to convert fb messenger into an IRC based chat platform? :D
[12:09:05] <Samian> nope. I work on their AI ads system, the part that makes fb money
[12:09:13] <Valware> dangit
[12:09:21] <Valware> I mean that's cool too :D
[12:09:36] <Valware> so you're the reason I get adverts for dresses
[12:09:43] *** Joins: Rounin (~david@84.212.130.215)
[12:09:54] <smallvil_> in flutter, can a FittedBox be placed inside of a FittedBox ?
[12:10:23] <Samian> I single-handedly 10xed the speed of 1 of the 5 parts of fb's AI ads system. That's pretty significant for 1 single person
[12:10:40] <pyzozord> Samian: that's very impressive! No need to show if you are under nda, but you can tell us a bit more, I'd be curious to learn :)
[12:10:51] <Valware> I tilt my hát
[12:11:07] <Samian> I wish I could
[12:11:16] <Samian> well, there's an open source version
[12:11:31] <Samian> https://github.com/facebookresearch/dlrm
[12:11:34] <bayaz> Title: GitHub - facebookresearch/dlrm: An implementation of a deep learning recommendation model (DLRM) 
[12:11:58] *** Quits: cisco87 (~quassel@lnxg33k.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[12:12:08] <Valware> "recommendation" model XD
[12:12:09] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[12:12:18] <Valware> advert/recommend
[12:12:27] <Valware> love it
[12:12:35] <Samian> 10xing the speed of 1/5th of its ads system means I probably increased fb's profits by at least 100 million. So I better get 1 million next year
[12:13:26] *** Quits: gggp (~textual@111.63.44.6) (Ping timeout: 260 seconds)
[12:13:27] <Samian> increasing performance == cheaper electric bill == less expenses == more profit
[12:13:31] <Valware> yeah considering the amount of those dresses I've bought
[12:13:36] <Valware> (a lot)
[12:14:03] <Valware> I hope you get the money you deserve :)
[12:14:06] <pyzozord> that stuff goes waaay over my head
[12:14:17] <pyzozord> Although I like python!
[12:15:26] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:15:44] *** Joins: ^-^hi (~nikw@user/-hi/x-1729478)
[12:15:53] *** Joins: user51 (~user51@176.228.90.248)
[12:17:17] <pyzozord> I heard facebook really pays well honestly wouldn't be surprised if they paid some engineers a milion
[12:17:21] *** Joins: dunkeln (~dunkeln@94.128.205.199)
[12:17:21] *** Quits: dunkeln (~dunkeln@94.128.205.199) (Changing host)
[12:17:21] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[12:17:26] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[12:17:38] *** Joins: webNET4 (~0x100@32.211.211.39)
[12:17:56] <user51> is there any guide on choosing a monitor?
[12:18:14] <Samian> I don't know why people dislike Mark Zuckerberg for screwing over the Winklevoss Twins.   He did the right thing.   Imagine he accepted their terms to be paid chump change and the winklevoss twins become billionaires while paying zuckerberg 20k to make the site.. Now, *THAT* is wrong. *THAT* is BS.  Zuckerberg did the right thing.   
[12:18:50] <user51> sorry if it's not technically programming related, it just seems like a pretty important part of it
[12:18:56] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[12:18:58] <Samian> Person A becoming a billionaire for work Person A paid Person B under 50k for.. That's effed up if you ask me
[12:19:08] *** Joins: webNET4 (~0x100@32.211.211.39)
[12:19:27] <jinsun> user51: there is ##hardware
[12:21:03] <Samian> user51  if it's for coding and staring at text all day, I recommend a 4k monitor.  
[12:21:37] <user51> how much does the resolution matter?
[12:21:57] <webNET4> i've grown fond of FULL-HD
[12:22:03] <Samian> It's the most significant part.  It determines how much screen realestate you have
[12:22:22] *** Joins: NeoCron (~NeoCron@p200300c4cf1c95007f0aa1e4d57a6222.dip0.t-ipconnect.de)
[12:22:25] <user51> you can only fit so much before things become too small though.
[12:22:30] <Valware> I literally use a large TV as a monitor :D
[12:22:41] <pikapika> Valware, resolution problems?
[12:22:53] <Valware> no?
[12:23:00] <pikapika> intersting
[12:23:10] <pikapika> Valware, do you have an adapter or d oyou use an hdmi cable
[12:23:37] <Samian> user51  latest gen monitors have "true" black. I forgot the exact term. But basically the backlight doesn't bleed into black. So it's relaly black
[12:23:50] <Valware> VGA :>
[12:23:52] <Valware> lmao
[12:24:24] <Valware> I have nothing fancy
[12:24:31] <Samian> user51  other things to consider: usb hub and cable management
[12:24:52] <Samian> monitor with no usb ports on the side is a no no
[12:25:21] <Valware> I've never needed a USB port on a monitor
[12:26:18] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[12:26:30] <Samian> user51 if you have time to look, I'd get a used monitor if I were you.  The only justification for choosing new over used is if you could make more money in the amount of time to find the discount.
[12:26:39] <pyzozord> I got this one https://www.samsung.com/sg/monitors/flat/fhd-monitor-with-bezel-less-design-24-inch-ls24r350fhexxs/
[12:26:48] <pyzozord> it was around $200 and I'm pretty happy with it
[12:27:19] <Samian> user51  when I was a kid, I'd buy everything refurbished. I got the best steals. But now I buy new because the time-to-look versus money-saved  trade off isn't there f
[12:28:02] <Samian> pyzozord  I code using only my macbook pro 15" monitor
[12:28:28] <pyzozord> Yeah Ideally I'd just have a raspberry pi with 13 inch eink screen :D
[12:28:37] <Samian> lol
[12:29:01] * Samian ops up his macbook to find a little raspberry pi !
[12:29:29] <user51>  Samian: why have usb on the monitor?
[12:29:33] <pyzozord> I mean there would be probably also a home server for crunching
[12:29:37] <Amadiro> Valware, I started using one on my new monitor which has USB PD, and it's actually really nice. Now all I do when I put down my laptop is to connect a single wire, and it does everything.
[12:30:07] *** Quits: tkob (tkob@user/thekingofbandit) (Remote host closed the connection)
[12:30:29] <Valware> cool :)
[12:30:31] <Samian> user51: because my workstation would be behind my desk. Crawling around to plugin a usb flash drive isn't ideal.
[12:30:33] *** Joins: sjmulder (~sjmulder@2a02-a443-33e5-1-a4a0-646e-5a4b-e227.fixed6.kpn.net)
[12:31:14] *** Joins: vysn (~vysn@user/vysn)
[12:31:22] <Samian> user51: instead, I fed a usb cable from my workstation to my monitor. And then the monitor had usb ports. Now the usb were within reach while sitting at my desk
[12:31:36] <Valware> ah, whereas my PC is next to my legs lol and my TV too close to a wall for it to be practical to be constantly plugging in and unplugging stuff
[12:31:46] * Valware recommends get a cast device XD
[12:32:02] <Samian> user51: it's basically a monitor acting as a usb hub in addition to its primary purpose of being a monitor
[12:32:17] <Samian> user51  does that make sense?
[12:33:12] <Samian> Next year, I'm going to start buying free computers for random people on Libra, just to give back
[12:33:34] <Samian> Free macbook pros for everyone!
[12:34:05] <Valware> free computers \o/
[12:34:05] <Valware> they're macbooks /o\
[12:34:14] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[12:34:22] <arahael> Man, ReactiveX code everywhere makes for a bit of a mess.
[12:34:25] <Samian> I'll let the users choose
[12:34:27] <arahael> How's everyone?
[12:34:29] <Valware> give out raspberry pis lol
[12:34:49] <Samian> arahael  I'm great. I'm having the time of life working for fb. Couldn't be happier
[12:34:53] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[12:35:07] <Valware> hi arahael :D
[12:35:16] <arahael> Valware: If those are M1 laptops, those would be awesome.  Install a VM, put linux in that VM, then enjoy one of the currently fastest laptops you can get.
[12:35:21] <arahael> And hey. :)
[12:35:27] <Valware> hahaha
[12:35:30] <Samian> Valware  I don't think you understand. Look: https://www.levels.fyi/?compare=Google,Facebook,Microsoft&track=Software%20Engineer
[12:35:30] <bayaz> Title: Levels.fyi | Salaries & Tools to Level Up Your Career 
[12:35:34] <arahael> Samian: Great to hear!
[12:35:47] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:650e:47a8:7a24:991c) (Read error: Connection reset by peer)
[12:36:01] <Samian> There's no way I'd be wear I am if it wasn't for freenode and now Libra
[12:36:05] <Samian> *where
[12:36:32] <Valware> Samian: I don't understand what you're showing me or why you're showing it to me
[12:36:35] <Amadiro> Same, probably
[12:36:37] <Valware> :D
[12:36:38] <arahael> Samian: What's Libra?
[12:36:45] <Samian> arahael  this irc network
[12:36:47] <Amadiro> I started hanging out on freenode almost 15 years ago now I think
[12:36:57] <Valware> Libera :D
[12:37:01] <vysn> Libera
[12:37:05] <Valware> Libré
[12:37:10] *** Joins: gggp (~textual@114.245.107.137)
[12:37:44] <Valware> what if they came out with their own Office software
[12:37:46] <arahael> Ah, LibEra. :D
[12:37:47] <Valware> Libera Office
[12:37:49] <Samian> Valware  I'm showing you so you see why everyone should get more than a raspberry pi!
[12:37:51] <Valware> reckon it wouls stick?
[12:38:27] *** Quits: gggp (~textual@114.245.107.137) (Client Quit)
[12:38:46] <Samian> Valware  imagine having a rich multimillionaire uncle and he gives you a 50$ raspberry pi for your birthday when you wanted a computer with a decent GPU
[12:38:59] <Retvrn> This is my first time using IRC tbh
[12:39:06] *** Quits: piou (~piou@24.20.201.77.rev.sfr.net) (Changing host)
[12:39:06] *** Joins: piou (~piou@user/piou)
[12:39:20] <Amadiro> Retvrn, welcome
[12:39:26] <Valware> I would consider that he never became a multimillionaire by buying internet folk expensive computers
[12:39:41] <Samian> back to work for me! 
[12:39:49] <Samian> dangit I've wasted too much time as it is
[12:39:50] <Valware> have fun :)
[12:40:00] <Retvrn> Thank you Amadiro
[12:40:14] <Samian> Thank you! Have a good one too! Enjoy coding!
[12:40:42] *** Joins: gggp (~textual@114.245.107.137)
[12:41:39] <pyzozord> Retvrn: welcome! :)
[12:44:08] *** Joins: mrig (~mrig@user/mrig)
[12:44:43] *** Quits: Samian (~Sami@2620:10d:c091:480::1:941f) (Quit: Textual IRC Client: www.textualapp.com)
[12:45:10] *** Quits: gggp (~textual@114.245.107.137) (Client Quit)
[12:47:42] <Retvrn> I finally figured out how replying works lol
[12:47:59] <Retvrn> so what's everyone up to?
[12:48:12] <Amadiro> drinking a morning coffee
[12:49:06] <Retvrn> get that morning energy
[12:49:30] *** Quits: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:90de:fcf0:43fb:a5db) (Read error: Connection reset by peer)
[12:50:42] <nitrix> Generating terrain for my game.
[12:50:46] *** Joins: gggp (~textual@111.63.44.6)
[12:51:00] *** Joins: zim (~zim@193.32.127.213)
[12:51:51] <nitrix> It's the usual perlin noise thing, but I'm adding a little editor to be able to sculpt it after too.
[12:52:47] <Retvrn> nitrix, good hustle, I've been wanting to learn some 3d graphics and GUI stuff
[12:53:26] <nitrix> It's satisfying. A lot more than backend dev and APIs all the time.
[12:53:36] <nitrix> You see your creation come to life :)
[12:53:47] <nitrix> Very, very, slowly though.
[12:54:47] <Retvrn> I can imagine
[12:54:57] *** Joins: cisco87 (~quassel@lnxg33k.com)
[12:55:55] *** Quits: xff0x (~xff0x@2001:1a81:52b9:4900:2e17:8c46:ec3d:aff1) (Ping timeout: 260 seconds)
[12:56:20] *** Joins: xff0x (~xff0x@2001:1a81:52b9:4900:be0:d306:f2f7:baf5)
[12:56:41] *** Joins: hegstal (~hegstal@2a02:c7f:7608:d400:8959:ed5e:30f7:362a)
[12:57:35] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa)
[12:58:08] <pyzozord> cool, I like the idea of more simulation generation thing. Where you ca simlate techtonic fields, or temperature, things like that. Like this guy https://www.youtube.com/watch?v=DPZ4eB0kT1Y
[12:58:09] <bayaz> Title: Simple Biome Generation (3D World Generation #11) 
[12:58:30] *** Joins: plastico (~plastico@neomutt/plastico)
[12:58:54] <pyzozord> although maybe techtonic plates simulation is a more advanced that the other things because it requires this kind of particle simulation, I'm not sure how it's called
[12:59:13] <Sqaure> At my job we use java primarily. I love Haskell / pure FP so I basically try to program as-if Haskell in java. Dont shy higher order functions. No control statements. No null. No mutation etc. But, i realize this will be unreadable for tired imperative programmers that have no more interest in their job but their salary.   
[12:59:34] <TheArchitect> hi
[12:59:40] <Sqaure> How to deal with that?
[12:59:48] <TheArchitect> .
[12:59:52] *** Joins: mobidrop (~mobidrop@user/mobidrop)
[12:59:57] <TheArchitect> .
[13:00:05] <arahael> Sqaure: How do you deal with the lack of sum types? 
[13:00:15] <Retvrn> TheArchitect, hey
[13:00:28] <pikapika> Sqaure, java is a very good language
[13:00:57] <nitrix> I'd start with not categorizing programmers as if they belong to groups. Plenty knows more than one paradigm and will be quite happy or disgusted with the code.
[13:01:21] <Sqaure> arahael, well i dont got those. Sometimes i do abstract sealed classes. But basically enums and i got io.vavr that has Either and Tuple(X).
[13:01:38] <arahael> Sqaure: As for 'tired imperative programmers', well, that's ultimately a matter for the coding style and architecture your team has agreed on.  If they insist on doing it the old way, you probably should continue with the old way unless you can bring them on board (or change teams or job)
[13:01:42] <Sqaure> i mean, its not perfect but i try
[13:01:57] <pyzozord> Sqaure: in a team kind of environment you can't really do too much on your own. You must adheare to the common guidelines
[13:01:59] <arahael> Sqaure: You may be interested in exploring Kotlin options, though.
[13:02:12] <pikapika> Imperative is natural
[13:02:16] <arahael> Sqaure: Kotlin runs on Java, but has a distinctly FP bias.
[13:02:24] <user51> pikapika: define natural
[13:02:26] <arahael> (Still no sum types, though, sadly)
[13:02:27] <pyzozord> Sqaure: you need to convince entire team to switch or at least seed their minds that it's ok to sprinke some fp
[13:02:33] <mobidrop> FP is the language of aliens!
[13:02:34] <nitrix> For what it's worth, even the functional programmers may or may not agree with how readable you've made the code. Some concepts are just going to translate poorly to Java, which requires that all the abstractions lives in objects.
[13:02:43] <arahael> Indeed.
[13:02:45] <pikapika> user51, human brains understand series of steps
[13:03:03] <arahael> pikapika: See, that's exactly why I prefer FP code. ;)
[13:03:10] <Retvrn> I've heard Scala accommodates FP
[13:04:03] <user51> pikapika: step size not defined :P
[13:04:05] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:04:18] <Sqaure> To my defense, im way more effective than my collegues. I just think thats a matter of much better FP is to handle complex logic. 
[13:05:04] <Sqaure> ...ie, not my brain power so to speak.
[13:05:55] <arahael> Sqaure: Regarless, it's ultimately team work that will make or break the project.  You have to work with the team.
[13:06:12] <nitrix> Here's food for thought: consider your entire team is using a functional style even in places where it doesn't make much sense, because they're told to do it, and you have a lot of non-idiomatic code smells emerging, then you're the one trying to push for a much imperative style. What would your arguments be?
[13:06:41] <nitrix> Personally, I find paradigms are like seasons... in winter you miss summer, in summer you miss winter.
[13:06:58] <user51> i've been enjoying simple lisp snippets lately
[13:06:59] <pikapika> nitrix, these days it is fashionable to hate oop
[13:07:01] *** Joins: diamondbond (~diamondbo@175.157.238.149)
[13:07:09] <user51> goddamn macros though
[13:07:14] <pikapika> Its meaningless
[13:07:50] <nitrix> That always confuses me because my definition of OOP differs from the common one and it often takes some time to adjust in conversations.
[13:08:01] <nitrix> I think Smalltalk, people think Java.
[13:08:02] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:08:37] <user51> i wish those language/paradigm discussiosn included what's actually inside the bag
[13:08:40] <Sqaure> arahael, yeah. I guess I should bring up the question on a meeting. I guess I can turn people against me
[13:08:59] <pikapika> nitrix, I think small C snippets are the most interesting
[13:09:07] <pyzozord> ttps://www.youtube.com/watch?v=-VADIcicpcg
[13:09:09] <pikapika> There is a beauty to be able to do a complex task in like 100 lines of C
[13:09:16] <pyzozord> https://www.youtube.com/watch?v=-VADIcicpcg
[13:09:17] <bayaz> Title: Object Oriented Programming vs Functional Programming • Dave Farley • GOTO 2021 
[13:09:29] <nitrix> Heck, even Smalltalk, which by the way, was Alan Kay's attempt at simplifying and understanding the Actor model, is still not quite OOP in the way that Actors ought to be.
[13:09:45] <user51> pikapika: i love c, gimme some nice snippets
[13:09:48] <arahael> Sqaure: The other thing to be aware of, is that over time, if you're proposing FP, and the team agrees (for some reason), then your project is going to have a mix of styles.  Over the years, you'll have a fairly odd structure in the project.  It's not really ideal to change in mid-project unless you have a very good reason for it.
[13:10:11] <pikapika> user51, search for fabrice bellard
[13:10:12] <Sqaure> nitrix, good point. Well I wouldnt push it if mutation is required and too much IO involved. But yeah, per case judgement should ofcourse be there.
[13:10:33] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[13:10:37] <arahael> Sqaure: The best place to consider using a different style, are small utility programs, as a test case and to introduce them to the team.
[13:11:51] <Sqaure> arahael, we're fighting complexity and lately the most central datastructure in our domain had to be moved from a List to a Tree. So its basically just a tool fighting complexity. 
[13:12:31] <arahael> Sqaure: That sounds like an orthogonal problem, honestly.
[13:12:49] <user51> uh, wait. can't a list have tree members?
[13:13:01] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[13:14:06] *** Quits: gggp (~textual@111.63.44.6) (Ping timeout: 260 seconds)
[13:15:10] <Sqaure> arahael, oh why? A bunch of the complexity was due to mutation. So yeah, that part was solved by immutability. Immutability lends itself to heavier use of functor / higher order functions. 
[13:16:50] <pikapika> Doubt it. Then it must have been badly written from the start, rather than anything to do with mutation.
[13:17:52] <mobidrop> immutability as a constraint forces you to write better code though
[13:17:57] <mobidrop> why would you discount it out of hand?
[13:18:15] *** Joins: gggp (~textual@60.10.23.169)
[13:18:17] <pyzozord> omg it really is ridiculous. I almost don't do any work. Literally. I just checked commits this month from other teammates. They match!
[13:18:25] <pyzozord> I even do more than some other teammates!
[13:18:53] <pyzozord> I guess I'm on the right track then
[13:18:56] * pyzozord shrugs
[13:19:20] <mobidrop> just make sure you don't stand out in a negative way because it may breed discontent among other team members
[13:19:37] <mobidrop> I've seen teams where there was a senior dev who didn't do much and he got in trouble
[13:19:46] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[13:20:09] <mobidrop> "look at this guy earning more money while doing less work"
[13:20:25] <pyzozord> I got in trouble for doing too much and expeciting others to give me quality input :P
[13:20:40] <pyzozord> I mean very literally
[13:21:00] <mobidrop> that's not a negative way then :)
[13:21:24] <pyzozord> It's shocking. The amount of slacking I do. I work ever second day and about half a day
[13:21:29] <pyzozord> I work 25% of the time
[13:21:44] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa)
[13:21:56] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[13:22:02] <arahael> Sqaure: Perhaps - either way, good luck with it, just make sure you have the team engaged and willing.  Otherwise you'll make enemies.
[13:22:03] *** Joins: Pickchea (~private@user/pickchea)
[13:24:27] <pyzozord> We live in times of fakeness-maximalists
[13:24:52] <pyzozord> I think I cracked it down. I got the strong model now.
[13:25:15] <pyzozord> You should put all your effort into looking like x. That's it
[13:25:31] <pyzozord> </rant>
[13:25:34] *** Joins: jokoon (~eio@2a01:e0a:542:e160:a0f3:95ed:e5f8:63f0)
[13:26:06] <pyzozord> all effort into looking like x == no effort in x
[13:26:13] <mobidrop> pyzozord, it's what happens when people "work" from home :D
[13:26:13] <mobidrop> then you've got a bunch of people getting paid to not work at all
[13:26:13] <mobidrop> sometimes more than what they were used to getting paid when actually working (in the US at least)
[13:26:13] *** Quits: mobidrop (~mobidrop@user/mobidrop) (Remote host closed the connection)
[13:27:01] <pyzozord> I feel like I had very similar problem before pandemic too
[13:27:18] *** Joins: lalitmee (~lalitmee@2402:3a80:8df:5a7f:9760:b838:cefe:2a0a)
[13:28:06] *** Joins: mobidrop (~mobidrop@user/mobidrop)
[13:28:10] <user51> pyzozord: imo work is not linear
[13:28:27] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:28:30] <user51> past a certain amount of work it's dimnishing returns
[13:28:43] *** Quits: lalitmee (~lalitmee@2402:3a80:8df:5a7f:9760:b838:cefe:2a0a) (Remote host closed the connection)
[13:28:58] *** Joins: lalitmee (~lalitmee@2402:3a80:8df:5a7f:815a:aaec:bc3f:6d7c)
[13:29:25] *** Quits: lalitmee_ (~lalitmee@180.94.33.217) (Ping timeout: 265 seconds)
[13:29:37] <pyzozord> I mean the pareto distribution is fractal https://en.wikipedia.org/wiki/Pareto_distribution
[13:29:38] <bayaz> Title: Pareto distribution - Wikipedia 
[13:30:07] <pyzozord> but eventually you end up with just one line that does all the work. And within that line just one character does all the work
[13:30:24] <user51> *p = a;
[13:30:30] <pyzozord> yeah, exactly
[13:30:43] <pyzozord> this cannot be broken down too much or it stops making sense
[13:30:51] <pyzozord> I think the threshold is around 75% not 25%
[13:30:58] <mobidrop> and that character does 80% of the work in 20% of his time :)
[13:31:19] <user51> you can build up on it. assume p is a pointer to a poitner and a is an address and.. oh shit :D
[13:32:47] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 265 seconds)
[13:33:16] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 265 seconds)
[13:33:53] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:34:09] *** Quits: jokoon (~eio@2a01:e0a:542:e160:a0f3:95ed:e5f8:63f0) (Read error: Connection reset by peer)
[13:35:05] *** Quits: WarauSalesman (~sjw@69.206.48.64) (Remote host closed the connection)
[13:36:17] *** Joins: CP-400 (~sjw@69.206.48.64)
[13:36:59] *** Quits: Amadiro (~Amadiro@84.209.11.12) (Remote host closed the connection)
[13:37:36] *** Quits: diamondbond (~diamondbo@175.157.238.149) (Quit: Leaving)
[13:38:16] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Ping timeout: 252 seconds)
[13:39:00] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[13:39:12] *** Joins: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk)
[13:39:12] *** Quits: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk) (Changing host)
[13:39:13] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[13:39:30] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[13:44:12] *** Quits: gggp (~textual@60.10.23.169) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:44:17] <pyzozord> Ahh even getting along with manager better
[13:44:44] <pyzozord> really, not-working IS the answer for my work troubles :D
[13:45:15] <pyzozord> *working 25% of the time
[13:46:01] <webNET4> what do you do instead?
[13:46:20] *** Joins: gggp (~textual@60.10.23.169)
[13:46:22] <pyzozord> mostly? hang out on irc lol
[13:46:30] <pyzozord> I should be doing more productive stuff though
[13:46:48] <pyzozord> I need to finish the small annoyences in my terminal and get serious about competetive programming again
[13:46:58] <pyzozord> although damn that was tough experience
[13:47:03] <merijn> hmm, if I have some setup that must be run before functions of a library are called, but there's no central entry point for the library, any suggestions for how to get that done?
[13:47:10] <webNET4> people might think you're working though
[13:47:14] *** Joins: diamondbond (~diamondbo@175.157.238.149)
[13:47:41] <pyzozord> webNET4: they do, that's the point. You are supposed to _prented_ you work, but not actually work too much
[13:47:41] *** Quits: diamondbond (~diamondbo@175.157.238.149) (Read error: Connection reset by peer)
[13:47:53] <webNET4> oooooooooooooooooh
[13:47:59] <pyzozord> if you work too much you make other people look bad
[13:48:09] *** Joins: diamondbond (~diamondbo@175.157.238.149)
[13:48:13] *** Quits: diamondbond (~diamondbo@175.157.238.149) (Read error: Connection reset by peer)
[13:48:13] *** Quits: mobidrop (~mobidrop@user/mobidrop) (Remote host closed the connection)
[13:48:14] <GeDaMo> merijn: which platform?
[13:48:36] *** Quits: pandakekok9 (~job@wikimedia-commons/pandakekok9) (Remote host closed the connection)
[13:48:50] *** Joins: mobidrop (~mobidrop@user/mobidrop)
[13:49:28] <mobidrop> pyzozord, for a while I've been doing a hobby programming project on the side during down time, but now I usually just chill lol
[13:49:54] <merijn> GeDaMo: linux/macos
[13:50:07] <merijn> C/C++-y stuff
[13:50:26] <GeDaMo> I htink shared objects can have an init routine
[13:50:55] <pyzozord> mobidrop: I really took me years to learn this lesson, and those were very strange years. I worked very hard and people really kind of hated me
[13:51:36] <pyzozord> well I exaggerate, not hated and not everyone
[13:53:02] <mercenary> merijn: only portable way I can think of is a global isInitialized flag, and giving every library funtion a 'if (!isInitialized) { initializa() }' prologue
[13:53:14] <pyzozord> merijn: I don't think I can give you any advice, but if everything else fails, you can call... Yeah what mercenary just said
[13:53:20] <merijn> mercenary: Yeah, that's what I was thinking too
[13:53:41] <GeDaMo> __attribute__((constructor)) https://gcc.gnu.org/onlinedocs/gcc/Common-Function-Attributes.html
[13:53:43] <bayaz> Title: Common Function Attributes (Using the GNU Compiler Collection (GCC)) 
[13:54:02] <mobidrop> pyzozord, I've also worked at places where my full output was truly appreciated even though it made other devs look "bad" in comparison
[13:54:15] <mercenary> Add locking to taste if the library can be called from multiple threads
[13:54:29] <mobidrop> there was no resentment because we all wanted to get the project going
[13:54:39] <mobidrop> and different people have different outputs, nothing wrong with tat
[13:54:57] <GeDaMo> "The constructor attribute causes the function to be called automatically before execution enters main ()."
[13:55:00] <pyzozord> mobidrop: I'm hoping I'll be able to transition to freelance at least part time and hoping that full effort is what really counts there. Hoping this would be a naturally a better fit for me
[13:55:29] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[13:55:34] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi)
[13:56:05] <mobidrop> pyzozord, yeah because the party you'll be selling your hours to would want you to work at your full capacity during those (expensive) hours :)
[13:56:22] <merijn> GeDaMo: Only problem is that that's gcc and I gotta be portable to other compilers too :\
[13:56:30] <mobidrop> pyzozord, I've also seen mixed teams with salaried workers and freelancers, the freelancers were still despised in a way by the salaried workers though :)
[13:56:32] <pyzozord> hmm __attribute__ doesn't seem to be in c11 standard, is this a custom gnu thing?
[13:57:24] <pyzozord> mobidrop: I feel like I am already despised so might as well get paid for it :D
[13:58:07] <mobidrop> might as well make double yeah
[13:58:26] <pyzozord> merijn: looks like gnu and ibm use __attribute__, microsoft uses __declspec
[13:58:53] <GeDaMo> Can you not just call it in main?
[13:59:06] <merijn> GeDaMo: I don't control main, because library :p
[13:59:29] *** Quits: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net) (Remote host closed the connection)
[13:59:49] *** Joins: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net)
[13:59:52] <pyzozord> it makes sense that you'll need to do some preprocessor gymnastics since the library entrypoint isn't part of the standard c (I asumme neither c++)
[14:00:00] <GeDaMo> __attribute will probably work in clang too though, right?
[14:00:58] *** Quits: gggp (~textual@60.10.23.169) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:01:26] *** Joins: mnd999_ (~mark@2001:8b0:da3:76a2:4630:5b97:83a2:3e21)
[14:02:21] <pyzozord> Or also, maybe just make it explicit? I think most libraries just say you must call init() function first
[14:03:07] <pyzozord> whoever uses the library will must call the init
[14:04:13] <GeDaMo> There's something in ELF called .init
[14:04:37] *** Quits: mnd999_ (~mark@2001:8b0:da3:76a2:4630:5b97:83a2:3e21) (Client Quit)
[14:04:52] *** Joins: zim_ (~zim@dynamic-089-012-016-013.89.12.pool.telefonica.de)
[14:06:55] <GeDaMo> https://stackoverflow.com/questions/35827230/using-init-array-section-of-elf-file
[14:06:55] <bayaz> Title: Using ".init_array" section of ELF file 
[14:07:46] *** Quits: zim (~zim@193.32.127.213) (Ping timeout: 260 seconds)
[14:08:44] *** Joins: mei (~mei@user/mei)
[14:09:19] <GeDaMo> https://stackoverflow.com/questions/2053029/how-exactly-does-attribute-constructor-work
[14:09:20] <bayaz> Title: How exactly does __attribute__((constructor)) work? 
[14:13:00] <pyzozord> is elf format going to be replaced in the next 10-20-40 years or is more likely to just stay and maybe be fixed/extended?
[14:14:07] <pyzozord> I assume things like containers/docker/vms don't really make elf less important because somewhere at the bottom it something still needs to run a real executable
[14:14:42] *** Joins: dev0 (~dev0@user/deepspace-link)
[14:16:25] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[14:16:26] <deniska> pyzozord: wasm is a thing now
[14:16:57] <deniska> but both elf and pe are… entrenched enough that I don't really see them replaced
[14:17:18] <pyzozord> pe?
[14:17:29] <pyzozord> ah https://en.wikipedia.org/wiki/Portable_Executable
[14:17:29] <bayaz> Title: Portable Executable - Wikipedia 
[14:17:30] <deniska> and they both are fairly extensible, so if we really need new features, we can always bolt them on
[14:25:11] *** Quits: usr123 (~usr123@49.37.151.156) (Quit: Client closed)
[14:25:34] <deniska> fun fact, most PEs start as a valid DOS executable telling you that the program can't run in DOS mode :D
[14:27:24] <pyzozord> heh, "cross-platform compatibility"
[14:29:15] *** Quits: hv99 (~hv99@wireguard/tunneler/hv99) (Quit: Ping timeout (120 seconds))
[14:29:38] *** Joins: hv99 (~hv99@wireguard/tunneler/hv99)
[14:29:52] <pyzozord> Actually between provable programs and test driven development. I subscribe more to test diven development. It seems more tedious but easier
[14:32:05] <GeDaMo> "Beware of bugs in the above code; I have only proved it correct, not tried it" :P
[14:33:01] <deniska> all bugs can be traced back to axioms perfectly :)
[14:35:07] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[14:36:42] <pyzozord> I should actually try some tdd, I never really did actually try it myself
[14:36:56] <pyzozord> deniska: is this a quote from someone? I'm not familiar with it
[14:38:02] *** Quits: ^-^hi (~nikw@user/-hi/x-1729478) (Ping timeout: 265 seconds)
[14:40:02] <deniska> pyzozord: no, unless you want to quote me for some reason :P
[14:41:33] *** Quits: dev0 (~dev0@user/deepspace-link) ()
[14:42:26] <pyzozord> sounds very quotable, especially next to the Knuth's quote :)
[14:45:27] <pyzozord> oh wow this is impressive https://www.youtube.com/watch?v=Su8btmd5jr0
[14:45:29] <bayaz> Title: Voice AI For Game Developers: Optimizing the Narrative Process 
[14:45:30] <user51> i hope i can one day too prove code incorrect
[14:46:38] *** Quits: Inhahe (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net) ()
[14:47:10] <user51> also, seems like my screen is on its last legs
[14:47:26] *** Quits: zim_ (~zim@dynamic-089-012-016-013.89.12.pool.telefonica.de) (Ping timeout: 260 seconds)
[14:47:55] <user51> got a column of red pixels today, and whatever i tried different cables and one of those seizure inducing colorspam and neither worked.. :(
[14:48:55] <DPA> I'm trying to run this, but it takes forever... https://bpa.st/2DNA I'm currently at i=38, I don't think it'll ever complete... I wish I had a super computer...
[14:48:56] <bayaz> Title: View paste 2DNA 
[14:49:38] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[14:50:14] <GeDaMo> I suspect line 27 should be < not <=
[14:50:26] *** Joins: Inhahe (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net)
[14:50:52] <GeDaMo> What are you calculating here?
[14:51:04] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:53:24] <GeDaMo> Instead of ((uint64_t)1) you can do UINT64_C(1)
[14:53:39] <DPA> No, I want it to check j=1<<63 up to the overflow to 0 too.
[14:53:39] <DPA> I'm calculating how many bits there are up to the leftmost set bit. btw. the log base 2 of an 64-bit integer. I need it so for I a number of possible values, I can calculate how may bits I need to store any number.
[14:54:46] *** Joins: LucaTM (~LucaTM@user/lucatm)
[14:56:25] <DPA> Like, if I have numbers between 0 and 6, I need 3 bits to store it.
[14:56:26] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[14:56:48] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:57:26] <GeDaMo> There are only 64 possible values
[14:57:35] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[14:58:09] <[itchyjunk]> damn it
[14:58:16] <DPA> Yes, but there are 2^64 possible inputs, and I want to make sure the function works for all of them.
[14:58:32] <[itchyjunk]> say i say a has the type A->B, a :: A->B
[14:58:38] *** Quits: hexingb (~hexingb@101.236.65.144) (Ping timeout: 252 seconds)
[14:58:39] <[itchyjunk]> what is a?
[14:58:40] <[itchyjunk]> an object?
[14:58:54] <[itchyjunk]> should i be thinking of it as a function?
[14:58:57] *** Joins: hexingb (~hexingb@2409:8900:2721:7f80:f524:6258:983b:90e6)
[14:59:15] <[itchyjunk]> a is a function that takes something of type A and maps it to type B ?
[14:59:21] <mobidrop> function that accepts argument of type A and returns a value of type B?
[14:59:35] *** Joins: Mangy_Dog (~Mange@user/mangy-dog/x-7397214)
[15:00:14] <GeDaMo> DPA: the inputs are in ranges e.g. if n >= 8 and n < 16 then 4 bits
[15:00:17] <[itchyjunk]> okay, but when it chained, it becomes  more confusing
[15:00:31] <[itchyjunk]> a :: A->B->C->B
[15:00:45] <[itchyjunk]> is it a function that takes thing of type A->B and returns the type C->B
[15:01:01] <GeDaMo> There's always only one return value
[15:01:04] <[itchyjunk]> or is it a functon that takes the type A->B->C and returns type B etc
[15:01:25] <GeDaMo> If you need to return more than one value then the return type is a tuple or list
[15:01:41] *** TheArchitect is now known as DuckSeason
[15:01:43] *** DuckSeason is now known as TheArchitect
[15:01:46] <GeDaMo> (I'm guessing we're talking about Haskell or something similar)
[15:01:47] *** TheArchitect is now known as DuckSeason
[15:02:13] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa)
[15:03:10] *** Joins: gitgooood (~gitgood@host-78-145-137-41.as13285.net)
[15:04:26] <DPA> GeDaMo: Yes, I could make a naive function just checking all 64 possibilities, but I think this one may be faster. Which is why I want to check if it really actually works.
[15:05:32] <[itchyjunk]> was that only one return value comment for me?
[15:05:35] <GeDaMo> https://graphics.stanford.edu/~seander/bithacks.html#IntegerLogDeBruijn
[15:05:36] <bayaz> Title: Bit Twiddling Hacks 
[15:05:38] <GeDaMo> [itchyjunk]: yes
[15:05:41] <[itchyjunk]> hmmmmmmm
[15:06:02] <[itchyjunk]> but some stuff return things of type A->B right?
[15:06:05] <GeDaMo> [itchyjunk]: assuming this is Haskell
[15:06:24] <GeDaMo> Then the return type would be (A->B) I think
[15:06:29] <[itchyjunk]> well it's this notation i wanna understand but yeah Haskell is the only one ive tried to understand
[15:06:37] <[itchyjunk]> oh the perenthesis would exist?
[15:06:41] <GeDaMo> It would be a function
[15:07:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[15:07:30] <GeDaMo> Hmmm ... maybe not
[15:07:35] <[itchyjunk]> a :: A->B->(A->B) says a has the type A->B->(A->B) but it's describing a function with two inputs of type A and B respectively and an output of a function of type (A->B) ?
[15:07:51] <[itchyjunk]> yeah the perenthesis doens't always exist right?
[15:07:56] <[itchyjunk]> lol
[15:07:58] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:09:33] <GeDaMo> https://stackoverflow.com/questions/34720928/understanding-haskell-function-signature
[15:09:34] <bayaz> Title: Understanding Haskell function signature 
[15:09:54] <GeDaMo> "So Integer -> Integer -> Integer is the same as Integer -> (Integer -> Integer)"
[15:09:56] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 265 seconds)
[15:10:49] *** Parts: DuckSeason (~GodMode@user/h4x0r) ()
[15:10:49] *** Joins: DuckSeason (~GodMode@user/h4x0r)
[15:10:57] <GeDaMo> "When returning multiple values you have to return an algebraic data type." https://stackoverflow.com/questions/25043077/how-could-i-return-multiple-values-from-a-function-in-haskell
[15:10:58] <bayaz> Title: how could i return multiple values from a function in haskell? 
[15:11:31] <arahael> [itchyjunk]: In Haskell, a function has one input, and one output.  The trick is to realise that a function can return ANOTHER function that takes another input, and then returns an output.
[15:11:42] *** Parts: DuckSeason (~GodMode@user/h4x0r) ()
[15:11:42] *** Joins: DuckSeason (~GodMode@user/h4x0r)
[15:11:51] *** Joins: zwr (~zwr@2804:d45:b966:fb00:3636:ea43:565a:b815)
[15:12:53] <pyzozord> I suspected that a->(b->c) means something like that
[15:12:58] <[itchyjunk]> arahael, but when you look thinking up its in the format a :: Monad m => am -> a -> b -> c -> bm
[15:13:01] <arahael> [itchyjunk]: In other languages, this means that a multi-argument "function" is infact called something more like this: foo(a)(b)(c) for a three-argument function.
[15:13:03] *** Joins: mobidrop_ (~mobidrop@217-62-121-57.cable.dynamic.v4.ziggo.nl)
[15:13:08] <[itchyjunk]> and i get lost trying to read that
[15:13:21] <arahael> [itchyjunk]: Yeah, the parens aren't required.
[15:13:29] <[itchyjunk]> hmmm
[15:13:29] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[15:13:34] <[itchyjunk]> wait you said function has one input?
[15:13:39] <arahael> One, yes.
[15:13:42] <[itchyjunk]> but what about (add 2 3)
[15:13:56] <[itchyjunk]> oh wait i know
[15:14:02] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:14:06] <arahael> [itchyjunk]: add has an argumetn that takes one input. 2, in that case. It returns a function, that also has one input - 3, in this case, and finally returns a result.
[15:14:19] <DuckSeason> sup
[15:14:45] <[itchyjunk]> hmmmmmm
[15:14:56] <[itchyjunk]> someday this will all makes sense!
[15:14:58] <arahael> [itchyjunk]: Haskell has automatic currying and uncurrying, effectively.
[15:15:08] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[15:15:23] *** Parts: DuckSeason (~GodMode@user/h4x0r) ()
[15:15:23] *** Joins: DuckSeason (~GodMode@user/h4x0r)
[15:15:41] *** Quits: mobidrop (~mobidrop@user/mobidrop) (Ping timeout: 252 seconds)
[15:15:46] *** Joins: sedeki (~textual@user/sedeki)
[15:15:54] <GeDaMo> Basically, the last one is the return value :P
[15:15:55] <pyzozord> currying, it's add(a) returns a new function "adda", then we can adda(b) that will add a to b
[15:16:29] <DuckSeason> [itchyjunk] ✓
[15:16:44] <pyzozord> arahael: doesn't that mean that all functions in haskell must return functions then?
[15:17:00] <arahael> pyzozord: Yes, or the value. (Then again, functions /are/ values)
[15:17:18] <[itchyjunk]> does functions are value means the same thing as values are function?
[15:17:41] <pyzozord> ^ same question
[15:17:49] <arahael> I'm not actually sure. GeDaMo, do you know?
[15:18:04] <arahael> I mean, you're asking if a '2' is a function?
[15:18:08] <GeDaMo> Yes! 3 is a function which returns the value 3 :P
[15:18:16] <arahael> There you go. :)
[15:18:17] *** Quits: sedeki (~textual@user/sedeki) (Client Quit)
[15:18:23] *** Quits: anderson (~ande@134.209.221.71) (Quit: bye)
[15:18:28] <bjs> [itchyjunk]: people are animals, but are animals people?
[15:18:28] <[itchyjunk]> so values are function and functions are values?
[15:18:40] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[15:18:44] <[itchyjunk]> bjs, not in a regorous sense
[15:18:51] <[itchyjunk]> not all animals are people etc
[15:19:16] <arahael> [itchyjunk]: Oh, you mean like, whether 'add' is a value as well as a function? If so, then yes. (THis is called "first class functions" in languages that support this, including python)
[15:19:32] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[15:19:38] <GeDaMo> zipWith (+) list1 list2
[15:19:47] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:19:50] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[15:19:57] <bjs> [itchyjunk]: maybe not all values are functions
[15:20:10] <GeDaMo> Enclosing an infix function like + in () allows you to pass it as a parameter
[15:20:39] <bjs> [itchyjunk]: is a number (an integer etc) a function?
[15:21:05] <[itchyjunk]> bjs, according to GeDaMo it is
[15:21:08] <pyzozord> I mean if we have A->B->C what does it actually mean? A(B(C(x))) or f(A)(B)(C)?
[15:21:25] <GeDaMo> I'm sure at some conceptual level it is (I'm convinced I read that somewhere) :P
[15:21:36] <bjs> pyzozord: you mean as a function type?
[15:21:41] <PlanckWalk> Constants are 0-argument functions
[15:21:48] <bjs> [itchyjunk]: well it's up to you whether you think of things as functions or not
[15:21:58] <arahael> [itchyjunk]: I'm pretty sure GeDaMo is right that all values are functions.
[15:22:03] <[itchyjunk]> !
[15:22:09] <[itchyjunk]> PlanckWalk claims so too!
[15:22:27] *** Joins: anderson (~ande@134.209.221.71)
[15:22:35] <PlanckWalk> At least from a cerain point of view, yes.
[15:22:41] <pyzozord> what happens when I do 3(foo), I asume it returns 3 still
[15:22:42] <[itchyjunk]> PlanckWalk, is thinking of fucntion compostion from math the wrong way to understand this A->B->C->D notations?
[15:22:54] *** Joins: zim_ (~zim@dynamic-089-012-016-013.89.12.pool.telefonica.de)
[15:22:58] <[itchyjunk]> because i can't tell if i am passing something of type A and getting something of type D
[15:23:00] <arahael> pyzozord: Literals are special-cased in the compiler, I would expect.
[15:23:03] <PlanckWalk> It's fairly common in formal theories in mathematics to view things like that
[15:23:13] <[itchyjunk]> of passing something of type (A->B) and getting something of type (C->D)
[15:23:19] <PlanckWalk> [itchyjunk]: You can think of it like that
[15:23:19] <GeDaMo> pyzozord: I suspect that syntax wouldn't be acceptable, you're trying to pass a parameter to a 0 argument function
[15:23:20] <bjs> [itchyjunk]: it's up to you I guess, whether you want to think of them as functions.  it's totally reasonable to say that 42 is not a function
[15:23:31] *** Quits: FoodMan (~glucose@194.110.13.12) (Changing host)
[15:23:31] *** Joins: FoodMan (~glucose@user/foodman)
[15:23:36] <pyzozord> ah, it just doesn't accept arguments, yeah that makes sense
[15:23:52] <[itchyjunk]> bjs, i'll think of them as what ever i need to think of them as to make things click :(
[15:23:53] <PlanckWalk> Be careful though, function composition in that form isn't associative
[15:24:09] <bjs> [itchyjunk]: I could argue that 0-arity functions don't exist and they're just values
[15:24:10] <PlanckWalk> (A->B)->C isn't the same as A->(B->C)
[15:24:21] <[itchyjunk]> !
[15:24:25] <[itchyjunk]> no associativity
[15:24:31] <[itchyjunk]> so how do i know where the () is 
[15:24:38] <[itchyjunk]> when it says A->B->C->D
[15:24:48] <GeDaMo> The last one is the return value
[15:24:50] <bjs> [itchyjunk]: normally function types are right-associative
[15:24:55] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[15:24:56] <PlanckWalk> The usual convention is "to the right"
[15:25:00] <bjs> [itchyjunk]: so A->B->C->D == A->(B->(C->D))
[15:25:05] <PlanckWalk> A->B->C means A->(B->C)
[15:25:06] <[itchyjunk]> ah
[15:25:14] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:25:53] <[itchyjunk]> so if i think of return of (C->D) then it's returning a function
[15:25:54] <PlanckWalk> I.e. give it an A and you get a function that takes Bs and returns a C
[15:26:01] <[itchyjunk]> can it ever stop at that?
[15:26:01] <bjs> [itchyjunk]: yes
[15:26:07] <[itchyjunk]> what happens if i (add 2)
[15:26:13] <[itchyjunk]> it would return a function and error out?
[15:26:23] <bjs> [itchyjunk]: if `add :: Int -> Int -> Int` you'd get a function back, in a language that supports it
[15:26:23] <arahael> Why would it error out? It's perfectly valid.
[15:26:47] <PlanckWalk> (add 2) is a function that you can pass to other functions that expect one etc
[15:26:55] <GeDaMo> It might give an error in that it doesn't know what to apply the function to
[15:27:30] <GeDaMo> You can map (+ 2) [1,2,3]
[15:27:44] <arahael> map :: (a -> b) -> [a] -> [b]
[15:27:52] <[itchyjunk]> if it says add :: Int -> Int -> Int, so and if i pass an int its add :: Int -> (Int -> Int) and i get a thing of type Int -> Int
[15:28:03] <arahael> Corre cg
[15:28:06] <arahael> *COrrect
[15:28:12] <bjs> [itchyjunk]: yep, that's e.g. exactly how Haskell works
[15:29:14] *** Quits: zim_ (~zim@dynamic-089-012-016-013.89.12.pool.telefonica.de) (Quit: Leaving)
[15:29:21] <pyzozord> I need to learn some basic haskell, seems everybody knows some already
[15:29:29] <arahael> pyzozord: Don't.
[15:29:36] <[itchyjunk]> i dont, but i wanna learn
[15:29:37] <arahael> pyzozord: You'll never be happy with programming languages again.
[15:29:46] <[itchyjunk]> coq people said learning FP helps with understanding coq
[15:29:59] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Quit: Leaving...)
[15:30:25] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[15:31:04] *** Quits: anderson (~ande@134.209.221.71) (Changing host)
[15:31:04] *** Joins: anderson (~ande@user/anderson)
[15:31:20] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:31:58] *** Quits: anderson (~ande@user/anderson) (Quit: bye)
[15:32:08] *** Joins: zaher (~zaher@37.48.159.213)
[15:32:26] <pyzozord> what's a good haskell book?
[15:32:55] *** Joins: anderson (~ande@user/anderson)
[15:33:30] <[itchyjunk]> map :: a -> b -> [a] -> [b] , so i should read that as map has a type (a -> b) -> [a] -> [b] and ideally the return woudl be a list of type [b]
[15:33:55] <xsperry> that doesn't look like map's type
[15:34:00] <[itchyjunk]> you put (a->b) to make it clear that it's actually taking a function of type a->b there
[15:34:09] <GeDaMo> pyzozord: http://learnyouahaskell.com/ ?
[15:34:09] <bayaz> Title: Learn You a Haskell for Great Good! 
[15:34:16] <xsperry> parenthesis aren't optional
[15:34:37] <xsperry> (a -> b) -> [a] -> [b] is different than a -> b -> [a] -> [b]
[15:34:54] <pyzozord> GeDaMo: thanks
[15:34:56] <arahael> [itchyjunk]: When I said parens are optional, I meant that they're optional if they're right associative.
[15:35:10] <xsperry> a -> b -> [a] -> [b]   is   a -> (b -> ([a] -> [b]))
[15:35:14] <arahael> [itchyjunk]: ie, the parens in foo :: a -> ( b -> c ) are optional, because they're on the right.
[15:37:05] <arahael> [itchyjunk]: It's the same thing where parens are optional with maths expressions such as '1 + ( 2 * 3 )' <-- Optional, because * has already has the highest associativity.
[15:37:35] <GeDaMo> https://wiki.haskell.org/Learning_Haskell
[15:37:36] <bayaz> Title: Learning Haskell - HaskellWiki 
[15:38:28] <[itchyjunk]> oh only optional if it's indicating right associative?
[15:38:40] <[itchyjunk]> so (a->b) wasn't optional!?
[15:38:40] <arahael> Yeah, in the type system.
[15:38:46] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.2)
[15:39:02] <arahael> [itchyjunk]: There, it's optional too, because there's only a, and b. :)  But it's not optional for (a -> b) -> c
[15:39:25] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 265 seconds)
[15:40:31] <[itchyjunk]> it could have been a -> (b->[a]) -> [b] no ?
[15:40:43] <[itchyjunk]> hmmmmm
[15:41:14] *** Joins: Samian (~Sami@2620:10d:c091:480::1:941f)
[15:41:18] * [itchyjunk] forgot how to save file and run code for haskell
[15:41:25] <[itchyjunk]> i remember using ghci for everyhing
[15:41:29] *** Joins: Klinda (~klinda@2.227.251.209)
[15:41:33] <[itchyjunk]> maybe i never made a hello world? :O
[15:41:46] <GeDaMo> Glasgow Haskell compiler has a REPL, ghci
[15:42:17] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[15:42:35] <[itchyjunk]> right i must that that installed
[15:42:38] <xsperry> [itchyjunk] f :: Int -> Int -> Int   takes Int and returns Int -> Int function (or, alternatively, you can think of it as a function that takes two Ints and returns an Int).  g :: (Int -> Int) -> Int takes Int -> Int function, and returns an Int
[15:42:57] <[itchyjunk]> xsperry, right i think that part makes sense now
[15:43:11] <[itchyjunk]> i am not 100% of the perenthesis stuff though :P
[15:43:15] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Client Quit)
[15:43:27] <arahael> [itchyjunk]: If you've got the repl running, type: :t whatever, to get the type of the whatever.  It's special to the repl.
[15:43:33] <pyzozord> Looks like Erik Meijer recommends http://www.cs.nott.ac.uk/~pszgmh/pih.html that's also on that list
[15:43:33] <bayaz> Title: Programming in Haskell - 2nd Edition 
[15:44:09] <[itchyjunk]> i remember doing that :t stuff and having hard time following the notation ^_^
[15:44:12] <[itchyjunk]> should be better now though
[15:44:17] <beaky> nice i like to program in haskell
[15:44:19] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[15:45:39] <GeDaMo> https://hoogle.haskell.org/  "Hoogle is a Haskell API search engine, which allows you to search the Haskell libraries     on Stackage by either function name, or by approximate type signature."
[15:46:29] *** Quits: gitgooood (~gitgood@host-78-145-137-41.as13285.net) (Ping timeout: 252 seconds)
[15:47:00] <[itchyjunk]> fancy stuff
[15:47:49] <arahael> hoogle and hlint are awesome.
[15:48:18] *** Joins: dunkeln (~dunkeln@94.128.205.199)
[15:48:18] *** Quits: dunkeln (~dunkeln@94.128.205.199) (Changing host)
[15:48:18] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[15:48:19] <pyzozord> Who created haskell? I can't find it on the wiki page.
[15:49:40] <GeDaMo> There's a 'designed by' in the box at the top right https://en.wikipedia.org/wiki/Haskell_(programming_language)
[15:49:41] <bayaz> Title: Haskell (programming language) - Wikipedia 
[15:49:55] *** Joins: Pickchea (~private@user/pickchea)
[15:49:58] *** Quits: audio (~audio@2603-8081-1800-6a6f-31ac-9639-bc0a-65dc.res6.spectrum.com) (Ping timeout: 260 seconds)
[15:50:26] <pyzozord> oh I'm sorry I'm not sure how I didn't see that
[15:50:29] <beaky> haskell was designed by a committee all the cool kids like simon peyton jones, paul hudak, wadler, etc. designed it https://www.haskell.org/onlinereport/
[15:50:30] <bayaz> Title: The Haskell 98 Language Report 
[15:50:57] <GeDaMo> It was designed by a committee because there were a few functional language about at the time and they thought it might be better to have a single focus for research
[15:51:18] <arahael> pyzozord: Perhaps because the right hand side is usually full of advertising.
[15:51:27] <beaky> lol
[15:51:28] *** Joins: larryba (~bc8165b6@217.29.117.252)
[15:51:28] *** Joins: gggp (~textual@111.63.44.6)
[15:52:55] <GeDaMo> https://www.microsoft.com/en-us/research/publication/implementing-functional-languages-a-tutorial/
[15:52:56] <bayaz> Title: Implementing functional languages: a tutorial - Microsoft Research 
[15:53:10] <pyzozord> that doesnt make it easy. I wanted to find the founder and get their book about haskell
[15:55:20] <arahael> I think the first thing is probbly the paper? "Lazy with class"?
[15:55:26] <pikapika> pyzozord, I want to study signal theory
[15:55:31] *** Joins: motherr (~motherr@user/motherr)
[15:55:37] <arahael> https://www.microsoft.com/en-us/research/publication/a-history-of-haskell-being-lazy-with-class/
[15:55:38] <bayaz> Title: A History of Haskell: being lazy with class - Microsoft Research 
[15:55:44] <merijn> pyzozord: There is not single founder, it was defined by a committee
[15:56:21] <arahael> A rare case of a comittee actually coming up with a good langugae.
[15:56:23] <arahael> *language
[15:56:27] <merijn> arahael: R6RS?
[15:56:42] <merijn> Arguably, Lennart Augustsson "created" Haskell
[15:56:56] <Soni> do you use .PHONY targets for e.g. curl/wget dependencies?
[15:56:58] <merijn> Since he wrote the first compiler that implemented the Haskell Report as defined by the Haskell committee
[15:57:00] *** Joins: Twipply (~Twipply@user/twipply)
[15:57:20] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 260 seconds)
[15:57:30] <merijn> But then that depends on whether you define "creating" as making a compiler or as defining the language
[15:57:39] <arahael> merijn: Scheme was designed by a committee!?
[15:57:55] <merijn> arahael: Yes?
[15:58:05] <merijn> Lisp wasn't, but Scheme was
[15:58:14] <arahael> merijn: I had no idea.  Scheme is a language so small and consistent it could have been done by a single person.
[15:58:26] <larryba> common lisp was
[15:58:33] <merijn> I mean, Haskell 98 isn't so complicated either
[15:59:04] <pyzozord> yeah looks like Haskell 98 is the K&R of haskell
[15:59:12] <merijn> It's not
[15:59:20] <merijn> There were 4 Haskell reports before Haskell 98
[15:59:24] *** Joins: va5c0 (~vasco.nun@95.148.139.46)
[15:59:34] <merijn> If anything, Haskell 98 is the ISO C99 of Haskell
[15:59:34] <DuckSeason> sup
[15:59:50] <pyzozord> I mean the closest to. Something like K&R second edition. One that is still mostly relevant, I hope
[15:59:51] <merijn> Haskell Report 1.0 was 1989 or 1990
[16:00:06] <DuckSeason> ...
[16:00:17] <pyzozord> pikapika: cool, signal theory sounds interesting, good luck :)
[16:01:02] *** Joins: silasfox (~silasfox@xdsl-84-44-182-29.nc.de)
[16:01:31] <pikapika> pyzozord, its very exciting stuff
[16:02:52] <pyzozord> pikapika: I heard good things about this book https://www.amazon.nl/Steiglitz-Digital-Processing-Applications-Computer/dp/0805316841
[16:02:58] *** Quits: gggp (~textual@111.63.44.6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:03:08] <pyzozord> that it's useful for programmers even if they are not going to focus on signals
[16:03:31] <pikapika> pyzozord, oh thank you
[16:03:34] <pikapika> I didn't know of that book
[16:04:26] <pyzozord> no worries, hope it helps :)
[16:05:12] *** Quits: va5c0 (~vasco.nun@95.148.139.46) (Quit: WeeChat 3.2)
[16:05:40] <GeDaMo> http://www.dspguide.com/pdfbook.htm
[16:05:41] <bayaz> Title: The Scientist and Engineer's Guide to Digital Signal Processing's Table of Content 
[16:05:44] <pikapika> pyzozord, rawr :3
[16:05:59] <pikapika> GeDaMo, yes I ahve encountered this website in the past. Thanks I had forgotten about it.
[16:06:05] <pyzozord> pikapika: I'm not into that :P
[16:06:14] *** Joins: zaher_ (~zaher@37.48.177.114)
[16:06:19] <pikapika> pyzozord, ok sorry
[16:06:20] *** Joins: One39Dev (LordShiva@user/one39dev)
[16:06:21] *** Quits: One39Dev (LordShiva@user/one39dev) (Remote host closed the connection)
[16:06:46] <GeDaMo> I may have mentioned it before :P
[16:06:55] *** Joins: One39Dev (LordShiva@user/one39dev)
[16:07:38] <pyzozord> Good recommendation.
[16:07:50] <pyzozord> I think I need to learn more math before I can actually handle dsp books
[16:08:09] <beaky> what maths do you need for dsp
[16:08:10] *** Quits: zaher (~zaher@37.48.159.213) (Ping timeout: 260 seconds)
[16:08:46] *** Joins: euouae (~euouae@user/euouae)
[16:08:48] <euouae> Hello
[16:08:53] <pikapika> pyzozord, doesn't really require much math
[16:09:03] <pikapika> I think anyone with some basic calculus background can do it
[16:09:27] <GeDaMo> That lets me out :|
[16:09:29] <euouae> When I download projects from git, why is there no ./configure file? I am not sure what the right way to build them is. I know they typically have separate instructions for git clones but... is there some cohesive approach for all of them?
[16:09:44] <pikapika> and maybe some complex analysis
[16:09:53] <pyzozord> yeah that. I don't really know calculus. I heard som bits about dx/dy, limits and integrals but it all doesn't really make sense to me
[16:10:13] *** Quits: mobidrop_ (~mobidrop@217-62-121-57.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[16:10:32] *** Joins: mobidrop_ (~mobidrop@217-62-121-57.cable.dynamic.v4.ziggo.nl)
[16:10:34] *** Joins: lalitmee_ (~lalitmee@180.94.32.192)
[16:10:58] <pyzozord> euouae: what project exactly are you downloading?
[16:11:21] <GeDaMo> The build system will vary widely across projects
[16:11:33] <euouae> pyzozord emacs
[16:11:49] <pyzozord> euouae: can you link to the git repo?
[16:12:15] *** Joins: snake (~snake@user/snake)
[16:12:24] <euouae> pyzozord   https://savannah.gnu.org/projects/emacs/
[16:12:26] <bayaz> Title: emacs - Summary [Savannah] 
[16:12:29] <[itchyjunk]> apparently i already have a folder for haskell
[16:12:37] <[itchyjunk]> and my homework from NT is still in it rofl
[16:13:14] <[itchyjunk]> https://bpa.st/FKHQ
[16:13:15] <bayaz> Title: View paste FKHQ 
[16:13:17] <[itchyjunk]> look at that shit lol
[16:13:18] *** Quits: lalitmee (~lalitmee@2402:3a80:8df:5a7f:815a:aaec:bc3f:6d7c) (Ping timeout: 260 seconds)
[16:13:22] <pyzozord> here we can browse it http://cvs.savannah.gnu.org/viewvc/emacs/emacs/
[16:13:24] <bayaz> Title: [emacs] Index of /emacs 
[16:13:37] <pyzozord> euouae: I see configure file in there
[16:14:18] <euouae> huh... my clone doesn't have it 
[16:14:24] <silasfox> euouae: The "INSTALL" file might help as well...
[16:14:34] <euouae> I've read the INSTALL File, it mentions ./configure 
[16:15:38] *** Quits: hexingb (~hexingb@2409:8900:2721:7f80:f524:6258:983b:90e6) (Ping timeout: 260 seconds)
[16:15:43] <euouae> Here is my emacs directory https://paste.debian.net/1211078/
[16:15:46] <bayaz> Title: debian Pastezone 
[16:17:05] *** Quits: silasfox (~silasfox@xdsl-84-44-182-29.nc.de) (Remote host closed the connection)
[16:17:25] <GeDaMo> I see configure.ac what do you have to run to get the configure from that?
[16:18:34] *** Quits: glguy (x@libera/staff/glguy) (Read error: Connection reset by peer)
[16:19:07] <euouae> the autotools GeDaMo 
[16:19:14] <GeDaMo> Yeah, autoconf
[16:19:31] <euouae> okay I wasn't sure if I was doing something wrong
[16:19:36] <euouae> thanks for verifying
[16:20:22] <GeDaMo> Possibly the configure is mean to be in the repository
[16:20:28] *** Joins: silasfox (~sbv@xdsl-84-44-182-29.nc.de)
[16:20:33] <Lyn> Why does qemu fail on startup due to "(qemu) sdl: SDL_OpenAudio failed   sdl: Reason: ALSA: Couldn't open audio device: Host is down" but it only works when I start qemu without sudo via ssh? What difference does ssh and non-sudoing make
[16:20:33] *** Joins: pulse (~pulse@user/pulse)
[16:20:48] <Lyn> full error shown here: https://i.imgur.com/tYueWKZ.png
[16:20:48] <bayaz> Type: image/png Size: 13.3 kB 
[16:21:03] <euouae> Lyn possibly wrong order of services starting
[16:21:12] <GeDaMo> euouae: https://www.emacswiki.org/emacs/BuildingEmacs
[16:21:33] *** Joins: System123 (~System123@41.164.183.76)
[16:21:49] <euouae> GeDaMo hmm... thanks. I dn't like the discrepancy of documentation... there's an html manual, a wiki, the readme files in the directory, the manuals, etc etc...
[16:21:58] <GeDaMo> :/
[16:22:31] <euouae> GeDaMo documentation being up to date, an impossible problem to solve! :D
[16:23:41] <euouae> GeDaMo see, the README file mentions INSTALL among others; it fails to mention INSTALL.REPO. Turns out, I need to be reading the latter.
[16:23:48] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa)
[16:24:06] <euouae> am I stupid? Possibly yes. But you can't say I didn't follow instructions!
[16:24:34] <GeDaMo> You have to follow all the instructions! Even the ones which contradict the other ones! :P
[16:24:46] <euouae> aaaaaaaaaaaaaall the instructions
[16:25:05] <pyzozord> even the instruction to not follow the instructions
[16:26:25] *** Quits: silasfox (~sbv@xdsl-84-44-182-29.nc.de) (Quit: WeeChat 3.2)
[16:26:30] *** Joins: lalitmee__ (~lalitmee@2402:3a80:8c3:93d3:723d:f129:22bb:96f3)
[16:27:00] <GeDaMo> You sound like an instructionist :|
[16:27:08] *** Joins: silasfox (~silasfox@xdsl-84-44-182-29.nc.de)
[16:28:07] <pyzozord> :D
[16:28:08] *** Joins: Atque (~Atque@user/atque)
[16:29:10] *** Quits: lalitmee_ (~lalitmee@180.94.32.192) (Ping timeout: 260 seconds)
[16:29:38] *** Quits: zwr (~zwr@2804:d45:b966:fb00:3636:ea43:565a:b815) (Ping timeout: 260 seconds)
[16:30:13] *** Joins: va5c0 (~vasco.nun@95.148.139.46)
[16:30:17] *** Joins: zwr (~zwr@2804:d45:b966:fb00:d30:1233:92c9:30ff)
[16:31:24] <euouae> I love compiling stuff on my new laptop
[16:31:30] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 260 seconds)
[16:31:42] *** Joins: Crescendo (~Crescendo@user/crescendo)
[16:33:13] <euouae> the difference from going from 2 core i3 2nd gen to 6core amd mobile cpu :D 
[16:37:33] *** Quits: numsima (~numsima@101.175.64.73) (Quit: Client closed)
[16:39:26] *** Quits: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[16:39:36] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[16:40:05] *** Quits: Cyp (~cyp@192038133070.mbb.telenor.dk) (Ping timeout: 250 seconds)
[16:41:21] *** Joins: node1 (~node1@user/node1)
[16:42:15] *** Joins: gitgooood (~gitgood@host-78-145-137-41.as13285.net)
[16:42:32] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[16:42:51] *** Joins: hexingb (~hexingb@103.37.140.36)
[16:43:06] *** Joins: mickey (~user@user/mickey)
[16:43:08] *** Joins: numsima (~numsima@101.175.64.73)
[16:43:45] *** Quits: Retvrn (~Retvrn@2001:8003:1d49:6b00:2b68:d3ef:dca2:2eab) (Quit: Leaving)
[16:44:15] *** Joins: Caffeinated (~Caffeine@user/alexdelarge)
[16:45:49] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[16:46:18] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:47:43] <user51> euouae: i hope decompiling is just as fast!
[16:48:46] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[16:49:05] *** Quits: snake (~snake@user/snake) (Quit: Leaving)
[16:49:54] <pyzozord> What would be the difference between "course" and "lecture series"?
[16:50:45] <mrig> Is there a way that I can get this makefile to update the appropriate object files if header that concerns them is changed? https://termbin.com/w2ea
[16:50:45] <bayaz> Type: text/plain; charset=utf-8 
[16:51:31] <euouae> pyzozord that depends on the university
[16:51:52] *** Quits: newpy (~newpy@206.168.231.90) (Quit: Leaving)
[16:51:55] <GeDaMo> mrig: are the headers named the same as the object files?
[16:52:15] <mrig> no there not.
[16:52:18] *** Joins: glguy (x@libera/staff/glguy)
[16:52:36] <pyzozord> mrig: you could put the header files as dependencies
[16:52:44] <mrig> their not, there as one main header file at the moment and they are mostly linking including that.
[16:53:16] <mrig> Right so I really need to be making specific rules?
[16:53:48] <GeDaMo> The easiest way is just to add all the headers as dependencies but that could mean more rebuilding than necessary 
[16:53:48] <mrig> Or name the header the same as one of the source files.
[16:53:56] <pyzozord> mrig: I did basic substitutions to do something like this https://termbin.com/w2ea it's not the same as what you need but I think you can use the same trick to do what you need
[16:53:57] <bayaz> Type: text/plain; charset=utf-8 
[16:54:27] *** Quits: frost (~frost@59.71.240.119) (Quit: Connection closed)
[16:54:42] <pyzozord> https://termbin.com/hgzi
[16:54:43] <bayaz> Type: text/plain; charset=utf-8 
[16:54:46] <mrig> GeDaMo: would that rebuild all the object files if the header changed?
[16:54:50] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 260 seconds)
[16:54:54] <GeDaMo> I wonder if there's a way of extracting the headers used by a particular .c file
[16:54:58] <GeDaMo> mrig: yes
[16:55:05] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 260 seconds)
[16:55:13] <mrig> I'm more trying to learn some best practices and become familiar with it all.
[16:55:18] *** Quits: System123 (~System123@41.164.183.76) (Ping timeout: 260 seconds)
[16:55:49] *** Joins: Cyp (~cyp@192038129207.mbb.telenor.dk)
[16:56:01] <pyzozord> GeDaMo: probably with ctags, or some grep/awk
[16:56:03] <mrig> pyzozord: that's my file :D
[16:56:24] <pyzozord> mrig: yeah sorry, the second one
[16:56:46] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[16:56:59] *** Joins: Akronymus (~Akronymus@85.118.189.59)
[16:57:10] <mrig> GeDaMo: oh I see now, that rule at the bottom is only formulating dependency rules for files with the same names.
[16:57:24] <Akronymus> Nothing quite beats homeoffice. In bed.
[16:57:29] <mrig> ah right, I'd not spotted that one :)
[16:57:38] <GeDaMo> Yeah, it translates the .o name to .c to get the dependency name
[16:57:57] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[16:58:33] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[16:59:09] <GeDaMo> https://www.gnu.org/software/make/manual/html_node/Substitution-Refs.html#Substitution-Refs
[16:59:10] <bayaz> Title: Substitution Refs (GNU make) 
[16:59:46] <mrig> Right I need to rethink my approach.
[17:00:31] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Remote host closed the connection)
[17:01:03] <mrig> I think the last time that I was writing C, I was using similar and if a header was changed nothing was updated, and I ended up using clean all the time, which really does defeat the object :)
[17:01:30] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[17:02:31] <beaky> hello why is the merge operation of merge sort not naturally in place
[17:03:44] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[17:03:46] *** Quits: silasfox (~silasfox@xdsl-84-44-182-29.nc.de) (Quit: silasfox)
[17:04:52] *** Joins: jokoon (~eio@2a01:e0a:542:e160:a0f3:95ed:e5f8:63f0)
[17:05:24] <jokoon> I made a path to make a text follow it
[17:05:34] <jokoon> what is this dotted rectangle?
[17:05:40] <jokoon> cant fill outside of it
[17:05:49] <pikapika> jokoon, #gimp
[17:05:51] <pikapika> lol
[17:05:52] <jokoon> cant I resize this weird rectangle?
[17:05:58] <jokoon> oh sorry
[17:06:55] *** Joins: xiongxin8802 (~xiongxin@113.116.224.19)
[17:08:54] <pyzozord> mrig: maybe something like this would work %.o : $(grep -ri '#include "' %.c | awk '{ gsub(/"/, "", $$2); print $$2 }')
[17:08:59] *** Quits: One39Dev (LordShiva@user/one39dev) (Ping timeout: 252 seconds)
[17:08:59] <pyzozord> mrig: I haven't tested it at all
[17:09:46] <pyzozord> meaning %.o : $(extract included headers from %c)
[17:10:05] *** Parts: Caffeinated (~Caffeine@user/alexdelarge) ()
[17:10:06] *** Quits: tinhatcat (~manjaro-g@2620:103:a000:2201:8e4c:af6a:e11c:11a1) (Quit: Leaving)
[17:10:08] *** Joins: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net)
[17:11:08] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[17:11:12] <mrig> Oh im really wanting to find a simple baseline for my use of headers in C.
[17:12:07] <mrig> I think that is the issue hear, rather than resolve it (old code), i'm looking to understand it.
[17:12:10] *** Quits: hexingb (~hexingb@103.37.140.36) (Ping timeout: 252 seconds)
[17:12:19] <pyzozord> I'm not 100% but I think make is intentionally elastic like that and lets you drop down to your shell easily
[17:12:54] *** Joins: hexingb (~hexingb@2409:8900:2721:fba2:7d17:f594:ee1c:8a6b)
[17:13:01] <mrig> right yes, that is making sense.
[17:13:17] <mrig> So I will need to study a little more about my shell.
[17:14:58] <mrig> I think it is far simpler than it first seems, but narrowing down to what is just make and what are calls to other programs lets you see what is the foundation.
[17:15:17] <mrig> just reading the POSIX spec for it.
[17:15:28] *** Parts: nulleip (~luiz@189.34.167.234) ()
[17:15:35] <pyzozord> yeah that example I made is three levels deep make -> shell -> grep/awk
[17:16:27] <pyzozord> and some stuff jumps across the levels % is still from make and $$2 converts to $2 for awk which takes the second field in the line
[17:16:38] <pyzozord> $$ is just escape for $ in make
[17:17:54] *** Joins: nulleip (~luiz@189.34.167.234)
[17:19:16] *** Joins: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net)
[17:22:29] <pyzozord> mrig: ah sorry this won't work $() is not interpreted as shell
[17:22:58] *** Joins: AaravKhatri[m] (~aarav19ma@2001:470:69fc:105::f15d)
[17:23:23] <AaravKhatri[m]> hi
[17:23:46] <mrig> I was wondering if it is possible to define a rule for all the object files that use the header, and make those dependant upon it.
[17:24:10] <mrig> and keep the rest the same, a rule that is only activated if that header file has changed.
[17:25:16] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[17:25:43] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[17:26:14] <Akronymus> Sometimes you need to walk someone through OBSCURE shit.
[17:26:46] <Akronymus> It got to the point, where I had to say "scroll down in the dropdown, it doesn't show the scrollbar"
[17:27:18] *** Joins: Pickchea (~private@user/pickchea)
[17:27:21] *** Joins: sedeki (~textual@user/sedeki)
[17:27:46] *** Quits: sedeki (~textual@user/sedeki) (Client Quit)
[17:28:54] *** Quits: hexingb (~hexingb@2409:8900:2721:fba2:7d17:f594:ee1c:8a6b) (Ping timeout: 260 seconds)
[17:29:52] <pyzozord> hmm it seems there is $(shell ...) function in make so this should be theoretically possible
[17:31:44] *** Quits: sjmulder (~sjmulder@2a02-a443-33e5-1-a4a0-646e-5a4b-e227.fixed6.kpn.net) (Quit: Leaving)
[17:31:49] <mrig> my use of headers and not using the extern type for variables that is a fault here :)
[17:31:59] <pyzozord> mrig: I think it's possible with %.o: %.c $(shell extract-header-includes-from-%)
[17:32:08] <mrig> It's quite a quick fix so am doing it.
[17:32:21] <mrig> pyzozord: where is that from?
[17:32:41] <mrig> what is doing the extracting I mean?
[17:32:57] <pyzozord> mrig: https://www.gnu.org/software/make/manual/html_node/Shell-Function.html
[17:32:58] <bayaz> Title: Shell Function (GNU make) 
[17:33:03] <mrig> Thing is I was headed for a bad practice with the header files themselves.
[17:33:06] *** Quits: jazzy2 (~jaziz@2600:380:865d:911b:7479:f78f:95d9:1914) (Ping timeout: 260 seconds)
[17:33:12] <Samian> There's supposed to be a matrix 4 trailer coming out today!
[17:33:15] <pyzozord> mrig: by extracting I mean using bash shell
[17:33:29] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[17:33:34] <pyzozord> Samian: oh right! It should be now! Thanks for the reminder!
[17:33:42] <Samian> link me!
[17:34:04] <Samian> I can't find one that was published today. Only the one published 2 days ago
[17:34:18] <Samian> https://www.youtube.com/watch?v=JIThBMSABTo
[17:34:19] <bayaz> Title: The Matrix Resurrections | Official Trailer | HBO Max 
[17:34:20] <Samian> found it!
[17:34:24] *** Quits: Teckla (~Teckla@user/teckla) (Quit: leaving)
[17:34:39] <pyzozord> thanks :)
[17:35:04] *** Joins: lalitmee_ (~lalitmee@180.94.33.186)
[17:35:05] *** Joins: hexingb (~hexingb@103.37.140.36)
[17:35:44] <mrig> pyzozord: ah right yes, just write what ever you want to extract the data, and it will be stored there.
[17:36:33] *** Joins: Teckla (~Teckla@user/teckla)
[17:37:10] <Samian> wtf that trailer did not meet my expectations
[17:37:41] *** Parts: euouae (~euouae@user/euouae) ( )
[17:37:46] *** Quits: lalitmee__ (~lalitmee@2402:3a80:8c3:93d3:723d:f129:22bb:96f3) (Ping timeout: 260 seconds)
[17:37:52] <Samian> I can't tell if the movie follows in time where the Matrix 3 left off, or if this is a movie about stuff prior to matrix 1 or something wtf
[17:38:22] <pyzozord> ugh it's shit :(
[17:38:33] *** Joins: anton (~anton@tloks.com)
[17:38:33] *** Quits: anton (~anton@tloks.com) (Client Quit)
[17:38:35] <pyzozord> I mean I'll still love it but this is a spinoff
[17:38:46] <Samian> argh they're screwing up the movie :-( The matrix 4 is supposed show zion and the machine in a peace treaty. That's where the Matrix 3 left off. The Matrix 4 is supposed to show  the treaty somehow getting broken and another war.
[17:38:57] <Samian> wtttffff they should've hired me to write the damn story.
[17:39:32] <Samian> The music sucked too
[17:39:37] <pyzozord> yeah
[17:39:37] <Teckla> There was no Matrix 3
[17:39:57] <Teckla> No Matrix 2, either
[17:40:13] <Samian> Teckla  that depends on how you define Matrix 3 and Matrix 3
[17:40:14] *** Joins: TastyWiener95 (~uhhh3@user/tastywiener95)
[17:40:17] <Samian> *2
[17:40:21] <pyzozord> That theme with neo on pills on matrix is fun though. But that's not a matrix story, that's a spinoff
[17:40:25] <Teckla> I SAID THERE WAS NO MATRIX 2 OR 3 LALALALA I CAN'T HEAR YOU
[17:40:32] <pyzozord> theme changed mood changed
[17:40:36] <Samian> pyzozord  spin off of what?
[17:40:45] <pyzozord> Samian: spin off of matrix
[17:40:45] <Teckla> ;)  :)
[17:41:00] <Teckla> Anyone here do any WebAssembly?
[17:42:13] <Samian> The movie did not fit with the music of the Matrix 1-3
[17:42:13] <pyzozord> Samian: looks like more visual flairs, more superficial optimizations less substance
[17:42:13] *** Quits: mobidrop_ (~mobidrop@217-62-121-57.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[17:42:13] <pyzozord> oh sorry, ping intended
[17:42:13] *** Joins: mobidrop_ (~mobidrop@217-62-121-57.cable.dynamic.v4.ziggo.nl)
[17:42:13] <Samian> it's like the guy who wrote the original music died and they found most untalented intern to take his place
[17:42:17] <user51> you mean all those redpills i've taken were basically useless?
[17:43:16] *** Joins: jamea (~jamea@187.185.190.209)
[17:43:28] <furrykef> I've got a question that's only peripherally related to programming... if you want to set up a phone number that connects to a computer (perhaps running on a VPS?), how would you go about it?
[17:43:33] <pyzozord> this is more like the new joker movie to the batman frenchise, except the joker movie was good
[17:44:14] *** Joins: anton (anton@tloks.com)
[17:44:30] <furrykef> I'm guessing some kind of VoIP solution?
[17:44:56] <DPA> furrykef: I haven't done this yet, but I think yes, VoIP, you probably just need a SIP provider.
[17:45:12] <pyzozord> furrykef: https://www.twilio.com/ maybe
[17:45:16] <bayaz> Title: Twilio - Communication APIs for SMS, Voice, Video and Authentication 
[17:45:55] <pyzozord> it's the stripe of telecom field
[17:46:01] <DPA> And then it depends what you want to do with it. Maybe take a look at asterisk.
[17:46:27] *** Quits: anton (anton@tloks.com) (Client Quit)
[17:47:03] *** Joins: Hax0r (~Hax0r@51.252.22.22)
[17:47:28] <jamea> Javascript: how to activate webcam and read scan a codebar? and put the result on a HTML inputtext or div?
[17:48:57] <furrykef> Basically I'm reading a book on card tricks and there's this one trick where you call a confederate on the phone, and the confederate announces to your participant (seemingly without having been told) what card they drew from a deck. So I'm thinking about how this could be automated so a human confederate isn't necessary.
[17:50:01] <furrykef> And it can be called from any phone, so you can use your participant's phone to do it
[17:51:31] *** Joins: anton (~anton@tloks.com)
[17:51:41] *** Joins: mishugana (~mishugana@user/mishugana)
[17:51:41] <furrykef> It can't just be a static message, though... it's interactive, albeit in a way that isn't apparent to the participant
[17:51:57] <furrykef> Which is why I think programming would be involved
[17:52:35] *** Joins: mdogg (~mdogg@user/mdogg)
[17:52:51] *** Parts: mdogg (~mdogg@user/mdogg) ()
[17:53:00] <pikapika> furrykef, hi
[17:53:29] *** Joins: Guest8018 (~Guest80@185.5.165.25)
[17:53:32] *** Joins: Guest11 (~Guest11@116.74.151.203)
[17:53:42] <Guest11> Hello please anyone can give me feedback on basic game https://github.com/HarshscGithub/Kilo-Antivirus-1-and-2/releases
[17:53:43] <bayaz> Title: Releases · HarshscGithub/Kilo-Antivirus-1-and-2 
[17:53:48] *** DuckSeason is now known as TheArchitect
[17:53:52] *** Joins: jazzy2 (~jaziz@2600:380:865d:911b:c128:d355:1b30:8490)
[17:54:05] *** Joins: lalitmee__ (~lalitmee@180.94.32.172)
[17:55:14] *** Joins: Cashlin (~hp@user/cashlin)
[17:55:16] *** Quits: Guest8018 (~Guest80@185.5.165.25) (Client Quit)
[17:55:24] <Guest11> please?
[17:55:32] <Guest11> anyone please 🙏 
[17:56:42] <furrykef> Guest11: I'm not interested, sorry
[17:56:50] *** Quits: lalitmee_ (~lalitmee@180.94.33.186) (Ping timeout: 252 seconds)
[17:57:03] <furrykef> This doesn't even look like a game...
[17:57:23] *** Quits: Cashlin (~hp@user/cashlin) (Client Quit)
[17:57:26] <Guest11> it is antivirus  ui mad in python
[17:57:30] <Guest11> *made
[17:58:02] *** Joins: gggp (~textual@60.10.194.45)
[17:58:03] <pyzozord> jamea: https://medium.com/swlh/how-to-access-webcam-and-take-picture-with-javascript-b9116a983d78 then https://serratus.github.io/quaggaJS/#gettingstarted
[17:58:05] <bayaz> Title: How to access a webcam and take a picture with JavaScript 
[17:58:05] <bayaz> Title: QuaggaJS, an advanced barcode-reader written in JavaScript 
[17:58:13] *** Joins: Cashlin (~hp@user/cashlin)
[17:58:42] <pyzozord> damn i'm so disappointed about matrix 4 now :(
[17:58:42] <jamea> pyzozord thanks
[17:58:48] <pyzozord> jamea: no worries :)
[17:58:54] *** Quits: Gaboradon (~Gaboradon@cpe-86-58-57-5.static.triera.net) (Quit: Shutdown)
[17:59:42] *** Quits: anton (~anton@tloks.com) (Quit: anton)
[17:59:49] <pyzozord> One redeeming feature of matrix 4 is that I might identify with the neo the missfit :P
[18:00:03] *** Joins: lalitmee_ (~lalitmee@180.94.32.27)
[18:00:10] *** Joins: anton (anton@tloks.com)
[18:00:17] *** Parts: Guest11 (~Guest11@116.74.151.203) ()
[18:01:07] *** Joins: mobidrop (~mobidrop@user/mobidrop)
[18:01:20] <deniska> New Matrix film? What are we, 90s?
[18:02:02] *** Quits: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[18:02:30] *** Quits: lalitmee__ (~lalitmee@180.94.32.172) (Ping timeout: 260 seconds)
[18:02:47] <furrykef> pyzozord: Twilio might be what I need, thanks
[18:02:50] *** Quits: numsima (~numsima@101.175.64.73) (Quit: Client closed)
[18:02:53] *** Quits: mobidrop_ (~mobidrop@217-62-121-57.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[18:02:55] *** Quits: xff0x (~xff0x@2001:1a81:52b9:4900:be0:d306:f2f7:baf5) (Ping timeout: 252 seconds)
[18:03:38] *** Quits: Hax0r (~Hax0r@51.252.22.22) (Remote host closed the connection)
[18:03:40] *** Joins: xff0x (~xff0x@2001:1a81:52b9:4900:ba34:d2bf:e316:3533)
[18:04:57] *** Valware is now known as Dalek
[18:05:52] *** Quits: inky_ (~inky@46.36.114.205) (Ping timeout: 265 seconds)
[18:06:52] *** Joins: inky_ (~inky@5.77.199.77)
[18:07:12] *** Joins: numsima (~numsima@101.175.64.73)
[18:09:04] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[18:09:29] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 252 seconds)
[18:09:29] *** Joins: archie (~archie@host-79-27-103-93.retail.telecomitalia.it)
[18:09:37] *** Joins: shad (~shad@user/shad)
[18:10:11] *** Joins: chenxuezhao (~chenxuezh@120.244.238.36)
[18:11:03] <pyzozord> furrykef: enjoy :)
[18:11:07] <pyzozord> deniska: I wish!
[18:13:29] <mishugana> Hollywood is a joke anyway.
[18:13:47] <mishugana> Active dumbification of the plebs.
[18:15:01] *** Quits: mishugana (~mishugana@user/mishugana) (Quit: leaving)
[18:15:33] *** Joins: mobidrop_ (~mobidrop@217-62-121-57.cable.dynamic.v4.ziggo.nl)
[18:16:26] <[itchyjunk]> You say joke like its a bad thing
[18:18:26] *** Quits: mobidrop (~mobidrop@user/mobidrop) (Ping timeout: 265 seconds)
[18:18:40] *** Joins: euouae (~euouae@user/euouae)
[18:18:57] <DnzAtWrk> would be okay if movies weren't so formuleic
[18:19:00] <euouae> Hello in terms of mutexes, suppose I have an object x that has a mutex m and a bunch of referenecs
[18:19:22] <DnzAtWrk> you really need to mention the language
[18:19:25] <euouae> I want to delete the object x when the reference count is 0 in the unref() function. After acquiring the mutex, do I copy the mutex, delete the object and then release the mutex lock?
[18:20:00] <euouae> right now the code I see does this: acquire mutex, release mutex, delete object
[18:20:41] *** Joins: Izem (~Izem@8.6.144.177)
[18:21:46] *** Quits: anton (anton@tloks.com) (Remote host closed the connection)
[18:22:00] *** Quits: jokoon (~eio@2a01:e0a:542:e160:a0f3:95ed:e5f8:63f0) (Ping timeout: 260 seconds)
[18:24:39] <DPA> Just make sure nothing can get a reference to the object inside the critical section. After that, since the refcount is 0, and there is nothing to access it, it's safe to first unlock the mutex, and then free the object.
[18:24:39] <DPA> Freeing an object a process tries to lock is usually undefined behavior and will not work anyway. Copying it won't help.
[18:25:10] <DPA> (it = the lock/mutex)
[18:26:11] *** Quits: anovick (~anovick@IGLD-83-130-127-193.inter.net.il) (Ping timeout: 265 seconds)
[18:27:00] <euouae> DPA what of this: after unlocking the mutex, someone else locks it and increases the refcount
[18:31:38] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[18:31:38] *** Quits: xff0x (~xff0x@2001:1a81:52b9:4900:ba34:d2bf:e316:3533) (Ping timeout: 252 seconds)
[18:31:38] <Lyn> are there any good non-mac simulators of iOS? for app dev
[18:31:38] <euouae> Looks like g_mutex_clear() will lead to UB if you use it on an locked mutex. So how is one supposed to safely clear a mutex then?
[18:31:38] <DPA> Something should have already had a reference to access the object's lock, so the refcount should have been bigger than 1. Whatever that is, should remove it's reference first.
[18:31:39] <euouae> DPA oh OK so now I get it. Sorry I just wasn't familiar with the refcount
[18:31:39] <euouae> DPA first you increase the refcount, then you ask for a second lock?
[18:31:39] <euouae> i.e. lock, refcount++, unlock, lock again, do stuff
[18:31:56] <euouae> and I guess refcount++ only IF refcount is not 0?
[18:32:47] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[18:32:51] <euouae> Lyn you would need to install macos in a virtual environment I believe
[18:33:47] *** Quits: archie (~archie@host-79-27-103-93.retail.telecomitalia.it) (Ping timeout: 256 seconds)
[18:35:28] <DPA> Maybe it's easier to look at an example of the pattern first.
[18:36:17] <euouae> Where can I find one?
[18:38:46] <euouae> I'm pretty sure I've found some bugs here DPA, a grep for `g_mutex_init` reveals many hits but `g_mutex_clear` reveals none. At the very least, /that/ is a memory leak 
[18:38:54] *** Quits: jazzy2 (~jaziz@2600:380:865d:911b:c128:d355:1b30:8490) (Ping timeout: 260 seconds)
[18:38:55] <edgar-rft> I think one can be found next to zero
[18:40:37] *** Joins: xff0x (~xff0x@2001:1a81:52b9:4900:ba34:d2bf:e316:3533)
[18:40:51] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[18:41:23] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 252 seconds)
[18:42:10] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 260 seconds)
[18:43:10] <euouae> one is next to none
[18:43:35] *** Quits: gggp (~textual@60.10.194.45) (Ping timeout: 260 seconds)
[18:43:57] *** Joins: kerberos (~jezavala@187-177-34-208.dynamic.axtel.net)
[18:43:59] *** Joins: pulse (~pulse@user/pulse)
[18:47:01] *** Joins: gggp (~textual@60.10.23.169)
[18:47:01] *** Joins: archie (~archie@host-79-27-103-93.retail.telecomitalia.it)
[18:47:08] *** Parts: archie (~archie@host-79-27-103-93.retail.telecomitalia.it) ()
[18:48:36] *** Quits: hexingb (~hexingb@103.37.140.36) (Read error: Connection reset by peer)
[18:49:14] *** Joins: hexingb (~hexingb@103.37.140.21)
[18:49:22] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[18:49:29] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:49:49] *** Joins: Pickchea (~private@user/pickchea)
[18:50:40] *** Quits: arahael (~arahael@203.221.97.63) (Ping timeout: 252 seconds)
[18:51:35] <euouae> DPA, do you know where I can find a pattern that explains this? Or a tutorial, etc
[18:51:49] <euouae> I'm quite confused as to how I'm supposed to free an allocated mutex when I can't free a locked mutex
[18:55:11] <euouae> Idk I'll ask in ##C++-general 
[18:55:50] *** Quits: hexingb (~hexingb@103.37.140.21) (Ping timeout: 260 seconds)
[18:56:01] *** Joins: hexingb (~hexingb@2409:8900:152d:bcc1:f430:3c56:9ee2:5ae1)
[18:56:13] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:56:59] <DPA> You just shouldn't free a mutes that is or still can be locked.
[18:57:33] *** Quits: irado (~irado@177.12.221.61) (Read error: Connection reset by peer)
[18:58:01] *** Joins: irado (~irado@177.12.221.61)
[18:58:04] *** Quits: Akronymus (~Akronymus@85.118.189.59) (Quit: Client closed)
[18:58:05] <DPA> When the refcount is 0, there should be no longer a way anything could have obtained a reference to the object.
[18:58:15] *** Joins: Akronymus (~Akronymus@85.118.189.59)
[19:00:04] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[19:00:57] *** Joins: anton (anton@tloks.com)
[19:01:38] <euouae> DPA, ok I need more time to determine whether this is a bug or not. Definitely though, it appears to me that there is a memory leak since the mutexes are allocated but not de-allocated
[19:03:45] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Remote host closed the connection)
[19:04:00] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[19:04:29] *** Quits: gggp (~textual@60.10.23.169) (Ping timeout: 252 seconds)
[19:05:08] *** Joins: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net)
[19:07:22] <CP-400> molybdenum.libera.chat sets mode: +Cnst
[19:07:26] <CP-400> what's mode +C ?
[19:07:43] <pyzozord> what is the "constant function" in the context of  "combinator"?
[19:08:08] <Akronymus> pyzozord always returns the same value
[19:08:22] <pyzozord> Akronymus: how is it different from identify function?
[19:08:28] <pyzozord> *identity
[19:08:35] <Akronymus> It is independant of the input
[19:08:43] <Akronymus> It ALWAYS returns the same value.
[19:08:46] <GeDaMo> CP-400: "Blocks CTCP commands (other than /me actions)." https://libera.chat/guides/channelmodes
[19:08:47] <bayaz> Title: Channel Modes 
[19:09:01] <pyzozord> Akronymus: thanks
[19:09:08] <Akronymus> int somefunct (char input) {return 4;}
[19:09:13] <Akronymus> Something like that
[19:09:19] <pyzozord> yeah, that's constant function
[19:09:35] *** Joins: independent56 (~independe@95.144.68.39)
[19:09:36] <pyzozord> and int sumfunct2 (char input) { return input; } would be indentity function, right?
[19:09:57] *** Quits: sidy (~sidy@user/sidy) (Quit: Leaving)
[19:09:58] <Akronymus> Wrong type but yes.
[19:10:05] <pyzozord> ah yea
[19:10:30] *** Joins: tlaxkit (~hexchat@170.253.47.137)
[19:10:31] <pyzozord> wel should work
[19:10:36] <Akronymus> A different way for a constant one could be () => 10;
[19:10:41] <Akronymus> At least in c#
[19:11:17] <Akronymus> Different from just "10" being that it is used where a function is needed, but you really just want a constant value
[19:11:20] <CP-400> GeDaMo: thanks!
[19:11:26] <CP-400> interesting they are setting this by default now
[19:11:42] <Akronymus> Setting what by default?
[19:12:40] <pyzozord> so those were the I and K from the "combinator". There is also "S" which has form f g x = f x (gx), what does this do?
[19:13:28] <pyzozord> https://youtu.be/UIUlFQH4Cvo?list=PLoJC20gNfC2gpI7Dl6fg8uj1a-wfnWTH8&t=1146
[19:13:29] <bayaz> Title: C9 Lectures: Dr. Erik Meijer - Functional Programming Fundamentals Chapter 1 of 13 
[19:13:32] <GeDaMo> pyzozord: http://dirk.rave.org/combinatris/
[19:13:33] <Akronymus> You talking about ski? https://en.wikipedia.org/wiki/SKI_combinator_calculus
[19:13:34] <bayaz> Title: Combinatris 
[19:13:34] <bayaz> Title: SKI combinator calculus - Wikipedia 
[19:13:37] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[19:14:02] *** Joins: magla (~gelignite@55d42fe3.access.ecotel.net)
[19:14:03] <pyzozord> not sure what I am talking about, thanks for the links
[19:14:33] <pyzozord> but yeah SKI combinator makes sense because he says "combinator that has S, K and I"
[19:14:50] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 260 seconds)
[19:15:23] <Akronymus> pyzozord "To mock a mockingbird"
[19:16:25] <pyzozord> what is a "combinator" in general?
[19:16:39] <pyzozord> sorry those probably very dumb questions
[19:16:42] <Akronymus> It takes 2 things and mashes em together.
[19:16:52] *** xavie1 is now known as xcombelle
[19:16:52] <Akronymus> https://www.angelfire.com/tx4/cus/combinator/birds.html <-- for the source of the names.
[19:16:54] <bayaz> Title: Combinator Birds 
[19:16:55] *** Quits: gitgooood (~gitgood@host-78-145-137-41.as13285.net) (Ping timeout: 265 seconds)
[19:16:59] *** Joins: anovick (~anovick@2a0d:6fc0:1bd8:7800:98e9:2c6f:1a52:52c0)
[19:17:00] <DarkTrick> like a muxer?
[19:17:09] <DarkTrick> *demuxer
[19:17:09] <Akronymus> https://dkeenan.com/Lambda/
[19:17:11] <bayaz> Title: To Dissect a Mockingbird: A Graphical Notation for the Lambda Calculus with Animated Reduction 
[19:17:15] <Akronymus> and this one pyzozord
[19:17:31] <Akronymus> Actually, that last one helped me grok it
[19:17:41] <pyzozord> nice, thanks
[19:18:04] <pyzozord> this goes into the cs bookmark though, not programming bookmark :P
[19:18:17] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:18:54] <pyzozord> aka "scary stuff" bookmark
[19:19:31] <pyzozord> oh no i brok the game
[19:19:42] <pyzozord> I got Y(YK) and it exploded
[19:19:50] <pyzozord> I'm not really sure what that means
[19:20:08] <pyzozord> oh sorry I think I got K(YK) that exploded
[19:20:43] <GeDaMo> https://en.wikipedia.org/wiki/Fixed_point_combinator
[19:20:43] <bayaz> Title: Fixed-point combinator - Wikipedia 
[19:21:15] <pyzozord> I am familiar with "y combinator" because of the orange site. But litearlly only the name "y combinator"
[19:21:39] *** Joins: pavonia (~user@user/siracusa)
[19:21:55] <deniska> pyzozord: y combinator is how you write screwy recursive code without being able to refer to your own name :D
[19:21:56] <Akronymus> The y combinator is how to encode recursion and thus enable loops and such in a language without it
[19:22:01] *** mobidrop_ is now known as mobidrop
[19:22:13] <pyzozord> deniska: ooh that's interesting
[19:22:14] *** Quits: mobidrop (~mobidrop@217-62-121-57.cable.dynamic.v4.ziggo.nl) (Quit: Leaving)
[19:22:26] <pyzozord> I though recursion without knowing the name of the function is not possible
[19:22:29] *** Joins: mobidrop (~mobidrop@user/mobidrop)
[19:22:47] <pyzozord> although I suppose some kind of "self" or "this" for functions could work maybe
[19:22:51] <Akronymus> In mathematics you can't refer to yourself
[19:23:12] <GeDaMo> In standard Forth, you have the 'recurse' word for recursion
[19:23:36] <Akronymus> Of course, most languages provide a way to do recursion.
[19:23:39] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[19:23:43] <Akronymus> But math itself does not.
[19:23:48] <pyzozord> Akronymus: that doesn't sound right. The way I see it mathematics just loves to do weird stuff like this. Refert to itself infinitlely many times in infinetly many dimentions. That's what math does as the first thing to do.
[19:23:50] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[19:23:54] <Akronymus> At least not without resorting to lambda
[19:24:01] <Akronymus> Or, well, y combinator
[19:24:14] <deniska> pyzozord: the only drawback is that you have to repeat a function twice
[19:24:19] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 252 seconds)
[19:25:01] <Akronymus> pyzozord https://stackoverflow.com/questions/93526/what-is-a-y-combinator
[19:25:04] <bayaz> Title: What is a Y-combinator? 
[19:25:25] <pyzozord> nice thanks
[19:25:34] *** Quits: xff0x (~xff0x@2001:1a81:52b9:4900:ba34:d2bf:e316:3533) (Ping timeout: 260 seconds)
[19:25:40] <deniska> pyzozord: an example of a recursive python defaultdict using y combinator: defaultdict((lambda f: (lambda x: x(x))(lambda y: f(lambda *args: y(y)(*args))))(lambda f: lambda: defaultdict(f)))
[19:25:50] <Akronymus> Basically, it abstracts the recursion away from what is being recursed on
[19:25:53] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Client Quit)
[19:26:29] *** Joins: xff0x (~xff0x@port-92-193-229-234.dynamic.as20676.net)
[19:26:29] *** Quits: chenxuezhao (~chenxuezh@120.244.238.36) (Ping timeout: 252 seconds)
[19:26:55] <pyzozord> python lambda functions is kind of verbose
[19:27:36] <[itchyjunk]> behold, i have discovered "and"
[19:27:37] <[itchyjunk]> https://bpa.st/WLMA
[19:27:39] <bayaz> Title: View paste WLMA 
[19:28:02] <pyzozord> deniska: but I don't think I can break down what you wrote. It would take good 5-10 minutes
[19:28:12] *** Joins: compscipunk (~compscipu@107-214-234-232.lightspeed.sndgca.sbcglobal.net)
[19:28:19] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[19:28:25] *** Joins: jazzy2 (~jaziz@2600:380:865d:911b:c128:d355:1b30:8490)
[19:28:54] *** Quits: TheArchitect (~GodMode@user/h4x0r) (Quit: ZNC - https://znc.in)
[19:29:25] <pyzozord> deniska: I'll try to add some white space and new lines and see if I can make sense of it faster
[19:29:27] <Akronymus> Basically you have a function that takes another function and returns a generator for a function
[19:29:33] *** Joins: TheArchitect (~GodMode@user/h4x0r)
[19:29:55] <Akronymus> This can then be passed into itself to become recursive.
[19:30:02] *** Quits: deniska (~denis@user/deniska) (Quit: leaving)
[19:30:04] <Akronymus> Because each generator generates itself.
[19:30:09] <[itchyjunk]> man i wanna learn recursions too :'(
[19:30:17] <Akronymus> which language?
[19:30:23] <[itchyjunk]> java
[19:30:27] *** Joins: deniska (~denis@user/deniska)
[19:30:38] <Akronymus> Java kinda sucks at recursion.
[19:30:43] <[itchyjunk]> ah..
[19:30:50] <Akronymus> But tbh, all you need to do is have a function call itself within itself
[19:31:03] <[itchyjunk]> i wouldn't mind in haskell/lisp/py but i don't have the basics down yet
[19:31:03] <Akronymus> (Java doesn't tail call optimize afaik)
[19:31:16] <[itchyjunk]> can i call a method inside a method in java?
[19:31:16] <Akronymus> But yeah, it literally is a function calling itself.
[19:31:22] <Akronymus> Yeah
[19:31:33] <[itchyjunk]> oh i didn't know that. i can play around with that i guess
[19:31:35] <deniska> a PEP to replace 'lambda' with 'λ' didn't fly with python, because λ is a valid identifier now
[19:31:49] <[itchyjunk]> i also need to learn JFrame since my next hw will use that :(
[19:32:11] <Akronymus> int factorial (int n) { return n == 1 ? 1 : n * factorial(n-1);}
[19:32:14] <Akronymus> This should work.
[19:32:34] <pyzozord> deniska: so I broke it down to this https://termbin.com/q1zo
[19:32:35] <Akronymus> Naive factorial implementation.
[19:32:35] <bayaz> Type: text/plain; charset=utf-8 Size: 141 B 
[19:32:42] <pyzozord> deniska: doesn't help much though
[19:32:48] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[19:32:49] <Akronymus> Which wouldn't get tail call optimized anyways, tbh.
[19:32:50] <[itchyjunk]> Java has that ? stuff ? lambda functions?
[19:33:09] <Akronymus> ? and : are part of conditional expression
[19:33:10] <GeDaMo> ?: is the ternary operator
[19:33:17] <[itchyjunk]> hmmmm
[19:33:18] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[19:33:23] <Akronymus> If the value before the ? is true, it returns the first block.
[19:33:30] <DPA> euouae: Look, it's simple. You have a refcounted object a. If you have an object b with a pointer to it, then before setting the pointer, increment the refcount. After unsetting the pointer, decrement it. Before changing the pointer to a in b, always lock the mutex of b. 
[19:33:30] <DPA> When accessing the pointer in b to a, always lock the mutex of b first, increment the refcount of a, make a copy of the pointer to a, unlock the mutex of b, do stuff with a, then unref a.
[19:33:30] <DPA> Then, when you get the a using b, like this, the refcount of a can never have been 0, because b needs to lock it's mutex to change or null it's pointer to a, and it also has to do so to access b->a, so b->a must have been set, a's refcount must have been at least 1 because of it, and the refcount of a incremented to 2 before unlocking.
[19:33:30] <DPA> After that, the refcount is 2, and it doesn't matter which of the 2 references is dropped first. Either b->a is, the b->a is 0 and refcount 1, or b is, then b is 0 and b->a is set and refcount is 1 again. So if refcount reaches 0, a is unreachable, nothing can lock a mutex on it.
[19:33:33] <Akronymus> If not, it returns the block after `:`
[19:33:43] <GeDaMo> a = b ? c : d; is if (b) then a = c else a = d
[19:33:55] <[itchyjunk]> interesting!!
[19:34:13] <[itchyjunk]> can c and d be blocks of code?
[19:34:17] <[itchyjunk]> or just expressions?
[19:34:21] <Akronymus> Expressions
[19:34:23] <[itchyjunk]> ah
[19:34:38] <Akronymus> Sadly java is a statement based, rather than expression based language.
[19:34:53] <Akronymus> In f# EVERYTHING is an expressions, aka has a return value.
[19:34:55] *** Quits: anovick (~anovick@2a0d:6fc0:1bd8:7800:98e9:2c6f:1a52:52c0) (Ping timeout: 260 seconds)
[19:35:06] <Akronymus> Or, well, a value it evaluates to, to be precise
[19:35:14] <euouae> DPA nice thank you :) 
[19:35:39] <[itchyjunk]> ah there was a different word for that right?
[19:35:48] <Akronymus> For what?
[19:35:54] <[itchyjunk]> FP language are err not declarative but something
[19:36:08] <Akronymus> That isn't really what it is about.
[19:36:13] <[itchyjunk]> ah
[19:36:18] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 260 seconds)
[19:36:24] <Akronymus> Expression based means that everything is an expression.
[19:36:44] <Akronymus> So, if, else, loops, assignements and such all have a value they become.
[19:37:10] <Akronymus> So, you could do var something = for (...) {dostuff;};
[19:37:31] <Akronymus> Which can be useful at times.
[19:37:49] <[itchyjunk]> oh interesting. haven't seen anything like that before
[19:38:08] <Akronymus> Altough, usually you'd do such things with if else and similar.
[19:38:24] <Akronymus> Oh, right, conditionals.
[19:38:31] <Akronymus> That was the word
[19:38:42] <Akronymus> It enables quite a bit of flexibility
[19:38:54] <Akronymus> For example, you can type check if/else
[19:39:24] <Akronymus> Which is surprisingly useful.
[19:40:12] *** Joins: vysn (~vysn@user/vysn)
[19:43:42] * wedr drinks globs of vodka
[19:43:42] <wedr> my Java webapp is going down the drain if this keeps up
[19:43:42] *** Quits: Andrew (~andrew@user/andrewyu) (Ping timeout: 250 seconds)
[19:44:10] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:44:10] <wedr> I'm sitting here, confused as f, trying to understand why Spring doesn't like using this DataSource @Bean object we defined. 
[19:44:27] *** Joins: AndrewYu (~andrew@user/andrewyu)
[19:45:13] <wedr> We declared during the compile process, to specify to use a Maven profile (labeled "jndidb"), which, it should use the JNDI DB DataSource we use in production.
[19:45:43] <wedr> F knows what the hell it's going on. Always using the **wrong** DataSource.
[19:46:08] *** Quits: Akronymus (~Akronymus@85.118.189.59) (Quit: Client closed)
[19:46:16] *** Quits: xiongxin8802 (~xiongxin@113.116.224.19) (Quit: Konversation terminated!)
[19:47:00] <wedr> I've inspected the configurations, inspected the Maven flags we put in our build scripts, inspected the database data as well as the form which we use to verify which database schema the webapp is connecting to, yet it always show that we're using the wrong database schema.
[19:47:15] *** Joins: Akronymus (~Akronymus@85.118.189.59)
[19:48:00] <wedr> How is it possible? Spring Boot / Data / Beans / whatever, just doesn't make any sense at all. Me and the team were all baffled. Lead dev is just pondering, "why? why? why?..." over and over.
[19:48:11] <CP-400> https://www.emojicode.org/ <======
[19:48:11] <bayaz> Title: Emojicode 
[19:48:48] *** Quits: mobidrop (~mobidrop@user/mobidrop) (Quit: Leaving)
[19:50:09] *** Joins: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com)
[19:50:28] *** Quits: Akronymus (~Akronymus@85.118.189.59) (Client Quit)
[19:50:55] *** Joins: jokoon (~eio@2a01:e0a:542:e160:a0f3:95ed:e5f8:63f0)
[19:52:09] *** Joins: Hax0r (~Hax0r@87.101.169.254)
[19:52:28] *** Joins: pncl1 (~Hax0r@87.101.169.254)
[19:53:06] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Ping timeout: 260 seconds)
[19:54:47] *** Joins: Pickchea (~private@user/pickchea)
[19:55:02] <euouae> DPA don't I also need to lock to increase the refcount?
[19:56:15] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) ()
[19:58:03] <DPA> Depends. If the refcount is done with atomic in a lock-free way, no. If not, yes, but it may have it's own lock, or use one from the object it belongs to.
[19:58:30] <pyzozord> what does "Combinatory logic is a notation to eliminate the need for quantified variables in mathematical logic." mean?
[19:58:41] *** Joins: anovick (~anovick@IGLD-83-130-127-193.inter.net.il)
[19:58:46] <euouae> DPA got it. AFAIK i++ is not atomic
[19:59:53] <DPA> Well, it depends... In C, if i was declared as _Atomic, it should behave as if it was, I think.
[20:00:12] *** Joins: snake (~snake@user/snake)
[20:00:27] <merijn> No
[20:00:47] <merijn> _Atomic just mean you *can* atomically read/write it
[20:00:59] <merijn> It doesn't turn operations like ++ into atomic adds
[20:01:10] *** Quits: jamea (~jamea@187.185.190.209) (Ping timeout: 260 seconds)
[20:02:10] <DPA> Sure, not necessarily, but it does have some special properties in how it should behave.
[20:02:29] *** Joins: chenxuezhao (~chenxuezh@120.244.238.36)
[20:02:32] *** Quits: Hax0r (~Hax0r@87.101.169.254) (Quit: Leaving)
[20:02:44] *** Quits: pncl1 (~Hax0r@87.101.169.254) (Quit: Leaving)
[20:03:40] *** Joins: dunkeln (~dunkeln@94.128.205.199)
[20:03:41] *** Quits: dunkeln (~dunkeln@94.128.205.199) (Changing host)
[20:03:41] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[20:03:50] *** Quits: anovick (~anovick@IGLD-83-130-127-193.inter.net.il) (Ping timeout: 260 seconds)
[20:05:32] *** Joins: One39Dev (LordShiva@user/one39dev)
[20:06:01] *** Quits: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com) (Quit: Blackpajamas)
[20:07:11] *** Quits: chenxuezhao (~chenxuezh@120.244.238.36) (Ping timeout: 265 seconds)
[20:07:58] <CP-400> let's make emojicode our official language!!!
[20:08:27] <euouae> I'm laughing at how silly https://www.compart.com/en/unicode/U+1F427 looks
[20:08:29] <bayaz> Title: “🐧” U+1F427 Penguin Unicode Character 
[20:08:55] <DPA> merijn: Found it: https://www.iso-9899.info/n1570.html#6.5.2.4p2 :  Postfix ++ on an object with atomic type is a read-modify-write operation with memory_order_seq_cst memory order semantics.
[20:09:29] <DPA> So not necessarely atomic, but for most purposes, should behave as if.
[20:10:36] <euouae> Just look at this penguin, so dorky, https://imgur.com/a/PRR3esA
[20:10:37] <bayaz> Title: imgur.com 
[20:10:40] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[20:11:32] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 265 seconds)
[20:14:05] *** Joins: freakazoid12345 (~matt@2603-9000-cf0f-80e3-dc0c-f0b2-7d10-1786.inf6.spectrum.com)
[20:14:05] *** Joins: mdbauman_ (~mdbauman@2600:1700:7e60:f7c0:690a:3d8b:bfbe:84d7)
[20:15:38] *** Joins: System123 (~System123@2c0f:f4c0:2202:6b94:9580:2b3e:eee5:e946)
[20:15:58] *** Quits: jazzy2 (~jaziz@2600:380:865d:911b:c128:d355:1b30:8490) (Ping timeout: 260 seconds)
[20:16:00] *** Joins: molson (~michael@2001-48F8-704A-CA1-0-0-75F-1015-static.midco.net)
[20:16:12] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.2)
[20:16:55] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi) (Ping timeout: 260 seconds)
[20:17:07] *** Quits: mdbauman (~mdbauman@2600:1700:7e60:f7c0:8c5a:a89b:b1ff:acd4) (Ping timeout: 252 seconds)
[20:17:07] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:dc0c:f0b2:7d10:1786) (Ping timeout: 252 seconds)
[20:18:17] *** Quits: DasBrain (~DasBrain@user/dasbrain) (Killed (NickServ (GHOST command used by DasBrain_)))
[20:18:23] *** Joins: DasBrain_ (~DasBrain@user/dasbrain)
[20:18:28] *** Joins: molson__ (~michael@2001-48F8-704A-CA1-0-0-75F-1015-static.midco.net)
[20:18:32] *** Quits: molson__ (~michael@2001-48F8-704A-CA1-0-0-75F-1015-static.midco.net) (Remote host closed the connection)
[20:18:35] *** Quits: molson (~michael@2001-48F8-704A-CA1-0-0-75F-1015-static.midco.net) (Client Quit)
[20:18:52] *** Joins: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com)
[20:18:56] *** Joins: molson (~michael@2001-48F8-704A-CA1-0-0-75F-1015-static.midco.net)
[20:19:57] *** Joins: Hax0r (~Hax0r@87.101.169.254)
[20:20:43] *** Quits: molson (~michael@2001-48F8-704A-CA1-0-0-75F-1015-static.midco.net) (Client Quit)
[20:20:46] *** Quits: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com) (Client Quit)
[20:21:15] *** Joins: chenxuezhao (~chenxuezh@120.244.238.36)
[20:21:28] <ditto_irl> just found out from a friend that his rubymine bug has been Won't Fix since 2014 and they never fixed it
[20:21:44] *** Joins: molson (~michael@2001-48F8-704A-CA1-0-0-75F-1015-static.midco.net)
[20:21:49] <ditto_irl> (the bug is that it treats globals from files imported with `require` as if they don't exist)
[20:22:04] <ditto_irl> it's the same company behind intellij/kotlin so I wonder if they're going to say the same thing about my parentheses
[20:23:23] *** Quits: molson (~michael@2001-48F8-704A-CA1-0-0-75F-1015-static.midco.net) (Client Quit)
[20:23:40] <Sqaure> rubymine? is that like ruby on rails?
[20:23:47] <ditto_irl> uhh don't know
[20:23:56] *** Joins: molson (~michael@2001-48F8-704A-CA1-0-0-75F-1015-static.midco.net)
[20:23:57] <ditto_irl> I believe it's a rails IDE
[20:24:03] <Sqaure> ah ok
[20:24:27] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[20:24:38] <ditto_irl> oh I got an even smaller minimal working example
[20:24:45] <ditto_irl> `var x = ((true)) or true` will do it
[20:24:54] <ditto_irl> `(true) or true` won't
[20:25:02] *** Joins: Andalu30 (~andalu30@85.137.21.37.dyn.user.ono.com)
[20:25:03] <Sqaure> I was forced to use ruby for 2 years. I never got into it. It felt as if there were too many ways to do the same thing. Also I struggled with finding/understanding the documentation
[20:25:13] *** Quits: molson (~michael@2001-48F8-704A-CA1-0-0-75F-1015-static.midco.net) (Client Quit)
[20:25:21] <euouae> when was that Sqaure 
[20:25:32] <Sqaure> 2011ish
[20:25:46] *** Quits: chenxuezhao (~chenxuezh@120.244.238.36) (Ping timeout: 260 seconds)
[20:25:48] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi)
[20:25:51] *** Joins: molson (~michael@2001-48F8-704A-CA1-0-0-75F-1015-static.midco.net)
[20:26:02] *** Joins: gitgooood (~gitgood@host-78-145-137-41.as13285.net)
[20:26:28] <euouae> I wonder if they have improved perhaps Sqaure, I think ruby still enjoys popularity
[20:27:13] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[20:27:35] <Sqaure> A language being pooular has never implied its good. Just my experience
[20:27:40] *** Parts: molson (~michael@2001-48F8-704A-CA1-0-0-75F-1015-static.midco.net) ()
[20:28:04] <euouae> OK true :) 
[20:28:45] *** Joins: zaher (~zaher@37.48.188.5)
[20:29:04] <ditto_irl> anyway the first response on my bug was CNR so I'm probably going to have fun
[20:29:22] <ditto_irl> I could probably install intellij on a VM or something
[20:29:29] *** Joins: nitro (~nitro@c-73-165-183-88.hsd1.pa.comcast.net)
[20:29:41] *** Joins: molson (~michael@2001-48F8-704A-CA1-0-0-75F-1015-static.midco.net)
[20:29:58] *** Quits: nitro__ (~nitro@c-73-165-183-88.hsd1.pa.comcast.net) (Ping timeout: 260 seconds)
[20:30:10] *** Quits: molson (~michael@2001-48F8-704A-CA1-0-0-75F-1015-static.midco.net) (Remote host closed the connection)
[20:30:43] *** Joins: molson (~michael@2001-48F8-704A-CA1-0-0-75F-1015-static.midco.net)
[20:30:50] *** Quits: zaher_ (~zaher@37.48.177.114) (Ping timeout: 252 seconds)
[20:31:07] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[20:31:35] *** Quits: molson (~michael@2001-48F8-704A-CA1-0-0-75F-1015-static.midco.net) (Client Quit)
[20:31:48] *** Joins: molson (~michael@2001-48F8-704A-CA1-0-0-75F-1015-static.midco.net)
[20:31:59] <ditto_irl> hmmm
[20:32:11] <ditto_irl> do I want to spend $100 just to prove that the issue even occurs on a fresh install of intellij
[20:32:20] <ditto_irl> I would of course be using hyper-v for other things
[20:32:25] *** Joins: molson__ (~michael@2001-48F8-704A-CA1-0-0-75F-1015-static.midco.net)
[20:32:48] *** Joins: hexfive (~eric@50.35.83.177)
[20:32:48] *** Quits: hexfive (~eric@50.35.83.177) (Client Quit)
[20:33:33] <pikapika> pyzozord, https://en.wikipedia.org/wiki/Gombe_Chimpanzee_War
[20:33:34] <bayaz> Title: Gombe Chimpanzee War - Wikipedia 
[20:33:36] *** Quits: molson__ (~michael@2001-48F8-704A-CA1-0-0-75F-1015-static.midco.net) (Client Quit)
[20:33:54] *** Quits: molson_ (~michael@2001-48F8-704A-CA1-0-0-75F-1015-static.midco.net) (Quit: Leaving)
[20:34:00] *** Quits: molson (~michael@2001-48F8-704A-CA1-0-0-75F-1015-static.midco.net) (Client Quit)
[20:34:47] *** Quits: System123 (~System123@2c0f:f4c0:2202:6b94:9580:2b3e:eee5:e946) (Remote host closed the connection)
[20:34:56] *** Joins: molson (~molson@2001-48F8-704A-CA1-0-0-75F-1015-static.midco.net)
[20:38:10] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:39:35] <pyzozord> pikapika: I'm not sure what do you mean
[20:39:49] <pikapika> pyzozord, its an interesting event
[20:39:50] *** Joins: sivert (~sivert@2601:144:100:f6a0:81bc:53f4:3c7a:71d1)
[20:40:36] <pyzozord>  I guess if you are interested in primates, sure why not
[20:41:56] *** Joins: vysn (~vysn@user/vysn)
[20:42:16] *** Joins: arcatech (~arcatech@user/arcatech)
[20:45:14] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:174:54c4:aee:8a7c) (Remote host closed the connection)
[20:45:42] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:174:54c4:aee:8a7c)
[20:48:04] *** Joins: arahael (~arahael@203.221.121.242)
[20:48:15] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:174:54c4:aee:8a7c) (Remote host closed the connection)
[20:48:27] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:174:54c4:aee:8a7c)
[20:48:53] *** Quits: jokoon (~eio@2a01:e0a:542:e160:a0f3:95ed:e5f8:63f0) (Quit: Leaving)
[20:49:04] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[20:50:48] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:174:54c4:aee:8a7c) (Remote host closed the connection)
[20:50:48] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:174:54c4:aee:8a7c)
[20:50:48] <gitesh> while programming if i think about lot of things happening i get discourage or confuse
[20:51:22] *** Joins: Shiva (~LordShiva@user/one39dev)
[20:51:39] *** Quits: absc (~absc@dynamic-adsl-94-34-168-109.clienti.tiscali.it) (Quit: Leaving.)
[20:53:18] *** Quits: One39Dev (LordShiva@user/one39dev) (Ping timeout: 260 seconds)
[20:54:51] *** Quits: numsima (~numsima@101.175.64.73) (Quit: Client closed)
[20:54:59] *** Quits: lalitmee_ (~lalitmee@180.94.32.27) (Quit: Leaving)
[20:55:10] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:174:54c4:aee:8a7c) (Ping timeout: 260 seconds)
[20:59:12] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[21:00:03] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:00:06] *** Joins: Tazy (~Tazmainia@102.39.90.151)
[21:02:16] <ditto_irl> I have decided to install VMWare Workstation 16 Player for this
[21:02:26] <ditto_irl> I wonder if IntelliJ can even run with 2 GB of RAM...
[21:02:54] *** Joins: glguy_ (x@libera/staff/glguy)
[21:03:32] <ditto_irl> ahaha, delightful! It actually pulled my desktop background from microsoft servers, so the desktop background is the same!
[21:04:02] *** Quits: Shiva (~LordShiva@user/one39dev) (Ping timeout: 260 seconds)
[21:04:15] *** Quits: glguy (x@libera/staff/glguy) (Read error: Connection reset by peer)
[21:05:26] *** Quits: Izem (~Izem@8.6.144.177) (Ping timeout: 260 seconds)
[21:05:40] *** Quits: inky_ (~inky@5.77.199.77) (Ping timeout: 265 seconds)
[21:08:14] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[21:09:10] *** Quits: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[21:09:22] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[21:11:07] *** Joins: One39Dev (~LordShiva@user/one39dev)
[21:16:27] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa)
[21:18:51] <ditto_irl> haha, vindication! A fresh install of IntelliJ IDEA has exactly the same problem!
[21:19:03] <ditto_irl> wait
[21:19:08] <ditto_irl> I spoke too soon and got myself confused
[21:19:22] <ditto_irl> I have not tested in the VM yet, I was looking in the wrong window
[21:19:38] *** Quits: larryba (~bc8165b6@217.29.117.252) (Quit: http://www.okay.uz/ (Session timeout))
[21:21:41] *** Quits: hegstal (~hegstal@2a02:c7f:7608:d400:8959:ed5e:30f7:362a) (Remote host closed the connection)
[21:22:23] <pyzozord> Lisp does not use Reverse Polish Notation?
[21:22:25] <ditto_irl> hm this is weird
[21:22:37] <ditto_irl> pyzozord: no idea sorry
[21:22:42] <pyzozord> I was convinced it does, but I'm not sure anymore
[21:22:42] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Ping timeout: 260 seconds)
[21:22:55] <ditto_irl> I would think it did?
[21:23:04] *** glguy_ is now known as glguy
[21:23:47] <GeDaMo> Lisp uses Polish Notation
[21:23:52] <pyzozord> reverse polish notation is a postfix so (operand operand operator), but that's not what lisp does
[21:23:55] <GeDaMo> Or at least a variant of it
[21:24:16] <ditto_irl> task manager on my computer says 68% of my memory is in use but the highest memory usage is discord at 392 MB, but in performance it says 10.7 GB are in use, and in the VM it says 85%/1.3GB/total of 3.5GB
[21:24:34] <pyzozord> yes the lisp I am familiar with uses (operator operand operand), that would be the Polish Notation
[21:24:38] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:25:07] <GeDaMo> Forth uses RPN
[21:25:25] <ditto_irl> oh that's polish notation, not reverse polish notation
[21:25:32] <ditto_irl> I was thinking (operator operand operand) too
[21:26:05] <pyzozord> yeah I got them confused, I just realized
[21:26:39] <ditto_irl> also I'm having new and exciting problems, namely that gradle is having a suspiciously difficult time building my test project with one .kt file
[21:26:59] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Quit: leaving)
[21:27:01] *** Joins: Mrbungle6661 (~MrBungle@2604:3d08:1788:dc00:90b8:1310:c52b:43cf)
[21:27:26] <pyzozord> the whole kotlin thing seems unstable to me. At least that was my first impression few years ago, and new again
[21:27:56] <pyzozord> the first buggy programming language I ever saw
[21:28:00] *** Mrbungle6661 is now known as MrBungle
[21:28:44] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:34:00] <ditto_irl> ok NOW I got it to hang the code inspections in a VPM
[21:34:03] <ditto_irl> VM*
[21:34:17] <ditto_irl> just `val x = ((true)) || false` is enough
[21:34:48] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[21:36:15] *** Quits: gitgooood (~gitgood@host-78-145-137-41.as13285.net) (Ping timeout: 260 seconds)
[21:38:01] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:174:54c4:aee:8a7c)
[21:38:34] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Remote host closed the connection)
[21:39:44] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[21:40:00] *** Joins: Pickchea (~private@user/pickchea)
[21:42:55] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:174:54c4:aee:8a7c) (Ping timeout: 252 seconds)
[21:43:20] *** Joins: independent56 (~independe@51.15.0.88)
[21:44:22] <pyzozord> interesting, looks like haskall is really the same performance as lisp, java and go https://benchmarksgame-team.pages.debian.net/benchmarksgame/download/fastest.svg
[21:44:22] <bayaz> Type: image/svg+xml Size: 11.6 kB 
[21:45:03] <pyzozord> they say lisp is so slow and go so fast, and it actually looks like they are kind of the same for the most part
[21:45:20] <pyzozord> also bothers me to see c++ faster than c
[21:45:34] <pyzozord> I think few years ago c was faster on the same graph actually 
[21:46:09] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[21:46:22] <ditto_irl> What exactly is this measuring? Is this using a specific benchmark program written in each of those languages?
[21:46:38] <pyzozord> https://benchmarksgame-team.pages.debian.net/
[21:46:41] *** CP-400 is now known as SuperNintendo
[21:46:52] <pyzozord> sorry, https://benchmarksgame-team.pages.debian.net/benchmarksgame/
[21:46:52] <bayaz> Title: Which programming language is fastest? | Computer Language Benchmarks Game 
[21:47:15] <ditto_irl> ah I see
[21:47:50] *** Quits: One39Dev (~LordShiva@user/one39dev) (Ping timeout: 252 seconds)
[21:48:07] *** Joins: rtypo (~alex@user/rtypo)
[21:48:35] *** Quits: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net) (Quit: Leaving)
[21:49:10] *** Quits: vpw (~vpw@122.172.198.151) (Ping timeout: 265 seconds)
[21:49:35] *** Joins: One39Dev (~LordShiva@user/one39dev)
[21:50:20] *** Joins: gitgooood (~gitgood@host-78-145-137-41.as13285.net)
[21:51:38] *** Joins: independent_ (~independe@95.144.68.39)
[21:51:43] *** Quits: independent56 (~independe@51.15.0.88) (Read error: Connection reset by peer)
[21:52:28] <ditto_irl> would someone who isn't me please try the following kotlin code in intellij to see if this is something wrong with my environment somehow: `val x = ((true)) or false`
[21:52:38] <ditto_irl> not that you're obligated to do it if you think it's a security risk
[21:53:08] <ditto_irl> What happens is until the line is commented out, code inspection will stop processing the file at the moment it determines that there are two redundant parentheses
[21:53:31] <ditto_irl> I don't know how much inspection is prevented by this code
[21:53:44] *** Parts: kerberos (~jezavala@187-177-34-208.dynamic.axtel.net) (Leaving)
[21:54:33] *** Quits: xSavitar (~xSavitar@user/xsavitar) (Quit: ZNC 1.9.x-git-141-9cd36055 - https://znc.in)
[21:54:50] *** Quits: pizdets_ (~pizdets@183.182.115.101) (Ping timeout: 250 seconds)
[21:55:11] *** Joins: pizdets (~pizdets@183.182.111.101)
[21:55:50] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 260 seconds)
[22:00:17] *** Quits: va5c0 (~vasco.nun@95.148.139.46) (Ping timeout: 265 seconds)
[22:00:25] <independent_> For secret logins, is acronym obsufication a good idea ("i would like some peppermint tea and coffe please" --> "iwlsptacp")? It looks random to the unsupecting.
[22:01:08] <ditto_irl> I've done it before but I don't know how good an idea it is
[22:01:19] *** Quits: One39Dev (~LordShiva@user/one39dev) (Remote host closed the connection)
[22:01:44] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (Quit: leaving)
[22:01:46] <independent_> It seems like a nice idea. Nobody but the source sentence owner can retrieve thepassword easily.
[22:01:51] <ditto_irl> My passwords usually contain 4 letters chosen by diceware, two words chosen by diceware, and then whatever symbol or numbers I need
[22:02:09] <oldlaptop> pyzozord: Those error bars are so big I'm not sure I'm comfortable calling C++ "faster" than C, or (say) Pascal faster than OCaml, based on those data
[22:02:15] <ditto_irl> I assume it's less secure that way but it takes less effort to memorize3 and it's faster to type that way
[22:02:19] <oldlaptop> (https://benchmarksgame-team.pages.debian.net/benchmarksgame/download/fastest.svg)
[22:02:46] *** Joins: farmstatejake (~farmstate@user/farmstatejake)
[22:03:27] <independent_> eh, remembering a sentence seems a lot easier then "wait... was it 1 or i?"
[22:03:44] <independent_> And ha, a torturial is so server-oriented it says "install the sudo package" XD
[22:04:27] <oldlaptop> or would you really call perl "faster than ruby" from this? https://benchmarksgame-team.pages.debian.net/benchmarksgame/download/fastest-more.svg
[22:04:27] <bayaz> Type: image/svg+xml Size: 9.1 kB 
[22:05:26] *** Quits: Andalu30 (~andalu30@85.137.21.37.dyn.user.ono.com) (Ping timeout: 252 seconds)
[22:07:20] *** Joins: Izem (~Izem@8.6.144.177)
[22:09:34] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[22:09:36] <pyzozord> oldlaptop: yeah even on that site they have a whole lot of disclaimers about artificial benchmarks etc
[22:09:57] <pyzozord> still better benchmark than I can conduct on my own ever
[22:10:07] * oldlaptop still hasn't forgiven the weasels for getting rid of the tcl category
[22:10:16] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Client Quit)
[22:10:30] <pyzozord> was tcl in there?
[22:10:35] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[22:10:40] <pyzozord> Oh yeah I think it might have been there few years ago
[22:10:54] <pyzozord> I've been checking this benchmarkgame site for at least 5 years now
[22:11:22] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (Quit: leaving)
[22:11:27] <kline> why?
[22:11:40] *** Joins: farmstatejake (~farmstate@user/farmstatejake)
[22:12:04] <pyzozord> just curious to get a rough idea about a language
[22:12:29] <kline> i dont think the benchmark game does much for you there
[22:12:43] <oldlaptop> It would be in approximately the same performance class as python, perhaps a bit better if the programs are carefully written, and *way* worse if they're incorrectly written (e.g. failure to brace expressions stops them from being byte-compiled, passing plain code around without using the new [apply] bypasses the byte-compiler, etc)
[22:13:44] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[22:13:49] *** Quits: irado (~irado@177.12.221.61) (Ping timeout: 265 seconds)
[22:14:01] <oldlaptop> ...all of which implies that a "benchmark game" would be able to portray a pretty inaccurate view of what idiomatic tcl code will behave like; I'm sure there is similar room for error in other languages
[22:14:03] <kline> the benchmarks game is about how fast you can make an exemplar program, not what is idiomatic or common in a language
[22:14:27] <kline> benchmark game entries are not representative programs for the language they are written in
[22:14:39] <pyzozord> oldlaptop: I know that about 3 years ago I checked out go and one of the test was an outlier, I checked out the code and they have implemented regexp maching or something like that directly in go, as compared to python example which was using a library. So I'm quite sure there are problems in the tests
[22:14:41] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[22:14:47] *** Quits: zaher (~zaher@37.48.188.5) (Ping timeout: 252 seconds)
[22:15:05] *** Joins: irado (~irado@177.12.221.61)
[22:15:24] <pyzozord> still much better than I could do myself
[22:15:32] <oldlaptop> kline: in the case I'm talking about the "idiomatic" way is the fast way; that is, failure to use the common idioms will cause the program to be slower
[22:15:43] <Quietwalker> Hmm. What's a good idiom for the concept of "You are all acting very busy and working very hard like you have a solution to a problem, but the reality is you have no plan, no idea what you're doing, you're just being busy for no reason, and you will not arrive at a solution doing what you're doing."
[22:16:05] <oldlaptop> Quietwalker: They're drunks looking for their car keys under the street lamp?
[22:16:06] <kline> Quietwalker, headless chickeens
[22:16:30] *** Quits: rany (~rany@user/rany) (Ping timeout: 260 seconds)
[22:16:31] <kline> https://www.collinsdictionary.com/dictionary/english/run-around-like-a-headless-chicken-rush-around-like-a-headless-chicken
[22:16:32] <bayaz> Title: Run around like a headless chicken/rush around like a headless chicken definition and meaning | Collins English Dictionary 
[22:17:14] <pyzozord> Quietwalker: "I think you guys are following a robust stochastic strategy, but I think we can apply a more guided plan" :P
[22:17:59] <kline> the idea being that there is lots of frantic activity, but no brain involved - that stopping for 2 mins to think out a plan and then execute it will save you effort overall
[22:18:02] *** Joins: xSavitar (~xSavitar@kinserve.com)
[22:18:26] *** xSavitar is now known as Guest8793
[22:18:38] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[22:20:37] *** Joins: akevinhuang (~thekevinh@user/thekevinhuang)
[22:20:41] <ditto_irl> oh no I got retweeted
[22:21:11] <ditto_irl> I wanted to spread the word about the bug so if people have the same issue they know how to fix it
[22:21:26] <ditto_irl> I hope I'm not being retweeted just to shame jetbrains
[22:24:14] *** Quits: astroid (astroid@user/astroid) (Remote host closed the connection)
[22:24:14] *** Quits: paulo (paulo@user/paulo/x-9032687) (Remote host closed the connection)
[22:24:14] *** Quits: Scarecr0w (scarecr0w@user/scarecr0w) (Remote host closed the connection)
[22:24:14] *** Quits: sandman13 (sandman13@jujube.ircnow.org) (Remote host closed the connection)
[22:25:23] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:26:09] *** Quits: motherr (~motherr@user/motherr) (Quit: zzz)
[22:30:22] *** Quits: hexingb (~hexingb@2409:8900:152d:bcc1:f430:3c56:9ee2:5ae1) (Ping timeout: 260 seconds)
[22:32:11] *** Quits: euouae (~euouae@user/euouae) (Ping timeout: 265 seconds)
[22:35:17] *** Joins: astroid (astroid@astroid.jujube.ircnow.org)
[22:35:17] *** Quits: astroid (astroid@astroid.jujube.ircnow.org) (Changing host)
[22:35:18] *** Joins: astroid (astroid@user/astroid)
[22:35:36] *** Joins: System123 (~System123@2c0f:f4c0:2202:6b94:9580:2b3e:eee5:e946)
[22:37:07] <ditto_irl> hmm
[22:37:09] *** Quits: Klinda (~klinda@2.227.251.209) (Quit: Leaving)
[22:37:21] <ditto_irl> if I can profile this program I can figure out what thread is causing this problem
[22:38:02] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[22:39:41] *** Joins: Caffeinated (~Caffeine@user/alexdelarge)
[22:39:47] <ditto_irl> I've never had to do this before so I don't know where to go next
[22:40:10] *** Quits: System123 (~System123@2c0f:f4c0:2202:6b94:9580:2b3e:eee5:e946) (Ping timeout: 260 seconds)
[22:41:53] *** Joins: euouae (~euouae@user/euouae)
[22:42:28] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[22:46:17] <ditto_irl> I don't even know if it's java code that has the issue
[22:49:01] *** Joins: chenxuezhao (~chenxuezh@120.244.238.36)
[22:49:20] *** Guest8793 is now known as xSavitar
[22:49:27] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Remote host closed the connection)
[22:49:36] *** Quits: xSavitar (~xSavitar@kinserve.com) (Changing host)
[22:49:36] *** Joins: xSavitar (~xSavitar@user/xsavitar)
[22:49:37] *** Joins: paulo (paulo@user/paulo/x-9032687)
[22:49:42] *** Quits: SmokenatorZ (~Smokenato@152.249.182.2) (Quit: Screw you guys, im going home)
[22:49:55] *** Joins: sandman13 (sandman13@sandman13.jujube.ircnow.org)
[22:50:04] *** Joins: Scarecr0w (scarecr0w@user/scarecr0w)
[22:53:22] *** Joins: SmokenatorZ (~Smokenato@152.249.190.64)
[22:53:53] *** Joins: Amadiro (~Amadiro@84.209.11.12)
[22:54:34] *** Quits: chenxuezhao (~chenxuezh@120.244.238.36) (Quit: Leaving...)
[22:55:28] *** Joins: rany (~rany@user/rany)
[22:57:10] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[22:58:17] *** Joins: inky_ (~inky@89.249.195.33)
[22:58:17] <ditto_irl> would it be easier to debug the running process if I did it on linux?
[22:58:28] *** Joins: Andalu30 (~andalu30@85.137.21.37.dyn.user.ono.com)
[22:59:46] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[22:59:52] *** Parts: Guest4244 (birkoff@birkoff.thunderirc.net) (WeeChat 3.0.1)
[23:01:33] <Izem> does a printer require other cartridges to be non empty if I am printing in black and white with a full black cartridge?
[23:01:44] <Izem> basic colour theory would say no ...
[23:01:55] *** Joins: motherr (~motherr@user/motherr)
[23:02:21] <GeDaMo> It has nothing to do with colour theory and everything to do with profit :P
[23:04:00] <Izem> ah man I suspected as much :/
[23:04:18] <Izem> ah well guess I'm buying yellow ink tomorrow
[23:04:42] <Izem> I'm also wondering, why does a user need a file manager anyways?
[23:05:39] <Izem> or in another way, what structre is good for organizing files/objects?
[23:06:27] <Amadiro> Izem, newer systems like android and ios go away from the concept of having file managers and organizing them into a tree-structure -- file managers still exist, but are not the main way the user interacts with their files anymore
[23:06:45] <Amadiro> instead you have a gallery for anything photo-like or video-like etc
[23:06:54] <Izem> interesting
[23:08:01] *** Joins: vicfred (~vicfred@user/vicfred)
[23:08:20] <Izem> e.g. if I want to print a pdf, that typically means opening the pdf which can happen two ways, from the pdf viewer itself or from a file manager and then using the application to print
[23:09:08] <Izem> which seems to suggest the location of the files doesn't matter, and in this case you also just want pdfs not all files
[23:09:25] <Amadiro> the question is, when the user opens the pdf manager, how do you let them navigate to the pdf they are interested in
[23:09:44] <Amadiro> if you just show all PDFs that exist on the system, it's probably not gonna be a great experience
[23:09:55] <Izem> true
[23:10:36] <Izem> in any case I suspect there may be a better alternative than a tree
[23:11:36] <Izem> the other difficult question is archives, when the user wants to create an archive and send that to someone would that be the archiver or file manager?
[23:11:49] <Izem> and trying to imagine what that looks like is difficult too
[23:12:59] <Amadiro> one alternative to trees is tags, which means an item can be in multiple "folders" at the same time
[23:13:06] <Amadiro> (tags can still have a nesting hierachy if you want)
[23:13:53] <Izem> I've had this idea of using the concept of a map (physical locations) or a literal virtual workspace that is very visuall oriented
[23:13:57] <Amadiro> creating an archive is perhaps something that could happen transparently to the user -- why should the user be bothered with creating an archive, when what the user really wants is to transmit files to someone else?
[23:14:33] <Izem> good point
[23:14:46] *** Quits: Andalu30 (~andalu30@85.137.21.37.dyn.user.ono.com) (Quit: Konversation terminated!)
[23:15:28] <Izem> I'd like to keep these abstractions at various levels if possible, but maybe that isn't possible
[23:15:50] <Izem> e.g. what if you really want an archive?
[23:16:23] *** Joins: Narrat (~omnius@p200300df5f01ca2806ea56fffe2e7cdc.dip0.t-ipconnect.de)
[23:17:52] *** Joins: eXistenZ (~biskit@bzq-109-66-141-189.red.bezeqint.net)
[23:18:22] *** Joins: dcand (~dcand@user/dcand)
[23:19:10] <Amadiro> That's the tricky part -- old users will always tell you "we need these old things because they're essential to interface with the old ways of doing things" but also allowing this will drag you down and hold you back from thinking differently
[23:19:16] <Amadiro> so you have to strike a balance (or not)
[23:19:37] <Izem> you might not be an older user, but a system user as well
[23:19:37] *** Quits: zwr (~zwr@2804:d45:b966:fb00:d30:1233:92c9:30ff) (Remote host closed the connection)
[23:19:44] <ditto_irl> Izem: This is actually late but printers will sometimes use colors for advanced anti-aliasing (not sure the actual word) around the edges of printed text. There should be a "purely black and white" mode that tells the printer not to use colors in this way.
[23:20:05] <Izem> ditto_irl: yeah I selected that mode I'm sure
[23:20:25] <Izem> in the print app itself I don't see a configuration for monocrhome though
[23:20:29] *** Joins: Aye (jeda@hellomouse/dev/cryb.jeda)
[23:20:42] *** Joins: Rounin (~david@84.212.130.215)
[23:20:49] <ditto_irl> uhh this would be hard to debug without seeing your screen
[23:21:00] <ditto_irl> I'm not saying it's possible to print without colors
[23:21:05] <Izem> oh no I got it
[23:21:13] <Izem> I needed to get to another dialog
[23:21:23] <ditto_irl> I'm just saying that printers do actually need a bit of color ink in order to print if they're not in monochrome mode
[23:21:25] <Amadiro> ditto_irl, I know screens do this but I've never heard of printers doing it
[23:22:21] <Izem> no, still nothing :/
[23:22:21] <dcand> can i run programs stored in subdir of a dir in $PATH
[23:23:07] *** Joins: pizdets_ (~pizdets@183.182.115.101)
[23:23:10] <ditto_irl> hmm... having some problems with my "install linux on a VM" idea
[23:23:17] <euouae> dcand sure, in which language?
[23:23:32] *** Quits: pizdets (~pizdets@183.182.111.101) (Ping timeout: 252 seconds)
[23:23:39] <euouae> dcand OH you're asking if PATH is recursive? you have to specify the name, like foo/bar to run 'bar' under $PATH/foo I believe
[23:23:43] <Izem> dcand: I don't think so
[23:24:02] <Izem> should just be programs in dir
[23:26:02] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:26:56] <ditto_irl> lol
[23:27:04] <ditto_irl> "Something went wrong and we can't continue. This should never happen."
[23:27:10] *** Joins: Mr_Bungle (~MrBungle@2604:3d08:1788:dc00:5e6:dd7d:c32d:e9f0)
[23:27:14] <ditto_irl> always fun to get an error message the devs say should be impossible
[23:27:47] <ditto_irl> all this just to verify that an issue occurs on linux as well as windows, smh
[23:27:57] <Izem> popular distros are pretty easy to install
[23:27:59] <ditto_irl> no one even asked me to do this, I just thought I'd do it preemptively
[23:28:18] *** Joins: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net)
[23:28:28] <ditto_irl> I supposedly installed slax to the virtual hard drive of this VM, but when it goes "Looking for slax data in /slax ......" it never finds it
[23:28:33] <Izem> you can try #linux for more help
[23:28:37] <ditto_irl> if I actually wanted slax help I'd find a slax specific IRC channel
[23:28:38] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[23:28:44] <ditto_irl> I'm just sharing amusing anecdotes
[23:29:13] <Izem> nice non traditional root dir :P
[23:29:31] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa)
[23:30:29] *** Quits: novns (~novns@user/novns) (Quit: ZNC 1.8.2 - https://znc.in)
[23:30:59] *** Joins: novns (~novns@user/novns)
[23:31:05] <wedr> We need a new root directory other than /
[23:31:31] <wedr> Let me recommend one:  The ? directory
[23:31:38] *** Quits: dcand (~dcand@user/dcand) (Ping timeout: 265 seconds)
[23:32:18] *** Joins: dcand (~dcand@user/dcand)
[23:32:23] <pyzozord> ahh finally fixed alt+backspace, that was bugging me some
[23:32:40] <pyzozord> apparently what I expect as backspace is not normally backspace
[23:32:44] <dcand> i saw 9front's man page for git  lists git commands as git/subcommand
[23:32:50] <wedr> What did you really do? Swapped input methods?
[23:32:58] *** Quits: Aye (jeda@hellomouse/dev/cryb.jeda) (Quit: //System Offline//)
[23:32:58] <wedr> pyzozord, ^
[23:33:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:33:56] <pyzozord> no, I have custom map, I match the keys against it, and if there is match I just send the replacement escape code instead
[23:34:15] <pyzozord> was tough to hunt this one down though
[23:35:30] <EdwardIII> wedr: so true. I realise you're joking a bit but it always confuses noobs. The "root" dir / Vs  /root
[23:36:16] <wedr> Ah yes, the fabled root named directory and the actual tree root directory
[23:36:30] <wedr> We should've called / the "tree root" directory
[23:36:35] <wedr> Or "troot"
[23:37:35] <pyzozord> heh I realized I don't really talk about the "root" directory I always text about it
[23:38:18] <InPhase> EdwardIII: "/root" is not "the root directory".  It's "slash root" out loud.  :)
[23:38:26] <Amadiro> I usually call /root "roots home" when it comes up in conversations
[23:38:36] <Amadiro> which is... rarely
[23:38:53] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[23:38:58] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[23:39:35] <InPhase> Although when it comes time to talk about root's home directory with respect to the root directory on the root node of the cluster, it's clear there are too many roots.
[23:39:35] *** Joins: Crescendo (~Crescendo@user/crescendo)
[23:40:07] <wedr> This is "Requiem"!
[23:40:48] <pyzozord> we need to get to the root of this
[23:41:42] <edgar-rft> don't reboot - be root!
[23:41:48] <pulse> if something is programmable, it is probably also slammable
[23:42:43] *** Joins: Aye (jeda@hellomouse/dev/cryb.jeda)
[23:42:52] <wedr> troot troot! Here comes the root train
[23:43:09] <EdwardIII> Pimp my infra with xibit
[23:43:11] *** Joins: System123 (~System123@165-73-115-78.ip.afrihost.capetown)
[23:43:50] *** Quits: rtypo (~alex@user/rtypo) (Quit: WeeChat 3.2)
[23:43:51] *** Joins: password8 (~password@user/password2)
[23:45:35] *** Joins: va5c0 (~vasco.nun@95.148.139.46)
[23:45:38] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:45:39] *** Quits: independent_ (~independe@95.144.68.39) (Ping timeout: 265 seconds)
[23:45:59] <dcand> i just checked, it is feature of Plan9's shell rc
[23:46:14] <password8> \
[23:46:16] <password8> \o
[23:46:22] <dcand> subdir/prog works on rc
[23:47:24] *** Joins: Auron (~Auron956@user/auron)
[23:48:19] *** Joins: numsima (~numsima@101.175.64.73)
[23:48:27] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[23:48:45] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[23:48:46] *** Joins: Crescendo (~Crescendo@user/crescendo)
[23:50:00] <EdwardIII> I just learned about \command for the first time to run things unaliased today. Been using bash for 20 years
[23:50:23] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (Quit: leaving)
[23:50:29] <password8> ok
[23:50:29] *** Quits: va5c0 (~vasco.nun@95.148.139.46) (Ping timeout: 252 seconds)
[23:50:35] *** Joins: fdauihfu (~irado@189.40.102.36)
[23:50:36] <password8> \ was a typo on my part
[23:51:08] *** Joins: farmstatejake (~farmstate@user/farmstatejake)
[23:52:50] <EdwardIII> No no you were escaping the \n
[23:53:02] <ditto_irl> what do you mean "run things unaliased"?
[23:53:39] <password8> he means not walking
[23:53:40] *** Quits: irado (~irado@177.12.221.61) (Ping timeout: 252 seconds)
[23:53:46] <EdwardIII> https://stackoverflow.com/questions/15691977/why-start-a-shell-command-with-a-backslash/16506263
[23:53:47] <bayaz> Title: Why start a shell command with a backslash? 
[23:55:00] <cis> some guy in india tracked down my linkedin profile from a comment on some problem I'd solved on one of those leetcode-style programming practice sites, and he wants me to share my solution so he can copy-paste it to his manager who asked him to solve it. the problem is fairly difficult, and he doesn't even understand the basics of the language it's in...
[23:55:01] <ditto_irl> oh ok
[23:55:11] <ditto_irl> wat
[23:55:25] <ditto_irl> cis: that's funny and sad at the same time and I don't know if there's a word for it
[23:55:46] <EdwardIII> Potentially lucrative
[23:55:50] <cis> dishonest is another word for it
[23:56:03] <EdwardIII> Not very sustainable is it
[23:56:18] *** Quits: eXistenZ (~biskit@bzq-109-66-141-189.red.bezeqint.net) (Quit: Leaving)
[23:56:18] <ditto_irl> oh yeah forgot dishonest
[23:56:29] *** Joins: spruit11 (~quassel@2a02:a467:ccd6:1:6cc9:33fd:d92c:45c)
[23:56:36] <ditto_irl> anyway I wouldn't necessarily talk to a stranger on linkedin like that
[23:56:56] <ditto_irl> I'm actually thinking of deleting my linkedin account because all it does is expose me to weird social engineering attacks I've never heard of
[23:57:01] <cis> it sounded like he just needed some help with it at first
[23:57:38] <Izem> so much for privacy
[23:58:19] *** Joins: System12_ (~System123@ec2-52-61-197-79.us-gov-west-1.compute.amazonaws.com)
[23:59:05] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
