[00:00:48] *** Quits: notepad (~notepad@129.159.46.243) (Quit: The Lounge - https://thelounge.chat)
[00:01:19] *** Joins: notepad (~notepad@129.159.46.243)
[00:01:23] *** Quits: notepad (~notepad@129.159.46.243) (Client Quit)
[00:01:24] *** Quits: prophet60091____ (~prophet60@83.97.23.20) (Ping timeout: 258 seconds)
[00:01:25] *** Quits: chripell (~chripell@109.255.230.3) (Ping timeout: 258 seconds)
[00:01:48] *** Joins: notepad (~notepad@129.159.46.243)
[00:02:22] *** Quits: notepad (~notepad@129.159.46.243) (Client Quit)
[00:02:46] *** Joins: notepad (~notepad@129.159.46.243)
[00:04:53] *** Quits: rgl (~rgl@bl12-47-147.dsl.telepac.pt) (Remote host closed the connection)
[00:10:49] *** Quits: zwr (~zwr@2804:d45:b966:fb00:11aa:62a6:6c3b:c774) (Remote host closed the connection)
[00:11:29] *** Quits: notepad (~notepad@129.159.46.243) (Quit: The Lounge - https://thelounge.chat)
[00:12:30] <LambdaComplex> A_Dragon: to design a program from scratch, you must first create the universe
[00:12:46] *** Joins: notepad (~notepad@129.159.46.243)
[00:13:06] <A_Dragon> import universe; universe = Universe()
[00:13:08] <A_Dragon> done
[00:13:09] *** Quits: notepad (~notepad@129.159.46.243) (Client Quit)
[00:13:14] <A_Dragon> s/Universe/universe.Universe
[00:14:37] *** Joins: notepad (~notepad@129.159.46.243)
[00:15:25] <LambdaComplex> s/=/:=/ ?
[00:15:34] <toretto> yeah, i was about to mention that
[00:15:41] <toretto> you're fast, LambdaComplex :D
[00:15:42] <A_Dragon> python not go
[00:15:53] * LambdaComplex looks at the channel name
[00:15:55] <A_Dragon> import is wrong for go too
[00:15:57] <LambdaComplex> weird flex but ok
[00:15:57] <A_Dragon> true
[00:16:15] <toretto> LambdaComplex: A_Dragon is too cool to accept the error :P
[00:16:22] <A_Dragon> import "Universe"; u := universe.New(); go u.Start(context.Background())
[00:16:50] <LambdaComplex> isn't directly passing a background context frowned upon?
[00:16:55] <LambdaComplex> or did i misread something yesterday
[00:16:58] <A_Dragon> depends on what you want to do
[00:17:03] <A_Dragon> generally yes because you cant stop it
[00:17:14] <A_Dragon> if you dont know what context to use you should use TODO not Background
[00:17:26] <LambdaComplex> sounds right
[00:17:31] <LambdaComplex> >A function that is never request-specific may use context.Background(), but err on the side of passing a Context even if you think you don't need to. The default case is to pass a Context; only use context.Background() directly if you have a good reason why the alternative is a mistake.
[00:18:16] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Ping timeout: 258 seconds)
[00:18:31] <LambdaComplex> cmon A_Dragon what if we need to cancel the universe >:(
[00:18:48] <A_Dragon> LambdaComplex: panic()
[00:19:03] <LambdaComplex> this API is terrible
[00:19:06] * LambdaComplex isn't surprised
[00:19:27] <A_Dragon> technically the API is fine
[00:19:30] <A_Dragon> its the user making a mess
[00:19:32] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[00:20:38] <LambdaComplex> oh hey this reminds me: can someone link me to a good guide on using context values?
[00:20:48] <A_Dragon> almost never
[00:20:49] <LambdaComplex> because i have never done that before so my mental model of how that all works is surely lacking
[00:20:55] <LambdaComplex> A_Dragon: ?
[00:21:03] <A_Dragon> you almost never want to use context values
[00:21:24] <LambdaComplex> well that makes me feel a bit better
[00:21:28] <LambdaComplex> ...why are they a thing though?
[00:21:38] <A_Dragon> for more specifics, you want to use them for scope specific things that need to pass opaquely though other stuff
[00:21:39] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[00:21:49] <A_Dragon> eg a calls b which calls c, where you control a and c but not b
[00:21:56] <A_Dragon> but also they're not type safe and and and
[00:22:03] <A_Dragon> I think http uses them for a few things but not much
[00:22:13] <bpalmer> one of the most cited examples I've seen is storing metadata about the context for use by, e.g., the networking machinery
[00:22:38] <bpalmer> so the context values will contain things like "what account should be charged for this traffic? What permissions do they have to access more resources?"
[00:23:21] <bpalmer> stuff that none of the things inside the functions being called should care about, but which should tag along if they make further requests.
[00:23:39] <LambdaComplex> i'd definitely be interesting in seeing an example of that if you have one handy
[00:23:46] *** Quits: strubbl8919419 (~strubbl@ipbcc107ea.dynamic.kabel-deutschland.de) (Quit: The Lounge - https://thelounge.github.io)
[00:24:08] <bpalmer> I don't, offhand; I don't think I've used them myself. That's just the sort of example I've seen given as a "good" use case.
[00:24:37] <bpalmer> (I've used frameworks like that in other languages with similar concepts, just not in go)
[00:24:39] <fizzie> https://blog.golang.org/context has a bit of an example.
[00:24:57] *** Joins: burningserenity (~burningse@2603-9001-0f01-ad99-0000-0000-0000-1005.inf6.spectrum.com)
[00:25:12] <A_Dragon> 90% of the time you control the stack for the most part and dont need to pass stuff opaquely
[00:25:12] *** Joins: strubbl8919419 (~strubbl@ipbcc107ea.dynamic.kabel-deutschland.de)
[00:26:15] <bpalmer> oh, userip is a good example; once you receive a request and start calling out to internal microservices, the notion of what IP you're talking about gets very muddy.
[00:26:21] <bpalmer> explicitly tracking it in the context makes sense.
[00:27:37] * bpalmer should maybe consider that
[00:29:37] *** Quits: c10l (~c10l@89.34.167.207) (Quit: Ping timeout (120 seconds))
[00:29:56] *** Joins: c10l (~c10l@89.34.167.207)
[00:32:41] *** Quits: c10l (~c10l@89.34.167.207) (Client Quit)
[00:33:04] *** Joins: c10l (~c10l@89.34.167.207)
[00:33:43] *** Joins: chripell (~chripell@109.255.230.3)
[00:35:09] *** Quits: davidkrauser (~davidkrau@user/davidkrauser) (Quit: Leaving)
[00:35:57] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Ping timeout: 245 seconds)
[00:37:55] <Tv_> bpalmer: more generally just tracing, i doubt the further-back-stuff really actually wants the ip, but just to correlate log entries across them all
[00:38:39] <Tv_> basically, in its simplest form: at the front-most thing, assign a random identifier to the call. pass that through *all* of the stack, make it visible in all the logs, so you can search for it, etc.
[00:39:06] *** Quits: f8l12 (~f8l12@191.96.227.65) (Ping timeout: 240 seconds)
[00:39:57] <Tv_> things like "on requests where service A hands out a 500 error, almost always it's actually caused backend B that logs an error about this-and-this, so let's fix that!"
[00:40:46] <Tv_> *caused by
[00:41:53] *** Quits: c10l (~c10l@89.34.167.207) (Ping timeout: 250 seconds)
[00:43:26] *** Quits: andlabs_ (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[00:47:59] *** Joins: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net)
[00:48:05] *** Joins: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de)
[00:49:17] *** Joins: c10l (~c10l@89.34.167.207)
[00:49:53] *** Joins: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net)
[00:57:14] *** Quits: nameless (~nameless@user/nameless) (Ping timeout: 272 seconds)
[00:57:25] *** Quits: kaleido (~adam@user/kaleido) (Ping timeout: 268 seconds)
[00:57:56] *** Quits: chripell (~chripell@109.255.230.3) (Ping timeout: 272 seconds)
[01:03:34] *** Quits: shka (~herr@109.231.62.239) (Read error: Connection reset by peer)
[01:03:54] *** Joins: shka (~herr@109.231.62.239)
[01:05:02] *** Quits: prophet60091__ (~prophet60@87.123.156.26) (Ping timeout: 258 seconds)
[01:07:37] *** Joins: agrest (~user@45.76.36.123)
[01:09:25] *** Parts: hentai (~hentai@user/hentai) (Leaving)
[01:10:32] *** Joins: chastifole (~chastifol@31.223.3.62)
[01:11:46] *** Quits: bkircher (~bkircher@2001:a61:24d6:2901:4d0a:964f:94a0:dc42) (Ping timeout: 240 seconds)
[01:14:37] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 258 seconds)
[01:15:23] *** Quits: theoceaniscool_ (~theoceani@93.177.120.45) (Ping timeout: 258 seconds)
[01:16:27] *** Joins: theoceaniscool_ (~theoceani@93.177.120.45)
[01:16:56] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 258 seconds)
[01:18:55] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[01:19:28] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 272 seconds)
[01:25:20] *** Quits: burningserenity (~burningse@2603-9001-0f01-ad99-0000-0000-0000-1005.inf6.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[01:27:40] <b0nn> 1.16.7 has been released
[01:29:37] *** Quits: chastifole (~chastifol@31.223.3.62) (Remote host closed the connection)
[01:30:24] *** Quits: tane (~tane@dslb-002-201-234-072.002.201.pools.vodafone-ip.de) (Quit: Leaving)
[01:35:30] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 240 seconds)
[01:44:59] *** Quits: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[01:45:06] *** Joins: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de)
[01:45:41] *** Quits: freswa (~freswa@2a01:4f8:1c0c:804b::2) (Quit: Bye!)
[01:45:58] *** Joins: freswa (~freswa@2a01:4f8:1c0c:804b::2)
[01:47:20] *** Quits: JPT (~jpt@classified.name) (Ping timeout: 272 seconds)
[01:48:52] *** Joins: JPT_ (~jpt@classified.name)
[01:53:32] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Ping timeout: 268 seconds)
[01:54:19] *** Joins: s-video (~s-video@2601:190:c300:3a50:2015:5917:701d:737)
[01:54:52] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[01:55:12] *** Quits: mikoto-chan (~mikoto-ch@ip-193-121-10-50.dsl.scarlet.be) (Ping timeout: 252 seconds)
[01:56:18] *** Joins: f8l12 (~f8l12@191.96.150.66)
[01:57:26] *** Quits: V (~v@anomalous.eu) (Quit: We're here. We're queer. Connection reset by peer)
[01:57:54] *** Joins: V (~v@anomalous.eu)
[02:00:38] *** Quits: theoceaniscool_ (~theoceani@93.177.120.45) (Ping timeout: 272 seconds)
[02:02:55] *** Joins: theoceaniscool_ (~theoceani@93.177.120.45)
[02:04:55] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::1005)
[02:08:07] *** Quits: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[02:09:17] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[02:13:22] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Ping timeout: 240 seconds)
[02:22:51] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::1005) (Ping timeout: 258 seconds)
[02:24:36] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[02:28:51] *** Joins: torin (~torin@cpc158497-croy28-2-0-cust45.19-2.cable.virginm.net)
[02:29:08] *** Quits: theoceaniscool_ (~theoceani@93.177.120.45) (Ping timeout: 272 seconds)
[02:29:46] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 272 seconds)
[02:30:22] *** Quits: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[02:44:32] <pjs> nice!
[02:44:54] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[02:45:00] <b0nn> I cannot find (yet) any release notes
[02:49:18] <b0nn> There's nothing mentioned on https://golang.org/doc/devel/release#go1.16.minor
[02:49:27] <b0nn> Maybe the release was a mistake?
[02:52:15] <lazyreader> nothing on golang-dev yet either
[02:52:25] <b0nn> This is the gerrit link, but I cannot see any notes on why the release https://go-review.googlesource.com/c/go/+/339451
[02:53:24] <lazyreader> https://github.com/golang/go/issues/47519
[02:55:20] <lazyreader> not listed on https://golang.org/dl/ yet
[02:55:23] <lazyreader> this is weird
[02:55:53] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[02:56:26] <b0nn> I mean, it was tagged as a release https://github.com/golang/go/releases
[02:56:39] <b0nn> Did someone f*ck up and mean to test a build?
[02:58:38] <lazyreader> it's https://github.com/toothrot if it was anyone
[02:58:50] *** Joins: jinie_ (~jimmy@188.114.173.37)
[03:01:16] <b0nn> Ok, have shone a light on the release, hopefully someone sees my post and rattles the right cage
[03:07:32] *** Quits: dr0n (~dr0n@94.11.23.235) ()
[03:08:56] <lazyreader> https://go-review.googlesource.com/c/go/+/338551 there's a commit on the branch that has a CVE attached, so maybe they decided to speed that along
[03:12:00] <b0nn> Ok, a security release to handle when a handler crashs
[03:12:08] <b0nn> changeset https://go-review.googlesource.com/c/go/+/338551/2/src/net/http/httputil/reverseproxy.go
[03:12:16] <b0nn> crashes*
[03:12:32] <lazyreader> always nice when the comment explaining the fix is longer than the fix
[03:12:39] <b0nn> LOL
[03:13:04] <b0nn> Humans need more info than the compiler does :)
[03:19:56] <lazyreader> it's not a _single_ commit, but that commit does smell like the reason this happened.
[03:20:07] <lazyreader> (in re your -nuts post)
[03:20:09] <b0nn> Aw man
[03:20:20] <b0nn> AFTER I post the wrong thing in the email
[03:20:27] <b0nn> :(
[03:20:31] <lazyreader> :(
[03:20:51] <b0nn> I put your name as the person to blame, so I'm home free ;)
[03:20:55] <lazyreader> hah!
[03:21:53] *** Quits: gueorgui (~gueorgui@user/gueorgui) (Ping timeout: 258 seconds)
[03:23:31] <b0nn> fixed
[03:24:37] <b0nn> I should have gone with refactor(): Message clean up anderroneous assertion dropped
[03:26:14] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[03:26:31] *** Quits: jinie_ (~jimmy@188.114.173.37) (Remote host closed the connection)
[03:29:43] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Quit: WeeChat 3.2)
[03:29:58] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[03:31:16] *** Quits: jsrnop (~mark@user/jsrnop) (Quit: The Lounge - https://thelounge.chat)
[03:31:39] *** Joins: jsrnop (~mark@user/jsrnop)
[03:34:58] *** Quits: s-video (~s-video@2601:190:c300:3a50:2015:5917:701d:737) (Ping timeout: 240 seconds)
[03:37:18] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[03:39:17] *** Joins: gggp_ (~gggp@60.10.194.46)
[03:42:15] <lazyreader> now I'm scrolling through the proposal-meeting minutes and marvelling at some of the more outre proposals
[03:42:17] <lazyreader> https://github.com/golang/go/issues/42713
[03:42:30] <lazyreader> this is quite the advanced paranoia on display
[03:42:37] *** Quits: reenix (~reenix@2a01:238:420e:ae00:1c37:63c1:24c0:ff75) (Remote host closed the connection)
[03:43:21] *** Quits: moto (~moto@user/moto) (Ping timeout: 258 seconds)
[03:44:55] *** Quits: revolve (~u0_a227@82-132-245-56.dab.02.net) (Read error: Connection reset by peer)
[03:46:01] <b0nn> Hmm, the proposal is that a rogue (audited) lib does bad things, but later he says that bad things could still happen (hijacking the data that internalReader points to
[03:46:38] *** Joins: revolve (~u0_a227@82-132-244-241.dab.02.net)
[03:47:39] <b0nn> I'm kind of.. Filo has the right idea, 3rd party libs can do (almost) anything in those scenarios
[03:48:03] *** Joins: gggp__ (~gggp@60.10.194.46)
[03:49:29] *** Quits: c10l (~c10l@89.34.167.207) (Ping timeout: 258 seconds)
[03:50:15] <lazyreader> yeah, "I have an external library that I'm running, that can execute arbitrary code, and _this_ is the attack they decide to go with" is way too clever
[03:50:57] <lazyreader> they've already tricked you into running their code. there's certainly easier ways to pwn you than replacing the reader on crypto/rand
[03:51:28] *** Quits: gggp_ (~gggp@60.10.194.46) (Ping timeout: 272 seconds)
[03:53:00] *** Joins: c10l (~c10l@89.34.167.207)
[03:54:59] *** Joins: moto (~moto@user/moto)
[04:06:14] *** Joins: gggp_ (~gggp@123.113.189.142)
[04:08:08] <seebs> There are, but you might *spot* those.
[04:08:35] <seebs> I would like a way to make immutables.
[04:09:12] <seebs> honestly a ton of Go's performance problems related to memory usage come down to the lack of a way to express a thing like []byte, but where you can't modify its storage, which means that any conversion between []byte and string is logically an allocation.
[04:09:27] *** Quits: gggp__ (~gggp@60.10.194.46) (Ping timeout: 250 seconds)
[04:19:30] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::1005)
[04:25:22] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::1005) (Ping timeout: 240 seconds)
[04:27:06] *** Quits: moto (~moto@user/moto) (Ping timeout: 240 seconds)
[04:27:21] *** Joins: burningserenity (~burningse@142-196-178-216.res.spectrum.com)
[04:29:13] *** Joins: moto (~moto@user/moto)
[04:30:11] *** Joins: andlabs_ (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net)
[04:30:34] *** Quits: hv99 (~hv99@wireguard/tunneler/hv99) (Quit: The Lounge - https://thelounge.chat)
[04:30:53] *** Quits: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net) (Ping timeout: 258 seconds)
[04:31:04] *** Joins: hv99 (~hv99@wireguard/tunneler/hv99)
[04:31:54] *** Joins: s-video (~s-video@2601:190:c300:3a50:c80c:1ac7:981c:1ba0)
[04:36:25] <b0nn> Is the const keyword not immutable enough?
[04:37:05] <b0nn> Or are you looking for functions that can be constants?
[04:37:06] <seebs> you can't make const things of a lot of types
[04:37:34] *** Quits: andlabs_ (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[04:37:34] <seebs> i was mostly thinking things like, say, a way to express "a slice of bytes, but not a modifiable one" as, say, a thing you could pass to a function.
[04:37:50] <seebs> so that you could make one from a string without having to copy the string's bytes into modifiable storage.
[04:39:19] *** Quits: c10l (~c10l@89.34.167.207) (Ping timeout: 258 seconds)
[04:44:14] *** Quits: revolve (~u0_a227@82-132-244-241.dab.02.net) (Read error: Connection reset by peer)
[04:46:02] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:47:33] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:50:29] *** Quits: gggp_ (~gggp@123.113.189.142) (Remote host closed the connection)
[04:50:56] *** Joins: gggp_ (~gggp@60.10.194.46)
[04:52:29] *** Quits: gggp_ (~gggp@60.10.194.46) (Remote host closed the connection)
[04:52:53] *** Joins: gggp_ (~gggp@123.113.189.142)
[04:55:04] *** Quits: gggp_ (~gggp@123.113.189.142) (Remote host closed the connection)
[04:55:23] *** Joins: gggp_ (~gggp@125.33.82.158)
[04:56:18] *** Quits: normen (~normen@p54b3452e.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[04:56:29] *** Quits: gggp_ (~gggp@125.33.82.158) (Remote host closed the connection)
[05:04:57] *** Quits: hv99 (~hv99@wireguard/tunneler/hv99) (Ping timeout: 276 seconds)
[05:12:58] *** Quits: gsora (~gsora@140.238.174.213) (Ping timeout: 240 seconds)
[05:13:40] *** Joins: riverdc (river@2600:3c01::f03c:92ff:fed1:4643)
[05:13:40] *** Joins: Memory (~Wei@143.198.78.64)
[05:15:17] *** Joins: gsora (~gsora@140.238.174.213)
[05:15:59] *** Quits: jhchabran (~jhchabran@user/jhchabran) (Quit: ZNC 1.8.2 - https://znc.in)
[05:16:15] *** Joins: jhchabran (~jhchabran@user/jhchabran)
[05:17:37] *** Joins: Atque (~Atque@user/atque)
[05:26:17] *** Joins: normen (~normen@p200300d7173dc9003d563d11f645dedf.dip0.t-ipconnect.de)
[05:30:02] *** Joins: revolve (~u0_a227@82-132-244-241.dab.02.net)
[05:34:31] *** Quits: normen (~normen@p200300d7173dc9003d563d11f645dedf.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[05:37:36] *** Quits: LiftLeft (~LiftLeft@191.96.150.113) (Ping timeout: 256 seconds)
[05:41:02] *** Joins: califax- (~califax@user/califx)
[05:43:55] *** Quits: califax (~califax@user/califx) (Ping timeout: 244 seconds)
[05:43:56] *** califax- is now known as califax
[05:45:13] *** Quits: Teckla (~Teckla@user/teckla) (Quit: leaving)
[05:50:58] *** Joins: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net)
[05:54:19] *** Joins: neurocyte7 (~neurocyte@92.119.11.253)
[05:54:20] *** Quits: neurocyte7 (~neurocyte@92.119.11.253) (Changing host)
[05:54:20] *** Joins: neurocyte7 (~neurocyte@user/neurocyte)
[05:55:59] *** Joins: hv99 (~hv99@wireguard/tunneler/hv99)
[05:57:43] *** Joins: Teckla (~Teckla@user/teckla)
[05:58:17] *** Quits: neurocyte (~neurocyte@user/neurocyte) (Ping timeout: 258 seconds)
[05:58:18] *** neurocyte7 is now known as neurocyte
[05:58:37] *** Joins: orbyt_v10 (~orbyt_v10@172.92.4.78)
[05:59:24] *** Quits: s-video (~s-video@2601:190:c300:3a50:c80c:1ac7:981c:1ba0) (Ping timeout: 252 seconds)
[06:01:44] *** Joins: normen (~normen@p200300d7173dc9003d563d11f645dedf.dip0.t-ipconnect.de)
[06:11:36] *** Quits: kiril (~kiril@85.91.153.163) (Quit: ZNC - https://znc.in)
[06:31:15] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[06:32:36] *** Joins: mhorn_ (~textual@134.134.139.84)
[06:35:07] *** Quits: normen (~normen@p200300d7173dc9003d563d11f645dedf.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[06:37:00] *** Quits: mhorn (~textual@134.134.139.84) (Ping timeout: 258 seconds)
[06:53:30] *** Joins: LiftLeft (~LiftLeft@191.96.150.150)
[06:53:54] *** Quits: pvalenta (~petr@mail.open-system.cz) (Ping timeout: 240 seconds)
[06:57:40] *** Quits: gebn (~george@user/gebn) (Ping timeout: 272 seconds)
[07:04:44] *** arahael1 is now known as Arahael
[07:06:05] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[07:16:36] *** Quits: svedrin (~quassel@tiamat.funzt-halt.net) (Quit: https://quassel-irc.org - Komfortabler Chat. Ãœberall.)
[07:16:53] *** Joins: svedrin (~quassel@tiamat.funzt-halt.net)
[07:17:12] *** Quits: trufas (~trufas@177.240.218.218) (Ping timeout: 245 seconds)
[07:23:01] *** Joins: oxum (~oxum@122.172.39.197)
[07:42:34] *** Quits: oxum (~oxum@122.172.39.197) (Remote host closed the connection)
[07:55:13] *** Joins: oxum (~oxum@122.172.39.197)
[07:57:30] *** Quits: oxum (~oxum@122.172.39.197) (Remote host closed the connection)
[08:06:52] *** Joins: oxum (~oxum@122.172.39.197)
[08:07:03] *** Joins: Guest90 (~textual@119-18-1-87.771201.syd.nbn.aussiebb.net)
[08:08:50] *** Quits: oxum (~oxum@122.172.39.197) (Remote host closed the connection)
[08:23:59] *** Joins: pvalenta (~petr@mail.open-system.cz)
[08:32:31] *** Joins: gzj (~GZJ0X@192.243.120.171.16clouds.com)
[08:33:22] *** Joins: normen (~normen@p54b3452e.dip0.t-ipconnect.de)
[08:36:34] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[08:37:03] *** Joins: freakazoid343 (~matt@35.136.210.185)
[08:37:44] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 272 seconds)
[08:39:10] *** Quits: gzj (~GZJ0X@192.243.120.171.16clouds.com) (Quit: Leaving)
[08:40:32] *** Quits: darkapex- (~darkapex@user/darkapex) (Read error: Connection reset by peer)
[08:40:54] *** Quits: freakazoid333 (~matt@35.136.210.185) (Ping timeout: 272 seconds)
[08:42:45] *** Joins: darkapex (~darkapex@user/darkapex)
[08:46:11] *** Quits: Guest90 (~textual@119-18-1-87.771201.syd.nbn.aussiebb.net) (Ping timeout: 258 seconds)
[09:04:50] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[09:05:18] *** Quits: normen (~normen@p54b3452e.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[09:09:24] *** Joins: sbarros (~sbarros@162-231-66-48.lightspeed.wlfrct.sbcglobal.net)
[09:11:13] *** Parts: sbarros (~sbarros@162-231-66-48.lightspeed.wlfrct.sbcglobal.net) ()
[09:13:22] *** Joins: sbarros (~sbarros@162-231-66-48.lightspeed.wlfrct.sbcglobal.net)
[09:14:17] *** Parts: sbarros (~sbarros@162-231-66-48.lightspeed.wlfrct.sbcglobal.net) ()
[09:14:33] *** Quits: ninjin (~ninjin@user/ninjin) (Remote host closed the connection)
[09:14:55] *** Joins: ninjin (~ninjin@user/ninjin)
[09:41:51] *** Joins: bkircher (~bkircher@2001:a61:24d6:2901:4d0a:964f:94a0:dc42)
[09:42:54] *** Joins: hikhvar79607380 (~thelounge@x4dbe408a.dyn.telefonica.de)
[09:44:24] *** Joins: oxum (~oxum@122.172.39.197)
[09:44:58] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[09:45:21] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[09:46:37] *** Joins: rgl (~rgl@bl12-47-147.dsl.telepac.pt)
[09:46:49] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Client Quit)
[09:48:17] *** Quits: bkircher (~bkircher@2001:a61:24d6:2901:4d0a:964f:94a0:dc42) (Ping timeout: 258 seconds)
[09:49:18] *** Quits: oxum (~oxum@122.172.39.197) (Ping timeout: 252 seconds)
[09:53:21] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[09:53:33] *** Joins: oxum (~oxum@122.172.39.197)
[09:58:15] *** Quits: oxum (~oxum@122.172.39.197) (Ping timeout: 258 seconds)
[09:58:56] *** Joins: absc (~absc@dynamic-adsl-94-34-194-170.clienti.tiscali.it)
[10:01:26] *** Parts: justsomeguy (~justsomeg@user/justsomeguy) (WeeChat 3.2)
[10:04:35] *** Joins: bkircher (~bkircher@2001:a61:2519:db01:176e:925b:7477:589e)
[10:06:38] *** Joins: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net)
[10:11:56] *** Quits: orbyt_v10 (~orbyt_v10@172.92.4.78) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[10:12:30] *** Joins: orbyt_v10 (~orbyt_v10@172.92.4.78)
[10:15:01] *** Quits: revolve (~u0_a227@82-132-244-241.dab.02.net) (Read error: Connection reset by peer)
[10:16:34] *** Joins: revolve (~u0_a227@82-132-244-67.dab.02.net)
[10:22:32] *** Quits: absc (~absc@dynamic-adsl-94-34-194-170.clienti.tiscali.it) (Remote host closed the connection)
[10:27:08] *** Quits: cation (cation@user/cation) (Ping timeout: 252 seconds)
[10:34:11] *** Joins: cation (cation@user/cation)
[10:35:39] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[10:36:07] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[10:41:06] *** Quits: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[10:42:47] *** Joins: iateadonut (~dan@121.177.17.154)
[10:43:39] <iateadonut> is there a built-in way to parse a string into a url?  turn duck.com -> "http://www.duck.com"?
[10:46:58] *** Joins: frickenate (~frickenat@user/frickenate)
[10:49:02] *** Joins: shka (~herr@109.231.62.239)
[10:57:52] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Read error: Connection reset by peer)
[10:59:02] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[11:00:17] *** Joins: gggpkm (~gggpkm@60.10.194.46)
[11:01:35] *** Joins: normen (~normen@p200300d7173dc9003d563d11f645dedf.dip0.t-ipconnect.de)
[11:10:03] *** Joins: mkopriva (~mkopriva@88.103.225.202)
[11:10:03] *** Quits: mhorn_ (~textual@134.134.139.84) (Read error: Connection reset by peer)
[11:10:53] *** Quits: revolve (~u0_a227@82-132-244-67.dab.02.net) (Read error: Connection reset by peer)
[11:11:14] *** frickenate is now known as frickenate_
[11:11:29] <iateadonut> if you do res,err := http.Get("google.com")
[11:11:29] <iateadonut> you get: 2021/08/05 15:40:37 Get "google.com": unsupported protocol scheme ""
[11:12:36] *** Joins: revolve (~u0_a227@82-132-245-252.dab.02.net)
[11:13:23] *** Quits: arcatech (~arcatech@user/arcatech) (Remote host closed the connection)
[11:17:04] *** frickenate_ is now known as frickenate
[11:17:07] *** Quits: frickenate (~frickenat@user/frickenate) (Quit: frickenate)
[11:18:53] *** Quits: LiftLeft (~LiftLeft@191.96.150.150) (Ping timeout: 250 seconds)
[11:20:28] *** Joins: saschagrunert (~saschagru@46.128.124.113)
[11:21:30] *** Joins: fh0 (~fho@mue-88-130-49-254.dsl.tropolys.de)
[11:21:32] <fh0> hello
[11:23:05] <fh0> how can I figure out which package causes that another package is imported, like reverse resolving a dependency?
[11:30:20] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[11:30:28] *** Joins: absc (~absc@dynamic-adsl-94-34-194-170.clienti.tiscali.it)
[11:36:51] *** Joins: theoceaniscool_ (~theoceani@93.177.120.45)
[11:40:36] *** Quits: normen (~normen@p200300d7173dc9003d563d11f645dedf.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[11:42:08] *** Quits: theoceaniscool_ (~theoceani@93.177.120.45) (Ping timeout: 258 seconds)
[11:45:31] *** Joins: normen (~normen@p200300d7173dc9003d563d11f645dedf.dip0.t-ipconnect.de)
[11:46:38] *** Quits: ufk (~ufk@2001:4cd0:aa00:54:40e4:e83f:476:9a5d) (Quit: ZNC 1.8.2 - https://znc.in)
[11:48:28] *** Quits: gggpkm (~gggpkm@60.10.194.46) (Remote host closed the connection)
[11:50:52] *** Joins: gggp (~gggp@60.10.194.46)
[11:54:20] *** Joins: kaleido (~adam@havokworks.io)
[11:54:20] *** Quits: kaleido (~adam@havokworks.io) (Changing host)
[11:54:20] *** Joins: kaleido (~adam@user/kaleido)
[11:55:23] *** Joins: chripell (~chripell@109.255.230.3)
[11:55:25] *** Joins: xsteadfastx (~marv@94.31.100.46)
[11:55:56] *** Joins: theoceaniscool_ (~theoceani@93.177.120.45)
[12:01:06] *** Joins: chastifole (~chastifol@31.223.3.62)
[12:01:22] *** Joins: gggp_ (~gggp@60.10.194.46)
[12:03:13] <bookworm> iateadonut: how would go know what protocol ypu want to talk?
[12:03:57] *** Joins: frost (~frost@59.71.241.179)
[12:04:16] <bookworm> you can use a url.URL type but you still need to give it a protocol https://pkg.go.dev/net/url#URL
[12:04:18] *** Quits: gggp (~gggp@60.10.194.46) (Ping timeout: 240 seconds)
[12:10:23] *** Joins: gggp__ (~gggp@60.10.194.46)
[12:11:24] *** Joins: chovy (~chovy@75-55-138-167.lightspeed.mtryca.sbcglobal.net)
[12:13:34] *** Quits: gggp_ (~gggp@60.10.194.46) (Ping timeout: 258 seconds)
[12:13:55] *** Quits: normen (~normen@p200300d7173dc9003d563d11f645dedf.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[12:14:18] *** Joins: zwr (~zwr@2804:d45:b966:fb00:dba:d931:cadd:41e8)
[12:17:23] *** Quits: mkopriva (~mkopriva@88.103.225.202) (Quit: Leaving...)
[12:18:41] *** Joins: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz)
[12:19:19] *** Joins: mrig (~mrig@user/mrig)
[12:20:17] *** Joins: prophet60091__ (~prophet60@87.123.156.26)
[12:21:00] *** Quits: plujon (~user@24.16.249.105) (Remote host closed the connection)
[12:21:28] *** Joins: gggp_ (~gggp@60.10.194.46)
[12:24:18] *** Quits: gggp__ (~gggp@60.10.194.46) (Ping timeout: 240 seconds)
[12:26:32] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[12:28:54] *** Joins: dr0n (~nabromov@92.40.255.112.threembb.co.uk)
[12:31:24] *** Joins: gggp__ (~gggp@111.63.14.121)
[12:34:39] *** Quits: gggp_ (~gggp@60.10.194.46) (Ping timeout: 258 seconds)
[12:35:36] *** Joins: koo7 (~koo6@89-24-13-235.customers.tmcz.cz)
[12:37:46] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 272 seconds)
[12:40:13] *** Joins: fub (uid190747@id-190747.charlton.irccloud.com)
[12:47:06] *** Quits: zwr (~zwr@2804:d45:b966:fb00:dba:d931:cadd:41e8) (Ping timeout: 240 seconds)
[12:48:01] *** Joins: normen (~normen@p200300d7173dc9003d563d11f645dedf.dip0.t-ipconnect.de)
[12:49:06] *** Joins: zwr (~zwr@2804:d45:b966:fb00:6deb:684d:86d0:6090)
[12:55:01] *** Quits: dr0n (~nabromov@92.40.255.112.threembb.co.uk) (Quit: WeeChat 2.8)
[12:55:21] *** Quits: normen (~normen@p200300d7173dc9003d563d11f645dedf.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[12:56:38] *** Joins: minix (~nabromov@92.40.255.112.threembb.co.uk)
[12:59:03] *** Quits: rgl (~rgl@bl12-47-147.dsl.telepac.pt) (Ping timeout: 252 seconds)
[13:01:34] *** Joins: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de)
[13:03:35] *** Joins: independent56 (~independe@148.122.187.2)
[13:06:24] *** Quits: rshinzon (~rshinzon@user/rshinzon) (Quit: rshinzon)
[13:20:57] *** Joins: sizeof_void34 (~Thunderbi@109.252.75.112)
[13:30:03] *** Joins: normen (~normen@p200300d7173dc9003d563d11f645dedf.dip0.t-ipconnect.de)
[13:30:47] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[13:31:00] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 258 seconds)
[13:31:09] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[13:34:47] *** Joins: Brnocrist (~spartak@user/brnocrist)
[13:38:06] *** Quits: jld (~jld@c-24-9-144-115.hsd1.co.comcast.net) (Ping timeout: 252 seconds)
[13:39:10] *** Joins: jld (~jld@c-24-9-144-115.hsd1.co.comcast.net)
[13:39:54] <A_Dragon> fh0: check out go list and other go tools
[13:43:51] *** Quits: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[13:45:54] *** Joins: Guest1691 (~Guest16@n106-71-130-85.rdl2.qld.optusnet.com.au)
[13:46:46] <fh0> A_Dragon: yes I already did, I hoped that somebody has a ready-to-use cmd :->
[13:47:32] *** Quits: Guest1691 (~Guest16@n106-71-130-85.rdl2.qld.optusnet.com.au) (Client Quit)
[13:49:42] *** Quits: bkircher (~bkircher@2001:a61:2519:db01:176e:925b:7477:589e) (Ping timeout: 245 seconds)
[13:53:08] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 272 seconds)
[13:54:59] *** Joins: gueorgui (~gueorgui@2.30.136.31)
[13:55:04] <albertito> fh0: https://golang.org/ref/mod#go-mod-why  can be of help
[13:55:05] *** Quits: gueorgui (~gueorgui@2.30.136.31) (Changing host)
[13:55:05] *** Joins: gueorgui (~gueorgui@user/gueorgui)
[13:56:34] *** Quits: darkapex (~darkapex@user/darkapex) (Read error: Connection reset by peer)
[13:58:27] *** Joins: jld_ (~jld@c-24-9-144-115.hsd1.co.comcast.net)
[13:58:33] *** Quits: jld (~jld@c-24-9-144-115.hsd1.co.comcast.net) (Read error: Connection reset by peer)
[13:59:52] *** Joins: darkapex (~darkapex@user/darkapex)
[14:02:10] *** Joins: bkircher (~bkircher@2001:a61:2519:db01:176e:925b:7477:589e)
[14:03:20] *** Quits: independent56 (~independe@148.122.187.2) (Remote host closed the connection)
[14:04:42] *** Joins: independent56 (~independe@148.122.187.2)
[14:13:09] *** Quits: independent56 (~independe@148.122.187.2) (Remote host closed the connection)
[14:14:08] *** Joins: independent56 (~independe@148.122.187.2)
[14:18:50] *** Joins: gggp_ (~gggp@60.10.23.170)
[14:20:46] *** Joins: SeedyROM (~TheCheat@97-115-40-13.ptld.qwest.net)
[14:21:46] *** Quits: gggp__ (~gggp@111.63.14.121) (Ping timeout: 240 seconds)
[14:24:02] <SeedyROM> Hello
[14:24:23] <bookworm> o/
[14:24:46] <SeedyROM> Anyone have any fun ideas for an intermediate level project in Go? Trying to boost my skills and I'm tired of making Rest APIs or web stuff.
[14:26:01] <bookworm> pick your favorite cli tool and replicate it, write a TUI, or GUI of something
[14:26:09] <bookworm> RSS reader or what have you
[14:26:34] <sztanpet> or an irc client!
[14:27:06] *** Quits: xsteadfastx (~marv@94.31.100.46) (Quit: WeeChat 3.2)
[14:27:09] <A_Dragon> IRC is a great starter for learning a lot of langs
[14:27:28] *** Joins: xsteadfastx (~marv@94.31.100.46)
[14:27:47] <SeedyROM> Interesting, I like the RSS reader idea and IRC too.
[14:28:26] <A_Dragon> if you want extra credit
[14:28:28] <SeedyROM> In terms of IRC should I be reading the RFCs etc to get the full tech spec? Or are there other approaches besides following tutorials.
[14:28:32] <A_Dragon> support IRCv3
[14:28:33] <b0nn> FTP client (after the IRC client, because FTP can be a mindf*ck)
[14:28:39] <A_Dragon> SeedyROM: modern.ircdocs.horse
[14:28:44] <A_Dragon> is about the most up to date
[14:28:51] <A_Dragon> dont read 1459 things are different now
[14:29:04] <SeedyROM> A_Dragon: Thank you, I'm gonna check that out.
[14:29:09] <A_Dragon> but you can do basic IRC in <200LoC
[14:30:04] <Sam> Or just pick up some issues on any existing open source project to help out :)
[14:31:03] <A_Dragon> ^
[14:31:23] <A_Dragon> hmm I should do an IRC bot that asks the playground if some code has compile errors
[14:31:31] <A_Dragon> could be nice for in here
[14:32:05] <SeedyROM> Sam: I always struggle to find a good entrypoint for open source bug squashing.
[14:32:17] <SeedyROM> Also that bot idea sounds like it could help alot.
[14:33:14] *** Quits: independent56 (~independe@148.122.187.2) (Remote host closed the connection)
[14:33:39] *** Joins: independent56 (~independe@148.122.187.2)
[14:33:42] <Sam> SeedyROM: https://up-for-grabs.net/ or similar sites might help
[14:34:17] <Sam> https://up-for-grabs.net/#/filters?tags=go
[14:34:54] <SeedyROM> Sam: That's a great place to start, not sure how I've never heard of that.
[14:35:16] <A_Dragon> TIL pingme exists
[14:35:19] <A_Dragon> thats awesome
[14:35:26] <Sam> That's how I felt too when I discovered it :) there are a few sites like this
[14:36:55] *** Quits: xsteadfastx (~marv@94.31.100.46) (Quit: WeeChat 3.2)
[14:37:13] *** Joins: xsteadfastx (~marv@94.31.100.46)
[14:38:55] <A_Dragon> Sam: if I get a bit more "I feel like writing more IRC code" would you all want the aforementioned go playground bot?
[14:39:37] <A_Dragon> IIRC it has an API anyway
[14:39:39] <A_Dragon> now checking
[14:40:14] <bookworm> what's the point of it? Most people who ask in here post non working code  why else would they ask a question?
[14:40:29] <A_Dragon> would spit out the compile error :P save a click
[14:40:34] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Ping timeout: 240 seconds)
[14:40:53] <A_Dragon> Ive seen some other places run similar bots for logs and things
[14:40:55] *** Quits: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net) (Quit: When You're Taught Through Feelings~â™ª)
[14:41:02] <bookworm> you need to look at the code anyhow and bonus points for pasting a corrected version
[14:41:15] <A_Dragon> true
[14:43:00] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[14:46:23] *** Joins: gggp__ (~gggp@114.245.119.213)
[14:47:17] *** Joins: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de)
[14:48:30] *** Quits: koo7 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 252 seconds)
[14:49:36] *** Quits: gggp_ (~gggp@60.10.23.170) (Ping timeout: 252 seconds)
[14:52:27] <Sam> Sure, as long as it's not disruptive I'm sure we can talk it over
[14:57:37] *** Quits: gggp__ (~gggp@114.245.119.213) (Remote host closed the connection)
[14:58:01] *** Joins: gggp__ (~gggp@60.10.194.46)
[15:06:04] *** Joins: independent_ (~independe@148.122.187.2)
[15:07:22] *** Quits: independent56 (~independe@148.122.187.2) (Remote host closed the connection)
[15:07:33] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[15:09:42] *** Quits: SeedyROM (~TheCheat@97-115-40-13.ptld.qwest.net) (Ping timeout: 245 seconds)
[15:14:41] *** Joins: PinealGlandOptic (~PinealGla@37.115.210.35)
[15:20:18] *** Quits: absc (~absc@dynamic-adsl-94-34-194-170.clienti.tiscali.it) (Ping timeout: 240 seconds)
[15:30:38] *** Quits: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de) (Quit: I quit)
[15:31:31] *** Quits: xsteadfastx (~marv@94.31.100.46) (Ping timeout: 250 seconds)
[15:32:15] *** lb9di is now known as evilop
[15:32:55] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[15:33:21] *** Joins: mickey (~user@user/mickey)
[15:36:44] *** gggp__ is now known as gggp
[15:36:47] *** Joins: absc (~absc@dynamic-adsl-94-34-201-166.clienti.tiscali.it)
[15:45:20] *** Joins: gggp_ (~gggp@111.63.14.121)
[15:45:48] *** Quits: darkapex (~darkapex@user/darkapex) (Read error: Connection reset by peer)
[15:46:12] *** Joins: darkapex (~darkapex@user/darkapex)
[15:46:32] *** Joins: rgl (~rgl@bl12-47-147.dsl.telepac.pt)
[15:48:37] *** Quits: gggp (~gggp@60.10.194.46) (Ping timeout: 258 seconds)
[15:52:02] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Ping timeout: 244 seconds)
[15:53:37] *** Quits: revolve (~u0_a227@82-132-245-252.dab.02.net) (Read error: Connection reset by peer)
[15:55:22] *** Joins: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net)
[15:55:26] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[15:55:45] *** Joins: revolve (~u0_a227@82-132-246-191.dab.02.net)
[16:10:33] *** Quits: independent_ (~independe@148.122.187.2) (Ping timeout: 276 seconds)
[16:16:03] *** Joins: independent56 (~independe@148.122.187.2)
[16:24:54] *** Joins: xsteadfastx (~marv@p200300d2df06930090ce285d70797752.dip0.t-ipconnect.de)
[16:26:44] *** Quits: chastifole (~chastifol@31.223.3.62) (Read error: Connection reset by peer)
[16:30:28] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::1009)
[16:31:14] *** Quits: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[16:32:27] *** Joins: yoonkn (~user@175.197.208.79)
[16:32:47] *** Joins: muhblockchain (~muhblockc@user/muhblockchain)
[16:33:05] <muhblockchain> how to build https://github.com/in3rsha/bitcoin-utxo-dump
[16:33:37] <muhblockchain> but without heaving "go" download random stuff from internet without verification.  I want to download all sources and then build it like in c++ git clone, cmake, make
[16:34:25] *** Joins: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net)
[16:35:57] <A_Dragon> go downloads are verified with the go sum db
[16:36:53] <muhblockchain> A_Dragon: how that works? if I  go build ./bitcoin-utxo-dump
[16:37:05] *** Joins: mikoto-chan (~mikoto-ch@ip-193-121-10-50.dsl.scarlet.be)
[16:37:09] <muhblockchain> I verified that git log -1  (git revision, git sha) is correct
[16:37:23] <A_Dragon> go build -o out ./utxodump.go
[16:37:50] <muhblockchain> A_Dragon: but that will grab files from internet. will it check crypto signatures of downloaded sources?  with what?
[16:37:52] *** Joins: gggp__ (~gggp@123.113.179.243)
[16:38:23] <A_Dragon> Oh this doesnt use go modules. You should complain to them.
[16:38:33] <A_Dragon> Generally go modules contain sums of the libraries they use
[16:38:44] <A_Dragon> it will also check the sums against the go sum database
[16:38:53] <A_Dragon> which is run by google
[16:38:59] <A_Dragon> s/google/the go tea,
[16:39:00] <A_Dragon> m
[16:39:07] <muhblockchain> it uses like 2 internal modules or something?  how to manually download theses modules, build them from local files, then build the rest from local files?   im on debian btw
[16:40:11] <A_Dragon> it uses one set of libraries that are included with itself, it might still download those, but $shrug, the other library is on github
[16:40:32] <A_Dragon> you can `go get` those libraries if you want to inspect them first, they appear in $GOPATH/src, IIRC
[16:40:58] *** Quits: gggp_ (~gggp@111.63.14.121) (Ping timeout: 240 seconds)
[16:44:01] <shiroyasha> muhblockchain: `export GOFLAGS='-mod=vendor'` should prevent the `go` command from trying to fetch dependencies from internet.
[16:44:35] <muhblockchain> cant find package github.com/in3rsha.../bitcoin/keys in any of  /usr/lib/go-1.11/.....  /home/..../go/src/github.com....  (I do not have that ~/go/src at all btw)
[16:45:00] <muhblockchain> (without adding that flag, from just git get ./project/)
[16:45:42] *** Quits: xsteadfastx (~marv@p200300d2df06930090ce285d70797752.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[16:46:52] <A_Dragon> yes, you told it to use local files, it now cannot find local files
[16:47:14] <A_Dragon> and as you're not in module mode its looking in GOPATH
[16:49:11] *** Quits: independent56 (~independe@148.122.187.2) (Ping timeout: 258 seconds)
[16:49:54] *** Joins: sweb (~sweb@static.187.181.76.144.clients.your-server.de)
[16:50:56] *** Joins: gggp_ (~gggp@60.10.23.170)
[16:52:48] *** Quits: rgl (~rgl@bl12-47-147.dsl.telepac.pt) (Ping timeout: 252 seconds)
[16:53:58] <sweb> is map lookup faster than slice ? any suggest. i need to know is special domain is listed on about 1-10k domains.https://paste.ubuntu.com/p/Ftws4fRrwH/
[16:54:16] *** Quits: gggp__ (~gggp@123.113.179.243) (Ping timeout: 272 seconds)
[16:55:21] <siXy> sweb: map is O(1), slice is O(n)
[16:55:51] <sweb> siXy: right
[16:56:11] <siXy> sweb: and for future ref, here: //ads/production/planifests/services/ads_docservice_v2:prodplan_regen_test
[16:56:15] <siXy> ffs
[16:56:27] <siXy> here: https://pkg.go.dev/testing#hdr-Benchmarks is how you test it yourself
[16:56:52] <siXy> I'm really tired of chrome failing to copy text sometimes.
[16:57:13] <fizzie> At least that wasn't a particularly embarrassing build target name.
[16:57:32] <siXy> yeah, bullet somewhat dodged
[16:58:00] <muhblockchain> >using WM/UI that doesn't pop up notification when you successfully copied into clipboard, siXy
[16:58:55] <siXy> I definitely do not want a notification every time I copy something. That would be ridiculous.
[17:00:13] <shiroyasha> muhblockchain: Manually clone all dependency repositories, and build from them without using the soon-to-be-removed GOPATH: https://termbin.com/eydh
[17:00:45] *** Joins: Torr (~Torr@user/torr)
[17:01:01] <shiroyasha> Not pretty though.
[17:02:44] *** Joins: independent56 (~independe@148.122.187.2)
[17:05:12] *** Quits: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[17:08:45] *** Quits: gggp_ (~gggp@60.10.23.170) (Ping timeout: 252 seconds)
[17:09:26] *** Joins: gggp (~gggp@114.245.119.213)
[17:11:00] *** Joins: jawn-smith (~william@cpe-70-119-160-53.tx.res.rr.com)
[17:15:10] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 256 seconds)
[17:24:25] *** Quits: acidsys (~LSD@2.lsd.systems) (Excess Flood)
[17:24:59] *** Joins: LSD (~LSD@2.lsd.systems)
[17:25:03] *** Joins: chastifole (~chastifol@31.223.3.62)
[17:29:04] *** Quits: chastifole (~chastifol@31.223.3.62) (Client Quit)
[17:30:56] *** Quits: independent56 (~independe@148.122.187.2) (Remote host closed the connection)
[17:32:14] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[17:33:13] *** Joins: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net)
[17:35:45] *** Joins: Torr_ (~Torr@user/torr)
[17:36:48] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 252 seconds)
[17:37:03] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[17:37:14] *** Quits: darkapex (~darkapex@user/darkapex) (Read error: Connection reset by peer)
[17:37:35] *** Joins: darkapex (~darkapex@user/darkapex)
[17:40:07] *** Quits: mikoto-chan (~mikoto-ch@ip-193-121-10-50.dsl.scarlet.be) (Quit: mikoto-chan)
[17:40:25] *** Joins: mikoto-chan (~mikoto-ch@ip-193-121-10-50.dsl.scarlet.be)
[17:42:01] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[17:42:34] *** Joins: Torr (~Torr@user/torr)
[17:43:14] *** Quits: Torr_ (~Torr@user/torr) (Ping timeout: 258 seconds)
[17:47:54] *** Joins: independent56 (~independe@148.122.187.2)
[17:51:17] *** Quits: independent56 (~independe@148.122.187.2) (Remote host closed the connection)
[17:53:13] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 250 seconds)
[17:53:14] *** Joins: independent56 (~independe@148.122.187.2)
[17:53:46] *** Quits: independent56 (~independe@148.122.187.2) (Remote host closed the connection)
[17:54:29] *** Joins: independent56 (~independe@148.122.187.2)
[18:00:13] *** Joins: rgl (~rgl@bl12-47-147.dsl.telepac.pt)
[18:03:47] *** Quits: jld_ (~jld@c-24-9-144-115.hsd1.co.comcast.net) (Quit: jld_)
[18:04:42] *** Quits: independent56 (~independe@148.122.187.2) (Quit: Leaving)
[18:04:55] *** Joins: independent56 (~independe@148.122.187.2)
[18:05:25] *** Joins: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de)
[18:12:39] *** Quits: cmj (~cmj@68.207.254.124) (Quit: Leaving)
[18:18:21] *** Joins: arcatech (~arcatech@user/arcatech)
[18:24:06] *** Quits: rgl (~rgl@bl12-47-147.dsl.telepac.pt) (Ping timeout: 252 seconds)
[18:26:59] *** Quits: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:27:01] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[18:27:34] *** Quits: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[18:28:33] *** Joins: davidkrauser (~davidkrau@user/davidkrauser)
[18:33:21] *** Joins: andlabs (~andlabs@172.58.227.203)
[18:33:42] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[18:34:16] *** Quits: independent56 (~independe@148.122.187.2) (Remote host closed the connection)
[18:34:40] *** Joins: independent56 (~independe@148.122.187.2)
[18:35:57] *** Joins: andlabs_ (~andlabs@2607:fb90:f804:8323:a6:76a5:a126:aa92)
[18:36:35] <A_Dragon> huh doing this was easier than I thought it;d be
[18:37:52] <iateadonut> speedyrom, maybe this is too easy for you, but make a two tcp servers and pass gobs back and forth between them.
[18:38:03] *** Quits: andlabs (~andlabs@172.58.227.203) (Ping timeout: 258 seconds)
[18:40:36] <iateadonut> bookworm, thanks
[18:42:39] *** Quits: moto (~moto@user/moto) (Ping timeout: 276 seconds)
[18:44:10] *** Joins: moto (~moto@user/moto)
[18:44:34] *** Joins: arcatech (~arcatech@user/arcatech)
[18:44:57] *** Quits: andlabs_ (~andlabs@2607:fb90:f804:8323:a6:76a5:a126:aa92) (Ping timeout: 258 seconds)
[18:45:11] *** Quits: blinux (~blinux@pool-72-78-144-199.phlapa.fios.verizon.net) (Quit: WeeChat 3.1)
[18:45:20] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 258 seconds)
[18:48:40] *** Joins: andlabs (~andlabs@172.58.230.132)
[18:49:57] *** Quits: hikhvar79607380 (~thelounge@x4dbe408a.dyn.telefonica.de) (Ping timeout: 252 seconds)
[18:50:28] *** Quits: independent56 (~independe@148.122.187.2) (Remote host closed the connection)
[18:51:09] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[18:51:31] *** Joins: moonface (~moonface@60-240-112-109.tpgi.com.au)
[18:51:48] *** Joins: independent56 (~independe@148.122.187.2)
[18:52:57] *** Joins: cmj (~cmj@68.207.254.124)
[18:55:18] *** Quits: andlabs (~andlabs@172.58.230.132) (Ping timeout: 258 seconds)
[18:57:12] *** Joins: andlabs (~andlabs@172.58.227.9)
[18:59:49] *** Joins: andlabs_ (~andlabs@2607:fb90:f800:f64c:3c39:b0d4:f15e:92ac)
[19:01:49] *** Quits: andlabs (~andlabs@172.58.227.9) (Ping timeout: 258 seconds)
[19:03:20] *** Joins: hexfive (~eric@50.35.83.177)
[19:03:24] *** Quits: hexfive (~eric@50.35.83.177) (Client Quit)
[19:05:36] *** Quits: frost (~frost@59.71.241.179) (Quit: Connection closed)
[19:07:23] <A_Dragon> Sam: that was easier than I thought it'd be: https://github.com/A-UNDERSCORE-D/goplay-irc
[19:07:29] <A_Dragon> also includes a ~eval command
[19:11:31] *** Quits: paruh (~paruh@92.60.39.18) (Ping timeout: 265 seconds)
[19:11:43] *** Joins: moonface__ (~moonface@45.133.4.191)
[19:12:59] *** Joins: fef (~thedawn@user/thedawn)
[19:14:28] *** Quits: moonface (~moonface@60-240-112-109.tpgi.com.au) (Ping timeout: 258 seconds)
[19:16:18] *** Joins: arcatech (~arcatech@user/arcatech)
[19:17:22] <iateadonut> did you just write that entire code in the last couple hours?
[19:17:35] <iateadonut> A_Dragon
[19:18:39] <A_Dragon> iateadonut: yes
[19:18:43] <A_Dragon> last hour or so
[19:19:00] <A_Dragon> yeah just about an hour
[19:19:07] <A_Dragon> I know my way around IRC code >.>
[19:20:10] <A_Dragon> iateadonut: its not super big, 336LoC
[19:22:05] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[19:23:45] *** Joins: slowtyper (~slowtyper@user/slowtyper)
[19:28:42] *** Quits: jawn-smith (~william@cpe-70-119-160-53.tx.res.rr.com) (Quit: WeeChat 3.0.1)
[19:30:19] *** Joins: andlabs (~andlabs@172.58.227.65)
[19:32:42] *** Quits: andlabs_ (~andlabs@2607:fb90:f800:f64c:3c39:b0d4:f15e:92ac) (Ping timeout: 240 seconds)
[19:33:19] *** Joins: andlabs_ (~andlabs@2607:fb90:f80a:ba8b:166:dd9d:8001:9d81)
[19:34:34] *** Quits: andlabs (~andlabs@172.58.227.65) (Ping timeout: 240 seconds)
[19:34:49] *** Joins: andlabs (~andlabs@172.58.230.241)
[19:35:21] *** Joins: hikhvar79607380 (~thelounge@x4dbe408a.dyn.telefonica.de)
[19:36:41] *** Joins: edrocks (~Ed@user/edrocks)
[19:37:39] *** Joins: andlabs__ (~andlabs@2607:fb90:f80a:c5e3:a45b:1e11:a836:968a)
[19:37:58] *** Quits: andlabs_ (~andlabs@2607:fb90:f80a:ba8b:166:dd9d:8001:9d81) (Ping timeout: 256 seconds)
[19:38:14] *** Joins: moonface___ (~moonface@60-240-112-109.tpgi.com.au)
[19:38:51] <sztanpet> you arent even parsing the messages! :(
[19:38:57] *** Quits: davidkrauser (~davidkrau@user/davidkrauser) (Quit: Leaving)
[19:39:05] <A_Dragon> nope
[19:39:06] *** Quits: andlabs (~andlabs@172.58.230.241) (Ping timeout: 256 seconds)
[19:39:06] <A_Dragon> I could
[19:39:08] <A_Dragon> but I cant be assed
[19:39:19] <A_Dragon> been there, done that, repeatedly
[19:39:24] *** Quits: independent56 (~independe@148.122.187.2) (Remote host closed the connection)
[19:39:26] <sztanpet> oh, your not the one that wanted an excercise, nevermind sorry :)
[19:39:30] <A_Dragon> lol
[19:39:36] <A_Dragon> nope not I :D
[19:39:49] *** Joins: independent56 (~independe@148.122.187.2)
[19:39:59] <A_Dragon> parsing IRC goes from super simple to very annoying
[19:40:03] <A_Dragon> Ive done all of them
[19:40:55] *** Quits: moonface__ (~moonface@45.133.4.191) (Ping timeout: 258 seconds)
[19:41:47] *** Quits: andlabs__ (~andlabs@2607:fb90:f80a:c5e3:a45b:1e11:a836:968a) (Ping timeout: 245 seconds)
[19:41:57] *** Joins: toothe (~toothe@user/fikran)
[19:42:08] *** Quits: toothe (~toothe@user/fikran) (Client Quit)
[19:42:44] *** Joins: toothe (~toothe@user/fikran)
[19:49:37] <A_Dragon> sztanpet: for reference I do have a 10kLoC IRC bot as well :P
[19:50:12] <sztanpet> very good, carry on ;)
[19:50:51] *** Quits: toothe (~toothe@user/fikran) (Quit: WeeChat 2.8)
[19:52:51] *** Joins: fikran (~fikran@user/fikran)
[19:53:17] *** Joins: andlabs (~andlabs@ool-ad034a4d.dyn.optonline.net)
[19:57:43] *** Joins: Snyp (~rksht@49.207.216.218)
[19:57:46] <iateadonut> how about creating tcp servers and sending gobs between them?
[19:57:56] *** Quits: andlabs (~andlabs@ool-ad034a4d.dyn.optonline.net) (Ping timeout: 272 seconds)
[19:58:06] <iateadonut> i just tried but couldn't pull it off in 25 minutes.  (gn)
[19:58:38] *** Joins: andlabs (~andlabs@ool-ad034a4d.dyn.optonline.net)
[19:59:03] *** Quits: orbyt_v10 (~orbyt_v10@172.92.4.78) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[19:59:50] *** Joins: orbyt_v10 (~orbyt_v10@172.92.4.78)
[20:01:01] *** Quits: orbyt_v10 (~orbyt_v10@172.92.4.78) (Client Quit)
[20:02:08] <A_Dragon> gobs containing what? just anything?
[20:03:25] <bpalmer> just eyeballing that code reminds me, I wish go supported named blank identifiers. e.g., 'foo, _err_ = bar()'
[20:03:29] *** Joins: s-video (~s-video@2601:190:c300:3a50:3818:b0e3:e7ca:7ec6)
[20:03:59] <A_Dragon> oh were _err_ is "Im dropping this in a black hole but this is what it should be called?"
[20:04:41] *** Quits: hikhvar79607380 (~thelounge@x4dbe408a.dyn.telefonica.de) (Ping timeout: 258 seconds)
[20:06:03] <A_Dragon> s/?"/:?
[20:06:23] <A_Dragon> also that code needs some docs, I will need to fix that in a bit
[20:07:16] *** Quits: yoonkn (~user@175.197.208.79) (Read error: Connection reset by peer)
[20:08:02] <bpalmer> yep
[20:08:17] *** Quits: independent56 (~independe@148.122.187.2) (Remote host closed the connection)
[20:08:39] *** Joins: independent56 (~independe@148.122.187.2)
[20:09:32] <bpalmer> It'd be particularly useful in cases where there are multiple returned values (foo, _, _, _ = bar())
[20:10:35] *** Quits: saschagrunert (~saschagru@46.128.124.113) (Remote host closed the connection)
[20:10:37] *** Quits: moonface___ (~moonface@60-240-112-109.tpgi.com.au) (Remote host closed the connection)
[20:11:06] *** Joins: xsteadfastx (~marv@94.31.100.46)
[20:15:40] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 272 seconds)
[20:20:09] *** Quits: kaleido (~adam@user/kaleido) (Ping timeout: 276 seconds)
[20:22:12] *** Quits: meinside_ (uid24933@id-24933.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[20:23:05] *** Quits: fh0 (~fho@mue-88-130-49-254.dsl.tropolys.de) (Quit: leaving)
[20:30:19] *** Joins: orbyt_v10 (~orbyt_v10@172.92.4.78)
[20:30:59] *** Quits: edrocks (~Ed@user/edrocks) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[20:32:31] *** Quits: absc (~absc@dynamic-adsl-94-34-201-166.clienti.tiscali.it) (Quit: Leaving.)
[20:32:48] *** Joins: absc (~absc@dynamic-adsl-94-34-201-166.clienti.tiscali.it)
[20:33:01] *** Joins: rgl (~rgl@bl12-47-147.dsl.telepac.pt)
[20:33:08] *** Quits: absc (~absc@dynamic-adsl-94-34-201-166.clienti.tiscali.it) (Client Quit)
[20:35:13] *** Joins: mhorn (~textual@134.134.139.78)
[20:37:37] *** Quits: independent56 (~independe@148.122.187.2) (Remote host closed the connection)
[20:38:10] *** Joins: independent56 (~independe@148.122.187.2)
[20:38:18] *** Quits: s-video (~s-video@2601:190:c300:3a50:3818:b0e3:e7ca:7ec6) (Ping timeout: 252 seconds)
[20:43:08] *** Quits: independent56 (~independe@148.122.187.2) (Remote host closed the connection)
[20:43:24] *** Quits: xsteadfastx (~marv@94.31.100.46) (Ping timeout: 258 seconds)
[20:43:29] *** Joins: independent56 (~independe@148.122.187.2)
[20:47:08] <iateadonut> A_dragon, yeah, i guess anything.  convert a struct into a gob, send it over tcp and have it echo out to stdout
[20:48:05] <iateadonut> i'm wondering about support for error wrapping.  it seems that the standard library has errors.unwrap() but you have to get github.com/pkg/errors to get the errors.Wrap function?
[20:48:44] <A_Dragon> iateadonut: see docs for fmt.Errorf
[20:48:58] <seebs> %w
[20:54:02] *** Joins: codebam (~codebam@user/codebam)
[20:55:30] *** Quits: tebruno99 (~tebruno99@c-67-175-180-140.hsd1.il.comcast.net) (Quit: I'm out!)
[20:55:41] *** Joins: LiftLeft (~LiftLeft@191.96.227.138)
[20:56:01] *** Joins: tebruno99 (~tebruno99@c-67-175-180-140.hsd1.il.comcast.net)
[20:56:06] *** Parts: agrest (~user@45.76.36.123) ()
[20:56:51] *** Quits: orbyt_v10 (~orbyt_v10@172.92.4.78) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:03:35] <iateadonut> but can you wrap() an error using the standard library?
[21:03:45] *** Joins: saschagrunert (~saschagru@46.128.124.113)
[21:03:55] *** Quits: saschagrunert (~saschagru@46.128.124.113) (Remote host closed the connection)
[21:04:40] *** Joins: saschagrunert (~saschagru@46.128.124.113)
[21:06:20] *** Quits: solar_sea (~solar_sea@user/solar-sea/x-3088627) (Ping timeout: 272 seconds)
[21:08:19] *** Joins: prophet60091____ (~prophet60@87.123.159.156)
[21:11:31] *** Joins: CoolerX (~CoolerX@user/coolerx)
[21:11:46] *** Quits: prophet60091__ (~prophet60@87.123.156.26) (Ping timeout: 258 seconds)
[21:14:43] <iateadonut> gn
[21:14:46] *** Quits: iateadonut (~dan@121.177.17.154) (Quit: Leaving.)
[21:15:10] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[21:16:09] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[21:17:15] *** Joins: kaleido (~adam@havokworks.io)
[21:17:15] *** Quits: kaleido (~adam@havokworks.io) (Changing host)
[21:17:15] *** Joins: kaleido (~adam@user/kaleido)
[21:17:50] *** Joins: prophet60091__ (~prophet60@217.138.216.4)
[21:19:38] *** Quits: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz) (Quit: Leaving)
[21:20:03] *** Joins: prophet60091_ (~prophet60@195.216.219.116)
[21:21:44] *** Quits: prophet60091____ (~prophet60@87.123.159.156) (Ping timeout: 258 seconds)
[21:22:19] *** Joins: paruh (~paruh@92.60.39.18)
[21:23:02] *** Quits: prophet60091__ (~prophet60@217.138.216.4) (Ping timeout: 245 seconds)
[21:27:29] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[21:31:57] *** Joins: xsteadfastx (~marv@94.31.100.46)
[21:32:18] *** Quits: gueorgui (~gueorgui@user/gueorgui) (Ping timeout: 276 seconds)
[21:35:23] *** Quits: independent56 (~independe@148.122.187.2) (Remote host closed the connection)
[21:37:04] *** Quits: Snyp (~rksht@49.207.216.218) (Quit: WeeChat 3.2)
[21:41:02] *** Quits: saschagrunert (~saschagru@46.128.124.113) (Remote host closed the connection)
[21:42:58] *** Quits: cmj (~cmj@68.207.254.124) (Quit: Leaving)
[21:43:54] *** Joins: prophet60091__ (~prophet60@45.144.113.151)
[21:46:32] *** Joins: be3uykpy (~be3uykpy@2a00:a040:19a:b060:9802:d11a:2f2d:f28f)
[21:46:57] *** Joins: s-video (~s-video@2601:190:c300:3a50:4058:7d25:1bff:4e89)
[21:48:01] *** Quits: prophet60091_ (~prophet60@195.216.219.116) (Ping timeout: 268 seconds)
[21:48:58] *** Quits: xsteadfastx (~marv@94.31.100.46) (Ping timeout: 240 seconds)
[21:49:18] *** Joins: FunnyLookinHat (~FunnyLook@64.184.172.137)
[21:51:10] *** Quits: slowtyper (~slowtyper@user/slowtyper) (Quit: WeeChat 3.2)
[21:56:39] *** Quits: chripell (~chripell@109.255.230.3) (Ping timeout: 268 seconds)
[21:58:37] *** Joins: independent56 (~independe@148.122.187.2)
[22:00:32] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[22:02:04] <saml> why would you write your services in graphql, instead of plain HTTP/REST?
[22:02:36] *** Joins: fikran (~fikran@user/fikran)
[22:03:37] *** Quits: independent56 (~independe@148.122.187.2) (Remote host closed the connection)
[22:13:26] *** Quits: mikoto-chan (~mikoto-ch@ip-193-121-10-50.dsl.scarlet.be) (Read error: No route to host)
[22:13:54] *** Quits: gggp (~gggp@114.245.119.213) (Ping timeout: 276 seconds)
[22:14:01] *** Joins: mikoto-chan (~mikoto-ch@ip-193-121-10-50.dsl.scarlet.be)
[22:14:37] <ikke> saml: the idea is that graphql gives more flexibility on the client side
[22:14:42] <bookworm> because you want to filter server side
[22:19:13] *** Joins: c10l (~c10l@89.34.167.207)
[22:24:06] *** Quits: revolve (~u0_a227@82-132-246-191.dab.02.net) (Read error: Connection reset by peer)
[22:25:37] *** Parts: PinealGlandOptic (~PinealGla@37.115.210.35) ()
[22:25:48] *** Joins: revolve (~u0_a227@82-132-247-204.dab.02.net)
[22:30:18] *** Quits: jinie (~jimmy@188.114.173.37) (Quit: ZNC 1.8.2 - https://znc.in)
[22:37:12] *** Joins: hikhvar79607380 (~thelounge@dynamic-046-114-006-149.46.114.pool.telefonica.de)
[22:38:54] *** Joins: jinie (~jimmy@188.114.173.37)
[22:42:45] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[22:43:16] *** Quits: hikhvar79607380 (~thelounge@dynamic-046-114-006-149.46.114.pool.telefonica.de) (Ping timeout: 256 seconds)
[22:46:23] *** Quits: jinie (~jimmy@188.114.173.37) (Quit: ZNC 1.8.2 - https://znc.in)
[22:46:52] *** Joins: jinie (~jimmy@188.114.173.37)
[22:46:58] *** Quits: jinie (~jimmy@188.114.173.37) (Remote host closed the connection)
[22:47:32] *** Joins: jinie (~jimmy@188.114.173.37)
[22:47:52] *** Quits: cync (~blah@192.180.187.81.in-addr.arpa) (Quit: bye!)
[22:48:19] *** Joins: cync (~blah@192.180.187.81.in-addr.arpa)
[22:58:03] *** Parts: minix (~nabromov@92.40.255.112.threembb.co.uk) ()
[22:58:26] *** Joins: dr0n (~nabromov@92.40.255.112.threembb.co.uk)
[22:59:39] *** Joins: prophet60091_ (~prophet60@87.123.159.156)
[23:01:01] *** Quits: s-video (~s-video@2601:190:c300:3a50:4058:7d25:1bff:4e89) (Ping timeout: 258 seconds)
[23:02:18] *** Quits: prophet60091__ (~prophet60@45.144.113.151) (Ping timeout: 240 seconds)
[23:06:08] *** Quits: cync (~blah@192.180.187.81.in-addr.arpa) (Quit: bye!)
[23:08:45] *** Joins: cync (~blah@192.180.187.81.in-addr.arpa)
[23:10:22] *** Quits: rgl (~rgl@bl12-47-147.dsl.telepac.pt) (Quit: Leaving)
[23:16:38] *** Joins: s-video (~s-video@c-24-63-102-188.hsd1.ma.comcast.net)
[23:17:10] *** Joins: independent56 (~independe@148.122.187.2)
[23:22:34] *** Quits: be3uykpy (~be3uykpy@2a00:a040:19a:b060:9802:d11a:2f2d:f28f) (Quit: Leaving)
[23:26:13] <oliv3> hi, this is driving me nuts :( i'm summing a slice of 25k uint64, and the displayed sum doesn't look at all correct. i dump the array to disk in-between, and when i restart the simulation, the sum is correctly displayed... ðŸ¤” here's an example: https://paste.debian.net/1206706/
[23:27:22] *** Quits: independent56 (~independe@148.122.187.2) (Remote host closed the connection)
[23:30:34] <A_Dragon> are you sure you're not overflowing an int64?
[23:31:32] <A_Dragon> or alternatively, possibly working with stale data?
[23:31:36] <oliv3> it's uint64 everywhere, and casts where needed, so i don't see
[23:31:46] <A_Dragon> yeah uh
[23:31:55] <A_Dragon> if you cast to int64 you cut the max size in half
[23:32:20] *** Joins: goldfish (~goldfish@user/goldfish)
[23:33:25] *** Joins: independent56 (~independe@148.122.187.2)
[23:33:51] *** Quits: independent56 (~independe@148.122.187.2) (Remote host closed the connection)
[23:34:12] *** Joins: independent56 (~independe@148.122.187.2)
[23:35:10] <foobaz> you could use math/big to add without overflow
[23:35:18] <A_Dragon> 18446744073709551615 9223372036854775807
[23:35:23] <A_Dragon> uint64 and int64 respectively
[23:35:24] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Ping timeout: 256 seconds)
[23:35:27] <foobaz> or float64 to get an estimate without overflow
[23:35:51] <A_Dragon> f64 will struggle at that size too
[23:36:19] <foobaz> but it won't overflow, it will have low precision
[23:36:57] <foobaz> big.Int is guaranteed to give the correct result but it's more work
[23:37:10] <A_Dragon> probably work better
[23:37:10] *** Joins: oxum (~oxum@122.172.235.24)
[23:37:23] <A_Dragon> though personally I find the ux for big to be AWFUL
[23:37:45] <A_Dragon> I severely dislike how operators are implemented
[23:38:36] *** Joins: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net)
[23:40:14] <oliv3> hmmm my values are way under max int64/uint64
[23:40:15] <foobaz> i think the go authors were traumatized by operator overloading in C++ and vowed never to let it happen in go
[23:40:30] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 256 seconds)
[23:40:31] *** Joins: goldfish_ (~goldfish@user/goldfish)
[23:41:04] <foobaz> oliv3: are you adding in multiple goroutines? maybe it's a race condition
[23:41:10] <oliv3> in the big package i can only see NewInt(int64), there's no uint64
[23:41:54] *** Quits: independent56 (~independe@148.122.187.2) (Remote host closed the connection)
[23:41:56] <foobaz> use SetUint64
[23:42:02] <oliv3> and no, the sum is done in a plain for loop
[23:42:02] *** Quits: oxum (~oxum@122.172.235.24) (Ping timeout: 258 seconds)
[23:45:12] <A_Dragon> foobaz: even if so. the ux for Add and co is awful. the sigs are (i *Int) Add(a, b) where a and b are added and set to i, rather than adding i to a, or anything even slightly more "ergonmoic" I find it exceptionally irksome to work with big to the point that I often just switch to python if I need giant numbers and lob pypy at the problem
[23:46:44] <oliv3> https://gitlab.com/oliv3/gapic/-/tree/websocket, in case i missed something obvious :)
[23:48:31] *** Joins: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net)
[23:50:29] *** Joins: independent56 (~independe@148.122.187.2)
[23:52:26] *** Quits: zanshin (~zanshin@user/zanshin) (Read error: Connection reset by peer)
[23:55:46] <oliv3> what's strange to me is that evaluate() works fine when the population is loaded, then doesn't work anymore, but the population is dumped to disk on each run, and stopping and restarting displays the correct values
[23:56:03] <A_Dragon> are you stomping on chunks of the slice somewhere?
[23:56:23] *** Quits: independent56 (~independe@148.122.187.2) (Remote host closed the connection)
[23:57:21] <oliv3> ? -sorry french here :) -
[23:57:35] *** Quits: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net) (Read error: Connection reset by peer)
[23:58:49] <oliv3> https://gitlab.com/oliv3/gapic/-/blob/websocket/evaluate.go#L25-28
[23:59:40] <A_Dragon> do you unintentionally modify pop.Phenotypes somwhere?
[23:59:51] <A_Dragon> check the length of the slice
