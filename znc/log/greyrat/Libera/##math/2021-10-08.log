[00:00:13] *** Quits: chomwitt (~chomwitt@2a02:587:dc18:b400:12c3:7bff:fe6d:d374) (Ping timeout: 252 seconds)
[00:00:54] *** Joins: dutch (~DutchIngr@user/dutch)
[00:01:25] <isekaijin> Yeah, but sheaves are the right notion. It makes sense that if you have local data that agrees on overlaps, you should be able to reconstruct global data.
[00:01:34] <isekaijin> Presheaves are like - why do I even care about this?
[00:02:36] <Galois> didn't we just answer this question? Natural things that you want to do to sheaves (like images, quotients, etc.) don't produce sheaves
[00:02:58] <Galois> they produce presheaves, so you need just enough knowledge of presheaves to know how to turn a presheaf back into a sheaf
[00:03:08] <mornfall> ah, right, i remember now; sheaves happen when you relax the requirements on the underlying space to just have a (point-set) topology, but nothing else
[00:03:26] <mornfall> so i guess smoothness is out of question there
[00:07:41] <sek> "continuity of variation" more than smoothness
[00:07:54] <mh_le> I have density matrices are rho^(0,0) = |0><0|, rho^(1,0) = |1><1| , rho^(0,1) = |+><+| and rho^(1,1) = |-><-| which are Bobs, and the bits a and b are Alice's can bob guess the value a with probability >1/2
[00:08:05] <mornfall> but yeah, presheaves seem a little on the wobbly side
[00:08:28] <sek> but then again it depends whether you're talking about a topological vector bundle or a holomorphic one, but this is not really the point here
[00:08:51] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[00:09:55] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 265 seconds)
[00:10:23] <mornfall> it's like that old saying, every problem can be solved by adding another layer of indirection
[00:11:15] <mornfall> things don't quite agree on restrictions? no matter, just put in a morphism to relate them
[00:11:30] *** Quits: oxide (~lambda@user/oxide) (Ping timeout: 260 seconds)
[00:11:46] *** Quits: mei (~mei@user/mei) (Ping timeout: 252 seconds)
[00:13:01] *** Quits: takuan (~takuan@178-116-218-225.access.telenet.be) (Remote host closed the connection)
[00:14:03] <isekaijin> Galois: Yes, I know. What I mean is - why do computer scientists care about presheaves as intrinsic objects of interest, rather than as data for generating sheaves?
[00:14:15] <mornfall> presheaves seem to describe things that change depending on the distance from which you look… those things make my head hurt
[00:14:49] <mornfall> how do you stitch a presheaf back to a sheaf?
[00:16:09] <isekaijin> You sheafify it.
[00:16:51] <isekaijin> The sheafification P^+ of a presheaf P satisfies a universal property: every morphism of presheafs from P to a sheaf S factors uniquely through P^+.
[00:17:35] <mornfall> (do presheafs have stalks? seems like that'd not work out consistently)
[00:18:15] <sek> sure they do
[00:18:25] <sek> actually the stalk agrees with the stalk of the sheafification
[00:20:19] *** Quits: rubiksdream (~rubiksdre@n219073073081.netvigator.com) (Ping timeout: 245 seconds)
[00:22:30] *** Joins: orbatos (~orbatos@user/orbatos)
[00:22:39] <joel135> Maybe it has to do with the idea that computer science typically deals with the discrete, and presheaves are more discrete than sheaves. Do you have a reason why you think they would benefit from using sheaves?
[00:23:18] <joel135> Should sheaves be used for handling database consistency or what?
[00:23:20] <isekaijin> Actually, I was not going to bring intuitionistic logic into the discussion, but I just remembered that you need the axiom of choice to show that, if a morphism of sheaves is stalkwise an isomorphism, then it is globally an isomorphism. So this does not work in intuitionistic logic.
[00:23:34] <isekaijin> Maybe this is related to why computer scientists care about sheaves?
[00:23:47] <isekaijin> Though, to me, this seems more like a reason to ditch intuitionistic logic instead.
[00:24:03] <isekaijin> Errr
[00:24:14] <isekaijin> why computer scientists care about PREsheaves
[00:24:29] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[00:24:36] <mornfall> this is complicated
[00:25:23] <mornfall> apparently i don't understand how the limit in the definition of a stalk works… unfortunate
[00:25:24] *** Quits: Macallan (~i.am@user/marlboro) (Quit: I come down here for a fat woman and that's what I'm havin.)
[00:25:40] <isekaijin> It is a limit in the category theory sense.
[00:25:43] <joel135> In a paradigm of computable functions, intuitionism appears quite on its own.
[00:26:33] <isekaijin> I realize that computable functions exist, but why are computer scientists so adamant on creating a world in which things that are not computable do not exist?
[00:26:51] *** Joins: twJizhan (~twJizhan@101-136-131-88.mobile.dynamic.aptg.com.tw)
[00:26:58] <twJizhan> oh yeah
[00:27:20] <mornfall> isekaijin: they take after Leibniz perhaps :p
[00:27:47] <mornfall> but come on, wanting a world to be mechanically solvable is quite natural
[00:27:51] <isekaijin> That cannot be. Leibniz was the guy who said we live in the best possible universe or something like that (lol).
[00:27:52] <joel135> I am not sure that is what they are doing.
[00:28:17] *** Quits: KUrare_ (~KUrare@user/kurare) (Ping timeout: 265 seconds)
[00:28:28] <joel135> Banishing the non-computable, that is.
[00:28:43] *** Joins: Maturion (~Maturion@p200300ede724c900b612ecf6a68c7ac9.dip0.t-ipconnect.de)
[00:29:24] <twJizhan> it takes me 3 days to finally figure out: how to construct a countable set whose bijections with positive integers are all "uncomputable" functions.
[00:29:29] <isekaijin> Elsewhere, I do not see people trying to outright banish things that they cannot study.
[00:29:46] <isekaijin> A real analyst would not tell you “let's declare all sets to be subsets of R^n”.
[00:30:19] <joel135> I don't know if he would.
[00:30:29] <mornfall> isekaijin: it does make sense to explore a universe where everything is computable and see if there's anything interesting in it
[00:30:43] *** Parts: expix (~1@amontpellier-652-1-46-167.w90-57.abo.wanadoo.fr) ()
[00:30:48] <mornfall> (one that's not also finite)
[00:31:18] <isekaijin> twJizhan: What was your set like in the end?
[00:31:24] <mornfall> though in some sense, computability is just a model… one that is sometimes not very useful
[00:32:41] *** Joins: trbp (~trbp@user/trbp)
[00:33:16] *** Joins: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net)
[00:33:22] <joel135> It is called computer science after all, and we have these powerful machines that compute things. Should we rather make them non-compute things? Maybe the geometric aspects of presheaves could somehow help generalize from computability to something less discrete.
[00:33:42] <joel135> of sheaves*
[00:36:17] <mornfall> completely unrelated, but anyone notice how we use PDEs (smooth) to model things built out of a large number of particles (discrete), and when the smooth model becomes hard to deal with, we chop it up into small pieces? (much bigger small pieces than the original particles, mind you)
[00:37:25] <mornfall> this still somehow works well enough to predict things
[00:38:25] <quantum> I think that's a testament to how well the modelling cycle works
[00:39:07] <quantum> you can model anything with Lego if you have enough bricks and iterate as many times as possible
[00:39:39] *** Gustavo6046 is now known as Several
[00:39:41] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 245 seconds)
[00:39:44] *** Several is now known as Gustavo6046
[00:39:48] <quantum> s/possible/necessary
[00:41:00] *** Joins: Crescendo (~Crescendo@user/crescendo)
[00:43:14] <mornfall> joel135: seems like we can only build machines that are ultimately discrete; any continuous computation can only be approximated by a machine which we can actually build
[00:43:37] *** Joins: hyiltiz (~quassel@31.220.5.250)
[00:44:16] *** Joins: wladimir (~doforlove@user/doforlove33)
[00:44:47] <riv> you can axiomatize models of computation based on real numbers
[00:44:50] <joel135> The language of the smooth coordinates finite discrete resources to behave like something whose composition is unknowable in its practically infinite details.
[00:44:55] <riv> it's different to turing machines
[00:45:25] <joel135> (coordinates as a verb)
[00:45:26] <mornfall> riv: any references for such models? i don't remember encountering any
[00:45:57] <riv> https://en.wikipedia.org/wiki/Real_computation https://en.wikipedia.org/wiki/Complexity_and_Real_Computation
[00:47:01] <riv> > Unlimited precision real numbers in the physical universe are prohibited by the holographic principle and the Bekenstein bound.[3]
[00:47:05] <riv> i find that statement odd
[00:47:12] <riv> why don't they just say plancks constant
[00:47:50] *** Quits: extern (~archer@141.226.62.6) (Quit: good night)
[00:48:40] <twJizhan> C++Code := {c : c is any finite length and compilable C++ code} which is countable. p<c> denote the program obtained by compile c. i<p<c>> denote any finite length valid input of p<c>.
[00:48:40] <twJizhan> Define F: C++Code ---> {True, False} x C++Code by F(c) = ("p<c> halts on any i<p<c>>?", c).
[00:48:40] <twJizhan> The image of F, F(C++Code) is such a set.
[00:48:47] <twJizhan> isekaijin: ^
[00:50:05] <mornfall> riv: if it wasn't for general relativity, you could still compute with real numbers using an infinite region of space, i guess
[00:50:31] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 245 seconds)
[00:50:47] <mornfall> event horizons put a damper on that
[00:53:05] *** Quits: Baphomet (~Baphomet@177.37.87.7) (Quit: Quit)
[00:53:08] *** Quits: loopspace (sid488598@id-488598.helmsley.irccloud.com) (Ping timeout: 252 seconds)
[00:53:13] <mornfall> twJizhan: that C++ bit confuses things mightily
[00:53:22] *** Quits: headline_ (sid102736@id-102736.tinside.irccloud.com) (Ping timeout: 260 seconds)
[00:53:22] *** Quits: elichai2 (sid212594@id-212594.hampstead.irccloud.com) (Ping timeout: 260 seconds)
[00:53:22] *** Quits: ziky (sid27087@user/ziky) (Ping timeout: 260 seconds)
[00:53:30] *** Quits: Ginalo (uid502518@id-502518.tinside.irccloud.com) (Ping timeout: 260 seconds)
[00:53:30] *** Quits: Duns_Scrotus (sid262565@id-262565.tinside.irccloud.com) (Ping timeout: 260 seconds)
[00:53:33] *** Quits: smi (sid510004@user/smi) (Ping timeout: 265 seconds)
[00:53:36] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[00:53:42] *** Quits: Fangs (sid141280@id-141280.hampstead.irccloud.com) (Ping timeout: 268 seconds)
[00:53:42] *** Quits: pdg (sid395042@id-395042.lymington.irccloud.com) (Ping timeout: 250 seconds)
[00:53:50] *** Quits: carter (sid14827@id-14827.helmsley.irccloud.com) (Ping timeout: 260 seconds)
[00:53:50] *** Quits: _sol_ (sid282649@id-282649.hampstead.irccloud.com) (Ping timeout: 260 seconds)
[00:53:50] *** Quits: akrv (sid245241@id-245241.hampstead.irccloud.com) (Ping timeout: 260 seconds)
[00:53:50] *** Quits: jakesyl (sid56879@id-56879.hampstead.irccloud.com) (Ping timeout: 260 seconds)
[00:53:50] <twJizhan> oh sorry
[00:53:51] *** Quits: elderK (uid205007@id-205007.helmsley.irccloud.com) (Ping timeout: 245 seconds)
[00:53:55] *** Quits: merpnderp (sid16744@id-16744.hampstead.irccloud.com) (Ping timeout: 268 seconds)
[00:54:02] *** Quits: redlegion (sid429547@id-429547.ilkley.irccloud.com) (Ping timeout: 246 seconds)
[00:54:02] *** Quits: Pent (sid313808@id-313808.lymington.irccloud.com) (Ping timeout: 246 seconds)
[00:54:05] *** Quits: bjs (sid190364@user/bjs) (Ping timeout: 264 seconds)
[00:54:05] *** Quits: econo (uid147250@user/econo) (Ping timeout: 260 seconds)
[00:54:07] *** Quits: jwpapi (sid502614@id-502614.uxbridge.irccloud.com) (Ping timeout: 240 seconds)
[00:54:08] *** Quits: itok (sid418430@id-418430.ilkley.irccloud.com) (Ping timeout: 250 seconds)
[00:54:13] <mornfall> and compilability and whatnot
[00:54:15] *** Quits: c4s1 (sid519549@id-519549.hampstead.irccloud.com) (Ping timeout: 250 seconds)
[00:54:16] *** Quits: vqueiroz (uid340368@id-340368.hampstead.irccloud.com) (Ping timeout: 245 seconds)
[00:54:18] *** Quits: PotatoGim (sid99505@id-99505.lymington.irccloud.com) (Ping timeout: 260 seconds)
[00:54:19] *** Quits: Boarders (sid425905@id-425905.lymington.irccloud.com) (Ping timeout: 268 seconds)
[00:54:23] *** Quits: Vermont (sid262764@wikimedia/vermont) (Ping timeout: 246 seconds)
[00:54:32] *** Quits: TallonRain (sid214799@user/tallonrain) (Ping timeout: 268 seconds)
[00:54:32] *** Quits: meltingwax (sid429936@id-429936.hampstead.irccloud.com) (Ping timeout: 268 seconds)
[00:54:32] *** Quits: pikhq (sid394595@user/pikhq) (Ping timeout: 268 seconds)
[00:54:34] *** Quits: DarkSeid (sid394293@id-394293.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[00:54:40] *** Quits: dez (uid92154@user/dez) (Ping timeout: 252 seconds)
[00:54:42] <twJizhan> maybe PyCode is a nicer name
[00:54:44] *** Quits: braxas (sid508886@id-508886.lymington.irccloud.com) (Ping timeout: 246 seconds)
[00:54:46] *** Quits: msch (sid28472@id-28472.tinside.irccloud.com) (Ping timeout: 260 seconds)
[00:54:46] *** Quits: jyc (sid40911@2a03:5180:f:3::9fcf) (Ping timeout: 260 seconds)
[00:54:46] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (Ping timeout: 260 seconds)
[00:54:56] *** Quits: astra` (sid289983@user/amish) (Ping timeout: 268 seconds)
[00:54:56] *** Quits: joel135 (sid136450@id-136450.hampstead.irccloud.com) (Ping timeout: 268 seconds)
[00:54:57] <mornfall> how about turing machines
[00:55:00] <mornfall> or while programs
[00:55:09] *** Quits: SanchayanMaity (sid478177@id-478177.hampstead.irccloud.com) (Ping timeout: 268 seconds)
[00:55:09] *** Quits: specing (~specing@user/specing) (Killed (NickServ (GHOST command used by specing_)))
[00:55:09] *** Joins: specing_ (~specing@user/specing)
[00:55:09] <mornfall> or lambda calculus
[00:55:14] *** Quits: Memory (sid459764@user/memory) (Ping timeout: 260 seconds)
[00:55:14] *** Quits: eruditass (uid248673@id-248673.uxbridge.irccloud.com) (Ping timeout: 260 seconds)
[00:55:14] *** Quits: cloudcell (sid48145@user/cloudcell) (Ping timeout: 260 seconds)
[00:55:17] *** Quits: _0x1d3 (sid43116@id-43116.tinside.irccloud.com) (Ping timeout: 264 seconds)
[00:55:21] *** Joins: astra` (sid289983@user/amish)
[00:55:24] *** Joins: Fangs (sid141280@hampstead.irccloud.com)
[00:55:25] *** Joins: c4s1 (sid519549@hampstead.irccloud.com)
[00:55:29] *** Quits: placeb0 (uid283215@id-283215.lymington.irccloud.com) (Ping timeout: 265 seconds)
[00:55:33] *** Quits: nrr (sid20938@id-20938.lymington.irccloud.com) (Ping timeout: 268 seconds)
[00:55:36] *** Joins: Memory (sid459764@user/memory)
[00:55:40] *** Joins: placeb0 (uid283215@lymington.irccloud.com)
[00:55:48] *** Joins: msch (sid28472@5.254.36.57)
[00:55:50] *** Joins: dez (uid92154@user/dez)
[00:55:50] *** Joins: aportnoy (~aportnoy@bras-base-toroon0628w-grc-22-174-95-160-240.dsl.bell.ca)
[00:55:50] *** Quits: Memory (sid459764@user/memory) (Client Quit)
[00:55:53] *** Joins: headline_ (sid102736@5.254.36.57)
[00:55:53] *** Joins: PotatoGim (sid99505@lymington.irccloud.com)
[00:56:14] *** Joins: sa (sid1055@5.254.36.57)
[00:56:31] *** Joins: _0x1d3 (sid43116@5.254.36.57)
[00:56:33] *** Joins: _sol_ (sid282649@hampstead.irccloud.com)
[00:56:44] *** Joins: pdg (sid395042@lymington.irccloud.com)
[00:56:48] *** Joins: nrr (sid20938@lymington.irccloud.com)
[00:56:52] *** Joins: TallonRain (sid214799@user/tallonrain)
[00:56:56] *** specing_ is now known as specing
[00:57:02] *** Joins: carter (sid14827@helmsley.irccloud.com)
[00:57:05] *** Joins: cloudcell (sid48145@5.254.36.57)
[00:57:13] *** Joins: ziky (sid27087@user/ziky)
[00:57:16] *** Joins: loopspace (sid488598@helmsley.irccloud.com)
[00:57:29] <twJizhan> yes I should use standard mathematical model... :S
[00:57:33] *** Quits: Jordy (~jordy@user/jordy) (Read error: Connection reset by peer)
[00:57:59] *** Joins: eruditass (uid248673@uxbridge.irccloud.com)
[00:58:11] *** Joins: akrv (sid245241@hampstead.irccloud.com)
[00:58:12] *** Joins: elichai2 (sid212594@hampstead.irccloud.com)
[00:58:20] *** Joins: Boarders (sid425905@lymington.irccloud.com)
[00:58:37] *** Joins: jakesyl (sid56879@hampstead.irccloud.com)
[00:58:42] *** Joins: pikhq (sid394595@user/pikhq)
[00:58:44] *** Joins: econo (uid147250@user/econo)
[00:58:46] *** Joins: DarkSeid (sid394293@helmsley.irccloud.com)
[00:58:47] *** Joins: bjs (sid190364@user/bjs)
[00:58:49] *** Joins: Duns_Scrotus (sid262565@5.254.36.57)
[00:58:52] *** Joins: smi (sid510004@user/smi)
[00:59:02] *** Joins: Vermont (sid262764@wikimedia/vermont)
[00:59:12] *** Joins: elderK (uid205007@helmsley.irccloud.com)
[00:59:42] *** Joins: vqueiroz (uid340368@hampstead.irccloud.com)
[00:59:43] *** Joins: jyc (sid40911@ilkley.irccloud.com)
[00:59:43] *** Joins: redlegion (sid429547@ilkley.irccloud.com)
[00:59:45] *** Joins: joel135 (sid136450@hampstead.irccloud.com)
[00:59:46] *** Joins: SanchayanMaity (sid478177@hampstead.irccloud.com)
[01:00:01] *** Joins: Pent (sid313808@lymington.irccloud.com)
[01:00:19] *** Joins: itok (sid418430@ilkley.irccloud.com)
[01:00:21] *** Joins: braxas (sid508886@lymington.irccloud.com)
[01:00:23] *** Joins: Ginalo (uid502518@5.254.36.57)
[01:00:23] *** Joins: jwpapi (sid502614@uxbridge.irccloud.com)
[01:00:54] <mornfall> twJizhan: so do you mean { (x, x halts on x) | x encodes a program }?
[01:01:07] *** Joins: meltingwax (sid429936@hampstead.irccloud.com)
[01:03:39] *** Quits: placeb0 (uid283215@lymington.irccloud.com) (Quit: Connection closed for inactivity)
[01:03:49] <twJizhan> { (True/False:"program halts on any input?", x) | x encodes a program }
[01:03:53] <mornfall> if so, then that doesn't work, because { x encodes a program } is a recursive set and hence a bijection with ℕ is computable; since the second element (x halts on x) is either true or false for any given x, it can be simply ignored and you still get a bijection
[01:04:50] <twJizhan> True/False:"program halts on any input? <--- this part used Halting Problem
[01:05:12] <mornfall> sure, but it's irrelevant for constructing bijections with ℕ
[01:05:29] *** Joins: bosspotato_ (~bosspotat@lnsm3-montreal02-142-119-117-134.internet.virginmobile.ca)
[01:05:30] *** Quits: bosspotato_ (~bosspotat@lnsm3-montreal02-142-119-117-134.internet.virginmobile.ca) (Changing host)
[01:05:30] *** Joins: bosspotato_ (~bosspotat@user/bosspotato)
[01:05:31] *** Quits: vaporatorius (~vaporator@user/vaporatorius) (Ping timeout: 245 seconds)
[01:05:53] <mornfall> map (x, x is odd) to x… that's a bijection
[01:05:56] <twJizhan> "computable" bijection not
[01:06:09] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[01:06:14] <millido> What is the "easiest" way to determine if a filter is a FIR or IIR filter
[01:06:44] <twJizhan> wait not (x, x is odd) this form
[01:06:55] <twJizhan>  (True/False:"program halts on any input?", x)
[01:07:02] <mornfall> map (x, x halts) to x; that's a bijection from { ( x, x halts ) | x encodes a program } to just { x | x encodes a program }; compose with any bijection from the latter to ℕ and you are done
[01:07:46] <mornfall> you don't need to solve halting in any sense to construct that bijection
[01:08:44] <mornfall> since you know that the program halts or does not, it's entirely irrelevant… (x, true) maps to x and (x, false) maps to x… it's a bijection because (x, true) and (x, false) can't be both in the set
[01:08:55] <PlanckWalk> Yep.  Although every bijection has an inverse, not every computable bijection has a computable inverse.
[01:09:04] *** Quits: bosspotato (~bosspotat@user/bosspotato) (Ping timeout: 245 seconds)
[01:09:05] *** Joins: merpnderp (sid16744@id-16744.hampstead.irccloud.com)
[01:09:15] <mornfall> sure, the inverse is a different story
[01:09:15] *** Quits: xeno (~xeno@user/xeno) (Ping timeout: 260 seconds)
[01:09:59] <twJizhan> i don't know what set you are talking about
[01:10:03] <PlanckWalk> "has computable bijection to" is not a symmetric relation.
[01:11:07] *** Joins: Guest88 (~Guest88@daac-5131-246b-3939-4880-8a0d-07d0-2001.dyn.estpak.ee)
[01:13:47] <Guest88> hi, i see a^b^c  without parenthesis a lot. R interprets it as 2^(3^4) rather than (2^3)^4, can I reliably assume that this is always meant?
[01:14:21] <mornfall> Guest88: that's standard, yes
[01:14:24] <Guest88> thx
[01:15:18] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[01:15:53] *** Quits: Guest88 (~Guest88@daac-5131-246b-3939-4880-8a0d-07d0-2001.dyn.estpak.ee) (Client Quit)
[01:16:56] <twJizhan> what i said is F({x : x encodes a program}) is countable but has no computable bijection with N, where F(x) = (x halts on every input, x)...
[01:17:06] *** Joins: jmft2 (~jmft2@213.31.248.255)
[01:17:41] <mornfall> twJizhan: in any case, if you want to show that there is no computable bijection f: X → Y, the likely best way to do that is to assume that such f exists and use it to compute something known to be non-computable
[01:17:47] <PlanckWalk> twJizhan: Did you read what I said?  "computable bijection *with*" (in the symmetric sense) is meaningless since you can have a bijection in one direction but not the other.
[01:17:59] *** Joins: vaporatorius (~vaporator@180.red-176-84-43.dynamicip.rima-tde.net)
[01:17:59] *** Quits: vaporatorius (~vaporator@180.red-176-84-43.dynamicip.rima-tde.net) (Changing host)
[01:17:59] *** Joins: vaporatorius (~vaporator@user/vaporatorius)
[01:18:11] <PlanckWalk> That's unlike bijections in general, which are always symmetric.
[01:18:40] *** Joins: KUrare_ (~KUrare@user/kurare)
[01:18:55] <PlanckWalk> It is possible to have two sets where there is no computable bijection in either direction, but you found one that isn't.
[01:19:15] *** Joins: bosspotato (~bosspotat@lnsm3-montreal02-142-119-117-134.internet.virginmobile.ca)
[01:19:15] *** Quits: bosspotato (~bosspotat@lnsm3-montreal02-142-119-117-134.internet.virginmobile.ca) (Changing host)
[01:19:15] *** Joins: bosspotato (~bosspotat@user/bosspotato)
[01:20:31] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[01:20:32] *** Joins: xeno (~xeno@user/xeno)
[01:22:49] *** Quits: bosspotato_ (~bosspotat@user/bosspotato) (Ping timeout: 245 seconds)
[01:25:44] *** Joins: emf_ (~emf@2620:10d:c090:400::5:fdfa)
[01:25:57] *** Joins: johnkeats7 (~johnkeats@2804:14c:32:a0cc:159a:aeb1:6929:e396)
[01:27:56] <twJizhan> "has no computable bijection with N" = "has no bijection with N that can be described by any algorithm"
[01:28:01] *** Quits: emf (~emf@2620:10d:c090:400::5:fdfa) (Ping timeout: 245 seconds)
[01:28:03] *** Quits: stipa (~stipa@user/stipa) (Quit: WeeChat 3.3-dev)
[01:28:17] <twJizhan> i still don't know where is confuing or wrong
[01:28:17] *** Joins: stipa (~stipa@user/stipa)
[01:31:07] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 265 seconds)
[01:31:39] *** Quits: wladimir (~doforlove@user/doforlove33) (Quit: WeeChat 3.3)
[01:33:37] <isekaijin> What is the easiest to use software tool for computing Hilbert polynomials?
[01:34:15] <isekaijin> I have a graded subring of C[x,y], i.e., a subring generated by homogeneous elements.
[01:34:54] <isekaijin> So, considering the grading induced by the inclusion, I want to compute the Hilbert polynomial or Hilbert series or whatever of this thing.
[01:35:15] <isekaijin> But I will be damned if I have to do it by hand.
[01:36:16] <isekaijin> I have tried reading the Sage documentation, but that Python class hierarchy is not even remotely close to my intuition about how I think about these mathematical objects.
[01:36:44] <isekaijin> “Well, Python is not specifically designed for mathematics” probably has something to do with it.
[01:38:51] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 265 seconds)
[01:41:34] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[01:42:50] *** Quits: emf_ (~emf@2620:10d:c090:400::5:fdfa) (Ping timeout: 260 seconds)
[01:43:44] *** Quits: magla (~gelignite@55d40f0d.access.ecotel.net) (Quit: Stay safe!)
[01:44:25] *** Joins: emf (~emf@163.114.132.7)
[01:44:56] *** Joins: wladimir (~doforlove@user/doforlove33)
[01:45:43] *** Quits: wladimir (~doforlove@user/doforlove33) (Client Quit)
[01:49:07] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[01:49:54] *** Quits: Hazey_Dream (~user@cpe5c7d7dbd2142-cm5c7d7dbd2140.cpe.net.cable.rogers.com) (Ping timeout: 245 seconds)
[01:50:44] *** Joins: bosspotato_ (~bosspotat@lnsm3-montreal02-142-119-117-134.internet.virginmobile.ca)
[01:50:44] *** Quits: bosspotato_ (~bosspotat@lnsm3-montreal02-142-119-117-134.internet.virginmobile.ca) (Changing host)
[01:50:44] *** Joins: bosspotato_ (~bosspotat@user/bosspotato)
[01:50:49] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[01:51:20] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[01:51:59] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 245 seconds)
[01:52:45] *** Quits: Ginalo (uid502518@5.254.36.57) (Quit: Connection closed for inactivity)
[01:53:22] <davros> whats the name of solutions in algebra written using functoins you can reason about, instead of numerical
[01:53:29] <davros> "closed form" or something
[01:54:08] *** Quits: bosspotato (~bosspotat@user/bosspotato) (Ping timeout: 268 seconds)
[01:55:09] *** Joins: wladimir (~doforlove@user/doforlove33)
[01:55:27] <mornfall> analytic?
[01:57:15] *** Joins: Inline (~Inline@2a02:908:1252:7a80:89dc:6a58:9f2a:ff3d)
[01:58:26] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[01:58:27] *** Quits: KUrare_ (~KUrare@user/kurare) (Ping timeout: 268 seconds)
[01:59:38] <davros> googling it seems "closed form solution" was right
[02:00:02] <davros> https://en.wikipedia.org/wiki/Closed-form_expression
[02:00:11] <mornfall> depends; it's not the opposite of numerical
[02:00:15] *** Quits: wladimir (~doforlove@user/doforlove33) (Ping timeout: 265 seconds)
[02:00:34] <mornfall> there are non-closed form solutions that are not numerical (most commonly power series)
[02:00:54] <davros> ??:  if the solution has integrals.. then you're still relying on numerical, if you can't reduce it to "closed form"
[02:00:59] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[02:01:13] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[02:01:17] *** Quits: jmft2 (~jmft2@213.31.248.255) (Quit: This computer has gone to sleep)
[02:01:23] *** Joins: wladimir (~doforlove@user/doforlove33)
[02:01:25] <mornfall> what integrals?
[02:02:02] <davros> "any integral you can only solve numerically", i think. otherwise if you have say integrate(x.dx blah ) .. thats reducable to a closed form expression
[02:02:09] <mornfall> (also what closed form entails very much depends on which functions you allow)
[02:02:11] <davros> 'integrate my game engine update' is not
[02:02:25] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[02:02:29] <mornfall> power series aren't integrals
[02:02:31] <davros> let me see what the exact dividing line is but..
[02:03:07] <davros> the gist is  "the main difference between writing blah blah sin cos log squared "  and "this thing that can only be approximated with numerical solutions, like my game engine update.."
[02:03:37] <mornfall> yes, and i'm telling you that there are things in between that don't fit in either category
[02:04:08] *** Quits: twJizhan (~twJizhan@101-136-131-88.mobile.dynamic.aptg.com.tw) (Quit: Leaving)
[02:05:04] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-228.sw.biz.rr.com)
[02:05:10] <davros> seems the wikipedia page on closed form does also say "analytic expression", related but indeed not identical.
[02:05:45] <davros> "does it have a closed form solution"  /  "does it have an Analytic expression solution"
[02:06:06] <davros> similar but some details, anyway either term fitted the need
[02:06:40] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[02:06:40] <mornfall> there's indeed a handy table on that page
[02:07:46] *** Quits: paravida (~myChateau@71.215.86.34) (Remote host closed the connection)
[02:08:06] *** Quits: aportnoy (~aportnoy@bras-base-toroon0628w-grc-22-174-95-160-240.dsl.bell.ca) (Remote host closed the connection)
[02:08:15] *** Joins: paravida (~myChateau@71.215.86.34)
[02:15:16] *** Quits: trbp (~trbp@user/trbp) ()
[02:17:46] *** Quits: paravida (~myChateau@71.215.86.34) (Remote host closed the connection)
[02:18:12] *** Joins: paravida (~myChateau@71.215.86.34)
[02:21:32] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: brb)
[02:21:51] *** Joins: tracey (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[02:23:40] *** Quits: Maturion (~Maturion@p200300ede724c900b612ecf6a68c7ac9.dip0.t-ipconnect.de) (Remote host closed the connection)
[02:23:46] *** Quits: ms (~max@user/ms) (Ping timeout: 252 seconds)
[02:24:01] *** Joins: ms (~max@user/ms)
[02:24:18] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:24:18] *** Joins: Arcorann_ (~A@159-196-65-46.9fc441.mel.nbn.aussiebb.net)
[02:24:57] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[02:24:58] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[02:26:16] *** Quits: paravida (~myChateau@71.215.86.34) (Remote host closed the connection)
[02:26:42] *** Joins: paravida (~myChateau@71.215.86.34)
[02:27:21] *** bosspotato_ is now known as bosspotato
[02:27:32] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[02:29:45] *** Quits: paravida (~myChateau@71.215.86.34) (Remote host closed the connection)
[02:31:23] *** Joins: paravida (~myChateau@71.215.86.34)
[02:31:51] *** Quits: paravida (~myChateau@71.215.86.34) (Remote host closed the connection)
[02:35:38] *** Joins: stanrifkin (~stanrifki@p200300dbcf16f700d588348cbed3c03c.dip0.t-ipconnect.de)
[02:35:47] *** Joins: Memory (sid459764@user/memory)
[02:38:24] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-28db-81e5-493b-2536.res6.spectrum.com) (Read error: Connection reset by peer)
[02:39:32] *** Quits: NEYi (~NEYi@109.251.216.38) (Quit: Leaving)
[02:39:49] *** Joins: jmft2 (~jmft2@213.31.248.255)
[02:45:48] *** Joins: Crescendo (~Crescendo@user/crescendo)
[02:47:11] *** Quits: emerent (~quassel@p200300cd5748555fba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[02:47:36] *** Joins: emerent (~quassel@p200300cd57485522ba27ebfffed28a59.dip0.t-ipconnect.de)
[02:48:25] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[02:49:41] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 245 seconds)
[02:49:47] *** Joins: seninha (~seninha@user/seninha)
[02:50:24] *** Joins: Null_A (~null_a@2601:645:8700:2290:75e9:85ca:7982:df23)
[02:52:28] *** Joins: chasmo77 (~chas77@71.63.241.168)
[02:57:09] <biberao> Hi so with an inequality with absolute values i need to intersect both results what about when without <0 or >0 ?
[02:59:30] *** Quits: Null_A (~null_a@2601:645:8700:2290:75e9:85ca:7982:df23) (Remote host closed the connection)
[02:59:44] *** Quits: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net) (Remote host closed the connection)
[03:00:09] *** Joins: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net)
[03:01:09] *** Quits: emf (~emf@163.114.132.7) (Ping timeout: 245 seconds)
[03:01:56] *** Joins: i0e (~is0ke3@user/is0ke3)
[03:02:31] <mornfall> the easiest/safest way is to find the values where the values inside the abs() change signs and do each segment separately
[03:03:04] <biberao> ok
[03:03:05] *** Quits: Inline (~Inline@2a02:908:1252:7a80:89dc:6a58:9f2a:ff3d) (Ping timeout: 265 seconds)
[03:03:33] <biberao> mornfall: im doing the sign table but im trying to learn other ways
[03:04:18] <mornfall> right; i don't think there's a universal shortcut
[03:04:39] *** Joins: ferdna (~ferdna@user/ferdna)
[03:05:10] *** Joins: Inline (~Inline@2a02:908:1252:7a80:89dc:6a58:9f2a:ff3d)
[03:05:46] <biberao> like i saw some tricks but i cant remember
[03:06:13] <biberao> so the absolute values "demands" an intersection of values right
[03:09:45] <isekaijin> “|a| < b” becomes “-b < a < b”, whereas “|a| > b” becomes “a < -b or a > b”
[03:09:55] <isekaijin> (The cases with non-strict inequalities are similar.)
[03:09:57] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[03:11:56] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[03:14:58] *** Joins: frelleck (~frelleck@user/frelleck)
[03:16:13] <isekaijin> davros: It is not so black and white. There are analytic solutions that are easier to reason about than others.
[03:16:29] *** Quits: arseniiv (~arseniiv@136.169.202.194) (Ping timeout: 265 seconds)
[03:16:54] *** Joins: Null_A (~null_a@2601:645:8700:2290:8de:8d66:958e:46b4)
[03:17:24] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-228.sw.biz.rr.com) (Ping timeout: 245 seconds)
[03:19:30] *** Joins: h4zel (~hazel@user/h4zel)
[03:22:53] <PlanckWalk> The safest is to write the definition of absolute value and reason from those.
[03:23:01] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[03:23:25] <biberao> ok thanks
[03:24:05] <PlanckWalk> |a| = a if a >= 0, -a if a < 0.  So |a| < b means either  a >= 0 and a < b, or a < 0 and -a < b.
[03:25:28] <biberao> i got to practice
[03:25:35] <biberao> i saw one that confused me a bit
[03:25:37] <biberao> hehe
[03:26:43] <isekaijin> Let N be the additive monoid of natural numbers, and let k be a positive integer. I am working with the quotient monoid Q = N^3 / ~, where (x,x,0) ~ (0,0,kx).
[03:27:14] *** Joins: brownorange (~brownoran@user/brownorange)
[03:27:32] <biberao> like this one 1/x(1-x)>1/x
[03:27:42] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[03:28:10] <biberao> the writing of the interval notation got me not understanding
[03:28:22] <isekaijin> Now consider the filtered sequence of submonoids Q_n = { (x,y,z) \in Q | x + y + z >= n }. Note that, here (x,y,z) actually denotes an equivalence class, and the inequality x + y + z >= n means “the class (x,y,z) has a representative such that x + y + z >= 0”.
[03:28:29] <[itchyjunk]> Hmm what did monoid mean?
[03:28:52] <[itchyjunk]> group without inverses?
[03:29:01] <isekaijin> I am interested in counting the cardinalities of the subsets Q_n \ Q_{n+1}.
[03:29:12] <isekaijin> How should I go about it?
[03:29:28] <isekaijin> I mean, in an intelligent way, avoiding lengthy computations as much as possible.
[03:30:00] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[03:30:07] <isekaijin> (This is actually the “easy” problem I have. I have a much harder problem involving another monoid, which I am not even done constructing yet.)
[03:30:18] <brownorange> i'm somewhat confused. how do i define ForAll, if i can't conceive of it in the first place without forall?
[03:30:33] <isekaijin> Are you still going at it?
[03:30:37] <isekaijin> Find a logic book and read it.
[03:30:50] <brownorange> I have a metamathematics book
[03:31:08] <isekaijin> No, no, I do not mean one of those books with grandoise aims at tackling foundations.
[03:31:17] <isekaijin> I mean a “basic logic for math undergraduates” book.
[03:31:22] <brownorange> but forall is foundations
[03:31:23] <brownorange> oh
[03:31:48] <isekaijin> I can recommend the book I used when I was an undergraduate. Let me find the reference.
[03:32:08] <brownorange> sure, but it seems my trouble is how to say this variable can't be instances
[03:32:11] <brownorange> instanced*
[03:33:05] <isekaijin> “Logic for Mathematicians”, by Alan G. Hamilton.
[03:33:48] <isekaijin> You can read the first chapter fast enough, but read more carefully starting from chapter 2.
[03:34:30] *** Quits: wladimir (~doforlove@user/doforlove33) (Ping timeout: 265 seconds)
[03:34:45] <isekaijin> If you do not read carefully enough, then you might end up thinking that some finicky distinctions that the book makes are trivial, when they in fact are not.
[03:36:13] <brownorange> isekaijin how do you prove a forall statement without a forall, is the answer to that, just no you can't?
[03:36:33] <isekaijin> brownorange: There are purely syntactic rules for “proving”.
[03:37:09] <isekaijin> From the point of view of logic, at least as explained in this book, there is no need to reason about what a statement “means” when you are proving it.
[03:38:02] <mornfall> that's the point of proofs; you can't enumerate all the possible values to check whether a forall statement is true
[03:38:06] <isekaijin> You just follow a bunch of syntactic manipulation rules. So, for example, to decide whether you can instantiate a predicate with a specific expression, you use a purely syntactic rule to decide if the replacement is safe.
[03:38:21] <mornfall> but you may be able to construct a proof, in which case you know the statement is true
[03:38:22] *** Quits: deavmi (~tbk@user/deavmi) (Ping timeout: 265 seconds)
[03:38:33] <brownorange> @isekaijin what do you call such variables?
[03:38:51] <isekaijin> What do you mean by “such variables”?
[03:39:09] <brownorange> where in a specific expression you decide if a replacement of it is allowed
[03:39:22] <isekaijin> I forget what the book calls it.
[03:39:24] <isekaijin> Let me check.
[03:39:53] <brownorange> i'm aware of substitution generally works for propositional logic, but what do you call variables that prevent certain substitutions
[03:41:16] <brownorange> i bet there's a fancy name
[03:41:31] <isekaijin> “Definition 3.11: Let A be any well-formed formula in a language L. A term t is free for the variable x in A if x does not occur free in A within the scope of a (Forall y), where y is any variable occurring in t.”
[03:42:38] <isekaijin> I must remark that this book's approach to deciding whether a substitution is safe does conflict with what computer scientists' use, though.
[03:42:58] <brownorange> what about "constant object"?
[03:43:08] <isekaijin> What do you mean by “constant object” here?
[03:43:49] <brownorange> "Constants are underlined letters (like a, b, and c) representing a particular object from the universe"
[03:43:57] <mornfall> you just need to avoid variable capture, is all
[03:44:24] <ppw> can someone explain to me the relationship between the Hessian and Fisher's Information Matrix in MLE?
[03:44:30] <isekaijin> brownorange: It means that you are getting way ahead of yourself. The correct approach to studying this stuff is to study the syntactic manipulation rules separately from the semantics.
[03:44:57] <isekaijin> First do internalize the syntactic manipulation rules.
[03:45:40] <mornfall> brownorange: that's all there is; it's just objects from the universe (domain of discourse, if you will)
[03:45:47] <brownorange> the point is i want to x say is prime, which assumes some inference rule or axiom or definition that can assert x is prime. but i don't want that to then be substituted for anything  , just hte x that is prime
[03:46:27] <mornfall> if you do theory of natural numbers, the objects are natural numbers
[03:46:44] *** Quits: tacegory (~tacegory@user/tacegory) (Remote host closed the connection)
[03:46:51] <mornfall> if you do a theory of bagels, the objects are bagels
[03:48:44] <mornfall> logic is not concnerned with the nature of the objects; this is abstracted from using constant, function and predicate symbols
[03:50:13] *** Quits: begui (~begui@2600:1700:1950:5fa0:884c:54f3:ebfa:f5d5) (Ping timeout: 252 seconds)
[03:50:15] *** Joins: bj_990 (~begui@108-200-216-48.lightspeed.dybhfl.sbcglobal.net)
[03:50:54] <mornfall> assigning meaning to those symbols is a matter for interpretation (in the technical sense of the word)… you'll get there, in due time
[03:53:01] *** tusko is now known as Alkibiades
[03:53:05] *** Joins: ppw_ (~quassel@user/ppw)
[03:54:49] <isekaijin> brownorange: Sadly, no, the syntactic manipulation rules do not allow you to prescribe an interpretation for your symbols.
[03:55:03] <isekaijin> You just need to let go, and accept that the symbols are a priori detached from their intended meanings.
[03:55:34] <isekaijin> There will be other unintended meanings that are compatible with your symbol manipulation rules.
[03:57:13] <isekaijin> It is very similar how in algebra the axioms of a ring are just some of the usual properties of the integers, but they allow for models that are very different from the integers.
[03:57:50] *** Quits: ppw (~ppw@user/ppw) (Quit: Client closed)
[03:57:56] *** ppw_ is now known as ppw
[03:59:43] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[04:00:04] <W> https://en.wikipedia.org/wiki/Tarski%27s_undefinability_theorem is probably relevant
[04:00:27] *** Quits: NeoCron (~NeoCron@p200300c4cf18cd00433f901d5cf4f3d0.dip0.t-ipconnect.de) (Remote host closed the connection)
[04:00:46] <ppw> so ... Gödel?
[04:00:48] <isekaijin> Yeah, but I think brownorange would benefit from really learning logic from the basics.
[04:00:55] <W> I agree
[04:00:55] <isekaijin> W ^
[04:01:23] <isekaijin> ppw: And, sorry, I saw your question about Fisher information and maximum-likelihood estimates, but I really do not know anything about the topic, so...
[04:01:44] <ppw> oh, no matter. thank you for noticing at least :)
[04:03:32] <ppw> stats SE seems to have the answer.
[04:03:39] <isekaijin> Great!
[04:04:31] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[04:05:11] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[04:06:14] <isekaijin> ppw: Could you share the Stats.SE link? Maybe if I cannot finish my AG homework today, at least I can learn something unrelated.
[04:07:06] <ppw> uh ... sure? https://stats.stackexchange.com/questions/68080/basic-question-about-fisher-information-matrix-and-relationship-to-hessian-and-s
[04:07:25] <isekaijin> Great, thanks!
[04:08:18] *** Quits: bj_990 (~begui@108-200-216-48.lightspeed.dybhfl.sbcglobal.net) (Quit: Leaving)
[04:09:08] *** Quits: vqueiroz (uid340368@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[04:09:43] *** Joins: vicfred (~vicfred@user/vicfred)
[04:10:16] *** Quits: Inline (~Inline@2a02:908:1252:7a80:89dc:6a58:9f2a:ff3d) (Ping timeout: 265 seconds)
[04:16:14] *** Joins: Nickssen (~Nickssen@pc-25-120-47-190.cm.vtr.net)
[04:18:19] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[04:24:38] *** Joins: newpy (~newpy@2602:ffc6:200:ce:cdda:49c3:129a:15ef)
[04:25:04] <newpy> I have a question on page 92 of this book: http://incompleteideas.net/book/the-book.html
[04:25:47] <newpy> for first-visit monte carlo prediction, it says "Unless S_t appears in S_0, ... S_{t-1}:" but shouldn't it say IF S_t appears?
[04:26:39] <newpy> oh wait nevermind, I misunderstood what they meant by first visit
[04:26:51] <newpy> they mean first visit starting from the end
[04:28:00] <newpy> oh wait no they do mean first visit from the front
[04:28:14] <newpy> so unless there is an earlier visit, append
[04:28:39] <PlanckWalk> Yes, it only does that section of code if the S_t hasn't happened before.
[04:29:45] *** Joins: Decker (~d3x0r@ip68-108-54-126.lv.lv.cox.net)
[04:29:49] <Decker> Hi
[04:29:51] <Decker> Help?
[04:29:59] <Decker> (figure a rough solution for me?)
[04:30:34] *** Quits: bosspotato (~bosspotat@user/bosspotato) (Ping timeout: 265 seconds)
[04:30:52] <Decker> I have 24 evenly spaced points (15 degrees apart) around a circle (irrelavent) I have A point on a circle... and I want to have a grid in the center that is x,y(,z) and have the opint point at it, given a hangle of yaw and pitch from that point
[04:31:03] <Decker> 0 degrees of pitch is pointing to the center of the circle
[04:31:21] <Decker> 0 degrees of yaw is pointing at the center of the circle (I mean)
[04:32:04] <Decker> I'd think 0 is 0,0(,0)
[04:32:29] <Decker> (z is sort of optional, I'm fine if the additional angle afftect the actual x/y without regard
[04:32:44] <Decker> which z would be the pitch angle
[04:36:26] <PlanckWalk> What does it mean for a point to "point at" some other point?  Do you mean calculate a vector from that point towards the other point, or maybe some rotation matrix?
[04:37:48] *** Quits: Null_A (~null_a@2601:645:8700:2290:8de:8d66:958e:46b4) (Remote host closed the connection)
[04:37:51] <isekaijin> For anyone else who has used also Haskell (the programming language), have you ever wished that standard mathematical notation had $?
[04:38:34] <isekaijin> I religiously denote the application of a function composition by f \circ g(x), rather than f(g(x)), but it is still nowhere as clear as f . g $ x.
[04:38:50] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[04:40:10] *** Quits: xff0x (~xff0x@2001:1a81:5214:3f00:d123:8201:4d44:2918) (Ping timeout: 252 seconds)
[04:40:26] <[itchyjunk]> I didn't know haskell has $ like that and i hope mathe never gets it
[04:40:44] <[itchyjunk]> both f circ g and f(g) makes sense to me
[04:40:55] <isekaijin> f \circ g and f(g) mean different things.
[04:41:16] <isekaijin> Note that I actually said “f o g(x)”.
[04:42:04] *** Joins: xff0x (~xff0x@2001:1a81:5251:1900:7e75:5755:e512:a0e0)
[04:44:13] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[04:44:34] *** Quits: biberao (~m@user/biberao) (Ping timeout: 252 seconds)
[04:45:02] <isekaijin> The point to $ is that you can say “f $ very long and complicated expression” instead of “f(very long and complicated expression)”.
[04:45:18] <isekaijin> It is particularly useful when the “very long and complicated expression” itself has parentheses.
[04:45:37] <Decker> it's just a angle - ... it's a mining laser, on a turret... the laser points in a direction toward the inside of the circle
[04:45:38] <isekaijin> No need to count those annoying parentheses, just to make sure you have written a syntactically correct expression.
[04:45:39] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Remote host closed the connection)
[04:46:08] <Decker> but does not go past the circle, and some lasers should point places they can't actually reach (these lasers also have a finite range)
[04:46:09] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[04:47:26] <Decker> it's a vector - I guess atan(x/y) with x,y a fixed offset of the x/y of the point from the center 'origin'
[04:47:52] <Decker> depending on the point it is around the circle... which is a fixed increment
[04:50:40] *** Leonarbro_ is now known as Leonarbro
[04:50:44] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Ping timeout: 265 seconds)
[04:51:53] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[04:52:49] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:55:44] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[04:55:59] <newpy> PlanckWalk, on the next page, it says each average is an unbiased estimate, and std dev of its error falls as 1/sqrt(n)
[04:57:04] <newpy> is this just b/c the numerator of std error is dwarfed by the denominator sqrt(n) as n grows?
[04:57:52] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[04:58:09] <greenbagels> isekaijin: counting parens is kinda irrelevant; you'd run into that issue even within the argument of a single function
[04:59:55] *** Quits: sheepduck_ (~sheepduck@user/sheepduck) (Ping timeout: 265 seconds)
[04:59:56] <Decker> ( https://youtu.be/ZR1t2xfqFJI  Is me implementing my idea) it should be easy other than copy and pasting a lot of times...
[05:06:24] <isekaijin> greenbagels: The human mind is better at remembering whether one has written a single necessary closing parenthesis, than at remembering how many of thirteen necessary closing parentheses one has already written.
[05:07:10] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[05:07:28] *** Joins: Crescendo (~Crescendo@user/crescendo)
[05:07:29] *** Joins: ozarker (~ozarker@172-15-173-110.lightspeed.mssnks.sbcglobal.net)
[05:08:04] *** Quits: Nickssen (~Nickssen@pc-25-120-47-190.cm.vtr.net) (Quit: Client closed)
[05:09:03] <isekaijin> greenbagels: The alternative is inventing paredit for mathematical notation, but good luck with that.
[05:09:52] <betelgeuse> is there a symbol for running a function over a vector, like map in haskell?
[05:10:41] *** Joins: cuppajoeman (~cuppajoem@public-125-100.nat.utoronto.ca)
[05:10:47] <isekaijin> Unless your function is “multiplying times a scalar” (and the scalar must be the same for all entries), I do not think there is a standard symbol for that.
[05:11:09] <cuppajoeman> Hey what does "RxR in dictonary order" mean?
[05:11:18] <betelgeuse> isekaijin thanks
[05:11:45] <isekaijin> cuppajoeman: It means that (a,b) < (c,d) if either [a < b] or [a = b and c < d].
[05:12:19] <greenbagels> betelgeuse: in math you generally don't "run functions"; you want the value of a function at a certain point of its domain
[05:12:36] <greenbagels> its not like in procedural programming where a function is some set of statements with side effects
[05:12:50] <cuppajoeman> Thanks isekaijin
[05:12:52] <cuppajoeman> I get it
[05:12:58] <isekaijin> betelgeuse: In mathematics, vectors have a geometric meaning, and it is expected that operations on vectors respect this geometric meaning.
[05:13:31] <isekaijin> Unlike programming, where lists or vectors are just ordered collections of elements, and there are no prior expectations on how you intend to use these elements.
[05:14:19] <betelgeuse> i was hoping to be able to abuse them to just loop over each element
[05:14:33] <betelgeuse> looks like ill have to invent some symbology for that
[05:14:55] <isekaijin> In mathematics, what you use for that purpose are sequences.
[05:15:05] <isekaijin> You just do not call them vectors.
[05:15:21] <betelgeuse> is that a data structure
[05:15:45] <isekaijin> Mmm. I would not call them a “data structure”, but if you think like a programmer, then I guess you can call them that.
[05:16:06] <betelgeuse> apologies
[05:16:11] <cuppajoeman> I'm having some trouble understanding these figures can someone help out (related to the dictionary order I think) https://i.imgur.com/vynJlhT.png
[05:16:16] <betelgeuse> will take some time to adapt to math terminology
[05:16:17] <isekaijin> No need to apologize, it is not like you are offending me or anything.
[05:18:59] <greenbagels> isekaijin: you can certainly call arbitrary tuples of numbers vectors
[05:19:18] <greenbagels> you don't automatically violate some geometric law by calling (2,4,4,7) a vector even if it isnt originally geometrically motivated
[05:19:26] <cuppajoeman> I guess I'm  just a little bit confused with the notation (a, b) when a, b in R^2
[05:19:31] <isekaijin> greenbagels: Yeah, but why bother calling them vectors if you are not going to apply vector operations?
[05:19:40] <PlanckWalk> Masthematics doesn't have "loops" in that sense.  There is no time ordering to function application.
[05:19:43] *** Quits: h4zel (~hazel@user/h4zel) (Ping timeout: 252 seconds)
[05:20:12] <cuppajoeman> we are multithreaded
[05:20:13] <PlanckWalk> (f(x_1), f(x_2)) does not mean "apply f to x_1, then apply f to x_2, then collect them into a tuple"
[05:21:27] <betelgeuse> what would be the difference if i were to do as your description said
[05:21:29] <PlanckWalk> If you really need to model time orderings, then yes you'll need more specialized notation.
[05:21:48] <PlanckWalk> What do you mean "do" as my description said?
[05:22:24] <betelgeuse> sorry, let me rewrite my question better
[05:22:24] <betelgeuse> how different is "(f(x_1), f(x_2))" from  "apply f to x_1, then apply f to x_2, then collect them into a tuple"
[05:22:25] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 260 seconds)
[05:22:42] <PlanckWalk> Notation in mathematics generally describes relationships between things, not "how to do things"
[05:22:53] <betelgeuse> yeah thats true
[05:22:57] <cuppajoeman> Does this mean it "overflows" until it gets there?
[05:22:58] <cuppajoeman> https://i.imgur.com/el1VQUO.png
[05:23:04] <cuppajoeman> I've never seen this before
[05:23:09] <betelgeuse> thanks, PlanckWalk
[05:23:42] <PlanckWalk> There is more specialized notation for "sequences of operations", in the overlap between math and computer science.
[05:24:06] <betelgeuse> can you give a link or search term for them
[05:24:23] <PlanckWalk> The trouble is that everyone invented their own notation for their own special case.
[05:25:00] <betelgeuse> alright then, ill have a look at the unicode table and pick something unused
[05:26:59] *** Quits: andreasbuhr (~quassel@p548dd828.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[05:27:04] *** Joins: andreasbuhr_ (~quassel@p548dd8fb.dip0.t-ipconnect.de)
[05:27:33] <Decker> you can get loops with recursion
[05:28:03] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[05:28:23] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Read error: Connection reset by peer)
[05:28:46] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[05:28:46] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[05:29:58] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[05:32:13] <greenbagels> betelgeuse: (f(x1),f(x2)) means "a 2D vector of the values f(x1), f(x2)"
[05:32:54] <greenbagels> with components, not of the values*
[05:35:22] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c) (Remote host closed the connection)
[05:35:26] <PlanckWalk> For a lot of things it doesn't even make sense to have notation for order of computation.  E.g. f:R->R, f(x) = x^2  describes an uncountably infinite number of values for f.  You can't map those to discrete computation steps, and most of the values are not representable in a computer anyway.
[05:36:53] <betelgeuse> sure, i was just trying to avoid the burden of writing `(f(a1), f(a2), ..., f(an))` and thought `map(f,a)` would look much better
[05:40:08] *** Quits: kurfen (~kurfen@lfbn-ann-1-215-215.w86-200.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[05:42:38] <greenbagels> PlanckWalk: our functions also don't have side effects
[05:42:45] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[05:44:48] *** Quits: yinghua (~yinghua@2800:2121:1400:900:c0b8:d50d:9ecd:24ca) (Quit: Leaving)
[05:45:08] <greenbagels> betelgeuse: if you absolutely need a vector, just take your favorite basis vectors e1, e2, ..., en. and call it the sum of f(ai)*ei
[05:45:09] *** Joins: deavmi (~tbk@user/deavmi)
[05:50:44] *** Joins: emf (~emf@2620:10d:c090:400::5:4a32)
[05:55:06] *** Quits: emf (~emf@2620:10d:c090:400::5:4a32) (Ping timeout: 245 seconds)
[05:59:14] *** Quits: DefiantN (~DefiantN@user/defiantn) (Ping timeout: 246 seconds)
[06:00:19] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[06:00:51] <Fangs> betelgeuse: the former is understandable, the latter, you might need to have seen haskell or something
[06:01:52] *** Joins: trace987 (~trace@95.90.106.112)
[06:02:19] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[06:02:58] <Fangs> if X, Y are sets and you have a function f: X -> Y, sometimes people either introduce some sort of notation f^(n): X^n -> Y^n as that map (f(x1),...,f(xn)) I think. or call the map capital F
[06:03:16] *** Joins: kurfen (~kurfen@lfbn-ann-1-215-215.w86-200.abo.wanadoo.fr)
[06:04:09] *** Joins: twJizhan (~twJizhan@2404:0:823a:fdde:41ff:dc01:b2c8:f7cd)
[06:04:30] *** Quits: tracey (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[06:05:14] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[06:06:52] *** Joins: _abrantesasf_ (~abrantesa@187.36.170.211)
[06:07:14] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Ping timeout: 265 seconds)
[06:12:05] *** Quits: _abrantesasf_ (~abrantesa@187.36.170.211) (Remote host closed the connection)
[06:27:03] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Remote host closed the connection)
[06:27:54] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[06:42:55] *** Joins: stanrifkin_ (~stanrifki@p200300dbcf16f60013bce586d6bee853.dip0.t-ipconnect.de)
[06:43:24] *** Quits: Oli (~Unknown@user/oli) (Quit: leaving)
[06:43:38] *** Joins: Oli (~Unknown@user/oli)
[06:45:34] *** Quits: stanrifkin (~stanrifki@p200300dbcf16f700d588348cbed3c03c.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[06:45:43] *** Quits: twJizhan (~twJizhan@2404:0:823a:fdde:41ff:dc01:b2c8:f7cd) (Quit: Leaving)
[06:48:04] *** Quits: cuppajoeman (~cuppajoem@public-125-100.nat.utoronto.ca) (Quit: Client closed)
[06:49:42] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[06:49:58] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[06:54:27] *** Quits: johnkeats7 (~johnkeats@2804:14c:32:a0cc:159a:aeb1:6929:e396) (Ping timeout: 268 seconds)
[06:59:48] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[07:01:15] *** Quits: Brainium (~brainium@user/brainium) (Quit: Konversation terminated!)
[07:02:44] <Alkibiades> If somebody put a gun to your head and they were like find the gcd of a and b or I'm gonna give you this medical treatment that you really don't want... how would you find the gcd?
[07:03:07] <munkis> euclid
[07:03:08] *** Joins: vqueiroz (uid340368@id-340368.hampstead.irccloud.com)
[07:03:12] <Alkibiades> all day
[07:03:22] <Alkibiades> since like 2000 years nobody has beaten it. wow.
[07:04:12] <munkis> don't know if there's better but I already have an implementation and it's simple.
[07:08:32] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[07:17:51] <isekaijin> Hello. I am having a VERY dumb moment today. At least I realize it.
[07:18:03] <isekaijin> Consider the coordinate ring of a hyperbola C[x,y] / (xy - 1).
[07:18:57] <isekaijin> This is a finitely generated 1-dimensional ring, therefore, there exists a subring R of it which is isomorphic to the polynomial ring C[t], and such that C[x,y] / (xy - 1) is an integral extension of R.
[07:19:08] <isekaijin> (By the Noether normalization lemma.)
[07:19:41] <isekaijin> But here is where I am stuck. Notice that R contains no units other than the elements coming from C.
[07:20:02] <isekaijin> However, C[x,y] / (xy - 1) contains more units than that. Namely, x and y are units!
[07:20:10] <isekaijin> How is this even possible?
[07:20:52] <isekaijin> Oooh, never mind.
[07:20:56] <isekaijin> I just realized my mistake.
[07:21:05] <isekaijin> An integral extension cannot add inverses to elements of the base ring.
[07:21:13] <isekaijin> inverses of*
[07:21:37] <isekaijin> But it can add its own inverse pairs!
[07:21:50] <isekaijin> All that I can conclude is that x is not contained in this subring R.
[07:22:45] <isekaijin> Wow, how dumb of me. Of course. An algebraic field extension E/F is a particular kind of integral extension.
[07:23:04] <isekaijin> Of course E does not add inverses of elements of F, because F already contains them! But E add its own invertible elements.
[07:23:20] *** Quits: newpy (~newpy@2602:ffc6:200:ce:cdda:49c3:129a:15ef) (Quit: Leaving)
[07:25:12] <Fangs> isekaijin: integral extension are ones that dont add zero divisors right?
[07:25:50] <isekaijin> No.
[07:25:55] <isekaijin> Adding zero divisors is fine.
[07:26:16] <isekaijin> Every new element is a zero of a monic polynomial with coefficients in the base ring.
[07:26:50] *** Joins: audiobirb (~audio@cpe-24-27-99-134.tx.res.rr.com)
[07:26:58] <isekaijin> So you can show that, if A \subset B is an integral extension and x \in A has an inverse in B, then the inverse is already in A.
[07:27:20] <isekaijin> And I was like, how is it possible that C[x,y] / (xy - 1) adds an inverse to x?
[07:27:50] <isekaijin> The dilemma was solved by noticing that, while C[x,y] / (xy - 1) has a subring isomorphic to C[x], this subring is not C[x] itself.
[07:28:44] <isekaijin> I literally spent 30 more minutes than I ought to have to in the shower just thinking about this issue.
[07:29:16] *** Quits: audio (~audio@2603-8081-1800-1546-2f35-9681-dd0e-8587.res6.spectrum.com) (Ping timeout: 245 seconds)
[07:30:56] <Galois> you know, I went through that same problem just last year
[07:31:06] <Galois> it helps to change coordinates u=x+y, v=x-y
[07:31:20] <Galois> or even u=x+iy, v=x-iy if you have sqrt(-1) available
[07:31:35] <isekaijin> Yeah.
[07:31:39] <isekaijin> Thanks.
[07:32:32] <Fangs> I suppose over rings, the fact that its a monic polynomial plays a greater role?
[07:32:46] <isekaijin> Yes.
[07:32:54] <Fangs> fair
[07:33:03] <isekaijin> Extensions by roots of monic polynomials are way more important than extensions by roots of arbitrary polynomials.
[07:33:13] <isekaijin> Over fields, it does not matter simply because every polynomial is associated to a monic one.
[07:35:45] <isekaijin> The basic intuition, which is crude, but works at least for me, is that adding inverses to a base ring removes points in the spectrum of that ring.
[07:36:10] <isekaijin> For example C[x] is the coordinate ring of the line A^1, but C[x,y] / (xy - 1) removes the origin.
[07:36:55] <Fangs> hrm.. C[x,x^{-1}] removes the origin too?
[07:37:05] <Fangs> oh stupid, thats what you wrote
[07:37:17] <isekaijin> Yes, we are talking about the same ring.
[07:37:36] <isekaijin> And, after this stupid moment of mine, I cannot in good conscience call anyone stupid for not noticing basic commutative algebra facts.
[07:37:42] <isekaijin> Commutative algebra is tricky!
[07:38:03] <isekaijin> Actually, it is tricky at best... most of the time it is plainly hard.
[07:38:03] <Fangs> I once said C[x] had no ideals
[07:38:10] <isekaijin> Hehe.
[07:38:19] <Fangs> (it was in terms of 'representations' and 'submodules, but still that's what ammounts to what I said)
[07:41:33] <isekaijin> It is so easy to end up saying nonsense. When I started studying this, I expected C(X) to have dimension 1, because it is the field of fractions of a curve.
[07:43:49] *** Quits: causative (~halberd@user/causative) (Ping timeout: 252 seconds)
[07:43:59] <Fangs> ehrmm whats its dimension?
[07:44:06] <isekaijin> Zero, because it is a field.
[07:46:18] <isekaijin> We get C[x, x^{-1}] by just adding an inverse to x. This removes the origin of A^1, whose ideal in C[x] is (x).
[07:46:32] <isekaijin> But we get C(X) by adding an inverse to every monomial (x-a) with a \in C. This removes ALL closed points.
[07:47:01] *** Joins: Carbonflux (~Carbonflu@c-24-56-228-141.customer.broadstripe.net)
[07:48:27] <Fangs> its a field so every module over it are just vector spaces which are free.. I think then you can say something about some (co?)homological dimension I think?
[07:48:46] <isekaijin> I know absolutely nothing about homological algebra.
[07:48:59] <Fangs> idk this Krull dimension business even less
[07:49:13] <isekaijin> I need to learn homological algebra soon.
[07:49:40] <isekaijin> Because I need to manipulate Koszul complexes, or at least say nontrivial things about them.
[07:50:02] <Fangs> always thought they're hard in algebraic geometry land, much easier in topological land
[07:50:45] <isekaijin> Are you thinking of, say, singular homology?
[07:51:39] <Fangs> sure
[07:52:45] <Fangs> isekaijin: very recently learnt that sheaf cohomology is not homotopy invariant to the underlying space
[07:53:00] <isekaijin> Whoa.
[07:53:28] <Fangs> (its def true for manifolds and constant sheafs, they give the same data as 'ordinary' cohomology)
[07:53:50] <Fangs> I dont understand the counterexample, but I just beleive what this guy says
[07:54:28] <isekaijin> But all that we expect from ordinary cohomology theories is that they work “reasonably” for “reasonable” spaces (manifolds, CW complexes), right?
[07:54:53] <isekaijin> No big deal if you can construct some weird pathological stuff that only dedicated point-set topologists care about, and then it breaks.
[07:55:33] <Fangs> https://math.stackexchange.com/questions/2118491/sheaf-on-0-1-with-non-trivial-cohomology
[07:55:42] <isekaijin> Let's see.
[07:56:02] <Fangs> the space is 'reasonable', its just the unit interval
[07:56:09] <Fangs> the sheaf seems pathological
[07:56:40] <isekaijin> Oh.
[07:56:51] *** Quits: darkapex (~darkapex@user/darkapex) (Read error: Connection reset by peer)
[07:58:01] <Fangs> isekaijin: idk how comfortable are you with complex projective curves, but my complex analysis course had the option to do Kodeira-Spencer theory stuff
[07:58:20] *** Joins: darkapex (~darkapex@user/darkapex)
[07:58:30] <Fangs> I dropped the subject before getting to that point though, I was to distraught by the whole non-homotopy invariant business
[07:59:02] <isekaijin> Mmm... That sounds more advanced than anything I have studied so far.
[07:59:11] <Fangs> isekaijin: but if you want this sheaf cohomology business to capture geometric data, naively you would WANT them to not be homotopy invariant
[07:59:21] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:e9da:2527:b3fb:7c20) (Quit: Quit)
[07:59:26] <Fangs> dw about it I didn't learn any, dropped the course before then
[07:59:32] <isekaijin> Aw.
[07:59:49] *** Quits: Mare (~Mare@71.196.251.141) (Ping timeout: 252 seconds)
[08:00:49] <Fangs> iirc, for complex manifolds in general you run into obstructions, theres probably some subtleties there. but you can deform 'complex structures' on a riemman surface and this gives a class in the first sheaf cohomology of your (compact?) riemann surface X with values in TX
[08:01:07] <Fangs> idk geometry so idk what you can do with them
[08:01:26] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[08:01:27] <isekaijin> Maybe get a different complex manifold structure with the same underlying smooth manifold?
[08:01:30] <isekaijin> I don't know either.
[08:01:36] <Fangs> something to that effect
[08:01:45] <Fangs> that's also my naive understanding of it
[08:02:04] <isekaijin> That actually sounds super cool!
[08:02:25] <Fangs> isekaijin: but you see my point right? if it IS always homotopy invariant there's no chance you can use it to distinguish any such geometric data
[08:02:35] <isekaijin> Right.
[08:04:04] <isekaijin> Mmm, my algebraic geometry professor promised that we would see sheaf cohomology this semester, so hopefully I will learn at least a little bit of this.
[08:06:30] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[08:07:28] <Fangs> idk if you're someone who avoids analysis, but I think Foster's book is too analytic for myself
[08:08:15] <Fangs> Rick Miranda's or Griffith's might be more your alley I think, there might be entirely algebraic books as well
[08:08:47] <isekaijin> I do not intentionally go near where hard real analysis is done, but small amounts of real analysis, at the undergraduate or early graduate level, are okay.
[08:09:09] <isekaijin> Complex analysis is fine.
[08:09:19] <isekaijin> Added all those books to my queue.
[08:09:27] <isekaijin> And thanks!
[08:10:47] <brownorange> (!SomeX ForAllY ForAllZ ((x > 1) and (x != y) and (x != z) and (y > 1) and (z > 1) and (y*z!= x))) <-> Prime(x)      x is prime because it is 2 or greater, and there is no two factors y,z when multiplied equal x
[08:11:03] <Fangs> kinda think that these hyperelliptic curves would give a lot of nice example of algebraic curves thats explicit
[08:11:22] <Fangs> that are not strictly speaking 'affine' (if you take their compactification)
[08:11:38] <brownorange> i'm not sure if i can stack the quantifiers that way
[08:14:41] <Fangs> I don't remember the rules for moving quantifiers around, but say.. Forall x, (Forall y P(x) and P(y)), you can turn this into Forall x, (P(x) and (Forall y P(y)) can't you?
[08:15:26] *** Joins: alzgh (~alzgh@user/alzgh)
[08:16:09] <Galois> certainly you shouldn't be using x on the right side of the <-> sign when x is quantified on the left side and the scope of the quantification is enclosed in parentheses that only encompass the left side
[08:17:13] <mornfall> you can move a subformula out of the scope of the quantifier if there are no free occurrences of the quantified variable in the said subformula
[08:17:32] <Fangs> I would write :Forall x (Prime(x) <->  [(x >= 2) and (for all y, z, y*z = x -> y = x or z = x)]
[08:17:43] <Fangs> oh I'm missing a closing bracket
[08:17:45] <Fangs> I would write :Forall x (Prime(x) <->  [(x >= 2) and (for all y, z, y*z = x -> y = x or z = x)])
[08:17:53] *** Alkibiades is now known as wesleycrusherism
[08:18:00] *** wesleycrusherism is now known as wescrusherismyda
[08:18:04] <Fangs> everything is quantified over the naturals ofc
[08:18:13] <brownorange> (!SomeX ForAllY ForAllZ (((x > 1) and (x != y) and (x != z) and (y > 1) and (z > 1) and (y*z!= x)) <-> Prime(x)))
[08:18:17] *** wescrusherismyda is now known as pussymoneyweed
[08:18:30] <mornfall> so what Fangs did was ∀x. (∀y. P(x) ∧ P(y)) → ∀x. (P(x) ∧ ∀y.P(y)) → (∀x.P(x) ∧ ∀y.P(y))
[08:18:57] <Fangs> thats the "moving quantifiers around", to be explicit
[08:19:17] <brownorange> where is the P predicate coming from
[08:19:25] <mornfall> it's just a predicate
[08:19:48] <Fangs> brownorange: I was just talking about this: "15:44 <Fangs> I don't remember the rules for moving quantifiers around, but say.. Forall x, (Forall y P(x) and P(y)), you can turn this into Forall x, (P(x) and (Forall y P(y)) can't you?"
[08:19:54] <mornfall> the meaning is not important
[08:20:07] <Fangs> was going to say, its usually not the best idea to gather quantifiers till the end like that
[08:20:46] <Fangs> its good if you want a normalized representation for some statement, but if you're 'using it' in the wild, its usually better to leave the quantifiers near/at where the bounding variable is used
[08:21:37] <Fangs> ∀x. (∀y. P(x) ∧ P(y)) <-- so maybe instead of this an example with ∀x. (∀y. P(x) ∧ Q(x,y)) would be better
[08:21:49] <pussymoneyweed> euclidean algorithm is the most efficient way to calculate gcd(a,b) prove me wrong
[08:22:05] <Fangs> (as in I'd rather leave it like: ∀x. (P(x) ∧ ∀y. P(y))
[08:22:23] <Fangs> ugh
[08:22:28] *** Joins: placeb0 (uid283215@id-283215.lymington.irccloud.com)
[08:22:28] <Fangs> (as in I'd rather leave it like: ∀x. (P(x) ∧ ∀y. Q(x,y))
[08:24:21] <plank> do you guys just have the for all symbol on your keyboards or something
[08:24:42] <Fangs> no I typed forall and that probably annoyed mornfall, so I copy pasted their line
[08:24:55] <plank> so polite
[08:25:57] <mornfall> i was just trying to provide the steps that map to the ‘moving out subformulas’ concept, not diss anyone on their ascii math :p
[08:26:31] <mornfall> (I type ∀ as <compose> a l l, fwiw)
[08:26:52] <brownorange> ForAll x (Prime(x) <->  ((x >= 2) and (ForAll y,z  (x != y) and (x != z) and (y > 1) and (z > 1) and (y*z!= x))))
[08:26:53] <Fangs> I should learn how to do these unicodes
[08:28:15] <Fangs> that seems fine, you used x > 1 earlier, that's also fine technically
[08:28:44] <Fangs> (but on the 'english' side of things you did wrote "it is 2 or greater")
[08:28:56] <Galois> I don't think it's fine.
[08:29:16] <Fangs> Galois: the "x > 1" thing, or that sentence in general
[08:29:33] <brownorange> I graudates to x >= 2, incase it makes the people who like REALs upset
[08:29:40] <brownorange> graduated*
[08:29:51] <brownorange> there might be a value between 1 and 2,
[08:30:46] <Fangs> depending on the context, you may be fine with just assuming theres no natural number between 1 and 2
[08:30:53] <mornfall> (it's not fine, it's always false)
[08:31:02] *** Quits: sbrown2 (~sbrown@66.44.16.44) (Quit: Leaving…)
[08:31:22] <Galois> Definition prime x := x ≥ 2 ∧ ∀ y z, x ≠ y ∧ x ≠ z ∧ y > 1 ∧ z > 1 ∧ y * z ≠ x.
[08:31:22] <Galois> Theorem two_is_not_prime : ¬ prime 2.
[08:31:23] <Fangs> (if you're just learning logic i dont think its appropriate to ask you to prove that statement)
[08:31:23] <Galois> Proof. rewrite /prime => [[H /(_ 2 2)]] [] [] //. Qed.
[08:31:28] <mornfall> this comes out of it, ∀x.∀y. x ≠ y
[08:31:34] <mornfall> which is obviously false
[08:32:04] <brownorange> somehow i need to readd my !Some
[08:32:24] <mornfall> the last and was presumably meant to be an implication
[08:33:03] <brownorange> ForAll x (Prime(x) <->  ((x >= 2) and (ForAll y,z !Some x  (x != y) and (x != z) and (y > 1) and (z > 1) and (y*z!= x))))
[08:33:30] <brownorange> huh
[08:33:35] <Galois> re-quantifying x after you've already quantified it is unlikely to do what you want it to do
[08:35:05] <mornfall> (except if you wanted it to cause pain)
[08:35:42] <mornfall> some is meant to be ∃?
[08:35:47] <isekaijin> Fangs: Now that I think about it, there is no problem at all with your sheaf on a contractible space with nontrivial cohomology.
[08:35:59] <isekaijin> Since sheaf cohomology is about the sheaf and not about the base space.
[08:35:59] <brownorange> @mornfall yes
[08:36:11] <Fangs> isekaijin: yeah I don't get that
[08:36:13] <mornfall> anyway, ∀y. ∀z. ∃x. yz ≠ x is clearly true
[08:36:35] <mornfall> if ∃!x. is clearly untrue (exists exactly one)
[08:36:40] <isekaijin> It is not like, say, singular cohomology, which is really about the space itself.
[08:36:58] <Fangs> that just begs the question then, what's a sheaf?
[08:37:05] *** Joins: oxide (~lambda@user/oxide)
[08:37:30] <Fangs> they're supposed to be some geometric object, a bundle of sort whose "functions" are sections of said object
[08:37:36] <Fangs> maybe.. idk
[08:37:41] <brownorange> ForAll x (Prime(x) <->  ((x >= 2) and (ForAll y,z (x != y) and (x != z) and (y >= 2) and (z >= 2) and (y*z != x))))
[08:37:59] <isekaijin> Fangs: Yes, that seems like a good intuition to me.
[08:38:12] <mornfall> sheaf, it appears, is what you get when you don't know how to attach data to points, but really want to anyway
[08:38:19] <Fangs> isekaijin: I'm abusing Serre-Swan
[08:38:19] *** Joins: Null_A (~null_a@2601:645:8700:2290:8de:8d66:958e:46b4)
[08:38:36] <isekaijin> Generalized spaces where functions on a base space can take values.
[08:38:51] <mornfall> brownorange: those conjunctions (and) are no good
[08:39:24] <mornfall> brownorange: ∧ is not the same as → (or ⇒ or however you choose to write implication)
[08:39:56] <brownorange> oh good spot
[08:39:57] <isekaijin> I guess we could look at the étale space of the sheaf. But explicitly constructing étale spaces seems like boring and tedious and not fun at all.
[08:40:07] <mornfall> x ≠ y in that inner ∀ is clearly not true, and since it's a conjunction, the entire subformula goes
[08:40:19] <mornfall> (this is the second time i'm mentioning it :p)
[08:40:20] <Fangs> I dont understand etale stuff
[08:40:23] <brownorange> ForAll x (Prime(x) <->  ((x >= 2) -> (ForAll y,z (x != y) and (x != z) and (y >= 2) and (z >= 2) and (y*z != x))))
[08:40:38] <mornfall> brownorange: not that one, that one was okay
[08:40:49] <mornfall> now everything less than 2 is a prime
[08:40:49] <Galois> brownorange: you're just randomly guessing without thinking about what any of these symbols means
[08:41:11] <isekaijin> I just think of it like the total space of a vector bundle. (Braces in for incoming punches from people who actually have a clue.)
[08:42:20] <isekaijin> Galois: Coq tactics are utterly unreadable.
[08:42:35] <Galois> I know, it wasn't intended to be something useful
[08:42:52] *** Quits: Null_A (~null_a@2601:645:8700:2290:8de:8d66:958e:46b4) (Ping timeout: 265 seconds)
[08:43:33] <brownorange> ForAll x (Prime(x) <->  ((x = 2) or ((x > 2) and (ForAll y,z (y >= 2) and (z >= 2) and (y*z != x)))))
[08:43:48] <mornfall> (still nope)
[08:44:45] <mornfall> counterexample: x = 3, y = 1, z = 1
[08:44:53] <isekaijin> Someone should make a proof assistant whose underlying logic is specifically about sheaves of modules.
[08:45:15] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[08:45:31] <Decker> PlanckWalk so ya I had to do a fixed rotation matrix sort of thing on the coordinates, and then atan approximate (hooray for cordic?)  https://ibb.co/q008jBp   :m21 in this case is the mining laser 21's yaw...  cordic fails at > 45 degrees, but the mining lasers will 'fail' at greater than that anyway (not fail so much as cut into the ship they're on, can cause other things to fail)
[08:45:32] <brownorange> you're right!
[08:45:35] <brownorange> i'm simply wrong about primes
[08:46:35] *** Joins: causative (~halberd@user/causative)
[08:47:09] <brownorange> ForAll x (Prime(x) <->  ((x = 2) or ((x > 2) and (ForAll y,z (((y >= 2) and (z >= 2)) -> (y*z != x))))))
[08:50:03] <brownorange> ok supposing that's right. I don't see a useful rule of inference here.
[08:50:05] *** Joins: stipa_ (~stipa@user/stipa)
[08:50:49] *** Quits: RadSurfer (~RadSurfer@cpe-174-104-66-243.neo.res.rr.com) (Remote host closed the connection)
[08:50:57] *** Quits: LiftLeft (~LiftLeft@102.165.16.193) (Ping timeout: 265 seconds)
[08:51:07] *** Joins: RadSurfer (~RadSurfer@cpe-174-104-66-243.neo.res.rr.com)
[08:52:01] *** Quits: stipa (~stipa@user/stipa) (Ping timeout: 252 seconds)
[08:52:04] *** stipa_ is now known as stipa
[08:52:33] <brownorange> is there even a general procedure that can show syntactically a number is prime?
[08:53:05] <brownorange> does that have halting problem issues
[08:53:53] <Galois> sure? https://stackoverflow.com/questions/49282773/how-to-prove-that-a-number-is-prime-using-znumtheory-in-coq
[09:00:45] *** Joins: takuan (~takuan@178-116-218-225.access.telenet.be)
[09:01:17] *** Joins: gggpkm (~gggpkm@111-251-122-246.dynamic-ip.hinet.net)
[09:03:28] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[09:03:30] <brownorange> that appears to require gcd to be defined
[09:04:23] *** Joins: chomwitt (~chomwitt@2a02:587:dc18:b400:12c3:7bff:fe6d:d374)
[09:04:34] <brownorange> maybe not, i can't really tell what it's doing
[09:04:46] *** Joins: rubiksdream (~rubiksdre@n219073073081.netvigator.com)
[09:05:51] <brownorange> oh well the bigger issue is defining ForAll and then mathematical induction
[09:09:29] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 245 seconds)
[09:11:40] *** Quits: causative (~halberd@user/causative) (Ping timeout: 260 seconds)
[09:12:10] *** Joins: vysn (~vysn@user/vysn)
[09:12:44] *** Joins: DefiantN (~DefiantN@user/defiantn)
[09:14:00] *** Joins: hyiltiz (~quassel@31.220.5.250)
[09:16:46] *** Joins: Simplar (~Simplar@188.163.92.105)
[09:17:12] <Simplar> https://prnt.sc/1v9d1p4 Can someone prove that AMC is isosceles using vectors?
[09:27:42] <cherim> The claim doesn't look correct
[09:28:17] <brownorange> kind of stumped by a simple predicate axiom
[09:28:18] <cherim> Or the angles you show are off
[09:28:43] <cherim> What are MBC and MBA?
[09:29:11] *** Joins: [-_-] (~fractal@user/---/x-1675478)
[09:29:17] <[-_-]> Heya
[09:29:19] <[-_-]> http://0x0.st/-Ezj.jpg
[09:29:35] <[-_-]> Look at the fourier transform of dirac delta function
[09:29:39] <qergle> wouldn't AM need to bisect ∠A for the claim to be true?
[09:29:47] <[-_-]> you will see the constant 1/2pi
[09:29:57] <[-_-]> Can this constant be anything else?
[09:30:09] <[-_-]> Say 1, 1/sqrt(2pi)
[09:30:11] <[-_-]> ?
[09:30:19] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[09:30:56] <[-_-]> Is there any definition of fourier transform that gives any constant other than 1/2pi ?
[09:31:34] <qergle> from the drawin MBC seems to be 30 and MBA 20
[09:31:40] <brownorange> !ForAll x !x = y,   what is this saying?  1) not ForAll x (not x = y) ?    OR     2) (not ForAll x not x) = y?
[09:32:04] <qergle> but this is not consistent with △AMC isosceles
[09:32:38] <cherim> MBC looks like 10 though
[09:32:51] <cherim> Then it's OK (but trivial)
[09:33:29] <qergle> something needs correcting, for sure. and yes, if AM is vertical then trivial.
[09:33:33] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:36:15] <brownorange> if the intent is to say there exists x where x = y, i don't see how that maps onto either way to interpret !ForAll x !x = y
[09:39:24] *** Joins: twJizhan (~twJizhan@2404:0:823a:fdde:c076:657a:2403:cea5)
[09:43:20] *** Quits: frelleck (~frelleck@user/frelleck) ()
[09:44:05] *** Joins: mei (~mei@user/mei)
[09:45:27] <PlanckWalk> brownorange: (2) is grammatically nonsensical.
[09:46:45] <brownorange> both seems nonsensical to me
[09:47:08] <mornfall> that's not (x = y)
[09:47:12] <PlanckWalk> WHat, "it is not true that for all x, x is not equal to y"
[09:47:22] <mornfall> i.e. ¬∀x.¬(x = y)
[09:47:47] <mornfall> i.e. ∃x. x = y
[09:48:29] <Simplar> qergle: AMC is indeed isosceles though
[09:48:43] <Simplar> With CA = CM
[09:48:43] <brownorange> so there is some x that equals y, because it's not the case that all x != y
[09:49:07] <Simplar> I know one way to prove it but with additional construction, and I want to avoid it
[09:49:59] <PlanckWalk> brownorange: Yes, you can derive that
[09:50:15] <PlanckWalk> (In any of the usual inference rules for predicate logic)
[09:50:34] <cherim> "It's wrong" - "It's right" is a great discussion. What is the angle MBC in degrees?
[09:50:44] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 245 seconds)
[09:51:05] <brownorange> @PlanckWalk but what is getting proved?
[09:51:25] <PlanckWalk> That  ¬∀x.¬(x = y)  is equivalent to  ∃x. x = y
[09:51:42] <PlanckWalk> (¬∀x.¬(x = y)) <-> (∃x. x = y)  if you like
[09:51:48] <brownorange> wow
[09:51:59] <brownorange> so that's like saying ThereExists True
[09:52:54] <PlanckWalk> No, because "ThereExists True" is meaningless
[09:53:05] <Simplar> cherim: 30
[09:53:07] <PlanckWalk> (and ungrammatical in most systems)
[09:53:16] <brownorange> but there is True
[09:53:45] <mornfall> x = y is not true
[09:54:06] <PlanckWalk> brownorange: The symbol following "ThereExists" must be a variable.
[09:54:18] <PlanckWalk> Is "True" a variable, or a constant?
[09:54:29] *** Joins: cheater (~Username@user/cheater)
[09:55:25] <brownorange> ! forall a (!a <-> True)  <->  ThereExists a  (a <-> True)
[09:56:11] <brownorange> @PlanckWalk constant
[09:56:59] <brownorange> however True does exist
[09:57:01] <mornfall> i would avoid using ‘True’ for a symbol
[09:57:10] <mornfall> (constant)
[09:57:30] <PlanckWalk> brownorange: In what domain?
[09:57:32] <mornfall> makes it easy to confuse with the logical truth
[09:58:22] <mornfall> call them 1 and 0 if you want to do boolean algebra or whatever
[09:58:27] <brownorange> @PlanckWalk domain of proof theory
[09:58:48] <mornfall> wrong meaning of domain
[09:58:56] <mornfall> what signature (language)?
[09:58:58] <brownorange> |- True
[09:59:13] <brownorange> propositions
[09:59:29] <mornfall> don't try to do a first-order theory of propositional logic
[09:59:30] <brownorange> i'm not sure B (bools) are about propositions
[09:59:40] <mornfall> too meta
[09:59:46] <mornfall> stick to numbers, or something
[10:00:26] <mornfall> so that you don't get confused about what are symbols (non-logical bits) and what is part of the logic
[10:00:41] <mornfall> seems to be confusing enough to you with numbers
[10:00:41] <brownorange> @mornfall it was only to communicate a point
[10:01:19] <mornfall> more reason to stick to numbers, because nobody knows what you meant
[10:01:21] <PlanckWalk> Well, it didn't.
[10:01:43] <cherim> For MBC=30 the sine theorem says CM=CA is equivalent to sin(30)sin(80)=sin(50)sin(40)
[10:02:21] <brownorange> PlanckWalk Let 'a' be a wff, then ! forall a (!a <-> True)  <->  ThereExists a  (a <-> True)
[10:02:22] <cherim> Which coes from sin(30)=1/2 and sin(50)sin(40)=(1/2)(cos(10)-cos(90))
[10:02:26] <mornfall> (or sets, or whatever that's not logic… using formal logic to argue about logic is subtle and very easy to mess up)
[10:02:33] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[10:02:39] <mornfall> brownorange: drop it
[10:03:03] <brownorange> @mornfall i'll look up the true symbol
[10:03:44] <PlanckWalk> brownorange: You can't have 'a' represent a general wff there.
[10:03:45] <mornfall> just forget it for the next year or three
[10:04:07] <brownorange> ⊤ tautology symbol
[10:04:08] <mornfall> setting your domain of discourse to be logical formulas is a recipe for disaster
[10:04:39] <PlanckWalk> Yeah, this is all kinds of messed up.
[10:04:39] <mornfall> you can't even keep track of syntax
[10:05:01] <brownorange> @mornfall i need something relatable.  (∃x. x = y)   substituted ThereExists 42 where 42 = y  ? now 42 is part of some domain sure..
[10:05:07] <Simplar> cherim: https://prnt.sc/1v9ivun if I am constructing an equilateral triangle having the same side BC, I get two exactly equal triangles BEA and CEA
[10:05:27] <mornfall> brownorange: y is free in that formula, so you can't evaluate it
[10:05:41] <brownorange> (∃x. x = y)  what prevents me from saying  (∃42. 42 = 944)
[10:05:47] <brownorange> free?
[10:05:53] <mornfall> not bound by a quantifier
[10:06:08] <brownorange> interesting
[10:06:09] <mornfall> just grab a book on logic; someone recommended one earlier
[10:06:52] *** Quits: twJizhan (~twJizhan@2404:0:823a:fdde:c076:657a:2403:cea5) (Ping timeout: 252 seconds)
[10:07:12] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[10:07:17] <cherim> Simplar: First of all, do you agree with the sine theorem solution?
[10:07:20] <mornfall> also the status of = is somewhat special
[10:07:56] <Simplar> cherim: it looks pretty convincing
[10:08:37] <cherim> OK, now I can try to understand yours. BEA and CEA are equal, what's next?
[10:09:52] <brownorange> is the trap, that what I stated was also true?
[10:10:12] <brownorange> did i end up in some higher order logic land?
[10:10:54] <PlanckWalk> "brownorange: The symbol following "ThereExists" must be a variable."
[10:11:17] <brownorange> PlanckWalk, a non-propositional variable?
[10:11:51] <PlanckWalk> (Sometimes it must also be a variable name not used outside the scope)
[10:12:26] <Simplar> cherim: Now, angle BEA is equal to 30° as EA lies on a median, bisector and height of both isosceles triangle ABC and equilateral triangle BEC. Since triangle BEA has a side and two angles adjacent to it equal to a side and two angles adjacent to it of a triangle BMC, this leads to the conclusion these triangles are congruent
[10:12:52] <Simplar> => MC = AB.
[10:13:13] <PlanckWalk> brownorange: If you have some naming convention that distinguishes them, then yes.
[10:13:26] <Simplar> Since AB = AC from the initial triangle, we conclude ACM is isosceles with AM = CM.
[10:13:31] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[10:13:34] <brownorange> if the point is to axiomatize formulas we think are true, but having formulas about truth in the axioms is a conflict of interest to an objective formal system, i suppose that makes sense.
[10:13:45] <brownorange> is only propositional logic allowed to be about truth?
[10:14:06] <PlanckWalk> I don't even know what you mean there
[10:14:15] <PlanckWalk> What is "to be about truth"?
[10:14:22] *** Quits: lakitu (~lakitu@192-198-3-9.dhcp.radiolinkinternet.com) (Read error: Connection reset by peer)
[10:15:01] <PlanckWalk> But under any stretching of meaning I've done to make that into a sensible question, I'd say no.
[10:15:11] <brownorange> predicate logic is suppose to be about predicates, not what's true. that seems to be the point. whereas propositional logic is perhaps about what's true
[10:15:16] <stanrifkin_> brownorange: what book do you read about propositional logic?
[10:16:03] <brownorange> http://www.appstate.edu/~hirstjl/primer/hirst.pdf  @stanrifkin
[10:16:05] <PlanckWalk> Fully quantified predicates *are* propositions.
[10:16:22] <brownorange> @PlanckWalk but not about truth, about predicates right?
[10:16:48] <cherim> Simplar: Yes, nice solution. Not a really obvious one.
[10:17:07] <PlanckWalk> brownorange: I have no idea what you are trying to ask, but it seems confused.
[10:17:08] <stanrifkin_> brownorange: i think it always comes down to truth in logic
[10:17:17] <Simplar> cherim: My problem with it is that it requires additional construction.
[10:18:19] <brownorange> @PlanckWalk predicate logic expresses truths about predicates, not truth about truths, that's what i'm asking, AND therefore that's why the other person said i should avoid" ! forall a (!a <-> True)  <->  ThereExists a  (a <-> True)
[10:18:38] *** Joins: lakitu (~lakitu@192-198-3-9.dhcp.radiolinkinternet.com)
[10:18:41] <brownorange> maybe it's wrong to say predicate logic expresses truth about predicates?
[10:19:38] <brownorange> If I said to you set theory axioms are about sets, is that really so strange?
[10:20:04] <Simplar> cherim: now let's suppose we want to know angle AMC. Will it be possible to calculate it through vectors or some other way?
[10:20:42] <PlanckWalk> brownorange: "Set theory axioms are about sets" in the sense that the elements of the domain of discourse are sets.
[10:21:09] <PlanckWalk> "Predicate logic expresses truth about predicates" is *not* the same sense.
[10:21:35] <cherim> Knowing AMC is equivalent to proving CM=CA
[10:21:48] *** Joins: palasso (~palasso@user/palasso)
[10:21:58] <brownorange> this kind of trippy
[10:22:39] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[10:22:39] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[10:23:50] <brownorange> propositional logic is about propositions. that i can see. you can talk about axiom schema all day long, i'm sure it's about propositions
[10:24:16] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[10:24:25] <brownorange> there aren't other models like there is with math. logic is logic
[10:26:01] <brownorange> yet predicate logic can be about many different domains of discourse
[10:27:42] <brownorange> http://us.metamath.org/mpeuni/ax-4.html  this uses a mix of propositional variables, and just variables
[10:27:47] <Simplar> cherim: https://prnt.sc/1v9lsc1 I've made a precise graph on the task
[10:28:06] <Simplar> ACM looks pretty much isosceles :)
[10:28:46] *** Joins: Mattiaslndstrm (~Mattiasln@94.191.152.106)
[10:29:05] <brownorange> what i'm being told is if i substituted the propositional variables, for truth constant known as TRUE, i'm a bad bad men OR something else is different
[10:30:21] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[10:30:57] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[10:33:46] <brownorange> if something is a free variable, it should be free for me to substitute.
[10:34:22] *** Quits: xff0x (~xff0x@2001:1a81:5251:1900:7e75:5755:e512:a0e0) (Ping timeout: 252 seconds)
[10:34:39] *** Joins: millido (~millido@84.210.150.128)
[10:34:46] *** Joins: anovick (~anovick@2a0d:6fc0:1875:8f00:64c6:d643:3b18:a655)
[10:35:13] *** Joins: xff0x (~xff0x@2001:1a81:5251:1900:6353:3c1e:a988:d99)
[10:35:28] *** Quits: Mattiaslndstrm (~Mattiasln@94.191.152.106) (Ping timeout: 252 seconds)
[10:36:05] <brownorange> "Whenever a variable occurs in the scope of a quantifier on that variable, we
[10:36:05] <brownorange> say that the occurrence of the variable is bound. Any occurrence of a variable
[10:36:05] <brownorange> which is not bound is called free."
[10:38:42] <brownorange> maybe not
[10:39:19] *** Quits: anovick (~anovick@2a0d:6fc0:1875:8f00:64c6:d643:3b18:a655) (Ping timeout: 252 seconds)
[10:39:25] *** Joins: anovick_ (~anovick@IGLD-83-130-137-76.inter.net.il)
[10:41:26] *** Quits: krator44 (~krator44@user/krator44) (Quit: --)
[10:41:27] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[10:41:27] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[10:42:07] *** Joins: krator44 (~krator44@user/krator44)
[10:42:18] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[10:42:34] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[10:42:39] *** Parts: brownorange (~brownoran@user/brownorange) (Leaving)
[10:42:50] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.2)
[10:42:57] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[10:45:01] *** Joins: brownorange (~brownoran@user/brownorange)
[10:55:51] *** Quits: cheater (~Username@user/cheater) (Quit: (BitchX) Wouldn't it be great if the dog could walk itself?)
[11:02:53] <dila> can someone help me find the k'th coefficient of the polynomial product http://mathb.in/64723
[11:03:20] <dila> i have k=i+j which is the exponent. i think i need to rewrite j=k-i
[11:07:24] *** Joins: cheater (~Username@user/cheater)
[11:12:52] *** Joins: Mattiaslndstrm (~Mattiasln@94.191.152.106.mobile.tre.se)
[11:13:54] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[11:20:03] *** Joins: Mattiasl_ (~Mattiasln@94.191.152.106)
[11:20:38] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[11:20:57] <brownorange> Let 'a' be a wff.  ! forall a !(a <-> True)  <->  ThereExists a  (a <-> True)     I had the negation in the wrong place.
[11:22:00] <b3z-> I altered a matrix into lines stepped shape but got a zero on the top right half. Is that still valid? Matrix: http://ix.io/3BaO
[11:22:05] *** Quits: Mattiaslndstrm (~Mattiasln@94.191.152.106.mobile.tre.se) (Ping timeout: 268 seconds)
[11:22:16] *** b3z- is now known as b3z
[11:22:17] *** Quits: b3z (~b3z@vmd41962.contaboserver.net) (Changing host)
[11:22:17] *** Joins: b3z (~b3z@user/b3z)
[11:22:59] <mornfall> brownorange: just don't… you are butchering logic
[11:23:27] <brownorange> @mornfall because i'm not using element-of?
[11:24:05] <mornfall> no, because you jump into things you don't understand, without taking the time to actually study the subject
[11:24:26] <mornfall> study standard first order logic first
[11:24:56] <mornfall> then look at some standard theory written down in first order logic
[11:26:43] <CuriousErnestBro> Let 'a' be a wtf
[11:26:44] <CuriousErnestBro> lmao
[11:26:47] <CuriousErnestBro> I read it like that
[11:27:00] *** Quits: Mattiasl_ (~Mattiasln@94.191.152.106) (Ping timeout: 260 seconds)
[11:27:58] *** Quits: gggpkm (~gggpkm@111-251-122-246.dynamic-ip.hinet.net) (Remote host closed the connection)
[11:29:45] <dila> i think i also need P=M+N, i got rid of the -1 on each of the summations
[11:29:50] <isekaijin> mornfall: Whoa, someone had to say it.
[11:30:29] <isekaijin> Actually, I thought my “go read a logic book” earlier was unsubtle.
[11:30:42] <brownorange> Let 'a' be a wff, Let 'b' be a wff.   ! forall a,b !(a <-> b)  <->  ThereExists a,b  (a <-> b)   // i dropped the truth constant
[11:30:52] <mornfall> i already reiterated the part about the book
[11:31:01] <mornfall> brownorange: just forget it, seriously
[11:31:09] <mornfall> you are way off mark
[11:31:25] <riv> brownorange: you don't use wff in this way
[11:31:40] *** Joins: gggpkm (~gggpkm@111-251-122-246.dynamic-ip.hinet.net)
[11:31:51] <riv> forall a  is for a being a variable
[11:31:56] <riv> you can't do  forall a  if a is a wff
[11:32:12] <mornfall> riv: it's been already explained a few times; i think that at this point it's a waste of time
[11:32:15] <brownorange> Let 'a' be a formula of propositional calculus, Let 'b' be a formula of propositional calculus.   ! forall a,b !(a <-> b)  <->  ThereExists a,b  (a <-> b)
[11:32:34] <dila> mornfall: can you help with my polynomal product?
[11:32:48] <dila> http://mathb.in/64724 what do i do at this point?
[11:32:50] <brownorange> @mornfall unless I missed it only riv explained wff != propositional formla, i was assuming it was implicit
[11:33:19] <isekaijin> brownorange: Chapter 3 of the book I recommended you a while back begins with a precise description of the syntax of first-order logic.
[11:33:22] <riv> I didn't mention propositional forumlas
[11:33:26] <brownorange> my understanding is a statement of math must be wellformed to be a math statement, and also that every such statement is a propositional formula
[11:33:30] <mornfall> riv: see? :)
[11:33:41] <mornfall> it's hopeless
[11:34:09] <isekaijin> brownorange: It should take at most 20-30 minutes of your time to read and understand that part of the book.
[11:34:09] <mornfall> dila: sorry i'm on my way out
[11:34:15] <dila> ok
[11:37:35] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[11:38:21] *** Joins: WYfM2fGh (~Gx8nnQuP@74.5.153.221)
[11:38:26] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:39:02] <brownorange> @isekaijin google books omitted those pages
[11:40:05] <isekaijin> Search for “Hamilton Logic for Mathematicians” (without the quotation marks) here: https://libgen.rs/
[11:40:50] <isekaijin> Mmm, the book is in DjVu format, so you will need a DjVu reader.
[11:41:12] <isekaijin> Okular and DjView are good ones, in my experience.
[11:41:12] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:41:43] *** Joins: Maturion (~Maturion@p200300ede724c900b612ecf6a68c7ac9.dip0.t-ipconnect.de)
[11:42:05] <riv> I set up Okular to display things offwhite
[11:42:15] <isekaijin> Nice.
[11:42:37] <isekaijin> So, I spent the whole day performing a calculation that “might” give me a result I was seeking...
[11:42:51] <isekaijin> ... only for it not to give me the result I sought.
[11:42:59] <riv> https://i.postimg.cc/jRwXRjQh/Screenshot-2021-10-08-09-12-34.png
[11:43:23] <riv> that sounds like real work
[11:43:46] <isekaijin> Wow, that screenshot looks good.
[11:44:48] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[11:46:39] *** Joins: drogas (~drogas@jump2.jet.uk)
[11:50:24] *** Joins: extern (~archer@141.226.62.61)
[11:51:02] <isekaijin> Mmm... How much effort should it take me to prove the following? Let V is an affine variety without a preferred embedding in A^n. Then the isomorphism type of the quotient ring k[x1,...,xn] / J, where J is the Jacobian ideal of some embedding in A^n, does actually not depend on the chosen embedding.
[11:51:46] <isekaijin> Let V be*
[11:52:39] *** Joins: LucaTM (~LucaTM@user/lucatm)
[11:53:21] *** Joins: PJBoy (~PJBoy@user/pjboy)
[11:57:11] *** Quits: anovick_ (~anovick@IGLD-83-130-137-76.inter.net.il) (Ping timeout: 245 seconds)
[11:57:43] <brownorange> @isekaijin the author is redefining math operations to be math functions
[11:57:52] <isekaijin> What?
[11:57:58] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi)
[11:57:59] <brownorange> including ones as basic as +
[11:58:25] <brownorange> page 52, informal predicate calculus
[11:58:26] <isekaijin> + *is* a function.
[11:58:48] <isekaijin> Wait, I do not have the book on this computer.
[11:58:54] <isekaijin> brb
[11:59:17] *** Quits: r-g (~r-g@51.159.55.86) (Quit: r-g)
[11:59:45] <isekaijin> Okay, found my old laptop.
[12:01:18] <brownorange> it appears you want me to re-encode my earlier statement into a math function?
[12:01:22] <isekaijin> Okay, good, I found the book.
[12:01:42] <isekaijin> The book is not actually redefining any standard mathematical functions.
[12:02:09] <brownorange> it's not a bad idea
[12:02:15] <isekaijin> What the book says is “if you want *your new language* L to be appropriate for talking about natural number arithmetic, then...”
[12:03:01] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[12:03:06] <brownorange> i don't mind. it's not a bad idea
[12:03:11] <brownorange> it will take a while
[12:03:24] <isekaijin> I am not commenting on whether it is a good idea or not.
[12:03:32] <isekaijin> That is beside the point.
[12:04:00] <isekaijin> I am just telling you that the book is, in fact, not redefining any standard mathematical symbols. It is only defining new symbols for a new language.
[12:04:44] <isekaijin> It is actually good that the new language's symbols are very different from the standard ones.
[12:05:19] <isekaijin> Because you will be using standard mathematical language to talk about the new language.
[12:06:19] <isekaijin> And it is going to be confusing if you can't tell whether “+” means the standard mathematical addition, or your new language's symbol that happens to be intended for addition.
[12:07:15] *** Joins: Inline (~Inline@2a02:908:1252:7a80:89dc:6a58:9f2a:ff3d)
[12:07:54] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[12:10:03] <brownorange> Let 'a', 'b' be members of the natural number domain. ! forall x !(x = y)  <->  ThereExists x  (x = y)   this is fine right?
[12:10:14] <brownorange> Let 'x', 'y' be members of the natural number domain. ! forall x !(x = y)  <->  ThereExists x  (x = y)   this is fine right?
[12:10:42] <isekaijin> I give up.
[12:10:57] <brownorange> i'm not even using functions yet
[12:17:07] *** Quits: Simplar (~Simplar@188.163.92.105) (Quit: Going offline, see ya! (www.adiirc.com))
[12:17:17] <lericson> just write it in a different color init
[12:17:32] <brownorange> A21(x,y) := means (x = y)  BID := (a,b) means (a <-> b)  BID(! forall x !A21(x,y),ThereExists x  A21(x,y))   // I use BID because author does not offer a bidirection predicate that I could see.
[12:18:33] <brownorange> no sir, i'm afraid i'm the one that gives up now.
[12:18:42] <isekaijin> brownorange: Nothing means anything.
[12:18:48] <isekaijin> It is just a bunch of syntax.
[12:18:56] <isekaijin> Meanings are not assigned yet at this point.
[12:19:25] *** Joins: anovick_ (~anovick@2a0d:6fc0:1875:8f00:64c6:d643:3b18:a655)
[12:19:34] <brownorange> BID(a,b) := means (a <-> b)
[12:19:49] <isekaijin> Uh.
[12:19:56] <isekaijin> What part of “nothing means anything yet” is hard to understand?
[12:20:04] <isekaijin> Meanings are assigned much later.
[12:20:14] *** Joins: Kaylah (~Kaylah@84-198-141-54.access.telenet.be)
[12:20:29] <isekaijin> Meanings are assigned in section 3.3, Interpretations, page 57.
[12:20:45] <brownorange> right..
[12:20:45] <isekaijin> But you should read the definition of the syntax carefully first.
[12:20:59] <isekaijin> Because it makes no sense to assign meaning to syntax that is not well defined.
[12:22:35] <brownorange> ':=' is an abbreviation operator.  BID(a,b) := (a <-> b)     means BID(a,b) abbreviates for (a <-> b)
[12:23:05] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[12:23:44] <brownorange> it doesn't matter anymore. it's impossible for me to type out the numbering scheme they are using without confusing things . the author is numbering quantifiers and matching them to what they quantifier, which is clever but not easy to type
[12:24:07] <brownorange> quantify over*
[12:25:17] <isekaijin> The author is not numbering the quantifiers themselves.
[12:25:29] <isekaijin> The definition of the language L says that you have an infinite supply of variables x1, x2, x3...
[12:25:45] <isekaijin> This is in page 50.
[12:26:06] <isekaijin> “The alphabet of symbols is the following: <newline> x1, x2, ... variables,”
[12:27:18] <isekaijin> All that you are doing right now is showing that you are either not reading, or at least not reading carefully enough. A mathematics textbook is not like a newspaper or magazine that you can read lightly.
[12:32:06] *** Quits: vqueiroz (uid340368@id-340368.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[12:33:15] *** Joins: Mattiaslndstrm (~Mattiasln@94.191.152.106)
[12:33:44] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) ()
[12:37:54] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[12:40:30] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:8d93:a3ee:e409:74cc)
[12:40:31] <CuriousErnestBro> does this make sense? http://0x0.st/-EzC.png
[12:40:42] <CuriousErnestBro> I'm somehow losing an integral sign...
[12:41:34] <brownorange> Hilbert once said: "in mathematics there is no ignorabimus", I believe this is correct so long as you've learned it the ground up. My efforts to state an elementary fact is being thwarted because of issues of syntax that are supposedly only cleared up by learning from the ground up.
[12:41:40] <brownorange> However I think this an issue of models
[12:43:14] <brownorange> Not being allowed to bridge propositional calc to predicate calc, even when propositonal vars appear in predicate calculus axioms, is really bad news
[12:43:37] <isekaijin> Chapter 4 does just that, actually.
[12:44:46] <isekaijin> Err, never mind.
[12:44:48] <isekaijin> Even chapter 3 does that.
[12:44:50] <isekaijin> But later.
[12:45:42] <CuriousErnestBro> if you combine the d in the integral into d^2 something
[12:45:47] <CuriousErnestBro> and that evaluates to something else
[12:45:51] <isekaijin> brownorange: “Definition 3.30: A well-formed formula A of <cursive L> is a tautology if it is a substitution instance in <cursive L> of a tautology in <ordinary L>.”
[12:46:00] <isekaijin> Page 65.
[12:46:03] <CuriousErnestBro> what happens to the integral signs then?
[12:46:42] <isekaijin> brownorange: To know what “<ordinary L>” and “a tautology in <ordinary L>” mean, you must have read chapter 2, though.
[12:47:02] <isekaijin> Sorry, math works like this. Later concepts build on earlier ones.
[12:47:42] <CuriousErnestBro> yes, a common misconception is that you need to have completely understood chapter 2
[12:47:55] <isekaijin> rofl
[12:49:51] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi) (Read error: Connection reset by peer)
[12:53:14] <CuriousErnestBro> isekaijin learning is not linear
[12:53:52] *** Joins: Fohsap (~Muimi@2001:19f0:5001:2bf8:5400:3ff:fe30:8554)
[12:54:39] *** Quits: specing (~specing@user/specing) (Killed (NickServ (GHOST command used by specing_)))
[12:54:39] *** Joins: specing_ (~specing@user/specing)
[12:56:22] *** specing_ is now known as specing
[12:56:29] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[12:56:58] <brownorange> Let me admit something. Propositional logic is utter crap for sorting out different types of statements. Predicate logic is not about predicates. It can be about many domains of discourse. Math itself involves both mentioned + set theory.  So now somehow i'm expected to learn through math that
[12:57:25] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[12:57:39] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[12:58:09] <brownorange> it's not as simple as you think
[13:00:47] *** Quits: horseface (~horseface@user/horseface) (Quit: I am brb I reckon... Sirs.. Ma'am... PATRONS! OF! THE! UNIVERSE!!! AHA!!! <3 !!!)
[13:01:08] <brownorange> propositional logic is so bad, that it disregrads its own causal truths (what little there are)
[13:01:14] <brownorange> disregards*
[13:01:29] *** Joins: tizef (~tyzef@43.231.30.255)
[13:02:36] <isekaijin> brownorange: The issue here is not what predicate logic is “about”. One important lesson is that the same formal system can have different models. And, from the point of view of logic alone, you cannot claim that your formal system is preferably about this model, rather than about that model.
[13:02:41] *** Quits: texasmusicinstru (~Rheanna@123.158.85.177) (Remote host closed the connection)
[13:05:13] <isekaijin> Proposition 4.38 (page 91) is the first real mind-wreck in the book. It says that, if a formal system of a certain kind is consistent (i.e., you cannot deduce a contradiction from it), then it has a model which is built essentially from the system's own syntax.
[13:05:20] *** Joins: texasmusicinstru (~Rheanna@123.158.85.177)
[13:05:32] *** Quits: texasmusicinstru (~Rheanna@123.158.85.177) (Remote host closed the connection)
[13:06:16] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[13:06:47] <isekaijin> Holy cow. The proof extends all the way into page 96.
[13:07:20] <isekaijin> A five page long proof.
[13:09:15] *** Joins: texasmusicinstru (~Rheanna@123.158.85.177)
[13:11:35] <brownorange> "Note also that the script letters A, B, etc. which we have been using are not part of L. We use them as a convenience, to stand for unspecified wfs. of L"
[13:11:56] *** Hash is now known as stoned
[13:12:07] <brownorange> page 31 at the bottom
[13:12:12] <isekaijin> Yup. These are what we normally call “metavariables”.
[13:12:39] <isekaijin> It is a standard mathematical variable (i.e., not a variable in <cursive L>) that stands for a formula in <cursive L>.
[13:13:10] <mh_le> Let a be in {0,1}, if I have that P(|0> | a=1) = 1/4 and P(|0> | a=0) = 3/4, P(|-> | a= 1)=3/4 and P(|+> | a=1) = 1/4, can I say something about P(a=0/1 | ||0>) > 1/2?
[13:13:41] <brownorange> then it sounds like there is an abstract math education that comes before all this
[13:13:54] <brownorange> i've never heard of a math var
[13:14:59] <brownorange> i've heard of programming vars, traditional logic vars, propositional logic vars, and ofcourse the usual (n + 1) type of var
[13:15:11] <isekaijin> “an abstract math education that comes before all this” --> Sounds about right.
[13:15:33] <isekaijin> Okay, since you metioned programming - have you ever written a compiler or an interpreter?
[13:15:39] *** Joins: NEYi (~NEYi@109.251.216.38)
[13:15:48] <brownorange> yes
[13:15:51] <isekaijin> That is, a program whose input is the syntax of another program.
[13:16:00] <brownorange> yes
[13:16:04] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: WeeChat 3.3)
[13:16:06] <isekaijin> If so, then I have no idea why you find this confusing.
[13:16:39] <isekaijin> All the precautions about distinguishing between mathematical language and the toy language you are studying... it is pretty much like distinguishing between the language you are using to write the compiler and the language you are compiling.
[13:16:47] <brownorange> unspecified wfs of L that aren't part of L, makes no sense.
[13:17:15] <brownorange> it's like saying expressions of python that aren't part of python's language
[13:17:37] *** stoned is now known as Hash
[13:17:55] <isekaijin> Surely you cannot possibly have written a compiler and be this confused.
[13:18:04] <Gurkenglas> compilers are pretty easy.
[13:18:37] <Gurkenglas> brownorange, A could refer to "print(2)", and yet "A" does not compile
[13:19:40] <brownorange> difference between strings/tokens of a hypothetical language, and the actual strings valid in a specific language?
[13:19:52] <brownorange> or just given totally random string, is it a valid syntax?
[13:19:58] <PlanckWalk> Usully the "language" of the formal theory is the set of *provable* strings.
[13:20:13] <isekaijin> At least not in this book.
[13:20:46] <PlanckWalk> (I.e. set of strings that contain all the axioms, and closed under inference)
[13:20:59] <PlanckWalk> But that book may differ.
[13:21:08] <Gurkenglas> PlanckWalk, i'd say it's the set of strings that "Is _ provable?" can take as input
[13:21:26] <Gurkenglas> what would you call that?
[13:21:52] <isekaijin> Yes, what Gurkenglas said sounds about right.
[13:22:18] <brownorange> closest thing to a metavariable might be a templated function where it isn't stating the type of the variable
[13:22:36] <PlanckWalk> Gurkenglas: Hmm, not in my textbooks
[13:23:09] <PlanckWalk> There was definitely a distinction between "wffs of the theory" and "language of the theory"
[13:23:24] <isekaijin> Oh. Interesting.
[13:23:50] <brownorange> i'm aware of distinction between formal system and formal language
[13:24:41] <isekaijin> brownorange: Remember that I said that you need to use mathematical language to discuss these toy formal languages?
[13:25:27] <Gurkenglas> brownorange, in "for every wff A, there exists a proof of A", A is a metavariable. note that that string is not written in the object-level language under consideration.
[13:26:57] *** Joins: horseface (~horseface@user/horseface)
[13:27:25] <isekaijin> Anyhow, to be talking about logic at 5 am, instead of doing something actually productive, like playing the EX stages of the current Arknights event. How sad.
[13:29:17] <brownorange> I get it now. metavars are polymorphic
[13:30:11] <brownorange> they can take on the identity of something, but have no fixed identity of themselves
[13:30:23] <brownorange> other than this description
[13:30:38] <Gurkenglas> i don't think that's what distinguishes them from non-meta variables
[13:31:48] <brownorange> they can take on the identity of ANYTHING, but have no fixed identity of themselves
[13:32:02] <Gurkenglas> in that book they only refer to wffs
[13:32:27] <brownorange> yes but somehow they want me to believe the symbols given for the wffs, can double as metavars
[13:32:37] *** Joins: mestre (~mestre@191.177.175.57)
[13:32:48] <brownorange> which is probably important that i know
[13:33:17] <Gurkenglas> when i say "let n be 1", does n double as a variable?
[13:33:47] <isekaijin> I get that this is a little tricky, but it is not THAT confusing, come on.
[13:34:14] <brownorange> anonymous variables then?
[13:34:24] <Gurkenglas> Define anonymous.
[13:34:50] <isekaijin> When you say anonymous, the first that comes to my mind is “anonymous functions” in programming.
[13:34:59] <isekaijin> What makes them anonymous is that they do not have a name.
[13:35:05] <brownorange> yes
[13:35:16] <Gurkenglas> These have a name.
[13:35:17] <isekaijin> But here metavariables very much have a name.
[13:35:20] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi)
[13:35:34] <brownorange> i know so that's what a metavariable can be turned into
[13:35:49] <Gurkenglas> can a non-meta variable be turned into that?
[13:35:49] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:35:56] *** Quits: chomwitt (~chomwitt@2a02:587:dc18:b400:12c3:7bff:fe6d:d374) (Ping timeout: 245 seconds)
[13:35:59] <brownorange> nope
[13:36:08] <brownorange> can't go from non-meta to meta
[13:36:15] <isekaijin> lol what
[13:36:47] <Gurkenglas> misunderstanding. can you make a non-meta variable anonymous?
[13:37:02] *** Joins: tacegory (~tacegory@user/tacegory)
[13:37:37] <Gurkenglas> isekaijin, and don't attack him on the metalevel until he comprehends the metalevel :D
[13:37:54] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[13:38:23] <brownorange> @Gurkenglas by anonymous variable, let' say unnamed and untyped.
[13:38:29] <isekaijin> Gurkenglas: You are right.
[13:38:37] <dila> you can substitute a constant with a variable
[13:38:44] <brownorange> so is a non-meta variable anonymous? no it isn't
[13:39:02] <brownorange> @dila that changes the expression
[13:39:05] <Gurkenglas> brownorange, when you write a python compiler in C then C variables are meta variables and python variables are non-meta variables; that's all there is to it
[13:39:11] <dila> it's called a generalisation
[13:39:43] <brownorange> what the. so by metavariable you mean variables occuring at the meta level?
[13:39:49] <Gurkenglas> yep
[13:40:34] *** Joins: DnzAtWrk3 (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi)
[13:41:11] <dila> how are you defining meta
[13:41:19] <Gurkenglas> dila, i *just* defined it
[13:41:25] <Gurkenglas> by example, but still
[13:41:54] <dila> can you try again without using programming terms?
[13:42:36] <Gurkenglas> When you draw a comic then the characters might describe your reality as meta reality
[13:43:01] *** Quits: tizef (~tyzef@43.231.30.255) (Remote host closed the connection)
[13:43:40] <dila> how about this
[13:43:55] <dila> x^2 + y^2 = 1 is a specialisation of x^2 + y^2 = r^2
[13:43:57] <rubiksdream> im not sure why in baby rudin, theorem 7.29, he uses boundedness of the functions in the algebra A, surely if A is some algebra of complex valued functions, then its uniform closure would be a uniformly closed algebra? Why do we need boundedness here
[13:44:05] <dila> x^2 + y^2 = r^2 is a generalisation of x^2 + y^2 = 1
[13:44:41] <dila> you could say that r^2 is a meta-parameter of x^2 + y^2 = 1 because it does not appear in the expression but exists in the generalisation
[13:44:46] <brownorange> I guess I was confusing metavars with supermetavars
[13:45:42] <Gurkenglas> brownorange, for when you have three languages at a time, two of them being meta wrt one other?
[13:46:22] <Gurkenglas> dila, no. "x^2 + y^2 = r^2 is a generalisation of x^2 + y^2 = 1" <- "generalization" is a word in the meta language
[13:46:37] <brownorange> @Gurkenglas yes almost. there's one language that can have metavars that could be used to talk about all other languages. like you might see for a verifier
[13:47:16] <dila> Gurkenglas: thanks for correcting me
[13:47:37] <dila> but i think my definition of generalisation is more general than yours
[13:47:52] <brownorange> I think metamath (the progra) has such a thing
[13:47:53] <rubiksdream> ah okay, the issue is the product sequence may not converge uniformly without boundedness
[13:48:04] <Gurkenglas> brownorange, so when you have multiple compilers written in C, wouldn't those "supermetavars" also be covered by "variables in C"?
[13:50:03] <brownorange> @Gurkenglas let's just dumb this down to ASM. ASM beneath every program language. even though how different languages may be, the asm carries out the task, and you can abstractly (and painfully) understand what each program written in any language really does
[13:51:25] <Gurkenglas> C compiles python into ASM. I wouldn't call ASM supermeta
[13:51:44] <dila> a compiler translates code from one language to another
[13:51:45] <brownorange> well C was originally bootstrapped with ASM, then could compile itself thereafter
[13:52:19] <brownorange> today C can just be used to improve C compilers
[13:52:35] <Gurkenglas> then ASM compiled python into ASM, but that ASM was the compiling language was incidental and everyone wanted to wash their hands of that as soon as possible
[13:52:44] <Gurkenglas> uhh, ASM compiled C into ASM, I mean
[13:53:58] <brownorange> unfortunatley there is no actual supermetavar in languages, because different languages have a very different expectation of what a var is
[13:54:09] *** Joins: KUrare_ (~KUrare@user/kurare)
[13:55:30] <Gurkenglas> the expectations of a language don't really have a say in what's meta and what isn't because those are labels applied by us from the *cough* super-meta level
[13:57:00] <dila> the language itself (as defined by the designers), the code written in the language, a compiler that maps from one language to another
[13:58:02] <dila> a compiler is just a map from one language domain to another
[13:59:39] *** Quits: Carbonflux (~Carbonflu@c-24-56-228-141.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[14:02:09] *** Joins: wladimir (~doforlove@user/doforlove33)
[14:03:14] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[14:03:15] *** Joins: Macallan (~i.am@user/marlboro)
[14:03:28] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[14:05:39] *** Joins: chomwitt (~chomwitt@94.66.61.137)
[14:13:08] *** Joins: Jynx (~Jynx@2001:1c02:2c08:db00:a7c7:79f5:c819:f989)
[14:18:07] *** Quits: Inline (~Inline@2a02:908:1252:7a80:89dc:6a58:9f2a:ff3d) (Remote host closed the connection)
[14:18:39] *** Joins: Ginalo (uid502518@id-502518.tinside.irccloud.com)
[14:18:49] *** Parts: mestre (~mestre@191.177.175.57) ()
[14:19:54] *** Quits: LuKaRo (~LuKaRo@p4fc33c32.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[14:20:32] *** Quits: Mattiaslndstrm (~Mattiasln@94.191.152.106) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:23:47] *** Joins: LuKaRo_ (~LuKaRo@p4fc32cd3.dip0.t-ipconnect.de)
[14:25:19] *** Quits: wladimir (~doforlove@user/doforlove33) (Ping timeout: 245 seconds)
[14:30:12] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[14:30:16] *** Joins: red_owl (~red_owl@p5b2435fd.dip0.t-ipconnect.de)
[14:30:26] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[14:33:21] *** Quits: jmft2 (~jmft2@213.31.248.255) (Quit: This computer has gone to sleep)
[14:33:53] *** Joins: wladimir (~doforlove@user/doforlove33)
[14:34:08] *** Joins: jmft2 (~jmft2@213.31.248.255)
[14:37:54] *** Quits: dld (~davidlowr@2601:197:600:1210:f114:5b21:6fb7:1fc1) (Ping timeout: 250 seconds)
[14:39:12] *** Quits: Jynx (~Jynx@2001:1c02:2c08:db00:a7c7:79f5:c819:f989) (Quit: Leaving)
[14:39:31] *** Quits: DarkSeid (sid394293@helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[14:48:49] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[14:49:02] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[14:52:56] <brownorange> https://pastebin.com/CbwGX1Ju  my best final attempt.
[14:54:21] <brownorange> https://pastebin.com/PRwi1KUJ my best final attempt (part II), i'm done.
[14:55:40] <brownorange> if this is still wrong, then i don't care what's right
[14:56:13] *** Quits: wladimir (~doforlove@user/doforlove33) (Quit: WeeChat 3.3)
[14:56:26] <mornfall> i guess that last sentence neatly sums up the entire mission
[14:59:16] *** Quits: APic (apic@apic.name) (Quit: leaving)
[14:59:56] *** Joins: APic (apic@apic.name)
[15:01:03] *** Joins: mbuf (~Shakthi@122.174.39.240)
[15:01:46] *** Joins: frost (~frost@59.71.244.36)
[15:04:01] <brownorange> @mornfall there may be some isomorphisms I skipped over or failed to consider along the way, but I think I got the gist
[15:05:12] <mh_le> if I have P(a=0 | b) = 3/4 and P(a=1 | c ) = 1/4, what is the overall probability if P(b/c)= 1/2?
[15:05:54] <brownorange> B29(~ ForAll x ~A21(v(x),T) , ThereExists x  A21(v(x),T))   this is not hard folks. it's a simple identity between two ways to express existential quantifier. in that sense it's not wrong. also both sides of the identity are also stating something true
[15:06:22] <brownorange> basically that there is some formula biconditional with the truth constant True
[15:06:56] <brownorange> saying it isn't true in some model is like saying you didn't already assume propositional axioms
[15:07:01] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[15:07:14] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[15:08:39] *** Quits: extern (~archer@141.226.62.61) (Ping timeout: 245 seconds)
[15:08:51] *** Quits: brownorange (~brownoran@user/brownorange) (Quit: Leaving)
[15:09:09] *** Joins: brownorange (~brownoran@user/brownorange)
[15:09:26] <brownorange> which does sum it all up nice. if the statement is wrong, then your system has no notion of right anyway
[15:09:42] *** Quits: brownorange (~brownoran@user/brownorange) (Client Quit)
[15:10:46] *** Joins: biberao (~m@user/biberao)
[15:10:48] <biberao> hi
[15:13:05] *** Quits: trace987 (~trace@95.90.106.112) (Remote host closed the connection)
[15:16:01] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[15:16:53] *** Joins: ravan (~ravan@42.201.198.151)
[15:17:13] *** Quits: ravan (~ravan@42.201.198.151) (Changing host)
[15:17:13] *** Joins: ravan (~ravan@user/ravan)
[15:17:25] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[15:18:18] *** Joins: ravan (~ravan@user/ravan)
[15:19:50] *** Joins: arseniiv (~arseniiv@136.169.202.194)
[15:20:26] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[15:26:09] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 245 seconds)
[15:27:04] *** Joins: Crescendo (~Crescendo@user/crescendo)
[15:28:53] *** Quits: DnzAtWrk3 (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:31:03] *** Joins: thyriaen (~thyriaen@dynamic-077-013-083-201.77.13.pool.telefonica.de)
[15:32:14] *** Joins: gas51627 (uid91066@id-91066.helmsley.irccloud.com)
[15:32:17] <gas51627> hi, a silly question, 4 = 4 right?
[15:33:04] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[15:36:08] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:12a8:f6fc:d024:15a8)
[15:37:32] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[15:37:45] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[15:37:52] *** Joins: Inline (~Inline@2a02:908:1252:7a80:89dc:6a58:9f2a:ff3d)
[15:38:34] *** Joins: trinity (uid509475@id-509475.lymington.irccloud.com)
[15:38:57] *** Quits: biberao (~m@user/biberao) (Quit: WeeChat 2.3)
[15:40:18] *** Quits: trinity (uid509475@id-509475.lymington.irccloud.com) (Changing host)
[15:40:18] *** Joins: trinity (uid509475@user/trinity)
[15:41:25] <Gurkenglas> yes but why :D
[15:41:30] <Gurkenglas> doy ou ask
[15:42:02] <Gurkenglas> the question is basic enough that i want to make you sure you are not misunderstanding anything basic
[15:42:40] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[15:44:08] *** Joins: Mattiaslndstrm (~Mattiasln@94.191.152.106)
[15:44:16] *** Quits: bowlofeggs (~bowlofegg@fedora/bowlofeggs) (Ping timeout: 245 seconds)
[15:46:06] *** Joins: bowlofeggs (~bowlofegg@fedora/bowlofeggs)
[15:52:29] *** Quits: AimHere (~David@92.238.16.159) (Quit: Leaving)
[15:52:41] *** Joins: Jordy (~jordy@user/jordy)
[15:52:59] *** Joins: DnzAtWrk3 (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi)
[15:54:04] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 245 seconds)
[15:54:18] *** Joins: causative (~halberd@user/causative)
[15:55:07] *** Joins: AimHere (~David@vpn-fn-229.net.ed.ac.uk)
[15:55:08] *** Joins: dez (uid92154@user/dez)
[15:57:01] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[15:57:23] *** Quits: mbuf (~Shakthi@122.174.39.240) (Quit: Leaving)
[15:59:39] <gas51627> well
[16:00:10] <gas51627> then does √4=√4
[16:00:21] <Gurkenglas> What is √
[16:00:26] *** Quits: AimHere (~David@vpn-fn-229.net.ed.ac.uk) (Quit: Leaving)
[16:00:31] <gas51627> square root i think
[16:00:56] <Gurkenglas> Ah. I think I have some sentences that'll help.
[16:01:30] <Gurkenglas> When you have x+2=y+6 then you have x+2+1=y+6+1, right? You're allowed to add 1 to both sides.
[16:01:35] <gas51627> it's pasted strangely from the math bin
[16:01:51] <gas51627> yes
[16:01:55] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[16:02:07] <gas51627> we can ask ourselves why
[16:02:13] <gas51627> but I sort of trust this one
[16:02:46] <Gurkenglas> This is a property of "add 1", we say that "add 1" is "well-defined".
[16:03:00] <gas51627> ok
[16:03:22] <Gurkenglas> in symbols, f is well-defined means forall x,y: x=y => f(x)=f(y)
[16:03:37] <gas51627> right
[16:03:41] <gas51627> in our case f = add 1
[16:03:50] <gas51627> f is add 1
[16:04:02] <Gurkenglas> "times 2" is also well-defined, and so is "times itself" or "times 0"
[16:04:38] <gas51627> btw is "well-definedness" something similar to reflexivity, transitivity , etc
[16:04:39] <gas51627> ?
[16:05:15] <Gurkenglas> sort of!
[16:05:26] <gas51627> ok
[16:05:30] <Gurkenglas> there's another property of some functions f called "one-to-one" or "bijective": forall x,y: x=y <=> f(x)=f(y)
[16:05:55] <Gurkenglas> "add 1" and "times 2" have this, "times itself" and "times 0" don't
[16:06:19] <Gurkenglas> because 2=1 is false but 2*0=1*0 is true, so the <= part doesn't hold
[16:06:21] <gas51627> right
[16:07:06] <gas51627> I think I understand where are you going to
[16:07:11] <Gurkenglas> What I want to make clear is that I have heard of "well-defined" and "bijective" and so on long before I connected it to "apply something to both sides", but these are supposed to be right next to each other in your brain!
[16:07:58] <gas51627> cool stuff
[16:08:03] <Gurkenglas> similarly, f being monotonic means forall x,y: x smaller than y => f(x) smaller than f(y)
[16:08:05] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:8d93:a3ee:e409:74cc) (Quit: Textual IRC Client: www.textualapp.com)
[16:08:34] <Gurkenglas> "add 1" and "times 2" are monotonic, "times -2" isn't, and *that's why* you're not allowed to just multiply inequalities by -2 willy-nilly
[16:08:36] <gas51627> right, so what you list now - are properties of the functions
[16:09:07] <gas51627> and reflexivity, transitivity, etc - are properties of the objects
[16:09:15] <gas51627> (or domain)
[16:09:40] <Gurkenglas> Okay. Functions in general come defined with a set of things they can take in. When we restrict the function "times itself" to the non-negative real numbers, it is bijective
[16:10:04] <gas51627> domain
[16:10:11] <gas51627> that's it I think
[16:10:14] <Gurkenglas> yes. x times x = y times y implies x = y, so long as we know that both x and y are non-negative
[16:10:57] <gas51627> right
[16:11:03] <Gurkenglas> a function being bijective can be equivalently described as that function having an inverse, another function such that applying one and then the other goes back where you started
[16:11:42] <Gurkenglas> "times itself" with the domain being the positive numbers has an inverse, which we call sqrt
[16:12:17] <Gurkenglas> (though whatever you were last reading about sqrt might notate things a little differently? :( )
[16:12:39] <Gurkenglas> and in that case, sqrt(4) is in fact equal to sqrt(4)
[16:12:49] <gas51627> i don't remember what I read about srqt to be honest
[16:12:57] <gas51627> and if I did
[16:13:22] *** Quits: totoro (~totoro@user/totoro) (Read error: Connection reset by peer)
[16:13:44] <Gurkenglas> now, for non-bijective functions we could, lacking an inverse, talk about preimages instead
[16:14:16] *** Quits: rubiksdream (~rubiksdre@n219073073081.netvigator.com) (Ping timeout: 252 seconds)
[16:14:35] <Gurkenglas> that is, for every number that "times itself" might produce such as 4, we can talk about the preimage of 4: the set of what "times itself" will map to 4
[16:14:42] <Gurkenglas> That set being, in this case, {-2, 2}
[16:15:24] <gas51627> right
[16:15:34] <gas51627> btw, the symbol <=> is something like iff right?
[16:15:44] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[16:15:49] <Gurkenglas> yeah, we can just say iff.
[16:16:05] <Gurkenglas> it was meant to mean precisely iff.
[16:16:16] <gas51627> cool
[16:16:36] <gas51627> right, so then the questions is how we define sqrt
[16:16:55] <gas51627> whether it's an inverse of bijectional x self x
[16:16:57] *** Joins: Turingtoast (~Tino@200116b860d973008cf1f8289f378c3a.dip.versatel-1u1.de)
[16:17:14] <gas51627> or is it a "give me preimage of x"
[16:17:28] *** Quits: KUrare_ (~KUrare@user/kurare) (Ping timeout: 268 seconds)
[16:17:31] *** Joins: KUrare (~KUrare@user/kurare)
[16:17:35] <Gurkenglas> Sometimes I see "x squared = y squared implies +-x=+-y", i think they're talking about preimages.
[16:17:36] <gas51627> I think for equation, sqrt is defined the latter way
[16:18:15] <Gurkenglas> For any function, mapping an element of the codomain (the set of what might come out of the function) to its preimage is also a function, and of course it's well defined; {-2,2}={-2,2}. Of course this doesn't imply that any element on the left is equal to every element on the right :). It does mean that every element on the left is equal to *some* element on the right.
[16:18:54] *** Joins: Julian (~tos9@python/site-packages/Julian)
[16:19:29] <gas51627> would it make sense to add indexes to those elements
[16:19:40] <gas51627> and then state that elements with the same indexes are equal
[16:19:54] <gas51627> something like that
[16:19:56] *** Joins: xiongxin (~quassel@113.116.33.66)
[16:20:00] <Gurkenglas> In general when you see words like transitivity I recommend that you think of them in terms of what they allow you to do: That < is transitive *means* that given a<b and b<c you are allowed to deduce a<c
[16:20:36] <gas51627> so transitivity is a property of an operator
[16:20:39] <gas51627> or function
[16:20:51] *** Joins: dld (~davidlowr@2620:6e:6000:2900:2184:de22:ee5e:5a79)
[16:20:57] <gas51627> < (x, y) is x < y
[16:21:10] <Gurkenglas> i usually see < called a "relation", and see + called an "operator"
[16:21:25] <gas51627> well yeah
[16:21:37] <gas51627> but I think relation is a function whos value is true or false
[16:22:03] <Gurkenglas> yeah, and it's domain is the product of two sets, usually both times the same set
[16:22:27] <Gurkenglas> and an operator is usually a function whose domain is the product of a set with itself and whose codomain is that same set
[16:22:41] *** Joins: savask (~savask@Powder/Developer/savask)
[16:23:44] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[16:23:52] <gas51627> cool stuff
[16:24:42] *** Joins: lleo (~leo@188-206-72-54.mobile.kpn.net)
[16:25:08] <Gurkenglas> <gas51627> would it make sense to add indexes to those elements <- i think so
[16:25:47] *** Quits: lleo (~leo@188-206-72-54.mobile.kpn.net) (Client Quit)
[16:26:03] <Gurkenglas> although in such a case you may instead want to manipulate something like {-2=-2, 2=2}?
[16:26:17] *** Quits: KUrare (~KUrare@user/kurare) (Remote host closed the connection)
[16:26:35] <Gurkenglas> Exercise: Describe associativity in terms of what it allows you to do.
[16:26:37] *** Joins: KUrare (~KUrare@user/kurare)
[16:28:14] <Gurkenglas> Solution (encrypted with rot13.com): qvfpneq cneragurfrf
[16:28:32] <Gurkenglas> Any questions?
[16:28:43] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[16:29:06] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[16:29:44] <gas51627> well if  you have (a + b) + ( c + d) it allows you to first calculate b + c and add a and d. Or in general, apply + in any order
[16:30:07] <gas51627> sorry had to google first what associativity means I always mix them up
[16:30:39] <Gurkenglas> Valiant try, and don't feel bad, I don't even know how long it took me to figure this out, although at least I managed to be confused enough to ask around and not get good answers
[16:31:07] <Gurkenglas> It allows you to discard parentheses, or perhaps even more satisfyingly:
[16:31:49] <Gurkenglas> An operator being associative means that actually it doesn't really take two inputs, it takes any finite list of inputs
[16:32:11] <gas51627> interesting
[16:32:13] <Gurkenglas> That is, + being associative means you can add up a list of numbers and it's clear what that means.
[16:32:35] <Gurkenglas> + being associative means you can add up a finite *set* of numbers, even, and it's unique what that means
[16:32:35] <gas51627> replace word list with set
[16:32:47] <Gurkenglas> -associative+commutative ._.
[16:33:27] <Gurkenglas> commutative is *defined* using a+b = b+a, but I'd say what it *means* is that + can take as input not just a finite list (ordered set), but any finite set.
[16:33:48] <gas51627> well, parenthesis are basically indexes
[16:34:09] <gas51627> so then associative means that you accept a set (unindexed)
[16:34:20] <gas51627> and non-assiciativity means that set must be indexed
[16:34:35] <Gurkenglas> oh shit, i misread what you said about associative
[16:34:41] <Gurkenglas> i think you misread the definition
[16:34:55] <Gurkenglas> + being associative is usually defined as (a+b)+c=a+(b+c)
[16:35:11] <gas51627> no no yes, that's what I meant
[16:35:19] <Gurkenglas> ah ok
[16:35:34] <Gurkenglas> so if you have associative, but not commutative, then you can add up a list, but not a set
[16:35:41] <gas51627> or (a + b) + (c + d) = a + ( b + c) + d
[16:37:01] <gas51627> sorry I am a bit confused
[16:37:10] <gas51627> what's the differnece between associative and commutative
[16:37:17] <gas51627> seems like the same thing to me
[16:39:08] *** Parts: WYfM2fGh (~Gx8nnQuP@74.5.153.221) (Leaving ... Goodbye.)
[16:42:28] <Gurkenglas> commutative means 1+2=2+1
[16:42:54] <Gurkenglas> associative means 1+5+4+5+7+5 doesn't depend on where you insert ( and )
[16:43:04] <dila> as a binary operator: a*b = f(a,b) is means the map is symmetric: f(a,b) = f(b,a)
[16:44:06] <gas51627> yah
[16:44:18] *** Joins: Mare (~Mare@71.196.251.141)
[16:44:19] <gas51627> but it seems that associativity and commutativity are pretty close together
[16:44:28] <dila> yes, they are both field axioms
[16:44:42] <Gurkenglas> For example, composition of recipes is associative but not commutative: (add salt, then stir), then cook is the same as add salt, then (stir, then cook), but not the same as cook, then (stir, then add salt)
[16:45:33] <gas51627> I would say that associativity does not make any difference in this example
[16:45:36] <gas51627> or sense
[16:45:43] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:45:51] <gas51627> because there is no such thing as (stir, then cook)
[16:46:08] <Gurkenglas> sure there is, you can stir and cook without adding salt
[16:46:50] <Gurkenglas> You can send one assistant to add salt, then when he comes back another to stir and cook; or you might send one to add salt and stir, then another to cook
[16:46:54] <cherim> It's the worst example of associativity I've ever seen. The records do not renew often in this case
[16:47:00] <dila> matrix multiplication is an example of somethign that is non-commutative
[16:47:15] *** Joins: CodePoint (~BitShift@94.198.42.197)
[16:47:42] <gas51627> even division is not commutative
[16:47:51] <gas51627> 5 / 7 is not = 7 / 5
[16:47:52] <Gurkenglas> gas51627, also not associative
[16:47:55] *** Quits: mra90 (~Martin@134.191.221.84) (Ping timeout: 252 seconds)
[16:48:05] <dila> yeh division is a better example i guess
[16:48:24] <Gurkenglas> (12/6)/2 is not the same as 12/(6/2)
[16:48:42] <gas51627> ok, so commutativity is about the direction
[16:48:53] <Gurkenglas> About the order, yes
[16:49:03] <gas51627> or whether going left to right is the same as going right to left
[16:49:11] <X-Scale> gas51627: associativity can be a much more restrictive property than commutativity
[16:49:12] <gas51627> and associativity is about the order
[16:49:28] <gas51627> (while preserving direction)
[16:49:50] <Gurkenglas> associativity is about whether we're allowed to flatten the binary tree into a list
[16:50:03] <dila> subtraction is non-commutative too: a-b != b-a
[16:50:06] *** Quits: jinsun_ (~jinsun@user/jinsun) (Write error: Connection reset by peer)
[16:50:07] *** Quits: smitop[m] (~smitopkde@2001:470:69fc:105::1:117) (Read error: Connection reset by peer)
[16:50:07] *** Quits: Freemo[m] (~freemoqot@2001:470:69fc:105::c203) (Write error: Connection reset by peer)
[16:50:07] *** Quits: xodazuwe[m] (~xodazuwem@2001:470:69fc:105::f80c) (Write error: Connection reset by peer)
[16:50:07] *** Quits: Tisoxin (~ikosit@user/ikosit) (Write error: Connection reset by peer)
[16:50:08] *** Quits: agur_mkmrrs[m] (~agurmkmrr@2001:470:69fc:105::ed0f) (Read error: Connection reset by peer)
[16:50:08] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Read error: Connection reset by peer)
[16:50:08] *** Quits: dotz0cat[m]1 (~dotz0catm@2001:470:69fc:105::91b) (Read error: Connection reset by peer)
[16:50:08] *** Quits: aplund (~aplundmat@2001:470:69fc:105::4146) (Read error: Connection reset by peer)
[16:50:09] *** Quits: nicoty (~nicoty@user/nicoty) (Write error: Connection reset by peer)
[16:50:09] *** Quits: DerlgM (~lucifargu@2001:470:69fc:105::2faa) (Write error: Connection reset by peer)
[16:50:09] *** Quits: atx (~atx@2001:470:69fc:105::923) (Write error: Connection reset by peer)
[16:50:09] *** Quits: dunpeal (~dunpeal@2001:470:69fc:105::3e80) (Write error: Connection reset by peer)
[16:50:09] *** Quits: a_train[m] (~austintra@2001:470:69fc:105::da5e) (Write error: Connection reset by peer)
[16:50:10] *** Quits: quantum (~quantum@user/quantum/x-8556232) (Write error: Connection reset by peer)
[16:50:10] *** Quits: DrBanana[m] (~drbanana@2001:470:69fc:105::3c9a) (Write error: Connection reset by peer)
[16:50:10] *** Quits: euphrates[m] (~euphrates@2001:470:69fc:105::fbb5) (Write error: Connection reset by peer)
[16:50:10] *** Quits: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4) (Read error: Connection reset by peer)
[16:50:10] *** Quits: whaleshunter[m]1 (~whaleshun@2001:470:69fc:105::daf2) (Write error: Connection reset by peer)
[16:50:11] *** Quits: sp (~susammatr@2001:470:69fc:105::31bc) (Write error: Connection reset by peer)
[16:50:11] *** Quits: erentar2002[m] (~erentar20@2001:470:69fc:105::7af1) (Write error: Connection reset by peer)
[16:50:11] *** Quits: heitzmann[m] (~heitzmann@2001:470:69fc:105::1:86d) (Write error: Connection reset by peer)
[16:50:11] *** Quits: reddishblue[m] (~reddishbl@2001:470:69fc:105::21eb) (Write error: Connection reset by peer)
[16:50:11] *** Quits: kadoban (~kadoban@user/kadoban) (Write error: Connection reset by peer)
[16:50:12] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Write error: Connection reset by peer)
[16:50:12] *** Quits: greatwielder[m] (~greatwiel@2001:470:69fc:105::500b) (Write error: Connection reset by peer)
[16:50:13] <gas51627> cool
[16:50:16] <Gurkenglas> also not associative
[16:50:29] <Gurkenglas> Find something commutative, but not associative :)
[16:50:47] <gas51627> haha cool what you said about the list
[16:51:09] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[16:51:11] <dila> the operator is not symmetric is what i really mean
[16:51:27] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[16:51:30] <dila> inverses are commutative
[16:51:38] *** Joins: dotz0cat[m] (~dotz0catm@2001:470:69fc:105::91b)
[16:51:42] <dila> for integers anyway
[16:51:48] *** Joins: atx (~atx@2001:470:69fc:105::923)
[16:51:48] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[16:51:49] *** Joins: kadoban (~kadoban@user/kadoban)
[16:51:49] *** Joins: quantum (~quantum@user/quantum/x-8556232)
[16:52:03] *** Joins: dunpeal (~dunpeal@2001:470:69fc:105::3e80)
[16:52:04] *** Joins: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4)
[16:52:17] *** Joins: sp (~susammatr@2001:470:69fc:105::31bc)
[16:52:18] *** Joins: smitop[m] (~smitopkde@2001:470:69fc:105::1:117)
[16:52:31] *** Joins: DrBanana[m] (~drbanana@2001:470:69fc:105::3c9a)
[16:52:31] *** Joins: reddishblue[m] (~reddishbl@2001:470:69fc:105::21eb)
[16:52:31] *** Joins: aplund (~aplundmat@2001:470:69fc:105::4146)
[16:52:31] *** Joins: Freemo[m] (~freemoqot@2001:470:69fc:105::c203)
[16:52:43] *** Joins: whaleshunter[m] (~whaleshun@2001:470:69fc:105::daf2)
[16:52:43] *** Joins: DerlgM (~lucifargu@2001:470:69fc:105::2faa)
[16:52:43] *** Joins: Tisoxin (~ikosit@user/ikosit)
[16:52:55] *** Joins: erentar2002[m] (~erentar20@2001:470:69fc:105::7af1)
[16:53:03] <Gurkenglas> dila, misunderstanding? I am telling you to find a function A²->A for some set A, that is commutative but not associative.
[16:53:05] *** Joins: jinsun_ (~jinsun@user/jinsun)
[16:53:05] *** Joins: nicoty (~nicoty@user/nicoty)
[16:53:10] *** Quits: CodePoint (~BitShift@94.198.42.197) (Quit: Never gonna give you up, never gonna let you down...)
[16:53:17] *** Joins: agur_mkmrrs[m] (~agurmkmrr@2001:470:69fc:105::ed0f)
[16:53:17] *** Joins: a_train[m] (~austintra@2001:470:69fc:105::da5e)
[16:53:17] *** Joins: euphrates[m] (~euphrates@2001:470:69fc:105::fbb5)
[16:53:17] *** Joins: greatwielder[m] (~greatwiel@2001:470:69fc:105::500b)
[16:53:17] *** Joins: xodazuwe[m] (~xodazuwem@2001:470:69fc:105::f80c)
[16:53:19] <gas51627> ok, nothing comes to mind
[16:53:29] *** Joins: heitzmann[m] (~heitzmann@2001:470:69fc:105::1:86d)
[16:53:29] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[16:53:48] <Gurkenglas> not for me, either! i can probably construct one with A an arbitrary set of size like three, but that feels like cheating
[16:54:29] <gas51627> if something does not care in which direction it can be applied
[16:54:34] <cherim> (x, y) -> x^y +y^x (powers)
[16:54:36] <gas51627> then it probably does not care about the order either
[16:55:04] <Gurkenglas> cherim, I suppose that is an example, thanks.
[16:55:09] *** Quits: Sofia (~sofia@gateway/tor-sasl/sofia) (Ping timeout: 276 seconds)
[16:55:47] <dila> Gurkenglas: what are you telling me?
[16:56:04] <Gurkenglas> dila, can you rephrase that question?
[16:56:52] <Gurkenglas> gas51627, I implore you to say something other than "order" there, since I usually see "order" refering to what sets a list apart from a set
[16:57:23] <Gurkenglas> aka, exactly what commutativity doesn't care about :)
[16:57:34] <gas51627> "(x, y) -> x^y +y^x (powers)" cool
[16:57:44] *** Joins: lxlldr (~I@87.196.81.253)
[16:58:59] <Gurkenglas> The study of series is precisely the study of how to get rid of that pesky "finite" in "there's an obvious way to add up a list"
[16:59:29] <Gurkenglas> *"there's an obvious way to add up a finite list" :(
[16:59:48] <gas51627> Gurkenglas: look, associativity deals with nestedness
[17:00:02] <gas51627> whether depth matters or not
[17:00:43] <gas51627> and commutativity deals with "if you are on the same level, can I disregard your order"
[17:01:03] <mh_le> I have a situation where Alice chooses to apply the hadamard to a bell pair with joint state 1/sqrt(2)( |0>|0> + |1>|1>), or not (b=0 if she dosen't, b=1 if she does) at random, and  measures with outcome |a> in the computational basis. How can bob guess b with probability >1/2?
[17:01:04] <gas51627> consider f (x, f (y, z))
[17:01:32] <Gurkenglas> gas51627, yeah you got it; I was just making sure you didn't finish this with potential notation clashes
[17:02:27] *** Joins: Sofia (~sofia@gateway/tor-sasl/sofia)
[17:02:35] <Gurkenglas> mh_le, homework?
[17:02:49] <gas51627> or in other words associativity is how this operator instance coexists  with other instnaces, and commutativity is about the order of parameters
[17:02:53] <gas51627> thanks, clear
[17:03:52] <Gurkenglas> gas51627, do you feel that the confusion that prompted you to ask "4=4?" is resolved? Any other questions? Any definitions where you're confused about how to translate them into what they allow you to do?
[17:04:06] <mh_le> Gurkenglas: yeah
[17:04:19] <mh_le> I've tried all day
[17:04:34] <Gurkenglas> mh_le, link the problem statement
[17:04:41] *** Quits: xff0x (~xff0x@2001:1a81:5251:1900:6353:3c1e:a988:d99) (Ping timeout: 245 seconds)
[17:04:45] <Gurkenglas> you haven't defined a
[17:05:08] <dila> a is the outcome
[17:05:48] <Gurkenglas> oh, the sole appearance of "a" in your question is its definition. It's unused, then! :D
[17:06:05] <mh_le> Gurkenglas: https://cloud.eccentric.dk/s/yqKrJcQYoJFRBHD
[17:06:53] <mh_le> it's 1(d)
[17:08:04] <Gurkenglas> Hmm. Link the course pdf so I can look up definitions?
[17:08:45] <mh_le> H is the hadamard
[17:08:48] *** Joins: wladimir (~doforlove@user/doforlove33)
[17:08:56] <mh_le> there are no other definitions
[17:09:28] <mh_le> H^1 = H and H^0 = I
[17:12:02] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[17:12:15] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[17:17:01] *** Joins: xff0x (~xff0x@2001:1a81:5251:1900:6353:3c1e:a988:d99)
[17:17:41] *** Joins: rain3 (~rain3___@2a02:2f09:d003:5800:b41c:c37:1705:91bc)
[17:17:52] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[17:20:30] *** Quits: anovick_ (~anovick@2a0d:6fc0:1875:8f00:64c6:d643:3b18:a655) (Ping timeout: 260 seconds)
[17:20:33] <Gurkenglas> H appears to map |0>+|1> to |1>, so |00>+|11> becomes |000>+|001>+|110>+|111> becomes |000>+|110>+sqrt(2)|111> becomes 75%*(a is 1)*(|110>+sqrt(2)|111>)+25%*(a is 0)|000> by the end of step 2
[17:20:44] *** Joins: CodePoint (~BitShift@89.38.227.229)
[17:21:22] *** Quits: KUrare (~KUrare@user/kurare) (Ping timeout: 252 seconds)
[17:21:58] *** Quits: oxide (~lambda@user/oxide) (Ping timeout: 265 seconds)
[17:22:57] <Gurkenglas> this information supplied without liability
[17:23:06] <mh_le> no worries
[17:23:35] <Gurkenglas> cant bob just look at his bit and it's always equal to alice's bit
[17:23:37] *** Joins: oxide (~lambda@user/oxide)
[17:24:14] <Gurkenglas> oh, alice's bit "b", it says in (d), nevermind
[17:24:18] *** Quits: lxlldr (~I@87.196.81.253) (Ping timeout: 250 seconds)
[17:24:54] *** Quits: wladimir (~doforlove@user/doforlove33) (Ping timeout: 245 seconds)
[17:25:25] <Gurkenglas> so bob measures his bit and if it's 0 then b was certainly 0, that's already 25% he's correct
[17:25:58] <Gurkenglas> and if it's 1 then b has 2/3 chance to be 1?
[17:26:13] *** Joins: wladimir (~doforlove@user/doforlove33)
[17:27:09] <Gurkenglas> and measuring his bit changes nothing since bob is already entangled with his bit because of what alice did in step 3
[17:27:19] <Gurkenglas> uhh, step 2
[17:28:01] <Gurkenglas> (Did you know? Measuring a bit is just entangling yourself with it, which happens to entangle the rest of Earth because there's lots of interactions everywhere.)
[17:28:18] *** Quits: oxide (~lambda@user/oxide) (Ping timeout: 260 seconds)
[17:29:51] *** Joins: oxide (~lambda@user/oxide)
[17:30:52] *** Joins: stipa_ (~stipa@user/stipa)
[17:32:49] *** Quits: stipa (~stipa@user/stipa) (Ping timeout: 245 seconds)
[17:32:52] *** stipa_ is now known as stipa
[17:34:50] *** Quits: frost (~frost@59.71.244.36) (Quit: Connection closed)
[17:39:01] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[17:39:21] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[17:39:42] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-147f-b5d4-1962-58a8.res6.spectrum.com)
[17:39:45] *** Quits: inomoz (~inomoz@176.59.124.136) (Quit: WeeChat 3.2.1)
[17:40:40] *** Quits: bowlofeggs (~bowlofegg@fedora/bowlofeggs) (Read error: Connection reset by peer)
[17:42:44] *** Joins: noircode (~Izem@137.220.53.172)
[17:45:06] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 245 seconds)
[17:46:24] *** Joins: bowlofeggs (~bowlofegg@fedora/bowlofeggs)
[17:47:24] *** Quits: wladimir (~doforlove@user/doforlove33) (Ping timeout: 245 seconds)
[17:48:47] *** Joins: rubiksdream (~rubiksdre@n219073073081.netvigator.com)
[17:51:40] *** Quits: jinsun (~quassel@user/jinsun) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[17:52:12] *** Joins: Julian (~tos9@python/site-packages/Julian)
[17:52:17] *** Joins: jinsun (~quassel@user/jinsun)
[17:53:23] *** Joins: wladimir (~doforlove@user/doforlove33)
[17:53:35] *** Parts: noircode (~Izem@137.220.53.172) ()
[17:58:20] *** Joins: KUrare (~KUrare@user/kurare)
[18:06:59] *** Joins: seninha (~seninha@user/seninha)
[18:07:14] *** Quits: Arcorann_ (~A@159-196-65-46.9fc441.mel.nbn.aussiebb.net) (Ping timeout: 268 seconds)
[18:07:26] *** Quits: CodePoint (~BitShift@89.38.227.229) (Quit: Never gonna give you up, never gonna let you down...)
[18:13:00] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 260 seconds)
[18:15:26] *** Quits: Mattiaslndstrm (~Mattiasln@94.191.152.106) (Ping timeout: 260 seconds)
[18:17:58] *** Quits: wladimir (~doforlove@user/doforlove33) (Ping timeout: 252 seconds)
[18:19:40] *** Joins: LiftLeft (~LiftLeft@191.96.185.14)
[18:20:01] *** Joins: zacts (~zak@user/zacts)
[18:22:05] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[18:23:31] *** Quits: horseface (~horseface@user/horseface) (Ping timeout: 252 seconds)
[18:32:10] *** Quits: Macallan (~i.am@user/marlboro) (Quit: I come down here for a fat woman and that's what I'm havin.)
[18:36:06] *** Quits: lakitu (~lakitu@192-198-3-9.dhcp.radiolinkinternet.com) (Read error: Connection reset by peer)
[18:39:12] *** Quits: cloudcell (sid48145@5.254.36.57) (Changing host)
[18:39:12] *** Joins: cloudcell (sid48145@user/cloudcell)
[18:39:21] *** Joins: lakitu (~lakitu@192-198-3-9.dhcp.radiolinkinternet.com)
[18:39:40] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[18:42:51] *** Joins: sbrown (~sbrown@66.44.16.44)
[18:46:29] *** Joins: wladimir (~doforlove@user/doforlove33)
[18:50:11] *** Joins: alzgh (~alzgh@user/alzgh)
[18:50:44] *** Quits: wladimir (~doforlove@user/doforlove33) (Ping timeout: 245 seconds)
[18:52:36] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 245 seconds)
[18:55:56] <gas51627> hi all
[18:56:22] <gas51627> I am trying to prove that sqrt(a)/sqrt(b) = sqrt ( a/ b)
[18:56:43] <gas51627> but don't seem to quickly find an answer
[18:56:45] *** Quits: trinity (uid509475@user/trinity) (Quit: Connection closed for inactivity)
[18:57:04] *** Quits: Maturion (~Maturion@p200300ede724c900b612ecf6a68c7ac9.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[18:57:14] *** Joins: Julian (~tos9@python/site-packages/Julian)
[18:57:40] *** Quits: gggpkm (~gggpkm@111-251-122-246.dynamic-ip.hinet.net) (Ping timeout: 265 seconds)
[18:58:47] <gas51627> i just proven it
[18:58:48] <gas51627> sorry
[19:03:07] <qedders> no worries it is quite alright to share with us your thinking process gas51627
[19:06:33] *** Quits: Ginalo (uid502518@id-502518.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[19:08:39] <gas51627> ok, let a = p^2 and b = q^2, then a/b = p^2/q^2.       p^2/q^2 = (p*p)/(q * q) [by definition of ^2 ]  = (p/q) * (p/q) = (p/q)^2.      then sqrt(a/b) = sqrt ( (p/q)^2) = p/q = sqrt (a) / sqrt (b)
[19:09:27] <qergle> why must a,b be perfect squares?
[19:09:45] <gas51627> what's a perfect square?
[19:10:14] <qergle> when you say a=p^2, what is p, some real number?
[19:10:45] <gas51627> well, I didn't think about that to be honest
[19:10:45] <qergle> or rather some complex, i guess, if you are allowing for negative a,b
[19:13:02] <gas51627> wouldn't it work anyway?
[19:13:13] <gas51627> I mean, no matter what kind of number p is
[19:13:54] <HisShadow> What propositions are you starting from anyway?
[19:14:22] <gas51627> that sqrt ( a / b) = sqrt (a ) / sqrt ( b)
[19:14:30] <gas51627> that's the proposition
[19:14:44] <gas51627> and ok, for this case, let's say that domain is R
[19:14:53] <gas51627> real numbers
[19:15:07] <HisShadow> wwrong word then, what are your assumptions, what do you assume already proven?
[19:15:39] <gas51627> well, nothing
[19:15:42] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi)
[19:15:49] <gas51627> if something seems dubious I will prove it along the way
[19:16:15] <gas51627> like for example that (p/q) * ( p/q) = (p * p) / ( q * q )
[19:17:19] *** Joins: darkapex (~darkapex@user/darkapex)
[19:21:03] *** Quits: Europa (~Europa@user/europa) (Remote host closed the connection)
[19:21:20] *** Joins: Europa (~Europa@user/europa)
[19:22:14] *** Joins: sheepduck (~sheepduck@user/sheepduck)
[19:23:39] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 245 seconds)
[19:26:09] *** Quits: KUrare (~KUrare@user/kurare) (Ping timeout: 245 seconds)
[19:27:14] *** Joins: Julian (~tos9@python/site-packages/Julian)
[19:27:19] *** Quits: dld (~davidlowr@2620:6e:6000:2900:2184:de22:ee5e:5a79) (Ping timeout: 252 seconds)
[19:30:36] *** Joins: Null_A (~null_a@2601:645:8700:2290:8de:8d66:958e:46b4)
[19:35:19] *** Joins: econo (uid147250@user/econo)
[19:35:19] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 245 seconds)
[19:35:53] *** Quits: Europa (~Europa@user/europa) (Remote host closed the connection)
[19:36:08] *** Joins: Europa (~Europa@user/europa)
[19:36:44] *** Joins: Julian (~tos9@python/site-packages/Julian)
[19:36:58] *** Quits: xiongxin (~quassel@113.116.33.66) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:38:05] <Z-module> a and b can be any positive reals for this -- prime factorization of naturals isn't too relevant.
[19:38:41] <Z-module> All you need is that for any positive real r, sqrt(r) is the unique positive s such that s^2 = r
[19:39:29] *** Quits: Mare (~Mare@71.196.251.141) (Ping timeout: 245 seconds)
[19:40:21] *** Quits: Null_A (~null_a@2601:645:8700:2290:8de:8d66:958e:46b4) (Remote host closed the connection)
[19:40:47] *** Joins: Null_A (~null_a@2601:645:8700:2290:8de:8d66:958e:46b4)
[19:43:29] <dila> http://mathb.in/64724 what do i do at this point to complete the expansion of the polynomial product?
[19:44:23] <dila> it looks complicated but i'm just trying to derive the expression for the k'th coefficient of the product
[19:45:16] <cherim> c_k = sum_{i=0}^k a_i b_{k-i}
[19:45:20] <cherim> Nothing complicated
[19:46:24] <dila> how did you arrive at k for the upper limit of the sum
[19:46:56] <cherim> So that indices don't get negative
[19:47:14] <dila> that's a terrible answer
[19:47:34] <cherim> Powers above k in a and b don't contribute to the coefficient at x^k
[19:47:40] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 252 seconds)
[19:47:55] <cherim> The question is terrible, so what do you want
[19:47:57] <dila> ok thanks
[19:49:03] <Z-module> so all you are doing is picking out all the pairs (i,j) where 0 <= i <= M,  0 <= j <= N  such that i + j = k   so each of i, j as actually <= k.
[19:49:23] <Z-module> is* actually
[19:49:35] *** Joins: gb73d (gb73d@host-92-7-42-10.as13285.net)
[19:51:02] <cherim> It's much better (to make computations technically easier) to sum over all integer i anyway
[19:51:35] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:14e9:d913:de41:9808)
[19:52:05] <cherim> In most common formal series transformations you'll get 80% of the work in recomputing the limits in intermediates which do not contribute anything to the final answer
[19:52:56] *** Quits: Fohsap (~Muimi@2001:19f0:5001:2bf8:5400:3ff:fe30:8554) (Ping timeout: 246 seconds)
[19:56:29] *** Joins: KillAnimals (~anon@199.119.235.152)
[19:58:55] <Z-module> There are even bunches of lemmas about polynomial rings where the smoothest proof involves allowing negative subscripts but those coefficients all being assumed 0.
[19:59:33] <Z-module> (and of course, the fun wider world of formal power series rings and formal Laurent series rings)
[19:59:33] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[20:00:32] *** Joins: Koen (~Koen@61.192.201.77.rev.sfr.net)
[20:00:39] *** Joins: emf (~emf@162.218.217.186)
[20:03:33] *** Joins: tomtomgps (~tom@2a01:cb1c:575:6f00:1625:faf7:6e1:2f5e)
[20:09:22] *** Quits: Null_A (~null_a@2601:645:8700:2290:8de:8d66:958e:46b4) (Remote host closed the connection)
[20:09:43] *** Joins: emf_ (~emf@2620:10d:c090:400::5:3586)
[20:09:49] *** Joins: Null_A (~null_a@2601:645:8700:2290:8de:8d66:958e:46b4)
[20:11:16] *** Quits: emf (~emf@162.218.217.186) (Ping timeout: 252 seconds)
[20:16:46] *** Quits: Oli (~Unknown@user/oli) (Quit: leaving)
[20:18:27] <mh_le> are there anyone here that know about quantum information theory?
[20:19:44] *** Quits: Null_A (~null_a@2601:645:8700:2290:8de:8d66:958e:46b4) (Remote host closed the connection)
[20:20:10] *** Joins: Null_A (~null_a@2601:645:8700:2290:8de:8d66:958e:46b4)
[20:20:30] <mh_le> I'm haivng problems with problem 1(d) and (e) at https://cloud.eccentric.dk/s/yqKrJcQYoJFRBHD
[20:21:46] <riv> you've done part a and b?
[20:21:57] <mh_le> yeah
[20:22:28] *** Joins: Julian (~tos9@python/site-packages/Julian)
[20:23:38] <mh_le> sorry I meant c and d
[20:24:13] <mh_le> riv: ^
[20:25:12] *** Quits: DnzAtWrk3 (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:25:59] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 265 seconds)
[20:26:11] *** Joins: vim (~vim@19.95.54.77.rev.vodafone.pt)
[20:27:35] <vim> hello there fellas. can you help me devising an expression to control the amount of time my software system should wait, while batching requests from client nodes, to improve its throughput and minimize latency, when the system is under low load?
[20:27:37] <riv> well from part b you have rho_b^(0,0) and rho_b^(0,1)
[20:27:48] <mh_le> indeed
[20:27:56] <riv> so I think that rho_b^(a=0) is just 1/2 rho_b^(0,0) + 1/2 rho_b^(0,1)
[20:27:57] <vim> something like the expression TCP uses
[20:28:18] <mh_le> TCP?
[20:28:38] <vim> TCP being a low level protocol used in the Internet, mh_le
[20:29:08] <vim> https://blough.ece.gatech.edu/4110/TCPTimers.pdf
[20:29:24] <mh_le> oh sorry I confused your nick with riv and I didn't know what TCP was in that context
[20:29:56] <vim> oh ok, nw
[20:30:05] *** Quits: Null_A (~null_a@2601:645:8700:2290:8de:8d66:958e:46b4) (Remote host closed the connection)
[20:30:30] *** Joins: Null_A (~null_a@2601:645:8700:2290:8de:8d66:958e:46b4)
[20:30:40] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Ping timeout: 260 seconds)
[20:30:56] <vim> btw, some values can be bounded -- like the maximum wait time between batching ops, and a maximum batch size
[20:31:58] <mh_le> riv: any idea for the other part?
[20:32:04] *** Joins: biberao (~m@user/biberao)
[20:32:06] <biberao> hi
[20:33:46] *** Joins: Mat1010 (~Mat1010@168.181.209.58)
[20:33:57] *** Parts: Mat1010 (~Mat1010@168.181.209.58) ()
[20:34:04] <tomtomgps> Hi, I'm looking for help for the following algo. I have to write an algo that tells whether a max flow is unique in a directed graph. I found this algo https://stackoverflow.com/questions/40086311/algorithm-check-if-max-flow-is-unique  but I don't understand why it works. Can seomeone help?
[20:35:39] <greenbagels> vim: i don't understand what your question means; are you trying to optimize batching concurrent processes?
[20:36:11] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[20:36:26] <greenbagels> like waiting a few seconds before running an event loop to build up a buffer of events to process, versus constantly checking and serving single requests?
[20:37:30] *** Joins: KUrare (~KUrare@user/kurare)
[20:37:38] <vim> greenbagels: something like that, yes
[20:37:53] <vim> the problem is optimizing 'the few seconds' to wait
[20:38:09] <vim> wait too long, and you latency will be terrible
[20:38:17] <vim> wait too little, and your throughput will suffer
[20:38:18] <greenbagels> without having actual data to go off of, i think this is a hard problem to answer in the general case
[20:38:24] *** Joins: eksiee (~shuie@185.6.148.140)
[20:38:33] <eksiee> hi.. what sequence is this pls: 1,2,3,5,20,25
[20:38:43] *** Joins: vqueiroz (uid340368@id-340368.hampstead.irccloud.com)
[20:39:03] <vim> greenbagels: that is correct. if you need more context, I am working with distributed systems. in particular, I am making a byzantine fault tolerant library following the state machine replication approach.
[20:39:21] <vim> if you are familiar with the paxos family of consensus algorithms, it is related with this
[20:39:31] <eksiee> ?
[20:39:41] <vim> batching is important here, because there is a cost associated with running a consensus instance
[20:39:47] <greenbagels> eksiee: have you tried OEIS
[20:40:01] <eksiee> no
[20:40:56] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 245 seconds)
[20:42:21] <eksiee> so?
[20:43:01] *** Joins: KUrare_ (~KUrare@user/kurare)
[20:43:24] *** Parts: savask (~savask@Powder/Developer/savask) ()
[20:44:44] <biberao> hi a question please they're trying to find the codomain here but why the first bit, the angle part i mean? https://imgur.com/a/hiNmueA
[20:45:44] *** Quits: KUrare (~KUrare@user/kurare) (Ping timeout: 245 seconds)
[20:47:07] <greenbagels> biberao: because t is bounded in [0,4]
[20:47:11] *** Quits: emf_ (~emf@2620:10d:c090:400::5:3586) (Ping timeout: 245 seconds)
[20:47:24] <greenbagels> so pi/2*t is bounded in [0,2pi]
[20:47:35] <greenbagels> so pi/2*t+pi is bounded in [pi, 3pi]
[20:47:48] *** plank is now known as plankers
[20:47:49] <eksiee> bagel
[20:47:54] <eksiee> which serie is that man
[20:47:57] *** plankers is now known as plank
[20:48:00] <eksiee> hi.. what sequence is this pls: 1,2,3,5,20,25
[20:48:17] <biberao> i understand that but what im really supposed to do with it? :D greenbagels
[20:48:57] <greenbagels> eksiee: no idea
[20:49:21] *** Joins: seninha (~seninha@user/seninha)
[20:49:28] *** Joins: Julian (~tos9@python/site-packages/Julian)
[20:50:12] *** Joins: KUrare__ (~KUrare@user/kurare)
[20:50:36] <greenbagels> biberao: it allows you to say cos(...) is between [-1,1], though these are the loosest bounds possible for cos so im not sure why they bothered
[20:50:55] *** Quits: KillAnimals (~anon@199.119.235.152) (Ping timeout: 252 seconds)
[20:51:14] *** Parts: eksiee (~shuie@185.6.148.140) ()
[20:52:16] <biberao> greenbagels: what would happen
[20:52:20] <biberao> if
[20:52:44] <biberao> it was like 2pi<cos<3pi
[20:53:03] *** Quits: chomwitt (~chomwitt@94.66.61.137) (Ping timeout: 265 seconds)
[20:53:32] *** Quits: KUrare_ (~KUrare@user/kurare) (Ping timeout: 265 seconds)
[20:54:01] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 265 seconds)
[20:54:40] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[20:55:07] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[20:55:09] <Z-module> This is strange, biberao -- I guess they want one full 2pi-long cycle for cos, so this is not about a domain on which the function is injective/invertible.
[20:55:33] <Z-module> and yes, 2pi to 3pi would but one of those
[20:55:42] *** Joins: hyiltiz (~quassel@31.220.5.250)
[20:56:16] <mh_le> Hey Z-module  :)
[20:56:41] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[20:56:55] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 265 seconds)
[20:57:32] *** Parts: vim (~vim@19.95.54.77.rev.vodafone.pt) ()
[20:57:33] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[20:57:58] <Z-module> hi
[20:58:08] <biberao> Z-module: so they do that to be really be able to do the -1<cos<1
[20:58:16] *** Joins: pyrrhus (~pyrrhus@user/pyrrhus)
[20:58:59] <mh_le> Z-module: how are things?
[20:59:05] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[21:00:12] <Z-module> biberao: it looks to me like they just want to verify that the actual image of the function  4 cos(pi t/2 + pi)   for t on [0,4]  is all of [-1,1].
[21:00:59] <biberao> other than that does it really matter
[21:01:04] <biberao> what are the benefits i mean
[21:01:12] <Z-module> I suspect their notion of "contradomínio" is not the standard mathematical "codomain".
[21:01:51] *** Joins: emf (~emf@163.114.132.6)
[21:02:02] <Z-module> I don't know, they just want this function to reach everything in [-4,4].  Oh sorry, I meant that interval before, not [-1,1]
[21:02:18] <biberao> like
[21:04:21] *** Joins: Julian (~tos9@python/site-packages/Julian)
[21:04:27] <biberao> here contradominio means
[21:04:28] *** Quits: oxide (~lambda@user/oxide) (Read error: Connection reset by peer)
[21:04:41] *** Quits: rubiksdream (~rubiksdre@n219073073081.netvigator.com) (Ping timeout: 245 seconds)
[21:04:41] <biberao> its the set of the images
[21:05:01] <biberao> maybe its range i guess?
[21:05:05] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:b5f4:9a13:9ef:2ca)
[21:05:05] <mh_le> Z-module: you into quantum?
[21:05:13] <Z-module> sadly not
[21:05:16] <mh_le> :(
[21:05:42] <Z-module> or should I say: I might be, might not be, it'll depend on how and when we test my brain for the answer
[21:06:54] *** Quits: Julian (~tos9@python/site-packages/Julian) (Client Quit)
[21:08:12] *** Joins: oxide (~lambda@user/oxide)
[21:09:42] <Z-module> yes biberao, we call that the "image" or "range" of the function
[21:10:44] <biberao> ok lots to learn thanks
[21:10:46] <biberao> !
[21:11:51] *** Quits: Kaylah (~Kaylah@84-198-141-54.access.telenet.be) (Quit: Client closed)
[21:12:27] <greenbagels> mh_le: if it's at an undergraduate QM level i can help hehe
[21:12:43] <mh_le> it is
[21:13:07] <mh_le> greenbagels: I'm stuck with (c) and (d) at https://cloud.eccentric.dk/s/yqKrJcQYoJFRBHD
[21:13:14] <mh_le> greenbagels: thanks!
[21:14:44] *** Parts: [-_-] (~fractal@user/---/x-1675478) (WeeChat 3.3)
[21:15:06] <greenbagels> mh_le: what is H^b, a certain quantum gate?
[21:15:12] <greenbagels> also this might be better in ##physics
[21:15:32] <mh_le> greenbagels: H is the Hadamard gate
[21:15:43] <mh_le> greenbagels: #physics is pretty quiet
[21:16:19] <greenbagels> mh_le: two #s
[21:16:30] <mh_le> ##physics
[21:16:35] <greenbagels> yeah
[21:17:56] <mh_le> :D
[21:20:45] *** Joins: chomwitt (~chomwitt@94.66.61.137)
[21:21:09] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 245 seconds)
[21:23:59] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[21:24:28] *** Quits: taeaad_ (~taeaad@user/taeaad) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[21:25:57] *** Joins: Oli (~Unknown@user/oli)
[21:26:39] <mh_le> greenbagels: any suggestions?
[21:27:06] <greenbagels> mh_le: sorry i'm refreshing myself on qubits, it seems theres more rust than i remembered :D
[21:27:20] <mh_le> no worries :)
[21:28:51] *** Joins: hyiltiz (~quassel@31.220.5.250)
[21:32:35] *** Quits: gb73d (gb73d@host-92-7-42-10.as13285.net) ()
[21:33:11] *** Joins: magla (~gelignite@55d4b3fc.access.ecotel.net)
[21:34:53] *** Joins: dld (~davidlowr@2620:6e:6000:2900:2184:de22:ee5e:5a79)
[21:36:17] *** Quits: Capso (~Capso@wopr.sciops.net) (Ping timeout: 268 seconds)
[21:40:37] *** Joins: taeaad (~taeaad@user/taeaad)
[21:43:15] <mh_le> riv: you get anywhere?
[21:43:41] *** Quits: Oli (~Unknown@user/oli) (Read error: Connection reset by peer)
[21:44:25] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 265 seconds)
[21:44:52] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
[21:47:34] *** Quits: Koen (~Koen@61.192.201.77.rev.sfr.net) (Remote host closed the connection)
[21:47:46] *** Quits: Null_A (~null_a@2601:645:8700:2290:8de:8d66:958e:46b4) (Ping timeout: 260 seconds)
[21:47:52] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[21:50:49] *** Quits: Trashlord (~trash@user/trashlord) (Ping timeout: 252 seconds)
[21:53:01] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 245 seconds)
[21:53:11] <biberao> back was eating like it was the last day on earth
[21:54:15] <Z-module> it might be, you never know
[21:56:22] *** Quits: KUrare__ (~KUrare@user/kurare) (Ping timeout: 265 seconds)
[21:56:28] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[21:57:02] <biberao> but it felt good
[21:58:14] <Franciman> ggwp biberao
[21:58:17] <biberao> ggwp?
[21:58:25] <biberao> Z-module: theres another that shows the same thing
[21:59:50] <Franciman> good game, well played
[21:59:53] <Franciman> eating like no tomorrow
[21:59:57] <Franciman> each day that feels like the last
[22:00:09] <Franciman> I read bourbaki's books and I know that it can't be the last day we live
[22:00:19] <Franciman> because those books are so bad we must do better
[22:00:26] <Franciman> huge fan of bourbaki
[22:00:48] <biberao> Franciman: :D
[22:01:16] <Franciman> just lolling at one of them
[22:01:22] <Franciman> that had a really bad attitude against logic
[22:01:31] <Franciman> and did stupid nonsense comments on logic results
[22:01:35] <Franciman> saying they were stupid and nonsense
[22:01:39] <Franciman> backslashing at him
[22:04:02] *** Joins: Oli (~Unknown@user/oli)
[22:05:26] <biberao> oki
[22:07:46] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[22:09:04] <biberao> damn theres one thing still confusing me .\
[22:09:43] *** Joins: KUrare__ (~KUrare@user/kurare)
[22:11:24] *** Quits: thyriaen (~thyriaen@dynamic-077-013-083-201.77.13.pool.telefonica.de) (Remote host closed the connection)
[22:13:14] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[22:13:34] *** Joins: N0X_ (~nero@cpe-70-119-110-61.tx.res.rr.com)
[22:13:42] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[22:15:40] *** Quits: magla (~gelignite@55d4b3fc.access.ecotel.net) (Quit: Stay safe!)
[22:18:11] *** Joins: Null_A (~null_a@2601:645:8700:2290:14d:2889:1082:cd2c)
[22:20:30] *** Joins: slightlypandaish (~slightlyp@2001:8a0:5606:d100:ad9f:198e:fcf:92bc)
[22:22:49] *** Joins: hyiltiz (~quassel@31.220.5.250)
[22:23:14] *** Joins: vckt (~vkt____@103.136.95.244)
[22:23:37] <vckt> https://imgur.com/daLr7lY
[22:23:41] <vckt> hey, can someone help me with this?
[22:25:38] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Remote host closed the connection)
[22:26:15] *** Joins: eXistenZ (~biskit@2a10:8008:97cb:0:5d9a:5c3a:8dfb:5d1)
[22:28:09] *** Joins: DrNostril (~DrNostril@84.17.59.177)
[22:28:25] *** Joins: echoone (~echoone@2a02:8109:a1c0:5d05:a571:daab:d921:339e)
[22:29:09] <[itchyjunk]> What do you have to show to show a function is integrable in some interval? i can't remember
[22:29:40] *** Quits: rain3 (~rain3___@2a02:2f09:d003:5800:b41c:c37:1705:91bc) (Read error: Connection reset by peer)
[22:29:50] <[itchyjunk]> i guess you get it's cts in [c,b] ? do you also get it's diff in there?
[22:29:52] *** Joins: rain3 (~rain3___@2a02:2f09:d003:5800:b41c:c37:1705:91bc)
[22:30:06] <greenbagels> there's a difference between what you have to show and what's good enough
[22:30:56] *** Quits: slightlypandaish (~slightlyp@2001:8a0:5606:d100:ad9f:198e:fcf:92bc) (Quit: Client closed)
[22:31:20] *** Joins: slightlypandaish (~slightlyp@2001:8a0:5606:d100:ad9f:198e:fcf:92bc)
[22:31:20] <greenbagels> but yes continuous on a *closed* interval implies integrable
[22:32:29] *** Joins: vicfred (~vicfred@user/vicfred)
[22:33:31] <vckt> the definition i was given is that: I is the integral, u an upper sum and l is a lower sum : u - I < ɛ and I - l < ɛ for all positive ɛ
[22:34:51] <[itchyjunk]> hm that type of stuff looks scary
[22:34:54] *** Quits: rain3 (~rain3___@2a02:2f09:d003:5800:b41c:c37:1705:91bc) (Ping timeout: 260 seconds)
[22:35:05] <[itchyjunk]> i'd try to use nice theorems first then go to that as a last resort
[22:35:36] <[itchyjunk]> maybe if you have a integrable function [c,b] you can somehow extend that
[22:35:44] <[itchyjunk]> greenbagels, says you just need closed and cts
[22:36:02] <[itchyjunk]> you know its cts in closed [c,b] now you just need it to be on [a,b]
[22:36:09] *** Hash is now known as RitaDivaj
[22:36:14] <[itchyjunk]> anything lets you extend cts of a function?
[22:36:16] <greenbagels> closed and continuous is sufficient; it's not necessary
[22:36:23] <[itchyjunk]> oh
[22:36:28] <greenbagels> you can have uncountably many discontinuities if you want
[22:36:53] <[itchyjunk]> well, no harm checking if the sufficient is met or not
[22:36:57] <greenbagels> like the indicator fucntion of the cantor set or something
[22:37:05] <[itchyjunk]> but i am not sure if this is the right approach
[22:38:38] *** Quits: dld (~davidlowr@2620:6e:6000:2900:2184:de22:ee5e:5a79) (Ping timeout: 260 seconds)
[22:39:34] *** Joins: Crescendo (~Crescendo@user/crescendo)
[22:39:43] <greenbagels> https://users.math.msu.edu/users/schenke6/421/measurezero.pdf
[22:39:48] <[itchyjunk]> hmm surely there is a way to extend continuity?
[22:39:59] *** Quits: Turingtoast (~Tino@200116b860d973008cf1f8289f378c3a.dip.versatel-1u1.de) (Quit: My iMac has gone to sleep. ZZZzzz…)
[22:40:00] <[itchyjunk]> was his def related to measure theory?
[22:40:12] <[itchyjunk]> i was going by rieemann stuff
[22:40:35] *** Quits: red_owl (~red_owl@p5b2435fd.dip0.t-ipconnect.de) ()
[22:40:38] *** Joins: Maturion (~Maturion@p200300ede724c900b612ecf6a68c7ac9.dip0.t-ipconnect.de)
[22:40:46] *** Parts: dila (~dila@199.247.9.204) (thanks)
[22:41:38] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Ping timeout: 246 seconds)
[22:44:19] *** Quits: vckt (~vkt____@103.136.95.244) (Quit: Leaving)
[22:44:37] <[itchyjunk]> I don't understand the first definitoin there
[22:45:51] <[itchyjunk]> so there is finite many I's whose measure is < e and S subset I for all those I then S has measure 0 ?
[22:46:04] <[itchyjunk]> Why the requirement for finite such I's
[22:46:35] <[itchyjunk]> oh says coubtable or finite
[22:49:46] *** Joins: drobi (~drobi@bras-base-otwaon234vw-grc-01-142-112-128-170.dsl.bell.ca)
[22:50:54] *** Quits: vaporatorius (~vaporator@user/vaporatorius) (Ping timeout: 268 seconds)
[22:53:59] *** Quits: bluss (~bluss@user/bluss) (Ping timeout: 268 seconds)
[22:54:29] *** Joins: bluss (~bluss@user/bluss)
[22:54:40] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[22:56:14] *** Joins: qeed_ (~qeed@072-190-106-143.res.spectrum.com)
[22:57:22] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[22:57:26] *** RitaDivaj is now known as Hash
[22:57:38] *** Joins: Crescendo (~Crescendo@user/crescendo)
[22:58:28] *** Quits: qeed (~qeed@072-190-106-143.res.spectrum.com) (Ping timeout: 252 seconds)
[22:59:37] *** Joins: crm (~crm@70.120.0.94)
[23:01:02] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[23:01:21] *** Joins: NEYi (~NEYi@109.251.216.38)
[23:02:00] *** Joins: demirok (~bell@user/demirok)
[23:02:19] *** Quits: orthoplex64 (~crm@70.120.0.94) (Ping timeout: 252 seconds)
[23:02:19] *** Quits: msfninja (~kali@user/msfninja) (Ping timeout: 252 seconds)
[23:02:35] *** Joins: vaporatorius (~vaporator@1.red-176-84-45.dynamicip.rima-tde.net)
[23:02:35] *** Quits: vaporatorius (~vaporator@1.red-176-84-45.dynamicip.rima-tde.net) (Changing host)
[23:02:35] *** Joins: vaporatorius (~vaporator@user/vaporatorius)
[23:03:25] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 252 seconds)
[23:03:35] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[23:03:43] *** Joins: cheater (~Username@user/cheater)
[23:03:49] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[23:03:58] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 252 seconds)
[23:04:11] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[23:10:03] <isekaijin> [itchyjunk]: The reason why countability matters in the definition is this. You want to measure the “sizes” of subsets. And one reasonable property for such “sizes” is that, if you split a measurable subset into at most countably many measurable subsets, then the “size” of the original set is the sum of the “sizes” of the subsets.
[23:10:28] <isekaijin> On the other hand, if you split into uncountably many subsets, even measurable ones, then all bets are off.
[23:10:41] <isekaijin> For example, the interval [0,1] has length 1, but each individual point in it has length 0.
[23:12:13] *** Quits: kurfen (~kurfen@lfbn-ann-1-215-215.w86-200.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[23:12:40] *** Joins: kurfen (~kurfen@lfbn-ann-1-215-215.w86-200.abo.wanadoo.fr)
[23:13:08] *** Quits: xeno (~xeno@user/xeno) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:20:58] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[23:21:25] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[23:22:13] <[itchyjunk]> hmm
[23:22:16] <[itchyjunk]> makes sense
[23:22:59] <isekaijin> That's good.
[23:23:14] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 245 seconds)
[23:23:27] *** Joins: Crescendo (~Crescendo@user/crescendo)
[23:27:15] <isekaijin> One intuition that works if you are physically-minded is that, if you take a “finitely sized” thing and split it into countably many parts, then some of those parts will also be “finitely sized”. But if you split it into uncountably many parts, then most of them will in some sense be “infinitesimally sized”.
[23:27:35] *** Jmtrix- is now known as Jmtrix
[23:27:35] *** Quits: Jmtrix (~qed@2604:180:2:72d::497d) (Changing host)
[23:27:35] *** Joins: Jmtrix (~qed@user/jmtrix)
[23:28:08] <isekaijin> I find these intuitions useful, even if they are no replacement for actual proofs.
[23:29:13] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[23:29:33] *** Joins: alzgh (~alzgh@user/alzgh)
[23:29:56] *** Joins: KUrare_ (~KUrare@user/kurare)
[23:31:08] <munkis> what's a good place to look for statistics on human random selection of integers between 1 and 10?
[23:31:46] <isekaijin> That seems like a topic for psychologists to discuss.
[23:32:15] <Oli> 10!
[23:33:42] *** Quits: KUrare__ (~KUrare@user/kurare) (Ping timeout: 260 seconds)
[23:34:50] <Oli> I now wonder if you conveyed about selection between integers 1 or 10, or 2 to 9, or between 1 and 10 inclusive.
[23:36:39] <Oli> Might add any useful on the topic, I wonder if it is more likely for people to choose the last option offered, than others.
[23:36:44] *** Joins: msfninja (~kali@user/msfninja)
[23:36:48] <msfninja> join #crypto
[23:36:55] <msfninja> oops
[23:40:06] <joel135> You're still talking about this?
[23:41:02] <greenbagels> joel135: ?
[23:41:21] <joel135> isekaijin: by the way, i've been meaning to get your opinion on a thing: what di you think about cosheaves?
[23:41:34] *** Quits: oxide (~lambda@user/oxide) (Ping timeout: 245 seconds)
[23:42:28] <[itchyjunk]> so measure theory avoids adding infinitely small dx's of uncountable variety to get something finite by just not allowing that
[23:42:34] <joel135> greenbagels: oh sorry i glossed over the scrollback and i thought isekaijin was talking about intuitionism, but he just said intuition
[23:42:45] <[itchyjunk]> i guess that would give nices explanation for some stuff in analysis
[23:43:52] <greenbagels> [itchyjunk]: measure theory just attempts to come up with another notion of size that coincides with geometric intuition in its axioms
[23:45:39] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[23:49:01] <isekaijin> joel135: I cannot have an opinion on things that I do not know of. I was once interested in computing, but now I am primarily interested in geometry.
[23:49:36] <isekaijin> [itchyjunk]: In general, we avoid actual infinitesimals in analysis. Variants of analysis that explicitly deal with infinitesimals are considered “nonstandard”.
[23:49:41] *** Quits: eXistenZ (~biskit@2a10:8008:97cb:0:5d9a:5c3a:8dfb:5d1) (Quit: Leaving)
[23:50:10] <joel135> Ok, but that is also informative. As an outsider to algebraic geometry I don't know whether cosheaves are a standard topic.
[23:50:29] <isekaijin> [itchyjunk]: However, once you understand this stuff, you realize that analysts sometimes have to go out of their way to free their arguments from infinitesimals.
[23:50:49] <[itchyjunk]> hmm
[23:50:55] *** Quits: vqueiroz (uid340368@id-340368.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[23:51:33] <isekaijin> It is not a bad thing per se. It just mathematical tradition.
[23:51:39] <isekaijin> It is* just
[23:53:13] <[itchyjunk]> well, just seemed math had it all figured it out after cauchy and such
[23:53:19] <isekaijin> lol
[23:56:55] <joel135> This talk about uncountable unions got me thinking about the notion of "overt set". In a certain corner of computer science, they say that overt unions - not arbitrary unions! - of open sets are open.
[23:57:56] *** Quits: slightlypandaish (~slightlyp@2001:8a0:5606:d100:ad9f:198e:fcf:92bc) (Ping timeout: 256 seconds)
[23:58:13] *** Quits: emf (~emf@163.114.132.6) (Quit: emf)
[23:58:18] <isekaijin> Actually, on certain days, I am sympathetic to the arguments of intuitionists. Now, if they could only extend their sympathies back to ordinary mathematical needs...
[23:58:22] <joel135> overtness is supposedly dual to compactness, which is why this is of formal interest at least
[23:58:36] *** Joins: emf (~emf@2620:10d:c090:400::5:3586)
[23:59:22] <joel135> Yes, we could use some more sympathy in the world :)
[23:59:54] <isekaijin> As far as I can tell, many of these foundational debates are just arguing over how to express things.
