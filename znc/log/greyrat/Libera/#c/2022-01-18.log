[00:00:17] <ChoHag> Safety in case of signed multiplication overflow, assigning zeros is usually free.
[00:00:27] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[00:00:43] <nitrix> Nothing is ever free.
[00:00:50] <ChoHag> O(free).
[00:01:58] <sham1> I do wonder what owns the strings assigned to pNames
[00:04:13] <kurahaupo> ChoHag: malloc(n) is O(1) but calloc(n) is O(n)
[00:05:06] <kurahaupo> strictly those should be written Ο(1) and Ο(n) though it's hard to tell the difference in most fonts.
[00:07:30] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[00:08:59] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: bbl)
[00:12:31] <caze> A malloc call could trigger memory defragmentation.
[00:12:46] *** Quits: not_a_robot06 (~not_a_rob@2a01:4b00:8014:d900:c58c:23fa:f7fc:b169) (Quit: Leaving)
[00:13:17] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[00:13:27] <caze> So you could have malloc(1) take 1000 times as long to return as a subsequent call of malloc(1024).
[00:13:35] <kurahaupo> caze: Most malloc implementations do that on a rolling basis
[00:13:53] <sham1> They need to keep the stones rolling
[00:14:41] *** Joins: dsrt^ (~dsrt@wsip-98-188-242-61.mc.at.cox.net)
[00:15:52] <kurahaupo> caze: since objects can't be moved around, only the free space can become fragmented, and then only if consecutive chunks aren't amalgamated upon free
[00:17:15] <caze> kurahaupo: Objects can be moved around, there only has to be a mapping.
[00:17:36] <sham1> Yeah. You can go ahead and patch pointers
[00:18:05] <kurahaupo> Are you talking about asking the OS to tweak the MMU?
[00:19:27] <nitrix> I haven't seen a malloc implementation that relies on the MMU, they moslty seemed to use sbrk slabs last time I had a look.
[00:19:39] <nitrix> realloc on the other hand abuses it a lot.
[00:20:02] <kurahaupo> nitrix: realloc can take O(n).
[00:20:21] <kurahaupo> it's allowed to move the object
[00:20:49] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[00:21:33] <kurahaupo> The MMU is really only useful at the page level; most objects are a lot smaller than that, so if freeing them causes fragmentation, adjusting the MMU isn't going to help
[00:21:59] <sham1> sbrk or mmap
[00:22:08] <ChoHag> Think of tetris.
[00:22:34] <kurahaupo> caze: Where is this mapping kept?
[00:22:39] <ChoHag> If you can move this mapping here into that page there you can eliminate a left-over empty page.
[00:22:54] <caze> kurahaupo: In the cereal bus.
[00:23:25] *** Quits: jfsimon1981 (~jfsimon19@51.82.75.86.rev.sfr.net) (Ping timeout: 240 seconds)
[00:23:57] <nitrix> KellogsMmap()
[00:24:24] <ChoHag> The kernel is made of corn?
[00:25:14] <nitrix> I think it has penguins somewhere.
[00:26:37] <nitrix> https://cdna.pcpartpicker.com/static/forever/images/userbuild/147760.0e12ac1ba6c3e7bcf040dd7cc7b16a31.d42d0931bf630287e8fffe6d529f3190.1600.jpg
[00:26:41] <nitrix> ^ Embedded programming
[00:26:53] *** Joins: Kakurady (~nekoyasha@2607:f2c0:eac8:3297:b838:af46:b551:85b)
[00:28:31] *** Joins: Betal (~Betal@user/betal)
[00:29:39] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: Disconnecting)
[00:31:13] *** Joins: boB_K7IQ (~boB_K7IQ@183.sub-174-251-169.myvzw.com)
[00:31:21] *** Joins: Nutte35 (~Nutte@202.153.81.183)
[00:33:29] <sham1> That's very corny
[00:35:37] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[00:35:38] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[00:35:56] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (Read error: Connection reset by peer)
[00:36:07] *** Quits: boB_K7IQ (~boB_K7IQ@183.sub-174-251-169.myvzw.com) ()
[00:36:20] *** Quits: joast (~rick@cpe-98-146-112-4.natnow.res.rr.com) (Quit: Leaving.)
[00:38:24] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 250 seconds)
[00:40:04] *** Quits: Nutte35 (~Nutte@202.153.81.183) (Read error: Connection reset by peer)
[00:41:36] <zwr> I got a computer from the cereal box when I was a kid too
[00:42:30] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Client closed)
[00:43:09] <nitrix> Mines had AOL internet or Roller Coaster Tycoon.
[00:43:46] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[00:45:46] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[00:46:24] <pony> how do I call one variadic function from another, giving it the same variadic args?
[00:46:45] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[00:48:02] *** Quits: mahmutov (~mahmutov@37.155.9.41) (Ping timeout: 240 seconds)
[00:48:04] *** Joins: bkhl (~bkhl@user/bkhl)
[00:49:55] <zwr> you don't, pass the va_list structure
[00:51:07] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[00:52:13] *** Joins: kts (~kts@103.73.237.3)
[00:52:40] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[00:52:40] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[00:52:40] *** Joins: wroathe (~wroathe@user/wroathe)
[00:52:46] *** Joins: joast (~rick@cpe-98-146-112-4.natnow.res.rr.com)
[00:53:34] *** Quits: Alhazred (~Alhazred@s91904425.blix.com) (Ping timeout: 250 seconds)
[00:53:44] *** Joins: Torr (~Torr@user/torr)
[00:54:48] *** Joins: serbest (~ike@user/serbest)
[00:55:01] *** Quits: teut (~teut@2401:4900:1c68:6b85:81e5:34bc:8adc:b633) (Quit: Client closed)
[00:55:15] <pony> ahhhh
[00:55:16] <pony> thanks
[00:55:49] *** Quits: shadow_ (~shadow@lnsm3-montreal02-142-119-4-156.internet.virginmobile.ca) (Quit: shadow_)
[00:55:59] <nitrix> pony, This is also why there's a `v` in the printf/scanf family of functions.
[00:56:01] <pony> I mean you can't always do that, but
[00:56:03] <pony> might be the only way
[00:56:48] *** Quits: bkhl (~bkhl@user/bkhl) (Remote host closed the connection)
[00:57:00] <nitrix> (vprintf, vfprintf, vsprintf, vsnprintf, ...)
[00:57:07] <pony> I want to do it with exec*, but perhaps I should be working with arrays instead
[00:57:39] *** Joins: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net)
[00:57:40] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Quit: Leaving)
[00:57:41] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[00:58:06] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[00:59:10] <nitrix> Other than functions that take format strings, being variadic would almost fall into "trying to be too cute" with your code.
[00:59:23] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[00:59:33] <pony> all right
[01:00:32] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 240 seconds)
[01:01:00] *** Joins: oxfuxxx (~oxfuxxx@185.156.174.6)
[01:01:18] *** Joins: inlight (~inlight@157.35.72.43)
[01:01:18] *** Quits: inlight (~inlight@157.35.72.43) (Changing host)
[01:01:18] *** Joins: inlight (~inlight@user/inlight)
[01:02:01] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[01:02:30] <nitrix> The language lacks operations to work effectively with va_list, it complexifies ABIs, you lose type safety, so on.
[01:03:32] <pony> good point
[01:04:22] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[01:04:38] *** Quits: serbest (~ike@user/serbest) (Quit: Konversation terminated!)
[01:06:27] *** Joins: tforever (~Terabyte@85.103.107.143)
[01:08:31] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[01:08:41] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[01:09:43] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[01:09:56] *** Joins: bkhl (~bkhl@user/bkhl)
[01:10:00] <sham1> Some protocols which are stringly types (eugh) can work rather well with va_list
[01:12:58] <sham1> ,cc printf("%d", 'ä'); // I wonder...
[01:13:01] <candide> sham1: -28
[01:13:13] <sham1> Well then
[01:13:13] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Remote host closed the connection)
[01:13:19] <sham1> ,cc printf("%x", 'ä');
[01:13:22] <candide> sham1: ffffffe4
[01:13:39] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[01:14:22] <sham1> ,cc printf("%x", (unsigned)'ä');
[01:14:25] <candide> sham1: ffffffe4
[01:14:33] <sham1> I find it interesting that it's actually sign extended
[01:16:40] <fizzie> Conversion from a negative signed value to an unsigned type has to be.
[01:16:54] <sham1> Well even when it's an int
[01:17:07] *** Quits: bkhl (~bkhl@user/bkhl) (Remote host closed the connection)
[01:17:15] <sham1> ,cc printf("%x", 'ࠀ');
[01:17:17] <candide> sham1: [warning: multi-character character constant [-Wmultichar]] e0a080
[01:17:25] <sham1> Alright
[01:17:26] <fizzie> Giving a negative `int` value to %x is undefined.
[01:17:47] <sham1> It was also negative with %d
[01:17:56] <fizzie> Yes, that's what I mean. It's a negative value.
[01:18:07] <fizzie> ,cc printf("%d .. %d", CHAR_MIN, CHAR_MAX);
[01:18:10] <candide> fizzie: -128 .. 127
[01:18:51] <sham1> Ah, so even though it's an int, and 'ä' could clearly be represented as a positive, it just gets to become a negative number
[01:19:01] <sham1> Becuase it's in the range
[01:20:11] <fizzie> "The value of an integer character constant containing a single character that maps to a single-byte execution character is the numerical value of the representation of the mapped character interpreted as an integer." (C11 6.4.4.4p10.)
[01:20:25] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e9dc:9351:261d:7ec4)
[01:20:47] <sham1> But there's no way that maps to a single byte execution character at least with UTF-8
[01:21:58] <fizzie> I don't think "single-byte execution character" means "member of the extended character set whose multibyte representation consists only of a single byte".
[01:22:03] *** Quits: samir (~azureuser@user/samir) (Ping timeout: 256 seconds)
[01:23:23] <sham1> ,cc -std=c2x printf("%d", u8'ä');
[01:23:25] <candide> sham1: 228
[01:23:30] <sham1> ,cc -std=c2x printf("%x", u8'ä');
[01:23:32] <candide> sham1: e4
[01:23:37] <sham1> That's more what I expect
[01:23:40] <sham1> ,cc -std=c2x printf("%x", u8'ࠀ');
[01:23:42] <candide> sham1: error: character constant too long for its type
[01:24:00] *** Quits: zmt01 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[01:24:02] <sham1> oh wait
[01:24:22] <sham1> ,cc -std=c2x printf("%x", U'ࠀ');
[01:24:24] <candide> sham1: 800
[01:24:39] *** Quits: geli (~gelignite@55d4fbf8.access.ecotel.net) (Quit: Stay safe!)
[01:25:02] *** Quits: jan_ (~jan@aegl185.neoplus.adsl.tpnet.pl) (Ping timeout: 240 seconds)
[01:25:49] <sham1> Well at least I'm glad that u8'' -character literals give unsigned chars
[01:25:52] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[01:25:55] <fizzie> `u8` character constants should be only defined for the ASCII subset, so I don't theink u8'ä' needs to be anything specific.
[01:27:01] <sham1> Yeah, I'm reading from cppreference that "UTF-8 character constant. Such constant has type unsigned char and the value equal to ISO 10646 code point value of c-char, provided that the code point value is representable with a single UTF-8 code unit"
[01:27:01] *** Quits: derpadmin (~Anonymous@homebase.200013.net) (Ping timeout: 240 seconds)
[01:27:17] <sham1> So yeah, no luck with that either. Going to have to use U''-literals
[01:28:47] *** Quits: tforever (~Terabyte@85.103.107.143) (Quit: i gonna sleep or bang my head around code editor.)
[01:30:28] <sham1> Speaking of literals, does there actually happen to be a thing for printing for example U"foo" string literals, like char32_t[N] (well, char32_t * because functions) specifier
[01:30:31] <sham1> For printf
[01:31:11] <caze> char32_t
[01:31:16] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[01:31:22] <caze> wtf
[01:32:12] <sham1> Yeah. Storing a Unicode codepoint, usually
[01:32:27] *** Joins: imm__ (~imm_@user/imm/x-3405860)
[01:32:55] <sham1> But apparently not
[01:33:04] <sham1> There's only %s for char *, and %ls for wchar_t *
[01:33:13] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 256 seconds)
[01:33:57] <caze> Oh, that's why libraries exist.
[01:34:09] <caze> Too annoying to deal with it manually.
[01:34:14] <sham1> Slightly disappointing, makes printing arrays of codepoints harder. although it's not too bad
[01:34:54] <sham1> One just iterates until one finds U'\0' and for each character converts to whatever other encoding (read: UTF-8) and prints it
[01:35:12] *** Joins: samir (~azureuser@user/samir)
[01:35:48] <fizzie> <uchar.h> has `c32rtomb`, that's really the only standard library facility for it.
[01:35:56] <sham1> Locale-specific multibyte encoding. Or if Windows, wchar_t array
[01:37:45] *** Joins: zmt00 (~zmt00@user/zmt00)
[01:38:38] <sham1> Assuming unicode should be for the most part an okay importable assumption, so it's fine
[01:40:22] *** Quits: zwr (~zwr@2804:d45:b966:fb00:a05f:6b33:f679:bb49) (Ping timeout: 250 seconds)
[01:40:58] *** Joins: steve__ (~steve@ool-182c2b80.dyn.optonline.net)
[01:40:59] *** Joins: zwr (~zwr@2804:d45:b966:fb00:393b:a077:e5c1:3104)
[01:44:15] *** Joins: derpadmin (~Anonymous@homebase.200013.net)
[01:45:43] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[01:46:13] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[01:52:22] *** Joins: Alhazred (~Alhazred@86.106.74.37)
[01:52:29] *** Joins: bkhl (~bkhl@user/bkhl)
[01:53:16] *** Quits: pippijn (~pippijn@ra.xinutec.org) (Ping timeout: 245 seconds)
[01:53:25] *** Joins: seninha (~seninha@user/seninha)
[01:53:49] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[01:54:14] *** Joins: bindu (~bindu@user/bindu)
[01:55:21] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Client closed)
[01:55:32] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 240 seconds)
[01:56:47] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[01:57:50] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[01:58:54] *** Quits: Akuli (~Akuli@82-203-165-133.bb.dnainternet.fi) (Quit: Akuli)
[02:01:00] *** Joins: liba (~liba@user/liba)
[02:01:15] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[02:03:06] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[02:03:22] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[02:03:29] *** imm__ is now known as imm_
[02:03:36] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[02:03:51] *** Joins: pippijn (~pippijn@ra.xinutec.org)
[02:04:04] *** Quits: pippijn (~pippijn@ra.xinutec.org) (Client Quit)
[02:04:10] *** Quits: inlight (~inlight@user/inlight) (Remote host closed the connection)
[02:04:33] *** Quits: katsuragi (katsuragi@tilde.institute) (Ping timeout: 256 seconds)
[02:04:57] *** Joins: System_Error (~SystemErr@user/systemerror)
[02:05:02] *** Joins: pippijn (~pippijn@ra.xinutec.org)
[02:05:27] *** Joins: boB_K7IQ (~boB_K7IQ@12.129.159.198)
[02:10:05] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Read error: Connection reset by peer)
[02:11:24] *** Joins: Nutte35 (~Nutte@202.153.81.183)
[02:12:53] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[02:14:57] *** Quits: pnill_ (~pnill@ip170.ip-54-39-37.net) (Ping timeout: 240 seconds)
[02:16:01] *** Joins: Everything (~Everythin@46-133-77-215.mobile.vf-ua.net)
[02:16:06] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[02:16:06] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[02:16:06] *** Joins: wroathe (~wroathe@user/wroathe)
[02:17:25] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 256 seconds)
[02:17:41] *** Joins: Enitin (~Enitin@82.102.22.85)
[02:18:42] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[02:20:49] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 256 seconds)
[02:22:33] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[02:22:50] *** Quits: boB_K7IQ (~boB_K7IQ@12.129.159.198) (Ping timeout: 250 seconds)
[02:23:32] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[02:25:59] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e9dc:9351:261d:7ec4) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:27:02] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 240 seconds)
[02:28:13] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[02:29:47] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 2.8)
[02:29:57] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Ping timeout: 240 seconds)
[02:30:30] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[02:32:24] *** Joins: katsuragi (katsuragi@tilde.institute)
[02:33:42] *** Quits: pizdets (~pizdets@183.182.110.188) (Ping timeout: 250 seconds)
[02:33:45] *** Joins: pizdets_ (~pizdets@183.182.114.123)
[02:35:45] *** Joins: EdFletcher (~PKD@user/edfletcher)
[02:35:56] *** Quits: Richard_Cavell (uid165693@id-165693.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:39:54] *** Joins: pnbeast (~pnbeast@2601:140:4280:6ce0::1)
[02:40:43] *** Joins: ferdna (~ferdna@user/ferdna)
[02:41:40] *** Quits: chomwitt (~chomwitt@2a02:587:dc0b:200:12c3:7bff:fe6d:d374) (Remote host closed the connection)
[02:42:02] *** Quits: alch (~alch@151.82.42.94) (Ping timeout: 240 seconds)
[02:44:18] *** Joins: alch (~alch@151.82.71.111)
[02:46:41] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:25c4:f0c4:39d4:7801) (Quit: Quit)
[02:47:35] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[02:49:58] *** Joins: Viewday115 (~Viewday@user/viewday)
[02:50:02] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[02:52:02] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 240 seconds)
[02:52:02] *** Viewday115 is now known as Viewday11
[02:55:33] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[02:58:45] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[02:58:45] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[02:58:45] *** Joins: wroathe (~wroathe@user/wroathe)
[03:02:47] *** Joins: pnill (~pnill@ip170.ip-54-39-37.net)
[03:03:02] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[03:03:11] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[03:03:29] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[03:04:26] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 250 seconds)
[03:05:13] *** Quits: acerbic (~acerbic@cs-xdata-50-86-50-82.cspire.com) (Read error: Connection reset by peer)
[03:15:26] *** Joins: jfsimon1981 (~jfsimon19@218.96.128.77.rev.sfr.net)
[03:16:18] *** Joins: Richard_Cavell (uid165693@id-165693.ilkley.irccloud.com)
[03:17:13] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[03:19:48] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:20:40] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Client Quit)
[03:22:38] *** Joins: loganlee (~Thunderbi@user/loganlee)
[03:23:05] *** Quits: ju (~ju@user/ju) (Quit: ju)
[03:23:35] *** Quits: freep (~freepppp@62.1.174.38.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[03:28:25] *** Joins: Viewday119 (~Viewday@user/viewday)
[03:30:07] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[03:30:08] *** Viewday119 is now known as Viewday11
[03:32:17] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293) (Ping timeout: 240 seconds)
[03:34:12] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 276 seconds)
[03:39:33] *** Quits: Guest903 (~Murray@89.109-247-180.customer.lyse.net) (Remote host closed the connection)
[03:39:58] *** Joins: System_Error (~SystemErr@user/systemerror)
[03:40:43] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[03:40:53] *** Quits: adip (~adip@deo188.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[03:42:23] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[03:45:05] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[03:49:33] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:51:28] *** Joins: Viewday115 (~Viewday@user/viewday)
[03:52:32] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[03:53:05] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[03:53:05] *** Viewday115 is now known as Viewday11
[03:53:21] *** Joins: Enitin (~Enitin@82.102.22.84)
[03:56:36] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[03:56:53] *** Joins: warremkaw (~warremkaw@user/warremkaw)
[04:00:09] *** Joins: FlipFlop (~FlipFlop@user/fl1pfl0p)
[04:00:12] *** Quits: FlipFlop (~FlipFlop@user/fl1pfl0p) (Read error: Connection reset by peer)
[04:01:23] *** Joins: zmt01 (~zmt00@user/zmt00)
[04:02:37] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[04:04:37] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[04:05:02] *** Quits: xse (~xse@user/xse) (Ping timeout: 240 seconds)
[04:05:02] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[04:05:04] *** Quits: Hobbyboy (Hobbyboy@hobbyboy.co.uk) (Quit: The BNC has broken!)
[04:05:20] *** Joins: tempus_fol (~tempus@user/tempora)
[04:05:20] *** Joins: FLHerne_ (flh@flherne.uk)
[04:05:24] *** Joins: les_ (~whome@user/les)
[04:05:32] *** Quits: les (znc@user/les) (Ping timeout: 268 seconds)
[04:05:32] *** Quits: fizzie (irc@selene.zem.fi) (Ping timeout: 268 seconds)
[04:06:10] *** Quits: ikiryo (sid109660@user/ikiryo) (Ping timeout: 268 seconds)
[04:06:11] *** Quits: carrot98[m] (~carrot98m@2001:470:69fc:105::1:5fcc) (Ping timeout: 268 seconds)
[04:06:11] *** Quits: blakesmith[m] (~blakesmit@2001:470:69fc:105::1:4093) (Ping timeout: 268 seconds)
[04:06:11] *** Quits: randy408[m] (~randy408m@2001:470:69fc:105::2f5e) (Ping timeout: 268 seconds)
[04:06:11] *** Quits: Akawama[m] (~akawama@user/akawama) (Ping timeout: 268 seconds)
[04:06:11] *** Quits: atulu (~atulum]@2001:470:69fc:105::d50c) (Ping timeout: 268 seconds)
[04:06:11] *** Quits: dalz (~dalz@2001:470:69fc:105::2ea) (Ping timeout: 268 seconds)
[04:06:11] *** Quits: hussam (~hussam@user/hussam) (Ping timeout: 268 seconds)
[04:06:12] *** Quits: trn (jhj@sourcehut/user/trn) (Ping timeout: 268 seconds)
[04:06:12] *** Quits: tempora (~tempus@user/tempora) (Ping timeout: 268 seconds)
[04:06:19] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[04:06:23] *** Quits: user282069 (user@2a01:7e00::f03c:92ff:fe7f:456d) (Ping timeout: 252 seconds)
[04:06:38] *** Joins: ElementW_ (~tungsten@hoodie.elementw.net)
[04:06:43] *** Joins: vassili (~vt@osa.vbc.su)
[04:06:46] *** Quits: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4) (Ping timeout: 268 seconds)
[04:06:46] *** Quits: silkut[m] (~silkutmat@2001:470:69fc:105::1:6530) (Ping timeout: 268 seconds)
[04:06:46] *** Quits: Bazsalanszky[m] (~bazsalans@2001:470:69fc:105::6fe) (Ping timeout: 268 seconds)
[04:06:46] *** Quits: vt (~vt@osa.vbc.su) (Ping timeout: 268 seconds)
[04:06:46] *** Quits: archdark[m] (~ryonagana@2001:470:69fc:105::fd27) (Ping timeout: 268 seconds)
[04:06:47] *** Quits: FLHerne (flh@flherne.uk) (Ping timeout: 268 seconds)
[04:06:47] *** Quits: ElementW (~tungsten@hoodie.elementw.net) (Ping timeout: 268 seconds)
[04:06:47] *** Quits: krjst (~krjst@2604:a880:800:c1::16b:8001) (Ping timeout: 268 seconds)
[04:06:58] *** Joins: EdFletcher (~PKD@user/edfletcher)
[04:06:58] *** Quits: EdFletcher (~PKD@user/edfletcher) (Excess Flood)
[04:07:53] *** Joins: trn (jhj@sourcehut/user/trn)
[04:07:58] *** Joins: ikiryo (sid109660@user/ikiryo)
[04:08:55] *** Joins: krjst (~krjst@2604:a880:800:c1::16b:8001)
[04:08:59] *** Joins: carrot98[m] (~carrot98m@2001:470:69fc:105::1:5fcc)
[04:09:04] *** Joins: Hobbyboy (Hobbyboy@hobbyboy.co.uk)
[04:09:24] *** Joins: fizzie (irc@selene.zem.fi)
[04:09:27] *** Joins: ashafq_ (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[04:09:27] *** FLHerne_ is now known as FLHerne
[04:09:34] *** Quits: ashafq_ (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Remote host closed the connection)
[04:09:44] *** Joins: ashafq_ (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[04:09:51] *** Quits: ashafq_ (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Remote host closed the connection)
[04:10:02] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 240 seconds)
[04:10:21] *** Quits: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Ping timeout: 256 seconds)
[04:11:08] *** Joins: xse (~xse@user/xse)
[04:11:12] *** Joins: emomentum (~emomentum@c-71-236-47-182.hsd1.tn.comcast.net)
[04:12:12] *** Joins: dalz (~dalz@2001:470:69fc:105::2ea)
[04:12:33] *** Joins: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[04:17:52] *** Joins: hussam (~hussam@user/hussam)
[04:18:17] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[04:18:38] *** Joins: Viewday118 (~Viewday@user/viewday)
[04:19:45] *** Joins: Wulf (~Wulf@user/wulf)
[04:19:49] *** Quits: nyah (~nyah@94.6.71.219) (Quit: leaving)
[04:20:16] *** Quits: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it) (Ping timeout: 250 seconds)
[04:20:33] *** Quits: emomentum (~emomentum@c-71-236-47-182.hsd1.tn.comcast.net) (Read error: Connection reset by peer)
[04:20:57] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[04:20:57] *** Viewday118 is now known as Viewday11
[04:22:02] *** Quits: Burgundy (~yomon@82.76.72.88) (Ping timeout: 240 seconds)
[04:22:17] *** Joins: Akawama[m] (~akawama@user/akawama)
[04:22:38] *** Joins: atulu (~atulum]@2001:470:69fc:105::d50c)
[04:22:39] *** Joins: blakesmith[m] (~blakesmit@2001:470:69fc:105::1:4093)
[04:22:53] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:22:53] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:22:53] *** Joins: wroathe (~wroathe@user/wroathe)
[04:23:56] *** Joins: Guest84 (~Guest84@c-71-236-47-182.hsd1.tn.comcast.net)
[04:24:47] *** Joins: Bazsalanszky[m] (~bazsalans@2001:470:69fc:105::6fe)
[04:25:05] *** Joins: EdFletcher (~PKD@user/edfletcher)
[04:25:16] *** Joins: silkut[m] (~silkutmat@2001:470:69fc:105::1:6530)
[04:25:38] *** Joins: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4)
[04:26:01] *** Joins: randy408[m] (~randy408m@2001:470:69fc:105::2f5e)
[04:26:02] *** Quits: xse (~xse@user/xse) (Ping timeout: 240 seconds)
[04:26:31] *** Joins: archdark[m] (~ryonagana@2001:470:69fc:105::fd27)
[04:30:14] *** Quits: reset (~reset@user/reset) (Quit: reset)
[04:31:51] *** Joins: xse (~xse@user/xse)
[04:34:15] *** Joins: pulse (~pulse@user/pulse)
[04:39:25] *** Quits: JanC (~janc@user/janc) (Ping timeout: 240 seconds)
[04:42:21] *** Joins: NovumDXW (~NovumDXW@2409:8a28:3610:29b0:74d8:d16b:92b3:8d89)
[04:43:37] *** Joins: JanC (~janc@user/janc)
[04:44:05] *** Joins: lunix00 (~lunix00@2804:14c:6321:900d:453d:d51a:32ef:ac82)
[04:44:36] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[04:45:33] *** Quits: wroathe (~wroathe@user/wroathe) (Read error: Connection reset by peer)
[04:47:01] *** Quits: justJustache (~justache@user/justache) (Remote host closed the connection)
[04:47:05] *** Quits: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Remote host closed the connection)
[04:47:07] *** Quits: CalimeroTeknik (~calimero@user/calimeroteknik) (Quit: バイバイ)
[04:47:13] *** Joins: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[04:47:41] *** Joins: justJustache (~justache@user/justache)
[04:48:01] *** Quits: kts (~kts@103.73.237.3) (Quit: Konversation terminated!)
[04:48:41] *** Joins: CalimeroTeknik (~calimero@185.13.36.50)
[04:49:07] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[04:49:34] *** Joins: kish` (~aqua@user/aqua)
[04:49:52] *** Joins: Viewday118 (~Viewday@user/viewday)
[04:50:29] *** Joins: user282069 (user@2a01:7e00::f03c:92ff:fe7f:456d)
[04:50:46] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:50:46] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:50:46] *** Joins: wroathe (~wroathe@user/wroathe)
[04:51:43] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[04:51:44] *** Viewday118 is now known as Viewday11
[04:52:06] *** Quits: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Read error: Connection reset by peer)
[04:52:28] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[04:53:33] *** Joins: pranja (~pranja@58.240.26.203)
[04:54:05] *** Quits: pranja (~pranja@58.240.26.203) (Client Quit)
[04:55:02] *** Joins: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[05:05:45] *** Guest84 is now known as asdfsalad
[05:12:21] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[05:14:26] *** cross_ is now known as cross
[05:16:12] *** Quits: malloy (~jimery@113.116.52.211) (Ping timeout: 250 seconds)
[05:18:13] *** Joins: malloy (~jimery@113.116.52.211)
[05:20:00] *** Quits: asdfsalad (~Guest84@c-71-236-47-182.hsd1.tn.comcast.net) (Quit: Ping timeout (120 seconds))
[05:20:13] *** Quits: haniaF_ (~haniaF@79.191.101.105.ipv4.supernova.orange.pl) (Ping timeout: 240 seconds)
[05:21:07] *** Joins: haniaF (~haniaF@83.24.207.85.ipv4.supernova.orange.pl)
[05:22:10] *** Joins: Guest84 (~Guest84@c-71-236-47-182.hsd1.tn.comcast.net)
[05:24:13] *** Quits: orthoplex64 (~crm@70.120.0.94) (Remote host closed the connection)
[05:24:38] *** Joins: orthoplex64 (~crm@70.120.0.94)
[05:25:30] *** Joins: frost (~frost@user/frost)
[05:26:02] *** Joins: Viewday112 (~Viewday@user/viewday)
[05:26:03] *** Quits: Richard_Cavell (uid165693@id-165693.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[05:26:58] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:28:04] *** Quits: warremkaw (~warremkaw@user/warremkaw) (Remote host closed the connection)
[05:28:10] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 268 seconds)
[05:28:10] *** Viewday112 is now known as Viewday11
[05:32:05] *** Joins: sonny (~sonny@bras-base-london1483w-grc-28-70-48-35-173.dsl.bell.ca)
[05:32:40] *** Quits: Torr (~Torr@user/torr) ()
[05:34:19] *** Quits: NovumDXW (~NovumDXW@2409:8a28:3610:29b0:74d8:d16b:92b3:8d89) (Quit: Leaving)
[05:35:06] *** Quits: r1d2 (~tom@2e407e8b.skybroadband.com) (Remote host closed the connection)
[05:35:24] *** Joins: r1d2 (~tom@2e407e8b.skybroadband.com)
[05:36:18] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[05:36:31] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[05:37:43] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[05:38:14] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[05:39:32] *** Joins: echoSMILE (uid504326@user/echosmile)
[05:39:41] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[05:40:44] *** Joins: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it)
[05:41:25] *** Quits: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net) (Ping timeout: 240 seconds)
[05:41:28] *** Parts: samir (~azureuser@user/samir) (WeeChat 2.8)
[05:43:18] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[05:47:32] *** Quits: sonny (~sonny@bras-base-london1483w-grc-28-70-48-35-173.dsl.bell.ca) (Ping timeout: 240 seconds)
[05:50:29] *** Quits: ornxka (~ornxka@user/ornxka) (Ping timeout: 256 seconds)
[05:51:37] *** Joins: Viewday117 (~Viewday@user/viewday)
[05:53:14] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[05:53:15] *** Viewday117 is now known as Viewday11
[05:53:17] *** Joins: ornxka (~ornxka@user/ornxka)
[05:53:22] *** Joins: X-Scale (~ARM@218.92.108.93.rev.vodafone.pt)
[05:54:50] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[05:55:20] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[05:56:43] *** Quits: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Ping timeout: 256 seconds)
[05:59:40] *** Joins: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[05:59:56] *** Joins: BobTheTomato (~paul@107-190-110-80.cpe.teksavvy.com)
[06:00:37] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 240 seconds)
[06:01:18] *** Joins: Viewday113 (~Viewday@user/viewday)
[06:01:21] *** Quits: ornxka (~ornxka@user/ornxka) (Remote host closed the connection)
[06:02:46] *** Joins: ornxka (~ornxka@user/ornxka)
[06:02:53] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[06:02:54] *** Viewday113 is now known as Viewday11
[06:04:32] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[06:05:55] *** supernov1h is now known as supernovah
[06:07:54] *** Joins: frost (~frost@user/frost)
[06:09:48] *** Quits: r1d2 (~tom@2e407e8b.skybroadband.com) (Quit: r1d2)
[06:15:58] *** Quits: omegatron (~some@p5484973e.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[06:16:32] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 240 seconds)
[06:18:52] *** Joins: Viewday119 (~Viewday@user/viewday)
[06:20:29] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[06:20:29] *** Viewday119 is now known as Viewday11
[06:28:58] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 250 seconds)
[06:30:53] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[06:33:02] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 240 seconds)
[06:33:46] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[06:37:21] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[06:42:02] *** Quits: Nutte35 (~Nutte@202.153.81.183) (Ping timeout: 240 seconds)
[06:42:21] *** Joins: fe23 (~fe23@2409:8a34:464:4990:41ed:c000:58c1:8c29)
[06:42:50] *** Quits: alch (~alch@151.82.71.111) (Ping timeout: 250 seconds)
[06:44:38] <pony> is this valid? int a[10]; int *end = a + 10; for (int *p = a; p < end; p++) { ... }
[06:44:44] *** Joins: alch (~alch@mi-18-35-184.service.infuturo.it)
[06:44:58] <merced> no
[06:45:04] *** Quits: Everything (~Everythin@46-133-77-215.mobile.vf-ua.net) (Quit: leaving)
[06:45:22] <merced> if anything you wanna do (sizeof(int)*10)
[06:45:39] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[06:46:26] <pony> I thought 1 past the end was ok, I'm unsure about the < though
[06:46:55] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[06:47:22] <merced> 9\iirc def not
[06:49:59] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[06:51:03] *** Joins: Viewday117 (~Viewday@user/viewday)
[06:51:25] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[06:51:36] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[06:51:36] *** Viewday117 is now known as Viewday11
[06:52:32] *** Quits: steve__ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 240 seconds)
[06:52:34] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:53:58] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[06:55:38] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[06:56:38] *** Joins: kurahaupo (~kurahaupo@pa49-197-21-150.pa.qld.optusnet.com.au)
[06:57:32] *** Quits: raym (~raym@user/raym) (Ping timeout: 240 seconds)
[06:58:52] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 250 seconds)
[06:59:36] *** Joins: raym (~raym@user/raym)
[07:01:02] *** Quits: kurahaupo (~kurahaupo@pa49-197-21-150.pa.qld.optusnet.com.au) (Ping timeout: 240 seconds)
[07:01:47] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[07:03:47] *** Quits: Guest84 (~Guest84@c-71-236-47-182.hsd1.tn.comcast.net) (Quit: Connection closed)
[07:06:42] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[07:11:00] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Ping timeout: 250 seconds)
[07:12:41] <ChoHag> pony: There's nothing wrong with that. It's a very common idiom.
[07:13:09] <pony> ahh, thanks
[07:16:12] *** Joins: alex11 (~alex11@user/alex11)
[07:20:48] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[07:23:08] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[07:23:17] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[07:25:22] *** Joins: Viewday110 (~Viewday@user/viewday)
[07:27:33] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[07:27:34] *** Viewday110 is now known as Viewday11
[07:32:59] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Quit: Leaving)
[07:34:52] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[07:35:19] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:33] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:46] *** Joins: vysn (~vysn@user/vysn)
[07:37:17] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[07:37:42] *** Joins: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net)
[07:38:45] *** Joins: EdFletcher (~PKD@user/edfletcher)
[07:49:30] <nitrix> pony, It's fine. You might also be interested in #define ARRAY_COUNT(arr) (sizeof (arr) / sizeof (arr)[0])
[07:49:50] <pony> *nod*
[07:50:01] <nitrix> pony, Lets you do for (size_t i = 0; i < ARRAY_COUNT(a); i++) { ... } and then work with a[i] naturally.
[07:51:32] *** Joins: Viewday119 (~Viewday@user/viewday)
[07:52:10] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 250 seconds)
[07:52:14] <pony> cool
[07:52:15] <pony> thx
[07:52:17] <nitrix> I don't have many arguments to justify it though. Perhaps it's simpler when refactoring the type of `a` because you don't have to update the type of the intermediary pointers, I don't know.
[07:53:08] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[07:53:09] *** Viewday119 is now known as Viewday11
[07:54:15] *** Joins: sonny (~sonny@bras-base-london1483w-grc-28-70-48-35-173.dsl.bell.ca)
[07:55:03] *** Quits: smeso (~smeso@user/smeso) (Quit: smeso)
[07:57:25] *** Quits: Chpy0 (~chpy@30-8-178-69.static.gci.net) (Ping timeout: 256 seconds)
[07:58:42] *** Joins: hinata (~hinata@2409:4042:2d90:eac6:2ce2:7dcb:b1d1:d84b)
[08:01:23] *** Joins: smeso (~smeso@user/smeso)
[08:01:40] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[08:01:49] *** Quits: dan_pena (~dan_pena@86.228.71.37.rev.sfr.net) (Quit: Lost terminal)
[08:01:49] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[08:03:57] *** Quits: nicode (~nic@2607:f2c0:946d:3800:5978:3a37:ee84:d8cb) (Ping timeout: 240 seconds)
[08:04:02] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[08:04:57] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Ping timeout: 240 seconds)
[08:05:02] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 240 seconds)
[08:05:17] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[08:06:56] *** Quits: Figworm (FiggyWitIt@user/figworm) (Remote host closed the connection)
[08:07:15] *** Quits: hinata (~hinata@2409:4042:2d90:eac6:2ce2:7dcb:b1d1:d84b) (Quit: Leaving)
[08:08:07] *** Joins: Figworm (FiggyWitIt@user/figworm)
[08:09:07] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-1-225.hsd1.wa.comcast.net)
[08:15:05] <caze> pony: end there is misnamed, as it is past the end.
[08:15:20] <pony> this occured to me, yeah ;p
[08:15:49] <caze> pony: A bit more accurate is int a[10]; int *end = a + 9; for (int *p = a; p <= end; p++) { ... }
[08:15:52] <pony> what would be a good name?
[08:16:09] <pony> true
[08:19:01] *** Joins: Viewday118 (~Viewday@user/viewday)
[08:19:03] *** Joins: hinata (~hinata@2409:4042:2d90:eac6:2ce2:7dcb:b1d1:d84b)
[08:19:38] *** Joins: GIR0001 (~GIR@64.145.93.44)
[08:20:49] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[08:20:50] *** Viewday118 is now known as Viewday11
[08:27:02] *** Quits: hinata (~hinata@2409:4042:2d90:eac6:2ce2:7dcb:b1d1:d84b) (Ping timeout: 240 seconds)
[08:28:24] <ChoHag> b.
[08:29:33] <ChoHag> Or simply a+10 or ARRAY_COUNT(a) directly in the loop clause; the compiler will likely end up with the same result anyway.
[08:30:02] <Kerr> an API I'm working with wants a pointer to a float. I don't need to change the float at runtime, so I'm thinking I'd like to pass something like &(0.0f) (pointer to somewhere in memory containing 0.0f), and I'd like to do this without adding a variable somewhere. any suggestions?
[08:30:32] <dave0> Kerr: compound literal.. &(float[]){0.0f}
[08:30:42] *** Quits: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net) (Ping timeout: 268 seconds)
[08:30:51] <caze> Kerr: Do you know why it needs the pointer?
[08:31:06] <ChoHag> I suggest adding a variable somewhere.
[08:31:22] <dave0> oops no brackets   &(float){0.0f}
[08:31:27] <Kerr> It's for a priority in a queue, so that I might change the priority later, which I won't
[08:31:54] <Kerr> The function won't modify the location pointed to
[08:32:02] <dave0> Kerr: is the float copied, or does it save the pointer?
[08:32:03] <ChoHag> You still need a location.
[08:32:09] *** Quits: oxfuxxx (~oxfuxxx@185.156.174.6) (Ping timeout: 256 seconds)
[08:32:10] <ChoHag> Either allocate it on the heap or declare it on the stack.
[08:32:24] <caze> Kerr: You could just make a new block around the call.
[08:32:43] <Kerr> dave0, doesn't work
[08:32:50] <caze> And declare the float at the beginning of that block.
[08:33:32] <dave0> ,cc void foo(float *f) { printf("float is %f ", *f); } foo(&(float){3.14159f});
[08:33:35] <candide> dave0: float is 3.141590
[08:33:41] <dave0> works for the robot
[08:34:43] *** Quits: puke (~puke@user/puke) (Remote host closed the connection)
[08:36:32] <Kerr> I get "error: taking address of rvalue"
[08:37:09] <Kerr> ChoHag is probably right, but I'm still curious if this will be something I can do
[08:37:32] <caze> What C standard are you using?
[08:37:42] *** Quits: malloy (~jimery@113.116.52.211) (Ping timeout: 250 seconds)
[08:37:43] <ChoHag> It can't. You need to put a pointer somewhere and then call a function which looks at that somewhere for the address in memory to write its float data to.
[08:37:57] <ChoHag> You need to have an actual memory address to pass to the function.
[08:39:16] *** Joins: kurahaupo (~kurahaupo@pa49-197-21-150.pa.qld.optusnet.com.au)
[08:39:47] *** Joins: malloy (~jimery@113.116.52.211)
[08:42:42] <caze> ChoHag: That is what a compound literal provides, assuming he is using a version of C that has them.
[08:48:31] <dave0> Kerr: if compound literals don't work you don't have much choice but to use a variable... as long as nothing ever tries to write through the pointer, a   static float temp = 0.0f; foo(&temp);   should be safe
[08:49:18] <caze> Kerr: Are you sure you're using C?
[08:50:01] *** Joins: Viewday111 (~Viewday@user/viewday)
[08:50:58] <NRK[m]> is the function taking `const` pointer or ?
[08:51:39] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[08:51:39] *** Viewday111 is now known as Viewday11
[08:52:40] *** Joins: nostar (~nostar@2600:1007:b104:b925:7ab7:d672:39f:4b80)
[08:52:42] <dave0> i considered const, but he already said he wont change the value, and if it's /not/ a pointer to const, it would fail to compile
[08:53:17] <caze> wut
[08:54:17] *** Quits: Kit (~NotApplic@2603-6010-a141-6fa3-0000-db65-a0b3-920d.res6.spectrum.com) (Ping timeout: 240 seconds)
[08:54:33] <caze> Kerr: Make a testcase.
[08:55:00] *** Quits: kit-ten (~u0_a391@2603-6010-a141-6fa3-950d-0150-5311-7e6b.res6.spectrum.com) (Ping timeout: 250 seconds)
[08:55:03] <dave0> caze: you asking me? i did consider   static const float temp = 0.0f;    but if it's    foo(float *p);    then foo(&temp); would fail to compile, whereas what i originally wrote will work in either case
[08:55:50] *** Joins: NotApplicable (~NotApplic@2603-6010-a141-6fa3-0000-db65-a0b3-920d.res6.spectrum.com)
[08:56:14] *** Joins: kit-ten (~u0_a391@2603-6010-a141-6fa3-950d-0150-5311-7e6b.res6.spectrum.com)
[08:56:19] <NRK[m]> if the function is not taking a `const` pointer then i assume it's intending to do a write. and you definitely need a variable for that.
[08:56:44] <dave0> NRK[m]: Kerr already said it will not write
[08:57:08] <NRK[m]> then why is the parameter not `const` !!
[08:57:10] <caze> You need an *object*. And nobody has suggested a solution that does not involve a float object.
[08:59:26] *** Joins: nitrix_ (~nitrix@user/nitrix)
[08:59:41] <dave0> did i have a stroke? he wants a pointer to a float to use some API. how does    static float temp = 0.0f; foo(&f);    not satisfy his question?
[08:59:56] <dave0> sorry   foo(&temp);
[09:00:20] <caze> I suspect he's not using C.
[09:00:23] *** nitrix is now known as Guest4025
[09:00:29] *** Quits: Guest4025 (~nitrix@user/nitrix) (Ping timeout: 256 seconds)
[09:00:36] <caze> Possibly he's using C89.
[09:01:04] *** nitrix_ is now known as nitrix
[09:03:17] *** Parts: sonny (~sonny@bras-base-london1483w-grc-28-70-48-35-173.dsl.bell.ca) (Closing Window)
[09:04:10] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[09:04:15] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[09:04:22] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:04:25] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[09:04:36] *** Joins: malina (~malina@user/malina)
[09:06:28] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[09:07:31] <NRK[m]> C89 != C; /* hmm, okay... */
[09:08:04] <caze> NRK[m]: I did not say that.
[09:08:06] <ChoHag> C is a set of which C89 is a member.
[09:08:26] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 250 seconds)
[09:08:32] <NRK[m]> caze: well, the two sentences back to back made it sound like it.
[09:08:36] <caze> Technically, C89 is cancelled by C99, which is cancelled by C11, which is cancelled by C18.
[09:11:23] <NRK[m]> Technically, it's C90
[09:11:51] <dave0> this whole thread is making me angry very angry
[09:12:35] <ChoHag> Don't read it?
[09:12:47] <caze> What thread?
[09:12:48] <Kerr> Not as angry as me when I noticed my ide is calling g++. Sorry for the headache for everyone
[09:13:05] <NRK[m]> ChoHag: wise words...
[09:13:13] <Kerr> caze is right, it's one of those c vs c++ differences why it didn't work
[09:13:46] *** Joins: nicholaus04 (~nicholaus@2607:fb90:e558:997e:112:92fe:0:7ca)
[09:13:48] <pony> bump
[09:14:13] *** Joins: Viewday113 (~Viewday@user/viewday)
[09:14:39] <NRK[m]> pony: please do not necrobump. locking the thread. -- moderator
[09:14:59] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[09:14:59] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[09:14:59] *** Joins: wroathe (~wroathe@user/wroathe)
[09:16:21] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[09:16:22] *** Viewday113 is now known as Viewday11
[09:17:41] <dave0> caze has an interesting skill that he can determine if someone is using a c++ compiler from the error messages... i cannot do this :-/
[09:18:02] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[09:18:40] <dave0> [16:06:11] <Kerr> I get "error: taking address of rvalue" [16:07:11] <caze> What C standard are you using?       <--- i think here is where it happened
[09:19:06] <NRK[m]> ever spent mins debugging why your shit doesn't work. only to realise you didnt put `.0` at the end of your constant making the calculation take place in int instead of floating-point?
[09:19:10] *** Quits: echoSMILE (uid504326@user/echosmile) (Quit: Connection closed for inactivity)
[09:19:32] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[09:21:27] *** Quits: GIR0001 (~GIR@64.145.93.44) (Quit: Leaving)
[09:21:46] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[09:22:22] *** Quits: kurahaupo (~kurahaupo@pa49-197-21-150.pa.qld.optusnet.com.au) (Read error: Connection reset by peer)
[09:24:54] *** Joins: GIR0001 (~GIR@64.145.93.44)
[09:25:16] *** Joins: Viewday117 (~Viewday@user/viewday)
[09:27:07] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[09:27:08] *** Viewday117 is now known as Viewday11
[09:28:17] *** Joins: nathanael (~nathanael@user/nathanael)
[09:29:04] *** Joins: Burgundy (~NA@86.121.143.206)
[09:29:48] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[09:36:03] *** Quits: soapsudsxx (~soapsudsx@141.193.188.140) (Remote host closed the connection)
[09:37:18] *** Quits: Burgundy (~NA@86.121.143.206) (Ping timeout: 268 seconds)
[09:37:24] *** Joins: jan_ (~jan@aegl185.neoplus.adsl.tpnet.pl)
[09:38:19] <sham1> NRK[m]: it is rather annoying
[09:39:20] *** Joins: Jong (~Jong@2620:10d:c090:400::5:44d9)
[09:41:22] <NRK[m]> 5mins of my precious life lost. `double x = some_uint / 255;`
[09:46:08] <apotheon> sham1: Your user name makes me think of ShamWow.
[09:49:11] <nitrix> A lot of things in life are about fumbling around and figuring things out. A lifespan is long enough to accomplish incredible things, it's a bit pretentious to whine about few minutes wasted here and there.
[09:50:30] <NRK[m]> it was a joke :P
[09:51:03] <NRK[m]> it was of course a good experience, because now i have learnt my lesson.
[09:51:11] <NRK[m]> "never use floating point"
[09:52:05] <liba> ,cc double x = 11 / 255;
[09:52:07] <candide> liba: no output: x = 0
[09:52:24] *** Joins: Viewday115 (~Viewday@user/viewday)
[09:52:59] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[09:52:59] *** Viewday115 is now known as Viewday11
[09:53:14] <NRK[m]> ,cc double x = 11 / 255f;
[09:53:15] <candide> NRK[m]: error: invalid suffix "f" on integer constant
[09:53:20] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[09:53:33] <NRK[m]> ,cc double x = 11 / 255.0f;
[09:53:35] <candide> NRK[m]: no output: x = 0.043137256056070328
[09:53:59] *** Parts: xse (~xse@user/xse) ()
[09:54:09] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 256 seconds)
[09:56:07] * liba thumbs up
[09:56:27] <sham1> apotheon: never heard that one before, thanks
[09:58:21] *** Joins: neocron (~NeoCron@p200300c4cf1b4400f695d81d4d068b5c.dip0.t-ipconnect.de)
[09:58:59] <jan_> ptr = malloc(x * sizeof(some_data_type)) - if I will acess nth element using ptr[n] and if n * sizeof(some_data_type) is not multiple of 16 (because SIMD like you said yesterday) then that means I'm acessing unaligned address and the operation would be faster if every element of my array was aligned to 16 bytes?
[09:59:00] *** Quits: tusko (~yeurt@copyfree/advocate/tusko) (Ping timeout: 276 seconds)
[10:00:32] *** Quits: Doraemon (~NeoCron@p200300c4cf146c0091a78f8614b30205.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[10:00:42] *** Joins: Viewday118 (~Viewday@user/viewday)
[10:00:54] *** Joins: tusko (~yeurt@copyfree/advocate/tusko)
[10:01:17] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[10:01:22] <apotheon> sham1: not sure whether that was sarcastic, but you're welcome
[10:01:53] <sham1> It was obviously sarcastic
[10:02:20] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[10:02:20] *** Viewday118 is now known as Viewday11
[10:04:17] <jan_> and is that also true with structures? the most efficient data layout in terms of speed would be if every structure member was aligned to 16 bytes?
[10:04:42] *** Joins: puke (~puke@user/puke)
[10:05:47] <dave0> jan_: i don't really know, there's lots of factors in play... if you are using simd variables in your some_data_type then things will be correctly aligned
[10:05:49] <Wulf> jan_: you can use ptr = malloc(x * sizeof *ptr)
[10:07:44] <dave0> ,cc #include <emmintrin.h> typedef struct { __m128i x; } some_data_type; printf("%d ", (int)__alignof(some_data_type));
[10:07:46] <candide> dave0: 16
[10:08:08] *** Quits: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it) (Ping timeout: 268 seconds)
[10:08:20] <dave0> that some_data_type will be correctly aligned to 16 bytes, which seems to be what you want
[10:08:23] <Wulf> jan_: there is no need to align each char or short to 16 bytes. Trust that your compiler will do the right thing. But you should make sure that you don't waste too much memory by ordering your struct members properly.
[10:08:59] <NRK[m]> i don't think compiler can optimize data layout
[10:09:51] <NRK[m]> for example it can't turn an array of structure into a structure of array.
[10:10:04] <Wulf> NRK[m]: not the order of struct members, but the padding/alignment.
[10:10:11] <NRK[m]> would violate C standard.
[10:13:19] <sham1> It'd be neat if that was an attribute
[10:13:31] <sham1> __attribute__((reorder_everything))
[10:13:43] <sham1> Or to use the C2023 attribute syntax, [[reorder_everything]]
[10:17:26] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[10:19:21] *** Joins: Viewday117 (~Viewday@user/viewday)
[10:19:25] *** Joins: Goreng (~Goreng@202.138.250.54)
[10:19:39] <jan_> but you said yeasterday that my structure needs to be alocated as multiple of 16 e.g. MyStruct *ptr = malloc(sizeof *ptr + size_of_array_or_some_struct); return ptr + 1; so return ptr + 1 is problematic or is that completely fine?
[10:20:26] *** Quits: Goreng (~Goreng@202.138.250.54) (Client Quit)
[10:20:40] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[10:21:31] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[10:21:32] *** Viewday117 is now known as Viewday11
[10:25:58] <sham1> It doesn't need to be
[10:26:07] <sham1> It just needs to be max_align_t aligned
[10:28:02] <Wulf> jan_: using + like this looks very wrong.
[10:28:03] *** Quits: nostar (~nostar@2600:1007:b104:b925:7ab7:d672:39f:4b80) (Read error: Connection reset by peer)
[10:28:14] <Wulf> jan_: I mean inside the malloc call
[10:31:55] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[10:36:43] *** Joins: fcc977 (~kaph@151.19.243.144)
[10:40:53] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[10:40:53] *** Quits: alch (~alch@mi-18-35-184.service.infuturo.it) (Read error: Connection reset by peer)
[10:41:07] *** Joins: almaember (~user@1F2EA950.dsl.pool.telekom.hu)
[10:41:50] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Quit: Leaving)
[10:41:55] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[10:43:10] *** Joins: freep (~freepppp@62.1.35.210.dsl.dyn.forthnet.gr)
[10:45:05] *** Joins: alch (~alch@151.82.57.50)
[10:45:30] *** Quits: fcc977 (~kaph@151.19.243.144) (Remote host closed the connection)
[10:45:50] *** Joins: fcc977 (~kaph@151.19.243.144)
[10:47:35] *** Joins: MajorBiscuit (~MajorBisc@c-001-025-054.client.tudelft.eduvpn.nl)
[10:50:40] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[10:52:50] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[10:53:05] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[10:54:23] *** Quits: GIR0001 (~GIR@64.145.93.44) (Ping timeout: 256 seconds)
[10:57:03] *** Quits: foul_owl (~kerry@94.140.8.107) (Ping timeout: 256 seconds)
[10:57:17] *** Quits: Jong (~Jong@2620:10d:c090:400::5:44d9) (Ping timeout: 240 seconds)
[10:58:53] *** Joins: eddybilley (~freddieti@217.119.232.174)
[11:02:33] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[11:05:00] *** Quits: liba (~liba@user/liba) (Ping timeout: 250 seconds)
[11:09:35] *** Joins: foul_owl (~kerry@97-126-11-68.tukw.qwest.net)
[11:09:42] *** Joins: GIR0001 (~GIR@64.145.93.51)
[11:12:46] <apotheon> sham1: You're welcome anyway.
[11:12:49] *** Joins: slidercrank (~slidercra@user/slidercrank)
[11:14:22] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[11:15:42] *** Joins: mrig (~mrig@user/mrig)
[11:16:35] *** Quits: jan_ (~jan@aegl185.neoplus.adsl.tpnet.pl) (Ping timeout: 268 seconds)
[11:21:37] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 240 seconds)
[11:25:56] *** Quits: fcc977 (~kaph@151.19.243.144) (Read error: Connection reset by peer)
[11:26:11] <sham1> Thanks
[11:28:00] *** Joins: Vrganj (~vrganj@93-138-56-207.adsl.net.t-com.hr)
[11:28:03] *** Joins: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4)
[11:28:47] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:25c4:f0c4:39d4:7801)
[11:29:41] *** Joins: fcc977 (~kaph@151.43.53.126)
[11:30:03] *** Joins: maharshipatel (~maharship@2409:4041:e92:93bf:d186:f47f:5e8b:f6ff)
[11:30:27] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[11:31:20] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[11:33:15] *** Quits: fcc977 (~kaph@151.43.53.126) (Remote host closed the connection)
[11:34:32] *** Joins: fcc977 (~kaph@151.43.53.126)
[11:35:13] *** Quits: rgrinberg (~textual@2806:101e:7:2b:f4e6:13e8:c8a9:3722) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:37:30] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-1-225.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[11:37:36] *** Joins: adip (~adip@deo188.neoplus.adsl.tpnet.pl)
[11:37:54] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-1-225.hsd1.wa.comcast.net)
[11:37:57] *** Quits: fcc977 (~kaph@151.43.53.126) (Read error: Connection reset by peer)
[11:38:11] *** Joins: fcc977 (~kaph@151.43.53.126)
[11:42:29] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 268 seconds)
[11:43:37] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[11:45:18] *** Quits: Vrganj (~vrganj@93-138-56-207.adsl.net.t-com.hr) (Ping timeout: 250 seconds)
[11:45:45] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[11:45:51] *** Joins: Rounin (~david@84.212.130.215)
[11:45:53] *** Quits: Figworm (FiggyWitIt@user/figworm) (Remote host closed the connection)
[11:48:55] *** Quits: nicholaus04 (~nicholaus@2607:fb90:e558:997e:112:92fe:0:7ca) (Remote host closed the connection)
[11:49:40] *** Quits: beastie (~lcu@user/thebeastie) (Quit: WeeChat 3.3)
[11:50:01] *** Joins: Beastie (~lcu@user/thebeastie)
[11:51:19] *** Joins: reset (~reset@user/reset)
[11:54:24] *** Quits: fcc977 (~kaph@151.43.53.126) (Ping timeout: 250 seconds)
[11:54:31] *** Joins: Vrganj (~vrganj@93-138-56-207.adsl.net.t-com.hr)
[12:06:04] *** Quits: AmR (~AmREiSa@41.36.185.103) (Quit: Konversation terminated!)
[12:10:42] *** Quits: CalimeroTeknik (~calimero@185.13.36.50) (Changing host)
[12:10:42] *** Joins: CalimeroTeknik (~calimero@user/calimeroteknik)
[12:12:05] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[12:15:00] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[12:15:02] *** Joins: Figworm (FiggyWitIt@user/figworm)
[12:16:13] *** Joins: jjido (~Denis@94.9.124.97)
[12:16:49] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[12:19:02] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[12:20:02] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-1-225.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[12:20:36] *** Joins: stonkey (~stonkey@user/stonkey)
[12:20:53] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-1-225.hsd1.wa.comcast.net)
[12:20:56] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[12:25:21] *** Quits: pnbeast (~pnbeast@2601:140:4280:6ce0::1) (Quit: WeeChat 2.7.1)
[12:27:09] *** Quits: n8chan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 256 seconds)
[12:27:31] *** Joins: aradesh (~aradesh@user/aradesh)
[12:30:09] *** Quits: enick_397 (~mercvrivs@2001:470:69fc:105::2ee6) (Quit: You have been kicked for being idle)
[12:31:05] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[12:31:20] *** Joins: Chpy0 (~chpy@30-8-178-69.static.gci.net)
[12:32:59] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[12:36:43] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:37:01] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[12:37:56] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[12:38:03] *** Joins: n8chan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[12:40:45] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:42:28] *** Quits: maharshipatel (~maharship@2409:4041:e92:93bf:d186:f47f:5e8b:f6ff) (Ping timeout: 256 seconds)
[12:42:31] *** Joins: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[12:42:41] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[12:42:57] *** Quits: torstenvl (~torstenvl@c-73-39-140-8.hsd1.va.comcast.net) (Remote host closed the connection)
[12:45:17] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 256 seconds)
[12:48:02] *** Quits: baltazar (~baltazar@84-236-20-10.pool.digikabel.hu) (Ping timeout: 240 seconds)
[12:49:50] *** Joins: cherrry9 (~jan@83.8.106.245.ipv4.supernova.orange.pl)
[12:50:13] *** Joins: baltazar (~baltazar@84-236-26-21.pool.digikabel.hu)
[12:50:22] *** Joins: vysn (~vysn@user/vysn)
[12:54:00] *** Joins: plastico (~plastico@neomutt/plastico)
[12:59:47] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[12:59:50] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:00:46] *** Joins: pulse (~pulse@user/pulse)
[13:02:32] *** Quits: cherrry9 (~jan@83.8.106.245.ipv4.supernova.orange.pl) (Ping timeout: 240 seconds)
[13:02:58] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[13:03:01] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[13:10:14] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 250 seconds)
[13:11:48] *** Joins: Enitin (~Enitin@82.102.22.85)
[13:12:47] *** Joins: seninha (~seninha@user/seninha)
[13:14:00] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 276 seconds)
[13:16:39] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Remote host closed the connection)
[13:17:04] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[13:18:32] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[13:18:51] *** Joins: Enitin (~Enitin@82.102.22.85)
[13:22:25] *** Joins: cart_man (~rynot@host-78-144-125-214.as13285.net)
[13:24:10] *** Joins: Burgundy (~NA@86.121.143.206)
[13:24:24] *** Quits: jjido (~Denis@94.9.124.97) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:24:43] *** Parts: Burgundy (~NA@86.121.143.206) ()
[13:25:26] *** Joins: Burgundy (~NA@86.121.143.206)
[13:31:14] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[13:32:19] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[13:37:57] *** Joins: bbju (~bbju@103.144.149.220)
[13:38:32] *** Quits: foul_owl (~kerry@97-126-11-68.tukw.qwest.net) (Ping timeout: 240 seconds)
[13:42:05] *** Joins: hinata (~hinata@2409:4042:2d90:eac6:e906:6bd9:5578:c086)
[13:48:59] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[13:51:25] *** Joins: foul_owl (~kerry@174-21-143-101.tukw.qwest.net)
[13:53:22] *** Quits: davros (~davros@host86-185-99-167.range86-185.btcentralplus.com) (Remote host closed the connection)
[13:56:57] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[13:57:35] *** Quits: bbju (~bbju@103.144.149.220) (Quit: Client closed)
[14:02:31] *** Joins: bilbo (~bilbo@host-37-191-190-173.lynet.no)
[14:03:04] *** Joins: liba (~liba@user/liba)
[14:03:29] *** Joins: jhms (~i.am@user/marlboro)
[14:09:01] *** Quits: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se) (Ping timeout: 240 seconds)
[14:09:53] *** Joins: fcc977 (~kaph@151.43.53.126)
[14:10:02] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Ping timeout: 250 seconds)
[14:10:52] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[14:12:15] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:12:25] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[14:12:27] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Client Quit)
[14:13:07] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[14:13:29] *** Quits: fcc977 (~kaph@151.43.53.126) (Client Quit)
[14:13:41] *** Joins: fcc977 (~kaph@151.43.53.126)
[14:14:22] *** Quits: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4) (Ping timeout: 250 seconds)
[14:15:05] *** Lord_of_Life_ is now known as Lord_of_Life
[14:17:58] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[14:18:30] *** Joins: kish` (~aqua@user/aqua)
[14:23:32] *** Joins: kaph (~kaph@151.43.53.126)
[14:24:27] *** Quits: fcc977 (~kaph@151.43.53.126) (Ping timeout: 256 seconds)
[14:24:53] *** Joins: Masklin_Gurder (~joel@h-155-4-23-96.A230.priv.bahnhof.se)
[14:26:55] *** Quits: kaph (~kaph@151.43.53.126) (Read error: Connection reset by peer)
[14:28:23] *** Joins: kaph (~kaph@151.43.53.126)
[14:28:44] *** Quits: liba (~liba@user/liba) (Quit: Leaving)
[14:28:58] *** Joins: liba (~liba@user/liba)
[14:30:12] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:30:57] *** Joins: csrf (~csrf@user/csrf)
[14:31:10] *** Joins: bbju (~bbju@103.144.149.220)
[14:33:00] *** Quits: kaph (~kaph@151.43.53.126) (Remote host closed the connection)
[14:34:09] *** Joins: shivesh (~shivesh@user/shivesh)
[14:39:23] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[14:40:50] *** Quits: alch (~alch@151.82.57.50) (Read error: Connection reset by peer)
[14:41:02] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 240 seconds)
[14:41:42] *** Joins: kaph (~kaph@151.43.53.126)
[14:42:33] *** Quits: Kerr (~Kerr@2601:602:ce01:1f0:d0b9:9f3c:59d9:5e72) (Quit: Client closed)
[14:42:36] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[14:43:03] *** Quits: tusko (~yeurt@copyfree/advocate/tusko) (Ping timeout: 276 seconds)
[14:43:57] *** Joins: tusko (~yeurt@copyfree/advocate/tusko)
[14:44:27] *** Joins: alch (~alch@to-18-68-118.service.infuturo.it)
[14:44:30] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[14:46:46] *** Quits: bbju (~bbju@103.144.149.220) (Quit: Client closed)
[14:47:29] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 268 seconds)
[14:47:45] *** Quits: cart_man (~rynot@host-78-144-125-214.as13285.net) (Quit: Konversation terminated!)
[14:48:31] *** Joins: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4)
[14:52:46] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:59:33] *** Joins: random-nick (~random-ni@87.116.181.150)
[15:00:34] *** Quits: freep (~freepppp@62.1.35.210.dsl.dyn.forthnet.gr) (Quit: Leaving)
[15:01:15] *** Joins: iomari891 (~iomari891@197.210.71.107)
[15:02:15] *** Quits: kaph (~kaph@151.43.53.126) (Read error: Connection reset by peer)
[15:02:25] *** Joins: gproto23 (~gproto23@user/gproto23)
[15:02:28] *** Quits: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4) (Ping timeout: 250 seconds)
[15:03:32] *** Joins: bebyx (~Thunderbi@user/bebyx)
[15:05:38] *** Joins: kaph (~kaph@151.43.53.126)
[15:08:32] *** Quits: Vrganj (~vrganj@93-138-56-207.adsl.net.t-com.hr) (Ping timeout: 240 seconds)
[15:10:58] *** Quits: lunix00 (~lunix00@2804:14c:6321:900d:453d:d51a:32ef:ac82) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[15:11:25] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[15:11:42] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[15:13:45] *** Quits: kaph (~kaph@151.43.53.126) (Ping timeout: 256 seconds)
[15:14:48] *** Joins: freep (~freepppp@62.1.35.210.dsl.dyn.forthnet.gr)
[15:17:24] *** Joins: strajder (~strajder@user/strajder)
[15:17:38] *** Quits: manjaroi3 (~manjaro-i@125.131.131.26) (Ping timeout: 250 seconds)
[15:20:06] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[15:23:46] *** Joins: Kerr (~Kerr@c-73-193-43-154.hsd1.wa.comcast.net)
[15:25:23] *** Quits: bilbo (~bilbo@host-37-191-190-173.lynet.no) (Quit: Client closed)
[15:26:05] *** Quits: Furai (~Furai@furai.pl) (Quit: WeeChat 3.4)
[15:28:39] *** Quits: GIR0001 (~GIR@64.145.93.51) (Ping timeout: 256 seconds)
[15:29:09] *** Quits: nuxil (~nuxil@141.195.51.213) (Read error: Connection reset by peer)
[15:29:19] *** Joins: Furai (~Furai@furai.pl)
[15:30:03] *** Joins: nuxil_ (~nuxil@141.195.51.213)
[15:30:44] *** Joins: _nuxil_ (~nuxil@141.195.51.213)
[15:30:44] *** Quits: nuxil_ (~nuxil@141.195.51.213) (Read error: Connection reset by peer)
[15:31:23] *** Joins: nicholaus04 (~nicholaus@172.58.27.115)
[15:32:06] *** Joins: lunix00 (~lunix00@2804:14c:6321:900d:c0b2:a7ad:8aa7:4387)
[15:32:39] *** Joins: bilbo (~bilbo@host-37-191-190-173.lynet.no)
[15:33:02] *** Quits: Masklin_Gurder (~joel@h-155-4-23-96.A230.priv.bahnhof.se) (Ping timeout: 240 seconds)
[15:34:06] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 250 seconds)
[15:34:21] *** Joins: Masklin_Gurder (~joel@h-155-4-23-152.a230.priv.bahnhof.se)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:44:31] *** Joins: humky (~humky@user/humky)
[15:46:21] *** Joins: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net)
[15:51:26] *** Joins: lispy (~lispy4@84.69.59.93)
[15:54:02] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 240 seconds)
[15:55:37] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[15:55:41] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Client Quit)
[15:55:45] *** Quits: lunix00 (~lunix00@2804:14c:6321:900d:c0b2:a7ad:8aa7:4387) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[15:56:57] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[15:57:24] *** Joins: cosimone (~user@93-47-230-83.ip115.fastwebnet.it)
[15:59:50] *** Quits: lispy (~lispy4@84.69.59.93) (Quit: Leaving)
[15:59:56] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[16:00:30] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[16:01:58] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[16:05:13] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[16:05:29] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[16:06:49] *** Joins: cart_man (~rynot@host-78-144-125-214.as13285.net)
[16:07:11] *** Quits: mad_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca) (Ping timeout: 256 seconds)
[16:15:03] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:25c4:f0c4:39d4:7801) (Ping timeout: 268 seconds)
[16:15:51] *** flooded is now known as _flood
[16:18:37] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[16:19:04] *** Joins: mad_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca)
[16:19:59] *** Joins: Satin (uid193953@user/Seten)
[16:20:31] *** Joins: omegatron (~some@p5484973e.dip0.t-ipconnect.de)
[16:21:38] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[16:26:15] *** Joins: Jong (~Jong@174.27.15.0)
[16:26:25] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 276 seconds)
[16:26:26] *** Quits: nicholaus04 (~nicholaus@172.58.27.115) (Remote host closed the connection)
[16:27:17] *** Joins: nicholaus04 (~nicholaus@172.58.27.115)
[16:27:23] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 268 seconds)
[16:29:12] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[16:30:33] *** Quits: nicholaus04 (~nicholaus@172.58.27.115) (Remote host closed the connection)
[16:31:13] *** Quits: Jong (~Jong@174.27.15.0) (Quit: Textual IRC Client: www.textualapp.com)
[16:31:39] *** Joins: nicholaus04 (~nicholaus@172.58.27.115)
[16:34:52] *** Quits: nicholaus04 (~nicholaus@172.58.27.115) (Remote host closed the connection)
[16:35:38] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[16:35:41] *** Joins: nicholaus04 (~nicholaus@172.58.27.115)
[16:36:53] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[16:38:13] *** Joins: jmiehe1 (~Thunderbi@user/jmiehe)
[16:40:12] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:41:02] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Ping timeout: 240 seconds)
[16:41:02] *** jmiehe1 is now known as jmiehe
[16:43:24] *** Joins: pulse (~pulse@user/pulse)
[16:48:21] *** Quits: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net) (Ping timeout: 268 seconds)
[16:51:33] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[16:52:06] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[16:52:08] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[16:52:36] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[16:53:35] *** Joins: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it)
[16:55:47] *** Quits: nicholaus04 (~nicholaus@172.58.27.115) (Remote host closed the connection)
[16:56:35] *** Joins: nicholaus04 (~nicholaus@172.58.27.115)
[16:57:06] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[16:57:44] *** Quits: M-blaise (~M-blaise@105.112.138.38) (Ping timeout: 250 seconds)
[16:59:13] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[17:00:42] *** Joins: M-blaise (~M-blaise@105.112.138.38)
[17:02:46] *** Joins: nich04 (~nicholaus@2607:fb90:e54c:9133:f8e0:5d8a:0:7ca)
[17:03:51] *** Quits: nicholaus04 (~nicholaus@172.58.27.115) (Ping timeout: 256 seconds)
[17:04:58] <sokan> http://dpaste.com/ELDL7K5Q5 <-- This is the code. http://dpaste.com/3FR4ZGN5M <--- this is 1hfr.pdb file. I want to achieve to print a the whole sequence that follows each line with ATOM (including the word ATOM). something is wrong here, but not sure what.
[17:06:07] <sokan> Also I want to figure out a way to double check what the code does, but not sure what to add in fprintf("% here", ch); to make it work.
[17:07:27] <katsuragi> suppose I dynamically allocate a char * using malloc and I assign it to a va_arg that returns a char *, why would the program seg fault if i used the returned value as a source for strcat?
[17:08:03] <katsuragi> haven't i created enough memeory for some 5 additional characters?
[17:08:03] *** Joins: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[17:10:06] <omegatron> sokan: if you want to process a file line-by-line, why not use (per line) fgets(), then strstr() to check for the first 4 character and then do your stuff.. ?
[17:10:52] <omegatron> the c library contains many general purpose and well-tested functions - use them to spare your time by doing premature optimization (which is the root of all evil)
[17:11:41] <clarity> katsuragi: Maybe you haven't initialized your memory
[17:11:55] <clarity> I don't like crystal balling this, why not paste the code?
[17:13:26] <katsuragi> right..
[17:13:33] <fizzie> sokan: `if (atom = false) { ... }` is not the same as `if (atom == false) { ... }` (or `if (!atom) { ... }`).
[17:16:26] *** Joins: Waynes (~Waynes@user/waynes)
[17:16:51] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[17:17:55] <fizzie> I couldn't even parse "allocate a char * and assign it to a va_arg that returns a char *" really. I guess maybe that was about passing the result of the `malloc` as an argument corresponding to a `va_arg` invocation?
[17:18:49] <clarity> That's how I understood it
[17:19:06] <clarity> But yeah no fun crystal balling something so vague
[17:20:23] <clarity> But I definitely wouldn't use that pointer as a source for strcat unless it actually points to a string, and they didn't say they stored a string, so there's that :)
[17:21:16] <sham1> I wouldn't use strcat
[17:21:28] <sham1> But that's just me
[17:22:23] <clarity> It's got some cat in it and I like cat
[17:24:02] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[17:26:20] *** Quits: cosimone (~user@93-47-230-83.ip115.fastwebnet.it) (Remote host closed the connection)
[17:27:06] <omegatron> I like cat only, when it's flame grilled with some pepper sauce
[17:27:30] <sham1> Please do not the cat
[17:28:23] <katsuragi> this works but suggest me some optimisations, please https://termbin.com/dktw
[17:29:33] *** Joins: acerbic (~acerbic@cs-xdata-50-86-50-82.cspire.com)
[17:29:56] <omegatron> "Yeah, sounds like a medical thing. It's called cataplexy. Catfight and cataplexy on the catwalk. Cool."   I like this quote  =D
[17:31:00] <sham1> katsuragi: you're leaking memory
[17:31:46] <omegatron> katsuragi: why don't you use fprintf() et al. directly?   fprintf ( stdout, "%s %s\n", " Katsuragi", "Keima" ) ;
[17:32:03] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[17:32:12] <sham1> You first malloc stuff and store the pointer from malloc in name, but then you overwrite the value of name
[17:32:25] <sham1> Also, please don't cast malloc return values
[17:33:04] *** Quits: hinata (~hinata@2409:4042:2d90:eac6:e906:6bd9:5578:c086) (Quit: Leaving)
[17:33:13] *** Joins: hlauk (~hlauk@176.33.97.244)
[17:34:56] <katsuragi> and i didn't use va_end.. alright, i understand .
[17:35:55] <katsuragi> omegatron: it's about learning.
[17:36:08] <omegatron> ok
[17:36:12] <omegatron> no problem with that
[17:37:06] *** Joins: dcreator (~kjell@208.92-221-37.customer.lyse.net)
[17:37:31] *** Joins: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4)
[17:40:21] <sokan> fizzie: !atom is the same as atom == false no?
[17:40:52] <sham1> It indeed is
[17:41:01] <GyrosGeier> you can't compare a pointer against false
[17:41:14] <sham1> Well atom mightn't be a pointer
[17:41:32] <NRK[m]> sokan: if atom is a _Bool
[17:41:54] <omegatron> false might be defined as 42
[17:42:05] <sham1> Although with integer promotion rules, wouldn't that still work, even if it might rightfully give a warning
[17:42:05] <NRK[m]> or no, wait. false is 0..
[17:42:31] <fizzie> `false` expands to "the integer constant 0", so it's a valid null pointer constant.
[17:42:39] <GyrosGeier> sure?
[17:42:46] <GyrosGeier> could be an enum
[17:42:54] <fizzie> Not in a conforming implementation.
[17:42:54] <sham1> Enums are ints
[17:42:58] <GyrosGeier> yes
[17:43:27] <sham1> Well, enumeration constants are ints
[17:43:28] <GyrosGeier> but can I implicitly convert an enum with a value of zero to a NULL pointer?
[17:43:29] <fizzie> C11 7.18p3: "The remaining three macros are suitable for use in `#if` preprocessing directives. They are -- `false` -- which expands to the integer constant 0, --"
[17:43:44] <GyrosGeier> ah
[17:43:52] <GyrosGeier> that is a good point
[17:44:13] <fizzie> FWIW, enumeration constants with the value 0 would also be valid null pointer constants. They're integer constant expressions. But `false` can't be one of them.
[17:44:35] <sham1> false has to be a macro, no?
[17:45:00] <GyrosGeier> it has to be a macro and expand to something the preprocessor understands
[17:45:13] <GyrosGeier> so it's not like errno
[17:45:26] *** Joins: oxfuxxx (~oxfuxxx@185.156.174.6)
[17:45:32] <GyrosGeier> which also has to be a macro, but is allowed to expand to itself
[17:45:42] <fizzie> C11 6.3.2.3p3: "An integer constant expression with the value 0, or such an expression cast to type `void *`, is called a /null pointer constant/." 6.6p6: "An /integer constant expression/ shall have integer type and shall only have operands that are integer constants, *enumeration constants* [emphasis added], character constants, [and a bunch of other things]."
[17:45:52] *** Joins: cerl (~cerl@c-24-30-27-91.hsd1.ga.comcast.net)
[17:46:09] <fizzie> All that said, using `false` as a null pointer constant would be just weird. But you could.
[17:46:20] <cerl> I have the draft standards for C90, C99, and C11. Is that all I need to ensure I don't have undefined behavior? In other words, clean code?
[17:46:37] <GyrosGeier> yes, that feels like using "and" in C++ to form a rvalue reference
[17:46:51] <sham1> Well people already treat pointers in a boolean-esque way by doing things like `if (ptr)` and such
[17:47:09] <sham1> Not a fan, but w/e
[17:48:12] *** Quits: freep (~freepppp@62.1.35.210.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[17:48:25] <fizzie> ,cc int i = 123, *p = bitand i; printf("%d", *p); // thanks, <iso646.h>
[17:48:28] <candide> fizzie: 123
[17:49:40] <sham1> I like iso646.h, makes the code readable in some ways. Less symbology
[17:50:35] <NRK[m]> C doesn't have much symbols anyways
[17:50:46] <NRK[m]> compared to, ahem, some other languages
[17:52:17] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[17:53:20] <NRK[m]> cerl: im not entirely sure if it's even possible to write non trivial projects without using UB in one place or another.
[17:54:38] <cerl> People love to rave on about "correct code" and "bug free code" but with so many different opinions on what is the right way to use C, it makes it hard to know if I'm doing something wrong or not.
[17:54:38] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) ()
[17:56:04] <oldlaptop> The thing about "correctness" is that it's not subject to opinion.
[17:56:08] <tarzeau> put it on github.com and see what others think? they'll file issues or more likely pull requests how they would do it
[17:56:36] <oldlaptop> ("YOU PUT THE OPENING BRACE ON THE WRONG LINE!" is not an opinion about "correctness".)
[17:56:39] *** Joins: meator (~meator@user/meator)
[17:57:13] <GyrosGeier> if I want correctness, I use VHDL and write epic prose
[17:57:14] *** Quits: acerbic (~acerbic@cs-xdata-50-86-50-82.cspire.com) (Read error: Connection reset by peer)
[17:57:57] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[17:58:03] <NRK[m]> cerl: UB-free code doesn't mean "bug free code"
[17:58:16] <NRK[m]> most bug i see atleast aren't related to UB
[17:58:26] *** Joins: mh3f_ (~mdhowle@spcvpn.sonoco.com)
[17:58:27] *** Joins: freep (~freepppp@62.1.35.210.dsl.dyn.forthnet.gr)
[17:58:39] <oldlaptop> Well-defined behavior can still be incorrect.
[17:59:02] <nitrix> cerl, Let's start by not pretending it's binary with either a right or a wrong.
[17:59:44] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:25c4:f0c4:39d4:7801)
[17:59:58] <nitrix> cerl, Once you realize that, you can already dismiss every opinion that claims either.
[18:00:40] <cerl> I'll do that. Thanks.
[18:00:55] *** Joins: mug3n_ (~mugen@gateway/tor-sasl/mugen)
[18:01:05] *** Quits: mh3f__ (~mdhowle@cpe-98-25-217-234.sc.res.rr.com) (Ping timeout: 256 seconds)
[18:01:09] <NRK[m]> there's also things which are UB under C standard but defined under the implementation
[18:02:41] *** Joins: nostar (~nostar@2600:1007:b104:b925:7ab7:d672:39f:4b80)
[18:03:11] <sham1> Well technically all UB is defined by the implementation, because they usually do *something* in those cases (including nothing, or emitting ud2)
[18:03:48] <sham1> It's just that many times an implementation might just define something that is technically undefined behaviour to be actually useful
[18:03:54] *** Quits: mug3n (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[18:03:57] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:03:57] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:03:57] *** Joins: wroathe (~wroathe@user/wroathe)
[18:03:58] *** Quits: cerl (~cerl@c-24-30-27-91.hsd1.ga.comcast.net) (Quit: Leaving)
[18:04:15] <sham1> Like for example `*(int *)0xDEADBEEF = 10;`
[18:05:01] <nitrix> Doesn't work on vegetarian platforms.
[18:05:02] *** Joins: nvmd (~nvmd@user/nvmd)
[18:05:06] <GyrosGeier> I'd still like to have separate integer types for desired overflow behaviour
[18:05:23] <sham1> Well we're getting other stuff for that IIRC
[18:05:30] <GyrosGeier> like overflowing an int is undefined, but overflowing an unsigned wraps
[18:06:05] <sham1> "Type generic functions for performing checked integer arithmetic (Integer overflow)" says Wikipedia for "C2x"
[18:06:20] <sham1> Does it also include multiplication? Because if so, I'm hype
[18:06:25] <GyrosGeier> so people write code that assumes that unsigned wraps, which breaks when you use -ftrapv to catch the case where someone overflowed an int, the compiler caught it and removed the second half of the function because it's UB anyway
[18:06:49] <GyrosGeier> so I have to write mul(a, b)?
[18:07:21] <sham1> Of course you'd assume that unsigned arithmetic wraps. It's explicitly defined as being modular arithmetic on the additive group of integers mod 2^n
[18:07:35] <nitrix> I think you're conflating -ftrapv with -fwrapv.
[18:07:43] *** Quits: hlauk (~hlauk@176.33.97.244) (Ping timeout: 256 seconds)
[18:07:50] <sham1> Well, technically it's a ring because you also get multiplication
[18:08:19] *** Joins: Jong (~Jong@2620:10d:c090:400::5:5dc3)
[18:08:22] <nitrix> -ftrapv only affects overflows; unsigned can't overflow.
[18:08:27] *** Quits: meator (~meator@user/meator) (Ping timeout: 256 seconds)
[18:08:46] <GyrosGeier> I think it does trap though
[18:09:07] <GyrosGeier> and I basically need a function like this
[18:09:34] <GyrosGeier> MSVC got this right, their debug mode is "trap when a value truncation changes the value"
[18:09:43] *** Joins: Klinda (~superleag@user/klinda)
[18:09:48] *** Joins: kish` (~aqua@user/aqua)
[18:09:56] <GyrosGeier> so float f = 0.0; is fine, float f = 0.1; is not
[18:10:38] *** Joins: pucara (~i@host14.181-1-101.telecom.net.ar)
[18:11:59] <sham1> Now I wonder what the checked integer arithmetic functions are called, because I can't seem to find them on the C2023 draft
[18:12:01] <sham1> The latest one
[18:13:35] *** Quits: nostar (~nostar@2600:1007:b104:b925:7ab7:d672:39f:4b80) (Read error: Connection reset by peer)
[18:14:32] <nitrix> sham1, Look for checked_ or chk_
[18:14:51] <nitrix> sham1, The newer proposals should be using chk_
[18:15:17] <sham1> "Phrase not found"
[18:15:20] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[18:15:35] <sham1> Are they in n2731 or is it just a proposal in the lg
[18:16:33] <nitrix> Still a proposal I think? http://www.open-std.org/jtc1/sc22/wg14/www/docs/n2543.pdf
[18:17:21] *** Quits: M-blaise (~M-blaise@105.112.138.38) (Ping timeout: 256 seconds)
[18:17:37] <nitrix> Oh, found the last one http://www.open-std.org/jtc1/sc22/wg14/www/docs/n2868.pdf
[18:18:27] <nitrix> Holy crap http://www.open-std.org/jtc1/sc22/wg14/www/docs/n2896.htm
[18:18:32] <nitrix> We might get #once
[18:18:42] <sham1> If it's a proposal still, I'd assume it's either been voted on, or the Wikipedia editor might be high on something
[18:18:45] <sham1> OMG
[18:18:46] <sham1> YES
[18:18:57] <sham1> Thank you wg14
[18:19:19] *** Joins: meator (~meator@user/meator)
[18:19:26] *** Joins: M-blaise (~M-blaise@105.112.138.38)
[18:19:35] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Client Quit)
[18:19:50] <sham1> Both variants of #once presented lgtm
[18:20:22] <sham1> Both are an improvement on the stanza of #ifndef ... #define ... #endif
[18:20:40] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[18:22:29] <GyrosGeier> is that like #pragma once, just less industry in the standard?
[18:23:22] <dave0> did someone need code to catch signed integer overflow?
[18:23:32] <dave0> i have add sub and mul
[18:23:56] <sham1> Checked adds, subs and multiplies are useful because you can then do neat things like bigints
[18:24:08] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Client Quit)
[18:25:16] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[18:26:04] <sham1> Although I do wonder if n2868 will include support for detecting if an unsigned integer wrapped
[18:26:24] <sham1> I'd certainly hope so. If not, meh, the stuff can also be done with signed, it's just not as pretty
[18:26:24] <GyrosGeier> normally my code avoids wrapping and overflows
[18:26:45] <GyrosGeier> so -ftrapv should not make a semantic change
[18:26:48] <sham1> Apparently it does
[18:26:49] <dave0> c has signals.. will overflow/wrap raise a signal?
[18:27:08] <sham1> What, for the checked arithmetic?
[18:27:19] <dave0> yeah
[18:27:28] <sham1> No. Instead you get a "checked integer"
[18:27:35] <sham1> Which knows if you've overflown/wrapped
[18:28:21] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:25c4:f0c4:39d4:7801) (Quit: Quit)
[18:28:33] <dave0> hang on let me google 'checked integer arithmetic'
[18:29:27] *** Joins: mh3f__ (~mdhowle@cpe-98-25-217-234.sc.res.rr.com)
[18:30:11] <sham1> This capability in C2023 would make it conceivable to have a header-only bigint library, which would be interesting
[18:31:29] <GyrosGeier> I built the opposite: a type that keeps twos complement semantics without trapping even with -ftrapv
[18:31:32] *** Quits: mh3f_ (~mdhowle@spcvpn.sonoco.com) (Ping timeout: 240 seconds)
[18:31:38] <GyrosGeier> but that's C++
[18:31:44] <sham1> <http://www.open-std.org/jtc1/sc22/wg14/www/docs/n2897.htm> Don't we already have this? C2011 gave us memset_s which has this guarantee in it
[18:31:55] <sham1> Why do you care about trapping wrapping and overflows
[18:32:12] <GyrosGeier> because 99% of the time, it's not what I want
[18:32:34] <GyrosGeier> well-defined behaviour is not worth much if it is defined to be useless
[18:33:04] *** Quits: Alhazred (~Alhazred@86.106.74.37) (Ping timeout: 250 seconds)
[18:33:15] <sham1> Wrapping isn't useless
[18:33:15] <GyrosGeier> there are rather few cases where I rely on UINT_MAX + 1 == 0
[18:33:38] <GyrosGeier> and all of these I have a comment next to them "wrapping is intended here"
[18:33:58] <NRK[m]> i remember utilising wrapping once
[18:34:03] <GyrosGeier> it would be more useful to have that comment machine-readable
[18:34:13] <NRK[m]> it was as an index for a circular buffer iirc
[18:34:46] <sham1> [[wrapping]]
[18:34:54] <sham1> Thank you C2023
[18:34:57] <GyrosGeier> I usually write "% length" there, and let the compiler figure out that the modulus does nothing
[18:35:24] *** Joins: plantman2 (~plantman@2601:405:4680:1b0::4)
[18:35:54] <dave0> will int a; still be able to overflow and then UB ?
[18:36:07] <dave0> with that checked integer arithmetic thing?
[18:36:12] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[18:36:37] *** Quits: plantman (~plantman@2601:405:4680:1b0::4) (Ping timeout: 240 seconds)
[18:36:39] <sham1> Not sure. I haven't read the proposal enough to know
[18:37:20] <dave0> all the fluff in the world is useless if they dont fix int
[18:38:20] <sham1> I mean I'd assume that it wouldn't be undefined behaviour with checked arithmetic, because as you say, what would be the point
[18:38:34] <sham1> <http://www.open-std.org/jtc1/sc22/wg14/www/docs/n2895.htm> hmm
[18:38:36] <candide> Title of sham1's link: A simple defer feature for C
[18:38:51] <sham1> Great… non-linear control flow that isn't a goto
[18:39:02] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 240 seconds)
[18:40:35] *** Quits: alch (~alch@to-18-68-118.service.infuturo.it) (Read error: Connection reset by peer)
[18:41:23] *** Joins: Sos (~Sos@d107-222.icpnet.pl)
[18:41:28] <nitrix> It's a tradeoff. As annoying as cleaning up can be, I'm not sure I like non-linear control flow either.
[18:41:32] *** Quits: liba (~liba@user/liba) (Ping timeout: 240 seconds)
[18:41:48] <sham1> And this proposal also relies on simple lambdas. It'd be interesting to see how lambdas would be integrated into C. Would we finally see the usage of things like the System V ABI AMD64 register r10 as an actual static chain pointer? Like for trampolining? It'd be weird to see
[18:42:10] <sham1> Especially considering that one would need to think about "well what if you have two lambdas to one function"
[18:42:32] <nitrix> It's why I like C, because I don't have to overthink things. I'm worried a bit where that's headed.
[18:42:54] <nitrix> It's nowhere near C++/Haskell/Rust levels, but it opens the door.
[18:42:55] *** Joins: zmt01 (~zmt00@user/zmt00)
[18:43:07] <nitrix> Once you accept generics, it goes downhill from there.
[18:44:14] <dave0> i'm a known c89 apologist
[18:44:30] *** Joins: Viewday11 (~Viewday@user/viewday)
[18:44:30] <clarity> I don't mind having some features as long as they're reasonably transparent and don't rely on a runtime
[18:44:35] <clarity> And no full-on oop goop
[18:44:39] <pragma-> That's silly. C99 is the bare minimum C worth supporting.
[18:44:42] <sham1> ^
[18:44:48] *** Joins: alch (~alch@to-18-71-145.service.infuturo.it)
[18:45:13] <dave0> pfft
[18:45:17] <pragma-> C89 has a lot of ugly warts.
[18:45:27] <markand> s/89//
[18:45:41] <dave0> hah!
[18:45:51] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[18:45:52] <markand> fputs, fprintf, fread, fwrite and ... rewind
[18:45:54] <clarity> That defer looks otherwise decent but it can f off with its implementation definedness of block scope defers.
[18:46:03] <markand> not mentioning those ugly _IONBF
[18:46:14] <sham1> Having lambdas with no captures would be neat because then one wouldn't need things like statement expressions because one could do a lambda that is invoked in place and such. Although N2862 has a proposal for "wide function pointers" which might be useful for closures. One would then have to wonder that what would happen with APIs like qsort. Would we get yet another qsort?
[18:46:35] *** Quits: dsrt^ (~dsrt@wsip-98-188-242-61.mc.at.cox.net) (Remote host closed the connection)
[18:46:50] <sham1> We already have two qsorts in the standard
[18:46:51] <clarity> Imo the standard library is one of the weakest parts of C anyway
[18:46:59] <clarity> It's mix and match of random utilities of random quality
[18:47:19] * markand throws strtok into the middle of the channel
[18:47:26] *** Quits: esselfe (~steph@user/esselfe) (Quit: restarting)
[18:47:26] <markand> get ready for football
[18:47:27] <sham1> Eww, global state
[18:47:42] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:c9e8:b7fb:cb1d:72ee)
[18:47:42] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:c9e8:b7fb:cb1d:72ee) (Changing host)
[18:47:42] *** Joins: skapata (~Skapata@user/skapata)
[18:47:46] <clarity> So I can't say I care too much about questions like what happens to qsort :)
[18:47:56] * dave0 piles on errno
[18:48:02] *** Quits: M-blaise (~M-blaise@105.112.138.38) (Ping timeout: 240 seconds)
[18:48:02] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Ping timeout: 240 seconds)
[18:48:04] *** Joins: esselfe (~steph@user/esselfe)
[18:48:10] <markand> errno is often implemented a macro calling a function
[18:48:43] <markand> but with C11 I think it can be declared as 'extern thread_local <something> errno'?
[18:49:04] *** mh3f__ is now known as mh3f
[18:49:34] <clarity> thread_local long double of course
[18:49:36] <dave0> a macro calling a function to pretend to be a global variable... this doesn't bother you?
[18:49:53] *** Joins: kts (~kts@103.73.237.109)
[18:50:18] <markand> no but before thread_local being standardized there weren't any other option for multithreaded applications :P
[18:50:30] *** Joins: M-blaise (~M-blaise@105.112.138.38)
[18:50:40] <dave0> no threads in c89
[18:50:46] <dave0> :-p
[18:50:48] <markand> actually errno being a global isn't that bad, otherwise ten thousands of the C and POSIX API would return something like errno_t
[18:50:58] <sham1> markand: it has to be a macro, but you can do something like the following: `_Thread_local int _errno; \n #define errno _errno`
[18:51:21] <markand> and I definitely prefer write/read to return the number of bytes rather than an error code
[18:51:22] <pragma-> try/catch/throw when?
[18:51:31] * sham1 squints at pragma- 
[18:51:40] <sham1> ,expand errno
[18:51:40] <candide> sham1:  errno
[18:51:48] <sham1> ,expand #include <errno.h> errno
[18:51:49] <candide> sham1:  (*__errno_location ())
[18:51:58] <markand> adding exceptions to C would be a silly idea
[18:52:08] <sham1> It would
[18:52:13] <GyrosGeier> 16:17  * markand throws strtok into the middle of the channel
[18:52:14] <markand> (not saying they are bad)
[18:52:26] <GyrosGeier> can we get a strtok that supports empty fields? :>
[18:52:41] <sham1> As said, eww, non-linear control flow. Exceptions are nice in some languages, but they certainly don't fit C at all
[18:52:45] <clarity> markand: Why not both?  Positive result, negative error code works great for great many things..
[18:53:05] <sham1> A lot of POSIX APIs already return -1 on error. They could as well return -errno
[18:53:21] <markand> clarity, that would be great indeed
[18:53:34] <markand> pthread_cond_timedwait actually return ETIMEDOUT immediately
[18:53:42] <sham1> errno makes sense for some APIs, like strtoll or whatever, mmap, but some things are more annoying than anything
[18:53:46] <GyrosGeier> BOOL GetMessage(LPMSG, HWND, UINT, UINT); -- returns TRUE, FALSE or -1
[18:53:52] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:53:52] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:53:52] *** Joins: wroathe (~wroathe@user/wroathe)
[18:53:57] <sham1> Damn it Microsoft
[18:53:59] <markand> but for function returning non numeric types, it's still broken
[18:54:42] <clarity> ERR_PTR() ;3
[18:54:49] <sham1> no
[18:54:58] <clarity> meow
[18:57:02] *** Quits: PublicWiFi (~PublicWiF@user/publicwifi) (Quit: WeeChat 3.0)
[18:57:28] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[18:57:52] <sham1> http://www.open-std.org/jtc1/sc22/wg14/www/docs/n2862.pdf
[18:57:55] <sham1> > _Wide
[18:58:28] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[18:59:37] *** Joins: PublicWifi (~PublicWiF@user/publicwifi)
[18:59:45] <GyrosGeier> why not "long"?
[19:00:03] <GyrosGeier> :>
[19:00:19] <GyrosGeier> int (* long)(int);
[19:00:36] <sham1> long is already in usage, and _Long would be weird
[19:00:41] <GyrosGeier> OTOH, that could also be useful to replace "far"
[19:00:48] <sham1> I'd personally have _Closure and then a <stdclosure.h> with closure
[19:00:56] <sham1> If this was to be a thing
[19:01:52] *** Quits: PublicWifi (~PublicWiF@user/publicwifi) (Client Quit)
[19:02:04] <nitrix> _Closure could be explained in terms of a function pointer and a va_list, more or less.
[19:02:21] <clarity> I think they should figure out how we could reuse static for this
[19:02:41] <nitrix> lol
[19:02:58] *** Joins: PublicWifi (~PublicWiF@user/publicwifi)
[19:03:11] *** Quits: mrig (~mrig@user/mrig) (Read error: Connection reset by peer)
[19:03:25] *** Joins: mrig (~mrig@user/mrig)
[19:03:27] <clarity> Coding C will be easy when every other keyword is static.  I'll dedicate a key for it :)
[19:03:35] <pragma-> I casually glanced into this channel without reading the backlog and I was nearly triggered enough to write a paragraph about how symbols shouldn't be repurposed to have multiple overloaded meanings.
[19:03:45] <nitrix> void (* static foo)(int); // A closure :P
[19:04:16] *** Joins: laslmtdbm^ (~laslmtdbm@wsip-98-188-242-61.mc.at.cox.net)
[19:05:15] <sham1> _Closure doesn't need a va_list. Just a syntactic sugar from: int _Closure foo(type1, type2): => struct closure_t { int (*func)(struct closure_t *, type1, type2); /* captured vars */ } foo; and then some calling things where an instance of the "closure structure" is carried around and a call to `foo(arg1, arg2)` becomes something like `foo->func(foo, arg1, arg2);` but in some fancy way so that everything works
[19:05:36] <sham1> But yes. Obviously the best solution is to overload `static`
[19:05:50] <nitrix> I feel like a lot of the language would get fixed if the preprocessor was more powerful.
[19:06:52] <nitrix> It's the place to do first-class hackery, implicit arguments, generic things. People that want their functional languages so bad could just have their little playground there.
[19:07:13] <nitrix> But the preprocessor is so incompetent, the language ends up getting polluted.
[19:07:26] *** Quits: zmt01 (~zmt00@user/zmt00) (Quit: Leaving)
[19:08:06] <sham1> What would I give for macro hygiene
[19:08:18] <sham1> And, well, statement expressions since I'm a one-trick pony
[19:08:26] *** Joins: zmt00 (~zmt00@user/zmt00)
[19:09:57] <sham1> Or captureless lambdas because a lot of preprocessor problems would be solved with that
[19:11:06] <sham1> #define MACRO(a, b, c) [](typeof((a)) aa, typeof((b)) bb, typeof((c)) cc) { /* hic sunt dracones */ } ((a), (b), (c));
[19:11:14] <sham1> Sans semicolon
[19:14:04] <markand> #define true false
[19:17:54] *** Quits: skeels (21030cf582@2604:bf00:561:2000::237) (Remote host closed the connection)
[19:17:54] *** Quits: jayaura (e2d69d141a@2604:bf00:561:2000::2b0) (Remote host closed the connection)
[19:17:54] *** Quits: akspecs (00cc8321af@sourcehut/user/akspecs) (Remote host closed the connection)
[19:17:54] *** Quits: mzal (7dc76dea13@2604:bf00:561:2000::69) (Remote host closed the connection)
[19:17:54] *** Quits: k0ta (3da8335bb9@2604:bf00:561:2000::10a) (Write error: Broken pipe)
[19:17:54] *** Quits: sm2n (ae95cb1267@user/sm2n) (Remote host closed the connection)
[19:17:54] *** Quits: dan_berg_pub (2c6463a49d@2604:bf00:561:2000::1c) (Remote host closed the connection)
[19:17:54] *** Quits: dooba (35c4732bbc@2604:bf00:561:2000::9d) (Remote host closed the connection)
[19:17:54] *** Quits: exec64 (5ff8a84e19@2604:bf00:561:2000::f9) (Remote host closed the connection)
[19:17:54] *** Quits: colbyhub (411e4f2740@2604:bf00:561:2000::2de) (Remote host closed the connection)
[19:17:54] *** Quits: retropikzel (9d1a4f9f46@2604:bf00:561:2000::ce) (Remote host closed the connection)
[19:17:54] *** Quits: tdmm (1c9b9145fc@2604:bf00:561:2000::1c8) (Remote host closed the connection)
[19:17:54] *** Quits: tom5760 (73d4025b14@user/tom5760) (Remote host closed the connection)
[19:17:54] *** Quits: riksteri (d20812115c@2604:bf00:561:2000::1e6) (Remote host closed the connection)
[19:17:54] *** Quits: fmac (bf93f83905@2604:bf00:561:2000::26) (Remote host closed the connection)
[19:17:54] *** Quits: fcresende (08f4f13bd6@2604:bf00:561:2000::307) (Remote host closed the connection)
[19:17:59] *** Quits: trinity (9df954e8f1@2604:bf00:561:2000::cd) (Remote host closed the connection)
[19:18:27] *** Joins: dan_berg_pub (2c6463a49d@2604:bf00:561:2000::1c)
[19:18:27] *** Joins: jayaura (e2d69d141a@2604:bf00:561:2000::2b0)
[19:18:27] *** Joins: riksteri (d20812115c@2604:bf00:561:2000::1e6)
[19:18:27] *** Joins: mzal (7dc76dea13@2604:bf00:561:2000::69)
[19:18:28] *** Joins: retropikzel (9d1a4f9f46@2604:bf00:561:2000::ce)
[19:18:29] *** Joins: fcresende (08f4f13bd6@2604:bf00:561:2000::307)
[19:18:37] *** Joins: tom5760 (73d4025b14@user/tom5760)
[19:18:42] *** Joins: dooba (35c4732bbc@2604:bf00:561:2000::9d)
[19:18:42] *** Joins: skeels (21030cf582@2604:bf00:561:2000::237)
[19:18:42] *** Joins: k0ta (3da8335bb9@2604:bf00:561:2000::10a)
[19:18:42] *** Joins: tdmm (1c9b9145fc@2604:bf00:561:2000::1c8)
[19:18:42] *** Joins: colbyhub (411e4f2740@2604:bf00:561:2000::2de)
[19:18:42] *** Joins: trinity (9df954e8f1@2604:bf00:561:2000::cd)
[19:18:44] *** Joins: fmac (bf93f83905@2604:bf00:561:2000::26)
[19:18:45] *** Joins: akspecs (00cc8321af@sourcehut/user/akspecs)
[19:18:45] *** Joins: sm2n (ae95cb1267@user/sm2n)
[19:18:49] *** Joins: exec64 (5ff8a84e19@2604:bf00:561:2000::f9)
[19:19:06] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41)
[19:20:15] *** Quits: M-blaise (~M-blaise@105.112.138.38) (Ping timeout: 256 seconds)
[19:22:14] *** Joins: M-blaise (~M-blaise@105.112.138.38)
[19:22:36] <twkm> see what making true and false identities does!
[19:24:10] *** Joins: cosimone (~user@93-47-230-83.ip115.fastwebnet.it)
[19:25:31] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[19:27:25] *** Quits: M-blaise (~M-blaise@105.112.138.38) (Remote host closed the connection)
[19:27:29] <sham1> #define 1 0
[19:27:56] *** Joins: mh3f_ (~mdhowle@spcvpn.sonoco.com)
[19:28:10] *** Joins: manjaroi3 (~manjaro-i@125.131.131.26)
[19:28:28] *** Joins: M-blaise (~M-blaise@105.112.138.38)
[19:30:16] *** Joins: stonkey (~stonkey@user/stonkey)
[19:30:27] *** Quits: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com) (Ping timeout: 256 seconds)
[19:31:18] *** Joins: mahmutov (~mahmutov@5.176.42.160)
[19:33:27] *** Quits: M-blaise (~M-blaise@105.112.138.38) (Ping timeout: 256 seconds)
[19:34:53] *** Joins: AmR (~AmREiSa@41.36.185.103)
[19:34:59] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 256 seconds)
[19:35:45] *** Joins: M-blaise (~M-blaise@105.112.138.38)
[19:37:01] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Quit: Leaving)
[19:38:32] *** Quits: laslmtdbm^ (~laslmtdbm@wsip-98-188-242-61.mc.at.cox.net) (Ping timeout: 240 seconds)
[19:38:45] *** Joins: inlight (~inlight@157.35.56.94)
[19:38:46] *** Quits: inlight (~inlight@157.35.56.94) (Changing host)
[19:38:46] *** Joins: inlight (~inlight@user/inlight)
[19:38:52] *** Quits: freep (~freepppp@62.1.35.210.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[19:40:15] *** Quits: M-blaise (~M-blaise@105.112.138.38) (Remote host closed the connection)
[19:40:32] *** Quits: eddybilley (~freddieti@217.119.232.174) (Ping timeout: 240 seconds)
[19:42:01] *** Joins: M-blaise (~M-blaise@105.112.138.38)
[19:47:29] *** Joins: freep (~freepppp@62.1.35.210.dsl.dyn.forthnet.gr)
[19:49:20] *** Joins: laslmtdbm^ (~laslmtdbm@wsip-98-188-242-61.mc.at.cox.net)
[19:49:40] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:4f71:e483:695e:a1c3)
[19:52:34] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[19:53:47] *** Joins: acidtonic (~acidtonic@162-17-146-153-static.hfc.comcastbusiness.net)
[19:59:56] *** Joins: mh3f__ (~mdhowle@cpe-98-25-217-234.sc.res.rr.com)
[20:01:36] *** Quits: mrig (~mrig@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[20:01:59] *** Joins: nyah (~nyah@94.6.71.219)
[20:02:36] *** Quits: mh3f_ (~mdhowle@spcvpn.sonoco.com) (Ping timeout: 268 seconds)
[20:03:28] *** Quits: herrhotzenplotz (~herrhotze@user/herrhotzenplotz) (Quit: Segmentation fault (core dumped))
[20:03:32] *** Joins: mrig (~mrig@user/mrig)
[20:04:50] *** Joins: herrhotzenplotz (~herrhotze@user/herrhotzenplotz)
[20:05:57] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[20:06:55] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[20:09:08] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[20:09:08] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[20:09:08] *** Joins: wroathe (~wroathe@user/wroathe)
[20:11:01] *** Joins: kl1n3 (~freedom0@libera/staff/kline)
[20:11:49] *** Quits: meator (~meator@user/meator) (Ping timeout: 256 seconds)
[20:13:05] *** Joins: xa0s (~xa0s@mab.sdf.org)
[20:15:58] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[20:16:16] *** Joins: Richard_Cavell (uid165693@id-165693.ilkley.irccloud.com)
[20:16:44] *** Quits: herrhotzenplotz (~herrhotze@user/herrhotzenplotz) (Quit: Segmentation fault (core dumped))
[20:16:55] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[20:17:04] *** Joins: herrhotzenplotz (~herrhotze@user/herrhotzenplotz)
[20:20:55] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Client closed)
[20:23:08] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41) (Ping timeout: 250 seconds)
[20:23:34] *** Quits: MajorBiscuit (~MajorBisc@c-001-025-054.client.tudelft.eduvpn.nl) (Ping timeout: 268 seconds)
[20:28:11] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[20:28:13] *** Joins: Danishman (~Danishman@2-104-144-110-cable.dk.customer.tdc.net)
[20:28:55] *** Joins: meator (~meator@user/meator)
[20:29:44] *** Joins: rgrinberg (~textual@187.223.115.174)
[20:34:17] *** Quits: M-blaise (~M-blaise@105.112.138.38) (Ping timeout: 240 seconds)
[20:34:36] *** Joins: fwg (~fwg@user/fwg)
[20:35:37] *** Quits: meator (~meator@user/meator) (Ping timeout: 256 seconds)
[20:36:06] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293)
[20:38:12] *** Quits: rgrinberg (~textual@187.223.115.174) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:40:32] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 240 seconds)
[20:42:38] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[20:42:50] *** Joins: magla (~gelignite@55d4217a.access.ecotel.net)
[20:43:43] *** Quits: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Ping timeout: 256 seconds)
[20:43:55] *** Quits: skapata (~Skapata@user/skapata) (Quit: Ĝis.)
[20:47:08] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[20:49:13] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 256 seconds)
[20:50:35] *** Joins: Viewday117 (~Viewday@user/viewday)
[20:50:54] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[20:52:47] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[20:52:48] *** Viewday117 is now known as Viewday11
[20:53:21] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[20:53:37] *** Joins: teepee (~teepee@openscad/teepee)
[20:56:56] *** Quits: fe23 (~fe23@2409:8a34:464:4990:41ed:c000:58c1:8c29) (Quit: fe23)
[20:58:05] *** Joins: Darkcoal (~user@139.64.58.149)
[20:58:53] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:25c4:f0c4:39d4:7801)
[21:01:50] *** Joins: acerbic (~acerbic@cs-xdata-50-86-49-24.cspire.com)
[21:02:48] *** Quits: Viewday11 (~Viewday@user/viewday) (Remote host closed the connection)
[21:04:35] *** Joins: lightningwright (~lightning@user/lightningwright)
[21:05:17] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[21:05:32] *** Joins: Viewday111 (~Viewday@user/viewday)
[21:06:07] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-1-225.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[21:07:32] *** Viewday111 is now known as Viewday11
[21:09:36] *** Quits: puke (~puke@user/puke) (Remote host closed the connection)
[21:09:49] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 268 seconds)
[21:09:51] *** Joins: puke (~puke@user/puke)
[21:10:49] *** Joins: lleo (~leo@31-161-154-51.mobile.kpn.net)
[21:11:48] *** Joins: Akiva (~Akiva@user/Akiva)
[21:16:28] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[21:20:18] *** Joins: kit_ten (~u0_a391@2600:380:a451:6557:78fd:fdbf:da0b:386a)
[21:21:41] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[21:22:13] *** Quits: boreas (~Thunderbi@2a00:6020:b006:a900:d250:99ff:fe34:8fd2) (Quit: boreas)
[21:22:46] *** Quits: heiner__ (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2) (Read error: Connection reset by peer)
[21:23:02] *** Joins: tforever (~Terabyte@95.7.167.201)
[21:23:28] *** Quits: tforever (~Terabyte@95.7.167.201) (Client Quit)
[21:24:00] *** Quits: kit-ten (~u0_a391@2603-6010-a141-6fa3-950d-0150-5311-7e6b.res6.spectrum.com) (Ping timeout: 268 seconds)
[21:24:47] *** Joins: nicode (~nic@2607:f2c0:946d:3800:7702:bdd5:2eed:e4f0)
[21:25:08] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Client Quit)
[21:27:20] *** Joins: pulse (~pulse@user/pulse)
[21:27:22] *** Joins: boreas (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[21:27:28] *** Joins: heiner (~Thunderbi@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[21:27:58] *** Joins: torstenvl (~torstenvl@2600:1003:b111:89fc:4590:fd1f:9a4:4766)
[21:28:37] *** Quits: torstenvl (~torstenvl@2600:1003:b111:89fc:4590:fd1f:9a4:4766) (Client Quit)
[21:32:37] *** Joins: GIR0001 (~GIR@64.145.93.51)
[21:33:11] *** Joins: stonkey (~stonkey@user/stonkey)
[21:35:57] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[21:37:23] *** Joins: steve__ (~steve@ool-182c2b80.dyn.optonline.net)
[21:40:16] *** Quits: acerbic (~acerbic@cs-xdata-50-86-49-24.cspire.com) (Read error: Connection reset by peer)
[21:46:46] *** Joins: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a)
[21:46:55] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[21:49:47] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[21:50:13] *** Quits: lightningwright (~lightning@user/lightningwright) (Quit: Leaving)
[21:50:52] *** Joins: stonkey2 (~stonkey@user/stonkey)
[21:50:59] *** Quits: gdd (~gdd@129.199.146.230) (Ping timeout: 256 seconds)
[21:51:32] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 240 seconds)
[21:51:33] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 256 seconds)
[21:51:42] *** Joins: kspalaiologos (~kspalaiol@user/kspalaiologos)
[21:52:07] *** Quits: stonkey2 (~stonkey@user/stonkey) (Remote host closed the connection)
[21:52:25] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[21:52:27] *** Joins: stonkey (~stonkey@user/stonkey)
[21:52:31] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[21:54:34] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[21:55:50] *** Quits: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a) (Read error: Connection reset by peer)
[21:56:41] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[21:57:00] *** Joins: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a)
[21:57:56] *** Quits: kspalaiologos (~kspalaiol@user/kspalaiologos) (Quit: Leaving)
[21:58:54] *** Quits: inlight (~inlight@user/inlight) (Remote host closed the connection)
[21:58:58] *** Joins: Viewday110 (~Viewday@user/viewday)
[21:59:51] *** Quits: Waynes (~Waynes@user/waynes) (Quit: Leaving.)
[22:00:26] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[22:00:27] *** Viewday110 is now known as Viewday11
[22:00:35] *** Quits: oxfuxxx (~oxfuxxx@185.156.174.6) (Remote host closed the connection)
[22:00:38] *** Quits: iomari891 (~iomari891@197.210.71.107) (Ping timeout: 250 seconds)
[22:01:28] *** Quits: lleo (~leo@31-161-154-51.mobile.kpn.net) (Read error: Connection reset by peer)
[22:02:58] *** Joins: anddam (~anddam@user/anddam)
[22:04:16] <anddam> howdy, is considered bad practice to write the statement of an if without curly braces if it's a single expression?
[22:04:46] *** Joins: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[22:06:11] <sham1> Depends
[22:06:20] *** Quits: pucara (~i@host14.181-1-101.telecom.net.ar) (Quit: Lost terminal)
[22:06:31] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[22:07:17] <sham1> There is no one style guide out there. Of course having braces everywhere means that you can't run into the `goto fail;` thing, although that can be caught by static analysis and compiler warnings
[22:09:08] <sham1> I personally like to add braces, even on a single line
[22:09:31] <omegatron> you should use them, together wih a sane indentation, to make your code human readable .. nested ifs and loops without them are hard to read, especially if someone needs to make corrections
[22:09:50] <sham1> Yeah, having block structure helps with structural editing
[22:09:52] <apotheon> anddam: I like the approach outlined at https://copyfree.fossrec.com/index.cgi/wiki?name=Style but whatever you choose someone out there is going to complain.
[22:10:16] <apotheon> anddam: There are many different coding styles for C, and which is considered "correct" depends on what community you meet.
[22:10:58] <oldlaptop> anddam: You'll see a lot of people who don't insist on curly braces for *all* conditional and loop bodies insist that any conditional or loop body without braces be on the same line as the condition.
[22:11:15] <oldlaptop> if (predicate()) foo(); // like so
[22:11:20] <apotheon> wow
[22:11:31] <apotheon> oldlaptop: You just described the approach I linked.
[22:11:46] <oldlaptop> So I did
[22:12:11] <sham1> if (predicate()) { foo(); }
[22:12:23] <ChoHag> anddam: Ensure it's readable and correct.
[22:12:30] <sham1> That's pretty much verbatim what I would write. Although clang-format might disagree
[22:12:35] <pragma-> pattern-matching when?
[22:12:52] <apotheon> when using a different language
[22:12:57] <sham1> After the year of the ReactOS desktop
[22:13:17] <apotheon> MS Windows is becoming the ReactOS desktop.
[22:13:21] <apotheon> gradually
[22:13:41] <sham1> I've tried ReactOS years ago. It's a neat project
[22:13:45] <apotheon> I'm starting to wonder whether Windows is going to become a Windows portability layer on top of a Linux kernel.
[22:14:05] <sham1> I don't think so. NT is in many ways just ahead of Linux
[22:14:45] <sham1> But I could see WSL becoming a bigger part of the Windows experience
[22:15:14] <sham1> Making it more integrated into the product and such
[22:15:43] <apotheon> I'm not sure Windows is going to be worth the expense of developing as a whole different OS for much longer.
[22:16:32] <apotheon> Microsoft pours shit-tons of money into an OS that is rapidly losing relevance except as a way to run old software.  MS is even porting a lot of its software to Unixy systems (e.g. .NET Core and Edge Browser).
[22:16:38] <apotheon> shit
[22:16:44] <apotheon> I'm way off-topic, I think.  I'll stop here.
[22:17:05] *** Joins: Atque (~Atque@user/atque)
[22:19:24] *** Joins: moog (~moog@107.112.217.106)
[22:20:28] <bionade24> Can I have a shared object which itself is statically linked or is that impossible?
[22:21:34] *** Quits: magla (~gelignite@55d4217a.access.ecotel.net) (Quit: Stay safe!)
[22:21:46] <omegatron> llvm does that  (compiling stuff into static libs - and then produce one large shared lib, if you want)
[22:22:44] <sham1> I don't see why not. Static libraries are just archives of object files. You can certainly link them into shared libraries
[22:22:57] <bionade24> omegatron: I want a shared object which will be loaded optionally to not depend on other shared objects.
[22:23:00] <omegatron> https://llvm.org/docs/CMake.html  search for 'BUILD_SHARED_LIBS'
[22:23:01] <candide> Title of omegatron's link: Building LLVM with CMake — LLVM 13 documentation
[22:23:16] *** Joins: magla (~gelignite@55d4217a.access.ecotel.net)
[22:23:57] *** Joins: lunix00 (~lunix00@2804:14c:6321:900d:c0b2:a7ad:8aa7:4387)
[22:25:15] <omegatron> as sham1 said, usually this is no problem - an .a file is "just" one or more object files packed into one file - there are certain things to consider under certain circumstances, but it's probable you won't run into them
[22:25:56] <omegatron> eh  s/probable you won't run into them/unlikely you will run into them/
[22:26:07] <omegatron> I think I need more alcohol
[22:26:59] <sham1> The cause of, and the solution to, all of life's problems
[22:27:17] <omegatron> cheers!
[22:27:45] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[22:27:50] * omegatron preparing another glass of absinth
[22:28:11] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[22:30:09] <anddam> thanks for the feedback
[22:31:04] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[22:32:20] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Remote host closed the connection)
[22:32:35] *** Joins: tech_exorcist_ (txrcst@user/tech-exorcist/x-0447479)
[22:32:44] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[22:33:09] *** Quits: tech_exorcist_ (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[22:33:17] *** Joins: meator (~meator@user/meator)
[22:34:47] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Ping timeout: 256 seconds)
[22:35:39] *** Joins: Viewday118 (~Viewday@user/viewday)
[22:37:37] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[22:37:38] *** Viewday118 is now known as Viewday11
[22:38:50] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:14be:59d4:43c7:c828)
[22:40:10] *** Quits: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:40:15] *** Quits: alch (~alch@to-18-71-145.service.infuturo.it) (Read error: Connection reset by peer)
[22:41:09] *** Joins: karakedi (~eAC53C340@user/karakedi)
[22:42:03] *** Joins: gaude (~gaude@114-39-142-46.pool.kielnet.net)
[22:44:22] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:25c4:f0c4:39d4:7801) (Quit: Quit)
[22:45:04] *** Quits: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:07] *** Joins: alch (~alch@mi-18-35-182.service.infuturo.it)
[22:45:30] *** Quits: GIR0001 (~GIR@64.145.93.51) (Quit: Leaving)
[22:47:03] *** Joins: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com)
[22:47:27] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[22:51:50] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[22:52:02] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:52:20] *** Quits: fwg (~fwg@user/fwg) (Quit: .oO( zzZzZzz ...)
[22:55:18] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:dc9:6189:5e0d:b006)
[22:56:35] *** Joins: fwg (~fwg@user/fwg)
[22:58:21] *** Joins: strajder (~strajder@user/strajder)
[22:58:53] *** Joins: Viewday113 (~Viewday@user/viewday)
[23:00:26] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[23:00:27] *** Viewday113 is now known as Viewday11
[23:02:58] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[23:03:19] *** Joins: FluffyMask (~masque@user/fluffymask)
[23:03:52] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[23:04:43] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:c94d:2005:ed45:6900)
[23:04:43] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:c94d:2005:ed45:6900) (Changing host)
[23:04:43] *** Joins: skapata (~Skapata@user/skapata)
[23:06:17] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[23:06:20] *** Quits: lunix00 (~lunix00@2804:14c:6321:900d:c0b2:a7ad:8aa7:4387) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:06:32] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[23:09:42] *** Quits: cart_man (~rynot@host-78-144-125-214.as13285.net) (Quit: Konversation terminated!)
[23:09:55] *** Joins: malina (~malina@user/malina)
[23:10:35] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[23:10:36] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[23:11:54] *** Joins: Akuli (~Akuli@82-203-166-101.bb.dnainternet.fi)
[23:12:38] <omegatron> when function designations reach a length of 90, it's time to think about breaking up the code into smaller units ..   -_-
[23:13:01] *** Joins: Viewday114 (~Viewday@user/viewday)
[23:13:20] *** Joins: Vrganj (~vrganj@93-138-56-207.adsl.net.t-com.hr)
[23:13:36] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[23:13:58] *** Quits: bliminse (~bliminse@host86-188-36-178.range86-188.btcentralplus.com) (Quit: leaving)
[23:15:23] *** Joins: seninha (~seninha@user/seninha)
[23:15:37] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 268 seconds)
[23:15:37] *** Viewday114 is now known as Viewday11
[23:16:38] *** Joins: Kerr7 (~Kerr@2600:387:c:6c10::7)
[23:16:51] *** Quits: Oddity (~Oddity@user/oddity) (Remote host closed the connection)
[23:18:14] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[23:18:30] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[23:21:17] *** drocan_ is now known as drocan
[23:24:47] *** Joins: slidercrank (~slidercra@user/slidercrank)
[23:27:27] <sham1> It very much is
[23:27:33] <sham1> Or pass parameters as struct
[23:28:06] *** Joins: bliminse (~bliminse@host86-188-36-178.range86-188.btcentralplus.com)
[23:30:53] <omegatron> ah most functions receive no or only a few parameters - it's really the 'name' - this way I can implement the stuff first, based on a strict hierarchy, doing some pseudo-oop and then much later, when it's known for sure that stuff can be parameterized, we will do that (because of all the edge cases and, well, customers)
[23:31:06] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[23:31:24] <omegatron> it ends up as a 'state machine'-alike anyway, but our customers like to use long identifiers to reference edge cases
[23:31:53] *** Quits: Vrganj (~vrganj@93-138-56-207.adsl.net.t-com.hr) (Remote host closed the connection)
[23:32:15] *** Joins: Vrganj (~vrganj@93-138-56-207.adsl.net.t-com.hr)
[23:35:54] <omegatron> ... and in general the whole api ..
[23:36:25] *** Quits: kts (~kts@103.73.237.109) (Remote host closed the connection)
[23:36:34] *** Quits: Darkcoal (~user@139.64.58.149) (Quit: Darkcoal)
[23:36:50] *** Joins: kts (~kts@103.73.237.109)
[23:37:04] *** Quits: luca0N (~luca0N@nautilus.luca0n.com) (Quit: Leaving)
[23:37:24] *** Joins: luca0N (~luca0N@nautilus.luca0n.com)
[23:37:48] *** luca0N is now known as Guest6153
[23:39:10] *** Guest6153 is now known as luca0N
[23:41:27] *** Quits: Kerr7 (~Kerr@2600:387:c:6c10::7) (Quit: Client closed)
[23:43:32] *** Quits: almaember (~user@1F2EA950.dsl.pool.telekom.hu) (Ping timeout: 240 seconds)
[23:43:36] *** Quits: mh3f__ (~mdhowle@cpe-98-25-217-234.sc.res.rr.com) (Quit: Leaving)
[23:45:58] *** Joins: constxd_ (~brad@142.167.170.88)
[23:46:41] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[23:47:37] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[23:47:53] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Ping timeout: 256 seconds)
[23:48:32] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 250 seconds)
[23:49:10] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[23:50:14] *** Joins: Atque (~Atque@user/atque)
[23:51:38] <constxd_> kings
[23:53:27] *** NotApplicable is now known as kit
[23:55:53] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[23:56:14] <constxd_> can u really not have thread local objects with function scope
[23:58:16] <constxd_> oh nvm u write static _Thread_local
[23:58:28] *** Quits: Sos (~Sos@d107-222.icpnet.pl) (Quit: Leaving)
