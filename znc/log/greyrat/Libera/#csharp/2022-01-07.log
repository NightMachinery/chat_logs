[00:00:04] <MatthiasVance> It can have bugs?
[00:00:04] <MatthiasVance> :P
[00:00:18] *** Joins: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc)
[00:00:27] <lz_> ki9a: lol
[00:00:47] <lz_> downloads: 1.5M/month wtf
[00:00:59] <ki9a> I think a basic react or vue site has over 2k dependencies
[00:01:12] <ki9a> it doesn't do anything yet at that point
[00:05:40] <MatthiasVance> That's a bit unfair?
[00:05:51] <MatthiasVance> That's like ".NET is several hundred MB and it doesn't do anything at that point"
[00:06:03] <MatthiasVance> *BCL
[00:06:35] <irwiss> not really, .NET bcl is written by 1 company and has some guarantees of "security", npm is the wild west
[00:07:08] <MatthiasVance> Oh I totally agree
[00:12:57] <brianonymous> wait.. theres a package for odd?
[00:13:29] <irwiss> believe it or not there's even a package for is even
[00:13:36] <brianonymous> 8|
[00:13:40] <irwiss> guess what it depends on?
[00:13:45] <brianonymous> lol, noooo
[00:14:36] <brianonymous> and i made the mistake of looking at the source.. return (n % 2) === 1;
[00:15:30] <brianonymous> they werent serious, right? this is a meme repo?
[00:16:04] <MatthiasVance> irwiss: LIES
[00:16:07] <MatthiasVance> I so hope
[00:16:08] <MatthiasVance> :D
[00:16:16] <brianonymous> i mean, you never really know
[00:16:17] <MatthiasVance> VS Code is confusing the fuck out of me
[00:16:41] <MatthiasVance> Or maybe it's Ionide
[00:18:48] <irwiss> brianonymous: may be or may be not, but serious repos don't give a shit and depend on it anyway, probably removed the dependency by now cause this stupidity has been in the news a few times but iirc it had stupid amount of downloads cause it was transient of some other popular package
[00:19:13] <brianonymous> jeeesus
[00:19:16] <irwiss> like let's be real, nobody really audits js dependencies cause everyone knows it's a stinking pile of shit to dig in
[00:22:04] <irwiss> brianonymous: apparently they're non-meme repos, there's some links into author's twitter https://www.reddit.com/r/programming/comments/886zji/why_has_there_been_nearly_3_million_installs_of/dwin4u8/
[00:24:37] <brianonymous> thats absolutely horrible
[00:40:46] <lz_> hopefully hackers won't audit js dependencies either because they have some dignity
[00:41:37] <lz_> lmao is-even
[00:41:57] <lz_> should I create a "isTrue()" one
[00:42:28] <lz_> nevermind https://www.npmjs.com/package/is-true
[00:43:17] <lz_> https://github.com/jonschlinkert/is-true/issues/1
[00:43:47] <lz_> I guess it has become just a joke https://www.npmjs.com/package/is-false
[00:45:59] <lz_> "I can't think of another language that even has (or needs) the concept of tree shaking"
[00:46:02] <lz_> lmao js is another world
[00:46:21] <lz_> it's like all the bad student got together and thought "let's make a programming language!"
[00:49:05] <ki9a> MatthiasVance: what I don't like is that node can't really even be used (practically) without something like webpack
[00:50:43] <lz_> i had a friend with a giant perl codebase
[00:51:06] <lz_> one day he realized his codebase was a giant pile of shit and he wanted to clean it up. So he thought about writing it in JS
[00:51:27] <lz_> I didn't have a job; he proposed me to do it and I said no
[00:51:43] <lz_> I'd rather clean mcdonald's restrooms
[00:57:11] <lz_> I'm still battling with python dependencies and I want to die
[01:11:36] *** Joins: MaNa2k (~MaNa2k@224.81-166-66.customer.lyse.net)
[01:16:53] *** Joins: bin101_ (~bin101@user/bin101)
[01:17:19] *** Quits: bin101 (~bin101@user/bin101) (Ping timeout: 256 seconds)
[01:26:04] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[01:29:20] *** Quits: moose (~moose@user/moose) (Quit: Leaving)
[01:30:55] *** Quits: MaNa2k (~MaNa2k@224.81-166-66.customer.lyse.net) (Ping timeout: 256 seconds)
[01:31:13] *** Joins: jamea (~jamea@189.237.44.68)
[01:32:46] *** Joins: wroathe (~wroathe@user/wroathe)
[01:33:40] <wroathe> So I'm running into https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/compiler-messages/cs0826 when trying to accept an array of tuples that contain an object field: void Foo((string, object, SqlDbType)[] parameters) { ... }
[01:34:28] <jonp> wroathe: what's the call site?
[01:34:28] <wroathe> When I call my function like Foo(new [] { ("foo", 1, SqlDbType.Bit), ("bar", "test", SqlDbType.NVarChar) });
[01:34:35] <jonp> ah
[01:34:49] <jonp> you need casting
[01:34:51] <wroathe> Obviously I can give it an explicit type
[01:35:01] <jonp> or that.
[01:35:06] <wroathe> But my goal for this API was to make the call site's syntax as simple as possible
[01:35:13] <wroathe> And I was hoping inference would work here
[01:35:21] <jonp> then perhaps a tuple isn't the best idea.
[01:35:34] <wroathe> My second thought was, if I need to explicitly type the array I could live with that if C# supported type aliases
[01:35:37] <wroathe> So that's my question
[01:35:41] <wroathe> Does C# support type aliases for tuple types?
[01:35:52] <jonp> i would think so
[01:36:01] <wroathe> So I can do Foo(new Parameter[] { (...), (...) });
[01:36:17] <wroathe> What's the syntax for that?
[01:37:12] <wroathe> What did you mean by "you need casting"?
[01:37:18] <wroathe> As in (object) before each value in the second field?
[01:37:21] <jonp> but no, you can't use an alias for a tuple.  TIL.
[01:37:50] <jonp> wroathe: `new[]{ ("foo", (object) 1, SqlDbType.Bit), ("bar", (object) "test", SqlDbTypeNVarChar) }` likely would work
[01:38:02] <jonp> note the cast to ensure that the 2nd item is `object`, and not `int`/`string`
[01:38:07] <wroathe> Yeah, that would work too, but that's not an option on the table for me :P
[01:38:16] <jonp> i would suggest declaring a new struct
[01:38:37] <wroathe> Foo(new (string, object, SqlDbType)[] { (...), (...) }; works
[01:38:49] <wroathe> But I'd like to avoid requiring the user to type out the full tuple type for each invocation
[01:38:53] <jonp> indeed.  and sucks.
[01:39:00] <wroathe> Hence the ask about the type alias
[01:39:06] <wroathe> And yeah, a struct was my other thought too
[01:39:14] <jonp> type alias is differently bad: you need to copy that alias into every file you use it.
[01:39:35] <wroathe> Well, in C# maybe. I was just asking if they had the concept of exportable type aliases :P
[01:40:07] <jonp> C#10 does, kinda
[01:40:16] <wroathe> The struct route would be Foo(new [] { new Parameter(...), new Parameter(...) });
[01:40:16] <jonp> but using that for a tuple isn't straightforward
[01:40:28] <wroathe> Which is again annoying, because of the repetition
[01:40:46] <wroathe> Unless there's a better syntax for initializing an array with structs that I'm not aware of?
[01:40:51] <jonp> i might have a crazy-ass idea
[01:40:53] <jonp> ooh
[01:41:21] <wroathe> I don't normally C#
[01:41:48] <wroathe> So I'm applying my C/Haskell/Javascript functional programming nonsense to trying to write it
[01:41:53] <wroathe> And that's working out both well and poorly at the same time
[01:44:04] <jonp> wroathe: https://dotnetfiddle.net/7vDsLv
[01:44:11] <jonp> arguably crazy pants, but it builds!
[01:44:58] <wroathe> HAHAHA
[01:45:03] <wroathe> I did exactly that just like 30 minutes ago
[01:45:06] <jonp> using a C#10 `record struct` would be better, but I suspect you're not able to use C#10
[01:45:18] <wroathe> No, not yet, and yes I looked into records too
[01:45:42] <jonp> if you did that 30min ago, you already have the answer!
[01:46:01] <wroathe> Well, yes and no. I wasn't quite happy with it
[01:46:18] <jonp> so why weren't you happy with it?
[01:46:24] <wroathe> I can't articulate it :P
[01:46:32] <wroathe> But I'll probably have to settle for it
[01:46:58] <wroathe> I liked the explicit array, just because this input is conceptually a list of objects, and the idea of using a variadic function just for that seemed weird to me
[01:47:04] <wroathe> Yes, I can articulate it
[01:47:15] <jonp> that's fair
[01:47:47] <wroathe> Anyway, thanks for letting me rubber duck with you on this
[01:47:59] <wroathe> I just wanted to make sure I wasn't skipping something obvious for handling that tuple type case
[01:48:00] <jonp> so you do: https://dotnetfiddle.net/9gqCMO
[01:48:16] <wroathe> Yup, exactly that
[01:48:21] <wroathe> And yes, that's probably the route I'll go with
[01:48:32] <wroathe> I had tried that too. I'm in here just weighing my options ;)
[01:49:02] *** Joins: Tailslide (~Tailslid3@S0106c09435fdc449.cg.shawcable.net)
[01:49:03] <wroathe> I think I liked the tuple approach I was asking about above because I wanted to avoid having to define an explicit type just for this too
[01:49:16] <jonp> C# loves types
[01:49:21] *** Joins: destroycomputers (~destroyco@68-177-178-143.ftth.glasoperator.nl)
[01:49:27] <jonp> defining an explicit type *is* the better path
[01:49:42] <wroathe> Indeed, but (string, object, SqlDbType) is that type
[01:49:50] <wroathe> Without me needing the 10 extra lines to define it
[01:49:59] <jonp> with `record struct`, it's 3!
[01:50:05] <wroathe> Yeah, I saw taht
[01:50:06] <wroathe> that*
[01:50:13] <jonp> or use `record`, and take the GC hit
[01:50:18] <jonp> which would also be 3
[01:50:31] <Tailslide> If I want to interactively compile and run a dotnet command line app inside docker through console how do I do that?  The sdk image just exits if I start it up.
[01:50:42] <wroathe> jonp: Anyway, thanks again for your help :)
[01:50:47] <jonp> np
[01:56:34] <Tailslide> For posterity.. sudo docker run -it --rm -v /volume1/docker/dotnetsrc:/src mcr.microsoft.com/dotnet/sdk:6.0
[01:59:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[02:01:29] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Client closed)
[02:02:02] *** Joins: moose (~moose@user/moose)
[02:07:35] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[02:07:36] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[02:07:36] *** Joins: wroathe (~wroathe@user/wroathe)
[02:12:25] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[02:19:13] *** Quits: diophantoz (~diophanto@user/diophantoz) (Ping timeout: 256 seconds)
[02:23:51] *** Quits: Tazy (~Tazmainia@192-143-89-108.ip.airmobile.co.za) (Quit: Leaving)
[02:28:43] *** Quits: jamea (~jamea@189.237.44.68) (Ping timeout: 256 seconds)
[02:32:31] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[02:33:17] <edcba> i am surprised the sdk image defaults to run a project
[02:35:05] <edcba> so yeah it doesn't
[02:37:24] <Tailslide> Oh wow.. I know I am probably the last person to do this but debugging with visual studio in windows and publishing ubuntu binaries is game changing. So nice.
[02:41:37] *** Quits: bin101_ (~bin101@user/bin101) (Ping timeout: 240 seconds)
[02:44:38] *** Joins: bin101 (~bin101@user/bin101)
[02:53:14] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[02:53:14] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[02:53:14] *** Joins: wroathe (~wroathe@user/wroathe)
[02:53:36] *** Quits: alguien (~alguien@user/alguien) (Quit: Leaving)
[02:54:02] *** Quits: Lukky (~Lukky@modemcable248.39-20-96.mc.videotron.ca) (Remote host closed the connection)
[03:01:14] <edcba> yeah we stop debugging here :)
[03:02:02] <brianonymous> Tailslide: its pretty rad.. super easy to docker too
[03:03:02] *** Quits: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc) (Ping timeout: 240 seconds)
[03:03:44] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:16:20] *** Quits: asa22 (~asa22@84.125.126.8.dyn.user.ono.com) (Ping timeout: 256 seconds)
[03:16:43] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[03:18:58] *** Joins: jamea (~jamea@200.68.141.29)
[03:20:24] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Client closed)
[03:23:58] *** Joins: asa22 (~asa22@84.125.126.8.dyn.user.ono.com)
[03:31:03] *** Quits: bin101 (~bin101@user/bin101) (Ping timeout: 256 seconds)
[03:32:41] *** Joins: bin101 (~bin101@user/bin101)
[03:35:33] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[03:37:57] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[03:46:56] <bpmedley> Tailslide : I agree.  The ease of cross-platform publishing is amazing.
[03:58:17] *** Quits: jamea (~jamea@200.68.141.29) (Ping timeout: 240 seconds)
[04:06:32] *** Quits: Dash (~Dash@arthur.lan.ox.rs) (Ping timeout: 240 seconds)
[04:06:41] *** Joins: Dash (~Dash@arthur.lan.ox.rs)
[04:08:36] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Read error: Connection reset by peer)
[04:09:54] *** Joins: learningc (~IceChat95@modemcable253.161-226-192.mc.videotron.ca)
[04:10:43] <learningc> How can I read an attribute in an XML file?
[04:14:40] *** Joins: kstatz12 (~karl.stat@205.178.87.116)
[04:25:14] *** Joins: jamea (~jamea@177.239.81.39)
[04:33:44] *** Joins: khanred (~khanred@user/khanred)
[04:34:00] <khanred> o/
[04:38:30] *** Joins: Lukky (~Lukky@142.169.78.238)
[04:38:38] <Lukky> Good evening
[04:56:23] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[05:00:47] *** Joins: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc)
[05:09:12] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[05:20:02] *** Quits: khanred (~khanred@user/khanred) (Quit: Leaving)
[05:36:41] <edcba> use a class representing xml and then use a xml deserializer
[05:37:02] *** Joins: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net)
[05:44:47] *** Joins: Brett[Air] (~Brett@124.148.79.4)
[05:46:38] *** Joins: Lukky_ (~Lukky@modemcable248.39-20-96.mc.videotron.ca)
[05:48:45] *** Quits: Lukky (~Lukky@142.169.78.238) (Ping timeout: 256 seconds)
[06:22:17] *** Quits: Lukky_ (~Lukky@modemcable248.39-20-96.mc.videotron.ca) (Ping timeout: 240 seconds)
[06:45:39] *** Parts: wroathe (~wroathe@user/wroathe) ()
[06:51:01] *** Quits: Roughy (~mdaw45ns@user/roughy) (Quit: Meadow Fresh milk)
[07:11:59] <learningc> edcba: which class library would be a good choice?
[07:14:57] *** Quits: destroycomputers (~destroyco@68-177-178-143.ftth.glasoperator.nl) (Ping timeout: 240 seconds)
[07:30:53] *** Quits: kstatz12 (~karl.stat@205.178.87.116) (Remote host closed the connection)
[07:44:17] *** Quits: learningc (~IceChat95@modemcable253.161-226-192.mc.videotron.ca) (Ping timeout: 240 seconds)
[07:55:38] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[07:56:23] *** Quits: Tailslide (~Tailslid3@S0106c09435fdc449.cg.shawcable.net) (Ping timeout: 256 seconds)
[08:03:07] <JakeSays> bitches
[08:15:35] <JakeSays> in case any of y'all have to deal with phone numbers: https://github.com/twcclegg/libphonenumber-csharp
[08:17:14] <brianonymous> too tired to telephone
[08:17:32] <JakeSays> brianonymous: you old bastard
[08:17:43] <brianonymous> work is killin me \o/
[08:18:14] <JakeSays> just retire and build shit
[08:18:26] <brianonymous> im stuck for at least 2 years
[08:18:51] <JakeSays> why is that?
[08:19:04] <brianonymous> got acquired again, new situation
[08:19:16] <JakeSays> really?
[08:19:34] <JakeSays> wide orbit was acquired, or just your bits?
[08:19:39] <brianonymous> just our bits
[08:19:43] <JakeSays> oh wow
[08:19:55] <JakeSays> what happened there?
[08:20:09] <brianonymous> https://www.mediavillage.com/article/audacys-acquires-wideorbit-streaming-unit-expanding-its-audio-capabilities/
[08:20:25] <brianonymous> now work for actual radio group
[08:20:56] <brianonymous> that part is kinda nice. very focused
[08:21:05] <JakeSays> so you're amperwave now?
[08:21:12] <brianonymous> i am.. audacy/amperwave
[08:21:33] <JakeSays> wow. this a good thing?
[08:21:43] <brianonymous> good at many levels, ya
[08:21:51] <brianonymous> you know iheartradio?
[08:22:00] <JakeSays> heard of it, yeah
[08:22:19] <brianonymous> we are #2 to that, attempting the #1 spot :D
[08:22:28] <JakeSays> wow
[08:22:53] <brianonymous> CBS Radio + Entercom + a bunch of other groups merged together and made Audacy
[08:23:34] <JakeSays> even with all that delphi
[08:23:53] <brianonymous> actually i get to retire those bits.. well, except for stations coming along for the ride
[08:24:03] <brianonymous> ive already replaced it with c# bits
[08:24:43] <brianonymous> thats a hard nut to crack tho, cuz theres still 1200 stations running that thing
[08:24:47] <JakeSays> so is there a financial upside for you personally with the acquisition?
[08:24:49] <brianonymous> the delphi one
[08:24:57] <brianonymous> there is
[08:25:01] <JakeSays> good
[08:25:16] <brianonymous> and 2 years is a part of all the things
[08:25:23] <JakeSays> right. makes sense
[08:25:46] <JakeSays> very cool dude. i like to see people succeed like that.
[08:26:39] <JakeSays> so your WideOrbit is now NarrowOrbit. lol
[08:26:45] <brianonymous> thanks! but holy jesus, i havent been so busy since start up times
[08:27:10] <brianonymous> yeah, wideorbit was cool, but i kinda felt like a pet project
[08:27:16] <brianonymous> they are more tv broadcast folks
[08:27:21] <JakeSays> that's a lot harder to do after you haven't had to do it for a while
[08:27:55] <brianonymous> yeah, it is
[08:28:13] <brianonymous> i cant do the 24-48hr days like that.. so 10-12 it is XD
[08:28:49] <JakeSays> lol. i can relate. i used to do those days with ease. now my brain turns to mush after 14 tops
[08:29:02] <brianonymous> yeah, fuq that noise
[08:29:09] <brianonymous> too old for that shit
[08:29:38] <JakeSays> sometimes i miss it though
[08:30:38] <brianonymous> not gonna lie, i never expected stuff like this twice
[08:31:01] <JakeSays> it's a double lightning strike
[08:31:16] <brianonymous> the scale is much larger too
[08:31:57] *** Quits: jonp (~jonp@about/csharp/jonp) (Ping timeout: 240 seconds)
[08:32:02] *** Joins: jonp` (~jonp@about/csharp/jonp)
[08:32:02] <brianonymous> a hint of what i mean https://rainnews.com/audacy-acquires-a-portion-of-wideorbit-for-streaming-audio-tech/
[08:32:02] *** ChanServ sets mode: +v jonp`
[08:32:23] <brianonymous> the first time was way not that. lol.
[08:34:44] <brianonymous> the part that sucks so hard right now, is i lost my only other stream codin coworker to management. so now im the only mofo writing actual streaming code. i cant keep up
[08:35:39] <JakeSays> brianonymous: dude you shouldn't be coding.
[08:35:59] <brianonymous> well, as management puts it - there are people leaders, and thought leaders
[08:36:24] <JakeSays> you should be the group cto or something
[08:36:49] <brianonymous> im principal.. so for stream tech direction, yes
[08:37:27] <brianonymous> trying real hard to hire peeps
[08:37:31] <JakeSays> was morris part of the original abacast?
[08:37:45] <brianonymous> yeah, we go back 20 years.. one of my best friends
[08:37:54] <JakeSays> that's cool
[08:39:27] <brianonymous> we like to joke that in a few years we will have been doing this for half our lives
[08:39:32] <brianonymous> saaadly joke :)
[08:39:45] <JakeSays> that's not a bad thing at all
[08:40:02] <JakeSays> well, other than the getting old part. lol
[08:40:17] <brianonymous> lol yeah.. we were 23 when abacast fired up
[08:40:37] <JakeSays> holy shit - the wide orbit deal was back in '14.
[08:40:41] <brianonymous> yup
[08:40:51] <JakeSays> i remember that
[09:03:25] *** Quits: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc) (Ping timeout: 240 seconds)
[09:09:39] *** Joins: Assault (~Assault@87-95-55-3.bb.dnainternet.fi)
[09:48:28] <asa22>  The name 'AdditionalDriverObject' does not exist in the current context
[09:48:43] <asa22> Im getting this build errors because the object is inside of an if statement
[09:48:52] <asa22> because I dont always need to make the object
[09:49:01] <asa22> if the object is made then I use it, if it isnt then I dont
[09:49:17] <asa22> how do I avoid getting this errors
[09:49:42] <asa22> or do I have to always make it even if its not gonna be used
[09:51:35] *** Joins: ravindUwU (~ravindUwU@user/ravinduwu)
[09:58:52] <jmer> asa22: you need to define the variable in an outer scope, but you're not forced to assign something to it before you need to (but ofc. you need to do null checks accordingly)
[10:06:08] <ap5> Herrlo
[10:06:57] <asa22> jmer how do I define it without initializing
[10:07:06] <asa22> its a class object
[10:07:33] <asa22> if I just do var AdditionalDriverObject; in the outer scope it gives me an error saying implicit variables must be initialized
[10:08:01] <ap5> var AdditionalDriverObject = default!
[10:08:44] <asa22> there is no target type for the default literal
[10:09:07] <ravindUwU> ap5, the compiler can't infer the type
[10:09:17] <ap5> Ofc :D
[10:09:24] <ap5> Good morning to me
[10:09:45] <ap5> YourObject AdditionalDriverObject = default!;
[10:10:28] <asa22> oh thank you
[10:10:30] <asa22> it works now
[10:10:58] <ap5> I usally have that IMPACT on things. I make it work. Occasionally in the right way
[10:11:05] <asa22> ^^
[10:12:20] <ravindUwU> :3
[10:12:25] *** Quits: ravindUwU (~ravindUwU@user/ravinduwu) (Quit: KTHXBAI)
[10:17:14] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[10:18:40] <jmer> pretty sure I've fixed more than one of your bugs ap5
[10:19:45] <ap5> jmer, you were on TDC after Niclas did a complete rewrite :) I am pretty sure you fixed a lot of his errors that he introduced because he didn't wanted to maintain the integration tests :D
[10:20:00] <ap5> My code is purfect ;)
[10:23:46] <jmer> hehehehe
[10:23:51] <jmer> blame Niclas! ofc. :D
[10:24:41] <ap5> I am not ... He is a good dev. TDC was the result of the IMPACT spirit of rushing through, not getting time to rewrite anything
[10:25:27] <jmer> hahaha
[10:25:31] <jmer> I know, I know
[10:25:49] <jmer> also don't forget their strategy of underpaying their employees
[10:26:47] <ap5> :D
[10:28:32] <ap5> I am glad i am finally done with that company, to be honest
[10:28:42] <jmer> Hell yes.
[10:29:04] <ap5> Liked the culture and the people on the floor. Hated the strategy and vision
[10:29:16] <jmer> they're the prime example of "agile" done wrong in almost every category xD
[10:29:24] <ap5> :D
[10:29:27] <jmer> ap5: you know, what you just said sums that up perfectly
[10:29:42] <ap5> Nothing agile about a waterfall
[10:29:52] <jmer> It was tough to leave for me because of the people, but who the fuck can say no to 30% pay increase xD
[10:30:14] *** Joins: kobo (~kobo___@c-d02b225c.029-1613-6f72651.bbcust.telenor.se)
[10:32:44] <ap5> xD
[10:33:26] <jmer> at least I can't... anyways
[10:33:37] <jmer> it wasn't really better at the new place...
[10:33:44] <jmer> they just paid more... but still pretty bad management practices
[10:36:13] <ap5> As i said yesterday: i like money
[10:43:12] <jmer> it's hard to live without it
[10:52:05] <asa22> I really hate scopes in this language
[10:52:11] <asa22> cant I just make everything accesible everywhere
[10:53:00] <jmer> Nothing but common sense is preventing you from making global variables for everything
[10:58:09] <asa22> actually I just figured out how to do it without making that mistake
[10:59:07] <asa22> guess I still have common sense even if I havent slept in many many hours
[10:59:20] <asa22> btw where should main go, at the end of everything?
[10:59:30] <_genuser_> so I have to talk about my accomplishments during the year. (at work, for bonus)
[10:59:48] <_genuser_> and I'm having a hard time not saying, handled all teh crap other devs didn't want to and asked me to work on.
[11:00:03] <_genuser_> jmer hi.
[11:00:19] <asa22> _genuser_ everything can be said in a politically correct manner
[11:00:28] <asa22> while still getting the message across
[11:00:44] <jmer> _genuser_: I think you need to remember all the larger cases that had a big impact... Also Hi :)
[11:00:57] <_genuser_> asa22 agreed, I'm just not able to think up importance of those items. For example a couple I was able to say: Added unit-test coverage to projects that were rushed out quickly to meet customer timelines.
[11:01:03] <jmer> _genuser_: and then explain those cases, but refrain from making your colleagues look like idiots xD
[11:01:17] *** Joins: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc)
[11:01:21] <jmer> _genuser_: Is your target audience technical or business?
[11:01:30] <_genuser_> jmer hehe, mostly it was a lot of unit--test and functional test writing. And handling updating frontend app.
[11:01:54] <_genuser_> jmer target audience is management (somewhat technical), which then considers this contribution when deciding the bonus.
[11:02:41] <jmer> ok... I would maybe not talk about unit tests then but instead frame it in the sense of improving your QA process
[11:03:17] <jmer> Maybe try to think about how many bugs your work caught before they ended up in production pissing off customers
[11:03:39] <jmer> ... in other words, you need to tell about HOW your work improved the business overall, not just that you did the work.
[11:03:58] <_genuser_> geez the work has been saying the exact same thing, but it only clicked when another dev says it to me.
[11:04:08] <_genuser_> and not when the email from management asking me to fill this out says that.
[11:04:36] <jmer> I struggled a lot with this in the beginning of my career.
[11:04:42] <jmer> and I still struggle sometimes xD
[11:06:22] <jmer> I've been tasked to write an introduction about myself to be included in the newsletter for our department...
[11:06:31] <jmer> I have very little clue where to begin xD
[11:06:35] <_genuser_> hehe, I tend to not like talking about my own accomplishments, because I don't remember them that much.
[11:06:39] <_genuser_> I mean a year later, it's difficult.
[11:07:03] <jmer> _genuser_: I find it odd that you need to brag about accomplishments in hindsight to get a bonus
[11:07:14] <jmer> I think it would make more sense to set up some goals that would trigger the bonus.
[11:07:16] <_genuser_> jmer those intros - I always see them as written in third person. And kinda of same as you said, high contribution oriented. But also verifiable facts.
[11:07:36] <_genuser_> jmer is a industry veteran with 20 years of experience in software development, and taking long lunch breaks. .....
[11:07:38] <jmer> _genuser_: but back when I was in a similar situation I wrote a log of things.
[11:07:46] <jmer> in onenote (or whatever you like)
[11:08:08] <jmer> If you use a digital todo list and you archive the older versions looking through them can help you remember stuff as well
[11:08:34] <_genuser_> that's a good idea.
[11:08:45] <_genuser_> we have goals, I rarely set them up in the company portal.
[11:08:58] <_genuser_> my management keeps saying I should, lol.
[11:08:58] <jmer> I mean goals tied to your bonus
[11:09:04] <_genuser_> right, those ones.
[11:09:21] <jmer> oh so they will let  you set up your own goals?
[11:09:39] <jmer> Maybe you should do that because then you get them to commit to the bonus up front
[11:09:50] <jmer> instead of having to convince them based on muddy history
[11:10:33] <ap5> It is hard setting up these if you dont know how they meassure you reaching your goals
[11:10:55] <jmer> ap5: I assume he would do it in cooperation with his manager
[11:11:10] <jmer> So that it can be clear how these things are measured.
[11:11:13] <_genuser_> imo, goals are tricky.
[11:11:22] <_genuser_> they always say, you can get a certification. Or do this or that.
[11:11:48] <_genuser_> I don't really do certifications. But most likely I just don't have a clear idea of what a goal could be here. And if I think them through properly, I could probably set them up properly.
[11:11:49] <jmer> _genuser_: the job I changed to november last year have this kind of goal based incentive structure, but I've never tried it before so I can't say how good/bad it is xD
[11:12:04] <jmer> _genuser_: how much data does your process generate?
[11:12:23] <jmer> i.e. o you use jira/azure devops/whatever board properly so you can document how many bugs/tasks/whatever was completed
[11:12:23] <_genuser_> which process?
[11:12:29] <jmer> the software dev process
[11:12:57] <jmer> Do you classify tasks in maintenance/bugs/feature groups?
[11:13:05] <_genuser_> oh azure devops. just adding unit tests and unit tests and unit tests and unit tests. And when not those, then upgrading backend APIs to add one more property.
[11:13:26] <_genuser_> unit tests all end up in features -> PBIs as enhancements.
[11:13:28] <jmer> I mean one of my  current team's targets is to have 20% new feature dev (or maybe it was 10%) and 80% (or 90%) maintenance/paying off tech debt
[11:13:36] <asa22> So I was told main should be kept minimal, right now I have all my declarations and logic on the top level and then at the bottom of everything I have namespace -> class Program -> main, should I have namespace wrap around everything? so it lets me call methods from main
[11:13:46] <_genuser_> while cool devs write up all the code, then move on. And I have to do write in unit-tests. heh.
[11:14:12] <jmer> _genuser_: test coverage could be a good goal
[11:14:26] <jmer> i.e. increase test coverage % to whatever you think is realistic
[11:14:34] <_genuser_> asa22 namespace should wrap everything, because it's a logical container for that specific functionality. Very generalized way of thinking.
[11:16:00] <_genuser_> jmer hehe, they were sending me reminders about it being due by tomorow. I figured just send it.
[11:16:16] <_genuser_> with two lines of added unit-tests and how ti prevents code from breaking the application later.
[11:16:33] <jmer> hehehe
[11:16:47] <_genuser_> jmer just too tired to think about work right now.
[11:16:51] <jmer> well I don't know your company culture so I can't say how effective that is. is this your usual approach and how does it usually pan out for you?
[11:17:07] <_genuser_> I'm new here. So two years in.
[11:17:25] <jmer> So you've been trhough this process once before?
[11:17:51] *** Joins: MaNa2k (~MaNa2k@224.81-166-66.customer.lyse.net)
[11:17:55] <_genuser_> generally it's been this way where they say well you're a dev. So you billed x hours per quarter and (x-y) was your target. So you met or exceeded the target. Good job. Mostly here you go. Next year try to learn a little bit more about management stuff.
[11:18:25] <jmer> Dear god I am so happy I don't work as a consultant anymore
[11:18:31] <_genuser_> BUT, when they ask the questions it's like this: How are you expanding your business? Explain how you were able to add value to the customer business by offering more ideas.
[11:18:39] <_genuser_> or How you are expanding your network.
[11:18:45] <_genuser_> s/or/and/
[11:18:54] <jmer> yeah you need to talk about the consequences of your actions for the business more than your actions
[11:18:55] <_genuser_> "What is your brand"
[11:19:01] <_genuser_> "How are you enhancing your brand"
[11:19:21] <jmer> I think it's a good sign they are setting up goals for you to improve yourself (and your market value)
[11:19:45] <_genuser_> I mean I'm enhancing the brand by finishgin the PBIs and enjoying working from home. Did you want me to go please the customer by talking to them for hours, socializing and trying to upsell more stuff?
[11:20:12] <_genuser_> jmer you're right in the last statement.
[11:20:30] <jmer> _genuser_: as a dev the only way to upsell is to help the customer solve even more problems than they realized they have
[11:20:42] <_genuser_> As you move up the ranks, more of your bonus is tied to Business Development. So at that point you'd have to be upselling stuff to the customer. Offering ideas. Be involved in presales, etc.
[11:20:55] <jmer> i.e. "oh you have THIS problem? I can fix that for you as well"
[11:21:18] <jmer> I think the important part is to sell value and not just inflated hours
[11:21:41] <jmer> they will quickly see through you if you're just trying to push hours on them :P
[11:21:50] <JakeSays> brianonymous: hey you still around?
[11:22:19] <_genuser_> jmer yeah completely agree. However, "Agile" also generally shields you from the customer. And you're sitting in a standup run by a "probably PMP, old school project manager, who's now saying he's a scrum master" type scum master who's more interested in micromanaging. They have one on one meetings with the customer. And then come back and just
[11:22:20] <_genuser_> tell you what to do. Very little architecting even at my level
[11:23:10] <jmer> The last place I worked where I had external customers I had a direct phonenumber to our customer representative
[11:23:13] <jmer> and she had mine
[11:23:14] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:23:27] <jmer> I like being exposed to the customer (as long as they aren't assholes)
[11:23:36] <_genuser_> jmer when we were going in on site, I could actually see the CTO on down the mgmt chain and talk to them and there's always the possibility of asking questions. Offering solutions. But WFH is just work on teh PBIs and let the scrum master to talk to the customer.
[11:23:55] <jmer> maybe tell the scrummaster you want more customer contact
[11:24:43] <_genuser_> actually from what I see, it's just this person. The other project I was on was much different. So changes are if I change projects, it would be a better setup,.
[11:24:59] <jmer> I would take this up with a manager
[11:25:11] <jmer> a bad (micromanaging) scrummaster will make good devs flee
[11:25:51] <_genuser_> hehe, I've been slacking on it. Because I'm in a routine. But that's actually good advice. And I've heard it before from family too. (changing projects).
[11:26:21] <jmer> changing projects will fix the problem for you, getting the scrummaster better educated will fix the problem in general
[11:26:27] <jmer> if he doesn't want to be educated he should be fired.
[11:26:56] <_genuser_> jmer PM ok?
[11:27:12] <_genuser_> I do'nt want to say more identifying information in public because who knows if someone from work is signed in here. heh.
[11:28:05] <jmer> yeah sure you can pm me
[11:28:23] <jmer> _genuser_: heh... ap5 is one of my former colleagues... so yeah that CAN happen xD
[11:28:43] <jmer> but I have standup in 2 min. so I might be slower at answering
[11:30:59] <ap5> <3
[11:31:15] <MatthiasVance> Also lol yes "agile"
[11:31:20] <MatthiasVance> Let's get a certificate!
[11:31:21] <MatthiasVance> :P
[11:31:34] <MatthiasVance> So we can sure you can implement a static "agile" process
[11:31:39] <MatthiasVance> *be sure
[11:32:22] *** Quits: asa22 (~asa22@84.125.126.8.dyn.user.ono.com) (Quit: Client closed)
[11:43:08] <MaNa2k> a piece of advice, if your working with accounting data, dont round off stuff. The accountants will get pissed
[11:45:32] *** Joins: Brett__ (~Brett@124.148.79.4)
[11:46:17] <jmer> MaNa2k: orly!?
[11:46:35] <MaNa2k> orly ?
[11:47:13] <MaNa2k> because there will be a diff
[11:47:29] <MaNa2k> and the accountants then have to manually do stuff to fix it in this stupid erp
[11:49:06] <MatthiasVance> Yes
[11:49:08] <MatthiasVance> lol
[11:49:09] *** Quits: Brett[Air] (~Brett@124.148.79.4) (Ping timeout: 256 seconds)
[11:54:41] <MatthiasVance> Is there a way to have a console application output to a VS Code pane?
[11:58:32] <_genuser_> MatthiasVance so can you think of a way to enhance agile?
[11:59:24] <MatthiasVance> The problem is defining agile as a set process
[11:59:29] <MatthiasVance> That's totally missing the point
[11:59:31] <_genuser_> wrong.
[11:59:39] <_genuser_> the correct answer is: blockchain.
[11:59:54] <MatthiasVance> 😂
[12:00:09] <MatthiasVance> NFTs!
[12:00:14] <_genuser_> hehe. reading a little more crypto news lately. It's everything blockchains and NFTs.
[12:00:40] <MatthiasVance> People keep coming up with "use cases"
[12:00:50] <MatthiasVance> But really.. nothing really useful is coming out
[12:01:03] <_genuser_> so basically it's a way to make money.
[12:01:09] <MatthiasVance> For some people, yes
[12:01:10] <_genuser_> while it's hot, people will capitalize on it.
[12:01:27] <_genuser_> eventually, it will settle into somethign useful and that'll become the actual way of it.
[12:01:39] <MatthiasVance> Probably yeah
[12:01:54] <_genuser_> kinda like web, then everyone had homepages. I mean do we really need a homepage for everyone where people can read about your favorite actress? Not really.
[12:05:34] <MatthiasVance> Holy shit so many different weird things happening when trying to build in VS Code
[12:09:32] <kobo> when using EF core, do you also use automapper to map your db objects to dtos?
[12:12:23] <MatthiasVance> Oh I use OutputType=Exe, but VS Code still sets the output to .dll
[12:12:23] <_genuser_> we do that.
[12:12:45] <biberu> kobo: db objects to dtos? i usually map from ef entities to domain entities in that layer, but not with automapper
[12:12:53] <_genuser_> we mapping any object to another, especially mostly similar objects, we use automapper to quickly change output to DTOs and return thsoe.
[12:13:42] <MatthiasVance> Don't forget that runtime mapping has downsides
[12:13:48] <biberu> i write functional mapping code that the compiler can verify
[12:13:49] <MatthiasVance> Like: No more static analysis etc..
[12:13:52] <MatthiasVance> Indeed
[12:14:03] <biberu> have had automapper fail at runtime, it's not fun
[12:14:12] <_genuser_> I also sometimes hate this. Because doing a lot of CQRS, you end up with input objects, response objects, DTOs (if you do'nt want to return the entire response object OR if you're into strict separate of each type having it's own objects), and then EF models, and blah blha
[12:14:51] <MatthiasVance> Just use something to generate mapping code for you
[12:14:59] <MatthiasVance> Maybe IntelliCode can do that? :D
[12:15:04] <biberu> _genuser_: records and withers can help somewhat too
[12:15:21] <MatthiasVance> biberu: You can map record types without much work? :o
[12:15:28] <MatthiasVance> *without explicitly writing each line?
[12:15:39] <biberu> there's a with operator, similar to f#
[12:15:40] <kobo> I remember using this with automapper: https://docs.automapper.org/en/stable/Queryable-Extensions.html
[12:15:54] <kobo> to not get the full object from db when I only need 2-3 columns
[12:15:58] <_genuser_> right. I guess I was just thinking request and response objects, even if they're the same. separate. Just tons of file contains request and response classes. And then sometimes DTOs too.
[12:16:13] <_genuser_> soemtimes we just return the response, its the mediator command handler response AND the dto.
[12:16:33] <_genuser_> but sometimes we have devs who don't like that. they need to have a separate dto. they'll complain the PR process.
[12:16:44] <_genuser_> and of course if half the team is doing it one way, it's just easier for everyone to do it that way.
[12:17:52] <biberu> MatthiasVance: ah, i think i misunderstood you, not between types
[12:21:38] <kobo> biberu, do you map the ef entities -> domain manually or with automapper or some other tool?
[12:26:03] <MatthiasVance> biberu: Ah yes
[12:26:32] <MatthiasVance> kobo: Right now in a project I used AutoMapper but that was about getting up to speed. But I strongly dislike runtime mapping as I said.
[12:26:39] <biberu> kobo: "manually", a common example could be e.g. UserEntity { string Email } <-> User { Email Email } with a function toDomain :: entity -> Option<User>, which in turn would call functions like parseEmail :: string -> Option<Email> etc
[12:26:42] <MatthiasVance> You can then no longer have static analysis on your code
[12:27:06] <MatthiasVance> Explicit mapping (either generated or not) is much better
[12:27:18] <biberu> so i'd basically wire it up per case, but probably be able to reuse smaller pieces
[12:27:50] <kobo> Alright, so writing dreadful mapping is still preferred :) but might be worth the hassle then I suppose.
[12:28:13] <kobo> Also I have a vague memory that you could autocomplete the mapping, or was that some extension..
[12:28:40] <biberu> personally i don't really mind mapping code, it can be a bit tedious, but it can be checked by the compiler, and it's written once and read many times
[12:29:14] <biberu> also i'm a fairly fast writer ;)
[12:30:31] *** Quits: Brett__ (~Brett@124.148.79.4) (Ping timeout: 256 seconds)
[12:34:42] <biberu> kobo: been bitten enough times by tools like automapper and inheritance-because-career-is-only-text-but-i-hate-typing-hacks to regard those as the dreadful option ^^
[12:35:32] <MatthiasVance> kobo: Yes you can generate it using a VS extension for example
[12:35:38] <MatthiasVance> And then adjust as necessary
[12:35:40] <MatthiasVance> https://eric-jadi.medium.com/minecraft-as-a-k8s-admin-tool-cf16f890de42
[12:36:40] <kobo> biberu, alright.. might stick to manual mapping then.
[12:37:07] <kobo> MatthiasVance, do you know any extensions that work good for this cause?
[12:37:41] <MatthiasVance> Search for mapping, there is one that sticks out. Free version works fine and if you need more can always pay
[12:40:02] <biberu> kobo: another advantage of manual mapping is that the mapping code will appear in references to properties etc., makes it much easier to navigate a code base
[12:40:17] <kobo> oh, that's a real good cause
[12:41:39] <kobo> MatthiasVance, I suppose the MappingGenerator, I think I've used it and uninstalled it because some reason I can't really remember
[12:41:42] <MatthiasVance> Yeah that's what I meant with static analysis
[12:42:20] <biberu> ^ also if it compiles, it works ;)
[12:44:43] <_genuser_> well well now that's not exactly true.
[12:47:54] <MatthiasVance> _genuser_: That is exactly true
[12:48:23] <biberu> in this case i just meant that you won't get unexpected runtime errors due to reflection and whatnot, but if you communicate well enough with the compiler it kind of is
[12:48:37] <MatthiasVance> Or if you forget to map one (records or F#)
[12:48:40] <MatthiasVance> It will tell you
[12:48:40] <_genuser_> MatthiasVance heh, I was not referring to mapping only. I meant "if it compiles, ship it" has caused more heartache than anybody would like to admit.
[12:49:03] *** Joins: diophantoz (~diophanto@user/diophantoz)
[12:49:05] <MatthiasVance> _genuser_: That's much less of an issue in stricter languages, but yeah I agree
[12:50:44] *** Joins: Babbage (Babbage@94.11.27.96)
[12:51:05] <Babbage> hey
[12:51:29] *** Quits: bin101 (~bin101@user/bin101) (Ping timeout: 256 seconds)
[12:51:59] *** Joins: bin101 (~bin101@user/bin101)
[13:07:14] *** Joins: Brett__ (~Brett@124.148.79.4)
[13:15:30] *** Joins: Jonopoly (~Jonopoly@user/jonopoly)
[13:23:05] <jmer> https://www.youtube.com/watch?v=vTMF6xEiAaY <- this is related to your mention of NFTs and how they suck (also includes examples of how roblox is exploiting the work of children)
[13:26:45] *** Quits: MaNa2k (~MaNa2k@224.81-166-66.customer.lyse.net) (Ping timeout: 256 seconds)
[13:27:52] <Nasp> Does anyone know how NFT's work?
[13:28:02] <Nasp> I heard someone s ay it was just an url to a site where the work is
[13:28:13] <Nasp> Are there any sort of checksum of the work?
[13:28:30] <MatthiasVance> NFT is just a ledger entry on a distributed ledger
[13:28:39] <Nasp> Yes but anything else
[13:28:42] <MatthiasVance> No
[13:28:44] <MatthiasVance> That's it
[13:28:47] <Nasp> So just a basic text entry?
[13:29:01] <MatthiasVance> Kind of
[13:29:08] <Nasp> So no cryptography involved
[13:29:19] <MatthiasVance> Distributed ledger uses cryptography
[13:29:38] <MatthiasVance> You can start with "blockchain" but there are other technologies for distributed ledgers
[13:29:48] <jmer> I think NFTs is kinda defeating the entire purpose of the digital world
[13:29:56] <jmer> the whole point is that copies are free/very cheap
[13:30:12] <jmer> trying to artificially limit an unlimited resource only serves one purpose; greed
[13:30:16] <JakeSays> Nasp: here's an explanation of nft's for you: https://www.reddit.com/r/Jokes/comments/rwrjgw/can_someone_explain_to_me_what_an_nft_is/
[13:30:33] <JakeSays> _genuser_: i stole your nft url
[13:30:50] <Nasp> JakeSays: That was kinda my point from what i've seen it's just an url
[13:30:52] <jmer> LOL
[13:30:56] <jmer> JakeSays: brilliant
[13:30:57] <Nasp> So in reality no cryptography
[13:31:05] <MatthiasVance> Nasp: What do you mean with cryptography
[13:31:19] <MatthiasVance> What would you need it for?
[13:31:20] <Nasp> MatthiasVance:  Nothing to verify the actual work being protected
[13:31:30] <MatthiasVance> There is ZERO relation between an NFT and the actual work
[13:31:32] <Nasp> Unless there's a checksum of the work
[13:31:38] <Nasp> MatthiasVance:  Taht was my point
[13:31:41] <MatthiasVance> Except the pointer
[13:31:42] <Nasp> So in reality nothing protecting it
[13:32:13] <MatthiasVance> Hence the non-fungible
[13:32:22] <MatthiasVance> Whoops, no
[13:32:35] <MatthiasVance> Nasp: But yeah that's the whole (silly) idea :P
[13:32:41] <MatthiasVance> "don't screenshot my NFT!"
[13:32:51] <inge> Nasp: if you have bitcoin, you prove ownership of the bitcoin by you having the private keys of the address of that bitcoin. Similarly, you can prove you own a digital token on a blockchain in the same way. But that is it
[13:33:02] <Nasp> So i own a coin
[13:33:04] <Nasp> But not the work really
[13:33:08] <inge> ^
[13:33:14] <inge> right-click-save
[13:33:17] <Nasp> So like i said from the begining, you just bought a text message with an url
[13:33:30] <Nasp> It would make sense if you had the checksum of the picture atleast
[13:33:42] <Nasp> And ensured no other checksums could exists
[13:33:49] <Nasp> But then you could just change a single bit and sell it again
[13:34:03] <inge> you could also sell it on a different blockchain ..
[13:34:04] <MichaelLong> this NFT stuff is incredible clever.
[13:34:30] <inge> also, the storage it points to ... could go offline
[13:34:38] <MichaelLong> how poeple come up with method of getting money out of almost nothing
[13:34:41] *** Quits: mikrosis (~mikrosis@dynamic-046-114-174-174.46.114.pool.telefonica.de) (Ping timeout: 256 seconds)
[13:34:52] <MatthiasVance> So they sell it a few times to a fake account to increase value
[13:35:06] <MatthiasVance> And then sell it to an unsuspecting person for a lot of money because they think it's valuable
[13:35:23] <inge> so ... kind of like Tesla stock
[13:36:10] <JakeSays> how is an nft like tesla stock
[13:36:37] <inge> "and then sell it to an unsuspecting person for a lot of money because they think it's valuable"
[13:37:02] <MichaelLong> but NFT is so old by now, wonder why #csharp finally talks about Web3 :]
[13:37:25] <JakeSays> inge: so how is that like tesla stock
[13:37:30] <Nasp> Buy first NFT, replace NFT url with anything, claim rights to anything?
[13:37:40] <MatthiasVance> You can't claim rights to anything
[13:37:58] <MatthiasVance> MichaelLong: Time to get out ;p
[13:38:02] <inge> JakeSays: t'is a joke
[13:40:35] <inge> Who wouldn't want a piece of Cryptoland https://youtu.be/jf3ajS5me78
[13:41:17] <jmer> Cryptocults
[13:42:59] <Nasp>  Is that a new Soda from Cult?
[13:51:45] <Babbage> this a step up from the crypto cruise ship they tried to do?
[13:53:46] <inge> an island in the shape of a whale, that in the "Cryptoland V1" only exists "digitally". Wait for V2 :D
[13:57:27] <Babbage> there are barbie films that this makes look good
[13:58:11] <MatthiasVance> Selling virtualized land
[13:58:13] <MatthiasVance> Always nice
[13:58:31] <MatthiasVance> Well that 1000 pixel site proved it could work
[13:58:36] <MatthiasVance> (or however many it was)
[13:58:41] <Babbage> million :)
[13:58:58] <MatthiasVance> ah right
[14:05:29] <_genuser_> JakeSays hehe good one. I'm always happy that someone is spreading around the good cheer!
[14:26:07] *** Quits: bin101 (~bin101@user/bin101) (Ping timeout: 256 seconds)
[14:26:33] *** Joins: sub0 (~bc8147f2@cerf.good1.com)
[14:27:34] *** Joins: bin101 (~bin101@user/bin101)
[14:30:12] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:30:57] *** Joins: csrf (~csrf@user/csrf)
[14:33:29] *** Quits: bin101 (~bin101@user/bin101) (Ping timeout: 256 seconds)
[14:35:03] *** Joins: bin101 (~bin101@user/bin101)
[14:41:00] *** Quits: bin101 (~bin101@user/bin101) (Ping timeout: 256 seconds)
[14:42:36] *** Joins: bin101 (~bin101@user/bin101)
[14:54:58] *** Quits: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[15:03:49] *** Quits: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc) (Ping timeout: 240 seconds)
[15:06:01] <MatthiasVance> meh I got the Dark+ theme for VS but it doesn't look 100% the same as VS Code
[15:10:18] <Diablo-D3> because its not the same
[15:11:05] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[15:15:08] <ap5> :D
[15:17:01] *** Quits: bin101 (~bin101@user/bin101) (Ping timeout: 240 seconds)
[15:18:10] *** Joins: bin101 (~bin101@user/bin101)
[15:20:18] *** Joins: SlimmyJimmy (blank@136.37.25.140)
[15:20:28] *** Quits: SlimmyJimmy (blank@136.37.25.140) (Changing host)
[15:20:28] *** Joins: SlimmyJimmy (blank@user/slimmyjimmy)
[15:21:27] <Nasp> MatthiasVance:  Tried switching to the "Dark (Visual studio)" theme?
[15:24:01] <MatthiasVance> In Visual Studio?
[15:24:12] <MatthiasVance> 😂
[15:24:29] <Nasp> In VSCode
[15:24:31] <MatthiasVance> I want to make VS look like code, not the other way around
[15:24:38] <Nasp> Ohh
[15:25:03] <Nasp> Only thing i find different is the usings in VSCode is highlighted
[15:25:09] <Nasp> Else it feels quite the same
[15:25:20] <Nasp> I wonder if VSCode is a good alternative to VS
[15:26:01] <Nasp> For c#
[15:36:26] <MichaelLong> hm
[15:37:19] <JakeSays> Nasp: it's not. the c# support is pretty shitty in vs code
[15:37:50] <Nasp> JakeSays: I remember so from last time I tried
[15:38:06] <Nasp> Like it's a good editor but it has like zero support for just running shit
[15:38:19] *** Joins: MaNa2k (~MaNa2k@224.81-166-66.customer.lyse.net)
[15:38:24] <Nasp> Can't use the csprojs or launch settings file
[15:38:43] <MichaelLong> I also had bad memories trying vs code as light weight alternative to vs
[15:38:48] <JakeSays> you can use .csproj's if you add the vs solution extension
[15:39:14] <MichaelLong> you need some extensions and some broke after a while somehow
[15:41:27] <MatthiasVance> Ah yeah nothing beats VS?
[15:41:39] <JakeSays> rider is getting damn close
[15:41:54] <MatthiasVance> True rider is a fine alternative
[15:42:19] <MatthiasVance> I often want to try out really new stuff though like MAUI and that is then bound to VS at first
[15:42:44] <MichaelLong> have that installed recently but not yet started the trial period
[15:43:47] <MichaelLong> I often want to try out really new stuff though, then I constantly need a new version of vs...
[15:47:01] *** Quits: Jonopoly (~Jonopoly@user/jonopoly) (Quit: WeeChat 3.0)
[15:55:35] *** Joins: Roughy (~mdaw45ns@user/roughy)
[15:57:08] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[16:01:06] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[16:09:15] * _genuser_ gives JakeSays an NFT of Nasp's picture. 
[16:09:49] *** Quits: MaNa2k (~MaNa2k@224.81-166-66.customer.lyse.net) (Ping timeout: 256 seconds)
[16:11:51] <ap5> Rider or emacs!
[16:15:24] *** Joins: Lukky (~Lukky@modemcable248.39-20-96.mc.videotron.ca)
[16:25:09] <jmer> I remember trying to edit .resx files by hand in rider
[16:25:14] <jmer> ... then I gave up and installed VS
[16:29:49] <ap5> :D
[16:39:08] <Lukky> jmer: that's what annoys me a bit about Rider... no visual designers...
[16:39:59] <jmer> Lukky: it was one of the first problems I encountered and the solution relied heavily on resx embedded ressources... So I didn't get to experience much of rider.
[16:40:01] <ap5> It is all in your heads
[16:40:17] <ap5> s/heads/HEAD
[16:40:25] <ap5> Do you git it?
[16:40:26] <jmer> ap5: when you're in my head you're wearing a bikini
[16:40:44] <ap5> Inside every man there is me in a bikini trying to get out
[16:55:07] *** Joins: Jonopoly (~Jonopoly@user/jonopoly)
[16:56:25] *** Quits: Brett__ (~Brett@124.148.79.4) (Quit: Leaving)
[16:56:43] *** Joins: Brett[Air] (~Brett@124.148.79.4)
[16:57:06] <Brett[Air]> Howdy
[16:59:38] <Brett[Air]> Im working on some software that draws Shapes/Point arrays. I want to do things like add effects to shapes for when they are drawn. What would be some ways to have a list of "Effects" and apply them to each shape so the effects would be cumulative?
[17:00:18] <Brett[Air]> Im thinking potentially a multicast delegate, or something more along the design pattern route instead of looping through an array of effects and calling somehting like Apply()
[17:01:43] *** Joins: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc)
[17:04:57] *** Quits: Assault (~Assault@87-95-55-3.bb.dnainternet.fi) (Ping timeout: 240 seconds)
[17:08:21] <Lukky> Brett[Air]: like some kind of overlays?
[17:09:36] <Brett[Air]> Lukky, yeah so the Shapes would be on a timeline displayed on the screen, and re-rendered at say 24fps, if i have say a "Oscillate-Y" effect, the effect would apply each frame and move the shape up each frame etc
[17:10:02] <Brett[Air]> If i then APplied an Oscilate-X effect it would move horizontally, as well as upwards since two effects have been translated onto the coordinates
[17:10:34] <canton7> So, the Decorator pattern?
[17:10:40] <Lukky> You speak of pattern... which one did you have in mind? Were you thinking maybe of the Decorator pattern?
[17:11:35] <Brett[Air]> I did not have an idea what the pattern would be, so i will check out the decorator pattern
[17:12:20] <Brett[Air]> time to dust off my GOF Patterns book
[17:12:34] <Lukky> yup... always handy...
[17:13:19] <Brett[Air]> Actually dont have the GOF one with me, but i found "Design Patterns in C#" By Steven Metsker on the side of the road a month ago and lucky its in there!
[17:13:44] <Lukky> There's plenty of online material too...
[17:13:56] <Lukky> The basic idea is pretty simple actually
[17:15:12] <canton7> The wiki page has a good explanation
[17:15:17] <canton7> (and is generally a good resource for design patterns)
[17:16:02] <Brett[Air]> canton7, Lukky legends, this looks exactly like what i need
[17:16:23] * Lukky bows
[17:19:39] *** Joins: MaNa2k (~MaNa2k@109.247.79.178)
[17:20:36] *** Joins: MaNa3k (~MaNa2k@109.247.79.178)
[17:24:13] *** Quits: MaNa2k (~MaNa2k@109.247.79.178) (Ping timeout: 240 seconds)
[17:26:31] <canton7> Note that the decorator pattern is subtly different to what you were desribing
[17:27:54] <canton7> In the decorator pattern, the decorator can stand in for the component itself. So your timeline might be saying "Render" to a shape, or it might be saying "Render" to a decorator which in turn calls "Render" on the shape, and the timeline won't know the difference. Likewise a decorator will call "Render" on the thing it wraps, but the thing it
[17:27:54] <canton7> wraps might be another decorator or it might be the Shape, and the decorator won't know which
[17:27:56] *** Joins: niston (~gridrun@user/niston)
[17:28:08] <canton7> That's slightly different to having an array of decorators, and explicitly iterating through them
[17:29:06] <Brett[Air]> Right, it seems like a good fit if there is only ever one "effect" on a shape but having multiple seems to break from this pattern
[17:30:31] <canton7> Break the decorator pattern? No, it won't
[17:30:48] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[17:31:08] <canton7> The idea with Decorator is that you end up chaining decorators. One decorator calls the next, calls the next, and the last one in the chain renders the actual component, see the sequence diagram in the wiki page
[17:32:06] <Brett[Air]> ah yeah
[17:34:06] <Brett[Air]> I initially had a thought it could also potentially be the strategy pattern
[17:37:46] <jmer> from my understanding (and past usage) of the strategy pattern it's more for switching logic based on some data, not necessarily having a nesting of strategies X levels deeps
[17:37:49] <jmer> deep*
[17:38:06] <Brett[Air]> I guess you could equate my use case to photo filters, You have a photo, apply a sharpen filter, apply a black & white filter and then apply a border filter. three filters, chained together to produce one output
[17:38:29] <Brett[Air]> This seems to again fit the decorator pattern from the wiki article
[17:39:01] <MatthiasVance> Event sourced images!
[17:39:11] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[17:41:29] <jmer> Brett[Air]: I think the example on the wiki page under "motivation" is similar to your use case
[17:44:33] *** inge is now known as Inge
[17:49:48] *** Quits: sub0 (~bc8147f2@cerf.good1.com) (Quit: CGI:IRC (Ping timeout))
[18:04:04] *** Joins: alguien (~alguien@user/alguien)
[18:24:05] *** Joins: destroycomputers (~destroyco@68-177-178-143.ftth.glasoperator.nl)
[18:26:37] *** Quits: jamea (~jamea@177.239.81.39) (Ping timeout: 240 seconds)
[18:27:05] *** Quits: destroycomputers (~destroyco@68-177-178-143.ftth.glasoperator.nl) (Client Quit)
[18:27:44] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[18:28:47] *** Joins: destroycomputers (~destroyco@68-177-178-143.ftth.glasoperator.nl)
[18:33:49] <Brett[Air]> As an alternative to the decorator, the "Pipes and Filters" pattern looks promising https://docs.microsoft.com/en-us/azure/architecture/patterns/pipes-and-filters
[18:35:09] <brianonymous> figures they do that after i made my own
[18:42:05] *** Joins: Jong (~Jong@174.27.0.61)
[18:58:45] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:c993:298f:5351:f526) (Ping timeout: 268 seconds)
[19:04:13] *** Quits: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc) (Ping timeout: 240 seconds)
[19:06:15] *** Quits: Babbage (Babbage@94.11.27.96) (Remote host closed the connection)
[19:07:01] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[19:16:32] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[19:32:16] *** Quits: Brett[Air] (~Brett@124.148.79.4) (Ping timeout: 256 seconds)
[19:35:31] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[19:36:37] *** Quits: MaNa3k (~MaNa2k@109.247.79.178) (Ping timeout: 240 seconds)
[19:38:35] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[19:42:06] *** Quits: Jonopoly (~Jonopoly@user/jonopoly) (Quit: WeeChat 3.0)
[19:43:32] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[19:45:09] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 256 seconds)
[19:48:57] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[19:49:26] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[19:51:25] *** Joins: alguien (~alguien@user/alguien)
[19:57:56] <MatthiasVance> TIL System.Text.Json.Nodes  exists
[20:10:31] <MatthiasVance> Trying to think of a way to perform some kind of XSLT over JSON :P
[20:11:00] <MatthiasVance> Oh, "JSLT" "exists"
[20:12:12] <_Shurik_> dafuck
[20:12:22] <_Shurik_> XSLT must die
[20:12:56] <MatthiasVance> Mapping is useful
[20:19:47] <MatthiasVance> I basically have JSON -> mapping -> JSON or XML -> mapping -> JSON
[20:19:55] <MatthiasVance> It's always X -> mapping -> JSON :D
[20:24:24] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[20:30:57] <DevJohnC> oh apache, you used to be hot but you really suck these days
[20:31:15] <DevJohnC> I can't seem to figure out how to set a proxy based on client ip address in apache, it'd be super easy in nginx lol
[20:33:17] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Remote host closed the connection)
[20:33:25] <ben> do you have ProxyPass and ProxyPassReverse ?
[20:35:15] <DevJohnC> yes
[20:56:24] *** Joins: MaNa3k (~MaNa2k@224.81-166-66.customer.lyse.net)
[20:59:33] *** Quits: destroycomputers (~destroyco@68-177-178-143.ftth.glasoperator.nl) (Quit: WeeChat 3.4)
[21:00:19] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[21:01:58] *** Joins: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc)
[21:04:42] <JakeSays> MatthiasVance: sounds like a total cluster fuck
[21:08:02] *** Joins: dontyouloveshort (~PeterPan@vmd85231.contaboserver.net)
[21:08:06] <dontyouloveshort> hi
[21:08:37] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[21:09:53] <MatthiasVance> JakeSays: Why?
[21:10:18] <MatthiasVance> The last JSON is just an in-memory tree representation of data
[21:10:24] <JakeSays> all that json mapping
[21:10:57] <dontyouloveshort> this threads[0].ProcessorAffinity = (IntPtr)1;     sets cpu 1 for that specific thread, but running: thread.ProcessorAffinity returns a intPtr - how do you translate that back to cpu1?
[21:11:19] <MatthiasVance> JakeSays: Oh actually it's pretty clean and lean and a mean machine.
[21:11:40] <JakeSays> dontyouloveshort: what would you expect to return?
[21:11:56] <Nasp> Haven't apache been "not hot" for years now?
[21:12:07] <MatthiasVance> dontyouloveshort: What does (IntPtr) 1 do?
[21:12:10] <Nasp> Mostly everything under the apache foundatino
[21:13:21] <dontyouloveshort> JakeSays, for a cpu with 8 cores and 16 threads a bitmask like 1000000000...
[21:13:31] <dontyouloveshort> MatthiasVance, cant test it, Console.WriteLine("current processor affinity:" + (IntPtr)thread.ProcessorAffinity);      lacks a get...
[21:14:02] <MatthiasVance> dontyouloveshort: So you have no clue without running it what the piece of code "(IntPtr) 1" does?
[21:14:05] <JakeSays> dontyouloveshort: so.. a bit mask is just an integer value
[21:14:28] <MatthiasVance> dontyouloveshort: My point is, if you can explain the former you already have your answer for the latter
[21:14:47] <dontyouloveshort> sure, why didnt ms add a get property?
[21:14:57] <JakeSays> huh?
[21:16:00] <dontyouloveshort> the code line says: CS0154
[21:16:11] <dontyouloveshort> yeah...you cant copy the error either :)
[21:16:37] <dontyouloveshort> The property or indexer 'property' cannot be used in this context because it lacks the get accessor
[21:16:49] <JakeSays> huh. odd
[21:16:51] *** Joins: jamea (~jamea@189.237.70.201)
[21:26:01] *** Quits: MaNa3k (~MaNa2k@224.81-166-66.customer.lyse.net) (Ping timeout: 256 seconds)
[21:27:35] <dontyouloveshort> there are some ideas here, https://www.py4u.net/discuss/2066768     but they look far from sane
[21:33:15] *** Quits: SlimmyJimmy (blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[21:36:56] <MatthiasVance> dontyouloveshort: Wasn't your original question "how to translate intptr back to cpu1"?
[21:38:04] <dontyouloveshort> well i need to get the data from the thread as well
[21:44:04] <MatthiasVance> ahh
[21:45:11] *** Joins: Tailslide (~Tailslid3@S0106c09435fdc449.cg.shawcable.net)
[21:55:16] *** Joins: destroycomputers (~destroyco@68-177-178-143.ftth.glasoperator.nl)
[21:56:55] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[22:06:13] *** Quits: jamea (~jamea@189.237.70.201) (Ping timeout: 268 seconds)
[22:10:32] <MatthiasVance> I need a collection of all kinds of values :D let's box all the things?
[22:15:48] <ki9a> evening
[22:19:25] *** Quits: _genuser_ (2fb823e8@67.205.143.82) (K-Lined)
[22:20:08] *** Joins: SlimmyJimmy (blank@136.37.25.140)
[22:23:44] <MatthiasVance> hi ki9a
[22:23:51] <MatthiasVance> Do you like boxing or do you prefer strings
[22:26:46] *** Joins: Assault (~Assault@87-95-55-3.bb.dnainternet.fi)
[22:30:04] <ki9a> what are you really doing?
[22:30:12] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[22:38:55] <edcba> MatthiasVance: IRL or coding ?
[22:40:34] *** Quits: Tailslide (~Tailslid3@S0106c09435fdc449.cg.shawcable.net) (Read error: Connection reset by peer)
[22:47:51] <MatthiasVance> edcba: Yes
[22:48:01] *** Joins: ravindUwU (~ravindUwU@user/ravinduwu)
[22:48:18] <ravindUwU> jmer, hiya 👋 u there? 😅
[22:48:42] <MatthiasVance> ki9a: I have some input (JSON) that I need to map to some "description of a domain model", so I need an in-memory representation of the data
[22:49:29] <ravindUwU> I'm curious about how EF migrations are typically/should be done in production. Obv shouldn't be left to `IMigrator.MigrateAsync` because they may cause data loss 😬.
[22:49:42] <ravindUwU> One way I can think of is to script the migration as idempotent SQL, modify the script to retain data as appropriate, and append to the script whenever more migrations are added in the future. Thoughts?
[22:49:49] <MatthiasVance> What is IMigrator
[22:50:22] <MatthiasVance> If you run only one instance and your project is the solo database user and you inspect the generated migrations... feel free to use them as is :D
[22:50:35] <edcba> https://docs.microsoft.com/en-us/dotnet/api/microsoft.entityframeworkcore.migrations.imigrator.migrateasync?view=efcore-5.0
[22:50:37] <MatthiasVance> I mean *from startup*
[22:50:59] <MatthiasVance> You can also build stand-alone executables now :)
[22:51:15] <ravindUwU> with .net 6 yeah; we're still on 5 T-T
[22:51:19] <MatthiasVance> ki9a: Do you have any ideas for that?
[22:51:28] <MatthiasVance> Other than a Map<string, obj>
[22:51:45] <ki9a> MatthiasVance: you're basically redoing JObjet?
[22:51:58] <MatthiasVance> ki9a: Using JObject was one idea
[22:52:10] <edcba> is there some 2FA auth token manager like a password manager ?
[22:52:11] <ki9a> I'd go for that unless you had a need to NOT do it
[22:52:33] <MatthiasVance> I figured JObject also needed to box at some point so I could just do a map and not deal with J-anything
[22:52:57] <MatthiasVance> The JObject would not be an in-memory representation of the JSON, mind you
[22:53:17] <MatthiasVance> It would be an in-memory representation of <some input data> to a <described domain model>
[22:54:25] <ki9a> What you really need is typed unions
[22:54:30] <ki9a> but c# doesn't have them yet
[23:04:00] <MatthiasVance> ki9a: WELL
[23:04:05] <MatthiasVance> Luckily I am not using C#
[23:04:10] <MatthiasVance> And I totally forgot I could do that
[23:04:18] <MatthiasVance> < 3
[23:12:38] <MatthiasVance> As in, for this purpose
[23:14:24] <ki9a> what are oyu using then? :)
[23:14:37] <MatthiasVance> F#
[23:14:44] <ki9a> aah
[23:16:42] <MatthiasVance> ki9a: Although I am not sure if a sum type would actually be faster? Definitely more explicit and correct though.
[23:16:55] <MatthiasVance> Hm in both cases you'd need handling for the cast
[23:17:06] <MatthiasVance> So it would be faster since you only have to check which type you need
[23:18:32] *** Joins: jamea (~jamea@201.77.110.253)
[23:19:33] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[23:25:53] <ki9a> I usually do it like that; but then manually
[23:27:22] *** Quits: SlimmyJimmy (blank@136.37.25.140) (Quit: Going offline, see ya! (www.adiirc.com))
[23:27:34] *** Quits: ravindUwU (~ravindUwU@user/ravinduwu) (Quit: KTHXBAI)
[23:32:13] <Slade> number handling can be less than pleasant with JObject
[23:33:16] *** Joins: SlimmyJimmy (blank@136.37.25.140)
[23:33:37] <Slade> tho i think its fine as long as you dont hit any of the serialization methods
[23:35:51] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: Lost the game...)
[23:52:25] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
