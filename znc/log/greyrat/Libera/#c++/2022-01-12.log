[00:00:01] <PJBoy> idk it seems like a butchering at first glance
[00:01:02] *** Quits: techsurvivor (~don@static-198-54-133-171.cust.tzulo.com) (Ping timeout: 256 seconds)
[00:01:16] *** Joins: AliceMeows (~AliceMeow@user/alicemeows)
[00:02:57] *** Joins: techsurvivor (~don@89.45.90.219)
[00:07:20] *** Quits: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net) (Remote host closed the connection)
[00:07:30] *** Joins: lunix00 (~lunix00@2804:14c:6321:900d:ecd5:589a:62ad:6273)
[00:15:38] *** Quits: lunix00 (~lunix00@2804:14c:6321:900d:ecd5:589a:62ad:6273) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:18:14] *** Joins: lunix00 (~lunix00@2804:14c:6321:900d:ecd5:589a:62ad:6273)
[00:21:18] *** Quits: lunix00 (~lunix00@2804:14c:6321:900d:ecd5:589a:62ad:6273) (Client Quit)
[00:30:57] *** Quits: techsurvivor (~don@89.45.90.219) (Ping timeout: 240 seconds)
[00:31:03] <Alipha> PJBoy: if *zipIt returns a std::tuple<int&, float&>, then swapping tuples of references currently doesn't work correctly
[00:31:28] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:33:10] *** Joins: techsurvivor (~don@94.198.42.251)
[00:33:54] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:34:21] *** Joins: jkaye (~jkaye@2601:281:8300:7530:a9ff:dc19:c096:5ef5)
[00:35:27] *** Joins: zenstoic (uid461840@id-461840.hampstead.irccloud.com)
[00:37:50] *** Joins: Akuli (~Akuli@87-94-109-1.bb.dnainternet.fi)
[00:38:17] *** Quits: letto (~letto@188.25.113.229) (Read error: Connection reset by peer)
[00:38:18] <Akuli> any opinions on intentionally using c code where modern c++ would do, but seems more complicated? for example https://dpaste.com/9TCPSCBKK
[00:39:11] *** Joins: letto (~letto@188.25.113.229)
[00:39:31] <AliceMeows> All I see is C++ code
[00:39:48] <Akuli> rand()/RAND_MAX is a very c-style way to do this
[00:40:16] <AliceMeows> Its still technically valid c++ code
[00:40:26] <Akuli> i know it's technically valid, i'm curious about whether people find it acceptable
[00:40:42] *** Quits: beagles (~beagles@142.162.188.116) (Ping timeout: 256 seconds)
[00:40:43] <Akuli> or good, or bad, or retarded (as ##c++ on freenode told me about something)
[00:41:02] <AliceMeows> rand() is a poor choice for pseudo random algorithm
[00:41:25] <Akuli> for context, this is in a game, not in a crypto library
[00:41:33] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[00:41:41] <AliceMeows> Its still terrible regardless of what it is used for
[00:41:52] <AliceMeows> PRNG != CPRNG
[00:42:10] <Akuli> why does the use case not matter to you?
[00:42:11] *** Joins: beagles (~beagles@142.162.188.116)
[00:42:55] <PJBoy> rand has no quality assurance
[00:43:08] <PJBoy> and that floating point division presumably has bias
[00:43:34] <Akuli> so again, why does the use case not matter? it's not a crypto library, it just has to be a different scene when a user restarts my game
[00:43:48] <PJBoy> if you want random, you should want good random
[00:43:52] <Akuli> why?
[00:44:05] <PJBoy> that doesn't necessarily mean you want cryptographic security
[00:44:06] <AliceMeows> Because rand() is too predictable
[00:44:15] <Akuli> this to me feels akin to optimizing the parts of code that aren't bottlenecks
[00:44:32] <AliceMeows> I've already stated that PRNG is not the same as CPRNG which C++ does not provide to begin with
[00:44:39] <PJBoy> why would you want a biased RNG
[00:44:40] <Akuli> for my use case, this won't be anywhere near "too predictable", even with 10 different values or so a user wouldn't notice the difference
[00:45:04] <PJBoy> like I'd rather have a buritto with the guac distributed evenly than a burrito that doesn't
[00:45:19] <Akuli> PJBoy: so coming back to my original question, the code that makes the worse randomness is cleaner code, and both are much more than good enough for my use case
[00:45:31] <Akuli> assuming these, is it acceptable to choose the one with rand() ?
[00:45:43] <PJBoy> well the two functions are different
[00:45:57] <PJBoy> and the presentation is biased towards the rand() version by omitting the seeding
[00:46:08] <Akuli> in fact, the rand() version is less buggy
[00:46:10] <PJBoy> the seeding is probably the ugliest bit of the C++ version
[00:46:11] <Akuli> the other one seeds every time
[00:46:21] <PJBoy> it doesn't seed every time
[00:46:25] <Akuli> it does :)
[00:46:35] <PJBoy> why do you think so?
[00:46:39] <Akuli> read it carefully
[00:46:40] <PJBoy> bah
[00:46:42] <Akuli> this is why i prefer simple code
[00:46:45] <PJBoy> it never sets the engine_ready flag
[00:46:49] <AliceMeows> missing engine_ready = true;
[00:46:58] <PJBoy> anyways you should have the same code for the rand() version to make it comparable
[00:47:06] <Alipha> Akuli: the "c++ way" isn't that much code anyway. look at the example at the bottom (up until `std::cout << "Randomly-chosen mean: " << mean << '\n';` is what you'd need): https://en.cppreference.com/w/cpp/numeric/random
[00:47:06] <PJBoy> a static bool engine_ready that guards a call to srand
[00:47:09] <Akuli> yeah, rand version needs srand() call in main
[00:47:22] *** Quits: letto (~letto@188.25.113.229) (Quit: Konversation terminated!)
[00:47:48] <PJBoy> and then it depends on if you need to be able to reproduce the sequence of random values or not
[00:47:59] <Akuli> Alipha: as far as i can tell, it does exactly what's inside my function
[00:48:01] <PJBoy> global random state may or may not be desirable
[00:48:20] <PJBoy> if global state is fine, then you can take all that random engine stuff outside the function
[00:48:32] <Akuli> so coming back to my original question: is "the c way" acceptable?
[00:48:35] <PJBoy> if not then you're stuck with that engine stuff anyway and the rand version has no equivalent
[00:48:52] <PJBoy> eh
[00:48:57] <PJBoy> the C way wouldn't pass my code review
[00:49:05] <Akuli> that's what i wanted to know :)
[00:49:08] *** Joins: letto (~letto@188.25.113.229)
[00:49:13] <PJBoy> but it's not gonna cause any serious issues most likely
[00:49:18] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[00:49:29] <PJBoy> I do agree that all that random engine stuff is ugly though
[00:49:33] <Akuli> :DDDDD
[00:49:35] <AliceMeows> PJBoy: no need in encouraging bad practices
[00:49:46] <PJBoy> but the bit where it uses the uniform_real_distribution is much clearer to me
[00:49:53] <PJBoy> so there's a bit of tradeoff
[00:50:23] <PJBoy> ultimately this ugly stuff is hidden behind a function
[00:50:26] <Akuli> yeah this is definitely a tradeoff thing: one is shitty randomness and short code, the other is good randomness and slightly longer code
[00:50:39] <Akuli> but the longer code had a subtle bug that nobody spotted
[00:50:53] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[00:50:54] <PJBoy> I'll admit I didn't even look at the code
[00:51:00] <AliceMeows> You've asked what is accepted not for code review
[00:51:09] <Akuli> indeed :)
[00:53:04] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[00:53:49] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 240 seconds)
[00:54:18] <PJBoy> this is how I write these kinds of functions https://wandbox.org/permlink/8PswkDeK2uvqiuoA
[00:54:43] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 256 seconds)
[00:54:51] *** Joins: Inline (~Inline@aftr-37-201-240-204.unity-media.net)
[00:55:15] <PJBoy> there's also a proposal out there for randint, which I'm hoping gets merged in one day
[00:56:19] <PJBoy> << "Chance of being merged = " << experimental::randint(0, 101) << '%'
[00:56:20] <geordi> Chance of being merged = 6%
[00:56:23] <PJBoy> yikes
[00:56:45] <Akuli> :) i like 'static std::default_random_engine prng(std::random_device{}())'
[00:56:52] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[00:58:13] <PJBoy> also written `static std::default_random_engine prng((std::random_device()()));` if you like parentheses more than braces ^^;
[01:01:31] *** Quits: causative (~halberd@user/causative) (Ping timeout: 256 seconds)
[01:02:28] *** Quits: pottsy (~pottsy@129.227.183.244) (Ping timeout: 250 seconds)
[01:05:57] *** Quits: anandn (~anandn@2601:600:a27f:d92d:4c9a:7729:efdf:f7c5) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:07:04] *** Joins: KAHR-Alpha (~Alpha@2a01cb0d024a66007417638e35437933.ipv6.abo.wanadoo.fr)
[01:07:25] *** Joins: skapata (~Skapata@user/skapata)
[01:07:29] *** Quits: hfsoulz (~hfsoulz@user/hfsoulz) (Quit: leaving)
[01:08:09] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[01:08:57] *** Joins: anandn (~anandn@2601:600:a27f:d92d:151d:1f53:302f:b5fe)
[01:10:33] *** Quits: BobTheTomato (~paul@107-190-110-80.cpe.teksavvy.com) (Quit: leaving)
[01:10:41] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[01:11:20] *** Joins: duuude (~user@user/duuude)
[01:12:07] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:2d06:fff0:d105:7c1) (Ping timeout: 268 seconds)
[01:14:03] *** Quits: biberu (~biberu@user/biberu) (Read error: Connection reset by peer)
[01:14:11] *** Joins: Brett[Air] (~Brett@124.148.79.4)
[01:18:41] <kalven> Alipha: do you know why this is: https://godbolt.org/z/bsGMYEh71 ?
[01:19:14] *** Quits: oknenavin (~nomo@95.87.208.95) (Ping timeout: 256 seconds)
[01:21:06] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:406f:781b:19d4:b814)
[01:24:40] *** Joins: rgrinberg (~textual@187.223.209.255)
[01:26:08] *** Joins: biberu (~biberu@user/biberu)
[01:27:39] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[01:27:59] *** Joins: Fairy (~Fairy@2001:464a:4992:0:fddd:e672:32ce:4073)
[01:28:33] <Alipha> kalven: hm. so apparently i have a const problem somewhere?
[01:28:50] *** Joins: hingwah (~hingwah@node-1w7jr9phwiwmvebhn9aitbh8b.ipv6.telus.net)
[01:29:00] *** Joins: pdroman (~pdroman@27.red-88-5-21.dynamicip.rima-tde.net)
[01:29:08] <Alipha> (removing the const from `const std::vector<int> v` fixes it, as i'm sure you're aware)
[01:29:15] *** Joins: x28girl (~x28girl@user/x28girl)
[01:30:08] <kalven> yes, I just took PJBoy's working code and added const :)
[01:30:37] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 240 seconds)
[01:30:38] <PJBoy> this probably ties into why the zip proposal has all these const swappers now
[01:30:42] *** Quits: magla (~gelignite@55d42175.access.ecotel.net) (Quit: Stay safe!)
[01:30:44] *** Quits: pdroman (~pdroman@27.red-88-5-21.dynamicip.rima-tde.net) (Client Quit)
[01:31:26] *** Joins: x28_girl (~x28girl@user/x28girl)
[01:33:20] *** Joins: x28__girl (~x28girl@user/x28girl)
[01:35:06] *** Quits: x28girl (~x28girl@user/x28girl) (Ping timeout: 256 seconds)
[01:35:47] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[01:40:35] *** Quits: karakedi (~eAC53C340@user/karakedi) (Read error: Connection reset by peer)
[01:40:50] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:40:59] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:40:59] *** ChanServ sets mode: +v npaperbot
[01:41:09] *** Quits: Akuli (~Akuli@87-94-109-1.bb.dnainternet.fi) (Quit: Akuli)
[01:42:18] *** Quits: anandn (~anandn@2601:600:a27f:d92d:151d:1f53:302f:b5fe) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:43:36] *** Joins: karakedi (~eAC53C340@user/karakedi)
[01:44:29] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[01:47:31] *** Quits: x28__girl (~x28girl@user/x28girl) (Remote host closed the connection)
[01:47:57] *** Joins: x28__girl (~x28girl@user/x28girl)
[01:48:58] *** Quits: x28__girl (~x28girl@user/x28girl) (Max SendQ exceeded)
[01:49:27] *** Joins: x28__girl (~x28girl@user/x28girl)
[01:50:39] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:50:45] *** Quits: x28__girl (~x28girl@user/x28girl) (Max SendQ exceeded)
[01:51:31] *** Joins: hfsoulz (~hfsoulz@user/hfsoulz)
[01:51:55] *** Joins: x28__girl (~x28girl@user/x28girl)
[01:52:05] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[01:52:31] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 256 seconds)
[01:55:25] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Read error: Connection reset by peer)
[01:55:30] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 256 seconds)
[01:57:21] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[02:00:35] <CarloWood> Damn, ... can't do std::atomic<MySizeTWrapper> because MySizeTWrapper wouldn't be 'integral' :/
[02:00:37] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[02:02:17] *** Quits: techsurvivor (~don@94.198.42.251) (Ping timeout: 240 seconds)
[02:02:41] *** Quits: rgrinberg (~textual@187.223.209.255) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:03:45] *** Joins: anandn (~anandn@2601:600:a27f:d92d:151d:1f53:302f:b5fe)
[02:04:23] *** Joins: techsurvivor (~don@86.106.143.128)
[02:04:42] <CarloWood> Uh, can't reproduce it. https://wandbox.org/permlink/lGuyERuc0V3VOP7U
[02:05:18] *** Quits: anandn (~anandn@2601:600:a27f:d92d:151d:1f53:302f:b5fe) (Client Quit)
[02:06:00] *** Joins: anandn (~anandn@2601:600:a27f:d92d:151d:1f53:302f:b5fe)
[02:07:51] *** Quits: anandn (~anandn@2601:600:a27f:d92d:151d:1f53:302f:b5fe) (Client Quit)
[02:08:43] *** Joins: anandn (~anandn@98.232.3.180)
[02:09:35] *** Joins: kit_ten (~u0_a391@2603-6010-a141-6fa3-950d-0150-5311-7e6b.res6.spectrum.com)
[02:13:01] *** Quits: kit-ten (~u0_a391@2600:380:a417:4988:a0ad:2a9c:1eef:118e) (Ping timeout: 240 seconds)
[02:13:47] *** Joins: walterwhip (~www@user/walterwhip)
[02:22:38] *** Joins: seninha (~seninha@user/seninha)
[02:22:58] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[02:24:01] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:24:41] *** Joins: duuude (~user@user/duuude)
[02:33:05] *** Quits: anandn (~anandn@98.232.3.180) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:33:56] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[02:33:59] *** Joins: pizdets (~pizdets@183.182.111.72)
[02:34:02] *** Quits: pizdets_ (~pizdets@183.182.115.239) (Ping timeout: 256 seconds)
[02:34:16] *** Joins: anandn (~anandn@2601:600:a27f:d92d:151d:1f53:302f:b5fe)
[02:35:00] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:36:53] <CarloWood> This works: https://wandbox.org/permlink/ztH4oFSReMAz7FTj
[02:37:00] <CarloWood> And so does this: https://wandbox.org/permlink/GIqoD2uFDCM9H0se
[02:38:01] <CarloWood> Any chance to get this to work? https://wandbox.org/permlink/3sEr06mpK5byiLU3
[02:38:37] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[02:40:23] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[02:41:04] *** Quits: anandn (~anandn@2601:600:a27f:d92d:151d:1f53:302f:b5fe) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:41:58] *** Quits: evelyette (~Eleanor@178.79.105.181) (Ping timeout: 256 seconds)
[02:43:10] <BurumaSerafuku> !works
[02:43:11] <nolyc> It works it works! Omg omg omg! I mean it compiles. Now what's a segfault?
[02:43:41] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[02:43:57] *** Quits: AmR (~AmREiSa@41.36.185.103) (Quit: Konversation terminated!)
[02:44:40] <kalven> CarloWood: have you considered having your A wrap an atomic<int> instead of the other way around?
[02:45:12] *** Joins: anandn (~anandn@2601:600:a27f:d92d:151d:1f53:302f:b5fe)
[02:45:47] <CarloWood> Yes, but that doesn't seem an option.
[02:46:13] <kalven> I mean struct A { atomic<int> n; }
[02:46:25] <BurumaSerafuku> the As and Bs are really confusing
[02:46:30] *** Quits: Schrostfutz (~Schrostfu@55d4263e.access.ecotel.net) (Ping timeout: 256 seconds)
[02:46:49] <CarloWood> I have a (template) type Index<Foo> and a utility class UniqueID<T>.
[02:47:14] <CarloWood> I want to generate unique Index<Foo>'s, so I use:  UniqueID<Index<Foo>>.
[02:47:41] <CarloWood> UniqueID wraps its T in an atomic:  std::atomic<T> and tries to ++ it.
[02:48:05] <AliceMeows> It smells
[02:48:07] <CarloWood> I don't want to change Index to use atomic internally, normally it is never atomic. Doesn't need to be.
[02:48:15] <CarloWood> You smell.
[02:48:37] <AliceMeows> Thank you :)
[02:48:43] <CarloWood> The only way I can think of is to overload atomic itself.
[02:48:56] <CarloWood> specialize I mean
[02:49:13] <AliceMeows> Sound you're just trying to hack something in a way you shouldn't be
[02:49:14] <CarloWood> I could specialize std::atomic<Index<T>>
[02:50:09] *** Joins: pottsy (~pottsy@129.227.183.244)
[02:50:14] <CarloWood> Alice: how is combining two utilities a hack? If I can make it work the utils end up more powerful.
[02:50:45] <AliceMeows> I'm not entirely sure what you're trying to do but the way you're doing it seem hackish to me
[02:50:57] <CarloWood> Yes I got that.
[02:52:06] *** Quits: navidr (uid112413@id-112413.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[02:52:46] *** Quits: Fleck (~fleck@user/fleck) (Remote host closed the connection)
[02:53:09] *** Joins: Fleck (~fleck@user/fleck)
[02:53:10] <BurumaSerafuku> AliceMeows: agree with the smell
[02:53:11] <CarloWood> kalven: so, you think I can/should specialize std::atomic - or is this too hackish?  ;). Or can you think of another way.  At least I explained why I can't just change "struct A" - that is an existing utility that have used for years and I don't want to make it atomic for everything.
[02:53:37] *** Quits: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by) (Ping timeout: 240 seconds)
[02:54:21] <kalven> CarloWood: specializing std::atomic seems pretty dubious. another option is to add a new class AtomicIndex
[02:56:56] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:57:46] <CarloWood> I know that most people would just hack their way around this with NEW code (at the application level) to get their unique Index. I rather fix the utility library to also work with this new demand.  Adding an AtomicIndex falls in principle in that last category because Index is a utility too. But:
[02:59:05] <CarloWood> What I have is a large code base that uses Index in a lot of places, without the need for it to be atomic.  There is only the need to be atomic to generate a unique ID when using the OTHER utility (UniqueID) which wants to be thread-safe.
[02:59:26] *** Quits: anandn (~anandn@2601:600:a27f:d92d:151d:1f53:302f:b5fe) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:59:31] <CarloWood> In fact, I don't even need it to be atomic in this specific case :/... there is just one thread.
[03:00:07] <CarloWood> Anyway, I don't want to work with AtomicIndex everywhere, so I could generate a unique ID using AtomicIndex and then allow to assign that to an Index. That would work.
[03:00:22] <CarloWood> But then we have the exact same problem :P
[03:01:09] <CarloWood> I mean - then I changed A into  struct A { atomic<int> id; };   but UniqueID<A> will still not work.
[03:01:41] *** Joins: anandn (~anandn@98.232.3.180)
[03:01:42] *** Quits: hingwah (~hingwah@node-1w7jr9phwiwmvebhn9aitbh8b.ipv6.telus.net) (Remote host closed the connection)
[03:03:21] <CarloWood> Btw, this is UniqueID: https://github.com/CarloWood/ai-utils/blob/master/UniqueID.h
[03:03:47] <CarloWood> That still uses std::integral even; I'd have to change that at the very least.
[03:04:31] <CarloWood> The idea is that you make a UniqueIDContext<int> context;  and then get your unique ID's with: context.get_id().
[03:05:16] *** Joins: Awareness (~Awareness@95.12.113.217)
[03:05:25] *** Quits: geeknix (~pi@2001:e68:5432:307:f6b7:9845:4bce:2869) (Ping timeout: 240 seconds)
[03:06:17] <CarloWood> I think I should just make a non-integral version of UniqueIDContext that uses a mutex instead of being atomic.  That feels kinda silly for integral wrappers though...
[03:06:20] *** Quits: rayw (~ray@cpc83999-pool15-2-0-cust1.15-1.cable.virginm.net) (Ping timeout: 256 seconds)
[03:07:02] <AliceMeows> std::is_integral is a thing
[03:07:19] <CarloWood> And really, I hoped that std::atomic would automatically do that for me... but they don't implement operator++ for non-integral types instead of falling back to a mutex.
[03:10:47] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:10:51] <kalven> CarloWood: yeah.. idk man. The few times when I need an id generator, I just have a plain counter somewhere and do line 37 of your UniqueID.h. Not all the other stuff
[03:12:06] <CarloWood> I think I am going to make UniqueIDContext work non-thread-safe with non-integrals. Then one has to pass a thread-safe T if it isn't an integral to be thread-safe...
[03:12:56] <CarloWood> kalven: I hear you. It compiles both to the same assembly of course. I just like this better because it is more clear about within which context the id is unique.
[03:13:27] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[03:13:41] *** Quits: anandn (~anandn@98.232.3.180) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:13:54] <CarloWood> And more robust of course :P.  There is no way someone can access the counter outside of the intended API...
[03:14:34] <AliceMeows> You'd be surprised what some people do
[03:15:03] <kalven> if I had a UniqueID class like that, I'd add tag type to it so that you don't mix a foo_id with a bar_id.
[03:15:20] *** Joins: anandn (~anandn@2601:600:a27f:d92d:151d:1f53:302f:b5fe)
[03:16:01] <CarloWood> That is an idea.
[03:16:37] *** Quits: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070) (Ping timeout: 240 seconds)
[03:17:25] <CarloWood> I only made this a month ago... another reason why I like utils: a central place used by all my projects; so that if I improve it, all code benefits and I don't have edit 100 places to get that effect.
[03:17:41] *** Joins: ferdna (~ferdna@user/ferdna)
[03:17:57] <CarloWood> (I would still have to edit 100 places for tags, but at least the compiler would point out where ;)
[03:18:17] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 240 seconds)
[03:18:18] *** Joins: geeknix (~pi@2001:e68:5432:a8c4:1393:329d:a357:f118)
[03:21:48] *** Joins: chozorho (~chozorho@2601:146:300:c30::c70c)
[03:30:14] *** Quits: anandn (~anandn@2601:600:a27f:d92d:151d:1f53:302f:b5fe) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:31:25] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Ping timeout: 240 seconds)
[03:31:27] *** Joins: anandn (~anandn@2601:600:a27f:d92d:151d:1f53:302f:b5fe)
[03:33:22] *** Quits: anandn (~anandn@2601:600:a27f:d92d:151d:1f53:302f:b5fe) (Client Quit)
[03:40:41] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[03:41:28] *** Quits: roadt_ (~roadt@60.168.93.72) (Ping timeout: 256 seconds)
[03:41:50] *** Quits: Pook (~Pook@2001:8a0:f996:1400:a56d:2cce:c1f:3ace) (Quit: Leaving)
[03:41:52] <CarloWood> kalven: is there a way to do this without defining a new concept in my namespace?
[03:42:03] <CarloWood> template<class T> concept not_integral = !std::is_integral_v<T>;
[03:42:15] <CarloWood> template<not_integral T> class UniqueIDContext<T> { ... }
[03:43:12] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:406f:781b:19d4:b814) (Ping timeout: 268 seconds)
[03:43:42] <kalven> dunno, haven't used concepts yet
[03:44:40] *** Joins: goepsilongo (~goepsilon@2806:263:c404:8000:a19a:aab0:db5f:4d8c)
[03:44:47] <AliceMeows> Assuming your syntax is correct as I'm not well versed yet then I see no reason why it wont work
[03:46:47] <CarloWood> Why what won't work?
[03:47:01] <AliceMeows> Your concept
[03:47:10] <CarloWood> Reread my question :)
[03:47:35] <AliceMeows> I'm not sure then
[03:47:50] <Alipha> can you put a requires clause on a class template specialization? :-/
[03:48:03] <CarloWood> template<!std::integral T> class UniqueIDContext<T> { ... }  isn't working ;)
[03:48:34] <CarloWood> Alipha: hi - I don't know :/.  I was thinking about requires too, but so far I can't find any examples.
[03:49:14] <CarloWood> A Google for   declare template with inline concept   results in anything but this topic.
[03:49:35] <CarloWood> Neither did "reverse concept" give me anything
[03:50:25] <CarloWood> I guess that you can ONLY replace 'typename' with a concept name, in template<typename T> ..
[03:50:35] <CarloWood> which mean I'll have to define a new concept.
[03:50:49] <CarloWood> means*
[03:51:29] <kalven> can you do template<typename T> requires !std::integral<T> class UniqueBlahblah { ... ?
[03:51:55] <Alipha> kalven: that's the syntax I was looking at
[03:52:25] <Alipha> Note no <T> after UniqueIDContext
[03:52:28] <CarloWood> UniqueID.h:47:31: error: parentheses are required around this expression in a requires clause
[03:52:28] <CarloWood> template<typename T> requires !std::integral<T>
[03:52:29] <CarloWood>                               ^~~~~~~~~~~~~~~~~
[03:52:43] <kalven> so requires (!std::integral<T>)
[03:53:30] <CarloWood> Alipha: that is needed, since it is a specialization, see https://stackoverflow.com/a/44044894/1487069
[03:54:14] *** Joins: roadt_ (~roadt@60.168.93.178)
[03:54:27] <CarloWood> Awesome, this works:
[03:54:30] <CarloWood> template<typename T> requires (!std::integral<T>)
[03:54:30] <CarloWood> class UniqueIDContext<T>
[03:55:00] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[03:55:38] <Alipha> Weird. I was basing my statement on the example after "Disjunctions"  https://en.cppreference.com/w/cpp/language/constraints
[03:56:00] <CarloWood> I can't get myself to change this:
[03:56:03] <CarloWood>    bool operator==(UniqueID other) const { return m_id == other.m_id; }
[03:56:04] <CarloWood> to
[03:56:11] <CarloWood>    bool operator==(UniqueID const& other) const { return m_id == other.m_id; }
[03:56:35] <CarloWood> because *normally* T is a builtin integral :P. Or a wrapper around one :/.
[03:56:46] <CarloWood> But now T can theoretically be a large class......
[03:57:17] <CarloWood> I suppose compiler optimization will take care of it, but that doesn't feel like a guarantee.
[03:57:40] <CarloWood> take care of the const& that is
[03:57:40] <Alipha> Well, regardless, you definitely should have the second const (ie, that needs to be a const member function). Or make it a non-member function, which would be preferred
[03:58:47] <CarloWood> it is const.. I am talking about passing the argument(s) as const& instead of by value, while in 99.999% of the case T will be a builtin.
[03:59:08] <kalven> static_assert(sizeof(UniqueID) <= 16, "u idiot");
[03:59:15] <CarloWood> haha
[03:59:53] <Alipha> Use concepts to overload on the sizeof ;-)
[03:59:59] <CarloWood> s/u idiot/contact me for my bitcoin address/
[04:00:02] *** Joins: causative (~halberd@user/causative)
[04:00:16] <AliceMeows> You could probably do something with templates to alter the type
[04:00:44] *** Joins: rgrinberg (~textual@187.223.209.255)
[04:03:14] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[04:03:16] <CarloWood> Strange that this doesn't work:
[04:03:19] <CarloWood>   operator T() requires (sizeof(T) <= 2 * sizeof(long)) const { return m_id; }
[04:10:18] *** Quits: rgrinberg (~textual@187.223.209.255) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:11:37] *** Quits: jkaye (~jkaye@2601:281:8300:7530:a9ff:dc19:c096:5ef5) (Ping timeout: 240 seconds)
[04:12:36] <CarloWood> I just don't understand concepts it seems :(
[04:12:41] <CarloWood> Why does this not compile?
[04:12:43] <CarloWood> template<typename T>
[04:12:43] <CarloWood> concept SaneT = requires(sizeof(T) <= 2 * sizeof(long));
[04:12:53] <AliceMeows> concepts only work with templates I believe
[04:13:02] <CarloWood> note the template
[04:14:01] *** Quits: x28_girl (~x28girl@user/x28girl) (Remote host closed the connection)
[04:14:25] *** Joins: x28_girl (~x28girl@user/x28girl)
[04:17:51] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[04:18:06] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[04:18:25] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[04:19:24] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[04:22:25] *** Joins: Tokamak (~Tokamak@172.58.188.35)
[04:26:32] <CarloWood> And thus we arrived at this abomination:  https://github.com/CarloWood/ai-utils/blob/master/UniqueID.h
[04:26:46] <CarloWood> But hey - it works.
[04:28:02] <AliceMeows> Couldn't you use if constexpr?
[04:28:37] <CarloWood> No, I changed the argument types.
[04:28:39] <kalven> spectacular overengineering dude.. just use the const ref version. It doesn't matter since that stuff should get inline anyway
[04:29:55] <CarloWood> You could have said that after: <CarloWood> I suppose compiler optimization will take care of it, but that doesn't feel like a guarantee.
[04:29:56] <AliceMeows> kalven: I find that terrible thing to do to rely on the compiler and hope for it to do the right thing
[04:30:16] <kalven> AliceMeows: bummer dude
[04:30:22] <AliceMeows> It really isn't a guarantee
[04:30:37] *** Quits: Fairy (~Fairy@2001:464a:4992:0:fddd:e672:32ce:4073) (Ping timeout: 240 seconds)
[04:30:50] <CarloWood> Not guaranteed by the standard in any way I agree.
[04:30:54] <kalven> the only place where this will matter is if the code decides to not inline that 1-line function
[04:31:06] <CarloWood> But since I only use two compilers I could have tested it out ;)
[04:31:54] <AliceMeows> I had the compiler failing far too many times to rely on it
[04:32:37] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 240 seconds)
[04:32:48] <CarloWood> I agree with kalven that it looks ridiculous, as in - I had visions of not being hired somewhere because they saw I wrote this - but then again, I'll never go work anywhere anyway :P.
[04:32:59] <kalven> knowing CarloWood, he wouldn't be writing this UniqueID class to begin with if he thought there was a chance that those few functions wont get inlined
[04:33:02] <AliceMeows> C++ should really provide better guarantees for such stuff and I don't mean forced inline but a better way to construct something like this
[04:33:06] <CarloWood> But I really couldn't get myself to use const&.. because 99.999% of the cases...
[04:33:27] <kalven> 99.99999% of the cases what?
[04:33:36] *** Joins: jkaye (~jkaye@2601:281:8300:7530:a78a:7d05:3820:99ae)
[04:33:43] <CarloWood> <CarloWood> it is const.. I am talking about passing the argument(s) as const& instead of by value, while in 99.999% of the case T will be a builtin.
[04:34:11] <kalven> but in all the cases you care about, that function will be inlined anyway, right?
[04:34:37] *** Quits: Burgundy (~yomon@82.76.72.88) (Ping timeout: 240 seconds)
[04:34:45] <CarloWood> I am sure I wasted 1000000 times more time with writing this then that I'll ever gain with it.
[04:34:45] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[04:35:18] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[04:35:43] <CarloWood> I might change it later, when I feel too ashamed to have code like this in public on the internet - but it was kinda fun to get it working.
[04:36:32] *** Quits: Viewday11 (~Viewday@user/viewday) (Quit: The Lounge - https://thelounge.chat)
[04:36:38] *** Quits: zenstoic (uid461840@id-461840.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[04:37:13] <CarloWood> More serious though... I am more not convinced that after inlining the reference will evaporate than that it won't be inlined.
[04:37:33] <kalven> huh?
[04:37:34] <CarloWood> You seem pretty sure that after inlining the whole reference will be "optimized away".
[04:38:00] <AliceMeows> Too much of that thinking leads to garbage software
[04:38:28] <CarloWood> I kinda secretly see a reference as a pointer... So, you tell the compiler to take the pointer of a variable, and pass that.  What guarantee do you have it will roll that back when seeing the whole inlined picture?
[04:38:45] <AliceMeows> There is none
[04:39:29] <AliceMeows> Use the most aggressive optimization your compiler offers and hope it does the right thing (I wouldn't count on that)
[04:39:33] <kalven> CarloWood: just so we're on the same page, we're talking about that it's generally preferred to pass small types (<= sizeof two words) by value instead of const ref, right? because a ref implies that the value has to be written to memory somwhere and a pointer is then passed to the function (in the ABIs we care about)
[04:39:54] <CarloWood> yes
[04:40:49] <CarloWood> I will ALWAYS pass small types by value - and so do you I understand. And that IS out of fear that a const& won't result in the same optimal code, no? So that fear exists... hence my problem in this case.
[04:40:52] <kalven> and that only matters if the function ends up not getting inlined.. if it gets inlined, then there's no ABI to maintain
[04:41:33] <kalven> I get what you're trying to achieve, but I'd think that *you* would think it's a bigger issue if that 1-line operator== doesn't get inlined
[04:42:06] <CarloWood> Well, no - if it gets inlined there is still a chance that the resulting assembly with a const& looks worse. It is unlikely given the compilers I use - but there is not hard guarantee.
[04:43:02] <CarloWood> Lets not waste even more time on this ;).  It's 2:15 AM and I still have to put sheets on my bed too :(
[04:43:13] <kalven> by that reasoning, you have no guarantees either way
[04:43:14] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[04:43:19] <CarloWood> I'm heading to bed now. Thanks for the help and discussions :)
[04:43:22] <kalven> word
[04:43:25] *** Quits: jfsimon1981 (~jfsimon19@2.65.136.88.rev.sfr.net) (Ping timeout: 240 seconds)
[04:44:01] *** Joins: jfsimon1981 (~jfsimon19@124.10.4.84.rev.sfr.net)
[04:49:20] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 252 seconds)
[04:51:49] *** Joins: walterwhip (~www@user/walterwhip)
[04:52:49] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[04:53:37] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[04:59:15] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[05:00:19] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[05:05:18] *** Joins: frost (~frost@user/frost)
[05:06:33] *** Quits: Tokamak (~Tokamak@172.58.188.35) (Read error: Connection reset by peer)
[05:08:09] *** Joins: Tokamak (~Tokamak@172.58.188.35)
[05:08:57] *** Quits: AliceMeows (~AliceMeow@user/alicemeows) (Quit: Leaving.)
[05:10:34] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[05:12:08] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[05:13:25] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[05:17:42] *** Quits: pottsy (~pottsy@129.227.183.244) (Ping timeout: 250 seconds)
[05:22:15] *** Quits: Tokamak (~Tokamak@172.58.188.35) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:23:32] *** Joins: Tokamak (~Tokamak@172.58.188.35)
[05:26:03] *** Joins: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070)
[05:26:32] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[05:26:43] *** Quits: joo-_ (~joo-_@fsf/member/joo--) (Ping timeout: 256 seconds)
[05:27:51] *** Quits: jfsimon1981 (~jfsimon19@124.10.4.84.rev.sfr.net) (Ping timeout: 256 seconds)
[05:28:16] *** Joins: joo-_ (~joo-_@80-62-117-53-mobile.dk.customer.tdc.net)
[05:28:16] *** Quits: joo-_ (~joo-_@80-62-117-53-mobile.dk.customer.tdc.net) (Changing host)
[05:28:16] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[05:28:58] *** Joins: jfsimon1981 (~jfsimon19@51.82.75.86.rev.sfr.net)
[05:30:37] *** Quits: dld (~davidlowr@2601:197:600:1210:a837:f325:7d6a:5246) (Ping timeout: 240 seconds)
[05:32:57] *** Joins: dld (~davidlowr@73.61.8.240)
[05:35:57] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[05:36:29] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[05:37:00] *** Joins: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net)
[05:39:05] *** Joins: Xardas (~Xardas@149.233.51.127)
[05:40:37] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-43-67-70-144-25.dsl.bell.ca) (Ping timeout: 240 seconds)
[05:40:50] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:40:59] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:40:59] *** ChanServ sets mode: +v npaperbot
[05:42:02] *** Quits: Budd (~Budd@2001:470:8d44:1::5) (Quit: Leaving)
[05:51:06] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-43-67-70-144-114.dsl.bell.ca)
[05:51:14] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[05:52:13] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 240 seconds)
[05:52:44] *** Joins: Xardas (~Xardas@149.233.51.127)
[05:55:21] *** Quits: Xardas (~Xardas@149.233.51.127) (Client Quit)
[05:55:49] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-43-67-70-144-114.dsl.bell.ca) (Ping timeout: 240 seconds)
[05:55:53] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[05:57:30] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-56.dsl.bell.ca)
[05:57:31] *** Joins: frost (~frost@user/frost)
[05:58:00] *** Joins: rgrinberg (~textual@187.223.209.255)
[05:58:05] *** Joins: immibis_ (~hexchat@62.156.144.218)
[05:58:36] *** Quits: immibis (~hexchat@62.156.144.218) (Ping timeout: 256 seconds)
[06:07:24] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:07:25] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 240 seconds)
[06:09:13] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[06:09:20] *** Quits: x28_girl (~x28girl@user/x28girl) (Read error: Connection reset by peer)
[06:09:45] *** Joins: x28_girl (~x28girl@user/x28girl)
[06:12:00] *** Joins: dsrt^ (~dsrt@wsip-98-188-246-242.mc.at.cox.net)
[06:12:17] *** Quits: reset (~reset@user/reset) (Ping timeout: 240 seconds)
[06:12:37] *** Quits: sebbu (~sebbu@user/sebbu) (Ping timeout: 240 seconds)
[06:13:00] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[06:13:12] *** Joins: sebbu (~sebbu@user/sebbu)
[06:21:50] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[06:25:28] *** Joins: walterwhip (~www@user/walterwhip)
[06:28:31] *** Joins: Fairy (~Fairy@2001:464a:4992:0:74d4:7e78:2b3a:4c42)
[06:29:24] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[06:31:00] *** Quits: x28_girl (~x28girl@user/x28girl) (Remote host closed the connection)
[06:32:46] *** Joins: x28_girl (~x28girl@user/x28girl)
[06:33:02] *** Quits: x28_girl (~x28girl@user/x28girl) (Remote host closed the connection)
[06:33:30] *** Joins: x28_girl (~x28girl@user/x28girl)
[06:39:57] *** Quits: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:40:42] *** Joins: frost (~frost@user/frost)
[06:40:44] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[06:41:08] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[06:41:31] *** Joins: walterwhip (~www@user/walterwhip)
[06:42:04] *** Quits: gnomesort (~gnomesort@user/gnomesort) (Quit: ZNC - https://znc.in)
[06:43:42] *** Joins: gnomesort (~gnomesort@user/gnomesort)
[06:44:34] *** Joins: PureSine (~PureSine@user/PureSine)
[06:45:04] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[06:45:38] *** Quits: PureSine (~PureSine@user/PureSine) (Read error: Connection reset by peer)
[06:45:48] *** Joins: PureSine (~PureSine@user/PureSine)
[06:46:12] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[06:47:34] *** Joins: slidercrank (~slidercra@user/slidercrank)
[06:49:55] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[06:50:01] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[06:51:13] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[06:57:05] *** Joins: Tech_8 (~Tech_8@24.51.61.131)
[06:57:07] <Tech_8> whats harder, the english language syntax and grammer or the C or C++ coding syntax
[06:59:02] *** Parts: Tech_8 (~Tech_8@24.51.61.131) ()
[07:02:50] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[07:03:23] <Stryyker> English language does not have a compiler throwing at errors and warnings before you use it. You can make a lot of mistakes and still get the job done
[07:08:04] *** Quits: tobs (~tobs@taboege.de) (Ping timeout: 265 seconds)
[07:08:05] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[07:08:13] *** Joins: tobs (~tobs@taboege.de)
[07:08:52] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[07:10:03] *** Joins: anandn (~anandn@2601:600:a27f:d92d:151d:1f53:302f:b5fe)
[07:15:34] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[07:19:02] *** Quits: x28__girl (~x28girl@user/x28girl) (Remote host closed the connection)
[07:19:02] *** Quits: x28_girl (~x28girl@user/x28girl) (Remote host closed the connection)
[07:19:26] *** Joins: x28__girl (~x28girl@user/x28girl)
[07:19:26] *** Joins: x28_girl (~x28girl@user/x28girl)
[07:22:16] *** Quits: Tokamak (~Tokamak@172.58.188.35) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:23:32] *** Quits: x28__girl (~x28girl@user/x28girl) (Remote host closed the connection)
[07:24:04] *** Joins: x28__girl (~x28girl@user/x28girl)
[07:24:57] *** Quits: x28__girl (~x28girl@user/x28girl) (Max SendQ exceeded)
[07:25:26] *** Joins: x28__girl (~x28girl@user/x28girl)
[07:27:13] *** Quits: constxd (~brad@142.134.38.68) (Quit: WeeChat 2.8)
[07:28:13] *** Quits: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070) (Ping timeout: 240 seconds)
[07:28:24] *** Quits: spithash (~spithash@user/spithash) (Ping timeout: 276 seconds)
[07:29:15] *** Joins: walterwhip (~www@user/walterwhip)
[07:29:50] *** Joins: spithash (~spithash@user/spithash)
[07:29:52] *** Quits: xcm_ (~xcm@user/xcm) (Remote host closed the connection)
[07:30:24] *** Joins: xcm_ (~xcm@user/xcm)
[07:33:29] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[07:33:49] *** Quits: kit_ten (~u0_a391@2603-6010-a141-6fa3-950d-0150-5311-7e6b.res6.spectrum.com) (Ping timeout: 240 seconds)
[07:33:54] *** Joins: ironman (~ironman@2401:4900:503b:d27a:3c5a:4279:4eed:bf91)
[07:35:32] *** Joins: kit_ten (~u0_a391@cpe-76-190-178-139.neo.res.rr.com)
[07:39:46] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[07:40:55] *** Joins: frost_ (~Srain@59.71.240.87)
[07:44:25] *** Quits: frost_ (~Srain@59.71.240.87) (Remote host closed the connection)
[07:46:14] *** Joins: frost (~frost@user/frost)
[07:50:28] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Read error: Connection reset by peer)
[07:50:48] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[07:52:01] *** Joins: ironman_ (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[07:53:08] *** Joins: frost (~frost@user/frost)
[07:54:17] *** Quits: ironman (~ironman@2401:4900:503b:d27a:3c5a:4279:4eed:bf91) (Ping timeout: 240 seconds)
[07:54:40] *** ironman_ is now known as ironman
[07:56:37] *** Quits: jkaye (~jkaye@2601:281:8300:7530:a78a:7d05:3820:99ae) (Ping timeout: 240 seconds)
[07:56:38] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:57:18] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Remote host closed the connection)
[07:59:30] *** Joins: hinata (~hinata@2409:4042:d98:f536:e41d:5693:2f5e:aa70)
[08:00:22] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[08:00:26] *** Quits: HvszrStykp (~X@81.171.62.86) (Ping timeout: 256 seconds)
[08:02:01] *** Joins: walterwhip (~www@user/walterwhip)
[08:02:56] *** Quits: walterwhip (~www@user/walterwhip) (Client Quit)
[08:05:09] *** Joins: walterwhip (~www@user/walterwhip)
[08:07:39] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 256 seconds)
[08:08:35] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[08:10:41] *** Joins: msim_ (~msim@2001:8003:d194:d000::d8d)
[08:15:35] *** Quits: walterwhip (~www@user/walterwhip) (Ping timeout: 256 seconds)
[08:17:46] *** Quits: Awareness (~Awareness@95.12.113.217) (Quit: Client closed)
[08:18:36] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[08:21:51] *** Joins: vicfred (~vicfred@user/vicfred)
[08:23:49] *** Joins: ElectronApps (~ElectronA@user/electronapps)
[08:25:21] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:40f5:2114:f40e:465b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:31:01] *** Quits: Fairy (~Fairy@2001:464a:4992:0:74d4:7e78:2b3a:4c42) (Ping timeout: 240 seconds)
[08:31:07] *** Joins: NiD27 (~nid27@49.205.144.200)
[08:32:54] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Quit: Leaving)
[08:33:16] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[08:43:58] *** Quits: malloy (~jimery@116.30.220.175) (Ping timeout: 250 seconds)
[08:46:08] *** Joins: malloy (~jimery@116.30.220.175)
[08:49:41] *** Quits: duuude (~user@user/duuude) (Ping timeout: 268 seconds)
[08:51:33] *** Quits: x28__girl (~x28girl@user/x28girl) (Remote host closed the connection)
[08:51:33] *** Quits: x28_girl (~x28girl@user/x28girl) (Remote host closed the connection)
[08:52:06] *** Joins: x28__girl (~x28girl@user/x28girl)
[08:52:06] *** Joins: x28_girl (~x28girl@user/x28girl)
[08:55:06] *** Joins: crm (~crm@70.120.0.94)
[08:55:06] *** Joins: Leo_V (~Leo@157.52.18.77)
[08:55:45] *** Joins: peeps (~peepsalot@openscad/peepsalot)
[08:56:03] *** Quits: x28_girl (~x28girl@user/x28girl) (Remote host closed the connection)
[08:56:03] *** Quits: x28__girl (~x28girl@user/x28girl) (Remote host closed the connection)
[08:56:31] *** Joins: x28_girl (~x28girl@user/x28girl)
[08:56:32] *** Joins: x28__girl (~x28girl@user/x28girl)
[08:56:41] *** Joins: presonic (~presonic@111-22-237-24.gci.net)
[08:57:07] *** Joins: Xark_ (~Xark@47.156.11.28)
[08:57:12] *** Joins: hasuTMK (~hasu@58x13x224x139.ap58.ftth.ucom.ne.jp)
[08:57:14] *** Joins: VShell (~shell@user/shell)
[08:57:32] *** Joins: WarauSalesman (~sjw@69.206.48.64)
[08:57:37] *** Joins: samuelb (~samuelber@nata01.lip.pt)
[08:57:41] *** Joins: purplex_ (~purplex@user/purplex)
[08:58:04] *** Joins: pieguy128_ (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-56.dsl.bell.ca)
[08:58:42] *** Joins: packet_lozenge_ (~packet_lo@user/packet-lozenge/x-7125090)
[08:58:44] *** Joins: mattgirv_ (quassel@apps.fossgalaxy.com)
[08:58:46] *** Joins: bzyx_ (~quassel@89-69-20-238.dynamic.chello.pl)
[08:59:08] *** Joins: moberg1 (~moberg@luke.millenniumfalcon.org)
[08:59:18] *** Joins: Sorcerer1 (~SorcererX@133.79-161-60.customer.lyse.net)
[08:59:23] *** Joins: Latexi95_ (late@banhammer.fi)
[08:59:28] *** Joins: martiert_ (~martiert@ti0185q160-2775.bb.online.no)
[08:59:41] *** Joins: routeveg_ (~lee@197.ip-51-195-136.eu)
[08:59:50] *** Joins: dzoe_ (joe@joe.cz)
[09:00:03] *** Quits: x28_girl (~x28girl@user/x28girl) (Remote host closed the connection)
[09:00:03] *** Quits: x28__girl (~x28girl@user/x28girl) (Remote host closed the connection)
[09:00:04] *** Joins: Sadale_ (~Sadale@user/sadale)
[09:00:05] *** Joins: ville_ (~ville@user/ville)
[09:00:05] *** Joins: Flecks (~fleck@user/fleck)
[09:00:07] *** Joins: pascal1 (~SIGILL@user/pascal)
[09:00:08] *** Joins: aku_ (~aku@163.172.137.34)
[09:00:27] *** Joins: x28__girl (~x28girl@user/x28girl)
[09:00:27] *** Joins: x28_girl (~x28girl@user/x28girl)
[09:00:36] *** Quits: Hello72 (~Hello71@wireguard/contributor/hello71) (Remote host closed the connection)
[09:00:54] *** Joins: Hello72 (~Hello71@wireguard/contributor/hello71)
[09:01:51] *** Joins: gnomesort_ (~gnomesort@user/gnomesort)
[09:02:34] *** Joins: reset (~reset@user/reset)
[09:03:02] *** Joins: Griwes_ (~griwes@znc.reaver-project.org)
[09:04:36] *** Joins: rmd_ (~rm@ec2-52-202-15-104.compute-1.amazonaws.com)
[09:05:10] *** Quits: slidercrank (~slidercra@user/slidercrank) (*.net *.split)
[09:05:10] *** Quits: PureSine (~PureSine@user/PureSine) (*.net *.split)
[09:05:10] *** Quits: gnomesort (~gnomesort@user/gnomesort) (*.net *.split)
[09:05:10] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-56.dsl.bell.ca) (*.net *.split)
[09:05:10] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (*.net *.split)
[09:05:11] *** Quits: causative (~halberd@user/causative) (*.net *.split)
[09:05:11] *** Quits: roadt_ (~roadt@60.168.93.178) (*.net *.split)
[09:05:11] *** Quits: Fleck (~fleck@user/fleck) (*.net *.split)
[09:05:11] *** Quits: bzyx (~quassel@89-69-20-238.dynamic.chello.pl) (*.net *.split)
[09:05:11] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (*.net *.split)
[09:05:11] *** Quits: lh_not_bot (~lh_bot@mingw-w64/developer/lhmouse) (*.net *.split)
[09:05:11] *** Quits: samuelbernardo (~samuelber@nata01.lip.pt) (*.net *.split)
[09:05:11] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (*.net *.split)
[09:05:11] *** Quits: ville (~ville@user/ville) (*.net *.split)
[09:05:11] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (*.net *.split)
[09:05:11] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (*.net *.split)
[09:05:11] *** Quits: Leone (~Leo@157.52.18.77) (*.net *.split)
[09:05:11] *** Quits: judabuda (kowbunga@user/judabuda) (*.net *.split)
[09:05:11] *** Quits: packet_lozenge (~packet_lo@user/packet-lozenge/x-7125090) (*.net *.split)
[09:05:12] *** Quits: EdFletcher (~PKD@user/edfletcher) (*.net *.split)
[09:05:12] *** Quits: Sadale (~Sadale@user/sadale) (*.net *.split)
[09:05:12] *** Quits: hasu (~hasu@58x13x224x139.ap58.ftth.ucom.ne.jp) (*.net *.split)
[09:05:12] *** Quits: rmd (~rm@ec2-52-202-15-104.compute-1.amazonaws.com) (*.net *.split)
[09:05:12] *** Quits: katsuragi (katsuragi@tilde.institute) (*.net *.split)
[09:05:12] *** Quits: Xark (~Xark@47.156.11.28) (*.net *.split)
[09:05:12] *** Quits: woggle (~charles@c-va-26578d734e-1840-1.tingfiber.com) (*.net *.split)
[09:05:12] *** Quits: Ameisen (~ameisen@digitalcarbide.com) (*.net *.split)
[09:05:12] *** Quits: Latexi95 (late@banhammer.fi) (*.net *.split)
[09:05:12] *** Quits: purplex (~purplex@user/purplex) (*.net *.split)
[09:05:12] *** Quits: BurumaSerafuku (~sjw@69.206.48.64) (*.net *.split)
[09:05:12] *** Quits: mattgirv (quassel@apps.fossgalaxy.com) (*.net *.split)
[09:05:12] *** Quits: moose (~moose@user/moose) (*.net *.split)
[09:05:12] *** Quits: DrMax_ (~DrMax@132.215.96.36) (*.net *.split)
[09:05:12] *** Quits: dv^_^ (~dv@eclipse.oxfordfun.com) (*.net *.split)
[09:05:12] *** Quits: pascal (~SIGILL@user/pascal) (*.net *.split)
[09:05:12] *** Quits: Griwes (~griwes@znc.reaver-project.org) (*.net *.split)
[09:05:12] *** Quits: routeveg (~lee@197.ip-51-195-136.eu) (*.net *.split)
[09:05:12] *** Quits: dzoe (~joe@joe.cz) (*.net *.split)
[09:05:12] *** Quits: Friithian (~gunqqer@friithian.dev) (*.net *.split)
[09:05:12] *** Quits: Stryyker (~stryyke1@about/windows/staff/stryyker) (*.net *.split)
[09:05:12] *** Quits: SorcererX (~SorcererX@133.79-161-60.customer.lyse.net) (*.net *.split)
[09:05:12] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (*.net *.split)
[09:05:12] *** Quits: nurupo (~nurupo.ga@user/nurupo) (*.net *.split)
[09:05:12] *** Quits: sam113101 (~sam@modemcable229.128-202-24.mc.videotron.ca) (*.net *.split)
[09:05:12] *** Quits: phoenix1 (~phoenix@user/phoenix) (*.net *.split)
[09:05:12] *** Quits: Soliton (~Soliton@wesnoth/developer/soliton) (*.net *.split)
[09:05:12] *** Quits: badone (~badone@209.132.189.152) (*.net *.split)
[09:05:12] *** Quits: rahl (~rahl@otaku.sdf.org) (*.net *.split)
[09:05:12] *** Quits: Perry (~perry@coffee-break.at) (*.net *.split)
[09:05:13] *** Quits: Raziel (~Raziel@user/raziel) (*.net *.split)
[09:05:13] *** Quits: fluter (~fluter@user/fluter) (*.net *.split)
[09:05:13] *** Quits: froggyc (~froggy@2.235.241.212) (*.net *.split)
[09:05:13] *** Quits: norias (~jaredm@c-98-219-195-163.hsd1.pa.comcast.net) (*.net *.split)
[09:05:13] *** Quits: koolazer (~koo@user/koolazer) (*.net *.split)
[09:05:13] *** Quits: vfeenstr (vfeenstr@redhat/evilissimo) (*.net *.split)
[09:05:13] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (*.net *.split)
[09:05:13] *** Quits: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net) (*.net *.split)
[09:05:13] *** Quits: tct (~tct@8.200.173.83.static.wline.lns.sme.cust.swisscom.ch) (*.net *.split)
[09:05:13] *** Quits: pa (~pah@user/pah) (*.net *.split)
[09:05:13] *** Quits: moberg (~moberg@luke.millenniumfalcon.org) (*.net *.split)
[09:05:13] *** Quits: peeps[zen] (~peepsalot@openscad/peepsalot) (*.net *.split)
[09:05:13] *** Quits: martiert (~martiert@ti0185q160-2775.bb.online.no) (*.net *.split)
[09:05:13] *** Quits: Aardwolf (~Aardwolf@77-56-208-202.dclient.hispeed.ch) (*.net *.split)
[09:05:13] *** Quits: aku (~aku@163.172.137.34) (*.net *.split)
[09:05:13] *** Quits: Shell (~shell@user/shell) (*.net *.split)
[09:05:13] *** Quits: flynn (~mcbloch@user/flynn) (*.net *.split)
[09:05:13] *** Quits: anzu (~anzu@melkki.cs.helsinki.fi) (*.net *.split)
[09:05:13] *** Quits: orthoplex64 (~crm@70.120.0.94) (*.net *.split)
[09:05:13] *** Quits: highrate (~presonic@user/highrate) (*.net *.split)
[09:05:46] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[09:06:01] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Remote host closed the connection)
[09:06:19] *** Joins: Aardwolf (~Aardwolf@77-56-208-202.dclient.hispeed.ch)
[09:06:26] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[09:07:43] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 256 seconds)
[09:08:51] *** Quits: martiert_ (~martiert@ti0185q160-2775.bb.online.no) (Ping timeout: 256 seconds)
[09:09:25] *** Quits: pascal1 (~SIGILL@user/pascal) (Ping timeout: 256 seconds)
[09:09:25] *** Quits: dzoe_ (joe@joe.cz) (Ping timeout: 256 seconds)
[09:09:25] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Ping timeout: 256 seconds)
[09:09:25] *** Quits: biberu (~biberu@user/biberu) (Ping timeout: 256 seconds)
[09:09:57] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[09:09:59] *** Quits: rmd_ (~rm@ec2-52-202-15-104.compute-1.amazonaws.com) (Ping timeout: 256 seconds)
[09:09:59] *** Joins: slidercrank (~slidercra@user/slidercrank)
[09:10:13] *** Joins: vfeenstr (vfeenstr@nat-pool-brq-t.redhat.com)
[09:10:13] *** Joins: causative_ (~halberd@98.118.7.200)
[09:10:13] *** Joins: Stryyker (~stryyke1@ppp118-209-75-131.hba-tec-tas-bras32.tpg.internode.on.net)
[09:10:13] *** Joins: PureSine (~PureSine@user/PureSine)
[09:10:13] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[09:10:13] *** Joins: roadt_ (~roadt@60.168.93.178)
[09:10:13] *** Joins: lh_not_bot (~lh_bot@mingw-w64/developer/lhmouse)
[09:10:13] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[09:10:13] *** Joins: Flonk (~Flonk@vps-zap441517-1.zap-srv.com)
[09:10:13] *** Joins: katsuragi (katsuragi@tilde.institute)
[09:10:13] *** Joins: Ameisen (~ameisen@digitalcarbide.com)
[09:10:13] *** Joins: moose (~moose@user/moose)
[09:10:13] *** Joins: dv^_^ (~dv@eclipse.oxfordfun.com)
[09:10:13] *** Joins: Friithian (~gunqqer@friithian.dev)
[09:10:13] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[09:10:13] *** Joins: nurupo (~nurupo.ga@user/nurupo)
[09:10:13] *** Joins: sam113101 (~sam@modemcable229.128-202-24.mc.videotron.ca)
[09:10:13] *** Joins: phoenix1 (~phoenix@user/phoenix)
[09:10:13] *** Joins: Soliton (~Soliton@wesnoth/developer/soliton)
[09:10:13] *** Joins: badone (~badone@209.132.189.152)
[09:10:13] *** Joins: rahl (~rahl@otaku.sdf.org)
[09:10:13] *** Joins: Perry (~perry@coffee-break.at)
[09:10:13] *** Joins: Raziel (~Raziel@user/raziel)
[09:10:13] *** Joins: fluter (~fluter@user/fluter)
[09:10:13] *** Joins: froggyc (~froggy@2.235.241.212)
[09:10:13] *** Joins: norias (~jaredm@c-98-219-195-163.hsd1.pa.comcast.net)
[09:10:13] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[09:10:13] *** Joins: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net)
[09:10:13] *** Joins: tct (~tct@8.200.173.83.static.wline.lns.sme.cust.swisscom.ch)
[09:10:13] *** Joins: pa (~pah@user/pah)
[09:10:13] *** Joins: flynn (~mcbloch@user/flynn)
[09:10:32] *** Joins: rmd (~rm@ec2-52-202-15-104.compute-1.amazonaws.com)
[09:10:39] *** Joins: martiert (~martiert@ti0185q160-2775.bb.online.no)
[09:10:45] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Max SendQ exceeded)
[09:11:03] *** Joins: dzoe (joe@joe.cz)
[09:11:04] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[09:11:19] *** Joins: pascal1 (~SIGILL@user/pascal)
[09:11:19] *** Joins: DrMax_ (~DrMax@132.215.96.36)
[09:11:24] *** Joins: woggle (~charles@c-va-26578d734e-1840-1.tingfiber.com)
[09:11:31] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:11:34] *** Quits: x28__girl (~x28girl@user/x28girl) (Remote host closed the connection)
[09:11:35] *** Joins: koolazer (~koo@user/koolazer)
[09:12:08] *** Joins: anzu (~anzu@melkki.cs.helsinki.fi)
[09:12:42] *** Quits: goepsilongo (~goepsilon@2806:263:c404:8000:a19a:aab0:db5f:4d8c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:13:41] *** Joins: judabuda (kowbunga@kowbunga.thunderirc.net)
[09:14:10] *** Quits: elemongw (~elemongw@20.107.36.50) (Ping timeout: 260 seconds)
[09:16:56] *** Quits: pa (~pah@user/pah) (Ping timeout: 256 seconds)
[09:17:47] *** Joins: the_lanetly_052 (~the_lanet@185.30.89.54)
[09:21:31] *** Joins: rayw (~ray@cpc83999-pool15-2-0-cust1.15-1.cable.virginm.net)
[09:21:34] *** Quits: x28_girl (~x28girl@user/x28girl) (Remote host closed the connection)
[09:22:00] *** Joins: x28_girl (~x28girl@user/x28girl)
[09:22:49] *** Quits: x28_girl (~x28girl@user/x28girl) (Max SendQ exceeded)
[09:23:19] *** Joins: x28_girl (~x28girl@user/x28girl)
[09:24:26] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[09:29:07] *** VShell is now known as Shell
[09:32:54] *** Joins: romik (~romik@178.125.105.135)
[09:33:05] *** Quits: romik (~romik@178.125.105.135) (Max SendQ exceeded)
[09:33:52] *** Quits: ElectronApps (~ElectronA@user/electronapps) (Remote host closed the connection)
[09:33:59] *** Joins: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by)
[09:34:09] *** Quits: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by) (Max SendQ exceeded)
[09:34:20] *** crm is now known as orthoplex64
[09:34:32] *** Joins: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by)
[09:39:05] *** Joins: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070)
[09:39:42] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[09:40:59] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:40:59] *** ChanServ sets mode: +v npaperbot
[09:48:55] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[09:49:03] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[09:56:29] *** Quits: bone (~bone@user/mbo) (Ping timeout: 250 seconds)
[09:57:17] *** Joins: bone (~bone@user/mbo)
[09:57:51] *** Quits: scruffyfurn (scruffyfur@turbous.xshellz.com) (Ping timeout: 245 seconds)
[09:59:03] *** Quits: wolf2k_huh (~wolfman20@2600:1700:3211:4140:807b:6ce0:d243:a17d) (Read error: Connection reset by peer)
[10:00:42] *** Quits: cpuid (~cpuid@user/cpuid) (Quit: ZNC 1.8.2 - https://znc.in)
[10:01:31] *** Joins: cpuid (~cpuid@co5.at)
[10:01:31] *** Quits: cpuid (~cpuid@co5.at) (Changing host)
[10:01:31] *** Joins: cpuid (~cpuid@user/cpuid)
[10:02:08] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[10:03:21] *** Joins: scruffyfurn (scruffyfur@turbous.xshellz.com)
[10:03:46] *** Quits: anandn (~anandn@2601:600:a27f:d92d:151d:1f53:302f:b5fe) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:04:42] *** Joins: elemongw (~elemongw@20.107.36.50)
[10:06:10] *** Joins: HvszrStykp (~X@81.171.62.86)
[10:08:32] *** Joins: anandn (~anandn@2601:600:a27f:d92d:151d:1f53:302f:b5fe)
[10:09:10] *** Joins: hiovoltage (~hiovoltag@78.186.68.182)
[10:10:36] *** Joins: PureSine_ (~PureSine@109.162.183.202)
[10:11:54] *** Joins: Exyr__ (~PureSine@static.205.212.40.188.clients.your-server.de)
[10:11:55] *** Quits: PureSine_ (~PureSine@109.162.183.202) (Read error: Connection reset by peer)
[10:13:35] *** Joins: pah (~pah@user/pah)
[10:14:10] *** Quits: PureSine (~PureSine@user/PureSine) (Ping timeout: 256 seconds)
[10:14:11] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[10:17:52] *** Quits: rgrinberg (~textual@187.223.209.255) (Read error: Connection reset by peer)
[10:19:38] *** Joins: rgrinberg (~textual@187.223.209.255)
[10:24:51] *** Quits: anandn (~anandn@2601:600:a27f:d92d:151d:1f53:302f:b5fe) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:26:21] *** Joins: anandn (~anandn@2601:600:a27f:d92d:151d:1f53:302f:b5fe)
[10:28:40] *** Joins: Fairy (~Fairy@2001:464a:4992:0:74d4:7e78:2b3a:4c42)
[10:28:53] *** Quits: Exyr__ (~PureSine@static.205.212.40.188.clients.your-server.de) (Quit: Leaving)
[10:29:04] *** Joins: jsbach (~jsbach@2a01:c23:65fb:5700:3681:a53f:1075:8963)
[10:30:45] *** Joins: PureSine (~PureSine@user/PureSine)
[10:33:15] *** Joins: jsbach_ (~jsbach@2a01:c23:65fb:5700:1909:e50e:4289:5972)
[10:33:25] *** Quits: jsbach (~jsbach@2a01:c23:65fb:5700:3681:a53f:1075:8963) (Ping timeout: 240 seconds)
[10:35:15] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:38:50] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[10:40:06] *** Joins: EdFletcher (~PKD@user/edfletcher)
[10:40:25] *** ville_ is now known as ville
[10:40:49] *** Joins: Guest8 (~Guest8@139.47.36.37)
[10:41:05] *** Guest8 is now known as __that__
[10:41:27] *** Joins: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[10:41:50] *** Parts: __that__ (~Guest8@139.47.36.37) ()
[10:58:08] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[11:04:58] *** Joins: N4buc0 (~N4buc0@200.146.13.23.dynamic.dialup.gvt.net.br)
[11:07:24] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[11:07:53] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[11:08:48] *** Joins: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net)
[11:10:59] *** Quits: rgrinberg (~textual@187.223.209.255) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:12:22] *** Joins: x28girl (~x28girl@user/x28girl)
[11:13:44] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:38fc:88e4:b26c:517)
[11:16:31] *** Joins: karakedi (~eAC53C340@user/karakedi)
[11:17:04] *** Quits: x28girl (~x28girl@user/x28girl) (Remote host closed the connection)
[11:17:30] *** Joins: x28girl (~x28girl@user/x28girl)
[11:18:51] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[11:24:02] *** Quits: nshire (~nshire@user/nshire) (Read error: Connection reset by peer)
[11:26:52] *** Joins: rendar (~rendar@user/rendar)
[11:35:38] *** Joins: oknenavin (~nomo@95.87.208.95)
[11:36:04] *** Joins: MajorBiscuit (~MajorBisc@c-001-022-052.client.tudelft.eduvpn.nl)
[11:38:46] *** Quits: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[11:40:47] *** Joins: evelyette (~Eleanor@178.79.105.181)
[11:41:08] *** Quits: Manouchehri (sid384576@id-384576.hampstead.irccloud.com) (Ping timeout: 268 seconds)
[11:41:11] *** Joins: LucaTM (~LucaTM@user/lucatm)
[11:41:14] *** Quits: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Read error: Connection reset by peer)
[11:41:37] *** Quits: techsurvivor (~don@86.106.143.128) (Ping timeout: 240 seconds)
[11:41:47] *** Joins: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[11:42:57] *** Joins: Manouchehri (sid384576@id-384576.hampstead.irccloud.com)
[11:43:37] *** Joins: techsurvivor (~don@89.45.90.76)
[11:44:30] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[11:45:12] *** Joins: PJBoy (~PJBoy@user/pjboy)
[11:49:35] *** Quits: hiovoltage (~hiovoltag@78.186.68.182) (Quit: Client closed)
[11:51:56] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[11:52:40] *** Joins: hiovoltage (~hiovoltag@78.186.68.182)
[11:53:08] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[11:54:20] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[11:56:37] *** Joins: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net)
[11:56:51] *** Joins: stonkey (~stonkey@user/stonkey)
[11:57:34] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:d15a:88a1:e780:f469)
[12:03:57] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[12:07:32] *** Quits: hinata (~hinata@2409:4042:d98:f536:e41d:5693:2f5e:aa70) (Quit: Leaving)
[12:09:10] *** Quits: ahlk (~user@2600:1700:31c0:3a10::43) (Remote host closed the connection)
[12:13:01] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[12:13:03] *** Joins: andreasbuhr (~quassel@p549dbcc9.dip0.t-ipconnect.de)
[12:13:35] *** Quits: dsrt^ (~dsrt@wsip-98-188-246-242.mc.at.cox.net) (Ping timeout: 256 seconds)
[12:14:04] *** Quits: presonic (~presonic@111-22-237-24.gci.net) ()
[12:15:12] *** Joins: dsrt^ (~dsrt@wsip-98-188-246-242.mc.at.cox.net)
[12:20:01] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:22:57] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 240 seconds)
[12:30:17] *** Quits: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4) (Quit: You have been kicked for being idle)
[12:31:25] *** Quits: Fairy (~Fairy@2001:464a:4992:0:74d4:7e78:2b3a:4c42) (Ping timeout: 240 seconds)
[12:31:34] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[12:34:02] *** Joins: AmR (~AmREiSa@41.36.185.103)
[12:34:37] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[12:37:11] *** Quits: chozorho (~chozorho@2601:146:300:c30::c70c) (Quit: WeeChat 3.0)
[12:39:01] *** Quits: kusanagi (~kusanagi@user/kusanagi) (Read error: Connection reset by peer)
[12:40:51] *** Joins: kusanagi (~kusanagi@user/kusanagi)
[12:41:39] *** Quits: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Read error: Connection reset by peer)
[12:42:15] *** Joins: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[12:49:10] *** Joins: Jck_true2 (~jcktrue@user/jck-true/x-0200799)
[12:50:14] *** Quits: Jck_true (~jcktrue@user/jck-true/x-0200799) (Ping timeout: 260 seconds)
[12:50:14] *** Jck_true2 is now known as Jck_true
[12:55:45] *** purplex_ is now known as purplex
[13:06:39] *** Joins: AliceMeows (~AliceMeow@user/alicemeows)
[13:06:43] *** Joins: furrymcgee (~devuan@cgn-89-1-208-165.nc.de)
[13:10:13] *** Joins: plastico (~plastico@neomutt/plastico)
[13:11:44] <ville> Eelis: nolyc is using c++17 for the !fact database?
[13:13:08] *** Joins: emanuele6 (~emanuele6@net-93-71-98-153.cust.vodafonedsl.it)
[13:13:08] *** Quits: emanuele6 (~emanuele6@net-93-71-98-153.cust.vodafonedsl.it) (Changing host)
[13:13:08] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[13:13:37] *** Quits: gnomesort_ (~gnomesort@user/gnomesort) (Ping timeout: 240 seconds)
[13:14:12] *** Quits: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net) (Read error: Connection reset by peer)
[13:14:19] *** Joins: gnomesort (~gnomesort@user/gnomesort)
[13:17:54] *** Quits: the_lanetly_052 (~the_lanet@185.30.89.54) (Remote host closed the connection)
[13:22:09] *** Quits: Figworm (FiggyWitIt@user/figworm) (Ping timeout: 256 seconds)
[13:23:56] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:25:55] <anyone> I don't think the fact db relies on anything particular
[13:27:39] *** Joins: rcoote (~rcoote@2a02:908:690:a140:5630:a269:ee65:4eb)
[13:30:27] *** Joins: Guest69 (~Guest69@ip72-199-239-162.sd.sd.cox.net)
[13:31:37] <ville> it's certainly not based on the current draft
[13:32:04] *** Quits: x28_girl (~x28girl@user/x28girl) (Remote host closed the connection)
[13:32:31] *** Joins: x28_girl (~x28girl@user/x28girl)
[13:33:25] <PJBoy> specifically http://eel.is/c++/14882/nnn.html results in (presumably) C++17 sentences
[13:34:52] <ville> ~17 is the last time i can find "Implementations are encouraged to provide such behavior as it is defined by POSIX"
[13:36:34] *** Quits: x28_girl (~x28girl@user/x28girl) (Remote host closed the connection)
[13:36:58] *** Joins: x28_girl (~x28girl@user/x28girl)
[13:38:07] *** Joins: ElectronApps (~ElectronA@user/electronapps)
[13:40:51] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:40:59] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:40:59] *** ChanServ sets mode: +v npaperbot
[13:41:01] *** Joins: Figworm (FiggyWitIt@user/figworm)
[13:41:35] *** Quits: nicholaus04 (~nicholaus@2607:fb90:e589:e2b9:d5ee:56de:0:7ca) (Quit: WeeChat 3.4)
[13:42:20] *** Quits: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Read error: Connection reset by peer)
[13:42:44] *** Joins: frost (~frost@user/frost)
[13:42:46] *** Joins: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[13:47:37] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[13:48:50] *** Quits: dsrt^ (~dsrt@wsip-98-188-246-242.mc.at.cox.net) (Remote host closed the connection)
[13:49:05] *** Joins: sbrothy (~sbrothy@23.102.41.137)
[13:50:45] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:38fc:88e4:b26c:517) (Remote host closed the connection)
[13:51:08] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:524:56c7:454:8252)
[13:52:37] *** Joins: frost (~frost@user/frost)
[13:54:27] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 256 seconds)
[14:02:18] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:03:48] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[14:04:19] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[14:05:51] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[14:05:56] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[14:06:12] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[14:10:47] *** Joins: rendar_ (~rendar@user/rendar)
[14:10:51] *** Quits: rendar (~rendar@user/rendar) (Ping timeout: 250 seconds)
[14:12:26] *** Joins: stonkey2 (~stonkey@user/stonkey)
[14:12:28] *** Joins: jhms (~i.am@user/marlboro)
[14:13:01] *** stonkey2 is now known as stonkey
[14:17:08] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[14:22:13] *** Joins: sigma_ (~sigma@164.215.223.95)
[14:23:10] *** Joins: frost (~frost@user/frost)
[14:26:54] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 256 seconds)
[14:28:56] *** Joins: Fairy (~Fairy@2001:464a:4992:0:74d4:7e78:2b3a:4c42)
[14:32:39] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[14:36:04] *** Quits: x28_girl (~x28girl@user/x28girl) (Remote host closed the connection)
[14:36:28] *** Joins: x28_girl (~x28girl@user/x28girl)
[14:36:59] *** Quits: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[14:38:18] *** Quits: x28girl (~x28girl@user/x28girl) (Quit: Leaving)
[14:38:18] *** Quits: x28_girl (~x28girl@user/x28girl) (Client Quit)
[14:39:56] *** Joins: clime (~clime@37-48-61-114.nat.epc.tmcz.cz)
[14:41:28] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:42:37] *** Quits: xsperry (~xs@user/xsperry) (Ping timeout: 240 seconds)
[14:42:37] *** Quits: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Read error: Connection reset by peer)
[14:43:17] *** Joins: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[14:44:42] *** Quits: anandn (~anandn@2601:600:a27f:d92d:151d:1f53:302f:b5fe) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:47:58] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 268 seconds)
[14:50:12] *** Joins: supernova (~quassel@2405:9800:ba11:6207:e75a:5680:96e5:2164)
[14:50:48] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[14:51:55] *** Joins: wre^ (~wre@wsip-98-188-246-242.mc.at.cox.net)
[14:54:10] *** Joins: Burgundy (~yomon@82.76.72.88)
[14:56:35] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:524:56c7:454:8252) (Quit: Konversation terminated!)
[15:11:03] *** Joins: the_lanetly_052 (~the_lanet@194.135.168.78)
[15:13:30] *** jhms is now known as costanza
[15:13:31] *** Quits: costanza (~i.am@user/marlboro) (Changing host)
[15:13:31] *** Joins: costanza (~i.am@user/heineken)
[15:17:01] *** Quits: Brett[Air] (~Brett@124.148.79.4) (Ping timeout: 240 seconds)
[15:17:36] *** Joins: PlasmaHH (~PlasamaHH@user/plasmahh)
[15:19:41] *** Joins: tayy (~tayy@ns502531.ip-142-4-214.net)
[15:24:31] <tayy> are there any good irc communities for people learning c++ together?
[15:25:07] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[15:33:03] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 256 seconds)
[15:39:48] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[15:40:01] *** Joins: kit-ten (~u0_a391@2600:380:a475:ea0c:a213:a480:f958:a3a8)
[15:43:12] *** Quits: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Read error: Connection reset by peer)
[15:43:46] *** Joins: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[15:44:23] *** Quits: kit_ten (~u0_a391@cpe-76-190-178-139.neo.res.rr.com) (Ping timeout: 256 seconds)
[15:48:10] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[15:49:11] *** Joins: frost (~frost@user/frost)
[15:50:18] *** Joins: JohnMS_WORK (~kvirc@89-64-83-123.dynamic.chello.pl)
[15:54:25] *** Joins: pottsy (~pottsy@129.227.183.244)
[15:56:31] *** Quits: martiert (~martiert@ti0185q160-2775.bb.online.no) (Quit: leaving)
[15:56:51] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[16:02:42] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:06:20] *** Quits: sigma_ (~sigma@164.215.223.95) (Quit: Konversation terminated!)
[16:06:32] <Eelis> ville: sounds plausible, i haven't updated the std quotes db in ages
[16:07:02] *** Joins: the_lanetly_052_ (~the_lanet@194.135.154.225)
[16:07:42] *** Joins: magla (~gelignite@55d48ba2.access.ecotel.net)
[16:09:28] *** Quits: the_lanetly_052 (~the_lanet@194.135.168.78) (Ping timeout: 256 seconds)
[16:12:26] *** Joins: frost (~frost@user/frost)
[16:13:36] *** Sadale_ is now known as Sadale
[16:16:01] *** Joins: aakashi2001 (~aakashi20@103.61.255.0)
[16:16:01] *** Quits: aakashi2001 (~aakashi20@103.61.255.0) (Changing host)
[16:16:01] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[16:16:19] *** Joins: aakashi2009 (~aakashi20@103.61.255.0)
[16:16:19] *** Quits: aakashi2009 (~aakashi20@103.61.255.0) (Changing host)
[16:16:19] *** Joins: aakashi2009 (~aakashi20@user/aakashi2001)
[16:18:42] *** Joins: ironman_ (~ironman@2401:4900:503b:d27a:3c5a:4279:4eed:bf91)
[16:19:31] <cbreak> tayy: try #c++-basic, although that's more for having questions answered
[16:20:57] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Ping timeout: 240 seconds)
[16:22:21] *** Joins: ironman__ (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[16:22:36] *** Quits: Guest69 (~Guest69@ip72-199-239-162.sd.sd.cox.net) (Quit: Connection closed)
[16:23:57] *** Quits: ironman_ (~ironman@2401:4900:503b:d27a:3c5a:4279:4eed:bf91) (Ping timeout: 240 seconds)
[16:24:31] *** Joins: martiert (~martiert@ti0185q160-2775.bb.online.no)
[16:26:19] *** Joins: bebyx (~Thunderbi@user/bebyx)
[16:27:31] *** Joins: goepsilongo (~goepsilon@2806:263:c404:8000:54bf:3582:265f:1026)
[16:28:09] *** ironman__ is now known as ironman
[16:29:21] *** Quits: goepsilongo (~goepsilon@2806:263:c404:8000:54bf:3582:265f:1026) (Client Quit)
[16:30:26] *** Quits: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Read error: Connection reset by peer)
[16:30:28] *** Joins: ashafq_ (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[16:31:03] *** Joins: guest965 (~guest9@110.red-88-21-181.staticip.rima-tde.net)
[16:38:13] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[16:39:28] *** Quits: Arsen (arsen@managarm/dev/Arsen) (Quit: Quit.)
[16:39:46] *** Joins: Arsen (arsen@managarm/dev/Arsen)
[16:43:35] *** Quits: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Read error: Connection reset by peer)
[16:44:16] *** Joins: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[16:44:42] *** Joins: lunix00 (~lunix00@2804:14c:6321:900d:ecd5:589a:62ad:6273)
[16:49:02] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[16:53:39] *** Quits: lunix00 (~lunix00@2804:14c:6321:900d:ecd5:589a:62ad:6273) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[16:56:21] *** Quits: Green_ (~Green-@h-85-24-185-116.A189.priv.bahnhof.se) (Ping timeout: 256 seconds)
[16:56:35] *** Joins: lunix00 (~lunix00@2804:14c:6321:900d:ecd5:589a:62ad:6273)
[16:57:04] *** pah is now known as pa
[16:59:18] *** Joins: Green_ (~Green-@h-85-24-185-116.a189.priv.bahnhof.se)
[17:01:27] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[17:01:41] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[17:06:00] *** Quits: lunix00 (~lunix00@2804:14c:6321:900d:ecd5:589a:62ad:6273) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:06:48] *** Joins: lunix00 (~lunix00@2804:14c:6321:900d:ecd5:589a:62ad:6273)
[17:11:20] *** Quits: lunix00 (~lunix00@2804:14c:6321:900d:ecd5:589a:62ad:6273) (Client Quit)
[17:12:32] *** Quits: NiD27 (~nid27@49.205.144.200) (Quit: Leaving)
[17:12:32] *** Quits: AliceMeows (~AliceMeow@user/alicemeows) (Read error: Connection reset by peer)
[17:12:54] *** Joins: AliceMeows (~AliceMeow@user/alicemeows)
[17:15:29] *** Quits: tct (~tct@8.200.173.83.static.wline.lns.sme.cust.swisscom.ch) (Quit: ZNC 1.8.2 - https://znc.in)
[17:18:44] *** Joins: lunix00 (~lunix00@2804:14c:6321:900d:ecd5:589a:62ad:6273)
[17:18:54] *** Joins: tct (~tct@8.200.173.83.static.wline.lns.sme.cust.swisscom.ch)
[17:22:37] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[17:32:03] *** Quits: dld (~davidlowr@73.61.8.240) (Ping timeout: 256 seconds)
[17:32:15] *** Joins: neure (~TimoSuora@dzpyxqzyyyyyyyyyyyyyt-3.rev.dnainternet.fi)
[17:32:17] *** Joins: neurre (~TimoSuora@dzpyxqzyyyyyyyyyyyyyt-3.rev.dnainternet.fi)
[17:32:46] *** Quits: roadt_ (~roadt@60.168.93.178) (Ping timeout: 256 seconds)
[17:33:59] *** Joins: dld (~davidlowr@73.61.9.64)
[17:34:41] *** Joins: roadt (~roadt@60.168.93.178)
[17:38:04] *** Quits: bebyx (~Thunderbi@user/bebyx) (Remote host closed the connection)
[17:40:52] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:41:01] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:41:01] *** ChanServ sets mode: +v npaperbot
[17:41:55] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[17:42:05] *** Quits: roadt (~roadt@60.168.93.178) (Remote host closed the connection)
[17:42:31] *** Joins: roadt (~roadt@60.168.93.178)
[17:44:05] *** Quits: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Read error: Connection reset by peer)
[17:44:45] *** Joins: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[17:44:54] *** Joins: kit_ten (~u0_a391@64.85.173.130)
[17:48:17] *** Quits: kit-ten (~u0_a391@2600:380:a475:ea0c:a213:a480:f958:a3a8) (Ping timeout: 240 seconds)
[17:50:16] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[17:51:28] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Ping timeout: 256 seconds)
[17:52:18] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[17:53:26] *** Joins: xiongxin (~Thunderbi@2409:8955:2e48:1ee4:ed76:62a2:5690:9dda)
[17:53:47] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Client Quit)
[17:54:57] *** Quits: aakashi2009 (~aakashi20@user/aakashi2001) (Ping timeout: 240 seconds)
[17:54:57] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Ping timeout: 240 seconds)
[17:59:05] *** Joins: jkaye (~jkaye@2601:281:8300:7530:6a7d:d789:f2c1:154c)
[17:59:47] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[18:04:48] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:05:34] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[18:08:52] *** Joins: xkuru (~xkuru@user/xkuru)
[18:14:24] *** Joins: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net)
[18:14:49] *** Joins: pulse (~pulse@user/pulse)
[18:18:32] *** Quits: wre^ (~wre@wsip-98-188-246-242.mc.at.cox.net) (Ping timeout: 240 seconds)
[18:22:30] *** Quits: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[18:22:48] *** Quits: frost (~frost@user/frost) (Quit: Ping timeout (120 seconds))
[18:26:19] *** Joins: stonkey (~stonkey@user/stonkey)
[18:26:32] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[18:30:25] *** Quits: costanza (~i.am@user/heineken) (Quit: I come down here for a fat woman and that's what I'm havin.)
[18:31:44] *** Quits: hiovoltage (~hiovoltag@78.186.68.182) (Quit: Client closed)
[18:32:35] *** Quits: Fairy (~Fairy@2001:464a:4992:0:74d4:7e78:2b3a:4c42) (Ping timeout: 250 seconds)
[18:35:15] *** Quits: JohnMS_WORK (~kvirc@89-64-83-123.dynamic.chello.pl) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[18:37:31] *** Quits: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Remote host closed the connection)
[18:37:34] *** Joins: JohnMS_WORK (~kvirc@89-64-83-123.dynamic.chello.pl)
[18:40:28] *** Quits: neure (~TimoSuora@dzpyxqzyyyyyyyyyyyyyt-3.rev.dnainternet.fi) (Quit: Leaving)
[18:40:32] *** Quits: neurre (~TimoSuora@dzpyxqzyyyyyyyyyyyyyt-3.rev.dnainternet.fi) (Quit: Leaving)
[18:40:35] *** Quits: ashafq_ (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Quit: Leaving)
[18:40:45] *** Joins: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[18:42:24] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[18:43:16] *** Quits: supernova (~quassel@2405:9800:ba11:6207:e75a:5680:96e5:2164) (Ping timeout: 245 seconds)
[18:46:23] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[18:46:28] *** Quits: ElectronApps (~ElectronA@user/electronapps) (Remote host closed the connection)
[18:47:19] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[18:54:00] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[18:54:18] *** Parts: kusanagi (~kusanagi@user/kusanagi) (Leaving)
[18:58:23] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:3d8d:2676:73ba:ffde)
[18:58:23] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:3d8d:2676:73ba:ffde) (Changing host)
[18:58:23] *** Joins: skapata (~Skapata@user/skapata)
[18:59:28] *** Joins: xiongxin1 (~Thunderbi@119.123.100.12)
[19:01:25] *** Quits: xiongxin (~Thunderbi@2409:8955:2e48:1ee4:ed76:62a2:5690:9dda) (Ping timeout: 268 seconds)
[19:01:27] *** xiongxin1 is now known as xiongxin
[19:02:04] *** Joins: biberu (~biberu@user/biberu)
[19:02:37] *** Quits: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070) (Ping timeout: 240 seconds)
[19:06:08] *** Joins: aakashi2001 (~aakashi20@103.61.255.0)
[19:06:08] *** Quits: aakashi2001 (~aakashi20@103.61.255.0) (Changing host)
[19:06:08] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[19:06:11] *** Joins: aakashi2009 (~aakashi20@user/aakashi2001)
[19:06:17] *** Quits: judabuda (kowbunga@kowbunga.thunderirc.net) (Changing host)
[19:06:17] *** Joins: judabuda (kowbunga@user/judabuda)
[19:08:24] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Max SendQ exceeded)
[19:08:29] *** Quits: aakashi2009 (~aakashi20@user/aakashi2001) (Max SendQ exceeded)
[19:08:55] *** Joins: aakashi2009 (~aakashi20@103.61.255.0)
[19:08:55] *** Quits: aakashi2009 (~aakashi20@103.61.255.0) (Changing host)
[19:08:55] *** Joins: aakashi2009 (~aakashi20@user/aakashi2001)
[19:09:00] *** Joins: aakashi2001 (~aakashi20@103.61.255.0)
[19:09:00] *** Quits: aakashi2001 (~aakashi20@103.61.255.0) (Changing host)
[19:09:00] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[19:11:08] *** Quits: aakashi2009 (~aakashi20@user/aakashi2001) (Max SendQ exceeded)
[19:11:19] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Max SendQ exceeded)
[19:11:35] *** Joins: aakashi2009 (~aakashi20@103.61.255.0)
[19:11:35] *** Quits: aakashi2009 (~aakashi20@103.61.255.0) (Changing host)
[19:11:35] *** Joins: aakashi2009 (~aakashi20@user/aakashi2001)
[19:11:42] *** Joins: rah (rah@verain.settrans.net)
[19:11:45] *** Joins: aakashi2001 (~aakashi20@103.61.255.0)
[19:11:45] *** Quits: aakashi2001 (~aakashi20@103.61.255.0) (Changing host)
[19:11:45] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[19:11:50] *** Joins: Teth|3 (~kvirc@cpe-71-79-34-84.cinci.res.rr.com)
[19:12:04] <rah> what's special about unions when inisialising a struct?
[19:12:15] <rah> https://wandbox.org/permlink/m46eBheP2gtlitz6
[19:12:33] <rah> I get error: expected primary-expression before '.' token
[19:12:39] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Remote host closed the connection)
[19:12:39] *** Quits: aakashi2009 (~aakashi20@user/aakashi2001) (K-Lined)
[19:13:12] <ville> rah: not sure about special, but there are plenty of rules and often not very well understood by many
[19:13:37] <rah> ville: I'm not sure why you're telling me that
[19:14:37] *** Quits: Teth (~kvirc@cpe-71-79-34-84.cinci.res.rr.com) (Ping timeout: 256 seconds)
[19:17:02] *** Quits: dld (~davidlowr@73.61.9.64) (Ping timeout: 256 seconds)
[19:17:09] *** Joins: GreyMister (~GreyMiste@2a02:810a:11bf:dd28:252f:ea74:91f5:a6d8)
[19:17:55] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[19:18:02] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[19:18:03] <rah> anyone know why that initialisation will work in C but not C++?
[19:18:07] <GyrosGeier> rah, struct/union member init by name is C syntax, not C++
[19:18:43] <rah> GyrosGeier: the struct member init by name on the line before the one giving the error works
[19:18:56] *** Joins: dld (~davidlowr@2601:197:600:1210:aca6:8c80:35d5:4f3c)
[19:19:37] <GyrosGeier> might also be that the parser only notices that something is broken at this point
[19:19:45] <rah> there's two lines doing "struct member init by name", one of them works, one doesn't
[19:19:45] *** Quits: reset (~reset@user/reset) (Quit: reset)
[19:20:21] <rah> GyrosGeier: "might" doesn't really help me but thanks :-)
[19:20:29] <rah> anyone know why the second line won't work?
[19:21:12] <WarauSalesman> checking
[19:21:15] *** Quits: kit_ten (~u0_a391@64.85.173.130) (Read error: Connection reset by peer)
[19:21:25] *** Quits: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net) (Ping timeout: 256 seconds)
[19:21:32] <GyrosGeier> ah
[19:21:32] <WarauSalesman> u can't do that
[19:21:49] *** WarauSalesman is now known as BurumaSerafuku
[19:22:21] *** Joins: kit_ten (~u0_a391@64.85.173.130)
[19:22:36] <rah> BurumaSerafuku: can't do what?
[19:22:39] <GyrosGeier> https://wandbox.org/permlink/cYAmN2OpnjtNHh8E
[19:22:50] <GyrosGeier> but that is still a compiler extension, not valid C++
[19:22:53] <anyone> rah: I don't
[19:22:58] <anyone> then I didn't look at it
[19:23:05] <leah2> seems to be in C++20, at least partially
[19:23:49] <leah2> aha, but nested ones arent
[19:24:20] <leah2> clang will eat it tho
[19:26:25] <rah> can anyone explain why the first line will work but the second line won't?
[19:27:36] <BurumaSerafuku> nested
[19:27:49] <rah> can anyone explain why the first line will work but the second line won't?
[19:28:17] <leah2> it's good they added this to c++20, it's a huge hassle for embedded programming :p
[19:29:04] <ville> GyrosGeier: c++ has designated initializers in case you missed that part
[19:29:11] <leah2> "If the initializer list is a designated-initializer-list, the aggregate shall be of class type, the identifier in each designator shall name a direct non-static data member of the class"
[19:30:17] *** Joins: connection-dropp (~hellspawn@47.203.169.95)
[19:30:37] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[19:30:50] <rah> can anyone explain why the first line will work but the second line won't?
[19:31:28] *** connection-dropp is now known as robert_
[19:31:36] <ville> rah: http://www.eelis.net/c++draft/dcl.init#aggr-3.1
[19:31:53] <ville> rah: stop repeating that line and read what people keep telling you
[19:34:00] <rah> ville: nobody has told me anything
[19:34:15] <rah> certainly nobody has offered an explanation
[19:34:52] <ville> rah: read the link
[19:34:54] <rah> ville: you've linked to part of a specification, you haven't linked to an explanation
[19:35:01] <rah> I've read the link
[19:35:07] <rah> it doesn't explain anything
[19:35:26] <ville> rah: why do you claim that?
[19:35:47] <leah2> your questionw was answered like three times
[19:36:14] <ville> rah: it says it has to be a direct member. you can't access nested things. doing u.bits.b is accessing a nested thing
[19:36:16] <rah> ville: because I can't see any explanation
[19:36:33] <rah> "you can't access nested things. doing u.bits.b is accessing a nested thing"
[19:36:37] <ville> "the identifier in each designator shall name a direct non-static data member of the class"
[19:36:39] <rah> see *that*'s an explanation
[19:36:42] <jkaye> rah, That is the answer to your question. If you don't understand the answer, you are probably missing some important reading/concepts
[19:37:09] <ville> rah: you should state that you don't understand the answers provided instead of obnoxioiusly just ignoring everyone
[19:37:09] <rah> leah2: I disagree
[19:37:22] <jkaye> You said "nobody has offered an explanation" but what you mean is "I don't understand the answer"
[19:37:28] <rah> ville: I didn't realise people were attempting to offer explanations
[19:37:29] <jkaye> Those are not the same thing
[19:37:49] <rah> ville: what you're referring to as "the answers" seemed like rambling to me
[19:37:57] <leah2> rah: i quoted that only direct members can be initialized and you're trying to initialize nested members
[19:38:05] <rah> jkaye: no, I didn't see any answers
[19:38:16] <ville> rah: then state that you don't understand the answer
[19:38:26] <rah> leah2: the words you just wrote here are not the words you quoted
[19:38:49] <rah> ville: why would I state that I don't understand the answer when I didn't see an answer
[19:38:52] <rah> ?
[19:39:02] <jkaye> rah, You did see answers. Around 4 of them in fact
[19:39:16] <rah> jkaye: what I saw I did not see as answers
[19:39:18] <ville> rah: sheesh dude. we can't know what "level" your proficiency is. leah2's answr was spot on
[19:39:25] <jkaye> The fact that you didn't recognize them as answers or understand them doesn't make them not answers
[19:39:38] <rah> jkaye: forgive me, I'll rephrase
[19:39:58] <rah> ville: why would I state that I don't understand the answer when I didn't recognise anything as an answer?
[19:40:05] <leah2> and i wrote above that nested initializers arent in c++20
[19:40:07] *** Quits: JohnMS_WORK (~kvirc@89-64-83-123.dynamic.chello.pl) (Ping timeout: 256 seconds)
[19:40:17] <ville> rah: i even pasted you a direct link to the c++ standard
[19:40:41] <BurumaSerafuku> rah: do you know what 'nested' means?
[19:40:41] <leah2> and now i shall drop out of this useless discussion :)
[19:40:44] <rah> ville: I know, it's difficult to communicate clearly
[19:40:53] *** Joins: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net)
[19:41:05] <PJBoy> think the takeaway here is to always use -pedantic when you're using gcc
[19:41:13] <ville> rah: if you didn't understand the content of the link then come out and say it and we can attempt to communicate at different "level"
[19:41:13] <BurumaSerafuku> ugh
[19:41:15] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 256 seconds)
[19:41:43] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[19:42:14] <rah> ville: why would I even bother?
[19:42:23] <BurumaSerafuku> lol
[19:42:25] <BurumaSerafuku> you asked for it
[19:42:29] <BurumaSerafuku> !give rah helpchannel
[19:42:30] <nolyc> rah: You are not entitled to help. Your /need/ for help is not our problem. That said, if you ask an interesting on-topic question, and make a testcase (see !testcase) if appropriate, then we may help you just because we're kind and helpful people.
[19:42:33] <rah> IRC is littered with morons who try to "help" by wasting your time
[19:42:44] <rah> in my experience, the best way to deal with them is to ignore them
[19:43:07] <PJBoy> if you need help then obviously you should try to communicate your problem as best you can
[19:43:08] <ville> rah: we can't know what your level of proficiency is. i try to provide answers from first sources; the c++ standard it self
[19:43:09] <rah> BurumaSerafuku: I never claimed an entitlement to help
[19:43:12] <PJBoy> for your own benefit
[19:43:17] <GyrosGeier> I have already answered with a code example how it works
[19:43:33] <ville> rah: it's rather obnoxious to just ignore people providing you the correct answer
[19:43:47] <BurumaSerafuku> rah: you are dismissing people who is really trying to help you
[19:43:52] *** Joins: mechakitty (~mechakitt@187.103.114.125)
[19:44:01] <BurumaSerafuku> probably because you don't understand anything
[19:44:24] <rah> BurumaSerafuku: they didn't seem like they were trying to help me, they seemed like they were wasting my time
[19:44:36] <BurumaSerafuku> and instead of getting mad, you should do what ville says: try to communicate more
[19:44:41] <jkaye> rah, We are trying to help you. Miscommunicating when you ask questions is one of the best ways to get no answers and never learn anything
[19:44:54] <BurumaSerafuku> or getting bitchy for no reason
[19:45:15] <rah> jkaye: orly?!  please tell me more about communicating on this medium I've been using for 20 years
[19:45:15] *** Quits: mechakitty (~mechakitt@187.103.114.125) (Client Quit)
[19:45:21] <jkaye> You need to accept where you are in your learning process and attempt to actually learn things. You're getting upset because _you_ don't understand
[19:45:28] <BurumaSerafuku> rah: see? you are derailing the discussion again
[19:45:42] <jkaye> You have 10 people here rationally, calmly giving you feedback
[19:45:43] <rah> BurumaSerafuku: there is no discussion
[19:45:46] <jkaye> And you are upset about it
[19:45:55] <rah> lol
[19:45:59] <BurumaSerafuku> I think you already got your answer, then you didn't like it and now you just want to troll everyone as a childish vengeance
[19:46:01] <jkaye> Probably time for some introspection on your part
[19:46:02] <jkaye> I'm out!
[19:47:13] <cbreak> rah: ville's answer looks clear to me
[19:47:15] <cbreak> have you read it?
[19:47:23] <cbreak> http://www.eelis.net/c++draft/dcl.init#aggr-3.1
[19:47:41] <cbreak> " the identifier in each designator shall name a direct non-static data member of the class "
[19:47:47] <BurumaSerafuku> :)
[19:47:50] <ville> (credit where credit is due it's leah2's)
[19:48:05] <BurumaSerafuku> leah2++
[19:48:23] *** Quits: magla (~gelignite@55d48ba2.access.ecotel.net) (Quit: Stay safe!)
[19:48:32] <rah> cbreak: I read it, yes
[19:48:39] <leah2> BurumaSerafuku: gee now i'm leah3 :p
[19:48:51] <cbreak> rah: the key word here is "direct"
[19:49:05] <cbreak> (it's not a c++ keyword)
[19:49:14] *** Joins: executivePan (~uglyQuota@187.103.114.125)
[19:50:01] *** Quits: guest965 (~guest9@110.red-88-21-181.staticip.rima-tde.net) (Quit: Client closed)
[19:50:37] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[19:52:50] <cbreak> rah: also, when you look at the grammar, http://www.eelis.net/c++draft/dcl.init#nt:designated-initializer-list
[19:53:06] <cbreak> a designated-initializer-list needs designators
[19:53:14] <cbreak> which are a . followed by an identifier
[19:53:25] <cbreak> identifiers may not contain dots
[19:54:38] <leah2> note that you can use .u = {.bits = {.b = 1}}
[19:55:08] <BurumaSerafuku> ^
[19:55:09] <BurumaSerafuku> nailed it
[19:55:25] <BurumaSerafuku> leah2++
[19:55:26] *** Quits: GreyMister (~GreyMiste@2a02:810a:11bf:dd28:252f:ea74:91f5:a6d8) (Quit: Leaving)
[19:55:28] <BurumaSerafuku> now you are 4
[19:55:35] *** Joins: GreyMister (~GreyMiste@2a02:810a:11bf:dd28:252f:ea74:91f5:a6d8)
[19:55:36] <leah2> and probably write a macro to construct these things :D
[19:55:39] *** Quits: GreyMister (~GreyMiste@2a02:810a:11bf:dd28:252f:ea74:91f5:a6d8) (Remote host closed the connection)
[19:55:49] <BurumaSerafuku> gah no
[19:55:58] <ville> (credit where credit is due GyrosGeier already posted that 30 minutes ago)
[19:56:19] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[19:56:33] <leah2> oh, fair
[19:57:17] <ville> anyhoo citing that rule is probably closest we ever get to a why. there's often no record for decissions made by the committee. may get lucky in by going through the wg21 papers if they contain clear rationale
[19:57:29] <cbreak> leah2: of course. But rah didn't ask how to fix the problem
[19:57:34] <cbreak> the question was why it didn't work
[19:58:14] *** Quits: pottsy (~pottsy@129.227.183.244) (Ping timeout: 250 seconds)
[19:59:33] *** Joins: sigma_ (~sigma@86.57.96.85)
[20:03:44] *** Joins: NEYi (~NEYi@109.251.216.38)
[20:07:14] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[20:09:48] *** Joins: pottsy (~pottsy@129.227.183.244)
[20:16:00] *** Quits: pottsy (~pottsy@129.227.183.244) (Ping timeout: 250 seconds)
[20:18:03] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[20:20:30] *** Quits: kit_ten (~u0_a391@64.85.173.130) (Read error: Connection reset by peer)
[20:20:41] *** Joins: kit_ten (~u0_a391@64.85.173.130)
[20:29:14] *** Joins: Fairy (~Fairy@2001:464a:4992:0:74d4:7e78:2b3a:4c42)
[20:30:36] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:ddf8:c3ca:7730:1473)
[20:34:16] *** Quits: unyu (~pyon@user/pyon) (Read error: Connection reset by peer)
[20:36:14] <CarloWood> { std::atomic<int> n; cout << n; }
[20:36:15] <geordi> 0
[20:36:23] *** Joins: unyu (~pyon@user/pyon)
[20:36:51] <anyone> that seems coincidental
[20:38:09] <PJBoy> the 0 output?
[20:38:13] <PJBoy> that's guaranteed in C++20
[20:38:39] <Alipha> And uninitialized prior to that.
[20:38:45] <BurumaSerafuku> O_O
[20:38:49] <BurumaSerafuku> didn't know that, Alipha
[20:38:49] <Alipha> https://en.cppreference.com/w/cpp/atomic/atomic/atomic
[20:39:03] <PJBoy> non atomic value initialisation >_>
[20:39:45] <PJBoy> I forget what the rationale was for this
[20:40:04] <Alipha> You'd need a weird program design where that would matter
[20:40:15] <CarloWood> Initialization of an atomic is always non-atomic.
[20:41:52] <Svitkona> really makes you think
[20:41:55] <PJBoy> it makes atomics non-trivial
[20:41:58] <Svitkona> where's the justice in this world?
[20:42:03] <PJBoy> for questionable benefit
[20:42:10] <Svitkona> oh wait this is the no-fun channel
[20:42:54] <PJBoy> wouldn't `atomic_int x; x.store(0);` be atomic?
[20:43:01] *** Joins: supernova (~quassel@2405:9800:ba11:6207:257d:fbf2:fbc1:f8a5)
[20:43:20] <PJBoy> it's not initialisation per se, but surely it's better than non-atomic store that you can't opt out of
[20:43:31] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[20:44:17] <PJBoy> meanwhile `atomic_int x; pass_to_other_thread(&x);` becomes a data race in C++20 if I'm not mistaken
[20:44:25] <PJBoy> assuming the other thread tries to store a value to x
[20:46:45] <PJBoy> it's very sus
[20:48:15] <CarloWood> No
[20:48:36] <CarloWood> Oh.. well, if you pass a pointer to the atomic, yes.
[20:49:27] <CarloWood> But before C++20 you'd do: atomic_int x{0}; pass_to_other_thread(&x);
[20:49:55] *** Quits: letto (~letto@188.25.113.229) (Quit: Konversation terminated!)
[20:50:31] *** Joins: letto (~letto@188.25.113.229)
[20:56:53] *** Quits: rcoote (~rcoote@2a02:908:690:a140:5630:a269:ee65:4eb) (Ping timeout: 250 seconds)
[20:58:49] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[20:59:07] *** Quits: techsurvivor (~don@89.45.90.76) (Quit: WeeChat 3.3)
[21:01:11] <Alipha> PJBoy: `atomic_int x; pass_to_other_thread(&x);` isn't a data race. x is initialized on `atomic_int x;` before &x is passed to the other thread
[21:02:29] *** Quits: lunix00 (~lunix00@2804:14c:6321:900d:ecd5:589a:62ad:6273) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:04:11] <Alipha> you'd need like, `atomic_int *p = malloc(sizeof(atomic_int)); pass_to_other_thread(p); new (p) atomic_int;` but then, even if initialization were atomic, you don't know if the atomic_int initialization has even started or not in this snippet
[21:05:41] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 256 seconds)
[21:06:13] *** Joins: lunix00 (~lunix00@2804:14c:6321:900d:ecd5:589a:62ad:6273)
[21:09:14] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[21:10:37] *** Quits: clime (~clime@37-48-61-114.nat.epc.tmcz.cz) (Quit: WeeChat 3.3)
[21:10:52] *** Joins: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070)
[21:11:34] *** Joins: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net)
[21:12:15] *** Joins: Teth (~kvirc@cpe-71-79-34-84.cinci.res.rr.com)
[21:13:54] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[21:14:58] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:15:05] *** Quits: Teth|3 (~kvirc@cpe-71-79-34-84.cinci.res.rr.com) (Ping timeout: 250 seconds)
[21:16:03] *** Quits: lunix00 (~lunix00@2804:14c:6321:900d:ecd5:589a:62ad:6273) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:16:52] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[21:17:07] *** Joins: lunix00 (~lunix00@2804:14c:6321:900d:ecd5:589a:62ad:6273)
[21:27:09] *** immibis_ is now known as immibis
[21:28:55] *** Quits: the_lanetly_052_ (~the_lanet@194.135.154.225) (Ping timeout: 256 seconds)
[21:31:36] *** Joins: magla (~gelignite@55d48ba2.access.ecotel.net)
[21:31:41] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[21:31:58] *** Parts: rah (rah@verain.settrans.net) ()
[21:34:55] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:ddf8:c3ca:7730:1473) (Quit: Konversation terminated!)
[21:35:05] *** Quits: PlasmaHH (~PlasamaHH@user/plasmahh) (Read error: Connection reset by peer)
[21:36:33] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[21:37:53] <PJBoy> nah before C++20 you would do `atomic_int x; pass_to_other_thread(&x);`
[21:37:55] *** Joins: Yruama (~Yruama@2a01:cb15:8128:c100:8634:97ff:fe6e:86ac)
[21:38:08] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 256 seconds)
[21:38:14] <PJBoy> why would x be initialised before pass_to_other_thread is called?
[21:38:26] <PJBoy> if the initialisation isn't atomic
[21:39:12] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[21:40:02] <PJBoy> maybe it would be actually
[21:40:26] <PJBoy> I'm not sure 'cause it's inter-thread
[21:40:52] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:41:03] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:41:03] *** ChanServ sets mode: +v npaperbot
[21:41:32] *** Quits: executivePan (~uglyQuota@187.103.114.125) (Ping timeout: 256 seconds)
[21:42:00] <PJBoy> idk it's weird that I even need to consider it
[21:42:26] <PJBoy> requiring value init on atomics goes against the zero overhead principle
[21:42:31] *** Quits: hackkitten (~hackkitte@94.31.103.136) (Ping timeout: 256 seconds)
[21:42:57] <anyone> why would you even pass a variable before it's initialized? That's what's weird to me!
[21:43:13] <PJBoy> so that something else can give it its initial value
[21:43:31] <PJBoy> like if you do `int x; cin >> x;`
[21:43:32] <anyone> fair enough
[21:43:35] <PJBoy> no point initialising x there
[21:44:29] <AliceMeows> Is there any way to avoid this default init bullshit?
[21:44:47] <PJBoy> which bullshit exactly, the atomic value init one?
[21:44:51] <AliceMeows> Yes
[21:45:09] <PJBoy> nope
[21:45:23] <AliceMeows> At this rate I'll have to abandon the stl
[21:45:50] <PJBoy> idk maybe it makes sense for atomic
[21:45:58] <AliceMeows> I still think its stupid
[21:46:04] <PJBoy> I'm not sure
[21:46:43] <PJBoy> the other concern is the prospect of being C incompatible now
[21:47:03] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[21:47:04] <PJBoy> the atomic_init docs say they're there for compatibility with C
[21:47:06] <PJBoy> which makes sense
[21:47:18] <AliceMeows> Frankly I don't give two shits about C compatibility, it has been nothing but a drag and slowing down progress
[21:47:26] <PJBoy> but it also says it's UB to use it on a non default constructed atomic
[21:47:36] <PJBoy> so now in C++20 atomic_init can't be used
[21:48:09] *** Joins: hackkitten (~hackkitte@94.31.103.136)
[21:48:27] <PJBoy> meaning there's no common way to initialise atomics in C and C++ now
[21:49:13] *** Joins: karakedi (~eAC53C340@user/karakedi)
[21:49:29] <AliceMeows> Imho C++ should really cut ties with C and leave very minimal support for interoperability
[21:49:32] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Read error: Connection reset by peer)
[21:53:45] <kit_ten> idea: c++ compiler in malbolge
[21:54:37] *** Quits: supernova (~quassel@2405:9800:ba11:6207:257d:fbf2:fbc1:f8a5) (Ping timeout: 240 seconds)
[21:56:13] *** Joins: kaichiuc1u (~kaichiuch@144.202.8.127)
[21:56:40] *** Joins: kst`` (~user@cpe-70-95-182-43.san.res.rr.com)
[21:57:32] *** Joins: indy_ (~indy@dsl-static-104.213-160-167.telecom.sk)
[21:57:38] *** Joins: BinarySavior_ (~BinarySav@josh.vet)
[21:59:40] *** Joins: mattf_ (~mattf@li908-138.members.linode.com)
[22:05:15] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (*.net *.split)
[22:05:15] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (*.net *.split)
[22:05:15] *** Quits: jkaye (~jkaye@2601:281:8300:7530:6a7d:d789:f2c1:154c) (*.net *.split)
[22:05:15] *** Quits: Arsen (arsen@managarm/dev/Arsen) (*.net *.split)
[22:05:15] *** Quits: judabuda (kowbunga@user/judabuda) (*.net *.split)
[22:05:15] *** Quits: DrMax_ (~DrMax@132.215.96.36) (*.net *.split)
[22:05:15] *** Quits: rmd (~rm@ec2-52-202-15-104.compute-1.amazonaws.com) (*.net *.split)
[22:05:16] *** Quits: Shell (~shell@user/shell) (*.net *.split)
[22:05:16] *** Quits: msim_ (~msim@2001:8003:d194:d000::d8d) (*.net *.split)
[22:05:16] *** Quits: KAHR-Alpha (~Alpha@2a01cb0d024a66007417638e35437933.ipv6.abo.wanadoo.fr) (*.net *.split)
[22:05:16] *** Quits: Forsaken87 (~quassel@2a02:908:1866:e360:88b0:2032:220f:3f73) (*.net *.split)
[22:05:16] *** Quits: Nixx (~quassel@bulbasaur.sjorsgielen.nl) (*.net *.split)
[22:05:16] *** Quits: DrMax (~DrMax@node-1w7jra94757g29esa3u7gobxk.ipv6.telus.net) (*.net *.split)
[22:05:16] *** Quits: CygniX (~CygniX@2a01:8740:1:727:4e:80:7f:2d) (*.net *.split)
[22:05:16] *** Quits: kaichiuchu (~kaichiuch@user/kaichiuchu) (*.net *.split)
[22:05:16] *** Quits: NyB (~archon@2a02:169:1d9::1:0:0) (*.net *.split)
[22:05:16] *** Quits: decartes (sid240036@id-240036.helmsley.irccloud.com) (*.net *.split)
[22:05:16] *** Quits: NOTevil (~notevil@user/notevil) (*.net *.split)
[22:05:16] *** Quits: Nitrousoxide_ (~msdos@user/nitrousoxide) (*.net *.split)
[22:05:16] *** Quits: megaTherion (~therion@unix.io) (*.net *.split)
[22:05:16] *** Quits: HenryTheLongshot (~Henry@46.101.4.181) (*.net *.split)
[22:05:16] *** Quits: a5m (nop@asm.dj) (*.net *.split)
[22:05:16] *** Quits: BrandonArnold1 (~brandon@ec2-52-27-188-210.us-west-2.compute.amazonaws.com) (*.net *.split)
[22:05:16] *** Quits: murphy__ (~murphy_@cpe-104-162-115-128.nyc.res.rr.com) (*.net *.split)
[22:05:16] *** Quits: dartmout- (~blackunsp@li761-35.members.linode.com) (*.net *.split)
[22:05:16] *** Quits: ldlework (~hexeme@user/hexeme) (*.net *.split)
[22:05:16] *** Quits: webstran- (~webstrand@user/webstrand) (*.net *.split)
[22:05:17] *** Quits: Nnavd (~Nnavd@ec2-34-220-224-214.us-west-2.compute.amazonaws.com) (*.net *.split)
[22:05:17] *** Quits: NovaXrine (~NovaXrine@2604:a880:4:1d0::183:6000) (*.net *.split)
[22:05:17] *** Quits: jimbzy (~gem@user/jimbzy) (*.net *.split)
[22:05:17] *** Quits: meicceli (meicceli@kapsi.fi) (*.net *.split)
[22:05:17] *** Quits: blinky42 (~quassel@user/blinky42) (*.net *.split)
[22:05:17] *** Quits: nightstrike (uid487@id-487.uxbridge.irccloud.com) (*.net *.split)
[22:05:17] *** Quits: jadew (~rcc@2a02:2f0a:b111:b100:ca2a:14ff:fe58:c8c0) (*.net *.split)
[22:05:17] *** Quits: greyblue9 (sid500829@id-500829.ilkley.irccloud.com) (*.net *.split)
[22:05:17] *** Quits: indy (~indy@dsl-static-104.213-160-167.telecom.sk) (*.net *.split)
[22:05:17] *** Quits: dv2 (~dv2@eclipse.oxfordfun.com) (*.net *.split)
[22:05:17] *** Quits: luca0N (~luca0N@nautilus.luca0n.com) (*.net *.split)
[22:05:17] *** Quits: noent (~quassel@squint.a-oben.org) (*.net *.split)
[22:05:17] *** Quits: nuala2 (~nuala@user/nuala) (*.net *.split)
[22:05:17] *** Quits: jonbryan (~ea@user/jonbryan) (*.net *.split)
[22:05:17] *** Quits: s1b1 (~s1b1@user/s1b1) (*.net *.split)
[22:05:17] *** Quits: gdarko (~me@dg.mk) (*.net *.split)
[22:05:17] *** Quits: kst` (~user@cpe-70-95-182-43.san.res.rr.com) (*.net *.split)
[22:05:17] *** Quits: kfv (~kfv@mail.kfv.io) (*.net *.split)
[22:05:17] *** Quits: bionade24 (~bionade24@server2.oscloud.info) (*.net *.split)
[22:05:17] *** Quits: fruitypunk (~user@2a01:7c8:aaaa:12:5054:ff:fe69:1df9) (*.net *.split)
[22:05:18] *** Quits: TimWolla (~timwolla@2a01:4f8:150:6153:beef::6667) (*.net *.split)
[22:05:18] *** Quits: xq (~xq@user/xq) (*.net *.split)
[22:05:18] *** Quits: paperManu (~paperManu@138.197.128.151) (*.net *.split)
[22:05:18] *** Quits: patterner_ (sid212303@id-212303.ilkley.irccloud.com) (*.net *.split)
[22:05:18] *** Quits: KnownSyntax (sid233169@user/knownsyntax) (*.net *.split)
[22:05:18] *** Quits: russruss (~russruss@my.russellmcc.com) (*.net *.split)
[22:05:18] *** Quits: prime- (~prime@user/prime) (*.net *.split)
[22:05:18] *** Quits: NiKaN (sid385034@id-385034.helmsley.irccloud.com) (*.net *.split)
[22:05:18] *** Quits: merpnderp (sid16744@id-16744.hampstead.irccloud.com) (*.net *.split)
[22:05:18] *** Quits: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4) (*.net *.split)
[22:05:18] *** Quits: psb_ (sid500598@id-500598.ilkley.irccloud.com) (*.net *.split)
[22:05:18] *** Quits: PotatoGim (sid99505@id-99505.lymington.irccloud.com) (*.net *.split)
[22:05:18] *** Quits: jakesyl_ (sid56879@id-56879.hampstead.irccloud.com) (*.net *.split)
[22:05:18] *** Quits: Ekho (~Ekho@user/ekho) (*.net *.split)
[22:05:18] *** Quits: BinarySavior (~BinarySav@idlerpg/player/BinarySavior) (*.net *.split)
[22:05:18] *** Quits: RokerHRO (~zonc@euporie.uberspace.de) (*.net *.split)
[22:05:18] *** Quits: micronn (~micronn@user/micronn) (*.net *.split)
[22:05:18] *** Quits: Jmtrix (~qed@user/jmtrix) (*.net *.split)
[22:05:18] *** Quits: energizer (~energizer@user/energizer) (*.net *.split)
[22:05:18] *** Quits: TommyC (~TommyC@user/tommyc) (*.net *.split)
[22:05:18] *** Quits: fiesh (~fiesh@2003:fb:1018::21) (*.net *.split)
[22:05:18] *** Quits: rouji (~rouji@x0.at) (*.net *.split)
[22:05:19] *** Quits: TinoDidriksen (~TinoDidri@tinodidriksen.com) (*.net *.split)
[22:05:19] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (*.net *.split)
[22:05:19] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (*.net *.split)
[22:05:19] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (*.net *.split)
[22:05:19] *** Quits: Hello72 (~Hello71@wireguard/contributor/hello71) (*.net *.split)
[22:05:19] *** Quits: spithash (~spithash@user/spithash) (*.net *.split)
[22:05:19] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (*.net *.split)
[22:05:19] *** Quits: teepee (~teepee@openscad/teepee) (*.net *.split)
[22:05:19] *** Quits: bindu (~bindu@user/bindu) (*.net *.split)
[22:05:19] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (*.net *.split)
[22:05:19] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (*.net *.split)
[22:05:19] *** Quits: nlatp[m] (~nlatpmatr@2001:470:69fc:105::1:4d1f) (*.net *.split)
[22:05:19] *** Quits: scjg (~scjgmatri@2001:470:69fc:105::f5d6) (*.net *.split)
[22:05:19] *** Quits: equinox[m] (~momoshiki@2001:470:69fc:105::fe92) (*.net *.split)
[22:05:19] *** Quits: lpotter (~quassel@180-150-104-92.b49668.bne.static.aussiebb.net) (*.net *.split)
[22:05:19] *** Quits: hirish (~hirish@ip85.ip-137-74-20.eu) (*.net *.split)
[22:05:19] *** Quits: gothicserpent (~gothicser@2604:a880:4:1d0::176:6000) (*.net *.split)
[22:05:19] *** Quits: celphi (sid97751@user/celphi) (*.net *.split)
[22:05:19] *** Quits: mrec_ (~markus@sundtek.de) (*.net *.split)
[22:05:19] *** Quits: dexter0 (~dexter0@c-69-181-126-161.hsd1.ca.comcast.net) (*.net *.split)
[22:05:19] *** Quits: imMute (~immute@user/immute) (*.net *.split)
[22:05:19] *** Quits: xisop (~xisop@bnull.net) (*.net *.split)
[22:05:20] *** Quits: jzsinatra (~jzsinatra@88-114-238-31.elisa-laajakaista.fi) (*.net *.split)
[22:05:20] *** Quits: jbalint_ (~jbalint@2600:6c44:117f:e98a:816a:9488:fb1:7b7) (*.net *.split)
[22:05:20] *** Quits: Svitkona (~Svitkona@157.245.38.135) (*.net *.split)
[22:05:20] *** Quits: mrkajetanp (~mrkajetan@88.98.245.28) (*.net *.split)
[22:05:20] *** Quits: dansan (~daniel@75.81.148.51) (*.net *.split)
[22:05:20] *** Quits: urdh (~urdh@user/urdh) (*.net *.split)
[22:05:20] *** Quits: Telvana (~capo@user/telvana) (*.net *.split)
[22:05:20] *** Quits: Albright (~Albright@149.28.13.173) (*.net *.split)
[22:05:20] *** Quits: catern (~sbaugh@2604:2000:8fc0:b:a9c7:866a:bf36:3407) (*.net *.split)
[22:05:20] *** Quits: [R] (~rs@genoce.org) (*.net *.split)
[22:05:20] *** Quits: riksteri (d20812115c@2604:bf00:561:2000::1e6) (*.net *.split)
[22:05:21] *** Quits: ws2k3 (znc@vps.freegamehosting.eu) (*.net *.split)
[22:05:21] *** Quits: computerquip (sid423484@user/computerquip) (*.net *.split)
[22:05:21] *** Quits: hyper_dave (~hyper_dav@2a01:4f9:4a:246c::2) (*.net *.split)
[22:05:21] *** Quits: xrj (~av@2a01:4f8:c17:7cba::1) (*.net *.split)
[22:05:21] *** Quits: andreyv (~andrey@user/andreyv) (*.net *.split)
[22:05:21] *** Quits: Hobbyboy (Hobbyboy@hobbyboy.co.uk) (*.net *.split)
[22:05:21] *** Quits: shenghi (~shenghi@chrysocolla.mutablevoid.org) (*.net *.split)
[22:05:21] *** Quits: sigma_ (~sigma@86.57.96.85) (*.net *.split)
[22:05:21] *** Quits: dld (~davidlowr@2601:197:600:1210:aca6:8c80:35d5:4f3c) (*.net *.split)
[22:05:21] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (*.net *.split)
[22:05:21] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:d15a:88a1:e780:f469) (*.net *.split)
[22:05:21] *** Quits: jsbach_ (~jsbach@2a01:c23:65fb:5700:1909:e50e:4289:5972) (*.net *.split)
[22:05:21] *** Quits: zygonsisyphus[m] (~zygonsisy@2001:470:69fc:105::482) (*.net *.split)
[22:05:21] *** Quits: hnOsmium0001[m] (~hnosmium0@2001:470:69fc:105::15d4) (*.net *.split)
[22:05:21] *** Quits: Yamakaja (~yamakaja@user/yamakaja) (*.net *.split)
[22:05:21] *** Quits: whatsupboy (~whatsupbo@user/scobydoo) (*.net *.split)
[22:05:21] *** Quits: barometz (~dvanb@i117058.upc-i.chello.nl) (*.net *.split)
[22:05:21] *** Quits: Artea (~Lufia@artea.com.pt) (*.net *.split)
[22:05:21] *** Quits: aeplus (~steve@2603-8000-cf42-7ec1-162f-1996-0ae2-d7da.res6.spectrum.com) (*.net *.split)
[22:05:22] *** Quits: Argorok (sid195487@id-195487.hampstead.irccloud.com) (*.net *.split)
[22:05:22] *** Quits: buhman (sid411355@user/buhman) (*.net *.split)
[22:05:22] *** Quits: merry (~mary@user/merry) (*.net *.split)
[22:05:22] *** Quits: Learath2 (~learath2@user/learath2) (*.net *.split)
[22:05:22] *** Quits: ullbeking_ (sid5364@id-5364.ilkley.irccloud.com) (*.net *.split)
[22:05:22] *** Quits: blo (~blo@user/blo) (*.net *.split)
[22:05:22] *** Quits: taiyu (~taiyu@user/taiyu) (*.net *.split)
[22:05:22] *** Quits: drmeister (sid45147@id-45147.ilkley.irccloud.com) (*.net *.split)
[22:05:22] *** Quits: InPhase (~InPhase@openscad/inphase) (*.net *.split)
[22:05:22] *** Quits: Ara (~Ara@user/ara) (*.net *.split)
[22:05:22] *** Quits: pippijn (~pippijn@ra.xinutec.org) (*.net *.split)
[22:05:22] *** Quits: TingPing (sid2800@id-2800.helmsley.irccloud.com) (*.net *.split)
[22:05:22] *** Quits: Bodger1234_ (sid503511@id-503511.uxbridge.irccloud.com) (*.net *.split)
[22:05:22] *** Quits: glenfe (sid231748@user/glenfe) (*.net *.split)
[22:05:22] *** Quits: renopt (~renopt@lisp.us.to) (*.net *.split)
[22:05:22] *** Quits: jellie (~luv_panda@user/jellie) (*.net *.split)
[22:05:22] *** Quits: karakedi (~eAC53C340@user/karakedi) (*.net *.split)
[22:05:22] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (*.net *.split)
[22:05:22] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (*.net *.split)
[22:05:22] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (*.net *.split)
[22:05:23] *** Quits: AliceMeows (~AliceMeow@user/alicemeows) (*.net *.split)
[22:05:23] *** Quits: Green_ (~Green-@h-85-24-185-116.a189.priv.bahnhof.se) (*.net *.split)
[22:05:23] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (*.net *.split)
[22:05:23] *** Quits: gnomesort (~gnomesort@user/gnomesort) (*.net *.split)
[22:05:23] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (*.net *.split)
[22:05:23] *** Quits: oknenavin (~nomo@95.87.208.95) (*.net *.split)
[22:05:23] *** Quits: EdFletcher (~PKD@user/edfletcher) (*.net *.split)
[22:05:23] *** Quits: PureSine (~PureSine@user/PureSine) (*.net *.split)
[22:05:23] *** Quits: pa (~pah@user/pah) (*.net *.split)
[22:05:23] *** Quits: scruffyfurn (scruffyfur@turbous.xshellz.com) (*.net *.split)
[22:05:23] *** Quits: bone (~bone@user/mbo) (*.net *.split)
[22:05:23] *** Quits: Griwes_ (~griwes@znc.reaver-project.org) (*.net *.split)
[22:05:23] *** Quits: aku_ (~aku@163.172.137.34) (*.net *.split)
[22:05:23] *** Quits: Sadale (~Sadale@user/sadale) (*.net *.split)
[22:05:23] *** Quits: moberg1 (~moberg@luke.millenniumfalcon.org) (*.net *.split)
[22:05:23] *** Quits: packet_lozenge_ (~packet_lo@user/packet-lozenge/x-7125090) (*.net *.split)
[22:05:23] *** Quits: purplex (~purplex@user/purplex) (*.net *.split)
[22:05:23] *** Quits: Leo_V (~Leo@157.52.18.77) (*.net *.split)
[22:05:23] *** Quits: xcm_ (~xcm@user/xcm) (*.net *.split)
[22:05:24] *** Quits: beagles (~beagles@142.162.188.116) (*.net *.split)
[22:05:24] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (*.net *.split)
[22:05:24] *** Quits: polyrob (~rob@user/polyrob) (*.net *.split)
[22:05:24] *** Quits: millido (~millido@84.210.150.128) (*.net *.split)
[22:05:24] *** Quits: mitch0 (~mitch@193-226-249-203.pool.digikabel.hu) (*.net *.split)
[22:05:24] *** Quits: noarb (~noarb@user/noarb) (*.net *.split)
[22:05:24] *** Quits: mad_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca) (*.net *.split)
[22:05:24] *** Quits: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net) (*.net *.split)
[22:05:24] *** Quits: emerent (~quassel@p5b265a25.dip0.t-ipconnect.de) (*.net *.split)
[22:05:24] *** Quits: gdd (~gdd@129.199.146.230) (*.net *.split)
[22:05:24] *** Quits: fbiagent (~fbiagent@user/fbiagent) (*.net *.split)
[22:05:24] *** Quits: osse (~osse@zsh/user/osse) (*.net *.split)
[22:05:24] *** Quits: mixfix41 (~homefame@user/mixfix41) (*.net *.split)
[22:05:24] *** Quits: tbcr_ (~tbcr@107.13.189.161) (*.net *.split)
[22:05:24] *** Quits: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com) (*.net *.split)
[22:05:24] *** Quits: alex88 (~alex88@ip72-207-140-105.lv.lv.cox.net) (*.net *.split)
[22:05:24] *** Quits: Linux77 (~LinuMage@186.233.182.173) (*.net *.split)
[22:05:24] *** Quits: dzz007 (~dzz007@user/dzz007) (*.net *.split)
[22:05:24] *** Quits: edr (~edr@user/edr) (*.net *.split)
[22:05:24] *** Quits: elb0w (~elb0w@pool-98-109-49-7.nwrknj.fios.verizon.net) (*.net *.split)
[22:05:24] *** Quits: lloda (~user@11-206-127-185.static.world-connect.ch) (*.net *.split)
[22:05:24] *** Quits: ralu (~ralu@static.211.245.203.116.clients.your-server.de) (*.net *.split)
[22:05:24] *** Quits: pflanze (~pflanze@5-168-208-80.dyn.fiber.qlnet.ch) (*.net *.split)
[22:05:24] *** Quits: Kulrak (Kulrak@n122-109-158-59.rdl2.qld.optusnet.com.au) (*.net *.split)
[22:05:24] *** Quits: m_tadeu (~quassel@bl11-135-102.dsl.telepac.pt) (*.net *.split)
[22:05:25] *** Quits: GyrosGeier (~geier@185.27.255.155) (*.net *.split)
[22:05:25] *** Quits: Praise (~Fat@user/praise) (*.net *.split)
[22:05:25] *** Quits: useful_idiot (~useful_id@gateway/vpn/pia/usefulidiot/x-43226899) (*.net *.split)
[22:05:25] *** Quits: rb (~augh@theguntretort.com) (*.net *.split)
[22:05:25] *** Quits: ProperNoun (~holyShizn@user/propernoun) (*.net *.split)
[22:05:25] *** Quits: rnsanchez (~rnsanchez@179.233.249.52) (*.net *.split)
[22:05:25] *** Quits: LittleFox (littlefox@rondra.lf-net.org) (*.net *.split)
[22:05:25] *** Quits: foul_owl (~kerry@94.140.8.107) (*.net *.split)
[22:05:25] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (*.net *.split)
[22:05:25] *** Quits: nortoh (~nortoh@user/nortoh) (*.net *.split)
[22:05:25] *** Quits: Pajus (~Pajus@user/pajus) (*.net *.split)
[22:05:25] *** Quits: lru (~lru@240.ip-51-79-50.net) (*.net *.split)
[22:05:25] *** Quits: Dreg (~Dreg@fr33project.org) (*.net *.split)
[22:05:25] *** Quits: FergusL (~freenode4@user/fergusl) (*.net *.split)
[22:05:25] *** Quits: majors_ (~majors@user/majors) (*.net *.split)
[22:05:25] *** Quits: jkl1337 (~jkl@user/jkl) (*.net *.split)
[22:05:25] *** Quits: jaakkos_ (~jaakkos@88-113-244-153.elisa-laajakaista.fi) (*.net *.split)
[22:05:25] *** Quits: malinus_ (~malinus@172.245.158.16) (*.net *.split)
[22:05:25] *** Quits: sunyour (~sunyour@129.226.182.99) (*.net *.split)
[22:05:25] *** Quits: bdt (~bdt@155.51-174-24.customer.lyse.net) (*.net *.split)
[22:05:25] *** Quits: Dijky (~Dijky@user/dijky) (*.net *.split)
[22:05:25] *** Quits: ZeroKnight (zeroknight@dimensionzero.net) (*.net *.split)
[22:05:26] *** Quits: unyu (~pyon@user/pyon) (*.net *.split)
[22:05:26] *** Quits: anzu (~anzu@melkki.cs.helsinki.fi) (*.net *.split)
[22:05:26] *** Quits: woggle (~charles@c-va-26578d734e-1840-1.tingfiber.com) (*.net *.split)
[22:05:26] *** Quits: pascal1 (~SIGILL@user/pascal) (*.net *.split)
[22:05:26] *** Quits: dzoe (joe@joe.cz) (*.net *.split)
[22:05:26] *** Quits: Aardwolf (~Aardwolf@77-56-208-202.dclient.hispeed.ch) (*.net *.split)
[22:05:26] *** Quits: aeg (~aeg@215-052-180-159.dynamic.caiway.nl) (*.net *.split)
[22:05:26] *** Quits: lockywolf (~lockywolf@public.lockywolf.net) (*.net *.split)
[22:05:26] *** Quits: testasty[m] (~testastym@2001:470:69fc:105::1:5b38) (*.net *.split)
[22:05:26] *** Quits: orkim (~orkim@user/orkim) (*.net *.split)
[22:05:26] *** Quits: bitonic (~bitonic@2001:470:69fc:105::1812) (*.net *.split)
[22:05:26] *** Quits: aesth[m] (~aesthmatr@2001:470:69fc:105::1:57c1) (*.net *.split)
[22:05:26] *** Quits: shtumf[m] (~shtumfmat@2001:470:69fc:105::1:1b21) (*.net *.split)
[22:05:26] *** Quits: termos (sid18647@id-18647.helmsley.irccloud.com) (*.net *.split)
[22:05:26] *** Quits: amiti (sid373138@id-373138.lymington.irccloud.com) (*.net *.split)
[22:05:27] *** Quits: dwt_ (~dwt_@c-98-198-103-176.hsd1.tx.comcast.net) (*.net *.split)
[22:05:27] *** Quits: kkd (~kkd@255.205.154.104.bc.googleusercontent.com) (*.net *.split)
[22:05:27] *** Quits: ruediger (~ruediger@user/ruediger) (*.net *.split)
[22:05:27] *** Quits: HeTo (henkka@beer.modeemi.fi) (*.net *.split)
[22:05:27] *** Quits: Exa (exa@irc.moe) (*.net *.split)
[22:05:27] *** Quits: dhch (~dhch@185.213.154.165) (*.net *.split)
[22:05:27] *** Quits: braxas (sid508886@id-508886.lymington.irccloud.com) (*.net *.split)
[22:05:27] *** Quits: introom (introom@2600:3c01::f03c:92ff:fea3:2cf) (*.net *.split)
[22:05:27] *** Quits: Benett (~Benett@xnetx.de) (*.net *.split)
[22:05:27] *** Quits: obiwahn (~heini@user/obiwahn) (*.net *.split)
[22:05:27] *** Quits: carrar (~tim@osburn.jp) (*.net *.split)
[22:05:27] *** Quits: Spydar007 (~spydar007@user/spydar007) (*.net *.split)
[22:05:27] *** Quits: Chaser (~Chaser@user/chaser) (*.net *.split)
[22:05:27] *** Quits: Pjerky (~Pjerky@81-234-143-135-no58.tbcn.telia.com) (*.net *.split)
[22:05:28] *** Quits: wielding (~wielding@user/wielding) (*.net *.split)
[22:05:28] *** Quits: milia[m] (~mlliarmma@2001:470:69fc:105::1:4631) (*.net *.split)
[22:05:28] *** Quits: ormaaj (~ormaaj@user/ormaaj) (*.net *.split)
[22:05:28] *** Quits: tafa (~tafa@user/tafa) (*.net *.split)
[22:05:28] *** Quits: dme2 (~dme2@67.205.140.199) (*.net *.split)
[22:05:28] *** Quits: klys (~mdasoh@show.op8.us) (*.net *.split)
[22:05:28] *** Quits: akacrs (k7f@user/akacrs) (*.net *.split)
[22:05:28] *** Quits: wangledorf (sid505185@id-505185.ilkley.irccloud.com) (*.net *.split)
[22:05:28] *** Quits: mukti (mukti@bitcommit.io) (*.net *.split)
[22:05:29] *** Quits: cengiz_io (sid223191@id-223191.ilkley.irccloud.com) (*.net *.split)
[22:05:29] *** Quits: blackbeard420 (blackbeard@2600:3c03::f03c:91ff:fe92:3f2a) (*.net *.split)
[22:05:29] *** Quits: useretail (~useretail@185.132.19.151) (*.net *.split)
[22:05:29] *** Quits: Dragoon (~Dragoon@user/dragoon) (*.net *.split)
[22:05:29] *** Quits: Eelis (~Eelis@u.eel.is) (*.net *.split)
[22:05:29] *** Quits: JakeSays (~jake@c-67-182-197-230.hsd1.ut.comcast.net) (*.net *.split)
[22:05:29] *** Quits: Isthmusi (~Isthmus@user/isveni) (*.net *.split)
[22:05:29] *** Quits: m42e (~m42e@pb42.de) (*.net *.split)
[22:05:29] *** Quits: supernov1h (~supernova@mail.ijk.nz) (*.net *.split)
[22:05:29] *** Quits: tonitch (~tonitch@user/tonitch) (*.net *.split)
[22:05:29] *** Quits: Cienisty (Cienisty@user/cienisty) (*.net *.split)
[22:05:29] *** Quits: A_Dragon (A_D@libera/staff/dragon) (*.net *.split)
[22:05:29] *** Quits: vancz (~vancz@user/vancz) (*.net *.split)
[22:05:29] *** Quits: Xizor_ (~Xizor@151.ip-51-68-121.eu) (*.net *.split)
[22:05:29] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (*.net *.split)
[22:05:29] *** Quits: Moosadee (~Moosadee@136.32.155.193) (*.net *.split)
[22:05:30] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (*.net *.split)
[22:05:30] *** Quits: Jck_true (~jcktrue@user/jck-true/x-0200799) (*.net *.split)
[22:05:30] *** Quits: epony (~epony@user/epony) (*.net *.split)
[22:05:30] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (*.net *.split)
[22:05:30] *** Quits: sielicki (~sielickim@2001:470:69fc:105::f45) (*.net *.split)
[22:05:30] *** Quits: writeback[m] (~writeback@2001:470:69fc:105::1:6118) (*.net *.split)
[22:05:30] *** Quits: Stewart (~stewart@2001:470:69fc:105::1:6cd) (*.net *.split)
[22:05:30] *** Quits: popocka[m] (~popockama@2001:470:69fc:105::1:546e) (*.net *.split)
[22:05:30] *** Quits: heiner_ (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2) (*.net *.split)
[22:05:30] *** Quits: paulo (paulo@user/paulo/x-9032687) (*.net *.split)
[22:05:30] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (*.net *.split)
[22:05:30] *** Quits: miklcct (~quassel@vps.miklcct.com) (*.net *.split)
[22:05:31] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (*.net *.split)
[22:05:31] *** Quits: yano (~yano@ircpuzzles/staff/yano) (*.net *.split)
[22:05:31] *** Quits: tbe_loki (~loki@loki.codes) (*.net *.split)
[22:05:31] *** Quits: stephe (sid14127@id-14127.lymington.irccloud.com) (*.net *.split)
[22:05:31] *** Quits: nolyc (~nolyc@tinodidriksen.com) (*.net *.split)
[22:05:31] *** Quits: hirion (~hirion@user/hirion) (*.net *.split)
[22:05:31] *** Quits: cncr04s (~cncr04s@afxr.net) (*.net *.split)
[22:05:31] *** Quits: nohit (sid334887@id-334887.tinside.irccloud.com) (*.net *.split)
[22:05:31] *** Quits: kalven (~calvin@2a02:470:84:102::24) (*.net *.split)
[22:05:32] *** Quits: deepy (deepy@user/deepy) (*.net *.split)
[22:05:32] *** Quits: GrecKo (~grecko@static.183.157.9.5.clients.your-server.de) (*.net *.split)
[22:05:32] *** Quits: zinc_ (~zinc@163.ip-51-254-203.eu) (*.net *.split)
[22:05:32] *** Quits: e2 (e2@sponsored.by.bnc4you.xyz) (*.net *.split)
[22:05:32] *** Quits: manuels (~manuel@80.211.205.88) (*.net *.split)
[22:05:32] *** Quits: rdrg109 (~rdrg109@user/rdrg109) (*.net *.split)
[22:05:32] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (*.net *.split)
[22:05:32] *** Quits: MarcoAlvarez[m] (~surakgnom@2001:470:69fc:105::2dc) (*.net *.split)
[22:05:32] *** Quits: treeshateorcs[m] (~treeshate@2001:470:69fc:105::1:41c4) (*.net *.split)
[22:05:33] *** Quits: djinni (~djinni@static.38.6.217.95.clients.your-server.de) (*.net *.split)
[22:05:33] *** Quits: jaimelm (~jaimelm@deneb.emergentcommunitysystems.com) (*.net *.split)
[22:05:33] *** Quits: jancoow (~jancoow@user/jancoow) (*.net *.split)
[22:05:33] *** Quits: eck (~root@user/eck) (*.net *.split)
[22:05:33] *** Quits: b_jonas (~x@catv-176-63-3-122.catv.broadband.hu) (*.net *.split)
[22:05:33] *** Quits: krzych (krzych@nroot.pl) (*.net *.split)
[22:05:33] *** Quits: Adrinael (adrinael@dsl-hkibng21-54f8c5-237.dhcp.inet.fi) (*.net *.split)
[22:05:33] *** Quits: tin- (~tin@209.250.245.227) (*.net *.split)
[22:05:33] *** Quits: zaratustra_ (~zaratustr@idlerpg/player/zaratustra) (*.net *.split)
[22:05:33] *** Quits: Khoyo (~khoyo@user/khoyo) (*.net *.split)
[22:05:33] *** Quits: ElementW (~tungsten@hoodie.elementw.net) (*.net *.split)
[22:05:34] *** Quits: les (znc@user/les) (*.net *.split)
[22:05:34] *** Quits: markand (~markand@markand.fr) (*.net *.split)
[22:05:34] *** Quits: theglass (~glass@user/theglass) (*.net *.split)
[22:05:34] *** Quits: kornos_ (~kornos@2a04:ad80:0:fb::3b85) (*.net *.split)
[22:05:34] *** Quits: geordi (~geordi@tinodidriksen.com) (*.net *.split)
[22:05:34] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (*.net *.split)
[22:05:34] *** Quits: chiptuner (~bobby@user/chiptuner) (*.net *.split)
[22:05:34] *** Quits: ollien (~ollien@ollien.com) (*.net *.split)
[22:05:34] *** Quits: MrC (Ben@mrbenc.net) (*.net *.split)
[22:05:34] *** Quits: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net) (*.net *.split)
[22:05:34] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (*.net *.split)
[22:05:34] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (*.net *.split)
[22:05:34] *** Quits: rendar_ (~rendar@user/rendar) (*.net *.split)
[22:05:34] *** Quits: AmR (~AmREiSa@41.36.185.103) (*.net *.split)
[22:05:35] *** Quits: Karyon (~Karyon@user/karyon) (*.net *.split)
[22:05:35] *** Quits: DrinkyBird (~drinkybir@idlerpg/player/DrinkyBird) (*.net *.split)
[22:05:35] *** Quits: gjvc (~gjvc@29.68.246.35.bc.googleusercontent.com) (*.net *.split)
[22:05:35] *** Quits: irc-open-up (bounce@bounce.nastycode.com) (*.net *.split)
[22:05:35] *** Quits: boreas (~Thunderbi@2a00:6020:b006:a900:d250:99ff:fe34:8fd2) (*.net *.split)
[22:05:35] *** Quits: tcsc (sid145321@id-145321.lymington.irccloud.com) (*.net *.split)
[22:05:35] *** Quits: preisi (~preisi@irc.prei.si) (*.net *.split)
[22:05:35] *** Quits: Pent (sid313808@id-313808.lymington.irccloud.com) (*.net *.split)
[22:05:35] *** Quits: mgot (~mgot@vps-35cddd71.vps.ovh.net) (*.net *.split)
[22:05:35] *** Quits: gendl (sid100083@id-100083.hampstead.irccloud.com) (*.net *.split)
[22:05:36] *** Quits: sujeet (sujeet@freeboson.org) (*.net *.split)
[22:05:36] *** Quits: BtbN (btbn@ffmpeg/developer/btbn) (*.net *.split)
[22:05:36] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (*.net *.split)
[22:05:36] *** Quits: IUSR (sid348938@id-348938.hampstead.irccloud.com) (*.net *.split)
[22:05:36] *** Quits: reda_ (~reda@user/reda) (*.net *.split)
[22:05:36] *** Quits: talisein (~talisein@user/talisein) (*.net *.split)
[22:05:36] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (*.net *.split)
[22:05:36] *** Quits: hackkitten (~hackkitte@94.31.103.136) (*.net *.split)
[22:05:36] *** Quits: lunix00 (~lunix00@2804:14c:6321:900d:ecd5:589a:62ad:6273) (*.net *.split)
[22:05:36] *** Quits: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070) (*.net *.split)
[22:05:36] *** Quits: letto (~letto@188.25.113.229) (*.net *.split)
[22:05:36] *** Quits: Fairy (~Fairy@2001:464a:4992:0:74d4:7e78:2b3a:4c42) (*.net *.split)
[22:05:36] *** Quits: robert_ (~hellspawn@47.203.169.95) (*.net *.split)
[22:05:36] *** Quits: skapata (~Skapata@user/skapata) (*.net *.split)
[22:05:37] *** Quits: bolovanos (~bolovanos@user/bolovanos) (*.net *.split)
[22:05:37] *** Quits: sbrothy (~sbrothy@23.102.41.137) (*.net *.split)
[22:05:37] *** Quits: furrymcgee (~devuan@cgn-89-1-208-165.nc.de) (*.net *.split)
[22:05:37] *** Quits: andreasbuhr (~quassel@p549dbcc9.dip0.t-ipconnect.de) (*.net *.split)
[22:05:37] *** Quits: Manouchehri (sid384576@id-384576.hampstead.irccloud.com) (*.net *.split)
[22:05:37] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (*.net *.split)
[22:05:37] *** Quits: cpuid (~cpuid@user/cpuid) (*.net *.split)
[22:05:37] *** Quits: rayw (~ray@cpc83999-pool15-2-0-cust1.15-1.cable.virginm.net) (*.net *.split)
[22:05:37] *** Quits: pieguy128_ (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-56.dsl.bell.ca) (*.net *.split)
[22:05:37] *** Quits: samuelb (~samuelber@nata01.lip.pt) (*.net *.split)
[22:05:37] *** Quits: hasuTMK (~hasu@58x13x224x139.ap58.ftth.ucom.ne.jp) (*.net *.split)
[22:05:37] *** Quits: Xark_ (~Xark@47.156.11.28) (*.net *.split)
[22:05:37] *** Quits: peeps (~peepsalot@openscad/peepsalot) (*.net *.split)
[22:05:37] *** Quits: orthoplex64 (~crm@70.120.0.94) (*.net *.split)
[22:05:37] *** Quits: vicfred (~vicfred@user/vicfred) (*.net *.split)
[22:05:37] *** Quits: tobs (~tobs@taboege.de) (*.net *.split)
[22:05:37] *** Quits: jfsimon1981 (~jfsimon19@51.82.75.86.rev.sfr.net) (*.net *.split)
[22:05:37] *** Quits: joo-_ (~joo-_@fsf/member/joo--) (*.net *.split)
[22:05:37] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (*.net *.split)
[22:05:37] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (*.net *.split)
[22:05:38] *** Quits: hfsoulz (~hfsoulz@user/hfsoulz) (*.net *.split)
[22:05:38] *** Quits: Inline (~Inline@aftr-37-201-240-204.unity-media.net) (*.net *.split)
[22:05:38] *** Quits: Cyp (~cyp@213.237.85.9) (*.net *.split)
[22:05:38] *** Quits: smeso (~smeso@user/smeso) (*.net *.split)
[22:05:38] *** Quits: Brewster (~Brewster@104.145.226.5) (*.net *.split)
[22:05:38] *** Quits: ethoxy (~root@bison.sh3ll.ru) (*.net *.split)
[22:05:38] *** Quits: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net) (*.net *.split)
[22:05:38] *** Quits: Guest8100 (~tinloaf@virt-no01.mrvm.net) (*.net *.split)
[22:05:38] *** Quits: lhtseng (sid15322@id-15322.helmsley.irccloud.com) (*.net *.split)
[22:05:38] *** Quits: BluesBoy (~bboy@user/bluesboy) (*.net *.split)
[22:05:38] *** Quits: llh (~llh@user/llh) (*.net *.split)
[22:05:38] *** Quits: _SKiTZO (~dark@64.89-10-146.nextgentel.com) (*.net *.split)
[22:05:38] *** Quits: Soni (~quassel@autistic.space) (*.net *.split)
[22:05:38] *** Quits: feldim2425 (~feldim242@dynamic-2jh5c12x2xq736zy5n-pd01.res.v6.highway.a1.net) (*.net *.split)
[22:05:38] *** Quits: rvalue (~rvalue@user/rvalue) (*.net *.split)
[22:05:38] *** Quits: Cahaan (~Cahaan@user/cahaan) (*.net *.split)
[22:05:38] *** Quits: RandomReader (~RandomRea@user/randomreader) (*.net *.split)
[22:05:39] *** Quits: joast (~rick@cpe-98-146-112-4.natnow.res.rr.com) (*.net *.split)
[22:05:39] *** Quits: greenbagels (~gb@user/greenbagels) (*.net *.split)
[22:05:39] *** Quits: dongcarl (~dongcarl@70.107.207.192) (*.net *.split)
[22:05:39] *** Quits: Teukka (~teukka@user/Teukka) (*.net *.split)
[22:05:39] *** Quits: autark (~autark@ti0048a400-0869.bb.online.no) (*.net *.split)
[22:05:39] *** Quits: Munnu (~timo@81-197-121-83.elisa-laajakaista.fi) (*.net *.split)
[22:05:39] *** Quits: daswf852 (~daswf852@user/daswf852) (*.net *.split)
[22:05:39] *** Quits: Spirit532 (~Spirit532@user/Spirit532) (*.net *.split)
[22:05:39] *** Quits: IceMichael (~IceMichae@h2878436.stratoserver.net) (*.net *.split)
[22:05:39] *** Quits: traxex (traxex@user/traxex) (*.net *.split)
[22:05:39] *** Quits: cation (cation@user/cation) (*.net *.split)
[22:05:39] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (*.net *.split)
[22:05:39] *** Quits: CarloWood (~LdK13@212-127-230-18.cable.dynamic.v4.ziggo.nl) (*.net *.split)
[22:05:39] *** Quits: randm (~randm@user/randm) (*.net *.split)
[22:05:39] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (*.net *.split)
[22:05:39] *** Quits: manx (xuew@p200300e18f239d00022215fffe03cf97.dip0.t-ipconnect.de) (*.net *.split)
[22:05:39] *** Quits: Oxyd (~oxyd@user/oxyd) (*.net *.split)
[22:05:39] *** Quits: enyc (~enyc@user/enyc) (*.net *.split)
[22:05:39] *** Quits: Byteflux (~byte@byteflux.net) (*.net *.split)
[22:05:39] *** Quits: markmarkmark (~mark@user/markmarkmark) (*.net *.split)
[22:05:39] *** Quits: qwedfg (~qwedfg@user/qwedfg) (*.net *.split)
[22:05:39] *** Quits: sonic1 (~sonic@user/sonic) (*.net *.split)
[22:05:39] *** Quits: leah2 (~leah@vuxu.org) (*.net *.split)
[22:05:39] *** Quits: ERROH (~mama@user/mama) (*.net *.split)
[22:05:39] *** Quits: syrius (syrius@titan.stormtek.net) (*.net *.split)
[22:05:39] *** Quits: zoraj (~zoraj@209.126.81.159) (*.net *.split)
[22:07:45] <ville> there's no salvaging c++. committee aims for c++ to maintain good backwards compatibility with c++ it self. there's no escaping that
[22:08:44] *** Quits: elemongw (~elemongw@20.107.36.50) (Ping timeout: 256 seconds)
[22:09:52] *** Joins: Tokamak (~Tokamak@172.58.188.35)
[22:09:52] *** Joins: RokerHRO (~zonc@euporie.uberspace.de)
[22:09:52] *** Joins: energizer (~energizer@user/energizer)
[22:09:52] *** Joins: s1b1 (~s1b1@user/s1b1)
[22:09:52] *** Joins: zenstoic (uid461840@id-461840.hampstead.irccloud.com)
[22:09:52] *** Joins: bionade24 (~bionade24@2a03:4000:33:45b::1)
[22:09:52] *** Joins: gdarko (~me@dg.mk)
[22:09:52] *** Joins: Sadale (~Sadale@user/sadale)
[22:09:52] *** Joins: scruffyfurn (scruffyfur@turbous.xshellz.com)
[22:09:52] *** Joins: AliceMeows (~AliceMeow@user/alicemeows)
[22:09:52] *** Joins: xq (~xq@user/xq)
[22:09:52] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[22:09:52] *** Joins: Nnavd (~Nnavd@ec2-34-220-224-214.us-west-2.compute.amazonaws.com)
[22:09:52] *** Joins: Nitrousoxide (~msdos@user/nitrousoxide)
[22:09:52] *** Joins: paperManu_ (~paperManu@138.197.128.151)
[22:09:52] *** Joins: fiesh_ (~fiesh@2003:fb:1018::21)
[22:09:52] *** Joins: Jmtrix- (~qed@2604:180:2:72d::497d)
[22:09:52] *** Joins: webstrand (~webstrand@user/webstrand)
[22:09:52] *** Joins: jonbryan_ (~ea@user/jonbryan)
[22:09:52] *** Joins: nuala3 (~nuala@user/nuala)
[22:09:52] *** Joins: TommyC7 (~TommyC@45.92.124.114)
[22:09:52] *** Joins: murphy_ (~murphy_@cpe-104-162-115-128.nyc.res.rr.com)
[22:09:52] *** Joins: Henry_The_Longsh (~Henry@46.101.4.181)
[22:09:52] *** Joins: dartmouthed (~blackunsp@li761-35.members.linode.com)
[22:09:52] *** Joins: fruitypunk1 (~user@2a01:7c8:aaaa:12:5054:ff:fe69:1df9)
[22:09:52] *** Joins: BrandonArnold2 (~brandon@ec2-52-27-188-210.us-west-2.compute.amazonaws.com)
[22:09:52] *** Joins: micronnn (~micronn@user/micronn)
[22:09:52] *** Joins: meicceli1 (meicceli@kapsi.fi)
[22:09:52] *** Joins: CygniX_ (~CygniX@2a01:8740:1:727:4e:80:7f:2d)
[22:09:52] *** Joins: jadew` (~rcc@2a02:2f0a:b111:b100:ca2a:14ff:fe58:c8c0)
[22:09:52] *** Joins: Nixx_ (~quassel@bulbasaur.sjorsgielen.nl)
[22:09:52] *** Joins: TimWolla (~timwolla@2a01:4f8:150:6153:beef::6667)
[22:09:52] *** Joins: prime (~prime@user/prime)
[22:09:52] *** Joins: Arsen_ (arsen@managarm/dev/Arsen)
[22:09:52] *** Joins: msim__ (~msim@2001:8003:d194:d000::d8d)
[22:09:52] *** Joins: cosimone` (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[22:09:52] *** Joins: Forsaken87_ (~quassel@2a02:908:1866:e360:88b0:2032:220f:3f73)
[22:09:52] *** Joins: sven_ (~quassel@squint.a-oben.org)
[22:09:52] *** Joins: blinky43 (~quassel@jabber.blinkylight.net)
[22:09:52] *** Joins: NiKaN (sid385034@id-385034.helmsley.irccloud.com)
[22:09:52] *** Joins: kfv_ (~kfv@mail.kfv.io)
[22:09:52] *** Joins: decartes (sid240036@id-240036.helmsley.irccloud.com)
[22:09:52] *** Joins: jakesyl__ (sid56879@id-56879.hampstead.irccloud.com)
[22:09:52] *** Joins: patterner__ (sid212303@id-212303.ilkley.irccloud.com)
[22:09:52] *** Joins: PotatoGim (sid99505@id-99505.lymington.irccloud.com)
[22:09:52] *** Joins: NovaXrine_ (~NovaXrine@2604:a880:4:1d0::183:6000)
[22:09:52] *** Joins: hexeme (~hexeme@user/hexeme)
[22:09:52] *** Joins: VShell (~shell@user/shell)
[22:09:52] *** Joins: greyblue9 (sid500829@id-500829.ilkley.irccloud.com)
[22:09:52] *** Joins: TinoDidriksen (~TinoDidri@tinodidriksen.com)
[22:09:52] *** Joins: psb__ (sid500598@id-500598.ilkley.irccloud.com)
[22:09:52] *** Joins: merpnderp (sid16744@id-16744.hampstead.irccloud.com)
[22:09:52] *** Joins: KnownSyntax (sid233169@user/knownsyntax)
[22:09:52] *** Joins: megaTherion_ (~therion@unix.io)
[22:09:52] *** Joins: luca0N_ (~luca0N@nautilus.luca0n.com)
[22:09:52] *** Joins: jimbzy (~gem@user/jimbzy)
[22:09:52] *** Joins: nightstrike (uid487@id-487.uxbridge.irccloud.com)
[22:09:52] *** Joins: jkaye_ (~jkaye@2601:281:8300:7530:6a7d:d789:f2c1:154c)
[22:09:52] *** Joins: AbleBacon_ (~AbleBacon@user/AbleBacon)
[22:09:52] *** Joins: KAHR-Alpha_ (~Alpha@2a01cb0d024a66007417638e35437933.ipv6.abo.wanadoo.fr)
[22:09:52] *** Joins: hackkitten (~hackkitte@94.31.103.136)
[22:09:52] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[22:09:52] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[22:09:52] *** Joins: lunix00 (~lunix00@2804:14c:6321:900d:ecd5:589a:62ad:6273)
[22:09:52] *** Joins: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net)
[22:09:52] *** Joins: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070)
[22:09:52] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[22:09:52] *** Joins: letto (~letto@188.25.113.229)
[22:09:52] *** Joins: unyu (~pyon@user/pyon)
[22:09:52] *** Joins: Fairy (~Fairy@2001:464a:4992:0:74d4:7e78:2b3a:4c42)
[22:09:52] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[22:09:52] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[22:09:52] *** Joins: robert_ (~hellspawn@47.203.169.95)
[22:09:52] *** Joins: dld (~davidlowr@2601:197:600:1210:aca6:8c80:35d5:4f3c)
[22:09:52] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[22:09:52] *** Joins: skapata (~Skapata@user/skapata)
[22:09:52] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[22:09:52] *** Joins: Green_ (~Green-@h-85-24-185-116.a189.priv.bahnhof.se)
[22:09:52] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[22:09:52] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[22:09:52] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[22:09:52] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[22:09:52] *** Joins: rendar_ (~rendar@user/rendar)
[22:09:52] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:09:52] *** Joins: sbrothy (~sbrothy@23.102.41.137)
[22:09:52] *** Joins: gnomesort (~gnomesort@user/gnomesort)
[22:09:52] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[22:09:52] *** Joins: furrymcgee (~devuan@cgn-89-1-208-165.nc.de)
[22:09:52] *** Joins: Jck_true (~jcktrue@user/jck-true/x-0200799)
[22:09:52] *** Joins: AmR (~AmREiSa@41.36.185.103)
[22:09:52] *** Joins: andreasbuhr (~quassel@p549dbcc9.dip0.t-ipconnect.de)
[22:09:52] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:d15a:88a1:e780:f469)
[22:09:52] *** Joins: Manouchehri (sid384576@id-384576.hampstead.irccloud.com)
[22:09:52] *** Joins: oknenavin (~nomo@95.87.208.95)
[22:09:52] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[22:09:52] *** Joins: EdFletcher (~PKD@user/edfletcher)
[22:09:52] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[22:09:52] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[22:09:52] *** Joins: jsbach_ (~jsbach@2a01:c23:65fb:5700:1909:e50e:4289:5972)
[22:09:52] *** Joins: PureSine (~PureSine@user/PureSine)
[22:09:52] *** Joins: pa (~pah@user/pah)
[22:09:52] *** Joins: cpuid (~cpuid@user/cpuid)
[22:09:52] *** Joins: bone (~bone@user/mbo)
[22:09:52] *** Joins: rayw (~ray@cpc83999-pool15-2-0-cust1.15-1.cable.virginm.net)
[22:09:52] *** Joins: anzu (~anzu@melkki.cs.helsinki.fi)
[22:09:52] *** Joins: woggle (~charles@c-va-26578d734e-1840-1.tingfiber.com)
[22:09:52] *** Joins: pascal1 (~SIGILL@user/pascal)
[22:09:52] *** Joins: dzoe (joe@joe.cz)
[22:09:52] *** Joins: Aardwolf (~Aardwolf@77-56-208-202.dclient.hispeed.ch)
[22:09:52] *** Joins: Griwes_ (~griwes@znc.reaver-project.org)
[22:09:52] *** Joins: Hello72 (~Hello71@wireguard/contributor/hello71)
[22:09:52] *** Joins: aku_ (~aku@163.172.137.34)
[22:09:52] *** Joins: moberg1 (~moberg@luke.millenniumfalcon.org)
[22:09:52] *** Joins: packet_lozenge_ (~packet_lo@user/packet-lozenge/x-7125090)
[22:09:52] *** Joins: pieguy128_ (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-56.dsl.bell.ca)
[22:09:52] *** Joins: purplex (~purplex@user/purplex)
[22:09:52] *** Joins: samuelb (~samuelber@nata01.lip.pt)
[22:09:52] *** Joins: hasuTMK (~hasu@58x13x224x139.ap58.ftth.ucom.ne.jp)
[22:09:52] *** Joins: Xark_ (~Xark@47.156.11.28)
[22:09:52] *** Joins: peeps (~peepsalot@openscad/peepsalot)
[22:09:52] *** Joins: Leo_V (~Leo@157.52.18.77)
[22:09:52] *** Joins: orthoplex64 (~crm@70.120.0.94)
[22:09:52] *** Joins: vicfred (~vicfred@user/vicfred)
[22:09:52] *** Joins: xcm_ (~xcm@user/xcm)
[22:09:52] *** Joins: spithash (~spithash@user/spithash)
[22:09:52] *** Joins: tobs (~tobs@taboege.de)
[22:09:52] *** Joins: jfsimon1981 (~jfsimon19@51.82.75.86.rev.sfr.net)
[22:09:52] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[22:09:52] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[22:09:52] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[22:09:52] *** Joins: hfsoulz (~hfsoulz@user/hfsoulz)
[22:09:52] *** Joins: Inline (~Inline@aftr-37-201-240-204.unity-media.net)
[22:09:52] *** Joins: beagles (~beagles@142.162.188.116)
[22:09:52] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[22:09:52] *** Joins: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch)
[22:09:52] *** Joins: polyrob (~rob@user/polyrob)
[22:09:52] *** Joins: millido (~millido@84.210.150.128)
[22:09:52] *** Joins: mitch0 (~mitch@193-226-249-203.pool.digikabel.hu)
[22:09:52] *** Joins: Cyp (~cyp@213.237.85.9)
[22:09:52] *** Joins: noarb (~noarb@user/noarb)
[22:09:52] *** Joins: smeso (~smeso@user/smeso)
[22:09:52] *** Joins: teepee (~teepee@openscad/teepee)
[22:09:52] *** Joins: mad_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca)
[22:09:52] *** Joins: Brewster (~Brewster@104.145.226.5)
[22:09:52] *** Joins: ethoxy (~root@bison.sh3ll.ru)
[22:09:52] *** Joins: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net)
[22:09:52] *** Joins: emerent (~quassel@p5b265a25.dip0.t-ipconnect.de)
[22:09:52] *** Joins: gdd (~gdd@129.199.146.230)
[22:09:52] *** Joins: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net)
[22:09:52] *** Joins: Guest8100 (~tinloaf@virt-no01.mrvm.net)
[22:09:52] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[22:09:52] *** Joins: osse (~osse@zsh/user/osse)
[22:09:52] *** Joins: bindu (~bindu@user/bindu)
[22:09:52] *** Joins: lhtseng (sid15322@id-15322.helmsley.irccloud.com)
[22:09:52] *** Joins: epony (~epony@user/epony)
[22:09:52] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[22:09:52] *** Joins: BluesBoy (~bboy@user/bluesboy)
[22:09:52] *** Joins: llh (~llh@user/llh)
[22:09:52] *** Joins: mixfix41 (~homefame@user/mixfix41)
[22:09:52] *** Joins: tbcr_ (~tbcr@107.13.189.161)
[22:09:52] *** Joins: _SKiTZO (~dark@64.89-10-146.nextgentel.com)
[22:09:52] *** Joins: Soni (~quassel@autistic.space)
[22:09:52] *** Joins: aeg (~aeg@215-052-180-159.dynamic.caiway.nl)
[22:09:52] *** Joins: feldim2425 (~feldim242@dynamic-2jh5c12x2xq736zy5n-pd01.res.v6.highway.a1.net)
[22:09:52] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[22:09:52] *** Joins: rvalue (~rvalue@user/rvalue)
[22:09:52] *** Joins: Cahaan (~Cahaan@user/cahaan)
[22:09:52] *** Joins: lockywolf (~lockywolf@public.lockywolf.net)
[22:09:52] *** Joins: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com)
[22:09:52] *** Joins: alex88 (~alex88@ip72-207-140-105.lv.lv.cox.net)
[22:09:52] *** Joins: RandomReader (~RandomRea@user/randomreader)
[22:09:52] *** Joins: Linux77 (~LinuMage@186.233.182.173)
[22:09:52] *** Joins: joast (~rick@cpe-98-146-112-4.natnow.res.rr.com)
[22:09:52] *** Joins: greenbagels (~gb@user/greenbagels)
[22:09:52] *** Joins: dongcarl (~dongcarl@70.107.207.192)
[22:09:52] *** Joins: Teukka (~teukka@user/Teukka)
[22:09:52] *** Joins: autark (~autark@ti0048a400-0869.bb.online.no)
[22:09:52] *** Joins: dzz007 (~dzz007@user/dzz007)
[22:09:52] *** Joins: Munnu (~timo@81-197-121-83.elisa-laajakaista.fi)
[22:09:52] *** Joins: edr (~edr@user/edr)
[22:09:52] *** Joins: daswf852 (~daswf852@user/daswf852)
[22:09:52] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[22:09:52] *** Joins: Spirit532 (~Spirit532@user/Spirit532)
[22:09:52] *** Joins: IceMichael (~IceMichae@h2878436.stratoserver.net)
[22:09:52] *** Joins: nlatp[m] (~nlatpmatr@2001:470:69fc:105::1:4d1f)
[22:09:52] *** Joins: scjg (~scjgmatri@2001:470:69fc:105::f5d6)
[22:09:52] *** Joins: elb0w (~elb0w@pool-98-109-49-7.nwrknj.fios.verizon.net)
[22:09:52] *** Joins: traxex (traxex@user/traxex)
[22:09:52] *** Joins: cation (cation@user/cation)
[22:09:52] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[22:09:52] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[22:09:52] *** Joins: CarloWood (~LdK13@212-127-230-18.cable.dynamic.v4.ziggo.nl)
[22:09:52] *** Joins: randm (~randm@user/randm)
[22:09:52] *** Joins: henbruas (~henbruas@ti0003a400-4203.bb.online.no)
[22:09:52] *** Joins: manx (xuew@p200300e18f239d00022215fffe03cf97.dip0.t-ipconnect.de)
[22:09:52] *** Joins: lloda (~user@11-206-127-185.static.world-connect.ch)
[22:09:52] *** Joins: ralu (~ralu@static.211.245.203.116.clients.your-server.de)
[22:09:52] *** Joins: pflanze (~pflanze@5-168-208-80.dyn.fiber.qlnet.ch)
[22:09:52] *** Joins: Kulrak (Kulrak@n122-109-158-59.rdl2.qld.optusnet.com.au)
[22:09:52] *** Joins: m_tadeu (~quassel@bl11-135-102.dsl.telepac.pt)
[22:09:52] *** Joins: dme2 (~dme2@67.205.140.199)
[22:09:52] *** Joins: testasty[m] (~testastym@2001:470:69fc:105::1:5b38)
[22:09:52] *** Joins: sielicki (~sielickim@2001:470:69fc:105::f45)
[22:09:52] *** Joins: writeback[m] (~writeback@2001:470:69fc:105::1:6118)
[22:09:52] *** Joins: Stewart (~stewart@2001:470:69fc:105::1:6cd)
[22:09:52] *** Joins: wielding (~wielding@user/wielding)
[22:09:52] *** Joins: popocka[m] (~popockama@2001:470:69fc:105::1:546e)
[22:09:52] *** Joins: equinox[m] (~momoshiki@2001:470:69fc:105::fe92)
[22:09:52] *** Joins: orkim (~orkim@user/orkim)
[22:09:52] *** Joins: heiner_ (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[22:09:52] *** Joins: milia[m] (~mlliarmma@2001:470:69fc:105::1:4631)
[22:09:52] *** Joins: bitonic (~bitonic@2001:470:69fc:105::1812)
[22:09:52] *** Joins: MarcoAlvarez[m] (~surakgnom@2001:470:69fc:105::2dc)
[22:09:52] *** Joins: treeshateorcs[m] (~treeshate@2001:470:69fc:105::1:41c4)
[22:09:52] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[22:09:52] *** Joins: zygonsisyphus[m] (~zygonsisy@2001:470:69fc:105::482)
[22:09:52] *** Joins: hnOsmium0001[m] (~hnosmium0@2001:470:69fc:105::15d4)
[22:09:52] *** Joins: aesth[m] (~aesthmatr@2001:470:69fc:105::1:57c1)
[22:09:52] *** Joins: shtumf[m] (~shtumfmat@2001:470:69fc:105::1:1b21)
[22:09:52] *** Joins: Oxyd (~oxyd@user/oxyd)
[22:09:52] *** Joins: GyrosGeier (~geier@185.27.255.155)
[22:09:52] *** Joins: Dijky (~Dijky@user/dijky)
[22:09:52] *** Joins: ZeroKnight (zeroknight@dimensionzero.net)
[22:09:52] *** Joins: bdt (~bdt@155.51-174-24.customer.lyse.net)
[22:09:52] *** Joins: sunyour (~sunyour@129.226.182.99)
[22:09:52] *** Joins: malinus_ (~malinus@172.245.158.16)
[22:09:52] *** Joins: jaakkos_ (~jaakkos@88-113-244-153.elisa-laajakaista.fi)
[22:09:52] *** Joins: jkl1337 (~jkl@user/jkl)
[22:09:52] *** Joins: majors_ (~majors@user/majors)
[22:09:52] *** Joins: FergusL (~freenode4@user/fergusl)
[22:09:52] *** Joins: Dreg (~Dreg@fr33project.org)
[22:09:52] *** Joins: lru (~lru@240.ip-51-79-50.net)
[22:09:52] *** Joins: Pajus (~Pajus@user/pajus)
[22:09:52] *** Joins: nortoh (~nortoh@user/nortoh)
[22:09:52] *** Joins: simpl_e (~user@user/simpl-e/x-8589812)
[22:09:52] *** Joins: foul_owl (~kerry@94.140.8.107)
[22:09:52] *** Joins: LittleFox (littlefox@rondra.lf-net.org)
[22:09:52] *** Joins: rnsanchez (~rnsanchez@179.233.249.52)
[22:09:52] *** Joins: ProperNoun (~holyShizn@user/propernoun)
[22:09:52] *** Joins: rb (~augh@theguntretort.com)
[22:09:52] *** Joins: useful_idiot (~useful_id@gateway/vpn/pia/usefulidiot/x-43226899)
[22:09:52] *** Joins: Praise (~Fat@user/praise)
[22:09:52] *** Joins: shenghi (~shenghi@chrysocolla.mutablevoid.org)
[22:09:52] *** Joins: Hobbyboy (Hobbyboy@hobbyboy.co.uk)
[22:09:52] *** Joins: andreyv (~andrey@user/andreyv)
[22:09:52] *** Joins: xrj (~av@2a01:4f8:c17:7cba::1)
[22:09:52] *** Joins: hyper_dave (~hyper_dav@2a01:4f9:4a:246c::2)
[22:09:52] *** Joins: computerquip (sid423484@user/computerquip)
[22:09:52] *** Joins: ws2k3 (znc@vps.freegamehosting.eu)
[22:09:52] *** Joins: [R] (~rs@genoce.org)
[22:09:52] *** Joins: riksteri (d20812115c@2604:bf00:561:2000::1e6)
[22:09:52] *** Joins: catern (~sbaugh@2604:2000:8fc0:b:a9c7:866a:bf36:3407)
[22:09:52] *** Joins: Albright (~Albright@149.28.13.173)
[22:09:52] *** Joins: Telvana (~capo@user/telvana)
[22:09:52] *** Joins: urdh (~urdh@user/urdh)
[22:09:52] *** Joins: dansan (~daniel@75.81.148.51)
[22:09:52] *** Joins: mrkajetanp (~mrkajetan@88.98.245.28)
[22:09:52] *** Joins: Svitkona (~Svitkona@157.245.38.135)
[22:09:52] *** Joins: jbalint_ (~jbalint@2600:6c44:117f:e98a:816a:9488:fb1:7b7)
[22:09:52] *** Joins: jzsinatra (~jzsinatra@88-114-238-31.elisa-laajakaista.fi)
[22:09:52] *** Joins: mrec_ (~markus@sundtek.de)
[22:09:52] *** Joins: dexter0 (~dexter0@c-69-181-126-161.hsd1.ca.comcast.net)
[22:09:52] *** Joins: xisop (~xisop@bnull.net)
[22:09:52] *** Joins: imMute (~immute@user/immute)
[22:09:52] *** Joins: celphi (sid97751@user/celphi)
[22:09:52] *** Joins: gothicserpent (~gothicser@2604:a880:4:1d0::176:6000)
[22:09:52] *** Joins: hirish (~hirish@ip85.ip-137-74-20.eu)
[22:09:52] *** Joins: lpotter (~quassel@180-150-104-92.b49668.bne.static.aussiebb.net)
[22:09:52] *** Joins: jellie (~luv_panda@user/jellie)
[22:09:52] *** Joins: renopt (~renopt@lisp.us.to)
[22:09:52] *** Joins: glenfe (sid231748@user/glenfe)
[22:09:52] *** Joins: Bodger1234_ (sid503511@id-503511.uxbridge.irccloud.com)
[22:09:52] *** Joins: TingPing (sid2800@id-2800.helmsley.irccloud.com)
[22:09:52] *** Joins: pippijn (~pippijn@ra.xinutec.org)
[22:09:52] *** Joins: Ara (~Ara@user/ara)
[22:09:52] *** Joins: InPhase (~InPhase@openscad/inphase)
[22:09:52] *** Joins: drmeister (sid45147@id-45147.ilkley.irccloud.com)
[22:09:52] *** Joins: taiyu (~taiyu@user/taiyu)
[22:09:52] *** Joins: blo (~blo@user/blo)
[22:09:52] *** Joins: ullbeking_ (sid5364@id-5364.ilkley.irccloud.com)
[22:09:52] *** Joins: Learath2 (~learath2@user/learath2)
[22:09:52] *** Joins: merry (~mary@user/merry)
[22:09:52] *** Joins: Argorok (sid195487@id-195487.hampstead.irccloud.com)
[22:09:52] *** Joins: buhman (sid411355@user/buhman)
[22:09:52] *** Joins: aeplus (~steve@2603-8000-cf42-7ec1-162f-1996-0ae2-d7da.res6.spectrum.com)
[22:09:52] *** Joins: Artea (~Lufia@artea.com.pt)
[22:09:52] *** Joins: barometz (~dvanb@i117058.upc-i.chello.nl)
[22:09:52] *** Joins: Yamakaja (~yamakaja@user/yamakaja)
[22:09:52] *** Joins: whatsupboy (~whatsupbo@user/scobydoo)
[22:09:52] *** Joins: enyc (~enyc@user/enyc)
[22:09:52] *** Joins: Pjerky (~Pjerky@81-234-143-135-no58.tbcn.telia.com)
[22:09:52] *** Joins: Chaser (~Chaser@user/chaser)
[22:09:52] *** Joins: Spydar007 (~spydar007@user/spydar007)
[22:09:52] *** Joins: carrar (~tim@osburn.jp)
[22:09:52] *** Joins: obiwahn (~heini@user/obiwahn)
[22:09:52] *** Joins: Benett (~Benett@xnetx.de)
[22:09:52] *** Joins: introom (introom@2600:3c01::f03c:92ff:fea3:2cf)
[22:09:52] *** Joins: braxas (sid508886@id-508886.lymington.irccloud.com)
[22:09:52] *** Joins: dhch (~dhch@185.213.154.165)
[22:09:52] *** Joins: Exa (exa@irc.moe)
[22:09:52] *** Joins: HeTo (henkka@beer.modeemi.fi)
[22:09:52] *** Joins: ruediger (~ruediger@user/ruediger)
[22:09:52] *** Joins: kkd (~kkd@255.205.154.104.bc.googleusercontent.com)
[22:09:52] *** Joins: dwt_ (~dwt_@c-98-198-103-176.hsd1.tx.comcast.net)
[22:09:52] *** Joins: amiti (sid373138@id-373138.lymington.irccloud.com)
[22:09:52] *** Joins: termos (sid18647@id-18647.helmsley.irccloud.com)
[22:09:52] *** Joins: Xizor_ (~Xizor@151.ip-51-68-121.eu)
[22:09:52] *** Joins: vancz (~vancz@user/vancz)
[22:09:52] *** Joins: A_Dragon (A_D@libera/staff/dragon)
[22:09:52] *** Joins: Cienisty (Cienisty@user/cienisty)
[22:09:52] *** Joins: tonitch (~tonitch@user/tonitch)
[22:09:52] *** Joins: supernov1h (~supernova@mail.ijk.nz)
[22:09:52] *** Joins: m42e (~m42e@pb42.de)
[22:09:52] *** Joins: Isthmusi (~Isthmus@user/isveni)
[22:09:52] *** Joins: JakeSays (~jake@c-67-182-197-230.hsd1.ut.comcast.net)
[22:09:52] *** Joins: Eelis (~Eelis@u.eel.is)
[22:09:52] *** Joins: Dragoon (~Dragoon@user/dragoon)
[22:09:52] *** Joins: useretail (~useretail@185.132.19.151)
[22:09:52] *** Joins: blackbeard420 (blackbeard@2600:3c03::f03c:91ff:fe92:3f2a)
[22:09:52] *** Joins: cengiz_io (sid223191@id-223191.ilkley.irccloud.com)
[22:09:52] *** Joins: mukti (mukti@bitcommit.io)
[22:09:52] *** Joins: wangledorf (sid505185@id-505185.ilkley.irccloud.com)
[22:09:52] *** Joins: akacrs (k7f@user/akacrs)
[22:09:52] *** Joins: klys (~mdasoh@show.op8.us)
[22:09:52] *** Joins: tafa (~tafa@user/tafa)
[22:09:52] *** Joins: MrC (Ben@mrbenc.net)
[22:09:52] *** Joins: ollien (~ollien@ollien.com)
[22:09:52] *** Joins: chiptuner (~bobby@user/chiptuner)
[22:09:52] *** Joins: geordi (~geordi@tinodidriksen.com)
[22:09:52] *** molybdenum.libera.chat sets mode: +v geordi
[22:09:52] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[22:09:52] *** Joins: kornos_ (~kornos@2a04:ad80:0:fb::3b85)
[22:09:52] *** Joins: theglass (~glass@user/theglass)
[22:09:52] *** Joins: markand (~markand@markand.fr)
[22:09:52] *** Joins: les (znc@user/les)
[22:09:52] *** Joins: ElementW (~tungsten@hoodie.elementw.net)
[22:09:52] *** Joins: Khoyo (~khoyo@user/khoyo)
[22:09:52] *** Joins: zaratustra_ (~zaratustr@idlerpg/player/zaratustra)
[22:09:52] *** Joins: tin- (~tin@209.250.245.227)
[22:09:52] *** Joins: Adrinael (adrinael@dsl-hkibng21-54f8c5-237.dhcp.inet.fi)
[22:09:52] *** Joins: krzych (krzych@nroot.pl)
[22:09:52] *** Joins: b_jonas (~x@catv-176-63-3-122.catv.broadband.hu)
[22:09:52] *** Joins: eck (~root@user/eck)
[22:09:52] *** Joins: jancoow (~jancoow@user/jancoow)
[22:09:52] *** Joins: jaimelm (~jaimelm@deneb.emergentcommunitysystems.com)
[22:09:52] *** Joins: djinni (~djinni@static.38.6.217.95.clients.your-server.de)
[22:09:52] *** Joins: kalven (~calvin@2a02:470:84:102::24)
[22:09:52] *** Joins: nohit (sid334887@id-334887.tinside.irccloud.com)
[22:09:52] *** Joins: hirion (~hirion@user/hirion)
[22:09:52] *** Joins: cncr04s (~cncr04s@afxr.net)
[22:09:52] *** Joins: nolyc (~nolyc@tinodidriksen.com)
[22:09:52] *** Joins: stephe (sid14127@id-14127.lymington.irccloud.com)
[22:09:52] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[22:09:52] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[22:09:52] *** Joins: miklcct (~quassel@vps.miklcct.com)
[22:09:52] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[22:09:52] *** Joins: paulo (paulo@user/paulo/x-9032687)
[22:09:52] *** Joins: tbe_loki (~loki@loki.codes)
[22:09:52] *** Joins: rdrg109 (~rdrg109@user/rdrg109)
[22:09:52] *** Joins: manuels (~manuel@80.211.205.88)
[22:09:52] *** Joins: e2 (e2@sponsored.by.bnc4you.xyz)
[22:09:52] *** Joins: zinc_ (~zinc@163.ip-51-254-203.eu)
[22:09:52] *** Joins: GrecKo (~grecko@static.183.157.9.5.clients.your-server.de)
[22:09:52] *** Joins: deepy (deepy@user/deepy)
[22:09:52] *** Joins: talisein (~talisein@user/talisein)
[22:09:52] *** Joins: reda_ (~reda@user/reda)
[22:09:52] *** Joins: IUSR (sid348938@id-348938.hampstead.irccloud.com)
[22:09:52] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[22:09:52] *** Joins: BtbN (btbn@ffmpeg/developer/btbn)
[22:09:52] *** Joins: sujeet (sujeet@freeboson.org)
[22:09:52] *** Joins: mgot (~mgot@vps-35cddd71.vps.ovh.net)
[22:09:52] *** Joins: Pent (sid313808@id-313808.lymington.irccloud.com)
[22:09:52] *** Joins: preisi (~preisi@irc.prei.si)
[22:09:52] *** Joins: gendl (sid100083@id-100083.hampstead.irccloud.com)
[22:09:52] *** Joins: tcsc (sid145321@id-145321.lymington.irccloud.com)
[22:09:52] *** Joins: boreas (~Thunderbi@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[22:09:52] *** Joins: irc-open-up (bounce@bounce.nastycode.com)
[22:09:52] *** molybdenum.libera.chat sets mode: +v nolyc
[22:09:52] *** Joins: gjvc (~gjvc@29.68.246.35.bc.googleusercontent.com)
[22:09:52] *** Joins: DrinkyBird (~drinkybir@idlerpg/player/DrinkyBird)
[22:09:52] *** Joins: Karyon (~Karyon@user/karyon)
[22:09:52] *** Joins: zoraj (~zoraj@209.126.81.159)
[22:09:52] *** Joins: syrius (syrius@titan.stormtek.net)
[22:09:52] *** Joins: ERROH (~mama@user/mama)
[22:09:52] *** Joins: leah2 (~leah@vuxu.org)
[22:09:52] *** Joins: sonic1 (~sonic@user/sonic)
[22:09:52] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[22:09:52] *** Joins: markmarkmark (~mark@user/markmarkmark)
[22:09:52] *** Joins: Byteflux (~byte@byteflux.net)
[22:10:31] *** Quits: meicceli1 (meicceli@kapsi.fi) (Quit: WeeChat 3.3)
[22:10:31] *** Joins: meicceli (meicceli@kapsi.fi)
[22:10:34] *** Quits: Tokamak (~Tokamak@172.58.188.35) (Read error: Connection reset by peer)
[22:10:35] *** Joins: a5m (nop@asm.dj)
[22:10:36] *** Joins: rmd (~rm@ec2-52-202-15-104.compute-1.amazonaws.com)
[22:10:36] *** VShell is now known as Shell
[22:10:36] *** Joins: Tokamak (~Tokamak@172.58.188.35)
[22:10:41] *** Joins: DrMax_ (~DrMax@132.215.96.36)
[22:11:01] *** Joins: DrMax (~DrMax@node-1w7jra94757g035onllb9zbjp.ipv6.telus.net)
[22:11:08] *** Joins: NyB (~archon@2a02:169:1d9::1:0:0)
[22:11:33] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[22:12:14] *** Joins: judabuda (kowbunga@thunderirc.net)
[22:14:03] <AmR> I have error: no match for ‘operator==’ (operand types are ‘test’ and ‘const test’) my code https://onlinegdb.com/Qal870OED , How I can fix that ?
[22:14:10] *** Joins: Ekho- (~Ekho@user/ekho)
[22:14:40] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[22:14:56] <kalven> you need to add the operator (or default it if you're on c++20)
[22:14:57] <BurumaSerafuku> AmR: make an operator== for your class
[22:15:15] <BurumaSerafuku> default does memberwise comparison? cool
[22:15:21] *** Quits: jsbach_ (~jsbach@2a01:c23:65fb:5700:1909:e50e:4289:5972) (Ping timeout: 245 seconds)
[22:15:22] <BurumaSerafuku> finally we have that
[22:17:05] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[22:18:08] *** Joins: Sadale (~Sadale@user/sadale)
[22:19:25] *** Quits: AbleBacon_ (~AbleBacon@user/AbleBacon) (Ping timeout: 240 seconds)
[22:19:41] <kalven> https://en.cppreference.com/w/cpp/language/default_comparisons
[22:20:39] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[22:21:05] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Client Quit)
[22:21:19] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[22:22:19] *** Joins: Schrostfutz (~Schrostfu@55d4263e.access.ecotel.net)
[22:23:25] *** Joins: nshire (~nshire@user/nshire)
[22:25:31] *** Joins: Akuli (~Akuli@213.216.208.145)
[22:26:00] *** Parts: Akuli (~Akuli@213.216.208.145) ()
[22:26:03] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[22:30:22] *** Joins: rouji (~rouji@x0.at)
[22:31:49] *** Quits: Fairy (~Fairy@2001:464a:4992:0:74d4:7e78:2b3a:4c42) (Ping timeout: 240 seconds)
[22:35:18] *** Joins: elemongw (~elemongw@20.107.36.50)
[22:36:28] *** Quits: lunix00 (~lunix00@2804:14c:6321:900d:ecd5:589a:62ad:6273) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:37:09] *** Quits: cosimone` (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[22:37:22] *** Joins: cosimone` (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[22:37:34] *** Joins: executivePan (~uglyQuota@187.103.114.125)
[22:39:59] *** Joins: AbleBacon_ (~AbleBacon@user/AbleBacon)
[22:41:25] *** Arsen_ is now known as Arsen
[22:41:59] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Ping timeout: 250 seconds)
[22:42:23] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[22:43:57] *** Quits: executivePan (~uglyQuota@187.103.114.125) (Remote host closed the connection)
[22:47:16] *** Joins: N4buc0- (~N4buc0@2804:7f4:348a:16c8:ba8f:32d3:58a7:9277)
[22:47:36] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[22:47:50] *** Quits: N4buc0 (~N4buc0@200.146.13.23.dynamic.dialup.gvt.net.br) (Ping timeout: 256 seconds)
[22:49:00] *** Joins: Pook (~Pook@2001:8a0:f996:1400:cc7f:13b2:58b4:c20f)
[22:49:19] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[22:54:40] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[22:54:49] *** Quits: N4buc0- (~N4buc0@2804:7f4:348a:16c8:ba8f:32d3:58a7:9277) (Read error: Connection reset by peer)
[22:54:57] *** Joins: N4buc0 (~N4buc0@191.250.99.50)
[22:55:18] *** KAHR-Alpha_ is now known as KAHR-Alpha
[22:56:35] *** Quits: Tokamak (~Tokamak@172.58.188.35) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:59:41] *** Quits: PureSine (~PureSine@user/PureSine) (Quit: Leaving)
[23:00:07] *** Joins: Tokamak (~Tokamak@172.58.188.35)
[23:00:25] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[23:01:29] *** Joins: bluestar (~snowyfore@129.21.117.60)
[23:04:26] *** Quits: bluestar (~snowyfore@129.21.117.60) (Client Quit)
[23:04:41] *** Joins: bluestar (~snowyfore@snowbank1.student.rit.edu)
[23:04:44] *** Joins: rendar (~rendar@user/rendar)
[23:04:56] *** Quits: bluestar (~snowyfore@snowbank1.student.rit.edu) (Client Quit)
[23:05:28] *** Joins: snowyforest (~snowyfore@snowbank1.student.rit.edu)
[23:07:19] *** Quits: rendar_ (~rendar@user/rendar) (Ping timeout: 250 seconds)
[23:07:58] *** Quits: Telvana (~capo@user/telvana) (Quit: ZNC 1.9.x-git-165-6f28db4a - https://znc.in)
[23:08:31] *** Quits: Tokamak (~Tokamak@172.58.188.35) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:08:48] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[23:08:52] *** Joins: Telvana (~capo@user/telvana)
[23:11:47] *** Joins: Tokamak (~Tokamak@172.58.188.35)
[23:13:01] *** Quits: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070) (Ping timeout: 240 seconds)
[23:16:21] *** Quits: Stryyker (~stryyke1@ppp118-209-75-131.hba-tec-tas-bras32.tpg.internode.on.net) (Changing host)
[23:16:21] *** Joins: Stryyker (~stryyke1@about/windows/staff/stryyker)
[23:16:43] *** Quits: kit_ten (~u0_a391@64.85.173.130) (Read error: Connection reset by peer)
[23:16:49] *** Joins: kit-ten (~u0_a391@64.85.173.130)
[23:21:22] *** Joins: kit_ten (~u0_a391@2600:380:a47c:9f07:241:3339:c633:aeab)
[23:24:02] *** Quits: kit-ten (~u0_a391@64.85.173.130) (Ping timeout: 250 seconds)
[23:25:51] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[23:26:50] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[23:30:37] *** Joins: cart_man (~rynot@host-78-144-125-214.as13285.net)
[23:32:16] *** AbleBacon_ is now known as AbleBacon
[23:32:22] *** Joins: jsbach (~jsbach@dynamic-078-055-255-101.78.55.pool.telefonica.de)
[23:39:37] *** Quits: MajorBiscuit (~MajorBisc@c-001-022-052.client.tudelft.eduvpn.nl) (Ping timeout: 240 seconds)
[23:44:31] *** Quits: Tokamak (~Tokamak@172.58.188.35) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:45:08] *** Joins: millido (~millido@84.210.150.128)
[23:49:27] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 256 seconds)
[23:50:22] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[23:54:37] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[23:55:09] *** Joins: anandn (~anandn@2601:600:a27f:d92d:6c3b:dc86:41f9:d3cb)
