[01:01:03] *** Joins: makomo (~makomo@user/makomo)
[01:03:09] *** Quits: rogersm (~rogersm@90.166.180.250) (Remote host closed the connection)
[01:05:18] *** Joins: rogersm (~rogersm@90.166.180.250)
[01:05:24] *** Quits: bolodgad (~bolodgad@user/bolodgad) (Quit: Leaving)
[01:07:09] *** Quits: CrashTestDummy (~CrashTest@ool-ad020ec7.dyn.optonline.net) (Quit: Leaving)
[01:09:31] *** Quits: rogersm (~rogersm@90.166.180.250) (Ping timeout: 245 seconds)
[01:10:53] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[01:22:30] *** Quits: pve (~pve@37-136-6-89.rev.dnainternet.fi) (Quit: leaving)
[01:28:13] *** Quits: cage (~cage@dynamic-adsl-94-34-137-6.clienti.tiscali.it) (Quit: rcirc on GNU Emacs 27.1)
[01:32:36] *** Quits: hashfunc569 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96) (Remote host closed the connection)
[01:32:45] *** Quits: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca) (Quit: Connection closed)
[01:35:40] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[01:43:29] *** Quits: dlowe (~dlowe@user/dlowe) (Read error: Connection reset by peer)
[01:43:47] *** Joins: dlowe (~dlowe@user/dlowe)
[01:45:05] *** Quits: wacki (~wacki@87.122.80.7) (Quit: Leaving.)
[01:45:52] *** Quits: dlowe (~dlowe@user/dlowe) (Read error: Connection reset by peer)
[02:01:31] *** Quits: Dynom (~niels@80-114-12-206.cable.dynamic.v4.ziggo.nl) (Quit: WeeChat 3.4)
[02:02:35] *** Parts: buoy49 (sid386684@id-386684.uxbridge.irccloud.com) ()
[02:02:51] *** Joins: lottaquestions (~nick@2607:fa49:5041:a200:746b:7a76:5f:680b)
[02:07:42] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[02:08:11] *** Joins: lisp123 (~lisp123@143.238.164.103)
[02:12:32] *** ec_ is now known as ec
[02:12:35] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 240 seconds)
[02:12:45] *** Quits: lisp123 (~lisp123@143.238.164.103) (Ping timeout: 256 seconds)
[02:22:13] *** Joins: orestarod (~orestarod@2a02:2149:8a3f:4a00:ac3e:fdb9:cec1:9bb9)
[02:28:04] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[02:28:37] *** Quits: trumae (~trumae@2804:431:c7c1:c8d4:3473:e0f9:d8:6df3) (Ping timeout: 240 seconds)
[02:29:02] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 240 seconds)
[02:29:25] *** Joins: trumae (~trumae@2804:18:8ba:e036:1:0:9c70:3a6e)
[02:35:07] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[02:37:51] *** Quits: morganw (~user@80.225.24.132) (Remote host closed the connection)
[02:40:58] *** Quits: EsoAlgo (~EsoAlgo@152.70.142.52) (Remote host closed the connection)
[02:42:43] *** Joins: EsoAlgo (~EsoAlgo@152.70.142.52)
[02:43:20] *** Joins: dre (~dre@2001:8003:c932:c301:70ee:1824:1d7e:5401)
[02:48:17] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[02:52:59] *** Quits: nature (~nature@mail.blazebone.com) (Ping timeout: 250 seconds)
[03:07:01] *** Quits: shka (~herr@109.231.3.55) (Ping timeout: 240 seconds)
[03:07:28] *** Joins: rogersm (~rogersm@90.166.180.250)
[03:08:41] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 245 seconds)
[03:08:49] *** Quits: rogersm (~rogersm@90.166.180.250) (Read error: Connection reset by peer)
[03:09:07] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[03:09:23] *** Joins: rogersm (~rogersm@90.166.180.250)
[03:13:57] *** Quits: rogersm (~rogersm@90.166.180.250) (Ping timeout: 252 seconds)
[03:23:41] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 245 seconds)
[03:24:28] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[03:27:55] *** Joins: kpoeck (~kpoeck@bl18-241-225.dsl.telepac.pt)
[03:30:51] *** Joins: rogersm (~rogersm@90.166.180.250)
[03:31:09] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Quit: WeeChat 3.4)
[03:32:37] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[03:35:24] *** Quits: rogersm (~rogersm@90.166.180.250) (Ping timeout: 252 seconds)
[03:36:32] *** Joins: rogersm (~rogersm@90.166.180.250)
[03:40:15] *** Joins: morganw (~user@80.225.24.132)
[03:40:53] *** Quits: rogersm (~rogersm@90.166.180.250) (Ping timeout: 252 seconds)
[03:41:59] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 252 seconds)
[03:51:55] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Ping timeout: 256 seconds)
[03:56:19] *** Joins: lisp123 (~lisp123@143.238.164.103)
[04:01:10] *** Quits: lisp123 (~lisp123@143.238.164.103) (Ping timeout: 260 seconds)
[04:01:15] *** Quits: orestarod (~orestarod@2a02:2149:8a3f:4a00:ac3e:fdb9:cec1:9bb9) (Ping timeout: 252 seconds)
[04:02:38] *** Quits: kpoeck (~kpoeck@bl18-241-225.dsl.telepac.pt) (Quit: Ping timeout (120 seconds))
[04:07:07] *** Quits: Bike (~Glossina@71.69.170.70) (Quit: Lost terminal)
[04:11:59] *** Joins: lisp123 (~lisp123@143.238.164.103)
[04:15:49] *** Quits: dre (~dre@2001:8003:c932:c301:70ee:1824:1d7e:5401) (Ping timeout: 240 seconds)
[04:21:52] *** Quits: lisp123 (~lisp123@143.238.164.103) (Remote host closed the connection)
[04:35:40] *** Joins: karlosz (~karlosz@bl18-25-12.dsl.telepac.pt)
[04:39:08] *** Joins: hashfunc569 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96)
[04:41:29] <hashfunc569> in my class i have the slot:
[04:41:30] <hashfunc569> (NAME :TYPE STRING :INITFORM "" :READER NAME :WRITER (SETF NAME))
[04:41:31] <hashfunc569> somewhere down the line i set it:
[04:41:32] <hashfunc569> (SETF (NAME OBJ) (EVAL (FORM OBJ)))
[04:41:33] <hashfunc569> i came across a problem.
[04:41:34] <hashfunc569> that is, in the context of my shown-above code: a problem such as:
[04:41:38] <hashfunc569> (SETF (NAME OBJ) (EVAL '(IN-PACKAGE #:MYPACKAGE)))
[04:41:41] <hashfunc569> this returns an object of type PACKAGE.
[04:41:45] <hashfunc569> i explicitly specified that my slot should be of type STRING
[04:41:48] <hashfunc569> is specifying a type-specifier with :TYPE absolutely useless?
[04:41:52] <hashfunc569> i didn't even get a warning when setting the slot to an object of type PACKAGE?
[04:41:55] <hashfunc569> am i doing something wrong?
[04:44:32] <Catie> It depends on your implementation and optimization settings
[04:45:08] <Catie> SBCL largely ignores :TYPE specifiers in slots, but I think with low speed and high safety settings it might raise an error
[04:45:14] *** Joins: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca)
[04:47:38] <yitzi> Just use `:accessor` instead of read and write.
[04:49:14] <hashfunc569> Catie: it looks like it's only useful for checking the types in :INITFORM
[04:49:37] <hashfunc569> other than that it seems like it's ignored for the remainder of the program
[04:49:43] <hashfunc569> yitzi: why?
[04:49:44] <Catie> You could roll your own accessors that do type checking if you'd like
[04:51:02] <hashfunc569> Catie: yeah, i thought about doing some manual type-checking, and i suppose i'll have to now. or i'll just move the initial definitions of the slot into :INITFORM and out of INITIALIZE-INSTANCE
[04:52:31] *** Joins: lisp123 (~lisp123@143.238.164.103)
[04:52:40] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[04:53:45] <yitzi> hashfunc569: cause this is simpler `(name :accessor name :initform "" :type string)`
[04:54:14] <hashfunc569> yitzi: ok, i'll take that into account. thanks
[04:54:28] <hashfunc569> Catie: thanks for the help
[04:54:37] <Catie> hashfunc569: Absolutely, any time!
[04:55:01] *** Quits: morganw (~user@80.225.24.132) (Remote host closed the connection)
[04:56:14] *** Quits: random-nick (~random-ni@87.116.176.196) (Ping timeout: 260 seconds)
[04:57:39] *** Quits: lisp123 (~lisp123@143.238.164.103) (Ping timeout: 256 seconds)
[04:58:33] *** Joins: zacque (~zacque@1.32.90.32)
[04:59:00] <yitzi> hashfunc569: most lispers follow some kind of style guide regarding the order of slot options. Its not completely consistent in all code. There is some variation, but I personally use reader/writer/accessor, initarg, initform, type, documentation order.
[04:59:32] <Catie> Huh. I've always just done a free-for-all with my slot options. I'll look into that as well
[05:01:04] <yitzi> Catie: https://lisp-lang.org/style-guide/#clos
[05:01:49] <yitzi> There some disagreements. That guide isn't the only one.
[05:03:24] *** Joins: igemnace (~ian@user/igemnace)
[05:09:42] *** Joins: random-nick (~random-ni@87.116.167.125)
[05:14:57] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 252 seconds)
[05:16:18] *** Joins: asarch (~asarch@2806:10ae:7:2198:c359:d1ec:eb4b:c2b9)
[05:26:21] *** Joins: unixlisp (~unixlisp@111.37.112.185)
[05:28:54] *** Joins: X-Scale` (~ARM@219.206.137.78.rev.vodafone.pt)
[05:29:57] *** Quits: X-Scale (~ARM@46.50.5.55) (Ping timeout: 256 seconds)
[05:29:57] *** X-Scale` is now known as X-Scale
[05:32:14] <unixlisp> Anyone uses beirc? It seemes not to work. Where is scymtym's beirc?
[05:33:39] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 252 seconds)
[05:34:17] <Guest74> last time I tried using cl-irc, which beirc uses, it had problems with how libera formats some responses.
[05:34:52] <hashfunc569> is there a general rule of thumb for when to use CONCATENATE 'STRING vs. FORMAT?
[05:35:34] *** Joins: aeth (~aeth@user/aeth)
[05:37:51] *** Joins: rogersm (~rogersm@90.166.180.250)
[05:38:21] <Catie> FORMAT is usually more concise, I tend to prefer it
[05:40:13] *** Quits: cosimone (~user@93-44-187-176.ip98.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[05:41:19] <asarch> Using a sexp-template with my web app, if I want to "separate the logic" using CL-WHO with: (defroute "/elmyra" () (load #P"templates/form.lisp")) I get: The value T is not of type SEQUENCE
[05:42:02] *** Quits: rogersm (~rogersm@90.166.180.250) (Ping timeout: 240 seconds)
[05:42:29] <Catie> I believe you want the defined route to evaluate to an HTML string, whereas evaluating a LOAD form will result in T or an error
[05:43:27] <asarch> https://pastebin.com/vfs80zWr
[05:44:47] <Catie> Is it that you want the route to evaluate the code in form.lisp and return the result?
[05:45:17] *** Joins: X-Scale` (~ARM@89.214.146.25)
[05:45:29] <asarch> https://pastebin.com/UUCVuiVk
[05:45:31] <asarch> Yeah
[05:45:34] *** Quits: X-Scale (~ARM@219.206.137.78.rev.vodafone.pt) (Ping timeout: 272 seconds)
[05:45:50] *** X-Scale` is now known as X-Scale
[05:45:55] *** Joins: akoana (~ah@user/akoana)
[05:47:10] <Catie> Try something like this: http://ix.io/3T7G
[05:47:59] <Catie> Whoops, missed a paren there at the very end, hope you can forgive me
[05:52:03] *** Quits: karlosz (~karlosz@bl18-25-12.dsl.telepac.pt) (Ping timeout: 256 seconds)
[05:57:07] <asarch> (form) would belong to the global package, right?
[05:57:25] <asarch> I can use it in the REPL but not from the controller function
[05:58:17] <asarch> "The function MYAPP.WEB::FORM is undefined"
[06:00:03] <Catie> What package are you in in the REPL?
[06:00:44] <asarch> I don't know. How could I check it?
[06:00:59] <Catie> Evaluate *PACKAGE*
[06:01:17] <asarch> #<PACKAGE "COMMON-LISP-USER">
[06:02:03] <Catie> So when you defined the function FORM, presumably you were in the package COMMON-LISP-USER, which is why you can access it from within that package. You'll need to define the function in whatever package you're using for your web app for it to be accessible there
[06:02:54] <asarch> Bingo!: (common-lisp-user::form)
[06:03:08] <Catie> That's an option as well, though I can't say I'd recommend it
[06:04:46] <asarch> Oh :-(
[06:06:15] <Catie> As a general rule it's probably better to define all of your functions and variables in your own packages. Using the CL-USER package isn't strictly _wrong_ or anything, but you might get some weird looks for it
[06:07:18] <asarch> If I evaluate *PACKAGE* from both source code files, I get: #<PACKAGE "COMMON-LISP-USER">
[06:07:42] *** Joins: lurker (~lurker@143.244.47.73)
[06:07:48] <Catie> Neither of your files has an (IN-PACKAGE ...) form at the top?
[06:08:00] <asarch> No, they don't
[06:08:14] <asarch> Funny, isn't it?
[06:08:23] <Catie> Then where was "The function MYAPP.WEB::FORM is undefined" happening?
[06:09:28] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[06:09:34] <asarch> In the controller code (defroute "/elmyra" () (load #P"templates/form.lisp") (form))
[06:09:57] <asarch> Which is in the src/web.lisp source code file
[06:10:10] <Catie> And that file has an (IN-PACKAGE ...) form?
[06:10:58] <asarch> No, it doesn't
[06:11:39] <Catie> Then I guess I'm not sure why it's in a different package. It sounds like you've got a solution you like though
[06:12:44] <asarch> I did (in-package :common-lisp-user) in the template/form.lisp file but it still doesn't work, just FYI
[06:13:52] <Catie> Does it work if you use your package instead of :common-lisp-user?
[06:13:52] <asarch> At least the sexp-templates does its work, its content is dynamically (I don't have to stop/restart the server for every change)
[06:14:06] <asarch> Let me see
[06:15:03] <asarch> No, it doesn't work
[06:15:48] <asarch> Funny, isn't it?
[06:18:57] <asarch> But, since this source file seems not to be part of the main package, I think all the "services" like database access and so on won't be available :-(
[06:19:12] <Catie> So okay, are you using multiple packages?
[06:19:32] <asarch> No, only the main package create by the helper
[06:19:51] <asarch> https://github.com/fukamachi/caveman
[06:19:58] *** Joins: igemnace (~ian@user/igemnace)
[06:23:10] <Catie> Setting up a project with the "Quickstart" instructions on that website, it looks like each file under "src/" has its own package defined specifically for that file, is that not the case for you?
[06:25:34] <asarch> D'oh!
[06:26:08] <asarch> You're right! I didn't catch that "issue"
[06:26:21] <asarch> (in-package :myproject.web) did the trick
[06:26:48] <Catie> Hey, perfect! And no worries, when you're staring at source it all sort of starts to become background noise
[06:29:38] <asarch> Thank you!
[06:29:42] <asarch> Thank you very much! :-)
[06:33:18] <Catie> Absolutely, any time!
[06:43:37] *** Joins: dre (~dre@2001:8003:c932:c301:c38d:68f8:7c3:7e20)
[07:02:10] *** Parts: unixlisp (~unixlisp@111.37.112.185) ()
[07:03:34] *** Joins: parjanya (~esb@2804:14c:1ad:9351:da4f:f2c4:abd6:1e10)
[07:07:14] *** Quits: asarch (~asarch@2806:10ae:7:2198:c359:d1ec:eb4b:c2b9) (Quit: Leaving)
[07:11:10] *** Quits: lurker (~lurker@143.244.47.73) (Quit: Leaving)
[07:17:48] *** Joins: Inline__ (~Inline@p200300cd470e6400705287adc1f2aa0f.dip0.t-ipconnect.de)
[07:19:56] *** Quits: Inline (~Inline@p200300cd4709f600befffe6df48235ec.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[07:40:51] *** Joins: russe``` (~user@cl-user.org)
[07:40:54] *** Joins: susam_ (~susam@user/susam)
[07:41:04] *** Joins: light_ (~light@user/light)
[07:41:05] *** Joins: smlckz (smlckz@envs.net)
[07:41:06] *** Quits: smlckz (smlckz@envs.net) (Changing host)
[07:41:06] *** Joins: smlckz (smlckz@user/smlckz)
[07:41:12] *** Joins: gko`` (~user@2400:8902::f03c:91ff:fe70:e605)
[07:41:16] *** Joins: thonkpod_ (~thonkpod@user/thonkpod)
[07:41:19] *** Joins: lawt2 (~lawt@2601:200:8101:f140:dea6:32ff:fea1:adf9)
[07:41:29] *** Quits: light (~light@user/light) (*.net *.split)
[07:41:29] *** Quits: russe`` (~user@cl-user.org) (*.net *.split)
[07:41:29] *** Quits: splatt990 (4b25e29db1@198.108.77.17) (*.net *.split)
[07:41:29] *** Quits: |smlckz| (smlckz@user/smlckz) (*.net *.split)
[07:41:29] *** Quits: susam (~susam@user/susam) (*.net *.split)
[07:41:29] *** Quits: gko` (~user@user/gko) (*.net *.split)
[07:41:29] *** Quits: lawt (~lawt@2601:200:8101:f140:dea6:32ff:fea1:adf9) (*.net *.split)
[07:41:29] *** Quits: thonkpod (~thonkpod@user/thonkpod) (*.net *.split)
[07:54:01] *** Joins: unixlisp (~unixlisp@111.37.112.185)
[07:57:37] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[07:58:59] *** Quits: unixlisp (~unixlisp@111.37.112.185) (Ping timeout: 256 seconds)
[08:17:47] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[08:18:44] *** Joins: terrorjack (~terrorjac@static.3.200.12.49.clients.your-server.de)
[08:32:09] *** light_ is now known as light
[08:33:20] *** Joins: semz_ (~semz@user/semz)
[08:36:09] *** Quits: semz (~semz@user/semz) (Ping timeout: 256 seconds)
[08:41:07] *** Quits: trumae (~trumae@2804:18:8ba:e036:1:0:9c70:3a6e) (Remote host closed the connection)
[08:50:37] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 240 seconds)
[08:51:18] *** Joins: beach (~user@88.214.180.127)
[09:10:15] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[09:12:16] <beach> Good morning everyone!
[09:17:41] *** Quits: dre (~dre@2001:8003:c932:c301:c38d:68f8:7c3:7e20) (Quit: Leaving)
[09:25:00] *** Quits: hashfunc569 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96) (Ping timeout: 240 seconds)
[09:25:38] *** Quits: xaltsc (~xaltsc@user/xaltsc) (Remote host closed the connection)
[09:31:59] *** Joins: semz (~semz@user/semz)
[09:33:13] *** Joins: dre (~dre@2001:8003:c932:c301:c38d:68f8:7c3:7e20)
[09:33:26] *** Quits: semz_ (~semz@user/semz) (Ping timeout: 252 seconds)
[09:33:42] *** Quits: dre (~dre@2001:8003:c932:c301:c38d:68f8:7c3:7e20) (Remote host closed the connection)
[09:38:59] *** Joins: rogersm (~rogersm@90.166.180.250)
[09:43:57] *** Quits: rogersm (~rogersm@90.166.180.250) (Ping timeout: 268 seconds)
[09:54:57] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Quit: WeeChat 3.4.1)
[09:58:21] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[10:11:36] *** Quits: zacque (~zacque@1.32.90.32) (Remote host closed the connection)
[10:17:09] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Quit: WeeChat 3.4.1)
[10:17:40] *** Joins: lisp123 (~lisp123@143.238.164.103)
[10:20:22] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[10:22:23] *** Quits: lisp123 (~lisp123@143.238.164.103) (Ping timeout: 252 seconds)
[10:36:15] <Josh_2> Good morning
[10:51:34] *** Quits: gko`` (~user@2400:8902::f03c:91ff:fe70:e605) (Quit: ERC (IRC client for Emacs 27.2))
[10:52:17] *** Joins: gko (~user@user/gko)
[10:56:58] *** Quits: rotateq (~user@p200300e787143500a6f16de1b1c2e823.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[11:16:42] *** Quits: gin (~gin@user/gin) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[11:16:53] *** Joins: gin (~gin@user/gin)
[11:32:30] *** Joins: zacque (~zacque@1.32.90.32)
[11:33:38] <Josh_2> How do I jump in source to the definition of a function?
[11:34:19] <beach> `v' as I recall.  My fingers know it, but not my brain.
[11:34:37] <beach> ... from the backtrace I mean.
[11:34:51] <beach> Otherwise M-.
[11:36:34] <Josh_2> Thanks :)
[11:36:40] <beach> Pleasure.
[11:47:44] *** Joins: wacki (~wacki@87.122.80.7)
[11:59:02] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 240 seconds)
[11:59:32] *** Quits: beach (~user@88.214.180.127) (Ping timeout: 240 seconds)
[12:09:27] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 256 seconds)
[12:11:52] *** Joins: rogersm (~rogersm@90.166.180.250)
[12:11:58] *** Joins: xaltsc (~xaltsc@user/xaltsc)
[12:14:21] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[12:18:17] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 240 seconds)
[12:18:53] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[12:19:28] *** Joins: shka (~herr@109.231.3.55)
[12:20:35] *** Quits: zacque (~zacque@1.32.90.32) (Quit: Goodbye :D)
[12:20:50] *** Joins: nature (~nature@mail.blazebone.com)
[12:23:30] *** Joins: Cymew (~ante@c-0c87225c.023-1144-7570702.bbcust.telenor.se)
[12:26:09] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[12:32:20] *** Quits: les (znc@user/les) (Quit: Adios)
[12:33:04] *** Quits: OlCe (~user@lfbn-nic-1-262-219.w90-116.abo.wanadoo.fr) (Remote host closed the connection)
[12:34:14] *** Joins: les (znc@user/les)
[12:37:21] *** Joins: unixlisp (~unixlisp@111.37.112.185)
[12:41:36] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 245 seconds)
[12:41:44] <unixlisp> How to use cl-irc to send message?
[12:43:26] <unixlisp> Oh! I have sent a message using privmsg function of cl-irc.
[12:50:54] *** Quits: unixlisp (~unixlisp@111.37.112.185) (Ping timeout: 252 seconds)
[12:59:04] *** Joins: Dynom (~niels@80-114-12-206.cable.dynamic.v4.ziggo.nl)
[12:59:09] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[13:00:51] *** Joins: s-liao (~s-liao@101.86.164.158)
[13:12:13] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 250 seconds)
[13:12:51] *** Joins: amb007 (~a_bakic@59.132.22.93.rev.sfr.net)
[13:21:43] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[13:24:12] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[13:24:29] *** Joins: lisp123 (~lisp123@143.238.164.103)
[13:26:00] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Client Quit)
[13:26:09] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[13:26:25] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[13:28:58] *** Quits: s-liao (~s-liao@101.86.164.158) (Quit: Client closed)
[13:30:09] *** Quits: akater[m] (~akatermat@2001:470:69fc:105::ccef) (Quit: You have been kicked for being idle)
[13:31:57] *** Joins: attila_lendvai (~alendvai@2a02:ab88:7509:f780:ed82:a496:f55:e07b)
[13:32:03] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[13:42:46] *** Quits: lisp123 (~lisp123@143.238.164.103) (Remote host closed the connection)
[13:45:15] *** Joins: mgl (~mgl@2a00:79e0:4a:203:b0ad:72bc:14d2:c731)
[13:48:18] *** Joins: OlCe (~user@lfbn-nic-1-262-219.w90-116.abo.wanadoo.fr)
[13:49:23] *** Joins: lisp123 (~lisp123@143.238.164.103)
[13:52:34] *** Quits: lisp123 (~lisp123@143.238.164.103) (Remote host closed the connection)
[13:52:46] *** Joins: lisp123 (~lisp123@143.238.164.103)
[13:53:19] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Quit: Leaving)
[13:55:40] *** Joins: rotateq (~user@ip-078-094-235-194.um19.pools.vodafone-ip.de)
[14:02:48] *** Quits: lisp123 (~lisp123@143.238.164.103) (Remote host closed the connection)
[14:13:09] *** Joins: lisp123 (~lisp123@143.238.164.103)
[14:26:23] *** Quits: SAL9000 (~SAL9000@shirakumo/sal9000) (Ping timeout: 268 seconds)
[14:26:28] *** Joins: kevingal (~quassel@92.51.199.18)
[14:31:33] *** Joins: SAL9000 (~SAL9000@shirakumo/sal9000)
[14:45:43] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[14:47:58] *** Joins: notzmv (~zmv@user/notzmv)
[15:08:21] *** Joins: worstname (~w]@2601:8c1:80:70d0::f2ca)
[15:10:47] *** Joins: s-liao (~s-liao@101.86.164.158)
[15:22:50] *** Quits: s-liao (~s-liao@101.86.164.158) (Quit: Client closed)
[15:37:30] *** Joins: random-nick (~random-ni@87.116.176.196)
[15:40:03] *** Parts: worstname (~w]@2601:8c1:80:70d0::f2ca) (q)
[15:43:09] *** Joins: s-liao (~s-liao@101.86.164.158)
[15:47:37] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 256 seconds)
[15:50:00] *** Joins: razetime (~quassel@117.254.35.226)
[16:02:26] *** Quits: razetime (~quassel@117.254.35.226) (Remote host closed the connection)
[16:04:03] *** Quits: kevingal (~quassel@92.51.199.18) (Ping timeout: 256 seconds)
[16:07:12] *** Joins: razetime (~quassel@117.254.35.226)
[16:11:29] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Quit: WeeChat 3.4.1)
[16:13:39] *** Joins: kevingal (~quassel@92.51.199.18)
[16:13:58] *** Joins: kevingal_ (~quassel@92.51.199.18)
[16:26:38] *** Joins: yewscion (~yewscion@52.94.133.128)
[16:27:41] *** Quits: lisp123 (~lisp123@143.238.164.103) (Remote host closed the connection)
[16:28:46] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[16:33:43] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 250 seconds)
[16:35:36] *** Joins: aeth (~aeth@user/aeth)
[16:36:30] *** Quits: s-liao (~s-liao@101.86.164.158) (Quit: Client closed)
[16:45:18] *** Joins: bru (~bru@static-176-185-142-75.axione.abo.bbox.fr)
[16:46:51] <bru> hello, noob question. I want to define a macro that defstruct + defun a function that works on the just-defined struct. If I (defmacro (...) (defstruct ...) (defun ...)) then I only get the defun
[16:47:32] <bru> I've tried putting them in (values (defstruct ...) (defun ...)) (I only get the 1st one), (list ..) (illegal function call), (progn ...) (I only get the last one)
[16:48:00] <jackdaniel> macros transform code into code, so you don't want to evaluate the body - you want to return a list
[16:48:27] <jackdaniel> try (defmacro foo (…) `(progn (defstruct …) (defun …) 'done))
[16:48:55] <jackdaniel> note the backtick - it is a quasiquote that prevents the evaluation of its arguments
[16:49:31] <jackdaniel> that said, if my advice is on point and you didn't know that, then you should probably read a little more about macros
[16:49:35] <jackdaniel> micro: tell bru about pcl
[16:49:45] <jackdaniel> minion: tell bru about pcl
[16:49:46] <minion> bru: look at pcl: pcl-book: "Practical Common Lisp", an introduction to Common Lisp by Peter Seibel, available at http://www.gigamonkeys.com/book/ and in dead-tree form from Apress (as of 11 April 2005).
[16:49:52] <jackdaniel> micro: sorry, tab completion
[16:50:30] <bru> Ok works, thanks. I did have the backticks (forgot to paste them here), but right in front of `(defun and `(defstruct instead of in front of the `(progn!
[16:50:35] <edgar-rft> micro-tab-completion :-)
[16:51:24] <bru> and I guess that makes sense: the macroexpander would only return either. While with the backtick in front it will return both, which end up at top-level and everything gets evaluated
[16:52:32] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[16:54:19] <bru> step2: If I do (defmacro (name &rest args) `(progn (defstruct name ...) (defun ... ;; here, how can I can the "make-$name$" function? I'm doing ,(intern (concatenate 'string "make-" (symbol-name name))) but there's casing issues: I get (e.g.) |make-FOO| instead of |make-foo|
[16:57:24] <jackdaniel> symbols in common lisp by default are upcased
[16:57:33] <jackdaniel> so  the name of the symbol 'foo is in reality "FOO"
[16:57:50] <jackdaniel> you may i.e (concatenate 'string "MAKE-" (symbol-name name))
[16:59:57] <bru> Thank you again! So my issue wasn't with the symbol itself, but with my string literals being lowercase
[17:00:28] <jackdaniel> sure, that said I'm skeptical whether you should use macros
[17:00:57] <jackdaniel> usually you should start writing macros when you feel comfortable with the language
[17:01:08] <jackdaniel> (and not a part as a beginner excercise)
[17:01:20] <bru> but where's the fun in that?
[17:01:40] <jackdaniel> I personally find fun in understanding things (i.e not getting confused for no good reason)
[17:04:41] *** Joins: lisp123 (~lisp123@143.238.164.103)
[17:05:04] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[17:07:50] <rotateq> and even more fun when you feel some more confident with the basics :)
[17:09:47] *** Quits: lisp123 (~lisp123@143.238.164.103) (Ping timeout: 256 seconds)
[17:11:00] *** Quits: kevingal_ (~quassel@92.51.199.18) (Ping timeout: 240 seconds)
[17:11:01] *** Quits: kevingal (~quassel@92.51.199.18) (Ping timeout: 240 seconds)
[17:25:07] *** Joins: livoreno (~livoreno@user/notzmv)
[17:26:27] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 252 seconds)
[17:28:34] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[17:38:59] *** Joins: lispy (~lispy@user/lispy)
[17:42:28] *** Quits: OlCe (~user@lfbn-nic-1-262-219.w90-116.abo.wanadoo.fr) (Remote host closed the connection)
[17:43:54] <pjb> bru: a macro should return a single form, but its body can obviously contain several forms (since it has an implied progn). When you have several forms to generate, you can wrap then in any expression to make a single form. Eg. using list would be ok: (defmacro moo (…) `(list … …)) But in your case, you generate top-level forms, def… so you want the form generated to preserve the top-levelness
[17:43:54] <pjb> of the forms it contains, and only progn does that. Hence the solution in: (defmacro moo (…) `(progn … …))
[17:45:26] <pjb> bru: about the value returned by the generated form (by your macro calls), as you can see, defstruct returns the name of the struct, defun returns the name of the function.   Perhaps you have a name parameter to your "defmoo" macro? (since it generates def… forms, it could be named defsomething or define-something). Then eyou can return this name.  Or you could return the name of the defun, or a list of names. Whatever you
[17:45:27] <pjb> deem useful for the user.
[17:47:31] <pjb> bru: also, for defstruct,  you can specify boa constructors, so perhaps you don't need a separate make-… function!
[17:50:08] *** Quits: robin (~robin@user/terpri) (Remote host closed the connection)
[17:50:15] *** Joins: robin_ (~robin@user/terpri)
[17:50:27] *** Quits: razetime (~quassel@117.254.35.226) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[17:50:41] <pjb> bru: (defstruct (point (:constructor make-point (x y))) x y)  (make-point 1 2) #| --> #S(point :x 1 :y 2) |# you can also compute the fields:
[17:50:41] <pjb> (defstruct (square (:constructor make-square (diagonal &aux (width (/ diagonal (sqrt 2))) (height (/ diagonal (sqrt 2)))))) width height) (make-square 14) #| --> #S(square :width 9.899495 :height 9.899495) |#
[17:53:44] *** Joins: s-liao (~s-liao@101.86.164.158)
[18:00:34] *** Quits: Jach (~Jach@2601:600:8600:307:7e31:e7a7:f1f3:a96b) (Remote host closed the connection)
[18:00:56] *** Joins: Jach (~Jach@2601:600:8600:307:7e31:e7a7:f1f3:a96b)
[18:06:28] *** Joins: OlCe (~user@lfbn-nic-1-262-219.w90-116.abo.wanadoo.fr)
[18:08:12] *** Quits: yewscion (~yewscion@52.94.133.128) (Ping timeout: 240 seconds)
[18:18:14] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[18:24:37] *** Joins: zacque (~zacque@1.32.90.32)
[18:26:51] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[18:27:55] *** Quits: anticomputer_ (~anticompu@gateway/tor-sasl/anticomputer) (Remote host closed the connection)
[18:28:14] *** Joins: anticomputer (~anticompu@gateway/tor-sasl/anticomputer)
[18:29:15] *** Quits: s-liao (~s-liao@101.86.164.158) (Quit: Client closed)
[18:34:29] *** Joins: kevingal (~quassel@92.51.199.18)
[18:34:42] *** Joins: kevingal_ (~quassel@92.51.199.18)
[18:39:17] *** Joins: Bike (~Glossina@71.69.170.70)
[18:49:49] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Quit: Leaving)
[18:55:54] *** Joins: splatt990 (4b25e29db1@198.108.77.17)
[18:56:43] *** Joins: yewscion (~yewscion@52.94.133.128)
[18:57:41] <Josh_2> There once was slime, and sly, now there is slime-star :O
[19:00:55] *** Quits: robin_ (~robin@user/terpri) (Remote host closed the connection)
[19:01:14] *** Joins: robin_ (~robin@user/terpri)
[19:01:17] *** Joins: aartaka (~aartaka@141.136.78.91)
[19:02:18] *** Quits: aartaka (~aartaka@141.136.78.91) (Read error: Connection reset by peer)
[19:02:39] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[19:06:33] *** Quits: Brucio-61 (~Brucio-21@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Remote host closed the connection)
[19:07:42] *** Quits: scymtym (~user@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Remote host closed the connection)
[19:08:15] *** Quits: anticomputer (~anticompu@gateway/tor-sasl/anticomputer) (Ping timeout: 240 seconds)
[19:08:46] *** Quits: Inline__ (~Inline@p200300cd470e6400705287adc1f2aa0f.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[19:08:52] *** Joins: anticomputer (~anticompu@gateway/tor-sasl/anticomputer)
[19:09:16] *** Joins: Inline (~Inline@p200300cd470e6400705287adc1f2aa0f.dip0.t-ipconnect.de)
[19:11:37] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 256 seconds)
[19:12:10] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[19:12:37] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[19:13:52] *** Quits: zacque (~zacque@1.32.90.32) (Quit: Goodbye :D)
[19:26:37] *** Quits: rotateq (~user@ip-078-094-235-194.um19.pools.vodafone-ip.de) (Remote host closed the connection)
[19:27:57] <tyson2> Josh_2:what are the advantages of slime-star?
[19:28:50] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Read error: Connection reset by peer)
[19:29:04] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[19:38:38] *** Joins: eddof13 (~eddof13@2806:102e:12:64:f838:6484:5e24:bd9f)
[19:46:25] <Josh_2> No idea, I use sly
[19:48:54] *** Joins: razetime (~quassel@117.254.35.226)
[19:48:58] *** Quits: eddof13 (~eddof13@2806:102e:12:64:f838:6484:5e24:bd9f) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:49:50] *** Parts: opalvaults[m] (~opalvault@2001:470:69fc:105::1:51f6) ()
[19:51:51] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 256 seconds)
[19:52:08] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[19:53:23] *** Joins: tane (~tane@dslb-002-201-234-231.002.201.pools.vodafone-ip.de)
[19:53:23] *** Quits: tane (~tane@dslb-002-201-234-231.002.201.pools.vodafone-ip.de) (Changing host)
[19:53:23] *** Joins: tane (~tane@user/tane)
[19:54:59] *** Joins: eddof13 (~eddof13@2806:102e:12:64:f838:6484:5e24:bd9f)
[19:55:26] *** Joins: Brucio-61 (~Brucio-21@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[19:56:00] <tyson2> Josh_2: thanks, I will have a look at slime-star
[19:58:02] <edgar-rft> the great thing is the star :-) readme says: beware, alpha software
[19:58:58] *** Quits: lispy (~lispy@user/lispy) (Quit: Leaving)
[20:01:23] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[20:04:45] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 250 seconds)
[20:09:49] *** Joins: karlosz (~karlosz@193.137.37.182)
[20:10:31] *** Quits: pjb (~pjb@user/pjb) (Read error: Connection reset by peer)
[20:13:36] *** Joins: beach (~user@193.137.37.180)
[20:19:24] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 240 seconds)
[20:19:55] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[20:26:31] *** Quits: beach (~user@193.137.37.180) (Ping timeout: 268 seconds)
[20:32:56] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[20:35:49] *** Quits: Cymew (~ante@c-0c87225c.023-1144-7570702.bbcust.telenor.se) (Quit: Konversation terminated!)
[20:36:44] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 252 seconds)
[20:37:02] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[20:38:27] <lagash> "Here be dragons"
[20:40:53] *** Quits: karlosz (~karlosz@193.137.37.182) (Quit: karlosz)
[20:44:44] *** Joins: karlosz (~karlosz@193.137.37.182)
[20:56:10] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[20:59:44] *** Quits: karlosz (~karlosz@193.137.37.182) (Quit: karlosz)
[21:00:59] *** Quits: mgl (~mgl@2a00:79e0:4a:203:b0ad:72bc:14d2:c731) (Ping timeout: 256 seconds)
[21:01:44] *** Joins: nirved (~nirved@gateway/tor-sasl/nirved)
[21:02:12] *** Joins: morganw (~user@80.225.24.132)
[21:06:52] *** Quits: nirved (~nirved@gateway/tor-sasl/nirved) (Quit: Leaving)
[21:09:17] *** Quits: kevingal_ (~quassel@92.51.199.18) (Remote host closed the connection)
[21:09:17] *** Quits: kevingal (~quassel@92.51.199.18) (Remote host closed the connection)
[21:12:34] *** Joins: karlosz (~karlosz@193.137.37.182)
[21:17:52] *** Quits: karlosz (~karlosz@193.137.37.182) (Quit: karlosz)
[21:17:57] *** Quits: razetime (~quassel@117.254.35.226) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:26:37] *** Joins: jmes (~james@216.154.22.238)
[21:31:36] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 245 seconds)
[21:33:09] *** Quits: eddof13 (~eddof13@2806:102e:12:64:f838:6484:5e24:bd9f) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:55:04] *** Joins: cage (~cage@dynamic-adsl-94-34-137-6.clienti.tiscali.it)
[22:02:44] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[22:10:37] *** Quits: igemnace (~ian@user/igemnace) (Ping timeout: 240 seconds)
[22:17:26] *** Joins: rotateq (~user@p200300cac70bc00e483923382d897643.dip0.t-ipconnect.de)
[22:30:00] *** Quits: ns12 (~ns12@user/ns12) (Quit: bye)
[22:30:54] *** Joins: ns12 (~ns12@user/ns12)
[22:35:35] *** Joins: cosimone (~user@93-44-187-176.ip98.fastwebnet.it)
[22:42:43] *** Joins: tane (~tane@dslb-002-201-234-231.002.201.pools.vodafone-ip.de)
[22:42:43] *** Quits: tane (~tane@dslb-002-201-234-231.002.201.pools.vodafone-ip.de) (Changing host)
[22:42:43] *** Joins: tane (~tane@user/tane)
[22:44:43] *** Joins: treflip (~user@user/treflip)
[22:56:51] *** Joins: lispy (~lispy@user/lispy)
[22:57:57] *** Quits: amb007 (~a_bakic@59.132.22.93.rev.sfr.net) (Ping timeout: 240 seconds)
[22:58:08] *** Joins: amb007 (~a_bakic@48.13.23.93.rev.sfr.net)
[23:03:29] <phoe> there is a post-ELS chat at https://meet.jit.si/els2022 if anyone feels like joining
[23:04:37] *** Quits: amb007 (~a_bakic@48.13.23.93.rev.sfr.net) (Ping timeout: 240 seconds)
[23:05:26] *** Joins: amb007 (~a_bakic@49.36.22.93.rev.sfr.net)
[23:07:22] <rotateq> sorry I'm at a friends house
[23:19:05] *** Quits: treflip (~user@user/treflip) (Quit: Quit)
[23:33:56] <Josh_2> lagash: here be aliens
[23:41:25] *** Quits: amb007 (~a_bakic@49.36.22.93.rev.sfr.net) (Read error: Connection reset by peer)
[23:42:36] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[23:43:20] *** Joins: orestarod (~orestarod@2a02:2149:8a3f:4a00:ac3e:fdb9:cec1:9bb9)
[23:50:12] <Guest74> So I've made a large number of dexador requests and now I have too many open files to do anything.
[23:50:55] <Guest74> I'm trying out slynk, and it seems related.  anybody know how to close all those files?
[23:51:51] <_death> try dex:clear-connection-pool
[23:53:24] <Guest74> thanks.  I could have sworn I had that turned off in the request.
[23:54:39] <_death> well, did it work?
[23:55:48] <Guest74> yes, that's what the thanks was for.
[23:56:15] <_death> cool
[23:57:02] <Guest74> I've never checked slime, but slynk definitely seems to be opening a large amount of files.
