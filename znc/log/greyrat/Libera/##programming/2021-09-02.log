[00:00:13] *** Joins: Samian (~Sami@2600:380:4a39:a7bc:1cb3:6124:1357:3114)
[00:00:18] *** Joins: Shanzem_ (~Shanzem@86.31.109.147)
[00:00:24] *** Quits: keir (~keir@user/keir) (Quit: keir)
[00:00:56] *** Quits: nvmd (~nvmd@user/nvmd) (Ping timeout: 250 seconds)
[00:00:57] *** Quits: Shanzem_ (~Shanzem@86.31.109.147) (Read error: Connection reset by peer)
[00:01:46] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[00:01:48] *** Joins: elf_fortrez (~elf_fortr@adsl-64-237-239-250.prtc.net)
[00:01:54] *** Quits: rcoote (~rcoote@2a02:908:692:81c0:3343:ab29:6ac7:74a0) (Quit: Konversation terminated!)
[00:02:29] <vdamewood> I think the current situation is a pretty good compromise actually. At least in the Latin script there are way to many diacritics and base letters and combinations to encode them all, and only a handful are useful generally, while nearly any combination is useful in some niche somewhere.
[00:02:30] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[00:03:23] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Ping timeout: 244 seconds)
[00:03:35] *** Quits: elf_fortrez (~elf_fortr@adsl-64-237-239-250.prtc.net) (Client Quit)
[00:04:40] *** Quits: Samian (~Sami@2600:380:4a39:a7bc:1cb3:6124:1357:3114) (Ping timeout: 240 seconds)
[00:05:06] <vdamewood> For example, I might want to use certain diacritics for writing out words as hints to a new learner of a language. But no one who uses the actual orthography of any real language would use those combinations.
[00:05:34] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[00:08:01] <webNET4> utf-8 has got to be slower when computing characters count, for rendering you could store metadata about a "line" or whatever delimiter i guess but now we have to create a dta structure for each token to map byetes to characters
[00:08:41] <vdamewood> For example, I might use h́ and h̀ to show that an H is pronounced, or a part of a digraph in English-learning materials.
[00:10:15] <vdamewood> Or I might want to go really weird and write something like ȩ̈
[00:10:25] *** Joins: Izem (~Izem@bras-base-london1483w-grc-30-74-12-157-86.dsl.bell.ca)
[00:11:06] <vdamewood> webNET4: Slower than what?
[00:11:16] <webNET4> fixed character size
[00:11:19] <pyzozord> oh damn, I can't just cache color glyphes. I need to cache white ones, and the use them as mask to print color ones
[00:11:21] <webNET4> instead of wacky grab bag
[00:11:22] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 245 seconds)
[00:12:13] *** Joins: Enitin (~Enitin@82.102.22.84)
[00:14:18] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[00:14:31] *** Joins: webNET4 (~0x100@32.211.211.39)
[00:15:32] *** Quits: mnd999_ (~mark@2001:8b0:da3:76a2:863a:4bff:fe0e:a4e4) (Ping timeout: 245 seconds)
[00:16:51] <pyzozord> but I must be doing something wrong still. I have everything in hardware accelerated textures now, I have font cache. Why else might it be taking 10% cpu?
[00:17:55] <webNET4> 10 percent rendering text? what frequency
[00:18:27] <pyzozord> the main loop is set at 60 fps
[00:18:46] <webNET4> how much data are you sending to GPU each frame
[00:18:50] <GeDaMo> Is that necessary?
[00:18:51] <pyzozord> my cpu is i5-3210M @ 2.5Ghz
[00:19:23] <webNET4> are you modifying textures? they have to sync on cruddy PC's
[00:19:49] <webNET4> and syncing takes CPU and aside from that you must be doing something strange
[00:19:51] <pyzozord> I... Don't really know how to check how much data I'm sending to gpu
[00:20:20] <deniska> pyzozord: consider profiling
[00:20:51] <vdamewood> pyzozord: No Windows 11 for you.
[00:20:55] <Amadiro> qapitrace will show you your opengl/etc calls with both CPU and GPU-side timing estimations
[00:21:20] *** Quits: Helmholtz (~leibnizma@2001:470:69fc:105::3124) (Changing host)
[00:21:20] *** Joins: Helmholtz (~leibnizma@user/helmholtz)
[00:21:58] *** Joins: dan01 (~dan01@109.98.162.193)
[00:23:13] <webNET4> list all the gpu calls in your main loop if its a small program and you don't want to spend timelearning how to use the proper tools for profiling
[00:23:58] *** Joins: dan_the_man (~dan01@109.98.162.193)
[00:24:12] <webNET4> profiling/debugging, iirc you can inspect textures and all that with the tools available
[00:24:50] *** Quits: dan1001 (~dan01@109.100.108.98) (Ping timeout: 256 seconds)
[00:24:51] *** Joins: FastZ (~FastZ@pool-72-83-101-219.washdc.east.verizon.net)
[00:25:25] <pyzozord> Ok it's more 6-7% not 10%, so there is some improvement. Notable is that the cpu usage is the same no matter if I turn on full screen background gif animation or not
[00:26:35] <pyzozord> When idleing it's about 6%, when top is running with 1s updates, it's about 7%
[00:26:52] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[00:27:02] *** Quits: dan01 (~dan01@109.98.162.193) (Ping timeout: 252 seconds)
[00:27:05] *** Joins: webNET4 (~0x100@32.211.211.39)
[00:27:26] <GeDaMo> pyzozord: are you using OpenGL directly?
[00:27:41] <GeDaMo> I mean are you sending shaders?
[00:28:26] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[00:28:38] *** Joins: webNET4 (~0x100@32.211.211.39)
[00:29:10] <pyzozord> No, I'm using SDL_Renderer. I'm not sure what it is, but they say it is the accelerated 2d api. And documentation mentions it has "drivers". I assume that this is actually a wrapper for opengl.
[00:29:53] <webNET4> the only way to find out is to profile the code
[00:29:58] <pyzozord> I think it might be good time to actually use a profiler
[00:30:27] <webNET4> it is probably something in the library
[00:30:42] <webNET4> assuming your program is not doing much else
[00:30:52] *** Joins: keir (~keir@user/keir)
[00:30:57] <pyzozord> Could be that this SDL_Renderer wrapper thing is actually slowing me down
[00:31:10] <webNET4> yeah i f it's copying some buffer
[00:31:50] <pyzozord> I think my program is not doing much else either, that was the plan. But maybe I have some bugs. Need to take another look at gprof. Last week I tried to used it and I failed
[00:32:05] *** Quits: Fleck (~fleck@user/fleck) (Remote host closed the connection)
[00:32:18] *** Joins: orondo (~orondo@user/orondo)
[00:32:45] *** Joins: mnd999_ (~mark@2001:8b0:da3:76a2:863a:4bff:fe0e:a4e4)
[00:32:56] *** Quits: luckyxxl (~luckyxxl@185.213.155.252) (Quit: bye)
[00:33:17] <webNET4> it's static text?
[00:33:32] <webNET4> a constant string of sorts
[00:33:40] *** Quits: inky_ (~inky@46.162.252.15) (Ping timeout: 240 seconds)
[00:33:51] *** Joins: inky_ (~inky@46.36.119.19)
[00:33:52] *** Quits: silasfox (~sbv@xdsl-85-197-57-82.nc.de) (Ping timeout: 244 seconds)
[00:34:19] *** Quits: FastZ (~FastZ@pool-72-83-101-219.washdc.east.verizon.net) (Quit: Bye now!)
[00:34:37] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Quit: Leaving.)
[00:34:51] <pyzozord> webNET4: not sure what do you mean. I tested in two scenarios: 1) idle when text does not change at all and 2) running top which refreshes ever second
[00:35:27] <webNET4> i'm not sure what you mean
[00:36:16] *** Joins: jazzy (~jaziz@172.58.35.41)
[00:36:47] <webNET4> what does top have to do with it
[00:36:53] <webNET4> you're rendering top in the shader?
[00:38:17] *** Joins: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com)
[00:38:27] *** Joins: FastZ (~FastZ@pool-72-83-101-219.washdc.east.verizon.net)
[00:39:53] <pyzozord> webNET4: oh sorry, yes. I am working on a terminal emulator
[00:40:10] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 252 seconds)
[00:40:51] *** Joins: Enitin (~Enitin@82.102.22.86)
[00:41:40] <webNET4> ok, now does the CPU usage go down if you reduce the draw calls , say 6 FPS instead of 60
[00:41:46] <pyzozord> that part can be ignored, the important fact is that when text doesnt change it's about 5%-6%, and when text changes about once a second it's about 6%-7%
[00:42:00] <pyzozord> hmm let me check that
[00:42:07] <vdamewood> pyzozord: How do you create the rendereer?
[00:42:08] <webNET4> not update frequency but SDL draw calls
[00:42:52] <pyzozord> webNET4: yes! when I do 6fps, the cpu usage drops to 2%-3%
[00:42:55] *** Joins: tradar (~tradar@user/tradar)
[00:43:25] *** Quits: tcsilver (~tcsilver@pool-96-255-128-204.washdc.fios.verizon.net) (Ping timeout: 252 seconds)
[00:43:49] *** Quits: Izem (~Izem@bras-base-london1483w-grc-30-74-12-157-86.dsl.bell.ca) (Quit: Going offline, see ya! (www.adiirc.com))
[00:44:16] <pyzozord> vdamewood: SDL_CreateWindowAndRenderer(w, h, SDL_WINDOW_SHOWN | SDL_WINDOW_RESIZABLE, &win.wnd, &win.rnd)
[00:44:24] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[00:44:37] *** Joins: webNET4 (~0x100@32.211.211.39)
[00:45:07] *** Quits: Haxxa (~Haxxa@122.199.45.213) (Quit: Haxxa flies away.)
[00:45:23] <webNET4> does SDL have a partial draw to only draw parts of a texture that changed?
[00:46:22] *** Quits: mnd999_ (~mark@2001:8b0:da3:76a2:863a:4bff:fe0e:a4e4) (Ping timeout: 256 seconds)
[00:47:18] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 244 seconds)
[00:47:33] *** Joins: pavonia (~user@user/siracusa)
[00:47:54] *** Quits: Cashlin (~hp@user/cashlin) (Quit: Konversation terminated!)
[00:47:57] *** Joins: Enitin (~Enitin@82.102.22.84)
[00:48:12] *** Joins: Haxxa (~Haxxa@122.199.45.213)
[00:48:17] <pyzozord> oh hmm this just gave me an idea
[00:48:18] *** Joins: Macuser (~Macuser@216.30.159.201)
[00:48:54] <vdamewood> pyzozord: I'm looking at the documentation—which is pretty terrible—and it's not showing whether SDL_CreateWindowAndRenderer gives you a hardware renderer or a software renderer.
[00:49:05] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[00:49:18] *** Joins: webNET4 (~0x100@32.211.211.39)
[00:50:07] <pyzozord> I have individual texture for each glyph. Whenever there is change in text I copy glyph textures into one big "text" texture. That doesn't happen every frame. But I do copy every frame the "text" texture to screen.
[00:51:30] <pyzozord> vdamewood: yeah the docs for sdl2 are just terrible
[00:51:47] <pyzozord> I had that same thought. I'll try creating window and renderer separately. Maybe indeed it is in software mode
[00:52:09] *** Joins: dan01 (~dan01@109.98.162.24)
[00:52:49] <pikapika> I think robots has little to do with programming
[00:54:00] <pikapika> The most difficult and costly part is the mechanical aspect
[00:55:01] *** Quits: dan_the_man (~dan01@109.98.162.193) (Ping timeout: 252 seconds)
[00:55:32] <pyzozord> vdamewood: no changes when I tried that. But I found that "Note that providing no flags gives priority to available SDL_RENDERER_ACCELERATED renderers." here https://wiki.libsdl.org/SDL_RendererFlags. So I think my previous way was defaulting to hardware accelerated already.
[00:56:10] *** Joins: silasfox (~sbv@2001-4dd6-4b95-0-383d-e94d-aa82-1e8f.ipv6dyn.netcologne.de)
[00:56:43] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[00:56:56] *** Joins: flynn (~mcbloch@user/flynn)
[00:58:41] <pyzozord> Hmm, this is interesting. When I don't do SDL_RenderPresent(); the cpu usage drops to 1%
[00:58:47] *** Quits: inky (~inky_@46.162.252.15) (Ping timeout: 245 seconds)
[00:59:00] <pyzozord> so that would suggest that all the cpu time is take by the library, not me, right?
[00:59:10] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[00:59:12] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:59:47] <[R]> <pyzozord> so that would suggest that all the cpu time is take by the library, not me, right? <-- what does the profiler say?
[01:00:21] <pyzozord> eh, haven't checked that yet. It's a bit annyoing. I can't get gprof to work. I'll try now
[01:01:36] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[01:01:37] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 252 seconds)
[01:02:24] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Read error: Connection reset by peer)
[01:03:28] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[01:03:40] *** Joins: webNET4 (~0x100@32.211.211.39)
[01:04:21] <vdamewood> I think I want coffee.
[01:05:13] <Macuser> too laaate
[01:07:49] <edgar-rft> I think I want no computers
[01:08:09] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[01:08:18] <pyzozord> I just want to make gprof work
[01:08:32] <orondo> Let your desires go.
[01:08:39] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[01:09:15] <edgar-rft> gprof sounds like some professor for finding the G-point
[01:09:46] <Stefan26> no
[01:10:03] <orondo> What's that?
[01:10:10] <pyzozord> I'm getting "gmon.out: No such file or directory", anyone can help?
[01:10:28] <orondo> The profiling produces a file with the profiling information.
[01:10:44] <Stefan26> G-point?
[01:10:58] <webNET4> what happens when you open the file?
[01:10:58] *** Quits: anovick (~anovick@2a0d:6fc0:18cb:e900:98e9:2c6f:1a52:52c0) (Ping timeout: 252 seconds)
[01:11:00] <orondo> You must compile your source with profiling options, after that, you must run it and it will produce that file.
[01:11:15] <pyzozord> I added -pg flag
[01:11:21] <pyzozord> and then ran my program
[01:11:32] <pyzozord> it did not produce any extra files
[01:11:43] <orondo> I did it a long time ago. Are you using gcc, right?
[01:11:46] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Client Quit)
[01:12:01] <edgar-rft> orondo, Stefan26: -> https://en.wikipedia.org/wiki/G-spot 
[01:12:02] <bayaz> Title: G-spot - Wikipedia 
[01:13:10] <pyzozord> make is producing lines similar to this one "c99 -I/usr/X11R6/include  `pkg-config --cflags fontconfig`  `pkg-config --cflags freetype2`  `./sdl2/install/bin/sdl2-config --cflags` - DVERSION=\"0.8.4\" -D_XOPEN_SOURCE=600  -g -pg -c x.c"
[01:14:05] <orondo> Try it with a simpler program, a hello world, with the -g -pg. Perhaps the flags from pkg-config or sdl2-config are interfering.
[01:14:10] <webNET4> c99 is a command?
[01:14:16] <orondo> It shouldn't be that difficult.
[01:14:16] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com) (Ping timeout: 252 seconds)
[01:14:26] <webNET4> `which c99`
[01:14:28] *** Joins: inky (~inky_@46.36.119.19)
[01:14:52] <edgar-rft> a justified question :-)
[01:15:04] <orondo> It may be an alias for gcc using the c99 iso standard.
[01:15:09] <pyzozord> webNET4: /usr/bin/c99-gcc
[01:15:15] <webNET4> wtf is that
[01:15:37] <pyzozord> it's more than a command, c99 is in posix :P
[01:15:41] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[01:15:44] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[01:15:56] <webNET4> what distro is it
[01:16:00] *** Joins: alefir (~alefir@102.129.145.90)
[01:16:05] <pyzozord> ubuntu 20.04
[01:16:07] *** Joins: independent_ (~independe@95.144.68.39)
[01:16:14] <orondo> pyzozord: If I were you, I would try the profiling with an simpler program and if it works, I would google into profiling with sdl.
[01:16:31] <pyzozord> I had gprof working on a different program before
[01:16:36] <webNET4> does it actually call gcc, or some other thing
[01:16:56] <pyzozord> yes it calls gcc
[01:17:34] <orondo> I'm pretty sure that profiling introduces new symbols in the executable. Perhaps you could list the symbols used in the executable generated with sdl if it has those function calls...
[01:18:05] <orondo> Try this before: Put all your arguments for profiling first in your c99 command.
[01:18:49] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 244 seconds)
[01:19:37] *** Joins: Enitin (~Enitin@82.102.22.86)
[01:19:55] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[01:21:00] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:1084:3dd6:ee9c:22f5) (Quit: Leaving)
[01:21:13] <webNET4> - DVERSION
[01:21:14] *** Quits: humanface (~humanface@20014C4E1C473D00044785C62325C109.dsl.pool.telekom.hu) (Quit: Client closed)
[01:21:17] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 245 seconds)
[01:21:17] *** Lord_of_Life_ is now known as Lord_of_Life
[01:21:19] <webNET4> whyyyy
[01:21:39] *** Quits: tradar (~tradar@user/tradar) (Quit: tradar)
[01:21:53] <orondo> It's a way to create #DEFINEs with arguments in the compiler.
[01:22:00] <webNET4> with a space?
[01:22:09] <orondo> The hell.
[01:22:14] <wedr> tabs 4 lyfe, yo!
[01:22:14] <webNET4> - D?  i thought that breaks everything
[01:22:20] <orondo> Good catch, webNET4, good catch.
[01:22:42] <orondo> pyzozord: Look here, webNET4 has solved all your problems.
[01:22:43] <webNET4> throw away whatevber generated that 
[01:23:04] <pyzozord> Ah found it
[01:23:06] <pyzozord> https://stackoverflow.com/questions/18939913/gmon-out-is-not-written-after-compiling-with-gcc-pg-g
[01:23:07] <bayaz> Title: gmon.out is not written after compiling with gcc -pg -g 
[01:23:16] <pyzozord> had to replace _exit() with exit()
[01:23:57] <vdamewood> pyzozord: Do you have your source available publicly?
[01:24:02] *** Quits: dmu (~darkmusic@user/darkmusic) (Quit: leaving)
[01:24:08] <pyzozord> vdamewood: no, but I can share it with you
[01:24:10] <orondo> The day stackoverlow starts charging for their content, the global output of code is going to take a hit.
[01:24:17] *** Quits: orondo (~orondo@user/orondo) (Quit: leaving)
[01:25:01] *** Joins: x003fgqwe (uid479614@id-479614.tooting.irccloud.com)
[01:25:24] <vdamewood> Well, the whole point to stack overflow was to kill expert sex change, anyway.
[01:25:33] <vdamewood> err I mean esperts exchange
[01:25:38] <vdamewood> experts*
[01:27:21] *** Quits: SystemFFan (~SystemFFa@188.70.6.7) (Remote host closed the connection)
[01:27:46] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[01:28:10] *** Joins: SystemFFan (~SystemFFa@188.70.6.7)
[01:28:59] *** Quits: magla (~gelignite@55d4b5be.access.ecotel.net) (Quit: Stay safe!)
[01:29:27] *** Quits: keir (~keir@user/keir) (Quit: keir)
[01:32:15] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Ping timeout: 244 seconds)
[01:32:46] *** Quits: scabby (~scabby@user/scabootssca) (Ping timeout: 244 seconds)
[01:32:48] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[01:33:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[01:33:22] *** Quits: travaldo (~travaldo@159.203.88.148) (Ping timeout: 245 seconds)
[01:34:19] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[01:34:37] *** Joins: independent_ (~independe@95.144.68.39)
[01:34:44] *** Joins: zaher (~zaher@37.48.184.40)
[01:35:07] *** Joins: Shanzem__ (~Shanzem@86.31.109.147)
[01:35:28] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[01:36:47] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: Lost the game...)
[01:36:49] *** Joins: Shanzem_ (~Shanzem@86.31.109.147)
[01:37:07] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[01:37:17] <wedr> that website brand name is just poorly worded, no matter how you look at it
[01:37:25] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Ping timeout: 244 seconds)
[01:38:26] *** Joins: humanface (~humanface@20014C4E1C473D00044785C62325C109.dsl.pool.telekom.hu)
[01:38:33] <vdamewood> wedr: I love making fun of it.
[01:38:50] *** Quits: juliaEnv (~juliaEnv@ip-86-49-255-181.net.upcbroadband.cz) (Quit: Going offline, see ya! (www.adiirc.com))
[01:38:50] *** Quits: Maaaanu (~manuel@ip5b41c17b.dynamic.kabel-deutschland.de) (Quit: leaving)
[01:39:04] <vdamewood> They used to do some real shady things, like for a while they'd send the question and answers back to GoogleBot, but to users they'd hide the answer.
[01:39:12] *** Quits: Shanzem__ (~Shanzem@86.31.109.147) (Ping timeout: 245 seconds)
[01:39:25] <wedr> I do missed the times when we can just scroll all the way to the bottom and see the answers.
[01:39:26] *** Joins: Shanzem__ (~Shanzem@86.31.109.147)
[01:40:41] <vdamewood> Fortunately, Stack Exchange pretty much killed them.
[01:41:14] <pyzozord> I'm getting this output from gprof https://termbin.com/ei6yj, something is off right? It shouldn't be all zeros?
[01:41:17] *** Quits: Shanzem_ (~Shanzem@86.31.109.147) (Ping timeout: 245 seconds)
[01:41:44] *** Joins: zaher_ (~zaher@37.48.184.87)
[01:43:25] *** Quits: zaher (~zaher@37.48.184.40) (Ping timeout: 252 seconds)
[01:43:42] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[01:44:08] *** Quits: Shanzem__ (~Shanzem@86.31.109.147) (Ping timeout: 244 seconds)
[01:44:56] *** Joins: Crescendo (~Crescendo@user/crescendo)
[01:48:55] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 252 seconds)
[01:49:25] *** Quits: aniruddha (uid340443@id-340443.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[01:50:51] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 244 seconds)
[01:51:18] *** Joins: Enitin (~Enitin@82.102.22.85)
[01:52:21] *** Joins: jazzy2 (~jaziz@172.58.35.41)
[01:52:34] *** jazzy is now known as Guest9803
[01:52:39] *** Joins: akselmo (~akselmo@user/akselmo)
[01:52:48] *** jazzy2 is now known as jazzy
[01:53:43] *** Quits: jazzy (~jaziz@172.58.35.41) (Read error: Connection reset by peer)
[01:54:02] *** Joins: jazzy (~jaziz@172.58.35.41)
[01:55:30] *** Quits: Guest9803 (~jaziz@172.58.35.41) (Ping timeout: 256 seconds)
[01:55:31] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[01:58:58] *** Quits: Akuli (~Akuli@82-203-162-232.bb.dnainternet.fi) (Quit: Leaving)
[02:01:44] *** Joins: akevinhuang2 (~thekevinh@user/thekevinhuang)
[02:01:48] *** Joins: LiftLeft (~LiftLeft@172.83.47.138)
[02:03:06] *** Joins: Crescendo (~Crescendo@user/crescendo)
[02:03:46] *** Quits: akevinhuang (~thekevinh@user/thekevinhuang) (Ping timeout: 244 seconds)
[02:06:12] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[02:06:12] *** Joins: Izem (~Izem@bras-base-london1483w-grc-30-74-12-157-86.dsl.bell.ca)
[02:06:12] *** Quits: nik (~nik777@vpn-users-dip-pool164.dip.cf.ac.uk) (Quit: Leaving)
[02:06:20] <Izem> How would you represent tetris pieces if you were going to use rotate and translate functions?
[02:07:31] *** Quits: newpy (~newpy@2601:280:4381:1390:fc7d:b965:6587:3eef) (Quit: Leaving)
[02:08:16] <webNET4> 2 bits for rotation?
[02:09:03] *** Joins: Cypris (uid511277@user/cypris)
[02:09:16] <Izem> I'm not sure what that means, I can see using rectangles and storing the piece information as a colour.
[02:09:25] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Quit: The Lounge - https://thelounge.chat)
[02:09:42] <Izem> webNET4: It sounds like you are using a bitmap?
[02:11:24] <webNET4> tetris does 90 degree rotations
[02:14:15] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[02:14:27] *** Joins: webNET4 (~0x100@32.211.211.39)
[02:15:02] *** Quits: humanface (~humanface@20014C4E1C473D00044785C62325C109.dsl.pool.telekom.hu) (Quit: Client closed)
[02:15:10] <webNET4> color | type | rotation
[02:15:15] <webNET4> or just type | rotation
[02:15:24] <webNET4> in a single unsigned character
[02:15:42] *** Joins: humanface (~humanface@20014C4E1C473D00044785C62325C109.dsl.pool.telekom.hu)
[02:16:42] <Izem> ok
[02:16:58] <webNET4> oh maybe you wand some piece ID, then use sixteen bit
[02:17:48] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[02:17:51] <Caffeinated> remby o/
[02:17:51] <Izem> the square has no rotation, the L and I pieces have 2 rotations, and the T shape has 4 rotations?
[02:18:07] *** Joins: independent_ (~independe@95.144.68.39)
[02:20:43] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[02:20:49] <vdamewood> The L piece has 4 rotations.
[02:20:54] <webNET4> it really depends how you want to do the collision checking
[02:21:12] *** Joins: independent_ (~independe@95.144.68.39)
[02:21:23] <webNET4> then structure the pieces in a way that optimally fits that technique
[02:21:30] <vdamewood> L J and T have 4. Z, S, and I have 2. O (square) has 0.
[02:21:47] <vdamewood> Gotta go. Real life.
[02:21:52] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[02:23:16] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 256 seconds)
[02:24:26] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 244 seconds)
[02:24:54] *** Joins: Crescendo (~Crescendo@user/crescendo)
[02:25:28] <webNET4> maybe there is only one active piece, and it turns into a bitmapped game board after it lands
[02:25:34] <webNET4> or merges with the board
[02:25:46] <webNET4> so many ways to implement it
[02:25:54] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[02:26:12] <webNET4> what are you trying to do, write a quality tetris clone or just publish one as fast as possible
[02:26:52] <Izem> just trying to make one
[02:27:15] <Izem> one active piece makes sense, after it becomes part of the board
[02:28:13] <edgar-rft> let's write the most-well-thought tetris ever
[02:28:14] *** Joins: cliluw (~cliluw@47.147.80.149)
[02:28:44] <webNET4> if you don't track all pieces it limits fancy special effects you can do
[02:28:52] *** Quits: Inari (~Pinkishu@p4fe7eacc.dip0.t-ipconnect.de) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[02:28:56] <Izem> I am trying to thin of a way to do it without images but it seems tricky, how will I draw each piece is what I should've asked first
[02:29:29] <Caffeinated> have you tried looking at other people's code which does the same thing
[02:29:29] <Izem> s/thin/think/
[02:30:10] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:b890:4924:7500:5018) (Ping timeout: 252 seconds)
[02:30:35] *** zaher_ is now known as zaher
[02:31:18] <Izem> if all the pieces are rectangles, I will have to calculate the layout on each frame or 'tick'
[02:31:31] *** Quits: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net) (Quit: Leaving)
[02:31:37] <Caffeinated> I'll take that as "No."
[02:31:40] <Izem> by calculate the layout I mean colour the rectangle to become the piece
[02:32:14] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[02:32:27] *** Joins: webNET4 (~0x100@32.211.211.39)
[02:33:36] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Quit: ZNC - https://znc.in)
[02:34:08] <webNET4> you on a C-like language?  you could use 8 bytes to store each rotation state of a piece
[02:34:19] <webNET4> in a 8x8 tile
[02:34:27] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[02:34:34] <Izem> yeah, javascript
[02:34:46] <Caffeinated> lol
[02:34:49] <webNET4> load all states into a array
[02:35:48] *** Quits: droid3 (~fffd@024-177-015-135.res.spectrum.com) (Ping timeout: 244 seconds)
[02:35:55] <Caffeinated> in case you didn't already know, there is a #javascript channel
[02:36:34] <webNET4> javascript isn't c-like  but i'll let it slide because they did rip-off the syntax quite a bit
[02:39:36] *** Joins: humanface56 (~humanface@20014C4E1C473D00044785C62325C109.dsl.pool.telekom.hu)
[02:41:21] *** Quits: humanface (~humanface@20014C4E1C473D00044785C62325C109.dsl.pool.telekom.hu) (Ping timeout: 256 seconds)
[02:41:30] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[02:41:43] *** Joins: webNET4 (~0x100@32.211.211.39)
[02:44:59] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[02:45:19] *** Joins: Atque (~Atque@user/atque)
[02:47:19] *** Quits: FastZ (~FastZ@pool-72-83-101-219.washdc.east.verizon.net) (Quit: Bye now!)
[02:48:47] *** Quits: moose (~moose@user/moose) (Ping timeout: 240 seconds)
[02:49:02] <Izem> ok it seems the layout idea I have is decent, I have to draw a maximum of two rectanlges that overlap, or just a single rectangle
[02:50:05] *** Joins: arcatech (~arcatech@user/arcatech)
[02:52:03] *** Quits: dan01 (~dan01@109.98.162.24) (Read error: Connection reset by peer)
[02:56:33] *** Quits: ixil (~ixil@82.197.178.137) (Remote host closed the connection)
[02:57:41] *** Joins: quartz (~nick@2603-8001-7700-61a4-0000-0000-0000-0eff.res6.spectrum.com)
[02:57:53] *** Joins: justicefries (~justicefr@2600:1700:9850:1a20:c486:8f31:8ec2:8a8c)
[02:58:04] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[03:02:09] *** Joins: BitsNBytes (~BitsNByte@ip59-131-15-186.ct.co.cr)
[03:02:43] *** Quits: Narrat (~omnius@p200300df5f00d3ea06ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[03:03:37] *** Quits: quartz (~nick@2603-8001-7700-61a4-0000-0000-0000-0eff.res6.spectrum.com) (Quit: WeeChat 3.2)
[03:07:11] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[03:08:02] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:09:06] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[03:09:18] *** Joins: webNET4 (~0x100@32.211.211.39)
[03:10:37] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Read error: Connection reset by peer)
[03:10:55] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[03:12:18] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[03:12:37] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[03:12:37] *** Joins: independent_ (~independe@95.144.68.39)
[03:13:00] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 276 seconds)
[03:13:48] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[03:14:07] *** Joins: independent_ (~independe@95.144.68.39)
[03:18:16] *** Joins: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net)
[03:18:16] *** Joins: arcatech (~arcatech@user/arcatech)
[03:19:51] *** Joins: moose (~moose@user/moose)
[03:22:58] *** Inhonion is now known as TastyWiener95
[03:23:06] *** TastyWiener95 is now known as Inhonion
[03:23:20] *** Inhonion is now known as TastyWiener95
[03:24:20] <beaky> yes you can use a for loop to draw rectangles i think
[03:25:35] <pavonia> Can you also use rectangles to draw loops? :3
[03:25:56] <beaky> yes like maybe in cubical type theory i think
[03:26:56] <beaky> im still working through a tutorial to understand the background of univalent type theory that i will need to then understand tutorials on cubical type theory https://www.cs.bham.ac.uk/~mhe/HoTT-UF-in-Agda-Lecture-Notes/index.html
[03:27:14] *** Joins: absc (~absc@dynamic-adsl-94-34-168-146.clienti.tiscali.it)
[03:28:21] *** Joins: Macuser (~Macuser@216.30.159.201)
[03:28:28] <beaky> baby steps to go from 'what is a type' to understanding how to use univalence and higher inductive types to formulate everything
[03:28:58] *** Quits: xeno (~xeno@user/xeno) (Ping timeout: 252 seconds)
[03:29:48] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[03:30:38] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[03:30:40] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:31:20] *** Quits: Tazy (~Tazmainia@102.39.90.151) (Read error: Connection reset by peer)
[03:33:40] *** Quits: jiffe (~jiffe@mail.nsab.us) (Ping timeout: 244 seconds)
[03:33:49] *** Quits: dislabled (~dislabled@115.229.164.82.customer.cdi.no) (Ping timeout: 250 seconds)
[03:33:49] *** Joins: pizdets_ (~pizdets@183.182.114.199)
[03:33:50] *** Quits: pizdets (~pizdets@183.182.114.170) (Ping timeout: 245 seconds)
[03:33:58] *** Quits: absc (~absc@dynamic-adsl-94-34-168-146.clienti.tiscali.it) (Ping timeout: 252 seconds)
[03:34:12] <beaky> but im like 1/10ths way thru and i still dont know what types are 
[03:34:40] <spynxic> beaky: ever hear of a language with something known as a trait
[03:34:56] *** Joins: moose` (~moose@user/moose)
[03:35:19] <beaky> yes i like traits i use them in rust all the time
[03:35:34] <beaky> i love rust it is currently my favorite programming language
[03:35:34] <spynxic> What are they 
[03:36:02] <spynxic> properties?
[03:36:28] *** Joins: jiffe (~jiffe@mail.nsab.us)
[03:36:40] <beaky> traits are like a specification of a family of types that you get to then specify implementations of for specific types and use them under the same umbrella without having to know the specific type (only the trait)
[03:36:58] <beaky> the goal of traits is to specify shared properties yes
[03:37:20] *** Quits: moose (~moose@user/moose) (Killed (NickServ (GHOST command used by moose`)))
[03:37:22] *** moose` is now known as moose
[03:37:56] <beaky> like the Iterator trait which lets you write code that iterates over all sorts of things that you don't have to know beforehand
[03:41:41] <beaky> from the point of view of the iterator the concrete type is abstracted away as the Item type and a next() that evlauates to an optional of it, but then each different Iterator implementione gets to specify their own Item and next() implementation
[03:42:26] <spynxic> Are there already traits established for built-in types
[03:44:03] <beaky> yes for example there's trait implementations for Iterator for all the builtin collections, comparison traits for equality/ordering, etc.
[03:44:21] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[03:46:26] *** Joins: xeno (~xeno@user/xeno)
[03:46:48] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[03:47:07] *** Joins: independent_ (~independe@95.144.68.39)
[03:47:11] <spynxic> That's cool to know. Thanks for the explanation
[03:50:33] *** Joins: jazzy2 (~jaziz@172.58.35.41)
[03:50:41] *** Quits: jazzy (~jaziz@172.58.35.41) (Read error: Connection reset by peer)
[03:54:18] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[03:54:37] *** Joins: independent_ (~independe@95.144.68.39)
[03:55:48] *** jazzy2 is now known as jazzy
[03:56:05] *** Joins: zaher_ (~zaher@37.48.156.217)
[03:58:05] *** Quits: zaher_ (~zaher@37.48.156.217) (Read error: Connection reset by peer)
[03:58:20] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[03:58:28] *** Quits: zaher (~zaher@37.48.184.87) (Ping timeout: 244 seconds)
[04:00:44] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 256 seconds)
[04:02:04] *** Parts: KillerWasp (KillerWasp@user/killerwasp) ("YOU KIDDING ME?? YOU KIDDING MEEE????" (PC fried with venom slayer) *kernel panic!*)
[04:03:12] *** Joins: zaher (~zaher@37.48.156.217)
[04:03:35] <beaky> soon c++ will hopefully have something similar but at the template level with concepts
[04:03:49] <beaky> concepts is taking like over 2 decades now lol
[04:03:59] *** Quits: BitsNBytes (~BitsNByte@ip59-131-15-186.ct.co.cr) (Quit: Leaving)
[04:04:13] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[04:04:56] <Izem> doesn't seem to be much interest in implementing them
[04:05:14] <Izem> it's also weird for a systems language to be so large
[04:05:31] <beaky> yes c++ concepts have been 'on the way' for like forever 
[04:05:35] <Izem> why would to write everything in a systems language?
[04:05:40] * Izem shrugs
[04:05:41] <beaky> but this time they will finally be here for real
[04:06:16] <beaky> the idea of c++ was that it was the 'zero cost abstractions' language before rust came along
[04:06:42] *** Joins: arcatech (~arcatech@user/arcatech)
[04:06:46] * webNET4 runs and hides from the costs
[04:06:53] <Izem> abstractions always have a cost, that sounds nice though
[04:07:16] <beaky> the idea is not necessarily to write everything in c++ (but im glad rust is planning on rewriting everything in rust) but to support maximum abstraction at zero-to-minimal cost
[04:07:28] <beaky> while also being backwards compatible at all costs
[04:07:40] <webNET4> did they ever consider the price i pay every time i look at a mangled c++ symbol?
[04:07:48] <Izem> heh
[04:08:05] <Izem> why do they do that?
[04:08:56] <beaky> the name mangling is important because there is function and member function overloading and the implementation idea is to make sure they manifest as different symbols
[04:08:58] <webNET4> to remind me to extern "C" { .. } all the things
[04:09:39] <Izem> ok, for true polymorphic languages does this also happen?
[04:09:42] <beaky> name mangling is not part of the c++ standard one reason why c++ libraries enjoy a high degree of portability across implementations
[04:11:29] *** Quits: humanface56 (~humanface@20014C4E1C473D00044785C62325C109.dsl.pool.telekom.hu) (Quit: Client closed)
[04:13:13] <beaky> luckily rust has name mangling too so you get to enjoy name mangling in a more fearless way
[04:14:54] <beaky> name mangling will go away once we get next-gen assemblers, object formats, linkers, etc
[04:15:01] <beaky> (i.e. never)
[04:15:05] <webNET4> hahahaha
[04:15:30] <beaky> no wait we have a next-gen object code platform
[04:15:35] <beaky> it is webasm on llvm
[04:15:45] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[04:15:57] *** Joins: flynn (~mcbloch@user/flynn)
[04:16:08] <beaky> the future is the web
[04:16:09] <webNET4> yup, everything including the kitchen sink
[04:16:23] <webNET4> all jumbled togeyher
[04:17:43] <webNET4> an object format, with all the furnishings
[04:21:05] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:98e7:c5c1:9a99:bc3a)
[04:21:39] *** Joins: independent__ (~independe@95.144.68.39)
[04:21:51] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[04:22:00] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[04:23:28] *** Quits: alefir (~alefir@102.129.145.90) (Ping timeout: 252 seconds)
[04:23:52] *** Quits: Izem (~Izem@bras-base-london1483w-grc-30-74-12-157-86.dsl.bell.ca) (Ping timeout: 245 seconds)
[04:25:18] *** Quits: independent__ (~independe@95.144.68.39) (Remote host closed the connection)
[04:25:37] *** Joins: independent__ (~independe@95.144.68.39)
[04:25:39] *** Joins: travaldo (~travaldo@159.203.88.148)
[04:25:44] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[04:26:40] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Read error: Connection reset by peer)
[04:27:21] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[04:28:16] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[04:29:58] *** Joins: arcatech (~arcatech@user/arcatech)
[04:31:10] *** Quits: SystemFFan (~SystemFFa@188.70.6.7) (Ping timeout: 240 seconds)
[04:31:53] *** Quits: arcatech (~arcatech@user/arcatech) (Client Quit)
[04:33:14] *** Joins: arcatech (~arcatech@user/arcatech)
[04:34:00] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:98e7:c5c1:9a99:bc3a) (Read error: Connection reset by peer)
[04:37:16] *** Joins: ^-^hi (~nikw@user/-hi/x-1729478)
[04:38:51] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[04:39:42] *** Quits: daegalus (~yulian@user/daegalus) (Quit: WeeChat 3.1)
[04:40:34] *** Joins: juliaEnv (~juliaEnv@ip-86-49-255-181.net.upcbroadband.cz)
[04:42:46] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[04:42:54] *** Quits: peteyboy1 (~peteyboy1@95.169.235.10) (Ping timeout: 244 seconds)
[04:44:55] *** Quits: humky (~humky@user/humky) (Ping timeout: 252 seconds)
[04:45:28] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 252 seconds)
[04:46:08] *** Joins: humky (~humky@user/humky)
[04:49:12] *** Quits: jaysicks (~jaysicks@91-82-168-11.pool.digikabel.hu) (Remote host closed the connection)
[04:49:17] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 245 seconds)
[04:49:28] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 256 seconds)
[04:50:57] *** Quits: nostalgia (~treebeard@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Remote host closed the connection)
[04:51:48] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[04:51:52] *** Joins: nostalgia (~treebeard@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[04:52:05] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:52:32] *** Quits: nostalgia (~treebeard@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Remote host closed the connection)
[04:53:38] *** Quits: humky (~humky@user/humky) (Remote host closed the connection)
[04:53:46] *** Joins: humky (~humky@user/humky)
[04:54:34] *** Joins: VoidNoir0 (~VoidNoir0@72.80.203.52)
[04:54:50] *** Quits: VoidNoir0 (~VoidNoir0@72.80.203.52) (Client Quit)
[04:55:22] *** Quits: independent__ (~independe@95.144.68.39) (Ping timeout: 252 seconds)
[04:55:55] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[04:56:26] *** Joins: VoidNoir0 (~VoidNoir0@72.80.203.52)
[04:56:30] *** Joins: Cashlin (~hp@user/cashlin)
[04:57:28] *** Quits: VoidNoir0 (~VoidNoir0@72.80.203.52) (Client Quit)
[04:59:06] *** Joins: VoidNoir0 (~VoidNoir0@72.80.203.52)
[04:59:53] *** Joins: Izem (~Izem@bras-base-london1483w-grc-30-74-12-157-86.dsl.bell.ca)
[05:01:52] *** Joins: numsima (~numsima@101.175.64.73)
[05:02:13] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[05:05:09] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[05:06:52] *** Joins: arcatech (~arcatech@user/arcatech)
[05:08:09] *** Quits: Inhahe (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net) (Read error: Connection reset by peer)
[05:08:11] *** Quits: repne_scasb (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net) (Remote host closed the connection)
[05:08:32] *** Joins: audiocat (~audio@2603-8081-1801-3bb5-0258-933a-d6c3-bfc1.res6.spectrum.com)
[05:09:04] *** Joins: qaph (~weechat@user/qaph)
[05:09:16] *** Joins: Inhahe (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net)
[05:10:23] *** Joins: independent__ (~independe@95.144.68.39)
[05:11:38] *** Quits: kron (~weechat@user/qaph) (Ping timeout: 250 seconds)
[05:11:40] *** qaph is now known as kron
[05:12:09] *** Quits: cation (cation@user/cation) (Ping timeout: 248 seconds)
[05:13:17] *** Joins: repne_scasb (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net)
[05:14:16] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:14:20] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[05:14:32] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[05:14:49] *** Joins: Crescendo (~Crescendo@user/crescendo)
[05:15:17] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[05:15:51] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[05:16:11] *** Joins: cation (cation@user/cation)
[05:20:45] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[05:27:28] *** Joins: arcatech (~arcatech@user/arcatech)
[05:28:24] *** Quits: arcatech (~arcatech@user/arcatech) (Client Quit)
[05:31:28] *** Quits: Izem (~Izem@bras-base-london1483w-grc-30-74-12-157-86.dsl.bell.ca) (Ping timeout: 244 seconds)
[05:32:16] *** Joins: arcatech (~arcatech@user/arcatech)
[05:35:31] *** Joins: Macuser (~Macuser@216.30.159.201)
[05:39:37] *** Joins: sj1k (~debian@user/sj1k)
[05:42:07] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 252 seconds)
[05:43:13] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Ping timeout: 252 seconds)
[05:50:05] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[05:50:08] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:52:54] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[05:54:58] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Ping timeout: 250 seconds)
[05:57:22] *** Joins: xcombelle (~xavie@176-139-252-198.abo.bbox.fr)
[06:00:16] *** Quits: src (~src@user/src) (Ping timeout: 252 seconds)
[06:00:37] *** Quits: travaldo (~travaldo@159.203.88.148) (Quit: travaldo)
[06:00:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:01:40] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[06:01:55] *** Quits: mei (~mei@user/mei) (Ping timeout: 252 seconds)
[06:02:05] *** Joins: dislabled (~dislabled@115.229.164.82.customer.cdi.no)
[06:04:07] *** Quits: xff0x (~xff0x@2001:1a81:52f2:5d00:a43c:729f:4397:fe8e) (Ping timeout: 252 seconds)
[06:05:34] *** Quits: independent__ (~independe@95.144.68.39) (Ping timeout: 244 seconds)
[06:06:00] *** Joins: xff0x (~xff0x@2001:1a81:5329:9c00:3941:fe2c:440c:b590)
[06:07:49] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[06:11:43] *** Joins: vysn (~vysn@user/vysn)
[06:15:53] <[itchyjunk]> Greetings!
[06:16:03] *** Quits: Cashlin (~hp@user/cashlin) (Quit: Konversation terminated!)
[06:16:20] <phogg> surely one greeting should be enough for anyone
[06:16:44] <[itchyjunk]> so in java, if i am in an infinite loop, i can use break; to get out of there. but what about return false?
[06:16:51] <[itchyjunk]> while (true) { return false; }
[06:16:56] <[itchyjunk]> this wouldn't work right?
[06:17:06] <webNET4> whyyyy not
[06:17:11] <[itchyjunk]> it would?
[06:17:39] <webNET4> probably
[06:17:49] <webNET4> why would they prevent it
[06:19:16] *** Joins: chives (~brandon@64.130.100.177)
[06:19:40] <[itchyjunk]> hmm
[06:19:45] <[itchyjunk]> you're right it seems to work
[06:19:47] *** Joins: hexingb (~hexingb@103.37.140.21)
[06:20:23] *** Joins: gggp (~textual@60.10.194.45)
[06:21:38] <[itchyjunk]> https://bpa.st/PWXQ
[06:21:38] *** Quits: hexingb (~hexingb@103.37.140.21) (Read error: Connection reset by peer)
[06:21:40] <bayaz> Title: View paste PWXQ 
[06:21:44] <[itchyjunk]> prints truw once and exits
[06:21:52] <[itchyjunk]> so i can break out of infinite loop in 2 ways ?
[06:21:56] <[itchyjunk]> break and return false
[06:22:00] <[itchyjunk]> interesting!
[06:22:16] <[itchyjunk]> oh i also learned that main has to have return type void (in java)
[06:22:32] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 245 seconds)
[06:23:11] *** Joins: brabrax (~brabrax@user/brabrax)
[06:23:44] <Caffeinated> this again
[06:26:47] *** Quits: snake (~snake@user/snake) (Quit: Namae nado nai, omae to onaji da..)
[06:29:47] *** Joins: Izem (~Izem@bras-base-london1483w-grc-30-74-12-157-86.dsl.bell.ca)
[06:30:18] *** Joins: pandakekok9 (~job@wikimedia-commons/pandakekok9)
[06:30:33] <Izem> Does anyone have material on using objects like/as types
[06:31:04] <Caffeinated> remby o/
[06:31:19] *** Joins: moose` (~moose@user/moose)
[06:31:33] *** Quits: moose (~moose@user/moose) (Read error: Connection reset by peer)
[06:31:33] *** Joins: kmh_ (~kmh@p200300df5f110700c85528b7506c64dc.dip0.t-ipconnect.de)
[06:31:49] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:3861:b031:6b93:c510)
[06:32:59] *** Joins: Yonle (~Yonle@user/yonle)
[06:33:16] *** Quits: kmh (~kmh@p200300df5f053300905d845fbdcccb7b.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[06:34:52] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:3861:b031:6b93:c510) (Ping timeout: 256 seconds)
[06:35:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[06:37:46] *** Joins: vicfred (~vicfred@user/vicfred)
[06:39:05] *** Joins: dormac (~kukulkan@ip59-131-15-186.ct.co.cr)
[06:39:34] *** Joins: arcatech (~arcatech@user/arcatech)
[06:40:42] *** Quits: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net) (Ping timeout: 244 seconds)
[06:43:03] *** Quits: daoistmonk (~daoistmon@113.90.179.18) (Quit: Leaving)
[06:44:12] *** Joins: quartz (~nick@2603-8001-7700-61a4-0000-0000-0000-0eff.res6.spectrum.com)
[06:45:10] <[itchyjunk]> why is it pro-gramming?
[06:45:15] <[itchyjunk]> is there amature-gamming too?
[06:46:12] <webNET4> beats me
[06:46:22] <webNET4> might have something to do with grammar
[06:49:10] *** Quits: PlanckWalk (~Planck@user/planckwalk) (Ping timeout: 240 seconds)
[06:49:27] *** Joins: PlanckWalk (~Planck@user/planckwalk)
[06:51:01] <beaky> hello why isnt deep learning used for moire patterns https://www.getrevue.co/profile/shift-happens/issues/moire-no-more-688319
[06:51:03] <bayaz> Title: Moiré no more 
[06:51:30] <beaky> i thought deep learning was the silver bullet to all computer vision and image processing problems
[06:52:08] *** Quits: Izem (~Izem@bras-base-london1483w-grc-30-74-12-157-86.dsl.bell.ca) (Quit: Going offline, see ya! (www.adiirc.com))
[06:52:08] <beaky> i think his problem can be more effectively solved by adding deep learning convolutional layers that embed the fft and inverse fft
[06:52:46] <webNET4> what even is deep learning
[06:52:54] <webNET4> neural net algorithm?
[06:53:14] <PlanckWalk> Yes
[06:53:33] *** Joins: frost (~frost@59.71.240.119)
[06:53:34] <webNET4> it has limited appliction
[06:54:04] <webNET4> and is suseptible to attack
[06:54:14] <webNET4> is that a word i heard it somewhere 
[06:54:57] <webNET4> susceptibilis
[06:57:20] <PlanckWalk> susceptible
[06:57:28] <PlanckWalk> It is a word
[06:57:45] *** Quits: gitgood (~gitgood@host-78-145-140-210.as13285.net) (Ping timeout: 244 seconds)
[06:57:45] <PlanckWalk> There are neural nets that use FFTs
[07:00:10] *** Quits: silasfox (~sbv@2001-4dd6-4b95-0-383d-e94d-aa82-1e8f.ipv6dyn.netcologne.de) (Ping timeout: 240 seconds)
[07:00:28] *** Joins: silasfox (~sbv@xdsl-85-197-57-82.nc.de)
[07:04:59] <beaky> yes deep learning is a neural net algorithm where the neural network is composed of multiple hidden (i.e. sandwiched in between input and output) layers
[07:05:21] <[itchyjunk]> fft being fast fourier transform?
[07:05:52] <beaky> yes fft is the fast fourier transform an algorithm to implement the fourier transform which is an algorithm to transform signals to frequency domain or something
[07:06:06] <[itchyjunk]> hmm
[07:06:23] <Caffeinated> haha it's a definition bot
[07:06:24] <[itchyjunk]> fourier tranformation is the decomposition things right?
[07:06:51] *** Joins: hhaglid (~hhaglid@hopper05.cs.purdue.edu)
[07:06:55] <[itchyjunk]> i can take some function and decomepose it to more elementary functions or somesuch?
[07:07:58] <beaky> yes you have a function in one domain and what it does is you can decompose it into an infinite sum of functions in an angular domain
[07:08:00] <[itchyjunk]> isn't convolution opposite of ft in some way then?
[07:08:32] <[itchyjunk]> convolution is basically composing two functions in some way iirc
[07:08:35] *** Joins: hexfive (~eric@50.35.83.177)
[07:08:55] <[itchyjunk]> infinite sum of functions?
[07:09:03] <[itchyjunk]> it gives taylor series ?
[07:09:16] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[07:10:34] *** Quits: VoidNoir0 (~VoidNoir0@72.80.203.52) (Quit: Connection closed)
[07:11:38] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[07:13:28] *** Joins: hexingb (~hexingb@101.236.65.176)
[07:13:37] *** Joins: VoidNoir0 (~VoidNoir0@72.80.203.52)
[07:14:34] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[07:17:59] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[07:19:25] *** Joins: arcatech (~arcatech@user/arcatech)
[07:20:33] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[07:20:35] *** Quits: dormac (~kukulkan@ip59-131-15-186.ct.co.cr) (Quit: WeeChat 2.8)
[07:20:45] <InPhase> [itchyjunk]: No, convolution is a different operation that sort of "smears" functions together.  There is a convolution theorem showing a shortcut for convolution that uses a fourier transform, but that is the only significant connection.
[07:20:47] *** Quits: hexfive (~eric@50.35.83.177) (Quit: WeeChat 3.0.1)
[07:22:08] <InPhase> [itchyjunk]: The opposite of a Fourier transform is an inverse Fourier transform, which is itself essentially a Fourier transform, just with a negative sign.
[07:22:38] <[itchyjunk]> hmm
[07:23:27] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[07:26:56] *** Joins: euouae (~euouae@user/euouae)
[07:29:47] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[07:31:30] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[07:31:56] *** Joins: jamea (~jamea@177.239.87.39)
[07:32:42] <jamea> wich laptop recommend me: 1)  https://www.bestbuy.com/site/asus-vivobook-17-3-laptop-intel-core-10th-gen-i7-16gb-memory-1tb-ssd-transparent-silver/6449515.p?skuId=6449515   or 2)   https://www.bestbuy.com/site/dell-inspiron-7000-2-in-1-17-qhd-touch-laptop-11th-gen-intel-core-i7-nvidia-16gb-ram-512gb-ssd-32gb-optane-silver/6432549.p?skuId=6432549
[07:32:57] <Caffeinated> this is ##programming 
[07:33:02] <Caffeinated> you want ##hardware
[07:33:12] <Caffeinated> they know all about laptops in that channel
[07:33:54] *** Quits: jazzy (~jaziz@172.58.35.41) (Read error: Connection reset by peer)
[07:33:55] <[itchyjunk]> why not both?
[07:33:57] <[itchyjunk]> https://www.digitaltechnologylabs.com/wp-content/uploads/2019/06/01-240x300.jpg
[07:33:58] <bayaz> Type: image/jpeg 
[07:34:19] *** Joins: jazzy (~jaziz@172.58.35.41)
[07:35:45] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[07:36:10] <beaky> speaking of deep learning what is the best book to learn deep learning in depth
[07:36:11] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[07:37:28] *** Joins: arcatech (~arcatech@user/arcatech)
[07:37:37] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-b495-e64a-b23b-4c53.res6.spectrum.com) (Ping timeout: 252 seconds)
[07:37:43] <vysn> https://www.amazon.com/Fundamentals-Deep-Excavations-Chang-Yu-Ou-dp-0367426013/dp/0367426013/ref=mt_other?_encoding=UTF8&me=&qid=1630552016
[07:39:26] <vysn> couldn't help it. you said deep and depth
[07:40:47] <InPhase> jamea: A giant 17" display only 900 pixels high doesn't make sense with this generation of hardware.  Even 1080p wouldn't fit without resampling.  You might as well go with a smaller size screen, or a larger pixel count if you want 17".
[07:41:28] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 252 seconds)
[07:41:40] *** Quits: Lyn (~Lyn@user/law) (Ping timeout: 240 seconds)
[07:41:42] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-347a-2581-fcf8-c1f7.res6.spectrum.com)
[07:42:04] <arahael> Just to clarify: You do *not* want resampling.
[07:42:29] <beaky> what is resampling
[07:42:46] <arahael> beaky: Fitting a 400x400 image into 300x300 displays.
[07:42:50] <vysn> beaky:  on a serious note, this list covers the must have books on deep learning.
[07:42:54] <vysn> https://www.analyticsvidhya.com/blog/2021/05/top-7-must-have-books-for-deep-learning/
[07:42:54] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[07:42:57] <bayaz> Title: Top 7 Must Have Books for Deep Learning! - Analytics Vidhya 
[07:43:10] <InPhase> jamea: The RAM isn't the worst out there, but you can do better.  Laptop companies have been undersizing RAM lately for some reason, but sometimes it matters for serious work, which, as a programmer you might end up engaged in doing.  (For example, if you try to run a VM.)
[07:43:38] <arahael> beaky: Resampling isn't bad if it's like, a photo, but it's terrible if it's not a photo.
[07:44:29] <InPhase> beaky: If you need to fit 4 pixels of image into 3 pixels of display, you have to pick intermediate values of the pixels from the neighbors, which blurs everything.
[07:45:14] <beaky> i like the cover of that rat book
[07:45:17] <InPhase> beaky: This becomes worse when the pixels are larger, which means a low resolution large display that also resamples for a common use case is going to be visually low quality.
[07:45:44] <beaky> yes blurines is bad
[07:45:59] <beaky> blurriness is why even with a high res display i opt for nice crisp bitmapped fonts 
[07:46:15] <InPhase> A modern laptop display should be minimum 1080p unless maybe it's a budget 13" laptop.
[07:46:45] <arahael> beaky: Even bitmapped fonts are a bit iffy these days, due to the pixel technologies - we no-longer have even slightly rectangular pixels today.
[07:47:03] <arahael> (Especially at higher pixel densities)
[07:47:03] <beaky> yes now with oled the pixels are more dotty for some reason
[07:47:53] *** Joins: tcsilver (~tcsilver@pool-96-255-128-204.washdc.fios.verizon.net)
[07:47:54] <arahael> beaky: As the density becomes much higher, they tend to become chevrons or other shapes instead. Crazy stuff, but the point is they're no-longer simple rectangular pixels.
[07:47:54] <tcsilver> hi
[07:48:32] <tcsilver> :)
[07:48:33] <beaky> hello i'm beaky
[07:48:41] <tcsilver> hi beaky!!!
[07:48:48] <tcsilver> I missed you man! ;P
[07:48:55] <tcsilver> since vendu passed
[07:49:11] <tcsilver> we used to hang out in #oszero
[07:49:17] <tcsilver> tee hee
[07:49:26] <tcsilver> how are projects going guys ?
[07:49:37] <tcsilver> hi arahael
[07:50:00] <beaky> yes soon my month-long project to solve a 5-minute google interview whiteboard problem will be complete
[07:50:07] <beaky> i am just figuring out how to do inplace mergesort correctly
[07:50:32] <tcsilver> oh very nice!
[07:50:35] <tcsilver> sounds great
[07:50:41] <tcsilver> like real coding
[07:50:43] <beaky> inplace mergesort is like harder to implement than all the golomb-rice delta encoding bitvector stuff for some reason
[07:51:23] <tcsilver> interesting
[07:51:26] <tcsilver> how does it work ?
[07:51:39] <tcsilver> what is the fact and theory behind it ?
[07:51:59] <tcsilver> beaky whatever happened to meekly ?
[07:52:21] <beaky> i thin she quit irc
[07:52:22] *** Joins: pulse (~pulse@user/pulse)
[07:52:55] <tcsilver> oh ok : ) I hope she is ok! ... how have you and your family been ? I've just been coding more RPG stuff
[07:53:39] *** hhaglid is now known as hunter
[07:53:41] <tcsilver> beaky is becoming advanced ;P
[07:53:49] *** hunter is now known as ENIAC
[07:53:58] <tcsilver> I want to code more soon.
[07:54:06] <tcsilver> I want to do some form of basic game again
[07:54:14] <tcsilver> with an overworld map
[07:54:19] *** ENIAC is now known as Guest1684
[07:54:45] <beaky> the theory is that you have a million 32-bit integers and that takes alot of space but if you only need to store the sorted sequence then you can save space by only storing the difference between elements of the sequence since log(y-x) < log(x) and to actually capitalize on the space saving gains of delta encoding you need to use a variable length number format and that's where golomb-rice
[07:54:47] <beaky> comes in using the right divisor parameter and by storing outliers in a separate vector you can cut the size by like 60% 
[07:55:13] <beaky> but then now its time to actually produce the sorted sequences themselves and combine them and the best algorihtm for that is in-place merge sort and i dont know how to implement that
[07:55:23] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[07:55:40] <tcsilver> oh ok.
[07:55:57] <tcsilver> that reminds me, I'll start working on my GUI again soon or I'll convert to eC maybe
[07:56:06] <tcsilver> something with a working GUI
[07:56:14] <tcsilver> my GUI was incomplete
[07:56:21] <tcsilver> but i did an mmo editor with it.
[07:56:32] <tcsilver> it had a test mode
[07:57:11] <tcsilver> I don't know how many players are actually supported by my network code..I didn't get a chance to test more than 64 ;P
[07:57:28] <tcsilver> and you could only perform basic actions
[07:57:57] <tcsilver> I'll start with my GUI again soon I guess.
[07:58:52] <beaky> nice i like guis they are the best form of interface
[08:00:10] <vysn> what do you think of decentralized blockchain gaming?
[08:00:22] <pulse> what about auis
[08:00:57] <vysn> https://www.youtube.com/watch?v=wMd9mvc8pqA
[08:00:58] <bayaz> Title: Daniel Kraft, XAYA - Blockchain Game Summit - Game channels 
[08:01:03] <vysn> https://xaya.io/
[08:01:26] <tcsilver> wow. I'll watch that in a bit.
[08:01:31] <tcsilver> sounds interesting
[08:02:36] *** Joins: sleepingkirby1 (~sleepingk@123-192-13-143.dynamic.kbronet.com.tw)
[08:02:51] <tcsilver> this channel has a lot of interesting topics
[08:02:56] <beaky> what is blockchain gaming
[08:03:04] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[08:03:08] *** Quits: codemin (~codemin@69.166.222.231) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[08:03:21] <cis> it's the next evolution of wow gold farming
[08:04:02] <pulse> anything blockchain is an instant turn off
[08:04:32] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:b890:4924:7500:5018)
[08:04:49] <cis> i'm only kidding though, NFTs are going to be integrated into tons of games in the future
[08:05:00] <beaky> nice will eve online have nfts
[08:05:13] <cis> and there will be plenty more games that cost & reward real digital currency
[08:05:39] <cis> beaky: dunno, but games like that will have NFTs representing items that can be traded
[08:06:07] <cis> game developers will write smart contracts that give them a cut every time an item is traded... big revenue stream
[08:06:28] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[08:07:12] <euouae> "games"
[08:07:26] <pulse> games and money are a dumb mixture
[08:07:30] <pulse> like bananas and coffee
[08:07:38] <cis> you can get a glimpse of how this works with the CSGO marketplace, although that's not on a blockchain, and entirely owned by valve
[08:07:52] <cis> pulse: there's a lot of dumb money out there
[08:08:06] <pulse> playing games shouldn't be about money
[08:08:07] <beaky> yes on eve online there are a lot of commodities to trade but i thought the idea of nft was to have something nonfungible
[08:08:10] <pulse> it should be about playing games
[08:08:34] <cis> beaky: right, so you could have X copies of an NFT representing a certain kind of ship or whatever, or a magic sword, etc.
[08:08:49] <cis> they're rare, and they grant some in-game power, so they're valuable
[08:09:21] <euouae> it's not "dumb"
[08:09:21] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[08:09:34] <euouae> it's just an unregulated way to addict young gamers into gambling
[08:09:42] <cis> in CSGO, the items don't do anything - they're only skins, yet the rare ones trade for hundreds of dollars
[08:10:08] <euouae> valuation driven by what 15 year olds think
[08:10:15] <Juliu> Hello
[08:10:27] <euouae> you're not allowed on reddit if you're younger than 13 -- you're too young to advertise to
[08:10:41] <cis> advertising begins in the womb
[08:10:42] <Juliu> This proves that people are idiots. Giving real money for something as useless as a CSGO skin
[08:11:25] <cis> status goods of all kinds have value to people
[08:11:53] <Juliu> Yes, like I said, people are idiots
[08:11:58] <pulse> actually bananas and coffee might work
[08:12:05] <beaky> nice i like bananas
[08:12:25] <cis> banana coffee smoothie
[08:12:47] <Juliu> I hate coffee
[08:12:59] *** moose` is now known as moose
[08:13:02] <sleepingkirby1> that actually sounds like it can work as a drink.
[08:13:21] <Juliu> People even turn their coffees into status symbols and pay $8 for 1 cup
[08:13:32] <pulse> that's dumb
[08:13:46] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[08:13:54] <pulse> $8 you can get a mini LEGO set for that
[08:14:05] <cis> the dodecasyllablic starbucks order as a symbol of status
[08:15:55] *** sleepingkirby1 is now known as sleepingkirby
[08:16:39] <cis> NFTs as a way to reroute the human need for displays of status without constantly wasting material resources
[08:16:40] *** Quits: zaher (~zaher@37.48.156.217) (Ping timeout: 240 seconds)
[08:16:43] <pulse> i wish i had a dodecahedron
[08:17:08] <Juliu> LEGO became quite expensive as well, at least the larger sets
[08:17:15] <pulse> yes they did
[08:17:23] <pulse> they also are now 99.2% franchise based
[08:17:25] <pulse> which is dumb
[08:17:28] <Juliu> cis, that might be true (NFTs)
[08:17:36] <pulse> where is my LEGO space, LEGO pirates, LEGO castles
[08:17:47] <pulse> sad
[08:17:57] <cis> assuming the backing software isn't wasting electric power
[08:18:04] <Juliu> What NFTs are good ones?
[08:19:02] <cis> good in terms of what?
[08:19:23] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Ping timeout: 244 seconds)
[08:19:26] <cis> there are some genuine artists making great stuff and being paid for it... that's nice to see
[08:20:51] <cis> https://opensea.io/
[08:21:23] *** Joins: [1]tcsilver (~tcsilver@pool-96-255-128-204.washdc.fios.verizon.net)
[08:22:20] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:3861:b031:6b93:c510)
[08:25:18] <Juliu> I meant which NFT crypto is good
[08:25:22] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:3861:b031:6b93:c510) (Ping timeout: 256 seconds)
[08:26:32] <cis> most everything is on ethereum
[08:26:38] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[08:27:55] <Juliu> But there are special NFT cryptos, aren't there?
[08:29:46] *** Quits: ^-^hi (~nikw@user/-hi/x-1729478) (Remote host closed the connection)
[08:29:47] <beaky> the fourier transform what is it https://www.youtube.com/watch?v=spUNpyF58BY
[08:29:48] <bayaz> Title: But what is the Fourier Transform? A visual introduction. 
[08:30:00] <cis> maybe... any crypto with smart contracts can support NFTs
[08:30:21] *** Quits: Zweihander (~Zweihande@znc.ext.zweihander.me) (Quit: ZNC - https://znc.in)
[08:31:01] <Juliu> beaky, is that a question?
[08:31:14] *** Joins: Zweihander (~Zweihande@znc.ext.zweihander.me)
[08:31:18] <Sqaure> Wtf is going to be done with crypto currency. The most retarded thing humans ever invented
[08:31:37] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:31:53] <Sqaure> Its sucking a sizable amount of world energy to make some lazy pricks rich
[08:32:22] *** Quits: Natch (~natch@c-e070e255.014-297-73746f25.bbcust.telenor.se) (Remote host closed the connection)
[08:32:30] <cis> some of them are, not all of them
[08:32:51] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[08:33:52] *** Quits: hexingb (~hexingb@101.236.65.176) (Ping timeout: 245 seconds)
[08:34:45] *** Joins: hexingb (~hexingb@2409:8900:2721:a7e2:2443:a3d2:e3ad:e0e6)
[08:35:17] <Juliu> Sqaure, you will pay everything with a cryptocurrency soon, if you want to or not
[08:36:36] <Sqaure> Well, not if its sucking that amount of energy. Popular opinion will go against it. 
[08:36:59] <Juliu> That's one of the main reasons they faked the pandemic. So the economy gets ruined, the dollar will see a hugh inflation, and people will kinda be forced to switch to the e-dollar soon
[08:37:46] *** Joins: Natch (~natch@c-e070e255.014-297-73746f25.bbcust.telenor.se)
[08:38:02] <Sqaure> Lol. Ok, Im not into reptilians nor chem trails either. 
[08:38:28] <Caffeinated> faked..the pandemic...LOL
[08:38:35] <Juliu> It's pretty obvious when you think for yourself, but ok
[08:38:38] <Caffeinated> let's all check our headgear, yes?
[08:39:10] <Sqaure> 1st grade alu sheet
[08:39:17] <Juliu> Of course the pandemic is fake. Everyone with just slight knowledge about statistics can see that
[08:39:40] <Caffeinated> "it's not me, it's the rest of the world!"
[08:40:34] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Ping timeout: 244 seconds)
[08:40:38] <Juliu> The vast majority of people are idiots. If you haven't figured that out at a certain age, there is a reason why you didnt
[08:40:59] <Caffeinated> my point proven
[08:41:13] <Juliu> My point proven
[08:41:17] <Caffeinated> rofl
[08:41:44] * Caffeinated goes back to measuring the V/A of this usb charger
[08:41:46] <Juliu> Anyway, while you go on sleeping about how the world really works, I will get with cryptos that you will be forced to use soon anyway
[08:42:00] <Juliu> +rich
[08:42:55] <Sqaure> How you are proud of yourself. Non deserved wealth.
[08:43:12] <Caffeinated> oh don't lets keep feeding it
[08:43:39] <Caffeinated> btw 5.02V 2.87A
[08:43:55] <Juliu> Sqaure, I think getting rich from not being an idiot is quite deserved
[08:44:25] <Sqaure> I guess you are free to think that, even if laws would be different if I wrote them
[08:44:52] <Juliu> With your law no one would do anything since no one had a positive reason to
[08:45:48] <Sqaure> Letting the world be moronic would not be allowed in my rule book
[08:45:59] <Juliu> And if you think I will get rich, then you are free to do the same
[08:46:36] <Sqaure> I spit on ground threaded by people spending time on crypto
[08:46:39] <Juliu> People who are morons and think that 9/11 or the pandemic were real talking about the world being moronic. Classic
[08:46:42] <Sqaure> on the*
[08:47:12] <Sqaure> Ok, gotta gbo
[08:47:30] <Juliu> I dont know what your problem with crypto is. Soon you will be using crypto as well, so deal with it
[08:48:33] <Caffeinated> must be a rough psychological life for some in Germany
[08:49:51] <Juliu> Germany is a socialist shithole, what do you expect. But not everyone is sleeping there
[08:50:21] <Sqaure> you are up, for one
[08:50:42] <Juliu> I am not talking about physical sleep
[08:51:02] <dodo> if you're so smart, how come you're not rich from crypto yet?
[08:51:16] <Juliu> I am talking about waking up from the ongoing brainwashing, but since you are not awoke, you dont get it
[08:51:32] <Juliu> dodo, you need money to get money
[08:51:42] <dodo> how old are you?
[08:51:49] <Juliu> Why?
[08:52:01] <dodo> making a point
[08:52:05] <Juliu> 39
[08:52:27] <dodo> so you awoke recently, got it
[08:52:33] <Juliu> Yes
[08:52:42] <dodo> good for you. now stop being preachy about it
[08:52:49] <Juliu> Corona woke me up, since it was too obvious that it was fake
[08:53:08] <Juliu> So, I'm waiting for your point...
[08:53:25] <dodo> oh, so you're not smart enough to see it..
[08:53:50] <Juliu> Apparently not. I also didnt invest in cryptos earlier. But at least I saw my mistakes and changed them
[08:54:16] <dodo> the next 80% crash should be fun for you
[08:54:29] <Juliu> Who cares. It will rise up again
[08:54:37] <Juliu> I am not playing the short term game
[08:54:55] <dodo> attaboy!
[08:55:05] <Caffeinated> lol
[08:55:25] <Juliu> I should have invested just 1 year earlier and I would be almost a millionaire now
[08:57:41] <Juliu> While bitcoin dropped since I bought it, my overall gains are still 13k, just for doing nothing. I think that's quite ok
[08:58:37] *** Joins: soapsudsxx (~soapsudsx@141.193.188.154)
[08:59:32] <CoJaBo> Man, I need to stop coding at 3am
[09:00:17] <Juliu> CoJaBo, I think coding doring the day is simply not possible
[09:00:23] <oldlaptop> Trying to figure out why you thought that would work, are you?
[09:00:32] <oldlaptop> "what the hell was I thinking?"
[09:01:32] <cis> when you get too tired, just leave comments
[09:01:46] *** Quits: jazzy (~jaziz@172.58.35.41) (Ping timeout: 252 seconds)
[09:01:48] <CoJaBo> Juliu: I wrote a validation function to handle if an imported record was a corrupted version of a good one; if such a thing is found, it automatically deletes the good one.
[09:02:22] <Juliu> CoJaBo, the good one is deletd? Lol, sounds perfect
[09:02:55] <Juliu> Seems you are just not used to late night coding. You should do it more often ;)
[09:03:04] <CoJaBo> I helpfully wrote a coverage and validation test to ensure all the code executes without crashing. The validation validates that only one record exists after the cleanup function runs.
[09:03:19] <InPhase> Test-driven design for the win.
[09:03:54] <cis> plot twist: he writes the test the same way
[09:04:01] <CoJaBo> I'm just gonna, omit this project from my resume <_<
[09:04:34] <Juliu> Fuck, I never write tests
[09:04:41] *** Joins: alefir (~alefir@84.17.45.14)
[09:04:43] <Juliu> cis, lol
[09:04:55] <CoJaBo> This is, I think, the only project I maintain that has more than zero tests.
[09:05:16] <Juliu> I dont need tests. My code works ;)
[09:05:40] *** Joins: homura (root@2605:6400:c847:1486::6841)
[09:05:46] <pulse> hope driven design
[09:05:53] <InPhase> Juliu: Do you at least run it before shipping it?
[09:05:53] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[09:06:21] <Juliu> InPhase, wait, the code has to run?
[09:06:41] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[09:06:43] *** Quits: akevinhuang2 (~thekevinh@user/thekevinhuang) (Ping timeout: 252 seconds)
[09:06:44] <InPhase> Juliu: That depends on your subfield.
[09:06:53] <Juliu> I am not working since years
[09:06:57] <Caffeinated> haha
[09:07:01] <Juliu> So I aint shipping no code
[09:07:01] <CoJaBo> We actually have 100% line coverage in our test suite for this. For an undocumented large-scale PHP project that dates back to the turn of the milenium.
[09:07:33] <InPhase> CoJaBo: It needs to be said more often...  line coverage is overrated.  As you've seen.
[09:07:50] <CoJaBo> They literally said this couldn't be done. And it was done. And today, it failed =D
[09:08:13] <Juliu> Maybe CoJaBo works for some evil company and their goal is to intentionally destroy all perfect products
[09:08:23] <CoJaBo> Juliu: Oh they are deffo evil
[09:08:32] * Juliu nods
[09:08:40] <edgar-rft> I don't need tests - Im a boss - I know I'm good - if you don't agree you're fired!
[09:08:45] <InPhase> Juliu: They evaluated all of their programmers, identified the corrupted ones, and then fired the good ones.
[09:08:46] <CoJaBo> Juliu: I just inherited this project's sister; another behemoth that until last week still had to support PHP 4.1
[09:08:57] <Caffeinated> edgar-rft: lol, Dilbert-esq
[09:09:00] <Juliu> InPhase, lol
[09:09:22] <Juliu> InPhase, that sounds like what the CDC and WHO and the government is doing
[09:09:32] <Juliu> Fire all honest people
[09:09:35] *** Joins: aniruddha (uid340443@id-340443.charlton.irccloud.com)
[09:09:55] <Juliu> CoJaBo, how "nice"
[09:10:02] *** Quits: hexingb (~hexingb@2409:8900:2721:a7e2:2443:a3d2:e3ad:e0e6) (Ping timeout: 245 seconds)
[09:10:07] <InPhase> Juliu: Well it happened in Florida at least.
[09:10:25] <CoJaBo> Juliu: I tried to enable strict typing and promptly ran into one of the weirdest PHP gotchas I've ever hit
[09:10:41] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-347a-2581-fcf8-c1f7.res6.spectrum.com) (Quit: jarthur)
[09:10:57] *** Joins: hexingb (~hexingb@101.236.65.176)
[09:11:00] <CoJaBo> The modules for this thing are written in such a bizarre way. Each is its own stand-alone executable that can be run by, e.g., ./somemodule.php
[09:11:10] <CoJaBo> But you can also include(somemodule.php)
[09:11:25] <Caffeinated> I remember learning php back in the early 90s and thought "this is gonna be great!" -- it wasn't
[09:11:39] <CoJaBo> Somehow, this works fine. Until you try to enable strict typing, which causes a compile error =D
[09:11:41] <InPhase> Caffeinated: It was, for a time, for a purpose.
[09:11:53] <Caffeinated> InPhase: nod.  thats true
[09:13:13] <Caffeinated> i think of php as the "zoot sisters" in the film Monty Python and the Holy Grail :P
[09:14:49] <Juliu> CoJaBo, I have no clue about PHP, sorry
[09:15:47] <pulse> PHP is like when you try to put on a sock and you see it has a big hole
[09:15:55] <pulse> and then you go find another sock and it also has a hole
[09:15:57] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 245 seconds)
[09:16:03] <pulse> then you're just disappointed
[09:16:06] <CoJaBo> Juliu: It's basically a really stupid design flaw of the app, that interacts with PHP's design weirdness in a very odd way =D
[09:16:15] <Caffeinated> pulse: and you keep putting the "holey" socks on over top of eachother
[09:16:30] <pulse> well, you can balance the holes out sure
[09:16:36] <pulse> but then your feet are way too warm
[09:16:41] <Caffeinated> at least they're "matching" socks :P
[09:16:49] <Juliu> CoJaBo, poor you
[09:17:58] <Juliu> CoJaBo, at least you have a job
[09:18:29] <Caffeinated> i remember seeing an actor, Davit Tennant, on the Graham Norton show..Tennant had finally found socks with matching Day-of-the-week printed on each one heh
[09:18:41] <Caffeinated> thought that was funny 
[09:19:16] <CoJaBo> I've just inherited another app developed for PHP 4.1; that's not a typo
[09:23:13] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Ping timeout: 252 seconds)
[09:23:39] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[09:24:56] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-347a-2581-fcf8-c1f7.res6.spectrum.com)
[09:25:00] *** Quits: juliaEnv (~juliaEnv@ip-86-49-255-181.net.upcbroadband.cz) (Quit: Going offline, see ya! (www.adiirc.com))
[09:26:09] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:7102:ec92:2168:943d)
[09:26:39] *** Joins: lunarkitty (uid501895@user/pyra)
[09:28:47] <cis> back when php was really bad
[09:29:40] <CoJaBo> That's insluting to the word "bad"
[09:30:02] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:31:07] <cis> don't forget your mysql_real_escape_string
[09:31:17] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:31:26] <pulse> stop giving me flashbacks
[09:31:36] <cis> oh wait, that was 4.3.0
[09:31:39] <CoJaBo> cis: Nobody ever used that tho
[09:31:48] <CoJaBo> They just used magic_quotes extensively
[09:32:05] <cis> you'll have to content yourself with the original mysql_escape_string
[09:32:45] <CoJaBo> I still ocasionally inherit projects thar are RIDDLED with stripslashes
[09:33:56] <cis> and who can forget the T_PAAMAYIM_NEKUDOTAYIM
[09:33:59] <CoJaBo> If I see stripslashes(), addslashes(), eval(), or extract() anywhere in the codebase, I immediately septuple all time and cost estimates to do anything to it.
[09:34:10] <cis> hah, good plan
[09:36:57] <CoJaBo> cis: I actually kind of miss randomly getting error messages in hebrew and japanese
[09:37:25] <cis> yeah, it gave it some flavor, and those errors were easy to google
[09:37:28] <CoJaBo> One of our other platforms had a habit of doing the latter, usually in the form of hiarious but useless translations
[09:38:19] <CoJaBo> cis: This one was much, much harder to google:     Prostitute death in the land of Neko Hikaru.
[09:38:27] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[09:39:02] *** Quits: jamea (~jamea@177.239.87.39) (Ping timeout: 256 seconds)
[09:39:06] *** Quits: soapsudsxx (~soapsudsx@141.193.188.154) (Remote host closed the connection)
[09:39:37] <cis> ah, a classic of eastern folklore
[09:40:14] <CoJaBo> One of the most amusing tropes was that "EULA" or equivelant was invariable mutated into "thong"
[09:40:42] <CoJaBo> This made reading license agreements a blast, even if you never know what you were agreeing to
[09:41:02] <cis> so, not much different then
[09:42:05] <CoJaBo> lol
[09:42:27] *** Joins: silasfox36 (~silasfox@xdsl-85-197-57-82.nc.de)
[09:42:34] *** Quits: silasfox36 (~silasfox@xdsl-85-197-57-82.nc.de) (Client Quit)
[09:42:46] *** Joins: mei (~mei@user/mei)
[09:43:30] *** Quits: mei (~mei@user/mei) (Client Quit)
[09:46:15] *** Quits: Yonle (~Yonle@user/yonle) (Quit: leaving)
[09:46:52] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:7102:ec92:2168:943d) (Read error: Connection reset by peer)
[09:47:38] *** Quits: homura (root@2605:6400:c847:1486::6841) (Changing host)
[09:47:38] *** Joins: homura (root@user/homura)
[09:49:17] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[09:49:59] *** Joins: mei (~mei@user/mei)
[09:54:05] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[09:55:16] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[09:55:27] *** Joins: flynn (~mcbloch@user/flynn)
[09:55:38] *** Joins: albumin (~albumin@110.224.198.21)
[09:55:52] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 245 seconds)
[09:59:10] <albumin> does anybody use a code hosting software alternative to GitHub? i used to use GitHub in the past but since getting acquired, it has been taking objectionable decisions which make the workflow difficult. does anybody have any suggestions?
[09:59:38] <webNET4> source forge
[10:00:12] <Juliu> I dont use any version control at all :D
[10:00:32] <Caffeinated> *slow clap*
[10:04:41] <albumin> webNET4: do you use it?
[10:04:47] <webNET4> no
[10:05:02] *** Joins: stoneware (~stoneware@user/stoneware)
[10:05:30] <albumin> webNET4: i see.
[10:06:24] <webNET4> i use it for downloading code, not for hosting
[10:08:59] <sleepingkirby> I've used source forge. Though I mainly use it to mirror github for pretty much the same reason you want to get off github
[10:09:06] <pulse> albumin, you can host your own git server
[10:09:28] <alefir> albumin: I've self-hosted GitLab, and also done the base git server with the included GitWeb thing
[10:10:23] <cis> you could try https://sourcehut.org/
[10:10:24] <bayaz> Title: sourcehut - the hacker's forge 
[10:14:32] *** Quits: Thedarkb-Work (~Thedarkb@62.232.253.82) (Remote host closed the connection)
[10:14:51] *** Joins: Thedarkb-Work (~Thedarkb@62.232.253.82)
[10:21:05] *** Joins: Samian (~Sami@2620:10d:c091:480::1:86be)
[10:22:13] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-347a-2581-fcf8-c1f7.res6.spectrum.com) (Quit: jarthur)
[10:25:03] *** Quits: compscipunk (~compscipu@107-214-234-232.lightspeed.sndgca.sbcglobal.net) (Quit: WeeChat 3.2)
[10:26:15] <furrykef> albumin: bitbucket?
[10:26:32] <furrykef> I've been using them for private projects even before MS acquired github
[10:28:40] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 252 seconds)
[10:29:01] *** Quits: hexingb (~hexingb@101.236.65.176) (Read error: Connection reset by peer)
[10:33:03] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Remote host closed the connection)
[10:33:57] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[10:33:57] *** Quits: euouae (~euouae@user/euouae) (Ping timeout: 256 seconds)
[10:34:20] *** Quits: envex (~envex@cpe-173-91-189-33.neo.res.rr.com) (Remote host closed the connection)
[10:34:43] *** Joins: envex (~envex@cpe-173-91-189-33.neo.res.rr.com)
[10:35:26] *** Joins: hexingb (~hexingb@103.37.140.36)
[10:41:25] *** Quits: codingcampbell (~codingcam@user/codingcampbell) (Quit: codingcampbell)
[10:42:36] *** Joins: codingcampbell (~codingcam@user/codingcampbell)
[10:48:50] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[10:51:02] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:b890:4924:7500:5018) (Quit: Quit)
[10:57:11] *** Joins: fweht (uid404746@id-404746.tooting.irccloud.com)
[11:02:14] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:03:28] *** Quits: hexingb (~hexingb@103.37.140.36) (Read error: Connection reset by peer)
[11:04:15] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[11:07:37] *** Joins: Pickchea (~private@user/pickchea)
[11:07:58] *** Joins: Akronymus (~Akronymus@85.31.8.180)
[11:08:11] <Akronymus> Hello peeps.
[11:08:23] <webNET4> yoooo akro
[11:08:44] *** Joins: hexingb (~hexingb@103.37.140.36)
[11:11:35] <webNET4> whats the good word?
[11:11:41] <pulse> my sweater doesn't fit
[11:11:56] <Akronymus> webNET4 another day of reading the ABL docs
[11:12:02] <Akronymus> So another wasted day.
[11:12:36] <webNET4> american bat languaghe?
[11:12:38] <Akronymus> Did you know it has a "keyword-all" function?
[11:12:55] <Akronymus> Because data that coincides with a keyword apparently makes problems.
[11:13:05] <Akronymus> advanced business language
[11:13:06] <albumin> thanks for the replies.
[11:13:10] <Akronymus> AKA openedge
[11:13:13] <Akronymus> AKA progress
[11:13:42] <Akronymus> Also: ABL allows you to shorten basically any keyword
[11:13:50] <Akronymus> While still being that keyword.
[11:14:11] <Akronymus> So, accumulate and accum are essentially the same word.
[11:14:46] <webNET4> yo that IS batty
[11:15:55] <Akronymus> "Returns a character value that indicates whether a string is an ABL keyword.This function returns all keywords
[11:15:56] <Akronymus>  and does not distinguish between reserved or unreserved keywords"
[11:16:15] <webNET4> you could learn the ABL and start ABM to lay IBM to waste
[11:16:35] <Akronymus> `In some cases, the abbreviation for a keyword is also a keyword. For example, if expression is
[11:16:35] <Akronymus>  "def" (the abbreviation for DEFINE) or "col" (the abbreviation for COLUMN), the KEYWORD function
[11:16:36] <Akronymus>  returns the values "def" and "col", respectively`
[11:17:12] <Akronymus> Oh right, it doesn't even return a true or false
[11:17:24] *** Joins: mrig (~mrig@user/mrig)
[11:17:27] <Akronymus> But rather the string if it is a keyword, or a empty one if it isn't.
[11:17:58] <Akronymus> https://i.kym-cdn.com/entries/icons/facebook/000/012/073/7686178464_fdc8ea66c7.jpg webNET4
[11:17:59] <bayaz> Type: image/jpeg Size: 44.7 kB 
[11:18:18] <Akronymus> And no, I am not doing that out of my own interest.
[11:18:22] <Akronymus> Need it for work.
[11:23:04] *** Joins: jaysicks (~jaysicks@91-82-168-11.pool.digikabel.hu)
[11:23:24] *** Joins: Hax0r (~Hax0r@51.252.26.81)
[11:23:32] <Jck_true> Oh god. The code is stored in SourceSafe.... :|
[11:25:18] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:b890:4924:7500:5018)
[11:25:51] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[11:25:57] *** Quits: EmOwl- (~EmOwl-@2404:4402:17b3:bc00:2fed:62a0:e176:c11d) (Ping timeout: 245 seconds)
[11:26:37] *** Joins: absc (~absc@dynamic-adsl-94-34-168-146.clienti.tiscali.it)
[11:26:45] *** Joins: EmOwl- (~EmOwl-@202.150.113.111)
[11:28:12] *** Joins: rtur (~weechat@mail.rtur.org)
[11:28:54] *** Quits: gggp (~textual@60.10.194.45) (Remote host closed the connection)
[11:29:18] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[11:32:06] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 244 seconds)
[11:32:08] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[11:33:11] *** Quits: albumin (~albumin@110.224.198.21) (Quit: leaving)
[11:34:15] *** Joins: Enitin (~Enitin@82.102.22.84)
[11:34:17] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 245 seconds)
[11:36:15] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:36:28] *** Joins: Yonle (Yonle@user/yonle)
[11:36:37] <beaky> i love rust
[11:36:52] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[11:36:56] <beaky> what are some warts of rust's design like the infamous turbofish ::<>
[11:42:43] *** Joins: Yonle__ (~Yonle@user/yonle)
[11:43:00] *** Joins: gggp (~textual@60.10.194.45)
[11:43:37] *** Quits: BGL (ninety@75-149-171-58-Washington.hfc.comcastbusiness.net) (Ping timeout: 248 seconds)
[11:43:45] *** Quits: Yonle (Yonle@user/yonle) (Remote host closed the connection)
[11:45:11] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[11:46:07] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[11:46:49] <deniska> beaky: {} and semicolons obviously
[11:47:54] <beaky> yes why didnt rust go with whitespace only like python
[11:48:07] <beaky> python is the most pythonic programming language
[11:49:28] <Akronymus> beaky because pythons implementation of significant whitespace sucks
[11:49:44] <Akronymus> Because it is combined with dynamic typing
[11:49:56] <Akronymus> And being statement based
[11:51:06] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[11:52:10] *** Joins: brabrax (~brabrax@user/brabrax)
[11:53:49] <jinsun> but why didn't they go whitespce only like F# ?
[11:55:51] <Akronymus> jinsun No idea.
[11:55:52] <jinsun> they have a good standard formatter though, so it doesn't matter much
[11:56:01] <Akronymus> f#'s whitespace just works
[11:56:06] <Akronymus> As opposed to pythons.
[11:56:09] *** Quits: Yonle__ (~Yonle@user/yonle) (Remote host closed the connection)
[11:56:52] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:57:18] *** Quits: xff0x (~xff0x@2001:1a81:5329:9c00:3941:fe2c:440c:b590) (Ping timeout: 256 seconds)
[11:57:55] *** Quits: sj1k (~debian@user/sj1k) (Quit: WeeChat 3.0.1)
[11:58:08] <Akronymus> Btw: Does anyone know where to get qwerty keycaps for a european keyboard?
[11:58:13] *** Joins: xff0x (~xff0x@2001:1a81:5329:9c00:532c:18c2:3151:8d2a)
[11:58:32] *** Quits: DasBrain (DasBrain@user/dasbrain) (Killed (NickServ (GHOST command used by DasBrain_!~DasBrain@user/dasbrain)))
[11:58:38] *** Joins: DasBrain_ (~DasBrain@user/dasbrain)
[12:00:36] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:04:29] *** Quits: Pixi_ (~Pixi@user/pixi) (Quit: Leaving)
[12:07:10] *** Joins: Pixi (~Pixi@user/pixi)
[12:08:10] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[12:08:54] *** Joins: Enitin (~Enitin@82.102.22.84)
[12:09:35] *** Quits: quartz (~nick@2603-8001-7700-61a4-0000-0000-0000-0eff.res6.spectrum.com) (Quit: WeeChat 3.2)
[12:11:22] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[12:11:22] *** Quits: sandman13 (sandman13@jujube.ircnow.org) (Ping timeout: 245 seconds)
[12:12:15] *** Joins: Rounin (~david@84.212.130.215)
[12:13:10] *** Quits: alefir (~alefir@84.17.45.14) (Ping timeout: 252 seconds)
[12:13:46] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[12:14:01] *** Joins: sandman13 (sandman13@jujube.ircnow.org)
[12:14:03] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[12:14:56] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[12:15:39] <mrig> Im sure that you could get some good info in #mechboards
[12:19:00] *** Joins: Mija (~Mija@user/mija)
[12:19:22] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[12:22:22] <mrig> Oh I am so annoyed that I cant do what I would like with inkscape, and the only solution that seems logical would be to learn c++ :(
[12:22:51] <Akronymus> What ARE you trying to do?
[12:22:53] <mrig> and try to implement something that approaches the need.
[12:23:04] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[12:23:28] <mrig> Akronymus: make logically sound simple SVG image assets that are easily organised and used.
[12:23:47] <Akronymus> Use a SVG editor?
[12:23:49] <mrig> structure SVG images for use on the web
[12:24:05] <mrig> Akronymus: I just mentioned inkscape.
[12:24:14] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 252 seconds)
[12:24:24] <Akronymus> Isn't inkscape mainly a raster one?
[12:24:33] <Akronymus> Nvm
[12:24:53] <mrig> nope, it is good for SVG but is mouse oriented, the code produced is very messy.
[12:25:16] <Akronymus> Oh, it tries to follow your mouse?
[12:25:20] <mrig> and the facilities for asset management are quite poor, and it crashes regularly.
[12:25:24] <Akronymus> Rather than defining the curves yourself?
[12:25:51] <DPA> I just use a text editor to write my SVGs.
[12:25:52] <mrig> Akronymus: the logic of the UI for the actual code is for mouse use
[12:26:06] <Akronymus> Oh gotcha.
[12:26:25] <mrig> DPA: me to, but for scribing some things the visual window with a mouse is better.
[12:26:30] <mrig> just not for all things.
[12:27:15] <mrig> Was warned by a forum member not to try to do anything with the Inkscape code in the past, not sure that they are particularly reliable source though.
[12:28:50] <mrig> I was just so enjoying coding some things in very simple C, now must get back to my SVG parser, and am balking at the thought because the job that I actually need to do is in another field entirely and I need to make some SVG's before getting stuck into that.
[12:29:32] <mrig> ... and I hate the idea of subscribing to some tec company to hire a pen and paper.
[12:29:52] <mrig> dang the modern world is as mess :D
[12:30:00] <beaky> rewrite the modern world in rust
[12:30:31] <DPA> JS already hase parsers & stuff for SVG.
[12:30:38] <DPA> *has
[12:30:40] <mrig> well rewriting inkscape does spring to mind, but I'm not sure that rust would be the best language for me.
[12:30:48] <mrig> DPA: not going anywhere near JS
[12:30:52] <mrig> hate it.
[12:31:00] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 244 seconds)
[12:31:32] <mrig> it is for graphic output, of objects; May use that in a go SVG editor, to get input from the browser though.
[12:31:39] <mrig> input and output.
[12:31:54] *** Quits: V (~v@anomalous.eu) (Ping timeout: 250 seconds)
[12:32:16] <DPA> JS can be really nice for quickly making some simple tools & throw away things.
[12:32:23] <mrig> but to use it as a language to write in to me is just impossible, the thought abhorrent.
[12:32:31] <mrig> DPA: I like well crafted permanent things.
[12:32:46] <mrig> Don;t think that throwaway culture is sustainable.
[12:33:43] *** Joins: mobidrop (~mobidrop@user/mobidrop)
[12:33:57] <mrig> Adobe stuff is nice but I cant run that, and will not subscribe to it for reasons stated.
[12:34:01] <Akronymus> Pretty sure svg is just a xml
[12:34:08] <mrig> sure yes it is.
[12:34:16] <DPA> If I did everything properly, I'd get nowhere. I just need the things I actually want to make to be well done.
[12:34:24] <mrig> I am working through the SVG specs at the moment so that I can code something.
[12:34:35] <mrig> Just not particularly enjoying doing it.
[12:34:38] <Akronymus> Implementing to spec is fairly easy IMO.
[12:34:44] <mrig> but it has to be done to code something sane.
[12:34:45] <Akronymus> IME*
[12:34:52] <mrig> sure yes it is.
[12:35:08] <mrig> The spec is disorganised and there are 3 of them.
[12:35:15] <Akronymus> Oh.
[12:35:32] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) ()
[12:35:40] <mrig> so implementing which part is the question and whether or not to translate between different versions etc.
[12:35:42] <Akronymus> I had the experience that I could just start at the first entry in the spec and traverse it.
[12:35:44] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[12:35:47] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[12:36:05] <mrig> Ah no, I've not had that joy here, least I've not found how I might do that.
[12:36:41] <mrig> Systematic going through a spec that is well organised and clear would be a pleasure, I love that sort of thing.
[12:37:24] <mrig> Could be that I'm not allowing enough time for it is sink in before coding though. From inexperience.
[12:37:31] <Akronymus> Just going through the spec would usually yield working, but suboptimal code.
[12:37:54] <mrig> So coding things and then realising aspects that I need to change and wanting to start again.
[12:37:58] <Akronymus> Altough, you often just don't really need performance.
[12:38:24] <smallville7123> how do i fix this?     im using ExternalProject_Add             ninja: error: 'freetype-cmake/EXTERNAL_PROJECT_INSTALLED_FILES/lib/libz.a', needed by 'OUTPUT/libzlib-cmake.so', missing and no known rule to make it
[12:38:37] <mrig> Well for this performance does not matter in the slightest, I tend towards elegance rather than performance.
[12:38:51] <mrig> just because it is easier to remember and read.
[12:39:00] <Akronymus> Any constraints on the language you can use?
[12:39:13] <mrig> cant code it otherwise, my brain does not hole that much info at one time :||
[12:39:51] <mrig> What do you mean by constraints?
[12:40:08] <mrig> There is a Tiny version, could be that is a what you mean.
[12:40:24] <Akronymus> Do you have to use a specific language? Do you have to use a specific ecosystem, etc
[12:40:45] <mrig> I've not yet really taken a look at it as I'm still reeling from discovering how wrong my current thought on the attributes is.
[12:41:05] <mrig> Akronymus: I am using go, just because it seems like a nice language for this sort of thing.
[12:41:10] <deniska> Inkscape initially wanted to do 1.0 release when they fully implement svg spec, but they decided against that idea
[12:41:34] <mrig> It is the language that I've been working with for a while and seems well adapted to this kind of thing.
[12:41:46] <mrig> deniska: oh that's interesting.
[12:43:25] <mobidrop> google recommends google go
[12:43:40] <smallville7123> how do i fix this?
[12:43:43] <smallville7123> ninja: error: 'freetype-cmake/EXTERNAL_PROJECT_INSTALLED_FILES/lib/libz.a', needed by 'OUTPUT/libzlib-cmake.so', missing and no known rule to make it
[12:43:46] <smallville7123> im using ExternalProject_Add
[12:43:49] <smallville7123> this builds with xcode but it fails in android studio 🙁
[12:43:53] <smallville7123> this is my cmake file https://github.com/mgood7123/freetype-cmake/blob/main/CMakeLists.txt
[12:43:55] <bayaz> Title: freetype-cmake/CMakeLists.txt at main · mgood7123/freetype-cmake 
[12:44:27] <Akronymus> https://github.com/arrayfire/arrayfire/issues/1497 smallville7123
[12:44:28] <bayaz> Title: Ninja error: "missing and no known rule to make it" · Issue #1497 · arrayfire/arrayfire 
[12:45:03] <Akronymus> https://stackoverflow.com/questions/49286725/cmake-ninja-error-android-missing-and-no-known-rule-to-make-it-although-file
[12:45:04] <bayaz> Title: Cmake Ninja error android. "missing and no known rule to make it" although file exists 
[12:45:34] <mrig> mobidrop: coders recommend finding any environment in which you are not restricted by the resources of the company for whom you work, and your creativity is appreciated and not flogged out of you; If you want to write anything that lasts.
[12:45:48] <smallville7123> find /Users/smallville7123/StudioProjects/Graphical-Tool-Kit/app/.cxx/Debug | grep INSTALLED
[12:45:48] <smallville7123> returns nothing
[12:46:07] <mrig> what business people recommend is utterly irrelevant, it would seem for the most part academics too.
[12:46:48] * Akronymus recommends f#
[12:46:53] <mrig> :)
[12:47:30] <Akronymus> https://pkg.go.dev/github.com/ajstarks/svgo mrig
[12:47:30] <bayaz> Title: svg package - github.com/ajstarks/svgo - pkg.go.dev 
[12:47:36] <mobidrop> mrig, I can think of few other languages that are so effective at flogging out creativity other than golang or Java
[12:47:44] <mobidrop> mrig, but that might just be my opinion :)
[12:47:58] <mrig> mobidrop: opine away! :D
[12:48:11] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[12:48:21] <pyzozord> Engineers amatures. I think those are the people worth listening to
[12:48:29] <mrig> mobidrop: depends on the mindset of the user for sure.
[12:48:31] <Akronymus> https://github.com/ajstarks/svgo/blob/master/codepic/codepic.go https://github.com/ajstarks/svgo/blob/master/svgrid/svgrid.go specifically those mrig
[12:48:32] <bayaz> Title: svgo/codepic.go at master · ajstarks/svgo 
[12:48:32] <bayaz> Title: svgo/svgrid.go at master · ajstarks/svgo 
[12:49:00] <Akronymus> mobidrop java is painful
[12:49:09] <Akronymus> And NOT a good language for beginners.
[12:49:17] <Akronymus> Because then they have to unlearn it
[12:49:31] <mobidrop> mrig, yeah if you find comfort in the feature set of the language then it's a good fit
[12:50:07] <mrig> Different languages tend towards different thought patterns, seems that we have predilections.
[12:50:13] <mrig> I like go because it is like C
[12:50:15] *** Joins: diamondbond (~diamondbo@175.157.234.192)
[12:50:44] *** Joins: BGL (sixty@75-149-171-58-Washington.hfc.comcastbusiness.net)
[12:50:46] <mobidrop> I don't like go because of its awkward error handling and poor type system
[12:50:46] <Akronymus> And I think that there is enough empirical evidence that learning a functional language first is the way to go.
[12:51:11] <mobidrop> Akronymus, for me it was hard to learn a new functional programming language, but I'm glad I did
[12:51:26] <Akronymus> mobidrop because you had to unlearn oop/procedural?
[12:51:26] <mrig> coding a smidge of C again, I forget just how much I like it. More so now that working with GO seems to have taught me some of the tings about code structure that I was getting frustrated with about C, that you can't easily learn when using build systems.
[12:51:43] <Akronymus> From FP to PP or OOP is much easier than the other way around.
[12:52:00] <mobidrop> Akronymus, mostly because I had to unlearn imperative style and had to think in functions
[12:52:56] <mobidrop> FP has a higher skill ceiling as well, you can get increasingly abstract
[12:53:02] <mrig> Akronymus: thanks for the links I will take a look, likely to keep doing what I am doing though else I will never understand it.
[12:53:08] <mobidrop> whereas OOP / imperative style has more boilerplate code, more filler code
[12:53:11] <Thedarkb-Work> I've got an issue in a Go program I'm working on where doing a DB insert inside a http request handler function is making it die.
[12:53:15] <Thedarkb-Work> I am deeply confused.
[12:53:36] <mrig> mobidrop: I like go because of its error handling and the way that the types are so strict.
[12:53:41] <Akronymus> mobidrop IMO part of the skill of FP is when to stop abstracting further.
[12:53:42] <smallville7123> Akronymus: those do not help
[12:53:43] *** Quits: neocow (~neocow@185.38.14.210) (Quit: The Lounge - https://thelounge.chat)
[12:53:49] <mrig> when dealing with time you need to have very strict types.
[12:54:05] <Akronymus> Because abstraction is meant to enable a different way to reason about something rather than just hiding the implementation
[12:54:08] <mrig> and the type system for that is superb.
[12:54:09] <pyzozord> C is just fun. It's the right amount of safety and excitement :P
[12:54:16] <mobidrop> Akronymus, yes it can get weird if you do it too much
[12:54:18] *** Joins: neocow (~neocow@185.38.14.210)
[12:54:27] <Akronymus> HKT definitely are a nice to have.
[12:54:42] <Akronymus> But they can enable you to just go DEEP into type theory
[12:54:45] *** Joins: Enitin (~Enitin@82.102.22.84)
[12:54:55] <mrig> pyzozord: I like the 'mechanics' of C, go does cage that in somewhat.
[12:55:03] <mrig> but it is all still there if you want it.
[12:55:32] <Thedarkb-Work> Wait, I think I've gotten to the bottom of it.
[12:55:38] <pyzozord> mrig: do you mean pointers?
[12:55:45] <mrig> pyzozord: I get in a fuzzy mess with C due to the dependencies and packaging, am still learning about that.
[12:55:57] <mrig> pyzozord: yes the pointer arithmetic.
[12:56:00] <Akronymus> https://wiki.haskell.org/Zygohistomorphic_prepromorphisms mobidrop pyzozord
[12:56:01] <bayaz> Title: Zygohistomorphic prepromorphisms - HaskellWiki 
[12:56:16] <mrig> pyzozord: but you can still do that in GO just a little differently.
[12:56:52] <pyzozord> mrig: I'm thinking about language design where there is no pointers. Not even heap memory. But both those things can be recreated via stack. 
[12:57:05] <mobidrop> mrig, my critique of the golang type system is not due to its strictness but the types that you are allowed to express in it is limited
[12:57:14] <mrig> Not sure that I understand what you mean pyzozord 
[12:57:26] <DarkTrick> ... Could you write FizzBuzz in one "line" of c-code? I.e. using only one semicolon
[12:57:32] <mrig> mobidrop: oh due to generics?
[12:57:39] <mobidrop> you can't even write a generic linked list :D, it's a little too much like C in that regard
[12:57:45] <pyzozord> mrig: Meaning a language where you declare variables on stack, like normal but that is the only thing you do
[12:57:55] <mrig> well you can, it is just very slightly slower.
[12:58:14] <mrig> if you want it to be as fast as C then you do it custom for the type.
[12:58:30] <mrig> but the difference is only an order of 10 *
[12:58:33] <mobidrop> Akronymus, haha wtf
[12:58:33] <pyzozord> mrig: if you need dynamic memory, you declare big array in a parent function and you pass address to that array and it's size to the child functions. And child functions can use this array however they like, for example as heap
[12:58:48] <Akronymus> https://www.quora.com/What-are-Zygohistomorphic-prepromorphisms-and-how-are-they-used mobidrop
[12:59:08] <Akronymus> It is kinda a haskell joke
[12:59:13] <pyzozord> the stack is the ultimate garbage collection tool
[13:00:24] <pyzozord> We are overthinking languages. We added heap. That was useful but caused problems. Then we added GC. That was useful but caused problems. Now we add compile time memory safety, that is useful but will cause problems. Too much adding.
[13:00:28] <pyzozord> We need to remove.
[13:00:45] *** kmh_ is now known as oopsitsmeoagain
[13:01:00] * mrig is pondering rougelikes now.
[13:01:17] <mrig> does not care much which language, so long as it makes sane use of matrices.
[13:01:29] <mobidrop> mrig, Rust can do generics + monomorphization to get both the performance and the nice type system :)
[13:01:33] <mrig> all the abstraction is far to far removed from reaity.
[13:01:58] <mrig> mobidrop: I've not tried rust yet, am a little scared by how much it has kept changing.
[13:02:20] <mrig> being a slow but sure learner, this is not a god thing in a language for me.
[13:02:27] <pyzozord> mrig: yes! Too much abstraction. Abstractions are supposed to work for you, not you for abstractions.
[13:03:07] <mrig> pyzozord: abstractions hijack humans for their own selfish needs of propagation.
[13:03:20] <mrig> They take over their minds like a virus :D
[13:03:22] <smallville7123> why does add_dependencies(zlib-cmake external_project_zlib) do nothing on android?
[13:03:35] <mrig> That could make a great theme for a game :D
[13:03:58] *** Joins: plastico (~plastico@neomutt/plastico)
[13:04:20] <mrig> The standard bearers delight is to serve an abstraction :D
[13:04:34] <mrig> some kind of coding wars game.
[13:05:02] * mrig serves the dark matrices.
[13:05:46] <mrig> That said, I have been planning to take a short C++ game writing tutorial.
[13:06:17] <mrig> just to get some momentum going in some other area, anything to avoid analysing a 'live' specification.
[13:06:19] <pyzozord> I think abstractions are good for academics. And they may come up with useful tool from that. But for craftsmen the real world is the anchoring point. It if doesn't help solve real world problems well and fast, it's not useful
[13:06:52] <pyzozord> It's the difference between creating theories about machines and creating machines
[13:06:57] <mrig> the guardians of the knowledge do need some kind of framework apparently.
[13:07:17] <mrig> For some it is intuitive though, it would seem.
[13:07:37] <mrig> Man I could get into writing a game about this stuff.
[13:07:50] <Stefan26> mrig vs mawk
[13:08:03] <mrig> Battling academics casting magic spells upon each other :D
[13:08:09] <mrig> Stefan26: why mawk?
[13:08:10] *** Quits: LuKaRo_ (~LuKaRo@p57b15425.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[13:08:25] <Stefan26> you two are both pretty similar and have a name like mXYZ
[13:08:25] * mrig scratches head and tries to follow the context leap.
[13:08:31] <mrig> ah!
[13:08:31] *** Quits: Spydar007 (~spydar007@user/spydar007) (Remote host closed the connection)
[13:08:50] <pyzozord> it would make a good D&D module. With wizards vs dwarfs or something
[13:08:53] *** Joins: Spydar007 (~spydar007@user/spydar007)
[13:09:13] <mrig> Well a mirror of that but with a humorous take on modern life added in.
[13:09:18] <pyzozord> More like gnomes, gnomes are the inventive ones. Always making funny steampunk machines
[13:09:22] <mrig> Would be fun.
[13:09:41] <mrig> elves are the best creative ones though.
[13:09:52] *** Joins: independent__ (~independe@95.144.68.39)
[13:09:56] <mrig> dwarfs and elves hate each other :)
[13:10:01] <pyzozord> yeah but that's singing and writing poems kind of creative
[13:10:09] *** Joins: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk)
[13:10:09] *** Quits: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk) (Changing host)
[13:10:09] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[13:10:18] <mrig> well the orcs are elves too
[13:10:25] <mawk> what did I do
[13:10:32] <mrig> mawk: Hello :)
[13:10:42] *** Joins: LuKaRo (~LuKaRo@p4fc334cf.dip0.t-ipconnect.de)
[13:10:44] <Stefan26> you can contribute to Battle for Wesnoth, that's an open source game in C++ with dwarves vs elves etc with wizards
[13:10:58] <mrig> mawk: not sure, you best ask Stefan26 :)
[13:10:59] <pyzozord> I've been meaning to play that game. It looked cool
[13:11:05] <mawk> hi
[13:11:16] <Stefan26> hey mawk!
[13:11:22] <beaky> mature optimization the opposite of premature optimization http://carlos.bueno.org/optimization/
[13:11:30] <bayaz> Title: The Mature Optimization Handbook 
[13:11:43] <mrig> pyzozord: elves work with wood and make musical instruments, bows and fine architecture in the Forrest.
[13:11:46] <DPA> DarkTrick: for(int i=1; i<=100; i++){printf(((const char*[]){"%d\n","fizz\n","buzz\n","fizzbuzz\n"})[(!(i%5))*2+!(i%3)],i);}
[13:11:48] <mrig> forest rather
[13:11:59] <Stefan26> check out https://www.aosabook.org/en/wesnoth.html for it's architecture, but maybe you want to start with small own game
[13:11:59] <bayaz> Title: The Architecture of Open Source Applications: Battle for Wesnoth 
[13:12:16] <mrig> dwarfs are greedy and chase wealth all the time.
[13:12:48] <DarkTrick> DPA: very interesting!!
[13:12:52] <beaky> yes just like in dwarf fortress
[13:12:55] <DarkTrick> DPA thanks for participating :)
[13:13:15] <pyzozord> dwarf fortres is super cool too, although I never got into it. Seems too complex
[13:13:24] <DarkTrick> DPA: I had a similar approach, but got stuck
[13:13:47] <DarkTrick> Something like printf ("%s%s\n", ("fizz    " + (i%3)*4),("buzz            " + (i%5)*4));
[13:14:35] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[13:16:13] <Stefan26> how come i occasionally write it's instead of its, even though im perfectly aware of when to use which
[13:16:28] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 244 seconds)
[13:17:36] <mrig> pyzozord: the video that you linked the other day to a guy making roguelikes was pretty inspiring.
[13:18:06] <DPA> You could also use "?:"    i%5?(i%3?printf("%d\n",i):puts("fizz\n")):(i%3?puts("buzz\n",i):puts("fizzbuzz\n"))
[13:18:37] *** Joins: aradesh (~aradesh@user/aradesh)
[13:19:12] <pyzozord> mrig: yes, and the roguelike dev community is also pretty big and interesting. I think I watched every single video on youtube about roguelike development worth watching. Check out "
[13:19:20] <pyzozord> "Roguelike Celebration" youtube channel
[13:19:56] <mrig> Will do.
[13:19:56] *** Joins: orondo (~orondo@user/orondo)
[13:19:58] <DarkTrick> DPA, did you think about this before or did you just come up with these solutions?
[13:21:36] <DPA> The first one I wrote a few weeks ago in the #c channel. The second one I just thought up now.
[13:21:43] <mrig> I wish that there was some other way to get a similar game writing experience as that of the terminal, seems that tiling in SDL is the way to go for that.
[13:22:19] <mrig> Go has bindings for SDL now too, not sure how I feel about that, seems crazy to require two languages to interface with the OS
[13:22:22] *** Quits: Samian (~Sami@2620:10d:c091:480::1:86be) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:23:17] <mrig> and of course dwarfen greed awakens monsters, now that is easy to model with climate.
[13:23:32] <Akronymus> pyzozord https://www.youtube.com/watch?v=o_PBfLbd3zw
[13:23:33] <bayaz> Title: Caves of Qud Review 
[13:24:44] <pyzozord> Akronymus: Saw it
[13:25:14] <DarkTrick> DPA: how long did it take you?
[13:25:54] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:26:59] <DPA> Not long at all. I don't even need to think about it. I just write it down.
[13:29:36] *** Parts: NeatNit (NeatNit@powered.by.jay2k1.com) ()
[13:30:32] <DarkTrick> ok, feeling stupid now :D
[13:31:11] <DPA> Don't worry, I've been writing C for years.
[13:31:33] *** Quits: hexingb (~hexingb@103.37.140.36) (Read error: Connection reset by peer)
[13:32:40] <DPA> I know every trick in the book.
[13:35:40] *** Quits: CP-400 (~sjw@69.206.48.64) (Remote host closed the connection)
[13:35:49] <beaky> what is the best c trick
[13:36:06] <DarkTrick> nice follow up beaky
[13:36:20] <DarkTrick> ... probably to book of life? :D
[13:36:30] <GeDaMo> https://en.wikipedia.org/wiki/Duff%27s_device
[13:36:31] <bayaz> Title: Duff's device - Wikipedia 
[13:36:33] <Akronymus> beaky I find duffs device quite interesting
[13:36:48] <beaky> does rust have duff's device
[13:36:48] <Akronymus> Fine, fast inverse square root it is then
[13:36:52] *** Joins: CP-400 (~sjw@69.206.48.64)
[13:36:53] <Akronymus> No.
[13:37:03] <Akronymus> Unless you go into unsafe, then maybe.
[13:37:03] <pyzozord> wth is that :D
[13:37:22] <jelly> isn't inverse square root just square?
[13:37:41] <GeDaMo> Inverse square root is 1/sqrt(x)
[13:37:46] <Akronymus> jelly it is 1/sqrt(x)
[13:37:52] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[13:37:58] <mrig> Just taking a look at svgo, I did come across it, but it does not seem to have the approach that I require.
[13:37:59] <Akronymus> GeDaMo stop sniping me
[13:38:00] *** Joins: Tazy (~Tazmainia@102.39.90.151)
[13:38:10] <GeDaMo> :P
[13:38:15] <DPA> I don't think any C trick is better than any other. Just mix & match as needed.
[13:38:40] <pyzozord> oh I see, it just makes it check for loop condition less often. Is that relevant still today though?
[13:38:41] <Akronymus> Eh, in most cases, readability trumps speed.
[13:38:47] <mrig> It will do to much to change any file that it parses, if the lib is to be used as an editor plugin it should not alter the code unless there are errors in it.
[13:38:52] <Akronymus> pyzozord microcontrollers, at times
[13:39:08] <DPA> Modern compilers can unroll loops themselfes.
[13:39:27] <pyzozord> If you are down to optimizing C loop itself, that means you already spent a huge amount of time squeezing everything out of the lagorithm, simd, cpu caches...
[13:39:47] <DPA> You can also set optimisation level per function using some __attribute__.
[13:39:57] <Akronymus> Also: `This leads to what the Jargon File calls "the most dramatic use yet seen of fall through in C".[5]​ C's default fall-through in case statements has long been one of its most controversial features; Duff himself said that "This code forms some sort of argument in that debate, but I'm not sure whether it's for or against."[5]`
[13:39:59] <beaky> nice i like simd
[13:41:48] <DPA> switch(argc){ case 3: {} case 2: {} case 1: {} }
[13:42:07] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[13:43:26] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[13:43:31] <mrig> sailing without a GPS is a nice sea trick :)
[13:44:03] <Thedarkb-Work> The guy who wrote PuTTY uses duff's devices to implement coroutines.
[13:44:14] <Thedarkb-Work> It's ugly.
[13:44:21] <mrig> oh a naval battle rogue like, that might work.
[13:44:50] <Akronymus> I sometimes use goto to do error handling
[13:45:01] <mrig> sure why not?
[13:45:01] <Akronymus> Specifically freeing resources 
[13:45:15] <Thedarkb-Work> That's fine, just don't tell Dijkstra.
[13:45:27] <Akronymus> He didn't argue to never use goto
[13:45:44] <Akronymus> He argued that how they were used back then makes too many problems.
[13:45:46] <mrig> I finally figured out where, it might be useful in parsing to, to make the thing efficient.
[13:46:13] *** Joins: hexingb (~hexingb@103.37.140.36)
[13:46:15] <mrig> knowledge in the hands of fools is a recursive problem.
[13:47:55] <mrig> The scope of the fool does not permit any awareness of the issue either, which is rather a subtle, oh what is the word for those multidimensional vectors?
[13:48:02] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[13:48:09] <mrig> I's a nice example of one of thos.
[13:48:11] <mrig> those
[13:48:27] <pyzozord> mrig: a rogue like version of assassins creed black flag
[13:48:42] <mrig> goto heart_of_issue
[13:48:58] <pyzozord> but much bigger ships
[13:49:00] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[13:49:06] <mrig> pyzozord: oh that could be cool, with a stealth aspect to the game.
[13:49:22] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[13:49:59] <Akronymus> Dead people and idiots don't know that they are.
[13:50:02] <Akronymus> mrig
[13:50:13] <mrig> ah in the Caribbean, nice yes that would work :)
[13:50:25] <pyzozord> yeah, but I mean you are still controlling a character, you need to go to go to the streering wheel, or to your captins quarters. You have your crew ala dwarf fortress and they need to actually go to the cannons, load them and fire. etc
[13:51:24] *** Joins: moha (uid506645@id-506645.helmsley.irccloud.com)
[13:51:31] <mrig> Akronymus: not so sure about the dead people, i've no proof to date, but idiots are the new sage in this age of merit.
[13:51:57] <mrig> you do get what you merit in a rather twisted way it would seem :D
[13:52:26] <mrig> pyzozord: I've not actually played any, should look into doing so.
[13:52:53] <mrig> But am a big fan of good games, though they are really rare.
[13:53:43] <mrig> simple ones that is, there is something great about simple games that get it just right.
[13:53:56] *** Joins: mnd999_ (~mark@2001:8b0:da3:76a2:863a:4bff:fe0e:a4e4)
[13:53:57] <mrig> tetris is the best example.
[13:54:12] <mrig> absolute genius.
[13:54:22] <pyzozord> I'm generally not a fan of assassins creed games, but I liked their world building quite a lot. Black Flag and Oddysey have cool worlds. I should check out the one in 18th century London and the one with vikings too
[13:54:43] <mrig> must try some of these roguelikes though, I enjoy the terminal to much not to.
[13:55:05] <mrig> I've not had much exposure to AAA games for quite some time.
[13:55:18] <pyzozord> mrig: nethack is *the* classic, I also like adom
[13:55:32] <Akronymus> https://nandgame.com/ mrig
[13:55:33] <mrig> pretty much the last one I bought I paid 60euro for and never got to play.
[13:56:04] <Akronymus> altough, ever tried any incremental game?
[13:56:24] <pyzozord> I bought adom too, but i play the free version anyway. Because only free version actually works in real terminal
[13:57:45] <piou> mrig: if you enjoy the terminal you may like MUDs too. MMORPGs in a terminal essentially. It's a really different experience to "regular" MMORPG, very enjoyable, but you still need to like the social aspect. There are some things that only MUDs can do that are really impressive.
[13:58:03] <piou> MUD: multi user dungeon
[13:58:11] <mrig> oh cool, will look that up. Ah right.
[13:58:35] <mrig> oh I was pondering the feasibility of that, seems like a natural extension of a dungeon type game.
[13:59:25] <mrig> piou: that could work pretty nicely for a naval battle or world type of thing.
[13:59:38] <piou> Well, don't hesitate to give it a try, I've had really memorable experiences on Aardwolf but there are lots of other good ones. There aren't that much with a reasonnable number of players these days though, only a few big ones.
[13:59:52] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 252 seconds)
[13:59:54] <pyzozord> MUDs are amazing too
[14:00:00] <piou> And most of them aren't limited to a dungeon, rather it's a world like you'd see in MMORPGs
[14:00:08] <piou> Some are futuristic too
[14:00:18] <mrig> why wouldn't you make then network? :D
[14:00:19] <pyzozord> There is one in the Diskworld
[14:00:33] <pyzozord> *Discworld
[14:00:45] <pyzozord> I guess the computer game version may call it the Diskworld :D
[14:00:57] <mrig> There is something liberating about the notion of having a restrained graphics set.
[14:01:30] <piou> mrig: yeah, and there are things... Ok, let me give an example, it's really difficult to explain otherwise.
[14:01:32] <mrig> Tiling might be a nice thing to explore a little too I suppose.
[14:01:38] <pyzozord> Yes, and writing short descriptions that paint a vivid mental image is an art
[14:01:52] *** Joins: alycidyne (~kova@91-160-172-214.subs.proxad.net)
[14:02:11] <mrig> It is an attractive though, to be able to write just short text that fills in a picture.
[14:02:14] <alycidyne> Hello, are there languages (preferably compiled) which do not have standard libraries?
[14:02:23] <pyzozord> Creating and visiting virual worlds is really I think why I love games so much
[14:02:28] <merijn> alycidyne: It Depends (TM)
[14:02:37] <alycidyne> lol
[14:02:40] <merijn> alycidyne: How do you define a standard library
[14:02:46] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:03:29] <alycidyne> merijn: in the ordinary way - functions which the implementations must provide under every (hosted) environment
[14:03:37] <GeDaMo> Forth! :P
[14:04:30] <alycidyne> GeDaMo: Don't the interpreters have standard "words" which constitute the low-level implementation though?
[14:05:06] <GeDaMo> Yes but it's very flexible as to what's available and how it works
[14:05:16] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[14:06:24] <alycidyne> Righty
[14:06:24] <smallville7123> unable to find library -lbz2
[14:07:09] <pyzozord> smallville7123: you probably need to install it then
[14:07:48] <alycidyne> It's that my OS's development is now leading to a tug of war between the OS and supported programming languages over user APIs
[14:07:52] <piou> mrig: in MUDs, combats are generally represented by a growing wall of text where any new event (be it an attack, an effect, anything) adds up to the mix. "You hit the rat for 20dmg" "The rat hits you for 2dmg" "You're poisonned" "Poison deals you 1dmg" etc. You get the idea. Well, there was this MUD (can't remember which) where there was a jester. And the jester was able to plant illusions. He
[14:07:58] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[14:07:58] <piou> could effectively write what he wanted on your screen to make you see what he wanted you to see. If he did it well, you couldn't differentiate between a game event and his illusion. Better still, he could plant illusions to be activated x seconds later. You could see him planting illusions though. But a Jester PvP could be that he had planted illusions in all rooms all arround and started a
[14:08:04] <piou> fight, entered a room and just there you start being attacked by a huge bear and you're poisonned, and you see that you're being healed and getting back your life, and you fight the bear but all of this was just an illusion that the jester had timed before he entered the room to distract you while he was attacking you. It's a wonderful power to be able to litterally paint on the screen of other
[14:08:10] <piou> players what you want them to see, and not something that is really doable in a classical MMORPG. If he wanted you to make you think you were in critical condition and dying he could and the only way to be sure was to spend some time checking your characteristics while he was bashing you.
[14:08:15] <piou> It's, well it's not very practical, but when mastered it's extraordinary.
[14:08:26] <merijn> alycidyne: If there are languages where functions are built-in via the compiler, is that a standard library or not?
[14:09:09] <smallville7123> fatal error: 'png.h' file not found
[14:09:34] <alycidyne> merijn: I would consider it part of the standard library if they are used syntactically like ordinary functions
[14:09:43] <DarkTrick> DPA, you're casting you array to `const char*`, I didn't and it works. Why would I need to cast?
[14:10:28] *** Quits: gggp (~textual@60.10.194.45) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:10:33] <pyzozord> smallville7123: same thing either you don't have something installed or your include paths are wrong
[14:10:44] <DarkTrick> Btw.. with you little tip, I needed 1.5 hours to solve
[14:10:50] <smallville7123> im using ndk
[14:10:53] <mrig> piou: oh that sounds like a fascinating facet of the game play.
[14:10:59] <smallville7123> android cmake
[14:11:03] <DarkTrick> I didn't come up with putting "%d" itself as first parameter
[14:11:30] <smallville7123> add_subdirectory(libpng)
[14:11:34] <DarkTrick> DPA, your seconds approach with puts feels kind of like cheating :D
[14:11:45] <mrig> yes I get the idea, role playing with the dimension of the screen adding a perspective.
[14:11:46] <smallville7123> cus ExternalProject does not work
[14:12:00] <piou> mrig: exactly
[14:12:01] <smallville7123> im using ndk android cmake       add_subdirectory(libpng)    cus ExternalProject does not work
[14:13:01] <DPA> DarkTrick: I don't cast to const char*. It's a compound literal for creating an array containing "const char*"s.
[14:13:06] *** Joins: fch (~myname87@mob-5-90-227-40.net.vodafone.it)
[14:13:07] *** Joins: gggp (~textual@60.10.194.45)
[14:13:28] *** Joins: zaher (~zaher@37.48.185.11)
[14:14:13] <DarkTrick> DPA: let me ask the other way around: Is this "not good"? ({"fizzbuzz\n", "buzz\n", "fizz\n", "%d\n"})[ !!(i%3) + (!!(i%5)*2)]
[14:14:21] <mrig> piou: how does time work in game; Is it real time or perhaps a segmented to help with latency?
[14:14:42] <piou> mrig: it feels real time, but maybe it's just finely segmented
[14:15:29] <DPA> DarkTrick: It's not valid C. I imagine it may work in C++, where that may be an initialiser list, but I haven't used C++ in years, so I'm not sure.
[14:16:30] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[14:16:57] <DarkTrick> DPA compiled with gcc
[14:17:10] <DarkTrick> but good to know, that it's not actually valid! Thank you :)
[14:17:23] <Thedarkb-Work> A lot of MUDs could be exploited by inserting ASCII escapes.
[14:17:27] <Thedarkb-Work> ANSI*
[14:19:14] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[14:20:31] <pyzozord> they probably have overflow vulnerabilities too, but why hack muds
[14:20:37] <pyzozord> that's like the lowest of lows
[14:21:12] <mrig> I was just thinking; Where would be the fun in doing that?
[14:21:44] <DPA> DarkTrick: My gcc doesn't compile it: https://bpa.st/N2TQ
[14:21:45] <bayaz> Title: View paste N2TQ 
[14:22:24] <mrig> you could put filters on that take any escape characters out pretty easily; I would not imagine that people bothered initially though, just creative minds having fun, until the snakes moved in.
[14:22:48] <mrig> snakes and ladders, such a poignant game :D
[14:23:36] <mrig> Then you have to hire snakes to keep the snakes at bay, then before you know it they are all that remain.
[14:23:46] <alycidyne> Changing subject: how would one make an assembly language suitable for use as an interactive command language? There was JCL, but it wasn't made for interactive
[14:23:50] <mrig> ... can feel another game plot coming on.
[14:24:09] *** Quits: diamondbond (~diamondbo@175.157.234.192) (Ping timeout: 244 seconds)
[14:24:50] <mrig> piou, right thank you, yes that makes sense. All that remains for me to do is to have a try then.
[14:25:25] <GeDaMo> alycidyne: Forth! :P
[14:25:51] <alycidyne> XD
[14:27:14] <alycidyne> Right, I should just make it stacks all the way down
[14:27:15] *** Quits: AsenMx (~AsenMx@78.90.248.234) (Ping timeout: 244 seconds)
[14:27:46] *** Joins: Twipply (~Twipply@user/twipply)
[14:28:25] <mrig> stacks are just tools for shifting matrices though :)
[14:28:39] <GeDaMo> Some Forth implementations have assemblers, they just store bytes in memory
[14:30:03] *** Joins: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net)
[14:30:06] <alycidyne> Oh I can imagine, what I'm trying to do is to make it all one needs to not only create, but use the system
[14:30:54] *** Joins: Lyn (~Lyn@user/law)
[14:31:05] *** Quits: rexar89 (~alexi5@208.83.82.234) (Ping timeout: 248 seconds)
[14:31:50] <mrig> pyzozord: I just realised that when using those quarter square tile colours, if you zoom right out on the terminal, you have quite good resolution :D
[14:32:15] <mrig> Would be good for space invaders, something like that.
[14:32:33] <mrig> well any of the 8 bit graphics type of games.
[14:32:46] <deniska> mrig: you may also display qr codes :D
[14:32:57] *** Joins: diamondbond (~diamondbo@175.157.75.35)
[14:33:20] <mrig> deniska: What are they? [Scurries off to look it up]
[14:33:32] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:b890:4924:7500:5018) (Quit: Quit)
[14:33:42] <mrig> oh yes right, you could!
[14:33:44] <deniska> mrig: 2d barcodes which can encode relatively short blobs of data
[14:34:00] <mrig> oh that would be cool for a different dimension to interactivity.
[14:34:26] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[14:34:28] <alycidyne> Rexx has an interesting bit of syntax in this regard: procedures are defined by literally associating the code to a label - 'myproc: procedure ...'
[14:34:51] <alycidyne> feels like assembler trying to show through
[14:34:52] <mrig> for 'unlocking' things in game that would be pretty neat.
[14:34:59] *** Joins: vysn (~vysn@user/vysn)
[14:35:04] *** Quits: audiocat (~audio@2603-8081-1801-3bb5-0258-933a-d6c3-bfc1.res6.spectrum.com) (Ping timeout: 252 seconds)
[14:35:07] <GeDaMo> Rebol uses a similar syntax
[14:35:32] *** Quits: gggp (~textual@60.10.194.45) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:35:40] <pyzozord> mrig: even 3d games, like even maybe doom
[14:35:47] <smallville7123> why does ExternalProject_Add fail on android?
[14:36:01] <mrig> pyzozord: you could indeed!
[14:36:40] <pyzozord> I wouldn't mind a nice quake/doom style online shooter in terminal for a quick round now and then
[14:37:03] <mrig> That would be fun as a multiplayer thing
[14:37:06] <GeDaMo> There were 3D maze games on text and low res graphics screens back in the 80s
[14:37:07] <pyzozord> but most terminals are too slow for that
[14:37:28] <alycidyne> GeDaMo: interesting
[14:37:38] <alycidyne> about Rebol, I mean
[14:37:55] <mrig> pyzozord: a 3D maze that was not a frantic shooter could though.
[14:38:00] <GeDaMo> There's an open source variant called Red
[14:38:12] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[14:38:12] <mrig> D'n'D type of thing with a slightly slower game play.
[14:38:17] <GeDaMo> https://www.red-lang.org/
[14:38:19] <bayaz> Title: Red Programming Language 
[14:39:40] <pyzozord> mrig: I am a fan of twitch-movement arena shooters like quake. Sometimes that's exactly what I need to have my mind rest from thinking too much
[14:39:40] <GeDaMo> https://www.youtube.com/watch?v=doTixX2ECow
[14:39:42] <bayaz> Title: 3-D Maze - ZX Spectrum 
[14:40:18] <pyzozord> mrig: but I wouldn't mind a first person perspective MUD game, kind of like skyrim but mud and in terminal. That could be fun too
[14:40:27] <mrig> They are fun thats for sure.
[14:40:41] *** Quits: diamondbond (~diamondbo@175.157.75.35) (Ping timeout: 244 seconds)
[14:40:47] <mrig> I think it would be an interesting experiment.
[14:41:26] *** oopsitsmeoagain is now known as kmh
[14:41:29] *** Joins: Guest16 (~Guest16@43.250.165.136)
[14:41:34] *** Guest16 is now known as g700
[14:41:44] <Akronymus> pyzozord just wait a few years and a skyrim mud would be released by hodd toward
[14:42:03] <pyzozord> needs a fast terminal though. I haven't tested my terminal for speed. I'm curious if it can produce 60fps now that it has glyph texture caching
[14:42:32] *** Quits: xff0x (~xff0x@2001:1a81:5329:9c00:532c:18c2:3151:8d2a) (Ping timeout: 245 seconds)
[14:42:56] <GeDaMo> https://www.youtube.com/watch?v=tGf4jdRbCuk
[14:42:57] <bayaz> Title: Sinclair ZX81 Game: 3D Monster Maze (1981 J. K. Greye Software) 
[14:42:57] <mrig> pyzozord: Is it possible to take the SDL folders out of the main folder or does the code need the functions inside of SDL?
[14:43:25] *** Joins: xff0x (~xff0x@2001:1a81:5329:9c00:9b27:ac34:a98:1a7c)
[14:43:32] <deniska> pyzozord: well, there were terminals which supported vector and raster graphics
[14:43:32] <pyzozord> pyzozord: you can completly remove those custom SDL folders. I needed them because I needed a version of SDL_ttf that supports color emojis
[14:43:36] <deniska> pyzozord: may emulate them :D
[14:44:17] <pyzozord> deniska: I think we may just have made a full circle :D
[14:44:18] *** Quits: zaher (~zaher@37.48.185.11) (Ping timeout: 244 seconds)
[14:44:40] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi)
[14:45:07] <pyzozord> meaning, we reinvented graphical shells
[14:45:10] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[14:46:03] <mrig> pyzozord: I have started constructing the code with only your code in folder but came a little unstuck due to dependence upon functions inside the SDL folders.
[14:46:31] <mrig> deniska: I think that these could well be a thing again in the future.
[14:46:42] <mrig> the browser as a terminal is aweful.
[14:47:14] *** Quits: alycidyne (~kova@91-160-172-214.subs.proxad.net) (Quit: leaving)
[14:47:16] <pyzozord> you can remove the SDL* folders. The only change you need to do after that is in x.c in #include directives add "SDL/" and in config.mk make sure you use global sdl2-config, not local one
[14:47:20] <mrig> awful too!
[14:47:35] *** Quits: fweht (uid404746@id-404746.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[14:47:36] <mrig> oh as simple as that?
[14:47:54] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[14:47:56] <pyzozord> yep, no more than 4 lines changes
[14:48:04] <mrig> I have done that, but then there are functions that are not in scope, hang on, let me go take a look again.
[14:48:15] *** Joins: rexar89 (~alexi5@208.83.82.234)
[14:48:16] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[14:51:00] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:51:34] <piou> beaky: Hey, I know you like tea, do you also record your water ratios and brew times for each tea in your database?
[14:51:54] <death916> you have a tea database?
[14:52:27] *** Joins: diamondbond (~diamondbo@175.157.75.35)
[14:53:05] <pyzozord> Anyone knows of some script testing terminal rendering speed?
[14:53:18] <piou> I don't, but he's been working on a tea database for the longest time now
[14:54:10] *** Quits: hexingb (~hexingb@103.37.140.36) (Ping timeout: 240 seconds)
[14:54:24] *** Joins: hexingb (~hexingb@2409:8900:2720:35aa:98c2:101:e878:13ce)
[14:54:28] <pyzozord> hang on, I found this https://github.com/anarcat/terms-benchmarks.git
[14:54:30] <bayaz> Title: GitHub - anarcat/terms-benchmarks: Reproducible results for LWN review of terminal emulators: https://lwn.net/Articles/749992/ https://lwn.net/Articles/751763/. Mirror of GitLab repository, possibly out of date.. 
[14:54:33] <mrig> not to forget water temperatures!
[14:54:42] <mrig> pyzozord: I get this at the moment https://termbin.com/c05y
[14:54:43] <bayaz> Type: text/plain; charset=utf-8 
[14:54:56] *** Quits: g700 (~Guest16@43.250.165.136) (Quit: Connection closed)
[14:55:32] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 245 seconds)
[14:56:20] <pyzozord> mrig: that doesn't seem related to SDL stuff
[14:56:26] <mrig> and have some issue with a header ft2build.h
[14:56:35] <mrig> its the font stuff I think.
[14:57:01] <pyzozord> mrig: those are mostly functions from st.c, except die(), that is libc
[14:57:53] <mrig> from xft I think, was tracing everything back I think some of this was included in the SDL stuff so errors occurred when it was removed.
[14:59:02] <pyzozord> I'm not fully following, but you still need SDL2 and SDL2_ttf on your system
[14:59:12] <mrig> as mentioned it compiles and runs fine from the folder but when separated out, there are dependencies that are missing.
[14:59:16] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Ping timeout: 252 seconds)
[14:59:25] <mrig> I have both on the system already.
[15:00:12] <pyzozord> in x.c #include<SDL2/SDL.h> or #include<SDL.h>?
[15:00:50] <mrig> yes they are already there.
[15:00:57] *** Quits: diamondbond (~diamondbo@175.157.75.35) (Ping timeout: 245 seconds)
[15:00:58] <pyzozord> which ones?
[15:01:10] <mrig> both
[15:01:20] <mrig> my local versions in all files.
[15:01:23] <pyzozord> no no I mean do they have SDL2/ directory or not
[15:01:27] <mrig> system version I mean
[15:01:28] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[15:01:49] <mrig> no no SDL directory in the folder, am attempting to construct it without.
[15:01:56] *** Joins: Enitin (~Enitin@82.102.22.84)
[15:01:59] <mrig> I get a linter error next to <X11/Xft/Xft.h>
[15:02:29] <mrig> An my system header for that says that it is missing ft2build.h
[15:02:41] <pyzozord> I think you can remove that include, my whole hack week was to not use it
[15:02:47] <mrig> ah
[15:03:00] <pyzozord> but maybe there is still some code left that needs it, no guarantees
[15:03:22] <mrig> it needs it still.
[15:03:51] <mrig> Am curious though as to why it works in the folder that contains the SDL folders and not in the one that does not.
[15:04:10] <mrig> oh I can follow the links in there to see where it is getting it from.
[15:04:21] <pyzozord> ok then apt install libxft-dev or manuall cleaning. Sorry mrig, this was truly all hacked in. It's not really intended to be read by anyone else than myself
[15:04:56] <mrig> no I get the same warning in there and it compiles so it cant be the cause.
[15:05:18] <mrig> no not a problem, as I said the other folder works fine.
[15:05:52] <pyzozord> I sent everything I had so might be that some stuff got already built and sits there in .o .a .so etc
[15:06:07] <mrig> Im hacking your hack to see how everything works :D
[15:06:13] <beaky> yes i record all the water ratios (and tea leaf mass and volume of the brewing vessel) and brew times i also try to note the temperature too
[15:06:22] <pyzozord> I could dive deeper and help but not atm, still pretending to work ;)
[15:06:35] *** Joins: xa_ (~NesLs@176.54.248.155)
[15:06:46] <mrig> I have done a full clean, no problem, I thought that you would be interested to know too.
[15:07:16] <pyzozord> mrig: yeah for sure, once you are done with it, send it back. I'd be very interested what you've done with it
[15:07:36] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[15:08:01] *** Joins: merijn (~merijn@2001:981:ab73:1:2088:973a:439d:f0e5)
[15:08:28] <pyzozord> mrig: btw did you hacked in your fireworks into my code or was that different?
[15:09:53] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[15:10:15] <mrig> Oh that was into some other code, it was your mention of the terminal output of mpv that gave me the idea of how to quickly solve a requirement that I had in some old code.
[15:10:25] <mrig> just to make it sort of finished.
[15:10:36] <pyzozord> aw, ok.
[15:10:46] <piou> beaky: interesting! Did you try any systematic optimization method from this data to get to your prefered brew or do you go by feel?
[15:10:57] <beaky> so someone solved the problem i've been working on for months in under 1 megabyte of ram he goes a step beyond just using golomb-rice encoding with m=64 he uses compression https://old.reddit.com/r/programming/comments/122b3b/heres_some_working_code_to_sort_one_million/
[15:11:23] <beaky> no i dont use any optimization i just think of my favorite teapot and teacup
[15:11:51] <beaky> and just decide 'ill brew for 10 seconds'
[15:12:06] *** Joins: peteyboy1 (~peteyboy1@95.169.235.10)
[15:12:13] *** Joins: juliaEnv (~juliaEnv@ip-86-49-255-181.net.upcbroadband.cz)
[15:12:17] <beaky> but maybe i should use it to optimize 
[15:12:24] <piou> beaky: have you tried other methods for brewing tea, such as percolation with a filter paper or such?
[15:12:37] *** Joins: akevinhuang (~thekevinh@user/thekevinhuang)
[15:12:57] *** Joins: Ecophobia (~Ecophobia@mobile-access-2e840c-136.dhcp.inet.fi)
[15:13:11] <mrig> pyzozord: no cigar just yet, that wont play in the pyzoterm terminal :D
[15:13:13] <beaky> yes i have tried it with chemex but i prefer brewing it with a teapot or a tall mug 
[15:13:34] *** Quits: merijn (~merijn@2001:981:ab73:1:2088:973a:439d:f0e5) (Ping timeout: 252 seconds)
[15:13:37] <piou> beaky: I'm getting into good coffee and started keeping notes on what I do etc, and as I like tea very much I keep wondering why there aren't more brewing methods for tea, what a tea espresso would be like and such. So the idea of systematic optimization to explore that state is very appealing to me.
[15:13:39] *** Quits: Hax0r (~Hax0r@51.252.26.81) (Remote host closed the connection)
[15:13:45] <mrig> the game does though, just not the end sequence.
[15:13:55] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:13:59] <piou> beaky: oh, in a chemex? What was it like?
[15:14:15] <pyzozord> mrig: damn it, was hoping... :)
[15:14:52] <beaky> it was very soft and tea-like (like how coffee turns out in a chemex) but i dont like the hassle of the pourover process and filter paper when i can just brew in a teapot
[15:15:10] *** Joins: Lemniscate (~sauvin@about/linux/staff/sauvin)
[15:15:35] <beaky> yes what if i grind up my teas into powder and try some tea espresso
[15:15:58] <piou> macha espresso maybe? That may be too fine, but there must be something to try there
[15:16:04] <pulse> wouldn't that be a teaspresso
[15:16:12] <piou> teaspresso all the way
[15:16:23] <piou> With a smoked tea maybe
[15:17:59] <smallville7123> hmmmm
[15:18:00] <smallville7123> ninja: error: 'OUTPUT/libbz2.so', needed by 'OUTPUT/libfreetyped.so', missing and no known rule to make it
[15:18:32] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[15:19:47] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 240 seconds)
[15:19:48] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[15:19:48] *** Joins: comerijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:20:36] *** Joins: Hax0r (~Hax0r@51.252.26.81)
[15:20:40] *** Quits: Hax0r (~Hax0r@51.252.26.81) (Max SendQ exceeded)
[15:22:37] *** Joins: swagneko (~bit@user/nekobit)
[15:23:16] <beaky> so the trick i was missing to make the merge sort work is to use a circular buffer
[15:23:26] <beaky> what are circular buffers and why are they the best
[15:25:49] <pyzozord> beaky: how can you be making formal proofs in agda and not knowing what a circular buffer is
[15:26:20] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:26:22] *** Joins: ixil (~ixil@mpp-cp1-natpool-2-165.ethz.ch)
[15:27:48] <smallville7123> how do i get this to build on android?    https://gist.github.com/mgood7123/1e5004585fc6adfa8db11259c6c01638
[15:27:48] <bayaz> Title: CMakeLists.txt 
[15:29:20] <beaky> rryes agda does not have circular buffers
[15:29:48] *** Quits: comerijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[15:30:22] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:31:00] <mrig> I thought that all buffers are circular, otherwise affectionately known as an overflow?
[15:31:15] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi)
[15:31:44] <CoderGuy> i'm so confused which license should I be using for open sourced software?
[15:31:55] <DPA> GPL3
[15:32:01] <mobidrop> MIT
[15:32:15] <smallville7123> beaky: a circular buffer is basically a buffer that wraps around instead of overflowing
[15:32:18] <piou> CoderGuy: MIT is a safe choice if you don't want to think too much about it, but I'd recommend going over https://choosealicense.com/licenses/
[15:32:19] <bayaz> Title: Licenses 
[15:32:29] <beaky> nice i like wrap around 
[15:32:30] <piou> CoderGuy: https://choosealicense.com/ sorry
[15:32:31] <bayaz> Title: Choose an open source license 
[15:32:57] *** Quits: ghost64 (~ghost64@user/ghost64) (Quit: See you!)
[15:34:03] *** Quits: independent__ (~independe@95.144.68.39) (Remote host closed the connection)
[15:34:11] *** Joins: ghost64 (~ghost64@user/ghost64)
[15:34:21] *** Joins: independent__ (~independe@95.144.68.39)
[15:34:27] <piou> mrig: most overflows, even when defined by the language, don't circle back to the beginning of the buffer
[15:34:29] <smallville7123> eg    {0, 0, 0}    {1, 0, 0}     {2, 1, 0}     {3, 2, 1}      {4, 3, 2}        or     {0, 0, 0}    {0, 1, 0}     {0, 2, 1}     {1, 3, 2}      {2, 4, 3}
[15:34:49] <DPA> When in doubt, use the GPL3. It's compatible with MIT libraries. If you use MIT, it won't be compatible with GPL libraries.
[15:35:43] <piou> DPA: but with GPLv3 many projects won't want to use your code, and that's something that should be considered strongly for a "default, don't think about it"
[15:35:50] <smallville7123> but a buffer overflow is simply when you access past the end of a buffer (circular buffer's CAN have buffer overflow if you INTENTIONALLY access the internal buffer they use)
[15:36:01] <piou> DPA: as much as I love GPLv3 it really depends what the target audience is
[15:36:07] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 252 seconds)
[15:36:27] <smallville7123> tho i am assuming buffer to be an array of some kind or equivilant
[15:36:31] <CoderGuy> man i'm so confused
[15:36:36] *** Joins: Enitin (~Enitin@82.102.22.84)
[15:36:54] <piou> DPA: I feel that MIT is a better default, not because it's a better license but because it fits better what most people imagine open-source to be so there's least surprise even if you don't read the fine prints of the license you're using
[15:37:00] <smallville7123> and not, for example, a stack which blocks when full
[15:37:27] <CoderGuy> soo what is this patent stuff for apache?
[15:37:33] *** Quits: independent__ (~independe@95.144.68.39) (Remote host closed the connection)
[15:37:39] <CoderGuy> and why is gpl like "nah you can't even use it in closed source"
[15:37:39] <DPA> piou: If they don't want to use it, their loss. Not my problem.
[15:37:52] *** Joins: independent__ (~independe@95.144.68.39)
[15:38:03] <smallville7123> eg {0, 0, 0}    {1, 0, 0}     {2, 1, 0}     {3, 2, 1}    BLOCK UNTILL 1 IS REMOVED           {4, 3, 2}
[15:38:08] <CoderGuy> my goal is this, release my code open sourced and not ever get sued
[15:38:23] <piou> CoderGuy: go with MIT
[15:38:28] <CoderGuy> can they sue me?
[15:38:33] <piou> No?
[15:38:42] <CoderGuy> then what is all this stuff about how apache prevents patent trolls?
[15:38:42] <piou> It's your code, why would they sue you?
[15:38:48] <Akronymus> GPL can be relicensed by the rights holder afaik
[15:38:54] <piou> CoderGuy: Unless you're using someone else's code, then you must consider their licenses
[15:39:18] <CoderGuy> oh, I mean I coded in nodejs does that matter?
[15:39:23] <Akronymus> No
[15:39:25] <piou> CoderGuy: no
[15:39:32] <merijn> Akronymus: Copyright owner can release stuff under whatever license they want. GPL is non-exclusive, so licensing something GPL does not remove your right/ability to *also* release under something else
[15:39:36] <CoderGuy> what if my code requires someone elses module?
[15:39:39] <smallville7123> anyway
[15:39:45] <smallville7123> how do i get this to build on android?    https://gist.github.com/mgood7123/1e5004585fc6adfa8db11259c6c01638
[15:39:46] <bayaz> Title: CMakeLists.txt 
[15:39:50] <Akronymus> merijn yeah, the non exclusivity.
[15:39:56] <Akronymus> Some licenses are exclusive
[15:39:58] *** Quits: Caffeinated (~Caffeine@user/alexdelarge) (Ping timeout: 252 seconds)
[15:40:08] <Akronymus> #android smallville7123
[15:40:17] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[15:40:27] <DPA> CoderGuy: Because we want more OpenSource things. We want to be able to hack our programs. We don't just want our stuff be put in some closed source program, with nobody gaining anything from it, and potentially people suffering from the limitations / loss of agency.
[15:40:37] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 244 seconds)
[15:40:41] <piou> CoderGuy: then it depends on how you use that module, but most libraries are meant to be used so you can use them without issue. You can check their licenses to see whether they have any restriction on how to use them. Frankly, go with MIT, you won't have issues.
[15:41:15] <CoderGuy> yeah i'm probably gonna do that i'm just trying now to see why I would switch to apache or gpl instead
[15:41:21] <Akronymus> I personally tend to go with "No rights reserved"
[15:41:32] <piou> CoderGuy: DPA is talking about your comment on GPL btw which does bear more political ideas than other licenses (not that it's necessarily a bad thing)
[15:41:42] <Akronymus> Or maybe one that forces upstreaming fixes.
[15:42:03] <Akronymus> But other than that, use it however you want.
[15:42:26] <CoderGuy> DPA but something under GPL can the person use it in closed source?
[15:42:44] <Akronymus> If you license it for them.
[15:42:53] <Akronymus> GPL allows you to do pretty much anything
[15:42:58] <Akronymus> As the rights holder.
[15:43:08] <piou> CoderGuy: not without special permission from you
[15:43:13] <CoderGuy> ohhhh
[15:43:20] *** Joins: Enitin (~Enitin@82.102.22.86)
[15:43:22] <piou> essentially
[15:43:25] <CoderGuy> so if it's GPL you can't use it in closed source without permission?
[15:43:32] <Akronymus> Yeah.
[15:43:43] <CoderGuy> interesting what if you're coding in a language under GPL?
[15:43:56] <piou> CoderGuy: the whole point of GPL is to prevent companies from using community-driven source code without sharing their modifications, and that requires open-sourcing the modified code
[15:44:07] <piou> CoderGuy: the language you use has no impact whatsoever
[15:44:11] <CoderGuy> oh okay
[15:44:24] <piou> CoderGuy: no more than the OS or editor or coffee maker
[15:44:24] <Akronymus> The license is orthogonal to the language used for writing the program
[15:44:41] <CoderGuy> what if it's like a library that you're importing and just using not upgrading the tools?
[15:44:58] <Akronymus> Then it depends on the libraries license
[15:45:06] <CoderGuy> under GPL
[15:45:09] <DPA> CoderGuy: It depends. For libraries, there is the LGPL to allow that. As long as you are the sole copyright holder, you can always relicens it however you want. Otherwise, no. But you can always use anything in private projects / stuff yo u don't distribut.
[15:45:29] <Akronymus> Most likely, the most you get is a takedown request to use something.
[15:45:30] <CoderGuy> oh when is it distributed?
[15:45:31] <DPA> (Using it with closed source)
[15:46:09] <DPA> CoderGuy: When you give it to someone, or publish it somewhere, or forget the USB stick with it on it somewhere.
[15:46:11] *** Joins: codemin (~codemin@69.167.14.52)
[15:46:26] <CoderGuy> so like if you publish an App on the app store?
[15:46:29] <piou> CoderGuy: note that most of the "you can always give special permission" talk essentially means "the license won't allow it, but you can give a different license to someone for the same code, the license you have in your project is only the default one". It's not hassle free though.
[15:47:30] <Akronymus> one of the reasons I personally go with no rights reserved by default piou
[15:47:51] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 244 seconds)
[15:48:18] <CoderGuy> alright so people say to use Apache when dealing with Patent Trolls, when does this become an issue?
[15:48:41] <Akronymus> tbh, no license would help you deal with patent trolls
[15:48:57] <CoderGuy> yeah but what even is some patent troll thing? why is this even a thing?
[15:48:58] <smallville7123> i hate that i cant use ExternalProject_Add on android ;-;
[15:49:24] <DPA> I never had to deal with them. But I imagine it may help that I live in switzerland, we don't have software patents.
[15:49:34] <Akronymus> DPA same in austria
[15:49:36] *** Quits: xa_ (~NesLs@176.54.248.155) (Read error: Connection reset by peer)
[15:49:36] <Akronymus> europe
[15:49:43] <CoderGuy> okay but what even is it?
[15:49:44] *** Joins: allegorical_- (~guest@2607:fea8:33e0:65c::2)
[15:49:49] <CoderGuy> are there any examples?
[15:49:54] <Akronymus> People claiming you use patented code
[15:50:07] <Akronymus> And that you have to license it from them/pay a fine/stop using it
[15:50:17] <CoderGuy> but it's my code...
[15:50:21] <piou> CoderGuy: IIRC apache, like mozilla and others, make sure that if you use the code then you lose the right to patent the parts you modified that are under this license. So you can't have someone patent a modification made to your project and then ask you money for it. In practice I've never seen that at play.
[15:50:21] <CoderGuy> how can they make this claim?
[15:50:23] <Akronymus> Or, well, patented algorithms or such
[15:50:33] <pyzozord> Oh. My terminal takes 7s, while original st takes 0.7s :D
[15:50:34] <Akronymus> CoderGuy that's the "troll" part
[15:50:41] <pyzozord> I don't think I optimized it all that much
[15:50:47] <DPA> "I have the patent on linked lists, and displaying an image! Your program does use it a lot! Pay me!"
[15:51:10] *** Quits: lasr[m] (~lasrhalog@2001:470:69fc:105::c875) (Quit: You have been kicked for being idle)
[15:51:15] <tcsilver> :)
[15:51:22] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[15:51:22] <GeDaMo> https://www.theregister.com/2021/09/01/data_scientists_riemann_zeta_function/
[15:51:23] <Akronymus> Usually those patents are something that should not be patentable in the first place due to being obvious.
[15:51:24] <tcsilver> @dpa
[15:51:25] <CoderGuy> if I release something under MIT, can I get patent trolled?
[15:51:27] *** Joins: lasr[m] (~lasrhalog@2001:470:69fc:105::c875)
[15:51:28] <tcsilver> hi gedamo
[15:51:34] <GeDaMo> Hi tcsilver :)
[15:51:40] <Akronymus> LICENSES DONT MATTER TO PATENT TROLLS
[15:51:43] <tcsilver> gedamo can I PM you about my RPG ?
[15:51:53] <tcsilver> for 3 minutes
[15:52:04] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 252 seconds)
[15:52:04] *** swagneko is now known as nekodesu
[15:52:09] <GeDaMo> OK
[15:52:11] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[15:52:14] <piou> CoderGuy: just like any other license really
[15:52:24] *** Quits: nekodesu (~bit@user/nekobit) (Quit: uninstall gentoo)
[15:52:28] <CoderGuy> like I can see if i'm selling something
[15:52:31] <CoderGuy> but if i'm giving this away
[15:52:35] <CoderGuy> can I get patent trolled?
[15:52:37] *** Joins: Enitin (~Enitin@82.102.22.84)
[15:52:41] <Akronymus> Yes
[15:52:42] <piou> CoderGuy: yes, always
[15:52:44] <Akronymus> License
[15:52:45] *** Joins: gggp (~textual@60.10.194.45)
[15:52:47] <Akronymus> doesn't
[15:52:48] <piou> CoderGuy: that's what troll is for
[15:52:48] <Akronymus> matter
[15:52:48] <CoderGuy> really, even when it's free?
[15:52:49] <Akronymus> to
[15:52:50] <Akronymus> patent
[15:52:52] <Akronymus> trolls
[15:53:06] <Akronymus> Yes, even then
[15:53:08] *** Joins: jokoon (~eio@2a01:e0a:542:e160:c0cc:c5be:7650:abff)
[15:53:10] *** Quits: allegorical_ (~guest@2607:fea8:33e0:65c:a9d1:9a93:5493:f440) (Ping timeout: 240 seconds)
[15:53:14] <piou> CoderGuy: the question isn't the benefit you're making
[15:53:15] <CoderGuy> so what do people use on github then when releasing stuff?
[15:53:33] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[15:53:38] <CoderGuy> hmm lets check what like notepad++ is under
[15:53:39] <Akronymus> Depends on how you want others to be able to use your code
[15:53:45] *** Joins: swagneko (~bit@user/nekobit)
[15:53:45] *** Quits: ghost64 (~ghost64@user/ghost64) (Write error: Connection reset by peer)
[15:53:47] <piou> CoderGuy: lots of gpl and mit
[15:54:03] *** Quits: fch (~myname87@mob-5-90-227-40.net.vodafone.it) (Ping timeout: 244 seconds)
[15:54:36] <CoderGuy> Akronymus, I just want it to be open for anyone to do whatever they want as long as they don't sue me lol
[15:54:37] <piou> CoderGuy: trying to find an answer to patent trolls is like trying to find an answer to being pulled over by cops: it'll always be a possibility and it'll always be annoying if it happens but that's not the thing you should fear whenever you take the wheel
[15:55:01] <piou> CoderGuy: license won't avoid patent trolls if they want to sue you, no more than having a red roof will
[15:55:10] <CoderGuy> oh
[15:55:12] <CoderGuy> so then I guess MIT
[15:55:16] <Akronymus> Then use a no rights reserved one IMO
[15:55:19] <CoderGuy> and notepad++ is under gnu/gpl
[15:55:40] <Akronymus> The is the only true "do whatever they want" license.
[15:55:43] <piou> I prefer MIT to no rights reserved really, I don't think that's a good default license
[15:55:52] <PlanckWalk> Licenses that mention patents are mainly there to protect users from you
[15:56:10] <Akronymus> Or you from contributors
[15:56:19] <PlanckWalk> To a lesser extent, yes
[15:56:39] <Akronymus> Like, if you contribute you give up your rights to the code
[15:56:46] <DPA> Isn't "no rights reserved" that text everyone historrically puts in licenses, but which doesn't actually have any legal meaning anymore?
[15:56:58] <Akronymus> all rights reserved you mean
[15:57:13] *** Joins: keir (~keir@user/keir)
[15:57:14] <Akronymus> no rights reserved literally means, you can do whatever you want.
[15:57:19] <DPA> Ah, "all". right.
[15:57:22] <CoderGuy> alright imma just do mit it seems simple and apache is so complicated I have no idea if i'm licencing or starting a company lol
[15:57:25] <Akronymus> Whereas the default is all rights reserved
[15:57:57] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 245 seconds)
[15:59:17] *** Quits: Ecophobia (~Ecophobia@mobile-access-2e840c-136.dhcp.inet.fi) (Quit: WeeChat 2.8)
[16:00:28] <DPA> With MIT, you have to keep the license notice, I think. I could argue "unlicense" and the "WTFPL" ("Do What The Fuck You Want To Public License) and similar are even less restrictive, but they somehow never cought on.
[16:00:32] *** Joins: ghost64 (~ghost64@user/ghost64)
[16:00:59] <Akronymus> wtfpl has the problem that it doesn't explicitly waive your copyright.
[16:01:06] <Akronymus> Which cc0 does
[16:01:22] *** Joins: DasBrain (DasBrain@user/dasbrain)
[16:01:36] <PlanckWalk> Some places don't allow waiving copyright
[16:01:41] <merijn> Akronymus: Eh, that's not even possible in every jurisdiction
[16:02:14] <Akronymus> PlanckWalk ok, I shouldve said waives your rights under copyright
[16:02:15] <DPA> I think, in any case, the intent of WTFPL is absolutely clear, which should be what matters most.
[16:02:27] <Akronymus> DPA lawyers disagree
[16:02:42] <merijn> DPA: "All rights reserved" *does* have meaning, it means that all rights not explicitly granted in the license are reserved for the author
[16:02:57] <Akronymus> cc0 waives all your rights you get from having the copyright. 
[16:02:59] <merijn> DPA: Else you get people arguing about stuff like "implicit license grants" etc
[16:03:03] <Akronymus> So, you can't sue or anthing
[16:03:37] <Akronymus> Which is as close as you can get to making it public domain in many jurisdictions
[16:04:01] <DPA> Lawyers want to have covered everything. Courts probably don't care about that.
[16:04:37] *** Quits: DasBrain_ (~DasBrain@user/dasbrain) (Ping timeout: 245 seconds)
[16:04:39] <Akronymus> damn, I have a ping that won't go away.
[16:04:48] <Akronymus> could someone ping me?
[16:04:56] <DPA> Akronymus: Akronymus: Akronymus:
[16:05:03] <Akronymus> Thanks.
[16:05:07] <Akronymus> It's gone now
[16:06:15] <Akronymus> https://creativecommons.org/publicdomain/zero/1.0/legalcode this is the cc0 text btw
[16:06:15] <bayaz> Title: Creative Commons Legal Code 
[16:06:23] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[16:06:34] *** Joins: flynn (~mcbloch@user/flynn)
[16:07:41] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[16:08:31] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 244 seconds)
[16:08:59] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[16:10:23] <smallville7123> i hate that i cant use ExternalProject_Add on android ;-;
[16:12:12] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[16:12:14] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[16:12:25] *** Quits: AsenMx (~AsenMx@78.90.248.234) (Ping timeout: 252 seconds)
[16:12:47] *** Joins: AsenMx (~AsenMx@212-5-158-182.ip.btc-net.bg)
[16:13:52] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 245 seconds)
[16:14:12] <CoderGuy> alright cool MIT feels great
[16:14:22] <CoderGuy> I just put the license call it MIT and i'm done no more thinking lol
[16:15:18] *** Joins: Hax0r (~Hax0r@51.252.26.81)
[16:17:18] *** Quits: independent__ (~independe@95.144.68.39) (Ping timeout: 244 seconds)
[16:18:24] <DPA> I'm so disappointed in humanity right now...
[16:18:43] <[itchyjunk]> good
[16:19:40] <Akronymus> Hello, so disappointed in humanity right now... . How are you?
[16:19:52] <mobidrop> me too dpa, me too
[16:20:22] *** Joins: independent__ (~independe@95.144.68.39)
[16:20:40] *** Quits: xff0x (~xff0x@2001:1a81:5329:9c00:9b27:ac34:a98:1a7c) (Ping timeout: 252 seconds)
[16:20:59] *** Quits: Hax0r (~Hax0r@51.252.26.81) (Quit: Leaving)
[16:21:26] *** Joins: dan01 (~dan01@109.98.161.73)
[16:23:40] *** Joins: xff0x (~xff0x@2001:1a81:5329:9c00:9b27:ac34:a98:1a7c)
[16:24:46] <pyzozord> I think my company will not extend my contract :(
[16:25:28] *** Quits: ixil (~ixil@mpp-cp1-natpool-2-165.ethz.ch) (Remote host closed the connection)
[16:25:44] <pyzozord> Maybe my destiny is to just job-hop until retirement?
[16:25:57] *** Quits: hexingb (~hexingb@2409:8900:2720:35aa:98c2:101:e878:13ce) (Ping timeout: 245 seconds)
[16:26:32] <orondo> Nobody knows, but I hope you find something good soon.
[16:26:41] *** Quits: orondo (~orondo@user/orondo) (Quit: leaving)
[16:26:42] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 245 seconds)
[16:27:20] *** Joins: Crescendo (~Crescendo@user/crescendo)
[16:27:23] <tcsilver> maybe you WILL find something good
[16:27:32] <tcsilver> I would hire you if i could :)
[16:27:55] <tcsilver> for a long term project ;D
[16:28:29] <pyzozord> aww :)
[16:28:36] <tcsilver> :)
[16:31:38] *** Joins: DevAntoine (~DevAntoin@195.101.183.21)
[16:32:17] *** Quits: Thedarkb1 (~Thedarkb@85.255.234.233) (Ping timeout: 244 seconds)
[16:36:24] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[16:40:33] *** Quits: gggp (~textual@60.10.194.45) (Ping timeout: 244 seconds)
[16:42:33] *** Joins: TCZ (~tcz@91.150.165.88)
[16:42:47] *** Quits: AsenMx (~AsenMx@212-5-158-182.ip.btc-net.bg) (Remote host closed the connection)
[16:43:14] *** Joins: AsenMx (~AsenMx@212-39-89-182.ip.btc-net.bg)
[16:43:40] <mobidrop> let's pray for pyzozord together : May pyzozord find satisfying employment
[16:43:59] *** Joins: gggp (~textual@60.10.194.45)
[16:44:27] *** Quits: AsenMx (~AsenMx@212-39-89-182.ip.btc-net.bg) (Max SendQ exceeded)
[16:44:55] *** Joins: AsenMx (~AsenMx@212-5-158-182.ip.btc-net.bg)
[16:45:15] <jinsun> CoderGuy: for even less thinking about licenses just don't have one at all (but only do that if you don't care who or how many people use it)
[16:45:43] <CoderGuy> yeah I could but I like the idea of at the very least having a license
[16:46:02] <mrig> DPA: why's that?
[16:46:57] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[16:47:04] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 252 seconds)
[16:47:26] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:9cd1:7ad:f0f6:4c60)
[16:47:55] *** Joins: rtypo (~alex@user/rtypo)
[16:49:20] *** Quits: AsenMx (~AsenMx@212-5-158-182.ip.btc-net.bg) (Ping timeout: 244 seconds)
[16:49:45] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[16:50:02] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[16:51:22] <DPA> Because people just think "Ok, this is an easy solution, let's just do that.", but don't care about what things means, how things play together with all the other things in this world, and what it all will result in.
[16:51:39] <DPA> "This is fine..."
[16:51:46] *** Joins: hexingb (~hexingb@103.37.140.36)
[16:54:08] <Akronymus> Why doesn't windows 10 have the ability to snap a window to the top or bottom half?
[16:54:12] *** Quits: dan01 (~dan01@109.98.161.73) (Ping timeout: 245 seconds)
[16:54:56] <mobidrop> we don't live in quality times so we don't care about doing things the best way
[16:55:04] <mrig> DPA: I could not agree with you more; The level of quality in things at the moment is at an all time low; Those who lead have no sense of smell, there is no other possible outcome of this than detritus.
[16:55:28] <mrig> curious time, but an interesting time to live if you are a keen observer.
[16:55:56] <mobidrop> our work will be obsolete in a couple of years, our salary today will lose its value in a couple of years etc
[16:56:53] <mrig> Yes, where will this lead to?
[16:57:00] <mrig> curious time.
[16:57:30] <mrig> I dont think that programming will be obsolete though, we could be just getting started.
[16:57:56] *** Joins: Enitin (~Enitin@82.102.22.85)
[16:58:23] <mobidrop> of course programming will persist
[16:58:34] <Akronymus> mobidrop use that time to learn new stuff then?
[16:58:58] <mrig> oh the lowdown jobs are always being removed, this has been going on since the inventions of the loom.
[16:59:27] <mrig> nothing new about the fortunate forgetting where their fortune comes from.
[16:59:55] <mrig> and no more continents to ship the peeved workers off to either.
[17:00:28] <mobidrop> Akronymus, yeah that's one of the few things we can do
[17:00:28] <mrig> hitting this very real ceiling will calm this trend down, I think.
[17:00:32] *** Joins: NEYi (~NEYi@109.251.216.38)
[17:00:42] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 244 seconds)
[17:00:47] <Akronymus> What paradigms are you able to program in, so far?
[17:01:13] <mrig> every profession that  i've learned has been dumbed down by tec and myself thus replace my entire life.
[17:01:38] <mrig> It is a little amusing to see it happen to the industry that has been doing it to all the other ones.
[17:01:42] <[itchyjunk]> playing with others doesn't mean the world becomes better
[17:01:53] <mobidrop> Akronymus, I can do functional, procedural, imperative
[17:02:01] <[itchyjunk]> i wanted to add certain comment to all my files in eclipse and it took me a while to do this
[17:02:06] <[itchyjunk]> i did it via code template
[17:02:21] <mrig> [itchyjunk]: the world reflects back at you that which you emit.
[17:02:23] <mobidrop> mrig, there's still a huge demand for senior / capable software engineers
[17:02:24] <Akronymus> mobidrop I guess smalltakl, erlang or lisp could be a next language to learn, then.
[17:02:35] <mobidrop> mrig, but the lower end is getting over saturated
[17:02:35] <Akronymus> Each of those is quite different.
[17:02:44] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[17:02:47] *** Quits: TCZ (~tcz@91.150.165.88) (Quit: ...)
[17:03:09] <mobidrop> I've been learning Rust but I could put in some more time
[17:03:31] <beaky> nice i like rust
[17:03:42] <beaky> in rust everything just feels right
[17:03:45] <xsperry> is beaky a bot?
[17:03:45] <Akronymus> Yeah, rust is nice.
[17:04:21] <mrig> all just bubbles anyhow.
[17:04:54] <mrig> with shorter and shorter longevity's it would seem.
[17:05:10] *** Quits: tcsilver (~tcsilver@pool-96-255-128-204.washdc.fios.verizon.net) (Ping timeout: 240 seconds)
[17:05:10] *** [1]tcsilver is now known as tcsilver
[17:05:52] *** Joins: jacks2 (~bc8167eb@217.29.117.252)
[17:10:57] *** Joins: src (~src@user/src)
[17:11:21] <mobidrop> mrig, the cycles are shortening
[17:12:26] *** Joins: ppang (~ppang@user/ppang)
[17:12:56] *** Quits: frost (~frost@59.71.240.119) (Quit: Connection closed)
[17:13:15] *** Quits: Mija (~Mija@user/mija) (Quit: Mija)
[17:14:05] <mobidrop> the debts will have to be paid! :D
[17:16:08] *** Parts: ppang (~ppang@user/ppang) (Leaving)
[17:16:41] *** Joins: dan01 (~dan01@109.98.161.73)
[17:16:56] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[17:17:03] *** Joins: jamea (~jamea@187.185.190.209)
[17:18:22] <pyzozord> so gprof doesn't seem so helpful
[17:18:42] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[17:23:13] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[17:23:39] *** Joins: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net)
[17:25:59] *** Quits: gggp (~textual@60.10.194.45) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:26:12] *** Joins: jazzy2 (~jaziz@172.58.36.54)
[17:27:45] *** Joins: gggp (~textual@60.10.194.45)
[17:28:42] <pikapika> pyzozord, hi uwu
[17:30:09] *** Quits: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net) (Ping timeout: 244 seconds)
[17:30:54] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[17:34:29] *** Joins: ixil (~ixil@mpp-cp1-natpool-2-434.ethz.ch)
[17:36:35] *** Quits: swagneko (~bit@user/nekobit) (Quit: uninstall gentoo)
[17:37:13] <pyzozord> pikapika: hi
[17:37:25] <pyzozord> I'm trying to figure out gcov now
[17:41:50] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[17:42:13] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[17:42:22] <mrig> mobidrop: well that is why the youth are so pissed at the moment; Picking up chronos's debts. Can't say that I blame them either.
[17:42:26] *** Joins: mishugana (~mishugana@user/mishugana)
[17:44:37] *** Quits: keir (~keir@user/keir) (Ping timeout: 244 seconds)
[17:44:40] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Ping timeout: 240 seconds)
[17:45:22] *** Quits: CalimeroTeknik (~calimero@user/calimeroteknik) (Remote host closed the connection)
[17:47:08] *** Joins: humanface (~humanface@20014C4E1C473D00A4E67DD8C63A3FAF.unconfigured.pool.telekom.hu)
[17:48:15] *** Joins: keir (~keir@user/keir)
[17:48:26] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[17:50:18] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 244 seconds)
[17:51:56] *** Joins: CalimeroTeknik (~calimero@user/calimeroteknik)
[17:52:03] <mobidrop> mrig, when you keep kicking the can down the road you might one day find you're all out of road :)
[17:52:18] <mobidrop> The word "scalable" has a mystical and stupefying power over the mind of the software engineer. Its mere utterance can whip them into a depraved frenzy. Grim actions have been justified using this word
[17:52:21] <mobidrop> :D I love that
[17:52:52] <[itchyjunk]> my anxiety is scalable
[17:52:53] *** Quits: jazzy2 (~jaziz@172.58.36.54) (Ping timeout: 244 seconds)
[17:54:34] *** Quits: independent__ (~independe@95.144.68.39) (Remote host closed the connection)
[17:54:52] *** Joins: independent__ (~independe@95.144.68.39)
[17:55:02] <mishugana> My stomach bloating right now is pretty much cloud-scale.
[17:55:27] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Quit: Ping timeout (120 seconds))
[17:55:53] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[17:56:59] <JavaBean> the number of demons my stomach is trying to summon would put "cloud-scale" to shame
[17:57:25] <mishugana> Apt name! XD
[17:58:04] *** Quits: independent__ (~independe@95.144.68.39) (Remote host closed the connection)
[17:58:22] *** Joins: independent__ (~independe@95.144.68.39)
[17:58:25] <pikapika> Java is an excellent language
[17:58:40] <mishugana> Oh hi, pikapika 
[17:58:47] <pikapika> mishugana, hi
[17:59:36] <JavaBean> please note, my nick is a reference to how i used to eat chocolate covered espresso beans by the bag
[18:00:07] <mishugana> Hahahaha
[18:01:07] <chives> Is there a channel for visual studios?
[18:01:37] <Akronymus> JavaBean does that even taste good?
[18:01:53] *** Quits: keir (~keir@user/keir) (Quit: keir)
[18:02:05] *** Quits: pandakekok9 (~job@wikimedia-commons/pandakekok9) (Remote host closed the connection)
[18:02:13] <Akronymus> Or are they prepared in a special way?
[18:02:19] <_0x1d3> @chives you might have some luck in #csharp
[18:02:54] *** Joins: keir (~keir@user/keir)
[18:05:10] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[18:05:51] *** Joins: Enitin (~Enitin@82.102.22.84)
[18:06:33] <mobidrop> I've seen multiple times in my career other devs aiming to make a system "scalable"
[18:06:43] <mobidrop> anticipating millions of potential users at the same time
[18:06:45] *** Quits: TallonRain (sid214799@user/tallonrain) ()
[18:06:52] <mobidrop> only to build a shitty system that isn't used by more than 100 users
[18:07:00] *** Joins: TallonRain (sid214799@user/tallonrain)
[18:07:10] <chives> _0x1d3: kthanks
[18:07:24] <chives> well hmm wasnt planning on c# though
[18:07:24] *** Joins: Pickchea (~private@user/pickchea)
[18:07:29] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[18:07:49] <JavaBean> Akronymus: they are very good, atleast i think so... just don't have too many, that is actually really easy to do
[18:08:18] <Akronymus> mobidrop build something that works
[18:08:24] <Akronymus> Then care about scaling
[18:08:34] <mrig> scale itself is fascinating
[18:08:56] <mrig> as above so below, turtles (in stacks) all the way down.
[18:08:59] <mrig> :D
[18:09:06] <mobidrop> Akronymus, "but then we'll have the first world problem of too many users and we'll have to rewrite the system" :P
[18:09:07] <Akronymus> But only gonna cause problems unless you actually need it
[18:09:26] <Akronymus> mobidrop then you can afford to rebuild it.
[18:09:28] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Remote host closed the connection)
[18:09:30] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[18:09:41] *** Joins: flynn (~mcbloch@user/flynn)
[18:09:42] <mobidrop> it's cargo cult programming: copy the solutions of companies like google without having any of the challenges
[18:10:08] *** Quits: hsiktas (sid224847@tooting.irccloud.com) ()
[18:10:18] <mrig> The common mantras of the cargo worshipers must be worth knowing if one is to communicate with the hipsters and the newbies :D
[18:10:19] *** Joins: Caffeinated (~Caffeine@user/alexdelarge)
[18:10:41] *** Joins: hsiktas (sid224847@id-224847.lymington.irccloud.com)
[18:11:18] <mobidrop> Akronymus, yeah... too bad they didn't listen
[18:11:58] <mobidrop> well at least the devs got to play with their favorite toys, it's more sad for the business owners
[18:12:49] *** Joins: Macuser (~Macuser@216.30.159.201)
[18:13:35] <Akronymus> I'd love to use f# at work.
[18:14:09] <Akronymus> But I won't use it when it makes problems.
[18:18:55] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[18:19:11] <merijn> mobidrop: Most people worried about "scalable"  don't have the skills to build scalable systems :)
[18:20:22] <mobidrop> merijn, yes well put :)
[18:20:47] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 244 seconds)
[18:20:47] *** Quits: Guest1684 (~hhaglid@hopper05.cs.purdue.edu) (Ping timeout: 244 seconds)
[18:21:18] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 244 seconds)
[18:21:23] <mobidrop> devs love to complain about failing management or poor requirements but devs themselves can easily lead a project astray
[18:22:36] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[18:22:53] *** Quits: keir (~keir@user/keir) (Quit: keir)
[18:23:05] *** Joins: keir (~keir@user/keir)
[18:23:29] <Akronymus> I CONSTANTLY shit on the legacy DB
[18:23:38] <Akronymus> but its what I have to work with.
[18:25:33] *** Quits: humanface (~humanface@20014C4E1C473D00A4E67DD8C63A3FAF.unconfigured.pool.telekom.hu) (Quit: Client closed)
[18:25:42] *** Joins: wovixo (~wovixo@128.104.205.49)
[18:26:37] *** Quits: independent__ (~independe@95.144.68.39) (Ping timeout: 252 seconds)
[18:26:49] <Caffeinated> sounds painful
[18:27:54] <oldlaptop> mobidrop: the greatest thing is when the idea that everyone cargo-cults because "$big_SF_tech_firm does it this way!" is actually abandoned by $big_SF_tech_firm and the cultists don't notice
[18:28:25] <sandman13> also, you are not $big_SF_tech_firm
[18:28:29] <oldlaptop> document DBs are a little bit like that, AIUI (google having found old-time sql religion again eventually)
[18:29:37] <sandman13> as much as people shit on PHP for example, it runs way too many websites.
[18:29:40] *** Joins: dudek (~dudek@185.150.236.103)
[18:29:48] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[18:30:27] <mobidrop> oldlaptop, yeah once they get an idea in their head it's over
[18:30:36] *** Quits: dan01 (~dan01@109.98.161.73) (Ping timeout: 244 seconds)
[18:31:18] <smallville7123> oh       ERROR: could not load symbol 'newInstance__imgui' from path '<self>' : undefined symbol: newInstance__imgui
[18:31:49] <sandman13> smallville7123: Python?
[18:32:01] <pikapika> oldlaptop, trends are like the wind
[18:32:02] <mobidrop> so these devs work for companies that don't really need scalable solutions and would rather benefit from reduced development time on their products
[18:32:09] <smallville7123> well fk, gotta debug android ndk dlopen/dlsym ;-;
[18:32:25] <mobidrop> but the very devs that should implement the product create some sort of abomination, complicating the whole project
[18:32:36] <sandman13> mobidrop: If the code is well maintained, that's all it counts
[18:32:42] <pikapika> sandman13, some people just have irrational hate for PHP
[18:33:05] <pikapika> In particular there is a very outdated and mostly wrong today article against php that is often cited
[18:33:11] <sandman13> pikapika: I understand the hate. But since PHP 7, things have improved.
[18:33:27] *** Joins: langstme (~langstme@user/langstme)
[18:33:33] <pikapika> Tbh with things like having to unref the iterator after a for each loop is annoying
[18:33:35] <pikapika> I'll grant that
[18:33:36] *** Quits: Lyn (~Lyn@user/law) (Read error: Connection reset by peer)
[18:34:04] *** Joins: Lyn (~Lyn@user/law)
[18:34:06] <pikapika> sandman13, some people just have irrational hate for certain languages
[18:34:21] <mishugana> hmmm
[18:34:26] <pikapika> Usually its their internal insecurity speaking because their "advanced hipster language" actually hasn't had any real work to show
[18:34:29] <sandman13> I personally don't like hyped languages.
[18:34:30] <mobidrop> the less familiar they are the more hate there is :)
[18:34:57] <sandman13> E.g. Rust. It has it's weaknesses but fanboys being fanboys don't mention it.
[18:34:58] <mishugana> sandman13: Like Rust?
[18:35:03] <mishugana> Hahahaha
[18:35:11] <pikapika> sandman13, its popular to hate C these days
[18:35:12] <mishugana> That was a race condition. 
[18:35:15] <sandman13> is it that evident? :D
[18:35:28] <pikapika> Its again internal insecurity speaking
[18:35:35] <mishugana> sandman13: Yeah, buddy. :D
[18:35:50] <mishugana> I call it the Markteing-Oriented Language
[18:36:07] <pikapika> They should put their words where their mouth is and actually write their own oses, drivers etc if they really want to prove their pet language is superior
[18:36:07] *** Joins: humanface (~humanface@20014C4E1C473D00A4E67DD8C63A3FAF.dsl.pool.telekom.hu)
[18:36:13] <sandman13> pikapika: There are certain areas that can be hated in case of C. But I generally find it nice to work with.
[18:36:15] <mishugana> Don't get me wrong - I use it, and think it's a decent language, but the hype is way over the top.
[18:36:25] <oldlaptop> sandman13: At worst, shouldn't hype be irrelevant to whether the language is any good?
[18:36:27] <mishugana> Marketing*
[18:36:28] <pikapika> sandman13, there are pluses and minuses to all languages
[18:36:28] <[itchyjunk]> are we talking about english ?
[18:36:33] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[18:36:42] <pikapika> But most of the C hate is due to irrational and superstitious reasons
[18:37:05] <mishugana> Not to mention that one shudders to imagine what today's languages will look like in 50 years time.
[18:37:29] <pikapika> People talk big shit about provable this, category that...but what real shit do they have to show for it?
[18:37:31] <sandman13> mishugana: It is like that sadly.
[18:37:47] *** Joins: nostalgia (~nostalgia@c-24-13-122-176.hsd1.in.comcast.net)
[18:37:48] *** Quits: mobidrop (~mobidrop@user/mobidrop) (Read error: Connection reset by peer)
[18:37:58] <pikapika> Its just trendy in some circles to shit on solid, well established languages
[18:38:01] *** Joins: scabby (~scabby@user/scabootssca)
[18:38:17] <sandman13> I am not bothered by it.
[18:38:28] <mishugana> [itchyjunk]: Strangely enough, that sort of elitism does extend to natural languages as well - folks love to shit on English, calling it "simple" wherease languages with complicated case systems give them an irreverent orgasm.
[18:38:36] <sandman13> I use C, I like it and there's no way they can prevent me from doing so.
[18:38:47] <pikapika> sandman13, its just insecurity
[18:39:11] <pikapika> Deep down they know their modern hipster wank has had nothing to show for it compared to what the established languages have done
[18:39:28] <mishugana> I used to think Steve Klabnik was a normal guy, and then I saw this hilarity - https://twitter.com/steveklabnik/status/1402297089690849284
[18:39:35] <sandman13> mishugana: "simple"? English is not simple. It's crazy. "Megan" is not same as "Vegan". Tier and tear are same
[18:39:47] <deniska> pikapika: solid well established language goes brr https://pbs.twimg.com/media/E-JtXw0XIAAAXrN?format=png&name=small
[18:39:48] <bayaz> Type: image/png Size: 29.6 kB 
[18:39:51] <mishugana> The vicious bile in that thread is hardly even remotely funny. Just... sort of sad, really.
[18:39:53] *** Quits: keir (~keir@user/keir) (Quit: keir)
[18:40:04] <mishugana> sandman13: hahahaha.
[18:40:25] *** Joins: keir (~keir@user/keir)
[18:40:49] <sandman13> deniska: UB alert! wiiwuwiiwu UB alert!
[18:40:52] *** Quits: keir (~keir@user/keir) (Client Quit)
[18:41:15] <mishugana> sandman13: Yeah, those fools don't realise that having complicated case systems actually makes those languages easier by removing more ambiguity wherease "analytical" languages like English tend to have very rigid word orders, and that's why beginners pick it up quickly, but take years to master.
[18:41:17] <sandman13> mishugana: Ignore Steve Klabnik and ignore reddit. Simple as that
[18:41:17] *** Joins: keir (~keir@user/keir)
[18:41:30] <mishugana> sandman13: Wise words to live by indeed.
[18:41:52] <deniska> C is ok… It's just that it's a dangerous tool and in many cases we can do better than that, and in cases in which we yet can't, we should strive to do better than that
[18:42:10] <sandman13> Yeah
[18:42:30] <Akronymus> pika, you are making the mistaken assumption that widespread = good.
[18:42:39] <mishugana> deniska: Well, Rust crashes if you try to allocate a large object directly on the heap, so...
[18:42:44] <Akronymus> And conversly, not widely used = bad
[18:42:58] <mishugana> And it's not even a new issue - been there since before 1.0. Weird.
[18:42:59] <pikapika> And just as much not as widely used does not automatically mean good either
[18:43:07] *** Quits: scabby (~scabby@user/scabootssca) (Ping timeout: 252 seconds)
[18:43:17] <deniska> mishugana: in many (most?( cases crashing is a better outcome than continuing in invalid state
[18:43:30] <mishugana> You mean segfaulting is good?
[18:43:40] <Akronymus> Yes
[18:43:52] <Akronymus> Let it crash
[18:43:55] <piou> can definitely be
[18:43:55] <sandman13> deniska: your lack of matching paretheses is triggering my internal Lisp engine :P
[18:43:56] <Frogging101> Yes, if the alternative is continuing to operate in an undetectable broken manner
[18:44:00] <mishugana> Anyway, the point is that every langauge has its warts. Rust's complexity is approaching (or even surpassing) that of C++. There is no silver bullet.
[18:44:17] <Akronymus> https://wiki.c2.com/?LetItCrash mishugana
[18:44:20] *** Joins: scabby (~scabby@user/scabootssca)
[18:44:40] <deniska> sandman13: it's a typo, too late :D
[18:44:43] <mishugana> That works well with languages like Erlang, sure.
[18:44:45] <Akronymus> Of course, log the crash and such.
[18:45:01] <mishugana> And even there, you do have supervisors who have to handle the errors.
[18:45:04] <deniska> mishugana: segfaulting is a better outcome than the same error but without segfault
[18:45:10] <Akronymus> You can often make subsystems that are cheap to crash and restart.
[18:45:13] <mishugana> Maybe, maybe not. 
[18:45:17] <Akronymus> Altough, not nearly as cheap as erlang.
[18:45:25] <deniska> mishugana: crash is loud, visible, and stops a program from doing wrong things
[18:45:39] <sandman13> but segfaulting on edge case or in production is sad state of affairs
[18:45:51] <sandman13> especially if you are the developer.
[18:45:51] <Akronymus> Or even stuff like cosmic rays.
[18:45:57] <deniska> mishugana: not crashing in such situation means that a program continues to operate on wrong assumptions, which can lead to leaking other people's data, or to arbitrary code execution and whatever
[18:46:21] <sandman13> I make my offerings to Gods and pray that it never happens. :D
[18:46:22] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:46:41] <mishugana> That's not even the point, is it? My point is that look at any language deeply enough, and it's full of warts.
[18:46:46] *** Joins: fweht (uid404746@id-404746.tooting.irccloud.com)
[18:46:49] *** Joins: Cashlin (~hp@user/cashlin)
[18:46:59] <mishugana> Acting like a half-century technology is somehow bad from birth is simply naivete.
[18:47:20] <deniska> mishugana: "we didn't know better back then" is how I see it
[18:47:20] <mishugana> sandman13: lol!
[18:47:30] <mishugana> Maybe.
[18:47:32] *** Quits: keir (~keir@user/keir) (Quit: keir)
[18:47:51] *** Joins: keir (~keir@user/keir)
[18:47:52] <piou> being old is certainly no sign of quality by itself either
[18:48:10] <mishugana> Sure, but that's a truism in itself.
[18:48:16] <piou> judge things on today's standards for today's context and issues
[18:48:30] <sandman13> I come with simple solution: Throw it all away. Computers are bloat. Post Office system and Telegram was prefectly fine.
[18:48:39] <mishugana> :D
[18:48:53] <Akronymus> The one language I'd say is "perfect" is lisp.
[18:48:59] <Akronymus> Because it can be anything you want.
[18:49:10] <sandman13> Akronymus: Like Ditto in Pokemon? xD
[18:49:19] <deniska> also because people mean at least 3 different languages by the name "lisp" :)
[18:49:23] <Akronymus> And "easy" to derive yourself.
[18:49:40] <Akronymus> deniska lisp means basically lispy languages in general IME.
[18:49:42] <deniska> sorry I like my infix notation
[18:49:54] <sandman13> (+ x 1)
[18:49:55] <Akronymus> So, S-expressions and such
[18:49:58] <mishugana> Yeah, "Lisp" is about as debated a category as "Functional Programming".
[18:50:17] <deniska> Akronymus: some people were really aggravated when I called clojure "a lisp"
[18:50:17] <mishugana> Some folks on /r/lisp don't even consider Clojure a Lisp, for instance.
[18:50:18] <Akronymus> youre in luck then, you can add infix notation yourself deniska
[18:50:20] <pikapika> Some language communities it seems only have a self identity based on dislike of some other language
[18:50:41] <Akronymus> https://www.cliki.net/infix
[18:50:43] <bayaz> Title: CLiki: Infix 
[18:50:48] <piou> Akronymus: sure, but with such a broad definition you're not talking about a language, you're talking about a data format
[18:50:50] <sandman13> Again, who cares about /r people
[18:51:01] <sandman13> You are giving them too much attention IMO
[18:51:07] <mishugana> Hahaha... fair enough.
[18:51:08] <Akronymus> Lisp macros make macros of other languages seem like toys.
[18:51:17] <Akronymus> piou thats fair enough
[18:51:46] <mishugana> My personal Lisp of choice is Common Lisp, SBCL in particular. Super efficient.
[18:52:01] <sandman13> Emacs Lisp hahaha
[18:52:06] <Akronymus> Ewww
[18:52:07] <Akronymus> emacs
[18:52:15] <Akronymus> (I jest)
[18:52:15] <oldlaptop> piou: I don't think lisp enthusiasts would disagree with you at all
[18:52:23] <mishugana> Strangely enough, sandman13 that might be the most popular version of Lisp.
[18:52:39] <sandman13> boy, Vimscript!
[18:52:51] <sandman13> (I kid as I use Vim more than Emacs)
[18:52:58] <piou> oldlaptop: data is code, code is data, sure, but still, notation's not enough to describe a language
[18:53:09] <mishugana> Me too, Vim for everything but Common Lisp (SLIME + Emacs for that).
[18:53:20] <Akronymus> I get the appeal of emacs.
[18:53:26] <Akronymus> But personally prefer vim.
[18:53:31] <piou> same
[18:53:41] <sandman13> Akronymus: What do you use to manage projects in Vim?
[18:53:42] <oldlaptop> notation is precisely the definition of a language
[18:53:45] <mishugana> Vim's plugins for Common Lisp are sadly underwhelming and awkward to work with.
[18:54:01] <Akronymus> sandman13 mostly I use vim for editing specific files.
[18:54:10] <Akronymus> Overall I mainly use rider
[18:54:15] <oldlaptop> lisp is unusual mainly in that it has almost no notation
[18:54:15] <mishugana> I use Vim + fzf + ag, no plugins.
[18:54:15] <piou> oldlaptop: not at all, you also need something to be done according to that notation
[18:54:19] <sandman13> I currently use fzf + rg, but I would like Projectile kind of thing in Emacs though
[18:54:26] <Akronymus> But sometimes you just need good filewide editing.
[18:54:30] *** Quits: mteo (francis@user/francis) (Remote host closed the connection)
[18:54:31] <mishugana> I might consider using LSP later on, but haven't felt the need yet.
[18:54:47] <Akronymus> oldlaptop you can add basically anything to lisp and it still is lisp.
[18:54:58] <piou> oldlaptop: the fact that the notation of most lisp programs essentially describes the AST is a characteristics that does not need to exist and certainly cannot be infered from notation alone
[18:55:08] <Akronymus> https://en.wikipedia.org/wiki/Big_ball_of_mud#In_relation_to_Lisp
[18:55:08] <bayaz> Title: Big ball of mud - Wikipedia 
[18:55:28] <piou> oldlaptop: the memory model, the evaluation model, none of this can be infered from notation alone, and these make very different languages
[18:55:37] <Akronymus> With lisp macros you can transform functions themselves.
[18:55:40] <mishugana> piou: That I agree with.
[18:55:41] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[18:55:54] <Akronymus> Like ripping out a + and instead inserting a *
[18:56:43] <Akronymus> Hell, you can redefine the whole language dynamically.
[18:56:53] <oldlaptop> piou: That stuff is important for defining programming environments, which are often confused with "languages"
[18:57:02] <Akronymus> Like enabling/disabling static typing during runtime.
[18:57:31] <piou> oldlaptop: The same notation, say (+ 3 2), can produce 5 or 6 or "32"
[18:57:45] <mishugana> oldlaptop: IIRC, those are part of the language specification though - the memory model and the evaluation model.
[18:57:51] <piou> oldlaptop: notation is only half the language, what this notation *means* is another story altogether
[18:57:53] <Akronymus> Depends on how "+" was defined.
[18:58:01] <piou> Akronymus: exactly, that definition is part of the language
[18:58:19] <Akronymus> In the case of lisp, you can rewrite the definition literally any time.
[18:58:28] <Akronymus> Also, the REPL.
[18:58:31] <oldlaptop> the "language" is syntax, the semantics are something else
[18:58:33] <piou> Akronymus: yes, but that's not what I'm talking about here
[18:58:39] <Akronymus> Oh fair nuff
[18:58:49] <oldlaptop> semantics are important, but they aren't part of "the language" itself
[18:58:56] <mishugana> oldlaptop: That would depend on the language specification though, wouldn't it? The Java Memory Model, for instance.
[18:59:07] <oldlaptop> mishugana: Such specifications specify more than a language
[18:59:08] <mishugana> Every conforming implementation has to have the same semantics.
[18:59:17] <piou> oldlaptop: I extremely disagree, you don't have a language if you don't even know what (+ 3 2) means
[18:59:33] <piou> oldlaptop: language is the intersection of syntax and semantics
[18:59:37] <mishugana> That depends on the specification though. The Java specs make it clear that it's part of the official language standard, for instance.
[19:00:20] <piou> oldlaptop: and that's also shown in linguistic where language is routinely described as the association of a symbol and a meaning, and other popular definition still include such association
[19:00:21] <mishugana> Maybe some languages do leave some details out.
[19:01:31] <oldlaptop> piou: Perhaps there's some confusion here. I'm thinking mainly in CS terms, not human natural-language terms. (+ 3 2) indisputably belongs to the set of strings that are "valid lisp", that is, the lisp language
[19:01:53] <Akronymus> > APL is like a beautiful diamond – flawless, beautifully symmetrical. But you can't add anything to it. If you try to glue on another diamond, you don't get a bigger diamond. Lisp is like a ball of mud. Add more and it's still a ball of mud – it still looks like Lisp.
[19:02:17] <Akronymus> Most languages fall into the diamond category.
[19:02:21] *** Joins: src_ (~src@user/src)
[19:02:47] <Akronymus> If you look at c++ for example, you can definitely tell that stuff kept getting bolted on over time.
[19:02:54] <mercenary> add too much mud, and it starts looking like a planet
[19:02:59] <piou> oldlaptop: ok, then another example to show the issue with that reasonning:   what language is    3 + 2     ?
[19:03:04] <Akronymus> But its still a ball of mud
[19:03:45] <piou> oldlaptop: I realize that you're talking in CS terms, so am I, but it just happens that regular language definition sheds interesting light on the CS definition and for good reasons
[19:04:11] <oldlaptop> quite a few different ones, I would say
[19:04:25] *** Joins: eson123 (~eson123@118.69.128.37)
[19:04:34] *** Quits: src (~src@user/src) (Ping timeout: 252 seconds)
[19:04:51] <piou> oldlaptop: and there you have your issue. There's a distinction to be made between "being valid syntax for a language" and "being a language", and therefore syntax alone does not suffice to define a language
[19:04:57] <eson123> wanna ask a bit about binary tree, i have been learning about it and i found a cool thing such as Binary tree search but so far that is the only algorithm i can find from it, is there any other binary tree algorithm ?
[19:05:09] <Akronymus> Nowadays I find prefix notation quite a bit more intuitive.
[19:05:15] <piou> oldlaptop: sure (+ 3 2) is a S-expression, but it doesn't even have to be related to a programming language
[19:05:48] <piou> oldlaptop: the fact that you can write this string in a lisp language and it is properly evaluated (generally, I hope) depends as much on the syntax as it does the semantics
[19:06:19] <Akronymus> You COULD write a lisp that does right to left evaluation if you want.
[19:06:26] <Akronymus> Within normal lisp.
[19:06:27] <piou> Absolutely!
[19:06:41] <Akronymus> Or postfix
[19:06:46] *** Quits: src_ (~src@user/src) (Ping timeout: 252 seconds)
[19:06:59] <piou> But Lisp is such a fun language because it is able to change the language itself on the go, which is not to say that a lisp *is* every language at the same time
[19:07:14] <Akronymus> And if you break something, you get dropped into the REPL.
[19:07:17] <pyzozord> how does lisp make it possible to change itself on the go?
[19:07:20] <Akronymus> And can debug it right there and then
[19:07:29] <GeDaMo> eson123: https://en.wikipedia.org/wiki/Tree_traversal
[19:07:30] <bayaz> Title: Tree traversal - Wikipedia 
[19:07:30] <Akronymus> pyzozord because code IS data
[19:07:42] *** Quits: TechTest (uid283215@tooting.irccloud.com) ()
[19:07:44] <Akronymus> Lisp macros take code and return code
[19:07:59] <eson123> GeDaMo: awh ok thk
[19:08:01] *** Joins: TechTest (uid283215@id-283215.lymington.irccloud.com)
[19:08:05] <GeDaMo> pyzozord: Lisp has reader macros which can parse the program
[19:08:10] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[19:08:20] <GeDaMo> (Forth can do that too :P )
[19:08:23] <piou> pyzozord: in most lisps the program is actually a direct representation of the AST, and by modifying this AST through macros you are able to change how the program is evaluated in depth
[19:08:25] <oldlaptop> piou: just take care you don't put the thing in a cage while you're "shedding light" on it
[19:08:29] <pyzozord> I'm not sure I understand what are "macros" in this situation. Is it like an eval() function?
[19:08:47] *** Joins: Enitin (~Enitin@82.102.22.86)
[19:08:58] <mishugana> pyzozord: No, normal macros are expanded at compile time
[19:08:58] <GeDaMo> They're functions which work on the program itself
[19:09:06] <Akronymus> pyzozord MUCH more than that.
[19:09:21] <Akronymus> Macros can access EVERYTHING about the function
[19:09:30] <Akronymus> Down to each individiual symbol
[19:09:51] <Akronymus> So you can rewrite a `add` to a `+` on runtime.
[19:09:56] <Akronymus> If you want to.
[19:10:24] <Akronymus> And thats BARELY scratching the surface
[19:10:33] <pikapika> Then it is too minimal to be called a language and becomes rather a metalanguage
[19:10:46] <pikapika> Nothing wrong with metalanguage type stuff
[19:10:54] <pikapika> C++ is also basically a "family of languages"
[19:11:10] <pikapika> But that means each project could basically become its own language
[19:11:14] <piou> pikapika: it's a full language still, the fact that you can change definitions doesn't mean there are none
[19:11:33] <piou> pikapika: and not all lisps have the same "base definitions"
[19:11:35] <Akronymus> Lisp can EASILY be implemented in any language.
[19:11:35] <pikapika> It is, but its so minimal and supposedly macros are meant to modify it so much
[19:11:45] <piou> (base or evaluation model or syntax)
[19:11:56] <piou> pikapika: it's not minimal by any stretch
[19:11:57] <pikapika> that I have a feeling it would have that issue where each codebase is sort of its own lang
[19:12:14] <pikapika> Akronymus, there are many lisps
[19:12:21] <piou> pikapika: common-lisp is a *big* language, despite the fact that you can change  anything in it
[19:12:32] <Akronymus> But each can be converted to each other, if you are so inclined.
[19:13:23] <pikapika> piou, like is it big due to libraries or big due to "syntax"? How much of the syntax and libraries are made from tools that are also accessible to the programmer and are not special magic?
[19:13:49] <gurki> "accessible" and "you will grasp it" are two very different concepts for stuff written in lisp
[19:13:53] <piou> pikapika: it has quite the big syntax still, and even bigger standard libraries
[19:14:17] <mishugana> pikapika: In a way, that's true. Too much usage of macros can lead to inscrutable code. Reader macros are even more dangerous in that regard. An old project of mine banned reader macros altogether and had strict reviews of every custom macro in the codebase.
[19:14:25] <Akronymus> In lisp you can change the actual library during runtime.
[19:14:32] <Akronymus> Not sure if any other language allows that.
[19:14:38] <GeDaMo> Forth! :P
[19:14:43] <gurki> Akronymus: most do
[19:14:44] <Akronymus> Like, change the internal functionality of libraries
[19:14:46] <pikapika> Akronymus, that doesn't sound hard
[19:14:53] <pikapika> It just sounds like an application of dlsym or similar
[19:14:54] <pikapika> in other langs
[19:14:56] <pikapika> I think
[19:14:58] <gurki> its juste the nicety of the syntax that varies
[19:15:03] <gurki> just*
[19:15:07] <piou> pikapika: as for magic... well that depends on how you define magic. Macro use is pretty standard in lisp code but it can definitely lead to a feeling of magic from a non-lisper point of view
[19:15:13] <pikapika> Java also I think can load classes at runtime
[19:15:22] <pikapika> piou, no I meant like
[19:15:23] <Akronymus> Not just load at runtime.
[19:15:31] <Akronymus> Change out internal functionality of it at runtime.
[19:15:33] <pikapika> Let us take the example of the + operator for String in Java
[19:15:37] <pikapika> Its a special compiler magic
[19:15:41] <homura> i'm learning to code
[19:15:48] <mishugana> homura: Welcome!
[19:15:59] <pikapika> Whereas in say C++, the string + operator is made from standard language features (operator overloading) that are equally accessible to the programmer
[19:16:18] <piou> pikapika: *everything* is accessible to the programmer in lisp
[19:16:22] <piou> pikapika: that's kind of the point
[19:16:25] <Akronymus> But can you change its MEANING at runtime
[19:16:25] <pikapika> Yeah thats what I was asking
[19:16:27] <oldlaptop> Akronymus: tcl does, pretty much
[19:16:44] <Akronymus> Gotta look at tcl and forth
[19:16:46] <oldlaptop> (by unbelievable coincidence, it is sometimes compared to lisp)
[19:16:53] <piou> forth is fun
[19:17:13] *** Quits: eson123 (~eson123@118.69.128.37) (Quit: Leaving)
[19:17:15] <homura> danke
[19:17:26] <Akronymus> pikapika lisp macros are pretty much equivalent in power as assembly.
[19:17:35] <Akronymus> But a hell of a lot more expressive
[19:17:41] <gurki> that ... doesnt make sense
[19:17:43] <piou> I much prefer its "pipe"-ness to lisp's S-expressions frankly, but lisp languages are generally much more developped than forth library-wise etc so it can be hard to write "real" things in forth
[19:17:58] <mishugana> C++ templates are also Turing-complete :D
[19:18:10] <Akronymus> gurki With assembly you can change instructions of other parts of the program at runtime (Assuming no memory protection)
[19:18:23] <GeDaMo> In Forth, you can have any feature you like as long as you're prepared to write it yourself :P
[19:18:28] <gurki> you can do that with any language if you assume no memory protection
[19:18:35] <pikapika> piou, for me a true test of syntax malleability is if you can write what can be reasonably considered DSLs in the base language itself
[19:18:38] <gurki> also the concept of asm is being low level.
[19:18:45] <pikapika> ie not by implementing a compiler that takes in a string or file
[19:18:50] <gurki> which is quite the opposite of the concept of lisp
[19:18:51] <pikapika> but just using standard syntax of the base language
[19:18:58] <Akronymus> pikapika then lisp would have to be the perfect language for you
[19:19:00] <piou> pikapika: then lisp is the definition of malleability
[19:19:05] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[19:19:22] <Akronymus> The big ball of mud is meant seriously.
[19:19:31] <gurki> (actually this is how code insertion by buffer overflow works)
[19:19:37] <pikapika> Yeah that stuff is quite interesting
[19:19:44] <Akronymus> You can do anything, add anything you want and such and still have it look like lisp
[19:19:44] <piou> pikapika: I cannot think of another language (except forth) that is as much designed arround the idea that the best way to solve a problem is to write a DSL for it
[19:19:52] <pikapika> I consider C++ to be "dsl-able" within my standards
[19:19:53] <Akronymus> gurki i know.
[19:19:58] *** Quits: silasfox (~sbv@xdsl-85-197-57-82.nc.de) (Ping timeout: 252 seconds)
[19:20:11] <Akronymus> piou f# to some extent
[19:20:14] <mishugana> True, also Haskell
[19:20:15] <pikapika> I'd definitely like to learn lisp if it as you claim supports such syntacic malleability
[19:20:30] <GeDaMo> http://arcanesentiment.blogspot.com/2010/07/inevitable-interpreter.html
[19:20:31] <bayaz> Title: The inevitable interpreter 
[19:20:34] <gurki> pikapika: most ppl either hate or love lisp
[19:20:47] <pikapika> I don't have strong feelings
[19:20:48] <gurki> so write a few hundred lines of code and youll have a strong oppinion :P
[19:20:50] <pikapika> about it
[19:20:55] <Akronymus> And ANY complex enough system eventually implements half of a broken dialect of lisp.
[19:21:17] <Akronymus> gurki lisp is pretty much the least opinionated language out there. :P
[19:21:31] *** Joins: mteo (francis@user/francis)
[19:21:33] <gurki> i hate it with a passion :P
[19:21:43] <gurki> but thats mainly since i was forced to use it and had to hit deadlines.
[19:21:45] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 244 seconds)
[19:21:50] <gurki> mb its more fun if you have more time
[19:21:57] <piou> lisp's opinion is "meh, change it if you want"
[19:22:06] <mishugana> It's fun for interactive development
[19:22:22] <pyzozord> I don't think I'm ready to understand what are lisp macros. I'm still confused about car
[19:22:26] <mishugana> However, for bigger projects, I definitely takea  static language anyday.
[19:22:38] <GeDaMo> car just the first element of the list
[19:22:40] <mishugana> pyzozord: hahaha
[19:22:42] <piou> pyzozord: that's fine really
[19:22:55] <Akronymus> GeDaMo unless you change it. 
[19:23:02] <Akronymus> But that's being pedantry
[19:23:12] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:23:58] <pikapika> pyzozord, just a pair of pointers
[19:24:00] <pikapika> Thats it
[19:24:02] <pikapika> nothing more nothing less
[19:24:13] <pikapika> Its all about manipulating a linked list like structure
[19:24:23] <GeDaMo> Lisp lists are actually binary trees
[19:24:28] <Akronymus> https://cdn.discordapp.com/attachments/532344856731975690/836296248528732170/y-combinator-codex-micro.jpg <-- the y combinator as a artpiece
[19:24:28] <bayaz> Type: image/jpeg Size: 1.1 MB 
[19:24:41] <pikapika> Any nested list would be a tree structure of course
[19:26:02] <Akronymus> Technically in lisp the list is a pair of values, where one value is the next pair of values and so on.
[19:26:16] <pikapika> Its just a pair of pointers
[19:26:32] <Akronymus> Kinda.
[19:26:36] <Akronymus> But MUCH more powerful
[19:26:43] <Akronymus> In terms of expressive power.
[19:26:53] *** Joins: diamondbond (~diamondbo@175.157.75.35)
[19:27:55] *** Quits: mishugana (~mishugana@user/mishugana) (Quit: leaving)
[19:29:31] *** Quits: keir (~keir@user/keir) (Quit: keir)
[19:29:48] <Akronymus> http://iplayif.com/?story=http%3A%2F%2Fwww.ifarchive.org%2Fif-archive%2Fgames%2Fzcode%2Flists.z5 pikapika
[19:29:49] <bayaz> Title: Parchment 
[19:30:04] <Akronymus> Lists and lists is a quite decent tool to get to know the basics.
[19:30:22] <humanface> can somebody tell me why do I need to deal with alpha channel video generating with a modeling program, if I'm a programmer?
[19:30:25] *** Joins: snake (~snake@user/snake)
[19:31:10] *** Quits: Pent (sid313808@tooting.irccloud.com) ()
[19:31:15] <GeDaMo> https://developer.nvidia.com/content/alpha-blending-pre-or-not-pre
[19:31:16] <bayaz> Title: Alpha Blending: To Pre or Not To Pre 
[19:31:26] *** Joins: Pent (sid313808@id-313808.lymington.irccloud.com)
[19:31:47] <pikapika> Akronymus, whats that
[19:31:55] <pikapika> It looks like a text game
[19:31:59] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
[19:32:15] <Akronymus> Its a small game to learn the basics of lisp
[19:32:36] <pikapika> Ok
[19:33:03] *** Joins: orondo (~orondo@user/orondo)
[19:33:07] *** Joins: Enitin (~Enitin@82.102.22.86)
[19:33:11] *** Joins: Macuser (~Macuser@216.30.159.201)
[19:33:34] <[itchyjunk]> i was reading the problem wrong
[19:33:45] <[itchyjunk]> and spent 30+ mins on it
[19:33:51] <[itchyjunk]> and now i am exhausted to do anything else
[19:33:54] <[itchyjunk]> fml
[19:33:59] <Caffeinated> lol it's like the old Colossal Cave adventure game
[19:34:57] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[19:35:13] <GeDaMo> Interactive Fiction is the modern name for text adventures
[19:35:21] *** Joins: magla (~gelignite@55d4a93f.access.ecotel.net)
[19:35:30] <pyzozord> I think that's a bit different
[19:35:36] <pyzozord> but I like both
[19:35:52] <[itchyjunk]> what about fan fiction?
[19:35:55] *** Quits: snake (~snake@user/snake) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[19:35:58] <pyzozord> although maybe interactive fiction is just a broader term
[19:36:19] <[itchyjunk]> visual novels are interactive fiction?
[19:36:26] <[itchyjunk]> some visual novels let you choose options
[19:36:30] <Akronymus> What about fimfiction? :p
[19:37:20] *** Quits: gggp (~textual@60.10.194.45) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:44:17] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[19:44:17] *** Quits: hexingb (~hexingb@103.37.140.36) (Read error: Connection reset by peer)
[19:44:24] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.2)
[19:44:44] *** Joins: jamea77 (~jamea@187.185.190.209)
[19:46:22] *** Quits: jamea (~jamea@187.185.190.209) (Ping timeout: 252 seconds)
[19:46:35] *** Quits: numsima (~numsima@101.175.64.73) (Quit: Client closed)
[19:47:14] *** Quits: Akronymus (~Akronymus@85.31.8.180) (Quit: Client closed)
[19:47:23] <orondo> That was some shit.
[19:47:28] *** Joins: Akronymus (~Akronymus@85.31.8.180)
[19:47:34] <Akronymus> pikapika there is also https://htdp.org/2021-5-4/Book/index.html and if you wanna go REALLY hardcore, the wizard book: https://mitpress.mit.edu/sites/default/files/sicp/full-text/book/book.html
[19:47:34] <bayaz> Title: How to Design Programs, Second Edition 
[19:47:35] *** Joins: hexingb (~hexingb@2409:8900:284e:ac70:b1d3:8016:a32a:19ec)
[19:47:35] <bayaz> Title: Structure and Interpretation of Computer Programs 
[19:47:49] <pikapika> Thanks
[19:51:37] *** Quits: Akronymus (~Akronymus@85.31.8.180) (Client Quit)
[19:54:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[19:57:23] <orondo> Seriously, the fimfiction doesn't even have a wikipedia page for it.
[19:57:34] <orondo> That was way too specific.
[20:00:40] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 252 seconds)
[20:02:19] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 252 seconds)
[20:02:23] *** Joins: Andalu30 (~andalu30@85.137.21.37.dyn.user.ono.com)
[20:02:57] *** Joins: jinsun (~quassel@user/jinsun)
[20:04:24] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Ping timeout: 276 seconds)
[20:04:25] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[20:04:54] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[20:04:58] <pyzozord> is SICP really hardcore? I've heard two very different opinions, one that this book "teaches programming" and other that "it's really hardcore"
[20:05:12] <orondo> It can be a bit hardcore.
[20:05:33] <orondo> It's like learning again coding.
[20:05:54] <orondo> If it is your first rodeo with functional programming, it's not going to be easy.
[20:05:58] <orondo> Try it.
[20:09:02] <PlanckWalk> Secure. Investigate. Contain. Protect.
[20:09:24] *** Quits: juliaEnv (~juliaEnv@ip-86-49-255-181.net.upcbroadband.cz) (Quit: Going offline, see ya! (www.adiirc.com))
[20:11:08] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[20:11:43] <pulse> my include guards have spears for extra protection
[20:12:34] <Quietwalker> Another meeting coming up, which needs to be retitled, "For the millionth time, here's why we don't want to run hardware with millisecond response timing from cloud-based services."
[20:13:18] <Quietwalker> + "... and when you guys tried it anyway with a dependent service, here's why we don't use that service anymore."
[20:15:09] *** Quits: humanface (~humanface@20014C4E1C473D00A4E67DD8C63A3FAF.dsl.pool.telekom.hu) (Quit: Client closed)
[20:15:32] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[20:17:43] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Ping timeout: 252 seconds)
[20:17:45] *** Quits: Noventicx (~Noventicx@crux.uberspace.de) (Quit: The Lounge - https://thelounge.chat)
[20:18:00] *** Joins: Noventicx (~Noventicx@crux.uberspace.de)
[20:18:35] *** Quits: diamondbond (~diamondbo@175.157.75.35) (Ping timeout: 244 seconds)
[20:18:46] <oldlaptop> Quietwalker: Bullet point one: No, we canna change the laws o' physics.
[20:19:07] *** Joins: gitgood (~gitgood@host-78-145-140-210.as13285.net)
[20:19:10] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[20:20:03] *** Joins: diamondbond (~diamondbo@175.157.75.35)
[20:22:45] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:23:29] *** Joins: Enitin (~Enitin@82.102.22.84)
[20:26:20] *** Joins: eson123 (~eson123@118.69.128.37)
[20:27:17] <eson123> sa i recall from yesterday i am pretty sure array and stack are two ADTs, but i did hear that sometime stack are implemented using array, like is it a normal thing for one ADT to implement another ? or this is a special case
[20:27:37] *** Joins: Thedarkb (~Thedarkb@85.255.234.252)
[20:27:51] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:27:53] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[20:27:54] <eson123> i'm pretty new to data structure tho so sorry if my question are too simple that it becomes obnoxious :P
[20:29:33] *** Quits: DevAntoine (~DevAntoin@195.101.183.21) (Remote host closed the connection)
[20:30:03] *** Joins: DevAntoine (~DevAntoin@195.101.183.21)
[20:30:03] <Juliu> eson123, in practice the boundaries are not that strict, and some ADTs might have more methods than what the theory says
[20:30:26] *** Quits: DevAntoine (~DevAntoin@195.101.183.21) (Remote host closed the connection)
[20:30:40] *** Joins: DevAntoine (~DevAntoin@195.101.183.21)
[20:30:40] *** Joins: independent__ (~independe@95.144.68.39)
[20:30:45] *** Quits: DevAntoine (~DevAntoin@195.101.183.21) (Remote host closed the connection)
[20:30:52] *** Quits: moha (uid506645@id-506645.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[20:30:53] <Juliu> For example a list might have a size() method that give you the length of the list in O(1)
[20:31:01] <Juliu> *gives
[20:32:00] *** Joins: Macuser (~Macuser@216.30.159.201)
[20:32:24] <eson123> Juliu: woah, how is it O(1), i expected it to loop through each other to count the total amount of it
[20:33:01] <oldlaptop> eson123: It would keep track of the size separately.
[20:33:20] <Juliu> eson123, it just stores the length of the list in a variable and updates it each time you change the length
[20:33:41] <Juliu> like oldlaptop said
[20:33:42] <oldlaptop> (so at the cost of taking up extra space, and making insertions and deletions slightly more expensive, getting the length is much cheaper)
[20:33:50] <eson123> is that how .count() method of lists inside python does it ?
[20:33:53] <eson123> or any other language
[20:34:06] <eson123> or it is specific to some only
[20:34:07] <GeDaMo> I believe Python lists are built on arrays
[20:34:18] <oldlaptop> I'd be mildly surprised if such a thing didn't do that, but there's no reason it would have to
[20:34:36] <oldlaptop> you could always read CPython source and see
[20:34:40] <Juliu> eson123, in C++ prior to C++11 it might be O(1) or O(n), depending on the implementation. And since C++11 it is guaranteed to run in O(1)
[20:36:43] <eson123> ok that's good to know
[20:37:34] <Juliu> eson123, in practice you also often use some data structure and use it for something else. For example it is quite common to use a std:deque in C++ for a queue or a stack, since those are based on a deque anyway, and by doing that you get the ability to iterate over all the elements
[20:38:30] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[20:38:41] *** Joins: flynn (~mcbloch@user/flynn)
[20:38:50] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 245 seconds)
[20:39:16] <eson123> Juliu, woah the boundary is so blur, that sounds like traversing and arrays also do that 
[20:39:48] <oldlaptop> For example: https://core.tcl-lang.org/tcl/file?name=generic/tclInt.h&ci=tip&ln=2437-2454
[20:39:49] <bayaz> Title: Tcl Source Code: tclInt.h at tip 
[20:39:49] <Juliu> I dont know what you mean
[20:39:50] *** Joins: Samian (~Sami@163.114.130.5)
[20:40:23] *** Quits: absc (~absc@dynamic-adsl-94-34-168-146.clienti.tiscali.it) (Quit: Leaving.)
[20:41:01] *** Quits: diamondbond (~diamondbo@175.157.75.35) (Quit: Leaving)
[20:41:07] <Juliu> That sounds like a std::vector in C++, which is automatically growing once you add an element outside of the allocated memory
[20:41:19] <bjs> eson123: the ADT is the generic term,  like "chair" is an ADT.  "chair" describes exactly what the thing *Does* but you know intuitively there are many ways to make different kinds of chairs using different materials
[20:41:35] <eson123> Juliu: i mean iterating through all elements can be done by increasing index one by one which is soemthing common to array which is why i said the boundary between some ADT are so blur
[20:41:47] <bjs> eson123: you might build a bigger thing using "chairs"  (generically) but you'd have to implement it (build the office or whatever) with a real thing.
[20:41:51] <Juliu> And ADT is discribed by discribing its methods, yes
[20:41:55] <Juliu> *An
[20:42:05] <oldlaptop> (functions that operate on those are in https://core.tcl-lang.org/tcl/file?name=generic/tclListObj.c&ci=tip )
[20:42:06] <bayaz> Title: Tcl Source Code: tclListObj.c at tip 
[20:43:30] <eson123> bjs: awh right thank for that explanation
[20:43:33] <Juliu> eson123, yes, sure. But when someone says "list", everyone basically knows what is meant. Sure, it could be a double-linked list or a single-linked list, but in general everyone knows we're talking about a list, not an array
[20:44:00] <oldlaptop> Unless we're speaking Pythese, in which case everyone knows we're talking about an array, not some other kind of list
[20:44:11] <Juliu> Fuck Python
[20:44:30] <oldlaptop> rude
[20:44:40] *** Quits: Samian (~Sami@163.114.130.5) (Ping timeout: 240 seconds)
[20:44:41] <Juliu> Only an idiot would call an array "list"
[20:44:50] *** Joins: dont_thread_on_m (~dont_thre@23.94.134.204)
[20:44:59] <oldlaptop> arrays are lists (but lists are not necessarily arrays)
[20:45:52] *** Quits: magla (~gelignite@55d4a93f.access.ecotel.net) (Quit: Stay safe!)
[20:46:02] <Juliu> arrays are not lists. When someone says "list", he/she means data that is scattered over the memory and has some kind of reference or pointer to the next element. Unlike an array, where all elements are in one large block behind each other
[20:46:41] <oldlaptop> That's not a "list", that's a "linked list"; linked lists are to lists as arrays are to lists
[20:46:56] <Juliu> When people say list, they mean a linked list
[20:47:20] <oldlaptop> [citation needed]
[20:47:27] * Juliu rolls eyes
[20:47:43] <dont_thread_on_m> I concur with Juliu
[20:47:49] <Juliu> Ok ok, you are right. When I go grocery shopping I have a list as well, and it's not a linked list
[20:48:23] <Juliu> So when people say that they have a list of things, they normally are talking about that
[20:48:39] <Juliu> But when you say "list" in a programming content, a linked list is meant
[20:49:08] <Juliu> We are confusing poor eson123 more and more :/
[20:49:22] <eson123> oh, then i guess the way python organize their "list" is by using linked-list ?
[20:49:28] <oldlaptop> Nope.
[20:49:34] <eson123> array still ?
[20:49:44] <Juliu> eson123, as someone said earlier, no. Python uses arrays
[20:49:55] <eson123> welp, i have no idea why they use the term "list" then
[20:50:03] <Juliu> Because idiots
[20:50:23] <eson123> because as you said earlier also, grocery shopping list is elements being next to each other
[20:50:27] <eson123> probably the developers throught so
[20:50:28] <Juliu> Or because Python is for morons that think of a shopping list when they say list, and so they just want an array to store stuff into
[20:50:47] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:64af:bfcd:937a:b017)
[20:50:56] <oldlaptop> eson123: "List" is a general term for an ordered sequence of elements.
[20:50:59] <Juliu> Yes, they probably tried to keep it as dumb as possible
[20:51:06] <eson123> ok then, i am not confused, i am actually more enlightened 
[20:51:19] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[20:51:22] <Juliu> Python probably has linked lists as well
[20:51:30] <eson123> python is well-known for its simplicity and abstraction level anyway :P
[20:51:40] <Juliu> "simplicity"
[20:51:50] <oldlaptop> Arrays are ordered sequences of elements that support random access; that is, you may directly access an element in the middle of the list, not just at one end. Python "lists" are also arrays.
[20:51:55] <eson123> so beginners starting out seeing the term "array" won't get as much as "list"
[20:52:03] <eson123> but i wouldn't say any beginner should learn python
[20:52:05] *** Joins: menace (~someone@ppp-93-104-165-2.dynamic.mnet-online.de)
[20:52:10] <oldlaptop> Not all lists support random access; linked lists obviously do not.
[20:52:34] *** Quits: menace (~someone@ppp-93-104-165-2.dynamic.mnet-online.de) (Changing host)
[20:52:34] *** Joins: menace (~someone@user/menace)
[20:52:43] <Juliu> oldlaptop, you are right. And yet most programmers think linked list when you say list
[20:52:58] <oldlaptop> [citation needed]
[20:52:59] <eson123> guess i'm the only one who doesn't :(
[20:53:01] <bjs> Juliu: depends which programmers
[20:53:03] <Juliu> But sure, what you said is actually more correct
[20:53:20] <Juliu> eson123, that happens when you start with a language like Python
[20:53:28] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 252 seconds)
[20:53:29] <bjs> clearly since some of the big languages (Python's list, Java's ArrayList etc) all use the word List in conjunction with an array-backed type
[20:53:31] <eson123> i actually started with both C and Python tho
[20:53:32] <bjs> it's not that uncommon of an idea
[20:53:36] <Juliu> bjs, real programmers vs. script kiddies, indeed
[20:54:04] <Juliu> Anyway, let's not argue about names, since names are unimportant
[20:54:07] *** Quits: fweht (uid404746@id-404746.tooting.irccloud.com) ()
[20:54:12] <eson123> fair enough
[20:54:22] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[20:54:30] *** Joins: swagneko (~bit@user/nekobit)
[20:54:47] <oldlaptop> Tcl lists (the struct I linked to earlier) are semantically a lot like a shopping list because of how Tcl's semantics work: all values in Tcl are strings, and a list is simply a string that's a whitespace-separated sequence of other strings. It stores them as arrays for better performance, though, and provides commands to perform random access into them.
[20:55:03] <bjs> Juliu: ah I see, the argument why you may have been wrong about the over-generalisation of the word "list" you'll just throw an insult then try change the topic saying it doesn't matter.
[20:55:06] <bjs> fair enough
[20:55:34] <Juliu> bjs, indeed
[20:55:39] <Juliu> Did it work?
[20:55:41] *** launchd is now known as l
[20:55:57] <oldlaptop> Of course you could also provide those commands if it wasn't stored as an array, they'd just be slower. Speaking object-ese, there's no reason an object couldn't behave as an "array" while actually storing everything in a linked list, it would just be slow.
[20:56:05] <bjs> Depends who eson123 listened to :)
[20:56:19] <eson123> nya it's fine, i am opening to all opinions :P keep going guys
[20:56:28] <eson123> this is getting interesting
[20:56:46] *** Quits: mnd999_ (~mark@2001:8b0:da3:76a2:863a:4bff:fe0e:a4e4) (Ping timeout: 252 seconds)
[20:56:47] <Juliu> oldlaptop, you can also have a linked list inside of an array. Just to make the confusion perfect
[20:57:24] <domhnall> Juliu: that sounds like a hash table
[20:57:29] <Valware> I just made my first ever money from coding Q_Q
[20:57:34] <Valware> feels good mayn Q_Q
[20:57:40] <Juliu> eson123, you probably know already what an array, a linked list, a queue or a stack is
[20:57:40] <orondo> Congratulations.
[20:57:45] <orondo> Have you heard about taxes?
[20:57:49] <Valware> thanks
[20:57:53] <eson123> Juliu: in their basic terms then yea
[20:57:56] <Valware> yeah lol
[20:58:01] <Valware> taxed automatically
[20:58:01] <Juliu> domhnall, just an array where each element contains data and the index of the next element
[20:58:02] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 245 seconds)
[20:58:02] <eson123> and concepts too
[20:58:03] <orondo> Good, good.
[20:58:32] <Valware> ಠ_๏
[20:58:33] <Valware> ;p
[20:58:36] <orondo> It's feels nice to be able to sustain yourself in this society.
[20:58:43] <orondo> Keep going, Valware, best of luck.
[20:58:45] *** Quits: orondo (~orondo@user/orondo) (Quit: leaving)
[20:59:02] <Juliu> eson123, there isnt that much to know about such basic data structures. Go on, learn how to use them, and learn some more interesting stuff
[20:59:03] <Valware> o.o
[20:59:08] *** l is now known as launchd
[20:59:31] *** Joins: Enitin (~Enitin@82.102.22.85)
[20:59:40] *** Quits: gitgood (~gitgood@host-78-145-140-210.as13285.net) (Ping timeout: 240 seconds)
[20:59:45] <eson123> Juliu: i have been using them indeed tho, i am just exploring more ADT
[20:59:50] <eson123> this convo is intersting tho :P
[21:00:02] <Juliu> eson123, try heap
[21:00:20] <eson123> i tried it also, i learnt it while going with some memory layout when i was learning C
[21:00:31] <eson123> the thing i am still hard to get at rn is something called Graph
[21:00:34] <Juliu> Then try Tri
[21:01:00] <domhnall> eson123: BFT or DFT
[21:01:12] <Juliu> A graph consists of nodes and edges, and an edge simply connects 2 nodes
[21:01:37] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[21:01:39] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[21:01:51] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[21:02:26] *** Joins: gitgood (~gitgood@host-78-145-140-210.as13285.net)
[21:02:44] <eson123> domhnall: not sure what you mean tho, google didn't give much result
[21:03:04] <GeDaMo> eson123: https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm
[21:03:05] *** Quits: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC) (Ping timeout: 248 seconds)
[21:03:05] <bayaz> Title: Dijkstra's algorithm - Wikipedia 
[21:03:21] <domhnall> eson123: just mean that you're either gonna do a Breadth first traveral or a Depth first traversal on a graph DS
[21:03:31] <domhnall> sorry, didn't mean to be tarse
[21:03:47] <eson123> oh yea i am not that far yet, but i am starting to get it 
[21:03:48] <eson123> thank btw
[21:03:50] <domhnall> I enjoyed graphs,, and hated linked list
[21:04:03] <eson123> i mean graphs seem cool tho, i heard big platforms use it as well like social media
[21:04:26] <GeDaMo> https://ogp.me/
[21:04:27] <eson123> i haven't implemented it in any real life situtation so it might take more time to be professional at handling it
[21:04:28] <bayaz> Title: Open Graph protocol 
[21:04:43] <domhnall> best advice I'd give is, know what algorithm to use when faced with a data structure
[21:04:56] <Juliu> domhnall, a linked list is a special form of a graph, or at least it can be interpreted as one
[21:05:46] <domhnall> Juliu: I never heard that... and it still doesn't make me feel any better about them. And they're a common data structure people learn
[21:05:49] <eson123> GeDaMo: awh thk for that i guess that is hwo social media do it
[21:05:56] *** Joins: rtypo (~alex@user/rtypo)
[21:06:07] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 252 seconds)
[21:06:13] <Juliu> domhnall, what is there not to like about linked lists? They are not that complex
[21:06:34] <bjs> usually, performance.
[21:06:35] *** Quits: computerquip (sid423484@user/computerquip) ()
[21:06:48] <Juliu> I almost never use a linked list
[21:06:53] *** Joins: computerquip (sid423484@user/computerquip)
[21:07:42] <Juliu> A tree is a different example of a special form of graphs
[21:07:48] <GeDaMo> Implementing a linked list in C is difficult to get right
[21:07:58] <Juliu> A tree is a connected graph with no loops
[21:08:17] <GeDaMo> Linked lists are bad for cache efficiency
[21:08:31] <Juliu> eson123, in case you do not know about trees yet, trees are VERY important. Learn about them!
[21:08:51] <Juliu> GeDaMo, you can implement a linked list in an array
[21:09:00] <pyzozord> I never tried them but in theory I think the unrolled linked lists are pretty amazing
[21:09:09] <eson123> Juliu: oh no, i learnt it first and i love it really
[21:09:25] <eson123> Juliu: so efficient at storing stuffs and how to retrieve them with an effective time
[21:09:35] <pyzozord> I guess I kind of did try them when implementing pool allocator
[21:09:45] <Juliu> eson123, trees are a special form of graphs, and they appear everywhere and are very important. So you might want to learn about them before learning about more general graphs
[21:10:24] <Juliu> pyzozord, what do you mean by unrolled linked lists?
[21:10:33] <domhnall> Juliu: how does it go? all Trees are graphs, but not all graphs are Trees....is that right? it's been a while.
[21:10:43] <pyzozord> Juliu: chunked up into linked lists of arrays
[21:10:56] <pyzozord> s/lists/list
[21:10:59] <Juliu> domhnall, yes, that is correct. A tree is a connected graph with no loops
[21:11:17] *** Joins: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC)
[21:11:22] <domhnall> acyclic or something...
[21:11:34] <Juliu> pyzozord, that is what C++ calls a deque. Not what I meant
[21:11:42] <domhnall> yep, time to revisit some of the DS stuff. 
[21:11:50] <Juliu> domhnall, acyclic means no loops, yes
[21:13:06] *** Joins: dev4449 (~dev4449@185.253.163.13)
[21:13:12] *** Quits: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC) (Client Quit)
[21:13:28] *** Joins: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC)
[21:13:54] <Juliu> domhnall, when you have a graph that is just acyclic (= no loops) but is not necessarily connected, that is called a forest. A forest consists of trees. Not joking
[21:14:21] *** Quits: ixil (~ixil@mpp-cp1-natpool-2-434.ethz.ch) (Remote host closed the connection)
[21:15:08] <Juliu> eson123, have you heard about trees before?
[21:15:40] *** Joins: compscipunk (~compscipu@107-214-234-232.lightspeed.sndgca.sbcglobal.net)
[21:15:41] <eson123> Juliu: i mean i already told you, i really like tree and i learnt it quite for sometime
[21:15:49] <eson123> Juliu: indeed it appear everywhere tho
[21:15:58] <Juliu> eson123, I thought you meant that you like linked lists
[21:16:12] <Juliu> Ok
[21:16:16] <eson123> Juliu: nya i meant tree
[21:16:20] <Juliu> ok
[21:16:23] <domhnall> eson123: Facebook loves asking Graph/Tree related questions... you're off you a great start.
[21:16:25] <eson123> when i said it is efficient for storing stuffs tho
[21:16:53] <eson123> yea i don't even care about interview questions, i am just fascinated about how diverse data can be store and processed
[21:18:20] <Juliu> It is basically unknown how data can be processed and what computers are actually capable of
[21:19:25] *** Quits: dev4449 (~dev4449@185.253.163.13) (Quit: Quit)
[21:19:37] *** Joins: dev4449 (~dev4449@185.253.163.13)
[21:20:21] <InPhase> Juliu: That is an unusual assertion considering you just declared that it's unknown how we can do what many of us do for a living.
[21:20:53] <Juliu> InPhase, we know some things, sure. But most things are still unknown
[21:21:11] <Juliu> We dont even know what computers can and can not do
[21:21:51] <domhnall> Juliu: having a moment?
[21:21:57] <Juliu> ?
[21:22:08] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 244 seconds)
[21:22:24] <domhnall> I'm asking....are you okay?
[21:22:32] <Juliu> Sure, why wouldnt I ?
[21:22:38] <bjs> Perhaps a better question would be to ask Juliu to clarify
[21:22:44] <bjs> rather than assume something is wrong with them :)
[21:22:57] <Juliu> Who is them?
[21:23:07] <bjs> you
[21:23:11] <InPhase> Juliu: I think I have a pretty good understanding of what the computers I deal with can and can't do.  I can usually also put a budget on what it would take to accomplish some desired thing that is doable.
[21:23:13] <Juliu> I am just 1 person
[21:23:15] <domhnall> bjs: I like that approach better. Juliu care to clarify what you're saying?
[21:23:23] <bjs> Juliu: yes, I didn't say otherwise?
[21:23:25] <Juliu> InPhase, no you dont
[21:23:52] <InPhase> Juliu: Like I said, it is an unusual assertion to claim we can't do what we do for a living.
[21:23:57] <Juliu> domhnall, like I said, it is generally unknown what computers are capable of
[21:24:19] <Juliu> InPhase, I never said you cant do that. But can a computer do more? Or cant it? No one knows
[21:24:47] <bjs> Juliu: perhaps you should clarify what you mean when you say computer here,  I think I know what you're getting at but you're not being very clear about it
[21:24:49] <InPhase> Juliu: You are again confusing formal proofs with general understanding.
[21:25:16] <bjs> I think you're trying to appeal to the lack of conclusion to Church-Turing but that's not quite the same thing
[21:25:29] <Juliu> bjs, I mean a deterministic turing machine, if you want to be theoretical. But since the people in here do probably not know what that is, saying "computer" comes pretty close
[21:25:41] <bjs> Juliu: I mean Turing machines we understand pretty well.
[21:25:45] <domhnall> Juliu: I mean, I can agree that one can make a computer do something it wasn't inteded to do. And the manufacturer did not consider such. IF that's what you mean, okay.
[21:26:08] *** Joins: conquistador (~conquista@cpc161059-seve28-2-0-cust130.13-3.cable.virginm.net)
[21:26:20] <Juliu> InPhase, you have a general understand about if your computer is able to solve something like the boolean satisfiability problem efficiently or not? Liar
[21:26:33] *** Joins: humanface (~humanface@20014C4E1C473D00A4E67DD8C63A3FAF.dsl.pool.telekom.hu)
[21:26:33] <bjs> Oh i see, you're trying to get at P vs NP
[21:26:45] <Juliu> bjs, that is just one out of many examples
[21:26:53] <bjs> that's not really about what computers can and can't do,  we can certainly solve SAT problems it's just unknown how quickly it takes in the worst case
[21:27:05] <Juliu> bjs, no, we do not understand turing machines pretty well. Not at all
[21:27:54] <bjs> Juliu: your assertion is that because there are some unsolved problems in computer science we must not understand turing machines well?
[21:27:58] <InPhase> Juliu: I do.  My computer can efficiently solve some cases of satisfiability efficiently, and some will take a long time to get the optimal solution, therefore I avoid problems that will require the most optimal solution to general SAT problems.  Easy peasy.
[21:27:59] <Juliu> bjs, it is unknown if you can solve some problems in a quadrillion years or a few seconds, indeed. I would say that is pretty much as close as it gets to saying that we have no fucking clue what a computer is capable of
[21:28:17] <bjs> Juliu: that's not quite what P vs NP says
[21:28:33] <bjs> We solve SAT problems all the time, of all sizes
[21:28:38] <InPhase> ^
[21:28:45] <bjs> we just don't have a proof that you cannot do it faster than current methods
[21:28:56] <Juliu> InPhase, maybe you computer can solve all cases, who knows. You centainly dont know, and nor does anyone else
[21:29:09] <Juliu> bjs, maybe you can do it faster. No one knows
[21:29:25] <bjs> Juliu: that's what i just said, there is no proof that you cannot.  
[21:29:30] <InPhase> Juliu: It's sufficiently unlikely that P==NP that it's very safe to proceed with your day with the understanding that these are separate computational classes.
[21:29:46] <InPhase> s/computational/complexity/
[21:29:49] <Juliu> bjs, there is no proof that you can or can not. No one has a fucking clue
[21:29:55] <bjs> We can definitely solve all the SAT problems,  and we are pretty confident about which problems we can solve with Turing machines, which we cannot, and which might loop forever.
[21:30:11] <bjs> Juliu: i mean you're just repeating what I said now
[21:30:19] <Juliu> InPhase, there is no reason to assume it is likely or unlikely
[21:30:50] <Juliu> bjs, saying something like "I know what my computer is (or isnt) capable of" is just a lie. No one has a clue
[21:30:51] <bjs> Juliu: but this is kind of silly because you're making it sound like NP problems are like "unsolvable" and we'll never be able to have computers that can solve NP like problems until we have a proof
[21:30:56] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[21:31:14] <bjs> NP\P problems I should say
[21:31:20] <bjs> since obviously all P problems are in NP :P
[21:31:22] <Juliu> bjs, all NP problems are solvable
[21:31:37] <Juliu> I meant NP-hard problems
[21:31:44] <bjs> Juliu: NP-hard problems are still NP
[21:31:51] <bjs> and computers can still solve them, and we do, all the time.
[21:31:55] <Juliu> bjs, and still solvable
[21:32:06] <bjs> well no I'm wrong sorry,  NP-hard problems aren't *all* NP
[21:32:14] <Juliu> bjs, and you are incorrect, NP-hard does not mean NP, and NP does not mean NP-hard
[21:32:15] <bjs> but they are all solvable
[21:32:22] <InPhase> Juliu: There is in fact good reason to think P!=NP, by examining what sorts of comparisons and considerations are intrinsic to the problem and applying some simple reasoning.  This is why nearly everyone who is an expert in this area thinks that P != NP.  What is very challenging is the formal proof, as apparently some axiomatic weaknesses make it challenging to prove.
[21:32:43] <Juliu> bjs, saying that they are not all NP is probably a lie, since no one knows that
[21:32:51] <bjs> Juliu: no we do know that
[21:33:06] <Juliu> bjs, oh wait, you are right. I confused something
[21:33:23] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[21:33:29] *** Quits: eson123 (~eson123@118.69.128.37) (Quit: Leaving)
[21:33:45] <Juliu> InPhase, there is also good reason to believe P=NP. And this is just an example. There are thousand other examples where we dont know if it can be done or not
[21:34:01] <bjs> Juliu: but your premise is still silly, because we write programs that solve NP type problems all the time for all shapes and sizes.  We can write programs that can solve *any* NP type problem. We can even bound how long it'll take.  We just don't know if our *current method* is the fasest
[21:34:03] <bjs> fastest*
[21:34:07] <InPhase> Juliu: There is not good reason to believe they are equal.  This is why most experts think they are not equal.
[21:34:14] <bjs> which is a much weaker (but more accurate) statement than you originally made.
[21:35:01] <Juliu> bjs, if you can write a program that solves all NP-hard problems efficiently, then congratulations to your nobel prize
[21:35:17] *** Joins: Samian (~Sami@163.114.130.5)
[21:35:21] <Juliu> InPhase, experts are mostly idiots, like everyone else
[21:35:27] <bjs> Juliu: I didn't say efficiently, you're trying to make a specific point but generalise it wildly
[21:35:50] <Juliu> bjs, I can write a program that solves all cases. That is easy. Just brute-force
[21:35:54] <bjs> there is an interesting and true specific point that you're trying to make here, but the generalization you try to make from it is kind of extreme.
[21:36:32] <Juliu> bjs, it is not extreme at all. Most people just never think about the fact that we have no fucking clue what our computers can do
[21:36:36] <bjs> Juliu: yes,  and we can always find a finite upper bound for how long that solution will take.  It's just that we cannot say what the lowest upper bound is
[21:36:55] *** Quits: jamea77 (~jamea@187.185.190.209) (Ping timeout: 252 seconds)
[21:38:08] <bjs> We do have a very good clue how computers work and what you can do with them, infact *what* you can do with them here isn't a question. Only how long it'll take for them to do it.
[21:38:26] <bjs> But not even that, since we can bound it fine.  It's "what is the lowest upper bound possible?" 
[21:38:37] <bjs> and that doesn't sound as grandiose as your original statement
[21:39:19] <bjs> I honestly am disappointed by this conversation because the whole "we don't really know what computers can do" can be made by a much stronger argument via Church-Turing
[21:39:23] <Juliu> A different example would be if your computer can solve 3SUM (where you have to pick 3 numbers from a list that have to sum up to zero) in less than O(n^2). No one has a clue
[21:39:40] *** Quits: tcsilver (~tcsilver@pool-96-255-128-204.washdc.fios.verizon.net) (Ping timeout: 252 seconds)
[21:39:49] <bjs> Juliu: well yes, but also "Can you computer solve Collatz for arbitrary N in finite time?" is also a question nobody has a clue to
[21:39:54] <bjs> but it's not really the Turing machines fault...
[21:40:46] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Ping timeout: 252 seconds)
[21:40:54] <Juliu> bjs, yes, true. That is a different example. But those examples are quite specific. Unlike P vs NP, which would fundamentally change what we thought our computers were capable of
[21:40:54] <piou> What do you call "solve" here?
[21:41:22] <InPhase> Juliu: Here's a hint for you:  It would be easy to prove P == NP.  Write a P solution to a classic NP problem, in any language, with any method you like, and you've done it.  Proving P != NP, the answer which is most certainly correct, requires formalism elements which have not been worked out yet, and thus remains challenging to formally prove.  In the other reality where it's all P, this would not 
[21:41:28] <InPhase> be a formally unsolved problem.
[21:41:39] <Juliu> But P vs NP is just a famous example. Take N vs NL for example. A different example for where we dont know what our computers are capable of
[21:42:06] <bjs> Juliu: they don't really,  they question exactly what the most efficient way to perform particular classes of problems is.  This is hard to do, and we know it's hard and isn't really because of the turing machines
[21:42:18] <Juliu> InPhase, yes, maybe no one has found that program yet
[21:42:45] <InPhase> Juliu: A lot of very smart people have spent a very long time on it because it is a very tempting and compelling problem.  So, no, I really don't think that's the answer.
[21:42:53] <Juliu> bjs, those questions fundamentally change what computers are capable of, or at least our knowledge about that
[21:43:20] <Juliu> We dont know how fast computers are. We dont know how much memory computers need. We basically know nothing
[21:43:47] <InPhase> Juliu: Most of that information I can find in /proc
[21:43:56] <Juliu> InPhase, and yet I found and proved something via a program that no other person on this planet was able to
[21:43:56] <bjs> Juliu: it makes *no difference*, our computers can solve all of these problems today. We can put a fixed finite bound on how long they will take.  The only question is *how long* it takes.  Yes there's lots of interesting fundamental questions here about our fundamental understanding of these things but you're doing the entire field a disservice by taking these and making such grandiose claims 
[21:44:30] <InPhase> Juliu: Excellent for you.  I don't know what thing it was, but go ahead and publish it.  I've also proven some unknown things, and then I published them.
[21:44:35] *** Quits: conquistador (~conquista@cpc161059-seve28-2-0-cust130.13-3.cable.virginm.net) (Quit: Client closed)
[21:44:37] <bjs> and as I say I'm disappointed in the incredibly weak argument you've picked for this claim,  both because it trivialises PvsNP rather than having a serious interesting computational complexity discussion and totally evades the *real* reason we don't know what "computers" can do (namely Church-Turing)
[21:44:43] <Juliu> bjs, if you limit the memory, can they still solve it? If you limit the time, can they still solve it? No one knows
[21:44:50] <bjs> Juliu: yes, we can put limits on memory too
[21:44:59] <bjs> Yes we can put limits on both
[21:45:03] <Juliu> InPhase, I dont see a reason to publish it yet
[21:45:09] <bjs> we just don't know how low those limits can go
[21:45:34] <piou> Juliu: do you have any reason not to publish it?
[21:45:38] <Juliu> bjs, we dont know if it can or can not be done with respect to certain limits, indeed
[21:46:02] <bjs> Juliu: I'm not sure what you mean by "certain limits". We know all NP problems take a fixed finite amount of space which grows polynomially with input size
[21:46:05] <Juliu> piou, why would I do the work of publishing?
[21:46:47] <piou> Juliu: To be sure you didn't make any mistake? If I were doing something as improbable as proving something that many people tried to but didn't succeed in proving then surely I would consider the possibility that I made a mistake
[21:46:56] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 244 seconds)
[21:47:04] <piou> Peer review isn't perfect, but it's effective
[21:47:09] <Juliu> bjs, for example, if you limit the working memory to O( poly(log(n)) ), can it still be done in polynomial time for problems that are NL-complete?
[21:47:13] <Juliu> No one knows
[21:47:31] <bjs> Juliu: sure you can always find some more specific example that nobody knows yet
[21:47:43] <bjs> that will always be true
[21:47:53] <Juliu> piou, you would, indee
[21:47:54] <Juliu> d
[21:48:22] <Juliu> bjs, those are not specific examples. Those are the most fundamental things that no one has an answer to
[21:48:26] *** Quits: digilink (~digilink@user/digilink) (Quit: WeeChat 3.2)
[21:48:36] <bjs> Juliu: i didn't say concrete, I said more specific
[21:48:50] *** Joins: digilink (~digilink@user/digilink)
[21:48:58] <bjs> even if we had answers to those, you can simply narrow the set and ask again,  we know for sure that you can narrow the set as much as you like
[21:49:00] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 244 seconds)
[21:49:07] *** Joins: Ox151 (~user@user/ox151)
[21:49:08] <piou> Juliu: I mean, if you prefer patting yourself in the back while being wrong I get that too, it's comforting not to confront our mistakes
[21:49:10] <bjs> and always get a question we don't have an answer to because we know no such algorithm to give you the answer for all inputs exist
[21:49:14] <Juliu> I mean, imagine this conversation: "Boss, I finished writing the program." -- "Well done, how long does it run and how much memory does it need?" -- "Don't know". That is basically our current state
[21:49:42] <InPhase> Juliu: That's why I usually measure these things, so I can give the correct answers.
[21:49:45] <bjs> Juliu: again this is an incredibly weak argument you put forward that does not support your very large claim.  Which is extra dissapointing when there *is* an argument that *does* support your actual claim
[21:49:47] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:49:57] <bjs> and you're choosing not to appeal to it.
[21:50:04] <Juliu> InPhase, it strongly depends on the problem case in some examples
[21:50:25] <InPhase> Juliu: Which I then understand as needed, so I can give the correct answers.
[21:50:36] <Juliu> InPhase, the difference can be like 1000 trillion years to 1 second, simply by applying the same program to a different example of similar size
[21:51:05] <InPhase> Juliu: Which I explore, examine, and understand, so that I can give the correct answers.  See a pattern?
[21:51:18] <bjs> Juliu: that is always going to be the state though, we know that you cannot take an arbitrary program and output how long it takes or how much space it takes.  What we can do is talk about classes of programs and give upper bounds
[21:51:20] <bjs> and we can do that 
[21:51:21] <Juliu> bjs, my claim is just the fact that we have no fucking clue what computers are capable of
[21:51:38] <bjs> Juliu: yes and there *is* a real argument for why that is true.  The argument you make here is pathetic and weak and is not it.
[21:51:46] <Juliu> InPhase, you cant give the correct answer since no one can, at least so far
[21:52:13] <Juliu> bjs, it's not even an argument. It's just a fact. Not my fault you dont like facts
[21:52:36] <InPhase> Juliu: You are...  Well, that's a lie.  I don't know if it's on purpose, but it's just flat out false.  When you write a program, you can assess the types of runtimes for various types of inputs.  We do this all the time.
[21:53:10] <InPhase> I took an entire course on this topic, and have done it in practice for decades.
[21:53:11] <bjs> Juliu: I think you're grossly misrepresenting P vs NP.  It does not mean we don't know how long things take.  We know for sure you cannot say that for individual programs *at all*.
[21:53:18] <Juliu> InPhase, depends on the program. Often you can, because we just write programs for problems that we know we can solve efficiently
[21:53:48] <bjs> PvsNP talks about the lowest upper bound for an entire class of problems,  we can already put upper bounds on both space and time.  We just don't know how much we can shrink those bounds
[21:53:50] *** Joins: Enitin (~Enitin@82.102.22.85)
[21:53:56] <Juliu> bjs, we dont know how long it takes to solve a problem in NP
[21:54:06] <Juliu> Saying otherwise is a lie
[21:54:11] <bjs> Juliu: just forget the "NP" part, we cannot do that for programs *at all*
[21:54:14] <InPhase> Juliu: I've written programs where I didn't bother to examine it, and got caught off guard.  I have never in 36 years of programming written a program where I found myself unable to assess the performance for a specified scope of inputs.
[21:54:32] <bjs> Juliu: we cannot take a program and even say whether or not it *halts*, let alone how long it takes.
[21:54:35] <Juliu> bjs, saying "we can not do that for programs" might be a lie as well. Maybe we can
[21:54:37] <bjs> This is not what PvsNP is asking or talking about
[21:54:45] <bjs> Juliu: no we cannot, this is pretty clear.
[21:54:55] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-d4cb-19ad-9d54-b5c3.res6.spectrum.com)
[21:55:15] <Juliu> InPhase, yes, because you only write programs that solve easy problems
[21:55:23] <bjs> Given a specific program, or specific class of programs you have to prove things manually about it.  
[21:55:31] <InPhase> Juliu: I disagree.  I write quite a variety of programs.
[21:55:48] <bjs> We have some broad classes we defined for convenience to humans but we haven't found all the lowest upper bounds for space and time for all of them (probably, just not yet).
[21:55:58] <Juliu> bjs, you are lying. Maybe we can simply write a program that solves all instances of a problem in NP efficiently. Who knows
[21:56:21] <Juliu> InPhase, yes, but all the problems you are able to solve are in P
[21:57:16] *** Quits: Samian (~Sami@163.114.130.5) (Ping timeout: 244 seconds)
[21:57:30] <Juliu> bjs, that is bullshit. We have basically found no lowest upper bounds for most problems, only for easy problems
[21:57:54] <bjs> Juliu: ... it's like you're not even reading my messages and are just replying to whatever you want. 
[21:57:55] <Juliu> All we do is solve easy problems. But maybe we can do much more. Who knows
[21:58:18] *** Quits: dev4449 (~dev4449@185.253.163.13) (Ping timeout: 244 seconds)
[21:58:30] <Juliu> bjs, your messages are mostly lies. A lot of claims that you can not prove. Always saying we can or we cant, which is almost always not known
[21:58:39] *** Joins: dev4449 (~dev4449@178-175-129-40.static.as43289.net)
[21:58:57] <bjs> Juliu: so, we can *solve* all problems in NP.  We have finite upper bounds in space and time for all of them.  We have bounds for all complexity classes like this. 
[21:59:22] <bjs> The thing we do not have is what the *lowest* upper bound theoretically possible is.
[21:59:31] <Juliu> bjs, can, yes. Efficiently? Who knows. In practice we cant unless we can do it efficiently
[22:00:00] <bjs> We also know that if you take specific instances (that is, specific *programs*) we cannot know in-general how long it will take or how much memory it will take (this is known to be impossible to do). Instead we have to reason about individual classes (this is why P and NP exist at all)
[22:00:13] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Quit: The Lounge - https://thelounge.chat)
[22:00:37] <bjs> Juliu: the use of the word "efficiently" here is misleading,  it can be a nice introduction to complexity for students and that but we would quickly want to dismiss that word from their vocabulary 
[22:00:48] <Juliu> if you mean specific instances of a problem in NP, then that is incorrect
[22:01:06] *** Joins: uzee001 (~uzee@86.36.37.198)
[22:01:58] <Juliu> You can NOT solve certain problems your lifetime with your knowledge. But maybe it can be done in a second. And you think this difference is not of any significance. Very very ignorant
[22:02:19] <bjs> Juliu: it's not guaranteed that a P-time problem's solution will finish in my lifetime either
[22:03:05] <bjs> and we solve NP-hard problems all the time 
[22:03:16] <Juliu> bjs, that depends on the algorithm and it's runtime and the problem size and complexity
[22:03:22] <bjs> The difficulty is providing exact bounds
[22:03:36] <Juliu> We almost never solve NP-hard problems
[22:03:38] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-7-12.prtc.net)
[22:04:03] <Juliu> We solve certain cases of those problems that are way easier than the hardest possible cases
[22:04:11] *** Joins: rtypo (~alex@user/rtypo)
[22:04:25] *** Quits: uzee (~uzee@86.36.37.198) (Ping timeout: 248 seconds)
[22:04:44] <bjs> That's a bizarre statement because even SAT (or i guess the more common variety of SMT) is NP-complete and we solve those kinds of problems all the time
[22:05:05] <bjs> infact it's not uncommon to solve SMT formulae as part of the operation of a bigger program.  We just can't bound how long it'll take as the inputs get really big.
[22:05:27] <Juliu> Not all SAT cases are equally hard. And we are unable to solve hard ones in your lifetime yet
[22:05:44] <bjs> Juliu: again you keep saying "in your lifetime" as if that's a thing P vs NP talks about.  It does not.
[22:05:59] <sauce> the two of you are not using the same definition of 'solve'
[22:06:20] <bjs> sauce: no here I really mean the same thing,  Juliu just keeps moving the goalposts everytime
[22:06:21] <Juliu> bjs, it is all that matters. If you can do it but it needs a million years, then who cares. It's not doable
[22:06:31] *** Quits: jacks2 (~bc8167eb@217.29.117.252) (Quit: http://www.okay.uz/ (Session timeout))
[22:06:42] <bjs> Juliu: maybe it's all that matters, but it's totally irrelevant to P vs NP because complexity theory doesn't tell you how long any particular input will take
[22:07:02] *** Quits: Cypris (uid511277@user/cypris) (Quit: Connection closed for inactivity)
[22:07:08] <bjs> a P type problem might never be solvable in your lifetime whereas NP-hard things for reasonable inputs in reasonable time are an everyday occurance
[22:07:09] <Juliu> I never limited myself to talking about P vs NP. You did
[22:07:15] <bjs> It's your example!?
[22:07:33] <Juliu> It is one of several examples I presented for my claim, yes
[22:07:59] <bjs> I mean you can pick any of the others from complexity theory too, the same applies. They don't actually say how long or how much space any particular input takes
[22:08:08] <bjs> I feel the goalposts just moved again though, so maybe I should stop
[22:08:48] <Juliu> Your goalpost moves all the time just because you dont want to accept the fact that no one knows what computers are fundamentally capable of
[22:09:11] <bjs> Juliu: for some reason you keep saying that but you like can't read or something because I've consistently said I agree with you
[22:09:35] <pyzozord> yeah I think you guys are accidentally fallen into argument spiral
[22:09:41] <bjs> infact my very first comment was that I thought I knew what your argument was going to be (and implicitly agreed with it)
[22:10:00] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[22:10:13] <Juliu> bjs, so now you agree with me? Fine
[22:10:25] <Juliu> Seems your goalpost moved again, but who cares
[22:10:49] <bjs> Juliu: "now"? i've agreed with the grandiose statement you made at the start from the beginning. and on multiple occasions expressed disappointment in the choice of argument you've tried to make and how it's weak and how appealing to Church-Turing is much stronger.
[22:11:05] *** Joins: anovick (~anovick@2a0d:6fc0:18cb:e900:98e9:2c6f:1a52:52c0)
[22:11:13] *** Quits: ghost64 (~ghost64@user/ghost64) (Read error: Connection reset by peer)
[22:11:17] <Juliu> You know what an even more interesting thought is? That maybe it is even unknowable what computers are fundamentally capable of
[22:11:21] <bjs> ...
[22:11:28] <bjs> Yes it is
[22:11:43] <Juliu> Another claim *facepalm*. You never learn
[22:11:57] <bjs> Juliu: why are you facepalming?
[22:12:15] <Juliu> Because of your claiming stuff all the time that no one knows
[22:12:22] <bjs> Juliu: what did i claim now
[22:12:22] <Juliu> *you
[22:12:29] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[22:12:32] <pyzozord> guys noone wins, it's an argument over internet with strangers ;)
[22:12:34] <Juliu> You claimed it is unknowable
[22:13:07] <pyzozord> i doubt anyone is following the discussion
[22:13:11] *** Joins: juliaEnv (~juliaEnv@ip-86-49-255-181.net.upcbroadband.cz)
[22:13:27] <Juliu> bjs, you are like a person who claims that we basically know everything that matters about the universe, just because we know a very tiny bit
[22:13:44] <bjs> Juliu: i'm confused,  I claim both that we know everything and that we don't know
[22:13:52] <bjs> and I agree with you and I disagree with you?
[22:13:55] <Juliu> pyzozord, we are not discussing to entertain you, so it's ok if no one follows
[22:13:56] <bjs> I can't even keep up 
[22:14:22] <Juliu> bjs, are you sure you even know what you claimed, since you claimed so many things
[22:14:36] <bjs> Juliu: which do you take offense with?  I'm happy to argue my point on any particular one.
[22:14:51] <Juliu> I cant keep up either. Each 3rd sentence you write has a new claim in it
[22:14:58] <pyzozord> Juliu: just feeling like you've accidentally fallen into argument for the sake argument, so I'm trying to provide a nice way out :)
[22:15:33] <Juliu> bjs, I said it might even be unknowable what computers are capable of, and you said yes it is. That's a claim
[22:15:49] <bjs> Juliu: yes,  there is no way to define what a "computer" is, again, see Church-Turing.
[22:16:10] <Juliu> bjs, a turing machine is pretty well defined
[22:16:21] <bjs> Juliu: there is no reason to believe that a Turing machine is *the* definition of a computer
[22:17:16] <piou> we even know that some processes cannot be modeled by a Turing machine, such as some processes coming from the actor model
[22:17:25] *** Joins: silasfox (~sbv@p200300cec704065cdb41befe26522709.dip0.t-ipconnect.de)
[22:17:31] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[22:17:33] <Juliu> bjs, a computer is equivalent to a turing machine, except for the limited memory, which we can simply add more to if we need it
[22:17:35] *** Joins: ghost64 (~ghost64@user/ghost64)
[22:17:55] <bjs> Juliu: that sounds like a big claim and there's no reason to believe that "computers" should be limited to whatever turing machines can do
[22:18:04] *** Joins: Akuli (~Akuli@82-203-165-163.bb.dnainternet.fi)
[22:18:10] <Juliu> The chruch-turing hypothesis is not about the difference between a computer and a turing machine. It is about if everything computable is also computable by a turing machine (or computer) or not
[22:18:18] <bjs> maybe there's another mathematical definition of computation that is even more expressive and even more powerful that we don't know about.
[22:19:02] <bjs> Juliu: yes and "computable" is really what defines what it means to be a computer. 
[22:19:14] <Juliu> bjs, you can prove that computers and turing machines (unless the finite memory and the random access memory that does not change the runtime that much) are equal in their computational power
[22:19:21] <bjs> That's kind of the crux, "is everything that's 'computable' possible with a TM?" if the answer was Yes then the TM is a fine model of a computer
[22:19:27] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-7-12.prtc.net) (Ping timeout: 256 seconds)
[22:19:29] <bjs> if the answer is No, then it's not.  The answer is "We can't define computable"
[22:19:38] <Juliu> When I say computer I mean the thing in front of you. Not that hard to understand
[22:19:51] <piou> lol
[22:19:57] <bjs> well the thing infront of me isn't as powerful as the mathematicial turing machine, it's a glorified state machine
[22:19:58] <bjs> but sure
[22:20:02] <Juliu> I never said a computer can compute everything computable
[22:20:09] <pyzozord> There is a chapter in Annotated Turing called "Is Everything a Turing Machine". I need to read that one
[22:20:27] <quippy> boy this is quite a pedantic argument
[22:20:36] <bjs> Juliu: okay well then that's kind of a weird definition of computer and there's no progress to be made here
[22:20:55] <Juliu> pyzozord, Turing was into the thought of artificial intelligence. That guy was way ahead of his time
[22:21:21] <pyzozord> Geniuses often are, aren't they
[22:21:24] <Juliu> bjs, calling a computer a computer is weird? Should I call it a laptop?
[22:21:28] <quippy> hahaha pyzozord 
[22:21:35] <Juliu> pyzozord, probably
[22:21:41] *** Quits: swagneko (~bit@user/nekobit) (Quit: uninstall gentoo)
[22:21:42] <quippy> funny how it works out that geniuses figure things out before other people
[22:22:14] <Juliu> quippy, it's their job. You only get the official genius medal if no one else understands you ;)
[22:24:06] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:24:11] <pyzozord> I need to get good enough at math to be able to read and understand all the important cs papers
[22:25:18] <quippy> I very much gave up on that at some point
[22:26:02] *** Quits: quippy (~quippy@47-220-146-143.gtwncmkt04.res.dyn.suddenlink.net) (Remote host closed the connection)
[22:26:18] <Juliu> pyzozord, which ones?
[22:26:22] <Juliu> All of them???
[22:26:44] <sauce> pyzozord:  https://www.youtube.com/watch?v=T1Ogwa76yQo trigger warning: schmidhuber telling the same joke he tells in literally every other lecture he's ever given
[22:26:46] <bayaz> Title: In the beginning was the code: Juergen Schmidhuber at TEDxUHasselt 
[22:27:02] <pyzozord> I don't even know which ones are important. Actually it would be cool to know
[22:27:14] <Juliu> You cant even understand all the papers in just one area of a specific fiend in computer science, math, or any other science. It is simply too much
[22:27:22] <Juliu> *field
[22:27:36] *** Joins: koolazer (~koo@user/koolazer)
[22:27:47] <Juliu> pyzozord, just tell us what you want to know :)
[22:28:09] <Juliu> Dont say if P is equal to NP !
[22:28:25] <GeDaMo> https://en.wikipedia.org/wiki/A_Mathematical_Theory_of_Communication
[22:28:25] <bayaz> Title: A Mathematical Theory of Communication - Wikipedia 
[22:29:20] *** Quits: inky_ (~inky@46.36.119.19) (Remote host closed the connection)
[22:29:33] <pyzozord> I'm not even sure what I can chose from. Definitely theory of computation. Languages. Compilers. OSes. Computer Systems. I've also heard about such fields as Information Theory? Systems Theory. Category Theory. Graph theory.
[22:29:49] <piou> Information Theory is fun
[22:30:08] <piou> Probably one of the most practical fields among those you mentionned
[22:30:09] *** Joins: Brumaire (~quassel@81-64-14-121.rev.numericable.fr)
[22:30:23] *** Joins: inky_ (~inky@46.36.119.19)
[22:30:48] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[22:31:01] *** Joins: flynn (~mcbloch@user/flynn)
[22:31:21] <piou> Useful to understand encoding, the different properties of different encodings, be it numerical or not, as well as providing a strong foot into cryptography and secret management which is always useful for security
[22:32:04] <Juliu> Cryptography might just be a myth
[22:32:45] <Juliu> And before someone asks what I mean by that, I mean that no one knows if cryptography exists or not
[22:33:21] <piou> *sigh*
[22:33:30] <Juliu> Not my fault. Just a fact
[22:33:42] <pikapika> Juliu, rubber hose cryptanalysis
[22:33:56] <Juliu> pikapika, ?
[22:34:05] *** Quits: Hanii (~textual@host86-171-71-229.range86-171.btcentralplus.com) (Quit: Textual IRC Client: www.textualapp.com)
[22:34:15] <Juliu> Your message is too cryptic. You convinced me, cryptography must exist :P
[22:34:17] * pikapika captures Juliu and tortures him until you spill us the passwords
[22:34:29] <Juliu> 123456
[22:34:44] <piou> Juliu: you should watch https://www.youtube.com/watch?v=7erJ1DV_Tlo, you'll find it interesting. In particular it would help explain why modeling real world computers with Turing machines is stupid anyway.
[22:34:45] <bayaz> Title: Hewitt, Meijer and Szyperski: The Actor Model (everything you wanted to know...) 
[22:34:45] <karstensrage> p@$$w0rd
[22:34:47] <Juliu> What you are talking about is known as the wrench attack
[22:35:28] <pikapika> Juliu, yeah there are probably other names for it too
[22:35:55] <Juliu> piou, because we have random access memory that is better than a turing machine. But like I said earlier, there is no fundamental difference between a computer and a turing machine (besides the finite memory)
[22:36:33] <Juliu> pikapika, I changed my password to "incorrect", so whenever I forget my password, my computer tells me "Your password is incorrect"
[22:36:48] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[22:37:06] <piou> Juliu: that's not it, you should watch the video
[22:37:10] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 240 seconds)
[22:37:36] <piou> Juliu: I'm not joking when I say you'll find it interesting
[22:38:46] <pyzozord> Are there some books that can help with "intro to science and academia" or something like that? I mean not a thing that teaches you calculus. But a thing that you learn in uni but can't get outside it. About what is scientific method, how to think understand science. How to deal with it?
[22:38:58] <Juliu> piou, sorry, find what interesting?
[22:39:10] <piou> Juliu: the video that I linked
[22:39:30] <Juliu> piou, I watched parts of it. Too meta for my taste
[22:39:34] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[22:39:56] <piou> meh
[22:40:22] <piou> pyzozord: I don't know of anything like that but that should definitely be a thing if it isn't already, so many people would benefit from it
[22:40:33] <Juliu> pyzozord, you dont learn what the scientific method is at a university
[22:41:24] <Juliu> Most scientists are people and hence idiots, so they clearly cant teach you how to think
[22:41:52] *** Joins: sinhue (~mithrin@188-167-233-152.dynamic.chello.sk)
[22:42:15] <pyzozord> They ought to be able to know how they think, and since they comprise the academai and science, that should be enough, no?
[22:43:12] <Juliu> ?
[22:44:53] <InPhase> Juliu: I actually taught, explicitly, the scientific method at a university.  People can actually learn it, and do learn it there.  You appear to mentally live in an extreme caricature of the real world.
[22:45:14] <Juliu> InPhase, I was never tought about it
[22:45:39] <InPhase> Juliu: That might be true, and it's unfortunate.  You can go learn about it on your own though.  It's not super complicated.
[22:46:03] *** Joins: Pickchea (~private@user/pickchea)
[22:46:13] <Juliu> InPhase, I didnt say I dont know about it
[22:47:01] <pyzozord> I'm wondering what other prerequisits are there to understanding important cs papers. I assume "calulus level" math faculty. Familiarity with the scientific method. What else?
[22:47:28] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[22:47:34] <bjs> pyzozord: depends what the cs paper is about, and the scientific method is generally not really required to *read* the paper and understand it
[22:47:37] *** Joins: snake (~snake@user/snake)
[22:47:38] <InPhase> Juliu: Then if you learned it, you should be able to imagine professors actually covering it properly.  Because, it is done.
[22:47:49] <pyzozord> Oh some Logic, I guess Logic is different than Math. 
[22:47:52] <bjs> pyzozord: especially not fundamental CS ones that tend to be more maths than empirical science
[22:47:54] <Juliu> pyzozord, no one at a university will teach you about specific papers
[22:48:21] <InPhase> Juliu: Actually, many university courses focus in on the study and analysis of specific papers, typically at the more senior level.
[22:48:55] <pyzozord> bjs: yes I got that impression too
[22:49:38] <Juliu> InPhase, not as far as I know
[22:50:03] <InPhase> Juliu: Well, I'm telling you it happens, and commonly.
[22:50:09] <pyzozord> I think I am interested in the fundamentals. The really important ones that we use all the time even if we don't know about it
[22:50:24] <Juliu> InPhase, I have never seen a course about a paper, not at any university
[22:50:26] <bjs> pyzozord: do you have a specific paper in mind? 
[22:50:41] <pyzozord> bjs: right now it's the Turing's paper
[22:50:44] <bjs> pyzozord: maybe it'd be best to look at a foundational CS paper and see how far you get, that'd tell you pretty quick
[22:50:48] *** Quits: JuggleTux (~tux@mob-194-230-146-23.cgn.sunrise.net) (Quit: WeeChat 1.6)
[22:51:03] <bjs> pyzozord: ah the one on computable numbers
[22:51:03] <Juliu> pyzozord, I wouldnt waste my time with reading the original papers
[22:51:14] <bjs> pyzozord: that probably has a little more background than others :)
[22:51:28] <bjs> since it's at the interface of two subjects
[22:51:57] <InPhase> Juliu: A course would almost never be about a single paper, because that is not enough content.  There are commonly courses however that review a series of journal articles as part of a preparation for independent research, and also courses where students undertake literature study projects involving instruction on how to review, break down, analyze, and critique papers that they will use to 
[22:52:03] <InPhase> synthesize a novel argument.
[22:52:19] <pyzozord> Juliu: For me it sounds like the furthest thing from wasiting time. For me it sounds like actually learning the fundamental principles governing our lives (at least in the computer department)
[22:52:32] <bjs> pyzozord: but yeah,  just go for it.  You're never going to be in a state you can just pick up a paper and read it having all of the background in your head upfront
[22:52:40] <Juliu> InPhase, are you talking about journalism courses?
[22:52:46] <bjs> pyzozord: that's not really how papers work, you'll always have to end up going backwards to find more 
[22:52:51] <InPhase> Juliu: No, science courses.
[22:53:25] <Juliu> pyzozord, you can learn the fundamental things way quicker via some videos or examples. And a lot of fundamental things are not even known yet
[22:53:31] <pyzozord> bjs: oh, really? I imagined "professional" scientists just kind of read papers before sleep
[22:53:44] <Juliu> InPhase, dude, what are science courses? No one studies "science"
[22:53:46] <InPhase> Juliu: I took some of these as a student.  I taught some of these as a professor.  I was also involved in the review and approval of new programs, where such things were part of the standard curriculum being put into the programs.
[22:53:50] *** Joins: magla (~gelignite@55d4a93f.access.ecotel.net)
[22:53:56] <pyzozord> I'm of course exadurating but you get what I mean
[22:54:08] <pyzozord> *exaggerating
[22:54:09] *** Joins: Auron (Auron956@user/auron)
[22:54:12] <InPhase> Juliu: Science courses are courses for which the subject is one of any of the topics considered in the sciences.
[22:54:17] <bjs> pyzozord: yes but even professionals can't pick up an arbitrary paper and do that unless it's very specifically in their own domain that they work and study every day for decades and already have all the background in their head.
[22:54:40] <Juliu> InPhase, courses are normally about subjects, not about papers
[22:55:13] <Juliu> pyzozord, you think too much about thinking. Start doing the thinking
[22:55:17] <InPhase> Juliu: And one subject is understanding how to study and utilize the scientific literature.
[22:55:32] <Juliu> InPhase, so it's a literature class?
[22:55:32] <pyzozord> Juliu: it's like watching a dvd rip of a movie. I prefer to go to the theatre
[22:55:38] <pyzozord> Juliu: heh, that last one may be true
[22:55:47] <bjs> pyzozord: the moment the paper goes "building on the work of O'Toole [77]"  you go "oh,  I guess I should read that paper too..." and unless you already have...  you can't know all the stuff the paper will rely on before hand, you can't have read all the papers beforehand, and not all the papers it references will matter as much to understanding it
[22:55:51] <InPhase> Juliu: Do you know what "scientific literature" means?
[22:55:59] <Juliu> pyzozord, sure, do whatever you want. Tell me in 200 years when you know the basic things
[22:56:19] <Juliu> InPhase, ?
[22:57:32] *** Joins: Inari (~Pinkishu@p4fe7ef06.dip0.t-ipconnect.de)
[22:57:38] <pyzozord> bjs: yeah I'm worried about falling down that references hole. It's a bit like wikipedia I suppose. I've been around wikipedia a bit, I am starting to see visited links more often now. You probably need to build up that body of often quoted papers.
[22:57:49] <wedr> Is it immoral to lie you're getting fired when you're just packing your personal belongings and cleaning out the office cubicles, never to return back to the office ever again?
[22:57:55] <pyzozord> I guess that's a good heuristic for selecting what papers are important. The ones that are the most quoted
[22:58:10] <wedr> Next week, I'm planning to return to the office, and pack up my stuffs. THen bid farewell to the office
[22:58:14] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[22:58:26] <arahael> Juliu: out of curiousity, which uni did you go to, in which country?  it doesnt seem to be as good as the one i went to.
[22:58:31] <cis> wedr: so you fired yourself?
[22:58:32] <wedr> The office lease is about to expire, so we all need to pack our stuffs out.
[22:58:41] <wedr> We're not fired, just packing our belongings.
[22:58:49] <bjs> pyzozord: that computable numbers paper, have you actually found a copy and read it yet?
[22:58:51] *** Quits: dev4449 (~dev4449@178-175-129-40.static.as43289.net) (Quit: Quit)
[22:58:54] <Juliu> wedr, when you never return you will certainly be fired, so it would not be a lie
[22:59:01] <bjs> pyzozord: you don't read papers like a novel,  you always end up doing a first read where you don't understand anything. 
[22:59:14] <cis> wedr: what do you get by lying about it?
[22:59:16] <wedr> Even when all the entire Boston team is packing stuffs and cleaning the office space?
[22:59:23] <Juliu> arahael, I have been at serveral universities in Germany and the USA
[22:59:24] <pyzozord> bjs: I've been planning to read Annotated Turing. If I understand correctly it includes that specific paper and extra explanations and context to it.
[22:59:28] <wedr> I guess it's immoral to lie..
[22:59:50] <wedr> Anyway, the truth is, we are no longer going to have a Boston office in the city anymore.
[23:00:00] <wedr> Corporate is shutting down the office, basically
[23:00:07] <cis> morality depends on the content and context of the lie
[23:00:29] <bjs> pyzozord: you can only plan to read for so long,  you should just go read and figure out what parts of the paper actually confuse you and what parts use math that's not explained
[23:00:31] <wedr> Sayonara, Boston.
[23:00:37] <bjs> pyzozord: you can't know those things by planning
[23:00:50] <arahael> Juliu: weird, and none tauht the scientific method?  they do teach that at uni's in my country (australia) in relevant subjects.
[23:00:58] <cis> Boston is a nice city
[23:01:06] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[23:01:09] <Juliu> arahael, what course should they teach this in?
[23:01:16] <Juliu> Every?
[23:01:21] <pyzozord> bjs: that's true, I think the general advice "just do it" is very on spot in my case
[23:01:25] <Juliu> Just one? Which one?
[23:01:34] <arahael> Juliu: for example, physics courses, and most research oriented subjects.
[23:01:49] <Juliu> arahael, I have never been in a physics course
[23:02:22] <arahael> Juliu: that might be it.  they don't teach the scientific method in, say, "introduction to object oriented programming".
[23:02:24] <bjs> pyzozord: well someone like me can tell you, but it'd be specific for this paper, if you went to read Cook's paper on NP-completeness (since it's topical) the things you need to know completely change,  or if you wanted to read Chomsky's papers again it'd be another but totally different set of things you'd need to learn first
[23:03:01] <Juliu> Universities do not teach students about research. They just present finished research to students, since students do not need to know how to do research. It's not their level within academia
[23:03:14] *** Joins: Samian (~Sami@163.114.130.5)
[23:03:20] <arahael> Juliu: that is not my experience.
[23:03:22] <InPhase> Juliu: That's not true.  I taught many students about research.
[23:03:34] <Juliu> arahael, students dont do research
[23:03:46] <Juliu> InPhase, you, ok. Who else?
[23:03:47] <arahael> Juliu: in my engineering course, i had to do lab work and follow the scientific process.
[23:03:53] <InPhase> Juliu: It sounds like you might have gone to a degree program with a highly technical-focused curriculum.  That is not the only thing that exists.
[23:03:57] <Juliu> arahael, lab work is not research
[23:04:05] <pyzozord> bjs: so knowing absolutely nothing really, how many papers, do you estimate, I will need to read first, before I can read say a Chomsky's paper
[23:04:13] <arahael> Juliu: depends on the lab work.
[23:04:26] <bjs> pyzozord: oh well, at least 17.328 papers
[23:04:38] <bjs> pyzozord: ... i'm kidding of course,  how am i supposed to answer that question? :P
[23:04:40] <Juliu> InPhase, sure, there are also courses about philosophy, theology, literature, and all that bullshit
[23:04:58] <Juliu> arahael, you will never do lab work as a student that leads to new research results
[23:05:09] <pyzozord> bjs: yeah probably a stupid question. How many on average you need to read to read a paper you are interested in?
[23:05:33] <Juliu> pyzozord, I bet it helps to read most of the words in that paper
[23:05:38] <bjs> pyzozord: it really depends on what you're trying to get out of it and frankly how deeply you need to go searching to understand something.
[23:05:49] <arahael> Juliu: evidence begs to differ there.  there have been many, many cases where new research came out of a student's discoveries.
[23:06:05] <Juliu> arahael, not really
[23:06:21] <bjs> pyzozord: if you just want to understand what the paper says,  maybe not very many especially if you have some general background understanding.  If you actually want to *understand* and follow proofs and see where ideas came from or look at alternative phrasings etc it can get very deep
[23:06:28] <arahael> Juliu: "not really"?
[23:06:31] <pyzozord> bjs: I don't even have an order of magnitude in my head. It might 5 or 50 or 500 as far as I know
[23:06:43] <bjs> pyzozord: any of those might be good estimates
[23:06:43] <Juliu> arahael, yes, not really. Students almost never discover new things
[23:07:04] <arahael> Juliu: ah, now you're shifting the goalposts of your claim.
[23:07:09] <bjs> pyzozord: if the paper goes "We simulate a Turing-machine ..." and you go "What's a Turing?" then probably you'd be having to do some more reading...
[23:07:13] <bjs> (as an example)
[23:07:18] <Juliu> arahael, ?
[23:07:34] <Juliu> bjs, lol
[23:07:42] <arahael> Juliu: you now say "almost never".
[23:07:47] <pyzozord> bjs: in that case should I look up on wikipedia or try to find the original paper that defines "what a Turing is"?
[23:07:54] <Juliu> Be mean and ask "Who is we?"
[23:07:55] <arahael> anyway, i'm dont.
[23:08:03] <InPhase> Juliu: The strongest coverage about research that I received as an undergraduate was from my Psychology course on Research Design & Methods.  I was required to take a minor outside of my primary area, and I was required to take additional courses outside of the area of both my major and my minor for breadth.  That led me to this topic, which was quite enriching.
[23:08:08] <arahael> *i'm done.
[23:08:31] <bjs> pyzozord: I think you took my comment too literally,  but yes you'd have to go do some background reading.  Either find specific papers if it's a specific thing or if it's a general idea then general CS textbooks and courses generally explain more directly than reading the original papers
[23:08:36] <Juliu> arahael, yes. There have been a few cases where a student was not told that something is an unsolved problem, and the student found a solution. But this is very rare
[23:08:42] <InPhase> Juliu: Of course there was coverage of the scientific method in my other courses, but that particular one was especially detailed on how to go about conducting rigorous research.
[23:08:56] <pyzozord> I think I just need to read up on what MIT studens do, how many courses they need to choose to get their points, and kind of simulate that
[23:09:16] <Juliu> InPhase, I never had any courses about psychology
[23:09:42] <pyzozord> bjs: no no "what a Turing is" was a placeholder, at least I understood it as a placeholder
[23:09:49] <bjs> pyzozord: if you really want to learn _Computer Science_ and not just programming then univeristies tend to give a rigorous and structured approach to learning
[23:09:55] <bjs> pyzozord: yeah it was a jokey placeholder
[23:09:57] *** Joins: webNET4 (~0x100@32.211.211.39)
[23:10:06] <pyzozord> bjs: yep I chuckled
[23:10:18] <bjs> pyzozord: note that not all unis are equivalent and some are better than others and a uni course is not a substitute for actually understanding, learning or doing
[23:10:29] <Juliu> Placeholder is a placeholder for metaphor
[23:10:53] <Juliu> pyzozord, do you know what recursion is?
[23:11:21] <pyzozord> Juliu: I only know that it is recursion
[23:11:33] <Juliu> pyzozord, yes, indeed
[23:11:44] <Juliu> You can best exlain recursion by explaining recursion
[23:12:59] <pyzozord> bjs: I hold MIT as the gold standard. But I also head good things about berkely (obviously) and the one I forgot where it was, but I was pretty strict
[23:13:04] <Juliu> pyzozord, I have something for you:   https://pbs.twimg.com/media/B079qkjIMAADZ9S.jpg
[23:13:04] <pyzozord> I think Carmack went there
[23:13:05] <bayaz> Type: image/jpeg Size: 47.4 kB 
[23:13:17] <bjs> pyzozord: if it makes you feel better, the Cook paper was my first ever CS paper that I read when I was younger and I didn't understand any of it the first time I read it.
[23:13:27] <Juliu> Carmack went there and stole their PCs, probably
[23:13:48] <pyzozord> no no, Carmack went somewhere else
[23:14:05] <bjs> pyzozord: sure these seem like good unis that have a solid emphasis on theory
[23:14:23] <Juliu> But he still broke into his school
[23:14:41] <Juliu> Most people want out of school. Carmack wanted in
[23:15:28] <pyzozord> Austin Texas uni
[23:15:37] <pyzozord> heard good things about it, was surprised
[23:16:37] <pyzozord> actually I got uva.nl under my nose, I should get interested in that. Maybe they have some free thing
[23:17:04] *** Quits: Cashlin (~hp@user/cashlin) (Read error: Connection reset by peer)
[23:18:37] <Juliu> You should definitely pick a university because they have free donuts
[23:18:55] <arahael> Juliu: my uni didnt have donuts. at all.
[23:19:02] <domhnall> arahael: same
[23:19:10] *** Quits: APic (apic@apic.name) (Ping timeout: 240 seconds)
[23:19:12] <Juliu> arahael, dude, it was irony
[23:19:13] *** Quits: rexar89 (~alexi5@208.83.82.234) (Ping timeout: 252 seconds)
[23:19:21] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[23:19:28] <pyzozord> I meant they would let me learn for free
[23:19:47] <pyzozord> I don't need the papers. I'm in it to aquire the knoweledge :P
[23:19:49] <arahael> Juliu: irony? how was ir irony?
[23:19:52] <arahael> *it
[23:20:04] <Juliu> *facepalm*
[23:20:21] <webNET4> s/donuts/overpriced vending machine honeybuns/
[23:20:25] <arahael> Juliu: did you mean sarcasm?
[23:20:26] <Juliu> pyzozord, you probably wont come into contact with papers as a student
[23:20:46] <bjs> pyzozord: reading random papers is one of those things that give you a deeper insight into things but it's not always obvious what the immediate benefit is if you're reading things that are covered in textbooks
[23:20:49] <bjs> if you know what I mean?
[23:20:51] <Caffeinated> webNET4: we talked before about you calling me honeybuns :P
[23:20:51] <domhnall> what kind of papers? the ones you write or the ones you ear?
[23:20:54] <domhnall> earn*
[23:21:00] <Juliu> arahael, sarcasm is when you make fun of someone. Irony is like a lie, only that you want the other person to know you dont meant it
[23:21:22] <pyzozord> oh sorry, I meant papers as in the graduation certificats and such things. I dont know what they are really called obviously, never got one
[23:21:26] *** Joins: Hax0r (~Hax0r@128.127.222.236)
[23:21:31] <Juliu> bjs, no one reads random papers
[23:21:33] <bjs> pyzozord: i mean you can read chomksys papers, or the computable numbers one but a modern intro to computation textbook (like I think you were looking at the Sipster book?) would cover all the background info pretty comprehensively already
[23:21:48] <domhnall> Degrees or Certifications
[23:21:50] *** Quits: hexingb (~hexingb@2409:8900:284e:ac70:b1d3:8016:a32a:19ec) (Ping timeout: 256 seconds)
[23:21:50] <Juliu> domhnall, you dont write papers as a student
[23:22:01] <pyzozord> a degree, yes
[23:22:07] <domhnall> Juliu: ha... is that more irony? because it surely is a lie.
[23:22:10] <Juliu> That is not a paper
[23:22:17] <arahael> Juliu: i don't quite agree with that definition.
[23:22:18] <Juliu> domhnall, it's not
[23:22:25] <pulse> pretty sure at least some papers have been written by students through history :p
[23:22:31] <pulse> anyone can write a paper
[23:22:34] <bjs> You might,  there's no rule saying students can't write papers.  It's uncommon but certainly not unheard of for authors of papers to be students.  Typically not first-year students though.
[23:22:41] <Juliu> pulse, not what I meant
[23:22:43] <pyzozord> sorry that was a poor translation from my native language where we informally call degrees "papers" as "documentation" etc
[23:22:44] <webNET4> caffeinated uhhhh  context: https://m.media-amazon.com/images/I/71WweHD-IfL._SL1456_.jpg  lol
[23:22:45] <bayaz> Type: image/jpeg Size: 175.8 kB 
[23:22:53] <domhnall> Juliu: APA, MLA... didn't know anything about them until University.
[23:22:53] <InPhase> Juliu: What do you mean no one reads random papers?
[23:23:03] <domhnall> as an undergrad
[23:23:06] <Juliu> domhnall, ?
[23:23:19] <arahael> Juliu: Irony is when you express something in a way that normally means it's opposite.  As quite opposed to the lowest form of wit.
[23:23:24] <Caffeinated> webNET4: ahh, my mistake :P
[23:23:26] <domhnall> Juliu: my thoughts exactly
[23:23:26] <Juliu> InPhase, why would anyone read random papers? This someone had to be nuts
[23:23:33] <pyzozord> bjs: hmm yes, reading textbooks might be more suitable to my level
[23:23:42] <arahael> Juliu: Are you saying I was nuts when I was at uni? I read random papers all the time!
[23:23:53] <arahael> There is so much good material in the papers.
[23:23:59] <InPhase> Juliu: I think I have probably averaged more than one journal article a year for the last decade, across a very wide range of subjects.
[23:24:01] <Caffeinated> Juliu: because lots of people like to learn?
[23:24:01] <Juliu> arahael, irony does not have to mean the opposite of what you said
[23:24:02] <bjs> pyzozord: well it's not really about the level it's just about how much content they contain.  Modern computation textbooks distil things down and try purposely to make things consistent and understandable.
[23:24:07] <pyzozord> but I still feel like, as a passionate/amature, I am obligated to read some of the original ones. At least the most important ones.
[23:24:29] <Juliu> InPhase, why are you telling me random things?
[23:24:41] <bjs> pyzozord: you're not obligated.  I do recommend reading them though.  but I really do recommend *reading* them and not endlessly planning about planning to read them
[23:24:46] <bjs> and certainly not to *replace* textbooks with them
[23:24:47] <arahael> Juliu: No, it can also mean "like iron".
[23:24:52] <Juliu> Caffeinated, only an idiot would learn random things. Most papers are shit anyway, so only an idiot would read random ones
[23:24:57] <InPhase> Juliu: Often I read over a paper before breakfast just as a mental warm up.  Sometimes I'll read over multiple in the evening.  People do these things.
[23:25:17] <Juliu> arahael, I cant tell if you are joking or if you are a moron
[23:25:26] <Caffeinated> Juliu: gosh you're a pro
[23:25:29] <pyzozord> bjs: point taken, I'll shut up now :P
[23:25:47] <arahael> Juliu: By the contrary, I honestly can't tell which dictionary you're using.
[23:25:53] <InPhase> Juliu: I've also literally selected papers at random to read, in order to do a survey of what sorts of errors exist in papers when I don't select them for any particular reason.
[23:25:53] <pulse> Juliu, please be respectful to users
[23:25:55] <bjs> pyzozord: i don't mean to shut you up, I just mean to encourage you to read them but not to expect it to be a replacement for other forms of learning :)
[23:25:58] <pyzozord> bjs: (no offence meant also none taken)
[23:25:59] <Juliu> Caffeinated, once you are forced to read papers to review them, you will know what I mean
[23:26:35] <Juliu> InPhase, that is probably something else
[23:27:26] <arahael> Juliu: You do realise that Irony can also refer to feigned ignorance?
[23:27:41] *** Quits: Andalu30 (~andalu30@85.137.21.37.dyn.user.ono.com) (Ping timeout: 244 seconds)
[23:27:57] <Juliu> arahael, "Irony (from Ancient Greek εἰρωνεία eirōneía 'dissimulation, feigned ignorance'[1]), in its broadest sense, is a rhetorical device, literary technique, or event in which what on the surface appears to be the case or to be expected differs radically from what is actually the case." -- https://en.wikipedia.org/wiki/Irony
[23:27:57] <bayaz> Title: Irony - Wikipedia 
[23:28:29] <arahael> Juliu: Ah, the wikipedia article.  Yes.  Good dictionary.
[23:28:42] <Juliu> arahael, apparently it is too good for you
[23:29:07] <Juliu> Or it was too hard to read even the first sentence, who knows
[23:30:40] <arahael> Juliu: I never expected to take lessons in Ironic Meaning from a person who went to german and US universities.
[23:30:40] <Juliu> arahael, can I ask you something!? Are you Indian?
[23:30:49] * enyc meows bayaz arahael Juliu 
[23:30:56] <domhnall> arahael: keep in mind these are random nicks inside a little box that at times says something.
[23:31:13] <arahael> Juliu: What if I were Indian?
[23:31:28] <arahael> domhnall: Good reminder. :)
[23:32:21] <Juliu> arahael, nothing. You just have this typical Indian know-nothing-but-say-"MY university is better than yours" attitude
[23:33:12] <arahael> Juliu: For good reason, you're the one who is expressing disdain for the scientific process and for reading papers.
[23:33:23] *** Joins: Crescendo (~Crescendo@user/crescendo)
[23:33:48] <Juliu> arahael, read as many papers as you want. If you had ever done that, you would know what I am talking about
[23:33:59] <arahael> Juliu: I have actually done that.
[23:34:07] <arahael> Juliu: I read papers for fun, though not as many as InPhase.
[23:34:30] <Juliu> I also read some papers I am interested in. That is a totally different thing since they are not random papers
[23:34:51] <pikapika> Everything is subject to quality distributions. Its probably quite fruitful to read the ones that stood out, landmark/historic papers etc
[23:34:59] <arahael> Indeed.
[23:35:24] <Juliu> pikapika, I think that is mostly a waste of time
[23:35:57] <pikapika> Shannons original paper is quite fruitful to read for example
[23:36:31] <Juliu> Someone who thinks that students sit there and read papers, or even write papers, has clearly no idea about how academia works
[23:36:43] <pikapika> Who said anything about academia
[23:36:55] <Juliu> pikapika, we, earlier. Maybe you missed that
[23:37:04] <arahael> pikapika: One of my favorite papers is "Being lazy with class", (though I'm intentionally shortening the title there), but whilst I haven't read Shannon's paper, at uni I read a huge number of random papers about garbage collection.
[23:37:40] <pikapika> arahael, this guy is too focused on the shit end of the quality distribution
[23:37:41] *** Joins: TheRedRipper (~student@user/theredripper)
[23:37:44] <TheRedRipper> yoo
[23:37:46] <pikapika> Nobody is denying a quality distribution exists
[23:37:51] <TheRedRipper> is this working?
[23:37:55] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 252 seconds)
[23:37:55] <TheRedRipper> can you see this ya'll?
[23:38:00] <domhnall> arahael: you mean gc in terms of code clean up? not sanitation, right?
[23:38:00] <webNET4> RIPPAH acknowledged
[23:38:01] <cis> TheRedRipper: yes
[23:38:04] <TheRedRipper> NICE
[23:38:13] <pikapika> What we are saying is that some of the top stuff is well known and is worthy of reading
[23:38:14] <TheRedRipper> i figured out how 2 get weechat on my schools computers
[23:38:19] <TheRedRipper> haha
[23:38:38] *** Joins: Enitin (~Enitin@82.102.22.84)
[23:38:59] <arahael> domhnall: Heh, yep. :)
[23:39:04] <Juliu> My favorite peer-reviewed paper is this one:   https://www.scs.stanford.edu/~dm/home/papers/remove.pdf
[23:39:05] <domhnall> cool
[23:41:17] *** Quits: sinhue (~mithrin@188-167-233-152.dynamic.chello.sk) (Ping timeout: 252 seconds)
[23:42:08] <domhnall> I recall a channel that actually had a paper's topic drive the discussion of the channel. cannot recall the channel though. This was on freenode. 
[23:42:37] <domhnall> nothing scientific or educational, unfortunately....but was interesting to see.
[23:42:40] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 244 seconds)
[23:43:46] *** Quits: x003fgqwe (uid479614@id-479614.tooting.irccloud.com) ()
[23:43:55] <pulse> Juliu, i like it
[23:44:00] *** Joins: x003fgqwe (uid479614@id-479614.lymington.irccloud.com)
[23:44:08] <domhnall> as for here though, I'm now interesting in that NP-hardness topic and looking for reads on that. fascinating stuff.
[23:44:17] <Juliu> pulse, I like the 2 graphics
[23:46:46] <pulse> i don't understand the meaning of the off branch in the first one
[23:46:46] <Juliu> pulse, there also is a short wikipedia article about that paper, and some articles in some magazines
[23:46:47] *** Joins: Enitin (~Enitin@82.102.22.85)
[23:46:47] <Juliu> pulse, I think it's too complex to understand for a non-expert
[23:46:47] <pulse> the references are disappointingly few
[23:46:47] <Juliu> pulse, the funniest thing about this paper are the reviews it got, saying things like "Excellent"
[23:46:47] <pulse> hah
[23:47:09] <Juliu> Sadly they never published it since they had to pay $150 in this shitty pay-to-publish journal
[23:47:29] <wedr> *sigh* Our corporate office leasing building requires us employees to pay a surcharge of $10 to return the building badge card access. :(
[23:47:42] <wedr> Or so I was told.
[23:47:54] <wedr> Is this normal in big cities like Boston?
[23:47:58] <Juliu> wedr, wow, $10, you will get poor and live on the streets
[23:48:16] <GeDaMo> How much do you have to  pay to not return it? :|
[23:48:46] <wedr> We are forced to comply. Not sure if this is part of the clause in our employment contract.
[23:49:18] *** Parts: TheRedRipper (~student@user/theredripper) (WOOOOOOOo)
[23:49:18] <wedr> I don't know what amount is needed to pay to not return it. I don't want to know, and it saves me the hassles.
[23:49:42] <Juliu> wedr, just send it to them via mail
[23:49:58] <wedr> Juliu, Those dollardoos is enough for me to eat some sweet juicy BBQ burgers in Boston.
[23:50:26] <Juliu> wedr, yes, of course. But after working there for years, I bet $10 doesnt make such a difference
[23:50:34] <wedr> Juliu, can't, because we need to return to our office to pick up our stuffs. They're making sure we return the badge on the same day we arrive to pick our stuffs up.
[23:50:40] <Juliu> Damn, a BBQ burger would be really nice right now
[23:50:55] <wedr> I'm just wondering if this is the norm there for office leasing buildings.
[23:51:09] <wedr> Can't go wrong with a $10 burger
[23:51:14] <Juliu> wedr, you seem depressed
[23:51:21] <wedr> probably
[23:51:25] <Juliu> :/
[23:52:10] <cis> wedr: lol you have to pay to *return* a badge?
[23:52:12] *** Quits: snake (~snake@user/snake) (Quit: Namae nado nai, omae to onaji da..)
[23:52:35] <Juliu> cis, I dont quite get it either
[23:52:51] <cis> simply pick up your stuff, leave the badge, and refuse to pay
[23:58:20] *** Quits: gitgood (~gitgood@host-78-145-140-210.as13285.net) (Ping timeout: 252 seconds)
[23:59:43] *** Quits: Inhahe (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 244 seconds)
