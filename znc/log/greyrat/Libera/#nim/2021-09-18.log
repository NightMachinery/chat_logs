[00:03:12] <FromDiscord> <Goel> v: Vector2 (0.0, 0.0)↵you don't neet do put the labels
[00:03:22] <FromDiscord> <Goel> (edit) "v: Vector2 ... (0.0," 03added "="
[00:21:59] *** Joins: crem (~crem@2a02:169:160a:1:9b30:962e:76eb:4bb3)
[00:24:25] <FromDiscord> <Varriount> Zevv: Out of curiosity, what is it about Nim's AST that you find makes it hard to work with?
[00:25:00] <FromDiscord> <Varriount> Especially versus a more specific AST?
[00:50:46] <FromDiscord> <Rika> In reply to @Goel "v: Vector2 = (0.0,": Only works on tuples
[00:50:59] <arfy> hi. is it possible, and/or recommended to recursively call a function from within a try... except block? As part of the except clause
[00:52:15] <FromDiscord> <Rika> You can
[00:52:36] <FromDiscord> <Rika> There is a recursion limit of course
[00:52:44] <FromDiscord> <Rika> Like in most non functionally oriented languages
[00:53:24] <arfy> yay. only want to have one code point in this function to set a flag. Try open specified config file. if cannot open, try again with defaults. if defaults don't exist, create new ones.
[00:57:53] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[01:08:31] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[01:08:55] *** Joins: supakeen (~user@python/site-packages/supakeen)
[01:13:44] <FromDiscord> <Smarc> Is there a way to play .ogg files in nim? The ogg nimble package gives me a 404
[01:14:25] * arfy uses nimbass, but it's not free as in beer.
[01:15:22] <FromDiscord> <Smarc> I'd like to play different (small) portions of the .ogg file on different keystrokes, would that be possible (with nimbass)?
[01:15:46] <arfy> yes I'm pretty sure nimbass can seek in ogg files.
[01:16:17] <arfy> I'm using it  myself to essentially, recreate a cart machine.
[01:21:49] <FromDiscord> <Smarc> hm, not even the example on the github readme is actually working for me
[01:22:05] <arfy> what platform?
[01:22:09] <FromDiscord> <Smarc> sent a code paste, see https://play.nim-lang.org/#ix=3zcb
[01:22:12] <FromDiscord> <Smarc> throws me several errors like BASS_Init not known
[01:22:17] <FromDiscord> <Smarc> Manjaro
[01:22:42] <arfy> this is after nimble install nimbass?
[01:22:51] <FromDiscord> <Smarc> yes
[01:23:38] <arfy> hmmm
[01:23:46] <FromDiscord> <Smarc> sent a code paste, see https://play.nim-lang.org/#ix=3zcc
[01:23:57] *** Parts: arfy (~arfy@1.126.104.139) (Closing Window)
[01:24:07] *** Joins: arfy (~arfy@1.126.104.139)
[01:24:36] <FromDiscord> <Elegantbeef> You need two pointers
[01:24:48] <FromDiscord> <Elegantbeef> the last two parameters are pointers you're passing `Dword, nil`
[01:24:54] <arfy> ah.
[01:25:08] <arfy> easy. change the forth argument to nil.
[01:25:09] <FromDiscord> <Elegantbeef> Also those casts probably are useless
[01:25:17] <FromDiscord> <Elegantbeef> You can just do `Dword(44100)`
[01:25:24] <arfy> that format in the example works on windows
[01:25:27] <FromDiscord> <Smarc> I actually just c&p the readme example :)
[01:25:30] <FromDiscord> <Smarc> ah
[01:25:32] <arfy> I have to do the same thing on mac.
[01:26:05] <arfy> I don't even bother with the dword. I just use 44100.
[01:26:20] <FromDiscord> <Elegantbeef> Yea it's just an alias it's not a distinct
[01:26:23] <FromDiscord> <Elegantbeef> Didnt look at the source before i spoke
[01:28:11] <FromDiscord> <Smarc> Those docs are .. huge. So how do I play some simple .ogg file?
[01:37:28] <arfy> https://play.nim-lang.org/#ix=3zcj
[01:40:56] <FromDiscord> <Smarc> sent a code paste, see https://play.nim-lang.org/#ix=3zck
[01:41:24] <FromDiscord> <Elegantbeef> `cint(device)`
[01:41:35] <arfy> oops
[01:41:40] <FromDiscord> <Elegantbeef> or `cint(-1)`
[01:41:43] <arfy> knew i was forgetting something
[01:41:47] <FromDiscord> <Elegantbeef> cmon arfy you're ruining people's lives
[01:42:21] <arfy> :P
[01:42:35] <FromDiscord> <Smarc> compiles, but does not play any sound :P
[01:44:23] <arfy> don't forget to change "test.ogg" to something that actually exists.
[01:44:35] <arfy> also, maybe -1 didn't work for some reason. try 1 for device.
[01:46:03] <FromDiscord> <Smarc> sent a code paste, see https://play.nim-lang.org/#ix=3zcm
[01:46:17] <FromDiscord> <Smarc> tried both, 1 and -1, but it does not play anything. the .ogg exists in the same directory
[01:46:51] <FromDiscord> <Elegantbeef> Anyone got docs for this library?
[01:47:37] <arfy> I have the docs of the original library as a chm file
[01:49:10] <arfy> try outputting the result of BASS_ErrorGetCode after the call to BASS_Init
[01:51:30] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[01:52:33] *** Joins: xet7 (~xet7@user/xet7)
[01:53:03] <FromDiscord> <Smarc> outputs 46
[01:53:33] <FromDiscord> <Smarc> BASS_ERROR_BUSY
[01:53:47] <arfy> probably means device is in use
[01:54:25] <FromDiscord> <Smarc> okay, I figured what blocked it, now the error code is 0
[01:54:32] <FromDiscord> <Smarc> which means OK, but still no sound
[01:54:52] <arfy> buh? yep, now confused == true
[01:55:13] <FromDiscord> <Smarc> okay, a sleep(5000) at the end did the trick!
[01:55:29] <FromDiscord> <Smarc> thanks you guys for your help
[01:55:38] <arfy> oh... oops yeah that would do it.
[01:55:49] <arfy> sound starts playing then immediately exits
[01:56:31] <arfy> yeah. I really should put a nicer wrapping on this lib. or at least see if authro wants to.
[01:56:35] <arfy> author
[01:56:39] <FromDiscord> <Smarc> I'll be back later to figure out how to play just a little part of the .ogg on keystroke :P
[01:57:07] <arfy> illwill will be helpful here.
[01:58:24] <FromDiscord> <Smarc> I'll get back to that, gotta go to bed now :) See you guys soon!
[02:02:51] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[02:03:16] *** Joins: supakeen (~user@python/site-packages/supakeen)
[02:03:50] <arfy> my thoughts on nim's stdlib. I like it. it covers all the esentials, not too small or too big. very much like python. system could be a little more modular though
[02:06:42] <FromDiscord> <Elegantbeef> Yea the core devs do want to make system smaller and split it up
[02:06:51] <FromDiscord> <Elegantbeef> Like `io` being included in system for instance
[02:14:47] *** Quits: ozzz (~oz@46.49.41.80) (Ping timeout: 265 seconds)
[02:33:27] *** Joins: ozzz (~oz@46.49.41.80)
[02:37:08] *** Quits: ozzz (~oz@46.49.41.80) (Read error: Connection reset by peer)
[02:40:15] *** Joins: ozzz (~oz@46.49.41.80)
[02:45:50] *** Quits: ozzz (~oz@46.49.41.80) (Read error: Connection reset by peer)
[02:49:41] *** Joins: ozzz (~oz@46.49.41.80)
[02:55:49] *** Quits: ozzz (~oz@46.49.41.80) (Read error: Connection reset by peer)
[02:59:13] *** Joins: ozzz (~oz@46.49.41.80)
[03:13:08] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[03:18:03] *** Joins: max22- (~maxime@2a01cb08833598007ac4a393d617d2bc.ipv6.abo.wanadoo.fr)
[03:43:06] *** Quits: perro (~user@072-191-245-069.res.spectrum.com) (Remote host closed the connection)
[03:43:10] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 260 seconds)
[04:15:53] <NimEventer> New thread by EnteryName: Nim in Action, see https://forum.nim-lang.org/t/8436
[04:28:40] *** Quits: max22- (~maxime@2a01cb08833598007ac4a393d617d2bc.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[04:41:11] <FromDiscord> <Richard> sent a long message, see http://ix.io/3zcT
[04:41:47] <FromDiscord> <Richard> I'm trying to convert a python dataframe object back into a nim table, is there any way to do this?
[04:45:03] <FromDiscord> <Elegantbeef> Is this just a test? Cause there are CSV libraries for nim?
[04:46:25] <FromDiscord> <Richard> Yes I know I just want to see if it works
[04:46:26] <FromDiscord> <Elegantbeef> I imagine you need to iterate over the df to extract the data but idk what's inside df
[04:47:07] <FromDiscord> <Richard> Just some sample data on the internet https://media.discordapp.net/attachments/371759389889003532/888579355184345118/data.csv
[04:51:18] <FromDiscord> <Elegantbeef> I more mean i dont know what the df data type is
[04:52:36] <FromDiscord> <gogolxdong (liuxiaodong)> How to construct constructor of contract with nim-web3?
[04:56:13] <FromDiscord> <Richard> I think it says PyObject in my linter
[04:59:52] <FromDiscord> <Elegantbeef> Idk
[04:59:56] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3zcX
[05:00:08] <FromDiscord> <Elegantbeef> Not being a python programmer and never using nimpy i'm completely blind on what's going on
[05:57:15] *** Joins: neurocyte01 (~neurocyte@45.93.111.147)
[05:57:16] *** Quits: neurocyte01 (~neurocyte@45.93.111.147) (Changing host)
[05:57:16] *** Joins: neurocyte01 (~neurocyte@user/neurocyte)
[05:59:47] *** Quits: neurocyte0 (~neurocyte@user/neurocyte) (Ping timeout: 268 seconds)
[05:59:47] *** neurocyte01 is now known as neurocyte0
[06:45:21] <FromDiscord> <gogolxdong (liuxiaodong)> I found out nim-web3 handles only function and event but constructor.
[07:03:50] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[08:35:41] <FromDiscord> <jakefromstatefarm> Is there a way for me to program my vimrc in nim?
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2.1)
[08:36:08] <FromDiscord> <jakefromstatefarm> With nVim you can program your vimrc in other languages, and vim-hs (haskell) caught my eye, but I think nim's a better fit for this kind of job
[08:36:27] <FromDiscord> <jakefromstatefarm> I searched for `vimrc in nim`, and `vim-nim`, but didn't get any relevant results.
[08:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:36:32] <FromDiscord> <jakefromstatefarm> Does anyone know of something like this?
[08:38:36] <nrds> <06Prestige99> Didn't know that was possible, I just use viml
[08:38:43] <nrds> <06Prestige99> Would be nice though
[08:39:59] <FromDiscord> <jakefromstatefarm> So far I've been using vimscript/viml, but oh dear, it has bad performance and is getting really hard to maintain. Plus it's quirky AF for doing logic in.
[08:40:15] <FromDiscord> <jakefromstatefarm> My vimrc is gigantic though, so...
[08:40:40] <FromDiscord> <jakefromstatefarm> However, I wish to change that, by using a proper language for handling the added logic.
[08:41:05] <FromDiscord> <leorize> you can do it in nim to a certain extent
[08:41:18] <FromDiscord> <leorize> either you use the node.js integration and use `nim js`
[08:41:40] <FromDiscord> <leorize> or you write a msgpack interface for nim -\> nvim and use it instead
[08:42:43] <nrds> <06Prestige99> Hmm there's no way for a table's values to be of different types, is there
[08:43:03] <FromDiscord> <leorize> you can use union if you're brave enough \:p
[08:43:27] <FromDiscord> <leorize> shameless plug\: https://github.com/alaviss/union
[08:43:31] <nrds> <06Prestige99> Might need to make a custom implementation or something
[08:44:03] <FromDiscord> <jakefromstatefarm> Yeah, found that on DDG just as you sent that
[08:44:14] <FromDiscord> <jakefromstatefarm> Your pfp gave you away, lol \:)
[08:44:20] <FromDiscord> <leorize> \:p
[08:44:39] <FromDiscord> <jakefromstatefarm> I'm new to nim, what does that actually do?
[08:45:09] <arfy> huh, is that like a union in C?
[08:45:31] <FromDiscord> <Elegantbeef> No it's like a union in TS
[08:45:49] <FromDiscord> <Elegantbeef> It's practically a anonymous tagged union
[08:45:51] <FromDiscord> <jakefromstatefarm> After further reading, it looks like union, the programming concept, nothing unique to nim, though it is in nim
[08:46:08] <FromDiscord> <jakefromstatefarm> no longer too confused
[08:46:18] <FromDiscord> <Elegantbeef> Leorize's response was to prestige
[08:47:04] <FromDiscord> <jakefromstatefarm> Ohh, I see
[08:47:14] <FromDiscord> <jakefromstatefarm> 🤦‍♂️
[08:48:55] <nrds> <06Prestige99> Maybe I can do something weird like generate a new type at compile time.. hard to explain what I'm trying to achieve over text :P
[08:49:18] <FromDiscord> <Elegantbeef> That's what union does
[08:49:22] <FromDiscord> <Elegantbeef> Or sumtypes
[08:49:35] <FromDiscord> <jakefromstatefarm> [leorize](https://matrix.to/#/@leorize:envs.net)\: your comment about msgpack lead me to find exactly what I was after\: https://github.com/jangko/nvim_client , thanks!
[08:49:43] <nrds> <06Prestige99> I mean something else
[08:50:06] <FromDiscord> <Elegantbeef> Well examples paint a thousand words
[08:51:15] <nrds> <06Prestige99> Trying to emulate godot's AnimationPlayer basically. Want to add a "track" which is the change of a property at certain time intervals. So I'd provide the name of the property to change and an array of values with times to change
[08:51:25] <nrds> <06Prestige99> problem is each property could be a different type
[08:53:19] <FromDiscord> <leorize> I'm still not sure why does union not solve your problem
[08:54:10] <nrds> <06Prestige99> I'm not sure how it would, but I'm working on an example
[09:02:05] <nrds> <06Prestige99> https://play.nim-lang.org/#ix=3zdx crude example, still trying to figure out how I'd want to do this
[09:02:33] <nrds> <06Prestige99> But I'd prefer doing this more dynamically than creating union types of all properties of type Foo
[09:08:40] <FromDiscord> <leorize> just forget that types exist for a second then write your example I guess
[09:08:56] <FromDiscord> <Varriount> ^
[09:10:46] <nrds> <06Prestige99> Alright
[09:11:42] <FromDiscord> <Varriount> Prestige: If you mean you want to dynamically add fields to a type, as they are accessed by code, it's not possible.
[09:12:23] <FromDiscord> <leorize> it is possible if you're creative enough \:p
[09:12:24] <nrds> <06Prestige99> Trying to find a way to achieve my end goal basically
[09:12:33] <nrds> <06Prestige99> been racking my brain for a way to do this in nim
[09:12:44] <nrds> <06Prestige99> updating my example atm
[09:13:01] <FromDiscord> <leorize> so can you show the way its done in not nim then? \:p
[09:13:18] <FromDiscord> <Varriount> You can analyze a bunch of accesses in a given block of code, generate the type, and then give that code to the compiler to actually process.
[09:13:25] <nrds> <06Prestige99> Writing an example without types basically, give me a min
[09:13:27] <FromDiscord> <Elegantbeef> You want to attach arbitrary data to an object to be updated by a single call afaict
[09:13:38] <nrds> <06Prestige99> or if you're familiar with godot you might know what I mean
[09:13:59] <FromDiscord> <leorize> I think the gamedev people are sleeping atm
[09:14:14] <FromDiscord> <Elegantbeef> Fuck you leorize!
[09:14:53] <nrds> <06Prestige99> or maybe this might even help: https://i.imgur.com/fzCAQNd.png
[09:15:15] <nrds> <06Prestige99> picture of an anmation in godot - can add "tracks" per property, assign values at certain times
[09:15:21] <FromDiscord> <Elegantbeef> Could you not just use Nim's oop logic like that'd do probably underneath?
[09:15:25] <nrds> <06Prestige99> trying to replicate this system
[09:16:18] <FromDiscord> <Elegantbeef> Does it support more than just primitives?
[09:16:28] <FromDiscord> <leorize> I thought you're a compiler dev beef xd
[09:16:34] <FromDiscord> <Elegantbeef> Havent used godot's animator, have used unity's dont recall it supporting anything but primitives
[09:16:43] <FromDiscord> <Varriount> Prestige: By "track", you mean the property changes over time?
[09:17:10] <FromDiscord> <Elegantbeef> It's a keyframe system which can reference fields of objects
[09:17:11] <FromDiscord> <leorize> this looks like an issue to be described via a schema or something
[09:17:11] <FromDiscord> <Elegantbeef> So yes
[09:17:31] <nrds> <06Prestige99> Yes
[09:17:38] <FromDiscord> <Elegantbeef> You make an animation it changes a referenced value over time
[09:17:45] <nrds> <06Prestige99> ^
[09:18:05] <nrds> <06Prestige99> https://play.nim-lang.org/#ix=3zdz without types, another crude example.. but yeah that's the main idea
[09:18:11] <FromDiscord> <Elegantbeef> I'd say just use a Union for primitives
[09:18:14] <FromDiscord> <Varriount> Sounds like, rather than generating fields, you need to generate logic instead,
[09:18:35] <nrds> <06Prestige99> My main problem (I think) is, I don't know how I'd be storing this data
[09:18:45] <FromDiscord> <Elegantbeef> Alternatively copy your data to a `seq[byte]` then pass them to a function to use
[09:18:45] <nrds> <06Prestige99> the array of values and property names
[09:18:46] *** Joins: pro (~pro@user/pro)
[09:19:10] <FromDiscord> <leorize> a vtable impl probably work if you insist on having them statically typed
[09:19:20] <FromDiscord> <Elegantbeef> Well you need to store a loadable reference to the object and the field names you want to capture
[09:19:30] <FromDiscord> <leorize> otherwise `Table[string, union(<primitives here>)]`
[09:20:07] <FromDiscord> <Elegantbeef> Despite all outward appearances i'm indeed a gamedev 😛
[09:20:15] <nrds> <06Prestige99> probably would want it to work with tuples as well
[09:20:20] <nrds> <06Prestige99> but yeah a vtable would work I guess
[09:21:09] <FromDiscord> <Elegantbeef> Cant you read C++ prestige? go look how they do it 😛
[09:21:15] <nrds> <06Prestige99> Was hoping that, since these would be known at compile time, I could just create these on the type
[09:22:13] <FromDiscord> <leorize> your main issue would be to know "where" the fields are
[09:22:33] <FromDiscord> <Rika> Damn beef moving up in the hierarchy now a compiler dev
[09:22:48] <FromDiscord> <Elegantbeef> Apparently so
[09:22:56] <FromDiscord> <Elegantbeef> Soon i'll be running this taco stand
[09:22:56] <FromDiscord> <leorize> now this depends a lot on how your system is designed
[09:23:02] <nrds> <06Prestige99> wouldn't it just be like, this.`propertyName` = foo
[09:23:08] <nrds> <06Prestige99> via a macro
[09:23:19] <FromDiscord> <leorize> if whatever the handler for the keyframe you create can be generic, then you can create a type with introspection
[09:23:42] <FromDiscord> <leorize> then use it on the keyframe type to produce the handler at compile-time
[09:23:45] <FromDiscord> <leorize> something like that
[09:24:24] <FromDiscord> <Varriount> Prestige: Are all the fields for the type known at definition time?
[09:24:37] <nrds> <06Prestige99> Yea
[09:24:44] <FromDiscord> <leorize> for example uniontraits have this thing called `contains()` which can query at compile-time whether a type exist
[09:25:06] <FromDiscord> <leorize> https://github.com/alaviss/union/blob/main/union.nim#L480-L488 \<- then you can do stuff like this\: https://github.com/alaviss/union/blob/main/union.nim#L480-L488
[09:25:18] <FromDiscord> <leorize> I imagine you can create a similar system for your keyframe types
[09:25:46] <FromDiscord> <Varriount> Prestige: Is there a reason the `rotation` fields has to be an `int`, rather than, say, a `Keyframe[int]`?
[09:26:59] <nrds> <06Prestige99> well these are properties of like, any object, that someone would want to use
[09:26:59] <FromDiscord> <Varriount> And will the tracks for a single type be the same across all instances of that type, or could the tracks vary from instance to instance?
[09:27:32] <nrds> <06Prestige99> It'd be the same for every instance
[09:27:52] <nrds> <06Prestige99> e.g. we create a Player, and a player has a set of animation tracks for a walk animation
[09:28:06] <FromDiscord> <Varriount> So the track data is constant? It could theoretically be stored in a `const`?
[09:28:10] <nrds> <06Prestige99> We'd want to change properties like sprite frames and rotation over a period of time
[09:28:20] <nrds> <06Prestige99> Yeah I believe so
[09:29:15] <nrds> <06Prestige99> We should be able to generate a function that updates the animation tracks, at compile time
[09:29:18] <nrds> <06Prestige99> afaict
[09:30:08] <FromDiscord> <Elegantbeef> then what update should be is a `proc updateRot(foo: var Foo, time: float) = foo.rot = sampleData(time)` basically 😀
[09:30:32] <nrds> <06Prestige99> yeah
[09:31:09] <FromDiscord> <Varriount> A macro can generate constants. A macro could take a type, and generate a `const fieldName: Keyframe[fieldType] = ...`.
[09:31:19] <FromDiscord> <Varriount> for every field in the type.
[09:32:08] <FromDiscord> <Varriount> Or even copy the type definition, give it a new name, and replace each field with a keyframe type.
[09:33:40] <FromDiscord> <Elegantbeef> Given what he showed i think a macro that was used like `animate(foo.rot): [(10, 20), (40, 50)]` and emitted a proc + const seems sensible
[09:34:10] <nrds> <06Prestige99> yeah
[09:34:15] <FromDiscord> <Varriount> That would work too, although the procedure would need to be called somewhere.
[09:34:49] <FromDiscord> <Elegantbeef> You'd subscribe it to the macro seq and then have a `animate(Foo, time)`
[09:35:04] <FromDiscord> <Varriount> Prestige: You might be able to take advantage of the `{.global.}` pragma for procedure variables.
[09:35:06] <FromDiscord> <Elegantbeef> `animate` unpacks the macro cache  calling all the gensym'd animations
[09:35:32] <FromDiscord> <Varriount> ^
[09:36:01] <FromDiscord> <Elegantbeef> This way it's totally safe and not flooding your code base with visible proc defs
[09:36:11] <FromDiscord> <Elegantbeef> I can whip together an example if you need it 😉
[09:36:24] <nrds> <06Prestige99> please lol
[09:36:34] <FromDiscord> <Varriount> Elegantbeef: I'd be interested in your example too.
[09:36:37] <FromDiscord> <Elegantbeef> Ok!
[09:36:55] <FromDiscord> <Elegantbeef> cracks neck
[09:45:27] <FromDiscord> <Gumber> Can Nim not handle C++ 20 / latest?
[09:46:06] <FromDiscord> <Gumber> in terms of codegen
[09:46:27] <FromDiscord> <leorize> probably, C++ codegen is pretty neglected afaict
[09:46:48] <FromDiscord> <Gumber> okay - I'll just build the lib and statically bind to it rather than trying to compile it with Nim
[09:46:51] <FromDiscord> <Gumber> thanks leorize
[09:47:04] <FromDiscord> <Gumber> link to it not bind
[09:47:10] <FromDiscord> <Gumber> whatever blaming COVID brain fog
[09:47:41] <FromDiscord> <Gumber> I don't even know if that will work
[09:47:52] <FromDiscord> <Gumber> it probably wont...
[09:48:11] <FromDiscord> <leorize> I believe the -std flag is hardcoded in the compiler though
[09:48:19] <FromDiscord> <leorize> so you might have to patch it out first
[09:48:33] <FromDiscord> <Gumber> I mean I'm using vcc so I am passing /std:c++latest
[09:48:33] <FromDiscord> <Gumber> or 20
[09:48:40] <FromDiscord> <Gumber> then I get a bunch of stdlib errors
[09:48:55] <FromDiscord> <Gumber> like : `C:\Users\carte\nimcache\frag_r\stdlib_winlean.nim.cpp(98): error C2664: 'void symAddrALH9bdNwXEzg7MPq4PA9csvw(void ,NCSTRING)': cannot convert argument 2 from 'const char [10]' to 'NCSTRING'`
[09:49:08] <FromDiscord> <leorize> nim + vcc is never tested afaik
[09:49:15] <FromDiscord> <Gumber> I use it fairly frequently
[09:49:19] <FromDiscord> <Gumber> and haven't had too many problems
[09:49:23] <FromDiscord> <Gumber> but I never try modern C++ really
[09:49:38] <FromDiscord> <Gumber> I just have this one library that apparently has something that needs C++20 or latest
[09:50:05] <FromDiscord> <Gumber> and I was writing bindings for it - wanted to just compile all the C++ files using pragmas and do all the linking and stuff in the bindings themselves
[09:50:44] <FromDiscord> <Gumber> I'm not sure if I can compile with an older standard and then link a library compiled with a newer one
[09:50:53] <FromDiscord> <Gumber> but I'm going to try my damndest
[09:51:23] <FromDiscord> <Gumber> of course this library has like six other dependencies I already had to build
[09:51:44] <FromDiscord> <leorize> linking should not be an issue
[09:51:47] <FromDiscord> <Gumber> and then link and include header paths to etc... but it's fine haha, if it works I wont' complain
[09:51:54] <FromDiscord> <Gumber> okay, let's see what happens 😄
[09:52:00] <FromDiscord> <leorize> the issue is whether the header will compile under older standard
[09:52:18] <FromDiscord> <Gumber> yeah I see what you're getting at
[09:52:25] <FromDiscord> <Gumber> let's hope it's all in implementation files
[10:03:06] <FromDiscord> <Elegantbeef> Time! https://play.nim-lang.org/#ix=3zdG
[10:03:52] <FromDiscord> <Elegantbeef> Of course you can always skip the proc call since it's rather simple and can just be a statement
[10:04:05] <FromDiscord> <Elegantbeef> But it reduces the duplicate constants all over the file
[10:05:47] <FromDiscord> <Elegantbeef> @Varriount\: that's for you and prestige i guess 😛
[10:11:24] <FromDiscord> <Elegantbeef> Dont know if the way of selecting is ideal but you can always do  `proc lerp(a, b: SomeOrdinal, c: float): SomeOrdinal = if c == 1.0: b else: a`
[10:12:33] <FromDiscord> <Elegantbeef> Atleast that's good for enums 😛
[10:12:54] <FromDiscord> <Elegantbeef> If you're changing an enum state at given animation frames that'd be rather useful
[10:18:01] <FromDiscord> <Gumber> yup I'm boned
[10:18:12] <FromDiscord> <Gumber> fawkkkkkkkkkkkkkkkkkkkkkk
[10:18:25] <FromDiscord> <Gumber> this happens like every time I touch the cpp backend lol
[10:18:31] <FromDiscord> <Elegantbeef> Most people are happy when that happens \:D
[10:18:36] <FromDiscord> <Gumber> eh
[10:18:48] <FromDiscord> <Elegantbeef> Getting boned 😛
[10:18:52] <FromDiscord> <Gumber> oh I got the joke lol
[10:19:16] <FromDiscord> <Gumber> I'm just not really laughing at this point, like three or four days invested into this idea
[10:19:33] <FromDiscord> <Gumber> and now I need to reevalute the whole rendering situation
[10:19:41] <FromDiscord> <Gumber> and what I'm going to do
[10:19:47] <FromDiscord> <Gumber> or I need to port this library
[10:19:58] <FromDiscord> <Gumber> and learn C++20
[10:20:00] <FromDiscord> <Gumber> apparently
[10:20:16] <FromDiscord> <Rika> In reply to @Gumber "and learn C++20": H a v e f u n
[10:21:26] <FromDiscord> <Gumber> maybe I can just write a C interface for it?
[10:21:43] <FromDiscord> <Gumber> and bind to that?
[10:26:04] <FromDiscord> <Rika> You could
[10:26:37] <nrds> <06Prestige99> Thanks beef I'll look this over when I'm more awake later
[10:28:53] <FromDiscord> <Gumber> way less work than a full port, so I'll try that I guess
[10:42:05] <nrds> <06Prestige99> how did you learn all this craziness @Elegantbeef
[10:44:15] <FromDiscord> <Elegantbeef> I've written many macros
[10:44:16] <FromDiscord> <Elegantbeef> So do that 😛
[10:44:35] <nrds> <06Prestige99> Hah, alright
[10:44:35] <FromDiscord> <Elegantbeef> I've also worked on the compiler as you know mostly in semantic analysis which is like one step lower
[11:11:08] <nrds> <06Prestige99> I'll probably implement this into my engine tomorrow and show you how I've used it, should be fun
[11:13:48] <FromDiscord> <Elegantbeef> The only restriction is that the type has a `lerp` function implemented obviously
[11:13:58] <FromDiscord> <Elegantbeef> Which is basically your entire interface system
[11:15:10] <nrds> <06Prestige99> Yeah I was thinking of providing an easing function for each track so we could use whatever
[11:17:26] <FromDiscord> <Elegantbeef> Yea in that case you can replace the `sample` with your own sample or just override `lerp`
[11:18:17] <nrds> <06Prestige99> Hmm I also will need to track these animations (collections of "tracks") so I can swap between them
[11:18:38] <nrds> <06Prestige99> Walk vs jump animation for example
[11:18:58] <nrds> <06Prestige99> Should probably worry about this when I'm not dead tired lol
[11:20:09] <FromDiscord> <Elegantbeef> Well feel free to ping me if/when you need help
[11:20:17] <nrds> <06Prestige99> Thanks
[11:25:50] *** Joins: max22- (~maxime@2a01cb0883359800b8a33ca92ffd9155.ipv6.abo.wanadoo.fr)
[11:28:35] <FromDiscord> <Gumber> heyyyy that works
[11:28:39] <FromDiscord> <Gumber> back in business
[11:28:52] <FromDiscord> <Gumber> just another layer of bindings to create 😢
[11:44:02] *** Quits: max22- (~maxime@2a01cb0883359800b8a33ca92ffd9155.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[12:36:47] <FromDiscord> <Rika> bindings on bindings
[12:51:21] *** Joins: max22- (~maxime@2a01cb0883359800f35697ac373bfb77.ipv6.abo.wanadoo.fr)
[13:11:26] <arfy> is there something like this in nim? I have a list, and want to return the next item of the list with a function call. so something like an iterator but just in the regular flow of code.
[13:12:35] <FromDiscord> <Rika> closure iterators
[13:13:27] <arfy> aha
[13:13:30] <arfy> thanks
[13:21:53] <FromDiscord> <Gumber> finally
[13:22:16] <FromDiscord> <Gumber> have things compiling again with all the spirv-cross and shaderc libs linking correctly
[13:22:18] <FromDiscord> <Elegantbeef> Or CPS if you want to play with that 😛
[13:22:21] <FromDiscord> <Gumber> yay - can write my renderer now
[13:22:30] <FromDiscord> <Gumber> but it's time for sleepz, cya all tomorrow
[13:24:32] <FromDiscord> <cabboose> CPS always
[14:37:32] <NimEventer> New thread by Neodim: Direct I2C device access with pure Nim, see https://forum.nim-lang.org/t/8437
[15:17:34] *** Quits: pro (~pro@user/pro) (Quit: WeeChat 3.2)
[15:51:13] *** Quits: pch (~pch@66.49.131.33) (Remote host closed the connection)
[16:27:35] *** Quits: max22- (~maxime@2a01cb0883359800f35697ac373bfb77.ipv6.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2.1)
[16:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:36:50] *** Joins: pch (~pch@66.49.131.33)
[17:18:38] *** Joins: max22- (~maxime@2a01cb0883359800101dc8ab48a7971b.ipv6.abo.wanadoo.fr)
[17:20:29] *** Joins: arkurious (~arkurious@user/arkurious)
[18:07:47] *** emery is now known as ehmry
[18:37:47] <FromDiscord> <Smarc> How would I be able to play just a small portion of a .ogg file using the BASS library? I am able to play a whole file already
[18:38:20] <FromDiscord> <Smarc> sent a code paste, see https://play.nim-lang.org/#ix=3zfl
[18:47:27] <FromDiscord> <Rika> that should be in the bass documentation
[18:49:33] <FromDiscord> <Smarc> Tried to look it up there, but could not find anything. I was hoping I'd find someone with expertise :)
[18:56:54] <FromDiscord> <Rika> Not a lot of people here know bass
[18:59:33] <FromDiscord> <Smarc> I mean.. Is there another, more used audio library that is capable of playing (parts of) .ogg files?
[19:03:40] <FromDiscord> <fae> treeform wrote a nice sound lib https://github.com/treeform/slappy
[19:04:02] <FromDiscord> <fae> if you're okay with openal
[19:04:52] <Amun-Ra> how about libogg?
[19:06:52] <FromDiscord> <fae> <https://github.com/treeform/slappy#proc-playback>
[19:07:01] <FromDiscord> <fae> set time offset in sec
[19:17:45] <FromDiscord> <dain> if I call a `func` (no side effects) and I discard the result, will the compiler just delete it?
[19:17:50] <FromDiscord> <dain> since it won't affect anything
[19:17:57] <FromDiscord> <dain> (edit) "discard" => "`discard`"
[19:18:49] <FromDiscord> <Rika> no
[19:18:58] <FromDiscord> <Rika> i dont think that kind of optimisation is in the compiler
[19:19:07] <FromDiscord> <Rika> also its not a guarantee either
[19:19:11] <FromDiscord> <Rika> you can fool effects tracking
[19:19:30] <FromDiscord> <Rika> of course its not recommended to do so
[19:30:13] <FromDiscord> <Smarc> I can't get slappy to run the README example ..
[19:33:15] <FromDiscord> <Smarc> sent a code paste, see https://play.nim-lang.org/#ix=3zfP
[19:40:20] <FromDiscord> <Smarc> Wouldn't that mean that the actual package is incorrect?
[19:40:59] <FromDiscord> <Rika> well whats the full error?
[19:41:59] <FromDiscord> <Smarc> sent a code paste, see https://play.nim-lang.org/#ix=3zfX
[19:42:06] <FromDiscord> <Smarc> missing a 's' at the beginning
[19:47:16] <FromDiscord> <frankzig> how can i create a Seq ensuring that it has atleast space for N items and not need realloacation?
[19:52:23] <FromDiscord> <pietroppeter> https://nim-lang.org/docs/system.html#newSeqOfCap,Natural
[20:05:33] <FromDiscord> <frankzig> thank you
[21:34:36] *** Joins: al1ranger (~al1ranger@182.57.160.216)
[21:47:44] *** Quits: al1ranger (~al1ranger@182.57.160.216) (Quit: Leaving)
[21:54:07] *** Quits: neurocyte0 (~neurocyte@user/neurocyte) (Ping timeout: 252 seconds)
[22:23:24] <FromDiscord> <dain> In reply to @Rika "i dont think that": what if it's just `discard foo`
[22:23:28] <FromDiscord> <dain> where `foo` is an ident
[22:23:32] <FromDiscord> <dain> is that just a noop
[22:24:20] *** Joins: federico3[m] (~federicoc@2001:470:69fc:105::fb07)
[22:34:07] <FromDiscord> <Smarc> I just can't get it working playing just a small sample of a .ogg file, whether using BASS or slappy.. Is anyone inclined to help a newbie learning some library stuff?
[22:36:13] <FromDiscord> <enthus1ast> @Smarc\:  i've used "sound" for this\: https://github.com/yglukhov/sound.git
[22:36:52] <FromDiscord> <enthus1ast> https://github.com/enthus1ast/trainingThing/blob/3d8872b4ba4876a4cb5eb1b35cfc639eb40c14f7/src/training.nim#L64↵↵https://github.com/enthus1ast/trainingThing/blob/3d8872b4ba4876a4cb5eb1b35cfc639eb40c14f7/src/training.nim#L128
[22:39:03] <FromDiscord> <enthus1ast> but if you want to just play a part of an audio file, i think you need another module
[22:39:27] <FromDiscord> <enthus1ast> maybe have a look how the  various nim game engines does it
[22:42:18] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[22:43:16] *** Joins: xet7 (~xet7@user/xet7)
[22:49:17] <FromDiscord> <Gumber> Anyone know how to represent a `std::vector` in `C`?
[22:49:24] <FromDiscord> <Gumber> I'm writing a C interface for a C++ API
[22:49:42] <FromDiscord> <Gumber> I know I need the pointer and the number of elements to call `std::vector.assign()`
[22:49:51] <FromDiscord> <Gumber> but I'm not sure what type I should use on the C size to store the number of elements
[22:50:30] *** Quits: max22- (~maxime@2a01cb0883359800101dc8ab48a7971b.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[22:50:52] <FromDiscord> <Gumber> actually I guess it doesn't matter
[22:51:00] <FromDiscord> <Gumber> thinking about it more I don't need them to be laid out the same in memory - nevermind
[22:57:09] *** Joins: luis_ (~luis@50-242-35-142-static.hfc.comcastbusiness.net)
[23:00:09] <FromDiscord> <deech> sent a code paste, see https://play.nim-lang.org/#ix=3zgU
[23:01:32] <FromDiscord> <j-james> Why do `toHex(string)` and `toHex(int)` return different values?
[23:02:01] <FromDiscord> <Yardanico> In reply to @j-james "Why do `toHex(string)` and": because toHex called on a string returns the hex representation of the bytes in the string
[23:02:10] <FromDiscord> <Yardanico> and toHex int returns the hex representation of the integer itself
[23:02:18] <FromDiscord> <Yardanico> string representation is different from binary representation obviously
[23:02:26] <FromDiscord> <deech> In reply to @deech "Any thoughts on allowing": Oh wait you can already do that with custom annotations, sorry.
[23:02:52] <FromDiscord> <Yardanico> In reply to @j-james "Why do `toHex(string)` and": you can read the corresponding docs:↵https://nim-lang.org/docs/strutils.html#toHex%2Cstring↵https://nim-lang.org/docs/strutils.html#toHex%2CT
[23:03:57] <FromDiscord> <j-james> Ah, makes sense
[23:04:26] <FromDiscord> <Gumber> hmm
[23:05:03] <FromDiscord> <Gumber> okay so constructing the instance of the C++ class to pass to the C++ code from my C layer is no sweat
[23:05:13] <FromDiscord> <Lefl> sent a code paste, see https://play.nim-lang.org/#ix=3zgV
[23:05:22] <FromDiscord> <Gumber> but now I have a C++ class instance
[23:05:27] <FromDiscord> <Lefl> Is there any way I can tell nim to just use the property of the object instead of trying to use the proc?
[23:05:28] <FromDiscord> <Gumber> and I need to map it to this C struct
[23:05:35] <FromDiscord> <Gumber> but return a pointer
[23:05:40] <FromDiscord> <Gumber> and the C++ object is already allocated....
[23:05:57] <FromDiscord> <Yardanico> In reply to @Lefl "Is there any way": can you show the definition of `Sensor` object?
[23:06:06] *** Quits: def- (~def-@static.238.114.9.176.clients.your-server.de) (Quit: -)
[23:06:11] <FromDiscord> <Gumber> `object.name()`?
[23:06:16] *** Joins: def- (~def-@static.238.114.9.176.clients.your-server.de)
[23:06:16] <FromDiscord> <Lefl> Oh god I'm dumb
[23:07:03] <FromDiscord> <Lefl> In reply to @Gumber "`object.name()`?": no, I'm trying to use a property.↵But the issue is that I just now realized that I'm using the wrong object
[23:07:09] <FromDiscord> <Gumber> oh
[23:07:12] <FromDiscord> <Lefl> haha
[23:07:29] <FromDiscord> <j-james> In reply to @Yardanico "you can read the": How would you represent a very large integer?
[23:07:34] <FromDiscord> <Yardanico> In reply to @j-james "How would you represent": wdym?
[23:08:01] <FromDiscord> <Yardanico> if you want arbitrary-length integer, then you should get the bytes of it with whatever bignum library you're using I guess
[23:08:12] <FromDiscord> <j-james> Something larger than the `int64` type
[23:08:16] <FromDiscord> <j-james> I see, thanks
[23:11:40] <FromDiscord> <Gumber> scratch my question I'm dumb
[23:17:28] *** Joins: max22- (~maxime@2a01cb08833598007ff170d7dad3fd31.ipv6.abo.wanadoo.fr)
[23:22:38] *** Joins: neurocyte01 (~neurocyte@45.93.111.147)
[23:22:38] *** Quits: neurocyte01 (~neurocyte@45.93.111.147) (Changing host)
[23:22:38] *** Joins: neurocyte01 (~neurocyte@user/neurocyte)
[23:23:14] <FromDiscord> <Goel> `var colors: seq[Rgba]` and  `var colors: newSeq[Rgba]()` is exactly the same?
[23:25:43] <FromDiscord> <Yardanico> In reply to @Goel "`var colors: seq[Rgba]` and": no, the latter won't compile
[23:26:01] <FromDiscord> <Yardanico> but if you meant `var colors = newSeq[Rgba]()` in the second example, then yes, they're basically the same nowadays
[23:26:10] <FromDiscord> <Yardanico> as sequences in Nim are initialized by default nowadays
[23:27:47] <FromDiscord> <Goel> Yes that was a typo, i meant with `=` since i was reading that in an old post on the Nim forum. Good to know
[23:27:52] <FromDiscord> <Yardanico> although if you know how much elements you will need to add to your sequence you can preallocate the sequence by `newSeqOfCap[Rgba](size)`
[23:28:24] <FromDiscord> <Goel> No i don't
[23:29:41] <FromDiscord> <Yardanico> hmm? aren't you working with already parsed PNG files AFAIK?
[23:29:48] <FromDiscord> <Yardanico> so I thought you'd have the total number of pixels already
[23:33:34] <FromDiscord> <Goel> I am checking all pixels one by one for their color, and add each unique color to a seq. I was think to use one proc to automatically check if for example "value" is one of the item of the seq, but i can't do that because i already subdivided each of the raw bytes of the Image into a `rgba` format that is a tuple. I don't think i can check if a tuple is inside a seq of tuples? Or maybe yes, i haven't tried
[23:42:53] *** Quits: ozzz (~oz@46.49.41.80) (Read error: Connection reset by peer)
[23:45:47] *** Joins: ozzz (~oz@46.49.41.80)
[23:47:55] *** Quits: ozzz (~oz@46.49.41.80) (Read error: Connection reset by peer)
[23:51:14] *** Joins: ozzz (~oz@46.49.41.80)
[23:57:30] <FromDiscord> <auxym> anyone have an idea exactly what is the difference between `--os:any` and `--os:standalone`?
[23:58:06] *** Quits: ozzz (~oz@46.49.41.80) (Read error: Connection reset by peer)
[23:58:27] <FromDiscord> <Yardanico> In reply to @auxym "anyone have an idea": the original PR adding os:any is https://github.com/nim-lang/Nim/pull/13088
[23:58:42] <FromDiscord> <Yardanico> nowadays in most cases you should use os:any instead of os:standalone
[23:59:47] <FromDiscord> <auxym> thanks
[23:59:59] <FromDiscord> <Yardanico> there was more info about it, I think on the forum, lemme try to find it
