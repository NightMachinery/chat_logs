[00:02:17] *** Joins: Betal (~Betal@user/betal)
[00:03:43] *** Quits: random-nick (~random-ni@87.116.180.220) (Quit: quit)
[00:03:58] *** Joins: random-nick (~random-ni@87.116.165.83)
[00:03:59] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[00:05:00] *** Joins: meator (~meator@user/meator)
[00:06:13] *** Joins: Viewday11 (~Viewday@user/viewday)
[00:07:12] <pragma-> https://www.engineeredarts.co.uk/robot/ameca/
[00:07:16] <candide> Title of pragma-'s link: Ameca - Engineered Arts
[00:08:22] *** Joins: vysn (~vysn@user/vysn)
[00:08:37] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 252 seconds)
[00:09:18] * pragma- stares at https://player.vimeo.com/video/651929733
[00:09:19] <candide> Title of pragma-'s link: Ameca Teaser from Engineered Arts on Vimeo
[00:13:48] <bionade24> Is there are reasons except readability/style why C programmers put all variable declarations at the beginning of a funtion?
[00:13:57] <bionade24> s/funtion/function/
[00:14:22] <floatcomplex> bionade24: it was required in c89
[00:14:32] <pragma-> Historically C required declarations to be at the top of a block (not necessary a function). Some people assumed that meant function, rather than block, so they stuffed everything there.
[00:14:38] *** Quits: terminalpusher (~terminalp@2a01:586:a4a5:1:b882:42b4:f44e:9996) (Remote host closed the connection)
[00:14:42] <floatcomplex> bionade24: some people still do it for aesthetic reasons, but it's incompatible with const-correctness and i would prefer to have the latter
[00:14:55] <floatcomplex> also what pragma- said
[00:15:10] *** Joins: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[00:15:22] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[00:15:35] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[00:16:15] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: Goodbye)
[00:16:31] <floatcomplex> tl dr: there are reasons NOT to do it, and newer revisions of the c standard make that possible
[00:16:32] <pragma-> It was always possible to introduce a new block just about anywhere, though. 
[00:16:43] <floatcomplex> sure, but it wasn't possible to use blocks to get to const correctness
[00:16:55] *** Quits: |darc|- (darc@darcserv.net) (Quit: later)
[00:16:57] *** flooded is now known as _flood
[00:17:22] *** Joins: |darc| (darc@darcserv.net)
[00:17:31] *** Quits: |darc| (darc@darcserv.net) (Remote host closed the connection)
[00:17:53] *** Joins: |darc| (darc@darcserv.net)
[00:18:03] <pragma-> In practice though, I rarely see people create blocks willynilly for their declarations. It's something I've done in the past. But since C99 (c. 1999) this hasn't been necessary.
[00:18:30] <pragma-> Aside, "willynilly" is a fine word.
[00:18:55] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[00:20:48] <apotheon> What about lollygagging, pussyfooting, and dilly-dallying?
[00:22:07] <bionade24> floatcomplex: pragma-: Thx. When I have a pointer to a struct with a var which is a pointer in it, why do I have to make the struct a double pointer when accessing it? E.g. &pointer_to_struct->pointer  instead of pointer_to_struct->not_a_pointer
[00:22:15] <apotheon> pragma-: I'm curious about your take on these terms.
[00:22:44] <floatcomplex> bionade24: need more context. you may be doing something weird
[00:23:00] <pragma-> apotheon: "Pussyfooting" conjures images in my mind that are probably best left unsaid.
[00:23:09] <floatcomplex> pervert
[00:23:11] *** Joins: cart_man (~rynot@host-78-144-121-71.as13285.net)
[00:23:24] <floatcomplex> apotheon: lollygagging is a fine and useful word
[00:24:12] <bionade24> floatcomplex: Why the "&" before the "item"? https://gitlab.freedesktop.org/drm/igt-gpu-tools/-/blob/igt-gpu-tools-1.26/tools/intel_gpu_top.c#L1419
[00:24:33] <floatcomplex> oh this code again
[00:24:46] <floatcomplex> i cannot even begin to speculate, and you should probably not learn c by reading this code
[00:24:56] *** Joins: |darc|- (darc@darcserv.net)
[00:24:56] *** Quits: |darc| (darc@darcserv.net) (Killed (NickServ (GHOST command used by |darc|-)))
[00:25:08] *** Quits: |darc|- (darc@darcserv.net) (Remote host closed the connection)
[00:25:25] *** Quits: kuber (~kuber@97-126-3-32.tukw.qwest.net) (Quit: leaving)
[00:25:53] *** Joins: |darc| (darc@darcserv.net)
[00:26:49] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[00:30:37] *** Quits: ARoxdale (~ARoxdale@84.203.26.40) (Ping timeout: 252 seconds)
[00:31:05] <sham1> Well it clearly wants to get the pointer to the val of pmu which itself is in item
[00:31:44] <sham1> Could be a weirdly designed API
[00:31:53] *** Quits: Akuli (~Akuli@82-203-160-219.bb.dnainternet.fi) (Quit: Akuli)
[00:32:06] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[00:32:38] <bionade24> sham1: Thx
[00:32:54] <bionade24> sham1: The code is weird overall
[00:33:43] <nomagno> It wants a pointer to a value
[00:33:58] <bionade24> sham1: Some parts clearly indicate fast additions without refactoring. But there isn't a better doc on how to get at the value.
[00:34:10] <nomagno> The function this is called from clearly takes a pointer to a struct, and that struct contains a pointer to another struct, that contains a valur
[00:34:34] <bionade24> To be fair to intel, they have a new much nicer C API for their GPUs now.
[00:34:36] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[00:35:01] *** Quits: imp (~imp@192-141-191-227.alternativaip.net.br) (Ping timeout: 252 seconds)
[00:35:09] <nomagno> It makes sense in many situations to do something like this.
[00:35:28] *** Joins: imp (~imp@192-141-191-227.alternativaip.net.br)
[00:35:38] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[00:35:43] <nomagno> But its all mainly edge case conditions where a struct needs weird structuring, and contains a value that another function need
[00:35:53] <nomagno> Oftentimes you can definitely redesign the API
[00:40:38] *** Joins: mrig (~mrig@user/mrig)
[00:43:58] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[00:45:05] *** Joins: dohtem (uid524096@user/dohtem)
[00:46:40] *** Quits: jess (~jess@libera/staff/jess) ()
[00:49:51] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[00:50:25] *** Quits: monkey_ (~user@181.114.17.106) (Ping timeout: 252 seconds)
[00:53:27] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[00:54:11] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[00:58:21] *** Joins: monkey_ (~user@181.114.17.106)
[00:58:43] *** Joins: PortableDave (~portabled@14-201-65-57.static.tpgi.com.au)
[01:00:12] *** Joins: ian| (~ian|@cpe-104-228-101-152.stny.res.rr.com)
[01:01:00] <ian|> what does a pointer to this look like? `void var_name(xcb_generic_event_t*);`
[01:02:59] <Kit> when in doubt use void*
[01:03:13] <Kit> i think
[01:03:16] *** Quits: Narrat (~omnius@p200300df5f14e29206ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[01:03:27] *** Joins: Hashida (~DaSH@ro2.flokinet.is)
[01:03:28] <ian|> it's for an function argument
[01:03:42] <Kit> wait
[01:03:59] <Kit> do you want a function pointer
[01:04:16] <Kit> a pointer to a func
[01:04:19] <riv> void (*var_name)(xcb_generic_event_t*); I think
[01:04:19] <ian|> i have a function where i want it to take as the only parameter a function pointer or lambda (in C++)
[01:04:40] <ian|> yep that's it
[01:05:12] *** Joins: vimart (~vimart@239.218-30-62.static.virginmediabusiness.co.uk)
[01:05:51] *** Quits: Hashida (~DaSH@ro2.flokinet.is) (Remote host closed the connection)
[01:06:19] *** Joins: Hashida (~DaSH@ro2.flokinet.is)
[01:06:33] *** Quits: Itaru (~DaSH@ro2.flokinet.is) (Ping timeout: 252 seconds)
[01:07:04] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Remote host closed the connection)
[01:07:47] *** Quits: constxd (~brad@192.75.101.164) (Ping timeout: 256 seconds)
[01:08:29] *** Joins: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[01:10:52] *** Quits: Hashida (~DaSH@ro2.flokinet.is) (Client Quit)
[01:13:53] *** Joins: Itaru (~DaSH@ro2.flokinet.is)
[01:16:13] *** Quits: vimart (~vimart@239.218-30-62.static.virginmediabusiness.co.uk) (Quit: WeeChat 2.8)
[01:17:32] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[01:22:26] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[01:22:31] *** Quits: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Quit: Leaving)
[01:27:19] *** Joins: Inline (~Inline@aftr-37-201-241-35.unity-media.net)
[01:28:42] *** Quits: ian| (~ian|@cpe-104-228-101-152.stny.res.rr.com) (Quit: Client closed)
[01:30:06] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[01:34:09] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Remote host closed the connection)
[01:34:45] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[01:38:38] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[01:40:34] *** Joins: seninha (~seninha@user/seninha)
[01:44:32] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[01:46:20] *** Quits: Burgundy (~yomon@79.115.213.171) (Ping timeout: 252 seconds)
[01:47:52] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[01:48:08] *** Quits: bdt (~bdt@2a01:799:39e:7d00:e65f:1ff:fe08:8a88) (Ping timeout: 268 seconds)
[01:49:55] *** Joins: bdt (~bdt@2a01:799:39b:9500:e65f:1ff:fe08:8a88)
[01:54:13] *** Quits: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com) (Ping timeout: 252 seconds)
[01:54:37] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: Lost terminal)
[01:54:53] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[01:57:07] *** Quits: lightningwright (~lightning@user/lightningwright) (Quit: Leaving)
[01:57:31] *** Quits: Itaru (~DaSH@ro2.flokinet.is) (Ping timeout: 252 seconds)
[01:58:04] *** Joins: Itaru (~DaSH@ro2.flokinet.is)
[01:59:21] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[02:01:06] *** Joins: BSaboia (~bsaboia@177.37.198.35)
[02:01:58] *** Quits: pinheadmz_ (~pinheadmz@hns-contributor.dev) (Quit: ZNC 1.8.2+deb1+bionic2 - https://znc.in)
[02:03:23] *** Joins: pinheadmz (~pinheadmz@hns-contributor.dev)
[02:05:02] *** Quits: bdt (~bdt@2a01:799:39b:9500:e65f:1ff:fe08:8a88) (Ping timeout: 252 seconds)
[02:05:48] *** Quits: BUSY (~BUSY@user/busy) (Remote host closed the connection)
[02:06:17] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[02:06:19] *** Quits: monkey_ (~user@181.114.17.106) (Ping timeout: 252 seconds)
[02:07:15] *** Joins: bdt (~bdt@155.51-174-24.customer.lyse.net)
[02:10:21] *** Quits: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[02:18:21] *** Parts: tonitch (~tonitch@user/tonitch) ()
[02:20:20] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[02:20:49] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:21:33] *** Joins: monkey_ (~user@181.114.17.106)
[02:21:51] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[02:25:25] *** Quits: Itaru (~DaSH@ro2.flokinet.is) (Remote host closed the connection)
[02:26:51] *** Quits: PortableDave (~portabled@14-201-65-57.static.tpgi.com.au) (Ping timeout: 252 seconds)
[02:27:49] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[02:28:43] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[02:30:59] *** Quits: monkey_ (~user@181.114.17.106) (Remote host closed the connection)
[02:31:15] *** Quits: strajder (~strajder@user/strajder) (Quit: gtg)
[02:31:27] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[02:31:37] *** Quits: mahmutov (~mahmutov@5.176.7.214) (Ping timeout: 252 seconds)
[02:32:36] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Client Quit)
[02:32:38] *** Quits: pizdets_ (~pizdets@183.182.115.34) (Ping timeout: 250 seconds)
[02:32:54] *** Joins: malkrister[m] (~malkriste@2001:470:69fc:105::1:44f3)
[02:33:25] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[02:34:03] *** Joins: pizdets (~pizdets@183.182.111.226)
[02:34:34] <SrPx> Suppose I have a program that pops a value from a stack, and then reads a value from an array. That programs does that in a loop:
[02:34:51] <SrPx> for (int i = 0; i < 10000; ++i) { stack.pop(); array[i]; }
[02:35:30] <SrPx> my question is: will the array[i] accesses always be L1 cache misses, even though I'm accessing the array in order, because of the stack.pop() that comes before it?
[02:35:37] *** Quits: Biolunar (~bio@2a02:908:4b24:5000:ba27:ebff:fee0:75a) (Ping timeout: 268 seconds)
[02:35:46] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: caveman)
[02:36:10] *** Joins: PortableDave (~portabled@14-201-65-57.static.tpgi.com.au)
[02:36:32] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[02:37:18] *** Joins: Biolunar (~bio@2a02:908:4b24:5000:ba27:ebff:fee0:75a)
[02:39:41] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[02:40:33] *** Quits: chomwitt (~chomwitt@2a02:587:dc0d:6d00:12c3:7bff:fe6d:d374) (Ping timeout: 268 seconds)
[02:42:37] *** Joins: u0_a391 (~u0_a391@2600:380:5e26:855a:1311:35d3:6590:e7d6)
[02:43:32] <LangerJan> SrPx: I think this is way out of the scope of the C programming language to answer. Your hardware architecture and your compiler have way more influence on that question
[02:43:42] <SrPx> I see
[02:44:14] *** u0_a391 is now known as Kit_
[02:44:37] <Kit_> id recommend looking at a disassembly of your program to see what it does
[02:44:47] <dave0> godbolt it
[02:45:12] <twkm> c has no cache, l1 or otherwise.  so it is entirely platform dependent.
[02:46:06] *** Quits: Kit (~u0_a391@2603-6010-a141-6fa3-c4fd-876a-2db9-8bd1.res6.spectrum.com) (Ping timeout: 268 seconds)
[02:47:42] *** Kit_ is now known as Kit
[02:50:10] *** Joins: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com)
[02:50:29] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[02:51:03] *** Quits: alch (~alch@151.36.120.37) (Ping timeout: 252 seconds)
[02:51:28] *** Joins: soapsudsxx (~soapsudsx@209.221.40.158)
[02:52:48] *** Joins: alch (~alch@151.38.112.99)
[02:54:46] *** Joins: quartz (~quartz@user/quartz)
[03:01:19] *** Quits: pulse (~pulse@user/pulse) (Quit: Join a community of rain shamans at https://indiedevs.net/)
[03:01:41] *** Quits: superdupond (~Kev@2a01cb0400149f00b8fab7e94a382922.ipv6.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[03:02:00] *** Joins: CalimeroTeknik (~calimero@user/calimeroteknik)
[03:02:14] <CalimeroTeknik> hi, why does sizeof(0)[""] == 1?
[03:02:52] <CalimeroTeknik> is it sizeof char?
[03:03:51] <CalimeroTeknik> ah, old classic, sizeof is a keyword, nice
[03:03:52] <pragma-> iit is sizeof ""[0];
[03:04:01] <SrPx> fair enough
[03:04:29] <pragma-> which indeed is char
[03:04:36] <Bou> SrPx: is this about the Lambolt thing? I looked at that last week, it has a "reuse" or something that was always false
[03:04:51] *** Quits: dutch (~DutchIngr@user/dutch) (Quit: WeeChat 3.3)
[03:04:51] <SrPx> what do you mean? 
[03:04:54] <SrPx> but yes, it is
[03:05:23] <SrPx> I'm thinking in separating the heap in pages, but I need a better mental model of how the L1 cache works
[03:05:29] <SrPx> some aspects are confusing to me
[03:05:33] <SrPx> https://stackoverflow.com/questions/70207749/why-the-second-program-performs-better-even-though-it-should-have-considerably
[03:05:39] *** Quits: cthi (~cthi@097-082-138-151.res.spectrum.com) (Quit: leaving)
[03:09:02] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[03:10:55] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:13:38] <Kit-ten> what the fuck........... `cobfusc` is spitting out garbage anywhere an identifier is
[03:13:41] <Kit-ten> and not like
[03:13:46] <Kit-ten> random characters
[03:13:52] <Kit-ten> but like
[03:14:00] <Kit-ten> a bunch of unicode mess
[03:14:11] <Kit-ten> even when i turn off all obfuscations
[03:15:01] <Bou> SrPx: but that's about 400 MiB, that doesn't fit in L1, L2, or L3
[03:15:16] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:15:29] *** Quits: int (~int@0x4.cx) (Quit: see you :))
[03:17:42] *** Joins: int (~int@0x4.cx)
[03:19:49] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[03:21:21] *** Quits: dudek (~dudek@185.150.236.103) (Quit: Leaving)
[03:21:51] *** Quits: zyweo (~Svew@user/zyweo) (Ping timeout: 252 seconds)
[03:23:31] *** Joins: Lazenca (~lazenca@user/lazenca)
[03:30:02] *** Quits: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[03:32:29] *** Quits: random-nick (~random-ni@87.116.165.83) (Ping timeout: 252 seconds)
[03:33:08] *** Joins: dutch (~DutchIngr@user/dutch)
[03:33:55] *** Joins: kurahaupo (~kurahaupo@pa49-180-186-164.pa.nsw.optusnet.com.au)
[03:34:05] *** Joins: BUSY (~BUSY@user/busy)
[03:35:32] *** Quits: ckdCreations (~ckdCreati@147.55.133.138) (Read error: Connection reset by peer)
[03:35:47] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[03:36:49] *** Quits: geeknix (~pi@180.74.190.212) (Ping timeout: 256 seconds)
[03:36:54] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[03:37:35] *** Quits: Fairy (~Fairy@2001:464a:4992:0:78b9:dd77:b9a4:c92d) (Ping timeout: 250 seconds)
[03:39:05] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[03:42:54] *** Joins: Fairy (~Fairy@ti0004a400-3806.bb.online.no)
[03:43:52] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[03:46:16] <quartz> Hi. I want to create a new file and open it for writing. I have the name of the file and the extension, like page.html stored in a char pointer, but I'm not sure how to use fopen() to create the file using the name in the char pointer.
[03:46:38] <quartz> file = fopen(file_name, "w+");  does not seem to work if file_name is a char *
[03:46:41] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[03:47:22] <quartz> You'd think file = fopen(*file_name, "w+"); would work because it dereferences the char array...
[03:47:55] *** Joins: anyone (~filler@a4.inai.de)
[03:48:51] *** Quits: nostar (~nostar@68.51.221.108) (Quit: Leaving)
[03:49:18] *** Joins: geeknix (~pi@2001:e68:5432:d6a8:64df:806:e8d6:354c)
[03:50:53] <rcf> You're passing it a single character, not an array 
[03:51:22] <rcf> Arrays cannot be passed to functions. You can only pass a pointer to the first element. 
[03:51:33] *** Quits: reset (~reset@user/reset) (Quit: reset)
[03:51:34] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[03:53:22] <Bou> The first line should work though? Unless file_name isn't set properly
[03:54:30] <quartz> https://godbolt.org/z/oTeenerex 
[03:54:40] <quartz> I create file_name on line 36
[03:54:52] <quartz> rcf: Yeah I just remembered that just now.
[03:54:53] <rcf> Keep in mind that online services might not allow you to create files 
[03:55:50] <dave0> quartz: oh dear
[03:56:02] <quartz> dave0: What
[03:56:23] <dave0> quartz: strcpy(file_name, file_name + 1); is bad mojo
[03:56:28] <quartz> rcf: It's for an assignment. I'm followin gthese directions https://bpa.st/XT3A
[03:56:33] <quartz> Why?
[03:56:41] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[03:56:54] <dave0> quartz: just use   file_name + 1
[03:57:03] <caze> file_name++
[03:57:21] <quartz> Oh
[03:57:23] <dave0> quartz: strrchr can return null.. this code is fragile
[03:58:05] <caze> quartz: Can you read the compiler errors?
[03:58:18] <quartz> caze: Yeah I'm working through them now.
[03:58:20] *** Joins: Wulf (~Wulf@user/wulf)
[03:58:21] <dave0> quartz: const char *file_name = strrchr(path, '/'); if(file_name == NULL) { file_name = path; } else { file_name++; /* skip the slash */ } file = fopen(file_name, "w+"); if(file == NULL) perror("create error");
[03:59:21] *** Joins: chenqisu1 (~chenqisu1@183.217.200.156)
[03:59:45] <quartz> dave0: OK I'll try that. But you're fopen looks the same as mine and the compiler threw an error
[03:59:57] <dave0> oh i missed the error
[04:01:18] <caze> What was the error?
[04:01:45] *** Quits: Inline (~Inline@aftr-37-201-241-35.unity-media.net) (Ping timeout: 256 seconds)
[04:01:56] <dave0> quartz: put   FILE *file;   somewhere
[04:01:59] <quartz> error: 'file' undeclared (first use in this function)
[04:02:00] *** Joins: Inline (~Inline@aftr-37-201-241-35.unity-media.net)
[04:02:09] <caze> quartz: Do you understand what that means?
[04:02:21] <quartz> omg
[04:02:37] <quartz> Another embarassing mistake
[04:02:39] <quartz> Yeah
[04:02:44] <Bou> I wonder what gnu.org thinks of this assignment
[04:02:52] <quartz> Hahaha
[04:06:49] *** Joins: u0_a391 (~u0_a391@2600:380:5e26:855a:d6c5:be6:f25a:c9ce)
[04:10:30] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[04:10:35] *** Quits: Kit (~u0_a391@2600:380:5e26:855a:1311:35d3:6590:e7d6) (Ping timeout: 268 seconds)
[04:11:12] *** Quits: BSaboia (~bsaboia@177.37.198.35) (Quit: This computer has gone to sleep)
[04:12:25] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[04:12:41] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[04:14:24] <quartz> Sorry to ask, but at line 98, I write a while loop that uses recv() function to take in bytes from the file that I'm suppose to read from the server (such as a .html file). I'm not sure how I can skip past the header lines and the blank line and just start to fread() the actual file content if that makes sense.
[04:14:45] <quartz> I feel like my while loop does not do that, although it does check if the "200" is there in the first line :)
[04:14:47] <quartz> https://godbolt.org/z/aG31E3vWj
[04:14:58] <twkm> sounds like you need to parse what you receive.
[04:15:15] <twkm> ewww, godbolt.
[04:15:59] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[04:16:09] <quartz> Perhaps I'd need two while loops? One to begin receiving data from the server, check if it has the 200 in the first line, than check if the \r\n line is received, than do another while loop using recv?
[04:16:21] <quartz> What is wrong with godbolt?
[04:16:29] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 252 seconds)
[04:16:30] <kurahaupo> quartz: recv, read etc use file descriptors. fread etc use FILE*. It is generally a bad idea to mix these two idioms
[04:16:43] *** Joins: ferdna (~ferdna@user/ferdna)
[04:17:09] *** Quits: cart_man (~rynot@host-78-144-121-71.as13285.net) (Quit: Konversation terminated!)
[04:17:47] <kurahaupo> quartz: If you're using a regular TCP stream then you probably don't care about packet boundaries, so you should use read rather than recv
[04:19:16] <quartz> kurahaupo: OK
[04:19:31] <quartz> I only used recv() because my professor used it :)
[04:19:43] <quartz> But I know they are very similiar in their functionality
[04:20:51] *** u0_a391 is now known as Kit
[04:21:41] <kurahaupo> quartz: I would simply loop a byte at a time, updating a state machine, and calling recv or read to refill a buffer each time it is  "empty" (when the "next byte" pointer is at the end of the buffer)
[04:21:55] <dave0> twkm: less ewww since it properly supports no javascript now :-)
[04:23:15] <quartz> kurahaupo: What do you mean by a state machine?
[04:23:51] <kurahaupo> quartz: A key difference between read & recv is that recv will discard the remainder of a packet if it does not fit into the buffer you've provided. You almost never want that on a TCP stream
[04:24:30] <kurahaupo> A state machine is a general concept. Your CS course should cover it
[04:25:34] *** Joins: BSaboia (~bsaboia@177.37.198.35)
[04:26:16] <kurahaupo> For your purpose, you would create your own variables to track things like "have I seen the initial numeric response code" and "what is the accumulated numeric value so far'
[04:26:17] *** Joins: slidercrank (~slidercra@user/slidercrank)
[04:27:00] *** Joins: cart_man (~rynot@host-78-144-121-71.as13285.net)
[04:27:19] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[04:28:39] *** Joins: ARoxdale (~ARoxdale@84.203.26.40)
[04:28:39] <kurahaupo> It greatly helps to have a high-level state variable like "Is the next byte going to be in the HTTP response line, or the headers, or the body?" encoded as a 3-value enum
[04:29:17] <twkm> read uses recv with flags of 0 when the fd is a socket, so it really doesn't matter which you use so long as you don't want custom flags.
[04:29:28] <kurahaupo> The point of a state machine is that all the state is stored in variables, not encoded in "where in the program are we currently executing"
[04:30:02] <quartz> Hmmmm
[04:30:11] <quartz> I'm still trying to wrap my head around it.
[04:30:13] *** Quits: robert_ (~hellspawn@47.203.169.95) (Read error: Connection reset by peer)
[04:30:27] *** Parts: anyone (~filler@a4.inai.de) ()
[04:30:40] <quartz> I understand the flag needed for "have I seen the 200 marker in the first line"
[04:30:57] <kurahaupo> Another way is to implement your own equivalent of getchar
[04:31:18] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[04:32:16] <kurahaupo> quartz: The basic parsing is the same regardless of which response code is seen. What changes it is the http version after that code
[04:32:55] <kurahaupo> You might find the getchar approach easier to reason about
[04:34:45] <kurahaupo> the getchar approach involves hiding the whole "fetch more when the buffer is empty" inside a function that you call. You need to pass it a pointer to some context (the equivalent of a FILE*) so that it can track how many bytes are left in the buffer, which buffer to use, etc
[04:36:47] <kurahaupo> A naïve design would use the equivalent of getline instead of getchar, but in doing so it would leave unsolved the problem of handling very long lines
[04:37:57] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[04:39:13] *** Quits: cart_man (~rynot@host-78-144-121-71.as13285.net) (Quit: Konversation terminated!)
[04:39:44] <quartz> Uhhhh
[04:40:32] <quartz> Never learned about enums but I will look them up
[04:41:36] *** Quits: koo5_ (~quassel@51.140.155.227) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[04:42:03] *** night_wulfe_ is now known as night_wulfe
[04:42:34] *** Joins: koo5_ (~quassel@51.140.155.227)
[04:43:05] <quartz> kurahaupo: What good is the state machine when all messages from the server are in the same format? First line is HTTP/1.0 200 OK
[04:43:08] <Kit> enums are cool
[04:43:16] <quartz> second line is date... etc..
[04:43:59] <twkm> sometimes.
[04:44:29] <twkm> what it is good for is tracking whether you've found the end of the headers.
[04:44:40] <quartz> And why read in one byte at a time? The server response is going to be in text... so wouldn't 1 byte mean 1 char?
[04:44:51] <Kit> syntaxually enums are garbage, but theoretically theyre great
[04:45:19] <quartz> twkm: Yeah, but the line before the actual file contents is a "\r\n"
[04:45:38] <twkm> to simplify changing state.
[04:46:53] <twkm> but fine, read a block looking for \r\n keeping in mind that \r might be at the end of one and the \n at the beginning of the next.
[04:48:49] <quartz> Ahhh yeah I just think this won't be that complicated, but I suppose I'd better do it right
[04:49:29] <twkm> for a student "right" is often "do it both/all ways" (since you are learning).
[04:53:30] <twkm> this way has that pro but that con, that way avoids the prior con (its pro) but has a con of its own, ... then having learned all those you can judge which fits the current need "best".
[04:55:13] <quartz> I'm still trying to understand it haha
[04:55:34] <quartz> I mean it's just using a set of ints as flags to determine where I am in the file stream
[04:55:35] <quartz> basically
[04:59:26] <quartz> BRB
[05:01:33] *** Joins: Atque (~Atque@user/atque)
[05:02:11] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:03:41] <Kit-ten> i think i broke cobfusc
[05:04:53] *** Quits: quartz (~quartz@user/quartz) (Ping timeout: 252 seconds)
[05:05:06] <Kit-ten> https://0x0.st/-hex.png
[05:05:46] <Kit-ten> this is outputted with `cobfusc /tmp/pp.c -en -w 80 -o ./20-min.c`
[05:11:18] *** Joins: X-Scale (~ARM@83.223.227.126)
[05:11:38] <Kit-ten> does this have to do with the fact that im using /tmp/ files or...?
[05:11:53] <Kit-ten> because if i see /tmp/pp.c it looks fine
[05:13:41] *** Quits: premultiplied (~premultip@69.84.6.130) (Ping timeout: 252 seconds)
[05:14:25] <Kit-ten> huh
[05:14:46] <Kit-ten> if i change the paths to use the cwd it still gives me that garbage
[05:14:51] *** Quits: earnest (~earnest@user/earnestly) (Ping timeout: 256 seconds)
[05:15:41] <Kit-ten> every time i run it i get different patterns of garbage
[05:16:33] <Kit-ten> even if i tell cobfusc to do nothing???
[05:16:35] <Kit-ten> what???
[05:17:02] <Kit-ten> `cobfusc ./tmp/pp.c -o ./20-min.c` still does it
[05:17:35] *** Joins: quartz (~quartz@user/quartz)
[05:17:57] *** Joins: earnest (~earnest@user/earnestly)
[05:18:30] *** Quits: masterbuilder (~user@user/masterbuilder) (Remote host closed the connection)
[05:19:29] <fizzie> Are you sure that's not just working as intended, and it defaulting to random identifiers unless you set `-i no` explicitly? 
[05:19:48] <Kit-ten> well, its failing to compile
[05:20:32] <Kit-ten> yea if i add `-i no` it still does it
[05:25:31] <Kit-ten> > 304 packages can be upgraded
[05:25:31] <Kit-ten> oh shit, maybe thats it?
[05:27:05] <fizzie> Perhaps it's just a broken piece of garbage. I built cutils-1.6 from source to check, and it indeed obliterates all identifiers.
[05:28:24] *** Joins: premultiplied (~premultip@69.84.6.130)
[05:30:03] *** Quits: nun (~nun@178.115.236.156.static.drei.at) (Quit: ZNC - http://znc.in)
[05:31:33] *** Quits: relight (~relight@user/relight) (Ping timeout: 250 seconds)
[05:31:44] *** Joins: relight (~relight@user/relight)
[05:32:59] *** Quits: premultiplied (~premultip@69.84.6.130) (Ping timeout: 256 seconds)
[05:33:16] *** Joins: nun (~nun@178.115.236.156.static.drei.at)
[05:33:31] <Kit-ten> nope, upgraded and still afjkldjslkgfjdsklh
[05:33:42] <pragma-> Kit-ten: watch your language
[05:33:48] *** Joins: psyxopompos (~psyxopomp@user/psyxopompos)
[05:34:29] <Kit-ten> sorry
[05:34:41] <dave0> afjkldjslkgfjdsklh is NOT a valid scrabble word
[05:34:55] <pragma-> oh now you've got dave0 saying it!
[05:35:03] <Kit-ten> yea well neither is `Kit-ten` or `dave0`
[05:36:47] *** Quits: steve_ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 252 seconds)
[05:38:18] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[05:40:27] <ldericher> 'cobfusc' sounded interesting. Installed it, fed it with some source file … shouldn't the output be compilable?
[05:40:47] <Kit> yes
[05:40:51] <Kit> it should
[05:41:01] <ldericher> Well for me it does not
[05:41:09] <Kit> ya idk what is up
[05:41:11] *** Joins: kurahaupo_ (~kurahaupo@203-194-51-46.static.tpgi.com.au)
[05:41:11] <fizzie> Yeah. They're using flex wrong.
[05:41:17] <Kit> it used to work for me
[05:41:28] <fizzie> It's just broken. I fixed my own copy, FWIW.
[05:41:29] <Kit> idk why or when it stopped working
[05:42:08] <ldericher> ah well then … what's the practical use case anyway?
[05:42:17] <ldericher> I just thought the idea was fun
[05:42:23] <ldericher> testing compilers?
[05:42:24] <Kit> minification, obfusication
[05:42:26] <Kit> so like
[05:42:36] <Kit> i need it for a code guessing competition
[05:42:46] <Kit> i have a very distinct codong style
[05:42:51] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 245 seconds)
[05:42:57] <fizzie> It needs to be built with `YYTEXT_POINTER` defined, but for whatever reason the autoconf script isn't setting that.
[05:42:57] <Kit> and an obfuscator would cover that up
[05:43:16] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[05:43:23] <Kit> fizzie: but you see, i installed this via apt
[05:43:28] <fizzie> So it declares `extern char yytext[]` while the actual flex-generated lexer defines it `char *yytext`.
[05:43:35] <Kit> and this is fucking debiam
[05:43:38] <Kit> like
[05:43:40] <fizzie> Yeah, and I built it myself, and it had the exact same problem.
[05:43:47] *** Joins: kassle (~kassle@202.73.24.66)
[05:43:50] <Kit> isnt debian supposed to be like
[05:43:52] <fizzie> So whoever's packaging it isn't paying attention beyond "it seems to build".
[05:43:53] <Kit> super stable
[05:44:14] <fizzie> And nobody's actually using it for anything either, I imagine.
[05:44:19] *** Quits: kurahaupo (~kurahaupo@pa49-180-186-164.pa.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[05:44:43] <Kit> well
[05:44:46] <Kit> i am
[05:44:54] <dave0> i guess not even debian can fix bad c code
[05:45:00] <pragma-> not if debian has anything to say about it!
[05:45:00] <Kit> lol
[05:45:22] <Kit> pragma- why do i keep thinking youre a bot
[05:45:31] <pragma-> Kit: no such command 'why'
[05:45:34] <fizzie> Last news at https://tracker.debian.org/pkg/cutils is from 2017. "This package has been orphaned and needs a maintainer."
[05:45:35] <candide> Title of fizzie's link: cutils - Debian Package Tracker
[05:45:37] <Kit> lmfao
[05:45:46] <Kit> no offense to you, btw
[05:45:49] <Kit> just like
[05:46:05] <Kit> i keep thinking your a bot for some reason idk
[05:46:19] <Kit> fizzie: ah
[05:46:25] <fizzie> My guess would be, it's broken as part of some autoconf update, and nobody's noticed until now.
[05:46:35] <Kit> yep
[05:49:01] <fizzie> `CFLAGS='-DYYTEXT_POINTER=1' ./configure` gives me a working build, if you're interested in installing it that way. Not sure what's the designated way to do that in terms of building a .deb though.
[05:52:11] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Ping timeout: 252 seconds)
[05:52:11] *** Quits: bolovanos__ (~bolovanos@user/bolovanos) (Ping timeout: 252 seconds)
[05:52:24] *** Quits: malloy (~jimery@116.30.222.115) (Ping timeout: 250 seconds)
[05:53:29] *** Quits: nyah (~nyah@94.6.71.219) (Remote host closed the connection)
[05:54:22] *** Joins: malloy (~jimery@116.30.222.115)
[05:54:51] *** Quits: chenqisu1 (~chenqisu1@183.217.200.156) (Remote host closed the connection)
[05:55:25] *** Joins: ChromaCat248 (~ChromaCat@user/chromacat248)
[05:55:29] *** Quits: relight (~relight@user/relight) (Ping timeout: 252 seconds)
[05:55:55] *** Joins: relight (~relight@user/relight)
[06:00:30] *** gr33n7007h is now known as capsaicin
[06:00:35] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[06:00:49] *** capsaicin is now known as gr33n7007h
[06:03:07] *** Joins: premultiplied (~premultip@69.84.6.130)
[06:05:31] *** Joins: Portable1 (~portabled@14-201-65-57.static.tpgi.com.au)
[06:05:45] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 252 seconds)
[06:05:56] *** Quits: PortableDave (~portabled@14-201-65-57.static.tpgi.com.au) (Ping timeout: 252 seconds)
[06:08:45] *** Quits: premultiplied (~premultip@69.84.6.130) (Ping timeout: 256 seconds)
[06:18:41] *** Joins: rgrinberg (~textual@187.251.13.114)
[06:18:53] *** Quits: Inline (~Inline@aftr-37-201-241-35.unity-media.net) (Ping timeout: 256 seconds)
[06:30:21] *** Joins: kurahaupo (~kurahaupo@pa49-180-186-164.pa.nsw.optusnet.com.au)
[06:32:29] *** Quits: kurahaupo_ (~kurahaupo@203-194-51-46.static.tpgi.com.au) (Ping timeout: 256 seconds)
[06:33:26] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 252 seconds)
[06:34:06] *** Joins: premultiplied (~premultip@69.84.6.130)
[06:37:35] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[06:39:00] *** Quits: kurahaupo (~kurahaupo@pa49-180-186-164.pa.nsw.optusnet.com.au) (Read error: Connection reset by peer)
[06:39:13] *** Joins: kurahaupo (~kurahaupo@pa49-180-186-164.pa.nsw.optusnet.com.au)
[06:39:29] *** Quits: premultiplied (~premultip@69.84.6.130) (Ping timeout: 252 seconds)
[06:41:38] *** Joins: imm__ (~imm_@user/imm/x-3405860)
[06:44:23] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 256 seconds)
[06:45:18] *** Quits: rgrinberg (~textual@187.251.13.114) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:51:35] *** Quits: alch (~alch@151.38.112.99) (Ping timeout: 252 seconds)
[06:52:29] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:53:06] *** Joins: rgrinberg (~textual@187.251.13.114)
[06:53:09] *** Joins: alch (~alch@151.38.97.185)
[06:54:10] *** Joins: kurahaupo_ (~kurahaupo@ppp122-115.static.internode.on.net)
[06:54:50] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[06:57:05] *** Quits: earnest (~earnest@user/earnestly) (Ping timeout: 252 seconds)
[06:57:25] *** Quits: kurahaupo (~kurahaupo@pa49-180-186-164.pa.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[06:57:32] *** Joins: quartz (~quartz@user/quartz)
[06:58:17] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[07:06:19] *** Quits: rgrinberg (~textual@187.251.13.114) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:09:03] *** Joins: arandomcomrade (~arandomco@user/arandomcomrade)
[07:09:04] *** Joins: simon323 (~simon323@2409:8a34:468:83d0:80e5:1992:5e66:41ca)
[07:09:16] *** Joins: rgrinberg (~textual@187.251.13.114)
[07:10:52] *** Quits: rgrinberg (~textual@187.251.13.114) (Client Quit)
[07:11:42] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[07:11:45] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 252 seconds)
[07:16:43] *** Quits: highrate (~presonic@111-22-237-24.gci.net) (Remote host closed the connection)
[07:16:45] *** Quits: arandomcomrade (~arandomco@user/arandomcomrade) (Quit: Leaving)
[07:17:06] *** Joins: highrate (~presonic@111-22-237-24.gci.net)
[07:22:27] *** Quits: NEYi (~NEYi@109.251.216.38) (Quit: Leaving)
[07:24:41] *** Joins: coolchrome (~cool333@bzq-79-176-139-177.red.bezeqint.net)
[07:28:01] *** Quits: cool6502 (~cool333@bzq-79-176-139-177.red.bezeqint.net) (Ping timeout: 256 seconds)
[07:28:13] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:2817:596e:24d6:b4c0)
[07:28:57] <quartz> Hello. When I run the following code: https://godbolt.org/z/qTqvP8rYd I get the "fgets failed" error at line 102. I'm not sure why, because I believe I implemented the function correctly. I'm trying to simply "download" the contents of a file from a server.
[07:32:37] *** Quits: Fl0pFl1p (~FlipFlop@user/fl1pfl0p) (Ping timeout: 256 seconds)
[07:34:52] *** Joins: kdc (~kdc@196.211.197.159)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:06] *** Joins: homura (uid398348@user/homura)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:38:52] *** Joins: rgrinberg (~textual@187.251.13.114)
[07:40:29] *** Quits: ChromaCat248 (~ChromaCat@user/chromacat248) (Remote host closed the connection)
[07:41:14] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[07:41:52] *** Joins: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[07:43:35] *** Quits: rgrinberg (~textual@187.251.13.114) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:45:35] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[07:50:45] *** Quits: ARoxdale (~ARoxdale@84.203.26.40) (Ping timeout: 256 seconds)
[07:50:56] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[07:58:41] *** Quits: kurahaupo_ (~kurahaupo@ppp122-115.static.internode.on.net) (Ping timeout: 252 seconds)
[07:59:45] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[07:59:45] *** Quits: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu) (Ping timeout: 256 seconds)
[08:02:13] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[08:02:29] *** Joins: NEYi (~NEYi@109.251.216.38)
[08:05:44] <Wulf> quartz: Don't do that.
[08:06:07] <Wulf> quartz: HTTP is a complicated protocol. Use a proper HTTP client library like curl.
[08:06:20] *** Joins: premultiplied (~premultip@69.84.6.130)
[08:06:49] <quartz> Wulf: Sorry this is for an assignment :P
[08:07:13] <Wulf> quartz: what is, using stdio functions to read from a socket?
[08:07:35] <quartz> Wulf: Yes. These are the details: https://bpa.st/XT3A
[08:08:12] <quartz> I'm just not sure how to use fgets() and recv() and fread() together to do what I want
[08:09:16] <quartz> Like... recv() takes in bytes and stores it in a buffer.... but I'm not using it correctly here and I don't know how
[08:10:13] *** Joins: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net)
[08:10:15] <Wulf> quartz: don't mix recv with stdio functions!
[08:11:09] *** Quits: premultiplied (~premultip@69.84.6.130) (Ping timeout: 252 seconds)
[08:11:42] <quartz> Wulf: So use read()? I'm not sure whta else to do then, as I need either read() or recv()
[08:11:43] *** Quits: Charadon (~Charadon@155.138.164.183) (Remote host closed the connection)
[08:12:06] <Wulf> quartz: no, don't use read either.
[08:12:17] <quartz> So what am I suppose to do?
[08:12:19] <Wulf> quartz: use fgets and fread
[08:12:28] <Wulf> which is horrible, but is the assignment.
[08:12:41] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[08:13:06] *** Joins: Burgundy (~yomon@79.115.213.171)
[08:13:46] <Wulf> quartz: what will be the next assignment? "Find all security problems in your previous code and write exploits for them"?
[08:13:47] <quartz> Wulf: But I thought I needed to use recv() or read() after establishing a connection to the host
[08:13:58] <quartz> Wulf: Haha I hope no
[08:15:21] <quartz> How else am I suppose to receive from the host server without using one of those two functions?
[08:15:39] <Wulf> quartz: fgets and fread.
[08:15:45] <quartz> OK
[08:16:32] <Wulf> quartz: and for consistency, don't use send either. Instead use fprintf and fputs or similar.
[08:16:53] <Wulf> and fflush after all is written
[08:17:45] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 252 seconds)
[08:21:55] *** Quits: Portable1 (~portabled@14-201-65-57.static.tpgi.com.au) (Ping timeout: 256 seconds)
[08:23:11] <quartz> OK let me try that
[08:25:43] *** Quits: sunyour (~sunyour@129.226.182.99) (Quit: WeeChat 3.1)
[08:25:54] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: leaving)
[08:26:04] *** Joins: sunyour (~sunyour@129.226.182.99)
[08:26:27] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[08:29:13] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 256 seconds)
[08:32:05] <dave0> quartz: in your fdopen() call, you want  fdopen(sock, "r+")    so it is open for reading and writing
[08:32:57] <dave0> also check the result from fdopen..   if(descriptor == NULL) die("fdopen failed");
[08:32:58] <quartz> dave0: But I don't want to read anything in the file
[08:33:15] <dave0> quartz: that's not for the file, it's for the socket
[08:33:41] <quartz> Ohhh sorry didn't read that correctl
[08:34:05] <dave0> quartz: once a connection is established, you can read and write to the socket... so when you use fdopen (note: NOT fopen) tell it to read and write
[08:35:43] <quartz> dave0: OK
[08:36:22] <dave0> then you do     if(fwrite(get_req, sizeof(get_req), 1, descriptor) != 1) die("get_req send failed"); if(fwrite(header, sizeof(header), 1, descriptor) != 1) die("header send failed");
[08:36:44] <dave0> that sends the request
[08:37:06] <dave0> are they strings?
[08:37:29] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[08:37:43] <dave0> it looks like they're strings... use fputs
[08:37:52] <quartz> Yes these are all strings
[08:37:53] <dave0> less typing than fwrite
[08:38:30] <quartz> What is the difference?
[08:38:48] <dave0> if(fputs(get_req, descriptor) == EOF) die("get_req send failed"); if(fputs(header, descriptor) == EOF) die("header send failed"); if(fputs("\r\n", descriptor) == EOF) die("blank_line send failed");
[08:38:54] <dave0> less typing
[08:39:33] <quartz> dave0: Why can't I just use send?
[08:39:58] <dave0> because the assignment says use stdio?
[08:40:28] <dave0> besides... stdio and posix i/o doesn't mix well
[08:40:49] <dave0> you fdopen'ed the socket, so why not use stdio? it's easier
[08:40:59] <quartz> Jeez I need a break
[08:41:09] <quartz> OK I want to just finish this damn assignment already
[08:41:50] <dave0> you could even use   fprintf(descriptor, "%s%s\r\n", get_req, header);   to send the whole header in one line
[08:42:04] <dave0> isn't that easier than a jillion sends?
[08:42:35] *** Quits: coruja (~coruja@user/coruja) (Quit: ZNC 1.8.2 - https://znc.in)
[08:42:44] *** Joins: karakedi (~eAC53C340@user/karakedi)
[08:43:08] <quartz> Yes
[08:43:40] *** Quits: mad_enz (~mad_enz@cpe00508b114c3e-cm788df7e75290.cpe.net.fido.ca) (Remote host closed the connection)
[08:44:47] <quartz> OK let me try to fix things...
[08:46:49] *** Joins: nickorta12 (~nickorta1@174-28-167-187.albq.qwest.net)
[08:47:27] *** Joins: coruja (~coruja@user/coruja)
[08:49:41] <dave0> i think you have to fflush(descriptor); after you send the request but before you try to read a response
[08:52:37] <quartz> Why?
[08:53:08] *** Quits: gitargy (~gitargy@76.78.94.79) (Ping timeout: 252 seconds)
[08:53:28] <quartz> Ahhh this assignment was a bit weird.
[08:54:13] *** Quits: nickorta12 (~nickorta1@174-28-167-187.albq.qwest.net) (Ping timeout: 256 seconds)
[08:54:17] <dave0> you aren't allowed to read and then write, or write then read, without a seek or (i'm pretty sure) a flush
[08:54:25] <dave0> it's just a stdio rule
[08:54:40] <dave0> something you just gotta memorize
[08:54:50] <dave0> seek makes no sense on a socket, so i think fflush is enough
[08:56:24] <quartz> We literally never reviewed fflush, but OK
[08:56:35] <dave0> if you use fprintf to send the header, you can eliminate get_req, header, blank_line
[08:57:37] *** Joins: admal (~admal@gateway/tor-sasl/admal)
[08:58:23] <dave0> if(fprintf(descriptor, "GET %s HTTP/1.0\r\nHost: %s:%d\r\n\r\n", path, serverName, port) < 0) die("send http request failed");
[08:58:26] <dave0> brb
[08:58:32] <quartz> Oh yeah
[08:58:36] <quartz> Wow you're good at this
[08:58:43] <quartz> The code is so much more simple
[09:01:39] *** Joins: mad_enz (~mad_enz@cpe00508b114c3e-cm788df7e75290.cpe.net.fido.ca)
[09:05:20] *** Joins: Inline (~Inline@aftr-37-201-240-188.unity-media.net)
[09:05:28] *** Quits: Inline (~Inline@aftr-37-201-240-188.unity-media.net) (Remote host closed the connection)
[09:08:33] <dave0> after that do a fflush then read a line:     if(fflush(descriptor) != 0) perror("fflush error"); char buf[1000]; if(fgets(buf, sizeof(buf), descriptor) == NULL) die("read header failed"); if(strstr(buf, "200") == 0) { printf("malformed header: %s\n", buf); die("read error");
[09:08:54] <dave0> so you need the fflush because stdio rules, then the assignment says read the line and look for a "200"
[09:09:40] <dave0> you can code the part where it skips to a blank line
[09:10:54] <dave0> then you can read the web page and write to your file like:    int ch; while(ch = fgetc(descriptor), ch != EOF) { if(fputc(ch, file) == EOF) die("write to file error"); }
[09:11:36] <dave0> and then cleanup    if(fclose(file) != 0) die("close file failed"); if(fclose(descriptor) != 0) die("close socket failed");
[09:12:15] <dave0> fclose(descriptor) also closes sock, so you don't need close(sock)
[09:12:38] <dave0> hopefully everything will go smoothly
[09:12:51] <quartz> So you're saying this won't work? https://godbolt.org/z/KxPj615sb
[09:13:00] <quartz> I thought I had the while loop correct
[09:13:24] *** Joins: concrete-houses (~g@209.6.150.53)
[09:14:25] <dave0> not for the first line
[09:14:49] <dave0> the assignment says you have to read the first line and check for "200"
[09:16:08] <dave0> so use an   if(fgets(buf, sizeof(buf), descriptor) == NULL) die("error getting first line"); if(strstr(buf, "200") == NULL) { printf("%s", buf); die(""); }     now you might use a while loop to skip until a blank line      then use a loop to read the raw data and write it to your file
[09:16:42] <dave0> i just used a simple  fgetc/fputc   in a loop to read the file. you can write the code to skip to an empty line cos i'm lazy
[09:17:02] <dave0> but you only want to read the first line once, so no while for the first line of the response
[09:17:18] <quartz> Hmmm, OK let me try to implement this.
[09:25:19] *** Quits: rahl (~rahl@102.114.39.24) (Ping timeout: 256 seconds)
[09:26:48] *** Joins: rahl (~rahl@102.114.5.167)
[09:29:46] <quartz> dave0: Still there?
[09:29:59] *** Joins: Rounin (~david@84.212.130.215)
[09:30:12] <dave0> yup
[09:30:16] <dave0> sup?
[09:30:42] <quartz> Sorry to ask, but why do you use fgetc here?
[09:30:53] <dave0> just because it's simple
[09:31:06] <dave0> and it will work properly with binary (eg. a jpeg)
[09:32:01] <dave0> int c; while(c = fgetc(descriptor), c != EOF) if(fputc(c, file) == EOF) { perror("write error"); break; }
[09:32:10] <dave0> it's a very simple file copy
[09:32:32] <quartz> I wish I was as good as you guys in here lol
[09:33:11] <dave0> we're old and tired sigh
[09:33:14] <dave0> so old
[09:33:25] <quartz> No way.
[09:33:42] <quartz> Seriously?
[09:33:52] <dave0> yep
[09:33:58] <dave0> c has sucked the life from me
[09:34:12] <dave0> cats in the cradle with the silver spoon
[09:34:19] *** Joins: gco (~gco@2601:647:5a00:223:11e0:2996:dd48:558a)
[09:35:29] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[09:37:07] <quartz> Hahaha
[09:45:13] *** Joins: gitargy (~gitargy@76.78.94.79)
[09:45:59] <quartz> dave0: Thanks so much
[09:46:05] <quartz> I just have to fix a few things, and it works.
[09:46:21] <quartz> Amazing how it took you like a few min to do what took me several days hahaha
[09:46:36] <quartz> I didn't understand the difference between stdout functions and the other ones.
[09:46:39] <quartz> unix
[09:46:51] *** Quits: Moonspell (moon@194.87.139.59) (Ping timeout: 256 seconds)
[09:47:27] *** Joins: root____ (~root@157.245.144.252)
[09:48:43] *** Quits: gitargy (~gitargy@76.78.94.79) (Client Quit)
[09:48:55] <dave0> no worries mate!
[09:49:47] *** Joins: gitargy (~gitargy@76.78.94.79)
[09:50:11] *** Quits: gitargy (~gitargy@76.78.94.79) (Remote host closed the connection)
[09:50:52] *** Joins: Moonspell (moon@194.87.139.59)
[09:51:53] *** Joins: premultiplied (~premultip@69.84.6.130)
[09:52:42] *** Joins: gitargy (~gitargy@76.78.94.79)
[09:52:58] *** Quits: gitargy (~gitargy@76.78.94.79) (Remote host closed the connection)
[09:53:24] *** Joins: gitargy (~gitargy@76.78.94.79)
[09:56:45] *** Quits: premultiplied (~premultip@69.84.6.130) (Ping timeout: 252 seconds)
[09:57:26] *** Quits: gitargy (~gitargy@76.78.94.79) (Client Quit)
[09:58:04] *** Joins: chomwitt (~chomwitt@2a02:587:dc0d:6d00:12c3:7bff:fe6d:d374)
[09:58:45] *** Quits: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com) (Ping timeout: 256 seconds)
[10:02:18] *** Joins: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com)
[10:03:17] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 256 seconds)
[10:03:17] *** Joins: scoobydoob (~scooby@user/scoobydoo)
[10:03:19] *** scoobydoob is now known as scoobydoo
[10:04:07] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[10:08:07] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[10:08:33] *** Quits: Satin (uid193953@id-193953.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[10:09:28] *** Joins: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr)
[10:17:18] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[10:18:49] *** Joins: rgrinberg (~textual@187.251.13.114)
[10:25:48] *** Quits: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net) (Read error: Connection reset by peer)
[10:26:03] *** Joins: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net)
[10:29:37] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:33:52] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[10:33:58] *** Quits: rgrinberg (~textual@187.251.13.114) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:42:01] *** Quits: rsarson (~rsarson@2607:fea8:29e1:b000::2baf) (Ping timeout: 245 seconds)
[10:44:29] *** Joins: gitargy (~gitargy@76.78.94.79)
[10:48:38] *** Quits: alch (~alch@151.38.97.185) (Read error: Connection reset by peer)
[10:49:11] *** Quits: Red (~Red@97.109-247-81.customer.lyse.net) (Ping timeout: 252 seconds)
[10:49:55] *** Joins: Red (~Red@97.109-247-81.customer.lyse.net)
[10:52:29] *** Joins: alch (~alch@pd-18-103-67.service.infuturo.it)
[10:59:09] *** Joins: rgrinberg (~textual@187.251.13.114)
[10:59:14] *** Joins: rsarson (~rsarson@2607:fea8:29e1:b000::2baf)
[11:01:03] *** imm__ is now known as imm_
[11:04:13] *** Quits: gco (~gco@2601:647:5a00:223:11e0:2996:dd48:558a) (Quit: ZZZzzz…)
[11:04:13] *** Joins: Portable1 (~portabled@14-201-65-57.static.tpgi.com.au)
[11:04:33] *** Quits: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net) (Ping timeout: 256 seconds)
[11:06:36] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[11:08:27] *** Quits: Portable1 (~portabled@14-201-65-57.static.tpgi.com.au) (Ping timeout: 256 seconds)
[11:09:11] *** Quits: rgrinberg (~textual@187.251.13.114) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:10:43] *** Quits: Red (~Red@97.109-247-81.customer.lyse.net) (Ping timeout: 256 seconds)
[11:12:52] *** Joins: Red (~Red@97.109-247-81.customer.lyse.net)
[11:13:00] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Ping timeout: 268 seconds)
[11:24:52] *** Joins: arinov (~arinov@213.194.126.155)
[11:27:13] *** Quits: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net) (Quit: b1101)
[11:31:04] *** Quits: BSaboia (~bsaboia@177.37.198.35) (Quit: This computer has gone to sleep)
[11:38:32] *** Joins: premultiplied (~premultip@69.84.6.130)
[11:40:09] *** Joins: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net)
[11:42:21] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:2817:596e:24d6:b4c0) (Ping timeout: 252 seconds)
[11:43:07] *** Joins: aradesh (~aradesh@user/aradesh)
[11:43:35] *** Quits: premultiplied (~premultip@69.84.6.130) (Ping timeout: 256 seconds)
[11:44:11] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[11:45:09] *** synapt is now known as nate
[11:46:54] *** Quits: mongrel (uid508343@id-508343.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[11:48:34] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Quit: Leaving)
[11:52:09] *** Quits: Red (~Red@97.109-247-81.customer.lyse.net) (Read error: Connection reset by peer)
[11:52:32] *** Joins: Red (~Red@97.109-247-81.customer.lyse.net)
[11:52:35] *** Quits: Red (~Red@97.109-247-81.customer.lyse.net) (Read error: Connection reset by peer)
[11:52:43] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Ping timeout: 256 seconds)
[11:52:53] *** Joins: Red (~Red@97.109-247-81.customer.lyse.net)
[11:57:18] *** Quits: soapsudsxx (~soapsudsx@209.221.40.158) (Remote host closed the connection)
[12:00:42] *** Joins: carlavilla (~carlavill@2a0c:5a84:3607:2f00:221:6bff:fe3b:cee4)
[12:08:56] *** Joins: vysn (~vysn@user/vysn)
[12:19:04] *** Quits: alch (~alch@pd-18-103-67.service.infuturo.it) (Read error: Connection reset by peer)
[12:21:34] *** Joins: Haxxa (~Haxxa@202-130-210-132.ip4.superloop.com)
[12:22:15] *** Joins: alch (~alch@to-18-79-129.service.infuturo.it)
[12:22:57] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:36fa:88df:2864:545c)
[12:26:32] *** Joins: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com)
[12:27:03] *** Joins: seninha (~seninha@user/seninha)
[12:31:19] *** Quits: dld (~dld@2601:197:600:1210:4c8f:59ca:20e7:8c51) (Ping timeout: 268 seconds)
[12:33:24] *** Joins: dld (~dld@2601:197:600:1210:3148:3480:a32a:c902)
[12:33:44] *** Joins: katnis (uid15849@id-15849.helmsley.irccloud.com)
[12:38:26] <baltazar> hi! how do you use a non-standard baud rate on linux? I've found two methods so far, involving termios2 and serial_struct, but both of them seem kind of hacky and I haven't found much documentation on either.
[12:38:51] <baltazar> which one should I use, or is there some cleaner way?
[12:39:21] *** Joins: earnest (~earnest@user/earnestly)
[12:40:14] <dave0> hmm termios is portable
[12:40:45] <dave0> iirc the the linux serial stuff lets you have unusual baud rates
[12:41:01] <dave0> and access to the control signals
[12:41:27] <dave0> baltazar: if termios has enough features for you, i'd say go with that... it's posix
[12:41:55] <dave0> oh you asked for non-standard baud rate
[12:42:14] <dave0> i think you have to use the linux specific serial stuff
[12:42:49] <baltazar> yes, but termios2 can achieve it as well, but it's rather hacky
[12:44:48] <baltazar> I don't even know what to #include... the struct itself is defined in `asm-generic/termbits.h` on my system, and including this directly does work, but I think this is quite unportable
[12:46:39] <baltazar> it's also included by `linux/termios.h`, but that also declares `struct winsize`, which conflicts with `sys/ioctl.h`
[12:46:55] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[12:47:23] <baltazar> anyway, I think I'll go with the serial_struct method
[12:48:20] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[12:48:40] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[12:48:43] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Client Quit)
[12:50:38] <dave0> i looked at some old code but it uses 9600 baud, which is not unusual
[12:50:59] <dave0> but it set up 8n1 with termios, and toggled some control lines with ioctl
[12:51:14] <dave0> sorry i forget how to get an unusual baud rate
[12:51:35] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[12:52:37] <baltazar> dave0: thanks, stackoverflow gave me the answer for that, just asked here because some people said there that this method is a hack
[12:52:46] <baltazar> but whatever, it seems fine enough
[12:53:55] *** Joins: mrig (~AdiIRC@user/mrig)
[12:56:12] *** Quits: gitargy (~gitargy@76.78.94.79) (Remote host closed the connection)
[12:56:13] *** Joins: bbju (~bbju@103.144.148.218)
[12:57:08] *** Joins: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143)
[12:57:22] <dave0> yep
[12:57:27] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[12:57:33] <dave0> there's nothing wrong with a non-portable program
[12:58:07] <dave0> it may be a jewel
[12:58:50] *** Joins: slidercrank (~slidercra@user/slidercrank)
[13:01:52] <ent58> Lets say you've made multiple versions of a function, all in different TUs, and the functions never touch anything that isn't already given to it or isn't local. So, no global vars, no functions; only what is provided to the function via a pointer to a small data structure with a call table and whatever state is needed. Assuming these files are
[13:01:52] <ent58> compiled to binary only (no object file format), how safe would it be to rely on this code to be swappable/loadable at runtime in a write-execute fashion?
[13:03:30] <dave0> are you loading raw machine code and executing it?
[13:03:42] <ent58> essentially yes
[13:03:55] <dave0> you might need to make it position independent
[13:04:41] *** Quits: imp (~imp@192-141-191-227.alternativaip.net.br) (Read error: Connection reset by peer)
[13:04:45] <ent58> can you guarantee position independence through behavior alone? Writing the functions in such a way that it never references anything that would require a relative or absolute offset?
[13:04:46] <dave0> alternatively use the linker to relocate it to some address and load it at that virtual address
[13:05:11] <ent58> or is that not a guarantee the programmer can ever make without the compiler's help
[13:05:14] <dave0> nah -fPIC is a compiler switch
[13:05:22] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[13:05:41] <dave0> needs support from the compiler
[13:05:44] <ent58> oh yeah I'm aware of -fPIC...my challenge is to try to make this as compliant as possible so it's not brittle on any arch that's not x86
[13:06:05] <dave0> it sounds a lot like what you would get with a shared library
[13:06:34] <dave0> that is somewhat portable... dlopen and friends is posix
[13:07:25] <dave0> it also sounds like a plugin... sorry i know nothing about plugins
[13:07:37] <ent58> there's some small amount of overhead doing it that way, but the main idea behind this is to be able to safely specify arbitrarily modified code at runtime
[13:07:55] <ent58> not necessarily self modifying, but it falls under that category
[13:08:16] <dave0> JIT things generate code on the fly and execute it
[13:08:37] <dave0> but it's far from portable
[13:08:48] <ent58> They do...however I can't replace heavy parts of an algorithm at runtime based on runtime constraints
[13:09:13] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[13:09:32] <ent58> JITs seem to perform the function of...low hanging fruit? the things you might do as obvious speedups, like getting rid of branches, etc
[13:10:33] <dave0> a function pointer is a sort of self-modifying code which is widely supported
[13:10:42] <ent58> but this is more about having everything from that functionality to the equivalent of having an embedded scripting language in your application, except the code you write becomes your application (as if it were complied with that code changed in the first place)
[13:11:13] <dave0> give your functions that are in separate TU's different names, and have a function pointer point to one of those functions
[13:11:26] *** Quits: bbju (~bbju@103.144.148.218) (Ping timeout: 256 seconds)
[13:11:32] <ent58> completely agree, but this eliminates duplication (in the application at least since the changes to the function can be compressed into only what changes)
[13:11:36] <dave0> are you writing a lisp or something?
[13:12:02] <ent58> No....I want to add "code object" semantics to C, basically
[13:12:13] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:12:44] *** Joins: ivanno (~ivan@193.205.162.70)
[13:12:47] <ent58> my dream of course would be writing an addition to the language, like a compiler plugin....that way you wouldn't have to do this strange hacky stuff outside of the language to achieve it
[13:13:04] <dave0> sorry idk
[13:13:24] *** Joins: bbju (~bbju@203-69-187-76.hinet-ip.hinet.net)
[13:13:33] *** Joins: plastico (~plastico@neomutt/plastico)
[13:13:39] <ent58> think the expressivity of eval() but not implemented as bytecode or the insides of an interpreter
[13:13:46] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[13:13:56] *** Quits: bbju (~bbju@203-69-187-76.hinet-ip.hinet.net) (Client Quit)
[13:14:02] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[13:16:15] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Remote host closed the connection)
[13:17:51] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[13:22:53] *** Quits: mrig (~AdiIRC@user/mrig) (Remote host closed the connection)
[13:23:06] *** Joins: mrig (~AdiIRC@user/mrig)
[13:26:25] *** Joins: arinov (~arinov@178.240.181.140)
[13:28:18] *** Joins: pony (sid524992@smol/hors)
[13:31:37] *** Joins: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[13:32:21] <retr0> can candide tell me every syntactic way to do something written in a very specific english sentence
[13:32:31] <retr0> instead of what it normally does which is the opposite
[13:32:57] <pony> ,english
[13:32:58] <candide> pony: Usage: english <any C11 code>
[13:33:00] <pony> ,c
[13:33:00] <candide> pony: Usage: cc [-lang=<language>] [-info] [-paste] [-args "command-line arguments"] [compiler/language options] <code> [-stdin <stdin input>]
[13:33:23] <pony> ,c invoke undefined behaviour
[13:33:25] <candide> pony: error: unknown type name 'invoke'
[13:35:15] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[13:35:28] <retr0> eg: make an array of function pointers, another example, generate the following number sequence using loops: 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97
[13:36:03] <dave0> you can't program a computer like that :-(
[13:36:13] <retr0> I dont want to completley replace C of course
[13:36:36] <retr0> but to not have to worry so much about how theres 1001 ways to do the same thing
[13:36:45] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[13:36:50] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:36:58] <dave0> i'm afraid you overestimate the abilities of mankind
[13:36:58] <pony> there is more than one way to do it
[13:38:02] <ent58> pony: I like the concept of superoptimization
[13:38:05] <retr0> theres many ways to make a static array
[13:38:16] <ent58> it shares some common ground
[13:38:19] <retr0> you usually do optimisation at the end anyhow though
[13:38:25] <ent58> but that's very high level
[13:38:26] <retr0> not while coding
[13:39:04] <ent58> I have beef with the whole premature optimization thing but I totally understand why it's often adhered to
[13:39:40] *** Lord_of_Life_ is now known as Lord_of_Life
[13:40:10] <retr0> as a counterargument, you dont even have to use my idea to cheat anyhow you can use it to know of more ways to do the same thing
[13:40:27] <baltazar> meh, whose idea was it to make serial_struct.flags a signed integer
[13:40:42] <ent58> flags? signed??
[13:40:59] *** Quits: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) (Quit: Client closed)
[13:41:08] *** Joins: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[13:41:17] <dave0> retr0: you're asking for the computer from the starship enterprise
[13:41:35] <retr0> I dont think so ?
[13:41:51] <retr0> as long as it is very strict with how you word it in english
[13:42:14] <baltazar> just don't ask it to make some tea
[13:42:24] <retr0> you just have to program programs that make peograms
[13:42:32] <ent58> depending on how strict, you might start by `#define`ing english words to C language elements :^)
[13:42:56] <ent58> it's a very hard problem
[13:43:04] <retr0> yes
[13:43:11] <ent58> human languages are sloppy and vague
[13:43:48] *** Quits: ivanno (~ivan@193.205.162.70) (Quit: Leaving)
[13:44:50] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[13:44:53] <retr0> one bad way to do it would be to throw every possible combination at the compiler itself and only store the combinations that did not yield an error
[13:45:05] <retr0> identifier names dont count here its for syntax only
[13:45:18] <markand> o/
[13:45:40] <markand> how would you serialize a C union into a SQL record? marshalling to JSON would be overkill IMHO
[13:46:17] <ent58> so many questions
[13:46:54] <ent58> hmm...I'm not super familiar with the depths of SQL, but what types of data can you store in a record?
[13:47:21] <ent58> or rather, is there a way to tag a type like you would with a union in C
[13:50:42] <retr0> https://cdecl.org/
[13:51:58] <retr0> im so sick of being stuck indoors for winter than im watching a video of calfornia coastline
[13:52:00] *** Joins: pulse (~pulse@user/pulse)
[13:52:25] <ent58> I'd assume you'd have to create your own mapping between active union type and SQL datatype
[13:53:20] <ent58> but I don't know of a library that already does that from C
[13:55:49] *** Joins: cart_man (~rynot@host-78-144-121-71.as13285.net)
[14:01:52] *** Quits: cart_man (~rynot@host-78-144-121-71.as13285.net) (Quit: Konversation terminated!)
[14:06:50] *** Quits: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com) (Quit: Client closed)
[14:07:24] *** Quits: koollman (samson_t@user/koollman) (Quit: leaving)
[14:08:24] *** Joins: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com)
[14:09:58] *** Joins: premultiplied (~premultip@69.84.6.130)
[14:14:53] *** Quits: premultiplied (~premultip@69.84.6.130) (Ping timeout: 252 seconds)
[14:15:26] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[14:18:12] *** Joins: shivesh (~shivesh@user/shivesh)
[14:19:44] *** Quits: malloy (~jimery@116.30.222.115) (Quit: WeeChat 3.0)
[14:23:33] *** Joins: cart_man (~rynot@host-78-144-121-71.as13285.net)
[14:24:40] *** Quits: chomwitt (~chomwitt@2a02:587:dc0d:6d00:12c3:7bff:fe6d:d374) (Remote host closed the connection)
[14:24:59] *** Joins: chomwitt (~chomwitt@2a02:587:dc0d:6d00:12c3:7bff:fe6d:d374)
[14:29:58] *** Joins: strajder (~strajder@user/strajder)
[14:30:13] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:30:57] *** Joins: csrf (~csrf@user/csrf)
[14:32:42] *** Quits: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com) (Quit: Client closed)
[14:36:34] *** Joins: Klinda (~superleag@user/klinda)
[14:36:41] *** Joins: riskoir (~karaixx@user/riskoir)
[14:37:36] *** Joins: mattil (~mattil@helsinki.portalify.com)
[14:37:39] *** Quits: nicholaus04 (~nicholaus@2607:fb90:e58c:fb6a:c006:182a:a2a6:4f9b) (Quit: Joined Game)
[14:38:44] <riskoir> If I have a pointer to struct foo { bar baz; } , how can I return the reference of baz? '&foo->baz' does not seem to work
[14:39:15] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[14:42:20] <pragma-> Use parentheses.
[14:44:25] <pony> ,parens &foo->bar
[14:44:26] <candide> pony: &(foo->bar)
[14:45:08] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[14:45:08] *** Joins: bolovanos__ (~bolovanos@user/bolovanos)
[14:45:48] *** Joins: chr1 (~chr@mail.alfaorigo.dk)
[14:46:07] *** Quits: chr1 (~chr@mail.alfaorigo.dk) (Remote host closed the connection)
[14:46:37] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[14:47:08] <riskoir> ty
[14:48:02] *** Joins: hxztnxt (~hxztnxt@145.red-80-59-28.staticip.rima-tde.net)
[14:48:18] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[14:49:11] <pragma-> &foo->baz should work fine.
[14:50:05] *** Quits: VincentValentine (~VincentVa@95.84.48.87) (Ping timeout: 252 seconds)
[14:50:39] <pragma-> ,cc struct thing { int baz; } *s = &(struct thing) { 42 };  int *p = &s->baz; *p = 69; printf("%d", s->baz);
[14:50:42] <candide> pragma-: 69
[14:50:46] <hxztnxt> is it okay if I write a very big program at once to kind of make a draft of the code. And, once I have that, try to write it again, little by little making sure everything works?
[14:52:09] <riv> yes
[14:52:24] <pragma-> hxztnxt: No, you must design every line of the program by committee with a rigorous schedule with complete coverage.
[14:54:11] <hxztnxt> yes or no?
[14:55:04] <Kit> thats perfectly fine
[14:55:23] <Kit> in fact, that sounds like a good idea
[14:55:39] <Kit> i may want to start doing that
[14:55:53] <pragma-> Until you decide that the "draft" works fine as it is and you can't be arsed to rewrite properly. Then you're stuck with ... that.
[14:56:15] <riskoir> inline const bar *GetBar() const { return &(foo->baz); } I am getting "error: taking address of rvalue [-fpermissive]"
[14:57:08] <pragma-> I'd have expected "undeclared identifer `foo`".
[14:57:15] *** Joins: gproto23 (~gproto23@user/gproto23)
[14:57:42] <riskoir> foo is a global variable
[14:57:52] <pragma-> should be GetBaz. /me nods.
[14:57:57] <dave0> riskoir: struct foo { ... };   <-- foo is the struct tag, not a variable
[14:58:00] <Kit> foo fighters
[14:58:10] <pony> bar fights
[14:58:11] <dave0> riskoir: struct foo { ... } foo;    now you have both
[14:59:29] <tk> riskoir: looks like C++ to me
[14:59:56] <riskoir> Right, it's C++
[15:00:06] <Kit> oop
[15:00:09] <tk> and in C this is not an issue
[15:00:30] <tk> I recommend you ask in #c++
[15:00:54] <riskoir> okay
[15:01:08] <tk> at a guess, it may have something to do with the const-this-pointer you're asking it to operate on but I might be completely off
[15:01:24] <tk> assuming foo is actually this
[15:03:25] <tk> riskoir: also, as an aside, at least in C, -> has higher precedence than & meaning that you don't need to put brackets there.
[15:04:21] <riskoir> got it
[15:04:44] *** Joins: premultiplied (~premultip@69.84.6.130)
[15:04:53] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[15:06:45] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[15:09:55] *** Quits: Red (~Red@97.109-247-81.customer.lyse.net) (Quit: Leaving)
[15:10:17] *** Joins: Red (~Red@97.109-247-81.customer.lyse.net)
[15:14:47] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[15:16:22] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[15:17:57] *** Quits: mixfix41 (~homefame@user/mixfix41) (Read error: Connection reset by peer)
[15:18:47] *** Joins: random-nick (~random-ni@87.116.165.83)
[15:22:25] *** Joins: seninha (~seninha@user/seninha)
[15:29:13] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[15:29:34] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[15:33:00] *** Joins: kurahaupo_ (~kurahaupo@pa49-180-186-164.pa.nsw.optusnet.com.au)
[15:33:43] *** Quits: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net) (Ping timeout: 252 seconds)
[15:34:03] *** Joins: nofx (~i.am@189.58.156.81.dynamic.adsl.gvt.net.br)
[15:34:27] *** nofx is now known as marlboro
[15:34:28] *** Quits: marlboro (~i.am@189.58.156.81.dynamic.adsl.gvt.net.br) (Changing host)
[15:34:28] *** Joins: marlboro (~i.am@user/marlboro)
[15:35:42] *** Quits: retroid_ (~retro@97e2ba2e.skybroadband.com) (Ping timeout: 268 seconds)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:04] *** Joins: retroid_ (~retro@97e2ba2e.skybroadband.com)
[15:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:38:34] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Remote host closed the connection)
[15:38:47] *** Joins: acaciause (~acaciause@cpc140764-burn9-2-0-cust788.10-1.cable.virginm.net)
[15:39:34] *** Quits: kdc (~kdc@196.211.197.159) (Quit: Leaving)
[15:40:45] *** Joins: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[15:41:04] *** Quits: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Remote host closed the connection)
[15:41:28] *** Joins: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[15:42:58] *** Joins: koollman (samson_t@sp1.kooll.org)
[15:43:12] *** flooded is now known as _flood
[15:43:43] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[15:44:00] *** Quits: koollman (samson_t@sp1.kooll.org) (Changing host)
[15:44:00] *** Joins: koollman (samson_t@user/koollman)
[15:44:22] *** Quits: hxztnxt (~hxztnxt@145.red-80-59-28.staticip.rima-tde.net) (Remote host closed the connection)
[15:44:47] *** Joins: hxztnxt (~hxztnxt@145.red-80-59-28.staticip.rima-tde.net)
[15:45:27] *** Quits: dutch (~DutchIngr@user/dutch) (Quit: WeeChat 3.3)
[15:46:07] *** Joins: dutch (~DutchIngr@user/dutch)
[15:46:48] *** Quits: dld (~dld@2601:197:600:1210:3148:3480:a32a:c902) (Ping timeout: 268 seconds)
[15:47:57] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[15:50:10] <riskoir> Should I declare all includes in header file always, or just include in header what it actually needs
[15:51:15] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[15:52:21] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 268 seconds)
[15:53:50] <hxztnxt> should i free memory before I exit? what if I am exiting with rc 1?
[15:53:57] <hxztnxt> or !=0
[15:54:48] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[15:55:28] <dave0> hxztnxt: http://www.c-faq.com/malloc/freeb4exit.html
[15:56:21] *** Joins: Portable1 (~portabled@14-201-65-57.static.tpgi.com.au)
[15:58:42] *** Quits: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (Quit: mikoto-chan)
[15:58:52] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[16:00:04] *** Joins: ARoxdale (~ARoxdale@84.203.26.40)
[16:00:49] *** Joins: kdc (~kdc@196.211.197.159)
[16:00:51] *** Quits: Portable1 (~portabled@14-201-65-57.static.tpgi.com.au) (Ping timeout: 256 seconds)
[16:02:17] *** Joins: aliosablack (~chomwitt@2a02:587:dc0d:6d00:12c3:7bff:fe6d:d374)
[16:02:35] <dave0> riskoir: http://www.c-faq.com/cpp/nestincl.html
[16:02:48] *** Quits: chomwitt (~chomwitt@2a02:587:dc0d:6d00:12c3:7bff:fe6d:d374) (Read error: Connection reset by peer)
[16:02:55] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:06:18] *** Quits: riskoir (~karaixx@user/riskoir) (Remote host closed the connection)
[16:06:41] *** Joins: riskoir (~karaixx@user/riskoir)
[16:07:27] *** Joins: Giedrius (~giedrius@5.133.65.65)
[16:08:28] *** Quits: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143) (Quit: Leaving)
[16:15:56] *** Quits: riskoir (~karaixx@user/riskoir) (Remote host closed the connection)
[16:16:31] *** Joins: riskoir (~karaixx@user/riskoir)
[16:17:29] *** Quits: hxztnxt (~hxztnxt@145.red-80-59-28.staticip.rima-tde.net) (Remote host closed the connection)
[16:17:48] *** Quits: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) (Quit: Client closed)
[16:21:23] *** Quits: alch (~alch@to-18-79-129.service.infuturo.it) (Read error: Connection reset by peer)
[16:24:37] *** Quits: riskoir (~karaixx@user/riskoir) (Remote host closed the connection)
[16:25:04] *** Joins: riskoir (~karaixx@user/riskoir)
[16:25:39] *** Joins: alch (~alch@151.82.60.48)
[16:26:06] *** Quits: Giedrius (~giedrius@5.133.65.65) (Remote host closed the connection)
[16:28:28] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[16:29:24] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[16:29:54] *** Quits: cart_man (~rynot@host-78-144-121-71.as13285.net) (Quit: Konversation terminated!)
[16:33:40] *** Quits: riskoir (~karaixx@user/riskoir) (Remote host closed the connection)
[16:34:07] *** Joins: riskoir (~karaixx@user/riskoir)
[16:34:18] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[16:35:08] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 252 seconds)
[16:37:20] *** Quits: aliosablack (~chomwitt@2a02:587:dc0d:6d00:12c3:7bff:fe6d:d374) (Ping timeout: 252 seconds)
[16:39:48] *** Quits: bolovanos__ (~bolovanos@user/bolovanos) (Quit: Leaving)
[16:40:01] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Ping timeout: 256 seconds)
[16:40:02] *** Joins: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[16:42:17] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 252 seconds)
[16:42:17] *** Quits: arinov (~arinov@178.240.181.140) (Ping timeout: 252 seconds)
[16:44:18] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[16:45:42] *** Joins: dld (~dld@148.59.24.6)
[16:50:11] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[16:50:47] *** Quits: dld (~dld@148.59.24.6) (Ping timeout: 256 seconds)
[16:52:19] *** Joins: chomwitt (~chomwitt@2a02:587:dc0d:6d00:12c3:7bff:fe6d:d374)
[16:53:30] *** Quits: Terlisimo (~Terlisimo@outofband.ozna.net) (Quit: Connection reset by beer)
[16:54:58] *** Joins: dld (~dld@148.59.24.15)
[16:55:44] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[16:56:39] *** Joins: constxd (~brad@192.75.101.164)
[16:58:02] <concrete-houses> https://controlc.com/969eaba3 ok new programmer here !  how can I do this?  database spits out county licesne type total sales, then same county diff lic sales number, and end user wants report with count license type 1 sals 1 lic2 sale2 ..N then total sales all lic--n added  then next line next county
[16:59:44] <pragma-> This would be a thousand times easier in awk or perl or even python. I don't know why people use C for these tasks.
[17:00:07] <pragma-> "We're dealing with lots of strings. Better use C."
[17:00:07] <concrete-houses> it would seem capture ounty name then build array with lic saleN sand start accumualtor variable lic salestota,  then next line if same county add lc2 sale2 to array, add to counter, if not start new array for county 2 and new total accumularo var  then loop 
[17:00:17] <concrete-houses> ah ok
[17:00:18] *** Joins: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[17:00:33] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Quit: Leaving)
[17:00:42] <concrete-houses> I will say working with .net and java makes me dream of using c for web 
[17:00:51] *** Joins: Terlisimo (~Terlisimo@outofband.ozna.net)
[17:01:10] <concrete-houses> I dont program but handle postgresql wich I thoght would solve my problems but presents new ones and in SQL I can't solve the above so far lol
[17:01:32] *** Quits: zwr (~zwr@2804:d45:b966:fb00:e8f3:9015:4194:f553) (Ping timeout: 252 seconds)
[17:01:52] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[17:02:14] *** Joins: zwr (~zwr@2804:d45:b966:fb00:c634:1c10:a560:ee24)
[17:02:23] <pragma-> It's certainly doable in SQL.
[17:02:42] <pragma-> Most SQL databases have a sum() function
[17:02:58] <pragma-> So just select the rows and sum them.
[17:03:40] <pragma-> Or fetch them with SQL and them sum them in your program, shrug.
[17:03:56] *** flooded is now known as _flood
[17:03:57] <pragma-> and then
[17:04:13] *** Joins: lleo (~leo@188-206-74-140.mobile.kpn.net)
[17:04:37] <pragma-> Or just feed the values to a spreadsheet application and use the pivot table function.
[17:04:47] <pragma-> (I just noticed that the paste is titled "pivot table")
[17:07:53] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:36fa:88df:2864:545c) (Quit: Leaving)
[17:10:56] *** Quits: riskoir (~karaixx@user/riskoir) (Remote host closed the connection)
[17:15:58] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[17:16:47] *** Quits: marcj (~marc@205.175.215.25) (Ping timeout: 265 seconds)
[17:17:41] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Remote host closed the connection)
[17:18:13] *** Quits: frost (~frost@user/frost) (Ping timeout: 252 seconds)
[17:20:09] *** Joins: _kimchi (~kimchi@87.247.123.112)
[17:20:50] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[17:23:52] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[17:25:51] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[17:29:50] *** Quits: mattil (~mattil@helsinki.portalify.com) (Read error: Connection reset by peer)
[17:30:16] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Remote host closed the connection)
[17:30:41] *** Quits: dld (~dld@148.59.24.15) (Ping timeout: 252 seconds)
[17:30:54] *** Joins: FlipFlop (~FlipFlop@user/fl1pfl0p)
[17:31:45] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[17:35:39] *** Joins: aliosablack (~chomwitt@2a02:587:dc0d:6d00:12c3:7bff:fe6d:d374)
[17:36:07] *** Quits: chomwitt (~chomwitt@2a02:587:dc0d:6d00:12c3:7bff:fe6d:d374) (Read error: Connection reset by peer)
[17:40:58] *** Joins: X-Scale` (~ARM@25.55.43.5.rev.vodafone.pt)
[17:41:30] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[17:43:14] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[17:44:19] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[17:44:49] *** Quits: X-Scale (~ARM@83.223.227.126) (Ping timeout: 265 seconds)
[17:44:49] *** X-Scale` is now known as X-Scale
[17:45:38] *** Joins: arinov (~arinov@178.240.181.140)
[17:45:45] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[17:45:57] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: bbl)
[17:49:17] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[17:49:54] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: see you later)
[17:52:07] *** Joins: jusski (~user@78-63-85-123.static.zebra.lt)
[17:52:32] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[17:53:37] *** Joins: Guest17 (~Guest17@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[17:55:19] *** Quits: arinov (~arinov@178.240.181.140) (Ping timeout: 256 seconds)
[17:55:53] *** Joins: dld (~dld@148.59.24.15)
[17:56:59] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Read error: Connection reset by peer)
[17:59:18] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[18:03:21] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[18:04:12] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[18:05:01] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 256 seconds)
[18:05:19] *** Quits: Feuermagier_ (~Feuermagi@2a02:2488:4211:3400:b6fd:ec18:acf6:f1a8) (Quit: Leaving)
[18:05:32] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[18:07:43] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[18:07:47] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[18:07:57] *** Joins: strajder (~strajder@user/strajder)
[18:09:08] *** Joins: the_lanetly_052 (~the_lanet@194.135.152.72)
[18:10:14] *** Quits: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[18:14:23] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[18:14:56] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[18:16:42] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: see you later)
[18:18:01] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[18:19:57] *** Parts: _kimchi (~kimchi@87.247.123.112) (Leaving)
[18:22:32] *** Joins: arinov (~arinov@212.156.215.30)
[18:23:06] *** Joins: monkey_ (~user@181.114.17.106)
[18:25:44] *** Joins: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr)
[18:25:52] *** kurahaupo_ is now known as kurahaupo
[18:32:19] *** Joins: terminalpusher (~terminalp@2a01:586:a4a5:1:393:e590:b69b:2236)
[18:37:25] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Ping timeout: 252 seconds)
[18:37:38] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[18:39:18] *** Joins: plainoldcheese (~plainoldc@user/plainoldcheese)
[18:40:52] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[18:43:04] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[18:46:56] *** Joins: slidercrank (~slidercra@user/slidercrank)
[18:48:37] *** Joins: crankslider (~slidercra@user/slidercrank)
[18:50:46] *** Quits: crankslider (~slidercra@user/slidercrank) (Client Quit)
[18:52:43] *** Joins: Itaru (~DaSH@ro2.flokinet.is)
[18:53:58] *** Joins: cation21 (cation@user/cation)
[18:54:39] *** Quits: cation (cation@user/cation) (Ping timeout: 252 seconds)
[18:56:10] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[18:56:53] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[18:57:03] *** cation21 is now known as cation
[18:57:05] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 256 seconds)
[18:57:39] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 256 seconds)
[18:59:46] *** Quits: plainoldcheese (~plainoldc@user/plainoldcheese) (Quit: WeeChat 3.3)
[18:59:59] *** Quits: monkey_ (~user@181.114.17.106) (Ping timeout: 256 seconds)
[19:02:21] *** Quits: lleo (~leo@188-206-74-140.mobile.kpn.net) (Ping timeout: 252 seconds)
[19:10:35] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[19:14:35] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[19:15:17] *** Quits: dld (~dld@148.59.24.15) (Ping timeout: 256 seconds)
[19:16:35] *** Joins: monkey_ (~user@181.114.17.106)
[19:19:10] *** Joins: dohtem (uid524096@user/dohtem)
[19:23:19] *** Joins: karakedi (~eAC53C340@user/karakedi)
[19:24:51] *** Quits: arinov (~arinov@212.156.215.30) (Ping timeout: 256 seconds)
[19:26:36] *** Joins: Thedarkb-Desktop (~Thedarkb@2001:bb6:b403:e042:d9ba:db19:4ac0:8420)
[19:28:37] *** scarce is now known as scarc
[19:30:34] *** Joins: jetchisel (jetchisel@user/jetchisel)
[19:30:38] *** Joins: missogra (~missogra@dynamic-095-112-072-253.95.112.pool.telefonica.de)
[19:32:00] *** scarc is now known as scarce
[19:32:11] *** Joins: arinov (~arinov@178.240.181.140)
[19:36:06] *** Joins: u0_a391 (~u0_a391@64.85.173.130)
[19:37:08] *** Joins: quartz (~quartz@user/quartz)
[19:39:20] *** Quits: nabaiste^ (~nabaiste@68.101.58.90) (Remote host closed the connection)
[19:39:54] *** Quits: Kit (~u0_a391@2600:380:5e26:855a:d6c5:be6:f25a:c9ce) (Ping timeout: 268 seconds)
[19:40:27] *** Joins: Charadon (~Charadon@155.138.164.183)
[19:44:41] *** Quits: cation (cation@user/cation) (Ping timeout: 256 seconds)
[19:45:57] *** Joins: cation (cation@user/cation)
[19:49:39] *** Quits: Guest17 (~Guest17@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Quit: Client closed)
[19:53:31] *** Quits: Itaru (~DaSH@ro2.flokinet.is) (Quit: Leaving)
[19:53:54] *** Joins: Itaru (~DaSH@ro2.flokinet.is)
[19:55:31] *** Quits: cation (cation@user/cation) (Ping timeout: 252 seconds)
[19:57:13] *** Quits: monkey_ (~user@181.114.17.106) (Ping timeout: 256 seconds)
[20:02:17] *** Joins: erts (~erts@user/erts)
[20:02:21] *** Joins: nuxil (~nuxil@141.195.51.213)
[20:02:38] *** Joins: stonkey (~stonkey@user/stonkey)
[20:02:41] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[20:03:15] *** Joins: Techcable (~Techcable@168.235.93.147)
[20:07:59] *** Quits: missogra (~missogra@dynamic-095-112-072-253.95.112.pool.telefonica.de) (Ping timeout: 252 seconds)
[20:09:14] *** Parts: erts (~erts@user/erts) (.)
[20:15:35] *** Joins: Jantz (~IceChat95@2407:7000:8d04:100:20ab:df6:4a36:a7ba)
[20:20:23] *** Joins: lleo (~leo@188-206-74-140.mobile.kpn.net)
[20:20:40] *** Quits: alch (~alch@151.82.60.48) (Read error: Connection reset by peer)
[20:20:49] *** Quits: concrete-houses (~g@209.6.150.53) (Remote host closed the connection)
[20:22:15] *** Quits: Itaru (~DaSH@ro2.flokinet.is) (Quit: Leaving)
[20:22:16] <SrPx> I need to commonly copy a static buffer of 256 ints. In general, what should be faster? A memcpy from a static buffer, or a series of static writes (`a[0] = x0; a[1] = x1; a[2] = x2 ... a[255] = x255`).
[20:22:43] *** Joins: Itaru (~DaSH@ro2.flokinet.is)
[20:22:59] <SrPx> I can do both because the data is static. I guess a 256*8 bytes memcpy should be slower than 256 movs, right?
[20:23:05] <pragma-> Avoid surprises by using a profiler.
[20:24:52] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[20:24:59] *** Joins: alch (~alch@151.82.93.95)
[20:25:00] <DarkUranium> ^
[20:25:17] <pragma-> Of course, you might profile for one system but some random end user might use it on another system with weird(er) semantics.
[20:25:25] <SrPx> either option will take a few hours to code which is why I can't profile / asked here before I try
[20:25:25] <DarkUranium> Also, a loop is likely to be faster than manual moves. Because the compiler can unroll IFF it's faster. And unrolling is not always faster.
[20:25:26] <SrPx> but alright
[20:25:30] <DarkUranium> (for example, consider register pressure)
[20:25:31] <SrPx> what profiler you recommend, anyway?
[20:25:43] <DarkUranium> Copying this should be a matter of minutes to code, to test?
[20:25:46] <SrPx> DarkUranium: makes sense!
[20:26:08] <SrPx> well I can test an unrelated micro benchmark, but either option will take a few hours to test because I need to adapt the whole runtime around it
[20:26:08] *** Quits: Jantz (~IceChat95@2407:7000:8d04:100:20ab:df6:4a36:a7ba) (Read error: Connection reset by peer)
[20:26:12] *** Joins: Akuli (~Akuli@82-203-166-207.bb.dnainternet.fi)
[20:26:27] *** Joins: Jantz (~IceChat95@2407:7000:8d04:100:20ab:df6:4a36:a7ba)
[20:26:39] <derelict> say i had a signal handler established with a sigaction(). if i call the handler directly without it being invoked upon a signal receipt, will the signal also be masked this way?
[20:27:59] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[20:28:18] *** u0_a391 is now known as Kiy
[20:28:20] *** Kiy is now known as Kiy0t
[20:28:22] *** Kiy0t is now known as Kit
[20:30:03] *** Joins: marcj (~marc@205.175.215.25)
[20:30:08] *** Joins: crudo (~crudo@livredigital.com)
[20:30:20] *** Joins: masterbuilder (~user@user/masterbuilder)
[20:32:10] <DarkUranium> SrPx: FWIW; unless it's extremely performance-critical, I'd just do a memcpy and call it a day.
[20:32:30] <DarkUranium> Compiler's static analysis should be able to realize that the memcpy is integer-aligned.
[20:32:58] <SrPx> fair enough!
[20:33:05] <Learath2> memcpy is optimized fairly well, I wouldn't worry about it before profiling
[20:33:08] <pragma-> Yes, the one compiler that everyone uses.
[20:33:18] <SrPx> speaking of compilers
[20:33:44] <DarkUranium> pragma-: modern non-toy compilers tend to all handle memcpy well.
[20:33:59] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 256 seconds)
[20:34:01] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[20:34:05] <SrPx> the application I have in mind also requires ultra fast compilation times, because I'll be dealing with user-submitted code 
[20:34:35] <SrPx> I wonder if there is a compiler with some flag that does the compilation as fast as it can, optimizing what is possible?
[20:34:47] <DarkUranium> Not per se, but the higher -O you use, the slower it is.
[20:35:03] <DarkUranium> Smaller compilers (TCC, PCC) tend to be faster, due to performing fewer optimizations.
[20:35:06] <DarkUranium> Even when optimizing.
[20:36:25] <NRK[m]> TCC has pretty fast compile times
[20:36:26] <Kit> what compiler flags should i use if im making a binary for distribution
[20:36:41] <NRK[m]> it even has a "-run" flag IIRC
[20:38:01] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Remote host closed the connection)
[20:38:03] *** Quits: Dotz0cat (~Dotz0cat@h171.88.213.151.dynamic.ip.windstream.net) (Ping timeout: 252 seconds)
[20:39:38] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[20:40:15] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[20:40:22] *** Joins: kuber (~kuber@97-126-3-32.tukw.qwest.net)
[20:42:44] <pragma-> Kit: /release
[20:44:03] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[20:44:11] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 256 seconds)
[20:44:22] <Kit> wouldnt that be interpreted as a path?
[20:45:08] <pragma-> It's a flag for Microsoft's compiler.
[20:45:13] <Kit> oh
[20:45:16] <Kit> im using clang
[20:45:46] <Kit> on debian
[20:45:53] *** Quits: johnnyreb (~tth@user/johnnyreb) (Ping timeout: 268 seconds)
[20:46:12] *** Quits: simon323 (~simon323@2409:8a34:468:83d0:80e5:1992:5e66:41ca) (Quit: simon323)
[20:46:18] <pragma-> Well, do you want the binary to be fast or do you want it to be tiny?
[20:46:36] <Kit> what would the end user most likely want
[20:46:37] <pragma-> Do you want it to be self-contained or do you want it to use available libraries?
[20:46:51] <Kit> uh, probably available libs
[20:47:23] *** Joins: johnnyreb (~tth@user/johnnyreb)
[20:47:23] <pragma-> Best to just publish the source code and let them build it how they want. /me nods.
[20:48:20] <Kit> i mean ya
[20:48:26] <Kit> i am publishing the source
[20:48:32] *** Joins: engest (~engest@50.53.126.29)
[20:48:49] <Kit> but if i wanted to publish a binary too
[20:50:55] <pragma-> You'd probably want it to be statically linked then.
[20:51:18] <Kit> okay... how do i do that
[20:52:42] *** Quits: kuber (~kuber@97-126-3-32.tukw.qwest.net) (Quit: leaving)
[20:53:12] *** Joins: meator (~meator@user/meator)
[20:54:02] <Kit> sorry if im being rude
[20:55:32] <malkrister[m]> i think statically linked is how books and tutorials usually tell you to do it
[20:55:46] <malkrister[m]> i'm not sure how to dynamically link
[20:55:53] *** Joins: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com)
[20:56:09] <pragma-> Dynamic linking is the default, innit?
[20:56:16] <Kit> im mostly self taught and ive just been doing -l<lib>
[20:56:20] <acaciause> if your using gcc static linking is -l: 
[20:56:27] <acaciause> with colon 
[20:56:35] <Kit> im using clang
[20:56:43] * pragma- points at the -static flag
[20:56:49] <Kit> ooohhh
[20:57:25] <malkrister[m]> okay
[20:57:28] <malkrister[m]> i learned something
[20:59:32] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[20:59:39] <pragma-> Kit: But even then that resulting binary will only be able to run on certain linux systems. It will not run on OSX, Windows, certain linux systems, etc.
[21:01:47] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[21:01:55] *** Quits: gce108 (~gce@user/gce108) (Remote host closed the connection)
[21:02:08] *** Quits: Viewday11 (~Viewday@user/viewday) (Quit: Ping timeout (120 seconds))
[21:03:05] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Client Quit)
[21:04:00] *** Joins: ejjfunky (~ejjfunky@125.164.23.135)
[21:04:38] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 252 seconds)
[21:04:58] *** Parts: ejjfunky (~ejjfunky@125.164.23.135) ()
[21:05:15] <Kit> ya i realize that
[21:05:23] <Kit> but doesnt like
[21:05:26] *** Joins: monkey_ (~user@181.114.17.106)
[21:05:26] <Kit> what was it
[21:05:27] *** Quits: arminweigl (~arminweig@sourcehut/user/arminweigl) (Read error: Connection reset by peer)
[21:05:55] <Kit> it was some wbfs thing
[21:06:07] <Kit> that had a single bin that works on both linux and windows
[21:06:17] *** Quits: jusski (~user@78-63-85-123.static.zebra.lt) (Ping timeout: 256 seconds)
[21:06:21] *** Quits: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[21:06:24] <Kit> without wine
[21:07:09] *** Joins: leo__ (~leo@188-206-74-140.mobile.kpn.net)
[21:07:59] *** Quits: boB_K7IQ (~boB_K7IQ@ip98-177-87-213.ph.ph.cox.net) (Ping timeout: 256 seconds)
[21:08:07] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Ping timeout: 252 seconds)
[21:08:34] *** Joins: arminweigl (~arminweig@sourcehut/user/arminweigl)
[21:08:46] <acaciause> never heard of that
[21:09:06] *** Joins: plainoldcheese (~plainoldc@user/plainoldcheese)
[21:09:08] <acaciause> what was the file extension on the executable?
[21:09:11] *** Quits: lleo (~leo@188-206-74-140.mobile.kpn.net) (Ping timeout: 256 seconds)
[21:09:14] <Kit> .exe
[21:09:29] <Kit> idk
[21:09:35] *** Quits: arinov (~arinov@178.240.181.140) (Ping timeout: 252 seconds)
[21:09:36] <Kit> nvm
[21:09:39] *** Joins: the_lanetly_052_ (~the_lanet@185.30.88.193)
[21:09:45] <Kit> im probably neing really stupid rn
[21:10:15] <tk> no, I think that might be possible
[21:10:16] <acaciause> no idea :) might be something new I've never heard of
[21:10:18] <tk> weirder things have happened
[21:10:48] <acaciause> well ELF isn't supported on windows unless you use WSL
[21:11:10] <acaciause> and exe likewsise of linux, only accepted ELF
[21:11:10] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Ping timeout: 268 seconds)
[21:11:19] <acaciause> now if it were a python script or something, maybe
[21:12:01] *** Quits: arminweigl (~arminweig@sourcehut/user/arminweigl) (Read error: Connection reset by peer)
[21:12:30] *** Joins: plantman (~plantman@2601:405:4680:1b0::2)
[21:12:31] *** Quits: the_lanetly_052 (~the_lanet@194.135.152.72) (Ping timeout: 256 seconds)
[21:14:40] *** Joins: arminweigl (~arminweig@sourcehut/user/arminweigl)
[21:15:43] *** Joins: mongrel (uid508343@id-508343.ilkley.irccloud.com)
[21:16:08] *** Joins: boB_K7IQ (~boB_K7IQ@ip98-177-87-213.ph.ph.cox.net)
[21:20:35] *** Quits: boB_K7IQ (~boB_K7IQ@ip98-177-87-213.ph.ph.cox.net) (Ping timeout: 252 seconds)
[21:21:25] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[21:23:31] *** Quits: johnnyreb (~tth@user/johnnyreb) (Ping timeout: 252 seconds)
[21:23:57] *** Joins: johnnyreb (~tth@user/johnnyreb)
[21:25:34] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[21:30:29] *** Quits: arminweigl (~arminweig@sourcehut/user/arminweigl) (Read error: Connection reset by peer)
[21:31:37] *** Joins: serbest (~serbest@user/serbest)
[21:33:03] *** Joins: arminweigl (~arminweig@sourcehut/user/arminweigl)
[21:35:45] *** Quits: arminweigl (~arminweig@sourcehut/user/arminweigl) (Read error: Connection reset by peer)
[21:36:46] *** Joins: AmR (~AmREiSa@156.199.223.24)
[21:38:03] *** Joins: arminweigl (~arminweig@sourcehut/user/arminweigl)
[21:41:49] <rcf> a.out is still there I think 
[21:43:41] *** Quits: premultiplied (~premultip@69.84.6.130) (Quit: WeeChat 3.3)
[21:43:53] *** Joins: rgrinberg (~textual@187.223.250.159)
[21:44:47] *** Joins: premultiplied (~premultip@69.84.6.130)
[21:44:53] <premultiplied> #join gamedev
[21:45:02] *** Quits: premultiplied (~premultip@69.84.6.130) (Client Quit)
[21:45:53] *** Quits: serbest (~serbest@user/serbest) (Ping timeout: 252 seconds)
[21:47:02] *** Joins: arinov (~arinov@213.194.126.155)
[21:48:27] *** Quits: nuxil (~nuxil@141.195.51.213) (Ping timeout: 252 seconds)
[21:49:33] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 252 seconds)
[21:49:38] *** Quits: arminweigl (~arminweig@sourcehut/user/arminweigl) (Read error: Connection reset by peer)
[21:51:23] *** Quits: leo__ (~leo@188-206-74-140.mobile.kpn.net) (Ping timeout: 252 seconds)
[21:52:29] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (Ping timeout: 252 seconds)
[21:53:30] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[21:54:22] *** Joins: gitargy (~gitargy@76.78.94.79)
[21:54:54] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[21:55:02] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Quit: Leaving)
[21:55:25] *** Joins: Klinda (~superleag@user/klinda)
[21:59:16] *** Joins: VincentValentine (~VincentVa@79.126.87.86)
[22:02:15] *** Quits: admal (~admal@gateway/tor-sasl/admal) (Ping timeout: 276 seconds)
[22:02:51] *** Joins: admal (~admal@gateway/tor-sasl/admal)
[22:04:54] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[22:05:18] *** Joins: bongobrown (~bongobrow@cpe-76-185-215-2.satx.res.rr.com)
[22:06:05] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[22:06:19] *** Joins: neiluj (~neiluj@2a01:e0a:1f2:d960:bcae:ad27:68aa:638f)
[22:07:17] <neiluj> Hello! I'm writing a library to work with polynomials. Problem is, they are allocated to the heap, so that the program consist in a lot of allocations/deallocs
[22:07:50] <neiluj> Is there a way to avoid that? by allocating a big chunk of memory and writing polynomials in it?
[22:09:06] <tk> neiluj: if your data structures are of uniform size, you can create a simple allocator
[22:09:33] <tk> you can use a bitset as a freelist, and expand it as necessary
[22:10:11] <tk> then malloc becomes fast and so does free
[22:11:33] *** Quits: the_lanetly_052_ (~the_lanet@185.30.88.193) (Ping timeout: 252 seconds)
[22:13:02] <neiluj> tk: good idea, thanks!
[22:13:20] <fizzie> I like the uniform sized pool allocators that make the free list be pointers inside the free elements.
[22:14:11] <fizzie> And a lot of programs get away with the "only actually free anything once you're all done" strategy, but that's more circumstantial.
[22:14:13] *** Joins: okt (560965ea7b@user/okt)
[22:14:33] *** Joins: mahmutov (~mahmutov@5.176.7.214)
[22:14:54] <caze> neiluj: Why is a lot of allocations/deallocs a problem?
[22:15:08] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[22:15:23] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[22:15:56] *** Quits: terminalpusher (~terminalp@2a01:586:a4a5:1:393:e590:b69b:2236) (Remote host closed the connection)
[22:16:22] *** Quits: kdc (~kdc@196.211.197.159) (Remote host closed the connection)
[22:19:09] <Thedarkb-Desktop> If you jump into the middle of a for loop, does the code before the first semicolon in the loop declaration get executed?
[22:20:12] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[22:20:48] <fizzie> No, it's not.
[22:21:21] *** Joins: shugo_ (~shugo@user/shugo)
[22:21:23] <Thedarkb-Desktop> Yup, just double checked with a little test program and it's not.
[22:21:25] <shugo_> hi
[22:21:43] <Thedarkb-Desktop> I was just making sure because I want to do something janky and async related.
[22:24:18] <shugo_> i want to check what i am doing wrong in my solution for a coding problem, is this good place to ask ?
[22:28:59] *** Joins: superdupond (~Kev@2a01cb0400149f0034a31c71df36b337.ipv6.abo.wanadoo.fr)
[22:31:17] *** Quits: monkey_ (~user@181.114.17.106) (Ping timeout: 256 seconds)
[22:32:07] *** Joins: monkey_ (~user@181.114.17.106)
[22:32:19] <neiluj> caze: because this operation has a cost
[22:32:48] <neiluj> especially if they represent a "large portion" of the code
[22:37:23] *** Joins: kdc (~kdc@196.211.197.159)
[22:42:07] *** Quits: bongobrown (~bongobrow@cpe-76-185-215-2.satx.res.rr.com) (Quit: Leaving)
[22:42:35] *** Joins: bongobrown (~bongobrow@cpe-76-185-215-2.satx.res.rr.com)
[22:45:37] *** Joins: rgrinberg (~textual@187.223.248.37)
[22:46:23] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 252 seconds)
[22:46:56] <quartz> Hello. I'm writing a program that is similar to wget in that it downloads a file from a remote server, such as an index.html file. I don't want to download the header lines, just the actual source content of the file. I've written this code: https://godbolt.org/z/zs7hf43dx  but I'm having trouble ignoring the header lines. I try doing this at line 88 but it does not work :(
[22:47:03] <quartz> And I'm wondering what I'm doing wrong.
[22:49:25] *** Quits: ARoxdale (~ARoxdale@84.203.26.40) (Ping timeout: 256 seconds)
[22:50:39] *** Quits: plainoldcheese (~plainoldc@user/plainoldcheese) (Quit: WeeChat 3.3)
[22:50:57] *** Joins: plainoldcheese (~plainoldc@user/plainoldcheese)
[22:51:09] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 252 seconds)
[22:51:14] <Twix> I didn't went through your code in detail, but on a first look i think it might be too naive
[22:52:55] <quartz> How so
[22:52:59] <Twix> you need a bit more sophisticated algorithm for receiving data. Nobody guarantees you, that you'll always get complete lines from fgets
[22:53:35] <Twix> so you need atleast build your code in a way, that you can even handle incomplete lines so you can parse the headers and the http control messages
[22:53:51] *** kish` is now known as Tesla
[22:54:46] <Twix> then skipping all the header lines might work, until you get to the payload
[22:55:11] <Twix> but getting one 1k buffer after another and expecting always complete lines in there, is thought to simple
[22:55:29] <quartz> But I thought using fgets would ensure that I reached the end of a line because fgets (one of the conditions), is that it stops after reading \n
[22:55:51] <quartz> Yeah I just wanted to get this thing to work first, than iron out details like that, but that's  a good point
[22:56:29] *** Joins: monkey_` (~user@181.114.17.106)
[22:57:59] *** Quits: monkey_ (~user@181.114.17.106) (Ping timeout: 256 seconds)
[22:58:17] *** Quits: gproto23 (~gproto23@user/gproto23) (Quit: Leaving)
[22:58:35] *** Joins: gproto23 (~gproto23@user/gproto23)
[22:58:45] *** Joins: serbest (~serbest@user/serbest)
[22:59:25] *** Joins: rgrinberg (~textual@187.223.144.204)
[23:01:43] *** Quits: marlboro (~i.am@user/marlboro) (Quit: I come down here for a fat woman and that's what I'm havin.)
[23:01:53] <Twix> i don't find the concentration to go though your code in detail. I'll get something to eat and try again later :D
[23:02:25] *** Quits: eXeC64 (5ff8a84e19@2604:bf00:561:2000::f9) (Remote host closed the connection)
[23:02:33] *** Joins: exec64 (5ff8a84e19@2604:bf00:561:2000::f9)
[23:03:33] *** Quits: bongobrown (~bongobrow@cpe-76-185-215-2.satx.res.rr.com) (Quit: Leaving)
[23:03:41] <quartz> OK thanks.
[23:03:52] *** Joins: bongobrown (~bongobrow@cpe-76-185-215-2.satx.res.rr.com)
[23:04:38] *** Joins: puke (~puke@user/puke)
[23:04:43] *** Quits: serbest (~serbest@user/serbest) (Ping timeout: 252 seconds)
[23:06:33] *** Quits: geeknix (~pi@2001:e68:5432:d6a8:64df:806:e8d6:354c) (Ping timeout: 252 seconds)
[23:09:29] *** Quits: rahl (~rahl@102.114.5.167) (Ping timeout: 252 seconds)
[23:10:20] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:5d10:8850:6285:4e0e)
[23:11:29] *** Joins: rahl (~rahl@102.114.118.74)
[23:11:31] *** Quits: monkey_` (~user@181.114.17.106) (Ping timeout: 256 seconds)
[23:12:56] *** Joins: hxx (~hxx@c-24-30-27-91.hsd1.ga.comcast.net)
[23:14:53] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[23:15:14] *** Joins: u0_a391 (~u0_a391@2600:380:5e26:855a:fac3:75a1:eb32:4066)
[23:15:33] *** Quits: rgrinberg (~textual@187.223.144.204) (Ping timeout: 256 seconds)
[23:16:38] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[23:16:59] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
[23:17:44] *** Quits: mahmutov (~mahmutov@5.176.7.214) (Ping timeout: 252 seconds)
[23:19:31] *** Quits: Kit (~u0_a391@64.85.173.130) (Ping timeout: 256 seconds)
[23:19:45] *** Joins: geeknix (~pi@2001:e68:5432:3223:5ebb:b60a:8745:12b9)
[23:20:19] <quartz> I try to use a flag to determine where I am in the input stream, but it still does not come out right, not sure why. https://godbolt.org/z/d8W8bvTr9
[23:21:00] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Read error: Connection reset by peer)
[23:21:08] *** Quits: exec64 (5ff8a84e19@2604:bf00:561:2000::f9) (Remote host closed the connection)
[23:21:17] *** Joins: exec64 (5ff8a84e19@2604:bf00:561:2000::f9)
[23:22:27] <ioxzev1z> quartz, learn to use getaddrinfo for socket related stuff, much easier.
[23:23:03] *** Joins: nvmd (~nvmd@user/nvmd)
[23:23:50] <quartz> ioxzev1z: Really?
[23:24:00] <ioxzev1z> you shouldn't even think about inet_addr(), htons(), etc. sockaddr_in is used for IPv4, sockaddr_in6 for IPv6. At this time you shouldn't even be writing code that distuinguishes between IPv4/6
[23:24:37] <quartz> Oh
[23:24:38] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[23:25:32] <ioxzev1z> x = getaddrinfo; for(y in x) { socket(...); connect/bind(...); if(server) { listen(...) } is how the function looks. Use sockaddr_storage for IP addresses in the functions in my pseudocode
[23:25:48] <ioxzev1z> sockaddr_storage is big enough to hold either 4 or 6 addresses
[23:26:21] <quartz> Yeah, this is just for a simple assignment though. The prof wants me to use the functions I have in the code.
[23:26:32] <quartz> This assignment stumped me more than I thought it would
[23:26:37] <ioxzev1z> Ok, tell the professor to read "man getaddrinfo"
[23:27:04] <quartz> Hahaha
[23:27:19] <ioxzev1z> In just about any simple network code, if you even think about IPv4/6 you're doing it wrong.
[23:27:28] *** Quits: hxx (~hxx@c-24-30-27-91.hsd1.ga.comcast.net) (Quit: Leaving)
[23:27:29] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[23:27:32] <quartz> I just want to get it working already. I'm so close. The damn thing just needs to read past the header lines in the HTTP request
[23:27:52] *** Quits: alch (~alch@151.82.93.95) (Read error: Connection reset by peer)
[23:29:43] <ioxzev1z> quartz, while(1) { rv = recv(into buf); if(rv > 0) { for each \n in buf { add to container of lines; if(bytes left in buf but no \n at end) { add the start of buf such that new data is appended; } for line in buf_list { parse_line(line); }
[23:29:46] <ioxzev1z> Something like that
[23:29:50] *** Quits: bongobrown (~bongobrow@cpe-76-185-215-2.satx.res.rr.com) (Quit: Leaving)
[23:31:24] *** Joins: alch (~alch@151.34.157.155)
[23:31:35] <ioxzev1z> As said above, there is no guarantee that read will give you lines. Can be less than, equal to or more than one line. Read into a buffer then for line in buf { ... };
[23:32:59] <ioxzev1z> Though the fgets stopping on \n is interesting
[23:33:17] <ioxzev1z> If that works you should go with it
[23:33:37] <ioxzev1z> fflush on a input descriptor isn't useful iirc.
[23:34:19] *** Parts: exec64 (5ff8a84e19@2604:bf00:561:2000::f9) ()
[23:34:22] <quartz> OK
[23:34:39] <quartz> So don't use fgetc to read in lines from the file descriptor?
[23:35:06] <quartz> Hmmm this is throwing me for a loop haha
[23:35:14] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[23:36:15] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Ping timeout: 252 seconds)
[23:38:02] <ioxzev1z> I'm trying to figure out why you have two fgets calls
[23:38:21] <ioxzev1z> Surely you want for(;;) { fgets(...); ... }
[23:38:31] <ioxzev1z> Break from the loop when you meet your condition
[23:38:35] <quartz> I thought that fgets would terminate once it sees a \n
[23:38:52] <quartz> Like... fgets would take in a line, such as HTTP/1.0 200 OK
[23:39:00] <quartz> Than I'd check for the 200 to see if its' there.
[23:39:10] <quartz> I'm following these directions https://bpa.st/UVDA
[23:39:33] <ioxzev1z> But you have fgets on 79, then a loop of fgets on 88
[23:40:05] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:ec04:5b98:87f7:9e92)
[23:40:05] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:ec04:5b98:87f7:9e92) (Changing host)
[23:40:05] *** Joins: skapata (~Skapata@user/skapata)
[23:40:20] <quartz> Because I needed fgets to get another line of input
[23:40:29] <quartz> My understanding of it is probably wrong.
[23:41:40] <ioxzev1z> Also on 82, what happens if (because you don't actually parse the data), "200" occurs somewhere unrelated to what you're expecting?
[23:42:05] <quartz> Yeah true, I feel that because it's a simple assignment, that won't happen
[23:42:20] <quartz> I just want to get it working first, than kinda iron tha tstuff out
[23:43:06] <ioxzev1z> 72/74 you fflush the descriptor twice, why not drop 72? Also what do you expect to get from flushing the descriptor?
[23:43:34] *** Joins: Betal (~Betal@user/betal)
[23:43:42] <quartz> Uhhh
[23:45:30] <ioxzev1z> Write the pseudocode for this in your own words, then convert to C
[23:46:12] <quartz> Someone in here told me I needed fflush
[23:46:19] <quartz> For the descriptor.
[23:47:12] <ioxzev1z> man fflush "For input streams associated with seekable files (e.g., disk files, but not pipes or terminals), fflush() discards any  buffered  data  that has been fetched from the underlying file, but has not been consumed by the application.". In your code you just created the socket, so you're either flushing something sent by the server (therefore discarding possibly valid data), or doing a no-op
[23:48:39] <ioxzev1z> flushing is usually used on output, not input
[23:49:55] <quartz> Hmmmm
[23:50:31] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Read error: Connection reset by peer)
[23:55:03] <quartz> ioxzev1z: Can't I just use strstr to search for \r\n, than start writing to the file?
[23:55:12] <quartz> I'm trying to implement your pseudocode
[23:55:35] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[23:55:48] <ioxzev1z> Explain to me in plain english exactly what steps you want to do, because at this point I'm confused what you're searching for in the input data
[23:56:04] <ioxzev1z> You want to skip the first \r\n ? the third? what?
[23:57:24] <quartz> So, apparently the response from the server will have a few header lines, than a blank line which is really just a \r\n. After that \r\n, the actual file data come after it, which is what I want.
[23:59:02] *** Joins: rgrinberg (~textual@187.223.144.204)
[23:59:35] <ioxzev1z> Ok, so you just read blocks of data (e.g. 1024 bytes per read). You then parse that block into lines, if you have an incomplete line at the final line (e.g. no \r\n) that goes to the beginning of the buffer that you then append to on the next read. Once you have the lines, you loop through each one and (assuming you're looking for a line containing only \r\n), you then after finding that start saving the rest of the data you read
