[01:41:49] *** Quits: subbu (~subbu@user/subbu) (Ping timeout: 252 seconds)
[02:02:53] *** Joins: subbu (~subbu@user/subbu)
[02:08:13] *** Quits: subbu (~subbu@user/subbu) (Quit: Leaving)
[03:39:17] <byteit101[m]> Oh, exception in base irb!
[03:39:18] <byteit101[m]> ArgumentError: Java package 'java.lang' does not have a method `instance_methods' with 1 argument
[03:39:18] <byteit101[m]>             method_missing at org/jruby/javasupport/JavaPackage.java:259
[03:43:21] <headius> Sounds like some introspection gone wild
[03:43:33] <headius> We have problems with those packages all the time
[03:43:40] <headius> File something please
[03:50:17] <byteit101[m]> Filed: https://github.com/jruby/jruby/issues/6885
[04:01:32] <headius> Ahh yeah tab completion digs deep
[04:01:59] <headius> We need to figure something out for those package modules...they are sort-of blank slates but don't really work right
[05:26:29] <byteit101[m]> I think there is something that needs be updated here:
[05:26:30] <byteit101[m]> jruby-9.3.0.0 :004 > uu = UL.become_java!
[05:26:30] <byteit101[m]>  => #<Java::JavaLang::Class: rubyobj.UL> 
[05:26:30] <byteit101[m]> jruby-9.3.0.0 :005 > UL.java_class
[05:26:30] <byteit101[m]>  => #<Java::JavaLang::Class: java.util.ArrayList> 
[05:29:26] <headius> Wat
[05:29:46] <byteit101[m]> class UL < java.util.ArrayList; java_signature 'int size()'; def size(); super + 3; end; end
[05:29:47] <byteit101[m]> ^ my def
[06:01:33] <byteit101[m]> Ah, found issue. PR incoming
[06:22:58] <byteit101[m]> https://github.com/jruby/jruby/pull/6886
[06:23:13] <byteit101[m]> Turns out I forgot to set both the instance and the internal variable
[07:02:17] <byteit101[m]> Update: it was modules! (super issue)
[07:07:31] <byteit101[m]> super() uses reflection, and fails the super call. manually invoking the bridge works with self.java_class.methods.select{|x|x.name.include? "super"}.first.invoke(self.to_java, *args)
[07:07:43] <byteit101[m]> the target method is protected
[07:08:27] <byteit101[m]> Should jruby use the synthetic super$ bridge path for extensions instead of reflection?
[08:25:57] <headius> Aha
[08:27:43] <headius> Yeah we probably should be using the bridges most of the time until we can rig it to use method handles or something
[08:45:25] <headius> We know it will always work
[19:30:21] *** Quits: demon36[m] (~demon36ma@2001:470:69fc:105::dc32) (Quit: You have been kicked for being idle)
