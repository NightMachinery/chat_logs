[05:34:00] <basshelal[m]> We can always add a function in `Platform` or one of the supported `Platfom`s like `Linux` and `Darwin` (or even a new superclass for those called `Unix`) that returns you the "canonical Unix lib locations" like:
[05:34:00] <basshelal[m]> `List<String> unixPaths =  Linux.getUnixLibPaths() // contains "/lib/" "/usr/lib" "/usr/local/lib" and friends`
[05:34:00] <basshelal[m]> Then you can add the Unix paths in your search when you need to load the library.
[05:38:06] <basshelal[m]> fzakaria: is right regarding having "purity" that hardcoding shouldn't be the solution, but goddamn macOS is so annoying and so inconvenient. Again check my comment regarding this on GitHub maybe I'm doing something terribly wrong and I'm an idiot (probable) but I've tried so much and nothing is helpful, the JVM source code indicates we should have those lib paths (not `/usr/local/lib` and maybe for good reason) but I cannot get them for the
[05:38:06] <basshelal[m]> life of me
[07:51:22] <fzakaria[m]> basshelal: i don't have MacOS but please run:
[07:51:22] <fzakaria[m]> ```
[07:51:22] <fzakaria[m]> java -XshowSettings:properties
[07:51:22] <fzakaria[m]> ```
[07:53:28] *** Joins: Igneous (~igneous@user/igneous)
[08:49:08] *** Quits: Igneous (~igneous@user/igneous) (Quit: leaving)
[10:54:13] *** Quits: sagax (~sagax@213.138.71.146) (Remote host closed the connection)
[12:21:46] *** Joins: sagax (~sagax@213.138.71.146)
[16:30:59] <basshelal[m]> fzakaria: https://gist.github.com/basshelal/806c46fb409d35a26feac23ad7ac5793
[16:37:52] <basshelal[m]> fzakaria: https://gist.github.com/basshelal/0f77bf5f2fb192707acd33aa7b2e0f85
[16:38:36] <basshelal[m]> The second one is from a JDK 8 JVM, the first one was 16
[16:39:22] <basshelal[m]> Maybe this is because of "System Integrity Protection" ?
[16:39:25] <basshelal[m]> https://en.wikipedia.org/wiki/System_Integrity_Protection
[16:39:41] <basshelal[m]> https://developer.apple.com/documentation/security/disabling_and_enabling_system_integrity_protection
[19:54:44] <fzakaria[m]> They all have /usr/lib/java which is great and /Library/Java/Extensions.
[19:54:44] <fzakaria[m]> Those look to me like idiomatic folders in MacOS BSD where to find dylib
[19:55:05] <headius> Good morning
[19:58:40] <basshelal[m]> > <@fzakaria:matrix.org> They all have /usr/lib/java which is great and /Library/Java/Extensions.
[19:58:40] <basshelal[m]> > Those look to me like idiomatic folders in MacOS BSD where to find dylib
[19:58:40] <basshelal[m]> Yeah they all have `/usr/lib/java` but all these folders are the dylibs for java and the jvm, not the "system" dylibs or any user installed dylibs
[20:00:26] <basshelal[m]> fzakaria I could be thinking too much from a GNU/Linux mindset though since macOS no longer actually uses Unix lib paths for its system libs and instead uses a different format and path. I believe its like `CoreAudio.Framework` which is like a directory to resources relating to the actual system libs
[20:00:56] <basshelal[m]> This doesn't matter to us, it's just to say that macOS has become very different from Unix and GNU/Linux
[20:11:02] <basshelal[m]> Morning headius ðŸ˜Š
