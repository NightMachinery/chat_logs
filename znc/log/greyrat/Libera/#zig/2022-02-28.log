[00:03:53] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[00:08:04] *** Joins: rgrinberg (~textual@2806:101e:7:8d89:9996:a352:abd6:f191)
[00:26:53] *** Joins: cturtle (~cturtle@166.70.17.90)
[00:26:56] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d0d7:ba7d:5a5a:630f) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:27:13] *** Quits: cturtle (~cturtle@166.70.17.90) (Client Quit)
[00:39:22] *** Joins: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr)
[00:43:24] *** Quits: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr) (Ping timeout: 240 seconds)
[00:45:32] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[01:00:46] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Read error: Connection reset by peer)
[01:02:15] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[01:11:32] *** Joins: ltriant (~ltriant@118.102.122.246)
[01:21:41] *** Joins: Guest67 (~Guest67@192-184-162-173.static.sonic.net)
[01:23:27] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d0d7:ba7d:5a5a:630f)
[01:31:23] *** Joins: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr)
[01:36:09] *** Joins: jnicho31 (~jnicho31@c-71-229-177-26.hsd1.co.comcast.net)
[01:45:49] *** Joins: Tekk_ (~tekk@86.106.121.230)
[01:46:56] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:e14b:875c:3570:34de) (Quit: WeeChat 3.3)
[01:48:54] *** Quits: Tekk (~tekk@cpe-76-182-45-53.nc.res.rr.com) (Ping timeout: 272 seconds)
[01:57:06] *** Quits: frmdstryr (~jrm@172.58.203.128) (Ping timeout: 260 seconds)
[02:02:55] *** Joins: sebonirc (~sebonirc@8.9.88.219)
[02:06:29] *** Quits: Guest67 (~Guest67@192-184-162-173.static.sonic.net) (Quit: Client closed)
[02:09:18] *** Quits: notapenguin (~ryu@2804:14d:5685:96c7:8b7a:60f:54fc:4777) (Quit: WeeChat 3.4)
[02:19:03] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 250 seconds)
[02:20:06] *** Quits: rgrinberg (~textual@2806:101e:7:8d89:9996:a352:abd6:f191) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:27:34] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[02:29:41] *** Joins: beepbooptheory (~mik@c-73-13-112-194.hsd1.pa.comcast.net)
[02:30:42] *** Quits: yrlf (~yrlf@omnath.yrlf.at) (Quit: The Lounge - https://thelounge.chat)
[02:31:45] *** Joins: yrlf (~yrlf@omnath.yrlf.at)
[02:34:17] *** Quits: jnicho31 (~jnicho31@c-71-229-177-26.hsd1.co.comcast.net) (Ping timeout: 256 seconds)
[02:39:28] *** Joins: bindu_ (~bindu@user/bindu)
[02:39:55] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Ping timeout: 240 seconds)
[02:39:55] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 240 seconds)
[02:40:29] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[02:41:26] *** bindu_ is now known as bindu
[02:42:28] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d0d7:ba7d:5a5a:630f) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:52:09] *** Joins: mariogt (~mariogt@190.215.144.169)
[02:57:06] *** Joins: rgrinberg (~textual@187.223.63.190)
[03:03:38] *** Quits: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr) (Ping timeout: 272 seconds)
[03:07:07] *** Joins: jnicho31 (~jnicho31@c-71-229-177-26.hsd1.co.comcast.net)
[03:09:14] *** Quits: jemius (~imperator@200116b82d9eb1000e05f482ebcbf967.dip.versatel-1u1.de) (Quit: Leaving)
[03:10:57] *** Quits: mariogt (~mariogt@190.215.144.169) (Quit: Client closed)
[03:15:52] *** Joins: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr)
[03:19:57] *** Quits: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr) (Ping timeout: 240 seconds)
[03:21:05] *** Quits: frett27 (~frett27@2a01:e0a:58a:6c00:3d06:d1d4:a37a:fad9) (Ping timeout: 256 seconds)
[03:24:50] *** Joins: Kingsquee (~Kingsquee@node-1w7jr9plitnrvjel910k7mqdr.ipv6.telus.net)
[03:37:45] *** Quits: jnicho31 (~jnicho31@c-71-229-177-26.hsd1.co.comcast.net) (Ping timeout: 256 seconds)
[03:46:37] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 240 seconds)
[03:47:44] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[03:49:59] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 256 seconds)
[03:50:40] *** Joins: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr)
[03:51:40] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[03:53:02] *** Quits: Gustavo6046_ (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[03:55:34] *** Quits: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr) (Ping timeout: 272 seconds)
[03:58:23] *** Joins: xd1le (~xd1le@user/xd1le)
[04:00:46] *** Joins: rv1sr (~rv1sr@user/rv1sr)
[04:02:25] *** Quits: xackus (~xackus@185.15.0.3) (Ping timeout: 256 seconds)
[04:07:13] *** Joins: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr)
[04:12:03] *** Quits: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr) (Ping timeout: 256 seconds)
[04:12:27] *** Quits: rv1sr (~rv1sr@user/rv1sr) ()
[04:20:00] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[04:25:00] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 240 seconds)
[04:27:12] *** Joins: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
[04:40:57] *** Joins: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr)
[04:42:44] *** Joins: nickersonm (~nickerson@ip98-185-211-111.sb.sd.cox.net)
[04:45:45] *** Quits: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr) (Ping timeout: 256 seconds)
[04:59:42] *** Joins: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr)
[05:04:36] *** Quits: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr) (Ping timeout: 272 seconds)
[05:16:25] *** Joins: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr)
[05:21:11] *** Quits: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr) (Ping timeout: 256 seconds)
[05:21:43] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 272 seconds)
[05:24:14] *** Quits: beepbooptheory (~mik@c-73-13-112-194.hsd1.pa.comcast.net) (Ping timeout: 272 seconds)
[05:51:32] *** Joins: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr)
[05:56:19] *** Quits: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr) (Ping timeout: 256 seconds)
[06:10:32] *** Joins: moog (~moog@107.126.53.115)
[06:12:01] *** Quits: moog_ (~moog@107.126.53.115) (Ping timeout: 245 seconds)
[06:25:17] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 252 seconds)
[06:25:50] *** Joins: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr)
[06:30:19] *** Quits: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr) (Ping timeout: 256 seconds)
[06:46:18] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:00:26] *** Joins: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr)
[07:04:36] *** Quits: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr) (Ping timeout: 240 seconds)
[07:11:43] *** Joins: h4ze (~haze@user/haze)
[07:13:24] *** Quits: haze (~haze@user/haze) (Ping timeout: 240 seconds)
[07:13:24] *** h4ze is now known as haze
[07:15:19] *** Quits: Kingsquee (~Kingsquee@node-1w7jr9plitnrvjel910k7mqdr.ipv6.telus.net) ()
[07:34:32] *** Joins: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr)
[07:38:53] *** Quits: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr) (Ping timeout: 256 seconds)
[08:05:24] *** Quits: ur5us (~ur5us@203.86.198.200) (Ping timeout: 240 seconds)
[08:09:15] *** Joins: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr)
[08:09:49] *** Quits: sebonirc (~sebonirc@8.9.88.219) (Quit: sebonirc)
[08:13:13] *** Quits: terinjokes (~terinjoke@2604:a880:2:d0::227b:f001) (Quit: ZNC 1.8.2 - https://znc.in)
[08:13:24] *** Quits: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr) (Ping timeout: 240 seconds)
[08:13:56] *** Joins: terinjokes (~terinjoke@2604:a880:2:d0::227b:f001)
[08:14:50] *** Quits: tsmanner (~tsmanner@pool-100-40-199-193.pghkny.fios.verizon.net) (Remote host closed the connection)
[08:29:40] *** Joins: jnicho31 (~jnicho31@c-71-229-177-26.hsd1.co.comcast.net)
[08:35:52] *** Quits: jnicho31 (~jnicho31@c-71-229-177-26.hsd1.co.comcast.net) (Quit: Client closed)
[08:42:49] *** Joins: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr)
[08:45:45] *** Quits: semarie (~semarie@user/semarie) (Ping timeout: 256 seconds)
[08:47:32] *** Quits: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr) (Ping timeout: 272 seconds)
[08:51:03] *** Joins: semarie (~semarie@user/semarie)
[08:51:04] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[08:51:27] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[08:59:53] *** Joins: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr)
[09:00:12] *** Joins: octetta (~octetta@cpe-23-242-168-158.socal.res.rr.com)
[09:00:51] *** Quits: octetta (~octetta@cpe-23-242-168-158.socal.res.rr.com) (Remote host closed the connection)
[09:04:38] *** Quits: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr) (Ping timeout: 272 seconds)
[09:17:10] *** Joins: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr)
[09:22:01] *** Quits: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr) (Ping timeout: 256 seconds)
[09:41:38] *** Joins: ur5us (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22)
[09:42:02] *** Quits: squeek502 (~squeek502@user/squeek502) (Remote host closed the connection)
[09:50:37] *** Joins: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr)
[09:55:09] *** Quits: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr) (Ping timeout: 256 seconds)
[09:59:12] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[10:06:33] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[10:08:15] *** Joins: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr)
[10:12:36] *** Quits: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr) (Ping timeout: 240 seconds)
[10:13:57] *** Quits: ur5us (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22) (Ping timeout: 240 seconds)
[10:29:07] *** Joins: ur5us (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22)
[10:29:37] *** Quits: rgrinberg (~textual@187.223.63.190) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:30:25] *** Joins: squeek502 (~squeek502@user/squeek502)
[10:34:06] *** Quits: ur5us (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22) (Ping timeout: 245 seconds)
[10:42:27] *** Joins: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr)
[10:47:14] *** Quits: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr) (Ping timeout: 272 seconds)
[10:53:33] *** Joins: tenshi (~red@user/tenshi)
[10:58:43] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:8087:fa58:173a:8b14)
[11:00:57] *** Joins: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr)
[11:05:17] *** Quits: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr) (Ping timeout: 240 seconds)
[11:05:59] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 256 seconds)
[11:20:57] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:8087:fa58:173a:8b14) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:23:41] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d0d7:ba7d:5a5a:630f)
[11:33:03] *** Joins: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr)
[11:37:24] *** Quits: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr) (Ping timeout: 240 seconds)
[11:43:13] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[11:46:08] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 272 seconds)
[11:48:29] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d0d7:ba7d:5a5a:630f) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[11:50:36] *** Joins: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr)
[11:55:02] *** Quits: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr) (Ping timeout: 240 seconds)
[11:55:25] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 240 seconds)
[12:00:35] *** Quits: wilsonk (~wilsonk@S0106001b11030a94.cg.shawcable.net) (Ping timeout: 250 seconds)
[12:09:18] *** Joins: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr)
[12:13:24] *** Quits: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr) (Ping timeout: 240 seconds)
[12:25:06] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[12:29:15] *** Joins: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr)
[12:30:08] *** Quits: polykernel (~polykerne@user/polykernel) (Quit: You have been kicked for being idle)
[12:30:08] *** Quits: da_lorax (~daloraxye@2001:470:69fc:105::1:5e15) (Quit: You have been kicked for being idle)
[12:30:08] *** Quits: Andy[m] (~anparrama@2001:470:69fc:105::1:6826) (Quit: You have been kicked for being idle)
[12:55:25] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:01:30] *** Quits: ltriant (~ltriant@118.102.122.246) (Ping timeout: 272 seconds)
[13:07:17] *** Joins: jemius (~jemius@2a01:4f8:c0c:8564::1)
[13:08:36] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[13:08:45] *** Joins: lehmrob (~rd7@business-176-095-223-081.static.arcor-ip.net)
[13:22:38] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 260 seconds)
[13:24:06] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d0d7:ba7d:5a5a:630f)
[13:24:49] *** Joins: rv1sr (~rv1sr@user/rv1sr)
[13:28:44] *** Quits: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr) (Ping timeout: 272 seconds)
[13:35:32] *** Quits: xd1le (~xd1le@user/xd1le) (Quit: xd1le)
[13:41:57] *** Joins: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr)
[13:46:17] *** Quits: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr) (Ping timeout: 240 seconds)
[13:46:45] *** Joins: Gunthor (~RandomUse@2a02:908:1866:ffa0::bb33)
[13:51:33] *** Quits: haliucinas (~haliucina@5.20.153.21) (Remote host closed the connection)
[13:52:12] *** Joins: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr)
[13:55:12] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[13:56:34] *** Quits: Gunthor (~RandomUse@2a02:908:1866:ffa0::bb33) (Quit: Leaving)
[13:57:05] *** Joins: haliucinas (~haliucina@5.20.153.21)
[14:03:17] *** Joins: ss4 (~wootehfoo@user/wootehfoot)
[14:04:29] *** Quits: geoffhill (~geoffhill@174-21-77-129.tukw.qwest.net) (Quit: geoffhill)
[14:04:51] *** Joins: geoffhill (~geoffhill@174-21-77-129.tukw.qwest.net)
[14:07:05] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 256 seconds)
[14:11:32] *** Quits: ss4 (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[14:11:52] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[14:12:25] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[14:27:21] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[14:29:11] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d0d7:ba7d:5a5a:630f) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[14:32:51] *** Quits: cursey (~cursey@user/cursey) (Quit: bye)
[14:44:50] *** Quits: geoffhill (~geoffhill@174-21-77-129.tukw.qwest.net) (Quit: geoffhill)
[14:45:13] *** Joins: geoffhill (~geoffhill@174-21-77-129.tukw.qwest.net)
[14:49:26] *** Joins: cursey (~cursey@user/cursey)
[15:06:49] *** Joins: Gunthor (~Gunthor@2a02:908:1866:ffa0::bb33)
[15:13:42] <Gunthor> Hi! I have a quick question, maybe someone can help me with this. From what I understand (and have seen so far), zig will usually only really compile functions that are referenced by "live" code, So, functions that are not referenced will not be compiled. However, I seem to remember having read that there is a way to tell the compiler to treat all functions in a file as referenced. However, I can't find that any more... does anyone know how o do 
[15:13:42] <Gunthor> that?
[15:16:04] <ifreund> Gunthor: you can always do _ = foo; in a to "reference" a delclaration be it function or otherwise
[15:16:22] <ifreund> there is a std.testing.refAllDecls() that does this for all declarations in a file
[15:17:06] <ifreund> s/file/container type/
[15:17:15] <Gunthor> yes, that was it. Excellent, thanks!
[15:17:17] <ifreund> files are structs, you can get the struct type with `@This()`
[15:20:29] *** Quits: Levy[m] (~tauoverpi@2001:470:69fc:105::1:71a5) (Quit: Reconnecting)
[15:20:42] *** Joins: Levy[m] (~tauoverpi@2001:470:69fc:105::1:71a5)
[15:30:36] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 240 seconds)
[15:41:10] *** Joins: msimm (~msimm@p200300cd4701a600689cb10d4978547c.dip0.t-ipconnect.de)
[15:49:43] *** Quits: jemius (~jemius@2a01:4f8:c0c:8564::1) (Remote host closed the connection)
[15:55:13] *** Quits: Gunthor (~Gunthor@2a02:908:1866:ffa0::bb33) (Quit: Leaving)
[15:57:49] *** Quits: haze (~haze@user/haze) (Ping timeout: 256 seconds)
[15:58:34] *** Joins: haze (~haze@user/haze)
[16:04:17] *** Joins: cabal704 (~cabal704@user/cabal704)
[16:05:10] *** Quits: geoffhill (~geoffhill@174-21-77-129.tukw.qwest.net) (Quit: geoffhill)
[16:05:33] *** Joins: geoffhill (~geoffhill@174-21-77-129.tukw.qwest.net)
[16:09:00] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d0d7:ba7d:5a5a:630f)
[16:24:55] <Levy[m]> test
[16:30:31] *** Quits: geoffhill (~geoffhill@174-21-77-129.tukw.qwest.net) (Quit: geoffhill)
[16:30:53] *** Joins: geoffhill (~geoffhill@174-21-77-129.tukw.qwest.net)
[16:36:24] *** Joins: alxarch_ (~alxarch@ppp-94-66-221-114.home.otenet.gr)
[16:38:44] *** Quits: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr) (Ping timeout: 272 seconds)
[16:39:08] *** Joins: jemius (~jemius@2a01:4f8:c0c:8564::1)
[16:39:39] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 252 seconds)
[16:40:41] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:40:49] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[16:41:09] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:41:15] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[16:41:30] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:42:06] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[17:22:51] *** Quits: rv1sr (~rv1sr@user/rv1sr) ()
[17:29:56] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d0d7:ba7d:5a5a:630f) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:30:30] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[17:31:15] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[17:31:56] *** Quits: moog (~moog@107.126.53.115) (Ping timeout: 272 seconds)
[17:39:37] *** Quits: jemius (~jemius@2a01:4f8:c0c:8564::1) (Remote host closed the connection)
[17:39:51] *** Joins: jemius (~jemius@2a01:4f8:c0c:8564::1)
[17:40:15] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[17:45:51] *** Quits: geoffhill (~geoffhill@174-21-77-129.tukw.qwest.net) (Quit: geoffhill)
[17:46:13] *** Joins: geoffhill (~geoffhill@174-21-77-129.tukw.qwest.net)
[17:58:40] <cCCCCcccccCCc> andrewrk: As an update on my "can't build musl with zig cc" issue -- https://github.com/zigchroot/zig-chroot/issues/1#issuecomment-1054312813
[17:59:51] <Earnestly> I don't feel like brain, if anyone feels like it, try translate this to zig: https://0x0.st/oKh6.c
[18:00:26] *** Joins: arkurious (~arkurious@user/arkurious)
[18:03:30] *** Joins: tsmanner (~tsmanner@ool-182d23f9.dyn.optonline.net)
[18:03:54] *** Joins: waleee (~waleee@h-178-174-193-77.NA.cust.bahnhof.se)
[18:06:00] *** Quits: cabal704 (~cabal704@user/cabal704) (Ping timeout: 252 seconds)
[18:13:46] *** Joins: moog (~moog@107.126.53.115)
[18:21:51] *** Joins: wilsonk (~wilsonk@S0106001b11030a94.cg.shawcable.net)
[18:26:11] *** Quits: geoffhill (~geoffhill@174-21-77-129.tukw.qwest.net) (Quit: geoffhill)
[18:26:33] *** Joins: geoffhill (~geoffhill@174-21-77-129.tukw.qwest.net)
[18:26:44] *** Joins: gawenr (~textual@2a01:e0a:21c:99a0:ccb:c4d5:a390:e3ce)
[18:27:14] *** Quits: jemius (~jemius@2a01:4f8:c0c:8564::1) (Quit: Leaving)
[18:50:01] *** Joins: phaleth (~user@user/phaleth)
[18:58:57] *** Quits: lehmrob (~rd7@business-176-095-223-081.static.arcor-ip.net) (Quit: WeeChat 3.4)
[19:01:21] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d0d7:ba7d:5a5a:630f)
[19:02:54] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 250 seconds)
[19:04:48] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:49a7:adba:9634:8f82)
[19:10:45] *** Quits: msimm (~msimm@p200300cd4701a600689cb10d4978547c.dip0.t-ipconnect.de) (Quit: Leaving)
[19:13:09] *** Joins: notapenguin (~ryu@2804:14d:5685:96c7:8b7a:60f:54fc:4777)
[19:16:19] *** Quits: notapenguin (~ryu@2804:14d:5685:96c7:8b7a:60f:54fc:4777) (Client Quit)
[19:24:21] *** Joins: masoudd (~masoudd@user/masoudd)
[19:28:09] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:49a7:adba:9634:8f82) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:28:17] *** Joins: cabal704 (~cabal704@user/cabal704)
[19:33:35] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[19:34:37] *** Quits: alxarch_ (~alxarch@ppp-94-66-221-114.home.otenet.gr) (Ping timeout: 240 seconds)
[19:36:27] <ifreund> Earnestly: untested, but https://zigbin.io/9345a6
[19:36:39] *** Joins: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr)
[19:36:49] *** Quits: Sawzall (~Sawzall@96-82-249-149-static.hfc.comcastbusiness.net) (Quit: Leaving)
[19:36:51] <Earnestly> Hrm, zigbin needs javascript to display text
[19:37:07] <ifreund> that's stupid
[19:37:25] <ifreund> https://0x0.st/oKFm.c
[19:37:35] <ifreund> heh, 0x0.st things zig is C
[19:37:56] <Earnestly> I think it uses file(1) which determines C files if it contains 'main('
[19:38:10] <ifreund> that's also stupid :D
[19:38:13] <Earnestly> ifreund: Is it zig convention to have main as first function?
[19:38:22] <Earnestly> Yeah fff is quite dumb when it comes to text files
[19:38:59] <ifreund> Earnestly: It's a little to early to say it's a hard convention, that's what I personally prefer though
[19:39:08] <ifreund> unlike C, order of declarations doesn't matter
[19:39:16] <Earnestly> Hm, this is interesting though, thanks for taking the time to indulge me.  There's some things I wasn't expecting, like use of mem.span
[19:39:21] <ifreund> I always found readding from bottom to top annoying
[19:39:30] <luuk> I've seen people do both first and last. Personally I tend to make it the first function within the file.
[19:39:33] <Earnestly> Yeah it's a fair position
[19:39:42] <ifreund> mem.span iterates the 0 terminated pointer to get you a slice
[19:39:51] <ifreund> (if that wasn't already clear)
[19:40:11] <Earnestly> Yes, I suppose because zig doesn't do nul terminated strings
[19:40:20] <Earnestly> This is much nicer
[19:40:21] <ifreund> it does if you want to
[19:40:41] <ifreund> and does them way better than C because the the 0 termination is part of the type system
[19:41:13] <ifreund> for example, the type of std.os.argv is `[][*:0]u8`
[19:41:21] <ifreund> or a slice of 0 terminated pointers to u8
[19:41:31] <Earnestly> Yes, but it's not like *p = &buf[2]; buf[5] = 0; printf("%s\n", p); is it?
[19:42:32] <ifreund> well, that code will work just fine in zig
[19:42:37] <ifreund> it's just not very idiomatic
[19:42:47] <Earnestly> Also the {0} bit is interesting difference
[19:42:54] <ifreund> and stricter type safety will make it a bit more verbose
[19:43:03] <ifreund> Earnestly: yeah, the {0} isn't actually necessary here
[19:43:11] <ifreund> more idiomatic zig would be to just use `undefined`
[19:43:26] <Earnestly> Yes, that's only ever done as defensive measure
[19:43:58] <Earnestly> ifreund: Is Z suffix on function name indicating experimental?
[19:44:29] <Earnestly> Also note that a read is done before the loop
[19:44:47] <ifreund> Earnestly: no, it's the current convention for OS functions that take a 0 terminated string instead of a normal slice
[19:44:51] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d0d7:ba7d:5a5a:630f) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[19:44:54] <Earnestly> Ah
[19:45:14] <Earnestly> I assume the initial read is due to zig not having a do{}while?
[19:45:48] <ifreund> yeah, I wasn't terribly happy with the loop condition, but decided I like it marginally better than a while (true) with a break
[19:46:13] <ifreund> and yep, a do while would clean that up a bit
[19:47:07] <Earnestly> A typical test for this is ./xor key xor.zig | ./xor key | md5sum - xor.zig
[19:48:08] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[19:48:31] <Earnestly> But thank you, I'll have a look over it and see what's going on
[19:49:13] <ifreund> no problem! I know how much a simple side-by-side idiomatic comparison can help when starting out with a new language
[19:50:02] *** Joins: borpa (~borpa@2001:984:e3bf:1:7530:2069:93e7:199b)
[19:50:33] <Earnestly> I appreciate the slices, both Go and Ada have these, and it's seems like such an obviously nice thing.  Much of C has survived the test of time, but so have a few others
[19:50:48] <ifreund> Earnestly: it passes that simple test for me with a file over 8196 bytes fwiw
[19:51:38] <Earnestly> I'd hope it would work for a file larger than that, since it's just a buffer.  The constant was stolen from plan9's cat.c
[19:53:11] <Earnestly> ifreund: Curious that it needs the cwd to open files
[19:54:34] <ifreund> Earnestly: if a path is relative, zig doesn't blindly assume that you mean for it to be relative to the cwd, instead you have to explictly put that cwd() call in the code
[19:55:09] <Earnestly> Hmm
[19:55:14] <ifreund> the function is essentially free though on unixy systems, just returns AT_FDCWD
[19:55:32] *** Quits: cabal704 (~cabal704@user/cabal704) (Quit: WeeChat 3.4)
[19:55:54] *** Joins: Techcable (~Techcable@168.235.93.147)
[19:56:15] <Earnestly> plan9 does have the fd2path idea, which is essentially predicated on the idea that all file objects must have known absolute paths.  This is mostly so it can solve a lot of the .. problems with bind mounts (ala symlinks) creating cyclic filesystems
[19:56:45] <Earnestly> So it's not such a bad idea to force this, and if relative is to have special meaning, the code can deal with it before opening it
[19:58:25] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[20:01:49] <Earnestly> But yes, thank you
[20:06:47] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 250 seconds)
[20:14:04] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:d135:2251:22b:8978)
[20:15:42] *** Joins: rv1sr (~rv1sr@user/rv1sr)
[20:29:45] *** Joins: beepbooptheory (~mik-wsl@50.216.98.94)
[20:30:01] *** Joins: tcht (~tcht@ip-095-223-071-169.um35.pools.vodafone-ip.de)
[20:30:26] *** Joins: mikezackles (~mikezackl@gateway/tor-sasl/mikezackles)
[20:37:20] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[20:50:08] *** Quits: rv1sr (~rv1sr@user/rv1sr) ()
[20:50:10] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 260 seconds)
[21:08:59] *** Joins: ur5us (~ur5us@203.86.198.200)
[21:15:44] *** Quits: gawenr (~textual@2a01:e0a:21c:99a0:ccb:c4d5:a390:e3ce) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:16:02] *** Joins: xackus (~xackus@185.15.0.3)
[21:20:39] *** Joins: Sawzall (~Sawzall@96-82-249-149-static.hfc.comcastbusiness.net)
[21:20:47] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:d135:2251:22b:8978) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:28:40] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d0d7:ba7d:5a5a:630f)
[21:37:24] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 240 seconds)
[21:43:03] *** Quits: beepbooptheory (~mik-wsl@50.216.98.94) (Remote host closed the connection)
[21:43:25] *** Joins: beepbooptheory (~mik-wsl@50.216.98.94)
[21:45:21] *** Quits: beepbooptheory (~mik-wsl@50.216.98.94) (Remote host closed the connection)
[21:45:47] *** Joins: beepbooptheory (~mik-wsl@50.216.98.94)
[21:47:16] *** Quits: beepbooptheory (~mik-wsl@50.216.98.94) (Remote host closed the connection)
[21:48:29] *** Joins: beepbooptheory (~mik-wsl@50.216.98.94)
[21:52:42] *** Quits: ur5us (~ur5us@203.86.198.200) (Ping timeout: 260 seconds)
[21:54:12] *** Quits: xackus (~xackus@185.15.0.3) (Ping timeout: 240 seconds)
[21:54:23] *** Joins: xackus (~xackus@185.15.0.3)
[21:56:45] <cCCCCcccccCCc> andrewrk: Got it traced down to https://github.com/zigchroot/zig-chroot/issues/1#issuecomment-1054529290 now, it looks like zig's linker doesn't like it when the output is /dev/null as best I can tell.
[21:58:08] *** Joins: jemius (~imperator@200116b82d0ca20088e59551b05670bf.dip.versatel-1u1.de)
[22:01:58] *** Joins: tane (~tane@dslb-002-201-234-175.002.201.pools.vodafone-ip.de)
[22:01:58] *** Quits: tane (~tane@dslb-002-201-234-175.002.201.pools.vodafone-ip.de) (Changing host)
[22:01:58] *** Joins: tane (~tane@user/tane)
[22:04:43] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[22:04:58] *** Quits: Sawzall (~Sawzall@96-82-249-149-static.hfc.comcastbusiness.net) (Read error: Connection reset by peer)
[22:06:50] *** Joins: Sawzall (~Sawzall@96-82-249-149-static.hfc.comcastbusiness.net)
[22:10:02] *** Joins: sh4_ (~sh4@user/sh4)
[22:26:17] <andrewrk> cCCCCcccccCCc, nice sleuthing - thanks for the extra info
[22:29:09] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 256 seconds)
[22:37:19] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d0d7:ba7d:5a5a:630f) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:39:22] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 260 seconds)
[22:40:45] <andrewrk> cCCCCcccccCCc, could I give you a patch to try?
[22:40:52] <cCCCCcccccCCc> Sure!
[22:43:48] *** Joins: rv1sr (~rv1sr@user/rv1sr)
[22:45:45] <andrewrk> cCCCCcccccCCc, https://clbin.com/gtXo1
[22:48:00] <cCCCCcccccCCc> Alright, building now.
[22:58:17] <andrewrk> cCCCCcccccCCc, I can at least update master branch of zig-bootstrap for you right now if that would help 
[22:58:48] <cCCCCcccccCCc> Oh, it's no worries, you answered the big question for me: I can just replace the zig directory. 
[22:59:18] <andrewrk> yeah there are no patches in that directory
[22:59:43] <andrewrk> I'm still going to update it though so that master branch will at least have llvm 13.0.1
[23:01:38] <cCCCCcccccCCc> Alright, great, I'll rebase on that, verify if it solves the issue and then see if I can finish getting the chroot to reproduce itself from the inside. It basically can. 
[23:05:04] <ifreund> Earnestly: I realized there's a more idiomatic and probably equally optimal way to write the loop: https://0x0.st/oKCI.c
[23:05:09] <andrewrk> pushed
[23:06:09] <ifreund> it's a slight change of behavior from the C version with regards to how i is produced, but I think it's acceptable
[23:06:50] <Earnestly> ifreund: Oh yes, zig's while loop as an else statement
[23:07:14] <Earnestly> It's weird how natural that sort of thing comes but rarely found anywhere
[23:08:06] <ifreund> also replaced the manual buffered reading with something from the std
[23:08:39] <andrewrk> this example is just begging for some SIMD
[23:09:21] <ifreund> oh yeah
[23:09:27] <ifreund> this will be fun
[23:10:12] *** Joins: kron (~weechat@user/qaph)
[23:11:24] <ifreund> andrewrk: hmm, can you have both an else for the error and an else for no break on a while loop?
[23:11:33] <ifreund> this feels kinda weird
[23:11:50] <andrewrk> those two things are the same
[23:12:49] <ifreund> while (fooMayReturnError()) |foo_result| {... } else |err| { ... } works
[23:13:12] <ifreund> oh I see
[23:13:18] <andrewrk> :D
[23:13:38] <ifreund> that's kinda beautiful actually 
[23:13:39] <andrewrk> one of the cleaner corners of zig
[23:14:32] <sh4_> that looks like ruby :o
[23:16:48] <andrewrk> yeah ruby uses that |foo| {...} syntax for lambdas but in zig it's just an expression with an extra value in scope
[23:19:19] <luuk> Yeah
[23:19:20] *** Joins: cabal704 (~cabal704@user/cabal704)
[23:19:24] <luuk> Sorry, wrong chat
[23:20:35] *** Quits: phaleth (~user@user/phaleth) (Quit: WeeChat 2.8)
[23:20:36] <motiejus> noob question: I want to store a mutable ArrayList in a hashmap; should it be `StringHashMap(*ArrayList(*const Foo))` or `StringHashMap(ArrayList(*const Foo))`? I not sure whether it's safe ("will do what I want") with all operations, e.g. ones that return a `Value` instead of `*Value`.
[23:21:08] <motiejus> I can store "just a pointer" and be safe, but I'd rather understand it first
[23:21:19] *** Quits: alxarch (~alxarch@ppp-94-66-221-114.home.otenet.gr) (Read error: No route to host)
[23:21:39] <ikskuh> motiejus: it's safe to do ArrayList(*const Foo)
[23:21:48] <ikskuh> but: you have to use the **Ptr() functions 
[23:21:55] <ikskuh> like getPtr(key) instead of get(key)
[23:22:07] <ikskuh> otherwise you'll receive a copy of the ArrayList
[23:22:28] <ikskuh> that's why most APIs now return Entry as (key_ptr, value_ptr)
[23:22:28] <motiejus> yeah, I was cautious of that exactly. Ptr functions make sense, thanks!
[23:22:45] <ikskuh> two notes: making it pointer will make memory management A LOT harder
[23:23:11] <ikskuh> second note: Using ArrayListUnmanaged is probably better here
[23:23:17] <ikskuh> as it will reduce the size of your map data by 2
[23:23:57] *** Joins: rgrinberg (~textual@2806:101e:7:8d89:ad31:8328:5a08:79cc)
[23:24:27] <andrewrk> I would say that, coming from C++, one advantage zig std lib data structures bring to the table is the ability to use non-pointers in this exact scenario
[23:24:37] <andrewrk> I remember trying to do this in c++ on many occasions and always shooting myself in the foot
[23:25:53] <motiejus> but one has to be very careful then with non-pointers; it's too easy to get it copied (my today's experience)
[23:26:00] <motiejus> also, the Ptr API doesn't have, say, `getOrPutPtr`
[23:27:24] <Levy[m]> `getOrPut` returns an `Entry` which has both `value_ptr` and `key_ptr`
[23:28:33] <Levy[m]> well, `GetOrPutResult` with the additional `found_existing` field
[23:32:53] <motiejus> thanks  all :)
[23:38:07] *** Quits: cabal704 (~cabal704@user/cabal704) (Quit: WeeChat 3.4)
[23:51:56] *** Quits: tcht (~tcht@ip-095-223-071-169.um35.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[23:56:27] *** Quits: beepbooptheory (~mik-wsl@50.216.98.94) (Ping timeout: 250 seconds)
[23:57:30] *** Joins: livoreno (~livoreno@user/notzmv)
