[00:00:17] <MizMahem> now that I look at it though, I don't think there is any point of the `IEnumerable<string>` overloads when I have the generic.
[00:02:42] <asd> btw how can `public static void Reverse (Array array)` edit my array? `Array.Reverse(myArray);` shouldn't it require both me and the function delcaration to add `ref`? e.g.: Array.Reverse(ref myArray) and `public static void Reverse (ref Array array)` ?
[00:03:57] <canton7> asd, Array, like all classes, is a reference type. When you copy a variable containing a reference type (or pass it to a method call), you copy the reference but not the object it refers to. So you now have two things which refer to the same underlying object. Accessing either reference accesses the same underlying object
[00:03:59] *** Quits: pazof (~Paul@117.105.62.94.rev.vodafone.pt) (Ping timeout: 264 seconds)
[00:04:42] <asd> oh ofcourse, thank you canton7 2/2 concise solutions from you :D
[00:04:47] <canton7> MizMahem, you save yourself the cost of calling 'string.ToString()', if you do call it on a collection of strings
[00:05:05] <canton7> (but that's a pretty cheap call, so meh)
[00:05:39] *** Joins: pazof (~Paul@117.105.62.94.rev.vodafone.pt)
[00:06:14] <MizMahem> canton7: hmm... maybe that's why I did it but... hmm... well I guess using the generics would rely on the `Join` implementation having an optimization for that case. Which seems likely, but I dun wanna look it up :p
[00:06:24] <irwiss> asd: var str = string.Join(' ', "hello world".Split(' ').Select(x => new string(x.Reverse().ToArray())).ToArray()); ish, might've messed up some of the order
[00:07:01] <asd> irwiss: okay thanks. nvm i thought linq would be cleaner but i guess just adding another line is more readable
[00:07:14] <irwiss> you can and should split linq to be more readable
[00:07:15] <canton7> Oh wait, there's no (string, IEnumerable<string>) overload anyway
[00:07:20] <canton7> Yeah, pointless
[00:08:45] <irwiss> reversing strings and all kinds of pointless cs101 poop just isn't stuff c# optimizes it's syntax for, https://sharplab.io/#v2:C4LgTgrgdgNAJiA1AHwAICYAMBYAUBgRj1UwAJUCA6AGQEsoBHAbjzwDcBDMUgZ2G4C85ApkoApAPb0AFAHJSsmKQBEACwCmAG00TSAdwlhNcZZQDKAB021gchQEo8pZ6XNb1AY1sAPUgIB8pFDqesKY0t6UAErqbOpgPOrS9pQAKhIAgmBgHACeyfaOuC6u6Vk5+YUsuMQEAJzSvPz2TEA= is
[00:08:45] <irwiss> kinda readable, but i'd shove it in a method with decent name anyway
[00:09:16] <dubiago> Ownix: https://www.jstree.com/
[00:09:20] <irwiss> and you could get rid of linq and do slightly less garbage in a real method too
[00:09:27] <canton7> That's all well and good until you get into the wonderful world of unicode
[00:09:56] <canton7> It isn't even wrong: https://sharplab.io/#v2:C4LgTgrgdgNAJiA1AHwAICYAMBYAUBgRj1UwAJUCA6AGQEsoBHAbjzwDcBDMUgZ2G4C85ApkoApAPb0AFAHJSsmKQBEACwCmAG00TSgXg3AljuBYAj2AkveWUAygAdNtYHIUBKPKTekrW9QGMHAD1IBAD5SKHUAd2FMaT9KACV1NnUwHnVpJ0oAFQkAQTAwDgBPdKcXXHcPbLyC4tKWXGICAE5pXn4nJiA==
[00:10:36] <irwiss> if you get into the world of unicode i guarantee every single cs101 solution page for C lang is completely wrong XD
[00:10:37] <canton7> Firstly because you fecked up your surrogates, and secondly because you reversed the elements of an extended grapheme cluster
[00:11:51] <Ownix> dubiago: I wonder if I could somehow put that tree inside cells of my DataTable
[00:12:20] <dubiago> Ownix: Possibly!
[00:16:09] <asd> yeah im just trying to get familiar with the basics of C# atm, I feel like just reading a book cover-to-cover isn't going to be longlasting knowledge
[00:18:20] *** Joins: jamea (~jamea@189.231.68.123)
[00:20:20] <Suchiman> asd: learning by doing is best :P
[00:21:32] *** Quits: jamea77 (~jamea@189.231.68.123) (Ping timeout: 258 seconds)
[00:23:22] <MizMahem> learning by doing badly is sadly how it works :p
[00:23:38] <MizMahem> but this is a good place to learn an extension method!
[00:25:43] <MizMahem> and speaking of learning, while the string overload probably isn't worthwhile, I wonder if an `IEnumerable<char>` overload isn't worthwhile. Because if you call `string.Join` on that, you get the `IEnumerable<char>.ToString()` method, which probably isn't what you want.
[00:29:50] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[00:31:30] *** Joins: jamea77 (~jamea@189.231.68.123)
[00:32:10] *** Quits: jamea (~jamea@189.231.68.123) (Ping timeout: 260 seconds)
[00:32:22] *** Joins: _gandhibobandhi (~gandhibob@2a02:8109:86c0:4a40:3847:ff02:5e7e:b959)
[00:35:35] <MizMahem> something like: `public static string Implode(this IEnumerable<IEnumerable<char>> items, char seperator) => string.Join(seperator, items.Select(chars => new string(chars.ToArray())))`
[00:36:32] <MizMahem> https://sharplab.io/#gist:2211e8ae470eb2a205add5476e72dacc
[00:36:52] *** Quits: _gandhibobandhi (~gandhibob@2a02:8109:86c0:4a40:3847:ff02:5e7e:b959) (Ping timeout: 252 seconds)
[00:36:59] <MizMahem> a lot of allocations in that, but I don't think it's avoidable, unless I'm missing one of the string creation methods.
[00:37:13] *** Quits: IceMichael (~IceMichae@h2878436.stratoserver.net) (Quit: bye)
[00:37:33] *** Joins: IceMichael (~IceMichae@h2878436.stratoserver.net)
[00:39:17] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[00:39:43] <Slade> so, a nigerian prince's sister, is a princess right?   whats a nigerian princes daughter?
[00:42:05] * Suchiman slaps MizMahem around a bit with a large beaked salmon
[00:42:13] <Suchiman> Implode, yucky
[00:42:22] <MizMahem> why am I slapped!
[00:42:26] <Slade> Suchiman, hey you're vaguely european! tell me how this princing thing works
[00:42:29] * MizMahem slaps Suchiman around a bit with a large torrent catfish
[00:42:43] <MizMahem> I would name it join, but there is already a method named join that conflicts!
[00:43:46] <Suchiman> MizMahem: doesn't conflict since the overload is different :trollface:
[00:44:01] <MizMahem> I'll have you know, using `Implode` for `Join` has a long established history in PHP.
[00:47:36] *** Quits: jamea77 (~jamea@189.231.68.123) (Ping timeout: 258 seconds)
[00:52:33] <Slade> i'm having a crazy influx of Nigerian princes wanting to send their huge family to school.. mostly sisters and daughters.. i guess that would be princesses
[00:52:44] <canton7> MizMahem, that only works if you also define Explode
[00:53:11] <MizMahem> brb, defining Explode.
[00:54:06] <Slade> .Glue()
[00:55:13] <Suchiman> MizMahem: i would bet https://sharplab.io/#gist:d0c303d80c34c073f2116abcc44d4790 that this has a fraction of the allocations :P
[00:56:55] <MizMahem> Suchiman: mao, but that means work :(
[00:57:10] <Suchiman> MizMahem: what you mean... i already implemented it
[00:57:21] <MizMahem> but now I have to understand it!
[00:57:27] * Suchiman slaps MizMahem around a bit with a large demoiselle
[00:57:59] *** Joins: moose (~moose@user/moose)
[01:00:38] <Lukky> Gaaahhh... working on code I wrote 10 years ago...
[01:01:43] <MizMahem> Suchiman: do you decrease the length at the end just to avoid the extra seperator?
[01:02:05] <Suchiman> MizMahem: yes
[01:02:24] <MizMahem> :? hmm...
[01:02:40] <Suchiman> Lukky: best code ever <3
[01:02:59] <Lukky> Actually, it's not that bad :-)
[01:03:42] <MizMahem> Suchiman: I don't think you need the any if you do it that way.
[01:04:35] <Suchiman> MizMahem: the any is purely for avoiding to insert double delimiter if there's an IEnumerable<char> that is empty inside the larger IEnumerable
[01:05:12] <MizMahem> I get that now, though I wonder if that isn't desired behavior.
[01:05:22] <Suchiman> MizMahem: if you want { "A", "", "B", "C" } to result in "A  B C" then remove it
[01:05:40] <MizMahem> Like if you had an empty item in a list, you might want to still have the spot.
[01:05:57] *** Quits: bomb (~bomb@user/bomb) (Remote host closed the connection)
[01:05:59] <MizMahem> the case with spliting on whitespace is problematic, but that's the users problem I figure.
[01:11:01] <MizMahem> I'm actually doing something similar I realize in some stuff of my own, so I wonder how this pattern compares: https://sharplab.io/#gist:c166c2d427c4d4354bae99e6a561e2b5
[01:11:27] <MizMahem> (using `SkipLast` and `Skip`)
[01:11:36] <MizMahem> er, well `Last` I mean.
[01:12:11] <MizMahem> mmm, I guess that depends on what optimizations can be applied to the IEnumerable behind the scenes. It won't do well if it doesn't implement `IList` I guess.
[01:13:32] <Suchiman> MizMahem: the problem is that it evaluates the IEnumerable twice
[01:13:51] <Suchiman> MizMahem: which means that .Select(str => str.Reverse()) is run twice over the entire thing
[01:16:55] *** Quits: IceMichael (~IceMichae@h2878436.stratoserver.net) (Quit: bye)
[01:17:08] <MizMahem> mmm, would it? `Split` returns an array, so well I haven't looked at the code for the SkipLast enumerators, but I would suspect it optimizes for those cases. I know Last should.
[01:17:14] *** Joins: IceMichael (~IceMichae@h2878436.stratoserver.net)
[01:17:22] <MizMahem> you are right for the general case though of course.
[01:17:37] <Slade> naming things is kinda hard
[01:17:42] <Suchiman> MizMahem: Split does return an array but after the Select it's no longer an array
[01:18:06] <MizMahem> hmm... you are right, damn.
[01:22:43] <MizMahem> no easy way to count without enumerating either :/ hm. It would be nice if Select returned an IListable Enumerator if it can (is there even such a thing?) hmm...
[01:23:43] <MizMahem> ah, yeah I think it does. `IListProvider`.
[01:25:19] <MizMahem> hmm, well things to think about.
[01:28:31] *** Quits: BSaboia (~bsaboia@187.19.138.198) (Quit: This computer has gone to sleep)
[01:32:13] <Suchiman> MizMahem: all because you hate the Length--; trick? xD
[01:32:37] <MizMahem> it burns us it does!
[01:32:39] *** Joins: Fiji (~Fiji@user/fiji)
[01:34:06] <MizMahem> but more seriously I have a similar case where I wanted to treat the last item of a list differently. While I can't do the Length-- trick in this case, I was wondering how the Skip method compares.
[01:36:27] <Suchiman> MizMahem: the alternative is to "prepend" the identifier instead of appending it
[01:38:59] <Suchiman> MizMahem: https://sharplab.io/#gist:9d8616a29c4005bb85b5eb235c8c9646
[01:42:44] <MizMahem> hmm. Well the Length-- is better I suppose. I don't guess there is any good way to guess how long the Builder should be.
[01:43:03] <Suchiman> MizMahem: you could make an educated guesss
[01:43:13] <MizMahem> well, I suppose in the case of a `string` separator, you need one at least as long as the string.
[01:43:40] <MizMahem> though that doesn't help much.
[01:43:51] <Slade> https://media.discordapp.net/attachments/813965986457583646/900507056925192262/r_1030841_w7Mq9.png
[01:45:33] <MizMahem> you could provide a guessing parameter, but if `string.Join` doesn't think it worthwhile, it probably isn't.
[01:54:33] <MizMahem> Suchiman: HAH! I knew there had to be a better way: https://sharplab.io/#gist:583ba76e42e5dae551062751460c49f1
[01:54:45] <MizMahem> (I actually had some older code below that did something like this :p)
[01:55:48] *** Joins: BSaboia (~bsaboia@187.19.138.198)
[02:01:08] <Suchiman> MizMahem: oh yeah but i was too lazy to drop down to raw enumerators lol
[02:01:46] <MizMahem> tbf, I had an enumerator method down below that I had commented out for some reason.
[02:15:30] <Slade> no one uses the other linq syntax do they
[02:15:35] <Slade> from "Hello World"
[02:17:19] <Slade> damn, who was that guy who was trying to embed vbnet and xml into everything back then
[02:17:49] <Slade> bitgod? hmm
[02:20:25] *** Quits: Lukky (~Lukky@modemcable163.88-161-184.mc.videotron.ca) (Remote host closed the connection)
[02:29:48] <MizMahem> Slade: I do not like the other syntax :p
[02:33:55] <Nasp> I hate how "run test on build" is an enterprise feature
[02:34:03] <Nasp> I miss it!
[02:34:56] <Slade> MizMahem, did anyone?
[02:35:31] * MizMahem shrugs.
[02:37:06] <Slade> i dont think i saw anyone that didnt work for microsoft use it seriously
[02:40:35] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 260 seconds)
[02:43:48] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:55:11] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[02:56:48] *** Joins: night_wulfe__ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[02:58:35] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 264 seconds)
[03:00:23] *** Quits: dark279_ (~totallych@2601:18b:8200:c1e:a1e0:77e4:7943:e9a1) (Ping timeout: 264 seconds)
[03:00:37] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 258 seconds)
[03:05:41] <sysRPL> so
[03:06:58] <sysRPL> does $40 for an i5-4590 desktop with 8GB ram and radeon 8490 video card seem like a decent deal?
[03:07:15] <sysRPL> i very good condition
[03:07:19] <sysRPL> * in
[03:08:20] <sysRPL> i am adding wifi n, 180gb intel pro ssd ... and reselling these for $150
[03:09:05] <sysRPL> in sff size
[03:14:02] <Nasp> Seems cheap sure
[03:15:16] <sysRPL> i might be able to get some 6th gen i5 desktops for the same price
[03:16:11] <sysRPL> i am gearing up for the christmas season ... i sold 1000 hp z220 systems earlier this year
[03:16:35] <sysRPL> and had to hire someone to help me with that
[03:17:16] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[03:18:00] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[03:19:51] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[03:20:38] *** Quits: night_wulfe__ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 260 seconds)
[03:20:39] *** Joins: jamea (~jamea@189.231.68.123)
[03:21:11] <Nasp> Only buyin one i5-4590
[03:21:12] <MizMahem> I know Nasp isn't a fan, but I am really liking this new machine learning code completion assist.
[03:21:21] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:a58e:ea94:dbd:df07) (Ping timeout: 245 seconds)
[03:26:50] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:c5d9:cb87:1b42:a441)
[03:27:09] <Nasp> As in completing code, or just regular intellisense?
[03:35:03] <MizMahem> completing code
[03:35:49] <MizMahem> I just thought that when I was doing something thinking "okay, well first I want to return x if y is null here, only to find that was exactly what it suggested, verbatim. Which was nice.
[03:36:25] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:c5d9:cb87:1b42:a441) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:47:03] <MizMahem> So I've got a question. I've got a class that uses a `FormattableString` like so. Is there any advantage to me internally keeping a hold of the `object[] argument` array, instead of letting it be stashed in the `FormattableString`? https://www.irccloud.com/pastebin/kr93A5Ol/MultiFactorUnit.cs
[03:52:17] *** Quits: sebbu (~sebbu@user/sebbu) (Ping timeout: 268 seconds)
[03:52:25] *** Joins: sebbu3 (~sebbu@user/sebbu)
[04:02:37] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Quit: And I'm out.)
[04:14:39] <Slade> https://www.theguardian.com/world/2021/oct/15/new-zealand-council-ends-contract-with-wizard-after-two-decades-of-service
[04:18:59] *** Quits: jamea (~jamea@189.231.68.123) (Remote host closed the connection)
[04:19:20] *** Joins: jamea (~jamea@189.231.68.123)
[04:24:52] <moose> Is there any particular reason to NOT recycle the IMemoryOwner<T> from MemoryPool<T>? I want to use them for socket operations and figure I can just never release them until I release all of the SocketAsyncEventArgs as well.
[04:25:20] <moose> I was about to design it to where when an operation is completed, it disposes the owner, until the SocketAsyncEventArgs is acquired again
[04:25:30] <moose> It would temporarily reduce memory pressure, I guess.
[04:35:05] *** sebbu3 is now known as sebbu
[04:36:40] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Ping timeout: 260 seconds)
[04:37:36] *** Quits: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com) (Ping timeout: 245 seconds)
[04:42:04] *** Joins: kupi (uid212005@hampstead.irccloud.com)
[04:47:54] *** Quits: cn--j (~cn-j@user/cn-j) (Ping timeout: 260 seconds)
[04:50:44] *** Joins: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com)
[04:54:26] *** Quits: jamea (~jamea@189.231.68.123) (Ping timeout: 260 seconds)
[05:03:56] <JakeSays> Nasp: run test on build is one feature i wouldn't miss, for sure
[05:07:46] <moose> How do you feel about non-task returning and non-async declared methods ending with *Async in the name?
[05:08:05] <moose> Is this just a one-off we don't complain about when MS does it, or is it fine to use the convention described here?
[05:08:20] <jonp`> likely not a good idea
[05:08:30] *** jonp` is now known as jonp
[05:08:33] <moose> I know. It kinda bugs me that they did it for stuff like Socket.ReceiveFromAsync
[05:08:45] <moose> But that was way back when, before the async keyword if I remember right.
[05:09:04] <jonp> uh, yeah; applies to .NET Framework 2.0
[05:09:14] <moose> No way it wasn't in 2.0 back then was it?
[05:09:14] <jonp> async/await is C# 5
[05:09:22] <jonp> https://docs.microsoft.com/en-us/dotnet/api/system.net.sockets.socket.receivefromasync?view=net-5.0
[05:09:31] <jonp> "Applies to" shows .NET Framework 2.0+
[05:09:40] <jonp> so it "only" predates async/await by like 10 years
[05:09:46] <moose> Wow that's really surprising. I thought it was 3.5 or 4.0
[05:10:18] <jonp> 7 years
[05:10:27] <moose> .NET 2.0 SP1 ok, so it came after generics.
[05:11:02] <jonp> ReceiveFromAsync came out *with* generics
[05:11:33] <moose> Was it at the same time? Ah. I thought generics were in base 2.0 not the SP to follow.
[05:11:49] <jonp> generics were base 2.0, but those docs say the method was also in base 2.0
[05:11:53] <moose> It was a while ago. I am also surprised because I distinctly remember waiting for something around SocketAsyncEventArgs to come out...
[05:12:07] <moose> That method, I traced it back to the actual release notes of SP1 :p
[05:12:43] <jonp> that's still long before C#5
[05:12:55] <moose> Yes of course.
[05:13:01] <moose> So we'll give them a pass :)
[05:13:29] <moose> I remember when codeproject was the best.
[05:13:36] <moose> https://www.codeproject.com/articles/83102/c-socketasynceventargs-high-performance-socket-cod this was one article I read back then, pretty sure
[05:13:49] <MizMahem> I still find good things from time to time.
[05:14:19] <moose> While we're on a trip to the past, how about sourceforge being the dominant platform? hah
[05:14:42] <MizMahem> those were the days.
[05:14:56] <MizMahem> back before they committed suicide.
[05:16:04] <MizMahem> remember when Slashdot was a thing?
[05:16:17] <MizMahem> or kushin? k5? Whatever they called it.
[05:18:49] <moose> Slashdot yes, kushin... rings a bell but not a loud one
[05:19:09] <moose> I remember when websites would get "slashdotted" lol
[05:19:19] <moose> It was a glorious badge of honor, to be brought down by hype on slashdot
[05:19:44] <moose> But now you're looked at like you are a disgusting primitive form of organic life in the eyes of an alien species if your site goes down for any reason
[05:24:46] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 260 seconds)
[05:33:13] <Nasp> JakeSays:  Yeah i dont get it why it's an Enterprise only, we used to have and it's the only feature i miss
[05:33:22] <Nasp> When this project is done, i think i will look into Rider og VSCode for dev
[05:50:22] *** Quits: highrate (~presonic@24-0-237-24.gci.net) (Ping timeout: 252 seconds)
[06:08:12] *** Joins: highrate (~presonic@24-0-237-24.gci.net)
[06:12:23] *** Quits: Fiji (~Fiji@user/fiji) (Quit: Leaving)
[06:25:07] *** Joins: jamea (~jamea@177.239.87.39)
[06:25:38] *** Joins: presonic (~presonic@24-0-237-24.gci.net)
[06:27:51] *** Quits: highrate (~presonic@24-0-237-24.gci.net) (Ping timeout: 265 seconds)
[06:29:08] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[06:29:47] *** Quits: Roughy (~mdaw45ns@user/roughy) (Quit: Meadow Fresh milk)
[06:36:32] *** Joins: Carbonflux (~Carbonflu@c-24-56-228-141.customer.broadstripe.net)
[06:42:31] <JakeSays> the last thing i want when i build locally is for tests to be run
[06:42:43] <JakeSays> that would just fuck up my workflow
[06:44:03] <JakeSays> Nasp: .net support in vscode is a joke
[07:13:59] *** Quits: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[07:16:18] *** Quits: jamea (~jamea@177.239.87.39) (Ping timeout: 260 seconds)
[07:28:30] *** Joins: Fairy (~Fairy@2001:464a:4992:0:9c0f:e957:8bda:88f)
[07:31:34] *** Quits: Fairy97 (~Fairy@2001:464a:4992:0:8c0c:f151:d680:fa86) (Ping timeout: 252 seconds)
[08:00:46] *** Quits: DINOWILLIAM (~DINOWILLI@168.194.162.197) (Ping timeout: 258 seconds)
[08:05:48] *** presonic is now known as highrate
[08:10:48] <Nasp> Yeah it wasn't nice last i tried
[08:10:53] <Nasp> It "works" but no nice experience
[08:11:05] <Nasp> Why is it VS rename function can never figure out how to do renaming if there are duplicates
[08:11:10] <Nasp> Like if you copy a class and then want to rename it
[08:11:17] <Nasp> Then it just rename all the ones that conflicts
[08:11:20] <Nasp> So the conflict is still there
[08:12:30] <Nasp> JakeSays:  clicking on the project you want to test each time and press "run test" is quite annoying
[08:13:14] <Nasp> Hmm i actually have the option, maybe it's because i am using preview
[08:13:29] <Nasp> But there is still missing an "Scope to this test project" so it doesn't run all tests in the solution
[08:20:28] *** Quits: N1N (~N1N@user/n1n) (Ping timeout: 265 seconds)
[08:30:10] *** Joins: N1N (~N1N@user/n1n)
[08:35:59] <JakeSays> Nasp: r# has the ability to run the test your cursor is currently in. one button, build/run :p
[08:36:23] <Nasp> I just want it to run the current project i'm in
[08:36:50] <JakeSays> i'm pretty sure it can do that too
[08:36:55] <Nasp> Also is the VS test runner just still really slow
[08:37:19] <Nasp> Takes 10-15 seconds in UI
[08:37:22] <Nasp> 82ms in command line
[08:37:30] <JakeSays> VS /test//
[08:39:37] <Nasp> Yeah it's never really been fast
[08:39:45] <Nasp> Like the first 5 seconds it's always like "ohh right run tests"
[08:39:50] <Nasp> And UI is so slow updating
[08:40:03] <Nasp> So sometimes you are in doubt if tests have run since there seem to not be any "pending" state
[08:50:43] <Nasp> Anyone else who hates this error message? https://usercontent.irccloud-cdn.com/file/XQufMe6O/image.png
[08:50:52] <Nasp> Why can't VS just add it then
[08:51:27] <gufi> lol that error always makes me laugh
[08:51:34] <Nasp> It's annoying right
[08:51:40] <gufi> "fiiiiiine... i'll just delete the existing one
[08:51:53] <Nasp> Gufi Btw the stuff from yesterday works!
[08:52:00] <Nasp> So nice to be able to test certain auth stuff
[08:54:32] <Nasp> Do i remember incorrectly, or doesn't VS have a sync namespace option?
[08:55:25] <Nasp> Ahh fuck it's for all projects, omg
[08:57:11] <gufi> sync namespace?
[08:58:33] <Nasp> Class namespace
[08:58:50] <Nasp> So yeah it has one, but it doesn't quite work
[08:58:56] <Nasp> It only changed it in 3 places :D
[09:01:05] <Nasp> But whyyyy
[09:07:47] <gufi> oooh lol. yea... i dunno i use resharper for that
[09:08:10] <Nasp> I decided not to move this one thing uses a thousand places
[09:35:04] *** Joins: svm_invictvs_ (~svm_invic@user/svm-invictvs/x-6696469)
[09:37:31] *** Joins: Miles9of9 (~obrien@93-34-145-79.ip50.fastwebnet.it)
[09:37:34] *** Joins: gguideX (~guideX@user/guidex)
[09:37:36] *** Quits: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469) (Ping timeout: 245 seconds)
[09:40:31] *** Quits: Miles8of9 (~obrien@93-34-145-79.ip50.fastwebnet.it) (Ping timeout: 245 seconds)
[09:40:31] *** Quits: guideX (~guideX@user/guidex) (Ping timeout: 245 seconds)
[09:59:22] <Kim^J> JakeSays: Go to bed
[10:29:38] *** Joins: MaNa2k (~MaNa2k@109.247.79.178)
[10:30:25] <MaNa2k> oh cool, didnt know outlook had this "translation feature" built in
[10:30:42] <MaNa2k> it can basically translate your emails to your language
[10:31:11] <MaNa2k> i can now finally understand what the swedes are saying :P
[10:38:59] <Nasp> Atleast corporate written language is English, but spoken seems to be Norwegian
[10:39:14] <Nasp> And people just assume you understand it
[10:40:30] *** Joins: _gandhibobandhi (~gandhibob@2a02:8109:86c0:4a40:a4ab:c083:7c4a:c15c)
[10:46:23] <MatthiasVance> Good morning!
[10:46:49] <Nasp> Morning
[10:46:55] <shadowchaser> MaNa2k in movies it looks like all people of scandinavia speak the same language, swede moves to norway and can talk with everybody from day one
[10:46:59] <Nasp> I thought it was common knowledge to not reference another API from another API
[10:47:31] <MaNa2k> shadowchaser, they mostly can, while the danes are another case
[10:47:49] <JakeSays> Nasp: whats wrong with doing that?
[10:47:54] <MaNa2k> basically, its easier to understand swedes talking, but the written language is sometimes confusing
[10:48:03] <Nasp> JakeSays:  Not nice refence / dependency wise
[10:48:20] <MaNa2k> while the danes its hard to understand them speaking, but the written language is easier to read
[10:48:34] <Nasp> Norwegians are impossible to understand as well
[10:48:35] <JakeSays> Nasp: are you talking about a circular dependency?
[10:48:38] <Nasp> I understand neither
[10:48:41] <Nasp> JakeSays: Well potentially
[10:48:48] <Nasp> If both needs to use something, wouldn't it be better to extract it
[10:48:57] <JakeSays> not necessarily
[10:49:13] <MaNa2k> JakeSays, lol yes you can put it in that way
[10:49:15] <jbe> some norwegian dialects are easier for me to understand than others
[10:49:20] <jbe> same with denmark
[10:49:21] <Nasp> Also it seems like my collegue just added this referenced and called some code from there that aren't used
[10:49:31] <JakeSays> well, if it's implemented in one and used by both, yes, you would separate the dependency
[10:49:41] <Nasp> I can't get the rythm of norwegian
[10:49:43] <jbe> the copenhagian one is near unintelligible, but e.g. odensian is pretty easy to understand
[10:49:47] <Nasp> I think if i got that, it would be a lot easier to understand
[10:50:02] <MaNa2k> i personally feel like danes speak single words too fast, which makes some of the sounds to dissapear
[10:50:05] <jmer> morning
[10:50:15] <Nasp> Fyn is also in the middle and closest to normal danish
[10:50:19] <JakeSays> MaNa2k: put what in what?
[10:50:23] <Nasp> Although they have a funny accent
[10:50:46] <Nasp> MaNa2k:  I feel like norwegian sounds fast
[10:50:46] <jmer> Nasp: you think Fynsk is close to "rigs-dansk" ?
[10:50:49] <MaNa2k> JakeSays, that ciruclar dependency you was talking about, apply to the scandinavian language
[10:50:55] <JakeSays> MaNa2k: LOL ah
[10:50:56] <Nasp> Remember we have no ups and downs
[10:51:00] <Nasp> jmer:  Yeah
[10:51:13] <Nasp> Closest*
[10:51:38] <jmer> Isn't the sole speaker of rigs dansk the queen?
[10:51:48] <shadowchaser> all scandinavian languages sound to me like german with a stroke;)
[10:52:02] <jbe> no, that's dutch
[10:52:13] <Nasp> jmer: No she doesn't speak rigsdansk
[10:52:33] <Nasp> oh well maybe she do
[10:52:43] <Nasp> It's just pronounce everything very precisely
[10:53:06] <jbe> must talk carefully to not drop the cigarette out of your mouth
[10:53:44] <MaNa2k> oh funny thing, lots of similar words in ducth vs norwegian
[10:54:24] <Nasp> Dutch is really just a mix
[10:54:28] <Nasp> Sometimes you can understand it sometimes not
[10:54:34] <Nasp> Even read it, until you realize it's dutch
[10:54:42] <MaNa2k> yes
[10:55:05] <MaNa2k> you can also recognize lots of the words in german language
[10:55:11] <Nasp> I've done that a few times and then all of the sudden my brain goes "Ohh no you can't read that" after i've read half an article
[10:55:32] <Nasp> I used to be able to read german perfectly
[10:55:36] <Nasp> But my comprehension was like 0
[10:55:43] <Nasp> Read / pronounce
[10:55:56] <MaNa2k> i can read and understand about maybe 60%
[10:56:09] <MaNa2k> also i can speak and explanes stuff
[10:56:21] <MaNa2k> but not fully understand when germans are speaking
[11:00:17] <MaNa2k> we once had to access this windows server of a company from Austria, and ofc they had the language set to German.
[11:00:36] <MaNa2k> was kind of fun
[11:01:07] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:d573:53b:f618:a5a1)
[11:02:12] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[11:03:01] *** Joins: zaher (~zaher@37.48.155.51)
[11:04:18] <Nasp> German tends to do that
[11:04:32] <Nasp> So i think Austria is probably the same
[11:13:51] *** Joins: X-Scale` (~ARM@46.50.7.99)
[11:14:19] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 252 seconds)
[11:15:12] *** X-Scale` is now known as X-Scale
[11:17:30] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:22:53] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[11:32:56] *** Joins: alguien (~alguien@user/alguien)
[11:35:48] *** Joins: bomb (~bomb@user/bomb)
[11:36:23] <bomb> according to my calculations, .NET 4.8 is good to go until 2026
[11:37:25] *** Joins: cn--j (~cn-j@user/cn-j)
[11:38:08] <MaNa2k> .net framework 4.8 is just a ticking bomb that will go off :P
[11:42:01] *** Quits: cn--j (~cn-j@user/cn-j) (Ping timeout: 265 seconds)
[11:45:08] <bomb> MaNa2k: meanwhile, Windows 11 now supports Android apps XD
[11:48:14] <MatthiasVance> Android supports W11 apps?
[11:48:22] <MatthiasVance> Now that would be cool
[11:48:29] <MatthiasVance> Give us a MS Android
[11:49:22] <Nasp> Angular build just ran out of memory lol
[11:49:37] <Nasp> Also it took down other electron shit
[11:50:10] <Nasp> Is node 32bit?
[11:50:28] <Nasp> Hmm nope
[11:51:07] *** Joins: Babbage (Babbage@5ec36293.skybroadband.com)
[11:51:21] <Nasp> Hmm okay so it was actually my machine that ran out of memory
[11:51:24] <Nasp> wtf
[11:51:53] <Nasp> Time for a reboot
[11:51:56] <bomb> there were rumors Google would sell Android to Microsoft
[12:00:21] <Babbage> hey
[12:02:16] <bomb> sup Babbage
[12:06:06] *** Quits: KnownSyntax (sid233169@user/knownsyntax) (Ping timeout: 258 seconds)
[12:06:29] *** Quits: kupi (uid212005@hampstead.irccloud.com) (Ping timeout: 258 seconds)
[12:06:58] *** Joins: KnownSyntax (sid233169@user/knownsyntax)
[12:08:13] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[12:11:05] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[12:12:14] <jmer> bomb: you always post music; https://www.youtube.com/watch?v=hCDAfa-NI-M
[12:12:25] *** Quits: Carko_ (~Darko@84-255-241-35.static.t-2.net) (Quit: Leaving)
[12:12:56] <MaNa2k> any quick and dirty way to compare two tables in mssql. both tables are in different db
[12:13:09] <MaNa2k> but on same server
[12:14:58] <MaNa2k> tried the following https://stackoverflow.com/questions/7606175/how-to-compare-data-between-two-table-in-different-databases-using-sql-server-20/7606191
[12:15:21] <MaNa2k> but it seems like it dosnt find the db1 or db2
[12:16:06] <MaNa2k> it depends on which database the new sql windos is opened in
[12:22:17] <MaNa2k> Reference to database and/or server name in ..... is not supported in this version of SQL Server.
[12:22:21] <MaNa2k> so this is the error i get
[12:23:35] <biberu> neat, this piece of code is now 6 times faster and allocation free
[12:23:42] * biberu deserves påtår
[12:23:54] <bomb> cool one jmer
[12:26:21] <Tobbi_> Our IT guy is asking me for configuration details regarding test machine configuration that's supposed to run IIS...hrm...
[12:26:27] <Tobbi_> IIS and Database.
[12:29:56] <MatthiasVance> MaNa2k: I always use the tooling in VS for that, but most likely it's also available in SSMS
[12:30:00] <MatthiasVance> just select 2 "things" and it compares
[12:30:17] <MaNa2k> ?
[12:30:31] <MaNa2k> MatthiasVance, but im trying to compare cross databases
[12:30:38] <MatthiasVance> so?
[12:30:47] <MatthiasVance> that's the main use case
[12:30:57] <MaNa2k> MatthiasVance, so where is that comapre ?
[12:31:12] <MatthiasVance> if you have the data tools workload installed it's under tools -> SQL Server
[12:31:35] <MaNa2k> hmm, dont think i have that
[12:32:13] <MaNa2k> where can i get that tool ?
[12:32:16] <MaNa2k> iss it SSDT ?
[12:32:24] <MaNa2k> your talking about
[12:33:21] <MatthiasVance> In the VS installer
[12:33:25] <MatthiasVance> You select what workloads you want
[12:33:34] <MatthiasVance> I'm assuming you selected "web" or something, but you also need "data"
[12:34:00] <MaNa2k> ah, "data storage and proicessing" in installer right ?
[12:34:13] <MaNa2k> it was unchecked
[12:35:28] <MatthiasVance> I think so yes
[12:39:20] *** Joins: zaher_ (~zaher@37.48.155.51)
[12:40:38] *** Quits: zaher (~zaher@37.48.155.51) (Ping timeout: 260 seconds)
[12:41:30] <Nasp> My VS just peaked at 6GB memory
[12:46:11] <bomb> can't happen
[12:46:11] <MaNa2k> MatthiasVance, it seems like azure dosnt support cross database querying
[12:46:14] <bomb> unless it's VS 2022
[12:46:48] <Babbage> anyone bothering with Microsoft Ignite? Im going through the sessions thinking yawn yawn yawn
[12:47:01] <MaNa2k> or wait a minute, maybe its possible anyhow according to this article https://azure.microsoft.com/en-us/blog/querying-remote-databases-in-azure-sql-db/
[12:51:17] <Nasp> bomb:  It is, but it still can
[12:51:23] <Nasp> Since VS launched separate processes for stuff
[12:51:25] <Nasp> Like roslyn crap
[12:55:04] <MatthiasVance> MaNa2k: What do you mean cross database, do you just want to compare 2 table in different dbs?
[12:55:07] <MatthiasVance> *tables
[12:55:53] <MaNa2k> yes
[12:55:58] <MaNa2k> no
[12:56:12] <MaNa2k> the tables are in different db but on same server
[12:56:23] <MatthiasVance> then I don't see the problem
[12:56:24] <bomb> Nasp: aye
[12:56:36] <MatthiasVance> you select compare, select db1:table1, then db2:table2
[12:56:40] <Nasp> Having build time in minutes wastes so much time
[12:56:50] <MatthiasVance> No need for "cross database querying" or whatever you mean with that :D
[12:57:13] <MaNa2k> MatthiasVance, got any examples ?
[12:57:34] <MatthiasVance> https://usercontent.irccloud-cdn.com/file/3U5bI7sK/image.png
[12:57:38] <MatthiasVance> You select a source and target
[12:57:54] <MaNa2k> MatthiasVance, wtf is that?
[12:58:00] <MaNa2k> i dont have that
[12:58:09] <MatthiasVance> What are you doing then?
[12:58:17] <MatthiasVance> This is VS -> Tools -> SQL Server
[12:58:22] <MatthiasVance> And then you select data or schema
[12:58:49] <MaNa2k> MatthiasVance, i open a new sqlquery windows, then try to query both db, only 1 of the db works because i openened the querywindow wile that db was selected in the object explorer
[12:59:10] <MaNa2k> oh
[12:59:13] <MatthiasVance> That's not what I said earlier though :p
[12:59:14] <MaNa2k> your in visual studio lol
[12:59:19] <MaNa2k> im trying to do this in mssql
[12:59:32] <MaNa2k> ah i see
[12:59:36] <MaNa2k> found that option now
[12:59:37] <MaNa2k> lol
[13:03:35] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 260 seconds)
[13:06:22] <MaNa2k> MatthiasVance, so is it possible to run a query on the result so that we dont get too many records that we dont need
[13:06:49] <MatthiasVance> you want to compare two query outputs or two tables?
[13:07:02] <MaNa2k> two tables, but not all the data
[13:07:13] <MaNa2k> only data with spesific id
[13:07:25] <MatthiasVance> so two queries :')
[13:07:37] <MaNa2k> hehe yes i guess so
[13:07:44] <niston> one of my projects in VS2015 suddenly takes extremely long to build.
[13:08:02] <niston> it says "build started" for about 2 or 3 minutes until it actually starts building.
[13:08:12] <niston> what could be the problem there?
[13:10:32] <MaNa2k> oh fuck, the to tables arnt in the list of comparable tables, because a certain someone did some changes in prod and made that table a view
[13:10:40] <MaNa2k> with same name
[13:10:58] *** Quits: blez (~blez@213.91.182.96) (Ping timeout: 260 seconds)
[13:10:59] <MatthiasVance> niston: Files still in used maybe?
[13:11:06] <MatthiasVance> You could set log level higher for msbuild
[13:13:42] <niston> I doubt it
[13:13:47] <niston> I did a restart and its still the same
[13:15:57] *** Joins: alguien (~alguien@user/alguien)
[13:23:02] <Nasp> I wonder how bad it is for performance to do non async http calls in an MVC Core action filter
[13:25:06] *** Quits: Ducki_ (~ducki@user/ducki) (Ping timeout: 245 seconds)
[13:30:41] <alguien> If the name of the entity type which .HasNoKey() corresponds to the (singular of) the name of the view, can .ToView() be omitted?
[13:32:14] <alguien> In other words, will a keyless entity type map to a view by convention?
[13:32:59] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[13:33:44] *** Joins: csrf (~csrf@user/csrf)
[13:53:11] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[13:55:32] *** Joins: planetcall|work (~planetcal@user/planetcallwork/x-8157852)
[14:01:06] <alguien> It seems ToView is required. I guess that's what "[keyless entities] Are never discovered by convention" means
[14:08:44] *** Joins: X-Scale` (~ARM@46.50.2.19)
[14:11:25] *** Quits: X-Scale (~ARM@46.50.7.99) (Ping timeout: 252 seconds)
[14:11:26] *** X-Scale` is now known as X-Scale
[14:18:10] *** Quits: zaher_ (~zaher@37.48.155.51) (Ping timeout: 260 seconds)
[14:19:51] <MatthiasVance> Nasp: Do a test :D
[14:23:43] *** Joins: zaher (~zaher@188.229.213.228)
[14:24:29] *** Joins: ormaaj2 (~ormaaj2@user/ormaaj)
[14:25:54] *** Parts: ormaaj2 (~ormaaj2@user/ormaaj) ()
[14:27:52] *** Quits: Carbonflux (~Carbonflu@c-24-56-228-141.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[14:37:17] <bomb> haha jmer can play bowling lol.
[14:38:53] <Nasp> MatthiasVance:  Apache benchmark or?
[14:39:20] <Nasp> I wonder if i can use benchmarkDotNet in a way
[14:39:34] <Nasp> But i think it would need to do multiple requests at the same time
[14:40:07] <Nasp> MatthiasVance:  It was just because one of my collegues added a new filter that needs to do a lookup in a permission service for each request
[14:40:12] <Nasp> And it's made synchronous for some reason
[14:45:53] <MatthiasVance> Nasp: Whatever test you normally use to test these kind of things ;D
[14:47:01] <Nasp> Been a while, last i tried using AB but not really a fan
[14:50:47] <jmer> bomb: whaa?
[15:00:30] *** Quits: gguideX (~guideX@user/guidex) (Read error: Connection reset by peer)
[15:05:16] <MaNa2k> MatthiasVance, just wondering, wasnt there a ssdt standalone tool like ssms ? outside of visual studio one could use before
[15:05:43] <MaNa2k> i got it working in visual studio, but was wondering if a standalone existed. cant seem to find it
[15:08:54] <jmer> MaNa2k: there used to be a standalone SSDT but I think they're putting everything into VS
[15:09:05] <MaNa2k> mhm
[15:09:40] *** Joins: Mangy_Dog (~Mange@user/mangy-dog/x-7397214)
[15:10:30] <lz_> is there a preferred way to call c# from python ?
[15:10:54] <MaNa2k> lz_, you dont call c#, c# calls you
[15:11:25] <MatthiasVance> lz_: IronPython (Python from C#?), not sure if it works both ways
[15:12:20] <lz_> MatthiasVance: oh maybe you're right, I thought it was only working in one direction
[15:12:36] <bomb> I'd use ZeroMQ lz_
[15:12:38] <lz_> but I'd like to use a regular python though
[15:12:45] <lz_> bomb: yes that's a good option
[15:13:43] <lz_> python.net looks cool
[15:14:46] <lz_> yeah I think that's what I want
[15:17:36] <bomb> what does that do, embeds cpythin into .NET?
[15:19:37] <lz_> no you get to load clr assemblies from python
[15:19:45] <lz_> seems to work beautifully
[15:20:20] <bomb> sweet. tiny C# scripts in large Python applications
[15:23:17] <Nasp> bomb:  Rabbit is king
[15:23:49] <Nasp> Ohh from python
[15:24:32] <bomb> IMHO British humor sucks
[15:26:54] <lz_> wait it's not .net core compatible yet :(
[15:27:05] <lz_> fml
[15:27:18] <lz_> or is it
[15:28:15] <lz_> "not released yet" :'(
[15:29:21] <bomb> why do you even want .NET Core compatibility? are you gonna deploy to GNU/Linux or what?
[15:31:53] <bomb> just click here to enlarge your perspective:     https://zeromq.org/languages/csharp/     and then here:     https://zeromq.org/languages/python/
[15:34:06] <lz_> I used the master branch on git and I'm getting a bit further :)
[15:34:22] <lz_> I want to use .net core stuff to save me the hassle of writing bindings
[15:34:33] <lz_> or writting?
[15:34:44] <lz_> writing
[15:36:34] *** Quits: bomb (~bomb@user/bomb) (Remote host closed the connection)
[15:37:04] <lz_> I told you I already know about zeromq
[15:37:33] *** Joins: bomb (~bomb@user/bomb)
[15:39:45] <Nasp> bomb:  Why dont you want core compatible
[15:43:44] <lz_> I could load my engine in 2 lines of python, it's beautiful
[15:44:35] *** Joins: Roughy (~mdaw45ns@user/roughy)
[16:00:45] <bomb> Nasp: what would happen if Neo swallowed both blue and red pills?
[16:01:27] <_Shurik_> Matrix would've thrown StackOverflow exception
[16:01:48] <_Shurik_> End of the movie, final credits
[16:03:57] <lz_> or they would cancel each other like matter and anti matter, and neo would be in the one true reality: emptiness
[16:04:23] *** Joins: jamea (~jamea@187.185.190.209)
[16:04:58] <Nasp> I wonder if Dell have fixed their bios in newer versions
[16:05:26] <Nasp> When your 4000 euro laptop is slower than a raspberry pi
[16:13:58] *** Joins: AmR (~AmREiSa@156.199.106.121)
[16:17:59] <planetcall|work> Nasp switch to Mac and run Windows in VM
[16:18:56] *** Joins: jamea77 (~jamea@187.185.190.209)
[16:18:59] *** Quits: jamea (~jamea@187.185.190.209) (Ping timeout: 264 seconds)
[16:19:40] <SKull> heh, i just had the weirdest recruiter on the line. he was chewing my ear off. and he looks like eric trump
[16:19:49] <SKull> https://www.xing.com/profile/Marius_Maier19/cv
[16:21:51] *** Joins: zaher_ (~zaher@37.48.178.131)
[16:26:13] *** Quits: zaher (~zaher@188.229.213.228) (Ping timeout: 265 seconds)
[16:29:28] *** Joins: zaher__ (~zaher@188.229.213.228)
[16:32:28] *** Joins: riksteri (riksteri@gateway/vpn/airvpn/riksteri)
[16:33:30] *** Quits: zaher_ (~zaher@37.48.178.131) (Ping timeout: 260 seconds)
[16:54:17] *** Quits: MaNa2k (~MaNa2k@109.247.79.178) (Quit: Leaving)
[16:54:31] *** Parts: AmR (~AmREiSa@156.199.106.121) (Konversation terminated!)
[17:11:51] <Kim^J> planetcall|work: s/ and run Windows in a VM//
[17:11:58] <Kim^J> Fixed it for you.
[17:13:02] <planetcall|work> Thanks. I can use you to replace my grammarly extension
[17:15:00] *** Quits: jamea77 (~jamea@187.185.190.209) (Ping timeout: 260 seconds)
[17:15:09] * bomb is a Borland Certified Professional Delphi 7 Developer
[17:15:24] *** Joins: jamea (~jamea@187.185.190.209)
[17:17:02] <Nasp> planetcall|work:  I've considered just getting some ultrabook with 4G and then remote to a decent pc
[17:20:49] <shadowchaser> Kim^J +1
[17:21:55] <shadowchaser> my first attempt to switch to mac failed because i was too tied to windows and used it in VM, hated it more than actual windows
[17:31:36] <Nasp> Switching back and forth isnt nice
[17:34:24] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[17:34:55] <CodePoint> is there a way to move an object in C#?  Somthing that is similar in definition to std::move in c++?
[17:37:26] <bomb> CodePoint: just assign to another var?
[17:37:52] <lz_> SKull: what is xing.com ?
[17:40:26] <CodePoint> bomb: you're real question is why it might be necessary to move an object's resources rather than copy them or reference them directly.  Please refrain from speaking if you are not familiar with the problemset.
[17:41:09] *** zaher__ is now known as zaher
[17:41:36] *** Joins: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com)
[17:42:49] <bomb> CodePoint: you should stop speaking English, then
[17:43:01] <biberu> CodePoint: perhaps you should explain your use case?
[17:45:05] <Nasp> Man that is aggresive
[17:46:30] <CodePoint> Nasp: it is not.
[17:46:45] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Quit: CodePoint)
[17:46:53] *** Joins: zaher_ (~zaher@37.48.147.96)
[17:47:09] <bomb> special snowflake
[17:50:17] <Nasp> Are you sure? Look at the question you asked
[17:50:29] <Nasp> Someone tried to answer but you obviously didnt give enough information
[17:51:06] *** Quits: zaher (~zaher@188.229.213.228) (Ping timeout: 258 seconds)
[17:51:14] <bomb> he's gone Nasp
[17:51:54] <bomb> for a moment I thought you're roasting me lol
[17:52:18] <jbe> "was he ever really here though?"
[17:52:28] <bomb> geez
[18:02:51] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[18:10:06] *** Joins: jamea77 (~jamea@187.185.190.209)
[18:11:35] *** Quits: jamea (~jamea@187.185.190.209) (Ping timeout: 260 seconds)
[18:14:35] *** Joins: cn--j (~cn-j@user/cn-j)
[18:15:17] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[18:22:55] <Nasp> Whenever i try to use UI for rebasing it fucks up
[18:23:03] <Nasp> Drag your branch onto master to rebase upon master
[18:23:15] <Nasp> Wouldn't it make more sense to drag master onto the branch you are working on?
[18:24:34] *** Joins: Ducki (~ducki@user/ducki)
[18:24:53] *** Joins: stiv3n (~stiv3n@107.182.237.14)
[18:26:47] *** Joins: guideX (~guideX@user/guidex)
[18:39:38] *** Quits: getivan (~getivan@047-032-214-100.res.spectrum.com) (Quit: Leaving)
[18:41:07] *** Joins: kagevf (~jfh@ip68-108-33-76.lv.lv.cox.net)
[18:47:48] <biberu> what makes sense is git rebase ;)
[18:50:10] <Kim^J> Oh dear god no.
[18:50:38] * biberu rebases Kim^J
[18:51:08] <Kim^J> biberu: I've actually stopped doing rebases and doing merges now...
[18:51:17] <Kim^J> Merge upstream into my fork
[18:51:27] <Kim^J> Just too much hassle with the rebasing
[18:52:41] <biberu> Kim^J: what kind of problems were you having? i always rebase features
[18:53:36] <biberu> well, unless they are shared
[18:56:18] <sysRPL> is anyone here familiar with linking to c runtime (msvcrt for example) using mingw?
[18:56:53] <Kim^J> biberu: Well, I have the upstream/master from the "left", my origin/master in the middle, then origin/feature-x from the right
[18:57:31] <Kim^J> Rebasing origin/master on upstream/master to fetch new updates from upstream while at the same time rebasing origin/feature-x, just too much hassle.
[18:57:48] <sysRPL> i am builging a c library (nanovg) using mingw kicking out obj files, but when i link those obj files to fpc (the free pascal compiler) it errors out unknown references to c runtion functions like fopen, malloc and so on
[18:57:50] <Kim^J> Sure, now I have "ugly" merge-commits, but meh, gives me a clear view when I synced with the upstream.
[18:57:59] <sysRPL> even though i am also linking to msvcr
[18:58:09] <sysRPL> msvcrt even
[18:58:50] <biberu> Kim^J: hm, did you try if git rerere helps with that?
[18:59:13] <Kim^J> biberu: I've given up on that adventure entirely
[18:59:18] <Kim^J> biberu: For one project
[18:59:30] <Kim^J> For our 100% internal ones, we still rebase
[19:05:19] *** Quits: bomb (~bomb@user/bomb) (Quit: ‏‏‎ ‎)
[19:13:36] *** Miles9of9 is now known as Miles8of9
[19:16:45] *** Joins: Sora (~Guest@152.78.249.50)
[19:17:11] <Sora> is there any benefit in doing var result = await funcasync(); over var result = func();
[19:18:02] <Sora> say in a web app specifically
[19:18:45] <jonp> yes?
[19:18:51] <planetcall|work> Sora, one is asynchronous and other is synchronous
[19:18:59] <jonp> the usual benefit is that the operation can be performed
[19:19:10] <jonp> in that *usually* you don't have both synchronous and async variants at the same time
[19:19:25] <jonp> *sometimes* you do, e.g. System.IO.Stream, but not always.  usually you have no choice.
[19:19:30] <Sora> but don't both block the current function until the result is obtained
[19:19:38] <jonp> not exactly
[19:19:49] <Sora> or is there some magic rearrangement
[19:19:51] <Sora> of a function
[19:19:51] <jonp> the async version "suspends" current execution, allowing the thread to execute *other* code
[19:20:05] <jonp> are you familiar with the phrase "continuation passing style"?
[19:20:27] <jonp> with async/await, the compiler *rewrites* your code so that every `await` becomes a continuation.
[19:20:42] <jonp> the method *returns* at the await, and then the next time the method is invoked, it resumes from where it left off
[19:20:45] <jonp> it's...weird.
[19:21:02] <jonp> but has many benefits, e.g. with GUI apps it means the UI thread *is not blocked*
[19:21:06] <Kim^J> Sora: Yes, both block the current flow, in that function.
[19:21:27] <Sora> I mean I have just learned to make everything async if possible
[19:21:30] <Sora> and it all magically "works"
[19:21:35] <Sora> but not really "why"
[19:21:45] <Kim^J> Oh the lovely dangerous world of async xD
[19:22:01] <Sora> if I have a web app and I'm pulling a value from a database for a page load
[19:22:02] <Kim^J> This is exactly why I don't like this "async everything".
[19:22:04] <jonp> Sora: https://devblogs.microsoft.com/oldnewthing/20170720-00/?p=96655
[19:23:05] <jonp> plus: https://devblogs.microsoft.com/oldnewthing/20170721-00/?p=96665
[19:23:56] <Sora> oh no I clearly know nothing
[19:24:10] <Sora> easier question then
[19:24:19] <jonp> it's a "simple" veneer over a very complicated infrastructure
[19:24:35] <Sora> if I find myself writing "await asyncfunc()" a lot, and not actually writing my code to say, launch 4 async functions, then await all 4 so they are all running at once
[19:24:37] <Sora> that is fine?
[19:24:51] <jonp> that is fine
[19:24:57] <Sora> and actually has benefits for say, a web app?
[19:25:03] <Sora> i know it unblocks the main thread of a gui app
[19:25:17] <jonp> not that doing them all "in parallel" wouldn't be *better*; it would
[19:25:22] *** Quits: Babbage (Babbage@5ec36293.skybroadband.com) (Remote host closed the connection)
[19:25:22] <jonp> but it's "fine"
[19:25:40] <Sora> well yes, it would be better, but sometimes you need the result of something before you can do the next something :p
[19:25:48] <jonp> right
[19:31:18] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Ping timeout: 260 seconds)
[19:32:36] *** Joins: zaher (~zaher@37.48.147.96)
[19:33:10] *** Quits: zaher_ (~zaher@37.48.147.96) (Ping timeout: 260 seconds)
[19:39:29] *** Joins: zaher_ (~zaher@37.48.187.217)
[19:39:42] *** Quits: zaher (~zaher@37.48.147.96) (Ping timeout: 260 seconds)
[19:40:25] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[19:54:01] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[19:55:59] <Nasp> Kim^J:  The worst part about async is that you kinda need to use it allll the way
[19:56:16] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[19:57:10] *** Quits: jamea77 (~jamea@187.185.190.209) (Ping timeout: 260 seconds)
[19:57:36] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 258 seconds)
[20:01:09] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[20:05:10] <lz_> anyone knows where I can find the windows forms assembly for .net core?
[20:06:35] <lz_> lemme use reflection's magic
[20:06:35] <Suchiman> lz_: where it's stored on disk?
[20:06:45] <lz_> Suchiman: yes :)
[20:06:56] <Suchiman> lz_: "C:\Program Files (x86)\dotnet\shared\Microsoft.WindowsDesktop.App\5.0.11\System.Windows.Forms.dll"
[20:07:05] <lz_> thank you <3
[20:07:14] <lz_> ur faster than reflection :D
[20:07:41] <Suchiman> lz_: everything is the best :P https://welp.dev/Everything_2021-10-21_18-37-35.png
[20:09:59] <lz_> it looks like pythonnet isn't too happy about loading those
[20:12:08] *** Joins: alguien (~alguien@user/alguien)
[20:12:22] <lz_> ah, got it
[20:12:46] <Nasp> I have a project that marks itself as dirty when there are no change when building :/
[20:13:00] <Nasp> Fixed a few others because they were set to CopyAlways
[20:14:47] *** Quits: BSaboia (~bsaboia@187.19.138.198) (Quit: This computer has gone to sleep)
[20:26:11] *** Quits: _gandhibobandhi (~gandhibob@2a02:8109:86c0:4a40:a4ab:c083:7c4a:c15c) (Ping timeout: 264 seconds)
[20:32:40] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[20:33:46] <Nasp> I can't find the Jira key for a specific project :/
[20:51:20] *** Joins: jamea (~jamea@189.237.77.168)
[20:54:51] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[20:58:29] *** Joins: bomb (~bomb@user/bomb)
[20:59:07] *** Quits: bomb (~bomb@user/bomb) (Remote host closed the connection)
[20:59:30] *** Joins: bomb (~bomb@user/bomb)
[21:04:58] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:05:10] *** Quits: bomb (~bomb@user/bomb) (Remote host closed the connection)
[21:05:27] *** Joins: bomb (~bomb@user/bomb)
[21:10:01] *** Quits: bomb (~bomb@user/bomb) (Remote host closed the connection)
[21:12:32] *** Joins: bomb (~bomb@user/bomb)
[21:22:38] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:1879:cbeb:476f:d1d6) (Quit: Textual IRC Client: www.textualapp.com)
[21:26:45] <bomb> https://twitter.com/rising_serpent/status/1449809203359592448
[21:34:19] *** Joins: Assault (~Assault@87-95-123-155.bb.dnainternet.fi)
[21:37:25] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[21:38:05] <Nasp> :D
[21:38:20] <Nasp> People just go crazy if you say there are side effects to the vaccine
[21:38:29] <Nasp> "OMG YOU ANTI VAXER TRUMP SUPPORTER"
[21:38:38] <jonp> there are side effects to *not* taking the vaccine too
[21:39:08] <Nasp> Sure, but what do those of us who got side effect from 2nd show do when 3rd shot becomes mandatory?
[21:39:57] <jonp> the 1st shot would need to become mandatory first, and there's a ton of pushback about that.
[21:40:04] <jonp> which is why we need to start mandating them
[21:40:25] <Nasp> Then we need to kill those who refuse
[21:40:34] <jonp> the virus will do that for us
[21:40:40] <Nasp> Not necessarily
[21:41:32] *** Quits: malt (~malt@user/malt) (Quit: WeeChat 2.8)
[21:41:33] <jonp> first, make a convincing argument that vaccines plus side effects are worse than covid + long covid
[21:41:50] <jonp> assuming, you know, that you acknowledge that COVID exists
[21:42:40] *** Joins: malt (~malt@user/malt)
[21:43:32] <bomb> but it's not 100% certainty that you'll get covid
[21:43:57] <jonp> and it's not 100% certain you *won't* get it either
[21:45:21] <bomb> like, how much percent? so we can measure its risk versus vaccine side effects
[21:46:20] <jonp> we've have several *billion* vaccine does used.
[21:46:23] <jonp> how many side effects are there?
[21:46:32] <jonp> not 0, certainly, but comparatively speaking?  not a lot.
[21:46:39] <jonp> quite possibly the safest vaccine in history
[21:46:49] <jonp> doses
[21:47:13] <jonp> compare to covid, which even if you don't die, can still fuck you up.  google "long covid" some time
[21:47:17] <jonp> it's not good
[21:47:52] <kenanmarasli> it is too early to be sure, I already take lots of precautions so that it would be highly unlikely for me to get covid, but I got vaccinated because those were effectively mandated here
[21:49:36] <Nasp> Safest?
[21:49:45] <Nasp> Wouldn't that be one of those used for many years
[21:49:56] <jonp> you think those have no side effects?
[21:50:21] *** Quits: bomb (~bomb@user/bomb) (Remote host closed the connection)
[21:50:38] <redoc> No Vaccine here, been around millions of people since March 2020, never had covid, none of my co-workers have had covid. None of my coworkers are vaccinated.
[21:50:46] *** Joins: bomb (~bomb@user/bomb)
[21:50:53] <redoc> hope i dont get it, but i will still take my chances.
[21:51:12] <Nasp> I'm not saying they don't but you dont have to sit around for 20 minutes after getting those shots
[21:51:24] <pazof> don't touch this fuckin' shit of jabs
[21:51:41] <bomb> kenanmarasli: that sucks. it's not mandatory, but if you don't, you'll lose your job, your rights to travel, your rights to get education...
[21:52:06] <redoc> bomb, this is how you force something on legally.
[21:52:09] <pazof> don't loose your life, you children
[21:52:28] <pazof> it kills people
[21:52:28] <bomb> oof
[21:52:38] <Nasp> bomb:  Not mandatory, you just have to become a hermit crab
[21:52:47] <redoc> I am not against it, just personally i will wait as long as i can.
[21:52:56] <kenanmarasli> bomb: yup, sounds familiar
[21:52:57] <redoc> what i am against is forcing it on children.
[21:53:39] <pazof> all vaccination stuff actually smells the shit
[21:53:46] *** Joins: jamea77 (~jamea@189.237.77.168)
[21:54:00] <MizMahem> hmm, naming/methodology question. If I have a... I guess Decorater pattern class is the name of it? Where I wrap a class in another class in order to expose another property. The decorator class has a constructor that takes the wrapped object and the property.
[21:54:28] <jonp> redoc: what about measles vaccines? smallpox?  whooping cough?
[21:54:46] <MizMahem>  Anyways, I thought the best way to handle the transformation to the decorator would be to add an extension method to the original class, since I didn't want to clutter up my interface or my inheritance structure with this method (in fact, not wanting to mess up my inheritance structure is why I made the decorator in the first place).
[21:54:54] <redoc> jonp: if they can be administered by the childrens personal doctor, i am all for it.
[21:55:02] <jonp> which they'll be doing.
[21:55:08] <redoc> until then...
[21:55:23] <MizMahem> The question is, was this good thinking, and what should I name the extension method? Right now I've called it `WithProperty` but I'm open to other suggestions.
[21:55:33] <Nasp> MizMahem:  Why modify the original class
[21:55:34] *** zaher_ is now known as zaher
[21:55:40] <Nasp> Like you said you wrap the dacorator around it
[21:55:48] <pazof> what about aluminium in your measles vaccines ?
[21:56:06] <MizMahem> I'm not modifying the original class. I made an extension method to handle the transformation.
[21:56:21] <Nasp> Still not sure what the question is then
[21:56:26] *** Quits: jamea (~jamea@189.237.77.168) (Ping timeout: 260 seconds)
[21:56:26] <pazof> measles that isn't existing any more, except in some P4 Lab
[21:56:31] <Nasp> new MyDecorator(new OriginalClass())
[21:56:37] <MizMahem> what do I name the Method :p
[21:57:41] <Nasp> What method
[21:57:42] <MizMahem> right now I've named it `IDecoratedInterface WithProperty(this IUndecoratedClass, object Property)`
[21:58:06] <MizMahem> the extension method that makes construction easier.
[21:58:30] <pazof> and evolutive
[21:58:51] <pazof> avoiding use of the "new" keyword
[21:58:53] <Nasp> What's object property?
[21:59:05] <MizMahem> the new property that the decorator exposes.
[21:59:17] <Nasp> So the decorator?
[21:59:25] *** Quits: bomb (~bomb@user/bomb) (Remote host closed the connection)
[21:59:25] <Nasp> Shouldn't that be IUndecoratedClass
[21:59:37] <Nasp> Which is also what should be returned
[21:59:58] *** Joins: bomb (~bomb@user/bomb)
[22:00:06] <MizMahem> no, maybe I have my terminology wrong here, but the "decorator" is what I'm calling the object that wraps the class.
[22:00:18] <MizMahem> Property is just the reason why I'm wrapping it.
[22:00:36] <ki9a> so. got win11
[22:01:03] <pazof> :-) what for?
[22:01:28] <redoc> I love windows 11 :P
[22:01:33] <MizMahem> the thinking is you can do something like this: `IDecoratedInterface decorated = new UndecoratedClass(params).WithProperty(additionalProperty);`
[22:01:42] <redoc> its amazing what rounded edges can do
[22:02:17] * MizMahem waves a hand
[22:02:18] <Nasp> ki9a:  UPgrade or fresh install?
[22:02:20] <MizMahem> or something like that.
[22:02:23] <ki9a> upgrade
[22:02:32] <ki9a> so opening the taskbar settings kills the taskbar
[22:02:36] <ki9a> only hav that on my main pc
[22:02:39] <ki9a> not laptop
[22:02:43] <Nasp> Never do an upgrade
[22:02:54] <Nasp> I wonder if they will keep the old taskbar UI
[22:03:01] <Nasp> I have a feeling it will be removed very soon in a windows update
[22:03:25] <redoc> The only system i upgraded to windows 11 failed about a week later, had to do a fresh install
[22:03:46] <redoc> although i did upgrade my surface and that's been fine.
[22:04:58] *** Joins: Lukky (~Lukky@66.187.113.162)
[22:05:08] <Lukky> Hi
[22:09:00] *** Joins: jamea (~jamea@189.237.77.168)
[22:09:58] *** Quits: jamea77 (~jamea@189.237.77.168) (Ping timeout: 260 seconds)
[22:10:51] <redoc> hi Lukky
[22:12:41] *** Quits: cn--j (~cn-j@user/cn-j) (Read error: Connection reset by peer)
[22:13:01] *** Joins: cn--j (~cn-j@user/cn-j)
[22:13:57] <Lukky> Gaaahhh... trying to refresh how to overload operators as non-class member  :-)
[22:14:37] <Lukky> Starting tyo think I'm mixing up languages...
[22:14:43] <jonp> indeed
[22:14:48] <jonp> C# requires that operators be class members
[22:15:11] <Lukky> ahh.. makes sense why I'm not finding anything...
[22:15:49] <Lukky> What's the "best practice" in C# if you don't have access to the class code?
[22:16:09] <jonp> you're not gonna add an operator for it. :-)
[22:16:21] <Lukky> ohh?
[22:16:33] <jonp> not to it, anyway
[22:16:41] <jonp> you could add operators to a different class…
[22:16:52] <jonp> but an operator needs to have the declaring type as one of the parameters
[22:17:32] <Lukky> ok... no biggie... I was confused between C++ and C# :-)
[22:20:02] *** Quits: Acem (acem@27.ip-37-187-211.eu) (Ping timeout: 246 seconds)
[22:21:22] *** Quits: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[22:25:47] <kenanmarasli> you can write an extension method
[22:28:50] <Nasp> Not one that overrides operators
[22:30:05] <kenanmarasli> yeah
[22:31:43] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:3590:2793:65fc:c076)
[22:35:08] <biberu> does it have to be an operator?
[22:35:43] <MizMahem> so I am confused about Spans. Assuming I otherwise know the portion of an array (in this case a string) I want to parse. Is it still faster to pass a `Span` rather than a string? I guess I don't know enough to know if passing a struct (which I assume is copied)? Is better then just passing the reference to the string.
[22:36:43] <bpmedley> MizMahem : What percent of the string is utilized in the called function?
[22:36:47] <jonp> if it's a string, the string will likely be faster.
[22:36:58] <jonp> but not by a huge amount
[22:37:07] <bpmedley> I guess it's just a reference anyway with string.. oops..
[22:37:09] <MizMahem> bpmedley: mm, hard to say. Maybe half? It depends.
[22:37:28] <biberu> maybe you don't want to expose the entire string? maybe you just want a view of the relevant portion?
[22:37:51] <bpmedley> MizMahem : In that scenario I would go with code clarity.  As was just mentioned maybe a view would be cleaner and easier understood.
[22:38:11] <MizMahem> well passing a Span would let me slice and make my parsing method static. But this is all internal, so it just depends on how I want to do it.
[22:38:17] <ki9a> span is likely to be faster than calling substring
[22:38:42] <MizMahem> I wouldn't be calling substring (alas, I know that would be faster, but not what I'm doing)
[22:39:01] <MizMahem> and I don't think there is any real difference in calling a static method vs a instance one, right.
[22:39:12] <biberu> MizMahem: foo(span), foo(str,i,j)
[22:40:03] <biberu> even if you can just pass around a reference to the same string spans might be clearer
[22:40:04] <bpmedley> Are you vying for future code clarity, lowering execution time, lowering time of development, or something else?
[22:40:05] <MizMahem> well it's more like, inside my class if I get to this point, I know the size of `i`, so if I use an instance method, I don't really have to slice it.
[22:40:19] <MizMahem> "yes?" I'm just futzing around.
[22:42:03] <bomb> https://www.youtube.com/watch?v=wgzdb0txR_c
[22:42:09] <bpmedley> My reason for asking is that I don't understand what "real difference" is comparing in your earlier query.  Perhaps you were asking about the results of the functions?
[22:44:58] <MizMahem> well I guess the primary thing I was wondering about was speed, since it's the one aspect I can't judge at a glane.
[22:45:21] <MizMahem> I can make my own determinations about what methods are easier to work with I suppose.
[22:52:10] *** Quits: highrate (~presonic@24-0-237-24.gci.net) (Ping timeout: 260 seconds)
[22:54:25] <MizMahem> Although for what it's worth, here are the two methods. https://www.irccloud.com/pastebin/ggu9Wyl9/ParseOptions.cs
[22:57:01] <biberu> MizMahem: an advantage of the span version is that it can be combined with other steps without clients needing to create new strings
[22:57:55] *** Joins: Acem (acem@27.ip-37-187-211.eu)
[22:58:43] <MizMahem> this is true, and I thought about that. I actually have a similar call elsewhere, but I don't think there will be a good way for me to expose this to other methods.
[22:58:52] <Suchiman> MizMahem: uh... why are you not using Int32.Parse?
[23:00:16] <MizMahem> well... it's complicated. I was originally parsing more than just this number so I already had the setup, but then I refactored things and this part got split out.
[23:00:47] <MizMahem> Honestly, using the `int` parse methods didn't occur to me, although hmm...
[23:01:08] <MizMahem> well I don't want to accept negative numbers for one.
[23:01:42] <MizMahem> and since I've already written it, it probably is a bit faster, since I'm not dealing with culture and negatives and what not.
[23:02:39] <Suchiman> MizMahem: use UInt32.Parse then and cast to int :P xD
[23:03:44] <MizMahem> hmm... do the Parse methods take a span? That would actually be useful.
[23:03:53] <Suchiman> MizMahem: they do (in core
[23:05:05] *** Joins: zaher_ (~zaher@37.48.186.177)
[23:05:21] <Suchiman> MizMahem: actually, here's  a trick heh, Int32.Parse("-11", System.Globalization.NumberStyles.None) <--- None disallows the - sign so there you go xD
[23:05:35] <MizMahem> hmm... it's a good idea honestly. But I think I will keep this both because I am stuborn, and because I want to be more strict about what I accept. `Parse` would... hmm...
[23:06:00] <MizMahem> would `System.Globalization.NumberStyles.None` disallow commas and whitespace?
[23:06:24] <Suchiman> yes
[23:07:05] <MizMahem> the things is, I'm emulating string.Format formats, and so I want to emulate their requirements.
[23:07:16] <MizMahem> hmm...
[23:07:22] *** Quits: zaher (~zaher@37.48.187.217) (Ping timeout: 260 seconds)
[23:08:27] <MizMahem> and I was going to write a `ReadOnlySpan` parsewhile extension to...
[23:10:07] <MizMahem> someething like `TResult ParseWhileAggregate<T, TResult>(this ReadOnlySpan<T> span, Func<T, bool> predicate, Func<T, TResult> aggregator)`
[23:10:13] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:3590:2793:65fc:c076) (Quit: Textual IRC Client: www.textualapp.com)
[23:11:43] <biberu> MizMahem: have you found parser combinators?
[23:12:35] *** Quits: Assault (~Assault@87-95-123-155.bb.dnainternet.fi) (Ping timeout: 260 seconds)
[23:12:46] <MizMahem> then I could call it with `mySpan.ParseWhileAggregate(c => c >= '0' && c <= '9', (digit, precision) =>  precision * 10 + digit - '0')`
[23:12:57] <MizMahem> biberu: what's that?
[23:14:32] <MizMahem> (got the signature slightly wrong on my idea, but still should be generally valid).
[23:14:53] <Suchiman> MizMahem: yeah i like Int32.Parse(mySpan, NumberStyles.None); better xD
[23:15:16] <MizMahem> well sure, if you want to be BORING.
[23:15:24] *** Joins: jamea77 (~jamea@189.237.77.168)
[23:15:32] <biberu> MizMahem: just on a phone, but look it up, feels like it might be of interest (and probably fun) to you
[23:16:46] <MizMahem> biberu: reading the wiki article now. Interesting. Not here, but kinda what I am doing elsewhere.
[23:17:15] *** Quits: jamea (~jamea@189.237.77.168) (Ping timeout: 260 seconds)
[23:17:37] <Suchiman> MizMahem: or you just copy the official implementation :P https://source.dot.net/#System.Private.CoreLib/ValueStringBuilder.AppendFormat.cs,be28d48d3389a162
[23:18:20] <MizMahem> Suchiman: I did crib from them.
[23:18:28] <MizMahem> That's where I got the: `index = index * 10 + ch - '0';` trick from.
[23:18:40] *** Quits: riksteri (riksteri@gateway/vpn/airvpn/riksteri) (Quit: riksteri)
[23:19:11] <MizMahem> and I was going to even more, but then I found the `FormattableString` class instead.
[23:19:14] <Suchiman> MizMahem: ah, booo xD
[23:19:36] <Suchiman> MizMahem: and here i thought you came up with that yourself ;P
[23:19:49] <MizMahem> sorry, I'm not that smart.
[23:20:06] <MizMahem> took me a good sec to figure out WTF it was doing to.
[23:22:15] <bomb> you spelled WPF wrong
[23:24:03] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[23:27:56] <MizMahem> Wrote it anyways, just for fun. https://www.irccloud.com/pastebin/83eHASip/ParseWhileAggregate.cs
[23:28:40] <MizMahem> not tested yet, don't use.
[23:28:49] <MizMahem> I think I have an off by one error in there.
[23:30:40] *** Quits: planetcall|work (~planetcal@user/planetcallwork/x-8157852) (Quit: Leaving)
[23:33:47] *** zaher_ is now known as zaher
[23:34:23] <MizMahem> here we go: https://sharplab.io/#gist:c95cc4abf19efdfba39e39d5673508a6
[23:34:52] <MizMahem> although now that I've written it, no particular reason why this couldn't just be an IEnumerable extension.
[23:35:22] <MizMahem> although typically you wouldn't see such a method with an out parameter.
[23:47:27] *** Joins: sysRPN (~sysRPN@097-101-210-085.res.spectrum.com)
[23:49:09] <MizMahem> As a LINQ extension instead. https://www.irccloud.com/pastebin/49xIHwiY/WhileAggregate.cs
[23:52:36] <sysRPN> does anyone here use MSVC in visual studio?
[23:52:50] <sysRPN> it (vs) is REFUSING to turn off precompiled headers
[23:53:05] <sysRPN> i have set ... Properties -> C++ -> Precompiled Header : Not Using Precompiled Headers
[23:53:17] <bomb> what's up with your nickname, though?
[23:53:27] <sysRPN> i am on windows
[23:53:31] <bomb> did you leave Lazarus, that's why you dropped L
[23:53:40] <sysRPN> no
[23:53:45] <bomb> ah L standed for Linux, gotcha
[23:53:48] <sysRPN> i am still logged in on my linux pc
[23:53:51] <bomb> and N is Windows NT
[23:53:54] <sysRPN> yeah
[23:54:01] <sysRPN> Error	C1010 unexpected end of file while looking for precompiled header. Did you forget to add '#include "pch.h"' to your source?
[23:54:09] <sysRPN> wtf
[23:54:20] <bomb> why don't you just use MinGW?
[23:54:43] <sysRPN> if i leave pch on, then msvc gets errors when i add my own custom opengl header
[23:55:03] <bpmedley> https://platform.uno/blog/uno-platform-3-10-day-0-support-for-net-6-rc1-winui-infobadge-windows-11-fluent-styles  <-- The new Fluent styles look interesting
[23:55:08] <sysRPN> bomb: mingw has problems linking to crt
[23:55:40] <bomb> I see
[23:56:32] <MizMahem> huh. `ReadOnlySpan` doesn't implement `IEnumerable`? I could have sworn it does.
[23:57:18] *** Quits: jamea77 (~jamea@189.237.77.168) (Ping timeout: 260 seconds)
