[00:00:30] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:cd5e:2d67:5a51:36f8)
[00:01:07] <Ottega[m]> > <@muaddib:gnuradio.org> Ottega: have you tried this tutorial?
[00:01:07] <Ottega[m]> > https://wiki.gnuradio.org/index.php?title=Packet_Communications
[00:01:07] <Ottega[m]> No, I haven't. But thank you. I'll try it out first thing tomorrow. 
[00:01:35] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:cd5e:2d67:5a51:36f8) (Client Quit)
[00:03:05] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:cd5e:2d67:5a51:36f8)
[00:06:10] *** Quits: yesno (~yesno@109.98.151.62) (Quit: Leaving)
[00:14:25] <tristero> how can I use the constants pi or tau in an expression for a block parameter?
[00:14:49] <Myon> math.pi
[00:15:44] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:cd5e:2d67:5a51:36f8) (Quit: uros)
[00:16:02] <Myon> or maybe numpy
[00:16:19] <mait[m]> All the good versions of Python now define math.tau
[00:16:32] <Myon> but today is pi day, so that's ok
[00:20:26] <Myon> Ottega[m]: add a Python Module block, name it "stuff", put "import math" in the body, and use stuff.math.pi in the expression
[00:21:13] <Myon> ah, or use an "Import" block which is actually meant to do that
[00:29:12] <jogn_1[m]> Just a question regarding the blocks, what is the difference between sync block, and a basic block? From what I understand, there's just a few limitation in terms of I/O items
[00:29:29] <jogn_1[m]> Like, what would be a good thumb of rule when choosing one over the other?
[00:34:10] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 260 seconds)
[00:34:59] <jogn_1[m]> rule of thumb* :P
[00:35:34] <Myon> now that's an entirely different question!
[00:49:55] <warnes[m]> <Myon> "I was wondering about the..." <- Wouldn't it be straightforward to provide a default message handler that can automatically handle set-* get-* methods?
[00:53:19] *** Quits: jemius (~imperator@200116b82d0976009b410920230dc27b.dip.versatel-1u1.de) (Quit: Leaving)
[01:04:51] *** Quits: tj123_ (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Remote host closed the connection)
[01:04:58] *** Joins: tj123__ (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[01:23:09] <Myon> warnes[m]: that would be ideal, yes
[01:23:25] <Myon> no extra coding necessary
[01:41:50] <schneider> i'm back with a strange some performance issue on my rpi4 :)
[01:42:04] <schneider> i'm using soapy with a limesdr
[01:42:25] <schneider> and i'm losing about 0.1% of samples on the way from the sdr to the flow graph
[01:42:51] <schneider> no idea how to propery debug this. gr-soapy does not print any warnings
[01:42:56] <schneider> properly
[01:43:41] <schneider> it has something to do with the system load. if the load is low, everyting is fine. when the load goes up a "tiny" amount of samples is lost
[01:56:01] *** Quits: w1r3d (~w1r3d@user/w1r3d) (Remote host closed the connection)
[01:56:38] *** Joins: w1r3d (~w1r3d@user/w1r3d)
[02:04:55] *** Quits: DiffieHellman (~Username@user/curve25519chacha) (Ping timeout: 240 seconds)
[02:06:03] *** Joins: DiffieHellman (~Username@user/curve25519chacha)
[02:11:49] *** Quits: tj123__ (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Remote host closed the connection)
[02:12:11] *** Joins: tj123__ (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[02:12:54] *** Quits: w1r3d (~w1r3d@user/w1r3d) (Remote host closed the connection)
[02:13:59] *** Joins: w1r3d (~w1r3d@user/w1r3d)
[02:29:41] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[02:41:46] *** Joins: gry (~gry@botters/gry)
[02:57:25] <jholtom> schneider: you're probably just sitting on the border of what the system can move through memory
[03:13:18] *** Joins: harish (~harish@158.140.144.42)
[03:29:48] <schneider> i recompiled soapysdr and set the "performanceLatency" from 0.5 to 1.0. That doubled the max output buffer of the block. looks much better now
[03:30:11] <schneider> sorry, not soapysdr, but SoapyLMS7
[03:30:37] <schneider> wasn't able to set the parameter through the streamargs
[03:37:55] <schneider> so yeah, look like this calculation is a bit on the low side: https://github.com/myriadrf/LimeSuite/blob/master/src/protocols/Streamer.cpp#L235
[03:38:27] <schneider> it's a bit convoluted, but for example receiving a single 8 MSPS stream generate an output buffer of 4080 samples
[03:40:18] <schneider> and apparently that was too low for my system to work properly. increasing performanceLatency to 1 doubled this to 8160 samples which seems to be just enough
[03:41:13] <schneider> the fact that there was no warning being printed is a bit sad though
[03:46:17] <schneider> hm. the low level driver loop is noticing it, but that information is lost somewhere
[03:51:33] <schneider> ok, that is mapped to "SOAPY_SDR_TIME_ERROR" which is not explicity handled by gr-soapy
[03:57:58] <schneider> nope, more complex than that. this information is only meant to be available via readStreamStatus() which gr-soapy doesn't call at all. readStream() does not tell gr-soapy about this
[03:58:37] *** Quits: goldrak (~goldrak@bl16-27-108.dsl.telepac.pt) (Ping timeout: 240 seconds)
[03:59:10] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Quit: Leaving)
[04:06:31] *** Joins: joj_ (~joj@45.76.142.39)
[04:07:02] *** Quits: n1ai[m] (~dcherkusm@2001:470:69fc:105::1:cb58) (Ping timeout: 240 seconds)
[04:07:02] *** Quits: tomaspland[m] (~tomasplan@2001:470:69fc:105::1:c6f2) (Ping timeout: 240 seconds)
[04:07:02] *** Quits: aaknitt[m] (~aaknittgn@2001:470:69fc:105::1:7045) (Ping timeout: 240 seconds)
[04:07:02] *** Quits: BarryDuggan[m] (~kv4fvgnur@2001:470:69fc:105::3927) (Ping timeout: 240 seconds)
[04:07:02] *** Quits: joj (~joj@jojeee.xyz) (Ping timeout: 240 seconds)
[04:07:32] *** Quits: xloem[m] (~xloemmatr@2001:470:69fc:105::460d) (Ping timeout: 240 seconds)
[04:08:25] *** Joins: aaknitt[m] (~aaknittgn@2001:470:69fc:105::1:7045)
[04:08:25] *** Joins: BarryDuggan[m] (~kv4fvgnur@2001:470:69fc:105::3927)
[04:18:17] *** Joins: Dustin[m] (~dustinsou@2001:470:69fc:105::1:db05)
[04:20:38] *** Joins: tomaspland[m] (~tomasplan@2001:470:69fc:105::1:c6f2)
[04:23:59] *** Joins: n1ai[m] (~dcherkusm@2001:470:69fc:105::1:cb58)
[04:25:03] *** Joins: xloem[m] (~xloemmatr@2001:470:69fc:105::460d)
[04:40:24] *** Joins: harish_ (~harish@158.140.144.42)
[04:42:11] *** Joins: linext_ (~linext@pool-173-63-46-155.nwrknj.fios.verizon.net)
[04:44:10] *** Quits: linext (~linext@pool-173-63-46-155.nwrknj.fios.verizon.net) (Ping timeout: 272 seconds)
[05:00:41] *** Quits: hasu (~hasu@58x13x224x139.ap58.ftth.ucom.ne.jp) (Ping timeout: 256 seconds)
[05:01:58] *** Joins: hasu (~hasu@58x13x224x139.ap58.ftth.ucom.ne.jp)
[05:14:06] *** Quits: TD-Linux (~Thomas@user/td-linux) (Ping timeout: 245 seconds)
[05:15:01] *** Quits: harish_ (~harish@158.140.144.42) (Quit: Leaving)
[05:16:29] *** Joins: TD-Linux (~Thomas@user/td-linux)
[05:44:14] <muaddib[m]> This sounds a lot like the UHD num_recv_frames recv_frame_size stuff right? 
[05:44:14] <muaddib[m]> Have you run this over time? Curious if it lasts
[05:49:20] <muaddib[m]> I think that low latency parameters are gonna reduce overall throughput cause they use smaller buffers. 
[05:49:20] <muaddib[m]> In RX only or latency tolerant applications raising latency can  help with throughout but you‚Äôre gonna hit a limit obviously. 
[05:50:12] <muaddib[m]> Hoping Patchvonbraun is kind in his assessment of my statement about buffers
[05:51:43] <patchvonbraun[m]> Yeah low latency implies small buffers. Which can mean you start dropping samples.
[06:13:43] *** Joins: pcero (~pcero@187.135.224.43)
[06:26:39] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[06:31:54] *** Quits: tj123__ (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Remote host closed the connection)
[06:32:11] *** Joins: tj123__ (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[06:33:07] <patchvonbraun[m]> But I'll point out (for roughly the 1e7th time since GR was invented) that blowing the buffers up bigly WILL NOT HELP YOU if the long-term average situation is that your flow cannot "keep up".   Buffering is really about "riding out" the short term gaps in ability to cope, which in a non-real-time operating system like Linux is inevitable.  
[06:35:51] <muaddib[m]> Hence my curiosity above
[06:35:53] <patchvonbraun[m]> If your flow is 10e6 SPS, and your flow can actually handle (in the computational and buffer-management sense), 9.999e6 SPS, then you will eventually lose, no matter how big your buffers, unless you aren't running continuously.  
[06:36:08] <muaddib[m]> Right
[06:36:32] <muaddib[m]> Which is why, for example, burst detection in fpga makes sense right?
[06:36:59] <muaddib[m]> FPGA->all the time 
[06:36:59] <muaddib[m]> CPU->some of the time 
[06:37:00] <patchvonbraun[m]> muaddib: Much depends on much...
[06:37:40] <muaddib[m]> This is going in my ‚ÄúBook of Quotes by Patchvonbraun Vol1‚Äù
[06:38:27] <patchvonbraun[m]> If you have flows at eye-watering rates and you need to do stuff with those flows with guaranteed latency and NEVER any over-runs/lost-samples, then you either need a very studly computer, or you need to code it in an FPGA--which can presumably at least handle the sample-rate, but whether it has enough gates to do what you need to do is another matter...
[06:39:06] <muaddib[m]> But of course
[06:39:53] <patchvonbraun[m]> The computer, typically, needs to be considerably studlier than you might guess just from its clock-rate vs incoming sample rate and number of CPUs and memory bandwidth.  The complexity of what happens to samples between the SDR hardware interface and your application is orders of magnitude higher than in an FPGA.
[06:41:59] <patchvonbraun[m]> It's a trade-off, I guess.  CPUs are easier to program, but harder to get screeching-good *real-time* performance out of.  Whereas FPGAs are eye-wateringly hard to program, but once you master that, getting them to chew through samples at crystal-meth-induced rates is "easy"...
[06:43:51] <patchvonbraun[m]> So time for a QUESTION FROM PATCHY.   You pull stream tags off of a stream within an embedded Python block, yes?
[06:45:51] <patchvonbraun[m]> I'm thinking of multi-coupling two different dish feeds into a USRP B210 and switching between them at rates of a few Hz, and having the data-logger see the tags and "do the right thing".  This is for a radiometer type thing on a 14m dish, doing daily observations of the region with two black-holes that is projected to merge in teh next couple of years...
[06:56:55] <muaddib[m]> <patchvonbraun[m]> "So time for a QUESTION FROM..." <- yes. that's the only mechanism i've seen other than a custom block if you want to grab a tag and 'do' something with it
[06:57:05] <muaddib[m]> > <@patchvonbraun:gnuradio.org> So time for a *QUESTION FROM PATCHY*.   You pull stream tags off of a stream within an embedded Python block, yes?
[06:57:05] <muaddib[m]>  * yes. that's the only mechanism i've seen other than a custom block if you want to grab a tag and 'do something' with it
[06:58:26] <patchvonbraun[m]> OK, I'll look into it a bit more.  Ideally, I'd have two B210s (or similar), but I only have one uncommitted for this particular project.
[06:58:31] <muaddib[m]> (omitting the myriad of blocks that do what they are designed to do)
[06:58:38] <muaddib[m]> * that do with tags what they
[06:59:29] <patchvonbraun[m]> Using a frequency-muxed approach here reduces sensitivity by only 40%, but since the dish is so big, and we're looking at both polarizations...
[07:14:50] *** Quits: pretty_d1 (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4.1)
[07:21:17] *** Quits: tj123__ (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Remote host closed the connection)
[07:21:26] *** Joins: tj123__ (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[07:32:20] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[07:33:07] *** Quits: tj123__ (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Ping timeout: 256 seconds)
[08:29:25] *** Quits: ve7it (~LawrenceG@S0106f0f249afdb93.pk.shawcable.net) (Remote host closed the connection)
[08:46:45] *** Joins: tj123_ (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[08:48:05] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[08:51:19] *** Quits: pcero (~pcero@187.135.224.43) (Ping timeout: 256 seconds)
[09:31:24] *** Joins: harish_ (~harish@158.140.144.42)
[09:36:36] *** Quits: harish_ (~harish@158.140.144.42) (Remote host closed the connection)
[10:40:19] * MarcinP[m] uploaded an image: (173KiB) < https://libera.ems.host/_matrix/media/r0/download/gnuradio.org/8febbeaf0da227406a192e9d60097f117dd07529/image.png >
[10:40:20] <MarcinP[m]> Hi, I have an off-topic question: I am writing python code in VS Code for simple flowgraph (simple for now). While typing the code and hitting the code completion key I have no hints e.g vector_sink/vector_source from the digital module. Check my screenshot. Idk if its the VS Code issue or GNU Radio module fault. Now I have to go to IPython and import the interesting modules and run e.g. `dir(blocks)` to check if module is there and what
[10:40:20] <MarcinP[m]> is the class name?  Question is, how do you guys handle the situation when you typing the code for your flowgraph and do not remember in which module the desired block is and what is the class name? 
[11:31:04] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[11:58:07] *** Quits: tj123_ (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[11:58:11] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[12:01:50] *** Joins: jemius (~jemius@2a01:4f8:c0c:8564::1)
[12:27:16] *** Joins: goldrak (~goldrak@bl16-27-108.dsl.telepac.pt)
[12:28:11] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:88c8:64e1:5be6:70c2)
[12:32:41] *** Joins: tj123_ (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[12:32:44] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[12:46:55] <LordKalma> MarcinP[m], did you select the right interpreter?
[12:47:21] <LordKalma> plus, if those modules come from C binding, you have to add some settings to pylint
[12:47:53] <LordKalma> also, the bottom bar on VSCode would be important on  a screenshot
[12:55:57] <MarcinP[m]> <LordKalma> "Marcin Puchlik, did you select..." <- yeah, interpreter is correct because program is running 
[12:56:11] <MarcinP[m]> <LordKalma> "plus, if those modules come from..." <- what settings do you mean?
[12:56:28] <LK-CT7ALW[m]> You might need... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/3a7746b8d9d53da5f75d0042387b433b41948595)
[12:56:42] * MarcinP[m] uploaded an image: (334KiB) < https://libera.ems.host/_matrix/media/r0/download/gnuradio.org/fc9d4bbda1260c9c63c6b137a01ead89bc80935a/image.png >
[12:56:46] <LK-CT7ALW[m]> (I'm LordKalma also, testing a matrix server)
[12:58:02] <LK-CT7ALW[m]> unsafe loading any extension isn't "secure", and there is some argument to just load specific modules, but I forget which one is it
[12:58:18] <LK-CT7ALW[m]> assuming you trust your python environment, it's fine
[12:58:58] <LK-CT7ALW[m]> (reload the window after changing those settings: ctrl+shift+p and then Developer: Reload Window)
[12:59:39] *** Joins: Major_Biscuit (~MajorBisc@c-001-021-050.client.tudelft.eduvpn.nl)
[13:01:00] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 240 seconds)
[13:01:46] <MarcinP[m]> > <@ruilvo:matrix.portaldoradioamador.pt> You might need... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/562a78e31275d0c6cd58ea676fa1227b86ed00f3)
[13:02:19] * LK-CT7ALW[m] uploaded an image: (10KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.portaldoradioamador.pt/lMNcnXqPRHkItEIbWRBEpOsz/imagem.png >
[13:02:19] <LK-CT7ALW[m]> ctrl+shift+p and:
[13:02:28] <LK-CT7ALW[m]> (write that and it'll show up)
[13:02:45] <LK-CT7ALW[m]> you'll get used to edit the settings.json directly if you use vscode hahah
[13:04:08] <LK-CT7ALW[m]> https://i.gyazo.com/8c0d9264e9c404d7b2972699aab28ba6.mp4
[13:07:20] <MarcinP[m]> hah look like yes :D I used it a few times so I am not fluent with this tool 
[13:07:32] <jogn_1[m]> pycharm <3
[13:07:38] * MarcinP[m] uploaded an image: (155KiB) < https://libera.ems.host/_matrix/media/r0/download/gnuradio.org/5a70af8bb93b6aad879e30579a1cf83feb2a215e/image.png >
[13:07:59] <LK-CT7ALW[m]> remove the trailing comma, as that's not standard json
[13:08:11] <LK-CT7ALW[m]> but yeah, that's it
[13:08:20] <LK-CT7ALW[m]> reload the window or close/reopen vscode (just in code)
[13:08:38] <LK-CT7ALW[m]> s/code/case/
[13:09:05] <LK-CT7ALW[m]> jogn_1[m]: def vscode :D
[13:09:09] <jogn_1[m]> hehe
[13:09:43] <LK-CT7ALW[m]> I like vscode for a simple fact: it supports all my workflows.
[13:09:49] <MarcinP[m]> LK-CT7ALW[m]: Ok I've done exactly what you said but code completion still doesnt work :(
[13:10:16] * MarcinP[m] uploaded an image: (47KiB) < https://libera.ems.host/_matrix/media/r0/download/gnuradio.org/611d27a5adcff600d596d3d8dc630997d812f6e1/image.png >
[13:10:22] <MarcinP[m]> no suggestions
[13:10:38] <LK-CT7ALW[m]> shame :( I could bet it was a matter of loading C binding-type extensions. that probably means the gnuradio modules are pretty opaque
[13:11:27] <LK-CT7ALW[m]> ah, you do have pylint installed in your python environment, right?
[13:11:43] <MarcinP[m]> Yes, I have installed it just few minutes ago
[13:11:51] <MarcinP[m]> through VS code
[13:12:10] <LK-CT7ALW[m]> yeah, vscode will prompt you to do it if you don't have it
[13:12:31] <MarcinP[m]> yes, exactly
[13:12:53] <MarcinP[m]> ok, shame :(
[13:13:19] <MarcinP[m]> I'll try pycharm then ;) but very thank you for help, appreciate that :)
[13:13:33] <LK-CT7ALW[m]> I've done some FFI bindings and pylint usually picks up on them
[13:13:43] <LK-CT7ALW[m]> dunno what the gnuradio module does exactly
[13:14:41] * LK-CT7ALW[m] uploaded an image: (57KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.portaldoradioamador.pt/mZgIuzOCdczTaoavcNqWErbN/imagem.png >
[13:14:54] <LK-CT7ALW[m]> ^like this, a python binding of liquid-dsp
[13:15:09] <MarcinP[m]> wow, thats cool
[13:15:21] <MarcinP[m]> now this library is called liquid sdr I believe
[13:15:33] <LK-CT7ALW[m]> no, liquid-dsp :=
[13:15:41] <LK-CT7ALW[m]>  * no, liquid-dsp :)
[13:16:10] <MarcinP[m]> https://liquidsdr.org/ - are you using this one?
[13:16:28] <jogn_1[m]> <LK-CT7ALW[m]> "I like vscode for a simple fact:..." <- Fair point. I can't argure with that :P
[13:16:38] <LK-CT7ALW[m]> haha yes, but it seems to use liiquid-dsp on github: https://github.com/jgaeddert/liquid-dsp
[13:17:19] <LK-CT7ALW[m]> jogn_1[m]: and I really mean it. I use it for Python, LaTeX, even c++ sometimes. And what I love it that it has a lot of extensions, including for auto-formatters. I looove auto-formatters. 
[13:18:11] <MarcinP[m]> LK-CT7ALW[m]: So now you have python bindings to liquid-dsp?
[13:18:16] <LK-CT7ALW[m]> yes
[13:18:40] <MarcinP[m]> did you use pybind11?
[13:18:43] <LK-CT7ALW[m]> it's "dirty" bindings, using cffi, so, like, it even requires using "pointers" and stuff like that
[13:19:10] <LK-CT7ALW[m]> no, cffi did it all automatically. I didn't want to waste time wrapping all of it, I just needed something fast
[13:19:53] <LK-CT7ALW[m]> I needed a QPSK modem, an fir-interp filter, and a DD-LMS equalizer, and I didn't want to waste a lot of time
[13:20:19] <MarcinP[m]> ah ok I get it, but the syntax need to be C-like?
[13:21:19] <LK-CT7ALW[m]> yes,... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/eaf67a9fffb46b1d615bc1a58917d0e1a078b97b)
[13:22:24] <MarcinP[m]> oh yeah, looks strange but it works
[13:23:14] <LK-CT7ALW[m]> but yeah, maybe someone can provide insighs on how the gnuradio python module is generated, but I'm surprised pylint doesn't pick it up 
[13:23:31] <LK-CT7ALW[m]> did you restart vscode? just to check
[13:40:53] *** Quits: barjac (~quassel@92.40.0.136.threembb.co.uk) (Ping timeout: 256 seconds)
[13:41:10] *** Joins: barjac (~quassel@92.41.98.212.threembb.co.uk)
[13:53:45] <MarcinP[m]> Yes, I did 
[13:54:13] <LK-CT7ALW[m]> really weird then
[13:54:41] <schneider> patchvonbraun[m]: all i can say is that after running for 2 hours there still was not a single (usb) packet dropped
[13:56:24] *** Joins: locutox (~locu512@14-200-133-66.tpgi.com.au)
[14:12:21] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[14:12:37] *** Quits: tj123_ (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[14:27:23] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[14:35:02] <schneider> 15 min load average also decreased from ~4 to ~3
[14:35:32] *** Parts: LordKalma (~LordKalma@server.portaldoradioamador.pt) (The Lounge - https://thelounge.chat)
[14:50:04] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[15:03:11] *** Joins: LordKalma (~LordKalma@server.portaldoradioamador.pt)
[15:19:39] *** Quits: jemius (~jemius@2a01:4f8:c0c:8564::1) (Quit: Leaving)
[15:32:01] *** Joins: pcero (~pcero@187.135.224.43)
[15:37:27] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[15:47:04] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[16:09:37] *** Quits: Hoernchen_ (~hornulus@osmocom/hoernchen) (Remote host closed the connection)
[16:13:29] *** Joins: Hoernchen (~hornulus@osmocom/hoernchen)
[16:38:21] *** Joins: worms_91 (~33@2a01:e0a:44a:5e60:b0f6:5e81:dad9:b1eb)
[16:43:40] <muaddib[m]> schneider: sounds like good news
[17:01:05] *** Quits: worms_91 (~33@2a01:e0a:44a:5e60:b0f6:5e81:dad9:b1eb) (Remote host closed the connection)
[17:27:43] <DaveCherkusN1AI[> Question on the constellation sink: it seems to draw a dot at the origin (0+0j) even when it never gets the input (0+0j)?
[17:27:46] <DaveCherkusN1AI[> My flowgraph: https://pastebin.com/BTqj4c1R
[17:28:38] <DaveCherkusN1AI[> The throttle at 4800/second makes it run slow.  You see the dot at the origin right away, long before my python block generates any output.  Is this itentional?
[17:29:46] * DaveCherkusN1AI[ uploaded an image: (58KiB) < https://libera.ems.host/_matrix/media/r0/download/gnuradio.org/56eee87f026ac24ff7ef128d664ee9de6c2af8bb/image.png >
[17:30:15] <DaveCherkusN1AI[> Prints in the python block also confirm I never generated the (0+0j) point...
[17:32:20] <DaveCherkusN1AI[> I'm now noticing the example https://wiki.gnuradio.org/index.php/QT_GUI_Constellation_Sink has no point at the origin....
[17:35:52] <LordKalma> could you plot re and im vs time insted of amplitude?
[17:35:59] <LordKalma> the fact your amplitude goes to 0 seems sus
[17:45:25] <miek> i think the loop in the embedded python block should be up to `len(input_items[0])`, not `len(input_items)`
[17:46:49] <DaveCherkusN1AI[> <LordKalma> "the fact your amplitude goes to..." <- I will try that, but my Python block 'differential encoder' has a print statement that would appear if it ever generates 0+0j, and that print never occurs.  Of course I could have a bug in my code too.  Yet, I see the dot at the origin long before any of the prints in my Python block appear.  Keep in mind I'm a GR newbie so pretty much any mistake is possible! 
[17:47:30] *** Quits: kusanagi (~kusanagi@user/kusanagi) (Read error: Connection reset by peer)
[17:48:57] *** Joins: kusanagi (~kusanagi@user/kusanagi)
[17:53:06] <willcode4[m]> It could also be something very near 0.
[17:56:24] <miek> i suspect that the loop only runs once (since len(input_items) == 1), so it's not filling the whole output array which is (probably?) initialised to 0
[18:16:14] *** Quits: locutox (~locu512@14-200-133-66.tpgi.com.au) (Read error: Connection reset by peer)
[18:18:05] *** Joins: vekay (~vekay@user/vekay)
[19:00:51] *** Joins: filename (~kilitary@188.242.105.134)
[19:05:47] *** Joins: xfol[m] (~xfolgnura@2001:470:69fc:105::ec9a)
[19:05:47] <xfol[m]> Is there any way to get a faster UI update rate for QT GUI sinks such as Time / Frequency Sink than 10Hz (the default)? My signal is sampled at a high rate (32kHz) and the Number of Points is set to a small fraction of that (128), so the sink shouldn't be starved for data. I tried setting Update Period to a lower value (e.g. 0.03) or to 0, tried setting trigger to Free / Auto / Normal / Tag (with Tagged Stream packet length =  Number of
[19:05:47] <xfol[m]> Points) but nothing can get me faster than 10Hz. I'm running GRC on a high-end computer with lots of cores and a big GPU both of which show load is almost nil. I also tried setting [qtgui] style = opengl / raster / native in /etc/gnuradio/conf.d/gr-qtgui.conf.
[19:14:33] *** Joins: kusanagi_ (~kusanagi@user/kusanagi)
[19:17:45] *** Quits: kusanagi (~kusanagi@user/kusanagi) (Ping timeout: 250 seconds)
[19:22:41] <warnes[m]> Is there a simple way to tell a flowgraph to flush its buffers and exit?
[19:23:41] <DerekKozel[m]> A block can say that it is done processing and that signals all blocks downstream to try to finish working and stop.
[19:24:09] <DerekKozel[m]> Some (enough to be noticable) blocks are unable to entirely flush their buffers so may end sooner than you expect
[19:24:46] <DerekKozel[m]> such as an FFT cannot flush the remainder if it only has fewer than FFT Size samples left at the input
[19:25:58] <DerekKozel[m]> xfol: I think that update rate is the main control. There are other time and frequency sinks in out of tree modules that do nice Open GL displays
[19:27:05] <warnes[m]> I do recognize that I need to add some zeros to (for example) fill the last packet and FFT buffer.  
[19:27:51] <DerekKozel[m]> return -1 from the last call to work in your block
[19:28:11] <DerekKozel[m]> if you're using a custom block as the source block in the flowgraph
[19:28:26] <DerekKozel[m]> otherwise I think it's just calling stop on the top level flowgraph object and waiting
[19:28:35] <DerekKozel[m]> the default grc flowgraph code does this
[19:40:38] <DaveCherkusN1AI[> <miek> "i think the loop in the embedded..." <- Oops, that was an editing mistake by me.  I fixed it, and unfortunately the symptom is still there.  
[19:45:51] <Jacob[m]12> <DerekKozel[m]> "return -1 from the last call..." <- should probably use `WORK_DONE` for this ([fwiw this is -1 now](https://github.com/gnuradio/gnuradio/blob/master/gnuradio-runtime/include/gnuradio/block.h#L66))
[19:47:47] *** Joins: jemius (~jemius@2a01:4f8:c0c:8564::1)
[19:48:21] <DerekKozel[m]> Yep! much better. I couldn't remember the definition in the moment.
[20:06:32] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:88c8:64e1:5be6:70c2) (Ping timeout: 250 seconds)
[20:21:47] *** Quits: filename (~kilitary@188.242.105.134) (Read error: Connection reset by peer)
[20:24:03] *** Joins: filename (~kilitary@static.246.201.46.78.clients.your-server.de)
[20:25:08] *** Quits: jemius (~jemius@2a01:4f8:c0c:8564::1) (Quit: Leaving)
[20:30:15] *** Quits: filename (~kilitary@static.246.201.46.78.clients.your-server.de) (Ping timeout: 252 seconds)
[20:55:15] *** Joins: filename (~kilitary@static.246.201.46.78.clients.your-server.de)
[20:56:35] *** Quits: Major_Biscuit (~MajorBisc@c-001-021-050.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[21:06:13] *** Quits: filename (~kilitary@static.246.201.46.78.clients.your-server.de) (Ping timeout: 240 seconds)
[21:07:05] *** Quits: cyrozap (~cyrozap@168.235.71.249) (Ping timeout: 252 seconds)
[21:07:16] *** Joins: cyrozap-ZNC (~cyrozap@2604:180:2:69f::45de)
[21:08:17] *** Quits: gry (~gry@botters/gry) (Ping timeout: 240 seconds)
[21:23:10] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[21:24:05] <DaveCherkusN1AI[> <miek> "i suspect that the loop only..." <- Totally correct!  I confirmed both the things you said, we were getting N input items and outputting N-1 zeros.  TYVM!
[21:26:14] <Dustin[m]> I've looked, but have been unsuccessful. Are there any guides on how to demodulate PPM signal? I have an audio file with I assume PPM data.
[21:26:40] <Dustin[m]> I did see two ppm modules but they are for 3.7 and not 3.8 or better.
[21:28:41] *** Quits: Elzington_ (~Elzington@static-68-235-44-46.cust.tzulo.com) (Quit: Leaving)
[21:30:36] *** Joins: ve7it (~LawrenceG@S0106f0f249afdb93.pk.shawcable.net)
[21:35:32] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[22:17:22] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:28:59] *** Quits: beenao (~beenao@user/beenao) (Quit: quit)
[22:29:58] *** Joins: beenao (~beenao@user/beenao)
[22:33:00] *** Joins: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de)
[22:43:56] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:3963:e255:f830:cdae)
[22:45:31] *** Joins: Elzington (~Elzington@static-68-235-44-46.cust.tzulo.com)
[23:49:28] *** Joins: jemius (~imperator@200116b82d784b0094b455ea259c6385.dip.versatel-1u1.de)
[23:58:28] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:3963:e255:f830:cdae) (Quit: uros)
