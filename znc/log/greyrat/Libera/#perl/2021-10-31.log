[00:06:42] *** Quits: tobybl (~tobybl@213.31.135.91) (Remote host closed the connection)
[00:15:08] <mst> Kobaz: CPAN.pm distroprefs work for that, or you can use my App::opan and just inject patched tarballs into there
[00:17:39] <Kobaz> hah nice, of course there's a module for that
[00:20:20] <mst> Kobaz: and note opan functions as an overlay, it proxies upstream for anything you don't have an explicitly pinned version of, so it works perfectly with cpanm and carton without eating half your disk - I thought this one through :)
[00:24:02] *** Joins: ss4 (~wootehfoo@user/wootehfoot)
[00:25:49] *** Quits: rypervenche (~rypervenc@user/rypervenche) (Quit: brb)
[00:26:58] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 260 seconds)
[00:26:59] *** Quits: ss4 (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[00:28:29] *** Joins: ss4 (~wootehfoo@user/wootehfoot)
[00:32:30] *** Joins: metabulation (~wootehfoo@user/wootehfoot)
[00:34:01] *** Quits: metabulation (~wootehfoo@user/wootehfoot) (Remote host closed the connection)
[00:36:27] *** Quits: ss4 (~wootehfoo@user/wootehfoot) (Ping timeout: 260 seconds)
[00:46:35] *** Quits: eblip (~eb0t@90.211.41.180) (Ping timeout: 264 seconds)
[00:48:27] *** Joins: eblip (~eb0t@90.196.142.2)
[00:57:23] *** Quits: proller (~p@2a02:6b8:b081:1205::1:17) (Ping timeout: 264 seconds)
[01:00:25] *** Joins: whynot (~whynot@37.73.33.113)
[01:06:26] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Ping timeout: 246 seconds)
[01:10:00] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[01:18:26] *** Quits: Su-Shee (~Susanne@p4ff4911d.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[01:20:06] *** Joins: Su-Shee (~Susanne@p50894764.dip0.t-ipconnect.de)
[01:23:36] *** Quits: haj1 (~haj@ip5f5beb42.dynamic.kabel-deutschland.de) (Quit: Leaving.)
[01:27:42] *** Joins: proller (~p@2a02:6b8:b081:8805::1:11)
[01:35:38] *** Joins: rypervenche (~rypervenc@user/rypervenche)
[01:46:14] *** Quits: proller (~p@2a02:6b8:b081:8805::1:11) (Ping timeout: 260 seconds)
[01:59:31] *** Joins: proller (~p@80.240.216.69)
[02:09:16] *** Quits: jess (~jess@libera/staff/jess) ()
[02:23:29] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Ping timeout: 264 seconds)
[02:37:28] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[02:39:51] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Ping timeout: 276 seconds)
[02:41:19] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[02:46:26] *** Quits: rozie (~rozie@2001:15e8:110:2913:1:1:1:2) (Ping timeout: 260 seconds)
[02:47:29] *** Joins: pizdets (~pizdets@183.182.115.247)
[02:52:12] *** Joins: rozie (~rozie@2001:15e8:110:2913:1:1:1:2)
[02:57:23] *** Quits: X-Scale (~ARM@83.223.251.139) (Ping timeout: 264 seconds)
[02:58:06] *** Joins: X-Scale` (~ARM@50.77.166.178.rev.vodafone.pt)
[02:58:55] *** X-Scale` is now known as X-Scale
[03:04:51] *** Quits: holyghost (~shameen@2a02:a03f:64c8:9200:a167:60a8:acf1:bfa7) (Ping timeout: 260 seconds)
[03:13:02] *** Quits: whynot (~whynot@37.73.33.113) (Quit: leaving)
[03:19:14] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[03:22:14] *** Quits: Pali (~pali@user/pali) (Ping timeout: 246 seconds)
[03:29:07] *** Quits: sivoais (~zaki@199.19.225.239) (Ping timeout: 240 seconds)
[03:29:20] *** Joins: sivoais (~zaki@199.19.225.239)
[03:30:11] *** Quits: mingdao (~mingdao@wireguard/tunneler/mingdao) (Remote host closed the connection)
[03:43:28] <genio> mst: emailed kmx just a bit ago asking if he had any advice/documentation or if he could see anything blatantly stupid in my attempt lined out here: https://gist.github.com/genio/517e2790593d7193b69e68060e2260fb   we'll see if he's got the time to respond anytime soon.
[03:43:29] <Paperbot> Link title(s): [ MSYS2 Setup Â· GitHub ]
[03:52:46] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 260 seconds)
[04:17:21] <gordonfish> genio: Nothing jumps out at me in the 'readme.md' part, still looking through the 'the_build.log' part
[04:17:39] *** Quits: arthurpbs (~arthurpbs@168.121.99.239) (Ping timeout: 260 seconds)
[04:20:22] <gordonfish> If I may make a suggestion, maybe a variation of readme.md that doesn't rely on powershell, as some people don't use that, but that's probably something for later (and maybe something I could contribute when this readme.md is finalized.)
[04:21:24] <gordonfish> And while I don't full on hate powershell, I'm really not a fan of verbose constructs like Copy-Item "..." -Destination "..."
[04:24:47] <gordonfish> (It'd really be nice if there was a way in PS to do something akin to cp C:\mingw64\bin\{mingw32-,g}make.exe, instead of Copy-Item "C:\mingw64\bin\mingw32-make.exe" -Destination "C:\mingw64\bin\gmake.exe")
[04:25:09] <mst> genio: excellent, let's see what we get
[04:27:26] <Kobaz> powershell is the king of verbosity
[04:31:15] <gordonfish> Kobaz: Right. It's much nicer to copy paste into than to type in
[04:44:08] <gamo> Hi. I have a question.
[04:44:46] <simcop2387> gamo: sure
[04:44:59] <gamo> can I...?
[04:45:12] <simcop2387> perlbot: ask
[04:45:12] <perlbot> simcop2387: Questions in the channel should be specific, informative, complete, concise, and on-topic.  Don't ask if you can ask a question first.  Don't ask if a person is there; just ask what you intended to ask them.  Better questions more frequently yield better answers. | and see perfect question
[04:45:25] <gamo>             if ( $tempus =~ /^(.+)(\<td\>\d+\.\d+\,\d+\<\/td\>)\<td\>(\d+\.\d+\,\d+)/<\/td\>/ ){                 # Anterior 
[04:45:38] <gamo> and the error is
[04:45:58] <gamo> Use of uninitialized value $_ in pattern match (m//) at ./run6.pl line 74.
[04:46:22] <gamo> that line
[04:46:31] <simcop2387> and that's line 74?
[04:46:36] <gamo> yes
[04:46:38] * GumbyPAN CPAN Upload: Text-Xslate-v3.5.9 by SKAJI https://metacpan.org/release/SKAJI/Text-Xslate-v3.5.9
[04:47:03] <mst> gamo: so where's the rest of the code?
[04:47:14] <gamo> it's long
[04:47:23] <simcop2387> perlbot: paste
[04:47:25] <perlbot> simcop2387: Paste your code to the new https://l.perl.bot/#perl or http://paste.scsys.co.uk/ or https://gist.github.com/ | see allowpaste plugin as an op to control the pastebin in your channel
[04:47:28] <mst> gamo: I don't care, you've just shown us a line of code that can't produce that error
[04:47:41] <mst> gamo: so now I need to help you find which line of code *did*
[04:47:44] <gamo> can't ???
[04:48:13] <mst> gamo: can't. $_ isn't even involved there
[04:48:39] <gamo> so there is an error in the line number
[04:48:42] <mst> no
[04:48:53] <mst> you're just hiding the information we need to help
[04:49:11] <gamo> which one do you prefer?
[04:49:39] <gamo> previous code?
[04:49:41] <mst> the line number given is the line number of the -statement-, you've not given us the actual statement, so we can't help until you stop arguing and use a paste site like we've asked
[04:50:32] <gamo> if it's short I'll put it here
[04:50:47] <Grinnz> put the whole thing in the paste, please, we can find the problem better than you can
[04:50:51] <Grinnz> that's why you're asking us
[04:50:57] <mst> showing us the entire script and saying which line numbers you think are the problem is what you -should- do
[04:51:24] <mst> refusing to do that is actively fucking with the people trying to help you, which is rude, and I'd ask you to stop doing that, because I've explained this to you more than once before
[04:52:02] <mst> now please paste the whole thing like we asked, because I really don't want to have to repeat this request politely *again*
[04:52:15] *** Quits: finstern1s (~X@23.226.237.192) (Quit: leaving)
[04:52:32] <gamo> I'll paste a short part for confidentiality
[04:52:47] <mst> you will show the entire code.
[04:53:04] <mst> you fought against polite requests for more code already
[04:53:11] *** Quits: Su-Shee (~Susanne@p50894764.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[04:53:36] <mst> your choice of which part to paste can no longer be trusted, because you've refused requests already/
[04:54:23] *** Joins: finsternis (~X@23.226.237.192)
[04:54:36] *** Joins: Su-Shee (~Susanne@p4ffc74c8.dip0.t-ipconnect.de)
[04:54:38] <mst> if you want to be trusted to select a short part in future, after your current behaviour you're going to have to earn that right, I'm afraid.
[04:54:44] <Grinnz> feel free to censor specific strings as needed, like normal when sharing code
[04:54:50] <mst> 100%
[04:55:01] <mst> but we still need to see the whole logic
[04:55:22] <mst> if you want to create a small script that we can -run- that demonstrates the problem, that would also be fine
[04:56:30] <gamo> ok. How can I show you what I pasted?
[04:56:54] <simcop2387> and if you use perl.bot i can directly remove it from the database along with it's exiration time
[04:56:55] <mst> https://l.perl.bot/#perl will give you a URL
[04:56:55] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[04:57:56] <gamo> https://l.perl.bot/p/n3dfy5
[04:57:57] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[04:58:15] <Grinnz> that doesn't contain the warning. try again
[04:58:32] <Grinnz> this time with the whole code
[04:59:16] <mst> gamo: are you actually trying to get banned for deliberately wasting the time of the people who want to help you?
[05:00:02] <mst> you deleted the body of the if block
[05:00:08] <mst> we asked for the whole thing
[05:00:10] <mst> try again
[05:00:11] <mst> do better
[05:01:31] <gamo> https://l.perl.bot/p/nobe1g
[05:01:32] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[05:02:07] <gamo> mst: no
[05:02:30] <Grinnz> thank you
[05:02:40] <gamo> mst : i did my best uncensored post
[05:03:16] <mst> gamo: much better, thank you.
[05:03:47] <Grinnz> gamo: are you sure that's the whole error output? because that's just a warning, is there an error also?
[05:04:06] <mst> but I still don't see a use of $_ in that entire block
[05:04:21] <mst> SHIT
[05:04:24] <mst> I SEE THE PROBLEM
[05:04:39] <mst> $tempus =~ /^(.+)(\<td\>\d+\.\d+\,\d+\<\/td\>)\<td\>(\d+\.\d+\,\d+)/<\/td\>/ is actually it for once
[05:04:44] <mst> notice the unescaped /
[05:04:47] <Grinnz> aha
[05:04:54] <mst> that's an =~ i.e. an m//
[05:05:15] <mst> so that raw / without backslashing is putting the parser off entirely I bet
[05:05:33] <Grinnz> right, thats why i was guessing there was a syntax error eventually too
[05:05:42] <mst> yeah
[05:06:02] <mst> gamo: (\d+\.\d+\,\d+)/
[05:06:10] <mst> gamo: ^^ I don't think that / is meant to be there.
[05:06:37] <gamo> oooooooooh
[05:06:49] <mst> I think somebody added the <\/td\>/ bit
[05:06:56] <mst> and accidentally left that / behind
[05:07:08] <mst> and that completely trashed the compiler's ability to figure out the rest of the code
[05:07:43] <gamo> but it's workin well now
[05:08:00] <mst> eh?
[05:08:22] <gamo> yes, the error does not affect the capture
[05:08:32] <mst> with that / in there whatever your code is doing, it's nothing to do with what it's supposed to do
[05:08:42] <mst> you may be accidentally getting the right result, but it's broken
[05:08:58] <gamo> yes, yes, I got it
[05:09:39] <gamo> :-)
[05:10:27] *** Joins: holyghost (~shameen@2a02:a03f:64c8:9200:b12a:344d:ddeb:5543)
[05:10:45] <gamo> thank you a lot
[05:11:21] <gamo> applause
[05:11:51] <mst> \o/
[05:12:34] <ether> now that you're here, let me tell you about our Lord and Saviour Jesus Christ
[05:12:36] <ether> er, I mean how not to parse html with regexes
[05:12:47] <mst> *roflol*
[05:16:53] <mst> gamo: btw, if this data is important you wanted to use Mojo::DOM instead of those regexps but I figure fix one problem at once :)
[05:17:39] <mst> gamo: and please remember to show us the complete code next time - you may have noticed we are faster when we get that :D
[05:18:01] <gamo> I should not to care about religion
[05:18:25] <mst> there is no religion here
[05:18:40] <mst> only wanting to write more reliable code
[05:19:08] *** Quits: gast0n (~g4570n@user/gast0n) (Ping timeout: 246 seconds)
[05:19:40] <gamo> yes, I'm concius about the amteurish of that script
[05:20:08] <mst> working amateur code is 100% better than 'no code that works at all' :)
[05:20:26] <mst> that's why we helped first, and then suggested improvements second
[05:21:13] <gamo> the case is that with a half a dozen scripts I can figure it out how to invest rationally
[05:21:57] <gamo> ether: I could talk with you 
[05:22:12] <ether> I was joking
[05:22:35] <huf> eh i dunno, is not parsing html with regexes a religion or an ethnicity?
[05:22:35] <gamo> hehe
[05:22:37] <huf> never been clear on that
[05:23:54] <gamo> I read the humorous advert on not doing that
[05:24:30] <gamo> but in my defense, I get html good formatted 
[05:24:52] <gamo> so a line is a line
[05:25:25] <mst> parsing html with regexps is a perversion
[05:26:02] <gamo> using index() is a torture  
[05:26:22] <mst> that would be even worse yes
[05:26:36] <mst> we mean using code that is designed for it
[05:26:45] <mst> for example p3rl.org/HTML::TableExtract
[05:26:48] <mst> might help you here
[05:26:48] <gamo> so the alternative is to use a module?
[05:27:02] <mst> perl is just a virtual machine. CPAN is the language.
[05:27:18] <gamo> a perfect phrase
[05:27:50] <gordonfish> { Re: <mst> parsing html with regexps is a perversion } Didn't they used to flog people for that?
[05:28:02] <mst> credit for the phrase belongs to Audrey Tang
[05:28:16] <mst> who's now busy being the technology minister for Taiwan ;)
[05:28:27] <gamo> great
[05:28:51] <mst> if you wonder why Taiwan did so well with the current virus stupidity
[05:29:02] <mst> it's because their government had already hired a perl programmer :)
[05:29:12] <gamo> hehehe
[05:29:43] <gamo> my goverment use COBOL
[05:29:57] *** Quits: EvanCarroll (~ecarroll@198-0-91-126-static.hfc.comcastbusiness.net) (Ping timeout: 265 seconds)
[05:30:09] <mst> I'm sure mine does as well
[05:31:47] <mst> gamo: I do not know much about your country but I enjoyed going to barcelona to talk about perl at an event there :)
[05:32:22] <mst> good food, good drinks, good people.
[05:32:27] <gamo> well it's not a ugly city
[05:33:02] <gamo> but it's far bigger than which I like
[05:33:17] <mst> I live in a town of 50,00 people
[05:33:24] <mst> I do not like big cities normally
[05:33:25] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[05:33:35] <mst> but I understand why big cities are where the conferences happen
[05:33:42] <mst> and I make the most fun out of it I can :)
[05:33:58] <mst> bah 50,000 sorry
[05:34:08] *** Joins: tejr (~tejr@user/tejr)
[05:34:12] <gamo> yes, I suppose you have companion 
[05:34:29] <mst> also transport so people can get there
[05:34:38] <mst> trains and planes
[05:36:11] <gamo> do you know more of Spain?
[05:37:35] <mst> as I said, "I do not know much about your country but"
[05:38:03] <gamo> ok. fine. I have to part to eat
[05:38:04] <mst> sorry
[05:38:11] *** Quits: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi) (Ping timeout: 264 seconds)
[05:38:45] <gamo> bye mst |o/
[05:39:01] <mst> bye :D
[05:40:47] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[05:41:44] * GumbyPAN CPAN Upload: Net-Saml2-0.43 by TIMLEGGE https://metacpan.org/release/TIMLEGGE/Net-Saml2-0.43
[05:46:06] *** Quits: Su-Shee (~Susanne@p4ffc74c8.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[05:46:22] *** Joins: EvanCarroll (~ecarroll@c-73-32-86-244.hsd1.tx.comcast.net)
[05:47:28] *** Joins: Su-Shee (~Susanne@p4ffc72ca.dip0.t-ipconnect.de)
[05:51:14] *** Joins: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi)
[05:52:48] <gordonfish> I was about to ask if that comma was in the right place
[05:53:07] <gordonfish> ug, wasn't fully scrolled to the end
[05:53:20] <gordonfish> Re: <mst> bah 50,000 sorry
[05:54:13] <mst> ayup
[05:54:32] <mst> the comma was in the right place but I'd missed my zeroes quota apparently
[05:55:07] <gordonfish> Had to zero in on that one
[05:55:20] <mst> http://trout.me.uk/facepaw.jpg
[05:58:28] <gordonfish> Aww
[06:07:06] *** Quits: rozie (~rozie@2001:15e8:110:2913:1:1:1:2) (Ping timeout: 260 seconds)
[06:08:45] <simcop2387> gordonfish: have a new cat subreddit, https://www.reddit.com/r/standardissuecat/
[06:08:47] <Paperbot> Link title(s): [ StandardIssueCat ]
[06:13:16] *** Joins: rozie (~rozie@2001:15e8:110:2913:1:1:1:2)
[06:21:48] * GumbyPAN CPAN Upload: CPAN-Uploader-0.103016 by RJBS https://metacpan.org/release/RJBS/CPAN-Uploader-0.103016
[06:22:02] *** Joins: gast0n (~g4570n@user/gast0n)
[06:28:29] <genio> gordonfish: no argument whatsoever on the hatred of the verbosity of PS. but, it's at least useful (as opposed to batch files)
[06:45:27] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[06:46:50] * GumbyPAN CPAN Upload: Getopt-Long-Descriptive-0.110 by RJBS https://metacpan.org/release/RJBS/Getopt-Long-Descriptive-0.110
[06:51:51] * GumbyPAN CPAN Upload: App-Cronjob-1.200012 by RJBS https://metacpan.org/release/RJBS/App-Cronjob-1.200012
[06:55:29] *** Quits: b0nn (~shane@user/b0nn) (Remote host closed the connection)
[06:58:53] *** Quits: rozie (~rozie@2001:15e8:110:2913:1:1:1:2) (Ping timeout: 246 seconds)
[06:59:42] *** Joins: rozie (~rozie@2001:15e8:110:2913:1:1:1:2)
[07:13:26] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 260 seconds)
[07:15:17] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[07:17:11] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 264 seconds)
[07:18:59] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[07:20:32] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! ð)
[07:34:28] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 268 seconds)
[07:36:34] <gordonfish> simcop2387: Thanks
[07:40:56] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[07:45:42] *** Joins: jetchisel (jetchisel@user/jetchisel)
[07:46:57] * GumbyPAN CPAN Upload: Test-ConsistentVersion-v0.3.1 by CEBJYRE https://metacpan.org/release/CEBJYRE/Test-ConsistentVersion-v0.3.1
[07:55:55] *** Joins: pucara (~i@181.92.84.206)
[07:58:48] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[08:07:41] *** Joins: deadmarshal (~deadmarsh@95.38.116.136)
[08:10:57] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Remote host closed the connection)
[08:12:31] *** Joins: Martchus_ (~martchus@2a01:c23:c134:1000:d250:99ff:fe49:3cce)
[08:13:19] *** Quits: Martchus (~martchus@dynamic-095-117-032-233.95.117.pool.telefonica.de) (Ping timeout: 265 seconds)
[08:17:00] * GumbyPAN CPAN Upload: urpmi-v8.126.2 by TVIGNAUD https://metacpan.org/release/TVIGNAUD/urpmi-v8.126.2
[08:17:59] *** Joins: monkey_ (~user@2803:d100:e440:314:23b8:c8fe:9b54:935a)
[08:25:18] *** Quits: deadmarshal (~deadmarsh@95.38.116.136) (Ping timeout: 260 seconds)
[08:40:10] *** Quits: monkey_ (~user@2803:d100:e440:314:23b8:c8fe:9b54:935a) (Remote host closed the connection)
[08:41:47] *** Quits: willthechill (~willthech@2600:1700:8c61:3ed0:e1:1d67:cbf5:67e) (Ping timeout: 264 seconds)
[08:50:38] *** Joins: deadmarshal (~deadmarsh@95.38.116.136)
[08:52:46] *** Quits: Linux77 (~Linux7_7@186.233.178.42) (Read error: Connection reset by peer)
[08:53:17] *** Joins: Linux77 (~Linux7_7@186.233.178.42)
[08:57:16] *** Joins: mingdao (~mingdao@wireguard/tunneler/mingdao)
[08:59:38] *** Quits: R2robot (~R2robot@user/r2robot) (Quit: Pull the lever, Kronk.  Wrong leverrrrrrr!)
[09:03:02] *** Joins: R2robot (~R2robot@user/r2robot)
[09:23:47] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[09:35:00] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[09:54:37] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[10:00:54] *** Quits: deadmarshal (~deadmarsh@95.38.116.136) (Ping timeout: 260 seconds)
[10:20:02] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 260 seconds)
[10:22:34] *** Joins: jetchisel (jetchisel@user/jetchisel)
[10:30:08] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[10:30:39] *** Joins: deadmarshal (~deadmarsh@95.38.116.136)
[10:32:47] *** Quits: Linux77 (~Linux7_7@186.233.178.42) (Remote host closed the connection)
[10:34:28] *** Joins: Linux77 (~Linux7_7@186.233.178.42)
[10:35:20] *** Quits: Linux77 (~Linux7_7@186.233.178.42) (Read error: Connection reset by peer)
[10:35:35] *** Joins: Linux77 (~Linux7_7@186.233.178.42)
[10:39:42] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 260 seconds)
[10:41:55] *** Joins: jetchisel (jetchisel@user/jetchisel)
[10:42:05] *** Joins: Adura (~Adura@user/adura)
[11:01:35] *** Quits: D-ion (~D-ion___@0850724116.static.corbina.ru) (Ping timeout: 264 seconds)
[11:07:15] *** Joins: tobybl (~tobybl@213.31.135.91)
[11:08:11] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 264 seconds)
[11:11:50] *** Quits: tobybl (~tobybl@213.31.135.91) (Ping timeout: 260 seconds)
[11:14:38] *** Joins: furrymcgee (~devuan@cgn-213-196-210-222.nc.de)
[11:23:38] *** Joins: tobybl (~tobybl@213.31.135.91)
[11:48:14] *** Quits: deadmarshal (~deadmarsh@95.38.116.136) (Ping timeout: 260 seconds)
[12:18:17] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[12:19:42] *** Quits: tobybl (~tobybl@213.31.135.91) (Remote host closed the connection)
[12:24:08] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[12:26:00] *** Joins: Napalm (~Napalm@user/napalm)
[12:32:28] *** Joins: D-ion (~D-ion___@0850724116.static.corbina.ru)
[12:33:10] *** Quits: furrymcgee (~devuan@cgn-213-196-210-222.nc.de) (Quit: leaving)
[12:35:50] *** Joins: Pali (~pali@user/pali)
[12:40:05] *** Joins: deadmarshal (~deadmarsh@95.38.116.136)
[12:44:26] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[12:49:53] *** Quits: D-ion (~D-ion___@0850724116.static.corbina.ru) (Ping timeout: 264 seconds)
[12:56:30] * GumbyPAN CPAN Upload: Firefox-Marionette-1.15 by DDICK https://metacpan.org/release/DDICK/Firefox-Marionette-1.15
[12:58:14] *** Quits: deadmarshal (~deadmarsh@95.38.116.136) (Ping timeout: 260 seconds)
[13:11:00] *** Joins: jetchisel (jetchisel@user/jetchisel)
[13:11:31] * GumbyPAN CPAN Upload: Data-Kramerius-0.03 by SKIM https://metacpan.org/release/SKIM/Data-Kramerius-0.03
[13:16:20] *** Joins: deadmarshal (~deadmarsh@95.38.116.136)
[13:27:59] *** Quits: deadmarshal (~deadmarsh@95.38.116.136) (Ping timeout: 264 seconds)
[13:39:53] *** Joins: soliste (~soliste@88.164.90.135)
[13:41:57] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (Quit: Changing server)
[13:42:03] *** Joins: norkle (~norkle@admin.nasa-g0v.com)
[13:43:19] *** norkle is now known as Norkle
[13:49:21] *** Joins: furrymcgee (~devuan@cgn-213-196-210-222.nc.de)
[13:53:22] *** Joins: D-ion (~D-ion___@0850724116.static.corbina.ru)
[14:01:37] * GumbyPAN CPAN Upload: App-Image-Generator-0.03 by SKIM https://metacpan.org/release/SKIM/App-Image-Generator-0.03
[14:03:04] *** Joins: deadmarshal (~deadmarsh@95.38.116.136)
[14:04:27] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:05:44] *** Joins: proller (~p@80.240.216.69)
[14:06:00] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[14:32:27] *** Quits: furrymcgee (~devuan@cgn-213-196-210-222.nc.de) (Quit: leaving)
[14:32:57] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:33:42] *** Joins: csrf (~csrf@user/csrf)
[14:42:44] *** Joins: hudo (~hudo@62.68.20.210)
[14:43:28] *** Joins: hudo_ (~hudo@62.68.20.210)
[14:44:41] *** Quits: hudo_ (~hudo@62.68.20.210) (Remote host closed the connection)
[14:47:54] *** Quits: hudo (~hudo@62.68.20.210) (Ping timeout: 260 seconds)
[14:56:22] *** Quits: deadmarshal (~deadmarsh@95.38.116.136) (Ping timeout: 260 seconds)
[15:03:14] *** Joins: deadmarshal (~deadmarsh@95.38.116.136)
[15:16:13] *** Joins: magla (~gelignite@55d47dc5.access.ecotel.net)
[15:22:59] *** Joins: jabberwok (~wlindley@75.105.20.104)
[15:28:19] *** Joins: tobybl (~tobybl@213.31.135.91)
[15:43:58] *** Quits: deadmarshal (~deadmarsh@95.38.116.136) (Ping timeout: 260 seconds)
[15:53:13] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:11:57] *** Joins: deadmarshal (~deadmarsh@95.38.116.136)
[16:15:40] *** Joins: AstraSed (~AstraSed@2a02:a463:ab94:1:e0b0:53f1:763e:1f7d)
[16:16:59] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Remote host closed the connection)
[16:36:38] *** Quits: deadmarshal (~deadmarsh@95.38.116.136) (Ping timeout: 260 seconds)
[16:44:04] *** Joins: deadmarshal (~deadmarsh@95.38.116.136)
[16:46:54] * GumbyPAN CPAN Upload: urpmi-v8.127 by TVIGNAUD https://metacpan.org/release/TVIGNAUD/urpmi-v8.127
[16:49:55] *** Joins: hudo_ (~hudo@62.68.20.210)
[16:56:13] *** Joins: hudo__ (~hudo@62.68.20.210)
[16:58:38] *** Quits: hudo_ (~hudo@62.68.20.210) (Ping timeout: 260 seconds)
[17:01:13] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[17:02:24] *** Joins: krismatrix (~igloo@c-98-199-180-127.hsd1.tx.comcast.net)
[17:03:01] *** Quits: deadmarshal (~deadmarsh@95.38.116.136) (Ping timeout: 245 seconds)
[17:04:26] *** Quits: krismatrix (~igloo@c-98-199-180-127.hsd1.tx.comcast.net) (Remote host closed the connection)
[17:07:50] *** Joins: deadmarshal (~deadmarsh@95.38.116.136)
[17:08:15] *** Joins: furrymcgee (~devuan@cgn-213-196-210-222.nc.de)
[17:09:55] *** Quits: pucara (~i@181.92.84.206) (Quit: Lost terminal)
[17:21:59] *** Quits: deadmarshal (~deadmarsh@95.38.116.136) (Ping timeout: 264 seconds)
[17:29:13] *** Joins: monkey_ (~user@2803:d100:e440:314:23b8:c8fe:9b54:935a)
[17:34:00] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[17:36:34] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[17:43:27] *** Joins: humky (~humky@user/humky)
[17:43:37] *** Quits: hudo__ (~hudo@62.68.20.210) (Remote host closed the connection)
[17:46:47] *** Joins: Tempesta (~Tempesta@user/tempesta)
[17:48:37] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[17:54:51] *** Joins: jlenz (~jlenz@c-73-204-107-230.hsd1.fl.comcast.net)
[18:18:18] *** Quits: proller (~p@80.240.216.69) (Read error: Connection reset by peer)
[18:21:18] *** Quits: tobybl (~tobybl@213.31.135.91) (Remote host closed the connection)
[18:22:53] *** Joins: proller (~p@80.240.216.69)
[18:23:21] <genio> ugh. I hate msys2
[18:25:10] *** Quits: magla (~gelignite@55d47dc5.access.ecotel.net) (Quit: Stay safe!)
[18:32:22] *** Joins: willthechill (~willthech@2600:1700:8c61:3ed0:48:46dd:8f1:e85e)
[18:33:54] *** Joins: sprout_ (~quassel@2a02:a467:ccd6:1:8872:6fff:30a7:51e0)
[18:37:25] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:21d2:19c0:e01b:f66c) (Ping timeout: 260 seconds)
[18:53:10] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 260 seconds)
[18:58:53] *** Joins: akaWolf (~akaWolf@akawolf.org)
[19:00:26] *** Quits: roflbot (~hoydand@195.181.139.135) (Ping timeout: 260 seconds)
[19:04:50] *** Joins: vyv (~vyv@bras-vprn-nrbaon0452w-lp130-16-76-68-64-112.dsl.bell.ca)
[19:05:39] *** Joins: roflbot (~hoydand@195.181.139.135)
[19:05:59] *** Quits: AstraSed (~AstraSed@2a02:a463:ab94:1:e0b0:53f1:763e:1f7d) (Quit: Client closed)
[19:06:25] *** Joins: magla (~gelignite@55d47dc5.access.ecotel.net)
[19:11:22] <aquanight> genio: there even still a point to msys2 these days?
[19:13:35] <karjala> To turn an array into a list, is this the best idiom? `@s[0..$#s]`
[19:19:43] *** Quits: diskin (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[19:20:57] *** Joins: diskin (~diskin@87.117.56.119)
[19:22:36] <rindolf> karjala: (@s,)?
[19:22:53] <karjala> neat
[19:22:54] <karjala> thanks
[19:23:08] <rindolf> karjala: and why do you need that?
[19:24:49] <karjala> I don't, just wondered because I wrote a sub for fun that evaluates differently in scalar context, if the sub returns @s from if it  returned @s[0..$#s].
[19:25:25] <karjala> Actually it returns either (5, @s) or (5, (@s,))
[19:25:51] <Grinnz> so, none of these are "lists"
[19:25:58] <Grinnz> they are just different operators
[19:26:13] <karjala> Oh, I remember that discussion
[19:26:13] <Grinnz> an array in scalar context behaves differently from a comma in scalar context, or an array slice in scalar context
[19:26:30] <Grinnz> there are many other operators which may behave like scalar comma
[19:26:33] <Grinnz> but not all
[19:27:28] <Grinnz> so basically, first step is to define what behavior you want in scalar context, then use the operator that provides that behavior
[19:28:22] *** Quits: diskin (~diskin@87.117.56.119) (Ping timeout: 260 seconds)
[19:28:41] <Grinnz> and *ideally*, you document that the function is only to be called in list context, and so if it gets called in scalar context the user gets to keep all three halves
[19:28:51] <Grinnz> (i.e. scalar context is undefined behavior)
[19:29:04] <karjala> Thanks!
[19:29:07] <karjala> That was enlightening
[19:29:25] *** Joins: diskin (~diskin@87.117.60.162)
[19:29:58] <karjala> So in scalar context a comma in parentheses is a comma operator, and in list context a comma in parentheses is a list separator? Am i right?
[19:30:02] <Grinnz> unlike list context it's rather difficult to accidentally call a function in scalar context, so this design works out usually
[19:30:17] <Grinnz> karjala: pretty much, although you could refer to both as "a comma operator"
[19:30:24] <Grinnz> but yes, the operator does different things
[19:30:33] <Grinnz> and the parentheses don't affect it
[19:38:45] <mst> if people keep calling my list context function in scalar context
[19:38:59] <mst> I change 'return $x, $y, $z;' to 'return () = ($x, $y, $z);'
[19:45:38] *** Quits: monkey_ (~user@2803:d100:e440:314:23b8:c8fe:9b54:935a) (Ping timeout: 260 seconds)
[19:51:13] <karjala> @s[0..$#s] *is* a list though, right? I think it is, because in scalar context evaluates to its last value.
[19:51:28] <karjala> last element*
[19:51:39] <mst> eval: sub f { return ('a', 'b'); } sub g { return( () = ('a', 'b') ) } [ scalar f(), scalar g() ]
[19:51:43] <perlbot> mst: ["b",2]
[19:53:20] <karjala> So list assignment in scalar context evaluates to the number of elements on the right, and in list context to the elements on the right (or the list on the right)
[19:53:24] <karjala> Hm
[19:53:29] <Grinnz> karjala: it's not a list - it's an array slice, which in scalar context evaluates to its last value
[19:53:36] <karjala> Okay!
[19:53:48] <Grinnz> it just has the same behavior as a scalar comma, effectively
[19:54:22] <Grinnz> whereas list assignment in scalar context (mst's example) has effectively the same behavior as an array in scalar context (number of elements)
[19:54:25] *** Joins: monkey_ (~user@2803:d100:e440:314:23b8:c8fe:9b54:935a)
[19:55:54] *** Quits: vyv (~vyv@bras-vprn-nrbaon0452w-lp130-16-76-68-64-112.dsl.bell.ca) (Quit: Konversation terminated!)
[19:56:37] <karjala> So the definition of a list is only "things separated by comas that happen to be in list context"?
[19:56:44] <mst> karjala: the reason for this is to ensure that @x[0,1,2] behaves the same as ($x[0], $x[1], $x[2])
[19:56:57] <Grinnz> none of these are definitions of list; they *yield* lists in list context
[19:57:10] <Grinnz> everything returns a list in list context
[19:57:18] <karjala> Aha
[19:57:32] <Grinnz> the list is the series of zero or more values that are sent into the stack
[19:58:21] <karjala> So even nothing returns a list in list context
[19:58:28] <Grinnz> correct, the empty list
[19:58:40] <Grinnz> which is what return; does
[19:58:53] <karjala> How come I can't write @s = ; then?
[19:58:59] <Grinnz> because the parser doesn't like it
[19:59:17] <karjala> ok
[19:59:42] <Grinnz> the parser requires a "value" to follow the assignment operator
[19:59:51] <mst> karjala: because = is a binary operator so you need to have a left hand side and a right hand side
[19:59:52] <Grinnz> () is a workaround to put no values there
[20:00:06] <mst> karjala: pretty much no language would allow that
[20:00:16] <mst> (there's probably one somewhere but I'm just going to not think about that ;)
[20:00:27] <jabberwok> Intercal ?
[20:01:01] * mst increases the gain on the 'not thinking about that' field
[20:01:19] <karjala> Even Perl 6 doesn't allow that?
[20:01:24] <karjala> Did I guess the one?
[20:01:31] <Grinnz> the assignment operator requiring parentheses is what most often makes people think parentheses make a list. but you can disprove that connection with something as simple as push
[20:01:37] <Grinnz> and also return
[20:02:10] <huf> or []
[20:02:18] <huf> you dont need [()]
[20:02:29] <mst> I don't remember raku allowing it either
[20:02:33] <Grinnz> and similarly `my @foo = 42;` is a perfectly valid list assignment, since there's no precedence issue with a single item
[20:03:09] <karjala> Aha! One of my greatest unresolved mysteries has been solved.
[20:03:12] <karjala> (about @foo = 42)
[20:17:16] * GumbyPAN CPAN Upload: Acme-Resume-0.0106 by CSSON https://metacpan.org/release/CSSON/Acme-Resume-0.0106
[20:29:44] *** Joins: voidnoir0_ (uid343973@id-343973.tinside.irccloud.com)
[20:30:54] *** Quits: monkey_ (~user@2803:d100:e440:314:23b8:c8fe:9b54:935a) (Ping timeout: 260 seconds)
[20:36:19] * GumbyPAN CPAN Upload: Game-Entities-0.100 by JJATRIA https://metacpan.org/release/JJATRIA/Game-Entities-0.100
[20:43:08] <ehuelsmann[m]> hi. I want to switch PGObject{,::*} from Carp to Carp::Clan. After switching `use Carp` to `use Carp::Clan qw(^PGObject::)`, all `carp` output  from the test suite is now prefixed by `Carp::Clan::__ANON__():` is that to be expected? (I didn't...) This is on Perl 5.30, btw.
[20:45:51] <mst> ehuelsmann[m]: no
[20:46:47] <mst> ehuelsmann[m]: what happens if you write a small script that triggers one of those warnings without anything but a specific class loaded?
[20:47:21] <mst> ehuelsmann[m]: that would give us a start on tracking it down
[20:47:44] <ehuelsmann[m]> ok. thanks. I'll go search deeper, if this isn't expected by you either.
[20:49:55] <mst> ehuelsmann[m]: I don't have something usng it handy but that's definitely not how I understand it to be supposed to work and it's not how I remember it working last time I used it
[20:50:19] <mst> ehuelsmann[m]: so I would definitely say "something has gone odd"
[20:50:29] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Quit: Shlomi Fish ("Rindolf") has left the server. âChuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.â)
[20:50:40] <ehuelsmann[m]> ok. It wasn't my recollection either, but I wanted to be sure before sinking any time into it.
[20:50:56] <ehuelsmann[m]> I'll search more. thanks for the confirmation!
[21:01:21] * GumbyPAN CPAN Upload: Config-Model-2.143 by DDUMONT https://metacpan.org/release/DDUMONT/Config-Model-2.143
[21:06:22] * GumbyPAN CPAN Upload: Net-SAML2-0.44 by TIMLEGGE https://metacpan.org/release/TIMLEGGE/Net-SAML2-0.44
[21:06:43] *** Joins: deadmarshal (~deadmarsh@95.38.229.214)
[21:16:28] *** Quits: alex11 (~alex11@user/alex11) (Read error: Connection reset by peer)
[21:21:26] *** Joins: sbodin (~Android@185.12.224.233)
[21:25:31] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 245 seconds)
[21:25:56] *** Joins: xenial-user5 (~androirc@3EC97C6F.catv.pool.telekom.hu)
[21:26:17] <ehuelsmann[m]> mst: After fiddling with Carp::Clan locally, I understand it now: I passed in a pattern that doesn't match the local package's name (I passed "PGObject::" when the local package calling package was called PGObject). Carp::Clan adds the name of the calling function to the error message (in which it differs from Carp). The call came from a package not-matched by the pattern in the import and the "carp" function itself is an anonymous sub()
[21:26:17] <ehuelsmann[m]> allocated by Carp::Clan from its own package... So, it prepended "Carp::Clan::__ANON__()"
[21:26:31] <mst> ahhhh
[21:26:36] <ehuelsmann[m]> I fixed the regex.
[21:26:44] *** Joins: alex11 (~alex11@user/alex11)
[21:26:50] <mst> /^PGObject($|::)/
[21:27:07] <ehuelsmann[m]> yup. that's the way I did it now.
[21:27:23] <ehuelsmann[m]> thanks for the help!
[21:28:33] <Grinnz> \b at the end would also work
[21:29:05] <ehuelsmann[m]> word boundary. I like it.
[21:33:02] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 260 seconds)
[21:33:23] *** Joins: X-Scale` (~ARM@31.22.147.35)
[21:34:23] *** X-Scale` is now known as X-Scale
[21:34:45] *** Quits: genio (sid223130@ilkley.irccloud.com) (Ping timeout: 260 seconds)
[21:37:56] *** Joins: genio (sid223130@id-223130.ilkley.irccloud.com)
[21:42:45] *** Quits: sbodin (~Android@185.12.224.233) (Quit: -a- IRC for Android 2.1.59)
[22:02:33] <simcop2387> eval: ["PGObject40" =~ /^(PGObject)\b/]
[22:02:35] <perlbot> simcop2387: [] ð
[22:02:38] <simcop2387> ok good
[22:02:44] <simcop2387> brane no worky right now
[22:10:27] *** Somni_ is now known as Somni
[22:14:18] <ology> ...I have the dumb
[22:17:28] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[22:34:05] *** Quits: deadmarshal (~deadmarsh@95.38.229.214) (Ping timeout: 246 seconds)
[22:41:32] * GumbyPAN CPAN Upload: uHTML-1.08 by OKELLO https://metacpan.org/release/OKELLO/uHTML-1.08
[22:46:05] *** Joins: deadmarshal (~deadmarsh@95.38.229.214)
[22:54:54] *** Quits: furrymcgee (~devuan@cgn-213-196-210-222.nc.de) (Quit: leaving)
[22:57:30] *** Quits: deadmarshal (~deadmarsh@95.38.229.214) (Ping timeout: 260 seconds)
[22:59:11] *** Quits: voidnoir0_ (uid343973@id-343973.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[23:07:25] *** Quits: ircuser-1 (~Johnny@71.63.241.168) (Quit: because)
[23:13:50] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[23:36:16] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[23:36:37] * GumbyPAN CPAN Upload: Firefox-Marionette-1.16 by DDICK https://metacpan.org/release/DDICK/Firefox-Marionette-1.16
[23:48:46] *** Quits: xenial-user5 (~androirc@3EC97C6F.catv.pool.telekom.hu) (Ping timeout: 260 seconds)
[23:51:39] * GumbyPAN CPAN Upload: Moose-2.2200 by ETHER https://metacpan.org/release/ETHER/Moose-2.2200
[23:58:47] *** Joins: deadmarshal (~deadmarsh@95.38.229.214)
[23:59:35] <genio> mst: The response wasn't quite what I'd hoped for. He pointed to the readme on one of the repos I'm already dealing with and getting nowhere
