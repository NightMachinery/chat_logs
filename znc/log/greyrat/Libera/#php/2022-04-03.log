[00:00:01] *** _filename is now known as filename
[00:05:11] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[00:05:27] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[00:09:33] *** Joins: physikoi (~physikoi@user/physikoi)
[00:09:59] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d)
[00:11:54] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[00:13:07] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[00:14:55] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d) (Ping timeout: 260 seconds)
[00:15:51] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 260 seconds)
[00:16:14] *** Joins: delboy1978uk (~delboy197@d51a4773c.access.telenet.be)
[00:18:20] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[00:21:20] <physikoi> Hey #php. I'm trying to confirm whether I have a good understanding of best practices for processing form input: filtering (trimming, empty string to null, etc), validating (making sure inputs conform to expectation, valid credit card number, valid integer, etc), and then deciding whether to store that info in db. If anything stored user inputs need to be displayed, ensure "escaping." Is that the gist of
[00:21:20] <physikoi> it? For filtering and validating, I'm looking at https://github.com/elegantweb/sanitizer and https://respect-validation.readthedocs.io/en/latest/, respectively. Am I close?
[00:22:05] *** Joins: magla (~gelignite@55d4c6cf.access.ecotel.net)
[00:22:13] <Blondie101010> don't sanitize
[00:22:15] <__adrian> choice of libraries is up to you
[00:22:22] <Blondie101010> filter and reject when appropriate
[00:22:32] <__adrian> what you're calling "filtering" i'd call "normalizing"
[00:22:49] <Blondie101010> as for storing credit card numbers, you'll get the bank institutions on your back
[00:23:02] <physikoi> I'm coming from this interesting article: https://kevinsmith.io/sanitize-your-inputs/
[00:23:24] <__adrian> but the misleading thing you said is "If anything stored user inputs need to be displayed, ensure "escaping."" -- escaping (for whatever) happens when you're doing that thing, NOT when you're collecting/validating inputs.
[00:23:28] <da_wunder> also validation !== sanitization
[00:23:50] <__adrian> e.g., if something is going to a webpage, you DO NOT escape it on input. you escape it when you `echo`.
[00:24:18] <physikoi> Blondie101010: yeah, dumb example re credit card. I know i'd have a third party like Authorize.net do that; telephone is a better example. When you say "don't sanitize" input, you mean don't bother with stuff like trimming?
[00:24:35] <physikoi> __adrian: "normalizing" makes more sense to me too
[00:24:37] <Blondie101010> no trimming is fine
[00:24:56] <Blondie101010> same with capitalization and such
[00:25:04] <__adrian> when people say "sanitize" they usually mean/think "fix" - i.e., making bad input good.
[00:25:25] <__adrian> e.g., removing "/" and "." from an input $filename.
[00:25:34] <__adrian> **DON'T DO THAT.**
[00:25:41] <Blondie101010> if your user enters they're "8o", does it mean that they're 8 years old or 80, or something else?
[00:25:48] <__adrian> if it's bad input, throw it away. this is what http 400 is for.
[00:25:56] <da_wunder> ^
[00:25:57] <physikoi> __adrian: sorry about the bad grammar. I was thinking along the lines of ensuring I'm not spitting out javascript commands from my db that a user may have submitted.
[00:26:20] <__adrian> it's not bad grammar, it's just what most people are thinking when they say that
[00:26:29] <Blondie101010> physikoi:  that's why he said to escape your output, not input
[00:26:36] <physikoi> Blondie101010: yes to 'trimming' and 'capitialization', calling it 'normalization' per __adrian. OK, got that now.
[00:26:42] <__adrian> as for "spitting out javascript commands from my db," that's a great example of something that's got nothing to do with input.
[00:27:09] <AllenJB> To prevent attacks like JS in text fields, you escape output for the context its in, when you actually output. (eg. htmlentities()). Don't try to do it on input.
[00:27:15] <__adrian> it doesn't even have anything to do with the db.
[00:27:53] <__adrian> don't do htmlspecialchars on input. don't do it when you store to the db. do it when you `echo` to the webpage.
[00:27:57] <physikoi> __adrian: WRT filenames, yeah, i'm staying far away from that. Working on a demo project that only entails storing a user's "goals", basic bio stuff, etc.
[00:28:10] <__adrian> k
[00:28:24] <Blondie101010> the DB aspect is a concern about injection...  that's a whole different subject which is VERY easy to solve
[00:28:28] <__adrian> so, "validation" has a very different goal than escaping.
[00:28:40] <physikoi> __adrian: Ok, so, if input fails validation (malformed phone number), i should return a 400?
[00:28:49] <Blondie101010> sure
[00:28:50] <__adrian> you don't validate inputs to prevent sqli or xss.
[00:28:54] <__adrian> yes
[00:29:05] <da_wunder> each of those have different goals, normalization !== validation !== sanitization
[00:29:08] <__adrian> because you wanted  aphone number, and they didn't give you one.
[00:29:31] <__adrian> you validate inputs to make sure the input IS the thing you wanted.
[00:30:27] <Blondie101010> otherwise you need people to manually verify data
[00:30:56] <__adrian> more often, you just end up with something down the line that only works sometimes
[00:31:06] <physikoi> WRT to contending with sqli, my understanding is to make sure I'm using prepared statements. Which seems to be covered when using, say, laravel's illuminate/eloquent.
[00:31:25] <physikoi> OK, just reading through everything here
[00:31:55] <Blondie101010> physikoi:  packages/libraries do not force a programmer to do things right (and they shouldn't)
[00:32:08] <Blondie101010> you must make sure you understand how it works
[00:32:14] <__adrian> "Which seems to be covered ..." make sure the tool is using prepared statements + parameters correctly, and the make sure you're using the tool correctly
[00:32:27] <__adrian> it's not as simple as "i'm using {x} so everything is fine"
[00:32:42] <da_wunder> ^
[00:32:42] <physikoi> AllenJB: "To prevent attacks like JS in text fields, you escape output ..." Yeah, this what I've come to understand from reading. Wondering what __adrian meant by " that's a great example of something that's got nothing to do with input" though
[00:32:44] <__adrian> you can absolutely do prepared statements wrong. and lots of people do.
[00:33:07] <__adrian> physikoi: i mean, it has nothing to do with input.
[00:33:22] <__adrian> it has to do with _output_. the stuff you echo to the webpage.
[00:33:29] <Blondie101010> how would the lib know whether the programmer coded to pass "Select * from someTable Where id = $id" or "Select * from someTable Where id = 12"?  it can't
[00:33:49] <physikoi> da_wunder: "each of those have different goals, normalization !== validation !== sanitization" Thank you. Such important distinctions that I find myself needing a periodic refresher for!
[00:34:25] <physikoi> "it's not as simple as "i'm using {x} so everything is fine"' good point
[00:35:05] <__adrian> see blondie's example.  $pdo->prepare("select $x from Y where z=$z");  accomplishes nothing.
[00:35:23] <__adrian> but that's what many people do. and then assume it's ok "because prepare."
[00:36:26] <physikoi> __adrian: if i'm reading you correctly, if i give a user a textbox to submit a bio, i shouldn't be concerned about them submitting a bunch of javascript; i should just take care to strip it out (which i think is what AllenJB was saying)?
[00:36:48] <__adrian> you should not be concerned. you should not strip it out.
[00:36:55] <Blondie101010> I'd reject it if it contains something I don't want
[00:37:00] <__adrian> "strip it out" is THE WRONG IDEA.
[00:37:03] <AllenJB> If you escape the content on output correctly, you shouldn't need to strip it out
[00:37:09] <__adrian> ^
[00:37:09] <netstar> :)
[00:37:13] <physikoi> Blondie101010: I'm mentally processing your comments now :)
[00:37:20] <da_wunder> that is just the same as someone is telling you when you're using language `x` you cannot do anything wrong - that is total bs - no matter what language you're using you could do that bad, ok, really good and everything between those
[00:37:44] <__adrian> if you don't want js, then reject js. that's validation. BUT that doesn't have anything to do with escaping  ;)
[00:38:09] <Blondie101010> and validating that there's no code is not a simple task
[00:38:18] <__adrian> if you want text, then you use htmlspecialchars() when you display the text.
[00:38:27] <da_wunder> and still - imho - people should do those things in client (javascript) and backend side
[00:38:33] <__adrian> nothing to do with input or validation.
[00:40:50] *** Joins: filename (~kilitary@static.246.201.46.78.clients.your-server.de)
[00:41:00] <physikoi> WRT validating there's no code, I guess the strict way to deal with that is through whitelisting; however, I think PHP only has a builtin way for checking latin alphanumeric characters.
[00:41:14] <__adrian> ?
[00:41:27] <__adrian> that's silly (and also doesn't mean there's no code).
[00:41:46] <da_wunder> could you explain what you're trying to do?
[00:43:28] <physikoi> da_wunder: client and server, for sure. I try to stick with the "never trust the client" maxim. Been reading about "defense in depth" lately, security considerations for application code, database, other stuff; still learning
[00:44:30] <__adrian> start by writing code that works correctly, and on purpose.
[00:44:36] <__adrian> that's 90% of it
[00:45:00] *** Joins: ssh073 (~serg073@79.164.47.232)
[00:45:28] <physikoi> da_wunder: I'm working on a demo application where one can maintain a log of foods they eat, track their weight, set goals, and the like. The purpose of the demo is to demonstrate knowledge of PHP, design goals, and project management, as well as capacity to learn!
[00:45:49] <physikoi> __adrian: *nods* *smiles*
[00:45:57] *** Quits: boubou (~boubou@hide.my.ip.upsidehosting.com) (Quit: ZNC - http://znc.sourceforge.net)
[00:46:34] *** Quits: ssh073 (~serg073@79.164.47.232) (Client Quit)
[00:46:41] <da_wunder> so if you don't trust anything about those inputs, then I would just use strip_tags + htmlspecialchars combo
[00:47:28] <__adrian> strip_tags("i <3 broken functions")
[00:48:06] <__adrian> just htmlspecialchars()
[00:48:42] <da_wunder> and with that I would just compare that result like strip_tags("i <3 broken functions") !== "i <3 broken functions" and if that is use then 400 back to user to check the input
[00:50:21] <Blondie101010> yeah that is one good way
[00:51:27] <__adrian> da_wunder: but there's no code in my input. why did you reject it?
[00:51:58] <Blondie101010> "to encourage people to learn emojis" :)
[00:53:09] <Blondie101010> yeah but that filter would eliminate a lot of things which may be valid, depending on the context
[00:53:43] <da_wunder> so? I would do that check in frontend side so that user cannot input eg. < char - I don't see any point of allowing those in application what physikoi is doing
[00:54:03] <__adrian> what if i wanted to tell you that 1 < 2 ?
[00:54:17] <da_wunder> fuck sake
[00:54:26] <__adrian> i'm being serious
[00:54:37] <Blondie101010> very valid example
[00:54:46] <da_wunder> I'm saying that I don't see any point of using < chars in some text input in application what physikoi is building...
[00:54:52] <da_wunder> read the fucking context
[00:55:12] <__adrian> even staying within the confines of physikoi's example, what's your goal? to weigh < 200 lbs
[00:55:16] <Blondie101010> a bio is quite flexible text
[00:55:19] <da_wunder> huoh
[00:55:20] <__adrian> da_wunder: please check your language.
[00:55:21] <da_wunder> goodbye
[00:58:30] <dag> <3
[00:59:33] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[01:00:17] <sumthing1980> what was the function to learn if anything has been output already including headers and other stuff?
[01:01:04] <physikoi> OK, so I've two examples that hopefully i understand your lessons, __adrian, Blondie101010 , da_wunder: one is dealing with input of a "username" and another is dealing with input of a user bio: https://www.toptal.com/developers/hastebin/marutaroxo.php
[01:01:06] <__adrian> physikoi: so, if you do have an input where you only want to allow a certain set of characters, sure - match against those characters. that's a narrower use case than you might expect, however. i advise not thinking in "allowed characters" terms.
[01:01:10] <physikoi> Does this seem right?
[01:01:23] <__adrian> sumthing1980: https://php.net/headers_sent
[01:01:45] <__adrian> though hopefully you'de design your application so you know when output has started.
[01:01:49] <__adrian> !+php first
[01:01:49] <php-bot> your PHP code can be sorted into two categories: code which _performs work_ (processing input, controller logic, database access, error handling, etc.), and code which  _produces output_ (header(), echo, <?= $var ?>, plain ol' <html>, etc.). work goes FIRST. output goes LAST. https://gist.github.com/adrian-enspired/9ed2542a695e2ebe30aa
[01:02:41] <sumthing1980> Im using headers sent but Im thinking maybe it sends things but not headers
[01:02:46] <__adrian> physikoi: for your example #1, what are your rules about usernames?
[01:02:51] <physikoi> __adrian: "however. i advise not thinking in "allowed characters" terms.". I can see the trouble one would run into for loosely defined inputs like, say, a user's bio
[01:03:03] <sumthing1980> is there a similar function but for output but not headers ?
[01:03:24] <__adrian> sumthing1980: headers are sent, at the latest, when any other output is sent.
[01:03:51] <Blondie101010> that sounds wrong
[01:03:56] <__adrian> if ANY output has been sent, headers will have also been sent. this is because they're literally before the rehular output in the http response.
[01:04:11] * Blondie101010 nods
[01:04:17] <__adrian> yeah that probably wasn't a great way to phrase it
[01:04:25] <physikoi> __adrian: the validation rule for username in that example is the string must be alphanumeric (as defined in PHP)
[01:04:49] <__adrian> physikoi: "alphanumeric" is also a looser term than you might think. which alphabet?
[01:05:04] <da_wunder> and most likely unique
[01:05:11] <sumthing1980> Im outputting a png file and if things are output before it like error messages or warnings
[01:05:13] <__adrian> ^ most likely
[01:05:23] <dag> sumthing1980: there's some functions in the ob_ family. sounds like your doing it wrong though
[01:05:24] <sumthing1980> is the proper way to detect this by looking at headers sent?
[01:05:40] <Blondie101010> sumthing1980:  that question can not exist if you follow the suggested "php first" approach and have proper error reporting/logging set
[01:05:42] <__adrian> sumthing1980: you shouldn't be displaying error messages on a live site
[01:06:12] <__adrian> !+error logging
[01:06:12] <php-bot> In addition to configuring error reporting (/msg php-bot error reporting), set log_errors=1 and error_log=/path/to/your/error.log in your php.ini file. This allows you to simply tail the log to see errors, and to disable display_errors (e.g., during production).
[01:06:25] <da_wunder> physikoi: but really more you put restrictions your inputs, less you need to some sanitization
[01:07:00] <physikoi> __adrian: lol, precisely! That's what I had in mind when i commented on whitelisting characters for a bio. alphanum (ctype_alnum()) here in my example would be limiting to Latin numbers (well, Arabic) and letters. But yeah, what about internationalization?
[01:07:36] <Blondie101010> physikoi:  the point is that you can not filter it enough to be useful
[01:08:02] <Blondie101010> accept what you need to accept, and be careful on output
[01:08:02] <physikoi> Blondie101010: *nods*
[01:08:04] <__adrian> generally, avoid ctype_*(). they're rather limited.
[01:08:19] <__adrian> for intl, use https://php.net/intl
[01:08:38] <__adrian> it's a broad topic though, so no idea which part you're wondering about  :)
[01:08:51] <Blondie101010> you could also learn advanced regex, but that will represent a project in itself
[01:08:54] <sumthing1980> this is not a live site, should I not be outputting warnings and stuff anyway when developing?
[01:09:15] <Blondie101010> not if it bothers your code
[01:09:26] <__adrian> sumthing1980: it's more problematic than useful, ime. also note by "live" i mean "on the internet at all"
[01:09:29] <physikoi> __adrian: yeah, internationalization is way out of scope for current and planned phases of this demo.
[01:10:08] <Blondie101010> physikoi:  that is besides the point...  don't try to do an unreasonable filtering effort
[01:10:11] <sumthing1980> it is something I am developing at the moment not public
[01:10:13] <__adrian> charsets are relevant, thougyh.
[01:10:44] <__adrian> sumthing1980: then up to you, but i personally still find it more problematic than helpdul
[01:10:50] <__adrian> *helpful
[01:11:48] *** Quits: delboy1978uk (~delboy197@d51a4773c.access.telenet.be) (Quit: delboy1978uk)
[01:12:41] <physikoi> sumthing1980: the experts may disagree with which libaries (if any) you should use to do it, but you should always log exceptions. As for displaying errors on your site in development, there are great tools to consider. There's https://github.com/kint-php/kint, https://github.com/nette/tracy, and more. Definitely take pains to make sure you never display errors on your live site -- you never know what you
[01:12:41] <physikoi> might reveal!
[01:13:35] <sumthing1980> ok
[01:13:37] <sumthing1980> thanks
[01:13:43] <Albright> I use kint with it disabled in config (so any calls to it noop), override as enabled in the local settings file
[01:13:45] *** Joins: delboy1978uk (~delboy197@d51A4773C.access.telenet.be)
[01:13:48] *** Quits: delboy1978uk (~delboy197@d51A4773C.access.telenet.be) (Client Quit)
[01:14:01] <Albright> But I still keep calls to it out of Git commts.
[01:14:17] <Albright> But if they get committed now and then, which has happened, no big.
[01:14:18] *** Joins: wildo (~lain6141@202.180.111.143)
[01:14:41] <physikoi> Albright: wrt to keeping calls out of commits, how do you personally accomplish that? Pre-commit hook of some sort?
[01:15:23] <Albright> physikoi: Nothing that fancy. I just keep an eye out for them when I'm preparing to make the commit.
[01:15:38] <Albright> Keeping commits small and atomic helps in that regard.
[01:16:28] <physikoi> Just wanna say, I feel like we're having a great conversation. I really appreciate being a part of this channel. There were some pains with the transition from freenode to libera, but it was worth it
[01:16:45] <Albright> A pre-commit hook implementation is a good idea, though. Maybe I'll look into that.
[01:16:56] *** Joins: pmercado (~pmercado@190.22.83.12)
[01:17:02] <physikoi> Albright: ah, ok. thanks for clarifying
[01:17:04] <Albright> Ah, yeah, that was weird.
[01:21:38] <sumthing1980> Uncaught Error: Class 'Tracy\Debugger' not found in /var/www/html/index.php:3
[01:21:54] <sumthing1980> no idea what Im doing
[01:22:12] <sumthing1980> I did composer require tracy/tracy
[01:22:22] <sumthing1980> AND dowloaded the phar file and the zip file
[01:22:34] <sumthing1980> I dont have any framework just my own code
[01:23:10] <physikoi> sumthing1980: did you "require" the autoload.php file?
[01:23:20] <sumthing1980> no
[01:23:54] <sumthing1980> it says add use and debugger:enable just after library loading like require vendor/autoload
[01:23:59] <sumthing1980> I dont have such things in my code
[01:25:00] <physikoi> sumthing1980: 1 second. i'll give you an example.
[01:25:08] *** Joins: geli (~gelignite@55d49bbc.access.ecotel.net)
[01:27:41] *** Quits: magla (~gelignite@55d4c6cf.access.ecotel.net) (Ping timeout: 246 seconds)
[01:29:06] <physikoi> sumthing1980: https://www.toptal.com/developers/hastebin/ozokitapay.php
[01:29:32] <sumthing1980> hmm ok Ill look into it got other things now
[01:29:33] <sumthing1980> thanks
[01:29:54] <physikoi> I don't recommend relying on the "detect" option for production, though. Albright has the right idea about disabling it
[01:30:17] <sumthing1980> dang it worked
[01:30:31] <physikoi> nice
[01:30:34] <sumthing1980> ok thanks
[01:31:09] <sumthing1980> so I just turn off all warnings and errors if I use tracy?
[01:32:28] *** Quits: csm3105 (~csm3105@47.61.127.217) (Ping timeout: 260 seconds)
[01:34:02] <physikoi> I *think* you could also make sure PHP settings in production are set to never display errors and that would be sufficient; so, it may not be necessary to explicitly disable it. I'm not 100% sure.
[01:34:15] <sumthing1980> ok
[01:34:33] <physikoi> by "it" I was referring to the tracy debugger
[01:36:08] *** Joins: ssh073 (~serg073@79.164.47.232)
[01:36:14] <sumthing1980> ok
[01:37:08] <sumthing1980> not sure this will help me in my convoluted programming methods
[01:37:38] <physikoi> sumthing1980: if you're just getting started with PHP, you might have a look at PSR4 autoload standard. You might follow it when writing your own classes. It's not the only way for autoloading, but a standard to follow. Composer handles generating the autoload files, including for your own classes if you so choose. anyway, PSR4: https://www.php-fig.org/psr/psr-4/
[01:38:13] <sumthing1980> Im not new to php at all but I dislike object oriented and working with other peoples code
[01:38:29] <sumthing1980> Ill look at it
[01:38:43] <physikoi> fair enough.
[01:39:41] <sumthing1980> so Im working on a part of code that outputs png files and Im experimenting with code that will resize it perhaps so I just echo stuff
[01:39:52] <sumthing1980> and of course the png is garbled because of the output
[01:40:01] <sumthing1980> but the browser doesnt recognize it
[01:40:05] <sumthing1980> and asks me to save it
[01:40:16] <sumthing1980> so I gotta save the file to look at it
[01:40:27] <sumthing1980> I just want to output it as txt minus the png stuff
[01:40:49] <sumthing1980> thats why I wanted a way to see if anything has been output already
[01:40:56] <sumthing1980> if not show the png otherwise exit
[01:44:56] *** Quits: ssh073 (~serg073@79.164.47.232) (Remote host closed the connection)
[01:46:17] <Blondie101010> put proper control conditions in your code
[01:46:46] <Blondie101010> don't check if there was some error output, make sure to KNOW when it happens
[01:47:34] <sumthing1980> Its not necessarily an error or warning maybe just my output somewhere
[01:47:56] <Blondie101010> so you write code that outputs and you don't know it?
[01:48:03] <Blondie101010> control what your code does!
[01:48:43] <Blondie101010> with your example case, NOTHING should output besides the actual PNG
[01:49:10] <sumthing1980> kthnx bye
[01:49:12] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[01:50:54] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:51:31] *** Quits: pmercado (~pmercado@190.22.83.12) (Ping timeout: 260 seconds)
[01:51:35] *** Joins: csm3105 (~csm3105@47.61.127.217)
[01:56:03] <__adrian> re: debug code and commits: no, do not use hooks. this prevents/discourages you from saving your work (and debugging calls) if something take more than a short while to figure out. this sort of "no debugs" rule belongs in PRs/code review (i.e., when work is supposedly _done_), not on commit.
[01:56:33] *** Quits: mixfix41 (~homefame@user/mixfix41) (Quit: cya bbiab!)
[02:02:19] <Albright> __adrian: In organizations large enough to have code review and PRs, sure.
[02:04:49] *** Quits: hh (~g@37.214.57.161) (Remote host closed the connection)
[02:04:52] <__adrian> you only need 1 person to do a PR and code review
[02:05:06] <__adrian> helps if its someone that _didn't_ write the code, but even that works
[02:05:43] <__adrian> *'
[02:05:57] <da_wunder> code reviews, prs, etc. should happen if there is more than _one_ people working
[02:06:00] <Blondie101010> having someone take a quick look at the commit is a very reasonable minimum
[02:06:13] <da_wunder> so no need to be "large" organization at all
[02:06:48] <__adrian> i generally do PRs and reviews on code i wrote myself for projects that i'm the only one working on
[02:06:59] <__adrian> certainly not formal, but they're done.
[02:07:22] <Blondie101010> do you sometimes complain to your boss about your code?
[02:07:36] <__adrian> oh all the *&^#()$ time
[02:07:42] <Blondie101010> :)
[02:07:51] <__adrian> you should see some of the things i see
[02:15:27] *** Joins: delboy1978uk (~delboy197@d51a4773c.access.telenet.be)
[02:16:39] *** Quits: filename (~kilitary@static.246.201.46.78.clients.your-server.de) (Ping timeout: 256 seconds)
[02:20:32] *** Quits: \mSg (mSg@user/msg/x-0285936) (Ping timeout: 246 seconds)
[02:23:32] *** Joins: wfpkhc (~wfpkhc@user/wfpkhc)
[02:23:38] * wfpkhc wanders into the channel
[02:23:40] <wfpkhc> Hello!
[02:23:49] <wfpkhc> I have a question about php interfaces
[02:24:12] <wfpkhc> if i have an interface that defines a method
[02:24:33] <wfpkhc> and a class implements that interface
[02:24:51] <wfpkhc> i know that i have to create a method that has that signature
[02:25:24] <wfpkhc> but is there a way to implement a class of the interface type with a method that has a different signature?
[02:25:44] <__adrian> no. that would defeat the point of implementing the interface
[02:25:57] <wfpkhc> thats what i thought -
[02:26:07] <wfpkhc> i was thinking that maybe "override"
[02:26:10] <wfpkhc> might be a way
[02:26:43] <__adrian> the point of an interface is so anyone knows what methods exist and how to use them, just because it implements the interface
[02:26:56] <wfpkhc> yes - an interface is a "contract"
[02:26:59] <__adrian> if you change how it works, then you break that.
[02:27:14] <wfpkhc> and any class that implements that interface is responsible for upholding that contract
[02:27:37] <__adrian> you're saying all the things but don't seem to realize the intent of it  :)
[02:28:09] <__adrian> if you want a different method/signature, you want a different interface.
[02:28:26] <wfpkhc> different method
[02:28:27] <wfpkhc> :D
[02:28:42] <__adrian> or different method (name), sure
[02:29:40] <wfpkhc> i have 3 classes - and each one has the method "createRow" - but each one has a different signature on the method
[02:30:01] <wfpkhc> im just trying to think of a way to make sure the 3 classes has that method name
[02:30:57] <__adrian> they would each implement a different interface. or you could better name the methods (or possibly, make a better signature)
[02:31:17] <wfpkhc> yes well...
[02:31:32] <wfpkhc> or just not use an interface and have the class stand alone
[02:32:22] <wfpkhc> ok thank you for the food for thought over this topic -
[02:33:15] * wfpkhc hugs __adrian 
[02:33:18] * wfpkhc runs off
[02:33:18] <__adrian> if there's only one class to implement a given interface, then you often don't need the interface (at least not right away)
[02:33:30] <wfpkhc> yes thats right
[02:33:32] <wfpkhc> but
[02:33:39] <wfpkhc> im thinking more from an code architecture
[02:33:44] *** Joins: kristijonas_ (~kristijon@cl-78-158-23-234.fastlink.lt)
[02:34:05] * wfpkhc slips out the door
[02:34:09] *** Quits: wfpkhc (~wfpkhc@user/wfpkhc) (Quit: Leaving)
[02:35:13] *** Joins: semeion (~semeion@user/semeion)
[02:35:56] *** Quits: kristijonas (~kristijon@cl-78-158-23-234.fastlink.lt) (Ping timeout: 246 seconds)
[02:36:18] *** Quits: delboy1978uk (~delboy197@d51a4773c.access.telenet.be) (Quit: delboy1978uk)
[02:37:07] <Blondie101010> architecture usually implies building more than a single wall :/
[02:46:01] *** Quits: csm3105 (~csm3105@47.61.127.217) (Quit: Leaving)
[02:49:39] <__adrian> well, there's three walls at least
[02:53:28] *** Joins: ssh073 (~serg073@79.164.47.232)
[02:53:36] *** Quits: ssh073 (~serg073@79.164.47.232) (Client Quit)
[02:54:54] *** Joins: ssh073 (~serg073@gateway/tor-sasl/serg073)
[03:03:49] *** Joins: csm3105 (~csm3105@47.61.127.217)
[03:08:55] *** Quits: csm3105 (~csm3105@47.61.127.217) (Quit: Leaving)
[03:12:08] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:12:50] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[03:15:13] *** Quits: bobdobbs (~user@2406:5a00:4456:db00:f4e1:5ce3:d049:2541) (Remote host closed the connection)
[03:15:43] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 260 seconds)
[03:16:52] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.5)
[03:33:48] *** Joins: freeworld (~freeworld@chello085216193138.chello.sk)
[03:44:18] *** Quits: physikoi (~physikoi@user/physikoi) (Ping timeout: 260 seconds)
[03:51:42] *** Joins: pmercado (~pmercado@190.22.83.12)
[03:55:03] *** Joins: bobdobbs (~user@2406:5a00:4456:db00:1e6b:cb5c:5f39:6b39)
[04:09:09] *** Quits: ms49434 (~ms49434@user/ms49434) (Quit: Leaving)
[04:11:32] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d)
[04:16:11] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d) (Ping timeout: 260 seconds)
[04:16:24] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Remote host closed the connection)
[04:42:55] *** Joins: physikoi (~physikoi@user/physikoi)
[04:47:27] *** Quits: physikoi (~physikoi@user/physikoi) (Ping timeout: 260 seconds)
[04:55:00] *** Quits: geli (~gelignite@55d49bbc.access.ecotel.net) (Quit: Stay safe!)
[04:56:37] *** Joins: delboy1978uk (~delboy197@d51A4773C.access.telenet.be)
[04:59:40] *** Quits: delboy1978uk (~delboy197@d51A4773C.access.telenet.be) (Client Quit)
[05:05:01] *** Joins: delboy1978uk (~delboy197@d51a4773c.access.telenet.be)
[05:08:27] *** Joins: thiras (~thiras@user/thiras)
[05:09:23] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 260 seconds)
[05:10:03] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 260 seconds)
[05:10:18] *** Joins: physikoi (~physikoi@user/physikoi)
[05:12:16] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[05:12:23] *** Quits: jargon (~jargon@184.101.173.186) (Ping timeout: 260 seconds)
[05:15:02] *** Quits: physikoi (~physikoi@user/physikoi) (Ping timeout: 272 seconds)
[05:16:56] *** Quits: freeworld (~freeworld@chello085216193138.chello.sk) (Ping timeout: 246 seconds)
[05:17:04] *** Quits: delboy1978uk (~delboy197@d51a4773c.access.telenet.be) (Quit: delboy1978uk)
[05:18:57] *** Joins: delboy1978uk (~delboy197@d51a4773c.access.telenet.be)
[05:29:38] *** Joins: boubou (~boubou@hide.my.ip.upsidehosting.com)
[05:38:13] *** Quits: delboy1978uk (~delboy197@d51a4773c.access.telenet.be) (Quit: delboy1978uk)
[05:40:40] *** Joins: delboy1978uk (~delboy197@d51a4773c.access.telenet.be)
[05:44:39] *** Joins: roadie (~user@pd956924f.dip0.t-ipconnect.de)
[05:44:50] *** Joins: physikoi (~physikoi@user/physikoi)
[05:49:09] *** Quits: physikoi (~physikoi@user/physikoi) (Ping timeout: 256 seconds)
[05:49:15] *** Joins: l__q (~modinfo@user/modinfo)
[05:49:43] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 260 seconds)
[06:34:15] *** Joins: filename (~kilitary@188.242.105.134)
[06:48:19] *** Quits: newwebdev13 (~newwebdev@78.135.91.44) (Quit: Leaving)
[06:58:51] *** Parts: delboy1978uk (~delboy197@d51a4773c.access.telenet.be) ()
[07:03:58] *** Quits: pmercado (~pmercado@190.22.83.12) (Ping timeout: 272 seconds)
[07:05:10] *** Quits: Donitz (~Donitz4@88-115-149-215.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[07:07:10] *** Joins: Donitz (~Donitz4@88-115-149-215.elisa-laajakaista.fi)
[07:12:10] *** Quits: Tempesta (Tempesta@user/tempesta) (Read error: Connection reset by peer)
[07:12:15] *** Joins: Tempesta (Tempesta@user/tempesta)
[07:20:33] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[07:20:57] *** Joins: thiras (~thiras@user/thiras)
[07:28:51] *** Quits: roadie (~user@pd956924f.dip0.t-ipconnect.de) (Quit: ERC (IRC client for Emacs 25.3.50.1))
[07:46:07] *** Joins: physikoi (~physikoi@user/physikoi)
[07:49:52] *** Quits: tabakhase (tabakhase@user/tabakhase) (Quit: ZNC - http://znc.in)
[07:51:02] *** Quits: physikoi (~physikoi@user/physikoi) (Ping timeout: 260 seconds)
[07:55:40] *** Joins: tabakhase (tabakhase@user/tabakhase)
[07:57:25] *** Joins: WishBoy (~WishBoy@user/wishboy)
[07:59:29] *** Quits: sreve (~quassel@p54a712fc.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[07:59:47] *** Joins: sreve (~quassel@p54a7145f.dip0.t-ipconnect.de)
[08:02:50] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[08:13:30] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d)
[08:16:29] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 256 seconds)
[08:17:48] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d) (Ping timeout: 240 seconds)
[08:32:28] *** Quits: wildo (~lain6141@202.180.111.143) (Ping timeout: 260 seconds)
[09:34:22] *** Joins: snakey_hiss (~cloudy_nz@101.100.131.179)
[09:55:39] *** Joins: \mSg (mSg@user/msg/x-0285936)
[10:33:45] *** Quits: \mSg (mSg@user/msg/x-0285936) (Read error: Connection reset by peer)
[10:45:56] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[10:49:26] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:50:50] *** Quits: snakey_hiss (~cloudy_nz@101.100.131.179) (Ping timeout: 246 seconds)
[11:01:30] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[11:02:42] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[11:11:06] *** Joins: lehinsun (~ttytwiste@188.113.176.117)
[11:13:51] *** Quits: lehinsun (~ttytwiste@188.113.176.117) (Remote host closed the connection)
[11:14:37] *** Joins: lehinsun (~ttytwiste@188.113.176.117)
[11:34:16] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[11:39:47] *** Joins: hh (~g@37.214.57.161)
[11:55:28] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[12:10:30] *** Quits: konrados (~konrados@user-5-173-20-21.play-internet.pl) (Ping timeout: 272 seconds)
[12:11:54] *** Joins: guido (~weechat@host-79-35-248-130.retail.telecomitalia.it)
[12:14:45] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d)
[12:27:31] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[12:31:38] *** Quits: lehinsun (~ttytwiste@188.113.176.117) (Ping timeout: 246 seconds)
[12:44:19] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[12:49:07] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Ping timeout: 260 seconds)
[12:54:50] *** Joins: konrados (~konrados@user-5-173-20-21.play-internet.pl)
[12:57:30] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:20:37] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d) (Ping timeout: 240 seconds)
[13:25:18] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 260 seconds)
[13:30:31] *** Quits: Tempesta (Tempesta@user/tempesta) (Read error: Connection reset by peer)
[13:47:20] *** Joins: thiras (~thiras@user/thiras)
[14:04:07] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[14:07:54] *** Joins: freeworld (~freeworld@chello085216193138.chello.sk)
[14:08:51] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 260 seconds)
[14:11:50] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[14:18:25] *** Joins: Tempesta (~Tempesta@user/tempesta)
[14:24:50] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[14:25:23] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 246 seconds)
[15:01:18] *** Quits: remolej (~kenoba@user/kenoba) (Quit: The Lounge - https://thelounge.chat)
[15:02:18] *** Joins: remolej (~kenoba@user/kenoba)
[15:06:36] *** Joins: ms49434 (~ms49434@user/ms49434)
[15:10:25] *** Quits: Awaru (Awaru@gateway/vpn/airvpn/awaru) (Quit: Awaru)
[15:10:56] *** Joins: Awaru (Awaru@gateway/vpn/airvpn/awaru)
[15:15:05] *** Quits: Awaru (Awaru@gateway/vpn/airvpn/awaru) (Ping timeout: 246 seconds)
[15:17:50] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d)
[15:22:36] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d) (Ping timeout: 260 seconds)
[15:26:00] *** Joins: Awaru (Awaru@gateway/vpn/airvpn/awaru)
[15:36:32] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[15:37:08] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 246 seconds)
[15:50:27] *** Joins: tercaL (~tercaL@user/tercal)
[16:06:53] *** Joins: delboy1978uk (~delboy197@d51A4773C.access.telenet.be)
[16:12:39] *** Quits: tercaL (~tercaL@user/tercal) (Read error: Connection reset by peer)
[16:30:33] *** Quits: delboy1978uk (~delboy197@d51A4773C.access.telenet.be) (Quit: delboy1978uk)
[16:47:04] *** Joins: guido_ (~weechat@host-79-35-248-130.retail.telecomitalia.it)
[16:47:33] *** Quits: guido (~weechat@host-79-35-248-130.retail.telecomitalia.it) (Read error: Connection reset by peer)
[17:32:12] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d)
[17:36:59] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d) (Ping timeout: 260 seconds)
[17:41:40] *** Joins: delboy1978uk (~delboy197@d51A4773C.access.telenet.be)
[17:45:10] *** Quits: delboy1978uk (~delboy197@d51A4773C.access.telenet.be) (Client Quit)
[17:57:18] *** Joins: delboy1978uk (~delboy197@d51A4773C.access.telenet.be)
[18:05:14] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[18:06:58] *** Joins: seifeslimene (~seifeslim@102.156.121.226)
[18:11:27] *** Quits: delboy1978uk (~delboy197@d51A4773C.access.telenet.be) (Quit: delboy1978uk)
[18:21:20] *** Joins: delboy1978uk (~delboy197@d51A4773C.access.telenet.be)
[18:31:34] *** Quits: delboy1978uk (~delboy197@d51A4773C.access.telenet.be) (Quit: delboy1978uk)
[18:32:37] *** Joins: newwebdev13 (~newwebdev@78.135.91.44)
[18:39:55] *** Quits: ssh073 (~serg073@gateway/tor-sasl/serg073) (Ping timeout: 240 seconds)
[18:43:07] *** Joins: roadie (~user@2a02:8108:5a40:1d87:21ab:7de7:1bdc:49f1)
[18:46:00] *** Quits: guido_ (~weechat@host-79-35-248-130.retail.telecomitalia.it) (Quit: WeeChat 3.5)
[19:15:41] *** Joins: chozorho (~chozorho@c-69-250-72-103.hsd1.md.comcast.net)
[19:18:14] *** Joins: delboy1978uk (~delboy197@d51a4773c.access.telenet.be)
[19:20:50] *** Joins: physikoi (~physikoi@user/physikoi)
[19:24:43] *** Quits: delboy1978uk (~delboy197@d51a4773c.access.telenet.be) (Quit: delboy1978uk)
[19:31:56] *** Quits: physikoi (~physikoi@user/physikoi) (Quit: leaving)
[19:44:31] *** Joins: magla (~gelignite@55d411d7.access.ecotel.net)
[19:52:06] *** Quits: magla (~gelignite@55d411d7.access.ecotel.net) (Quit: Stay safe!)
[20:22:55] *** Quits: kristijonas_ (~kristijon@cl-78-158-23-234.fastlink.lt) (Remote host closed the connection)
[20:48:23] *** Quits: filename (~kilitary@188.242.105.134) (Read error: Connection reset by peer)
[20:50:45] *** Joins: filename (~kilitary@188.242.105.134)
[20:55:40] *** Joins: snedd (~snedd@86.14.114.137)
[20:58:52] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[20:59:29] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 246 seconds)
[21:04:33] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[21:08:43] *** Joins: magla (~gelignite@55d411d7.access.ecotel.net)
[21:13:00] *** Quits: roadie (~user@2a02:8108:5a40:1d87:21ab:7de7:1bdc:49f1) (Ping timeout: 240 seconds)
[21:22:50] *** Joins: roadie (~user@2a02:8108:5a40:1d87:21ab:7de7:1bdc:49f1)
[21:24:07] *** Joins: WishBoy (~WishBoy@user/wishboy)
[21:33:46] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d)
[21:38:16] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d) (Ping timeout: 245 seconds)
[21:43:42] *** Quits: Mr-Snick (mr-snick@gateway/vpn/protonvpn/mr-snick) (Read error: Connection reset by peer)
[21:44:40] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[21:45:14] *** Joins: Mr-Snick (mr-snick@gateway/vpn/protonvpn/mr-snick)
[21:46:31] *** Joins: thiras (~thiras@user/thiras)
[21:55:39] *** Quits: novns (~novns@user/novns) (Quit: ZNC - https://znc.in)
[21:57:33] *** Joins: novns (~novns@user/novns)
[22:02:10] *** Quits: newwebdev13 (~newwebdev@78.135.91.44) (Quit: Leaving)
[22:10:53] *** Joins: filename (~kilitary@188.242.105.134)
[22:19:28] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[22:32:29] *** hh is now known as genom
[22:32:44] <MrBurns> how do I make sure all variables all reloaded when I refresh a page?
[22:33:28] <da_wunder> don't cache those, or store those to session - if you
[22:33:56] <da_wunder> if you're doing `$foo = 'something';` that variable will always be the same on refresh
[22:34:18] <da_wunder> maybe it would help if you share some example about your issue, so that we could take a closer look
[22:37:43] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 260 seconds)
[22:40:19] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[22:42:43] <MrBurns> I would like to have the $output variable to reset on refresh: https://codeshare.io/EB0eYp
[22:43:43] <Blondie101010> MrBurns:  PHP is not running the the browser
[22:43:57] <Blondie101010> when a new request is received, it is a totally new process
[22:46:56] <da_wunder> and in that page if you do a refresh are you submitting that form again?
[22:46:58] <Blondie101010> therefore, at the beginning of the last request from your page reload, all variables are new, unless your script does something to retrieve the information somehow
[22:49:00] <Blondie101010> MrBurns:  Looking at your paste link, I wonder if your question is about the form getting posted again
[22:49:32] <MrBurns> I do not want the form to be posted again on refresh
[22:50:00] <Blondie101010> the regular solution is to redirect on post
[22:50:22] <da_wunder> then you need make a redirect after you've processed that form submit
[22:50:55] <MrBurns> ok. ill look into that. Thanks
[22:51:26] <Blondie101010> it's simply sending the browser an instruction to open a new page at the end of your script
[22:51:29] *** Quits: snedd (~snedd@86.14.114.137) (Quit: Leaving)
[22:51:44] <Blondie101010> could be done with any possible redirect
[22:52:07] <Blondie101010> meta/http/JS
[23:24:39] *** Quits: LuKaRo_ (~LuKaRo@p57b15bd8.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[23:29:54] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[23:30:47] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Ping timeout: 260 seconds)
[23:31:18] *** Joins: newwebdev13 (~newwebdev@78.135.91.44)
[23:32:05] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 246 seconds)
[23:34:34] *** Joins: LuKaRo_ (~LuKaRo@p57b15bd8.dip0.t-ipconnect.de)
[23:39:36] *** Joins: vlm (~vlm@user/vlm)
[23:42:26] *** Joins: nolan_ (~nolan_@user/nolan/x-2434303)
[23:47:07] *** Joins: fef (~thedawn@user/thedawn)
[23:48:39] *** Quits: LuKaRo_ (~LuKaRo@p57b15bd8.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[23:55:38] *** Joins: LuKaRo (~LuKaRo@p4fc32a2c.dip0.t-ipconnect.de)
[23:57:15] *** Quits: keypusher (keypusher@user/keypusher) (Quit: bye)
[23:57:46] *** Joins: keypusher (keypusher@user/keypusher)
