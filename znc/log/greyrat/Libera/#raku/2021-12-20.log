[00:09:54] *** Quits: ggoebel (~ggoebel@107-134-157-130.lightspeed.tukrga.sbcglobal.net) (Quit: Leaving)
[00:23:15] *** Joins: monkey_ (~user@190.104.116.153)
[00:37:38] <Geth> ¬¶ doc: usev6++ created pull request #4001: Minor cleanup for section "Getting started"
[00:37:38] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/4001
[00:39:13] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[00:39:51] *** Joins: monkey_ (~user@190.104.116.153)
[00:40:50] *** Quits: ab5tract (~ab5tract@ip-213-127-116-109.ip.prioritytelecom.net) (Quit: Connection closed)
[00:58:21] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[01:09:30] *** Joins: monkey_ (~user@190.104.116.153)
[01:19:12] *** Joins: lichtkind__ (~lichtkind@p200300d0a72272ae79347d929697d081.dip0.t-ipconnect.de)
[01:21:38] *** Quits: lichtkind_ (~lichtkind@p200300d0a722726779347d929697d081.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[01:21:53] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[01:24:26] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.3)
[01:58:35] *** Quits: getimiskon (~getimisko@2a02:587:a024:7200:32d1:6bff:fe91:3cc9) (Quit: WeeChat 3.3)
[02:06:54] *** Joins: ggoebel (~ggoebel@107-134-157-130.lightspeed.tukrga.sbcglobal.net)
[02:08:15] <ggoebel> m: my Int %h{Set}; %h = Set.new(4,5) => 0; dd  %h
[02:08:15] <camelia> rakudo-moar b5fb3628b: OUTPUT: ¬´Hash[Int,Set] %h = (my Int %{Set} = Set.new(5,4) => 0)‚ê§¬ª
[02:08:20] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[02:13:48] *** Quits: Manifest0 (~Manifest0@cst2-65-109.cust.vodafone.cz) (Ping timeout: 240 seconds)
[02:15:17] *** Joins: monkey_ (~user@190.104.116.153)
[02:16:01] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[03:16:02] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:16:02] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:16:02] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[03:16:02] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:16:02] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[03:16:02] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[03:16:02] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[03:16:02] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[03:16:02] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:16:02] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[03:16:02] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[03:16:02] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:16:02] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:16:02] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:16:02] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:16:02] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:16:02] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:16:02] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:16:02] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[03:17:19] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[03:17:51] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[03:17:56] *** Joins: quotable6 (quo-able@2001:41d0:2:5eb5::)
[03:18:00] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[03:18:06] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[03:18:08] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[03:18:47] *** Joins: notable6 (not-able@2001:41d0:2:5eb5::)
[03:19:10] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[03:21:29] *** Joins: Xliff_ (~Cliff@pool-71-255-227-73.washdc.east.verizon.net)
[03:31:29] *** Quits: guifa (~guifa@pool-71-255-232-11.washdc.east.verizon.net) (Quit: guifa)
[03:37:23] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:37:50] *** Joins: guifa (~guifa@pool-71-255-232-11.washdc.east.verizon.net)
[03:38:51] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[04:16:51] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[04:16:54] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[04:17:00] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[04:17:36] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[04:17:36] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[04:18:09] *** Joins: committable6 (com-able@2001:41d0:2:5eb5::)
[04:18:54] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[04:55:49] *** Joins: vrurg_ (~vrurg@45.74.95.181)
[04:57:17] *** Quits: vrurg (~vrurg@45.74.95.181) (Ping timeout: 240 seconds)
[05:03:16] *** Quits: lichtkind__ (~lichtkind@p200300d0a72272ae79347d929697d081.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[05:12:08] *** Quits: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi) (Ping timeout: 256 seconds)
[05:14:05] *** Joins: frost (~frost@user/frost)
[05:15:02] *** Quits: ugexe (ugexe@p6.nu) (Ping timeout: 240 seconds)
[05:16:39] *** Joins: tellable6 (tel-able@2001:41d0:2:5eb5::)
[05:36:18] *** Joins: monkey_ (~user@190.104.116.153)
[05:38:17] *** Joins: ugexe (ugexe@p6.nu)
[05:40:06] *** Quits: ugexe (ugexe@p6.nu) (Client Quit)
[05:41:16] *** Joins: ugexe (ugexe@p6.nu)
[06:16:28] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[06:34:05] *** Quits: ggoebel (~ggoebel@107-134-157-130.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 268 seconds)
[06:37:08] *** Quits: Xliff_ (~Cliff@pool-71-255-227-73.washdc.east.verizon.net) (Ping timeout: 256 seconds)
[07:00:57] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 240 seconds)
[07:17:32] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[07:17:36] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[08:17:37] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:17:37] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:28:10] *** Joins: Xliff_ (~Cliff@pool-71-255-227-73.washdc.east.verizon.net)
[09:34:54] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:34:54] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:34:54] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:34:54] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:34:54] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:34:54] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:34:54] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:34:54] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:34:54] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:34:54] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:34:54] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:34:54] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:34:54] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:34:54] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:34:54] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:34:54] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:35:15] *** Quits: guifa (~guifa@pool-71-255-232-11.washdc.east.verizon.net) (Quit: guifa)
[09:35:20] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[09:35:21] *** Joins: committable6 (com-able@2001:41d0:2:5eb5::)
[09:35:25] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[09:35:29] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[09:35:48] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[09:36:00] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[09:36:04] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[09:36:19] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[09:36:41] *** Joins: quotable6 (quo-able@2001:41d0:2:5eb5::)
[09:36:54] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[09:37:12] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[09:37:25] *** Joins: notable6 (not-able@2001:41d0:2:5eb5::)
[09:37:36] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[10:14:37] <Geth> ¬¶ doc: 1e216133f1 | (Christian Bartolom√§us)++ | doc/Language/nativecall.pod6
[10:14:37] <Geth> ¬¶ doc: Minor cleanup for section "Getting started"
[10:14:37] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/1e216133f1
[10:21:31] <elcaro> I'm getting `No such method 'with-export' for invocant of type 'CompUnit::Handle+{<anon|1>}'` when I `use SomeModule:from<Perl5>` after `use v6.e.PREVIEW`
[10:21:51] <elcaro> I couldn't find an existing issue... before I bug it... can someone confirm it's not just me
[10:31:21] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[10:33:24] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[10:35:30] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[10:38:02] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[10:51:21] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:52:05] *** Joins: seednode (~seednode@user/seednode)
[11:19:28] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[11:23:52] *** Joins: abraxxa (~ahartmai@smtp.hartmaier.priv.at)
[11:26:19] <MasterDuke> elcaro: same here
[11:28:24] *** Quits: abraxxa (~ahartmai@smtp.hartmaier.priv.at) (Ping timeout: 256 seconds)
[11:29:00] *** Joins: abraxxa (~ahartmai@tsa-tc-flod.t-systems.at)
[12:14:37] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[12:36:20] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[12:47:30] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[12:48:26] *** Joins: frost (~frost@user/frost)
[13:19:25] <Geth> ¬¶ ecosystem: 83705f8b22 | (Elizabeth Mattijsen)++ | META.list
[13:19:25] <Geth> ¬¶ ecosystem: It appears that github.com/palapitta has disappeared
[13:19:25] <Geth> ¬¶ ecosystem: 
[13:19:25] <Geth> ¬¶ ecosystem: This affects the Aria, Bencode, Movieinfo and Weather distributions.
[13:19:25] <Geth> ¬¶ ecosystem: 
[13:19:25] <Geth> ¬¶ ecosystem: The latest available versions of these modules *are* available in the
[13:19:25] <Geth> ¬¶ ecosystem: Raku Ecosystem Archive at https://github.com/lizmat/REA/
[13:19:27] <Geth> ¬¶ ecosystem: 
[13:19:29] <Geth> ¬¶ ecosystem: - Aria      blob/main/archive/A/Aria/Aria:ver<0.1.4>:auth<github:palapitta>.tar.gz
[13:19:31] <Geth> ¬¶ ecosystem: - Bencode   blob/main/archive/B/Bencode/Bencode:ver<0.1.1>:auth<github:palapitta>.tar.gz
[13:19:33] <Geth> ¬¶ ecosystem: - Movieinfo blob/main/archive/M/Movieinfo/Movieinfo:ver<0.1.2>:auth<github:palapitta>.tar.gz
[13:19:35] <Geth> ¬¶ ecosystem: - Weather   blob/main/archive/W/Weather/Weather:ver<0.2.1>:auth<github:palapitta>.tar.gz
[13:19:37] <Geth> ¬¶ ecosystem: review: https://github.com/Raku/ecosystem/commit/83705f8b22
[13:19:53] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[13:30:28] *** Joins: lichtkind__ (~lichtkind@p200300d0a72272ae79347d929697d081.dip0.t-ipconnect.de)
[13:37:38] <lizmat> I guess we could consider moving these modules to raku-community-modules
[13:37:54] <lizmat> well, re-instating would be a better word, I guess
[13:48:42] <frost> Just out of curiosity, in raku, the C style loop `loop (my $i = 0; $i < 10; $i++)`Ôºå why is $l outside the scope here
[13:50:51] <moon-child> context?
[13:50:56] <moon-child> what is $l?
[13:52:54] *** Quits: p6steve (~stephenro@host81-157-30-219.range81-157.btcentralplus.com) (Ping timeout: 256 seconds)
[13:54:35] *** Joins: p6steve (~stephenro@host81-157-30-219.range81-157.btcentralplus.com)
[14:07:25] <lizmat> frost generally people expect the counter to be available *after* a C-style loop ?
[14:08:06] <lizmat> otherwise you would just use for ^10 -> $i { }
[14:08:41] <moon-child> oh, I see.  I definitely find that behaviour surprising
[14:08:57] <moon-child> in c: for (int i = 0; i < 10; i++); //i is no longer in scope
[14:09:18] <moon-child> if you want it to remain in scope, then declare it externally, as in  int i; for (i = 0; i < 10; i++); //i remains in scope
[14:10:16] <moon-child> However it is somewhat consistent, given you can say e.g. '3 + (my $x = 2)' and $x will be visible outside
[14:21:57] *** Quits: p6steve (~stephenro@host81-157-30-219.range81-157.btcentralplus.com) (Ping timeout: 240 seconds)
[14:22:48] *** Joins: p6steve (~stephenro@host81-157-30-219.range81-157.btcentralplus.com)
[14:39:32] <frost> sorry, J=just dealt with something
[14:40:12] <frost> yeah, moon-child, it is different from C
[14:43:59] <holyghost> e.g. my $I = 0; BTW (undef)
[14:45:07] <holyghost> I didn't drink for 2 days, so it's going better for me (doctor's orders), I don't know if I want to take vacation
[14:45:27] <holyghost> Just saying for old time's sake
[14:46:21] *** Joins: stoned75 (~seb@78.203.129.116)
[14:56:57] <frost> lizmat: I see, but for me, I am more familiar with C.
[14:57:26] <lizmat> well, I guess that's a behaviour inherited from Perl then
[14:57:34] <frost> In C, I can use the same loop statement `for (int i = 0; i < 10; i++)` many time in the same¬† scope
[14:58:07] <frost> In raku, if i use the C style loop, i have to define differet counter
[14:58:12] <lizmat> in Raku, idiomatically you'd use:   for ^10 -> int \i { }
[14:58:30] <frost> yeah, it's so nice
[14:58:59] <frost> i ask this just for curiosity
[14:59:07] <frost> lizmat thanks
[14:59:09] *** Quits: p6steve (~stephenro@host81-157-30-219.range81-157.btcentralplus.com) (Ping timeout: 268 seconds)
[14:59:38] <moon-child> I don't really know perl, but in a basic test it does not seem to behave that way eitehr
[14:59:40] <moon-child> either
[14:59:46] <lizmat> frost: sure, but the "bleeding into outer scope" is the reason we have a "loop" in Raku, afaik
[15:00:15] <lizmat> well, then I'd say @LARRY changed their mind on that  :-)
[15:00:23] <frost> wow
[15:00:38] <frost> interesting ;)
[15:00:57] <lizmat> but really, the C-style loop exists in Raku *because* of the bleeding of the counter
[15:01:25] <lizmat> I can't really see another really valid reason for it
[15:04:47] *** Joins: Altai-man (~sena_kun_@static-84-42-198-52.net.upcbroadband.cz)
[15:06:03] *** Quits: Xliff_ (~Cliff@pool-71-255-227-73.washdc.east.verizon.net) (Read error: Connection reset by peer)
[15:08:01] *** Joins: p6steve (~stephenro@host81-157-30-219.range81-157.btcentralplus.com)
[15:12:18] <stoned75> hi
[15:14:24] <frost> stoned75 hello
[15:17:04] <stoned75> I was looking after documenting IO::Path.add(@list), cf. https://github.com/rakudo/rakudo/pull/4472, then I was wondering about what is planned for IO::Path.child(), which right now is documented as "alias for .add", when it is not anymore ':)
[15:17:25] <stoned75> and considering https://github.com/rakudo/rakudo/commit/8b94d8d27985c604c87c9730735c14ca565646e7
[15:17:50] <Voldenet> compare HEAD my $n = 0; for ^10 -> \i { $n += i }; ||| my $n = 0; for ^10 -> $i { $n += $i }
[15:18:18] <lizmat> stoned75: I'm not touching that anymore
[15:18:22] <Voldenet> benchable6: compare HEAD my $n = 0; for ^10 -> \i { $n += i }; ||| my $n = 0; for ^10 -> $i { $n += $i }
[15:18:22] <benchable6> Voldenet, starting to benchmark the 1 given commit
[15:18:25] <stoned75> arf ':)
[15:18:26] <benchable6> Voldenet, https://gist.github.com/4a59f84f2d529c858e46c29c5ac64547
[15:20:49] <Voldenet> \i seems significantly slower than $i in this context
[15:34:48] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[15:36:39] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[15:36:42] <holyghost> for (my $i = 0; $i < 1024; $i++) {}
[15:37:30] <lizmat> Voldenet: that's because the standard way of `for Range` is highly statically optimised
[15:38:19] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[15:39:46] <Voldenet> Oh, so it isn't the case for every iterable
[15:40:43] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[15:49:10] <holyghost> scsi, loop (my $i = 0; $i < 1024; $i ++) {}
[16:08:49] *** Joins: ggoebel (~ggoebel@107-134-157-130.lightspeed.tukrga.sbcglobal.net)
[16:50:09] *** Joins: monkey_ (~user@190.104.116.153)
[16:54:14] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[16:55:24] *** Joins: getimiskon (~getimisko@2a02:587:a024:7200:32d1:6bff:fe91:3cc9)
[16:57:20] *** Joins: monkey_ (~user@190.104.116.153)
[17:01:36] *** Quits: [Coke] (~coke@172.58.238.174) (Ping timeout: 256 seconds)
[17:04:05] *** Joins: [Coke] (~coke@172.58.235.197)
[17:05:02] *** Quits: getimiskon (~getimisko@2a02:587:a024:7200:32d1:6bff:fe91:3cc9) (Quit: WeeChat 3.3)
[17:25:31] *** Joins: getimiskon (~getimisko@2a02:587:a024:7200:32d1:6bff:fe91:3cc9)
[17:29:30] *** Joins: guifa (~guifa@pool-71-255-232-11.washdc.east.verizon.net)
[17:40:19] *** Quits: lichtkind__ (~lichtkind@p200300d0a72272ae79347d929697d081.dip0.t-ipconnect.de) (Remote host closed the connection)
[17:41:17] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[17:53:23] *** Joins: Guest26 (~Guest26@31.183.225.255)
[17:53:40] *** Quits: Guest26 (~Guest26@31.183.225.255) (Client Quit)
[18:07:57] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 240 seconds)
[18:16:29] *** Joins: jgaz (~jgaz@2600:8805:d980:7620:2e0:4cff:fe00:e201)
[18:17:05] *** Quits: ggoebel (~ggoebel@107-134-157-130.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 268 seconds)
[18:27:22] *** Quits: getimiskon (~getimisko@2a02:587:a024:7200:32d1:6bff:fe91:3cc9) (Quit: WeeChat 3.3)
[18:36:57] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:995c:e86e:470c:8a37) (Ping timeout: 240 seconds)
[18:47:24] *** Joins: getimiskon (~getimisko@2a02:587:a024:7200:32d1:6bff:fe91:3cc9)
[18:57:43] *** Joins: Sgeo (~Sgeo@user/sgeo)
[19:02:40] *** Joins: monkey_ (~user@190.104.116.153)
[19:18:16] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[19:20:53] *** Joins: monkey_ (~user@190.104.116.153)
[19:31:39] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 250 seconds)
[19:37:44] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:b7fd:fa95:80d6:f41)
[19:45:26] *** Joins: ggoebel (~ggoebel@107-134-157-130.lightspeed.tukrga.sbcglobal.net)
[19:51:01] *** Quits: jgaz (~jgaz@2600:8805:d980:7620:2e0:4cff:fe00:e201) (Quit: Leaving)
[20:40:11] <thowe> Hi Raku folks.  How are you today?
[20:41:10] <tonyo> lizmat: did you checkout the fez orgs stuff?
[20:42:01] <lizmat> tonyo: didn't get around to it yet... almost ready with the Weekly, then one more advent post to finish before tomorrow...
[20:43:54] <lizmat> too many things to do, not enough time :-(
[20:51:01] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[20:51:01] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[20:54:37] <thowe> I love the advent calendar; I appreciate what goes into it.
[21:00:10] *** Quits: dg (~dgl@dg.wtf) (Ping timeout: 256 seconds)
[21:01:39] <guifa> lizmat: I'm almost done recoding timezones.  Pulled out the data/calculations, but still finishing up the last bit of C code conversion
[21:01:45] <guifa> they made a lot of changes since i last ported it
[21:06:38] *** Joins: jgaz (~jgaz@2600:8805:d980:7620:2e0:4cff:fe00:e201)
[21:37:18] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[21:39:24] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[21:45:24] *** Quits: Altai-man (~sena_kun_@static-84-42-198-52.net.upcbroadband.cz) (Quit: Leaving)
[21:51:56] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[22:00:58] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Quit: No Ping reply in 180 seconds.)
[22:01:07] <tonyo> .notable https://deathbykeystroke.com/articles/20211220-fez-orgs-a-winter-solstice-miracle.html
[22:01:13] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[22:01:37] <lizmat> tonyo: talk about JIT publishing  :-()
[22:01:42] <tonyo> weekly: https://deathbykeystroke.com/articles/20211220-fez-orgs-a-winter-solstice-miracle.html
[22:01:43] <notable6> tonyo, Noted! (weekly)
[22:01:46] <lizmat> :-)) rather
[22:01:56] <lizmat> notable6: weekly reset
[22:01:56] <notable6> lizmat, Moved existing notes to ‚Äúweekly_2021-12-20T18:31:56Z‚Äù
[22:01:56] <tonyo> haha
[22:02:17] <tonyo> hard to keep track of the bots
[22:02:36] <tonyo> JJ asked me to do a `how to get started with fez` for the advent
[22:03:01] <lizmat> so, do you want me to import that into the Advent Calendar?
[22:03:04] <tonyo> i think tomorrow i'll write up a quick tut, may have to download mi6 and figure that out
[22:03:18] <lizmat> ok, gotcha
[22:03:21] <tonyo> the org one? nah, i'll just link it from the one i'm going to write tonight or tomorrow
[22:03:31] <lizmat> ok
[22:05:51] <[Coke]> raku -MFile::Temp -e1; # is there a way to do this that doesn't complain about sink?
[22:06:11] <lizmat> -e''
[22:06:45] <[Coke]> -e'' gives help usage.
[22:06:48] <[Coke]> -eNil works.
[22:07:11] <lizmat> -e ''
[22:07:16] <lizmat> note the whitespace
[22:07:48] <[Coke]> lizmat++
[22:08:27] * [Coke] uses File::Temp for something, duff++
[22:12:50] <guifa> I find it so weird that it's quite difficult to make natives constants
[22:13:11] *** Joins: mcmillhj (~mcmillhj@c-va-bf0f2b8e02-14356-1.tingfiber.com)
[22:13:13] <lizmat> guifa: I don't think you can atm
[22:13:37] <lizmat> the problem is that a native is a piece of memory that is not an object by itself
[22:13:51] <guifa> lizmat: my work around is to put them into a module called "Constants"
[22:13:53] <guifa> and then
[22:14:04] <lizmat> and pre-compilation needs objects, and constant are compile time construcrts
[22:14:19] <guifa> sub EXPORT {¬†my int $FOO = 0; Map: :$FOO }
[22:14:46] <lizmat> that would not make $FOO a constant: assigning to it would work
[22:14:54] <guifa> Right
[22:15:13] <guifa> It's not a true constant
[22:15:20] <lizmat> why do you need it to be a native ?
[22:15:27] <guifa> but where I 'use Constants'; the term "FOO" would appear, sans sigils
[22:15:56] <guifa> lizmat: porting C code that is designed with wrapping in mind. 
[22:17:06] <mcmillhj> Can someone explain the semantics of what is happening with `$depth` here? I kind of expected the _value_ of `$depth` to be copied into my array, not a reference.
[22:17:07] <mcmillhj> https://topaz.github.io/paste/#XQAAAQCjAQAAAAAAAAA2nkADArW+r3sfODmUvOztfOwXhQLylWzy+voFdzRPf3T8u2dynKyfu+ju+kSd7+TU1mNbt54nhgv59xW0p09mdN175mHU5ggz+mlGM1LVAt/TnMP9ptZeKDnOlpU5mMt4zDG8dOs1Qh7NqxvGnLnL3USnhj/jkRsNpLUrfb4lPL0obwvlqoTJoaA7iYsSx+TIt9aUC25N2VZZ6sVkzQi+9c5DEhe3wvbOyVWCySXFm0ElqSVSebbtNxGRZ3GeZGCF/Zr90DZH6ztgW8ABO6Gi/9g76wiiktr6HGP8BnUA
[22:17:28] <guifa> as much as I'd love to rewrite the code to be super Raku-ish, I had to rewrite stuff from scratch (in a very C-accented Raku) because it's nigh impossible to track the changes in the C code in my Rakuish version =\
[22:19:12] <guifa> mcmillhj: I believe it's because you've used push: (List)
[22:19:38] <guifa>     @snailfish.append: $c.Int, $depth;
[22:19:52] <guifa> that gives me [4, 4, 3, 4, 4, 3, 4, 2, 7, 2, 8, 4, 4, 4, 9, 3, 1, 2, 1, 2] as a result
[22:20:50] <mcmillhj> I actually want it to be a subarray, `push: [$c.Int, $depth]` appears to work. That is just confusing to me for some reason.
[22:22:53] <guifa> ah, you want to keep them in the subaray.  push: (+$c, +$depth) seems to work.
[22:23:05] <guifa> but the list doesn't copy values or anything
[22:23:28] <guifa> m: my $a = 0; my @b is List = $a, $a, $a; $a++; say @b;
[22:23:29] <camelia> rakudo-moar b5fb3628b: OUTPUT: ¬´(1 1 1)‚ê§¬ª
[22:23:37] <guifa> m: my $a = 0; my @b is Array = $a, $a, $a; $a++; say @b;
[22:23:37] <camelia> rakudo-moar b5fb3628b: OUTPUT: ¬´[0 0 0]‚ê§¬ª
[22:27:59] *** Quits: vodkra (~vodkra@user/vodkra) (Remote host closed the connection)
[22:28:17] *** Joins: vodkra (~vodkra@user/vodkra)
[22:28:25] <mcmillhj> thanks guifa
[22:29:11] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2021/12/20/2021-51-transiting/
[22:29:46] <guifa> lizmat++
[22:30:12] *** Quits: vodkra (~vodkra@user/vodkra) (Remote host closed the connection)
[22:30:28] *** Joins: vodkra (~vodkra@user/vodkra)
[22:41:09] <thowe> In the code at https://gist.github.com/bduggan/a929bd7a063a74f896507955dcb7b316 on lines 9 and 10, what does the *.f and *.d mean?  Are those globs of file names (seems not) or do those have special meaning to multi or IO::Path ?
[22:45:01] <thowe> or am I trying to bite off too much at once?  there's a lot going on there I don't quite get.
[22:49:02] <guifa> thowe: the * is a Whatever 
[22:49:10] <guifa> in this case, it refers to $f
[22:50:07] *** Joins: atroxaper (~atroxaper@178.49.194.113)
[22:50:28] <thowe> OK, but what is it doing?  how do *.f and *.d differ?  What are those?  How does it know which version of the function to run?
[22:50:35] <guifa> files(IO::Path $f where *.d) === subroutine "files" with a first argument of type IO::Path named $f, where it (* or $f) is a directory (.d) 
[22:51:12] <atroxaper> Hello, #raku
[22:51:16] <guifa> $file.d = is $file a directory?   $file.f = is $file a file ?
[22:52:53] * holyghost takes a few days of vacation
[22:53:00] <guifa> m: multi sub size (Int $a where $a < 10) {¬†say "small" }; multi sub size (Int $a where * ‚â• 10) {¬†say "big" }; size 5; size 15; size 1;
[22:53:01] <camelia> rakudo-moar b5fb3628b: OUTPUT: ¬´small‚ê§big‚ê§small‚ê§¬ª
[22:53:15] <guifa> that might make it a bit clearer what's going on
[23:02:21] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 276 seconds)
[23:03:47] *** Joins: tejr (~tejr@user/tejr)
[23:05:48] <thowe> OK, so those are something specific to IO::Path then?  Just trying to figure out where to look at docs to understand them.
[23:07:41] <thowe> Ah I see, method f and method d...
[23:09:24] <thowe> wild
[23:14:45] <guifa> yup, exactly.  You wouldn't be able to use .d/.f on most other things
[23:20:02] <holyghost> Here's the best I wrote in 5 years chosen by my admin, I put it online here : http://sf.net/projects/bubblesrc. The user login features later projects
[23:20:24] <holyghost> 5 years, 5 years ago :-)
[23:20:51] <holyghost> We posted links back in the day at WF, so there you go
[23:22:11] *** Quits: daxim (~daxim@2a02:b18:c13b:28:42b0:76ff:fe7b:7663) (Ping timeout: 250 seconds)
[23:31:23] *** Quits: seednode (~seednode@user/seednode) (Quit: Ping timeout (120 seconds))
[23:31:45] *** Joins: seednode (~seednode@user/seednode)
[23:35:15] *** Joins: daxim (~daxim@2a02:b18:c13b:28:42b0:76ff:fe7b:7663)
[23:38:58] <thowe> guifa++
[23:50:46] *** Joins: patrickb (~quassel@55d4db19.access.ecotel.net)
[23:50:53] *** Quits: atroxaper (~atroxaper@178.49.194.113) (Remote host closed the connection)
[23:51:22] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
