[00:02:46] *** Joins: roshanavand (~roshanava@p200300d47f01a3006ae26b065900f0f0.dip0.t-ipconnect.de)
[00:02:51] *** Quits: fredlinhares (~fredlinha@186.206.254.59) (Quit: WeeChat 3.4)
[00:02:56] *** Quits: _ht (~quassel@231-169-21-31.ftth.glasoperator.nl) (Remote host closed the connection)
[00:08:41] *** Quits: John_Ivan (~John_Ivan@31-187-33-75.dynamic.upc.ie) (Read error: Connection reset by peer)
[00:11:03] *** Joins: John_Ivan (~John_Ivan@31-187-33-75.dynamic.upc.ie)
[00:38:28] *** Quits: yassernasc (~yassernas@ec2-54-87-145-249.compute-1.amazonaws.com) (Remote host closed the connection)
[00:55:32] *** Joins: jpw (~jpw@user/jpw)
[00:56:43] *** Quits: roshanavand (~roshanava@p200300d47f01a3006ae26b065900f0f0.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[01:05:57] *** Parts: trillp (~trillp@2001:19f0:6401:72e:c092:4829:25d6:b788) (WeeChat 3.4)
[01:15:18] <leah2> camping!
[01:16:44] <adam12> leah2: Yeah! Forgot about that. Camping unabridged is a nice read on a cold day.
[01:25:18] <ox1eef> camping was the idea that a class represented an action rather than a controller?
[01:42:14] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[02:11:09] *** Quits: mdemo (~mdemo@user/mdemo22) (Quit: The Lounge - https://thelounge.github.io)
[02:13:02] *** Joins: mdemo (~mdemo@user/mdemo22)
[02:23:29] *** Quits: mdemo (~mdemo@user/mdemo22) (Quit: The Lounge - https://thelounge.github.io)
[02:25:08] *** Joins: mdemo (~mdemo@user/mdemo22)
[02:26:21] *** Quits: mdemo (~mdemo@user/mdemo22) (Client Quit)
[02:37:15] *** Quits: pgib (~textual@173.38.117.89) (Ping timeout: 256 seconds)
[02:45:31] *** Quits: ox1eef (~0x1eef@user/ox1eef) (Quit: Leaving)
[02:45:48] *** Joins: ox1eef (~0x1eef@user/ox1eef)
[02:45:59] *** Quits: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi) (Ping timeout: 256 seconds)
[02:47:48] *** Quits: e2 (e2@sponsored.by.bnc4you.xyz) (Quit: Stable ZNC provider #bnc4you)
[02:58:41] *** Joins: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi)
[03:02:07] *** Joins: mdemo (~mdemo@user/mdemo22)
[03:15:59] *** Quits: exondation (~wadii@2a01:e34:eca5:6c30:8dc3:8ce7:3b3f:26d6) (Ping timeout: 250 seconds)
[03:16:53] *** Joins: e2 (e2@sponsored.by.bnc4you.xyz)
[03:19:31] *** Quits: dviola (~diego@user/dviola) (Ping timeout: 256 seconds)
[03:37:36] *** Quits: entropie (~mit@ip5f59986f.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[03:45:30] *** Quits: infinityfye (~infinityf@156.212.9.209) (Quit: Leaving)
[03:50:25] *** Joins: entropie (~mit@ip5f59986f.dynamic.kabel-deutschland.de)
[04:03:50] *** Joins: dviola (~diego@187.39.23.21)
[04:18:18] *** Quits: mollerup (~nmollerup@customer-2a00-7660-1612-0168-cfa8-be86-5a22-ee27.ip6.gigabit.dk) (Ping timeout: 268 seconds)
[04:26:57] *** Quits: dviola (~diego@187.39.23.21) (Ping timeout: 240 seconds)
[04:27:48] *** Joins: dviola (~diego@187.39.23.21)
[04:32:57] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 240 seconds)
[04:48:00] *** Joins: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net)
[05:06:16] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[05:06:57] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:16:29] *** Quits: mixfix41 (~sdenyninn@user/mixfix41) (Read error: Connection reset by peer)
[05:30:06] *** Quits: libsys (~libsys@186.105.187.144) (Remote host closed the connection)
[05:33:38] *** Joins: libsys (~libsys@186.105.187.144)
[05:36:53] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[05:38:36] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[05:50:09] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[05:51:57] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[05:53:08] *** Quits: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net) (Remote host closed the connection)
[05:53:41] *** Joins: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net)
[05:58:18] *** Quits: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net) (Remote host closed the connection)
[05:58:30] *** Joins: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net)
[05:59:33] *** Quits: weaksauce (~textual@ip68-5-101-101.oc.oc.cox.net) (Ping timeout: 256 seconds)
[06:01:15] *** Joins: weaksauce (~textual@ip68-5-101-101.oc.oc.cox.net)
[06:02:45] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[06:03:25] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[06:08:33] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[06:09:53] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[06:23:14] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Read error: Connection reset by peer)
[06:29:18] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[06:34:07] *** Quits: weaksauce (~textual@ip68-5-101-101.oc.oc.cox.net) (Ping timeout: 256 seconds)
[06:36:31] *** Joins: weaksauce (~textual@ip68-5-101-101.oc.oc.cox.net)
[06:38:09] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[06:40:23] *** Quits: unyu (~pyon@user/pyon) (Quit: brb)
[07:13:23] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Read error: Connection reset by peer)
[07:18:40] *** Quits: rms2511 (~rrrrrrrrr@107-138-155-103.lightspeed.rlghnc.sbcglobal.net) (Quit: Leaving)
[07:18:46] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[07:35:37] *** Quits: polishdub (~polishdub@ip72-208-203-185.ph.ph.cox.net) (Ping timeout: 240 seconds)
[07:38:00] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: neshpion)
[07:46:42] *** Joins: polishdub (~polishdub@ip72-208-203-185.ph.ph.cox.net)
[07:49:33] *** Quits: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net) (Remote host closed the connection)
[07:49:58] *** Joins: bluedust (~bluedust@103.160.194.110)
[07:54:17] *** Quits: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed) (Ping timeout: 240 seconds)
[08:38:47] *** Joins: reset (~reset@user/reset)
[08:49:45] *** Quits: bluedust (~bluedust@103.160.194.110) (Remote host closed the connection)
[08:50:19] *** Joins: bluedust (~bluedust@103.160.194.110)
[08:52:40] *** Quits: polishdub (~polishdub@ip72-208-203-185.ph.ph.cox.net) (Quit: leaving)
[10:23:17] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[10:25:47] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[10:57:13] *** Joins: bluedust_ (~bluedust@59.89.210.27)
[11:00:04] *** Joins: teclator (~quassel@85.155.180.70.dyn.user.ono.com)
[11:00:17] *** Quits: bluedust (~bluedust@103.160.194.110) (Ping timeout: 240 seconds)
[11:05:16] *** Joins: _ht (~quassel@231-169-21-31.ftth.glasoperator.nl)
[11:20:07] *** Quits: libsys (~libsys@186.105.187.144) (Read error: Connection reset by peer)
[11:20:15] *** Joins: libsys (~libsys@186.105.187.144)
[11:20:47] *** Quits: bluedust_ (~bluedust@59.89.210.27) (Read error: Connection reset by peer)
[11:20:59] *** Joins: bluedust (~bluedust@103.160.194.110)
[11:46:56] *** Joins: Rounin (~david@84.212.130.215)
[11:50:20] *** Joins: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed)
[11:56:57] *** Quits: _ht (~quassel@231-169-21-31.ftth.glasoperator.nl) (Remote host closed the connection)
[11:59:31] *** Joins: roshanavand (~roshanava@p200300d47f01a3006ae26b065900f0f0.dip0.t-ipconnect.de)
[12:11:51] *** Quits: bluedust (~bluedust@103.160.194.110) (Remote host closed the connection)
[12:14:21] *** Quits: goepsilongo (~goepsilon@cpe-74-73-86-74.nyc.res.rr.com) (Ping timeout: 256 seconds)
[12:14:37] *** Quits: roshanavand (~roshanava@p200300d47f01a3006ae26b065900f0f0.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[12:15:26] *** Joins: goepsilongo (~goepsilon@cpe-74-73-86-74.nyc.res.rr.com)
[12:20:21] *** Joins: exondation (~wadii@2a01:e34:eca5:6c30:fd40:bbe7:5e9a:9bd4)
[12:24:39] *** Joins: TomyWork (~TomyLobo@p200300e80f00670039d5bb48d657c78c.dip0.t-ipconnect.de)
[12:31:24] *** Joins: Aylat (~Aylat@33.red-83-35-103.dynamicip.rima-tde.net)
[12:31:24] *** Quits: Aylat (~Aylat@33.red-83-35-103.dynamicip.rima-tde.net) (Changing host)
[12:31:24] *** Joins: Aylat (~Aylat@user/Aylat)
[12:34:38] *** Quits: cout_ (~cout@li941-240.members.linode.com) (Ping timeout: 260 seconds)
[12:34:46] *** Joins: cout (~cout@li941-240.members.linode.com)
[12:39:53] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[12:40:18] *** Quits: dviola (~diego@187.39.23.21) (Changing host)
[12:40:18] *** Joins: dviola (~diego@user/dviola)
[12:41:17] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[12:42:34] *** Parts: Aylat (~Aylat@user/Aylat) (Leaving)
[12:52:45] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 250 seconds)
[12:56:37] *** Quits: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed) (Ping timeout: 240 seconds)
[13:00:42] *** Joins: bluedust (~bluedust@103.160.194.110)
[13:40:52] *** Quits: m_antis (~znc_admin@ool-44c09a21.dyn.optonline.net) (Ping timeout: 250 seconds)
[13:43:57] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[13:44:25] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:09:00] *** Joins: gproto23 (~gproto23@user/gproto23)
[14:20:05] *** Joins: rando25892 (~homefame@user/rando25892)
[14:21:09] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[14:22:25] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:27:19] *** Joins: bluedust_ (~bluedust@59.89.210.27)
[14:30:11] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[14:30:37] *** Quits: bluedust (~bluedust@103.160.194.110) (Ping timeout: 240 seconds)
[14:33:35] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:58:16] *** Joins: infinityfye (~infinityf@156.212.9.209)
[15:04:12] *** Quits: gproto23 (~gproto23@user/gproto23) (Quit: Leaving)
[15:04:50] *** Joins: gproto23 (~gproto23@user/gproto23)
[15:11:57] *** Joins: roshanavand (~roshanava@p200300d47f01a3006ae26b065900f0f0.dip0.t-ipconnect.de)
[15:25:31] *** Joins: m_antis (~znc_admin@ool-44c09a21.dyn.optonline.net)
[15:30:45] *** Quits: duds- (~duds-@user/duds) (Ping timeout: 256 seconds)
[15:36:27] *** Quits: John_Ivan (~John_Ivan@31-187-33-75.dynamic.upc.ie) (Remote host closed the connection)
[15:36:43] *** Joins: John_Ivan (~John_Ivan@31-187-33-75.dynamic.upc.ie)
[15:39:09] *** Quits: exondation (~wadii@2a01:e34:eca5:6c30:fd40:bbe7:5e9a:9bd4) (Ping timeout: 250 seconds)
[15:39:44] *** Joins: exondation (~wadii@2a01:e34:eca5:6c30:990:7901:1d2:d8e7)
[15:42:57] *** Joins: unyu (~pyon@user/pyon)
[15:45:21] *** Joins: duds- (~duds-@user/duds)
[15:54:33] *** Quits: duds- (~duds-@user/duds) (Ping timeout: 256 seconds)
[15:57:30] *** Joins: duds- (~duds-@user/duds)
[15:59:25] *** Quits: roshanavand (~roshanava@p200300d47f01a3006ae26b065900f0f0.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[16:07:47] *** Joins: roshanavand (~roshanava@p200300d47f01a3006ae26b065900f0f0.dip0.t-ipconnect.de)
[16:09:17] *** Quits: bluedust_ (~bluedust@59.89.210.27) (Remote host closed the connection)
[16:21:00] *** Joins: bluedust (~bluedust@59.89.210.27)
[16:29:21] *** Quits: cornduck (~cornduck@gateway/tor-sasl/cornduck) (Remote host closed the connection)
[16:29:40] *** Joins: cornduck (~cornduck@gateway/tor-sasl/cornduck)
[16:42:37] *** Quits: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi) (Ping timeout: 240 seconds)
[16:43:17] *** Joins: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi)
[17:33:09] *** Quits: John_Ivan (~John_Ivan@31-187-33-75.dynamic.upc.ie) (Read error: Connection reset by peer)
[17:34:58] *** Joins: John_Ivan (~John_Ivan@31-187-33-75.dynamic.upc.ie)
[18:15:17] *** Quits: John_Ivan (~John_Ivan@31-187-33-75.dynamic.upc.ie) (Read error: Connection reset by peer)
[18:15:40] *** Joins: John_Ivan (~John_Ivan@31-187-33-75.dynamic.upc.ie)
[18:27:45] *** Quits: bluedust (~bluedust@59.89.210.27) (Read error: Connection reset by peer)
[18:27:59] *** Joins: bluedust (~bluedust@103.160.194.110)
[19:08:03] *** Joins: bluedust_ (~bluedust@59.89.210.27)
[19:11:29] *** Quits: bluedust (~bluedust@103.160.194.110) (Ping timeout: 250 seconds)
[19:29:00] *** Joins: moons (~quassel@pool-100-4-188-6.albyny.fios.verizon.net)
[19:37:41] <IsoLinCHiP> mooff, havenwood : I recently learned of the existance of refinements (without having fully grasped them yet). The way I interpreted them, they allow a scoped modification of Classes. So would they possibly allow having shorthands for public_method(false) within for example an interactive pry session, without interfering with the actual code being inspected?
[19:39:12] <IsoLinCHiP> Hmm an list of alternatives to rails for my reading list, nice :-)
[19:43:18] <IsoLinCHiP> Im trying to migrate a brittle shell script from ferrying files between servers via SCP. I'd like to convert it to ruby, but I get the impression NET::SCP might not be up to the job. I need something that is able to liste remote file names and also to up/download files aswell as remotely rename or unlink them. Any suggestions?
[19:47:54] <ox1eef> IsoLinCHiP: id say it is fair to say refinements are a failed experiment
[19:51:26] *** Quits: moons (~quassel@pool-100-4-188-6.albyny.fios.verizon.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:51:33] <IsoLinCHiP> Are they pending removal - not worth getting used to - or is it likely they will be reworked?
[19:54:04] *** Joins: fredlinhares (~fredlinha@186.206.254.59)
[19:55:03] <IsoLinCHiP> I thought it was an interesting idea. Ive had a few cases - a long time ago - where I wanted to have Hash.slice behaviour, before it was a core method. So I used to monkey patch Hash for small scale projects, where I had few dependancies, and then started missing it in larger projects where it felt risky to monkeypatch Hash. So I was quite interested in refinements.
[19:57:10] <IsoLinCHiP> My solution after that was constructing a new object from the Hash, which had those methods I wanted, but then everything slowed to a crawl, because I was taxing the garbage collector with constantly creating and deleting small objects.
[19:57:34] <IsoLinCHiP> Still dont really have a good answer to it.
[19:59:40] <IsoLinCHiP> kinda mixing functional and OO style to get around the performance problems, but not very happy with the readability.
[20:00:20] <havenwood> IsoLinCHiP: Yup, good case for refinements. If they'd existed from the start they'd have much more adoption. I do use them and am glad they exist.
[20:02:07] <havenwood> IsoLinCHiP: They're not pending removal and are being improved release after release. There are several open proposals for making them easier yet to use anonymously, etc.
[20:04:44] <havenwood> IsoLinCHiP: You can use refinements anonymously now with Module.new but it could be more slick. For example, this works:
[20:04:47] <havenwood> using Module.new { refine(Object) { def your_methods = public_methods(false) } }
[20:05:08] <havenwood> 'foo'.your_methods
[20:10:03] <IsoLinCHiP> havenwood: intersting, thx. :) Still need a quiet moment to figure out the scoping interactions and stuff. :)
[20:12:25] <IsoLinCHiP> ox1eef: Id be curious though, what makes you think they are a failed experiment - without wanting to start a heated debate. Do they cause issues somewhere, or do you just think adoption has been to low to call them successful?
[20:12:44] *** Joins: lim (~lim@cpc104498-sgyl40-2-0-cust215.18-2.cable.virginm.net)
[20:18:41] <adam12> They have some edge cases that make them difficult to use.
[20:19:19] <adam12> I'd almost rather a utility method on a module or class than a refinement. Utils.blank?(str) vs using Blank; str.blank?
[20:20:17] *** Quits: infinityfye (~infinityf@156.212.9.209) (Ping timeout: 240 seconds)
[20:20:30] <havenwood> IsoLinCHiP: An aside, but now in 3.1 you can use #import_methods too.
[20:20:37] <havenwood> module IsoLinCHiP def your_methods = public_methods(false) end
[20:20:49] <havenwood> using Module.new { refine(Object) { import_methods IsoLinCHiP } }
[20:22:34] <havenwood> https://bugs.ruby-lang.org/issues/17429
[20:24:11] <havenwood> Refinements landed in an experimental form then changed and nobody felt comfortable using them. They're still changing but more stable now. Seems they're heading towards being usable rather than removed but still some rough edges.
[20:24:32] <havenwood> adam12: Yeah, that's what limits my use.
[20:24:47] <adam12> havenwood: I think the ruby-next use of refinements is brilliant tho
[20:25:25] <adam12> I'm commonly integrated into teams that have many juniors and few Ruby experts, and explaining Refinements to them is always a struggle. They understand a utility method easily tho, and it works in their repl :O
[20:25:27] <havenwood> Yeah, glad they exist.
[20:25:32] <ox1eef> IsoLinCHiP: they didnt pick up much traction in the community. i cant think of one library taking advantage of them in their public APIs.
[20:26:30] <havenwood> ox1eef: They really weren't safe to adopt for years, and the memo that they're usable now never went out. ;P
[20:27:05] <ox1eef> most notably rails did not use them at all, and while rails is not ruby, it is notable they didnt pick them up and probably the biggest user of monkeypatches.
[20:27:09] <havenwood> Not safe in the sense that they broke every Ruby release since they were experimental.
[20:27:35] <havenwood> Now they work just fine across major versions. ¯\_(ツ)_/¯ 
[20:27:55] <havenwood> ox1eef: I think Rails prides itself in its significant monkey patch.
[20:28:08] <ox1eef> indeed, it's their perspective
[20:28:11] <havenwood> Just only Rails can do that or the world devolves.
[20:28:33] <havenwood> I'm glad we can dip in refinements when we'd otherwise dabble in monkey patching.
[20:28:35] *** Quits: bluedust_ (~bluedust@59.89.210.27) (Ping timeout: 256 seconds)
[20:28:42] <ox1eef> i can sorta understand, after all monkey patches are a language feature but sometimes spoke of as bad as globals, etc.
[20:29:02] <ox1eef> dont let one persons opinion drive you when it comes to them
[20:29:32] <havenwood> I am doing that, but I'm the person whose opinion is driving me.
[20:29:39] <nakilon> rules are made for those who can't work without them
[20:29:53] <ox1eef> i wouldnt say i strongly like them, but they have their place now and then
[20:30:01] <nakilon> don't remember who said that
[20:30:04] <havenwood> I'd pretty much agree.
[20:32:18] <havenwood> nakilon: Metaprogramming and macros are anarchy, which is appealing as an anarchist.
[20:32:41] <havenwood> "Ruby, you'll shoot your eye out."
[20:32:46] <havenwood> Don't hear that anymore these days...
[20:33:01] <ox1eef> if we're giving languages personas i always found java to be a corporate suit
[20:33:19] <havenwood> don't personify languages, they hate it when you do that
[20:33:50] <IsoLinCHiP> Hmm, ok. That argument about explaining them to juniors is kind of relevant. Guess Ill stick to utility methods for team projects for now. 
[20:34:55] <IsoLinCHiP> havenwood: Lol :D @personifying languages
[20:35:39] *** Quits: lim (~lim@cpc104498-sgyl40-2-0-cust215.18-2.cable.virginm.net) (Remote host closed the connection)
[20:39:31] <IsoLinCHiP> Trying to figure out how to configure ActiveJob's logging without using the rails framework as a total, reminded me, how easy to read code can be, if you know where it is. But trying to find out how logging was hooked up when seeing the code the first time, was a bit of a hunt with all the meta programming involved there. Its clean, once you know your way around it, but not simple. ;-)
[20:42:16] <IsoLinCHiP> Im meanwhile even more surprised, seeing the hook'ability of ActiveJob, that nooone seems to have built a tracking plugin around it. As in a backlog of issued and completed jobs.
[20:44:00] <IsoLinCHiP> Ah, NET::SFTP might fit the bill, I seemed to have missed that.
[21:20:04] *** Quits: aeris (~aeris@user/aeris) (Remote host closed the connection)
[21:20:18] *** Joins: aeris (~aeris@user/aeris)
[21:37:19] *** Joins: infinityfye (~infinityf@156.212.9.209)
[21:49:58] *** Joins: bluedust (~bluedust@117.193.122.44)
[21:50:18] *** Quits: roshanavand (~roshanava@p200300d47f01a3006ae26b065900f0f0.dip0.t-ipconnect.de) (Remote host closed the connection)
[21:53:27] *** Quits: bluedust (~bluedust@117.193.122.44) (Remote host closed the connection)
[21:53:34] *** Quits: TomyWork (~TomyLobo@p200300e80f00670039d5bb48d657c78c.dip0.t-ipconnect.de) (Quit: Leaving)
[21:56:25] *** Quits: exondation (~wadii@2a01:e34:eca5:6c30:990:7901:1d2:d8e7) (Ping timeout: 256 seconds)
[22:23:39] *** Joins: goldfish (~goldfish@user/goldfish)
[22:28:51] *** Joins: jpw (~jpw@user/jpw)
[22:39:03] *** Quits: John_Ivan (~John_Ivan@31-187-33-75.dynamic.upc.ie) (Read error: Connection reset by peer)
[23:04:58] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[23:06:06] *** Joins: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed)
[23:19:10] *** Quits: weaksauce (~textual@ip68-5-101-101.oc.oc.cox.net) (Read error: Connection reset by peer)
[23:19:46] *** Joins: weaksauce (~textual@ip68-5-101-101.oc.oc.cox.net)
[23:23:07] *** Quits: duds- (~duds-@user/duds) (Ping timeout: 256 seconds)
[23:24:23] *** Joins: duds- (~duds-@user/duds)
[23:39:13] *** Joins: et09 (~et09@user/et09)
[23:39:31] <et09> what's the actual standard for misc version strings like "^0.2.3" or "~>5.4.2" ? it's not semver itself right?
[23:40:21] *** Quits: hesco3 (~hesco@209.195.11.75) (Ping timeout: 250 seconds)
[23:40:45] <et09> n/m i see it 
[23:41:45] *** Joins: hesco3 (~hesco@209.195.11.75)
[23:47:18] *** Quits: entropie (~mit@ip5f59986f.dynamic.kabel-deutschland.de) (Quit: "")
[23:47:33] *** Joins: entropie (~mit@ip5f59986f.dynamic.kabel-deutschland.de)
[23:53:43] *** Quits: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed) (Ping timeout: 256 seconds)
